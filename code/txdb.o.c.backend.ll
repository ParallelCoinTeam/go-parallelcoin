source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_1b4ec_type = type { void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, i32 (i32*)*, i32 (i32)* }
%vtable_1b5dc_type = type { i32 (i32*)*, i32 (i32)*, i32 (i8)* }
%vtable_1b64c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_1b6ac_type = type { i32 (i32*)*, i32 (i32)* }
%Slice.0 = type { i8*, i32 }
%Slice = type { i8*, i32 }
%Slice.1 = type { i8*, i32 }

@cf = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@ss = internal unnamed_addr global i16 0
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@global_var_8.1178 = constant i32 138775296
@global_var_1c.1180 = constant i32 5281
@global_var_3df5.1182 = constant [11 x i8] c"chainstate\00"
@global_var_20.1184 = constant i32 -196769536
@global_var_3e38.1185 = constant [6 x i8] c"index\00"
@global_var_3e3e.1186 = constant [7 x i8] c"blocks\00"
@global_var_ffff.1188 = constant i32 -400292727
@global_var_1b70c.1190 = constant i32 0
@global_var_1b6f4.1191 = constant i32 0
@global_var_1b6d4.1192 = constant i32 14970
@global_var_9.1193 = constant i32 -1995946613
@global_var_3d20.1197 = constant [34 x i8] c"CDataStream::read() : end of data\00"
@global_var_1b60c.1200 = constant i32 20168
@global_var_3e89.1209 = constant [16 x i8] c"vector::reserve\00"
@global_var_1b6bc.1211 = constant i32 35206
@global_var_1b664.1213 = constant i32 57177
@global_var_1b678.1214 = constant i32 113122
@global_var_3ef1.1219 = constant [24 x i8] c"vector::_M_range_insert\00"
@global_var_3f09.1220 = constant [23 x i8] c"vector::_M_fill_insert\00"
@global_var_19.1222 = constant i32 -1587176379
@global_var_3f4a.1224 = constant [28 x i8] c"vector<bool>::_M_insert_aux\00"
@global_var_fe.1225 = constant i32 41924
@0 = external global i32
@1 = internal constant [6 x i8] c"\89\E5\81\EC\98\00"
@global_var_1.1176 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0)
@2 = internal constant [3 x i8] c"\EC\98\00"
@global_var_4.1177 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@3 = internal constant [7 x i8] c"\89E\9Ce\A1\14\00"
@global_var_18.1179 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i32 0, i32 0)
@global_var_31.1187 = constant i8 -124
@global_var_5.1189 = constant i8 -104
@global_var_1b4ec.1181 = constant %vtable_1b4ec_type { void (i32, i32, i32)* @_ZN12CCoinsViewDB8GetCoinsERK7uint256R6CCoins, void (i32, i32, i32)* @_ZN12CCoinsViewDB8SetCoinsERK7uint256RK6CCoins, void (i32, i32)* @_ZN12CCoinsViewDB9HaveCoinsERK7uint256, void (i32)* @_ZN12CCoinsViewDB12GetBestBlockEv, void (i32, i32)* @_ZN12CCoinsViewDB12SetBestBlockEP11CBlockIndex, void (i32, i32, i32)* @_ZN12CCoinsViewDB10BatchWriteERKSt3mapI7uint2566CCoinsSt4lessIS1_ESaISt4pairIKS1_S2_EEEP11CBlockIndex, void (i32, i32)* @_ZN12CCoinsViewDB8GetStatsER11CCoinsStats, i32 (i32*)* @_ZN12CCoinsViewDBD1Ev, i32 (i32)* @_ZN12CCoinsViewDBD0Ev }
@global_var_1b5dc.1205 = constant %vtable_1b5dc_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32)* @_ZN5boost6system12system_errorD0Ev, i32 (i8)* @_ZNK5boost6system12system_error4whatEv }
@global_var_1b64c.1212 = constant %vtable_1b64c_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.1175, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_1b6ac.1210 = constant %vtable_1b6ac_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }

define i32 @_ZL15BatchWriteCoinsR13CLevelDBBatchRK7uint256RK6CCoins() local_unnamed_addr {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_1() {
dec_label_pc_1:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_8:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_e:
  ret void
}

define i32 @function_84() local_unnamed_addr {
dec_label_pc_84:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_84 = load i32, i32* %eax.global-to-local, align 4
  %v0_86 = load i32, i32* %ebp.global-to-local, align 4
  %v1_86 = add i32 %v0_86, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_86, i32* @ebp, align 4
  %v2_87 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_87 = zext i8 %v2_87 to i32
  %v5_87 = and i32 %v0_84, -256
  %v6_87 = or i32 %v3_87, %v5_87
  store i32 %v6_87, i32* %eax.global-to-local, align 4
  %v7_87 = load i32, i32* %esi.global-to-local, align 4
  %v8_87 = load i1, i1* %df.global-to-local, align 1
  %v9_87 = select i1 %v8_87, i32 -1, i32 ptrtoint (i8** @global_var_1.1176 to i32)
  %v10_87 = add i32 %v9_87, %v7_87
  store i32 %v10_87, i32* %esi.global-to-local, align 4
  %v1_8c = add i32 %v0_86, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -92)
  %v2_8c = inttoptr i32 %v1_8c to i32*
  %v3_8c = load i32, i32* %v2_8c, align 4
  store i32 %v3_8c, i32* %eax.global-to-local, align 4
  %v2_92 = call i32 @_ZN13CLevelDBBatch5EraseISt4pairIc7uint256EEEvRKT_(i32 %v3_8c, i32 %v6_87)
  store i32 %v2_92, i32* %eax.global-to-local, align 4
  %v0_97 = call i32 @function_102()
  store i32 %v0_97, i32* %eax.global-to-local, align 4
  ret i32 %v0_97
}

define i32 @function_99() local_unnamed_addr {
dec_label_pc_99:
  %v0_99 = load i32, i32* @ebp, align 4
  %v1_99 = add i32 %v0_99, -48
  %v1_9c = add i32 %v0_99, -96
  %v2_9c = inttoptr i32 %v1_9c to i32*
  %v3_9c = load i32, i32* %v2_9c, align 4
  %v1_9f = inttoptr i32 %v3_9c to i32*
  %v2_9f = load i32, i32* %v1_9f, align 4
  %v1_a5 = add i32 %v3_9c, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_a5 = inttoptr i32 %v1_a5 to i32*
  %v3_a5 = load i32, i32* %v2_a5, align 4
  %v1_ac = add i32 %v3_9c, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_ac = inttoptr i32 %v1_ac to i32*
  %v3_ac = load i32, i32* %v2_ac, align 4
  %v1_b3 = add i32 %v3_9c, 12
  %v2_b3 = inttoptr i32 %v1_b3 to i32*
  %v3_b3 = load i32, i32* %v2_b3, align 4
  %v1_ba = add i32 %v3_9c, 16
  %v2_ba = inttoptr i32 %v1_ba to i32*
  %v3_ba = load i32, i32* %v2_ba, align 4
  %v1_c1 = add i32 %v3_9c, 20
  %v2_c1 = inttoptr i32 %v1_c1 to i32*
  %v3_c1 = load i32, i32* %v2_c1, align 4
  %v1_c8 = add i32 %v3_9c, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_c8 = inttoptr i32 %v1_c8 to i32*
  %v3_c8 = load i32, i32* %v2_c8, align 4
  store i32 %v3_c8, i32* @ecx, align 4
  %v1_cf = add i32 %v3_9c, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_cf = inttoptr i32 %v1_cf to i32*
  %v3_cf = load i32, i32* %v2_cf, align 4
  %v11_e1 = call i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %v1_99, i8 99, i32 %v2_9f, i32 %v3_a5, i32 %v3_ac, i32 %v3_b3, i32 %v3_ba, i32 %v3_c1, i32 %v3_c8, i32 %v3_cf)
  %v0_e9 = load i32, i32* @ebp, align 4
  %v1_e9 = add i32 %v0_e9, -100
  %v2_e9 = inttoptr i32 %v1_e9 to i32*
  %v3_e9 = load i32, i32* %v2_e9, align 4
  %v1_f0 = add i32 %v0_e9, -48
  %v1_f7 = add i32 %v0_e9, -92
  %v2_f7 = inttoptr i32 %v1_f7 to i32*
  %v3_f7 = load i32, i32* %v2_f7, align 4
  %v3_fd = call i32 @_ZN13CLevelDBBatch5WriteISt4pairIc7uint256E6CCoinsEEvRKT_RKT0_(i32 %v3_f7, i32 %v1_f0, i32 %v3_e9)
  ret i32 %v3_fd

; uselistorder directives
  uselistorder i32 %v3_9c, { 1, 0, 3, 2, 5, 4, 6, 7 }
}

define i32 @function_102() local_unnamed_addr {
dec_label_pc_102:
  %v0_102 = load i32, i32* @ebp, align 4
  %v1_102 = add i32 %v0_102, -12
  %v2_102 = inttoptr i32 %v1_102 to i32*
  %v3_102 = load i32, i32* %v2_102, align 4
  %v1_105 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_105 = xor i32 %v1_105, %v3_102
  %v3_105 = icmp eq i32 %v2_105, 0
  store i32 %v2_105, i32* @eax, align 4
  br i1 %v3_105, label %bb, label %dec_label_pc_10e

bb:                                               ; preds = %dec_label_pc_102
  %v1_10c = call i32 @function_113()
  br label %dec_label_pc_10e

dec_label_pc_10e:                                 ; preds = %bb, %dec_label_pc_102
  %v2_10c = phi i32 [ %v1_10c, %bb ], [ %v2_105, %dec_label_pc_102 ]
  ret i32 %v2_10c
}

define i32 @function_113() local_unnamed_addr {
dec_label_pc_113:
  %v0_114 = load i32, i32* @eax, align 4
  ret i32 %v0_114
}

define void @BatchWriteHashBestChain(i32 %batch, i32 %hash) local_unnamed_addr {
dec_label_pc_115:
  %stack_var_-17 = alloca i8, align 1
  store i8 66, i8* %stack_var_-17, align 1
  %v2_13d = ptrtoint i8* %stack_var_-17 to i32
  %v3_14a = call i32 @_ZN13CLevelDBBatch5WriteIc7uint256EEvRKT_RKT0_(i32 %batch, i32 %v2_13d, i32 %hash)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15b

bb:                                               ; preds = %dec_label_pc_115
  %v1_159 = call i32 @function_160()
  br label %dec_label_pc_15b

dec_label_pc_15b:                                 ; preds = %bb, %dec_label_pc_115
  ret void
}

define i32 @function_160() local_unnamed_addr {
dec_label_pc_160:
  %v0_161 = load i32, i32* @eax, align 4
  ret i32 %v0_161
}

define void @CCoinsViewDB(i32 %this, i32 %nCacheSize, i1 %fMemory, i1 %fWipe) local_unnamed_addr {
dec_label_pc_162:
  %stack_var_-20 = alloca i32, align 4
  %v2_193 = call i32 @_ZN10CCoinsViewC1Ev(i32 %this)
  %v1_19b = inttoptr i32 %this to i32*
  store i32 ptrtoint (%vtable_1b4ec_type* @global_var_1b4ec.1181 to i32), i32* %v1_19b, align 4
  %v2_1b9 = ptrtoint i32* %stack_var_-20 to i32
  %v5_1bf = call i32 @_ZN5boost11filesystem34pathC1IA11_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v2_1b9, i32 ptrtoint ([11 x i8]* @global_var_3df5.1182 to i32), i32 0)
  ret void

; uselistorder directives
  uselistorder i32 %this, { 1, 0 }
}

define i32 @function_1d1() local_unnamed_addr {
dec_label_pc_1d1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d1
}

define i32 @function_20e() local_unnamed_addr {
dec_label_pc_20e:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_20e = load i32, i32* @ebp, align 4
  %v1_20e = add i32 %v0_20e, 76147781
  %v2_20e = inttoptr i32 %v1_20e to i32*
  %v3_20e = load i32, i32* %v2_20e, align 4
  %v4_20e = add i32 %v3_20e, -1
  store i32 %v4_20e, i32* %v2_20e, align 4
  %v0_214 = load i32, i32* %eax.global-to-local, align 4
  %v1_214 = trunc i32 %v0_214 to i8
  %v2_214 = and i8 %v1_214, -24
  %v8_214 = zext i8 %v2_214 to i32
  %v10_214 = and i32 %v0_214, -256
  %v11_214 = or i32 %v8_214, %v10_214
  store i32 %v11_214, i32* %eax.global-to-local, align 4
  %v0_216 = load i32, i32* %edx.global-to-local, align 4
  %v1_216 = and i32 %v0_216, -256
  %v2_216 = or i32 %v1_216, 82
  store i32 %v2_216, i32* %edx.global-to-local, align 4
  %v1_218 = inttoptr i32 %v11_214 to i8*
  %v2_218 = load i8, i8* %v1_218, align 8
  %v5_218 = add i8 %v2_218, %v2_214
  store i8 %v5_218, i8* %v1_218, align 8
  %v0_21a = load i32, i32* @ebp, align 4
  %v1_21a = add i32 %v0_21a, -16
  store i32 %v1_21a, i32* %eax.global-to-local, align 4
  %v1_220 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_21a)
  store i32 %v1_220, i32* %eax.global-to-local, align 4
  %v0_225 = call i32 @function_25c()
  store i32 %v0_225, i32* %eax.global-to-local, align 4
  ret i32 %v0_225
}

define i32 @function_227() local_unnamed_addr {
dec_label_pc_227:
  %eax.global-to-local = alloca i32, align 4
  %v0_227 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_227, i32* @ebx, align 4
  %v0_229 = load i32, i32* @ebp, align 4
  %v1_229 = add i32 %v0_229, -20
  store i32 %v1_229, i32* %eax.global-to-local, align 4
  %v1_22f = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_229)
  store i32 %v1_22f, i32* %eax.global-to-local, align 4
  %v0_234 = call i32 @function_238()
  store i32 %v0_234, i32* %eax.global-to-local, align 4
  ret i32 %v0_234
}

define i32 @function_236() local_unnamed_addr {
dec_label_pc_236:
  %eax.global-to-local = alloca i32, align 4
  %v0_236 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_236
}

define i32 @function_238() local_unnamed_addr {
dec_label_pc_238:
  %v0_238 = load i32, i32* @ebp, align 4
  %v1_238 = add i32 %v0_238, -16
  %v1_23e = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_238)
  %v0_243 = call i32 @function_247()
  ret i32 %v0_243
}

define i32 @function_245() local_unnamed_addr {
dec_label_pc_245:
  %eax.global-to-local = alloca i32, align 4
  %v0_245 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_245
}

define i32 @function_247() local_unnamed_addr {
dec_label_pc_247:
  %v0_247 = load i32, i32* @ebp, align 4
  %v1_247 = add i32 %v0_247, -28
  %v2_247 = inttoptr i32 %v1_247 to i32*
  %v3_247 = load i32, i32* %v2_247, align 4
  %v1_24d = call i32 @_ZN10CCoinsViewD1Ev(i32 %v3_247)
  %v0_252 = load i32, i32* @ebx, align 4
  ret i32 %v0_252
}

define i32 @function_25c() local_unnamed_addr {
dec_label_pc_25c:
  %v0_25c = load i32, i32* @ebp, align 4
  %v1_25c = add i32 %v0_25c, -12
  %v2_25c = inttoptr i32 %v1_25c to i32*
  %v3_25c = load i32, i32* %v2_25c, align 4
  %v1_25f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25f = xor i32 %v1_25f, %v3_25c
  %v3_25f = icmp eq i32 %v2_25f, 0
  store i32 %v2_25f, i32* @eax, align 4
  br i1 %v3_25f, label %bb, label %dec_label_pc_268

bb:                                               ; preds = %dec_label_pc_25c
  %v1_266 = call i32 @function_26d()
  br label %dec_label_pc_268

dec_label_pc_268:                                 ; preds = %bb, %dec_label_pc_25c
  %v2_266 = phi i32 [ %v1_266, %bb ], [ %v2_25f, %dec_label_pc_25c ]
  ret i32 %v2_266
}

define i32 @function_26d() local_unnamed_addr {
dec_label_pc_26d:
  %v0_273 = load i32, i32* @eax, align 4
  ret i32 %v0_273
}

define void @_ZN12CCoinsViewDB8GetCoinsERK7uint256R6CCoins(i32 %this, i32 %txid, i32 %coins) {
dec_label_pc_274:
  %stack_var_-52 = alloca i32, align 4
  %v2_297 = ptrtoint i32* %stack_var_-52 to i32
  %v1_29d = inttoptr i32 %txid to i32*
  %v2_29d = load i32, i32* %v1_29d, align 4
  %v1_2a3 = add i32 %txid, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_2a3 = inttoptr i32 %v1_2a3 to i32*
  %v3_2a3 = load i32, i32* %v2_2a3, align 4
  %v1_2aa = add i32 %txid, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_2aa = inttoptr i32 %v1_2aa to i32*
  %v3_2aa = load i32, i32* %v2_2aa, align 4
  %v1_2b1 = add i32 %txid, 12
  %v2_2b1 = inttoptr i32 %v1_2b1 to i32*
  %v3_2b1 = load i32, i32* %v2_2b1, align 4
  %v1_2b8 = add i32 %txid, 16
  %v2_2b8 = inttoptr i32 %v1_2b8 to i32*
  %v3_2b8 = load i32, i32* %v2_2b8, align 4
  %v1_2bf = add i32 %txid, 20
  %v2_2bf = inttoptr i32 %v1_2bf to i32*
  %v3_2bf = load i32, i32* %v2_2bf, align 4
  %v1_2c6 = add i32 %txid, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_2c6 = inttoptr i32 %v1_2c6 to i32*
  %v3_2c6 = load i32, i32* %v2_2c6, align 4
  store i32 %v3_2c6, i32* @ecx, align 4
  %v1_2cd = add i32 %txid, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_2cd = inttoptr i32 %v1_2cd to i32*
  %v3_2cd = load i32, i32* %v2_2cd, align 4
  %v11_2df = call i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %v2_297, i8 99, i32 %v2_29d, i32 %v3_2a3, i32 %v3_2aa, i32 %v3_2b1, i32 %v3_2b8, i32 %v3_2bf, i32 %v3_2c6, i32 %v3_2cd)
  %v1_2ea = add i32 %this, ptrtoint (i8** @global_var_4.1177 to i32)
  %v4_2fe = call i32 @_ZN8CLevelDB4ReadISt4pairIc7uint256E6CCoinsEEbRKT_RT0_(i32 %v1_2ea, i32 %v2_297, i32 %coins)
  store i32 %v4_2fe, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_30f

bb:                                               ; preds = %dec_label_pc_274
  %v1_30d = call i32 @DEFAULT_BLOCK_PRIORITY_SIZE()
  br label %dec_label_pc_30f

dec_label_pc_30f:                                 ; preds = %bb, %dec_label_pc_274
  ret void

; uselistorder directives
  uselistorder i32 %txid, { 1, 0, 3, 2, 5, 4, 7, 6 }
}

define i32 @DEFAULT_BLOCK_PRIORITY_SIZE() local_unnamed_addr {
dec_label_pc_314:
  %v0_315 = load i32, i32* @eax, align 4
  ret i32 %v0_315
}

define void @_ZN12CCoinsViewDB8SetCoinsERK7uint256RK6CCoins(i32 %this, i32 %txid, i32 %coins) {
dec_label_pc_316:
  %stack_var_-20 = alloca i32, align 4
  %v2_33a = ptrtoint i32* %stack_var_-20 to i32
  %v2_340 = call i32 @_ZN13CLevelDBBatchC1Ev(i32 %v2_33a)
  ret void
}

define i32 @function_37a() local_unnamed_addr {
dec_label_pc_37a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37a = load i32, i32* %ecx.global-to-local, align 4
  %v1_37a = add i32 %v0_37a, -263877181
  %v2_37a = inttoptr i32 %v1_37a to i32*
  %v3_37a = load i32, i32* %v2_37a, align 4
  %v4_37a = sub i32 %v3_37a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_37a, i32* %v2_37a, align 4
  %v0_380 = load i32, i32* %eax.global-to-local, align 4
  %v1_383 = call i32 @_ZN13CLevelDBBatchD1Ev(i32 %v0_380)
  %v0_388 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_388, i32* @eax, align 4
  %v0_38a = load i32, i32* %ebp.global-to-local, align 4
  %v1_38a = add i32 %v0_38a, -12
  %v2_38a = inttoptr i32 %v1_38a to i32*
  %v3_38a = load i32, i32* %v2_38a, align 4
  %v1_38d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38d = icmp eq i32 %v1_38d, %v3_38a
  br i1 %v3_38d, label %bb, label %dec_label_pc_396

bb:                                               ; preds = %dec_label_pc_37a
  %v1_394 = call i32 @function_3b4()
  store i32 %v1_394, i32* @eax, align 4
  br label %dec_label_pc_396

dec_label_pc_396:                                 ; preds = %bb, %dec_label_pc_37a
  %v0_396 = call i32 @function_3af()
  store i32 %v0_396, i32* %eax.global-to-local, align 4
  ret i32 %v0_396
}

define i32 @function_399() local_unnamed_addr {
dec_label_pc_399:
  %eax.global-to-local = alloca i32, align 4
  %v0_399 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_399
}

define i32 @function_3af() local_unnamed_addr {
dec_label_pc_3af:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b4() local_unnamed_addr {
dec_label_pc_3b4:
  %v0_3b9 = load i32, i32* @eax, align 4
  ret i32 %v0_3b9
}

define void @_ZN12CCoinsViewDB9HaveCoinsERK7uint256(i32 %this, i32 %txid) {
dec_label_pc_3ba:
  %stack_var_-52 = alloca i32, align 4
  %v2_3d7 = ptrtoint i32* %stack_var_-52 to i32
  %v1_3dd = inttoptr i32 %txid to i32*
  %v2_3dd = load i32, i32* %v1_3dd, align 4
  %v1_3e3 = add i32 %txid, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_3e3 = inttoptr i32 %v1_3e3 to i32*
  %v3_3e3 = load i32, i32* %v2_3e3, align 4
  %v1_3ea = add i32 %txid, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_3ea = inttoptr i32 %v1_3ea to i32*
  %v3_3ea = load i32, i32* %v2_3ea, align 4
  %v1_3f1 = add i32 %txid, 12
  %v2_3f1 = inttoptr i32 %v1_3f1 to i32*
  %v3_3f1 = load i32, i32* %v2_3f1, align 4
  %v1_3f8 = add i32 %txid, 16
  %v2_3f8 = inttoptr i32 %v1_3f8 to i32*
  %v3_3f8 = load i32, i32* %v2_3f8, align 4
  %v1_3ff = add i32 %txid, 20
  %v2_3ff = inttoptr i32 %v1_3ff to i32*
  %v3_3ff = load i32, i32* %v2_3ff, align 4
  %v1_406 = add i32 %txid, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_406 = inttoptr i32 %v1_406 to i32*
  %v3_406 = load i32, i32* %v2_406, align 4
  store i32 %v3_406, i32* @ecx, align 4
  %v1_40d = add i32 %txid, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_40d = inttoptr i32 %v1_40d to i32*
  %v3_40d = load i32, i32* %v2_40d, align 4
  %v11_41f = call i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %v2_3d7, i8 99, i32 %v2_3dd, i32 %v3_3e3, i32 %v3_3ea, i32 %v3_3f1, i32 %v3_3f8, i32 %v3_3ff, i32 %v3_406, i32 %v3_40d)
  %v1_42a = add i32 %this, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_437 = call i32 @_ZN8CLevelDB6ExistsISt4pairIc7uint256EEEbRKT_(i32 %v1_42a, i32 %v2_3d7)
  ret void

; uselistorder directives
  uselistorder i32 %txid, { 1, 0, 3, 2, 5, 4, 7, 6 }
}

define void @_ZN12CCoinsViewDB12GetBestBlockEv(i32 %this) {
dec_label_pc_450:
  %stack_var_-49 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %v2_467 = ptrtoint i32* %stack_var_-48 to i32
  %v2_46d = call i32 @_ZN7uint256C1Ev(i32 %v2_467)
  store i8 66, i8* %stack_var_-49, align 1
  %v1_479 = add i32 %this, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_483 = ptrtoint i8* %stack_var_-49 to i32
  %v4_48d = call i32 @_ZN8CLevelDB4ReadIc7uint256EEbRKT_RT0_(i32 %v1_479, i32 %v2_483, i32 %v2_467)
  %v1_492 = xor i32 %v4_48d, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_492 = trunc i32 %v1_492 to i8
  %v5_495 = icmp eq i8 %v4_492, 0
  br i1 %v5_495, label %dec_label_pc_4a0, label %dec_label_pc_499

dec_label_pc_499:                                 ; preds = %dec_label_pc_450
  ret void

dec_label_pc_4a0:                                 ; preds = %dec_label_pc_450
  ret void
}

define i32 @function_50f() local_unnamed_addr {
dec_label_pc_50f:
  %eax.global-to-local = alloca i32, align 4
  %v0_510 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_510
}

define void @_ZN12CCoinsViewDB12SetBestBlockEP11CBlockIndex(i32 %this, i32 %pindex) {
dec_label_pc_512:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_530 = ptrtoint i32* %stack_var_-52 to i32
  %v1_536 = call i32 @_ZN13CLevelDBBatchC1Ev(i32 %v2_530)
  %v2_53b = ptrtoint i32* %stack_var_-48 to i32
  %v3_548 = call i32 @_ZNK11CBlockIndex12GetBlockHashEv(i32* nonnull %stack_var_-48, i32 %pindex)
  call void @BatchWriteHashBestChain(i32 %v2_530, i32 %v2_53b)
  ret void
}

define i32 @function_57e() local_unnamed_addr {
dec_label_pc_57e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_57e = load i32, i32* %ecx.global-to-local, align 4
  %v1_57e = add i32 %v0_57e, -800748093
  %v2_57e = inttoptr i32 %v1_57e to i32*
  %v3_57e = load i32, i32* %v2_57e, align 4
  %v4_57e = sub i32 %v3_57e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_57e, i32* %v2_57e, align 4
  %v0_584 = load i32, i32* %eax.global-to-local, align 4
  %v1_587 = call i32 @_ZN13CLevelDBBatchD1Ev(i32 %v0_584)
  %v0_58c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_58c, i32* @eax, align 4
  %v0_58e = load i32, i32* @ebp, align 4
  %v1_58e = add i32 %v0_58e, -12
  %v2_58e = inttoptr i32 %v1_58e to i32*
  %v3_58e = load i32, i32* %v2_58e, align 4
  %v1_591 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_591 = icmp eq i32 %v1_591, %v3_58e
  br i1 %v3_591, label %bb, label %dec_label_pc_59a

bb:                                               ; preds = %dec_label_pc_57e
  %v1_598 = call i32 @function_5b8()
  store i32 %v1_598, i32* @eax, align 4
  br label %dec_label_pc_59a

dec_label_pc_59a:                                 ; preds = %bb, %dec_label_pc_57e
  %v0_59a = call i32 @function_5b3()
  store i32 %v0_59a, i32* %eax.global-to-local, align 4
  ret i32 %v0_59a
}

define i32 @function_59d() local_unnamed_addr {
dec_label_pc_59d:
  %eax.global-to-local = alloca i32, align 4
  %v0_59d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_59d
}

define i32 @function_5b3() local_unnamed_addr {
dec_label_pc_5b3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5b8() local_unnamed_addr {
dec_label_pc_5b8:
  %v0_5bc = load i32, i32* @eax, align 4
  ret i32 %v0_5bc
}

define void @_ZN12CCoinsViewDB10BatchWriteERKSt3mapI7uint2566CCoinsSt4lessIS1_ESaISt4pairIKS1_S2_EEEP11CBlockIndex(i32 %this, i32 %mapCoins, i32 %pindex) {
dec_label_pc_5be:
  %v2_5e8 = call i32 @_ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE4sizeEv(i32 %mapCoins)
  ret void
}

define i32 @function_5fc() local_unnamed_addr {
dec_label_pc_5fc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_5fc = load i32, i32* @ebp, align 4
  %v1_5fc = add i32 %v0_5fc, 76137541
  %v2_5fc = inttoptr i32 %v1_5fc to i32*
  %v3_5fc = load i32, i32* %v2_5fc, align 4
  %v4_5fc = add i32 %v3_5fc, -1
  store i32 %v4_5fc, i32* %v2_5fc, align 4
  %v0_602 = load i32, i32* %eax.global-to-local, align 4
  %v1_602 = trunc i32 %v0_602 to i8
  %v2_602 = and i8 %v1_602, -24
  %v3_602 = icmp eq i8 %v2_602, 0
  %v8_602 = zext i8 %v2_602 to i32
  %v10_602 = and i32 %v0_602, -256
  %v11_602 = or i32 %v8_602, %v10_602
  store i32 %v11_602, i32* %eax.global-to-local, align 4
  %v0_604 = load i32, i32* %ecx.global-to-local, align 4
  %v1_604 = sub i32 %v0_604, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_604, i32* @ecx, align 4
  %v2_604 = icmp eq i32 %v1_604, 0
  %v4_604 = or i1 %v3_602, %v2_604
  br i1 %v4_604, label %dec_label_pc_606, label %dec_label_pc_676

dec_label_pc_606:                                 ; preds = %dec_label_pc_5fc
  %v1_606 = inttoptr i32 %v11_602 to i8*
  %v2_606 = load i8, i8* %v1_606, align 8
  %v5_606 = add i8 %v2_606, %v2_602
  store i8 %v5_606, i8* %v1_606, align 8
  %v0_608 = load i32, i32* @ebp, align 4
  %v1_608 = add i32 %v0_608, -56
  store i32 %v1_608, i32* %eax.global-to-local, align 4
  %v1_60b = add i32 %v0_608, -80
  %v2_60b = inttoptr i32 %v1_60b to i32*
  %v3_60b = load i32, i32* %v2_60b, align 4
  store i32 %v3_60b, i32* %edx.global-to-local, align 4
  %v2_615 = call i32 @_ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE5beginEv(i32 %v1_608, i32 %v3_60b)
  br label %dec_label_pc_668

dec_label_pc_61f:                                 ; preds = %dec_label_pc_676
  %v1_61f = add i32 %v0_61f, -56
  store i32 %v1_61f, i32* %eax.global-to-local, align 4
  store i32 %v1_61f, i32* %stack_var_-4, align 4
  %v1_625 = inttoptr i32 %v1_61f to i32*
  %v2_625 = call i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv(i32* %v1_625)
  %v0_62d = load i32, i32* @ebp, align 4
  %v1_62d = add i32 %v0_62d, -56
  store i32 %v1_62d, i32* %eax.global-to-local, align 4
  store i32 %v1_62d, i32* %stack_var_-4, align 4
  %v1_633 = inttoptr i32 %v1_62d to i32*
  %v2_633 = call i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv(i32* %v1_633)
  %v0_640 = load i32, i32* @ebp, align 4
  %v1_64b = add i32 %v0_640, -48
  store i32 %v1_64b, i32* %eax.global-to-local, align 4
  %v1_656 = add i32 %v0_640, -56
  store i32 %v1_656, i32* %edx.global-to-local, align 4
  store i32 %v1_64b, i32* %stack_var_-4, align 4
  %v3_660 = inttoptr i32 %v1_64b to i32*
  %v4_660 = call i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEppEi(i32* %v3_660, i32 %v1_656, i32 0)
  br label %dec_label_pc_668

dec_label_pc_668:                                 ; preds = %dec_label_pc_61f, %dec_label_pc_606
  %storemerge.in = phi i32* [ %stack_var_-8, %dec_label_pc_61f ], [ %stack_var_-4, %dec_label_pc_606 ]
  %storemerge = ptrtoint i32* %storemerge.in to i32
  %v0_668 = load i32, i32* @ebp, align 4
  %v1_668 = add i32 %v0_668, -52
  store i32 %v1_668, i32* %eax.global-to-local, align 4
  %v1_66b = add i32 %v0_668, -80
  %v2_66b = inttoptr i32 %v1_66b to i32*
  %v3_66b = load i32, i32* %v2_66b, align 4
  store i32 %v3_66b, i32* %edx.global-to-local, align 4
  %v2_66e = add i32 %storemerge, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_66e = inttoptr i32 %v2_66e to i32*
  store i32 %v3_66b, i32* %v3_66e, align 4
  %v0_672 = load i32, i32* %eax.global-to-local, align 4
  %v1_672 = load i32, i32* @esp, align 4
  %v2_672 = inttoptr i32 %v1_672 to i32*
  store i32 %v0_672, i32* %v2_672, align 4
  %v3_672 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_672

dec_label_pc_676:                                 ; preds = %dec_label_pc_5fc
  %v2_676 = and i8 %v1_602, -88
  %v8_676 = zext i8 %v2_676 to i32
  %v11_676 = or i32 %v8_676, %v10_602
  store i32 %v11_676, i32* %eax.global-to-local, align 4
  %v1_678 = inttoptr i32 %v11_676 to i8*
  %v2_678 = load i8, i8* %v1_678, align 8
  %v5_678 = add i8 %v2_678, %v2_676
  store i8 %v5_678, i8* %v1_678, align 8
  %v0_67d = load i32, i32* @ebp, align 4
  %v1_67d = add i32 %v0_67d, -52
  %v1_684 = add i32 %v0_67d, -56
  store i32 %v1_684, i32* %eax.global-to-local, align 4
  store i32 %v1_684, i32* %stack_var_-4, align 4
  %v2_68a = inttoptr i32 %v1_684 to i32*
  %v3_68a = call i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEneERKS5_(i32* %v2_68a, i32 %v1_67d)
  store i32 %v3_68a, i32* %eax.global-to-local, align 4
  %v4_68f = trunc i32 %v3_68a to i8
  %v5_68f = icmp eq i8 %v4_68f, 0
  %v1_691 = icmp eq i1 %v5_68f, false
  %v0_61f = load i32, i32* @ebp, align 4
  br i1 %v1_691, label %dec_label_pc_61f, label %dec_label_pc_693

dec_label_pc_693:                                 ; preds = %dec_label_pc_676
  %v1_693 = add i32 %v0_61f, -84
  %v2_693 = inttoptr i32 %v1_693 to i32*
  %v3_693 = load i32, i32* %v2_693, align 4
  %v10_693 = icmp eq i32 %v3_693, 0
  br i1 %v10_693, label %dec_label_pc_6c0, label %dec_label_pc_699

dec_label_pc_699:                                 ; preds = %dec_label_pc_693
  %v1_699 = add i32 %v0_61f, -44
  store i32 %v1_699, i32* %eax.global-to-local, align 4
  %v3_69c = load i32, i32* %v2_693, align 4
  store i32 %v3_69c, i32* %edx.global-to-local, align 4
  store i32 %v1_699, i32* %stack_var_-4, align 4
  %v2_6a6 = inttoptr i32 %v1_699 to i32*
  %v3_6a6 = call i32 @_ZNK11CBlockIndex12GetBlockHashEv(i32* %v2_6a6, i32 %v3_69c)
  %v0_6ae = load i32, i32* @ebp, align 4
  %v1_6ae = add i32 %v0_6ae, -44
  store i32 %v1_6ae, i32* %stack_var_-4, align 4
  %v1_6b5 = add i32 %v0_6ae, -60
  store i32 %v1_6b5, i32* %eax.global-to-local, align 4
  store i32 %v1_6b5, i32* %stack_var_-8, align 4
  call void @BatchWriteHashBestChain(i32 %v1_6b5, i32 %v1_6ae)
  store i32 ptrtoint (i32* @0 to i32), i32* %eax.global-to-local, align 4
  %v0_6c0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_6c0

dec_label_pc_6c0:                                 ; preds = %dec_label_pc_699, %dec_label_pc_693
  %v0_6c0 = phi i32 [ %v0_6c0.pre, %dec_label_pc_699 ], [ %v0_61f, %dec_label_pc_693 ]
  %v1_6c0 = add i32 %v0_6c0, -76
  %v2_6c0 = inttoptr i32 %v1_6c0 to i32*
  %v3_6c0 = load i32, i32* %v2_6c0, align 4
  %v1_6c3 = add i32 %v3_6c0, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_6c3, i32* %edx.global-to-local, align 4
  %v0_6c6 = load i32, i32* @esp, align 4
  %v1_6c6 = add i32 %v0_6c6, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_6c6 = inttoptr i32 %v1_6c6 to i32*
  store i32 0, i32* %v2_6c6, align 4
  %v0_6ce = load i32, i32* @ebp, align 4
  %v1_6ce = add i32 %v0_6ce, -60
  store i32 %v1_6ce, i32* %eax.global-to-local, align 4
  %v1_6d1 = load i32, i32* @esp, align 4
  %v2_6d1 = add i32 %v1_6d1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_6d1 = inttoptr i32 %v2_6d1 to i32*
  store i32 %v1_6ce, i32* %v3_6d1, align 4
  %v0_6d5 = load i32, i32* %edx.global-to-local, align 4
  %v1_6d5 = load i32, i32* @esp, align 4
  %v2_6d5 = inttoptr i32 %v1_6d5 to i32*
  store i32 %v0_6d5, i32* %v2_6d5, align 4
  %v3_6d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_6d5

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 3, 4, 14, 15, 16 }
  uselistorder void (i32, i32)* @BatchWriteHashBestChain, { 1, 0 }
}

define i32 @function_6dc() local_unnamed_addr {
dec_label_pc_6dc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6dc = load i32, i32* %ecx.global-to-local, align 4
  %v1_6dc = add i32 %v0_6dc, -1002074685
  %v2_6dc = inttoptr i32 %v1_6dc to i32*
  %v3_6dc = load i32, i32* %v2_6dc, align 4
  %v4_6dc = sub i32 %v3_6dc, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_6dc, i32* %v2_6dc, align 4
  %v0_6e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_6e5 = call i32 @_ZN13CLevelDBBatchD1Ev(i32 %v0_6e2)
  %v0_6ea = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_6ea, i32* @eax, align 4
  %v0_6ec = load i32, i32* @ebp, align 4
  %v1_6ec = add i32 %v0_6ec, -12
  %v2_6ec = inttoptr i32 %v1_6ec to i32*
  %v3_6ec = load i32, i32* %v2_6ec, align 4
  %v1_6ef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6ef = icmp eq i32 %v1_6ef, %v3_6ec
  br i1 %v3_6ef, label %bb, label %dec_label_pc_6f8

bb:                                               ; preds = %dec_label_pc_6dc
  %v1_6f6 = call i32 @function_716()
  store i32 %v1_6f6, i32* @eax, align 4
  br label %dec_label_pc_6f8

dec_label_pc_6f8:                                 ; preds = %bb, %dec_label_pc_6dc
  %v0_6f8 = call i32 @function_711()
  store i32 %v0_6f8, i32* %eax.global-to-local, align 4
  ret i32 %v0_6f8
}

define i32 @function_6fb() local_unnamed_addr {
dec_label_pc_6fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_6fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6fb
}

define i32 @function_711() local_unnamed_addr {
dec_label_pc_711:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_716() local_unnamed_addr {
dec_label_pc_716:
  %v0_71a = load i32, i32* @eax, align 4
  ret i32 %v0_71a
}

define void @CBlockTreeDB(i32 %this, i32 %nCacheSize, i1 %fMemory, i1 %fWipe) local_unnamed_addr {
dec_label_pc_71c:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v4_724 = sext i1 %fMemory to i32
  store i32 %v4_724, i32* @edx, align 4
  %tmp125 = zext i1 %fWipe to i32
  store i32 %tmp125, i32* @esi, align 4
  %v2_75f = ptrtoint i32* %stack_var_-20 to i32
  %v5_765 = call i32 @_ZN5boost11filesystem34pathC1IA6_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v2_75f, i32 ptrtoint ([6 x i8]* @global_var_3e38.1185 to i32), i32 0)
  %v2_77a = ptrtoint i32* %stack_var_-24 to i32
  %v5_780 = call i32 @_ZN5boost11filesystem34pathC1IA7_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v2_77a, i32 ptrtoint ([7 x i8]* @global_var_3e3e.1186 to i32), i32 0)
  ret void
}

define i32 @function_792() local_unnamed_addr {
dec_label_pc_792:
  %eax.global-to-local = alloca i32, align 4
  %v0_792 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_792
}

define i32 @function_7e8() local_unnamed_addr {
dec_label_pc_7e8:
  %eax.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_7e8 = load i32, i32* @ebp, align 4
  %v1_7e8 = add i32 %v0_7e8, 76145733
  %v2_7e8 = inttoptr i32 %v1_7e8 to i32*
  %v3_7e8 = load i32, i32* %v2_7e8, align 4
  %v4_7e8 = add i32 %v3_7e8, -1
  store i32 %v4_7e8, i32* %v2_7e8, align 4
  %v0_7ee = load i32, i32* %eax.global-to-local, align 4
  %v11_7ee = and i32 %v0_7ee, -24
  store i32 %v11_7ee, i32* %eax.global-to-local, align 4
  %v4_7f0 = mul i32 %v11_7ee, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 1)
  %v5_7f0 = inttoptr i32 %v4_7f0 to float*
  %v6_7f0 = load float, float* %v5_7f0, align 8
  %v7_7f0 = fpext float %v6_7f0 to x86_fp80
  %v8_7f0 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v9_7f0 = fmul x86_fp80 %v7_7f0, %v8_7f0
  store x86_fp80 %v9_7f0, x86_fp80* %st0.global-to-local, align 4
  %v0_7f4 = load i32, i32* @ebp, align 4
  %v1_7f4 = add i32 %v0_7f4, -24
  store i32 %v1_7f4, i32* %eax.global-to-local, align 4
  %v1_7fa = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_7f4)
  %v0_7ff = load i32, i32* @ebp, align 4
  %v1_7ff = add i32 %v0_7ff, -20
  store i32 %v1_7ff, i32* %eax.global-to-local, align 4
  %v1_805 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_7ff)
  %v0_80a = load i32, i32* @ebp, align 4
  %v1_80a = add i32 %v0_80a, -16
  store i32 %v1_80a, i32* %eax.global-to-local, align 4
  %v1_810 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_80a)
  store i32 %v1_810, i32* %eax.global-to-local, align 4
  %v0_815 = load i32, i32* @ebp, align 4
  %v1_815 = add i32 %v0_815, -12
  %v2_815 = inttoptr i32 %v1_815 to i32*
  %v3_815 = load i32, i32* %v2_815, align 4
  store i32 %v3_815, i32* %eax.global-to-local, align 4
  %v1_818 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_818 = xor i32 %v1_818, %v3_815
  %v3_818 = icmp eq i32 %v2_818, 0
  store i32 %v2_818, i32* @eax, align 4
  br i1 %v3_818, label %bb, label %dec_label_pc_821

bb:                                               ; preds = %dec_label_pc_7e8
  %v1_81f = call i32 @function_86c()
  store i32 %v1_81f, i32* @eax, align 4
  br label %dec_label_pc_821

dec_label_pc_821:                                 ; preds = %bb, %dec_label_pc_7e8
  %v0_821 = call i32 @function_867()
  store i32 %v0_821, i32* %eax.global-to-local, align 4
  ret i32 %v0_821

; uselistorder directives
  uselistorder i32 %v11_7ee, { 1, 0 }
}

define i32 @function_823() local_unnamed_addr {
dec_label_pc_823:
  %eax.global-to-local = alloca i32, align 4
  %v0_823 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_823, i32* @ebx, align 4
  %v0_825 = load i32, i32* @ebp, align 4
  %v1_825 = add i32 %v0_825, -28
  store i32 %v1_825, i32* %eax.global-to-local, align 4
  %v1_82b = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_825)
  store i32 %v1_82b, i32* %eax.global-to-local, align 4
  %v0_830 = call i32 @function_834()
  store i32 %v0_830, i32* %eax.global-to-local, align 4
  ret i32 %v0_830
}

define i32 @function_832() local_unnamed_addr {
dec_label_pc_832:
  %eax.global-to-local = alloca i32, align 4
  %v0_832 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_832
}

define i32 @function_834() local_unnamed_addr {
dec_label_pc_834:
  %v0_834 = load i32, i32* @ebp, align 4
  %v1_834 = add i32 %v0_834, -24
  %v1_83a = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_834)
  %v0_83f = call i32 @function_843()
  ret i32 %v0_83f
}

define i32 @function_841() local_unnamed_addr {
dec_label_pc_841:
  %eax.global-to-local = alloca i32, align 4
  %v0_841 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_841
}

define i32 @function_843() local_unnamed_addr {
dec_label_pc_843:
  %v0_843 = load i32, i32* @ebp, align 4
  %v1_843 = add i32 %v0_843, -20
  %v1_849 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_843)
  %v0_84e = call i32 @function_852()
  ret i32 %v0_84e
}

define i32 @function_850() local_unnamed_addr {
dec_label_pc_850:
  %eax.global-to-local = alloca i32, align 4
  %v0_850 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_850
}

define i32 @function_852() local_unnamed_addr {
dec_label_pc_852:
  %v0_852 = load i32, i32* @ebp, align 4
  %v1_852 = add i32 %v0_852, -16
  %v1_858 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_852)
  %v0_85d = load i32, i32* @ebx, align 4
  ret i32 %v0_85d

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost11filesystem34pathD1Ev, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_867() local_unnamed_addr {
dec_label_pc_867:
  %v0_867 = load i32, i32* @eax, align 4
  ret i32 %v0_867
}

define i32 @function_86c() local_unnamed_addr {
dec_label_pc_86c:
  %v0_872 = load i32, i32* @eax, align 4
  ret i32 %v0_872
}

define void @_ZN12CBlockTreeDB15WriteBlockIndexERK15CDiskBlockIndex(i32 %this, i32 %blockindex) local_unnamed_addr {
dec_label_pc_874:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %tmp110 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_894 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8a1 = call i32 @_ZNK15CDiskBlockIndex12GetBlockHashEv(i32 %v2_894, i32 %blockindex)
  %v2_8a9 = ptrtoint i32* %stack_var_-84 to i32
  %v3_8ac = load i32, i32* %stack_var_-48, align 4
  %v11_8ef = call i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %v2_8a9, i8 98, i32 %v3_8ac, i32 %tmp110, i32 %tmp108, i32 %tmp106, i32 %tmp104, i32 %tmp102, i32 %tmp100, i32 %tmp98)
  %v5_913 = call i32 @_ZN8CLevelDB5WriteISt4pairIc7uint256E15CDiskBlockIndexEEbRKT_RKT0_b(i32 %this, i32 %v2_8a9, i32 %blockindex, i8 0)
  store i32 %v5_913, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_924

bb:                                               ; preds = %dec_label_pc_874
  %v1_922 = call i32 @function_929()
  br label %dec_label_pc_924

dec_label_pc_924:                                 ; preds = %bb, %dec_label_pc_874
  ret void
}

define i32 @function_929() local_unnamed_addr {
dec_label_pc_929:
  %v0_92a = load i32, i32* @eax, align 4
  ret i32 %v0_92a
}

define void @_ZN12CBlockTreeDB19ReadBestInvalidWorkER7CBigNum(i32 %this, i32 %bnBestInvalidWork) local_unnamed_addr {
dec_label_pc_92c:
  %stack_var_-17 = alloca i8, align 1
  store i8 73, i8* %stack_var_-17, align 1
  %v2_957 = ptrtoint i8* %stack_var_-17 to i32
  %v3_961 = call i32 @_ZN8CLevelDB4ReadIc7CBigNumEEbRKT_RT0_(i32 %this, i32 %v2_957, i32 %bnBestInvalidWork)
  store i32 %v3_961, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_972

bb:                                               ; preds = %dec_label_pc_92c
  %v1_970 = call i32 @function_977()
  br label %dec_label_pc_972

dec_label_pc_972:                                 ; preds = %bb, %dec_label_pc_92c
  ret void
}

define i32 @function_977() local_unnamed_addr {
dec_label_pc_977:
  %v0_978 = load i32, i32* @eax, align 4
  ret i32 %v0_978
}

define void @_ZN12CBlockTreeDB20WriteBestInvalidWorkERK7CBigNum(i32 %this, i32 %bnBestInvalidWork) local_unnamed_addr {
dec_label_pc_97a:
  %stack_var_-17 = alloca i8, align 1
  store i8 73, i8* %stack_var_-17, align 1
  %v2_9ad = ptrtoint i8* %stack_var_-17 to i32
  %v5_9b7 = call i32 @_ZN8CLevelDB5WriteIc7CBigNumEEbRKT_RKT0_b(i32 %this, i32 %v2_9ad, i32 %bnBestInvalidWork, i8 0)
  store i32 %v5_9b7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9c8

bb:                                               ; preds = %dec_label_pc_97a
  %v1_9c6 = call i32 @function_9cd()
  br label %dec_label_pc_9c8

dec_label_pc_9c8:                                 ; preds = %bb, %dec_label_pc_97a
  ret void
}

define i32 @function_9cd() local_unnamed_addr {
dec_label_pc_9cd:
  %v0_9ce = load i32, i32* @eax, align 4
  ret i32 %v0_9ce
}

define void @_ZN12CBlockTreeDB18WriteBlockFileInfoEiRK14CBlockFileInfo(i32 %this, i32 %nFile, i32 %info) local_unnamed_addr {
dec_label_pc_9d0:
  %stack_var_-24 = alloca i32, align 4
  %v2_9f3 = ptrtoint i32* %stack_var_-24 to i32
  %v4_a08 = call i32 @_ZSt9make_pairIciESt4pairIT_T0_ES1_S2_(i32 %v2_9f3, i8 102, i32 %nFile)
  %v5_a2c = call i32 @_ZN8CLevelDB5WriteISt4pairIciE14CBlockFileInfoEEbRKT_RKT0_b(i32 %this, i32 %v2_9f3, i32 %info, i8 0)
  store i32 %v5_a2c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a3d

bb:                                               ; preds = %dec_label_pc_9d0
  %v1_a3b = call i32 @function_a42()
  br label %dec_label_pc_a3d

dec_label_pc_a3d:                                 ; preds = %bb, %dec_label_pc_9d0
  ret void
}

define i32 @function_a42() local_unnamed_addr {
dec_label_pc_a42:
  %v0_a43 = load i32, i32* @eax, align 4
  ret i32 %v0_a43
}

define void @_ZN12CBlockTreeDB17ReadBlockFileInfoEiR14CBlockFileInfo(i32 %this, i32 %nFile, i32 %info) local_unnamed_addr {
dec_label_pc_a44:
  %stack_var_-24 = alloca i32, align 4
  %v2_a67 = ptrtoint i32* %stack_var_-24 to i32
  %v4_a7c = call i32 @_ZSt9make_pairIciESt4pairIT_T0_ES1_S2_(i32 %v2_a67, i8 102, i32 %nFile)
  %v3_a98 = call i32 @_ZN8CLevelDB4ReadISt4pairIciE14CBlockFileInfoEEbRKT_RT0_(i32 %this, i32 %v2_a67, i32 %info)
  ret void
}

define void @_ZN12CBlockTreeDB18WriteLastBlockFileEi(i32 %this, i32 %nFile) local_unnamed_addr {
dec_label_pc_ab0:
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  store i32 %nFile, i32* %stack_var_-36, align 4
  store i8 108, i8* %stack_var_-17, align 1
  %v4_adf = ptrtoint i32* %stack_var_-36 to i32
  %v2_ae3 = ptrtoint i8* %stack_var_-17 to i32
  %v5_aed = call i32 @_ZN8CLevelDB5WriteIciEEbRKT_RKT0_b(i32 %this, i32 %v2_ae3, i32 %v4_adf, i8 0)
  store i32 %v5_aed, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_afe

bb:                                               ; preds = %dec_label_pc_ab0
  %v1_afc = call i32 @function_b03()
  br label %dec_label_pc_afe

dec_label_pc_afe:                                 ; preds = %bb, %dec_label_pc_ab0
  ret void
}

define i32 @function_b03() local_unnamed_addr {
dec_label_pc_b03:
  %v0_b04 = load i32, i32* @eax, align 4
  ret i32 %v0_b04
}

define void @_ZN12CBlockTreeDB15WriteReindexingEb(i32 %this, i1 %fReindexing) local_unnamed_addr {
dec_label_pc_b06:
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-18 = alloca i8, align 1
  %v11_b23 = icmp eq i1 %fReindexing, false
  br i1 %v11_b23, label %dec_label_pc_b54, label %dec_label_pc_b29

dec_label_pc_b29:                                 ; preds = %dec_label_pc_b06
  store i8 ptrtoint (i8* @global_var_31.1187 to i8), i8* %stack_var_-18, align 1
  store i8 82, i8* %stack_var_-19, align 1
  %v4_b3f = ptrtoint i8* %stack_var_-18 to i32
  %v2_b43 = ptrtoint i8* %stack_var_-19 to i32
  %v5_b4d = call i32 @_ZN8CLevelDB5WriteIccEEbRKT_RKT0_b(i32 %this, i32 %v2_b43, i32 %v4_b3f, i8 0)
  br label %dec_label_pc_b72

dec_label_pc_b54:                                 ; preds = %dec_label_pc_b06
  store i8 82, i8* %stack_var_-17, align 1
  %v2_b63 = ptrtoint i8* %stack_var_-17 to i32
  %v4_b6d = call i32 @_ZN8CLevelDB5EraseIcEEbRKT_b(i32 %this, i32 %v2_b63, i8 0)
  br label %dec_label_pc_b72

dec_label_pc_b72:                                 ; preds = %dec_label_pc_b54, %dec_label_pc_b29
  %storemerge = phi i32 [ %v4_b6d, %dec_label_pc_b54 ], [ %v5_b4d, %dec_label_pc_b29 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b7e

bb:                                               ; preds = %dec_label_pc_b72
  %v1_b7c = call i32 @function_b83()
  br label %dec_label_pc_b7e

dec_label_pc_b7e:                                 ; preds = %bb, %dec_label_pc_b72
  ret void

; uselistorder directives
  uselistorder i32 %this, { 1, 0 }
}

define i32 @function_b83() local_unnamed_addr {
dec_label_pc_b83:
  %v0_b84 = load i32, i32* @eax, align 4
  ret i32 %v0_b84
}

define void @_ZN12CBlockTreeDB14ReadReindexingERb(i32 %this, i1 %fReindexing) local_unnamed_addr {
dec_label_pc_b86:
  %stack_var_-17 = alloca i8, align 1
  %v4_b92 = sext i1 %fReindexing to i32
  store i8 82, i8* %stack_var_-17, align 1
  %v2_baa = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_baa, i32* @edx, align 4
  %v2_bb4 = call i32 @_ZN8CLevelDB6ExistsIcEEbRKT_(i32 %this, i32 %v2_baa)
  %v1_bbe = trunc i32 %v2_bb4 to i8
  %v3_bbe = inttoptr i32 %v4_b92 to i8*
  store i8 %v1_bbe, i8* %v3_bbe, align 1
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bd1

bb:                                               ; preds = %dec_label_pc_b86
  %v1_bcf = call i32 @function_bd6()
  br label %dec_label_pc_bd1

dec_label_pc_bd1:                                 ; preds = %bb, %dec_label_pc_b86
  ret void
}

define i32 @function_bd6() local_unnamed_addr {
dec_label_pc_bd6:
  %v0_bd7 = load i32, i32* @eax, align 4
  ret i32 %v0_bd7
}

define void @_ZN12CBlockTreeDB17ReadLastBlockFileERi(i32 %this, i32 %nFile) local_unnamed_addr {
dec_label_pc_bd8:
  %stack_var_-17 = alloca i8, align 1
  store i8 108, i8* %stack_var_-17, align 1
  %v2_c03 = ptrtoint i8* %stack_var_-17 to i32
  %v3_c0d = call i32 @_ZN8CLevelDB4ReadIciEEbRKT_RT0_(i32 %this, i32 %v2_c03, i32 %nFile)
  store i32 %v3_c0d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c1e

bb:                                               ; preds = %dec_label_pc_bd8
  %v1_c1c = call i32 @function_c23()
  br label %dec_label_pc_c1e

dec_label_pc_c1e:                                 ; preds = %bb, %dec_label_pc_bd8
  ret void
}

define i32 @function_c23() local_unnamed_addr {
dec_label_pc_c23:
  %v0_c24 = load i32, i32* @eax, align 4
  ret i32 %v0_c24
}

define void @_ZN12CCoinsViewDB8GetStatsER11CCoinsStats(i32 %this, i32 %stats) {
dec_label_pc_c26:
  %slKey_-232 = alloca %Slice.0, align 8
  %slKey_-236 = alloca %Slice, align 8
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v1_c54 = add i32 %this, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_c5a = call i32 @_ZN8CLevelDB11NewIteratorEv(i32 %v1_c54)
  %v2_c8d = ptrtoint i32* %stack_var_-168 to i32
  %v5_c96 = call i32 @_ZN11CHashWriterC1Eii(i32 %v2_c8d, i32 ptrtoint (i8** @global_var_4.1177 to i32), i32 80000)
  store i32 %stats, i32* @ebx, align 4
  %v5_cc8 = call i32 @_ZNK11CBlockIndex12GetBlockHashEv(i32* nonnull %stack_var_-364, i32 %this)
  %v3_cd0 = load i32, i32* %stack_var_-364, align 4
  %v1_cd6 = load i32, i32* @ebx, align 4
  %v2_cd6 = add i32 %v1_cd6, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_cd6 = inttoptr i32 %v2_cd6 to i32*
  store i32 %v3_cd0, i32* %v3_cd6, align 4
  %v1_cdf = load i32, i32* @ebx, align 4
  %v2_cdf = add i32 %v1_cdf, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_cdf = inttoptr i32 %v2_cdf to i32*
  %v1_ce8 = load i32, i32* @ebx, align 4
  %v2_ce8 = add i32 %v1_ce8, 12
  %v3_ce8 = inttoptr i32 %v2_ce8 to i32*
  %v1_cf1 = load i32, i32* @ebx, align 4
  %v2_cf1 = add i32 %v1_cf1, 16
  %v3_cf1 = inttoptr i32 %v2_cf1 to i32*
  %v1_cfa = load i32, i32* @ebx, align 4
  %v2_cfa = add i32 %v1_cfa, 20
  %v3_cfa = inttoptr i32 %v2_cfa to i32*
  %v1_d03 = load i32, i32* @ebx, align 4
  %v2_d03 = add i32 %v1_d03, ptrtoint (i8** @global_var_18.1179 to i32)
  %v3_d03 = inttoptr i32 %v2_d03 to i32*
  %v1_d0c = load i32, i32* @ebx, align 4
  %v2_d0c = add i32 %v1_d0c, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v3_d0c = inttoptr i32 %v2_d0c to i32*
  %v1_d15 = load i32, i32* @ebx, align 4
  %v2_d15 = add i32 %v1_d15, ptrtoint (i32* @global_var_20.1184 to i32)
  %v3_d15 = inttoptr i32 %v2_d15 to i32*
  %v1_d1e = add i32 %stats, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_d2e = call i32 @_ZN11CHashWriterlsI7uint256EERS_RKT_(i32 %v2_c8d, i32 %v1_d1e)
  store %Slice { i8* null, i32 undef }, %Slice* %slKey_-236, align 8
  store %Slice.0 { i8* null, i32 undef }, %Slice.0* %slKey_-232, align 8
  %v2_d47 = bitcast %Slice* %slKey_-236 to i32*
  %v3_d47 = load i32, i32* %v2_d47, align 8
  %v4_d47 = bitcast %Slice.0* %slKey_-232 to i32*
  %v5_d47 = load i32, i32* %v4_d47, align 8
  %v6_d47 = call i32 @function_1176(i32 %v3_d47, i32 %v5_d47)
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-364, { 1, 0 }
  uselistorder i32 (i32*, i32)* @_ZNK11CBlockIndex12GetBlockHashEv, { 1, 0, 2 }
  uselistorder i32 %stats, { 1, 0 }
  uselistorder i32 %this, { 1, 0 }
}

define i32 @function_d50() local_unnamed_addr {
dec_label_pc_d50:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_d50 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d50 = add i32 %v0_d50, -45947
  %v2_d50 = inttoptr i32 %v1_d50 to i32*
  %v3_d50 = load i32, i32* %v2_d50, align 4
  %v4_d50 = sub i32 %v3_d50, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_d50, i32* %v2_d50, align 4
  %v0_d56 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d56 = add i32 %v0_d56, 549487360
  %v2_d56 = inttoptr i32 %v1_d56 to i32*
  %v3_d56 = load i32, i32* %v2_d56, align 4
  %v4_d56 = add i32 %v3_d56, -1
  store i32 %v4_d56, i32* %v2_d56, align 4
  %v2_d5c = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_d5c, i32* @ecx, align 4
  %v0_d5e = load i32, i32* %ebp.global-to-local, align 4
  %v1_d5e = add i32 %v0_d5e, -224
  store i32 %v1_d5e, i32* %eax.global-to-local, align 4
  %v1_d64 = add i32 %v0_d5e, -180
  %v2_d64 = inttoptr i32 %v1_d64 to i32*
  %v3_d64 = load i32, i32* %v2_d64, align 4
  store i32 %v3_d64, i32* %edx.global-to-local, align 4
  store i32 %v1_d5e, i32* %eax.global-to-local, align 4
  %v1_d7f = call i32 @_ZNK7leveldb5Slice4dataEv(i32 %v1_d5e)
  store i32 %v1_d7f, i32* %ebx.global-to-local, align 4
  %v0_d86 = load i32, i32* @ebp, align 4
  %v1_d86 = add i32 %v0_d86, -224
  store i32 %v1_d86, i32* %eax.global-to-local, align 4
  %v1_d8f = call i32 @_ZNK7leveldb5Slice4sizeEv(i32 %v1_d86)
  %v2_d94 = add i32 %v1_d7f, %v1_d8f
  store i32 %v2_d94, i32* %ebx.global-to-local, align 4
  %v0_d96 = load i32, i32* @ebp, align 4
  %v1_d96 = add i32 %v0_d96, -224
  store i32 %v1_d96, i32* %eax.global-to-local, align 4
  %v1_d9f = call i32 @_ZNK7leveldb5Slice4dataEv(i32 %v1_d96)
  %v0_dbc = load i32, i32* @ebp, align 4
  %v1_dbc = add i32 %v0_dbc, -312
  store i32 %v1_dbc, i32* %eax.global-to-local, align 4
  %v5_dc5 = call i32 @_ZN11CDataStreamC1EPKcS1_ii(i32 %v1_dbc, i32 %v1_d9f, i32 %v2_d94, i32 2, i32 1020000)
  %v0_dca = load i32, i32* @ebp, align 4
  %v1_dca = add i32 %v0_dca, -166
  %v1_dd4 = add i32 %v0_dca, -312
  store i32 %v1_dd4, i32* %eax.global-to-local, align 4
  %v2_ddd = call i32 @_ZN11CDataStreamrsIcEERS_RT_(i32 %v1_dd4, i32 %v1_dca)
  store i32 %v2_ddd, i32* %eax.global-to-local, align 4
  %v0_de2 = load i32, i32* @ebp, align 4
  %v1_de2 = add i32 %v0_de2, -166
  %v2_de2 = inttoptr i32 %v1_de2 to i8*
  %v3_de2 = load i8, i8* %v2_de2, align 1
  %v4_de2 = zext i8 %v3_de2 to i32
  store i32 %v4_de2, i32* %eax.global-to-local, align 4
  %v11_de9 = icmp eq i8 %v3_de2, 99
  %v1_deb = icmp eq i1 %v11_de9, false
  br i1 %v1_deb, label %dec_label_pc_1150, label %dec_label_pc_df1

dec_label_pc_df1:                                 ; preds = %dec_label_pc_d50
  %v1_df1 = add i32 %v0_de2, -180
  %v2_df1 = inttoptr i32 %v1_df1 to i32*
  %v3_df1 = load i32, i32* %v2_df1, align 4
  store i32 %v3_df1, i32* %eax.global-to-local, align 4
  %v1_df7 = inttoptr i32 %v3_df1 to i32*
  %v2_df7 = load i32, i32* %v1_df7, align 4
  %v1_df9 = add i32 %v2_df7, 36
  store i32 %v1_df9, i32* %eax.global-to-local, align 4
  %v1_dfc = inttoptr i32 %v1_df9 to i32*
  %v2_dfc = load i32, i32* %v1_dfc, align 4
  store i32 %v2_dfc, i32* @ecx, align 4
  %v1_dfe = add i32 %v0_de2, -216
  store i32 %v1_dfe, i32* %eax.global-to-local, align 4
  %v3_e04 = load i32, i32* %v2_df1, align 4
  store i32 %v3_e04, i32* %edx.global-to-local, align 4
  store i32 %v1_dfe, i32* %eax.global-to-local, align 4
  %v1_e1f = call i32 @_ZNK7leveldb5Slice4dataEv(i32 %v1_dfe)
  store i32 %v1_e1f, i32* %ebx.global-to-local, align 4
  %v0_e26 = load i32, i32* @ebp, align 4
  %v1_e26 = add i32 %v0_e26, -216
  store i32 %v1_e26, i32* %eax.global-to-local, align 4
  %v1_e2f = call i32 @_ZNK7leveldb5Slice4sizeEv(i32 %v1_e26)
  %v2_e34 = add i32 %v1_e1f, %v1_e2f
  store i32 %v2_e34, i32* @ebx, align 4
  %v0_e36 = load i32, i32* @ebp, align 4
  %v1_e36 = add i32 %v0_e36, -216
  store i32 %v1_e36, i32* %eax.global-to-local, align 4
  %v1_e3f = call i32 @_ZNK7leveldb5Slice4dataEv(i32 %v1_e36)
  %v0_e54 = load i32, i32* @ebx, align 4
  %v0_e5c = load i32, i32* @ebp, align 4
  %v1_e5c = add i32 %v0_e5c, -284
  store i32 %v1_e5c, i32* %eax.global-to-local, align 4
  %v5_e65 = call i32 @_ZN11CDataStreamC1EPKcS1_ii(i32 %v1_e5c, i32 %v1_e3f, i32 %v0_e54, i32 2, i32 1020000)
  %v0_e6a = load i32, i32* @ebp, align 4
  %v1_e6a = add i32 %v0_e6a, -256
  store i32 %v1_e6a, i32* %eax.global-to-local, align 4
  %v1_e73 = inttoptr i32 %v1_e6a to i8*
  %v2_e73 = call i32 @_ZN6CCoinsC1Ev(i8* %v1_e73)
  %v0_e78 = load i32, i32* @ebp, align 4
  %v1_e78 = add i32 %v0_e78, -256
  %v1_e82 = add i32 %v0_e78, -284
  store i32 %v1_e82, i32* %eax.global-to-local, align 4
  %v2_e8b = call i32 @_ZN11CDataStreamrsI6CCoinsEERS_RT_(i32 %v1_e82, i32 %v1_e78)
  %v0_e90 = load i32, i32* @ebp, align 4
  %v1_e90 = add i32 %v0_e90, -44
  store i32 %v1_e90, i32* %eax.global-to-local, align 4
  %v1_e96 = call i32 @_ZN7uint256C1Ev(i32 %v1_e90)
  %v0_e9b = load i32, i32* @ebp, align 4
  %v1_e9b = add i32 %v0_e9b, -44
  %v1_ea2 = add i32 %v0_e9b, -312
  store i32 %v1_ea2, i32* %eax.global-to-local, align 4
  %v2_eab = call i32 @_ZN11CDataStreamrsI7uint256EERS_RT_(i32 %v1_ea2, i32 %v1_e9b)
  %v0_eb0 = load i32, i32* @ebp, align 4
  %v1_eb0 = add i32 %v0_eb0, -44
  %v1_eb7 = add i32 %v0_eb0, -164
  store i32 %v1_eb7, i32* %eax.global-to-local, align 4
  %v2_ec0 = call i32 @_ZN11CHashWriterlsI7uint256EERS_RKT_(i32 %v1_eb7, i32 %v1_eb0)
  %v0_ec5 = load i32, i32* @ebp, align 4
  %v1_ecb = add i32 %v0_ec5, -236
  store i32 %v1_ecb, i32* %eax.global-to-local, align 4
  %v1_ed1 = call i32 @_Z3REFIiERT_RKS0_(i32 %v1_ecb)
  store i32 %v1_ed1, i32* %eax.global-to-local, align 4
  %v0_ed6 = load i32, i32* @ebp, align 4
  %v1_ed6 = add i32 %v0_ed6, -208
  store i32 %v1_ed6, i32* %edx.global-to-local, align 4
  %v2_ee3 = call i32 @_Z10WrapVarIntIiE7CVarIntIT_ERS1_(i32 %v1_ed6, i32 %v1_ed1)
  %v0_eeb = load i32, i32* @ebp, align 4
  %v1_eeb = add i32 %v0_eeb, -208
  store i32 %v1_eeb, i32* %eax.global-to-local, align 4
  store i32 %v1_eeb, i32* %stack_var_-12, align 4
  %v1_ef4 = call i32 @_Z3REFI7CVarIntIiEERT_RKS2_(i32 %v1_eeb)
  %v0_efd = load i32, i32* @ebp, align 4
  %v1_efd = add i32 %v0_efd, -164
  store i32 %v1_efd, i32* %eax.global-to-local, align 4
  store i32 %v1_efd, i32* %stack_var_-12, align 4
  %v2_f06 = call i32 @_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_(i32 %v1_efd, i32 %v1_ef4)
  store i32 %v2_f06, i32* %eax.global-to-local, align 4
  %v0_f0b = load i32, i32* @ebp, align 4
  %v1_f0b = add i32 %v0_f0b, -256
  %v2_f0b = inttoptr i32 %v1_f0b to i8*
  %v3_f0b = load i8, i8* %v2_f0b, align 1
  %v5_f12 = icmp eq i8 %v3_f0b, 0
  %v1_f22 = select i1 %v5_f12, i8 110, i8 99
  %v3_f22 = add i32 %v0_f0b, -165
  %v4_f22 = inttoptr i32 %v3_f22 to i8*
  store i8 %v1_f22, i8* %v4_f22, align 1
  %v0_f28 = load i32, i32* @ebp, align 4
  %v1_f28 = add i32 %v0_f28, -165
  %v1_f32 = add i32 %v0_f28, -164
  store i32 %v1_f32, i32* %eax.global-to-local, align 4
  store i32 %v1_f32, i32* %stack_var_-12, align 4
  %v2_f3b = call i32 @_ZN11CHashWriterlsIcEERS_RKT_(i32 %v1_f32, i32 %v1_f28)
  %v0_f40 = load i32, i32* @ebp, align 4
  %v1_f46 = add i32 %v0_f40, -240
  store i32 %v1_f46, i32* %eax.global-to-local, align 4
  store i32 %v1_f46, i32* %stack_var_-12, align 4
  %v1_f4c = call i32 @_Z3REFIiERT_RKS0_(i32 %v1_f46)
  store i32 %v1_f4c, i32* %eax.global-to-local, align 4
  %v0_f51 = load i32, i32* @ebp, align 4
  %v1_f51 = add i32 %v0_f51, -204
  store i32 %v1_f51, i32* %edx.global-to-local, align 4
  store i32 %v1_f51, i32* %stack_var_-12, align 4
  %v2_f5e = call i32 @_Z10WrapVarIntIiE7CVarIntIT_ERS1_(i32 %v1_f51, i32 %v1_f4c)
  %v0_f66 = load i32, i32* @ebp, align 4
  %v1_f66 = add i32 %v0_f66, -204
  store i32 %v1_f66, i32* %eax.global-to-local, align 4
  store i32 %v1_f66, i32* %stack_var_-16, align 4
  %v1_f6f = call i32 @_Z3REFI7CVarIntIiEERT_RKS2_(i32 %v1_f66)
  store i32 %v1_f6f, i32* %stack_var_-12, align 4
  %v0_f78 = load i32, i32* @ebp, align 4
  %v1_f78 = add i32 %v0_f78, -164
  store i32 %v1_f78, i32* %eax.global-to-local, align 4
  store i32 %v1_f78, i32* %stack_var_-16, align 4
  %v2_f81 = call i32 @_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_(i32 %v1_f78, i32 %v1_f6f)
  store i32 %v2_f81, i32* %eax.global-to-local, align 4
  %v0_f86 = load i32, i32* @ebp, align 4
  %v1_f86 = add i32 %v0_f86, -320
  %v2_f86 = inttoptr i32 %v1_f86 to i32*
  %v3_f86 = load i32, i32* %v2_f86, align 4
  store i32 %v3_f86, i32* %eax.global-to-local, align 4
  %v1_f8c = add i32 %v3_f86, 40
  %v2_f8c = inttoptr i32 %v1_f8c to i32*
  %v3_f8c = load i32, i32* %v2_f8c, align 4
  store i32 %v3_f8c, i32* %edx.global-to-local, align 4
  %v1_f8f = add i32 %v3_f86, 36
  %v2_f8f = inttoptr i32 %v1_f8f to i32*
  %v3_f8f = load i32, i32* %v2_f8f, align 4
  %v1_f92 = add i32 %v3_f8f, 1
  %v5_f92 = icmp eq i32 %v3_f8f, -1
  store i32 %v1_f92, i32* %eax.global-to-local, align 4
  %v2_f95 = zext i1 %v5_f92 to i32
  %v3_f95 = add i32 %v2_f95, %v3_f8c
  store i32 %v3_f95, i32* %edx.global-to-local, align 4
  %v3_f98 = load i32, i32* %v2_f86, align 4
  store i32 %v3_f98, i32* %ecx.global-to-local, align 4
  %v2_f9e = add i32 %v3_f98, 36
  %v3_f9e = inttoptr i32 %v2_f9e to i32*
  store i32 %v1_f92, i32* %v3_f9e, align 4
  %v0_fa1 = load i32, i32* %edx.global-to-local, align 4
  %v1_fa1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_fa1 = add i32 %v1_fa1, 40
  %v3_fa1 = inttoptr i32 %v2_fa1 to i32*
  store i32 %v0_fa1, i32* %v3_fa1, align 4
  %v0_fa4 = load i32, i32* @ebp, align 4
  %v1_fa4 = add i32 %v0_fa4, -184
  %v2_fa4 = inttoptr i32 %v1_fa4 to i32*
  store i32 0, i32* %v2_fa4, align 4
  br label %dec_label_pc_1093

dec_label_pc_fb3:                                 ; preds = %dec_label_pc_1093
  %v3_fb3 = load i32, i32* %v3_10a4, align 4
  %v1_fb9 = load i32, i32* @esp, align 4
  %v2_fb9 = add i32 %v1_fb9, 4
  %v3_fb9 = inttoptr i32 %v2_fb9 to i32*
  store i32 %v3_fb3, i32* %v3_fb9, align 4
  %v0_fbd = load i32, i32* @ebp, align 4
  %v1_fc3 = add i32 %v0_fbd, -252
  store i32 %v1_fc3, i32* %eax.global-to-local, align 4
  %v1_fc6 = load i32, i32* @esp, align 4
  %v2_fc6 = inttoptr i32 %v1_fc6 to i32*
  store i32 %v1_fc3, i32* %v2_fc6, align 4
  %v0_fc9 = call i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj()
  store i32 %v0_fc9, i32* %eax.global-to-local, align 4
  %v1_fce = load i32, i32* @ebp, align 4
  %v2_fce = add i32 %v1_fce, -176
  %v3_fce = inttoptr i32 %v2_fce to i32*
  store i32 %v0_fc9, i32* %v3_fce, align 4
  %v0_fd4 = load i32, i32* @ebp, align 4
  %v1_fd4 = add i32 %v0_fd4, -176
  %v2_fd4 = inttoptr i32 %v1_fd4 to i32*
  %v3_fd4 = load i32, i32* %v2_fd4, align 4
  store i32 %v3_fd4, i32* %eax.global-to-local, align 4
  %v1_fda = load i32, i32* @esp, align 4
  %v2_fda = inttoptr i32 %v1_fda to i32*
  store i32 %v3_fd4, i32* %v2_fda, align 4
  %v0_fdd = call i32 @_ZNK6CTxOut6IsNullEv()
  %v1_fe2 = xor i32 %v0_fdd, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_fe2 = trunc i32 %v1_fe2 to i8
  store i32 %v1_fe2, i32* %eax.global-to-local, align 4
  %v5_fe5 = icmp eq i8 %v4_fe2, 0
  br i1 %v5_fe5, label %dec_label_pc_108c, label %dec_label_pc_fed

dec_label_pc_fed:                                 ; preds = %dec_label_pc_fb3
  %v0_fed = load i32, i32* @ebp, align 4
  %v1_fed = add i32 %v0_fed, -320
  %v2_fed = inttoptr i32 %v1_fed to i32*
  %v3_fed = load i32, i32* %v2_fed, align 4
  store i32 %v3_fed, i32* %eax.global-to-local, align 4
  %v1_ff3 = add i32 %v3_fed, 48
  %v2_ff3 = inttoptr i32 %v1_ff3 to i32*
  %v3_ff3 = load i32, i32* %v2_ff3, align 4
  store i32 %v3_ff3, i32* %edx.global-to-local, align 4
  %v1_ff6 = add i32 %v3_fed, 44
  %v2_ff6 = inttoptr i32 %v1_ff6 to i32*
  %v3_ff6 = load i32, i32* %v2_ff6, align 4
  %v1_ff9 = add i32 %v3_ff6, 1
  %v5_ff9 = icmp eq i32 %v3_ff6, -1
  store i32 %v1_ff9, i32* %eax.global-to-local, align 4
  %v2_ffc = zext i1 %v5_ff9 to i32
  %v3_ffc = add i32 %v2_ffc, %v3_ff3
  store i32 %v3_ffc, i32* %edx.global-to-local, align 4
  %v3_fff = load i32, i32* %v2_fed, align 4
  store i32 %v3_fff, i32* %ecx.global-to-local, align 4
  %v2_1005 = add i32 %v3_fff, 44
  %v3_1005 = inttoptr i32 %v2_1005 to i32*
  store i32 %v1_ff9, i32* %v3_1005, align 4
  %v0_1008 = load i32, i32* %edx.global-to-local, align 4
  %v1_1008 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1008 = add i32 %v1_1008, 48
  %v3_1008 = inttoptr i32 %v2_1008 to i32*
  store i32 %v0_1008, i32* %v3_1008, align 4
  %v0_100b = load i32, i32* @ebp, align 4
  %v1_100b = add i32 %v0_100b, -184
  %v2_100b = inttoptr i32 %v1_100b to i32*
  %v3_100b = load i32, i32* %v2_100b, align 4
  %v1_1011 = add i32 %v3_100b, ptrtoint (i8** @global_var_1.1176 to i32)
  %v2_1014 = add i32 %v0_100b, -200
  %v3_1014 = inttoptr i32 %v2_1014 to i32*
  store i32 %v1_1011, i32* %v3_1014, align 4
  %v0_101a = load i32, i32* @ebp, align 4
  %v1_101a = add i32 %v0_101a, -200
  store i32 %v1_101a, i32* %eax.global-to-local, align 4
  %v1_1020 = load i32, i32* @esp, align 4
  %v2_1020 = inttoptr i32 %v1_1020 to i32*
  store i32 %v1_101a, i32* %v2_1020, align 4
  %v0_1023 = call i32 @_Z3REFIjERT_RKS0_()
  store i32 %v0_1023, i32* %eax.global-to-local, align 4
  %v0_1028 = load i32, i32* @ebp, align 4
  %v1_1028 = add i32 %v0_1028, -196
  store i32 %v1_1028, i32* %edx.global-to-local, align 4
  %v1_102e = load i32, i32* @esp, align 4
  %v2_102e = add i32 %v1_102e, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_102e = inttoptr i32 %v2_102e to i32*
  store i32 %v0_1023, i32* %v3_102e, align 4
  %v0_1032 = load i32, i32* %edx.global-to-local, align 4
  %v1_1032 = load i32, i32* @esp, align 4
  %v2_1032 = inttoptr i32 %v1_1032 to i32*
  store i32 %v0_1032, i32* %v2_1032, align 4
  %v0_1035 = call i32 @_Z10WrapVarIntIjE7CVarIntIT_ERS1_()
  %v0_103a = load i32, i32* @esp, align 4
  %v1_103a = sub i32 %v0_103a, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_103d = load i32, i32* @ebp, align 4
  %v1_103d = add i32 %v0_103d, -196
  store i32 %v1_103d, i32* %eax.global-to-local, align 4
  %v2_1043 = inttoptr i32 %v1_103a to i32*
  store i32 %v1_103d, i32* %v2_1043, align 4
  %v0_1046 = call i32 @_Z3REFI7CVarIntIjEERT_RKS2_()
  %v1_104b = load i32, i32* @esp, align 4
  %v2_104b = add i32 %v1_104b, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_104b = inttoptr i32 %v2_104b to i32*
  store i32 %v0_1046, i32* %v3_104b, align 4
  %v0_104f = load i32, i32* @ebp, align 4
  %v1_104f = add i32 %v0_104f, -164
  store i32 %v1_104f, i32* %eax.global-to-local, align 4
  %v1_1055 = load i32, i32* @esp, align 4
  %v2_1055 = inttoptr i32 %v1_1055 to i32*
  store i32 %v1_104f, i32* %v2_1055, align 4
  %v0_1058 = call i32 @_ZN11CHashWriterlsI7CVarIntIjEEERS_RKT_()
  store i32 %v0_1058, i32* %eax.global-to-local, align 4
  %v0_105d = load i32, i32* @ebp, align 4
  %v1_105d = add i32 %v0_105d, -176
  %v2_105d = inttoptr i32 %v1_105d to i32*
  %v3_105d = load i32, i32* %v2_105d, align 4
  %v1_1063 = load i32, i32* @esp, align 4
  %v2_1063 = add i32 %v1_1063, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1063 = inttoptr i32 %v2_1063 to i32*
  store i32 %v3_105d, i32* %v3_1063, align 4
  %v0_1067 = load i32, i32* @ebp, align 4
  %v1_1067 = add i32 %v0_1067, -164
  store i32 %v1_1067, i32* %eax.global-to-local, align 4
  %v1_106d = load i32, i32* @esp, align 4
  %v2_106d = inttoptr i32 %v1_106d to i32*
  store i32 %v1_1067, i32* %v2_106d, align 4
  %v0_1070 = call i32 @_ZN11CHashWriterlsI6CTxOutEERS_RKT_()
  store i32 %v0_1070, i32* %eax.global-to-local, align 4
  %v0_1075 = load i32, i32* @ebp, align 4
  %v1_1075 = add i32 %v0_1075, -176
  %v2_1075 = inttoptr i32 %v1_1075 to i32*
  %v3_1075 = load i32, i32* %v2_1075, align 4
  store i32 %v3_1075, i32* %eax.global-to-local, align 4
  %v1_107b = add i32 %v3_1075, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_107b = inttoptr i32 %v1_107b to i32*
  %v3_107b = load i32, i32* %v2_107b, align 4
  store i32 %v3_107b, i32* %edx.global-to-local, align 4
  %v1_107e = inttoptr i32 %v3_1075 to i32*
  %v2_107e = load i32, i32* %v1_107e, align 4
  store i32 %v2_107e, i32* %eax.global-to-local, align 4
  %v1_1080 = add i32 %v0_1075, -232
  %v2_1080 = inttoptr i32 %v1_1080 to i32*
  %v3_1080 = load i32, i32* %v2_1080, align 4
  %v5_1080 = add i32 %v3_1080, %v2_107e
  %v10_1080 = icmp ult i32 %v5_1080, %v3_1080
  store i32 %v5_1080, i32* %v2_1080, align 4
  %v0_1086 = load i32, i32* @ebp, align 4
  %v1_1086 = add i32 %v0_1086, -228
  %v2_1086 = inttoptr i32 %v1_1086 to i32*
  %v3_1086 = load i32, i32* %v2_1086, align 4
  %v4_1086 = load i32, i32* %edx.global-to-local, align 4
  %v6_1086 = zext i1 %v10_1080 to i32
  %v7_1086 = add i32 %v4_1086, %v3_1086
  %v8_1086 = add i32 %v7_1086, %v6_1086
  store i32 %v8_1086, i32* %v2_1086, align 4
  br label %dec_label_pc_108c

dec_label_pc_108c:                                ; preds = %dec_label_pc_fed, %dec_label_pc_fb3
  %v0_108c = load i32, i32* @ebp, align 4
  %v1_108c = add i32 %v0_108c, -184
  %v2_108c = inttoptr i32 %v1_108c to i32*
  %v3_108c = load i32, i32* %v2_108c, align 4
  %v4_108c = add i32 %v3_108c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_108c, i32* %v2_108c, align 4
  br label %dec_label_pc_1093

dec_label_pc_1093:                                ; preds = %dec_label_pc_108c, %dec_label_pc_df1
  %v0_1093 = load i32, i32* @ebp, align 4
  %v1_1099 = add i32 %v0_1093, -252
  store i32 %v1_1099, i32* %eax.global-to-local, align 4
  %v1_109c = load i32, i32* @esp, align 4
  %v2_109c = inttoptr i32 %v1_109c to i32*
  store i32 %v1_1099, i32* %v2_109c, align 4
  %v0_109f = call i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv()
  store i32 %v0_109f, i32* %eax.global-to-local, align 4
  %v1_10a4 = load i32, i32* @ebp, align 4
  %v2_10a4 = add i32 %v1_10a4, -184
  %v3_10a4 = inttoptr i32 %v2_10a4 to i32*
  %v4_10a4 = load i32, i32* %v3_10a4, align 4
  %tmp119 = icmp ule i32 %v0_109f, %v4_10a4
  %v3_10aa = icmp ne i1 %tmp119, ptrtoint (i8** @global_var_1.1176 to i1)
  %v4_10aa = zext i1 %v3_10aa to i32
  %v6_10aa = and i32 %v0_109f, -256
  %v7_10aa = or i32 %v4_10aa, %v6_10aa
  store i32 %v7_10aa, i32* %eax.global-to-local, align 4
  %v5_10ad = icmp eq i1 %v3_10aa, false
  %v1_10af = icmp eq i1 %v5_10ad, false
  br i1 %v1_10af, label %dec_label_pc_fb3, label %dec_label_pc_10b5

dec_label_pc_10b5:                                ; preds = %dec_label_pc_1093
  %v1_10b5 = add i32 %v1_10a4, -320
  %v2_10b5 = inttoptr i32 %v1_10b5 to i32*
  %v3_10b5 = load i32, i32* %v2_10b5, align 4
  store i32 %v3_10b5, i32* %eax.global-to-local, align 4
  %v1_10bb = add i32 %v3_10b5, 52
  %v2_10bb = inttoptr i32 %v1_10bb to i32*
  %v3_10bb = load i32, i32* %v2_10bb, align 4
  store i32 %v3_10bb, i32* %ebx.global-to-local, align 4
  %v1_10be = add i32 %v3_10b5, 56
  %v2_10be = inttoptr i32 %v1_10be to i32*
  %v3_10be = load i32, i32* %v2_10be, align 4
  store i32 %v3_10be, i32* %esi.global-to-local, align 4
  %v1_10c1 = add i32 %v1_10a4, -216
  store i32 %v1_10c1, i32* %eax.global-to-local, align 4
  %v1_10c7 = load i32, i32* @esp, align 4
  %v2_10c7 = inttoptr i32 %v1_10c7 to i32*
  store i32 %v1_10c1, i32* %v2_10c7, align 4
  %v0_10ca = load i32, i32* %stack_var_-16, align 4
  %v1_10ca = call i32 @_ZNK7leveldb5Slice4sizeEv(i32 %v0_10ca)
  %v1_10cf = add i32 %v1_10ca, ptrtoint (i32* @global_var_20.1184 to i32)
  %v1_10d7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_10d7 = add i32 %v1_10d7, %v1_10cf
  %v7_10d7 = icmp ult i32 %v2_10d7, %v1_10cf
  store i32 %v2_10d7, i32* %eax.global-to-local, align 4
  %v1_10d9 = load i32, i32* %esi.global-to-local, align 4
  %v3_10d9 = zext i1 %v7_10d7 to i32
  %v5_10d9 = add i32 %v3_10d9, %v1_10d9
  store i32 %v5_10d9, i32* %edx.global-to-local, align 4
  %v0_10db = load i32, i32* @ebp, align 4
  %v1_10db = add i32 %v0_10db, -320
  %v2_10db = inttoptr i32 %v1_10db to i32*
  %v3_10db = load i32, i32* %v2_10db, align 4
  store i32 %v3_10db, i32* @ecx, align 4
  %v2_10e1 = add i32 %v3_10db, 52
  %v3_10e1 = inttoptr i32 %v2_10e1 to i32*
  store i32 %v2_10d7, i32* %v3_10e1, align 4
  %v0_10e4 = load i32, i32* %edx.global-to-local, align 4
  %v1_10e4 = load i32, i32* @ecx, align 4
  %v2_10e4 = add i32 %v1_10e4, 56
  %v3_10e4 = inttoptr i32 %v2_10e4 to i32*
  store i32 %v0_10e4, i32* %v3_10e4, align 4
  %v0_10e7 = load i32, i32* @ebp, align 4
  %v1_10e7 = add i32 %v0_10e7, -192
  %v2_10e7 = inttoptr i32 %v1_10e7 to i32*
  store i32 0, i32* %v2_10e7, align 4
  %v0_10f1 = load i32, i32* @ebp, align 4
  %v1_10f1 = add i32 %v0_10f1, -192
  store i32 %v1_10f1, i32* %eax.global-to-local, align 4
  %v1_10f7 = load i32, i32* @esp, align 4
  %v2_10f7 = inttoptr i32 %v1_10f7 to i32*
  store i32 %v1_10f1, i32* %v2_10f7, align 4
  %v0_10fa = load i32, i32* %stack_var_-16, align 4
  %v1_10fa = call i32 @_Z3REFIiERT_RKS0_(i32 %v0_10fa)
  store i32 %v1_10fa, i32* %eax.global-to-local, align 4
  %v0_10ff = load i32, i32* @ebp, align 4
  %v1_10ff = add i32 %v0_10ff, -188
  store i32 %v1_10ff, i32* %edx.global-to-local, align 4
  %v1_1105 = load i32, i32* @esp, align 4
  %v2_1105 = add i32 %v1_1105, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1105 = inttoptr i32 %v2_1105 to i32*
  store i32 %v1_10fa, i32* %v3_1105, align 4
  %v0_1109 = load i32, i32* %edx.global-to-local, align 4
  %v1_1109 = load i32, i32* @esp, align 4
  %v2_1109 = inttoptr i32 %v1_1109 to i32*
  store i32 %v0_1109, i32* %v2_1109, align 4
  %v0_110c = load i32, i32* %stack_var_-16, align 4
  %v1_110c = load i32, i32* %stack_var_-12, align 4
  %v2_110c = call i32 @_Z10WrapVarIntIiE7CVarIntIT_ERS1_(i32 %v0_110c, i32 %v1_110c)
  %v0_1111 = load i32, i32* @esp, align 4
  %v1_1111 = sub i32 %v0_1111, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_1114 = load i32, i32* @ebp, align 4
  %v1_1114 = add i32 %v0_1114, -188
  store i32 %v1_1114, i32* %eax.global-to-local, align 4
  %v2_111a = inttoptr i32 %v1_1111 to i32*
  store i32 %v1_1114, i32* %v2_111a, align 4
  %v0_111d = load i32, i32* %stack_var_-16, align 4
  %v1_111d = call i32 @_Z3REFI7CVarIntIiEERT_RKS2_(i32 %v0_111d)
  %v1_1122 = load i32, i32* @esp, align 4
  %v2_1122 = add i32 %v1_1122, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1122 = inttoptr i32 %v2_1122 to i32*
  store i32 %v1_111d, i32* %v3_1122, align 4
  %v0_1126 = load i32, i32* @ebp, align 4
  %v1_1126 = add i32 %v0_1126, -164
  store i32 %v1_1126, i32* %eax.global-to-local, align 4
  %v1_112c = load i32, i32* @esp, align 4
  %v2_112c = inttoptr i32 %v1_112c to i32*
  store i32 %v1_1126, i32* %v2_112c, align 4
  %v0_112f = load i32, i32* %stack_var_-16, align 4
  %v1_112f = load i32, i32* %stack_var_-12, align 4
  %v2_112f = call i32 @_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_(i32 %v0_112f, i32 %v1_112f)
  %v0_1134 = load i32, i32* @ebp, align 4
  %v1_1134 = add i32 %v0_1134, -256
  store i32 %v1_1134, i32* %eax.global-to-local, align 4
  %v1_113a = load i32, i32* @esp, align 4
  %v2_113a = inttoptr i32 %v1_113a to i32*
  store i32 %v1_1134, i32* %v2_113a, align 4
  %v0_113d = load i32, i32* %stack_var_-16, align 4
  %v1_113d = call i32 @_ZN6CCoinsD1Ev(i32 %v0_113d)
  %v0_1142 = load i32, i32* @ebp, align 4
  %v1_1142 = add i32 %v0_1142, -284
  store i32 %v1_1142, i32* %eax.global-to-local, align 4
  %v1_1148 = load i32, i32* @esp, align 4
  %v2_1148 = inttoptr i32 %v1_1148 to i32*
  store i32 %v1_1142, i32* %v2_1148, align 4
  %v0_114b = load i32, i32* %stack_var_-16, align 4
  %v1_114b = call i32 @_ZN11CDataStreamD1Ev(i32 %v0_114b)
  store i32 %v1_114b, i32* %eax.global-to-local, align 4
  %v0_1150.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1150

dec_label_pc_1150:                                ; preds = %dec_label_pc_10b5, %dec_label_pc_d50
  %v0_115d = phi i32 [ %v0_1150.pre, %dec_label_pc_10b5 ], [ %v0_de2, %dec_label_pc_d50 ]
  %v1_1150 = add i32 %v0_115d, -180
  %v2_1150 = inttoptr i32 %v1_1150 to i32*
  %v3_1150 = load i32, i32* %v2_1150, align 4
  store i32 %v3_1150, i32* %eax.global-to-local, align 4
  %v1_1156 = inttoptr i32 %v3_1150 to i32*
  %v2_1156 = load i32, i32* %v1_1156, align 4
  %v1_1158 = add i32 %v2_1156, ptrtoint (i8** @global_var_18.1179 to i32)
  store i32 %v1_1158, i32* %eax.global-to-local, align 4
  %v1_115b = inttoptr i32 %v1_1158 to i32*
  %v2_115b = load i32, i32* %v1_115b, align 4
  store i32 %v2_115b, i32* %edx.global-to-local, align 4
  %v3_115d = load i32, i32* %v2_1150, align 4
  %v1_1163 = load i32, i32* @esp, align 4
  %v2_1163 = inttoptr i32 %v1_1163 to i32*
  store i32 %v3_115d, i32* %v2_1163, align 4
  %v0_1168 = load i32, i32* @ebp, align 4
  %v1_1168 = add i32 %v0_1168, -312
  store i32 %v1_1168, i32* %eax.global-to-local, align 4
  %v1_116e = load i32, i32* @esp, align 4
  %v2_116e = inttoptr i32 %v1_116e to i32*
  store i32 %v1_1168, i32* %v2_116e, align 4
  %v0_1171 = load i32, i32* %stack_var_-16, align 4
  %v1_1171 = call i32 @_ZN11CDataStreamD1Ev(i32 %v0_1171)
  store i32 %v1_1171, i32* %eax.global-to-local, align 4
  ret i32 %v1_1171

; uselistorder directives
  uselistorder i32 %v1_10cf, { 1, 0 }
  uselistorder i32* %v3_10a4, { 1, 0 }
  uselistorder i32 %v0_109f, { 1, 0, 2 }
  uselistorder i32 %v3_1080, { 1, 0 }
  uselistorder i32 %v1_dfe, { 1, 0, 2 }
  uselistorder i32 %v1_d5e, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 3, 4, 1, 0, 5, 6, 7, 2, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 -252, { 1, 0 }
  uselistorder i32 -184, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32)* @_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_, { 2, 1, 0 }
  uselistorder i32 (i32)* @_Z3REFI7CVarIntIiEERT_RKS2_, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_Z10WrapVarIntIiE7CVarIntIT_ERS1_, { 2, 1, 0 }
  uselistorder i32 (i32)* @_Z3REFIiERT_RKS0_, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN11CHashWriterlsI7uint256EERS_RKT_, { 1, 0 }
  uselistorder i32 (i32)* @_ZN7uint256C1Ev, { 1, 0 }
  uselistorder i8 99, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @_ZN11CDataStreamC1EPKcS1_ii, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK7leveldb5Slice4sizeEv, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZNK7leveldb5Slice4dataEv, { 3, 2, 1, 0 }
}

define i32 @function_1176(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1176:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1176 = load i32, i32* @ebp, align 4
  %v1_1176 = add i32 %v0_1176, -180
  %v2_1176 = inttoptr i32 %v1_1176 to i32*
  %v3_1176 = load i32, i32* %v2_1176, align 4
  %v1_117c = inttoptr i32 %v3_1176 to i32*
  %v2_117c = load i32, i32* %v1_117c, align 4
  %v1_117e = add i32 %v2_117c, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_1181 = inttoptr i32 %v1_117e to i32*
  %v2_1181 = load i32, i32* %v1_1181, align 4
  store i32 %v2_1181, i32* %edx.global-to-local, align 4
  %v3_1196 = load i32, i32* %v2_1176, align 4
  %v10_1196 = icmp eq i32 %v3_1196, 0
  br i1 %v10_1196, label %dec_label_pc_11b7, label %dec_label_pc_119f

dec_label_pc_119f:                                ; preds = %dec_label_pc_1176
  %v1_11a5 = inttoptr i32 %v3_1196 to i32*
  %v2_11a5 = load i32, i32* %v1_11a5, align 4
  %v1_11a7 = add i32 %v2_11a5, ptrtoint (i8** @global_var_4.1177 to i32)
  %v1_11aa = inttoptr i32 %v1_11a7 to i32*
  %v2_11aa = load i32, i32* %v1_11aa, align 4
  store i32 %v2_11aa, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_11b7

dec_label_pc_11b7:                                ; preds = %dec_label_pc_119f, %dec_label_pc_1176
  %v1_11b7 = add i32 %v0_1176, -316
  %v2_11b7 = inttoptr i32 %v1_11b7 to i32*
  %v3_11b7 = load i32, i32* %v2_11b7, align 4
  %v1_11bd = inttoptr i32 %v3_11b7 to i32*
  %v2_11bd = load i32, i32* %v1_11bd, align 4
  %v1_11bf = add i32 %v2_11bd, 12
  %v1_11c2 = inttoptr i32 %v1_11bf to i32*
  %v2_11c2 = load i32, i32* %v1_11c2, align 4
  store i32 %v2_11c2, i32* %edx.global-to-local, align 4
  %v3_11c4 = load i32, i32* %v2_11b7, align 4
  %v1_11cf = add i32 %v3_11c4, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_11cf = inttoptr i32 %v1_11cf to i32*
  %v3_11cf = load i32, i32* %v2_11cf, align 4
  store i32 %v3_11cf, i32* %edx.global-to-local, align 4
  %v1_11d2 = add i32 %v0_1176, -320
  %v2_11d2 = inttoptr i32 %v1_11d2 to i32*
  %v3_11d2 = load i32, i32* %v2_11d2, align 4
  %v2_11d8 = inttoptr i32 %v3_11d2 to i32*
  store i32 %v3_11cf, i32* %v2_11d8, align 4
  %v0_11da = load i32, i32* @ebp, align 4
  %v1_11da = add i32 %v0_11da, -320
  %v2_11da = inttoptr i32 %v1_11da to i32*
  %v3_11da = load i32, i32* %v2_11da, align 4
  store i32 %v3_11da, i32* %ebx.global-to-local, align 4
  %v1_11e0 = add i32 %v0_11da, -360
  %v1_11e6 = add i32 %v0_11da, -164
  store i32 %v1_11e6, i32* %edx.global-to-local, align 4
  %v2_11f3 = call i32 @_ZN11CHashWriter7GetHashEv(i32 %v1_11e0, i32 %v1_11e6)
  %v0_11fb = load i32, i32* @ebp, align 4
  %v1_11fb = add i32 %v0_11fb, -360
  %v2_11fb = inttoptr i32 %v1_11fb to i32*
  %v3_11fb = load i32, i32* %v2_11fb, align 4
  %v1_1201 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1201 = add i32 %v1_1201, 60
  %v3_1201 = inttoptr i32 %v2_1201 to i32*
  store i32 %v3_11fb, i32* %v3_1201, align 4
  %v0_1204 = load i32, i32* @ebp, align 4
  %v1_1204 = add i32 %v0_1204, -356
  %v2_1204 = inttoptr i32 %v1_1204 to i32*
  %v3_1204 = load i32, i32* %v2_1204, align 4
  %v1_120a = load i32, i32* %ebx.global-to-local, align 4
  %v2_120a = add i32 %v1_120a, 64
  %v3_120a = inttoptr i32 %v2_120a to i32*
  store i32 %v3_1204, i32* %v3_120a, align 4
  %v0_120d = load i32, i32* @ebp, align 4
  %v1_120d = add i32 %v0_120d, -352
  %v2_120d = inttoptr i32 %v1_120d to i32*
  %v3_120d = load i32, i32* %v2_120d, align 4
  %v1_1213 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1213 = add i32 %v1_1213, 68
  %v3_1213 = inttoptr i32 %v2_1213 to i32*
  store i32 %v3_120d, i32* %v3_1213, align 4
  %v0_1216 = load i32, i32* @ebp, align 4
  %v1_1216 = add i32 %v0_1216, -348
  %v2_1216 = inttoptr i32 %v1_1216 to i32*
  %v3_1216 = load i32, i32* %v2_1216, align 4
  %v1_121c = load i32, i32* %ebx.global-to-local, align 4
  %v2_121c = add i32 %v1_121c, 72
  %v3_121c = inttoptr i32 %v2_121c to i32*
  store i32 %v3_1216, i32* %v3_121c, align 4
  %v0_121f = load i32, i32* @ebp, align 4
  %v1_121f = add i32 %v0_121f, -344
  %v2_121f = inttoptr i32 %v1_121f to i32*
  %v3_121f = load i32, i32* %v2_121f, align 4
  %v1_1225 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1225 = add i32 %v1_1225, 76
  %v3_1225 = inttoptr i32 %v2_1225 to i32*
  store i32 %v3_121f, i32* %v3_1225, align 4
  %v0_1228 = load i32, i32* @ebp, align 4
  %v1_1228 = add i32 %v0_1228, -340
  %v2_1228 = inttoptr i32 %v1_1228 to i32*
  %v3_1228 = load i32, i32* %v2_1228, align 4
  %v1_122e = load i32, i32* %ebx.global-to-local, align 4
  %v2_122e = add i32 %v1_122e, 80
  %v3_122e = inttoptr i32 %v2_122e to i32*
  store i32 %v3_1228, i32* %v3_122e, align 4
  %v0_1231 = load i32, i32* @ebp, align 4
  %v1_1231 = add i32 %v0_1231, -336
  %v2_1231 = inttoptr i32 %v1_1231 to i32*
  %v3_1231 = load i32, i32* %v2_1231, align 4
  %v1_1237 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1237 = add i32 %v1_1237, 84
  %v3_1237 = inttoptr i32 %v2_1237 to i32*
  store i32 %v3_1231, i32* %v3_1237, align 4
  %v0_123a = load i32, i32* @ebp, align 4
  %v1_123a = add i32 %v0_123a, -332
  %v2_123a = inttoptr i32 %v1_123a to i32*
  %v3_123a = load i32, i32* %v2_123a, align 4
  %v1_1240 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1240 = add i32 %v1_1240, 88
  %v3_1240 = inttoptr i32 %v2_1240 to i32*
  store i32 %v3_123a, i32* %v3_1240, align 4
  %v0_1243 = load i32, i32* @ebp, align 4
  %v1_1243 = add i32 %v0_1243, -320
  %v2_1243 = inttoptr i32 %v1_1243 to i32*
  %v3_1243 = load i32, i32* %v2_1243, align 4
  store i32 %v3_1243, i32* %ecx.global-to-local, align 4
  %v1_1249 = add i32 %v0_1243, -232
  %v2_1249 = inttoptr i32 %v1_1249 to i32*
  %v3_1249 = load i32, i32* %v2_1249, align 4
  %v1_124f = add i32 %v0_1243, -228
  %v2_124f = inttoptr i32 %v1_124f to i32*
  %v3_124f = load i32, i32* %v2_124f, align 4
  store i32 %v3_124f, i32* %edx.global-to-local, align 4
  %v2_1255 = add i32 %v3_1243, 92
  %v3_1255 = inttoptr i32 %v2_1255 to i32*
  store i32 %v3_1249, i32* %v3_1255, align 4
  %v0_1258 = load i32, i32* %edx.global-to-local, align 4
  %v1_1258 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1258 = add i32 %v1_1258, 96
  %v3_1258 = inttoptr i32 %v2_1258 to i32*
  store i32 %v0_1258, i32* %v3_1258, align 4
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @eax, align 4
  %v0_1262 = load i32, i32* @ebp, align 4
  %v1_1262 = add i32 %v0_1262, -12
  %v2_1262 = inttoptr i32 %v1_1262 to i32*
  %v3_1262 = load i32, i32* %v2_1262, align 4
  store i32 %v3_1262, i32* %edx.global-to-local, align 4
  %v1_1265 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1265 = xor i32 %v1_1265, %v3_1262
  %v3_1265 = icmp eq i32 %v2_1265, 0
  store i32 %v2_1265, i32* %edx.global-to-local, align 4
  br i1 %v3_1265, label %bb, label %dec_label_pc_1272

bb:                                               ; preds = %dec_label_pc_11b7
  %v1_126c = call i32 @function_1308()
  store i32 %v1_126c, i32* @eax, align 4
  br label %dec_label_pc_1272

dec_label_pc_1272:                                ; preds = %bb, %dec_label_pc_11b7
  %v0_1272 = call i32 @function_1303()
  ret i32 %v0_1272

; uselistorder directives
  uselistorder i32 -228, { 1, 0 }
  uselistorder i32 -232, { 1, 0 }
  uselistorder i32 -164, { 7, 2, 0, 1, 3, 4, 5, 6 }
  uselistorder i32 -320, { 4, 5, 6, 1, 2, 0, 3 }
  uselistorder i32 -180, { 3, 0, 1, 2 }
}

define i32 @function_1277() local_unnamed_addr {
dec_label_pc_1277:
  %eax.global-to-local = alloca i32, align 4
  %v0_1277 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1277, i32* @esi, align 4
  %v0_127b = load i32, i32* @ebp, align 4
  %v1_127b = add i32 %v0_127b, -256
  store i32 %v1_127b, i32* %eax.global-to-local, align 4
  %v1_1284 = call i32 @_ZN6CCoinsD1Ev(i32 %v1_127b)
  store i32 %v1_1284, i32* %eax.global-to-local, align 4
  %v0_1289 = call i32 @function_128f()
  store i32 %v0_1289, i32* %eax.global-to-local, align 4
  ret i32 %v0_1289

; uselistorder directives
  uselistorder i32 (i32)* @_ZN6CCoinsD1Ev, { 1, 0 }
}

define i32 @function_128b() local_unnamed_addr {
dec_label_pc_128b:
  %eax.global-to-local = alloca i32, align 4
  %v0_128b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_128b
}

define i32 @function_128f() local_unnamed_addr {
dec_label_pc_128f:
  %v0_128f = load i32, i32* @ebp, align 4
  %v1_128f = add i32 %v0_128f, -284
  %v1_1298 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_128f)
  %v0_129d = call i32 @function_12a3()
  ret i32 %v0_129d
}

define i32 @function_129f() local_unnamed_addr {
dec_label_pc_129f:
  %eax.global-to-local = alloca i32, align 4
  %v0_129f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_129f
}

define i32 @function_12a3() local_unnamed_addr {
dec_label_pc_12a3:
  %v0_12a3 = load i32, i32* @ebp, align 4
  %v1_12a3 = add i32 %v0_12a3, -312
  %v1_12ac = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_12a3)
  %v0_12b1 = load i32, i32* @esi, align 4
  store i32 %v0_12b1, i32* @eax, align 4
  %v0_12b3 = load i32, i32* @ebx, align 4
  store i32 %v0_12b3, i32* @edx, align 4
  %v0_12b5 = call i32 @function_12c8()
  ret i32 %v0_12b5
}

define i32 @function_12b8() local_unnamed_addr {
dec_label_pc_12b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_12b8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12b8
}

define i32 @function_12c8() local_unnamed_addr {
dec_label_pc_12c8:
  %v0_12c8 = load i32, i32* @edx, align 4
  %v10_12c8 = icmp eq i32 %v0_12c8, 1
  br i1 %v10_12c8, label %bb, label %dec_label_pc_12c8.dec_label_pc_12cd_crit_edge

dec_label_pc_12c8.dec_label_pc_12cd_crit_edge:    ; preds = %dec_label_pc_12c8
  %v3_12cd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_12cd

bb:                                               ; preds = %dec_label_pc_12c8
  %v1_12cb = call i32 @function_12d5()
  br label %dec_label_pc_12cd

dec_label_pc_12cd:                                ; preds = %dec_label_pc_12c8.dec_label_pc_12cd_crit_edge, %bb
  %v3_12cd = phi i32 [ %v3_12cd.pre, %dec_label_pc_12c8.dec_label_pc_12cd_crit_edge ], [ %v1_12cb, %bb ]
  ret i32 %v3_12cd

; uselistorder directives
  uselistorder label %dec_label_pc_12cd, { 1, 0 }
}

define i32 @function_12d5() local_unnamed_addr {
dec_label_pc_12d5:
  %v3_12d5 = load i32, i32* @eax, align 4
  ret i32 %v3_12d5
}

define i32 @function_12f8() local_unnamed_addr {
dec_label_pc_12f8:
  %eax.global-to-local = alloca i32, align 4
  %v0_12f8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12f8
}

define i32 @function_12fe() local_unnamed_addr {
dec_label_pc_12fe:
  %eax.global-to-local = alloca i32, align 4
  %v0_12fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12fe
}

define i32 @function_1303() local_unnamed_addr {
dec_label_pc_1303:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1308() local_unnamed_addr {
dec_label_pc_1308:
  %v0_130e = load i32, i32* @eax, align 4
  ret i32 %v0_130e
}

define void @_ZN12CBlockTreeDB11ReadTxIndexERK7uint256R10CDiskTxPos(i32 %this, i32 %txid, i32 %pos) local_unnamed_addr {
dec_label_pc_1310:
  %stack_var_-52 = alloca i32, align 4
  %v2_1333 = ptrtoint i32* %stack_var_-52 to i32
  %v1_1339 = inttoptr i32 %txid to i32*
  %v2_1339 = load i32, i32* %v1_1339, align 4
  %v1_133f = add i32 %txid, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_133f = inttoptr i32 %v1_133f to i32*
  %v3_133f = load i32, i32* %v2_133f, align 4
  %v1_1346 = add i32 %txid, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_1346 = inttoptr i32 %v1_1346 to i32*
  %v3_1346 = load i32, i32* %v2_1346, align 4
  %v1_134d = add i32 %txid, 12
  %v2_134d = inttoptr i32 %v1_134d to i32*
  %v3_134d = load i32, i32* %v2_134d, align 4
  %v1_1354 = add i32 %txid, 16
  %v2_1354 = inttoptr i32 %v1_1354 to i32*
  %v3_1354 = load i32, i32* %v2_1354, align 4
  %v1_135b = add i32 %txid, 20
  %v2_135b = inttoptr i32 %v1_135b to i32*
  %v3_135b = load i32, i32* %v2_135b, align 4
  %v1_1362 = add i32 %txid, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1362 = inttoptr i32 %v1_1362 to i32*
  %v3_1362 = load i32, i32* %v2_1362, align 4
  store i32 %v3_1362, i32* @ecx, align 4
  %v1_1369 = add i32 %txid, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_1369 = inttoptr i32 %v1_1369 to i32*
  %v3_1369 = load i32, i32* %v2_1369, align 4
  %v11_137b = call i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %v2_1333, i8 116, i32 %v2_1339, i32 %v3_133f, i32 %v3_1346, i32 %v3_134d, i32 %v3_1354, i32 %v3_135b, i32 %v3_1362, i32 %v3_1369)
  %v3_1397 = call i32 @_ZN8CLevelDB4ReadISt4pairIc7uint256E10CDiskTxPosEEbRKT_RT0_(i32 %this, i32 %v2_1333, i32 %pos)
  store i32 %v3_1397, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13a8

bb:                                               ; preds = %dec_label_pc_1310
  %v1_13a6 = call i32 @function_13ad()
  br label %dec_label_pc_13a8

dec_label_pc_13a8:                                ; preds = %bb, %dec_label_pc_1310
  ret void

; uselistorder directives
  uselistorder i32 %txid, { 1, 0, 3, 2, 5, 4, 7, 6 }
}

define i32 @function_13ad() local_unnamed_addr {
dec_label_pc_13ad:
  %v0_13ae = load i32, i32* @eax, align 4
  ret i32 %v0_13ae
}

define void @_ZN12CBlockTreeDB12WriteTxIndexERKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS4_EE(i32 %this, i32 %vect) local_unnamed_addr {
dec_label_pc_13b0:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %it_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v2_13d1 = ptrtoint i32* %it_-68 to i32
  store i32 %v2_13d1, i32* %eax.global-to-local, align 4
  store i32 %v2_13d1, i32* %stack_var_-140, align 4
  %v1_13d7 = call i32 @_ZN13CLevelDBBatchC1Ev(i32 %v2_13d1)
  %v2_13dc = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_13dc, i32* %eax.global-to-local, align 4
  store i32 %v2_13dc, i32* %stack_var_-140, align 4
  %v2_13e9 = inttoptr i32 %vect to i32*
  %v3_13e9 = call i32 @_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE5beginEv(i32 %v2_13dc, i32* %v2_13e9)
  store i32 %v3_13e9, i32* %eax.global-to-local, align 4
  %v16_13ee = ptrtoint i32* %stack_var_-144 to i32
  %v2_148f = ptrtoint i32* %stack_var_-60 to i32
  %v2_140f = ptrtoint i32* %stack_var_-52 to i32
  %v10_1454 = trunc i32 %vect to i8
  %v2_1472 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_148f

dec_label_pc_13f6:                                ; preds = %dec_label_pc_148f
  store i32 %v2_13dc, i32* %eax.global-to-local, align 4
  %v1_13f9 = load i32, i32* @esp, align 4
  %v2_13f9 = inttoptr i32 %v1_13f9 to i32*
  store i32 %v2_13dc, i32* %v2_13f9, align 4
  %v0_13fc = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv()
  %v1_1401 = add i32 %v0_13fc, ptrtoint (i32* @global_var_20.1184 to i32)
  store i32 %v1_1401, i32* @ebx, align 4
  store i32 %v2_13dc, i32* %eax.global-to-local, align 4
  %v1_1407 = load i32, i32* @esp, align 4
  %v2_1407 = inttoptr i32 %v1_1407 to i32*
  store i32 %v2_13dc, i32* %v2_1407, align 4
  %v0_140a = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv()
  store i32 %v0_140a, i32* %eax.global-to-local, align 4
  %v1_1412 = inttoptr i32 %v0_140a to i32*
  %v2_1412 = load i32, i32* %v1_1412, align 4
  %v1_1414 = load i32, i32* @esp, align 4
  %v2_1414 = add i32 %v1_1414, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_1414 = inttoptr i32 %v2_1414 to i32*
  store i32 %v2_1412, i32* %v3_1414, align 4
  %v0_1418 = load i32, i32* %eax.global-to-local, align 4
  %v1_1418 = add i32 %v0_1418, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1418 = inttoptr i32 %v1_1418 to i32*
  %v3_1418 = load i32, i32* %v2_1418, align 4
  %v1_141b = load i32, i32* @esp, align 4
  %v2_141b = add i32 %v1_141b, 12
  %v3_141b = inttoptr i32 %v2_141b to i32*
  store i32 %v3_1418, i32* %v3_141b, align 4
  %v0_141f = load i32, i32* %eax.global-to-local, align 4
  %v1_141f = add i32 %v0_141f, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_141f = inttoptr i32 %v1_141f to i32*
  %v3_141f = load i32, i32* %v2_141f, align 4
  %v1_1422 = load i32, i32* @esp, align 4
  %v2_1422 = add i32 %v1_1422, 16
  %v3_1422 = inttoptr i32 %v2_1422 to i32*
  store i32 %v3_141f, i32* %v3_1422, align 4
  %v0_1426 = load i32, i32* %eax.global-to-local, align 4
  %v1_1426 = add i32 %v0_1426, 12
  %v2_1426 = inttoptr i32 %v1_1426 to i32*
  %v3_1426 = load i32, i32* %v2_1426, align 4
  %v1_1429 = load i32, i32* @esp, align 4
  %v2_1429 = add i32 %v1_1429, 20
  %v3_1429 = inttoptr i32 %v2_1429 to i32*
  store i32 %v3_1426, i32* %v3_1429, align 4
  %v0_142d = load i32, i32* %eax.global-to-local, align 4
  %v1_142d = add i32 %v0_142d, 16
  %v2_142d = inttoptr i32 %v1_142d to i32*
  %v3_142d = load i32, i32* %v2_142d, align 4
  %v1_1430 = load i32, i32* @esp, align 4
  %v2_1430 = add i32 %v1_1430, ptrtoint (i8** @global_var_18.1179 to i32)
  %v3_1430 = inttoptr i32 %v2_1430 to i32*
  store i32 %v3_142d, i32* %v3_1430, align 4
  %v0_1434 = load i32, i32* %eax.global-to-local, align 4
  %v1_1434 = add i32 %v0_1434, 20
  %v2_1434 = inttoptr i32 %v1_1434 to i32*
  %v3_1434 = load i32, i32* %v2_1434, align 4
  %v1_1437 = load i32, i32* @esp, align 4
  %v2_1437 = add i32 %v1_1437, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v3_1437 = inttoptr i32 %v2_1437 to i32*
  store i32 %v3_1434, i32* %v3_1437, align 4
  %v0_143b = load i32, i32* %eax.global-to-local, align 4
  %v1_143b = add i32 %v0_143b, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_143b = inttoptr i32 %v1_143b to i32*
  %v3_143b = load i32, i32* %v2_143b, align 4
  store i32 %v3_143b, i32* @ecx, align 4
  %v1_143e = load i32, i32* @esp, align 4
  %v2_143e = add i32 %v1_143e, ptrtoint (i32* @global_var_20.1184 to i32)
  %v3_143e = inttoptr i32 %v2_143e to i32*
  store i32 %v3_143b, i32* %v3_143e, align 4
  %v0_1442 = load i32, i32* %eax.global-to-local, align 4
  %v1_1442 = add i32 %v0_1442, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_1442 = inttoptr i32 %v1_1442 to i32*
  %v3_1442 = load i32, i32* %v2_1442, align 4
  store i32 %v3_1442, i32* %eax.global-to-local, align 4
  %v1_1445 = load i32, i32* @esp, align 4
  %v2_1445 = add i32 %v1_1445, 36
  %v3_1445 = inttoptr i32 %v2_1445 to i32*
  store i32 %v3_1442, i32* %v3_1445, align 4
  %v0_1449 = load i32, i32* @esp, align 4
  %v1_1449 = add i32 %v0_1449, 4
  %v2_1449 = inttoptr i32 %v1_1449 to i32*
  store i32 116, i32* %v2_1449, align 4
  %v1_1451 = load i32, i32* @esp, align 4
  %v2_1451 = inttoptr i32 %v1_1451 to i32*
  store i32 %v2_140f, i32* %v2_1451, align 4
  %v0_1454 = load i32, i32* %stack_var_-140, align 4
  %v11_1454 = call i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %v0_1454, i8 %v10_1454, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_1459 = load i32, i32* @esp, align 4
  %v1_1459 = sub i32 %v0_1459, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_145c = load i32, i32* @ebx, align 4
  %v2_145c = add i32 %v1_1459, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_145c = inttoptr i32 %v2_145c to i32*
  store i32 %v0_145c, i32* %v3_145c, align 4
  %v1_1463 = load i32, i32* @esp, align 4
  %v2_1463 = add i32 %v1_1463, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1463 = inttoptr i32 %v2_1463 to i32*
  store i32 %v2_140f, i32* %v3_1463, align 4
  store i32 %v2_13d1, i32* %eax.global-to-local, align 4
  %v1_146a = load i32, i32* @esp, align 4
  %v2_146a = inttoptr i32 %v1_146a to i32*
  store i32 %v2_13d1, i32* %v2_146a, align 4
  %v0_146d = call i32 @_ZN13CLevelDBBatch5WriteISt4pairIc7uint256E10CDiskTxPosEEvRKT_RKT0_()
  store i32 %v2_1472, i32* %eax.global-to-local, align 4
  %v0_1475 = load i32, i32* @esp, align 4
  %v1_1475 = add i32 %v0_1475, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_1475 = inttoptr i32 %v1_1475 to i32*
  store i32 0, i32* %v2_1475, align 4
  %v1_1480 = load i32, i32* @esp, align 4
  %v2_1480 = add i32 %v1_1480, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1480 = inttoptr i32 %v2_1480 to i32*
  store i32 %v2_13dc, i32* %v3_1480, align 4
  %v1_1484 = load i32, i32* @esp, align 4
  %v2_1484 = inttoptr i32 %v1_1484 to i32*
  store i32 %v2_1472, i32* %v2_1484, align 4
  %v0_1487 = call i32 @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEppEi()
  store i32 %v0_1487, i32* %eax.global-to-local, align 4
  %v0_148c = load i32, i32* @esp, align 4
  %v1_148c = sub i32 %v0_148c, ptrtoint (i8** @global_var_4.1177 to i32)
  br label %dec_label_pc_148f

dec_label_pc_148f:                                ; preds = %dec_label_pc_13f6, %dec_label_pc_13b0
  %storemerge = phi i32 [ %v1_148c, %dec_label_pc_13f6 ], [ %v16_13ee, %dec_label_pc_13b0 ]
  store i32 %v2_148f, i32* %eax.global-to-local, align 4
  %v2_1495 = add i32 %storemerge, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1495 = inttoptr i32 %v2_1495 to i32*
  store i32 %vect, i32* %v3_1495, align 4
  %v1_1499 = load i32, i32* @esp, align 4
  %v2_1499 = inttoptr i32 %v1_1499 to i32*
  store i32 %v2_148f, i32* %v2_1499, align 4
  %v0_149c = call i32 @_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE3endEv()
  %v0_14a1 = load i32, i32* @esp, align 4
  %v3_14a7 = inttoptr i32 %v0_14a1 to i32*
  store i32 %v2_148f, i32* %v3_14a7, align 4
  store i32 %v2_13dc, i32* %eax.global-to-local, align 4
  %v1_14ae = load i32, i32* @esp, align 4
  %v2_14ae = inttoptr i32 %v1_14ae to i32*
  store i32 %v2_13dc, i32* %v2_14ae, align 4
  %v0_14b1 = call i32 @_ZN9__gnu_cxxneIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_()
  store i32 %v0_14b1, i32* %eax.global-to-local, align 4
  %v4_14b6 = trunc i32 %v0_14b1 to i8
  %v5_14b6 = icmp eq i8 %v4_14b6, 0
  %v1_14b8 = icmp eq i1 %v5_14b6, false
  br i1 %v1_14b8, label %dec_label_pc_13f6, label %dec_label_pc_14be

dec_label_pc_14be:                                ; preds = %dec_label_pc_148f
  store i32 %this, i32* %eax.global-to-local, align 4
  %v0_14c1 = load i32, i32* @esp, align 4
  %v1_14c1 = add i32 %v0_14c1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_14c1 = inttoptr i32 %v1_14c1 to i32*
  store i32 0, i32* %v2_14c1, align 4
  %v1_14cc = load i32, i32* @esp, align 4
  %v2_14cc = add i32 %v1_14cc, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_14cc = inttoptr i32 %v2_14cc to i32*
  store i32 %v2_13d1, i32* %v3_14cc, align 4
  %v0_14d0 = load i32, i32* %eax.global-to-local, align 4
  %v1_14d0 = load i32, i32* @esp, align 4
  %v2_14d0 = inttoptr i32 %v1_14d0 to i32*
  store i32 %v0_14d0, i32* %v2_14d0, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v2_13dc, { 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %v2_13d1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 14, 15, 16, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21 }
  uselistorder i32 ()* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZN13CLevelDBBatchC1Ev, { 2, 1, 0 }
  uselistorder i32 %vect, { 1, 0, 2 }
}

define i32 @function_14d7() local_unnamed_addr {
dec_label_pc_14d7:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14d7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14d7 = add i32 %v0_14d7, -1069183549
  %v2_14d7 = inttoptr i32 %v1_14d7 to i32*
  %v3_14d7 = load i32, i32* %v2_14d7, align 4
  %v4_14d7 = sub i32 %v3_14d7, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_14d7, i32* %v2_14d7, align 4
  %v0_14dd = load i32, i32* %eax.global-to-local, align 4
  %v1_14e0 = call i32 @_ZN13CLevelDBBatchD1Ev(i32 %v0_14dd)
  %v0_14e5 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_14e5, i32* @eax, align 4
  %v0_14e7 = load i32, i32* @ebp, align 4
  %v1_14e7 = add i32 %v0_14e7, -12
  %v2_14e7 = inttoptr i32 %v1_14e7 to i32*
  %v3_14e7 = load i32, i32* %v2_14e7, align 4
  %v1_14ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14ea = icmp eq i32 %v1_14ea, %v3_14e7
  br i1 %v3_14ea, label %bb, label %dec_label_pc_14f3

bb:                                               ; preds = %dec_label_pc_14d7
  %v1_14f1 = call i32 @function_1511()
  store i32 %v1_14f1, i32* @eax, align 4
  br label %dec_label_pc_14f3

dec_label_pc_14f3:                                ; preds = %bb, %dec_label_pc_14d7
  %v0_14f3 = call i32 @function_150c()
  store i32 %v0_14f3, i32* %eax.global-to-local, align 4
  ret i32 %v0_14f3

; uselistorder directives
  uselistorder i32 (i32)* @_ZN13CLevelDBBatchD1Ev, { 3, 2, 1, 0 }
}

define i32 @function_14f6() local_unnamed_addr {
dec_label_pc_14f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_14f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14f6
}

define i32 @function_150c() local_unnamed_addr {
dec_label_pc_150c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1511() local_unnamed_addr {
dec_label_pc_1511:
  %v0_1515 = load i32, i32* @eax, align 4
  ret i32 %v0_1515
}

define void @_ZN12CBlockTreeDB9WriteFlagERKSsb(i32 %this, i32 %name, i1 %fValue) local_unnamed_addr {
dec_label_pc_1516:
  ret void
}

define i32 @function_15a0() local_unnamed_addr {
dec_label_pc_15a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_15a0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15a0
}

define i32 @function_15b6() local_unnamed_addr {
dec_label_pc_15b6:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_15b6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15b6 = add i32 %v0_15b6, -195720232
  %v2_15b6 = inttoptr i32 %v1_15b6 to i32*
  %v3_15b6 = load i32, i32* %v2_15b6, align 4
  %v4_15b6 = sub i32 %v3_15b6, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_15b6, i32* %v2_15b6, align 4
  %v0_15bc = load i32, i32* %edx.global-to-local, align 4
  %v1_15bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15bc = xor i32 %v1_15bc, %v0_15bc
  %v3_15bc = icmp eq i32 %v2_15bc, 0
  store i32 %v2_15bc, i32* %edx.global-to-local, align 4
  br i1 %v3_15bc, label %bb, label %dec_label_pc_15c5

bb:                                               ; preds = %dec_label_pc_15b6
  %v1_15c3 = call i32 @function_15f2()
  store i32 %v1_15c3, i32* @eax, align 4
  br label %dec_label_pc_15c5

dec_label_pc_15c5:                                ; preds = %bb, %dec_label_pc_15b6
  %v0_15c5 = call i32 @function_15ed()
  ret i32 %v0_15c5

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
}

define i32 @function_15c7() local_unnamed_addr {
dec_label_pc_15c7:
  %v0_15c9 = load i32, i32* @ebp, align 4
  %v1_15c9 = add i32 %v0_15c9, -28
  %v1_15cf = call i32 @_ZNSt4pairIcSsED1Ev(i32 %v1_15c9)
  %v0_15d4 = call i32 @function_15d8()
  ret i32 %v0_15d4
}

define i32 @function_15d6() local_unnamed_addr {
dec_label_pc_15d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_15d6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15d6
}

define i32 @function_15d8() local_unnamed_addr {
dec_label_pc_15d8:
  %v0_15d8 = load i32, i32* @ebp, align 4
  %v1_15d8 = add i32 %v0_15d8, -20
  ret i32 %v1_15d8
}

define i32 @function_15ed() local_unnamed_addr {
dec_label_pc_15ed:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15f2() local_unnamed_addr {
dec_label_pc_15f2:
  %v0_15f6 = load i32, i32* @eax, align 4
  ret i32 %v0_15f6
}

define void @_ZN12CBlockTreeDB8ReadFlagERKSsRb(i32 %this, i32 %name, i1 %fValue) local_unnamed_addr {
dec_label_pc_15f8:
  ret void
}

define i32 @function_1665() local_unnamed_addr {
dec_label_pc_1665:
  %eax.global-to-local = alloca i32, align 4
  %v0_1665 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1665
}

define i32 @function_167e() local_unnamed_addr {
dec_label_pc_167e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_167e = load i32, i32* %ebx.global-to-local, align 4
  %v2_167e = mul i32 %v0_167e, 8
  %v3_167e = add i32 %v0_167e, 12060532
  %v4_167e = add i32 %v3_167e, %v2_167e
  %v5_167e = inttoptr i32 %v4_167e to i32*
  %v6_167e = load i32, i32* %v5_167e, align 4
  %v7_167e = add i32 %v6_167e, 1
  store i32 %v7_167e, i32* %v5_167e, align 4
  %v2_1685 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1685 = load i32, i32* %eax.global-to-local, align 4
  %v4_1685 = trunc i32 %v3_1685 to i8
  %v5_1685 = add i8 %v4_1685, %v2_1685
  %v21_1685 = inttoptr i32 %v3_1685 to i8*
  store i8 %v5_1685, i8* %v21_1685, align 1
  %v0_1687 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1687 = trunc i32 %v0_1687 to i8
  %v2_1687 = load i32, i32* %ecx.global-to-local, align 4
  %v3_1687 = lshr i32 %v2_1687, ptrtoint (i32* @global_var_8.1178 to i32)
  %v4_1687 = trunc i32 %v3_1687 to i8
  %v5_1687 = add i8 %v4_1687, %v1_1687
  %v10_1687 = icmp ult i8 %v5_1687, %v1_1687
  %v20_1687 = zext i8 %v5_1687 to i32
  %v22_1687 = and i32 %v0_1687, -256
  %v23_1687 = or i32 %v20_1687, %v22_1687
  store i32 %v23_1687, i32* %ebx.global-to-local, align 4
  %v3_1689 = load i32, i32* %edi.global-to-local, align 4
  %v5_1689 = zext i1 %v10_1687 to i32
  %v6_1689 = add i32 %v3_1689, %v2_1687
  %v7_1689 = add i32 %v6_1689, %v5_1689
  store i32 %v7_1689, i32* %ecx.global-to-local, align 4
  %v0_168b = load i32, i32* %edx.global-to-local, align 4
  %v0_168d = load i32, i32* %eax.global-to-local, align 4
  %v1_168d = trunc i32 %v0_168d to i8
  %v11_168d = icmp eq i8 %v1_168d, 49
  %v1_1690 = zext i1 %v11_168d to i32
  %v2_168b = and i32 %v0_168b, -65536
  %v3_1690 = or i32 %v2_168b, %v1_1690
  %v4_1690 = or i32 %v3_1690, 17664
  store i32 %v4_1690, i32* %edx.global-to-local, align 4
  %v0_1693 = load i32, i32* @ebp, align 4
  %v1_1693 = add i32 %v0_1693, -52
  %v2_1693 = inttoptr i32 %v1_1693 to i32*
  %v3_1693 = load i32, i32* %v2_1693, align 4
  %v1_1696 = zext i1 %v11_168d to i8
  %v3_1696 = inttoptr i32 %v3_1693 to i8*
  store i8 %v1_1696, i8* %v3_1696, align 1
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @eax, align 4
  %v0_169d = load i32, i32* @ebp, align 4
  %v1_169d = add i32 %v0_169d, -12
  %v2_169d = inttoptr i32 %v1_169d to i32*
  %v3_169d = load i32, i32* %v2_169d, align 4
  store i32 %v3_169d, i32* %edx.global-to-local, align 4
  %v1_16a0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16a0 = xor i32 %v1_16a0, %v3_169d
  %v3_16a0 = icmp eq i32 %v2_16a0, 0
  store i32 %v2_16a0, i32* %edx.global-to-local, align 4
  br i1 %v3_16a0, label %bb, label %dec_label_pc_16a9

bb:                                               ; preds = %dec_label_pc_167e
  %v1_16a7 = call i32 @function_16d6()
  store i32 %v1_16a7, i32* @eax, align 4
  br label %dec_label_pc_16a9

dec_label_pc_16a9:                                ; preds = %bb, %dec_label_pc_167e
  %v0_16a9 = call i32 @function_16d1()
  store i32 %v0_16a9, i32* %eax.global-to-local, align 4
  ret i32 %v0_16a9

; uselistorder directives
  uselistorder i8 %v1_1687, { 1, 0 }
  uselistorder i32 %v0_167e, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
}

define i32 @function_16ab() local_unnamed_addr {
dec_label_pc_16ab:
  %v0_16ad = load i32, i32* @ebp, align 4
  %v1_16ad = add i32 %v0_16ad, -28
  %v1_16b3 = call i32 @_ZNSt4pairIcSsED1Ev(i32 %v1_16ad)
  %v0_16b8 = call i32 @function_16bc()
  ret i32 %v0_16b8

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt4pairIcSsED1Ev, { 1, 0 }
}

define i32 @function_16ba() local_unnamed_addr {
dec_label_pc_16ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_16ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16ba
}

define i32 @function_16bc() local_unnamed_addr {
dec_label_pc_16bc:
  %v0_16bc = load i32, i32* @ebp, align 4
  %v1_16bc = add i32 %v0_16bc, -20
  ret i32 %v1_16bc
}

define i32 @function_16d1() local_unnamed_addr {
dec_label_pc_16d1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16d6() local_unnamed_addr {
dec_label_pc_16d6:
  %v0_16da = load i32, i32* @eax, align 4
  ret i32 %v0_16da
}

define void @_ZN12CBlockTreeDB18LoadBlockIndexGutsEv(i32 %this) local_unnamed_addr {
dec_label_pc_16dc:
  %slKey_-344 = alloca %Slice.1, align 8
  %pcursor_-320 = alloca i32, align 4
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %tmp109 = call i32 @__decompiler_undefined_function_0()
  %tmp111 = call i32 @__decompiler_undefined_function_0()
  %tmp113 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-428 = alloca i32, align 4
  %v1_1704 = call i32 @_ZN8CLevelDB11NewIteratorEv(i32 %this)
  %v2_171f = ptrtoint i32* %stack_var_-428 to i32
  %v3_1728 = call i32 @_ZN11CDataStreamC1Eii(i32 %v2_171f, i32 2, i32 1020000)
  %v4_1743 = call i32 @_ZN7uint256C1Ey(i32* nonnull %stack_var_-112, i32 0, i32 0)
  %v2_1748 = ptrtoint i32* %stack_var_-148 to i32
  %v3_174e = load i32, i32* %stack_var_-112, align 4
  %v11_1791 = call i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %v2_1748, i8 98, i32 %v3_174e, i32 %tmp113, i32 %tmp111, i32 %tmp109, i32 %tmp107, i32 %tmp105, i32 %tmp103, i32 %tmp101)
  %v2_17ac = call i32 @_ZN11CDataStreamlsISt4pairIc7uint256EEERS_RKT_(i32 %v2_171f, i32 %v2_1748)
  %v2_17be = ptrtoint i32* %pcursor_-320 to i32
  %v2_17d1 = call i32 @_ZNK11CDataStream3strEv(i32 %v2_17be, i32 %v2_171f)
  %v2_17e3 = ptrtoint %Slice.1* %slKey_-344 to i32
  %v2_17ec = call i32 @_ZN7leveldb5SliceC1ERKSs(i32 %v2_17e3, i32 %v2_17be)
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i32 (i32, i8, i32, i32, i32, i32, i32, i32, i32, i32)* @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32)* @_ZN8CLevelDB11NewIteratorEv, { 1, 0 }
}

define i32 @function_1814() local_unnamed_addr {
dec_label_pc_1814:
  %eax.global-to-local = alloca i32, align 4
  %v0_1814 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1814
}

define i32 @function_1819(i32 %arg1) local_unnamed_addr {
dec_label_pc_1819:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1852() local_unnamed_addr {
dec_label_pc_1852:
  %eax.global-to-local = alloca i32, align 4
  %v0_1852 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1852
}

define i32 @function_1860() local_unnamed_addr {
dec_label_pc_1860:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_1860 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_1860 = load i32, i32* %eax.global-to-local, align 4
  %v4_1860 = trunc i32 %v3_1860 to i8
  %v5_1860 = add i8 %v4_1860, %v2_1860
  %v20_1860 = load i32, i32* %ecx.global-to-local, align 4
  %v21_1860 = inttoptr i32 %v20_1860 to i8*
  store i8 %v5_1860, i8* %v21_1860, align 1
  %v0_1862 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1862
}

define i32 @function_18f2() local_unnamed_addr {
dec_label_pc_18f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_18f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18f2
}

define i32 @function_18f4() local_unnamed_addr {
dec_label_pc_18f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_18fb = load i32, i32* %eax.global-to-local, align 4
  %v11_18fb = and i32 %v0_18fb, -24
  store i32 %v11_18fb, i32* %eax.global-to-local, align 4
  ret i32 %v11_18fb

; uselistorder directives
  uselistorder i32 %v11_18fb, { 1, 0 }
}

define i32 @function_1931() local_unnamed_addr {
dec_label_pc_1931:
  %eax.global-to-local = alloca i32, align 4
  %v0_1931 = load i32, i32* %eax.global-to-local, align 4
  %v11_1931 = and i32 %v0_1931, -24
  store i32 %v11_1931, i32* %eax.global-to-local, align 4
  ret i32 %v11_1931

; uselistorder directives
  uselistorder i32 %v11_1931, { 1, 0 }
}

define i32 @function_1a0c() local_unnamed_addr {
dec_label_pc_1a0c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a0c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a0c
}

define i32 @function_1b07() local_unnamed_addr {
dec_label_pc_1b07:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b07 = load i32, i32* @ecx, align 4
  %v1_1b07 = add i32 %v0_1b07, -1830280188
  %v2_1b07 = inttoptr i32 %v1_1b07 to i32*
  %v3_1b07 = load i32, i32* %v2_1b07, align 4
  %v4_1b07 = sub i32 %v3_1b07, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1b07, i32* %v2_1b07, align 4
  %v2_1b0e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1b0e = load i32, i32* %eax.global-to-local, align 4
  %v4_1b0e = trunc i32 %v3_1b0e to i8
  %v5_1b0e = add i8 %v4_1b0e, %v2_1b0e
  %v21_1b0e = inttoptr i32 %v3_1b0e to i8*
  store i8 %v5_1b0e, i8* %v21_1b0e, align 1
  %v0_1b10 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1b10, i32* @ebx, align 4
  %v0_1b12 = load i32, i32* @ebp, align 4
  %v1_1b12 = add i32 %v0_1b12, -44
  store i32 %v1_1b12, i32* %eax.global-to-local, align 4
  %v1_1b15 = add i32 %v0_1b12, -292
  %v2_1b22 = call i32 @_ZNK15CDiskBlockIndex12GetBlockHashEv(i32 %v1_1b12, i32 %v1_1b15)
  %v0_1b2a = load i32, i32* @ebx, align 4
  %v0_1b2e = load i32, i32* @ebp, align 4
  %v1_1b2e = add i32 %v0_1b2e, -44
  store i32 %v1_1b2e, i32* %eax.global-to-local, align 4
  %v2_1b34 = inttoptr i32 %v1_1b2e to i32*
  %v3_1b34 = call i32 @_ZeqRK7uint256S1_(i32* %v2_1b34, i32 %v0_1b2a)
  store i32 %v3_1b34, i32* %eax.global-to-local, align 4
  %v4_1b39 = trunc i32 %v3_1b34 to i8
  %v5_1b39 = icmp eq i8 %v4_1b39, 0
  br i1 %v5_1b39, label %bb, label %dec_label_pc_1b3d

bb:                                               ; preds = %dec_label_pc_1b07
  %v1_1b3b = call i32 @function_1b44()
  store i32 %v1_1b3b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b3d

dec_label_pc_1b3d:                                ; preds = %bb, %dec_label_pc_1b07
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* %eax.global-to-local, align 4
  ret i32 ptrtoint (i8** @global_var_1.1176 to i32)

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32, i32)* @_ZNK15CDiskBlockIndex12GetBlockHashEv, { 1, 0 }
}

define i32 @function_1b44() local_unnamed_addr {
dec_label_pc_1b44:
  %v1_1b4b = call i32 @function_1b58()
  %v0_1b4d = load i32, i32* @ebp, align 4
  %v1_1b4d = add i32 %v0_1b4d, -304
  %v2_1b4d = inttoptr i32 %v1_1b4d to i32*
  %v3_1b4d = load i32, i32* %v2_1b4d, align 4
  ret i32 %v3_1b4d
}

define i32 @function_1b58() local_unnamed_addr {
dec_label_pc_1b58:
  %v0_1b58 = load i32, i32* @ebp, align 4
  %v1_1b58 = add i32 %v0_1b58, -304
  %v2_1b58 = inttoptr i32 %v1_1b58 to i32*
  %v3_1b58 = load i32, i32* %v2_1b58, align 4
  %v1_1b61 = call i32 @_ZNK11CBlockIndex10CheckIndexEv(i32 %v3_1b58)
  %v1_1b66 = xor i32 %v1_1b61, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_1b66 = trunc i32 %v1_1b66 to i8
  %v5_1b69 = icmp eq i8 %v4_1b66, 0
  br i1 %v5_1b69, label %bb, label %dec_label_pc_1b6d

bb:                                               ; preds = %dec_label_pc_1b58
  %v1_1b6b = call i32 @function_1bbd()
  br label %dec_label_pc_1b6d

dec_label_pc_1b6d:                                ; preds = %bb, %dec_label_pc_1b58
  %v0_1b6d = load i32, i32* @ebp, align 4
  %v1_1b6d = add i32 %v0_1b6d, -312
  %v1_1b73 = add i32 %v0_1b6d, -304
  %v2_1b73 = inttoptr i32 %v1_1b73 to i32*
  %v3_1b73 = load i32, i32* %v2_1b73, align 4
  %v2_1b80 = call i32 @_ZNK11CBlockIndex8ToStringEv(i32 %v1_1b6d, i32 %v3_1b73)
  %v0_1b88 = load i32, i32* @ebp, align 4
  %v1_1b88 = add i32 %v0_1b88, -312
  ret i32 %v1_1b88

; uselistorder directives
  uselistorder i32 -312, { 5, 6, 0, 1, 2, 3, 4 }
}

define i32 @function_1bb6() local_unnamed_addr {
dec_label_pc_1bb6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bbb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bbb
}

define i32 @function_1bbd() local_unnamed_addr {
dec_label_pc_1bbd:
  %v0_1bbd = load i32, i32* @ebp, align 4
  %v1_1bda = add i32 %v0_1bbd, -368
  %v1_1be3 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_1bda)
  %v0_1c00 = load i32, i32* @ebp, align 4
  %v1_1c00 = add i32 %v0_1c00, -396
  %v1_1c09 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_1c00)
  %v0_1c0e = load i32, i32* @ebx, align 4
  %v1_1c0e = icmp eq i32 %v0_1c0e, 0
  br i1 %v1_1c0e, label %dec_label_pc_1bbd.dec_label_pc_1c5d_crit_edge, label %dec_label_pc_1c12

dec_label_pc_1bbd.dec_label_pc_1c5d_crit_edge:    ; preds = %dec_label_pc_1bbd
  %v0_1c5d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1c5d

dec_label_pc_1c12:                                ; preds = %dec_label_pc_1bbd
  %v10_1c12 = icmp eq i32 %v0_1c0e, 2
  %v1_1c15 = icmp eq i1 %v10_1c12, false
  br i1 %v1_1c15, label %dec_label_pc_1c37, label %dec_label_pc_1c17

dec_label_pc_1c17:                                ; preds = %dec_label_pc_1c12
  %v0_1c17 = load i32, i32* @ebp, align 4
  %v1_1c17 = add i32 %v0_1c17, -308
  %v2_1c17 = inttoptr i32 %v1_1c17 to i32*
  %v3_1c24 = load i32, i32* %v2_1c17, align 4
  store i32 %v3_1c24, i32* @eax, align 4
  %v4_1c2f = trunc i32 %v3_1c24 to i8
  %v5_1c2f = icmp eq i8 %v4_1c2f, 0
  %v1_1c31 = icmp eq i1 %v5_1c2f, false
  br i1 %v1_1c31, label %bb, label %dec_label_pc_1c37

bb:                                               ; preds = %dec_label_pc_1c17
  %v3_1c31 = call i32 @function_1819(i32 %v3_1c24)
  br label %dec_label_pc_1c37

dec_label_pc_1c37:                                ; preds = %bb, %dec_label_pc_1c17, %dec_label_pc_1c12
  %v0_1c37 = load i32, i32* @ebp, align 4
  %v1_1c37 = add i32 %v0_1c37, -308
  %v2_1c37 = inttoptr i32 %v1_1c37 to i32*
  %v3_1c37 = load i32, i32* %v2_1c37, align 4
  %v10_1c37 = icmp eq i32 %v3_1c37, 0
  br i1 %v10_1c37, label %dec_label_pc_1c58, label %dec_label_pc_1c40

dec_label_pc_1c40:                                ; preds = %dec_label_pc_1c37
  br label %dec_label_pc_1c58

dec_label_pc_1c58:                                ; preds = %dec_label_pc_1c40, %dec_label_pc_1c37
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @esi, align 4
  br label %dec_label_pc_1c5d

dec_label_pc_1c5d:                                ; preds = %dec_label_pc_1bbd.dec_label_pc_1c5d_crit_edge, %dec_label_pc_1c58
  %v0_1c5d = phi i32 [ %v0_1c5d.pre, %dec_label_pc_1bbd.dec_label_pc_1c5d_crit_edge ], [ %v0_1c37, %dec_label_pc_1c58 ]
  %v1_1c5d = add i32 %v0_1c5d, -424
  %v1_1c66 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_1c5d)
  %v0_1c6b = load i32, i32* @esi, align 4
  store i32 %v0_1c6b, i32* @eax, align 4
  %v0_1c6d = load i32, i32* @ebp, align 4
  %v1_1c6d = add i32 %v0_1c6d, -12
  %v2_1c6d = inttoptr i32 %v1_1c6d to i32*
  %v3_1c6d = load i32, i32* %v2_1c6d, align 4
  %v1_1c70 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1c70 = icmp eq i32 %v1_1c70, %v3_1c6d
  br i1 %v3_1c70, label %bb7, label %dec_label_pc_1c7d

bb7:                                              ; preds = %dec_label_pc_1c5d
  %v1_1c77 = call i32 @function_1d36()
  store i32 %v1_1c77, i32* @eax, align 4
  br label %dec_label_pc_1c7d

dec_label_pc_1c7d:                                ; preds = %bb7, %dec_label_pc_1c5d
  %v0_1c7d = call i32 @function_1d31()
  ret i32 %v0_1c7d

; uselistorder directives
  uselistorder label %dec_label_pc_1c5d, { 1, 0 }
}

define i32 @function_1c83() local_unnamed_addr {
dec_label_pc_1c83:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c83 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c83
}

define i32 @function_1c92() local_unnamed_addr {
dec_label_pc_1c92:
  %v0_1c92 = call i32 @function_1d19()
  ret i32 %v0_1c92
}

define i32 @function_1ca9() local_unnamed_addr {
dec_label_pc_1ca9:
  %v0_1ca9 = call i32 @function_1caf()
  ret i32 %v0_1ca9
}

define i32 @function_1cab() local_unnamed_addr {
dec_label_pc_1cab:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cab
}

define i32 @function_1caf() local_unnamed_addr {
dec_label_pc_1caf:
  %v0_1caf = load i32, i32* @ebp, align 4
  %v1_1caf = add i32 %v0_1caf, -368
  %v1_1cb8 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_1caf)
  %v0_1cbd = call i32 @function_1cc3()
  ret i32 %v0_1cbd
}

define i32 @function_1cbf() local_unnamed_addr {
dec_label_pc_1cbf:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cbf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cbf
}

define i32 @function_1cc3() local_unnamed_addr {
dec_label_pc_1cc3:
  %v0_1cc3 = load i32, i32* @ebp, align 4
  %v1_1cc3 = add i32 %v0_1cc3, -396
  %v1_1ccc = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_1cc3)
  %v0_1cd1 = load i32, i32* @esi, align 4
  store i32 %v0_1cd1, i32* @eax, align 4
  %v0_1cd3 = load i32, i32* @ebx, align 4
  store i32 %v0_1cd3, i32* @edx, align 4
  %v0_1cd5 = call i32 @function_1ce0()
  ret i32 %v0_1cd5
}

define i32 @function_1cd8() local_unnamed_addr {
dec_label_pc_1cd8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cd8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cd8
}

define i32 @function_1cde() local_unnamed_addr {
dec_label_pc_1cde:
  %v0_1cde = call i32 @function_1d19()
  ret i32 %v0_1cde
}

define i32 @function_1ce0() local_unnamed_addr {
dec_label_pc_1ce0:
  %v0_1ce0 = load i32, i32* @edx, align 4
  %v10_1ce0 = icmp eq i32 %v0_1ce0, 1
  br i1 %v10_1ce0, label %dec_label_pc_1ce9, label %dec_label_pc_1ce5

dec_label_pc_1ce5:                                ; preds = %dec_label_pc_1ce0
  %v0_1ce7 = call i32 @function_1d19()
  ret i32 %v0_1ce7

dec_label_pc_1ce9:                                ; preds = %dec_label_pc_1ce0
  %v3_1ce9 = load i32, i32* @eax, align 4
  ret i32 %v3_1ce9

; uselistorder directives
  uselistorder i32 ()* @function_1d19, { 1, 2, 0 }
}

define i32 @function_1d12() local_unnamed_addr {
dec_label_pc_1d12:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d12 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d12
}

define i32 @function_1d18() local_unnamed_addr {
dec_label_pc_1d18:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d18 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d18
}

define i32 @function_1d19() local_unnamed_addr {
dec_label_pc_1d19:
  %v0_1d19 = load i32, i32* @ebp, align 4
  %v1_1d19 = add i32 %v0_1d19, -424
  %v1_1d22 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_1d19)
  %v0_1d27 = load i32, i32* @ebx, align 4
  ret i32 %v0_1d27

; uselistorder directives
  uselistorder i32 (i32)* @_ZN11CDataStreamD1Ev, { 7, 9, 8, 2, 1, 0, 6, 5, 4, 3 }
}

define i32 @function_1d31() local_unnamed_addr {
dec_label_pc_1d31:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d36() local_unnamed_addr {
dec_label_pc_1d36:
  %v0_1d36 = load i32, i32* @ebp, align 4
  %v1_1d36 = add i32 %v0_1d36, -8
  %v1_1d39 = inttoptr i32 %v1_1d36 to i32*
  %v2_1d39 = load i32, i32* %v1_1d39, align 4
  store i32 %v2_1d39, i32* @ebx, align 4
  %v1_1d3b = inttoptr i32 %v0_1d36 to i32*
  %v2_1d3b = load i32, i32* %v1_1d3b, align 4
  store i32 %v2_1d3b, i32* @ebp, align 4
  %v0_1d3c = load i32, i32* @eax, align 4
  ret i32 %v0_1d3c
}

define void @__static_initialization_and_destruction_0(i32 %__initialize_p, i32 %__priority) local_unnamed_addr {
dec_label_pc_1d3d:
  %v0_1d4f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v13_1d5a = icmp eq i32 %__initialize_p, 1
  %v1_1d5e = icmp eq i1 %v13_1d5a, false
  br i1 %v1_1d5e, label %bb, label %dec_label_pc_1d64

bb:                                               ; preds = %dec_label_pc_1d3d
  %v4_1d5e = call i32 @function_1e65(i32 %__priority, i32 %__initialize_p)
  br label %dec_label_pc_1d64

dec_label_pc_1d64:                                ; preds = %bb, %dec_label_pc_1d3d
  %v13_1d64 = icmp eq i32 %__priority, 65535
  %v1_1d6b = icmp eq i1 %v13_1d64, false
  br i1 %v1_1d6b, label %bb9, label %dec_label_pc_1d71

bb9:                                              ; preds = %dec_label_pc_1d64
  %v4_1d6b = call i32 @function_1e65(i32 %v0_1d4f, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_1d71

dec_label_pc_1d71:                                ; preds = %bb9, %dec_label_pc_1d64
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1e65, { 1, 0 }
  uselistorder i32 %__initialize_p, { 1, 0 }
}

define i32 @function_1e4b() local_unnamed_addr {
dec_label_pc_1e4b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e4b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e4b
}

define i32 @function_1e55() local_unnamed_addr {
dec_label_pc_1e55:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e55 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e55
}

define i32 @function_1e5f() local_unnamed_addr {
dec_label_pc_1e5f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e5f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e5f
}

define i32 @function_1e65(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e65:
  %v0_1e65 = load i32, i32* @ebp, align 4
  %v1_1e65 = add i32 %v0_1e65, -12
  %v2_1e65 = inttoptr i32 %v1_1e65 to i32*
  %v3_1e65 = load i32, i32* %v2_1e65, align 4
  %v1_1e68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e68 = xor i32 %v1_1e68, %v3_1e65
  %v3_1e68 = icmp eq i32 %v2_1e68, 0
  store i32 %v2_1e68, i32* @eax, align 4
  br i1 %v3_1e68, label %bb, label %dec_label_pc_1e71

bb:                                               ; preds = %dec_label_pc_1e65
  %v1_1e6f = call i32 @function_1e76()
  br label %dec_label_pc_1e71

dec_label_pc_1e71:                                ; preds = %bb, %dec_label_pc_1e65
  %v2_1e6f = phi i32 [ %v1_1e6f, %bb ], [ %v2_1e68, %dec_label_pc_1e65 ]
  ret i32 %v2_1e6f
}

define i32 @function_1e76() local_unnamed_addr {
dec_label_pc_1e76:
  %v0_1e77 = load i32, i32* @eax, align 4
  ret i32 %v0_1e77
}

define void @_GLOBAL__sub_I__ZN12CCoinsViewDBC2Ejbb() local_unnamed_addr {
dec_label_pc_1e78:
  call void @__static_initialization_and_destruction_0(i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i32* @global_var_ffff.1188 to i32))
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ea9

bb:                                               ; preds = %dec_label_pc_1e78
  %v1_1ea7 = call i32 @function_1eae()
  br label %dec_label_pc_1ea9

dec_label_pc_1ea9:                                ; preds = %bb, %dec_label_pc_1e78
  ret void
}

define i32 @function_1eae() local_unnamed_addr {
dec_label_pc_1eae:
  %v0_1eaf = load i32, i32* @eax, align 4
  ret i32 %v0_1eaf
}

define i32 @_ZNSt11char_traitsIcE6assignERcRKc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1eb0:
  %ebp.global-to-local = alloca i32, align 4
  %tmp105 = inttoptr i32 %arg2 to i8*
  %v0_1eb0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1ed0 = load i8, i8* %tmp105, align 1
  store i8 %v2_1ed0, i8* %arg1, align 1
  store i32 %v0_1eb0, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNSt9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1eec:
  store i32 ptrtoint (i32* @global_var_8.1178 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f18

bb:                                               ; preds = %dec_label_pc_1eec
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f16 = call i32 @function_1f1d(i32 %tmp100)
  br label %dec_label_pc_1f18

dec_label_pc_1f18:                                ; preds = %bb, %dec_label_pc_1eec
  %v3_1f16 = phi i32 [ %v2_1f16, %bb ], [ 0, %dec_label_pc_1eec ]
  ret i32 %v3_1f16

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f1d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f1d:
  %v0_1f1e = load i32, i32* @eax, align 4
  ret i32 %v0_1f1e
}

define i32 @_ZNSt9bad_allocC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f20:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_1f3d = call i32 @function_3e0c(i32 %tmp100)
  store i32 ptrtoint (i32* @global_var_8.1178 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @_ZnwjPv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f5e:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f8a

bb:                                               ; preds = %dec_label_pc_1f5e
  %v3_1f88 = call i32 @function_1f8f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1f8a

dec_label_pc_1f8a:                                ; preds = %bb, %dec_label_pc_1f5e
  %v4_1f88 = phi i32 [ %v3_1f88, %bb ], [ %arg2, %dec_label_pc_1f5e ]
  ret i32 %v4_1f88
}

define i32 @function_1f8f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f8f:
  %v0_1f90 = load i32, i32* @eax, align 4
  ret i32 %v0_1f90
}

define i32 @_ZdlPvS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f91:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1fba

bb:                                               ; preds = %dec_label_pc_1f91
  %v3_1fb8 = call i32 @function_1fbf(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1fba

dec_label_pc_1fba:                                ; preds = %bb, %dec_label_pc_1f91
  %v4_1fb8 = phi i32 [ %v3_1fb8, %bb ], [ 0, %dec_label_pc_1f91 ]
  ret i32 %v4_1fb8
}

define i32 @function_1fbf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fbf:
  %v0_1fc0 = load i32, i32* @eax, align 4
  ret i32 %v0_1fc0
}

define i32 @_ZNSt14_Bit_referenceC1EPmm(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fc2:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_1ff3 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1ff3 = inttoptr i32 %v2_1ff3 to i32*
  store i32 %arg3, i32* %v3_1ff3, align 4
  ret i32 0
}

define i32 @_ZNKSt14_Bit_referencecvbEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_200a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_2024 = load i32, i32* %arg1, align 4
  %v1_2026 = inttoptr i32 %v2_2024 to i32*
  %v2_2026 = load i32, i32* %v1_2026, align 4
  %v1_202b = add i32 %tmp101, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_202b = inttoptr i32 %v1_202b to i32*
  %v3_202b = load i32, i32* %v2_202b, align 4
  %v2_202e = and i32 %v3_202b, %v2_2026
  %v3_202e = icmp eq i32 %v2_202e, 0
  %v1_2032 = icmp eq i1 %v3_202e, false
  %v2_2032 = zext i1 %v1_2032 to i32
  %v4_2032 = and i32 %v2_202e, -256
  %v5_2032 = or i32 %v2_2032, %v4_2032
  store i32 %v5_2032, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2041

bb:                                               ; preds = %dec_label_pc_200a
  %v2_203f = call i32 @function_2046(i32 %tmp101)
  br label %dec_label_pc_2041

dec_label_pc_2041:                                ; preds = %bb, %dec_label_pc_200a
  %v3_203f = phi i32 [ %v2_203f, %bb ], [ %v5_2032, %dec_label_pc_200a ]
  ret i32 %v3_203f
}

define i32 @function_2046(i32 %arg1) local_unnamed_addr {
dec_label_pc_2046:
  %v0_2047 = load i32, i32* @eax, align 4
  ret i32 %v0_2047
}

define i32 @_ZNSt14_Bit_referenceaSEb(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2048:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %tmp105 = trunc i32 %arg2 to i8
  %v10_2065 = icmp eq i8 %tmp105, 0
  %v2_2086 = load i32, i32* %arg1, align 4
  %v1_208d = inttoptr i32 %v2_2086 to i32*
  %v2_208d = load i32, i32* %v1_208d, align 4
  %v1_2092 = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_2092 = inttoptr i32 %v1_2092 to i32*
  %v3_2092 = load i32, i32* %v2_2092, align 4
  br i1 %v10_2065, label %dec_label_pc_2083, label %dec_label_pc_206b

dec_label_pc_206b:                                ; preds = %dec_label_pc_2048
  %v2_207d = or i32 %v3_2092, %v2_208d
  %v2_207f = inttoptr i32 %v2_2086 to i32*
  store i32 %v2_207d, i32* %v2_207f, align 4
  br label %dec_label_pc_209b

dec_label_pc_2083:                                ; preds = %dec_label_pc_2048
  %v1_2095 = sub i32 -1, %v3_2092
  %v2_2097 = and i32 %v2_208d, %v1_2095
  %v2_2099 = inttoptr i32 %v2_2086 to i32*
  store i32 %v2_2097, i32* %v2_2099, align 4
  br label %dec_label_pc_209b

dec_label_pc_209b:                                ; preds = %dec_label_pc_2083, %dec_label_pc_206b
  ret i32 %tmp102

; uselistorder directives
  uselistorder i32 %v2_2086, { 1, 2, 0 }
}

define i32 @_ZNSt14_Bit_referenceaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20b2:
  store i32 %arg2, i32* @eax, align 4
  %v1_20d5 = call i32 @function_40bc(i32 %arg2)
  %v1_20da = urem i32 %v1_20d5, 256
  store i32 %arg1, i32* @eax, align 4
  %v2_20e7 = call i32 @function_40fa(i32 %arg1, i32 %v1_20da)
  store i32 %v2_20e7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20f8

bb:                                               ; preds = %dec_label_pc_20b2
  %v1_20f6 = call i32 @function_20fd()
  br label %dec_label_pc_20f8

dec_label_pc_20f8:                                ; preds = %bb, %dec_label_pc_20b2
  %v2_20f6 = phi i32 [ %v1_20f6, %bb ], [ %v2_20e7, %dec_label_pc_20b2 ]
  ret i32 %v2_20f6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_20fd() local_unnamed_addr {
dec_label_pc_20fd:
  %v0_20fe = load i32, i32* @eax, align 4
  ret i32 %v0_20fe
}

define i32 @_ZNSt8iteratorISt26random_access_iterator_tagbiPbRbEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2100:
  ret i32 0
}

define i32 @_ZNSt18_Bit_iterator_baseC1EPmj(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_212a:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* @eax, align 4
  %v1_2153 = call i32 @function_422a(i32 %tmp104)
  store i32 %arg2, i32* %arg1, align 4
  %v2_2166 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_2166 = inttoptr i32 %v2_2166 to i32*
  store i32 %arg3, i32* %v3_2166, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2175

bb:                                               ; preds = %dec_label_pc_212a
  %v1_2173 = call i32 @function_217a()
  br label %dec_label_pc_2175

dec_label_pc_2175:                                ; preds = %bb, %dec_label_pc_212a
  %v2_2173 = phi i32 [ %v1_2173, %bb ], [ 0, %dec_label_pc_212a ]
  ret i32 %v2_2173

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
}

define i32 @function_217a() local_unnamed_addr {
dec_label_pc_217a:
  %v0_217b = load i32, i32* @eax, align 4
  ret i32 %v0_217b
}

define i32 @_ZNSt18_Bit_iterator_base10_M_bump_upEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_217c:
  %edx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_2196 = add i32 %tmp101, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_2196 = inttoptr i32 %v1_2196 to i32*
  %v3_2196 = load i32, i32* %v2_2196, align 4
  %v10_2199 = icmp eq i32 %v3_2196, 31
  %v1_219c = zext i1 %v10_2199 to i32
  %v2_219c = load i32, i32* %edx.global-to-local, align 4
  %v3_219c = and i32 %v2_219c, -256
  %v4_219c = or i32 %v3_219c, %v1_219c
  store i32 %v4_219c, i32* %edx.global-to-local, align 4
  %v1_219f = add i32 %v3_2196, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_219f, i32* %v2_2196, align 4
  %v0_21a8 = load i32, i32* %edx.global-to-local, align 4
  %v4_21a8 = trunc i32 %v0_21a8 to i8
  %v5_21a8 = icmp eq i8 %v4_21a8, 0
  br i1 %v5_21a8, label %dec_label_pc_21c3, label %dec_label_pc_21ac

dec_label_pc_21ac:                                ; preds = %dec_label_pc_217c
  store i32 0, i32* %v2_2196, align 4
  %v2_21b9 = load i32, i32* %arg1, align 4
  %v1_21bb = add i32 %v2_21b9, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_21bb, i32* %edx.global-to-local, align 4
  store i32 %v1_21bb, i32* %arg1, align 4
  br label %dec_label_pc_21c3

dec_label_pc_21c3:                                ; preds = %dec_label_pc_21ac, %dec_label_pc_217c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_2196, { 1, 0 }
}

define i32 @_ZNSt18_Bit_iterator_base12_M_bump_downEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_21d6:
  %edx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_21f0 = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_21f0 = inttoptr i32 %v1_21f0 to i32*
  %v3_21f0 = load i32, i32* %v2_21f0, align 4
  %v1_21f3 = icmp eq i32 %v3_21f0, 0
  %v1_21f5 = zext i1 %v1_21f3 to i32
  %v2_21f5 = load i32, i32* %edx.global-to-local, align 4
  %v3_21f5 = and i32 %v2_21f5, -256
  %v4_21f5 = or i32 %v3_21f5, %v1_21f5
  store i32 %v4_21f5, i32* %edx.global-to-local, align 4
  %v1_21f8 = add i32 %v3_21f0, -1
  store i32 %v1_21f8, i32* %v2_21f0, align 4
  %v0_2201 = load i32, i32* %edx.global-to-local, align 4
  %v4_2201 = trunc i32 %v0_2201 to i8
  %v5_2201 = icmp eq i8 %v4_2201, 0
  br i1 %v5_2201, label %dec_label_pc_221c, label %dec_label_pc_2205

dec_label_pc_2205:                                ; preds = %dec_label_pc_21d6
  store i32 31, i32* %v2_21f0, align 4
  %v2_2212 = load i32, i32* %arg1, align 4
  %v1_2214 = add i32 %v2_2212, -4
  store i32 %v1_2214, i32* %edx.global-to-local, align 4
  store i32 %v1_2214, i32* %arg1, align 4
  br label %dec_label_pc_221c

dec_label_pc_221c:                                ; preds = %dec_label_pc_2205, %dec_label_pc_21d6
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2228

bb:                                               ; preds = %dec_label_pc_221c
  %v1_2226 = call i32 @function_222d()
  br label %dec_label_pc_2228

dec_label_pc_2228:                                ; preds = %bb, %dec_label_pc_221c
  %v2_2226 = phi i32 [ %v1_2226, %bb ], [ 0, %dec_label_pc_221c ]
  ret i32 %v2_2226
}

define i32 @function_222d() local_unnamed_addr {
dec_label_pc_222d:
  %v0_222e = load i32, i32* @eax, align 4
  ret i32 %v0_222e
}

define i32 @_ZNSt18_Bit_iterator_base7_M_incrEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2230:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_2250 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_2250 = inttoptr i32 %v1_2250 to i32*
  %v3_2250 = load i32, i32* %v2_2250, align 4
  %v2_2256 = add i32 %v3_2250, %arg2
  %v13_2256 = icmp slt i32 %v2_2256, 0
  %v2_225e = load i32, i32* %arg1, align 4
  %v1_2263 = add i32 %v2_2256, 31
  %v3_2268 = select i1 %v13_2256, i32 %v1_2263, i32 %v2_2256
  %v2_226b = ashr i32 %v3_2268, ptrtoint (i8* @global_var_5.1189 to i32)
  %v2_226e = mul i32 %v2_226b, 4
  %v2_2271 = add i32 %v2_226e, %v2_225e
  store i32 %v2_2271, i32* %arg1, align 4
  %v2_2288 = srem i32 %v2_2256, 32
  %v13_2288 = icmp slt i32 %v2_2288, 0
  %v1_2291 = icmp eq i1 %v13_2288, false
  br i1 %v1_2291, label %dec_label_pc_22a4, label %dec_label_pc_2293

dec_label_pc_2293:                                ; preds = %dec_label_pc_2230
  %v4_2293 = add i32 %v2_2288, ptrtoint (i32* @global_var_20.1184 to i32)
  %v2_229a = load i32, i32* %arg1, align 4
  %v1_229c = add i32 %v2_229a, -4
  store i32 %v1_229c, i32* %arg1, align 4
  br label %dec_label_pc_22a4

dec_label_pc_22a4:                                ; preds = %dec_label_pc_2293, %dec_label_pc_2230
  %stack_var_-20.0 = phi i32 [ %v2_2288, %dec_label_pc_2230 ], [ %v4_2293, %dec_label_pc_2293 ]
  store i32 %stack_var_-20.0, i32* %v2_2250, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22b9

bb:                                               ; preds = %dec_label_pc_22a4
  %v1_22b7 = call i32 @function_22be()
  br label %dec_label_pc_22b9

dec_label_pc_22b9:                                ; preds = %bb, %dec_label_pc_22a4
  %v2_22b7 = phi i32 [ %v1_22b7, %bb ], [ 0, %dec_label_pc_22a4 ]
  ret i32 %v2_22b7

; uselistorder directives
  uselistorder i32 %v2_2288, { 1, 2, 0 }
}

define i32 @function_22be() local_unnamed_addr {
dec_label_pc_22be:
  %v0_22bf = load i32, i32* @eax, align 4
  ret i32 %v0_22bf
}

define i32 @_ZStmiRKSt18_Bit_iterator_baseS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22c0:
  %ebp.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_22c0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_22e0 = load i32, i32* %arg1, align 4
  %v1_22e7 = inttoptr i32 %arg2 to i32*
  %v2_22e7 = load i32, i32* %v1_22e7, align 4
  %v2_22eb = sub i32 %v2_22e0, %v2_22e7
  %v2_22ef = sdiv i32 %v2_22eb, 4
  %v2_22f2 = shl i32 %v2_22ef, ptrtoint (i8* @global_var_5.1189 to i32)
  %v1_22fa = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_22fa = inttoptr i32 %v1_22fa to i32*
  %v3_22fa = load i32, i32* %v2_22fa, align 4
  %v2_22fd = add i32 %v3_22fa, %v2_22f2
  %v1_2302 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_2302 = inttoptr i32 %v1_2302 to i32*
  %v3_2302 = load i32, i32* %v2_2302, align 4
  %v2_2307 = sub i32 %v2_22fd, %v3_2302
  store i32 %v0_22c0, i32* %ebp.global-to-local, align 4
  ret i32 %v2_2307

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNSt13_Bit_iteratorC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_231e:
  store i32 %arg1, i32* @eax, align 4
  %v3_234b = call i32 @function_4448(i32 %arg1, i32 0, i32 0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_235c

bb:                                               ; preds = %dec_label_pc_231e
  %v1_235a = call i32 @function_2361()
  br label %dec_label_pc_235c

dec_label_pc_235c:                                ; preds = %bb, %dec_label_pc_231e
  %v2_235a = phi i32 [ %v1_235a, %bb ], [ 0, %dec_label_pc_231e ]
  ret i32 %v2_235a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2361() local_unnamed_addr {
dec_label_pc_2361:
  %v0_2362 = load i32, i32* @eax, align 4
  ret i32 %v0_2362
}

define i32 @_ZNSt13_Bit_iteratorC1EPmj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2364:
  store i32 %arg1, i32* @eax, align 4
  %v3_239b = call i32 @function_448e(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23ac

bb:                                               ; preds = %dec_label_pc_2364
  %v1_23aa = call i32 @function_23b1()
  br label %dec_label_pc_23ac

dec_label_pc_23ac:                                ; preds = %bb, %dec_label_pc_2364
  %v2_23aa = phi i32 [ %v1_23aa, %bb ], [ 0, %dec_label_pc_2364 ]
  ret i32 %v2_23aa

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23b1() local_unnamed_addr {
dec_label_pc_23b1:
  %v0_23b2 = load i32, i32* @eax, align 4
  ret i32 %v0_23b2
}

define i32 @_ZNKSt13_Bit_iteratordeEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_23b4:
  %tmp104 = ptrtoint i32* %arg2 to i32
  %v1_23d4 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_23d4 = inttoptr i32 %v1_23d4 to i32*
  %v3_23d4 = load i32, i32* %v2_23d4, align 4
  store i32 %v3_23d4, i32* @ecx, align 4
  %v3_23de = urem i32 %v3_23d4, 32
  %v5_23de = icmp eq i32 %v3_23de, 0
  br i1 %v5_23de, label %dec_label_pc_240c, label %bb

bb:                                               ; preds = %dec_label_pc_23b4
  %v6_23de = shl i32 ptrtoint (i8** @global_var_1.1176 to i32), %v3_23de
  br label %dec_label_pc_240c

dec_label_pc_240c:                                ; preds = %dec_label_pc_23b4, %bb
  %v0_23e5 = phi i32 [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_23b4 ], [ %v6_23de, %bb ]
  %v2_23e3 = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 4
  %v4_23f3 = call i32 @function_4376(i32 %arg1, i32 %v2_23e3, i32 %v0_23e5)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_23de, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_240c, { 1, 0 }
}

define i32 @_ZNSt13_Bit_iteratorppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2410:
  store i32 %arg1, i32* @eax, align 4
  %v1_242d = call i32 @function_458c(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2441

bb:                                               ; preds = %dec_label_pc_2410
  %v1_243f = call i32 @function_2446()
  br label %dec_label_pc_2441

dec_label_pc_2441:                                ; preds = %bb, %dec_label_pc_2410
  %v2_243f = phi i32 [ %v1_243f, %bb ], [ %arg1, %dec_label_pc_2410 ]
  ret i32 %v2_243f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_2446() local_unnamed_addr {
dec_label_pc_2446:
  %v0_2447 = load i32, i32* @eax, align 4
  ret i32 %v0_2447
}

define i32 @_ZNSt13_Bit_iteratorppEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2448:
  %ecx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* %ecx.global-to-local, align 4
  %v1_2471 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_2471 = inttoptr i32 %v1_2471 to i32*
  %v3_2471 = load i32, i32* %v2_2471, align 4
  %v1_2474 = inttoptr i32 %arg2 to i32*
  %v2_2474 = load i32, i32* %v1_2474, align 4
  store i32 %v2_2474, i32* %arg1, align 4
  %v1_2478 = load i32, i32* %ecx.global-to-local, align 4
  %v2_2478 = add i32 %v1_2478, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_2478 = inttoptr i32 %v2_2478 to i32*
  store i32 %v3_2471, i32* %v3_2478, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_2481 = call i32 @function_45c4(i32 %arg2)
  store i32 %tmp104, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2495

bb:                                               ; preds = %dec_label_pc_2448
  %v1_2493 = call i32 @function_249a()
  br label %dec_label_pc_2495

dec_label_pc_2495:                                ; preds = %bb, %dec_label_pc_2448
  %v2_2493 = phi i32 [ %v1_2493, %bb ], [ %tmp104, %dec_label_pc_2448 ]
  ret i32 %v2_2493

; uselistorder directives
  uselistorder i32 %tmp104, { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_249a() local_unnamed_addr {
dec_label_pc_249a:
  %v0_249b = load i32, i32* @eax, align 4
  ret i32 %v0_249b
}

define i32 @_ZNSt13_Bit_iteratormmEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_249e:
  ret i32 %arg1
}

define i32 @_ZNSt13_Bit_iteratorpLEi(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24d6:
  store i32 %arg1, i32* @eax, align 4
  %v2_2500 = call i32 @function_4706(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2514

bb:                                               ; preds = %dec_label_pc_24d6
  %v1_2512 = call i32 @function_2519()
  br label %dec_label_pc_2514

dec_label_pc_2514:                                ; preds = %bb, %dec_label_pc_24d6
  %v2_2512 = phi i32 [ %v1_2512, %bb ], [ %arg1, %dec_label_pc_24d6 ]
  ret i32 %v2_2512

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_2519() local_unnamed_addr {
dec_label_pc_2519:
  %v0_251a = load i32, i32* @eax, align 4
  ret i32 %v0_251a
}

define i32 @_ZNKSt13_Bit_iteratorplEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_251c:
  %stack_var_-24 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v1_2542 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_2542 = inttoptr i32 %v1_2542 to i32*
  %v3_2542 = load i32, i32* %v2_2542, align 4
  %v1_2545 = inttoptr i32 %arg2 to i32*
  %v2_2545 = load i32, i32* %v1_2545, align 4
  store i32 %v2_2545, i32* %stack_var_-24, align 4
  %v2_2554 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_2554, i32* %stack_var_-60, align 4
  store i32 %v2_2545, i32* %arg1, align 4
  %v2_2569 = add i32 %tmp107, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_2569 = inttoptr i32 %v2_2569 to i32*
  store i32 %v3_2542, i32* %v3_2569, align 4
  store i32 %tmp107, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_257b

bb:                                               ; preds = %dec_label_pc_251c
  %v1_2579 = load i32, i32* %stack_var_-60, align 4
  %v3_2579 = call i32 @function_2580(i32 %v1_2579, i32 %arg3)
  br label %dec_label_pc_257b

dec_label_pc_257b:                                ; preds = %bb, %dec_label_pc_251c
  %v4_2579 = phi i32 [ %v3_2579, %bb ], [ %tmp107, %dec_label_pc_251c ]
  ret i32 %v4_2579

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2580(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2580:
  %v0_2581 = load i32, i32* @eax, align 4
  ret i32 %v0_2581
}

define i32 @_ZNSt19_Bit_const_iteratorC1EPmj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2584:
  ret i32 0
}

define i32 @_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_25d4:
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v1_25f4 = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_25f4 = inttoptr i32 %v1_25f4 to i32*
  %v3_25f4 = load i32, i32* %v2_25f4, align 4
  %v2_25fa = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_260a = call i32 @function_46fe(i32 %arg1, i32 %v2_25fa, i32 %v3_25f4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_261b

bb:                                               ; preds = %dec_label_pc_25d4
  %v1_2619 = call i32 @function_2620()
  br label %dec_label_pc_261b

dec_label_pc_261b:                                ; preds = %bb, %dec_label_pc_25d4
  %v2_2619 = phi i32 [ %v1_2619, %bb ], [ 0, %dec_label_pc_25d4 ]
  ret i32 %v2_2619

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2620() local_unnamed_addr {
dec_label_pc_2620:
  %v0_2621 = load i32, i32* @eax, align 4
  ret i32 %v0_2621
}

define i32 @_ZNKSt19_Bit_const_iteratordeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2622:
  %stack_var_-24 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_263c = add i32 %tmp105, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_263c = inttoptr i32 %v1_263c to i32*
  %v3_263c = load i32, i32* %v2_263c, align 4
  %v3_2646 = urem i32 %v3_263c, 32
  %v5_2646 = icmp eq i32 %v3_2646, 0
  br i1 %v5_2646, label %dec_label_pc_267c, label %bb

bb:                                               ; preds = %dec_label_pc_2622
  %v6_2646 = shl i32 ptrtoint (i8** @global_var_1.1176 to i32), %v3_2646
  br label %dec_label_pc_267c

dec_label_pc_267c:                                ; preds = %dec_label_pc_2622, %bb
  %v0_264d = phi i32 [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_2622 ], [ %v6_2646, %bb ]
  %v2_264b = load i32, i32* %arg1, align 4
  %v2_2655 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_2655, i32* @eax, align 4
  %v4_2666 = call i32 @function_462c(i32 %v2_2655, i32 %v2_264b, i32 %v0_264d)
  ret i32 %v4_2666

; uselistorder directives
  uselistorder i32 %v3_2646, { 1, 0 }
  uselistorder label %dec_label_pc_267c, { 1, 0 }
}

define i32 @_ZNSt19_Bit_const_iteratorppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_267e:
  store i32 %arg1, i32* @eax, align 4
  %v1_269b = call i32 @function_47fa(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN9base_uintILj256EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26d9

bb:                                               ; preds = %dec_label_pc_26b6
  %v2_26d7 = call i32 @function_26de(i32 %arg1)
  br label %dec_label_pc_26d9

dec_label_pc_26d9:                                ; preds = %bb, %dec_label_pc_26b6
  %v3_26d7 = phi i32 [ %v2_26d7, %bb ], [ 0, %dec_label_pc_26b6 ]
  ret i32 %v3_26d7
}

define i32 @function_26de(i32 %arg1) local_unnamed_addr {
dec_label_pc_26de:
  %v0_26df = load i32, i32* @eax, align 4
  ret i32 %v0_26df
}

define i32 @_ZN7uint256C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e0:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_26ec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_26fd = call i32 @function_4d96(i32 %arg1)
  %v7_272012 = and i32 %v1_26fd, -256
  %v8_272013 = or i32 %v7_272012, 1
  store i32 %v8_272013, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_270b

dec_label_pc_270b:                                ; preds = %dec_label_pc_26e0, %dec_label_pc_270b
  %v4_271c14 = phi i32 [ 0, %dec_label_pc_26e0 ], [ %v5_2718, %dec_label_pc_270b ]
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_2711 = mul i32 %v4_271c14, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_2711 = add i32 %v2_2711, %arg1
  %v4_2711 = inttoptr i32 %v3_2711 to i32*
  store i32 0, i32* %v4_2711, align 4
  %v5_2718 = add i32 %v4_271c14, ptrtoint (i8** @global_var_1.1176 to i32)
  %v6_2720.pre = load i32, i32* %eax.global-to-local, align 4
  %v5_271c = add i32 %v4_271c14, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -7)
  %tmp11 = sub i32 sub (i32 6, i32 ptrtoint (i8** @global_var_1.1176 to i32)), %v4_271c14
  %v12_271c = and i32 %tmp11, %v5_2718
  %v13_271c = icmp slt i32 %v12_271c, 0
  %v15_271c = icmp slt i32 %v5_271c, 0
  %v3_2720 = icmp ne i1 %v15_271c, %v13_271c
  %v5_2720 = zext i1 %v3_2720 to i32
  %v7_2720 = and i32 %v6_2720.pre, -256
  %v8_2720 = or i32 %v5_2720, %v7_2720
  store i32 %v8_2720, i32* %eax.global-to-local, align 4
  %v5_2723 = icmp eq i1 %v3_2720, false
  %v1_2725 = icmp eq i1 %v5_2723, false
  br i1 %v1_2725, label %dec_label_pc_270b, label %dec_label_pc_2727

dec_label_pc_2727:                                ; preds = %dec_label_pc_270b
  store i32 %v0_26ec, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2733

bb:                                               ; preds = %dec_label_pc_2727
  %v1_2731 = call i32 @function_2738()
  store i32 %v1_2731, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2733

dec_label_pc_2733:                                ; preds = %bb, %dec_label_pc_2727
  %v2_2731 = phi i32 [ %v1_2731, %bb ], [ 0, %dec_label_pc_2727 ]
  ret i32 %v2_2731

; uselistorder directives
  uselistorder i1 %v3_2720, { 1, 0 }
  uselistorder i32 %v5_2718, { 1, 0 }
  uselistorder i32 %v4_271c14, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_270b, { 1, 0 }
}

define i32 @function_2738() local_unnamed_addr {
dec_label_pc_2738:
  %v0_2739 = load i32, i32* @eax, align 4
  ret i32 %v0_2739
}

define i32 @_ZN7uint256C1Ey(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_273a:
  %eax.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v0_2752 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp10, i32* @eax, align 4
  %v1_2763 = call i32 @function_4df0(i32 %tmp10)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp10, i32* %eax.global-to-local, align 4
  %v2_277f = add i32 %tmp10, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_277f = inttoptr i32 %v2_277f to i32*
  store i32 %arg3, i32* %v3_277f, align 4
  %v6_27a014 = load i32, i32* %eax.global-to-local, align 4
  %v7_27a015 = and i32 %v6_27a014, -256
  %v8_27a016 = or i32 %v7_27a015, 1
  store i32 %v8_27a016, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_278b

dec_label_pc_278b:                                ; preds = %dec_label_pc_273a, %dec_label_pc_278b
  %storemerge17 = phi i32 [ 2, %dec_label_pc_273a ], [ %v4_2798, %dec_label_pc_278b ]
  store i32 %tmp10, i32* %eax.global-to-local, align 4
  %v2_2791 = mul i32 %storemerge17, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_2791 = add i32 %v2_2791, %tmp10
  %v4_2791 = inttoptr i32 %v3_2791 to i32*
  store i32 0, i32* %v4_2791, align 4
  %v4_2798 = add nuw nsw i32 %storemerge17, 1
  %tmp13 = sub nsw i32 5, %storemerge17
  %v11_279c = and i32 %tmp13, %v4_2798
  %v12_279c = icmp slt i32 %v11_279c, 0
  %v13_279c = icmp eq i32 %v4_2798, 7
  %v14_279c = icmp slt i32 %v4_2798, 7
  %v3_27a0 = icmp ne i1 %v14_279c, %v12_279c
  %v4_27a0 = or i1 %v13_279c, %v3_27a0
  %v5_27a0 = zext i1 %v4_27a0 to i32
  %v6_27a0 = load i32, i32* %eax.global-to-local, align 4
  %v7_27a0 = and i32 %v6_27a0, -256
  %v8_27a0 = or i32 %v5_27a0, %v7_27a0
  store i32 %v8_27a0, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_2798, 8
  br i1 %exitcond, label %dec_label_pc_27a7, label %dec_label_pc_278b

dec_label_pc_27a7:                                ; preds = %dec_label_pc_278b
  store i32 %v0_2752, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27b3

bb:                                               ; preds = %dec_label_pc_27a7
  %v1_27b1 = call i32 @function_27b8()
  store i32 %v1_27b1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27b3

dec_label_pc_27b3:                                ; preds = %bb, %dec_label_pc_27a7
  %v2_27b1 = phi i32 [ %v1_27b1, %bb ], [ 0, %dec_label_pc_27a7 ]
  ret i32 %v2_27b1

; uselistorder directives
  uselistorder i32 %storemerge17, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6, 7, 8 }
  uselistorder label %dec_label_pc_278b, { 1, 0 }
}

define i32 @function_27b8() local_unnamed_addr {
dec_label_pc_27b8:
  %v0_27b9 = load i32, i32* @eax, align 4
  ret i32 %v0_27b9
}

define i32 @_ZN7uint256aSEy(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27ba:
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_27f4 = add i32 %tmp105, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_27f4 = inttoptr i32 %v2_27f4 to i32*
  store i32 %arg3, i32* %v3_27f4, align 4
  br label %dec_label_pc_2800

dec_label_pc_2800:                                ; preds = %dec_label_pc_27ba, %dec_label_pc_2800
  %storemerge108 = phi i32 [ 2, %dec_label_pc_27ba ], [ %v4_280d, %dec_label_pc_2800 ]
  %v2_2806 = mul i32 %storemerge108, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_2806 = add i32 %v2_2806, %tmp105
  %v4_2806 = inttoptr i32 %v3_2806 to i32*
  store i32 0, i32* %v4_2806, align 4
  %v4_280d = add nuw nsw i32 %storemerge108, 1
  store i32 %tmp105, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_280d, 8
  br i1 %exitcond, label %dec_label_pc_281c, label %dec_label_pc_2800

dec_label_pc_281c:                                ; preds = %dec_label_pc_2800
  br i1 true, label %bb, label %dec_label_pc_282b

bb:                                               ; preds = %dec_label_pc_281c
  %v1_2829 = call i32 @function_2830()
  br label %dec_label_pc_282b

dec_label_pc_282b:                                ; preds = %bb, %dec_label_pc_281c
  %v2_2829 = phi i32 [ %v1_2829, %bb ], [ %tmp105, %dec_label_pc_281c ]
  ret i32 %v2_2829

; uselistorder directives
  uselistorder i32 %storemerge108, { 1, 0 }
  uselistorder i32 %tmp105, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_2800, { 1, 0 }
}

define i32 @function_2830() local_unnamed_addr {
dec_label_pc_2830:
  %v0_2831 = load i32, i32* @eax, align 4
  ret i32 %v0_2831
}

define i32 @_ZltRK7uint256S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2832:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v1_2852 = inttoptr i32 %arg2 to i32*
  %v2_2852 = load i32, i32* %v1_2852, align 4
  store i32 %v2_2852, i32* %stack_var_-48, align 4
  %v2_2884 = load i32, i32* %arg1, align 4
  store i32 %v2_2884, i32* %stack_var_-80, align 4
  %v4_28b6 = ptrtoint i32* %stack_var_-48 to i32
  %v2_28ba = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_28ba, i32* @eax, align 4
  %v2_28c0 = call i32 @function_a152(i32 %v2_28ba, i32 %v4_28b6)
  store i32 %v2_28c0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28d1

bb:                                               ; preds = %dec_label_pc_2832
  %v1_28cf = call i32 @function_28d6()
  br label %dec_label_pc_28d1

dec_label_pc_28d1:                                ; preds = %bb, %dec_label_pc_2832
  %v2_28cf = phi i32 [ %v1_28cf, %bb ], [ %v2_28c0, %dec_label_pc_2832 ]
  ret i32 %v2_28cf
}

define i32 @function_28d6() local_unnamed_addr {
dec_label_pc_28d6:
  %v0_28d7 = load i32, i32* @eax, align 4
  ret i32 %v0_28d7
}

define i32 @_ZeqRK7uint256S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28d8:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %tmp23 = ptrtoint i32* %arg1 to i32
  %v1_28f8 = inttoptr i32 %arg2 to i32*
  %v2_28f8 = load i32, i32* %v1_28f8, align 4
  store i32 %v2_28f8, i32* %stack_var_-48, align 4
  %v2_292a = load i32, i32* %arg1, align 4
  store i32 %v2_292a, i32* %stack_var_-80, align 4
  %v1_294d = add i32 %tmp23, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_294d = inttoptr i32 %v1_294d to i32*
  %v3_294d = load i32, i32* %v2_294d, align 4
  store i32 %v3_294d, i32* @edx, align 4
  %v4_295c = ptrtoint i32* %stack_var_-48 to i32
  %v2_2960 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_2960, i32* @eax, align 4
  %v2_2966 = call i32 @function_a280(i32 %v2_2960, i32 %v4_295c)
  store i32 0, i32* @edx, align 4
  ret i32 %v2_2966
}

define i32 @_ZNSt14numeric_limitsItE3maxEv() local_unnamed_addr {
dec_label_pc_297e:
  %v0_2984 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29a0

bb:                                               ; preds = %dec_label_pc_297e
  %v2_299e = call i32 @function_29a5(i32 %v0_2984)
  br label %dec_label_pc_29a0

dec_label_pc_29a0:                                ; preds = %bb, %dec_label_pc_297e
  %v3_299e = phi i32 [ %v2_299e, %bb ], [ -1, %dec_label_pc_297e ]
  ret i32 %v3_299e
}

define i32 @function_29a5(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a5:
  %v0_29a6 = load i32, i32* @eax, align 4
  ret i32 %v0_29a6
}

define i32 @_ZNSt14numeric_limitsIjE3maxEv() local_unnamed_addr {
dec_label_pc_29a7:
  %v0_29ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29c9

bb:                                               ; preds = %dec_label_pc_29a7
  %v2_29c7 = call i32 @function_29ce(i32 %v0_29ad)
  br label %dec_label_pc_29c9

dec_label_pc_29c9:                                ; preds = %bb, %dec_label_pc_29a7
  %v3_29c7 = phi i32 [ %v2_29c7, %bb ], [ -1, %dec_label_pc_29a7 ]
  ret i32 %v3_29c7
}

define i32 @function_29ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_29ce:
  %v0_29cf = load i32, i32* @eax, align 4
  ret i32 %v0_29cf
}

define i32 @_ZStorSt12_Ios_IostateS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29d0:
  %v2_29f3 = or i32 %arg2, %arg1
  store i32 %v2_29f3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a01

bb:                                               ; preds = %dec_label_pc_29d0
  %v3_29ff = call i32 @function_2a06(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2a01

dec_label_pc_2a01:                                ; preds = %bb, %dec_label_pc_29d0
  %v4_29ff = phi i32 [ %v3_29ff, %bb ], [ %v2_29f3, %dec_label_pc_29d0 ]
  ret i32 %v4_29ff

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a06(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a06:
  %v0_2a07 = load i32, i32* @eax, align 4
  ret i32 %v0_2a07
}

define i32 @_ZN5boost12noncopyable_11noncopyableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a08:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a2b

bb:                                               ; preds = %dec_label_pc_2a08
  %v2_2a29 = call i32 @function_2a30(i32 %arg1)
  br label %dec_label_pc_2a2b

dec_label_pc_2a2b:                                ; preds = %bb, %dec_label_pc_2a08
  %v3_2a29 = phi i32 [ %v2_2a29, %bb ], [ 0, %dec_label_pc_2a08 ]
  ret i32 %v3_2a29
}

define i32 @function_2a30(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a30:
  %v0_2a31 = load i32, i32* @eax, align 4
  ret i32 %v0_2a31
}

define i32 @_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a32:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a63

bb:                                               ; preds = %dec_label_pc_2a32
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2a61 = call i32 @function_2a68(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2a63

dec_label_pc_2a63:                                ; preds = %bb, %dec_label_pc_2a32
  %v4_2a61 = phi i32 [ %v3_2a61, %bb ], [ 0, %dec_label_pc_2a32 ]
  ret i32 %v4_2a61

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2a68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a68:
  %v0_2a69 = load i32, i32* @eax, align 4
  ret i32 %v0_2a69
}

define i32 @_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a6a:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a9b

bb:                                               ; preds = %dec_label_pc_2a6a
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2a99 = call i32 @function_2aa0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2a9b

dec_label_pc_2a9b:                                ; preds = %bb, %dec_label_pc_2a6a
  %v4_2a99 = phi i32 [ %v3_2a99, %bb ], [ 0, %dec_label_pc_2a6a ]
  ret i32 %v4_2a99

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2aa0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aa0:
  %v0_2aa1 = load i32, i32* @eax, align 4
  ret i32 %v0_2aa1
}

define i32 @_ZN5boost10error_infoINS_11throw_line_EiEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aa2:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ad3

bb:                                               ; preds = %dec_label_pc_2aa2
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2ad1 = call i32 @function_2ad8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2ad3

dec_label_pc_2ad3:                                ; preds = %bb, %dec_label_pc_2aa2
  %v4_2ad1 = phi i32 [ %v3_2ad1, %bb ], [ 0, %dec_label_pc_2aa2 ]
  ret i32 %v4_2ad1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2ad8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ad8:
  %v0_2ad9 = load i32, i32* @eax, align 4
  ret i32 %v0_2ad9
}

define i32 @_ZN5boost9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ada:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_1b70c.1190 to i32), i32* %arg1, align 4
  %v1_2afd = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_2afd, i32* @eax, align 4
  %v2_2b03 = call i32 @function_a4ec(i32 %v1_2afd)
  %v1_2b0b = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_2b0b = inttoptr i32 %v1_2b0b to i32*
  store i32 0, i32* %v2_2b0b, align 4
  %v1_2b15 = add i32 %tmp100, 12
  %v2_2b15 = inttoptr i32 %v1_2b15 to i32*
  store i32 0, i32* %v2_2b15, align 4
  %v1_2b1f = add i32 %tmp100, 16
  %v2_2b1f = inttoptr i32 %v1_2b1f to i32*
  store i32 -1, i32* %v2_2b1f, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b32

bb:                                               ; preds = %dec_label_pc_2ada
  %v1_2b30 = call i32 @function_2b37()
  br label %dec_label_pc_2b32

dec_label_pc_2b32:                                ; preds = %bb, %dec_label_pc_2ada
  %v2_2b30 = phi i32 [ %v1_2b30, %bb ], [ 0, %dec_label_pc_2ada ]
  ret i32 %v2_2b30

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_2b37() local_unnamed_addr {
dec_label_pc_2b37:
  %v0_2b38 = load i32, i32* @eax, align 4
  ret i32 %v0_2b38
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b3a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_1b70c.1190 to i32), i32* %arg1, align 4
  %v1_2b5d = add i32 %tmp99, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_2b5d, i32* @eax, align 4
  %v2_2b63 = call i32 @function_a580(i32 %v1_2b5d)
  %v1_2b72 = call i32 @function_2b96()
  ret i32 %tmp99
}

define i32 @function_2b7f() local_unnamed_addr {
dec_label_pc_2b7f:
  %v0_2b7f = call i32 @function_2b96()
  ret i32 %v0_2b7f

; uselistorder directives
  uselistorder i32 ()* @function_2b96, { 1, 0 }
}

define i32 @function_2b96() local_unnamed_addr {
dec_label_pc_2b96:
  %v0_2b96 = load i32, i32* @ebp, align 4
  %v1_2b96 = add i32 %v0_2b96, -12
  %v2_2b96 = inttoptr i32 %v1_2b96 to i32*
  %v3_2b96 = load i32, i32* %v2_2b96, align 4
  %v1_2b99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b99 = xor i32 %v1_2b99, %v3_2b96
  %v3_2b99 = icmp eq i32 %v2_2b99, 0
  store i32 %v2_2b99, i32* @eax, align 4
  br i1 %v3_2b99, label %bb, label %dec_label_pc_2ba2

bb:                                               ; preds = %dec_label_pc_2b96
  %v1_2ba0 = call i32 @function_2ba7()
  br label %dec_label_pc_2ba2

dec_label_pc_2ba2:                                ; preds = %bb, %dec_label_pc_2b96
  %v2_2ba0 = phi i32 [ %v1_2ba0, %bb ], [ %v2_2b99, %dec_label_pc_2b96 ]
  ret i32 %v2_2ba0
}

define i32 @function_2ba7() local_unnamed_addr {
dec_label_pc_2ba7:
  %v0_2ba8 = load i32, i32* @eax, align 4
  ret i32 %v0_2ba8
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_37f0:
  store i32 %arg1, i32* @eax, align 4
  %v1_380d = call i32 @function_632a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_382d() local_unnamed_addr {
dec_label_pc_382d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_382d = load i32, i32* %ecx.global-to-local, align 4
  %v1_382d = sub i32 %v0_382d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_382d, i32* %ecx.global-to-local, align 4
  %v0_382f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_382f
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3830:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_1b6f4.1191 to i32), i32* %arg1, align 4
  %v2_385a = call i32 @function_3867(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_3867(i32 %arg1) local_unnamed_addr {
dec_label_pc_3867:
  %v0_3867 = load i32, i32* @ebp, align 4
  %v1_3867 = add i32 %v0_3867, -12
  %v2_3867 = inttoptr i32 %v1_3867 to i32*
  %v3_3867 = load i32, i32* %v2_3867, align 4
  %v1_386a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_386a = xor i32 %v1_386a, %v3_3867
  %v3_386a = icmp eq i32 %v2_386a, 0
  store i32 %v2_386a, i32* @eax, align 4
  br i1 %v3_386a, label %bb, label %dec_label_pc_3873

bb:                                               ; preds = %dec_label_pc_3867
  %v1_3871 = call i32 @function_3878()
  br label %dec_label_pc_3873

dec_label_pc_3873:                                ; preds = %bb, %dec_label_pc_3867
  %v2_3871 = phi i32 [ %v1_3871, %bb ], [ %v2_386a, %dec_label_pc_3867 ]
  ret i32 %v2_3871
}

define i32 @function_3878() local_unnamed_addr {
dec_label_pc_3878:
  %v0_3879 = load i32, i32* @eax, align 4
  ret i32 %v0_3879
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_387a:
  ret i32 %arg1
}

define i32 @function_38b7() local_unnamed_addr {
dec_label_pc_38b7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38b7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_38b7 = sub i32 %v0_38b7, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_38b7, i32* %ecx.global-to-local, align 4
  %v0_38b9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38b9
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38ba:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp100 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %v2_38d8 = ptrtoint i32* %stack_var_-28 to i32
  %v1_38e6 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v10_38e6 = icmp eq i32 %v1_38e6, 0
  %v3_38e9 = inttoptr i32 %v1_38e6 to i8*
  store i8* %v3_38e9, i8** %stack_var_-60, align 4
  br i1 %v10_38e6, label %dec_label_pc_3933, label %dec_label_pc_38fa

dec_label_pc_38fa:                                ; preds = %dec_label_pc_38ba
  %v2_3904 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_38e6, i32* %edx.global-to-local, align 4
  %tmp115 = bitcast i32* %stack_var_-24 to i8*
  store i8* %tmp115, i8** %stack_var_-60, align 4
  store i32 %v2_38d8, i32* @eax, align 4
  store i32 %v2_38d8, i32* %stack_var_-64, align 4
  %v5_3923 = call i32 @function_b366(i32 %v2_38d8, i32 %v2_3904, i32 %v1_38e6)
  store i32 %v2_3904, i32* %stack_var_-64, align 4
  br label %dec_label_pc_3933

dec_label_pc_3933:                                ; preds = %dec_label_pc_38fa, %dec_label_pc_38ba
  %stack_var_-56.0 = phi i8* [ %tmp100, %dec_label_pc_38ba ], [ %v3_38e9, %dec_label_pc_38fa ]
  %v1_3936 = add i32 %arg2, 12
  %v2_3936 = inttoptr i32 %v1_3936 to i32*
  %v3_3936 = load i32, i32* %v2_3936, align 4
  store i32 %v3_3936, i32* %edx.global-to-local, align 4
  %v2_393c = add i32 %arg1, 12
  %v3_393c = inttoptr i32 %v2_393c to i32*
  store i32 %v3_3936, i32* %v3_393c, align 4
  %v1_3942 = add i32 %arg2, 16
  %v2_3942 = inttoptr i32 %v1_3942 to i32*
  %v3_3942 = load i32, i32* %v2_3942, align 4
  store i32 %v3_3942, i32* %edx.global-to-local, align 4
  %v2_3948 = add i32 %arg1, 16
  %v3_3948 = inttoptr i32 %v2_3948 to i32*
  store i32 %v3_3942, i32* %v3_3948, align 4
  %v1_394e = add i32 %arg2, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_394e = inttoptr i32 %v1_394e to i32*
  %v3_394e = load i32, i32* %v2_394e, align 4
  %v2_3954 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_3954 = inttoptr i32 %v2_3954 to i32*
  store i32 %v3_394e, i32* %v3_3954, align 4
  %v1_395a = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_395a, i32* %edx.global-to-local, align 4
  store i32 %v2_38d8, i32* @eax, align 4
  %v1_3960 = load i32, i32* @esp, align 4
  %v2_3960 = add i32 %v1_3960, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_3960 = inttoptr i32 %v2_3960 to i32*
  store i32 %v2_38d8, i32* %v3_3960, align 4
  %v0_3964 = load i32, i32* %edx.global-to-local, align 4
  %v1_3964 = load i32, i32* @esp, align 4
  %v2_3964 = inttoptr i32 %v1_3964 to i32*
  store i32 %v0_3964, i32* %v2_3964, align 4
  %v0_3967 = load i32, i32* %stack_var_-64, align 4
  %v1_3967 = load i8*, i8** %stack_var_-60, align 4
  %v2_3967 = ptrtoint i8* %v1_3967 to i32
  %v4_3967 = ptrtoint i8* %stack_var_-56.0 to i32
  %v5_3967 = call i32 @function_b366(i32 %v0_3967, i32 %v2_3967, i32 %v4_3967)
  %v1_396f = load i32, i32* @esp, align 4
  %v2_396f = inttoptr i32 %v1_396f to i32*
  store i32 %v2_38d8, i32* %v2_396f, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3983

bb:                                               ; preds = %dec_label_pc_3933
  %v1_3981 = call i32 @function_39b0()
  store i32 %v1_3981, i32* @eax, align 4
  br label %dec_label_pc_3983

dec_label_pc_3983:                                ; preds = %bb, %dec_label_pc_3933
  %v0_3983 = call i32 @function_39ab()
  ret i32 %v0_3983

; uselistorder directives
  uselistorder i32 %v2_38d8, { 3, 4, 5, 1, 0, 2 }
  uselistorder i8** %stack_var_-60, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_b366, { 1, 0 }
}

define i32 @function_3985() local_unnamed_addr {
dec_label_pc_3985:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3985 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3985, i32* @ebx, align 4
  %v0_3987 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3987 = add i32 %v0_3987, -20
  store i32 %v1_3987, i32* %eax.global-to-local, align 4
  %v1_3992 = call i32 @function_3996(i32 %v1_3987)
  store i32 %v1_3992, i32* %eax.global-to-local, align 4
  ret i32 %v1_3992
}

define i32 @function_3994() local_unnamed_addr {
dec_label_pc_3994:
  %eax.global-to-local = alloca i32, align 4
  %v0_3994 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3994
}

define i32 @function_3996(i32 %arg1) local_unnamed_addr {
dec_label_pc_3996:
  %v0_39a1 = load i32, i32* @ebx, align 4
  ret i32 %v0_39a1
}

define i32 @function_39ab() local_unnamed_addr {
dec_label_pc_39ab:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39b0() local_unnamed_addr {
dec_label_pc_39b0:
  %v0_39b4 = load i32, i32* @eax, align 4
  ret i32 %v0_39b4
}

define i32 @_ZN5boost6detail23atomic_exchange_and_addEPii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39b5:
  %v2_39de = load i32, i32* %arg1, align 4
  %v4_39de = add i32 %v2_39de, %arg2
  store i32 %v4_39de, i32* %arg1, align 4
  store i32 %v2_39de, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_39f4

bb:                                               ; preds = %dec_label_pc_39b5
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_39f2 = call i32 @function_39f9(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_39f4

dec_label_pc_39f4:                                ; preds = %bb, %dec_label_pc_39b5
  %v4_39f2 = phi i32 [ %v3_39f2, %bb ], [ %v2_39de, %dec_label_pc_39b5 ]
  ret i32 %v4_39f2

; uselistorder directives
  uselistorder i32 %v2_39de, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_39f9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39f9:
  %v0_39fe = load i32, i32* @eax, align 4
  ret i32 %v0_39fe
}

define i32 @_ZN5boost6detail16atomic_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_39ff:
  %v2_3a1c = load i32, i32* %arg1, align 4
  %v3_3a1c = add i32 %v2_3a1c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v3_3a1c, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3a2b

bb:                                               ; preds = %dec_label_pc_39ff
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_3a29 = call i32 @function_3a30(i32 %tmp100)
  br label %dec_label_pc_3a2b

dec_label_pc_3a2b:                                ; preds = %bb, %dec_label_pc_39ff
  %v3_3a29 = phi i32 [ %v2_3a29, %bb ], [ 0, %dec_label_pc_39ff ]
  ret i32 %v3_3a29

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_3a30(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a30:
  %v0_3a31 = load i32, i32* @eax, align 4
  ret i32 %v0_3a31
}

define i32 @_ZN5boost6detail15sp_counted_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3a32:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_1b6d4.1192 to i32), i32* %arg1, align 4
  %v1_3a55 = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_3a55 = inttoptr i32 %v1_3a55 to i32*
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* %v2_3a55, align 4
  %v1_3a5f = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_3a5f = inttoptr i32 %v1_3a5f to i32*
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* %v2_3a5f, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3a72

bb:                                               ; preds = %dec_label_pc_3a32
  %v2_3a70 = call i32 @function_3a77(i32 %tmp100)
  br label %dec_label_pc_3a72

dec_label_pc_3a72:                                ; preds = %bb, %dec_label_pc_3a32
  %v3_3a70 = phi i32 [ %v2_3a70, %bb ], [ 0, %dec_label_pc_3a32 ]
  ret i32 %v3_3a70
}

define i32 @function_3a77(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a77:
  %v0_3a78 = load i32, i32* @eax, align 4
  ret i32 %v0_3a78
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3a7a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_1b6d4.1192 to i32), i32* %arg1, align 4
  %v2_3aa4 = call i32 @function_3ab1(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_3ab1(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ab1:
  %v0_3ab1 = load i32, i32* @ebp, align 4
  %v1_3ab1 = add i32 %v0_3ab1, -12
  %v2_3ab1 = inttoptr i32 %v1_3ab1 to i32*
  %v3_3ab1 = load i32, i32* %v2_3ab1, align 4
  %v1_3ab4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3ab4 = xor i32 %v1_3ab4, %v3_3ab1
  %v3_3ab4 = icmp eq i32 %v2_3ab4, 0
  store i32 %v2_3ab4, i32* @eax, align 4
  br i1 %v3_3ab4, label %bb, label %dec_label_pc_3abd

bb:                                               ; preds = %dec_label_pc_3ab1
  %v1_3abb = call i32 @function_3ac2()
  br label %dec_label_pc_3abd

dec_label_pc_3abd:                                ; preds = %bb, %dec_label_pc_3ab1
  %v2_3abb = phi i32 [ %v1_3abb, %bb ], [ %v2_3ab4, %dec_label_pc_3ab1 ]
  ret i32 %v2_3abb
}

define i32 @function_3ac2() local_unnamed_addr {
dec_label_pc_3ac2:
  %v0_3ac3 = load i32, i32* @eax, align 4
  ret i32 %v0_3ac3
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ac4:
  ret i32 %arg1
}

define i32 @function_3b01() local_unnamed_addr {
dec_label_pc_3b01:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3b01 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3b01 = sub i32 %v0_3b01, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_3b01, i32* %ecx.global-to-local, align 4
  %v0_3b03 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b03
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_3b04:
  %v10_3b1b = icmp eq i32* %arg1, null
  br i1 %v10_3b1b, label %dec_label_pc_3b33, label %dec_label_pc_3b21

dec_label_pc_3b21:                                ; preds = %dec_label_pc_3b04
  br label %dec_label_pc_3b33

dec_label_pc_3b33:                                ; preds = %dec_label_pc_3b21, %dec_label_pc_3b04
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3b3f

bb:                                               ; preds = %dec_label_pc_3b33
  %v1_3b3d = call i32 @function_3b44()
  br label %dec_label_pc_3b3f

dec_label_pc_3b3f:                                ; preds = %bb, %dec_label_pc_3b33
  %v2_3b3d = phi i32 [ %v1_3b3d, %bb ], [ 0, %dec_label_pc_3b33 ]
  ret i32 %v2_3b3d
}

define i32 @function_3b44() local_unnamed_addr {
dec_label_pc_3b44:
  %v0_3b45 = load i32, i32* @eax, align 4
  ret i32 %v0_3b45
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_copyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b46:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3b77

bb:                                               ; preds = %dec_label_pc_3b46
  %v1_3b60 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_3b75 = call i32 @function_3b7c(i32 %v1_3b60)
  br label %dec_label_pc_3b77

dec_label_pc_3b77:                                ; preds = %bb, %dec_label_pc_3b46
  %v4_3b75 = phi i32 [ %v3_3b75, %bb ], [ 0, %dec_label_pc_3b46 ]
  ret i32 %v4_3b75
}

define i32 @function_3b7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b7c:
  %v0_3b7d = load i32, i32* @eax, align 4
  ret i32 %v0_3b7d
}

define i32 @_ZN5boost6detail15sp_counted_base7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3b7e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_3b98 = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_3ba6 = call i32 @__stack_chk_fail.132(i32 %v1_3b98, i32 -1)
  %v10_3bab = icmp eq i32 %v3_3ba6, 1
  %v5_3bb1 = icmp eq i1 %v10_3bab, false
  br i1 %v5_3bb1, label %dec_label_pc_3bd2, label %dec_label_pc_3bb5

dec_label_pc_3bb5:                                ; preds = %dec_label_pc_3b7e
  br label %dec_label_pc_3bd2

dec_label_pc_3bd2:                                ; preds = %dec_label_pc_3bb5, %dec_label_pc_3b7e
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3bde

bb:                                               ; preds = %dec_label_pc_3bd2
  %v1_3bdc = call i32 @function_3be3()
  br label %dec_label_pc_3bde

dec_label_pc_3bde:                                ; preds = %bb, %dec_label_pc_3bd2
  %v2_3bdc = phi i32 [ %v1_3bdc, %bb ], [ 0, %dec_label_pc_3bd2 ]
  ret i32 %v2_3bdc
}

define i32 @function_3be3() local_unnamed_addr {
dec_label_pc_3be3:
  %v0_3be4 = load i32, i32* @eax, align 4
  ret i32 %v0_3be4
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3be6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_3c00 = add i32 %tmp102, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_3c0e = call i32 @function_759b(i32 %v1_3c00, i32 -1)
  %v10_3c13 = icmp eq i32 %v2_3c0e, 1
  %v5_3c19 = icmp eq i1 %v10_3c13, false
  br i1 %v5_3c19, label %dec_label_pc_3c2f, label %dec_label_pc_3c1d

dec_label_pc_3c1d:                                ; preds = %dec_label_pc_3be6
  br label %dec_label_pc_3c2f

dec_label_pc_3c2f:                                ; preds = %dec_label_pc_3c1d, %dec_label_pc_3be6
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3c3b

bb:                                               ; preds = %dec_label_pc_3c2f
  %v1_3c39 = call i32 @function_3c40()
  br label %dec_label_pc_3c3b

dec_label_pc_3c3b:                                ; preds = %bb, %dec_label_pc_3c2f
  %v2_3c39 = phi i32 [ %v1_3c39, %bb ], [ 0, %dec_label_pc_3c2f ]
  ret i32 %v2_3c39
}

define i32 @function_3c40() local_unnamed_addr {
dec_label_pc_3c40:
  %v0_3c41 = load i32, i32* @eax, align 4
  ret i32 %v0_3c41
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3c42:
  %v2_3c5c = load i32, i32* %arg1, align 4
  %v1_3c5e = icmp eq i32 %v2_3c5c, 0
  br i1 %v1_3c5e, label %dec_label_pc_3c6f, label %dec_label_pc_3c62

dec_label_pc_3c62:                                ; preds = %dec_label_pc_3c42
  br label %dec_label_pc_3c6f

dec_label_pc_3c6f:                                ; preds = %dec_label_pc_3c62, %dec_label_pc_3c42
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3c7b

bb:                                               ; preds = %dec_label_pc_3c6f
  %v1_3c79 = call i32 @function_3c80()
  br label %dec_label_pc_3c7b

dec_label_pc_3c7b:                                ; preds = %bb, %dec_label_pc_3c6f
  %v2_3c79 = phi i32 [ %v1_3c79, %bb ], [ 0, %dec_label_pc_3c6f ]
  ret i32 %v2_3c79
}

define i32 @function_3c80() local_unnamed_addr {
dec_label_pc_3c80:
  %v0_3c81 = load i32, i32* @eax, align 4
  ret i32 %v0_3c81
}

define i32 @_ZN5boost6detail12shared_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c82:
  %v1_3ca2 = inttoptr i32 %arg2 to i32*
  %v2_3ca2 = load i32, i32* %v1_3ca2, align 4
  store i32 %v2_3ca2, i32* %arg1, align 4
  %v1_3cae = icmp eq i32 %v2_3ca2, 0
  br i1 %v1_3cae, label %dec_label_pc_3cbf, label %dec_label_pc_3cb2

dec_label_pc_3cb2:                                ; preds = %dec_label_pc_3c82
  br label %dec_label_pc_3cbf

dec_label_pc_3cbf:                                ; preds = %dec_label_pc_3cb2, %dec_label_pc_3c82
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3ccb

bb:                                               ; preds = %dec_label_pc_3cbf
  %v1_3cc9 = call i32 @function_3cd0()
  br label %dec_label_pc_3ccb

dec_label_pc_3ccb:                                ; preds = %bb, %dec_label_pc_3cbf
  %v2_3cc9 = phi i32 [ %v1_3cc9, %bb ], [ 0, %dec_label_pc_3cbf ]
  ret i32 %v2_3cc9
}

define i32 @function_3cd0() local_unnamed_addr {
dec_label_pc_3cd0:
  %v0_3cd1 = load i32, i32* @eax, align 4
  ret i32 %v0_3cd1
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisEz() local_unnamed_addr {
dec_label_pc_3cd2:
  %v0_3cd8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3cef

bb:                                               ; preds = %dec_label_pc_3cd2
  %v2_3ced = call i32 @function_3cf4(i32 %v0_3cd8)
  br label %dec_label_pc_3cef

dec_label_pc_3cef:                                ; preds = %bb, %dec_label_pc_3cd2
  %v3_3ced = phi i32 [ %v2_3ced, %bb ], [ 0, %dec_label_pc_3cd2 ]
  ret i32 %v3_3ced
}

define i32 @function_3cf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cf4:
  %v0_3cf5 = load i32, i32* @eax, align 4
  ret i32 %v0_3cf5
}

define i32 @function_3e0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e0c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_40bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_40bc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_40fa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_422a(i32 %arg1) local_unnamed_addr {
dec_label_pc_422a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4309() local_unnamed_addr {
dec_label_pc_4309:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_Z16GetSerializeSizecii(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4330:
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4364

bb:                                               ; preds = %dec_label_pc_4330
  %v4_4362 = sext i8 %arg1 to i32
  %v5_4362 = call i32 @function_4369(i32 %arg3, i32 %arg2, i32 %v4_4362)
  br label %dec_label_pc_4364

dec_label_pc_4364:                                ; preds = %bb, %dec_label_pc_4330
  %v6_4362 = phi i32 [ %v5_4362, %bb ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_4330 ]
  ret i32 %v6_4362
}

define i32 @function_4369(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4369:
  %v0_436a = load i32, i32* @eax, align 4
  ret i32 %v0_436a
}

define i32 @_Z16GetSerializeSizeiii(i32 %arg1) local_unnamed_addr {
dec_label_pc_436b:
  ret i32 %arg1
}

define i32 @function_4376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4376:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4378 = load i32, i32* @ebp, align 4
  %v0_4379 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_4379 = or i32 %v0_4379, 137
  store i32 %v11_4379, i32* @eax, align 4
  %v1_437b = add i32 %v0_4378, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v9_437b = icmp eq i32 %v1_437b, 0
  store i32 %v1_437b, i32* %ebp.global-to-local, align 4
  %v0_437c = load i32, i32* @ecx, align 4
  %v1_437c = sub i32 %v0_437c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_437c, i32* %ecx.global-to-local, align 4
  %v2_437c = icmp eq i32 %v1_437c, 0
  %v4_437c = or i1 %v9_437b, %v2_437c
  br i1 %v4_437c, label %dec_label_pc_437e, label %bb

bb:                                               ; preds = %dec_label_pc_4376
  %v6_437c = call i32 @function_4309()
  store i32 %v6_437c, i32* @eax, align 4
  %v0_437e.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_437f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_437f.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_437e

dec_label_pc_437e:                                ; preds = %dec_label_pc_4376, %bb
  %v6_437f = phi i1 [ false, %dec_label_pc_4376 ], [ %v6_437f.pre, %bb ]
  %v30_437f = phi i32 [ %v1_437c, %dec_label_pc_4376 ], [ %v0_437f.pre, %bb ]
  %v0_437e = phi i32 [ %v1_437b, %dec_label_pc_4376 ], [ %v0_437e.pre, %bb ]
  %v1_437e = add i32 %v0_437e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_437e, i32* @ebp, align 4
  %v1_437f = add i32 %v30_437f, -1587159995
  %v2_437f = inttoptr i32 %v1_437f to i8*
  %v3_437f = load i8, i8* %v2_437f, align 1
  %v5_437f = trunc i32 %v30_437f to i8
  %v7_437f = zext i1 %v6_437f to i8
  %v8_437f = add i8 %v3_437f, %v5_437f
  %v9_437f = add i8 %v8_437f, %v7_437f
  %v27_437f = icmp ule i8 %v9_437f, %v3_437f
  %v28_437f = icmp ult i8 %v8_437f, %v3_437f
  %v29_437f = select i1 %v6_437f, i1 %v27_437f, i1 %v28_437f
  store i1 %v29_437f, i1* %cf.global-to-local, align 1
  store i8 %v9_437f, i8* %v2_437f, align 1
  %v0_4385 = load i32, i32* @eax, align 4
  %v1_4385 = trunc i32 %v0_4385 to i8
  %v2_4385 = load i1, i1* %cf.global-to-local, align 1
  %v3_4385 = zext i1 %v2_4385 to i8
  %v4_4385 = add i8 %v3_4385, %v1_4385
  %v19_4385 = icmp ule i8 %v4_4385, %v1_4385
  %v21_4385 = icmp eq i1 %v2_4385, %v19_4385
  store i1 %v21_4385, i1* %cf.global-to-local, align 1
  %v22_4385 = zext i8 %v4_4385 to i32
  %v24_4385 = and i32 %v0_4385, -256
  %v25_4385 = or i32 %v22_4385, %v24_4385
  store i32 %v25_4385, i32* %eax.global-to-local, align 4
  %v1_4387 = inttoptr i32 %v25_4385 to i8*
  %v2_4387 = load i8, i8* %v1_4387, align 1
  %v5_4387 = add i8 %v2_4387, %v4_4385
  store i8 %v5_4387, i8* %v1_4387, align 1
  %v0_4389 = load i32, i32* %eax.global-to-local, align 4
  %v1_4389 = load i32, i32* @ebp, align 4
  %v2_4389 = add i32 %v1_4389, -12
  %v3_4389 = inttoptr i32 %v2_4389 to i32*
  store i32 %v0_4389, i32* %v3_4389, align 4
  store i32 ptrtoint (i8** @global_var_4.1177 to i32), i32* @eax, align 4
  %v0_4393 = load i32, i32* @ebp, align 4
  %v1_4393 = add i32 %v0_4393, -12
  %v2_4393 = inttoptr i32 %v1_4393 to i32*
  %v3_4393 = load i32, i32* %v2_4393, align 4
  %v1_4396 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_4396 = icmp eq i32 %v1_4396, %v3_4393
  br i1 %v3_4396, label %bb7, label %dec_label_pc_439f

bb7:                                              ; preds = %dec_label_pc_437e
  %v1_439d = call i32 @function_43a4()
  store i32 %v1_439d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_439f

dec_label_pc_439f:                                ; preds = %bb7, %dec_label_pc_437e
  %v2_439d = phi i32 [ %v1_439d, %bb7 ], [ ptrtoint (i8** @global_var_4.1177 to i32), %dec_label_pc_437e ]
  ret i32 %v2_439d

; uselistorder directives
  uselistorder i8 %v4_4385, { 0, 2, 1 }
  uselistorder i8 %v1_4385, { 1, 0 }
  uselistorder i8 %v9_437f, { 1, 0 }
  uselistorder i8 %v8_437f, { 1, 0 }
  uselistorder i8 %v3_437f, { 1, 2, 0 }
  uselistorder i32 %v30_437f, { 1, 0 }
  uselistorder i1 %v6_437f, { 1, 0 }
  uselistorder label %dec_label_pc_437e, { 1, 0 }
}

define i32 @function_43a4() local_unnamed_addr {
dec_label_pc_43a4:
  %v0_43a5 = load i32, i32* @eax, align 4
  ret i32 %v0_43a5
}

define i32 @_Z16GetSerializeSizejii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_43a6:
  store i32 ptrtoint (i8** @global_var_4.1177 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_43da

bb:                                               ; preds = %dec_label_pc_43a6
  %v4_43d8 = call i32 @function_43df(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_43da

dec_label_pc_43da:                                ; preds = %bb, %dec_label_pc_43a6
  %v5_43d8 = phi i32 [ %v4_43d8, %bb ], [ ptrtoint (i8** @global_var_4.1177 to i32), %dec_label_pc_43a6 ]
  ret i32 %v5_43d8
}

define i32 @function_43df(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_43df:
  %v0_43e0 = load i32, i32* @eax, align 4
  ret i32 %v0_43e0
}

define i32 @_Z20GetSizeOfCompactSizey(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_43e1:
  %v10_43fe = icmp eq i32 %arg2, 0
  br i1 %v10_43fe, label %dec_label_pc_4404, label %dec_label_pc_441a.thread

dec_label_pc_441a.thread:                         ; preds = %dec_label_pc_43e1
  br label %dec_label_pc_443d

dec_label_pc_4404:                                ; preds = %dec_label_pc_43e1
  %tmp107 = icmp ult i32 %arg1, 253
  br i1 %tmp107, label %dec_label_pc_4413, label %dec_label_pc_4438

dec_label_pc_4413:                                ; preds = %dec_label_pc_4404
  ret i32 ptrtoint (i8** @global_var_1.1176 to i32)

dec_label_pc_4438:                                ; preds = %dec_label_pc_4404
  br label %dec_label_pc_443d

dec_label_pc_443d:                                ; preds = %dec_label_pc_4438, %dec_label_pc_441a.thread
  ret i32 0
}

define i32 @function_4448(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4448:
  %ebx.global-to-local = alloca i32, align 4
  %v2_4448 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_4448 = load i32, i32* @eax, align 4
  %v4_4448 = trunc i32 %v3_4448 to i8
  %v5_4448 = add i8 %v4_4448, %v2_4448
  %v21_4448 = inttoptr i32 %v3_4448 to i8*
  store i8 %v5_4448, i8* %v21_4448, align 1
  %v0_444a = load i32, i32* @ebx, align 4
  %v2_444a = load i32, i32* @ecx, align 4
  %v3_444a = lshr i32 %v2_444a, ptrtoint (i32* @global_var_8.1178 to i32)
  %v5_444a = add i32 %v3_444a, %v0_444a
  %v20_444a = urem i32 %v5_444a, 256
  %v22_444a = and i32 %v0_444a, -256
  %v23_444a = or i32 %v20_444a, %v22_444a
  store i32 %v23_444a, i32* %ebx.global-to-local, align 4
  %v0_444c = load i32, i32* @ebp, align 4
  %v1_444c = load i32, i32* @eax, align 4
  %v2_444c = xor i32 %v1_444c, %v0_444c
  store i32 %v2_444c, i32* @ebp, align 4
  %v20_444e = inttoptr i32 %v1_444c to i32*
  store i32 0, i32* %v20_444e, align 4
  %v2_4451 = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v3_4451 = load i32, i32* %ebx.global-to-local, align 4
  %v4_4451 = lshr i32 %v3_4451, ptrtoint (i32* @global_var_8.1178 to i32)
  %v5_4451 = trunc i32 %v4_4451 to i8
  %v6_4451 = add i8 %v5_4451, %v2_4451
  %v21_4451 = load i32, i32* @edx, align 4
  %v22_4451 = inttoptr i32 %v21_4451 to i8*
  store i8 %v6_4451, i8* %v22_4451, align 1
  %v0_445c = load i32, i32* @edx, align 4
  %v1_445c = load i32, i32* @ebp, align 4
  %v2_445c = add i32 %v1_445c, -28
  %v3_445c = inttoptr i32 %v2_445c to i32*
  %v4_445c = load i32, i32* %v3_445c, align 4
  %tmp = icmp ugt i32 %v0_445c, %v4_445c
  br i1 %tmp, label %dec_label_pc_4470, label %dec_label_pc_4461

dec_label_pc_4461:                                ; preds = %dec_label_pc_4448
  %v10_445c = icmp ult i32 %v0_445c, %v4_445c
  br i1 %v10_445c, label %dec_label_pc_446b, label %dec_label_pc_4466

dec_label_pc_4466:                                ; preds = %dec_label_pc_4461
  %v0_4466 = load i32, i32* @eax, align 4
  %v2_4466 = add i32 %v1_445c, -32
  %v3_4466 = inttoptr i32 %v2_4466 to i32*
  %v4_4466 = load i32, i32* %v3_4466, align 4
  %v10_4466 = icmp ult i32 %v0_4466, %v4_4466
  %v1_4469 = icmp eq i1 %v10_4466, false
  br i1 %v1_4469, label %dec_label_pc_4470, label %dec_label_pc_446b

dec_label_pc_446b:                                ; preds = %dec_label_pc_4466, %dec_label_pc_4461
  br label %dec_label_pc_4470

dec_label_pc_4470:                                ; preds = %dec_label_pc_4448, %dec_label_pc_446b, %dec_label_pc_4466
  %v0_4470 = phi i8 [ ptrtoint (i8** @global_var_1.1176 to i8), %dec_label_pc_4448 ], [ 0, %dec_label_pc_446b ], [ ptrtoint (i8** @global_var_1.1176 to i8), %dec_label_pc_4466 ]
  %v5_4470 = icmp eq i8 %v0_4470, 0
  %. = select i1 %v5_4470, i32 ptrtoint (i32* @global_var_9.1193 to i32), i32 ptrtoint (i8* @global_var_5.1189 to i32)
  store i32 %., i32* @eax, align 4
  %v1_4480 = add i32 %v1_445c, -12
  %v2_4480 = inttoptr i32 %v1_4480 to i32*
  %v3_4480 = load i32, i32* %v2_4480, align 4
  %v1_4483 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4483 = icmp eq i32 %v1_4483, %v3_4480
  br i1 %v3_4483, label %bb, label %dec_label_pc_448c

bb:                                               ; preds = %dec_label_pc_4470
  %v1_448a = call i32 @function_4491()
  br label %dec_label_pc_448c

dec_label_pc_448c:                                ; preds = %bb, %dec_label_pc_4470
  %v2_448a = phi i32 [ %v1_448a, %bb ], [ %., %dec_label_pc_4470 ]
  ret i32 %v2_448a

; uselistorder directives
  uselistorder i32 %v4_445c, { 1, 0 }
  uselistorder i32 %v0_445c, { 1, 0 }
  uselistorder i32 %v1_444c, { 1, 0 }
  uselistorder i32 %v0_444a, { 1, 0 }
  uselistorder label %dec_label_pc_4470, { 1, 2, 0 }
}

define i32 @function_448e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_448e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4491() local_unnamed_addr {
dec_label_pc_4491:
  %v0_4492 = load i32, i32* @eax, align 4
  ret i32 %v0_4492
}

define i32 @_ZN9CFlatDataC1EPvS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4494:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_44c5 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_44c5 = inttoptr i32 %v2_44c5 to i32*
  store i32 %arg3, i32* %v3_44c5, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_44d4

bb:                                               ; preds = %dec_label_pc_4494
  %v4_44d2 = call i32 @function_44d9(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_44d4

dec_label_pc_44d4:                                ; preds = %bb, %dec_label_pc_4494
  %v5_44d2 = phi i32 [ %v4_44d2, %bb ], [ 0, %dec_label_pc_4494 ]
  ret i32 %v5_44d2
}

define i32 @function_44d9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_44d9:
  %v0_44da = load i32, i32* @eax, align 4
  ret i32 %v0_44da
}

define i32 @_ZN11CDataStreamC1Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_44dc:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v3_451e = call i32 @function_8ac2(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_452f

bb:                                               ; preds = %dec_label_pc_44dc
  %v1_452d = call i32 @function_4534()
  br label %dec_label_pc_452f

dec_label_pc_452f:                                ; preds = %bb, %dec_label_pc_44dc
  %v2_452d = phi i32 [ %v1_452d, %bb ], [ 0, %dec_label_pc_44dc ]
  ret i32 %v2_452d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_4534() local_unnamed_addr {
dec_label_pc_4534:
  %v0_4535 = load i32, i32* @eax, align 4
  ret i32 %v0_4535
}

define i32 @_ZN11CDataStreamC1EPKcS1_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_4536:
  store i32 %arg2, i32* @edx, align 4
  ret i32 %arg1
}

define i32 @function_458c(i32 %arg1) local_unnamed_addr {
dec_label_pc_458c:
  %v0_458c = call i32 @function_c1d6()
  %v0_4591 = load i32, i32* @ebp, align 4
  %v1_4591 = add i32 %v0_4591, -13
  %v1_4597 = call i32 @function_c1a0(i32 %v1_4591)
  %v0_459c = load i32, i32* @ebp, align 4
  %v1_459c = add i32 %v0_459c, -44
  %v2_459c = inttoptr i32 %v1_459c to i32*
  %v3_459c = load i32, i32* %v2_459c, align 4
  %v1_45a3 = add i32 %v0_459c, -40
  %v2_45a3 = inttoptr i32 %v1_45a3 to i32*
  %v3_45a3 = load i32, i32* %v2_45a3, align 4
  %v1_45aa = add i32 %v0_459c, -28
  %v2_45aa = inttoptr i32 %v1_45aa to i32*
  %v3_45aa = load i32, i32* %v2_45aa, align 4
  store i32 %v3_45aa, i32* @eax, align 4
  %v3_45b0 = call i32 @function_8b1c(i32 %v3_45aa, i32 %v3_45a3, i32 %v3_459c)
  %v0_45b5 = load i32, i32* @ebp, align 4
  %v1_45b5 = add i32 %v0_45b5, -12
  %v2_45b5 = inttoptr i32 %v1_45b5 to i32*
  %v3_45b5 = load i32, i32* %v2_45b5, align 4
  %v1_45b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_45b8 = xor i32 %v1_45b8, %v3_45b5
  %v3_45b8 = icmp eq i32 %v2_45b8, 0
  store i32 %v2_45b8, i32* @eax, align 4
  br i1 %v3_45b8, label %bb, label %dec_label_pc_45c1

bb:                                               ; preds = %dec_label_pc_458c
  %v1_45bf = call i32 @function_45df()
  store i32 %v1_45bf, i32* @eax, align 4
  br label %dec_label_pc_45c1

dec_label_pc_45c1:                                ; preds = %bb, %dec_label_pc_458c
  %v0_45c1 = call i32 @function_45da()
  ret i32 %v0_45c1
}

define i32 @function_45c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_45c4:
  %v0_45c4 = load i32, i32* @eax, align 4
  ret i32 %v0_45c4
}

define i32 @function_45da() local_unnamed_addr {
dec_label_pc_45da:
  %v0_45da = load i32, i32* @eax, align 4
  ret i32 %v0_45da
}

define i32 @function_45df() local_unnamed_addr {
dec_label_pc_45df:
  %v0_45e4 = load i32, i32* @eax, align 4
  ret i32 %v0_45e4
}

define i32 @_ZN11CDataStream4InitEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_45e6:
  %v1_460c = add i32 %arg1, 12
  %v2_460c = inttoptr i32 %v1_460c to i32*
  store i32 0, i32* %v2_460c, align 4
  %v2_4619 = add i32 %arg1, 20
  %v3_4619 = inttoptr i32 %v2_4619 to i32*
  store i32 %arg2, i32* %v3_4619, align 4
  %v2_4622 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v3_4622 = inttoptr i32 %v2_4622 to i32*
  store i32 %arg3, i32* %v3_4622, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_462c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_462c:
  %v2_462c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_462c = load i32, i32* @eax, align 4
  %v4_462c = trunc i32 %v3_462c to i8
  %v5_462c = add i8 %v4_462c, %v2_462c
  %v21_462c = inttoptr i32 %v3_462c to i8*
  store i8 %v5_462c, i8* %v21_462c, align 1
  %v4_463d = call i32 @function_6fb6(i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_4.1177 to i32))
  %v0_4644 = load i32, i32* @ebp, align 4
  %v1_4644 = add i32 %v0_4644, -28
  %v2_4644 = inttoptr i32 %v1_4644 to i32*
  %v3_4644 = load i32, i32* %v2_4644, align 4
  %v1_4647 = trunc i32 %v4_463d to i16
  %v3_4647 = add i32 %v3_4644, 18
  %v4_4647 = inttoptr i32 %v3_4647 to i16*
  store i16 %v1_4647, i16* %v4_4647, align 2
  %v0_464b = load i32, i32* @ebp, align 4
  %v1_464b = add i32 %v0_464b, -12
  %v2_464b = inttoptr i32 %v1_464b to i32*
  %v3_464b = load i32, i32* %v2_464b, align 4
  %v1_464e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_464e = xor i32 %v1_464e, %v3_464b
  %v3_464e = icmp eq i32 %v2_464e, 0
  store i32 %v2_464e, i32* @eax, align 4
  br i1 %v3_464e, label %bb, label %dec_label_pc_4657

bb:                                               ; preds = %dec_label_pc_462c
  %v1_4655 = call i32 @function_465c()
  br label %dec_label_pc_4657

dec_label_pc_4657:                                ; preds = %bb, %dec_label_pc_462c
  %v2_4655 = phi i32 [ %v1_4655, %bb ], [ %v2_464e, %dec_label_pc_462c ]
  ret i32 %v2_4655
}

define i32 @function_465c() local_unnamed_addr {
dec_label_pc_465c:
  %v0_465d = load i32, i32* @eax, align 4
  ret i32 %v0_465d
}

define i32 @_ZN11CDataStreamD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_465e:
  %v1_467b = call i32 @function_c218(i32 %arg1)
  ret i32 0
}

define i32 @_ZNK11CDataStream3strEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4694:
  %stack_var_-17 = alloca i32, align 4
  %v2_46b2 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_46b2
}

define i32 @function_46fe(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_46fe:
  %v0_4700 = load i32, i32* @eax, align 4
  %v2_4700 = add i32 %v0_4700, 36
  %v16_4700 = and i32 %v2_4700, 255
  %v18_4700 = and i32 %v0_4700, -256
  %v19_4700 = or i32 %v16_4700, %v18_4700
  ret i32 %v19_4700

; uselistorder directives
  uselistorder i32 %v0_4700, { 1, 0 }
}

define i32 @function_4706(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4706:
  %v0_4706 = load i32, i32* @ebp, align 4
  %v1_4706 = add i32 %v0_4706, 76149573
  %v2_4706 = inttoptr i32 %v1_4706 to i8*
  %v3_4706 = load i8, i8* %v2_4706, align 1
  %v4_4706 = load i32, i32* @ecx, align 4
  %v5_4706 = trunc i32 %v4_4706 to i8
  %v6_4706 = add i8 %v5_4706, %v3_4706
  store i8 %v6_4706, i8* %v2_4706, align 1
  %v0_470c = load i32, i32* @eax, align 4
  %v11_470c = and i32 %v0_470c, -24
  ret i32 %v11_470c
}

define i32 @function_4711() local_unnamed_addr {
dec_label_pc_4711:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_4711 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4711 = add i32 %v0_4711, 1435231301
  %v2_4711 = inttoptr i32 %v1_4711 to i32*
  %v3_4711 = load i32, i32* %v2_4711, align 4
  %v4_4711 = add i32 %v3_4711, -1
  store i32 %v4_4711, i32* %v2_4711, align 4
  %v0_4718 = load i32, i32* %edx.global-to-local, align 4
  %v1_4718 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4718 = xor i32 %v1_4718, %v0_4718
  %v3_4718 = icmp eq i32 %v2_4718, 0
  store i32 %v2_4718, i32* %edx.global-to-local, align 4
  br i1 %v3_4718, label %bb, label %dec_label_pc_4721

bb:                                               ; preds = %dec_label_pc_4711
  %v1_471f = call i32 @function_473f()
  store i32 %v1_471f, i32* @eax, align 4
  br label %dec_label_pc_4721

dec_label_pc_4721:                                ; preds = %bb, %dec_label_pc_4711
  %v0_4721 = call i32 @function_473a()
  ret i32 %v0_4721
}

define i32 @function_4724() local_unnamed_addr {
dec_label_pc_4724:
  %eax.global-to-local = alloca i32, align 4
  %v0_4724 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4724
}

define i32 @function_473a() local_unnamed_addr {
dec_label_pc_473a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_473f() local_unnamed_addr {
dec_label_pc_473f:
  %v0_4743 = load i32, i32* @eax, align 4
  ret i32 %v0_4743
}

define i32 @_ZNK11CDataStream5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4746:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_4766 = add i32 %arg2, 12
  %v2_4766 = inttoptr i32 %v1_4766 to i32*
  %v3_4766 = load i32, i32* %v2_4766, align 4
  store i32 %v3_4766, i32* %stack_var_-20, align 4
  %v2_476f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_476f, i32* @eax, align 4
  %v2_4779 = call i32 @function_c470(i32 %v2_476f, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_47ac

bb:                                               ; preds = %dec_label_pc_4746
  %v2_4784 = ptrtoint i32* %stack_var_-20 to i32
  %v4_47aa = call i32 @function_47b1(i32 %arg1, i32 %v2_476f, i32 %v2_4784)
  br label %dec_label_pc_47ac

dec_label_pc_47ac:                                ; preds = %bb, %dec_label_pc_4746
  %v5_47aa = phi i32 [ %v4_47aa, %bb ], [ %arg1, %dec_label_pc_4746 ]
  ret i32 %v5_47aa

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_47b1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_47b1:
  %v0_47b2 = load i32, i32* @eax, align 4
  ret i32 %v0_47b2
}

define i32 @_ZNK11CDataStream3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_47b6:
  store i32 %arg1, i32* @eax, align 4
  %v2_47e0 = call i32 @function_c530(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_47f7

bb:                                               ; preds = %dec_label_pc_47b6
  %v1_47f5 = call i32 @function_47fc()
  br label %dec_label_pc_47f7

dec_label_pc_47f7:                                ; preds = %bb, %dec_label_pc_47b6
  %v2_47f5 = phi i32 [ %v1_47f5, %bb ], [ %arg1, %dec_label_pc_47b6 ]
  ret i32 %v2_47f5

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_47fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_47fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_47fc() local_unnamed_addr {
dec_label_pc_47fc:
  %v0_47fd = load i32, i32* @eax, align 4
  ret i32 %v0_47fd
}

define i32 @_ZNK11CDataStream4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_4800:
  %v1_481d = call i32 @function_c77e(i32 %arg1)
  %v1_4825 = add i32 %arg1, 12
  %v2_4825 = inttoptr i32 %v1_4825 to i32*
  %v3_4825 = load i32, i32* %v2_4825, align 4
  %v2_4828 = sub i32 %v1_481d, %v3_4825
  store i32 %v2_4828, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4836

bb:                                               ; preds = %dec_label_pc_4800
  %v1_4834 = call i32 @function_483b()
  br label %dec_label_pc_4836

dec_label_pc_4836:                                ; preds = %bb, %dec_label_pc_4800
  %v2_4834 = phi i32 [ %v1_4834, %bb ], [ %v2_4828, %dec_label_pc_4800 ]
  ret i32 %v2_4834

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_483b() local_unnamed_addr {
dec_label_pc_483b:
  %v0_483c = load i32, i32* @eax, align 4
  ret i32 %v0_483c
}

define i32 @_ZN11CDataStream7reserveEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_483e:
  %v1_485e = add i32 %arg1, 12
  %v2_485e = inttoptr i32 %v1_485e to i32*
  %v3_485e = load i32, i32* %v2_485e, align 4
  %v5_4863 = add i32 %v3_485e, %arg2
  store i32 %arg1, i32* @eax, align 4
  %v2_4870 = call i32 @function_c7fa(i32 %arg1, i32 %v5_4863)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4881

bb:                                               ; preds = %dec_label_pc_483e
  %v1_487f = call i32 @function_4886()
  br label %dec_label_pc_4881

dec_label_pc_4881:                                ; preds = %bb, %dec_label_pc_483e
  %v2_487f = phi i32 [ %v1_487f, %bb ], [ 0, %dec_label_pc_483e ]
  ret i32 %v2_487f

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_4886() local_unnamed_addr {
dec_label_pc_4886:
  %v0_4887 = load i32, i32* @eax, align 4
  ret i32 %v0_4887
}

define i32 @_ZN11CDataStreamixEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4888:
  ret i32 %arg1
}

define i32 @_ZN11CDataStream8setstateEsPKc(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_48d2:
  %v1_48fb = add i32 %arg1, 16
  %v2_48fb = inttoptr i32 %v1_48fb to i16*
  %v3_48fb = load i16, i16* %v2_48fb, align 2
  %v6_4901 = or i16 %v3_48fb, %arg2
  store i16 %v6_4901, i16* %v2_48fb, align 2
  %v1_4916 = add i32 %arg1, 18
  %v2_4916 = inttoptr i32 %v1_4916 to i16*
  %v3_4916 = load i16, i16* %v2_4916, align 2
  %v2_491a3 = and i16 %v3_4916, %v6_4901
  %v2_491a = zext i16 %v2_491a3 to i32
  %v5_491c = icmp eq i16 %v2_491a3, 0
  br i1 %v5_491c, label %bb, label %dec_label_pc_4925

bb:                                               ; preds = %dec_label_pc_48d2
  %v4_48da = sext i16 %arg2 to i32
  %v5_491f = call i32 @function_49b4(i32 %arg3, i32 %v4_48da, i32 %arg1)
  br label %dec_label_pc_4925

dec_label_pc_4925:                                ; preds = %bb, %dec_label_pc_48d2
  %v2_4925 = phi i32 [ %v5_491f, %bb ], [ %v2_491a, %dec_label_pc_48d2 ]
  ret i32 %v2_4925

; uselistorder directives
  uselistorder i16 %arg2, { 1, 0 }
}

define i32 @function_4932() local_unnamed_addr {
dec_label_pc_4932:
  %eax.global-to-local = alloca i32, align 4
  %v0_4932 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4932
}

define i32 @function_49b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_49b4:
  %v0_49b4 = load i32, i32* @ebp, align 4
  %v1_49b4 = add i32 %v0_49b4, -12
  %v2_49b4 = inttoptr i32 %v1_49b4 to i32*
  %v3_49b4 = load i32, i32* %v2_49b4, align 4
  %v1_49b7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_49b7 = xor i32 %v1_49b7, %v3_49b4
  ret i32 %v2_49b7
}

define i32 @_ZNSt9exceptionC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_49cc:
  ret i32 %arg1
}

define i32 @function_4a03() local_unnamed_addr {
dec_label_pc_4a03:
  %eax.global-to-local = alloca i32, align 4
  %v0_4a04 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4a04
}

define i32 @_ZN11CDataStream4readEPci(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4a06:
  %v11_4a2a = icmp slt i32 %arg3, 0
  %v1_4a2e = icmp eq i1 %v11_4a2a, false
  br i1 %v1_4a2e, label %bb, label %dec_label_pc_4a30

bb:                                               ; preds = %dec_label_pc_4a06
  %v5_4a2e = call i32 @function_4a54(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_4a30

dec_label_pc_4a30:                                ; preds = %bb, %dec_label_pc_4a06
  %v3_4a48 = phi i32 [ %v5_4a2e, %bb ], [ 0, %dec_label_pc_4a06 ]
  ret i32 %v3_4a48
}

define i32 @function_4a54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4a54:
  %v0_4a54 = load i32, i32* @ebp, align 4
  %v1_4a54 = add i32 %v0_4a54, -28
  %v2_4a54 = inttoptr i32 %v1_4a54 to i32*
  %v3_4a54 = load i32, i32* %v2_4a54, align 4
  %v1_4a57 = add i32 %v3_4a54, 12
  %v2_4a57 = inttoptr i32 %v1_4a57 to i32*
  %v3_4a57 = load i32, i32* %v2_4a57, align 4
  store i32 %v3_4a57, i32* @edx, align 4
  %v1_4a5a = add i32 %v0_4a54, -36
  %v2_4a5a = inttoptr i32 %v1_4a5a to i32*
  %v3_4a5a = load i32, i32* %v2_4a5a, align 4
  %v2_4a5d = add i32 %v3_4a5a, %v3_4a57
  %v2_4a5f = add i32 %v0_4a54, -16
  %v3_4a5f = inttoptr i32 %v2_4a5f to i32*
  store i32 %v2_4a5d, i32* %v3_4a5f, align 4
  %v0_4a62 = load i32, i32* @ebp, align 4
  %v1_4a62 = add i32 %v0_4a62, -28
  %v2_4a62 = inttoptr i32 %v1_4a62 to i32*
  %v3_4a62 = load i32, i32* %v2_4a62, align 4
  %v2_4a6d = add i32 %v0_4a62, -16
  %v3_4a6d = inttoptr i32 %v2_4a6d to i32*
  %v4_4a6d = load i32, i32* %v3_4a6d, align 4
  %tmp11 = icmp ule i32 %v3_4a62, %v4_4a6d
  %v5_4a73 = icmp eq i1 %tmp11, false
  br i1 %v5_4a73, label %bb, label %dec_label_pc_4a7b

bb:                                               ; preds = %dec_label_pc_4a54
  %v2_4a75 = call i32 @function_4b20(i32 %v3_4a62)
  %v0_4a7b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_4a7b

dec_label_pc_4a7b:                                ; preds = %bb, %dec_label_pc_4a54
  %v0_4a7b = phi i32 [ %v0_4a7b.pre, %bb ], [ %v0_4a62, %dec_label_pc_4a54 ]
  %v1_4a7b = add i32 %v0_4a7b, -28
  %v2_4a7b = inttoptr i32 %v1_4a7b to i32*
  %v3_4a7b = load i32, i32* %v2_4a7b, align 4
  %v2_4a86 = add i32 %v0_4a7b, -16
  %v3_4a86 = inttoptr i32 %v2_4a86 to i32*
  %v4_4a86 = load i32, i32* %v3_4a86, align 4
  %v10_4a86 = icmp ult i32 %v3_4a7b, %v4_4a86
  %v5_4a8c = icmp eq i1 %v10_4a86, false
  br i1 %v5_4a8c, label %bb12, label %dec_label_pc_4a90

bb12:                                             ; preds = %dec_label_pc_4a7b
  %v2_4a8e = call i32 @function_4adb(i32 %v3_4a7b)
  %v0_4aa0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_4a90

dec_label_pc_4a90:                                ; preds = %bb12, %dec_label_pc_4a7b
  %v0_4aa0 = phi i32 [ %v0_4aa0.pre, %bb12 ], [ %v0_4a7b, %dec_label_pc_4a7b ]
  %v1_4aa0 = add i32 %v0_4aa0, -28
  %v2_4aa0 = inttoptr i32 %v1_4aa0 to i32*
  %v3_4aa0 = load i32, i32* %v2_4aa0, align 4
  store i32 %v3_4aa0, i32* @eax, align 4
  %v5_4aa6 = call i32 @function_92d8(i32 %v3_4aa0, i32 ptrtoint (i8** @global_var_4.1177 to i32), i32 ptrtoint ([34 x i8]* @global_var_3d20.1197 to i32))
  %v0_4aab = load i32, i32* @ebp, align 4
  %v1_4aba = add i32 %v0_4aab, -32
  %v2_4aba = inttoptr i32 %v1_4aba to i32*
  %v3_4aba = load i32, i32* %v2_4aba, align 4
  ret i32 %v3_4aba

; uselistorder directives
  uselistorder i32 %v0_4a7b, { 0, 2, 1 }
  uselistorder i32 %v3_4a62, { 1, 0 }
}

define i32 @function_4adb(i32 %arg1) local_unnamed_addr {
dec_label_pc_4adb:
  %v0_4adb = load i32, i32* @ebp, align 4
  %v1_4ade = add i32 %v0_4adb, -28
  %v2_4ade = inttoptr i32 %v1_4ade to i32*
  %v3_4ade = load i32, i32* %v2_4ade, align 4
  %v1_4ae1 = add i32 %v3_4ade, 12
  %v2_4ae1 = inttoptr i32 %v1_4ae1 to i32*
  %v3_4ae1 = load i32, i32* %v2_4ae1, align 4
  store i32 %v3_4ae1, i32* @edx, align 4
  %v1_4afb = add i32 %v0_4adb, -32
  %v2_4afb = inttoptr i32 %v1_4afb to i32*
  %v3_4afb = load i32, i32* %v2_4afb, align 4
  ret i32 %v3_4afb
}

define i32 @function_4b06() local_unnamed_addr {
dec_label_pc_4b06:
  %v0_4b06 = load i32, i32* @ebp, align 4
  %v1_4b06 = add i32 %v0_4b06, -28
  %v2_4b06 = inttoptr i32 %v1_4b06 to i32*
  %v3_4b06 = load i32, i32* %v2_4b06, align 4
  %v1_4b09 = add i32 %v3_4b06, 12
  %v2_4b09 = inttoptr i32 %v1_4b09 to i32*
  store i32 0, i32* %v2_4b09, align 4
  %v0_4b10 = load i32, i32* @ebp, align 4
  %v1_4b10 = add i32 %v0_4b10, -28
  %v2_4b10 = inttoptr i32 %v1_4b10 to i32*
  %v3_4b10 = load i32, i32* %v2_4b10, align 4
  store i32 %v3_4b10, i32* @eax, align 4
  %v1_4b1e = call i32 @function_4b57(i32 %v3_4b10)
  ret i32 %v1_4b1e

; uselistorder directives
  uselistorder i32 %v3_4b10, { 1, 0 }
}

define i32 @function_4b20(i32 %arg1) local_unnamed_addr {
dec_label_pc_4b20:
  %v0_4b20 = load i32, i32* @ebp, align 4
  %v1_4b23 = add i32 %v0_4b20, -28
  %v2_4b23 = inttoptr i32 %v1_4b23 to i32*
  %v3_4b23 = load i32, i32* %v2_4b23, align 4
  %v1_4b26 = add i32 %v3_4b23, 12
  %v2_4b26 = inttoptr i32 %v1_4b26 to i32*
  %v3_4b26 = load i32, i32* %v2_4b26, align 4
  store i32 %v3_4b26, i32* @edx, align 4
  %v1_4b40 = add i32 %v0_4b20, -32
  %v2_4b40 = inttoptr i32 %v1_4b40 to i32*
  %v3_4b40 = load i32, i32* %v2_4b40, align 4
  ret i32 %v3_4b40
}

define i32 @function_4b57(i32 %arg1) local_unnamed_addr {
dec_label_pc_4b57:
  %v0_4b6d = load i32, i32* @eax, align 4
  ret i32 %v0_4b6d
}

define i32 @_ZN11CDataStream5writeEPKci(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4b6e:
  %v11_4b92 = icmp slt i32 %arg3, 0
  %v1_4b96 = icmp eq i1 %v11_4b92, false
  br i1 %v1_4b96, label %bb, label %dec_label_pc_4b98

bb:                                               ; preds = %dec_label_pc_4b6e
  %v5_4b96 = call i32 @function_4bbc(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_4b98

dec_label_pc_4b98:                                ; preds = %bb, %dec_label_pc_4b6e
  %v3_4bb0 = phi i32 [ %v5_4b96, %bb ], [ 0, %dec_label_pc_4b6e ]
  ret i32 %v3_4bb0
}

define i32 @function_4bbc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4bbc:
  %v0_4bbc = load i32, i32* @ebp, align 4
  %v1_4bbc = add i32 %v0_4bbc, -36
  %v2_4bbc = inttoptr i32 %v1_4bbc to i32*
  %v3_4bbc = load i32, i32* %v2_4bbc, align 4
  %v2_4bc1 = add i32 %v0_4bbc, -32
  %v3_4bc1 = inttoptr i32 %v2_4bc1 to i32*
  %v4_4bc1 = load i32, i32* %v3_4bc1, align 4
  %v5_4bc1 = add i32 %v4_4bc1, %v3_4bbc
  store i32 %v5_4bc1, i32* @ebx, align 4
  %v1_4bc4 = add i32 %v0_4bbc, -28
  %v2_4bc4 = inttoptr i32 %v1_4bc4 to i32*
  %v1_4bc7 = add i32 %v0_4bbc, -16
  %v3_4bd9 = load i32, i32* %v2_4bc4, align 4
  store i32 %v3_4bd9, i32* @eax, align 4
  %v3_4be0 = load i32, i32* %v3_4bc1, align 4
  %v2_4be7 = inttoptr i32 %v1_4bc7 to i32*
  %v3_4be7 = load i32, i32* %v2_4be7, align 4
  %v4_4bf1 = call i32 @function_ccba(i32 %v3_4bd9, i32 %v3_4be7, i32 %v3_4be0, i32 %v5_4bc1)
  %v0_4bf6 = load i32, i32* @ebp, align 4
  %v1_4bf6 = add i32 %v0_4bf6, -28
  %v2_4bf6 = inttoptr i32 %v1_4bf6 to i32*
  %v3_4bf6 = load i32, i32* %v2_4bf6, align 4
  store i32 %v3_4bf6, i32* @eax, align 4
  %v1_4bf9 = add i32 %v0_4bf6, -12
  %v2_4bf9 = inttoptr i32 %v1_4bf9 to i32*
  %v3_4bf9 = load i32, i32* %v2_4bf9, align 4
  %v1_4bfc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4bfc = icmp eq i32 %v1_4bfc, %v3_4bf9
  br i1 %v3_4bfc, label %bb, label %dec_label_pc_4c05

bb:                                               ; preds = %dec_label_pc_4bbc
  %v1_4c03 = call i32 @function_4c0a()
  br label %dec_label_pc_4c05

dec_label_pc_4c05:                                ; preds = %bb, %dec_label_pc_4bbc
  %v2_4c03 = phi i32 [ %v1_4c03, %bb ], [ %v3_4bf6, %dec_label_pc_4bbc ]
  ret i32 %v2_4c03

; uselistorder directives
  uselistorder i32 %v0_4bbc, { 1, 0, 2, 3 }
}

define i32 @function_4c0a() local_unnamed_addr {
dec_label_pc_4c0a:
  %v0_4c0e = load i32, i32* @eax, align 4
  ret i32 %v0_4c0e
}

define i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_4c10:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4c38

bb:                                               ; preds = %dec_label_pc_4c10
  %v2_4c36 = call i32 @function_4c3d(i32 %arg1)
  br label %dec_label_pc_4c38

dec_label_pc_4c38:                                ; preds = %bb, %dec_label_pc_4c10
  %v3_4c36 = phi i32 [ %v2_4c36, %bb ], [ 0, %dec_label_pc_4c10 ]
  ret i32 %v3_4c36
}

define i32 @function_4c3d(i32 %arg1) local_unnamed_addr {
dec_label_pc_4c3d:
  %v0_4c3e = load i32, i32* @eax, align 4
  ret i32 %v0_4c3e
}

define i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %arg1) local_unnamed_addr {
dec_label_pc_4c3f:
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4c6d

bb:                                               ; preds = %dec_label_pc_4c3f
  %v4_4c45 = ptrtoint i8* %arg1 to i32
  %v3_4c6b = call i32 @function_4c72(i32 %v4_4c45)
  br label %dec_label_pc_4c6d

dec_label_pc_4c6d:                                ; preds = %bb, %dec_label_pc_4c3f
  %v4_4c6b = phi i32 [ %v3_4c6b, %bb ], [ 0, %dec_label_pc_4c3f ]
  ret i32 %v4_4c6b

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_4c72(i32 %arg1) local_unnamed_addr {
dec_label_pc_4c72:
  %v0_4c73 = load i32, i32* @eax, align 4
  ret i32 %v0_4c73
}

define i32 @_ZN11CHashWriter4InitEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_4c74:
  ret i32 %arg1
}

define i32 @function_4ca6() local_unnamed_addr {
dec_label_pc_4ca6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4ca6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_4ca6 = sub i32 %v0_4ca6, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_4ca6, i32* %ecx.global-to-local, align 4
  %v0_4ca8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4ca8
}

define i32 @_ZN11CHashWriterC1Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4caa:
  %v2_4cd3 = add i32 %arg1, 112
  %v3_4cd3 = inttoptr i32 %v2_4cd3 to i32*
  store i32 %arg2, i32* %v3_4cd3, align 4
  %v2_4cdc = add i32 %arg1, 116
  %v3_4cdc = inttoptr i32 %v2_4cdc to i32*
  store i32 %arg3, i32* %v3_4cdc, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_4ce5 = call i32 @function_991e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4cf6

bb:                                               ; preds = %dec_label_pc_4caa
  %v1_4cf4 = call i32 @function_4cfb()
  br label %dec_label_pc_4cf6

dec_label_pc_4cf6:                                ; preds = %bb, %dec_label_pc_4caa
  %v2_4cf4 = phi i32 [ %v1_4cf4, %bb ], [ 0, %dec_label_pc_4caa ]
  ret i32 %v2_4cf4

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_4cfb() local_unnamed_addr {
dec_label_pc_4cfb:
  %v0_4cfc = load i32, i32* @eax, align 4
  ret i32 %v0_4cfc
}

define i32 @_ZN11CHashWriter5writeEPKcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4cfe:
  ret i32 %arg1
}

define i32 @function_4d4d() local_unnamed_addr {
dec_label_pc_4d4d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4d4d = load i32, i32* %ecx.global-to-local, align 4
  %v1_4d4d = sub i32 %v0_4d4d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_4d4d, i32* %ecx.global-to-local, align 4
  %v0_4d4f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d4f
}

define i32 @_ZN11CHashWriter7GetHashEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4d50:
  %stack_var_-48 = alloca i32, align 4
  %v2_4d6d = ptrtoint i32* %stack_var_-48 to i32
  ret i32 %v2_4d6d
}

define i32 @function_4d96(i32 %arg1) local_unnamed_addr {
dec_label_pc_4d96:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d96 = load i32, i32* @ebp, align 4
  %v1_4d96 = add i32 %v0_4d96, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_4d96, i32* @ebp, align 4
  %v0_4d97 = load i32, i32* @ecx, align 4
  %v1_4d97 = add i32 %v0_4d97, -955767740
  %v2_4d97 = inttoptr i32 %v1_4d97 to i32*
  %v3_4d97 = load i32, i32* %v2_4d97, align 4
  store i32 %v3_4d97, i32* @ecx, align 4
  %v0_4d9e = load i32, i32* @eax, align 4
  %v1_4d9e = trunc i32 %v0_4d9e to i8
  %v2_4d9e = and i8 %v1_4d9e, ptrtoint (i8** @global_var_4.1177 to i8)
  %v8_4d9e = zext i8 %v2_4d9e to i32
  %v10_4d9e = and i32 %v0_4d9e, -256
  %v11_4d9e = or i32 %v8_4d9e, %v10_4d9e
  store i32 %v11_4d9e, i32* %eax.global-to-local, align 4
  %v1_4da0 = inttoptr i32 %v11_4d9e to i8*
  %v2_4da0 = load i8, i8* %v1_4da0, align 4
  %v5_4da0 = and i8 %v2_4da0, %v2_4d9e
  store i8 %v5_4da0, i8* %v1_4da0, align 4
  %v0_4da2 = load i32, i32* %eax.global-to-local, align 4
  %v1_4da2 = inttoptr i32 %v0_4da2 to i8*
  %v2_4da2 = load i8, i8* %v1_4da2, align 1
  %v4_4da2 = trunc i32 %v0_4da2 to i8
  %v5_4da2 = add i8 %v2_4da2, %v4_4da2
  store i8 %v5_4da2, i8* %v1_4da2, align 1
  %v0_4da4 = load i32, i32* @ebp, align 4
  %v1_4da4 = add i32 %v0_4da4, -44
  store i32 %v1_4da4, i32* %eax.global-to-local, align 4
  ret i32 %v1_4da4
}

define i32 @function_4dae() local_unnamed_addr {
dec_label_pc_4dae:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_4dae = load i32, i32* %ebx.global-to-local, align 4
  %v1_4dae = add i32 %v0_4dae, 1435223109
  %v2_4dae = inttoptr i32 %v1_4dae to i32*
  %v3_4dae = load i32, i32* %v2_4dae, align 4
  %v4_4dae = add i32 %v3_4dae, -1
  store i32 %v4_4dae, i32* %v2_4dae, align 4
  %v0_4db5 = load i32, i32* %edx.global-to-local, align 4
  %v1_4db5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4db5 = xor i32 %v1_4db5, %v0_4db5
  store i32 %v2_4db5, i32* %edx.global-to-local, align 4
  %v0_4dc4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4dc4
}

define i32 @_ZN5boost9exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4dc8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_1b70c.1190 to i32), i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_4df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_4df0:
  %v0_4df0 = load i32, i32* @ecx, align 4
  %v1_4df0 = sub i32 %v0_4df0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_4df0, i32* @ecx, align 4
  %v0_4df2 = load i32, i32* @eax, align 4
  %v2_4df3 = add i32 %v0_4df2, 139
  %v0_4df5 = load i32, i32* @ebp, align 4
  %v1_4df5 = add i32 %v0_4df5, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_4df5, i32* @ebp, align 4
  %v2_4dfc = and i32 %v2_4df3, zext (i8 ptrtoint (i8** @global_var_4.1177 to i8) to i32)
  %v10_4dfc = and i32 %v0_4df2, -256
  %v11_4dfc = or i32 %v2_4dfc, %v10_4dfc
  %v1_4e01 = call i32 @function_d6b2(i32 %v11_4dfc)
  %v0_4e06 = load i32, i32* @ebp, align 4
  %v1_4e06 = add i32 %v0_4e06, -32
  %v2_4e06 = inttoptr i32 %v1_4e06 to i32*
  %v3_4e06 = load i32, i32* %v2_4e06, align 4
  %v1_4e09 = add i32 %v3_4e06, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_4e09 = inttoptr i32 %v1_4e09 to i32*
  %v3_4e09 = load i32, i32* %v2_4e09, align 4
  %v1_4e0c = add i32 %v0_4e06, -28
  %v2_4e0c = inttoptr i32 %v1_4e0c to i32*
  %v3_4e0c = load i32, i32* %v2_4e0c, align 4
  %v2_4e0f = add i32 %v3_4e0c, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_4e0f = inttoptr i32 %v2_4e0f to i32*
  store i32 %v3_4e09, i32* %v3_4e0f, align 4
  %v0_4e12 = load i32, i32* @ebp, align 4
  %v1_4e12 = add i32 %v0_4e12, -32
  %v2_4e12 = inttoptr i32 %v1_4e12 to i32*
  %v3_4e12 = load i32, i32* %v2_4e12, align 4
  %v1_4e15 = add i32 %v3_4e12, 12
  %v2_4e15 = inttoptr i32 %v1_4e15 to i32*
  %v3_4e15 = load i32, i32* %v2_4e15, align 4
  %v1_4e18 = add i32 %v0_4e12, -28
  %v2_4e18 = inttoptr i32 %v1_4e18 to i32*
  %v3_4e18 = load i32, i32* %v2_4e18, align 4
  %v2_4e1b = add i32 %v3_4e18, 12
  %v3_4e1b = inttoptr i32 %v2_4e1b to i32*
  store i32 %v3_4e15, i32* %v3_4e1b, align 4
  %v0_4e1e = load i32, i32* @ebp, align 4
  %v1_4e1e = add i32 %v0_4e1e, -32
  %v2_4e1e = inttoptr i32 %v1_4e1e to i32*
  %v3_4e1e = load i32, i32* %v2_4e1e, align 4
  %v1_4e21 = add i32 %v3_4e1e, 16
  %v2_4e21 = inttoptr i32 %v1_4e21 to i32*
  %v3_4e21 = load i32, i32* %v2_4e21, align 4
  %v1_4e24 = add i32 %v0_4e1e, -28
  %v2_4e24 = inttoptr i32 %v1_4e24 to i32*
  %v3_4e24 = load i32, i32* %v2_4e24, align 4
  %v2_4e27 = add i32 %v3_4e24, 16
  %v3_4e27 = inttoptr i32 %v2_4e27 to i32*
  store i32 %v3_4e21, i32* %v3_4e27, align 4
  %v0_4e2a = load i32, i32* @ebp, align 4
  %v1_4e2a = add i32 %v0_4e2a, -12
  %v2_4e2a = inttoptr i32 %v1_4e2a to i32*
  %v3_4e2a = load i32, i32* %v2_4e2a, align 4
  %v1_4e2d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4e2d = xor i32 %v1_4e2d, %v3_4e2a
  %v3_4e2d = icmp eq i32 %v2_4e2d, 0
  store i32 %v2_4e2d, i32* @eax, align 4
  br i1 %v3_4e2d, label %bb, label %dec_label_pc_4e36

bb:                                               ; preds = %dec_label_pc_4df0
  %v1_4e34 = call i32 @function_4e3b()
  br label %dec_label_pc_4e36

dec_label_pc_4e36:                                ; preds = %bb, %dec_label_pc_4df0
  %v3_4e34 = phi i32 [ %v1_4e34, %bb ], [ %v2_4e2d, %dec_label_pc_4df0 ]
  ret i32 %v3_4e34

; uselistorder directives
  uselistorder i32 %v0_4df2, { 1, 0 }
}

define i32 @function_4e3b() local_unnamed_addr {
dec_label_pc_4e3b:
  %v0_4e3c = load i32, i32* @eax, align 4
  ret i32 %v0_4e3c
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4e3e:
  ret i32 0
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4e76:
  %v1_4e96 = inttoptr i32 %arg2 to i32*
  %v2_4e96 = load i32, i32* %v1_4e96, align 4
  store i32 %v2_4e96, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4ec1

bb:                                               ; preds = %dec_label_pc_4e76
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_4ea6 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v1_4ea0 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v5_4ebf = call i32 @function_4ec6(i32 %v1_4ea6, i32 %v1_4ea0)
  br label %dec_label_pc_4ec1

dec_label_pc_4ec1:                                ; preds = %bb, %dec_label_pc_4e76
  %v6_4ebf = phi i32 [ %v5_4ebf, %bb ], [ 0, %dec_label_pc_4e76 ]
  ret i32 %v6_4ebf

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_4ec6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4ec6:
  %v0_4ec7 = load i32, i32* @eax, align 4
  ret i32 %v0_4ec7
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_4ec8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_1b60c.1200 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 4
  %v1_4eee = call i32 @function_78d0(i32 %tmp99)
  %v1_4efd = call i32 @function_4f0a()
  ret i32 %tmp99
}

define i32 @function_4f0a() local_unnamed_addr {
dec_label_pc_4f0a:
  %v0_4f0a = load i32, i32* @ebp, align 4
  %v1_4f0a = add i32 %v0_4f0a, -12
  %v2_4f0a = inttoptr i32 %v1_4f0a to i32*
  %v3_4f0a = load i32, i32* %v2_4f0a, align 4
  %v1_4f0d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4f0d = xor i32 %v1_4f0d, %v3_4f0a
  %v3_4f0d = icmp eq i32 %v2_4f0d, 0
  store i32 %v2_4f0d, i32* @eax, align 4
  br i1 %v3_4f0d, label %bb, label %dec_label_pc_4f16

bb:                                               ; preds = %dec_label_pc_4f0a
  %v1_4f14 = call i32 @function_4f1b()
  br label %dec_label_pc_4f16

dec_label_pc_4f16:                                ; preds = %bb, %dec_label_pc_4f0a
  %v2_4f14 = phi i32 [ %v1_4f14, %bb ], [ %v2_4f0d, %dec_label_pc_4f0a ]
  ret i32 %v2_4f14
}

define i32 @function_4f1b() local_unnamed_addr {
dec_label_pc_4f1b:
  %v0_4f1c = load i32, i32* @eax, align 4
  ret i32 %v0_4f1c
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4f1e:
  %v1_4f3b = call i32 @function_9de6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_4f4a() local_unnamed_addr {
dec_label_pc_4f4a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4f4a = load i32, i32* %ebx.global-to-local, align 4
  %v1_4f4a = add i32 %v0_4f4a, 862319685
  %v2_4f4a = inttoptr i32 %v1_4f4a to i32*
  %v3_4f4a = load i32, i32* %v2_4f4a, align 4
  %v4_4f4a = add i32 %v3_4f4a, -1
  store i32 %v4_4f4a, i32* %v2_4f4a, align 4
  %v0_4f50 = load i32, i32* %eax.global-to-local, align 4
  %v1_4f50 = add i32 %v0_4f50, 20
  store i32 %v1_4f50, i32* %eax.global-to-local, align 4
  ret i32 %v1_4f50
}

define i32 @_ZNK5boost6system14error_categoryeqERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4f5e:
  %v15_4f7e = icmp eq i32 %arg1, %arg2
  %v1_4f81 = zext i1 %v15_4f7e to i32
  %v3_4f81 = and i32 %arg1, -256
  %v4_4f81 = or i32 %v1_4f81, %v3_4f81
  store i32 %v4_4f81, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4f90

bb:                                               ; preds = %dec_label_pc_4f5e
  %v3_4f8e = call i32 @function_4f95(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_4f90

dec_label_pc_4f90:                                ; preds = %bb, %dec_label_pc_4f5e
  %v4_4f8e = phi i32 [ %v3_4f8e, %bb ], [ %v4_4f81, %dec_label_pc_4f5e ]
  ret i32 %v4_4f8e

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_4f95(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4f95:
  %v0_4f96 = load i32, i32* @eax, align 4
  ret i32 %v0_4f96
}

define i32 @_ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4f98:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_4fc9 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_4fc9 = inttoptr i32 %v2_4fc9 to i32*
  store i32 %arg3, i32* %v3_4fc9, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4fd8

bb:                                               ; preds = %dec_label_pc_4f98
  %v4_4fd6 = call i32 @function_4fdd(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_4fd8

dec_label_pc_4fd8:                                ; preds = %bb, %dec_label_pc_4f98
  %v5_4fd6 = phi i32 [ %v4_4fd6, %bb ], [ 0, %dec_label_pc_4f98 ]
  ret i32 %v5_4fd6
}

define i32 @function_4fdd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4fdd:
  %v0_4fde = load i32, i32* @eax, align 4
  ret i32 %v0_4fde
}

define i32 @_ZN5boost6systemeqERKNS0_15error_conditionES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4fdf:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_4fff = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_4fff = inttoptr i32 %v1_4fff to i32*
  %v3_4fff = load i32, i32* %v2_4fff, align 4
  %v1_5005 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_5005 = inttoptr i32 %v1_5005 to i32*
  %v3_5005 = load i32, i32* %v2_5005, align 4
  %v12_5008 = icmp eq i32 %v3_4fff, %v3_5005
  %v1_500a = icmp eq i1 %v12_5008, false
  br i1 %v1_500a, label %dec_label_pc_5021, label %dec_label_pc_500c

dec_label_pc_500c:                                ; preds = %dec_label_pc_4fdf
  %v2_500f = load i32, i32* %arg1, align 4
  %v1_5014 = inttoptr i32 %arg2 to i32*
  %v2_5014 = load i32, i32* %v1_5014, align 4
  %v12_5016 = icmp eq i32 %v2_500f, %v2_5014
  %v1_5018 = icmp eq i1 %v12_5016, false
  br i1 %v1_5018, label %dec_label_pc_5021, label %dec_label_pc_5026

dec_label_pc_5021:                                ; preds = %dec_label_pc_500c, %dec_label_pc_4fdf
  br label %dec_label_pc_5026

dec_label_pc_5026:                                ; preds = %dec_label_pc_500c, %dec_label_pc_5021
  %storemerge = phi i32 [ 0, %dec_label_pc_5021 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_500c ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5032

bb:                                               ; preds = %dec_label_pc_5026
  %v1_5030 = call i32 @function_5037()
  br label %dec_label_pc_5032

dec_label_pc_5032:                                ; preds = %bb, %dec_label_pc_5026
  %v2_5030 = phi i32 [ %v1_5030, %bb ], [ %storemerge, %dec_label_pc_5026 ]
  ret i32 %v2_5030

; uselistorder directives
  uselistorder label %dec_label_pc_5026, { 1, 0 }
}

define i32 @function_5037() local_unnamed_addr {
dec_label_pc_5037:
  %v0_5038 = load i32, i32* @eax, align 4
  ret i32 %v0_5038
}

define i32 @_ZNK5boost6system10error_code5valueEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_503a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_503a = load i32, i32* %ebp.global-to-local, align 4
  %v2_5054 = load i32, i32* %arg1, align 4
  store i32 %v0_503a, i32* %ebp.global-to-local, align 4
  ret i32 %v2_5054
}

define i32 @_ZNK5boost6system10error_code8categoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_506a:
  %v1_5084 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_5084 = inttoptr i32 %v1_5084 to i32*
  %v3_5084 = load i32, i32* %v2_5084, align 4
  store i32 %v3_5084, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5093

bb:                                               ; preds = %dec_label_pc_506a
  %v2_5091 = call i32 @function_5098(i32 %arg1)
  br label %dec_label_pc_5093

dec_label_pc_5093:                                ; preds = %bb, %dec_label_pc_506a
  %v3_5091 = phi i32 [ %v2_5091, %bb ], [ %v3_5084, %dec_label_pc_506a ]
  ret i32 %v3_5091
}

define i32 @function_5098(i32 %arg1) local_unnamed_addr {
dec_label_pc_5098:
  %v0_5099 = load i32, i32* @eax, align 4
  ret i32 %v0_5099
}

define i32 @_ZNK5boost6system10error_code7messageEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_509a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_509d = load i32, i32* %ebx.global-to-local, align 4
  %v1_50bb = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_50bb = inttoptr i32 %v1_50bb to i32*
  %v3_50bb = load i32, i32* %v2_50bb, align 4
  %v1_50be = inttoptr i32 %v3_50bb to i32*
  %v2_50be = load i32, i32* %v1_50be, align 4
  %v1_50c0 = add i32 %v2_50be, 12
  %v1_50c3 = inttoptr i32 %v1_50c0 to i32*
  %v2_50c3 = load i32, i32* %v1_50c3, align 4
  store i32 %v2_50c3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_50cb = call i32 @function_a0d4(i32 %arg2)
  store i32 %v0_509d, i32* %ebx.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5104:
  store i32 %arg1, i32* @eax, align 4
  %v3_513b = call i32 @function_a09c(i32 %arg1, i32 %arg3, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5158:
  %stack_var_-24 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v2_5185 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_5185, i32* @eax, align 4
  %v4_51ab = call i32 @function_a137(i32 %v2_5185, i32 %arg3, i32 %tmp108, i32 %arg2)
  store i32 %v4_51ab, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_51bc

bb:                                               ; preds = %dec_label_pc_5158
  %v1_51ba = call i32 @function_51c1()
  br label %dec_label_pc_51bc

dec_label_pc_51bc:                                ; preds = %bb, %dec_label_pc_5158
  %v2_51ba = phi i32 [ %v1_51ba, %bb ], [ %v4_51ab, %dec_label_pc_5158 ]
  ret i32 %v2_51ba
}

define i32 @function_51c1() local_unnamed_addr {
dec_label_pc_51c1:
  %v0_51c2 = load i32, i32* @eax, align 4
  ret i32 %v0_51c2
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_51c4:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_51ed = call i32 @function_a22e(i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_51fc = call i32 @function_a122(i32 %arg1, i32 %v1_51ed)
  %v4_5201 = trunc i32 %v2_51fc to i8
  %v5_5201 = icmp eq i8 %v4_5201, 0
  br i1 %v5_5201, label %dec_label_pc_521c, label %dec_label_pc_5205

dec_label_pc_5205:                                ; preds = %dec_label_pc_51c4
  store i32 %arg2, i32* @eax, align 4
  %v1_520b = call i32 @function_a1fe(i32 %arg2)
  %v15_5210 = icmp eq i32 %v1_520b, %arg3
  %v1_5213 = icmp eq i1 %v15_5210, false
  br i1 %v1_5213, label %dec_label_pc_521c, label %dec_label_pc_5221

dec_label_pc_521c:                                ; preds = %dec_label_pc_5205, %dec_label_pc_51c4
  br label %dec_label_pc_5221

dec_label_pc_5221:                                ; preds = %dec_label_pc_5205, %dec_label_pc_521c
  %storemerge = phi i32 [ 0, %dec_label_pc_521c ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_5205 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_522d

bb:                                               ; preds = %dec_label_pc_5221
  %v1_522b = call i32 @function_5232()
  br label %dec_label_pc_522d

dec_label_pc_522d:                                ; preds = %bb, %dec_label_pc_5221
  %v2_522b = phi i32 [ %v1_522b, %bb ], [ %storemerge, %dec_label_pc_5221 ]
  ret i32 %v2_522b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_5221, { 1, 0 }
}

define i32 @function_5232() local_unnamed_addr {
dec_label_pc_5232:
  %v0_5233 = load i32, i32* @eax, align 4
  ret i32 %v0_5233
}

define i32 @_ZN5boost11filesystem311path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_5234:
  store i32 0, i32* @eax, align 4
  %v10_525d = icmp eq i32 %arg1, 0
  %v1_5261 = icmp eq i1 %v10_525d, false
  br i1 %v1_5261, label %bb, label %dec_label_pc_5263

bb:                                               ; preds = %dec_label_pc_5234
  %v6_5261 = call i32 @function_5287(i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_5263

dec_label_pc_5263:                                ; preds = %bb, %dec_label_pc_5234
  %v3_527b = phi i32 [ %v6_5261, %bb ], [ 0, %dec_label_pc_5234 ]
  ret i32 %v3_527b
}

define i32 @function_5287(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_5287:
  %v0_5287 = load i32, i32* @ebp, align 4
  %v1_5287 = add i32 %v0_5287, -32
  %v2_5287 = inttoptr i32 %v1_5287 to i32*
  %v3_5287 = load i32, i32* %v2_5287, align 4
  store i1 false, i1* @cf, align 1
  %v10_5287 = icmp eq i32 %v3_5287, 0
  %v1_528b = icmp eq i1 %v10_5287, false
  br i1 %v1_528b, label %bb, label %dec_label_pc_5287.dec_label_pc_528d_crit_edge

dec_label_pc_5287.dec_label_pc_528d_crit_edge:    ; preds = %dec_label_pc_5287
  %v3_52a5.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_528d

bb:                                               ; preds = %dec_label_pc_5287
  %v2_528b = call i32 @function_52b1()
  br label %dec_label_pc_528d

dec_label_pc_528d:                                ; preds = %dec_label_pc_5287.dec_label_pc_528d_crit_edge, %bb
  %v3_52a5 = phi i32 [ %v3_52a5.pre, %dec_label_pc_5287.dec_label_pc_528d_crit_edge ], [ %v2_528b, %bb ]
  ret i32 %v3_52a5

; uselistorder directives
  uselistorder label %dec_label_pc_528d, { 1, 0 }
}

define i32 @function_52b1() local_unnamed_addr {
dec_label_pc_52b1:
  %v0_52b1 = load i32, i32* @ebp, align 4
  %v1_52b1 = add i32 %v0_52b1, -32
  %v2_52b1 = inttoptr i32 %v1_52b1 to i32*
  %v3_52b1 = load i32, i32* %v2_52b1, align 4
  %v1_52b8 = add i32 %v0_52b1, -28
  %v2_52b8 = inttoptr i32 %v1_52b8 to i32*
  %v3_52b8 = load i32, i32* %v2_52b8, align 4
  %v1_52bf = add i32 %v0_52b1, -36
  %v2_52bf = inttoptr i32 %v1_52bf to i32*
  %v3_52bf = load i32, i32* %v2_52bf, align 4
  store i32 %v3_52bf, i32* @eax, align 4
  %v3_52c5 = call i32 @function_df90(i32 %v3_52bf, i32 %v3_52b8, i32 %v3_52b1)
  %v0_52ca = load i32, i32* @ebp, align 4
  %v1_52ca = add i32 %v0_52ca, -12
  %v2_52ca = inttoptr i32 %v1_52ca to i32*
  %v3_52ca = load i32, i32* %v2_52ca, align 4
  %v1_52cd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_52cd = xor i32 %v1_52cd, %v3_52ca
  %v3_52cd = icmp eq i32 %v2_52cd, 0
  store i32 %v2_52cd, i32* @eax, align 4
  br i1 %v3_52cd, label %bb, label %dec_label_pc_52d6

bb:                                               ; preds = %dec_label_pc_52b1
  %v1_52d4 = call i32 @function_52db()
  br label %dec_label_pc_52d6

dec_label_pc_52d6:                                ; preds = %bb, %dec_label_pc_52b1
  %v2_52d4 = phi i32 [ %v1_52d4, %bb ], [ %v2_52cd, %dec_label_pc_52b1 ]
  ret i32 %v2_52d4
}

define i32 @function_52db() local_unnamed_addr {
dec_label_pc_52db:
  %v0_52dc = load i32, i32* @eax, align 4
  ret i32 %v0_52dc
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_52de:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_1b5dc_type* @global_var_1b5dc.1205 to i32), i32* %arg1, align 4
  %v1_5303 = add i32 %tmp99, 16
  ret i32 %v1_5303
}

define i32 @function_5319() local_unnamed_addr {
dec_label_pc_5319:
  %v2_5323 = call i32 @function_535a(i32 ptrtoint (i32* @0 to i32))
  %v0_5325 = load i32, i32* @ebp, align 4
  %v1_5325 = add i32 %v0_5325, -28
  %v2_5325 = inttoptr i32 %v1_5325 to i32*
  %v3_5325 = load i32, i32* %v2_5325, align 4
  %v1_5330 = call i32 @function_535a(i32 %v3_5325)
  ret i32 %v1_5330

; uselistorder directives
  uselistorder i32 (i32)* @function_535a, { 1, 0 }
}

define i32 @function_535a(i32 %arg1) local_unnamed_addr {
dec_label_pc_535a:
  %v0_535a = load i32, i32* @ebp, align 4
  %v1_535a = add i32 %v0_535a, -12
  %v2_535a = inttoptr i32 %v1_535a to i32*
  %v3_535a = load i32, i32* %v2_535a, align 4
  %v1_535d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_535d = xor i32 %v1_535d, %v3_535a
  %v3_535d = icmp eq i32 %v2_535d, 0
  store i32 %v2_535d, i32* @eax, align 4
  br i1 %v3_535d, label %bb, label %dec_label_pc_5366

bb:                                               ; preds = %dec_label_pc_535a
  %v1_5364 = call i32 @function_536b()
  br label %dec_label_pc_5366

dec_label_pc_5366:                                ; preds = %bb, %dec_label_pc_535a
  %v2_5364 = phi i32 [ %v1_5364, %bb ], [ %v2_535d, %dec_label_pc_535a ]
  ret i32 %v2_5364
}

define i32 @function_536b() local_unnamed_addr {
dec_label_pc_536b:
  %v0_5371 = load i32, i32* @eax, align 4
  ret i32 %v0_5371
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32 %arg1) {
dec_label_pc_5372:
  %v1_538f = call i32 @__stack_chk_fail.252(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_539e() local_unnamed_addr {
dec_label_pc_539e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_539e = load i32, i32* %ebx.global-to-local, align 4
  %v1_539e = add i32 %v0_539e, 862319685
  %v2_539e = inttoptr i32 %v1_539e to i32*
  %v3_539e = load i32, i32* %v2_539e, align 4
  %v4_539e = add i32 %v3_539e, -1
  store i32 %v4_539e, i32* %v2_539e, align 4
  %v0_53a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_53a4 = add i32 %v0_53a4, 20
  store i32 %v1_53a4, i32* %eax.global-to-local, align 4
  ret i32 %v1_53a4
}

define i32 @_ZNK5boost6system12system_error4whatEv(i8 %arg1) {
dec_label_pc_53b2:
  %v4_53b9 = sext i8 %arg1 to i32
  %v5_53d8 = icmp eq i8 %arg1, -16
  br i1 %v5_53d8, label %bb, label %dec_label_pc_53e0

bb:                                               ; preds = %dec_label_pc_53b2
  %v3_53da = call i32 @function_5460(i32 0)
  br label %dec_label_pc_53e0

dec_label_pc_53e0:                                ; preds = %bb, %dec_label_pc_53b2
  ret i32 %v4_53b9
}

define i32 @function_53ec() local_unnamed_addr {
dec_label_pc_53ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_53ef = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_53ef
}

define i32 @function_5460(i32 %arg1) local_unnamed_addr {
dec_label_pc_5460:
  %v0_5460 = load i32, i32* @ebp, align 4
  %v1_5460 = add i32 %v0_5460, -28
  %v2_5460 = inttoptr i32 %v1_5460 to i32*
  %v3_5460 = load i32, i32* %v2_5460, align 4
  %v1_5463 = add i32 %v3_5460, 16
  ret i32 %v1_5463
}

define i32 @function_546d() local_unnamed_addr {
dec_label_pc_546d:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_546d = load i32, i32* %ecx.global-to-local, align 4
  %v1_546d = add i32 %v0_546d, -1948743229
  %v2_546d = inttoptr i32 %v1_546d to i32*
  %v3_546d = load i32, i32* %v2_546d, align 4
  %v4_546d = sub i32 %v3_546d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_546d, i32* %v2_546d, align 4
  %v0_5475 = load i32, i32* %edx.global-to-local, align 4
  %v1_5475 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_5475 = xor i32 %v1_5475, %v0_5475
  %v3_5475 = icmp eq i32 %v2_5475, 0
  store i32 %v2_5475, i32* %edx.global-to-local, align 4
  br i1 %v3_5475, label %bb, label %dec_label_pc_547e

bb:                                               ; preds = %dec_label_pc_546d
  %v1_547c = call i32 @function_54c7()
  store i32 %v1_547c, i32* @eax, align 4
  br label %dec_label_pc_547e

dec_label_pc_547e:                                ; preds = %bb, %dec_label_pc_546d
  %v0_547e = call i32 @function_54c2()
  ret i32 %v0_547e
}

define i32 @function_5481() local_unnamed_addr {
dec_label_pc_5481:
  %eax.global-to-local = alloca i32, align 4
  %v0_5481 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5481
}

define i32 @function_548d() local_unnamed_addr {
dec_label_pc_548d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_548d = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_548d
}

define i32 @function_54a5() local_unnamed_addr {
dec_label_pc_54a5:
  %eax.global-to-local = alloca i32, align 4
  %v0_54a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_54a5
}

define i32 @function_54ab() local_unnamed_addr {
dec_label_pc_54ab:
  %eax.global-to-local = alloca i32, align 4
  %v0_54ab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_54ab
}

define i32 @function_54c2() local_unnamed_addr {
dec_label_pc_54c2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_54c7() local_unnamed_addr {
dec_label_pc_54c7:
  %v0_54cb = load i32, i32* @eax, align 4
  ret i32 %v0_54cb
}

define i32 @_ZN5boost11filesystem34pathD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_54cc:
  ret i32 %arg1
}

define i32 @function_54fe() local_unnamed_addr {
dec_label_pc_54fe:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_54fe = load i32, i32* %ecx.global-to-local, align 4
  %v1_54fe = sub i32 %v0_54fe, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_54fe, i32* %ecx.global-to-local, align 4
  %v0_5500 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5500
}

define i32 @_ZN5boost11filesystem34pathC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5502:
  ret i32 %arg1
}

define i32 @function_5541() local_unnamed_addr {
dec_label_pc_5541:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5541 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5541 = sub i32 %v0_5541, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_5541, i32* %ecx.global-to-local, align 4
  %v0_5543 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5543
}

define i32 @_ZN5boost11filesystem34path7codecvtEv() local_unnamed_addr {
dec_label_pc_5544:
  ret i32 0
}

define i32 @function_556c() local_unnamed_addr {
dec_label_pc_556c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_556c = load i32, i32* %ecx.global-to-local, align 4
  %v1_556c = sub i32 %v0_556c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_556c, i32* %ecx.global-to-local, align 4
  %v0_556e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_556e
}

define i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_556f:
  %stack_var_-20 = alloca i32, align 4
  %v2_559a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_559a, i32* @eax, align 4
  %v2_55a0 = call i32 @function_aa71(i32 %v2_559a, i32 %arg2)
  ret i32 %v2_559a
}

define i32 @function_55b6() local_unnamed_addr {
dec_label_pc_55b6:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_55b6 = load i32, i32* @ecx, align 4
  %v1_55b6 = add i32 %v0_55b6, -1962662844
  %v2_55b6 = inttoptr i32 %v1_55b6 to i32*
  %v3_55b6 = load i32, i32* %v2_55b6, align 4
  %v4_55b6 = sub i32 %v3_55b6, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_55b6, i32* %v2_55b6, align 4
  %v0_55bc = load i32, i32* %ebp.global-to-local, align 4
  %v1_55bc = add i32 %v0_55bc, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_55bc, i32* @ebp, align 4
  %v0_55bf = load i32, i32* %eax.global-to-local, align 4
  %v2_55bf = add i32 %v0_55bf, 36
  %v16_55bf = and i32 %v2_55bf, 255
  %v18_55bf = and i32 %v0_55bf, -256
  %v19_55bf = or i32 %v16_55bf, %v18_55bf
  store i32 %v19_55bf, i32* @eax, align 4
  %v2_55c1 = call i32 @function_aa71(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_55c6 = load i32, i32* @ebp, align 4
  %v1_55c6 = add i32 %v0_55c6, -16
  store i32 %v1_55c6, i32* @eax, align 4
  %v1_55cc = call i32 @function_aa3b(i32 %v1_55c6)
  store i32 %v1_55cc, i32* %eax.global-to-local, align 4
  %v0_55d1 = load i32, i32* @ebp, align 4
  %v1_55d1 = add i32 %v0_55d1, -28
  %v2_55d1 = inttoptr i32 %v1_55d1 to i32*
  %v3_55d1 = load i32, i32* %v2_55d1, align 4
  store i32 %v3_55d1, i32* @eax, align 4
  %v1_55d4 = add i32 %v0_55d1, -12
  %v2_55d4 = inttoptr i32 %v1_55d4 to i32*
  %v3_55d4 = load i32, i32* %v2_55d4, align 4
  %v1_55d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_55d7 = icmp eq i32 %v1_55d7, %v3_55d4
  br i1 %v3_55d7, label %bb, label %dec_label_pc_55e0

bb:                                               ; preds = %dec_label_pc_55b6
  %v1_55de = call i32 @function_55fe()
  store i32 %v1_55de, i32* @eax, align 4
  br label %dec_label_pc_55e0

dec_label_pc_55e0:                                ; preds = %bb, %dec_label_pc_55b6
  %v0_55e0 = call i32 @function_55f9()
  store i32 %v0_55e0, i32* %eax.global-to-local, align 4
  ret i32 %v0_55e0

; uselistorder directives
  uselistorder i32 %v0_55bf, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_aa71, { 1, 0 }
}

define i32 @function_55e3() local_unnamed_addr {
dec_label_pc_55e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_55e3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_55e3
}

define i32 @function_55f9() local_unnamed_addr {
dec_label_pc_55f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_55fe() local_unnamed_addr {
dec_label_pc_55fe:
  %v0_5603 = load i32, i32* @eax, align 4
  ret i32 %v0_5603
}

define i32 @_ZN7CBigNum6setvchERKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5606:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-17 = alloca i32, align 4
  %v2_5625 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_5625, i32* @eax, align 4
  %v1_562b = call i32 @function_d9ce(i32 %v2_5625)
  store i8 0, i8* %stack_var_-18, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_563a = call i32 @function_ceb0(i32 %arg2)
  %v1_563f = add i32 %v1_563a, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_563f, i32* @edx, align 4
  %v2_5649 = ptrtoint i8* %stack_var_-18 to i32
  %v2_5654 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_5654, i32* @eax, align 4
  %v5_565a = call i32 @function_da3a(i32 %v2_5654, i32 %v1_563f, i32 %v2_5649, i32 %v2_5625)
  store i32 %v2_5625, i32* @eax, align 4
  %v1_5665 = call i32 @function_da04(i32 %v2_5625)
  store i32 %arg2, i32* @eax, align 4
  %v1_5670 = call i32 @function_ceb0(i32 %arg2)
  %v4_5675 = trunc i32 %v1_5670 to i8
  store i32 %v2_5654, i32* @eax, align 4
  %v3_5686 = call i32 @function_e416(i32 %v2_5654, i32 0)
  %sext = mul i32 %v1_5670, 16777216
  %v4_568b = sdiv i32 %sext, 16777216
  %v2_568e = lshr i32 %v4_568b, ptrtoint (i8** @global_var_18.1179 to i32)
  %v5_568e = trunc i32 %v2_568e to i8
  %v3_5691 = inttoptr i32 %v3_5686 to i8*
  store i8 %v5_568e, i8* %v3_5691, align 1
  store i32 %v2_5654, i32* @eax, align 4
  %v3_56a1 = call i32 @function_e416(i32 %v2_5654, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v2_56a9 = udiv i32 %v4_568b, 65536
  %v5_56a9 = trunc i32 %v2_56a9 to i8
  %v3_56ac = inttoptr i32 %v3_56a1 to i8*
  store i8 %v5_56a9, i8* %v3_56ac, align 1
  store i32 %v2_5654, i32* @eax, align 4
  %v3_56bc = call i32 @function_e416(i32 %v2_5654, i32 2)
  %v2_56c4 = lshr i32 %v4_568b, ptrtoint (i32* @global_var_8.1178 to i32)
  %v5_56c4 = trunc i32 %v2_56c4 to i8
  %v3_56c7 = inttoptr i32 %v3_56bc to i8*
  store i8 %v5_56c4, i8* %v3_56c7, align 1
  store i32 %v2_5654, i32* @eax, align 4
  %v3_56d7 = call i32 @function_e416(i32 %v2_5654, i32 3)
  %v3_56df = inttoptr i32 %v3_56d7 to i8*
  store i8 %v4_5675, i8* %v3_56df, align 1
  store i8* bitcast (i8** @global_var_4.1177 to i8*), i8** %stack_var_-36, align 4
  %v2_56e8 = ptrtoint i32* %stack_var_-40 to i32
  %v3_56f5 = call i32 @function_e44e(i32 %v2_56e8, i32 %v2_5654)
  %v2_56fd = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_56fd, i32* @eax, align 4
  %v3_5711 = ptrtoint i8** %stack_var_-36 to i32
  %v4_5711 = call i32 @function_e496(i32 %v2_56fd, i32 %v2_56e8, i32 %v3_5711)
  %v2_5719 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_5719, i32* @eax, align 4
  %v2_5726 = call i32 @function_d420(i32 %v2_5719, i32 %arg2)
  %v2_572e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_572e, i32* @eax, align 4
  %v2_573b = call i32 @function_d3d0(i32 %v2_572e, i32 %arg2)
  %v2_5743 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_5743, i32* @eax, align 4
  %v3_5746 = load i32, i32* %stack_var_-32, align 4
  %v3_574d = load i32, i32* %stack_var_-44, align 4
  %v3_5754 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_5754, i32* @edx, align 4
  %v4_575e = call i32 @function_e4f2(i32 %v2_5743, i32 %v3_5754, i32 %v3_574d, i32 %v3_5746)
  store i32 %arg1, i32* @esi, align 4
  store i32 %v2_5654, i32* @eax, align 4
  %v1_576f = call i32 @function_ceb0(i32 %v2_5654)
  store i32 %v2_5654, i32* @eax, align 4
  %v2_5784 = call i32 @function_e416(i32 %v2_5654, i32 0)
  ret i32 %v2_5784

; uselistorder directives
  uselistorder i32 %v4_568b, { 2, 0, 1 }
  uselistorder i32 %v2_5625, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32)* @function_e416, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_ceb0, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_5798() local_unnamed_addr {
dec_label_pc_5798:
  %eax.global-to-local = alloca i32, align 4
  %v0_5798 = load i32, i32* @ebp, align 4
  %v1_5798 = add i32 %v0_5798, 76138565
  %v2_5798 = inttoptr i32 %v1_5798 to i32*
  %v3_5798 = load i32, i32* %v2_5798, align 4
  %v4_5798 = add i32 %v3_5798, -1
  store i32 %v4_5798, i32* %v2_5798, align 4
  %v0_579e = load i32, i32* %eax.global-to-local, align 4
  %v1_57a0 = and i32 %v0_579e, -256
  %v2_57a0 = or i32 %v1_57a0, 129
  store i32 %v2_57a0, i32* %eax.global-to-local, align 4
  %v1_57a2 = inttoptr i32 %v2_57a0 to i8*
  %v2_57a2 = load i8, i8* %v1_57a2, align 1
  %v5_57a2 = add i8 %v2_57a2, -127
  store i8 %v5_57a2, i8* %v1_57a2, align 1
  %v0_57a4 = load i32, i32* @ebp, align 4
  %v1_57a4 = add i32 %v0_57a4, -12
  %v2_57a4 = inttoptr i32 %v1_57a4 to i32*
  %v3_57a4 = load i32, i32* %v2_57a4, align 4
  store i32 %v3_57a4, i32* %eax.global-to-local, align 4
  %v1_57a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_57a7 = xor i32 %v1_57a7, %v3_57a4
  %v3_57a7 = icmp eq i32 %v2_57a7, 0
  store i32 %v2_57a7, i32* @eax, align 4
  br i1 %v3_57a7, label %bb, label %dec_label_pc_57b0

bb:                                               ; preds = %dec_label_pc_5798
  %v1_57ae = call i32 @function_57e5()
  store i32 %v1_57ae, i32* @eax, align 4
  br label %dec_label_pc_57b0

dec_label_pc_57b0:                                ; preds = %bb, %dec_label_pc_5798
  %v0_57b0 = call i32 @function_57e0()
  store i32 %v0_57b0, i32* %eax.global-to-local, align 4
  ret i32 %v0_57b0
}

define i32 @function_57b3() local_unnamed_addr {
dec_label_pc_57b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_57b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_57b3
}

define i32 @function_57ca() local_unnamed_addr {
dec_label_pc_57ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_57ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_57ca
}

define i32 @function_57e0() local_unnamed_addr {
dec_label_pc_57e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_57e5() local_unnamed_addr {
dec_label_pc_57e5:
  %v0_57eb = load i32, i32* @eax, align 4
  ret i32 %v0_57eb
}

define i32 @_ZNK7CBigNum6getvchEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_57ec:
  ret i32 %arg2
}

define i32 @function_581d() local_unnamed_addr {
dec_label_pc_581d:
  %eax.global-to-local = alloca i32, align 4
  %v0_581d = load i32, i32* %eax.global-to-local, align 4
  %v1_581d = load i32, i32* @ebp, align 4
  %v2_581d = add i32 %v1_581d, -20
  %v3_581d = inttoptr i32 %v2_581d to i32*
  store i32 %v0_581d, i32* %v3_581d, align 4
  %v0_5820 = load i32, i32* @ebp, align 4
  %v1_5820 = add i32 %v0_5820, -20
  %v2_5820 = inttoptr i32 %v1_5820 to i32*
  %v3_5820 = load i32, i32* %v2_5820, align 4
  %tmp101 = icmp ult i32 %v3_5820, 5
  br i1 %tmp101, label %dec_label_pc_5826, label %dec_label_pc_5836

dec_label_pc_5826:                                ; preds = %dec_label_pc_581d
  %v1_5826 = add i32 %v0_5820, -76
  %v2_5826 = inttoptr i32 %v1_5826 to i32*
  %v3_5826 = load i32, i32* %v2_5826, align 4
  store i32 %v3_5826, i32* %eax.global-to-local, align 4
  %v1_5831 = call i32 @function_598b(i32 %v3_5826)
  store i32 %v1_5831, i32* %eax.global-to-local, align 4
  ret i32 %v1_5831

dec_label_pc_5836:                                ; preds = %dec_label_pc_581d
  %v1_5841 = add i32 %v0_5820, -14
  %v2_5841 = inttoptr i32 %v1_5841 to i8*
  store i8 0, i8* %v2_5841, align 1
  %v0_5845 = load i32, i32* @ebp, align 4
  %v1_5845 = add i32 %v0_5845, -13
  %v1_584c = add i32 %v0_5845, -14
  store i32 %v1_584c, i32* %eax.global-to-local, align 4
  %v1_5853 = add i32 %v0_5845, -20
  %v2_5853 = inttoptr i32 %v1_5853 to i32*
  %v3_5853 = load i32, i32* %v2_5853, align 4
  %v1_585a = add i32 %v0_5845, -60
  store i32 %v1_585a, i32* @eax, align 4
  %v4_5860 = call i32 @function_dc20(i32 %v1_585a, i32 %v3_5853, i32 %v1_584c, i32 %v1_5845)
  %v0_5865 = load i32, i32* @ebp, align 4
  %v1_5878 = add i32 %v0_5865, -60
  store i32 %v1_5878, i32* %eax.global-to-local, align 4
  ret i32 %v1_5878

; uselistorder directives
  uselistorder i32 %v0_5845, { 1, 0, 2, 3 }
  uselistorder i32 %v0_5820, { 1, 0, 2 }
  uselistorder i32 5, { 1, 0 }
}

define i32 @function_5891() local_unnamed_addr {
dec_label_pc_5891:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_5891 = load i32, i32* %edi.global-to-local, align 4
  %v1_5891 = add i32 %v0_5891, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_5891, i32* %edi.global-to-local, align 4
  %v0_5893 = load i32, i32* %ebp.global-to-local, align 4
  %v1_5893 = add i32 %v0_5893, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_5893, i32* @ebp, align 4
  %v1_5894 = load i32, i32* %eax.global-to-local, align 4
  %v4_5894 = mul i32 %v1_5894, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 1)
  %v5_5894 = inttoptr i32 %v4_5894 to float*
  %v6_5894 = load float, float* %v5_5894, align 4
  %v7_5894 = fpext float %v6_5894 to x86_fp80
  %v8_5894 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v9_5894 = fadd x86_fp80 %v7_5894, %v8_5894
  store x86_fp80 %v9_5894, x86_fp80* %st0.global-to-local, align 4
  %tmp104 = trunc i32 %v1_5894 to i8
  %v5_5897 = mul i8 %tmp104, 2
  %v21_5897 = inttoptr i32 %v1_5894 to i8*
  store i8 %v5_5897, i8* %v21_5897, align 1
  %v0_5899 = load i32, i32* @ebp, align 4
  %v1_589c = add i32 %v0_5899, -60
  store i32 %v1_589c, i32* %eax.global-to-local, align 4
  %v1_595b = call i32 @function_598b(i32 %v1_589c)
  store i32 %v1_595b, i32* %eax.global-to-local, align 4
  ret i32 %v1_595b

; uselistorder directives
  uselistorder x86_fp80* %st0.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_598b, { 1, 0 }
}

define i32 @function_595e() local_unnamed_addr {
dec_label_pc_595e:
  %eax.global-to-local = alloca i32, align 4
  %v0_595e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_595e
}

define i32 @function_5975() local_unnamed_addr {
dec_label_pc_5975:
  %eax.global-to-local = alloca i32, align 4
  %v0_5975 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5975
}

define i32 @function_598b(i32 %arg1) local_unnamed_addr {
dec_label_pc_598b:
  %v0_598b = load i32, i32* @ebp, align 4
  %v1_598b = add i32 %v0_598b, -76
  %v2_598b = inttoptr i32 %v1_598b to i32*
  %v3_598b = load i32, i32* %v2_598b, align 4
  store i32 %v3_598b, i32* @eax, align 4
  %v1_598e = add i32 %v0_598b, -12
  %v2_598e = inttoptr i32 %v1_598e to i32*
  %v3_598e = load i32, i32* %v2_598e, align 4
  %v1_5991 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_5991 = icmp eq i32 %v1_5991, %v3_598e
  br i1 %v3_5991, label %bb, label %dec_label_pc_599a

bb:                                               ; preds = %dec_label_pc_598b
  %v1_5998 = call i32 @function_599f()
  br label %dec_label_pc_599a

dec_label_pc_599a:                                ; preds = %bb, %dec_label_pc_598b
  %v2_5998 = phi i32 [ %v1_5998, %bb ], [ %v3_598b, %dec_label_pc_598b ]
  ret i32 %v2_5998
}

define i32 @function_599f() local_unnamed_addr {
dec_label_pc_599f:
  %v0_59a3 = load i32, i32* @eax, align 4
  ret i32 %v0_59a3
}

define i32 @_ZNK7CBigNum16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_59a6:
  %stack_var_-28 = alloca i32, align 4
  %v2_59ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_59ca, i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  %v2_59d7 = call i32 @function_b192(i32 %v2_59ca, i32 %arg1)
  store i32 %v2_59ca, i32* @eax, align 4
  %v3_59f3 = call i32 @function_d4d3(i32 %v2_59ca, i32 %arg2, i32 %arg3)
  store i32 %v2_59ca, i32* @eax, align 4
  %v1_5a00 = call i32 @function_dcf4(i32 %v2_59ca)
  store i32 %v3_59f3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5a13

bb:                                               ; preds = %dec_label_pc_59a6
  %v1_5a11 = call i32 @function_5a31()
  store i32 %v1_5a11, i32* @eax, align 4
  br label %dec_label_pc_5a13

dec_label_pc_5a13:                                ; preds = %bb, %dec_label_pc_59a6
  %v0_5a13 = call i32 @function_5a2c()
  ret i32 %v0_5a13

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_5a16() local_unnamed_addr {
dec_label_pc_5a16:
  %eax.global-to-local = alloca i32, align 4
  %v0_5a16 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5a16
}

define i32 @function_5a2c() local_unnamed_addr {
dec_label_pc_5a2c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5a31() local_unnamed_addr {
dec_label_pc_5a31:
  %v0_5a35 = load i32, i32* @eax, align 4
  ret i32 %v0_5a35
}

define i32 @_ZN7CScriptC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5a36:
  store i32 %arg1, i32* @eax, align 4
  %v1_5a53 = call i32 @function_dd4e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5a64

bb:                                               ; preds = %dec_label_pc_5a36
  %v1_5a62 = call i32 @function_5a69()
  br label %dec_label_pc_5a64

dec_label_pc_5a64:                                ; preds = %bb, %dec_label_pc_5a36
  %v2_5a62 = phi i32 [ %v1_5a62, %bb ], [ 0, %dec_label_pc_5a36 ]
  ret i32 %v2_5a62

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_5a69() local_unnamed_addr {
dec_label_pc_5a69:
  %v0_5a6a = load i32, i32* @eax, align 4
  ret i32 %v0_5a6a
}

define i32 @_ZN7CScriptC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5a6c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v0_5a6f = load i32, i32* %ebx.global-to-local, align 4
  store i1 false, i1* @cf, align 1
  %v2_5a8a = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_5a8a, i32* @eax, align 4
  %v1_5a90 = call i32 @function_de34(i32 %v2_5a8a)
  %v2_5a98 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_5a98, i32* @eax, align 4
  %v2_5aa2 = call i32 @function_d886(i32 %v2_5a98, i32 %arg2)
  %v2_5aad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_5aad, i32* @eax, align 4
  %v2_5ab7 = call i32 @function_d836(i32 %v2_5aad, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v3_5ac9 = load i32, i32* %stack_var_-24, align 4
  %v3_5ad0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_5ad0, i32* @edx, align 4
  %v4_5ada = call i32 @function_ec86(i32 %arg1, i32 %v3_5ad0, i32 %v3_5ac9, i32 %v2_5a8a)
  store i32 %v2_5a8a, i32* @eax, align 4
  %v1_5ae5 = call i32 @function_de6a(i32 %v2_5a8a)
  store i32 %v0_5a6f, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_5a8a, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN7CScriptD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5b1a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5b48

bb:                                               ; preds = %dec_label_pc_5b1a
  %v2_5b46 = call i32 @function_5b4d(i32 %arg1)
  br label %dec_label_pc_5b48

dec_label_pc_5b48:                                ; preds = %bb, %dec_label_pc_5b1a
  %v3_5b46 = phi i32 [ %v2_5b46, %bb ], [ 0, %dec_label_pc_5b1a ]
  ret i32 %v3_5b46
}

define i32 @function_5b4d(i32 %arg1) local_unnamed_addr {
dec_label_pc_5b4d:
  %v0_5b4e = load i32, i32* @eax, align 4
  ret i32 %v0_5b4e
}

define i32 @_ZN17CScriptCompressorC1ER7CScript(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5b50:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5b81

bb:                                               ; preds = %dec_label_pc_5b50
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_5b7f = call i32 @function_5b86(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_5b81

dec_label_pc_5b81:                                ; preds = %bb, %dec_label_pc_5b50
  %v4_5b7f = phi i32 [ %v3_5b7f, %bb ], [ 0, %dec_label_pc_5b50 ]
  ret i32 %v4_5b7f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_5b86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5b86:
  %v0_5b87 = load i32, i32* @eax, align 4
  ret i32 %v0_5b87
}

define i32 @_ZNK17CScriptCompressor16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5b88:
  %stack_var_-36 = alloca i32, align 4
  %v2_5bac = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_5bac, i32* @eax, align 4
  %v1_5bb2 = call i32 @function_dea0(i32 %v2_5bac)
  ret i32 %arg1
}

define i32 @function_5bc8() local_unnamed_addr {
dec_label_pc_5bc8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5bc8 = load i32, i32* %eax.global-to-local, align 4
  %v2_5bc8 = mul i32 %v0_5bc8, 8
  %v3_5bc8 = add i32 %v0_5bc8, 1166872436
  %v4_5bc8 = add i32 %v3_5bc8, %v2_5bc8
  %v5_5bc8 = inttoptr i32 %v4_5bc8 to i32*
  %v6_5bc8 = load i32, i32* %v5_5bc8, align 4
  %v7_5bc8 = add i32 %v6_5bc8, 1
  store i32 %v7_5bc8, i32* %v5_5bc8, align 4
  %v0_5bcf = load i32, i32* %ecx.global-to-local, align 4
  %v1_5bcf = sub i32 %v0_5bcf, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_5bcf, i32* %ecx.global-to-local, align 4
  %v0_5bd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_5bd1 = add i32 %v0_5bd1, 36
  %v16_5bd1 = and i32 %v2_5bd1, 255
  %v18_5bd1 = and i32 %v0_5bd1, -256
  %v19_5bd1 = or i32 %v16_5bd1, %v18_5bd1
  store i32 %v19_5bd1, i32* %eax.global-to-local, align 4
  store i32 %v19_5bd1, i32* @ebx, align 4
  %v0_5bda = call i32 @function_5c3e()
  store i32 %v0_5bda, i32* %eax.global-to-local, align 4
  ret i32 %v0_5bda

; uselistorder directives
  uselistorder i32 %v0_5bd1, { 1, 0 }
  uselistorder i32 %v0_5bc8, { 1, 0 }
}

define i32 @function_5bdc() local_unnamed_addr {
dec_label_pc_5bdc:
  %ebp.global-to-local = alloca i32, align 4
  %v0_5bdc = load i32, i32* %ebp.global-to-local, align 4
  %v1_5bdc = add i32 %v0_5bdc, -44
  %v2_5bdc = inttoptr i32 %v1_5bdc to i32*
  %v3_5bdc = load i32, i32* %v2_5bdc, align 4
  %v1_5bdf = inttoptr i32 %v3_5bdc to i32*
  %v2_5bdf = load i32, i32* %v1_5bdf, align 4
  %v1_5be9 = add i32 %v2_5bdf, 6
  %v2_5bec = add i32 %v0_5bdc, -20
  %v3_5bec = inttoptr i32 %v2_5bec to i32*
  store i32 %v1_5be9, i32* %v3_5bec, align 4
  %v0_5bef = load i32, i32* %ebp.global-to-local, align 4
  %v1_5c09 = add i32 %v0_5bef, -16
  ret i32 %v1_5c09
}

define i32 @function_5c3e() local_unnamed_addr {
dec_label_pc_5c3e:
  %v0_5c3e = load i32, i32* @ebp, align 4
  %v0_5c49 = load i32, i32* @ebx, align 4
  store i32 %v0_5c49, i32* @eax, align 4
  %v1_5c4b = add i32 %v0_5c3e, -12
  %v2_5c4b = inttoptr i32 %v1_5c4b to i32*
  %v3_5c4b = load i32, i32* %v2_5c4b, align 4
  %v1_5c4e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_5c4e = icmp eq i32 %v1_5c4e, %v3_5c4b
  br i1 %v3_5c4e, label %bb, label %dec_label_pc_5c57

bb:                                               ; preds = %dec_label_pc_5c3e
  %v1_5c3e = add i32 %v0_5c3e, -32
  %v2_5c55 = call i32 @function_5c75(i32 %v1_5c3e)
  store i32 %v2_5c55, i32* @eax, align 4
  br label %dec_label_pc_5c57

dec_label_pc_5c57:                                ; preds = %bb, %dec_label_pc_5c3e
  %v0_5c57 = call i32 @function_5c70()
  ret i32 %v0_5c57

; uselistorder directives
  uselistorder i32 %v0_5c3e, { 1, 0 }
}

define i32 @function_5c5a() local_unnamed_addr {
dec_label_pc_5c5a:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c5a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5c5a
}

define i32 @function_5c70() local_unnamed_addr {
dec_label_pc_5c70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5c75(i32 %arg1) local_unnamed_addr {
dec_label_pc_5c75:
  %v0_5c79 = load i32, i32* @eax, align 4
  ret i32 %v0_5c79
}

define i32 @_Z7GetAlgoi(i32 %arg1) local_unnamed_addr {
dec_label_pc_5c7a:
  %v1_5c94 = and i32 %arg1, 3584
  %v2_5c94 = icmp eq i32 %v1_5c94, 0
  br i1 %v2_5c94, label %dec_label_pc_5ca6, label %dec_label_pc_5c9d

dec_label_pc_5c9d:                                ; preds = %dec_label_pc_5c7a
  %v9_5c9d = icmp eq i32 %v1_5c94, 512
  br i1 %v9_5c9d, label %dec_label_pc_5cad, label %dec_label_pc_5cb4

dec_label_pc_5ca6:                                ; preds = %dec_label_pc_5c7a
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_5cb9

dec_label_pc_5cad:                                ; preds = %dec_label_pc_5c9d
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @eax, align 4
  br label %dec_label_pc_5cb9

dec_label_pc_5cb4:                                ; preds = %dec_label_pc_5c9d
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_5cb9

dec_label_pc_5cb9:                                ; preds = %dec_label_pc_5cb4, %dec_label_pc_5cad, %dec_label_pc_5ca6
  %v2_5cc32 = phi i32 [ 0, %dec_label_pc_5cb4 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_5cad ], [ 0, %dec_label_pc_5ca6 ]
  br i1 true, label %bb, label %dec_label_pc_5cc5

bb:                                               ; preds = %dec_label_pc_5cb9
  %v1_5cc3 = call i32 @function_5cca()
  br label %dec_label_pc_5cc5

dec_label_pc_5cc5:                                ; preds = %bb, %dec_label_pc_5cb9
  %v2_5cc3 = phi i32 [ %v1_5cc3, %bb ], [ %v2_5cc32, %dec_label_pc_5cb9 ]
  ret i32 %v2_5cc3
}

define i32 @function_5cca() local_unnamed_addr {
dec_label_pc_5cca:
  %v0_5ccb = load i32, i32* @eax, align 4
  ret i32 %v0_5ccb
}

define i32 @_ZN6CTxOutC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5ccc:
  %v1_5ce7 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_5ce7, i32* @eax, align 4
  %v1_5ced = call i32 @function_b702(i32 %v1_5ce7)
  %v1_5cfd = call i32 @function_5d19(i32 %arg1)
  ret i32 %v1_5cfd
}

define i32 @function_5d00() local_unnamed_addr {
dec_label_pc_5d00:
  %eax.global-to-local = alloca i32, align 4
  %v0_5d00 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5d00
}

define i32 @function_5d19(i32 %arg1) local_unnamed_addr {
dec_label_pc_5d19:
  %v0_5d19 = load i32, i32* @ebp, align 4
  %v1_5d19 = add i32 %v0_5d19, -12
  %v2_5d19 = inttoptr i32 %v1_5d19 to i32*
  %v3_5d19 = load i32, i32* %v2_5d19, align 4
  %v1_5d1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_5d1c = xor i32 %v1_5d1c, %v3_5d19
  %v3_5d1c = icmp eq i32 %v2_5d1c, 0
  store i32 %v2_5d1c, i32* @eax, align 4
  br i1 %v3_5d1c, label %bb, label %dec_label_pc_5d25

bb:                                               ; preds = %dec_label_pc_5d19
  %v1_5d23 = call i32 @function_5d2a()
  br label %dec_label_pc_5d25

dec_label_pc_5d25:                                ; preds = %bb, %dec_label_pc_5d19
  %v2_5d23 = phi i32 [ %v1_5d23, %bb ], [ %v2_5d1c, %dec_label_pc_5d19 ]
  ret i32 %v2_5d23
}

define i32 @function_5d2a() local_unnamed_addr {
dec_label_pc_5d2a:
  %v0_5d2f = load i32, i32* @eax, align 4
  ret i32 %v0_5d2f
}

define i32 @_ZN6CTxOut7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_5d30:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %arg1, align 4
  %v1_5d50 = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_5d50 = inttoptr i32 %v1_5d50 to i32*
  store i32 -1, i32* %v2_5d50, align 4
  %v1_5d5a = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_5d5a, i32* @eax, align 4
  %v1_5d60 = call i32 @function_efd4(i32 %v1_5d5a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5d71

bb:                                               ; preds = %dec_label_pc_5d30
  %v1_5d6f = call i32 @function_5d76()
  br label %dec_label_pc_5d71

dec_label_pc_5d71:                                ; preds = %bb, %dec_label_pc_5d30
  %v2_5d6f = phi i32 [ %v1_5d6f, %bb ], [ 0, %dec_label_pc_5d30 ]
  ret i32 %v2_5d6f

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_5d76() local_unnamed_addr {
dec_label_pc_5d76:
  %v0_5d77 = load i32, i32* @eax, align 4
  ret i32 %v0_5d77
}

define i32 @_ZNK6CTxOut6IsNullEv() local_unnamed_addr {
dec_label_pc_5d78:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_5d92 = add i32 %tmp3, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_5d92 = inttoptr i32 %v1_5d92 to i32*
  %v3_5d92 = load i32, i32* %v2_5d92, align 4
  %v1_5d95 = inttoptr i32 %tmp3 to i32*
  %v2_5d95 = load i32, i32* %v1_5d95, align 4
  %v2_5d97 = and i32 %v2_5d95, %v3_5d92
  %v10_5d99 = icmp eq i32 %v2_5d97, -1
  %v1_5d9c = zext i1 %v10_5d99 to i32
  %v3_5d9c = and i32 %v2_5d97, -256
  %v4_5d9c = or i32 %v1_5d9c, %v3_5d9c
  ret i32 %v4_5d9c

; uselistorder directives
  uselistorder i32 %v2_5d97, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
}

define i32 @_ZN16CTxOutCompressorC1ER6CTxOut(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5db2:
  %ebp.global-to-local = alloca i32, align 4
  %v0_5db2 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_5db2, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNK16CTxOutCompressor16GetSerializeSizeEii(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5dea:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* %stack_var_-44, align 4
  %v2_5e31 = load i32, i32* %arg1, align 4
  %v1_5e33 = add i32 %v2_5e31, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_5e33 = inttoptr i32 %v1_5e33 to i32*
  %v3_5e33 = load i32, i32* %v2_5e33, align 4
  %v1_5e36 = inttoptr i32 %v2_5e31 to i32*
  %v2_5e36 = load i32, i32* %v1_5e36, align 4
  store i32 %v2_5e36, i32* %stack_var_-52, align 4
  %v2_5e4a = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_5e4a, i32* @eax, align 4
  %v2_5e50 = call i32 @function_f4c0(i32 %v2_5e4a, i32 %v3_5e33)
  store i32 %v2_5e50, i32* @eax, align 4
  %v2_5e55 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_5e55, i32* @edx, align 4
  %v2_5e5f = call i32 @function_f4ed(i32 %v2_5e55, i32 %v2_5e50)
  store i32 %v2_5e55, i32* @eax, align 4
  %v1_5e6d = call i32 @function_f534(i32 %v2_5e55)
  %v0_5e72 = load i32, i32* %esi.global-to-local, align 4
  %v2_5e8a = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_5e8a, i32* @eax, align 4
  %sext = mul i32 %v0_5e72, 16777216
  %v5_5e90 = sdiv i32 %sext, 16777216
  %v6_5e90 = call i32 @function_f561(i32 %v2_5e8a, i32 %v1_5e6d, i32 %arg2, i32 %arg3, i32 %v5_5e90)
  %v2_5e9b = load i32, i32* %arg1, align 4
  %v1_5e9d = add i32 %v2_5e9b, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_5ea3 = call i32 @function_f5bd(i32 %v1_5e9d)
  %v0_5eb7 = load i32, i32* @ebx, align 4
  %v5_5edb = add i32 %v6_5e90, %v2_5e8a
  store i32 %v5_5edb, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5eed

bb:                                               ; preds = %dec_label_pc_5dea
  %v2_5eac = ptrtoint i32* %stack_var_-28 to i32
  %sext1 = mul i32 %v0_5eb7, 16777216
  %v6_5eeb = sdiv i32 %sext1, 16777216
  %v7_5eeb = call i32 @function_5ef2(i32 %v2_5e8a, i32 %v2_5eac, i32 %arg2, i32 %arg3, i32 %v6_5eeb)
  br label %dec_label_pc_5eed

dec_label_pc_5eed:                                ; preds = %bb, %dec_label_pc_5dea
  %v8_5eeb = phi i32 [ %v7_5eeb, %bb ], [ %v5_5edb, %dec_label_pc_5dea ]
  ret i32 %v8_5eeb

; uselistorder directives
  uselistorder i32 %v2_5e8a, { 1, 0, 2, 3 }
}

define i32 @function_5ef2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_5ef2:
  %v0_5ef8 = load i32, i32* @eax, align 4
  ret i32 %v0_5ef8
}

define i32 @_ZN6CTxOutD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5efa:
  ret i32 0
}

define i32 @_ZN6CTxOutC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5f32:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_5f52 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_5f52 = inttoptr i32 %v1_5f52 to i32*
  %v3_5f52 = load i32, i32* %v2_5f52, align 4
  %v1_5f55 = inttoptr i32 %arg2 to i32*
  %v2_5f55 = load i32, i32* %v1_5f55, align 4
  store i32 %v2_5f55, i32* %arg1, align 4
  %v2_5f5c = add i32 %tmp103, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_5f5c = inttoptr i32 %v2_5f5c to i32*
  store i32 %v3_5f52, i32* %v3_5f5c, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5f83

bb:                                               ; preds = %dec_label_pc_5f32
  %v1_5f68 = add i32 %tmp103, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_5f62 = add i32 %arg2, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_5f81 = call i32 @function_5f88(i32 %v1_5f68, i32 %v1_5f62)
  br label %dec_label_pc_5f83

dec_label_pc_5f83:                                ; preds = %bb, %dec_label_pc_5f32
  %v4_5f81 = phi i32 [ %v3_5f81, %bb ], [ 0, %dec_label_pc_5f32 ]
  ret i32 %v4_5f81

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_5f88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5f88:
  %v0_5f89 = load i32, i32* @eax, align 4
  ret i32 %v0_5f89
}

define i32 @_ZN6CCoinsC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_5f8a:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v4_5f91 = ptrtoint i8* %arg1 to i32
  store i8 0, i8* %arg1, align 1
  %v2_5fa8 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_5fa8, i32* @eax, align 4
  %v2_5fae = call i32 @function_f9a2(i32 %v2_5fa8)
  %v2_5fb3 = ptrtoint i32* %stack_var_-40 to i32
  %v1_5fc1 = add i32 %v4_5f91, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v2_5fb3, i32* @eax, align 4
  %v5_5fdd = call i32 @function_fa0e(i32 %v1_5fc1, i32 0, i32 %v2_5fb3, i32 %v2_5fa8)
  store i32 %v2_5fa8, i32* @eax, align 4
  %v2_5ff3 = call i32 @function_f9d8(i32 %v2_5fa8)
  %v1_5ffb = add i32 %v4_5f91, 16
  %v2_5ffb = inttoptr i32 %v1_5ffb to i32*
  store i32 0, i32* %v2_5ffb, align 4
  %v1_6005 = add i32 %v4_5f91, 20
  %v2_6005 = inttoptr i32 %v1_6005 to i32*
  store i32 0, i32* %v2_6005, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6018

bb:                                               ; preds = %dec_label_pc_5f8a
  %v1_6016 = call i32 @function_6045()
  store i32 %v1_6016, i32* @eax, align 4
  br label %dec_label_pc_6018

dec_label_pc_6018:                                ; preds = %bb, %dec_label_pc_5f8a
  %v0_6018 = call i32 @function_6040()
  ret i32 %v0_6018

; uselistorder directives
  uselistorder i32 %v2_5fa8, { 1, 2, 0, 3, 4 }
}

define i32 @function_601a() local_unnamed_addr {
dec_label_pc_601a:
  %eax.global-to-local = alloca i32, align 4
  %v0_601a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_601a, i32* @ebx, align 4
  %v0_601c = load i32, i32* @ebp, align 4
  %v1_601c = add i32 %v0_601c, -36
  store i32 %v1_601c, i32* %eax.global-to-local, align 4
  %v1_6027 = call i32 @function_602b(i32 %v1_601c)
  store i32 %v1_6027, i32* %eax.global-to-local, align 4
  ret i32 %v1_6027
}

define i32 @function_6029() local_unnamed_addr {
dec_label_pc_6029:
  %eax.global-to-local = alloca i32, align 4
  %v0_6029 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6029
}

define i32 @function_602b(i32 %arg1) local_unnamed_addr {
dec_label_pc_602b:
  %v0_602b = load i32, i32* @ebp, align 4
  %v1_602b = add i32 %v0_602b, -13
  store i32 %v1_602b, i32* @eax, align 4
  %v1_6031 = call i32 @function_f9d8(i32 %v1_602b)
  %v0_6036 = load i32, i32* @ebx, align 4
  ret i32 %v0_6036

; uselistorder directives
  uselistorder i32 (i32)* @function_f9d8, { 1, 0 }
}

define i32 @function_6040() local_unnamed_addr {
dec_label_pc_6040:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6045() local_unnamed_addr {
dec_label_pc_6045:
  %v0_604a = load i32, i32* @eax, align 4
  ret i32 %v0_604a
}

define i32 @_ZN6CCoins7CleanupEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_604c:
  %stack_var_-28 = alloca i32, align 4
  %v1_6077 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v5_6077 = icmp ult i32 %v1_6077, %arg1
  %v2_607d117 = call i32 @function_fb5c(i32 %v1_6077)
  %v1_6082118 = icmp eq i32 %v2_607d117, 0
  br i1 %v1_6082118, label %dec_label_pc_60ac.thread, label %dec_label_pc_6086

dec_label_pc_6066:                                ; preds = %dec_label_pc_60ac
  %v2_606f = call i32 @function_fc10(i32 %v1_6077)
  %v2_607d = call i32 @function_fb5c(i32 %v1_6077)
  %v1_6082 = icmp eq i32 %v2_607d, 0
  br i1 %v1_6082, label %dec_label_pc_60ac.thread, label %dec_label_pc_6086

dec_label_pc_6086:                                ; preds = %dec_label_pc_604c, %dec_label_pc_6066
  store i32 %v1_6077, i32* @eax, align 4
  %v2_608f = call i32 @function_fba2(i32 %v1_6077)
  %v4_609c = trunc i32 %v2_608f to i8
  %v5_609c = icmp eq i8 %v4_609c, 0
  br i1 %v5_609c, label %dec_label_pc_60ac.thread, label %dec_label_pc_60ac

dec_label_pc_60ac.thread:                         ; preds = %dec_label_pc_6086, %dec_label_pc_6066, %dec_label_pc_604c
  store i1 %v5_6077, i1* @cf, align 1
  store i32 %v1_6077, i32* @eax, align 4
  br label %dec_label_pc_60b0

dec_label_pc_60ac:                                ; preds = %dec_label_pc_6086
  store i1 %v5_6077, i1* @cf, align 1
  store i32 %v1_6077, i32* @eax, align 4
  br i1 icmp ne (i8 ptrtoint (i8** @global_var_1.1176 to i8), i8 0), label %dec_label_pc_6066, label %dec_label_pc_60b0

dec_label_pc_60b0:                                ; preds = %dec_label_pc_60ac, %dec_label_pc_60ac.thread
  %v2_60b9 = call i32 @function_f6bc(i32 %v1_6077)
  %v4_60be = trunc i32 %v2_60b9 to i8
  %v5_60be = icmp eq i8 %v4_60be, 0
  br i1 %v5_60be, label %bb, label %dec_label_pc_60c2

bb:                                               ; preds = %dec_label_pc_60b0
  %v1_60c0 = call i32 @function_6106()
  br label %dec_label_pc_60c2

dec_label_pc_60c2:                                ; preds = %bb, %dec_label_pc_60b0
  %v2_60c8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_60ce = call i32 @function_f5ae(i32 %v2_60c8)
  store i32 %v2_60c8, i32* @eax, align 4
  %v4_60e8 = call i32 @function_f5e4(i32 %v2_60c8, i32 %v1_6077)
  %v0_60ed = call i32 @function_6106()
  ret i32 %v0_60ed

; uselistorder directives
  uselistorder i1 %v5_6077, { 1, 0 }
  uselistorder i32 %v1_6077, { 0, 3, 6, 2, 5, 4, 8, 7, 1, 9 }
  uselistorder i32 ()* @function_6106, { 1, 0 }
  uselistorder i32 (i32)* @function_fb5c, { 1, 0 }
  uselistorder label %dec_label_pc_6086, { 1, 0 }
}

define i32 @function_60f0() local_unnamed_addr {
dec_label_pc_60f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_60f0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_60f0
}

define i32 @function_6106() local_unnamed_addr {
dec_label_pc_6106:
  %v0_6106 = load i32, i32* @ebp, align 4
  %v1_6106 = add i32 %v0_6106, -12
  %v2_6106 = inttoptr i32 %v1_6106 to i32*
  %v3_6106 = load i32, i32* %v2_6106, align 4
  %v1_6109 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6109 = xor i32 %v1_6109, %v3_6106
  ret i32 %v2_6109
}

define i32 @_ZNK6CCoins16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_611e:
  ret i32 %arg1
}

define i32 @function_616e() local_unnamed_addr {
dec_label_pc_616e:
  %eax.global-to-local = alloca i32, align 4
  %v0_616e = load i32, i32* @ebx, align 4
  %v1_616e = add i32 %v0_616e, -1065106363
  %v2_616e = inttoptr i32 %v1_616e to i32*
  %v3_616e = load i32, i32* %v2_616e, align 4
  %v4_616e = sub i32 %v3_616e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_616e, i32* %v2_616e, align 4
  %v0_6174 = load i32, i32* %eax.global-to-local, align 4
  %v2_6176 = add i32 %v0_6174, 173
  %v16_6176 = and i32 %v2_6176, 255
  %v18_6176 = and i32 %v0_6174, -256
  %v19_6176 = or i32 %v16_6176, %v18_6176
  store i32 %v19_6176, i32* @eax, align 4
  %v1_6178 = call i32 @function_fc2e(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_6178, i32* %eax.global-to-local, align 4
  %v1_617d = icmp eq i32 %v1_6178, 0
  %v2_61b2.pre.pre = load i32, i32* @ebp, align 4
  br i1 %v1_617d, label %dec_label_pc_61ad, label %dec_label_pc_6181

dec_label_pc_6181:                                ; preds = %dec_label_pc_616e
  %v1_6181 = add i32 %v2_61b2.pre.pre, -60
  %v2_6181 = inttoptr i32 %v1_6181 to i32*
  %v3_6181 = load i32, i32* %v2_6181, align 4
  %v1_6184 = add i32 %v3_6181, ptrtoint (i8** @global_var_4.1177 to i32)
  %v1_619f = xor i32 %v1_6184, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_619f = trunc i32 %v1_619f to i8
  store i32 %v1_619f, i32* %eax.global-to-local, align 4
  %v5_61a2 = icmp eq i8 %v4_619f, 0
  br i1 %v5_61a2, label %dec_label_pc_61ad, label %dec_label_pc_61b2

dec_label_pc_61ad:                                ; preds = %dec_label_pc_616e, %dec_label_pc_6181
  br label %dec_label_pc_61b2

dec_label_pc_61b2:                                ; preds = %dec_label_pc_6181, %dec_label_pc_61ad
  %storemerge14 = phi i32 [ 0, %dec_label_pc_61ad ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_6181 ]
  store i32 %storemerge14, i32* %eax.global-to-local, align 4
  %v1_61b2 = trunc i32 %storemerge14 to i8
  %v3_61b2 = add i32 %v2_61b2.pre.pre, -14
  %v4_61b2 = inttoptr i32 %v3_61b2 to i8*
  store i8 %v1_61b2, i8* %v4_61b2, align 1
  %v0_61b5 = load i32, i32* @ebp, align 4
  %v1_61b5 = add i32 %v0_61b5, -60
  %v2_61b5 = inttoptr i32 %v1_61b5 to i32*
  %v3_61b5 = load i32, i32* %v2_61b5, align 4
  %v1_61b8 = add i32 %v3_61b5, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_61b8, i32* @eax, align 4
  %v2_61be = call i32 @function_fc2e(i32 %v1_61b8)
  store i32 %v2_61be, i32* %eax.global-to-local, align 4
  %tmp137 = or i32 %v2_61be, 1
  %tmp138 = icmp eq i32 %tmp137, 1
  %v2_61f9.pre.pre = load i32, i32* @ebp, align 4
  br i1 %tmp138, label %dec_label_pc_61f4, label %dec_label_pc_61c8

dec_label_pc_61c8:                                ; preds = %dec_label_pc_61b2
  %v1_61c8 = add i32 %v2_61f9.pre.pre, -60
  %v2_61c8 = inttoptr i32 %v1_61c8 to i32*
  %v3_61c8 = load i32, i32* %v2_61c8, align 4
  %v1_61cb = add i32 %v3_61c8, ptrtoint (i8** @global_var_4.1177 to i32)
  %v1_61e6 = xor i32 %v1_61cb, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_61e6 = trunc i32 %v1_61e6 to i8
  store i32 %v1_61e6, i32* %eax.global-to-local, align 4
  %v5_61e9 = icmp eq i8 %v4_61e6, 0
  br i1 %v5_61e9, label %dec_label_pc_61f4, label %dec_label_pc_61f9

dec_label_pc_61f4:                                ; preds = %dec_label_pc_61b2, %dec_label_pc_61c8
  br label %dec_label_pc_61f9

dec_label_pc_61f9:                                ; preds = %dec_label_pc_61c8, %dec_label_pc_61f4
  %storemerge13 = phi i32 [ 0, %dec_label_pc_61f4 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_61c8 ]
  store i32 %storemerge13, i32* %eax.global-to-local, align 4
  %v1_61f9 = trunc i32 %storemerge13 to i8
  %v3_61f9 = add i32 %v2_61f9.pre.pre, -13
  %v4_61f9 = inttoptr i32 %v3_61f9 to i8*
  store i8 %v1_61f9, i8* %v4_61f9, align 1
  %v0_61fc = load i32, i32* @ebp, align 4
  %v1_61fc = add i32 %v0_61fc, -14
  %v2_61fc = inttoptr i32 %v1_61fc to i8*
  %v3_61fc = load i8, i8* %v2_61fc, align 1
  %v4_61fc = zext i8 %v3_61fc to i32
  %v1_6200 = xor i32 %v4_61fc, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_6200 = trunc i32 %v1_6200 to i8
  store i32 %v1_6200, i32* %eax.global-to-local, align 4
  %v5_6203 = icmp eq i8 %v4_6200, 0
  %.pre135 = add i32 %v0_61fc, -13
  %.pre136 = inttoptr i32 %.pre135 to i8*
  br i1 %v5_6203, label %dec_label_pc_623d, label %dec_label_pc_6207

dec_label_pc_6207:                                ; preds = %dec_label_pc_61f9
  %v3_6207 = load i8, i8* %.pre136, align 1
  %v4_6207 = zext i8 %v3_6207 to i32
  %v1_620b = xor i32 %v4_6207, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_620b = trunc i32 %v1_620b to i8
  store i32 %v1_620b, i32* %eax.global-to-local, align 4
  %v5_620e = icmp eq i8 %v4_620b, 0
  br i1 %v5_620e, label %dec_label_pc_623d, label %dec_label_pc_6212

dec_label_pc_6212:                                ; preds = %dec_label_pc_6207
  %v1_6212 = add i32 %v0_61fc, -48
  %v2_6212 = inttoptr i32 %v1_6212 to i32*
  %v3_6212 = load i32, i32* %v2_6212, align 4
  store i32 %v3_6212, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_623d

dec_label_pc_623d:                                ; preds = %dec_label_pc_61f9, %dec_label_pc_6212, %dec_label_pc_6207
  %v1_623d = add i32 %v0_61fc, -48
  %v2_623d = inttoptr i32 %v1_623d to i32*
  %v3_623d = load i32, i32* %v2_623d, align 4
  %v3_6240 = load i8, i8* %v2_61fc, align 1
  %v4_6240 = zext i8 %v3_6240 to i32
  %v1_6244 = xor i32 %v4_6240, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_6244 = trunc i32 %v1_6244 to i8
  store i32 %v1_6244, i32* %eax.global-to-local, align 4
  %v5_6247 = icmp eq i8 %v4_6244, 0
  br i1 %v5_6247, label %dec_label_pc_625d, label %dec_label_pc_624b

dec_label_pc_624b:                                ; preds = %dec_label_pc_623d
  %v3_624b = load i8, i8* %.pre136, align 1
  %v4_624b = zext i8 %v3_624b to i32
  %v1_624f = xor i32 %v4_624b, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_624f = trunc i32 %v1_624f to i8
  store i32 %v1_624f, i32* %eax.global-to-local, align 4
  %v5_6252 = icmp eq i8 %v4_624f, 0
  br i1 %v5_6252, label %dec_label_pc_625d, label %dec_label_pc_6262

dec_label_pc_625d:                                ; preds = %dec_label_pc_623d, %dec_label_pc_624b
  br label %dec_label_pc_6262

dec_label_pc_6262:                                ; preds = %dec_label_pc_624b, %dec_label_pc_625d
  %storemerge12 = phi i32 [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_624b ], [ 0, %dec_label_pc_625d ]
  %v1_6262 = urem i32 %storemerge12, 256
  %v2_6267 = sub i32 %v3_623d, %v1_6262
  store i32 %v2_6267, i32* @ecx, align 4
  store i32 %v2_6267, i32* %eax.global-to-local, align 4
  %v1_626b = mul i32 %v2_6267, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_6272 = add i32 %v0_61fc, -60
  %v2_6272 = inttoptr i32 %v1_6272 to i32*
  %v3_6272 = load i32, i32* %v2_6272, align 4
  store i32 %v3_6272, i32* %eax.global-to-local, align 4
  %v1_6275 = inttoptr i32 %v3_6272 to i8*
  %v2_6275 = load i8, i8* %v1_6275, align 1
  %v5_6278 = icmp eq i8 %v2_6275, 0
  %. = select i1 %v5_6278, i32 0, i32 ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %., i32* %eax.global-to-local, align 4
  %v2_6288 = add i32 %., %v1_626b
  %v3_628a = load i8, i8* %v2_61fc, align 1
  %v10_628a = icmp eq i8 %v3_628a, 0
  %storemerge10 = select i1 %v10_628a, i32 0, i32 2
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_629c = or i32 %storemerge10, %v2_6288
  %v3_629e = load i8, i8* %.pre136, align 1
  %v10_629e = icmp eq i8 %v3_629e, 0
  %.15 = select i1 %v10_629e, i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_62b0 = add i32 %.15, %v2_629c
  store i32 %v2_62b0, i32* %eax.global-to-local, align 4
  %v2_62b2 = add i32 %v0_61fc, -44
  %v3_62b2 = inttoptr i32 %v2_62b2 to i32*
  store i32 %v2_62b0, i32* %v3_62b2, align 4
  %v0_62b5 = load i32, i32* @ebp, align 4
  %v1_62b5 = add i32 %v0_62b5, -60
  %v2_62b5 = inttoptr i32 %v1_62b5 to i32*
  %v3_62b5 = load i32, i32* %v2_62b5, align 4
  %v1_62b8 = add i32 %v3_62b5, 20
  store i32 %v1_62b8, i32* @eax, align 4
  %v2_62be = call i32 @function_f9c9(i32 %v1_62b8)
  store i32 %v2_62be, i32* @eax, align 4
  %v0_62c3 = load i32, i32* @ebp, align 4
  %v1_62c3 = add i32 %v0_62c3, -40
  %v4_62cd = call i32 @function_f9f6(i32 %v1_62c3, i32 %v2_62be)
  %v0_62d5 = load i32, i32* @ebp, align 4
  %v1_62d5 = add i32 %v0_62d5, -40
  store i32 %v1_62d5, i32* @eax, align 4
  %v1_62db = call i32 @function_fa3d(i32 %v1_62d5)
  store i32 %v1_62db, i32* @eax, align 4
  %v0_62e0 = load i32, i32* @ebp, align 4
  %v1_62e0 = add i32 %v0_62e0, -68
  %v2_62e0 = inttoptr i32 %v1_62e0 to i32*
  %v3_62e0 = load i32, i32* %v2_62e0, align 4
  %v1_62e7 = add i32 %v0_62e0, -64
  %v2_62e7 = inttoptr i32 %v1_62e7 to i32*
  %v3_62e7 = load i32, i32* %v2_62e7, align 4
  %v5_62f1 = call i32 @function_fa6a(i32 %v1_62db, i32 %v3_62e7, i32 %v3_62e0)
  store i32 %v5_62f1, i32* %eax.global-to-local, align 4
  %v0_62f6 = load i32, i32* @ebp, align 4
  %v1_62f6 = add i32 %v0_62f6, -24
  %v2_62f6 = inttoptr i32 %v1_62f6 to i32*
  %v3_62f6 = load i32, i32* %v2_62f6, align 4
  %v5_62f6 = add i32 %v3_62f6, %v5_62f1
  %v10_62f6 = icmp ult i32 %v5_62f6, %v3_62f6
  store i1 %v10_62f6, i1* @cf, align 1
  store i32 %v5_62f6, i32* %v2_62f6, align 4
  %v0_62f9 = load i32, i32* @ebp, align 4
  %v1_62f9 = add i32 %v0_62f9, -44
  store i32 %v1_62f9, i32* @eax, align 4
  %v1_62ff = call i32 @function_f599(i32 %v1_62f9)
  store i32 %v1_62ff, i32* @eax, align 4
  %v0_6304 = load i32, i32* @ebp, align 4
  %v1_6304 = add i32 %v0_6304, -36
  %v3_630e = call i32 @function_f5c6(i32 %v1_6304, i32 %v1_62ff)
  %v0_6316 = load i32, i32* @ebp, align 4
  %v1_6316 = add i32 %v0_6316, -36
  store i32 %v1_6316, i32* %eax.global-to-local, align 4
  ret i32 %v1_6316

; uselistorder directives
  uselistorder i32 %v3_62f6, { 1, 0 }
  uselistorder i32 %v0_61fc, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v0_6174, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 7, 14, 15, 13, 16, 17, 18 }
  uselistorder label %dec_label_pc_6262, { 1, 0 }
  uselistorder label %dec_label_pc_625d, { 1, 0 }
  uselistorder label %dec_label_pc_623d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_61f9, { 1, 0 }
  uselistorder label %dec_label_pc_61f4, { 1, 0 }
  uselistorder label %dec_label_pc_61b2, { 1, 0 }
  uselistorder label %dec_label_pc_61ad, { 1, 0 }
}

define i32 @function_632a(i32 %arg1) local_unnamed_addr {
dec_label_pc_632a:
  %eax.global-to-local = alloca i32, align 4
  %v0_632a = load i32, i32* @ecx, align 4
  %v1_632a = add i32 %v0_632a, -1996217260
  %v2_632a = inttoptr i32 %v1_632a to i8*
  %v3_632a = load i8, i8* %v2_632a, align 1
  %v4_632a = lshr i8 %v3_632a, ptrtoint (i8** @global_var_4.1177 to i8)
  %v5_632a = mul i8 %v3_632a, 16
  %v6_632a = or i8 %v4_632a, %v5_632a
  store i8 %v6_632a, i8* %v2_632a, align 1
  %v0_6331 = load i32, i32* @eax, align 4
  %v1_6331 = trunc i32 %v0_6331 to i8
  %v2_6331 = and i8 %v1_6331, -24
  %v8_6331 = zext i8 %v2_6331 to i32
  %v10_6331 = and i32 %v0_6331, -256
  %v11_6331 = or i32 %v8_6331, %v10_6331
  %v0_6333 = load i32, i32* @ebx, align 4
  %v1_6333 = add i32 %v0_6333, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_6333, i32* @ebx, align 4
  %v1_6334 = load i32, i32* @esi, align 4
  store i32 %v1_6334, i32* %eax.global-to-local, align 4
  store i32 %v11_6331, i32* @esi, align 4
  %v4_6335 = trunc i32 %v1_6334 to i8
  %v5_6335 = add i8 %v4_6335, %v2_6331
  %v21_6335 = inttoptr i32 %v1_6334 to i8*
  store i8 %v5_6335, i8* %v21_6335, align 1
  %v0_6337 = load i32, i32* @ebp, align 4
  %v1_6337 = add i32 %v0_6337, -24
  %v2_6337 = inttoptr i32 %v1_6337 to i32*
  %v3_6337 = load i32, i32* %v2_6337, align 4
  %v4_6337 = load i32, i32* %eax.global-to-local, align 4
  %v5_6337 = add i32 %v4_6337, %v3_6337
  store i32 %v5_6337, i32* %v2_6337, align 4
  %v0_633a = load i32, i32* @ebp, align 4
  %v1_633a = add i32 %v0_633a, -52
  %v2_633a = inttoptr i32 %v1_633a to i32*
  %v3_633a = load i32, i32* %v2_633a, align 4
  store i32 %v3_633a, i32* %eax.global-to-local, align 4
  %v1_633d = add i32 %v0_633a, -24
  %v2_633d = inttoptr i32 %v1_633d to i32*
  %v3_633d = load i32, i32* %v2_633d, align 4
  %v5_633d = add i32 %v3_633d, %v3_633a
  store i32 %v5_633d, i32* %v2_633d, align 4
  %v0_6340 = load i32, i32* @ebp, align 4
  %v1_6340 = add i32 %v0_6340, -20
  %v2_6340 = inttoptr i32 %v1_6340 to i32*
  store i32 0, i32* %v2_6340, align 4
  br label %dec_label_pc_63b9

dec_label_pc_6349:                                ; preds = %dec_label_pc_63b9
  %v1_634c = add i32 %v3_6349, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_634c, i32* @edx, align 4
  %v3_634f = load i32, i32* %v3_63c7, align 4
  %v1_6366 = xor i32 %v3_634f, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_6366 = trunc i32 %v1_6366 to i8
  store i32 %v1_6366, i32* %eax.global-to-local, align 4
  %v5_6369 = icmp eq i8 %v4_6366, 0
  br i1 %v5_6369, label %dec_label_pc_63b5, label %dec_label_pc_636d

dec_label_pc_636d:                                ; preds = %dec_label_pc_6349
  %v3_636d = load i32, i32* %v2_6349, align 4
  store i32 %v3_636d, i32* %eax.global-to-local, align 4
  %v1_6370 = add i32 %v3_636d, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_6370, i32* @edx, align 4
  %v3_6373 = load i32, i32* %v3_63c7, align 4
  store i32 %v3_6373, i32* @eax, align 4
  %v3_6385 = call i32 @function_fab9(i32 %v3_6373, i32 %v3_6373)
  %v0_638e = load i32, i32* @ebp, align 4
  %v1_638e = add i32 %v0_638e, -32
  store i32 %v1_638e, i32* %eax.global-to-local, align 4
  %v1_6399 = add i32 %v0_638e, -68
  %v2_6399 = inttoptr i32 %v1_6399 to i32*
  %v3_6399 = load i32, i32* %v2_6399, align 4
  store i32 %v3_6399, i32* %eax.global-to-local, align 4
  %v1_63a0 = add i32 %v0_638e, -64
  %v2_63a0 = inttoptr i32 %v1_63a0 to i32*
  %v3_63a0 = load i32, i32* %v2_63a0, align 4
  store i32 %v1_638e, i32* @eax, align 4
  %v4_63ad = call i32 @function_fae6(i32 %v1_638e, i32 %v3_63a0, i32 %v3_6399)
  store i32 %v4_63ad, i32* %eax.global-to-local, align 4
  %v0_63b2 = load i32, i32* @ebp, align 4
  %v1_63b2 = add i32 %v0_63b2, -24
  %v2_63b2 = inttoptr i32 %v1_63b2 to i32*
  %v3_63b2 = load i32, i32* %v2_63b2, align 4
  %v5_63b2 = add i32 %v3_63b2, %v4_63ad
  store i32 %v5_63b2, i32* %v2_63b2, align 4
  %v0_63b5.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_63b5

dec_label_pc_63b5:                                ; preds = %dec_label_pc_636d, %dec_label_pc_6349
  %v19_63b5 = phi i32 [ %v0_63b5.pre, %dec_label_pc_636d ], [ %v1_63c7, %dec_label_pc_6349 ]
  %v1_63b5 = add i32 %v19_63b5, -20
  %v2_63b5 = inttoptr i32 %v1_63b5 to i32*
  %v3_63b5 = load i32, i32* %v2_63b5, align 4
  %v4_63b5 = add i32 %v3_63b5, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_63b5, i32* %v2_63b5, align 4
  br label %dec_label_pc_63b9

dec_label_pc_63b9:                                ; preds = %dec_label_pc_63b5, %dec_label_pc_632a
  %v0_63b9 = load i32, i32* @ebp, align 4
  %v1_63b9 = add i32 %v0_63b9, -60
  %v2_63b9 = inttoptr i32 %v1_63b9 to i32*
  %v3_63b9 = load i32, i32* %v2_63b9, align 4
  %v1_63bc = add i32 %v3_63b9, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_63bc, i32* @eax, align 4
  %v2_63c2 = call i32 @function_fc2e(i32 %v1_63bc)
  store i32 %v2_63c2, i32* %eax.global-to-local, align 4
  %v1_63c7 = load i32, i32* @ebp, align 4
  %v2_63c7 = add i32 %v1_63c7, -20
  %v3_63c7 = inttoptr i32 %v2_63c7 to i32*
  %v4_63c7 = load i32, i32* %v3_63c7, align 4
  %tmp11 = icmp ule i32 %v2_63c2, %v4_63c7
  %v3_63ca = icmp ne i1 %tmp11, ptrtoint (i8** @global_var_1.1176 to i1)
  %v4_63ca = zext i1 %v3_63ca to i32
  %v6_63ca = and i32 %v2_63c2, -256
  %v7_63ca = or i32 %v4_63ca, %v6_63ca
  store i32 %v7_63ca, i32* %eax.global-to-local, align 4
  %v5_63cd = icmp eq i1 %v3_63ca, false
  %v1_63cf = icmp eq i1 %v5_63cd, false
  %v1_6349 = add i32 %v1_63c7, -60
  %v2_6349 = inttoptr i32 %v1_6349 to i32*
  %v3_6349 = load i32, i32* %v2_6349, align 4
  store i32 %v3_6349, i32* %eax.global-to-local, align 4
  br i1 %v1_63cf, label %dec_label_pc_6349, label %dec_label_pc_63d5

dec_label_pc_63d5:                                ; preds = %dec_label_pc_63b9
  %v1_63d8 = add i32 %v3_6349, 16
  store i32 %v1_63d8, i32* @eax, align 4
  %v2_63de = call i32 @function_f9c9(i32 %v1_63d8)
  store i32 %v2_63de, i32* @eax, align 4
  %v0_63e3 = load i32, i32* @ebp, align 4
  %v1_63e3 = add i32 %v0_63e3, -28
  %v3_63ed = call i32 @function_f9f6(i32 %v1_63e3, i32 %v2_63de)
  %v0_63f5 = load i32, i32* @ebp, align 4
  %v1_63f5 = add i32 %v0_63f5, -28
  store i32 %v1_63f5, i32* @eax, align 4
  %v1_63fb = call i32 @function_fa3d(i32 %v1_63f5)
  store i32 %v1_63fb, i32* @eax, align 4
  %v0_6400 = load i32, i32* @ebp, align 4
  %v1_6400 = add i32 %v0_6400, -68
  %v2_6400 = inttoptr i32 %v1_6400 to i32*
  %v3_6400 = load i32, i32* %v2_6400, align 4
  %v1_6407 = add i32 %v0_6400, -64
  %v2_6407 = inttoptr i32 %v1_6407 to i32*
  %v3_6407 = load i32, i32* %v2_6407, align 4
  %v4_6411 = call i32 @function_fa6a(i32 %v1_63fb, i32 %v3_6407, i32 %v3_6400)
  store i32 %v4_6411, i32* %eax.global-to-local, align 4
  %v0_6416 = load i32, i32* @ebp, align 4
  %v1_6416 = add i32 %v0_6416, -24
  %v2_6416 = inttoptr i32 %v1_6416 to i32*
  %v3_6416 = load i32, i32* %v2_6416, align 4
  %v5_6416 = add i32 %v3_6416, %v4_6411
  store i32 %v5_6416, i32* %v2_6416, align 4
  %v0_6419 = load i32, i32* @ebp, align 4
  %v1_6419 = add i32 %v0_6419, -24
  %v2_6419 = inttoptr i32 %v1_6419 to i32*
  %v3_6419 = load i32, i32* %v2_6419, align 4
  store i32 %v3_6419, i32* @eax, align 4
  %v1_641c = add i32 %v0_6419, -12
  %v2_641c = inttoptr i32 %v1_641c to i32*
  %v3_641c = load i32, i32* %v2_641c, align 4
  %v1_641f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_641f = icmp eq i32 %v1_641f, %v3_641c
  br i1 %v3_641f, label %bb, label %dec_label_pc_6428

bb:                                               ; preds = %dec_label_pc_63d5
  %v1_6426 = call i32 @function_642d()
  store i32 %v1_6426, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6428

dec_label_pc_6428:                                ; preds = %bb, %dec_label_pc_63d5
  %v2_6426 = phi i32 [ %v1_6426, %bb ], [ %v3_6419, %dec_label_pc_63d5 ]
  ret i32 %v2_6426

; uselistorder directives
  uselistorder i32 %v3_6349, { 0, 2, 1 }
  uselistorder i32* %v2_6349, { 1, 0 }
  uselistorder i32* %v3_63c7, { 2, 1, 0 }
  uselistorder i32 %v1_63c7, { 1, 2, 0 }
  uselistorder i32 %v2_63c2, { 1, 0, 2 }
  uselistorder i32 %v1_638e, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 6, 8, 9, 1, 2, 3, 4, 5, 10, 11, 12 }
  uselistorder i32 (i32)* @function_fc2e, { 0, 2, 1 }
}

define i32 @function_642d() local_unnamed_addr {
dec_label_pc_642d:
  %v0_642e = load i32, i32* @eax, align 4
  ret i32 %v0_642e
}

define i32 @_ZNK6CCoins8IsPrunedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_6430:
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v1_644a = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_644d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_644d, i32* @eax, align 4
  %sext = mul i32 %v2_644d, 16777216
  %v1_645f = sdiv i32 %sext, 16777216
  %v5_645f = call i32 @function_10122(i32 %v1_645f, i32 %v1_644a, i32 0)
  %v3_6470 = trunc i32 %v1_645f to i8
  %v5_6478 = icmp eq i8 %v3_6470, 0
  store i1 %v5_6478, i1* @zf, align 1
  %v1_647a = icmp eq i1 %v5_6478, false
  br i1 %v1_647a, label %dec_label_pc_65ae, label %dec_label_pc_6480

dec_label_pc_6480:                                ; preds = %dec_label_pc_6430
  %v2_6480 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_6480, i32* @eax, align 4
  %sext10 = mul i32 %v2_6480, 16777216
  %v1_649d = sdiv i32 %sext10, 16777216
  %v7_649d = call i32 @function_1017d(i32 %v1_649d, i32 %v1_645f, i32 0, i32 0)
  %v3_64ae = trunc i32 %v1_649d to i8
  %v5_64b6 = icmp eq i8 %v3_64ae, 0
  %v1_64b8 = icmp eq i1 %v5_64b6, false
  br i1 %v1_64b8, label %dec_label_pc_65ae, label %dec_label_pc_64be

dec_label_pc_64be:                                ; preds = %dec_label_pc_6480
  %v2_64be = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_64be, i32* @eax, align 4
  %sext13 = mul i32 %v2_64be, 16777216
  %v1_64db = sdiv i32 %sext13, 16777216
  %v8_64db = call i32 @function_101f7(i32 %v1_64db, i32 %v1_645f, i32 0, i32 0)
  %v4_64f4 = trunc i32 %v1_64db to i8
  %v5_64f4 = icmp eq i8 %v4_64f4, 0
  %v1_64f6 = icmp eq i1 %v5_64f4, false
  br i1 %v1_64f6, label %dec_label_pc_65ae, label %dec_label_pc_64fc

dec_label_pc_64fc:                                ; preds = %dec_label_pc_64be
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %stack_var_-17, align 1
  %v2_6502 = ptrtoint i8* %stack_var_-17 to i32
  %v4_650d = trunc i32 %v2_6502 to i8
  %v5_650d = icmp eq i8 %v4_650d, 0
  %v1_650f = icmp eq i1 %v5_650d, false
  br label %dec_label_pc_656c

dec_label_pc_6502:                                ; preds = %dec_label_pc_65a1
  br i1 %v1_650f, label %dec_label_pc_6502.dec_label_pc_6551_crit_edge, label %dec_label_pc_6511

dec_label_pc_6502.dec_label_pc_6551_crit_edge:    ; preds = %dec_label_pc_6502
  %v3_6551.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6551

dec_label_pc_6511:                                ; preds = %dec_label_pc_6502
  store i32 %v1_649d, i32* @eax, align 4
  %v3_651f = call i32 @function_10313(i32 %v1_649d, i32 0)
  %v1_6534 = xor i32 %v3_651f, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_6534 = trunc i32 %v1_6534 to i8
  %v5_6537 = icmp eq i8 %v4_6534, 0
  %v3_6546.pre = load i8, i8* %stack_var_-17, align 1
  %v5_654d163 = icmp eq i8 %v3_6546.pre, ptrtoint (i8** @global_var_1.1176 to i8)
  %v1_654f164 = icmp eq i1 %v5_654d163, false
  br i1 %v1_654f164, label %dec_label_pc_6529, label %dec_label_pc_6551.loopexit

dec_label_pc_6529:                                ; preds = %dec_label_pc_6511, %dec_label_pc_6542
  br i1 %v5_6537, label %dec_label_pc_6542, label %dec_label_pc_65ae.loopexit

dec_label_pc_6542:                                ; preds = %dec_label_pc_6529
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %stack_var_-17, align 1
  br i1 icmp ne (i8 trunc (i32 xor (i32 zext (i8 ptrtoint (i8** @global_var_1.1176 to i8) to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)) to i8), i8 0), label %dec_label_pc_6529, label %dec_label_pc_6546.dec_label_pc_6551.loopexit_crit_edge

dec_label_pc_6546.dec_label_pc_6551.loopexit_crit_edge: ; preds = %dec_label_pc_6542
  br label %dec_label_pc_6551.loopexit

dec_label_pc_6551.loopexit:                       ; preds = %dec_label_pc_6546.dec_label_pc_6551.loopexit_crit_edge, %dec_label_pc_6511
  %v3_6546.lcssa = phi i8 [ ptrtoint (i8** @global_var_1.1176 to i8), %dec_label_pc_6546.dec_label_pc_6551.loopexit_crit_edge ], [ %v3_6546.pre, %dec_label_pc_6511 ]
  br label %dec_label_pc_6551

dec_label_pc_6551:                                ; preds = %dec_label_pc_6502.dec_label_pc_6551_crit_edge, %dec_label_pc_6551.loopexit
  %v3_6551 = phi i8 [ %v3_6551.pre, %dec_label_pc_6502.dec_label_pc_6551_crit_edge ], [ %v3_6546.lcssa, %dec_label_pc_6551.loopexit ]
  %v5_6555 = icmp eq i8 %v3_6551, 0
  br i1 %v5_6555, label %dec_label_pc_656c, label %dec_label_pc_6559

dec_label_pc_6559:                                ; preds = %dec_label_pc_6551
  store i32 %v1_649d, i32* @eax, align 4
  %v3_6567 = call i32 @function_102d0(i32 %v1_649d, i32 0)
  %v3_656c.pr.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_656c

dec_label_pc_656c:                                ; preds = %dec_label_pc_6559, %dec_label_pc_6551, %dec_label_pc_64fc
  %v3_656c = phi i8 [ ptrtoint (i8** @global_var_1.1176 to i8), %dec_label_pc_64fc ], [ 0, %dec_label_pc_6551 ], [ %v3_656c.pr.pre, %dec_label_pc_6559 ]
  %v5_6570 = icmp eq i8 %v3_656c, 0
  br i1 %v5_6570, label %dec_label_pc_659c, label %dec_label_pc_6574

dec_label_pc_6574:                                ; preds = %dec_label_pc_656c
  store i32 %v1_649d, i32* @eax, align 4
  %v5_6589 = call i32 @function_10271(i32 %v1_649d, i32 %v1_64db, i32 0)
  %v1_658e = xor i32 %v5_6589, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_658e = trunc i32 %v1_658e to i8
  %v5_6591 = icmp eq i8 %v4_658e, 0
  br i1 %v5_6591, label %dec_label_pc_659c, label %dec_label_pc_65a1

dec_label_pc_659c:                                ; preds = %dec_label_pc_6574, %dec_label_pc_656c
  br label %dec_label_pc_65a1

dec_label_pc_65a1:                                ; preds = %dec_label_pc_6574, %dec_label_pc_659c
  %storemerge21 = phi i8 [ 0, %dec_label_pc_659c ], [ ptrtoint (i8** @global_var_1.1176 to i8), %dec_label_pc_6574 ]
  %v5_65a1 = icmp eq i8 %storemerge21, 0
  %v1_65a3 = icmp eq i1 %v5_65a1, false
  br i1 %v1_65a3, label %dec_label_pc_6502, label %dec_label_pc_65ae

dec_label_pc_65ae.loopexit:                       ; preds = %dec_label_pc_6529
  br label %dec_label_pc_65ae

dec_label_pc_65ae:                                ; preds = %dec_label_pc_65a1, %dec_label_pc_65ae.loopexit, %dec_label_pc_6430, %dec_label_pc_6480, %dec_label_pc_64be
  %storemerge = phi i32 [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_64be ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_6480 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_6430 ], [ 0, %dec_label_pc_65ae.loopexit ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_65a1 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_65ba

bb:                                               ; preds = %dec_label_pc_65ae
  %v1_65b8 = call i32 @function_65bf()
  br label %dec_label_pc_65ba

dec_label_pc_65ba:                                ; preds = %bb, %dec_label_pc_65ae
  %v2_65b8 = phi i32 [ %v1_65b8, %bb ], [ %storemerge, %dec_label_pc_65ae ]
  ret i32 %v2_65b8

; uselistorder directives
  uselistorder i8 %v3_6546.pre, { 1, 0 }
  uselistorder i32 %v1_64db, { 2, 1, 0 }
  uselistorder i32 %v1_649d, { 7, 6, 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_645f, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-17, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_65ae, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_65a1, { 1, 0 }
  uselistorder label %dec_label_pc_6551, { 1, 0 }
  uselistorder label %dec_label_pc_6529, { 1, 0 }
}

define i32 @function_65bf() local_unnamed_addr {
dec_label_pc_65bf:
  %v0_65c0 = load i32, i32* @eax, align 4
  ret i32 %v0_65c0
}

define i32 @_ZN12CBlockHeaderC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_65c2:
  %v1_65dc = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_65dc, i32* @eax, align 4
  %v2_65e2 = call i32 @function_8ca2(i32 %v1_65dc)
  %v1_65ea = add i32 %arg1, 36
  store i32 %v1_65ea, i32* @eax, align 4
  %v2_65f0 = call i32 @function_8ca2(i32 %v1_65ea)
  store i32 %arg1, i32* @eax, align 4
  %v2_65fb = call i32 @function_cbd6(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_660c

bb:                                               ; preds = %dec_label_pc_65c2
  %v1_660a = call i32 @function_6611()
  br label %dec_label_pc_660c

dec_label_pc_660c:                                ; preds = %bb, %dec_label_pc_65c2
  %v2_660a = phi i32 [ %v1_660a, %bb ], [ 0, %dec_label_pc_65c2 ]
  ret i32 %v2_660a

; uselistorder directives
  uselistorder i32 (i32)* @function_8ca2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_6611() local_unnamed_addr {
dec_label_pc_6611:
  %v0_6612 = load i32, i32* @eax, align 4
  ret i32 %v0_6612
}

define i32 @_ZN12CBlockHeader7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_6614:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 2, i32* %arg1, align 4
  %v1_6637 = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_6637, i32* @eax, align 4
  %v4_664d = call i32 @function_8dce(i32 %v1_6637, i32 0, i32 0)
  %v1_6655 = add i32 %tmp102, 36
  store i32 %v1_6655, i32* @eax, align 4
  %v4_666b = call i32 @function_8dce(i32 %v1_6655, i32 0, i32 0)
  %v1_6673 = add i32 %tmp102, 68
  %v2_6673 = inttoptr i32 %v1_6673 to i32*
  store i32 0, i32* %v2_6673, align 4
  %v1_667d = add i32 %tmp102, 72
  %v2_667d = inttoptr i32 %v1_667d to i32*
  store i32 0, i32* %v2_667d, align 4
  %v1_6687 = add i32 %tmp102, 76
  %v2_6687 = inttoptr i32 %v1_6687 to i32*
  store i32 0, i32* %v2_6687, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8dce, { 1, 0 }
}

define i32 @_ZNK12CChainParams16HashGenesisBlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_66a2:
  %v1_66bc = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_66bc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_66cb

bb:                                               ; preds = %dec_label_pc_66a2
  %v2_66c9 = call i32 @function_66d0(i32 %arg1)
  br label %dec_label_pc_66cb

dec_label_pc_66cb:                                ; preds = %bb, %dec_label_pc_66a2
  %v3_66c9 = phi i32 [ %v2_66c9, %bb ], [ %v1_66bc, %dec_label_pc_66a2 ]
  ret i32 %v3_66c9
}

define i32 @function_66d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_66d0:
  %v0_66d1 = load i32, i32* @eax, align 4
  ret i32 %v0_66d1
}

define i32 @_ZNK13CDiskBlockPos16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_66d2:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-40, align 4
  %v1_671c = call i32 @function_ff7d(i32 %arg1)
  store i32 %v1_671c, i32* @eax, align 4
  %v2_6721 = ptrtoint i32* %stack_var_-32 to i32
  %v2_672b = call i32 @function_ffaa(i32 %v2_6721, i32 %v1_671c)
  %v0_6730 = load i32, i32* @esp, align 4
  %v10_6730 = icmp eq i32 %v0_6730, 4
  store i1 %v10_6730, i1* @zf, align 1
  store i32 %v2_6721, i32* @eax, align 4
  %v2_6739 = call i32 @function_fff1(i32 %v2_6721)
  %v0_673e = load i32, i32* %esi.global-to-local, align 4
  %v2_6756 = ptrtoint i32* %stack_var_-40 to i32
  %sext = mul i32 %v0_673e, 16777216
  %v6_675c = sdiv i32 %sext, 16777216
  %v7_675c = call i32 @function_10715(i32 %v2_6756, i32 %v2_6739, i32 %arg2, i32 %arg3, i32 %v6_675c)
  %v1_6767 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_676d = call i32 @function_fb4d(i32 %v1_6767)
  store i32 %v2_676d, i32* @eax, align 4
  %v2_6772 = ptrtoint i32* %stack_var_-28 to i32
  %v3_677c = call i32 @function_fb7a(i32 %v2_6772, i32 %v2_676d)
  %v0_6781 = load i32, i32* @esp, align 4
  %v5_6781 = icmp ult i32 %v0_6781, 4
  store i1 %v5_6781, i1* @cf, align 1
  store i32 %v2_6772, i32* @eax, align 4
  %v1_678a = call i32 @function_fbc1(i32 %v2_6772)
  %v0_678f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_6756, i32* @eax, align 4
  %v6_67ab = call i32 @function_10771(i32 %v2_6756, i32 %v1_678a, i32 %arg2, i32 %arg3, i32 %v0_678f)
  %v5_67b0 = add i32 %v6_67ab, %v7_675c
  store i32 %v5_67b0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_67c2

bb:                                               ; preds = %dec_label_pc_66d2
  %v2_67c0 = call i32 @function_67c7(i32 %v5_67b0)
  br label %dec_label_pc_67c2

dec_label_pc_67c2:                                ; preds = %bb, %dec_label_pc_66d2
  %v3_67c0 = phi i32 [ %v2_67c0, %bb ], [ %v5_67b0, %dec_label_pc_66d2 ]
  ret i32 %v3_67c0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_67c7(i32 %arg1) local_unnamed_addr {
dec_label_pc_67c7:
  %v0_67cd = load i32, i32* @eax, align 4
  ret i32 %v0_67cd
}

define i32 @_ZNK10CDiskTxPos16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_67ce:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v0_6814 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_682a = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_682a, i32* @eax, align 4
  %sext = mul i32 %v0_6814, 16777216
  %v5_6830 = sdiv i32 %sext, 16777216
  %v6_6830 = call i32 @function_108c9(i32 %v2_682a, i32 %arg1, i32 %arg2, i32 %arg3, i32 %v5_6830)
  %v1_683b = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_683b, i32* @eax, align 4
  %v1_6841 = call i32 @function_fc49(i32 %v1_683b)
  store i32 %v1_6841, i32* @eax, align 4
  %v2_6846 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_6846, i32* %edx.global-to-local, align 4
  %v2_6850 = call i32 @function_fc76(i32 %v2_6846, i32 %v1_6841)
  store i32 %v2_6846, i32* @eax, align 4
  %v1_685e = call i32 @function_fcbd(i32 %v2_6846)
  %v0_6863 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v5_687f = call i32 @function_1086d(i32 %v2_682a, i32 %v1_685e, i32 %arg2, i32 %arg3, i32 %v0_6863)
  %v5_6884 = add i32 %v5_687f, %v6_6830
  store i32 %v5_6884, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_6896

bb:                                               ; preds = %dec_label_pc_67ce
  %v2_6894 = call i32 @function_689b(i32 %v5_6884)
  br label %dec_label_pc_6896

dec_label_pc_6896:                                ; preds = %bb, %dec_label_pc_67ce
  %v3_6894 = phi i32 [ %v2_6894, %bb ], [ %v5_6884, %dec_label_pc_67ce ]
  ret i32 %v3_6894

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_689b(i32 %arg1) local_unnamed_addr {
dec_label_pc_689b:
  %v0_689f = load i32, i32* @eax, align 4
  ret i32 %v0_689f
}

define i32 @_ZNK14CBlockFileInfo16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_68a0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp100 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-48 = alloca i32, align 4
  %tmp103 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-52 = alloca i32, align 4
  %tmp106 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-56 = alloca i32, align 4
  %tmp109 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_68a3 = load i32, i32* %edi.global-to-local, align 4
  %v0_68a5 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-76, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_68eb = call i32 @function_fd1b(i32 %arg1)
  store i32 %v1_68eb, i32* @eax, align 4
  %v2_68f0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_68fa = call i32 @function_fd48(i32 %v2_68f0, i32 %v1_68eb)
  store i32 %v2_68f0, i32* @eax, align 4
  %v2_6908 = call i32 @function_fd8f(i32 %v2_68f0)
  %v0_690f = load i32, i32* %ebx.global-to-local, align 4
  %v2_6925 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_6925, i32* @eax, align 4
  %sext = mul i32 %v0_690f, 16777216
  %v6_692b = sdiv i32 %sext, 16777216
  %v7_692b = call i32 @function_1093f(i32 %v2_6925, i32 %v2_6908, i32 %arg2, i32 %arg3, i32 %v6_692b)
  %v1_6936 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_6936, i32* @eax, align 4
  %v2_693c = call i32 @function_fd1b(i32 %v1_6936)
  store i32 %v2_693c, i32* @eax, align 4
  %v2_6941 = ptrtoint i32* %stack_var_-64 to i32
  %v3_694b = call i32 @function_fd48(i32 %v2_6941, i32 %v2_693c)
  store i32 %v2_6941, i32* @eax, align 4
  %v1_6959 = call i32 @function_fd8f(i32 %v2_6941)
  %v0_6960 = load i32, i32* @esi, align 4
  store i32 %v2_6925, i32* @eax, align 4
  %v6_697e = call i32 @function_1093f(i32 %v2_6925, i32 %v1_6959, i32 %arg2, i32 %arg3, i32 %v0_6960)
  %v5_6983 = add i32 %v6_697e, %v7_692b
  %v1_6989 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_6989, i32* @eax, align 4
  %v1_698f = call i32 @function_fd1b(i32 %v1_6989)
  store i32 %v1_698f, i32* @eax, align 4
  %v2_6994 = ptrtoint i32* %stack_var_-60 to i32
  %v3_699e = call i32 @function_fd48(i32 %v2_6994, i32 %v1_698f)
  store i32 %v2_6994, i32* @eax, align 4
  %v1_69ac = call i32 @function_fd8f(i32 %v2_6994)
  %v4_69b1 = zext i8 %tmp109 to i32
  store i32 %v2_6925, i32* @eax, align 4
  %v6_69d1 = call i32 @function_1093f(i32 %v2_6925, i32 %v1_69ac, i32 %arg2, i32 %arg3, i32 %v4_69b1)
  %v5_69d6 = add i32 %v5_6983, %v6_69d1
  %v1_69dc = add i32 %arg1, 12
  store i32 %v1_69dc, i32* @eax, align 4
  %v1_69e2 = call i32 @function_fd1b(i32 %v1_69dc)
  store i32 %v1_69e2, i32* @eax, align 4
  %v2_69e7 = ptrtoint i32* %stack_var_-56 to i32
  %v2_69f1 = call i32 @function_fd48(i32 %v2_69e7, i32 %v1_69e2)
  store i32 %v2_69e7, i32* @eax, align 4
  %v1_69ff = call i32 @function_fd8f(i32 %v2_69e7)
  %v4_6a04 = zext i8 %tmp106 to i32
  store i32 %v2_6925, i32* @eax, align 4
  %v6_6a24 = call i32 @function_1093f(i32 %v2_6925, i32 %v1_69ff, i32 %arg2, i32 %arg3, i32 %v4_6a04)
  %v5_6a29 = add i32 %v5_69d6, %v6_6a24
  %v1_6a2f = add i32 %arg1, 16
  store i32 %v1_6a2f, i32* @eax, align 4
  %v1_6a35 = call i32 @function_fd1b(i32 %v1_6a2f)
  store i32 %v1_6a35, i32* @eax, align 4
  %v2_6a3a = ptrtoint i32* %stack_var_-52 to i32
  %v2_6a44 = call i32 @function_fd48(i32 %v2_6a3a, i32 %v1_6a35)
  store i32 %v2_6a3a, i32* @eax, align 4
  %v1_6a52 = call i32 @function_fd8f(i32 %v2_6a3a)
  %v4_6a57 = zext i8 %tmp103 to i32
  store i32 %v2_6925, i32* @eax, align 4
  %v6_6a77 = call i32 @function_1093f(i32 %v2_6925, i32 %v1_6a52, i32 %arg2, i32 %arg3, i32 %v4_6a57)
  %v5_6a7c = add i32 %v5_6a29, %v6_6a77
  %v1_6a82 = add i32 %arg1, 20
  %v1_6a88 = call i32 @function_ff76(i32 %v1_6a82)
  store i32 %v1_6a88, i32* @eax, align 4
  %v2_6a8d = ptrtoint i32* %stack_var_-48 to i32
  %v2_6a97 = call i32 @function_ffa3(i32 %v2_6a8d, i32 %v1_6a88)
  store i32 %v2_6a8d, i32* @eax, align 4
  %v1_6aa5 = call i32 @function_ffea(i32 %v2_6a8d)
  %v4_6aaa = zext i8 %tmp100 to i32
  %v5_6aca = call i32 @__stack_chk_fail.423(i32 %v2_6925, i32 %v1_6aa5, i32 %arg2, i32 %arg3, i32 %v4_6aaa)
  %v5_6acf = add i32 %v5_6a7c, %v5_6aca
  %v1_6ad5 = add i32 %arg1, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v1_6adb = call i32 @function_ff76(i32 %v1_6ad5)
  store i32 %v1_6adb, i32* @eax, align 4
  %v2_6ae0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_6aea = call i32 @function_ffa3(i32 %v2_6ae0, i32 %v1_6adb)
  store i32 %v2_6ae0, i32* @eax, align 4
  %v1_6af8 = call i32 @function_ffea(i32 %v2_6ae0)
  %v0_6afd = load i32, i32* %edi.global-to-local, align 4
  %v5_6b1b = call i32 @__stack_chk_fail.423(i32 %v2_6925, i32 %v1_6af8, i32 %arg2, i32 %arg3, i32 %v0_6afd)
  %v5_6b20 = add i32 %v5_6acf, %v5_6b1b
  store i32 %v0_68a5, i32* %ebx.global-to-local, align 4
  store i32 %v0_68a3, i32* %edi.global-to-local, align 4
  ret i32 %v5_6b20

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @__stack_chk_fail.423, { 1, 0 }
  uselistorder i32 (i32)* @function_ffea, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_ffa3, { 1, 0 }
  uselistorder i32 (i32)* @function_ff76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1093f, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fd8f, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_fd48, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fd1b, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN11CBlockIndexC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_6b40:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_6b5a = add i32 %tmp102, ptrtoint (i8** @global_var_18.1179 to i32)
  store i32 %v1_6b5a, i32* @eax, align 4
  %v2_6b60 = call i32 @function_9220(i32 %v1_6b5a)
  %v1_6b68 = add i32 %tmp102, 72
  store i32 %v1_6b68, i32* @eax, align 4
  %v2_6b6e = call i32 @function_9220(i32 %v1_6b68)
  store i32 0, i32* %arg1, align 4
  %v1_6b7f = add i32 %tmp102, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_6b7f = inttoptr i32 %v1_6b7f to i32*
  store i32 0, i32* %v2_6b7f, align 4
  %v1_6b89 = add i32 %tmp102, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_6b89 = inttoptr i32 %v1_6b89 to i32*
  store i32 0, i32* %v2_6b89, align 4
  %v1_6b93 = add i32 %tmp102, 12
  %v2_6b93 = inttoptr i32 %v1_6b93 to i32*
  store i32 0, i32* %v2_6b93, align 4
  %v1_6b9d = add i32 %tmp102, 16
  %v2_6b9d = inttoptr i32 %v1_6b9d to i32*
  store i32 0, i32* %v2_6b9d, align 4
  %v1_6ba7 = add i32 %tmp102, 20
  %v2_6ba7 = inttoptr i32 %v1_6ba7 to i32*
  store i32 0, i32* %v2_6ba7, align 4
  %v4_6bc7 = call i32 @function_92fa(i32 %v1_6b5a, i32 0, i32 0)
  %v1_6bcf = add i32 %tmp102, 56
  %v2_6bcf = inttoptr i32 %v1_6bcf to i32*
  store i32 0, i32* %v2_6bcf, align 4
  %v1_6bd9 = add i32 %tmp102, 60
  %v2_6bd9 = inttoptr i32 %v1_6bd9 to i32*
  store i32 0, i32* %v2_6bd9, align 4
  %v1_6be3 = add i32 %tmp102, 64
  %v2_6be3 = inttoptr i32 %v1_6be3 to i32*
  store i32 0, i32* %v2_6be3, align 4
  %v1_6bed = add i32 %tmp102, 68
  %v2_6bed = inttoptr i32 %v1_6bed to i32*
  store i32 0, i32* %v2_6bed, align 4
  %v4_6c0d = call i32 @function_92fa(i32 %v1_6b68, i32 0, i32 0)
  %v1_6c15 = add i32 %tmp102, 104
  %v2_6c15 = inttoptr i32 %v1_6c15 to i32*
  store i32 0, i32* %v2_6c15, align 4
  %v1_6c1f = add i32 %tmp102, 108
  %v2_6c1f = inttoptr i32 %v1_6c1f to i32*
  store i32 0, i32* %v2_6c1f, align 4
  %v1_6c29 = add i32 %tmp102, 112
  %v2_6c29 = inttoptr i32 %v1_6c29 to i32*
  store i32 0, i32* %v2_6c29, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6c3c

bb:                                               ; preds = %dec_label_pc_6b40
  %v1_6c3a = call i32 @function_6c41()
  br label %dec_label_pc_6c3c

dec_label_pc_6c3c:                                ; preds = %bb, %dec_label_pc_6b40
  %v2_6c3a = phi i32 [ %v1_6c3a, %bb ], [ 0, %dec_label_pc_6b40 ]
  ret i32 %v2_6c3a

; uselistorder directives
  uselistorder i32 %tmp102, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_92fa, { 1, 0 }
  uselistorder i32 (i32)* @function_9220, { 1, 0 }
}

define i32 @function_6c41() local_unnamed_addr {
dec_label_pc_6c41:
  %v0_6c42 = load i32, i32* @eax, align 4
  ret i32 %v0_6c42
}

define i32 @_ZNK11CBlockIndex7GetAlgoEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_6c44:
  %v1_6c5e = add i32 %arg1, 68
  %v2_6c5e = inttoptr i32 %v1_6c5e to i32*
  %v3_6c5e = load i32, i32* %v2_6c5e, align 4
  store i32 %v3_6c5e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6c75

bb:                                               ; preds = %dec_label_pc_6c44
  %v2_6c73 = call i32 @function_6c7a(i32 %v3_6c5e)
  br label %dec_label_pc_6c75

dec_label_pc_6c75:                                ; preds = %bb, %dec_label_pc_6c44
  %v3_6c73 = phi i32 [ %v2_6c73, %bb ], [ %v3_6c5e, %dec_label_pc_6c44 ]
  ret i32 %v3_6c73
}

define i32 @function_6c7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_6c7a:
  %v0_6c7b = load i32, i32* @eax, align 4
  ret i32 %v0_6c7b
}

define i32 @_ZNK11CBlockIndex12GetBlockHashEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6c7c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_6c9c = inttoptr i32 %arg2 to i32*
  %v2_6c9c = load i32, i32* %v1_6c9c, align 4
  store i32 %v2_6c9c, i32* %edx.global-to-local, align 4
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  %v1_6ca1 = inttoptr i32 %v2_6c9c to i32*
  %v2_6ca1 = load i32, i32* %v1_6ca1, align 4
  store i32 %v2_6ca1, i32* %arg1, align 4
  %v1_6ca5 = add i32 %v2_6c9c, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_6ca5 = inttoptr i32 %v1_6ca5 to i32*
  %v3_6ca5 = load i32, i32* %v2_6ca5, align 4
  %v1_6ca8 = load i32, i32* %eax.global-to-local, align 4
  %v2_6ca8 = add i32 %v1_6ca8, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_6ca8 = inttoptr i32 %v2_6ca8 to i32*
  store i32 %v3_6ca5, i32* %v3_6ca8, align 4
  %v0_6cab = load i32, i32* %edx.global-to-local, align 4
  %v1_6cab = add i32 %v0_6cab, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_6cab = inttoptr i32 %v1_6cab to i32*
  %v3_6cab = load i32, i32* %v2_6cab, align 4
  %v1_6cae = load i32, i32* %eax.global-to-local, align 4
  %v2_6cae = add i32 %v1_6cae, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_6cae = inttoptr i32 %v2_6cae to i32*
  store i32 %v3_6cab, i32* %v3_6cae, align 4
  %v0_6cb1 = load i32, i32* %edx.global-to-local, align 4
  %v1_6cb1 = add i32 %v0_6cb1, 12
  %v2_6cb1 = inttoptr i32 %v1_6cb1 to i32*
  %v3_6cb1 = load i32, i32* %v2_6cb1, align 4
  %v1_6cb4 = load i32, i32* %eax.global-to-local, align 4
  %v2_6cb4 = add i32 %v1_6cb4, 12
  %v3_6cb4 = inttoptr i32 %v2_6cb4 to i32*
  store i32 %v3_6cb1, i32* %v3_6cb4, align 4
  %v0_6cb7 = load i32, i32* %edx.global-to-local, align 4
  %v1_6cb7 = add i32 %v0_6cb7, 16
  %v2_6cb7 = inttoptr i32 %v1_6cb7 to i32*
  %v3_6cb7 = load i32, i32* %v2_6cb7, align 4
  %v1_6cba = load i32, i32* %eax.global-to-local, align 4
  %v2_6cba = add i32 %v1_6cba, 16
  %v3_6cba = inttoptr i32 %v2_6cba to i32*
  store i32 %v3_6cb7, i32* %v3_6cba, align 4
  %v0_6cbd = load i32, i32* %edx.global-to-local, align 4
  %v1_6cbd = add i32 %v0_6cbd, 20
  %v2_6cbd = inttoptr i32 %v1_6cbd to i32*
  %v3_6cbd = load i32, i32* %v2_6cbd, align 4
  %v1_6cc0 = load i32, i32* %eax.global-to-local, align 4
  %v2_6cc0 = add i32 %v1_6cc0, 20
  %v3_6cc0 = inttoptr i32 %v2_6cc0 to i32*
  store i32 %v3_6cbd, i32* %v3_6cc0, align 4
  %v0_6cc3 = load i32, i32* %edx.global-to-local, align 4
  %v1_6cc3 = add i32 %v0_6cc3, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_6cc3 = inttoptr i32 %v1_6cc3 to i32*
  %v3_6cc3 = load i32, i32* %v2_6cc3, align 4
  %v1_6cc6 = load i32, i32* %eax.global-to-local, align 4
  %v2_6cc6 = add i32 %v1_6cc6, ptrtoint (i8** @global_var_18.1179 to i32)
  %v3_6cc6 = inttoptr i32 %v2_6cc6 to i32*
  store i32 %v3_6cc3, i32* %v3_6cc6, align 4
  %v0_6cc9 = load i32, i32* %edx.global-to-local, align 4
  %v1_6cc9 = add i32 %v0_6cc9, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_6cc9 = inttoptr i32 %v1_6cc9 to i32*
  %v3_6cc9 = load i32, i32* %v2_6cc9, align 4
  %v1_6ccc = load i32, i32* %eax.global-to-local, align 4
  %v2_6ccc = add i32 %v1_6ccc, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v3_6ccc = inttoptr i32 %v2_6ccc to i32*
  store i32 %v3_6cc9, i32* %v3_6ccc, align 4
  store i32 %tmp6, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_6cde

bb:                                               ; preds = %dec_label_pc_6c7c
  %v3_6cdc = call i32 @function_6ce3(i32 %arg2, i32 %tmp6)
  store i32 %v3_6cdc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6cde

dec_label_pc_6cde:                                ; preds = %bb, %dec_label_pc_6c7c
  %v4_6cdc = phi i32 [ %v3_6cdc, %bb ], [ %tmp6, %dec_label_pc_6c7c ]
  ret i32 %v4_6cdc

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_6ce3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6ce3:
  %v0_6ce4 = load i32, i32* @eax, align 4
  ret i32 %v0_6ce4
}

define i32 @_ZNK11CBlockIndex18GetNextInMainChainEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_6ce8:
  %v1_6d03 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_6d03 = inttoptr i32 %v1_6d03 to i32*
  %v3_6d03 = load i32, i32* %v2_6d03, align 4
  ret i32 %v3_6d03
}

define i32 @function_6d36() local_unnamed_addr {
dec_label_pc_6d36:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @eax, align 4
  %v1_6d3b = add i32 %tmp92, -12
  %v2_6d3b = inttoptr i32 %v1_6d3b to i32*
  %v3_6d3b = load i32, i32* %v2_6d3b, align 4
  %v1_6d3e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6d3e = icmp eq i32 %v1_6d3e, %v3_6d3b
  br i1 %v3_6d3e, label %bb, label %dec_label_pc_6d47

bb:                                               ; preds = %dec_label_pc_6d36
  %v1_6d45 = call i32 @function_6d4c()
  br label %dec_label_pc_6d47

dec_label_pc_6d47:                                ; preds = %bb, %dec_label_pc_6d36
  %v2_6d45 = phi i32 [ %v1_6d45, %bb ], [ 0, %dec_label_pc_6d36 ]
  ret i32 %v2_6d45
}

define i32 @function_6d4c() local_unnamed_addr {
dec_label_pc_6d4c:
  %v0_6d51 = load i32, i32* @eax, align 4
  ret i32 %v0_6d51
}

define i32 @_ZNK11CBlockIndex10CheckIndexEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_6d52:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_6d70 = call i32 @function_d996(i32 %arg1)
  %v10_6d78 = icmp eq i32 %v1_6d70, 0
  %v1_6d7c = icmp eq i1 %v10_6d78, false
  br i1 %v1_6d7c, label %bb, label %dec_label_pc_6d7e

bb:                                               ; preds = %dec_label_pc_6d52
  %v3_6d7c = call i32 @function_6de2(i32 %v1_6d70)
  br label %dec_label_pc_6d7e

dec_label_pc_6d7e:                                ; preds = %bb, %dec_label_pc_6d52
  %v1_6d81 = add i32 %arg1, 108
  %v2_6d81 = inttoptr i32 %v1_6d81 to i32*
  %v3_6d81 = load i32, i32* %v2_6d81, align 4
  store i32 %v3_6d81, i32* @ebx, align 4
  %v2_6d84 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_6d84, i32* @eax, align 4
  %v1_6d91 = call i32 @function_d9ce(i32 %v2_6d84)
  ret i32 %tmp1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_6de0() local_unnamed_addr {
dec_label_pc_6de0:
  %eax.global-to-local = alloca i32, align 4
  %v0_6de0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6de0
}

define i32 @function_6de2(i32 %arg1) local_unnamed_addr {
dec_label_pc_6de2:
  ret i32 ptrtoint (i8** @global_var_1.1176 to i32)
}

define i32 @_ZNK11CBlockIndex8ToStringEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6dfe:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_6e1e = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_6e1e, i32* @eax, align 4
  %v2_6e2b = call i32 @function_da7a(i32 %v2_6e1e, i32 %arg2)
  %v2_6e33 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_6e33, i32* @eax, align 4
  store i32 %v2_6e1e, i32* @edx, align 4
  %v2_6e40 = call i32 @function_11110(i32 %v2_6e33, i32 %v2_6e1e)
  ret i32 %v2_6e33
}

define i32 @function_6eda() local_unnamed_addr {
dec_label_pc_6eda:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_6eda = load i32, i32* %ebx.global-to-local, align 4
  %v1_6eda = add i32 %v0_6eda, 1435219013
  %v2_6eda = inttoptr i32 %v1_6eda to i32*
  %v3_6eda = load i32, i32* %v2_6eda, align 4
  %v4_6eda = add i32 %v3_6eda, -1
  store i32 %v4_6eda, i32* %v2_6eda, align 4
  %v0_6ee2 = load i32, i32* %edx.global-to-local, align 4
  %v1_6ee2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6ee2 = xor i32 %v1_6ee2, %v0_6ee2
  %v3_6ee2 = icmp eq i32 %v2_6ee2, 0
  store i32 %v2_6ee2, i32* %edx.global-to-local, align 4
  br i1 %v3_6ee2, label %bb, label %dec_label_pc_6eea

bb:                                               ; preds = %dec_label_pc_6eda
  %v1_6ee8 = call i32 @function_6f17()
  store i32 %v1_6ee8, i32* @eax, align 4
  br label %dec_label_pc_6eea

dec_label_pc_6eea:                                ; preds = %bb, %dec_label_pc_6eda
  %v0_6eea = call i32 @function_6f12()
  ret i32 %v0_6eea
}

define i32 @function_6eed() local_unnamed_addr {
dec_label_pc_6eed:
  %eax.global-to-local = alloca i32, align 4
  %v0_6eed = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6eed
}

define i32 @function_6ef9() local_unnamed_addr {
dec_label_pc_6ef9:
  %v0_6ef9 = call i32 @function_6efd()
  ret i32 %v0_6ef9
}

define i32 @function_6efb() local_unnamed_addr {
dec_label_pc_6efb:
  %eax.global-to-local = alloca i32, align 4
  %v0_6efb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6efb
}

define i32 @function_6efd() local_unnamed_addr {
dec_label_pc_6efd:
  %v0_6f08 = load i32, i32* @ebx, align 4
  ret i32 %v0_6f08
}

define i32 @function_6f12() local_unnamed_addr {
dec_label_pc_6f12:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f17() local_unnamed_addr {
dec_label_pc_6f17:
  %v0_6f1e = load i32, i32* @eax, align 4
  ret i32 %v0_6f1e
}

define i32 @_ZN15CDiskBlockIndexC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_6f22:
  %v1_6f3f = call i32 @function_da62(i32 %arg1)
  %v1_6f47 = add i32 %arg1, 116
  %v1_6f4d = call i32 @_Unwind_Resume.853(i32 %v1_6f47)
  %v3_6f6b = call i32 @function_96dc(i32 %v1_6f47, i32 0, i32 0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_6f7c

bb:                                               ; preds = %dec_label_pc_6f22
  %v1_6f7a = call i32 @function_6f81()
  br label %dec_label_pc_6f7c

dec_label_pc_6f7c:                                ; preds = %bb, %dec_label_pc_6f22
  %v2_6f7a = phi i32 [ %v1_6f7a, %bb ], [ 0, %dec_label_pc_6f22 ]
  ret i32 %v2_6f7a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_6f81() local_unnamed_addr {
dec_label_pc_6f81:
  %v0_6f82 = load i32, i32* @eax, align 4
  ret i32 %v0_6f82
}

define i32 @_ZNK15CDiskBlockIndex16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_6f84:
  ret i32 0
}

define i32 @function_6fb6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6fb6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_6fb6 = load i32, i32* @ebp, align 4
  %v1_6fb6 = add i32 %v0_6fb6, -36
  %v2_6fb6 = inttoptr i32 %v1_6fb6 to i32*
  store i32 0, i32* %v2_6fb6, align 4
  %v0_6fbd = load i32, i32* @ebp, align 4
  %v1_6fbd = add i32 %v0_6fbd, -80
  %v2_6fbd = inttoptr i32 %v1_6fbd to i32*
  %v3_6fbd = load i32, i32* %v2_6fbd, align 4
  store i32 %v3_6fbd, i32* %eax.global-to-local, align 4
  %v2_6fc0 = add i32 %v0_6fbd, -72
  %v3_6fc0 = inttoptr i32 %v2_6fc0 to i32*
  store i32 %v3_6fbd, i32* %v3_6fc0, align 4
  %v0_6fc3 = load i32, i32* @ebp, align 4
  %v1_6fc3 = add i32 %v0_6fc3, -84
  %v2_6fc3 = inttoptr i32 %v1_6fc3 to i32*
  %v3_6fc3 = load i32, i32* %v2_6fc3, align 4
  store i32 %v3_6fc3, i32* %eax.global-to-local, align 4
  %v2_6fc6 = add i32 %v0_6fc3, -68
  %v3_6fc6 = inttoptr i32 %v2_6fc6 to i32*
  store i32 %v3_6fc3, i32* %v3_6fc6, align 4
  %v0_6fc9 = load i32, i32* @ebp, align 4
  %v1_6fc9 = add i32 %v0_6fc9, -80
  %v2_6fc9 = inttoptr i32 %v1_6fc9 to i32*
  %v3_6fc9 = load i32, i32* %v2_6fc9, align 4
  %v1_6fcc = and i32 %v3_6fc9, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_6fcc = icmp eq i32 %v1_6fcc, 0
  store i32 %v1_6fcc, i32* %eax.global-to-local, align 4
  %v1_6fd1 = icmp eq i1 %v2_6fcc, false
  br i1 %v1_6fd1, label %dec_label_pc_7023, label %dec_label_pc_6fd3

dec_label_pc_6fd3:                                ; preds = %dec_label_pc_6fb6
  %v1_6fd3 = add i32 %v0_6fc9, -84
  %v2_6fd3 = inttoptr i32 %v1_6fd3 to i32*
  %v3_6fd3 = load i32, i32* %v2_6fd3, align 4
  store i32 %v3_6fd3, i32* %ebx.global-to-local, align 4
  store i32 %v1_6fd3, i32* %eax.global-to-local, align 4
  %v1_6fdc = call i32 @function_1082f(i32 %v1_6fd3)
  store i32 %v1_6fdc, i32* @eax, align 4
  %v0_6fe1 = load i32, i32* @ebp, align 4
  %v1_6fe1 = add i32 %v0_6fe1, -64
  store i32 %v1_6fe1, i32* %edx.global-to-local, align 4
  %v2_6feb = call i32 @function_1085c(i32 %v1_6fe1, i32 %v1_6fdc)
  %v0_6ff3 = load i32, i32* @ebp, align 4
  %v1_6ff3 = add i32 %v0_6ff3, -64
  store i32 %v1_6ff3, i32* %eax.global-to-local, align 4
  store i32 %v1_6ff3, i32* %stack_var_-4, align 4
  store i32 %v1_6ff3, i32* %edx.global-to-local, align 4
  %v0_7000 = load i32, i32* @esi, align 4
  store i32 %v0_7000, i32* %ecx.global-to-local, align 4
  %v0_7006 = load i32, i32* %ebx.global-to-local, align 4
  %v1_700a = add i32 %v0_6ff3, -80
  %v2_700a = inttoptr i32 %v1_700a to i32*
  %v3_700a = load i32, i32* %v2_700a, align 4
  %v1_7015 = add i32 %v0_6ff3, -72
  store i32 %v1_7015, i32* @eax, align 4
  store i32 %v1_7015, i32* %stack_var_-4, align 4
  %sext = mul i32 %v0_7000, 16777216
  %v5_701b = sdiv i32 %sext, 16777216
  %v6_701b = call i32 @function_10fc7(i32 %v1_7015, i32 %v1_6ff3, i32 %v3_700a, i32 %v0_7006, i32 %v5_701b)
  store i32 %v6_701b, i32* %eax.global-to-local, align 4
  %v0_7020 = load i32, i32* @ebp, align 4
  %v1_7020 = add i32 %v0_7020, -36
  %v2_7020 = inttoptr i32 %v1_7020 to i32*
  %v3_7020 = load i32, i32* %v2_7020, align 4
  %v5_7020 = add i32 %v3_7020, %v6_701b
  store i32 %v5_7020, i32* %v2_7020, align 4
  %v0_7023.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_7023

dec_label_pc_7023:                                ; preds = %dec_label_pc_6fd3, %dec_label_pc_6fb6
  %v0_7023 = phi i32 [ %v0_7023.pre, %dec_label_pc_6fd3 ], [ %v0_6fc9, %dec_label_pc_6fb6 ]
  %v1_7023 = add i32 %v0_7023, -84
  %v2_7023 = inttoptr i32 %v1_7023 to i32*
  %v3_7023 = load i32, i32* %v2_7023, align 4
  store i32 %v3_7023, i32* %ebx.global-to-local, align 4
  %v1_7026 = add i32 %v0_7023, -76
  %v2_7026 = inttoptr i32 %v1_7026 to i32*
  %v3_7026 = load i32, i32* %v2_7026, align 4
  %v1_7029 = add i32 %v3_7026, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_7029, i32* %eax.global-to-local, align 4
  store i32 %v1_7029, i32* %stack_var_-4, align 4
  %v1_702f = call i32 @function_1082f(i32 %v1_7029)
  store i32 %v1_702f, i32* @eax, align 4
  %v0_7034 = load i32, i32* @ebp, align 4
  %v1_7034 = add i32 %v0_7034, -60
  store i32 %v1_7034, i32* %edx.global-to-local, align 4
  store i32 %v1_7034, i32* %stack_var_-4, align 4
  %v2_703e = call i32 @function_1085c(i32 %v1_7034, i32 %v1_702f)
  %v0_7046 = load i32, i32* @ebp, align 4
  %v1_7046 = add i32 %v0_7046, -60
  store i32 %v1_7046, i32* %stack_var_-8, align 4
  store i32 %v1_7046, i32* %edx.global-to-local, align 4
  %v0_7053 = load i32, i32* @edi, align 4
  store i32 %v0_7053, i32* %eax.global-to-local, align 4
  %v0_7059 = load i32, i32* %ebx.global-to-local, align 4
  %v1_705d = add i32 %v0_7046, -80
  %v2_705d = inttoptr i32 %v1_705d to i32*
  %v3_705d = load i32, i32* %v2_705d, align 4
  store i32 %v1_7046, i32* %stack_var_-4, align 4
  %v1_7068 = add i32 %v0_7046, -72
  store i32 %v1_7068, i32* @eax, align 4
  store i32 %v1_7068, i32* %stack_var_-8, align 4
  %v5_706e = call i32 @function_10fc7(i32 %v1_7068, i32 %v1_7046, i32 %v3_705d, i32 %v0_7059, i32 %v0_7053)
  store i32 %v5_706e, i32* %eax.global-to-local, align 4
  %v0_7073 = load i32, i32* @ebp, align 4
  %v1_7073 = add i32 %v0_7073, -36
  %v2_7073 = inttoptr i32 %v1_7073 to i32*
  %v3_7073 = load i32, i32* %v2_7073, align 4
  %v5_7073 = add i32 %v3_7073, %v5_706e
  store i32 %v5_7073, i32* %v2_7073, align 4
  %v0_7076 = load i32, i32* @ebp, align 4
  %v1_7076 = add i32 %v0_7076, -84
  %v2_7076 = inttoptr i32 %v1_7076 to i32*
  %v3_7076 = load i32, i32* %v2_7076, align 4
  store i32 %v3_7076, i32* %ebx.global-to-local, align 4
  %v1_7079 = add i32 %v0_7076, -76
  %v2_7079 = inttoptr i32 %v1_7079 to i32*
  %v3_7079 = load i32, i32* %v2_7079, align 4
  %v1_707c = add i32 %v3_7079, 64
  store i32 %v1_707c, i32* @eax, align 4
  store i32 %v1_707c, i32* %stack_var_-8, align 4
  %v1_7082 = call i32 @function_103ff(i32 %v1_707c)
  store i32 %v1_7082, i32* @eax, align 4
  %v0_7087 = load i32, i32* @ebp, align 4
  %v1_7087 = add i32 %v0_7087, -56
  store i32 %v1_7087, i32* %edx.global-to-local, align 4
  store i32 %v1_7082, i32* %stack_var_-4, align 4
  store i32 %v1_7087, i32* %stack_var_-8, align 4
  %v2_7091 = call i32 @function_1042c(i32 %v1_7087, i32 %v1_7082)
  %v0_7099 = load i32, i32* @ebp, align 4
  %v1_7099 = add i32 %v0_7099, -56
  store i32 %v1_7099, i32* @eax, align 4
  store i32 %v1_7099, i32* %stack_var_-12, align 4
  %v1_709f = call i32 @function_10473(i32 %v1_7099)
  store i32 %v1_709f, i32* %eax.global-to-local, align 4
  store i32 %v1_709f, i32* %edx.global-to-local, align 4
  %v0_70a6 = load i32, i32* @ebp, align 4
  %v1_70a6 = add i32 %v0_70a6, -95
  %v2_70a6 = inttoptr i32 %v1_70a6 to i8*
  %v3_70a6 = load i8, i8* %v2_70a6, align 1
  %v4_70a6 = zext i8 %v3_70a6 to i32
  store i32 %v4_70a6, i32* %ecx.global-to-local, align 4
  %v0_70ae = load i32, i32* @ebx, align 4
  %v1_70b2 = add i32 %v0_70a6, -80
  %v2_70b2 = inttoptr i32 %v1_70b2 to i32*
  %v3_70b2 = load i32, i32* %v2_70b2, align 4
  store i32 %v3_70b2, i32* %stack_var_-4, align 4
  store i32 %v1_709f, i32* %stack_var_-8, align 4
  %v1_70bd = add i32 %v0_70a6, -72
  store i32 %v1_70bd, i32* @eax, align 4
  store i32 %v1_70bd, i32* %stack_var_-12, align 4
  %v5_70c3 = call i32 @function_11023(i32 %v1_70bd, i32 %v1_709f, i32 %v3_70b2, i32 %v0_70ae, i32 %v4_70a6)
  store i32 %v5_70c3, i32* %eax.global-to-local, align 4
  %v0_70c8 = load i32, i32* @ebp, align 4
  %v1_70c8 = add i32 %v0_70c8, -36
  %v2_70c8 = inttoptr i32 %v1_70c8 to i32*
  %v3_70c8 = load i32, i32* %v2_70c8, align 4
  %v5_70c8 = add i32 %v3_70c8, %v5_70c3
  store i32 %v5_70c8, i32* %v2_70c8, align 4
  %v0_70cb = load i32, i32* @ebp, align 4
  %v1_70cb = add i32 %v0_70cb, -84
  %v2_70cb = inttoptr i32 %v1_70cb to i32*
  %v3_70cb = load i32, i32* %v2_70cb, align 4
  store i32 %v3_70cb, i32* %ebx.global-to-local, align 4
  %v1_70ce = add i32 %v0_70cb, -76
  %v2_70ce = inttoptr i32 %v1_70ce to i32*
  %v3_70ce = load i32, i32* %v2_70ce, align 4
  %v1_70d1 = add i32 %v3_70ce, 56
  store i32 %v1_70d1, i32* @eax, align 4
  store i32 %v1_70d1, i32* %stack_var_-12, align 4
  %v1_70d7 = call i32 @function_103ff(i32 %v1_70d1)
  store i32 %v1_70d7, i32* @eax, align 4
  %v0_70dc = load i32, i32* @ebp, align 4
  %v1_70dc = add i32 %v0_70dc, -52
  store i32 %v1_70dc, i32* %edx.global-to-local, align 4
  store i32 %v1_70d7, i32* %stack_var_-8, align 4
  store i32 %v1_70dc, i32* %stack_var_-12, align 4
  %v2_70e6 = call i32 @function_1042c(i32 %v1_70dc, i32 %v1_70d7)
  %v0_70ee = load i32, i32* @ebp, align 4
  %v1_70ee = add i32 %v0_70ee, -52
  store i32 %v1_70ee, i32* @eax, align 4
  store i32 %v1_70ee, i32* %stack_var_-16, align 4
  %v1_70f4 = call i32 @function_10473(i32 %v1_70ee)
  store i32 %v1_70f4, i32* %eax.global-to-local, align 4
  store i32 %v1_70f4, i32* %edx.global-to-local, align 4
  %v0_70fb = load i32, i32* @ebp, align 4
  %v1_70fb = add i32 %v0_70fb, -94
  %v2_70fb = inttoptr i32 %v1_70fb to i8*
  %v3_70fb = load i8, i8* %v2_70fb, align 1
  %v4_70fb = zext i8 %v3_70fb to i32
  store i32 %v4_70fb, i32* %eax.global-to-local, align 4
  %v0_7103 = load i32, i32* @ebx, align 4
  store i32 %v0_7103, i32* %stack_var_-4, align 4
  %v1_7107 = add i32 %v0_70fb, -80
  %v2_7107 = inttoptr i32 %v1_7107 to i32*
  %v3_7107 = load i32, i32* %v2_7107, align 4
  store i32 %v3_7107, i32* %stack_var_-8, align 4
  store i32 %v1_70f4, i32* %stack_var_-12, align 4
  %v1_7112 = add i32 %v0_70fb, -72
  store i32 %v1_7112, i32* @eax, align 4
  store i32 %v1_7112, i32* %stack_var_-16, align 4
  %v5_7118 = call i32 @function_11023(i32 %v1_7112, i32 %v1_70f4, i32 %v3_7107, i32 %v0_7103, i32 %v4_70fb)
  store i32 %v5_7118, i32* %eax.global-to-local, align 4
  %v0_711d = load i32, i32* @ebp, align 4
  %v1_711d = add i32 %v0_711d, -36
  %v2_711d = inttoptr i32 %v1_711d to i32*
  %v3_711d = load i32, i32* %v2_711d, align 4
  %v5_711d = add i32 %v3_711d, %v5_7118
  store i32 %v5_711d, i32* %v2_711d, align 4
  %v0_7120 = load i32, i32* @ebp, align 4
  %v1_7120 = add i32 %v0_7120, -76
  %v2_7120 = inttoptr i32 %v1_7120 to i32*
  %v3_7120 = load i32, i32* %v2_7120, align 4
  store i32 %v3_7120, i32* %eax.global-to-local, align 4
  %v1_7123 = add i32 %v3_7120, 64
  %v2_7123 = inttoptr i32 %v1_7123 to i32*
  %v3_7123 = load i32, i32* %v2_7123, align 4
  %v1_7126 = and i32 %v3_7123, 24
  %v2_7126 = icmp eq i32 %v1_7126, 0
  store i32 %v1_7126, i32* %eax.global-to-local, align 4
  br i1 %v2_7126, label %dec_label_pc_7182, label %dec_label_pc_712d

dec_label_pc_712d:                                ; preds = %dec_label_pc_7023
  %v1_712d = add i32 %v0_7120, -84
  %v2_712d = inttoptr i32 %v1_712d to i32*
  %v3_712d = load i32, i32* %v2_712d, align 4
  store i32 %v3_712d, i32* %ebx.global-to-local, align 4
  %v3_7130 = load i32, i32* %v2_7120, align 4
  %v1_7133 = add i32 %v3_7130, 12
  store i32 %v1_7133, i32* %eax.global-to-local, align 4
  store i32 %v1_7133, i32* %stack_var_-16, align 4
  %v1_7139 = call i32 @function_1082f(i32 %v1_7133)
  store i32 %v1_7139, i32* @eax, align 4
  %v0_713e = load i32, i32* @ebp, align 4
  %v1_713e = add i32 %v0_713e, -48
  store i32 %v1_713e, i32* %edx.global-to-local, align 4
  store i32 %v1_7139, i32* %stack_var_-12, align 4
  store i32 %v1_713e, i32* %stack_var_-16, align 4
  %v2_7148 = call i32 @function_1085c(i32 %v1_713e, i32 %v1_7139)
  %v0_7150 = load i32, i32* @ebp, align 4
  %v1_7150 = add i32 %v0_7150, -48
  store i32 %v1_7150, i32* %eax.global-to-local, align 4
  store i32 %v1_7150, i32* %stack_var_-20, align 4
  store i32 %v1_7150, i32* %edx.global-to-local, align 4
  %v1_715d = add i32 %v0_7150, -93
  %v2_715d = inttoptr i32 %v1_715d to i8*
  %v3_715d = load i8, i8* %v2_715d, align 1
  %v4_715d = zext i8 %v3_715d to i32
  store i32 %v4_715d, i32* %ecx.global-to-local, align 4
  store i32 %v4_715d, i32* %stack_var_-4, align 4
  %v0_7165 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_7165, i32* %stack_var_-8, align 4
  %v1_7169 = add i32 %v0_7150, -80
  %v2_7169 = inttoptr i32 %v1_7169 to i32*
  %v3_7169 = load i32, i32* %v2_7169, align 4
  store i32 %v3_7169, i32* %stack_var_-12, align 4
  store i32 %v1_7150, i32* %stack_var_-16, align 4
  %v1_7174 = add i32 %v0_7150, -72
  store i32 %v1_7174, i32* @eax, align 4
  store i32 %v1_7174, i32* %stack_var_-20, align 4
  %v5_717a = call i32 @function_10fc7(i32 %v1_7174, i32 %v1_7150, i32 %v3_7169, i32 %v0_7165, i32 %v4_715d)
  store i32 %v5_717a, i32* %eax.global-to-local, align 4
  %v0_717f = load i32, i32* @ebp, align 4
  %v1_717f = add i32 %v0_717f, -36
  %v2_717f = inttoptr i32 %v1_717f to i32*
  %v3_717f = load i32, i32* %v2_717f, align 4
  %v5_717f = add i32 %v3_717f, %v5_717a
  store i32 %v5_717f, i32* %v2_717f, align 4
  %v0_7182.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_7182

dec_label_pc_7182:                                ; preds = %dec_label_pc_712d, %dec_label_pc_7023
  %v0_718f = phi i32 [ %v0_7182.pre, %dec_label_pc_712d ], [ %v0_7120, %dec_label_pc_7023 ]
  %v1_7182 = add i32 %v0_718f, -76
  %v2_7182 = inttoptr i32 %v1_7182 to i32*
  %v3_7182 = load i32, i32* %v2_7182, align 4
  store i32 %v3_7182, i32* %eax.global-to-local, align 4
  %v1_7185 = add i32 %v3_7182, 64
  %v2_7185 = inttoptr i32 %v1_7185 to i32*
  %v3_7185 = load i32, i32* %v2_7185, align 4
  %v1_7188 = and i32 %v3_7185, 8
  %v2_7188 = icmp eq i32 %v1_7188, 0
  store i32 %v1_7188, i32* %eax.global-to-local, align 4
  br i1 %v2_7188, label %dec_label_pc_71e4, label %dec_label_pc_718f

dec_label_pc_718f:                                ; preds = %dec_label_pc_7182
  %v1_718f = add i32 %v0_718f, -84
  %v2_718f = inttoptr i32 %v1_718f to i32*
  %v3_718f = load i32, i32* %v2_718f, align 4
  store i32 %v3_718f, i32* %ebx.global-to-local, align 4
  %v3_7192 = load i32, i32* %v2_7182, align 4
  %v1_7195 = add i32 %v3_7192, 16
  store i32 %v1_7195, i32* @eax, align 4
  %v1_7198 = load i32, i32* @esp, align 4
  %v2_7198 = inttoptr i32 %v1_7198 to i32*
  store i32 %v1_7195, i32* %v2_7198, align 4
  %v0_719b = load i32, i32* %stack_var_-20, align 4
  %v1_719b = call i32 @function_103ff(i32 %v0_719b)
  store i32 %v1_719b, i32* @eax, align 4
  %v0_71a0 = load i32, i32* @ebp, align 4
  %v1_71a0 = add i32 %v0_71a0, -44
  store i32 %v1_71a0, i32* %edx.global-to-local, align 4
  %v1_71a3 = load i32, i32* @esp, align 4
  %v2_71a3 = add i32 %v1_71a3, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_71a3 = inttoptr i32 %v2_71a3 to i32*
  store i32 %v1_719b, i32* %v3_71a3, align 4
  %v0_71a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_71a7 = load i32, i32* @esp, align 4
  %v2_71a7 = inttoptr i32 %v1_71a7 to i32*
  store i32 %v0_71a7, i32* %v2_71a7, align 4
  %v0_71aa = load i32, i32* %stack_var_-20, align 4
  %v1_71aa = load i32, i32* %stack_var_-16, align 4
  %v2_71aa = call i32 @function_1042c(i32 %v0_71aa, i32 %v1_71aa)
  %v0_71af = load i32, i32* @esp, align 4
  %v1_71af = sub i32 %v0_71af, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_71b2 = load i32, i32* @ebp, align 4
  %v1_71b2 = add i32 %v0_71b2, -44
  store i32 %v1_71b2, i32* @eax, align 4
  %v2_71b5 = inttoptr i32 %v1_71af to i32*
  store i32 %v1_71b2, i32* %v2_71b5, align 4
  %v0_71b8 = load i32, i32* %stack_var_-20, align 4
  %v1_71b8 = call i32 @function_10473(i32 %v0_71b8)
  store i32 %v1_71b8, i32* %eax.global-to-local, align 4
  store i32 %v1_71b8, i32* %edx.global-to-local, align 4
  %v0_71bf = load i32, i32* @ebp, align 4
  %v1_71bf = add i32 %v0_71bf, -92
  %v2_71bf = inttoptr i32 %v1_71bf to i8*
  %v3_71bf = load i8, i8* %v2_71bf, align 1
  %v4_71bf = zext i8 %v3_71bf to i32
  store i32 %v4_71bf, i32* %eax.global-to-local, align 4
  %v2_71c3 = load i32, i32* @esp, align 4
  %v3_71c3 = add i32 %v2_71c3, 16
  %v4_71c3 = inttoptr i32 %v3_71c3 to i8*
  store i8 %v3_71bf, i8* %v4_71c3, align 1
  %v0_71c7 = load i32, i32* @ebx, align 4
  %v1_71c7 = load i32, i32* @esp, align 4
  %v2_71c7 = add i32 %v1_71c7, 12
  %v3_71c7 = inttoptr i32 %v2_71c7 to i32*
  store i32 %v0_71c7, i32* %v3_71c7, align 4
  %v0_71cb = load i32, i32* @ebp, align 4
  %v1_71cb = add i32 %v0_71cb, -80
  %v2_71cb = inttoptr i32 %v1_71cb to i32*
  %v3_71cb = load i32, i32* %v2_71cb, align 4
  %v1_71ce = load i32, i32* @esp, align 4
  %v2_71ce = add i32 %v1_71ce, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_71ce = inttoptr i32 %v2_71ce to i32*
  store i32 %v3_71cb, i32* %v3_71ce, align 4
  %v0_71d2 = load i32, i32* %edx.global-to-local, align 4
  %v1_71d2 = load i32, i32* @esp, align 4
  %v2_71d2 = add i32 %v1_71d2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_71d2 = inttoptr i32 %v2_71d2 to i32*
  store i32 %v0_71d2, i32* %v3_71d2, align 4
  %v0_71d6 = load i32, i32* @ebp, align 4
  %v1_71d6 = add i32 %v0_71d6, -72
  store i32 %v1_71d6, i32* @eax, align 4
  %v1_71d9 = load i32, i32* @esp, align 4
  %v2_71d9 = inttoptr i32 %v1_71d9 to i32*
  store i32 %v1_71d6, i32* %v2_71d9, align 4
  %v0_71dc = load i32, i32* %stack_var_-20, align 4
  %v1_71dc = load i32, i32* %stack_var_-16, align 4
  %v2_71dc = load i32, i32* %stack_var_-12, align 4
  %v3_71dc = load i32, i32* %stack_var_-8, align 4
  %v4_71dc = load i32, i32* %stack_var_-4, align 4
  %v5_71dc = call i32 @function_11023(i32 %v0_71dc, i32 %v1_71dc, i32 %v2_71dc, i32 %v3_71dc, i32 %v4_71dc)
  store i32 %v5_71dc, i32* %eax.global-to-local, align 4
  %v0_71e1 = load i32, i32* @ebp, align 4
  %v1_71e1 = add i32 %v0_71e1, -36
  %v2_71e1 = inttoptr i32 %v1_71e1 to i32*
  %v3_71e1 = load i32, i32* %v2_71e1, align 4
  %v5_71e1 = add i32 %v3_71e1, %v5_71dc
  store i32 %v5_71e1, i32* %v2_71e1, align 4
  %v0_71e4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_71e4

dec_label_pc_71e4:                                ; preds = %dec_label_pc_718f, %dec_label_pc_7182
  %v0_71f1 = phi i32 [ %v0_71e4.pre, %dec_label_pc_718f ], [ %v0_718f, %dec_label_pc_7182 ]
  %v1_71e4 = add i32 %v0_71f1, -76
  %v2_71e4 = inttoptr i32 %v1_71e4 to i32*
  %v3_71e4 = load i32, i32* %v2_71e4, align 4
  store i32 %v3_71e4, i32* %eax.global-to-local, align 4
  %v1_71e7 = add i32 %v3_71e4, 64
  %v2_71e7 = inttoptr i32 %v1_71e7 to i32*
  %v3_71e7 = load i32, i32* %v2_71e7, align 4
  %v1_71ea = and i32 %v3_71e7, 16
  %v2_71ea = icmp eq i32 %v1_71ea, 0
  store i32 %v1_71ea, i32* %eax.global-to-local, align 4
  br i1 %v2_71ea, label %dec_label_pc_7246, label %dec_label_pc_71f1

dec_label_pc_71f1:                                ; preds = %dec_label_pc_71e4
  %v1_71f1 = add i32 %v0_71f1, -84
  %v2_71f1 = inttoptr i32 %v1_71f1 to i32*
  %v3_71f1 = load i32, i32* %v2_71f1, align 4
  store i32 %v3_71f1, i32* %ebx.global-to-local, align 4
  %v3_71f4 = load i32, i32* %v2_71e4, align 4
  %v1_71f7 = add i32 %v3_71f4, 20
  store i32 %v1_71f7, i32* @eax, align 4
  %v1_71fa = load i32, i32* @esp, align 4
  %v2_71fa = inttoptr i32 %v1_71fa to i32*
  store i32 %v1_71f7, i32* %v2_71fa, align 4
  %v0_71fd = load i32, i32* %stack_var_-20, align 4
  %v1_71fd = call i32 @function_103ff(i32 %v0_71fd)
  store i32 %v1_71fd, i32* @eax, align 4
  %v0_7202 = load i32, i32* @ebp, align 4
  %v1_7202 = add i32 %v0_7202, -40
  store i32 %v1_7202, i32* %edx.global-to-local, align 4
  %v1_7205 = load i32, i32* @esp, align 4
  %v2_7205 = add i32 %v1_7205, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_7205 = inttoptr i32 %v2_7205 to i32*
  store i32 %v1_71fd, i32* %v3_7205, align 4
  %v0_7209 = load i32, i32* %edx.global-to-local, align 4
  %v1_7209 = load i32, i32* @esp, align 4
  %v2_7209 = inttoptr i32 %v1_7209 to i32*
  store i32 %v0_7209, i32* %v2_7209, align 4
  %v0_720c = load i32, i32* %stack_var_-20, align 4
  %v1_720c = load i32, i32* %stack_var_-16, align 4
  %v2_720c = call i32 @function_1042c(i32 %v0_720c, i32 %v1_720c)
  %v0_7211 = load i32, i32* @esp, align 4
  %v1_7211 = sub i32 %v0_7211, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_7214 = load i32, i32* @ebp, align 4
  %v1_7214 = add i32 %v0_7214, -40
  store i32 %v1_7214, i32* @eax, align 4
  %v2_7217 = inttoptr i32 %v1_7211 to i32*
  store i32 %v1_7214, i32* %v2_7217, align 4
  %v0_721a = load i32, i32* %stack_var_-20, align 4
  %v1_721a = call i32 @function_10473(i32 %v0_721a)
  store i32 %v1_721a, i32* %eax.global-to-local, align 4
  store i32 %v1_721a, i32* %edx.global-to-local, align 4
  %v0_7221 = load i32, i32* @ebp, align 4
  %v1_7221 = add i32 %v0_7221, -91
  %v2_7221 = inttoptr i32 %v1_7221 to i8*
  %v3_7221 = load i8, i8* %v2_7221, align 1
  %v4_7221 = zext i8 %v3_7221 to i32
  store i32 %v4_7221, i32* %ecx.global-to-local, align 4
  %v2_7225 = load i32, i32* @esp, align 4
  %v3_7225 = add i32 %v2_7225, 16
  %v4_7225 = inttoptr i32 %v3_7225 to i8*
  store i8 %v3_7221, i8* %v4_7225, align 1
  %v0_7229 = load i32, i32* @ebx, align 4
  %v1_7229 = load i32, i32* @esp, align 4
  %v2_7229 = add i32 %v1_7229, 12
  %v3_7229 = inttoptr i32 %v2_7229 to i32*
  store i32 %v0_7229, i32* %v3_7229, align 4
  %v0_722d = load i32, i32* @ebp, align 4
  %v1_722d = add i32 %v0_722d, -80
  %v2_722d = inttoptr i32 %v1_722d to i32*
  %v3_722d = load i32, i32* %v2_722d, align 4
  %v1_7230 = load i32, i32* @esp, align 4
  %v2_7230 = add i32 %v1_7230, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_7230 = inttoptr i32 %v2_7230 to i32*
  store i32 %v3_722d, i32* %v3_7230, align 4
  %v0_7234 = load i32, i32* %edx.global-to-local, align 4
  %v1_7234 = load i32, i32* @esp, align 4
  %v2_7234 = add i32 %v1_7234, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_7234 = inttoptr i32 %v2_7234 to i32*
  store i32 %v0_7234, i32* %v3_7234, align 4
  %v0_7238 = load i32, i32* @ebp, align 4
  %v1_7238 = add i32 %v0_7238, -72
  store i32 %v1_7238, i32* @eax, align 4
  %v1_723b = load i32, i32* @esp, align 4
  %v2_723b = inttoptr i32 %v1_723b to i32*
  store i32 %v1_7238, i32* %v2_723b, align 4
  %v0_723e = load i32, i32* %stack_var_-20, align 4
  %v1_723e = load i32, i32* %stack_var_-16, align 4
  %v2_723e = load i32, i32* %stack_var_-12, align 4
  %v3_723e = load i32, i32* %stack_var_-8, align 4
  %v4_723e = load i32, i32* %stack_var_-4, align 4
  %v5_723e = call i32 @function_11023(i32 %v0_723e, i32 %v1_723e, i32 %v2_723e, i32 %v3_723e, i32 %v4_723e)
  store i32 %v5_723e, i32* %eax.global-to-local, align 4
  %v0_7243 = load i32, i32* @ebp, align 4
  %v1_7243 = add i32 %v0_7243, -36
  %v2_7243 = inttoptr i32 %v1_7243 to i32*
  %v3_7243 = load i32, i32* %v2_7243, align 4
  %v5_7243 = add i32 %v3_7243, %v5_723e
  store i32 %v5_7243, i32* %v2_7243, align 4
  %v0_7246.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_7246

dec_label_pc_7246:                                ; preds = %dec_label_pc_71f1, %dec_label_pc_71e4
  %v0_724f = phi i32 [ %v0_7246.pre, %dec_label_pc_71f1 ], [ %v0_71f1, %dec_label_pc_71e4 ]
  %v1_7246 = add i32 %v0_724f, -84
  %v2_7246 = inttoptr i32 %v1_7246 to i32*
  %v3_7246 = load i32, i32* %v2_7246, align 4
  store i32 %v3_7246, i32* %ecx.global-to-local, align 4
  %v1_7249 = add i32 %v0_724f, -76
  %v2_7249 = inttoptr i32 %v1_7249 to i32*
  %v3_7249 = load i32, i32* %v2_7249, align 4
  store i32 %v3_7249, i32* %eax.global-to-local, align 4
  %v1_724c = add i32 %v3_7249, 68
  store i32 %v1_724c, i32* %edx.global-to-local, align 4
  %v1_724f = add i32 %v0_724f, -90
  %v2_724f = inttoptr i32 %v1_724f to i8*
  %v3_724f = load i8, i8* %v2_724f, align 1
  %v4_724f = zext i8 %v3_724f to i32
  store i32 %v4_724f, i32* %eax.global-to-local, align 4
  %v2_7253 = load i32, i32* @esp, align 4
  %v3_7253 = add i32 %v2_7253, 16
  %v4_7253 = inttoptr i32 %v3_7253 to i8*
  store i8 %v3_724f, i8* %v4_7253, align 1
  %v0_7257 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7257 = load i32, i32* @esp, align 4
  %v2_7257 = add i32 %v1_7257, 12
  %v3_7257 = inttoptr i32 %v2_7257 to i32*
  store i32 %v0_7257, i32* %v3_7257, align 4
  %v0_725b = load i32, i32* @ebp, align 4
  %v1_725b = add i32 %v0_725b, -80
  %v2_725b = inttoptr i32 %v1_725b to i32*
  %v3_725b = load i32, i32* %v2_725b, align 4
  %v1_725e = load i32, i32* @esp, align 4
  %v2_725e = add i32 %v1_725e, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_725e = inttoptr i32 %v2_725e to i32*
  store i32 %v3_725b, i32* %v3_725e, align 4
  %v0_7262 = load i32, i32* %edx.global-to-local, align 4
  %v1_7262 = load i32, i32* @esp, align 4
  %v2_7262 = add i32 %v1_7262, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_7262 = inttoptr i32 %v2_7262 to i32*
  store i32 %v0_7262, i32* %v3_7262, align 4
  %v0_7266 = load i32, i32* @ebp, align 4
  %v1_7266 = add i32 %v0_7266, -72
  store i32 %v1_7266, i32* @eax, align 4
  %v1_7269 = load i32, i32* @esp, align 4
  %v2_7269 = inttoptr i32 %v1_7269 to i32*
  store i32 %v1_7266, i32* %v2_7269, align 4
  %v0_726c = call i32 @function_10595()
  store i32 %v0_726c, i32* %eax.global-to-local, align 4
  %v0_7271 = load i32, i32* @ebp, align 4
  %v1_7271 = add i32 %v0_7271, -36
  %v2_7271 = inttoptr i32 %v1_7271 to i32*
  %v3_7271 = load i32, i32* %v2_7271, align 4
  %v5_7271 = add i32 %v3_7271, %v0_726c
  store i32 %v5_7271, i32* %v2_7271, align 4
  %v0_7274 = load i32, i32* @ebp, align 4
  %v1_7274 = add i32 %v0_7274, -84
  %v2_7274 = inttoptr i32 %v1_7274 to i32*
  %v3_7274 = load i32, i32* %v2_7274, align 4
  store i32 %v3_7274, i32* %ecx.global-to-local, align 4
  %v1_7277 = add i32 %v0_7274, -76
  %v2_7277 = inttoptr i32 %v1_7277 to i32*
  %v3_7277 = load i32, i32* %v2_7277, align 4
  store i32 %v3_7277, i32* %eax.global-to-local, align 4
  %v1_727a = add i32 %v3_7277, 116
  store i32 %v1_727a, i32* %edx.global-to-local, align 4
  %v1_727d = add i32 %v0_7274, -89
  %v2_727d = inttoptr i32 %v1_727d to i8*
  %v3_727d = load i8, i8* %v2_727d, align 1
  %v4_727d = zext i8 %v3_727d to i32
  store i32 %v4_727d, i32* %eax.global-to-local, align 4
  %v2_7281 = load i32, i32* @esp, align 4
  %v3_7281 = add i32 %v2_7281, 16
  %v4_7281 = inttoptr i32 %v3_7281 to i8*
  store i8 %v3_727d, i8* %v4_7281, align 1
  %v0_7285 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7285 = load i32, i32* @esp, align 4
  %v2_7285 = add i32 %v1_7285, 12
  %v3_7285 = inttoptr i32 %v2_7285 to i32*
  store i32 %v0_7285, i32* %v3_7285, align 4
  %v0_7289 = load i32, i32* @ebp, align 4
  %v1_7289 = add i32 %v0_7289, -80
  %v2_7289 = inttoptr i32 %v1_7289 to i32*
  %v3_7289 = load i32, i32* %v2_7289, align 4
  %v1_728c = load i32, i32* @esp, align 4
  %v2_728c = add i32 %v1_728c, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_728c = inttoptr i32 %v2_728c to i32*
  store i32 %v3_7289, i32* %v3_728c, align 4
  %v0_7290 = load i32, i32* %edx.global-to-local, align 4
  %v1_7290 = load i32, i32* @esp, align 4
  %v2_7290 = add i32 %v1_7290, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_7290 = inttoptr i32 %v2_7290 to i32*
  store i32 %v0_7290, i32* %v3_7290, align 4
  %v0_7294 = load i32, i32* @ebp, align 4
  %v1_7294 = add i32 %v0_7294, -72
  store i32 %v1_7294, i32* @eax, align 4
  %v1_7297 = load i32, i32* @esp, align 4
  %v2_7297 = inttoptr i32 %v1_7297 to i32*
  store i32 %v1_7294, i32* %v2_7297, align 4
  %v0_729a = call i32 @function_10eaa()
  store i32 %v0_729a, i32* %eax.global-to-local, align 4
  %v0_729f = load i32, i32* @ebp, align 4
  %v1_729f = add i32 %v0_729f, -36
  %v2_729f = inttoptr i32 %v1_729f to i32*
  %v3_729f = load i32, i32* %v2_729f, align 4
  %v5_729f = add i32 %v3_729f, %v0_729a
  store i32 %v5_729f, i32* %v2_729f, align 4
  %v0_72a2 = load i32, i32* @ebp, align 4
  %v1_72a2 = add i32 %v0_72a2, -84
  %v2_72a2 = inttoptr i32 %v1_72a2 to i32*
  %v3_72a2 = load i32, i32* %v2_72a2, align 4
  store i32 %v3_72a2, i32* %eax.global-to-local, align 4
  %v1_72a5 = add i32 %v0_72a2, -76
  %v2_72a5 = inttoptr i32 %v1_72a5 to i32*
  %v3_72a5 = load i32, i32* %v2_72a5, align 4
  %v1_72a8 = add i32 %v3_72a5, 72
  store i32 %v1_72a8, i32* %edx.global-to-local, align 4
  %v1_72ab = add i32 %v0_72a2, -88
  %v2_72ab = inttoptr i32 %v1_72ab to i8*
  %v3_72ab = load i8, i8* %v2_72ab, align 1
  %v4_72ab = zext i8 %v3_72ab to i32
  store i32 %v4_72ab, i32* %ecx.global-to-local, align 4
  %v2_72af = load i32, i32* @esp, align 4
  %v3_72af = add i32 %v2_72af, 16
  %v4_72af = inttoptr i32 %v3_72af to i8*
  store i8 %v3_72ab, i8* %v4_72af, align 1
  %v0_72b3 = load i32, i32* %eax.global-to-local, align 4
  %v1_72b3 = load i32, i32* @esp, align 4
  %v2_72b3 = add i32 %v1_72b3, 12
  %v3_72b3 = inttoptr i32 %v2_72b3 to i32*
  store i32 %v0_72b3, i32* %v3_72b3, align 4
  %v0_72b7 = load i32, i32* @ebp, align 4
  %v1_72b7 = add i32 %v0_72b7, -80
  %v2_72b7 = inttoptr i32 %v1_72b7 to i32*
  %v3_72b7 = load i32, i32* %v2_72b7, align 4
  %v1_72ba = load i32, i32* @esp, align 4
  %v2_72ba = add i32 %v1_72ba, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_72ba = inttoptr i32 %v2_72ba to i32*
  store i32 %v3_72b7, i32* %v3_72ba, align 4
  %v0_72be = load i32, i32* %edx.global-to-local, align 4
  %v1_72be = load i32, i32* @esp, align 4
  %v2_72be = add i32 %v1_72be, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_72be = inttoptr i32 %v2_72be to i32*
  store i32 %v0_72be, i32* %v3_72be, align 4
  %v0_72c2 = load i32, i32* @ebp, align 4
  %v1_72c2 = add i32 %v0_72c2, -72
  store i32 %v1_72c2, i32* @eax, align 4
  %v1_72c5 = load i32, i32* @esp, align 4
  %v2_72c5 = inttoptr i32 %v1_72c5 to i32*
  store i32 %v1_72c2, i32* %v2_72c5, align 4
  %v0_72c8 = call i32 @function_10eaa()
  store i32 %v0_72c8, i32* %eax.global-to-local, align 4
  %v0_72cd = load i32, i32* @ebp, align 4
  %v1_72cd = add i32 %v0_72cd, -36
  %v2_72cd = inttoptr i32 %v1_72cd to i32*
  %v3_72cd = load i32, i32* %v2_72cd, align 4
  %v5_72cd = add i32 %v3_72cd, %v0_72c8
  store i32 %v5_72cd, i32* %v2_72cd, align 4
  %v0_72d0 = load i32, i32* @ebp, align 4
  %v1_72d0 = add i32 %v0_72d0, -84
  %v2_72d0 = inttoptr i32 %v1_72d0 to i32*
  %v3_72d0 = load i32, i32* %v2_72d0, align 4
  store i32 %v3_72d0, i32* %eax.global-to-local, align 4
  %v1_72d3 = add i32 %v0_72d0, -76
  %v2_72d3 = inttoptr i32 %v1_72d3 to i32*
  %v3_72d3 = load i32, i32* %v2_72d3, align 4
  %v1_72d6 = add i32 %v3_72d3, 104
  store i32 %v1_72d6, i32* %edx.global-to-local, align 4
  %v1_72d9 = add i32 %v0_72d0, -87
  %v2_72d9 = inttoptr i32 %v1_72d9 to i8*
  %v3_72d9 = load i8, i8* %v2_72d9, align 1
  %v4_72d9 = zext i8 %v3_72d9 to i32
  store i32 %v4_72d9, i32* %ecx.global-to-local, align 4
  %v2_72dd = load i32, i32* @esp, align 4
  %v3_72dd = add i32 %v2_72dd, 16
  %v4_72dd = inttoptr i32 %v3_72dd to i8*
  store i8 %v3_72d9, i8* %v4_72dd, align 1
  %v0_72e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_72e1 = load i32, i32* @esp, align 4
  %v2_72e1 = add i32 %v1_72e1, 12
  %v3_72e1 = inttoptr i32 %v2_72e1 to i32*
  store i32 %v0_72e1, i32* %v3_72e1, align 4
  %v0_72e5 = load i32, i32* @ebp, align 4
  %v1_72e5 = add i32 %v0_72e5, -80
  %v2_72e5 = inttoptr i32 %v1_72e5 to i32*
  %v3_72e5 = load i32, i32* %v2_72e5, align 4
  %v1_72e8 = load i32, i32* @esp, align 4
  %v2_72e8 = add i32 %v1_72e8, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_72e8 = inttoptr i32 %v2_72e8 to i32*
  store i32 %v3_72e5, i32* %v3_72e8, align 4
  %v0_72ec = load i32, i32* %edx.global-to-local, align 4
  %v1_72ec = load i32, i32* @esp, align 4
  %v2_72ec = add i32 %v1_72ec, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_72ec = inttoptr i32 %v2_72ec to i32*
  store i32 %v0_72ec, i32* %v3_72ec, align 4
  %v0_72f0 = load i32, i32* @ebp, align 4
  %v1_72f0 = add i32 %v0_72f0, -72
  store i32 %v1_72f0, i32* %eax.global-to-local, align 4
  %v1_72f3 = load i32, i32* @esp, align 4
  %v2_72f3 = inttoptr i32 %v1_72f3 to i32*
  store i32 %v1_72f0, i32* %v2_72f3, align 4
  %v0_72fb = load i32, i32* @ebp, align 4
  %v1_72fb = add i32 %v0_72fb, -36
  %v2_72fb = inttoptr i32 %v1_72fb to i32*
  %v3_72fb = load i32, i32* %v2_72fb, align 4
  %v4_72fb = load i32, i32* %eax.global-to-local, align 4
  %v5_72fb = add i32 %v4_72fb, %v3_72fb
  store i32 %v5_72fb, i32* %v2_72fb, align 4
  %v0_72fe = load i32, i32* @ebp, align 4
  %v1_72fe = add i32 %v0_72fe, -84
  %v2_72fe = inttoptr i32 %v1_72fe to i32*
  %v3_72fe = load i32, i32* %v2_72fe, align 4
  store i32 %v3_72fe, i32* %eax.global-to-local, align 4
  %v1_7301 = add i32 %v0_72fe, -76
  %v2_7301 = inttoptr i32 %v1_7301 to i32*
  %v3_7301 = load i32, i32* %v2_7301, align 4
  %v1_7304 = add i32 %v3_7301, 108
  store i32 %v1_7304, i32* %edx.global-to-local, align 4
  %v1_7307 = add i32 %v0_72fe, -86
  %v2_7307 = inttoptr i32 %v1_7307 to i8*
  %v3_7307 = load i8, i8* %v2_7307, align 1
  %v4_7307 = zext i8 %v3_7307 to i32
  store i32 %v4_7307, i32* %ecx.global-to-local, align 4
  %v2_730b = load i32, i32* @esp, align 4
  %v3_730b = add i32 %v2_730b, 16
  %v4_730b = inttoptr i32 %v3_730b to i8*
  store i8 %v3_7307, i8* %v4_730b, align 1
  %v0_730f = load i32, i32* %eax.global-to-local, align 4
  %v1_730f = load i32, i32* @esp, align 4
  %v2_730f = add i32 %v1_730f, 12
  %v3_730f = inttoptr i32 %v2_730f to i32*
  store i32 %v0_730f, i32* %v3_730f, align 4
  %v0_7313 = load i32, i32* @ebp, align 4
  %v1_7313 = add i32 %v0_7313, -80
  %v2_7313 = inttoptr i32 %v1_7313 to i32*
  %v3_7313 = load i32, i32* %v2_7313, align 4
  %v1_7316 = load i32, i32* @esp, align 4
  %v2_7316 = add i32 %v1_7316, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_7316 = inttoptr i32 %v2_7316 to i32*
  store i32 %v3_7313, i32* %v3_7316, align 4
  %v0_731a = load i32, i32* %edx.global-to-local, align 4
  %v1_731a = load i32, i32* @esp, align 4
  %v2_731a = add i32 %v1_731a, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_731a = inttoptr i32 %v2_731a to i32*
  store i32 %v0_731a, i32* %v3_731a, align 4
  %v0_731e = load i32, i32* @ebp, align 4
  %v1_731e = add i32 %v0_731e, -72
  store i32 %v1_731e, i32* %eax.global-to-local, align 4
  %v1_7321 = load i32, i32* @esp, align 4
  %v2_7321 = inttoptr i32 %v1_7321 to i32*
  store i32 %v1_731e, i32* %v2_7321, align 4
  %v0_7329 = load i32, i32* @ebp, align 4
  %v1_7329 = add i32 %v0_7329, -36
  %v2_7329 = inttoptr i32 %v1_7329 to i32*
  %v3_7329 = load i32, i32* %v2_7329, align 4
  %v4_7329 = load i32, i32* %eax.global-to-local, align 4
  %v5_7329 = add i32 %v4_7329, %v3_7329
  store i32 %v5_7329, i32* %v2_7329, align 4
  %v0_732c = load i32, i32* @ebp, align 4
  %v1_732c = add i32 %v0_732c, -84
  %v2_732c = inttoptr i32 %v1_732c to i32*
  %v3_732c = load i32, i32* %v2_732c, align 4
  store i32 %v3_732c, i32* %eax.global-to-local, align 4
  %v1_732f = add i32 %v0_732c, -76
  %v2_732f = inttoptr i32 %v1_732f to i32*
  %v3_732f = load i32, i32* %v2_732f, align 4
  %v1_7332 = add i32 %v3_732f, 112
  store i32 %v1_7332, i32* %edx.global-to-local, align 4
  %v1_7335 = add i32 %v0_732c, -85
  %v2_7335 = inttoptr i32 %v1_7335 to i8*
  %v3_7335 = load i8, i8* %v2_7335, align 1
  %v4_7335 = zext i8 %v3_7335 to i32
  store i32 %v4_7335, i32* %ecx.global-to-local, align 4
  %v2_7339 = load i32, i32* @esp, align 4
  %v3_7339 = add i32 %v2_7339, 16
  %v4_7339 = inttoptr i32 %v3_7339 to i8*
  store i8 %v3_7335, i8* %v4_7339, align 1
  %v0_733d = load i32, i32* %eax.global-to-local, align 4
  %v1_733d = load i32, i32* @esp, align 4
  %v2_733d = add i32 %v1_733d, 12
  %v3_733d = inttoptr i32 %v2_733d to i32*
  store i32 %v0_733d, i32* %v3_733d, align 4
  %v0_7341 = load i32, i32* @ebp, align 4
  %v1_7341 = add i32 %v0_7341, -80
  %v2_7341 = inttoptr i32 %v1_7341 to i32*
  %v3_7341 = load i32, i32* %v2_7341, align 4
  %v1_7344 = load i32, i32* @esp, align 4
  %v2_7344 = add i32 %v1_7344, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_7344 = inttoptr i32 %v2_7344 to i32*
  store i32 %v3_7341, i32* %v3_7344, align 4
  %v0_7348 = load i32, i32* %edx.global-to-local, align 4
  %v1_7348 = load i32, i32* @esp, align 4
  %v2_7348 = add i32 %v1_7348, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_7348 = inttoptr i32 %v2_7348 to i32*
  store i32 %v0_7348, i32* %v3_7348, align 4
  %v0_734c = load i32, i32* @ebp, align 4
  %v1_734c = add i32 %v0_734c, -72
  store i32 %v1_734c, i32* %eax.global-to-local, align 4
  %v1_734f = load i32, i32* @esp, align 4
  %v2_734f = inttoptr i32 %v1_734f to i32*
  store i32 %v1_734c, i32* %v2_734f, align 4
  %v0_7357 = load i32, i32* @ebp, align 4
  %v1_7357 = add i32 %v0_7357, -36
  %v2_7357 = inttoptr i32 %v1_7357 to i32*
  %v3_7357 = load i32, i32* %v2_7357, align 4
  %v4_7357 = load i32, i32* %eax.global-to-local, align 4
  %v5_7357 = add i32 %v4_7357, %v3_7357
  store i32 %v5_7357, i32* %v2_7357, align 4
  %v0_735a = load i32, i32* @ebp, align 4
  %v1_735a = add i32 %v0_735a, -36
  %v2_735a = inttoptr i32 %v1_735a to i32*
  %v3_735a = load i32, i32* %v2_735a, align 4
  store i32 %v3_735a, i32* @eax, align 4
  %v1_735d = add i32 %v0_735a, -28
  %v2_735d = inttoptr i32 %v1_735d to i32*
  %v3_735d = load i32, i32* %v2_735d, align 4
  store i32 %v3_735d, i32* %edx.global-to-local, align 4
  %v1_7360 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7360 = xor i32 %v1_7360, %v3_735d
  %v3_7360 = icmp eq i32 %v2_7360, 0
  store i32 %v2_7360, i32* %edx.global-to-local, align 4
  br i1 %v3_7360, label %bb, label %dec_label_pc_7369

bb:                                               ; preds = %dec_label_pc_7246
  %v1_7367 = call i32 @function_736e()
  store i32 %v1_7367, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_7369

dec_label_pc_7369:                                ; preds = %bb, %dec_label_pc_7246
  %v2_7367 = phi i32 [ %v1_7367, %bb ], [ %v3_735a, %dec_label_pc_7246 ]
  ret i32 %v2_7367

; uselistorder directives
  uselistorder i32 %v0_724f, { 0, 2, 1 }
  uselistorder i32 %v1_7150, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_70f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_709f, { 1, 0, 2, 3 }
  uselistorder i32 %v1_7046, { 1, 0, 2, 3 }
  uselistorder i32 %v0_7023, { 1, 0 }
  uselistorder i32 %v0_6ff3, { 1, 0, 2 }
  uselistorder i32 %v1_6fd3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-20, { 0, 2, 4, 6, 1, 3, 5, 7, 8, 9 }
  uselistorder i32 ()* @function_10eaa, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_11023, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10473, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_103ff, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1085c, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1082f, { 2, 1, 0 }
}

define i32 @function_736e() local_unnamed_addr {
dec_label_pc_736e:
  %v0_736e = load i32, i32* @ebp, align 4
  %v1_7374 = inttoptr i32 %v0_736e to i32*
  %v2_7374 = load i32, i32* %v1_7374, align 4
  store i32 %v2_7374, i32* @ebp, align 4
  %v0_7375 = load i32, i32* @eax, align 4
  ret i32 %v0_7375
}

define i32 @_ZNK15CDiskBlockIndex12GetBlockHashEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7376:
  %stack_var_-96 = alloca i32, align 4
  %v2_7396 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_7396, i32* @eax, align 4
  %v1_739c = call i32 @function_d938(i32 %v2_7396)
  ret i32 %arg1
}

define i32 @function_7462() local_unnamed_addr {
dec_label_pc_7462:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7462 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7462 = sub i32 %v0_7462, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_7462, i32* %ecx.global-to-local, align 4
  %v0_7464 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7464
}

define i32 @_ZN10CCoinsViewD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7468:
  ret i32 %arg1
}

define i32 @function_749f() local_unnamed_addr {
dec_label_pc_749f:
  %v0_749f = load i32, i32* @ebp, align 4
  %v1_749f = add i32 %v0_749f, -12
  %v2_749f = inttoptr i32 %v1_749f to i32*
  %v3_749f = load i32, i32* %v2_749f, align 4
  %v1_74a2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_74a2 = xor i32 %v1_74a2, %v3_749f
  %v3_74a2 = icmp eq i32 %v2_74a2, 0
  store i32 %v2_74a2, i32* @eax, align 4
  br i1 %v3_74a2, label %bb, label %dec_label_pc_74ab

bb:                                               ; preds = %dec_label_pc_749f
  %v1_74a9 = call i32 @function_74b0()
  br label %dec_label_pc_74ab

dec_label_pc_74ab:                                ; preds = %bb, %dec_label_pc_749f
  %v2_74a9 = phi i32 [ %v1_74a9, %bb ], [ %v2_74a2, %dec_label_pc_749f ]
  ret i32 %v2_74a9
}

define i32 @function_74b0() local_unnamed_addr {
dec_label_pc_74b0:
  %v0_74b1 = load i32, i32* @eax, align 4
  ret i32 %v0_74b1
}

define i32 @_ZN10CCoinsViewD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_74b2:
  store i32 %arg1, i32* @eax, align 4
  %v1_74cf = call i32 @function_e91a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_74ef() local_unnamed_addr {
dec_label_pc_74ef:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_74ef = load i32, i32* %ecx.global-to-local, align 4
  %v1_74ef = sub i32 %v0_74ef, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_74ef, i32* %ecx.global-to-local, align 4
  %v0_74f1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_74f1
}

define i32 @_ZN7leveldb5SliceC1EPKcj(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_74f2:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_7523 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_7523 = inttoptr i32 %v2_7523 to i32*
  store i32 %arg3, i32* %v3_7523, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7532

bb:                                               ; preds = %dec_label_pc_74f2
  %v4_7530 = call i32 @function_7537(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_7532

dec_label_pc_7532:                                ; preds = %bb, %dec_label_pc_74f2
  %v5_7530 = phi i32 [ %v4_7530, %bb ], [ 0, %dec_label_pc_74f2 ]
  ret i32 %v5_7530
}

declare i32 @__stack_chk_fail.132(i32, i32) local_unnamed_addr

define i32 @function_7537(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_7537:
  %v0_7538 = load i32, i32* @eax, align 4
  ret i32 %v0_7538
}

define i32 @_ZN7leveldb5SliceC1ERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_753a:
  ret i32 %arg2
}

define i32 @function_7563() local_unnamed_addr {
dec_label_pc_7563:
  %eax.global-to-local = alloca i32, align 4
  %v0_7563 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7563
}

define i32 @function_7575() local_unnamed_addr {
dec_label_pc_7575:
  %eax.global-to-local = alloca i32, align 4
  %v0_7575 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7575
}

define i32 @function_758c() local_unnamed_addr {
dec_label_pc_758c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_758c = load i32, i32* %ecx.global-to-local, align 4
  %v1_758c = sub i32 %v0_758c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_758c, i32* %ecx.global-to-local, align 4
  %v0_758e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_758e
}

define i32 @_ZNK7leveldb5Slice4dataEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_7590:
  %stack_var_-4 = alloca i32, align 4
  %v4_7590 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_7590, i32* @ebp, align 4
  ret i32 %arg1
}

define i32 @function_759b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_759b:
  %v0_759d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_75a2 = load i32, i32* @ebp, align 4
  %v2_75a2 = add i32 %v1_75a2, -12
  %v3_75a2 = inttoptr i32 %v2_75a2 to i32*
  store i32 %v0_759d, i32* %v3_75a2, align 4
  %v0_75a7 = load i32, i32* @ebp, align 4
  %v1_75a7 = add i32 %v0_75a7, -28
  %v2_75a7 = inttoptr i32 %v1_75a7 to i32*
  %v3_75a7 = load i32, i32* %v2_75a7, align 4
  %v1_75aa = inttoptr i32 %v3_75a7 to i32*
  %v2_75aa = load i32, i32* %v1_75aa, align 4
  store i32 %v2_75aa, i32* @eax, align 4
  %v1_75ac = add i32 %v0_75a7, -12
  %v2_75ac = inttoptr i32 %v1_75ac to i32*
  %v3_75ac = load i32, i32* %v2_75ac, align 4
  %v1_75af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_75af = icmp eq i32 %v1_75af, %v3_75ac
  br i1 %v3_75af, label %bb, label %dec_label_pc_75b8

bb:                                               ; preds = %dec_label_pc_759b
  %v1_75b6 = call i32 @function_75bd()
  br label %dec_label_pc_75b8

dec_label_pc_75b8:                                ; preds = %bb, %dec_label_pc_759b
  %v2_75b6 = phi i32 [ %v1_75b6, %bb ], [ %v2_75aa, %dec_label_pc_759b ]
  ret i32 %v2_75b6
}

define i32 @function_75bd() local_unnamed_addr {
dec_label_pc_75bd:
  %v0_75be = load i32, i32* @eax, align 4
  ret i32 %v0_75be
}

define i32 @_ZNK7leveldb5Slice4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_75c0:
  %v1_75da = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_75da = inttoptr i32 %v1_75da to i32*
  %v3_75da = load i32, i32* %v2_75da, align 4
  store i32 %v3_75da, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_75e9

bb:                                               ; preds = %dec_label_pc_75c0
  %v2_75e7 = call i32 @function_75ee(i32 %arg1)
  br label %dec_label_pc_75e9

dec_label_pc_75e9:                                ; preds = %bb, %dec_label_pc_75c0
  %v3_75e7 = phi i32 [ %v2_75e7, %bb ], [ %v3_75da, %dec_label_pc_75c0 ]
  ret i32 %v3_75e7
}

define i32 @function_75ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_75ee:
  %v0_75ef = load i32, i32* @eax, align 4
  ret i32 %v0_75ef
}

define i32 @_ZN7leveldb6StatusD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_75f0:
  %v2_760a = load i32, i32* %arg1, align 4
  %v1_760c = icmp eq i32 %v2_760a, 0
  br i1 %v1_760c, label %bb, label %dec_label_pc_7610

bb:                                               ; preds = %dec_label_pc_75f0
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_760e = call i32 @function_761d(i32 %tmp100)
  br label %dec_label_pc_7610

dec_label_pc_7610:                                ; preds = %bb, %dec_label_pc_75f0
  %v2_7613 = load i32, i32* %arg1, align 4
  ret i32 %v2_7613

; uselistorder directives
  uselistorder i32* %arg1, { 0, 2, 1 }
}

define i32 @function_761d(i32 %arg1) local_unnamed_addr {
dec_label_pc_761d:
  %v0_761d = load i32, i32* @ebp, align 4
  %v1_761d = add i32 %v0_761d, -12
  %v2_761d = inttoptr i32 %v1_761d to i32*
  %v3_761d = load i32, i32* %v2_761d, align 4
  %v1_7620 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7620 = xor i32 %v1_7620, %v3_761d
  ret i32 %v2_7620
}

define i32 @_ZNK7leveldb6Status2okEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7630:
  %v2_764a = load i32, i32* %arg1, align 4
  %v1_764c = icmp eq i32 %v2_764a, 0
  %v1_764e = zext i1 %v1_764c to i32
  %v3_764e = and i32 %v2_764a, -256
  %v4_764e = or i32 %v1_764e, %v3_764e
  store i32 %v4_764e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_765d

bb:                                               ; preds = %dec_label_pc_7630
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_765b = call i32 @function_7662(i32 %tmp101)
  br label %dec_label_pc_765d

dec_label_pc_765d:                                ; preds = %bb, %dec_label_pc_7630
  %v3_765b = phi i32 [ %v2_765b, %bb ], [ %v4_764e, %dec_label_pc_7630 ]
  ret i32 %v3_765b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_7662(i32 %arg1) local_unnamed_addr {
dec_label_pc_7662:
  %v0_7663 = load i32, i32* @eax, align 4
  ret i32 %v0_7663
}

define i32 @_ZNK7leveldb6Status10IsNotFoundEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_7664:
  %v1_7681 = call i32 @function_ed04(i32 %arg1)
  %v10_7686 = icmp eq i32 %v1_7681, 1
  %v1_7689 = zext i1 %v10_7686 to i32
  %v3_7689 = and i32 %v1_7681, -256
  %v4_7689 = or i32 %v1_7689, %v3_7689
  store i32 %v4_7689, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7698

bb:                                               ; preds = %dec_label_pc_7664
  %v1_7696 = call i32 @function_769d()
  br label %dec_label_pc_7698

dec_label_pc_7698:                                ; preds = %bb, %dec_label_pc_7664
  %v2_7696 = phi i32 [ %v1_7696, %bb ], [ %v4_7689, %dec_label_pc_7664 ]
  ret i32 %v2_7696

; uselistorder directives
  uselistorder i32 %v1_7681, { 1, 0 }
}

define i32 @function_769d() local_unnamed_addr {
dec_label_pc_769d:
  %v0_769e = load i32, i32* @eax, align 4
  ret i32 %v0_769e
}

define i32 @_ZNK7leveldb6Status4codeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_76a0:
  %v2_76ba = load i32, i32* %arg1, align 4
  %v1_76bc = icmp eq i32 %v2_76ba, 0
  br i1 %v1_76bc, label %dec_label_pc_76d5, label %dec_label_pc_76c0

dec_label_pc_76c0:                                ; preds = %dec_label_pc_76a0
  %v2_76c3 = load i32, i32* %arg1, align 4
  %v1_76c5 = add i32 %v2_76c3, ptrtoint (i8** @global_var_4.1177 to i32)
  %v1_76c8 = inttoptr i32 %v1_76c5 to i8*
  %v2_76c8 = load i8, i8* %v1_76c8, align 1
  %v3_76c8 = zext i8 %v2_76c8 to i32
  br label %dec_label_pc_76d5

dec_label_pc_76d5:                                ; preds = %dec_label_pc_76a0, %dec_label_pc_76c0
  %storemerge = phi i32 [ %v3_76c8, %dec_label_pc_76c0 ], [ 0, %dec_label_pc_76a0 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_76e1

bb:                                               ; preds = %dec_label_pc_76d5
  %v1_76df = call i32 @function_76e6()
  br label %dec_label_pc_76e1

dec_label_pc_76e1:                                ; preds = %bb, %dec_label_pc_76d5
  %v2_76df = phi i32 [ %v1_76df, %bb ], [ %storemerge, %dec_label_pc_76d5 ]
  ret i32 %v2_76df

; uselistorder directives
  uselistorder label %dec_label_pc_76d5, { 1, 0 }
}

define i32 @function_76e6() local_unnamed_addr {
dec_label_pc_76e6:
  %v0_76e7 = load i32, i32* @eax, align 4
  ret i32 %v0_76e7
}

define i32 @_ZN13CLevelDBBatchC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_76e8:
  ret i32 %arg1
}

define i32 @function_771a() local_unnamed_addr {
dec_label_pc_771a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_771a = load i32, i32* %ecx.global-to-local, align 4
  %v1_771a = sub i32 %v0_771a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_771a, i32* %ecx.global-to-local, align 4
  %v0_771c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_771c
}

define i32 @_ZN13CLevelDBBatchD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_771e:
  ret i32 %arg1
}

define i32 @function_7750() local_unnamed_addr {
dec_label_pc_7750:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7750 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7750 = sub i32 %v0_7750, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_7750, i32* %ecx.global-to-local, align 4
  %v0_7752 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7752
}

define i32 @_ZN8CLevelDB11NewIteratorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_7754:
  %v1_776e = add i32 %arg1, 68
  %v2_776e = inttoptr i32 %v1_776e to i32*
  %v1_777b = add i32 %arg1, 56
  store i32 %v1_777b, i32* @ecx, align 4
  %v3_7781 = load i32, i32* %v2_776e, align 4
  store i32 %v3_7781, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7799

bb:                                               ; preds = %dec_label_pc_7754
  %v3_7797 = call i32 @function_779e(i32 %v3_7781, i32 %v1_777b)
  br label %dec_label_pc_7799

dec_label_pc_7799:                                ; preds = %bb, %dec_label_pc_7754
  %v5_7797 = phi i32 [ %v3_7797, %bb ], [ %v3_7781, %dec_label_pc_7754 ]
  ret i32 %v5_7797

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_779e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_779e:
  %v0_779f = load i32, i32* @eax, align 4
  ret i32 %v0_779f
}

define i32 @_ZN10CCoinsViewC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_77a0:
  ret i32 %arg1
}

define i32 @function_77d1() local_unnamed_addr {
dec_label_pc_77d1:
  %eax.global-to-local = alloca i32, align 4
  %v0_77d2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_77d2
}

define i32 @_ZN6CCoinsD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_77d4:
  %v1_77ee = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_77ee, i32* @eax, align 4
  %v2_77f4 = call i32 @function_10d6c(i32 %v1_77ee)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7805

bb:                                               ; preds = %dec_label_pc_77d4
  %v1_7803 = call i32 @function_780a()
  br label %dec_label_pc_7805

dec_label_pc_7805:                                ; preds = %bb, %dec_label_pc_77d4
  %v2_7803 = phi i32 [ %v1_7803, %bb ], [ 0, %dec_label_pc_77d4 ]
  ret i32 %v2_7803
}

define i32 @function_780a() local_unnamed_addr {
dec_label_pc_780a:
  %v0_780b = load i32, i32* @eax, align 4
  ret i32 %v0_780b
}

define i32 @_ZNSt4pairIcSsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_780c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_783d

bb:                                               ; preds = %dec_label_pc_780c
  %v1_7826 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_783b = call i32 @function_7842(i32 %v1_7826)
  br label %dec_label_pc_783d

dec_label_pc_783d:                                ; preds = %bb, %dec_label_pc_780c
  %v4_783b = phi i32 [ %v3_783b, %bb ], [ 0, %dec_label_pc_780c ]
  ret i32 %v4_783b
}

define i32 @function_7842(i32 %arg1) local_unnamed_addr {
dec_label_pc_7842:
  %v0_7843 = load i32, i32* @eax, align 4
  ret i32 %v0_7843
}

define i32 @_ZSt4fillIPmiEvT_S1_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_7844:
  store i32 %arg2, i32* @eax, align 4
  %v1_786e = call i32 @function_14823(i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v1_787b = call i32 @function_14823(i32 %arg1)
  store i32 %v1_787b, i32* @eax, align 4
  %v3_788e = call i32 @function_14858(i32 %v1_787b, i32 %v1_786e, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_789f

bb:                                               ; preds = %dec_label_pc_7844
  %v1_789d = call i32 @function_78a4()
  br label %dec_label_pc_789f

dec_label_pc_789f:                                ; preds = %bb, %dec_label_pc_7844
  %v2_789d = phi i32 [ %v1_789d, %bb ], [ 0, %dec_label_pc_7844 ]
  ret i32 %v2_789d

; uselistorder directives
  uselistorder i32 (i32)* @function_14823, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_78a4() local_unnamed_addr {
dec_label_pc_78a4:
  %v0_78a9 = load i32, i32* @eax, align 4
  ret i32 %v0_78a9
}

define i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_78aa:
  %v2_78cc = load i32, i32* %arg1, align 4
  ret i32 %v2_78cc
}

define i32 @function_78d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_78d0:
  %v0_78d0 = load i32, i32* @ecx, align 4
  %v1_78d0 = load i32, i32* @eax, align 4
  %v2_78d0 = sub i32 %v0_78d0, %v1_78d0
  store i32 %v2_78d0, i32* @eax, align 4
  %v0_78d4 = load i32, i32* @ebp, align 4
  %v1_78d4 = add i32 %v0_78d4, -12
  %v2_78d4 = inttoptr i32 %v1_78d4 to i32*
  %v3_78d4 = load i32, i32* %v2_78d4, align 4
  %v1_78d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_78d7 = icmp eq i32 %v1_78d7, %v3_78d4
  br i1 %v3_78d7, label %bb, label %dec_label_pc_78e0

bb:                                               ; preds = %dec_label_pc_78d0
  %v1_78de = call i32 @function_78e5()
  br label %dec_label_pc_78e0

dec_label_pc_78e0:                                ; preds = %bb, %dec_label_pc_78d0
  %v2_78de = phi i32 [ %v1_78de, %bb ], [ %v2_78d0, %dec_label_pc_78d0 ]
  ret i32 %v2_78de
}

define i32 @function_78e5() local_unnamed_addr {
dec_label_pc_78e5:
  %v0_78e6 = load i32, i32* @eax, align 4
  ret i32 %v0_78e6
}

define i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_78e8:
  %v2_7908 = load i32, i32* %arg1, align 4
  %v5_790a = add i32 %v2_7908, %arg2
  store i32 %v5_790a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7919

bb:                                               ; preds = %dec_label_pc_78e8
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_7917 = call i32 @function_791e(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_7919

dec_label_pc_7919:                                ; preds = %bb, %dec_label_pc_78e8
  %v4_7917 = phi i32 [ %v3_7917, %bb ], [ %v5_790a, %dec_label_pc_78e8 ]
  ret i32 %v4_7917

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_791e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_791e:
  %v0_791f = load i32, i32* @eax, align 4
  ret i32 %v0_791f
}

define i32 @_ZltRK9base_uintILj256EES2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7920:
  br label %dec_label_pc_7946

dec_label_pc_7946:                                ; preds = %dec_label_pc_7920, %dec_label_pc_7984
  %storemerge119 = phi i32 [ 7, %dec_label_pc_7920 ], [ %v4_7980, %dec_label_pc_7984 ]
  %v2_794c = mul nuw nsw i32 %storemerge119, 4
  %v3_794c = add i32 %v2_794c, %arg1
  %v4_794c = inttoptr i32 %v3_794c to i32*
  %v5_794c = load i32, i32* %v4_794c, align 4
  %v3_7955 = add i32 %v2_794c, %arg2
  %v4_7955 = inttoptr i32 %v3_7955 to i32*
  %v5_7955 = load i32, i32* %v4_7955, align 4
  %v7_7958 = icmp ult i32 %v5_794c, %v5_7955
  %v1_795a = icmp eq i1 %v7_7958, false
  br i1 %v1_795a, label %dec_label_pc_7963, label %dec_label_pc_795c

dec_label_pc_795c:                                ; preds = %dec_label_pc_7946
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @eax, align 4
  br label %dec_label_pc_7995

dec_label_pc_7963:                                ; preds = %dec_label_pc_7946
  %v5_7969 = load i32, i32* %v4_794c, align 4
  %v5_7972 = load i32, i32* %v4_7955, align 4
  %tmp126 = icmp ugt i32 %v5_7969, %v5_7972
  br i1 %tmp126, label %dec_label_pc_7979, label %dec_label_pc_7984

dec_label_pc_7979:                                ; preds = %dec_label_pc_7963
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_7995

dec_label_pc_7984:                                ; preds = %dec_label_pc_7963
  %v4_7980 = add nsw i32 %storemerge119, -1
  %tmp127 = icmp sgt i32 %storemerge119, 0
  %v3_7989 = icmp eq i1 %tmp127, false
  %v1_798e = icmp eq i1 %v3_7989, false
  br i1 %v1_798e, label %dec_label_pc_7946, label %dec_label_pc_7990

dec_label_pc_7990:                                ; preds = %dec_label_pc_7984
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_7995

dec_label_pc_7995:                                ; preds = %dec_label_pc_7979, %dec_label_pc_795c, %dec_label_pc_7990
  %v2_799f10 = phi i32 [ 0, %dec_label_pc_7979 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_795c ], [ 0, %dec_label_pc_7990 ]
  br i1 true, label %bb, label %dec_label_pc_79a1

bb:                                               ; preds = %dec_label_pc_7995
  %v1_799f = call i32 @function_79a6()
  br label %dec_label_pc_79a1

dec_label_pc_79a1:                                ; preds = %bb, %dec_label_pc_7995
  %v2_799f = phi i32 [ %v1_799f, %bb ], [ %v2_799f10, %dec_label_pc_7995 ]
  ret i32 %v2_799f

; uselistorder directives
  uselistorder i32 %storemerge119, { 0, 2, 1 }
  uselistorder i32 7, { 0, 2, 1 }
  uselistorder label %dec_label_pc_7995, { 2, 0, 1 }
  uselistorder label %dec_label_pc_7946, { 1, 0 }
}

define i32 @function_79a6() local_unnamed_addr {
dec_label_pc_79a6:
  %v0_79a7 = load i32, i32* @eax, align 4
  ret i32 %v0_79a7
}

define i32 @_ZeqRK9base_uintILj256EES2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_79a8:
  br label %dec_label_pc_79ce

dec_label_pc_79ce:                                ; preds = %dec_label_pc_79a8, %dec_label_pc_79eb
  %v4_79ef116 = phi i32 [ 0, %dec_label_pc_79a8 ], [ %v5_79eb, %dec_label_pc_79eb ]
  %v2_79d4 = mul i32 %v4_79ef116, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_79d4 = add i32 %v2_79d4, %arg1
  %v4_79d4 = inttoptr i32 %v3_79d4 to i32*
  %v5_79d4 = load i32, i32* %v4_79d4, align 4
  %v3_79dd = add i32 %v2_79d4, %arg2
  %v4_79dd = inttoptr i32 %v3_79dd to i32*
  %v5_79dd = load i32, i32* %v4_79dd, align 4
  %v12_79e0 = icmp eq i32 %v5_79d4, %v5_79dd
  br i1 %v12_79e0, label %dec_label_pc_79eb, label %dec_label_pc_79ff

dec_label_pc_79eb:                                ; preds = %dec_label_pc_79ce
  %v5_79eb = add i32 %v4_79ef116, ptrtoint (i8** @global_var_1.1176 to i32)
  %v5_79ef = add i32 %v4_79ef116, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -7)
  %tmp115 = sub i32 sub (i32 6, i32 ptrtoint (i8** @global_var_1.1176 to i32)), %v4_79ef116
  %v12_79ef = and i32 %tmp115, %v5_79eb
  %v13_79ef = icmp slt i32 %v12_79ef, 0
  %v15_79ef = icmp slt i32 %v5_79ef, 0
  %v3_79f3 = icmp ne i1 %v15_79ef, %v13_79ef
  %v5_79f6 = icmp eq i1 %v3_79f3, false
  %v1_79f8 = icmp eq i1 %v5_79f6, false
  br i1 %v1_79f8, label %dec_label_pc_79ce, label %dec_label_pc_79ff

dec_label_pc_79ff:                                ; preds = %dec_label_pc_79eb, %dec_label_pc_79ce
  %storemerge = phi i32 [ 0, %dec_label_pc_79ce ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_79eb ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7a0b

bb:                                               ; preds = %dec_label_pc_79ff
  %v1_7a09 = call i32 @function_7a10()
  br label %dec_label_pc_7a0b

dec_label_pc_7a0b:                                ; preds = %bb, %dec_label_pc_79ff
  %v2_7a09 = phi i32 [ %v1_7a09, %bb ], [ %storemerge, %dec_label_pc_79ff ]
  ret i32 %v2_7a09

; uselistorder directives
  uselistorder i32 %v5_79eb, { 1, 0 }
  uselistorder i32 %v4_79ef116, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_79ce, { 1, 0 }
}

define i32 @function_7a10() local_unnamed_addr {
dec_label_pc_7a10:
  %v0_7a11 = load i32, i32* @eax, align 4
  ret i32 %v0_7a11
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_7a12:
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7a3e

bb:                                               ; preds = %dec_label_pc_7a12
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_7a3c = call i32 @function_7a43(i32 %tmp100)
  br label %dec_label_pc_7a3e

dec_label_pc_7a3e:                                ; preds = %bb, %dec_label_pc_7a12
  %v3_7a3c = phi i32 [ %v2_7a3c, %bb ], [ 0, %dec_label_pc_7a12 ]
  ret i32 %v3_7a3c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_7a43(i32 %arg1) local_unnamed_addr {
dec_label_pc_7a43:
  %v0_7a44 = load i32, i32* @eax, align 4
  ret i32 %v0_7a44
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7a46:
  store i32 %arg1, i32* @eax, align 4
  %v1_7a63 = call i32 @function_14ab4(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7a74

bb:                                               ; preds = %dec_label_pc_7a46
  %v1_7a72 = call i32 @function_7a79()
  br label %dec_label_pc_7a74

dec_label_pc_7a74:                                ; preds = %bb, %dec_label_pc_7a46
  %v2_7a72 = phi i32 [ %v1_7a72, %bb ], [ 0, %dec_label_pc_7a46 ]
  ret i32 %v2_7a72

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_7a79() local_unnamed_addr {
dec_label_pc_7a79:
  %v0_7a7a = load i32, i32* @eax, align 4
  ret i32 %v0_7a7a
}

define i32 @_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7a7c:
  %v2_7a96 = load i32, i32* %arg1, align 4
  store i32 %v2_7a96, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7aa4

bb:                                               ; preds = %dec_label_pc_7a7c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_7aa2 = call i32 @function_7aa9(i32 %tmp100)
  br label %dec_label_pc_7aa4

dec_label_pc_7aa4:                                ; preds = %bb, %dec_label_pc_7a7c
  %v3_7aa2 = phi i32 [ %v2_7aa2, %bb ], [ %v2_7a96, %dec_label_pc_7a7c ]
  ret i32 %v3_7aa2

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_7aa9(i32 %arg1) local_unnamed_addr {
dec_label_pc_7aa9:
  %v0_7aaa = load i32, i32* @eax, align 4
  ret i32 %v0_7aaa
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_7aac:
  %v2_7acc = load i32, i32* %arg2, align 4
  %v2_7ad8 = call i32 @function_10348(i32 %arg1, i32 %v2_7acc)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7aec

bb:                                               ; preds = %dec_label_pc_7aac
  %v1_7aea = call i32 @function_7af1()
  br label %dec_label_pc_7aec

dec_label_pc_7aec:                                ; preds = %bb, %dec_label_pc_7aac
  %v2_7aea = phi i32 [ %v1_7aea, %bb ], [ %arg1, %dec_label_pc_7aac ]
  ret i32 %v2_7aea

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_7af1() local_unnamed_addr {
dec_label_pc_7af1:
  %v0_7af2 = load i32, i32* @eax, align 4
  ret i32 %v0_7af2
}

define i32 @_ZN5boost16exception_detail10clone_baseC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7af4:
  store i32 ptrtoint (i32* @global_var_1b6f4.1191 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7b26

bb:                                               ; preds = %dec_label_pc_7af4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_7b24 = call i32 @function_7b2b(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_7b26

dec_label_pc_7b26:                                ; preds = %bb, %dec_label_pc_7af4
  %v4_7b24 = phi i32 [ %v3_7b24, %bb ], [ 0, %dec_label_pc_7af4 ]
  ret i32 %v4_7b24

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_7b2b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7b2b:
  %v0_7b2c = load i32, i32* @eax, align 4
  ret i32 %v0_7b2c
}

define i32 @_Z16GetSerializeSizeIhSaIhEEjRKSt6vectorIT_T0_Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_7b2d:
  %stack_var_-17 = alloca i32, align 4
  %v2_7b50 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %arg1, i32* @eax, align 4
  %v7_7b6b = call i32 @function_14c01(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v2_7b50, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_7b6b

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7b84:
  store i32 %arg1, i32* @eax, align 4
  %v1_7ba1 = call i32 @function_14cfa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7bb2

bb:                                               ; preds = %dec_label_pc_7b84
  %v1_7bb0 = call i32 @function_7bb7()
  br label %dec_label_pc_7bb2

dec_label_pc_7bb2:                                ; preds = %bb, %dec_label_pc_7b84
  %v2_7bb0 = phi i32 [ %v1_7bb0, %bb ], [ 0, %dec_label_pc_7b84 ]
  ret i32 %v2_7bb0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_7bb7() local_unnamed_addr {
dec_label_pc_7bb7:
  %v0_7bb8 = load i32, i32* @eax, align 4
  ret i32 %v0_7bb8
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_7bba:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  %v1_7bd8 = call i32 @function_14de6(i32 %tmp101)
  store i32 %v1_7bd8, i32* @eax, align 4
  %v1_7be0 = add i32 %tmp101, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_7be0 = inttoptr i32 %v1_7be0 to i32*
  %v3_7be0 = load i32, i32* %v2_7be0, align 4
  store i32 %v3_7be0, i32* @ecx, align 4
  %v2_7be6 = load i32, i32* %arg1, align 4
  store i32 %v2_7be6, i32* @edx, align 4
  %v3_7bf3 = call i32 @function_14e13(i32 %v2_7be6, i32 %v3_7be0, i32 %v1_7bd8)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7c0f

bb:                                               ; preds = %dec_label_pc_7bba
  %v2_7c0d = call i32 @function_7c2d(i32 %tmp101)
  store i32 %v2_7c0d, i32* @eax, align 4
  br label %dec_label_pc_7c0f

dec_label_pc_7c0f:                                ; preds = %bb, %dec_label_pc_7bba
  %v0_7c0f = call i32 @function_7c28()
  ret i32 %v0_7c0f

; uselistorder directives
  uselistorder i32 %tmp101, { 0, 2, 1 }
}

define i32 @function_7c12() local_unnamed_addr {
dec_label_pc_7c12:
  %eax.global-to-local = alloca i32, align 4
  %v0_7c12 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7c12
}

define i32 @function_7c28() local_unnamed_addr {
dec_label_pc_7c28:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7c2d(i32 %arg1) local_unnamed_addr {
dec_label_pc_7c2d:
  %v0_7c32 = load i32, i32* @eax, align 4
  ret i32 %v0_7c32
}

define i32 @_ZN25zero_after_free_allocatorIcEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7c34:
  ret i32 %arg1
}

define i32 @function_7c66() local_unnamed_addr {
dec_label_pc_7c66:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7c66 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7c66 = sub i32 %v0_7c66, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_7c66, i32* %ecx.global-to-local, align 4
  %v0_7c68 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7c68
}

define i32 @_ZN25zero_after_free_allocatorIcED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_7c6a:
  ret i32 %arg1
}

define i32 @function_7c9c() local_unnamed_addr {
dec_label_pc_7c9c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7c9c = load i32, i32* %ecx.global-to-local, align 4
  %v1_7c9c = sub i32 %v0_7c9c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_7c9c, i32* %ecx.global-to-local, align 4
  %v0_7c9e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7c9e
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1IPKcEET_S6_RKS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_7ca0:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg4, i32* @edx, align 4
  %v2_7cd7 = call i32 @function_14f5c(i32 %arg1, i32 %arg4)
  %v0_7cdc = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_7cdc, 16777216
  %v4_7cf4 = sdiv i32 %sext, 16777216
  %v5_7cf4 = call i32 @function_14f9e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v4_7cf4)
  %v0_7cf9 = call i32 @function_7d12()
  ret i32 %v0_7cf9

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_7cfc() local_unnamed_addr {
dec_label_pc_7cfc:
  %eax.global-to-local = alloca i32, align 4
  %v0_7cfc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7cfc
}

define i32 @function_7d12() local_unnamed_addr {
dec_label_pc_7d12:
  %v0_7d12 = load i32, i32* @ebp, align 4
  %v1_7d12 = add i32 %v0_7d12, -12
  %v2_7d12 = inttoptr i32 %v1_7d12 to i32*
  %v3_7d12 = load i32, i32* %v2_7d12, align 4
  %v1_7d15 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7d15 = xor i32 %v1_7d15, %v3_7d12
  %v3_7d15 = icmp eq i32 %v2_7d15, 0
  store i32 %v2_7d15, i32* @eax, align 4
  br i1 %v3_7d15, label %bb, label %dec_label_pc_7d1e

bb:                                               ; preds = %dec_label_pc_7d12
  %v1_7d1c = call i32 @function_7d23()
  br label %dec_label_pc_7d1e

dec_label_pc_7d1e:                                ; preds = %bb, %dec_label_pc_7d12
  %v2_7d1c = phi i32 [ %v1_7d1c, %bb ], [ %v2_7d15, %dec_label_pc_7d12 ]
  ret i32 %v2_7d1c
}

define i32 @function_7d23() local_unnamed_addr {
dec_label_pc_7d23:
  %v0_7d28 = load i32, i32* @eax, align 4
  ret i32 %v0_7d28
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_7d2a:
  %stack_var_-20 = alloca i32, align 4
  %v2_7d4a = load i32, i32* %arg2, align 4
  store i32 %v2_7d4a, i32* %stack_var_-20, align 4
  %v2_7d4f = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_7d5c = call i32 @function_15082(i32 %arg1, i32 %v2_7d4f)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7d70

bb:                                               ; preds = %dec_label_pc_7d2a
  %v1_7d6e = call i32 @function_7d75()
  br label %dec_label_pc_7d70

dec_label_pc_7d70:                                ; preds = %bb, %dec_label_pc_7d2a
  %v2_7d6e = phi i32 [ %v1_7d6e, %bb ], [ %arg1, %dec_label_pc_7d2a ]
  ret i32 %v2_7d6e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_7d75() local_unnamed_addr {
dec_label_pc_7d75:
  %v0_7d76 = load i32, i32* @eax, align 4
  ret i32 %v0_7d76
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7d7a:
  %stack_var_-20 = alloca i32, align 4
  %v1_7d9a = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_7d9a = inttoptr i32 %v1_7d9a to i32*
  %v3_7d9a = load i32, i32* %v2_7d9a, align 4
  store i32 %v3_7d9a, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7dc1

bb:                                               ; preds = %dec_label_pc_7d7a
  %v2_7da0 = ptrtoint i32* %stack_var_-20 to i32
  %v3_7dbf = call i32 @function_7dc6(i32 %arg1, i32 %v2_7da0)
  br label %dec_label_pc_7dc1

dec_label_pc_7dc1:                                ; preds = %bb, %dec_label_pc_7d7a
  %v4_7dbf = phi i32 [ %v3_7dbf, %bb ], [ %arg1, %dec_label_pc_7d7a ]
  ret i32 %v4_7dbf
}

define i32 @function_7dc6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7dc6:
  %v0_7dc7 = load i32, i32* @eax, align 4
  ret i32 %v0_7dc7
}

define i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_7dca:
  %stack_var_-20 = alloca i32, align 4
  %v2_7dea = load i32, i32* %arg2, align 4
  store i32 %v2_7dea, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7e10

bb:                                               ; preds = %dec_label_pc_7dca
  %v2_7def = ptrtoint i32* %stack_var_-20 to i32
  %v3_7e0e = call i32 @function_7e15(i32 %arg1, i32 %v2_7def)
  br label %dec_label_pc_7e10

dec_label_pc_7e10:                                ; preds = %bb, %dec_label_pc_7dca
  %v4_7e0e = phi i32 [ %v3_7e0e, %bb ], [ %arg1, %dec_label_pc_7dca ]
  ret i32 %v4_7e0e
}

define i32 @function_7e15(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7e15:
  %v0_7e16 = load i32, i32* @eax, align 4
  ret i32 %v0_7e16
}

define i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7e1a:
  %stack_var_-20 = alloca i32, align 4
  %v1_7e3a = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_7e3a = inttoptr i32 %v1_7e3a to i32*
  %v3_7e3a = load i32, i32* %v2_7e3a, align 4
  store i32 %v3_7e3a, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7e61

bb:                                               ; preds = %dec_label_pc_7e1a
  %v2_7e40 = ptrtoint i32* %stack_var_-20 to i32
  %v3_7e5f = call i32 @function_7e66(i32 %arg1, i32 %v2_7e40)
  br label %dec_label_pc_7e61

dec_label_pc_7e61:                                ; preds = %bb, %dec_label_pc_7e1a
  %v4_7e5f = phi i32 [ %v3_7e5f, %bb ], [ %arg1, %dec_label_pc_7e1a ]
  ret i32 %v4_7e5f
}

define i32 @function_7e66(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7e66:
  %v0_7e67 = load i32, i32* @eax, align 4
  ret i32 %v0_7e67
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7e6a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7eab

bb:                                               ; preds = %dec_label_pc_7e6a
  %v1_7e8a = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v4_7ea9 = call i32 @function_7eb0(i32 %arg1, i32 %v1_7e8a)
  br label %dec_label_pc_7eab

dec_label_pc_7eab:                                ; preds = %bb, %dec_label_pc_7e6a
  %v5_7ea9 = phi i32 [ %v4_7ea9, %bb ], [ %arg1, %dec_label_pc_7e6a ]
  ret i32 %v5_7ea9
}

define i32 @function_7eb0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7eb0:
  %v0_7eb1 = load i32, i32* @eax, align 4
  ret i32 %v0_7eb1
}

define i32 @_ZNSsC1IN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEET_S9_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_7eb4:
  ret i32 %arg1
}

define i32 @function_7f0d() local_unnamed_addr {
dec_label_pc_7f0d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_7f0d = load i32, i32* %ebx.global-to-local, align 4
  %v1_7f0d = add i32 %v0_7f0d, 862319685
  %v2_7f0d = inttoptr i32 %v1_7f0d to i32*
  %v3_7f0d = load i32, i32* %v2_7f0d, align 4
  %v4_7f0d = add i32 %v3_7f0d, -1
  store i32 %v4_7f0d, i32* %v2_7f0d, align 4
  %v0_7f13 = load i32, i32* %eax.global-to-local, align 4
  %v1_7f13 = add i32 %v0_7f13, 20
  store i32 %v1_7f13, i32* %eax.global-to-local, align 4
  ret i32 %v1_7f13
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_7f22:
  ret i32 %arg1
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_7f7e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_7f98 = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_7f98 = inttoptr i32 %v1_7f98 to i32*
  %v3_7f98 = load i32, i32* %v2_7f98, align 4
  %v2_7fa0 = load i32, i32* %arg1, align 4
  %v2_7fa4 = sub i32 %v3_7f98, %v2_7fa0
  store i32 %v2_7fa4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7fb4

bb:                                               ; preds = %dec_label_pc_7f7e
  %v2_7fb2 = call i32 @function_7fb9(i32 %tmp100)
  br label %dec_label_pc_7fb4

dec_label_pc_7fb4:                                ; preds = %bb, %dec_label_pc_7f7e
  %v3_7fb2 = phi i32 [ %v2_7fb2, %bb ], [ %v2_7fa4, %dec_label_pc_7f7e ]
  ret i32 %v3_7fb2
}

define i32 @function_7fb9(i32 %arg1) local_unnamed_addr {
dec_label_pc_7fb9:
  %v0_7fba = load i32, i32* @eax, align 4
  ret i32 %v0_7fba
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE7reserveEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7fbc:
  %tmp109 = ptrtoint i32* %arg1 to i32
  store i32 %tmp109, i32* @eax, align 4
  %v2_7fdf = call i32 @function_154a0(i32 %tmp109)
  %v10_7fe4 = icmp ult i32 %v2_7fdf, %arg2
  %v5_7fea = icmp eq i1 %v10_7fe4, false
  br i1 %v5_7fea, label %dec_label_pc_7ffa, label %dec_label_pc_7fee

dec_label_pc_7fee:                                ; preds = %dec_label_pc_7fbc
  br label %dec_label_pc_7ffa

dec_label_pc_7ffa:                                ; preds = %dec_label_pc_7fee, %dec_label_pc_7fbc
  store i32 %tmp109, i32* @eax, align 4
  %v2_8000 = call i32 @function_154de(i32 %tmp109)
  %v10_8005 = icmp ult i32 %v2_8000, %arg2
  %v5_800b = icmp eq i1 %v10_8005, false
  br i1 %v5_800b, label %dec_label_pc_80c2, label %dec_label_pc_8013

dec_label_pc_8013:                                ; preds = %dec_label_pc_7ffa
  store i32 %tmp109, i32* @eax, align 4
  %v2_8019 = call i32 @function_ff3a(i32 %tmp109)
  %v1_8024 = add i32 %tmp109, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_8024 = inttoptr i32 %v1_8024 to i32*
  %v3_8024 = load i32, i32* %v2_8024, align 4
  %v2_802a = load i32, i32* %arg1, align 4
  store i32 %tmp109, i32* @eax, align 4
  %v5_8041 = call i32 @function_1551c(i32 %tmp109, i32 %arg2, i32 %v2_802a, i32 %v3_8024)
  %v1_8072 = add i32 %tmp109, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_8072 = inttoptr i32 %v1_8072 to i32*
  %v3_8072 = load i32, i32* %v2_8072, align 4
  %v2_807a = load i32, i32* %arg1, align 4
  %v2_807e = sub i32 %v3_8072, %v2_807a
  store i32 %tmp109, i32* @eax, align 4
  %v4_8097 = call i32 @function_155d6(i32 %tmp109, i32 %v2_807a, i32 %v2_807e)
  store i32 %v5_8041, i32* %arg1, align 4
  %v2_80aa = add i32 %v5_8041, %v2_8019
  store i32 %v2_80aa, i32* %v2_8024, align 4
  %v2_80b5 = load i32, i32* %arg1, align 4
  %v5_80b9 = add i32 %v2_80b5, %arg2
  store i32 %v5_80b9, i32* %v2_8072, align 4
  br label %dec_label_pc_80c2

dec_label_pc_80c2:                                ; preds = %dec_label_pc_8013, %dec_label_pc_7ffa
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_80ce

bb:                                               ; preds = %dec_label_pc_80c2
  %v1_80cc = call i32 @function_80d3()
  br label %dec_label_pc_80ce

dec_label_pc_80ce:                                ; preds = %bb, %dec_label_pc_80c2
  %v2_80cc = phi i32 [ %v1_80cc, %bb ], [ 0, %dec_label_pc_80c2 ]
  ret i32 %v2_80cc

; uselistorder directives
  uselistorder i32 %tmp109, { 1, 0, 2, 4, 3, 5, 7, 6, 9, 8, 11, 10 }
}

define i32 @function_80d3() local_unnamed_addr {
dec_label_pc_80d3:
  %v0_80d4 = load i32, i32* @eax, align 4
  ret i32 %v0_80d4
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80d6:
  %v2_80f6 = load i32, i32* %arg1, align 4
  %v5_80f8 = add i32 %v2_80f6, %arg2
  store i32 %v5_80f8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8107

bb:                                               ; preds = %dec_label_pc_80d6
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_8105 = call i32 @function_810c(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_8107

dec_label_pc_8107:                                ; preds = %bb, %dec_label_pc_80d6
  %v4_8105 = phi i32 [ %v3_8105, %bb ], [ %v5_80f8, %dec_label_pc_80d6 ]
  ret i32 %v4_8105

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_810c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_810c:
  %v0_810d = load i32, i32* @eax, align 4
  ret i32 %v0_810d
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_810e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_8128 = load i32, i32* %arg1, align 4
  %v2_8134 = call i32 @function_15594(i32 %tmp101, i32 %v2_8128)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8145

bb:                                               ; preds = %dec_label_pc_810e
  %v1_8143 = call i32 @function_814a()
  br label %dec_label_pc_8145

dec_label_pc_8145:                                ; preds = %bb, %dec_label_pc_810e
  %v2_8143 = phi i32 [ %v1_8143, %bb ], [ 0, %dec_label_pc_810e ]
  ret i32 %v2_8143
}

define i32 @function_814a() local_unnamed_addr {
dec_label_pc_814a:
  %v0_814b = load i32, i32* @eax, align 4
  ret i32 %v0_814b
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE6insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_814c:
  %edx.global-to-local = alloca i32, align 4
  %v0_8175 = load i32, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_81a5

bb:                                               ; preds = %dec_label_pc_814c
  %sext = mul i32 %v0_8175, 16777216
  %v6_81a3 = sdiv i32 %sext, 16777216
  %v7_81a3 = call i32 @function_81aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v6_81a3)
  br label %dec_label_pc_81a5

dec_label_pc_81a5:                                ; preds = %bb, %dec_label_pc_814c
  %v8_81a3 = phi i32 [ %v7_81a3, %bb ], [ 0, %dec_label_pc_814c ]
  ret i32 %v8_81a3
}

define i32 @function_81aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_81aa:
  %v0_81ab = load i32, i32* @eax, align 4
  ret i32 %v0_81ab
}

define i32 @_ZN9__gnu_cxxmiIPcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_81ac:
  %v2_81d5 = load i32, i32* %arg1, align 4
  %v1_81e4 = inttoptr i32 %arg2 to i32*
  %v2_81e4 = load i32, i32* %v1_81e4, align 4
  %v2_81e8 = sub i32 %v2_81d5, %v2_81e4
  store i32 %v2_81e8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_81f8

bb:                                               ; preds = %dec_label_pc_81ac
  %v2_81f6 = call i32 @function_81fd(i32 %arg2)
  br label %dec_label_pc_81f8

dec_label_pc_81f8:                                ; preds = %bb, %dec_label_pc_81ac
  %v3_81f6 = phi i32 [ %v2_81f6, %bb ], [ %v2_81e8, %dec_label_pc_81ac ]
  ret i32 %v3_81f6
}

define i32 @function_81fd(i32 %arg1) local_unnamed_addr {
dec_label_pc_81fd:
  %v0_8202 = load i32, i32* @eax, align 4
  ret i32 %v0_8202
}

define i32 @_ZN11CDataStreamrsIiEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8204:
  %v1_8224 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_8224 = inttoptr i32 %v1_8224 to i32*
  %v3_8224 = load i32, i32* %v2_8224, align 4
  %v1_822a = add i32 %arg1, 20
  %v2_822a = inttoptr i32 %v1_822a to i32*
  %v3_822a = load i32, i32* %v2_822a, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8256

bb:                                               ; preds = %dec_label_pc_8204
  %v5_8254 = call i32 @function_825b(i32 %arg1, i32 %arg2, i32 %v3_822a, i32 %v3_8224)
  br label %dec_label_pc_8256

dec_label_pc_8256:                                ; preds = %bb, %dec_label_pc_8204
  %v6_8254 = phi i32 [ %v5_8254, %bb ], [ %arg1, %dec_label_pc_8204 ]
  ret i32 %v6_8254

; uselistorder directives
  uselistorder i32 %arg1, { 0, 1, 4, 3, 2 }
}

define i32 @function_825b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_825b:
  %v0_825c = load i32, i32* @eax, align 4
  ret i32 %v0_825c
}

define i32 @_ZN11CDataStreamlsIiEERS_RKT_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_825e:
  %v1_827e = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_827e = inttoptr i32 %v1_827e to i32*
  %v3_827e = load i32, i32* %v2_827e, align 4
  %v1_8284 = add i32 %arg1, 20
  %v2_8284 = inttoptr i32 %v1_8284 to i32*
  %v3_8284 = load i32, i32* %v2_8284, align 4
  %v2_828a = load i32, i32* %arg2, align 4
  %v4_829e = call i32 @function_15a40(i32 %arg1, i32 %v2_828a, i32 %v3_8284, i32 %v3_827e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_82b2

bb:                                               ; preds = %dec_label_pc_825e
  %v1_82b0 = call i32 @function_82b7()
  br label %dec_label_pc_82b2

dec_label_pc_82b2:                                ; preds = %bb, %dec_label_pc_825e
  %v2_82b0 = phi i32 [ %v1_82b0, %bb ], [ %arg1, %dec_label_pc_825e ]
  ret i32 %v2_82b0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_82b7() local_unnamed_addr {
dec_label_pc_82b7:
  %v0_82b8 = load i32, i32* @eax, align 4
  ret i32 %v0_82b8
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderjEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_82b9:
  %ebp.global-to-local = alloca i32, align 4
  %v0_82b9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_82ec = load i32, i32* %arg2, align 4
  store i32 %v0_82b9, i32* %ebp.global-to-local, align 4
  ret i32 %v2_82ec
}

define i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8318:
  store i32 %arg1, i32* @eax, align 4
  %v1_8335 = call i32 @function_15bda(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8346

bb:                                               ; preds = %dec_label_pc_8318
  %v1_8344 = call i32 @function_834b()
  br label %dec_label_pc_8346

dec_label_pc_8346:                                ; preds = %bb, %dec_label_pc_8318
  %v2_8344 = phi i32 [ %v1_8344, %bb ], [ 0, %dec_label_pc_8318 ]
  ret i32 %v2_8344

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_834b() local_unnamed_addr {
dec_label_pc_834b:
  %v0_834c = load i32, i32* @eax, align 4
  ret i32 %v0_834c
}

define i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_834e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 4
  %v1_836c = call i32 @function_15cc6(i32 %tmp101)
  store i32 %v1_836c, i32* @eax, align 4
  %v1_8374 = add i32 %tmp101, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_8374 = inttoptr i32 %v1_8374 to i32*
  %v3_8374 = load i32, i32* %v2_8374, align 4
  store i32 %v3_8374, i32* @ecx, align 4
  %v2_837a = load i32, i32* %arg1, align 4
  %v3_8387 = call i32 @function_15cf3(i32 %v2_837a, i32 %v3_8374, i32 %v1_836c)
  store i32 %tmp101, i32* @eax, align 4
  %v1_8392 = call i32 @function_15c46(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_83a3

bb:                                               ; preds = %dec_label_pc_834e
  %v1_83a1 = call i32 @function_83c1()
  store i32 %v1_83a1, i32* @eax, align 4
  br label %dec_label_pc_83a3

dec_label_pc_83a3:                                ; preds = %bb, %dec_label_pc_834e
  %v0_83a3 = call i32 @function_83bc()
  ret i32 %v0_83a3

; uselistorder directives
  uselistorder i32 %tmp101, { 4, 3, 2, 1, 0 }
}

define i32 @function_83a6() local_unnamed_addr {
dec_label_pc_83a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_83a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_83a6
}

define i32 @function_83bc() local_unnamed_addr {
dec_label_pc_83bc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_83c1() local_unnamed_addr {
dec_label_pc_83c1:
  %v0_83c6 = load i32, i32* @eax, align 4
  ret i32 %v0_83c6
}

define i32 @_ZNSaIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_83c8:
  store i32 %arg1, i32* @eax, align 4
  %v1_83e5 = call i32 @function_15db6(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSaIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_83fe:
  %v1_841b = call i32 @function_15e16(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_842c

bb:                                               ; preds = %dec_label_pc_83fe
  %v1_842a = call i32 @function_8431()
  br label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %bb, %dec_label_pc_83fe
  %v2_842a = phi i32 [ %v1_842a, %bb ], [ 0, %dec_label_pc_83fe ]
  ret i32 %v2_842a
}

define i32 @function_8431() local_unnamed_addr {
dec_label_pc_8431:
  %v0_8432 = load i32, i32* @eax, align 4
  ret i32 %v0_8432
}

define i32 @_ZNSt6vectorIhSaIhEEC1EjRKhRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8434:
  store i32 %arg1, i32* @eax, align 4
  %v7_848b = call i32 @function_15f10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  %v0_8490 = call i32 @function_84a9()
  ret i32 %v0_8490

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_8493() local_unnamed_addr {
dec_label_pc_8493:
  %eax.global-to-local = alloca i32, align 4
  %v0_8493 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8493
}

define i32 @function_84a9() local_unnamed_addr {
dec_label_pc_84a9:
  %v0_84a9 = load i32, i32* @ebp, align 4
  %v1_84a9 = add i32 %v0_84a9, -12
  %v2_84a9 = inttoptr i32 %v1_84a9 to i32*
  %v3_84a9 = load i32, i32* %v2_84a9, align 4
  %v1_84ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_84ac = xor i32 %v1_84ac, %v3_84a9
  %v3_84ac = icmp eq i32 %v2_84ac, 0
  store i32 %v2_84ac, i32* @eax, align 4
  br i1 %v3_84ac, label %bb, label %dec_label_pc_84b5

bb:                                               ; preds = %dec_label_pc_84a9
  %v1_84b3 = call i32 @function_84ba()
  br label %dec_label_pc_84b5

dec_label_pc_84b5:                                ; preds = %bb, %dec_label_pc_84a9
  %v2_84b3 = phi i32 [ %v1_84b3, %bb ], [ %v2_84ac, %dec_label_pc_84a9 ]
  ret i32 %v2_84b3
}

define i32 @function_84ba() local_unnamed_addr {
dec_label_pc_84ba:
  %v0_84bf = load i32, i32* @eax, align 4
  ret i32 %v0_84bf
}

define i32 @_ZNSt6vectorIhSaIhEEaSERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_84c0:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp126 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_84c0 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_84c0, i32* %stack_var_-4, align 4
  %v4_84c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_84c0, i32* @ebp, align 4
  %v0_84c3 = load i32, i32* %edi.global-to-local, align 4
  %v15_84e3 = icmp eq i32 %tmp126, %arg2
  br i1 %v15_84e3, label %dec_label_pc_8705, label %dec_label_pc_84ec

dec_label_pc_84ec:                                ; preds = %dec_label_pc_84c0
  store i32 %tmp126, i32* @eax, align 4
  %v1_8500 = call i32 @function_16008(i32 %tmp126)
  %v10_8505 = icmp ult i32 %v1_8500, %arg2
  %v5_850b = icmp eq i1 %v10_8505, false
  br i1 %v5_850b, label %dec_label_pc_85d0, label %dec_label_pc_8513

dec_label_pc_8513:                                ; preds = %dec_label_pc_84ec
  %v2_8513 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_8513, i32* @eax, align 4
  %v2_8520 = call i32 @function_102da(i32 %v2_8513, i32 %arg2)
  %v2_8528 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_8528, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_8535 = call i32 @function_1028a(i32 %v2_8528, i32 %arg2)
  %v3_853d = load i32, i32* %stack_var_-64, align 4
  %v3_8544 = load i32, i32* %stack_var_-68, align 4
  %v4_8558 = call i32 @function_16046(i32 %tmp126, i32 %arg2, i32 %v3_8544, i32 %v3_853d)
  %v1_856e = add i32 %tmp126, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_856e = inttoptr i32 %v1_856e to i32*
  %v1_8589 = add i32 %tmp126, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_8589 = inttoptr i32 %v1_8589 to i32*
  %v3_8589 = load i32, i32* %v2_8589, align 4
  %v2_8591 = load i32, i32* %arg1, align 4
  %v2_8595 = sub i32 %v3_8589, %v2_8591
  store i32 %v2_8591, i32* @edx, align 4
  store i32 %tmp126, i32* @eax, align 4
  %v3_85ae = call i32 @function_16100(i32 %tmp126, i32 %v2_8591, i32 %v2_8595)
  store i32 %v4_8558, i32* %arg1, align 4
  %v5_85c2 = add i32 %v4_8558, %arg2
  store i32 %v5_85c2, i32* %v2_8589, align 4
  br label %dec_label_pc_86f5

dec_label_pc_85d0:                                ; preds = %dec_label_pc_84ec
  %v10_85db = icmp ult i32 %tmp126, %arg2
  %v1_85de = icmp eq i1 %v10_85db, false
  store i1 false, i1* @cf, align 1
  %v5_85e1 = icmp eq i1 %v1_85de, false
  br i1 %v5_85e1, label %dec_label_pc_8685, label %dec_label_pc_85e9

dec_label_pc_85e9:                                ; preds = %dec_label_pc_85d0
  store i32 %tmp126, i32* @ebx, align 4
  %v2_85f6 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8603 = call i32 @function_11630(i32 %v2_85f6, i32 %tmp126)
  %v2_8620 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_8620, i32* @eax, align 4
  %v2_862d = call i32 @function_102da(i32 %v2_8620, i32 %arg2)
  %v2_8635 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_8635, i32* @eax, align 4
  %v2_8642 = call i32 @function_1028a(i32 %v2_8635, i32 %arg2)
  %v2_864a = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_864a, i32* @eax, align 4
  %v3_8654 = load i32, i32* %stack_var_-56, align 4
  %v3_865b = load i32, i32* %stack_var_-60, align 4
  %v4_8665 = call i32 @function_16155(i32 %v2_864a, i32 %v3_865b, i32 %v3_8654, i32 %tmp112)
  %v0_866d = load i32, i32* @ebx, align 4
  %v3_8671 = load i32, i32* %stack_var_-44, align 4
  %v3_8678 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8678, i32* @eax, align 4
  %v3_867e = call i32 @function_161e3(i32 %v3_8678, i32 %v3_8671, i32 %v0_866d)
  %.pre = add i32 %tmp126, ptrtoint (i8** @global_var_4.1177 to i32)
  %.pre6 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_86f5

dec_label_pc_8685:                                ; preds = %dec_label_pc_85d0
  %v2_8688 = load i32, i32* %arg1, align 4
  %v1_868d = inttoptr i32 %arg2 to i32*
  %v2_868d = load i32, i32* %v1_868d, align 4
  %v2_869a = mul i32 %tmp126, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_869a = add i32 %v2_868d, %v2_869a
  store i32 %v2_868d, i32* @eax, align 4
  %v3_86ad = call i32 @function_1622b(i32 %v2_868d, i32 %v3_869a, i32 %v2_8688)
  %v1_86c2 = add i32 %tmp126, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_86c2 = inttoptr i32 %v1_86c2 to i32*
  %v3_86c2 = load i32, i32* %v2_86c2, align 4
  store i32 %v3_86c2, i32* %edi.global-to-local, align 4
  %v1_86c8 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  %v3_86c8 = load i32, i32* %v2_86c8, align 4
  %v2_86ce = load i32, i32* %v1_868d, align 4
  %v5_86de = add i32 %v2_86ce, %tmp126
  store i32 %v5_86de, i32* @eax, align 4
  %v5_86f0 = call i32 @function_16291(i32 %v5_86de, i32 %v3_86c8, i32 %v3_86c2, i32 %tmp126, i32 %v2_86ce)
  br label %dec_label_pc_86f5

dec_label_pc_86f5:                                ; preds = %dec_label_pc_8685, %dec_label_pc_85e9, %dec_label_pc_8513
  %v3_8702.pre-phi = phi i32* [ %v2_86c2, %dec_label_pc_8685 ], [ %.pre6, %dec_label_pc_85e9 ], [ %v2_856e, %dec_label_pc_8513 ]
  %v2_86f8 = load i32, i32* %arg1, align 4
  %v5_86fc = add i32 %v2_86f8, %arg2
  store i32 %v5_86fc, i32* %v3_8702.pre-phi, align 4
  %v2_871f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8705

dec_label_pc_8705:                                ; preds = %dec_label_pc_86f5, %dec_label_pc_84c0
  %v2_871f = phi i32 [ %v2_871f.pre, %dec_label_pc_86f5 ], [ %v0_84c0, %dec_label_pc_84c0 ]
  store i32 %v0_84c3, i32* %edi.global-to-local, align 4
  store i32 %v2_871f, i32* %ebp.global-to-local, align 4
  ret i32 %tmp126

; uselistorder directives
  uselistorder i32 %v2_86ce, { 1, 0 }
  uselistorder i32 %v2_868d, { 1, 0, 2 }
  uselistorder i32 %v2_8591, { 1, 0, 2 }
  uselistorder i32 %tmp126, { 3, 4, 0, 10, 11, 2, 12, 13, 14, 6, 5, 7, 8, 9, 16, 15, 1 }
  uselistorder i32 (i32, i32)* @function_1028a, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_102da, { 1, 0 }
  uselistorder i32 %arg2, { 0, 9, 10, 7, 8, 11, 1, 3, 5, 4, 6, 12, 2 }
  uselistorder i32* %arg1, { 1, 0, 2, 3, 4 }
}

define i32 @_ZN5boost3argILi1EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8722:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8745

bb:                                               ; preds = %dec_label_pc_8722
  %v2_8743 = call i32 @function_874a(i32 %arg1)
  br label %dec_label_pc_8745

dec_label_pc_8745:                                ; preds = %bb, %dec_label_pc_8722
  %v3_8743 = phi i32 [ %v2_8743, %bb ], [ 0, %dec_label_pc_8722 ]
  ret i32 %v3_8743
}

define i32 @function_874a(i32 %arg1) local_unnamed_addr {
dec_label_pc_874a:
  %v0_874b = load i32, i32* @eax, align 4
  ret i32 %v0_874b
}

define i32 @_ZN5boost3argILi2EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_874c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_876f

bb:                                               ; preds = %dec_label_pc_874c
  %v2_876d = call i32 @function_8774(i32 %arg1)
  br label %dec_label_pc_876f

dec_label_pc_876f:                                ; preds = %bb, %dec_label_pc_874c
  %v3_876d = phi i32 [ %v2_876d, %bb ], [ 0, %dec_label_pc_874c ]
  ret i32 %v3_876d
}

define i32 @function_8774(i32 %arg1) local_unnamed_addr {
dec_label_pc_8774:
  %v0_8775 = load i32, i32* @eax, align 4
  ret i32 %v0_8775
}

define i32 @_ZN5boost3argILi3EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8776:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8799

bb:                                               ; preds = %dec_label_pc_8776
  %v2_8797 = call i32 @function_879e(i32 %arg1)
  br label %dec_label_pc_8799

dec_label_pc_8799:                                ; preds = %bb, %dec_label_pc_8776
  %v3_8797 = phi i32 [ %v2_8797, %bb ], [ 0, %dec_label_pc_8776 ]
  ret i32 %v3_8797
}

define i32 @function_879e(i32 %arg1) local_unnamed_addr {
dec_label_pc_879e:
  %v0_879f = load i32, i32* @eax, align 4
  ret i32 %v0_879f
}

define i32 @_ZN5boost3argILi4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_87a0:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_87c3

bb:                                               ; preds = %dec_label_pc_87a0
  %v2_87c1 = call i32 @function_87c8(i32 %arg1)
  br label %dec_label_pc_87c3

dec_label_pc_87c3:                                ; preds = %bb, %dec_label_pc_87a0
  %v3_87c1 = phi i32 [ %v2_87c1, %bb ], [ 0, %dec_label_pc_87a0 ]
  ret i32 %v3_87c1
}

define i32 @function_87c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_87c8:
  %v0_87c9 = load i32, i32* @eax, align 4
  ret i32 %v0_87c9
}

define i32 @_ZN5boost3argILi5EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_87ca:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_87ed

bb:                                               ; preds = %dec_label_pc_87ca
  %v2_87eb = call i32 @function_87f2(i32 %arg1)
  br label %dec_label_pc_87ed

dec_label_pc_87ed:                                ; preds = %bb, %dec_label_pc_87ca
  %v3_87eb = phi i32 [ %v2_87eb, %bb ], [ 0, %dec_label_pc_87ca ]
  ret i32 %v3_87eb
}

define i32 @function_87f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_87f2:
  %v0_87f3 = load i32, i32* @eax, align 4
  ret i32 %v0_87f3
}

define i32 @_ZN5boost3argILi6EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_87f4:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8817

bb:                                               ; preds = %dec_label_pc_87f4
  %v2_8815 = call i32 @function_881c(i32 %arg1)
  br label %dec_label_pc_8817

dec_label_pc_8817:                                ; preds = %bb, %dec_label_pc_87f4
  %v3_8815 = phi i32 [ %v2_8815, %bb ], [ 0, %dec_label_pc_87f4 ]
  ret i32 %v3_8815
}

define i32 @function_881c(i32 %arg1) local_unnamed_addr {
dec_label_pc_881c:
  %v0_881d = load i32, i32* @eax, align 4
  ret i32 %v0_881d
}

define i32 @_ZN5boost3argILi7EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_881e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8841

bb:                                               ; preds = %dec_label_pc_881e
  %v2_883f = call i32 @function_8846(i32 %arg1)
  br label %dec_label_pc_8841

dec_label_pc_8841:                                ; preds = %bb, %dec_label_pc_881e
  %v3_883f = phi i32 [ %v2_883f, %bb ], [ 0, %dec_label_pc_881e ]
  ret i32 %v3_883f
}

define i32 @function_8846(i32 %arg1) local_unnamed_addr {
dec_label_pc_8846:
  %v0_8847 = load i32, i32* @eax, align 4
  ret i32 %v0_8847
}

define i32 @_ZN5boost3argILi8EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8848:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_886b

bb:                                               ; preds = %dec_label_pc_8848
  %v2_8869 = call i32 @function_8870(i32 %arg1)
  br label %dec_label_pc_886b

dec_label_pc_886b:                                ; preds = %bb, %dec_label_pc_8848
  %v3_8869 = phi i32 [ %v2_8869, %bb ], [ 0, %dec_label_pc_8848 ]
  ret i32 %v3_8869
}

define i32 @function_8870(i32 %arg1) local_unnamed_addr {
dec_label_pc_8870:
  %v0_8871 = load i32, i32* @eax, align 4
  ret i32 %v0_8871
}

define i32 @_ZN5boost3argILi9EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8872:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8895

bb:                                               ; preds = %dec_label_pc_8872
  %v2_8893 = call i32 @function_889a(i32 %arg1)
  br label %dec_label_pc_8895

dec_label_pc_8895:                                ; preds = %bb, %dec_label_pc_8872
  %v3_8893 = phi i32 [ %v2_8893, %bb ], [ 0, %dec_label_pc_8872 ]
  ret i32 %v3_8893
}

define i32 @function_889a(i32 %arg1) local_unnamed_addr {
dec_label_pc_889a:
  %v0_889b = load i32, i32* @eax, align 4
  ret i32 %v0_889b
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_889c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_88d2 = call i32 @function_166c2(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_88e3

bb:                                               ; preds = %dec_label_pc_889c
  %v1_88e1 = call i32 @function_88e8()
  br label %dec_label_pc_88e3

dec_label_pc_88e3:                                ; preds = %bb, %dec_label_pc_889c
  %v2_88e1 = phi i32 [ %v1_88e1, %bb ], [ 0, %dec_label_pc_889c ]
  ret i32 %v2_88e1
}

define i32 @function_88e8() local_unnamed_addr {
dec_label_pc_88e8:
  %v0_88e9 = load i32, i32* @eax, align 4
  ret i32 %v0_88e9
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_88ea:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_890a = inttoptr i32 %arg2 to i32*
  %v2_890a = load i32, i32* %v1_890a, align 4
  store i32 %v2_890a, i32* %arg1, align 4
  %v1_8917 = call i32 @function_16710(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8928

bb:                                               ; preds = %dec_label_pc_88ea
  %v1_8926 = call i32 @function_892d()
  br label %dec_label_pc_8928

dec_label_pc_8928:                                ; preds = %bb, %dec_label_pc_88ea
  %v2_8926 = phi i32 [ %v1_8926, %bb ], [ 0, %dec_label_pc_88ea ]
  ret i32 %v2_8926
}

define i32 @function_892d() local_unnamed_addr {
dec_label_pc_892d:
  %v0_892e = load i32, i32* @eax, align 4
  ret i32 %v0_892e
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_8930:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_894d = call i32 @function_b40a(i32 %tmp100)
  %v1_8955 = add i32 %tmp100, 20
  %v1_895b = call i32 @function_a850(i32 %v1_8955)
  store i32 ptrtoint (%vtable_1b6ac_type* @global_var_1b6ac.1210 to i32), i32* %arg1, align 4
  %v2_896c = inttoptr i32 %v1_8955 to i32*
  store i32 ptrtoint (i32* @global_var_1b6bc.1211 to i32), i32* %v2_896c, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_897f

bb:                                               ; preds = %dec_label_pc_8930
  %v1_897d = call i32 @function_8984()
  br label %dec_label_pc_897f

dec_label_pc_897f:                                ; preds = %bb, %dec_label_pc_8930
  %v2_897d = phi i32 [ %v1_897d, %bb ], [ 0, %dec_label_pc_8930 ]
  ret i32 %v2_897d

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_8984() local_unnamed_addr {
dec_label_pc_8984:
  %v0_8985 = load i32, i32* @eax, align 4
  ret i32 %v0_8985
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8986:
  %eax.global-to-local = alloca i32, align 4
  %v0_898b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_898b
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_8990:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_1b6ac_type* @global_var_1b6ac.1210 to i32), i32* %arg1, align 4
  %v1_89b3 = add i32 %tmp99, 20
  %v2_89b3 = inttoptr i32 %v1_89b3 to i32*
  store i32 ptrtoint (i32* @global_var_1b6bc.1211 to i32), i32* %v2_89b3, align 4
  ret i32 %v1_89b3
}

define i32 @function_89e9() local_unnamed_addr {
dec_label_pc_89e9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_89e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_89e9 = add i32 %v0_89e9, 862319685
  %v2_89e9 = inttoptr i32 %v1_89e9 to i32*
  %v3_89e9 = load i32, i32* %v2_89e9, align 4
  %v4_89e9 = add i32 %v3_89e9, -1
  store i32 %v4_89e9, i32* %v2_89e9, align 4
  %v0_89ef = load i32, i32* %eax.global-to-local, align 4
  %v1_89ef = add i32 %v0_89ef, 20
  store i32 %v1_89ef, i32* %eax.global-to-local, align 4
  ret i32 %v1_89ef
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_89fe:
  %v4_89fe = add i32 %arg1, -20
  %v1_8a03 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %v4_89fe)
  ret i32 %v1_8a03
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) {
dec_label_pc_8a06:
  store i32 %arg1, i32* @eax, align 4
  %v1_8a23 = call i32 @function_1138e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_8a43() local_unnamed_addr {
dec_label_pc_8a43:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8a43 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8a43 = sub i32 %v0_8a43, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_8a43, i32* %ecx.global-to-local, align 4
  %v0_8a45 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8a45
}

define i32 @_ZNSt9bad_allocC1ERKS_(i32 %arg1) local_unnamed_addr {
dec_label_pc_8a46:
  ret i32 %arg1
}

define i32 @function_8a8f() local_unnamed_addr {
dec_label_pc_8a8f:
  %eax.global-to-local = alloca i32, align 4
  %v0_8a90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8a90
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8a92:
  store i32 %arg1, i32* @eax, align 4
  %v2_8abc = call i32 @function_d85a(i32 %arg1, i32 %arg2)
  ret i32 %v2_8abc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8ac2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8ac2:
  %eax.global-to-local = alloca i32, align 4
  %v0_8ac2 = load i32, i32* @ebp, align 4
  %v0_8ac3 = load i32, i32* @ecx, align 4
  %v1_8ac3 = sub i32 %v0_8ac3, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_8ac3, i32* @ecx, align 4
  %v0_8ac5 = load i32, i32* @eax, align 4
  %v2_8ac6 = load i1, i1* @cf, align 1
  %v3_8ac6 = zext i1 %v2_8ac6 to i32
  %v4_8ac6 = add i32 %v0_8ac5, 139
  %v5_8ac6 = add i32 %v4_8ac6, %v3_8ac6
  %v25_8ac6 = urem i32 %v5_8ac6, 256
  %v27_8ac6 = and i32 %v0_8ac5, -256
  %v28_8ac6 = or i32 %v25_8ac6, %v27_8ac6
  store i32 %v28_8ac6, i32* %eax.global-to-local, align 4
  %v1_8ac8 = add i32 %v0_8ac2, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_8ac8, i32* @ebp, align 4
  %v20_8acb = mul i32 %v1_8ac3, add (i32 ptrtoint (i8** @global_var_4.1177 to i32), i32 1)
  %v21_8acb = inttoptr i32 %v20_8acb to i8*
  store i8 0, i8* %v21_8acb, align 1
  %v0_8acf = load i32, i32* %eax.global-to-local, align 4
  %v11_8acf = and i32 %v0_8acf, or (i32 zext (i8 ptrtoint (i8** @global_var_4.1177 to i8) to i32), i32 -256)
  store i32 %v11_8acf, i32* %eax.global-to-local, align 4
  %v1_8ad4 = call i32 @function_114d8(i32 %v11_8acf)
  store i32 %v1_8ad4, i32* %eax.global-to-local, align 4
  %v0_8ad9 = load i32, i32* @ebp, align 4
  %v1_8ad9 = add i32 %v0_8ad9, -28
  %v2_8ad9 = inttoptr i32 %v1_8ad9 to i32*
  %v3_8ad9 = load i32, i32* %v2_8ad9, align 4
  store i32 %v3_8ad9, i32* %eax.global-to-local, align 4
  %v1_8adc = inttoptr i32 %v3_8ad9 to i32*
  store i32 ptrtoint (%vtable_1b6ac_type* @global_var_1b6ac.1210 to i32), i32* %v1_8adc, align 4
  %v0_8ae2 = load i32, i32* @ebp, align 4
  %v1_8ae2 = add i32 %v0_8ae2, -28
  %v2_8ae2 = inttoptr i32 %v1_8ae2 to i32*
  %v3_8ae2 = load i32, i32* %v2_8ae2, align 4
  store i32 %v3_8ae2, i32* %eax.global-to-local, align 4
  %v1_8ae5 = add i32 %v3_8ae2, 20
  %v2_8ae5 = inttoptr i32 %v1_8ae5 to i32*
  store i32 ptrtoint (i32* @global_var_1b6bc.1211 to i32), i32* %v2_8ae5, align 4
  %v0_8aec = load i32, i32* @ebp, align 4
  %v1_8aec = add i32 %v0_8aec, -12
  %v2_8aec = inttoptr i32 %v1_8aec to i32*
  %v3_8aec = load i32, i32* %v2_8aec, align 4
  store i32 %v3_8aec, i32* %eax.global-to-local, align 4
  %v1_8aef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8aef = xor i32 %v1_8aef, %v3_8aec
  %v3_8aef = icmp eq i32 %v2_8aef, 0
  store i32 %v2_8aef, i32* @eax, align 4
  br i1 %v3_8aef, label %bb, label %dec_label_pc_8af8

bb:                                               ; preds = %dec_label_pc_8ac2
  %v1_8af6 = call i32 @function_8afd()
  store i32 %v1_8af6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8af8

dec_label_pc_8af8:                                ; preds = %bb, %dec_label_pc_8ac2
  %v3_8af6 = phi i32 [ %v1_8af6, %bb ], [ %v2_8aef, %dec_label_pc_8ac2 ]
  ret i32 %v3_8af6

; uselistorder directives
  uselistorder i32 %v11_8acf, { 1, 0 }
  uselistorder i32 %v0_8ac5, { 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_1b6ac_type* @global_var_1b6ac.1210 to i32), { 2, 1, 0 }
}

define i32 @function_8afd() local_unnamed_addr {
dec_label_pc_8afd:
  %v0_8afe = load i32, i32* @eax, align 4
  ret i32 %v0_8afe
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8b00:
  %v0_8b12 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_8b12
}

define i32 @function_8b1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8b1c:
  %v0_8b1c = load i32, i32* @ebx, align 4
  %v1_8b1c = add i32 %v0_8b1c, 1166794837
  %v2_8b1c = inttoptr i32 %v1_8b1c to i8*
  %v3_8b1c = load i8, i8* %v2_8b1c, align 1
  %v4_8b1c = udiv i8 %v3_8b1c, 16
  %v5_8b1c = mul i8 %v3_8b1c, 16
  %v6_8b1c = or i8 %v4_8b1c, %v5_8b1c
  store i8 %v6_8b1c, i8* %v2_8b1c, align 1
  %v0_8b23 = load i32, i32* @edx, align 4
  %v0_8b27 = load i32, i32* @eax, align 4
  %v4_8b2a = call i32 @function_11592(i32 %v0_8b27, i32 %v0_8b23)
  %v0_8b2f = load i32, i32* @ebp, align 4
  %v1_8b2f = add i32 %v0_8b2f, -32
  %v2_8b2f = inttoptr i32 %v1_8b2f to i32*
  %v3_8b2f = load i32, i32* %v2_8b2f, align 4
  %v1_8b32 = add i32 %v3_8b2f, ptrtoint (i8** @global_var_18.1179 to i32)
  %v1_8b35 = add i32 %v0_8b2f, -28
  %v2_8b35 = inttoptr i32 %v1_8b35 to i32*
  %v3_8b35 = load i32, i32* %v2_8b35, align 4
  %v1_8b38 = add i32 %v3_8b35, ptrtoint (i8** @global_var_18.1179 to i32)
  store i32 %v1_8b38, i32* @eax, align 4
  %v4_8b42 = call i32 @function_105f4(i32 %v1_8b38, i32 %v1_8b32)
  %v0_8b47 = load i32, i32* @ebp, align 4
  %v1_8b47 = add i32 %v0_8b47, -28
  %v2_8b47 = inttoptr i32 %v1_8b47 to i32*
  %v3_8b47 = load i32, i32* %v2_8b47, align 4
  %v1_8b4a = inttoptr i32 %v3_8b47 to i32*
  store i32 ptrtoint (%vtable_1b64c_type* @global_var_1b64c.1212 to i32), i32* %v1_8b4a, align 4
  %v0_8b50 = load i32, i32* @ebp, align 4
  %v1_8b50 = add i32 %v0_8b50, -28
  %v2_8b50 = inttoptr i32 %v1_8b50 to i32*
  %v3_8b50 = load i32, i32* %v2_8b50, align 4
  %v1_8b53 = add i32 %v3_8b50, 20
  %v2_8b53 = inttoptr i32 %v1_8b53 to i32*
  store i32 ptrtoint (i32* @global_var_1b664.1213 to i32), i32* %v2_8b53, align 4
  %v0_8b5a = load i32, i32* @ebp, align 4
  %v1_8b5a = add i32 %v0_8b5a, -28
  %v2_8b5a = inttoptr i32 %v1_8b5a to i32*
  %v3_8b5a = load i32, i32* %v2_8b5a, align 4
  %v1_8b5d = add i32 %v3_8b5a, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_8b5d = inttoptr i32 %v1_8b5d to i32*
  store i32 ptrtoint (i32* @global_var_1b678.1214 to i32), i32* %v2_8b5d, align 4
  %v0_8b64 = load i32, i32* @ebp, align 4
  %v1_8b64 = add i32 %v0_8b64, -12
  %v2_8b64 = inttoptr i32 %v1_8b64 to i32*
  %v3_8b64 = load i32, i32* %v2_8b64, align 4
  %v1_8b67 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8b67 = xor i32 %v1_8b67, %v3_8b64
  %v3_8b67 = icmp eq i32 %v2_8b67, 0
  store i32 %v2_8b67, i32* @eax, align 4
  br i1 %v3_8b67, label %bb, label %dec_label_pc_8b70

bb:                                               ; preds = %dec_label_pc_8b1c
  %v1_8b6e = call i32 @function_8b75()
  br label %dec_label_pc_8b70

dec_label_pc_8b70:                                ; preds = %bb, %dec_label_pc_8b1c
  %v2_8b6e = phi i32 [ %v1_8b6e, %bb ], [ %v2_8b67, %dec_label_pc_8b1c ]
  ret i32 %v2_8b6e
}

define i32 @function_8b75() local_unnamed_addr {
dec_label_pc_8b75:
  %v0_8b76 = load i32, i32* @eax, align 4
  ret i32 %v0_8b76
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_8b7c:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_8b96 = ptrtoint i32* %stack_var_-68 to i32
  %v2_8ba8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_8ba8, i32* @eax, align 4
  %v3_8bae = call i32 @function_16a20(i32 %v2_8ba8, i32 %v2_8b96)
  %v2_8bbb = ptrtoint i32* %stack_var_-44 to i32
  %v2_8bce = ptrtoint i32* %stack_var_-40 to i32
  %v2_8be1 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8ba8, i32* @eax, align 4
  %v3_8bf9 = call i32 @function_16ba6(i32 %v2_8ba8, i32 %v2_8be1)
  store i32 %v3_8bf9, i32* @eax, align 4
  %v3_8c08 = call i32 @function_16be8(i32 %v3_8bf9, i32 %v2_8bce)
  store i32 %v3_8c08, i32* @eax, align 4
  %v3_8c17 = call i32 @function_16c2a(i32 %v3_8c08, i32 %v2_8bbb)
  %v2_8c21 = load i8, i8* inttoptr (i32 35708 to i8*), align 4
  %v3_8c21 = zext i8 %v2_8c21 to i32
  store i32 %v3_8c21, i32* @eax, align 4
  %v5_8c24 = icmp eq i8 %v2_8c21, 0
  %v1_8c26 = icmp eq i1 %v5_8c24, false
  br i1 %v1_8c26, label %bb, label %dec_label_pc_8c28

bb:                                               ; preds = %dec_label_pc_8b7c
  %v2_8c26 = call i32 @function_8c98()
  br label %dec_label_pc_8c28

dec_label_pc_8c28:                                ; preds = %bb, %dec_label_pc_8b7c
  %v2_8c28 = phi i32 [ %v2_8c26, %bb ], [ %v3_8c21, %dec_label_pc_8b7c ]
  ret i32 %v2_8c28
}

define i32 @function_8c4f() local_unnamed_addr {
dec_label_pc_8c4f:
  %eax.global-to-local = alloca i32, align 4
  %v0_8c4f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8c4f
}

define i32 @function_8c98() local_unnamed_addr {
dec_label_pc_8c98:
  %v3_8c98 = load i32, i32* @eax, align 4
  ret i32 %v3_8c98
}

define i32 @function_8ca2(i32 %arg1) local_unnamed_addr {
dec_label_pc_8ca2:
  %stack_var_0 = alloca i32, align 4
  %v0_8ca2 = load i32, i32* @eax, align 4
  %v2_8ca2 = ptrtoint i32* %stack_var_0 to i32
  %v2_8ca3 = inttoptr i32 %v0_8ca2 to i32*
  store i32 %v2_8ca2, i32* %v2_8ca3, align 4
  %v0_8ca6 = call i32 @function_d9f2()
  %v0_8cab = load i32, i32* @ebp, align 4
  %v1_8cab = add i32 %v0_8cab, -92
  store i32 %v1_8cab, i32* @eax, align 4
  %v1_8cae = load i32, i32* @esp, align 4
  %v2_8cae = inttoptr i32 %v1_8cae to i32*
  store i32 %v1_8cab, i32* %v2_8cae, align 4
  %v1_8cb1 = call i32 @function_16ae0(i32 ptrtoint (i32* @0 to i32))
  %v0_8cb6 = load i32, i32* @ebp, align 4
  %v1_8cb6 = add i32 %v0_8cb6, -64
  store i32 %v1_8cb6, i32* @eax, align 4
  %v1_8cb9 = load i32, i32* @esp, align 4
  %v2_8cb9 = inttoptr i32 %v1_8cb9 to i32*
  store i32 %v1_8cb6, i32* %v2_8cb9, align 4
  %v1_8cbc = call i32 @function_1150c(i32 ptrtoint (i32* @0 to i32))
  %v0_8cc1 = load i32, i32* @ebp, align 4
  %v1_8cc1 = add i32 %v0_8cc1, -108
  %v2_8cc1 = inttoptr i32 %v1_8cc1 to i32*
  %v3_8cc1 = load i32, i32* %v2_8cc1, align 4
  store i32 %v3_8cc1, i32* @eax, align 4
  %v1_8cc4 = add i32 %v0_8cc1, -28
  %v2_8cc4 = inttoptr i32 %v1_8cc4 to i32*
  %v3_8cc4 = load i32, i32* %v2_8cc4, align 4
  %v1_8cc7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_8cc7 = icmp eq i32 %v1_8cc7, %v3_8cc4
  br i1 %v3_8cc7, label %bb, label %dec_label_pc_8cd0

bb:                                               ; preds = %dec_label_pc_8ca2
  %v1_8cce = call i32 @function_8d21()
  store i32 %v1_8cce, i32* @eax, align 4
  br label %dec_label_pc_8cd0

dec_label_pc_8cd0:                                ; preds = %bb, %dec_label_pc_8ca2
  %v0_8cd0 = call i32 @function_8d1c()
  ret i32 %v0_8cd0
}

define i32 @function_8cdb() local_unnamed_addr {
dec_label_pc_8cdb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8cdb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8cdb = add i32 %v0_8cdb, -1996297221
  %v2_8cdb = inttoptr i32 %v1_8cdb to i32*
  %v3_8cdb = load i32, i32* %v2_8cdb, align 4
  %v4_8cdb = sub i32 %v3_8cdb, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_8cdb, i32* %v2_8cdb, align 4
  %v0_8ce1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8ce1
}

define i32 @function_8cf4() local_unnamed_addr {
dec_label_pc_8cf4:
  %v0_8cf4 = call i32 @function_8cf8()
  ret i32 %v0_8cf4
}

define i32 @function_8cf6() local_unnamed_addr {
dec_label_pc_8cf6:
  %eax.global-to-local = alloca i32, align 4
  %v0_8cf6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8cf6
}

define i32 @function_8cf8() local_unnamed_addr {
dec_label_pc_8cf8:
  %v0_8cf8 = load i32, i32* @ebp, align 4
  %v1_8cf8 = add i32 %v0_8cf8, -92
  store i32 %v1_8cf8, i32* @eax, align 4
  %v1_8cfe = call i32 @function_16ae0(i32 %v1_8cf8)
  %v0_8d03 = call i32 @function_8d07()
  ret i32 %v0_8d03

; uselistorder directives
  uselistorder i32 (i32)* @function_16ae0, { 1, 0 }
}

define i32 @function_8d05() local_unnamed_addr {
dec_label_pc_8d05:
  %eax.global-to-local = alloca i32, align 4
  %v0_8d05 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8d05
}

define i32 @function_8d07() local_unnamed_addr {
dec_label_pc_8d07:
  %v0_8d07 = load i32, i32* @ebp, align 4
  %v1_8d07 = add i32 %v0_8d07, -64
  store i32 %v1_8d07, i32* @eax, align 4
  %v1_8d0d = call i32 @function_1150c(i32 %v1_8d07)
  %v0_8d12 = load i32, i32* @ebx, align 4
  ret i32 %v0_8d12

; uselistorder directives
  uselistorder i32 (i32)* @function_1150c, { 1, 0 }
}

define i32 @function_8d1c() local_unnamed_addr {
dec_label_pc_8d1c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8d21() local_unnamed_addr {
dec_label_pc_8d21:
  %v0_8d28 = load i32, i32* @eax, align 4
  ret i32 %v0_8d28
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_8d2c:
  %v2_8d46 = load i32, i32* %arg1, align 4
  store i32 %v2_8d46, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8d54

bb:                                               ; preds = %dec_label_pc_8d2c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_8d52 = call i32 @function_8d59(i32 %tmp100)
  br label %dec_label_pc_8d54

dec_label_pc_8d54:                                ; preds = %bb, %dec_label_pc_8d2c
  %v3_8d52 = phi i32 [ %v2_8d52, %bb ], [ %v2_8d46, %dec_label_pc_8d2c ]
  ret i32 %v3_8d52

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_8d59(i32 %arg1) local_unnamed_addr {
dec_label_pc_8d59:
  %v0_8d5a = load i32, i32* @eax, align 4
  ret i32 %v0_8d5a
}

define i32 @_ZNSs6appendIPKcEERSsT_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8d5c:
  %stack_var_-20 = alloca i32, align 4
  %v2_8d7f = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_8d7f
}

define i32 @function_8dce(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8dce:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8de0() local_unnamed_addr {
dec_label_pc_8de0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8de0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8de0 = sub i32 %v0_8de0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_8de0, i32* %ecx.global-to-local, align 4
  %v0_8de2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8de2
}

define i32 @_Z3REFI9CFlatDataERT_RKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_8de3:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8e09

bb:                                               ; preds = %dec_label_pc_8de3
  %v2_8e07 = call i32 @function_8e0e(i32 %arg1)
  br label %dec_label_pc_8e09

dec_label_pc_8e09:                                ; preds = %bb, %dec_label_pc_8de3
  %v3_8e07 = phi i32 [ %v2_8e07, %bb ], [ %arg1, %dec_label_pc_8de3 ]
  ret i32 %v3_8e07
}

define i32 @function_8e0e(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e0e:
  %v0_8e0f = load i32, i32* @eax, align 4
  ret i32 %v0_8e0f
}

define i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8e10:
  %v2_8e30 = load i32, i32* %arg1, align 4
  %v5_8e32 = add i32 %v2_8e30, %arg2
  store i32 %v5_8e32, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8e41

bb:                                               ; preds = %dec_label_pc_8e10
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_8e3f = call i32 @function_8e46(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_8e41

dec_label_pc_8e41:                                ; preds = %bb, %dec_label_pc_8e10
  %v4_8e3f = phi i32 [ %v3_8e3f, %bb ], [ %v5_8e32, %dec_label_pc_8e10 ]
  ret i32 %v4_8e3f

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_8e46(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8e46:
  %v0_8e47 = load i32, i32* @eax, align 4
  ret i32 %v0_8e47
}

define i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8e48:
  store i32 %arg1, i32* @eax, align 4
  %v2_8e72 = call i32 @function_16fae(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8e86

bb:                                               ; preds = %dec_label_pc_8e48
  %v1_8e84 = call i32 @function_8e8b()
  br label %dec_label_pc_8e86

dec_label_pc_8e86:                                ; preds = %bb, %dec_label_pc_8e48
  %v2_8e84 = phi i32 [ %v1_8e84, %bb ], [ %arg1, %dec_label_pc_8e48 ]
  ret i32 %v2_8e84

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_8e8b() local_unnamed_addr {
dec_label_pc_8e8b:
  %v0_8e8c = load i32, i32* @eax, align 4
  ret i32 %v0_8e8c
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8e90:
  %stack_var_-20 = alloca i32, align 4
  %v2_8eb6 = load i32, i32* %arg2, align 4
  %v1_8ebb = inttoptr i32 %arg3 to i32*
  %v2_8ebb = load i32, i32* %v1_8ebb, align 4
  %v2_8ebd = add i32 %v2_8ebb, %v2_8eb6
  store i32 %v2_8ebd, i32* %stack_var_-20, align 4
  %v2_8ec2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_8ecf = call i32 @function_16ff6(i32 %arg1, i32 %v2_8ec2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8ee3

bb:                                               ; preds = %dec_label_pc_8e90
  %v1_8ee1 = call i32 @function_8ee8()
  br label %dec_label_pc_8ee3

dec_label_pc_8ee3:                                ; preds = %bb, %dec_label_pc_8e90
  %v2_8ee1 = phi i32 [ %v1_8ee1, %bb ], [ %arg1, %dec_label_pc_8e90 ]
  ret i32 %v2_8ee1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_8ee8() local_unnamed_addr {
dec_label_pc_8ee8:
  %v0_8ee9 = load i32, i32* @eax, align 4
  ret i32 %v0_8ee9
}

define i32 @_ZSt12reverse_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8eec:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  store i32 %arg4, i32* %stack_var_-44, align 4
  %v4_8f4e = ptrtoint i32* %stack_var_-40 to i32
  %v2_8f52 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8f52, i32* @eax, align 4
  %v2_8f582 = call i32 @function_12313(i32 %v2_8f52, i32 %v4_8f4e)
  %v4_8f5d3 = trunc i32 %v2_8f582 to i8
  %v5_8f5d4 = icmp eq i8 %v4_8f5d3, 0
  %v1_8f5f6 = icmp eq i1 %v5_8f5d4, false
  br i1 %v1_8f5f6, label %dec_label_pc_8f18.lr.ph, label %dec_label_pc_8f61

dec_label_pc_8f18.lr.ph:                          ; preds = %dec_label_pc_8eec
  %v2_8f23 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_8f18

dec_label_pc_8f18:                                ; preds = %dec_label_pc_8f18.lr.ph, %dec_label_pc_8f18
  store i32 %v4_8f4e, i32* @eax, align 4
  %v1_8f1e = call x86_fp80 @function_1708c(i32 %v4_8f4e)
  store x86_fp80 %v1_8f1e, x86_fp80* @st0, align 4
  store i32 %v2_8f23, i32* @ebx, align 4
  store i32 %v4_8f4e, i32* @eax, align 4
  %v1_8f36 = call i32 @function_12226(i32 %v4_8f4e)
  %v1_8f3b = inttoptr i32 %v1_8f36 to i8*
  %v2_8f3b = load i8, i8* %v1_8f3b, align 1
  %v3_8f3b = zext i8 %v2_8f3b to i32
  store i32 %v3_8f3b, i32* %stack_var_-44, align 4
  store i32 %v2_8f23, i32* @eax, align 4
  %v1_8f46 = call i32 @function_170f6(i32 %v2_8f23)
  store i32 %v2_8f52, i32* @eax, align 4
  %v2_8f58 = call i32 @function_12313(i32 %v2_8f52, i32 %v4_8f4e)
  %v4_8f5d = trunc i32 %v2_8f58 to i8
  %v5_8f5d = icmp eq i8 %v4_8f5d, 0
  %v1_8f5f = icmp eq i1 %v5_8f5d, false
  br i1 %v1_8f5f, label %dec_label_pc_8f18, label %dec_label_pc_8f4b.dec_label_pc_8f61_crit_edge

dec_label_pc_8f4b.dec_label_pc_8f61_crit_edge:    ; preds = %dec_label_pc_8f18
  %v3_8f64.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_8f61

dec_label_pc_8f61:                                ; preds = %dec_label_pc_8f4b.dec_label_pc_8f61_crit_edge, %dec_label_pc_8eec
  %v3_8f64 = phi i32 [ %v3_8f64.pre, %dec_label_pc_8f4b.dec_label_pc_8f61_crit_edge ], [ %arg4, %dec_label_pc_8eec ]
  store i32 %v3_8f64, i32* %arg1, align 4
  ret i32 %tmp114

; uselistorder directives
  uselistorder i32 %v2_8f52, { 2, 3, 0, 1 }
  uselistorder i32 %v4_8f4e, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @function_12313, { 1, 0 }
  uselistorder label %dec_label_pc_8f18, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8f86:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_8fab = call i32 @function_171ca(i32 %arg2)
  store i32 %v1_8fab, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_8fb8 = call i32 @function_10830(i32 %arg2)
  %v0_8fc0 = load i32, i32* @ebx, align 4
  %v3_8fcb = call i32 @function_169c8(i32 %tmp107, i32 %v1_8fb8, i32 %v0_8fc0)
  store i32 %tmp107, i32* @ebx, align 4
  %v2_8fe0 = load i32, i32* %arg1, align 4
  store i32 %v2_8fe0, i32* %esi.global-to-local, align 4
  %v2_8fe2 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8fef = call i32 @function_10da0(i32 %v2_8fe2, i32 %arg2)
  %v2_8ff7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8ff7, i32* @eax, align 4
  %v2_9004 = call i32 @function_10d50(i32 %v2_8ff7, i32 %arg2)
  %v0_900c = load i32, i32* @ebx, align 4
  %v0_9010 = load i32, i32* %esi.global-to-local, align 4
  %v3_9014 = load i32, i32* %stack_var_-20, align 4
  %v3_901b = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_901b, i32* @eax, align 4
  %v4_9021 = call i32 @function_171f7(i32 %v3_901b, i32 %v3_9014, i32 %v0_9010, i32 %v0_900c)
  %v2_902b = add i32 %tmp107, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_902b = inttoptr i32 %v2_902b to i32*
  store i32 %v4_9021, i32* %v3_902b, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_903a

bb:                                               ; preds = %dec_label_pc_8f86
  %v1_9038 = call i32 @function_9058()
  store i32 %v1_9038, i32* @eax, align 4
  br label %dec_label_pc_903a

dec_label_pc_903a:                                ; preds = %bb, %dec_label_pc_8f86
  %v0_903a = call i32 @function_9053()
  ret i32 %v0_903a

; uselistorder directives
  uselistorder i32 %tmp107, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_903d() local_unnamed_addr {
dec_label_pc_903d:
  %eax.global-to-local = alloca i32, align 4
  %v0_903d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_903d
}

define i32 @function_9053() local_unnamed_addr {
dec_label_pc_9053:
  %v0_9053 = load i32, i32* @eax, align 4
  ret i32 %v0_9053
}

define i32 @function_9058() local_unnamed_addr {
dec_label_pc_9058:
  %v0_905e = load i32, i32* @eax, align 4
  ret i32 %v0_905e
}

define i32 @_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9060:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp118 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %arg4, i32* %stack_var_-60, align 4
  %v2_9091 = ptrtoint i32* %stack_var_-56 to i32
  %v4_909c = trunc i32 %v2_9091 to i8
  %v5_909c = icmp eq i8 %v4_909c, 0
  br i1 %v5_909c, label %dec_label_pc_914c, label %dec_label_pc_90a4

dec_label_pc_90a4:                                ; preds = %dec_label_pc_9060
  %v2_90a4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_90a4, i32* @eax, align 4
  %v2_90b1 = call i32 @function_121d0(i32 %v2_90a4, i32 %arg2)
  %v2_90c0 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_90c0, i32* %stack_var_-80, align 4
  %v4_90cb = trunc i32 %v2_90c0 to i8
  %v5_90cb = icmp eq i8 %v4_90cb, 0
  br i1 %v5_90cb, label %dec_label_pc_9107, label %dec_label_pc_90cf

dec_label_pc_90cf:                                ; preds = %dec_label_pc_90a4
  %v2_90cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_90cf, i32* @eax, align 4
  store i32 %v2_90cf, i32* %stack_var_-80, align 4
  %v2_90dc = call i32 @function_121d0(i32 %v2_90cf, i32 %arg2)
  %v2_90e4 = ptrtoint i32* %stack_var_-24 to i32
  %v3_90f5 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_90f5, i32* %stack_var_-80, align 4
  store i32 %v2_90e4, i32* %stack_var_-84, align 4
  br label %dec_label_pc_9107

dec_label_pc_9107:                                ; preds = %dec_label_pc_90cf, %dec_label_pc_90a4
  %v1_910a.in = phi i32* [ %stack_var_-88, %dec_label_pc_90cf ], [ %stack_var_-80, %dec_label_pc_90a4 ]
  store i32 %v2_9091, i32* @eax, align 4
  store i32 %v2_9091, i32* %v1_910a.in, align 4
  %v0_910d = call i32 @function_17466()
  %v1_9112 = inttoptr i32 %v0_910d to i32*
  %v2_9112 = load i32, i32* %v1_9112, align 4
  store i32 %v2_9112, i32* @ebx, align 4
  %v2_9114 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_9114, i32* @eax, align 4
  %v1_911a = load i32, i32* @esp, align 4
  %v2_911a = add i32 %v1_911a, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_911a = inttoptr i32 %v2_911a to i32*
  store i32 %arg2, i32* %v3_911a, align 4
  %v1_911e = load i32, i32* @esp, align 4
  %v2_911e = inttoptr i32 %v1_911e to i32*
  store i32 %v2_9114, i32* %v2_911e, align 4
  %v0_9121 = load i32, i32* %stack_var_-84, align 4
  %v1_9121 = load i32, i32* %stack_var_-80, align 4
  %v2_9121 = call i32 @function_121d0(i32 %v0_9121, i32 %v1_9121)
  %v0_9126 = load i32, i32* @esp, align 4
  %v3_912c = inttoptr i32 %v0_9126 to i32*
  store i32 %v2_90c0, i32* %v3_912c, align 4
  %v1_9133 = load i32, i32* @esp, align 4
  %v2_9133 = inttoptr i32 %v1_9133 to i32*
  store i32 %v2_9114, i32* %v2_9133, align 4
  %v0_9136 = call i32 @function_12430()
  %v1_913b = load i32, i32* @ebx, align 4
  %v2_913b = add i32 %v1_913b, %v0_9136
  %v1_913d = load i32, i32* @esp, align 4
  %v2_913d = add i32 %v1_913d, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_913d = inttoptr i32 %v2_913d to i32*
  store i32 %v2_913b, i32* %v3_913d, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_9144 = load i32, i32* @esp, align 4
  %v2_9144 = inttoptr i32 %v1_9144 to i32*
  store i32 %arg2, i32* %v2_9144, align 4
  %v0_9147 = call i32 @function_17408()
  %v3_914f.pre = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_914c

dec_label_pc_914c:                                ; preds = %dec_label_pc_9107, %dec_label_pc_9060
  %v3_914f = phi i32 [ %v3_914f.pre, %dec_label_pc_9107 ], [ %arg3, %dec_label_pc_9060 ]
  store i32 %v3_914f, i32* %arg1, align 4
  store i32 %tmp118, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9163

bb:                                               ; preds = %dec_label_pc_914c
  %v1_9161 = call i32 @function_9168()
  br label %dec_label_pc_9163

dec_label_pc_9163:                                ; preds = %bb, %dec_label_pc_914c
  %v2_9161 = phi i32 [ %v1_9161, %bb ], [ %tmp118, %dec_label_pc_914c ]
  ret i32 %v2_9161

; uselistorder directives
  uselistorder i32 %v2_90cf, { 1, 0, 2 }
  uselistorder i32 %v2_90c0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @function_121d0, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 3, 0, 4 }
}

define i32 @function_9168() local_unnamed_addr {
dec_label_pc_9168:
  %v0_916c = load i32, i32* @eax, align 4
  ret i32 %v0_916c
}

define i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9170:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_91b1

bb:                                               ; preds = %dec_label_pc_9170
  %v1_9190 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v4_91af = call i32 @function_91b6(i32 %arg1, i32 %v1_9190)
  br label %dec_label_pc_91b1

dec_label_pc_91b1:                                ; preds = %bb, %dec_label_pc_9170
  %v5_91af = phi i32 [ %v4_91af, %bb ], [ %arg1, %dec_label_pc_9170 ]
  ret i32 %v5_91af
}

define i32 @function_91b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_91b6:
  %v4_91b6 = load i32, i32* @eax, align 4
  ret i32 %v4_91b6
}

define i32 @function_91b9() local_unnamed_addr {
dec_label_pc_91b9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_91ba:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_91d8 = ptrtoint i32* %stack_var_-37 to i32
  store i32 %v2_91d8, i32* @eax, align 4
  %v2_91db = ptrtoint i32* %stack_var_-32 to i32
  %v2_91e5 = call i32 @function_175ed(i32 %v2_91d8, i32 %v2_91db)
  %v0_91ed = load i32, i32* %ebx.global-to-local, align 4
  %v3_91f8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_91f8, i32* @eax, align 4
  %v3_91fe = call i32 @function_17622(i32 %v3_91f8, i32 %arg2, i32 %v0_91ed)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_920f

bb:                                               ; preds = %dec_label_pc_91ba
  %v1_920d = call i32 @function_9214()
  br label %dec_label_pc_920f

dec_label_pc_920f:                                ; preds = %bb, %dec_label_pc_91ba
  %v2_920d = phi i32 [ %v1_920d, %bb ], [ 0, %dec_label_pc_91ba ]
  ret i32 %v2_920d
}

define i32 @function_9214() local_unnamed_addr {
dec_label_pc_9214:
  %v0_9218 = load i32, i32* @eax, align 4
  ret i32 %v0_9218
}

define i32 @_ZNSt6vectorIhSaIhEEC1IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_() local_unnamed_addr {
dec_label_pc_921a:
  %eax.global-to-local = alloca i32, align 4
  %v5_921d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_921d
}

define i32 @function_9220(i32 %arg1) local_unnamed_addr {
dec_label_pc_9220:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_9220 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_9220 = xor i32 %v0_9220, 139
  store i32 %v11_9220, i32* %eax.global-to-local, align 4
  %v0_9222 = load i32, i32* @ebp, align 4
  %v1_9222 = add i32 %v0_9222, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_9222, i32* %ebp.global-to-local, align 4
  %v0_9223 = load i32, i32* @ecx, align 4
  %v1_9223 = add i32 %v0_9223, 1166795845
  %v2_9223 = inttoptr i32 %v1_9223 to i8*
  %v3_9223 = load i8, i8* %v2_9223, align 1
  %v5_9223 = trunc i32 %v0_9223 to i8
  %v6_9223 = or i8 %v3_9223, %v5_9223
  store i8 %v6_9223, i8* %v2_9223, align 1
  %v0_9229 = load i32, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_9229 = or i32 %v0_9229, 137
  store i32 %v11_9229, i32* @eax, align 4
  %v0_922b = load i32, i32* %ebp.global-to-local, align 4
  %v1_922b = add i32 %v0_922b, ptrtoint (i8** @global_var_1.1176 to i32)
  %v9_922b = icmp eq i32 %v1_922b, 0
  store i32 %v1_922b, i32* %ebp.global-to-local, align 4
  %v0_922c = load i32, i32* @ecx, align 4
  %v1_922c = sub i32 %v0_922c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_922c, i32* @ecx, align 4
  %v2_922c = icmp eq i32 %v1_922c, 0
  %v4_922c = or i1 %v9_922b, %v2_922c
  br i1 %v4_922c, label %dec_label_pc_922e, label %bb

bb:                                               ; preds = %dec_label_pc_9220
  %v6_922c = call i32 @function_91b9()
  store i32 %v6_922c, i32* @eax, align 4
  %v0_922e.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_922f.pre = load i32, i32* @ecx, align 4
  %v6_922f.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_922e

dec_label_pc_922e:                                ; preds = %dec_label_pc_9220, %bb
  %v6_922f = phi i1 [ false, %dec_label_pc_9220 ], [ %v6_922f.pre, %bb ]
  %v30_922f = phi i32 [ %v1_922c, %dec_label_pc_9220 ], [ %v0_922f.pre, %bb ]
  %v0_922e = phi i32 [ %v1_922b, %dec_label_pc_9220 ], [ %v0_922e.pre, %bb ]
  %v1_922e = add i32 %v0_922e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_922e, i32* %ebp.global-to-local, align 4
  %v1_922f = add i32 %v30_922f, 1166793797
  %v2_922f = inttoptr i32 %v1_922f to i8*
  %v3_922f = load i8, i8* %v2_922f, align 1
  %v5_922f = trunc i32 %v30_922f to i8
  %v7_922f = zext i1 %v6_922f to i8
  %v8_922f = add i8 %v3_922f, %v5_922f
  %v9_922f = add i8 %v8_922f, %v7_922f
  %v27_922f = icmp ule i8 %v9_922f, %v3_922f
  %v28_922f = icmp ult i8 %v8_922f, %v3_922f
  %v29_922f = select i1 %v6_922f, i1 %v27_922f, i1 %v28_922f
  store i1 %v29_922f, i1* %cf.global-to-local, align 1
  store i8 %v9_922f, i8* %v2_922f, align 1
  %v0_9235 = load i32, i32* @eax, align 4
  %v1_9235 = trunc i32 %v0_9235 to i8
  %v2_9235 = load i1, i1* %cf.global-to-local, align 1
  %v3_9235 = zext i1 %v2_9235 to i8
  %v4_9235 = add i8 %v1_9235, -119
  %v5_9235 = add i8 %v4_9235, %v3_9235
  %v22_9235 = icmp ule i8 %v5_9235, %v1_9235
  %v23_9235 = icmp ugt i8 %v1_9235, 118
  %v24_9235 = select i1 %v2_9235, i1 %v22_9235, i1 %v23_9235
  %v25_9235 = zext i8 %v5_9235 to i32
  %v27_9235 = and i32 %v0_9235, -256
  %v28_9235 = or i32 %v25_9235, %v27_9235
  store i32 %v28_9235, i32* %eax.global-to-local, align 4
  %v0_9237 = load i32, i32* %ebp.global-to-local, align 4
  %v1_9237 = add i32 %v0_9237, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_9237, i32* @ebp, align 4
  %v2_9238 = add i32 %v0_9237, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -95)
  %v3_9238 = inttoptr i32 %v2_9238 to float*
  %v4_9238 = load float, float* %v3_9238, align 4
  %v5_9238 = fpext float %v4_9238 to x86_fp80
  %v6_9238 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_9238 = fsub x86_fp80 %v5_9238, %v6_9238
  store x86_fp80 %v7_9238, x86_fp80* @st0, align 4
  %v3_923b = zext i1 %v24_9235 to i8
  %v4_923b = add i8 %v3_923b, %v5_9235
  %v19_923b = icmp ule i8 %v4_923b, %v5_9235
  %v21_923b = icmp eq i1 %v24_9235, %v19_923b
  store i1 %v21_923b, i1* %cf.global-to-local, align 1
  %v22_923b = zext i8 %v4_923b to i32
  %v25_923b = or i32 %v22_923b, %v27_9235
  store i32 %v25_923b, i32* %eax.global-to-local, align 4
  %v1_923d = inttoptr i32 %v25_923b to i8*
  %v2_923d = load i8, i8* %v1_923d, align 1
  %v5_923d = add i8 %v2_923d, %v4_923b
  store i8 %v5_923d, i8* %v1_923d, align 1
  %v0_923f = load i32, i32* %eax.global-to-local, align 4
  %v1_923f = load i32, i32* @ebp, align 4
  %v2_923f = add i32 %v1_923f, -12
  %v3_923f = inttoptr i32 %v2_923f to i32*
  store i32 %v0_923f, i32* %v3_923f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_9244 = load i32, i32* @ebp, align 4
  %v1_9244 = add i32 %v0_9244, -28
  %v2_9244 = inttoptr i32 %v1_9244 to i32*
  %v3_9244 = load i32, i32* %v2_9244, align 4
  store i32 %v3_9244, i32* %eax.global-to-local, align 4
  %v0_9256 = load i32, i32* @ebx, align 4
  %v1_925a = add i32 %v0_9244, -36
  %v2_925a = inttoptr i32 %v1_925a to i32*
  %v3_925a = load i32, i32* %v2_925a, align 4
  store i32 %v3_925a, i32* %eax.global-to-local, align 4
  %v1_9261 = add i32 %v0_9244, -32
  %v2_9261 = inttoptr i32 %v1_9261 to i32*
  %v3_9261 = load i32, i32* %v2_9261, align 4
  store i32 %v3_9261, i32* %eax.global-to-local, align 4
  %v3_9268 = load i32, i32* %v2_9244, align 4
  store i32 %v3_9268, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_9256, 16777216
  %v4_9273 = sdiv i32 %sext, 16777216
  %v5_9273 = call i32 @function_928c(i32 %v3_9268, i32 %v3_9261, i32 %v3_925a, i32 %v4_9273)
  store i32 %v5_9273, i32* %eax.global-to-local, align 4
  ret i32 %v5_9273

; uselistorder directives
  uselistorder i32 %v0_9244, { 1, 0, 2 }
  uselistorder i8 %v4_923b, { 0, 2, 1 }
  uselistorder i8 %v5_9235, { 1, 0, 3, 2 }
  uselistorder i8 %v9_922f, { 1, 0 }
  uselistorder i8 %v8_922f, { 1, 0 }
  uselistorder i8 %v3_922f, { 1, 2, 0 }
  uselistorder i32 %v30_922f, { 1, 0 }
  uselistorder i1 %v6_922f, { 1, 0 }
  uselistorder label %dec_label_pc_922e, { 1, 0 }
}

define i32 @function_9276() local_unnamed_addr {
dec_label_pc_9276:
  %eax.global-to-local = alloca i32, align 4
  %v0_9276 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9276
}

define i32 @function_928c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_928c:
  %v0_928c = load i32, i32* @ebp, align 4
  %v1_928c = add i32 %v0_928c, -12
  %v2_928c = inttoptr i32 %v1_928c to i32*
  %v3_928c = load i32, i32* %v2_928c, align 4
  %v1_928f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_928f = xor i32 %v1_928f, %v3_928c
  %v3_928f = icmp eq i32 %v2_928f, 0
  store i32 %v2_928f, i32* @eax, align 4
  br i1 %v3_928f, label %bb, label %dec_label_pc_9298

bb:                                               ; preds = %dec_label_pc_928c
  %v1_9296 = call i32 @function_929d()
  br label %dec_label_pc_9298

dec_label_pc_9298:                                ; preds = %bb, %dec_label_pc_928c
  %v2_9296 = phi i32 [ %v1_9296, %bb ], [ %v2_928f, %dec_label_pc_928c ]
  ret i32 %v2_9296
}

define i32 @function_929d() local_unnamed_addr {
dec_label_pc_929d:
  %v0_92a2 = load i32, i32* @eax, align 4
  ret i32 %v0_92a2
}

define i32 @_ZNSt6vectorIhSaIhEE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_92a4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_92b0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_92be = load i32, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  %v2_92ca = call i32 @function_1764c(i32 %tmp100, i32 %v2_92be)
  ret i32 %v0_92b0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_92d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_92d8:
  %v0_92d8 = load i32, i32* @ebp, align 4
  %v1_92d8 = load i32, i32* @eax, align 4
  %v2_92d8 = mul i32 %v1_92d8, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_92d8 = add i32 %v0_92d8, -24
  %v4_92d8 = add i32 %v3_92d8, %v2_92d8
  %v5_92d8 = inttoptr i32 %v4_92d8 to i8*
  %v6_92d8 = load i8, i8* %v5_92d8, align 1
  %v7_92d8 = load i32, i32* @edx, align 4
  %v8_92d8 = lshr i32 %v7_92d8, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_92d8 = trunc i32 %v8_92d8 to i8
  %v10_92d8 = add i8 %v9_92d8, %v6_92d8
  store i8 %v10_92d8, i8* %v5_92d8, align 1
  %v31_92d8 = load i32, i32* @eax, align 4
  ret i32 %v31_92d8
}

define i32 @function_92df() local_unnamed_addr {
dec_label_pc_92df:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_92df = load i32, i32* %ecx.global-to-local, align 4
  %v1_92df = sub i32 %v0_92df, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_92df, i32* %ecx.global-to-local, align 4
  %v0_92e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_92e1
}

define i32 @_ZN9__gnu_cxxmiIPKhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_92e2:
  ret i32 %arg2
}

define i32 @function_92fa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_92fa:
  %v0_92fa = load i32, i32* @ecx, align 4
  %v1_92fa = add i32 %v0_92fa, -1070468027
  %v2_92fa = inttoptr i32 %v1_92fa to i8*
  %v3_92fa = load i8, i8* %v2_92fa, align 1
  %v5_92fa = trunc i32 %v0_92fa to i8
  %v6_92fa = add i8 %v3_92fa, %v5_92fa
  store i8 %v6_92fa, i8* %v2_92fa, align 1
  %v0_9300 = load i32, i32* @ebp, align 4
  %v1_9300 = add i32 %v0_9300, -28
  %v2_9300 = inttoptr i32 %v1_9300 to i32*
  %v3_9300 = load i32, i32* %v2_9300, align 4
  %v1_930b = inttoptr i32 %v3_9300 to i32*
  %v2_930b = load i32, i32* %v1_930b, align 4
  %v1_930f = add i32 %v0_9300, -32
  %v2_930f = inttoptr i32 %v1_930f to i32*
  %v3_930f = load i32, i32* %v2_930f, align 4
  %v1_931a = inttoptr i32 %v3_930f to i32*
  %v2_931a = load i32, i32* %v1_931a, align 4
  %v2_931e = sub i32 %v2_930b, %v2_931a
  store i32 %v2_931e, i32* @eax, align 4
  %v1_9322 = add i32 %v0_9300, -12
  %v2_9322 = inttoptr i32 %v1_9322 to i32*
  %v3_9322 = load i32, i32* %v2_9322, align 4
  %v1_9325 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_9325 = icmp eq i32 %v1_9325, %v3_9322
  br i1 %v3_9325, label %bb, label %dec_label_pc_932e

bb:                                               ; preds = %dec_label_pc_92fa
  %v2_932c = call i32 @function_9333(i32 %v3_930f)
  br label %dec_label_pc_932e

dec_label_pc_932e:                                ; preds = %bb, %dec_label_pc_92fa
  %v3_932c = phi i32 [ %v2_932c, %bb ], [ %v2_931e, %dec_label_pc_92fa ]
  ret i32 %v3_932c
}

define i32 @function_9333(i32 %arg1) local_unnamed_addr {
dec_label_pc_9333:
  %v0_9338 = load i32, i32* @eax, align 4
  ret i32 %v0_9338
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_933a:
  %v2_9354 = load i32, i32* %arg1, align 4
  store i32 %v2_9354, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9362

bb:                                               ; preds = %dec_label_pc_933a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_9360 = call i32 @function_9367(i32 %tmp100)
  br label %dec_label_pc_9362

dec_label_pc_9362:                                ; preds = %bb, %dec_label_pc_933a
  %v3_9360 = phi i32 [ %v2_9360, %bb ], [ %v2_9354, %dec_label_pc_933a ]
  ret i32 %v3_9360

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_9367(i32 %arg1) local_unnamed_addr {
dec_label_pc_9367:
  %v0_9368 = load i32, i32* @eax, align 4
  ret i32 %v0_9368
}

define i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_936a:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_9381 = ptrtoint i32* %stack_var_-24 to i32
  %v2_9396 = ptrtoint i32* %stack_var_-20 to i32
  %v4_93b8 = call x86_fp80 @function_16ba2(i32 %v2_9396, i32 %v2_9381, i32 %arg1, i32 %arg1)
  %v5_93b8 = fptrunc x86_fp80 %v4_93b8 to float
  %v6_93b8 = bitcast float %v5_93b8 to i32
  ret i32 %v6_93b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxxmiIPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_93d0:
  store i32 %arg1, i32* @eax, align 4
  %v1_93f4 = call i32 @function_177d6(i32 %arg1)
  %v1_93f9 = inttoptr i32 %v1_93f4 to i32*
  %v2_93f9 = load i32, i32* %v1_93f9, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_9403 = call i32 @function_177d6(i32 %arg2)
  %v1_9408 = inttoptr i32 %v1_9403 to i32*
  %v2_9408 = load i32, i32* %v1_9408, align 4
  %v2_940c = sub i32 %v2_93f9, %v2_9408
  store i32 %v2_940c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_941c

bb:                                               ; preds = %dec_label_pc_93d0
  %v1_941a = call i32 @function_9421()
  br label %dec_label_pc_941c

dec_label_pc_941c:                                ; preds = %bb, %dec_label_pc_93d0
  %v2_941a = phi i32 [ %v1_941a, %bb ], [ %v2_940c, %dec_label_pc_93d0 ]
  ret i32 %v2_941a

; uselistorder directives
  uselistorder i32 (i32)* @function_177d6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9421() local_unnamed_addr {
dec_label_pc_9421:
  %v0_9426 = load i32, i32* @eax, align 4
  ret i32 %v0_9426
}

define i32 @_ZN9__gnu_cxxneIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9427:
  %v1_944b = call i32 @function_17a45(i32 %arg1)
  %v1_9450 = inttoptr i32 %v1_944b to i32*
  %v2_9450 = load i32, i32* %v1_9450, align 4
  store i32 %v2_9450, i32* @ebx, align 4
  %v1_9458 = call i32 @function_17a45(i32 %arg2)
  %v1_945d = inttoptr i32 %v1_9458 to i32*
  %v2_945d = load i32, i32* %v1_945d, align 4
  %v0_945f = load i32, i32* @ebx, align 4
  %v12_945f = icmp eq i32 %v0_945f, %v2_945d
  %v1_9461 = icmp eq i1 %v12_945f, false
  %v2_9461 = zext i1 %v1_9461 to i32
  %v4_9461 = and i32 %v2_945d, -256
  %v5_9461 = or i32 %v2_9461, %v4_9461
  store i32 %v5_9461, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9470

bb:                                               ; preds = %dec_label_pc_9427
  %v1_946e = call i32 @function_9475()
  br label %dec_label_pc_9470

dec_label_pc_9470:                                ; preds = %bb, %dec_label_pc_9427
  %v2_946e = phi i32 [ %v1_946e, %bb ], [ %v5_9461, %dec_label_pc_9427 ]
  ret i32 %v2_946e

; uselistorder directives
  uselistorder i32 %v2_945d, { 1, 0 }
  uselistorder i32 (i32)* @function_17a45, { 1, 0 }
}

define i32 @function_9475() local_unnamed_addr {
dec_label_pc_9475:
  %v0_947a = load i32, i32* @eax, align 4
  ret i32 %v0_947a
}

define i32 @_Z3REFIjERT_RKS0_() local_unnamed_addr {
dec_label_pc_947b:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  br i1 true, label %bb, label %dec_label_pc_94a1

bb:                                               ; preds = %dec_label_pc_947b
  %v2_949f = call i32 @function_94a6(i32 %tmp3)
  br label %dec_label_pc_94a1

dec_label_pc_94a1:                                ; preds = %bb, %dec_label_pc_947b
  %v3_949f = phi i32 [ %v2_949f, %bb ], [ %tmp3, %dec_label_pc_947b ]
  ret i32 %v3_949f
}

define i32 @function_94a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_94a6:
  %v0_94a7 = load i32, i32* @eax, align 4
  ret i32 %v0_94a7
}

define i32 @_Z10WrapVarIntIjE7CVarIntIT_ERS1_() local_unnamed_addr {
dec_label_pc_94a8:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  br i1 true, label %bb, label %dec_label_pc_94e6

bb:                                               ; preds = %dec_label_pc_94a8
  %v3_94e4 = call i32 @function_94eb(i32 %tmp6, i32 %tmp4)
  br label %dec_label_pc_94e6

dec_label_pc_94e6:                                ; preds = %bb, %dec_label_pc_94a8
  %v4_94e4 = phi i32 [ %v3_94e4, %bb ], [ %tmp6, %dec_label_pc_94a8 ]
  ret i32 %v4_94e4
}

define i32 @function_94eb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_94eb:
  %v0_94ec = load i32, i32* @eax, align 4
  ret i32 %v0_94ec
}

define i32 @_Z3REFI7CVarIntIjEERT_RKS2_() local_unnamed_addr {
dec_label_pc_94ef:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp3
}

define i32 @_ZNK7CVarIntIjE16GetSerializeSizeEii(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_951c:
  %v2_9542 = load i32, i32* %arg1, align 4
  %v1_9544 = inttoptr i32 %v2_9542 to i32*
  %v2_9544 = load i32, i32* %v1_9544, align 4
  store i32 %v2_9544, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_955a

bb:                                               ; preds = %dec_label_pc_951c
  %v2_9558 = call i32 @function_955f(i32 %v2_9544)
  br label %dec_label_pc_955a

dec_label_pc_955a:                                ; preds = %bb, %dec_label_pc_951c
  %v3_9558 = phi i32 [ %v2_9558, %bb ], [ %v2_9544, %dec_label_pc_951c ]
  ret i32 %v3_9558
}

define i32 @function_955f(i32 %arg1) local_unnamed_addr {
dec_label_pc_955f:
  %v0_9560 = load i32, i32* @eax, align 4
  ret i32 %v0_9560
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9562:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9590

bb:                                               ; preds = %dec_label_pc_9562
  %v2_958e = call i32 @function_9595(i32 %arg1)
  br label %dec_label_pc_9590

dec_label_pc_9590:                                ; preds = %bb, %dec_label_pc_9562
  %v3_958e = phi i32 [ %v2_958e, %bb ], [ 0, %dec_label_pc_9562 ]
  ret i32 %v3_958e
}

define i32 @function_9595(i32 %arg1) local_unnamed_addr {
dec_label_pc_9595:
  %v0_9596 = load i32, i32* @eax, align 4
  ret i32 %v0_9596
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_9598:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 4
  %v1_95be = add i32 %tmp101, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_95be = inttoptr i32 %v1_95be to i32*
  %v3_95be = load i32, i32* %v2_95be, align 4
  store i32 %v3_95be, i32* @ecx, align 4
  %v2_95c4 = load i32, i32* %arg1, align 4
  %v3_95d1 = call i32 @function_17d8d(i32 %v2_95c4, i32 %v3_95be, i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_95ed

bb:                                               ; preds = %dec_label_pc_9598
  %v2_95eb = call i32 @function_960b(i32 %tmp101)
  store i32 %v2_95eb, i32* @eax, align 4
  br label %dec_label_pc_95ed

dec_label_pc_95ed:                                ; preds = %bb, %dec_label_pc_9598
  %v0_95ed = call i32 @function_9606()
  ret i32 %v0_95ed

; uselistorder directives
  uselistorder i32 %tmp101, { 0, 1, 3, 2 }
}

define i32 @function_95f0() local_unnamed_addr {
dec_label_pc_95f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_95f0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_95f0
}

declare i32 @_Unwind_Resume.853(i32) local_unnamed_addr

define i32 @function_9606() local_unnamed_addr {
dec_label_pc_9606:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_960b(i32 %arg1) local_unnamed_addr {
dec_label_pc_960b:
  %v0_9610 = load i32, i32* @eax, align 4
  ret i32 %v0_9610
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderiEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9611:
  %v2_9644 = load i32, i32* %arg2, align 4
  %v3_9657 = call i32 @function_d97c(i32 %v2_9644, i32 %arg3, i32 %arg4)
  ret i32 %v3_9657
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9670:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_9687 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9687, i32* @eax, align 4
  %v2_9694 = call i32 @function_17f0c(i32 %v2_9687, i32 %arg1)
  %v2_969c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_969c, i32* @eax, align 4
  %v2_96a9 = call i32 @function_17f5c(i32 %v2_969c, i32 %arg1)
  %v2_96be = call i32 @function_17fab(i32 %v2_969c, i32 %v2_9687)
  store i32 %v2_96be, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_96cf

bb:                                               ; preds = %dec_label_pc_9670
  %v1_96cd = call i32 @function_96d4()
  br label %dec_label_pc_96cf

dec_label_pc_96cf:                                ; preds = %bb, %dec_label_pc_9670
  %v2_96cd = phi i32 [ %v1_96cd, %bb ], [ %v2_96be, %dec_label_pc_9670 ]
  ret i32 %v2_96cd

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_96d4() local_unnamed_addr {
dec_label_pc_96d4:
  %v0_96d5 = load i32, i32* @eax, align 4
  ret i32 %v0_96d5
}

define i32 @_Z3REFIyERT_RKS0_() local_unnamed_addr {
dec_label_pc_96d6:
  %eax.global-to-local = alloca i32, align 4
  %v17_96d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_96d9
}

define i32 @function_96dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_96dc:
  %v0_96dc = load i32, i32* @ebp, align 4
  %v1_96dc = add i32 %v0_96dc, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_96dc = inttoptr i32 %v1_96dc to i32*
  %v3_96dc = load i32, i32* %v2_96dc, align 4
  %v2_96df = add i32 %v0_96dc, -28
  %v3_96df = inttoptr i32 %v2_96df to i32*
  store i32 %v3_96dc, i32* %v3_96df, align 4
  %v0_96e2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_96e8 = load i32, i32* @ebp, align 4
  %v2_96e8 = add i32 %v1_96e8, -12
  %v3_96e8 = inttoptr i32 %v2_96e8 to i32*
  store i32 %v0_96e2, i32* %v3_96e8, align 4
  %v0_96ed = load i32, i32* @ebp, align 4
  %v1_96ed = add i32 %v0_96ed, -28
  %v2_96ed = inttoptr i32 %v1_96ed to i32*
  %v3_96ed = load i32, i32* %v2_96ed, align 4
  store i32 %v3_96ed, i32* @eax, align 4
  %v1_96f0 = add i32 %v0_96ed, -12
  %v2_96f0 = inttoptr i32 %v1_96f0 to i32*
  %v3_96f0 = load i32, i32* %v2_96f0, align 4
  %v1_96f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_96f3 = icmp eq i32 %v1_96f3, %v3_96f0
  br i1 %v3_96f3, label %bb, label %dec_label_pc_96fc

bb:                                               ; preds = %dec_label_pc_96dc
  %v1_96fa = call i32 @function_9701()
  br label %dec_label_pc_96fc

dec_label_pc_96fc:                                ; preds = %bb, %dec_label_pc_96dc
  %v2_96fa = phi i32 [ %v1_96fa, %bb ], [ %v3_96ed, %dec_label_pc_96dc ]
  ret i32 %v2_96fa
}

define i32 @function_9701() local_unnamed_addr {
dec_label_pc_9701:
  %v0_9702 = load i32, i32* @eax, align 4
  ret i32 %v0_9702
}

define i32 @_Z10WrapVarIntIyE7CVarIntIT_ERS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9703:
  store i32 %arg1, i32* @eax, align 4
  %v2_972d = call i32 @function_18093(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9741

bb:                                               ; preds = %dec_label_pc_9703
  %v1_973f = call i32 @function_9746()
  br label %dec_label_pc_9741

dec_label_pc_9741:                                ; preds = %bb, %dec_label_pc_9703
  %v2_973f = phi i32 [ %v1_973f, %bb ], [ %arg1, %dec_label_pc_9703 ]
  ret i32 %v2_973f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_9746() local_unnamed_addr {
dec_label_pc_9746:
  %v0_9747 = load i32, i32* @eax, align 4
  ret i32 %v0_9747
}

define i32 @_Z3REFI7CVarIntIyEERT_RKS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_974a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9770

bb:                                               ; preds = %dec_label_pc_974a
  %v2_976e = call i32 @function_9775(i32 %arg1)
  br label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %bb, %dec_label_pc_974a
  %v3_976e = phi i32 [ %v2_976e, %bb ], [ %arg1, %dec_label_pc_974a ]
  ret i32 %v3_976e
}

define i32 @function_9775(i32 %arg1) local_unnamed_addr {
dec_label_pc_9775:
  %v0_9776 = load i32, i32* @eax, align 4
  ret i32 %v0_9776
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder7CVarIntIyEEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_9777:
  store i32 %arg2, i32* @eax, align 4
  %v3_97bb = call i32 @function_1813f(i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v3_97bb, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_97cc

bb:                                               ; preds = %dec_label_pc_9777
  %v1_97ca = call i32 @function_97d1()
  br label %dec_label_pc_97cc

dec_label_pc_97cc:                                ; preds = %bb, %dec_label_pc_9777
  %v2_97ca = phi i32 [ %v1_97ca, %bb ], [ %v3_97bb, %dec_label_pc_9777 ]
  ret i32 %v2_97ca

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_97d1() local_unnamed_addr {
dec_label_pc_97d1:
  %v0_97d2 = load i32, i32* @eax, align 4
  ret i32 %v0_97d2
}

define i32 @_Z3REFI7CScriptERT_RKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_97d3:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_97f9

bb:                                               ; preds = %dec_label_pc_97d3
  %v2_97f7 = call i32 @function_97fe(i32 %arg1)
  br label %dec_label_pc_97f9

dec_label_pc_97f9:                                ; preds = %bb, %dec_label_pc_97d3
  %v3_97f7 = phi i32 [ %v2_97f7, %bb ], [ %arg1, %dec_label_pc_97d3 ]
  ret i32 %v3_97f7
}

define i32 @function_97fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_97fe:
  %v0_97ff = load i32, i32* @eax, align 4
  ret i32 %v0_97ff
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder17CScriptCompressorEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_9800:
  store i32 %arg2, i32* @eax, align 4
  %v3_9844 = call i32 @function_18217(i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v3_9844, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9855

bb:                                               ; preds = %dec_label_pc_9800
  %v1_9853 = call i32 @function_985a()
  br label %dec_label_pc_9855

dec_label_pc_9855:                                ; preds = %bb, %dec_label_pc_9800
  %v2_9853 = phi i32 [ %v1_9853, %bb ], [ %v3_9844, %dec_label_pc_9800 ]
  ret i32 %v2_9853

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_985a() local_unnamed_addr {
dec_label_pc_985a:
  %v0_985b = load i32, i32* @eax, align 4
  ret i32 %v0_985b
}

define i32 @_Z16GetSerializeSizeI7CVarIntIjEEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_985c:
  store i32 %arg1, i32* @eax, align 4
  %v3_9893 = call i32 @function_12d78(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_9893, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_98a4

bb:                                               ; preds = %dec_label_pc_985c
  %v1_98a2 = call i32 @function_98a9()
  br label %dec_label_pc_98a4

dec_label_pc_98a4:                                ; preds = %bb, %dec_label_pc_985c
  %v2_98a2 = phi i32 [ %v1_98a2, %bb ], [ %v3_9893, %dec_label_pc_985c ]
  ret i32 %v2_98a2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_98a9() local_unnamed_addr {
dec_label_pc_98a9:
  %v0_98aa = load i32, i32* @eax, align 4
  ret i32 %v0_98aa
}

define i32 @_Z3REFIiERT_RKS0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_98ab:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_98d1

bb:                                               ; preds = %dec_label_pc_98ab
  %v2_98cf = call i32 @function_98d6(i32 %arg1)
  br label %dec_label_pc_98d1

dec_label_pc_98d1:                                ; preds = %bb, %dec_label_pc_98ab
  %v3_98cf = phi i32 [ %v2_98cf, %bb ], [ %arg1, %dec_label_pc_98ab ]
  ret i32 %v3_98cf
}

define i32 @function_98d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_98d6:
  %v0_98d7 = load i32, i32* @eax, align 4
  ret i32 %v0_98d7
}

define i32 @_Z10WrapVarIntIiE7CVarIntIT_ERS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_98d8:
  store i32 %arg1, i32* @eax, align 4
  %v2_9902 = call i32 @function_1833e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9916

bb:                                               ; preds = %dec_label_pc_98d8
  %v1_9914 = call i32 @function_991b()
  br label %dec_label_pc_9916

dec_label_pc_9916:                                ; preds = %bb, %dec_label_pc_98d8
  %v2_9914 = phi i32 [ %v1_9914, %bb ], [ %arg1, %dec_label_pc_98d8 ]
  ret i32 %v2_9914

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_991b() local_unnamed_addr {
dec_label_pc_991b:
  %v4_991b = load i32, i32* @eax, align 4
  ret i32 %v4_991b
}

define i32 @function_991e(i32 %arg1) local_unnamed_addr {
dec_label_pc_991e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_Z3REFI7CVarIntIiEERT_RKS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_991f:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9945

bb:                                               ; preds = %dec_label_pc_991f
  %v2_9943 = call i32 @function_994a(i32 %arg1)
  br label %dec_label_pc_9945

dec_label_pc_9945:                                ; preds = %bb, %dec_label_pc_991f
  %v3_9943 = phi i32 [ %v2_9943, %bb ], [ %arg1, %dec_label_pc_991f ]
  ret i32 %v3_9943
}

define i32 @function_994a(i32 %arg1) local_unnamed_addr {
dec_label_pc_994a:
  %v0_994b = load i32, i32* @eax, align 4
  ret i32 %v0_994b
}

define i32 @_Z16GetSerializeSizeI7CVarIntIiEEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_994c:
  store i32 %arg1, i32* @eax, align 4
  %v3_9983 = call i32 @function_183ea(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_9983, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9994

bb:                                               ; preds = %dec_label_pc_994c
  %v1_9992 = call i32 @function_9999()
  br label %dec_label_pc_9994

dec_label_pc_9994:                                ; preds = %bb, %dec_label_pc_994c
  %v2_9992 = phi i32 [ %v1_9992, %bb ], [ %v3_9983, %dec_label_pc_994c ]
  ret i32 %v2_9992

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9999() local_unnamed_addr {
dec_label_pc_9999:
  %v0_999a = load i32, i32* @eax, align 4
  ret i32 %v0_999a
}

define i32 @_Z3REFI6CTxOutERT_RKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_999b:
  ret i32 %arg1
}

define i32 @_Z16GetSerializeSizeI16CTxOutCompressorEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_99c8:
  store i1 true, i1* @zf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v3_99ff = call i32 @function_f7b2(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_99ff, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9a10

bb:                                               ; preds = %dec_label_pc_99c8
  %v1_9a0e = call i32 @function_9a15()
  br label %dec_label_pc_9a10

dec_label_pc_9a10:                                ; preds = %bb, %dec_label_pc_99c8
  %v2_9a0e = phi i32 [ %v1_9a0e, %bb ], [ %v3_99ff, %dec_label_pc_99c8 ]
  ret i32 %v2_9a0e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9a15() local_unnamed_addr {
dec_label_pc_9a15:
  %v0_9a16 = load i32, i32* @eax, align 4
  ret i32 %v0_9a16
}

define i32 @_ZNSaI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9a18:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9a46

bb:                                               ; preds = %dec_label_pc_9a18
  %v2_9a44 = call i32 @function_9a4b(i32 %arg1)
  br label %dec_label_pc_9a46

dec_label_pc_9a46:                                ; preds = %bb, %dec_label_pc_9a18
  %v3_9a44 = phi i32 [ %v2_9a44, %bb ], [ 0, %dec_label_pc_9a18 ]
  ret i32 %v3_9a44
}

define i32 @function_9a4b(i32 %arg1) local_unnamed_addr {
dec_label_pc_9a4b:
  %v0_9a4c = load i32, i32* @eax, align 4
  ret i32 %v0_9a4c
}

define i32 @_ZNSaI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9a4e:
  store i32 %arg1, i32* @eax, align 4
  %v1_9a6b = call i32 @function_18602(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9a7c

bb:                                               ; preds = %dec_label_pc_9a4e
  %v1_9a7a = call i32 @function_9a81()
  br label %dec_label_pc_9a7c

dec_label_pc_9a7c:                                ; preds = %bb, %dec_label_pc_9a4e
  %v2_9a7a = phi i32 [ %v1_9a7a, %bb ], [ 0, %dec_label_pc_9a4e ]
  ret i32 %v2_9a7a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9a81() local_unnamed_addr {
dec_label_pc_9a81:
  %v0_9a82 = load i32, i32* @eax, align 4
  ret i32 %v0_9a82
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1EjRKS0_RKS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a84:
  %v7_9ac2 = call i32 @function_18568(i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v3_9adb = call i32 @function_18662(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_9ae0 = call i32 @function_9af9()
  ret i32 %v0_9ae0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_9ae3() local_unnamed_addr {
dec_label_pc_9ae3:
  %eax.global-to-local = alloca i32, align 4
  %v0_9ae3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9ae3
}

define i32 @function_9af9() local_unnamed_addr {
dec_label_pc_9af9:
  %v0_9af9 = load i32, i32* @ebp, align 4
  %v1_9af9 = add i32 %v0_9af9, -12
  %v2_9af9 = inttoptr i32 %v1_9af9 to i32*
  %v3_9af9 = load i32, i32* %v2_9af9, align 4
  %v1_9afc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9afc = xor i32 %v1_9afc, %v3_9af9
  %v3_9afc = icmp eq i32 %v2_9afc, 0
  store i32 %v2_9afc, i32* @eax, align 4
  br i1 %v3_9afc, label %bb, label %dec_label_pc_9b05

bb:                                               ; preds = %dec_label_pc_9af9
  %v1_9b03 = call i32 @function_9b0a()
  br label %dec_label_pc_9b05

dec_label_pc_9b05:                                ; preds = %bb, %dec_label_pc_9af9
  %v2_9b03 = phi i32 [ %v1_9b03, %bb ], [ %v2_9afc, %dec_label_pc_9af9 ]
  ret i32 %v2_9b03
}

define i32 @function_9b0a() local_unnamed_addr {
dec_label_pc_9b0a:
  %v0_9b0f = load i32, i32* @eax, align 4
  ret i32 %v0_9b0f
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv() local_unnamed_addr {
dec_label_pc_9b10:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_9b2a = add i32 %tmp3, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_9b2a = inttoptr i32 %v1_9b2a to i32*
  %v3_9b2a = load i32, i32* %v2_9b2a, align 4
  %v1_9b32 = inttoptr i32 %tmp3 to i32*
  %v2_9b32 = load i32, i32* %v1_9b32, align 4
  %v2_9b36 = sub i32 %v3_9b2a, %v2_9b32
  %v2_9b3a = sdiv i32 %v2_9b36, 4
  %v3_9b3d = mul i32 %v2_9b3a, -858993459
  store i32 %v3_9b3d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9b4f

bb:                                               ; preds = %dec_label_pc_9b10
  %v2_9b4d = call i32 @function_9b54(i32 %tmp3)
  br label %dec_label_pc_9b4f

dec_label_pc_9b4f:                                ; preds = %bb, %dec_label_pc_9b10
  %v3_9b4d = phi i32 [ %v2_9b4d, %bb ], [ %v3_9b3d, %dec_label_pc_9b10 ]
  ret i32 %v3_9b4d
}

define i32 @function_9b54(i32 %arg1) local_unnamed_addr {
dec_label_pc_9b54:
  %v0_9b55 = load i32, i32* @eax, align 4
  ret i32 %v0_9b55
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE4backEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9b56:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i8*, align 4
  store i8* bitcast (i8** @global_var_1.1176 to i8*), i8** %stack_var_-24, align 4
  %v2_9b74 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_9b74, i32* @eax, align 4
  %v2_9b81 = call i32 @function_187a0(i32 %v2_9b74, i32 %arg1)
  %v2_9b89 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_9b89, i32* @eax, align 4
  %v2_9b8c = ptrtoint i8** %stack_var_-24 to i32
  %v3_9b9d = call i32 @function_187ea(i32 %v2_9b89, i32 %v2_9b74, i32 %v2_9b8c)
  store i32 %v2_9b89, i32* @eax, align 4
  %v1_9bab = call i32 @function_18854(i32 %v2_9b89)
  store i32 %v1_9bab, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9bbc

bb:                                               ; preds = %dec_label_pc_9b56
  %v1_9bba = call i32 @function_9bc1()
  br label %dec_label_pc_9bbc

dec_label_pc_9bbc:                                ; preds = %bb, %dec_label_pc_9b56
  %v2_9bba = phi i32 [ %v1_9bba, %bb ], [ %v1_9bab, %dec_label_pc_9b56 ]
  ret i32 %v2_9bba

; uselistorder directives
  uselistorder i8** %stack_var_-24, { 1, 0 }
}

define i32 @function_9bc1() local_unnamed_addr {
dec_label_pc_9bc1:
  %v0_9bc2 = load i32, i32* @eax, align 4
  ret i32 %v0_9bc2
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE8pop_backEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9bc4:
  %v1_9bde = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_9bde = inttoptr i32 %v1_9bde to i32*
  %v3_9bde = load i32, i32* %v2_9bde, align 4
  %v1_9be1 = add i32 %v3_9bde, -20
  store i32 %v1_9be1, i32* %v2_9bde, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_9bfa = call i32 @function_188f2(i32 %arg1, i32 %v1_9be1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9c0b

bb:                                               ; preds = %dec_label_pc_9bc4
  %v1_9c09 = call i32 @function_9c10()
  br label %dec_label_pc_9c0b

dec_label_pc_9c0b:                                ; preds = %bb, %dec_label_pc_9bc4
  %v2_9c09 = phi i32 [ %v1_9c09, %bb ], [ 0, %dec_label_pc_9bc4 ]
  ret i32 %v2_9c09

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_9c10() local_unnamed_addr {
dec_label_pc_9c10:
  %v0_9c11 = load i32, i32* @eax, align 4
  ret i32 %v0_9c11
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE4swapERS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9c12:
  store i32 %arg1, i32* @eax, align 4
  %v4_9c3d = call i32 @function_1897b(i32 %arg1, i32 %arg2)
  %v1_9c45 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v1_9c4b = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_9c4b, i32* @eax, align 4
  %v4_9c55 = call i32 @function_1897b(i32 %v1_9c4b, i32 %v1_9c45)
  %v1_9c5d = add i32 %arg2, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_9c5d, i32* @edx, align 4
  %v1_9c63 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_9c63, i32* @eax, align 4
  %v4_9c6d = call i32 @function_1897b(i32 %v1_9c63, i32 %v1_9c5d)
  store i32 %arg2, i32* @eax, align 4
  %v2_9c78 = call i32 @function_183da(i32 %arg2)
  store i32 %v2_9c78, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_9c85 = call i32 @function_183da(i32 %arg1)
  store i32 %v2_9c85, i32* @eax, align 4
  %v0_9c8a = load i32, i32* @ebx, align 4
  %v4_9c91 = call i32 @function_189c5(i32 %v2_9c85, i32 %v0_9c8a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9ca2

bb:                                               ; preds = %dec_label_pc_9c12
  %v1_9ca0 = call i32 @function_9ca7()
  br label %dec_label_pc_9ca2

dec_label_pc_9ca2:                                ; preds = %bb, %dec_label_pc_9c12
  %v2_9ca0 = phi i32 [ %v1_9ca0, %bb ], [ 0, %dec_label_pc_9c12 ]
  ret i32 %v2_9ca0

; uselistorder directives
  uselistorder i32 (i32)* @function_183da, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1897b, { 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_9ca7() local_unnamed_addr {
dec_label_pc_9ca7:
  %v0_9cac = load i32, i32* @eax, align 4
  ret i32 %v0_9cac
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9cae:
  %ebp.global-to-local = alloca i32, align 4
  %v0_9cae = load i32, i32* %ebp.global-to-local, align 4
  %v2_9cce = load i32, i32* %arg1, align 4
  %v2_9cda = mul i32 %arg2, 20
  %v2_9cdd = add i32 %v2_9cce, %v2_9cda
  store i32 %v0_9cae, i32* %ebp.global-to-local, align 4
  ret i32 %v2_9cdd
}

define i32 @_ZN5boost15foreach_detail_7containIKSt6vectorI6CTxOutSaIS3_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9cf2:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_9d1b = call i32 @function_18ad5(i32 %arg2)
  store i32 %v1_9d1b, i32* %stack_var_-20, align 4
  %v2_9d23 = ptrtoint i32* %stack_var_-20 to i32
  %v2_9d30 = call i32 @function_18b2c(i32 %arg1, i32 %v2_9d23)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9d44

bb:                                               ; preds = %dec_label_pc_9cf2
  %v1_9d42 = call i32 @function_9d49()
  br label %dec_label_pc_9d44

dec_label_pc_9d44:                                ; preds = %bb, %dec_label_pc_9cf2
  %v2_9d42 = phi i32 [ %v1_9d42, %bb ], [ %arg1, %dec_label_pc_9cf2 ]
  ret i32 %v2_9d42

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_9d49() local_unnamed_addr {
dec_label_pc_9d49:
  %v0_9d4a = load i32, i32* @eax, align 4
  ret i32 %v0_9d4a
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9d4d:
  %stack_var_-20 = alloca i32, align 4
  %v2_9d81 = load i32, i32* %arg2, align 4
  store i32 %v2_9d81, i32* @eax, align 4
  %v1_9d86 = call i32 @function_18bf9(i32 %v2_9d81)
  store i32 %v1_9d86, i32* @eax, align 4
  %v2_9d8b = ptrtoint i32* %stack_var_-20 to i32
  %v2_9d95 = call i32 @function_18c26(i32 %v2_9d8b, i32 %v1_9d86)
  store i32 %arg1, i32* @eax, align 4
  %v2_9daa = call i32 @function_18c71(i32 %arg1, i32 %v2_9d8b)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9dbe

bb:                                               ; preds = %dec_label_pc_9d4d
  %v1_9dbc = call i32 @function_9dc3()
  br label %dec_label_pc_9dbe

dec_label_pc_9dbe:                                ; preds = %bb, %dec_label_pc_9d4d
  %v2_9dbc = phi i32 [ %v1_9dbc, %bb ], [ %arg1, %dec_label_pc_9d4d ]
  ret i32 %v2_9dbc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_9dc3() local_unnamed_addr {
dec_label_pc_9dc3:
  %v0_9dc4 = load i32, i32* @eax, align 4
  ret i32 %v0_9dc4
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9dc7:
  ret i32 %arg4
}

define i32 @function_9de6(i32 %arg1) local_unnamed_addr {
dec_label_pc_9de6:
  %v0_9de6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_9deb = load i32, i32* @ebp, align 4
  %v2_9deb = add i32 %v1_9deb, -12
  %v3_9deb = inttoptr i32 %v2_9deb to i32*
  store i32 %v0_9de6, i32* %v3_9deb, align 4
  %v0_9df0 = load i32, i32* @ebp, align 4
  %v1_9df0 = add i32 %v0_9df0, -32
  %v2_9df0 = inttoptr i32 %v1_9df0 to i32*
  %v3_9df0 = load i32, i32* %v2_9df0, align 4
  store i32 %v3_9df0, i32* @eax, align 4
  %v1_9df6 = call i32 @function_18c46(i32 %v3_9df0)
  %v1_9dfb = inttoptr i32 %v1_9df6 to i32*
  %v2_9dfb = load i32, i32* %v1_9dfb, align 4
  %v1_9e00 = call i32 @__cxa_rethrow.1125(i32 %v2_9dfb)
  store i32 %v1_9e00, i32* @eax, align 4
  %v0_9e05 = load i32, i32* @ebp, align 4
  %v1_9e05 = add i32 %v0_9e05, -16
  %v2_9e0f = call i32 @function_18d30(i32 %v1_9e05, i32 %v1_9e00)
  %v0_9e14 = load i32, i32* @esp, align 4
  %v10_9e14 = icmp eq i32 %v0_9e14, 4
  store i1 %v10_9e14, i1* @zf, align 1
  %v0_9e17 = load i32, i32* @ebp, align 4
  %v1_9e17 = add i32 %v0_9e17, -16
  %v1_9e1e = add i32 %v0_9e17, -28
  %v2_9e1e = inttoptr i32 %v1_9e1e to i32*
  %v3_9e1e = load i32, i32* %v2_9e1e, align 4
  store i32 %v3_9e1e, i32* @eax, align 4
  %v2_9e24 = call i32 @function_18ceb(i32 %v3_9e1e, i32 %v1_9e17)
  %v0_9e29 = load i32, i32* @ebp, align 4
  %v1_9e29 = add i32 %v0_9e29, -28
  %v2_9e29 = inttoptr i32 %v1_9e29 to i32*
  %v3_9e29 = load i32, i32* %v2_9e29, align 4
  store i32 %v3_9e29, i32* @eax, align 4
  %v1_9e2c = add i32 %v0_9e29, -12
  %v2_9e2c = inttoptr i32 %v1_9e2c to i32*
  %v3_9e2c = load i32, i32* %v2_9e2c, align 4
  %v1_9e2f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_9e2f = icmp eq i32 %v1_9e2f, %v3_9e2c
  br i1 %v3_9e2f, label %bb, label %dec_label_pc_9e38

bb:                                               ; preds = %dec_label_pc_9de6
  %v1_9e36 = call i32 @function_9e3d()
  br label %dec_label_pc_9e38

dec_label_pc_9e38:                                ; preds = %bb, %dec_label_pc_9de6
  %v2_9e36 = phi i32 [ %v1_9e36, %bb ], [ %v3_9e29, %dec_label_pc_9de6 ]
  ret i32 %v2_9e36
}

define i32 @function_9e3d() local_unnamed_addr {
dec_label_pc_9e3d:
  %v0_9e3e = load i32, i32* @eax, align 4
  ret i32 %v0_9e3e
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9e41:
  %ebx.global-to-local = alloca i32, align 4
  %v0_9e44 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_9e6b = call i32 @function_18df4(i32 %arg2)
  store i32 %v1_9e6b, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_9e78 = call i32 @function_18df4(i32 %arg1)
  store i32 %v1_9e78, i32* @eax, align 4
  %v2_9e84 = call i32 @function_1877c(i32 %v1_9e78, i32 %v1_9e6b)
  store i32 %v0_9e44, i32* %ebx.global-to-local, align 4
  ret i32 %v2_9e84

; uselistorder directives
  uselistorder i32 (i32)* @function_18df4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9ea0:
  store i32 %arg1, i32* @eax, align 4
  %v1_9ec3 = call i32 @function_18e53(i32 %arg1)
  store i32 %v1_9ec3, i32* @eax, align 4
  %v1_9ecb = call i32 @function_18e80(i32 %v1_9ec3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9edc

bb:                                               ; preds = %dec_label_pc_9ea0
  %v1_9eda = call i32 @function_9ee1()
  br label %dec_label_pc_9edc

dec_label_pc_9edc:                                ; preds = %bb, %dec_label_pc_9ea0
  %v2_9eda = phi i32 [ %v1_9eda, %bb ], [ 0, %dec_label_pc_9ea0 ]
  ret i32 %v2_9eda

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9ee1() local_unnamed_addr {
dec_label_pc_9ee1:
  %v0_9ee2 = load i32, i32* @eax, align 4
  ret i32 %v0_9ee2
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9ee3:
  store i32 %arg1, i32* @eax, align 4
  %v1_9f06 = call i32 @function_18e96(i32 %arg1)
  store i32 %v1_9f06, i32* @eax, align 4
  %v1_9f0e = call i32 @function_18efd(i32 %v1_9f06)
  store i32 %v1_9f0e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9f1f

bb:                                               ; preds = %dec_label_pc_9ee3
  %v1_9f1d = call i32 @function_9f24()
  br label %dec_label_pc_9f1f

dec_label_pc_9f1f:                                ; preds = %bb, %dec_label_pc_9ee3
  %v2_9f1d = phi i32 [ %v1_9f1d, %bb ], [ %v1_9f0e, %dec_label_pc_9ee3 ]
  ret i32 %v2_9f1d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9f24() local_unnamed_addr {
dec_label_pc_9f24:
  %v0_9f25 = load i32, i32* @eax, align 4
  ret i32 %v0_9f25
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder7uint256EjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_9f26:
  store i32 %arg2, i32* @eax, align 4
  %v3_9f6a = call i32 @function_18f6f(i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v3_9f6a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9f7b

bb:                                               ; preds = %dec_label_pc_9f26
  %v1_9f79 = call i32 @function_9f80()
  br label %dec_label_pc_9f7b

dec_label_pc_9f7b:                                ; preds = %bb, %dec_label_pc_9f26
  %v2_9f79 = phi i32 [ %v1_9f79, %bb ], [ %v3_9f6a, %dec_label_pc_9f26 ]
  ret i32 %v2_9f79

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_9f80() local_unnamed_addr {
dec_label_pc_9f80:
  %v0_9f81 = load i32, i32* @eax, align 4
  ret i32 %v0_9f81
}

define i32 @_ZNSt6vectorIhSaIhEE6resizeEjh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9f82:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i8, align 1
  %tmp109 = ptrtoint i32* %arg1 to i32
  %sext = mul i32 %arg3, 16777216
  %v4_9f89 = sdiv i32 %sext, 16777216
  %v1_9f98 = trunc i32 %v4_9f89 to i8
  store i8 %v1_9f98, i8* %stack_var_-40, align 1
  store i32 %tmp109, i32* @eax, align 4
  %v1_9fac = call i32 @function_1182c(i32 %tmp109)
  %v10_9fb1 = icmp ult i32 %v1_9fac, %arg2
  %v5_9fb7 = icmp eq i1 %v10_9fb1, false
  store i32 %tmp109, i32* @eax, align 4
  %v1_a007 = call i32 @function_1182c(i32 %tmp109)
  br i1 %v5_9fb7, label %dec_label_pc_a001, label %dec_label_pc_9fbb

dec_label_pc_9fbb:                                ; preds = %dec_label_pc_9f82
  %v2_9fcd = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_9fcd, i32* @eax, align 4
  %v2_9fda = call i32 @function_130f2(i32 %v2_9fcd, i32 %tmp109)
  %v2_9fe2 = ptrtoint i8* %stack_var_-40 to i32
  %v0_9fe9 = load i32, i32* @ebx, align 4
  %v3_9fed = load i32, i32* %stack_var_-20, align 4
  %v4_9ffa = call i32 @function_1901a(i32 %tmp109, i32 %v3_9fed, i32 %v0_9fe9, i32 %v2_9fe2)
  br label %dec_label_pc_a02d

dec_label_pc_a001:                                ; preds = %dec_label_pc_9f82
  %tmp116 = icmp ule i32 %v1_a007, %arg2
  %v3_a00f = icmp ne i1 %tmp116, ptrtoint (i8** @global_var_1.1176 to i1)
  %v5_a012 = icmp eq i1 %v3_a00f, false
  br i1 %v5_a012, label %dec_label_pc_a02d, label %dec_label_pc_a016

dec_label_pc_a016:                                ; preds = %dec_label_pc_a001
  %v2_a019 = load i32, i32* %arg1, align 4
  %v5_a01b = add i32 %v2_a019, %arg2
  %v2_a028 = call i32 @function_1832a(i32 %tmp109, i32 %v5_a01b)
  br label %dec_label_pc_a02d

dec_label_pc_a02d:                                ; preds = %dec_label_pc_a016, %dec_label_pc_a001, %dec_label_pc_9fbb
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a039

bb:                                               ; preds = %dec_label_pc_a02d
  %v1_a037 = call i32 @function_a03e()
  br label %dec_label_pc_a039

dec_label_pc_a039:                                ; preds = %bb, %dec_label_pc_a02d
  %v2_a037 = phi i32 [ %v1_a037, %bb ], [ 0, %dec_label_pc_a02d ]
  ret i32 %v2_a037

; uselistorder directives
  uselistorder i32 %tmp109, { 2, 0, 1, 4, 3, 6, 5 }
  uselistorder i32 (i32)* @function_1182c, { 1, 0 }
}

define i32 @function_a03e() local_unnamed_addr {
dec_label_pc_a03e:
  %v0_a042 = load i32, i32* @eax, align 4
  ret i32 %v0_a042
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder7CVarIntIiEEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_a043:
  ret i32 %arg2
}

define i32 @function_a09c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a09c:
  %v0_a09e = load i32, i32* @eax, align 4
  ret i32 %v0_a09e
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder7CVarIntIjEEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_a09f:
  ret i32 %arg4
}

define i32 @function_a0d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_a0d4:
  %v0_a0d6 = load i32, i32* @ebp, align 4
  %v1_a0d6 = add i32 %v0_a0d6, -36
  %v2_a0d6 = inttoptr i32 %v1_a0d6 to i32*
  %v3_a0d6 = load i32, i32* %v2_a0d6, align 4
  %v1_a0dd = add i32 %v0_a0d6, -32
  %v2_a0dd = inttoptr i32 %v1_a0dd to i32*
  %v3_a0dd = load i32, i32* %v2_a0dd, align 4
  store i32 %v3_a0dd, i32* @eax, align 4
  %v1_a0e8 = add i32 %v0_a0d6, -12
  %v2_a0e8 = inttoptr i32 %v1_a0e8 to i32*
  %v3_a0e8 = load i32, i32* %v2_a0e8, align 4
  %v1_a0eb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a0eb = icmp eq i32 %v1_a0eb, %v3_a0e8
  br i1 %v3_a0eb, label %bb, label %dec_label_pc_a0f4

bb:                                               ; preds = %dec_label_pc_a0d4
  %v3_a0f2 = call i32 @function_a0f9(i32 %v3_a0dd, i32 %v3_a0d6)
  br label %dec_label_pc_a0f4

dec_label_pc_a0f4:                                ; preds = %bb, %dec_label_pc_a0d4
  %v4_a0f2 = phi i32 [ %v3_a0f2, %bb ], [ %v3_a0dd, %dec_label_pc_a0d4 ]
  ret i32 %v4_a0f2
}

define i32 @function_a0f9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a0f9:
  %v0_a0fa = load i32, i32* @eax, align 4
  ret i32 %v0_a0fa
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder13CDiskBlockPosEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_a0fb:
  %v4_a119 = zext i8 %arg5 to i32
  ret i32 %v4_a119
}

define i32 @function_a122(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a122:
  %eax.global-to-local = alloca i32, align 4
  %v0_a122 = load i32, i32* @eax, align 4
  %v1_a122 = trunc i32 %v0_a122 to i8
  %v2_a122 = load i1, i1* @cf, align 1
  %v3_a122 = zext i1 %v2_a122 to i8
  %v4_a122 = add i8 %v3_a122, %v1_a122
  %v22_a122 = zext i8 %v4_a122 to i32
  %v24_a122 = and i32 %v0_a122, -256
  %v25_a122 = or i32 %v22_a122, %v24_a122
  store i32 %v25_a122, i32* %eax.global-to-local, align 4
  %v1_a124 = inttoptr i32 %v25_a122 to i8*
  %v2_a124 = load i8, i8* %v1_a124, align 1
  %v5_a124 = add i8 %v2_a124, %v4_a122
  store i8 %v5_a124, i8* %v1_a124, align 1
  %v0_a126 = load i32, i32* %eax.global-to-local, align 4
  %v1_a126 = load i32, i32* @ebp, align 4
  %v2_a126 = add i32 %v1_a126, -12
  %v3_a126 = inttoptr i32 %v2_a126 to i32*
  store i32 %v0_a126, i32* %v3_a126, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_a12b = load i32, i32* @ebp, align 4
  %v1_a12b = add i32 %v0_a12b, -40
  %v2_a12b = inttoptr i32 %v1_a12b to i32*
  %v3_a12b = load i32, i32* %v2_a12b, align 4
  store i32 %v3_a12b, i32* %eax.global-to-local, align 4
  %v1_a132 = add i32 %v0_a12b, -36
  %v2_a132 = inttoptr i32 %v1_a132 to i32*
  %v3_a132 = load i32, i32* %v2_a132, align 4
  store i32 %v3_a132, i32* %eax.global-to-local, align 4
  ret i32 %v3_a132
}

define i32 @function_a137(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a137:
  %v0_a139 = load i32, i32* @ebp, align 4
  %v1_a139 = add i32 %v0_a139, -32
  %v2_a139 = inttoptr i32 %v1_a139 to i32*
  %v3_a139 = load i32, i32* %v2_a139, align 4
  store i32 %v3_a139, i32* @eax, align 4
  %v1_a13f = call i32 @function_191ef(i32 %v3_a139)
  store i32 %v1_a13f, i32* @eax, align 4
  %v0_a144 = load i32, i32* @ebp, align 4
  %v1_a144 = add i32 %v0_a144, -12
  %v2_a144 = inttoptr i32 %v1_a144 to i32*
  %v3_a144 = load i32, i32* %v2_a144, align 4
  %v1_a147 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a147 = icmp eq i32 %v1_a147, %v3_a144
  br i1 %v3_a147, label %bb, label %dec_label_pc_a150

bb:                                               ; preds = %dec_label_pc_a137
  %v1_a14e = call i32 @function_a155()
  br label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %bb, %dec_label_pc_a137
  %v2_a14e = phi i32 [ %v1_a14e, %bb ], [ %v1_a13f, %dec_label_pc_a137 ]
  ret i32 %v2_a14e
}

define i32 @function_a152(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a152:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a155() local_unnamed_addr {
dec_label_pc_a155:
  %v0_a156 = load i32, i32* @eax, align 4
  ret i32 %v0_a156
}

define i32 @_ZN11CHashWriterlsI7uint256EERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a158:
  %v1_a178 = add i32 %arg1, 116
  %v2_a178 = inttoptr i32 %v1_a178 to i32*
  %v3_a178 = load i32, i32* %v2_a178, align 4
  %v1_a17e = add i32 %arg1, 112
  %v2_a17e = inttoptr i32 %v1_a17e to i32*
  %v3_a17e = load i32, i32* %v2_a17e, align 4
  %v4_a196 = call i32 @function_1929b(i32 %arg1, i32 %arg2, i32 %v3_a17e, i32 %v3_a178)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a1aa

bb:                                               ; preds = %dec_label_pc_a158
  %v1_a1a8 = call i32 @function_a1af()
  br label %dec_label_pc_a1aa

dec_label_pc_a1aa:                                ; preds = %bb, %dec_label_pc_a158
  %v2_a1a8 = phi i32 [ %v1_a1a8, %bb ], [ %arg1, %dec_label_pc_a158 ]
  ret i32 %v2_a1a8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_a1af() local_unnamed_addr {
dec_label_pc_a1af:
  %v0_a1b0 = load i32, i32* @eax, align 4
  ret i32 %v0_a1b0
}

define i32 @_ZNKSt6vectorIbSaIbEE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_a1b2:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_a1c9 = ptrtoint i32* %stack_var_-32 to i32
  %v2_a1d6 = call i32 @function_193de(i32 %v2_a1c9, i32 %arg1)
  %v0_a1db = load i32, i32* @esp, align 4
  %v5_a1db = icmp ult i32 %v0_a1db, 4
  store i1 %v5_a1db, i1* @cf, align 1
  %v2_a1de = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_a1de, i32* @eax, align 4
  %v2_a1eb = call i32 @function_19426(i32 %v2_a1de, i32 %arg1)
  ret i32 %v2_a1de
}

define i32 @function_a1fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_a1fe:
  %v0_a1fe = load i32, i32* @eax, align 4
  %v2_a1fe = add i32 %v0_a1fe, 36
  %v16_a1fe = urem i32 %v2_a1fe, 256
  %v18_a1fe = and i32 %v0_a1fe, -256
  %v19_a1fe = or i32 %v16_a1fe, %v18_a1fe
  store i32 %v19_a1fe, i32* @eax, align 4
  %v0_a205 = load i32, i32* @ebp, align 4
  %v1_a205 = add i32 %v0_a205, -12
  %v2_a205 = inttoptr i32 %v1_a205 to i32*
  %v3_a205 = load i32, i32* %v2_a205, align 4
  %v1_a208 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a208 = icmp eq i32 %v1_a208, %v3_a205
  br i1 %v3_a208, label %bb, label %dec_label_pc_a211

bb:                                               ; preds = %dec_label_pc_a1fe
  %v1_a20f = call i32 @function_a216()
  br label %dec_label_pc_a211

dec_label_pc_a211:                                ; preds = %bb, %dec_label_pc_a1fe
  %v2_a20f = phi i32 [ %v1_a20f, %bb ], [ %v19_a1fe, %dec_label_pc_a1fe ]
  ret i32 %v2_a20f

; uselistorder directives
  uselistorder i32 %v0_a1fe, { 1, 0 }
}

define i32 @function_a216() local_unnamed_addr {
dec_label_pc_a216:
  %v0_a217 = load i32, i32* @eax, align 4
  ret i32 %v0_a217
}

define i32 @_ZNSt6vectorIbSaIbEEixEj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a218:
  ret i32 %arg3
}

define i32 @function_a22e(i32 %arg1) local_unnamed_addr {
dec_label_pc_a22e:
  %eax.global-to-local = alloca i32, align 4
  %v0_a22e = load i32, i32* @ebp, align 4
  %v1_a22e = add i32 %v0_a22e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_a22e, i32* @ebp, align 4
  %v0_a232 = load i32, i32* @eax, align 4
  %v1_a232 = trunc i32 %v0_a232 to i8
  %v2_a232 = load i1, i1* @cf, align 1
  %v3_a232 = zext i1 %v2_a232 to i8
  %v4_a232 = add i8 %v3_a232, %v1_a232
  %v22_a232 = zext i8 %v4_a232 to i32
  %v24_a232 = and i32 %v0_a232, -256
  %v25_a232 = or i32 %v22_a232, %v24_a232
  store i32 %v25_a232, i32* %eax.global-to-local, align 4
  %v1_a234 = inttoptr i32 %v25_a232 to i8*
  %v2_a234 = load i8, i8* %v1_a234, align 1
  %v5_a234 = add i8 %v2_a234, %v4_a232
  store i8 %v5_a234, i8* %v1_a234, align 1
  %v0_a236 = load i32, i32* %eax.global-to-local, align 4
  %v1_a236 = load i32, i32* @ebp, align 4
  %v2_a236 = add i32 %v1_a236, -12
  %v3_a236 = inttoptr i32 %v2_a236 to i32*
  store i32 %v0_a236, i32* %v3_a236, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_a23b = load i32, i32* @ebp, align 4
  %v1_a23b = add i32 %v0_a23b, -36
  %v2_a23b = inttoptr i32 %v1_a23b to i32*
  %v3_a23b = load i32, i32* %v2_a23b, align 4
  store i32 %v3_a23b, i32* %eax.global-to-local, align 4
  %v1_a240 = urem i32 %v3_a23b, 32
  store i32 %v1_a240, i32* @edx, align 4
  %v1_a243 = add i32 %v0_a23b, -32
  %v2_a243 = inttoptr i32 %v1_a243 to i32*
  %v3_a243 = load i32, i32* %v2_a243, align 4
  store i32 %v3_a243, i32* %eax.global-to-local, align 4
  %v1_a246 = inttoptr i32 %v3_a243 to i32*
  %v2_a246 = load i32, i32* %v1_a246, align 4
  store i32 %v2_a246, i32* %eax.global-to-local, align 4
  %v3_a248 = load i32, i32* %v2_a23b, align 4
  %v2_a24b = lshr i32 %v3_a248, ptrtoint (i8* @global_var_5.1189 to i32)
  %v2_a24e = mul i32 %v2_a24b, 4
  %v2_a251 = add i32 %v2_a24e, %v2_a246
  %v1_a25b = add i32 %v0_a23b, -20
  store i32 %v1_a25b, i32* %eax.global-to-local, align 4
  %v3_a261 = call i32 @function_c57c(i32 %v1_a25b, i32 %v2_a251, i32 %v1_a240)
  store i32 %v3_a261, i32* %eax.global-to-local, align 4
  %v0_a266 = load i32, i32* @ebp, align 4
  %v1_a266 = add i32 %v0_a266, -28
  %v2_a266 = inttoptr i32 %v1_a266 to i32*
  %v3_a266 = load i32, i32* %v2_a266, align 4
  store i32 %v3_a266, i32* %eax.global-to-local, align 4
  %v0_a278 = load i32, i32* @esp, align 4
  %v5_a278 = icmp ult i32 %v0_a278, 4
  store i1 %v5_a278, i1* @cf, align 1
  %v3_a27b = load i32, i32* %v2_a266, align 4
  store i32 %v3_a27b, i32* %eax.global-to-local, align 4
  ret i32 %v3_a27b

; uselistorder directives
  uselistorder i32 %v1_a240, { 1, 0 }
}

define i32 @function_a280(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a280:
  %v0_a281 = load i32, i32* @edx, align 4
  %v1_a281 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a281 = icmp eq i32 %v1_a281, %v0_a281
  br i1 %v3_a281, label %bb, label %dec_label_pc_a280.dec_label_pc_a28a_crit_edge

dec_label_pc_a280.dec_label_pc_a28a_crit_edge:    ; preds = %dec_label_pc_a280
  %v2_a288.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_a28a

bb:                                               ; preds = %dec_label_pc_a280
  %v1_a288 = call i32 @function_a28f()
  br label %dec_label_pc_a28a

dec_label_pc_a28a:                                ; preds = %dec_label_pc_a280.dec_label_pc_a28a_crit_edge, %bb
  %v2_a288 = phi i32 [ %v2_a288.pre, %dec_label_pc_a280.dec_label_pc_a28a_crit_edge ], [ %v1_a288, %bb ]
  ret i32 %v2_a288

; uselistorder directives
  uselistorder label %dec_label_pc_a28a, { 1, 0 }
}

define i32 @function_a28f() local_unnamed_addr {
dec_label_pc_a28f:
  %v0_a290 = load i32, i32* @eax, align 4
  ret i32 %v0_a290
}

define i32 @_ZNKSt6vectorIP11CBlockIndexSaIS1_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_a294:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_a2ae = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_a2ae = inttoptr i32 %v1_a2ae to i32*
  %v3_a2ae = load i32, i32* %v2_a2ae, align 4
  %v2_a2b6 = load i32, i32* %arg1, align 4
  %v2_a2ba = sub i32 %v3_a2ae, %v2_a2b6
  %v2_a2be = sdiv i32 %v2_a2ba, 4
  store i32 %v2_a2be, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a2cd

bb:                                               ; preds = %dec_label_pc_a294
  %v2_a2cb = call i32 @function_a2d2(i32 %tmp100)
  br label %dec_label_pc_a2cd

dec_label_pc_a2cd:                                ; preds = %bb, %dec_label_pc_a294
  %v3_a2cb = phi i32 [ %v2_a2cb, %bb ], [ %v2_a2be, %dec_label_pc_a294 ]
  ret i32 %v3_a2cb

; uselistorder directives
  uselistorder i32 %v2_a2be, { 1, 0 }
}

define i32 @function_a2d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_a2d2:
  %v0_a2d3 = load i32, i32* @eax, align 4
  ret i32 %v0_a2d3
}

define i32 @_ZNSt6vectorIP11CBlockIndexSaIS1_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a2d4:
  %v2_a2f4 = load i32, i32* %arg1, align 4
  %v2_a2f9 = mul i32 %arg2, 4
  %v2_a2fc = add i32 %v2_a2f4, %v2_a2f9
  store i32 %v2_a2fc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a30a

bb:                                               ; preds = %dec_label_pc_a2d4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_a308 = call i32 @function_a30f(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_a30a

dec_label_pc_a30a:                                ; preds = %bb, %dec_label_pc_a2d4
  %v4_a308 = phi i32 [ %v3_a308, %bb ], [ %v2_a2fc, %dec_label_pc_a2d4 ]
  ret i32 %v4_a308

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_a30f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a30f:
  %v0_a310 = load i32, i32* @eax, align 4
  ret i32 %v0_a310
}

define i32 @_ZNK9base_uintILj256EE8ToStringEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a312:
  %v2_a33c = call i32 @function_195d0(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a353

bb:                                               ; preds = %dec_label_pc_a312
  %v1_a351 = call i32 @function_a358()
  br label %dec_label_pc_a353

dec_label_pc_a353:                                ; preds = %bb, %dec_label_pc_a312
  %v2_a351 = phi i32 [ %v1_a351, %bb ], [ %arg1, %dec_label_pc_a312 ]
  ret i32 %v2_a351

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_a358() local_unnamed_addr {
dec_label_pc_a358:
  %v0_a359 = load i32, i32* @eax, align 4
  ret i32 %v0_a359
}

define i32 @_ZSt9make_pairIc7uint256ESt4pairIT_T0_ES2_S3_(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_a35c:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i8, align 1
  store i8 %arg2, i8* %stack_var_-36, align 1
  store i32 %arg3, i32* %stack_var_-68, align 4
  %v2_a3a9 = ptrtoint i32* %stack_var_-68 to i32
  %v2_a3b0 = ptrtoint i8* %stack_var_-36 to i32
  store i32 %arg1, i32* @eax, align 4
  %v3_a3bd = call i32 @function_19738(i32 %arg1, i32 %v2_a3b0, i32 %v2_a3a9)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_a3d1

bb:                                               ; preds = %dec_label_pc_a35c
  %v1_a3cf = call i32 @function_a3d6()
  br label %dec_label_pc_a3d1

dec_label_pc_a3d1:                                ; preds = %bb, %dec_label_pc_a35c
  %v2_a3cf = phi i32 [ %v1_a3cf, %bb ], [ %arg1, %dec_label_pc_a35c ]
  ret i32 %v2_a3cf

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_a3d6() local_unnamed_addr {
dec_label_pc_a3d6:
  %v0_a3d7 = load i32, i32* @eax, align 4
  ret i32 %v0_a3d7
}

define i32 @_ZN13CLevelDBBatch5EraseISt4pairIc7uint256EEEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a3da:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_a408 = ptrtoint i32* %stack_var_-52 to i32
  %v3_a40e = call i32 @function_e8b6(i32 %v2_a408, i32 2, i32 1020000)
  store i32 %v2_a408, i32* @eax, align 4
  %v2_a420 = call i32 @function_1982c(i32 %v2_a408, i32 %arg2)
  store i32 %v2_a408, i32* @eax, align 4
  %v2_a42f = call i32 @function_ec18(i32 %v2_a408, i32 %v2_a420)
  store i32 %v2_a408, i32* @eax, align 4
  %v2_a44c = call i32 @function_ebda(i32 %v2_a408, i32 %arg2)
  store i32 %v2_a408, i32* @eax, align 4
  %v2_a461 = call i32 @function_ec62(i32 %v2_a408, i32 0)
  %v2_a46e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_a46e, i32* @eax, align 4
  %v3_a474 = call i32 @function_118cc(i32 %v2_a46e, i32 %v2_a461, i32 %v2_a44c)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_a48a() local_unnamed_addr {
dec_label_pc_a48a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_a48a = add i32 %tmp91, 76140613
  %v2_a48a = inttoptr i32 %v1_a48a to i32*
  %v3_a48a = load i32, i32* %v2_a48a, align 4
  %v4_a48a = add i32 %v3_a48a, -1
  store i32 %v4_a48a, i32* %v2_a48a, align 4
  %v0_a490 = load i32, i32* %eax.global-to-local, align 4
  %v1_a490 = trunc i32 %v0_a490 to i8
  %v2_a490 = and i8 %v1_a490, -24
  %v8_a490 = zext i8 %v2_a490 to i32
  %v10_a490 = and i32 %v0_a490, -256
  %v11_a490 = or i32 %v8_a490, %v10_a490
  store i32 %v11_a490, i32* %eax.global-to-local, align 4
  store i8 %v2_a490, i8* inttoptr (i32 -1962934203 to i8*), align 1
  %v0_a497 = load i32, i32* %ebp.global-to-local, align 4
  %v1_a497 = add i32 %v0_a497, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_a497, i32* %ebp.global-to-local, align 4
  %v1_a499 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a499 = xor i32 %v1_a499, %v11_a490
  %v3_a499 = icmp eq i32 %v2_a499, 0
  store i32 %v2_a499, i32* @eax, align 4
  br i1 %v3_a499, label %bb, label %dec_label_pc_a4a2

bb:                                               ; preds = %dec_label_pc_a48a
  %v1_a4a0 = call i32 @function_a4c0()
  store i32 %v1_a4a0, i32* @eax, align 4
  br label %dec_label_pc_a4a2

dec_label_pc_a4a2:                                ; preds = %bb, %dec_label_pc_a48a
  %v0_a4a2 = call i32 @function_a4bb()
  store i32 %v0_a4a2, i32* %eax.global-to-local, align 4
  ret i32 %v0_a4a2
}

define i32 @function_a4a5() local_unnamed_addr {
dec_label_pc_a4a5:
  %eax.global-to-local = alloca i32, align 4
  %v0_a4a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a4a5
}

define i32 @function_a4bb() local_unnamed_addr {
dec_label_pc_a4bb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a4c0() local_unnamed_addr {
dec_label_pc_a4c0:
  %v0_a4c5 = load i32, i32* @eax, align 4
  ret i32 %v0_a4c5
}

define i32 @_ZN13CLevelDBBatch5WriteISt4pairIc7uint256E6CCoinsEEvRKT_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a4c6:
  ret i32 0
}

define i32 @function_a4ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_a4ec:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_a4ec = load i32, i32* @eax, align 4
  %v11_a4ec = and i32 %v0_a4ec, or (i32 zext (i8 ptrtoint (i32* @global_var_8.1178 to i8) to i32), i32 -256)
  store i32 %v11_a4ec, i32* %eax.global-to-local, align 4
  %v0_a4ee = load i32, i32* @esp, align 4
  %v8_a4ee = add i32 %v0_a4ee, add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)))))))))
  %v12_a4ee = load i32, i32* @ecx, align 4
  %v14_a4ee = load i32, i32* @edx, align 4
  %v16_a4ee = load i32, i32* @ebx, align 4
  %v18_a4ee = ptrtoint i32* %stack_var_0 to i32
  %v22_a4ee = load i32, i32* @esi, align 4
  %v23_a4ee = inttoptr i32 %v8_a4ee to i32*
  %v24_a4ee = load i32, i32* @edi, align 4
  store i32 %v24_a4ee, i32* %v23_a4ee, align 4
  %v0_a4f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_a4f4 = trunc i32 %v0_a4f4 to i8
  %v2_a4f4 = and i8 %v1_a4f4, ptrtoint (i8** @global_var_4.1177 to i8)
  %v8_a4f4 = zext i8 %v2_a4f4 to i32
  %v10_a4f4 = and i32 %v0_a4f4, -256
  %v11_a4f4 = or i32 %v8_a4f4, %v10_a4f4
  store i32 %v11_a4f4, i32* %eax.global-to-local, align 4
  %v3_a4f6 = inttoptr i32 %v11_a4f4 to i8*
  %v4_a4f6 = load i8, i8* %v3_a4f6, align 4
  %v5_a4f6 = add i8 %v4_a4f6, %v2_a4f4
  %v20_a4f6 = zext i8 %v5_a4f6 to i32
  %v23_a4f6 = or i32 %v20_a4f6, %v10_a4f4
  store i32 %v23_a4f6, i32* %eax.global-to-local, align 4
  %v1_a4f8 = inttoptr i32 %v23_a4f6 to i8*
  %v2_a4f8 = load i8, i8* %v1_a4f8, align 1
  %v5_a4f8 = add i8 %v2_a4f8, %v5_a4f6
  store i8 %v5_a4f8, i8* %v1_a4f8, align 1
  %v0_a4fa = load i32, i32* @ebp, align 4
  %v1_a4fa = add i32 %v0_a4fa, -84
  store i32 %v1_a4fa, i32* %eax.global-to-local, align 4
  %v1_a4fd = load i32, i32* @esp, align 4
  %v2_a4fd = inttoptr i32 %v1_a4fd to i32*
  store i32 %v1_a4fa, i32* %v2_a4fd, align 4
  %v6_a500 = call i32 @function_e9a2(i32 %v22_a4ee, i32 %v18_a4ee, i32 %v16_a4ee, i32 %v14_a4ee, i32 %v12_a4ee, i32 %v11_a4ec)
  store i32 %v6_a500, i32* %eax.global-to-local, align 4
  %v0_a505 = load i32, i32* @ebp, align 4
  %v1_a505 = add i32 %v0_a505, -96
  %v2_a505 = inttoptr i32 %v1_a505 to i32*
  %v3_a505 = load i32, i32* %v2_a505, align 4
  %v1_a508 = load i32, i32* @esp, align 4
  %v2_a508 = add i32 %v1_a508, 4
  %v3_a508 = inttoptr i32 %v2_a508 to i32*
  store i32 %v3_a505, i32* %v3_a508, align 4
  %v0_a50c = load i32, i32* @ebp, align 4
  %v1_a50c = add i32 %v0_a50c, -84
  store i32 %v1_a50c, i32* %eax.global-to-local, align 4
  %v1_a50f = load i32, i32* @esp, align 4
  %v2_a50f = inttoptr i32 %v1_a50f to i32*
  store i32 %v1_a50c, i32* %v2_a50f, align 4
  %v0_a517 = load i32, i32* %eax.global-to-local, align 4
  %v1_a517 = load i32, i32* @esp, align 4
  %v2_a517 = add i32 %v1_a517, 4
  %v3_a517 = inttoptr i32 %v2_a517 to i32*
  store i32 %v0_a517, i32* %v3_a517, align 4
  %v0_a51b = load i32, i32* @ebp, align 4
  %v1_a51b = add i32 %v0_a51b, -84
  store i32 %v1_a51b, i32* %eax.global-to-local, align 4
  %v1_a51e = load i32, i32* @esp, align 4
  %v2_a51e = inttoptr i32 %v1_a51e to i32*
  store i32 %v1_a51b, i32* %v2_a51e, align 4
  %v1_a521 = call i32 @function_ed04(i32 %v11_a4ec)
  store i32 %v1_a521, i32* %eax.global-to-local, align 4
  %v0_a526 = load i32, i32* @ebp, align 4
  %v1_a526 = add i32 %v0_a526, -96
  %v2_a526 = inttoptr i32 %v1_a526 to i32*
  %v3_a526 = load i32, i32* %v2_a526, align 4
  %v1_a529 = load i32, i32* @esp, align 4
  %v2_a529 = add i32 %v1_a529, 4
  %v3_a529 = inttoptr i32 %v2_a529 to i32*
  store i32 %v3_a526, i32* %v3_a529, align 4
  %v0_a52d = load i32, i32* @ebp, align 4
  %v1_a52d = add i32 %v0_a52d, -84
  store i32 %v1_a52d, i32* @eax, align 4
  %v1_a530 = load i32, i32* @esp, align 4
  %v2_a530 = inttoptr i32 %v1_a530 to i32*
  store i32 %v1_a52d, i32* %v2_a530, align 4
  %v0_a533 = call i32 @function_173f2()
  %v0_a538 = load i32, i32* @ebp, align 4
  %v1_a538 = add i32 %v0_a538, -84
  store i32 %v1_a538, i32* @eax, align 4
  %v1_a53b = load i32, i32* @esp, align 4
  %v2_a53b = inttoptr i32 %v1_a53b to i32*
  store i32 %v1_a538, i32* %v2_a53b, align 4
  %v0_a53e = call i32 @function_ecc6()
  store i32 %v0_a53e, i32* %ebx.global-to-local, align 4
  %v0_a545 = load i32, i32* @esp, align 4
  %v1_a545 = add i32 %v0_a545, 4
  %v2_a545 = inttoptr i32 %v1_a545 to i32*
  store i32 0, i32* %v2_a545, align 4
  %v0_a54d = load i32, i32* @ebp, align 4
  %v1_a54d = add i32 %v0_a54d, -84
  store i32 %v1_a54d, i32* @eax, align 4
  %v1_a550 = load i32, i32* @esp, align 4
  %v2_a550 = inttoptr i32 %v1_a550 to i32*
  store i32 %v1_a54d, i32* %v2_a550, align 4
  %v0_a553 = call i32 @function_ed4e()
  store i32 %v0_a553, i32* %eax.global-to-local, align 4
  %v0_a558 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a558 = load i32, i32* @esp, align 4
  %v2_a558 = add i32 %v1_a558, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_a558 = inttoptr i32 %v2_a558 to i32*
  store i32 %v0_a558, i32* %v3_a558, align 4
  %v0_a55c = load i32, i32* %eax.global-to-local, align 4
  %v1_a55c = load i32, i32* @esp, align 4
  %v2_a55c = add i32 %v1_a55c, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_a55c = inttoptr i32 %v2_a55c to i32*
  store i32 %v0_a55c, i32* %v3_a55c, align 4
  %v0_a560 = load i32, i32* @ebp, align 4
  %v1_a560 = add i32 %v0_a560, -28
  store i32 %v1_a560, i32* @eax, align 4
  %v1_a563 = load i32, i32* @esp, align 4
  %v2_a563 = inttoptr i32 %v1_a563 to i32*
  store i32 %v1_a560, i32* %v2_a563, align 4
  %v0_a566 = call i32 @function_119b8()
  %v0_a56b = load i32, i32* @esp, align 4
  %v1_a56b = add i32 %v0_a56b, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_a56b = inttoptr i32 %v1_a56b to i32*
  store i32 1020000, i32* %v2_a56b, align 4
  %v0_a573 = load i32, i32* @esp, align 4
  %v1_a573 = add i32 %v0_a573, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_a573 = inttoptr i32 %v1_a573 to i32*
  store i32 2, i32* %v2_a573, align 4
  %v0_a57b = load i32, i32* @ebp, align 4
  %v1_a57b = add i32 %v0_a57b, -56
  store i32 %v1_a57b, i32* %eax.global-to-local, align 4
  %v1_a57e = load i32, i32* @esp, align 4
  %v2_a57e = inttoptr i32 %v1_a57e to i32*
  store i32 %v1_a57b, i32* %v2_a57e, align 4
  %v1_a581 = load i32, i32* %stack_var_0, align 4
  %v6_a581 = call i32 @function_e9a2(i32 %v11_a4ec, i32 %v1_a581, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_a581, i32* %eax.global-to-local, align 4
  %v0_a586 = load i32, i32* @ebp, align 4
  %v1_a586 = add i32 %v0_a586, -100
  %v2_a586 = inttoptr i32 %v1_a586 to i32*
  %v3_a586 = load i32, i32* %v2_a586, align 4
  %v1_a589 = load i32, i32* @esp, align 4
  %v2_a589 = add i32 %v1_a589, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_a589 = inttoptr i32 %v2_a589 to i32*
  store i32 %v3_a586, i32* %v3_a589, align 4
  %v0_a58d = load i32, i32* @ebp, align 4
  %v1_a58d = add i32 %v0_a58d, -56
  store i32 %v1_a58d, i32* @eax, align 4
  %v1_a590 = load i32, i32* @esp, align 4
  %v2_a590 = inttoptr i32 %v1_a590 to i32*
  store i32 %v1_a58d, i32* %v2_a590, align 4
  %v0_a593 = call i32 @function_19968()
  %v1_a598 = load i32, i32* @esp, align 4
  %v2_a598 = add i32 %v1_a598, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_a598 = inttoptr i32 %v2_a598 to i32*
  store i32 %v0_a593, i32* %v3_a598, align 4
  %v0_a59c = load i32, i32* @ebp, align 4
  %v1_a59c = add i32 %v0_a59c, -56
  store i32 %v1_a59c, i32* %eax.global-to-local, align 4
  %v1_a59f = load i32, i32* @esp, align 4
  %v2_a59f = inttoptr i32 %v1_a59f to i32*
  store i32 %v1_a59c, i32* %v2_a59f, align 4
  %v1_a5a2 = call i32 @function_ed04(i32 %v11_a4ec)
  store i32 %v1_a5a2, i32* %eax.global-to-local, align 4
  %v0_a5a7 = load i32, i32* @ebp, align 4
  %v1_a5a7 = add i32 %v0_a5a7, -100
  %v2_a5a7 = inttoptr i32 %v1_a5a7 to i32*
  %v3_a5a7 = load i32, i32* %v2_a5a7, align 4
  %v1_a5aa = load i32, i32* @esp, align 4
  %v2_a5aa = add i32 %v1_a5aa, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_a5aa = inttoptr i32 %v2_a5aa to i32*
  store i32 %v3_a5a7, i32* %v3_a5aa, align 4
  %v0_a5ae = load i32, i32* @ebp, align 4
  %v1_a5ae = add i32 %v0_a5ae, -56
  store i32 %v1_a5ae, i32* @eax, align 4
  %v1_a5b1 = load i32, i32* @esp, align 4
  %v2_a5b1 = inttoptr i32 %v1_a5b1 to i32*
  store i32 %v1_a5ae, i32* %v2_a5b1, align 4
  %v0_a5b4 = call i32 @function_199b8()
  %v0_a5b9 = load i32, i32* @ebp, align 4
  %v1_a5b9 = add i32 %v0_a5b9, -56
  store i32 %v1_a5b9, i32* @eax, align 4
  %v1_a5bc = load i32, i32* @esp, align 4
  %v2_a5bc = inttoptr i32 %v1_a5bc to i32*
  store i32 %v1_a5b9, i32* %v2_a5bc, align 4
  %v0_a5bf = call i32 @function_ecc6()
  store i32 %v0_a5bf, i32* %ebx.global-to-local, align 4
  %v0_a5c6 = load i32, i32* @esp, align 4
  %v1_a5c6 = add i32 %v0_a5c6, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_a5c6 = inttoptr i32 %v1_a5c6 to i32*
  store i32 0, i32* %v2_a5c6, align 4
  %v0_a5ce = load i32, i32* @ebp, align 4
  %v1_a5ce = add i32 %v0_a5ce, -56
  store i32 %v1_a5ce, i32* @eax, align 4
  %v1_a5d1 = load i32, i32* @esp, align 4
  %v2_a5d1 = inttoptr i32 %v1_a5d1 to i32*
  store i32 %v1_a5ce, i32* %v2_a5d1, align 4
  %v0_a5d4 = call i32 @function_ed4e()
  store i32 %v0_a5d4, i32* %eax.global-to-local, align 4
  %v0_a5d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a5d9 = load i32, i32* @esp, align 4
  %v2_a5d9 = add i32 %v1_a5d9, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_a5d9 = inttoptr i32 %v2_a5d9 to i32*
  store i32 %v0_a5d9, i32* %v3_a5d9, align 4
  %v0_a5dd = load i32, i32* %eax.global-to-local, align 4
  %v1_a5dd = load i32, i32* @esp, align 4
  %v2_a5dd = add i32 %v1_a5dd, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_a5dd = inttoptr i32 %v2_a5dd to i32*
  store i32 %v0_a5dd, i32* %v3_a5dd, align 4
  %v0_a5e1 = load i32, i32* @ebp, align 4
  %v1_a5e1 = add i32 %v0_a5e1, -20
  store i32 %v1_a5e1, i32* @eax, align 4
  %v1_a5e4 = load i32, i32* @esp, align 4
  %v2_a5e4 = inttoptr i32 %v1_a5e4 to i32*
  store i32 %v1_a5e1, i32* %v2_a5e4, align 4
  %v0_a5e7 = call i32 @function_119b8()
  store i32 %v0_a5e7, i32* %eax.global-to-local, align 4
  %v0_a5ec = load i32, i32* @ebp, align 4
  %v1_a5ec = add i32 %v0_a5ec, -92
  %v2_a5ec = inttoptr i32 %v1_a5ec to i32*
  %v3_a5ec = load i32, i32* %v2_a5ec, align 4
  store i32 %v3_a5ec, i32* %eax.global-to-local, align 4
  %v1_a5ef = add i32 %v0_a5ec, -20
  %v1_a5f2 = load i32, i32* @esp, align 4
  %v2_a5f2 = add i32 %v1_a5f2, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_a5f2 = inttoptr i32 %v2_a5f2 to i32*
  store i32 %v1_a5ef, i32* %v3_a5f2, align 4
  %v0_a5f6 = load i32, i32* @ebp, align 4
  %v1_a5f6 = add i32 %v0_a5f6, -28
  %v1_a5f9 = load i32, i32* @esp, align 4
  %v2_a5f9 = add i32 %v1_a5f9, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_a5f9 = inttoptr i32 %v2_a5f9 to i32*
  store i32 %v1_a5f6, i32* %v3_a5f9, align 4
  %v0_a5fd = load i32, i32* %eax.global-to-local, align 4
  %v1_a5fd = load i32, i32* @esp, align 4
  %v2_a5fd = inttoptr i32 %v1_a5fd to i32*
  store i32 %v0_a5fd, i32* %v2_a5fd, align 4
  %v3_a5fd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_a5fd

; uselistorder directives
  uselistorder i32 %v11_a4ec, { 1, 3, 2, 4, 0 }
  uselistorder i32 ()* @function_119b8, { 1, 0 }
  uselistorder i32 ()* @function_ed4e, { 1, 0 }
  uselistorder i32 ()* @function_ecc6, { 1, 0 }
  uselistorder i32 (i32)* @function_ed04, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_e9a2, { 1, 0 }
}

define i32 @function_a580(i32 %arg1) local_unnamed_addr {
dec_label_pc_a580:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a604() local_unnamed_addr {
dec_label_pc_a604:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_a604 = add i32 %tmp92, 76138565
  %v2_a604 = inttoptr i32 %v1_a604 to i32*
  %v3_a604 = load i32, i32* %v2_a604, align 4
  %v4_a604 = add i32 %v3_a604, -1
  store i32 %v4_a604, i32* %v2_a604, align 4
  %v0_a60a = load i32, i32* %eax.global-to-local, align 4
  %v1_a60a = trunc i32 %v0_a60a to i8
  %v2_a60a = and i8 %v1_a60a, -24
  %v4_a60c = add i8 %v2_a60a, 69
  %v25_a60c = zext i8 %v4_a60c to i32
  %v27_a60c = and i32 %v0_a60a, -256
  %v28_a60c = or i32 %v25_a60c, %v27_a60c
  store i32 %v28_a60c, i32* %eax.global-to-local, align 4
  %v1_a60e = inttoptr i32 %v28_a60c to i8*
  %v2_a60e = load i8, i8* %v1_a60e, align 1
  %v5_a60e = add i8 %v2_a60e, %v4_a60c
  store i8 %v5_a60e, i8* %v1_a60e, align 1
  %v0_a610 = load i32, i32* %ebp.global-to-local, align 4
  %v1_a610 = add i32 %v0_a610, -84
  store i32 %v1_a610, i32* %eax.global-to-local, align 4
  %v1_a61b = add i32 %v0_a610, -12
  %v2_a61b = inttoptr i32 %v1_a61b to i32*
  %v3_a61b = load i32, i32* %v2_a61b, align 4
  store i32 %v3_a61b, i32* %eax.global-to-local, align 4
  %v1_a61e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a61e = xor i32 %v1_a61e, %v3_a61b
  %v3_a61e = icmp eq i32 %v2_a61e, 0
  store i32 %v2_a61e, i32* @eax, align 4
  br i1 %v3_a61e, label %bb, label %dec_label_pc_a64f

bb:                                               ; preds = %dec_label_pc_a604
  %v2_a625 = call i32 @function_a654(i32 %v1_a610)
  store i32 %v2_a625, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a64f

dec_label_pc_a64f:                                ; preds = %dec_label_pc_a604, %bb
  %v0_a627 = phi i32 [ %v2_a61e, %dec_label_pc_a604 ], [ %v2_a625, %bb ]
  ret i32 %v0_a627

; uselistorder directives
  uselistorder label %dec_label_pc_a64f, { 1, 0 }
}

define i32 @function_a629() local_unnamed_addr {
dec_label_pc_a629:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_a629 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_a629, i32* @ebx, align 4
  %v0_a62b = load i32, i32* %ebp.global-to-local, align 4
  %v1_a62b = add i32 %v0_a62b, -56
  store i32 %v1_a62b, i32* %eax.global-to-local, align 4
  %v1_a636 = call i32 @function_a63a(i32 %v1_a62b)
  store i32 %v1_a636, i32* %eax.global-to-local, align 4
  ret i32 %v1_a636
}

define i32 @function_a638() local_unnamed_addr {
dec_label_pc_a638:
  %eax.global-to-local = alloca i32, align 4
  %v0_a638 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a638
}

define i32 @function_a63a(i32 %arg1) local_unnamed_addr {
dec_label_pc_a63a:
  %v0_a645 = load i32, i32* @ebx, align 4
  ret i32 %v0_a645
}

declare i32 @__stack_chk_fail.252(i32) local_unnamed_addr

define i32 @function_a654(i32 %arg1) local_unnamed_addr {
dec_label_pc_a654:
  %v0_a659 = load i32, i32* @eax, align 4
  ret i32 %v0_a659
}

define i32 @_ZN13CLevelDBBatch5WriteIc7uint256EEvRKT_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a65a:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v2_a68e = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_a68e, i32* @eax, align 4
  %v3_a694 = call i32 @function_eb36(i32 %v2_a68e, i32 2, i32 1020000)
  %v2_a6a6 = call i32 @function_19ba6(i32 %v2_a68e, i32 %arg2)
  store i32 %v2_a68e, i32* @eax, align 4
  %v2_a6b5 = call i32 @function_ee98(i32 %v2_a68e, i32 %v2_a6a6)
  %v2_a6c7 = call i32 @function_19bfc(i32 %v2_a68e, i32 %arg2)
  store i32 %v2_a68e, i32* @eax, align 4
  %v1_a6d2 = call i32 @function_ee5a(i32 %v2_a68e)
  store i32 %v2_a68e, i32* @eax, align 4
  %v2_a6e7 = call i32 @function_eee2(i32 %v2_a68e, i32 0)
  %v2_a6f4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_a6f4, i32* @eax, align 4
  %v3_a6fa = call i32 @function_11b4c(i32 %v2_a6f4, i32 %v2_a6e7, i32 %v1_a6d2)
  %v2_a70f = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_a70f, i32* @eax, align 4
  %v3_a715 = call i32 @function_eb36(i32 %v2_a70f, i32 2, i32 1020000)
  %v2_a727 = call i32 @function_19c5c(i32 %v2_a70f, i32 %arg3)
  store i32 %v2_a70f, i32* @eax, align 4
  %v2_a736 = call i32 @function_ee98(i32 %v2_a70f, i32 %v2_a727)
  %v2_a748 = call i32 @function_19cac(i32 %v2_a70f, i32 %arg3)
  store i32 %v2_a70f, i32* @eax, align 4
  %v1_a753 = call i32 @function_ee5a(i32 %v2_a70f)
  store i32 %v2_a70f, i32* @eax, align 4
  %v2_a768 = call i32 @function_eee2(i32 %v2_a70f, i32 0)
  %v2_a775 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_a775, i32* @eax, align 4
  %v3_a77b = call i32 @function_11b4c(i32 %v2_a775, i32 %v2_a768, i32 %v1_a753)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_11b4c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_eee2, { 1, 0 }
  uselistorder i32 (i32)* @function_ee5a, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_ee98, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_eb36, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_a798() local_unnamed_addr {
dec_label_pc_a798:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_a798 = add i32 %tmp91, 76138565
  %v2_a798 = inttoptr i32 %v1_a798 to i32*
  %v3_a798 = load i32, i32* %v2_a798, align 4
  %v4_a798 = add i32 %v3_a798, -1
  store i32 %v4_a798, i32* %v2_a798, align 4
  %v0_a79e = load i32, i32* %eax.global-to-local, align 4
  %v1_a79e = trunc i32 %v0_a79e to i8
  %v2_a79e = and i8 %v1_a79e, -24
  %v4_a7a0 = add i8 %v2_a79e, 69
  %v25_a7a0 = zext i8 %v4_a7a0 to i32
  %v27_a7a0 = and i32 %v0_a79e, -256
  %v28_a7a0 = or i32 %v25_a7a0, %v27_a7a0
  store i32 %v28_a7a0, i32* %eax.global-to-local, align 4
  %v1_a7a2 = inttoptr i32 %v28_a7a0 to i8*
  %v2_a7a2 = load i8, i8* %v1_a7a2, align 1
  %v5_a7a2 = add i8 %v2_a7a2, %v4_a7a0
  store i8 %v5_a7a2, i8* %v1_a7a2, align 1
  %v0_a7a4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_a7a4 = add i32 %v0_a7a4, -84
  store i32 %v1_a7a4, i32* %eax.global-to-local, align 4
  %v1_a7af = add i32 %v0_a7a4, -12
  %v2_a7af = inttoptr i32 %v1_a7af to i32*
  %v3_a7af = load i32, i32* %v2_a7af, align 4
  store i32 %v3_a7af, i32* %eax.global-to-local, align 4
  %v1_a7b2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_a7b2 = xor i32 %v1_a7b2, %v3_a7af
  %v3_a7b2 = icmp eq i32 %v2_a7b2, 0
  store i32 %v2_a7b2, i32* @eax, align 4
  br i1 %v3_a7b2, label %bb, label %dec_label_pc_a7bb

bb:                                               ; preds = %dec_label_pc_a798
  %v2_a7b9 = call i32 @function_a7e8(i32 %v1_a7a4)
  store i32 %v2_a7b9, i32* @eax, align 4
  br label %dec_label_pc_a7bb

dec_label_pc_a7bb:                                ; preds = %bb, %dec_label_pc_a798
  %v0_a7bb = call i32 @function_a7e3()
  store i32 %v0_a7bb, i32* %eax.global-to-local, align 4
  ret i32 %v0_a7bb
}

define i32 @function_a7bd() local_unnamed_addr {
dec_label_pc_a7bd:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_a7bd = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_a7bd, i32* @ebx, align 4
  %v0_a7bf = load i32, i32* %ebp.global-to-local, align 4
  %v1_a7bf = add i32 %v0_a7bf, -56
  store i32 %v1_a7bf, i32* %eax.global-to-local, align 4
  %v1_a7ca = call i32 @function_a7ce(i32 %v1_a7bf)
  store i32 %v1_a7ca, i32* %eax.global-to-local, align 4
  ret i32 %v1_a7ca
}

define i32 @function_a7cc() local_unnamed_addr {
dec_label_pc_a7cc:
  %eax.global-to-local = alloca i32, align 4
  %v0_a7cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a7cc
}

define i32 @function_a7ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_a7ce:
  %v0_a7d9 = load i32, i32* @ebx, align 4
  ret i32 %v0_a7d9
}

define i32 @function_a7e3() local_unnamed_addr {
dec_label_pc_a7e3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a7e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_a7e8:
  %v0_a7ed = load i32, i32* @eax, align 4
  ret i32 %v0_a7ed
}

define i32 @_ZN5boost11filesystem34pathC1IA11_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a7ee:
  ret i32 %arg1
}

define i32 @function_a850(i32 %arg1) local_unnamed_addr {
dec_label_pc_a850:
  %v0_a850 = load i32, i32* @ebx, align 4
  %v0_a854 = load i32, i32* @ebp, align 4
  %v1_a854 = add i32 %v0_a854, -20
  %v2_a85a = call i32 @function_19e99(i32 %v1_a854, i32 %v0_a850)
  %v0_a85f = load i32, i32* @ebp, align 4
  %v1_a85f = add i32 %v0_a85f, -20
  ret i32 %v1_a85f
}

define i32 @function_a874() local_unnamed_addr {
dec_label_pc_a874:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_a874 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a874 = add i32 %v0_a874, 862319685
  %v2_a874 = inttoptr i32 %v1_a874 to i32*
  %v3_a874 = load i32, i32* %v2_a874, align 4
  %v4_a874 = add i32 %v3_a874, -1
  store i32 %v4_a874, i32* %v2_a874, align 4
  %v0_a87a = load i32, i32* %eax.global-to-local, align 4
  %v1_a87a = add i32 %v0_a87a, 20
  %v10_a87a = icmp eq i32 %v1_a87a, 0
  store i32 %v1_a87a, i32* @eax, align 4
  br i1 %v10_a87a, label %bb, label %dec_label_pc_a881

bb:                                               ; preds = %dec_label_pc_a874
  %v1_a87f = call i32 @function_a8bd()
  store i32 %v1_a87f, i32* @eax, align 4
  br label %dec_label_pc_a881

dec_label_pc_a881:                                ; preds = %bb, %dec_label_pc_a874
  %v0_a881 = call i32 @function_a8b8()
  store i32 %v0_a881, i32* %eax.global-to-local, align 4
  ret i32 %v0_a881
}

define i32 @function_a884() local_unnamed_addr {
dec_label_pc_a884:
  %eax.global-to-local = alloca i32, align 4
  %v0_a884 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a884
}

define i32 @function_a890() local_unnamed_addr {
dec_label_pc_a890:
  %v0_a890 = call i32 @function_a894()
  ret i32 %v0_a890
}

define i32 @function_a892() local_unnamed_addr {
dec_label_pc_a892:
  %eax.global-to-local = alloca i32, align 4
  %v0_a892 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a892
}

define i32 @function_a894() local_unnamed_addr {
dec_label_pc_a894:
  %v0_a894 = load i32, i32* @ebp, align 4
  %v1_a894 = add i32 %v0_a894, -13
  ret i32 %v1_a894
}

define i32 @function_a89f() local_unnamed_addr {
dec_label_pc_a89f:
  %v0_a89f = call i32 @function_a8a3()
  ret i32 %v0_a89f
}

define i32 @function_a8a1() local_unnamed_addr {
dec_label_pc_a8a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_a8a1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a8a1
}

define i32 @function_a8a3() local_unnamed_addr {
dec_label_pc_a8a3:
  %v0_a8ae = load i32, i32* @ebx, align 4
  ret i32 %v0_a8ae
}

define i32 @function_a8b8() local_unnamed_addr {
dec_label_pc_a8b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a8bd() local_unnamed_addr {
dec_label_pc_a8bd:
  %v0_a8c3 = load i32, i32* @eax, align 4
  ret i32 %v0_a8c3
}

define i32 @_ZN8CLevelDB4ReadISt4pairIc7uint256E6CCoinsEEbRKT_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a8c4:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v2_a8fc = ptrtoint i32* %stack_var_-96 to i32
  %v3_a902 = call i32 @function_eda0(i32 %v2_a8fc, i32 2, i32 1020000)
  store i32 %v2_a8fc, i32* @eax, align 4
  %v2_a914 = call i32 @function_19d16(i32 %v2_a8fc, i32 %arg2)
  store i32 %v2_a8fc, i32* @eax, align 4
  %v2_a923 = call i32 @function_f102(i32 %v2_a8fc, i32 %v2_a914)
  store i32 %v2_a8fc, i32* @eax, align 4
  %v2_a935 = call i32 @function_177f0(i32 %v2_a8fc, i32 %arg2)
  store i32 %v2_a8fc, i32* @eax, align 4
  %v1_a940 = call i32 @function_f0c4(i32 %v2_a8fc)
  store i32 %v1_a940, i32* @ebx, align 4
  store i32 %v2_a8fc, i32* @eax, align 4
  %v2_a955 = call i32 @function_f14c(i32 %v2_a8fc, i32 0)
  %v0_a95a = load i32, i32* @ebx, align 4
  %v2_a962 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_a962, i32* @eax, align 4
  %v3_a968 = call i32 @function_11db6(i32 %v2_a962, i32 %v2_a955, i32 %v0_a95a)
  %v2_a96d = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_a96d

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_a977() local_unnamed_addr {
dec_label_pc_a977:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_a977 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a977 = add i32 %v0_a977, 1082889285
  %v2_a977 = inttoptr i32 %v1_a977 to i32*
  %v3_a977 = load i32, i32* %v2_a977, align 4
  %v4_a977 = add i32 %v3_a977, -1
  store i32 %v4_a977, i32* %v2_a977, align 4
  %v0_a980 = load i32, i32* %eax.global-to-local, align 4
  %v1_a980 = add i32 %v0_a980, 20
  store i32 %v1_a980, i32* %eax.global-to-local, align 4
  %v1_a983 = inttoptr i32 %v1_a980 to i32*
  %v2_a983 = load i32, i32* %v1_a983, align 4
  store i32 %v2_a983, i32* %ebx.global-to-local, align 4
  %v0_a985 = load i32, i32* @ebp, align 4
  %v1_a985 = add i32 %v0_a985, -108
  %v2_a985 = inttoptr i32 %v1_a985 to i32*
  %v3_a985 = load i32, i32* %v2_a985, align 4
  store i32 %v3_a985, i32* %eax.global-to-local, align 4
  %v3_a98b = load i32, i32* %v2_a985, align 4
  store i32 %v3_a98b, i32* %eax.global-to-local, align 4
  %v1_a98e = add i32 %v3_a98b, 68
  %v2_a98e = inttoptr i32 %v1_a98e to i32*
  %v3_a98e = load i32, i32* %v2_a98e, align 4
  %v1_a991 = add i32 %v0_a985, -24
  %v1_a9bd = xor i32 %v1_a991, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_a9bd = trunc i32 %v1_a9bd to i8
  store i32 %v1_a9bd, i32* %eax.global-to-local, align 4
  %v5_a9c0 = icmp eq i8 %v4_a9bd, 0
  br i1 %v5_a9c0, label %bb, label %dec_label_pc_a9c4

bb:                                               ; preds = %dec_label_pc_a977
  %v1_a99b = add i32 %v0_a985, -36
  %v1_a988 = add i32 %v3_a985, 48
  %v1_a994 = add i32 %v0_a985, -28
  %v7_a9c2 = call i32 @function_aa23(i32 %v1_a991, i32 %v1_a991, i32 %v3_a98e, i32 %v1_a988, i32 %v1_a99b, i32 %v1_a994)
  store i32 %v7_a9c2, i32* %eax.global-to-local, align 4
  %v0_a9c4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_a9c4

dec_label_pc_a9c4:                                ; preds = %bb, %dec_label_pc_a977
  %v0_a9dd = phi i32 [ %v0_a9c4.pre, %bb ], [ %v0_a985, %dec_label_pc_a977 ]
  %v1_a9c4 = add i32 %v0_a9dd, -24
  store i32 %v1_a9c4, i32* %eax.global-to-local, align 4
  %v4_a9cf = trunc i32 %v1_a9c4 to i8
  %v5_a9cf = icmp eq i8 %v4_a9cf, 0
  br i1 %v5_a9cf, label %dec_label_pc_a9dd, label %dec_label_pc_a9d3

dec_label_pc_a9d3:                                ; preds = %dec_label_pc_a9c4
  store i32 0, i32* %ebx.global-to-local, align 4
  ret i32 %v1_a9c4

dec_label_pc_a9dd:                                ; preds = %dec_label_pc_a9c4
  %v1_a9dd = add i32 %v0_a9dd, -20
  store i32 %v1_a9dd, i32* %eax.global-to-local, align 4
  ret i32 %v1_a9dd

; uselistorder directives
  uselistorder i32 %v0_a985, { 0, 2, 3, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
}

define i32 @function_aa23(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_aa23:
  %v0_aa23 = load i32, i32* @ebp, align 4
  %v1_aa23 = add i32 %v0_aa23, -28
  ret i32 %v1_aa23
}

define i32 @function_aa2f() local_unnamed_addr {
dec_label_pc_aa2f:
  %eax.global-to-local = alloca i32, align 4
  %v0_aa2f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_aa2f
}

define i32 @function_aa3b(i32 %arg1) local_unnamed_addr {
dec_label_pc_aa3b:
  %v0_aa3d = load i32, i32* @ebp, align 4
  %v1_aa3d = add i32 %v0_aa3d, -28
  ret i32 %v1_aa3d
}

define i32 @function_aa71(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aa71:
  %eax.global-to-local = alloca i32, align 4
  %v0_aa71 = load i32, i32* @eax, align 4
  %v2_aa71 = add i32 %v0_aa71, 141
  %v16_aa71 = urem i32 %v2_aa71, 256
  %v18_aa71 = and i32 %v0_aa71, -256
  %v19_aa71 = or i32 %v16_aa71, %v18_aa71
  store i32 %v19_aa71, i32* %eax.global-to-local, align 4
  %v0_aa73 = load i32, i32* @ebp, align 4
  %v1_aa73 = add i32 %v0_aa73, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_aa73, i32* @ebp, align 4
  %v0_aa74 = load i32, i32* @ecx, align 4
  %v1_aa74 = add i32 %v0_aa74, -1679285244
  %v2_aa74 = inttoptr i32 %v1_aa74 to i8*
  %v3_aa74 = load i8, i8* %v2_aa74, align 1
  %v4_aa74 = udiv i8 %v3_aa74, 2
  %v5_aa74 = shl i8 %v3_aa74, 7
  %v6_aa74 = or i8 %v4_aa74, %v5_aa74
  store i8 %v6_aa74, i8* %v2_aa74, align 1
  %v0_aa7b = load i32, i32* %eax.global-to-local, align 4
  %v1_aa7b = inttoptr i32 %v0_aa7b to i8*
  %v2_aa7b = load i8, i8* %v1_aa7b, align 1
  %v4_aa7b = trunc i32 %v0_aa7b to i8
  %v5_aa7b = add i8 %v2_aa7b, %v4_aa7b
  store i8 %v5_aa7b, i8* %v1_aa7b, align 1
  %v0_aa7d = load i32, i32* @ebp, align 4
  %v1_aa7d = add i32 %v0_aa7d, -64
  store i32 %v1_aa7d, i32* @eax, align 4
  %v1_aa83 = call i32 @function_ef22(i32 %v1_aa7d)
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @ebx, align 4
  %v0_aa8d = load i32, i32* @ebp, align 4
  %v1_aa8d = add i32 %v0_aa8d, -24
  store i32 %v1_aa8d, i32* %eax.global-to-local, align 4
  %v1_aa93 = call i32 @function_11eb4(i32 %v1_aa8d)
  %v0_aa98 = load i32, i32* @ebp, align 4
  %v1_aaa3 = add i32 %v0_aa98, -92
  store i32 %v1_aaa3, i32* @eax, align 4
  %v1_aaa9 = call i32 @function_ef22(i32 %v1_aaa3)
  %v0_aaae = load i32, i32* @ebx, align 4
  store i32 %v0_aaae, i32* @eax, align 4
  %v0_aab0 = load i32, i32* @ebp, align 4
  %v1_aab0 = add i32 %v0_aab0, -12
  %v2_aab0 = inttoptr i32 %v1_aab0 to i32*
  %v3_aab0 = load i32, i32* %v2_aab0, align 4
  %v1_aab3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_aab3 = icmp eq i32 %v1_aab3, %v3_aab0
  br i1 %v3_aab3, label %bb, label %dec_label_pc_aac0

bb:                                               ; preds = %dec_label_pc_aa71
  %v1_aaba = call i32 @function_ab63()
  store i32 %v1_aaba, i32* @eax, align 4
  br label %dec_label_pc_aac0

dec_label_pc_aac0:                                ; preds = %bb, %dec_label_pc_aa71
  %v0_aac0 = call i32 @function_ab5e()
  store i32 %v0_aac0, i32* %eax.global-to-local, align 4
  ret i32 %v0_aac0

; uselistorder directives
  uselistorder i8 %v3_aa74, { 1, 0 }
  uselistorder i32 %v0_aa71, { 1, 0 }
}

define i32 @function_aad4() local_unnamed_addr {
dec_label_pc_aad4:
  %v0_aad4 = call i32 @function_ab16()
  ret i32 %v0_aad4
}

define i32 @function_aad6() local_unnamed_addr {
dec_label_pc_aad6:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_aad6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_aad6, i32* @esi, align 4
  %v0_aad8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_aad8, i32* @ebx, align 4
  %v0_aada = load i32, i32* @ebp, align 4
  %v1_aada = add i32 %v0_aada, -64
  store i32 %v1_aada, i32* @eax, align 4
  %v1_aae0 = call i32 @function_ef22(i32 %v1_aada)
  %v0_aae5 = load i32, i32* @esi, align 4
  store i32 %v0_aae5, i32* %eax.global-to-local, align 4
  %v0_aae7 = load i32, i32* @ebx, align 4
  store i32 %v0_aae7, i32* %edx.global-to-local, align 4
  %v10_aaed = icmp eq i32 %v0_aae7, 2
  br i1 %v10_aaed, label %dec_label_pc_aaf8, label %dec_label_pc_aaf2

dec_label_pc_aaf2:                                ; preds = %dec_label_pc_aad6
  %v0_aaf6 = call i32 @function_ab16()
  store i32 %v0_aaf6, i32* %eax.global-to-local, align 4
  ret i32 %v0_aaf6

dec_label_pc_aaf8:                                ; preds = %dec_label_pc_aad6
  ret i32 %v0_aae5

; uselistorder directives
  uselistorder i32 ()* @function_ab16, { 1, 0 }
}

define i32 @function_ab0d() local_unnamed_addr {
dec_label_pc_ab0d:
  %eax.global-to-local = alloca i32, align 4
  %v0_ab0d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ab0d
}

define i32 @function_ab16() local_unnamed_addr {
dec_label_pc_ab16:
  %v0_ab16 = load i32, i32* @ebp, align 4
  %v1_ab16 = add i32 %v0_ab16, -24
  %v1_ab1c = call i32 @function_11eb4(i32 %v1_ab16)
  %v0_ab21 = call i32 @function_ab27()
  ret i32 %v0_ab21

; uselistorder directives
  uselistorder i32 (i32)* @function_11eb4, { 1, 0 }
}

define i32 @function_ab23() local_unnamed_addr {
dec_label_pc_ab23:
  %eax.global-to-local = alloca i32, align 4
  %v0_ab23 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ab23
}

define i32 @function_ab27() local_unnamed_addr {
dec_label_pc_ab27:
  %v0_ab27 = load i32, i32* @ebp, align 4
  %v1_ab27 = add i32 %v0_ab27, -28
  %v1_ab32 = call i32 @function_ab38(i32 %v1_ab27)
  ret i32 %v1_ab32
}

define i32 @function_ab34() local_unnamed_addr {
dec_label_pc_ab34:
  %eax.global-to-local = alloca i32, align 4
  %v0_ab34 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ab34
}

define i32 @function_ab38(i32 %arg1) local_unnamed_addr {
dec_label_pc_ab38:
  %v0_ab38 = load i32, i32* @ebp, align 4
  %v1_ab38 = add i32 %v0_ab38, -92
  store i32 %v1_ab38, i32* @eax, align 4
  %v1_ab3e = call i32 @function_ef22(i32 %v1_ab38)
  %v0_ab43 = load i32, i32* @esi, align 4
  store i32 %v0_ab43, i32* @eax, align 4
  %v0_ab45 = load i32, i32* @ebx, align 4
  %v10_ab49 = icmp eq i32 %v0_ab45, -1
  br i1 %v10_ab49, label %bb, label %dec_label_pc_ab4e

bb:                                               ; preds = %dec_label_pc_ab38
  %v1_ab4c = call i32 @function_ab56()
  br label %dec_label_pc_ab4e

dec_label_pc_ab4e:                                ; preds = %bb, %dec_label_pc_ab38
  %v3_ab4e = phi i32 [ %v1_ab4c, %bb ], [ %v0_ab43, %dec_label_pc_ab38 ]
  ret i32 %v3_ab4e

; uselistorder directives
  uselistorder i32 (i32)* @function_ef22, { 2, 3, 1, 0 }
}

define i32 @function_ab56() local_unnamed_addr {
dec_label_pc_ab56:
  %v3_ab56 = load i32, i32* @eax, align 4
  ret i32 %v3_ab56
}

define i32 @function_ab5e() local_unnamed_addr {
dec_label_pc_ab5e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ab63() local_unnamed_addr {
dec_label_pc_ab63:
  %v0_ab63 = load i32, i32* @ebp, align 4
  %v1_ab63 = add i32 %v0_ab63, -8
  %v1_ab66 = inttoptr i32 %v1_ab63 to i32*
  %v2_ab66 = load i32, i32* %v1_ab66, align 4
  store i32 %v2_ab66, i32* @ebx, align 4
  %v1_ab68 = inttoptr i32 %v0_ab63 to i32*
  %v2_ab68 = load i32, i32* %v1_ab68, align 4
  store i32 %v2_ab68, i32* @ebp, align 4
  %v0_ab69 = load i32, i32* @eax, align 4
  ret i32 %v0_ab69
}

define i32 @_ZN8CLevelDB6ExistsISt4pairIc7uint256EEEbRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ab6a:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_ab99 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ab99, i32* @eax, align 4
  %v3_ab9f = call i32 @function_f046(i32 %v2_ab99, i32 2, i32 1020000)
  %v2_abb1 = call i32 @function_19fbc(i32 %v2_ab99, i32 %arg2)
  store i32 %v2_ab99, i32* @eax, align 4
  %v2_abc0 = call i32 @function_f3a8(i32 %v2_ab99, i32 %v2_abb1)
  store i32 %v2_ab99, i32* @eax, align 4
  %v2_abd2 = call i32 @function_17a96(i32 %v2_ab99, i32 %arg2)
  store i32 %v2_ab99, i32* @eax, align 4
  %v1_abdd = call i32 @function_f36a(i32 %v2_ab99)
  store i32 %v2_ab99, i32* @eax, align 4
  %v2_abf2 = call i32 @function_f3f2(i32 %v2_ab99, i32 0)
  %v2_abff = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_abff, i32* @eax, align 4
  %v3_ac05 = call i32 @function_1205c(i32 %v2_abff, i32 %v2_abf2, i32 %v1_abdd)
  %v2_ac0a = ptrtoint i32* %stack_var_-28 to i32
  ret i32 %v2_ac0a
}

define i32 @function_ac14() local_unnamed_addr {
dec_label_pc_ac14:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_ac14 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ac14 = add i32 %v0_ac14, 1082897477
  %v2_ac14 = inttoptr i32 %v1_ac14 to i32*
  %v3_ac14 = load i32, i32* %v2_ac14, align 4
  %v4_ac14 = add i32 %v3_ac14, -1
  store i32 %v4_ac14, i32* %v2_ac14, align 4
  %v0_ac1d = load i32, i32* %eax.global-to-local, align 4
  %v1_ac1d = add i32 %v0_ac1d, 20
  store i32 %v1_ac1d, i32* %eax.global-to-local, align 4
  %v1_ac20 = inttoptr i32 %v1_ac1d to i32*
  %v2_ac20 = load i32, i32* %v1_ac20, align 4
  store i32 %v2_ac20, i32* %ebx.global-to-local, align 4
  %v0_ac22 = load i32, i32* @ebp, align 4
  %v1_ac22 = add i32 %v0_ac22, -76
  %v2_ac22 = inttoptr i32 %v1_ac22 to i32*
  %v3_ac22 = load i32, i32* %v2_ac22, align 4
  store i32 %v3_ac22, i32* %eax.global-to-local, align 4
  %v1_ac25 = add i32 %v3_ac22, 48
  %v3_ac28 = load i32, i32* %v2_ac22, align 4
  store i32 %v3_ac28, i32* %eax.global-to-local, align 4
  %v1_ac2b = add i32 %v3_ac28, 68
  %v2_ac2b = inttoptr i32 %v1_ac2b to i32*
  %v3_ac2b = load i32, i32* %v2_ac2b, align 4
  %v1_ac2e = add i32 %v0_ac22, -20
  %v1_ac31 = add i32 %v0_ac22, -24
  %v1_ac38 = add i32 %v0_ac22, -32
  store i32 %v1_ac2e, i32* @eax, align 4
  %v6_ac55 = call i32 @function_1219a(i32 %v1_ac2e, i32 %v1_ac2e, i32 %v3_ac2b, i32 %v1_ac25, i32 %v1_ac38, i32 %v1_ac31)
  %v1_ac5a = xor i32 %v6_ac55, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_ac5a = trunc i32 %v1_ac5a to i8
  store i32 %v1_ac5a, i32* @eax, align 4
  store i1 false, i1* @cf, align 1
  %v5_ac5d = icmp eq i8 %v4_ac5a, 0
  br i1 %v5_ac5d, label %bb, label %dec_label_pc_ac61

bb:                                               ; preds = %dec_label_pc_ac14
  %v1_ac5f = call i32 @function_acbd()
  store i32 %v1_ac5f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_ac61

dec_label_pc_ac61:                                ; preds = %bb, %dec_label_pc_ac14
  %v0_ac61 = load i32, i32* @ebp, align 4
  %v1_ac61 = add i32 %v0_ac61, -20
  store i32 %v1_ac61, i32* @eax, align 4
  %v1_ac67 = call i32 @function_121ce(i32 %v1_ac61)
  store i32 %v1_ac67, i32* %eax.global-to-local, align 4
  %v4_ac6c = trunc i32 %v1_ac67 to i8
  %v5_ac6c = icmp eq i8 %v4_ac6c, 0
  br i1 %v5_ac6c, label %dec_label_pc_ac77, label %dec_label_pc_ac70

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac61
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_ac75 = call i32 @function_acc2()
  store i32 %v0_ac75, i32* %eax.global-to-local, align 4
  ret i32 %v0_ac75

dec_label_pc_ac77:                                ; preds = %dec_label_pc_ac61
  %v0_ac77 = load i32, i32* @ebp, align 4
  %v1_ac77 = add i32 %v0_ac77, -16
  store i32 %v1_ac77, i32* %eax.global-to-local, align 4
  ret i32 %v1_ac77

; uselistorder directives
  uselistorder i32 %v1_ac2e, { 0, 2, 1 }
  uselistorder i32 %v0_ac22, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7 }
}

define i32 @function_acbd() local_unnamed_addr {
dec_label_pc_acbd:
  %v0_acbd = load i32, i32* @eax, align 4
  ret i32 %v0_acbd
}

define i32 @function_acc2() local_unnamed_addr {
dec_label_pc_acc2:
  %v0_acc2 = load i32, i32* @ebp, align 4
  %v1_accd = add i32 %v0_acc2, -24
  ret i32 %v1_accd
}

define i32 @function_acd7() local_unnamed_addr {
dec_label_pc_acd7:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_acd7 = load i32, i32* @ebp, align 4
  %v1_acd7 = add i32 %v0_acd7, 76137541
  %v2_acd7 = inttoptr i32 %v1_acd7 to i32*
  %v3_acd7 = load i32, i32* %v2_acd7, align 4
  %v4_acd7 = add i32 %v3_acd7, -1
  store i32 %v4_acd7, i32* %v2_acd7, align 4
  %v0_acdd = load i32, i32* %eax.global-to-local, align 4
  %v1_acdd = trunc i32 %v0_acdd to i8
  %v2_acdd = and i8 %v1_acdd, -24
  %v8_acdd = zext i8 %v2_acdd to i32
  %v10_acdd = and i32 %v0_acdd, -256
  %v11_acdd = or i32 %v8_acdd, %v10_acdd
  store i32 %v11_acdd, i32* %eax.global-to-local, align 4
  %v1_ace1 = inttoptr i32 %v11_acdd to i8*
  %v2_ace1 = load i8, i8* %v1_ace1, align 8
  %v5_ace1 = add i8 %v2_ace1, %v2_acdd
  store i8 %v5_ace1, i8* %v1_ace1, align 8
  %v0_ace3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_ace3, i32* @eax, align 4
  %v0_ace5 = load i32, i32* @ebp, align 4
  %v1_ace5 = add i32 %v0_ace5, -12
  %v2_ace5 = inttoptr i32 %v1_ace5 to i32*
  %v3_ace5 = load i32, i32* %v2_ace5, align 4
  %v1_ace8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ace8 = icmp eq i32 %v1_ace8, %v3_ace5
  br i1 %v3_ace8, label %bb, label %dec_label_pc_acf1

bb:                                               ; preds = %dec_label_pc_acd7
  %v1_acef = call i32 @function_ad55()
  store i32 %v1_acef, i32* @eax, align 4
  br label %dec_label_pc_acf1

dec_label_pc_acf1:                                ; preds = %bb, %dec_label_pc_acd7
  %v0_acf1 = call i32 @function_ad50()
  store i32 %v0_acf1, i32* %eax.global-to-local, align 4
  ret i32 %v0_acf1
}

define i32 @function_ad02() local_unnamed_addr {
dec_label_pc_ad02:
  %v0_ad02 = call i32 @function_ad08()
  ret i32 %v0_ad02
}

define i32 @function_ad04() local_unnamed_addr {
dec_label_pc_ad04:
  %eax.global-to-local = alloca i32, align 4
  %v0_ad04 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ad04
}

define i32 @function_ad08() local_unnamed_addr {
dec_label_pc_ad08:
  %v0_ad08 = load i32, i32* @ebp, align 4
  %v1_ad08 = add i32 %v0_ad08, -20
  %v1_ad13 = call i32 @function_ad19(i32 %v1_ad08)
  ret i32 %v1_ad13
}

define i32 @function_ad15() local_unnamed_addr {
dec_label_pc_ad15:
  %eax.global-to-local = alloca i32, align 4
  %v0_ad15 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ad15
}

define i32 @function_ad19(i32 %arg1) local_unnamed_addr {
dec_label_pc_ad19:
  %v0_ad19 = load i32, i32* @ebp, align 4
  %v1_ad19 = add i32 %v0_ad19, -24
  ret i32 %v1_ad19
}

define i32 @function_ad24() local_unnamed_addr {
dec_label_pc_ad24:
  %v0_ad24 = call i32 @function_ad2a()
  ret i32 %v0_ad24
}

define i32 @function_ad26() local_unnamed_addr {
dec_label_pc_ad26:
  %eax.global-to-local = alloca i32, align 4
  %v0_ad26 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ad26
}

define i32 @function_ad2a() local_unnamed_addr {
dec_label_pc_ad2a:
  %v0_ad2a = load i32, i32* @ebp, align 4
  %v0_ad35 = load i32, i32* @esi, align 4
  store i32 %v0_ad35, i32* @eax, align 4
  %v0_ad37 = load i32, i32* @ebx, align 4
  %v10_ad3b = icmp eq i32 %v0_ad37, -1
  br i1 %v10_ad3b, label %bb, label %dec_label_pc_ad40

bb:                                               ; preds = %dec_label_pc_ad2a
  %v1_ad2a = add i32 %v0_ad2a, -60
  %v2_ad3e = call i32 @function_ad48(i32 %v1_ad2a)
  br label %dec_label_pc_ad40

dec_label_pc_ad40:                                ; preds = %bb, %dec_label_pc_ad2a
  %v0_ad40 = phi i32 [ %v2_ad3e, %bb ], [ %v0_ad35, %dec_label_pc_ad2a ]
  ret i32 %v0_ad40
}

define i32 @function_ad48(i32 %arg1) local_unnamed_addr {
dec_label_pc_ad48:
  %v3_ad48 = load i32, i32* @eax, align 4
  ret i32 %v3_ad48
}

define i32 @function_ad50() local_unnamed_addr {
dec_label_pc_ad50:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ad55() local_unnamed_addr {
dec_label_pc_ad55:
  %v0_ad5b = load i32, i32* @eax, align 4
  ret i32 %v0_ad5b
}

define i32 @_ZN8CLevelDB4ReadIc7uint256EEbRKT_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ad5c:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v2_ad94 = ptrtoint i32* %stack_var_-96 to i32
  %v3_ad9a = call i32 @function_f238(i32 %v2_ad94, i32 2, i32 1020000)
  store i32 %v2_ad94, i32* @eax, align 4
  %v2_adac = call i32 @function_1a2a8(i32 %v2_ad94, i32 %arg2)
  store i32 %v2_ad94, i32* @eax, align 4
  %v2_adbb = call i32 @function_f59a(i32 %v2_ad94, i32 %v2_adac)
  %v2_adcd = call i32 @_ZNSsC1EPKcRKSaIcE.938(i32 %v2_ad94, i32 %arg2)
  %v1_add8 = call i32 @function_f55c(i32 %v2_ad94)
  store i32 %v2_ad94, i32* @eax, align 4
  %v2_aded = call i32 @function_f5e4(i32 %v2_ad94, i32 0)
  %v2_adfa = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_adfa, i32* @eax, align 4
  %v3_ae00 = call i32 @function_1224e(i32 %v2_adfa, i32 %v2_aded, i32 %v1_add8)
  %v2_ae05 = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_ae05

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_ae0f() local_unnamed_addr {
dec_label_pc_ae0f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_ae0f = load i32, i32* %ebx.global-to-local, align 4
  %v1_ae0f = add i32 %v0_ae0f, 1082889285
  %v2_ae0f = inttoptr i32 %v1_ae0f to i32*
  %v3_ae0f = load i32, i32* %v2_ae0f, align 4
  %v4_ae0f = add i32 %v3_ae0f, -1
  store i32 %v4_ae0f, i32* %v2_ae0f, align 4
  %v0_ae18 = load i32, i32* %eax.global-to-local, align 4
  %v1_ae18 = add i32 %v0_ae18, 20
  store i32 %v1_ae18, i32* %eax.global-to-local, align 4
  %v1_ae1b = inttoptr i32 %v1_ae18 to i32*
  %v2_ae1b = load i32, i32* %v1_ae1b, align 4
  store i32 %v2_ae1b, i32* %ebx.global-to-local, align 4
  %v0_ae1d = load i32, i32* @ebp, align 4
  %v1_ae1d = add i32 %v0_ae1d, -108
  %v2_ae1d = inttoptr i32 %v1_ae1d to i32*
  %v3_ae1d = load i32, i32* %v2_ae1d, align 4
  store i32 %v3_ae1d, i32* %eax.global-to-local, align 4
  %v3_ae23 = load i32, i32* %v2_ae1d, align 4
  store i32 %v3_ae23, i32* %eax.global-to-local, align 4
  %v1_ae26 = add i32 %v3_ae23, 68
  %v2_ae26 = inttoptr i32 %v1_ae26 to i32*
  %v3_ae26 = load i32, i32* %v2_ae26, align 4
  %v1_ae29 = add i32 %v0_ae1d, -24
  %v1_ae55 = xor i32 %v1_ae29, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_ae55 = trunc i32 %v1_ae55 to i8
  store i32 %v1_ae55, i32* %eax.global-to-local, align 4
  %v5_ae58 = icmp eq i8 %v4_ae55, 0
  br i1 %v5_ae58, label %bb, label %dec_label_pc_ae5c

bb:                                               ; preds = %dec_label_pc_ae0f
  %v1_ae33 = add i32 %v0_ae1d, -36
  %v1_ae20 = add i32 %v3_ae1d, 48
  %v1_ae2c = add i32 %v0_ae1d, -28
  %v7_ae5a = call i32 @function_aebb(i32 %v1_ae29, i32 %v1_ae29, i32 %v3_ae26, i32 %v1_ae20, i32 %v1_ae33, i32 %v1_ae2c)
  store i32 %v7_ae5a, i32* %eax.global-to-local, align 4
  %v0_ae5c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_ae5c

dec_label_pc_ae5c:                                ; preds = %bb, %dec_label_pc_ae0f
  %v0_ae75 = phi i32 [ %v0_ae5c.pre, %bb ], [ %v0_ae1d, %dec_label_pc_ae0f ]
  %v1_ae5c = add i32 %v0_ae75, -24
  store i32 %v1_ae5c, i32* %eax.global-to-local, align 4
  %v4_ae67 = trunc i32 %v1_ae5c to i8
  %v5_ae67 = icmp eq i8 %v4_ae67, 0
  br i1 %v5_ae67, label %dec_label_pc_ae75, label %dec_label_pc_ae6b

dec_label_pc_ae6b:                                ; preds = %dec_label_pc_ae5c
  store i32 0, i32* @ebx, align 4
  %v1_ae70 = call i32 @function_af25(i32 %v1_ae5c)
  store i32 %v1_ae70, i32* %eax.global-to-local, align 4
  ret i32 %v1_ae70

dec_label_pc_ae75:                                ; preds = %dec_label_pc_ae5c
  %v1_ae75 = add i32 %v0_ae75, -20
  store i32 %v1_ae75, i32* %eax.global-to-local, align 4
  ret i32 %v1_ae75

; uselistorder directives
  uselistorder i32 %v0_ae1d, { 0, 2, 3, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
}

define i32 @function_aebb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_aebb:
  %v0_aebb = load i32, i32* @ebp, align 4
  %v1_aebb = add i32 %v0_aebb, -28
  ret i32 %v1_aebb
}

define i32 @function_aed2() local_unnamed_addr {
dec_label_pc_aed2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_aed2 = load i32, i32* %ecx.global-to-local, align 4
  %v3_aed2 = add i32 %v2_aed2, ptrtoint (i8** @global_var_1.1176 to i32)
  %v18_aed2 = inttoptr i32 %v2_aed2 to i32*
  store i32 %v3_aed2, i32* %v18_aed2, align 4
  %v0_aed4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_aed4
}

define i32 @function_af25(i32 %arg1) local_unnamed_addr {
dec_label_pc_af25:
  %v0_af25 = load i32, i32* @ebp, align 4
  %v1_af25 = add i32 %v0_af25, -24
  store i32 %v1_af25, i32* @eax, align 4
  %v1_af2b = call i32 @function_1234c(i32 %v1_af25)
  %v0_af30 = load i32, i32* @ebp, align 4
  %v0_af46 = load i32, i32* @ebx, align 4
  store i32 %v0_af46, i32* @eax, align 4
  %v1_af48 = add i32 %v0_af30, -12
  %v2_af48 = inttoptr i32 %v1_af48 to i32*
  %v3_af48 = load i32, i32* %v2_af48, align 4
  %v1_af4b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_af4b = icmp eq i32 %v1_af4b, %v3_af48
  br i1 %v3_af4b, label %bb, label %dec_label_pc_af58

bb:                                               ; preds = %dec_label_pc_af25
  %v1_af3b = add i32 %v0_af30, -92
  %v2_af52 = call i32 @function_affb(i32 %v1_af3b)
  store i32 %v2_af52, i32* @eax, align 4
  br label %dec_label_pc_af58

dec_label_pc_af58:                                ; preds = %bb, %dec_label_pc_af25
  %v0_af58 = call i32 @function_aff6()
  ret i32 %v0_af58

; uselistorder directives
  uselistorder i32 %v0_af30, { 1, 0 }
}

define i32 @function_af5d() local_unnamed_addr {
dec_label_pc_af5d:
  %v0_af61 = load i32, i32* @ebp, align 4
  %v1_af61 = add i32 %v0_af61, -20
  %v1_af6c = call i32 @function_afae(i32 %v1_af61)
  ret i32 %v1_af6c
}

define i32 @function_af6e() local_unnamed_addr {
dec_label_pc_af6e:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_af6e = load i32, i32* %eax.global-to-local, align 4
  %v0_af70 = load i32, i32* %edx.global-to-local, align 4
  %v0_af72 = load i32, i32* @ebp, align 4
  %v10_af85 = icmp eq i32 %v0_af70, 2
  br i1 %v10_af85, label %dec_label_pc_af90, label %dec_label_pc_af8a

dec_label_pc_af8a:                                ; preds = %dec_label_pc_af6e
  %v1_af72 = add i32 %v0_af72, -64
  %v1_af8e = call i32 @function_afae(i32 %v1_af72)
  store i32 %v1_af8e, i32* %eax.global-to-local, align 4
  ret i32 %v1_af8e

dec_label_pc_af90:                                ; preds = %dec_label_pc_af6e
  %v2_af98 = add i32 %v0_af72, -16
  %v3_af98 = inttoptr i32 %v2_af98 to i32*
  store i32 %v0_af6e, i32* %v3_af98, align 4
  store i32 0, i32* @ebx, align 4
  %v1_afa5 = call i32 @function_af25(i32 %v0_af6e)
  store i32 %v1_afa5, i32* %eax.global-to-local, align 4
  ret i32 %v1_afa5

; uselistorder directives
  uselistorder i32 %v0_af6e, { 1, 0 }
  uselistorder i32 (i32)* @function_af25, { 1, 0 }
  uselistorder i32 (i32)* @function_afae, { 1, 0 }
}

define i32 @function_afae(i32 %arg1) local_unnamed_addr {
dec_label_pc_afae:
  %v0_afae = load i32, i32* @ebp, align 4
  %v1_afae = add i32 %v0_afae, -24
  store i32 %v1_afae, i32* @eax, align 4
  %v1_afb4 = call i32 @function_1234c(i32 %v1_afae)
  %v0_afb9 = call i32 @function_afbf()
  ret i32 %v0_afb9

; uselistorder directives
  uselistorder i32 (i32)* @function_1234c, { 1, 0 }
}

define i32 @function_afbb() local_unnamed_addr {
dec_label_pc_afbb:
  %eax.global-to-local = alloca i32, align 4
  %v0_afbb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_afbb
}

define i32 @function_afbf() local_unnamed_addr {
dec_label_pc_afbf:
  %v0_afbf = load i32, i32* @ebp, align 4
  %v1_afbf = add i32 %v0_afbf, -28
  ret i32 %v1_afbf
}

define i32 @function_afca() local_unnamed_addr {
dec_label_pc_afca:
  %v0_afca = call i32 @function_afd0()
  ret i32 %v0_afca
}

define i32 @function_afcc() local_unnamed_addr {
dec_label_pc_afcc:
  %eax.global-to-local = alloca i32, align 4
  %v0_afcc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_afcc
}

define i32 @function_afd0() local_unnamed_addr {
dec_label_pc_afd0:
  %v0_afdb = load i32, i32* @esi, align 4
  ret i32 %v0_afdb
}

define i32 @function_aff6() local_unnamed_addr {
dec_label_pc_aff6:
  %v0_aff6 = load i32, i32* @eax, align 4
  ret i32 %v0_aff6
}

define i32 @function_affb(i32 %arg1) local_unnamed_addr {
dec_label_pc_affb:
  %v0_b001 = load i32, i32* @eax, align 4
  ret i32 %v0_b001
}

define i32 @_ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE4findERS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b002:
  store i32 %arg1, i32* @eax, align 4
  %v3_b039 = call i32 @function_1a764(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b050

bb:                                               ; preds = %dec_label_pc_b002
  %v1_b04e = call i32 @function_b055()
  br label %dec_label_pc_b050

dec_label_pc_b050:                                ; preds = %bb, %dec_label_pc_b002
  %v3_b04e = phi i32 [ %v1_b04e, %bb ], [ %arg1, %dec_label_pc_b002 ]
  ret i32 %v3_b04e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_b055() local_unnamed_addr {
dec_label_pc_b055:
  %v0_b056 = load i32, i32* @eax, align 4
  ret i32 %v0_b056
}

define i32 @_ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b05a:
  store i32 %arg1, i32* @eax, align 4
  %v2_b084 = call i32 @function_1a8a8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b09b

bb:                                               ; preds = %dec_label_pc_b05a
  %v1_b099 = call i32 @function_b0a0()
  br label %dec_label_pc_b09b

dec_label_pc_b09b:                                ; preds = %bb, %dec_label_pc_b05a
  %v3_b099 = phi i32 [ %v1_b099, %bb ], [ %arg1, %dec_label_pc_b05a ]
  ret i32 %v3_b099

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_b0a0() local_unnamed_addr {
dec_label_pc_b0a0:
  %v0_b0a1 = load i32, i32* @eax, align 4
  ret i32 %v0_b0a1
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEeqERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b0a4:
  %v2_b0c4 = load i32, i32* %arg1, align 4
  %v1_b0c9 = inttoptr i32 %arg2 to i32*
  %v2_b0c9 = load i32, i32* %v1_b0c9, align 4
  %v12_b0cb = icmp eq i32 %v2_b0c4, %v2_b0c9
  %v1_b0cd = zext i1 %v12_b0cb to i32
  %v3_b0cd = and i32 %v2_b0c9, -256
  %v4_b0cd = or i32 %v1_b0cd, %v3_b0cd
  store i32 %v4_b0cd, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b0dc

bb:                                               ; preds = %dec_label_pc_b0a4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_b0da = call i32 @function_b0e1(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_b0dc

dec_label_pc_b0dc:                                ; preds = %bb, %dec_label_pc_b0a4
  %v4_b0da = phi i32 [ %v3_b0da, %bb ], [ %v4_b0cd, %dec_label_pc_b0a4 ]
  ret i32 %v4_b0da

; uselistorder directives
  uselistorder i32 %v2_b0c9, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_b0e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b0e1:
  %v0_b0e2 = load i32, i32* @eax, align 4
  ret i32 %v0_b0e2
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_b0e4:
  %v2_b0fe = load i32, i32* %arg1, align 4
  %v1_b100 = add i32 %v2_b0fe, 16
  store i32 %v1_b100, i32* @eax, align 4
  %v1_b106 = call i32 @function_1a97c(i32 %v1_b100)
  store i32 %v1_b106, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b117

bb:                                               ; preds = %dec_label_pc_b0e4
  %v1_b115 = call i32 @function_b11c()
  br label %dec_label_pc_b117

dec_label_pc_b117:                                ; preds = %bb, %dec_label_pc_b0e4
  %v2_b115 = phi i32 [ %v1_b115, %bb ], [ %v1_b106, %dec_label_pc_b0e4 ]
  ret i32 %v2_b115
}

define i32 @function_b11c() local_unnamed_addr {
dec_label_pc_b11c:
  %v0_b11d = load i32, i32* @eax, align 4
  ret i32 %v0_b11d
}

define i32 @_ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_b11e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b14c

bb:                                               ; preds = %dec_label_pc_b11e
  %v2_b14a = call i32 @function_b151(i32 %arg1)
  br label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %bb, %dec_label_pc_b11e
  %v3_b14a = phi i32 [ %v2_b14a, %bb ], [ %arg1, %dec_label_pc_b11e ]
  ret i32 %v3_b14a
}

define i32 @function_b151(i32 %arg1) local_unnamed_addr {
dec_label_pc_b151:
  %v0_b152 = load i32, i32* @eax, align 4
  ret i32 %v0_b152
}

define i32 @_ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b154:
  store i32 %arg1, i32* @eax, align 4
  %v2_b17e = call i32 @function_1aa4a(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_b192(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b192:
  %v0_b192 = load i32, i32* @ebp, align 4
  %v1_b192 = load i32, i32* @eax, align 4
  %v2_b192 = mul i32 %v1_b192, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_b192 = add i32 %v0_b192, -24
  %v4_b192 = add i32 %v3_b192, %v2_b192
  %v5_b192 = inttoptr i32 %v4_b192 to i8*
  %v6_b192 = load i8, i8* %v5_b192, align 1
  %v7_b192 = load i32, i32* @edx, align 4
  %v8_b192 = lshr i32 %v7_b192, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_b192 = trunc i32 %v8_b192 to i8
  %v10_b192 = add i8 %v9_b192, %v6_b192
  store i8 %v10_b192, i8* %v5_b192, align 1
  %v0_b196 = load i32, i32* @eax, align 4
  ret i32 %v0_b196
}

define i32 @function_b199() local_unnamed_addr {
dec_label_pc_b199:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_b199 = load i32, i32* %ecx.global-to-local, align 4
  %v1_b199 = sub i32 %v0_b199, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_b199, i32* %ecx.global-to-local, align 4
  %v0_b19b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b19b
}

define i32 @_ZNKSt3mapI7uint2566CCoinsSt4lessIS0_ESaISt4pairIKS0_S1_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b19e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b1df

bb:                                               ; preds = %dec_label_pc_b19e
  %v3_b1dd = call i32 @function_b1e4(i32 %arg1, i32 %arg2)
  br label %dec_label_pc_b1df

dec_label_pc_b1df:                                ; preds = %bb, %dec_label_pc_b19e
  %v4_b1dd = phi i32 [ %v3_b1dd, %bb ], [ %arg1, %dec_label_pc_b19e ]
  ret i32 %v4_b1dd
}

define i32 @function_b1e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b1e4:
  %v0_b1e5 = load i32, i32* @eax, align 4
  ret i32 %v0_b1e5
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEneERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b1e8:
  %v2_b208 = load i32, i32* %arg1, align 4
  %v1_b20d = inttoptr i32 %arg2 to i32*
  %v2_b20d = load i32, i32* %v1_b20d, align 4
  %v12_b20f = icmp eq i32 %v2_b208, %v2_b20d
  %v1_b211 = icmp eq i1 %v12_b20f, false
  %v2_b211 = zext i1 %v1_b211 to i32
  %v4_b211 = and i32 %v2_b20d, -256
  %v5_b211 = or i32 %v2_b211, %v4_b211
  store i32 %v5_b211, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b220

bb:                                               ; preds = %dec_label_pc_b1e8
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_b21e = call i32 @function_b225(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_b220

dec_label_pc_b220:                                ; preds = %bb, %dec_label_pc_b1e8
  %v4_b21e = phi i32 [ %v3_b21e, %bb ], [ %v5_b211, %dec_label_pc_b1e8 ]
  ret i32 %v4_b21e

; uselistorder directives
  uselistorder i32 %v2_b20d, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_b225(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b225:
  %v0_b226 = load i32, i32* @eax, align 4
  ret i32 %v0_b226
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEppEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b228:
  %v1_b251 = inttoptr i32 %arg2 to i32*
  %v2_b251 = load i32, i32* %v1_b251, align 4
  store i32 %v2_b251, i32* %arg1, align 4
  %v2_b258 = load i32, i32* %v1_b251, align 4
  ret i32 %v2_b258
}

define i32 @function_b261() local_unnamed_addr {
dec_label_pc_b261:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_b261 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b261 = add i32 %v0_b261, 42590293
  %v2_b261 = inttoptr i32 %v1_b261 to i32*
  %v3_b261 = load i32, i32* %v2_b261, align 4
  %v4_b261 = add i32 %v3_b261, -1
  store i32 %v4_b261, i32* %v2_b261, align 4
  %v0_b267 = load i32, i32* %ebp.global-to-local, align 4
  %v1_b267 = add i32 %v0_b267, -28
  %v2_b267 = inttoptr i32 %v1_b267 to i32*
  %v3_b267 = load i32, i32* %v2_b267, align 4
  ret i32 %v3_b267
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_b280:
  %v2_b29a = load i32, i32* %arg1, align 4
  %v1_b29c = add i32 %v2_b29a, 16
  store i32 %v1_b29c, i32* @eax, align 4
  %v1_b2a2 = call i32 @function_1ac0a(i32 %v1_b29c)
  ret i32 %v1_b2a2
}

define i32 @_ZN5boost11filesystem34pathC1IA7_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b2ba:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_b2ea = call i32 @function_107fe(i32 %arg1)
  %v2_b2f4 = ptrtoint i32* %stack_var_-17 to i32
  %v2_b30d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_b30d, i32* @eax, align 4
  %v3_b326 = call i32 @function_1a965(i32 %v2_b30d, i32 %arg1, i32 %v1_b2ea)
  ret i32 %v2_b2f4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_b340() local_unnamed_addr {
dec_label_pc_b340:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_b340 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b340 = add i32 %v0_b340, 862319685
  %v2_b340 = inttoptr i32 %v1_b340 to i32*
  %v3_b340 = load i32, i32* %v2_b340, align 4
  %v4_b340 = add i32 %v3_b340, -1
  store i32 %v4_b340, i32* %v2_b340, align 4
  %v0_b346 = load i32, i32* %eax.global-to-local, align 4
  %v1_b346 = add i32 %v0_b346, 20
  %v10_b346 = icmp eq i32 %v1_b346, 0
  store i32 %v1_b346, i32* @eax, align 4
  br i1 %v10_b346, label %bb, label %dec_label_pc_b34d

bb:                                               ; preds = %dec_label_pc_b340
  %v1_b34b = call i32 @function_b389()
  store i32 %v1_b34b, i32* @eax, align 4
  br label %dec_label_pc_b34d

dec_label_pc_b34d:                                ; preds = %bb, %dec_label_pc_b340
  %v0_b34d = call i32 @function_b384()
  store i32 %v0_b34d, i32* %eax.global-to-local, align 4
  ret i32 %v0_b34d
}

define i32 @function_b34f() local_unnamed_addr {
dec_label_pc_b34f:
  %v0_b351 = load i32, i32* @ebp, align 4
  %v1_b351 = add i32 %v0_b351, -20
  %v1_b35c = call i32 @function_b360(i32 %v1_b351)
  ret i32 %v1_b35c
}

define i32 @function_b35e() local_unnamed_addr {
dec_label_pc_b35e:
  %eax.global-to-local = alloca i32, align 4
  %v0_b35e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b35e
}

define i32 @function_b360(i32 %arg1) local_unnamed_addr {
dec_label_pc_b360:
  %v0_b360 = load i32, i32* @ebp, align 4
  %v1_b360 = add i32 %v0_b360, -13
  ret i32 %v1_b360
}

define i32 @function_b366(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b366:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b36b() local_unnamed_addr {
dec_label_pc_b36b:
  %v0_b36b = call i32 @function_b36f()
  ret i32 %v0_b36b
}

define i32 @function_b36d() local_unnamed_addr {
dec_label_pc_b36d:
  %eax.global-to-local = alloca i32, align 4
  %v0_b36d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b36d
}

define i32 @function_b36f() local_unnamed_addr {
dec_label_pc_b36f:
  %v0_b36f = load i32, i32* @ebp, align 4
  %v1_b36f = add i32 %v0_b36f, -28
  %v2_b36f = inttoptr i32 %v1_b36f to i32*
  %v3_b36f = load i32, i32* %v2_b36f, align 4
  ret i32 %v3_b36f
}

define i32 @function_b384() local_unnamed_addr {
dec_label_pc_b384:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b389() local_unnamed_addr {
dec_label_pc_b389:
  %v0_b38f = load i32, i32* @eax, align 4
  ret i32 %v0_b38f
}

define i32 @_ZN5boost11filesystem34pathC1IA6_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b390:
  %stack_var_-17 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_b3c0 = call i32 @function_108d4(i32 %arg1)
  store i32 %arg1, i32* @ebx, align 4
  %v2_b3ca = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_b3ca

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_b40a(i32 %arg1) local_unnamed_addr {
dec_label_pc_b40a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b40c() local_unnamed_addr {
dec_label_pc_b40c:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_b417 = add i32 %tmp91, -12
  %v2_b417 = inttoptr i32 %v1_b417 to i32*
  %v3_b417 = load i32, i32* %v2_b417, align 4
  %v1_b41a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b41a = xor i32 %v1_b41a, %v3_b417
  %v3_b41a = icmp eq i32 %v2_b41a, 0
  store i32 %v2_b41a, i32* @eax, align 4
  br i1 %v3_b41a, label %bb, label %dec_label_pc_b423

bb:                                               ; preds = %dec_label_pc_b40c
  %v1_b40c = add i32 %tmp91, -13
  %v2_b421 = call i32 @function_b45f(i32 %v1_b40c)
  store i32 %v2_b421, i32* @eax, align 4
  br label %dec_label_pc_b423

dec_label_pc_b423:                                ; preds = %bb, %dec_label_pc_b40c
  %v0_b423 = call i32 @function_b45a()
  ret i32 %v0_b423
}

define i32 @function_b426() local_unnamed_addr {
dec_label_pc_b426:
  %eax.global-to-local = alloca i32, align 4
  %v0_b426 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b426
}

define i32 @function_b432() local_unnamed_addr {
dec_label_pc_b432:
  %v0_b432 = call i32 @function_b436()
  ret i32 %v0_b432
}

define i32 @function_b434() local_unnamed_addr {
dec_label_pc_b434:
  %eax.global-to-local = alloca i32, align 4
  %v0_b434 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b434
}

define i32 @function_b436() local_unnamed_addr {
dec_label_pc_b436:
  %v0_b436 = load i32, i32* @ebp, align 4
  %v1_b436 = add i32 %v0_b436, -13
  %v1_b441 = call i32 @function_b445(i32 %v1_b436)
  ret i32 %v1_b441
}

define i32 @function_b443() local_unnamed_addr {
dec_label_pc_b443:
  %eax.global-to-local = alloca i32, align 4
  %v0_b443 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b443
}

define i32 @function_b445(i32 %arg1) local_unnamed_addr {
dec_label_pc_b445:
  %v0_b450 = load i32, i32* @ebx, align 4
  ret i32 %v0_b450
}

define i32 @function_b45a() local_unnamed_addr {
dec_label_pc_b45a:
  %v0_b45a = load i32, i32* @eax, align 4
  ret i32 %v0_b45a
}

define i32 @function_b45f(i32 %arg1) local_unnamed_addr {
dec_label_pc_b45f:
  %v0_b465 = load i32, i32* @eax, align 4
  ret i32 %v0_b465
}

define i32 @_ZN8CLevelDB5WriteISt4pairIc7uint256E15CDiskBlockIndexEEbRKT_RKT0_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_b466:
  %stack_var_-20 = alloca i32, align 4
  %v2_b491 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_b491, i32* @eax, align 4
  %v1_b497 = call i32 @function_12b4e(i32 %v2_b491)
  store i32 %v2_b491, i32* @eax, align 4
  %v3_b4b0 = call i32 @function_1ae1e(i32 %v2_b491, i32 %arg2, i32 %arg3)
  store i32 %v2_b491, i32* @eax, align 4
  %v1_b4d7 = call i32 @function_12b84(i32 %v2_b491)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b4ea

bb:                                               ; preds = %dec_label_pc_b466
  %v1_b4e8 = call i32 @function_b51b()
  store i32 %v1_b4e8, i32* @eax, align 4
  br label %dec_label_pc_b4ea

dec_label_pc_b4ea:                                ; preds = %bb, %dec_label_pc_b466
  %v0_b4ea = call i32 @function_b516()
  ret i32 %v0_b4ea
}

define i32 @function_b4ec() local_unnamed_addr {
dec_label_pc_b4ec:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_b4ec = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_b4ec, i32* %esi.global-to-local, align 4
  %v0_b4ee = load i32, i32* @edx, align 4
  store i32 %v0_b4ee, i32* %ebx.global-to-local, align 4
  %v0_b4f0 = load i32, i32* @ebp, align 4
  %v1_b4f0 = add i32 %v0_b4f0, -16
  store i32 %v1_b4f0, i32* @eax, align 4
  %v1_b4f6 = call i32 @function_12b84(i32 %v1_b4f0)
  %v0_b4fb = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_b4fb, i32* @eax, align 4
  %v0_b4fd = load i32, i32* %ebx.global-to-local, align 4
  %v10_b501 = icmp eq i32 %v0_b4fd, -1
  br i1 %v10_b501, label %bb, label %dec_label_pc_b506

bb:                                               ; preds = %dec_label_pc_b4ec
  %v1_b504 = call i32 @function_b50e()
  store i32 %v1_b504, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_b506

dec_label_pc_b506:                                ; preds = %bb, %dec_label_pc_b4ec
  %v3_b506 = phi i32 [ %v1_b504, %bb ], [ %v0_b4fb, %dec_label_pc_b4ec ]
  ret i32 %v3_b506

; uselistorder directives
  uselistorder i32 (i32)* @function_12b84, { 1, 0 }
}

define i32 @function_b50e() local_unnamed_addr {
dec_label_pc_b50e:
  %v3_b50e = load i32, i32* @eax, align 4
  ret i32 %v3_b50e
}

define i32 @function_b516() local_unnamed_addr {
dec_label_pc_b516:
  %v0_b516 = load i32, i32* @eax, align 4
  ret i32 %v0_b516
}

define i32 @function_b51b() local_unnamed_addr {
dec_label_pc_b51b:
  %v0_b521 = load i32, i32* @eax, align 4
  ret i32 %v0_b521
}

define i32 @_ZN8CLevelDB4ReadIc7CBigNumEEbRKT_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b522:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v2_b55a = ptrtoint i32* %stack_var_-96 to i32
  %v3_b560 = call i32 @function_f9fe(i32 %v2_b55a, i32 2, i32 1020000)
  %v2_b572 = call i32 @function_1aa6e(i32 %v2_b55a, i32 %arg2)
  %v2_b581 = call i32 @function_fd60(i32 %v2_b55a, i32 %v2_b572)
  store i32 %v2_b55a, i32* @eax, align 4
  %v2_b593 = call i32 @function_1aac4(i32 %v2_b55a, i32 %arg2)
  store i32 %v2_b55a, i32* @eax, align 4
  %v1_b59e = call i32 @function_fd22(i32 %v2_b55a)
  store i32 %v1_b59e, i32* @ebx, align 4
  %v2_b5b3 = call i32 @function_fdaa(i32 %v2_b55a, i32 0)
  %v0_b5b8 = load i32, i32* @ebx, align 4
  %v2_b5c0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_b5c6 = call i32 @function_12a14(i32 %v2_b5c0, i32 %v2_b5b3, i32 %v0_b5b8)
  %v2_b5cb = ptrtoint i32* %stack_var_-32 to i32
  %v1_b5d9 = add i32 %arg1, 68
  %v2_b5d9 = inttoptr i32 %v1_b5d9 to i32*
  %v1_b5e6 = add i32 %arg1, 48
  %v3_b5ec = load i32, i32* %v2_b5d9, align 4
  %v2_b5ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_b5ef, i32* @eax, align 4
  %v6_b616 = call i32 @function_12b52(i32 %v2_b5ef, i32 %v2_b5ef, i32 %v3_b5ec, i32 %v1_b5e6, i32 %v2_b5c0, i32 %v2_b5cb)
  %v1_b61b = xor i32 %v6_b616, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_b61b = trunc i32 %v1_b61b to i8
  %v5_b61e = icmp eq i8 %v4_b61b, 0
  br i1 %v5_b61e, label %bb, label %dec_label_pc_b622

bb:                                               ; preds = %dec_label_pc_b522
  %v1_b620 = call i32 @function_b681()
  br label %dec_label_pc_b622

dec_label_pc_b622:                                ; preds = %bb, %dec_label_pc_b522
  %v4_b62d = trunc i32 %v2_b5ef to i8
  %v5_b62d = icmp eq i8 %v4_b62d, 0
  br i1 %v5_b62d, label %dec_label_pc_b63b, label %dec_label_pc_b631

dec_label_pc_b631:                                ; preds = %dec_label_pc_b622
  store i32 0, i32* @ebx, align 4
  %v1_b636 = call i32 @function_b6eb(i32 %v2_b5ef)
  ret i32 %v1_b636

dec_label_pc_b63b:                                ; preds = %dec_label_pc_b622
  %v2_b63b = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_b63b

; uselistorder directives
  uselistorder i32 %v2_b5ef, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_b681() local_unnamed_addr {
dec_label_pc_b681:
  %v0_b681 = load i32, i32* @ebp, align 4
  %v1_b681 = add i32 %v0_b681, -28
  ret i32 %v1_b681
}

define i32 @function_b698() local_unnamed_addr {
dec_label_pc_b698:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_b698 = load i32, i32* %ecx.global-to-local, align 4
  %v3_b698 = add i32 %v2_b698, ptrtoint (i8** @global_var_1.1176 to i32)
  %v18_b698 = inttoptr i32 %v2_b698 to i32*
  store i32 %v3_b698, i32* %v18_b698, align 4
  %v0_b69a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b69a
}

define i32 @function_b6eb(i32 %arg1) local_unnamed_addr {
dec_label_pc_b6eb:
  %v0_b6eb = load i32, i32* @ebp, align 4
  %v1_b6eb = add i32 %v0_b6eb, -24
  store i32 %v1_b6eb, i32* @eax, align 4
  %v1_b6f1 = call i32 @function_12b12(i32 %v1_b6eb)
  %v0_b6f6 = load i32, i32* @ebp, align 4
  %v1_b6f6 = add i32 %v0_b6f6, -28
  ret i32 %v1_b6f6
}

define i32 @function_b702(i32 %arg1) local_unnamed_addr {
dec_label_pc_b702:
  %v0_b702 = load i32, i32* @ebp, align 4
  %v1_b702 = add i32 %v0_b702, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_b702, i32* @ebp, align 4
  %v2_b703 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_b703 = load i32, i32* @edi, align 4
  %v4_b703 = inttoptr i32 %v3_b703 to i8*
  store i8 %v2_b703, i8* %v4_b703, align 1
  %v0_b704 = load i32, i32* @eax, align 4
  %v1_b707 = call i32 @function_fb80(i32 %v0_b704)
  %v0_b70c = load i32, i32* @ebx, align 4
  store i32 %v0_b70c, i32* @eax, align 4
  %v0_b70e = load i32, i32* @ebp, align 4
  %v1_b70e = add i32 %v0_b70e, -12
  %v2_b70e = inttoptr i32 %v1_b70e to i32*
  %v3_b70e = load i32, i32* %v2_b70e, align 4
  %v1_b711 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b711 = icmp eq i32 %v1_b711, %v3_b70e
  br i1 %v3_b711, label %bb, label %dec_label_pc_b71e

bb:                                               ; preds = %dec_label_pc_b702
  %v1_b718 = call i32 @function_b7c1()
  store i32 %v1_b718, i32* @eax, align 4
  br label %dec_label_pc_b71e

dec_label_pc_b71e:                                ; preds = %bb, %dec_label_pc_b702
  %v0_b71e = call i32 @function_b7bc()
  ret i32 %v0_b71e
}

define i32 @function_b732() local_unnamed_addr {
dec_label_pc_b732:
  %v0_b732 = call i32 @function_b774()
  ret i32 %v0_b732
}

define i32 @function_b734() local_unnamed_addr {
dec_label_pc_b734:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_b734 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_b734, i32* @esi, align 4
  %v0_b736 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_b736, i32* @ebx, align 4
  %v0_b738 = load i32, i32* @ebp, align 4
  %v1_b738 = add i32 %v0_b738, -64
  store i32 %v1_b738, i32* @eax, align 4
  %v1_b73e = call i32 @function_fb80(i32 %v1_b738)
  %v0_b743 = load i32, i32* @esi, align 4
  store i32 %v0_b743, i32* %eax.global-to-local, align 4
  %v0_b745 = load i32, i32* @ebx, align 4
  store i32 %v0_b745, i32* %edx.global-to-local, align 4
  %v10_b74b = icmp eq i32 %v0_b745, 2
  br i1 %v10_b74b, label %dec_label_pc_b756, label %dec_label_pc_b750

dec_label_pc_b750:                                ; preds = %dec_label_pc_b734
  %v0_b754 = call i32 @function_b774()
  store i32 %v0_b754, i32* %eax.global-to-local, align 4
  ret i32 %v0_b754

dec_label_pc_b756:                                ; preds = %dec_label_pc_b734
  %v1_b75e = load i32, i32* @ebp, align 4
  %v2_b75e = add i32 %v1_b75e, -16
  %v3_b75e = inttoptr i32 %v2_b75e to i32*
  store i32 %v0_b743, i32* %v3_b75e, align 4
  store i32 0, i32* @ebx, align 4
  %v1_b76b = call i32 @function_b6eb(i32 %v0_b743)
  store i32 %v1_b76b, i32* %eax.global-to-local, align 4
  ret i32 %v1_b76b

; uselistorder directives
  uselistorder i32 %v0_b743, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_b6eb, { 1, 0 }
  uselistorder i32 ()* @function_b774, { 1, 0 }
}

define i32 @function_b774() local_unnamed_addr {
dec_label_pc_b774:
  %v0_b774 = load i32, i32* @ebp, align 4
  %v1_b774 = add i32 %v0_b774, -24
  store i32 %v1_b774, i32* @eax, align 4
  %v1_b77a = call i32 @function_12b12(i32 %v1_b774)
  %v0_b77f = call i32 @function_b785()
  ret i32 %v0_b77f

; uselistorder directives
  uselistorder i32 (i32)* @function_12b12, { 1, 0 }
}

define i32 @function_b781() local_unnamed_addr {
dec_label_pc_b781:
  %eax.global-to-local = alloca i32, align 4
  %v0_b781 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b781
}

define i32 @function_b785() local_unnamed_addr {
dec_label_pc_b785:
  %v0_b785 = load i32, i32* @ebp, align 4
  %v1_b785 = add i32 %v0_b785, -28
  %v1_b790 = call i32 @function_b796(i32 %v1_b785)
  ret i32 %v1_b790
}

define i32 @function_b792() local_unnamed_addr {
dec_label_pc_b792:
  %eax.global-to-local = alloca i32, align 4
  %v0_b792 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b792
}

define i32 @function_b796(i32 %arg1) local_unnamed_addr {
dec_label_pc_b796:
  %v0_b796 = load i32, i32* @ebp, align 4
  %v1_b796 = add i32 %v0_b796, -92
  store i32 %v1_b796, i32* @eax, align 4
  %v1_b79c = call i32 @function_fb80(i32 %v1_b796)
  %v0_b7a1 = load i32, i32* @esi, align 4
  ret i32 %v0_b7a1

; uselistorder directives
  uselistorder i32 (i32)* @function_fb80, { 1, 2, 0 }
}

define i32 @function_b7bc() local_unnamed_addr {
dec_label_pc_b7bc:
  %v0_b7bc = load i32, i32* @eax, align 4
  ret i32 %v0_b7bc
}

define i32 @function_b7c1() local_unnamed_addr {
dec_label_pc_b7c1:
  %v0_b7c1 = load i32, i32* @ebp, align 4
  %v1_b7c6 = inttoptr i32 %v0_b7c1 to i32*
  %v2_b7c6 = load i32, i32* %v1_b7c6, align 4
  store i32 %v2_b7c6, i32* @ebp, align 4
  %v0_b7c7 = load i32, i32* @eax, align 4
  ret i32 %v0_b7c7
}

define i32 @_ZN8CLevelDB5WriteIc7CBigNumEEbRKT_RKT0_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_b7c8:
  %stack_var_-20 = alloca i32, align 4
  %v2_b7f3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_b7f3, i32* @eax, align 4
  %v1_b7f9 = call i32 @function_12eb0(i32 %v2_b7f3)
  store i32 %v2_b7f3, i32* @eax, align 4
  %v3_b812 = call i32 @function_1b36e(i32 %v2_b7f3, i32 %arg2, i32 %arg3)
  store i32 %v2_b7f3, i32* @eax, align 4
  %v1_b839 = call i32 @function_12ee6(i32 %v2_b7f3)
  %v0_b83e = load i32, i32* @ebx, align 4
  store i32 %v0_b83e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b878

bb:                                               ; preds = %dec_label_pc_b7c8
  %v1_b84a = call i32 @function_b87d()
  br label %dec_label_pc_b878

dec_label_pc_b878:                                ; preds = %dec_label_pc_b7c8, %bb
  %v0_b84c = phi i32 [ %v0_b83e, %dec_label_pc_b7c8 ], [ %v1_b84a, %bb ]
  ret i32 %v0_b84c

; uselistorder directives
  uselistorder label %dec_label_pc_b878, { 1, 0 }
}

define i32 @function_b84e() local_unnamed_addr {
dec_label_pc_b84e:
  %eax.global-to-local = alloca i32, align 4
  %v0_b84e = load i32, i32* %eax.global-to-local, align 4
  %v0_b852 = load i32, i32* @ebp, align 4
  %v1_b852 = add i32 %v0_b852, -16
  store i32 %v1_b852, i32* @eax, align 4
  %v1_b858 = call i32 @function_12ee6(i32 %v1_b852)
  store i32 %v0_b84e, i32* %eax.global-to-local, align 4
  ret i32 %v0_b84e

; uselistorder directives
  uselistorder i32 %v0_b84e, { 1, 0 }
  uselistorder i32 (i32)* @function_12ee6, { 1, 0 }
}

define i32 @function_b87d() local_unnamed_addr {
dec_label_pc_b87d:
  %v0_b883 = load i32, i32* @eax, align 4
  ret i32 %v0_b883
}

define i32 @_ZSt9make_pairIciESt4pairIT_T0_ES1_S2_(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b884:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i8, align 1
  store i8 %arg2, i8* %stack_var_-36, align 1
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v2_b8a7 = ptrtoint i32* %stack_var_-40 to i32
  %v2_b8ae = ptrtoint i8* %stack_var_-36 to i32
  store i32 %arg1, i32* @eax, align 4
  %v3_b8bb = call i32 @function_1b5be(i32 %arg1, i32 %v2_b8ae, i32 %v2_b8a7)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN8CLevelDB5WriteISt4pairIciE14CBlockFileInfoEEbRKT_RKT0_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_b8d8:
  %stack_var_-20 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v2_b903 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_b903, i32* @eax, align 4
  %v1_b909 = call i32 @function_12fc0(i32 %v2_b903)
  store i32 %v2_b903, i32* @eax, align 4
  %v3_b922 = call i32 @function_1b65e(i32 %v2_b903, i32 %arg2, i32 %arg3)
  ret i32 %arg1
}

define i32 @function_b940() local_unnamed_addr {
dec_label_pc_b940:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_b940 = load i32, i32* %ecx.global-to-local, align 4
  %v1_b940 = add i32 %v0_b940, -263877181
  %v2_b940 = inttoptr i32 %v1_b940 to i32*
  %v3_b940 = load i32, i32* %v2_b940, align 4
  %v4_b940 = sub i32 %v3_b940, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_b940, i32* %v2_b940, align 4
  %v0_b946 = load i32, i32* %eax.global-to-local, align 4
  %v0_b94e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_b94e, i32* @eax, align 4
  %v0_b950 = load i32, i32* %ebp.global-to-local, align 4
  %v1_b950 = add i32 %v0_b950, -12
  %v2_b950 = inttoptr i32 %v1_b950 to i32*
  %v3_b950 = load i32, i32* %v2_b950, align 4
  %v1_b953 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_b953 = icmp eq i32 %v1_b953, %v3_b950
  br i1 %v3_b953, label %bb, label %dec_label_pc_b988

bb:                                               ; preds = %dec_label_pc_b940
  %v2_b95a = call i32 @function_b98d(i32 %v0_b946)
  store i32 %v2_b95a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_b988

dec_label_pc_b988:                                ; preds = %dec_label_pc_b940, %bb
  %v0_b95c = phi i32 [ %v0_b94e, %dec_label_pc_b940 ], [ %v2_b95a, %bb ]
  ret i32 %v0_b95c

; uselistorder directives
  uselistorder label %dec_label_pc_b988, { 1, 0 }
}

define i32 @function_b95e() local_unnamed_addr {
dec_label_pc_b95e:
  %eax.global-to-local = alloca i32, align 4
  %v0_b95e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b95e
}

define i32 @function_b98d(i32 %arg1) local_unnamed_addr {
dec_label_pc_b98d:
  %v0_b993 = load i32, i32* @eax, align 4
  ret i32 %v0_b993
}

define i32 @_ZN8CLevelDB4ReadISt4pairIciE14CBlockFileInfoEEbRKT_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b994:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v2_b9cc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_b9cc, i32* @eax, align 4
  %v3_b9d2 = call i32 @function_fe70(i32 %v2_b9cc, i32 2, i32 1020000)
  %v2_b9e4 = call i32 @unknown_1b8ae(i32 %v2_b9cc, i32 %arg2)
  %v2_b9f3 = call i32 @function_101d2(i32 %v2_b9cc, i32 %v2_b9e4)
  store i32 %v2_b9cc, i32* @eax, align 4
  %v2_ba05 = call i32 @function_1b8fe(i32 %v2_b9cc, i32 %arg2)
  store i32 %v2_b9cc, i32* @eax, align 4
  %v1_ba10 = call i32 @function_10194(i32 %v2_b9cc)
  store i32 %v2_b9cc, i32* @eax, align 4
  %v2_ba25 = call i32 @function_1021c(i32 %v2_b9cc, i32 0)
  %v0_ba2a = load i32, i32* @ebx, align 4
  %v2_ba32 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_ba32, i32* @eax, align 4
  %v3_ba38 = call i32 @function_12e86(i32 %v2_ba32, i32 %v2_ba25, i32 %v0_ba2a)
  %v2_ba61 = ptrtoint i32* %stack_var_-28 to i32
  %v1_ba8d = xor i32 %v2_ba61, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_ba8d = trunc i32 %v1_ba8d to i8
  %v5_ba90 = icmp eq i8 %v4_ba8d, 0
  br i1 %v5_ba90, label %bb, label %dec_label_pc_ba94

bb:                                               ; preds = %dec_label_pc_b994
  %v1_ba4b = add i32 %arg1, 68
  %v2_ba4b = inttoptr i32 %v1_ba4b to i32*
  %v3_ba5e = load i32, i32* %v2_ba4b, align 4
  %v1_ba58 = add i32 %arg1, 48
  %v2_ba3d = ptrtoint i32* %stack_var_-32 to i32
  %v7_ba92 = call i32 @function_baf3(i32 %v2_ba61, i32 %v2_ba61, i32 %v3_ba5e, i32 %v1_ba58, i32 %v2_ba32, i32 %v2_ba3d)
  br label %dec_label_pc_ba94

dec_label_pc_ba94:                                ; preds = %bb, %dec_label_pc_b994
  %v4_ba9f = trunc i32 %v2_ba61 to i8
  %v5_ba9f = icmp eq i8 %v4_ba9f, 0
  br i1 %v5_ba9f, label %dec_label_pc_baad, label %dec_label_pc_baa3

dec_label_pc_baa3:                                ; preds = %dec_label_pc_ba94
  store i32 0, i32* @ebx, align 4
  %v1_baa8 = call i32 @function_bb5d(i32 %v2_ba61)
  ret i32 %v1_baa8

dec_label_pc_baad:                                ; preds = %dec_label_pc_ba94
  %v2_baad = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_baad

; uselistorder directives
  uselistorder i32 %v2_ba61, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_baf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_baf3:
  %v0_baf3 = load i32, i32* @ebp, align 4
  %v1_baf3 = add i32 %v0_baf3, -28
  ret i32 %v1_baf3
}

define i32 @function_baff() local_unnamed_addr {
dec_label_pc_baff:
  %eax.global-to-local = alloca i32, align 4
  %v0_baff = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_baff
}

define i32 @function_bb0a() local_unnamed_addr {
dec_label_pc_bb0a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_bb0a = load i32, i32* %ecx.global-to-local, align 4
  %v3_bb0a = add i32 %v2_bb0a, ptrtoint (i8** @global_var_1.1176 to i32)
  %v18_bb0a = inttoptr i32 %v2_bb0a to i32*
  store i32 %v3_bb0a, i32* %v18_bb0a, align 4
  %v0_bb0c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bb0c
}

define i32 @function_bb5d(i32 %arg1) local_unnamed_addr {
dec_label_pc_bb5d:
  %v0_bb5d = load i32, i32* @ebp, align 4
  %v1_bb5d = add i32 %v0_bb5d, -24
  store i32 %v1_bb5d, i32* @eax, align 4
  %v1_bb63 = call i32 @function_12f84(i32 %v1_bb5d)
  %v0_bb68 = load i32, i32* @ebp, align 4
  %v1_bb73 = add i32 %v0_bb68, -92
  store i32 %v1_bb73, i32* @eax, align 4
  %v1_bb79 = call i32 @function_fff2(i32 %v1_bb73)
  %v0_bb7e = load i32, i32* @ebx, align 4
  store i32 %v0_bb7e, i32* @eax, align 4
  %v0_bb80 = load i32, i32* @ebp, align 4
  %v1_bb80 = add i32 %v0_bb80, -12
  %v2_bb80 = inttoptr i32 %v1_bb80 to i32*
  %v3_bb80 = load i32, i32* %v2_bb80, align 4
  %v1_bb83 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_bb83 = icmp eq i32 %v1_bb83, %v3_bb80
  br i1 %v3_bb83, label %bb, label %dec_label_pc_bb90

bb:                                               ; preds = %dec_label_pc_bb5d
  %v1_bb8a = call i32 @function_bc33()
  store i32 %v1_bb8a, i32* @eax, align 4
  br label %dec_label_pc_bb90

dec_label_pc_bb90:                                ; preds = %bb, %dec_label_pc_bb5d
  %v0_bb90 = call i32 @function_bc2e()
  ret i32 %v0_bb90
}

define i32 @function_bb95() local_unnamed_addr {
dec_label_pc_bb95:
  %v0_bb99 = load i32, i32* @ebp, align 4
  %v1_bb99 = add i32 %v0_bb99, -20
  %v1_bba4 = call i32 @function_bbe6(i32 %v1_bb99)
  ret i32 %v1_bba4
}

define i32 @function_bba6() local_unnamed_addr {
dec_label_pc_bba6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_bba6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_bba6, i32* %esi.global-to-local, align 4
  %v0_bba8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_bba8, i32* %ebx.global-to-local, align 4
  %v0_bbaa = load i32, i32* @ebp, align 4
  %v1_bbaa = add i32 %v0_bbaa, -64
  store i32 %v1_bbaa, i32* @eax, align 4
  %v1_bbb0 = call i32 @function_fff2(i32 %v1_bbaa)
  %v0_bbb5 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_bbb5, i32* %eax.global-to-local, align 4
  %v0_bbb7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_bbb7, i32* %edx.global-to-local, align 4
  %v10_bbbd = icmp eq i32 %v0_bbb7, 2
  br i1 %v10_bbbd, label %dec_label_pc_bbc8, label %dec_label_pc_bbc2

dec_label_pc_bbc2:                                ; preds = %dec_label_pc_bba6
  %v1_bbc6 = call i32 @function_bbe6(i32 %v1_bbaa)
  store i32 %v1_bbc6, i32* %eax.global-to-local, align 4
  ret i32 %v1_bbc6

dec_label_pc_bbc8:                                ; preds = %dec_label_pc_bba6
  %v1_bbd0 = load i32, i32* @ebp, align 4
  %v2_bbd0 = add i32 %v1_bbd0, -16
  %v3_bbd0 = inttoptr i32 %v2_bbd0 to i32*
  store i32 %v0_bbb5, i32* %v3_bbd0, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_bbd3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bbd3

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_bbe6, { 1, 0 }
}

define i32 @function_bbdd() local_unnamed_addr {
dec_label_pc_bbdd:
  %v1_bbdd = call i32 @function_bb5d(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_bbdd

; uselistorder directives
  uselistorder i32 (i32)* @function_bb5d, { 1, 0 }
}

define i32 @function_bbe6(i32 %arg1) local_unnamed_addr {
dec_label_pc_bbe6:
  %v0_bbe6 = load i32, i32* @ebp, align 4
  %v1_bbe6 = add i32 %v0_bbe6, -24
  store i32 %v1_bbe6, i32* @eax, align 4
  %v1_bbec = call i32 @function_12f84(i32 %v1_bbe6)
  %v0_bbf1 = call i32 @function_bbf7()
  ret i32 %v0_bbf1

; uselistorder directives
  uselistorder i32 (i32)* @function_12f84, { 1, 0 }
}

define i32 @function_bbf3() local_unnamed_addr {
dec_label_pc_bbf3:
  %eax.global-to-local = alloca i32, align 4
  %v0_bbf3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bbf3
}

define i32 @function_bbf7() local_unnamed_addr {
dec_label_pc_bbf7:
  %v0_bbf7 = load i32, i32* @ebp, align 4
  %v1_bbf7 = add i32 %v0_bbf7, -28
  ret i32 %v1_bbf7
}

define i32 @function_bc02() local_unnamed_addr {
dec_label_pc_bc02:
  %v0_bc02 = call i32 @function_bc08()
  ret i32 %v0_bc02
}

define i32 @function_bc04() local_unnamed_addr {
dec_label_pc_bc04:
  %eax.global-to-local = alloca i32, align 4
  %v0_bc04 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bc04
}

define i32 @function_bc08() local_unnamed_addr {
dec_label_pc_bc08:
  %v0_bc08 = load i32, i32* @ebp, align 4
  %v1_bc08 = add i32 %v0_bc08, -92
  store i32 %v1_bc08, i32* @eax, align 4
  %v1_bc0e = call i32 @function_fff2(i32 %v1_bc08)
  %v0_bc13 = load i32, i32* @esi, align 4
  ret i32 %v0_bc13

; uselistorder directives
  uselistorder i32 (i32)* @function_fff2, { 2, 1, 0 }
}

define i32 @function_bc2e() local_unnamed_addr {
dec_label_pc_bc2e:
  %v0_bc2e = load i32, i32* @eax, align 4
  ret i32 %v0_bc2e
}

define i32 @function_bc33() local_unnamed_addr {
dec_label_pc_bc33:
  %v0_bc39 = load i32, i32* @eax, align 4
  ret i32 %v0_bc39
}

define i32 @_ZN8CLevelDB5WriteIciEEbRKT_RKT0_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_bc3a:
  %stack_var_-20 = alloca i32, align 4
  %v2_bc65 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_bc65, i32* @eax, align 4
  %v1_bc6b = call i32 @function_13322(i32 %v2_bc65)
  %v3_bc84 = call i32 @unknown_1bc58(i32 %v2_bc65, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_bc65, i32* @eax, align 4
  %v1_bcab = call i32 @function_13358(i32 %v2_bc65)
  %v0_bcb0 = load i32, i32* @ebx, align 4
  store i32 %v0_bcb0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bcbe

bb:                                               ; preds = %dec_label_pc_bc3a
  %v1_bcbc = call i32 @function_bcef()
  store i32 %v1_bcbc, i32* @eax, align 4
  br label %dec_label_pc_bcbe

dec_label_pc_bcbe:                                ; preds = %bb, %dec_label_pc_bc3a
  %v0_bcbe = call i32 @function_bcea()
  ret i32 %v0_bcbe
}

define i32 @function_bcc0() local_unnamed_addr {
dec_label_pc_bcc0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_bcc0 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_bcc0, i32* %esi.global-to-local, align 4
  %v0_bcc2 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_bcc2, i32* @ebx, align 4
  %v0_bcc4 = load i32, i32* @ebp, align 4
  %v1_bcc4 = add i32 %v0_bcc4, -16
  store i32 %v1_bcc4, i32* @eax, align 4
  %v1_bcca = call i32 @function_13358(i32 %v1_bcc4)
  %v0_bccf = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_bccf, i32* @eax, align 4
  %v0_bcd1 = load i32, i32* @ebx, align 4
  store i32 %v0_bcd1, i32* %edx.global-to-local, align 4
  %v10_bcd5 = icmp eq i32 %v0_bcd1, -1
  br i1 %v10_bcd5, label %bb, label %dec_label_pc_bcda

bb:                                               ; preds = %dec_label_pc_bcc0
  %v1_bcd8 = call i32 @function_bce2()
  store i32 %v1_bcd8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_bcda

dec_label_pc_bcda:                                ; preds = %bb, %dec_label_pc_bcc0
  %v3_bcda = phi i32 [ %v1_bcd8, %bb ], [ %v0_bccf, %dec_label_pc_bcc0 ]
  ret i32 %v3_bcda

; uselistorder directives
  uselistorder i32 (i32)* @function_13358, { 1, 0 }
}

define i32 @function_bce2() local_unnamed_addr {
dec_label_pc_bce2:
  %v3_bce2 = load i32, i32* @eax, align 4
  ret i32 %v3_bce2
}

define i32 @function_bcea() local_unnamed_addr {
dec_label_pc_bcea:
  %v0_bcea = load i32, i32* @eax, align 4
  ret i32 %v0_bcea
}

define i32 @function_bcef() local_unnamed_addr {
dec_label_pc_bcef:
  %v0_bcf5 = load i32, i32* @eax, align 4
  ret i32 %v0_bcf5
}

define i32 @_ZN8CLevelDB5WriteIccEEbRKT_RKT0_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_bcf6:
  %stack_var_-20 = alloca i32, align 4
  %v2_bd21 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_bd21, i32* @eax, align 4
  %v1_bd27 = call i32 @function_133de(i32 %v2_bd21)
  %v3_bd40 = call i32 @unknown_1bea8(i32 %v2_bd21, i32 %arg2, i32 %arg3)
  store i32 %v2_bd21, i32* @eax, align 4
  %v1_bd67 = call i32 @function_13414(i32 %v2_bd21)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_bd7a

bb:                                               ; preds = %dec_label_pc_bcf6
  %v1_bd78 = call i32 @function_bdab()
  store i32 %v1_bd78, i32* @eax, align 4
  br label %dec_label_pc_bd7a

dec_label_pc_bd7a:                                ; preds = %bb, %dec_label_pc_bcf6
  %v0_bd7a = call i32 @function_bda6()
  ret i32 %v0_bd7a
}

define i32 @function_bd7c() local_unnamed_addr {
dec_label_pc_bd7c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_bd7c = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_bd7c, i32* %esi.global-to-local, align 4
  %v0_bd7e = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_bd7e, i32* %ebx.global-to-local, align 4
  %v0_bd80 = load i32, i32* %ebp.global-to-local, align 4
  %v1_bd80 = add i32 %v0_bd80, -16
  store i32 %v1_bd80, i32* @eax, align 4
  %v1_bd86 = call i32 @function_13414(i32 %v1_bd80)
  %v0_bd8b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_bd8b, i32* @eax, align 4
  %v0_bd8d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_bd8d, i32* %edx.global-to-local, align 4
  %v10_bd91 = icmp eq i32 %v0_bd8d, -1
  br i1 %v10_bd91, label %bb, label %dec_label_pc_bd96

bb:                                               ; preds = %dec_label_pc_bd7c
  %v1_bd94 = call i32 @function_bd9e()
  store i32 %v1_bd94, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_bd96

dec_label_pc_bd96:                                ; preds = %bb, %dec_label_pc_bd7c
  %v3_bd96 = phi i32 [ %v1_bd94, %bb ], [ %v0_bd8b, %dec_label_pc_bd7c ]
  ret i32 %v3_bd96

; uselistorder directives
  uselistorder i32 (i32)* @function_13414, { 1, 0 }
}

define i32 @function_bd9e() local_unnamed_addr {
dec_label_pc_bd9e:
  %v0_bda1 = load i32, i32* @eax, align 4
  ret i32 %v0_bda1
}

define i32 @function_bda6() local_unnamed_addr {
dec_label_pc_bda6:
  %v0_bda6 = load i32, i32* @eax, align 4
  ret i32 %v0_bda6
}

define i32 @function_bdab() local_unnamed_addr {
dec_label_pc_bdab:
  %v0_bdb1 = load i32, i32* @eax, align 4
  ret i32 %v0_bdb1
}

define i32 @_ZN8CLevelDB5EraseIcEEbRKT_b(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_bdb2:
  %stack_var_-20 = alloca i32, align 4
  %v2_bdd7 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_bdd7, i32* @eax, align 4
  %v1_bddd = call i32 @function_1349a(i32 %v2_bdd7)
  %v2_bdef = call i32 @unknown_1c0f8(i32 %v2_bdd7, i32 %arg2)
  ret i32 %arg1
}

define i32 @function_be0d() local_unnamed_addr {
dec_label_pc_be0d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_be0d = load i32, i32* %ecx.global-to-local, align 4
  %v1_be0d = add i32 %v0_be0d, -263877181
  %v2_be0d = inttoptr i32 %v1_be0d to i32*
  %v3_be0d = load i32, i32* %v2_be0d, align 4
  %v4_be0d = sub i32 %v3_be0d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_be0d, i32* %v2_be0d, align 4
  %v0_be13 = load i32, i32* %eax.global-to-local, align 4
  %v0_be1b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_be1b, i32* @eax, align 4
  %v0_be1d = load i32, i32* %ebp.global-to-local, align 4
  %v1_be1d = add i32 %v0_be1d, -12
  %v2_be1d = inttoptr i32 %v1_be1d to i32*
  %v3_be1d = load i32, i32* %v2_be1d, align 4
  %v1_be20 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_be20 = icmp eq i32 %v1_be20, %v3_be1d
  br i1 %v3_be20, label %bb, label %dec_label_pc_be29

bb:                                               ; preds = %dec_label_pc_be0d
  %v2_be27 = call i32 @function_be5a(i32 %v0_be13)
  store i32 %v2_be27, i32* @eax, align 4
  br label %dec_label_pc_be29

dec_label_pc_be29:                                ; preds = %bb, %dec_label_pc_be0d
  %v0_be29 = call i32 @function_be55()
  store i32 %v0_be29, i32* %eax.global-to-local, align 4
  ret i32 %v0_be29
}

define i32 @function_be2b() local_unnamed_addr {
dec_label_pc_be2b:
  %eax.global-to-local = alloca i32, align 4
  %v0_be2b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_be2b
}

define i32 @function_be55() local_unnamed_addr {
dec_label_pc_be55:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_be5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_be5a:
  %v0_be60 = load i32, i32* @eax, align 4
  ret i32 %v0_be60
}

define i32 @_ZN8CLevelDB6ExistsIcEEbRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_be62:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_be91 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_be91, i32* @eax, align 4
  %v3_be97 = call i32 @function_1033e(i32 %v2_be91, i32 2, i32 1020000)
  store i32 %v2_be91, i32* @eax, align 4
  %v2_beb8 = call i32 @function_106a0(i32 %v2_be91, i32 %v2_be91)
  store i32 %v2_be91, i32* @eax, align 4
  %v2_beca = call i32 @function_1b404(i32 %v2_be91, i32 %arg2)
  store i32 %v2_be91, i32* @eax, align 4
  %v1_bed5 = call i32 @function_10662(i32 %v2_be91)
  store i32 %v2_be91, i32* @eax, align 4
  %v2_beea = call i32 @function_106ea(i32 %v2_be91, i32 0)
  %v2_bef7 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_bef7, i32* @eax, align 4
  %v3_befd = call i32 @function_13354(i32 %v2_bef7, i32 %v2_beea, i32 %v1_bed5)
  %v2_bf02 = ptrtoint i32* %stack_var_-28 to i32
  ret i32 %v2_bf02

; uselistorder directives
  uselistorder i32 %v2_be91, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10 }
}

define i32 @function_bf0c() local_unnamed_addr {
dec_label_pc_bf0c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_bf0c = load i32, i32* %ebx.global-to-local, align 4
  %v1_bf0c = add i32 %v0_bf0c, 1082897477
  %v2_bf0c = inttoptr i32 %v1_bf0c to i32*
  %v3_bf0c = load i32, i32* %v2_bf0c, align 4
  %v4_bf0c = add i32 %v3_bf0c, -1
  store i32 %v4_bf0c, i32* %v2_bf0c, align 4
  %v0_bf15 = load i32, i32* %eax.global-to-local, align 4
  %v1_bf15 = add i32 %v0_bf15, 20
  store i32 %v1_bf15, i32* %eax.global-to-local, align 4
  %v1_bf18 = inttoptr i32 %v1_bf15 to i32*
  %v2_bf18 = load i32, i32* %v1_bf18, align 4
  store i32 %v2_bf18, i32* %ebx.global-to-local, align 4
  %v0_bf1a = load i32, i32* @ebp, align 4
  %v1_bf1a = add i32 %v0_bf1a, -76
  %v2_bf1a = inttoptr i32 %v1_bf1a to i32*
  %v3_bf1a = load i32, i32* %v2_bf1a, align 4
  store i32 %v3_bf1a, i32* %eax.global-to-local, align 4
  %v3_bf20 = load i32, i32* %v2_bf1a, align 4
  store i32 %v3_bf20, i32* %eax.global-to-local, align 4
  %v1_bf23 = add i32 %v3_bf20, 68
  %v2_bf23 = inttoptr i32 %v1_bf23 to i32*
  %v3_bf23 = load i32, i32* %v2_bf23, align 4
  %v1_bf26 = add i32 %v0_bf1a, -20
  %v1_bf52 = xor i32 %v1_bf26, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_bf52 = trunc i32 %v1_bf52 to i8
  store i32 %v1_bf52, i32* @eax, align 4
  %v5_bf55 = icmp eq i8 %v4_bf52, 0
  br i1 %v5_bf55, label %bb, label %dec_label_pc_bf59

bb:                                               ; preds = %dec_label_pc_bf0c
  %v1_bf30 = add i32 %v0_bf1a, -32
  %v1_bf1d = add i32 %v3_bf1a, 48
  %v1_bf29 = add i32 %v0_bf1a, -24
  %v7_bf57 = call i32 @function_bfb5(i32 %v1_bf26, i32 %v1_bf26, i32 %v3_bf23, i32 %v1_bf1d, i32 %v1_bf30, i32 %v1_bf29)
  store i32 %v7_bf57, i32* %eax.global-to-local, align 4
  %v0_bf59.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_bf59

dec_label_pc_bf59:                                ; preds = %bb, %dec_label_pc_bf0c
  %v0_bf59 = phi i32 [ %v0_bf59.pre, %bb ], [ %v0_bf1a, %dec_label_pc_bf0c ]
  %v1_bf59 = add i32 %v0_bf59, -20
  store i32 %v1_bf59, i32* @eax, align 4
  %v1_bf5f = call i32 @function_134c6(i32 %v1_bf59)
  store i32 %v1_bf5f, i32* %eax.global-to-local, align 4
  %v4_bf64 = trunc i32 %v1_bf5f to i8
  %v5_bf64 = icmp eq i8 %v4_bf64, 0
  br i1 %v5_bf64, label %dec_label_pc_bf6f, label %dec_label_pc_bf68

dec_label_pc_bf68:                                ; preds = %dec_label_pc_bf59
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_bf6d = call i32 @function_bfba()
  store i32 %v0_bf6d, i32* %eax.global-to-local, align 4
  ret i32 %v0_bf6d

dec_label_pc_bf6f:                                ; preds = %dec_label_pc_bf59
  %v0_bf6f = load i32, i32* @ebp, align 4
  %v1_bf6f = add i32 %v0_bf6f, -16
  store i32 %v1_bf6f, i32* %eax.global-to-local, align 4
  ret i32 %v1_bf6f

; uselistorder directives
  uselistorder i32 %v0_bf1a, { 0, 2, 3, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7 }
}

define i32 @function_bfb5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_bfb5:
  %v0_bfb5 = load i32, i32* @eax, align 4
  ret i32 %v0_bfb5
}

define i32 @function_bfba() local_unnamed_addr {
dec_label_pc_bfba:
  %v0_bfba = load i32, i32* @ebp, align 4
  %v1_bfc5 = add i32 %v0_bfba, -24
  ret i32 %v1_bfc5
}

define i32 @function_bfcf() local_unnamed_addr {
dec_label_pc_bfcf:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_bfcf = load i32, i32* @ebp, align 4
  %v1_bfcf = add i32 %v0_bfcf, 76137541
  %v2_bfcf = inttoptr i32 %v1_bfcf to i32*
  %v3_bfcf = load i32, i32* %v2_bfcf, align 4
  %v4_bfcf = add i32 %v3_bfcf, -1
  store i32 %v4_bfcf, i32* %v2_bfcf, align 4
  %v0_bfd5 = load i32, i32* %eax.global-to-local, align 4
  %v1_bfd5 = trunc i32 %v0_bfd5 to i8
  %v2_bfd5 = and i8 %v1_bfd5, -24
  %v8_bfd5 = zext i8 %v2_bfd5 to i32
  %v10_bfd5 = and i32 %v0_bfd5, -256
  %v11_bfd5 = or i32 %v8_bfd5, %v10_bfd5
  store i32 %v11_bfd5, i32* %eax.global-to-local, align 4
  %v1_bfd9 = inttoptr i32 %v11_bfd5 to i8*
  %v2_bfd9 = load i8, i8* %v1_bfd9, align 8
  %v5_bfd9 = add i8 %v2_bfd9, %v2_bfd5
  store i8 %v5_bfd9, i8* %v1_bfd9, align 8
  %v0_bfdb = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_bfdb, i32* @eax, align 4
  %v0_bfdd = load i32, i32* @ebp, align 4
  %v1_bfdd = add i32 %v0_bfdd, -12
  %v2_bfdd = inttoptr i32 %v1_bfdd to i32*
  %v3_bfdd = load i32, i32* %v2_bfdd, align 4
  %v1_bfe0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_bfe0 = icmp eq i32 %v1_bfe0, %v3_bfdd
  br i1 %v3_bfe0, label %bb, label %dec_label_pc_bfe9

bb:                                               ; preds = %dec_label_pc_bfcf
  %v1_bfe7 = call i32 @function_c04d()
  store i32 %v1_bfe7, i32* @eax, align 4
  br label %dec_label_pc_bfe9

dec_label_pc_bfe9:                                ; preds = %bb, %dec_label_pc_bfcf
  %v0_bfe9 = call i32 @function_c048()
  store i32 %v0_bfe9, i32* %eax.global-to-local, align 4
  ret i32 %v0_bfe9
}

define i32 @function_bffa() local_unnamed_addr {
dec_label_pc_bffa:
  %v0_bffa = call i32 @function_c000()
  ret i32 %v0_bffa
}

define i32 @function_bffc() local_unnamed_addr {
dec_label_pc_bffc:
  %eax.global-to-local = alloca i32, align 4
  %v0_bffc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bffc
}

define i32 @function_c000() local_unnamed_addr {
dec_label_pc_c000:
  %v0_c000 = load i32, i32* @ebp, align 4
  %v1_c000 = add i32 %v0_c000, -20
  %v1_c00b = call i32 @function_c011(i32 %v1_c000)
  ret i32 %v1_c00b
}

define i32 @function_c00d() local_unnamed_addr {
dec_label_pc_c00d:
  %eax.global-to-local = alloca i32, align 4
  %v0_c00d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c00d
}

define i32 @function_c011(i32 %arg1) local_unnamed_addr {
dec_label_pc_c011:
  %v0_c011 = load i32, i32* @ebp, align 4
  %v1_c011 = add i32 %v0_c011, -24
  %v1_c01c = call i32 @function_c022(i32 %v1_c011)
  ret i32 %v1_c01c
}

define i32 @function_c01e() local_unnamed_addr {
dec_label_pc_c01e:
  %eax.global-to-local = alloca i32, align 4
  %v0_c01e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c01e
}

define i32 @function_c022(i32 %arg1) local_unnamed_addr {
dec_label_pc_c022:
  %v0_c022 = load i32, i32* @ebp, align 4
  %v0_c02d = load i32, i32* @esi, align 4
  store i32 %v0_c02d, i32* @eax, align 4
  %v0_c02f = load i32, i32* @ebx, align 4
  %v10_c033 = icmp eq i32 %v0_c02f, -1
  br i1 %v10_c033, label %bb, label %dec_label_pc_c038

bb:                                               ; preds = %dec_label_pc_c022
  %v1_c022 = add i32 %v0_c022, -60
  %v2_c036 = call i32 @function_c040(i32 %v1_c022)
  br label %dec_label_pc_c038

dec_label_pc_c038:                                ; preds = %bb, %dec_label_pc_c022
  %v0_c038 = phi i32 [ %v2_c036, %bb ], [ %v0_c02d, %dec_label_pc_c022 ]
  ret i32 %v0_c038
}

define i32 @function_c040(i32 %arg1) local_unnamed_addr {
dec_label_pc_c040:
  %v0_c043 = load i32, i32* @eax, align 4
  ret i32 %v0_c043
}

define i32 @function_c048() local_unnamed_addr {
dec_label_pc_c048:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c04d() local_unnamed_addr {
dec_label_pc_c04d:
  %v0_c053 = load i32, i32* @eax, align 4
  ret i32 %v0_c053
}

define i32 @_ZN8CLevelDB4ReadIciEEbRKT_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c054:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v2_c08c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_c08c, i32* @eax, align 4
  %v3_c092 = call i32 @function_10530(i32 %v2_c08c, i32 2, i32 1020000)
  store i32 %v2_c08c, i32* @eax, align 4
  %v2_c0a4 = call i32 @function_1b5a0(i32 %v2_c08c, i32 %arg2)
  store i32 %v2_c08c, i32* @eax, align 4
  %v2_c0b3 = call i32 @function_10892(i32 %v2_c08c, i32 %v2_c0a4)
  %v2_c0c5 = call i32 @unknown_1b5f6(i32 %v2_c08c, i32 %arg2)
  store i32 %v2_c08c, i32* @eax, align 4
  %v1_c0d0 = call i32 @function_10854(i32 %v2_c08c)
  store i32 %v1_c0d0, i32* @ebx, align 4
  store i32 %v2_c08c, i32* @eax, align 4
  %v2_c0e5 = call i32 @function_108dc(i32 %v2_c08c, i32 0)
  %v0_c0ea = load i32, i32* @ebx, align 4
  %v2_c0f2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_c0f2, i32* @eax, align 4
  %v3_c0f8 = call i32 @function_13546(i32 %v2_c0f2, i32 %v2_c0e5, i32 %v0_c0ea)
  %v2_c0fd = ptrtoint i32* %stack_var_-32 to i32
  %v1_c10b = add i32 %arg1, 68
  %v2_c10b = inttoptr i32 %v1_c10b to i32*
  %v1_c118 = add i32 %arg1, 48
  %v3_c11e = load i32, i32* %v2_c10b, align 4
  %v2_c121 = ptrtoint i32* %stack_var_-28 to i32
  %v0_c13f = load i32, i32* @esp, align 4
  %v5_c13f = icmp ult i32 %v0_c13f, 4
  store i1 %v5_c13f, i1* @cf, align 1
  store i32 %v2_c121, i32* @eax, align 4
  %v6_c148 = call i32 @function_13684(i32 %v2_c121, i32 %v2_c121, i32 %v3_c11e, i32 %v1_c118, i32 %v2_c0f2, i32 %v2_c0fd)
  %v1_c14d = xor i32 %v6_c148, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_c14d = trunc i32 %v1_c14d to i8
  %v5_c150 = icmp eq i8 %v4_c14d, 0
  br i1 %v5_c150, label %bb, label %dec_label_pc_c154

bb:                                               ; preds = %dec_label_pc_c054
  %v1_c152 = call i32 @function_c1b3()
  br label %dec_label_pc_c154

dec_label_pc_c154:                                ; preds = %bb, %dec_label_pc_c054
  store i32 %v2_c121, i32* @eax, align 4
  %v1_c15a = call i32 @function_136b8(i32 %v2_c121)
  %v4_c15f = trunc i32 %v1_c15a to i8
  %v5_c15f = icmp eq i8 %v4_c15f, 0
  br i1 %v5_c15f, label %dec_label_pc_c16d, label %dec_label_pc_c163

dec_label_pc_c163:                                ; preds = %dec_label_pc_c154
  ret i32 %v1_c15a

dec_label_pc_c16d:                                ; preds = %dec_label_pc_c154
  %v2_c16d = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_c16d

; uselistorder directives
  uselistorder i32 %v2_c121, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_c1a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_c1a0:
  %v0_c1a8 = load i32, i32* @ebp, align 4
  %v1_c1a8 = add i32 %v0_c1a8, -24
  ret i32 %v1_c1a8
}

define i32 @function_c1b3() local_unnamed_addr {
dec_label_pc_c1b3:
  %v0_c1b3 = load i32, i32* @ebp, align 4
  %v1_c1b3 = add i32 %v0_c1b3, -28
  ret i32 %v1_c1b3
}

define i32 @function_c1bf() local_unnamed_addr {
dec_label_pc_c1bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_c1bf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c1bf
}

define i32 @function_c1ca() local_unnamed_addr {
dec_label_pc_c1ca:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_c1ca = load i32, i32* %ecx.global-to-local, align 4
  %v3_c1ca = add i32 %v2_c1ca, ptrtoint (i8** @global_var_1.1176 to i32)
  %v18_c1ca = inttoptr i32 %v2_c1ca to i32*
  store i32 %v3_c1ca, i32* %v18_c1ca, align 4
  %v0_c1cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c1cc
}

define i32 @function_c1d6() local_unnamed_addr {
dec_label_pc_c1d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c218(i32 %arg1) local_unnamed_addr {
dec_label_pc_c218:
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @ebx, align 4
  %v0_c21d = load i32, i32* @ebp, align 4
  %v1_c21d = add i32 %v0_c21d, -24
  store i32 %v1_c21d, i32* @eax, align 4
  %v1_c223 = call i32 @function_13644(i32 %v1_c21d)
  %v0_c228 = load i32, i32* @ebp, align 4
  %v1_c228 = add i32 %v0_c228, -28
  ret i32 %v1_c228
}

define i32 @function_c232() local_unnamed_addr {
dec_label_pc_c232:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_c232 = load i32, i32* @ebp, align 4
  %v1_c232 = add i32 %v0_c232, 76129349
  %v2_c232 = inttoptr i32 %v1_c232 to i32*
  %v3_c232 = load i32, i32* %v2_c232, align 4
  %v4_c232 = add i32 %v3_c232, -1
  store i32 %v4_c232, i32* %v2_c232, align 4
  %v0_c238 = load i32, i32* %eax.global-to-local, align 4
  %v1_c238 = trunc i32 %v0_c238 to i8
  %v2_c238 = and i8 %v1_c238, -24
  %v3_c238 = icmp eq i8 %v2_c238, 0
  %v8_c238 = zext i8 %v2_c238 to i32
  %v10_c238 = and i32 %v0_c238, -256
  %v11_c238 = or i32 %v8_c238, %v10_c238
  store i32 %v11_c238, i32* %eax.global-to-local, align 4
  br i1 %v3_c238, label %dec_label_pc_c288, label %dec_label_pc_c23c

dec_label_pc_c23c:                                ; preds = %dec_label_pc_c232
  %v1_c23c = inttoptr i32 %v11_c238 to i8*
  %v2_c23c = load i8, i8* %v1_c23c, align 8
  %v5_c23c = add i8 %v2_c23c, %v2_c238
  store i8 %v5_c23c, i8* %v1_c23c, align 8
  %v0_c23e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_c23e, i32* @eax, align 4
  %v0_c240 = load i32, i32* @ebp, align 4
  %v1_c240 = add i32 %v0_c240, -12
  %v2_c240 = inttoptr i32 %v1_c240 to i32*
  %v3_c240 = load i32, i32* %v2_c240, align 4
  %v1_c243 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_c243 = icmp eq i32 %v1_c243, %v3_c240
  br i1 %v3_c243, label %bb, label %dec_label_pc_c250

bb:                                               ; preds = %dec_label_pc_c23c
  %v1_c24a = call i32 @function_c2f3()
  store i32 %v1_c24a, i32* @eax, align 4
  br label %dec_label_pc_c250

dec_label_pc_c250:                                ; preds = %bb, %dec_label_pc_c23c
  %v0_c250 = call i32 @function_c2ee()
  store i32 %v0_c250, i32* %eax.global-to-local, align 4
  ret i32 %v0_c250

dec_label_pc_c288:                                ; preds = %dec_label_pc_c232
  ret i32 %v11_c238

; uselistorder directives
  uselistorder i32 %v11_c238, { 1, 0, 2 }
}

define i32 @function_c29d() local_unnamed_addr {
dec_label_pc_c29d:
  %eax.global-to-local = alloca i32, align 4
  %v0_c29d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c29d
}

define i32 @function_c2a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_c2a6:
  %v0_c2a6 = load i32, i32* @ebp, align 4
  %v1_c2a6 = add i32 %v0_c2a6, -24
  store i32 %v1_c2a6, i32* @eax, align 4
  %v1_c2ac = call i32 @function_13644(i32 %v1_c2a6)
  %v0_c2b1 = call i32 @function_c2b7()
  ret i32 %v0_c2b1

; uselistorder directives
  uselistorder i32 (i32)* @function_13644, { 1, 0 }
}

define i32 @function_c2b3() local_unnamed_addr {
dec_label_pc_c2b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_c2b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c2b3
}

define i32 @function_c2b7() local_unnamed_addr {
dec_label_pc_c2b7:
  %v0_c2b7 = load i32, i32* @ebp, align 4
  %v1_c2b7 = add i32 %v0_c2b7, -28
  ret i32 %v1_c2b7
}

define i32 @function_c2c2() local_unnamed_addr {
dec_label_pc_c2c2:
  %v0_c2c2 = call i32 @function_c2c8()
  ret i32 %v0_c2c2
}

define i32 @function_c2c4() local_unnamed_addr {
dec_label_pc_c2c4:
  %eax.global-to-local = alloca i32, align 4
  %v0_c2c4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c2c4
}

define i32 @function_c2c8() local_unnamed_addr {
dec_label_pc_c2c8:
  %v0_c2d3 = load i32, i32* @esi, align 4
  ret i32 %v0_c2d3
}

define i32 @function_c2ee() local_unnamed_addr {
dec_label_pc_c2ee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c2f3() local_unnamed_addr {
dec_label_pc_c2f3:
  %v0_c2f9 = load i32, i32* @eax, align 4
  ret i32 %v0_c2f9
}

define i32 @_ZN11CDataStreamrsIcEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c2fa:
  %v1_c31a = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_c31a = inttoptr i32 %v1_c31a to i32*
  %v3_c31a = load i32, i32* %v2_c31a, align 4
  %v1_c320 = add i32 %arg1, 20
  %v2_c320 = inttoptr i32 %v1_c320 to i32*
  %v3_c320 = load i32, i32* %v2_c320, align 4
  %v4_c338 = call i32 @unknown_1c72c(i32 %arg1, i32 %arg2, i32 %v3_c320, i32 %v3_c31a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c34c

bb:                                               ; preds = %dec_label_pc_c2fa
  %v1_c34a = call i32 @function_c351()
  br label %dec_label_pc_c34c

dec_label_pc_c34c:                                ; preds = %bb, %dec_label_pc_c2fa
  %v2_c34a = phi i32 [ %v1_c34a, %bb ], [ %arg1, %dec_label_pc_c2fa ]
  ret i32 %v2_c34a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_c351() local_unnamed_addr {
dec_label_pc_c351:
  %v0_c352 = load i32, i32* @eax, align 4
  ret i32 %v0_c352
}

define i32 @_ZN11CDataStreamrsI6CCoinsEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c354:
  %v1_c374 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_c374 = inttoptr i32 %v1_c374 to i32*
  %v3_c374 = load i32, i32* %v2_c374, align 4
  %v1_c37a = add i32 %arg1, 20
  %v2_c37a = inttoptr i32 %v1_c37a to i32*
  %v3_c37a = load i32, i32* %v2_c37a, align 4
  %v4_c392 = call i32 @unknown_1c7dc(i32 %arg1, i32 %arg2, i32 %v3_c37a, i32 %v3_c374)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @_ZN11CDataStreamrsI7uint256EERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c3ae:
  %v1_c3ce = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_c3ce = inttoptr i32 %v1_c3ce to i32*
  %v3_c3ce = load i32, i32* %v2_c3ce, align 4
  %v1_c3d4 = add i32 %arg1, 20
  %v2_c3d4 = inttoptr i32 %v1_c3d4 to i32*
  %v3_c3d4 = load i32, i32* %v2_c3d4, align 4
  %v4_c3ec = call i32 @unknown_1c892(i32 %arg1, i32 %arg2, i32 %v3_c3d4, i32 %v3_c3ce)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @_ZN11CHashWriterlsI7CVarIntIiEEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c408:
  %v1_c428 = add i32 %arg1, 116
  %v2_c428 = inttoptr i32 %v1_c428 to i32*
  %v3_c428 = load i32, i32* %v2_c428, align 4
  %v1_c42e = add i32 %arg1, 112
  %v2_c42e = inttoptr i32 %v1_c42e to i32*
  %v3_c42e = load i32, i32* %v2_c42e, align 4
  %v4_c446 = call i32 @unknown_1c948(i32 %arg1, i32 %arg2, i32 %v3_c42e, i32 %v3_c428)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c45a

bb:                                               ; preds = %dec_label_pc_c408
  %v1_c458 = call i32 @function_c45f()
  br label %dec_label_pc_c45a

dec_label_pc_c45a:                                ; preds = %bb, %dec_label_pc_c408
  %v2_c458 = phi i32 [ %v1_c458, %bb ], [ %arg1, %dec_label_pc_c408 ]
  ret i32 %v2_c458

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_c45f() local_unnamed_addr {
dec_label_pc_c45f:
  %v0_c460 = load i32, i32* @eax, align 4
  ret i32 %v0_c460
}

define i32 @_ZN11CHashWriterlsIcEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c462:
  %stack_var_-4 = alloca i32, align 4
  %v4_c462 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_c462, i32* @ebp, align 4
  ret i32 %arg1
}

define i32 @function_c470(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c470:
  %v0_c472 = load i32, i32* @ebp, align 4
  %v1_c472 = add i32 %v0_c472, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_c472, i32* @ebp, align 4
  %v0_c475 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_c47a = add i32 %v0_c472, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12)
  %v3_c47a = inttoptr i32 %v2_c47a to i32*
  store i32 %v0_c475, i32* %v3_c47a, align 4
  %v0_c47f = load i32, i32* @ebp, align 4
  %v1_c47f = add i32 %v0_c47f, -28
  %v2_c47f = inttoptr i32 %v1_c47f to i32*
  %v3_c47f = load i32, i32* %v2_c47f, align 4
  %v1_c482 = add i32 %v3_c47f, 116
  %v2_c482 = inttoptr i32 %v1_c482 to i32*
  %v3_c482 = load i32, i32* %v2_c482, align 4
  %v1_c488 = add i32 %v3_c47f, 112
  %v2_c488 = inttoptr i32 %v1_c488 to i32*
  %v3_c488 = load i32, i32* %v2_c488, align 4
  %v1_c48b = add i32 %v0_c47f, -32
  %v2_c48b = inttoptr i32 %v1_c48b to i32*
  %v3_c48b = load i32, i32* %v2_c48b, align 4
  %v1_c48e = inttoptr i32 %v3_c48b to i8*
  %v2_c48e = load i8, i8* %v1_c48e, align 1
  %v3_c48e = zext i8 %v2_c48e to i32
  %v3_c4a0 = load i32, i32* %v2_c47f, align 4
  %v4_c4a6 = call i32 @unknown_1c9fe(i32 %v3_c4a0, i32 %v3_c48e, i32 %v3_c488, i32 %v3_c482)
  %v0_c4ab = load i32, i32* @ebp, align 4
  %v1_c4ab = add i32 %v0_c4ab, -28
  %v2_c4ab = inttoptr i32 %v1_c4ab to i32*
  %v3_c4ab = load i32, i32* %v2_c4ab, align 4
  store i32 %v3_c4ab, i32* @eax, align 4
  %v1_c4ae = add i32 %v0_c4ab, -12
  %v2_c4ae = inttoptr i32 %v1_c4ae to i32*
  %v3_c4ae = load i32, i32* %v2_c4ae, align 4
  %v1_c4b1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_c4b1 = icmp eq i32 %v1_c4b1, %v3_c4ae
  br i1 %v3_c4b1, label %bb, label %dec_label_pc_c4ba

bb:                                               ; preds = %dec_label_pc_c470
  %v1_c4b8 = call i32 @function_c4bf()
  br label %dec_label_pc_c4ba

dec_label_pc_c4ba:                                ; preds = %bb, %dec_label_pc_c470
  %v3_c4b8 = phi i32 [ %v1_c4b8, %bb ], [ %v3_c4ab, %dec_label_pc_c470 ]
  ret i32 %v3_c4b8
}

define i32 @function_c4bf() local_unnamed_addr {
dec_label_pc_c4bf:
  %v0_c4c0 = load i32, i32* @eax, align 4
  ret i32 %v0_c4c0
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj() local_unnamed_addr {
dec_label_pc_c4c2:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_c4e2 = inttoptr i32 %tmp5 to i32*
  %v2_c4e2 = load i32, i32* %v1_c4e2, align 4
  %v2_c4ee = mul i32 %tmp3, 20
  %v2_c4f1 = add i32 %v2_c4e2, %v2_c4ee
  ret i32 %v2_c4f1
}

define i32 @_ZN11CHashWriterlsI7CVarIntIjEEERS_RKT_() local_unnamed_addr {
dec_label_pc_c506:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_c52c = add i32 %tmp4, 112
  %v2_c52c = inttoptr i32 %v1_c52c to i32*
  %v3_c52c = load i32, i32* %v2_c52c, align 4
  ret i32 %v3_c52c
}

define i32 @function_c530(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c530:
  %v0_c531 = load i32, i32* @eax, align 4
  %v11_c531 = and i32 %v0_c531, -244
  %v0_c537 = load i32, i32* @ebp, align 4
  %v1_c537 = add i32 %v0_c537, -32
  %v2_c537 = inttoptr i32 %v1_c537 to i32*
  %v3_c537 = load i32, i32* %v2_c537, align 4
  %v1_c53e = add i32 %v0_c537, -28
  %v2_c53e = inttoptr i32 %v1_c53e to i32*
  %v3_c53e = load i32, i32* %v2_c53e, align 4
  %v3_c544 = call i32 @unknown_1caf8(i32 %v3_c53e, i32 %v3_c537, i32 %v11_c531)
  %v0_c549 = load i32, i32* @ebp, align 4
  %v1_c549 = add i32 %v0_c549, -28
  %v2_c549 = inttoptr i32 %v1_c549 to i32*
  %v3_c549 = load i32, i32* %v2_c549, align 4
  store i32 %v3_c549, i32* @eax, align 4
  %v1_c54c = add i32 %v0_c549, -12
  %v2_c54c = inttoptr i32 %v1_c54c to i32*
  %v3_c54c = load i32, i32* %v2_c54c, align 4
  %v1_c54f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_c54f = icmp eq i32 %v1_c54f, %v3_c54c
  br i1 %v3_c54f, label %bb, label %dec_label_pc_c558

bb:                                               ; preds = %dec_label_pc_c530
  %v1_c556 = call i32 @function_c55d()
  br label %dec_label_pc_c558

dec_label_pc_c558:                                ; preds = %bb, %dec_label_pc_c530
  %v2_c556 = phi i32 [ %v1_c556, %bb ], [ %v3_c549, %dec_label_pc_c530 ]
  ret i32 %v2_c556
}

define i32 @function_c55d() local_unnamed_addr {
dec_label_pc_c55d:
  %v0_c55e = load i32, i32* @eax, align 4
  ret i32 %v0_c55e
}

define i32 @_ZN11CHashWriterlsI6CTxOutEERS_RKT_() local_unnamed_addr {
dec_label_pc_c560:
  %stack_var_-4 = alloca i32, align 4
  %v4_c560 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_c560, i32* @ebp, align 4
  %v0_c572 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_c572
}

define i32 @function_c57c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c57c:
  %v0_c583 = load i32, i32* @ebp, align 4
  %v1_c583 = add i32 %v0_c583, -28
  %v2_c583 = inttoptr i32 %v1_c583 to i32*
  %v3_c583 = load i32, i32* %v2_c583, align 4
  %v1_c586 = add i32 %v3_c583, 112
  %v2_c586 = inttoptr i32 %v1_c586 to i32*
  %v3_c586 = load i32, i32* %v2_c586, align 4
  %v0_c589 = load i32, i32* @edx, align 4
  %v1_c591 = add i32 %v0_c583, -32
  %v2_c591 = inttoptr i32 %v1_c591 to i32*
  %v3_c591 = load i32, i32* %v2_c591, align 4
  %v3_c598 = load i32, i32* %v2_c583, align 4
  %v4_c59e = call i32 @unknown_1cbae(i32 %v3_c598, i32 %v3_c591, i32 %v3_c586, i32 %v0_c589)
  %v0_c5a3 = load i32, i32* @ebp, align 4
  %v1_c5a3 = add i32 %v0_c5a3, -28
  %v2_c5a3 = inttoptr i32 %v1_c5a3 to i32*
  %v3_c5a3 = load i32, i32* %v2_c5a3, align 4
  ret i32 %v3_c5a3
}

define i32 @_ZN8CLevelDB4ReadISt4pairIc7uint256E10CDiskTxPosEEbRKT_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c5ba:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v2_c5f2 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_c5f2, i32* @eax, align 4
  %v3_c5f8 = call i32 @function_10a96(i32 %v2_c5f2, i32 2, i32 1020000)
  store i32 %v2_c5f2, i32* @eax, align 4
  %v2_c60a = call i32 @function_1ba0c(i32 %v2_c5f2, i32 %arg2)
  %v2_c619 = call i32 @function_10df8(i32 %v2_c5f2, i32 %v2_c60a)
  store i32 %v2_c5f2, i32* @eax, align 4
  %v2_c62b = call i32 @function_194e6(i32 %v2_c5f2, i32 %arg2)
  %v1_c636 = call i32 @function_10dba(i32 %v2_c5f2)
  store i32 %v2_c5f2, i32* @eax, align 4
  %v2_c64b = call i32 @function_10e42(i32 %v2_c5f2, i32 0)
  %v2_c663 = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_c663

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_c66d() local_unnamed_addr {
dec_label_pc_c66d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_c66d = load i32, i32* %ebx.global-to-local, align 4
  %v1_c66d = add i32 %v0_c66d, 1082889285
  %v2_c66d = inttoptr i32 %v1_c66d to i32*
  %v3_c66d = load i32, i32* %v2_c66d, align 4
  %v4_c66d = add i32 %v3_c66d, -1
  store i32 %v4_c66d, i32* %v2_c66d, align 4
  %v0_c676 = load i32, i32* %eax.global-to-local, align 4
  %v1_c676 = add i32 %v0_c676, 20
  store i32 %v1_c676, i32* %eax.global-to-local, align 4
  %v1_c679 = inttoptr i32 %v1_c676 to i32*
  %v2_c679 = load i32, i32* %v1_c679, align 4
  store i32 %v2_c679, i32* %ebx.global-to-local, align 4
  %v0_c67b = load i32, i32* @ebp, align 4
  %v1_c67b = add i32 %v0_c67b, -108
  %v2_c67b = inttoptr i32 %v1_c67b to i32*
  %v3_c67b = load i32, i32* %v2_c67b, align 4
  store i32 %v3_c67b, i32* %eax.global-to-local, align 4
  %v1_c67e = add i32 %v3_c67b, 48
  %v3_c681 = load i32, i32* %v2_c67b, align 4
  store i32 %v3_c681, i32* %eax.global-to-local, align 4
  %v1_c684 = add i32 %v3_c681, 68
  %v2_c684 = inttoptr i32 %v1_c684 to i32*
  %v3_c684 = load i32, i32* %v2_c684, align 4
  %v1_c687 = add i32 %v0_c67b, -24
  %v1_c68a = add i32 %v0_c67b, -28
  %v1_c691 = add i32 %v0_c67b, -36
  store i32 %v1_c687, i32* @eax, align 4
  %v6_c6ae = call i32 @function_13bea(i32 %v1_c687, i32 %v1_c687, i32 %v3_c684, i32 %v1_c67e, i32 %v1_c691, i32 %v1_c68a)
  %v1_c6b3 = xor i32 %v6_c6ae, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_c6b3 = trunc i32 %v1_c6b3 to i8
  store i32 %v1_c6b3, i32* %eax.global-to-local, align 4
  %v5_c6b6 = icmp eq i8 %v4_c6b3, 0
  br i1 %v5_c6b6, label %bb, label %dec_label_pc_c6ba

bb:                                               ; preds = %dec_label_pc_c66d
  %v1_c6b8 = call i32 @function_c719()
  store i32 %v1_c6b8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c6ba

dec_label_pc_c6ba:                                ; preds = %bb, %dec_label_pc_c66d
  %v0_c6ba = load i32, i32* @ebp, align 4
  %v1_c6ba = add i32 %v0_c6ba, -24
  store i32 %v1_c6ba, i32* %eax.global-to-local, align 4
  %v4_c6c5 = trunc i32 %v1_c6ba to i8
  %v5_c6c5 = icmp eq i8 %v4_c6c5, 0
  br i1 %v5_c6c5, label %dec_label_pc_c6d3, label %dec_label_pc_c6c9

dec_label_pc_c6c9:                                ; preds = %dec_label_pc_c6ba
  store i32 0, i32* %ebx.global-to-local, align 4
  ret i32 %v1_c6ba

dec_label_pc_c6d3:                                ; preds = %dec_label_pc_c6ba
  %v1_c6d3 = add i32 %v0_c6ba, -20
  store i32 %v1_c6d3, i32* %eax.global-to-local, align 4
  ret i32 %v1_c6d3

; uselistorder directives
  uselistorder i32 %v1_c687, { 0, 2, 1 }
  uselistorder i32 %v0_c67b, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
}

define i32 @function_c719() local_unnamed_addr {
dec_label_pc_c719:
  %v0_c719 = load i32, i32* @ebp, align 4
  %v1_c719 = add i32 %v0_c719, -28
  ret i32 %v1_c719
}

define i32 @function_c730() local_unnamed_addr {
dec_label_pc_c730:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_c730 = load i32, i32* %ecx.global-to-local, align 4
  %v3_c730 = add i32 %v2_c730, ptrtoint (i8** @global_var_1.1176 to i32)
  %v18_c730 = inttoptr i32 %v2_c730 to i32*
  store i32 %v3_c730, i32* %v18_c730, align 4
  %v0_c732 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c732
}

define i32 @function_c77e(i32 %arg1) local_unnamed_addr {
dec_label_pc_c77e:
  %v0_c783 = load i32, i32* @ebp, align 4
  %v1_c78e = add i32 %v0_c783, -28
  ret i32 %v1_c78e
}

define i32 @function_c798() local_unnamed_addr {
dec_label_pc_c798:
  %eax.global-to-local = alloca i32, align 4
  %v0_c798 = load i32, i32* @ebp, align 4
  %v1_c798 = add i32 %v0_c798, 76129349
  %v2_c798 = inttoptr i32 %v1_c798 to i32*
  %v3_c798 = load i32, i32* %v2_c798, align 4
  %v4_c798 = add i32 %v3_c798, -1
  store i32 %v4_c798, i32* %v2_c798, align 4
  %v0_c79e = load i32, i32* %eax.global-to-local, align 4
  %v1_c79e = trunc i32 %v0_c79e to i8
  %v2_c79e = and i8 %v1_c79e, -24
  %v3_c79e = icmp eq i8 %v2_c79e, 0
  store i1 %v3_c79e, i1* @zf, align 1
  %v8_c79e = zext i8 %v2_c79e to i32
  %v10_c79e = and i32 %v0_c79e, -256
  %v11_c79e = or i32 %v8_c79e, %v10_c79e
  store i32 %v11_c79e, i32* @eax, align 4
  br i1 %v3_c79e, label %bb, label %dec_label_pc_c7a2

bb:                                               ; preds = %dec_label_pc_c798
  %v1_c7a0 = call i32 @function_c7e6()
  store i32 %v1_c7a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c7a2

dec_label_pc_c7a2:                                ; preds = %bb, %dec_label_pc_c798
  %v20_c7a2 = phi i32 [ %v1_c7a0, %bb ], [ %v11_c79e, %dec_label_pc_c798 ]
  %v1_c7a2 = inttoptr i32 %v20_c7a2 to i8*
  %v2_c7a2 = load i8, i8* %v1_c7a2, align 1
  %v4_c7a2 = trunc i32 %v20_c7a2 to i8
  %v5_c7a2 = add i8 %v2_c7a2, %v4_c7a2
  store i8 %v5_c7a2, i8* %v1_c7a2, align 1
  %v0_c7a4 = load i32, i32* @ebx, align 4
  store i32 %v0_c7a4, i32* @eax, align 4
  %v0_c7a6 = load i32, i32* @ebp, align 4
  %v1_c7a6 = add i32 %v0_c7a6, -12
  %v2_c7a6 = inttoptr i32 %v1_c7a6 to i32*
  %v3_c7a6 = load i32, i32* %v2_c7a6, align 4
  %v1_c7a9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_c7a9 = icmp eq i32 %v1_c7a9, %v3_c7a6
  br i1 %v3_c7a9, label %bb97, label %dec_label_pc_c7b6

bb97:                                             ; preds = %dec_label_pc_c7a2
  %v1_c7b0 = call i32 @function_c859()
  store i32 %v1_c7b0, i32* @eax, align 4
  br label %dec_label_pc_c7b6

dec_label_pc_c7b6:                                ; preds = %bb97, %dec_label_pc_c7a2
  %v0_c7b6 = call i32 @function_c854()
  store i32 %v0_c7b6, i32* %eax.global-to-local, align 4
  ret i32 %v0_c7b6

; uselistorder directives
  uselistorder i32 %v20_c7a2, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
}

define i32 @function_c7ca() local_unnamed_addr {
dec_label_pc_c7ca:
  %v0_c7ca = call i32 @function_c80c()
  ret i32 %v0_c7ca
}

define i32 @function_c7cc() local_unnamed_addr {
dec_label_pc_c7cc:
  %eax.global-to-local = alloca i32, align 4
  %v0_c7cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c7cc
}

define i32 @function_c7e6() local_unnamed_addr {
dec_label_pc_c7e6:
  %v0_c7e6 = load i1, i1* @zf, align 1
  %v0_c7f6 = load i32, i32* @eax, align 4
  br i1 %v0_c7e6, label %dec_label_pc_c7ee, label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7e6
  store i32 %v0_c7f6, i32* @esi, align 4
  %v0_c7ea = load i32, i32* @edx, align 4
  store i32 %v0_c7ea, i32* @ebx, align 4
  %v0_c7ec = call i32 @function_c80c()
  ret i32 %v0_c7ec

dec_label_pc_c7ee:                                ; preds = %dec_label_pc_c7e6
  %v1_c7f6 = load i32, i32* @ebp, align 4
  %v2_c7f6 = add i32 %v1_c7f6, -16
  %v3_c7f6 = inttoptr i32 %v2_c7f6 to i32*
  store i32 %v0_c7f6, i32* %v3_c7f6, align 4
  %v4_c7f6 = load i32, i32* @eax, align 4
  ret i32 %v4_c7f6

; uselistorder directives
  uselistorder i32 %v0_c7f6, { 1, 0 }
}

define i32 @function_c7fa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c7fa:
  %v2_c7fa = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_c7fa = load i32, i32* @eax, align 4
  %v4_c7fa = trunc i32 %v3_c7fa to i8
  %v5_c7fa = add i8 %v4_c7fa, %v2_c7fa
  %v21_c7fa = inttoptr i32 %v3_c7fa to i8*
  store i8 %v5_c7fa, i8* %v21_c7fa, align 1
  %v2_c7fc = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_c7fc = load i32, i32* @eax, align 4
  %v4_c7fc = trunc i32 %v3_c7fc to i8
  %v5_c7fc = add i8 %v4_c7fc, %v2_c7fc
  %v21_c7fc = inttoptr i32 %v3_c7fc to i8*
  store i8 %v5_c7fc, i8* %v21_c7fc, align 1
  %v22_c7fc = load i32, i32* @eax, align 4
  ret i32 %v22_c7fc
}

define i32 @function_c803() local_unnamed_addr {
dec_label_pc_c803:
  %eax.global-to-local = alloca i32, align 4
  %v0_c803 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c803
}

define i32 @function_c80c() local_unnamed_addr {
dec_label_pc_c80c:
  %v0_c80c = load i32, i32* @ebp, align 4
  %v1_c80c = add i32 %v0_c80c, -24
  %v1_c817 = call i32 @function_c81d(i32 %v1_c80c)
  ret i32 %v1_c817
}

define i32 @function_c819() local_unnamed_addr {
dec_label_pc_c819:
  %eax.global-to-local = alloca i32, align 4
  %v0_c819 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c819
}

define i32 @function_c81d(i32 %arg1) local_unnamed_addr {
dec_label_pc_c81d:
  %v0_c81d = load i32, i32* @ebp, align 4
  %v1_c81d = add i32 %v0_c81d, -28
  %v1_c828 = call i32 @function_c82e(i32 %v1_c81d)
  ret i32 %v1_c828
}

define i32 @function_c82a() local_unnamed_addr {
dec_label_pc_c82a:
  %eax.global-to-local = alloca i32, align 4
  %v0_c82a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c82a
}

define i32 @function_c82e(i32 %arg1) local_unnamed_addr {
dec_label_pc_c82e:
  %v0_c839 = load i32, i32* @esi, align 4
  ret i32 %v0_c839
}

define i32 @function_c854() local_unnamed_addr {
dec_label_pc_c854:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c859() local_unnamed_addr {
dec_label_pc_c859:
  %v0_c85f = load i32, i32* @eax, align 4
  ret i32 %v0_c85f
}

define i32 @_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_c860:
  %stack_var_-20 = alloca i32, align 4
  %v2_c880 = load i32, i32* %arg2, align 4
  store i32 %v2_c880, i32* %stack_var_-20, align 4
  %v2_c885 = ptrtoint i32* %stack_var_-20 to i32
  %v2_c892 = call i32 @unknown_1cf64(i32 %arg1, i32 %v2_c885)
  ret i32 %arg1
}

define i32 @_ZNKSt6vectorISt4pairI7uint25610CDiskTxPosESaIS3_EE3endEv() local_unnamed_addr {
dec_label_pc_c8b0:
  %stack_var_-20 = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v1_c8d0 = add i32 %tmp5, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_c8d0 = inttoptr i32 %v1_c8d0 to i32*
  %v3_c8d0 = load i32, i32* %v2_c8d0, align 4
  store i32 %v3_c8d0, i32* %stack_var_-20, align 4
  %v2_c8d6 = ptrtoint i32* %stack_var_-20 to i32
  %v2_c8e3 = call i32 @unknown_1cfb4(i32 %tmp7, i32 %v2_c8d6)
  ret i32 %tmp7
}

define i32 @_ZN9__gnu_cxxneIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_() local_unnamed_addr {
dec_label_pc_c900:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_c924 = call i32 @unknown_1d03e(i32 %tmp5)
  %v1_c929 = inttoptr i32 %v1_c924 to i32*
  %v2_c929 = load i32, i32* %v1_c929, align 4
  %v1_c931 = call i32 @unknown_1d03e(i32 %tmp3)
  %v1_c936 = inttoptr i32 %v1_c931 to i32*
  %v2_c936 = load i32, i32* %v1_c936, align 4
  %v12_c938 = icmp eq i32 %v2_c929, %v2_c936
  %v1_c93a = icmp eq i1 %v12_c938, false
  %v2_c93a = zext i1 %v1_c93a to i32
  %v4_c93a = and i32 %v2_c936, -256
  %v5_c93a = or i32 %v2_c93a, %v4_c93a
  store i32 %v5_c93a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c949

bb:                                               ; preds = %dec_label_pc_c900
  %v1_c947 = call i32 @function_c94e()
  br label %dec_label_pc_c949

dec_label_pc_c949:                                ; preds = %bb, %dec_label_pc_c900
  %v2_c947 = phi i32 [ %v1_c947, %bb ], [ %v5_c93a, %dec_label_pc_c900 ]
  ret i32 %v2_c947

; uselistorder directives
  uselistorder i32 %v2_c936, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1d03e, { 1, 0 }
}

define i32 @function_c94e() local_unnamed_addr {
dec_label_pc_c94e:
  %v0_c953 = load i32, i32* @eax, align 4
  ret i32 %v0_c953
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEppEi() local_unnamed_addr {
dec_label_pc_c954:
  %stack_var_-20 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_c97a = inttoptr i32 %tmp7 to i32*
  %v2_c97a = load i32, i32* %v1_c97a, align 4
  store i32 %v2_c97a, i32* %stack_var_-20, align 4
  %v2_c97f = ptrtoint i32* %stack_var_-20 to i32
  %v1_c982 = add i32 %v2_c97a, 44
  store i32 %v1_c982, i32* %v1_c97a, align 4
  %v2_c994 = call i32 @unknown_1d058(i32 %tmp9, i32 %v2_c97f)
  br i1 true, label %bb, label %dec_label_pc_c9a8

bb:                                               ; preds = %dec_label_pc_c954
  %v1_c9a6 = call i32 @function_c9ad()
  br label %dec_label_pc_c9a8

dec_label_pc_c9a8:                                ; preds = %bb, %dec_label_pc_c954
  %v4_c9a6 = phi i32 [ %v1_c9a6, %bb ], [ %tmp9, %dec_label_pc_c954 ]
  ret i32 %v4_c9a6

; uselistorder directives
  uselistorder i32 44, { 2, 0, 1 }
}

define i32 @function_c9ad() local_unnamed_addr {
dec_label_pc_c9ad:
  %v0_c9ae = load i32, i32* @eax, align 4
  ret i32 %v0_c9ae
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEptEv() local_unnamed_addr {
dec_label_pc_c9b2:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_c9cc = inttoptr i32 %tmp3 to i32*
  %v2_c9cc = load i32, i32* %v1_c9cc, align 4
  store i32 %v2_c9cc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_c9da

bb:                                               ; preds = %dec_label_pc_c9b2
  %v2_c9d8 = call i32 @function_c9df(i32 %tmp3)
  br label %dec_label_pc_c9da

dec_label_pc_c9da:                                ; preds = %bb, %dec_label_pc_c9b2
  %v3_c9d8 = phi i32 [ %v2_c9d8, %bb ], [ %v2_c9cc, %dec_label_pc_c9b2 ]
  ret i32 %v3_c9d8
}

define i32 @function_c9df(i32 %arg1) local_unnamed_addr {
dec_label_pc_c9df:
  %v0_c9e0 = load i32, i32* @eax, align 4
  ret i32 %v0_c9e0
}

define i32 @_ZN13CLevelDBBatch5WriteISt4pairIc7uint256E10CDiskTxPosEEvRKT_RKT0_() local_unnamed_addr {
dec_label_pc_c9e2:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v2_ca16 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_ca16, i32* @eax, align 4
  %v3_ca1c = call i32 @function_10ebe(i32 %v2_ca16, i32 2, i32 1020000)
  %v2_ca2e = call i32 @unknown_1be34(i32 %v2_ca16, i32 %tmp10)
  store i32 %v2_ca16, i32* @eax, align 4
  %v2_ca3d = call i32 @function_11220(i32 %v2_ca16, i32 %v2_ca2e)
  store i32 %v2_ca16, i32* @eax, align 4
  %v2_ca4f = call i32 @function_1990e(i32 %v2_ca16, i32 %tmp10)
  store i32 %v2_ca16, i32* @eax, align 4
  %v1_ca5a = call i32 @function_111e2(i32 %v2_ca16)
  store i32 %v1_ca5a, i32* @ebx, align 4
  store i32 %v2_ca16, i32* @eax, align 4
  %v2_ca6f = call i32 @function_1126a(i32 %v2_ca16, i32 0)
  %v0_ca74 = load i32, i32* @ebx, align 4
  %v2_ca7c = ptrtoint i32* %stack_var_-32 to i32
  %v3_ca82 = call i32 @function_13ed4(i32 %v2_ca7c, i32 %v2_ca6f, i32 %v0_ca74)
  %v2_ca97 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_ca97, i32* @eax, align 4
  %v3_ca9d = call i32 @function_10ebe(i32 %v2_ca97, i32 2, i32 1020000)
  %v2_caaf = call i32 @unknown_1d14e(i32 %v2_ca97, i32 %tmp8)
  store i32 %v2_ca97, i32* @eax, align 4
  %v2_cabe = call i32 @function_11220(i32 %v2_ca97, i32 %v2_caaf)
  %v2_cad0 = call i32 @unknown_1d19e(i32 %v2_ca97, i32 %tmp8)
  store i32 %v2_ca97, i32* @eax, align 4
  %v1_cadb = call i32 @function_111e2(i32 %v2_ca97)
  store i32 %v1_cadb, i32* @ebx, align 4
  store i32 %v2_ca97, i32* @eax, align 4
  %v2_caf0 = call i32 @function_1126a(i32 %v2_ca97, i32 0)
  %v0_caf5 = load i32, i32* @ebx, align 4
  %v2_cafd = ptrtoint i32* %stack_var_-24 to i32
  %v3_cb03 = call i32 @function_13ed4(i32 %v2_cafd, i32 %v2_caf0, i32 %v0_caf5)
  ret i32 %tmp12

; uselistorder directives
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13ed4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1126a, { 1, 0 }
  uselistorder i32 (i32)* @function_111e2, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_11220, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10ebe, { 1, 0 }
}

define i32 @function_cb20() local_unnamed_addr {
dec_label_pc_cb20:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_cb20 = add i32 %tmp91, 76138565
  %v2_cb20 = inttoptr i32 %v1_cb20 to i32*
  %v3_cb20 = load i32, i32* %v2_cb20, align 4
  %v4_cb20 = add i32 %v3_cb20, -1
  store i32 %v4_cb20, i32* %v2_cb20, align 4
  %v0_cb26 = load i32, i32* %eax.global-to-local, align 4
  %v1_cb26 = trunc i32 %v0_cb26 to i8
  %v2_cb26 = and i8 %v1_cb26, -24
  %v4_cb28 = add i8 %v2_cb26, 69
  %v25_cb28 = zext i8 %v4_cb28 to i32
  %v27_cb28 = and i32 %v0_cb26, -256
  %v28_cb28 = or i32 %v25_cb28, %v27_cb28
  store i32 %v28_cb28, i32* %eax.global-to-local, align 4
  %v1_cb2a = inttoptr i32 %v28_cb28 to i8*
  %v2_cb2a = load i8, i8* %v1_cb2a, align 1
  %v5_cb2a = add i8 %v2_cb2a, %v4_cb28
  store i8 %v5_cb2a, i8* %v1_cb2a, align 1
  %v0_cb2c = load i32, i32* %ebp.global-to-local, align 4
  %v1_cb2c = add i32 %v0_cb2c, -84
  store i32 %v1_cb2c, i32* %eax.global-to-local, align 4
  %v1_cb37 = add i32 %v0_cb2c, -12
  %v2_cb37 = inttoptr i32 %v1_cb37 to i32*
  %v3_cb37 = load i32, i32* %v2_cb37, align 4
  store i32 %v3_cb37, i32* %eax.global-to-local, align 4
  %v1_cb3a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_cb3a = xor i32 %v1_cb3a, %v3_cb37
  %v3_cb3a = icmp eq i32 %v2_cb3a, 0
  store i32 %v2_cb3a, i32* @eax, align 4
  br i1 %v3_cb3a, label %bb, label %dec_label_pc_cb43

bb:                                               ; preds = %dec_label_pc_cb20
  %v2_cb41 = call i32 @function_cb70(i32 %v1_cb2c)
  store i32 %v2_cb41, i32* @eax, align 4
  br label %dec_label_pc_cb43

dec_label_pc_cb43:                                ; preds = %bb, %dec_label_pc_cb20
  %v0_cb43 = call i32 @function_cb6b()
  store i32 %v0_cb43, i32* %eax.global-to-local, align 4
  ret i32 %v0_cb43
}

define i32 @function_cb45() local_unnamed_addr {
dec_label_pc_cb45:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_cb45 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_cb45, i32* @ebx, align 4
  %v0_cb47 = load i32, i32* %ebp.global-to-local, align 4
  %v1_cb47 = add i32 %v0_cb47, -56
  store i32 %v1_cb47, i32* %eax.global-to-local, align 4
  %v1_cb52 = call i32 @function_cb56(i32 %v1_cb47)
  store i32 %v1_cb52, i32* %eax.global-to-local, align 4
  ret i32 %v1_cb52
}

define i32 @function_cb54() local_unnamed_addr {
dec_label_pc_cb54:
  %eax.global-to-local = alloca i32, align 4
  %v0_cb54 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cb54
}

define i32 @function_cb56(i32 %arg1) local_unnamed_addr {
dec_label_pc_cb56:
  %v0_cb61 = load i32, i32* @ebx, align 4
  ret i32 %v0_cb61
}

define i32 @function_cb6b() local_unnamed_addr {
dec_label_pc_cb6b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cb6d() local_unnamed_addr {
dec_label_pc_cb6d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cb70(i32 %arg1) local_unnamed_addr {
dec_label_pc_cb70:
  %v0_cb75 = load i32, i32* @eax, align 4
  ret i32 %v0_cb75
}

define i32 @_ZSt9make_pairIcSsESt4pairIT_T0_ES1_S2_(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cb76:
  %stack_var_-36 = alloca i8, align 1
  store i8 %arg2, i8* %stack_var_-36, align 1
  %v2_cba0 = ptrtoint i8* %stack_var_-36 to i32
  %v3_cbad = call i32 @unknown_1d38c(i32 %arg1, i32 %v2_cba0, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_cbc1

bb:                                               ; preds = %dec_label_pc_cb76
  %v1_cbbf = call i32 @function_cbc6()
  br label %dec_label_pc_cbc1

dec_label_pc_cbc1:                                ; preds = %bb, %dec_label_pc_cb76
  %v2_cbbf = phi i32 [ %v1_cbbf, %bb ], [ %arg1, %dec_label_pc_cb76 ]
  ret i32 %v2_cbbf

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_cbc6() local_unnamed_addr {
dec_label_pc_cbc6:
  %v0_cbc7 = load i32, i32* @eax, align 4
  ret i32 %v0_cbc7
}

define i32 @_ZN8CLevelDB5WriteISt4pairIcSsEcEEbRKT_RKT0_b(i32 %arg1) local_unnamed_addr {
dec_label_pc_cbca:
  ret i32 %arg1
}

define i32 @function_cbd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_cbd6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_cbd7 = load i32, i32* @ecx, align 4
  %v1_cbd7 = add i32 %v0_cbd7, 1435231317
  %v2_cbd7 = inttoptr i32 %v1_cbd7 to i8*
  %v3_cbd7 = load i8, i8* %v2_cbd7, align 1
  %v5_cbd7 = trunc i32 %v0_cbd7 to i8
  %v6_cbd7 = or i8 %v3_cbd7, %v5_cbd7
  store i8 %v6_cbd7, i8* %v2_cbd7, align 1
  %v0_cbdd = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_cbdd = or i32 %v0_cbdd, 137
  store i32 %v11_cbdd, i32* @eax, align 4
  %v0_cbe0 = load i32, i32* @ecx, align 4
  %v1_cbe0 = sub i32 %v0_cbe0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_cbe0, i32* %ecx.global-to-local, align 4
  %v2_cbe0 = icmp eq i32 %v1_cbe0, 0
  br i1 %v2_cbe0, label %dec_label_pc_cbe2, label %bb

bb:                                               ; preds = %dec_label_pc_cbd6
  %v6_cbe0 = call i32 @function_cb6d()
  store i32 %v6_cbe0, i32* @eax, align 4
  %v0_cbe3.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_cbe3.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_cbe2

dec_label_pc_cbe2:                                ; preds = %dec_label_pc_cbd6, %bb
  %v6_cbe3 = phi i1 [ false, %dec_label_pc_cbd6 ], [ %v6_cbe3.pre, %bb ]
  %v30_cbe3 = phi i32 [ 0, %dec_label_pc_cbd6 ], [ %v0_cbe3.pre, %bb ]
  %v1_cbe3 = add i32 %v30_cbe3, 1166597205
  %v2_cbe3 = inttoptr i32 %v1_cbe3 to i8*
  %v3_cbe3 = load i8, i8* %v2_cbe3, align 1
  %v5_cbe3 = trunc i32 %v30_cbe3 to i8
  %v7_cbe3 = zext i1 %v6_cbe3 to i8
  %v8_cbe3 = add i8 %v3_cbe3, %v5_cbe3
  %v9_cbe3 = add i8 %v8_cbe3, %v7_cbe3
  %v27_cbe3 = icmp ule i8 %v9_cbe3, %v3_cbe3
  %v28_cbe3 = icmp ult i8 %v8_cbe3, %v3_cbe3
  %v29_cbe3 = select i1 %v6_cbe3, i1 %v27_cbe3, i1 %v28_cbe3
  store i1 %v29_cbe3, i1* %cf.global-to-local, align 1
  store i8 %v9_cbe3, i8* %v2_cbe3, align 1
  %v0_cbec = load i32, i32* @eax, align 4
  %v1_cbec = trunc i32 %v0_cbec to i8
  %v2_cbec = load i1, i1* %cf.global-to-local, align 1
  %v3_cbec = zext i1 %v2_cbec to i8
  %v4_cbec = add i8 %v3_cbec, %v1_cbec
  %v19_cbec = icmp ule i8 %v4_cbec, %v1_cbec
  %v21_cbec = icmp eq i1 %v2_cbec, %v19_cbec
  store i1 %v21_cbec, i1* %cf.global-to-local, align 1
  %v22_cbec = zext i8 %v4_cbec to i32
  %v24_cbec = and i32 %v0_cbec, -256
  %v25_cbec = or i32 %v22_cbec, %v24_cbec
  store i32 %v25_cbec, i32* %eax.global-to-local, align 4
  %v1_cbee = inttoptr i32 %v25_cbec to i8*
  %v2_cbee = load i8, i8* %v1_cbee, align 1
  %v5_cbee = add i8 %v2_cbee, %v4_cbec
  store i8 %v5_cbee, i8* %v1_cbee, align 1
  %v0_cbf0 = load i32, i32* %eax.global-to-local, align 4
  %v1_cbf0 = load i32, i32* @ebp, align 4
  %v2_cbf0 = add i32 %v1_cbf0, -12
  %v3_cbf0 = inttoptr i32 %v2_cbf0 to i32*
  store i32 %v0_cbf0, i32* %v3_cbf0, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_cbf5 = load i32, i32* @ebp, align 4
  %v1_cbf5 = add i32 %v0_cbf5, -16
  store i32 %v1_cbf5, i32* %eax.global-to-local, align 4
  %v1_cbfb = call i32 @function_142b2(i32 %v1_cbf5)
  store i32 %v1_cbfb, i32* %eax.global-to-local, align 4
  %v0_cc00 = load i32, i32* @ebp, align 4
  %v1_cc00 = add i32 %v0_cc00, -36
  %v2_cc00 = inttoptr i32 %v1_cc00 to i32*
  %v3_cc00 = load i32, i32* %v2_cc00, align 4
  store i32 %v3_cc00, i32* %eax.global-to-local, align 4
  %v1_cc07 = add i32 %v0_cc00, -32
  %v2_cc07 = inttoptr i32 %v1_cc07 to i32*
  %v3_cc07 = load i32, i32* %v2_cc07, align 4
  %v1_cc0e = add i32 %v0_cc00, -16
  store i32 %v1_cc0e, i32* %eax.global-to-local, align 4
  %v3_cc14 = call i32 @unknown_1d436(i32 %v1_cc0e, i32 %v3_cc07, i32 %v3_cc00)
  store i32 %v3_cc14, i32* %eax.global-to-local, align 4
  %v0_cc19 = load i32, i32* @ebp, align 4
  %v1_cc21 = add i32 %v0_cc19, -16
  store i32 %v1_cc21, i32* %eax.global-to-local, align 4
  %v1_cc28 = add i32 %v0_cc19, -28
  %v2_cc28 = inttoptr i32 %v1_cc28 to i32*
  %v3_cc28 = load i32, i32* %v2_cc28, align 4
  store i32 %v3_cc28, i32* %eax.global-to-local, align 4
  ret i32 %v3_cc28

; uselistorder directives
  uselistorder i32 %v0_cc19, { 1, 0 }
  uselistorder i8 %v4_cbec, { 0, 2, 1 }
  uselistorder i8 %v1_cbec, { 1, 0 }
  uselistorder i8 %v9_cbe3, { 1, 0 }
  uselistorder i8 %v8_cbe3, { 1, 0 }
  uselistorder i8 %v3_cbe3, { 1, 2, 0 }
  uselistorder i32 %v30_cbe3, { 1, 0 }
  uselistorder i1 %v6_cbe3, { 1, 0 }
  uselistorder label %dec_label_pc_cbe2, { 1, 0 }
}

define i32 @function_cc32() local_unnamed_addr {
dec_label_pc_cc32:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_cc32 = load i32, i32* %ecx.global-to-local, align 4
  %v1_cc32 = add i32 %v0_cc32, -263877181
  %v2_cc32 = inttoptr i32 %v1_cc32 to i32*
  %v3_cc32 = load i32, i32* %v2_cc32, align 4
  %v4_cc32 = sub i32 %v3_cc32, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_cc32, i32* %v2_cc32, align 4
  %v0_cc38 = load i32, i32* @eax, align 4
  %v1_cc3b = call i32 @function_142e8(i32 %v0_cc38)
  %v0_cc40 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_cc40, i32* @eax, align 4
  %v0_cc42 = load i32, i32* @ebp, align 4
  %v1_cc42 = add i32 %v0_cc42, -12
  %v2_cc42 = inttoptr i32 %v1_cc42 to i32*
  %v3_cc42 = load i32, i32* %v2_cc42, align 4
  %v1_cc45 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_cc45 = icmp eq i32 %v1_cc45, %v3_cc42
  br i1 %v3_cc45, label %bb, label %dec_label_pc_cc4e

bb:                                               ; preds = %dec_label_pc_cc32
  %v1_cc4c = call i32 @function_cc7f()
  store i32 %v1_cc4c, i32* @eax, align 4
  br label %dec_label_pc_cc4e

dec_label_pc_cc4e:                                ; preds = %bb, %dec_label_pc_cc32
  %v0_cc4e = call i32 @function_cc7a()
  ret i32 %v0_cc4e
}

define i32 @function_cc50() local_unnamed_addr {
dec_label_pc_cc50:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_cc50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_cc50, i32* %esi.global-to-local, align 4
  %v0_cc52 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_cc52, i32* %ebx.global-to-local, align 4
  %v0_cc54 = load i32, i32* @ebp, align 4
  %v1_cc54 = add i32 %v0_cc54, -16
  store i32 %v1_cc54, i32* @eax, align 4
  %v1_cc5a = call i32 @function_142e8(i32 %v1_cc54)
  %v0_cc5f = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_cc5f, i32* @eax, align 4
  %v0_cc61 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_cc61, i32* %edx.global-to-local, align 4
  %v10_cc65 = icmp eq i32 %v0_cc61, -1
  br i1 %v10_cc65, label %bb, label %dec_label_pc_cc6a

bb:                                               ; preds = %dec_label_pc_cc50
  %v1_cc68 = call i32 @function_cc72()
  store i32 %v1_cc68, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_cc6a

dec_label_pc_cc6a:                                ; preds = %bb, %dec_label_pc_cc50
  %v3_cc6a = phi i32 [ %v1_cc68, %bb ], [ %v0_cc5f, %dec_label_pc_cc50 ]
  ret i32 %v3_cc6a

; uselistorder directives
  uselistorder i32 (i32)* @function_142e8, { 1, 0 }
}

define i32 @function_cc72() local_unnamed_addr {
dec_label_pc_cc72:
  %v3_cc72 = load i32, i32* @eax, align 4
  ret i32 %v3_cc72
}

define i32 @function_cc7a() local_unnamed_addr {
dec_label_pc_cc7a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cc7f() local_unnamed_addr {
dec_label_pc_cc7f:
  %v0_cc85 = load i32, i32* @eax, align 4
  ret i32 %v0_cc85
}

define i32 @_ZN8CLevelDB4ReadISt4pairIcSsEcEEbRKT_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cc86:
  ret i32 0
}

define i32 @function_ccba(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ccba:
  %v0_ccba = load i32, i32* @eax, align 4
  %v1_ccba = trunc i32 %v0_ccba to i8
  %v5_ccba = mul i8 %v1_ccba, 2
  %v20_ccba = zext i8 %v5_ccba to i32
  %v22_ccba = and i32 %v0_ccba, -256
  %v23_ccba = or i32 %v20_ccba, %v22_ccba
  %v1_ccbc = inttoptr i32 %v23_ccba to i8*
  %v2_ccbc = load i8, i8* %v1_ccbc, align 2
  %v5_ccbc = add i8 %v2_ccbc, %v5_ccba
  store i8 %v5_ccbc, i8* %v1_ccbc, align 2
  %v0_ccbe = load i32, i32* @ebp, align 4
  %v1_ccbe = add i32 %v0_ccbe, -92
  %v1_ccc4 = call i32 @function_11162(i32 %v1_ccbe)
  %v0_ccc9 = load i32, i32* @ebp, align 4
  %v1_ccc9 = add i32 %v0_ccc9, -112
  %v2_ccc9 = inttoptr i32 %v1_ccc9 to i32*
  %v3_ccc9 = load i32, i32* %v2_ccc9, align 4
  %v1_ccd0 = add i32 %v0_ccc9, -92
  %v2_ccd6 = call i32 @unknown_1d686(i32 %v1_ccd0, i32 %v3_ccc9)
  %v0_ccdf = load i32, i32* @ebp, align 4
  %v1_ccdf = add i32 %v0_ccdf, -92
  store i32 %v1_ccdf, i32* @eax, align 4
  %v2_cce5 = call i32 @function_114c4(i32 %v1_ccdf, i32 %v2_ccd6)
  %v0_ccea = load i32, i32* @ebp, align 4
  %v1_ccea = add i32 %v0_ccea, -112
  %v2_ccea = inttoptr i32 %v1_ccea to i32*
  %v3_ccea = load i32, i32* %v2_ccea, align 4
  %v1_ccf1 = add i32 %v0_ccea, -92
  %v2_ccf7 = call i32 @unknown_1d6d6(i32 %v1_ccf1, i32 %v3_ccea)
  %v0_ccfc = load i32, i32* @ebp, align 4
  %v1_ccfc = add i32 %v0_ccfc, -92
  %v1_cd02 = call i32 @function_11486(i32 %v1_ccfc)
  %v0_cd11 = load i32, i32* @ebp, align 4
  %v1_cd11 = add i32 %v0_cd11, -92
  store i32 %v1_cd11, i32* @eax, align 4
  %v2_cd17 = call i32 @function_1150e(i32 %v1_cd11, i32 0)
  %v0_cd24 = load i32, i32* @ebp, align 4
  %v1_cd24 = add i32 %v0_cd24, -36
  %v3_cd2a = call i32 @function_14178(i32 %v1_cd24, i32 %v2_cd17, i32 %v1_cd02)
  %v0_cd2f = load i32, i32* @ebp, align 4
  %v1_cd2f = add i32 %v0_cd2f, -28
  ret i32 %v1_cd2f

; uselistorder directives
  uselistorder i8 %v5_ccba, { 1, 0 }
}

define i32 @function_cd39() local_unnamed_addr {
dec_label_pc_cd39:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_cd39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_cd39 = add i32 %v0_cd39, 1082889285
  %v2_cd39 = inttoptr i32 %v1_cd39 to i32*
  %v3_cd39 = load i32, i32* %v2_cd39, align 4
  %v4_cd39 = add i32 %v3_cd39, -1
  store i32 %v4_cd39, i32* %v2_cd39, align 4
  %v0_cd42 = load i32, i32* %eax.global-to-local, align 4
  %v1_cd42 = add i32 %v0_cd42, 20
  store i32 %v1_cd42, i32* %eax.global-to-local, align 4
  %v1_cd45 = inttoptr i32 %v1_cd42 to i32*
  %v2_cd45 = load i32, i32* %v1_cd45, align 4
  store i32 %v2_cd45, i32* %ebx.global-to-local, align 4
  %v0_cd47 = load i32, i32* @ebp, align 4
  %v1_cd47 = add i32 %v0_cd47, -108
  %v2_cd47 = inttoptr i32 %v1_cd47 to i32*
  %v3_cd47 = load i32, i32* %v2_cd47, align 4
  store i32 %v3_cd47, i32* %eax.global-to-local, align 4
  %v1_cd4a = add i32 %v3_cd47, 48
  %v3_cd4d = load i32, i32* %v2_cd47, align 4
  store i32 %v3_cd4d, i32* %eax.global-to-local, align 4
  %v1_cd50 = add i32 %v3_cd4d, 68
  %v2_cd50 = inttoptr i32 %v1_cd50 to i32*
  %v3_cd50 = load i32, i32* %v2_cd50, align 4
  %v1_cd53 = add i32 %v0_cd47, -24
  %v1_cd56 = add i32 %v0_cd47, -28
  %v1_cd5d = add i32 %v0_cd47, -36
  store i32 %v1_cd53, i32* @eax, align 4
  %v6_cd7a = call i32 @function_142b6(i32 %v1_cd53, i32 %v1_cd53, i32 %v3_cd50, i32 %v1_cd4a, i32 %v1_cd5d, i32 %v1_cd56)
  %v1_cd7f = xor i32 %v6_cd7a, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_cd7f = trunc i32 %v1_cd7f to i8
  store i32 %v1_cd7f, i32* %eax.global-to-local, align 4
  %v5_cd82 = icmp eq i8 %v4_cd7f, 0
  br i1 %v5_cd82, label %bb, label %dec_label_pc_cd86

bb:                                               ; preds = %dec_label_pc_cd39
  %v1_cd84 = call i32 @function_cde5()
  store i32 %v1_cd84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_cd86

dec_label_pc_cd86:                                ; preds = %bb, %dec_label_pc_cd39
  %v0_cd86 = load i32, i32* @ebp, align 4
  %v1_cd86 = add i32 %v0_cd86, -24
  store i32 %v1_cd86, i32* %eax.global-to-local, align 4
  %v4_cd91 = trunc i32 %v1_cd86 to i8
  %v5_cd91 = icmp eq i8 %v4_cd91, 0
  br i1 %v5_cd91, label %dec_label_pc_cd9f, label %dec_label_pc_cd95

dec_label_pc_cd95:                                ; preds = %dec_label_pc_cd86
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_cd9a = call i32 @function_ce4f(i32 %v1_cd86)
  store i32 %v1_cd9a, i32* %eax.global-to-local, align 4
  ret i32 %v1_cd9a

dec_label_pc_cd9f:                                ; preds = %dec_label_pc_cd86
  %v1_cd9f = add i32 %v0_cd86, -20
  store i32 %v1_cd9f, i32* %eax.global-to-local, align 4
  ret i32 %v1_cd9f

; uselistorder directives
  uselistorder i32 %v1_cd53, { 0, 2, 1 }
  uselistorder i32 %v0_cd47, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 48, { 0, 1, 8, 2, 9, 10, 3, 4, 5, 6, 7 }
}

define i32 @function_cde5() local_unnamed_addr {
dec_label_pc_cde5:
  %v0_cde5 = load i32, i32* @ebp, align 4
  %v1_cde5 = add i32 %v0_cde5, -28
  ret i32 %v1_cde5
}

define i32 @function_cdf1() local_unnamed_addr {
dec_label_pc_cdf1:
  %eax.global-to-local = alloca i32, align 4
  %v0_cdf1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cdf1
}

define i32 @function_cdfc() local_unnamed_addr {
dec_label_pc_cdfc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_cdfc = load i32, i32* %ecx.global-to-local, align 4
  %v3_cdfc = add i32 %v2_cdfc, ptrtoint (i8** @global_var_1.1176 to i32)
  %v18_cdfc = inttoptr i32 %v2_cdfc to i32*
  store i32 %v3_cdfc, i32* %v18_cdfc, align 4
  %v0_cdfe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cdfe
}

define i32 @function_ce4f(i32 %arg1) local_unnamed_addr {
dec_label_pc_ce4f:
  %v0_ce4f = load i32, i32* @ebp, align 4
  %v1_ce5a = add i32 %v0_ce4f, -28
  ret i32 %v1_ce5a
}

define i32 @function_ce64() local_unnamed_addr {
dec_label_pc_ce64:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_ce64 = load i32, i32* @ebp, align 4
  %v1_ce64 = add i32 %v0_ce64, 76129349
  %v2_ce64 = inttoptr i32 %v1_ce64 to i32*
  %v3_ce64 = load i32, i32* %v2_ce64, align 4
  %v4_ce64 = add i32 %v3_ce64, -1
  store i32 %v4_ce64, i32* %v2_ce64, align 4
  %v0_ce6a = load i32, i32* %eax.global-to-local, align 4
  %v1_ce6a = trunc i32 %v0_ce6a to i8
  %v2_ce6a = and i8 %v1_ce6a, -24
  %v8_ce6a = zext i8 %v2_ce6a to i32
  %v10_ce6a = and i32 %v0_ce6a, -256
  %v11_ce6a = or i32 %v8_ce6a, %v10_ce6a
  store i32 %v11_ce6a, i32* %eax.global-to-local, align 4
  %v1_ce6e = inttoptr i32 %v11_ce6a to i8*
  %v2_ce6e = load i8, i8* %v1_ce6e, align 8
  %v5_ce6e = add i8 %v2_ce6e, %v2_ce6a
  store i8 %v5_ce6e, i8* %v1_ce6e, align 8
  %v0_ce70 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_ce70, i32* @eax, align 4
  %v0_ce72 = load i32, i32* @ebp, align 4
  %v1_ce72 = add i32 %v0_ce72, -12
  %v2_ce72 = inttoptr i32 %v1_ce72 to i32*
  %v3_ce72 = load i32, i32* %v2_ce72, align 4
  %v1_ce75 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ce75 = icmp eq i32 %v1_ce75, %v3_ce72
  br i1 %v3_ce75, label %bb, label %dec_label_pc_ce82

bb:                                               ; preds = %dec_label_pc_ce64
  %v1_ce7c = call i32 @function_cf25()
  store i32 %v1_ce7c, i32* @eax, align 4
  br label %dec_label_pc_ce82

dec_label_pc_ce82:                                ; preds = %bb, %dec_label_pc_ce64
  %v0_ce82 = call i32 @function_cf20()
  store i32 %v0_ce82, i32* %eax.global-to-local, align 4
  ret i32 %v0_ce82
}

define i32 @function_ce96() local_unnamed_addr {
dec_label_pc_ce96:
  %v0_ce96 = call i32 @function_ced8()
  ret i32 %v0_ce96
}

define i32 @function_ce98() local_unnamed_addr {
dec_label_pc_ce98:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_ce98 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_ce98, i32* %esi.global-to-local, align 4
  %v0_ce9a = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_ce9a, i32* %ebx.global-to-local, align 4
  %v0_ce9c = load i32, i32* %ebp.global-to-local, align 4
  %v1_ce9c = add i32 %v0_ce9c, -64
  store i32 %v1_ce9c, i32* @eax, align 4
  %v1_cea2 = call i32 @function_112e4(i32 %v1_ce9c)
  %v0_cea7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_cea7, i32* %eax.global-to-local, align 4
  %v0_cea9 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_cea9, i32* %edx.global-to-local, align 4
  ret i32 %v0_cea7
}

define i32 @function_ceb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_ceb0:
  %v4_ceb1 = load i32, i32* @eax, align 4
  ret i32 %v4_ceb1
}

define i32 @function_ceb6() local_unnamed_addr {
dec_label_pc_ceb6:
  %v0_ceb8 = call i32 @function_ced8()
  ret i32 %v0_ceb8

; uselistorder directives
  uselistorder i32 ()* @function_ced8, { 1, 0 }
}

define i32 @function_cecf() local_unnamed_addr {
dec_label_pc_cecf:
  %v1_cecf = call i32 @function_ce4f(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_cecf

; uselistorder directives
  uselistorder i32 (i32)* @function_ce4f, { 1, 0 }
}

define i32 @function_ced8() local_unnamed_addr {
dec_label_pc_ced8:
  %v0_ced8 = load i32, i32* @ebp, align 4
  %v1_ced8 = add i32 %v0_ced8, -24
  %v1_cee3 = call i32 @function_cee9(i32 %v1_ced8)
  ret i32 %v1_cee3
}

define i32 @function_cee5() local_unnamed_addr {
dec_label_pc_cee5:
  %eax.global-to-local = alloca i32, align 4
  %v0_cee5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cee5
}

define i32 @function_cee9(i32 %arg1) local_unnamed_addr {
dec_label_pc_cee9:
  %v0_cee9 = load i32, i32* @ebp, align 4
  %v1_cee9 = add i32 %v0_cee9, -28
  ret i32 %v1_cee9
}

define i32 @function_cef4() local_unnamed_addr {
dec_label_pc_cef4:
  %v0_cef4 = call i32 @function_cefa()
  ret i32 %v0_cef4
}

define i32 @function_cef6() local_unnamed_addr {
dec_label_pc_cef6:
  %eax.global-to-local = alloca i32, align 4
  %v0_cef6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cef6
}

define i32 @function_cefa() local_unnamed_addr {
dec_label_pc_cefa:
  %v0_cefa = load i32, i32* @ebp, align 4
  %v1_cefa = add i32 %v0_cefa, -92
  store i32 %v1_cefa, i32* @eax, align 4
  %v1_cf00 = call i32 @function_112e4(i32 %v1_cefa)
  %v0_cf05 = load i32, i32* @esi, align 4
  store i32 %v0_cf05, i32* @eax, align 4
  %v0_cf07 = load i32, i32* @ebx, align 4
  %v10_cf0b = icmp eq i32 %v0_cf07, -1
  br i1 %v10_cf0b, label %bb, label %dec_label_pc_cf10

bb:                                               ; preds = %dec_label_pc_cefa
  %v1_cf0e = call i32 @function_cf18()
  br label %dec_label_pc_cf10

dec_label_pc_cf10:                                ; preds = %bb, %dec_label_pc_cefa
  %v3_cf10 = phi i32 [ %v1_cf0e, %bb ], [ %v0_cf05, %dec_label_pc_cefa ]
  ret i32 %v3_cf10

; uselistorder directives
  uselistorder i32 (i32)* @function_112e4, { 1, 0 }
}

define i32 @function_cf18() local_unnamed_addr {
dec_label_pc_cf18:
  %v3_cf18 = load i32, i32* @eax, align 4
  ret i32 %v3_cf18
}

define i32 @function_cf20() local_unnamed_addr {
dec_label_pc_cf20:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cf25() local_unnamed_addr {
dec_label_pc_cf25:
  %v0_cf2b = load i32, i32* @eax, align 4
  ret i32 %v0_cf2b
}

define i32 @_ZN11CDataStreamlsISt4pairIc7uint256EEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cf2c:
  %v1_cf4c = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_cf4c = inttoptr i32 %v1_cf4c to i32*
  %v3_cf4c = load i32, i32* %v2_cf4c, align 4
  %v1_cf52 = add i32 %arg1, 20
  %v2_cf52 = inttoptr i32 %v1_cf52 to i32*
  %v3_cf52 = load i32, i32* %v2_cf52, align 4
  %v4_cf6a = call i32 @unknown_1d9d5(i32 %arg1, i32 %arg2, i32 %v3_cf52, i32 %v3_cf4c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_cf7e

bb:                                               ; preds = %dec_label_pc_cf2c
  %v1_cf7c = call i32 @function_cf83()
  br label %dec_label_pc_cf7e

dec_label_pc_cf7e:                                ; preds = %bb, %dec_label_pc_cf2c
  %v2_cf7c = phi i32 [ %v1_cf7c, %bb ], [ %arg1, %dec_label_pc_cf2c ]
  ret i32 %v2_cf7c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_cf83() local_unnamed_addr {
dec_label_pc_cf83:
  %v0_cf84 = load i32, i32* @eax, align 4
  ret i32 %v0_cf84
}

define i32 @_ZN11CDataStreamrsI15CDiskBlockIndexEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cf86:
  %v1_cfa6 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_cfa6 = inttoptr i32 %v1_cfa6 to i32*
  %v3_cfa6 = load i32, i32* %v2_cfa6, align 4
  %v1_cfac = add i32 %arg1, 20
  %v2_cfac = inttoptr i32 %v1_cfac to i32*
  %v3_cfac = load i32, i32* %v2_cfac, align 4
  %v4_cfc4 = call i32 @unknown_1dab4(i32 %arg1, i32 %arg2, i32 %v3_cfac, i32 %v3_cfa6)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_cfd8

bb:                                               ; preds = %dec_label_pc_cf86
  %v1_cfd6 = call i32 @function_cfdd()
  br label %dec_label_pc_cfd8

dec_label_pc_cfd8:                                ; preds = %bb, %dec_label_pc_cf86
  %v2_cfd6 = phi i32 [ %v1_cfd6, %bb ], [ %arg1, %dec_label_pc_cf86 ]
  ret i32 %v2_cfd6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_cfdd() local_unnamed_addr {
dec_label_pc_cfdd:
  %v0_cfde = load i32, i32* @eax, align 4
  ret i32 %v0_cfde
}

define i32 @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_cfdf:
  %v1_cffc = call i32 @unknown_1db69(i32 %arg1)
  store i32 %v1_cffc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d00d

bb:                                               ; preds = %dec_label_pc_cfdf
  %v1_d00b = call i32 @function_d012()
  br label %dec_label_pc_d00d

dec_label_pc_d00d:                                ; preds = %bb, %dec_label_pc_cfdf
  %v2_d00b = phi i32 [ %v1_d00b, %bb ], [ %v1_cffc, %dec_label_pc_cfdf ]
  ret i32 %v2_d00b
}

define i32 @function_d012() local_unnamed_addr {
dec_label_pc_d012:
  %v0_d013 = load i32, i32* @eax, align 4
  ret i32 %v0_d013
}

define i32 @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_d014:
  %v2_d03a = load i32, i32* %arg3, align 4
  %v15_d050109 = icmp eq i32 %arg1, %arg2
  %v1_d053110 = icmp eq i1 %v15_d050109, false
  %v5_d056114 = icmp eq i1 %v1_d053110, false
  %v1_d058115 = icmp eq i1 %v5_d056114, false
  br i1 %v1_d058115, label %dec_label_pc_d041, label %dec_label_pc_d05a

dec_label_pc_d041:                                ; preds = %dec_label_pc_d014, %dec_label_pc_d041
  %stack_var_-32.0.in116 = phi i32 [ %v5_d049, %dec_label_pc_d041 ], [ %arg1, %dec_label_pc_d014 ]
  %v2_d047 = inttoptr i32 %stack_var_-32.0.in116 to i32*
  store i32 %v2_d03a, i32* %v2_d047, align 4
  %v5_d049 = add i32 %stack_var_-32.0.in116, ptrtoint (i8** @global_var_4.1177 to i32)
  %v15_d050 = icmp eq i32 %v5_d049, %arg2
  %v1_d053 = icmp eq i1 %v15_d050, false
  %v5_d056 = icmp eq i1 %v1_d053, false
  %v1_d058 = icmp eq i1 %v5_d056, false
  br i1 %v1_d058, label %dec_label_pc_d041, label %dec_label_pc_d05a

dec_label_pc_d05a:                                ; preds = %dec_label_pc_d041, %dec_label_pc_d014
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d066

bb:                                               ; preds = %dec_label_pc_d05a
  %v1_d064 = call i32 @function_d06b()
  br label %dec_label_pc_d066

dec_label_pc_d066:                                ; preds = %bb, %dec_label_pc_d05a
  %v2_d064 = phi i32 [ %v1_d064, %bb ], [ 0, %dec_label_pc_d05a ]
  ret i32 %v2_d064

; uselistorder directives
  uselistorder i32 %v5_d049, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_d041, { 1, 0 }
}

define i32 @function_d06b() local_unnamed_addr {
dec_label_pc_d06b:
  %v0_d06c = load i32, i32* @eax, align 4
  ret i32 %v0_d06c
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_d06e:
  %v2_d088 = load i32, i32* %arg1, align 4
  %v1_d08a = icmp eq i32 %v2_d088, 0
  br i1 %v1_d08a, label %dec_label_pc_d0af, label %dec_label_pc_d08e

dec_label_pc_d08e:                                ; preds = %dec_label_pc_d06e
  %v2_d09d = load i32, i32* %arg1, align 4
  %v4_d0a4 = trunc i32 %v2_d09d to i8
  %v5_d0a4 = icmp eq i8 %v4_d0a4, 0
  br i1 %v5_d0a4, label %dec_label_pc_d0af, label %dec_label_pc_d0b4

dec_label_pc_d0af:                                ; preds = %dec_label_pc_d08e, %dec_label_pc_d06e
  br label %dec_label_pc_d0b4

dec_label_pc_d0b4:                                ; preds = %dec_label_pc_d08e, %dec_label_pc_d0af
  %storemerge = phi i8 [ 0, %dec_label_pc_d0af ], [ ptrtoint (i8** @global_var_1.1176 to i8), %dec_label_pc_d08e ]
  %v5_d0b4 = icmp eq i8 %storemerge, 0
  br i1 %v5_d0b4, label %dec_label_pc_d0c1, label %dec_label_pc_d0b8

dec_label_pc_d0b8:                                ; preds = %dec_label_pc_d0b4
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_d0c1

dec_label_pc_d0c1:                                ; preds = %dec_label_pc_d0b8, %dec_label_pc_d0b4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d0cd

bb:                                               ; preds = %dec_label_pc_d0c1
  %v1_d0cb = call i32 @function_d0d2()
  br label %dec_label_pc_d0cd

dec_label_pc_d0cd:                                ; preds = %bb, %dec_label_pc_d0c1
  %v2_d0cb = phi i32 [ %v1_d0cb, %bb ], [ 0, %dec_label_pc_d0c1 ]
  ret i32 %v2_d0cb

; uselistorder directives
  uselistorder label %dec_label_pc_d0b4, { 1, 0 }
}

define i32 @function_d0d2() local_unnamed_addr {
dec_label_pc_d0d2:
  %v0_d0d3 = load i32, i32* @eax, align 4
  ret i32 %v0_d0d3
}

define i32 @_Z21GetSerializeSize_implIhSaIhEEjRKSt6vectorIT_T0_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d0d4:
  %v2_d127 = mul i32 %arg1, 2
  store i32 %v2_d127, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d135

bb:                                               ; preds = %dec_label_pc_d0d4
  %v3_d133 = call i32 @function_d13a(i32 %arg1, i32 0)
  br label %dec_label_pc_d135

dec_label_pc_d135:                                ; preds = %bb, %dec_label_pc_d0d4
  %v4_d133 = phi i32 [ %v3_d133, %bb ], [ %v2_d127, %dec_label_pc_d0d4 ]
  ret i32 %v4_d133

; uselistorder directives
  uselistorder i32 %v2_d127, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d13a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d13a:
  %v0_d13f = load i32, i32* @eax, align 4
  ret i32 %v0_d13f
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_d140:
  %v1_d15d = call i32 @function_14daa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d16e

bb:                                               ; preds = %dec_label_pc_d140
  %v1_d16c = call i32 @function_d173()
  br label %dec_label_pc_d16e

dec_label_pc_d16e:                                ; preds = %bb, %dec_label_pc_d140
  %v2_d16c = phi i32 [ %v1_d16c, %bb ], [ 0, %dec_label_pc_d140 ]
  ret i32 %v2_d16c
}

define i32 @function_d173() local_unnamed_addr {
dec_label_pc_d173:
  %v0_d174 = load i32, i32* @eax, align 4
  ret i32 %v0_d174
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_d176:
  %v1_d193 = call i32 @unknown_1dd2e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d1a4

bb:                                               ; preds = %dec_label_pc_d176
  %v1_d1a2 = call i32 @function_d1a9()
  br label %dec_label_pc_d1a4

dec_label_pc_d1a4:                                ; preds = %bb, %dec_label_pc_d176
  %v2_d1a2 = phi i32 [ %v1_d1a2, %bb ], [ 0, %dec_label_pc_d176 ]
  ret i32 %v2_d1a2
}

define i32 @function_d1a9() local_unnamed_addr {
dec_label_pc_d1a9:
  %v0_d1aa = load i32, i32* @eax, align 4
  ret i32 %v0_d1aa
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_d1ac:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_d1c7 = add i32 %tmp101, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_d1c7 = inttoptr i32 %v1_d1c7 to i32*
  %v3_d1c7 = load i32, i32* %v2_d1c7, align 4
  %v2_d1cf = load i32, i32* %arg1, align 4
  %v2_d1d3 = sub i32 %v3_d1c7, %v2_d1cf
  store i32 %v2_d1d3, i32* @ecx, align 4
  %v2_d1dc = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 4
  %v3_d1ec = call i32 @function_1a7c6(i32 %tmp101, i32 %v2_d1dc, i32 %v2_d1d3)
  store i32 %tmp101, i32* @eax, align 4
  %v1_d1f7 = call i32 @function_1a2ec(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d208

bb:                                               ; preds = %dec_label_pc_d1ac
  %v1_d206 = call i32 @function_d226()
  store i32 %v1_d206, i32* @eax, align 4
  br label %dec_label_pc_d208

dec_label_pc_d208:                                ; preds = %bb, %dec_label_pc_d1ac
  %v0_d208 = call i32 @function_d221()
  ret i32 %v0_d208

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 4, 0 }
}

define i32 @function_d20b() local_unnamed_addr {
dec_label_pc_d20b:
  %eax.global-to-local = alloca i32, align 4
  %v0_d20b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d20b
}

define i32 @function_d221() local_unnamed_addr {
dec_label_pc_d221:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_d226() local_unnamed_addr {
dec_label_pc_d226:
  %v0_d22b = load i32, i32* @eax, align 4
  ret i32 %v0_d22b
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_d22c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d252

bb:                                               ; preds = %dec_label_pc_d22c
  %v2_d250 = call i32 @function_d257(i32 %arg1)
  br label %dec_label_pc_d252

dec_label_pc_d252:                                ; preds = %bb, %dec_label_pc_d22c
  %v3_d250 = phi i32 [ %v2_d250, %bb ], [ %arg1, %dec_label_pc_d22c ]
  ret i32 %v3_d250
}

define i32 @function_d257(i32 %arg1) local_unnamed_addr {
dec_label_pc_d257:
  %v0_d258 = load i32, i32* @eax, align 4
  ret i32 %v0_d258
}

define i32 @_ZSt8_DestroyIPc25zero_after_free_allocatorIcEEvT_S3_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d259:
  %v15_d29f112 = icmp eq i32 %arg1, %arg2
  %v1_d2a2113 = icmp eq i1 %v15_d29f112, false
  %v5_d2a5117 = icmp eq i1 %v1_d2a2113, false
  %v1_d2a7118 = icmp eq i1 %v5_d2a5117, false
  br i1 %v1_d2a7118, label %dec_label_pc_d27e, label %dec_label_pc_d2a9

dec_label_pc_d27e:                                ; preds = %dec_label_pc_d259, %dec_label_pc_d27e
  %stack_var_-32.0.in119 = phi i32 [ %v5_d298, %dec_label_pc_d27e ], [ %arg1, %dec_label_pc_d259 ]
  %v2_d284 = call i32 @unknown_1de63(i32 %stack_var_-32.0.in119)
  %v5_d298 = add i32 %stack_var_-32.0.in119, ptrtoint (i8** @global_var_1.1176 to i32)
  %v15_d29f = icmp eq i32 %v5_d298, %arg2
  %v1_d2a2 = icmp eq i1 %v15_d29f, false
  %v5_d2a5 = icmp eq i1 %v1_d2a2, false
  %v1_d2a7 = icmp eq i1 %v5_d2a5, false
  br i1 %v1_d2a7, label %dec_label_pc_d27e, label %dec_label_pc_d2a9

dec_label_pc_d2a9:                                ; preds = %dec_label_pc_d27e, %dec_label_pc_d259
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d2b5

bb:                                               ; preds = %dec_label_pc_d2a9
  %v1_d2b3 = call i32 @function_d2ba()
  br label %dec_label_pc_d2b5

dec_label_pc_d2b5:                                ; preds = %bb, %dec_label_pc_d2a9
  %v2_d2b3 = phi i32 [ %v1_d2b3, %bb ], [ 0, %dec_label_pc_d2a9 ]
  ret i32 %v2_d2b3

; uselistorder directives
  uselistorder i32 %v5_d298, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.in119, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_d27e, { 1, 0 }
}

define i32 @function_d2ba() local_unnamed_addr {
dec_label_pc_d2ba:
  %v0_d2bb = load i32, i32* @eax, align 4
  ret i32 %v0_d2bb
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d2bc:
  %v2_d2e6 = call i32 @unknown_1def4(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d2f7

bb:                                               ; preds = %dec_label_pc_d2bc
  %v1_d2f5 = call i32 @function_d2fc()
  br label %dec_label_pc_d2f7

dec_label_pc_d2f7:                                ; preds = %bb, %dec_label_pc_d2bc
  %v2_d2f5 = phi i32 [ %v1_d2f5, %bb ], [ 0, %dec_label_pc_d2bc ]
  ret i32 %v2_d2f5
}

define i32 @function_d2fc() local_unnamed_addr {
dec_label_pc_d2fc:
  %v0_d2fd = load i32, i32* @eax, align 4
  ret i32 %v0_d2fd
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE22_M_initialize_dispatchIPKcEEvT_S6_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_d2fe:
  %edx.global-to-local = alloca i32, align 4
  %v0_d328 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_d328, 16777216
  %v8_d340 = sdiv i32 %sext, 16777216
  %v9_d340 = sext i8 %arg4 to i32
  %v10_d340 = call i32 @unknown_1df96(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_d340, i32 %v9_d340, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d351

bb:                                               ; preds = %dec_label_pc_d2fe
  %v1_d34f = call i32 @function_d356()
  br label %dec_label_pc_d351

dec_label_pc_d351:                                ; preds = %bb, %dec_label_pc_d2fe
  %v2_d34f = phi i32 [ %v1_d34f, %bb ], [ 0, %dec_label_pc_d2fe ]
  ret i32 %v2_d34f

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d356() local_unnamed_addr {
dec_label_pc_d356:
  %v0_d357 = load i32, i32* @eax, align 4
  ret i32 %v0_d357
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d358:
  %v1_d378 = inttoptr i32 %arg2 to i32*
  %v2_d378 = load i32, i32* %v1_d378, align 4
  store i32 %v2_d378, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d38b

bb:                                               ; preds = %dec_label_pc_d358
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_d389 = call i32 @function_d390(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_d38b

dec_label_pc_d38b:                                ; preds = %bb, %dec_label_pc_d358
  %v4_d389 = phi i32 [ %v3_d389, %bb ], [ 0, %dec_label_pc_d358 ]
  ret i32 %v4_d389

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_d390(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d390:
  %v0_d391 = load i32, i32* @eax, align 4
  ret i32 %v0_d391
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d392:
  %v1_d3b2 = inttoptr i32 %arg2 to i32*
  %v2_d3b2 = load i32, i32* %v1_d3b2, align 4
  store i32 %v2_d3b2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d3c5

bb:                                               ; preds = %dec_label_pc_d392
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_d3c3 = call i32 @function_d3ca(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_d3c5

dec_label_pc_d3c5:                                ; preds = %bb, %dec_label_pc_d392
  %v4_d3c3 = phi i32 [ %v3_d3c3, %bb ], [ 0, %dec_label_pc_d392 ]
  ret i32 %v4_d3c3

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_d3ca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d3ca:
  %v0_d3cb = load i32, i32* @eax, align 4
  ret i32 %v0_d3cb
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEC1ERKS1_() local_unnamed_addr {
dec_label_pc_d3cc:
  %eax.global-to-local = alloca i32, align 4
  %v2_d3cd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_d3cd
}

define i32 @function_d3d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d3d0:
  %v0_d3d1 = load i32, i32* @ebx, align 4
  %v1_d3d1 = add i32 %v0_d3d1, 1166608453
  %v2_d3d1 = inttoptr i32 %v1_d3d1 to i8*
  %v3_d3d1 = load i8, i8* %v2_d3d1, align 1
  %v4_d3d1 = load i32, i32* @ecx, align 4
  %v5_d3d1 = trunc i32 %v4_d3d1 to i8
  %v6_d3d1 = sub i8 %v3_d3d1, %v5_d3d1
  store i8 %v6_d3d1, i8* %v2_d3d1, align 1
  %v0_d3d9 = load i32, i32* @ebp, align 4
  %v1_d3dc = add i32 %v0_d3d9, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_d3dc, i32* @ebp, align 4
  %v0_d3df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d3e4 = add i32 %v0_d3d9, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12))
  %v3_d3e4 = inttoptr i32 %v2_d3e4 to i32*
  store i32 %v0_d3df, i32* %v3_d3e4, align 4
  %v0_d3e9 = load i32, i32* @ebp, align 4
  %v1_d3e9 = add i32 %v0_d3e9, -32
  %v2_d3e9 = inttoptr i32 %v1_d3e9 to i32*
  %v3_d3e9 = load i32, i32* %v2_d3e9, align 4
  %v1_d3ec = inttoptr i32 %v3_d3e9 to i32*
  %v2_d3ec = load i32, i32* %v1_d3ec, align 4
  %v1_d3ee = add i32 %v0_d3e9, -28
  %v2_d3ee = inttoptr i32 %v1_d3ee to i32*
  %v3_d3ee = load i32, i32* %v2_d3ee, align 4
  %v2_d3f1 = inttoptr i32 %v3_d3ee to i32*
  store i32 %v2_d3ec, i32* %v2_d3f1, align 4
  %v0_d3f3 = load i32, i32* @ebp, align 4
  %v1_d3f3 = add i32 %v0_d3f3, -12
  %v2_d3f3 = inttoptr i32 %v1_d3f3 to i32*
  %v3_d3f3 = load i32, i32* %v2_d3f3, align 4
  %v1_d3f6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d3f6 = xor i32 %v1_d3f6, %v3_d3f3
  %v3_d3f6 = icmp eq i32 %v2_d3f6, 0
  store i32 %v2_d3f6, i32* @eax, align 4
  br i1 %v3_d3f6, label %bb, label %dec_label_pc_d3ff

bb:                                               ; preds = %dec_label_pc_d3d0
  %v1_d3fd = call i32 @function_d404()
  br label %dec_label_pc_d3ff

dec_label_pc_d3ff:                                ; preds = %bb, %dec_label_pc_d3d0
  %v3_d3fd = phi i32 [ %v1_d3fd, %bb ], [ %v2_d3f6, %dec_label_pc_d3d0 ]
  ret i32 %v3_d3fd
}

define i32 @function_d404() local_unnamed_addr {
dec_label_pc_d404:
  %v0_d405 = load i32, i32* @eax, align 4
  ret i32 %v0_d405
}

define i32 @_ZNKSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_d406:
  ret i32 %arg1
}

define i32 @function_d420(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d420:
  %v0_d420 = load i32, i32* @ebp, align 4
  %v1_d420 = add i32 %v0_d420, -12
  %v2_d420 = inttoptr i32 %v1_d420 to i32*
  %v3_d420 = load i32, i32* %v2_d420, align 4
  %v1_d423 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_d423 = icmp eq i32 %v1_d423, %v3_d420
  br i1 %v3_d423, label %bb, label %dec_label_pc_d420.dec_label_pc_d42c_crit_edge

dec_label_pc_d420.dec_label_pc_d42c_crit_edge:    ; preds = %dec_label_pc_d420
  %v2_d42a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d42c

bb:                                               ; preds = %dec_label_pc_d420
  %v1_d42a = call i32 @function_d431()
  br label %dec_label_pc_d42c

dec_label_pc_d42c:                                ; preds = %dec_label_pc_d420.dec_label_pc_d42c_crit_edge, %bb
  %v2_d42a = phi i32 [ %v2_d42a.pre, %dec_label_pc_d420.dec_label_pc_d42c_crit_edge ], [ %v1_d42a, %bb ]
  ret i32 %v2_d42a

; uselistorder directives
  uselistorder label %dec_label_pc_d42c, { 1, 0 }
}

define i32 @function_d431() local_unnamed_addr {
dec_label_pc_d431:
  %v0_d432 = load i32, i32* @eax, align 4
  ret i32 %v0_d432
}

define i32 @_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d433:
  ret i32 %arg2
}

define i32 @function_d443() local_unnamed_addr {
dec_label_pc_d443:
  %eax.global-to-local = alloca i32, align 4
  %v15_d443 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_d443
}

define i32 @function_d483() local_unnamed_addr {
dec_label_pc_d483:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_d483 = load i32, i32* %ecx.global-to-local, align 4
  %v1_d483 = sub i32 %v0_d483, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_d483, i32* %ecx.global-to-local, align 4
  %v0_d485 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d485
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_erase_at_endEPc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d486:
  %v0_d498 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_d4a9 = call i32 @function_1a6b2(i32 %arg1)
  %v1_d4b1 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_d4b1 = inttoptr i32 %v1_d4b1 to i32*
  %v3_d4b1 = load i32, i32* %v2_d4b1, align 4
  %v3_d4c2 = call i32 @function_1a6df(i32 %arg2, i32 %v3_d4b1, i32 %v1_d4a9)
  store i32 %arg2, i32* %v2_d4b1, align 4
  ret i32 %v0_d498

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d4d3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d4d3:
  %v0_d4d3 = load i32, i32* @eax, align 4
  %v1_d4d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d4d3 = xor i32 %v1_d4d3, %v0_d4d3
  %v3_d4d3 = icmp eq i32 %v2_d4d3, 0
  store i32 %v2_d4d3, i32* @eax, align 4
  br i1 %v3_d4d3, label %bb, label %dec_label_pc_d4dc

bb:                                               ; preds = %dec_label_pc_d4d3
  %v1_d4da = call i32 @function_d4e1()
  br label %dec_label_pc_d4dc

dec_label_pc_d4dc:                                ; preds = %bb, %dec_label_pc_d4d3
  %v2_d4da = phi i32 [ %v1_d4da, %bb ], [ %v2_d4d3, %dec_label_pc_d4d3 ]
  ret i32 %v2_d4da
}

define i32 @function_d4e1() local_unnamed_addr {
dec_label_pc_d4e1:
  %v0_d4e2 = load i32, i32* @eax, align 4
  ret i32 %v0_d4e2
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_d4e4:
  %v1_d509 = call i32 @unknown_1e39a(i32 %arg1)
  store i32 %v1_d509, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d51a

bb:                                               ; preds = %dec_label_pc_d4e4
  %v1_d518 = call i32 @function_d51f()
  br label %dec_label_pc_d51a

dec_label_pc_d51a:                                ; preds = %bb, %dec_label_pc_d4e4
  %v2_d518 = phi i32 [ %v1_d518, %bb ], [ %v1_d509, %dec_label_pc_d4e4 ]
  ret i32 %v2_d518
}

define i32 @function_d51f() local_unnamed_addr {
dec_label_pc_d51f:
  %v0_d520 = load i32, i32* @eax, align 4
  ret i32 %v0_d520
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_d522:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_d53c = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_d53c = inttoptr i32 %v1_d53c to i32*
  %v3_d53c = load i32, i32* %v2_d53c, align 4
  %v2_d544 = load i32, i32* %arg1, align 4
  %v2_d548 = sub i32 %v3_d53c, %v2_d544
  store i32 %v2_d548, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d558

bb:                                               ; preds = %dec_label_pc_d522
  %v2_d556 = call i32 @function_d55d(i32 %tmp100)
  br label %dec_label_pc_d558

dec_label_pc_d558:                                ; preds = %bb, %dec_label_pc_d522
  %v3_d556 = phi i32 [ %v2_d556, %bb ], [ %v2_d548, %dec_label_pc_d522 ]
  ret i32 %v3_d556
}

define i32 @function_d55d(i32 %arg1) local_unnamed_addr {
dec_label_pc_d55d:
  %v0_d55e = load i32, i32* @eax, align 4
  ret i32 %v0_d55e
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE20_M_allocate_and_copyIPcEES4_jT_S5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d560:
  %v2_d597 = call i32 @unknown_1e2a6(i32 %arg1, i32 %arg2)
  %v4_d5c2 = call i32 @unknown_1e445(i32 %arg3, i32 %arg4, i32 %v2_d597, i32 %arg1)
  store i32 %v2_d597, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d5d6

bb:                                               ; preds = %dec_label_pc_d560
  %v1_d5d4 = call i32 @function_d614()
  store i32 %v1_d5d4, i32* @eax, align 4
  br label %dec_label_pc_d5d6

dec_label_pc_d5d6:                                ; preds = %bb, %dec_label_pc_d560
  %v0_d5d6 = call i32 @function_d60f()
  ret i32 %v0_d5d6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d5d9() local_unnamed_addr {
dec_label_pc_d5d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_d5d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d5d9
}

define i32 @function_d60f() local_unnamed_addr {
dec_label_pc_d60f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_d614() local_unnamed_addr {
dec_label_pc_d614:
  %v0_d619 = load i32, i32* @eax, align 4
  ret i32 %v0_d619
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE13_M_deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d61a:
  %v10_d63d = icmp eq i32 %arg2, 0
  br i1 %v10_d63d, label %dec_label_pc_d65c, label %dec_label_pc_d643

dec_label_pc_d643:                                ; preds = %dec_label_pc_d61a
  %v3_d657 = call i32 @unknown_1e57c(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_d65c

dec_label_pc_d65c:                                ; preds = %dec_label_pc_d643, %dec_label_pc_d61a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d668

bb:                                               ; preds = %dec_label_pc_d65c
  %v1_d666 = call i32 @function_d66d()
  br label %dec_label_pc_d668

dec_label_pc_d668:                                ; preds = %bb, %dec_label_pc_d65c
  %v2_d666 = phi i32 [ %v1_d666, %bb ], [ 0, %dec_label_pc_d65c ]
  ret i32 %v2_d666
}

define i32 @function_d66d() local_unnamed_addr {
dec_label_pc_d66d:
  %v0_d66e = load i32, i32* @eax, align 4
  ret i32 %v0_d66e
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE9constructEPcRKc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_d670:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_1.1176 to i8*), i8** %stack_var_-60, align 4
  %v3_d6a1 = call i32 @function_f5ce(i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 %arg2)
  store i32 %v3_d6a1, i32* %eax.global-to-local, align 4
  %v1_d6a6 = icmp eq i32 %v3_d6a1, 0
  br i1 %v1_d6a6, label %bb, label %dec_label_pc_d6aa

bb:                                               ; preds = %dec_label_pc_d670
  %v1_d6a8 = load i8*, i8** %stack_var_-60, align 4
  %v2_d6a8 = ptrtoint i8* %v1_d6a8 to i32
  %v3_d6a8 = call i32 @function_d6b2(i32 %v2_d6a8)
  store i32 %v3_d6a8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d6aa

dec_label_pc_d6aa:                                ; preds = %bb, %dec_label_pc_d670
  %v2_d6b0 = phi i32 [ %v3_d6a8, %bb ], [ %v3_d6a1, %dec_label_pc_d670 ]
  %v2_d6ad = load i8, i8* %arg3, align 1
  %v3_d6b0 = inttoptr i32 %v2_d6b0 to i8*
  store i8 %v2_d6ad, i8* %v3_d6b0, align 1
  %v4_d6b0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_d6b0

; uselistorder directives
  uselistorder i8** %stack_var_-60, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_d6b2, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_d6b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_d6b2:
  %v0_d6b2 = load i32, i32* @ebp, align 4
  %v1_d6b2 = add i32 %v0_d6b2, -12
  %v2_d6b2 = inttoptr i32 %v1_d6b2 to i32*
  %v3_d6b2 = load i32, i32* %v2_d6b2, align 4
  %v1_d6b5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d6b5 = xor i32 %v1_d6b5, %v3_d6b2
  %v3_d6b5 = icmp eq i32 %v2_d6b5, 0
  store i32 %v2_d6b5, i32* @eax, align 4
  br i1 %v3_d6b5, label %bb, label %dec_label_pc_d6be

bb:                                               ; preds = %dec_label_pc_d6b2
  %v1_d6bc = call i32 @function_d6c3()
  br label %dec_label_pc_d6be

dec_label_pc_d6be:                                ; preds = %bb, %dec_label_pc_d6b2
  %v2_d6bc = phi i32 [ %v1_d6bc, %bb ], [ %v2_d6b5, %dec_label_pc_d6b2 ]
  ret i32 %v2_d6bc
}

define i32 @function_d6c3() local_unnamed_addr {
dec_label_pc_d6c3:
  %v0_d6c4 = load i32, i32* @eax, align 4
  ret i32 %v0_d6c4
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_d6c6:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d6ec

bb:                                               ; preds = %dec_label_pc_d6c6
  %v2_d6ea = call i32 @function_d6f1(i32 %arg1)
  br label %dec_label_pc_d6ec

dec_label_pc_d6ec:                                ; preds = %bb, %dec_label_pc_d6c6
  %v3_d6ea = phi i32 [ %v2_d6ea, %bb ], [ %arg1, %dec_label_pc_d6c6 ]
  ret i32 %v3_d6ea
}

define i32 @function_d6f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_d6f1:
  %v0_d6f2 = load i32, i32* @eax, align 4
  ret i32 %v0_d6f2
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE18_M_insert_dispatchIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_d6f4:
  %edx.global-to-local = alloca i32, align 4
  %v0_d724 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_d724, 16777216
  %v5_d743 = sdiv i32 %sext, 16777216
  %v6_d743 = call i32 @unknown_1e852(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_d743)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d754

bb:                                               ; preds = %dec_label_pc_d6f4
  %v1_d752 = call i32 @function_d759()
  br label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %bb, %dec_label_pc_d6f4
  %v2_d752 = phi i32 [ %v1_d752, %bb ], [ 0, %dec_label_pc_d6f4 ]
  ret i32 %v2_d752
}

define i32 @function_d759() local_unnamed_addr {
dec_label_pc_d759:
  %v0_d75a = load i32, i32* @eax, align 4
  ret i32 %v0_d75a
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE7destroyEPc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d75c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d785

bb:                                               ; preds = %dec_label_pc_d75c
  %v3_d783 = call i32 @function_d78a(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_d785

dec_label_pc_d785:                                ; preds = %bb, %dec_label_pc_d75c
  %v4_d783 = phi i32 [ %v3_d783, %bb ], [ 0, %dec_label_pc_d75c ]
  ret i32 %v4_d783
}

define i32 @function_d78a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d78a:
  %v0_d78b = load i32, i32* @eax, align 4
  ret i32 %v0_d78b
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_Riii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d78c:
  store i32 %arg1, i32* @eax, align 4
  %v8_d7ca = call i32 @function_12192(i32 %arg1, i32 %arg2, i32 ptrtoint (i8** @global_var_4.1177 to i32), i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d7db

bb:                                               ; preds = %dec_label_pc_d78c
  %v1_d7d9 = call i32 @function_d7e0()
  br label %dec_label_pc_d7db

dec_label_pc_d7db:                                ; preds = %bb, %dec_label_pc_d78c
  %v2_d7d9 = phi i32 [ %v1_d7d9, %bb ], [ 0, %dec_label_pc_d78c ]
  ret i32 %v2_d7d9

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_d7e0() local_unnamed_addr {
dec_label_pc_d7e0:
  %v0_d7e1 = load i32, i32* @eax, align 4
  ret i32 %v0_d7e1
}

define i32 @_Z9SerializeI11CDataStreamEvRT_iii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d7e2:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_d813 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v8_d820 = call i32 @function_12350(i32 %arg1, i32 %v2_d813, i32 ptrtoint (i8** @global_var_4.1177 to i32), i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d831

bb:                                               ; preds = %dec_label_pc_d7e2
  %v1_d82f = load i32, i32* %stack_var_-60, align 4
  %v3_d82f = call i32 @function_d836(i32 %v1_d82f, i32 %v2_d813)
  br label %dec_label_pc_d831

dec_label_pc_d831:                                ; preds = %bb, %dec_label_pc_d7e2
  %v4_d82f = phi i32 [ %v3_d82f, %bb ], [ 0, %dec_label_pc_d7e2 ]
  ret i32 %v4_d82f

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_d836, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_d836(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d836:
  %v0_d837 = load i32, i32* @eax, align 4
  ret i32 %v0_d837
}

define i32 @_ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d838:
  ret i32 %arg1
}

define i32 @function_d85a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d85a:
  %ebx.global-to-local = alloca i32, align 4
  %v1_d85c = call i32 @unknown_1be56(i32 ptrtoint (i32* @0 to i32))
  %v1_d861 = inttoptr i32 %v1_d85c to i32*
  %v2_d861 = load i32, i32* %v1_d861, align 4
  store i32 %v2_d861, i32* %ebx.global-to-local, align 4
  %v0_d863 = load i32, i32* @ebp, align 4
  %v1_d863 = add i32 %v0_d863, -32
  %v2_d863 = inttoptr i32 %v1_d863 to i32*
  %v3_d863 = load i32, i32* %v2_d863, align 4
  %v1_d869 = call i32 @unknown_1be56(i32 %v3_d863)
  %v1_d86e = inttoptr i32 %v1_d869 to i32*
  %v2_d86e = load i32, i32* %v1_d86e, align 4
  %v0_d870 = load i32, i32* %ebx.global-to-local, align 4
  %v12_d870 = icmp eq i32 %v0_d870, %v2_d86e
  %v1_d872 = zext i1 %v12_d870 to i32
  %v3_d872 = and i32 %v2_d86e, -256
  %v4_d872 = or i32 %v1_d872, %v3_d872
  store i32 %v4_d872, i32* @eax, align 4
  %v0_d875 = load i32, i32* @ebp, align 4
  %v1_d875 = add i32 %v0_d875, -12
  %v2_d875 = inttoptr i32 %v1_d875 to i32*
  %v3_d875 = load i32, i32* %v2_d875, align 4
  %v1_d878 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_d878 = icmp eq i32 %v1_d878, %v3_d875
  br i1 %v3_d878, label %bb, label %dec_label_pc_d881

bb:                                               ; preds = %dec_label_pc_d85a
  %v3_d87f = call i32 @function_d886(i32 %v3_d863, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d881

dec_label_pc_d881:                                ; preds = %bb, %dec_label_pc_d85a
  %v4_d87f = phi i32 [ %v3_d87f, %bb ], [ %v4_d872, %dec_label_pc_d85a ]
  ret i32 %v4_d87f

; uselistorder directives
  uselistorder i32 %v2_d86e, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_d886, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1be56, { 1, 0 }
}

define i32 @function_d886(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d886:
  store i32 %arg2, i32* @ebp, align 4
  %v0_d88b = load i32, i32* @eax, align 4
  ret i32 %v0_d88b
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_d88c:
  store i32 %arg1, i32* @eax, align 4
  %v1_d8a9 = call i32 @function_15c8a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d8ba

bb:                                               ; preds = %dec_label_pc_d88c
  %v1_d8b8 = call i32 @function_d8bf()
  br label %dec_label_pc_d8ba

dec_label_pc_d8ba:                                ; preds = %bb, %dec_label_pc_d88c
  %v2_d8b8 = phi i32 [ %v1_d8b8, %bb ], [ 0, %dec_label_pc_d88c ]
  ret i32 %v2_d8b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_d8bf() local_unnamed_addr {
dec_label_pc_d8bf:
  %v0_d8c0 = load i32, i32* @eax, align 4
  ret i32 %v0_d8c0
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_d8c2:
  %v1_d8df = call i32 @unknown_1edf2(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d8f0

bb:                                               ; preds = %dec_label_pc_d8c2
  %v1_d8ee = call i32 @function_d8f5()
  br label %dec_label_pc_d8f0

dec_label_pc_d8f0:                                ; preds = %bb, %dec_label_pc_d8c2
  %v2_d8ee = phi i32 [ %v1_d8ee, %bb ], [ 0, %dec_label_pc_d8c2 ]
  ret i32 %v2_d8ee
}

define i32 @function_d8f5() local_unnamed_addr {
dec_label_pc_d8f5:
  %v0_d8f6 = load i32, i32* @eax, align 4
  ret i32 %v0_d8f6
}

define i32 @_ZNSt12_Vector_baseIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_d8f8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp101
}

define i32 @function_d938(i32 %arg1) local_unnamed_addr {
dec_label_pc_d938:
  %v0_d938 = call i32 @function_1b538()
  %v0_d93d = load i32, i32* @ebp, align 4
  %v1_d93d = add i32 %v0_d93d, -28
  %v2_d93d = inttoptr i32 %v1_d93d to i32*
  %v3_d93d = load i32, i32* %v2_d93d, align 4
  %v1_d943 = call i32 @function_1b184(i32 %v3_d93d)
  %v0_d948 = load i32, i32* @ebp, align 4
  %v1_d948 = add i32 %v0_d948, -12
  %v2_d948 = inttoptr i32 %v1_d948 to i32*
  %v3_d948 = load i32, i32* %v2_d948, align 4
  %v1_d94b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d94b = xor i32 %v1_d94b, %v3_d948
  %v3_d94b = icmp eq i32 %v2_d94b, 0
  store i32 %v2_d94b, i32* @eax, align 4
  br i1 %v3_d94b, label %bb, label %dec_label_pc_d954

bb:                                               ; preds = %dec_label_pc_d938
  %v1_d952 = call i32 @function_d972()
  store i32 %v1_d952, i32* @eax, align 4
  br label %dec_label_pc_d954

dec_label_pc_d954:                                ; preds = %bb, %dec_label_pc_d938
  %v0_d954 = call i32 @function_d96d()
  ret i32 %v0_d954
}

define i32 @function_d957() local_unnamed_addr {
dec_label_pc_d957:
  %eax.global-to-local = alloca i32, align 4
  %v0_d957 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d957
}

define i32 @function_d96d() local_unnamed_addr {
dec_label_pc_d96d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_d972() local_unnamed_addr {
dec_label_pc_d972:
  %v0_d977 = load i32, i32* @eax, align 4
  ret i32 %v0_d977
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv() local_unnamed_addr {
dec_label_pc_d978:
  %eax.global-to-local = alloca i32, align 4
  %v2_d979 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_d979
}

define i32 @function_d97c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d97c:
  %v0_d97d = load i32, i32* @ebx, align 4
  %v1_d97d = add i32 %v0_d97d, 1166608453
  %v2_d97d = inttoptr i32 %v1_d97d to i8*
  %v3_d97d = load i8, i8* %v2_d97d, align 1
  %v4_d97d = load i32, i32* @ecx, align 4
  %v5_d97d = trunc i32 %v4_d97d to i8
  %v6_d97d = sub i8 %v3_d97d, %v5_d97d
  store i8 %v6_d97d, i8* %v2_d97d, align 1
  %v0_d985 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_d98a = load i32, i32* @ebp, align 4
  %v2_d98a = add i32 %v1_d98a, -12
  %v3_d98a = inttoptr i32 %v2_d98a to i32*
  store i32 %v0_d985, i32* %v3_d98a, align 4
  %v0_d98f = load i32, i32* @ebp, align 4
  %v1_d98f = add i32 %v0_d98f, -28
  %v2_d98f = inttoptr i32 %v1_d98f to i32*
  %v3_d98f = load i32, i32* %v2_d98f, align 4
  ret i32 %v3_d98f
}

define i32 @function_d996(i32 %arg1) local_unnamed_addr {
dec_label_pc_d996:
  %v0_d996 = load i32, i32* @edx, align 4
  %v1_d996 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_d996 = icmp eq i32 %v1_d996, %v0_d996
  br i1 %v3_d996, label %bb, label %dec_label_pc_d996.dec_label_pc_d99e_crit_edge

dec_label_pc_d996.dec_label_pc_d99e_crit_edge:    ; preds = %dec_label_pc_d996
  %v2_d99c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d99e

bb:                                               ; preds = %dec_label_pc_d996
  %v1_d99c = call i32 @function_d9a3()
  br label %dec_label_pc_d99e

dec_label_pc_d99e:                                ; preds = %dec_label_pc_d996.dec_label_pc_d99e_crit_edge, %bb
  %v2_d99c = phi i32 [ %v2_d99c.pre, %dec_label_pc_d996.dec_label_pc_d99e_crit_edge ], [ %v1_d99c, %bb ]
  ret i32 %v2_d99c

; uselistorder directives
  uselistorder label %dec_label_pc_d99e, { 1, 0 }
}

define i32 @function_d9a3() local_unnamed_addr {
dec_label_pc_d9a3:
  %v0_d9a4 = load i32, i32* @eax, align 4
  ret i32 %v0_d9a4
}

define i32 @_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d9a5:
  ret i32 %arg2
}

define i32 @function_d9ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_d9ce:
  %v0_d9d0 = load i32, i32* @ebp, align 4
  %v1_d9d0 = add i32 %v0_d9d0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_d9d0, i32* @ebp, align 4
  %v0_d9d5 = call i32 @unknown_1ef27()
  %v0_d9da = load i32, i32* @ebp, align 4
  %v1_d9da = add i32 %v0_d9da, -12
  %v2_d9da = inttoptr i32 %v1_d9da to i32*
  %v3_d9da = load i32, i32* %v2_d9da, align 4
  %v1_d9dd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_d9dd = xor i32 %v1_d9dd, %v3_d9da
  %v3_d9dd = icmp eq i32 %v2_d9dd, 0
  store i32 %v2_d9dd, i32* @eax, align 4
  br i1 %v3_d9dd, label %bb, label %dec_label_pc_d9e6

bb:                                               ; preds = %dec_label_pc_d9ce
  %v1_d9e4 = call i32 @function_d9eb()
  br label %dec_label_pc_d9e6

dec_label_pc_d9e6:                                ; preds = %bb, %dec_label_pc_d9ce
  %v2_d9e4 = phi i32 [ %v1_d9e4, %bb ], [ %v2_d9dd, %dec_label_pc_d9ce ]
  ret i32 %v2_d9e4
}

define i32 @function_d9eb() local_unnamed_addr {
dec_label_pc_d9eb:
  %v0_d9ec = load i32, i32* @eax, align 4
  ret i32 %v0_d9ec
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1Ev() local_unnamed_addr {
dec_label_pc_d9ee:
  %eax.global-to-local = alloca i32, align 4
  %v2_d9ef = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_d9ef
}

define i32 @function_d9f2() local_unnamed_addr {
dec_label_pc_d9f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_d9f3 = load i32, i32* @ebx, align 4
  %v1_d9f3 = add i32 %v0_d9f3, 1166608453
  %v2_d9f3 = inttoptr i32 %v1_d9f3 to i8*
  %v3_d9f3 = load i8, i8* %v2_d9f3, align 1
  %v4_d9f3 = load i32, i32* @ecx, align 4
  %v5_d9f3 = trunc i32 %v4_d9f3 to i8
  %v6_d9f3 = sub i8 %v3_d9f3, %v5_d9f3
  store i8 %v6_d9f3, i8* %v2_d9f3, align 1
  %v0_d9fb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_d9fb, i32* %eax.global-to-local, align 4
  %v1_da00 = load i32, i32* @ebp, align 4
  %v2_da00 = add i32 %v1_da00, -12
  %v3_da00 = inttoptr i32 %v2_da00 to i32*
  store i32 %v0_d9fb, i32* %v3_da00, align 4
  %v4_da00 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_da00
}

define i32 @function_da04(i32 %arg1) local_unnamed_addr {
dec_label_pc_da04:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_da15() local_unnamed_addr {
dec_label_pc_da15:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_da15 = load i32, i32* %ecx.global-to-local, align 4
  %v1_da15 = sub i32 %v0_da15, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_da15, i32* %ecx.global-to-local, align 4
  %v0_da17 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_da17
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_da18:
  ret i32 0
}

define i32 @function_da3a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_da3a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_da3f() local_unnamed_addr {
dec_label_pc_da3f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_da3f = load i32, i32* %ecx.global-to-local, align 4
  %v1_da3f = sub i32 %v0_da3f, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_da3f, i32* %ecx.global-to-local, align 4
  %v0_da41 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_da41
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1EjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_da42:
  %v0_da5b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_da5b
}

define i32 @function_da62(i32 %arg1) local_unnamed_addr {
dec_label_pc_da62:
  %v0_da62 = load i32, i32* @ebp, align 4
  %v1_da62 = add i32 %v0_da62, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_da62, i32* @ebp, align 4
  %v1_da66 = add i32 %v0_da62, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -28)
  %v2_da66 = inttoptr i32 %v1_da66 to i32*
  %v3_da66 = load i32, i32* %v2_da66, align 4
  %v1_da69 = add i32 %v0_da62, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -36)
  %v2_da69 = inttoptr i32 %v1_da69 to i32*
  %v3_da69 = load i32, i32* %v2_da69, align 4
  %v2_da73 = call i32 @unknown_1f006(i32 %v3_da66, i32 %v3_da69)
  ret i32 %v2_da73
}

define i32 @function_da7a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_da7a:
  %v0_da7a = load i32, i32* @ecx, align 4
  %v1_da7a = sub i32 %v0_da7a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_da7a, i32* @ecx, align 4
  %v0_da7f = load i32, i32* @ebp, align 4
  %v1_da7f = add i32 %v0_da7f, -28
  %v2_da7f = inttoptr i32 %v1_da7f to i32*
  %v3_da7f = load i32, i32* %v2_da7f, align 4
  %v1_da85 = call i32 @unknown_1f066(i32 %v3_da7f)
  %v0_da8c = load i32, i32* @ebp, align 4
  %v1_da8c = add i32 %v0_da8c, -28
  %v2_da8c = inttoptr i32 %v1_da8c to i32*
  %v3_da8c = load i32, i32* %v2_da8c, align 4
  %v2_da8f = inttoptr i32 %v3_da8c to i32*
  store i32 %v1_da85, i32* %v2_da8f, align 4
  %v0_da91 = load i32, i32* @ebp, align 4
  %v1_da91 = add i32 %v0_da91, -28
  %v2_da91 = inttoptr i32 %v1_da91 to i32*
  %v3_da91 = load i32, i32* %v2_da91, align 4
  %v1_da94 = inttoptr i32 %v3_da91 to i32*
  %v2_da94 = load i32, i32* %v1_da94, align 4
  %v2_da99 = add i32 %v3_da91, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_da99 = inttoptr i32 %v2_da99 to i32*
  store i32 %v2_da94, i32* %v3_da99, align 4
  %v0_da9c = load i32, i32* @ebp, align 4
  %v1_da9c = add i32 %v0_da9c, -28
  %v2_da9c = inttoptr i32 %v1_da9c to i32*
  %v3_da9c = load i32, i32* %v2_da9c, align 4
  %v1_da9f = inttoptr i32 %v3_da9c to i32*
  %v2_da9f = load i32, i32* %v1_da9f, align 4
  %v2_daa3 = add i32 %v0_da9c, -32
  %v3_daa3 = inttoptr i32 %v2_daa3 to i32*
  %v4_daa3 = load i32, i32* %v3_daa3, align 4
  %v5_daa3 = add i32 %v4_daa3, %v2_da9f
  %v3_daa6 = load i32, i32* %v2_da9c, align 4
  %v2_daa9 = add i32 %v3_daa6, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_daa9 = inttoptr i32 %v2_daa9 to i32*
  store i32 %v5_daa3, i32* %v3_daa9, align 4
  %v0_daac = load i32, i32* @ebp, align 4
  %v1_daac = add i32 %v0_daac, -12
  %v2_daac = inttoptr i32 %v1_daac to i32*
  %v3_daac = load i32, i32* %v2_daac, align 4
  %v1_daaf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_daaf = xor i32 %v1_daaf, %v3_daac
  %v3_daaf = icmp eq i32 %v2_daaf, 0
  store i32 %v2_daaf, i32* @eax, align 4
  br i1 %v3_daaf, label %bb, label %dec_label_pc_dab8

bb:                                               ; preds = %dec_label_pc_da7a
  %v1_dab6 = call i32 @function_dad6()
  store i32 %v1_dab6, i32* @eax, align 4
  br label %dec_label_pc_dab8

dec_label_pc_dab8:                                ; preds = %bb, %dec_label_pc_da7a
  %v0_dab8 = call i32 @function_dad1()
  ret i32 %v0_dab8
}

define i32 @function_dabb() local_unnamed_addr {
dec_label_pc_dabb:
  %eax.global-to-local = alloca i32, align 4
  %v0_dabb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_dabb
}

define i32 @function_dad1() local_unnamed_addr {
dec_label_pc_dad1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_dad6() local_unnamed_addr {
dec_label_pc_dad6:
  %v0_dadb = load i32, i32* @eax, align 4
  ret i32 %v0_dadb
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_fill_initializeEjRKh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dadc:
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %tmp107, i32* @eax, align 4
  %v1_db05 = call i32 @function_1b454(i32 %tmp107)
  %v2_db0d = load i32, i32* %arg1, align 4
  %v4_db24 = call i32 @unknown_1f157(i32 %v2_db0d, i32 %arg2, i32 %arg3, i32 %v1_db05)
  %v1_db2c = add i32 %tmp107, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_db2c = inttoptr i32 %v1_db2c to i32*
  %v3_db2c = load i32, i32* %v2_db2c, align 4
  %v2_db32 = add i32 %tmp107, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_db32 = inttoptr i32 %v2_db32 to i32*
  store i32 %v3_db2c, i32* %v3_db32, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_db41

bb:                                               ; preds = %dec_label_pc_dadc
  %v1_db3f = call i32 @function_db46()
  br label %dec_label_pc_db41

dec_label_pc_db41:                                ; preds = %bb, %dec_label_pc_dadc
  %v4_db3f = phi i32 [ %v1_db3f, %bb ], [ 0, %dec_label_pc_dadc ]
  ret i32 %v4_db3f

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
}

define i32 @function_db46() local_unnamed_addr {
dec_label_pc_db46:
  %v0_db47 = load i32, i32* @eax, align 4
  ret i32 %v0_db47
}

define i32 @_ZNKSt6vectorIhSaIhEE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_db48:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_db62 = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_db62 = inttoptr i32 %v1_db62 to i32*
  %v3_db62 = load i32, i32* %v2_db62, align 4
  %v2_db6a = load i32, i32* %arg1, align 4
  %v2_db6e = sub i32 %v3_db62, %v2_db6a
  store i32 %v2_db6e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_db7e

bb:                                               ; preds = %dec_label_pc_db48
  %v2_db7c = call i32 @function_db83(i32 %tmp100)
  br label %dec_label_pc_db7e

dec_label_pc_db7e:                                ; preds = %bb, %dec_label_pc_db48
  %v3_db7c = phi i32 [ %v2_db7c, %bb ], [ %v2_db6e, %dec_label_pc_db48 ]
  ret i32 %v3_db7c
}

define i32 @function_db83(i32 %arg1) local_unnamed_addr {
dec_label_pc_db83:
  %v0_db84 = load i32, i32* @eax, align 4
  ret i32 %v0_db84
}

define i32 @_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhjT_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_db86:
  %v2_dbbd = call i32 @unknown_1f1aa(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v1_dbcb = call i32 @function_1b4fe(i32 %arg1)
  %v4_dbe8 = call i32 @unknown_1bdf7(i32 %arg3, i32 %arg4, i32 %v2_dbbd, i32 %v1_dbcb)
  store i32 %v2_dbbd, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dbfc

bb:                                               ; preds = %dec_label_pc_db86
  %v1_dbfa = call i32 @function_dc3a()
  store i32 %v1_dbfa, i32* @eax, align 4
  br label %dec_label_pc_dbfc

dec_label_pc_dbfc:                                ; preds = %bb, %dec_label_pc_db86
  %v0_dbfc = call i32 @function_dc35()
  ret i32 %v0_dbfc

; uselistorder directives
  uselistorder i32 %v2_dbbd, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_dbff() local_unnamed_addr {
dec_label_pc_dbff:
  %eax.global-to-local = alloca i32, align 4
  %v0_dbff = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_dbff
}

define i32 @function_dc20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dc20:
  %v0_dc20 = load i32, i32* @ebx, align 4
  %v1_dc20 = add i32 %v0_dc20, 1418326101
  %v2_dc20 = inttoptr i32 %v1_dc20 to i8*
  %v3_dc20 = load i8, i8* %v2_dc20, align 1
  %v4_dc20 = load i32, i32* @ecx, align 4
  %v5_dc20 = trunc i32 %v4_dc20 to i8
  %v6_dc20 = or i8 %v5_dc20, %v3_dc20
  store i8 %v6_dc20, i8* %v2_dc20, align 1
  %v0_dc26 = load i32, i32* @eax, align 4
  %v11_dc26 = and i32 %v0_dc26, or (i32 zext (i8 ptrtoint (i8** @global_var_4.1177 to i8) to i32), i32 -256)
  store i32 %v11_dc26, i32* @eax, align 4
  %v1_dc2b = call i32 @function_1b7c6(i32 %v11_dc26)
  ret i32 %v1_dc2b

; uselistorder directives
  uselistorder i32 %v11_dc26, { 1, 0 }
}

define i32 @function_dc35() local_unnamed_addr {
dec_label_pc_dc35:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_dc3a() local_unnamed_addr {
dec_label_pc_dc3a:
  %v0_dc3f = load i32, i32* @eax, align 4
  ret i32 %v0_dc3f
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dc40:
  %v10_dc63 = icmp eq i32 %arg2, 0
  br i1 %v10_dc63, label %dec_label_pc_dc82, label %dec_label_pc_dc69

dec_label_pc_dc69:                                ; preds = %dec_label_pc_dc40
  %v3_dc7d = call i32 @unknown_1f310(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_dc82

dec_label_pc_dc82:                                ; preds = %dec_label_pc_dc69, %dec_label_pc_dc40
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dc8e

bb:                                               ; preds = %dec_label_pc_dc82
  %v1_dc8c = call i32 @function_dc93()
  br label %dec_label_pc_dc8e

dec_label_pc_dc8e:                                ; preds = %bb, %dec_label_pc_dc82
  %v2_dc8c = phi i32 [ %v1_dc8c, %bb ], [ 0, %dec_label_pc_dc82 ]
  ret i32 %v2_dc8c
}

define i32 @function_dc93() local_unnamed_addr {
dec_label_pc_dc93:
  %v0_dc94 = load i32, i32* @eax, align 4
  ret i32 %v0_dc94
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dc95:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_dcbe = ptrtoint i32* %stack_var_-20 to i32
  %v2_dccb = call i32 @unknown_1f3a6(i32 %v2_dcbe, i32 %arg3)
  %v2_dcd3 = ptrtoint i32* %stack_var_-24 to i32
  %v2_dce0 = call i32 @unknown_1f3a6(i32 %v2_dcd3, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_1f3a6, { 1, 0 }
}

define i32 @function_dcf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_dcf4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_dd1e() local_unnamed_addr {
dec_label_pc_dd1e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_dd1e = load i32, i32* %ecx.global-to-local, align 4
  %v1_dd1e = sub i32 %v0_dd1e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_dd1e, i32* %ecx.global-to-local, align 4
  %v0_dd20 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_dd20
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dd23:
  ret i32 %arg2
}

define i32 @function_dd4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd4e:
  %v0_dd4e = load i32, i32* @ebp, align 4
  %v1_dd4e = add i32 %v0_dd4e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_dd4e, i32* @ebp, align 4
  %v0_dd53 = call i32 @unknown_1f510()
  %v0_dd58 = load i32, i32* @ebp, align 4
  %v1_dd58 = add i32 %v0_dd58, -12
  %v2_dd58 = inttoptr i32 %v1_dd58 to i32*
  %v3_dd58 = load i32, i32* %v2_dd58, align 4
  %v1_dd5b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_dd5b = xor i32 %v1_dd5b, %v3_dd58
  %v3_dd5b = icmp eq i32 %v2_dd5b, 0
  store i32 %v2_dd5b, i32* @eax, align 4
  br i1 %v3_dd5b, label %bb, label %dec_label_pc_dd64

bb:                                               ; preds = %dec_label_pc_dd4e
  %v1_dd62 = call i32 @function_dd69()
  br label %dec_label_pc_dd64

dec_label_pc_dd64:                                ; preds = %bb, %dec_label_pc_dd4e
  %v2_dd62 = phi i32 [ %v1_dd62, %bb ], [ %v2_dd5b, %dec_label_pc_dd4e ]
  ret i32 %v2_dd62
}

define i32 @function_dd69() local_unnamed_addr {
dec_label_pc_dd69:
  %v0_dd6a = load i32, i32* @eax, align 4
  ret i32 %v0_dd6a
}

define i32 @_ZSt4copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dd6b:
  %v1_dd95 = call i32 @unknown_1f59a(i32 %arg2)
  %v1_dda2 = call i32 @unknown_1f59a(i32 %arg1)
  %v3_ddb5 = call i32 @unknown_1f5cf(i32 %v1_dda2, i32 %v1_dd95, i32 %arg3)
  store i32 %v3_ddb5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ddc6

bb:                                               ; preds = %dec_label_pc_dd6b
  %v1_ddc4 = call i32 @function_ddcb()
  br label %dec_label_pc_ddc6

dec_label_pc_ddc6:                                ; preds = %bb, %dec_label_pc_dd6b
  %v2_ddc4 = phi i32 [ %v1_ddc4, %bb ], [ %v3_ddb5, %dec_label_pc_dd6b ]
  ret i32 %v2_ddc4

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1f59a, { 1, 0 }
}

define i32 @function_ddcb() local_unnamed_addr {
dec_label_pc_ddcb:
  %v0_ddd0 = load i32, i32* @eax, align 4
  ret i32 %v0_ddd0
}

define i32 @_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ddd1:
  %v7_de0e = call i32 @unknown_1f6a7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_de0e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_de1f

bb:                                               ; preds = %dec_label_pc_ddd1
  %v1_de1d = call i32 @function_de24()
  br label %dec_label_pc_de1f

dec_label_pc_de1f:                                ; preds = %bb, %dec_label_pc_ddd1
  %v2_de1d = phi i32 [ %v1_de1d, %bb ], [ %v7_de0e, %dec_label_pc_ddd1 ]
  ret i32 %v2_de1d

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_de24() local_unnamed_addr {
dec_label_pc_de24:
  %v0_de25 = load i32, i32* @eax, align 4
  ret i32 %v0_de25
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_de26:
  ret i32 %arg1
}

define i32 @function_de34(i32 %arg1) local_unnamed_addr {
dec_label_pc_de34:
  %eax.global-to-local = alloca i32, align 4
  %v0_de34 = load i32, i32* @eax, align 4
  %v1_de34 = trunc i32 %v0_de34 to i8
  %v2_de34 = load i1, i1* @cf, align 1
  %v3_de34 = zext i1 %v2_de34 to i8
  %v4_de34 = add i8 %v3_de34, %v1_de34
  %v22_de34 = zext i8 %v4_de34 to i32
  %v24_de34 = and i32 %v0_de34, -256
  %v25_de34 = or i32 %v22_de34, %v24_de34
  store i32 %v25_de34, i32* %eax.global-to-local, align 4
  %v1_de36 = inttoptr i32 %v25_de34 to i8*
  %v2_de36 = load i8, i8* %v1_de36, align 1
  %v5_de36 = add i8 %v2_de36, %v4_de34
  store i8 %v5_de36, i8* %v1_de36, align 1
  %v0_de38 = load i32, i32* %eax.global-to-local, align 4
  %v1_de38 = load i32, i32* @ebp, align 4
  %v2_de38 = add i32 %v1_de38, -12
  %v3_de38 = inttoptr i32 %v2_de38 to i32*
  store i32 %v0_de38, i32* %v3_de38, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_de3d = load i32, i32* @ebp, align 4
  %v1_de3d = add i32 %v0_de3d, -28
  %v2_de3d = inttoptr i32 %v1_de3d to i32*
  %v3_de3d = load i32, i32* %v2_de3d, align 4
  store i32 %v3_de3d, i32* %eax.global-to-local, align 4
  %v1_de40 = inttoptr i32 %v3_de3d to i32*
  %v2_de40 = load i32, i32* %v1_de40, align 4
  store i32 %v2_de40, i32* %eax.global-to-local, align 4
  %v1_de42 = icmp eq i32 %v2_de40, 0
  br i1 %v1_de42, label %dec_label_pc_de5c, label %dec_label_pc_de46

dec_label_pc_de46:                                ; preds = %dec_label_pc_de34
  %v3_de46 = load i32, i32* %v2_de3d, align 4
  store i32 %v3_de46, i32* %eax.global-to-local, align 4
  %v1_de49 = inttoptr i32 %v3_de46 to i32*
  %v2_de49 = load i32, i32* %v1_de49, align 4
  store i32 %v2_de49, i32* %eax.global-to-local, align 4
  %v1_de4b = inttoptr i32 %v2_de49 to i32*
  %v2_de4b = load i32, i32* %v1_de4b, align 4
  %v1_de4d = add i32 %v2_de4b, 12
  store i32 %v1_de4d, i32* %eax.global-to-local, align 4
  %v3_de52 = load i32, i32* %v2_de3d, align 4
  store i32 %v3_de52, i32* %eax.global-to-local, align 4
  %v1_de55 = inttoptr i32 %v3_de52 to i32*
  %v2_de55 = load i32, i32* %v1_de55, align 4
  store i32 %v2_de55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_de5c

dec_label_pc_de5c:                                ; preds = %dec_label_pc_de46, %dec_label_pc_de34
  %v1_de5c = add i32 %v0_de3d, -12
  %v2_de5c = inttoptr i32 %v1_de5c to i32*
  %v3_de5c = load i32, i32* %v2_de5c, align 4
  store i32 %v3_de5c, i32* %eax.global-to-local, align 4
  %v1_de5f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_de5f = xor i32 %v1_de5f, %v3_de5c
  %v3_de5f = icmp eq i32 %v2_de5f, 0
  store i32 %v2_de5f, i32* @eax, align 4
  br i1 %v3_de5f, label %bb, label %dec_label_pc_de68

bb:                                               ; preds = %dec_label_pc_de5c
  %v1_de66 = call i32 @function_de6d()
  store i32 %v1_de66, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_de68

dec_label_pc_de68:                                ; preds = %bb, %dec_label_pc_de5c
  %v2_de66 = phi i32 [ %v1_de66, %bb ], [ %v2_de5f, %dec_label_pc_de5c ]
  ret i32 %v2_de66
}

define i32 @function_de6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_de6a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_de6d() local_unnamed_addr {
dec_label_pc_de6d:
  %v0_de6e = load i32, i32* @eax, align 4
  ret i32 %v0_de6e
}

define i32 @_ZN5boost16exception_detail10clone_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_de70:
  store i32 ptrtoint (i32* @global_var_1b6f4.1191 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @function_dea0(i32 %arg1) local_unnamed_addr {
dec_label_pc_dea0:
  %v0_dea2 = load i32, i32* @eax, align 4
  ret i32 %v0_dea2
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dea4:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v3_decf = call i32 @function_16936(i32 %tmp102, i32 %arg2)
  %v1_ded7 = add i32 %tmp102, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_dedd = call i32 @unknown_1bd14(i32 %v1_ded7)
  store i32 ptrtoint (%vtable_1b64c_type* @global_var_1b64c.1212 to i32), i32* %arg1, align 4
  %v1_deee = add i32 %tmp102, 20
  %v2_deee = inttoptr i32 %v1_deee to i32*
  store i32 ptrtoint (i32* @global_var_1b664.1213 to i32), i32* %v2_deee, align 4
  %v2_def8 = inttoptr i32 %v1_ded7 to i32*
  store i32 ptrtoint (i32* @global_var_1b678.1214 to i32), i32* %v2_def8, align 4
  %v3_df0c = call i32 @function_1175e(i32 %tmp102, i32 %arg2)
  %v0_df11 = call i32 @function_df38()
  ret i32 %v0_df11

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
}

define i32 @function_df14() local_unnamed_addr {
dec_label_pc_df14:
  %eax.global-to-local = alloca i32, align 4
  %v0_df14 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_df14
}

define i32 @function_df38() local_unnamed_addr {
dec_label_pc_df38:
  %v0_df38 = load i32, i32* @ebp, align 4
  %v1_df38 = add i32 %v0_df38, -12
  %v2_df38 = inttoptr i32 %v1_df38 to i32*
  %v3_df38 = load i32, i32* %v2_df38, align 4
  %v1_df3b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_df3b = xor i32 %v1_df3b, %v3_df38
  %v3_df3b = icmp eq i32 %v2_df3b, 0
  store i32 %v2_df3b, i32* @eax, align 4
  br i1 %v3_df3b, label %bb, label %dec_label_pc_df44

bb:                                               ; preds = %dec_label_pc_df38
  %v1_df42 = call i32 @function_df49()
  br label %dec_label_pc_df44

dec_label_pc_df44:                                ; preds = %bb, %dec_label_pc_df38
  %v2_df42 = phi i32 [ %v1_df42, %bb ], [ %v2_df3b, %dec_label_pc_df38 ]
  ret i32 %v2_df42
}

define i32 @function_df49() local_unnamed_addr {
dec_label_pc_df49:
  %v0_df4e = load i32, i32* @eax, align 4
  ret i32 %v0_df4e
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_df4f:
  %v5_df4f = sub i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_df54 = call i32 @function_1beb3(i32 %v5_df4f)
  ret i32 %v2_df54
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_df59:
  %v4_df59 = add i32 %arg1, -20
  %v1_df5e = call i32 @function_1beb3(i32 %v4_df59)
  ret i32 %v1_df5e

; uselistorder directives
  uselistorder i32 (i32)* @function_1beb3, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_df64:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_1b64c_type* @global_var_1b64c.1212 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_df87 = add i32 %tmp99, 20
  %v2_df87 = inttoptr i32 %v1_df87 to i32*
  store i32 ptrtoint (i32* @global_var_1b664.1213 to i32), i32* %v2_df87, align 4
  %v3_df87 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_df87

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_1b64c_type* @global_var_1b64c.1212 to i32), { 2, 1, 0 }
}

define i32 @function_df90(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_df90:
  %eax.global-to-local = alloca i32, align 4
  %v0_df92 = load i32, i32* @eax, align 4
  %v1_df92 = add i32 %v0_df92, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_df92, i32* %eax.global-to-local, align 4
  %v1_df93 = add i32 %v0_df92, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -74)
  %v2_df93 = inttoptr i32 %v1_df93 to i8*
  %v3_df93 = load i8, i8* %v2_df93, align 1
  %v4_df93 = load i32, i32* @ebx, align 4
  %v5_df93 = lshr i32 %v4_df93, ptrtoint (i32* @global_var_8.1178 to i32)
  %v6_df93 = trunc i32 %v5_df93 to i8
  %v7_df93 = load i1, i1* @cf, align 1
  %v8_df93 = zext i1 %v7_df93 to i8
  %v9_df93 = sub i8 %v3_df93, %v6_df93
  %v10_df93 = add i8 %v9_df93, %v8_df93
  store i8 %v10_df93, i8* %v2_df93, align 1
  %v0_df96 = load i32, i32* %eax.global-to-local, align 4
  %v1_df96 = inttoptr i32 %v0_df96 to i32*
  %v2_df96 = load i32, i32* %v1_df96, align 4
  %v4_df96 = add i32 %v2_df96, %v0_df96
  store i32 %v4_df96, i32* %v1_df96, align 4
  %v0_df98 = load i32, i32* @ebp, align 4
  %v1_df98 = add i32 %v0_df98, -28
  %v2_df98 = inttoptr i32 %v1_df98 to i32*
  %v3_df98 = load i32, i32* %v2_df98, align 4
  %v1_df9b = add i32 %v3_df98, ptrtoint (i8** @global_var_18.1179 to i32)
  store i32 %v1_df9b, i32* @eax, align 4
  %v2_dfa1 = trunc i32 %v1_df9b to i16
  %v3_dfa1 = call i32 @function_11794(i16 %v2_dfa1)
  store i32 %v3_dfa1, i32* %eax.global-to-local, align 4
  %v0_dfa6 = load i32, i32* @ebp, align 4
  %v1_dfa6 = add i32 %v0_dfa6, -28
  %v2_dfa6 = inttoptr i32 %v1_dfa6 to i32*
  %v3_dfa6 = load i32, i32* %v2_dfa6, align 4
  store i32 %v3_dfa6, i32* %eax.global-to-local, align 4
  %v2_dfac = call i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEELb1EE7_S_baseES7_(i32 %v3_dfa6)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_dfbb = call i32 @function_dfc8()
  store i32 %v1_dfbb, i32* %eax.global-to-local, align 4
  %v0_dfbd = load i32, i32* @ebp, align 4
  %v1_dfbd = add i32 %v0_dfbd, -28
  %v2_dfbd = inttoptr i32 %v1_dfbd to i32*
  %v3_dfbd = load i32, i32* %v2_dfbd, align 4
  store i32 %v3_dfbd, i32* %eax.global-to-local, align 4
  ret i32 %v3_dfbd

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
}

define i32 @function_dfc8() local_unnamed_addr {
dec_label_pc_dfc8:
  %v0_dfc8 = load i32, i32* @ebp, align 4
  %v1_dfc8 = add i32 %v0_dfc8, -12
  %v2_dfc8 = inttoptr i32 %v1_dfc8 to i32*
  %v3_dfc8 = load i32, i32* %v2_dfc8, align 4
  %v1_dfcb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_dfcb = xor i32 %v1_dfcb, %v3_dfc8
  %v3_dfcb = icmp eq i32 %v2_dfcb, 0
  store i32 %v2_dfcb, i32* @eax, align 4
  br i1 %v3_dfcb, label %bb, label %dec_label_pc_dfd4

bb:                                               ; preds = %dec_label_pc_dfc8
  %v1_dfd2 = call i32 @function_dfd9()
  br label %dec_label_pc_dfd4

dec_label_pc_dfd4:                                ; preds = %bb, %dec_label_pc_dfc8
  %v2_dfd2 = phi i32 [ %v1_dfd2, %bb ], [ %v2_dfcb, %dec_label_pc_dfc8 ]
  ret i32 %v2_dfd2
}

define i32 @function_dfd9() local_unnamed_addr {
dec_label_pc_dfd9:
  %v0_dfda = load i32, i32* @eax, align 4
  ret i32 %v0_dfda
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_dfdc:
  %v5_dfdc = sub i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_dfe1 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v5_dfdc)
  ret i32 %v2_dfe1
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_dfe3:
  %v4_dfe3 = add i32 %arg1, -20
  %v1_dfe8 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_dfe3)
  ret i32 %v1_dfe8

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) {
dec_label_pc_dfea:
  %v1_e007 = call i32 @unknown_1bf40(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_e027() local_unnamed_addr {
dec_label_pc_e027:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e027 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e027 = sub i32 %v0_e027, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_e027, i32* %ecx.global-to-local, align 4
  %v0_e029 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e029
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e02a:
  %v2_e054 = call i32 @unknown_1f9bd(i32 %arg1, i32 %arg2)
  store i32 %v2_e054, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e065

bb:                                               ; preds = %dec_label_pc_e02a
  %v1_e063 = call i32 @function_e06a()
  br label %dec_label_pc_e065

dec_label_pc_e065:                                ; preds = %bb, %dec_label_pc_e02a
  %v2_e063 = phi i32 [ %v1_e063, %bb ], [ %v2_e054, %dec_label_pc_e02a ]
  ret i32 %v2_e063
}

define i32 @function_e06a() local_unnamed_addr {
dec_label_pc_e06a:
  %v0_e06b = load i32, i32* @eax, align 4
  ret i32 %v0_e06b
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e06c:
  %v2_e096 = call i32 @unknown_1fa3d(i32 %arg1, i32 %arg2)
  store i32 %v2_e096, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e0a7

bb:                                               ; preds = %dec_label_pc_e06c
  %v1_e0a5 = call i32 @function_e0ac()
  br label %dec_label_pc_e0a7

dec_label_pc_e0a7:                                ; preds = %bb, %dec_label_pc_e06c
  %v2_e0a5 = phi i32 [ %v1_e0a5, %bb ], [ %v2_e096, %dec_label_pc_e06c ]
  ret i32 %v2_e0a5
}

define i32 @function_e0ac() local_unnamed_addr {
dec_label_pc_e0ac:
  %v0_e0ad = load i32, i32* @eax, align 4
  ret i32 %v0_e0ad
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e0ae:
  %v2_e0d8 = call i32 @unknown_1fabd(i32 %arg1, i32 %arg2)
  store i32 %v2_e0d8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e0e9

bb:                                               ; preds = %dec_label_pc_e0ae
  %v1_e0e7 = call i32 @function_e0ee()
  br label %dec_label_pc_e0e9

dec_label_pc_e0e9:                                ; preds = %bb, %dec_label_pc_e0ae
  %v2_e0e7 = phi i32 [ %v1_e0e7, %bb ], [ %v2_e0d8, %dec_label_pc_e0ae ]
  ret i32 %v2_e0e7
}

define i32 @function_e0ee() local_unnamed_addr {
dec_label_pc_e0ee:
  %v0_e0ef = load i32, i32* @eax, align 4
  ret i32 %v0_e0ef
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e0f0:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v10_e10d = icmp eq i32 %arg2, 0
  br i1 %v10_e10d, label %dec_label_pc_e120, label %dec_label_pc_e113

dec_label_pc_e113:                                ; preds = %dec_label_pc_e0f0
  %v1_e116 = add i32 %arg2, ptrtoint (i8** @global_var_18.1179 to i32)
  br label %dec_label_pc_e120

dec_label_pc_e120:                                ; preds = %dec_label_pc_e0f0, %dec_label_pc_e113
  %storemerge = phi i32 [ %v1_e116, %dec_label_pc_e113 ], [ 0, %dec_label_pc_e0f0 ]
  store i32 %storemerge, i32* %arg1, align 4
  %v1_e128 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_e135 = call i32 @unknown_1fb3e(i32 %v1_e128, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e15f

bb:                                               ; preds = %dec_label_pc_e120
  %v5_e15d = call i32 @function_e164(i32 %tmp104, i32 %arg2, i32 %arg2)
  br label %dec_label_pc_e15f

dec_label_pc_e15f:                                ; preds = %bb, %dec_label_pc_e120
  %v6_e15d = phi i32 [ %v5_e15d, %bb ], [ 0, %dec_label_pc_e120 ]
  ret i32 %v6_e15d

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_e120, { 1, 0 }
}

define i32 @function_e164(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e164:
  %v0_e165 = load i32, i32* @eax, align 4
  ret i32 %v0_e165
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e166:
  %v1_e186 = inttoptr i32 %arg2 to i32*
  %v2_e186 = load i32, i32* %v1_e186, align 4
  store i32 %v2_e186, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e199

bb:                                               ; preds = %dec_label_pc_e166
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_e197 = call i32 @function_e19e(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_e199

dec_label_pc_e199:                                ; preds = %bb, %dec_label_pc_e166
  %v4_e197 = phi i32 [ %v3_e197, %bb ], [ 0, %dec_label_pc_e166 ]
  ret i32 %v4_e197

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e19e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e19e:
  %v0_e19f = load i32, i32* @eax, align 4
  ret i32 %v0_e19f
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e1a0:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_e1ba = load i32, i32* %arg1, align 4
  %v1_e1bc = add i32 %v2_e1ba, -1
  store i32 %v1_e1bc, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e1d3

bb:                                               ; preds = %dec_label_pc_e1a0
  %v2_e1d1 = call i32 @function_e1d8(i32 %tmp100)
  br label %dec_label_pc_e1d3

dec_label_pc_e1d3:                                ; preds = %bb, %dec_label_pc_e1a0
  %v3_e1d1 = phi i32 [ %v2_e1d1, %bb ], [ %tmp100, %dec_label_pc_e1a0 ]
  ret i32 %v3_e1d1
}

define i32 @function_e1d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_e1d8:
  %v0_e1d9 = load i32, i32* @eax, align 4
  ret i32 %v0_e1d9
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e1da:
  %v2_e1f4 = load i32, i32* %arg1, align 4
  store i32 %v2_e1f4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e202

bb:                                               ; preds = %dec_label_pc_e1da
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_e200 = call i32 @function_e207(i32 %tmp100)
  br label %dec_label_pc_e202

dec_label_pc_e202:                                ; preds = %bb, %dec_label_pc_e1da
  %v3_e200 = phi i32 [ %v2_e200, %bb ], [ %v2_e1f4, %dec_label_pc_e1da ]
  ret i32 %v3_e200

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e207(i32 %arg1) local_unnamed_addr {
dec_label_pc_e207:
  %v0_e208 = load i32, i32* @eax, align 4
  ret i32 %v0_e208
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e20a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_e224 = load i32, i32* %arg1, align 4
  %v1_e226 = add i32 %v2_e224, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_e226, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e23d

bb:                                               ; preds = %dec_label_pc_e20a
  %v2_e23b = call i32 @function_e242(i32 %tmp100)
  br label %dec_label_pc_e23d

dec_label_pc_e23d:                                ; preds = %bb, %dec_label_pc_e20a
  %v3_e23b = phi i32 [ %v2_e23b, %bb ], [ %tmp100, %dec_label_pc_e20a ]
  ret i32 %v3_e23b
}

define i32 @function_e242(i32 %arg1) local_unnamed_addr {
dec_label_pc_e242:
  %v0_e243 = load i32, i32* @eax, align 4
  ret i32 %v0_e243
}

define i32 @_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e244:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e26a

bb:                                               ; preds = %dec_label_pc_e244
  %v2_e268 = call i32 @function_e26f(i32 %arg1)
  br label %dec_label_pc_e26a

dec_label_pc_e26a:                                ; preds = %bb, %dec_label_pc_e244
  %v3_e268 = phi i32 [ %v2_e268, %bb ], [ %arg1, %dec_label_pc_e244 ]
  ret i32 %v3_e268
}

define i32 @function_e26f(i32 %arg1) local_unnamed_addr {
dec_label_pc_e26f:
  %v0_e270 = load i32, i32* @eax, align 4
  ret i32 %v0_e270
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e271:
  %v7_e2ae = call i32 @unknown_1fd90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_e2ae, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e2bf

bb:                                               ; preds = %dec_label_pc_e271
  %v1_e2bd = call i32 @function_e2c4()
  br label %dec_label_pc_e2bf

dec_label_pc_e2bf:                                ; preds = %bb, %dec_label_pc_e271
  %v2_e2bd = phi i32 [ %v1_e2bd, %bb ], [ %v7_e2ae, %dec_label_pc_e271 ]
  ret i32 %v2_e2bd

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e2c4() local_unnamed_addr {
dec_label_pc_e2c4:
  %v0_e2c5 = load i32, i32* @eax, align 4
  ret i32 %v0_e2c5
}

define i32 @_ZN9__gnu_cxxneIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e2c6:
  %v1_e2ea = call i32 @unknown_1c6cc(i32 %arg1)
  %v1_e2ef = inttoptr i32 %v1_e2ea to i32*
  %v2_e2ef = load i32, i32* %v1_e2ef, align 4
  %v1_e2f7 = call i32 @unknown_1c6cc(i32 %arg2)
  %v1_e2fc = inttoptr i32 %v1_e2f7 to i32*
  %v2_e2fc = load i32, i32* %v1_e2fc, align 4
  %v12_e2fe = icmp eq i32 %v2_e2ef, %v2_e2fc
  %v1_e300 = icmp eq i1 %v12_e2fe, false
  %v2_e300 = zext i1 %v1_e300 to i32
  %v4_e300 = and i32 %v2_e2fc, -256
  %v5_e300 = or i32 %v2_e300, %v4_e300
  store i32 %v5_e300, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e30f

bb:                                               ; preds = %dec_label_pc_e2c6
  %v1_e30d = call i32 @function_e314()
  br label %dec_label_pc_e30f

dec_label_pc_e30f:                                ; preds = %bb, %dec_label_pc_e2c6
  %v2_e30d = phi i32 [ %v1_e30d, %bb ], [ %v5_e300, %dec_label_pc_e2c6 ]
  ret i32 %v2_e30d

; uselistorder directives
  uselistorder i32 %v2_e2fc, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1c6cc, { 1, 0 }
}

define i32 @function_e314() local_unnamed_addr {
dec_label_pc_e314:
  %v0_e319 = load i32, i32* @eax, align 4
  ret i32 %v0_e319
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e31a:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_e343 = ptrtoint i32* %stack_var_-20 to i32
  %v2_e350 = call i32 @unknown_1fe88(i32 %v2_e343, i32 %arg3)
  %v2_e358 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e365 = call i32 @unknown_1fe88(i32 %v2_e358, i32 %arg2)
  %v3_e377 = load i32, i32* %stack_var_-20, align 4
  %v3_e37e = load i32, i32* %stack_var_-24, align 4
  %v4_e388 = call i32 @unknown_1fed2(i32 %arg1, i32 %v3_e37e, i32 %v3_e377, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e39f

bb:                                               ; preds = %dec_label_pc_e31a
  %v1_e39d = call i32 @function_e3a4()
  br label %dec_label_pc_e39f

dec_label_pc_e39f:                                ; preds = %bb, %dec_label_pc_e31a
  %v2_e39d = phi i32 [ %v1_e39d, %bb ], [ %arg1, %dec_label_pc_e31a ]
  ret i32 %v2_e39d

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_1fe88, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_e3a4() local_unnamed_addr {
dec_label_pc_e3a4:
  %v0_e3a5 = load i32, i32* @eax, align 4
  ret i32 %v0_e3a5
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e3a8:
  %v1_e3cb = call i32 @unknown_1bd20(i32 %arg1)
  %v1_e3d3 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_e3d3 = inttoptr i32 %v1_e3d3 to i32*
  %v3_e3d3 = load i32, i32* %v2_e3d3, align 4
  %v3_e3e4 = call i32 @unknown_1bd4d(i32 %arg2, i32 %v3_e3d3, i32 %v1_e3cb)
  store i32 %arg2, i32* %v2_e3d3, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e3fe

bb:                                               ; preds = %dec_label_pc_e3a8
  %v1_e3fc = call i32 @function_e403()
  br label %dec_label_pc_e3fe

dec_label_pc_e3fe:                                ; preds = %bb, %dec_label_pc_e3a8
  %v2_e3fc = phi i32 [ %v1_e3fc, %bb ], [ 0, %dec_label_pc_e3a8 ]
  ret i32 %v2_e3fc

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e403() local_unnamed_addr {
dec_label_pc_e403:
  %v0_e404 = load i32, i32* @eax, align 4
  ret i32 %v0_e404
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e406:
  ret i32 %arg1
}

define i32 @function_e416(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e416:
  %v2_e416 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_e416 = load i32, i32* @eax, align 4
  %v4_e416 = trunc i32 %v3_e416 to i8
  %v5_e416 = add i8 %v4_e416, %v2_e416
  %v21_e416 = inttoptr i32 %v3_e416 to i8*
  store i8 %v5_e416, i8* %v21_e416, align 1
  %v0_e418 = load i32, i32* @eax, align 4
  %v1_e418 = load i32, i32* @ebp, align 4
  %v2_e418 = add i32 %v1_e418, -12
  %v3_e418 = inttoptr i32 %v2_e418 to i32*
  store i32 %v0_e418, i32* %v3_e418, align 4
  %v0_e41d = load i32, i32* @ebp, align 4
  %v1_e41d = add i32 %v0_e41d, -28
  %v2_e41d = inttoptr i32 %v1_e41d to i32*
  %v3_e41d = load i32, i32* %v2_e41d, align 4
  store i32 %v3_e41d, i32* @eax, align 4
  %v1_e420 = add i32 %v0_e41d, -12
  %v2_e420 = inttoptr i32 %v1_e420 to i32*
  %v3_e420 = load i32, i32* %v2_e420, align 4
  %v1_e423 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e423 = icmp eq i32 %v1_e423, %v3_e420
  br i1 %v3_e423, label %bb, label %dec_label_pc_e42c

bb:                                               ; preds = %dec_label_pc_e416
  %v1_e42a = call i32 @function_e431()
  br label %dec_label_pc_e42c

dec_label_pc_e42c:                                ; preds = %bb, %dec_label_pc_e416
  %v2_e42a = phi i32 [ %v1_e42a, %bb ], [ %v3_e41d, %dec_label_pc_e416 ]
  ret i32 %v2_e42a
}

define i32 @function_e431() local_unnamed_addr {
dec_label_pc_e431:
  %v0_e432 = load i32, i32* @eax, align 4
  ret i32 %v0_e432
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e433:
  %v0_e445 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_e445
}

define i32 @function_e44e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e44e:
  %v0_e450 = load i32, i32* @ebp, align 4
  %v1_e450 = add i32 %v0_e450, -28
  %v2_e450 = inttoptr i32 %v1_e450 to i32*
  %v3_e450 = load i32, i32* %v2_e450, align 4
  store i32 %v3_e450, i32* @eax, align 4
  %v1_e453 = add i32 %v0_e450, -12
  %v2_e453 = inttoptr i32 %v1_e453 to i32*
  %v3_e453 = load i32, i32* %v2_e453, align 4
  %v1_e456 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e456 = icmp eq i32 %v1_e456, %v3_e453
  br i1 %v3_e456, label %bb, label %dec_label_pc_e45f

bb:                                               ; preds = %dec_label_pc_e44e
  %v1_e45d = call i32 @function_e464()
  br label %dec_label_pc_e45f

dec_label_pc_e45f:                                ; preds = %bb, %dec_label_pc_e44e
  %v2_e45d = phi i32 [ %v1_e45d, %bb ], [ %v3_e450, %dec_label_pc_e44e ]
  ret i32 %v2_e45d
}

define i32 @function_e464() local_unnamed_addr {
dec_label_pc_e464:
  %v0_e465 = load i32, i32* @eax, align 4
  ret i32 %v0_e465
}

define i32 @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_e468:
  %stack_var_-32 = alloca i32, align 4
  %v2_e493 = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_e493
}

define i32 @function_e496(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e496:
  %v0_e496 = load i32, i32* @eax, align 4
  %v1_e499 = call i32 @unknown_1ca32(i32 %v0_e496)
  %v4_e49e = trunc i32 %v1_e499 to i8
  %v5_e49e = icmp eq i8 %v4_e49e, 0
  %v1_e4a0 = icmp eq i1 %v5_e49e, false
  br i1 %v1_e4a0, label %dec_label_pc_e4f0, label %dec_label_pc_e4a2

dec_label_pc_e4a2:                                ; preds = %dec_label_pc_e496
  %v0_e4a2 = load i32, i32* @ebp, align 4
  %v1_e4a2 = add i32 %v0_e4a2, -32
  %v1_e4a8 = call i32 @unknown_200b2(i32 %v1_e4a2)
  %v0_e4d75 = load i32, i32* @ebp, align 4
  %v1_e4d76 = add i32 %v0_e4d75, -32
  %v1_e4de7 = add i32 %v0_e4d75, -28
  %v2_e4e48 = call i32 @unknown_200ec(i32 %v1_e4de7, i32 %v1_e4d76)
  %v4_e4e99 = trunc i32 %v2_e4e48 to i8
  %v5_e4e910 = icmp eq i8 %v4_e4e99, 0
  %v1_e4eb11 = icmp eq i1 %v5_e4e910, false
  br i1 %v1_e4eb11, label %dec_label_pc_e4af, label %dec_label_pc_e4f0

dec_label_pc_e4af:                                ; preds = %dec_label_pc_e4a2, %dec_label_pc_e4af
  %v0_e4af = load i32, i32* @ebp, align 4
  %v1_e4af = add i32 %v0_e4af, -32
  %v2_e4af = inttoptr i32 %v1_e4af to i32*
  %v3_e4af = load i32, i32* %v2_e4af, align 4
  %v1_e4b6 = add i32 %v0_e4af, -28
  %v2_e4b6 = inttoptr i32 %v1_e4b6 to i32*
  %v3_e4b6 = load i32, i32* %v2_e4b6, align 4
  %v2_e4bc = call i32 @unknown_20140(i32 %v3_e4b6, i32 %v3_e4af)
  %v0_e4c1 = load i32, i32* @ebp, align 4
  %v1_e4c1 = add i32 %v0_e4c1, -28
  %v1_e4c7 = call i32 @unknown_1c672(i32 %v1_e4c1)
  %v0_e4cc = load i32, i32* @ebp, align 4
  %v1_e4cc = add i32 %v0_e4cc, -32
  %v1_e4d2 = call i32 @unknown_200b2(i32 %v1_e4cc)
  %v0_e4d7 = load i32, i32* @ebp, align 4
  %v1_e4d7 = add i32 %v0_e4d7, -32
  %v1_e4de = add i32 %v0_e4d7, -28
  %v2_e4e4 = call i32 @unknown_200ec(i32 %v1_e4de, i32 %v1_e4d7)
  %v4_e4e9 = trunc i32 %v2_e4e4 to i8
  %v5_e4e9 = icmp eq i8 %v4_e4e9, 0
  %v1_e4eb = icmp eq i1 %v5_e4e9, false
  br i1 %v1_e4eb, label %dec_label_pc_e4af, label %dec_label_pc_e4f0

dec_label_pc_e4f0:                                ; preds = %dec_label_pc_e4a2, %dec_label_pc_e4af, %dec_label_pc_e496
  %v0_e4ef = phi i32 [ %v1_e499, %dec_label_pc_e496 ], [ %v2_e4e48, %dec_label_pc_e4a2 ], [ %v2_e4e4, %dec_label_pc_e4af ]
  ret i32 %v0_e4ef

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_200ec, { 1, 0 }
  uselistorder i32 (i32)* @unknown_200b2, { 1, 0 }
  uselistorder label %dec_label_pc_e4f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e4af, { 1, 0 }
}

define i32 @function_e4f2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e4f2:
  %v0_e4f3 = load i32, i32* @eax, align 4
  %v1_e4f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e4f3 = xor i32 %v1_e4f3, %v0_e4f3
  %v3_e4f3 = icmp eq i32 %v2_e4f3, 0
  store i32 %v2_e4f3, i32* @eax, align 4
  br i1 %v3_e4f3, label %bb, label %dec_label_pc_e4fc

bb:                                               ; preds = %dec_label_pc_e4f2
  %v1_e4fa = call i32 @function_e501()
  br label %dec_label_pc_e4fc

dec_label_pc_e4fc:                                ; preds = %bb, %dec_label_pc_e4f2
  %v2_e4fa = phi i32 [ %v1_e4fa, %bb ], [ %v2_e4f3, %dec_label_pc_e4f2 ]
  ret i32 %v2_e4fa
}

define i32 @function_e501() local_unnamed_addr {
dec_label_pc_e501:
  %v0_e502 = load i32, i32* @eax, align 4
  ret i32 %v0_e502
}

define i32 @_ZN5boost15foreach_detail_13auto_any_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e504:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e527

bb:                                               ; preds = %dec_label_pc_e504
  %v2_e525 = call i32 @function_e52c(i32 %arg1)
  br label %dec_label_pc_e527

dec_label_pc_e527:                                ; preds = %bb, %dec_label_pc_e504
  %v3_e525 = phi i32 [ %v2_e525, %bb ], [ 0, %dec_label_pc_e504 ]
  ret i32 %v3_e525
}

define i32 @function_e52c(i32 %arg1) local_unnamed_addr {
dec_label_pc_e52c:
  %v0_e52d = load i32, i32* @eax, align 4
  ret i32 %v0_e52d
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e52e:
  %v2_e558 = call i32 @unknown_1faf2(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e569

bb:                                               ; preds = %dec_label_pc_e52e
  %v1_e567 = call i32 @function_e56e()
  br label %dec_label_pc_e569

dec_label_pc_e569:                                ; preds = %bb, %dec_label_pc_e52e
  %v2_e567 = phi i32 [ %v1_e567, %bb ], [ 0, %dec_label_pc_e52e ]
  ret i32 %v2_e567
}

define i32 @function_e56e() local_unnamed_addr {
dec_label_pc_e56e:
  %v0_e56f = load i32, i32* @eax, align 4
  ret i32 %v0_e56f
}

define i32 @_ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_e570:
  %edx.global-to-local = alloca i32, align 4
  %v0_e59a = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_e59a, 16777216
  %v8_e5b2 = sdiv i32 %sext, 16777216
  %v9_e5b2 = sext i8 %arg4 to i32
  %v10_e5b2 = call i32 @unknown_2041e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_e5b2, i32 %v9_e5b2, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e5c3

bb:                                               ; preds = %dec_label_pc_e570
  %v1_e5c1 = call i32 @function_e5c8()
  br label %dec_label_pc_e5c3

dec_label_pc_e5c3:                                ; preds = %bb, %dec_label_pc_e570
  %v2_e5c1 = phi i32 [ %v1_e5c1, %bb ], [ 0, %dec_label_pc_e570 ]
  ret i32 %v2_e5c1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e5c8() local_unnamed_addr {
dec_label_pc_e5c8:
  %v0_e5c9 = load i32, i32* @eax, align 4
  ret i32 %v0_e5c9
}

define i32 @_ZN9__gnu_cxxeqIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e5ca:
  %v1_e5ee = call i32 @unknown_1c9d0(i32 %arg1)
  %v1_e5f3 = inttoptr i32 %v1_e5ee to i32*
  %v2_e5f3 = load i32, i32* %v1_e5f3, align 4
  %v1_e5fb = call i32 @unknown_1c9d0(i32 %arg2)
  %v1_e600 = inttoptr i32 %v1_e5fb to i32*
  %v2_e600 = load i32, i32* %v1_e600, align 4
  %v12_e602 = icmp eq i32 %v2_e5f3, %v2_e600
  %v1_e604 = zext i1 %v12_e602 to i32
  %v3_e604 = and i32 %v2_e600, -256
  %v4_e604 = or i32 %v1_e604, %v3_e604
  store i32 %v4_e604, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e613

bb:                                               ; preds = %dec_label_pc_e5ca
  %v1_e611 = call i32 @function_e618()
  br label %dec_label_pc_e613

dec_label_pc_e613:                                ; preds = %bb, %dec_label_pc_e5ca
  %v3_e611 = phi i32 [ %v1_e611, %bb ], [ %v4_e604, %dec_label_pc_e5ca ]
  ret i32 %v3_e611

; uselistorder directives
  uselistorder i32 %v2_e600, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1c9d0, { 1, 0 }
}

define i32 @function_e618() local_unnamed_addr {
dec_label_pc_e618:
  %v0_e61d = load i32, i32* @eax, align 4
  ret i32 %v0_e61d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e61e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e644

bb:                                               ; preds = %dec_label_pc_e61e
  %v2_e642 = call i32 @function_e649(i32 %arg1)
  br label %dec_label_pc_e644

dec_label_pc_e644:                                ; preds = %bb, %dec_label_pc_e61e
  %v4_e642 = phi i32 [ %v2_e642, %bb ], [ %arg1, %dec_label_pc_e61e ]
  ret i32 %v4_e642
}

define i32 @function_e649(i32 %arg1) local_unnamed_addr {
dec_label_pc_e649:
  %v0_e64a = load i32, i32* @eax, align 4
  ret i32 %v0_e64a
}

define i32 @_ZN7CVarIntIjEC1ERj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e64c:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e67d

bb:                                               ; preds = %dec_label_pc_e64c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_e67b = call i32 @function_e682(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_e67d

dec_label_pc_e67d:                                ; preds = %bb, %dec_label_pc_e64c
  %v5_e67b = phi i32 [ %v3_e67b, %bb ], [ 0, %dec_label_pc_e64c ]
  ret i32 %v5_e67b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e682(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e682:
  %v0_e683 = load i32, i32* @eax, align 4
  ret i32 %v0_e683
}

define i32 @_Z15GetSizeOfVarIntIjEjT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_e684:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_e684 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_e684, i32* %stack_var_-4, align 4
  %v4_e684 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_e684, i32* @ebp, align 4
  %tmp107108 = icmp ult i32 %arg1, 128
  br i1 %tmp107108, label %dec_label_pc_e6ba, label %dec_label_pc_e6ac

dec_label_pc_e6ac:                                ; preds = %dec_label_pc_e684, %dec_label_pc_e6ac
  %v5_e6a2110 = phi i32 [ %v5_e6a2, %dec_label_pc_e6ac ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_e684 ]
  %stack_var_-32.0109 = phi i32 [ %v1_e6b2, %dec_label_pc_e6ac ], [ %arg1, %dec_label_pc_e684 ]
  %v2_e6af = udiv i32 %stack_var_-32.0109, 128
  %v1_e6b2 = add nsw i32 %v2_e6af, -1
  %v5_e6a2 = add i32 %v5_e6a2110, ptrtoint (i8** @global_var_1.1176 to i32)
  %tmp107 = icmp ult i32 %v1_e6b2, 128
  br i1 %tmp107, label %dec_label_pc_e6ba, label %dec_label_pc_e6ac

dec_label_pc_e6ba:                                ; preds = %dec_label_pc_e6ac, %dec_label_pc_e684
  %v5_e6a2.lcssa = phi i32 [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_e684 ], [ %v5_e6a2, %dec_label_pc_e6ac ]
  store i32 %v5_e6a2.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e6ca

bb:                                               ; preds = %dec_label_pc_e6ba
  %v3_e6c8 = call i32 @function_e6cf(i32 %v5_e6a2.lcssa)
  br label %dec_label_pc_e6ca

dec_label_pc_e6ca:                                ; preds = %bb, %dec_label_pc_e6ba
  %v4_e6c8 = phi i32 [ %v3_e6c8, %bb ], [ %v5_e6a2.lcssa, %dec_label_pc_e6ba ]
  ret i32 %v4_e6c8

; uselistorder directives
  uselistorder i32 %v5_e6a2.lcssa, { 2, 1, 0 }
  uselistorder i32 %v1_e6b2, { 1, 0 }
  uselistorder label %dec_label_pc_e6ac, { 1, 0 }
}

define i32 @function_e6cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6cf:
  %v0_e6d0 = load i32, i32* @eax, align 4
  ret i32 %v0_e6d0
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6d2:
  store i32 %arg1, i32* @eax, align 4
  %v1_e6ef = call i32 @function_18120(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e700

bb:                                               ; preds = %dec_label_pc_e6d2
  %v1_e6fe = call i32 @function_e705()
  br label %dec_label_pc_e700

dec_label_pc_e700:                                ; preds = %bb, %dec_label_pc_e6d2
  %v2_e6fe = phi i32 [ %v1_e6fe, %bb ], [ 0, %dec_label_pc_e6d2 ]
  ret i32 %v2_e6fe

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e705() local_unnamed_addr {
dec_label_pc_e705:
  %v0_e706 = load i32, i32* @eax, align 4
  ret i32 %v0_e706
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e708:
  %v1_e725 = call i32 @unknown_20698(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e736

bb:                                               ; preds = %dec_label_pc_e708
  %v1_e734 = call i32 @function_e73b()
  br label %dec_label_pc_e736

dec_label_pc_e736:                                ; preds = %bb, %dec_label_pc_e708
  %v2_e734 = phi i32 [ %v1_e734, %bb ], [ 0, %dec_label_pc_e708 ]
  ret i32 %v2_e734
}

define i32 @function_e73b() local_unnamed_addr {
dec_label_pc_e73b:
  %v0_e73c = load i32, i32* @eax, align 4
  ret i32 %v0_e73c
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e73e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_e759 = add i32 %tmp101, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_e759 = inttoptr i32 %v1_e759 to i32*
  %v3_e759 = load i32, i32* %v2_e759, align 4
  %v2_e761 = load i32, i32* %arg1, align 4
  %v2_e765 = sub i32 %v3_e759, %v2_e761
  %v2_e769 = sdiv i32 %v2_e765, 4
  %v3_e76c = mul i32 %v2_e769, -858993459
  %v3_e787 = call i32 @unknown_20720(i32 %tmp101, i32 %v2_e761, i32 %v3_e76c)
  %v1_e792 = call i32 @unknown_1ce10(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e7a3

bb:                                               ; preds = %dec_label_pc_e73e
  %v1_e7a1 = call i32 @function_e7c1()
  store i32 %v1_e7a1, i32* @eax, align 4
  br label %dec_label_pc_e7a3

dec_label_pc_e7a3:                                ; preds = %bb, %dec_label_pc_e73e
  %v0_e7a3 = call i32 @function_e7bc()
  ret i32 %v0_e7a3

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_e7a6() local_unnamed_addr {
dec_label_pc_e7a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_e7a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e7a6
}

define i32 @function_e7bc() local_unnamed_addr {
dec_label_pc_e7bc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_e7c1() local_unnamed_addr {
dec_label_pc_e7c1:
  %v0_e7c6 = load i32, i32* @eax, align 4
  ret i32 %v0_e7c6
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e7c8:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e7ee

bb:                                               ; preds = %dec_label_pc_e7c8
  %v2_e7ec = call i32 @function_e7f3(i32 %arg1)
  br label %dec_label_pc_e7ee

dec_label_pc_e7ee:                                ; preds = %bb, %dec_label_pc_e7c8
  %v3_e7ec = phi i32 [ %v2_e7ec, %bb ], [ %arg1, %dec_label_pc_e7c8 ]
  ret i32 %v3_e7ec
}

define i32 @function_e7f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_e7f3:
  %v0_e7f4 = load i32, i32* @eax, align 4
  ret i32 %v0_e7f4
}

define i32 @_ZSt8_DestroyIP6CTxOutS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e7f5:
  %v2_e825 = call i32 @unknown_2082c(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e836

bb:                                               ; preds = %dec_label_pc_e7f5
  %v1_e834 = call i32 @function_e83b()
  br label %dec_label_pc_e836

dec_label_pc_e836:                                ; preds = %bb, %dec_label_pc_e7f5
  %v2_e834 = phi i32 [ %v1_e834, %bb ], [ 0, %dec_label_pc_e7f5 ]
  ret i32 %v2_e834
}

define i32 @function_e83b() local_unnamed_addr {
dec_label_pc_e83b:
  %v0_e83c = load i32, i32* @eax, align 4
  ret i32 %v0_e83c
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e83e:
  %v1_e861 = call i32 @unknown_1d006(i32 %arg1)
  %v1_e869 = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_e869 = inttoptr i32 %v1_e869 to i32*
  %v3_e869 = load i32, i32* %v2_e869, align 4
  %v3_e87a = call i32 @unknown_1d033(i32 %arg2, i32 %v3_e869, i32 %v1_e861)
  store i32 %arg2, i32* %v2_e869, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e894

bb:                                               ; preds = %dec_label_pc_e83e
  %v1_e892 = call i32 @function_e899()
  br label %dec_label_pc_e894

dec_label_pc_e894:                                ; preds = %bb, %dec_label_pc_e83e
  %v3_e892 = phi i32 [ %v1_e892, %bb ], [ 0, %dec_label_pc_e83e ]
  ret i32 %v3_e892

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e899() local_unnamed_addr {
dec_label_pc_e899:
  %v0_e89a = load i32, i32* @eax, align 4
  ret i32 %v0_e89a
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e89c:
  %v0_e8ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_e8ae
}

define i32 @function_e8b6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e8b6:
  %v0_e8b9 = load i32, i32* @ebp, align 4
  %v1_e8b9 = add i32 %v0_e8b9, -32
  %v2_e8b9 = inttoptr i32 %v1_e8b9 to i32*
  %v3_e8b9 = load i32, i32* %v2_e8b9, align 4
  %v1_e8bc = add i32 %v3_e8b9, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_e8bc = inttoptr i32 %v1_e8bc to i32*
  %v3_e8bc = load i32, i32* %v2_e8bc, align 4
  %v2_e8bf = add i32 %v0_e8b9, -16
  %v3_e8bf = inttoptr i32 %v2_e8bf to i32*
  store i32 %v3_e8bc, i32* %v3_e8bf, align 4
  %v0_e8c2 = load i32, i32* @ebp, align 4
  %v1_e8c2 = add i32 %v0_e8c2, -16
  %v1_e8c9 = add i32 %v0_e8c2, -28
  %v2_e8c9 = inttoptr i32 %v1_e8c9 to i32*
  %v3_e8c9 = load i32, i32* %v2_e8c9, align 4
  %v2_e8cf = call i32 @unknown_20916(i32 %v3_e8c9, i32 %v1_e8c2)
  %v0_e8d4 = load i32, i32* @ebp, align 4
  %v1_e8d4 = add i32 %v0_e8d4, -28
  %v2_e8d4 = inttoptr i32 %v1_e8d4 to i32*
  %v3_e8d4 = load i32, i32* %v2_e8d4, align 4
  store i32 %v3_e8d4, i32* @eax, align 4
  %v1_e8d7 = add i32 %v0_e8d4, -12
  %v2_e8d7 = inttoptr i32 %v1_e8d7 to i32*
  %v3_e8d7 = load i32, i32* %v2_e8d7, align 4
  %v1_e8da = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e8da = xor i32 %v1_e8da, %v3_e8d7
  %v3_e8da = icmp eq i32 %v2_e8da, 0
  store i32 %v2_e8da, i32* @edx, align 4
  br i1 %v3_e8da, label %bb, label %dec_label_pc_e8e3

bb:                                               ; preds = %dec_label_pc_e8b6
  %v1_e8e1 = call i32 @function_e8e8()
  br label %dec_label_pc_e8e3

dec_label_pc_e8e3:                                ; preds = %bb, %dec_label_pc_e8b6
  %v2_e8e1 = phi i32 [ %v1_e8e1, %bb ], [ %v3_e8d4, %dec_label_pc_e8b6 ]
  ret i32 %v2_e8e1
}

define i32 @function_e8e8() local_unnamed_addr {
dec_label_pc_e8e8:
  %v0_e8e9 = load i32, i32* @eax, align 4
  ret i32 %v0_e8e9
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e8ec:
  %stack_var_-20 = alloca i32, align 4
  %v2_e911 = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_e911
}

define i32 @function_e91a(i32 %arg1) local_unnamed_addr {
dec_label_pc_e91a:
  %v0_e91e = call i32 @unknown_20966()
  %v0_e923 = load i32, i32* @ebp, align 4
  %v1_e923 = add i32 %v0_e923, -28
  %v2_e923 = inttoptr i32 %v1_e923 to i32*
  %v3_e923 = load i32, i32* %v2_e923, align 4
  store i32 %v3_e923, i32* @eax, align 4
  %v1_e926 = add i32 %v0_e923, -12
  %v2_e926 = inttoptr i32 %v1_e926 to i32*
  %v3_e926 = load i32, i32* %v2_e926, align 4
  %v1_e929 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e929 = icmp eq i32 %v1_e929, %v3_e926
  br i1 %v3_e929, label %bb, label %dec_label_pc_e932

bb:                                               ; preds = %dec_label_pc_e91a
  %v1_e930 = call i32 @function_e937()
  br label %dec_label_pc_e932

dec_label_pc_e932:                                ; preds = %bb, %dec_label_pc_e91a
  %v2_e930 = phi i32 [ %v1_e930, %bb ], [ %v3_e923, %dec_label_pc_e91a ]
  ret i32 %v2_e930
}

define i32 @function_e937() local_unnamed_addr {
dec_label_pc_e937:
  %v0_e938 = load i32, i32* @eax, align 4
  ret i32 %v0_e938
}

define i32 @_ZN9__gnu_cxxeqIPK6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e93b:
  %v1_e95f = call i32 @unknown_209ef(i32 %arg1)
  %v1_e964 = inttoptr i32 %v1_e95f to i32*
  %v2_e964 = load i32, i32* %v1_e964, align 4
  %v1_e96c = call i32 @unknown_209ef(i32 %arg2)
  %v1_e971 = inttoptr i32 %v1_e96c to i32*
  %v2_e971 = load i32, i32* %v1_e971, align 4
  %v12_e973 = icmp eq i32 %v2_e964, %v2_e971
  %v1_e975 = zext i1 %v12_e973 to i32
  %v3_e975 = and i32 %v2_e971, -256
  %v4_e975 = or i32 %v1_e975, %v3_e975
  store i32 %v4_e975, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e984

bb:                                               ; preds = %dec_label_pc_e93b
  %v1_e982 = call i32 @function_e989()
  br label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %bb, %dec_label_pc_e93b
  %v2_e982 = phi i32 [ %v1_e982, %bb ], [ %v4_e975, %dec_label_pc_e93b ]
  ret i32 %v2_e982

; uselistorder directives
  uselistorder i32 %v2_e971, { 1, 0 }
  uselistorder i32 (i32)* @unknown_209ef, { 1, 0 }
}

define i32 @function_e989() local_unnamed_addr {
dec_label_pc_e989:
  %v0_e98e = load i32, i32* @eax, align 4
  ret i32 %v0_e98e
}

define i32 @_ZN7CVarIntIyEC1ERy(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e990:
  ret i32 %arg2
}

define i32 @function_e9a2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_e9a2:
  %v0_e9a2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_e9a8 = load i32, i32* @ebp, align 4
  %v2_e9a8 = add i32 %v1_e9a8, -12
  %v3_e9a8 = inttoptr i32 %v2_e9a8 to i32*
  store i32 %v0_e9a2, i32* %v3_e9a8, align 4
  %v0_e9ad = load i32, i32* @ebp, align 4
  %v1_e9ad = add i32 %v0_e9ad, -28
  %v2_e9ad = inttoptr i32 %v1_e9ad to i32*
  %v3_e9ad = load i32, i32* %v2_e9ad, align 4
  %v1_e9b0 = add i32 %v0_e9ad, -32
  %v2_e9b0 = inttoptr i32 %v1_e9b0 to i32*
  %v3_e9b0 = load i32, i32* %v2_e9b0, align 4
  store i32 %v3_e9b0, i32* @edx, align 4
  %v2_e9b3 = inttoptr i32 %v3_e9ad to i32*
  store i32 %v3_e9b0, i32* %v2_e9b3, align 4
  %v0_e9b5 = load i32, i32* @ebp, align 4
  %v1_e9b5 = add i32 %v0_e9b5, -12
  %v2_e9b5 = inttoptr i32 %v1_e9b5 to i32*
  %v3_e9b5 = load i32, i32* %v2_e9b5, align 4
  %v1_e9b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e9b8 = xor i32 %v1_e9b8, %v3_e9b5
  store i1 false, i1* @cf, align 1
  %v3_e9b8 = icmp eq i32 %v2_e9b8, 0
  store i32 %v2_e9b8, i32* @eax, align 4
  br i1 %v3_e9b8, label %bb, label %dec_label_pc_e9c1

bb:                                               ; preds = %dec_label_pc_e9a2
  %v1_e9bf = call i32 @function_e9c6()
  br label %dec_label_pc_e9c1

dec_label_pc_e9c1:                                ; preds = %bb, %dec_label_pc_e9a2
  %v3_e9bf = phi i32 [ %v1_e9bf, %bb ], [ %v2_e9b8, %dec_label_pc_e9a2 ]
  ret i32 %v3_e9bf
}

define i32 @function_e9c6() local_unnamed_addr {
dec_label_pc_e9c6:
  %v0_e9c7 = load i32, i32* @eax, align 4
  ret i32 %v0_e9c7
}

define i32 @_Z16GetSerializeSizeI7CVarIntIyEEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e9c8:
  %v3_e9ff = call i32 @unknown_20aaa(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_e9ff, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ea10

bb:                                               ; preds = %dec_label_pc_e9c8
  %v1_ea0e = call i32 @function_ea15()
  br label %dec_label_pc_ea10

dec_label_pc_ea10:                                ; preds = %bb, %dec_label_pc_e9c8
  %v2_ea0e = phi i32 [ %v1_ea0e, %bb ], [ %v3_e9ff, %dec_label_pc_e9c8 ]
  ret i32 %v2_ea0e
}

define i32 @function_ea15() local_unnamed_addr {
dec_label_pc_ea15:
  %v0_ea16 = load i32, i32* @eax, align 4
  ret i32 %v0_ea16
}

define i32 @_Z16GetSerializeSizeI17CScriptCompressorEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ea17:
  store i32 %arg1, i32* @eax, align 4
  %v3_ea4e = call i32 @function_1459f(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_ea4e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ea5f

bb:                                               ; preds = %dec_label_pc_ea17
  %v1_ea5d = call i32 @function_ea64()
  br label %dec_label_pc_ea5f

dec_label_pc_ea5f:                                ; preds = %bb, %dec_label_pc_ea17
  %v2_ea5d = phi i32 [ %v1_ea5d, %bb ], [ %v3_ea4e, %dec_label_pc_ea17 ]
  ret i32 %v2_ea5d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_ea64() local_unnamed_addr {
dec_label_pc_ea64:
  %v0_ea65 = load i32, i32* @eax, align 4
  ret i32 %v0_ea65
}

define i32 @_ZN7CVarIntIiEC1ERi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea66:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ea97

bb:                                               ; preds = %dec_label_pc_ea66
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_ea95 = call i32 @function_ea9c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_ea97

dec_label_pc_ea97:                                ; preds = %bb, %dec_label_pc_ea66
  %v4_ea95 = phi i32 [ %v3_ea95, %bb ], [ 0, %dec_label_pc_ea66 ]
  ret i32 %v4_ea95

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_ea9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea9c:
  %v0_ea9d = load i32, i32* @eax, align 4
  ret i32 %v0_ea9d
}

define i32 @_ZNK7CVarIntIiE16GetSerializeSizeEii(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ea9e:
  %v2_eac4 = load i32, i32* %arg1, align 4
  %v1_eac6 = inttoptr i32 %v2_eac4 to i32*
  %v2_eac6 = load i32, i32* %v1_eac6, align 4
  %v1_eacb = call i32 @unknown_20bcc(i32 %v2_eac6)
  store i32 %v1_eacb, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_eadc

bb:                                               ; preds = %dec_label_pc_ea9e
  %v1_eada = call i32 @function_eae1()
  br label %dec_label_pc_eadc

dec_label_pc_eadc:                                ; preds = %bb, %dec_label_pc_ea9e
  %v2_eada = phi i32 [ %v1_eada, %bb ], [ %v1_eacb, %dec_label_pc_ea9e ]
  ret i32 %v2_eada
}

define i32 @function_eae1() local_unnamed_addr {
dec_label_pc_eae1:
  %v0_eae2 = load i32, i32* @eax, align 4
  ret i32 %v0_eae2
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eae4:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_eb15 = call i32 @unknown_20c60(i32 %tmp104, i32 %arg3)
  %v2_eb27 = call i32 @unknown_20cc0(i32 %tmp104, i32 %arg2)
  store i32 %v2_eb27, i32* %arg1, align 4
  ret i32 %tmp104

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
}

define i32 @function_eb36(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eb36:
  %v2_eb36 = load i32, i32* @eax, align 4
  %v0_eb38 = load i32, i32* @ebp, align 4
  %v1_eb38 = add i32 %v0_eb38, -28
  %v2_eb38 = inttoptr i32 %v1_eb38 to i32*
  %v3_eb38 = load i32, i32* %v2_eb38, align 4
  %v2_eb3b = add i32 %v3_eb38, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_eb3b = inttoptr i32 %v2_eb3b to i32*
  store i32 %v2_eb36, i32* %v3_eb3b, align 4
  %v0_eb3e = load i32, i32* @ebp, align 4
  %v1_eb3e = add i32 %v0_eb3e, -28
  %v2_eb3e = inttoptr i32 %v1_eb3e to i32*
  %v3_eb3e = load i32, i32* %v2_eb3e, align 4
  %v1_eb41 = inttoptr i32 %v3_eb3e to i32*
  %v2_eb41 = load i32, i32* %v1_eb41, align 4
  %v1_eb43 = add i32 %v0_eb3e, -32
  %v2_eb43 = inttoptr i32 %v1_eb43 to i32*
  %v3_eb43 = load i32, i32* %v2_eb43, align 4
  %v2_eb4d = mul i32 %v3_eb43, 20
  %v3_eb50 = add i32 %v2_eb4d, %v2_eb41
  store i32 %v3_eb50, i32* @edx, align 4
  %v3_eb53 = load i32, i32* %v2_eb3e, align 4
  %v2_eb56 = add i32 %v3_eb53, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_eb56 = inttoptr i32 %v2_eb56 to i32*
  store i32 %v3_eb50, i32* %v3_eb56, align 4
  %v0_eb59 = load i32, i32* @ebp, align 4
  %v1_eb59 = add i32 %v0_eb59, -12
  %v2_eb59 = inttoptr i32 %v1_eb59 to i32*
  %v3_eb59 = load i32, i32* %v2_eb59, align 4
  %v1_eb5c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_eb5c = xor i32 %v1_eb5c, %v3_eb59
  %v3_eb5c = icmp eq i32 %v2_eb5c, 0
  store i32 %v2_eb5c, i32* @eax, align 4
  br i1 %v3_eb5c, label %bb, label %dec_label_pc_eb65

bb:                                               ; preds = %dec_label_pc_eb36
  %v1_eb63 = call i32 @function_eb83()
  store i32 %v1_eb63, i32* @eax, align 4
  br label %dec_label_pc_eb65

dec_label_pc_eb65:                                ; preds = %bb, %dec_label_pc_eb36
  %v0_eb65 = call i32 @function_eb7e()
  ret i32 %v0_eb65
}

define i32 @function_eb68() local_unnamed_addr {
dec_label_pc_eb68:
  %eax.global-to-local = alloca i32, align 4
  %v0_eb68 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_eb68
}

define i32 @function_eb7e() local_unnamed_addr {
dec_label_pc_eb7e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_eb83() local_unnamed_addr {
dec_label_pc_eb83:
  %v0_eb88 = load i32, i32* @eax, align 4
  ret i32 %v0_eb88
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb8a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ebad

bb:                                               ; preds = %dec_label_pc_eb8a
  %v2_ebab = call i32 @function_ebb2(i32 %arg1)
  br label %dec_label_pc_ebad

dec_label_pc_ebad:                                ; preds = %bb, %dec_label_pc_eb8a
  %v3_ebab = phi i32 [ %v2_ebab, %bb ], [ 0, %dec_label_pc_eb8a ]
  ret i32 %v3_ebab
}

define i32 @function_ebb2(i32 %arg1) local_unnamed_addr {
dec_label_pc_ebb2:
  %v0_ebb3 = load i32, i32* @eax, align 4
  ret i32 %v0_ebb3
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ebb4:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ebd7

bb:                                               ; preds = %dec_label_pc_ebb4
  %v2_ebd5 = call i32 @function_ebdc(i32 %arg1)
  br label %dec_label_pc_ebd7

dec_label_pc_ebd7:                                ; preds = %bb, %dec_label_pc_ebb4
  %v3_ebd5 = phi i32 [ %v2_ebd5, %bb ], [ 0, %dec_label_pc_ebb4 ]
  ret i32 %v3_ebd5
}

define i32 @function_ebda(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ebda:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ebdc(i32 %arg1) local_unnamed_addr {
dec_label_pc_ebdc:
  %v0_ebdd = load i32, i32* @eax, align 4
  ret i32 %v0_ebdd
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE18_M_fill_initializeEjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ebde:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_ec07 = call i32 @unknown_1d3a6(i32 %tmp104)
  ret i32 %arg3
}

define i32 @function_ec18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec18:
  %v0_ec18 = load i32, i32* @eax, align 4
  %v0_ec1c = load i32, i32* @ebp, align 4
  %v1_ec1c = add i32 %v0_ec1c, -32
  %v2_ec1c = inttoptr i32 %v1_ec1c to i32*
  %v3_ec1c = load i32, i32* %v2_ec1c, align 4
  %v0_ec23 = load i32, i32* @edx, align 4
  %v3_ec26 = call i32 @unknown_20e11(i32 %v0_ec23, i32 %v3_ec1c, i32 %v0_ec18)
  %v0_ec2b = load i32, i32* @ebp, align 4
  %v1_ec2b = add i32 %v0_ec2b, -28
  %v2_ec2b = inttoptr i32 %v1_ec2b to i32*
  %v3_ec2b = load i32, i32* %v2_ec2b, align 4
  %v1_ec2e = add i32 %v3_ec2b, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_ec2e = inttoptr i32 %v1_ec2e to i32*
  %v3_ec2e = load i32, i32* %v2_ec2e, align 4
  %v2_ec34 = add i32 %v3_ec2b, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_ec34 = inttoptr i32 %v2_ec34 to i32*
  store i32 %v3_ec2e, i32* %v3_ec34, align 4
  %v0_ec37 = load i32, i32* @ebp, align 4
  %v1_ec37 = add i32 %v0_ec37, -12
  %v2_ec37 = inttoptr i32 %v1_ec37 to i32*
  %v3_ec37 = load i32, i32* %v2_ec37, align 4
  %v1_ec3a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ec3a = xor i32 %v1_ec3a, %v3_ec37
  %v3_ec3a = icmp eq i32 %v2_ec3a, 0
  store i32 %v2_ec3a, i32* @eax, align 4
  br i1 %v3_ec3a, label %bb, label %dec_label_pc_ec43

bb:                                               ; preds = %dec_label_pc_ec18
  %v1_ec41 = call i32 @function_ec48()
  br label %dec_label_pc_ec43

dec_label_pc_ec43:                                ; preds = %bb, %dec_label_pc_ec18
  %v2_ec41 = phi i32 [ %v1_ec41, %bb ], [ %v2_ec3a, %dec_label_pc_ec18 ]
  ret i32 %v2_ec41
}

define i32 @function_ec48() local_unnamed_addr {
dec_label_pc_ec48:
  %v0_ec49 = load i32, i32* @eax, align 4
  ret i32 %v0_ec49
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec4a:
  %v0_ec5c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_ec5c
}

define i32 @function_ec62(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec62:
  %v0_ec62 = load i32, i32* @eax, align 4
  %v1_ec62 = load i32, i32* @ebp, align 4
  %v2_ec62 = add i32 %v1_ec62, -12
  %v3_ec62 = inttoptr i32 %v2_ec62 to i32*
  store i32 %v0_ec62, i32* %v3_ec62, align 4
  %v0_ec67 = load i32, i32* @ebp, align 4
  %v1_ec67 = add i32 %v0_ec67, -32
  %v2_ec67 = inttoptr i32 %v1_ec67 to i32*
  %v3_ec67 = load i32, i32* %v2_ec67, align 4
  %v1_ec6a = add i32 %v3_ec67, ptrtoint (i8** @global_var_4.1177 to i32)
  %v1_ec71 = add i32 %v0_ec67, -28
  %v2_ec71 = inttoptr i32 %v1_ec71 to i32*
  %v3_ec71 = load i32, i32* %v2_ec71, align 4
  %v3_ec77 = call i32 @unknown_20ed2(i32 %v3_ec71, i32 %v1_ec6a)
  %v0_ec7c = load i32, i32* @ebp, align 4
  %v1_ec7c = add i32 %v0_ec7c, -28
  %v2_ec7c = inttoptr i32 %v1_ec7c to i32*
  %v3_ec7c = load i32, i32* %v2_ec7c, align 4
  ret i32 %v3_ec7c
}

define i32 @function_ec86(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ec86:
  %v2_ec86 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_ec86 = load i32, i32* @eax, align 4
  %v4_ec86 = trunc i32 %v3_ec86 to i8
  %v5_ec86 = add i8 %v4_ec86, %v2_ec86
  %v21_ec86 = inttoptr i32 %v3_ec86 to i8*
  store i8 %v5_ec86, i8* %v21_ec86, align 1
  %v0_ec88 = load i32, i32* @ebp, align 4
  %v1_ec88 = load i32, i32* @eax, align 4
  %v2_ec88 = mul i32 %v1_ec88, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_ec88 = add i32 %v0_ec88, -24
  %v4_ec88 = add i32 %v3_ec88, %v2_ec88
  %v5_ec88 = inttoptr i32 %v4_ec88 to i8*
  %v6_ec88 = load i8, i8* %v5_ec88, align 1
  %v7_ec88 = load i32, i32* @edx, align 4
  %v8_ec88 = lshr i32 %v7_ec88, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_ec88 = trunc i32 %v8_ec88 to i8
  %v10_ec88 = add i8 %v9_ec88, %v6_ec88
  store i8 %v10_ec88, i8* %v5_ec88, align 1
  %v31_ec88 = load i32, i32* @eax, align 4
  ret i32 %v31_ec88
}

define i32 @function_ec8f() local_unnamed_addr {
dec_label_pc_ec8f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ec8f = load i32, i32* %ecx.global-to-local, align 4
  %v1_ec8f = sub i32 %v0_ec8f, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_ec8f, i32* %ecx.global-to-local, align 4
  %v0_ec91 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ec91
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEmiERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ec94:
  %v1_ecbf = inttoptr i32 %arg3 to i32*
  %v2_ecbf = load i32, i32* %v1_ecbf, align 4
  ret i32 %v2_ecbf
}

define i32 @function_ecc6() local_unnamed_addr {
dec_label_pc_ecc6:
  %v0_ecc6 = load i32, i32* @ecx, align 4
  %v1_ecc6 = sub i32 %v0_ecc6, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_ecc6, i32* @ecx, align 4
  %v2_ecc6 = icmp eq i32 %v1_ecc6, 0
  %v3_ecc6 = load i1, i1* @zf, align 1
  %v4_ecc6 = or i1 %v2_ecc6, %v3_ecc6
  %v0_ecc8 = load i32, i32* @eax, align 4
  br i1 %v4_ecc6, label %dec_label_pc_ecc8, label %dec_label_pc_ecca

dec_label_pc_ecc8:                                ; preds = %dec_label_pc_ecc6
  %v1_ecc8 = load i32, i32* @edx, align 4
  %v2_ecc8 = add i32 %v1_ecc8, %v0_ecc8
  br label %dec_label_pc_ecca

dec_label_pc_ecca:                                ; preds = %dec_label_pc_ecc6, %dec_label_pc_ecc8
  %v0_ecca = phi i32 [ %v2_ecc8, %dec_label_pc_ecc8 ], [ %v0_ecc8, %dec_label_pc_ecc6 ]
  %tmp5 = mul i32 %v0_ecca, -4
  %v2_eccf = add i32 %v1_ecc6, %tmp5
  %v1_ecd1 = load i32, i32* @ebp, align 4
  %v2_ecd1 = add i32 %v1_ecd1, -16
  %v3_ecd1 = inttoptr i32 %v2_ecd1 to i32*
  store i32 %v2_eccf, i32* %v3_ecd1, align 4
  %v0_ecd4 = load i32, i32* @ebp, align 4
  %v1_ecd4 = add i32 %v0_ecd4, -16
  %v1_ecdb = add i32 %v0_ecd4, -28
  %v2_ecdb = inttoptr i32 %v1_ecdb to i32*
  %v3_ecdb = load i32, i32* %v2_ecdb, align 4
  %v2_ece1 = call i32 @unknown_20f1c(i32 %v3_ecdb, i32 %v1_ecd4)
  %v0_ece6 = load i32, i32* @ebp, align 4
  %v1_ece6 = add i32 %v0_ece6, -28
  %v2_ece6 = inttoptr i32 %v1_ece6 to i32*
  %v3_ece6 = load i32, i32* %v2_ece6, align 4
  store i32 %v3_ece6, i32* @eax, align 4
  %v1_ece9 = add i32 %v0_ece6, -12
  %v2_ece9 = inttoptr i32 %v1_ece9 to i32*
  %v3_ece9 = load i32, i32* %v2_ece9, align 4
  %v1_ecec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ecec = xor i32 %v1_ecec, %v3_ece9
  %v3_ecec = icmp eq i32 %v2_ecec, 0
  store i32 %v2_ecec, i32* @edx, align 4
  br i1 %v3_ecec, label %bb, label %dec_label_pc_ecf5

bb:                                               ; preds = %dec_label_pc_ecca
  %v1_ecf3 = call i32 @function_ecfa()
  br label %dec_label_pc_ecf5

dec_label_pc_ecf5:                                ; preds = %bb, %dec_label_pc_ecca
  %v2_ecf3 = phi i32 [ %v1_ecf3, %bb ], [ %v3_ece6, %dec_label_pc_ecca ]
  ret i32 %v2_ecf3

; uselistorder directives
  uselistorder i32 %v0_ecc8, { 1, 0 }
  uselistorder label %dec_label_pc_ecca, { 1, 0 }
}

define i32 @function_ecfa() local_unnamed_addr {
dec_label_pc_ecfa:
  %v0_ecfb = load i32, i32* @eax, align 4
  ret i32 %v0_ecfb
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEdeEv() local_unnamed_addr {
dec_label_pc_ecfe:
  %eax.global-to-local = alloca i32, align 4
  %v17_ed01 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_ed01
}

define i32 @function_ed04(i32 %arg1) local_unnamed_addr {
dec_label_pc_ed04:
  %v0_ed04 = load i32, i32* @ebp, align 4
  %v1_ed04 = add i32 %v0_ed04, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_ed04 = inttoptr i32 %v1_ed04 to i32*
  %v3_ed04 = load i32, i32* %v2_ed04, align 4
  %v2_ed07 = add i32 %v0_ed04, -28
  %v3_ed07 = inttoptr i32 %v2_ed07 to i32*
  store i32 %v3_ed04, i32* %v3_ed07, align 4
  %v0_ed0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_ed10 = load i32, i32* @ebp, align 4
  %v2_ed10 = add i32 %v1_ed10, -12
  %v3_ed10 = inttoptr i32 %v2_ed10 to i32*
  store i32 %v0_ed0a, i32* %v3_ed10, align 4
  %v0_ed15 = load i32, i32* @ebp, align 4
  %v1_ed15 = add i32 %v0_ed15, -28
  %v2_ed15 = inttoptr i32 %v1_ed15 to i32*
  %v3_ed15 = load i32, i32* %v2_ed15, align 4
  %v1_ed18 = inttoptr i32 %v3_ed15 to i32*
  %v2_ed18 = load i32, i32* %v1_ed18, align 4
  store i32 %v2_ed18, i32* @eax, align 4
  %v1_ed1a = add i32 %v0_ed15, -12
  %v2_ed1a = inttoptr i32 %v1_ed1a to i32*
  %v3_ed1a = load i32, i32* %v2_ed1a, align 4
  %v1_ed1d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ed1d = xor i32 %v1_ed1d, %v3_ed1a
  store i1 false, i1* @cf, align 1
  %v3_ed1d = icmp eq i32 %v2_ed1d, 0
  store i1 %v3_ed1d, i1* @zf, align 1
  store i32 %v2_ed1d, i32* @edx, align 4
  br i1 %v3_ed1d, label %bb, label %dec_label_pc_ed26

bb:                                               ; preds = %dec_label_pc_ed04
  %v1_ed24 = call i32 @function_ed2b()
  br label %dec_label_pc_ed26

dec_label_pc_ed26:                                ; preds = %bb, %dec_label_pc_ed04
  %v2_ed24 = phi i32 [ %v1_ed24, %bb ], [ %v2_ed18, %dec_label_pc_ed04 ]
  ret i32 %v2_ed24
}

define i32 @function_ed2b() local_unnamed_addr {
dec_label_pc_ed2b:
  %v0_ed2c = load i32, i32* @eax, align 4
  ret i32 %v0_ed2c
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE7destroyEPS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ed2e:
  ret i32 %arg2
}

define i32 @function_ed4e() local_unnamed_addr {
dec_label_pc_ed4e:
  %v0_ed4e = load i32, i32* @eax, align 4
  %v1_ed51 = call i32 @function_14c28(i32 %v0_ed4e)
  %v0_ed56 = load i32, i32* @ebp, align 4
  %v1_ed56 = add i32 %v0_ed56, -12
  %v2_ed56 = inttoptr i32 %v1_ed56 to i32*
  %v3_ed56 = load i32, i32* %v2_ed56, align 4
  %v1_ed59 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ed59 = xor i32 %v1_ed59, %v3_ed56
  %v3_ed59 = icmp eq i32 %v2_ed59, 0
  store i32 %v2_ed59, i32* @eax, align 4
  br i1 %v3_ed59, label %bb, label %dec_label_pc_ed62

bb:                                               ; preds = %dec_label_pc_ed4e
  %v1_ed60 = call i32 @function_ed67()
  br label %dec_label_pc_ed62

dec_label_pc_ed62:                                ; preds = %bb, %dec_label_pc_ed4e
  %v2_ed60 = phi i32 [ %v1_ed60, %bb ], [ %v2_ed59, %dec_label_pc_ed4e ]
  ret i32 %v2_ed60
}

define i32 @function_ed67() local_unnamed_addr {
dec_label_pc_ed67:
  %v0_ed68 = load i32, i32* @eax, align 4
  ret i32 %v0_ed68
}

define i32 @_ZSt4swapIP6CTxOutEvRT_S3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ed69:
  %eax.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* %eax.global-to-local, align 4
  %v2_ed89 = load i32, i32* %arg1, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_ed91 = inttoptr i32 %arg2 to i32*
  %v2_ed91 = load i32, i32* %v1_ed91, align 4
  store i32 %v2_ed91, i32* %arg1, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %v2_ed89, i32* %v1_ed91, align 4
  %v3_ed9e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_ed9e

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_eda0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eda0:
  %v0_eda0 = load i32, i32* @ebp, align 4
  %v1_eda0 = add i32 %v0_eda0, -12
  %v2_eda0 = inttoptr i32 %v1_eda0 to i32*
  %v3_eda0 = load i32, i32* %v2_eda0, align 4
  %v1_eda3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_eda3 = xor i32 %v1_eda3, %v3_eda0
  %v3_eda3 = icmp eq i32 %v2_eda3, 0
  store i32 %v2_eda3, i32* @eax, align 4
  br i1 %v3_eda3, label %bb, label %dec_label_pc_edac

bb:                                               ; preds = %dec_label_pc_eda0
  %v1_edaa = call i32 @function_edb1()
  br label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %bb, %dec_label_pc_eda0
  %v2_edaa = phi i32 [ %v1_edaa, %bb ], [ %v2_eda3, %dec_label_pc_eda0 ]
  ret i32 %v2_edaa
}

define i32 @function_edb1() local_unnamed_addr {
dec_label_pc_edb1:
  %v0_edb2 = load i32, i32* @eax, align 4
  ret i32 %v0_edb2
}

define i32 @_ZNSt12__alloc_swapISaI6CTxOutELb1EE8_S_do_itERS1_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_edb3:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_eddc

bb:                                               ; preds = %dec_label_pc_edb3
  %v3_edda = call i32 @function_ede1(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_eddc

dec_label_pc_eddc:                                ; preds = %bb, %dec_label_pc_edb3
  %v4_edda = phi i32 [ %v3_edda, %bb ], [ 0, %dec_label_pc_edb3 ]
  ret i32 %v4_edda
}

define i32 @function_ede1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ede1:
  %v0_ede2 = load i32, i32* @eax, align 4
  ret i32 %v0_ede2
}

define i32 @_ZN5boost9addressofIKSt6vectorI6CTxOutSaIS2_EEEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_ede3:
  %stack_var_-20 = alloca i32, align 4
  %v2_ee01 = ptrtoint i32* %stack_var_-20 to i32
  %v2_ee07 = call i32 @unknown_210a5(i32 %v2_ee01, i32 %arg1)
  %v1_ee12 = call i32 @unknown_210dd(i32 %v2_ee01)
  %v2_ee22 = call i32 @unknown_2110c(i32 %v1_ee12, i32 0)
  store i32 %v2_ee22, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ee33

bb:                                               ; preds = %dec_label_pc_ede3
  %v1_ee31 = call i32 @function_ee38()
  br label %dec_label_pc_ee33

dec_label_pc_ee33:                                ; preds = %bb, %dec_label_pc_ede3
  %v2_ee31 = phi i32 [ %v1_ee31, %bb ], [ %v2_ee22, %dec_label_pc_ede3 ]
  ret i32 %v2_ee31
}

define i32 @function_ee38() local_unnamed_addr {
dec_label_pc_ee38:
  %v0_ee39 = load i32, i32* @eax, align 4
  ret i32 %v0_ee39
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPKSt6vectorI6CTxOutSaIS3_EEEC1ERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee3a:
  ret i32 %arg1
}

define i32 @function_ee5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee5a:
  %v0_ee5a = load i32, i32* @eax, align 4
  %v1_ee5d = call i32 @unknown_1d33e(i32 %v0_ee5a)
  %v0_ee62 = load i32, i32* @ebp, align 4
  %v1_ee62 = add i32 %v0_ee62, -32
  %v2_ee62 = inttoptr i32 %v1_ee62 to i32*
  %v3_ee62 = load i32, i32* %v2_ee62, align 4
  %v1_ee65 = inttoptr i32 %v3_ee62 to i32*
  %v2_ee65 = load i32, i32* %v1_ee65, align 4
  %v1_ee67 = add i32 %v0_ee62, -28
  %v2_ee67 = inttoptr i32 %v1_ee67 to i32*
  %v3_ee67 = load i32, i32* %v2_ee67, align 4
  %v2_ee6a = inttoptr i32 %v3_ee67 to i32*
  store i32 %v2_ee65, i32* %v2_ee6a, align 4
  %v0_ee6c = load i32, i32* @ebp, align 4
  %v1_ee6c = add i32 %v0_ee6c, -12
  %v2_ee6c = inttoptr i32 %v1_ee6c to i32*
  %v3_ee6c = load i32, i32* %v2_ee6c, align 4
  %v1_ee6f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ee6f = xor i32 %v1_ee6f, %v3_ee6c
  %v3_ee6f = icmp eq i32 %v2_ee6f, 0
  store i32 %v2_ee6f, i32* @eax, align 4
  br i1 %v3_ee6f, label %bb, label %dec_label_pc_ee78

bb:                                               ; preds = %dec_label_pc_ee5a
  %v1_ee76 = call i32 @function_ee7d()
  br label %dec_label_pc_ee78

dec_label_pc_ee78:                                ; preds = %bb, %dec_label_pc_ee5a
  %v2_ee76 = phi i32 [ %v1_ee76, %bb ], [ %v2_ee6f, %dec_label_pc_ee5a ]
  ret i32 %v2_ee76
}

define i32 @function_ee7d() local_unnamed_addr {
dec_label_pc_ee7d:
  %v0_ee7e = load i32, i32* @eax, align 4
  ret i32 %v0_ee7e
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPKSt6vectorI6CTxOutSaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SE_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee7f:
  ret i32 0
}

define i32 @function_ee98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee98:
  %v0_ee9c = load i32, i32* @edx, align 4
  %v1_ee9c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ee9c = icmp eq i32 %v1_ee9c, %v0_ee9c
  br i1 %v3_ee9c, label %bb, label %dec_label_pc_ee98.dec_label_pc_eea5_crit_edge

dec_label_pc_ee98.dec_label_pc_eea5_crit_edge:    ; preds = %dec_label_pc_ee98
  %v2_eea3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_eea5

bb:                                               ; preds = %dec_label_pc_ee98
  %v1_eea3 = call i32 @function_eeaa()
  br label %dec_label_pc_eea5

dec_label_pc_eea5:                                ; preds = %dec_label_pc_ee98.dec_label_pc_eea5_crit_edge, %bb
  %v2_eea3 = phi i32 [ %v2_eea3.pre, %dec_label_pc_ee98.dec_label_pc_eea5_crit_edge ], [ %v1_eea3, %bb ]
  ret i32 %v2_eea3

; uselistorder directives
  uselistorder label %dec_label_pc_eea5, { 1, 0 }
}

define i32 @function_eeaa() local_unnamed_addr {
dec_label_pc_eeaa:
  %v0_eeab = load i32, i32* @eax, align 4
  ret i32 %v0_eeab
}

define i32 @_ZN5boost15foreach_detail_7derefofIKSt6vectorI6CTxOutSaIS3_EEEERT_PS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_eeac:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_eed2

bb:                                               ; preds = %dec_label_pc_eeac
  %v2_eed0 = call i32 @function_eed7(i32 %arg1)
  br label %dec_label_pc_eed2

dec_label_pc_eed2:                                ; preds = %bb, %dec_label_pc_eeac
  %v3_eed0 = phi i32 [ %v2_eed0, %bb ], [ %arg1, %dec_label_pc_eeac ]
  ret i32 %v3_eed0
}

define i32 @function_eed7(i32 %arg1) local_unnamed_addr {
dec_label_pc_eed7:
  %v0_eed8 = load i32, i32* @eax, align 4
  ret i32 %v0_eed8
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_eed9:
  ret i32 %arg1
}

define i32 @function_eee2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eee2:
  %v0_eee2 = load i32, i32* @eax, align 4
  %v1_eee2 = load i32, i32* @ebp, align 4
  %v2_eee2 = add i32 %v1_eee2, -28
  %v3_eee2 = inttoptr i32 %v2_eee2 to i32*
  store i32 %v0_eee2, i32* %v3_eee2, align 4
  %v0_eee5 = load i32, i32* @ebp, align 4
  %v1_eee5 = add i32 %v0_eee5, 12
  %v2_eee5 = inttoptr i32 %v1_eee5 to i32*
  %v3_eee5 = load i32, i32* %v2_eee5, align 4
  %v2_eee8 = add i32 %v0_eee5, -32
  %v3_eee8 = inttoptr i32 %v2_eee8 to i32*
  store i32 %v3_eee5, i32* %v3_eee8, align 4
  %v0_eeeb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_eef1 = load i32, i32* @ebp, align 4
  %v2_eef1 = add i32 %v1_eef1, -12
  %v3_eef1 = inttoptr i32 %v2_eef1 to i32*
  store i32 %v0_eeeb, i32* %v3_eef1, align 4
  %v0_eef6 = load i32, i32* @ebp, align 4
  %v1_eef6 = add i32 %v0_eef6, -28
  %v2_eef6 = inttoptr i32 %v1_eef6 to i32*
  %v3_eef6 = load i32, i32* %v2_eef6, align 4
  %v1_eef9 = add i32 %v0_eef6, -32
  %v2_eef9 = inttoptr i32 %v1_eef9 to i32*
  %v3_eef9 = load i32, i32* %v2_eef9, align 4
  %v2_ef03 = call i32 @unknown_21235(i32 %v3_eef6, i32 %v3_eef9)
  %v0_ef0b = load i32, i32* @ebp, align 4
  %v1_ef0b = add i32 %v0_ef0b, -28
  %v2_ef0b = inttoptr i32 %v1_ef0b to i32*
  %v3_ef0b = load i32, i32* %v2_ef0b, align 4
  store i32 %v3_ef0b, i32* @eax, align 4
  %v1_ef0e = add i32 %v0_ef0b, -12
  %v2_ef0e = inttoptr i32 %v1_ef0e to i32*
  %v3_ef0e = load i32, i32* %v2_ef0e, align 4
  %v1_ef11 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ef11 = icmp eq i32 %v1_ef11, %v3_ef0e
  br i1 %v3_ef11, label %bb, label %dec_label_pc_ef1a

bb:                                               ; preds = %dec_label_pc_eee2
  %v1_ef18 = call i32 @function_ef1f()
  br label %dec_label_pc_ef1a

dec_label_pc_ef1a:                                ; preds = %bb, %dec_label_pc_eee2
  %v2_ef18 = phi i32 [ %v1_ef18, %bb ], [ %v3_ef0b, %dec_label_pc_eee2 ]
  ret i32 %v2_ef18
}

define i32 @function_ef1f() local_unnamed_addr {
dec_label_pc_ef1f:
  %v0_ef20 = load i32, i32* @eax, align 4
  ret i32 %v0_ef20
}

define i32 @function_ef22(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef22:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef24:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_ef47 = call i32 @unknown_1d428(i32 %tmp102)
  %v1_ef52 = inttoptr i32 %arg2 to i32*
  %v2_ef52 = load i32, i32* %v1_ef52, align 4
  store i32 %v2_ef52, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ef62

bb:                                               ; preds = %dec_label_pc_ef24
  %v1_ef60 = call i32 @function_ef67()
  br label %dec_label_pc_ef62

dec_label_pc_ef62:                                ; preds = %bb, %dec_label_pc_ef24
  %v2_ef60 = phi i32 [ %v1_ef60, %bb ], [ 0, %dec_label_pc_ef24 ]
  ret i32 %v2_ef60
}

define i32 @function_ef67() local_unnamed_addr {
dec_label_pc_ef67:
  %v0_ef68 = load i32, i32* @eax, align 4
  ret i32 %v0_ef68
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef69:
  %v2_ef93 = call i32 @unknown_2130f(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_efaa

bb:                                               ; preds = %dec_label_pc_ef69
  %v1_efa8 = call i32 @function_efaf()
  br label %dec_label_pc_efaa

dec_label_pc_efaa:                                ; preds = %bb, %dec_label_pc_ef69
  %v2_efa8 = phi i32 [ %v1_efa8, %bb ], [ %arg1, %dec_label_pc_ef69 ]
  ret i32 %v2_efa8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_efaf() local_unnamed_addr {
dec_label_pc_efaf:
  %v0_efb0 = load i32, i32* @eax, align 4
  ret i32 %v0_efb0
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_efb3:
  ret i32 %arg1
}

define i32 @function_efd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_efd4:
  %v2_efd4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_efd4 = load i32, i32* @eax, align 4
  %v4_efd4 = trunc i32 %v3_efd4 to i8
  %v5_efd4 = add i8 %v4_efd4, %v2_efd4
  %v21_efd4 = inttoptr i32 %v3_efd4 to i8*
  store i8 %v5_efd4, i8* %v21_efd4, align 1
  %v0_efd6 = load i32, i32* @ebp, align 4
  %v1_efd6 = load i32, i32* @eax, align 4
  %v2_efd6 = mul i32 %v1_efd6, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_efd6 = add i32 %v0_efd6, -24
  %v4_efd6 = add i32 %v3_efd6, %v2_efd6
  %v5_efd6 = inttoptr i32 %v4_efd6 to i8*
  %v6_efd6 = load i8, i8* %v5_efd6, align 1
  %v7_efd6 = load i32, i32* @edx, align 4
  %v8_efd6 = lshr i32 %v7_efd6, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_efd6 = trunc i32 %v8_efd6 to i8
  %v10_efd6 = add i8 %v9_efd6, %v6_efd6
  store i8 %v10_efd6, i8* %v5_efd6, align 1
  %v31_efd6 = load i32, i32* @eax, align 4
  ret i32 %v31_efd6
}

define i32 @function_efdd() local_unnamed_addr {
dec_label_pc_efdd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_efdd = load i32, i32* %ecx.global-to-local, align 4
  %v1_efdd = sub i32 %v0_efdd, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_efdd, i32* %ecx.global-to-local, align 4
  %v0_efdf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_efdf
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_efe0:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_effa = load i32, i32* %arg1, align 4
  %v1_effc = add i32 %v2_effa, 20
  store i32 %v1_effc, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f013

bb:                                               ; preds = %dec_label_pc_efe0
  %v2_f011 = call i32 @function_f018(i32 %tmp100)
  br label %dec_label_pc_f013

dec_label_pc_f013:                                ; preds = %bb, %dec_label_pc_efe0
  %v4_f011 = phi i32 [ %v2_f011, %bb ], [ %tmp100, %dec_label_pc_efe0 ]
  ret i32 %v4_f011
}

define i32 @function_f018(i32 %arg1) local_unnamed_addr {
dec_label_pc_f018:
  %v0_f019 = load i32, i32* @eax, align 4
  ret i32 %v0_f019
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_f01a:
  %v2_f034 = load i32, i32* %arg1, align 4
  ret i32 %v2_f034
}

define i32 @function_f046(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f046:
  %v0_f048 = load i32, i32* @eax, align 4
  ret i32 %v0_f048
}

define i32 @_Z16GetSerializeSizeI7uint256EjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f049:
  %v3_f080 = call i32 @unknown_21439(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_f080, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f091

bb:                                               ; preds = %dec_label_pc_f049
  %v1_f08f = call i32 @function_f096()
  br label %dec_label_pc_f091

dec_label_pc_f091:                                ; preds = %bb, %dec_label_pc_f049
  %v3_f08f = phi i32 [ %v1_f08f, %bb ], [ %v3_f080, %dec_label_pc_f049 ]
  ret i32 %v3_f08f
}

declare i32 @__stack_chk_fail.390() local_unnamed_addr

define i32 @function_f096() local_unnamed_addr {
dec_label_pc_f096:
  %v0_f097 = load i32, i32* @eax, align 4
  ret i32 %v0_f097
}

define i32 @_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f098:
  ret i32 %arg4
}

define i32 @function_f0c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f0c4:
  %v0_f0c4 = load i32, i32* @eax, align 4
  %v0_f0c8 = load i32, i32* @ebp, align 4
  %v1_f0c8 = add i32 %v0_f0c8, -36
  %v2_f0c8 = inttoptr i32 %v1_f0c8 to i32*
  %v3_f0c8 = load i32, i32* %v2_f0c8, align 4
  %v1_f0cf = add i32 %v0_f0c8, -32
  %v2_f0cf = inttoptr i32 %v1_f0cf to i32*
  %v3_f0cf = load i32, i32* %v2_f0cf, align 4
  %v1_f0d6 = add i32 %v0_f0c8, -28
  %v2_f0d6 = inttoptr i32 %v1_f0d6 to i32*
  %v3_f0d6 = load i32, i32* %v2_f0d6, align 4
  %v4_f0dc = call i32 @unknown_214c4(i32 %v3_f0d6, i32 %v3_f0cf, i32 %v3_f0c8, i32 %v0_f0c4)
  %v0_f0e1 = load i32, i32* @ebp, align 4
  %v1_f0e1 = add i32 %v0_f0e1, -12
  %v2_f0e1 = inttoptr i32 %v1_f0e1 to i32*
  %v3_f0e1 = load i32, i32* %v2_f0e1, align 4
  %v1_f0e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f0e4 = xor i32 %v1_f0e4, %v3_f0e1
  %v3_f0e4 = icmp eq i32 %v2_f0e4, 0
  store i32 %v2_f0e4, i32* @eax, align 4
  br i1 %v3_f0e4, label %bb, label %dec_label_pc_f0ed

bb:                                               ; preds = %dec_label_pc_f0c4
  %v1_f0eb = call i32 @function_f0f2()
  br label %dec_label_pc_f0ed

dec_label_pc_f0ed:                                ; preds = %bb, %dec_label_pc_f0c4
  %v2_f0eb = phi i32 [ %v1_f0eb, %bb ], [ %v2_f0e4, %dec_label_pc_f0c4 ]
  ret i32 %v2_f0eb
}

define i32 @function_f0f2() local_unnamed_addr {
dec_label_pc_f0f2:
  %v0_f0f3 = load i32, i32* @eax, align 4
  ret i32 %v0_f0f3
}

define i32 @_Z16GetSerializeSizeI13CDiskBlockPosEjRKT_li(i32 %arg1) local_unnamed_addr {
dec_label_pc_f0f4:
  ret i32 %arg1
}

define i32 @function_f102(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f102:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_f102 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_f102 = or i32 %v0_f102, 137
  store i32 %v11_f102, i32* %eax.global-to-local, align 4
  %v0_f104 = load i32, i32* @ebp, align 4
  %v1_f104 = add i32 %v0_f104, ptrtoint (i8** @global_var_1.1176 to i32)
  %v9_f104 = icmp eq i32 %v1_f104, 0
  store i32 %v1_f104, i32* %ebp.global-to-local, align 4
  %v0_f105 = load i32, i32* @ecx, align 4
  %v1_f105 = sub i32 %v0_f105, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_f105, i32* @ecx, align 4
  %v2_f105 = icmp eq i32 %v1_f105, 0
  %v4_f105 = or i1 %v9_f104, %v2_f105
  br i1 %v4_f105, label %dec_label_pc_f107, label %bb

bb:                                               ; preds = %dec_label_pc_f102
  %v6_f105 = call i32 @__stack_chk_fail.390()
  store i32 %v6_f105, i32* %eax.global-to-local, align 4
  %v0_f107.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_f108.pre = load i32, i32* @ecx, align 4
  %v6_f108.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_f107

dec_label_pc_f107:                                ; preds = %dec_label_pc_f102, %bb
  %v6_f108 = phi i1 [ false, %dec_label_pc_f102 ], [ %v6_f108.pre, %bb ]
  %v30_f108 = phi i32 [ %v1_f105, %dec_label_pc_f102 ], [ %v0_f108.pre, %bb ]
  %v0_f107 = phi i32 [ %v1_f104, %dec_label_pc_f102 ], [ %v0_f107.pre, %bb ]
  %v1_f107 = add i32 %v0_f107, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_f107, i32* @ebp, align 4
  %v1_f108 = add i32 %v30_f108, -1587159995
  %v2_f108 = inttoptr i32 %v1_f108 to i8*
  %v3_f108 = load i8, i8* %v2_f108, align 1
  %v5_f108 = trunc i32 %v30_f108 to i8
  %v7_f108 = zext i1 %v6_f108 to i8
  %v8_f108 = add i8 %v3_f108, %v5_f108
  %v9_f108 = add i8 %v8_f108, %v7_f108
  %v27_f108 = icmp ule i8 %v9_f108, %v3_f108
  %v28_f108 = icmp ult i8 %v8_f108, %v3_f108
  %v29_f108 = select i1 %v6_f108, i1 %v27_f108, i1 %v28_f108
  store i1 %v29_f108, i1* %cf.global-to-local, align 1
  store i8 %v9_f108, i8* %v2_f108, align 1
  %v0_f10e = load i32, i32* %eax.global-to-local, align 4
  %v1_f10e = trunc i32 %v0_f10e to i8
  %v2_f10e = load i1, i1* %cf.global-to-local, align 1
  %v3_f10e = zext i1 %v2_f10e to i8
  %v4_f10e = add i8 %v3_f10e, %v1_f10e
  %v19_f10e = icmp ule i8 %v4_f10e, %v1_f10e
  %v21_f10e = icmp eq i1 %v2_f10e, %v19_f10e
  store i1 %v21_f10e, i1* %cf.global-to-local, align 1
  %v22_f10e = zext i8 %v4_f10e to i32
  %v24_f10e = and i32 %v0_f10e, -256
  %v25_f10e = or i32 %v22_f10e, %v24_f10e
  store i32 %v25_f10e, i32* %eax.global-to-local, align 4
  %v1_f110 = inttoptr i32 %v25_f10e to i8*
  %v2_f110 = load i8, i8* %v1_f110, align 1
  %v5_f110 = add i8 %v2_f110, %v4_f10e
  store i8 %v5_f110, i8* %v1_f110, align 1
  %v0_f112 = load i32, i32* %eax.global-to-local, align 4
  %v1_f112 = load i32, i32* @ebp, align 4
  %v2_f112 = add i32 %v1_f112, -12
  %v3_f112 = inttoptr i32 %v2_f112 to i32*
  store i32 %v0_f112, i32* %v3_f112, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_f117 = load i32, i32* @ebp, align 4
  %v1_f117 = add i32 %v0_f117, -36
  %v2_f117 = inttoptr i32 %v1_f117 to i32*
  %v3_f117 = load i32, i32* %v2_f117, align 4
  store i32 %v3_f117, i32* %eax.global-to-local, align 4
  %v1_f11e = add i32 %v0_f117, -32
  %v2_f11e = inttoptr i32 %v1_f11e to i32*
  %v3_f11e = load i32, i32* %v2_f11e, align 4
  store i32 %v3_f11e, i32* %eax.global-to-local, align 4
  %v1_f125 = add i32 %v0_f117, -28
  %v2_f125 = inttoptr i32 %v1_f125 to i32*
  %v3_f125 = load i32, i32* %v2_f125, align 4
  store i32 %v3_f125, i32* @eax, align 4
  %v3_f12b = call i32 @function_157c6(i32 %v3_f125, i32 %v3_f11e, i32 %v3_f117)
  store i32 %v3_f12b, i32* @eax, align 4
  %v0_f130 = load i32, i32* @ebp, align 4
  %v1_f130 = add i32 %v0_f130, -12
  %v2_f130 = inttoptr i32 %v1_f130 to i32*
  %v3_f130 = load i32, i32* %v2_f130, align 4
  %v1_f133 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_f133 = icmp eq i32 %v1_f133, %v3_f130
  br i1 %v3_f133, label %bb10, label %dec_label_pc_f13c

bb10:                                             ; preds = %dec_label_pc_f107
  %v1_f13a = call i32 @function_f141()
  store i32 %v1_f13a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f13c

dec_label_pc_f13c:                                ; preds = %bb10, %dec_label_pc_f107
  %v2_f13a = phi i32 [ %v1_f13a, %bb10 ], [ %v3_f12b, %dec_label_pc_f107 ]
  ret i32 %v2_f13a

; uselistorder directives
  uselistorder i8 %v4_f10e, { 0, 2, 1 }
  uselistorder i8 %v1_f10e, { 1, 0 }
  uselistorder i8 %v9_f108, { 1, 0 }
  uselistorder i8 %v8_f108, { 1, 0 }
  uselistorder i8 %v3_f108, { 1, 2, 0 }
  uselistorder i32 %v30_f108, { 1, 0 }
  uselistorder i1 %v6_f108, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder label %dec_label_pc_f107, { 1, 0 }
}

define i32 @function_f141() local_unnamed_addr {
dec_label_pc_f141:
  %v0_f142 = load i32, i32* @eax, align 4
  ret i32 %v0_f142
}

define i32 @_Z9SerializeI11CHashWriter7uint256EvRT_RKT0_li(i32 %arg1) local_unnamed_addr {
dec_label_pc_f143:
  ret i32 %arg1
}

define i32 @function_f14c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f14c:
  %v0_f14c = load i32, i32* @eax, align 4
  %v1_f14c = load i32, i32* @ebp, align 4
  %v2_f14c = add i32 %v1_f14c, -28
  %v3_f14c = inttoptr i32 %v2_f14c to i32*
  store i32 %v0_f14c, i32* %v3_f14c, align 4
  %v0_f14f = load i32, i32* @ebp, align 4
  %v1_f14f = add i32 %v0_f14f, 12
  %v2_f14f = inttoptr i32 %v1_f14f to i32*
  %v3_f14f = load i32, i32* %v2_f14f, align 4
  %v2_f152 = add i32 %v0_f14f, -32
  %v3_f152 = inttoptr i32 %v2_f152 to i32*
  store i32 %v3_f14f, i32* %v3_f152, align 4
  %v0_f155 = load i32, i32* @ebp, align 4
  %v1_f155 = add i32 %v0_f155, 16
  %v2_f155 = inttoptr i32 %v1_f155 to i32*
  %v3_f155 = load i32, i32* %v2_f155, align 4
  %v2_f158 = add i32 %v0_f155, -36
  %v3_f158 = inttoptr i32 %v2_f158 to i32*
  store i32 %v3_f155, i32* %v3_f158, align 4
  %v0_f15b = load i32, i32* @ebp, align 4
  %v1_f15b = add i32 %v0_f15b, 20
  %v2_f15b = inttoptr i32 %v1_f15b to i32*
  %v3_f15b = load i32, i32* %v2_f15b, align 4
  %v2_f15e = add i32 %v0_f15b, -40
  %v3_f15e = inttoptr i32 %v2_f15e to i32*
  store i32 %v3_f15b, i32* %v3_f15e, align 4
  %v0_f161 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_f167 = load i32, i32* @ebp, align 4
  %v2_f167 = add i32 %v1_f167, -12
  %v3_f167 = inttoptr i32 %v2_f167 to i32*
  store i32 %v0_f161, i32* %v3_f167, align 4
  %v0_f16c = load i32, i32* @ebp, align 4
  %v1_f16c = add i32 %v0_f16c, -32
  %v2_f16c = inttoptr i32 %v1_f16c to i32*
  %v3_f16c = load i32, i32* %v2_f16c, align 4
  %v1_f16f = add i32 %v0_f16c, -40
  %v2_f16f = inttoptr i32 %v1_f16f to i32*
  %v3_f16f = load i32, i32* %v2_f16f, align 4
  %v1_f176 = add i32 %v0_f16c, -36
  %v2_f176 = inttoptr i32 %v1_f176 to i32*
  %v3_f176 = load i32, i32* %v2_f176, align 4
  %v1_f17d = add i32 %v0_f16c, -28
  %v2_f17d = inttoptr i32 %v1_f17d to i32*
  %v3_f17d = load i32, i32* %v2_f17d, align 4
  store i32 %v3_f17d, i32* @edx, align 4
  %v4_f187 = call i32 @unknown_21999(i32 %v3_f16c, i32 %v3_f17d, i32 %v3_f176, i32 %v3_f16f)
  %v0_f18c = load i32, i32* @ebp, align 4
  %v1_f18c = add i32 %v0_f18c, -12
  %v2_f18c = inttoptr i32 %v1_f18c to i32*
  %v3_f18c = load i32, i32* %v2_f18c, align 4
  %v1_f18f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f18f = xor i32 %v1_f18f, %v3_f18c
  %v3_f18f = icmp eq i32 %v2_f18f, 0
  store i32 %v2_f18f, i32* @eax, align 4
  br i1 %v3_f18f, label %bb, label %dec_label_pc_f198

bb:                                               ; preds = %dec_label_pc_f14c
  %v1_f196 = call i32 @function_f19d()
  br label %dec_label_pc_f198

dec_label_pc_f198:                                ; preds = %bb, %dec_label_pc_f14c
  %v2_f196 = phi i32 [ %v1_f196, %bb ], [ %v2_f18f, %dec_label_pc_f14c ]
  ret i32 %v2_f196

; uselistorder directives
  uselistorder i32 %v0_f16c, { 1, 0, 2, 3 }
}

define i32 @function_f19d() local_unnamed_addr {
dec_label_pc_f19d:
  %v0_f19e = load i32, i32* @eax, align 4
  ret i32 %v0_f19e
}

define i32 @_ZNSt6vectorIbSaIbEE5beginEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f1a0:
  %ecx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* %ecx.global-to-local, align 4
  %v1_f1c3 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_f1c3 = inttoptr i32 %v1_f1c3 to i32*
  %v3_f1c3 = load i32, i32* %v2_f1c3, align 4
  %v1_f1c6 = inttoptr i32 %arg2 to i32*
  %v2_f1c6 = load i32, i32* %v1_f1c6, align 4
  store i32 %v2_f1c6, i32* %arg1, align 4
  %v1_f1ca = load i32, i32* %ecx.global-to-local, align 4
  %v2_f1ca = add i32 %v1_f1ca, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_f1ca = inttoptr i32 %v2_f1ca to i32*
  store i32 %v3_f1c3, i32* %v3_f1ca, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f1dc

bb:                                               ; preds = %dec_label_pc_f1a0
  %v3_f1da = call i32 @function_f1e1(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_f1dc

dec_label_pc_f1dc:                                ; preds = %bb, %dec_label_pc_f1a0
  %v4_f1da = phi i32 [ %v3_f1da, %bb ], [ %tmp102, %dec_label_pc_f1a0 ]
  ret i32 %v4_f1da

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_f1e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f1e1:
  %v0_f1e2 = load i32, i32* @eax, align 4
  ret i32 %v0_f1e2
}

define i32 @_ZNSt6vectorIbSaIbEE3endEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f1e6:
  %ecx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* %ecx.global-to-local, align 4
  %v1_f209 = add i32 %arg2, 12
  %v2_f209 = inttoptr i32 %v1_f209 to i32*
  %v3_f209 = load i32, i32* %v2_f209, align 4
  %v1_f20c = add i32 %arg2, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_f20c = inttoptr i32 %v1_f20c to i32*
  %v3_f20c = load i32, i32* %v2_f20c, align 4
  store i32 %v3_f20c, i32* %arg1, align 4
  %v1_f211 = load i32, i32* %ecx.global-to-local, align 4
  %v2_f211 = add i32 %v1_f211, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_f211 = inttoptr i32 %v2_f211 to i32*
  store i32 %v3_f209, i32* %v3_f211, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f223

bb:                                               ; preds = %dec_label_pc_f1e6
  %v3_f221 = call i32 @function_f228(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_f223

dec_label_pc_f223:                                ; preds = %bb, %dec_label_pc_f1e6
  %v4_f221 = phi i32 [ %v3_f221, %bb ], [ %tmp102, %dec_label_pc_f1e6 ]
  ret i32 %v4_f221

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_f228(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f228:
  %v0_f229 = load i32, i32* @eax, align 4
  ret i32 %v0_f229
}

define i32 @_ZNKSt6vectorIbSaIbEE5beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f22c:
  ret i32 %arg1
}

define i32 @function_f238(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f238:
  %v0_f238 = load i32, i32* @ebp, align 4
  %v1_f238 = add i32 %v0_f238, 12
  %v2_f238 = inttoptr i32 %v1_f238 to i32*
  %v3_f238 = load i32, i32* %v2_f238, align 4
  %v2_f23b = add i32 %v0_f238, -32
  %v3_f23b = inttoptr i32 %v2_f23b to i32*
  store i32 %v3_f238, i32* %v3_f23b, align 4
  %v0_f23e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_f244 = load i32, i32* @ebp, align 4
  %v2_f244 = add i32 %v1_f244, -12
  %v3_f244 = inttoptr i32 %v2_f244 to i32*
  store i32 %v0_f23e, i32* %v3_f244, align 4
  %v0_f249 = load i32, i32* @ebp, align 4
  %v1_f249 = add i32 %v0_f249, -32
  %v2_f249 = inttoptr i32 %v1_f249 to i32*
  %v3_f249 = load i32, i32* %v2_f249, align 4
  %v1_f250 = add i32 %v0_f249, -28
  %v2_f250 = inttoptr i32 %v1_f250 to i32*
  %v3_f250 = load i32, i32* %v2_f250, align 4
  %v2_f256 = call i32 @function_11800(i32 %v3_f250, i32 %v3_f249)
  %v0_f25b = load i32, i32* @ebp, align 4
  %v1_f25b = add i32 %v0_f25b, -28
  %v2_f25b = inttoptr i32 %v1_f25b to i32*
  %v3_f25b = load i32, i32* %v2_f25b, align 4
  store i32 %v3_f25b, i32* @eax, align 4
  %v1_f25e = add i32 %v0_f25b, -12
  %v2_f25e = inttoptr i32 %v1_f25e to i32*
  %v3_f25e = load i32, i32* %v2_f25e, align 4
  %v1_f261 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f261 = icmp eq i32 %v1_f261, %v3_f25e
  br i1 %v3_f261, label %bb, label %dec_label_pc_f26a

bb:                                               ; preds = %dec_label_pc_f238
  %v1_f268 = call i32 @function_f26f()
  br label %dec_label_pc_f26a

dec_label_pc_f26a:                                ; preds = %bb, %dec_label_pc_f238
  %v3_f268 = phi i32 [ %v1_f268, %bb ], [ %v3_f25b, %dec_label_pc_f238 ]
  ret i32 %v3_f268
}

define i32 @function_f26f() local_unnamed_addr {
dec_label_pc_f26f:
  %v0_f270 = load i32, i32* @eax, align 4
  ret i32 %v0_f270
}

define i32 @_ZNKSt6vectorIbSaIbEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f274:
  %v1_f294 = add i32 %arg2, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %arg1, i32* @eax, align 4
  %v2_f2a1 = call i32 @function_11848(i32 %arg1, i32 %v1_f294)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f2b5

bb:                                               ; preds = %dec_label_pc_f274
  %v1_f2b3 = call i32 @function_f2ba()
  br label %dec_label_pc_f2b5

dec_label_pc_f2b5:                                ; preds = %bb, %dec_label_pc_f274
  %v2_f2b3 = phi i32 [ %v1_f2b3, %bb ], [ %arg1, %dec_label_pc_f274 ]
  ret i32 %v2_f2b3

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_f2ba() local_unnamed_addr {
dec_label_pc_f2ba:
  %v0_f2bb = load i32, i32* @eax, align 4
  ret i32 %v0_f2bb
}

define i32 @_ZNK9base_uintILj256EE6GetHexEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f2be:
  %v3_f2e3 = call i32 @function_f31b(i32 %arg2, i32 %arg1, i32 0)
  ret i32 %v3_f2e3
}

define i32 @function_f2ff(i16 %arg1) local_unnamed_addr {
dec_label_pc_f2ff:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_f300 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f300 = and i32 %v0_f300, -256
  %v2_f300 = or i32 %v1_f300, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v2_f300, i32* %ebx.global-to-local, align 4
  %v6_f302 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_f302
}

define i32 @function_f31b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f31b:
  %v0_f31b = load i32, i32* @ebp, align 4
  %v1_f326 = add i32 %v0_f31b, -78
  ret i32 %v1_f326
}

define i32 @function_f36a(i32 %arg1) local_unnamed_addr {
dec_label_pc_f36a:
  %zf.global-to-local = alloca i1, align 1
  %v2_f36a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_f36a = load i32, i32* @eax, align 4
  %v4_f36a = trunc i32 %v3_f36a to i8
  %v5_f36a = add i8 %v4_f36a, %v2_f36a
  %v10_f36a = icmp ult i8 %v5_f36a, %v2_f36a
  store i1 %v10_f36a, i1* @cf, align 1
  %v15_f36a = icmp eq i8 %v5_f36a, 0
  store i1 %v15_f36a, i1* %zf.global-to-local, align 1
  %v21_f36a = inttoptr i32 %v3_f36a to i8*
  store i8 %v5_f36a, i8* %v21_f36a, align 1
  %v0_f36c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_f36c, label %bb, label %dec_label_pc_f36e

bb:                                               ; preds = %dec_label_pc_f36a
  %v1_f36c = call i32 @function_f38c()
  store i32 %v1_f36c, i32* @eax, align 4
  br label %dec_label_pc_f36e

dec_label_pc_f36e:                                ; preds = %bb, %dec_label_pc_f36a
  %v0_f36e = call i32 @function_f387()
  ret i32 %v0_f36e

; uselistorder directives
  uselistorder i8 %v2_f36a, { 1, 0 }
}

define i32 @function_f371() local_unnamed_addr {
dec_label_pc_f371:
  %eax.global-to-local = alloca i32, align 4
  %v0_f371 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f371
}

define i32 @function_f387() local_unnamed_addr {
dec_label_pc_f387:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f38c() local_unnamed_addr {
dec_label_pc_f38c:
  %v0_f38c = load i32, i32* @esp, align 4
  %v5_f38c = icmp ugt i32 %v0_f38c, -117
  store i1 %v5_f38c, i1* @cf, align 1
  %v0_f391 = load i32, i32* @eax, align 4
  ret i32 %v0_f391
}

define i32 @_ZNKSt4lessI7uint256EclERKS0_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f394:
  ret i32 %arg2
}

define i32 @function_f3a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f3a8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_f3a8 = load i32, i32* @ecx, align 4
  %v1_f3a8 = add i32 %v0_f3a8, -1587159995
  %v2_f3a8 = inttoptr i32 %v1_f3a8 to i8*
  %v3_f3a8 = load i8, i8* %v2_f3a8, align 1
  %v5_f3a8 = trunc i32 %v0_f3a8 to i8
  %v6_f3a8 = load i1, i1* @cf, align 1
  %v7_f3a8 = zext i1 %v6_f3a8 to i8
  %v8_f3a8 = add i8 %v3_f3a8, %v5_f3a8
  %v9_f3a8 = add i8 %v7_f3a8, %v8_f3a8
  %v27_f3a8 = icmp ule i8 %v9_f3a8, %v3_f3a8
  %v28_f3a8 = icmp ult i8 %v8_f3a8, %v3_f3a8
  %v29_f3a8 = select i1 %v6_f3a8, i1 %v27_f3a8, i1 %v28_f3a8
  store i1 %v29_f3a8, i1* %cf.global-to-local, align 1
  store i8 %v9_f3a8, i8* %v2_f3a8, align 1
  %v0_f3ae = load i32, i32* @eax, align 4
  %v1_f3ae = trunc i32 %v0_f3ae to i8
  %v2_f3ae = load i1, i1* %cf.global-to-local, align 1
  %v3_f3ae = zext i1 %v2_f3ae to i8
  %v4_f3ae = add i8 %v3_f3ae, %v1_f3ae
  %v19_f3ae = icmp ule i8 %v4_f3ae, %v1_f3ae
  %v21_f3ae = icmp eq i1 %v2_f3ae, %v19_f3ae
  store i1 %v21_f3ae, i1* %cf.global-to-local, align 1
  %v22_f3ae = zext i8 %v4_f3ae to i32
  %v24_f3ae = and i32 %v0_f3ae, -256
  %v25_f3ae = or i32 %v22_f3ae, %v24_f3ae
  store i32 %v25_f3ae, i32* %eax.global-to-local, align 4
  %v1_f3b0 = inttoptr i32 %v25_f3ae to i8*
  %v2_f3b0 = load i8, i8* %v1_f3b0, align 1
  %v5_f3b0 = add i8 %v2_f3b0, %v4_f3ae
  store i8 %v5_f3b0, i8* %v1_f3b0, align 1
  %v0_f3b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_f3b2 = load i32, i32* @ebp, align 4
  %v2_f3b2 = add i32 %v1_f3b2, -12
  %v3_f3b2 = inttoptr i32 %v2_f3b2 to i32*
  store i32 %v0_f3b2, i32* %v3_f3b2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_f3b7 = load i32, i32* @ebp, align 4
  %v1_f3b7 = add i32 %v0_f3b7, -36
  %v2_f3b7 = inttoptr i32 %v1_f3b7 to i32*
  %v3_f3b7 = load i32, i32* %v2_f3b7, align 4
  store i32 %v3_f3b7, i32* %eax.global-to-local, align 4
  %v1_f3be = add i32 %v0_f3b7, -32
  %v2_f3be = inttoptr i32 %v1_f3be to i32*
  %v3_f3be = load i32, i32* %v2_f3be, align 4
  store i32 %v3_f3be, i32* %eax.global-to-local, align 4
  %v2_f3c4 = call i32 @function_11bc6(i32 %v3_f3be, i32 %v3_f3b7)
  store i32 %v2_f3c4, i32* @eax, align 4
  %v0_f3c9 = load i32, i32* @ebp, align 4
  %v1_f3c9 = add i32 %v0_f3c9, -12
  %v2_f3c9 = inttoptr i32 %v1_f3c9 to i32*
  %v3_f3c9 = load i32, i32* %v2_f3c9, align 4
  %v1_f3cc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_f3cc = icmp eq i32 %v1_f3cc, %v3_f3c9
  br i1 %v3_f3cc, label %bb, label %dec_label_pc_f3d5

bb:                                               ; preds = %dec_label_pc_f3a8
  %v1_f3d3 = call i32 @function_f3da()
  store i32 %v1_f3d3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f3d5

dec_label_pc_f3d5:                                ; preds = %bb, %dec_label_pc_f3a8
  %v2_f3d3 = phi i32 [ %v1_f3d3, %bb ], [ %v2_f3c4, %dec_label_pc_f3a8 ]
  ret i32 %v2_f3d3

; uselistorder directives
  uselistorder i8 %v4_f3ae, { 0, 2, 1 }
  uselistorder i8 %v1_f3ae, { 1, 0 }
  uselistorder i8 %v9_f3a8, { 1, 0 }
  uselistorder i8 %v8_f3a8, { 1, 0 }
}

define i32 @function_f3da() local_unnamed_addr {
dec_label_pc_f3da:
  %v0_f3db = load i32, i32* @eax, align 4
  ret i32 %v0_f3db
}

define i32 @_ZNSt4pairIc7uint256EC1ERKcRKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f3dc:
  ret i32 %arg3
}

define i32 @function_f3f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f3f2:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_f3f2 = load i32, i32* @ebp, align 4
  %v1_f3f2 = add i32 %v0_f3f2, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_f3f2, i32* @ebp, align 4
  %v0_f3f6 = load i32, i32* @eax, align 4
  %v1_f3f6 = trunc i32 %v0_f3f6 to i8
  %v2_f3f6 = load i1, i1* @cf, align 1
  %v3_f3f6 = zext i1 %v2_f3f6 to i8
  %v4_f3f6 = add i8 %v3_f3f6, %v1_f3f6
  %v22_f3f6 = zext i8 %v4_f3f6 to i32
  %v24_f3f6 = and i32 %v0_f3f6, -256
  %v25_f3f6 = or i32 %v22_f3f6, %v24_f3f6
  store i32 %v25_f3f6, i32* %eax.global-to-local, align 4
  %v1_f3f8 = inttoptr i32 %v25_f3f6 to i8*
  %v2_f3f8 = load i8, i8* %v1_f3f8, align 1
  %v5_f3f8 = add i8 %v2_f3f8, %v4_f3f6
  store i8 %v5_f3f8, i8* %v1_f3f8, align 1
  %v0_f3fa = load i32, i32* %eax.global-to-local, align 4
  %v1_f3fa = load i32, i32* @ebp, align 4
  %v2_f3fa = add i32 %v1_f3fa, -12
  %v3_f3fa = inttoptr i32 %v2_f3fa to i32*
  store i32 %v0_f3fa, i32* %v3_f3fa, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_f3ff = load i32, i32* @ebp, align 4
  %v1_f3ff = add i32 %v0_f3ff, -32
  %v2_f3ff = inttoptr i32 %v1_f3ff to i32*
  %v3_f3ff = load i32, i32* %v2_f3ff, align 4
  store i32 %v3_f3ff, i32* %eax.global-to-local, align 4
  %v1_f402 = inttoptr i32 %v3_f3ff to i8*
  %v2_f402 = load i8, i8* %v1_f402, align 1
  %v3_f402 = zext i8 %v2_f402 to i32
  store i32 %v3_f402, i32* %edx.global-to-local, align 4
  %v1_f405 = add i32 %v0_f3ff, -28
  %v2_f405 = inttoptr i32 %v1_f405 to i32*
  %v3_f405 = load i32, i32* %v2_f405, align 4
  store i32 %v3_f405, i32* %eax.global-to-local, align 4
  %v3_f408 = inttoptr i32 %v3_f405 to i8*
  store i8 %v2_f402, i8* %v3_f408, align 1
  %v0_f40a = load i32, i32* @ebp, align 4
  %v1_f40a = add i32 %v0_f40a, -28
  %v2_f40a = inttoptr i32 %v1_f40a to i32*
  %v3_f40a = load i32, i32* %v2_f40a, align 4
  store i32 %v3_f40a, i32* %eax.global-to-local, align 4
  %v1_f40d = add i32 %v0_f40a, -36
  %v2_f40d = inttoptr i32 %v1_f40d to i32*
  %v3_f40d = load i32, i32* %v2_f40d, align 4
  store i32 %v3_f40d, i32* %edx.global-to-local, align 4
  %v1_f410 = inttoptr i32 %v3_f40d to i32*
  %v2_f410 = load i32, i32* %v1_f410, align 4
  %v2_f412 = add i32 %v3_f40a, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_f412 = inttoptr i32 %v2_f412 to i32*
  store i32 %v2_f410, i32* %v3_f412, align 4
  %v0_f415 = load i32, i32* %edx.global-to-local, align 4
  %v1_f415 = add i32 %v0_f415, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_f415 = inttoptr i32 %v1_f415 to i32*
  %v3_f415 = load i32, i32* %v2_f415, align 4
  %v1_f418 = load i32, i32* %eax.global-to-local, align 4
  %v2_f418 = add i32 %v1_f418, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_f418 = inttoptr i32 %v2_f418 to i32*
  store i32 %v3_f415, i32* %v3_f418, align 4
  %v0_f41b = load i32, i32* %edx.global-to-local, align 4
  %v1_f41b = add i32 %v0_f41b, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_f41b = inttoptr i32 %v1_f41b to i32*
  %v3_f41b = load i32, i32* %v2_f41b, align 4
  %v1_f41e = load i32, i32* %eax.global-to-local, align 4
  %v2_f41e = add i32 %v1_f41e, 12
  %v3_f41e = inttoptr i32 %v2_f41e to i32*
  store i32 %v3_f41b, i32* %v3_f41e, align 4
  %v0_f421 = load i32, i32* %edx.global-to-local, align 4
  %v1_f421 = add i32 %v0_f421, 12
  %v2_f421 = inttoptr i32 %v1_f421 to i32*
  %v3_f421 = load i32, i32* %v2_f421, align 4
  %v1_f424 = load i32, i32* %eax.global-to-local, align 4
  %v2_f424 = add i32 %v1_f424, 16
  %v3_f424 = inttoptr i32 %v2_f424 to i32*
  store i32 %v3_f421, i32* %v3_f424, align 4
  %v0_f427 = load i32, i32* %edx.global-to-local, align 4
  %v1_f427 = add i32 %v0_f427, 16
  %v2_f427 = inttoptr i32 %v1_f427 to i32*
  %v3_f427 = load i32, i32* %v2_f427, align 4
  %v1_f42a = load i32, i32* %eax.global-to-local, align 4
  %v2_f42a = add i32 %v1_f42a, 20
  %v3_f42a = inttoptr i32 %v2_f42a to i32*
  store i32 %v3_f427, i32* %v3_f42a, align 4
  %v0_f42d = load i32, i32* %edx.global-to-local, align 4
  %v1_f42d = add i32 %v0_f42d, 20
  %v2_f42d = inttoptr i32 %v1_f42d to i32*
  %v3_f42d = load i32, i32* %v2_f42d, align 4
  %v1_f430 = load i32, i32* %eax.global-to-local, align 4
  %v2_f430 = add i32 %v1_f430, ptrtoint (i8** @global_var_18.1179 to i32)
  %v3_f430 = inttoptr i32 %v2_f430 to i32*
  store i32 %v3_f42d, i32* %v3_f430, align 4
  %v0_f433 = load i32, i32* %edx.global-to-local, align 4
  %v1_f433 = add i32 %v0_f433, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_f433 = inttoptr i32 %v1_f433 to i32*
  %v3_f433 = load i32, i32* %v2_f433, align 4
  %v1_f436 = load i32, i32* %eax.global-to-local, align 4
  %v2_f436 = add i32 %v1_f436, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v3_f436 = inttoptr i32 %v2_f436 to i32*
  store i32 %v3_f433, i32* %v3_f436, align 4
  %v0_f439 = load i32, i32* %edx.global-to-local, align 4
  %v1_f439 = add i32 %v0_f439, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_f439 = inttoptr i32 %v1_f439 to i32*
  %v3_f439 = load i32, i32* %v2_f439, align 4
  store i32 %v3_f439, i32* %edx.global-to-local, align 4
  %v1_f43c = load i32, i32* %eax.global-to-local, align 4
  %v2_f43c = add i32 %v1_f43c, ptrtoint (i32* @global_var_20.1184 to i32)
  %v3_f43c = inttoptr i32 %v2_f43c to i32*
  store i32 %v3_f439, i32* %v3_f43c, align 4
  %v0_f43f = load i32, i32* @ebp, align 4
  %v1_f43f = add i32 %v0_f43f, -12
  %v2_f43f = inttoptr i32 %v1_f43f to i32*
  %v3_f43f = load i32, i32* %v2_f43f, align 4
  store i32 %v3_f43f, i32* %eax.global-to-local, align 4
  %v1_f442 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f442 = xor i32 %v1_f442, %v3_f43f
  %v3_f442 = icmp eq i32 %v2_f442, 0
  store i32 %v2_f442, i32* @eax, align 4
  br i1 %v3_f442, label %bb, label %dec_label_pc_f44b

bb:                                               ; preds = %dec_label_pc_f3f2
  %v1_f449 = call i32 @function_f450()
  store i32 %v1_f449, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f44b

dec_label_pc_f44b:                                ; preds = %bb, %dec_label_pc_f3f2
  %v2_f449 = phi i32 [ %v1_f449, %bb ], [ %v2_f442, %dec_label_pc_f3f2 ]
  ret i32 %v2_f449
}

define i32 @function_f450() local_unnamed_addr {
dec_label_pc_f450:
  %v0_f451 = load i32, i32* @eax, align 4
  ret i32 %v0_f451
}

define i32 @_ZN11CDataStream16GetSerializeSizeISt4pairIc7uint256EEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f452:
  %v1_f472 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_f472 = inttoptr i32 %v1_f472 to i32*
  %v3_f472 = load i32, i32* %v2_f472, align 4
  %v1_f478 = add i32 %arg1, 20
  %v2_f478 = inttoptr i32 %v1_f478 to i32*
  %v3_f478 = load i32, i32* %v2_f478, align 4
  %v3_f489 = call i32 @unknown_21cfe(i32 %arg2, i32 %v3_f478, i32 %v3_f472)
  store i32 %v3_f489, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f49a

bb:                                               ; preds = %dec_label_pc_f452
  %v1_f498 = call i32 @function_f49f()
  br label %dec_label_pc_f49a

dec_label_pc_f49a:                                ; preds = %bb, %dec_label_pc_f452
  %v2_f498 = phi i32 [ %v1_f498, %bb ], [ %v3_f489, %dec_label_pc_f452 ]
  ret i32 %v2_f498

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f49f() local_unnamed_addr {
dec_label_pc_f49f:
  %v0_f4a0 = load i32, i32* @eax, align 4
  ret i32 %v0_f4a0
}

define i32 @_ZN11CDataStream16GetSerializeSizeI6CCoinsEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f4a2:
  ret i32 0
}

define i32 @function_f4c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f4c0:
  %cf.global-to-local = alloca i1, align 1
  %v0_f4c0 = load i32, i32* @ebp, align 4
  %v1_f4c0 = add i32 %v0_f4c0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_f4c0, i32* @ebp, align 4
  %v0_f4c4 = load i32, i32* @ebx, align 4
  %v1_f4c4 = add i32 %v0_f4c4, 1082909765
  %v2_f4c4 = inttoptr i32 %v1_f4c4 to i8*
  %v3_f4c4 = load i8, i8* %v2_f4c4, align 1
  %v4_f4c4 = load i32, i32* @ecx, align 4
  %v5_f4c4 = trunc i32 %v4_f4c4 to i8
  %v6_f4c4 = load i1, i1* @cf, align 1
  %v7_f4c4 = zext i1 %v6_f4c4 to i8
  %v8_f4c4 = sub i8 %v3_f4c4, %v5_f4c4
  %v9_f4c4 = add i8 %v8_f4c4, %v7_f4c4
  %v19_f4c4 = sub i8 %v8_f4c4, %v7_f4c4
  %v20_f4c4 = icmp ult i8 %v3_f4c4, %v19_f4c4
  %v21_f4c4 = icmp ne i8 %v5_f4c4, -1
  %v22_f4c4 = or i1 %v21_f4c4, %v20_f4c4
  %v23_f4c4 = icmp ult i8 %v3_f4c4, %v5_f4c4
  %v24_f4c4 = select i1 %v6_f4c4, i1 %v22_f4c4, i1 %v23_f4c4
  store i1 %v24_f4c4, i1* %cf.global-to-local, align 1
  store i8 %v9_f4c4, i8* %v2_f4c4, align 1
  %v0_f4ca = load i32, i32* @eax, align 4
  %v2_f4ca = load i1, i1* %cf.global-to-local, align 1
  %v3_f4ca = zext i1 %v2_f4ca to i32
  %v4_f4ca = add i32 %v0_f4ca, 137
  %v5_f4ca = add i32 %v4_f4ca, %v3_f4ca
  %v2_f4cd = and i32 %v5_f4ca, zext (i8 ptrtoint (i32* @global_var_8.1178 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_f4cd = and i32 %v0_f4ca, -256
  %v11_f4cd = or i32 %v2_f4cd, %v10_f4cd
  %v0_f4d3 = load i32, i32* @ebp, align 4
  %v1_f4d3 = add i32 %v0_f4d3, -32
  %v2_f4d3 = inttoptr i32 %v1_f4d3 to i32*
  %v3_f4d3 = load i32, i32* %v2_f4d3, align 4
  %v2_f4d9 = call i32 @unknown_21dc8(i32 %v3_f4d3, i32 %v11_f4cd)
  store i32 %v2_f4d9, i32* @eax, align 4
  %v0_f4de = load i32, i32* @ebp, align 4
  %v1_f4de = add i32 %v0_f4de, -12
  %v2_f4de = inttoptr i32 %v1_f4de to i32*
  %v3_f4de = load i32, i32* %v2_f4de, align 4
  %v1_f4e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_f4e1 = icmp eq i32 %v1_f4e1, %v3_f4de
  br i1 %v3_f4e1, label %bb, label %dec_label_pc_f4ea

bb:                                               ; preds = %dec_label_pc_f4c0
  %v1_f4e8 = call i32 @function_f4ef()
  br label %dec_label_pc_f4ea

dec_label_pc_f4ea:                                ; preds = %bb, %dec_label_pc_f4c0
  %v2_f4e8 = phi i32 [ %v1_f4e8, %bb ], [ %v2_f4d9, %dec_label_pc_f4c0 ]
  ret i32 %v2_f4e8

; uselistorder directives
  uselistorder i32 %v0_f4ca, { 1, 0 }
  uselistorder i8 %v5_f4c4, { 1, 0, 2 }
}

define i32 @function_f4ed(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f4ed:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f4ef() local_unnamed_addr {
dec_label_pc_f4ef:
  %v0_f4f0 = load i32, i32* @eax, align 4
  ret i32 %v0_f4f0
}

define i32 @_ZN11CDataStreamlsI6CCoinsEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f4f2:
  ret i32 %arg1
}

define i32 @function_f534(i32 %arg1) local_unnamed_addr {
dec_label_pc_f534:
  %v0_f534 = load i32, i32* @ebx, align 4
  %v1_f534 = add i32 %v0_f534, 1435231301
  %v2_f534 = inttoptr i32 %v1_f534 to i8*
  %v3_f534 = load i8, i8* %v2_f534, align 1
  %v4_f534 = load i32, i32* @ecx, align 4
  %v5_f534 = trunc i32 %v4_f534 to i8
  %v6_f534 = add i8 %v5_f534, %v3_f534
  store i8 %v6_f534, i8* %v2_f534, align 1
  %v0_f53b = load i32, i32* @edx, align 4
  %v1_f53b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f53b = icmp eq i32 %v1_f53b, %v0_f53b
  br i1 %v3_f53b, label %bb, label %dec_label_pc_f534.dec_label_pc_f544_crit_edge

dec_label_pc_f534.dec_label_pc_f544_crit_edge:    ; preds = %dec_label_pc_f534
  %v2_f542.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_f544

bb:                                               ; preds = %dec_label_pc_f534
  %v1_f542 = call i32 @function_f549()
  br label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f534.dec_label_pc_f544_crit_edge, %bb
  %v2_f542 = phi i32 [ %v2_f542.pre, %dec_label_pc_f534.dec_label_pc_f544_crit_edge ], [ %v1_f542, %bb ]
  ret i32 %v2_f542

; uselistorder directives
  uselistorder label %dec_label_pc_f544, { 1, 0 }
}

define i32 @function_f549() local_unnamed_addr {
dec_label_pc_f549:
  %v0_f54a = load i32, i32* @eax, align 4
  ret i32 %v0_f54a
}

define i32 @_ZN11CDataStream16GetSerializeSizeIcEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f54c:
  ret i32 %arg2
}

define i32 @function_f55c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f55c:
  %v0_f55c = load i32, i32* @ebp, align 4
  %v1_f55c = add i32 %v0_f55c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_f55c, i32* @ebp, align 4
  %v0_f55f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f564 = add i32 %v0_f55c, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12)
  %v3_f564 = inttoptr i32 %v2_f564 to i32*
  store i32 %v0_f55f, i32* %v3_f564, align 4
  %v0_f569 = load i32, i32* @ebp, align 4
  %v1_f569 = add i32 %v0_f569, -28
  %v2_f569 = inttoptr i32 %v1_f569 to i32*
  %v3_f569 = load i32, i32* %v2_f569, align 4
  %v1_f56c = add i32 %v3_f569, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_f56c = inttoptr i32 %v1_f56c to i32*
  %v3_f56c = load i32, i32* %v2_f56c, align 4
  %v1_f572 = add i32 %v3_f569, 20
  %v2_f572 = inttoptr i32 %v1_f572 to i32*
  %v3_f572 = load i32, i32* %v2_f572, align 4
  %v1_f575 = add i32 %v0_f569, -32
  %v2_f575 = inttoptr i32 %v1_f575 to i32*
  %v3_f575 = load i32, i32* %v2_f575, align 4
  %v1_f578 = inttoptr i32 %v3_f575 to i8*
  %v2_f578 = load i8, i8* %v1_f578, align 1
  %v3_f578 = zext i8 %v2_f578 to i32
  store i32 %v3_f578, i32* @eax, align 4
  %v3_f589 = call i32 @function_1387c(i32 %v3_f578, i32 %v3_f572, i32 %v3_f56c)
  ret i32 %v3_f589
}

define i32 @function_f561(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f561:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f599(i32 %arg1) local_unnamed_addr {
dec_label_pc_f599:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f59a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f59a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f59f() local_unnamed_addr {
dec_label_pc_f59f:
  %eax.global-to-local = alloca i32, align 4
  %v0_f5a0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f5a0
}

define i32 @_ZN11CDataStreamlsIcEERS_RKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5a2:
  ret i32 %arg1
}

define i32 @function_f5ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_f5ae = load i32, i32* @ebp, align 4
  %v1_f5ae = add i32 %v0_f5ae, 12
  %v2_f5ae = inttoptr i32 %v1_f5ae to i32*
  %v3_f5ae = load i32, i32* %v2_f5ae, align 4
  store i32 %v3_f5ae, i32* %eax.global-to-local, align 4
  %v2_f5b1 = add i32 %v0_f5ae, -32
  %v3_f5b1 = inttoptr i32 %v2_f5b1 to i32*
  store i32 %v3_f5ae, i32* %v3_f5b1, align 4
  %v0_f5b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_f5b4, i32* %eax.global-to-local, align 4
  %v1_f5ba = load i32, i32* @ebp, align 4
  %v2_f5ba = add i32 %v1_f5ba, -12
  %v3_f5ba = inttoptr i32 %v2_f5ba to i32*
  store i32 %v0_f5b4, i32* %v3_f5ba, align 4
  %v4_f5ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_f5ba
}

define i32 @function_f5bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5bd:
  %v0_f5bf = load i32, i32* @ebp, align 4
  %v1_f5bf = add i32 %v0_f5bf, -28
  %v2_f5bf = inttoptr i32 %v1_f5bf to i32*
  %v3_f5bf = load i32, i32* %v2_f5bf, align 4
  ret i32 %v3_f5bf
}

define i32 @function_f5c3() local_unnamed_addr {
dec_label_pc_f5c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_f5c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_f5c3 = sub i32 %v0_f5c3, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_f5c3, i32* %eax.global-to-local, align 4
  ret i32 %v1_f5c3
}

define i32 @function_f5c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f5c6:
  %v0_f5c6 = load i32, i32* @ebp, align 4
  %v0_f5c9 = load i32, i32* @eax, align 4
  %v2_f5ca = load i1, i1* @cf, align 1
  %v3_f5ca = zext i1 %v2_f5ca to i32
  %v4_f5ca = add i32 %v0_f5c9, 139
  %v5_f5ca = add i32 %v4_f5ca, %v3_f5ca
  %v25_f5ca = and i32 %v5_f5ca, 255
  %v27_f5ca = and i32 %v0_f5c9, -256
  %v28_f5ca = or i32 %v25_f5ca, %v27_f5ca
  %v1_f5cc = add i32 %v0_f5c6, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_f5cc, i32* @ebp, align 4
  ret i32 %v28_f5ca

; uselistorder directives
  uselistorder i32 %v0_f5c9, { 1, 0 }
}

define i32 @function_f5ce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f5ce:
  %v0_f5e0 = load i32, i32* @ebp, align 4
  %v1_f5e0 = add i32 %v0_f5e0, -28
  %v2_f5e0 = inttoptr i32 %v1_f5e0 to i32*
  %v3_f5e0 = load i32, i32* %v2_f5e0, align 4
  ret i32 %v3_f5e0
}

define i32 @function_f5e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f5e4:
  %v0_f5e6 = call i32 @unknown_21f73()
  %v0_f5eb = load i32, i32* @ebp, align 4
  %v1_f5eb = add i32 %v0_f5eb, -28
  %v2_f5eb = inttoptr i32 %v1_f5eb to i32*
  %v3_f5eb = load i32, i32* %v2_f5eb, align 4
  store i32 %v3_f5eb, i32* @eax, align 4
  %v1_f5ee = add i32 %v0_f5eb, -12
  %v2_f5ee = inttoptr i32 %v1_f5ee to i32*
  %v3_f5ee = load i32, i32* %v2_f5ee, align 4
  %v1_f5f1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f5f1 = icmp eq i32 %v1_f5f1, %v3_f5ee
  br i1 %v3_f5f1, label %bb, label %dec_label_pc_f5fa

bb:                                               ; preds = %dec_label_pc_f5e4
  %v1_f5f8 = call i32 @function_f5ff()
  br label %dec_label_pc_f5fa

dec_label_pc_f5fa:                                ; preds = %bb, %dec_label_pc_f5e4
  %v3_f5f8 = phi i32 [ %v1_f5f8, %bb ], [ %v3_f5eb, %dec_label_pc_f5e4 ]
  ret i32 %v3_f5f8
}

define i32 @function_f5ff() local_unnamed_addr {
dec_label_pc_f5ff:
  %v0_f600 = load i32, i32* @eax, align 4
  ret i32 %v0_f600
}

define i32 @_ZN11CDataStream16GetSerializeSizeI7uint256EEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f602:
  %v1_f622 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_f622 = inttoptr i32 %v1_f622 to i32*
  %v3_f622 = load i32, i32* %v2_f622, align 4
  %v1_f628 = add i32 %arg1, 20
  %v2_f628 = inttoptr i32 %v1_f628 to i32*
  %v3_f628 = load i32, i32* %v2_f628, align 4
  %v3_f639 = call i32 @unknown_1e64b(i32 %arg2, i32 %v3_f628, i32 %v3_f622)
  store i32 %v3_f639, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f64a

bb:                                               ; preds = %dec_label_pc_f602
  %v1_f648 = call i32 @function_f64f()
  br label %dec_label_pc_f64a

dec_label_pc_f64a:                                ; preds = %bb, %dec_label_pc_f602
  %v3_f648 = phi i32 [ %v1_f648, %bb ], [ %v3_f639, %dec_label_pc_f602 ]
  ret i32 %v3_f648

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f64f() local_unnamed_addr {
dec_label_pc_f64f:
  %v0_f650 = load i32, i32* @eax, align 4
  ret i32 %v0_f650
}

define i32 @_ZN11CDataStreamlsI7uint256EERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f652:
  %v1_f672 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_f672 = inttoptr i32 %v1_f672 to i32*
  %v3_f672 = load i32, i32* %v2_f672, align 4
  %v1_f678 = add i32 %arg1, 20
  %v2_f678 = inttoptr i32 %v1_f678 to i32*
  %v3_f678 = load i32, i32* %v2_f678, align 4
  %v4_f690 = call i32 @unknown_22079(i32 %arg1, i32 %arg2, i32 %v3_f678, i32 %v3_f672)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f6a4

bb:                                               ; preds = %dec_label_pc_f652
  %v1_f6a2 = call i32 @function_f6a9()
  br label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %bb, %dec_label_pc_f652
  %v2_f6a2 = phi i32 [ %v1_f6a2, %bb ], [ %arg1, %dec_label_pc_f652 ]
  ret i32 %v2_f6a2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_f6a9() local_unnamed_addr {
dec_label_pc_f6a9:
  %v0_f6aa = load i32, i32* @eax, align 4
  ret i32 %v0_f6aa
}

define i32 @_ZN5boost11filesystem311path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f6ab:
  ret i32 %arg2
}

define i32 @function_f6bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f6bc:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_f6bc = load i32, i32* @ebp, align 4
  %v0_f6bd = load i32, i32* @ecx, align 4
  %v1_f6bd = sub i32 %v0_f6bd, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_f6bf = add i32 %v0_f6bc, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_f6bf, i32* @ebp, align 4
  %v1_f6c0 = add i32 %v1_f6bd, -1587159995
  %v2_f6c0 = inttoptr i32 %v1_f6c0 to i8*
  %v3_f6c0 = load i8, i8* %v2_f6c0, align 1
  %v5_f6c0 = trunc i32 %v1_f6bd to i8
  %v6_f6c0 = load i1, i1* @cf, align 1
  %v7_f6c0 = zext i1 %v6_f6c0 to i8
  %v8_f6c0 = add i8 %v3_f6c0, %v5_f6c0
  %v9_f6c0 = add i8 %v7_f6c0, %v8_f6c0
  %v27_f6c0 = icmp ule i8 %v9_f6c0, %v3_f6c0
  %v28_f6c0 = icmp ult i8 %v8_f6c0, %v3_f6c0
  %v29_f6c0 = select i1 %v6_f6c0, i1 %v27_f6c0, i1 %v28_f6c0
  store i1 %v29_f6c0, i1* %cf.global-to-local, align 1
  store i8 %v9_f6c0, i8* %v2_f6c0, align 1
  %v0_f6c6 = load i32, i32* @eax, align 4
  %v1_f6c6 = trunc i32 %v0_f6c6 to i8
  %v2_f6c6 = load i1, i1* %cf.global-to-local, align 1
  %v3_f6c6 = zext i1 %v2_f6c6 to i8
  %v4_f6c6 = add i8 %v3_f6c6, %v1_f6c6
  %v19_f6c6 = icmp ule i8 %v4_f6c6, %v1_f6c6
  %v21_f6c6 = icmp eq i1 %v2_f6c6, %v19_f6c6
  store i1 %v21_f6c6, i1* %cf.global-to-local, align 1
  %v22_f6c6 = zext i8 %v4_f6c6 to i32
  %v24_f6c6 = and i32 %v0_f6c6, -256
  %v25_f6c6 = or i32 %v22_f6c6, %v24_f6c6
  store i32 %v25_f6c6, i32* %eax.global-to-local, align 4
  %v1_f6c8 = inttoptr i32 %v25_f6c6 to i8*
  %v2_f6c8 = load i8, i8* %v1_f6c8, align 1
  %v5_f6c8 = add i8 %v2_f6c8, %v4_f6c6
  store i8 %v5_f6c8, i8* %v1_f6c8, align 1
  %v0_f6ca = load i32, i32* %eax.global-to-local, align 4
  %v1_f6ca = load i32, i32* @ebp, align 4
  %v2_f6ca = add i32 %v1_f6ca, -12
  %v3_f6ca = inttoptr i32 %v2_f6ca to i32*
  store i32 %v0_f6ca, i32* %v3_f6ca, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_f6cf = load i32, i32* @ebp, align 4
  %v1_f6cf = add i32 %v0_f6cf, -28
  %v2_f6cf = inttoptr i32 %v1_f6cf to i32*
  %v3_f6cf = load i32, i32* %v2_f6cf, align 4
  store i32 %v3_f6cf, i32* %eax.global-to-local, align 4
  ret i32 %v3_f6cf

; uselistorder directives
  uselistorder i8 %v4_f6c6, { 0, 2, 1 }
  uselistorder i8 %v1_f6c6, { 1, 0 }
  uselistorder i8 %v9_f6c0, { 1, 0 }
  uselistorder i8 %v8_f6c0, { 1, 0 }
  uselistorder i8 %v3_f6c0, { 1, 2, 0 }
  uselistorder i32 %v1_f6bd, { 1, 0 }
}

define i32 @function_f704() local_unnamed_addr {
dec_label_pc_f704:
  %eax.global-to-local = alloca i32, align 4
  %v0_f704 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f704
}

define i32 @function_f70f() local_unnamed_addr {
dec_label_pc_f70f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_f70f = load i32, i32* %ecx.global-to-local, align 4
  %v3_f70f = add i32 %v2_f70f, ptrtoint (i8** @global_var_1.1176 to i32)
  %v18_f70f = inttoptr i32 %v2_f70f to i32*
  store i32 %v3_f70f, i32* %v18_f70f, align 4
  %v0_f711 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f711
}

define i32 @function_f73d() local_unnamed_addr {
dec_label_pc_f73d:
  %v0_f73e = load i32, i32* @eax, align 4
  store i1 false, i1* @cf, align 1
  %v11_f73e = and i32 %v0_f73e, or (i32 zext (i8 ptrtoint (i32* @global_var_8.1178 to i8) to i32), i32 -256)
  store i32 %v11_f73e, i32* @eax, align 4
  %v0_f740 = load i32, i32* @ebx, align 4
  %v2_f747 = call i32 @function_148df(i32 %v11_f73e, i32 %v0_f740)
  %v0_f74c = load i32, i32* @ebp, align 4
  %v1_f74c = add i32 %v0_f74c, -12
  %v2_f74c = inttoptr i32 %v1_f74c to i32*
  %v3_f74c = load i32, i32* %v2_f74c, align 4
  %v1_f74f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f74f = xor i32 %v1_f74f, %v3_f74c
  %v3_f74f = icmp eq i32 %v2_f74f, 0
  store i32 %v2_f74f, i32* @eax, align 4
  br i1 %v3_f74f, label %bb, label %dec_label_pc_f758

bb:                                               ; preds = %dec_label_pc_f73d
  %v1_f756 = call i32 @function_f75d()
  br label %dec_label_pc_f758

dec_label_pc_f758:                                ; preds = %bb, %dec_label_pc_f73d
  %v2_f756 = phi i32 [ %v1_f756, %bb ], [ %v2_f74f, %dec_label_pc_f73d ]
  ret i32 %v2_f756

; uselistorder directives
  uselistorder i32 %v11_f73e, { 1, 0 }
}

define i32 @function_f75d() local_unnamed_addr {
dec_label_pc_f75d:
  %v0_f761 = load i32, i32* @eax, align 4
  ret i32 %v0_f761
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE4findERS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f762:
  %v1_f78c = call i32 @unknown_22216(i32 %arg2)
  %v1_f799 = call i32 @unknown_221e6(i32 %arg2)
  ret i32 %v1_f799

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_f7b2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f7b2:
  %v0_f7b2 = load i32, i32* @ecx, align 4
  %v2_f7b2 = icmp eq i32 %v0_f7b2, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_f7b2 = load i1, i1* @zf, align 1
  %v4_f7b2 = or i1 %v2_f7b2, %v3_f7b2
  br i1 %v4_f7b2, label %dec_label_pc_f7b2.dec_label_pc_f7b4_crit_edge, label %bb

dec_label_pc_f7b2.dec_label_pc_f7b4_crit_edge:    ; preds = %dec_label_pc_f7b2
  br label %dec_label_pc_f7b4

bb:                                               ; preds = %dec_label_pc_f7b2
  %v6_f7b2 = call i32 @function_f73d()
  br label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f7b2.dec_label_pc_f7b4_crit_edge, %bb
  %v0_f7b7 = load i32, i32* @edx, align 4
  %v1_f7ba = call i32 @unknown_22246(i32 %v0_f7b7)
  %v0_f7c2 = load i32, i32* @ebp, align 4
  %v1_f7c2 = add i32 %v0_f7c2, -16
  %v1_f7c5 = add i32 %v0_f7c2, -32
  %v2_f7c5 = inttoptr i32 %v1_f7c5 to i32*
  %v3_f7c5 = load i32, i32* %v2_f7c5, align 4
  %v2_f7cf = call i32 @unknown_1efb0(i32 %v1_f7c2, i32 %v3_f7c5)
  %v0_f7d7 = load i32, i32* @ebp, align 4
  %v1_f7d7 = add i32 %v0_f7d7, -16
  %v1_f7de = add i32 %v0_f7d7, -20
  store i32 %v1_f7de, i32* @eax, align 4
  %v2_f7e4 = call i32 @function_1a806(i32 %v1_f7de, i32 %v1_f7d7)
  %v4_f7e9 = trunc i32 %v2_f7e4 to i8
  %v5_f7e9 = icmp eq i8 %v4_f7e9, 0
  %v1_f7eb = icmp eq i1 %v5_f7e9, false
  br i1 %v1_f7eb, label %dec_label_pc_f814, label %dec_label_pc_f7ed

dec_label_pc_f7ed:                                ; preds = %dec_label_pc_f7b4
  %v0_f7ed = load i32, i32* @ebp, align 4
  %v1_f7ed = add i32 %v0_f7ed, -20
  %v2_f7ed = inttoptr i32 %v1_f7ed to i32*
  %v3_f7ed = load i32, i32* %v2_f7ed, align 4
  %v1_f7f3 = call i32 @unknown_222fa(i32 %v3_f7ed)
  %v0_f7fa = load i32, i32* @ebp, align 4
  %v1_f7fa = add i32 %v0_f7fa, -32
  %v2_f7fa = inttoptr i32 %v1_f7fa to i32*
  %v3_f7fa = load i32, i32* %v2_f7fa, align 4
  %v1_f801 = add i32 %v0_f7fa, -36
  %v2_f801 = inttoptr i32 %v1_f801 to i32*
  %v3_f801 = load i32, i32* %v2_f801, align 4
  %v3_f80b = call i32 @unknown_1eaf6(i32 %v3_f7fa, i32 %v3_f801, i32 %v1_f7f3)
  %v4_f810 = trunc i32 %v3_f80b to i8
  %v5_f810 = icmp eq i8 %v4_f810, 0
  br i1 %v5_f810, label %dec_label_pc_f82b, label %dec_label_pc_f814

dec_label_pc_f814:                                ; preds = %dec_label_pc_f7ed, %dec_label_pc_f7b4
  %v0_f814 = load i32, i32* @ebp, align 4
  %v1_f814 = add i32 %v0_f814, -28
  %v2_f814 = inttoptr i32 %v1_f814 to i32*
  %v3_f814 = load i32, i32* %v2_f814, align 4
  %v1_f817 = add i32 %v0_f814, -32
  %v2_f817 = inttoptr i32 %v1_f817 to i32*
  %v3_f817 = load i32, i32* %v2_f817, align 4
  %v2_f821 = call i32 @unknown_1efb0(i32 %v3_f814, i32 %v3_f817)
  br label %dec_label_pc_f833

dec_label_pc_f82b:                                ; preds = %dec_label_pc_f7ed
  %v0_f82b = load i32, i32* @ebp, align 4
  %v1_f82b = add i32 %v0_f82b, -28
  %v2_f82b = inttoptr i32 %v1_f82b to i32*
  %v3_f82b = load i32, i32* %v2_f82b, align 4
  %v1_f82e = add i32 %v0_f82b, -20
  %v2_f82e = inttoptr i32 %v1_f82e to i32*
  %v3_f82e = load i32, i32* %v2_f82e, align 4
  %v2_f831 = inttoptr i32 %v3_f82b to i32*
  store i32 %v3_f82e, i32* %v2_f831, align 4
  br label %dec_label_pc_f833

dec_label_pc_f833:                                ; preds = %dec_label_pc_f82b, %dec_label_pc_f814
  %v0_f833 = load i32, i32* @ebp, align 4
  %v1_f833 = add i32 %v0_f833, -28
  %v2_f833 = inttoptr i32 %v1_f833 to i32*
  %v3_f833 = load i32, i32* %v2_f833, align 4
  store i32 %v3_f833, i32* @eax, align 4
  %v1_f836 = add i32 %v0_f833, -12
  %v2_f836 = inttoptr i32 %v1_f836 to i32*
  %v3_f836 = load i32, i32* %v2_f836, align 4
  %v1_f839 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f839 = icmp eq i32 %v1_f839, %v3_f836
  br i1 %v3_f839, label %bb11, label %dec_label_pc_f842

bb11:                                             ; preds = %dec_label_pc_f833
  %v1_f840 = call i32 @function_f847()
  br label %dec_label_pc_f842

dec_label_pc_f842:                                ; preds = %bb11, %dec_label_pc_f833
  %v2_f840 = phi i32 [ %v1_f840, %bb11 ], [ %v3_f833, %dec_label_pc_f833 ]
  ret i32 %v2_f840

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_1efb0, { 1, 0 }
  uselistorder label %dec_label_pc_f7b4, { 1, 0 }
}

define i32 @function_f847() local_unnamed_addr {
dec_label_pc_f847:
  %v0_f84b = load i32, i32* @eax, align 4
  ret i32 %v0_f84b
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f84e:
  %v1_f86e = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_f87b = call i32 @unknown_2242a(i32 %arg1, i32 %v1_f86e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f88f

bb:                                               ; preds = %dec_label_pc_f84e
  %v1_f88d = call i32 @function_f894()
  br label %dec_label_pc_f88f

dec_label_pc_f88f:                                ; preds = %bb, %dec_label_pc_f84e
  %v2_f88d = phi i32 [ %v1_f88d, %bb ], [ %arg1, %dec_label_pc_f84e ]
  ret i32 %v2_f88d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_f894() local_unnamed_addr {
dec_label_pc_f894:
  %v0_f895 = load i32, i32* @eax, align 4
  ret i32 %v0_f895
}

define i32 @_ZSt11__addressofISt4pairIK7uint256P11CBlockIndexEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_f898:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f8be

bb:                                               ; preds = %dec_label_pc_f898
  %v2_f8bc = call i32 @function_f8c3(i32 %arg1)
  br label %dec_label_pc_f8be

dec_label_pc_f8be:                                ; preds = %bb, %dec_label_pc_f898
  %v3_f8bc = phi i32 [ %v2_f8bc, %bb ], [ %arg1, %dec_label_pc_f898 ]
  ret i32 %v3_f8bc
}

define i32 @function_f8c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8c3:
  %v0_f8c4 = load i32, i32* @eax, align 4
  ret i32 %v0_f8c4
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8c6:
  %v1_f8e0 = add i32 %arg1, 20
  %v2_f8e0 = inttoptr i32 %v1_f8e0 to i32*
  %v3_f8e0 = load i32, i32* %v2_f8e0, align 4
  store i32 %v3_f8e0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f8ef

bb:                                               ; preds = %dec_label_pc_f8c6
  %v2_f8ed = call i32 @function_f8f4(i32 %arg1)
  br label %dec_label_pc_f8ef

dec_label_pc_f8ef:                                ; preds = %bb, %dec_label_pc_f8c6
  %v3_f8ed = phi i32 [ %v2_f8ed, %bb ], [ %v3_f8e0, %dec_label_pc_f8c6 ]
  ret i32 %v3_f8ed
}

define i32 @function_f8f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8f4:
  %v0_f8f5 = load i32, i32* @eax, align 4
  ret i32 %v0_f8f5
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f8f6:
  %v1_f916 = add i32 %arg2, 12
  %v2_f916 = inttoptr i32 %v1_f916 to i32*
  %v3_f916 = load i32, i32* %v2_f916, align 4
  %v2_f923 = call i32 @unknown_2250a(i32 %arg1, i32 %v3_f916)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f937

bb:                                               ; preds = %dec_label_pc_f8f6
  %v1_f935 = call i32 @function_f93c()
  br label %dec_label_pc_f937

dec_label_pc_f937:                                ; preds = %bb, %dec_label_pc_f8f6
  %v2_f935 = phi i32 [ %v1_f935, %bb ], [ %arg1, %dec_label_pc_f8f6 ]
  ret i32 %v2_f935

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_f93c() local_unnamed_addr {
dec_label_pc_f93c:
  %v0_f93d = load i32, i32* @eax, align 4
  ret i32 %v0_f93d
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_6CCoinsESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f940:
  %v1_f960 = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_f96d = call i32 @unknown_22554(i32 %arg1, i32 %v1_f960)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f981

bb:                                               ; preds = %dec_label_pc_f940
  %v1_f97f = call i32 @function_f986()
  br label %dec_label_pc_f981

dec_label_pc_f981:                                ; preds = %bb, %dec_label_pc_f940
  %v2_f97f = phi i32 [ %v1_f97f, %bb ], [ %arg1, %dec_label_pc_f940 ]
  ret i32 %v2_f97f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_f986() local_unnamed_addr {
dec_label_pc_f986:
  %v0_f987 = load i32, i32* @eax, align 4
  ret i32 %v0_f987
}

define i32 @_ZSt11__addressofIKSt4pairIK7uint2566CCoinsEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_f98a:
  ret i32 0
}

define i32 @function_f9a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9a2:
  %v0_f9a2 = load i32, i32* @ebp, align 4
  %v1_f9a2 = add i32 %v0_f9a2, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_f9a2, i32* @ebp, align 4
  %v0_f9a7 = load i32, i32* @edx, align 4
  %v1_f9a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_f9a7 = icmp eq i32 %v1_f9a7, %v0_f9a7
  br i1 %v3_f9a7, label %bb, label %dec_label_pc_f9a2.dec_label_pc_f9b0_crit_edge

dec_label_pc_f9a2.dec_label_pc_f9b0_crit_edge:    ; preds = %dec_label_pc_f9a2
  %v2_f9ae.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_f9b0

bb:                                               ; preds = %dec_label_pc_f9a2
  %v1_f9ae = call i32 @function_f9b5()
  br label %dec_label_pc_f9b0

dec_label_pc_f9b0:                                ; preds = %dec_label_pc_f9a2.dec_label_pc_f9b0_crit_edge, %bb
  %v2_f9ae = phi i32 [ %v2_f9ae.pre, %dec_label_pc_f9a2.dec_label_pc_f9b0_crit_edge ], [ %v1_f9ae, %bb ]
  ret i32 %v2_f9ae

; uselistorder directives
  uselistorder label %dec_label_pc_f9b0, { 1, 0 }
}

define i32 @function_f9b5() local_unnamed_addr {
dec_label_pc_f9b5:
  %v0_f9b6 = load i32, i32* @eax, align 4
  ret i32 %v0_f9b6
}

define i32 @_ZN13CLevelDBBatch5WriteISt4pairIc7uint256E15CDiskBlockIndexEEvRKT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f9b8:
  ret i32 %arg2
}

define i32 @function_f9c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9c9:
  %v0_f9c9 = load i32, i32* @ebp, align 4
  %v1_f9cf = add i32 %v0_f9c9, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_f9cf, i32* @ebp, align 4
  %v0_f9d1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f9d7 = add i32 %v0_f9c9, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 -12)
  %v3_f9d7 = inttoptr i32 %v2_f9d7 to i32*
  store i32 %v0_f9d1, i32* %v3_f9d7, align 4
  %v0_f9ec = load i32, i32* @ebp, align 4
  %v1_f9ec = add i32 %v0_f9ec, -84
  ret i32 %v1_f9ec
}

define i32 @function_f9d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9d8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f9f6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f9f6:
  %v0_f9f6 = load i32, i32* @ebx, align 4
  %v1_f9f6 = add i32 %v0_f9f6, 1149870149
  %v2_f9f6 = inttoptr i32 %v1_f9f6 to i8*
  %v3_f9f6 = load i8, i8* %v2_f9f6, align 1
  %v4_f9f6 = load i32, i32* @ecx, align 4
  %v5_f9f6 = trunc i32 %v4_f9f6 to i8
  %v6_f9f6 = add i8 %v5_f9f6, %v3_f9f6
  store i8 %v6_f9f6, i8* %v2_f9f6, align 1
  %v0_f9fc = load i32, i32* @eax, align 4
  %v11_f9fc = and i32 %v0_f9fc, or (i32 zext (i8 ptrtoint (i8** @global_var_4.1177 to i8) to i32), i32 -256)
  ret i32 %v11_f9fc
}

define i32 @function_f9fe(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f9fe:
  %v0_f9fe = load i32, i32* @ebp, align 4
  %v1_f9fe = add i32 %v0_f9fe, -84
  %v1_fa04 = call i32 @unknown_1ee0a(i32 %v1_f9fe)
  %v0_fa0d = load i32, i32* @ebp, align 4
  %v1_fa0d = add i32 %v0_fa0d, -84
  store i32 %v1_fa0d, i32* @eax, align 4
  %v2_fa13 = call i32 @function_141f6(i32 %v1_fa0d, i32 %v1_fa04)
  %v0_fa18 = load i32, i32* @ebp, align 4
  %v1_fa18 = add i32 %v0_fa18, -96
  %v2_fa18 = inttoptr i32 %v1_fa18 to i32*
  %v3_fa18 = load i32, i32* %v2_fa18, align 4
  %v1_fa1f = add i32 %v0_fa18, -84
  %v2_fa25 = call i32 @unknown_1c8e4(i32 %v1_fa1f, i32 %v3_fa18)
  %v0_fa2a = load i32, i32* @ebp, align 4
  %v1_fa2a = add i32 %v0_fa2a, -84
  store i32 %v1_fa2a, i32* @eax, align 4
  %v1_fa30 = call i32 @function_141b8(i32 %v1_fa2a)
  store i32 %v1_fa30, i32* @ebx, align 4
  %v0_fa3f = load i32, i32* @ebp, align 4
  %v1_fa3f = add i32 %v0_fa3f, -84
  %v2_fa45 = call i32 @function_14240(i32 %v1_fa3f, i32 0)
  %v0_fa4a = load i32, i32* @ebx, align 4
  %v0_fa52 = load i32, i32* @ebp, align 4
  %v1_fa52 = add i32 %v0_fa52, -28
  store i32 %v1_fa52, i32* @eax, align 4
  %v3_fa58 = call i32 @function_16eaa(i32 %v1_fa52, i32 %v2_fa45, i32 %v0_fa4a)
  %v0_fa6d = load i32, i32* @ebp, align 4
  %v1_fa6d = add i32 %v0_fa6d, -56
  store i32 %v1_fa6d, i32* @eax, align 4
  %v3_fa73 = call i32 @function_13e94(i32 %v1_fa6d, i32 2, i32 1020000)
  %v0_fa78 = load i32, i32* @ebp, align 4
  %v1_fa78 = add i32 %v0_fa78, -100
  %v2_fa78 = inttoptr i32 %v1_fa78 to i32*
  %v3_fa78 = load i32, i32* %v2_fa78, align 4
  %v1_fa7f = add i32 %v0_fa78, -56
  %v2_fa85 = call i32 @unknown_22604(i32 %v1_fa7f, i32 %v3_fa78)
  %v0_fa8e = load i32, i32* @ebp, align 4
  %v1_fa8e = add i32 %v0_fa8e, -56
  store i32 %v1_fa8e, i32* @eax, align 4
  %v2_fa94 = call i32 @function_141f6(i32 %v1_fa8e, i32 %v2_fa85)
  %v0_fa99 = load i32, i32* @ebp, align 4
  %v1_fa99 = add i32 %v0_fa99, -100
  %v2_fa99 = inttoptr i32 %v1_fa99 to i32*
  %v3_fa99 = load i32, i32* %v2_fa99, align 4
  %v1_faa0 = add i32 %v0_fa99, -56
  %v2_faa6 = call i32 @unknown_22654(i32 %v1_faa0, i32 %v3_fa99)
  %v0_faab = load i32, i32* @ebp, align 4
  %v1_faab = add i32 %v0_faab, -56
  store i32 %v1_faab, i32* @eax, align 4
  %v1_fab1 = call i32 @function_141b8(i32 %v1_faab)
  store i32 %v1_fab1, i32* @ebx, align 4
  %v0_fac0 = load i32, i32* @ebp, align 4
  %v1_fac0 = add i32 %v0_fac0, -56
  %v2_fac6 = call i32 @function_14240(i32 %v1_fac0, i32 0)
  %v0_facb = load i32, i32* @ebx, align 4
  %v0_fad3 = load i32, i32* @ebp, align 4
  %v1_fad3 = add i32 %v0_fad3, -20
  store i32 %v1_fad3, i32* @eax, align 4
  %v3_fad9 = call i32 @function_16eaa(i32 %v1_fad3, i32 %v2_fac6, i32 %v0_facb)
  %v0_fade = load i32, i32* @ebp, align 4
  %v1_fade = add i32 %v0_fade, -92
  %v2_fade = inttoptr i32 %v1_fade to i32*
  %v3_fade = load i32, i32* %v2_fade, align 4
  ret i32 %v3_fade

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_16eaa, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_14240, { 1, 0 }
  uselistorder i32 (i32)* @function_141b8, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_141f6, { 1, 0 }
}

define i32 @function_fa0e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fa0e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fa3d(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa3d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fa6a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fa6a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fab9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fab9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fae6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fae6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_faf6() local_unnamed_addr {
dec_label_pc_faf6:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_faf6 = add i32 %tmp91, 76138565
  %v2_faf6 = inttoptr i32 %v1_faf6 to i32*
  %v3_faf6 = load i32, i32* %v2_faf6, align 4
  %v4_faf6 = add i32 %v3_faf6, -1
  store i32 %v4_faf6, i32* %v2_faf6, align 4
  %v0_fafc = load i32, i32* %eax.global-to-local, align 4
  %v1_fafc = trunc i32 %v0_fafc to i8
  %v2_fafc = and i8 %v1_fafc, -24
  %v4_fafe = add i8 %v2_fafc, 69
  %v25_fafe = zext i8 %v4_fafe to i32
  %v27_fafe = and i32 %v0_fafc, -256
  %v28_fafe = or i32 %v25_fafe, %v27_fafe
  store i32 %v28_fafe, i32* %eax.global-to-local, align 4
  %v1_fb00 = inttoptr i32 %v28_fafe to i8*
  %v2_fb00 = load i8, i8* %v1_fb00, align 1
  %v5_fb00 = add i8 %v2_fb00, %v4_fafe
  store i8 %v5_fb00, i8* %v1_fb00, align 1
  %v0_fb02 = load i32, i32* %ebp.global-to-local, align 4
  %v1_fb02 = add i32 %v0_fb02, -84
  store i32 %v1_fb02, i32* %eax.global-to-local, align 4
  %v1_fb0d = add i32 %v0_fb02, -12
  %v2_fb0d = inttoptr i32 %v1_fb0d to i32*
  %v3_fb0d = load i32, i32* %v2_fb0d, align 4
  store i32 %v3_fb0d, i32* %eax.global-to-local, align 4
  %v1_fb10 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fb10 = xor i32 %v1_fb10, %v3_fb0d
  %v3_fb10 = icmp eq i32 %v2_fb10, 0
  store i32 %v2_fb10, i32* @eax, align 4
  br i1 %v3_fb10, label %bb, label %dec_label_pc_fb19

bb:                                               ; preds = %dec_label_pc_faf6
  %v2_fb17 = call i32 @function_fb46(i32 %v1_fb02)
  store i32 %v2_fb17, i32* @eax, align 4
  br label %dec_label_pc_fb19

dec_label_pc_fb19:                                ; preds = %bb, %dec_label_pc_faf6
  %v0_fb19 = call i32 @function_fb41()
  store i32 %v0_fb19, i32* %eax.global-to-local, align 4
  ret i32 %v0_fb19
}

define i32 @function_fb1b() local_unnamed_addr {
dec_label_pc_fb1b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_fb1b = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_fb1b, i32* @ebx, align 4
  %v0_fb1d = load i32, i32* %ebp.global-to-local, align 4
  %v1_fb1d = add i32 %v0_fb1d, -56
  store i32 %v1_fb1d, i32* %eax.global-to-local, align 4
  %v1_fb28 = call i32 @function_fb2c(i32 %v1_fb1d)
  store i32 %v1_fb28, i32* %eax.global-to-local, align 4
  ret i32 %v1_fb28
}

define i32 @function_fb2a() local_unnamed_addr {
dec_label_pc_fb2a:
  %eax.global-to-local = alloca i32, align 4
  %v0_fb2a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fb2a
}

define i32 @function_fb2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb2c:
  %v0_fb37 = load i32, i32* @ebx, align 4
  ret i32 %v0_fb37
}

define i32 @function_fb41() local_unnamed_addr {
dec_label_pc_fb41:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fb46(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb46:
  %v0_fb4b = load i32, i32* @eax, align 4
  ret i32 %v0_fb4b
}

define i32 @_ZN11CDataStreamrsI7CBigNumEERS_RT_() local_unnamed_addr {
dec_label_pc_fb4c:
  %eax.global-to-local = alloca i32, align 4
  %v5_fb4c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_fb4c
}

define i32 @function_fb4d(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb4d:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_fb5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb5c:
  %v0_fb5c = load i32, i32* @ebp, align 4
  %v1_fb5c = add i32 %v0_fb5c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_fb5c, i32* @ebp, align 4
  %v0_fb5d = load i32, i32* @ecx, align 4
  %v1_fb5d = sub i32 %v0_fb5d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_fb5d, i32* @ecx, align 4
  %v0_fb5f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fb64 = add i32 %v0_fb5c, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12)
  %v3_fb64 = inttoptr i32 %v2_fb64 to i32*
  store i32 %v0_fb5f, i32* %v3_fb64, align 4
  %v0_fb69 = load i32, i32* @ebp, align 4
  %v1_fb7d = add i32 %v0_fb69, -32
  %v2_fb7d = inttoptr i32 %v1_fb7d to i32*
  %v3_fb7d = load i32, i32* %v2_fb7d, align 4
  ret i32 %v3_fb7d
}

define i32 @function_fb7a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fb7a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fb80(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb80:
  %v0_fb80 = load i32, i32* @eax, align 4
  %v0_fb84 = load i32, i32* @ebp, align 4
  %v1_fb84 = add i32 %v0_fb84, -28
  %v2_fb84 = inttoptr i32 %v1_fb84 to i32*
  %v3_fb84 = load i32, i32* %v2_fb84, align 4
  %v2_fb8a = call i32 @unknown_22841(i32 %v3_fb84, i32 %v0_fb80)
  %v0_fb8f = load i32, i32* @ebp, align 4
  %v1_fb8f = add i32 %v0_fb8f, -28
  %v2_fb8f = inttoptr i32 %v1_fb8f to i32*
  %v3_fb8f = load i32, i32* %v2_fb8f, align 4
  store i32 %v3_fb8f, i32* @eax, align 4
  %v1_fb92 = add i32 %v0_fb8f, -12
  %v2_fb92 = inttoptr i32 %v1_fb92 to i32*
  %v3_fb92 = load i32, i32* %v2_fb92, align 4
  %v1_fb95 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_fb95 = icmp eq i32 %v1_fb95, %v3_fb92
  br i1 %v3_fb95, label %bb, label %dec_label_pc_fb9e

bb:                                               ; preds = %dec_label_pc_fb80
  %v1_fb9c = call i32 @function_fba3()
  br label %dec_label_pc_fb9e

dec_label_pc_fb9e:                                ; preds = %bb, %dec_label_pc_fb80
  %v2_fb9c = phi i32 [ %v1_fb9c, %bb ], [ %v3_fb8f, %dec_label_pc_fb80 ]
  ret i32 %v2_fb9c
}

define i32 @function_fba2(i32 %arg1) local_unnamed_addr {
dec_label_pc_fba2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fba3() local_unnamed_addr {
dec_label_pc_fba3:
  %v0_fba4 = load i32, i32* @eax, align 4
  ret i32 %v0_fba4
}

define i32 @_ZN13CLevelDBBatch5WriteIc7CBigNumEEvRKT_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fba6:
  ret i32 %arg3
}

define i32 @function_fbc1(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbc1:
  %v0_fbc1 = load i32, i32* @eax, align 4
  %v2_fbc1 = load i1, i1* @cf, align 1
  %v3_fbc1 = zext i1 %v2_fbc1 to i32
  %v4_fbc1 = add i32 %v3_fbc1, %v0_fbc1
  %v22_fbc1 = and i32 %v4_fbc1, 255
  %v24_fbc1 = and i32 %v0_fbc1, -256
  %v25_fbc1 = or i32 %v22_fbc1, %v24_fbc1
  ret i32 %v25_fbc1

; uselistorder directives
  uselistorder i32 %v0_fbc1, { 1, 0 }
}

define i32 @function_fc10(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc10:
  %v0_fc10 = load i32, i32* @eax, align 4
  %v1_fc13 = call i32 @unknown_1f148(i32 %v0_fc10)
  %v0_fc18 = load i32, i32* @ebp, align 4
  %v1_fc18 = add i32 %v0_fc18, -84
  store i32 %v1_fc18, i32* @eax, align 4
  %v1_fc1e = call i32 @function_143a6(i32 %v1_fc18)
  store i32 %v1_fc1e, i32* @ebx, align 4
  ret i32 %v1_fc1e
}

define i32 @function_fc2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc2e:
  %v0_fc2e = load i32, i32* @ebp, align 4
  %v1_fc2e = add i32 %v0_fc2e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_fc2e, i32* @ebp, align 4
  %v2_fc2f = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_fc2f = zext i8 %v2_fc2f to i32
  %v4_fc2f = load i32, i32* @eax, align 4
  %v5_fc2f = and i32 %v4_fc2f, -256
  %v6_fc2f = or i32 %v5_fc2f, %v3_fc2f
  store i32 %v6_fc2f, i32* @eax, align 4
  %v7_fc2f = load i32, i32* @esi, align 4
  %v8_fc2f = load i1, i1* @df, align 1
  %v9_fc2f = select i1 %v8_fc2f, i32 -1, i32 ptrtoint (i8** @global_var_1.1176 to i32)
  %v10_fc2f = add i32 %v9_fc2f, %v7_fc2f
  store i32 %v10_fc2f, i32* @esi, align 4
  %v1_fc33 = call i32 @function_1442e(i32 %v6_fc2f)
  %v0_fc38 = load i32, i32* @ebx, align 4
  %v0_fc40 = load i32, i32* @ebp, align 4
  %v1_fc40 = add i32 %v0_fc40, -28
  store i32 %v1_fc40, i32* @eax, align 4
  %v3_fc46 = call i32 @function_17098(i32 %v1_fc40, i32 %v1_fc33, i32 %v0_fc38)
  %v0_fc5b = load i32, i32* @ebp, align 4
  %v1_fc5b = add i32 %v0_fc5b, -56
  store i32 %v1_fc5b, i32* @eax, align 4
  %v3_fc61 = call i32 @function_14082(i32 %v1_fc5b, i32 2, i32 1020000)
  %v0_fc66 = load i32, i32* @ebp, align 4
  %v1_fc66 = add i32 %v0_fc66, -100
  %v2_fc66 = inttoptr i32 %v1_fc66 to i32*
  %v3_fc66 = load i32, i32* %v2_fc66, align 4
  %v1_fc6d = add i32 %v0_fc66, -56
  %v2_fc73 = call i32 @unknown_228f8(i32 %v1_fc6d, i32 %v3_fc66)
  %v0_fc7c = load i32, i32* @ebp, align 4
  %v1_fc7c = add i32 %v0_fc7c, -56
  store i32 %v1_fc7c, i32* @eax, align 4
  %v1_fc82 = call i32 @function_143e4(i32 %v1_fc7c)
  %v0_fc87 = load i32, i32* @ebp, align 4
  %v1_fc87 = add i32 %v0_fc87, -100
  %v2_fc87 = inttoptr i32 %v1_fc87 to i32*
  %v3_fc87 = load i32, i32* %v2_fc87, align 4
  %v1_fc8e = add i32 %v0_fc87, -56
  %v2_fc94 = call i32 @unknown_22948(i32 %v1_fc8e, i32 %v3_fc87)
  %v0_fc99 = load i32, i32* @ebp, align 4
  %v1_fc99 = add i32 %v0_fc99, -56
  store i32 %v1_fc99, i32* @eax, align 4
  %v1_fc9f = call i32 @function_143a6(i32 %v1_fc99)
  store i32 %v1_fc9f, i32* @ebx, align 4
  %v0_fcae = load i32, i32* @ebp, align 4
  %v1_fcae = add i32 %v0_fcae, -56
  store i32 %v1_fcae, i32* @eax, align 4
  %v1_fcb4 = call i32 @function_1442e(i32 %v1_fcae)
  %v0_fcb9 = load i32, i32* @ebx, align 4
  %v0_fcc1 = load i32, i32* @ebp, align 4
  %v1_fcc1 = add i32 %v0_fcc1, -20
  store i32 %v1_fcc1, i32* @eax, align 4
  %v3_fcc7 = call i32 @function_17098(i32 %v1_fcc1, i32 %v1_fcb4, i32 %v0_fcb9)
  %v0_fccc = load i32, i32* @ebp, align 4
  %v1_fccc = add i32 %v0_fccc, -92
  %v2_fccc = inttoptr i32 %v1_fccc to i32*
  %v3_fccc = load i32, i32* %v2_fccc, align 4
  %v1_fcd6 = add i32 %v0_fccc, -28
  store i32 %v1_fcd6, i32* @edx, align 4
  ret i32 %v3_fccc

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_17098, { 1, 0 }
  uselistorder i32 (i32)* @function_1442e, { 1, 0 }
}

define i32 @function_fc49(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc49:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fc76(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fc76:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fcbd(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcbd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fcd8() local_unnamed_addr {
dec_label_pc_fcd8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fce4() local_unnamed_addr {
dec_label_pc_fce4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_fce4 = add i32 %tmp91, 76138565
  %v2_fce4 = inttoptr i32 %v1_fce4 to i32*
  %v3_fce4 = load i32, i32* %v2_fce4, align 4
  %v4_fce4 = add i32 %v3_fce4, -1
  store i32 %v4_fce4, i32* %v2_fce4, align 4
  %v0_fcea = load i32, i32* %eax.global-to-local, align 4
  %v1_fcea = trunc i32 %v0_fcea to i8
  %v2_fcea = and i8 %v1_fcea, -24
  %v4_fcec = add i8 %v2_fcea, 69
  %v25_fcec = zext i8 %v4_fcec to i32
  %v27_fcec = and i32 %v0_fcea, -256
  %v28_fcec = or i32 %v25_fcec, %v27_fcec
  store i32 %v28_fcec, i32* %eax.global-to-local, align 4
  %v1_fcee = inttoptr i32 %v28_fcec to i8*
  %v2_fcee = load i8, i8* %v1_fcee, align 1
  %v5_fcee = add i8 %v2_fcee, %v4_fcec
  store i8 %v5_fcee, i8* %v1_fcee, align 1
  %v0_fcf0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_fcf0 = add i32 %v0_fcf0, -84
  store i32 %v1_fcf0, i32* %eax.global-to-local, align 4
  %v1_fcfb = add i32 %v0_fcf0, -12
  %v2_fcfb = inttoptr i32 %v1_fcfb to i32*
  %v3_fcfb = load i32, i32* %v2_fcfb, align 4
  store i32 %v3_fcfb, i32* %eax.global-to-local, align 4
  %v1_fcfe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fcfe = xor i32 %v1_fcfe, %v3_fcfb
  %v3_fcfe = icmp eq i32 %v2_fcfe, 0
  store i32 %v2_fcfe, i32* @eax, align 4
  br i1 %v3_fcfe, label %bb, label %dec_label_pc_fd07

bb:                                               ; preds = %dec_label_pc_fce4
  %v2_fd05 = call i32 @function_fd34(i32 %v1_fcf0)
  store i32 %v2_fd05, i32* @eax, align 4
  br label %dec_label_pc_fd07

dec_label_pc_fd07:                                ; preds = %bb, %dec_label_pc_fce4
  %v0_fd07 = call i32 @function_fd2f()
  store i32 %v0_fd07, i32* %eax.global-to-local, align 4
  ret i32 %v0_fd07
}

define i32 @function_fd09() local_unnamed_addr {
dec_label_pc_fd09:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_fd0b = add i32 %tmp91, -56
  ret i32 %v1_fd0b
}

define i32 @function_fd18() local_unnamed_addr {
dec_label_pc_fd18:
  %eax.global-to-local = alloca i32, align 4
  %v0_fd18 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fd18
}

define i32 @function_fd1b(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd1b:
  %v0_fd1b = load i32, i32* @ebp, align 4
  %v1_fd1b = add i32 %v0_fd1b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_fd1b, i32* @ebp, align 4
  %v2_fd1c = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_fd1c = zext i8 %v2_fd1c to i32
  %v4_fd1c = load i32, i32* @eax, align 4
  %v5_fd1c = and i32 %v4_fd1c, -256
  %v6_fd1c = or i32 %v5_fd1c, %v3_fd1c
  %v7_fd1c = load i32, i32* @esi, align 4
  %v8_fd1c = load i1, i1* @df, align 1
  %v9_fd1c = select i1 %v8_fd1c, i32 -1, i32 ptrtoint (i8** @global_var_1.1176 to i32)
  %v10_fd1c = add i32 %v9_fd1c, %v7_fd1c
  store i32 %v10_fd1c, i32* @esi, align 4
  ret i32 %v6_fd1c
}

define i32 @function_fd22(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd22:
  %v2_fd23 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_fd23 = load i32, i32* @eax, align 4
  %v4_fd23 = trunc i32 %v3_fd23 to i8
  %v5_fd23 = add i8 %v4_fd23, %v2_fd23
  %v21_fd23 = inttoptr i32 %v3_fd23 to i8*
  store i8 %v5_fd23, i8* %v21_fd23, align 1
  %v0_fd25 = load i32, i32* @ebx, align 4
  ret i32 %v0_fd25
}

define i32 @function_fd2f() local_unnamed_addr {
dec_label_pc_fd2f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fd34(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd34:
  %v0_fd39 = load i32, i32* @eax, align 4
  ret i32 %v0_fd39
}

define i32 @_ZNSt4pairIciEC1ERKcRKi(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd3a:
  ret i32 %arg1
}

define i32 @function_fd48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fd48:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_fd48 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_fd48 = or i32 %v0_fd48, 137
  store i32 %v11_fd48, i32* @eax, align 4
  %v0_fd4a = load i32, i32* @ebp, align 4
  %v1_fd4a = add i32 %v0_fd4a, ptrtoint (i8** @global_var_1.1176 to i32)
  %v9_fd4a = icmp eq i32 %v1_fd4a, 0
  store i32 %v1_fd4a, i32* %ebp.global-to-local, align 4
  %v0_fd4b = load i32, i32* @ecx, align 4
  %v1_fd4b = sub i32 %v0_fd4b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_fd4b, i32* @ecx, align 4
  %v2_fd4b = icmp eq i32 %v1_fd4b, 0
  %v4_fd4b = or i1 %v9_fd4a, %v2_fd4b
  br i1 %v4_fd4b, label %dec_label_pc_fd4d, label %bb

bb:                                               ; preds = %dec_label_pc_fd48
  %v6_fd4b = call i32 @function_fcd8()
  store i32 %v6_fd4b, i32* @eax, align 4
  %v0_fd4d.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_fd4e.pre = load i32, i32* @ecx, align 4
  %v6_fd4e.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_fd4d

dec_label_pc_fd4d:                                ; preds = %dec_label_pc_fd48, %bb
  %v6_fd4e = phi i1 [ false, %dec_label_pc_fd48 ], [ %v6_fd4e.pre, %bb ]
  %v30_fd4e = phi i32 [ %v1_fd4b, %dec_label_pc_fd48 ], [ %v0_fd4e.pre, %bb ]
  %v0_fd4d = phi i32 [ %v1_fd4a, %dec_label_pc_fd48 ], [ %v0_fd4d.pre, %bb ]
  %v1_fd4d = add i32 %v0_fd4d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_fd4d, i32* @ebp, align 4
  %v1_fd4e = add i32 %v30_fd4e, -1587159995
  %v2_fd4e = inttoptr i32 %v1_fd4e to i8*
  %v3_fd4e = load i8, i8* %v2_fd4e, align 1
  %v5_fd4e = trunc i32 %v30_fd4e to i8
  %v7_fd4e = zext i1 %v6_fd4e to i8
  %v8_fd4e = add i8 %v3_fd4e, %v5_fd4e
  %v9_fd4e = add i8 %v8_fd4e, %v7_fd4e
  %v27_fd4e = icmp ule i8 %v9_fd4e, %v3_fd4e
  %v28_fd4e = icmp ult i8 %v8_fd4e, %v3_fd4e
  %v29_fd4e = select i1 %v6_fd4e, i1 %v27_fd4e, i1 %v28_fd4e
  store i1 %v29_fd4e, i1* %cf.global-to-local, align 1
  store i8 %v9_fd4e, i8* %v2_fd4e, align 1
  %v0_fd54 = load i32, i32* @eax, align 4
  %v1_fd54 = trunc i32 %v0_fd54 to i8
  %v2_fd54 = load i1, i1* %cf.global-to-local, align 1
  %v3_fd54 = zext i1 %v2_fd54 to i8
  %v4_fd54 = add i8 %v3_fd54, %v1_fd54
  %v19_fd54 = icmp ule i8 %v4_fd54, %v1_fd54
  %v21_fd54 = icmp eq i1 %v2_fd54, %v19_fd54
  store i1 %v21_fd54, i1* %cf.global-to-local, align 1
  %v22_fd54 = zext i8 %v4_fd54 to i32
  %v24_fd54 = and i32 %v0_fd54, -256
  %v25_fd54 = or i32 %v22_fd54, %v24_fd54
  store i32 %v25_fd54, i32* %eax.global-to-local, align 4
  %v1_fd56 = inttoptr i32 %v25_fd54 to i8*
  %v2_fd56 = load i8, i8* %v1_fd56, align 1
  %v5_fd56 = add i8 %v2_fd56, %v4_fd54
  store i8 %v5_fd56, i8* %v1_fd56, align 1
  %v0_fd58 = load i32, i32* %eax.global-to-local, align 4
  %v1_fd58 = load i32, i32* @ebp, align 4
  %v2_fd58 = add i32 %v1_fd58, -12
  %v3_fd58 = inttoptr i32 %v2_fd58 to i32*
  store i32 %v0_fd58, i32* %v3_fd58, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_fd5d = load i32, i32* @ebp, align 4
  %v1_fd5d = add i32 %v0_fd5d, -32
  %v2_fd5d = inttoptr i32 %v1_fd5d to i32*
  %v3_fd5d = load i32, i32* %v2_fd5d, align 4
  store i32 %v3_fd5d, i32* %eax.global-to-local, align 4
  ret i32 %v3_fd5d

; uselistorder directives
  uselistorder i8 %v4_fd54, { 0, 2, 1 }
  uselistorder i8 %v1_fd54, { 1, 0 }
  uselistorder i8 %v9_fd4e, { 1, 0 }
  uselistorder i8 %v8_fd4e, { 1, 0 }
  uselistorder i8 %v3_fd4e, { 1, 2, 0 }
  uselistorder i32 %v30_fd4e, { 1, 0 }
  uselistorder i1 %v6_fd4e, { 1, 0 }
  uselistorder label %dec_label_pc_fd4d, { 1, 0 }
}

define i32 @function_fd60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fd60:
  %v2_fd60 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v0_fd63 = load i32, i32* @ebp, align 4
  %v1_fd63 = add i32 %v0_fd63, -28
  %v2_fd63 = inttoptr i32 %v1_fd63 to i32*
  %v3_fd63 = load i32, i32* %v2_fd63, align 4
  %v3_fd66 = inttoptr i32 %v3_fd63 to i8*
  store i8 %v2_fd60, i8* %v3_fd66, align 1
  %v0_fd68 = load i32, i32* @ebp, align 4
  %v1_fd68 = add i32 %v0_fd68, -36
  %v2_fd68 = inttoptr i32 %v1_fd68 to i32*
  %v3_fd68 = load i32, i32* %v2_fd68, align 4
  %v1_fd6b = inttoptr i32 %v3_fd68 to i32*
  %v2_fd6b = load i32, i32* %v1_fd6b, align 4
  %v1_fd6d = add i32 %v0_fd68, -28
  %v2_fd6d = inttoptr i32 %v1_fd6d to i32*
  %v3_fd6d = load i32, i32* %v2_fd6d, align 4
  %v2_fd70 = add i32 %v3_fd6d, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_fd70 = inttoptr i32 %v2_fd70 to i32*
  store i32 %v2_fd6b, i32* %v3_fd70, align 4
  %v0_fd73 = load i32, i32* @ebp, align 4
  %v1_fd73 = add i32 %v0_fd73, -12
  %v2_fd73 = inttoptr i32 %v1_fd73 to i32*
  %v3_fd73 = load i32, i32* %v2_fd73, align 4
  %v1_fd76 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fd76 = xor i32 %v1_fd76, %v3_fd73
  %v3_fd76 = icmp eq i32 %v2_fd76, 0
  store i32 %v2_fd76, i32* @eax, align 4
  br i1 %v3_fd76, label %bb, label %dec_label_pc_fd7f

bb:                                               ; preds = %dec_label_pc_fd60
  %v1_fd7d = call i32 @function_fd84()
  br label %dec_label_pc_fd7f

dec_label_pc_fd7f:                                ; preds = %bb, %dec_label_pc_fd60
  %v3_fd7d = phi i32 [ %v1_fd7d, %bb ], [ %v2_fd76, %dec_label_pc_fd60 ]
  ret i32 %v3_fd7d
}

define i32 @function_fd84() local_unnamed_addr {
dec_label_pc_fd84:
  %v0_fd85 = load i32, i32* @eax, align 4
  ret i32 %v0_fd85
}

define i32 @_ZN13CLevelDBBatch5WriteISt4pairIciE14CBlockFileInfoEEvRKT_RKT0_() local_unnamed_addr {
dec_label_pc_fd86:
  %eax.global-to-local = alloca i32, align 4
  %v17_fd8a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_fd8a
}

define i32 @function_fd8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd8f:
  %v0_fd8f = load i32, i32* @ecx, align 4
  %v1_fd8f = add i32 %v0_fd8f, 1166779461
  %v2_fd8f = inttoptr i32 %v1_fd8f to i8*
  %v3_fd8f = load i8, i8* %v2_fd8f, align 1
  %v5_fd8f = trunc i32 %v0_fd8f to i8
  %v6_fd8f = or i8 %v3_fd8f, %v5_fd8f
  store i8 %v6_fd8f, i8* %v2_fd8f, align 1
  %v0_fd97 = load i32, i32* @ebp, align 4
  %v1_fd9d = add i32 %v0_fd97, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_fd9d, i32* @ebp, align 4
  %v0_fd9f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fda5 = add i32 %v0_fd97, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 -12)
  %v3_fda5 = inttoptr i32 %v2_fda5 to i32*
  store i32 %v0_fd9f, i32* %v3_fda5, align 4
  ret i32 0
}

define i32 @function_fdaa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fdaa:
  %v0_fdba = load i32, i32* @ebp, align 4
  %v1_fdba = add i32 %v0_fdba, -84
  store i32 %v1_fdba, i32* @eax, align 4
  %v3_fdc0 = call i32 @function_14262(i32 %v1_fdba, i32 2, i32 1020000)
  %v0_fdc5 = load i32, i32* @ebp, align 4
  %v1_fdc5 = add i32 %v0_fdc5, -96
  %v2_fdc5 = inttoptr i32 %v1_fdc5 to i32*
  %v3_fdc5 = load i32, i32* %v2_fdc5, align 4
  %v1_fdcc = add i32 %v0_fdc5, -84
  %v2_fdd2 = call i32 @unknown_1fca0(i32 %v1_fdcc, i32 %v3_fdc5)
  %v0_fddb = load i32, i32* @ebp, align 4
  %v1_fddb = add i32 %v0_fddb, -84
  store i32 %v1_fddb, i32* @eax, align 4
  %v2_fde1 = call i32 @function_145c4(i32 %v1_fddb, i32 %v2_fdd2)
  %v0_fde6 = load i32, i32* @ebp, align 4
  %v1_fde6 = add i32 %v0_fde6, -96
  %v2_fde6 = inttoptr i32 %v1_fde6 to i32*
  %v3_fde6 = load i32, i32* %v2_fde6, align 4
  %v1_fded = add i32 %v0_fde6, -84
  %v2_fdf3 = call i32 @unknown_1fcf0(i32 %v1_fded, i32 %v3_fde6)
  %v0_fdf8 = load i32, i32* @ebp, align 4
  %v1_fdf8 = add i32 %v0_fdf8, -84
  store i32 %v1_fdf8, i32* @eax, align 4
  %v1_fdfe = call i32 @function_14586(i32 %v1_fdf8)
  store i32 %v1_fdfe, i32* @ebx, align 4
  %v0_fe0d = load i32, i32* @ebp, align 4
  %v1_fe0d = add i32 %v0_fe0d, -84
  store i32 %v1_fe0d, i32* @eax, align 4
  %v2_fe13 = call i32 @function_1460e(i32 %v1_fe0d, i32 0)
  %v0_fe18 = load i32, i32* @ebx, align 4
  %v0_fe20 = load i32, i32* @ebp, align 4
  %v1_fe20 = add i32 %v0_fe20, -28
  store i32 %v1_fe20, i32* @eax, align 4
  %v3_fe26 = call i32 @function_17278(i32 %v1_fe20, i32 %v2_fe13, i32 %v0_fe18)
  %v0_fe3b = load i32, i32* @ebp, align 4
  %v1_fe3b = add i32 %v0_fe3b, -56
  store i32 %v1_fe3b, i32* @eax, align 4
  %v3_fe41 = call i32 @function_14262(i32 %v1_fe3b, i32 2, i32 1020000)
  %v0_fe46 = load i32, i32* @ebp, align 4
  %v1_fe46 = add i32 %v0_fe46, -100
  %v2_fe46 = inttoptr i32 %v1_fe46 to i32*
  %v3_fe46 = load i32, i32* %v2_fe46, align 4
  %v1_fe4d = add i32 %v0_fe46, -56
  %v2_fe53 = call i32 @unknown_22b82(i32 %v1_fe4d, i32 %v3_fe46)
  %v0_fe5c = load i32, i32* @ebp, align 4
  %v1_fe5c = add i32 %v0_fe5c, -56
  store i32 %v1_fe5c, i32* @eax, align 4
  %v2_fe62 = call i32 @function_145c4(i32 %v1_fe5c, i32 %v2_fe53)
  %v0_fe67 = load i32, i32* @ebp, align 4
  %v1_fe67 = add i32 %v0_fe67, -100
  %v2_fe67 = inttoptr i32 %v1_fe67 to i32*
  %v3_fe67 = load i32, i32* %v2_fe67, align 4
  %v1_fe6e = add i32 %v0_fe67, -56
  %v2_fe74 = call i32 @unknown_22bd2(i32 %v1_fe6e, i32 %v3_fe67)
  %v0_fe79 = load i32, i32* @ebp, align 4
  %v1_fe79 = add i32 %v0_fe79, -56
  store i32 %v1_fe79, i32* @eax, align 4
  %v1_fe7f = call i32 @function_14586(i32 %v1_fe79)
  store i32 %v1_fe7f, i32* @ebx, align 4
  %v0_fe8e = load i32, i32* @ebp, align 4
  %v1_fe8e = add i32 %v0_fe8e, -56
  store i32 %v1_fe8e, i32* @eax, align 4
  %v2_fe94 = call i32 @function_1460e(i32 %v1_fe8e, i32 0)
  %v0_fe99 = load i32, i32* @ebx, align 4
  %v0_fea1 = load i32, i32* @ebp, align 4
  %v1_fea1 = add i32 %v0_fea1, -20
  store i32 %v1_fea1, i32* @eax, align 4
  %v3_fea7 = call i32 @function_17278(i32 %v1_fea1, i32 %v2_fe94, i32 %v0_fe99)
  %v0_feac = load i32, i32* @ebp, align 4
  %v1_feac = add i32 %v0_feac, -92
  %v2_feac = inttoptr i32 %v1_feac to i32*
  %v3_feac = load i32, i32* %v2_feac, align 4
  ret i32 %v3_feac

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_17278, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1460e, { 1, 0 }
  uselistorder i32 (i32)* @function_14586, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_145c4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_14262, { 1, 0 }
}

define i32 @function_fe70(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fe70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fec4() local_unnamed_addr {
dec_label_pc_fec4:
  %eax.global-to-local = alloca i32, align 4
  %v0_fec4 = load i32, i32* @ebp, align 4
  %v1_fec4 = add i32 %v0_fec4, 76138565
  %v2_fec4 = inttoptr i32 %v1_fec4 to i32*
  %v3_fec4 = load i32, i32* %v2_fec4, align 4
  %v4_fec4 = add i32 %v3_fec4, -1
  store i32 %v4_fec4, i32* %v2_fec4, align 4
  %v0_feca = load i32, i32* %eax.global-to-local, align 4
  %v1_feca = trunc i32 %v0_feca to i8
  %v2_feca = and i8 %v1_feca, -24
  %v4_fecc = add i8 %v2_feca, 69
  %v25_fecc = zext i8 %v4_fecc to i32
  %v27_fecc = and i32 %v0_feca, -256
  %v28_fecc = or i32 %v25_fecc, %v27_fecc
  store i32 %v28_fecc, i32* %eax.global-to-local, align 4
  %v1_fece = inttoptr i32 %v28_fecc to i8*
  %v2_fece = load i8, i8* %v1_fece, align 1
  %v5_fece = add i8 %v2_fece, %v4_fecc
  store i8 %v5_fece, i8* %v1_fece, align 1
  %v0_fed0 = load i32, i32* @ebp, align 4
  %v1_fed0 = add i32 %v0_fed0, -84
  store i32 %v1_fed0, i32* @eax, align 4
  %v1_fed6 = call i32 @function_143e4(i32 %v1_fed0)
  store i32 %v1_fed6, i32* %eax.global-to-local, align 4
  %v0_fedb = load i32, i32* @ebp, align 4
  %v1_fedb = add i32 %v0_fedb, -12
  %v2_fedb = inttoptr i32 %v1_fedb to i32*
  %v3_fedb = load i32, i32* %v2_fedb, align 4
  store i32 %v3_fedb, i32* %eax.global-to-local, align 4
  %v1_fede = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_fede = xor i32 %v1_fede, %v3_fedb
  %v3_fede = icmp eq i32 %v2_fede, 0
  store i32 %v2_fede, i32* @eax, align 4
  br i1 %v3_fede, label %bb, label %dec_label_pc_fee7

bb:                                               ; preds = %dec_label_pc_fec4
  %v1_fee5 = call i32 @function_ff14()
  store i32 %v1_fee5, i32* @eax, align 4
  br label %dec_label_pc_fee7

dec_label_pc_fee7:                                ; preds = %bb, %dec_label_pc_fec4
  %v0_fee7 = call i32 @function_ff0f()
  store i32 %v0_fee7, i32* %eax.global-to-local, align 4
  ret i32 %v0_fee7
}

define i32 @function_fee9() local_unnamed_addr {
dec_label_pc_fee9:
  %eax.global-to-local = alloca i32, align 4
  %v0_fee9 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_fee9, i32* @ebx, align 4
  %v0_feeb = load i32, i32* @ebp, align 4
  %v1_feeb = add i32 %v0_feeb, -56
  store i32 %v1_feeb, i32* @eax, align 4
  %v1_fef1 = call i32 @function_143e4(i32 %v1_feeb)
  store i32 %v1_fef1, i32* %eax.global-to-local, align 4
  %v0_fef6 = call i32 @function_fefa()
  store i32 %v0_fef6, i32* %eax.global-to-local, align 4
  ret i32 %v0_fef6
}

define i32 @function_fef8() local_unnamed_addr {
dec_label_pc_fef8:
  %eax.global-to-local = alloca i32, align 4
  %v0_fef8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fef8
}

define i32 @function_fefa() local_unnamed_addr {
dec_label_pc_fefa:
  %v0_fefa = load i32, i32* @ebp, align 4
  %v1_fefa = add i32 %v0_fefa, -84
  store i32 %v1_fefa, i32* @eax, align 4
  %v1_ff00 = call i32 @function_143e4(i32 %v1_fefa)
  %v0_ff05 = load i32, i32* @ebx, align 4
  ret i32 %v0_ff05

; uselistorder directives
  uselistorder i32 (i32)* @function_143e4, { 3, 2, 1, 0 }
}

define i32 @function_ff0f() local_unnamed_addr {
dec_label_pc_ff0f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ff14() local_unnamed_addr {
dec_label_pc_ff14:
  %v0_ff19 = load i32, i32* @eax, align 4
  ret i32 %v0_ff19
}

define i32 @_ZN11CDataStream16GetSerializeSizeISt4pairIciEEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ff1a:
  ret i32 %arg1
}

define i32 @function_ff3a(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff3a:
  %v0_ff3a = load i32, i32* @eax, align 4
  %v1_ff3a = add i32 %v0_ff3a, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_ff3a = inttoptr i32 %v1_ff3a to i32*
  %v3_ff3a = load i32, i32* %v2_ff3a, align 4
  %v0_ff3d = load i32, i32* @ebp, align 4
  %v1_ff3d = add i32 %v0_ff3d, -28
  %v2_ff3d = inttoptr i32 %v1_ff3d to i32*
  %v3_ff3d = load i32, i32* %v2_ff3d, align 4
  %v1_ff40 = add i32 %v3_ff3d, 20
  %v2_ff40 = inttoptr i32 %v1_ff40 to i32*
  %v3_ff40 = load i32, i32* %v2_ff40, align 4
  %v1_ff4b = add i32 %v0_ff3d, -32
  %v2_ff4b = inttoptr i32 %v1_ff4b to i32*
  %v3_ff4b = load i32, i32* %v2_ff4b, align 4
  %v3_ff51 = call i32 @unknown_22dbf(i32 %v3_ff4b, i32 %v3_ff40, i32 %v3_ff3a)
  store i32 %v3_ff51, i32* @eax, align 4
  %v0_ff56 = load i32, i32* @ebp, align 4
  %v1_ff56 = add i32 %v0_ff56, -12
  %v2_ff56 = inttoptr i32 %v1_ff56 to i32*
  %v3_ff56 = load i32, i32* %v2_ff56, align 4
  %v1_ff59 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ff59 = icmp eq i32 %v1_ff59, %v3_ff56
  br i1 %v3_ff59, label %bb, label %dec_label_pc_ff62

bb:                                               ; preds = %dec_label_pc_ff3a
  %v1_ff60 = call i32 @function_ff67()
  br label %dec_label_pc_ff62

dec_label_pc_ff62:                                ; preds = %bb, %dec_label_pc_ff3a
  %v2_ff60 = phi i32 [ %v1_ff60, %bb ], [ %v3_ff51, %dec_label_pc_ff3a ]
  ret i32 %v2_ff60
}

define i32 @function_ff67() local_unnamed_addr {
dec_label_pc_ff67:
  %v0_ff68 = load i32, i32* @eax, align 4
  ret i32 %v0_ff68
}

define i32 @_ZN11CDataStreamlsISt4pairIciEEERS_RKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff6a:
  ret i32 %arg1
}

define i32 @function_ff76(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff76:
  %eax.global-to-local = alloca i32, align 4
  %v0_ff76 = load i32, i32* @ebp, align 4
  %v1_ff76 = add i32 %v0_ff76, 12
  %v2_ff76 = inttoptr i32 %v1_ff76 to i32*
  %v3_ff76 = load i32, i32* %v2_ff76, align 4
  store i32 %v3_ff76, i32* %eax.global-to-local, align 4
  %v2_ff79 = add i32 %v0_ff76, -32
  %v3_ff79 = inttoptr i32 %v2_ff79 to i32*
  store i32 %v3_ff76, i32* %v3_ff79, align 4
  %v4_ff79 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_ff79
}

define i32 @function_ff7d(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff7d:
  %v0_ff7d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_ff82 = load i32, i32* @ebp, align 4
  %v2_ff82 = add i32 %v1_ff82, -12
  %v3_ff82 = inttoptr i32 %v2_ff82 to i32*
  store i32 %v0_ff7d, i32* %v3_ff82, align 4
  %v0_ff87 = load i32, i32* @ebp, align 4
  %v1_ff87 = add i32 %v0_ff87, -28
  %v2_ff87 = inttoptr i32 %v1_ff87 to i32*
  %v3_ffa2 = load i32, i32* %v2_ff87, align 4
  ret i32 %v3_ffa2
}

define i32 @function_ffa3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ffa3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ffaa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ffaa:
  %v2_ffaa = load i32, i32* @eax, align 4
  %v4_ffaa = mul i32 %v2_ffaa, 2
  %v21_ffaa = inttoptr i32 %v2_ffaa to i32*
  store i32 %v4_ffaa, i32* %v21_ffaa, align 4
  %v0_ffad = load i32, i32* @ebp, align 4
  %v1_ffad = add i32 %v0_ffad, -28
  %v2_ffad = inttoptr i32 %v1_ffad to i32*
  %v3_ffad = load i32, i32* %v2_ffad, align 4
  store i32 %v3_ffad, i32* @eax, align 4
  %v1_ffb0 = add i32 %v0_ffad, -12
  %v2_ffb0 = inttoptr i32 %v1_ffb0 to i32*
  %v3_ffb0 = load i32, i32* %v2_ffb0, align 4
  %v1_ffb3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_ffb3 = icmp eq i32 %v1_ffb3, %v3_ffb0
  br i1 %v3_ffb3, label %bb, label %dec_label_pc_ffbc

bb:                                               ; preds = %dec_label_pc_ffaa
  %v1_ffba = call i32 @function_ffc1()
  br label %dec_label_pc_ffbc

dec_label_pc_ffbc:                                ; preds = %bb, %dec_label_pc_ffaa
  %v2_ffba = phi i32 [ %v1_ffba, %bb ], [ %v3_ffad, %dec_label_pc_ffaa ]
  ret i32 %v2_ffba

; uselistorder directives
  uselistorder i32 %v2_ffaa, { 1, 0 }
}

define i32 @function_ffc1() local_unnamed_addr {
dec_label_pc_ffc1:
  %v0_ffc2 = load i32, i32* @eax, align 4
  ret i32 %v0_ffc2
}

define i32 @_ZN11CDataStreamrsI14CBlockFileInfoEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ffc4:
  ret i32 %arg1
}

define i32 @function_ffea(i32 %arg1) local_unnamed_addr {
dec_label_pc_ffea:
  %v0_ffea = load i32, i32* @eax, align 4
  %v1_ffea = add i32 %v0_ffea, 20
  %v2_ffea = inttoptr i32 %v1_ffea to i32*
  %v3_ffea = load i32, i32* %v2_ffea, align 4
  ret i32 %v3_ffea
}

define i32 @function_fff1(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fff2(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff2:
  %v0_fff5 = load i32, i32* @ebp, align 4
  %v1_fff5 = add i32 %v0_fff5, -32
  %v2_fff5 = inttoptr i32 %v1_fff5 to i32*
  %v3_fff5 = load i32, i32* %v2_fff5, align 4
  %v1_fffc = add i32 %v0_fff5, -28
  %v2_fffc = inttoptr i32 %v1_fffc to i32*
  %v3_fffc = load i32, i32* %v2_fffc, align 4
  %v2_10002 = call i32 @unknown_22f68(i32 %v3_fffc, i32 %v3_fff5)
  %v0_10007 = load i32, i32* @ebp, align 4
  %v1_10007 = add i32 %v0_10007, -28
  %v2_10007 = inttoptr i32 %v1_10007 to i32*
  %v3_10007 = load i32, i32* %v2_10007, align 4
  store i32 %v3_10007, i32* @eax, align 4
  %v1_1000a = add i32 %v0_10007, -12
  %v2_1000a = inttoptr i32 %v1_1000a to i32*
  %v3_1000a = load i32, i32* %v2_1000a, align 4
  %v1_1000d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1000d = icmp eq i32 %v1_1000d, %v3_1000a
  br i1 %v3_1000d, label %bb, label %dec_label_pc_10016

bb:                                               ; preds = %dec_label_pc_fff2
  %v1_10014 = call i32 @function_1001b()
  br label %dec_label_pc_10016

dec_label_pc_10016:                               ; preds = %bb, %dec_label_pc_fff2
  %v2_10014 = phi i32 [ %v1_10014, %bb ], [ %v3_10007, %dec_label_pc_fff2 ]
  ret i32 %v2_10014
}

declare i32 @__stack_chk_fail.423(i32, i32, i32, i32, i32) local_unnamed_addr

define i32 @function_1001b() local_unnamed_addr {
dec_label_pc_1001b:
  %v0_1001c = load i32, i32* @eax, align 4
  ret i32 %v0_1001c
}

define i32 @_ZN13CLevelDBBatch5WriteIciEEvRKT_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1001e:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v2_10052 = ptrtoint i32* %stack_var_-88 to i32
  %v3_10058 = call i32 @function_144fa(i32 %v2_10052, i32 2, i32 1020000)
  %v2_1006a = call i32 @unknown_1f56a(i32 %v2_10052, i32 %arg2)
  %v2_1008b = call i32 @unknown_1f5c0(i32 %v2_10052, i32 %arg2)
  %v1_10096 = call i32 @function_1481e(i32 %v2_10052)
  %v1_100ab = call i32 @function_148a6(i32 %v2_10052)
  %v2_100b8 = ptrtoint i32* %stack_var_-32 to i32
  %v3_100be = call i32 @function_17510(i32 %v2_100b8, i32 %v1_100ab, i32 %v1_10096)
  %v2_100d3 = ptrtoint i32* %stack_var_-60 to i32
  %v3_100d9 = call i32 @function_144fa(i32 %v2_100d3, i32 2, i32 1020000)
  %v2_100eb = call i32 @unknown_2301e(i32 %v2_100d3, i32 %arg3)
  store i32 %v2_100d3, i32* @eax, align 4
  %v2_1010c = call i32 @function_1827c(i32 %v2_100d3, i32 %arg3)
  %v1_10117 = call i32 @function_1481e(i32 %v2_100d3)
  ret i32 %v1_10117

; uselistorder directives
  uselistorder i32 (i32)* @function_1481e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_144fa, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10122(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10122:
  %v2_10122 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10122 = load i32, i32* @eax, align 4
  %v4_10122 = trunc i32 %v3_10122 to i8
  %v5_10122 = add i8 %v4_10122, %v2_10122
  %v21_10122 = inttoptr i32 %v3_10122 to i8*
  store i8 %v5_10122, i8* %v21_10122, align 1
  %v2_10124 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10124 = load i32, i32* @eax, align 4
  %v4_10124 = trunc i32 %v3_10124 to i8
  %v5_10124 = add i8 %v4_10124, %v2_10124
  %v21_10124 = inttoptr i32 %v3_10124 to i8*
  store i8 %v5_10124, i8* %v21_10124, align 1
  %v0_10126 = load i32, i32* @ebp, align 4
  %v1_10126 = add i32 %v0_10126, -56
  %v1_1012c = call i32 @function_148a6(i32 %v1_10126)
  %v0_10131 = load i32, i32* @ebx, align 4
  %v0_10139 = load i32, i32* @ebp, align 4
  %v1_10139 = add i32 %v0_10139, -20
  %v3_1013f = call i32 @function_17510(i32 %v1_10139, i32 %v1_1012c, i32 %v0_10131)
  %v0_10144 = load i32, i32* @ebp, align 4
  %v1_10144 = add i32 %v0_10144, -92
  %v2_10144 = inttoptr i32 %v1_10144 to i32*
  %v3_10144 = load i32, i32* %v2_10144, align 4
  ret i32 %v3_10144
}

define i32 @function_1017d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1017d:
  %v0_1017d = load i1, i1* @zf, align 1
  br i1 %v0_1017d, label %bb, label %dec_label_pc_1017f

bb:                                               ; preds = %dec_label_pc_1017d
  %v1_1017d = call i32 @function_101ac()
  store i32 %v1_1017d, i32* @eax, align 4
  br label %dec_label_pc_1017f

dec_label_pc_1017f:                               ; preds = %bb, %dec_label_pc_1017d
  %v0_1017f = call i32 @function_101a7()
  ret i32 %v0_1017f
}

define i32 @function_10181() local_unnamed_addr {
dec_label_pc_10181:
  %v0_10183 = load i32, i32* @ebp, align 4
  %v1_10183 = add i32 %v0_10183, -56
  store i32 %v1_10183, i32* @eax, align 4
  %v1_10189 = call i32 @function_1467c(i32 %v1_10183)
  ret i32 %v1_10189
}

define i32 @function_10190() local_unnamed_addr {
dec_label_pc_10190:
  %eax.global-to-local = alloca i32, align 4
  %v0_10190 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10190
}

define i32 @function_10194(i32 %arg1) local_unnamed_addr {
dec_label_pc_10194:
  %v2_10194 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_10194 = zext i8 %v2_10194 to i32
  %v4_10194 = load i32, i32* @eax, align 4
  %v5_10194 = and i32 %v4_10194, -256
  %v6_10194 = or i32 %v5_10194, %v3_10194
  store i32 %v6_10194, i32* @eax, align 4
  %v1_10198 = call i32 @function_1467c(i32 %v6_10194)
  %v0_1019d = load i32, i32* @ebx, align 4
  ret i32 %v0_1019d
}

define i32 @function_101a7() local_unnamed_addr {
dec_label_pc_101a7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_101ac() local_unnamed_addr {
dec_label_pc_101ac:
  %v0_101b1 = load i32, i32* @eax, align 4
  ret i32 %v0_101b1
}

define i32 @_ZN13CLevelDBBatch5WriteIccEEvRKT_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_101b2:
  %v0_101cb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_101cb
}

define i32 @function_101d2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_101d2:
  %v0_101d2 = load i32, i32* @ebp, align 4
  %v1_101d2 = add i32 %v0_101d2, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_101d2, i32* @ebp, align 4
  %v1_101e6 = add i32 %v0_101d2, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -84)
  %v3_101ec = call i32 @function_1468e(i32 %v1_101e6, i32 2, i32 1020000)
  %v0_101f1 = load i32, i32* @ebp, align 4
  %v1_101f1 = add i32 %v0_101f1, -96
  %v2_101f1 = inttoptr i32 %v1_101f1 to i32*
  %v3_101f1 = load i32, i32* %v2_101f1, align 4
  %v1_101f8 = add i32 %v0_101f1, -84
  %v2_101fe = call i32 @unknown_1f6fe(i32 %v1_101f8, i32 %v3_101f1)
  %v0_10207 = load i32, i32* @ebp, align 4
  %v1_10207 = add i32 %v0_10207, -84
  %v2_1020d = call i32 @function_149f0(i32 %v1_10207, i32 %v2_101fe)
  %v0_10212 = load i32, i32* @ebp, align 4
  %v1_10219 = add i32 %v0_10212, -84
  ret i32 %v1_10219
}

define i32 @function_101f7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_101f7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1021c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1021c:
  %v0_1021c = load i32, i32* @eax, align 4
  %v1_1021f = call i32 @unknown_1f754(i32 %v0_1021c)
  %v0_10224 = load i32, i32* @ebp, align 4
  %v1_10224 = add i32 %v0_10224, -84
  store i32 %v1_10224, i32* @eax, align 4
  %v1_1022a = call i32 @function_149b2(i32 %v1_10224)
  store i32 %v1_1022a, i32* @ebx, align 4
  %v0_10239 = load i32, i32* @ebp, align 4
  %v1_10239 = add i32 %v0_10239, -84
  store i32 %v1_10239, i32* @eax, align 4
  %v2_1023f = call i32 @function_14a3a(i32 %v1_10239, i32 0)
  %v0_10244 = load i32, i32* @ebx, align 4
  %v0_1024c = load i32, i32* @ebp, align 4
  %v1_1024c = add i32 %v0_1024c, -28
  store i32 %v1_1024c, i32* @eax, align 4
  %v3_10252 = call i32 @function_176a4(i32 %v1_1024c, i32 %v2_1023f, i32 %v0_10244)
  %v0_10267 = load i32, i32* @ebp, align 4
  %v1_10267 = add i32 %v0_10267, -56
  %v3_1026d = call i32 @function_1468e(i32 %v1_10267, i32 2, i32 1020000)
  %v0_10272 = load i32, i32* @ebp, align 4
  %v1_10272 = add i32 %v0_10272, -100
  %v2_10272 = inttoptr i32 %v1_10272 to i32*
  %v3_10272 = load i32, i32* %v2_10272, align 4
  %v1_10279 = add i32 %v0_10272, -56
  %v2_1027f = call i32 @unknown_1f6fe(i32 %v1_10279, i32 %v3_10272)
  %v0_10288 = load i32, i32* @ebp, align 4
  %v1_10288 = add i32 %v0_10288, -56
  %v2_1028e = call i32 @function_149f0(i32 %v1_10288, i32 %v2_1027f)
  %v0_10293 = load i32, i32* @ebp, align 4
  %v1_1029a = add i32 %v0_10293, -56
  %v1_102a0 = call i32 @unknown_1f754(i32 %v1_1029a)
  %v0_102a5 = load i32, i32* @ebp, align 4
  %v1_102a5 = add i32 %v0_102a5, -56
  store i32 %v1_102a5, i32* @eax, align 4
  %v1_102ab = call i32 @function_149b2(i32 %v1_102a5)
  store i32 %v1_102ab, i32* @ebx, align 4
  %v0_102ba = load i32, i32* @ebp, align 4
  %v1_102ba = add i32 %v0_102ba, -56
  store i32 %v1_102ba, i32* @eax, align 4
  %v2_102c0 = call i32 @function_14a3a(i32 %v1_102ba, i32 0)
  %v0_102c5 = load i32, i32* @ebx, align 4
  %v0_102cd = load i32, i32* @ebp, align 4
  %v1_102cd = add i32 %v0_102cd, -20
  store i32 %v1_102cd, i32* @eax, align 4
  %v3_102d3 = call i32 @function_176a4(i32 %v1_102cd, i32 %v2_102c0, i32 %v0_102c5)
  %v0_102d8 = load i32, i32* @ebp, align 4
  %v1_102d8 = add i32 %v0_102d8, -92
  %v2_102d8 = inttoptr i32 %v1_102d8 to i32*
  %v3_102d8 = load i32, i32* %v2_102d8, align 4
  ret i32 %v3_102d8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_149f0, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1f6fe, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1468e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_176a4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_14a3a, { 1, 0 }
  uselistorder i32 (i32)* @function_149b2, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1f754, { 1, 0 }
}

define i32 @function_10271(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10271:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1028a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1028a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_102d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_102d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_102da(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_102da:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10313(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10313:
  %v0_10313 = call i32 @function_1033b()
  ret i32 %v0_10313
}

define i32 @function_10315() local_unnamed_addr {
dec_label_pc_10315:
  %eax.global-to-local = alloca i32, align 4
  %v0_10315 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_10315, i32* @ebx, align 4
  %v0_10317 = load i32, i32* @ebp, align 4
  %v1_10317 = add i32 %v0_10317, -56
  store i32 %v1_10317, i32* @eax, align 4
  %v1_1031d = call i32 @function_14810(i32 %v1_10317)
  store i32 %v1_1031d, i32* %eax.global-to-local, align 4
  %v0_10322 = call i32 @function_10326()
  store i32 %v0_10322, i32* %eax.global-to-local, align 4
  ret i32 %v0_10322
}

define i32 @function_10324() local_unnamed_addr {
dec_label_pc_10324:
  %eax.global-to-local = alloca i32, align 4
  %v0_10324 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10324
}

define i32 @function_10326() local_unnamed_addr {
dec_label_pc_10326:
  %v0_10326 = load i32, i32* @ebp, align 4
  %v1_10326 = add i32 %v0_10326, -84
  store i32 %v1_10326, i32* @eax, align 4
  %v1_1032c = call i32 @function_14810(i32 %v1_10326)
  %v0_10331 = load i32, i32* @ebx, align 4
  ret i32 %v0_10331

; uselistorder directives
  uselistorder i32 (i32)* @function_14810, { 1, 0 }
}

define i32 @function_1033b() local_unnamed_addr {
dec_label_pc_1033b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1033e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1033e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1033f() local_unnamed_addr {
dec_label_pc_1033f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1033f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1033f = add i32 %v0_1033f, 1566274756
  %v2_1033f = inttoptr i32 %v1_1033f to i32*
  %v3_1033f = load i32, i32* %v2_1033f, align 4
  %v4_1033f = add i32 %v3_1033f, 1
  store i32 %v4_1033f, i32* %v2_1033f, align 4
  %v0_10345 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10345
}

define i32 @_ZN13CLevelDBBatch5EraseIcEEvRKT_() local_unnamed_addr {
dec_label_pc_10346:
  %eax.global-to-local = alloca i32, align 4
  %v5_10346 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_10346
}

define i32 @function_10348(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10348:
  %v0_1034d = load i32, i32* @ebp, align 4
  %v1_1034d = add i32 %v0_1034d, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_1034d = inttoptr i32 %v1_1034d to i32*
  %v3_1034d = load i32, i32* %v2_1034d, align 4
  %v2_10350 = add i32 %v0_1034d, -60
  %v3_10350 = inttoptr i32 %v2_10350 to i32*
  store i32 %v3_1034d, i32* %v3_10350, align 4
  %v0_10353 = load i32, i32* @ebp, align 4
  %v1_10353 = add i32 %v0_10353, 12
  %v2_10353 = inttoptr i32 %v1_10353 to i32*
  %v3_10353 = load i32, i32* %v2_10353, align 4
  %v2_10356 = add i32 %v0_10353, -64
  %v3_10356 = inttoptr i32 %v2_10356 to i32*
  store i32 %v3_10353, i32* %v3_10356, align 4
  %v0_10359 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1035f = load i32, i32* @ebp, align 4
  %v2_1035f = add i32 %v1_1035f, -12
  %v3_1035f = inttoptr i32 %v2_1035f to i32*
  store i32 %v0_10359, i32* %v3_1035f, align 4
  store i1 false, i1* @cf, align 1
  %v0_10374 = load i32, i32* @ebp, align 4
  %v1_10374 = add i32 %v0_10374, -48
  store i32 %v1_10374, i32* @eax, align 4
  %v3_1037a = call i32 @function_14822(i32 %v1_10374, i32 2, i32 1020000)
  %v0_1037f = load i32, i32* @ebp, align 4
  %v1_1037f = add i32 %v0_1037f, -64
  %v2_1037f = inttoptr i32 %v1_1037f to i32*
  %v3_1037f = load i32, i32* %v2_1037f, align 4
  %v1_10386 = add i32 %v0_1037f, -48
  %v2_1038c = call i32 @unknown_1f892(i32 %v1_10386, i32 %v3_1037f)
  %v0_10395 = load i32, i32* @ebp, align 4
  %v1_10395 = add i32 %v0_10395, -48
  store i32 %v1_10395, i32* @eax, align 4
  %v2_1039b = call i32 @function_14b84(i32 %v1_10395, i32 %v2_1038c)
  %v0_103a0 = load i32, i32* @ebp, align 4
  %v1_103a0 = add i32 %v0_103a0, -64
  %v2_103a0 = inttoptr i32 %v1_103a0 to i32*
  %v3_103a0 = load i32, i32* %v2_103a0, align 4
  %v1_103a7 = add i32 %v0_103a0, -48
  %v2_103ad = call i32 @unknown_1f8e8(i32 %v1_103a7, i32 %v3_103a0)
  %v0_103b2 = load i32, i32* @ebp, align 4
  %v1_103b2 = add i32 %v0_103b2, -48
  %v1_103b8 = call i32 @function_14b46(i32 %v1_103b2)
  %v0_103c7 = load i32, i32* @ebp, align 4
  %v1_103c7 = add i32 %v0_103c7, -48
  %v2_103cd = call i32 @function_14bce(i32 %v1_103c7, i32 0)
  %v0_103da = load i32, i32* @ebp, align 4
  %v1_103e5 = add i32 %v0_103da, -60
  %v2_103e5 = inttoptr i32 %v1_103e5 to i32*
  %v3_103e5 = load i32, i32* %v2_103e5, align 4
  ret i32 %v3_103e5
}

define i32 @function_103ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_103ff:
  %v0_103ff = load i32, i32* @ebp, align 4
  %v1_103ff = add i32 %v0_103ff, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_103ff, i32* @ebp, align 4
  %v2_10400 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10400 = load i32, i32* @eax, align 4
  %v4_10400 = trunc i32 %v3_10400 to i8
  %v5_10400 = add i8 %v4_10400, %v2_10400
  %v21_10400 = inttoptr i32 %v3_10400 to i8*
  store i8 %v5_10400, i8* %v21_10400, align 1
  %v0_10402 = load i32, i32* @ebp, align 4
  %v1_10402 = add i32 %v0_10402, -12
  %v2_10402 = inttoptr i32 %v1_10402 to i32*
  %v3_10402 = load i32, i32* %v2_10402, align 4
  %v1_10405 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10405 = xor i32 %v1_10405, %v3_10402
  %v3_10405 = icmp eq i32 %v2_10405, 0
  store i32 %v2_10405, i32* @eax, align 4
  br i1 %v3_10405, label %bb, label %dec_label_pc_1040e

bb:                                               ; preds = %dec_label_pc_103ff
  %v3_1040c = call i32 @function_1042c(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_1040c, i32* @eax, align 4
  br label %dec_label_pc_1040e

dec_label_pc_1040e:                               ; preds = %bb, %dec_label_pc_103ff
  %v0_1040e = call i32 @function_10427()
  ret i32 %v0_1040e

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1042c, { 4, 3, 2, 1, 0 }
}

define i32 @function_10411() local_unnamed_addr {
dec_label_pc_10411:
  %eax.global-to-local = alloca i32, align 4
  %v0_10411 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10411
}

define i32 @function_10427() local_unnamed_addr {
dec_label_pc_10427:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1042c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1042c:
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_10431 = load i32, i32* @eax, align 4
  ret i32 %v0_10431
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_Rcii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10432:
  ret i32 %arg1
}

define i32 @function_10471() local_unnamed_addr {
dec_label_pc_10471:
  %eax.global-to-local = alloca i32, align 4
  %v0_10471 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10471
}

define i32 @function_10473(i32 %arg1) local_unnamed_addr {
dec_label_pc_10473:
  %v2_10473 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10473 = load i32, i32* @eax, align 4
  %v4_10473 = trunc i32 %v3_10473 to i8
  %v5_10473 = add i8 %v4_10473, %v2_10473
  %v21_10473 = inttoptr i32 %v3_10473 to i8*
  store i8 %v5_10473, i8* %v21_10473, align 1
  %v0_10475 = load i32, i32* @ebp, align 4
  %v1_10475 = add i32 %v0_10475, -12
  %v2_10475 = inttoptr i32 %v1_10475 to i32*
  %v3_10475 = load i32, i32* %v2_10475, align 4
  %v1_10478 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10478 = xor i32 %v1_10478, %v3_10475
  %v3_10478 = icmp eq i32 %v2_10478, 0
  store i32 %v2_10478, i32* @eax, align 4
  br i1 %v3_10478, label %bb, label %dec_label_pc_10481

bb:                                               ; preds = %dec_label_pc_10473
  %v1_1047f = call i32 @function_10486()
  br label %dec_label_pc_10481

dec_label_pc_10481:                               ; preds = %bb, %dec_label_pc_10473
  %v2_1047f = phi i32 [ %v1_1047f, %bb ], [ %v2_10478, %dec_label_pc_10473 ]
  ret i32 %v2_1047f
}

define i32 @function_10486() local_unnamed_addr {
dec_label_pc_10486:
  %v0_10487 = load i32, i32* @eax, align 4
  ret i32 %v0_10487
}

define i32 @_Z11UnserializeI11CDataStream6CCoinsEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10488:
  %v8_104cc = call i32 @unknown_234da(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_104dd

bb:                                               ; preds = %dec_label_pc_10488
  %v1_104db = call i32 @function_104e2()
  br label %dec_label_pc_104dd

dec_label_pc_104dd:                               ; preds = %bb, %dec_label_pc_10488
  %v3_104db = phi i32 [ %v1_104db, %bb ], [ 0, %dec_label_pc_10488 ]
  ret i32 %v3_104db

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_104e2() local_unnamed_addr {
dec_label_pc_104e2:
  %v0_104e3 = load i32, i32* @eax, align 4
  ret i32 %v0_104e3
}

define i32 @_Z11UnserializeI11CDataStream7uint256EvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_104e4:
  %v0_10502 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v8_10528 = call i32 @unknown_23904(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v0_10502

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10530(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10530:
  %v0_10530 = load i32, i32* @eax, align 4
  %v1_10530 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10530 = xor i32 %v1_10530, %v0_10530
  store i1 false, i1* @cf, align 1
  %v3_10530 = icmp eq i32 %v2_10530, 0
  store i32 %v2_10530, i32* @eax, align 4
  br i1 %v3_10530, label %bb, label %dec_label_pc_10539

bb:                                               ; preds = %dec_label_pc_10530
  %v1_10537 = call i32 @function_1053e()
  br label %dec_label_pc_10539

dec_label_pc_10539:                               ; preds = %bb, %dec_label_pc_10530
  %v2_10537 = phi i32 [ %v1_10537, %bb ], [ %v2_10530, %dec_label_pc_10530 ]
  ret i32 %v2_10537
}

define i32 @function_1053e() local_unnamed_addr {
dec_label_pc_1053e:
  %v0_1053f = load i32, i32* @eax, align 4
  ret i32 %v0_1053f
}

define i32 @_Z9SerializeI11CHashWriter7CVarIntIiEEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10540:
  %v0_1055e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v8_10584 = call i32 @unknown_239b6(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v0_1055e

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10595() local_unnamed_addr {
dec_label_pc_10595:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10599() local_unnamed_addr {
dec_label_pc_10599:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10599 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10599 = sub i32 %v0_10599, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_10599, i32* %ecx.global-to-local, align 4
  %v0_1059b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1059b
}

define i32 @_Z9SerializeI11CHashWriterEvRT_cii(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1059c:
  %stack_var_-36 = alloca i8, align 1
  store i8 %arg2, i8* %stack_var_-36, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_105eb

bb:                                               ; preds = %dec_label_pc_1059c
  %v4_105a2 = sext i8 %arg2 to i32
  %v2_105cd = ptrtoint i8* %stack_var_-36 to i32
  %v10_105e9 = call i32 @function_105f0(i32 %arg1, i32 %v2_105cd, i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 %arg4, i32 %arg3, i32 %v4_105a2, i32 %arg1)
  br label %dec_label_pc_105eb

dec_label_pc_105eb:                               ; preds = %bb, %dec_label_pc_1059c
  %v11_105e9 = phi i32 [ %v10_105e9, %bb ], [ 0, %dec_label_pc_1059c ]
  ret i32 %v11_105e9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_105f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_105f0:
  %v0_105f1 = load i32, i32* @eax, align 4
  ret i32 %v0_105f1
}

define i32 @_Z9SerializeI11CHashWriter7CVarIntIjEEvRT_RKT0_li() local_unnamed_addr {
dec_label_pc_105f2:
  %eax.global-to-local = alloca i32, align 4
  %v5_105f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_105f2
}

define i32 @function_105f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_105f4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v4_105f7 = load i32, i32* @ecx, align 4
  %v0_105ff = load i32, i32* @ebp, align 4
  %v0_10600 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_10600 = or i32 %v0_10600, 137
  store i32 %v11_10600, i32* %eax.global-to-local, align 4
  %v1_10603 = sub i32 %v4_105f7, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_10605 = add i32 %v0_105ff, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)))
  store i32 %v1_10605, i32* %ebp.global-to-local, align 4
  %v1_10606 = add i32 %v1_10603, 1166793797
  %v2_10606 = inttoptr i32 %v1_10606 to i8*
  %v3_10606 = load i8, i8* %v2_10606, align 1
  %v5_10606 = trunc i32 %v1_10603 to i8
  %v8_10606 = add i8 %v3_10606, %v5_10606
  %v28_10606 = icmp ult i8 %v8_10606, %v3_10606
  store i1 %v28_10606, i1* %cf.global-to-local, align 1
  store i8 %v8_10606, i8* %v2_10606, align 1
  %v0_1060c = load i32, i32* %eax.global-to-local, align 4
  %v1_1060c = trunc i32 %v0_1060c to i8
  %v2_1060c = load i1, i1* %cf.global-to-local, align 1
  %v3_1060c = zext i1 %v2_1060c to i8
  %v4_1060c = add i8 %v1_1060c, -119
  %v5_1060c = add i8 %v4_1060c, %v3_1060c
  %v22_1060c = icmp ule i8 %v5_1060c, %v1_1060c
  %v23_1060c = icmp ugt i8 %v1_1060c, 118
  %v24_1060c = select i1 %v2_1060c, i1 %v22_1060c, i1 %v23_1060c
  %v25_1060c = zext i8 %v5_1060c to i32
  %v27_1060c = and i32 %v0_1060c, -256
  %v28_1060c = or i32 %v25_1060c, %v27_1060c
  store i32 %v28_1060c, i32* %eax.global-to-local, align 4
  %v0_1060e = load i32, i32* %ebp.global-to-local, align 4
  %v1_1060e = add i32 %v0_1060e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1060e, i32* @ebp, align 4
  %v3_10612 = zext i1 %v24_1060c to i8
  %v4_10612 = add i8 %v3_10612, %v5_1060c
  %v19_10612 = icmp ule i8 %v4_10612, %v5_1060c
  %v21_10612 = icmp eq i1 %v24_1060c, %v19_10612
  store i1 %v21_10612, i1* %cf.global-to-local, align 1
  %v22_10612 = zext i8 %v4_10612 to i32
  %v25_10612 = or i32 %v22_10612, %v27_1060c
  store i32 %v25_10612, i32* %eax.global-to-local, align 4
  %v1_10614 = inttoptr i32 %v25_10612 to i8*
  %v2_10614 = load i8, i8* %v1_10614, align 1
  %v5_10614 = add i8 %v2_10614, %v4_10612
  store i8 %v5_10614, i8* %v1_10614, align 1
  %v0_10616 = load i32, i32* %eax.global-to-local, align 4
  %v1_10616 = load i32, i32* @ebp, align 4
  %v2_10616 = add i32 %v1_10616, -12
  %v3_10616 = inttoptr i32 %v2_10616 to i32*
  store i32 %v0_10616, i32* %v3_10616, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1061b = load i32, i32* @ebp, align 4
  %v1_1061b = add i32 %v0_1061b, -40
  %v2_1061b = inttoptr i32 %v1_1061b to i32*
  %v3_1061b = load i32, i32* %v2_1061b, align 4
  store i32 %v3_1061b, i32* %eax.global-to-local, align 4
  %v1_10622 = add i32 %v0_1061b, -36
  %v2_10622 = inttoptr i32 %v1_10622 to i32*
  %v3_10622 = load i32, i32* %v2_10622, align 4
  store i32 %v3_10622, i32* %eax.global-to-local, align 4
  %v1_10629 = add i32 %v0_1061b, -28
  %v2_10629 = inttoptr i32 %v1_10629 to i32*
  %v3_10629 = load i32, i32* %v2_10629, align 4
  store i32 %v3_10629, i32* %eax.global-to-local, align 4
  %v1_10630 = add i32 %v0_1061b, -32
  %v2_10630 = inttoptr i32 %v1_10630 to i32*
  %v3_10630 = load i32, i32* %v2_10630, align 4
  store i32 %v3_10630, i32* %eax.global-to-local, align 4
  %v4_10636 = call i32 @unknown_23aba(i32 %v3_10630, i32 %v3_10629, i32 %v3_10622, i32 %v3_1061b)
  store i32 %v4_10636, i32* %eax.global-to-local, align 4
  %v0_1063b = load i32, i32* @ebp, align 4
  %v1_1063b = add i32 %v0_1063b, -12
  %v2_1063b = inttoptr i32 %v1_1063b to i32*
  %v3_1063b = load i32, i32* %v2_1063b, align 4
  store i32 %v3_1063b, i32* %eax.global-to-local, align 4
  %v1_1063e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1063e = xor i32 %v1_1063e, %v3_1063b
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1063e = icmp eq i32 %v2_1063e, 0
  store i32 %v2_1063e, i32* @eax, align 4
  br i1 %v3_1063e, label %bb, label %dec_label_pc_10647

bb:                                               ; preds = %dec_label_pc_105f4
  %v1_10645 = call i32 @function_1064c()
  store i32 %v1_10645, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10647

dec_label_pc_10647:                               ; preds = %bb, %dec_label_pc_105f4
  %v3_10645 = phi i32 [ %v1_10645, %bb ], [ %v2_1063e, %dec_label_pc_105f4 ]
  ret i32 %v3_10645

; uselistorder directives
  uselistorder i32 %v0_1061b, { 1, 0, 2, 3 }
  uselistorder i8 %v4_10612, { 0, 2, 1 }
  uselistorder i8 %v5_1060c, { 1, 0, 3, 2 }
  uselistorder i8 %v3_10606, { 1, 0 }
  uselistorder i32 %v1_10603, { 1, 0 }
}

define i32 @function_1064c() local_unnamed_addr {
dec_label_pc_1064c:
  %v0_1064d = load i32, i32* @eax, align 4
  ret i32 %v0_1064d
}

define i32 @_Z9SerializeI11CHashWriter6CTxOutEvRT_RKT0_li(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1064e:
  ret i32 %arg2
}

define i32 @function_10662(i32 %arg1) local_unnamed_addr {
dec_label_pc_10662:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_10662 = load i32, i32* @ecx, align 4
  %v1_10662 = add i32 %v0_10662, 1166793797
  %v2_10662 = inttoptr i32 %v1_10662 to i8*
  %v3_10662 = load i8, i8* %v2_10662, align 1
  %v5_10662 = trunc i32 %v0_10662 to i8
  %v6_10662 = load i1, i1* @cf, align 1
  %v7_10662 = zext i1 %v6_10662 to i8
  %v8_10662 = add i8 %v3_10662, %v5_10662
  %v9_10662 = add i8 %v7_10662, %v8_10662
  %v27_10662 = icmp ule i8 %v9_10662, %v3_10662
  %v28_10662 = icmp ult i8 %v8_10662, %v3_10662
  %v29_10662 = select i1 %v6_10662, i1 %v27_10662, i1 %v28_10662
  store i1 %v29_10662, i1* %cf.global-to-local, align 1
  store i8 %v9_10662, i8* %v2_10662, align 1
  %v0_10668 = load i32, i32* @eax, align 4
  %v1_10668 = trunc i32 %v0_10668 to i8
  %v2_10668 = load i1, i1* %cf.global-to-local, align 1
  %v3_10668 = zext i1 %v2_10668 to i8
  %v4_10668 = add i8 %v1_10668, -119
  %v5_10668 = add i8 %v4_10668, %v3_10668
  %v22_10668 = icmp ule i8 %v5_10668, %v1_10668
  %v23_10668 = icmp ugt i8 %v1_10668, 118
  %v24_10668 = select i1 %v2_10668, i1 %v22_10668, i1 %v23_10668
  %v25_10668 = zext i8 %v5_10668 to i32
  %v27_10668 = and i32 %v0_10668, -256
  %v28_10668 = or i32 %v25_10668, %v27_10668
  store i32 %v28_10668, i32* %eax.global-to-local, align 4
  %v0_1066a = load i32, i32* @ebp, align 4
  %v1_1066a = add i32 %v0_1066a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1066a, i32* @ebp, align 4
  %v3_1066e = zext i1 %v24_10668 to i8
  %v4_1066e = add i8 %v3_1066e, %v5_10668
  %v19_1066e = icmp ule i8 %v4_1066e, %v5_10668
  %v21_1066e = icmp eq i1 %v24_10668, %v19_1066e
  store i1 %v21_1066e, i1* %cf.global-to-local, align 1
  %v22_1066e = zext i8 %v4_1066e to i32
  %v25_1066e = or i32 %v22_1066e, %v27_10668
  store i32 %v25_1066e, i32* %eax.global-to-local, align 4
  %v1_10670 = inttoptr i32 %v25_1066e to i8*
  %v2_10670 = load i8, i8* %v1_10670, align 1
  %v5_10670 = add i8 %v2_10670, %v4_1066e
  store i8 %v5_10670, i8* %v1_10670, align 1
  %v0_10672 = load i32, i32* %eax.global-to-local, align 4
  %v1_10672 = load i32, i32* @ebp, align 4
  %v2_10672 = add i32 %v1_10672, -12
  %v3_10672 = inttoptr i32 %v2_10672 to i32*
  store i32 %v0_10672, i32* %v3_10672, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_10677 = load i32, i32* @ebp, align 4
  %v1_10677 = add i32 %v0_10677, -40
  %v2_10677 = inttoptr i32 %v1_10677 to i32*
  %v3_10677 = load i32, i32* %v2_10677, align 4
  store i32 %v3_10677, i32* %eax.global-to-local, align 4
  %v1_1067e = add i32 %v0_10677, -36
  %v2_1067e = inttoptr i32 %v1_1067e to i32*
  %v3_1067e = load i32, i32* %v2_1067e, align 4
  store i32 %v3_1067e, i32* %eax.global-to-local, align 4
  %v1_10685 = add i32 %v0_10677, -28
  %v2_10685 = inttoptr i32 %v1_10685 to i32*
  %v3_10685 = load i32, i32* %v2_10685, align 4
  store i32 %v3_10685, i32* %eax.global-to-local, align 4
  %v1_1068c = add i32 %v0_10677, -32
  %v2_1068c = inttoptr i32 %v1_1068c to i32*
  %v3_1068c = load i32, i32* %v2_1068c, align 4
  store i32 %v3_1068c, i32* %eax.global-to-local, align 4
  %v4_10692 = call i32 @unknown_23b68(i32 %v3_1068c, i32 %v3_10685, i32 %v3_1067e, i32 %v3_10677)
  store i32 %v4_10692, i32* %eax.global-to-local, align 4
  %v0_10697 = load i32, i32* @ebp, align 4
  %v1_10697 = add i32 %v0_10697, -12
  %v2_10697 = inttoptr i32 %v1_10697 to i32*
  %v3_10697 = load i32, i32* %v2_10697, align 4
  store i32 %v3_10697, i32* %eax.global-to-local, align 4
  ret i32 %v3_10697

; uselistorder directives
  uselistorder i32 %v0_10677, { 1, 0, 2, 3 }
  uselistorder i8 %v4_1066e, { 0, 2, 1 }
  uselistorder i8 %v5_10668, { 1, 0, 3, 2 }
  uselistorder i8 %v9_10662, { 1, 0 }
  uselistorder i8 %v8_10662, { 1, 0 }
}

define i32 @function_106a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106a0:
  %v0_106a0 = load i32, i32* @ebp, align 4
  %v1_106a0 = load i32, i32* @eax, align 4
  %v2_106a0 = mul i32 %v1_106a0, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_106a0 = add i32 %v0_106a0, -24
  %v4_106a0 = add i32 %v3_106a0, %v2_106a0
  %v5_106a0 = inttoptr i32 %v4_106a0 to i8*
  %v6_106a0 = load i8, i8* %v5_106a0, align 1
  %v7_106a0 = load i32, i32* @edx, align 4
  %v8_106a0 = lshr i32 %v7_106a0, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_106a0 = trunc i32 %v8_106a0 to i8
  %v10_106a0 = add i8 %v9_106a0, %v6_106a0
  store i8 %v10_106a0, i8* %v5_106a0, align 1
  %v31_106a0 = load i32, i32* @eax, align 4
  ret i32 %v31_106a0
}

define i32 @function_106a7() local_unnamed_addr {
dec_label_pc_106a7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_106a7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_106a7 = sub i32 %v0_106a7, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_106a7, i32* %ecx.global-to-local, align 4
  %v0_106a9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_106a9
}

define i32 @_ZN11CDataStreamrsI10CDiskTxPosEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106aa:
  ret i32 %arg1
}

define i32 @function_106ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106ea:
  %v0_106ea = load i32, i32* @eax, align 4
  %v1_106ea = xor i32 %v0_106ea, 1166737409
  store i32 %v1_106ea, i32* @eax, align 4
  %v0_106f3 = load i32, i32* @edx, align 4
  %v1_106f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_106f3 = icmp eq i32 %v1_106f3, %v0_106f3
  br i1 %v3_106f3, label %bb, label %dec_label_pc_106fc

bb:                                               ; preds = %dec_label_pc_106ea
  %v1_106fa = call i32 @function_10701()
  br label %dec_label_pc_106fc

dec_label_pc_106fc:                               ; preds = %bb, %dec_label_pc_106ea
  %v2_106fa = phi i32 [ %v1_106fa, %bb ], [ %v1_106ea, %dec_label_pc_106ea ]
  ret i32 %v2_106fa
}

define i32 @function_10701() local_unnamed_addr {
dec_label_pc_10701:
  %v0_10702 = load i32, i32* @eax, align 4
  ret i32 %v0_10702
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEEC1ERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10704:
  ret i32 %arg2
}

define i32 @function_10715(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10715:
  %v0_10715 = load i32, i32* @ecx, align 4
  %v1_10715 = sub i32 %v0_10715, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_10715, i32* @ecx, align 4
  %v2_10715 = icmp eq i32 %v1_10715, 0
  %v3_10715 = load i1, i1* @zf, align 1
  %v4_10715 = or i1 %v2_10715, %v3_10715
  br i1 %v4_10715, label %dec_label_pc_10717, label %bb

bb:                                               ; preds = %dec_label_pc_10715
  %v6_10715 = call i32 @function_1077c()
  br label %dec_label_pc_10717

dec_label_pc_10717:                               ; preds = %dec_label_pc_10715, %bb
  %v0_10717 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1071c = load i32, i32* @ebp, align 4
  %v2_1071c = add i32 %v1_1071c, -12
  %v3_1071c = inttoptr i32 %v2_1071c to i32*
  store i32 %v0_10717, i32* %v3_1071c, align 4
  %v0_10721 = load i32, i32* @ebp, align 4
  %v1_10721 = add i32 %v0_10721, -32
  %v2_10721 = inttoptr i32 %v1_10721 to i32*
  %v3_10721 = load i32, i32* %v2_10721, align 4
  %v1_10724 = inttoptr i32 %v3_10721 to i32*
  %v2_10724 = load i32, i32* %v1_10724, align 4
  %v1_10726 = add i32 %v0_10721, -28
  %v2_10726 = inttoptr i32 %v1_10726 to i32*
  %v3_10726 = load i32, i32* %v2_10726, align 4
  %v2_10729 = inttoptr i32 %v3_10726 to i32*
  store i32 %v2_10724, i32* %v2_10729, align 4
  %v0_1072b = load i32, i32* @ebp, align 4
  %v1_1072b = add i32 %v0_1072b, -12
  %v2_1072b = inttoptr i32 %v1_1072b to i32*
  %v3_1072b = load i32, i32* %v2_1072b, align 4
  %v1_1072e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1072e = xor i32 %v1_1072e, %v3_1072b
  %v3_1072e = icmp eq i32 %v2_1072e, 0
  store i32 %v2_1072e, i32* @eax, align 4
  br i1 %v3_1072e, label %bb2, label %dec_label_pc_10737

bb2:                                              ; preds = %dec_label_pc_10717
  %v1_10735 = call i32 @function_1073c()
  br label %dec_label_pc_10737

dec_label_pc_10737:                               ; preds = %bb2, %dec_label_pc_10717
  %v2_10735 = phi i32 [ %v1_10735, %bb2 ], [ %v2_1072e, %dec_label_pc_10717 ]
  ret i32 %v2_10735

; uselistorder directives
  uselistorder label %dec_label_pc_10717, { 1, 0 }
}

define i32 @function_1073c() local_unnamed_addr {
dec_label_pc_1073c:
  %v0_1073d = load i32, i32* @eax, align 4
  ret i32 %v0_1073d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairI7uint25610CDiskTxPosESt6vectorIS4_SaIS4_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1073e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10764

bb:                                               ; preds = %dec_label_pc_1073e
  %v2_10762 = call i32 @function_10769(i32 %arg1)
  br label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %bb, %dec_label_pc_1073e
  %v3_10762 = phi i32 [ %v2_10762, %bb ], [ %arg1, %dec_label_pc_1073e ]
  ret i32 %v3_10762
}

define i32 @function_10769(i32 %arg1) local_unnamed_addr {
dec_label_pc_10769:
  %v0_1076a = load i32, i32* @eax, align 4
  ret i32 %v0_1076a
}

define i32 @_ZN11CDataStream16GetSerializeSizeI10CDiskTxPosEEjRKT_() local_unnamed_addr {
dec_label_pc_1076c:
  %eax.global-to-local = alloca i32, align 4
  %v2_1076d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1076d
}

define i32 @function_10771(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10771:
  %v0_10779 = load i32, i32* @ebp, align 4
  %v1_10779 = add i32 %v0_10779, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_10779, i32* @ebp, align 4
  %v0_1077a = load i32, i32* @eax, align 4
  %v11_1077a = or i32 %v0_1077a, 137
  ret i32 %v11_1077a
}

define i32 @function_1077c() local_unnamed_addr {
dec_label_pc_1077c:
  %v0_1077c = load i32, i32* @ebp, align 4
  %v1_1077c = add i32 %v0_1077c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1077c, i32* @ebp, align 4
  %v0_1077f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10784 = add i32 %v0_1077c, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12)
  %v3_10784 = inttoptr i32 %v2_10784 to i32*
  store i32 %v0_1077f, i32* %v3_10784, align 4
  %v0_10789 = load i32, i32* @ebp, align 4
  %v1_10789 = add i32 %v0_10789, -28
  %v2_10789 = inttoptr i32 %v1_10789 to i32*
  %v3_10789 = load i32, i32* %v2_10789, align 4
  %v1_1078c = add i32 %v3_10789, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1078c = inttoptr i32 %v1_1078c to i32*
  %v3_1078c = load i32, i32* %v2_1078c, align 4
  %v1_10792 = add i32 %v3_10789, 20
  %v2_10792 = inttoptr i32 %v1_10792 to i32*
  %v3_10792 = load i32, i32* %v2_10792, align 4
  %v1_1079d = add i32 %v0_10789, -32
  %v2_1079d = inttoptr i32 %v1_1079d to i32*
  %v3_1079d = load i32, i32* %v2_1079d, align 4
  %v3_107a3 = call i32 @unknown_23d87(i32 %v3_1079d, i32 %v3_10792, i32 %v3_1078c)
  store i32 %v3_107a3, i32* @eax, align 4
  %v0_107a8 = load i32, i32* @ebp, align 4
  %v1_107a8 = add i32 %v0_107a8, -12
  %v2_107a8 = inttoptr i32 %v1_107a8 to i32*
  %v3_107a8 = load i32, i32* %v2_107a8, align 4
  %v1_107ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_107ab = icmp eq i32 %v1_107ab, %v3_107a8
  br i1 %v3_107ab, label %bb, label %dec_label_pc_107b4

bb:                                               ; preds = %dec_label_pc_1077c
  %v1_107b2 = call i32 @function_107b9()
  br label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %bb, %dec_label_pc_1077c
  %v3_107b2 = phi i32 [ %v1_107b2, %bb ], [ %v3_107a3, %dec_label_pc_1077c ]
  ret i32 %v3_107b2
}

define i32 @function_107b9() local_unnamed_addr {
dec_label_pc_107b9:
  %v0_107ba = load i32, i32* @eax, align 4
  ret i32 %v0_107ba
}

define i32 @_ZN11CDataStreamlsI10CDiskTxPosEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_107bc:
  ret i32 %arg1
}

define i32 @function_107e3() local_unnamed_addr {
dec_label_pc_107e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_107e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_107e3 = add i32 %v0_107e3, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_107e3, i32* %eax.global-to-local, align 4
  ret i32 %v1_107e3
}

define i32 @function_107fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_107fe:
  %v0_107fe = load i32, i32* @ebx, align 4
  %v1_107fe = add i32 %v0_107fe, 1435231301
  %v2_107fe = inttoptr i32 %v1_107fe to i8*
  %v3_107fe = load i8, i8* %v2_107fe, align 1
  %v4_107fe = load i32, i32* @ecx, align 4
  %v5_107fe = trunc i32 %v4_107fe to i8
  %v6_107fe = add i8 %v5_107fe, %v3_107fe
  store i8 %v6_107fe, i8* %v2_107fe, align 1
  %v0_10805 = load i32, i32* @edx, align 4
  %v1_10805 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10805 = icmp eq i32 %v1_10805, %v0_10805
  br i1 %v3_10805, label %bb, label %dec_label_pc_107fe.dec_label_pc_1080e_crit_edge

dec_label_pc_107fe.dec_label_pc_1080e_crit_edge:  ; preds = %dec_label_pc_107fe
  %v2_1080c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1080e

bb:                                               ; preds = %dec_label_pc_107fe
  %v1_1080c = call i32 @function_10813()
  br label %dec_label_pc_1080e

dec_label_pc_1080e:                               ; preds = %dec_label_pc_107fe.dec_label_pc_1080e_crit_edge, %bb
  %v2_1080c = phi i32 [ %v2_1080c.pre, %dec_label_pc_107fe.dec_label_pc_1080e_crit_edge ], [ %v1_1080c, %bb ]
  ret i32 %v2_1080c

; uselistorder directives
  uselistorder label %dec_label_pc_1080e, { 1, 0 }
}

define i32 @function_10813() local_unnamed_addr {
dec_label_pc_10813:
  %v0_10814 = load i32, i32* @eax, align 4
  ret i32 %v0_10814
}

define i32 @_ZNSt4pairIcSsEC1ERKcRKSs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10816:
  ret i32 %arg3
}

define i32 @function_1082f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1082f:
  %v0_1082f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10834 = load i32, i32* @ebp, align 4
  %v2_10834 = add i32 %v1_10834, -12
  %v3_10834 = inttoptr i32 %v2_10834 to i32*
  store i32 %v0_1082f, i32* %v3_10834, align 4
  %v0_10839 = load i32, i32* @ebp, align 4
  %v1_10839 = add i32 %v0_10839, -32
  %v2_10839 = inttoptr i32 %v1_10839 to i32*
  %v3_10839 = load i32, i32* %v2_10839, align 4
  %v1_1083c = inttoptr i32 %v3_10839 to i8*
  %v2_1083c = load i8, i8* %v1_1083c, align 1
  %v1_1083f = add i32 %v0_10839, -28
  %v2_1083f = inttoptr i32 %v1_1083f to i32*
  %v3_1083f = load i32, i32* %v2_1083f, align 4
  %v3_10842 = inttoptr i32 %v3_1083f to i8*
  store i8 %v2_1083c, i8* %v3_10842, align 1
  %v0_10844 = load i32, i32* @ebp, align 4
  %v1_1084a = add i32 %v0_10844, -36
  %v2_1084a = inttoptr i32 %v1_1084a to i32*
  %v3_1084a = load i32, i32* %v2_1084a, align 4
  ret i32 %v3_1084a
}

define i32 @function_10830(i32 %arg1) local_unnamed_addr {
dec_label_pc_10830:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10854(i32 %arg1) local_unnamed_addr {
dec_label_pc_10854:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1085c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1085c:
  %v0_1085c = load i32, i32* @eax, align 4
  %v1_1085c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1085c = xor i32 %v1_1085c, %v0_1085c
  %v3_1085c = icmp eq i32 %v2_1085c, 0
  store i32 %v2_1085c, i32* @eax, align 4
  br i1 %v3_1085c, label %bb, label %dec_label_pc_10865

bb:                                               ; preds = %dec_label_pc_1085c
  %v1_10863 = call i32 @function_1086a()
  br label %dec_label_pc_10865

dec_label_pc_10865:                               ; preds = %bb, %dec_label_pc_1085c
  %v2_10863 = phi i32 [ %v1_10863, %bb ], [ %v2_1085c, %dec_label_pc_1085c ]
  ret i32 %v2_10863
}

define i32 @function_1086a() local_unnamed_addr {
dec_label_pc_1086a:
  %v0_1086b = load i32, i32* @eax, align 4
  ret i32 %v0_1086b
}

define i32 @_ZN13CLevelDBBatch5WriteISt4pairIcSsEcEEvRKT_RKT0_() local_unnamed_addr {
dec_label_pc_1086c:
  %eax.global-to-local = alloca i32, align 4
  %v5_1086c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_1086c
}

define i32 @function_1086d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1086d:
  ret i32 0
}

define i32 @function_10892(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10892:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_10892 = load i32, i32* @eax, align 4
  %v11_10892 = and i32 %v0_10892, or (i32 zext (i8 ptrtoint (i32* @global_var_8.1178 to i8) to i32), i32 -256)
  store i32 %v11_10892, i32* %eax.global-to-local, align 4
  %v0_10894 = load i32, i32* @esp, align 4
  %v8_10894 = add i32 %v0_10894, add (i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)), i32 sub (i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32))))))), i32 -8)
  %v16_10894 = load i32, i32* @ebx, align 4
  %v18_10894 = ptrtoint i32* %stack_var_0 to i32
  %v22_10894 = load i32, i32* @esi, align 4
  %v23_10894 = inttoptr i32 %v8_10894 to i32*
  %v24_10894 = load i32, i32* @edi, align 4
  store i32 %v24_10894, i32* %v23_10894, align 4
  %v0_1089a = load i32, i32* %eax.global-to-local, align 4
  %v1_1089a = trunc i32 %v0_1089a to i8
  %v2_1089a = and i8 %v1_1089a, ptrtoint (i8** @global_var_4.1177 to i8)
  %v8_1089a = zext i8 %v2_1089a to i32
  %v10_1089a = and i32 %v0_1089a, -256
  %v11_1089a = or i32 %v8_1089a, %v10_1089a
  store i32 %v11_1089a, i32* %eax.global-to-local, align 4
  %v3_1089c = inttoptr i32 %v11_1089a to i8*
  %v4_1089c = load i8, i8* %v3_1089c, align 4
  %v5_1089c = add i8 %v4_1089c, %v2_1089a
  %v20_1089c = zext i8 %v5_1089c to i32
  %v23_1089c = or i32 %v20_1089c, %v10_1089a
  store i32 %v23_1089c, i32* %eax.global-to-local, align 4
  %v1_1089e = inttoptr i32 %v23_1089c to i8*
  %v2_1089e = load i8, i8* %v1_1089e, align 1
  %v5_1089e = add i8 %v2_1089e, %v5_1089c
  store i8 %v5_1089e, i8* %v1_1089e, align 1
  %v0_108a0 = load i32, i32* @ebp, align 4
  %v1_108a0 = add i32 %v0_108a0, -84
  store i32 %v1_108a0, i32* @eax, align 4
  %v1_108a3 = load i32, i32* @esp, align 4
  %v2_108a3 = inttoptr i32 %v1_108a3 to i32*
  store i32 %v1_108a0, i32* %v2_108a3, align 4
  %v3_108a6 = call i32 @function_14d48(i32 %v22_10894, i32 %v18_10894, i32 %v16_10894)
  store i32 %v3_108a6, i32* %eax.global-to-local, align 4
  %v0_108ab = load i32, i32* @ebp, align 4
  %v1_108ab = add i32 %v0_108ab, -96
  %v2_108ab = inttoptr i32 %v1_108ab to i32*
  %v3_108ab = load i32, i32* %v2_108ab, align 4
  %v1_108ae = load i32, i32* @esp, align 4
  %v2_108ae = add i32 %v1_108ae, 4
  %v3_108ae = inttoptr i32 %v2_108ae to i32*
  store i32 %v3_108ab, i32* %v3_108ae, align 4
  %v0_108b2 = load i32, i32* @ebp, align 4
  %v1_108b2 = add i32 %v0_108b2, -84
  store i32 %v1_108b2, i32* %eax.global-to-local, align 4
  %v1_108b5 = load i32, i32* @esp, align 4
  %v2_108b5 = inttoptr i32 %v1_108b5 to i32*
  store i32 %v1_108b2, i32* %v2_108b5, align 4
  %v0_108b8 = call i32 @unknown_2126c()
  %v1_108bd = load i32, i32* @esp, align 4
  %v2_108bd = add i32 %v1_108bd, 4
  %v3_108bd = inttoptr i32 %v2_108bd to i32*
  store i32 %v0_108b8, i32* %v3_108bd, align 4
  %v0_108c1 = load i32, i32* @ebp, align 4
  %v1_108c1 = add i32 %v0_108c1, -84
  store i32 %v1_108c1, i32* @eax, align 4
  %v1_108c4 = load i32, i32* @esp, align 4
  %v2_108c4 = inttoptr i32 %v1_108c4 to i32*
  store i32 %v1_108c1, i32* %v2_108c4, align 4
  %v1_108c7 = load i32, i32* %stack_var_0, align 4
  %v2_108c7 = call i32 @function_150aa(i32 %v11_10892, i32 %v1_108c7)
  store i32 %v2_108c7, i32* %eax.global-to-local, align 4
  %v0_108cc = load i32, i32* @ebp, align 4
  %v1_108cc = add i32 %v0_108cc, -96
  %v2_108cc = inttoptr i32 %v1_108cc to i32*
  %v3_108cc = load i32, i32* %v2_108cc, align 4
  store i32 %v3_108cc, i32* %eax.global-to-local, align 4
  %v1_108cf = load i32, i32* @esp, align 4
  %v2_108cf = add i32 %v1_108cf, 4
  %v3_108cf = inttoptr i32 %v2_108cf to i32*
  store i32 %v3_108cc, i32* %v3_108cf, align 4
  %v4_108cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_108cf

; uselistorder directives
  uselistorder i32 %v11_10892, { 1, 0 }
}

define i32 @function_108c9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_108c9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_108d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_108d4:
  %v0_108d4 = load i32, i32* @ebp, align 4
  %v1_108d4 = add i32 %v0_108d4, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_108d4, i32* @ebp, align 4
  %v2_108d5 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_108d5 = zext i8 %v2_108d5 to i32
  %v4_108d5 = load i32, i32* @eax, align 4
  %v5_108d5 = and i32 %v4_108d5, -256
  %v6_108d5 = or i32 %v5_108d5, %v3_108d5
  %v1_108d9 = call i32 @unknown_212bc(i32 %v6_108d5)
  %v0_108de = load i32, i32* @ebp, align 4
  %v1_108de = add i32 %v0_108de, -84
  store i32 %v1_108de, i32* @eax, align 4
  %v1_108e4 = call i32 @function_1506c(i32 %v1_108de)
  store i32 %v1_108e4, i32* @ebx, align 4
  %v0_108f3 = load i32, i32* @ebp, align 4
  %v1_108f3 = add i32 %v0_108f3, -84
  %v2_108f9 = call i32 @function_150f4(i32 %v1_108f3, i32 0)
  %v0_108fe = load i32, i32* @ebx, align 4
  %v0_10906 = load i32, i32* @ebp, align 4
  %v1_10906 = add i32 %v0_10906, -28
  store i32 %v1_10906, i32* @eax, align 4
  %v3_1090c = call i32 @function_17d5e(i32 %v1_10906, i32 %v2_108f9, i32 %v0_108fe)
  %v0_10921 = load i32, i32* @ebp, align 4
  %v1_10921 = add i32 %v0_10921, -56
  store i32 %v1_10921, i32* @eax, align 4
  %v3_10927 = call i32 @function_14d48(i32 %v1_10921, i32 2, i32 1020000)
  %v0_1092c = load i32, i32* @ebp, align 4
  %v1_1092c = add i32 %v0_1092c, -100
  %v2_1092c = inttoptr i32 %v1_1092c to i32*
  %v3_1092c = load i32, i32* %v2_1092c, align 4
  %v1_10933 = add i32 %v0_1092c, -56
  %v2_10939 = call i32 @unknown_1fdb8(i32 %v1_10933, i32 %v3_1092c)
  %v0_10942 = load i32, i32* @ebp, align 4
  %v1_10942 = add i32 %v0_10942, -56
  store i32 %v1_10942, i32* @eax, align 4
  %v2_10948 = call i32 @function_150aa(i32 %v1_10942, i32 %v2_10939)
  %v0_1094d = load i32, i32* @ebp, align 4
  %v1_1094d = add i32 %v0_1094d, -100
  %v2_1094d = inttoptr i32 %v1_1094d to i32*
  %v3_1094d = load i32, i32* %v2_1094d, align 4
  %v1_10954 = add i32 %v0_1094d, -56
  %v2_1095a = call i32 @unknown_1fe0e(i32 %v1_10954, i32 %v3_1094d)
  %v0_1095f = load i32, i32* @ebp, align 4
  %v1_1095f = add i32 %v0_1095f, -56
  store i32 %v1_1095f, i32* @eax, align 4
  %v1_10965 = call i32 @function_1506c(i32 %v1_1095f)
  store i32 %v1_10965, i32* @ebx, align 4
  %v0_10974 = load i32, i32* @ebp, align 4
  %v1_10974 = add i32 %v0_10974, -56
  %v2_1097a = call i32 @function_150f4(i32 %v1_10974, i32 0)
  %v0_1097f = load i32, i32* @ebx, align 4
  %v0_10987 = load i32, i32* @ebp, align 4
  %v1_10987 = add i32 %v0_10987, -20
  store i32 %v1_10987, i32* @eax, align 4
  %v3_1098d = call i32 @function_17d5e(i32 %v1_10987, i32 %v2_1097a, i32 %v0_1097f)
  %v0_10992 = load i32, i32* @ebp, align 4
  %v1_10992 = add i32 %v0_10992, -92
  %v2_10992 = inttoptr i32 %v1_10992 to i32*
  %v3_10992 = load i32, i32* %v2_10992, align 4
  %v1_1099c = add i32 %v0_10992, -28
  store i32 %v1_1099c, i32* @edx, align 4
  ret i32 %v3_10992

; uselistorder directives
  uselistorder i32 1020000, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_17d5e, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_150f4, { 1, 0 }
  uselistorder i32 (i32)* @function_1506c, { 1, 0 }
}

define i32 @function_108dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_108dc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1093f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1093f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_109aa() local_unnamed_addr {
dec_label_pc_109aa:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_109aa = add i32 %tmp91, 76138565
  %v2_109aa = inttoptr i32 %v1_109aa to i32*
  %v3_109aa = load i32, i32* %v2_109aa, align 4
  %v4_109aa = add i32 %v3_109aa, -1
  store i32 %v4_109aa, i32* %v2_109aa, align 4
  %v0_109b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_109b0 = trunc i32 %v0_109b0 to i8
  %v2_109b0 = and i8 %v1_109b0, -24
  %v4_109b2 = add i8 %v2_109b0, 69
  %v25_109b2 = zext i8 %v4_109b2 to i32
  %v27_109b2 = and i32 %v0_109b0, -256
  %v28_109b2 = or i32 %v25_109b2, %v27_109b2
  store i32 %v28_109b2, i32* %eax.global-to-local, align 4
  %v1_109b4 = inttoptr i32 %v28_109b2 to i8*
  %v2_109b4 = load i8, i8* %v1_109b4, align 1
  %v5_109b4 = add i8 %v2_109b4, %v4_109b2
  store i8 %v5_109b4, i8* %v1_109b4, align 1
  %v0_109b6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_109b6 = add i32 %v0_109b6, -84
  store i32 %v1_109b6, i32* %eax.global-to-local, align 4
  %v1_109c1 = add i32 %v0_109b6, -12
  %v2_109c1 = inttoptr i32 %v1_109c1 to i32*
  %v3_109c1 = load i32, i32* %v2_109c1, align 4
  store i32 %v3_109c1, i32* %eax.global-to-local, align 4
  %v1_109c4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_109c4 = xor i32 %v1_109c4, %v3_109c1
  %v3_109c4 = icmp eq i32 %v2_109c4, 0
  store i32 %v2_109c4, i32* @eax, align 4
  br i1 %v3_109c4, label %bb, label %dec_label_pc_109cd

bb:                                               ; preds = %dec_label_pc_109aa
  %v2_109cb = call i32 @function_109fa(i32 %v1_109b6)
  store i32 %v2_109cb, i32* @eax, align 4
  br label %dec_label_pc_109cd

dec_label_pc_109cd:                               ; preds = %bb, %dec_label_pc_109aa
  %v0_109cd = call i32 @function_109f5()
  store i32 %v0_109cd, i32* %eax.global-to-local, align 4
  ret i32 %v0_109cd

; uselistorder directives
  uselistorder i8 -24, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14 }
}

define i32 @function_109cf() local_unnamed_addr {
dec_label_pc_109cf:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_109cf = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_109cf, i32* @ebx, align 4
  %v0_109d1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_109d1 = add i32 %v0_109d1, -56
  store i32 %v1_109d1, i32* %eax.global-to-local, align 4
  %v1_109dc = call i32 @function_109e0(i32 %v1_109d1)
  store i32 %v1_109dc, i32* %eax.global-to-local, align 4
  ret i32 %v1_109dc
}

define i32 @function_109de() local_unnamed_addr {
dec_label_pc_109de:
  %eax.global-to-local = alloca i32, align 4
  %v0_109de = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_109de
}

define i32 @function_109e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_109e0:
  %v0_109eb = load i32, i32* @ebx, align 4
  ret i32 %v0_109eb
}

define i32 @function_109f5() local_unnamed_addr {
dec_label_pc_109f5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_109fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_109fa:
  %v0_109ff = load i32, i32* @eax, align 4
  ret i32 %v0_109ff
}

define i32 @_ZN11CDataStream16GetSerializeSizeISt4pairIcSsEEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10a00:
  %v1_10a20 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_10a20 = inttoptr i32 %v1_10a20 to i32*
  %v3_10a20 = load i32, i32* %v2_10a20, align 4
  %v1_10a26 = add i32 %arg1, 20
  %v2_10a26 = inttoptr i32 %v1_10a26 to i32*
  %v3_10a26 = load i32, i32* %v2_10a26, align 4
  %v3_10a37 = call i32 @unknown_240c6(i32 %arg2, i32 %v3_10a26, i32 %v3_10a20)
  store i32 %v3_10a37, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10a48

bb:                                               ; preds = %dec_label_pc_10a00
  %v1_10a46 = call i32 @function_10a4d()
  br label %dec_label_pc_10a48

dec_label_pc_10a48:                               ; preds = %bb, %dec_label_pc_10a00
  %v2_10a46 = phi i32 [ %v1_10a46, %bb ], [ %v3_10a37, %dec_label_pc_10a00 ]
  ret i32 %v2_10a46

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10a4d() local_unnamed_addr {
dec_label_pc_10a4d:
  %v0_10a4e = load i32, i32* @eax, align 4
  ret i32 %v0_10a4e
}

define i32 @_ZN11CDataStreamlsISt4pairIcSsEEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10a50:
  %v1_10a70 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_10a70 = inttoptr i32 %v1_10a70 to i32*
  %v3_10a70 = load i32, i32* %v2_10a70, align 4
  %v1_10a76 = add i32 %arg1, 20
  %v2_10a76 = inttoptr i32 %v1_10a76 to i32*
  %v3_10a76 = load i32, i32* %v2_10a76, align 4
  %v4_10a8e = call i32 @unknown_24190(i32 %arg1, i32 %arg2, i32 %v3_10a76, i32 %v3_10a70)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_10a96(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10a96:
  %v0_10a96 = load i32, i32* @ebp, align 4
  %v1_10a96 = add i32 %v0_10a96, -12
  %v2_10a96 = inttoptr i32 %v1_10a96 to i32*
  %v3_10a96 = load i32, i32* %v2_10a96, align 4
  %v1_10a99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10a99 = icmp eq i32 %v1_10a99, %v3_10a96
  br i1 %v3_10a99, label %bb, label %dec_label_pc_10a96.dec_label_pc_10aa2_crit_edge

dec_label_pc_10a96.dec_label_pc_10aa2_crit_edge:  ; preds = %dec_label_pc_10a96
  %v2_10aa0.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10aa2

bb:                                               ; preds = %dec_label_pc_10a96
  %v1_10aa0 = call i32 @function_10aa7()
  br label %dec_label_pc_10aa2

dec_label_pc_10aa2:                               ; preds = %dec_label_pc_10a96.dec_label_pc_10aa2_crit_edge, %bb
  %v2_10aa0 = phi i32 [ %v2_10aa0.pre, %dec_label_pc_10a96.dec_label_pc_10aa2_crit_edge ], [ %v1_10aa0, %bb ]
  ret i32 %v2_10aa0

; uselistorder directives
  uselistorder label %dec_label_pc_10aa2, { 1, 0 }
}

define i32 @function_10aa7() local_unnamed_addr {
dec_label_pc_10aa7:
  %v0_10aa8 = load i32, i32* @eax, align 4
  ret i32 %v0_10aa8
}

define i32 @_Z9SerializeI11CDataStreamc7uint256EvRT_RKSt4pairIT0_T1_Eii(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10aa9:
  %v4_10ad2 = ptrtoint i8* %arg2 to i32
  %v2_10ad5 = load i8, i8* %arg2, align 1
  %v3_10ad5 = zext i8 %v2_10ad5 to i32
  %v10_10af3 = call i32 @unknown_2347a(i32 %arg1, i32 %v3_10ad5, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %v4_10ad2, i32 %arg1)
  %v1_10afb = add i32 %v4_10ad2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v5_10b16 = call i32 @unknown_234d0(i32 %arg1, i32 %v1_10afb, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10b27

bb:                                               ; preds = %dec_label_pc_10aa9
  %v1_10b25 = call i32 @function_10b2c()
  br label %dec_label_pc_10b27

dec_label_pc_10b27:                               ; preds = %bb, %dec_label_pc_10aa9
  %v2_10b25 = phi i32 [ %v1_10b25, %bb ], [ 0, %dec_label_pc_10aa9 ]
  ret i32 %v2_10b25

; uselistorder directives
  uselistorder i32 %v4_10ad2, { 1, 0 }
  uselistorder i32 %arg4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_10b2c() local_unnamed_addr {
dec_label_pc_10b2c:
  %v0_10b2d = load i32, i32* @eax, align 4
  ret i32 %v0_10b2d
}

define i32 @_Z11UnserializeI11CDataStream15CDiskBlockIndexEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10b2e:
  %v8_10b72 = call i32 @unknown_242f4(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10b83

bb:                                               ; preds = %dec_label_pc_10b2e
  %v1_10b81 = call i32 @function_10b88()
  br label %dec_label_pc_10b83

dec_label_pc_10b83:                               ; preds = %bb, %dec_label_pc_10b2e
  %v2_10b81 = phi i32 [ %v1_10b81, %bb ], [ 0, %dec_label_pc_10b2e ]
  ret i32 %v2_10b81

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10b88() local_unnamed_addr {
dec_label_pc_10b88:
  %v0_10b89 = load i32, i32* @eax, align 4
  ret i32 %v0_10b89
}

define i32 @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b8a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10bb0

bb:                                               ; preds = %dec_label_pc_10b8a
  %v2_10bae = call i32 @function_10bb5(i32 %arg1)
  br label %dec_label_pc_10bb0

dec_label_pc_10bb0:                               ; preds = %bb, %dec_label_pc_10b8a
  %v3_10bae = phi i32 [ %v2_10bae, %bb ], [ %arg1, %dec_label_pc_10b8a ]
  ret i32 %v3_10bae
}

define i32 @function_10bb5(i32 %arg1) local_unnamed_addr {
dec_label_pc_10bb5:
  %v0_10bb6 = load i32, i32* @eax, align 4
  ret i32 %v0_10bb6
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10bb8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_10bd5 = call i32 @function_187ec(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_10be6 = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_10be6 = inttoptr i32 %v1_10be6 to i32*
  store i32 0, i32* %v2_10be6, align 4
  %v1_10bf0 = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_10bf0 = inttoptr i32 %v1_10bf0 to i32*
  store i32 0, i32* %v2_10bf0, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10c03

bb:                                               ; preds = %dec_label_pc_10bb8
  %v1_10c01 = call i32 @function_10c08()
  br label %dec_label_pc_10c03

dec_label_pc_10c03:                               ; preds = %bb, %dec_label_pc_10bb8
  %v2_10c01 = phi i32 [ %v1_10c01, %bb ], [ 0, %dec_label_pc_10bb8 ]
  ret i32 %v2_10c01

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_10c08() local_unnamed_addr {
dec_label_pc_10c08:
  %v0_10c09 = load i32, i32* @eax, align 4
  ret i32 %v0_10c09
}

define i32 @_ZSt11__addressofIcEPT_RS0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c0a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10c30

bb:                                               ; preds = %dec_label_pc_10c0a
  %v2_10c2e = call i32 @function_10c35(i32 %arg1)
  br label %dec_label_pc_10c30

dec_label_pc_10c30:                               ; preds = %bb, %dec_label_pc_10c0a
  %v4_10c2e = phi i32 [ %v2_10c2e, %bb ], [ %arg1, %dec_label_pc_10c0a ]
  ret i32 %v4_10c2e
}

define i32 @function_10c35(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c35:
  %v0_10c36 = load i32, i32* @eax, align 4
  ret i32 %v0_10c36
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c38:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_10c62 = call i32 @unknown_247e8(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_10c73 = add i32 %tmp103, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_10c73 = inttoptr i32 %v1_10c73 to i32*
  store i32 0, i32* %v2_10c73, align 4
  %v1_10c7d = add i32 %tmp103, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_10c7d = inttoptr i32 %v1_10c7d to i32*
  store i32 0, i32* %v2_10c7d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10c90

bb:                                               ; preds = %dec_label_pc_10c38
  %v1_10c8e = call i32 @function_10c95()
  br label %dec_label_pc_10c90

dec_label_pc_10c90:                               ; preds = %bb, %dec_label_pc_10c38
  %v2_10c8e = phi i32 [ %v1_10c8e, %bb ], [ 0, %dec_label_pc_10c38 ]
  ret i32 %v2_10c8e

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_10c95() local_unnamed_addr {
dec_label_pc_10c95:
  %v0_10c96 = load i32, i32* @eax, align 4
  ret i32 %v0_10c96
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE19_M_range_initializeIPKcEEvT_S6_St20forward_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10c98:
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v2_10ccf = call i32 @unknown_248e9(i32 %arg2, i32 %arg3)
  %v2_10ce4 = call i32 @unknown_219de(i32 %tmp110, i32 %v2_10ccf)
  store i32 %v2_10ce4, i32* %arg1, align 4
  %v5_10cf7 = add i32 %v2_10ce4, %v2_10ccf
  %v2_10cfd = add i32 %tmp110, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_10cfd = inttoptr i32 %v2_10cfd to i32*
  store i32 %v5_10cf7, i32* %v3_10cfd, align 4
  %v1_10d06 = call i32 @unknown_1dec4(i32 %tmp110)
  %v2_10d0e = load i32, i32* %arg1, align 4
  %v4_10d25 = call i32 @unknown_24948(i32 %arg2, i32 %arg3, i32 %v2_10d0e, i32 %v1_10d06)
  %v2_10d2f = add i32 %tmp110, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_10d2f = inttoptr i32 %v2_10d2f to i32*
  store i32 %v4_10d25, i32* %v3_10d2f, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10d3e

bb:                                               ; preds = %dec_label_pc_10c98
  %v1_10d3c = call i32 @function_10d43()
  br label %dec_label_pc_10d3e

dec_label_pc_10d3e:                               ; preds = %bb, %dec_label_pc_10c98
  %v2_10d3c = phi i32 [ %v1_10d3c, %bb ], [ 0, %dec_label_pc_10c98 ]
  ret i32 %v2_10d3c

; uselistorder directives
  uselistorder i32 %tmp110, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10d43() local_unnamed_addr {
dec_label_pc_10d43:
  %v0_10d44 = load i32, i32* @eax, align 4
  ret i32 %v0_10d44
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE11_M_allocateEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d46:
  ret i32 %arg1
}

define i32 @function_10d50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d50:
  %v0_10d50 = load i32, i32* @ebp, align 4
  %v1_10d56 = add i32 %v0_10d50, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_10d56, i32* @ebp, align 4
  %v0_10d59 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10d5e = add i32 %v0_10d50, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12))
  %v3_10d5e = inttoptr i32 %v2_10d5e to i32*
  store i32 %v0_10d59, i32* %v3_10d5e, align 4
  %v0_10d63 = load i32, i32* @ebp, align 4
  %v1_10d63 = add i32 %v0_10d63, -32
  %v2_10d63 = inttoptr i32 %v1_10d63 to i32*
  %v3_10d63 = load i32, i32* %v2_10d63, align 4
  %v10_10d63 = icmp eq i32 %v3_10d63, 0
  br i1 %v10_10d63, label %bb, label %dec_label_pc_10d69

bb:                                               ; preds = %dec_label_pc_10d50
  %v1_10d67 = call i32 @function_10d85()
  %v0_10d69.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_10d69

dec_label_pc_10d69:                               ; preds = %bb, %dec_label_pc_10d50
  %v0_10d69 = phi i32 [ %v0_10d69.pre, %bb ], [ %v0_10d63, %dec_label_pc_10d50 ]
  %v1_10d69 = add i32 %v0_10d69, -28
  %v2_10d69 = inttoptr i32 %v1_10d69 to i32*
  %v3_10d69 = load i32, i32* %v2_10d69, align 4
  ret i32 %v3_10d69
}

define i32 @function_10d6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d6c:
  %v0_10d74 = load i32, i32* @ebp, align 4
  %v1_10d74 = add i32 %v0_10d74, -32
  %v2_10d74 = inttoptr i32 %v1_10d74 to i32*
  %v3_10d74 = load i32, i32* %v2_10d74, align 4
  %v0_10d7b = load i32, i32* @eax, align 4
  %v3_10d7e = call i32 @unknown_24ad2(i32 %v0_10d7b, i32 %v3_10d74, i32 0)
  store i32 %v3_10d7e, i32* @eax, align 4
  %v0_10d83 = call i32 @function_10d8a()
  ret i32 %v0_10d83
}

define i32 @function_10d85() local_unnamed_addr {
dec_label_pc_10d85:
  ret i32 0
}

define i32 @function_10d8a() local_unnamed_addr {
dec_label_pc_10d8a:
  %v0_10d8a = load i32, i32* @ebp, align 4
  %v1_10d8a = add i32 %v0_10d8a, -12
  %v2_10d8a = inttoptr i32 %v1_10d8a to i32*
  %v3_10d8a = load i32, i32* %v2_10d8a, align 4
  %v1_10d8d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10d8d = icmp eq i32 %v1_10d8d, %v3_10d8a
  br i1 %v3_10d8d, label %bb, label %dec_label_pc_10d8a.dec_label_pc_10d96_crit_edge

dec_label_pc_10d8a.dec_label_pc_10d96_crit_edge:  ; preds = %dec_label_pc_10d8a
  %v2_10d94.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10d96

bb:                                               ; preds = %dec_label_pc_10d8a
  %v1_10d94 = call i32 @function_10d9b()
  br label %dec_label_pc_10d96

dec_label_pc_10d96:                               ; preds = %dec_label_pc_10d8a.dec_label_pc_10d96_crit_edge, %bb
  %v2_10d94 = phi i32 [ %v2_10d94.pre, %dec_label_pc_10d8a.dec_label_pc_10d96_crit_edge ], [ %v1_10d94, %bb ]
  ret i32 %v2_10d94

; uselistorder directives
  uselistorder label %dec_label_pc_10d96, { 1, 0 }
}

define i32 @function_10d9b() local_unnamed_addr {
dec_label_pc_10d9b:
  %v0_10d9c = load i32, i32* @eax, align 4
  ret i32 %v0_10d9c
}

define i32 @_ZN9__gnu_cxxneIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESC_() local_unnamed_addr {
dec_label_pc_10d9d:
  %eax.global-to-local = alloca i32, align 4
  %v2_10d9e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_10d9e
}

define i32 @function_10da0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10da0:
  %eax.global-to-local = alloca i32, align 4
  %v0_10da4 = load i32, i32* @ebp, align 4
  %v1_10da4 = add i32 %v0_10da4, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_10da4 = inttoptr i32 %v1_10da4 to i32*
  %v3_10da4 = load i32, i32* %v2_10da4, align 4
  store i32 %v3_10da4, i32* %eax.global-to-local, align 4
  %v2_10da7 = add i32 %v0_10da4, -28
  %v3_10da7 = inttoptr i32 %v2_10da7 to i32*
  store i32 %v3_10da4, i32* %v3_10da7, align 4
  %v0_10daa = load i32, i32* @ebp, align 4
  %v1_10daa = add i32 %v0_10daa, 12
  %v2_10daa = inttoptr i32 %v1_10daa to i32*
  %v3_10daa = load i32, i32* %v2_10daa, align 4
  store i32 %v3_10daa, i32* %eax.global-to-local, align 4
  %v2_10dad = add i32 %v0_10daa, -32
  %v3_10dad = inttoptr i32 %v2_10dad to i32*
  store i32 %v3_10daa, i32* %v3_10dad, align 4
  %v0_10db0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_10db0, i32* %eax.global-to-local, align 4
  %v1_10db6 = load i32, i32* @ebp, align 4
  %v2_10db6 = add i32 %v1_10db6, -12
  %v3_10db6 = inttoptr i32 %v2_10db6 to i32*
  store i32 %v0_10db0, i32* %v3_10db6, align 4
  %v4_10db6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_10db6
}

define i32 @function_10dba(i32 %arg1) local_unnamed_addr {
dec_label_pc_10dba:
  %ebx.global-to-local = alloca i32, align 4
  %v0_10dba = load i32, i32* @ebx, align 4
  %v1_10dba = add i32 %v0_10dba, 76145733
  %v2_10dba = inttoptr i32 %v1_10dba to i8*
  %v3_10dba = load i8, i8* %v2_10dba, align 1
  %v4_10dba = udiv i8 %v3_10dba, 16
  %v5_10dba = mul i8 %v3_10dba, 16
  %v6_10dba = or i8 %v4_10dba, %v5_10dba
  store i8 %v6_10dba, i8* %v2_10dba, align 1
  %v1_10dc1 = call i32 @unknown_24b85(i32 ptrtoint (i32* @0 to i32))
  %v1_10dc6 = inttoptr i32 %v1_10dc1 to i32*
  %v2_10dc6 = load i32, i32* %v1_10dc6, align 4
  store i32 %v2_10dc6, i32* %ebx.global-to-local, align 4
  %v0_10dc8 = load i32, i32* @ebp, align 4
  %v1_10dc8 = add i32 %v0_10dc8, -32
  %v2_10dc8 = inttoptr i32 %v1_10dc8 to i32*
  %v3_10dc8 = load i32, i32* %v2_10dc8, align 4
  %v1_10dce = call i32 @unknown_24b85(i32 %v3_10dc8)
  %v1_10dd3 = inttoptr i32 %v1_10dce to i32*
  %v2_10dd3 = load i32, i32* %v1_10dd3, align 4
  %v0_10dd5 = load i32, i32* %ebx.global-to-local, align 4
  %v12_10dd5 = icmp eq i32 %v0_10dd5, %v2_10dd3
  %v1_10dd7 = icmp eq i1 %v12_10dd5, false
  %v2_10dd7 = zext i1 %v1_10dd7 to i32
  %v4_10dd7 = and i32 %v2_10dd3, -256
  %v5_10dd7 = or i32 %v2_10dd7, %v4_10dd7
  store i32 %v5_10dd7, i32* @eax, align 4
  %v0_10dda = load i32, i32* @ebp, align 4
  %v1_10dda = add i32 %v0_10dda, -12
  %v2_10dda = inttoptr i32 %v1_10dda to i32*
  %v3_10dda = load i32, i32* %v2_10dda, align 4
  %v1_10ddd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10ddd = xor i32 %v1_10ddd, %v3_10dda
  %v3_10ddd = icmp eq i32 %v2_10ddd, 0
  store i32 %v2_10ddd, i32* @edx, align 4
  br i1 %v3_10ddd, label %bb, label %dec_label_pc_10de6

bb:                                               ; preds = %dec_label_pc_10dba
  %v1_10de4 = call i32 @function_10deb()
  br label %dec_label_pc_10de6

dec_label_pc_10de6:                               ; preds = %bb, %dec_label_pc_10dba
  %v2_10de4 = phi i32 [ %v1_10de4, %bb ], [ %v5_10dd7, %dec_label_pc_10dba ]
  ret i32 %v2_10de4

; uselistorder directives
  uselistorder i32 %v2_10dd3, { 1, 0 }
  uselistorder i32 (i32)* @unknown_24b85, { 1, 0 }
  uselistorder i32 76145733, { 1, 0 }
}

define i32 @function_10deb() local_unnamed_addr {
dec_label_pc_10deb:
  %v0_10df0 = load i32, i32* @eax, align 4
  ret i32 %v0_10df0
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEppEv() local_unnamed_addr {
dec_label_pc_10df2:
  %eax.global-to-local = alloca i32, align 4
  %v17_10df5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_10df5
}

define i32 @function_10df8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10df8:
  %v0_10df8 = load i32, i32* @ebp, align 4
  %v1_10df8 = add i32 %v0_10df8, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_10df8 = inttoptr i32 %v1_10df8 to i32*
  %v3_10df8 = load i32, i32* %v2_10df8, align 4
  %v2_10dfb = add i32 %v0_10df8, -28
  %v3_10dfb = inttoptr i32 %v2_10dfb to i32*
  store i32 %v3_10df8, i32* %v3_10dfb, align 4
  %v0_10dfe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_10e04 = load i32, i32* @ebp, align 4
  %v2_10e04 = add i32 %v1_10e04, -12
  %v3_10e04 = inttoptr i32 %v2_10e04 to i32*
  store i32 %v0_10dfe, i32* %v3_10e04, align 4
  %v0_10e09 = load i32, i32* @ebp, align 4
  %v1_10e09 = add i32 %v0_10e09, -28
  %v2_10e09 = inttoptr i32 %v1_10e09 to i32*
  %v3_10e09 = load i32, i32* %v2_10e09, align 4
  %v1_10e0c = inttoptr i32 %v3_10e09 to i32*
  %v2_10e0c = load i32, i32* %v1_10e0c, align 4
  %v1_10e0e = add i32 %v2_10e0c, ptrtoint (i8** @global_var_1.1176 to i32)
  %v2_10e14 = inttoptr i32 %v3_10e09 to i32*
  store i32 %v1_10e0e, i32* %v2_10e14, align 4
  %v0_10e16 = load i32, i32* @ebp, align 4
  %v1_10e16 = add i32 %v0_10e16, -28
  %v2_10e16 = inttoptr i32 %v1_10e16 to i32*
  %v3_10e16 = load i32, i32* %v2_10e16, align 4
  store i32 %v3_10e16, i32* @eax, align 4
  %v1_10e19 = add i32 %v0_10e16, -12
  %v2_10e19 = inttoptr i32 %v1_10e19 to i32*
  %v3_10e19 = load i32, i32* %v2_10e19, align 4
  %v1_10e1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10e1c = icmp eq i32 %v1_10e1c, %v3_10e19
  br i1 %v3_10e1c, label %bb, label %dec_label_pc_10e25

bb:                                               ; preds = %dec_label_pc_10df8
  %v1_10e23 = call i32 @function_10e2a()
  br label %dec_label_pc_10e25

dec_label_pc_10e25:                               ; preds = %bb, %dec_label_pc_10df8
  %v2_10e23 = phi i32 [ %v1_10e23, %bb ], [ %v3_10e16, %dec_label_pc_10df8 ]
  ret i32 %v2_10e23
}

define i32 @function_10e2a() local_unnamed_addr {
dec_label_pc_10e2a:
  %v0_10e2b = load i32, i32* @eax, align 4
  ret i32 %v0_10e2b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e2c:
  %v0_10e38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_10e38
}

define i32 @function_10e42(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e42:
  %v0_10e4b = load i32, i32* @edx, align 4
  %v1_10e4b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10e4b = icmp eq i32 %v1_10e4b, %v0_10e4b
  br i1 %v3_10e4b, label %bb, label %dec_label_pc_10e42.dec_label_pc_10e54_crit_edge

dec_label_pc_10e42.dec_label_pc_10e54_crit_edge:  ; preds = %dec_label_pc_10e42
  %v2_10e52.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10e54

bb:                                               ; preds = %dec_label_pc_10e42
  %v1_10e52 = call i32 @function_10e59()
  br label %dec_label_pc_10e54

dec_label_pc_10e54:                               ; preds = %dec_label_pc_10e42.dec_label_pc_10e54_crit_edge, %bb
  %v2_10e52 = phi i32 [ %v2_10e52.pre, %dec_label_pc_10e42.dec_label_pc_10e54_crit_edge ], [ %v1_10e52, %bb ]
  ret i32 %v2_10e52

; uselistorder directives
  uselistorder label %dec_label_pc_10e54, { 1, 0 }
}

define i32 @function_10e59() local_unnamed_addr {
dec_label_pc_10e59:
  %v0_10e5a = load i32, i32* @eax, align 4
  ret i32 %v0_10e5a
}

define i32 @_ZNSs16_S_construct_auxIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcESt12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_10e5b:
  %edx.global-to-local = alloca i32, align 4
  %v0_10e7a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_10e85 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_10e85, 16777216
  %v8_10e9d = sdiv i32 %sext, 16777216
  %v9_10e9d = sext i8 %arg4 to i32
  %v10_10e9d = call i32 @unknown_24c71(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_10e9d, i32 %v9_10e9d, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v0_10e7a, i32* %edx.global-to-local, align 4
  ret i32 %v10_10e9d

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10eaa() local_unnamed_addr {
dec_label_pc_10eaa:
  %zf.global-to-local = alloca i1, align 1
  %v2_10eaa = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10eaa = load i32, i32* @eax, align 4
  %v4_10eaa = trunc i32 %v3_10eaa to i8
  %v5_10eaa = add i8 %v4_10eaa, %v2_10eaa
  %v15_10eaa = icmp eq i8 %v5_10eaa, 0
  store i1 %v15_10eaa, i1* %zf.global-to-local, align 1
  %v21_10eaa = inttoptr i32 %v3_10eaa to i8*
  store i8 %v5_10eaa, i8* %v21_10eaa, align 1
  %v0_10eac = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_10eac, label %bb, label %dec_label_pc_10eaa.dec_label_pc_10eae_crit_edge

dec_label_pc_10eaa.dec_label_pc_10eae_crit_edge:  ; preds = %dec_label_pc_10eaa
  %v2_10eac.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10eae

bb:                                               ; preds = %dec_label_pc_10eaa
  %v1_10eac = call i32 @function_10eb3()
  br label %dec_label_pc_10eae

dec_label_pc_10eae:                               ; preds = %dec_label_pc_10eaa.dec_label_pc_10eae_crit_edge, %bb
  %v2_10eac = phi i32 [ %v2_10eac.pre, %dec_label_pc_10eaa.dec_label_pc_10eae_crit_edge ], [ %v1_10eac, %bb ]
  ret i32 %v2_10eac

; uselistorder directives
  uselistorder label %dec_label_pc_10eae, { 1, 0 }
}

define i32 @function_10eb3() local_unnamed_addr {
dec_label_pc_10eb3:
  %v0_10eb4 = load i32, i32* @eax, align 4
  ret i32 %v0_10eb4
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv() local_unnamed_addr {
dec_label_pc_10eb6:
  %eax.global-to-local = alloca i32, align 4
  %v17_10eb9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_10eb9
}

define i32 @function_10ebe(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10ebe:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_10ebe = load i32, i32* @ecx, align 4
  %v1_10ebe = add i32 %v0_10ebe, -1587157947
  %v2_10ebe = inttoptr i32 %v1_10ebe to i8*
  %v3_10ebe = load i8, i8* %v2_10ebe, align 1
  %v5_10ebe = trunc i32 %v0_10ebe to i8
  %v6_10ebe = or i8 %v3_10ebe, %v5_10ebe
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_10ebe, i8* %v2_10ebe, align 1
  %v0_10ec4 = load i32, i32* @eax, align 4
  %v1_10ec4 = trunc i32 %v0_10ec4 to i8
  %v2_10ec4 = load i1, i1* %cf.global-to-local, align 1
  %v3_10ec4 = zext i1 %v2_10ec4 to i8
  %v4_10ec4 = add i8 %v3_10ec4, %v1_10ec4
  %v19_10ec4 = icmp ule i8 %v4_10ec4, %v1_10ec4
  %v21_10ec4 = icmp eq i1 %v2_10ec4, %v19_10ec4
  store i1 %v21_10ec4, i1* %cf.global-to-local, align 1
  %v22_10ec4 = zext i8 %v4_10ec4 to i32
  %v24_10ec4 = and i32 %v0_10ec4, -256
  %v25_10ec4 = or i32 %v22_10ec4, %v24_10ec4
  store i32 %v25_10ec4, i32* %eax.global-to-local, align 4
  %v1_10ec6 = inttoptr i32 %v25_10ec4 to i8*
  %v2_10ec6 = load i8, i8* %v1_10ec6, align 1
  %v5_10ec6 = add i8 %v2_10ec6, %v4_10ec4
  store i8 %v5_10ec6, i8* %v1_10ec6, align 1
  %v0_10ec8 = load i32, i32* %eax.global-to-local, align 4
  %v1_10ec8 = load i32, i32* @ebp, align 4
  %v2_10ec8 = add i32 %v1_10ec8, -12
  %v3_10ec8 = inttoptr i32 %v2_10ec8 to i32*
  store i32 %v0_10ec8, i32* %v3_10ec8, align 4
  store i32 -1, i32* @eax, align 4
  %v0_10ed2 = load i32, i32* @ebp, align 4
  %v1_10ed2 = add i32 %v0_10ed2, -12
  %v2_10ed2 = inttoptr i32 %v1_10ed2 to i32*
  %v3_10ed2 = load i32, i32* %v2_10ed2, align 4
  %v1_10ed5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10ed5 = xor i32 %v1_10ed5, %v3_10ed2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_10ed5 = icmp eq i32 %v2_10ed5, 0
  store i32 %v2_10ed5, i32* @edx, align 4
  br i1 %v3_10ed5, label %bb, label %dec_label_pc_10ede

bb:                                               ; preds = %dec_label_pc_10ebe
  %v1_10edc = call i32 @function_10ee3()
  store i32 %v1_10edc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10ede

dec_label_pc_10ede:                               ; preds = %bb, %dec_label_pc_10ebe
  %v2_10edc = phi i32 [ %v1_10edc, %bb ], [ -1, %dec_label_pc_10ebe ]
  ret i32 %v2_10edc

; uselistorder directives
  uselistorder i8 %v4_10ec4, { 0, 2, 1 }
  uselistorder i8 %v1_10ec4, { 1, 0 }
}

define i32 @function_10ee3() local_unnamed_addr {
dec_label_pc_10ee3:
  %v0_10ee4 = load i32, i32* @eax, align 4
  ret i32 %v0_10ee4
}

define i32 @_ZSt22__uninitialized_copy_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10ee5:
  %v15_10f42120 = icmp eq i32 %arg1, %arg2
  %v1_10f45121 = icmp eq i1 %v15_10f42120, false
  %v5_10f48122 = icmp eq i1 %v1_10f45121, false
  %v1_10f4a123 = icmp eq i1 %v5_10f48122, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_10f4a123, label %dec_label_pc_10f16, label %dec_label_pc_10f4c

dec_label_pc_10f16:                               ; preds = %dec_label_pc_10ee5, %dec_label_pc_10f16
  %storemerge.in125 = phi i32 [ %v5_10f3b, %dec_label_pc_10f16 ], [ %arg3, %dec_label_pc_10ee5 ]
  %stack_var_-32.0.in124 = phi i32 [ %v5_10f37, %dec_label_pc_10f16 ], [ %arg1, %dec_label_pc_10ee5 ]
  %v2_10f1c = call i32 @unknown_21aef(i32 %storemerge.in125)
  %v5_10f32 = call i32 @unknown_1e555(i32 %arg4, i32 %v2_10f1c, i32 %stack_var_-32.0.in124)
  %v5_10f37 = add i32 %stack_var_-32.0.in124, ptrtoint (i8** @global_var_1.1176 to i32)
  %v5_10f3b = add i32 %storemerge.in125, ptrtoint (i8** @global_var_1.1176 to i32)
  %v15_10f42 = icmp eq i32 %v5_10f37, %arg2
  %v1_10f45 = icmp eq i1 %v15_10f42, false
  %v5_10f48 = icmp eq i1 %v1_10f45, false
  %v1_10f4a = icmp eq i1 %v5_10f48, false
  store i32 %v5_10f3b, i32* @eax, align 4
  br i1 %v1_10f4a, label %dec_label_pc_10f16, label %dec_label_pc_10f4c

dec_label_pc_10f4c:                               ; preds = %dec_label_pc_10f16, %dec_label_pc_10ee5
  %storemerge.in.lcssa = phi i32 [ %arg3, %dec_label_pc_10ee5 ], [ %v5_10f3b, %dec_label_pc_10f16 ]
  br i1 true, label %bb, label %dec_label_pc_10f5b

bb:                                               ; preds = %dec_label_pc_10f4c
  %v1_10f59 = call i32 @function_10f60()
  br label %dec_label_pc_10f5b

dec_label_pc_10f5b:                               ; preds = %bb, %dec_label_pc_10f4c
  %v2_10f59 = phi i32 [ %v1_10f59, %bb ], [ %storemerge.in.lcssa, %dec_label_pc_10f4c ]
  ret i32 %v2_10f59

; uselistorder directives
  uselistorder i32 %v5_10f3b, { 0, 2, 1 }
  uselistorder i32 %v5_10f37, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.in124, { 1, 0 }
  uselistorder i32 %storemerge.in125, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10f16, { 1, 0 }
}

define i32 @function_10f60() local_unnamed_addr {
dec_label_pc_10f60:
  %v0_10f61 = load i32, i32* @eax, align 4
  ret i32 %v0_10f61
}

define i32 @_ZN25zero_after_free_allocatorIcE10deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10f62:
  ret i32 %arg3
}

define i32 @function_10f7c() local_unnamed_addr {
dec_label_pc_10f7c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_10f7c = load i32, i32* %eax.global-to-local, align 4
  %v1_10f7c = trunc i32 %v0_10f7c to i8
  %v2_10f7c = load i1, i1* %cf.global-to-local, align 1
  %v3_10f7c = zext i1 %v2_10f7c to i8
  %v4_10f7c = add i8 %v3_10f7c, %v1_10f7c
  %v19_10f7c = icmp ule i8 %v4_10f7c, %v1_10f7c
  %v21_10f7c = icmp eq i1 %v2_10f7c, %v19_10f7c
  store i1 %v21_10f7c, i1* %cf.global-to-local, align 1
  %v22_10f7c = zext i8 %v4_10f7c to i32
  %v24_10f7c = and i32 %v0_10f7c, -256
  %v25_10f7c = or i32 %v22_10f7c, %v24_10f7c
  store i32 %v25_10f7c, i32* %eax.global-to-local, align 4
  %v1_10f7e = inttoptr i32 %v25_10f7c to i8*
  %v2_10f7e = load i8, i8* %v1_10f7e, align 1
  %v5_10f7e = add i8 %v2_10f7e, %v4_10f7c
  store i8 %v5_10f7e, i8* %v1_10f7e, align 1
  %v0_10f80 = load i32, i32* %eax.global-to-local, align 4
  %v1_10f80 = load i32, i32* @ebp, align 4
  %v2_10f80 = add i32 %v1_10f80, -12
  %v3_10f80 = inttoptr i32 %v2_10f80 to i32*
  store i32 %v0_10f80, i32* %v3_10f80, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_10f85 = load i32, i32* @ebp, align 4
  %v1_10f85 = add i32 %v0_10f85, -32
  %v2_10f85 = inttoptr i32 %v1_10f85 to i32*
  %v3_10f85 = load i32, i32* %v2_10f85, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_10f85 = icmp eq i32 %v3_10f85, 0
  br i1 %v10_10f85, label %bb, label %dec_label_pc_10f8b

bb:                                               ; preds = %dec_label_pc_10f7c
  %v1_10f89 = call i32 @function_10f9d()
  store i32 %v1_10f89, i32* %eax.global-to-local, align 4
  %v0_10f8b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_10f8b

dec_label_pc_10f8b:                               ; preds = %bb, %dec_label_pc_10f7c
  %v0_10f8b = phi i32 [ %v0_10f8b.pre, %bb ], [ %v0_10f85, %dec_label_pc_10f7c ]
  %v1_10f8b = add i32 %v0_10f8b, -36
  %v2_10f8b = inttoptr i32 %v1_10f8b to i32*
  %v3_10f8b = load i32, i32* %v2_10f8b, align 4
  store i32 %v3_10f8b, i32* %eax.global-to-local, align 4
  %v1_10f92 = add i32 %v0_10f8b, -32
  %v2_10f92 = inttoptr i32 %v1_10f92 to i32*
  %v3_10f92 = load i32, i32* %v2_10f92, align 4
  store i32 %v3_10f92, i32* %eax.global-to-local, align 4
  ret i32 %v3_10f92

; uselistorder directives
  uselistorder i32 %v0_10f8b, { 1, 0 }
  uselistorder i8 %v4_10f7c, { 0, 2, 1 }
  uselistorder i8 %v1_10f7c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 4, 5, 6, 1 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0 }
}

define i32 @function_10f9d() local_unnamed_addr {
dec_label_pc_10f9d:
  %v0_10f9d = load i32, i32* @ebp, align 4
  %v1_10f9d = add i32 %v0_10f9d, -36
  %v2_10f9d = inttoptr i32 %v1_10f9d to i32*
  %v3_10f9d = load i32, i32* %v2_10f9d, align 4
  %v1_10fa4 = add i32 %v0_10f9d, -32
  %v2_10fa4 = inttoptr i32 %v1_10fa4 to i32*
  %v3_10fa4 = load i32, i32* %v2_10fa4, align 4
  %v1_10fab = add i32 %v0_10f9d, -28
  %v2_10fab = inttoptr i32 %v1_10fab to i32*
  %v3_10fab = load i32, i32* %v2_10fab, align 4
  %v3_10fb1 = call i32 @unknown_24f16(i32 %v3_10fab, i32 %v3_10fa4, i32 %v3_10f9d)
  %v0_10fb6 = load i32, i32* @ebp, align 4
  %v1_10fb6 = add i32 %v0_10fb6, -12
  %v2_10fb6 = inttoptr i32 %v1_10fb6 to i32*
  %v3_10fb6 = load i32, i32* %v2_10fb6, align 4
  %v1_10fb9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10fb9 = xor i32 %v1_10fb9, %v3_10fb6
  %v3_10fb9 = icmp eq i32 %v2_10fb9, 0
  store i32 %v2_10fb9, i32* @eax, align 4
  br i1 %v3_10fb9, label %bb, label %dec_label_pc_10fc2

bb:                                               ; preds = %dec_label_pc_10f9d
  %v6_10fc0 = call i32 @function_10fc7(i32 %v3_10fab, i32 %v3_10fa4, i32 %v3_10f9d, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_10fc2

dec_label_pc_10fc2:                               ; preds = %bb, %dec_label_pc_10f9d
  %v8_10fc0 = phi i32 [ %v6_10fc0, %bb ], [ %v2_10fb9, %dec_label_pc_10f9d ]
  ret i32 %v8_10fc0

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10fc7, { 0, 3, 2, 1 }
}

define i32 @function_10fc7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10fc7:
  %v0_10fc8 = load i32, i32* @eax, align 4
  ret i32 %v0_10fc8
}

define i32 @_ZSt13copy_backwardIPcS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10fc9:
  %v1_10ff3 = call i32 @unknown_24fbe(i32 %arg2)
  %v1_11000 = call i32 @unknown_24fbe(i32 %arg1)
  %v3_11013 = call i32 @unknown_24ff3(i32 %v1_11000, i32 %v1_10ff3, i32 %arg3)
  ret i32 %v3_11013

; uselistorder directives
  uselistorder i32 (i32)* @unknown_24fbe, { 1, 0 }
}

define i32 @function_11023(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11023:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11028() local_unnamed_addr {
dec_label_pc_11028:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11028 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11028 = add i32 %v0_11028, 1566258372
  %v2_11028 = inttoptr i32 %v1_11028 to i32*
  %v3_11028 = load i32, i32* %v2_11028, align 4
  %v4_11028 = add i32 %v3_11028, 1
  store i32 %v4_11028, i32* %v2_11028, align 4
  %v0_1102e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1102e
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11030:
  %v1_1105a = call i32 @unknown_1e514(i32 %arg1)
  store i32 %v1_1105a, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_11067 = call i32 @function_18fae(i32 %arg1)
  %v0_1106c = load i32, i32* @ebx, align 4
  %v2_1106e = sub i32 %v0_1106c, %v1_11067
  store i32 %v2_1106e, i32* @edx, align 4
  %v7_11073 = icmp ult i32 %v2_1106e, %arg2
  %v5_11078 = icmp eq i1 %v7_11073, false
  br i1 %v5_11078, label %bb, label %dec_label_pc_1107c

bb:                                               ; preds = %dec_label_pc_11030
  %v1_1107a = call i32 @function_11087()
  br label %dec_label_pc_1107c

dec_label_pc_1107c:                               ; preds = %bb, %dec_label_pc_11030
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_11087() local_unnamed_addr {
dec_label_pc_11087:
  %v0_11087 = load i32, i32* @ebp, align 4
  %v1_11087 = add i32 %v0_11087, -28
  %v2_11087 = inttoptr i32 %v1_11087 to i32*
  %v3_11087 = load i32, i32* %v2_11087, align 4
  store i32 %v3_11087, i32* @eax, align 4
  %v1_1108d = call i32 @function_18fae(i32 %v3_11087)
  store i32 %v1_1108d, i32* @ebx, align 4
  %v0_11094 = load i32, i32* @ebp, align 4
  %v1_11094 = add i32 %v0_11094, -28
  %v2_11094 = inttoptr i32 %v1_11094 to i32*
  %v3_11094 = load i32, i32* %v2_11094, align 4
  store i32 %v3_11094, i32* @eax, align 4
  %v1_1109a = call i32 @function_18fae(i32 %v3_11094)
  ret i32 %v1_1109a
}

define i32 @function_110a0() local_unnamed_addr {
dec_label_pc_110a0:
  %v0_110a0 = load i32, i32* @ebp, align 4
  %v1_110a0 = add i32 %v0_110a0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_110a0, i32* @ebp, align 4
  %v1_110a2 = add i32 %v0_110a0, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -32)
  %v1_110a9 = add i32 %v0_110a0, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -20)
  %v2_110af = call i32 @unknown_250cc(i32 %v1_110a9, i32 %v1_110a2)
  %v1_110b4 = inttoptr i32 %v2_110af to i32*
  %v2_110b4 = load i32, i32* %v1_110b4, align 4
  %v1_110b6 = load i32, i32* @ebx, align 4
  %v2_110b6 = add i32 %v1_110b6, %v2_110b4
  %v1_110b8 = load i32, i32* @ebp, align 4
  %v2_110b8 = add i32 %v1_110b8, -16
  %v3_110b8 = inttoptr i32 %v2_110b8 to i32*
  store i32 %v2_110b6, i32* %v3_110b8, align 4
  %v0_110bb = load i32, i32* @ebp, align 4
  %v1_110bb = add i32 %v0_110bb, -28
  %v2_110bb = inttoptr i32 %v1_110bb to i32*
  %v3_110bb = load i32, i32* %v2_110bb, align 4
  store i32 %v3_110bb, i32* @eax, align 4
  %v1_110c1 = call i32 @function_18fae(i32 %v3_110bb)
  %v1_110c6 = load i32, i32* @ebp, align 4
  %v2_110c6 = add i32 %v1_110c6, -16
  %v3_110c6 = inttoptr i32 %v2_110c6 to i32*
  %v4_110c6 = load i32, i32* %v3_110c6, align 4
  %tmp6 = icmp ugt i32 %v1_110c1, %v4_110c6
  br i1 %tmp6, label %dec_label_pc_110db, label %dec_label_pc_110cb

dec_label_pc_110cb:                               ; preds = %dec_label_pc_110a0
  %v1_110cb = add i32 %v1_110c6, -28
  %v2_110cb = inttoptr i32 %v1_110cb to i32*
  %v3_110cb = load i32, i32* %v2_110cb, align 4
  %v1_110d1 = call i32 @unknown_1e514(i32 %v3_110cb)
  %v1_110d6 = load i32, i32* @ebp, align 4
  %v2_110d6 = add i32 %v1_110d6, -16
  %v3_110d6 = inttoptr i32 %v2_110d6 to i32*
  %v4_110d6 = load i32, i32* %v3_110d6, align 4
  %v10_110d6 = icmp ult i32 %v1_110d1, %v4_110d6
  %v1_110d9 = icmp eq i1 %v10_110d6, false
  br i1 %v1_110d9, label %dec_label_pc_110eb, label %dec_label_pc_110db

dec_label_pc_110db:                               ; preds = %dec_label_pc_110a0, %dec_label_pc_110cb
  %v0_110db = phi i32 [ %v1_110c6, %dec_label_pc_110a0 ], [ %v1_110d6, %dec_label_pc_110cb ]
  %v1_110db = add i32 %v0_110db, -28
  %v2_110db = inttoptr i32 %v1_110db to i32*
  %v3_110db = load i32, i32* %v2_110db, align 4
  %v1_110e1 = call i32 @unknown_1e514(i32 %v3_110db)
  %v0_110eb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_110eb

dec_label_pc_110eb:                               ; preds = %dec_label_pc_110cb, %dec_label_pc_110db
  %v0_110eb = phi i32 [ %v0_110eb.pre, %dec_label_pc_110db ], [ %v1_110d6, %dec_label_pc_110cb ]
  %storemerge = phi i32 [ %v1_110e1, %dec_label_pc_110db ], [ %v4_110d6, %dec_label_pc_110cb ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_110eb = add i32 %v0_110eb, -12
  %v2_110eb = inttoptr i32 %v1_110eb to i32*
  %v3_110eb = load i32, i32* %v2_110eb, align 4
  %v1_110ee = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_110ee = icmp eq i32 %v1_110ee, %v3_110eb
  br i1 %v3_110ee, label %bb, label %dec_label_pc_110f7

bb:                                               ; preds = %dec_label_pc_110eb
  %v1_110f5 = call i32 @function_110fc()
  br label %dec_label_pc_110f7

dec_label_pc_110f7:                               ; preds = %bb, %dec_label_pc_110eb
  %v2_110f5 = phi i32 [ %v1_110f5, %bb ], [ %storemerge, %dec_label_pc_110eb ]
  ret i32 %v2_110f5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1e514, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_18fae, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_110eb, { 1, 0 }
  uselistorder label %dec_label_pc_110db, { 1, 0 }
}

define i32 @function_110fc() local_unnamed_addr {
dec_label_pc_110fc:
  %v0_110fc = load i32, i32* @esp, align 4
  %v5_110fc = icmp ugt i32 %v0_110fc, -53
  store i1 %v5_110fc, i1* @cf, align 1
  %v0_11101 = load i32, i32* @eax, align 4
  ret i32 %v0_11101
}

define i32 @_ZSt22__uninitialized_move_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11102:
  ret i32 %arg1
}

define i32 @function_11110(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11110:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11110 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_11110 = or i32 %v0_11110, 137
  store i32 %v11_11110, i32* %eax.global-to-local, align 4
  %v0_11112 = load i32, i32* @ebp, align 4
  %v1_11112 = add i32 %v0_11112, ptrtoint (i8** @global_var_1.1176 to i32)
  %v9_11112 = icmp eq i32 %v1_11112, 0
  store i32 %v1_11112, i32* @ebp, align 4
  %v0_11113 = load i32, i32* @ecx, align 4
  %v1_11113 = sub i32 %v0_11113, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_11113, i32* @ecx, align 4
  %v2_11113 = icmp eq i32 %v1_11113, 0
  %v4_11113 = or i1 %v9_11112, %v2_11113
  br i1 %v4_11113, label %dec_label_pc_11115, label %bb

bb:                                               ; preds = %dec_label_pc_11110
  %v6_11113 = call i32 @function_110a0()
  store i32 %v6_11113, i32* %eax.global-to-local, align 4
  %v0_11115.pre = load i32, i32* @ebp, align 4
  %v0_11116.pre = load i32, i32* @ecx, align 4
  %v6_11116.pre = load i1, i1* @cf, align 1
  br label %dec_label_pc_11115

dec_label_pc_11115:                               ; preds = %dec_label_pc_11110, %bb
  %v6_11116 = phi i1 [ false, %dec_label_pc_11110 ], [ %v6_11116.pre, %bb ]
  %v30_11116 = phi i32 [ %v1_11113, %dec_label_pc_11110 ], [ %v0_11116.pre, %bb ]
  %v0_11115 = phi i32 [ %v1_11112, %dec_label_pc_11110 ], [ %v0_11115.pre, %bb ]
  %v1_11115 = add i32 %v0_11115, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_11115, i32* %ebp.global-to-local, align 4
  %v1_11116 = add i32 %v30_11116, 1166793797
  %v2_11116 = inttoptr i32 %v1_11116 to i8*
  %v3_11116 = load i8, i8* %v2_11116, align 1
  %v5_11116 = trunc i32 %v30_11116 to i8
  %v7_11116 = zext i1 %v6_11116 to i8
  %v8_11116 = add i8 %v3_11116, %v5_11116
  %v9_11116 = add i8 %v8_11116, %v7_11116
  %v27_11116 = icmp ule i8 %v9_11116, %v3_11116
  %v28_11116 = icmp ult i8 %v8_11116, %v3_11116
  %v29_11116 = select i1 %v6_11116, i1 %v27_11116, i1 %v28_11116
  store i1 %v29_11116, i1* %cf.global-to-local, align 1
  store i8 %v9_11116, i8* %v2_11116, align 1
  %v0_1111c = load i32, i32* %eax.global-to-local, align 4
  %v1_1111c = trunc i32 %v0_1111c to i8
  %v2_1111c = load i1, i1* %cf.global-to-local, align 1
  %v3_1111c = zext i1 %v2_1111c to i8
  %v4_1111c = add i8 %v1_1111c, -119
  %v5_1111c = add i8 %v4_1111c, %v3_1111c
  %v22_1111c = icmp ule i8 %v5_1111c, %v1_1111c
  %v23_1111c = icmp ugt i8 %v1_1111c, 118
  %v24_1111c = select i1 %v2_1111c, i1 %v22_1111c, i1 %v23_1111c
  %v25_1111c = zext i8 %v5_1111c to i32
  %v27_1111c = and i32 %v0_1111c, -256
  %v28_1111c = or i32 %v25_1111c, %v27_1111c
  store i32 %v28_1111c, i32* %eax.global-to-local, align 4
  %v0_1111e = load i32, i32* %ebp.global-to-local, align 4
  %v1_1111e = add i32 %v0_1111e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1111e, i32* @ebp, align 4
  %v3_11122 = zext i1 %v24_1111c to i8
  %v4_11122 = add i8 %v3_11122, %v5_1111c
  %v19_11122 = icmp ule i8 %v4_11122, %v5_1111c
  %v21_11122 = icmp eq i1 %v24_1111c, %v19_11122
  store i1 %v21_11122, i1* %cf.global-to-local, align 1
  %v22_11122 = zext i8 %v4_11122 to i32
  %v25_11122 = or i32 %v22_11122, %v27_1111c
  store i32 %v25_11122, i32* %eax.global-to-local, align 4
  %v1_11124 = inttoptr i32 %v25_11122 to i8*
  %v2_11124 = load i8, i8* %v1_11124, align 1
  %v5_11124 = add i8 %v2_11124, %v4_11122
  store i8 %v5_11124, i8* %v1_11124, align 1
  %v0_11126 = load i32, i32* %eax.global-to-local, align 4
  %v1_11126 = load i32, i32* @ebp, align 4
  %v2_11126 = add i32 %v1_11126, -12
  %v3_11126 = inttoptr i32 %v2_11126 to i32*
  store i32 %v0_11126, i32* %v3_11126, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1112b = load i32, i32* @ebp, align 4
  %v1_1112b = add i32 %v0_1112b, -40
  %v2_1112b = inttoptr i32 %v1_1112b to i32*
  %v3_1112b = load i32, i32* %v2_1112b, align 4
  store i32 %v3_1112b, i32* %eax.global-to-local, align 4
  %v1_11132 = add i32 %v0_1112b, -36
  %v2_11132 = inttoptr i32 %v1_11132 to i32*
  %v3_11132 = load i32, i32* %v2_11132, align 4
  store i32 %v3_11132, i32* %eax.global-to-local, align 4
  %v1_11139 = add i32 %v0_1112b, -32
  %v2_11139 = inttoptr i32 %v1_11139 to i32*
  %v3_11139 = load i32, i32* %v2_11139, align 4
  store i32 %v3_11139, i32* %eax.global-to-local, align 4
  %v1_11140 = add i32 %v0_1112b, -28
  %v2_11140 = inttoptr i32 %v1_11140 to i32*
  %v3_11140 = load i32, i32* %v2_11140, align 4
  store i32 %v3_11140, i32* %eax.global-to-local, align 4
  %v4_11146 = call i32 @unknown_21fe7(i32 %v3_11140, i32 %v3_11139, i32 %v3_11132, i32 %v3_1112b)
  store i32 %v4_11146, i32* @eax, align 4
  %v0_1114b = load i32, i32* @ebp, align 4
  %v1_1114b = add i32 %v0_1114b, -12
  %v2_1114b = inttoptr i32 %v1_1114b to i32*
  %v3_1114b = load i32, i32* %v2_1114b, align 4
  %v1_1114e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1114e = icmp eq i32 %v1_1114e, %v3_1114b
  br i1 %v3_1114e, label %bb11, label %dec_label_pc_11157

bb11:                                             ; preds = %dec_label_pc_11115
  %v1_11155 = call i32 @function_1115c()
  store i32 %v1_11155, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_11157

dec_label_pc_11157:                               ; preds = %bb11, %dec_label_pc_11115
  %v3_11155 = phi i32 [ %v1_11155, %bb11 ], [ %v4_11146, %dec_label_pc_11115 ]
  ret i32 %v3_11155

; uselistorder directives
  uselistorder i32 %v0_1112b, { 1, 0, 2, 3 }
  uselistorder i8 %v4_11122, { 0, 2, 1 }
  uselistorder i8 %v5_1111c, { 1, 0, 3, 2 }
  uselistorder i8 %v9_11116, { 1, 0 }
  uselistorder i8 %v8_11116, { 1, 0 }
  uselistorder i8 %v3_11116, { 1, 2, 0 }
  uselistorder i32 %v30_11116, { 1, 0 }
  uselistorder i1 %v6_11116, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11 }
  uselistorder label %dec_label_pc_11115, { 1, 0 }
}

define i32 @function_1115c() local_unnamed_addr {
dec_label_pc_1115c:
  %v0_1115d = load i32, i32* @eax, align 4
  ret i32 %v0_1115d
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag() local_unnamed_addr {
dec_label_pc_1115e:
  %eax.global-to-local = alloca i32, align 4
  %v5_11161 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_11161
}

define i32 @function_11162(i32 %arg1) local_unnamed_addr {
dec_label_pc_11162:
  %stack_var_-4 = alloca i32, align 4
  %v0_11162 = load i32, i32* @ebx, align 4
  store i32 %v0_11162, i32* %stack_var_-4, align 4
  %v0_11166 = load i32, i32* @ebp, align 4
  %v1_11166 = add i32 %v0_11166, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_11166 = inttoptr i32 %v1_11166 to i32*
  %v3_11166 = load i32, i32* %v2_11166, align 4
  %v2_11169 = add i32 %v0_11166, -60
  %v3_11169 = inttoptr i32 %v2_11169 to i32*
  store i32 %v3_11166, i32* %v3_11169, align 4
  %v0_1116c = load i32, i32* @ebp, align 4
  %v1_1116c = add i32 %v0_1116c, 12
  %v2_1116c = inttoptr i32 %v1_1116c to i32*
  %v3_1116c = load i32, i32* %v2_1116c, align 4
  %v2_1116f = add i32 %v0_1116c, -64
  %v3_1116f = inttoptr i32 %v2_1116f to i32*
  store i32 %v3_1116c, i32* %v3_1116f, align 4
  %v0_11172 = load i32, i32* @ebp, align 4
  %v1_11172 = add i32 %v0_11172, 16
  %v2_11172 = inttoptr i32 %v1_11172 to i32*
  %v3_11172 = load i32, i32* %v2_11172, align 4
  %v2_11175 = add i32 %v0_11172, -68
  %v3_11175 = inttoptr i32 %v2_11175 to i32*
  store i32 %v3_11172, i32* %v3_11175, align 4
  %v0_11178 = load i32, i32* @ebp, align 4
  %v1_11178 = add i32 %v0_11178, 20
  %v2_11178 = inttoptr i32 %v1_11178 to i32*
  %v3_11178 = load i32, i32* %v2_11178, align 4
  %v2_1117b = add i32 %v0_11178, -72
  %v3_1117b = inttoptr i32 %v2_1117b to i32*
  store i32 %v3_11178, i32* %v3_1117b, align 4
  %v0_1117e = load i32, i32* @ebp, align 4
  %v1_1117e = add i32 %v0_1117e, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1117e = inttoptr i32 %v1_1117e to i8*
  %v3_1117e = load i8, i8* %v2_1117e, align 1
  %v3_11182 = add i32 %v0_1117e, -73
  %v4_11182 = inttoptr i32 %v3_11182 to i8*
  store i8 %v3_1117e, i8* %v4_11182, align 1
  %v0_11185 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1118b = load i32, i32* @ebp, align 4
  %v2_1118b = add i32 %v1_1118b, -12
  %v3_1118b = inttoptr i32 %v2_1118b to i32*
  store i32 %v0_11185, i32* %v3_1118b, align 4
  %v0_11190 = load i32, i32* @ebp, align 4
  %v1_11190 = add i32 %v0_11190, -68
  %v2_11190 = inttoptr i32 %v1_11190 to i32*
  %v3_11190 = load i32, i32* %v2_11190, align 4
  store i32 %v3_11190, i32* @eax, align 4
  %v2_11193 = add i32 %v0_11190, -72
  %v3_11193 = inttoptr i32 %v2_11193 to i32*
  %v4_11193 = load i32, i32* %v3_11193, align 4
  %v15_11193 = icmp eq i32 %v3_11190, %v4_11193
  br i1 %v15_11193, label %bb, label %dec_label_pc_1119c

bb:                                               ; preds = %dec_label_pc_11162
  %v1_11196 = load i32, i32* %stack_var_-4, align 4
  %v2_11196 = call i32 @function_11517(i32 %v1_11196)
  %v0_1119c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1119c

dec_label_pc_1119c:                               ; preds = %bb, %dec_label_pc_11162
  %v0_1119c = phi i32 [ %v0_1119c.pre, %bb ], [ %v0_11190, %dec_label_pc_11162 ]
  %v1_1119c = add i32 %v0_1119c, -72
  %v2_1119c = inttoptr i32 %v1_1119c to i32*
  %v3_1119c = load i32, i32* %v2_1119c, align 4
  %v1_111a3 = add i32 %v0_1119c, -68
  %v2_111a3 = inttoptr i32 %v1_111a3 to i32*
  %v3_111a3 = load i32, i32* %v2_111a3, align 4
  %v2_111a9 = call i32 @unknown_24daf(i32 %v3_111a3, i32 %v3_1119c)
  %v1_111ae = load i32, i32* @ebp, align 4
  %v2_111ae = add i32 %v1_111ae, -32
  %v3_111ae = inttoptr i32 %v2_111ae to i32*
  store i32 %v2_111a9, i32* %v3_111ae, align 4
  %v0_111b1 = load i32, i32* @ebp, align 4
  %v1_111b1 = add i32 %v0_111b1, -60
  %v2_111b1 = inttoptr i32 %v1_111b1 to i32*
  %v3_111b1 = load i32, i32* %v2_111b1, align 4
  %v1_111b4 = add i32 %v3_111b1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_111b4 = inttoptr i32 %v1_111b4 to i32*
  %v3_111b4 = load i32, i32* %v2_111b4, align 4
  %v1_111bc = add i32 %v3_111b1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_111bc = inttoptr i32 %v1_111bc to i32*
  %v3_111bc = load i32, i32* %v2_111bc, align 4
  %v2_111c1 = sub i32 %v3_111b4, %v3_111bc
  store i32 %v2_111c1, i32* @ecx, align 4
  %v2_111c5 = add i32 %v0_111b1, -32
  %v3_111c5 = inttoptr i32 %v2_111c5 to i32*
  %v4_111c5 = load i32, i32* %v3_111c5, align 4
  %v10_111c5 = icmp ult i32 %v2_111c1, %v4_111c5
  br i1 %v10_111c5, label %bb6, label %dec_label_pc_111ce

bb6:                                              ; preds = %dec_label_pc_1119c
  %v1_111c8 = call i32 @function_11375()
  %v0_111ce.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_111ce

dec_label_pc_111ce:                               ; preds = %bb6, %dec_label_pc_1119c
  %v0_111ce = phi i32 [ %v0_111ce.pre, %bb6 ], [ %v0_111b1, %dec_label_pc_1119c ]
  %v1_111ce = add i32 %v0_111ce, -52
  ret i32 %v1_111ce

; uselistorder directives
  uselistorder i32 %v0_1119c, { 1, 0 }
}

define i32 @function_111e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_111e2:
  %v0_111e2 = load i32, i32* @eax, align 4
  %v2_111e2 = add i32 %v0_111e2, 141
  %v16_111e2 = urem i32 %v2_111e2, 256
  %v18_111e2 = and i32 %v0_111e2, -256
  %v19_111e2 = or i32 %v16_111e2, %v18_111e2
  store i32 %v19_111e2, i32* @eax, align 4
  %v0_111e4 = load i32, i32* @ebp, align 4
  %v1_111e4 = add i32 %v0_111e4, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_111e4, i32* @ebp, align 4
  %v0_111e5 = load i32, i32* @ecx, align 4
  %v1_111e5 = add i32 %v0_111e5, -1929108412
  %v2_111e5 = inttoptr i32 %v1_111e5 to i8*
  %v3_111e5 = load i8, i8* %v2_111e5, align 1
  %v4_111e5 = lshr i8 %v3_111e5, ptrtoint (i8* @global_var_5.1189 to i8)
  %v5_111e5 = mul i8 %v3_111e5, 8
  %v6_111e5 = or i8 %v4_111e5, %v5_111e5
  store i8 %v6_111e5, i8* %v2_111e5, align 1
  %v11_111e5 = icmp slt i8 %v6_111e5, 0
  store i1 %v11_111e5, i1* @cf, align 1
  %v0_111ed = load i32, i32* @eax, align 4
  %v1_111f0 = call i32 @function_1930a(i32 %v0_111ed)
  %v1_111f5 = load i32, i32* @ebp, align 4
  %v2_111f5 = add i32 %v1_111f5, -28
  %v3_111f5 = inttoptr i32 %v2_111f5 to i32*
  store i32 %v1_111f0, i32* %v3_111f5, align 4
  %v0_111f8 = load i32, i32* @ebp, align 4
  %v1_111f8 = add i32 %v0_111f8, -60
  %v2_111f8 = inttoptr i32 %v1_111f8 to i32*
  %v3_111f8 = load i32, i32* %v2_111f8, align 4
  %v1_111fb = add i32 %v3_111f8, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_111fb = inttoptr i32 %v1_111fb to i32*
  %v3_111fb = load i32, i32* %v2_111fb, align 4
  %v2_111fe = add i32 %v0_111f8, -24
  %v3_111fe = inttoptr i32 %v2_111fe to i32*
  store i32 %v3_111fb, i32* %v3_111fe, align 4
  %v0_11201 = load i32, i32* @ebp, align 4
  %v1_11201 = add i32 %v0_11201, -28
  %v2_11201 = inttoptr i32 %v1_11201 to i32*
  %v3_11201 = load i32, i32* %v2_11201, align 4
  %v2_11204 = add i32 %v0_11201, -32
  %v3_11204 = inttoptr i32 %v2_11204 to i32*
  %v4_11204 = load i32, i32* %v3_11204, align 4
  %tmp3 = icmp ugt i32 %v3_11201, %v4_11204
  br i1 %tmp3, label %dec_label_pc_1120d, label %bb

bb:                                               ; preds = %dec_label_pc_111e2
  %v3_11207 = call i32 @function_112a8()
  %v0_1120d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1120d

dec_label_pc_1120d:                               ; preds = %dec_label_pc_111e2, %bb
  %v0_1120d = phi i32 [ %v0_1120d.pre, %bb ], [ %v0_11201, %dec_label_pc_111e2 ]
  %v1_1120d = add i32 %v0_1120d, -60
  %v2_1120d = inttoptr i32 %v1_1120d to i32*
  %v3_1120d = load i32, i32* %v2_1120d, align 4
  %v1_11213 = call i32 @unknown_1e38a(i32 %v3_1120d)
  %v0_11218 = load i32, i32* @ebp, align 4
  %v1_11218 = add i32 %v0_11218, -60
  %v2_11218 = inttoptr i32 %v1_11218 to i32*
  %v3_11218 = load i32, i32* %v2_11218, align 4
  store i32 %v3_11218, i32* @edx, align 4
  %v1_1121b = add i32 %v3_11218, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1121b = inttoptr i32 %v1_1121b to i32*
  %v3_1121b = load i32, i32* %v2_1121b, align 4
  store i32 %v3_1121b, i32* @ecx, align 4
  ret i32 %v1_11213

; uselistorder directives
  uselistorder i32 %v0_111e2, { 1, 0 }
  uselistorder label %dec_label_pc_1120d, { 1, 0 }
}

define i32 @function_11220(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11220:
  %v0_11220 = load i32, i32* @ebx, align 4
  %v1_11226 = add i32 %v0_11220, 1972044891
  %v2_11226 = inttoptr i32 %v1_11226 to i32*
  %v3_11226 = load i32, i32* %v2_11226, align 4
  %v1_1122c = add i32 %v3_11226, -1
  store i32 %v1_1122c, i32* @ecx, align 4
  %v2_1122e = inttoptr i32 %v1_1122c to i16*
  %v3_1122e = load i16, i16* %v2_1122e, align 2
  %v4_1122e = sitofp i16 %v3_1122e to x86_fp80
  %v5_1122e = load x86_fp80, x86_fp80* @st0, align 4
  %v6_1122e = fadd x86_fp80 %v5_1122e, %v4_1122e
  store x86_fp80 %v6_1122e, x86_fp80* @st0, align 4
  %v0_11230 = load i32, i32* @eax, align 4
  %v0_11239 = load i32, i32* @edx, align 4
  %v4_11240 = call i32 @unknown_22260(i32 %v0_11220, i32 %v0_11239, i32 %v1_1122c, i32 %v0_11230)
  %v0_11245 = load i32, i32* @ebp, align 4
  %v1_11245 = add i32 %v0_11245, -60
  %v2_11245 = inttoptr i32 %v1_11245 to i32*
  %v3_11245 = load i32, i32* %v2_11245, align 4
  %v1_11248 = add i32 %v3_11245, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_11248 = inttoptr i32 %v1_11248 to i32*
  %v3_11248 = load i32, i32* %v2_11248, align 4
  %v2_1124d = add i32 %v0_11245, -32
  %v3_1124d = inttoptr i32 %v2_1124d to i32*
  %v4_1124d = load i32, i32* %v3_1124d, align 4
  %v5_1124d = add i32 %v4_1124d, %v3_11248
  store i32 %v5_1124d, i32* @edx, align 4
  %v3_11250 = load i32, i32* %v2_11245, align 4
  %v2_11253 = add i32 %v3_11250, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_11253 = inttoptr i32 %v2_11253 to i32*
  store i32 %v5_1124d, i32* %v3_11253, align 4
  %v0_11256 = load i32, i32* @ebp, align 4
  %v1_11260 = add i32 %v0_11256, -64
  ret i32 %v1_11260
}

define i32 @function_1126a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1126a:
  %v0_1126a = load i32, i32* @ebx, align 4
  %v1_1126a = add i32 %v0_1126a, -397047040
  %v2_1126a = inttoptr i32 %v1_1126a to i8*
  %v3_1126a = load i8, i8* %v2_1126a, align 1
  %v4_1126a = load i32, i32* @ecx, align 4
  %v5_1126a = trunc i32 %v4_1126a to i8
  %v6_1126a = add i8 %v5_1126a, %v3_1126a
  store i8 %v6_1126a, i8* %v2_1126a, align 1
  %v0_11270 = load i32, i32* @edx, align 4
  %v0_11274 = load i32, i32* @ebx, align 4
  %v0_11278 = load i32, i32* @eax, align 4
  %v3_1127b = call i32 @unknown_22127(i32 %v0_11278, i32 %v0_11274, i32 %v0_11270)
  %v0_11280 = load i32, i32* @ebp, align 4
  %v1_11280 = add i32 %v0_11280, -48
  %v1_11283 = add i32 %v0_11280, -64
  %v2_11283 = inttoptr i32 %v1_11283 to i32*
  %v3_11283 = load i32, i32* %v2_11283, align 4
  %v1_1128a = add i32 %v0_11280, -72
  %v2_1128a = inttoptr i32 %v1_1128a to i32*
  %v3_1128a = load i32, i32* %v2_1128a, align 4
  %v1_11291 = add i32 %v0_11280, -68
  %v2_11291 = inttoptr i32 %v1_11291 to i32*
  %v3_11291 = load i32, i32* %v2_11291, align 4
  %v4_1129b = call i32 @unknown_25275(i32 %v1_11280, i32 %v3_11291, i32 %v3_1128a, i32 %v3_11283)
  store i32 %v4_1129b, i32* @eax, align 4
  %v1_112a3 = call i32 @function_11517(i32 %v1_11280)
  ret i32 %v1_112a3

; uselistorder directives
  uselistorder i32 %v1_11280, { 1, 0 }
  uselistorder i32 %v0_11280, { 1, 0, 2, 3 }
}

define i32 @function_112a8() local_unnamed_addr {
dec_label_pc_112a8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_112a8 = load i32, i32* @ebp, align 4
  %v1_112a8 = add i32 %v0_112a8, -68
  %v2_112a8 = inttoptr i32 %v1_112a8 to i32*
  %v3_112a8 = load i32, i32* %v2_112a8, align 4
  %v2_112ab = add i32 %v0_112a8, -44
  %v3_112ab = inttoptr i32 %v2_112ab to i32*
  store i32 %v3_112a8, i32* %v3_112ab, align 4
  %v0_112ae = load i32, i32* @ebp, align 4
  %v1_112ae = add i32 %v0_112ae, -28
  %v2_112ae = inttoptr i32 %v1_112ae to i32*
  %v3_112ae = load i32, i32* %v2_112ae, align 4
  %v1_112b5 = add i32 %v0_112ae, -44
  %v2_112bb = call i32 @unknown_252f1(i32 %v1_112b5, i32 %v3_112ae)
  %v0_112c0 = load i32, i32* @ebp, align 4
  %v1_112c0 = add i32 %v0_112c0, -60
  %v2_112c0 = inttoptr i32 %v1_112c0 to i32*
  %v3_112c0 = load i32, i32* %v2_112c0, align 4
  %v1_112c6 = call i32 @unknown_1e38a(i32 %v3_112c0)
  %v0_112cb = load i32, i32* @ebp, align 4
  %v1_112cb = add i32 %v0_112cb, -60
  %v2_112cb = inttoptr i32 %v1_112cb to i32*
  %v3_112cb = load i32, i32* %v2_112cb, align 4
  %v1_112ce = add i32 %v3_112cb, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_112ce = inttoptr i32 %v1_112ce to i32*
  %v3_112ce = load i32, i32* %v2_112ce, align 4
  %v1_112d1 = add i32 %v0_112cb, -44
  %v2_112d1 = inttoptr i32 %v1_112d1 to i32*
  %v3_112d1 = load i32, i32* %v2_112d1, align 4
  %v1_112dc = add i32 %v0_112cb, -72
  %v2_112dc = inttoptr i32 %v1_112dc to i32*
  %v3_112dc = load i32, i32* %v2_112dc, align 4
  %v4_112e6 = call i32 @unknown_24e0e(i32 %v3_112d1, i32 %v3_112dc, i32 %v3_112ce, i32 %v1_112c6)
  %v0_112eb = load i32, i32* @ebp, align 4
  %v1_112eb = add i32 %v0_112eb, -60
  %v2_112eb = inttoptr i32 %v1_112eb to i32*
  %v3_112eb = load i32, i32* %v2_112eb, align 4
  %v1_112ee = add i32 %v3_112eb, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_112ee = inttoptr i32 %v1_112ee to i32*
  %v3_112ee = load i32, i32* %v2_112ee, align 4
  %v1_112f1 = add i32 %v0_112eb, -28
  %v2_112f1 = inttoptr i32 %v1_112f1 to i32*
  %v3_112f1 = load i32, i32* %v2_112f1, align 4
  %v1_112f4 = add i32 %v0_112eb, -32
  %v2_112f4 = inttoptr i32 %v1_112f4 to i32*
  %v3_112f4 = load i32, i32* %v2_112f4, align 4
  %v2_112f9 = sub i32 %v3_112f4, %v3_112f1
  store i32 %v2_112f9, i32* %ebx.global-to-local, align 4
  %v2_112fd = add i32 %v2_112f9, %v3_112ee
  %v3_112ff = load i32, i32* %v2_112eb, align 4
  %v2_11302 = add i32 %v3_112ff, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_11302 = inttoptr i32 %v2_11302 to i32*
  store i32 %v2_112fd, i32* %v3_11302, align 4
  %v0_11305 = load i32, i32* @ebp, align 4
  %v1_11305 = add i32 %v0_11305, -60
  %v2_11305 = inttoptr i32 %v1_11305 to i32*
  %v3_11305 = load i32, i32* %v2_11305, align 4
  %v1_1130b = call i32 @unknown_1e38a(i32 %v3_11305)
  store i32 %v1_1130b, i32* %ebx.global-to-local, align 4
  %v0_11312 = load i32, i32* @ebp, align 4
  %v1_11312 = add i32 %v0_11312, -60
  %v2_11312 = inttoptr i32 %v1_11312 to i32*
  %v3_11312 = load i32, i32* %v2_11312, align 4
  %v1_11315 = add i32 %v3_11312, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_11315 = inttoptr i32 %v1_11315 to i32*
  %v3_11315 = load i32, i32* %v2_11315, align 4
  %v1_11318 = add i32 %v0_11312, -64
  %v1_1131e = call i32 @unknown_1e824(i32 %v1_11318)
  %v1_11323 = inttoptr i32 %v1_1131e to i32*
  %v2_11323 = load i32, i32* %v1_11323, align 4
  %v0_11325 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1132d = load i32, i32* @ebp, align 4
  %v1_1132d = add i32 %v0_1132d, -24
  %v2_1132d = inttoptr i32 %v1_1132d to i32*
  %v3_1132d = load i32, i32* %v2_1132d, align 4
  %v4_11337 = call i32 @unknown_22260(i32 %v2_11323, i32 %v3_1132d, i32 %v3_11315, i32 %v0_11325)
  %v0_1133c = load i32, i32* @ebp, align 4
  %v1_1133c = add i32 %v0_1133c, -60
  %v2_1133c = inttoptr i32 %v1_1133c to i32*
  %v3_1133c = load i32, i32* %v2_1133c, align 4
  %v1_1133f = add i32 %v3_1133c, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1133f = inttoptr i32 %v1_1133f to i32*
  %v3_1133f = load i32, i32* %v2_1133f, align 4
  %v2_11344 = add i32 %v0_1133c, -28
  %v3_11344 = inttoptr i32 %v2_11344 to i32*
  %v4_11344 = load i32, i32* %v3_11344, align 4
  %v5_11344 = add i32 %v4_11344, %v3_1133f
  %v3_11347 = load i32, i32* %v2_1133c, align 4
  %v2_1134a = add i32 %v3_11347, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1134a = inttoptr i32 %v2_1134a to i32*
  store i32 %v5_11344, i32* %v3_1134a, align 4
  %v0_1134d = load i32, i32* @ebp, align 4
  %v1_1134d = add i32 %v0_1134d, -44
  %v2_1134d = inttoptr i32 %v1_1134d to i32*
  %v3_1134d = load i32, i32* %v2_1134d, align 4
  %v1_11350 = add i32 %v0_1134d, -40
  %v1_11353 = add i32 %v0_1134d, -64
  %v2_11353 = inttoptr i32 %v1_11353 to i32*
  %v3_11353 = load i32, i32* %v2_11353, align 4
  %v1_1135e = add i32 %v0_1134d, -68
  %v2_1135e = inttoptr i32 %v1_1135e to i32*
  %v3_1135e = load i32, i32* %v2_1135e, align 4
  %v4_11368 = call i32 @unknown_25275(i32 %v1_11350, i32 %v3_1135e, i32 %v3_1134d, i32 %v3_11353)
  store i32 %v4_11368, i32* @eax, align 4
  %v1_11370 = call i32 @function_11517(i32 %v1_11350)
  ret i32 %v1_11370

; uselistorder directives
  uselistorder i32 %v1_11350, { 1, 0 }
  uselistorder i32 %v0_1134d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_112eb, { 1, 0, 2 }
}

define i32 @function_112e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_112e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11375() local_unnamed_addr {
dec_label_pc_11375:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1137d = load i32, i32* @ebp, align 4
  %v1_1137d = add i32 %v0_1137d, -32
  %v2_1137d = inttoptr i32 %v1_1137d to i32*
  %v3_1137d = load i32, i32* %v2_1137d, align 4
  %v1_11384 = add i32 %v0_1137d, -60
  %v2_11384 = inttoptr i32 %v1_11384 to i32*
  %v3_11384 = load i32, i32* %v2_11384, align 4
  %v4_1138a = call i32 @unknown_2218e(i32 %v3_11384, i32 %v3_1137d, i32 ptrtoint ([24 x i8]* @global_var_3ef1.1219 to i32))
  %v1_1138f = load i32, i32* @ebp, align 4
  %v2_1138f = add i32 %v1_1138f, -20
  %v3_1138f = inttoptr i32 %v2_1138f to i32*
  store i32 %v4_1138a, i32* %v3_1138f, align 4
  %v0_11392 = load i32, i32* @ebp, align 4
  %v1_11392 = add i32 %v0_11392, -60
  %v2_11392 = inttoptr i32 %v1_11392 to i32*
  %v3_11392 = load i32, i32* %v2_11392, align 4
  %v1_11395 = add i32 %v0_11392, -20
  %v2_11395 = inttoptr i32 %v1_11395 to i32*
  %v3_11395 = load i32, i32* %v2_11395, align 4
  %v2_1139f = call i32 @unknown_21ea4(i32 %v3_11392, i32 %v3_11395)
  %v1_113a4 = load i32, i32* @ebp, align 4
  %v2_113a4 = add i32 %v1_113a4, -16
  %v3_113a4 = inttoptr i32 %v2_113a4 to i32*
  store i32 %v2_1139f, i32* %v3_113a4, align 4
  %v0_113a7 = load i32, i32* @ebp, align 4
  %v1_113a7 = add i32 %v0_113a7, -16
  %v2_113a7 = inttoptr i32 %v1_113a7 to i32*
  %v3_113a7 = load i32, i32* %v2_113a7, align 4
  %v2_113aa = add i32 %v0_113a7, -36
  %v3_113aa = inttoptr i32 %v2_113aa to i32*
  store i32 %v3_113a7, i32* %v3_113aa, align 4
  %v0_113ad = load i32, i32* @ebp, align 4
  %v1_113ad = add i32 %v0_113ad, -60
  %v2_113ad = inttoptr i32 %v1_113ad to i32*
  %v3_113ad = load i32, i32* %v2_113ad, align 4
  %v1_113b3 = call i32 @unknown_1e38a(i32 %v3_113ad)
  store i32 %v1_113b3, i32* %ebx.global-to-local, align 4
  %v0_113ba = load i32, i32* @ebp, align 4
  %v1_113ba = add i32 %v0_113ba, -64
  %v1_113c0 = call i32 @unknown_1e824(i32 %v1_113ba)
  %v1_113c5 = inttoptr i32 %v1_113c0 to i32*
  %v2_113c5 = load i32, i32* %v1_113c5, align 4
  %v0_113c7 = load i32, i32* @ebp, align 4
  %v1_113c7 = add i32 %v0_113c7, -60
  %v2_113c7 = inttoptr i32 %v1_113c7 to i32*
  %v3_113c7 = load i32, i32* %v2_113c7, align 4
  %v1_113ca = inttoptr i32 %v3_113c7 to i32*
  %v2_113ca = load i32, i32* %v1_113ca, align 4
  %v0_113cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_113d0 = add i32 %v0_113c7, -16
  %v2_113d0 = inttoptr i32 %v1_113d0 to i32*
  %v3_113d0 = load i32, i32* %v2_113d0, align 4
  %v5_113de = call i32 @unknown_22260(i32 %v2_113ca, i32 %v2_113c5, i32 %v3_113d0, i32 %v0_113cc)
  %v1_113e3 = load i32, i32* @ebp, align 4
  %v2_113e3 = add i32 %v1_113e3, -36
  %v3_113e3 = inttoptr i32 %v2_113e3 to i32*
  store i32 %v5_113de, i32* %v3_113e3, align 4
  %v0_113e6 = load i32, i32* @ebp, align 4
  %v1_113e6 = add i32 %v0_113e6, -60
  %v2_113e6 = inttoptr i32 %v1_113e6 to i32*
  %v3_113e6 = load i32, i32* %v2_113e6, align 4
  %v1_113ec = call i32 @unknown_1e38a(i32 %v3_113e6)
  %v0_113f5 = load i32, i32* @ebp, align 4
  %v1_113f5 = add i32 %v0_113f5, -36
  %v2_113f5 = inttoptr i32 %v1_113f5 to i32*
  %v3_113f5 = load i32, i32* %v2_113f5, align 4
  %v1_113fc = add i32 %v0_113f5, -72
  %v2_113fc = inttoptr i32 %v1_113fc to i32*
  %v3_113fc = load i32, i32* %v2_113fc, align 4
  %v1_11403 = add i32 %v0_113f5, -68
  %v2_11403 = inttoptr i32 %v1_11403 to i32*
  %v3_11403 = load i32, i32* %v2_11403, align 4
  %v5_11409 = call i32 @unknown_24e0e(i32 %v3_11403, i32 %v3_113fc, i32 %v3_113f5, i32 %v1_113ec)
  %v1_1140e = load i32, i32* @ebp, align 4
  %v2_1140e = add i32 %v1_1140e, -36
  %v3_1140e = inttoptr i32 %v2_1140e to i32*
  store i32 %v5_11409, i32* %v3_1140e, align 4
  %v0_11411 = load i32, i32* @ebp, align 4
  %v1_11411 = add i32 %v0_11411, -60
  %v2_11411 = inttoptr i32 %v1_11411 to i32*
  %v3_11411 = load i32, i32* %v2_11411, align 4
  %v1_11417 = call i32 @unknown_1e38a(i32 %v3_11411)
  store i32 %v1_11417, i32* %ebx.global-to-local, align 4
  %v0_1141e = load i32, i32* @ebp, align 4
  %v1_1141e = add i32 %v0_1141e, -60
  %v2_1141e = inttoptr i32 %v1_1141e to i32*
  %v3_1141e = load i32, i32* %v2_1141e, align 4
  %v1_11421 = add i32 %v3_1141e, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_11421 = inttoptr i32 %v1_11421 to i32*
  %v3_11421 = load i32, i32* %v2_11421, align 4
  store i32 %v3_11421, i32* %esi.global-to-local, align 4
  %v1_11424 = add i32 %v0_1141e, -64
  %v1_1142a = call i32 @unknown_1e824(i32 %v1_11424)
  %v1_1142f = inttoptr i32 %v1_1142a to i32*
  %v2_1142f = load i32, i32* %v1_1142f, align 4
  %v0_11431 = load i32, i32* %ebx.global-to-local, align 4
  %v0_11435 = load i32, i32* @ebp, align 4
  %v1_11435 = add i32 %v0_11435, -36
  %v2_11435 = inttoptr i32 %v1_11435 to i32*
  %v3_11435 = load i32, i32* %v2_11435, align 4
  %v0_1143c = load i32, i32* %esi.global-to-local, align 4
  %v5_11443 = call i32 @unknown_22260(i32 %v2_1142f, i32 %v0_1143c, i32 %v3_11435, i32 %v0_11431)
  %v1_11448 = load i32, i32* @ebp, align 4
  %v2_11448 = add i32 %v1_11448, -36
  %v3_11448 = inttoptr i32 %v2_11448 to i32*
  store i32 %v5_11443, i32* %v3_11448, align 4
  %v0_1144b = load i32, i32* @ebp, align 4
  %v1_1144b = add i32 %v0_1144b, -60
  %v2_1144b = inttoptr i32 %v1_1144b to i32*
  %v3_1144b = load i32, i32* %v2_1144b, align 4
  %v1_11451 = call i32 @unknown_1e38a(i32 %v3_1144b)
  %v0_11456 = load i32, i32* @ebp, align 4
  %v1_11456 = add i32 %v0_11456, -60
  %v2_11456 = inttoptr i32 %v1_11456 to i32*
  %v3_11456 = load i32, i32* %v2_11456, align 4
  %v1_11459 = add i32 %v3_11456, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_11459 = inttoptr i32 %v1_11459 to i32*
  %v3_11459 = load i32, i32* %v2_11459, align 4
  %v1_1145f = inttoptr i32 %v3_11456 to i32*
  %v2_1145f = load i32, i32* %v1_1145f, align 4
  %v4_1146c = call i32 @unknown_1e3b7(i32 %v2_1145f, i32 %v3_11459, i32 %v1_11451)
  %v0_11471 = load i32, i32* @ebp, align 4
  %v1_11471 = add i32 %v0_11471, -60
  %v2_11471 = inttoptr i32 %v1_11471 to i32*
  %v3_11471 = load i32, i32* %v2_11471, align 4
  %v1_11474 = add i32 %v3_11471, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_11474 = inttoptr i32 %v1_11474 to i32*
  %v3_11474 = load i32, i32* %v2_11474, align 4
  %v1_1147c = inttoptr i32 %v3_11471 to i32*
  %v2_1147c = load i32, i32* %v1_1147c, align 4
  %v2_11480 = sub i32 %v3_11474, %v2_1147c
  store i32 %v2_11480, i32* @ecx, align 4
  ret i32 %v2_11480

; uselistorder directives
  uselistorder i32 %v0_113f5, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_24e0e, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_22260, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_1e824, { 2, 1, 0 }
}

define i32 @function_1138e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1138e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11486(i32 %arg1) local_unnamed_addr {
dec_label_pc_11486:
  %v0_11486 = load i32, i32* @ebp, align 4
  %v1_11486 = add i32 %v0_11486, -60
  %v2_11486 = inttoptr i32 %v1_11486 to i32*
  %v3_11486 = load i32, i32* %v2_11486, align 4
  %v1_11489 = inttoptr i32 %v3_11486 to i32*
  %v2_11489 = load i32, i32* %v1_11489, align 4
  %v0_1148e = load i32, i32* @ecx, align 4
  %v3_11499 = call i32 @unknown_1e778(i32 %v3_11486, i32 %v2_11489, i32 %v0_1148e)
  %v0_1149e = load i32, i32* @ebp, align 4
  %v1_1149e = add i32 %v0_1149e, -60
  %v2_1149e = inttoptr i32 %v1_1149e to i32*
  %v3_1149e = load i32, i32* %v2_1149e, align 4
  %v1_114a1 = add i32 %v0_1149e, -16
  %v2_114a1 = inttoptr i32 %v1_114a1 to i32*
  %v3_114a1 = load i32, i32* %v2_114a1, align 4
  %v2_114a4 = inttoptr i32 %v3_1149e to i32*
  store i32 %v3_114a1, i32* %v2_114a4, align 4
  %v0_114a6 = load i32, i32* @ebp, align 4
  %v1_114a6 = add i32 %v0_114a6, -60
  %v2_114a6 = inttoptr i32 %v1_114a6 to i32*
  %v3_114a6 = load i32, i32* %v2_114a6, align 4
  %v1_114a9 = add i32 %v0_114a6, -36
  %v2_114a9 = inttoptr i32 %v1_114a9 to i32*
  %v3_114a9 = load i32, i32* %v2_114a9, align 4
  %v2_114ac = add i32 %v3_114a6, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_114ac = inttoptr i32 %v2_114ac to i32*
  store i32 %v3_114a9, i32* %v3_114ac, align 4
  %v0_114af = load i32, i32* @ebp, align 4
  %v1_114af = add i32 %v0_114af, -20
  %v2_114af = inttoptr i32 %v1_114af to i32*
  %v3_114af = load i32, i32* %v2_114af, align 4
  %v1_114b2 = add i32 %v0_114af, -16
  %v2_114b2 = inttoptr i32 %v1_114b2 to i32*
  %v3_114b2 = load i32, i32* %v2_114b2, align 4
  %v2_114b5 = add i32 %v3_114b2, %v3_114af
  %v1_114b7 = add i32 %v0_114af, -60
  %v2_114b7 = inttoptr i32 %v1_114b7 to i32*
  %v3_114b7 = load i32, i32* %v2_114b7, align 4
  store i32 %v3_114b7, i32* @eax, align 4
  %v2_114ba = add i32 %v3_114b7, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_114ba = inttoptr i32 %v2_114ba to i32*
  store i32 %v2_114b5, i32* %v3_114ba, align 4
  %v1_114bd = call i32 @function_11517(i32 %v3_11486)
  ret i32 %v1_114bd

; uselistorder directives
  uselistorder i32 %v3_11486, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_11517, { 3, 0, 1, 2 }
}

define i32 @function_114c0() local_unnamed_addr {
dec_label_pc_114c0:
  %eax.global-to-local = alloca i32, align 4
  %v0_114c0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_114c0
}

define i32 @function_114c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_114c4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_114d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_114d8:
  %v0_114d8 = load i32, i32* @ebp, align 4
  %v1_114d8 = add i32 %v0_114d8, -60
  %v2_114d8 = inttoptr i32 %v1_114d8 to i32*
  %v3_114d8 = load i32, i32* %v2_114d8, align 4
  %v1_114de = call i32 @unknown_1e38a(i32 %v3_114d8)
  %v0_114e7 = load i32, i32* @ebp, align 4
  %v1_114e7 = add i32 %v0_114e7, -36
  %v2_114e7 = inttoptr i32 %v1_114e7 to i32*
  %v3_114e7 = load i32, i32* %v2_114e7, align 4
  %v1_114ee = add i32 %v0_114e7, -16
  %v2_114ee = inttoptr i32 %v1_114ee to i32*
  %v3_114ee = load i32, i32* %v2_114ee, align 4
  %v3_114f4 = call i32 @unknown_1e3b7(i32 %v3_114ee, i32 %v3_114e7, i32 %v1_114de)
  %v0_114f9 = load i32, i32* @ebp, align 4
  %v1_114f9 = add i32 %v0_114f9, -60
  %v2_114f9 = inttoptr i32 %v1_114f9 to i32*
  %v3_114f9 = load i32, i32* %v2_114f9, align 4
  %v1_114fc = add i32 %v0_114f9, -20
  %v2_114fc = inttoptr i32 %v1_114fc to i32*
  %v3_114fc = load i32, i32* %v2_114fc, align 4
  %v1_11503 = add i32 %v0_114f9, -16
  %v2_11503 = inttoptr i32 %v1_11503 to i32*
  %v3_11503 = load i32, i32* %v2_11503, align 4
  %v3_1150d = call i32 @unknown_1e778(i32 %v3_114f9, i32 %v3_11503, i32 %v3_114fc)
  ret i32 %v3_1150d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1e38a, { 3, 7, 6, 5, 4, 2, 1, 0 }
}

define i32 @function_1150c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1150c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1150e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1150e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11517(i32 %arg1) local_unnamed_addr {
dec_label_pc_11517:
  %v0_11517 = load i32, i32* @ebp, align 4
  %v1_11517 = add i32 %v0_11517, -12
  %v2_11517 = inttoptr i32 %v1_11517 to i32*
  %v3_11517 = load i32, i32* %v2_11517, align 4
  %v1_1151a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1151a = xor i32 %v1_1151a, %v3_11517
  %v3_1151a = icmp eq i32 %v2_1151a, 0
  store i32 %v2_1151a, i32* @ebx, align 4
  br i1 %v3_1151a, label %bb, label %dec_label_pc_11517.dec_label_pc_11523_crit_edge

dec_label_pc_11517.dec_label_pc_11523_crit_edge:  ; preds = %dec_label_pc_11517
  %v2_11521.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11523

bb:                                               ; preds = %dec_label_pc_11517
  %v1_11521 = call i32 @function_11528()
  br label %dec_label_pc_11523

dec_label_pc_11523:                               ; preds = %dec_label_pc_11517.dec_label_pc_11523_crit_edge, %bb
  %v2_11521 = phi i32 [ %v2_11521.pre, %dec_label_pc_11517.dec_label_pc_11523_crit_edge ], [ %v1_11521, %bb ]
  ret i32 %v2_11521

; uselistorder directives
  uselistorder label %dec_label_pc_11523, { 1, 0 }
}

define i32 @function_11528() local_unnamed_addr {
dec_label_pc_11528:
  %v0_11528 = load i32, i32* @ebp, align 4
  %v1_11528 = add i32 %v0_11528, -8
  %v1_1152b = inttoptr i32 %v1_11528 to i32*
  %v2_1152b = load i32, i32* %v1_1152b, align 4
  store i32 %v2_1152b, i32* @ebx, align 4
  %v1_1152d = inttoptr i32 %v0_11528 to i32*
  %v2_1152d = load i32, i32* %v1_1152d, align 4
  store i32 %v2_1152d, i32* @ebp, align 4
  %v0_1152e = load i32, i32* @eax, align 4
  ret i32 %v0_1152e
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11530:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_1154d = call i32 @function_198f8(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_1155e = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1155e = inttoptr i32 %v1_1155e to i32*
  store i32 0, i32* %v2_1155e, align 4
  %v1_11568 = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_11568 = inttoptr i32 %v1_11568 to i32*
  store i32 0, i32* %v2_11568, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1157b

bb:                                               ; preds = %dec_label_pc_11530
  %v1_11579 = call i32 @function_11580()
  br label %dec_label_pc_1157b

dec_label_pc_1157b:                               ; preds = %bb, %dec_label_pc_11530
  %v2_11579 = phi i32 [ %v1_11579, %bb ], [ 0, %dec_label_pc_11530 ]
  ret i32 %v2_11579

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_11580() local_unnamed_addr {
dec_label_pc_11580:
  %v0_11581 = load i32, i32* @eax, align 4
  ret i32 %v0_11581
}

define i32 @_ZSt8_DestroyIPhEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11582:
  ret i32 %arg2
}

define i32 @function_11592(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11592:
  %v0_11592 = load i32, i32* @ebp, align 4
  %v1_11592 = add i32 %v0_11592, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_11592, i32* @ebp, align 4
  %v0_11593 = load i32, i32* @ecx, align 4
  %v1_11593 = sub i32 %v0_11593, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_11593, i32* @ecx, align 4
  %v0_11595 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1159a = add i32 %v0_11592, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12)
  %v3_1159a = inttoptr i32 %v2_1159a to i32*
  store i32 %v0_11595, i32* %v3_1159a, align 4
  %v0_1159f = load i32, i32* @ebp, align 4
  %v1_1159f = add i32 %v0_1159f, -32
  %v2_1159f = inttoptr i32 %v1_1159f to i32*
  %v3_1159f = load i32, i32* %v2_1159f, align 4
  %v1_115a6 = add i32 %v0_1159f, -28
  %v2_115a6 = inttoptr i32 %v1_115a6 to i32*
  %v3_115a6 = load i32, i32* %v2_115a6, align 4
  %v2_115ac = call i32 @unknown_257af(i32 %v3_115a6, i32 %v3_1159f)
  %v0_115b1 = load i32, i32* @ebp, align 4
  %v1_115b1 = add i32 %v0_115b1, -12
  %v2_115b1 = inttoptr i32 %v1_115b1 to i32*
  %v3_115b1 = load i32, i32* %v2_115b1, align 4
  %v1_115b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_115b4 = xor i32 %v1_115b4, %v3_115b1
  %v3_115b4 = icmp eq i32 %v2_115b4, 0
  store i32 %v2_115b4, i32* @eax, align 4
  br i1 %v3_115b4, label %bb, label %dec_label_pc_115bd

bb:                                               ; preds = %dec_label_pc_11592
  %v1_115bb = call i32 @function_115c2()
  br label %dec_label_pc_115bd

dec_label_pc_115bd:                               ; preds = %bb, %dec_label_pc_11592
  %v3_115bb = phi i32 [ %v1_115bb, %bb ], [ %v2_115b4, %dec_label_pc_11592 ]
  ret i32 %v3_115bb
}

define i32 @function_115c2() local_unnamed_addr {
dec_label_pc_115c2:
  %v0_115c3 = load i32, i32* @eax, align 4
  ret i32 %v0_115c3
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_115c4:
  %v2_115ee = call i32 @unknown_25822(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_115f8() local_unnamed_addr {
dec_label_pc_115f8:
  %eax.global-to-local = alloca i32, align 4
  %v2_115f8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_115f8 = load i32, i32* %eax.global-to-local, align 4
  %v4_115f8 = trunc i32 %v3_115f8 to i8
  %v5_115f8 = add i8 %v4_115f8, %v2_115f8
  %v21_115f8 = inttoptr i32 %v3_115f8 to i8*
  store i8 %v5_115f8, i8* %v21_115f8, align 1
  %v22_115f8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_115f8
}

define i32 @function_11620() local_unnamed_addr {
dec_label_pc_11620:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11620 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11620 = sub i32 %v0_11620, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_11620, i32* %ecx.global-to-local, align 4
  %v0_11622 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11622
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_11624:
  ret i32 %arg1
}

define i32 @function_11630(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11630:
  %v0_11630 = load i32, i32* @ebp, align 4
  %v1_11630 = add i32 %v0_11630, 12
  %v2_11630 = inttoptr i32 %v1_11630 to i32*
  %v3_11630 = load i32, i32* %v2_11630, align 4
  %v2_11633 = add i32 %v0_11630, -32
  %v3_11633 = inttoptr i32 %v2_11633 to i32*
  store i32 %v3_11630, i32* %v3_11633, align 4
  %v0_11636 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1163c = load i32, i32* @ebp, align 4
  %v2_1163c = add i32 %v1_1163c, -12
  %v3_1163c = inttoptr i32 %v2_1163c to i32*
  store i32 %v0_11636, i32* %v3_1163c, align 4
  %v0_11641 = load i32, i32* @ebp, align 4
  %v1_11641 = add i32 %v0_11641, -32
  %v2_11641 = inttoptr i32 %v1_11641 to i32*
  %v3_11641 = load i32, i32* %v2_11641, align 4
  %v10_11641 = icmp eq i32 %v3_11641, 0
  br i1 %v10_11641, label %dec_label_pc_11668, label %dec_label_pc_11647

dec_label_pc_11647:                               ; preds = %dec_label_pc_11630
  %v1_11647 = add i32 %v0_11641, -28
  %v2_11647 = inttoptr i32 %v1_11647 to i32*
  %v3_11647 = load i32, i32* %v2_11647, align 4
  %v3_11652 = load i32, i32* %v2_11641, align 4
  %v3_1165c = call i32 @unknown_258c4(i32 %v3_11647, i32 %v3_11652, i32 0)
  %v0_11668.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_11668

dec_label_pc_11668:                               ; preds = %dec_label_pc_11630, %dec_label_pc_11647
  %v0_11668 = phi i32 [ %v0_11668.pre, %dec_label_pc_11647 ], [ %v0_11641, %dec_label_pc_11630 ]
  %storemerge = phi i32 [ %v3_1165c, %dec_label_pc_11647 ], [ 0, %dec_label_pc_11630 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_11668 = add i32 %v0_11668, -12
  %v2_11668 = inttoptr i32 %v1_11668 to i32*
  %v3_11668 = load i32, i32* %v2_11668, align 4
  %v1_1166b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1166b = icmp eq i32 %v1_1166b, %v3_11668
  br i1 %v3_1166b, label %bb, label %dec_label_pc_11674

bb:                                               ; preds = %dec_label_pc_11668
  %v1_11672 = call i32 @function_11679()
  br label %dec_label_pc_11674

dec_label_pc_11674:                               ; preds = %bb, %dec_label_pc_11668
  %v2_11672 = phi i32 [ %v1_11672, %bb ], [ %storemerge, %dec_label_pc_11668 ]
  ret i32 %v2_11672

; uselistorder directives
  uselistorder label %dec_label_pc_11668, { 1, 0 }
}

define i32 @function_11679() local_unnamed_addr {
dec_label_pc_11679:
  %v0_1167a = load i32, i32* @eax, align 4
  ret i32 %v0_1167a
}

define i32 @_ZSt24__uninitialized_fill_n_aIPhjhhEvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1167b:
  %v7_116b8 = call i32 @unknown_25976(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_116c9

bb:                                               ; preds = %dec_label_pc_1167b
  %v1_116c7 = call i32 @function_116ce()
  br label %dec_label_pc_116c9

dec_label_pc_116c9:                               ; preds = %bb, %dec_label_pc_1167b
  %v2_116c7 = phi i32 [ %v1_116c7, %bb ], [ 0, %dec_label_pc_1167b ]
  ret i32 %v2_116c7

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_116ce() local_unnamed_addr {
dec_label_pc_116ce:
  %v0_116cf = load i32, i32* @eax, align 4
  ret i32 %v0_116cf
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_116d0:
  ret i32 %arg2
}

define i32 @function_1170e() local_unnamed_addr {
dec_label_pc_1170e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1170e = load i32, i32* %ecx.global-to-local, align 4
  %v1_1170e = sub i32 %v0_1170e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1170e, i32* %ecx.global-to-local, align 4
  %v0_11710 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11710
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11711:
  %v2_1173b = call i32 @unknown_25a5b(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11752

bb:                                               ; preds = %dec_label_pc_11711
  %v1_11750 = call i32 @function_11757()
  br label %dec_label_pc_11752

dec_label_pc_11752:                               ; preds = %bb, %dec_label_pc_11711
  %v2_11750 = phi i32 [ %v1_11750, %bb ], [ %arg1, %dec_label_pc_11711 ]
  ret i32 %v2_11750

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_11757() local_unnamed_addr {
dec_label_pc_11757:
  %v0_11758 = load i32, i32* @eax, align 4
  ret i32 %v0_11758
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_() local_unnamed_addr {
dec_label_pc_1175b:
  %eax.global-to-local = alloca i32, align 4
  %v2_1175c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1175c
}

define i32 @function_1175e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1175e:
  %v0_11763 = load i32, i32* @ebp, align 4
  %v1_11763 = add i32 %v0_11763, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_11763 = inttoptr i32 %v1_11763 to i32*
  %v3_11763 = load i32, i32* %v2_11763, align 4
  %v2_11766 = add i32 %v0_11763, -28
  %v3_11766 = inttoptr i32 %v2_11766 to i32*
  store i32 %v3_11763, i32* %v3_11766, align 4
  %v0_11769 = load i32, i32* @ebp, align 4
  %v1_11769 = add i32 %v0_11769, 12
  %v2_11769 = inttoptr i32 %v1_11769 to i32*
  %v3_11769 = load i32, i32* %v2_11769, align 4
  %v2_1176c = add i32 %v0_11769, -32
  %v3_1176c = inttoptr i32 %v2_1176c to i32*
  store i32 %v3_11769, i32* %v3_1176c, align 4
  %v0_1176f = load i32, i32* @ebp, align 4
  %v1_1176f = add i32 %v0_1176f, 16
  %v2_1176f = inttoptr i32 %v1_1176f to i32*
  %v3_1176f = load i32, i32* %v2_1176f, align 4
  %v2_11772 = add i32 %v0_1176f, -36
  %v3_11772 = inttoptr i32 %v2_11772 to i32*
  store i32 %v3_1176f, i32* %v3_11772, align 4
  %v0_11775 = load i32, i32* @ebp, align 4
  %v1_11775 = add i32 %v0_11775, 20
  %v2_11775 = inttoptr i32 %v1_11775 to i32*
  %v3_11775 = load i32, i32* %v2_11775, align 4
  %v2_11778 = add i32 %v0_11775, -40
  %v3_11778 = inttoptr i32 %v2_11778 to i32*
  store i32 %v3_11775, i32* %v3_11778, align 4
  %v0_1177b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11781 = load i32, i32* @ebp, align 4
  %v2_11781 = add i32 %v1_11781, -12
  %v3_11781 = inttoptr i32 %v2_11781 to i32*
  store i32 %v0_1177b, i32* %v3_11781, align 4
  %v0_11786 = load i32, i32* @ebp, align 4
  %v1_11786 = add i32 %v0_11786, -40
  %v2_11786 = inttoptr i32 %v1_11786 to i32*
  %v3_11786 = load i32, i32* %v2_11786, align 4
  %v1_1178c = call i32 @unknown_25ae2(i32 %v3_11786)
  ret i32 %v1_1178c
}

define i32 @function_11794(i16 %arg1) local_unnamed_addr {
dec_label_pc_11794:
  %ebx.global-to-local = alloca i32, align 4
  %v0_11794 = load i32, i32* @ebp, align 4
  %v1_11794 = add i32 %v0_11794, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_11794, i32* @ebp, align 4
  %v2_1179c = load i32, i32* @eax, align 4
  %v4_1179c = mul i32 %v2_1179c, 2
  %v21_1179c = inttoptr i32 %v2_1179c to i32*
  store i32 %v4_1179c, i32* %v21_1179c, align 4
  %v0_1179e = load i32, i32* @eax, align 4
  store i32 %v0_1179e, i32* %ebx.global-to-local, align 4
  %v0_117a0 = load i32, i32* @ebp, align 4
  %v1_117a0 = add i32 %v0_117a0, -32
  %v2_117a0 = inttoptr i32 %v1_117a0 to i32*
  %v3_117a0 = load i32, i32* %v2_117a0, align 4
  %v1_117a6 = call i32 @unknown_236b6(i32 %v3_117a0)
  %v0_117ab = load i32, i32* @esi, align 4
  %v0_117af = load i32, i32* %ebx.global-to-local, align 4
  %v3_117b6 = call i32 @unknown_25b17(i32 %v1_117a6, i32 %v0_117af, i32 %v0_117ab)
  %v1_117bb = load i32, i32* @ebp, align 4
  %v2_117bb = add i32 %v1_117bb, -16
  %v3_117bb = inttoptr i32 %v2_117bb to i32*
  store i32 %v3_117b6, i32* %v3_117bb, align 4
  %v0_117be = load i32, i32* @ebp, align 4
  %v1_117be = add i32 %v0_117be, -16
  %v1_117c5 = add i32 %v0_117be, -28
  %v2_117c5 = inttoptr i32 %v1_117c5 to i32*
  %v3_117c5 = load i32, i32* %v2_117c5, align 4
  %v2_117cb = call i32 @unknown_1f8c1(i32 %v3_117c5, i32 %v1_117be)
  %v0_117d0 = load i32, i32* @ebp, align 4
  %v1_117d0 = add i32 %v0_117d0, -28
  %v2_117d0 = inttoptr i32 %v1_117d0 to i32*
  %v3_117d0 = load i32, i32* %v2_117d0, align 4
  store i32 %v3_117d0, i32* @eax, align 4
  %v1_117d3 = add i32 %v0_117d0, -12
  %v2_117d3 = inttoptr i32 %v1_117d3 to i32*
  %v3_117d3 = load i32, i32* %v2_117d3, align 4
  %v1_117d6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_117d6 = icmp eq i32 %v1_117d6, %v3_117d3
  br i1 %v3_117d6, label %bb, label %dec_label_pc_117df

bb:                                               ; preds = %dec_label_pc_11794
  %v1_117dd = call i32 @function_117e4()
  br label %dec_label_pc_117df

dec_label_pc_117df:                               ; preds = %bb, %dec_label_pc_11794
  %v2_117dd = phi i32 [ %v1_117dd, %bb ], [ %v3_117d0, %dec_label_pc_11794 ]
  ret i32 %v2_117dd

; uselistorder directives
  uselistorder i32 %v2_1179c, { 1, 0 }
}

define i32 @function_117e4() local_unnamed_addr {
dec_label_pc_117e4:
  %v0_117ea = load i32, i32* @eax, align 4
  ret i32 %v0_117ea
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_117ed:
  ret i32 %arg2
}

define i32 @function_11800(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11800:
  %v0_11800 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11805 = load i32, i32* @ebp, align 4
  %v2_11805 = add i32 %v1_11805, -12
  %v3_11805 = inttoptr i32 %v2_11805 to i32*
  store i32 %v0_11800, i32* %v3_11805, align 4
  %v0_1180a = load i32, i32* @ebp, align 4
  %v1_1180a = add i32 %v0_1180a, -32
  %v2_1180a = inttoptr i32 %v1_1180a to i32*
  %v3_1180a = load i32, i32* %v2_1180a, align 4
  %v1_11811 = add i32 %v0_1180a, -28
  %v2_11811 = inttoptr i32 %v1_11811 to i32*
  %v3_11811 = load i32, i32* %v2_11811, align 4
  %v2_11817 = call i32 @unknown_25bfc(i32 %v3_11811, i32 %v3_1180a)
  %v0_1181c = load i32, i32* @ebp, align 4
  %v1_1181c = add i32 %v0_1181c, -12
  %v2_1181c = inttoptr i32 %v1_1181c to i32*
  %v3_1181c = load i32, i32* %v2_1181c, align 4
  %v1_1181f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1181f = xor i32 %v1_1181f, %v3_1181c
  %v3_1181f = icmp eq i32 %v2_1181f, 0
  store i32 %v2_1181f, i32* @eax, align 4
  br i1 %v3_1181f, label %bb, label %dec_label_pc_11828

bb:                                               ; preds = %dec_label_pc_11800
  %v1_11826 = call i32 @function_1182d()
  br label %dec_label_pc_11828

dec_label_pc_11828:                               ; preds = %bb, %dec_label_pc_11800
  %v2_11826 = phi i32 [ %v1_11826, %bb ], [ %v2_1181f, %dec_label_pc_11800 ]
  ret i32 %v2_11826
}

define i32 @function_1182c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1182c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1182d() local_unnamed_addr {
dec_label_pc_1182d:
  %v0_1182e = load i32, i32* @eax, align 4
  ret i32 %v0_1182e
}

define i32 @_ZSt12__miter_baseIPhENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1182f:
  ret i32 0
}

define i32 @function_11848(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11848:
  %v0_1184c = call i32 @unknown_25c6e()
  store i32 %v0_1184c, i32* @eax, align 4
  %v0_11851 = load i32, i32* @ebp, align 4
  %v1_11851 = add i32 %v0_11851, -12
  %v2_11851 = inttoptr i32 %v1_11851 to i32*
  %v3_11851 = load i32, i32* %v2_11851, align 4
  %v1_11854 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11854 = icmp eq i32 %v1_11854, %v3_11851
  br i1 %v3_11854, label %bb, label %dec_label_pc_1185d

bb:                                               ; preds = %dec_label_pc_11848
  %v1_1185b = call i32 @function_11862()
  br label %dec_label_pc_1185d

dec_label_pc_1185d:                               ; preds = %bb, %dec_label_pc_11848
  %v2_1185b = phi i32 [ %v1_1185b, %bb ], [ %v0_1184c, %dec_label_pc_11848 ]
  ret i32 %v2_1185b
}

define i32 @function_11862() local_unnamed_addr {
dec_label_pc_11862:
  %v0_11863 = load i32, i32* @eax, align 4
  ret i32 %v0_11863
}

define i32 @_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11864:
  %v1_1188f = call i32 @unknown_25cd0(i32 %arg3)
  %v1_1189c = call i32 @unknown_25cd0(i32 %arg2)
  %v1_118a9 = call i32 @unknown_25cd0(i32 %arg1)
  %v3_118b9 = call i32 @unknown_25d05(i32 %v1_118a9, i32 %v1_1189c, i32 %v1_1188f)
  store i32 %v3_118b9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_118ca

bb:                                               ; preds = %dec_label_pc_11864
  %v1_118c8 = call i32 @function_118cf()
  br label %dec_label_pc_118ca

dec_label_pc_118ca:                               ; preds = %bb, %dec_label_pc_11864
  %v2_118c8 = phi i32 [ %v1_118c8, %bb ], [ %v3_118b9, %dec_label_pc_11864 ]
  ret i32 %v2_118c8

; uselistorder directives
  uselistorder i32 (i32)* @unknown_25cd0, { 2, 1, 0 }
}

define i32 @function_118cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_118cc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_118cf() local_unnamed_addr {
dec_label_pc_118cf:
  %v0_118d5 = load i32, i32* @eax, align 4
  ret i32 %v0_118d5
}

define i32 @_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_118d6:
  %v3_1190d = call i32 @unknown_25dca(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1190d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1191e

bb:                                               ; preds = %dec_label_pc_118d6
  %v1_1191c = call i32 @function_11923()
  br label %dec_label_pc_1191e

dec_label_pc_1191e:                               ; preds = %bb, %dec_label_pc_118d6
  %v2_1191c = phi i32 [ %v1_1191c, %bb ], [ %v3_1190d, %dec_label_pc_118d6 ]
  ret i32 %v2_1191c
}

define i32 @function_11923() local_unnamed_addr {
dec_label_pc_11923:
  %v0_11924 = load i32, i32* @eax, align 4
  ret i32 %v0_11924
}

define i32 @_ZNSsC1IPcEET_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11926:
  %v7_11963 = call i32 @unknown_25e69(i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11990() local_unnamed_addr {
dec_label_pc_11990:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11990 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11990 = sub i32 %v0_11990, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_11990, i32* %ecx.global-to-local, align 4
  %v0_11992 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11992
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11993:
  ret i32 %arg1
}

define i32 @function_119b8() local_unnamed_addr {
dec_label_pc_119b8:
  %v0_119b8 = load i32, i32* @edx, align 4
  %v1_119b8 = load i32, i32* @eax, align 4
  %v2_119b8 = add i32 %v1_119b8, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_119b8 = inttoptr i32 %v2_119b8 to i32*
  store i32 %v0_119b8, i32* %v3_119b8, align 4
  %v0_119bb = load i32, i32* @ebp, align 4
  %v1_119bb = add i32 %v0_119bb, -28
  %v2_119bb = inttoptr i32 %v1_119bb to i32*
  %v3_119bb = load i32, i32* %v2_119bb, align 4
  store i32 %v3_119bb, i32* @eax, align 4
  %v1_119be = add i32 %v0_119bb, -12
  %v2_119be = inttoptr i32 %v1_119be to i32*
  %v3_119be = load i32, i32* %v2_119be, align 4
  %v1_119c1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_119c1 = icmp eq i32 %v1_119c1, %v3_119be
  br i1 %v3_119c1, label %bb, label %dec_label_pc_119ca

bb:                                               ; preds = %dec_label_pc_119b8
  %v1_119c8 = call i32 @function_119cf()
  br label %dec_label_pc_119ca

dec_label_pc_119ca:                               ; preds = %bb, %dec_label_pc_119b8
  %v2_119c8 = phi i32 [ %v1_119c8, %bb ], [ %v3_119bb, %dec_label_pc_119b8 ]
  ret i32 %v2_119c8
}

define i32 @function_119cf() local_unnamed_addr {
dec_label_pc_119cf:
  %v0_119d0 = load i32, i32* @eax, align 4
  ret i32 %v0_119d0
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_119d1:
  %v2_119f1 = load i32, i32* %arg2, align 4
  %v2_119f6 = add i32 %arg1, 12
  %v3_119f6 = inttoptr i32 %v2_119f6 to i32*
  store i32 %v2_119f1, i32* %v3_119f6, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11a08

bb:                                               ; preds = %dec_label_pc_119d1
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_11a06 = call i32 @function_11a0d(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %bb, %dec_label_pc_119d1
  %v4_11a06 = phi i32 [ %v3_11a06, %bb ], [ %arg1, %dec_label_pc_119d1 ]
  ret i32 %v4_11a06

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_11a0d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a0d:
  %v0_11a0e = load i32, i32* @eax, align 4
  ret i32 %v0_11a0e
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11a0f:
  %v2_11a2f = load i32, i32* %arg2, align 4
  %v2_11a34 = add i32 %arg1, 16
  %v3_11a34 = inttoptr i32 %v2_11a34 to i32*
  store i32 %v2_11a2f, i32* %v3_11a34, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11a46

bb:                                               ; preds = %dec_label_pc_11a0f
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_11a44 = call i32 @function_11a4b(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_11a46

dec_label_pc_11a46:                               ; preds = %bb, %dec_label_pc_11a0f
  %v4_11a44 = phi i32 [ %v3_11a44, %bb ], [ %arg1, %dec_label_pc_11a0f ]
  ret i32 %v4_11a44

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_11a4b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a4b:
  %v0_11a4c = load i32, i32* @eax, align 4
  ret i32 %v0_11a4c
}

define i32 @_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a4e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_11a80() local_unnamed_addr {
dec_label_pc_11a80:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11a80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11a80 = add i32 %v0_11a80, -532313149
  %v2_11a80 = inttoptr i32 %v1_11a80 to i32*
  %v3_11a80 = load i32, i32* %v2_11a80, align 4
  %v4_11a80 = sub i32 %v3_11a80, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_11a80, i32* %v2_11a80, align 4
  %v0_11a86 = load i32, i32* %eax.global-to-local, align 4
  %v0_11a8a = load i32, i32* %ebx.global-to-local, align 4
  %v2_11a8d = call i32 @unknown_25fe4(i32 %v0_11a8a, i32 %v0_11a86)
  store i32 %v2_11a8d, i32* %eax.global-to-local, align 4
  %v0_11a92 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11a92 = add i32 %v0_11a92, -28
  %v2_11a92 = inttoptr i32 %v1_11a92 to i32*
  %v3_11a92 = load i32, i32* %v2_11a92, align 4
  store i32 %v3_11a92, i32* %eax.global-to-local, align 4
  %v0_11a95 = load i32, i32* %ebx.global-to-local, align 4
  %v2_11a95 = inttoptr i32 %v3_11a92 to i32*
  store i32 %v0_11a95, i32* %v2_11a95, align 4
  %v0_11a97 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11a97 = add i32 %v0_11a97, -12
  %v2_11a97 = inttoptr i32 %v1_11a97 to i32*
  %v3_11a97 = load i32, i32* %v2_11a97, align 4
  store i32 %v3_11a97, i32* %eax.global-to-local, align 4
  %v1_11a9a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11a9a = xor i32 %v1_11a9a, %v3_11a97
  %v3_11a9a = icmp eq i32 %v2_11a9a, 0
  store i32 %v2_11a9a, i32* @eax, align 4
  br i1 %v3_11a9a, label %bb, label %dec_label_pc_11aa3

bb:                                               ; preds = %dec_label_pc_11a80
  %v1_11aa1 = call i32 @function_11ad3()
  store i32 %v1_11aa1, i32* @eax, align 4
  br label %dec_label_pc_11aa3

dec_label_pc_11aa3:                               ; preds = %bb, %dec_label_pc_11a80
  %v0_11aa3 = call i32 @function_11ace()
  store i32 %v0_11aa3, i32* %eax.global-to-local, align 4
  ret i32 %v0_11aa3
}

define i32 @function_11aa6() local_unnamed_addr {
dec_label_pc_11aa6:
  %eax.global-to-local = alloca i32, align 4
  %v0_11aa6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11aa6
}

define i32 @function_11ace() local_unnamed_addr {
dec_label_pc_11ace:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11ad3() local_unnamed_addr {
dec_label_pc_11ad3:
  %v0_11ad8 = load i32, i32* @eax, align 4
  ret i32 %v0_11ad8
}

define i32 @_ZSt3minIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ad9:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_11af9 = inttoptr i32 %arg2 to i32*
  %v2_11af9 = load i32, i32* %v1_11af9, align 4
  %v2_11afe = load i32, i32* %arg1, align 4
  %v7_11b00 = icmp ult i32 %v2_11af9, %v2_11afe
  %v1_11b02 = icmp eq i1 %v7_11b00, false
  %storemerge = select i1 %v1_11b02, i32 %tmp102, i32 %arg2
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11b18

bb:                                               ; preds = %dec_label_pc_11ad9
  %v1_11b16 = call i32 @function_11b1d()
  br label %dec_label_pc_11b18

dec_label_pc_11b18:                               ; preds = %bb, %dec_label_pc_11ad9
  %v2_11b16 = phi i32 [ %v1_11b16, %bb ], [ %storemerge, %dec_label_pc_11ad9 ]
  ret i32 %v2_11b16

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_11b1d() local_unnamed_addr {
dec_label_pc_11b1d:
  %v0_11b1e = load i32, i32* @eax, align 4
  ret i32 %v0_11b1e
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b1f:
  ret i32 %arg2
}

define i32 @function_11b4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b4c:
  %v0_11b4c = load i32, i32* @eax, align 4
  %v0_11b50 = load i32, i32* @ebp, align 4
  %v1_11b50 = add i32 %v0_11b50, -28
  %v2_11b50 = inttoptr i32 %v1_11b50 to i32*
  %v3_11b50 = load i32, i32* %v2_11b50, align 4
  %v2_11b56 = call i32 @unknown_26144(i32 %v3_11b50, i32 %v0_11b4c)
  store i32 %v2_11b56, i32* @eax, align 4
  %v0_11b5b = load i32, i32* @ebp, align 4
  %v1_11b5b = add i32 %v0_11b5b, -12
  %v2_11b5b = inttoptr i32 %v1_11b5b to i32*
  %v3_11b5b = load i32, i32* %v2_11b5b, align 4
  %v1_11b5e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11b5e = icmp eq i32 %v1_11b5e, %v3_11b5b
  br i1 %v3_11b5e, label %bb, label %dec_label_pc_11b67

bb:                                               ; preds = %dec_label_pc_11b4c
  %v1_11b65 = call i32 @function_11b6c()
  br label %dec_label_pc_11b67

dec_label_pc_11b67:                               ; preds = %bb, %dec_label_pc_11b4c
  %v2_11b65 = phi i32 [ %v1_11b65, %bb ], [ %v2_11b56, %dec_label_pc_11b4c ]
  ret i32 %v2_11b65
}

define i32 @function_11b6c() local_unnamed_addr {
dec_label_pc_11b6c:
  %v0_11b6d = load i32, i32* @eax, align 4
  ret i32 %v0_11b6d
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11b6e:
  %v2_11b98 = call i32 @unknown_261e2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11baf

bb:                                               ; preds = %dec_label_pc_11b6e
  %v1_11bad = call i32 @function_11bb4()
  br label %dec_label_pc_11baf

dec_label_pc_11baf:                               ; preds = %bb, %dec_label_pc_11b6e
  %v2_11bad = phi i32 [ %v1_11bad, %bb ], [ %arg1, %dec_label_pc_11b6e ]
  ret i32 %v2_11bad

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_11bb4() local_unnamed_addr {
dec_label_pc_11bb4:
  %v0_11bb5 = load i32, i32* @eax, align 4
  ret i32 %v0_11bb5
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET1_T0_S8_S7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bb8:
  ret i32 %arg1
}

define i32 @function_11bc6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11bc6:
  %v0_11bc6 = load i32, i32* @ebp, align 4
  %v1_11bc6 = add i32 %v0_11bc6, 12
  %v2_11bc6 = inttoptr i32 %v1_11bc6 to i32*
  %v3_11bc6 = load i32, i32* %v2_11bc6, align 4
  %v2_11bc9 = add i32 %v0_11bc6, -32
  %v3_11bc9 = inttoptr i32 %v2_11bc9 to i32*
  store i32 %v3_11bc6, i32* %v3_11bc9, align 4
  %v0_11bcc = load i32, i32* @ebp, align 4
  %v1_11bcc = add i32 %v0_11bcc, 16
  %v2_11bcc = inttoptr i32 %v1_11bcc to i32*
  %v3_11bcc = load i32, i32* %v2_11bcc, align 4
  %v2_11bcf = add i32 %v0_11bcc, -36
  %v3_11bcf = inttoptr i32 %v2_11bcf to i32*
  store i32 %v3_11bcc, i32* %v3_11bcf, align 4
  %v0_11bd2 = load i32, i32* @ebp, align 4
  %v1_11bd2 = add i32 %v0_11bd2, 20
  %v2_11bd2 = inttoptr i32 %v1_11bd2 to i32*
  %v3_11bd2 = load i32, i32* %v2_11bd2, align 4
  %v2_11bd5 = add i32 %v0_11bd2, -40
  %v3_11bd5 = inttoptr i32 %v2_11bd5 to i32*
  store i32 %v3_11bd2, i32* %v3_11bd5, align 4
  %v0_11bd8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11bde = load i32, i32* @ebp, align 4
  %v2_11bde = add i32 %v1_11bde, -12
  %v3_11bde = inttoptr i32 %v2_11bde to i32*
  store i32 %v0_11bd8, i32* %v3_11bde, align 4
  %v0_11be3 = load i32, i32* @ebp, align 4
  %v1_11be3 = add i32 %v0_11be3, -40
  %v2_11be3 = inttoptr i32 %v1_11be3 to i32*
  %v3_11be3 = load i32, i32* %v2_11be3, align 4
  %v1_11be9 = call i32 @unknown_25f3f(i32 %v3_11be3)
  store i32 %v1_11be9, i32* @esi, align 4
  %v0_11bf0 = load i32, i32* @ebp, align 4
  %v1_11bf0 = add i32 %v0_11bf0, -36
  %v2_11bf0 = inttoptr i32 %v1_11bf0 to i32*
  %v3_11bf0 = load i32, i32* %v2_11bf0, align 4
  %v1_11bf6 = call i32 @unknown_25f3f(i32 %v3_11bf0)
  store i32 %v1_11bf6, i32* @ebx, align 4
  %v0_11bfd = load i32, i32* @ebp, align 4
  %v1_11bfd = add i32 %v0_11bfd, -32
  %v2_11bfd = inttoptr i32 %v1_11bfd to i32*
  %v3_11bfd = load i32, i32* %v2_11bfd, align 4
  %v1_11c03 = call i32 @unknown_25f3f(i32 %v3_11bfd)
  %v0_11c08 = load i32, i32* @esi, align 4
  %v0_11c0c = load i32, i32* @ebx, align 4
  %v3_11c13 = call i32 @unknown_26059(i32 %v1_11c03, i32 %v0_11c0c, i32 %v0_11c08)
  %v1_11c18 = load i32, i32* @ebp, align 4
  %v2_11c18 = add i32 %v1_11c18, -16
  %v3_11c18 = inttoptr i32 %v2_11c18 to i32*
  store i32 %v3_11c13, i32* %v3_11c18, align 4
  %v0_11c1b = load i32, i32* @ebp, align 4
  %v1_11c1b = add i32 %v0_11c1b, -16
  %v1_11c22 = add i32 %v0_11c1b, -28
  %v2_11c22 = inttoptr i32 %v1_11c22 to i32*
  %v3_11c22 = load i32, i32* %v2_11c22, align 4
  %v2_11c28 = call i32 @unknown_1fd1e(i32 %v3_11c22, i32 %v1_11c1b)
  %v0_11c2d = load i32, i32* @ebp, align 4
  %v1_11c2d = add i32 %v0_11c2d, -28
  %v2_11c2d = inttoptr i32 %v1_11c2d to i32*
  %v3_11c2d = load i32, i32* %v2_11c2d, align 4
  store i32 %v3_11c2d, i32* @eax, align 4
  %v1_11c30 = add i32 %v0_11c2d, -12
  %v2_11c30 = inttoptr i32 %v1_11c30 to i32*
  %v3_11c30 = load i32, i32* %v2_11c30, align 4
  %v1_11c33 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11c33 = icmp eq i32 %v1_11c33, %v3_11c30
  br i1 %v3_11c33, label %bb, label %dec_label_pc_11c3c

bb:                                               ; preds = %dec_label_pc_11bc6
  %v1_11c3a = call i32 @function_11c41()
  br label %dec_label_pc_11c3c

dec_label_pc_11c3c:                               ; preds = %bb, %dec_label_pc_11bc6
  %v2_11c3a = phi i32 [ %v1_11c3a, %bb ], [ %v3_11c2d, %dec_label_pc_11bc6 ]
  ret i32 %v2_11c3a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_25f3f, { 2, 1, 0 }
}

define i32 @function_11c41() local_unnamed_addr {
dec_label_pc_11c41:
  %v0_11c47 = load i32, i32* @eax, align 4
  ret i32 %v0_11c47
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11c4a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_11c64 = load i32, i32* %arg1, align 4
  %v1_11c66 = add i32 %v2_11c64, -1
  store i32 %v1_11c66, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11c7d

bb:                                               ; preds = %dec_label_pc_11c4a
  %v2_11c7b = call i32 @function_11c82(i32 %tmp100)
  br label %dec_label_pc_11c7d

dec_label_pc_11c7d:                               ; preds = %bb, %dec_label_pc_11c4a
  %v3_11c7b = phi i32 [ %v2_11c7b, %bb ], [ %tmp100, %dec_label_pc_11c4a ]
  ret i32 %v3_11c7b
}

define i32 @function_11c82(i32 %arg1) local_unnamed_addr {
dec_label_pc_11c82:
  %v0_11c83 = load i32, i32* @eax, align 4
  ret i32 %v0_11c83
}

define i32 @_ZN9__gnu_cxxltIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11c84:
  %v1_11ca8 = call i32 @unknown_2008a(i32 %arg1)
  %v1_11cad = inttoptr i32 %v1_11ca8 to i32*
  %v2_11cad = load i32, i32* %v1_11cad, align 4
  %v1_11cb5 = call i32 @unknown_2008a(i32 %arg2)
  %v1_11cba = inttoptr i32 %v1_11cb5 to i32*
  %v2_11cba = load i32, i32* %v1_11cba, align 4
  %v7_11cbc = icmp ult i32 %v2_11cad, %v2_11cba
  %v1_11cbe = zext i1 %v7_11cbc to i32
  %v3_11cbe = and i32 %v2_11cba, -256
  %v4_11cbe = or i32 %v1_11cbe, %v3_11cbe
  store i32 %v4_11cbe, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11ccd

bb:                                               ; preds = %dec_label_pc_11c84
  %v1_11ccb = call i32 @function_11cd2()
  br label %dec_label_pc_11ccd

dec_label_pc_11ccd:                               ; preds = %bb, %dec_label_pc_11c84
  %v2_11ccb = phi i32 [ %v1_11ccb, %bb ], [ %v4_11cbe, %dec_label_pc_11c84 ]
  ret i32 %v2_11ccb

; uselistorder directives
  uselistorder i32 (i32)* @unknown_2008a, { 1, 0 }
}

define i32 @function_11cd2() local_unnamed_addr {
dec_label_pc_11cd2:
  %v0_11cd7 = load i32, i32* @eax, align 4
  ret i32 %v0_11cd7
}

define i32 @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_EvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11cd8:
  %v2_11d02 = call i32 @unknown_26389(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11d13

bb:                                               ; preds = %dec_label_pc_11cd8
  %v1_11d11 = call i32 @function_11d18()
  br label %dec_label_pc_11d13

dec_label_pc_11d13:                               ; preds = %bb, %dec_label_pc_11cd8
  %v2_11d11 = phi i32 [ %v1_11d11, %bb ], [ 0, %dec_label_pc_11cd8 ]
  ret i32 %v2_11d11
}

define i32 @function_11d18() local_unnamed_addr {
dec_label_pc_11d18:
  %v0_11d19 = load i32, i32* @eax, align 4
  ret i32 %v0_11d19
}

define i32 @_ZSt13copy_backwardIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11d1a:
  %v1_11d44 = call i32 @unknown_23549(i32 %arg2)
  %v1_11d51 = call i32 @unknown_23549(i32 %arg1)
  %v3_11d64 = call i32 @unknown_26424(i32 %v1_11d51, i32 %v1_11d44, i32 %arg3)
  store i32 %v3_11d64, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11d75

bb:                                               ; preds = %dec_label_pc_11d1a
  %v1_11d73 = call i32 @function_11d7a()
  br label %dec_label_pc_11d75

dec_label_pc_11d75:                               ; preds = %bb, %dec_label_pc_11d1a
  %v2_11d73 = phi i32 [ %v1_11d73, %bb ], [ %v3_11d64, %dec_label_pc_11d1a ]
  ret i32 %v2_11d73

; uselistorder directives
  uselistorder i32 (i32)* @unknown_23549, { 1, 0 }
}

define i32 @function_11d7a() local_unnamed_addr {
dec_label_pc_11d7a:
  %v0_11d7f = load i32, i32* @eax, align 4
  ret i32 %v0_11d7f
}

define i32 @_ZNKSt6vectorIhSaIhEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11d80:
  %v1_11daa = call i32 @unknown_264fc(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11db6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11db6:
  %v0_11db6 = load i32, i32* @eax, align 4
  %v11_11db6 = and i32 %v0_11db6, -24
  store i32 %v11_11db6, i32* @eax, align 4
  %v0_11db8 = load i32, i32* @edx, align 4
  %v1_11db8 = trunc i32 %v0_11db8 to i16
  %v4_11db8 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_11db8, i8 %v4_11db8)
  %v0_11dbb = load i32, i32* @ecx, align 4
  %v1_11dbb = add i32 %v0_11dbb, -1950209574
  %v2_11dbb = inttoptr i32 %v1_11dbb to i8*
  %v3_11dbb = load i8, i8* %v2_11dbb, align 1
  %v5_11dbb = trunc i32 %v0_11dbb to i8
  %v6_11dbb = add i8 %v3_11dbb, %v5_11dbb
  store i8 %v6_11dbb, i8* %v2_11dbb, align 1
  %v0_11dc1 = load i32, i32* @ebp, align 4
  %v1_11dc1 = add i32 %v0_11dc1, ptrtoint (i8** @global_var_1.1176 to i32)
  %v9_11dc1 = icmp eq i32 %v1_11dc1, 0
  store i32 %v1_11dc1, i32* @ebp, align 4
  %v0_11dc2 = load i32, i32* @ecx, align 4
  %v2_11dc2 = icmp eq i32 %v0_11dc2, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_11dc2 = or i1 %v9_11dc1, %v2_11dc2
  br i1 %v4_11dc2, label %dec_label_pc_11db6.dec_label_pc_11dc4_crit_edge, label %bb

dec_label_pc_11db6.dec_label_pc_11dc4_crit_edge:  ; preds = %dec_label_pc_11db6
  %v0_11dc4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11dc4

bb:                                               ; preds = %dec_label_pc_11db6
  %v6_11dc2 = call i32 @function_11dfd()
  br label %dec_label_pc_11dc4

dec_label_pc_11dc4:                               ; preds = %dec_label_pc_11db6.dec_label_pc_11dc4_crit_edge, %bb
  %v0_11dc4 = phi i32 [ %v0_11dc4.pre, %dec_label_pc_11db6.dec_label_pc_11dc4_crit_edge ], [ %v6_11dc2, %bb ]
  ret i32 %v0_11dc4

; uselistorder directives
  uselistorder label %dec_label_pc_11dc4, { 1, 0 }
}

define i32 @function_11de3() local_unnamed_addr {
dec_label_pc_11de3:
  %eax.global-to-local = alloca i32, align 4
  %v0_11de3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11de3
}

define i32 @function_11dfd() local_unnamed_addr {
dec_label_pc_11dfd:
  %v0_11dff = call i32 @unknown_25e1c()
  %v1_11e04 = inttoptr i32 %v0_11dff to i32*
  %v2_11e04 = load i32, i32* %v1_11e04, align 4
  %v1_11e06 = load i32, i32* @ebx, align 4
  %v2_11e06 = add i32 %v1_11e06, %v2_11e04
  %v1_11e08 = load i32, i32* @ebp, align 4
  %v2_11e08 = add i32 %v1_11e08, -16
  %v3_11e08 = inttoptr i32 %v2_11e08 to i32*
  store i32 %v2_11e06, i32* %v3_11e08, align 4
  %v0_11e0b = load i32, i32* @ebp, align 4
  %v1_11e0b = add i32 %v0_11e0b, -28
  %v2_11e0b = inttoptr i32 %v1_11e0b to i32*
  %v3_11e0b = load i32, i32* %v2_11e0b, align 4
  %v1_11e11 = call i32 @function_1962a(i32 %v3_11e0b)
  %v1_11e16 = load i32, i32* @ebp, align 4
  %v2_11e16 = add i32 %v1_11e16, -16
  %v3_11e16 = inttoptr i32 %v2_11e16 to i32*
  %v4_11e16 = load i32, i32* %v3_11e16, align 4
  %tmp5 = icmp ugt i32 %v1_11e11, %v4_11e16
  br i1 %tmp5, label %dec_label_pc_11e2b, label %dec_label_pc_11e1b

dec_label_pc_11e1b:                               ; preds = %dec_label_pc_11dfd
  %v1_11e1b = add i32 %v1_11e16, -28
  %v2_11e1b = inttoptr i32 %v1_11e1b to i32*
  %v3_11e1b = load i32, i32* %v2_11e1b, align 4
  %v1_11e21 = call i32 @unknown_264fc(i32 %v3_11e1b)
  %v1_11e26 = load i32, i32* @ebp, align 4
  %v2_11e26 = add i32 %v1_11e26, -16
  %v3_11e26 = inttoptr i32 %v2_11e26 to i32*
  %v4_11e26 = load i32, i32* %v3_11e26, align 4
  %v10_11e26 = icmp ult i32 %v1_11e21, %v4_11e26
  %v1_11e29 = icmp eq i1 %v10_11e26, false
  br i1 %v1_11e29, label %dec_label_pc_11e3b, label %dec_label_pc_11e2b

dec_label_pc_11e2b:                               ; preds = %dec_label_pc_11dfd, %dec_label_pc_11e1b
  %v0_11e2b = phi i32 [ %v1_11e16, %dec_label_pc_11dfd ], [ %v1_11e26, %dec_label_pc_11e1b ]
  %v1_11e2b = add i32 %v0_11e2b, -28
  %v2_11e2b = inttoptr i32 %v1_11e2b to i32*
  %v3_11e2b = load i32, i32* %v2_11e2b, align 4
  %v1_11e31 = call i32 @unknown_264fc(i32 %v3_11e2b)
  %v0_11e3b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_11e3b

dec_label_pc_11e3b:                               ; preds = %dec_label_pc_11e1b, %dec_label_pc_11e2b
  %v0_11e3b = phi i32 [ %v0_11e3b.pre, %dec_label_pc_11e2b ], [ %v1_11e26, %dec_label_pc_11e1b ]
  %storemerge = phi i32 [ %v1_11e31, %dec_label_pc_11e2b ], [ %v4_11e26, %dec_label_pc_11e1b ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_11e3b = add i32 %v0_11e3b, -12
  %v2_11e3b = inttoptr i32 %v1_11e3b to i32*
  %v3_11e3b = load i32, i32* %v2_11e3b, align 4
  %v1_11e3e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11e3e = icmp eq i32 %v1_11e3e, %v3_11e3b
  br i1 %v3_11e3e, label %bb, label %dec_label_pc_11e47

bb:                                               ; preds = %dec_label_pc_11e3b
  %v1_11e45 = call i32 @function_11e4c()
  br label %dec_label_pc_11e47

dec_label_pc_11e47:                               ; preds = %bb, %dec_label_pc_11e3b
  %v2_11e45 = phi i32 [ %v1_11e45, %bb ], [ %storemerge, %dec_label_pc_11e3b ]
  ret i32 %v2_11e45

; uselistorder directives
  uselistorder i32 (i32)* @unknown_264fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e3b, { 1, 0 }
  uselistorder label %dec_label_pc_11e2b, { 1, 0 }
}

define i32 @function_11e4c() local_unnamed_addr {
dec_label_pc_11e4c:
  %v0_11e51 = load i32, i32* @eax, align 4
  ret i32 %v0_11e51
}

define i32 @_ZSt22__uninitialized_move_aIPhS0_SaIhEET0_T_S3_S2_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11e52:
  %v8_11e96 = call i32 @unknown_1fc23(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_11e96, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11ea7

bb:                                               ; preds = %dec_label_pc_11e52
  %v1_11ea5 = call i32 @function_11eac()
  br label %dec_label_pc_11ea7

dec_label_pc_11ea7:                               ; preds = %bb, %dec_label_pc_11e52
  %v2_11ea5 = phi i32 [ %v1_11ea5, %bb ], [ %v8_11e96, %dec_label_pc_11e52 ]
  ret i32 %v2_11ea5

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11eac() local_unnamed_addr {
dec_label_pc_11eac:
  %v0_11ead = load i32, i32* @eax, align 4
  ret i32 %v0_11ead
}

define i32 @_ZNSt6vectorIhSaIhEE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag() local_unnamed_addr {
dec_label_pc_11eae:
  %eax.global-to-local = alloca i32, align 4
  %v17_11eb1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_11eb1
}

define i32 @function_11eb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_11eb4:
  %v0_11eb4 = load i32, i32* @ebp, align 4
  %v1_11eb4 = add i32 %v0_11eb4, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_11eb4 = inttoptr i32 %v1_11eb4 to i32*
  %v3_11eb4 = load i32, i32* %v2_11eb4, align 4
  %v2_11eb7 = add i32 %v0_11eb4, -28
  %v3_11eb7 = inttoptr i32 %v2_11eb7 to i32*
  store i32 %v3_11eb4, i32* %v3_11eb7, align 4
  %v0_11eba = load i32, i32* @ebp, align 4
  %v1_11eba = add i32 %v0_11eba, 12
  %v2_11eba = inttoptr i32 %v1_11eba to i32*
  %v3_11eba = load i32, i32* %v2_11eba, align 4
  %v2_11ebd = add i32 %v0_11eba, -32
  %v3_11ebd = inttoptr i32 %v2_11ebd to i32*
  store i32 %v3_11eba, i32* %v3_11ebd, align 4
  %v0_11ec0 = load i32, i32* @ebp, align 4
  %v1_11ec0 = add i32 %v0_11ec0, 16
  %v2_11ec0 = inttoptr i32 %v1_11ec0 to i32*
  %v3_11ec0 = load i32, i32* %v2_11ec0, align 4
  %v2_11ec3 = add i32 %v0_11ec0, -36
  %v3_11ec3 = inttoptr i32 %v2_11ec3 to i32*
  store i32 %v3_11ec0, i32* %v3_11ec3, align 4
  %v0_11ec6 = load i32, i32* @ebp, align 4
  %v1_11ec6 = add i32 %v0_11ec6, 20
  %v2_11ec6 = inttoptr i32 %v1_11ec6 to i8*
  %v3_11ec6 = load i8, i8* %v2_11ec6, align 1
  %v3_11eca = add i32 %v0_11ec6, -37
  %v4_11eca = inttoptr i32 %v3_11eca to i8*
  store i8 %v3_11ec6, i8* %v4_11eca, align 1
  %v0_11ecd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_11ed3 = load i32, i32* @ebp, align 4
  %v2_11ed3 = add i32 %v1_11ed3, -12
  %v3_11ed3 = inttoptr i32 %v2_11ed3 to i32*
  store i32 %v0_11ecd, i32* %v3_11ed3, align 4
  %v0_11ed8 = load i32, i32* @ebp, align 4
  %v1_11ed8 = add i32 %v0_11ed8, -36
  %v2_11ed8 = inttoptr i32 %v1_11ed8 to i32*
  %v3_11ed8 = load i32, i32* %v2_11ed8, align 4
  %v1_11edf = add i32 %v0_11ed8, -32
  %v2_11edf = inttoptr i32 %v1_11edf to i32*
  %v3_11edf = load i32, i32* %v2_11edf, align 4
  %v2_11ee5 = call i32 @unknown_26667(i32 %v3_11edf, i32 %v3_11ed8)
  %v1_11eea = load i32, i32* @ebp, align 4
  %v2_11eea = add i32 %v1_11eea, -16
  %v3_11eea = inttoptr i32 %v2_11eea to i32*
  store i32 %v2_11ee5, i32* %v3_11eea, align 4
  %v0_11eed = load i32, i32* @ebp, align 4
  %v1_11eed = add i32 %v0_11eed, -28
  %v2_11eed = inttoptr i32 %v1_11eed to i32*
  %v3_11eed = load i32, i32* %v2_11eed, align 4
  %v1_11ef0 = add i32 %v0_11eed, -16
  %v2_11ef0 = inttoptr i32 %v1_11ef0 to i32*
  %v3_11ef0 = load i32, i32* %v2_11ef0, align 4
  %v2_11efa = call i32 @unknown_234d2(i32 %v3_11eed, i32 %v3_11ef0)
  %v0_11f01 = load i32, i32* @ebp, align 4
  %v1_11f01 = add i32 %v0_11f01, -28
  %v2_11f01 = inttoptr i32 %v1_11f01 to i32*
  %v3_11f01 = load i32, i32* %v2_11f01, align 4
  %v2_11f04 = inttoptr i32 %v3_11f01 to i32*
  store i32 %v2_11efa, i32* %v2_11f04, align 4
  %v0_11f06 = load i32, i32* @ebp, align 4
  %v1_11f06 = add i32 %v0_11f06, -28
  %v2_11f06 = inttoptr i32 %v1_11f06 to i32*
  %v3_11f06 = load i32, i32* %v2_11f06, align 4
  %v1_11f09 = inttoptr i32 %v3_11f06 to i32*
  %v2_11f09 = load i32, i32* %v1_11f09, align 4
  %v2_11f0d = add i32 %v0_11f06, -16
  %v3_11f0d = inttoptr i32 %v2_11f0d to i32*
  %v4_11f0d = load i32, i32* %v3_11f0d, align 4
  %v5_11f0d = add i32 %v4_11f0d, %v2_11f09
  %v3_11f10 = load i32, i32* %v2_11f06, align 4
  %v2_11f13 = add i32 %v3_11f10, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_11f13 = inttoptr i32 %v2_11f13 to i32*
  store i32 %v5_11f0d, i32* %v3_11f13, align 4
  %v0_11f16 = load i32, i32* @ebp, align 4
  %v1_11f16 = add i32 %v0_11f16, -28
  %v2_11f16 = inttoptr i32 %v1_11f16 to i32*
  %v3_11f16 = load i32, i32* %v2_11f16, align 4
  %v1_11f1c = call i32 @unknown_1f826(i32 %v3_11f16)
  %v0_11f21 = load i32, i32* @ebp, align 4
  %v1_11f21 = add i32 %v0_11f21, -28
  %v2_11f21 = inttoptr i32 %v1_11f21 to i32*
  %v3_11f21 = load i32, i32* %v2_11f21, align 4
  %v1_11f24 = inttoptr i32 %v3_11f21 to i32*
  %v2_11f24 = load i32, i32* %v1_11f24, align 4
  %v1_11f2e = add i32 %v0_11f21, -36
  %v2_11f2e = inttoptr i32 %v1_11f2e to i32*
  %v3_11f2e = load i32, i32* %v2_11f2e, align 4
  %v1_11f35 = add i32 %v0_11f21, -32
  %v2_11f35 = inttoptr i32 %v1_11f35 to i32*
  %v3_11f35 = load i32, i32* %v2_11f35, align 4
  %v4_11f3b = call i32 @unknown_2011f(i32 %v3_11f35, i32 %v3_11f2e, i32 %v2_11f24, i32 %v1_11f1c)
  %v0_11f42 = load i32, i32* @ebp, align 4
  %v1_11f42 = add i32 %v0_11f42, -28
  %v2_11f42 = inttoptr i32 %v1_11f42 to i32*
  %v3_11f42 = load i32, i32* %v2_11f42, align 4
  %v2_11f45 = add i32 %v3_11f42, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_11f45 = inttoptr i32 %v2_11f45 to i32*
  store i32 %v4_11f3b, i32* %v3_11f45, align 4
  %v0_11f48 = load i32, i32* @ebp, align 4
  %v1_11f48 = add i32 %v0_11f48, -12
  %v2_11f48 = inttoptr i32 %v1_11f48 to i32*
  %v3_11f48 = load i32, i32* %v2_11f48, align 4
  %v1_11f4b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11f4b = xor i32 %v1_11f4b, %v3_11f48
  %v3_11f4b = icmp eq i32 %v2_11f4b, 0
  store i32 %v2_11f4b, i32* @eax, align 4
  br i1 %v3_11f4b, label %bb, label %dec_label_pc_11f54

bb:                                               ; preds = %dec_label_pc_11eb4
  %v1_11f52 = call i32 @function_11f59()
  br label %dec_label_pc_11f54

dec_label_pc_11f54:                               ; preds = %bb, %dec_label_pc_11eb4
  %v4_11f52 = phi i32 [ %v1_11f52, %bb ], [ %v2_11f4b, %dec_label_pc_11eb4 ]
  ret i32 %v4_11f52

; uselistorder directives
  uselistorder i32 %v0_11f21, { 1, 0, 2 }
}

define i32 @function_11f59() local_unnamed_addr {
dec_label_pc_11f59:
  %v0_11f5a = load i32, i32* @eax, align 4
  ret i32 %v0_11f5a
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f5b:
  %v1_11f78 = call i32 @unknown_267ec(i32 %arg1)
  store i32 %v1_11f78, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11f89

bb:                                               ; preds = %dec_label_pc_11f5b
  %v1_11f87 = call i32 @function_11f8e()
  br label %dec_label_pc_11f89

dec_label_pc_11f89:                               ; preds = %bb, %dec_label_pc_11f5b
  %v2_11f87 = phi i32 [ %v1_11f87, %bb ], [ %v1_11f78, %dec_label_pc_11f5b ]
  ret i32 %v2_11f87
}

define i32 @function_11f8e() local_unnamed_addr {
dec_label_pc_11f8e:
  %v0_11f8f = load i32, i32* @eax, align 4
  ret i32 %v0_11f8f
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11f90:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_11fad = call i32 @function_1b9a8(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_11fbe = add i32 %tmp100, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_11fbe = inttoptr i32 %v1_11fbe to i32*
  store i32 0, i32* %v2_11fbe, align 4
  %v1_11fc8 = add i32 %tmp100, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_11fc8 = inttoptr i32 %v1_11fc8 to i32*
  store i32 0, i32* %v2_11fc8, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11fdb

bb:                                               ; preds = %dec_label_pc_11f90
  %v1_11fd9 = call i32 @function_11fe0()
  br label %dec_label_pc_11fdb

dec_label_pc_11fdb:                               ; preds = %bb, %dec_label_pc_11f90
  %v2_11fd9 = phi i32 [ %v1_11fd9, %bb ], [ 0, %dec_label_pc_11f90 ]
  ret i32 %v2_11fd9

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_11fe0() local_unnamed_addr {
dec_label_pc_11fe0:
  %v0_11fe1 = load i32, i32* @eax, align 4
  ret i32 %v0_11fe1
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11fe2:
  %v10_12005 = icmp eq i32 %arg2, 0
  br i1 %v10_12005, label %dec_label_pc_12024, label %dec_label_pc_1200b

dec_label_pc_1200b:                               ; preds = %dec_label_pc_11fe2
  %v3_1201f = call i32 @unknown_268aa(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_12024

dec_label_pc_12024:                               ; preds = %dec_label_pc_1200b, %dec_label_pc_11fe2
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12030

bb:                                               ; preds = %dec_label_pc_12024
  %v1_1202e = call i32 @function_12035()
  br label %dec_label_pc_12030

dec_label_pc_12030:                               ; preds = %bb, %dec_label_pc_12024
  %v2_1202e = phi i32 [ %v1_1202e, %bb ], [ 0, %dec_label_pc_12024 ]
  ret i32 %v2_1202e
}

define i32 @function_12035() local_unnamed_addr {
dec_label_pc_12035:
  %v0_12036 = load i32, i32* @eax, align 4
  ret i32 %v0_12036
}

define i32 @_ZSt8_DestroyIP6CTxOutEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12037:
  ret i32 %arg2
}

define i32 @function_1205c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1205c:
  %v0_1205c = load i32, i32* @ebp, align 4
  %v1_1205c = add i32 %v0_1205c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1205c, i32* @ebp, align 4
  %v0_12061 = call i32 @unknown_26940()
  %v0_12066 = load i32, i32* @ebp, align 4
  %v1_12066 = add i32 %v0_12066, -12
  %v2_12066 = inttoptr i32 %v1_12066 to i32*
  %v3_12066 = load i32, i32* %v2_12066, align 4
  %v1_12069 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12069 = xor i32 %v1_12069, %v3_12066
  %v3_12069 = icmp eq i32 %v2_12069, 0
  store i32 %v2_12069, i32* @eax, align 4
  br i1 %v3_12069, label %bb, label %dec_label_pc_12072

bb:                                               ; preds = %dec_label_pc_1205c
  %v1_12070 = call i32 @function_12077()
  br label %dec_label_pc_12072

dec_label_pc_12072:                               ; preds = %bb, %dec_label_pc_1205c
  %v2_12070 = phi i32 [ %v1_12070, %bb ], [ %v2_12069, %dec_label_pc_1205c ]
  ret i32 %v2_12070
}

define i32 @function_12077() local_unnamed_addr {
dec_label_pc_12077:
  %v0_12078 = load i32, i32* @eax, align 4
  ret i32 %v0_12078
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1207a:
  %v1_1209a = inttoptr i32 %arg2 to i32*
  %v2_1209a = load i32, i32* %v1_1209a, align 4
  store i32 %v2_1209a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_120ad

bb:                                               ; preds = %dec_label_pc_1207a
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_120ab = call i32 @function_120b2(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_120ad

dec_label_pc_120ad:                               ; preds = %bb, %dec_label_pc_1207a
  %v4_120ab = phi i32 [ %v3_120ab, %bb ], [ 0, %dec_label_pc_1207a ]
  ret i32 %v4_120ab

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_120b2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_120b2:
  %v0_120b3 = load i32, i32* @eax, align 4
  ret i32 %v0_120b3
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_120b4:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_120da

bb:                                               ; preds = %dec_label_pc_120b4
  %v2_120d8 = call i32 @function_120df(i32 %arg1)
  br label %dec_label_pc_120da

dec_label_pc_120da:                               ; preds = %bb, %dec_label_pc_120b4
  %v3_120d8 = phi i32 [ %v2_120d8, %bb ], [ %arg1, %dec_label_pc_120b4 ]
  ret i32 %v3_120d8
}

define i32 @function_120df(i32 %arg1) local_unnamed_addr {
dec_label_pc_120df:
  %v0_120e0 = load i32, i32* @eax, align 4
  ret i32 %v0_120e0
}

define i32 @_ZNK7CVarIntIyE16GetSerializeSizeEii(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_120e2:
  %v2_12108 = load i32, i32* %arg1, align 4
  %v1_1210a = add i32 %v2_12108, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1210a = inttoptr i32 %v1_1210a to i32*
  %v3_1210a = load i32, i32* %v2_1210a, align 4
  %v1_1210d = inttoptr i32 %v2_12108 to i32*
  %v2_1210d = load i32, i32* %v1_1210d, align 4
  %v2_12116 = call i32 @unknown_26a41(i32 %v2_1210d, i32 %v3_1210a)
  store i32 %v2_12116, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12127

bb:                                               ; preds = %dec_label_pc_120e2
  %v1_12125 = call i32 @function_1212c()
  br label %dec_label_pc_12127

dec_label_pc_12127:                               ; preds = %bb, %dec_label_pc_120e2
  %v2_12125 = phi i32 [ %v1_12125, %bb ], [ %v2_12116, %dec_label_pc_120e2 ]
  ret i32 %v2_12125
}

define i32 @function_1212c() local_unnamed_addr {
dec_label_pc_1212c:
  %v0_1212d = load i32, i32* @eax, align 4
  ret i32 %v0_1212d
}

define i32 @_Z15GetSizeOfVarIntIiEjT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1212e:
  %v7_12154108 = icmp sgt i32 %arg1, 127
  br i1 %v7_12154108, label %dec_label_pc_12156, label %dec_label_pc_12164

dec_label_pc_12156:                               ; preds = %dec_label_pc_1212e, %dec_label_pc_12156
  %v5_1214c110 = phi i32 [ %v5_1214c, %dec_label_pc_12156 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_1212e ]
  %stack_var_-32.0109 = phi i32 [ %v1_1215c, %dec_label_pc_12156 ], [ %arg1, %dec_label_pc_1212e ]
  %v2_12159 = sdiv i32 %stack_var_-32.0109, 128
  %v1_1215c = add nsw i32 %v2_12159, -1
  %v5_1214c = add i32 %v5_1214c110, ptrtoint (i8** @global_var_1.1176 to i32)
  %v7_12154 = icmp sgt i32 %v1_1215c, 127
  br i1 %v7_12154, label %dec_label_pc_12156, label %dec_label_pc_12164

dec_label_pc_12164:                               ; preds = %dec_label_pc_12156, %dec_label_pc_1212e
  %v5_1214c.lcssa = phi i32 [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_1212e ], [ %v5_1214c, %dec_label_pc_12156 ]
  store i32 %v5_1214c.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12174

bb:                                               ; preds = %dec_label_pc_12164
  %v3_12172 = call i32 @function_12179(i32 %v5_1214c.lcssa)
  br label %dec_label_pc_12174

dec_label_pc_12174:                               ; preds = %bb, %dec_label_pc_12164
  %v4_12172 = phi i32 [ %v3_12172, %bb ], [ %v5_1214c.lcssa, %dec_label_pc_12164 ]
  ret i32 %v4_12172

; uselistorder directives
  uselistorder i32 %v5_1214c.lcssa, { 2, 1, 0 }
  uselistorder i32 %v1_1215c, { 1, 0 }
  uselistorder label %dec_label_pc_12156, { 1, 0 }
}

define i32 @function_12179(i32 %arg1) local_unnamed_addr {
dec_label_pc_12179:
  %v0_1217a = load i32, i32* @eax, align 4
  ret i32 %v0_1217a
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1217c:
  ret i32 %arg2
}

define i32 @function_12192(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_12192:
  %v2_12192 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_12192 = load i32, i32* @eax, align 4
  %v4_12192 = trunc i32 %v3_12192 to i8
  %v5_12192 = add i8 %v4_12192, %v2_12192
  %v21_12192 = inttoptr i32 %v3_12192 to i8*
  store i8 %v5_12192, i8* %v21_12192, align 1
  %v0_12194 = load i32, i32* @eax, align 4
  %v1_12194 = load i32, i32* @ebp, align 4
  %v2_12194 = add i32 %v1_12194, -12
  %v3_12194 = inttoptr i32 %v2_12194 to i32*
  store i32 %v0_12194, i32* %v3_12194, align 4
  %v0_12199 = load i32, i32* @ebp, align 4
  %v1_12199 = add i32 %v0_12199, -32
  %v2_12199 = inttoptr i32 %v1_12199 to i32*
  %v3_12199 = load i32, i32* %v2_12199, align 4
  %v1_121a0 = add i32 %v0_12199, -28
  %v2_121a0 = inttoptr i32 %v1_121a0 to i32*
  %v3_121a0 = load i32, i32* %v2_121a0, align 4
  %v2_121a6 = call i32 @unknown_26b48(i32 %v3_121a0, i32 %v3_12199)
  %v0_121ab = load i32, i32* @ebp, align 4
  %v1_121ab = add i32 %v0_121ab, -28
  %v2_121ab = inttoptr i32 %v1_121ab to i32*
  %v3_121ab = load i32, i32* %v2_121ab, align 4
  %v1_121ae = inttoptr i32 %v3_121ab to i32*
  store i32 0, i32* %v1_121ae, align 4
  %v0_121b4 = load i32, i32* @ebp, align 4
  %v1_121b4 = add i32 %v0_121b4, -28
  %v2_121b4 = inttoptr i32 %v1_121b4 to i32*
  %v3_121b4 = load i32, i32* %v2_121b4, align 4
  %v1_121b7 = add i32 %v3_121b4, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_121b7 = inttoptr i32 %v1_121b7 to i32*
  store i32 0, i32* %v2_121b7, align 4
  %v0_121be = load i32, i32* @ebp, align 4
  %v1_121be = add i32 %v0_121be, -28
  %v2_121be = inttoptr i32 %v1_121be to i32*
  %v3_121be = load i32, i32* %v2_121be, align 4
  %v1_121c1 = add i32 %v3_121be, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_121c1 = inttoptr i32 %v1_121c1 to i32*
  store i32 0, i32* %v2_121c1, align 4
  %v0_121c8 = load i32, i32* @ebp, align 4
  %v1_121c8 = add i32 %v0_121c8, -12
  %v2_121c8 = inttoptr i32 %v1_121c8 to i32*
  %v3_121c8 = load i32, i32* %v2_121c8, align 4
  ret i32 %v3_121c8
}

define i32 @function_1219a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1219a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_121ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_121ce:
  %v0_121ce = load i32, i32* @eax, align 4
  %v2_121ce = load i1, i1* @cf, align 1
  %v3_121ce = zext i1 %v2_121ce to i32
  %v4_121ce = add i32 %v3_121ce, %v0_121ce
  %v22_121ce = and i32 %v4_121ce, 255
  %v24_121ce = and i32 %v0_121ce, -256
  %v25_121ce = or i32 %v22_121ce, %v24_121ce
  ret i32 %v25_121ce

; uselistorder directives
  uselistorder i32 %v0_121ce, { 1, 0 }
}

define i32 @function_121d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_121d0:
  %zf.global-to-local = alloca i1, align 1
  %v2_121d0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_121d0 = load i32, i32* @eax, align 4
  %v4_121d0 = trunc i32 %v3_121d0 to i8
  %v5_121d0 = add i8 %v4_121d0, %v2_121d0
  %v15_121d0 = icmp eq i8 %v5_121d0, 0
  store i1 %v15_121d0, i1* %zf.global-to-local, align 1
  %v21_121d0 = inttoptr i32 %v3_121d0 to i8*
  store i8 %v5_121d0, i8* %v21_121d0, align 1
  %v0_121d2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_121d2, label %bb, label %dec_label_pc_121d0.dec_label_pc_121d4_crit_edge

dec_label_pc_121d0.dec_label_pc_121d4_crit_edge:  ; preds = %dec_label_pc_121d0
  %v2_121d2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_121d4

bb:                                               ; preds = %dec_label_pc_121d0
  %v1_121d2 = call i32 @function_121d9()
  br label %dec_label_pc_121d4

dec_label_pc_121d4:                               ; preds = %dec_label_pc_121d0.dec_label_pc_121d4_crit_edge, %bb
  %v2_121d2 = phi i32 [ %v2_121d2.pre, %dec_label_pc_121d0.dec_label_pc_121d4_crit_edge ], [ %v1_121d2, %bb ]
  ret i32 %v2_121d2

; uselistorder directives
  uselistorder label %dec_label_pc_121d4, { 1, 0 }
}

define i32 @function_121d9() local_unnamed_addr {
dec_label_pc_121d9:
  %v0_121da = load i32, i32* @eax, align 4
  ret i32 %v0_121da
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_121dc:
  %v10_121f9 = icmp eq i32 %arg2, 0
  br i1 %v10_121f9, label %dec_label_pc_12220, label %dec_label_pc_121ff

dec_label_pc_121ff:                               ; preds = %dec_label_pc_121dc
  %v3_12214 = call i32 @unknown_26bea(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_12220

dec_label_pc_12220:                               ; preds = %dec_label_pc_121dc, %dec_label_pc_121ff
  %storemerge = phi i32 [ %v3_12214, %dec_label_pc_121ff ], [ 0, %dec_label_pc_121dc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_12220, { 1, 0 }
}

define i32 @function_12226(i32 %arg1) local_unnamed_addr {
dec_label_pc_12226:
  %zf.global-to-local = alloca i1, align 1
  %v0_12226 = load i32, i32* @eax, align 4
  %v1_12226 = trunc i32 %v0_12226 to i8
  %v2_12226 = load i1, i1* @cf, align 1
  %v3_12226 = zext i1 %v2_12226 to i8
  %v4_12226 = add i8 %v3_12226, %v1_12226
  %v13_12226 = icmp eq i8 %v4_12226, 0
  store i1 %v13_12226, i1* %zf.global-to-local, align 1
  %v22_12226 = zext i8 %v4_12226 to i32
  %v24_12226 = and i32 %v0_12226, -256
  %v25_12226 = or i32 %v22_12226, %v24_12226
  store i32 %v25_12226, i32* @eax, align 4
  %v1_12228 = inttoptr i32 %v25_12226 to i8*
  %v2_12228 = load i8, i8* %v1_12228, align 1
  %v5_12228 = add i8 %v2_12228, %v4_12226
  %v15_12228 = icmp eq i8 %v5_12228, 0
  store i1 %v15_12228, i1* %zf.global-to-local, align 1
  store i8 %v5_12228, i8* %v1_12228, align 1
  %v0_1222a = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1222a, label %bb, label %dec_label_pc_12226.dec_label_pc_1222c_crit_edge

dec_label_pc_12226.dec_label_pc_1222c_crit_edge:  ; preds = %dec_label_pc_12226
  %v2_1222a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1222c

bb:                                               ; preds = %dec_label_pc_12226
  %v1_1222a = call i32 @function_12231()
  br label %dec_label_pc_1222c

dec_label_pc_1222c:                               ; preds = %dec_label_pc_12226.dec_label_pc_1222c_crit_edge, %bb
  %v2_1222a = phi i32 [ %v2_1222a.pre, %dec_label_pc_12226.dec_label_pc_1222c_crit_edge ], [ %v1_1222a, %bb ]
  ret i32 %v2_1222a

; uselistorder directives
  uselistorder label %dec_label_pc_1222c, { 1, 0 }
}

define i32 @function_12231() local_unnamed_addr {
dec_label_pc_12231:
  %v0_12232 = load i32, i32* @eax, align 4
  ret i32 %v0_12232
}

define i32 @_ZSt24__uninitialized_fill_n_aIP6CTxOutjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12233:
  ret i32 %arg4
}

define i32 @function_1224e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1224e:
  %v0_1224e = load i32, i32* @eax, align 4
  %v1_1224e = load i32, i32* @ebp, align 4
  %v2_1224e = add i32 %v1_1224e, -40
  %v3_1224e = inttoptr i32 %v2_1224e to i32*
  store i32 %v0_1224e, i32* %v3_1224e, align 4
  %v0_12251 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_12257 = load i32, i32* @ebp, align 4
  %v2_12257 = add i32 %v1_12257, -12
  %v3_12257 = inttoptr i32 %v2_12257 to i32*
  store i32 %v0_12251, i32* %v3_12257, align 4
  %v0_1225c = load i32, i32* @ebp, align 4
  %v1_1225c = add i32 %v0_1225c, -36
  %v2_1225c = inttoptr i32 %v1_1225c to i32*
  %v3_1225c = load i32, i32* %v2_1225c, align 4
  %v1_12263 = add i32 %v0_1225c, -32
  %v2_12263 = inttoptr i32 %v1_12263 to i32*
  %v3_12263 = load i32, i32* %v2_12263, align 4
  %v1_1226a = add i32 %v0_1225c, -28
  %v2_1226a = inttoptr i32 %v1_1226a to i32*
  %v3_1226a = load i32, i32* %v2_1226a, align 4
  %v3_12270 = call i32 @unknown_26ca6(i32 %v3_1226a, i32 %v3_12263, i32 %v3_1225c)
  %v0_12275 = load i32, i32* @ebp, align 4
  %v1_12275 = add i32 %v0_12275, -12
  %v2_12275 = inttoptr i32 %v1_12275 to i32*
  %v3_12275 = load i32, i32* %v2_12275, align 4
  %v1_12278 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12278 = xor i32 %v1_12278, %v3_12275
  %v3_12278 = icmp eq i32 %v2_12278, 0
  store i32 %v2_12278, i32* @eax, align 4
  br i1 %v3_12278, label %bb, label %dec_label_pc_12281

bb:                                               ; preds = %dec_label_pc_1224e
  %v1_1227f = call i32 @function_12286()
  br label %dec_label_pc_12281

dec_label_pc_12281:                               ; preds = %bb, %dec_label_pc_1224e
  %v2_1227f = phi i32 [ %v1_1227f, %bb ], [ %v2_12278, %dec_label_pc_1224e ]
  ret i32 %v2_1227f
}

define i32 @function_12286() local_unnamed_addr {
dec_label_pc_12286:
  %v0_12287 = load i32, i32* @eax, align 4
  ret i32 %v0_12287
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12288:
  %v1_122a8 = inttoptr i32 %arg2 to i32*
  %v2_122a8 = load i32, i32* %v1_122a8, align 4
  store i32 %v2_122a8, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_122bb

bb:                                               ; preds = %dec_label_pc_12288
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_122b9 = call i32 @function_122c0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_122bb

dec_label_pc_122bb:                               ; preds = %bb, %dec_label_pc_12288
  %v4_122b9 = phi i32 [ %v3_122b9, %bb ], [ 0, %dec_label_pc_12288 ]
  ret i32 %v4_122b9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_122c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122c0:
  %v0_122c1 = load i32, i32* @eax, align 4
  ret i32 %v0_122c1
}

define i32 @_ZN5boost6detail13addr_impl_refIKSt6vectorI6CTxOutSaIS3_EEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122c2:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_122f3

bb:                                               ; preds = %dec_label_pc_122c2
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_122f1 = call i32 @function_122f8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_122f3

dec_label_pc_122f3:                               ; preds = %bb, %dec_label_pc_122c2
  %v4_122f1 = phi i32 [ %v3_122f1, %bb ], [ 0, %dec_label_pc_122c2 ]
  ret i32 %v4_122f1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_122f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122f8:
  %v0_122f9 = load i32, i32* @eax, align 4
  ret i32 %v0_122f9
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSt6vectorI6CTxOutSaIS3_EEEcvRS6_Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_122fa:
  ret i32 0
}

define i32 @function_12313(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12313:
  %cf.global-to-local = alloca i1, align 1
  %v0_12315 = load i32, i32* @ebx, align 4
  %v1_12315 = add i32 %v0_12315, 862319701
  %v2_12315 = inttoptr i32 %v1_12315 to i8*
  %v3_12315 = load i8, i8* %v2_12315, align 1
  %v4_12315 = load i32, i32* @ecx, align 4
  %v5_12315 = trunc i32 %v4_12315 to i8
  %v6_12315 = add i8 %v5_12315, %v3_12315
  %v11_12315 = icmp ult i8 %v6_12315, %v3_12315
  store i1 %v11_12315, i1* %cf.global-to-local, align 1
  store i8 %v6_12315, i8* %v2_12315, align 1
  %v0_1231b = load i32, i32* @eax, align 4
  %v1_1231b = load i1, i1* %cf.global-to-local, align 1
  %v2_1231b = zext i1 %v1_1231b to i32
  %v3_1231b = add i32 %v0_1231b, 20
  %v4_1231b = add i32 %v3_1231b, %v2_1231b
  %v14_1231b = icmp eq i32 %v4_1231b, 0
  %v22_1231b = icmp ule i32 %v4_1231b, %v0_1231b
  %v23_1231b = icmp ugt i32 %v0_1231b, -21
  %v24_1231b = select i1 %v1_1231b, i1 %v22_1231b, i1 %v23_1231b
  store i1 %v24_1231b, i1* %cf.global-to-local, align 1
  store i32 %v4_1231b, i32* @eax, align 4
  br i1 %v14_1231b, label %bb, label %dec_label_pc_12322

bb:                                               ; preds = %dec_label_pc_12313
  %v1_12320 = call i32 @function_12327()
  br label %dec_label_pc_12322

dec_label_pc_12322:                               ; preds = %bb, %dec_label_pc_12313
  %v2_12320 = phi i32 [ %v1_12320, %bb ], [ %v4_1231b, %dec_label_pc_12313 ]
  ret i32 %v2_12320

; uselistorder directives
  uselistorder i32 %v4_1231b, { 0, 2, 1, 3 }
  uselistorder i8 %v3_12315, { 1, 0 }
}

define i32 @function_12327() local_unnamed_addr {
dec_label_pc_12327:
  %v0_12328 = load i32, i32* @eax, align 4
  ret i32 %v0_12328
}

define i32 @_ZN5boost6detail14addressof_implIKSt6vectorI6CTxOutSaIS3_EEE1fERS6_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12329:
  ret i32 %arg1
}

define i32 @function_1234c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1234c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12350(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_12350:
  %v2_12350 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_12350 = load i32, i32* @eax, align 4
  %v4_12350 = trunc i32 %v3_12350 to i8
  %v5_12350 = add i8 %v4_12350, %v2_12350
  %v21_12350 = inttoptr i32 %v3_12350 to i8*
  store i8 %v5_12350, i8* %v21_12350, align 1
  %v0_12352 = load i32, i32* @ebp, align 4
  %v1_12352 = load i32, i32* @eax, align 4
  %v2_12352 = mul i32 %v1_12352, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_12352 = add i32 %v0_12352, -24
  %v4_12352 = add i32 %v3_12352, %v2_12352
  %v5_12352 = inttoptr i32 %v4_12352 to i8*
  %v6_12352 = load i8, i8* %v5_12352, align 1
  %v7_12352 = load i32, i32* @edx, align 4
  %v8_12352 = lshr i32 %v7_12352, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_12352 = trunc i32 %v8_12352 to i8
  %v10_12352 = add i8 %v9_12352, %v6_12352
  store i8 %v10_12352, i8* %v5_12352, align 1
  %v31_12352 = load i32, i32* @eax, align 4
  ret i32 %v31_12352
}

define i32 @function_12359() local_unnamed_addr {
dec_label_pc_12359:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12359 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12359 = sub i32 %v0_12359, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_12359, i32* %ecx.global-to-local, align 4
  %v0_1235b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1235b
}

define i32 @_ZN5boost12range_detail11range_beginIKSt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1235c:
  %v2_12386 = call i32 @unknown_20c48(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1239d

bb:                                               ; preds = %dec_label_pc_1235c
  %v1_1239b = call i32 @function_123a2()
  br label %dec_label_pc_1239d

dec_label_pc_1239d:                               ; preds = %bb, %dec_label_pc_1235c
  %v3_1239b = phi i32 [ %v1_1239b, %bb ], [ %arg1, %dec_label_pc_1235c ]
  ret i32 %v3_1239b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_123a2() local_unnamed_addr {
dec_label_pc_123a2:
  %v0_123a3 = load i32, i32* @eax, align 4
  ret i32 %v0_123a3
}

define i32 @_ZN5boost12range_detail9range_endIKSt6vectorI6CTxOutSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_123a6:
  %v2_123d0 = call i32 @unknown_20c42(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_123e7

bb:                                               ; preds = %dec_label_pc_123a6
  %v1_123e5 = call i32 @function_123ec()
  br label %dec_label_pc_123e7

dec_label_pc_123e7:                               ; preds = %bb, %dec_label_pc_123a6
  %v3_123e5 = phi i32 [ %v1_123e5, %bb ], [ %arg1, %dec_label_pc_123a6 ]
  ret i32 %v3_123e5

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_123ec() local_unnamed_addr {
dec_label_pc_123ec:
  %v0_123ed = load i32, i32* @eax, align 4
  ret i32 %v0_123ed
}

define i32 @_ZNK9base_uintILj256EE16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_123f0:
  store i32 ptrtoint (i32* @global_var_20.1184 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12424

bb:                                               ; preds = %dec_label_pc_123f0
  %v4_12422 = call i32 @function_12429(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_12424

dec_label_pc_12424:                               ; preds = %bb, %dec_label_pc_123f0
  %v5_12422 = phi i32 [ %v4_12422, %bb ], [ ptrtoint (i32* @global_var_20.1184 to i32), %dec_label_pc_123f0 ]
  ret i32 %v5_12422
}

define i32 @function_12429(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12429:
  %v0_1242a = load i32, i32* @eax, align 4
  ret i32 %v0_1242a
}

define i32 @_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh() local_unnamed_addr {
dec_label_pc_1242c:
  %eax.global-to-local = alloca i32, align 4
  %v5_1242f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_1242f
}

define i32 @function_12430() local_unnamed_addr {
dec_label_pc_12430:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v0_12430 = load i32, i32* @ebx, align 4
  %v0_12434 = load i32, i32* @ebp, align 4
  %v1_12434 = add i32 %v0_12434, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_12434 = inttoptr i32 %v1_12434 to i32*
  %v3_12434 = load i32, i32* %v2_12434, align 4
  %v2_12437 = add i32 %v0_12434, -60
  %v3_12437 = inttoptr i32 %v2_12437 to i32*
  store i32 %v3_12434, i32* %v3_12437, align 4
  %v0_1243a = load i32, i32* @ebp, align 4
  %v1_1243a = add i32 %v0_1243a, 12
  %v2_1243a = inttoptr i32 %v1_1243a to i32*
  %v3_1243a = load i32, i32* %v2_1243a, align 4
  %v2_1243d = add i32 %v0_1243a, -64
  %v3_1243d = inttoptr i32 %v2_1243d to i32*
  store i32 %v3_1243a, i32* %v3_1243d, align 4
  %v0_12440 = load i32, i32* @ebp, align 4
  %v1_12440 = add i32 %v0_12440, 16
  %v2_12440 = inttoptr i32 %v1_12440 to i32*
  %v3_12440 = load i32, i32* %v2_12440, align 4
  %v2_12443 = add i32 %v0_12440, -68
  %v3_12443 = inttoptr i32 %v2_12443 to i32*
  store i32 %v3_12440, i32* %v3_12443, align 4
  %v0_12446 = load i32, i32* @ebp, align 4
  %v1_12446 = add i32 %v0_12446, 20
  %v2_12446 = inttoptr i32 %v1_12446 to i32*
  %v3_12446 = load i32, i32* %v2_12446, align 4
  %v2_12449 = add i32 %v0_12446, -72
  %v3_12449 = inttoptr i32 %v2_12449 to i32*
  store i32 %v3_12446, i32* %v3_12449, align 4
  %v0_1244c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_12452 = load i32, i32* @ebp, align 4
  %v2_12452 = add i32 %v1_12452, -12
  %v3_12452 = inttoptr i32 %v2_12452 to i32*
  store i32 %v0_1244c, i32* %v3_12452, align 4
  store i32 0, i32* @eax, align 4
  %v0_12457 = load i32, i32* @ebp, align 4
  %v1_12457 = add i32 %v0_12457, -68
  %v2_12457 = inttoptr i32 %v1_12457 to i32*
  %v3_12457 = load i32, i32* %v2_12457, align 4
  %v10_12457 = icmp eq i32 %v3_12457, 0
  br i1 %v10_12457, label %bb, label %dec_label_pc_12461

bb:                                               ; preds = %dec_label_pc_12430
  %v2_1245b = call i32 @function_1283e(i32 %v0_12430)
  %v0_12461.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_12461

dec_label_pc_12461:                               ; preds = %bb, %dec_label_pc_12430
  %v2_12484 = phi i32 [ %v0_12461.pre, %bb ], [ %v0_12457, %dec_label_pc_12430 ]
  %v1_12461 = add i32 %v2_12484, -60
  %v2_12461 = inttoptr i32 %v1_12461 to i32*
  %v3_12461 = load i32, i32* %v2_12461, align 4
  %v1_12464 = add i32 %v3_12461, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_12464 = inttoptr i32 %v1_12464 to i32*
  %v3_12464 = load i32, i32* %v2_12464, align 4
  %v1_1246c = add i32 %v3_12461, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1246c = inttoptr i32 %v1_1246c to i32*
  %v3_1246c = load i32, i32* %v2_1246c, align 4
  %v2_12471 = sub i32 %v3_12464, %v3_1246c
  %v2_12475 = add i32 %v2_12484, -68
  %v3_12475 = inttoptr i32 %v2_12475 to i32*
  %v4_12475 = load i32, i32* %v3_12475, align 4
  %v10_12475 = icmp ult i32 %v2_12471, %v4_12475
  store i1 %v10_12475, i1* @cf, align 1
  br i1 %v10_12475, label %dec_label_pc_1262a, label %dec_label_pc_1247e

dec_label_pc_1247e:                               ; preds = %dec_label_pc_12461
  %v1_1247e = add i32 %v2_12484, -72
  %v2_1247e = inttoptr i32 %v1_1247e to i32*
  %v3_1247e = load i32, i32* %v2_1247e, align 4
  %v1_12481 = inttoptr i32 %v3_1247e to i8*
  %v2_12481 = load i8, i8* %v1_12481, align 1
  %v3_12484 = add i32 %v2_12484, -13
  %v4_12484 = inttoptr i32 %v3_12484 to i8*
  store i8 %v2_12481, i8* %v4_12484, align 1
  %v0_12487 = load i32, i32* @ebp, align 4
  %v1_12487 = add i32 %v0_12487, -48
  store i32 %v1_12487, i32* @eax, align 4
  %v1_1248a = add i32 %v0_12487, -60
  %v2_1248a = inttoptr i32 %v1_1248a to i32*
  %v3_1248a = load i32, i32* %v2_1248a, align 4
  %v2_12494 = call i32 @function_1b59c(i32 %v1_12487, i32 %v3_1248a)
  %v0_1249c = load i32, i32* @ebp, align 4
  %v1_1249c = add i32 %v0_1249c, -64
  %v1_124a3 = add i32 %v0_1249c, -48
  store i32 %v1_124a3, i32* %stack_var_-88, align 4
  %v2_124a9 = call i32 @unknown_1b7fc(i32 %v1_124a3, i32 %v1_1249c)
  %v1_124ae = load i32, i32* @ebp, align 4
  %v2_124ae = add i32 %v1_124ae, -36
  %v3_124ae = inttoptr i32 %v2_124ae to i32*
  store i32 %v2_124a9, i32* %v3_124ae, align 4
  %v0_124b1 = load i32, i32* @ebp, align 4
  %v1_124b1 = add i32 %v0_124b1, -60
  %v2_124b1 = inttoptr i32 %v1_124b1 to i32*
  %v3_124b1 = load i32, i32* %v2_124b1, align 4
  %v1_124b4 = add i32 %v3_124b1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_124b4 = inttoptr i32 %v1_124b4 to i32*
  %v3_124b4 = load i32, i32* %v2_124b4, align 4
  %v2_124b7 = add i32 %v0_124b1, -32
  %v3_124b7 = inttoptr i32 %v2_124b7 to i32*
  store i32 %v3_124b4, i32* %v3_124b7, align 4
  %v0_124ba = load i32, i32* @ebp, align 4
  %v1_124ba = add i32 %v0_124ba, -36
  %v2_124ba = inttoptr i32 %v1_124ba to i32*
  %v3_124ba = load i32, i32* %v2_124ba, align 4
  %v2_124bd = add i32 %v0_124ba, -68
  %v3_124bd = inttoptr i32 %v2_124bd to i32*
  %v4_124bd = load i32, i32* %v3_124bd, align 4
  %tmp10 = icmp ugt i32 %v3_124ba, %v4_124bd
  %v1_12570 = add i32 %v0_124ba, -60
  %v2_12570 = inttoptr i32 %v1_12570 to i32*
  %v3_12570 = load i32, i32* %v2_12570, align 4
  store i32 %v3_12570, i32* %stack_var_-88, align 4
  %v1_12576 = call i32 @unknown_1fda4(i32 %v3_12570)
  %v0_1257b = load i32, i32* @ebp, align 4
  br i1 %tmp10, label %dec_label_pc_124c6, label %dec_label_pc_12570

dec_label_pc_124c6:                               ; preds = %dec_label_pc_1247e
  %v1_124d1 = add i32 %v0_1257b, -60
  %v2_124d1 = inttoptr i32 %v1_124d1 to i32*
  %v3_124d1 = load i32, i32* %v2_124d1, align 4
  %v1_124d4 = add i32 %v3_124d1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_124d4 = inttoptr i32 %v1_124d4 to i32*
  %v3_124d4 = load i32, i32* %v2_124d4, align 4
  %v1_124da = add i32 %v3_124d1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_124da = inttoptr i32 %v1_124da to i32*
  %v3_124da = load i32, i32* %v2_124da, align 4
  %v3_124dd = load i32, i32* %v2_124d1, align 4
  store i32 %v3_124dd, i32* %ebx.global-to-local, align 4
  %v1_124e0 = add i32 %v3_124dd, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_124e0 = inttoptr i32 %v1_124e0 to i32*
  %v3_124e0 = load i32, i32* %v2_124e0, align 4
  store i32 %v3_124e0, i32* %ebx.global-to-local, align 4
  %v1_124e3 = add i32 %v0_1257b, -68
  %v2_124e3 = inttoptr i32 %v1_124e3 to i32*
  %v3_124e3 = load i32, i32* %v2_124e3, align 4
  %v1_124e6 = sub i32 0, %v3_124e3
  store i32 %v1_124e6, i32* %esi.global-to-local, align 4
  %v2_124e8 = sub i32 %v3_124e0, %v3_124e3
  store i32 %v2_124e8, i32* %ebx.global-to-local, align 4
  store i32 %v2_124e8, i32* %stack_var_-88, align 4
  %v5_124f9 = call i32 @unknown_2427e(i32 %v2_124e8, i32 %v3_124da, i32 %v3_124d4, i32 %v1_12576)
  %v0_124fe = load i32, i32* @ebp, align 4
  %v1_124fe = add i32 %v0_124fe, -60
  %v2_124fe = inttoptr i32 %v1_124fe to i32*
  %v3_124fe = load i32, i32* %v2_124fe, align 4
  %v1_12501 = add i32 %v3_124fe, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_12501 = inttoptr i32 %v1_12501 to i32*
  %v3_12501 = load i32, i32* %v2_12501, align 4
  %v2_12506 = add i32 %v0_124fe, -68
  %v3_12506 = inttoptr i32 %v2_12506 to i32*
  %v4_12506 = load i32, i32* %v3_12506, align 4
  %v5_12506 = add i32 %v4_12506, %v3_12501
  %v3_12509 = load i32, i32* %v2_124fe, align 4
  %v2_1250c = add i32 %v3_12509, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1250c = inttoptr i32 %v2_1250c to i32*
  store i32 %v5_12506, i32* %v3_1250c, align 4
  %v0_1250f = load i32, i32* @ebp, align 4
  %v1_1250f = add i32 %v0_1250f, -68
  %v2_1250f = inttoptr i32 %v1_1250f to i32*
  %v3_1250f = load i32, i32* %v2_1250f, align 4
  %v1_12512 = sub i32 0, %v3_1250f
  store i32 %v1_12512, i32* %ebx.global-to-local, align 4
  %v2_12516 = add i32 %v0_1250f, -32
  %v3_12516 = inttoptr i32 %v2_12516 to i32*
  %v4_12516 = load i32, i32* %v3_12516, align 4
  %v5_12516 = sub i32 %v4_12516, %v3_1250f
  store i32 %v5_12516, i32* %ebx.global-to-local, align 4
  %v1_12519 = add i32 %v0_1250f, -64
  store i32 %v1_12519, i32* %stack_var_-88, align 4
  %v1_1251f = call i32 @unknown_20832(i32 %v1_12519)
  %v1_12524 = inttoptr i32 %v1_1251f to i32*
  %v2_12524 = load i32, i32* %v1_12524, align 4
  %v0_12526 = load i32, i32* @ebp, align 4
  %v1_12526 = add i32 %v0_12526, -32
  %v2_12526 = inttoptr i32 %v1_12526 to i32*
  %v3_12526 = load i32, i32* %v2_12526, align 4
  %v0_1252d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_12524, i32* %stack_var_-88, align 4
  %v3_12534 = call i32 @unknown_24146(i32 %v2_12524, i32 %v0_1252d, i32 %v3_12526)
  %v0_12539 = load i32, i32* @ebp, align 4
  %v1_12539 = add i32 %v0_12539, -64
  store i32 %v1_12539, i32* %stack_var_-88, align 4
  %v1_1253f = call i32 @unknown_20832(i32 %v1_12539)
  %v1_12544 = inttoptr i32 %v1_1253f to i32*
  %v2_12544 = load i32, i32* %v1_12544, align 4
  store i32 %v2_12544, i32* %ebx.global-to-local, align 4
  %v1_12548 = load i32, i32* @ebp, align 4
  %v2_12548 = add i32 %v1_12548, -68
  %v3_12548 = inttoptr i32 %v2_12548 to i32*
  %v4_12548 = load i32, i32* %v3_12548, align 4
  %v5_12548 = add i32 %v4_12548, %v2_12544
  store i32 %v5_12548, i32* %ebx.global-to-local, align 4
  %v1_1254b = add i32 %v1_12548, -64
  store i32 %v1_1254b, i32* %stack_var_-88, align 4
  %v1_12551 = call i32 @unknown_20832(i32 %v1_1254b)
  %v1_12556 = inttoptr i32 %v1_12551 to i32*
  %v2_12556 = load i32, i32* %v1_12556, align 4
  %v0_12558 = load i32, i32* @ebp, align 4
  %v1_12558 = add i32 %v0_12558, -13
  %v0_1255f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_12556, i32* %stack_var_-88, align 4
  %v3_12566 = call i32 @unknown_26eee(i32 %v2_12556, i32 %v0_1255f, i32 %v1_12558)
  store i32 %v3_12566, i32* @eax, align 4
  %v0_1256b = load i32, i32* %stack_var_-88, align 4
  %v1_1256b = call i32 @function_1283e(i32 %v0_1256b)
  ret i32 %v1_1256b

dec_label_pc_12570:                               ; preds = %dec_label_pc_1247e
  %v1_1257b = add i32 %v0_1257b, -36
  %v2_1257b = inttoptr i32 %v1_1257b to i32*
  %v3_1257b = load i32, i32* %v2_1257b, align 4
  %v1_1257e = add i32 %v0_1257b, -68
  %v2_1257e = inttoptr i32 %v1_1257e to i32*
  %v3_1257e = load i32, i32* %v2_1257e, align 4
  %v2_12581 = sub i32 %v3_1257e, %v3_1257b
  %v1_12583 = add i32 %v0_1257b, -60
  %v2_12583 = inttoptr i32 %v1_12583 to i32*
  %v3_12583 = load i32, i32* %v2_12583, align 4
  %v1_12586 = add i32 %v3_12583, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_12586 = inttoptr i32 %v1_12586 to i32*
  %v3_12586 = load i32, i32* %v2_12586, align 4
  %v1_1258d = add i32 %v0_1257b, -13
  store i32 %v3_12586, i32* %stack_var_-88, align 4
  %v5_1259b = call i32 @unknown_23aa7(i32 %v3_12586, i32 %v2_12581, i32 %v1_1258d, i32 %v1_12576)
  %v0_125a0 = load i32, i32* @ebp, align 4
  %v1_125a0 = add i32 %v0_125a0, -60
  %v2_125a0 = inttoptr i32 %v1_125a0 to i32*
  %v3_125a0 = load i32, i32* %v2_125a0, align 4
  %v1_125a3 = add i32 %v3_125a0, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_125a3 = inttoptr i32 %v1_125a3 to i32*
  %v3_125a3 = load i32, i32* %v2_125a3, align 4
  %v1_125a6 = add i32 %v0_125a0, -36
  %v2_125a6 = inttoptr i32 %v1_125a6 to i32*
  %v3_125a6 = load i32, i32* %v2_125a6, align 4
  %v1_125a9 = add i32 %v0_125a0, -68
  %v2_125a9 = inttoptr i32 %v1_125a9 to i32*
  %v3_125a9 = load i32, i32* %v2_125a9, align 4
  %v2_125ae = sub i32 %v3_125a9, %v3_125a6
  store i32 %v2_125ae, i32* %ebx.global-to-local, align 4
  %v2_125b2 = add i32 %v2_125ae, %v3_125a3
  %v3_125b4 = load i32, i32* %v2_125a0, align 4
  %v2_125b7 = add i32 %v3_125b4, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_125b7 = inttoptr i32 %v2_125b7 to i32*
  store i32 %v2_125b2, i32* %v3_125b7, align 4
  %v0_125ba = load i32, i32* @ebp, align 4
  %v1_125ba = add i32 %v0_125ba, -60
  %v2_125ba = inttoptr i32 %v1_125ba to i32*
  %v3_125ba = load i32, i32* %v2_125ba, align 4
  store i32 %v3_125ba, i32* %stack_var_-88, align 4
  %v1_125c0 = call i32 @unknown_1fda4(i32 %v3_125ba)
  store i32 %v1_125c0, i32* %ebx.global-to-local, align 4
  %v0_125c7 = load i32, i32* @ebp, align 4
  %v1_125c7 = add i32 %v0_125c7, -60
  %v2_125c7 = inttoptr i32 %v1_125c7 to i32*
  %v3_125c7 = load i32, i32* %v2_125c7, align 4
  %v1_125ca = add i32 %v3_125c7, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_125ca = inttoptr i32 %v1_125ca to i32*
  %v3_125ca = load i32, i32* %v2_125ca, align 4
  store i32 %v3_125ca, i32* %esi.global-to-local, align 4
  %v1_125cd = add i32 %v0_125c7, -64
  store i32 %v1_125cd, i32* %stack_var_-88, align 4
  %v1_125d3 = call i32 @unknown_20832(i32 %v1_125cd)
  %v1_125d8 = inttoptr i32 %v1_125d3 to i32*
  %v2_125d8 = load i32, i32* %v1_125d8, align 4
  %v0_125da = load i32, i32* %ebx.global-to-local, align 4
  %v0_125de = load i32, i32* %esi.global-to-local, align 4
  %v0_125e2 = load i32, i32* @ebp, align 4
  %v1_125e2 = add i32 %v0_125e2, -32
  %v2_125e2 = inttoptr i32 %v1_125e2 to i32*
  %v3_125e2 = load i32, i32* %v2_125e2, align 4
  store i32 %v2_125d8, i32* %stack_var_-88, align 4
  %v5_125ec = call i32 @unknown_2427e(i32 %v2_125d8, i32 %v3_125e2, i32 %v0_125de, i32 %v0_125da)
  %v0_125f1 = load i32, i32* @ebp, align 4
  %v1_125f1 = add i32 %v0_125f1, -60
  %v2_125f1 = inttoptr i32 %v1_125f1 to i32*
  %v3_125f1 = load i32, i32* %v2_125f1, align 4
  %v1_125f4 = add i32 %v3_125f1, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_125f4 = inttoptr i32 %v1_125f4 to i32*
  %v3_125f4 = load i32, i32* %v2_125f4, align 4
  %v2_125f9 = add i32 %v0_125f1, -36
  %v3_125f9 = inttoptr i32 %v2_125f9 to i32*
  %v4_125f9 = load i32, i32* %v3_125f9, align 4
  %v5_125f9 = add i32 %v4_125f9, %v3_125f4
  %v3_125fc = load i32, i32* %v2_125f1, align 4
  %v2_125ff = add i32 %v3_125fc, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_125ff = inttoptr i32 %v2_125ff to i32*
  store i32 %v5_125f9, i32* %v3_125ff, align 4
  %v0_12602 = load i32, i32* @ebp, align 4
  %v1_12602 = add i32 %v0_12602, -64
  store i32 %v1_12602, i32* %stack_var_-88, align 4
  %v1_12608 = call i32 @unknown_20832(i32 %v1_12602)
  %v1_1260d = inttoptr i32 %v1_12608 to i32*
  %v2_1260d = load i32, i32* %v1_1260d, align 4
  %v0_1260f = load i32, i32* @ebp, align 4
  %v1_1260f = add i32 %v0_1260f, -13
  %v1_12616 = add i32 %v0_1260f, -32
  %v2_12616 = inttoptr i32 %v1_12616 to i32*
  %v3_12616 = load i32, i32* %v2_12616, align 4
  store i32 %v2_1260d, i32* %stack_var_-88, align 4
  %v3_12620 = call i32 @unknown_26eee(i32 %v2_1260d, i32 %v3_12616, i32 %v1_1260f)
  store i32 %v3_12620, i32* @eax, align 4
  %v0_12625 = load i32, i32* %stack_var_-88, align 4
  %v1_12625 = call i32 @function_1283e(i32 %v0_12625)
  ret i32 %v1_12625

dec_label_pc_1262a:                               ; preds = %dec_label_pc_12461
  %v3_12639 = load i32, i32* %v2_12461, align 4
  %v4_1263f = call i32 @unknown_241ac(i32 %v3_12639, i32 %v4_12475, i32 ptrtoint ([23 x i8]* @global_var_3f09.1220 to i32))
  %v1_12644 = load i32, i32* @ebp, align 4
  %v2_12644 = add i32 %v1_12644, -28
  %v3_12644 = inttoptr i32 %v2_12644 to i32*
  store i32 %v4_1263f, i32* %v3_12644, align 4
  %v0_12647 = load i32, i32* @ebp, align 4
  %v1_12647 = add i32 %v0_12647, -44
  store i32 %v1_12647, i32* @eax, align 4
  %v1_1264a = add i32 %v0_12647, -60
  %v2_1264a = inttoptr i32 %v1_1264a to i32*
  %v3_1264a = load i32, i32* %v2_1264a, align 4
  %v2_12654 = call i32 @function_1b274(i32 %v1_12647, i32 %v3_1264a)
  %v0_1265c = load i32, i32* @ebp, align 4
  %v1_1265c = add i32 %v0_1265c, -44
  %v1_12663 = add i32 %v0_1265c, -64
  store i32 %v1_12663, i32* %stack_var_-88, align 4
  %v2_12669 = call i32 @unknown_1b7fc(i32 %v1_12663, i32 %v1_1265c)
  %v1_1266e = load i32, i32* @ebp, align 4
  %v2_1266e = add i32 %v1_1266e, -24
  %v3_1266e = inttoptr i32 %v2_1266e to i32*
  store i32 %v2_12669, i32* %v3_1266e, align 4
  %v0_12671 = load i32, i32* @ebp, align 4
  %v1_12671 = add i32 %v0_12671, -60
  %v2_12671 = inttoptr i32 %v1_12671 to i32*
  %v3_12671 = load i32, i32* %v2_12671, align 4
  %v1_12674 = add i32 %v0_12671, -28
  %v2_12674 = inttoptr i32 %v1_12674 to i32*
  %v3_12674 = load i32, i32* %v2_12674, align 4
  store i32 %v3_12671, i32* %stack_var_-88, align 4
  %v2_1267e = call i32 @unknown_23a50(i32 %v3_12671, i32 %v3_12674)
  %v1_12683 = load i32, i32* @ebp, align 4
  %v2_12683 = add i32 %v1_12683, -20
  %v3_12683 = inttoptr i32 %v2_12683 to i32*
  store i32 %v2_1267e, i32* %v3_12683, align 4
  %v0_12686 = load i32, i32* @ebp, align 4
  %v1_12686 = add i32 %v0_12686, -20
  %v2_12686 = inttoptr i32 %v1_12686 to i32*
  %v3_12686 = load i32, i32* %v2_12686, align 4
  %v2_12689 = add i32 %v0_12686, -40
  %v3_12689 = inttoptr i32 %v2_12689 to i32*
  store i32 %v3_12686, i32* %v3_12689, align 4
  %v0_1268c = load i32, i32* @ebp, align 4
  %v1_1268c = add i32 %v0_1268c, -60
  %v2_1268c = inttoptr i32 %v1_1268c to i32*
  %v3_1268c = load i32, i32* %v2_1268c, align 4
  store i32 %v3_1268c, i32* %stack_var_-88, align 4
  %v1_12692 = call i32 @unknown_1fda4(i32 %v3_1268c)
  %v0_12697 = load i32, i32* @ebp, align 4
  %v1_12697 = add i32 %v0_12697, -24
  %v2_12697 = inttoptr i32 %v1_12697 to i32*
  %v3_12697 = load i32, i32* %v2_12697, align 4
  %v1_1269a = add i32 %v0_12697, -20
  %v2_1269a = inttoptr i32 %v1_1269a to i32*
  %v3_1269a = load i32, i32* %v2_1269a, align 4
  %v2_1269d = add i32 %v3_1269a, %v3_12697
  %v1_126a3 = add i32 %v0_12697, -72
  %v2_126a3 = inttoptr i32 %v1_126a3 to i32*
  %v3_126a3 = load i32, i32* %v2_126a3, align 4
  %v1_126aa = add i32 %v0_12697, -68
  %v2_126aa = inttoptr i32 %v1_126aa to i32*
  %v3_126aa = load i32, i32* %v2_126aa, align 4
  store i32 %v2_1269d, i32* %stack_var_-88, align 4
  %v5_126b4 = call i32 @unknown_23aa7(i32 %v2_1269d, i32 %v3_126aa, i32 %v3_126a3, i32 %v1_12692)
  %v0_126b9 = load i32, i32* @ebp, align 4
  %v1_126b9 = add i32 %v0_126b9, -40
  %v2_126b9 = inttoptr i32 %v1_126b9 to i32*
  store i32 0, i32* %v2_126b9, align 4
  %v0_126c0 = load i32, i32* @ebp, align 4
  %v1_126c0 = add i32 %v0_126c0, -60
  %v2_126c0 = inttoptr i32 %v1_126c0 to i32*
  %v3_126c0 = load i32, i32* %v2_126c0, align 4
  store i32 %v3_126c0, i32* %stack_var_-88, align 4
  %v1_126c6 = call i32 @unknown_1fda4(i32 %v3_126c0)
  store i32 %v1_126c6, i32* %ebx.global-to-local, align 4
  %v0_126cd = load i32, i32* @ebp, align 4
  %v1_126cd = add i32 %v0_126cd, -64
  store i32 %v1_126cd, i32* %stack_var_-88, align 4
  %v1_126d3 = call i32 @unknown_20832(i32 %v1_126cd)
  %v1_126d8 = inttoptr i32 %v1_126d3 to i32*
  %v2_126d8 = load i32, i32* %v1_126d8, align 4
  %v0_126da = load i32, i32* @ebp, align 4
  %v1_126da = add i32 %v0_126da, -60
  %v2_126da = inttoptr i32 %v1_126da to i32*
  %v3_126da = load i32, i32* %v2_126da, align 4
  %v1_126dd = inttoptr i32 %v3_126da to i32*
  %v2_126dd = load i32, i32* %v1_126dd, align 4
  %v0_126df = load i32, i32* %ebx.global-to-local, align 4
  %v1_126e3 = add i32 %v0_126da, -20
  %v2_126e3 = inttoptr i32 %v1_126e3 to i32*
  %v3_126e3 = load i32, i32* %v2_126e3, align 4
  store i32 %v2_126dd, i32* %stack_var_-88, align 4
  %v5_126f1 = call i32 @unknown_2427e(i32 %v2_126dd, i32 %v2_126d8, i32 %v3_126e3, i32 %v0_126df)
  %v1_126f6 = load i32, i32* @ebp, align 4
  %v2_126f6 = add i32 %v1_126f6, -40
  %v3_126f6 = inttoptr i32 %v2_126f6 to i32*
  store i32 %v5_126f1, i32* %v3_126f6, align 4
  %v0_126f9 = load i32, i32* @ebp, align 4
  %v1_126f9 = add i32 %v0_126f9, -68
  %v2_126f9 = inttoptr i32 %v1_126f9 to i32*
  %v3_126f9 = load i32, i32* %v2_126f9, align 4
  %v1_126fc = add i32 %v0_126f9, -40
  %v2_126fc = inttoptr i32 %v1_126fc to i32*
  %v3_126fc = load i32, i32* %v2_126fc, align 4
  %v5_126fc = add i32 %v3_126fc, %v3_126f9
  store i32 %v5_126fc, i32* %v2_126fc, align 4
  %v0_126ff = load i32, i32* @ebp, align 4
  %v1_126ff = add i32 %v0_126ff, -60
  %v2_126ff = inttoptr i32 %v1_126ff to i32*
  %v3_126ff = load i32, i32* %v2_126ff, align 4
  store i32 %v3_126ff, i32* %stack_var_-88, align 4
  %v1_12705 = call i32 @unknown_1fda4(i32 %v3_126ff)
  store i32 %v1_12705, i32* %ebx.global-to-local, align 4
  %v0_1270c = load i32, i32* @ebp, align 4
  %v1_1270c = add i32 %v0_1270c, -60
  %v2_1270c = inttoptr i32 %v1_1270c to i32*
  %v3_1270c = load i32, i32* %v2_1270c, align 4
  %v1_1270f = add i32 %v3_1270c, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1270f = inttoptr i32 %v1_1270f to i32*
  %v3_1270f = load i32, i32* %v2_1270f, align 4
  store i32 %v3_1270f, i32* %esi.global-to-local, align 4
  %v1_12712 = add i32 %v0_1270c, -64
  store i32 %v1_12712, i32* %stack_var_-88, align 4
  %v1_12718 = call i32 @unknown_20832(i32 %v1_12712)
  %v1_1271d = inttoptr i32 %v1_12718 to i32*
  %v2_1271d = load i32, i32* %v1_1271d, align 4
  %v0_1271f = load i32, i32* %ebx.global-to-local, align 4
  %v0_12723 = load i32, i32* @ebp, align 4
  %v1_12723 = add i32 %v0_12723, -40
  %v2_12723 = inttoptr i32 %v1_12723 to i32*
  %v3_12723 = load i32, i32* %v2_12723, align 4
  %v0_1272a = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_1271d, i32* %stack_var_-88, align 4
  %v5_12731 = call i32 @unknown_2427e(i32 %v2_1271d, i32 %v0_1272a, i32 %v3_12723, i32 %v0_1271f)
  %v1_12736 = load i32, i32* @ebp, align 4
  %v2_12736 = add i32 %v1_12736, -40
  %v3_12736 = inttoptr i32 %v2_12736 to i32*
  store i32 %v5_12731, i32* %v3_12736, align 4
  %v0_12739 = load i32, i32* @ebp, align 4
  %v1_12739 = add i32 %v0_12739, -60
  %v2_12739 = inttoptr i32 %v1_12739 to i32*
  %v3_12739 = load i32, i32* %v2_12739, align 4
  store i32 %v3_12739, i32* %stack_var_-88, align 4
  %v1_1273f = call i32 @unknown_1fda4(i32 %v3_12739)
  %v0_12744 = load i32, i32* @ebp, align 4
  %v1_12744 = add i32 %v0_12744, -60
  %v2_12744 = inttoptr i32 %v1_12744 to i32*
  %v3_12744 = load i32, i32* %v2_12744, align 4
  %v1_12747 = add i32 %v3_12744, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_12747 = inttoptr i32 %v1_12747 to i32*
  %v3_12747 = load i32, i32* %v2_12747, align 4
  %v1_1274d = inttoptr i32 %v3_12744 to i32*
  %v2_1274d = load i32, i32* %v1_1274d, align 4
  store i32 %v2_1274d, i32* %stack_var_-88, align 4
  %v3_1275a = call i32 @unknown_1fdd1(i32 %v2_1274d, i32 %v3_12747, i32 %v1_1273f)
  %v0_1275f = load i32, i32* @ebp, align 4
  %v1_1275f = add i32 %v0_1275f, -60
  %v2_1275f = inttoptr i32 %v1_1275f to i32*
  %v3_1275f = load i32, i32* %v2_1275f, align 4
  %v1_12762 = add i32 %v3_1275f, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_12762 = inttoptr i32 %v1_12762 to i32*
  %v3_12762 = load i32, i32* %v2_12762, align 4
  %v1_1276a = inttoptr i32 %v3_1275f to i32*
  %v2_1276a = load i32, i32* %v1_1276a, align 4
  %v2_1276e = sub i32 %v3_12762, %v2_1276a
  %v3_12774 = load i32, i32* %v2_1275f, align 4
  %v1_12777 = inttoptr i32 %v3_12774 to i32*
  %v2_12777 = load i32, i32* %v1_12777, align 4
  store i32 %v3_12774, i32* %stack_var_-88, align 4
  %v3_12787 = call i32 @unknown_2006c(i32 %v3_12774, i32 %v2_12777, i32 %v2_1276e)
  %v0_1278c = load i32, i32* @ebp, align 4
  %v1_1278c = add i32 %v0_1278c, -60
  %v2_1278c = inttoptr i32 %v1_1278c to i32*
  %v3_1278c = load i32, i32* %v2_1278c, align 4
  %v1_1278f = add i32 %v0_1278c, -20
  %v2_1278f = inttoptr i32 %v1_1278f to i32*
  %v3_1278f = load i32, i32* %v2_1278f, align 4
  %v2_12792 = inttoptr i32 %v3_1278c to i32*
  store i32 %v3_1278f, i32* %v2_12792, align 4
  %v0_12794 = load i32, i32* @ebp, align 4
  %v1_12794 = add i32 %v0_12794, -60
  %v2_12794 = inttoptr i32 %v1_12794 to i32*
  %v3_12794 = load i32, i32* %v2_12794, align 4
  %v1_12797 = add i32 %v0_12794, -40
  %v2_12797 = inttoptr i32 %v1_12797 to i32*
  %v3_12797 = load i32, i32* %v2_12797, align 4
  %v2_1279a = add i32 %v3_12794, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1279a = inttoptr i32 %v2_1279a to i32*
  store i32 %v3_12797, i32* %v3_1279a, align 4
  %v0_1279d = load i32, i32* @ebp, align 4
  %v1_1279d = add i32 %v0_1279d, -28
  %v2_1279d = inttoptr i32 %v1_1279d to i32*
  %v3_1279d = load i32, i32* %v2_1279d, align 4
  %v1_127a0 = add i32 %v0_1279d, -20
  %v2_127a0 = inttoptr i32 %v1_127a0 to i32*
  %v3_127a0 = load i32, i32* %v2_127a0, align 4
  %v2_127a3 = add i32 %v3_127a0, %v3_1279d
  %v1_127a5 = add i32 %v0_1279d, -60
  %v2_127a5 = inttoptr i32 %v1_127a5 to i32*
  %v3_127a5 = load i32, i32* %v2_127a5, align 4
  store i32 %v3_127a5, i32* @eax, align 4
  %v2_127a8 = add i32 %v3_127a5, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_127a8 = inttoptr i32 %v2_127a8 to i32*
  store i32 %v2_127a3, i32* %v3_127a8, align 4
  %v0_127ab = load i32, i32* %stack_var_-88, align 4
  %v1_127ab = call i32 @function_1283e(i32 %v0_127ab)
  ret i32 %v1_127ab

; uselistorder directives
  uselistorder i32 %v3_12774, { 1, 0, 2 }
  uselistorder i32 %v2_1271d, { 1, 0 }
  uselistorder i32 %v2_126dd, { 1, 0 }
  uselistorder i32 %v2_1269d, { 1, 0 }
  uselistorder i32 %v0_12697, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1260d, { 1, 0 }
  uselistorder i32 %v2_125d8, { 1, 0 }
  uselistorder i32 %v0_125a0, { 1, 0, 2 }
  uselistorder i32 %v3_12586, { 1, 0 }
  uselistorder i32 %v2_12556, { 1, 0 }
  uselistorder i32 %v2_12524, { 1, 0 }
  uselistorder i32 %v2_124e8, { 1, 0, 2 }
  uselistorder i32 %v0_1257b, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %stack_var_-88, { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 2, 23, 24, 25, 26, 27, 28, 22, 29 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_23aa7, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_26eee, { 1, 0 }
  uselistorder i32 (i32)* @unknown_20832, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_2427e, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1b7fc, { 1, 0 }
  uselistorder i32 (i32)* @function_1283e, { 3, 2, 1, 0 }
}

define i32 @function_127b1() local_unnamed_addr {
dec_label_pc_127b1:
  %eax.global-to-local = alloca i32, align 4
  %v0_127b1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_127b1
}

define i32 @function_127c8(i16 %arg1) local_unnamed_addr {
dec_label_pc_127c8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_127c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_127c8 = add i32 %v0_127c8, 1962989693
  %v2_127c8 = inttoptr i32 %v1_127c8 to i32*
  %v3_127c8 = load i32, i32* %v2_127c8, align 4
  %v4_127c8 = add i32 %v3_127c8, 1
  store i32 %v4_127c8, i32* %v2_127c8, align 4
  %v0_127ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_127ce = add i32 %v0_127ce, 76137541
  %v2_127ce = inttoptr i32 %v1_127ce to i8*
  %v3_127ce = load i8, i8* %v2_127ce, align 1
  %v4_127ce = load i32, i32* %ecx.global-to-local, align 4
  %v5_127ce = trunc i32 %v4_127ce to i8
  %v6_127ce = xor i8 %v5_127ce, %v3_127ce
  store i8 %v6_127ce, i8* %v2_127ce, align 1
  %v0_127d4 = load i32, i32* %eax.global-to-local, align 4
  %v11_127d4 = and i32 %v0_127d4, -24
  store i32 %v11_127d4, i32* %eax.global-to-local, align 4
  ret i32 %v11_127d4

; uselistorder directives
  uselistorder i32 %v11_127d4, { 1, 0 }
}

define i32 @function_127d9() local_unnamed_addr {
dec_label_pc_127d9:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_127d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_127d9 = add i32 %v0_127d9, 1301003349
  %v2_127d9 = inttoptr i32 %v1_127d9 to i8*
  %v3_127d9 = load i8, i8* %v2_127d9, align 1
  %v4_127d9 = load i32, i32* %ecx.global-to-local, align 4
  %v5_127d9 = trunc i32 %v4_127d9 to i8
  %v6_127d9 = add i8 %v5_127d9, %v3_127d9
  store i8 %v6_127d9, i8* %v2_127d9, align 1
  %v0_127df = call i32 @unknown_5504f1e5()
  %v0_127e5 = load i32, i32* @ebp, align 4
  %v1_127e5 = add i32 %v0_127e5, -24
  %v2_127e5 = inttoptr i32 %v1_127e5 to i32*
  %v3_127e5 = load i32, i32* %v2_127e5, align 4
  store i32 %v3_127e5, i32* %ecx.global-to-local, align 4
  %v1_127e8 = add i32 %v0_127e5, -20
  %v2_127e8 = inttoptr i32 %v1_127e8 to i32*
  %v3_127e8 = load i32, i32* %v2_127e8, align 4
  store i32 %v3_127e8, i32* %ebx.global-to-local, align 4
  %v2_127eb = add i32 %v3_127e8, %v3_127e5
  store i32 %v2_127eb, i32* %ecx.global-to-local, align 4
  %v0_127f1 = load i32, i32* %edx.global-to-local, align 4
  %v3_127f8 = call i32 @unknown_1fdd1(i32 %v2_127eb, i32 %v0_127f1, i32 %v0_127df)
  %v0_127fd = call i32 @function_12820()
  ret i32 %v0_127fd
}

define i32 @function_127ff() local_unnamed_addr {
dec_label_pc_127ff:
  %ebp.global-to-local = alloca i32, align 4
  %v0_127ff = load i32, i32* %ebp.global-to-local, align 4
  %v1_127ff = add i32 %v0_127ff, -60
  %v2_127ff = inttoptr i32 %v1_127ff to i32*
  %v3_127ff = load i32, i32* %v2_127ff, align 4
  %v1_12805 = call i32 @unknown_1fda4(i32 %v3_127ff)
  %v1_1280e = add i32 %v0_127ff, -40
  %v2_1280e = inttoptr i32 %v1_1280e to i32*
  %v3_1280e = load i32, i32* %v2_1280e, align 4
  %v1_12815 = add i32 %v0_127ff, -20
  %v2_12815 = inttoptr i32 %v1_12815 to i32*
  %v3_12815 = load i32, i32* %v2_12815, align 4
  %v3_1281b = call i32 @unknown_1fdd1(i32 %v3_12815, i32 %v3_1280e, i32 %v1_12805)
  ret i32 %v3_1281b

; uselistorder directives
  uselistorder i32 %v0_127ff, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_1fdd1, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_1fda4, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_12820() local_unnamed_addr {
dec_label_pc_12820:
  %v0_12820 = load i32, i32* @ebp, align 4
  %v1_12820 = add i32 %v0_12820, -60
  %v2_12820 = inttoptr i32 %v1_12820 to i32*
  %v3_12820 = load i32, i32* %v2_12820, align 4
  %v1_12823 = add i32 %v0_12820, -28
  %v2_12823 = inttoptr i32 %v1_12823 to i32*
  %v3_12823 = load i32, i32* %v2_12823, align 4
  %v1_1282a = add i32 %v0_12820, -20
  %v2_1282a = inttoptr i32 %v1_1282a to i32*
  %v3_1282a = load i32, i32* %v2_1282a, align 4
  %v3_12834 = call i32 @unknown_2006c(i32 %v3_12820, i32 %v3_1282a, i32 %v3_12823)
  ret i32 %v3_12834

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_2006c, { 1, 0 }
}

define i32 @function_1283e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1283e:
  %v0_1283e = load i32, i32* @ebp, align 4
  %v1_1283e = add i32 %v0_1283e, -12
  %v2_1283e = inttoptr i32 %v1_1283e to i32*
  %v3_1283e = load i32, i32* %v2_1283e, align 4
  %v1_12841 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12841 = xor i32 %v1_12841, %v3_1283e
  %v3_12841 = icmp eq i32 %v2_12841, 0
  store i32 %v2_12841, i32* @ebx, align 4
  br i1 %v3_12841, label %bb, label %dec_label_pc_1283e.dec_label_pc_1284a_crit_edge

dec_label_pc_1283e.dec_label_pc_1284a_crit_edge:  ; preds = %dec_label_pc_1283e
  %v2_12848.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1284a

bb:                                               ; preds = %dec_label_pc_1283e
  %v1_12848 = call i32 @function_1284f()
  br label %dec_label_pc_1284a

dec_label_pc_1284a:                               ; preds = %dec_label_pc_1283e.dec_label_pc_1284a_crit_edge, %bb
  %v2_12848 = phi i32 [ %v2_12848.pre, %dec_label_pc_1283e.dec_label_pc_1284a_crit_edge ], [ %v1_12848, %bb ]
  ret i32 %v2_12848

; uselistorder directives
  uselistorder label %dec_label_pc_1284a, { 1, 0 }
}

define i32 @function_1284f() local_unnamed_addr {
dec_label_pc_1284f:
  %v0_1284f = load i32, i32* @ebp, align 4
  %v1_1284f = add i32 %v0_1284f, -8
  %v1_12852 = inttoptr i32 %v1_1284f to i32*
  %v2_12852 = load i32, i32* %v1_12852, align 4
  store i32 %v2_12852, i32* @ebx, align 4
  %v1_12854 = inttoptr i32 %v0_1284f to i32*
  %v2_12854 = load i32, i32* %v1_12854, align 4
  store i32 %v2_12854, i32* @ebp, align 4
  %v0_12855 = load i32, i32* @eax, align 4
  ret i32 %v0_12855

; uselistorder directives
  uselistorder i32 -8, { 1, 3, 0, 2, 4 }
}

define i32 @_ZNK9base_uintILj256EE9SerializeI11CHashWriterEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12856:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_128a5

bb:                                               ; preds = %dec_label_pc_12856
  %v8_128a3 = call i32 @function_128aa(i32 %arg2, i32 %arg1, i32 ptrtoint (i32* @global_var_20.1184 to i32), i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_128a5

dec_label_pc_128a5:                               ; preds = %bb, %dec_label_pc_12856
  %v9_128a3 = phi i32 [ %v8_128a3, %bb ], [ 0, %dec_label_pc_12856 ]
  ret i32 %v9_128a3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_128aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_128aa:
  %v0_128ab = load i32, i32* @eax, align 4
  ret i32 %v0_128ab
}

define i32 @_Z16GetSerializeSizeIc7uint256EjRKSt4pairIT_T0_Eii(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_128ac:
  %v4_128d0 = ptrtoint i8* %arg1 to i32
  %v2_128d3 = load i8, i8* %arg1, align 1
  %v3_128d3 = zext i8 %v2_128d3 to i32
  store i32 %v3_128d3, i32* @eax, align 4
  %v4_128ea = call i32 @function_16bdc(i32 %v3_128d3, i32 %arg2, i32 %arg3)
  %v1_128f4 = add i32 %v4_128d0, ptrtoint (i8** @global_var_4.1177 to i32)
  %v4_12908 = call i32 @unknown_218f5(i32 %v1_128f4, i32 %arg2, i32 %arg3)
  %v2_1290d = add i32 %v4_128ea, %v4_12908
  store i32 %v2_1290d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1291b

bb:                                               ; preds = %dec_label_pc_128ac
  %v1_12919 = call i32 @function_12920()
  br label %dec_label_pc_1291b

dec_label_pc_1291b:                               ; preds = %bb, %dec_label_pc_128ac
  %v2_12919 = phi i32 [ %v1_12919, %bb ], [ %v2_1290d, %dec_label_pc_128ac ]
  ret i32 %v2_12919

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_12920() local_unnamed_addr {
dec_label_pc_12920:
  %v0_12925 = load i32, i32* @eax, align 4
  ret i32 %v0_12925
}

define i32 @_Z16GetSerializeSizeI6CCoinsEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12926:
  store i32 %arg1, i32* @eax, align 4
  %v3_1295d = call i32 @function_18a44(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1295d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1296e

bb:                                               ; preds = %dec_label_pc_12926
  %v1_1296c = call i32 @function_12973()
  br label %dec_label_pc_1296e

dec_label_pc_1296e:                               ; preds = %bb, %dec_label_pc_12926
  %v2_1296c = phi i32 [ %v1_1296c, %bb ], [ %v3_1295d, %dec_label_pc_12926 ]
  ret i32 %v2_1296c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12973() local_unnamed_addr {
dec_label_pc_12973:
  %v0_12974 = load i32, i32* @eax, align 4
  ret i32 %v0_12974
}

define i32 @_Z9SerializeI11CDataStream6CCoinsEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12975:
  %v8_129b9 = call i32 @unknown_278f7(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_129ca

bb:                                               ; preds = %dec_label_pc_12975
  %v1_129c8 = call i32 @function_129cf()
  br label %dec_label_pc_129ca

dec_label_pc_129ca:                               ; preds = %bb, %dec_label_pc_12975
  %v2_129c8 = phi i32 [ %v1_129c8, %bb ], [ 0, %dec_label_pc_12975 ]
  ret i32 %v2_129c8

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_129cf() local_unnamed_addr {
dec_label_pc_129cf:
  %v0_129d0 = load i32, i32* @eax, align 4
  ret i32 %v0_129d0
}

define i32 @_Z9SerializeI11CDataStreamEvRT_cii(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_129d1:
  ret i32 %arg1
}

define i32 @function_12a14(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12a14:
  %v0_12a14 = load i32, i32* @ebp, align 4
  %v1_12a14 = add i32 %v0_12a14, -12
  %v2_12a14 = inttoptr i32 %v1_12a14 to i32*
  %v3_12a14 = load i32, i32* %v2_12a14, align 4
  %v1_12a17 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12a17 = xor i32 %v1_12a17, %v3_12a14
  %v3_12a17 = icmp eq i32 %v2_12a17, 0
  store i32 %v2_12a17, i32* @eax, align 4
  br i1 %v3_12a17, label %bb, label %dec_label_pc_12a20

bb:                                               ; preds = %dec_label_pc_12a14
  %v1_12a1e = call i32 @function_12a25()
  br label %dec_label_pc_12a20

dec_label_pc_12a20:                               ; preds = %bb, %dec_label_pc_12a14
  %v2_12a1e = phi i32 [ %v1_12a1e, %bb ], [ %v2_12a17, %dec_label_pc_12a14 ]
  ret i32 %v2_12a1e
}

define i32 @function_12a25() local_unnamed_addr {
dec_label_pc_12a25:
  %v0_12a26 = load i32, i32* @eax, align 4
  ret i32 %v0_12a26
}

define i32 @_Z9SerializeI11CDataStream7uint256EvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a27:
  %v8_12a6b = call i32 @unknown_27d93(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12a7c

bb:                                               ; preds = %dec_label_pc_12a27
  %v1_12a7a = call i32 @function_12a81()
  br label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %bb, %dec_label_pc_12a27
  %v2_12a7a = phi i32 [ %v1_12a7a, %bb ], [ 0, %dec_label_pc_12a27 ]
  ret i32 %v2_12a7a

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12a81() local_unnamed_addr {
dec_label_pc_12a81:
  %v0_12a82 = load i32, i32* @eax, align 4
  ret i32 %v0_12a82
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a84:
  %v1_12a9e = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_12a9e = inttoptr i32 %v1_12a9e to i32*
  %v3_12a9e = load i32, i32* %v2_12a9e, align 4
  store i32 %v3_12a9e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12aad

bb:                                               ; preds = %dec_label_pc_12a84
  %v2_12aab = call i32 @function_12ab2(i32 %arg1)
  br label %dec_label_pc_12aad

dec_label_pc_12aad:                               ; preds = %bb, %dec_label_pc_12a84
  %v3_12aab = phi i32 [ %v2_12aab, %bb ], [ %v3_12a9e, %dec_label_pc_12a84 ]
  ret i32 %v3_12aab
}

define i32 @function_12ab2(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ab2:
  %v0_12ab3 = load i32, i32* @eax, align 4
  ret i32 %v0_12ab3
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ab4:
  %v1_12ace = add i32 %arg1, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_12ace, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12add

bb:                                               ; preds = %dec_label_pc_12ab4
  %v2_12adb = call i32 @function_12ae2(i32 %arg1)
  br label %dec_label_pc_12add

dec_label_pc_12add:                               ; preds = %bb, %dec_label_pc_12ab4
  %v3_12adb = phi i32 [ %v2_12adb, %bb ], [ %v1_12ace, %dec_label_pc_12ab4 ]
  ret i32 %v3_12adb
}

define i32 @function_12ae2(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ae2:
  %v0_12ae3 = load i32, i32* @eax, align 4
  ret i32 %v0_12ae3
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_ESE_RS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12ae4:
  %v0_12b08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_12b08
}

define i32 @function_12b12(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b12:
  %v10_12b12 = load i32, i32* @ebx, align 4
  %v11_12b12 = and i32 %v10_12b12, -256
  store i32 %v11_12b12, i32* @ebx, align 4
  %v17_12b12 = load i32, i32* @eax, align 4
  ret i32 %v17_12b12
}

define i32 @function_12b21() local_unnamed_addr {
dec_label_pc_12b21:
  %eax.global-to-local = alloca i32, align 4
  %v0_12b21 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12b21
}

define i32 @function_12b4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b4e:
  %v2_12b4e = load i32, i32* @eax, align 4
  %v4_12b4e = mul i32 %v2_12b4e, 2
  %v21_12b4e = inttoptr i32 %v2_12b4e to i32*
  store i32 %v4_12b4e, i32* %v21_12b4e, align 4
  %v0_12b50 = load i32, i32* @eax, align 4
  %v1_12b50 = load i32, i32* @ebp, align 4
  %v2_12b50 = add i32 %v1_12b50, -36
  %v3_12b50 = inttoptr i32 %v2_12b50 to i32*
  store i32 %v0_12b50, i32* %v3_12b50, align 4
  %v0_12b53 = call i32 @function_12b63()
  ret i32 %v0_12b53

; uselistorder directives
  uselistorder i32 %v2_12b4e, { 1, 0 }
}

define i32 @function_12b52(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12b52:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12b63() local_unnamed_addr {
dec_label_pc_12b63:
  %v0_12b63 = load i32, i32* @ebp, align 4
  %v1_12b6e = add i32 %v0_12b63, -40
  %v2_12b6e = inttoptr i32 %v1_12b6e to i32*
  %v3_12b6e = load i32, i32* %v2_12b6e, align 4
  %v1_12b75 = add i32 %v0_12b63, -28
  %v2_12b75 = inttoptr i32 %v1_12b75 to i32*
  %v3_12b75 = load i32, i32* %v2_12b75, align 4
  %v2_12b7b = call i32 @unknown_256c0(i32 %v3_12b75, i32 %v3_12b6e)
  %v0_12b80 = load i32, i32* @ebp, align 4
  %v1_12b80 = add i32 %v0_12b80, -28
  %v2_12b80 = inttoptr i32 %v1_12b80 to i32*
  %v3_12b80 = load i32, i32* %v2_12b80, align 4
  ret i32 %v3_12b80

; uselistorder directives
  uselistorder i32 %v0_12b63, { 1, 0 }
}

define i32 @function_12b84(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b84:
  %v0_12b86 = load i32, i32* @edx, align 4
  %v1_12b86 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12b86 = icmp eq i32 %v1_12b86, %v0_12b86
  br i1 %v3_12b86, label %bb, label %dec_label_pc_12b84.dec_label_pc_12b8f_crit_edge

dec_label_pc_12b84.dec_label_pc_12b8f_crit_edge:  ; preds = %dec_label_pc_12b84
  %v2_12b8d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_12b8f

bb:                                               ; preds = %dec_label_pc_12b84
  %v1_12b8d = call i32 @function_12b94()
  br label %dec_label_pc_12b8f

dec_label_pc_12b8f:                               ; preds = %dec_label_pc_12b84.dec_label_pc_12b8f_crit_edge, %bb
  %v2_12b8d = phi i32 [ %v2_12b8d.pre, %dec_label_pc_12b84.dec_label_pc_12b8f_crit_edge ], [ %v1_12b8d, %bb ]
  ret i32 %v2_12b8d

; uselistorder directives
  uselistorder label %dec_label_pc_12b8f, { 1, 0 }
}

define i32 @function_12b94() local_unnamed_addr {
dec_label_pc_12b94:
  %v0_12b95 = load i32, i32* @eax, align 4
  ret i32 %v0_12b95
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b98:
  %stack_var_-17 = alloca i32, align 4
  %v1_12bb5 = call i32 @unknown_27ffe(i32 %arg1)
  %v2_12bbe = ptrtoint i32* %stack_var_-17 to i32
  %v2_12bc4 = call i32 @unknown_2802e(i32 %v2_12bbe, i32 %v1_12bb5)
  store i32 %v2_12bc4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12bd5

bb:                                               ; preds = %dec_label_pc_12b98
  %v1_12bd3 = call i32 @function_12bda()
  br label %dec_label_pc_12bd5

dec_label_pc_12bd5:                               ; preds = %bb, %dec_label_pc_12b98
  %v2_12bd3 = phi i32 [ %v1_12bd3, %bb ], [ %v2_12bc4, %dec_label_pc_12b98 ]
  ret i32 %v2_12bd3
}

define i32 @function_12bda() local_unnamed_addr {
dec_label_pc_12bda:
  %v0_12bdb = load i32, i32* @eax, align 4
  ret i32 %v0_12bdb
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEC1EPSt13_Rb_tree_nodeIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bdc:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12c0d

bb:                                               ; preds = %dec_label_pc_12bdc
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_12c0b = call i32 @function_12c12(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_12c0d

dec_label_pc_12c0d:                               ; preds = %bb, %dec_label_pc_12bdc
  %v4_12c0b = phi i32 [ %v3_12c0b, %bb ], [ 0, %dec_label_pc_12bdc ]
  ret i32 %v4_12c0b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_12c12(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c12:
  %v0_12c13 = load i32, i32* @eax, align 4
  ret i32 %v0_12c13
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint2566CCoinsEEC1EPKSt13_Rb_tree_nodeIS4_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c14:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12c45

bb:                                               ; preds = %dec_label_pc_12c14
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_12c43 = call i32 @function_12c4a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_12c45

dec_label_pc_12c45:                               ; preds = %bb, %dec_label_pc_12c14
  %v4_12c43 = phi i32 [ %v3_12c43, %bb ], [ 0, %dec_label_pc_12c14 ]
  ret i32 %v4_12c43

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_12c4a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c4a:
  %v0_12c4b = load i32, i32* @eax, align 4
  ret i32 %v0_12c4b
}

define i32 @_ZN11CDataStream16GetSerializeSizeI15CDiskBlockIndexEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c4c:
  %v1_12c6c = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_12c6c = inttoptr i32 %v1_12c6c to i32*
  %v3_12c6c = load i32, i32* %v2_12c6c, align 4
  %v1_12c72 = add i32 %arg1, 20
  %v2_12c72 = inttoptr i32 %v1_12c72 to i32*
  %v3_12c72 = load i32, i32* %v2_12c72, align 4
  %v3_12c83 = call i32 @unknown_28115(i32 %arg2, i32 %v3_12c72, i32 %v3_12c6c)
  store i32 %v3_12c83, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12c94

bb:                                               ; preds = %dec_label_pc_12c4c
  %v1_12c92 = call i32 @function_12c99()
  br label %dec_label_pc_12c94

dec_label_pc_12c94:                               ; preds = %bb, %dec_label_pc_12c4c
  %v2_12c92 = phi i32 [ %v1_12c92, %bb ], [ %v3_12c83, %dec_label_pc_12c4c ]
  ret i32 %v2_12c92

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12c99() local_unnamed_addr {
dec_label_pc_12c99:
  %v0_12c9a = load i32, i32* @eax, align 4
  ret i32 %v0_12c9a
}

define i32 @_ZN11CDataStreamlsI15CDiskBlockIndexEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c9c:
  %v1_12cbc = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_12cbc = inttoptr i32 %v1_12cbc to i32*
  %v3_12cbc = load i32, i32* %v2_12cbc, align 4
  %v1_12cc2 = add i32 %arg1, 20
  %v2_12cc2 = inttoptr i32 %v1_12cc2 to i32*
  %v3_12cc2 = load i32, i32* %v2_12cc2, align 4
  %v4_12cda = call i32 @unknown_281b4(i32 %arg1, i32 %arg2, i32 %v3_12cc2, i32 %v3_12cbc)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12cee

bb:                                               ; preds = %dec_label_pc_12c9c
  %v1_12cec = call i32 @function_12cf3()
  br label %dec_label_pc_12cee

dec_label_pc_12cee:                               ; preds = %bb, %dec_label_pc_12c9c
  %v2_12cec = phi i32 [ %v1_12cec, %bb ], [ %arg1, %dec_label_pc_12c9c ]
  ret i32 %v2_12cec

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_12cf3() local_unnamed_addr {
dec_label_pc_12cf3:
  %v0_12cf4 = load i32, i32* @eax, align 4
  ret i32 %v0_12cf4
}

define i32 @_Z11UnserializeI11CDataStream7CBigNumEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12cf5:
  %v8_12d39 = call i32 @unknown_28269(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12d4a

bb:                                               ; preds = %dec_label_pc_12cf5
  %v1_12d48 = call i32 @function_12d4f()
  br label %dec_label_pc_12d4a

dec_label_pc_12d4a:                               ; preds = %bb, %dec_label_pc_12cf5
  %v2_12d48 = phi i32 [ %v1_12d48, %bb ], [ 0, %dec_label_pc_12cf5 ]
  ret i32 %v2_12d48

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12d4f() local_unnamed_addr {
dec_label_pc_12d4f:
  %v0_12d50 = load i32, i32* @eax, align 4
  ret i32 %v0_12d50
}

define i32 @_ZN11CDataStream16GetSerializeSizeI7CBigNumEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d52:
  ret i32 %arg1
}

define i32 @function_12d78(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12d78:
  %v0_12d78 = load i32, i32* @eax, align 4
  %v1_12d78 = add i32 %v0_12d78, 20
  %v2_12d78 = inttoptr i32 %v1_12d78 to i32*
  %v3_12d78 = load i32, i32* %v2_12d78, align 4
  %v0_12d7b = load i32, i32* @edx, align 4
  %v0_12d83 = load i32, i32* @ebp, align 4
  %v1_12d83 = add i32 %v0_12d83, -32
  %v2_12d83 = inttoptr i32 %v1_12d83 to i32*
  %v3_12d83 = load i32, i32* %v2_12d83, align 4
  %v3_12d89 = call i32 @unknown_28368(i32 %v3_12d83, i32 %v3_12d78, i32 %v0_12d7b)
  store i32 %v3_12d89, i32* @eax, align 4
  %v0_12d8e = load i32, i32* @ebp, align 4
  %v1_12d8e = add i32 %v0_12d8e, -12
  %v2_12d8e = inttoptr i32 %v1_12d8e to i32*
  %v3_12d8e = load i32, i32* %v2_12d8e, align 4
  %v1_12d91 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12d91 = icmp eq i32 %v1_12d91, %v3_12d8e
  br i1 %v3_12d91, label %bb, label %dec_label_pc_12d9a

bb:                                               ; preds = %dec_label_pc_12d78
  %v1_12d98 = call i32 @function_12d9f()
  br label %dec_label_pc_12d9a

dec_label_pc_12d9a:                               ; preds = %bb, %dec_label_pc_12d78
  %v2_12d98 = phi i32 [ %v1_12d98, %bb ], [ %v3_12d89, %dec_label_pc_12d78 ]
  ret i32 %v2_12d98
}

define i32 @function_12d9f() local_unnamed_addr {
dec_label_pc_12d9f:
  %v0_12da0 = load i32, i32* @eax, align 4
  ret i32 %v0_12da0
}

define i32 @_ZN11CDataStreamlsI7CBigNumEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12da2:
  %v1_12dc2 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_12dc2 = inttoptr i32 %v1_12dc2 to i32*
  %v3_12dc2 = load i32, i32* %v2_12dc2, align 4
  %v1_12dc8 = add i32 %arg1, 20
  %v2_12dc8 = inttoptr i32 %v1_12dc8 to i32*
  %v3_12dc8 = load i32, i32* %v2_12dc8, align 4
  %v4_12de0 = call i32 @unknown_28407(i32 %arg1, i32 %arg2, i32 %v3_12dc8, i32 %v3_12dc2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12df4

bb:                                               ; preds = %dec_label_pc_12da2
  %v1_12df2 = call i32 @function_12df9()
  br label %dec_label_pc_12df4

dec_label_pc_12df4:                               ; preds = %bb, %dec_label_pc_12da2
  %v2_12df2 = phi i32 [ %v1_12df2, %bb ], [ %arg1, %dec_label_pc_12da2 ]
  ret i32 %v2_12df2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_12df9() local_unnamed_addr {
dec_label_pc_12df9:
  %v0_12dfa = load i32, i32* @eax, align 4
  ret i32 %v0_12dfa
}

define i32 @_ZN11CDataStream16GetSerializeSizeI14CBlockFileInfoEEjRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12dfc:
  %v1_12e1c = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_12e1c = inttoptr i32 %v1_12e1c to i32*
  %v3_12e1c = load i32, i32* %v2_12e1c, align 4
  %v1_12e22 = add i32 %arg1, 20
  %v2_12e22 = inttoptr i32 %v1_12e22 to i32*
  %v3_12e22 = load i32, i32* %v2_12e22, align 4
  %v3_12e33 = call i32 @unknown_284bd(i32 %arg2, i32 %v3_12e22, i32 %v3_12e1c)
  store i32 %v3_12e33, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12e44

bb:                                               ; preds = %dec_label_pc_12dfc
  %v1_12e42 = call i32 @function_12e49()
  br label %dec_label_pc_12e44

dec_label_pc_12e44:                               ; preds = %bb, %dec_label_pc_12dfc
  %v2_12e42 = phi i32 [ %v1_12e42, %bb ], [ %v3_12e33, %dec_label_pc_12dfc ]
  ret i32 %v2_12e42

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12e49() local_unnamed_addr {
dec_label_pc_12e49:
  %v0_12e4a = load i32, i32* @eax, align 4
  ret i32 %v0_12e4a
}

define i32 @_ZN11CDataStreamlsI14CBlockFileInfoEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e4c:
  ret i32 %arg2
}

define i32 @function_12e86(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e86:
  %v0_12e8a = call i32 @unknown_2855c()
  %v0_12e8f = load i32, i32* @ebp, align 4
  %v1_12e8f = add i32 %v0_12e8f, -28
  %v2_12e8f = inttoptr i32 %v1_12e8f to i32*
  %v3_12e8f = load i32, i32* %v2_12e8f, align 4
  store i32 %v3_12e8f, i32* @eax, align 4
  %v1_12e92 = add i32 %v0_12e8f, -12
  %v2_12e92 = inttoptr i32 %v1_12e92 to i32*
  %v3_12e92 = load i32, i32* %v2_12e92, align 4
  %v1_12e95 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12e95 = icmp eq i32 %v1_12e95, %v3_12e92
  br i1 %v3_12e95, label %bb, label %dec_label_pc_12e9e

bb:                                               ; preds = %dec_label_pc_12e86
  %v1_12e9c = call i32 @function_12ea3()
  br label %dec_label_pc_12e9e

dec_label_pc_12e9e:                               ; preds = %bb, %dec_label_pc_12e86
  %v2_12e9c = phi i32 [ %v1_12e9c, %bb ], [ %v3_12e8f, %dec_label_pc_12e86 ]
  ret i32 %v2_12e9c
}

define i32 @function_12ea3() local_unnamed_addr {
dec_label_pc_12ea3:
  %v0_12ea4 = load i32, i32* @eax, align 4
  ret i32 %v0_12ea4
}

define i32 @_Z16GetSerializeSizeIciEjRKSt4pairIT_T0_Eii(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ea5:
  ret i32 %arg1
}

define i32 @function_12eb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12eb0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_12eb0 = load i32, i32* @ebp, align 4
  %v0_12eb4 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_12eb4 = or i32 %v0_12eb4, 137
  store i32 %v11_12eb4, i32* %eax.global-to-local, align 4
  %v0_12eb7 = load i32, i32* @ecx, align 4
  %v1_12eb7 = sub i32 %v0_12eb7, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_12eb9 = add i32 %v0_12eb0, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)))
  store i32 %v1_12eb9, i32* @ebp, align 4
  %v1_12eba = add i32 %v1_12eb7, -1587159995
  %v2_12eba = inttoptr i32 %v1_12eba to i8*
  %v3_12eba = load i8, i8* %v2_12eba, align 1
  %v5_12eba = trunc i32 %v1_12eb7 to i8
  %v8_12eba = add i8 %v3_12eba, %v5_12eba
  %v28_12eba = icmp ult i8 %v8_12eba, %v3_12eba
  store i1 %v28_12eba, i1* %cf.global-to-local, align 1
  store i8 %v8_12eba, i8* %v2_12eba, align 1
  %v0_12ec0 = load i32, i32* %eax.global-to-local, align 4
  %v1_12ec0 = trunc i32 %v0_12ec0 to i8
  %v2_12ec0 = load i1, i1* %cf.global-to-local, align 1
  %v3_12ec0 = zext i1 %v2_12ec0 to i8
  %v4_12ec0 = add i8 %v3_12ec0, %v1_12ec0
  %v19_12ec0 = icmp ule i8 %v4_12ec0, %v1_12ec0
  %v21_12ec0 = icmp eq i1 %v2_12ec0, %v19_12ec0
  store i1 %v21_12ec0, i1* %cf.global-to-local, align 1
  %v22_12ec0 = zext i8 %v4_12ec0 to i32
  %v24_12ec0 = and i32 %v0_12ec0, -256
  %v25_12ec0 = or i32 %v22_12ec0, %v24_12ec0
  store i32 %v25_12ec0, i32* %eax.global-to-local, align 4
  %v1_12ec2 = inttoptr i32 %v25_12ec0 to i8*
  %v2_12ec2 = load i8, i8* %v1_12ec2, align 1
  %v5_12ec2 = add i8 %v2_12ec2, %v4_12ec0
  store i8 %v5_12ec2, i8* %v1_12ec2, align 1
  %v0_12ec4 = load i32, i32* %eax.global-to-local, align 4
  %v1_12ec4 = load i32, i32* @ebp, align 4
  %v2_12ec4 = add i32 %v1_12ec4, -12
  %v3_12ec4 = inttoptr i32 %v2_12ec4 to i32*
  store i32 %v0_12ec4, i32* %v3_12ec4, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12ec9 = load i32, i32* @ebp, align 4
  %v1_12ec9 = add i32 %v0_12ec9, -28
  %v2_12ec9 = inttoptr i32 %v1_12ec9 to i32*
  %v3_12ec9 = load i32, i32* %v2_12ec9, align 4
  store i32 %v3_12ec9, i32* %eax.global-to-local, align 4
  %v1_12ecc = inttoptr i32 %v3_12ec9 to i8*
  %v2_12ecc = load i8, i8* %v1_12ecc, align 1
  %v3_12ecc = zext i8 %v2_12ecc to i32
  store i32 %v3_12ecc, i32* %eax.global-to-local, align 4
  ret i32 %v3_12ecc

; uselistorder directives
  uselistorder i8 %v4_12ec0, { 0, 2, 1 }
  uselistorder i8 %v1_12ec0, { 1, 0 }
  uselistorder i8 %v3_12eba, { 1, 0 }
  uselistorder i32 %v1_12eb7, { 1, 0 }
}

define i32 @function_12ee6(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ee6:
  %v2_12ee6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_12ee6 = load i32, i32* @eax, align 4
  %v4_12ee6 = trunc i32 %v3_12ee6 to i8
  %v5_12ee6 = add i8 %v4_12ee6, %v2_12ee6
  %v21_12ee6 = inttoptr i32 %v3_12ee6 to i8*
  store i8 %v5_12ee6, i8* %v21_12ee6, align 1
  %v0_12ee8 = load i32, i32* @eax, align 4
  store i32 %v0_12ee8, i32* @ebx, align 4
  %v0_12eea = load i32, i32* @ebp, align 4
  %v1_12eea = add i32 %v0_12eea, -28
  %v2_12eea = inttoptr i32 %v1_12eea to i32*
  %v3_12eea = load i32, i32* %v2_12eea, align 4
  %v1_12eed = add i32 %v3_12eea, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_12eed = inttoptr i32 %v1_12eed to i32*
  %v3_12eed = load i32, i32* %v2_12eed, align 4
  store i32 %v3_12eed, i32* @eax, align 4
  %v1_12ef0 = add i32 %v0_12eea, -36
  %v2_12ef0 = inttoptr i32 %v1_12ef0 to i32*
  %v3_12ef0 = load i32, i32* %v2_12ef0, align 4
  %v1_12ef7 = add i32 %v0_12eea, -32
  %v2_12ef7 = inttoptr i32 %v1_12ef7 to i32*
  %v3_12ef7 = load i32, i32* %v2_12ef7, align 4
  %v3_12f01 = call i32 @function_17210(i32 %v3_12eed, i32 %v3_12ef7, i32 %v3_12ef0)
  %v1_12f06 = load i32, i32* @ebx, align 4
  %v2_12f06 = add i32 %v1_12f06, %v3_12f01
  store i32 %v2_12f06, i32* @eax, align 4
  %v0_12f08 = load i32, i32* @ebp, align 4
  %v1_12f08 = add i32 %v0_12f08, -12
  %v2_12f08 = inttoptr i32 %v1_12f08 to i32*
  %v3_12f08 = load i32, i32* %v2_12f08, align 4
  %v1_12f0b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12f0b = icmp eq i32 %v1_12f0b, %v3_12f08
  br i1 %v3_12f0b, label %bb, label %dec_label_pc_12f14

bb:                                               ; preds = %dec_label_pc_12ee6
  %v1_12f12 = call i32 @function_12f19()
  br label %dec_label_pc_12f14

dec_label_pc_12f14:                               ; preds = %bb, %dec_label_pc_12ee6
  %v2_12f12 = phi i32 [ %v1_12f12, %bb ], [ %v2_12f06, %dec_label_pc_12ee6 ]
  ret i32 %v2_12f12

; uselistorder directives
  uselistorder i32 %v0_12eea, { 1, 0, 2 }
}

define i32 @function_12f19() local_unnamed_addr {
dec_label_pc_12f19:
  %v0_12f1e = load i32, i32* @eax, align 4
  ret i32 %v0_12f1e
}

define i32 @_Z9SerializeI11CDataStreamciEvRT_RKSt4pairIT0_T1_Eii(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12f1f:
  %v4_12f48 = ptrtoint i8* %arg2 to i32
  %v2_12f4b = load i8, i8* %arg2, align 1
  %v3_12f4b = zext i8 %v2_12f4b to i32
  %v9_12f69 = call i32 @unknown_258f0(i32 %arg1, i32 %v3_12f4b, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %v4_12f48, i32 %arg1)
  %v1_12f71 = add i32 %v4_12f48, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_12f71 = inttoptr i32 %v1_12f71 to i32*
  %v3_12f71 = load i32, i32* %v2_12f71, align 4
  ret i32 %v3_12f71

; uselistorder directives
  uselistorder i32 %v4_12f48, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12f84(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f84:
  %v0_12f86 = load i32, i32* @ebp, align 4
  %v1_12f86 = add i32 %v0_12f86, -28
  %v2_12f86 = inttoptr i32 %v1_12f86 to i32*
  %v3_12f86 = load i32, i32* %v2_12f86, align 4
  %v1_12f8c = call i32 @unknown_20701(i32 %v3_12f86)
  %v0_12f91 = load i32, i32* @ebp, align 4
  %v1_12f91 = add i32 %v0_12f91, -12
  %v2_12f91 = inttoptr i32 %v1_12f91 to i32*
  %v3_12f91 = load i32, i32* %v2_12f91, align 4
  %v1_12f94 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12f94 = xor i32 %v1_12f94, %v3_12f91
  %v3_12f94 = icmp eq i32 %v2_12f94, 0
  store i32 %v2_12f94, i32* @eax, align 4
  br i1 %v3_12f94, label %bb, label %dec_label_pc_12f9d

bb:                                               ; preds = %dec_label_pc_12f84
  %v1_12f9b = call i32 @function_12fa2()
  br label %dec_label_pc_12f9d

dec_label_pc_12f9d:                               ; preds = %bb, %dec_label_pc_12f84
  %v2_12f9b = phi i32 [ %v1_12f9b, %bb ], [ %v2_12f94, %dec_label_pc_12f84 ]
  ret i32 %v2_12f9b
}

define i32 @function_12fa2() local_unnamed_addr {
dec_label_pc_12fa2:
  %v0_12fa3 = load i32, i32* @eax, align 4
  ret i32 %v0_12fa3
}

define i32 @_Z11UnserializeI11CDataStream14CBlockFileInfoEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12fa4:
  ret i32 %arg4
}

define i32 @function_12fc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12fc0:
  %eax.global-to-local = alloca i32, align 4
  %v0_12fc0 = load i32, i32* @ebp, align 4
  %v1_12fc0 = add i32 %v0_12fc0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_12fc0, i32* @ebp, align 4
  %v0_12fc4 = load i32, i32* @eax, align 4
  %v1_12fc4 = trunc i32 %v0_12fc4 to i8
  %v2_12fc4 = load i1, i1* @cf, align 1
  %v3_12fc4 = zext i1 %v2_12fc4 to i8
  %v4_12fc4 = add i8 %v3_12fc4, %v1_12fc4
  %v22_12fc4 = zext i8 %v4_12fc4 to i32
  %v24_12fc4 = and i32 %v0_12fc4, -256
  %v25_12fc4 = or i32 %v22_12fc4, %v24_12fc4
  store i32 %v25_12fc4, i32* %eax.global-to-local, align 4
  %v1_12fc6 = inttoptr i32 %v25_12fc4 to i8*
  %v2_12fc6 = load i8, i8* %v1_12fc6, align 1
  %v5_12fc6 = add i8 %v2_12fc6, %v4_12fc4
  store i8 %v5_12fc6, i8* %v1_12fc6, align 1
  %v0_12fc8 = load i32, i32* %eax.global-to-local, align 4
  %v1_12fc8 = load i32, i32* @ebp, align 4
  %v2_12fc8 = add i32 %v1_12fc8, -12
  %v3_12fc8 = inttoptr i32 %v2_12fc8 to i32*
  store i32 %v0_12fc8, i32* %v3_12fc8, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12fcd = load i32, i32* @ebp, align 4
  %v1_12fcd = add i32 %v0_12fcd, -40
  %v2_12fcd = inttoptr i32 %v1_12fcd to i32*
  %v3_12fcd = load i32, i32* %v2_12fcd, align 4
  store i32 %v3_12fcd, i32* %eax.global-to-local, align 4
  %v1_12fd4 = add i32 %v0_12fcd, -36
  %v2_12fd4 = inttoptr i32 %v1_12fd4 to i32*
  %v3_12fd4 = load i32, i32* %v2_12fd4, align 4
  store i32 %v3_12fd4, i32* %eax.global-to-local, align 4
  %v1_12fdb = add i32 %v0_12fcd, -28
  %v2_12fdb = inttoptr i32 %v1_12fdb to i32*
  %v3_12fdb = load i32, i32* %v2_12fdb, align 4
  store i32 %v3_12fdb, i32* %eax.global-to-local, align 4
  %v1_12fe2 = add i32 %v0_12fcd, -32
  %v2_12fe2 = inttoptr i32 %v1_12fe2 to i32*
  %v3_12fe2 = load i32, i32* %v2_12fe2, align 4
  store i32 %v3_12fe2, i32* %eax.global-to-local, align 4
  %v4_12fe8 = call i32 @unknown_28710(i32 %v3_12fe2, i32 %v3_12fdb, i32 %v3_12fd4, i32 %v3_12fcd)
  store i32 %v4_12fe8, i32* %eax.global-to-local, align 4
  %v0_12fed = load i32, i32* @ebp, align 4
  %v1_12fed = add i32 %v0_12fed, -12
  %v2_12fed = inttoptr i32 %v1_12fed to i32*
  %v3_12fed = load i32, i32* %v2_12fed, align 4
  store i32 %v3_12fed, i32* %eax.global-to-local, align 4
  %v1_12ff0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12ff0 = xor i32 %v1_12ff0, %v3_12fed
  %v3_12ff0 = icmp eq i32 %v2_12ff0, 0
  store i32 %v2_12ff0, i32* @eax, align 4
  br i1 %v3_12ff0, label %bb, label %dec_label_pc_12ff9

bb:                                               ; preds = %dec_label_pc_12fc0
  %v1_12ff7 = call i32 @function_12ffe()
  store i32 %v1_12ff7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12ff9

dec_label_pc_12ff9:                               ; preds = %bb, %dec_label_pc_12fc0
  %v4_12ff7 = phi i32 [ %v1_12ff7, %bb ], [ %v2_12ff0, %dec_label_pc_12fc0 ]
  ret i32 %v4_12ff7

; uselistorder directives
  uselistorder i32 %v0_12fcd, { 1, 0, 2, 3 }
}

define i32 @function_12ffe() local_unnamed_addr {
dec_label_pc_12ffe:
  %v0_12fff = load i32, i32* @eax, align 4
  ret i32 %v0_12fff
}

define i32 @_ZN11CDataStream16GetSerializeSizeIiEEjRKT_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13000:
  %v1_13020 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_13020 = inttoptr i32 %v1_13020 to i32*
  %v3_13020 = load i32, i32* %v2_13020, align 4
  %v1_13026 = add i32 %arg1, 20
  %v2_13026 = inttoptr i32 %v1_13026 to i32*
  %v3_13026 = load i32, i32* %v2_13026, align 4
  %v2_1302c = load i32, i32* %arg2, align 4
  store i32 %v2_1302c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1304a

bb:                                               ; preds = %dec_label_pc_13000
  %v4_13048 = call i32 @function_1304f(i32 %v2_1302c, i32 %v3_13026, i32 %v3_13020)
  br label %dec_label_pc_1304a

dec_label_pc_1304a:                               ; preds = %bb, %dec_label_pc_13000
  %v5_13048 = phi i32 [ %v4_13048, %bb ], [ %v2_1302c, %dec_label_pc_13000 ]
  ret i32 %v5_13048

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1304f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1304f:
  %v0_13050 = load i32, i32* @eax, align 4
  ret i32 %v0_13050
}

define i32 @_ZN6CCoins11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13052:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v1_1308f = add i32 %arg1, 20
  %v1_13095 = call i32 @unknown_1c8fd(i32 %v1_1308f)
  %v2_1309a = ptrtoint i32* %stack_var_-48 to i32
  %v2_130a4 = call i32 @unknown_1c92a(i32 %v2_1309a, i32 %v1_13095)
  %v1_130b2 = call i32 @unknown_1c971(i32 %v2_1309a)
  %v4_130d5 = call i32 @unknown_28a54(i32 %arg2, i32 %v1_130b2, i32 %arg3, i32 %arg4)
  %v2_130da = ptrtoint i32* %stack_var_-52 to i32
  %v1_130e0 = call i32 @unknown_1c4cd(i32 %v2_130da)
  ret i32 %v1_130e0
}

define i32 @function_130f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_130f2:
  %eax.global-to-local = alloca i32, align 4
  %v2_130f2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_130f2 = load i32, i32* @eax, align 4
  %v4_130f2 = trunc i32 %v3_130f2 to i8
  %v5_130f2 = add i8 %v4_130f2, %v2_130f2
  %v21_130f2 = inttoptr i32 %v3_130f2 to i8*
  store i8 %v5_130f2, i8* %v21_130f2, align 1
  %v0_130f7 = load i32, i32* @ebp, align 4
  %v1_130f7 = add i32 %v0_130f7, -40
  store i32 %v1_130f7, i32* %eax.global-to-local, align 4
  %v1_130fd = call i32 @unknown_1c541(i32 %v1_130f7)
  store i32 %v1_130fd, i32* %eax.global-to-local, align 4
  %v0_13102 = load i32, i32* @ebp, align 4
  %v1_13102 = add i32 %v0_13102, -136
  %v2_13102 = inttoptr i32 %v1_13102 to i32*
  %v3_13102 = load i32, i32* %v2_13102, align 4
  %v1_1310c = add i32 %v0_13102, -132
  %v2_1310c = inttoptr i32 %v1_1310c to i32*
  %v3_1310c = load i32, i32* %v2_1310c, align 4
  %v1_1311a = add i32 %v0_13102, -128
  %v2_1311a = inttoptr i32 %v1_1311a to i32*
  %v3_1311a = load i32, i32* %v2_1311a, align 4
  store i32 %v3_1311a, i32* %eax.global-to-local, align 4
  %v5_13120 = call i32 @unknown_28ab0(i32 %v3_1311a, i32 %v1_130fd, i32 %v3_1310c, i32 %v3_13102)
  store i32 %v5_13120, i32* %eax.global-to-local, align 4
  %v0_13125 = load i32, i32* @ebp, align 4
  %v1_13125 = add i32 %v0_13125, -48
  %v2_13125 = inttoptr i32 %v1_13125 to i32*
  %v3_13125 = load i32, i32* %v2_13125, align 4
  %v1_13128 = and i32 %v3_13125, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_13128 = trunc i32 %v1_13128 to i8
  store i32 %v1_13128, i32* %eax.global-to-local, align 4
  %v1_1312d = add i32 %v0_13125, -124
  %v2_1312d = inttoptr i32 %v1_1312d to i32*
  %v3_1312d = load i32, i32* %v2_1312d, align 4
  %v3_13130 = inttoptr i32 %v3_1312d to i8*
  store i8 %v4_13128, i8* %v3_13130, align 1
  %v0_13132 = load i32, i32* @ebp, align 4
  %v1_13132 = add i32 %v0_13132, -15
  store i32 %v1_13132, i32* %eax.global-to-local, align 4
  %v1_13138 = call i32 @unknown_28b0c(i32 %v1_13132)
  %v0_1313d = load i32, i32* @ebp, align 4
  %v1_1313d = add i32 %v0_1313d, -16
  %v2_1313d = inttoptr i32 %v1_1313d to i8*
  store i8 0, i8* %v2_1313d, align 1
  %v0_13141 = load i32, i32* @ebp, align 4
  %v1_13141 = add i32 %v0_13141, -15
  %v1_13148 = add i32 %v0_13141, -16
  %v1_13157 = add i32 %v0_13141, -112
  store i32 %v1_13157, i32* %eax.global-to-local, align 4
  %v5_1315d = call i32 @unknown_28b78(i32 %v1_13157, i32 2, i32 %v1_13148, i32 %v1_13141)
  %v0_13162 = load i32, i32* @ebp, align 4
  %v1_13162 = add i32 %v0_13162, -15
  store i32 %v1_13162, i32* %eax.global-to-local, align 4
  %v1_13168 = call i32 @unknown_28b42(i32 %v1_13162)
  store i32 %v1_13168, i32* %eax.global-to-local, align 4
  %v0_1316d = load i32, i32* @ebp, align 4
  %v1_1316d = add i32 %v0_1316d, -48
  %v2_1316d = inttoptr i32 %v1_1316d to i32*
  %v3_1316d = load i32, i32* %v2_1316d, align 4
  %v1_13170 = and i32 %v3_1316d, 2
  %v2_13170 = icmp eq i32 %v1_13170, 0
  %v1_13175 = icmp eq i1 %v2_13170, false
  %v2_13175 = zext i1 %v1_13175 to i32
  %v1_1317b = add i32 %v0_1316d, -72
  store i32 %v1_1317b, i32* %eax.global-to-local, align 4
  %v1_13186 = add i32 %v0_1316d, -112
  %v4_13190 = call i32 @unknown_1d26a(i32 %v1_1317b, i32 %v1_13186, i32 0)
  %v0_1319c = load i32, i32* @ebp, align 4
  %v1_1319c = add i32 %v0_1319c, -72
  store i32 %v1_1319c, i32* @eax, align 4
  %v2_131a2 = call i32 @function_1509a(i32 %v1_1319c, i32 %v2_13175)
  store i32 %v2_131a2, i32* %eax.global-to-local, align 4
  %v0_131a7 = load i32, i32* @ebp, align 4
  %v1_131a7 = add i32 %v0_131a7, -48
  %v2_131a7 = inttoptr i32 %v1_131a7 to i32*
  %v3_131a7 = load i32, i32* %v2_131a7, align 4
  %v1_131aa = and i32 %v3_131a7, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_131aa = icmp eq i32 %v1_131aa, 0
  %v1_131af = icmp eq i1 %v2_131aa, false
  %v2_131af = zext i1 %v1_131af to i32
  %v1_131b5 = add i32 %v0_131a7, -64
  store i32 %v1_131b5, i32* %eax.global-to-local, align 4
  %v1_131c0 = add i32 %v0_131a7, -112
  %v4_131ca = call i32 @unknown_1d26a(i32 %v1_131b5, i32 %v1_131c0, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v0_131d6 = load i32, i32* @ebp, align 4
  %v1_131d6 = add i32 %v0_131d6, -64
  store i32 %v1_131d6, i32* @eax, align 4
  %v3_131dc = call i32 @function_1509a(i32 %v1_131d6, i32 %v2_131af)
  store i32 %v3_131dc, i32* %eax.global-to-local, align 4
  %v0_131e1 = load i32, i32* @ebp, align 4
  %v1_131e1 = add i32 %v0_131e1, -48
  %v2_131e1 = inttoptr i32 %v1_131e1 to i32*
  %v3_131e1 = load i32, i32* %v2_131e1, align 4
  store i32 %v3_131e1, i32* %eax.global-to-local, align 4
  %v2_131e6 = udiv i32 %v3_131e1, 8
  %v3_131e9 = load i32, i32* %v2_131e1, align 4
  %v1_131ec = and i32 %v3_131e9, 6
  %v2_131ec = icmp eq i32 %v1_131ec, 0
  %v1_131f1 = zext i1 %v2_131ec to i32
  %v2_131f7 = add nuw nsw i32 %v1_131f1, %v2_131e6
  store i32 %v2_131f7, i32* %eax.global-to-local, align 4
  %v2_131f9 = add i32 %v0_131e1, -28
  %v3_131f9 = inttoptr i32 %v2_131f9 to i32*
  store i32 %v2_131f7, i32* %v3_131f9, align 4
  %v0_1327723 = load i32, i32* @ebp, align 4
  %v1_1327724 = add i32 %v0_1327723, -28
  %v2_1327725 = inttoptr i32 %v1_1327724 to i32*
  %v3_1327726 = load i32, i32* %v2_1327725, align 4
  %v10_1327727 = icmp eq i32 %v3_1327726, 0
  %v1_1327b28 = icmp eq i1 %v10_1327727, false
  %v2_1327b29 = zext i1 %v1_1327b28 to i32
  %v3_1327b30 = load i32, i32* %eax.global-to-local, align 4
  %v4_1327b31 = and i32 %v3_1327b30, -256
  %v5_1327b32 = or i32 %v2_1327b29, %v4_1327b31
  store i32 %v5_1327b32, i32* %eax.global-to-local, align 4
  %v5_1327e33 = icmp eq i1 %v1_1327b28, false
  %v1_1328034 = icmp eq i1 %v5_1327e33, false
  br i1 %v1_1328034, label %dec_label_pc_131fe, label %dec_label_pc_13286

dec_label_pc_131fe:                               ; preds = %dec_label_pc_130f2, %dec_label_pc_13277.backedge
  %v0_1327735 = phi i32 [ %v0_13277, %dec_label_pc_13277.backedge ], [ %v0_1327723, %dec_label_pc_130f2 ]
  %v1_131fe = add i32 %v0_1327735, -14
  %v2_131fe = inttoptr i32 %v1_131fe to i8*
  store i8 0, i8* %v2_131fe, align 1
  %v0_13202 = load i32, i32* @ebp, align 4
  %v1_13202 = add i32 %v0_13202, -136
  %v2_13202 = inttoptr i32 %v1_13202 to i32*
  %v3_13202 = load i32, i32* %v2_13202, align 4
  store i32 %v3_13202, i32* %eax.global-to-local, align 4
  %v1_1320c = add i32 %v0_13202, -132
  %v2_1320c = inttoptr i32 %v1_1320c to i32*
  %v3_1320c = load i32, i32* %v2_1320c, align 4
  %v1_13216 = add i32 %v0_13202, -14
  store i32 %v1_13216, i32* %eax.global-to-local, align 4
  %v1_1321d = add i32 %v0_13202, -128
  %v2_1321d = inttoptr i32 %v1_1321d to i32*
  %v3_1321d = load i32, i32* %v2_1321d, align 4
  store i32 %v3_1321d, i32* %eax.global-to-local, align 4
  %v6_13223 = call i32 @unknown_28c63(i32 %v3_1321d, i32 %v1_13216, i32 %v3_1320c, i32 %v3_13202)
  store i32 %v6_13223, i32* %eax.global-to-local, align 4
  %v0_13228 = load i32, i32* @ebp, align 4
  %v1_13228 = add i32 %v0_13228, -24
  %v2_13228 = inttoptr i32 %v1_13228 to i32*
  store i32 0, i32* %v2_13228, align 4
  br label %dec_label_pc_13260

dec_label_pc_13231:                               ; preds = %dec_label_pc_13260
  %v3_13238 = load i32, i32* %v2_13260, align 4
  store i32 %v3_13238, i32* %eax.global-to-local, align 4
  %v3_1323f = urem i32 %v3_13238, 32
  %v5_1323f = icmp eq i32 %v3_1323f, 0
  br i1 %v5_1323f, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_13231
  %v6_1323f = lshr i32 %v4_13231, %v3_1323f
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_13231, %bb
  %v0_13241 = phi i32 [ %v4_13231, %dec_label_pc_13231 ], [ %v6_1323f, %bb ]
  %v1_13243 = urem i32 %v0_13241, 2
  store i32 %v1_13243, i32* %eax.global-to-local, align 4
  %v1_13246 = trunc i32 %v1_13243 to i8
  %v3_13246 = add i32 %v0_13260, -13
  %v4_13246 = inttoptr i32 %v3_13246 to i8*
  store i8 %v1_13246, i8* %v4_13246, align 1
  %v0_13249 = load i32, i32* @ebp, align 4
  %v1_13249 = add i32 %v0_13249, -13
  %v2_13249 = inttoptr i32 %v1_13249 to i8*
  %v3_13249 = load i8, i8* %v2_13249, align 1
  %v4_13249 = zext i8 %v3_13249 to i32
  %v1_13251 = add i32 %v0_13249, -112
  store i32 %v1_13251, i32* %eax.global-to-local, align 4
  %v3_13257 = call i32 @unknown_28cba(i32 %v1_13251, i32 %v4_13249)
  store i32 %v3_13257, i32* %eax.global-to-local, align 4
  %v0_1325c = load i32, i32* @ebp, align 4
  %v1_1325c = add i32 %v0_1325c, -24
  %v2_1325c = inttoptr i32 %v1_1325c to i32*
  %v3_1325c = load i32, i32* %v2_1325c, align 4
  %v4_1325c = add i32 %v3_1325c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1325c, i32* %v2_1325c, align 4
  br label %dec_label_pc_13260

dec_label_pc_13260:                               ; preds = %bb19, %dec_label_pc_131fe
  %v0_13260 = load i32, i32* @ebp, align 4
  %v1_13260 = add i32 %v0_13260, -24
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  %v3_13260 = load i32, i32* %v2_13260, align 4
  %tmp21 = icmp ult i32 %v3_13260, 8
  %v3_13264 = zext i1 %tmp21 to i32
  %v4_13264 = load i32, i32* %eax.global-to-local, align 4
  %v5_13264 = and i32 %v4_13264, -256
  %v6_13264 = or i32 %v5_13264, %v3_13264
  store i32 %v6_13264, i32* %eax.global-to-local, align 4
  %v5_13267 = icmp eq i1 %tmp21, false
  %v1_13269 = icmp eq i1 %v5_13267, false
  %v1_13231 = add i32 %v0_13260, -14
  %v2_13231 = inttoptr i32 %v1_13231 to i8*
  %v3_13231 = load i8, i8* %v2_13231, align 1
  %v4_13231 = zext i8 %v3_13231 to i32
  store i32 %v4_13231, i32* %eax.global-to-local, align 4
  br i1 %v1_13269, label %dec_label_pc_13231, label %dec_label_pc_1326b

dec_label_pc_1326b:                               ; preds = %dec_label_pc_13260
  %v5_1326f = icmp eq i8 %v3_13231, 0
  br i1 %v5_1326f, label %dec_label_pc_13277.backedge, label %dec_label_pc_13273

dec_label_pc_13277.backedge:                      ; preds = %dec_label_pc_1326b, %dec_label_pc_13273
  %v3_1327b = phi i32 [ %v4_13231, %dec_label_pc_1326b ], [ %v3_1327b.pre, %dec_label_pc_13273 ]
  %v0_13277 = phi i32 [ %v0_13260, %dec_label_pc_1326b ], [ %v0_13277.pre, %dec_label_pc_13273 ]
  %v1_13277 = add i32 %v0_13277, -28
  %v2_13277 = inttoptr i32 %v1_13277 to i32*
  %v3_13277 = load i32, i32* %v2_13277, align 4
  %v10_13277 = icmp eq i32 %v3_13277, 0
  %v1_1327b = icmp eq i1 %v10_13277, false
  %v2_1327b = zext i1 %v1_1327b to i32
  %v4_1327b = and i32 %v3_1327b, -256
  %v5_1327b = or i32 %v2_1327b, %v4_1327b
  store i32 %v5_1327b, i32* %eax.global-to-local, align 4
  %v5_1327e = icmp eq i1 %v1_1327b, false
  %v1_13280 = icmp eq i1 %v5_1327e, false
  br i1 %v1_13280, label %dec_label_pc_131fe, label %dec_label_pc_13286

dec_label_pc_13273:                               ; preds = %dec_label_pc_1326b
  %v1_13273 = add i32 %v0_13260, -28
  %v2_13273 = inttoptr i32 %v1_13273 to i32*
  %v3_13273 = load i32, i32* %v2_13273, align 4
  %v4_13273 = sub i32 %v3_13273, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_13273, i32* %v2_13273, align 4
  %v0_13277.pre = load i32, i32* @ebp, align 4
  %v3_1327b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_13277.backedge

dec_label_pc_13286:                               ; preds = %dec_label_pc_13277.backedge, %dec_label_pc_130f2
  %v0_13277.lcssa = phi i32 [ %v0_1327723, %dec_label_pc_130f2 ], [ %v0_13277, %dec_label_pc_13277.backedge ]
  %v1_13286 = add i32 %v0_13277.lcssa, -92
  store i32 %v1_13286, i32* @eax, align 4
  %v2_1328c = call i32 @function_18d1e(i32 %v1_13286)
  %v0_13291 = load i32, i32* @ebp, align 4
  %v1_13291 = add i32 %v0_13291, -112
  store i32 %v1_13291, i32* %eax.global-to-local, align 4
  %v2_13297 = call i32 @unknown_1d204(i32 %v1_13291)
  store i32 %v2_13297, i32* %eax.global-to-local, align 4
  %v0_1329c = load i32, i32* @ebp, align 4
  %v1_1329c = add i32 %v0_1329c, -124
  %v2_1329c = inttoptr i32 %v1_1329c to i32*
  %v3_1329c = load i32, i32* %v2_1329c, align 4
  %v1_1329f = add i32 %v3_1329c, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_1329f, i32* @ecx, align 4
  %v1_132a2 = add i32 %v0_1329c, -92
  %v4_132b0 = call i32 @unknown_28d7e(i32 %v1_1329f, i32 %v2_13297, i32 %v1_132a2)
  %v0_132b5 = load i32, i32* @ebp, align 4
  %v1_132b5 = add i32 %v0_132b5, -92
  store i32 %v1_132b5, i32* @eax, align 4
  %v2_132bb = call i32 @function_18f4c(i32 %v1_132b5)
  store i32 %v2_132bb, i32* %eax.global-to-local, align 4
  %v0_132c0 = load i32, i32* @ebp, align 4
  %v1_132c0 = add i32 %v0_132c0, -20
  %v2_132c0 = inttoptr i32 %v1_132c0 to i32*
  store i32 0, i32* %v2_132c0, align 4
  %v0_132c7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_132c7

; uselistorder directives
  uselistorder i32 %v0_13277, { 0, 2, 1 }
  uselistorder i32 %v4_13231, { 0, 3, 2, 1 }
  uselistorder i32* %v2_13260, { 1, 0 }
  uselistorder i32 %v0_13260, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v1_13243, { 1, 0 }
  uselistorder i32 %v3_1323f, { 1, 0 }
  uselistorder i32 %v0_13202, { 0, 2, 1, 3 }
  uselistorder i32 %v0_131a7, { 1, 0, 2 }
  uselistorder i32 %v0_1316d, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 12, 13, 14, 15, 4, 16, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 33, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32)* @function_1509a, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_1d26a, { 1, 0 }
  uselistorder label %dec_label_pc_13277.backedge, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_131fe, { 1, 0 }
}

define i32 @function_13309() local_unnamed_addr {
dec_label_pc_13309:
  %eax.global-to-local = alloca i32, align 4
  %v0_13309 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13309
}

define i32 @function_13315() local_unnamed_addr {
dec_label_pc_13315:
  %eax.global-to-local = alloca i32, align 4
  %v0_13315 = load i32, i32* %eax.global-to-local, align 4
  %v11_13315 = and i32 %v0_13315, -24
  store i32 %v11_13315, i32* @eax, align 4
  %v0_13317 = call i32 @function_8d013376()
  store i32 %v0_13317, i32* %eax.global-to-local, align 4
  ret i32 %v0_13317
}

define i32 @function_13322(i32 %arg1) local_unnamed_addr {
dec_label_pc_13322:
  %v2_13324 = load i32, i32* @eax, align 4
  %v4_13324 = mul i32 %v2_13324, 2
  %v21_13324 = inttoptr i32 %v2_13324 to i32*
  store i32 %v4_13324, i32* %v21_13324, align 4
  %v0_13326 = load i32, i32* @ebp, align 4
  %v1_13326 = add i32 %v0_13326, -136
  %v2_13326 = inttoptr i32 %v1_13326 to i32*
  %v3_13326 = load i32, i32* %v2_13326, align 4
  %v1_13330 = add i32 %v0_13326, -132
  %v2_13330 = inttoptr i32 %v1_13330 to i32*
  %v3_13330 = load i32, i32* %v2_13330, align 4
  %v0_1333a = load i32, i32* @eax, align 4
  %v1_1333e = add i32 %v0_13326, -128
  %v2_1333e = inttoptr i32 %v1_1333e to i32*
  %v3_1333e = load i32, i32* %v2_1333e, align 4
  %v4_13344 = call i32 @unknown_28dfa(i32 %v3_1333e, i32 %v0_1333a, i32 %v3_13330, i32 %v3_13326)
  %v0_13349 = load i32, i32* @ebp, align 4
  %v1_13349 = add i32 %v0_13349, -20
  %v2_13349 = inttoptr i32 %v1_13349 to i32*
  %v3_13349 = load i32, i32* %v2_13349, align 4
  %v4_13349 = add i32 %v3_13349, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_13349, i32* %v2_13349, align 4
  %v0_1334d = load i32, i32* @ebp, align 4
  %v1_1334d = add i32 %v0_1334d, -112
  %v1_13353 = call i32 @unknown_1d204(i32 %v1_1334d)
  ret i32 %v1_13353

; uselistorder directives
  uselistorder i32 %v2_13324, { 1, 0 }
}

define i32 @function_13354(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13354:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_13358(i32 %arg1) local_unnamed_addr {
dec_label_pc_13358:
  %v1_13358 = load i32, i32* @ebp, align 4
  %v1_13366 = add i32 %v1_13358, -124
  %v2_13366 = inttoptr i32 %v1_13366 to i32*
  %v3_13366 = load i32, i32* %v2_13366, align 4
  %v1_13369 = add i32 %v3_13366, 16
  %v1_1336f = call i32 @unknown_1c8fd(i32 %v1_13369)
  %v0_13374 = load i32, i32* @ebp, align 4
  %v1_13374 = add i32 %v0_13374, -32
  %v2_1337e = call i32 @unknown_1c92a(i32 %v1_13374, i32 %v1_1336f)
  %v0_13386 = load i32, i32* @ebp, align 4
  %v1_13386 = add i32 %v0_13386, -32
  %v1_1338c = call i32 @unknown_1c971(i32 %v1_13386)
  %v0_13391 = load i32, i32* @ebp, align 4
  %v1_13391 = add i32 %v0_13391, -136
  %v2_13391 = inttoptr i32 %v1_13391 to i32*
  %v3_13391 = load i32, i32* %v2_13391, align 4
  %v1_1339b = add i32 %v0_13391, -132
  %v2_1339b = inttoptr i32 %v1_1339b to i32*
  %v3_1339b = load i32, i32* %v2_1339b, align 4
  %v1_133a9 = add i32 %v0_13391, -128
  %v2_133a9 = inttoptr i32 %v1_133a9 to i32*
  %v3_133a9 = load i32, i32* %v2_133a9, align 4
  %v4_133af = call i32 @unknown_28a54(i32 %v3_133a9, i32 %v1_1338c, i32 %v3_1339b, i32 %v3_13391)
  %v0_133b4 = load i32, i32* @ebp, align 4
  %v1_133b4 = add i32 %v0_133b4, -124
  %v2_133b4 = inttoptr i32 %v1_133b4 to i32*
  %v3_133b4 = load i32, i32* %v2_133b4, align 4
  store i32 %v3_133b4, i32* @eax, align 4
  %v1_133ba = call i32 @function_1909e(i32 %v3_133b4)
  %v0_133bf = load i32, i32* @ebp, align 4
  %v1_133bf = add i32 %v0_133bf, -112
  %v1_133c5 = call i32 @unknown_28c2e(i32 %v1_133bf)
  %v0_133ca = load i32, i32* @ebp, align 4
  %v1_133ca = add i32 %v0_133ca, -12
  %v2_133ca = inttoptr i32 %v1_133ca to i32*
  %v3_133ca = load i32, i32* %v2_133ca, align 4
  %v1_133cd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_133cd = xor i32 %v1_133cd, %v3_133ca
  %v3_133cd = icmp eq i32 %v2_133cd, 0
  store i32 %v2_133cd, i32* @eax, align 4
  br i1 %v3_133cd, label %bb, label %dec_label_pc_133d6

bb:                                               ; preds = %dec_label_pc_13358
  %v1_133d4 = call i32 @function_1341a()
  store i32 %v1_133d4, i32* @eax, align 4
  br label %dec_label_pc_133d6

dec_label_pc_133d6:                               ; preds = %bb, %dec_label_pc_13358
  %v0_133d6 = call i32 @function_13415()
  ret i32 %v0_133d6
}

define i32 @function_133d9() local_unnamed_addr {
dec_label_pc_133d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_133d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_133d9
}

define i32 @function_133de(i32 %arg1) local_unnamed_addr {
dec_label_pc_133de:
  %v1_133e0 = call i32 @unknown_28b42(i32 ptrtoint (i32* @0 to i32))
  %v0_133e5 = load i32, i32* @ebx, align 4
  ret i32 %v0_133e5
}

define i32 @function_133ee() local_unnamed_addr {
dec_label_pc_133ee:
  %v0_133ee = load i32, i32* @ecx, align 4
  %v1_133ee = add i32 %v0_133ee, -1538945597
  %v2_133ee = inttoptr i32 %v1_133ee to i32*
  %v3_133ee = load i32, i32* %v2_133ee, align 4
  %v4_133ee = sub i32 %v3_133ee, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_133ee, i32* %v2_133ee, align 4
  %v0_133f4 = load i32, i32* @eax, align 4
  %v1_133f7 = call i32 @function_18f4c(i32 %v0_133f4)
  %v0_133fc = call i32 @function_13400()
  ret i32 %v0_133fc

; uselistorder directives
  uselistorder i32 (i32)* @function_18f4c, { 1, 0 }
}

define i32 @function_133fe() local_unnamed_addr {
dec_label_pc_133fe:
  %eax.global-to-local = alloca i32, align 4
  %v0_133fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_133fe
}

define i32 @function_13400() local_unnamed_addr {
dec_label_pc_13400:
  %v0_13400 = load i32, i32* @ebp, align 4
  %v1_13400 = add i32 %v0_13400, -112
  %v1_13406 = call i32 @unknown_28c2e(i32 %v1_13400)
  %v0_1340b = load i32, i32* @ebx, align 4
  ret i32 %v0_1340b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_28c2e, { 1, 0 }
  uselistorder i32 -112, { 0, 8, 9, 2, 1, 3, 4, 5, 6, 7 }
}

define i32 @function_13414(i32 %arg1) local_unnamed_addr {
dec_label_pc_13414:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_13415() local_unnamed_addr {
dec_label_pc_13415:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1341a() local_unnamed_addr {
dec_label_pc_1341a:
  %v0_1341a = load i32, i32* @ebp, align 4
  %v1_1341a = add i32 %v0_1341a, -4
  %v2_1341a = inttoptr i32 %v1_1341a to i32*
  %v3_1341a = load i32, i32* %v2_1341a, align 4
  store i32 %v3_1341a, i32* @ebx, align 4
  %v0_1341e = load i32, i32* @eax, align 4
  ret i32 %v0_1341e
}

define i32 @_ZN9base_uintILj256EE11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13420:
  %v7_1345e = call i32 @_ZN9__gnu_cxx13new_allocatorIbEC1Ev(i32 %arg2, i32 %arg1, i32 ptrtoint (i32* @global_var_20.1184 to i32), i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1346f

bb:                                               ; preds = %dec_label_pc_13420
  %v1_1346d = call i32 @function_13474()
  br label %dec_label_pc_1346f

dec_label_pc_1346f:                               ; preds = %bb, %dec_label_pc_13420
  %v3_1346d = phi i32 [ %v1_1346d, %bb ], [ 0, %dec_label_pc_13420 ]
  ret i32 %v3_1346d

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13474() local_unnamed_addr {
dec_label_pc_13474:
  %v0_13475 = load i32, i32* @eax, align 4
  ret i32 %v0_13475
}

define i32 @_ZNK7CVarIntIiE9SerializeI11CHashWriterEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13476:
  %v0_13494 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_13494
}

define i32 @function_1349a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1349a:
  %v0_1349a = load i32, i32* @eax, align 4
  %v1_1349a = load i32, i32* @ebp, align 4
  %v2_1349a = add i32 %v1_1349a, -12
  %v3_1349a = inttoptr i32 %v2_1349a to i32*
  store i32 %v0_1349a, i32* %v3_1349a, align 4
  %v0_1349f = load i32, i32* @ebp, align 4
  %v1_1349f = add i32 %v0_1349f, -28
  %v2_1349f = inttoptr i32 %v1_1349f to i32*
  %v3_1349f = load i32, i32* %v2_1349f, align 4
  %v1_134a2 = inttoptr i32 %v3_1349f to i32*
  %v2_134a2 = load i32, i32* %v1_134a2, align 4
  %v1_134a4 = inttoptr i32 %v2_134a2 to i32*
  %v2_134a4 = load i32, i32* %v1_134a4, align 4
  %v1_134aa = add i32 %v0_1349f, -32
  %v2_134aa = inttoptr i32 %v1_134aa to i32*
  %v3_134aa = load i32, i32* %v2_134aa, align 4
  %v2_134b0 = call i32 @unknown_2927a(i32 %v3_134aa, i32 %v2_134a4)
  %v0_134b5 = load i32, i32* @ebp, align 4
  %v1_134b5 = add i32 %v0_134b5, -12
  %v2_134b5 = inttoptr i32 %v1_134b5 to i32*
  %v3_134b5 = load i32, i32* %v2_134b5, align 4
  %v1_134b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_134b8 = xor i32 %v1_134b8, %v3_134b5
  %v3_134b8 = icmp eq i32 %v2_134b8, 0
  store i32 %v2_134b8, i32* @eax, align 4
  br i1 %v3_134b8, label %bb, label %dec_label_pc_134c1

bb:                                               ; preds = %dec_label_pc_1349a
  %v2_134bf = call i32 @function_134c6(i32 %v3_134aa)
  br label %dec_label_pc_134c1

dec_label_pc_134c1:                               ; preds = %bb, %dec_label_pc_1349a
  %v3_134bf = phi i32 [ %v2_134bf, %bb ], [ %v2_134b8, %dec_label_pc_1349a ]
  ret i32 %v3_134bf
}

define i32 @function_134c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_134c6:
  %v0_134c7 = load i32, i32* @eax, align 4
  ret i32 %v0_134c7
}

define i32 @_ZNK7CVarIntIjE9SerializeI11CHashWriterEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_134c8:
  %v2_134f4 = load i32, i32* %arg1, align 4
  %v1_134f6 = inttoptr i32 %v2_134f4 to i32*
  %v2_134f6 = load i32, i32* %v1_134f6, align 4
  %v2_13502 = call i32 @unknown_2936e(i32 %arg2, i32 %v2_134f6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13513

bb:                                               ; preds = %dec_label_pc_134c8
  %v1_13511 = call i32 @function_13518()
  br label %dec_label_pc_13513

dec_label_pc_13513:                               ; preds = %bb, %dec_label_pc_134c8
  %v3_13511 = phi i32 [ %v1_13511, %bb ], [ 0, %dec_label_pc_134c8 ]
  ret i32 %v3_13511
}

define i32 @function_13518() local_unnamed_addr {
dec_label_pc_13518:
  %v0_13519 = load i32, i32* @eax, align 4
  ret i32 %v0_13519
}

define i32 @_ZNK6CTxOut9SerializeI11CHashWriterEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1351a:
  ret i32 0
}

define i32 @function_13546(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13546:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_13547 = load i32, i32* @edx, align 4
  %v1_13547 = lshr i32 %v0_13547, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13547 = load i32, i32* @eax, align 4
  %v5_13547 = add i32 %v1_13547, %v3_13547
  %v20_13547 = urem i32 %v5_13547, 256
  %v22_13547 = shl i32 %v20_13547, ptrtoint (i32* @global_var_8.1178 to i32)
  %v23_13547 = and i32 %v0_13547, -65281
  %v24_13547 = or i32 %v22_13547, %v23_13547
  store i32 %v24_13547, i32* %edx.global-to-local, align 4
  %v0_13549 = load i32, i32* @ebp, align 4
  %v0_1354e = load i32, i32* @ebx, align 4
  %v1_1354e = lshr i32 %v0_1354e, ptrtoint (i32* @global_var_8.1178 to i32)
  %v5_1354e = add i32 %v1_1354e, %v3_13547
  %v20_1354e = urem i32 %v5_1354e, 256
  %v22_1354e = shl i32 %v20_1354e, ptrtoint (i32* @global_var_8.1178 to i32)
  %v23_1354e = and i32 %v0_1354e, -65281
  %v24_1354e = or i32 %v22_1354e, %v23_1354e
  store i32 %v24_1354e, i32* %ebx.global-to-local, align 4
  %v1_13551 = add i32 %v0_13549, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_13551, i32* @ebp, align 4
  %tmp7 = trunc i32 %v3_13547 to i8
  %v5_13553 = mul i8 %tmp7, 2
  %v21_13553 = inttoptr i32 %v3_13547 to i8*
  store i8 %v5_13553, i8* %v21_13553, align 1
  %v2_13555 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_13555 = load i32, i32* @eax, align 4
  %v4_13555 = trunc i32 %v3_13555 to i8
  %v5_13555 = add i8 %v4_13555, %v2_13555
  %v21_13555 = inttoptr i32 %v3_13555 to i8*
  store i8 %v5_13555, i8* %v21_13555, align 1
  %v0_13557 = load i32, i32* @ebp, align 4
  %v1_13557 = add i32 %v0_13557, -28
  %v2_13557 = inttoptr i32 %v1_13557 to i32*
  %v3_13557 = load i32, i32* %v2_13557, align 4
  %v0_1355a = load i32, i32* %edx.global-to-local, align 4
  %v1_1355e = add i32 %v0_13557, -40
  %v2_1355e = inttoptr i32 %v1_1355e to i32*
  %v3_1355e = load i32, i32* %v2_1355e, align 4
  store i32 %v3_1355e, i32* %edx.global-to-local, align 4
  %v1_13565 = add i32 %v0_13557, -36
  %v2_13565 = inttoptr i32 %v1_13565 to i32*
  %v3_13565 = load i32, i32* %v2_13565, align 4
  store i32 %v3_13565, i32* %edx.global-to-local, align 4
  %v1_13570 = add i32 %v0_13557, -32
  %v2_13570 = inttoptr i32 %v1_13570 to i32*
  %v3_13570 = load i32, i32* %v2_13570, align 4
  %sext = mul i32 %v0_1355a, 16777216
  %v5_13576 = sdiv i32 %sext, 16777216
  %v6_13576 = call i32 @unknown_29460(i32 %v3_13570, i32 %v3_13557, i32 %v3_13565, i32 %v3_1355e, i32 %v5_13576)
  %v0_1357b = load i32, i32* @ebp, align 4
  %v1_1357b = add i32 %v0_1357b, -20
  %v2_1357b = inttoptr i32 %v1_1357b to i32*
  %v3_1357b = load i32, i32* %v2_1357b, align 4
  %v5_1357b = add i32 %v3_1357b, %v6_13576
  store i32 %v5_1357b, i32* %v2_1357b, align 4
  %v0_1357e = load i32, i32* @ebp, align 4
  %v1_1357e = add i32 %v0_1357e, -28
  %v2_1357e = inttoptr i32 %v1_1357e to i32*
  %v3_1357e = load i32, i32* %v2_1357e, align 4
  %v1_13581 = add i32 %v3_1357e, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_13581, i32* %edx.global-to-local, align 4
  %v0_13584 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13588 = add i32 %v0_1357e, -40
  %v2_13588 = inttoptr i32 %v1_13588 to i32*
  %v3_13588 = load i32, i32* %v2_13588, align 4
  %v1_1358f = add i32 %v0_1357e, -36
  %v2_1358f = inttoptr i32 %v1_1358f to i32*
  %v3_1358f = load i32, i32* %v2_1358f, align 4
  %v1_1359a = add i32 %v0_1357e, -32
  %v2_1359a = inttoptr i32 %v1_1359a to i32*
  %v3_1359a = load i32, i32* %v2_1359a, align 4
  %sext1 = mul i32 %v0_13584, 16777216
  %v5_135a0 = sdiv i32 %sext1, 16777216
  %v6_135a0 = call i32 @unknown_294d1(i32 %v3_1359a, i32 %v1_13581, i32 %v3_1358f, i32 %v3_13588, i32 %v5_135a0)
  %v0_135a5 = load i32, i32* @ebp, align 4
  %v1_135a5 = add i32 %v0_135a5, -20
  %v2_135a5 = inttoptr i32 %v1_135a5 to i32*
  %v3_135a5 = load i32, i32* %v2_135a5, align 4
  %v5_135a5 = add i32 %v3_135a5, %v6_135a0
  store i32 %v5_135a5, i32* %v2_135a5, align 4
  %v0_135a8 = load i32, i32* @ebp, align 4
  %v1_135a8 = add i32 %v0_135a8, -12
  %v2_135a8 = inttoptr i32 %v1_135a8 to i32*
  %v3_135a8 = load i32, i32* %v2_135a8, align 4
  %v1_135ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_135ab = xor i32 %v1_135ab, %v3_135a8
  %v3_135ab = icmp eq i32 %v2_135ab, 0
  store i32 %v2_135ab, i32* @eax, align 4
  br i1 %v3_135ab, label %bb, label %dec_label_pc_135b4

bb:                                               ; preds = %dec_label_pc_13546
  %v1_135b2 = call i32 @function_135b9()
  br label %dec_label_pc_135b4

dec_label_pc_135b4:                               ; preds = %bb, %dec_label_pc_13546
  %v2_135b2 = phi i32 [ %v1_135b2, %bb ], [ %v2_135ab, %dec_label_pc_13546 ]
  ret i32 %v2_135b2

; uselistorder directives
  uselistorder i32 %v0_1357e, { 0, 2, 1, 3 }
  uselistorder i32 %v0_13557, { 0, 2, 1, 3 }
}

define i32 @function_135b9() local_unnamed_addr {
dec_label_pc_135b9:
  %v0_135be = load i32, i32* @eax, align 4
  ret i32 %v0_135be
}

define i32 @_Z11UnserializeI11CDataStream10CDiskTxPosEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_135bf:
  %v8_13603 = call i32 @unknown_295df(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13614

bb:                                               ; preds = %dec_label_pc_135bf
  %v1_13612 = call i32 @function_13619()
  br label %dec_label_pc_13614

dec_label_pc_13614:                               ; preds = %bb, %dec_label_pc_135bf
  %v2_13612 = phi i32 [ %v1_13612, %bb ], [ 0, %dec_label_pc_135bf ]
  ret i32 %v2_13612

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13619() local_unnamed_addr {
dec_label_pc_13619:
  %v0_1361a = load i32, i32* @eax, align 4
  ret i32 %v0_1361a
}

define i32 @_Z16GetSerializeSizeI10CDiskTxPosEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1361b:
  ret i32 %arg3
}

define i32 @function_13644(i32 %arg1) local_unnamed_addr {
dec_label_pc_13644:
  %v0_13644 = load i32, i32* @ebx, align 4
  %v1_13644 = add i32 %v0_13644, 1149886533
  %v2_13644 = inttoptr i32 %v1_13644 to i8*
  %v3_13644 = load i8, i8* %v2_13644, align 1
  %v4_13644 = load i32, i32* @ecx, align 4
  %v5_13644 = trunc i32 %v4_13644 to i8
  %v6_13644 = or i8 %v5_13644, %v3_13644
  store i8 %v6_13644, i8* %v2_13644, align 1
  %v0_1364c = load i32, i32* @ebp, align 4
  %v1_1364c = add i32 %v0_1364c, -28
  %v2_1364c = inttoptr i32 %v1_1364c to i32*
  %v3_1364c = load i32, i32* %v2_1364c, align 4
  %v1_13652 = call i32 @function_19de9(i32 %v3_1364c)
  store i32 %v1_13652, i32* @eax, align 4
  %v0_13657 = load i32, i32* @ebp, align 4
  %v1_13657 = add i32 %v0_13657, -12
  %v2_13657 = inttoptr i32 %v1_13657 to i32*
  %v3_13657 = load i32, i32* %v2_13657, align 4
  %v1_1365a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1365a = icmp eq i32 %v1_1365a, %v3_13657
  br i1 %v3_1365a, label %bb, label %dec_label_pc_13663

bb:                                               ; preds = %dec_label_pc_13644
  %v1_13661 = call i32 @function_13668()
  br label %dec_label_pc_13663

dec_label_pc_13663:                               ; preds = %bb, %dec_label_pc_13644
  %v2_13661 = phi i32 [ %v1_13661, %bb ], [ %v1_13652, %dec_label_pc_13644 ]
  ret i32 %v2_13661
}

define i32 @function_13668() local_unnamed_addr {
dec_label_pc_13668:
  %v0_13669 = load i32, i32* @eax, align 4
  ret i32 %v0_13669
}

define i32 @_Z9SerializeI11CDataStream10CDiskTxPosEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1366a:
  ret i32 %arg3
}

define i32 @function_13684(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13684:
  %eax.global-to-local = alloca i32, align 4
  %v0_13684 = load i32, i32* @eax, align 4
  %v1_13684 = trunc i32 %v0_13684 to i8
  %v2_13684 = load i1, i1* @cf, align 1
  %v3_13684 = zext i1 %v2_13684 to i8
  %v4_13684 = add i8 %v1_13684, -119
  %v5_13684 = add i8 %v4_13684, %v3_13684
  %v22_13684 = icmp ule i8 %v5_13684, %v1_13684
  %v23_13684 = icmp ugt i8 %v1_13684, 118
  %v24_13684 = select i1 %v2_13684, i1 %v22_13684, i1 %v23_13684
  %v25_13684 = zext i8 %v5_13684 to i32
  %v27_13684 = and i32 %v0_13684, -256
  %v28_13684 = or i32 %v25_13684, %v27_13684
  store i32 %v28_13684, i32* %eax.global-to-local, align 4
  %v0_13686 = load i32, i32* @ebp, align 4
  %v1_13686 = add i32 %v0_13686, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_13686, i32* @ebp, align 4
  %v3_1368a = zext i1 %v24_13684 to i8
  %v4_1368a = add i8 %v3_1368a, %v5_13684
  %v22_1368a = zext i8 %v4_1368a to i32
  %v25_1368a = or i32 %v22_1368a, %v27_13684
  store i32 %v25_1368a, i32* %eax.global-to-local, align 4
  %v1_1368c = inttoptr i32 %v25_1368a to i8*
  %v2_1368c = load i8, i8* %v1_1368c, align 1
  %v5_1368c = add i8 %v2_1368c, %v4_1368a
  store i8 %v5_1368c, i8* %v1_1368c, align 1
  %v0_1368e = load i32, i32* %eax.global-to-local, align 4
  %v1_1368e = load i32, i32* @ebp, align 4
  %v2_1368e = add i32 %v1_1368e, -12
  %v3_1368e = inttoptr i32 %v2_1368e to i32*
  store i32 %v0_1368e, i32* %v3_1368e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_13693 = load i32, i32* @ebp, align 4
  %v1_13693 = add i32 %v0_13693, -40
  %v2_13693 = inttoptr i32 %v1_13693 to i32*
  %v3_13693 = load i32, i32* %v2_13693, align 4
  store i32 %v3_13693, i32* %eax.global-to-local, align 4
  %v1_1369a = add i32 %v0_13693, -36
  %v2_1369a = inttoptr i32 %v1_1369a to i32*
  %v3_1369a = load i32, i32* %v2_1369a, align 4
  store i32 %v3_1369a, i32* %eax.global-to-local, align 4
  %v1_136a1 = add i32 %v0_13693, -28
  %v2_136a1 = inttoptr i32 %v1_136a1 to i32*
  %v3_136a1 = load i32, i32* %v2_136a1, align 4
  store i32 %v3_136a1, i32* %eax.global-to-local, align 4
  %v1_136a8 = add i32 %v0_13693, -32
  %v2_136a8 = inttoptr i32 %v1_136a8 to i32*
  %v3_136a8 = load i32, i32* %v2_136a8, align 4
  store i32 %v3_136a8, i32* %eax.global-to-local, align 4
  %v4_136ae = call i32 @unknown_29754(i32 %v3_136a8, i32 %v3_136a1, i32 %v3_1369a, i32 %v3_13693)
  store i32 %v4_136ae, i32* %eax.global-to-local, align 4
  %v0_136b3 = load i32, i32* @ebp, align 4
  %v1_136b3 = add i32 %v0_136b3, -12
  %v2_136b3 = inttoptr i32 %v1_136b3 to i32*
  %v3_136b3 = load i32, i32* %v2_136b3, align 4
  store i32 %v3_136b3, i32* %eax.global-to-local, align 4
  ret i32 %v3_136b3

; uselistorder directives
  uselistorder i32 %v0_13693, { 1, 0, 2, 3 }
  uselistorder i8 %v5_13684, { 0, 2, 1 }
}

define i32 @function_136b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_136b8:
  %v0_136b8 = load i32, i32* @eax, align 4
  %v1_136b8 = add i32 %v0_136b8, 20
  %v10_136b8 = icmp eq i32 %v1_136b8, 0
  store i32 %v1_136b8, i32* @eax, align 4
  br i1 %v10_136b8, label %bb, label %dec_label_pc_136bf

bb:                                               ; preds = %dec_label_pc_136b8
  %v1_136bd = call i32 @function_136c4()
  br label %dec_label_pc_136bf

dec_label_pc_136bf:                               ; preds = %bb, %dec_label_pc_136b8
  %v2_136bd = phi i32 [ %v1_136bd, %bb ], [ %v1_136b8, %dec_label_pc_136b8 ]
  ret i32 %v2_136bd
}

define i32 @function_136c4() local_unnamed_addr {
dec_label_pc_136c4:
  %v0_136c5 = load i32, i32* @eax, align 4
  ret i32 %v0_136c5
}

define i32 @_Z16GetSerializeSizeIcSsEjRKSt4pairIT_T0_Eii(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_136c6:
  %v4_136ea = ptrtoint i8* %arg1 to i32
  %v2_136ed = load i8, i8* %arg1, align 1
  %v3_136ed = zext i8 %v2_136ed to i32
  store i32 %v3_136ed, i32* @eax, align 4
  %v4_13704 = call i32 @function_179f6(i32 %v3_136ed, i32 %arg2, i32 %arg3)
  %v1_1370e = add i32 %v4_136ea, ptrtoint (i8** @global_var_4.1177 to i32)
  %v4_13722 = call i32 @unknown_29879(i32 %v1_1370e, i32 %arg2, i32 %arg3)
  %v2_13727 = add i32 %v4_13704, %v4_13722
  store i32 %v2_13727, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13735

bb:                                               ; preds = %dec_label_pc_136c6
  %v1_13733 = call i32 @function_1373a()
  br label %dec_label_pc_13735

dec_label_pc_13735:                               ; preds = %bb, %dec_label_pc_136c6
  %v2_13733 = phi i32 [ %v1_13733, %bb ], [ %v2_13727, %dec_label_pc_136c6 ]
  ret i32 %v2_13733

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_1373a() local_unnamed_addr {
dec_label_pc_1373a:
  %v0_1373f = load i32, i32* @eax, align 4
  ret i32 %v0_1373f
}

define i32 @_Z9SerializeI11CDataStreamcSsEvRT_RKSt4pairIT0_T1_Eii(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13740:
  %v4_13769 = ptrtoint i8* %arg2 to i32
  %v2_1376c = load i8, i8* %arg2, align 1
  %v3_1376c = zext i8 %v2_1376c to i32
  %v10_1378a = call i32 @unknown_26111(i32 %arg1, i32 %v3_1376c, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %v4_13769, i32 %arg1)
  %v1_13792 = add i32 %v4_13769, ptrtoint (i8** @global_var_4.1177 to i32)
  %v5_137ad = call i32 @unknown_29959(i32 %arg1, i32 %v1_13792, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_137be

bb:                                               ; preds = %dec_label_pc_13740
  %v1_137bc = call i32 @function_137c3()
  br label %dec_label_pc_137be

dec_label_pc_137be:                               ; preds = %bb, %dec_label_pc_13740
  %v2_137bc = phi i32 [ %v1_137bc, %bb ], [ 0, %dec_label_pc_13740 ]
  ret i32 %v2_137bc

; uselistorder directives
  uselistorder i32 %v4_13769, { 1, 0 }
  uselistorder i32 %arg4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_137c3() local_unnamed_addr {
dec_label_pc_137c3:
  %v0_137c4 = load i32, i32* @eax, align 4
  ret i32 %v0_137c4
}

define i32 @_ZN15CDiskBlockIndex11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_137c6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v16_137cc = ptrtoint i32* %stack_var_-140 to i32
  store i32 %arg4, i32* %stack_var_-92, align 4
  %v1_13808 = and i32 %arg3, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_13808 = icmp eq i32 %v1_13808, 0
  store i32 %v1_13808, i32* %eax.global-to-local, align 4
  %v1_1380d = icmp eq i1 %v2_13808, false
  br i1 %v1_1380d, label %dec_label_pc_1385f, label %dec_label_pc_1380f

dec_label_pc_1380f:                               ; preds = %dec_label_pc_137c6
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_13812 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_13812, i32* %eax.global-to-local, align 4
  store i32 %v2_13812, i32* %stack_var_-140, align 4
  %v1_13818 = call i32 @unknown_1d071(i32 %v2_13812)
  store i32 %v1_13818, i32* %eax.global-to-local, align 4
  %v2_1381d = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1381d, i32* %stack_var_-140, align 4
  %v2_13827 = call i32 @unknown_1d09e(i32 %v2_1381d, i32 %v1_13818)
  store i32 %v2_1381d, i32* %eax.global-to-local, align 4
  %v1_13835 = call i32 @unknown_1d0e5(i32 %v2_1381d)
  %v0_1383c = load i32, i32* %esi.global-to-local, align 4
  %v0_13842 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v1_13835, i32* %stack_var_-140, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_1383c, 16777216
  %v5_13857 = sdiv i32 %sext, 16777216
  %v6_13857 = call i32 @unknown_29a88(i32 %arg2, i32 %v1_13835, i32 %arg3, i32 %v0_13842, i32 %v5_13857)
  store i32 %v6_13857, i32* %eax.global-to-local, align 4
  %v3_1385f.pre = load i32, i32* %stack_var_-92, align 4
  %v1_13868.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_1385f

dec_label_pc_1385f:                               ; preds = %dec_label_pc_1380f, %dec_label_pc_137c6
  %v1_13868 = phi i32 [ %v16_137cc, %dec_label_pc_137c6 ], [ %v1_13868.pre, %dec_label_pc_1380f ]
  %v3_1385f = phi i32 [ %arg4, %dec_label_pc_137c6 ], [ %v3_1385f.pre, %dec_label_pc_1380f ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_137c6 ], [ %v6_13857, %dec_label_pc_1380f ]
  store i32 %v3_1385f, i32* %ebx.global-to-local, align 4
  %v1_13865 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_13865, i32* %eax.global-to-local, align 4
  %v2_13868 = inttoptr i32 %v1_13868 to i32*
  store i32 %v1_13865, i32* %v2_13868, align 4
  %v1_1386b = call i32 @unknown_1d071(i32 %stack_var_-40.0)
  store i32 %v1_1386b, i32* %eax.global-to-local, align 4
  %v2_13870 = ptrtoint i32* %stack_var_-64 to i32
  %v1_13873 = load i32, i32* @esp, align 4
  %v2_13873 = add i32 %v1_13873, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13873 = inttoptr i32 %v2_13873 to i32*
  store i32 %v1_1386b, i32* %v3_13873, align 4
  %v1_13877 = load i32, i32* @esp, align 4
  %v2_13877 = inttoptr i32 %v1_13877 to i32*
  store i32 %v2_13870, i32* %v2_13877, align 4
  %v4_13877 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13877

; uselistorder directives
  uselistorder i32 %v1_13835, { 1, 0 }
  uselistorder i32 %v2_1381d, { 0, 1, 3, 2 }
  uselistorder i32 %v2_13812, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1387c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1387c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v2_1387d = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1387d = load i32, i32* @eax, align 4
  %v4_1387d = trunc i32 %v3_1387d to i8
  %v5_1387d = add i8 %v4_1387d, %v2_1387d
  %v21_1387d = inttoptr i32 %v3_1387d to i8*
  store i8 %v5_1387d, i8* %v21_1387d, align 1
  %v0_13882 = load i32, i32* @ebp, align 4
  %v1_13882 = add i32 %v0_13882, -60
  store i32 %v1_13882, i32* %eax.global-to-local, align 4
  store i32 %v1_13882, i32* %stack_var_-4, align 4
  %v1_13888 = call i32 @unknown_1d0e5(i32 %v1_13882)
  store i32 %v1_13888, i32* %edx.global-to-local, align 4
  %v0_1388f = load i32, i32* @edi, align 4
  store i32 %v0_1388f, i32* %eax.global-to-local, align 4
  %v0_13895 = load i32, i32* @ebx, align 4
  %v0_13899 = load i32, i32* @ebp, align 4
  %v1_13899 = add i32 %v0_13899, -84
  %v2_13899 = inttoptr i32 %v1_13899 to i32*
  %v3_13899 = load i32, i32* %v2_13899, align 4
  store i32 %v3_13899, i32* %eax.global-to-local, align 4
  %v1_138a4 = add i32 %v0_13899, -80
  %v2_138a4 = inttoptr i32 %v1_138a4 to i32*
  %v3_138a4 = load i32, i32* %v2_138a4, align 4
  store i32 %v3_138a4, i32* %eax.global-to-local, align 4
  store i32 %v3_138a4, i32* %stack_var_-4, align 4
  %sext = mul i32 %v0_1388f, 16777216
  %v5_138aa = sdiv i32 %sext, 16777216
  %v6_138aa = call i32 @unknown_29a88(i32 %v3_138a4, i32 %v1_13888, i32 %v3_13899, i32 %v0_13895, i32 %v5_138aa)
  store i32 %v6_138aa, i32* %eax.global-to-local, align 4
  %v0_138af = load i32, i32* @ebp, align 4
  %v1_138af = add i32 %v0_138af, -36
  %v2_138af = inttoptr i32 %v1_138af to i32*
  %v3_138af = load i32, i32* %v2_138af, align 4
  %v5_138af = add i32 %v3_138af, %v6_138aa
  store i32 %v5_138af, i32* %v2_138af, align 4
  %v0_138b2 = load i32, i32* @ebp, align 4
  %v1_138b2 = add i32 %v0_138b2, -88
  %v2_138b2 = inttoptr i32 %v1_138b2 to i32*
  %v3_138b2 = load i32, i32* %v2_138b2, align 4
  store i32 %v3_138b2, i32* %ebx.global-to-local, align 4
  %v1_138b5 = add i32 %v0_138b2, -76
  %v2_138b5 = inttoptr i32 %v1_138b5 to i32*
  %v3_138b5 = load i32, i32* %v2_138b5, align 4
  %v1_138b8 = add i32 %v3_138b5, 64
  store i32 %v1_138b8, i32* %eax.global-to-local, align 4
  store i32 %v1_138b8, i32* %stack_var_-4, align 4
  %v1_138be = call i32 @unknown_1cc41(i32 %v1_138b8)
  store i32 %v1_138be, i32* %eax.global-to-local, align 4
  %v0_138c3 = load i32, i32* @ebp, align 4
  %v1_138c3 = add i32 %v0_138c3, -56
  store i32 %v1_138c3, i32* %edx.global-to-local, align 4
  store i32 %v1_138c3, i32* %stack_var_-4, align 4
  %v2_138cd = call i32 @unknown_1cc6e(i32 %v1_138c3, i32 %v1_138be)
  %v0_138d5 = load i32, i32* @ebp, align 4
  %v1_138d5 = add i32 %v0_138d5, -56
  store i32 %v1_138d5, i32* %eax.global-to-local, align 4
  store i32 %v1_138d5, i32* %stack_var_-8, align 4
  %v1_138db = call i32 @unknown_1ccb5(i32 %v1_138d5)
  store i32 %v1_138db, i32* %eax.global-to-local, align 4
  store i32 %v1_138db, i32* %edx.global-to-local, align 4
  %v0_138e2 = load i32, i32* @ebp, align 4
  %v1_138e2 = add i32 %v0_138e2, -99
  %v2_138e2 = inttoptr i32 %v1_138e2 to i8*
  %v3_138e2 = load i8, i8* %v2_138e2, align 1
  %v4_138e2 = zext i8 %v3_138e2 to i32
  store i32 %v4_138e2, i32* %ecx.global-to-local, align 4
  %v0_138ea = load i32, i32* %ebx.global-to-local, align 4
  %v1_138ee = add i32 %v0_138e2, -84
  %v2_138ee = inttoptr i32 %v1_138ee to i32*
  %v3_138ee = load i32, i32* %v2_138ee, align 4
  store i32 %v3_138ee, i32* %eax.global-to-local, align 4
  store i32 %v1_138db, i32* %stack_var_-4, align 4
  %v1_138f9 = add i32 %v0_138e2, -80
  %v2_138f9 = inttoptr i32 %v1_138f9 to i32*
  %v3_138f9 = load i32, i32* %v2_138f9, align 4
  store i32 %v3_138f9, i32* %eax.global-to-local, align 4
  store i32 %v3_138f9, i32* %stack_var_-8, align 4
  %v5_138ff = call i32 @unknown_29af0(i32 %v3_138f9, i32 %v1_138db, i32 %v3_138ee, i32 %v0_138ea, i32 %v4_138e2)
  store i32 %v5_138ff, i32* %eax.global-to-local, align 4
  %v0_13904 = load i32, i32* @ebp, align 4
  %v1_13904 = add i32 %v0_13904, -36
  %v2_13904 = inttoptr i32 %v1_13904 to i32*
  %v3_13904 = load i32, i32* %v2_13904, align 4
  %v5_13904 = add i32 %v3_13904, %v5_138ff
  store i32 %v5_13904, i32* %v2_13904, align 4
  %v0_13907 = load i32, i32* @ebp, align 4
  %v1_13907 = add i32 %v0_13907, -88
  %v2_13907 = inttoptr i32 %v1_13907 to i32*
  %v3_13907 = load i32, i32* %v2_13907, align 4
  store i32 %v3_13907, i32* %ebx.global-to-local, align 4
  %v1_1390a = add i32 %v0_13907, -76
  %v2_1390a = inttoptr i32 %v1_1390a to i32*
  %v3_1390a = load i32, i32* %v2_1390a, align 4
  %v1_1390d = add i32 %v3_1390a, 56
  store i32 %v1_1390d, i32* %eax.global-to-local, align 4
  store i32 %v1_1390d, i32* %stack_var_-8, align 4
  %v1_13913 = call i32 @unknown_1cc41(i32 %v1_1390d)
  store i32 %v1_13913, i32* %eax.global-to-local, align 4
  %v0_13918 = load i32, i32* @ebp, align 4
  %v1_13918 = add i32 %v0_13918, -52
  store i32 %v1_13918, i32* %edx.global-to-local, align 4
  store i32 %v1_13913, i32* %stack_var_-4, align 4
  store i32 %v1_13918, i32* %stack_var_-8, align 4
  %v2_13922 = call i32 @unknown_1cc6e(i32 %v1_13918, i32 %v1_13913)
  %v0_1392a = load i32, i32* @ebp, align 4
  %v1_1392a = add i32 %v0_1392a, -52
  store i32 %v1_1392a, i32* %eax.global-to-local, align 4
  store i32 %v1_1392a, i32* %stack_var_-12, align 4
  %v1_13930 = call i32 @unknown_1ccb5(i32 %v1_1392a)
  store i32 %v1_13930, i32* %eax.global-to-local, align 4
  store i32 %v1_13930, i32* %edx.global-to-local, align 4
  %v0_13937 = load i32, i32* @ebp, align 4
  %v1_13937 = add i32 %v0_13937, -98
  %v2_13937 = inttoptr i32 %v1_13937 to i8*
  %v3_13937 = load i8, i8* %v2_13937, align 1
  %v4_13937 = zext i8 %v3_13937 to i32
  store i32 %v4_13937, i32* %eax.global-to-local, align 4
  %v0_1393f = load i32, i32* %ebx.global-to-local, align 4
  %v1_13943 = add i32 %v0_13937, -84
  %v2_13943 = inttoptr i32 %v1_13943 to i32*
  %v3_13943 = load i32, i32* %v2_13943, align 4
  store i32 %v3_13943, i32* %eax.global-to-local, align 4
  store i32 %v3_13943, i32* %stack_var_-4, align 4
  store i32 %v1_13930, i32* %stack_var_-8, align 4
  %v1_1394e = add i32 %v0_13937, -80
  %v2_1394e = inttoptr i32 %v1_1394e to i32*
  %v3_1394e = load i32, i32* %v2_1394e, align 4
  store i32 %v3_1394e, i32* %eax.global-to-local, align 4
  store i32 %v3_1394e, i32* %stack_var_-12, align 4
  %v5_13954 = call i32 @unknown_29af0(i32 %v3_1394e, i32 %v1_13930, i32 %v3_13943, i32 %v0_1393f, i32 %v4_13937)
  store i32 %v5_13954, i32* %eax.global-to-local, align 4
  %v0_13959 = load i32, i32* @ebp, align 4
  %v1_13959 = add i32 %v0_13959, -36
  %v2_13959 = inttoptr i32 %v1_13959 to i32*
  %v3_13959 = load i32, i32* %v2_13959, align 4
  %v5_13959 = add i32 %v3_13959, %v5_13954
  store i32 %v5_13959, i32* %v2_13959, align 4
  %v0_1395c = load i32, i32* @ebp, align 4
  %v1_1395c = add i32 %v0_1395c, -76
  %v2_1395c = inttoptr i32 %v1_1395c to i32*
  %v3_1395c = load i32, i32* %v2_1395c, align 4
  store i32 %v3_1395c, i32* %eax.global-to-local, align 4
  %v1_1395f = add i32 %v3_1395c, 64
  %v2_1395f = inttoptr i32 %v1_1395f to i32*
  %v3_1395f = load i32, i32* %v2_1395f, align 4
  %v1_13962 = and i32 %v3_1395f, 24
  %v2_13962 = icmp eq i32 %v1_13962, 0
  store i32 %v1_13962, i32* %eax.global-to-local, align 4
  br i1 %v2_13962, label %dec_label_pc_139be, label %dec_label_pc_13969

dec_label_pc_13969:                               ; preds = %dec_label_pc_1387c
  %v1_13969 = add i32 %v0_1395c, -88
  %v2_13969 = inttoptr i32 %v1_13969 to i32*
  %v3_13969 = load i32, i32* %v2_13969, align 4
  store i32 %v3_13969, i32* %ebx.global-to-local, align 4
  %v3_1396c = load i32, i32* %v2_1395c, align 4
  %v1_1396f = add i32 %v3_1396c, 12
  store i32 %v1_1396f, i32* %eax.global-to-local, align 4
  store i32 %v1_1396f, i32* %stack_var_-12, align 4
  %v1_13975 = call i32 @unknown_1d071(i32 %v1_1396f)
  store i32 %v1_13975, i32* %eax.global-to-local, align 4
  %v0_1397a = load i32, i32* @ebp, align 4
  %v1_1397a = add i32 %v0_1397a, -48
  store i32 %v1_1397a, i32* %edx.global-to-local, align 4
  store i32 %v1_13975, i32* %stack_var_-8, align 4
  store i32 %v1_1397a, i32* %stack_var_-12, align 4
  %v2_13984 = call i32 @unknown_1d09e(i32 %v1_1397a, i32 %v1_13975)
  %v0_1398c = load i32, i32* @ebp, align 4
  %v1_1398c = add i32 %v0_1398c, -48
  store i32 %v1_1398c, i32* %eax.global-to-local, align 4
  store i32 %v1_1398c, i32* %stack_var_-16, align 4
  %v1_13992 = call i32 @unknown_1d0e5(i32 %v1_1398c)
  store i32 %v1_13992, i32* %eax.global-to-local, align 4
  store i32 %v1_13992, i32* %edx.global-to-local, align 4
  %v0_13999 = load i32, i32* @ebp, align 4
  %v1_13999 = add i32 %v0_13999, -97
  %v2_13999 = inttoptr i32 %v1_13999 to i8*
  %v3_13999 = load i8, i8* %v2_13999, align 1
  %v4_13999 = zext i8 %v3_13999 to i32
  store i32 %v4_13999, i32* %ecx.global-to-local, align 4
  %v0_139a1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_139a1, i32* %stack_var_-4, align 4
  %v1_139a5 = add i32 %v0_13999, -84
  %v2_139a5 = inttoptr i32 %v1_139a5 to i32*
  %v3_139a5 = load i32, i32* %v2_139a5, align 4
  store i32 %v3_139a5, i32* %eax.global-to-local, align 4
  store i32 %v3_139a5, i32* %stack_var_-8, align 4
  store i32 %v1_13992, i32* %stack_var_-12, align 4
  %v1_139b0 = add i32 %v0_13999, -80
  %v2_139b0 = inttoptr i32 %v1_139b0 to i32*
  %v3_139b0 = load i32, i32* %v2_139b0, align 4
  store i32 %v3_139b0, i32* %eax.global-to-local, align 4
  store i32 %v3_139b0, i32* %stack_var_-16, align 4
  %v5_139b6 = call i32 @unknown_29a88(i32 %v3_139b0, i32 %v1_13992, i32 %v3_139a5, i32 %v0_139a1, i32 %v4_13999)
  store i32 %v5_139b6, i32* %eax.global-to-local, align 4
  %v0_139bb = load i32, i32* @ebp, align 4
  %v1_139bb = add i32 %v0_139bb, -36
  %v2_139bb = inttoptr i32 %v1_139bb to i32*
  %v3_139bb = load i32, i32* %v2_139bb, align 4
  %v5_139bb = add i32 %v3_139bb, %v5_139b6
  store i32 %v5_139bb, i32* %v2_139bb, align 4
  %v0_139be.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_139be

dec_label_pc_139be:                               ; preds = %dec_label_pc_13969, %dec_label_pc_1387c
  %v0_139cb = phi i32 [ %v0_1395c, %dec_label_pc_1387c ], [ %v0_139be.pre, %dec_label_pc_13969 ]
  %stack_var_0.0 = phi i32 [ %v0_1393f, %dec_label_pc_1387c ], [ %v4_13999, %dec_label_pc_13969 ]
  %v1_139be = add i32 %v0_139cb, -76
  %v2_139be = inttoptr i32 %v1_139be to i32*
  %v3_139be = load i32, i32* %v2_139be, align 4
  store i32 %v3_139be, i32* %eax.global-to-local, align 4
  %v1_139c1 = add i32 %v3_139be, 64
  %v2_139c1 = inttoptr i32 %v1_139c1 to i32*
  %v3_139c1 = load i32, i32* %v2_139c1, align 4
  %v1_139c4 = and i32 %v3_139c1, 8
  %v2_139c4 = icmp eq i32 %v1_139c4, 0
  store i32 %v1_139c4, i32* %eax.global-to-local, align 4
  br i1 %v2_139c4, label %dec_label_pc_13a20, label %dec_label_pc_139cb

dec_label_pc_139cb:                               ; preds = %dec_label_pc_139be
  %v1_139cb = add i32 %v0_139cb, -88
  %v2_139cb = inttoptr i32 %v1_139cb to i32*
  %v3_139cb = load i32, i32* %v2_139cb, align 4
  store i32 %v3_139cb, i32* %ebx.global-to-local, align 4
  %v3_139ce = load i32, i32* %v2_139be, align 4
  %v1_139d1 = add i32 %v3_139ce, 16
  store i32 %v1_139d1, i32* %eax.global-to-local, align 4
  %v1_139d4 = load i32, i32* @esp, align 4
  %v2_139d4 = inttoptr i32 %v1_139d4 to i32*
  store i32 %v1_139d1, i32* %v2_139d4, align 4
  %v0_139d7 = load i32, i32* %stack_var_-16, align 4
  %v1_139d7 = call i32 @unknown_1cc41(i32 %v0_139d7)
  store i32 %v1_139d7, i32* %eax.global-to-local, align 4
  %v0_139dc = load i32, i32* @ebp, align 4
  %v1_139dc = add i32 %v0_139dc, -44
  store i32 %v1_139dc, i32* %edx.global-to-local, align 4
  %v1_139df = load i32, i32* @esp, align 4
  %v2_139df = add i32 %v1_139df, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_139df = inttoptr i32 %v2_139df to i32*
  store i32 %v1_139d7, i32* %v3_139df, align 4
  %v0_139e3 = load i32, i32* %edx.global-to-local, align 4
  %v1_139e3 = load i32, i32* @esp, align 4
  %v2_139e3 = inttoptr i32 %v1_139e3 to i32*
  store i32 %v0_139e3, i32* %v2_139e3, align 4
  %v0_139e6 = load i32, i32* %stack_var_-16, align 4
  %v1_139e6 = load i32, i32* %stack_var_-12, align 4
  %v2_139e6 = call i32 @unknown_1cc6e(i32 %v0_139e6, i32 %v1_139e6)
  %v0_139eb = load i32, i32* @esp, align 4
  %v1_139eb = sub i32 %v0_139eb, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_139ee = load i32, i32* @ebp, align 4
  %v1_139ee = add i32 %v0_139ee, -44
  store i32 %v1_139ee, i32* %eax.global-to-local, align 4
  %v2_139f1 = inttoptr i32 %v1_139eb to i32*
  store i32 %v1_139ee, i32* %v2_139f1, align 4
  %v0_139f4 = load i32, i32* %stack_var_-16, align 4
  %v1_139f4 = call i32 @unknown_1ccb5(i32 %v0_139f4)
  store i32 %v1_139f4, i32* %eax.global-to-local, align 4
  store i32 %v1_139f4, i32* %edx.global-to-local, align 4
  %v0_139fb = load i32, i32* @ebp, align 4
  %v1_139fb = add i32 %v0_139fb, -96
  %v2_139fb = inttoptr i32 %v1_139fb to i8*
  %v3_139fb = load i8, i8* %v2_139fb, align 1
  %v4_139fb = zext i8 %v3_139fb to i32
  store i32 %v4_139fb, i32* %eax.global-to-local, align 4
  %v2_139ff = load i32, i32* @esp, align 4
  %v3_139ff = add i32 %v2_139ff, 16
  %v4_139ff = inttoptr i32 %v3_139ff to i8*
  store i8 %v3_139fb, i8* %v4_139ff, align 1
  %v0_13a03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13a03 = load i32, i32* @esp, align 4
  %v2_13a03 = add i32 %v1_13a03, 12
  %v3_13a03 = inttoptr i32 %v2_13a03 to i32*
  store i32 %v0_13a03, i32* %v3_13a03, align 4
  %v0_13a07 = load i32, i32* @ebp, align 4
  %v1_13a07 = add i32 %v0_13a07, -84
  %v2_13a07 = inttoptr i32 %v1_13a07 to i32*
  %v3_13a07 = load i32, i32* %v2_13a07, align 4
  store i32 %v3_13a07, i32* %eax.global-to-local, align 4
  %v1_13a0a = load i32, i32* @esp, align 4
  %v2_13a0a = add i32 %v1_13a0a, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13a0a = inttoptr i32 %v2_13a0a to i32*
  store i32 %v3_13a07, i32* %v3_13a0a, align 4
  %v0_13a0e = load i32, i32* %edx.global-to-local, align 4
  %v1_13a0e = load i32, i32* @esp, align 4
  %v2_13a0e = add i32 %v1_13a0e, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13a0e = inttoptr i32 %v2_13a0e to i32*
  store i32 %v0_13a0e, i32* %v3_13a0e, align 4
  %v0_13a12 = load i32, i32* @ebp, align 4
  %v1_13a12 = add i32 %v0_13a12, -80
  %v2_13a12 = inttoptr i32 %v1_13a12 to i32*
  %v3_13a12 = load i32, i32* %v2_13a12, align 4
  store i32 %v3_13a12, i32* %eax.global-to-local, align 4
  %v1_13a15 = load i32, i32* @esp, align 4
  %v2_13a15 = inttoptr i32 %v1_13a15 to i32*
  store i32 %v3_13a12, i32* %v2_13a15, align 4
  %v0_13a18 = load i32, i32* %stack_var_-16, align 4
  %v1_13a18 = load i32, i32* %stack_var_-12, align 4
  %v2_13a18 = load i32, i32* %stack_var_-8, align 4
  %v3_13a18 = load i32, i32* %stack_var_-4, align 4
  %v5_13a18 = call i32 @unknown_29af0(i32 %v0_13a18, i32 %v1_13a18, i32 %v2_13a18, i32 %v3_13a18, i32 %stack_var_0.0)
  store i32 %v5_13a18, i32* %eax.global-to-local, align 4
  %v0_13a1d = load i32, i32* @ebp, align 4
  %v1_13a1d = add i32 %v0_13a1d, -36
  %v2_13a1d = inttoptr i32 %v1_13a1d to i32*
  %v3_13a1d = load i32, i32* %v2_13a1d, align 4
  %v5_13a1d = add i32 %v3_13a1d, %v5_13a18
  store i32 %v5_13a1d, i32* %v2_13a1d, align 4
  %v0_13a20.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %dec_label_pc_139cb, %dec_label_pc_139be
  %v0_13a2d = phi i32 [ %v0_13a20.pre, %dec_label_pc_139cb ], [ %v0_139cb, %dec_label_pc_139be ]
  %v1_13a20 = add i32 %v0_13a2d, -76
  %v2_13a20 = inttoptr i32 %v1_13a20 to i32*
  %v3_13a20 = load i32, i32* %v2_13a20, align 4
  store i32 %v3_13a20, i32* %eax.global-to-local, align 4
  %v1_13a23 = add i32 %v3_13a20, 64
  %v2_13a23 = inttoptr i32 %v1_13a23 to i32*
  %v3_13a23 = load i32, i32* %v2_13a23, align 4
  %v1_13a26 = and i32 %v3_13a23, 16
  %v2_13a26 = icmp eq i32 %v1_13a26, 0
  store i32 %v1_13a26, i32* %eax.global-to-local, align 4
  br i1 %v2_13a26, label %dec_label_pc_13a82, label %dec_label_pc_13a2d

dec_label_pc_13a2d:                               ; preds = %dec_label_pc_13a20
  %v1_13a2d = add i32 %v0_13a2d, -88
  %v2_13a2d = inttoptr i32 %v1_13a2d to i32*
  %v3_13a2d = load i32, i32* %v2_13a2d, align 4
  store i32 %v3_13a2d, i32* %ebx.global-to-local, align 4
  %v3_13a30 = load i32, i32* %v2_13a20, align 4
  %v1_13a33 = add i32 %v3_13a30, 20
  store i32 %v1_13a33, i32* %eax.global-to-local, align 4
  %v1_13a36 = load i32, i32* @esp, align 4
  %v2_13a36 = inttoptr i32 %v1_13a36 to i32*
  store i32 %v1_13a33, i32* %v2_13a36, align 4
  %v0_13a39 = load i32, i32* %stack_var_-16, align 4
  %v1_13a39 = call i32 @unknown_1cc41(i32 %v0_13a39)
  store i32 %v1_13a39, i32* %eax.global-to-local, align 4
  %v0_13a3e = load i32, i32* @ebp, align 4
  %v1_13a3e = add i32 %v0_13a3e, -40
  store i32 %v1_13a3e, i32* %edx.global-to-local, align 4
  %v1_13a41 = load i32, i32* @esp, align 4
  %v2_13a41 = add i32 %v1_13a41, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13a41 = inttoptr i32 %v2_13a41 to i32*
  store i32 %v1_13a39, i32* %v3_13a41, align 4
  %v0_13a45 = load i32, i32* %edx.global-to-local, align 4
  %v1_13a45 = load i32, i32* @esp, align 4
  %v2_13a45 = inttoptr i32 %v1_13a45 to i32*
  store i32 %v0_13a45, i32* %v2_13a45, align 4
  %v0_13a48 = load i32, i32* %stack_var_-16, align 4
  %v1_13a48 = load i32, i32* %stack_var_-12, align 4
  %v2_13a48 = call i32 @unknown_1cc6e(i32 %v0_13a48, i32 %v1_13a48)
  %v0_13a4d = load i32, i32* @esp, align 4
  %v1_13a4d = sub i32 %v0_13a4d, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_13a50 = load i32, i32* @ebp, align 4
  %v1_13a50 = add i32 %v0_13a50, -40
  store i32 %v1_13a50, i32* %eax.global-to-local, align 4
  %v2_13a53 = inttoptr i32 %v1_13a4d to i32*
  store i32 %v1_13a50, i32* %v2_13a53, align 4
  %v0_13a56 = load i32, i32* %stack_var_-16, align 4
  %v1_13a56 = call i32 @unknown_1ccb5(i32 %v0_13a56)
  store i32 %v1_13a56, i32* %eax.global-to-local, align 4
  store i32 %v1_13a56, i32* %edx.global-to-local, align 4
  %v0_13a5d = load i32, i32* @ebp, align 4
  %v1_13a5d = add i32 %v0_13a5d, -95
  %v2_13a5d = inttoptr i32 %v1_13a5d to i8*
  %v3_13a5d = load i8, i8* %v2_13a5d, align 1
  %v4_13a5d = zext i8 %v3_13a5d to i32
  store i32 %v4_13a5d, i32* %ecx.global-to-local, align 4
  %v2_13a61 = load i32, i32* @esp, align 4
  %v3_13a61 = add i32 %v2_13a61, 16
  %v4_13a61 = inttoptr i32 %v3_13a61 to i8*
  store i8 %v3_13a5d, i8* %v4_13a61, align 1
  %v0_13a65 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13a65 = load i32, i32* @esp, align 4
  %v2_13a65 = add i32 %v1_13a65, 12
  %v3_13a65 = inttoptr i32 %v2_13a65 to i32*
  store i32 %v0_13a65, i32* %v3_13a65, align 4
  %v0_13a69 = load i32, i32* @ebp, align 4
  %v1_13a69 = add i32 %v0_13a69, -84
  %v2_13a69 = inttoptr i32 %v1_13a69 to i32*
  %v3_13a69 = load i32, i32* %v2_13a69, align 4
  store i32 %v3_13a69, i32* %eax.global-to-local, align 4
  %v1_13a6c = load i32, i32* @esp, align 4
  %v2_13a6c = add i32 %v1_13a6c, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13a6c = inttoptr i32 %v2_13a6c to i32*
  store i32 %v3_13a69, i32* %v3_13a6c, align 4
  %v0_13a70 = load i32, i32* %edx.global-to-local, align 4
  %v1_13a70 = load i32, i32* @esp, align 4
  %v2_13a70 = add i32 %v1_13a70, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13a70 = inttoptr i32 %v2_13a70 to i32*
  store i32 %v0_13a70, i32* %v3_13a70, align 4
  %v0_13a74 = load i32, i32* @ebp, align 4
  %v1_13a74 = add i32 %v0_13a74, -80
  %v2_13a74 = inttoptr i32 %v1_13a74 to i32*
  %v3_13a74 = load i32, i32* %v2_13a74, align 4
  store i32 %v3_13a74, i32* %eax.global-to-local, align 4
  %v1_13a77 = load i32, i32* @esp, align 4
  %v2_13a77 = inttoptr i32 %v1_13a77 to i32*
  store i32 %v3_13a74, i32* %v2_13a77, align 4
  %v0_13a7a = load i32, i32* %stack_var_-16, align 4
  %v1_13a7a = load i32, i32* %stack_var_-12, align 4
  %v2_13a7a = load i32, i32* %stack_var_-8, align 4
  %v3_13a7a = load i32, i32* %stack_var_-4, align 4
  %v5_13a7a = call i32 @unknown_29af0(i32 %v0_13a7a, i32 %v1_13a7a, i32 %v2_13a7a, i32 %v3_13a7a, i32 %stack_var_0.0)
  store i32 %v5_13a7a, i32* %eax.global-to-local, align 4
  %v0_13a7f = load i32, i32* @ebp, align 4
  %v1_13a7f = add i32 %v0_13a7f, -36
  %v2_13a7f = inttoptr i32 %v1_13a7f to i32*
  %v3_13a7f = load i32, i32* %v2_13a7f, align 4
  %v5_13a7f = add i32 %v3_13a7f, %v5_13a7a
  store i32 %v5_13a7f, i32* %v2_13a7f, align 4
  %v0_13a82.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13a82

dec_label_pc_13a82:                               ; preds = %dec_label_pc_13a2d, %dec_label_pc_13a20
  %v0_13a8b = phi i32 [ %v0_13a82.pre, %dec_label_pc_13a2d ], [ %v0_13a2d, %dec_label_pc_13a20 ]
  %v1_13a82 = add i32 %v0_13a8b, -88
  %v2_13a82 = inttoptr i32 %v1_13a82 to i32*
  %v3_13a82 = load i32, i32* %v2_13a82, align 4
  store i32 %v3_13a82, i32* %ecx.global-to-local, align 4
  %v1_13a85 = add i32 %v0_13a8b, -76
  %v2_13a85 = inttoptr i32 %v1_13a85 to i32*
  %v3_13a85 = load i32, i32* %v2_13a85, align 4
  store i32 %v3_13a85, i32* %eax.global-to-local, align 4
  %v1_13a88 = add i32 %v3_13a85, 68
  store i32 %v1_13a88, i32* %edx.global-to-local, align 4
  %v1_13a8b = add i32 %v0_13a8b, -94
  %v2_13a8b = inttoptr i32 %v1_13a8b to i8*
  %v3_13a8b = load i8, i8* %v2_13a8b, align 1
  %v4_13a8b = zext i8 %v3_13a8b to i32
  store i32 %v4_13a8b, i32* %eax.global-to-local, align 4
  %v2_13a8f = load i32, i32* @esp, align 4
  %v3_13a8f = add i32 %v2_13a8f, 16
  %v4_13a8f = inttoptr i32 %v3_13a8f to i8*
  store i8 %v3_13a8b, i8* %v4_13a8f, align 1
  %v0_13a93 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13a93 = load i32, i32* @esp, align 4
  %v2_13a93 = add i32 %v1_13a93, 12
  %v3_13a93 = inttoptr i32 %v2_13a93 to i32*
  store i32 %v0_13a93, i32* %v3_13a93, align 4
  %v0_13a97 = load i32, i32* @ebp, align 4
  %v1_13a97 = add i32 %v0_13a97, -84
  %v2_13a97 = inttoptr i32 %v1_13a97 to i32*
  %v3_13a97 = load i32, i32* %v2_13a97, align 4
  store i32 %v3_13a97, i32* %eax.global-to-local, align 4
  %v1_13a9a = load i32, i32* @esp, align 4
  %v2_13a9a = add i32 %v1_13a9a, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13a9a = inttoptr i32 %v2_13a9a to i32*
  store i32 %v3_13a97, i32* %v3_13a9a, align 4
  %v0_13a9e = load i32, i32* %edx.global-to-local, align 4
  %v1_13a9e = load i32, i32* @esp, align 4
  %v2_13a9e = add i32 %v1_13a9e, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13a9e = inttoptr i32 %v2_13a9e to i32*
  store i32 %v0_13a9e, i32* %v3_13a9e, align 4
  %v0_13aa2 = load i32, i32* @ebp, align 4
  %v1_13aa2 = add i32 %v0_13aa2, -80
  %v2_13aa2 = inttoptr i32 %v1_13aa2 to i32*
  %v3_13aa2 = load i32, i32* %v2_13aa2, align 4
  store i32 %v3_13aa2, i32* %eax.global-to-local, align 4
  %v1_13aa5 = load i32, i32* @esp, align 4
  %v2_13aa5 = inttoptr i32 %v1_13aa5 to i32*
  store i32 %v3_13aa2, i32* %v2_13aa5, align 4
  %v0_13aa8 = call i32 @unknown_29b58()
  store i32 %v0_13aa8, i32* %eax.global-to-local, align 4
  %v0_13aad = load i32, i32* @ebp, align 4
  %v1_13aad = add i32 %v0_13aad, -36
  %v2_13aad = inttoptr i32 %v1_13aad to i32*
  %v3_13aad = load i32, i32* %v2_13aad, align 4
  %v5_13aad = add i32 %v3_13aad, %v0_13aa8
  store i32 %v5_13aad, i32* %v2_13aad, align 4
  %v0_13ab0 = load i32, i32* @ebp, align 4
  %v1_13ab0 = add i32 %v0_13ab0, -88
  %v2_13ab0 = inttoptr i32 %v1_13ab0 to i32*
  %v3_13ab0 = load i32, i32* %v2_13ab0, align 4
  store i32 %v3_13ab0, i32* %ecx.global-to-local, align 4
  %v1_13ab3 = add i32 %v0_13ab0, -76
  %v2_13ab3 = inttoptr i32 %v1_13ab3 to i32*
  %v3_13ab3 = load i32, i32* %v2_13ab3, align 4
  store i32 %v3_13ab3, i32* %eax.global-to-local, align 4
  %v1_13ab6 = add i32 %v3_13ab3, 116
  store i32 %v1_13ab6, i32* %edx.global-to-local, align 4
  %v1_13ab9 = add i32 %v0_13ab0, -93
  %v2_13ab9 = inttoptr i32 %v1_13ab9 to i8*
  %v3_13ab9 = load i8, i8* %v2_13ab9, align 1
  %v4_13ab9 = zext i8 %v3_13ab9 to i32
  store i32 %v4_13ab9, i32* %eax.global-to-local, align 4
  %v2_13abd = load i32, i32* @esp, align 4
  %v3_13abd = add i32 %v2_13abd, 16
  %v4_13abd = inttoptr i32 %v3_13abd to i8*
  store i8 %v3_13ab9, i8* %v4_13abd, align 1
  %v0_13ac1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13ac1 = load i32, i32* @esp, align 4
  %v2_13ac1 = add i32 %v1_13ac1, 12
  %v3_13ac1 = inttoptr i32 %v2_13ac1 to i32*
  store i32 %v0_13ac1, i32* %v3_13ac1, align 4
  %v0_13ac5 = load i32, i32* @ebp, align 4
  %v1_13ac5 = add i32 %v0_13ac5, -84
  %v2_13ac5 = inttoptr i32 %v1_13ac5 to i32*
  %v3_13ac5 = load i32, i32* %v2_13ac5, align 4
  store i32 %v3_13ac5, i32* %eax.global-to-local, align 4
  %v1_13ac8 = load i32, i32* @esp, align 4
  %v2_13ac8 = add i32 %v1_13ac8, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13ac8 = inttoptr i32 %v2_13ac8 to i32*
  store i32 %v3_13ac5, i32* %v3_13ac8, align 4
  %v0_13acc = load i32, i32* %edx.global-to-local, align 4
  %v1_13acc = load i32, i32* @esp, align 4
  %v2_13acc = add i32 %v1_13acc, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13acc = inttoptr i32 %v2_13acc to i32*
  store i32 %v0_13acc, i32* %v3_13acc, align 4
  %v0_13ad0 = load i32, i32* @ebp, align 4
  %v1_13ad0 = add i32 %v0_13ad0, -80
  %v2_13ad0 = inttoptr i32 %v1_13ad0 to i32*
  %v3_13ad0 = load i32, i32* %v2_13ad0, align 4
  store i32 %v3_13ad0, i32* %eax.global-to-local, align 4
  %v1_13ad3 = load i32, i32* @esp, align 4
  %v2_13ad3 = inttoptr i32 %v1_13ad3 to i32*
  store i32 %v3_13ad0, i32* %v2_13ad3, align 4
  %v0_13ad6 = call i32 @unknown_29bc0()
  store i32 %v0_13ad6, i32* %eax.global-to-local, align 4
  %v0_13adb = load i32, i32* @ebp, align 4
  %v1_13adb = add i32 %v0_13adb, -36
  %v2_13adb = inttoptr i32 %v1_13adb to i32*
  %v3_13adb = load i32, i32* %v2_13adb, align 4
  %v5_13adb = add i32 %v3_13adb, %v0_13ad6
  store i32 %v5_13adb, i32* %v2_13adb, align 4
  %v0_13ade = load i32, i32* @ebp, align 4
  %v1_13ade = add i32 %v0_13ade, -88
  %v2_13ade = inttoptr i32 %v1_13ade to i32*
  %v3_13ade = load i32, i32* %v2_13ade, align 4
  store i32 %v3_13ade, i32* %eax.global-to-local, align 4
  %v1_13ae1 = add i32 %v0_13ade, -76
  %v2_13ae1 = inttoptr i32 %v1_13ae1 to i32*
  %v3_13ae1 = load i32, i32* %v2_13ae1, align 4
  %v1_13ae4 = add i32 %v3_13ae1, 72
  store i32 %v1_13ae4, i32* %edx.global-to-local, align 4
  %v1_13ae7 = add i32 %v0_13ade, -92
  %v2_13ae7 = inttoptr i32 %v1_13ae7 to i8*
  %v3_13ae7 = load i8, i8* %v2_13ae7, align 1
  %v4_13ae7 = zext i8 %v3_13ae7 to i32
  store i32 %v4_13ae7, i32* %ecx.global-to-local, align 4
  %v2_13aeb = load i32, i32* @esp, align 4
  %v3_13aeb = add i32 %v2_13aeb, 16
  %v4_13aeb = inttoptr i32 %v3_13aeb to i8*
  store i8 %v3_13ae7, i8* %v4_13aeb, align 1
  %v0_13aef = load i32, i32* %eax.global-to-local, align 4
  %v1_13aef = load i32, i32* @esp, align 4
  %v2_13aef = add i32 %v1_13aef, 12
  %v3_13aef = inttoptr i32 %v2_13aef to i32*
  store i32 %v0_13aef, i32* %v3_13aef, align 4
  %v0_13af3 = load i32, i32* @ebp, align 4
  %v1_13af3 = add i32 %v0_13af3, -84
  %v2_13af3 = inttoptr i32 %v1_13af3 to i32*
  %v3_13af3 = load i32, i32* %v2_13af3, align 4
  store i32 %v3_13af3, i32* %eax.global-to-local, align 4
  %v1_13af6 = load i32, i32* @esp, align 4
  %v2_13af6 = add i32 %v1_13af6, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13af6 = inttoptr i32 %v2_13af6 to i32*
  store i32 %v3_13af3, i32* %v3_13af6, align 4
  %v0_13afa = load i32, i32* %edx.global-to-local, align 4
  %v1_13afa = load i32, i32* @esp, align 4
  %v2_13afa = add i32 %v1_13afa, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13afa = inttoptr i32 %v2_13afa to i32*
  store i32 %v0_13afa, i32* %v3_13afa, align 4
  %v0_13afe = load i32, i32* @ebp, align 4
  %v1_13afe = add i32 %v0_13afe, -80
  %v2_13afe = inttoptr i32 %v1_13afe to i32*
  %v3_13afe = load i32, i32* %v2_13afe, align 4
  store i32 %v3_13afe, i32* %eax.global-to-local, align 4
  %v1_13b01 = load i32, i32* @esp, align 4
  %v2_13b01 = inttoptr i32 %v1_13b01 to i32*
  store i32 %v3_13afe, i32* %v2_13b01, align 4
  %v0_13b04 = call i32 @unknown_29bc0()
  store i32 %v0_13b04, i32* %eax.global-to-local, align 4
  %v0_13b09 = load i32, i32* @ebp, align 4
  %v1_13b09 = add i32 %v0_13b09, -36
  %v2_13b09 = inttoptr i32 %v1_13b09 to i32*
  %v3_13b09 = load i32, i32* %v2_13b09, align 4
  %v5_13b09 = add i32 %v3_13b09, %v0_13b04
  store i32 %v5_13b09, i32* %v2_13b09, align 4
  %v0_13b0c = load i32, i32* @ebp, align 4
  %v1_13b0c = add i32 %v0_13b0c, -88
  %v2_13b0c = inttoptr i32 %v1_13b0c to i32*
  %v3_13b0c = load i32, i32* %v2_13b0c, align 4
  store i32 %v3_13b0c, i32* %eax.global-to-local, align 4
  %v1_13b0f = add i32 %v0_13b0c, -76
  %v2_13b0f = inttoptr i32 %v1_13b0f to i32*
  %v3_13b0f = load i32, i32* %v2_13b0f, align 4
  %v1_13b12 = add i32 %v3_13b0f, 104
  store i32 %v1_13b12, i32* %edx.global-to-local, align 4
  %v1_13b15 = add i32 %v0_13b0c, -91
  %v2_13b15 = inttoptr i32 %v1_13b15 to i8*
  %v3_13b15 = load i8, i8* %v2_13b15, align 1
  %v4_13b15 = zext i8 %v3_13b15 to i32
  store i32 %v4_13b15, i32* %ecx.global-to-local, align 4
  %v2_13b19 = load i32, i32* @esp, align 4
  %v3_13b19 = add i32 %v2_13b19, 16
  %v4_13b19 = inttoptr i32 %v3_13b19 to i8*
  store i8 %v3_13b15, i8* %v4_13b19, align 1
  %v0_13b1d = load i32, i32* %eax.global-to-local, align 4
  %v1_13b1d = load i32, i32* @esp, align 4
  %v2_13b1d = add i32 %v1_13b1d, 12
  %v3_13b1d = inttoptr i32 %v2_13b1d to i32*
  store i32 %v0_13b1d, i32* %v3_13b1d, align 4
  %v0_13b21 = load i32, i32* @ebp, align 4
  %v1_13b21 = add i32 %v0_13b21, -84
  %v2_13b21 = inttoptr i32 %v1_13b21 to i32*
  %v3_13b21 = load i32, i32* %v2_13b21, align 4
  store i32 %v3_13b21, i32* %eax.global-to-local, align 4
  %v1_13b24 = load i32, i32* @esp, align 4
  %v2_13b24 = add i32 %v1_13b24, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13b24 = inttoptr i32 %v2_13b24 to i32*
  store i32 %v3_13b21, i32* %v3_13b24, align 4
  %v0_13b28 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b28 = load i32, i32* @esp, align 4
  %v2_13b28 = add i32 %v1_13b28, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13b28 = inttoptr i32 %v2_13b28 to i32*
  store i32 %v0_13b28, i32* %v3_13b28, align 4
  %v0_13b2c = load i32, i32* @ebp, align 4
  %v1_13b2c = add i32 %v0_13b2c, -80
  %v2_13b2c = inttoptr i32 %v1_13b2c to i32*
  %v3_13b2c = load i32, i32* %v2_13b2c, align 4
  store i32 %v3_13b2c, i32* %eax.global-to-local, align 4
  %v1_13b2f = load i32, i32* @esp, align 4
  %v2_13b2f = inttoptr i32 %v1_13b2f to i32*
  store i32 %v3_13b2c, i32* %v2_13b2f, align 4
  %v0_13b32 = call i32 @unknown_29c28()
  store i32 %v0_13b32, i32* %eax.global-to-local, align 4
  %v0_13b37 = load i32, i32* @ebp, align 4
  %v1_13b37 = add i32 %v0_13b37, -36
  %v2_13b37 = inttoptr i32 %v1_13b37 to i32*
  %v3_13b37 = load i32, i32* %v2_13b37, align 4
  %v5_13b37 = add i32 %v3_13b37, %v0_13b32
  store i32 %v5_13b37, i32* %v2_13b37, align 4
  %v0_13b3a = load i32, i32* @ebp, align 4
  %v1_13b3a = add i32 %v0_13b3a, -88
  %v2_13b3a = inttoptr i32 %v1_13b3a to i32*
  %v3_13b3a = load i32, i32* %v2_13b3a, align 4
  store i32 %v3_13b3a, i32* %eax.global-to-local, align 4
  %v1_13b3d = add i32 %v0_13b3a, -76
  %v2_13b3d = inttoptr i32 %v1_13b3d to i32*
  %v3_13b3d = load i32, i32* %v2_13b3d, align 4
  %v1_13b40 = add i32 %v3_13b3d, 108
  store i32 %v1_13b40, i32* %edx.global-to-local, align 4
  %v1_13b43 = add i32 %v0_13b3a, -90
  %v2_13b43 = inttoptr i32 %v1_13b43 to i8*
  %v3_13b43 = load i8, i8* %v2_13b43, align 1
  %v4_13b43 = zext i8 %v3_13b43 to i32
  store i32 %v4_13b43, i32* %ecx.global-to-local, align 4
  %v2_13b47 = load i32, i32* @esp, align 4
  %v3_13b47 = add i32 %v2_13b47, 16
  %v4_13b47 = inttoptr i32 %v3_13b47 to i8*
  store i8 %v3_13b43, i8* %v4_13b47, align 1
  %v0_13b4b = load i32, i32* %eax.global-to-local, align 4
  %v1_13b4b = load i32, i32* @esp, align 4
  %v2_13b4b = add i32 %v1_13b4b, 12
  %v3_13b4b = inttoptr i32 %v2_13b4b to i32*
  store i32 %v0_13b4b, i32* %v3_13b4b, align 4
  %v0_13b4f = load i32, i32* @ebp, align 4
  %v1_13b4f = add i32 %v0_13b4f, -84
  %v2_13b4f = inttoptr i32 %v1_13b4f to i32*
  %v3_13b4f = load i32, i32* %v2_13b4f, align 4
  store i32 %v3_13b4f, i32* %eax.global-to-local, align 4
  %v1_13b52 = load i32, i32* @esp, align 4
  %v2_13b52 = add i32 %v1_13b52, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13b52 = inttoptr i32 %v2_13b52 to i32*
  store i32 %v3_13b4f, i32* %v3_13b52, align 4
  %v0_13b56 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b56 = load i32, i32* @esp, align 4
  %v2_13b56 = add i32 %v1_13b56, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13b56 = inttoptr i32 %v2_13b56 to i32*
  store i32 %v0_13b56, i32* %v3_13b56, align 4
  %v0_13b5a = load i32, i32* @ebp, align 4
  %v1_13b5a = add i32 %v0_13b5a, -80
  %v2_13b5a = inttoptr i32 %v1_13b5a to i32*
  %v3_13b5a = load i32, i32* %v2_13b5a, align 4
  store i32 %v3_13b5a, i32* %eax.global-to-local, align 4
  %v1_13b5d = load i32, i32* @esp, align 4
  %v2_13b5d = inttoptr i32 %v1_13b5d to i32*
  store i32 %v3_13b5a, i32* %v2_13b5d, align 4
  %v0_13b60 = call i32 @unknown_29c28()
  store i32 %v0_13b60, i32* %eax.global-to-local, align 4
  %v0_13b65 = load i32, i32* @ebp, align 4
  %v1_13b65 = add i32 %v0_13b65, -36
  %v2_13b65 = inttoptr i32 %v1_13b65 to i32*
  %v3_13b65 = load i32, i32* %v2_13b65, align 4
  %v5_13b65 = add i32 %v3_13b65, %v0_13b60
  store i32 %v5_13b65, i32* %v2_13b65, align 4
  %v0_13b68 = load i32, i32* @ebp, align 4
  %v1_13b68 = add i32 %v0_13b68, -88
  %v2_13b68 = inttoptr i32 %v1_13b68 to i32*
  %v3_13b68 = load i32, i32* %v2_13b68, align 4
  store i32 %v3_13b68, i32* %eax.global-to-local, align 4
  %v1_13b6b = add i32 %v0_13b68, -76
  %v2_13b6b = inttoptr i32 %v1_13b6b to i32*
  %v3_13b6b = load i32, i32* %v2_13b6b, align 4
  %v1_13b6e = add i32 %v3_13b6b, 112
  store i32 %v1_13b6e, i32* %edx.global-to-local, align 4
  %v1_13b71 = add i32 %v0_13b68, -89
  %v2_13b71 = inttoptr i32 %v1_13b71 to i8*
  %v3_13b71 = load i8, i8* %v2_13b71, align 1
  %v4_13b71 = zext i8 %v3_13b71 to i32
  store i32 %v4_13b71, i32* %ecx.global-to-local, align 4
  %v2_13b75 = load i32, i32* @esp, align 4
  %v3_13b75 = add i32 %v2_13b75, 16
  %v4_13b75 = inttoptr i32 %v3_13b75 to i8*
  store i8 %v3_13b71, i8* %v4_13b75, align 1
  %v0_13b79 = load i32, i32* %eax.global-to-local, align 4
  %v1_13b79 = load i32, i32* @esp, align 4
  %v2_13b79 = add i32 %v1_13b79, 12
  %v3_13b79 = inttoptr i32 %v2_13b79 to i32*
  store i32 %v0_13b79, i32* %v3_13b79, align 4
  %v0_13b7d = load i32, i32* @ebp, align 4
  %v1_13b7d = add i32 %v0_13b7d, -84
  %v2_13b7d = inttoptr i32 %v1_13b7d to i32*
  %v3_13b7d = load i32, i32* %v2_13b7d, align 4
  store i32 %v3_13b7d, i32* %eax.global-to-local, align 4
  %v1_13b80 = load i32, i32* @esp, align 4
  %v2_13b80 = add i32 %v1_13b80, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_13b80 = inttoptr i32 %v2_13b80 to i32*
  store i32 %v3_13b7d, i32* %v3_13b80, align 4
  %v0_13b84 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b84 = load i32, i32* @esp, align 4
  %v2_13b84 = add i32 %v1_13b84, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_13b84 = inttoptr i32 %v2_13b84 to i32*
  store i32 %v0_13b84, i32* %v3_13b84, align 4
  %v0_13b88 = load i32, i32* @ebp, align 4
  %v1_13b88 = add i32 %v0_13b88, -80
  %v2_13b88 = inttoptr i32 %v1_13b88 to i32*
  %v3_13b88 = load i32, i32* %v2_13b88, align 4
  store i32 %v3_13b88, i32* %eax.global-to-local, align 4
  %v1_13b8b = load i32, i32* @esp, align 4
  %v2_13b8b = inttoptr i32 %v1_13b8b to i32*
  store i32 %v3_13b88, i32* %v2_13b8b, align 4
  %v0_13b8e = call i32 @unknown_29c28()
  store i32 %v0_13b8e, i32* %eax.global-to-local, align 4
  %v0_13b93 = load i32, i32* @ebp, align 4
  %v1_13b93 = add i32 %v0_13b93, -36
  %v2_13b93 = inttoptr i32 %v1_13b93 to i32*
  %v3_13b93 = load i32, i32* %v2_13b93, align 4
  %v5_13b93 = add i32 %v3_13b93, %v0_13b8e
  store i32 %v5_13b93, i32* %v2_13b93, align 4
  %v0_13b96 = load i32, i32* @ebp, align 4
  %v1_13b96 = add i32 %v0_13b96, -28
  %v2_13b96 = inttoptr i32 %v1_13b96 to i32*
  %v3_13b96 = load i32, i32* %v2_13b96, align 4
  store i32 %v3_13b96, i32* %eax.global-to-local, align 4
  %v1_13b99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13b99 = xor i32 %v1_13b99, %v3_13b96
  %v3_13b99 = icmp eq i32 %v2_13b99, 0
  store i32 %v2_13b99, i32* @eax, align 4
  br i1 %v3_13b99, label %bb, label %dec_label_pc_13ba2

bb:                                               ; preds = %dec_label_pc_13a82
  %v1_13ba0 = call i32 @function_13ba7()
  store i32 %v1_13ba0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_13ba2

dec_label_pc_13ba2:                               ; preds = %bb, %dec_label_pc_13a82
  %v3_13ba0 = phi i32 [ %v1_13ba0, %bb ], [ %v2_13b99, %dec_label_pc_13a82 ]
  ret i32 %v3_13ba0

; uselistorder directives
  uselistorder i32 %v0_13a8b, { 0, 2, 1 }
  uselistorder i32 %stack_var_0.0, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-16, { 0, 2, 4, 6, 1, 3, 5, 7, 8, 9 }
  uselistorder i32 ()* @unknown_29c28, { 2, 1, 0 }
  uselistorder i32 ()* @unknown_29bc0, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1d071, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_29af0, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_1ccb5, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1cc6e, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_1cc41, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_29a88, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_1d0e5, { 1, 0, 2 }
}

define i32 @function_13ba7() local_unnamed_addr {
dec_label_pc_13ba7:
  %v0_13ba7 = load i32, i32* @ebp, align 4
  %v1_13bad = inttoptr i32 %v0_13ba7 to i32*
  %v2_13bad = load i32, i32* %v1_13bad, align 4
  store i32 %v2_13bad, i32* @ebp, align 4
  %v0_13bae = load i32, i32* @eax, align 4
  ret i32 %v0_13bae
}

define i32 @_ZN25zero_after_free_allocatorIcEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13bb0:
  ret i32 %arg1
}

define i32 @function_13bea(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13bea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_13bef() local_unnamed_addr {
dec_label_pc_13bef:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13bef = load i32, i32* %ecx.global-to-local, align 4
  %v1_13bef = sub i32 %v0_13bef, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_13bef, i32* %ecx.global-to-local, align 4
  %v0_13bf1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13bf1
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13bf2:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_13c10 = ptrtoint i32* %stack_var_-37 to i32
  %v2_13c13 = ptrtoint i32* %stack_var_-32 to i32
  %v2_13c1d = call i32 @unknown_2a0bc(i32 %v2_13c10, i32 %v2_13c13)
  %v0_13c25 = load i32, i32* %ebx.global-to-local, align 4
  %v3_13c30 = load i32, i32* %stack_var_-32, align 4
  %v3_13c36 = call i32 @unknown_2a0f1(i32 %v3_13c30, i32 %arg2, i32 %v0_13c25)
  store i32 %v3_13c36, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13c47

bb:                                               ; preds = %dec_label_pc_13bf2
  %v1_13c45 = call i32 @function_13c4c()
  br label %dec_label_pc_13c47

dec_label_pc_13c47:                               ; preds = %bb, %dec_label_pc_13bf2
  %v3_13c45 = phi i32 [ %v1_13c45, %bb ], [ %v3_13c36, %dec_label_pc_13bf2 ]
  ret i32 %v3_13c45
}

define i32 @function_13c4c() local_unnamed_addr {
dec_label_pc_13c4c:
  %v0_13c50 = load i32, i32* @eax, align 4
  ret i32 %v0_13c50
}

define i32 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13c51:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_13c6f = ptrtoint i32* %stack_var_-37 to i32
  %v2_13c72 = ptrtoint i32* %stack_var_-32 to i32
  %v2_13c7c = call i32 @unknown_2a199(i32 %v2_13c6f, i32 %v2_13c72)
  %v3_13c84 = load i32, i32* %stack_var_-32, align 4
  %v0_13c87 = load i32, i32* %ebx.global-to-local, align 4
  %v3_13c95 = call i32 @unknown_2a1ce(i32 %v3_13c84, i32 %arg2, i32 %v0_13c87)
  store i32 %v3_13c95, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13ca6

bb:                                               ; preds = %dec_label_pc_13c51
  %v1_13ca4 = call i32 @function_13cab()
  br label %dec_label_pc_13ca6

dec_label_pc_13ca6:                               ; preds = %bb, %dec_label_pc_13c51
  %v2_13ca4 = phi i32 [ %v1_13ca4, %bb ], [ %v3_13c95, %dec_label_pc_13c51 ]
  ret i32 %v2_13ca4
}

define i32 @function_13cab() local_unnamed_addr {
dec_label_pc_13cab:
  %v0_13caf = load i32, i32* @eax, align 4
  ret i32 %v0_13caf
}

define i32 @_ZSt22__uninitialized_copy_aIPKcPc25zero_after_free_allocatorIcEET0_T_S6_S5_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13cb0:
  %v15_13d0d120 = icmp eq i32 %arg1, %arg2
  %v1_13d10121 = icmp eq i1 %v15_13d0d120, false
  %v5_13d13122 = icmp eq i1 %v1_13d10121, false
  %v1_13d15123 = icmp eq i1 %v5_13d13122, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_13d15123, label %dec_label_pc_13ce1, label %dec_label_pc_13d17

dec_label_pc_13ce1:                               ; preds = %dec_label_pc_13cb0, %dec_label_pc_13ce1
  %storemerge.in125 = phi i32 [ %v5_13d06, %dec_label_pc_13ce1 ], [ %arg3, %dec_label_pc_13cb0 ]
  %stack_var_-32.0.in124 = phi i32 [ %v5_13d02, %dec_label_pc_13ce1 ], [ %arg1, %dec_label_pc_13cb0 ]
  %v2_13ce7 = call i32 @unknown_248ba(i32 %storemerge.in125)
  %v5_13cfd = call i32 @unknown_21320(i32 %arg4, i32 %v2_13ce7, i32 %stack_var_-32.0.in124)
  %v5_13d02 = add i32 %stack_var_-32.0.in124, ptrtoint (i8** @global_var_1.1176 to i32)
  %v5_13d06 = add i32 %storemerge.in125, ptrtoint (i8** @global_var_1.1176 to i32)
  %v15_13d0d = icmp eq i32 %v5_13d02, %arg2
  %v1_13d10 = icmp eq i1 %v15_13d0d, false
  %v5_13d13 = icmp eq i1 %v1_13d10, false
  %v1_13d15 = icmp eq i1 %v5_13d13, false
  store i32 %v5_13d06, i32* @eax, align 4
  br i1 %v1_13d15, label %dec_label_pc_13ce1, label %dec_label_pc_13d17

dec_label_pc_13d17:                               ; preds = %dec_label_pc_13ce1, %dec_label_pc_13cb0
  %storemerge.in.lcssa = phi i32 [ %arg3, %dec_label_pc_13cb0 ], [ %v5_13d06, %dec_label_pc_13ce1 ]
  br i1 true, label %bb, label %dec_label_pc_13d26

bb:                                               ; preds = %dec_label_pc_13d17
  %v1_13d24 = call i32 @function_13d2b()
  br label %dec_label_pc_13d26

dec_label_pc_13d26:                               ; preds = %bb, %dec_label_pc_13d17
  %v2_13d24 = phi i32 [ %v1_13d24, %bb ], [ %storemerge.in.lcssa, %dec_label_pc_13d17 ]
  ret i32 %v2_13d24

; uselistorder directives
  uselistorder i32 %v5_13d06, { 0, 2, 1 }
  uselistorder i32 %v5_13d02, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.in124, { 1, 0 }
  uselistorder i32 %storemerge.in125, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13ce1, { 1, 0 }
}

define i32 @function_13d2b() local_unnamed_addr {
dec_label_pc_13d2b:
  %v0_13d2c = load i32, i32* @eax, align 4
  ret i32 %v0_13d2c
}

define i32 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13d2d:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_13d4b = ptrtoint i32* %stack_var_-37 to i32
  %v2_13d4e = ptrtoint i32* %stack_var_-32 to i32
  %v2_13d58 = call i32 @unknown_2a2ed(i32 %v2_13d4b, i32 %v2_13d4e)
  %v3_13d60 = load i32, i32* %stack_var_-32, align 4
  %v0_13d63 = load i32, i32* %ebx.global-to-local, align 4
  %v3_13d71 = call i32 @unknown_2a322(i32 %v3_13d60, i32 %arg2, i32 %v0_13d63)
  store i32 %v3_13d71, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13d82

bb:                                               ; preds = %dec_label_pc_13d2d
  %v1_13d80 = call i32 @function_13d87()
  br label %dec_label_pc_13d82

dec_label_pc_13d82:                               ; preds = %bb, %dec_label_pc_13d2d
  %v2_13d80 = phi i32 [ %v1_13d80, %bb ], [ %v3_13d71, %dec_label_pc_13d2d ]
  ret i32 %v2_13d80
}

define i32 @function_13d87() local_unnamed_addr {
dec_label_pc_13d87:
  %v0_13d8b = load i32, i32* @eax, align 4
  ret i32 %v0_13d8b
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13d8c:
  %v1_13db5 = call i32 @unknown_24c42(i32 %arg1)
  %v10_13dba = icmp ult i32 %v1_13db5, %arg2
  %v1_13dbd = zext i1 %v10_13dba to i32
  %v3_13dbd = and i32 %v1_13db5, -256
  %v4_13dbd = or i32 %v1_13dbd, %v3_13dbd
  %v5_13dc0 = icmp eq i1 %v10_13dba, false
  br i1 %v5_13dc0, label %bb, label %dec_label_pc_13dc4

bb:                                               ; preds = %dec_label_pc_13d8c
  %v1_13dc2 = call i32 @function_13dc9()
  br label %dec_label_pc_13dc4

dec_label_pc_13dc4:                               ; preds = %bb, %dec_label_pc_13d8c
  %v2_13dc2 = phi i32 [ %v1_13dc2, %bb ], [ %v4_13dbd, %dec_label_pc_13d8c ]
  ret i32 %v2_13dc2

; uselistorder directives
  uselistorder i1 %v10_13dba, { 1, 0 }
}

define i32 @function_13dc9() local_unnamed_addr {
dec_label_pc_13dc9:
  %v0_13dc9 = load i32, i32* @ebp, align 4
  %v1_13dc9 = add i32 %v0_13dc9, -32
  %v2_13dc9 = inttoptr i32 %v1_13dc9 to i32*
  %v3_13dc9 = load i32, i32* %v2_13dc9, align 4
  ret i32 %v3_13dc9
}

define i32 @function_13de4() local_unnamed_addr {
dec_label_pc_13de4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13de4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13de4 = sub i32 %v0_13de4, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_13de4, i32* %ecx.global-to-local, align 4
  %v0_13de6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13de6
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_13de8:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13e0e

bb:                                               ; preds = %dec_label_pc_13de8
  %v2_13e0c = call i32 @function_13e13(i32 %arg1)
  br label %dec_label_pc_13e0e

dec_label_pc_13e0e:                               ; preds = %bb, %dec_label_pc_13de8
  %v3_13e0c = phi i32 [ %v2_13e0c, %bb ], [ %arg1, %dec_label_pc_13de8 ]
  ret i32 %v3_13e0c
}

define i32 @function_13e13(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e13:
  %v0_13e14 = load i32, i32* @eax, align 4
  ret i32 %v0_13e14
}

define i32 @_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEPcT_SA_RKSaIcESt20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_13e16:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* @ebx, align 4
  %v4_13e4a = ptrtoint i32* %stack_var_-36 to i32
  %v2_13e4e = ptrtoint i32* %stack_var_-32 to i32
  %v2_13e54 = call i32 @unknown_2a483(i32 %v2_13e4e, i32 %v4_13e4a)
  %v4_13e59 = trunc i32 %v2_13e54 to i8
  %v5_13e59 = icmp eq i8 %v4_13e59, 0
  br i1 %v5_13e59, label %bb, label %dec_label_pc_13e5d

bb:                                               ; preds = %dec_label_pc_13e16
  %v1_13e5b = call i32 @function_13e8a()
  br label %dec_label_pc_13e5d

dec_label_pc_13e5d:                               ; preds = %bb, %dec_label_pc_13e16
  %v2_13e5d = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_13e5d
}

define i32 @function_13e68() local_unnamed_addr {
dec_label_pc_13e68:
  %ebp.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @ebx, align 4
  %v0_13e6d = load i32, i32* %ebp.global-to-local, align 4
  %v1_13e6d = add i32 %v0_13e6d, -13
  %v1_13e74 = add i32 %v0_13e6d, -36
  %v2_13e74 = inttoptr i32 %v1_13e74 to i32*
  %v3_13e74 = load i32, i32* %v2_13e74, align 4
  %v2_13e7a = call i32 @unknown_2a44e(i32 %v3_13e74, i32 %v1_13e6d)
  %v4_13e7f = trunc i32 %v2_13e7a to i8
  %v5_13e7f = icmp eq i8 %v4_13e7f, 0
  br i1 %v5_13e7f, label %bb, label %dec_label_pc_13e83

bb:                                               ; preds = %dec_label_pc_13e68
  %v1_13e81 = call i32 @function_13e8a()
  br label %dec_label_pc_13e83

dec_label_pc_13e83:                               ; preds = %bb, %dec_label_pc_13e68
  ret i32 ptrtoint (i8** @global_var_1.1176 to i32)

; uselistorder directives
  uselistorder i32 ()* @function_13e8a, { 1, 0 }
}

define i32 @function_13e8a() local_unnamed_addr {
dec_label_pc_13e8a:
  ret i32 0
}

define i32 @function_13e94(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13e94:
  %v0_13e9a = load i32, i32* @eax, align 4
  %v11_13e9a = and i32 %v0_13e9a, -24
  ret i32 %v11_13e9a
}

define i32 @function_13eb3() local_unnamed_addr {
dec_label_pc_13eb3:
  %v0_13eb3 = call i32 @function_13f69()
  ret i32 %v0_13eb3
}

define i32 @function_13ed4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13ed4:
  %v0_13ed4 = call i32 @unknown_24bb3()
  %v4_13ed9 = trunc i32 %v0_13ed4 to i8
  %v5_13ed9 = icmp eq i8 %v4_13ed9, 0
  %. = select i1 %v5_13ed9, i32 0, i32 ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_13ee9 = trunc i32 %. to i8
  %v5_13ee9 = icmp eq i8 %v4_13ee9, 0
  br i1 %v5_13ee9, label %bb, label %dec_label_pc_13eed

bb:                                               ; preds = %dec_label_pc_13ed4
  %v1_13eeb = call i32 @function_13ef9()
  br label %dec_label_pc_13eed

dec_label_pc_13eed:                               ; preds = %bb, %dec_label_pc_13ed4
  %v3_13eed = phi i32 [ %v1_13eeb, %bb ], [ %., %dec_label_pc_13ed4 ]
  ret i32 %v3_13eed
}

define i32 @function_13ef9() local_unnamed_addr {
dec_label_pc_13ef9:
  %v0_13ef9 = load i32, i32* @ebp, align 4
  %v1_13ef9 = add i32 %v0_13ef9, -32
  %v2_13ef9 = inttoptr i32 %v1_13ef9 to i32*
  %v3_13ef9 = load i32, i32* %v2_13ef9, align 4
  %v1_13f00 = add i32 %v0_13ef9, -28
  %v2_13f00 = inttoptr i32 %v1_13f00 to i32*
  %v3_13f00 = load i32, i32* %v2_13f00, align 4
  %v2_13f06 = call i32 @unknown_27a08(i32 %v3_13f00, i32 %v3_13ef9)
  %v1_13f0b = load i32, i32* @ebp, align 4
  %v2_13f0b = add i32 %v1_13f0b, -24
  %v3_13f0b = inttoptr i32 %v2_13f0b to i32*
  store i32 %v2_13f06, i32* %v3_13f0b, align 4
  %v0_13f0e = load i32, i32* @ebp, align 4
  %v1_13f1d = add i32 %v0_13f0e, -24
  %v2_13f1d = inttoptr i32 %v1_13f1d to i32*
  %v3_13f1d = load i32, i32* %v2_13f1d, align 4
  ret i32 %v3_13f1d
}

define i32 @function_13f69() local_unnamed_addr {
dec_label_pc_13f69:
  %v0_13f69 = load i32, i32* @ebp, align 4
  %v1_13f69 = add i32 %v0_13f69, -12
  %v2_13f69 = inttoptr i32 %v1_13f69 to i32*
  %v3_13f69 = load i32, i32* %v2_13f69, align 4
  %v1_13f6c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_13f6c = icmp eq i32 %v1_13f6c, %v3_13f69
  br i1 %v3_13f6c, label %bb, label %dec_label_pc_13f75

bb:                                               ; preds = %dec_label_pc_13f69
  %v1_13f73 = call i32 @function_13fac()
  store i32 %v1_13f73, i32* @eax, align 4
  br label %dec_label_pc_13f75

dec_label_pc_13f75:                               ; preds = %bb, %dec_label_pc_13f69
  %v0_13f75 = call i32 @function_13fa7()
  ret i32 %v0_13f75
}

define i32 @function_13f78() local_unnamed_addr {
dec_label_pc_13f78:
  %eax.global-to-local = alloca i32, align 4
  %v0_13f78 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13f78
}

define i32 @function_13fa7() local_unnamed_addr {
dec_label_pc_13fa7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_13fac() local_unnamed_addr {
dec_label_pc_13fac:
  %v0_13fb2 = load i32, i32* @eax, align 4
  ret i32 %v0_13fb2
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13fb4:
  ret i32 %arg2
}

define i32 @function_13ff2() local_unnamed_addr {
dec_label_pc_13ff2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13ff2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13ff2 = sub i32 %v0_13ff2, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_13ff2, i32* %ecx.global-to-local, align 4
  %v0_13ff4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13ff4
}

define i32 @_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ff5:
  %v1_14012 = call i32 @unknown_2a75c(i32 %arg1)
  store i32 %v1_14012, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14023

bb:                                               ; preds = %dec_label_pc_13ff5
  %v1_14021 = call i32 @function_14028()
  br label %dec_label_pc_14023

dec_label_pc_14023:                               ; preds = %bb, %dec_label_pc_13ff5
  %v3_14021 = phi i32 [ %v1_14021, %bb ], [ %v1_14012, %dec_label_pc_13ff5 ]
  ret i32 %v3_14021
}

define i32 @function_14028() local_unnamed_addr {
dec_label_pc_14028:
  %v0_14029 = load i32, i32* @eax, align 4
  ret i32 %v0_14029
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPcS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1402a:
  %v1_14055 = call i32 @unknown_2810c(i32 %arg3)
  %v1_14062 = call i32 @unknown_2810c(i32 %arg2)
  %v1_1406f = call i32 @unknown_2810c(i32 %arg1)
  ret i32 %v1_1406f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_2810c, { 2, 1, 0 }
}

define i32 @function_14082(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14082:
  %v2_14082 = load i32, i32* @eax, align 4
  %v4_14082 = mul i32 %v2_14082, 2
  %v21_14082 = inttoptr i32 %v2_14082 to i32*
  store i32 %v4_14082, i32* %v21_14082, align 4
  %v0_14084 = load i32, i32* @ebp, align 4
  %v1_14084 = add i32 %v0_14084, -12
  %v2_14084 = inttoptr i32 %v1_14084 to i32*
  %v3_14084 = load i32, i32* %v2_14084, align 4
  %v1_14087 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14087 = icmp eq i32 %v1_14087, %v3_14084
  br i1 %v3_14087, label %bb, label %dec_label_pc_14082.dec_label_pc_14090_crit_edge

dec_label_pc_14082.dec_label_pc_14090_crit_edge:  ; preds = %dec_label_pc_14082
  %v2_1408e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_14090

bb:                                               ; preds = %dec_label_pc_14082
  %v1_1408e = call i32 @function_14095()
  br label %dec_label_pc_14090

dec_label_pc_14090:                               ; preds = %dec_label_pc_14082.dec_label_pc_14090_crit_edge, %bb
  %v2_1408e = phi i32 [ %v2_1408e.pre, %dec_label_pc_14082.dec_label_pc_14090_crit_edge ], [ %v1_1408e, %bb ]
  ret i32 %v2_1408e

; uselistorder directives
  uselistorder i32 %v2_14082, { 1, 0 }
  uselistorder label %dec_label_pc_14090, { 1, 0 }
}

define i32 @function_14095() local_unnamed_addr {
dec_label_pc_14095:
  %v0_1409b = load i32, i32* @eax, align 4
  ret i32 %v0_1409b
}

define i32 @_ZSt3maxIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1409c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_140bc = load i32, i32* %arg1, align 4
  %v1_140c1 = inttoptr i32 %arg2 to i32*
  %v2_140c1 = load i32, i32* %v1_140c1, align 4
  %v7_140c3 = icmp ult i32 %v2_140bc, %v2_140c1
  %v1_140c5 = icmp eq i1 %v7_140c3, false
  %storemerge = select i1 %v1_140c5, i32 %tmp102, i32 %arg2
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_140db

bb:                                               ; preds = %dec_label_pc_1409c
  %v1_140d9 = call i32 @function_140e0()
  br label %dec_label_pc_140db

dec_label_pc_140db:                               ; preds = %bb, %dec_label_pc_1409c
  %v2_140d9 = phi i32 [ %v1_140d9, %bb ], [ %storemerge, %dec_label_pc_1409c ]
  ret i32 %v2_140d9

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_140e0() local_unnamed_addr {
dec_label_pc_140e0:
  %v0_140e1 = load i32, i32* @eax, align 4
  ret i32 %v0_140e1
}

define i32 @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_140e2:
  %v1_140ff = call i32 @unknown_2a849(i32 %arg1)
  store i32 %v1_140ff, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14110

bb:                                               ; preds = %dec_label_pc_140e2
  %v1_1410e = call i32 @function_14115()
  br label %dec_label_pc_14110

dec_label_pc_14110:                               ; preds = %bb, %dec_label_pc_140e2
  %v2_1410e = phi i32 [ %v1_1410e, %bb ], [ %v1_140ff, %dec_label_pc_140e2 ]
  ret i32 %v2_1410e
}

define i32 @function_14115() local_unnamed_addr {
dec_label_pc_14115:
  %v0_14116 = load i32, i32* @eax, align 4
  ret i32 %v0_14116
}

define i32 @_ZSt4copyIPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14117:
  %v1_14147 = call i32 @unknown_2a8fe(i32 %arg3)
  %v1_14154 = call i32 @unknown_2a8fe(i32 %arg2)
  %v4_14170 = call i32 @unknown_2a933(i32 %arg1, i32 %v1_14154, i32 %v1_14147, i32 %arg4)
  ret i32 %v4_14170

; uselistorder directives
  uselistorder i32 (i32)* @unknown_2a8fe, { 1, 0 }
}

define i32 @function_14178(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14178:
  %v0_14178 = load i32, i32* @ebp, align 4
  %v1_14178 = add i32 %v0_14178, -28
  %v2_14178 = inttoptr i32 %v1_14178 to i32*
  %v3_14178 = load i32, i32* %v2_14178, align 4
  store i32 %v3_14178, i32* @eax, align 4
  %v1_1417b = add i32 %v0_14178, -12
  %v2_1417b = inttoptr i32 %v1_1417b to i32*
  %v3_1417b = load i32, i32* %v2_1417b, align 4
  %v1_1417e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1417e = icmp eq i32 %v1_1417e, %v3_1417b
  br i1 %v3_1417e, label %bb, label %dec_label_pc_14187

bb:                                               ; preds = %dec_label_pc_14178
  %v1_14185 = call i32 @function_1418c()
  br label %dec_label_pc_14187

dec_label_pc_14187:                               ; preds = %bb, %dec_label_pc_14178
  %v2_14185 = phi i32 [ %v1_14185, %bb ], [ %v3_14178, %dec_label_pc_14178 ]
  ret i32 %v2_14185
}

define i32 @function_1418c() local_unnamed_addr {
dec_label_pc_1418c:
  %v0_14190 = load i32, i32* @eax, align 4
  ret i32 %v0_14190
}

define i32 @_ZSt7advanceIPKcjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14193:
  ret i32 %arg2
}

define i32 @function_141b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_141b8:
  %v0_141b8 = load i32, i32* @ebp, align 4
  %v1_141b8 = add i32 %v0_141b8, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_141b8, i32* @ebp, align 4
  %v0_141bf = load i32, i32* @eax, align 4
  %v11_141bf = and i32 %v0_141bf, or (i32 zext (i8 ptrtoint (i8** @global_var_4.1177 to i8) to i32), i32 -256)
  %v1_141c4 = call i32 @unknown_2a6db(i32 %v11_141bf)
  %v0_141cc = load i32, i32* @ebx, align 4
  %v0_141d0 = load i32, i32* @ebp, align 4
  %v1_141d0 = add i32 %v0_141d0, -16
  %v2_141d0 = inttoptr i32 %v1_141d0 to i32*
  %v3_141d0 = load i32, i32* %v2_141d0, align 4
  %v1_141d7 = add i32 %v0_141d0, -28
  %v2_141d7 = inttoptr i32 %v1_141d7 to i32*
  %v3_141d7 = load i32, i32* %v2_141d7, align 4
  %sext = mul i32 %v0_141cc, 16777216
  %v3_141dd = sdiv i32 %sext, 16777216
  %v4_141dd = call i32 @unknown_2aa41(i32 %v3_141d7, i32 %v3_141d0, i32 %v3_141dd)
  %v0_141e2 = load i32, i32* @ebp, align 4
  %v1_141e2 = add i32 %v0_141e2, -12
  %v2_141e2 = inttoptr i32 %v1_141e2 to i32*
  %v3_141e2 = load i32, i32* %v2_141e2, align 4
  %v1_141e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_141e5 = xor i32 %v1_141e5, %v3_141e2
  %v3_141e5 = icmp eq i32 %v2_141e5, 0
  store i32 %v2_141e5, i32* @eax, align 4
  br i1 %v3_141e5, label %bb, label %dec_label_pc_141ee

bb:                                               ; preds = %dec_label_pc_141b8
  %v1_141ec = call i32 @function_141f3()
  br label %dec_label_pc_141ee

dec_label_pc_141ee:                               ; preds = %bb, %dec_label_pc_141b8
  %v2_141ec = phi i32 [ %v1_141ec, %bb ], [ %v2_141e5, %dec_label_pc_141b8 ]
  ret i32 %v2_141ec
}

define i32 @function_141f3() local_unnamed_addr {
dec_label_pc_141f3:
  %v4_141f3 = load i32, i32* @eax, align 4
  ret i32 %v4_141f3
}

define i32 @function_141f6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_141f6:
  %v0_141f7 = load i32, i32* @eax, align 4
  ret i32 %v0_141f7
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_141f8:
  %v1_14215 = call i32 @unknown_2aaec(i32 %arg1)
  store i32 %v1_14215, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14226

bb:                                               ; preds = %dec_label_pc_141f8
  %v1_14224 = call i32 @function_1422b()
  br label %dec_label_pc_14226

dec_label_pc_14226:                               ; preds = %bb, %dec_label_pc_141f8
  %v2_14224 = phi i32 [ %v1_14224, %bb ], [ %v1_14215, %dec_label_pc_141f8 ]
  ret i32 %v2_14224
}

define i32 @function_1422b() local_unnamed_addr {
dec_label_pc_1422b:
  %v0_1422c = load i32, i32* @eax, align 4
  ret i32 %v0_1422c
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1422d:
  ret i32 %arg2
}

define i32 @function_14240(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14240:
  %v0_14240 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14245 = load i32, i32* @ebp, align 4
  %v2_14245 = add i32 %v1_14245, -12
  %v3_14245 = inttoptr i32 %v2_14245 to i32*
  store i32 %v0_14240, i32* %v3_14245, align 4
  %v0_1424a = load i32, i32* @ebp, align 4
  %v1_1424a = add i32 %v0_1424a, -12
  %v2_1424a = inttoptr i32 %v1_1424a to i32*
  %v3_1424a = load i32, i32* %v2_1424a, align 4
  %v1_1424d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1424d = xor i32 %v1_1424d, %v3_1424a
  %v3_1424d = icmp eq i32 %v2_1424d, 0
  store i32 %v2_1424d, i32* @eax, align 4
  br i1 %v3_1424d, label %bb, label %dec_label_pc_14256

bb:                                               ; preds = %dec_label_pc_14240
  %v1_14254 = call i32 @function_1425b()
  br label %dec_label_pc_14256

dec_label_pc_14256:                               ; preds = %bb, %dec_label_pc_14240
  %v2_14254 = phi i32 [ %v1_14254, %bb ], [ %v2_1424d, %dec_label_pc_14240 ]
  ret i32 %v2_14254
}

define i32 @function_1425b() local_unnamed_addr {
dec_label_pc_1425b:
  %v0_1425c = load i32, i32* @eax, align 4
  ret i32 %v0_1425c
}

define i32 @_ZNSaIhEC1ERKS_() local_unnamed_addr {
dec_label_pc_1425e:
  %eax.global-to-local = alloca i32, align 4
  %v2_1425f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1425f
}

define i32 @function_14262(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14262:
  %v4_14263 = load i32, i32* @ecx, align 4
  %v0_1426b = load i32, i32* @ebp, align 4
  %v1_1426e = add i32 %v0_1426b, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_1426e, i32* @ebp, align 4
  %v1_1426f = sub i32 %v4_14263, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1426f, i32* @ecx, align 4
  %v0_14271 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14276 = add i32 %v0_1426b, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12))
  %v3_14276 = inttoptr i32 %v2_14276 to i32*
  store i32 %v0_14271, i32* %v3_14276, align 4
  %v0_1427b = load i32, i32* @ebp, align 4
  %v1_1427b = add i32 %v0_1427b, -32
  %v2_1427b = inttoptr i32 %v1_1427b to i32*
  %v3_1427b = load i32, i32* %v2_1427b, align 4
  %v1_14282 = add i32 %v0_1427b, -28
  %v2_14282 = inttoptr i32 %v1_14282 to i32*
  %v3_14282 = load i32, i32* %v2_14282, align 4
  %v2_14288 = call i32 @unknown_2abf4(i32 %v3_14282, i32 %v3_1427b)
  %v0_1428d = load i32, i32* @ebp, align 4
  %v1_1428d = add i32 %v0_1428d, -12
  %v2_1428d = inttoptr i32 %v1_1428d to i32*
  %v3_1428d = load i32, i32* %v2_1428d, align 4
  %v1_14290 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14290 = xor i32 %v1_14290, %v3_1428d
  %v3_14290 = icmp eq i32 %v2_14290, 0
  store i32 %v2_14290, i32* @eax, align 4
  br i1 %v3_14290, label %bb, label %dec_label_pc_14299

bb:                                               ; preds = %dec_label_pc_14262
  %v1_14297 = call i32 @function_1429e()
  br label %dec_label_pc_14299

dec_label_pc_14299:                               ; preds = %bb, %dec_label_pc_14262
  %v3_14297 = phi i32 [ %v1_14297, %bb ], [ %v2_14290, %dec_label_pc_14262 ]
  ret i32 %v3_14297
}

define i32 @function_1429e() local_unnamed_addr {
dec_label_pc_1429e:
  %v0_1429f = load i32, i32* @eax, align 4
  ret i32 %v0_1429f
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_142a0:
  ret i32 %arg2
}

define i32 @function_142b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_142b2:
  %v0_142b2 = load i32, i32* @ebp, align 4
  %v1_142b2 = add i32 %v0_142b2, 16
  %v2_142b2 = inttoptr i32 %v1_142b2 to i32*
  %v3_142b2 = load i32, i32* %v2_142b2, align 4
  %v2_142b5 = add i32 %v0_142b2, -36
  %v3_142b5 = inttoptr i32 %v2_142b5 to i32*
  store i32 %v3_142b2, i32* %v3_142b5, align 4
  %v0_142b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_142be = load i32, i32* @ebp, align 4
  %v2_142be = add i32 %v1_142be, -12
  %v3_142be = inttoptr i32 %v2_142be to i32*
  store i32 %v0_142b8, i32* %v3_142be, align 4
  %v0_142c3 = load i32, i32* @ebp, align 4
  %v1_142c3 = add i32 %v0_142c3, -28
  %v2_142c3 = inttoptr i32 %v1_142c3 to i32*
  %v3_142c3 = load i32, i32* %v2_142c3, align 4
  %v1_142c9 = call i32 @unknown_2ac66(i32 %v3_142c3)
  %v1_142ce = load i32, i32* @ebp, align 4
  %v2_142ce = add i32 %v1_142ce, -32
  %v3_142ce = inttoptr i32 %v2_142ce to i32*
  %v4_142ce = load i32, i32* %v3_142ce, align 4
  %v10_142ce = icmp ult i32 %v1_142c9, %v4_142ce
  %v1_142d1 = zext i1 %v10_142ce to i32
  %v3_142d1 = and i32 %v1_142c9, -256
  %v4_142d1 = or i32 %v1_142d1, %v3_142d1
  ret i32 %v4_142d1
}

define i32 @function_142b6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_142b6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_142e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_142e8:
  %v0_142e8 = load i32, i32* @ebp, align 4
  %v1_142e8 = add i32 %v0_142e8, -12
  %v2_142e8 = inttoptr i32 %v1_142e8 to i32*
  %v3_142e8 = load i32, i32* %v2_142e8, align 4
  %v1_142eb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_142eb = icmp eq i32 %v1_142eb, %v3_142e8
  br i1 %v3_142eb, label %bb, label %dec_label_pc_142e8.dec_label_pc_142f4_crit_edge

dec_label_pc_142e8.dec_label_pc_142f4_crit_edge:  ; preds = %dec_label_pc_142e8
  %v3_142f2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_142f4

bb:                                               ; preds = %dec_label_pc_142e8
  %v1_142f2 = call i32 @function_142f9()
  br label %dec_label_pc_142f4

dec_label_pc_142f4:                               ; preds = %dec_label_pc_142e8.dec_label_pc_142f4_crit_edge, %bb
  %v3_142f2 = phi i32 [ %v3_142f2.pre, %dec_label_pc_142e8.dec_label_pc_142f4_crit_edge ], [ %v1_142f2, %bb ]
  ret i32 %v3_142f2

; uselistorder directives
  uselistorder label %dec_label_pc_142f4, { 1, 0 }
}

define i32 @function_142f9() local_unnamed_addr {
dec_label_pc_142f9:
  %v0_142fa = load i32, i32* @eax, align 4
  ret i32 %v0_142fa
}

define i32 @_ZSt20uninitialized_fill_nIPhjhEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_142fb:
  %v3_14332 = call i32 @unknown_2acf0(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 0
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb0EE7_S_baseES7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1434a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_14382() local_unnamed_addr {
dec_label_pc_14382:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14382 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14382 = sub i32 %v0_14382, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_14382, i32* %ecx.global-to-local, align 4
  %v0_14384 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14384
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14387:
  ret i32 %arg1
}

define i32 @function_143a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_143a6:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i8*, align 4
  store i8* bitcast (i8** @global_var_1.1176 to i8*), i8** %stack_var_-4, align 4
  %v0_143a8 = load i32, i32* @ebx, align 4
  %v1_143a8 = add i32 %v0_143a8, 862319701
  %v2_143a8 = inttoptr i32 %v1_143a8 to i8*
  %v3_143a8 = load i8, i8* %v2_143a8, align 1
  %v4_143a8 = load i32, i32* @ecx, align 4
  %v5_143a8 = trunc i32 %v4_143a8 to i8
  %v6_143a8 = add i8 %v5_143a8, %v3_143a8
  %v11_143a8 = icmp ult i8 %v6_143a8, %v3_143a8
  store i1 %v11_143a8, i1* %cf.global-to-local, align 1
  store i8 %v6_143a8, i8* %v2_143a8, align 1
  %v0_143ae = load i32, i32* @eax, align 4
  %v1_143ae = load i1, i1* %cf.global-to-local, align 1
  %v2_143ae = zext i1 %v1_143ae to i32
  %v3_143ae = add i32 %v0_143ae, 20
  %v4_143ae = add i32 %v3_143ae, %v2_143ae
  %v14_143ae = icmp eq i32 %v4_143ae, 0
  %v22_143ae = icmp ule i32 %v4_143ae, %v0_143ae
  %v23_143ae = icmp ugt i32 %v0_143ae, -21
  %v24_143ae = select i1 %v1_143ae, i1 %v22_143ae, i1 %v23_143ae
  store i1 %v24_143ae, i1* %cf.global-to-local, align 1
  store i32 %v4_143ae, i32* @eax, align 4
  br i1 %v14_143ae, label %bb, label %dec_label_pc_143b5

bb:                                               ; preds = %dec_label_pc_143a6
  %v1_143b3 = load i8*, i8** %stack_var_-4, align 4
  %v2_143b3 = ptrtoint i8* %v1_143b3 to i32
  %v3_143b3 = call i32 @function_143ba(i32 %v2_143b3)
  br label %dec_label_pc_143b5

dec_label_pc_143b5:                               ; preds = %bb, %dec_label_pc_143a6
  %v4_143b3 = phi i32 [ %v3_143b3, %bb ], [ %v4_143ae, %dec_label_pc_143a6 ]
  ret i32 %v4_143b3

; uselistorder directives
  uselistorder i32 %v4_143ae, { 0, 2, 1, 3 }
  uselistorder i8 %v3_143a8, { 1, 0 }
  uselistorder i8** %stack_var_-4, { 1, 0 }
  uselistorder i32 862319701, { 1, 0 }
}

define i32 @function_143ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_143ba:
  %v0_143bb = load i32, i32* @eax, align 4
  ret i32 %v0_143bb
}

define i32 @_ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_143bc:
  ret i32 0
}

define i32 @function_143e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_143e4:
  %v0_143e4 = load i32, i32* @ebp, align 4
  %v1_143e5 = load i32, i32* @ecx, align 4
  %v2_143e5 = add i32 %v1_143e5, -1962400700
  %v3_143e5 = inttoptr i32 %v2_143e5 to double*
  %v4_143e5 = load double, double* %v3_143e5, align 4
  %v5_143e5 = fpext double %v4_143e5 to x86_fp80
  %v6_143e5 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_143e5 = fmul x86_fp80 %v5_143e5, %v6_143e5
  store x86_fp80 %v7_143e5, x86_fp80* @st0, align 4
  %v1_143eb = add i32 %v0_143e4, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_143eb, i32* @ebp, align 4
  %v1_143ec = sub i32 %v1_143e5, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_143ec, i32* @ecx, align 4
  %v1_143f1 = add i32 %v0_143e4, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 -28)
  %v2_143f1 = inttoptr i32 %v1_143f1 to i32*
  %v3_143f1 = load i32, i32* %v2_143f1, align 4
  %v1_143f7 = call i32 @unknown_2ae37(i32 %v3_143f1)
  store i32 %v1_143f7, i32* @eax, align 4
  %v0_143fc = load i32, i32* @ebp, align 4
  %v1_143fc = add i32 %v0_143fc, -12
  %v2_143fc = inttoptr i32 %v1_143fc to i32*
  %v3_143fc = load i32, i32* %v2_143fc, align 4
  %v1_143ff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_143ff = xor i32 %v1_143ff, %v3_143fc
  %v3_143ff = icmp eq i32 %v2_143ff, 0
  store i32 %v2_143ff, i32* @edx, align 4
  br i1 %v3_143ff, label %bb, label %dec_label_pc_14408

bb:                                               ; preds = %dec_label_pc_143e4
  %v1_14406 = call i32 @function_1440d()
  br label %dec_label_pc_14408

dec_label_pc_14408:                               ; preds = %bb, %dec_label_pc_143e4
  %v3_14406 = phi i32 [ %v1_14406, %bb ], [ %v1_143f7, %dec_label_pc_143e4 ]
  ret i32 %v3_14406
}

define i32 @function_1440d() local_unnamed_addr {
dec_label_pc_1440d:
  %v0_1440e = load i32, i32* @eax, align 4
  ret i32 %v0_1440e
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1440f:
  ret i32 0
}

define i32 @function_1442e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1442e:
  %v0_1442f = load i32, i32* @eax, align 4
  %v1_1442f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1442f = xor i32 %v1_1442f, %v0_1442f
  %v3_1442f = icmp eq i32 %v2_1442f, 0
  store i32 %v2_1442f, i32* @eax, align 4
  br i1 %v3_1442f, label %bb, label %dec_label_pc_14438

bb:                                               ; preds = %dec_label_pc_1442e
  %v1_14436 = call i32 @function_1443d()
  br label %dec_label_pc_14438

dec_label_pc_14438:                               ; preds = %bb, %dec_label_pc_1442e
  %v2_14436 = phi i32 [ %v1_14436, %bb ], [ %v2_1442f, %dec_label_pc_1442e ]
  ret i32 %v2_14436
}

define i32 @function_1443d() local_unnamed_addr {
dec_label_pc_1443d:
  %v0_1443e = load i32, i32* @eax, align 4
  ret i32 %v0_1443e
}

define i32 @_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1443f:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14465

bb:                                               ; preds = %dec_label_pc_1443f
  %v2_14463 = call i32 @function_1446a(i32 %arg1)
  br label %dec_label_pc_14465

dec_label_pc_14465:                               ; preds = %bb, %dec_label_pc_1443f
  %v3_14463 = phi i32 [ %v2_14463, %bb ], [ %arg1, %dec_label_pc_1443f ]
  ret i32 %v3_14463
}

define i32 @function_1446a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1446a:
  %v0_1446b = load i32, i32* @eax, align 4
  ret i32 %v0_1446b
}

define i32 @_ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1446c:
  %v1_14489 = call i32 @unknown_288ab(i32 %arg1)
  store i32 %v1_14489, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1449a

bb:                                               ; preds = %dec_label_pc_1446c
  %v1_14498 = call i32 @function_1449f()
  br label %dec_label_pc_1449a

dec_label_pc_1449a:                               ; preds = %bb, %dec_label_pc_1446c
  %v2_14498 = phi i32 [ %v1_14498, %bb ], [ %v1_14489, %dec_label_pc_1446c ]
  ret i32 %v2_14498
}

define i32 @function_1449f() local_unnamed_addr {
dec_label_pc_1449f:
  %v0_144a0 = load i32, i32* @eax, align 4
  ret i32 %v0_144a0
}

define i32 @_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_144a1:
  %v3_144dc = call i32 @unknown_2af1c(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_144dc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_144ed

bb:                                               ; preds = %dec_label_pc_144a1
  %v1_144eb = call i32 @function_144f2()
  br label %dec_label_pc_144ed

dec_label_pc_144ed:                               ; preds = %bb, %dec_label_pc_144a1
  %v2_144eb = phi i32 [ %v1_144eb, %bb ], [ %v3_144dc, %dec_label_pc_144a1 ]
  ret i32 %v2_144eb
}

define i32 @function_144f2() local_unnamed_addr {
dec_label_pc_144f2:
  %v0_144f3 = load i32, i32* @eax, align 4
  ret i32 %v0_144f3
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_() local_unnamed_addr {
dec_label_pc_144f4:
  %eax.global-to-local = alloca i32, align 4
  %v17_144f7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_144f7
}

define i32 @function_144fa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_144fa:
  %v0_144fa = load i32, i32* @ebp, align 4
  %v1_144fa = add i32 %v0_144fa, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_144fa = inttoptr i32 %v1_144fa to i32*
  %v3_144fa = load i32, i32* %v2_144fa, align 4
  %v2_144fd = add i32 %v0_144fa, -28
  %v3_144fd = inttoptr i32 %v2_144fd to i32*
  store i32 %v3_144fa, i32* %v3_144fd, align 4
  %v0_14500 = load i32, i32* @ebp, align 4
  %v1_14500 = add i32 %v0_14500, 12
  %v2_14500 = inttoptr i32 %v1_14500 to i32*
  %v3_14500 = load i32, i32* %v2_14500, align 4
  %v2_14503 = add i32 %v0_14500, -32
  %v3_14503 = inttoptr i32 %v2_14503 to i32*
  store i32 %v3_14500, i32* %v3_14503, align 4
  %v0_14506 = load i32, i32* @ebp, align 4
  %v1_14506 = add i32 %v0_14506, 16
  %v2_14506 = inttoptr i32 %v1_14506 to i32*
  %v3_14506 = load i32, i32* %v2_14506, align 4
  %v2_14509 = add i32 %v0_14506, -36
  %v3_14509 = inttoptr i32 %v2_14509 to i32*
  store i32 %v3_14506, i32* %v3_14509, align 4
  %v0_1450c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14512 = load i32, i32* @ebp, align 4
  %v2_14512 = add i32 %v1_14512, -12
  %v3_14512 = inttoptr i32 %v2_14512 to i32*
  store i32 %v0_1450c, i32* %v3_14512, align 4
  %v0_14517 = load i32, i32* @ebp, align 4
  %v1_14517 = add i32 %v0_14517, -36
  %v2_14517 = inttoptr i32 %v1_14517 to i32*
  %v3_14517 = load i32, i32* %v2_14517, align 4
  %v1_1451e = add i32 %v0_14517, -32
  %v2_1451e = inttoptr i32 %v1_1451e to i32*
  %v3_1451e = load i32, i32* %v2_1451e, align 4
  %v1_14525 = add i32 %v0_14517, -28
  %v2_14525 = inttoptr i32 %v1_14525 to i32*
  %v3_14525 = load i32, i32* %v2_14525, align 4
  %v3_1452b = call i32 @unknown_2225f(i32 %v3_14525, i32 %v3_1451e, i32 %v3_14517)
  store i32 %v3_1452b, i32* @eax, align 4
  %v0_14530 = load i32, i32* @ebp, align 4
  %v1_14530 = add i32 %v0_14530, -12
  %v2_14530 = inttoptr i32 %v1_14530 to i32*
  %v3_14530 = load i32, i32* %v2_14530, align 4
  %v1_14533 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14533 = icmp eq i32 %v1_14533, %v3_14530
  br i1 %v3_14533, label %bb, label %dec_label_pc_1453c

bb:                                               ; preds = %dec_label_pc_144fa
  %v1_1453a = call i32 @function_14541()
  br label %dec_label_pc_1453c

dec_label_pc_1453c:                               ; preds = %bb, %dec_label_pc_144fa
  %v2_1453a = phi i32 [ %v1_1453a, %bb ], [ %v3_1452b, %dec_label_pc_144fa ]
  ret i32 %v2_1453a
}

define i32 @function_14541() local_unnamed_addr {
dec_label_pc_14541:
  %v0_14542 = load i32, i32* @eax, align 4
  ret i32 %v0_14542
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14543:
  ret i32 %arg2
}

define i32 @function_14556() local_unnamed_addr {
dec_label_pc_14556:
  %eax.global-to-local = alloca i32, align 4
  %v15_14556 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_14556
}

define i32 @function_14586(i32 %arg1) local_unnamed_addr {
dec_label_pc_14586:
  %v0_14586 = load i32, i32* @edx, align 4
  %v1_14586 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14586 = icmp eq i32 %v1_14586, %v0_14586
  br i1 %v3_14586, label %bb, label %dec_label_pc_14586.dec_label_pc_1458f_crit_edge

dec_label_pc_14586.dec_label_pc_1458f_crit_edge:  ; preds = %dec_label_pc_14586
  %v2_1458d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1458f

bb:                                               ; preds = %dec_label_pc_14586
  %v1_1458d = call i32 @function_14594()
  br label %dec_label_pc_1458f

dec_label_pc_1458f:                               ; preds = %dec_label_pc_14586.dec_label_pc_1458f_crit_edge, %bb
  %v2_1458d = phi i32 [ %v2_1458d.pre, %dec_label_pc_14586.dec_label_pc_1458f_crit_edge ], [ %v1_1458d, %bb ]
  ret i32 %v2_1458d

; uselistorder directives
  uselistorder label %dec_label_pc_1458f, { 1, 0 }
}

define i32 @function_14594() local_unnamed_addr {
dec_label_pc_14594:
  %v0_14595 = load i32, i32* @eax, align 4
  ret i32 %v0_14595
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14596:
  ret i32 %arg1
}

define i32 @function_1459f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1459f:
  %v0_1459f = load i32, i32* @eax, align 4
  %v1_1459f = load i32, i32* @ebp, align 4
  %v2_1459f = add i32 %v1_1459f, -28
  %v3_1459f = inttoptr i32 %v2_1459f to i32*
  store i32 %v0_1459f, i32* %v3_1459f, align 4
  %v0_145a2 = load i32, i32* @ebp, align 4
  %v1_145a2 = add i32 %v0_145a2, 12
  %v2_145a2 = inttoptr i32 %v1_145a2 to i32*
  %v3_145a2 = load i32, i32* %v2_145a2, align 4
  %v2_145a5 = add i32 %v0_145a2, -32
  %v3_145a5 = inttoptr i32 %v2_145a5 to i32*
  store i32 %v3_145a2, i32* %v3_145a5, align 4
  %v0_145a8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_145ae = load i32, i32* @ebp, align 4
  %v2_145ae = add i32 %v1_145ae, -12
  %v3_145ae = inttoptr i32 %v2_145ae to i32*
  store i32 %v0_145a8, i32* %v3_145ae, align 4
  %v0_145b3 = load i32, i32* @ebp, align 4
  %v1_145b3 = add i32 %v0_145b3, -28
  %v2_145b3 = inttoptr i32 %v1_145b3 to i32*
  %v3_145b3 = load i32, i32* %v2_145b3, align 4
  store i32 %v3_145b3, i32* @eax, align 4
  %v1_145b9 = call i32 @function_17fc8(i32 %v3_145b3)
  %v0_145be = load i32, i32* @ebp, align 4
  %v1_145be = add i32 %v0_145be, -28
  %v2_145be = inttoptr i32 %v1_145be to i32*
  %v3_145be = load i32, i32* %v2_145be, align 4
  ret i32 %v3_145be
}

define i32 @function_145c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_145c4:
  %eax.global-to-local = alloca i32, align 4
  %v0_145c4 = load i32, i32* @eax, align 4
  %v1_145c4 = and i32 %v0_145c4, -65281
  %v2_145c4 = or i32 %v1_145c4, 256
  store i32 %v2_145c4, i32* %eax.global-to-local, align 4
  %v0_145c6 = load i32, i32* @ebx, align 4
  %v1_145c6 = add i32 %v0_145c6, 1435231301
  %v2_145c6 = inttoptr i32 %v1_145c6 to i8*
  %v3_145c6 = load i8, i8* %v2_145c6, align 1
  %v4_145c6 = load i32, i32* @ecx, align 4
  %v5_145c6 = trunc i32 %v4_145c6 to i8
  %v6_145c6 = add i8 %v5_145c6, %v3_145c6
  store i8 %v6_145c6, i8* %v2_145c6, align 1
  %v0_145cc = load i32, i32* @ecx, align 4
  %v1_145cc = sub i32 %v0_145cc, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_145cc, i32* @ecx, align 4
  %v0_145ce = load i32, i32* %eax.global-to-local, align 4
  %v11_145cf = or i32 %v0_145ce, 139
  store i32 %v11_145cf, i32* %eax.global-to-local, align 4
  %v0_145d1 = load i32, i32* @ebp, align 4
  %v1_145d1 = add i32 %v0_145d1, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_145d1, i32* @ebp, align 4
  %v1_145d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_145d3 = xor i32 %v1_145d3, %v11_145cf
  %v3_145d3 = icmp eq i32 %v2_145d3, 0
  store i32 %v2_145d3, i32* @eax, align 4
  br i1 %v3_145d3, label %bb, label %dec_label_pc_145dc

bb:                                               ; preds = %dec_label_pc_145c4
  %v2_145da = call i32 @function_145e1(i32 %v0_145ce)
  store i32 %v2_145da, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_145dc

dec_label_pc_145dc:                               ; preds = %bb, %dec_label_pc_145c4
  %v4_145da = phi i32 [ %v2_145da, %bb ], [ %v2_145d3, %dec_label_pc_145c4 ]
  ret i32 %v4_145da

; uselistorder directives
  uselistorder i32 %v0_145ce, { 1, 0 }
  uselistorder i32 139, { 4, 0, 2, 3, 1 }
  uselistorder i32 1435231301, { 2, 3, 1, 0 }
}

define i32 @function_145e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_145e1:
  %v0_145e2 = load i32, i32* @eax, align 4
  ret i32 %v0_145e2
}

define i32 @_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_145e3:
  %tmp99 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp99
}

define i32 @function_1460e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1460e:
  %v0_14612 = load i32, i32* @ebp, align 4
  %v1_14612 = add i32 %v0_14612, -12
  %v2_14612 = inttoptr i32 %v1_14612 to i32*
  %v3_14612 = load i32, i32* %v2_14612, align 4
  %v1_14615 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14615 = xor i32 %v1_14615, %v3_14612
  %v3_14615 = icmp eq i32 %v2_14615, 0
  store i32 %v2_14615, i32* @eax, align 4
  br i1 %v3_14615, label %bb, label %dec_label_pc_1461e

bb:                                               ; preds = %dec_label_pc_1460e
  %v1_1461c = call i32 @function_14623()
  br label %dec_label_pc_1461e

dec_label_pc_1461e:                               ; preds = %bb, %dec_label_pc_1460e
  %v2_1461c = phi i32 [ %v1_1461c, %bb ], [ %v2_14615, %dec_label_pc_1460e ]
  ret i32 %v2_1461c
}

define i32 @function_14623() local_unnamed_addr {
dec_label_pc_14623:
  %v0_14624 = load i32, i32* @eax, align 4
  ret i32 %v0_14624
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14625:
  %v3_1465c = call i32 @unknown_28e3d(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1465c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1466d

bb:                                               ; preds = %dec_label_pc_14625
  %v1_1466b = call i32 @function_14672()
  br label %dec_label_pc_1466d

dec_label_pc_1466d:                               ; preds = %bb, %dec_label_pc_14625
  %v2_1466b = phi i32 [ %v1_1466b, %bb ], [ %v3_1465c, %dec_label_pc_14625 ]
  ret i32 %v2_1466b
}

define i32 @function_14672() local_unnamed_addr {
dec_label_pc_14672:
  %v0_14673 = load i32, i32* @eax, align 4
  ret i32 %v0_14673
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb0EE7_S_baseES6_() local_unnamed_addr {
dec_label_pc_14674:
  %eax.global-to-local = alloca i32, align 4
  %v17_14677 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_14677
}

define i32 @function_1467c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1467c:
  %v0_1467c = load i32, i32* @ecx, align 4
  %v1_1467c = add i32 %v0_1467c, 1166795845
  %v2_1467c = inttoptr i32 %v1_1467c to i8*
  %v3_1467c = load i8, i8* %v2_1467c, align 1
  %v5_1467c = trunc i32 %v0_1467c to i8
  %v6_1467c = or i8 %v3_1467c, %v5_1467c
  store i8 %v6_1467c, i8* %v2_1467c, align 1
  %v0_14684 = load i32, i32* @ebp, align 4
  %v1_14684 = add i32 %v0_14684, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_14684, i32* @ebp, align 4
  %v0_14687 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_14687

; uselistorder directives
  uselistorder i32 1166795845, { 1, 0 }
}

define i32 @function_1468e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1468e:
  %v0_14691 = load i32, i32* @ebp, align 4
  %v1_14691 = add i32 %v0_14691, -28
  %v2_14691 = inttoptr i32 %v1_14691 to i32*
  %v3_14691 = load i32, i32* %v2_14691, align 4
  %v1_14694 = add i32 %v0_14691, -32
  %v2_14694 = inttoptr i32 %v1_14694 to i32*
  %v3_14694 = load i32, i32* %v2_14694, align 4
  %v2_14697 = inttoptr i32 %v3_14691 to i32*
  store i32 %v3_14694, i32* %v2_14697, align 4
  %v0_14699 = load i32, i32* @ebp, align 4
  %v1_14699 = add i32 %v0_14699, -28
  %v2_14699 = inttoptr i32 %v1_14699 to i32*
  %v3_14699 = load i32, i32* %v2_14699, align 4
  store i32 %v3_14699, i32* @eax, align 4
  %v1_1469c = add i32 %v0_14699, -12
  %v2_1469c = inttoptr i32 %v1_1469c to i32*
  %v3_1469c = load i32, i32* %v2_1469c, align 4
  %v1_1469f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1469f = icmp eq i32 %v1_1469f, %v3_1469c
  br i1 %v3_1469f, label %bb, label %dec_label_pc_146a8

bb:                                               ; preds = %dec_label_pc_1468e
  %v1_146a6 = call i32 @function_146ad()
  br label %dec_label_pc_146a8

dec_label_pc_146a8:                               ; preds = %bb, %dec_label_pc_1468e
  %v2_146a6 = phi i32 [ %v1_146a6, %bb ], [ %v3_14699, %dec_label_pc_1468e ]
  ret i32 %v2_146a6
}

define i32 @function_146ad() local_unnamed_addr {
dec_label_pc_146ad:
  %v0_146ae = load i32, i32* @eax, align 4
  ret i32 %v0_146ae
}

define i32 @_ZNSt11__iter_swapILb1EE9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES8_EEvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_146b1:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_146cf = ptrtoint i32* %stack_var_-36 to i32
  %v1_146d5 = call i32 @unknown_2288b(i32 %v2_146cf)
  %v2_146dc = ptrtoint i32* %stack_var_-32 to i32
  %v1_146e2 = call i32 @unknown_2288b(i32 %v2_146dc)
  ret i32 %v1_146e2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_2288b, { 1, 0 }
}

define i32 @function_14703() local_unnamed_addr {
dec_label_pc_14703:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_14703 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14703 = add i32 %v0_14703, 1566258372
  %v2_14703 = inttoptr i32 %v1_14703 to i32*
  %v3_14703 = load i32, i32* %v2_14703, align 4
  %v4_14703 = add i32 %v3_14703, 1
  store i32 %v4_14703, i32* %v2_14703, align 4
  %v0_14709 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14709
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1470a:
  %v1_14735 = call i32 @unknown_28b76(i32 %arg3)
  %v1_14742 = call i32 @unknown_28b76(i32 %arg2)
  %v1_1474f = call i32 @unknown_28b76(i32 %arg1)
  %v3_1475f = call i32 @unknown_2b296(i32 %v1_1474f, i32 %v1_14742, i32 %v1_14735)
  store i32 %v3_1475f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14770

bb:                                               ; preds = %dec_label_pc_1470a
  %v1_1476e = call i32 @function_14775()
  br label %dec_label_pc_14770

dec_label_pc_14770:                               ; preds = %bb, %dec_label_pc_1470a
  %v2_1476e = phi i32 [ %v1_1476e, %bb ], [ %v3_1475f, %dec_label_pc_1470a ]
  ret i32 %v2_1476e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_28b76, { 2, 1, 0 }
}

define i32 @function_14775() local_unnamed_addr {
dec_label_pc_14775:
  %v0_1477b = load i32, i32* @eax, align 4
  ret i32 %v0_1477b
}

define i32 @_ZNKSt6vectorIhSaIhEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1477c:
  %v1_14799 = call i32 @unknown_229c0(i32 %arg1)
  %v1_147a1 = call i32 @unknown_2b142(i32 %v1_14799)
  ret i32 %v1_147a1
}

define i32 @function_147b6() local_unnamed_addr {
dec_label_pc_147b6:
  %v0_147b6 = load i32, i32* @ecx, align 4
  %v1_147b6 = sub i32 %v0_147b6, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_147b6, i32* @ecx, align 4
  %v0_147b8 = load i32, i32* @eax, align 4
  ret i32 %v0_147b8
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_147b9:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_147d7 = ptrtoint i32* %stack_var_-37 to i32
  %v2_147da = ptrtoint i32* %stack_var_-32 to i32
  %v2_147e4 = call i32 @unknown_2b398(i32 %v2_147d7, i32 %v2_147da)
  %v0_147ec = load i32, i32* %ebx.global-to-local, align 4
  %v3_147f7 = load i32, i32* %stack_var_-32, align 4
  %v3_147fd = call i32 @unknown_2b3cd(i32 %v3_147f7, i32 %arg2, i32 %v0_147ec)
  store i32 %v3_147fd, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1480e

bb:                                               ; preds = %dec_label_pc_147b9
  %v1_1480c = call i32 @function_14813()
  br label %dec_label_pc_1480e

dec_label_pc_1480e:                               ; preds = %bb, %dec_label_pc_147b9
  %v2_1480c = phi i32 [ %v1_1480c, %bb ], [ %v3_147fd, %dec_label_pc_147b9 ]
  ret i32 %v2_1480c
}

define i32 @function_14810(i32 %arg1) local_unnamed_addr {
dec_label_pc_14810:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14813() local_unnamed_addr {
dec_label_pc_14813:
  %v0_14817 = load i32, i32* @eax, align 4
  ret i32 %v0_14817
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_() local_unnamed_addr {
dec_label_pc_14818:
  %eax.global-to-local = alloca i32, align 4
  %v17_1481b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1481b
}

define i32 @function_1481e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1481e:
  %v0_1481e = load i32, i32* @ebp, align 4
  %v1_1481e = add i32 %v0_1481e, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_1481e = inttoptr i32 %v1_1481e to i32*
  %v3_1481e = load i32, i32* %v2_1481e, align 4
  ret i32 %v3_1481e
}

define i32 @function_14822(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14822:
  %v0_14822 = load i32, i32* @ebp, align 4
  %v1_14822 = add i32 %v0_14822, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_14822, i32* @ebp, align 4
  %v15_14822 = load i32, i32* @eax, align 4
  ret i32 %v15_14822
}

define i32 @function_14823(i32 %arg1) local_unnamed_addr {
dec_label_pc_14823:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_14825 = load i32, i32* @ebp, align 4
  %v0_14826 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_14826 = or i32 %v0_14826, 137
  store i32 %v11_14826, i32* @eax, align 4
  %v1_14828 = add i32 %v0_14825, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v9_14828 = icmp eq i32 %v1_14828, 0
  store i32 %v1_14828, i32* %ebp.global-to-local, align 4
  %v0_14829 = load i32, i32* @ecx, align 4
  %v1_14829 = sub i32 %v0_14829, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_14829, i32* @ecx, align 4
  %v2_14829 = icmp eq i32 %v1_14829, 0
  %v4_14829 = or i1 %v9_14828, %v2_14829
  br i1 %v4_14829, label %dec_label_pc_1482b, label %bb

bb:                                               ; preds = %dec_label_pc_14823
  %v6_14829 = call i32 @function_147b6()
  store i32 %v6_14829, i32* @eax, align 4
  %v0_1482b.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_1482c.pre = load i32, i32* @ecx, align 4
  %v6_1482c.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_1482b

dec_label_pc_1482b:                               ; preds = %dec_label_pc_14823, %bb
  %v6_1482c = phi i1 [ false, %dec_label_pc_14823 ], [ %v6_1482c.pre, %bb ]
  %v30_1482c = phi i32 [ %v1_14829, %dec_label_pc_14823 ], [ %v0_1482c.pre, %bb ]
  %v0_1482b = phi i32 [ %v1_14828, %dec_label_pc_14823 ], [ %v0_1482b.pre, %bb ]
  %v1_1482b = add i32 %v0_1482b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1482b, i32* @ebp, align 4
  %v1_1482c = add i32 %v30_1482c, -1587159995
  %v2_1482c = inttoptr i32 %v1_1482c to i8*
  %v3_1482c = load i8, i8* %v2_1482c, align 1
  %v5_1482c = trunc i32 %v30_1482c to i8
  %v7_1482c = zext i1 %v6_1482c to i8
  %v8_1482c = add i8 %v3_1482c, %v5_1482c
  %v9_1482c = add i8 %v8_1482c, %v7_1482c
  %v27_1482c = icmp ule i8 %v9_1482c, %v3_1482c
  %v28_1482c = icmp ult i8 %v8_1482c, %v3_1482c
  %v29_1482c = select i1 %v6_1482c, i1 %v27_1482c, i1 %v28_1482c
  store i1 %v29_1482c, i1* %cf.global-to-local, align 1
  store i8 %v9_1482c, i8* %v2_1482c, align 1
  %v0_14832 = load i32, i32* @eax, align 4
  %v1_14832 = trunc i32 %v0_14832 to i8
  %v2_14832 = load i1, i1* %cf.global-to-local, align 1
  %v3_14832 = zext i1 %v2_14832 to i8
  %v4_14832 = add i8 %v3_14832, %v1_14832
  %v19_14832 = icmp ule i8 %v4_14832, %v1_14832
  %v21_14832 = icmp eq i1 %v2_14832, %v19_14832
  store i1 %v21_14832, i1* %cf.global-to-local, align 1
  %v22_14832 = zext i8 %v4_14832 to i32
  %v24_14832 = and i32 %v0_14832, -256
  %v25_14832 = or i32 %v22_14832, %v24_14832
  store i32 %v25_14832, i32* %eax.global-to-local, align 4
  %v1_14834 = inttoptr i32 %v25_14832 to i8*
  %v2_14834 = load i8, i8* %v1_14834, align 1
  %v5_14834 = add i8 %v2_14834, %v4_14832
  store i8 %v5_14834, i8* %v1_14834, align 1
  %v0_14836 = load i32, i32* %eax.global-to-local, align 4
  %v1_14836 = load i32, i32* @ebp, align 4
  %v2_14836 = add i32 %v1_14836, -12
  %v3_14836 = inttoptr i32 %v2_14836 to i32*
  store i32 %v0_14836, i32* %v3_14836, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_1483b = load i32, i32* @ebp, align 4
  %v1_1483b = add i32 %v0_1483b, -16
  store i32 %v1_1483b, i32* %eax.global-to-local, align 4
  %v1_14848 = call i32 @unknown_25f29(i32 %v1_1483b)
  %v0_1484d = load i32, i32* @esp, align 4
  %v5_1484d = icmp ult i32 %v0_1484d, 4
  store i1 %v5_1484d, i1* %cf.global-to-local, align 1
  %v0_14850 = load i32, i32* @ebp, align 4
  %v1_14850 = add i32 %v0_14850, -20
  store i32 %v1_14850, i32* %eax.global-to-local, align 4
  ret i32 %v1_14850

; uselistorder directives
  uselistorder i8 %v4_14832, { 0, 2, 1 }
  uselistorder i8 %v1_14832, { 1, 0 }
  uselistorder i8 %v9_1482c, { 1, 0 }
  uselistorder i8 %v8_1482c, { 1, 0 }
  uselistorder i8 %v3_1482c, { 1, 2, 0 }
  uselistorder i32 %v30_1482c, { 1, 0 }
  uselistorder i1 %v6_1482c, { 1, 0 }
  uselistorder label %dec_label_pc_1482b, { 1, 0 }
}

define i32 @function_14858(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14858:
  %v0_14858 = load i32, i32* @eax, align 4
  %v11_14858 = and i32 %v0_14858, or (i32 zext (i8 ptrtoint (i8** @global_var_4.1177 to i8) to i32), i32 -256)
  %v1_1485d = call i32 @unknown_25f29(i32 %v11_14858)
  %v0_14865 = load i32, i32* @ebp, align 4
  %v1_14865 = add i32 %v0_14865, -36
  %v2_14865 = inttoptr i32 %v1_14865 to i32*
  %v3_14865 = load i32, i32* %v2_14865, align 4
  %v1_1486c = add i32 %v0_14865, -16
  %v2_1486c = inttoptr i32 %v1_1486c to i32*
  %v3_1486c = load i32, i32* %v2_1486c, align 4
  %v1_14873 = add i32 %v0_14865, -20
  %v2_14873 = inttoptr i32 %v1_14873 to i32*
  %v3_14873 = load i32, i32* %v2_14873, align 4
  %v3_14879 = call i32 @unknown_2b475(i32 %v3_14873, i32 %v3_1486c, i32 %v3_14865)
  store i32 %v3_14879, i32* @eax, align 4
  %v0_1487e = load i32, i32* @ebp, align 4
  %v1_1487e = add i32 %v0_1487e, -12
  %v2_1487e = inttoptr i32 %v1_1487e to i32*
  %v3_1487e = load i32, i32* %v2_1487e, align 4
  %v1_14881 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14881 = icmp eq i32 %v1_14881, %v3_1487e
  br i1 %v3_14881, label %bb, label %dec_label_pc_1488a

bb:                                               ; preds = %dec_label_pc_14858
  %v1_14888 = call i32 @function_1488f()
  br label %dec_label_pc_1488a

dec_label_pc_1488a:                               ; preds = %bb, %dec_label_pc_14858
  %v3_14888 = phi i32 [ %v1_14888, %bb ], [ %v3_14879, %dec_label_pc_14858 ]
  ret i32 %v3_14888

; uselistorder directives
  uselistorder i32 (i32)* @unknown_25f29, { 1, 0 }
}

define i32 @function_1488f() local_unnamed_addr {
dec_label_pc_1488f:
  %v0_14890 = load i32, i32* @eax, align 4
  ret i32 %v0_14890
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14891:
  %v0_1489d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1489d
}

define i32 @function_148a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_148a6:
  %v0_148a8 = load i32, i32* @ebp, align 4
  %v1_148a8 = add i32 %v0_148a8, -28
  %v1_148ae = call i32 @unknown_22eaf(i32 %v1_148a8)
  %v1_148b3 = inttoptr i32 %v1_148ae to i32*
  %v2_148b3 = load i32, i32* %v1_148b3, align 4
  store i32 %v2_148b3, i32* @eax, align 4
  %v0_148b5 = load i32, i32* @ebp, align 4
  %v1_148b5 = add i32 %v0_148b5, -12
  %v2_148b5 = inttoptr i32 %v1_148b5 to i32*
  %v3_148b5 = load i32, i32* %v2_148b5, align 4
  %v1_148b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_148b8 = icmp eq i32 %v1_148b8, %v3_148b5
  br i1 %v3_148b8, label %bb, label %dec_label_pc_148c1

bb:                                               ; preds = %dec_label_pc_148a6
  %v1_148bf = call i32 @function_148c6()
  br label %dec_label_pc_148c1

dec_label_pc_148c1:                               ; preds = %bb, %dec_label_pc_148a6
  %v2_148bf = phi i32 [ %v1_148bf, %bb ], [ %v2_148b3, %dec_label_pc_148a6 ]
  ret i32 %v2_148bf
}

define i32 @function_148c6() local_unnamed_addr {
dec_label_pc_148c6:
  %v0_148c7 = load i32, i32* @eax, align 4
  ret i32 %v0_148c7
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_148c8:
  ret i32 %arg3
}

define i32 @function_148df(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_148df:
  %eax.global-to-local = alloca i32, align 4
  %v0_148e2 = load i32, i32* @eax, align 4
  %v1_148e2 = trunc i32 %v0_148e2 to i8
  %v2_148e2 = load i1, i1* @cf, align 1
  %v3_148e2 = zext i1 %v2_148e2 to i8
  %v4_148e2 = add i8 %v3_148e2, %v1_148e2
  %v22_148e2 = zext i8 %v4_148e2 to i32
  %v24_148e2 = and i32 %v0_148e2, -256
  %v25_148e2 = or i32 %v22_148e2, %v24_148e2
  store i32 %v25_148e2, i32* %eax.global-to-local, align 4
  %v1_148e4 = inttoptr i32 %v25_148e2 to i8*
  %v2_148e4 = load i8, i8* %v1_148e4, align 1
  %v5_148e4 = add i8 %v2_148e4, %v4_148e2
  store i8 %v5_148e4, i8* %v1_148e4, align 1
  %v0_148e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_148e6 = load i32, i32* @ebp, align 4
  %v2_148e6 = add i32 %v1_148e6, -12
  %v3_148e6 = inttoptr i32 %v2_148e6 to i32*
  store i32 %v0_148e6, i32* %v3_148e6, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_148eb = load i32, i32* @ebp, align 4
  %v1_148eb = add i32 %v0_148eb, -32
  %v2_148eb = inttoptr i32 %v1_148eb to i32*
  %v3_148eb = load i32, i32* %v2_148eb, align 4
  store i32 %v3_148eb, i32* %eax.global-to-local, align 4
  ret i32 %v3_148eb
}

define i32 @function_14906() local_unnamed_addr {
dec_label_pc_14906:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14906 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14906 = sub i32 %v0_14906, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_14906, i32* %ecx.global-to-local, align 4
  %v0_14908 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14908
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14909:
  %v15_14942105 = icmp eq i32 %arg1, %arg2
  %v1_14945106 = icmp eq i1 %v15_14942105, false
  %v5_14948110 = icmp eq i1 %v1_14945106, false
  %v1_1494a111 = icmp eq i1 %v5_14948110, false
  br i1 %v1_1494a111, label %dec_label_pc_14928, label %dec_label_pc_1494c

dec_label_pc_14928:                               ; preds = %dec_label_pc_14909, %dec_label_pc_14928
  %stack_var_-32.0112 = phi i32 [ %v4_1493b, %dec_label_pc_14928 ], [ %arg1, %dec_label_pc_14909 ]
  %v1_1492e = call i32 @unknown_2b5d8(i32 %stack_var_-32.0112)
  %v1_14936 = call i32 @unknown_2b605(i32 %v1_1492e)
  %v4_1493b = add i32 %stack_var_-32.0112, 20
  %v15_14942 = icmp eq i32 %v4_1493b, %arg2
  %v1_14945 = icmp eq i1 %v15_14942, false
  %v5_14948 = icmp eq i1 %v1_14945, false
  %v1_1494a = icmp eq i1 %v5_14948, false
  br i1 %v1_1494a, label %dec_label_pc_14928, label %dec_label_pc_1494c

dec_label_pc_1494c:                               ; preds = %dec_label_pc_14928, %dec_label_pc_14909
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14958

bb:                                               ; preds = %dec_label_pc_1494c
  %v1_14956 = call i32 @function_1495d()
  br label %dec_label_pc_14958

dec_label_pc_14958:                               ; preds = %bb, %dec_label_pc_1494c
  %v2_14956 = phi i32 [ %v1_14956, %bb ], [ 0, %dec_label_pc_1494c ]
  ret i32 %v2_14956

; uselistorder directives
  uselistorder i32 %v4_1493b, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14928, { 1, 0 }
}

define i32 @function_1495d() local_unnamed_addr {
dec_label_pc_1495d:
  %v0_1495e = load i32, i32* @eax, align 4
  ret i32 %v0_1495e
}

define i32 @_Z15GetSizeOfVarIntIyEjT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1495f:
  ret i32 0
}

define i32 @function_149b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_149b2:
  %v0_149b2 = load i32, i32* @eax, align 4
  ret i32 %v0_149b2
}

define i32 @function_149b4() local_unnamed_addr {
dec_label_pc_149b4:
  %v0_149b5 = load i32, i32* @ebp, align 4
  %v1_149b5 = add i32 %v0_149b5, -16
  %v2_149b5 = inttoptr i32 %v1_149b5 to i32*
  %v3_149b5 = load i32, i32* %v2_149b5, align 4
  store i32 %v3_149b5, i32* @eax, align 4
  %v1_149b8 = add i32 %v0_149b5, -12
  %v2_149b8 = inttoptr i32 %v1_149b8 to i32*
  %v3_149b8 = load i32, i32* %v2_149b8, align 4
  %v1_149bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_149bb = icmp eq i32 %v1_149bb, %v3_149b8
  br i1 %v3_149bb, label %bb, label %dec_label_pc_149c4

bb:                                               ; preds = %dec_label_pc_149b4
  %v1_149c2 = call i32 @function_149c9()
  br label %dec_label_pc_149c4

dec_label_pc_149c4:                               ; preds = %bb, %dec_label_pc_149b4
  %v2_149c2 = phi i32 [ %v1_149c2, %bb ], [ %v3_149b5, %dec_label_pc_149b4 ]
  ret i32 %v2_149c2
}

define i32 @function_149c9() local_unnamed_addr {
dec_label_pc_149c9:
  %v0_149ca = load i32, i32* @eax, align 4
  ret i32 %v0_149ca
}

define i32 @_ZNSaI6CTxOutEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_149cc:
  ret i32 %arg2
}

define i32 @function_149f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_149f0:
  %v0_149f0 = load i32, i32* @ebp, align 4
  %v1_149f0 = add i32 %v0_149f0, -28
  %v2_149f0 = inttoptr i32 %v1_149f0 to i32*
  %v3_149f0 = load i32, i32* %v2_149f0, align 4
  %v1_149f6 = call i32 @unknown_2b6fe(i32 %v3_149f0)
  %v0_149fb = load i32, i32* @ebp, align 4
  %v1_149fb = add i32 %v0_149fb, -12
  %v2_149fb = inttoptr i32 %v1_149fb to i32*
  %v3_149fb = load i32, i32* %v2_149fb, align 4
  %v1_149fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_149fe = xor i32 %v1_149fe, %v3_149fb
  %v3_149fe = icmp eq i32 %v2_149fe, 0
  store i32 %v2_149fe, i32* @eax, align 4
  br i1 %v3_149fe, label %bb, label %dec_label_pc_14a07

bb:                                               ; preds = %dec_label_pc_149f0
  %v1_14a05 = call i32 @function_14a0c()
  br label %dec_label_pc_14a07

dec_label_pc_14a07:                               ; preds = %bb, %dec_label_pc_149f0
  %v2_14a05 = phi i32 [ %v1_14a05, %bb ], [ %v2_149fe, %dec_label_pc_149f0 ]
  ret i32 %v2_14a05
}

define i32 @function_14a0c() local_unnamed_addr {
dec_label_pc_14a0c:
  %v0_14a0d = load i32, i32* @eax, align 4
  ret i32 %v0_14a0d
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a0e:
  ret i32 %arg1
}

define i32 @function_14a3a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a3a:
  %v2_14a3a = load i32, i32* @eax, align 4
  %v4_14a3a = mul i32 %v2_14a3a, 2
  %v21_14a3a = inttoptr i32 %v2_14a3a to i32*
  store i32 %v4_14a3a, i32* %v21_14a3a, align 4
  %v0_14a3c = load i32, i32* @eax, align 4
  %v1_14a3c = load i32, i32* @ebp, align 4
  %v2_14a3c = add i32 %v1_14a3c, -32
  %v3_14a3c = inttoptr i32 %v2_14a3c to i32*
  %v4_14a3c = load i32, i32* %v3_14a3c, align 4
  %v10_14a3c = icmp ult i32 %v0_14a3c, %v4_14a3c
  %v1_14a3f = zext i1 %v10_14a3c to i32
  %v3_14a3f = and i32 %v0_14a3c, -256
  %v4_14a3f = or i32 %v1_14a3f, %v3_14a3f
  %v5_14a42 = icmp eq i1 %v10_14a3c, false
  br i1 %v5_14a42, label %bb, label %dec_label_pc_14a46

bb:                                               ; preds = %dec_label_pc_14a3a
  %v1_14a44 = call i32 @function_14a4b()
  br label %dec_label_pc_14a46

dec_label_pc_14a46:                               ; preds = %bb, %dec_label_pc_14a3a
  %v2_14a44 = phi i32 [ %v1_14a44, %bb ], [ %v4_14a3f, %dec_label_pc_14a3a ]
  ret i32 %v2_14a44

; uselistorder directives
  uselistorder i1 %v10_14a3c, { 1, 0 }
  uselistorder i32 %v2_14a3a, { 1, 0 }
}

define i32 @function_14a4b() local_unnamed_addr {
dec_label_pc_14a4b:
  %v0_14a4b = load i32, i32* @ebp, align 4
  %v1_14a4b = add i32 %v0_14a4b, -32
  %v2_14a4b = inttoptr i32 %v1_14a4b to i32*
  %v3_14a4b = load i32, i32* %v2_14a4b, align 4
  %v2_14a55 = mul i32 %v3_14a4b, 20
  store i32 %v2_14a55, i32* @eax, align 4
  %v1_14a60 = add i32 %v0_14a4b, -12
  %v2_14a60 = inttoptr i32 %v1_14a60 to i32*
  %v3_14a60 = load i32, i32* %v2_14a60, align 4
  %v1_14a63 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14a63 = icmp eq i32 %v1_14a63, %v3_14a60
  br i1 %v3_14a63, label %bb, label %dec_label_pc_14a6c

bb:                                               ; preds = %dec_label_pc_14a4b
  %v2_14a6a = call i32 @function_14a71(i32 %v2_14a55)
  br label %dec_label_pc_14a6c

dec_label_pc_14a6c:                               ; preds = %bb, %dec_label_pc_14a4b
  %v3_14a6a = phi i32 [ %v2_14a6a, %bb ], [ %v2_14a55, %dec_label_pc_14a4b ]
  ret i32 %v3_14a6a

; uselistorder directives
  uselistorder i32 %v2_14a55, { 2, 1, 0 }
}

define i32 @function_14a71(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a71:
  %v0_14a72 = load i32, i32* @eax, align 4
  ret i32 %v0_14a72
}

define i32 @_ZSt20uninitialized_fill_nIP6CTxOutjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a73:
  %v0_14a8b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14aaa = call i32 @unknown_2b87f(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v0_14a8b
}

define i32 @function_14ab4(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ab4:
  %v0_14ab4 = load i32, i32* @eax, align 4
  %v1_14ab4 = add i32 %v0_14ab4, 20
  %v10_14ab4 = icmp eq i32 %v1_14ab4, 0
  store i32 %v1_14ab4, i32* @eax, align 4
  br i1 %v10_14ab4, label %bb, label %dec_label_pc_14abb

bb:                                               ; preds = %dec_label_pc_14ab4
  %v1_14ab9 = call i32 @function_14ac0()
  br label %dec_label_pc_14abb

dec_label_pc_14abb:                               ; preds = %bb, %dec_label_pc_14ab4
  %v2_14ab9 = phi i32 [ %v1_14ab9, %bb ], [ %v1_14ab4, %dec_label_pc_14ab4 ]
  ret i32 %v2_14ab9
}

define i32 @function_14ac0() local_unnamed_addr {
dec_label_pc_14ac0:
  %v0_14ac1 = load i32, i32* @eax, align 4
  ret i32 %v0_14ac1
}

define i32 @_ZSt4fillIPhhEvT_S1_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14ac2:
  %v1_14aec = call i32 @unknown_28f2e(i32 %arg2)
  %v1_14af9 = call i32 @unknown_28f2e(i32 %arg1)
  %v3_14b0c = call i32 @unknown_2b970(i32 %v1_14af9, i32 %v1_14aec, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14b1d

bb:                                               ; preds = %dec_label_pc_14ac2
  %v1_14b1b = call i32 @function_14b22()
  br label %dec_label_pc_14b1d

dec_label_pc_14b1d:                               ; preds = %bb, %dec_label_pc_14ac2
  %v2_14b1b = phi i32 [ %v1_14b1b, %bb ], [ 0, %dec_label_pc_14ac2 ]
  ret i32 %v2_14b1b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_28f2e, { 1, 0 }
}

define i32 @function_14b22() local_unnamed_addr {
dec_label_pc_14b22:
  %v0_14b27 = load i32, i32* @eax, align 4
  ret i32 %v0_14b27
}

define i32 @_Z12SerReadWriteI11CDataStreamjEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14b28:
  ret i32 %arg4
}

define i32 @function_14b46(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b46:
  %v0_14b46 = load i32, i32* @ebp, align 4
  %v1_14b46 = add i32 %v0_14b46, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_14b46 = inttoptr i32 %v1_14b46 to i8*
  %v3_14b46 = load i8, i8* %v2_14b46, align 1
  %v3_14b4a = add i32 %v0_14b46, -41
  %v4_14b4a = inttoptr i32 %v3_14b4a to i8*
  store i8 %v3_14b46, i8* %v4_14b4a, align 1
  %v0_14b4d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14b53 = load i32, i32* @ebp, align 4
  %v2_14b53 = add i32 %v1_14b53, -12
  %v3_14b53 = inttoptr i32 %v2_14b53 to i32*
  store i32 %v0_14b4d, i32* %v3_14b53, align 4
  %v0_14b58 = load i32, i32* @ebp, align 4
  %v1_14b58 = add i32 %v0_14b58, -32
  %v2_14b58 = inttoptr i32 %v1_14b58 to i32*
  %v3_14b58 = load i32, i32* %v2_14b58, align 4
  %v1_14b5b = inttoptr i32 %v3_14b58 to i32*
  %v2_14b5b = load i32, i32* %v1_14b5b, align 4
  %v1_14b5d = add i32 %v0_14b58, -40
  %v2_14b5d = inttoptr i32 %v1_14b5d to i32*
  %v3_14b5d = load i32, i32* %v2_14b5d, align 4
  %v1_14b64 = add i32 %v0_14b58, -36
  %v2_14b64 = inttoptr i32 %v1_14b64 to i32*
  %v3_14b64 = load i32, i32* %v2_14b64, align 4
  %v1_14b6f = add i32 %v0_14b58, -28
  %v2_14b6f = inttoptr i32 %v1_14b6f to i32*
  %v3_14b6f = load i32, i32* %v2_14b6f, align 4
  %v4_14b75 = call i32 @unknown_2ba96(i32 %v3_14b6f, i32 %v2_14b5b, i32 %v3_14b64, i32 %v3_14b5d)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_14b58, { 0, 2, 1, 3 }
}

define i32 @function_14b84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b84:
  %v0_14b84 = load i32, i32* @eax, align 4
  %v1_14b84 = load i1, i1* @cf, align 1
  %v2_14b84 = zext i1 %v1_14b84 to i32
  %v3_14b84 = add i32 %v0_14b84, 20
  %v4_14b84 = add i32 %v3_14b84, %v2_14b84
  %v14_14b84 = icmp eq i32 %v4_14b84, 0
  store i32 %v4_14b84, i32* @eax, align 4
  br i1 %v14_14b84, label %bb, label %dec_label_pc_14b8b

bb:                                               ; preds = %dec_label_pc_14b84
  %v1_14b89 = call i32 @function_14b90()
  br label %dec_label_pc_14b8b

dec_label_pc_14b8b:                               ; preds = %bb, %dec_label_pc_14b84
  %v2_14b89 = phi i32 [ %v1_14b89, %bb ], [ %v4_14b84, %dec_label_pc_14b84 ]
  ret i32 %v2_14b89
}

define i32 @function_14b90() local_unnamed_addr {
dec_label_pc_14b90:
  %v0_14b91 = load i32, i32* @eax, align 4
  ret i32 %v0_14b91
}

define i32 @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14b92:
  ret i32 0
}

define i32 @function_14bce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14bce:
  %v0_14bce = load i32, i32* @ebp, align 4
  %v1_14bce = sub i32 %v0_14bce, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_14bce, i32* @ebp, align 4
  %v1_14bd0 = add i32 %v1_14bce, -60
  %v2_14bd0 = inttoptr i32 %v1_14bd0 to i32*
  %v3_14bd0 = load i32, i32* %v2_14bd0, align 4
  %v1_14bd3 = add i32 %v1_14bce, -56
  %v2_14bd3 = inttoptr i32 %v1_14bd3 to i32*
  %v3_14bd3 = load i32, i32* %v2_14bd3, align 4
  %v0_14bde = load i32, i32* @ecx, align 4
  %v3_14be1 = call i32 @unknown_2bb56(i32 %v0_14bde, i32 %v3_14bd0, i32 %v3_14bd3)
  %v0_14be9 = load i32, i32* @ebp, align 4
  %v1_14be9 = add i32 %v0_14be9, -28
  %v1_14bec = add i32 %v0_14be9, -52
  %v2_14bec = inttoptr i32 %v1_14bec to i32*
  %v3_14bec = load i32, i32* %v2_14bec, align 4
  %v1_14bef = add i32 %v0_14be9, -48
  %v2_14bef = inttoptr i32 %v1_14bef to i32*
  %v3_14bef = load i32, i32* %v2_14bef, align 4
  %v3_14bfd = call i32 @unknown_2bb56(i32 %v1_14be9, i32 %v3_14bec, i32 %v3_14bef)
  %v0_14c05 = load i32, i32* @ebp, align 4
  %v1_14c24 = add i32 %v0_14c05, -28
  %v2_14c24 = inttoptr i32 %v1_14c24 to i32*
  %v3_14c24 = load i32, i32* %v2_14c24, align 4
  ret i32 %v3_14c24

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_2bb56, { 1, 0 }
}

define i32 @function_14c01(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14c01:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14c28(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c28:
  %v0_14c29 = call i32 @unknown_42590b7()
  %v0_14c2e = load i32, i32* @edx, align 4
  %v0_14c32 = load i32, i32* @ecx, align 4
  %v2_14c35 = call i32 @unknown_2bbad(i32 %v0_14c32, i32 %v0_14c2e)
  %v0_14c3d = load i32, i32* @ebp, align 4
  %v1_14c3d = add i32 %v0_14c3d, -44
  %v2_14c3d = inttoptr i32 %v1_14c3d to i32*
  %v3_14c3d = load i32, i32* %v2_14c3d, align 4
  store i32 %v3_14c3d, i32* @eax, align 4
  %v1_14c40 = add i32 %v0_14c3d, -12
  %v2_14c40 = inttoptr i32 %v1_14c40 to i32*
  %v3_14c40 = load i32, i32* %v2_14c40, align 4
  %v1_14c43 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14c43 = xor i32 %v1_14c43, %v3_14c40
  %v3_14c43 = icmp eq i32 %v2_14c43, 0
  store i32 %v2_14c43, i32* @edx, align 4
  br i1 %v3_14c43, label %bb, label %dec_label_pc_14c4c

bb:                                               ; preds = %dec_label_pc_14c28
  %v1_14c4a = call i32 @function_14c51()
  br label %dec_label_pc_14c4c

dec_label_pc_14c4c:                               ; preds = %bb, %dec_label_pc_14c28
  %v2_14c4a = phi i32 [ %v1_14c4a, %bb ], [ %v3_14c3d, %dec_label_pc_14c28 ]
  ret i32 %v2_14c4a
}

define i32 @function_14c51() local_unnamed_addr {
dec_label_pc_14c51:
  %v0_14c52 = load i32, i32* @eax, align 4
  ret i32 %v0_14c52
}

define i32 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14c56:
  %v1_14c80 = call i32 @unknown_2bd50(i32 %arg1)
  %v1_14c8d = call i32 @unknown_1ee08(i32 %arg1)
  %v2_14c94 = sub i32 %v1_14c80, %v1_14c8d
  %v7_14c99 = icmp ult i32 %v2_14c94, %arg2
  %v5_14c9e = icmp eq i1 %v7_14c99, false
  br i1 %v5_14c9e, label %bb, label %dec_label_pc_14ca2

bb:                                               ; preds = %dec_label_pc_14c56
  %v1_14ca0 = call i32 @function_14cad()
  br label %dec_label_pc_14ca2

dec_label_pc_14ca2:                               ; preds = %bb, %dec_label_pc_14c56
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14cad() local_unnamed_addr {
dec_label_pc_14cad:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14cad = load i32, i32* @ebp, align 4
  %v1_14cad = add i32 %v0_14cad, -28
  %v2_14cad = inttoptr i32 %v1_14cad to i32*
  %v3_14cad = load i32, i32* %v2_14cad, align 4
  %v1_14cb3 = call i32 @unknown_1ee08(i32 %v3_14cad)
  store i32 %v1_14cb3, i32* %ebx.global-to-local, align 4
  %v0_14cba = load i32, i32* @ebp, align 4
  %v1_14cba = add i32 %v0_14cba, -28
  %v2_14cba = inttoptr i32 %v1_14cba to i32*
  %v3_14cba = load i32, i32* %v2_14cba, align 4
  %v1_14cc0 = call i32 @unknown_1ee08(i32 %v3_14cba)
  %v1_14cc5 = load i32, i32* @ebp, align 4
  %v2_14cc5 = add i32 %v1_14cc5, -20
  %v3_14cc5 = inttoptr i32 %v2_14cc5 to i32*
  store i32 %v1_14cc0, i32* %v3_14cc5, align 4
  %v0_14cc8 = load i32, i32* @ebp, align 4
  %v1_14cc8 = add i32 %v0_14cc8, -32
  %v1_14ccf = add i32 %v0_14cc8, -20
  %v2_14cd5 = call i32 @unknown_28cf2(i32 %v1_14ccf, i32 %v1_14cc8)
  %v1_14cda = inttoptr i32 %v2_14cd5 to i32*
  %v2_14cda = load i32, i32* %v1_14cda, align 4
  %v1_14cdc = load i32, i32* %ebx.global-to-local, align 4
  %v2_14cdc = add i32 %v1_14cdc, %v2_14cda
  %v1_14cde = load i32, i32* @ebp, align 4
  %v2_14cde = add i32 %v1_14cde, -16
  %v3_14cde = inttoptr i32 %v2_14cde to i32*
  store i32 %v2_14cdc, i32* %v3_14cde, align 4
  %v0_14ce1 = load i32, i32* @ebp, align 4
  %v1_14ce1 = add i32 %v0_14ce1, -28
  %v2_14ce1 = inttoptr i32 %v1_14ce1 to i32*
  %v3_14ce1 = load i32, i32* %v2_14ce1, align 4
  %v1_14ce7 = call i32 @unknown_1ee08(i32 %v3_14ce1)
  %v1_14cec = load i32, i32* @ebp, align 4
  %v1_14cf1 = add i32 %v1_14cec, -28
  %v2_14cf1 = inttoptr i32 %v1_14cf1 to i32*
  %v3_14cf1 = load i32, i32* %v2_14cf1, align 4
  ret i32 %v3_14cf1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_1ee08, { 3, 2, 1, 0 }
}

define i32 @function_14cfa(i32 %arg1) local_unnamed_addr {
dec_label_pc_14cfa:
  %v2_14cfa = load i32, i32* @eax, align 4
  %v4_14cfa = mul i32 %v2_14cfa, 2
  %v21_14cfa = inttoptr i32 %v2_14cfa to i32*
  store i32 %v4_14cfa, i32* %v21_14cfa, align 4
  %v0_14cfc = load i32, i32* @eax, align 4
  %v1_14cfc = load i32, i32* @ebp, align 4
  %v2_14cfc = add i32 %v1_14cfc, -16
  %v3_14cfc = inttoptr i32 %v2_14cfc to i32*
  %v4_14cfc = load i32, i32* %v3_14cfc, align 4
  %v10_14cfc = icmp ult i32 %v0_14cfc, %v4_14cfc
  %v1_14cff = icmp eq i1 %v10_14cfc, false
  br i1 %v1_14cff, label %dec_label_pc_14d11, label %dec_label_pc_14d01

dec_label_pc_14d01:                               ; preds = %dec_label_pc_14cfa
  %v1_14d01 = add i32 %v1_14cfc, -28
  %v2_14d01 = inttoptr i32 %v1_14d01 to i32*
  %v3_14d01 = load i32, i32* %v2_14d01, align 4
  %v1_14d07 = call i32 @unknown_2bd50(i32 %v3_14d01)
  %v0_14d11.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_14d11

dec_label_pc_14d11:                               ; preds = %dec_label_pc_14cfa, %dec_label_pc_14d01
  %v0_14d11 = phi i32 [ %v0_14d11.pre, %dec_label_pc_14d01 ], [ %v1_14cfc, %dec_label_pc_14cfa ]
  %storemerge = phi i32 [ %v1_14d07, %dec_label_pc_14d01 ], [ %v4_14cfc, %dec_label_pc_14cfa ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_14d11 = add i32 %v0_14d11, -12
  %v2_14d11 = inttoptr i32 %v1_14d11 to i32*
  %v3_14d11 = load i32, i32* %v2_14d11, align 4
  %v1_14d14 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14d14 = icmp eq i32 %v1_14d14, %v3_14d11
  br i1 %v3_14d14, label %bb, label %dec_label_pc_14d1d

bb:                                               ; preds = %dec_label_pc_14d11
  %v1_14d1b = call i32 @function_14d22()
  br label %dec_label_pc_14d1d

dec_label_pc_14d1d:                               ; preds = %bb, %dec_label_pc_14d11
  %v2_14d1b = phi i32 [ %v1_14d1b, %bb ], [ %storemerge, %dec_label_pc_14d11 ]
  ret i32 %v2_14d1b

; uselistorder directives
  uselistorder i32 %v2_14cfa, { 1, 0 }
  uselistorder label %dec_label_pc_14d11, { 1, 0 }
}

define i32 @function_14d22() local_unnamed_addr {
dec_label_pc_14d22:
  %v0_14d27 = load i32, i32* @eax, align 4
  ret i32 %v0_14d27
}

define i32 @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14d28:
  ret i32 %arg2
}

define i32 @function_14d48(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14d48:
  %v0_14d48 = load i32, i32* @eax, align 4
  %v1_14d48 = add i32 %v0_14d48, 31
  %v2_14d4d = udiv i32 %v1_14d48, 32
  %v0_14d50 = load i32, i32* @ebp, align 4
  %v1_14d50 = add i32 %v0_14d50, -28
  %v2_14d50 = inttoptr i32 %v1_14d50 to i32*
  %v3_14d50 = load i32, i32* %v2_14d50, align 4
  %v3_14d62 = call i32 @unknown_2be80(i32 %v3_14d50, i32 %v2_14d4d, i32 0)
  %v0_14d67 = load i32, i32* @ebp, align 4
  %v1_14d67 = add i32 %v0_14d67, -12
  %v2_14d67 = inttoptr i32 %v1_14d67 to i32*
  %v3_14d67 = load i32, i32* %v2_14d67, align 4
  %v1_14d6a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14d6a = xor i32 %v1_14d6a, %v3_14d67
  store i32 %v2_14d6a, i32* @edx, align 4
  ret i32 %v3_14d62
}

define i32 @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14d7a:
  ret i32 %arg7
}

define i32 @function_14daa(i32 %arg1) local_unnamed_addr {
dec_label_pc_14daa:
  %v0_14daa = load i32, i32* @ebp, align 4
  %v1_14daa = add i32 %v0_14daa, 36
  %v2_14daa = inttoptr i32 %v1_14daa to i32*
  %v3_14daa = load i32, i32* %v2_14daa, align 4
  %v2_14dad = add i32 %v0_14daa, -68
  %v3_14dad = inttoptr i32 %v2_14dad to i32*
  store i32 %v3_14daa, i32* %v3_14dad, align 4
  %v0_14db0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14db6 = load i32, i32* @ebp, align 4
  %v2_14db6 = add i32 %v1_14db6, -12
  %v3_14db6 = inttoptr i32 %v2_14db6 to i32*
  store i32 %v0_14db0, i32* %v3_14db6, align 4
  %v0_14dbb = load i32, i32* @ebp, align 4
  %v1_14dbb = add i32 %v0_14dbb, -72
  %v2_14dbb = inttoptr i32 %v1_14dbb to i32*
  %v3_14dbb = load i32, i32* %v2_14dbb, align 4
  %v1_14dbe = add i32 %v0_14dbb, -64
  %v2_14dbe = inttoptr i32 %v1_14dbe to i32*
  %v3_14dbe = load i32, i32* %v2_14dbe, align 4
  %v1_14dc1 = add i32 %v0_14dbb, -56
  %v2_14dc1 = inttoptr i32 %v1_14dc1 to i32*
  %v3_14dc1 = load i32, i32* %v2_14dc1, align 4
  %v3_14dcf = call i32 @unknown_2bf30(i32 %v3_14dc1, i32 %v3_14dbe, i32 %v3_14dbb)
  %v1_14dd4 = load i32, i32* @ebp, align 4
  %v2_14dd4 = add i32 %v1_14dd4, -16
  %v3_14dd4 = inttoptr i32 %v2_14dd4 to i32*
  store i32 %v3_14dcf, i32* %v3_14dd4, align 4
  %v0_14ddf = load i32, i32* @ebp, align 4
  %v1_14ddf = add i32 %v0_14ddf, -16
  %v2_14ddf = inttoptr i32 %v1_14ddf to i32*
  %v3_14ddf = load i32, i32* %v2_14ddf, align 4
  ret i32 %v3_14ddf
}

define i32 @function_14de6(i32 %arg1) local_unnamed_addr {
dec_label_pc_14de6:
  %v0_14de6 = load i32, i32* @ebp, align 4
  %v1_14df1 = add i32 %v0_14de6, -64
  %v2_14df1 = inttoptr i32 %v1_14df1 to i32*
  %v3_14df1 = load i32, i32* %v2_14df1, align 4
  %v1_14e00 = add i32 %v0_14de6, -32
  store i32 %v1_14e00, i32* @eax, align 4
  %v3_14e06 = call i32 @function_172fe(i32 %v1_14e00, i32 %v3_14df1, i32 0)
  %v0_14e0b = load i32, i32* @ebp, align 4
  %v1_14e0e = add i32 %v0_14e0b, -24
  %v2_14e0e = inttoptr i32 %v1_14e0e to i32*
  %v3_14e0e = load i32, i32* %v2_14e0e, align 4
  ret i32 %v3_14e0e
}

define i32 @function_14e13(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14e13:
  %v0_14e14 = load i32, i32* @eax, align 4
  %v0_14e18 = load i32, i32* @edx, align 4
  %v0_14e1c = load i32, i32* @ebp, align 4
  %v1_14e1c = add i32 %v0_14e1c, -64
  %v2_14e1c = inttoptr i32 %v1_14e1c to i32*
  %v3_14e1c = load i32, i32* %v2_14e1c, align 4
  %v1_14e1f = add i32 %v0_14e1c, -60
  %v2_14e1f = inttoptr i32 %v1_14e1f to i32*
  %v3_14e1f = load i32, i32* %v2_14e1f, align 4
  %v1_14e2a = add i32 %v0_14e1c, -32
  %v2_14e2a = inttoptr i32 %v1_14e2a to i32*
  %v3_14e2a = load i32, i32* %v2_14e2a, align 4
  %v1_14e2d = add i32 %v0_14e1c, -28
  %v2_14e2d = inttoptr i32 %v1_14e2d to i32*
  %v3_14e2d = load i32, i32* %v2_14e2d, align 4
  %v0_14e38 = load i32, i32* @ecx, align 4
  %v7_14e3b = call i32 @unknown_2bf96(i32 %v0_14e38, i32 %v3_14e2a, i32 %v3_14e2d, i32 %v3_14e1c, i32 %v3_14e1f, i32 %v0_14e14, i32 %v0_14e18)
  %v0_14e43 = load i32, i32* @ebp, align 4
  %v1_14e43 = add i32 %v0_14e43, -44
  %v2_14e43 = inttoptr i32 %v1_14e43 to i32*
  %v3_14e43 = load i32, i32* %v2_14e43, align 4
  store i32 %v3_14e43, i32* @eax, align 4
  %v1_14e46 = add i32 %v0_14e43, -12
  %v2_14e46 = inttoptr i32 %v1_14e46 to i32*
  %v3_14e46 = load i32, i32* %v2_14e46, align 4
  %v1_14e49 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14e49 = icmp eq i32 %v1_14e49, %v3_14e46
  br i1 %v3_14e49, label %bb, label %dec_label_pc_14e52

bb:                                               ; preds = %dec_label_pc_14e13
  %v1_14e50 = call i32 @function_14e57()
  br label %dec_label_pc_14e52

dec_label_pc_14e52:                               ; preds = %bb, %dec_label_pc_14e13
  %v2_14e50 = phi i32 [ %v1_14e50, %bb ], [ %v3_14e43, %dec_label_pc_14e13 ]
  ret i32 %v2_14e50

; uselistorder directives
  uselistorder i32 %v0_14e1c, { 1, 0, 2, 3 }
}

define i32 @function_14e57() local_unnamed_addr {
dec_label_pc_14e57:
  %v0_14e58 = load i32, i32* @eax, align 4
  ret i32 %v0_14e58
}

define i32 @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14e5b:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_14e96 = ptrtoint i32* %stack_var_-24 to i32
  %v3_14eaa = call i32 @unknown_2be1f(i32 %v2_14e96, i32 %arg4, i32 %arg5)
  %v2_14eb2 = ptrtoint i32* %stack_var_-32 to i32
  %v3_14ec6 = call i32 @unknown_2be1f(i32 %v2_14eb2, i32 %arg2, i32 %arg3)
  %v3_14edf = load i32, i32* %stack_var_-24, align 4
  %v3_14eed = load i32, i32* %stack_var_-32, align 4
  %v7_14efe = call i32 @unknown_2c13a(i32 %arg1, i32 %v3_14eed, i32 %tmp98, i32 %v3_14edf, i32 %tmp99, i32 %arg6, i32 %arg7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14f15

bb:                                               ; preds = %dec_label_pc_14e5b
  %v1_14f13 = call i32 @function_14f1a()
  br label %dec_label_pc_14f15

dec_label_pc_14f15:                               ; preds = %bb, %dec_label_pc_14e5b
  %v3_14f13 = phi i32 [ %v1_14f13, %bb ], [ %arg1, %dec_label_pc_14e5b ]
  ret i32 %v3_14f13

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_2be1f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_14f1a() local_unnamed_addr {
dec_label_pc_14f1a:
  %v0_14f1b = load i32, i32* @eax, align 4
  ret i32 %v0_14f1b
}

define i32 @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14f1e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp100
}

define i32 @function_14f5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f5c:
  %v0_14f5c = load i32, i32* @ebp, align 4
  %v1_14f5c = add i32 %v0_14f5c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_14f5c, i32* @ebp, align 4
  %v0_14f60 = load i32, i32* @eax, align 4
  %v11_14f60 = and i32 %v0_14f60, or (i32 zext (i8 ptrtoint (i32* @global_var_8.1178 to i8) to i32), i32 -256)
  %v0_14f62 = load i32, i32* @edx, align 4
  %v2_14f69 = call i32 @unknown_2c2dc(i32 %v11_14f60, i32 %v0_14f62)
  %v0_14f6e = load i32, i32* @ebp, align 4
  %v1_14f6e = add i32 %v0_14f6e, -12
  %v2_14f6e = inttoptr i32 %v1_14f6e to i32*
  %v3_14f6e = load i32, i32* %v2_14f6e, align 4
  %v1_14f71 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14f71 = xor i32 %v1_14f71, %v3_14f6e
  %v3_14f71 = icmp eq i32 %v2_14f71, 0
  store i32 %v2_14f71, i32* @eax, align 4
  br i1 %v3_14f71, label %bb, label %dec_label_pc_14f7a

bb:                                               ; preds = %dec_label_pc_14f5c
  %v1_14f78 = call i32 @function_14f7f()
  br label %dec_label_pc_14f7a

dec_label_pc_14f7a:                               ; preds = %bb, %dec_label_pc_14f5c
  %v2_14f78 = phi i32 [ %v1_14f78, %bb ], [ %v2_14f71, %dec_label_pc_14f5c ]
  ret i32 %v2_14f78
}

define i32 @function_14f7f() local_unnamed_addr {
dec_label_pc_14f7f:
  %v0_14f80 = load i32, i32* @eax, align 4
  ret i32 %v0_14f80
}

define i32 @_ZNK6CCoins9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f82:
  ret i32 %arg4
}

define i32 @function_14f9e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f9e:
  %v0_14f9e = load i32, i32* @eax, align 4
  %v1_14f9e = load i32, i32* @ebp, align 4
  %v2_14f9e = add i32 %v1_14f9e, -72
  %v3_14f9e = inttoptr i32 %v2_14f9e to i32*
  store i32 %v0_14f9e, i32* %v3_14f9e, align 4
  %v0_14fa1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14fa7 = load i32, i32* @ebp, align 4
  %v2_14fa7 = add i32 %v1_14fa7, -12
  %v3_14fa7 = inttoptr i32 %v2_14fa7 to i32*
  store i32 %v0_14fa1, i32* %v3_14fa7, align 4
  %v0_14fac = load i32, i32* @ebp, align 4
  %v1_14fac = add i32 %v0_14fac, -56
  %v2_14fac = inttoptr i32 %v1_14fac to i32*
  store i32 0, i32* %v2_14fac, align 4
  %v0_14fb3 = load i32, i32* @ebp, align 4
  %v1_14fb3 = add i32 %v0_14fb3, -52
  %v2_14fb3 = inttoptr i32 %v1_14fb3 to i32*
  store i32 0, i32* %v2_14fb3, align 4
  %v0_14fba = load i32, i32* @ebp, align 4
  %v1_14fc8 = add i32 %v0_14fba, -60
  %v2_14fc8 = inttoptr i32 %v1_14fc8 to i32*
  %v3_14fc8 = load i32, i32* %v2_14fc8, align 4
  ret i32 %v3_14fc8
}

define i32 @function_14fd2() local_unnamed_addr {
dec_label_pc_14fd2:
  %eax.global-to-local = alloca i32, align 4
  %v0_14fd2 = load i32, i32* @ebx, align 4
  %v1_14fd2 = add i32 %v0_14fd2, -1065106363
  %v2_14fd2 = inttoptr i32 %v1_14fd2 to i32*
  %v3_14fd2 = load i32, i32* %v2_14fd2, align 4
  %v4_14fd2 = sub i32 %v3_14fd2, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_14fd2, i32* %v2_14fd2, align 4
  %v0_14fd8 = load i32, i32* %eax.global-to-local, align 4
  %v2_14fda = add i32 %v0_14fd8, 173
  %v16_14fda = and i32 %v2_14fda, 255
  %v18_14fda = and i32 %v0_14fd8, -256
  %v19_14fda = or i32 %v16_14fda, %v18_14fda
  store i32 %v19_14fda, i32* %eax.global-to-local, align 4
  %v1_14fdc = call i32 @unknown_1ea92(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_14fdc, i32* %eax.global-to-local, align 4
  %v1_14fe1 = icmp eq i32 %v1_14fdc, 0
  br i1 %v1_14fe1, label %dec_label_pc_15011, label %dec_label_pc_14fe5

dec_label_pc_14fe5:                               ; preds = %dec_label_pc_14fd2
  %v0_14fe5 = load i32, i32* @ebp, align 4
  %v1_14fe5 = add i32 %v0_14fe5, -60
  %v2_14fe5 = inttoptr i32 %v1_14fe5 to i32*
  %v3_14fe5 = load i32, i32* %v2_14fe5, align 4
  %v1_14fe8 = add i32 %v3_14fe5, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_14fe8, i32* %eax.global-to-local, align 4
  %v4_14ff6 = call i32 @unknown_1ec30(i32 %v1_14fe8, i32 0)
  store i32 %v4_14ff6, i32* @eax, align 4
  %v2_14ffe = call i32 @function_1acfa(i32 %v4_14ff6)
  %v1_15003 = xor i32 %v2_14ffe, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_15003 = trunc i32 %v1_15003 to i8
  store i32 %v1_15003, i32* %eax.global-to-local, align 4
  %v5_15006 = icmp eq i8 %v4_15003, 0
  br i1 %v5_15006, label %dec_label_pc_15011, label %dec_label_pc_15016

dec_label_pc_15011:                               ; preds = %dec_label_pc_14fe5, %dec_label_pc_14fd2
  br label %dec_label_pc_15016

dec_label_pc_15016:                               ; preds = %dec_label_pc_14fe5, %dec_label_pc_15011
  %storemerge6 = phi i32 [ 0, %dec_label_pc_15011 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_14fe5 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v1_15016 = trunc i32 %storemerge6 to i8
  %v2_15016 = load i32, i32* @ebp, align 4
  %v3_15016 = add i32 %v2_15016, -14
  %v4_15016 = inttoptr i32 %v3_15016 to i8*
  store i8 %v1_15016, i8* %v4_15016, align 1
  %v0_15019 = load i32, i32* @ebp, align 4
  %v1_15019 = add i32 %v0_15019, -60
  %v2_15019 = inttoptr i32 %v1_15019 to i32*
  %v3_15019 = load i32, i32* %v2_15019, align 4
  %v1_1501c = add i32 %v3_15019, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_1501c, i32* %eax.global-to-local, align 4
  %v2_15022 = call i32 @unknown_1ea92(i32 %v1_1501c)
  store i32 %v2_15022, i32* %eax.global-to-local, align 4
  %tmp113 = or i32 %v2_15022, 1
  %tmp114 = icmp eq i32 %tmp113, 1
  br i1 %tmp114, label %dec_label_pc_15058, label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15016
  %v0_1502c = load i32, i32* @ebp, align 4
  %v1_1502c = add i32 %v0_1502c, -60
  %v2_1502c = inttoptr i32 %v1_1502c to i32*
  %v3_1502c = load i32, i32* %v2_1502c, align 4
  %v1_1502f = add i32 %v3_1502c, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_1502f, i32* %eax.global-to-local, align 4
  %v4_1503d = call i32 @unknown_1ec30(i32 %v1_1502f, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v4_1503d, i32* @eax, align 4
  %v2_15045 = call i32 @function_1acfa(i32 %v4_1503d)
  %v1_1504a = xor i32 %v2_15045, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_1504a = trunc i32 %v1_1504a to i8
  store i32 %v1_1504a, i32* %eax.global-to-local, align 4
  %v5_1504d = icmp eq i8 %v4_1504a, 0
  br i1 %v5_1504d, label %dec_label_pc_15058, label %dec_label_pc_1505d

dec_label_pc_15058:                               ; preds = %dec_label_pc_1502c, %dec_label_pc_15016
  br label %dec_label_pc_1505d

dec_label_pc_1505d:                               ; preds = %dec_label_pc_1502c, %dec_label_pc_15058
  %storemerge = phi i32 [ 0, %dec_label_pc_15058 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_1502c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_1505d = trunc i32 %storemerge to i8
  %v2_1505d = load i32, i32* @ebp, align 4
  %v3_1505d = add i32 %v2_1505d, -13
  %v4_1505d = inttoptr i32 %v3_1505d to i8*
  store i8 %v1_1505d, i8* %v4_1505d, align 1
  %v0_15060 = load i32, i32* @ebp, align 4
  %v1_15060 = add i32 %v0_15060, -14
  %v2_15060 = inttoptr i32 %v1_15060 to i8*
  %v3_15060 = load i8, i8* %v2_15060, align 1
  %v4_15060 = zext i8 %v3_15060 to i32
  %v1_15064 = xor i32 %v4_15060, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_15064 = trunc i32 %v1_15064 to i8
  store i32 %v1_15064, i32* %eax.global-to-local, align 4
  %v5_15067 = icmp eq i8 %v4_15064, 0
  br i1 %v5_15067, label %bb, label %dec_label_pc_1506b

bb:                                               ; preds = %dec_label_pc_1505d
  %v1_15069 = call i32 @function_150a1()
  store i32 %v1_15069, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1506b

dec_label_pc_1506b:                               ; preds = %bb, %dec_label_pc_1505d
  %v2_15069 = phi i32 [ %v1_15069, %bb ], [ %v1_15064, %dec_label_pc_1505d ]
  ret i32 %v2_15069

; uselistorder directives
  uselistorder i32 %v0_14fd8, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 4, 5, 6, 7, 3, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1505d, { 1, 0 }
  uselistorder label %dec_label_pc_15016, { 1, 0 }
}

define i32 @function_1506c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1506c:
  %v0_1506c = load i32, i32* @edx, align 4
  %v1_1506c = and i32 %v0_1506c, -65281
  %v2_1506c = or i32 %v1_1506c, 17664
  store i32 %v2_1506c, i32* @edx, align 4
  %v0_1506e = load i32, i32* @eax, align 4
  %v1_1506e = xor i32 %v0_1506e, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_1506e = trunc i32 %v1_1506e to i8
  %v5_15072 = icmp eq i8 %v4_1506e, 0
  br i1 %v5_15072, label %bb, label %dec_label_pc_15076

bb:                                               ; preds = %dec_label_pc_1506c
  %v1_15074 = call i32 @function_150a1()
  br label %dec_label_pc_15076

dec_label_pc_15076:                               ; preds = %bb, %dec_label_pc_1506c
  %v0_15076 = load i32, i32* @ebp, align 4
  %v1_15076 = add i32 %v0_15076, -52
  %v2_15076 = inttoptr i32 %v1_15076 to i32*
  %v3_15076 = load i32, i32* %v2_15076, align 4
  %v1_15079 = icmp eq i32 %v3_15076, 0
  %v1_1507b = icmp eq i1 %v1_15079, false
  br i1 %v1_1507b, label %bb12, label %dec_label_pc_1507d

bb12:                                             ; preds = %dec_label_pc_15076
  %v2_1507b = call i32 @function_150a1()
  br label %dec_label_pc_1507d

dec_label_pc_1507d:                               ; preds = %bb12, %dec_label_pc_15076
  %v3_15095 = phi i32 [ %v2_1507b, %bb12 ], [ %v3_15076, %dec_label_pc_15076 ]
  ret i32 %v3_15095

; uselistorder directives
  uselistorder i32 ()* @function_150a1, { 1, 0, 2 }
  uselistorder i32 17664, { 1, 0 }
  uselistorder i32 -65281, { 3, 2, 0, 1 }
}

define i32 @function_15082(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15082:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1509a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1509a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_150a1() local_unnamed_addr {
dec_label_pc_150a1:
  %v0_150a1 = load i32, i32* @ebp, align 4
  %v1_150a1 = add i32 %v0_150a1, -52
  %v2_150a1 = inttoptr i32 %v1_150a1 to i32*
  %v3_150a1 = load i32, i32* %v2_150a1, align 4
  store i32 %v3_150a1, i32* @edx, align 4
  %v1_150a4 = add i32 %v0_150a1, -14
  %v2_150a4 = inttoptr i32 %v1_150a4 to i8*
  %v3_150a4 = load i8, i8* %v2_150a4, align 1
  %v4_150a4 = zext i8 %v3_150a4 to i32
  ret i32 %v4_150a4
}

define i32 @function_150aa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_150aa:
  %v0_150aa = load i32, i32* @eax, align 4
  %v2_150aa = mul i32 %v0_150aa, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_150aa = add i32 %v0_150aa, -1240526220
  %v4_150aa = add i32 %v3_150aa, %v2_150aa
  %v5_150aa = inttoptr i32 %v4_150aa to i32*
  %v6_150aa = load i32, i32* %v5_150aa, align 4
  %v8_150aa = add i32 %v6_150aa, %v0_150aa
  store i32 %v8_150aa, i32* %v5_150aa, align 4
  %v0_150b1 = load i32, i32* @ebp, align 4
  %v1_150b1 = add i32 %v0_150b1, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_150b1, i32* @ebp, align 4
  %v0_150b2 = load i32, i32* @eax, align 4
  %v1_150b2 = xor i32 %v0_150b2, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_150b2 = trunc i32 %v1_150b2 to i8
  %v5_150b6 = icmp eq i8 %v4_150b2, 0
  %v1_150c6 = select i1 %v5_150b6, i32 0, i32 and (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 252)
  %v0_150c9 = load i32, i32* @edx, align 4
  %v2_150cb = sub i32 %v0_150c9, %v1_150c6
  store i32 %v2_150cb, i32* @ecx, align 4
  %v1_150cf = mul i32 %v2_150cb, 8
  %v1_150d6 = add i32 %v0_150b1, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -60)
  %v2_150d6 = inttoptr i32 %v1_150d6 to i32*
  %v3_150d6 = load i32, i32* %v2_150d6, align 4
  %v1_150d9 = inttoptr i32 %v3_150d6 to i8*
  %v2_150d9 = load i8, i8* %v1_150d9, align 1
  %v5_150dc = icmp eq i8 %v2_150d9, 0
  %storemerge = select i1 %v5_150dc, i32 0, i32 ptrtoint (i8** @global_var_1.1176 to i32)
  %v2_150ec = add i32 %storemerge, %v1_150cf
  store i32 %v2_150ec, i32* @edx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_150aa, { 0, 2, 1 }
}

define i32 @function_150f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_150f4:
  store i32 2, i32* @eax, align 4
  %v0_150f9 = call i32 @function_15100()
  ret i32 %v0_150f9
}

define i32 @function_150fb() local_unnamed_addr {
dec_label_pc_150fb:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_15100() local_unnamed_addr {
dec_label_pc_15100:
  %v0_15100 = load i32, i32* @edx, align 4
  %v1_15100 = load i32, i32* @eax, align 4
  %v2_15100 = add i32 %v1_15100, %v0_15100
  %v0_15102 = load i32, i32* @ebp, align 4
  %v1_15102 = add i32 %v0_15102, -13
  %v2_15102 = inttoptr i32 %v1_15102 to i8*
  %v3_15102 = load i8, i8* %v2_15102, align 1
  %v10_15102 = icmp eq i8 %v3_15102, 0
  %. = select i1 %v10_15102, i32 0, i32 ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_15114 = add i32 %., %v2_15100
  %v2_15116 = add i32 %v0_15102, -48
  %v3_15116 = inttoptr i32 %v2_15116 to i32*
  store i32 %v2_15114, i32* %v3_15116, align 4
  %v0_15119 = load i32, i32* @ebp, align 4
  %v1_15119 = add i32 %v0_15119, -60
  %v2_15119 = inttoptr i32 %v1_15119 to i32*
  %v3_15119 = load i32, i32* %v2_15119, align 4
  %v1_1511c = add i32 %v3_15119, 20
  %v1_15122 = call i32 @unknown_1e82d(i32 %v1_1511c)
  %v0_15127 = load i32, i32* @ebp, align 4
  %v1_15127 = add i32 %v0_15127, -44
  %v2_15131 = call i32 @unknown_1e85a(i32 %v1_15127, i32 %v1_15122)
  %v0_15139 = load i32, i32* @ebp, align 4
  %v1_15139 = add i32 %v0_15139, -44
  %v1_1513f = call i32 @unknown_1e8a1(i32 %v1_15139)
  %v0_15144 = load i32, i32* @ebp, align 4
  %v1_15144 = add i32 %v0_15144, -72
  %v2_15144 = inttoptr i32 %v1_15144 to i32*
  %v3_15144 = load i32, i32* %v2_15144, align 4
  %v1_1514b = add i32 %v0_15144, -68
  %v2_1514b = inttoptr i32 %v1_1514b to i32*
  %v3_1514b = load i32, i32* %v2_1514b, align 4
  %v1_15156 = add i32 %v0_15144, -64
  %v2_15156 = inttoptr i32 %v1_15156 to i32*
  %v3_15156 = load i32, i32* %v2_15156, align 4
  %v4_1515c = call i32 @unknown_2c381(i32 %v3_15156, i32 %v1_1513f, i32 %v3_1514b, i32 %v3_15144)
  %v0_15161 = load i32, i32* @ebp, align 4
  %v1_15161 = add i32 %v0_15161, -48
  %v1_15167 = call i32 @unknown_1e3fd(i32 %v1_15161)
  %v0_1516c = load i32, i32* @ebp, align 4
  %v1_1516c = add i32 %v0_1516c, -40
  %v2_15176 = call i32 @unknown_1e42a(i32 %v1_1516c, i32 %v1_15167)
  %v0_1517e = load i32, i32* @ebp, align 4
  %v1_1517e = add i32 %v0_1517e, -40
  %v2_15184 = call i32 @unknown_1e471(i32 %v1_1517e)
  %v0_15189 = load i32, i32* @ebp, align 4
  %v1_15189 = add i32 %v0_15189, -72
  %v2_15189 = inttoptr i32 %v1_15189 to i32*
  %v3_15189 = load i32, i32* %v2_15189, align 4
  %v1_15190 = add i32 %v0_15189, -68
  %v2_15190 = inttoptr i32 %v1_15190 to i32*
  %v3_15190 = load i32, i32* %v2_15190, align 4
  %v1_1519b = add i32 %v0_15189, -64
  %v2_1519b = inttoptr i32 %v1_1519b to i32*
  %v3_1519b = load i32, i32* %v2_1519b, align 4
  %v5_151a1 = call i32 @unknown_2c3dd(i32 %v3_1519b, i32 %v2_15184, i32 %v3_15190, i32 %v3_15189)
  %v0_151a6 = load i32, i32* @ebp, align 4
  %v1_151a6 = add i32 %v0_151a6, -28
  %v2_151a6 = inttoptr i32 %v1_151a6 to i32*
  store i32 0, i32* %v2_151a6, align 4
  %v0_1526430 = load i32, i32* @ebp, align 4
  %v1_1526431 = add i32 %v0_1526430, -56
  %v2_1526432 = inttoptr i32 %v1_1526431 to i32*
  %v3_1526433 = load i32, i32* %v2_1526432, align 4
  %v1_1526734 = add i32 %v0_1526430, -28
  %v2_1526735 = inttoptr i32 %v1_1526734 to i32*
  %v3_1526736 = load i32, i32* %v2_1526735, align 4
  %v10_1526737 = icmp ult i32 %v3_1526736, %v3_1526433
  %v5_1526d41 = icmp eq i1 %v10_1526737, false
  %v1_1526f42 = icmp eq i1 %v5_1526d41, false
  br i1 %v1_1526f42, label %dec_label_pc_151b2, label %dec_label_pc_15275

dec_label_pc_151b2:                               ; preds = %dec_label_pc_15100, %dec_label_pc_1523f
  %v0_1526443 = phi i32 [ %v0_15264, %dec_label_pc_1523f ], [ %v0_1526430, %dec_label_pc_15100 ]
  %v1_151b2 = add i32 %v0_1526443, -15
  %v2_151b2 = inttoptr i32 %v1_151b2 to i8*
  store i8 0, i8* %v2_151b2, align 1
  %v0_151b6 = load i32, i32* @ebp, align 4
  %v1_151b6 = add i32 %v0_151b6, -24
  %v2_151b6 = inttoptr i32 %v1_151b6 to i32*
  store i32 0, i32* %v2_151b6, align 4
  br label %dec_label_pc_1520b

dec_label_pc_151bf:                               ; preds = %dec_label_pc_1523b
  %v1_151bf = add i32 %v0_151bf, -28
  %v2_151bf = inttoptr i32 %v1_151bf to i32*
  %v3_151bf = load i32, i32* %v2_151bf, align 4
  %v2_151c2 = mul i32 %v3_151bf, 8
  %v2_151c5 = add i32 %v0_151bf, -24
  %v3_151c5 = inttoptr i32 %v2_151c5 to i32*
  %v4_151c5 = load i32, i32* %v3_151c5, align 4
  %v5_151c5 = add i32 %v4_151c5, %v2_151c2
  %v1_151c8 = add i32 %v5_151c5, 2
  %v1_151cb = add i32 %v0_151bf, -60
  %v2_151cb = inttoptr i32 %v1_151cb to i32*
  %v3_151cb = load i32, i32* %v2_151cb, align 4
  %v1_151ce = add i32 %v3_151cb, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_151d8 = call i32 @unknown_1ec30(i32 %v1_151ce, i32 %v1_151c8)
  store i32 %v3_151d8, i32* @eax, align 4
  %v2_151e0 = call i32 @function_1acfa(i32 %v3_151d8)
  %v1_151e5 = xor i32 %v2_151e0, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_151e5 = trunc i32 %v1_151e5 to i8
  %v5_151e8 = icmp eq i8 %v4_151e5, 0
  br i1 %v5_151e8, label %dec_label_pc_15207, label %dec_label_pc_151ec

dec_label_pc_151ec:                               ; preds = %dec_label_pc_151bf
  %v0_151ec = load i32, i32* @ebp, align 4
  %v1_151ec = add i32 %v0_151ec, -24
  %v2_151ec = inttoptr i32 %v1_151ec to i32*
  %v3_151ec = load i32, i32* %v2_151ec, align 4
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @ebx, align 4
  store i32 %v3_151ec, i32* @ecx, align 4
  %v3_151f8 = urem i32 %v3_151ec, 32
  %v5_151f8 = icmp eq i32 %v3_151f8, 0
  br i1 %v5_151f8, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_151ec
  %v6_151f8 = shl i32 ptrtoint (i8** @global_var_1.1176 to i32), %v3_151f8
  store i32 %v6_151f8, i32* @ebx, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_151ec, %bb
  %v0_151fa = phi i32 [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_151ec ], [ %v6_151f8, %bb ]
  %v1_151fe = add i32 %v0_151ec, -15
  %v2_151fe = inttoptr i32 %v1_151fe to i8*
  %v3_151fe = load i8, i8* %v2_151fe, align 1
  %v4_151fe = zext i8 %v3_151fe to i32
  %v2_15202 = or i32 %v4_151fe, %v0_151fa
  %v5_15202 = trunc i32 %v2_15202 to i8
  store i8 %v5_15202, i8* %v2_151fe, align 1
  br label %dec_label_pc_15207

dec_label_pc_15207:                               ; preds = %bb19, %dec_label_pc_151bf
  %v0_15207 = load i32, i32* @ebp, align 4
  %v1_15207 = add i32 %v0_15207, -24
  %v2_15207 = inttoptr i32 %v1_15207 to i32*
  %v3_15207 = load i32, i32* %v2_15207, align 4
  %v4_15207 = add i32 %v3_15207, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_15207, i32* %v2_15207, align 4
  br label %dec_label_pc_1520b

dec_label_pc_1520b:                               ; preds = %dec_label_pc_15207, %dec_label_pc_151b2
  %v0_1520b = load i32, i32* @ebp, align 4
  %v1_1520b = add i32 %v0_1520b, -24
  %v2_1520b = inttoptr i32 %v1_1520b to i32*
  %v3_1520b = load i32, i32* %v2_1520b, align 4
  %tmp45 = icmp ult i32 %v3_1520b, 8
  br i1 %tmp45, label %dec_label_pc_15211, label %dec_label_pc_15236

dec_label_pc_15211:                               ; preds = %dec_label_pc_1520b
  %v1_15211 = add i32 %v0_1520b, -28
  %v2_15211 = inttoptr i32 %v1_15211 to i32*
  %v3_15211 = load i32, i32* %v2_15211, align 4
  %v2_15214 = mul i32 %v3_15211, 8
  %v4_15217 = load i32, i32* %v2_1520b, align 4
  %v5_15217 = add i32 %v4_15217, %v2_15214
  %v1_1521a = add i32 %v5_15217, 2
  store i32 %v1_1521a, i32* @ebx, align 4
  %v1_1521d = add i32 %v0_1520b, -60
  %v2_1521d = inttoptr i32 %v1_1521d to i32*
  %v3_1521d = load i32, i32* %v2_1521d, align 4
  %v1_15220 = add i32 %v3_1521d, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_15226 = call i32 @unknown_1ea92(i32 %v1_15220)
  %v0_1522b = load i32, i32* @ebx, align 4
  %v7_1522b = icmp ult i32 %v0_1522b, %v2_15226
  %v1_1522d = icmp eq i1 %v7_1522b, false
  br i1 %v1_1522d, label %dec_label_pc_15236, label %dec_label_pc_1523b

dec_label_pc_15236:                               ; preds = %dec_label_pc_1520b, %dec_label_pc_15211
  br label %dec_label_pc_1523b

dec_label_pc_1523b:                               ; preds = %dec_label_pc_15211, %dec_label_pc_15236
  %storemerge = phi i8 [ 0, %dec_label_pc_15236 ], [ ptrtoint (i8** @global_var_1.1176 to i8), %dec_label_pc_15211 ]
  %v5_1523b = icmp eq i8 %storemerge, 0
  %v1_1523d = icmp eq i1 %v5_1523b, false
  %v0_151bf = load i32, i32* @ebp, align 4
  br i1 %v1_1523d, label %dec_label_pc_151bf, label %dec_label_pc_1523f

dec_label_pc_1523f:                               ; preds = %dec_label_pc_1523b
  %v1_1523f = add i32 %v0_151bf, -15
  %v2_1523f = inttoptr i32 %v1_1523f to i8*
  %v3_1523f = load i8, i8* %v2_1523f, align 1
  %v4_1523f = zext i8 %v3_1523f to i32
  %v1_15243 = add i32 %v0_151bf, -72
  %v2_15243 = inttoptr i32 %v1_15243 to i32*
  %v3_15243 = load i32, i32* %v2_15243, align 4
  %v1_1524a = add i32 %v0_151bf, -68
  %v2_1524a = inttoptr i32 %v1_1524a to i32*
  %v3_1524a = load i32, i32* %v2_1524a, align 4
  %v1_15255 = add i32 %v0_151bf, -64
  %v2_15255 = inttoptr i32 %v1_15255 to i32*
  %v3_15255 = load i32, i32* %v2_15255, align 4
  %v5_1525b = call i32 @unknown_2c439(i32 %v3_15255, i32 %v4_1523f, i32 %v3_1524a, i32 %v3_15243)
  %v0_15260 = load i32, i32* @ebp, align 4
  %v1_15260 = add i32 %v0_15260, -28
  %v2_15260 = inttoptr i32 %v1_15260 to i32*
  %v3_15260 = load i32, i32* %v2_15260, align 4
  %v4_15260 = add i32 %v3_15260, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_15260, i32* %v2_15260, align 4
  %v0_15264 = load i32, i32* @ebp, align 4
  %v1_15264 = add i32 %v0_15264, -56
  %v2_15264 = inttoptr i32 %v1_15264 to i32*
  %v3_15264 = load i32, i32* %v2_15264, align 4
  %v1_15267 = add i32 %v0_15264, -28
  %v2_15267 = inttoptr i32 %v1_15267 to i32*
  %v3_15267 = load i32, i32* %v2_15267, align 4
  %v10_15267 = icmp ult i32 %v3_15267, %v3_15264
  %v5_1526d = icmp eq i1 %v10_15267, false
  %v1_1526f = icmp eq i1 %v5_1526d, false
  br i1 %v1_1526f, label %dec_label_pc_151b2, label %dec_label_pc_15275

dec_label_pc_15275:                               ; preds = %dec_label_pc_1523f, %dec_label_pc_15100
  %v0_15264.lcssa = phi i32 [ %v0_1526430, %dec_label_pc_15100 ], [ %v0_15264, %dec_label_pc_1523f ]
  %v1_15275 = add i32 %v0_15264.lcssa, -20
  %v2_15275 = inttoptr i32 %v1_15275 to i32*
  store i32 0, i32* %v2_15275, align 4
  br label %dec_label_pc_152f2

dec_label_pc_1527e:                               ; preds = %dec_label_pc_152f2
  %v1_15281 = add i32 %v3_1527e, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_15284 = load i32, i32* %v3_15300, align 4
  %v3_1528e = call i32 @unknown_1ec30(i32 %v1_15281, i32 %v3_15284)
  store i32 %v3_1528e, i32* @eax, align 4
  %v2_15296 = call i32 @function_1acfa(i32 %v3_1528e)
  %v1_1529b = xor i32 %v2_15296, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_1529b = trunc i32 %v1_1529b to i8
  %v5_1529e = icmp eq i8 %v4_1529b, 0
  br i1 %v5_1529e, label %dec_label_pc_152ee, label %dec_label_pc_152a2

dec_label_pc_152a2:                               ; preds = %dec_label_pc_1527e
  %v0_152a2 = load i32, i32* @ebp, align 4
  %v1_152a2 = add i32 %v0_152a2, -60
  %v2_152a2 = inttoptr i32 %v1_152a2 to i32*
  %v3_152a2 = load i32, i32* %v2_152a2, align 4
  %v1_152a5 = add i32 %v3_152a2, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_152a5, i32* @edx, align 4
  %v1_152a8 = add i32 %v0_152a2, -20
  %v2_152a8 = inttoptr i32 %v1_152a8 to i32*
  %v3_152a8 = load i32, i32* %v2_152a8, align 4
  %v3_152b2 = call i32 @unknown_1ec30(i32 %v1_152a5, i32 %v3_152a8)
  %v2_152ba = call i32 @unknown_1e91d(i32 %v3_152b2)
  %v0_152c3 = load i32, i32* @ebp, align 4
  %v1_152c3 = add i32 %v0_152c3, -36
  store i32 %v1_152c3, i32* @eax, align 4
  %v3_152c9 = call i32 @function_1ad34(i32 %v1_152c3, i32 %v2_152ba)
  %v0_152ce = load i32, i32* @ebp, align 4
  %v1_152ce = add i32 %v0_152ce, -72
  %v2_152ce = inttoptr i32 %v1_152ce to i32*
  %v3_152ce = load i32, i32* %v2_152ce, align 4
  %v1_152d5 = add i32 %v0_152ce, -68
  %v2_152d5 = inttoptr i32 %v1_152d5 to i32*
  %v3_152d5 = load i32, i32* %v2_152d5, align 4
  %v1_152dc = add i32 %v0_152ce, -36
  %v1_152e3 = add i32 %v0_152ce, -64
  %v2_152e3 = inttoptr i32 %v1_152e3 to i32*
  %v3_152e3 = load i32, i32* %v2_152e3, align 4
  %v5_152e9 = call i32 @unknown_2c48f(i32 %v3_152e3, i32 %v1_152dc, i32 %v3_152d5, i32 %v3_152ce)
  br label %dec_label_pc_152ee

dec_label_pc_152ee:                               ; preds = %dec_label_pc_152a2, %dec_label_pc_1527e
  %v0_152ee = load i32, i32* @ebp, align 4
  %v1_152ee = add i32 %v0_152ee, -20
  %v2_152ee = inttoptr i32 %v1_152ee to i32*
  %v3_152ee = load i32, i32* %v2_152ee, align 4
  %v4_152ee = add i32 %v3_152ee, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_152ee, i32* %v2_152ee, align 4
  br label %dec_label_pc_152f2

dec_label_pc_152f2:                               ; preds = %dec_label_pc_152ee, %dec_label_pc_15275
  %v0_152f2 = load i32, i32* @ebp, align 4
  %v1_152f2 = add i32 %v0_152f2, -60
  %v2_152f2 = inttoptr i32 %v1_152f2 to i32*
  %v3_152f2 = load i32, i32* %v2_152f2, align 4
  %v1_152f5 = add i32 %v3_152f2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_152fb = call i32 @unknown_1ea92(i32 %v1_152f5)
  %v1_15300 = load i32, i32* @ebp, align 4
  %v2_15300 = add i32 %v1_15300, -20
  %v3_15300 = inttoptr i32 %v2_15300 to i32*
  %v4_15300 = load i32, i32* %v3_15300, align 4
  %tmp26 = icmp ule i32 %v2_152fb, %v4_15300
  %v3_15303 = icmp ne i1 %tmp26, ptrtoint (i8** @global_var_1.1176 to i1)
  %v5_15306 = icmp eq i1 %v3_15303, false
  %v1_15308 = icmp eq i1 %v5_15306, false
  %v1_1527e = add i32 %v1_15300, -60
  %v2_1527e = inttoptr i32 %v1_1527e to i32*
  %v3_1527e = load i32, i32* %v2_1527e, align 4
  br i1 %v1_15308, label %dec_label_pc_1527e, label %dec_label_pc_1530e

dec_label_pc_1530e:                               ; preds = %dec_label_pc_152f2
  %v1_15311 = add i32 %v3_1527e, 16
  %v2_15317 = call i32 @unknown_1e82d(i32 %v1_15311)
  %v0_1531c = load i32, i32* @ebp, align 4
  %v1_1531c = add i32 %v0_1531c, -32
  %v3_15326 = call i32 @unknown_1e85a(i32 %v1_1531c, i32 %v2_15317)
  %v0_1532e = load i32, i32* @ebp, align 4
  %v1_1532e = add i32 %v0_1532e, -32
  %v1_15334 = call i32 @unknown_1e8a1(i32 %v1_1532e)
  %v0_15339 = load i32, i32* @ebp, align 4
  %v1_15339 = add i32 %v0_15339, -72
  %v2_15339 = inttoptr i32 %v1_15339 to i32*
  %v3_15339 = load i32, i32* %v2_15339, align 4
  %v1_15340 = add i32 %v0_15339, -68
  %v2_15340 = inttoptr i32 %v1_15340 to i32*
  %v3_15340 = load i32, i32* %v2_15340, align 4
  %v1_1534b = add i32 %v0_15339, -64
  %v2_1534b = inttoptr i32 %v1_1534b to i32*
  %v3_1534b = load i32, i32* %v2_1534b, align 4
  %v5_15351 = call i32 @unknown_2c381(i32 %v3_1534b, i32 %v1_15334, i32 %v3_15340, i32 %v3_15339)
  %v0_15356 = load i32, i32* @ebp, align 4
  %v1_15356 = add i32 %v0_15356, -12
  %v2_15356 = inttoptr i32 %v1_15356 to i32*
  %v3_15356 = load i32, i32* %v2_15356, align 4
  %v1_15359 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15359 = xor i32 %v1_15359, %v3_15356
  %v3_15359 = icmp eq i32 %v2_15359, 0
  store i32 %v2_15359, i32* @eax, align 4
  br i1 %v3_15359, label %bb29, label %dec_label_pc_15362

bb29:                                             ; preds = %dec_label_pc_1530e
  %v1_15360 = call i32 @function_15367()
  br label %dec_label_pc_15362

dec_label_pc_15362:                               ; preds = %bb29, %dec_label_pc_1530e
  %v2_15360 = phi i32 [ %v1_15360, %bb29 ], [ %v2_15359, %dec_label_pc_1530e ]
  ret i32 %v2_15360

; uselistorder directives
  uselistorder i32* %v3_15300, { 1, 0 }
  uselistorder i32 %v0_152ce, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15264, { 0, 2, 3, 1 }
  uselistorder i32 %v0_151bf, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v3_151f8, { 1, 0 }
  uselistorder i1 ptrtoint (i8** @global_var_1.1176 to i1), { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_1ea92, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @function_1acfa, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @unknown_1ec30, { 2, 1, 0, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_2c381, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1e8a1, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1e85a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1e82d, { 1, 0 }
  uselistorder label %dec_label_pc_1523b, { 1, 0 }
  uselistorder label %dec_label_pc_15236, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_151b2, { 1, 0 }
}

define i32 @function_15367() local_unnamed_addr {
dec_label_pc_15367:
  %v0_15367 = load i32, i32* @ebp, align 4
  %v1_15367 = add i32 %v0_15367, -4
  %v2_15367 = inttoptr i32 %v1_15367 to i32*
  %v3_15367 = load i32, i32* %v2_15367, align 4
  store i32 %v3_15367, i32* @ebx, align 4
  %v0_1536b = load i32, i32* @eax, align 4
  ret i32 %v0_1536b
}

define i32 @_ZNK9base_uintILj256EE9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1536c:
  store i32 %arg2, i32* @eax, align 4
  %v7_153aa = call i32 @function_19eda(i32 %arg2, i32 %arg1, i32 ptrtoint (i32* @global_var_20.1184 to i32), i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_153bb

bb:                                               ; preds = %dec_label_pc_1536c
  %v1_153b9 = call i32 @function_153c0()
  br label %dec_label_pc_153bb

dec_label_pc_153bb:                               ; preds = %bb, %dec_label_pc_1536c
  %v2_153b9 = phi i32 [ %v1_153b9, %bb ], [ 0, %dec_label_pc_1536c ]
  ret i32 %v2_153b9

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_153c0() local_unnamed_addr {
dec_label_pc_153c0:
  %v0_153c1 = load i32, i32* @eax, align 4
  ret i32 %v0_153c1
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_153c2:
  %stack_var_-17 = alloca i32, align 4
  %v1_153df = call i32 @unknown_2c92b(i32 %arg1)
  %v2_153e8 = ptrtoint i32* %stack_var_-17 to i32
  %v2_153ee = call i32 @unknown_2a858(i32 %v2_153e8, i32 %v1_153df)
  store i32 %v2_153ee, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_153ff

bb:                                               ; preds = %dec_label_pc_153c2
  %v1_153fd = call i32 @function_15404()
  br label %dec_label_pc_153ff

dec_label_pc_153ff:                               ; preds = %bb, %dec_label_pc_153c2
  %v2_153fd = phi i32 [ %v1_153fd, %bb ], [ %v2_153ee, %dec_label_pc_153c2 ]
  ret i32 %v2_153fd
}

define i32 @function_15404() local_unnamed_addr {
dec_label_pc_15404:
  %v0_15405 = load i32, i32* @eax, align 4
  ret i32 %v0_15405
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_15406:
  %v1_15420 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_15420 = inttoptr i32 %v1_15420 to i32*
  %v3_15420 = load i32, i32* %v2_15420, align 4
  store i32 %v3_15420, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1542f

bb:                                               ; preds = %dec_label_pc_15406
  %v2_1542d = call i32 @function_15434(i32 %arg1)
  br label %dec_label_pc_1542f

dec_label_pc_1542f:                               ; preds = %bb, %dec_label_pc_15406
  %v3_1542d = phi i32 [ %v2_1542d, %bb ], [ %v3_15420, %dec_label_pc_15406 ]
  ret i32 %v3_1542d
}

define i32 @function_15434(i32 %arg1) local_unnamed_addr {
dec_label_pc_15434:
  %v0_15435 = load i32, i32* @eax, align 4
  ret i32 %v0_15435
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_15436:
  %v1_15450 = add i32 %arg1, 12
  %v2_15450 = inttoptr i32 %v1_15450 to i32*
  %v3_15450 = load i32, i32* %v2_15450, align 4
  store i32 %v3_15450, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1545f

bb:                                               ; preds = %dec_label_pc_15436
  %v2_1545d = call i32 @function_15464(i32 %arg1)
  br label %dec_label_pc_1545f

dec_label_pc_1545f:                               ; preds = %bb, %dec_label_pc_15436
  %v3_1545d = phi i32 [ %v2_1545d, %bb ], [ %v3_15450, %dec_label_pc_15436 ]
  ret i32 %v3_1545d
}

define i32 @function_15464(i32 %arg1) local_unnamed_addr {
dec_label_pc_15464:
  %v0_15465 = load i32, i32* @eax, align 4
  ret i32 %v0_15465
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_15466:
  %v1_15480 = add i32 %arg1, 16
  store i32 %v1_15480, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1548f

bb:                                               ; preds = %dec_label_pc_15466
  %v2_1548d = call i32 @function_15494(i32 %arg1)
  br label %dec_label_pc_1548f

dec_label_pc_1548f:                               ; preds = %bb, %dec_label_pc_15466
  %v3_1548d = phi i32 [ %v2_1548d, %bb ], [ %v1_15480, %dec_label_pc_15466 ]
  ret i32 %v3_1548d
}

define i32 @function_15494(i32 %arg1) local_unnamed_addr {
dec_label_pc_15494:
  %v0_15495 = load i32, i32* @eax, align 4
  ret i32 %v0_15495
}

define i32 @_ZNKSt10_Select1stISt4pairIK7uint256P11CBlockIndexEEclERKS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15496:
  ret i32 %arg1
}

define i32 @function_154a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_154a0:
  %v0_154a0 = load i32, i32* @ebp, align 4
  %v0_154a4 = load i32, i32* @eax, align 4
  %v11_154a4 = or i32 %v0_154a4, 137
  store i32 %v11_154a4, i32* @eax, align 4
  %v1_154a6 = add i32 %v0_154a0, add (i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v9_154a6 = icmp eq i32 %v1_154a6, 0
  store i32 %v1_154a6, i32* @ebp, align 4
  %v0_154a7 = load i32, i32* @ecx, align 4
  %v1_154a7 = sub i32 %v0_154a7, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_154a7, i32* @ecx, align 4
  %v2_154a7 = icmp eq i32 %v1_154a7, 0
  %v4_154a7 = or i1 %v9_154a6, %v2_154a7
  br i1 %v4_154a7, label %dec_label_pc_154a9, label %bb

bb:                                               ; preds = %dec_label_pc_154a0
  %v6_154a7 = call i32 @function_1550e()
  %v1_154ae.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_154a9

dec_label_pc_154a9:                               ; preds = %dec_label_pc_154a0, %bb
  %v1_154ae = phi i32 [ %v1_154a6, %dec_label_pc_154a0 ], [ %v1_154ae.pre, %bb ]
  %v0_154a9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_154ae = add i32 %v1_154ae, -12
  %v3_154ae = inttoptr i32 %v2_154ae to i32*
  store i32 %v0_154a9, i32* %v3_154ae, align 4
  %v0_154b3 = load i32, i32* @ebp, align 4
  %v1_154b3 = add i32 %v0_154b3, -32
  %v2_154b3 = inttoptr i32 %v1_154b3 to i32*
  %v3_154b3 = load i32, i32* %v2_154b3, align 4
  store i32 %v3_154b3, i32* @eax, align 4
  %v1_154b6 = add i32 %v0_154b3, -12
  %v2_154b6 = inttoptr i32 %v1_154b6 to i32*
  %v3_154b6 = load i32, i32* %v2_154b6, align 4
  %v1_154b9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_154b9 = icmp eq i32 %v1_154b9, %v3_154b6
  br i1 %v3_154b9, label %bb3, label %dec_label_pc_154c2

bb3:                                              ; preds = %dec_label_pc_154a9
  %v1_154c0 = call i32 @function_154c7()
  br label %dec_label_pc_154c2

dec_label_pc_154c2:                               ; preds = %bb3, %dec_label_pc_154a9
  %v2_154c0 = phi i32 [ %v1_154c0, %bb3 ], [ %v3_154b3, %dec_label_pc_154a9 ]
  ret i32 %v2_154c0

; uselistorder directives
  uselistorder label %dec_label_pc_154a9, { 1, 0 }
}

define i32 @function_154c7() local_unnamed_addr {
dec_label_pc_154c7:
  %v0_154c8 = load i32, i32* @eax, align 4
  ret i32 %v0_154c8
}

define i32 @_Z16GetSerializeSizeI15CDiskBlockIndexEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_154c9:
  ret i32 %arg3
}

define i32 @function_154de(i32 %arg1) local_unnamed_addr {
dec_label_pc_154de:
  %v0_154de = load i32, i32* @eax, align 4
  %v1_154de = load i32, i32* @ebp, align 4
  %v2_154de = add i32 %v1_154de, -36
  %v3_154de = inttoptr i32 %v2_154de to i32*
  store i32 %v0_154de, i32* %v3_154de, align 4
  %v0_154e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_154e7 = load i32, i32* @ebp, align 4
  %v2_154e7 = add i32 %v1_154e7, -12
  %v3_154e7 = inttoptr i32 %v2_154e7 to i32*
  store i32 %v0_154e1, i32* %v3_154e7, align 4
  %v0_154ec = load i32, i32* @ebp, align 4
  %v1_154ec = add i32 %v0_154ec, -36
  %v2_154ec = inttoptr i32 %v1_154ec to i32*
  %v3_154ec = load i32, i32* %v2_154ec, align 4
  %v1_154f3 = add i32 %v0_154ec, -32
  %v2_154f3 = inttoptr i32 %v1_154f3 to i32*
  %v3_154f3 = load i32, i32* %v2_154f3, align 4
  %v1_154fa = add i32 %v0_154ec, -28
  %v2_154fa = inttoptr i32 %v1_154fa to i32*
  %v3_154fa = load i32, i32* %v2_154fa, align 4
  %v3_15500 = call i32 @unknown_1c44d(i32 %v3_154fa, i32 %v3_154f3, i32 %v3_154ec)
  ret i32 %v3_15500
}

define i32 @function_1550e() local_unnamed_addr {
dec_label_pc_1550e:
  %v0_1550e = load i32, i32* @ebp, align 4
  %v1_1550e = load i32, i32* @eax, align 4
  %v2_1550e = mul i32 %v1_1550e, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_1550e = add i32 %v0_1550e, -24
  %v4_1550e = add i32 %v3_1550e, %v2_1550e
  %v5_1550e = inttoptr i32 %v4_1550e to i8*
  %v6_1550e = load i8, i8* %v5_1550e, align 1
  %v7_1550e = load i32, i32* @edx, align 4
  %v8_1550e = lshr i32 %v7_1550e, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_1550e = trunc i32 %v8_1550e to i8
  %v10_1550e = add i8 %v9_1550e, %v6_1550e
  store i8 %v10_1550e, i8* %v5_1550e, align 1
  %v31_1550e = load i32, i32* @eax, align 4
  ret i32 %v31_1550e
}

define i32 @function_15515() local_unnamed_addr {
dec_label_pc_15515:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15515 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15515 = sub i32 %v0_15515, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_15515, i32* %ecx.global-to-local, align 4
  %v0_15517 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15517
}

define i32 @_Z9SerializeI11CDataStream15CDiskBlockIndexEvRT_RKT0_li() local_unnamed_addr {
dec_label_pc_15518:
  %eax.global-to-local = alloca i32, align 4
  %v2_15519 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_15519
}

define i32 @function_1551c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1551c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v4_1551d = load i32, i32* @ecx, align 4
  %v0_15525 = load i32, i32* @ebp, align 4
  %v0_15526 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_15526 = or i32 %v0_15526, 137
  store i32 %v11_15526, i32* %eax.global-to-local, align 4
  %v1_15529 = sub i32 %v4_1551d, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_1552b = add i32 %v0_15525, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)))
  store i32 %v1_1552b, i32* %ebp.global-to-local, align 4
  %v1_1552c = add i32 %v1_15529, 1166793797
  %v2_1552c = inttoptr i32 %v1_1552c to i8*
  %v3_1552c = load i8, i8* %v2_1552c, align 1
  %v5_1552c = trunc i32 %v1_15529 to i8
  %v8_1552c = add i8 %v3_1552c, %v5_1552c
  %v28_1552c = icmp ult i8 %v8_1552c, %v3_1552c
  store i1 %v28_1552c, i1* %cf.global-to-local, align 1
  store i8 %v8_1552c, i8* %v2_1552c, align 1
  %v0_15532 = load i32, i32* %eax.global-to-local, align 4
  %v1_15532 = trunc i32 %v0_15532 to i8
  %v2_15532 = load i1, i1* %cf.global-to-local, align 1
  %v3_15532 = zext i1 %v2_15532 to i8
  %v4_15532 = add i8 %v1_15532, -119
  %v5_15532 = add i8 %v4_15532, %v3_15532
  %v22_15532 = icmp ule i8 %v5_15532, %v1_15532
  %v23_15532 = icmp ugt i8 %v1_15532, 118
  %v24_15532 = select i1 %v2_15532, i1 %v22_15532, i1 %v23_15532
  %v25_15532 = zext i8 %v5_15532 to i32
  %v27_15532 = and i32 %v0_15532, -256
  %v28_15532 = or i32 %v25_15532, %v27_15532
  store i32 %v28_15532, i32* %eax.global-to-local, align 4
  %v0_15534 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15534 = add i32 %v0_15534, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_15534, i32* @ebp, align 4
  %v3_15538 = zext i1 %v24_15532 to i8
  %v4_15538 = add i8 %v3_15538, %v5_15532
  %v19_15538 = icmp ule i8 %v4_15538, %v5_15532
  %v21_15538 = icmp eq i1 %v24_15532, %v19_15538
  store i1 %v21_15538, i1* %cf.global-to-local, align 1
  %v22_15538 = zext i8 %v4_15538 to i32
  %v25_15538 = or i32 %v22_15538, %v27_15532
  store i32 %v25_15538, i32* %eax.global-to-local, align 4
  %v1_1553a = inttoptr i32 %v25_15538 to i8*
  %v2_1553a = load i8, i8* %v1_1553a, align 1
  %v5_1553a = add i8 %v2_1553a, %v4_15538
  store i8 %v5_1553a, i8* %v1_1553a, align 1
  %v0_1553c = load i32, i32* %eax.global-to-local, align 4
  %v1_1553c = load i32, i32* @ebp, align 4
  %v2_1553c = add i32 %v1_1553c, -12
  %v3_1553c = inttoptr i32 %v2_1553c to i32*
  store i32 %v0_1553c, i32* %v3_1553c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_15541 = load i32, i32* @ebp, align 4
  %v1_15541 = add i32 %v0_15541, -40
  %v2_15541 = inttoptr i32 %v1_15541 to i32*
  %v3_15541 = load i32, i32* %v2_15541, align 4
  store i32 %v3_15541, i32* %eax.global-to-local, align 4
  %v1_15548 = add i32 %v0_15541, -36
  %v2_15548 = inttoptr i32 %v1_15548 to i32*
  %v3_15548 = load i32, i32* %v2_15548, align 4
  store i32 %v3_15548, i32* %eax.global-to-local, align 4
  %v1_1554f = add i32 %v0_15541, -28
  %v2_1554f = inttoptr i32 %v1_1554f to i32*
  %v3_1554f = load i32, i32* %v2_1554f, align 4
  store i32 %v3_1554f, i32* %eax.global-to-local, align 4
  %v1_15556 = add i32 %v0_15541, -32
  %v2_15556 = inttoptr i32 %v1_15556 to i32*
  %v3_15556 = load i32, i32* %v2_15556, align 4
  store i32 %v3_15556, i32* %eax.global-to-local, align 4
  %v4_1555c = call i32 @unknown_2cab2(i32 %v3_15556, i32 %v3_1554f, i32 %v3_15548, i32 %v3_15541)
  store i32 %v4_1555c, i32* %eax.global-to-local, align 4
  %v0_15561 = load i32, i32* @ebp, align 4
  %v1_15561 = add i32 %v0_15561, -12
  %v2_15561 = inttoptr i32 %v1_15561 to i32*
  %v3_15561 = load i32, i32* %v2_15561, align 4
  store i32 %v3_15561, i32* %eax.global-to-local, align 4
  %v1_15564 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15564 = xor i32 %v1_15564, %v3_15561
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_15564 = icmp eq i32 %v2_15564, 0
  store i32 %v2_15564, i32* @eax, align 4
  br i1 %v3_15564, label %bb, label %dec_label_pc_1556d

bb:                                               ; preds = %dec_label_pc_1551c
  %v1_1556b = call i32 @function_15572()
  store i32 %v1_1556b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1556d

dec_label_pc_1556d:                               ; preds = %bb, %dec_label_pc_1551c
  %v3_1556b = phi i32 [ %v1_1556b, %bb ], [ %v2_15564, %dec_label_pc_1551c ]
  ret i32 %v3_1556b

; uselistorder directives
  uselistorder i32 %v0_15541, { 1, 0, 2, 3 }
  uselistorder i8 %v4_15538, { 0, 2, 1 }
  uselistorder i8 %v5_15532, { 1, 0, 3, 2 }
  uselistorder i8 %v3_1552c, { 1, 0 }
  uselistorder i32 %v1_15529, { 1, 0 }
}

define i32 @function_15572() local_unnamed_addr {
dec_label_pc_15572:
  %v0_15573 = load i32, i32* @eax, align 4
  ret i32 %v0_15573
}

define i32 @_ZN7CBigNum11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15574:
  ret i32 %arg4
}

define i32 @function_15594(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15594:
  %v0_15594 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_15599 = load i32, i32* @ebp, align 4
  %v2_15599 = add i32 %v1_15599, -12
  %v3_15599 = inttoptr i32 %v2_15599 to i32*
  store i32 %v0_15594, i32* %v3_15599, align 4
  %v0_1559e = load i32, i32* @ebp, align 4
  %v1_1559e = add i32 %v0_1559e, -24
  %v1_155a4 = call i32 @unknown_1d88c(i32 %v1_1559e)
  %v0_155a9 = load i32, i32* @ebp, align 4
  %v1_155a9 = add i32 %v0_155a9, -40
  %v2_155a9 = inttoptr i32 %v1_155a9 to i32*
  %v3_155a9 = load i32, i32* %v2_155a9, align 4
  %v1_155b0 = add i32 %v0_155a9, -36
  %v2_155b0 = inttoptr i32 %v1_155b0 to i32*
  %v3_155b0 = load i32, i32* %v2_155b0, align 4
  %v1_155b7 = add i32 %v0_155a9, -24
  %v1_155be = add i32 %v0_155a9, -32
  %v2_155be = inttoptr i32 %v1_155be to i32*
  %v3_155be = load i32, i32* %v2_155be, align 4
  %v4_155c4 = call i32 @unknown_2cef7(i32 %v3_155be, i32 %v1_155b7, i32 %v3_155b0, i32 %v3_155a9)
  %v0_155c9 = load i32, i32* @ebp, align 4
  %v1_155d0 = add i32 %v0_155c9, -28
  %v2_155d0 = inttoptr i32 %v1_155d0 to i32*
  %v3_155d0 = load i32, i32* %v2_155d0, align 4
  ret i32 %v3_155d0

; uselistorder directives
  uselistorder i32 %v0_155a9, { 1, 0, 2, 3 }
}

define i32 @function_155d6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_155d6:
  %v0_155d6 = call i32 @function_1ab7a()
  %v0_155db = load i32, i32* @ebp, align 4
  %v1_155db = add i32 %v0_155db, -24
  %v1_155e1 = call i32 @unknown_1d8c2(i32 %v1_155db)
  %v0_155e6 = load i32, i32* @ebp, align 4
  %v1_155e6 = add i32 %v0_155e6, -12
  %v2_155e6 = inttoptr i32 %v1_155e6 to i32*
  %v3_155e6 = load i32, i32* %v2_155e6, align 4
  %v1_155e9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_155e9 = xor i32 %v1_155e9, %v3_155e6
  %v3_155e9 = icmp eq i32 %v2_155e9, 0
  store i32 %v2_155e9, i32* @eax, align 4
  br i1 %v3_155e9, label %bb, label %dec_label_pc_155f2

bb:                                               ; preds = %dec_label_pc_155d6
  %v1_155f0 = call i32 @function_15610()
  store i32 %v1_155f0, i32* @eax, align 4
  br label %dec_label_pc_155f2

dec_label_pc_155f2:                               ; preds = %bb, %dec_label_pc_155d6
  %v0_155f2 = call i32 @function_1560b()
  ret i32 %v0_155f2
}

define i32 @function_155f5() local_unnamed_addr {
dec_label_pc_155f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_155f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_155f5
}

define i32 @function_1560b() local_unnamed_addr {
dec_label_pc_1560b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15610() local_unnamed_addr {
dec_label_pc_15610:
  %v0_15615 = load i32, i32* @eax, align 4
  ret i32 %v0_15615
}

define i32 @_Z16GetSerializeSizeI7CBigNumEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15616:
  store i32 %arg1, i32* @eax, align 4
  %v3_1564d = call i32 @function_1afbc(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1564d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1565e

bb:                                               ; preds = %dec_label_pc_15616
  %v1_1565c = call i32 @function_15663()
  br label %dec_label_pc_1565e

dec_label_pc_1565e:                               ; preds = %bb, %dec_label_pc_15616
  %v2_1565c = phi i32 [ %v1_1565c, %bb ], [ %v3_1564d, %dec_label_pc_15616 ]
  ret i32 %v2_1565c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15663() local_unnamed_addr {
dec_label_pc_15663:
  %v0_15664 = load i32, i32* @eax, align 4
  ret i32 %v0_15664
}

define i32 @_Z9SerializeI11CDataStream7CBigNumEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15665:
  %v8_156a9 = call i32 @unknown_2d04b(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_156ba

bb:                                               ; preds = %dec_label_pc_15665
  %v1_156b8 = call i32 @function_156bf()
  br label %dec_label_pc_156ba

dec_label_pc_156ba:                               ; preds = %bb, %dec_label_pc_15665
  %v2_156b8 = phi i32 [ %v1_156b8, %bb ], [ 0, %dec_label_pc_15665 ]
  ret i32 %v2_156b8

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_156bf() local_unnamed_addr {
dec_label_pc_156bf:
  %v0_156c0 = load i32, i32* @eax, align 4
  ret i32 %v0_156c0
}

define i32 @_Z16GetSerializeSizeI14CBlockFileInfoEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_156c1:
  %v3_156f8 = call i32 @unknown_1bf61(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_156f8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15709

bb:                                               ; preds = %dec_label_pc_156c1
  %v1_15707 = call i32 @function_1570e()
  br label %dec_label_pc_15709

dec_label_pc_15709:                               ; preds = %bb, %dec_label_pc_156c1
  %v2_15707 = phi i32 [ %v1_15707, %bb ], [ %v3_156f8, %dec_label_pc_156c1 ]
  ret i32 %v2_15707
}

define i32 @function_1570e() local_unnamed_addr {
dec_label_pc_1570e:
  %v0_1570f = load i32, i32* @eax, align 4
  ret i32 %v0_1570f
}

define i32 @_Z9SerializeI11CDataStream14CBlockFileInfoEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15710:
  %v8_15754 = call i32 @unknown_2d190(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15765

bb:                                               ; preds = %dec_label_pc_15710
  %v1_15763 = call i32 @function_1576a()
  br label %dec_label_pc_15765

dec_label_pc_15765:                               ; preds = %bb, %dec_label_pc_15710
  %v2_15763 = phi i32 [ %v1_15763, %bb ], [ 0, %dec_label_pc_15710 ]
  ret i32 %v2_15763

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1576a() local_unnamed_addr {
dec_label_pc_1576a:
  %v0_1576b = load i32, i32* @eax, align 4
  ret i32 %v0_1576b
}

define i32 @_ZN14CBlockFileInfo11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1576c:
  %stack_var_-68 = alloca i32, align 4
  %v1_157b1 = call i32 @unknown_1ebe7(i32 %arg1)
  %v2_157b6 = ptrtoint i32* %stack_var_-68 to i32
  %v2_157c0 = call i32 @unknown_1ec14(i32 %v2_157b6, i32 %v1_157b1)
  ret i32 %v2_157c0
}

define i32 @function_157c6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_157c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_157c7 = load i32, i32* @eax, align 4
  %v1_157c7 = trunc i32 %v0_157c7 to i8
  %v2_157c7 = add i8 %v1_157c7, -115
  %v16_157c7 = zext i8 %v2_157c7 to i32
  %v18_157c7 = and i32 %v0_157c7, -256
  %v19_157c7 = or i32 %v16_157c7, %v18_157c7
  store i32 %v19_157c7, i32* %eax.global-to-local, align 4
  %v0_157c9 = load i32, i32* @ebp, align 4
  %v1_157c9 = add i32 %v0_157c9, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_157c9, i32* @ebp, align 4
  %v1_157d1 = inttoptr i32 %v19_157c7 to i8*
  %v2_157d1 = load i8, i8* %v1_157d1, align 1
  %v5_157d1 = add i8 %v2_157d1, %v2_157c7
  store i8 %v5_157d1, i8* %v1_157d1, align 1
  %v0_157d3 = load i32, i32* %eax.global-to-local, align 4
  %v0_157d9 = load i32, i32* @ebp, align 4
  %v1_157d9 = add i32 %v0_157d9, -88
  %v2_157d9 = inttoptr i32 %v1_157d9 to i32*
  %v3_157d9 = load i32, i32* %v2_157d9, align 4
  store i32 %v3_157d9, i32* %eax.global-to-local, align 4
  %v1_157e0 = add i32 %v0_157d9, -84
  %v2_157e0 = inttoptr i32 %v1_157e0 to i32*
  %v3_157e0 = load i32, i32* %v2_157e0, align 4
  store i32 %v3_157e0, i32* %eax.global-to-local, align 4
  %v1_157eb = add i32 %v0_157d9, -80
  %v2_157eb = inttoptr i32 %v1_157eb to i32*
  %v3_157eb = load i32, i32* %v2_157eb, align 4
  store i32 %v3_157eb, i32* %eax.global-to-local, align 4
  %v5_157f1 = call i32 @unknown_2ba96(i32 %v3_157eb, i32 %v0_157d3, i32 %v3_157e0, i32 %v3_157d9)
  store i32 %v5_157f1, i32* %eax.global-to-local, align 4
  %v0_157f6 = load i32, i32* @ebp, align 4
  %v1_157f6 = add i32 %v0_157f6, -36
  %v2_157f6 = inttoptr i32 %v1_157f6 to i32*
  %v3_157f6 = load i32, i32* %v2_157f6, align 4
  %v5_157f6 = add i32 %v3_157f6, %v5_157f1
  store i32 %v5_157f6, i32* %v2_157f6, align 4
  %v0_157f9 = load i32, i32* @ebp, align 4
  %v1_157f9 = add i32 %v0_157f9, -76
  %v2_157f9 = inttoptr i32 %v1_157f9 to i32*
  %v3_157f9 = load i32, i32* %v2_157f9, align 4
  %v1_157fc = add i32 %v3_157f9, ptrtoint (i8** @global_var_4.1177 to i32)
  store i32 %v1_157fc, i32* %eax.global-to-local, align 4
  %v2_15802 = call i32 @unknown_1ebe7(i32 %v1_157fc)
  store i32 %v2_15802, i32* %eax.global-to-local, align 4
  %v0_15807 = load i32, i32* @ebp, align 4
  %v1_15807 = add i32 %v0_15807, -60
  %v3_15811 = call i32 @unknown_1ec14(i32 %v1_15807, i32 %v2_15802)
  %v0_15819 = load i32, i32* @ebp, align 4
  %v1_15819 = add i32 %v0_15819, -60
  store i32 %v1_15819, i32* %eax.global-to-local, align 4
  %v1_1581f = call i32 @unknown_1ec5b(i32 %v1_15819)
  %v0_15826 = load i32, i32* @esi, align 4
  store i32 %v0_15826, i32* %eax.global-to-local, align 4
  %v0_1582c = load i32, i32* @ebp, align 4
  %v1_1582c = add i32 %v0_1582c, -88
  %v2_1582c = inttoptr i32 %v1_1582c to i32*
  %v3_1582c = load i32, i32* %v2_1582c, align 4
  store i32 %v3_1582c, i32* %eax.global-to-local, align 4
  %v1_15833 = add i32 %v0_1582c, -84
  %v2_15833 = inttoptr i32 %v1_15833 to i32*
  %v3_15833 = load i32, i32* %v2_15833, align 4
  store i32 %v3_15833, i32* %eax.global-to-local, align 4
  %v1_1583e = add i32 %v0_1582c, -80
  %v2_1583e = inttoptr i32 %v1_1583e to i32*
  %v3_1583e = load i32, i32* %v2_1583e, align 4
  store i32 %v3_1583e, i32* %eax.global-to-local, align 4
  %v5_15844 = call i32 @unknown_2ba96(i32 %v3_1583e, i32 %v1_1581f, i32 %v3_15833, i32 %v3_1582c)
  store i32 %v5_15844, i32* %eax.global-to-local, align 4
  %v0_15849 = load i32, i32* @ebp, align 4
  %v1_15849 = add i32 %v0_15849, -36
  %v2_15849 = inttoptr i32 %v1_15849 to i32*
  %v3_15849 = load i32, i32* %v2_15849, align 4
  %v5_15849 = add i32 %v3_15849, %v5_15844
  store i32 %v5_15849, i32* %v2_15849, align 4
  %v0_1584c = load i32, i32* @ebp, align 4
  %v1_1584c = add i32 %v0_1584c, -76
  %v2_1584c = inttoptr i32 %v1_1584c to i32*
  %v3_1584c = load i32, i32* %v2_1584c, align 4
  %v1_1584f = add i32 %v3_1584c, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_1584f, i32* %eax.global-to-local, align 4
  %v1_15855 = call i32 @unknown_1ebe7(i32 %v1_1584f)
  store i32 %v1_15855, i32* %eax.global-to-local, align 4
  %v0_1585a = load i32, i32* @ebp, align 4
  %v1_1585a = add i32 %v0_1585a, -56
  %v3_15864 = call i32 @unknown_1ec14(i32 %v1_1585a, i32 %v1_15855)
  %v0_1586c = load i32, i32* @ebp, align 4
  %v1_1586c = add i32 %v0_1586c, -56
  store i32 %v1_1586c, i32* %eax.global-to-local, align 4
  %v1_15872 = call i32 @unknown_1ec5b(i32 %v1_1586c)
  store i32 %v1_15872, i32* %eax.global-to-local, align 4
  %v0_15877 = load i32, i32* @ebp, align 4
  %v1_1587f = add i32 %v0_15877, -88
  %v2_1587f = inttoptr i32 %v1_1587f to i32*
  %v3_1587f = load i32, i32* %v2_1587f, align 4
  %v1_15886 = add i32 %v0_15877, -84
  %v2_15886 = inttoptr i32 %v1_15886 to i32*
  %v3_15886 = load i32, i32* %v2_15886, align 4
  %v1_15891 = add i32 %v0_15877, -80
  %v2_15891 = inttoptr i32 %v1_15891 to i32*
  %v3_15891 = load i32, i32* %v2_15891, align 4
  store i32 %v3_15891, i32* %eax.global-to-local, align 4
  %v5_15897 = call i32 @unknown_2ba96(i32 %v3_15891, i32 %v1_15872, i32 %v3_15886, i32 %v3_1587f)
  store i32 %v5_15897, i32* %eax.global-to-local, align 4
  %v0_1589c = load i32, i32* @ebp, align 4
  %v1_1589c = add i32 %v0_1589c, -36
  %v2_1589c = inttoptr i32 %v1_1589c to i32*
  %v3_1589c = load i32, i32* %v2_1589c, align 4
  %v5_1589c = add i32 %v3_1589c, %v5_15897
  store i32 %v5_1589c, i32* %v2_1589c, align 4
  %v0_1589f = load i32, i32* @ebp, align 4
  %v1_1589f = add i32 %v0_1589f, -76
  %v2_1589f = inttoptr i32 %v1_1589f to i32*
  %v3_1589f = load i32, i32* %v2_1589f, align 4
  %v1_158a2 = add i32 %v3_1589f, 12
  store i32 %v1_158a2, i32* %eax.global-to-local, align 4
  %v1_158a8 = call i32 @unknown_1ebe7(i32 %v1_158a2)
  store i32 %v1_158a8, i32* %eax.global-to-local, align 4
  %v0_158ad = load i32, i32* @ebp, align 4
  %v1_158ad = add i32 %v0_158ad, -52
  %v2_158b7 = call i32 @unknown_1ec14(i32 %v1_158ad, i32 %v1_158a8)
  %v0_158bf = load i32, i32* @ebp, align 4
  %v1_158bf = add i32 %v0_158bf, -52
  store i32 %v1_158bf, i32* %eax.global-to-local, align 4
  %v1_158c5 = call i32 @unknown_1ec5b(i32 %v1_158bf)
  store i32 %v1_158c5, i32* %eax.global-to-local, align 4
  %v0_158ca = load i32, i32* @ebp, align 4
  %v1_158d2 = add i32 %v0_158ca, -88
  %v2_158d2 = inttoptr i32 %v1_158d2 to i32*
  %v3_158d2 = load i32, i32* %v2_158d2, align 4
  %v1_158d9 = add i32 %v0_158ca, -84
  %v2_158d9 = inttoptr i32 %v1_158d9 to i32*
  %v3_158d9 = load i32, i32* %v2_158d9, align 4
  %v1_158e4 = add i32 %v0_158ca, -80
  %v2_158e4 = inttoptr i32 %v1_158e4 to i32*
  %v3_158e4 = load i32, i32* %v2_158e4, align 4
  store i32 %v3_158e4, i32* %eax.global-to-local, align 4
  %v5_158ea = call i32 @unknown_2ba96(i32 %v3_158e4, i32 %v1_158c5, i32 %v3_158d9, i32 %v3_158d2)
  store i32 %v5_158ea, i32* %eax.global-to-local, align 4
  %v0_158ef = load i32, i32* @ebp, align 4
  %v1_158ef = add i32 %v0_158ef, -36
  %v2_158ef = inttoptr i32 %v1_158ef to i32*
  %v3_158ef = load i32, i32* %v2_158ef, align 4
  %v5_158ef = add i32 %v3_158ef, %v5_158ea
  store i32 %v5_158ef, i32* %v2_158ef, align 4
  %v0_158f2 = load i32, i32* @ebp, align 4
  %v1_158f2 = add i32 %v0_158f2, -76
  %v2_158f2 = inttoptr i32 %v1_158f2 to i32*
  %v3_158f2 = load i32, i32* %v2_158f2, align 4
  %v1_158f5 = add i32 %v3_158f2, 16
  store i32 %v1_158f5, i32* %eax.global-to-local, align 4
  %v1_158fb = call i32 @unknown_1ebe7(i32 %v1_158f5)
  store i32 %v1_158fb, i32* %eax.global-to-local, align 4
  %v0_15900 = load i32, i32* @ebp, align 4
  %v1_15900 = add i32 %v0_15900, -48
  %v2_1590a = call i32 @unknown_1ec14(i32 %v1_15900, i32 %v1_158fb)
  %v0_15912 = load i32, i32* @ebp, align 4
  %v1_15912 = add i32 %v0_15912, -48
  store i32 %v1_15912, i32* %eax.global-to-local, align 4
  %v1_15918 = call i32 @unknown_1ec5b(i32 %v1_15912)
  store i32 %v1_15918, i32* %eax.global-to-local, align 4
  %v0_1591d = load i32, i32* @ebp, align 4
  %v1_15925 = add i32 %v0_1591d, -88
  %v2_15925 = inttoptr i32 %v1_15925 to i32*
  %v3_15925 = load i32, i32* %v2_15925, align 4
  %v1_1592c = add i32 %v0_1591d, -84
  %v2_1592c = inttoptr i32 %v1_1592c to i32*
  %v3_1592c = load i32, i32* %v2_1592c, align 4
  %v1_15937 = add i32 %v0_1591d, -80
  %v2_15937 = inttoptr i32 %v1_15937 to i32*
  %v3_15937 = load i32, i32* %v2_15937, align 4
  store i32 %v3_15937, i32* %eax.global-to-local, align 4
  %v4_1593d = call i32 @unknown_2ba96(i32 %v3_15937, i32 %v1_15918, i32 %v3_1592c, i32 %v3_15925)
  store i32 %v4_1593d, i32* %eax.global-to-local, align 4
  %v0_15942 = load i32, i32* @ebp, align 4
  %v1_15942 = add i32 %v0_15942, -36
  %v2_15942 = inttoptr i32 %v1_15942 to i32*
  %v3_15942 = load i32, i32* %v2_15942, align 4
  %v5_15942 = add i32 %v3_15942, %v4_1593d
  store i32 %v5_15942, i32* %v2_15942, align 4
  %v0_15945 = load i32, i32* @ebp, align 4
  %v1_15945 = add i32 %v0_15945, -76
  %v2_15945 = inttoptr i32 %v1_15945 to i32*
  %v3_15945 = load i32, i32* %v2_15945, align 4
  %v1_15948 = add i32 %v3_15945, 20
  store i32 %v1_15948, i32* %eax.global-to-local, align 4
  %v1_1594e = call i32 @unknown_1ee42(i32 %v1_15948)
  store i32 %v1_1594e, i32* %eax.global-to-local, align 4
  %v0_15953 = load i32, i32* @ebp, align 4
  %v1_15953 = add i32 %v0_15953, -44
  %v2_1595d = call i32 @unknown_1ee6f(i32 %v1_15953, i32 %v1_1594e)
  %v0_15965 = load i32, i32* @ebp, align 4
  %v1_15965 = add i32 %v0_15965, -44
  store i32 %v1_15965, i32* %eax.global-to-local, align 4
  %v1_1596b = call i32 @unknown_1eeb6(i32 %v1_15965)
  store i32 %v1_1596b, i32* %eax.global-to-local, align 4
  %v0_15970 = load i32, i32* @ebp, align 4
  %v1_15970 = add i32 %v0_15970, -89
  %v2_15970 = inttoptr i32 %v1_15970 to i8*
  %v3_15970 = load i8, i8* %v2_15970, align 1
  %v4_15970 = zext i8 %v3_15970 to i32
  %v1_15978 = add i32 %v0_15970, -88
  %v2_15978 = inttoptr i32 %v1_15978 to i32*
  %v3_15978 = load i32, i32* %v2_15978, align 4
  %v1_1597f = add i32 %v0_15970, -84
  %v2_1597f = inttoptr i32 %v1_1597f to i32*
  %v3_1597f = load i32, i32* %v2_1597f, align 4
  %v1_1598a = add i32 %v0_15970, -80
  %v2_1598a = inttoptr i32 %v1_1598a to i32*
  %v3_1598a = load i32, i32* %v2_1598a, align 4
  store i32 %v3_1598a, i32* %eax.global-to-local, align 4
  %v5_15990 = call i32 @unknown_2d482(i32 %v3_1598a, i32 %v1_1596b, i32 %v3_1597f, i32 %v3_15978, i32 %v4_15970)
  store i32 %v5_15990, i32* %eax.global-to-local, align 4
  %v0_15995 = load i32, i32* @ebp, align 4
  %v1_15995 = add i32 %v0_15995, -36
  %v2_15995 = inttoptr i32 %v1_15995 to i32*
  %v3_15995 = load i32, i32* %v2_15995, align 4
  %v5_15995 = add i32 %v3_15995, %v5_15990
  store i32 %v5_15995, i32* %v2_15995, align 4
  %v0_15998 = load i32, i32* @ebp, align 4
  %v1_15998 = add i32 %v0_15998, -76
  %v2_15998 = inttoptr i32 %v1_15998 to i32*
  %v3_15998 = load i32, i32* %v2_15998, align 4
  %v1_1599b = add i32 %v3_15998, ptrtoint (i32* @global_var_1c.1180 to i32)
  store i32 %v1_1599b, i32* %eax.global-to-local, align 4
  %v1_159a1 = call i32 @unknown_1ee42(i32 %v1_1599b)
  store i32 %v1_159a1, i32* %eax.global-to-local, align 4
  %v0_159a6 = load i32, i32* @ebp, align 4
  %v1_159a6 = add i32 %v0_159a6, -40
  %v2_159b0 = call i32 @unknown_1ee6f(i32 %v1_159a6, i32 %v1_159a1)
  %v0_159b8 = load i32, i32* @ebp, align 4
  %v1_159b8 = add i32 %v0_159b8, -40
  store i32 %v1_159b8, i32* %eax.global-to-local, align 4
  %v1_159be = call i32 @unknown_1eeb6(i32 %v1_159b8)
  store i32 %v1_159be, i32* %eax.global-to-local, align 4
  %v0_159c3 = load i32, i32* @edi, align 4
  %v0_159c9 = load i32, i32* @ebp, align 4
  %v1_159c9 = add i32 %v0_159c9, -88
  %v2_159c9 = inttoptr i32 %v1_159c9 to i32*
  %v3_159c9 = load i32, i32* %v2_159c9, align 4
  %v1_159d0 = add i32 %v0_159c9, -84
  %v2_159d0 = inttoptr i32 %v1_159d0 to i32*
  %v3_159d0 = load i32, i32* %v2_159d0, align 4
  %v1_159db = add i32 %v0_159c9, -80
  %v2_159db = inttoptr i32 %v1_159db to i32*
  %v3_159db = load i32, i32* %v2_159db, align 4
  store i32 %v3_159db, i32* %eax.global-to-local, align 4
  %v5_159e1 = call i32 @unknown_2d482(i32 %v3_159db, i32 %v1_159be, i32 %v3_159d0, i32 %v3_159c9, i32 %v0_159c3)
  store i32 %v5_159e1, i32* %eax.global-to-local, align 4
  %v0_159e6 = load i32, i32* @ebp, align 4
  %v1_159e6 = add i32 %v0_159e6, -36
  %v2_159e6 = inttoptr i32 %v1_159e6 to i32*
  %v3_159e6 = load i32, i32* %v2_159e6, align 4
  %v5_159e6 = add i32 %v3_159e6, %v5_159e1
  store i32 %v5_159e6, i32* %v2_159e6, align 4
  %v0_159e9 = load i32, i32* @ebp, align 4
  %v1_159e9 = add i32 %v0_159e9, -28
  %v2_159e9 = inttoptr i32 %v1_159e9 to i32*
  %v3_159e9 = load i32, i32* %v2_159e9, align 4
  store i32 %v3_159e9, i32* %eax.global-to-local, align 4
  %v1_159ec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_159ec = xor i32 %v1_159ec, %v3_159e9
  %v3_159ec = icmp eq i32 %v2_159ec, 0
  store i32 %v2_159ec, i32* @eax, align 4
  br i1 %v3_159ec, label %bb, label %dec_label_pc_159f5

bb:                                               ; preds = %dec_label_pc_157c6
  %v1_159f3 = call i32 @function_159fa()
  store i32 %v1_159f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_159f5

dec_label_pc_159f5:                               ; preds = %bb, %dec_label_pc_157c6
  %v3_159f3 = phi i32 [ %v1_159f3, %bb ], [ %v2_159ec, %dec_label_pc_157c6 ]
  ret i32 %v3_159f3

; uselistorder directives
  uselistorder i32 %v0_15970, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1591d, { 0, 2, 1 }
  uselistorder i32 %v0_15877, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_2d482, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1eeb6, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1ee6f, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1ee42, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1ec5b, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1ec14, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32)* @unknown_1ebe7, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_2ba96, { 4, 3, 2, 1, 0, 5 }
}

define i32 @function_159fa() local_unnamed_addr {
dec_label_pc_159fa:
  %v0_159fa = load i32, i32* @ebp, align 4
  %v1_159fa = add i32 %v0_159fa, -12
  %v1_159fd = inttoptr i32 %v1_159fa to i32*
  %v2_159fd = load i32, i32* %v1_159fd, align 4
  store i32 %v2_159fd, i32* @ebx, align 4
  %v1_15a00 = inttoptr i32 %v0_159fa to i32*
  %v2_15a00 = load i32, i32* %v1_15a00, align 4
  store i32 %v2_15a00, i32* @ebp, align 4
  %v0_15a01 = load i32, i32* @eax, align 4
  ret i32 %v0_15a01
}

define i32 @_Z11UnserializeI11CDataStream7CVarIntIiEEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15a02:
  ret i32 %arg1
}

define i32 @function_15a40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15a40:
  %v0_15a40 = load i32, i32* @ebp, align 4
  %v1_15a40 = add i32 %v0_15a40, -32
  %v2_15a40 = inttoptr i32 %v1_15a40 to i32*
  %v3_15a40 = load i32, i32* %v2_15a40, align 4
  %v1_15a46 = call i32 @unknown_2d780(i32 %v3_15a40)
  %v0_15a4b = load i32, i32* @ebp, align 4
  %v1_15a4b = add i32 %v0_15a4b, -12
  %v2_15a4b = inttoptr i32 %v1_15a4b to i32*
  %v3_15a4b = load i32, i32* %v2_15a4b, align 4
  %v1_15a4e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15a4e = xor i32 %v1_15a4e, %v3_15a4b
  %v3_15a4e = icmp eq i32 %v2_15a4e, 0
  store i32 %v2_15a4e, i32* @eax, align 4
  br i1 %v3_15a4e, label %bb, label %dec_label_pc_15a57

bb:                                               ; preds = %dec_label_pc_15a40
  %v1_15a55 = call i32 @function_15a5c()
  br label %dec_label_pc_15a57

dec_label_pc_15a57:                               ; preds = %bb, %dec_label_pc_15a40
  %v2_15a55 = phi i32 [ %v1_15a55, %bb ], [ %v2_15a4e, %dec_label_pc_15a40 ]
  ret i32 %v2_15a55
}

define i32 @function_15a5c() local_unnamed_addr {
dec_label_pc_15a5c:
  %v0_15a5d = load i32, i32* @eax, align 4
  ret i32 %v0_15a5d
}

define i32 @_Z11UnserializeI11CDataStream7CVarIntIjEEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15a5e:
  %v8_15aa2 = call i32 @unknown_2d830(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15ab3

bb:                                               ; preds = %dec_label_pc_15a5e
  %v1_15ab1 = call i32 @function_15ab8()
  br label %dec_label_pc_15ab3

dec_label_pc_15ab3:                               ; preds = %bb, %dec_label_pc_15a5e
  %v2_15ab1 = phi i32 [ %v1_15ab1, %bb ], [ 0, %dec_label_pc_15a5e ]
  ret i32 %v2_15ab1

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15ab8() local_unnamed_addr {
dec_label_pc_15ab8:
  %v0_15ab9 = load i32, i32* @eax, align 4
  ret i32 %v0_15ab9
}

define i32 @_ZNSaIbEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15aba:
  %v1_15ad7 = call i32 @unknown_2d8e0(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15ae8

bb:                                               ; preds = %dec_label_pc_15aba
  %v1_15ae6 = call i32 @function_15aed()
  br label %dec_label_pc_15ae8

dec_label_pc_15ae8:                               ; preds = %bb, %dec_label_pc_15aba
  %v2_15ae6 = phi i32 [ %v1_15ae6, %bb ], [ 0, %dec_label_pc_15aba ]
  ret i32 %v2_15ae6
}

define i32 @function_15aed() local_unnamed_addr {
dec_label_pc_15aed:
  %v0_15aee = load i32, i32* @eax, align 4
  ret i32 %v0_15aee
}

define i32 @_ZNSaIbED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15af0:
  %v1_15b0d = call i32 @unknown_2d940(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15b1e

bb:                                               ; preds = %dec_label_pc_15af0
  %v1_15b1c = call i32 @function_15b23()
  br label %dec_label_pc_15b1e

dec_label_pc_15b1e:                               ; preds = %bb, %dec_label_pc_15af0
  %v2_15b1c = phi i32 [ %v1_15b1c, %bb ], [ 0, %dec_label_pc_15af0 ]
  ret i32 %v2_15b1c
}

define i32 @function_15b23() local_unnamed_addr {
dec_label_pc_15b23:
  %v0_15b24 = load i32, i32* @eax, align 4
  ret i32 %v0_15b24
}

define i32 @_ZNSt6vectorIbSaIbEEC1EjRKbRKS0_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15b26:
  %stack_var_-20 = alloca i32, align 4
  %tmp108 = inttoptr i32 %arg3 to i8*
  %tmp113 = ptrtoint i32* %arg1 to i32
  %v2_15b5d = call i32 @unknown_2d9d6(i32 %tmp113, i32 %arg4)
  %v2_15b6f = call i32 @unknown_2da76(i32 %tmp113, i32 %arg2)
  %v2_15b77 = load i8, i8* %tmp108, align 1
  %v5_15b7a = icmp eq i8 %v2_15b77, 0
  %not.v5_15b7a = icmp ne i1 %v5_15b7a, true
  %. = sext i1 %not.v5_15b7a to i32
  store i32 %., i32* %stack_var_-20, align 4
  %v1_15b90 = add i32 %tmp113, 16
  %v2_15b90 = inttoptr i32 %v1_15b90 to i32*
  %v3_15b90 = load i32, i32* %v2_15b90, align 4
  %v2_15b96 = load i32, i32* %arg1, align 4
  %v2_15b98 = ptrtoint i32* %stack_var_-20 to i32
  %v3_15ba6 = call i32 @unknown_1d36a(i32 %v2_15b96, i32 %v3_15b90, i32 %v2_15b98)
  %v0_15bab = call i32 @function_15bc4()
  ret i32 %v0_15bab

; uselistorder directives
  uselistorder i32 %tmp113, { 2, 1, 0 }
}

define i32 @function_15bae() local_unnamed_addr {
dec_label_pc_15bae:
  %eax.global-to-local = alloca i32, align 4
  %v0_15bae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15bae
}

define i32 @function_15bc4() local_unnamed_addr {
dec_label_pc_15bc4:
  %v0_15bc4 = load i32, i32* @ebp, align 4
  %v1_15bc4 = add i32 %v0_15bc4, -12
  %v2_15bc4 = inttoptr i32 %v1_15bc4 to i32*
  %v3_15bc4 = load i32, i32* %v2_15bc4, align 4
  %v1_15bc7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15bc7 = xor i32 %v1_15bc7, %v3_15bc4
  %v3_15bc7 = icmp eq i32 %v2_15bc7, 0
  store i32 %v2_15bc7, i32* @eax, align 4
  br i1 %v3_15bc7, label %bb, label %dec_label_pc_15bd0

bb:                                               ; preds = %dec_label_pc_15bc4
  %v1_15bce = call i32 @function_15bd5()
  br label %dec_label_pc_15bd0

dec_label_pc_15bd0:                               ; preds = %bb, %dec_label_pc_15bc4
  %v2_15bce = phi i32 [ %v1_15bce, %bb ], [ %v2_15bc7, %dec_label_pc_15bc4 ]
  ret i32 %v2_15bce
}

define i32 @function_15bd5() local_unnamed_addr {
dec_label_pc_15bd5:
  %v5_15bd9 = load i32, i32* @eax, align 4
  ret i32 %v5_15bd9
}

define i32 @function_15bda(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bda:
  %v0_15bda = load i32, i32* @eax, align 4
  ret i32 %v0_15bda
}

define i32 @_ZNSt6vectorIbSaIbEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bdc:
  %v1_15bf9 = call i32 @unknown_2daec(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15c0a

bb:                                               ; preds = %dec_label_pc_15bdc
  %v1_15c08 = call i32 @function_15c0f()
  br label %dec_label_pc_15c0a

dec_label_pc_15c0a:                               ; preds = %bb, %dec_label_pc_15bdc
  %v2_15c08 = phi i32 [ %v1_15c08, %bb ], [ 0, %dec_label_pc_15bdc ]
  ret i32 %v2_15c08
}

define i32 @function_15c0f() local_unnamed_addr {
dec_label_pc_15c0f:
  %v0_15c10 = load i32, i32* @eax, align 4
  ret i32 %v0_15c10
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_Rhii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15c11:
  ret i32 %arg2
}

define i32 @function_15c46(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c46:
  %v0_15c49 = load i32, i32* @ebp, align 4
  %v1_15c49 = add i32 %v0_15c49, -28
  %v2_15c49 = inttoptr i32 %v1_15c49 to i32*
  %v3_15c49 = load i32, i32* %v2_15c49, align 4
  %v1_15c4f = call i32 @function_1a617(i32 %v3_15c49)
  %v0_15c54 = load i32, i32* @ebp, align 4
  %v1_15c54 = add i32 %v0_15c54, -12
  %v2_15c54 = inttoptr i32 %v1_15c54 to i32*
  %v3_15c54 = load i32, i32* %v2_15c54, align 4
  %v1_15c57 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15c57 = xor i32 %v1_15c57, %v3_15c54
  %v3_15c57 = icmp eq i32 %v2_15c57, 0
  store i32 %v2_15c57, i32* @eax, align 4
  br i1 %v3_15c57, label %bb, label %dec_label_pc_15c60

bb:                                               ; preds = %dec_label_pc_15c46
  %v1_15c5e = call i32 @function_15c65()
  br label %dec_label_pc_15c60

dec_label_pc_15c60:                               ; preds = %bb, %dec_label_pc_15c46
  %v2_15c5e = phi i32 [ %v1_15c5e, %bb ], [ %v2_15c57, %dec_label_pc_15c46 ]
  ret i32 %v2_15c5e
}

define i32 @function_15c65() local_unnamed_addr {
dec_label_pc_15c65:
  %v0_15c66 = load i32, i32* @eax, align 4
  ret i32 %v0_15c66
}

define i32 @_ZNSt6vectorIbSaIbEE9push_backEb(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_15c68:
  ret i32 %arg1
}

define i32 @function_15c8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c8a:
  %cf.global-to-local = alloca i1, align 1
  %v0_15c8b = load i32, i32* @ebx, align 4
  %v1_15c8b = add i32 %v0_15c8b, 1082905669
  %v2_15c8b = inttoptr i32 %v1_15c8b to i8*
  %v3_15c8b = load i8, i8* %v2_15c8b, align 1
  %v4_15c8b = load i32, i32* @ecx, align 4
  %v5_15c8b = trunc i32 %v4_15c8b to i8
  %v6_15c8b = or i8 %v5_15c8b, %v3_15c8b
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_15c8b, i8* %v2_15c8b, align 1
  %v2_15c91 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_15c91 = load i32, i32* @ebx, align 4
  %v4_15c91 = lshr i32 %v3_15c91, ptrtoint (i32* @global_var_8.1178 to i32)
  %v5_15c91 = trunc i32 %v4_15c91 to i8
  %v6_15c91 = load i1, i1* %cf.global-to-local, align 1
  %v7_15c91 = zext i1 %v6_15c91 to i8
  %v8_15c91 = add i8 %v5_15c91, %v2_15c91
  %v9_15c91 = add i8 %v8_15c91, %v7_15c91
  %v27_15c91 = icmp ule i8 %v9_15c91, %v2_15c91
  %v28_15c91 = icmp ult i8 %v8_15c91, %v2_15c91
  %v29_15c91 = select i1 %v6_15c91, i1 %v27_15c91, i1 %v28_15c91
  store i1 %v29_15c91, i1* %cf.global-to-local, align 1
  %v30_15c91 = load i32, i32* @ecx, align 4
  %v31_15c91 = inttoptr i32 %v30_15c91 to i8*
  store i8 %v9_15c91, i8* %v31_15c91, align 1
  %v0_15c93 = load i32, i32* @eax, align 4
  ret i32 %v0_15c93

; uselistorder directives
  uselistorder i8 %v9_15c91, { 1, 0 }
  uselistorder i8 %v8_15c91, { 1, 0 }
  uselistorder i8 %v2_15c91, { 1, 2, 0 }
}

define i32 @function_15cc6(i32 %arg1) local_unnamed_addr {
dec_label_pc_15cc6:
  %v0_15cc6 = load i32, i32* @eax, align 4
  %v11_15cc6 = and i32 %v0_15cc6, -24
  %v2_15cc9 = inttoptr i32 %v11_15cc6 to i32*
  %v3_15cc9 = load i32, i32* %v2_15cc9, align 8
  %v4_15cc9 = and i32 %v3_15cc9, %v11_15cc6
  %v7_15cc9 = trunc i32 %v4_15cc9 to i8
  %v0_15ccb = load i32, i32* @ebx, align 4
  %v1_15ccb = add i32 %v0_15ccb, 1552483564
  %v2_15ccb = inttoptr i32 %v1_15ccb to i8*
  %v3_15ccb = load i8, i8* %v2_15ccb, align 1
  %v6_15ccb = add i8 %v3_15ccb, %v7_15cc9
  store i8 %v6_15ccb, i8* %v2_15ccb, align 1
  %v0_15cd3 = load i32, i32* @ebp, align 4
  %v1_15cd3 = add i32 %v0_15cd3, -28
  %v1_15cde = call i32 @function_15d16(i32 %v1_15cd3)
  ret i32 %v1_15cde
}

define i32 @function_15cf3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15cf3:
  %v2_15cf4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15cf4 = load i32, i32* @eax, align 4
  %v4_15cf4 = trunc i32 %v3_15cf4 to i8
  %v5_15cf4 = add i8 %v4_15cf4, %v2_15cf4
  %v21_15cf4 = inttoptr i32 %v3_15cf4 to i8*
  store i8 %v5_15cf4, i8* %v21_15cf4, align 1
  %v0_15cf9 = load i32, i32* @ebx, align 4
  %v0_15cfd = load i32, i32* @ebp, align 4
  %v1_15cfd = add i32 %v0_15cfd, -20
  %v2_15cfd = inttoptr i32 %v1_15cfd to i32*
  %v3_15cfd = load i32, i32* %v2_15cfd, align 4
  %v1_15d00 = add i32 %v0_15cfd, -16
  %v2_15d00 = inttoptr i32 %v1_15d00 to i32*
  %v3_15d00 = load i32, i32* %v2_15d00, align 4
  %v1_15d0b = add i32 %v0_15cfd, -44
  %v2_15d0b = inttoptr i32 %v1_15d0b to i32*
  %v3_15d0b = load i32, i32* %v2_15d0b, align 4
  %v4_15d11 = call i32 @unknown_2dc6c(i32 %v3_15d0b, i32 %v3_15cfd, i32 %v3_15d00, i32 %v0_15cf9)
  ret i32 %v4_15d11
}

define i32 @function_15d16(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d16:
  %v0_15d16 = load i32, i32* @ebp, align 4
  %v1_15d16 = add i32 %v0_15d16, -12
  %v2_15d16 = inttoptr i32 %v1_15d16 to i32*
  %v3_15d16 = load i32, i32* %v2_15d16, align 4
  %v1_15d19 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15d19 = xor i32 %v1_15d19, %v3_15d16
  %v3_15d19 = icmp eq i32 %v2_15d19, 0
  store i32 %v2_15d19, i32* @eax, align 4
  br i1 %v3_15d19, label %bb, label %dec_label_pc_15d22

bb:                                               ; preds = %dec_label_pc_15d16
  %v1_15d20 = call i32 @function_15d27()
  br label %dec_label_pc_15d22

dec_label_pc_15d22:                               ; preds = %bb, %dec_label_pc_15d16
  %v2_15d20 = phi i32 [ %v1_15d20, %bb ], [ %v2_15d19, %dec_label_pc_15d16 ]
  ret i32 %v2_15d20
}

define i32 @function_15d27() local_unnamed_addr {
dec_label_pc_15d27:
  %v0_15d27 = load i32, i32* @ebp, align 4
  %v1_15d27 = add i32 %v0_15d27, -4
  %v2_15d27 = inttoptr i32 %v1_15d27 to i32*
  %v3_15d27 = load i32, i32* %v2_15d27, align 4
  store i32 %v3_15d27, i32* @ebx, align 4
  %v0_15d2b = load i32, i32* @eax, align 4
  ret i32 %v0_15d2b
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6assignEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15d2c:
  ret i32 %arg3
}

define i32 @function_15d78() local_unnamed_addr {
dec_label_pc_15d78:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15d78 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15d78 = sub i32 %v0_15d78, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_15d78, i32* %ecx.global-to-local, align 4
  %v0_15d7a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15d7a
}

define i32 @_Z3REFI16CTxOutCompressorERT_RKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d7b:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15da1

bb:                                               ; preds = %dec_label_pc_15d7b
  %v2_15d9f = call i32 @function_15da6(i32 %arg1)
  br label %dec_label_pc_15da1

dec_label_pc_15da1:                               ; preds = %bb, %dec_label_pc_15d7b
  %v3_15d9f = phi i32 [ %v2_15d9f, %bb ], [ %arg1, %dec_label_pc_15d7b ]
  ret i32 %v3_15d9f
}

define i32 @function_15da6(i32 %arg1) local_unnamed_addr {
dec_label_pc_15da6:
  %v0_15da7 = load i32, i32* @eax, align 4
  ret i32 %v0_15da7
}

define i32 @_Z11UnserializeI11CDataStream16CTxOutCompressorEvRT_RT0_li(i32 %arg1) local_unnamed_addr {
dec_label_pc_15da8:
  ret i32 %arg1
}

define i32 @function_15db6(i32 %arg1) local_unnamed_addr {
dec_label_pc_15db6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_15db6 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_15db6 = or i32 %v0_15db6, 137
  store i32 %v11_15db6, i32* %eax.global-to-local, align 4
  %v0_15db8 = load i32, i32* @ebp, align 4
  %v0_15db9 = load i32, i32* @ecx, align 4
  %v1_15db9 = sub i32 %v0_15db9, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_15dbb = add i32 %v0_15db8, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_15dbb, i32* %ebp.global-to-local, align 4
  %v1_15dbc = add i32 %v1_15db9, 1166793797
  %v2_15dbc = inttoptr i32 %v1_15dbc to i8*
  %v3_15dbc = load i8, i8* %v2_15dbc, align 1
  %v5_15dbc = trunc i32 %v1_15db9 to i8
  %v8_15dbc = add i8 %v3_15dbc, %v5_15dbc
  %v28_15dbc = icmp ult i8 %v8_15dbc, %v3_15dbc
  store i1 %v28_15dbc, i1* %cf.global-to-local, align 1
  store i8 %v8_15dbc, i8* %v2_15dbc, align 1
  %v0_15dc2 = load i32, i32* %eax.global-to-local, align 4
  %v1_15dc2 = trunc i32 %v0_15dc2 to i8
  %v2_15dc2 = load i1, i1* %cf.global-to-local, align 1
  %v3_15dc2 = zext i1 %v2_15dc2 to i8
  %v4_15dc2 = add i8 %v1_15dc2, -119
  %v5_15dc2 = add i8 %v4_15dc2, %v3_15dc2
  %v22_15dc2 = icmp ule i8 %v5_15dc2, %v1_15dc2
  %v23_15dc2 = icmp ugt i8 %v1_15dc2, 118
  %v24_15dc2 = select i1 %v2_15dc2, i1 %v22_15dc2, i1 %v23_15dc2
  %v25_15dc2 = zext i8 %v5_15dc2 to i32
  %v27_15dc2 = and i32 %v0_15dc2, -256
  %v28_15dc2 = or i32 %v25_15dc2, %v27_15dc2
  store i32 %v28_15dc2, i32* %eax.global-to-local, align 4
  %v0_15dc4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15dc4 = add i32 %v0_15dc4, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_15dc4, i32* @ebp, align 4
  %v3_15dc8 = zext i1 %v24_15dc2 to i8
  %v4_15dc8 = add i8 %v3_15dc8, %v5_15dc2
  %v19_15dc8 = icmp ule i8 %v4_15dc8, %v5_15dc2
  %v21_15dc8 = icmp eq i1 %v24_15dc2, %v19_15dc8
  store i1 %v21_15dc8, i1* %cf.global-to-local, align 1
  %v22_15dc8 = zext i8 %v4_15dc8 to i32
  %v25_15dc8 = or i32 %v22_15dc8, %v27_15dc2
  store i32 %v25_15dc8, i32* %eax.global-to-local, align 4
  %v1_15dca = inttoptr i32 %v25_15dc8 to i8*
  %v2_15dca = load i8, i8* %v1_15dca, align 1
  %v5_15dca = add i8 %v2_15dca, %v4_15dc8
  store i8 %v5_15dca, i8* %v1_15dca, align 1
  %v0_15dcc = load i32, i32* %eax.global-to-local, align 4
  %v1_15dcc = load i32, i32* @ebp, align 4
  %v2_15dcc = add i32 %v1_15dcc, -12
  %v3_15dcc = inttoptr i32 %v2_15dcc to i32*
  store i32 %v0_15dcc, i32* %v3_15dcc, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_15dd1 = load i32, i32* @ebp, align 4
  %v1_15dd1 = add i32 %v0_15dd1, -40
  %v2_15dd1 = inttoptr i32 %v1_15dd1 to i32*
  %v3_15dd1 = load i32, i32* %v2_15dd1, align 4
  store i32 %v3_15dd1, i32* %eax.global-to-local, align 4
  %v1_15dd8 = add i32 %v0_15dd1, -36
  %v2_15dd8 = inttoptr i32 %v1_15dd8 to i32*
  %v3_15dd8 = load i32, i32* %v2_15dd8, align 4
  store i32 %v3_15dd8, i32* %eax.global-to-local, align 4
  %v1_15ddf = add i32 %v0_15dd1, -28
  %v2_15ddf = inttoptr i32 %v1_15ddf to i32*
  %v3_15ddf = load i32, i32* %v2_15ddf, align 4
  store i32 %v3_15ddf, i32* %eax.global-to-local, align 4
  %v1_15de6 = add i32 %v0_15dd1, -32
  %v2_15de6 = inttoptr i32 %v1_15de6 to i32*
  %v3_15de6 = load i32, i32* %v2_15de6, align 4
  store i32 %v3_15de6, i32* %eax.global-to-local, align 4
  %v4_15dec = call i32 @unknown_2e1f0(i32 %v3_15de6, i32 %v3_15ddf, i32 %v3_15dd8, i32 %v3_15dd1)
  store i32 %v4_15dec, i32* %eax.global-to-local, align 4
  %v0_15df1 = load i32, i32* @ebp, align 4
  %v1_15df1 = add i32 %v0_15df1, -12
  %v2_15df1 = inttoptr i32 %v1_15df1 to i32*
  %v3_15df1 = load i32, i32* %v2_15df1, align 4
  store i32 %v3_15df1, i32* %eax.global-to-local, align 4
  %v1_15df4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15df4 = xor i32 %v1_15df4, %v3_15df1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_15df4 = icmp eq i32 %v2_15df4, 0
  store i32 %v2_15df4, i32* @eax, align 4
  br i1 %v3_15df4, label %bb, label %dec_label_pc_15dfd

bb:                                               ; preds = %dec_label_pc_15db6
  %v1_15dfb = call i32 @function_15e02()
  store i32 %v1_15dfb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_15dfd

dec_label_pc_15dfd:                               ; preds = %bb, %dec_label_pc_15db6
  %v3_15dfb = phi i32 [ %v1_15dfb, %bb ], [ %v2_15df4, %dec_label_pc_15db6 ]
  ret i32 %v3_15dfb

; uselistorder directives
  uselistorder i32 %v0_15dd1, { 1, 0, 2, 3 }
  uselistorder i8 %v4_15dc8, { 0, 2, 1 }
  uselistorder i8 %v5_15dc2, { 1, 0, 3, 2 }
  uselistorder i8 %v3_15dbc, { 1, 0 }
  uselistorder i32 %v1_15db9, { 1, 0 }
}

define i32 @function_15e02() local_unnamed_addr {
dec_label_pc_15e02:
  %v0_15e03 = load i32, i32* @eax, align 4
  ret i32 %v0_15e03
}

define i32 @_Z11WriteVarIntI11CHashWriteriEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15e04:
  ret i32 %arg2
}

define i32 @function_15e16(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e16:
  %eax.global-to-local = alloca i32, align 4
  %v0_15e16 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_15e1c = load i32, i32* @ebp, align 4
  %v2_15e1c = add i32 %v1_15e1c, -12
  %v3_15e1c = inttoptr i32 %v2_15e1c to i32*
  store i32 %v0_15e16, i32* %v3_15e1c, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_15e21 = load i32, i32* @ebp, align 4
  %v1_15e21 = add i32 %v0_15e21, -24
  %v2_15e21 = inttoptr i32 %v1_15e21 to i32*
  store i32 0, i32* %v2_15e21, align 4
  br label %dec_label_pc_15e28

dec_label_pc_15e28:                               ; preds = %dec_label_pc_15e54, %dec_label_pc_15e16
  %v0_15e28 = load i32, i32* @ebp, align 4
  %v1_15e28 = add i32 %v0_15e28, -32
  %v2_15e28 = inttoptr i32 %v1_15e28 to i32*
  %v3_15e28 = load i32, i32* %v2_15e28, align 4
  store i32 %v3_15e28, i32* %eax.global-to-local, align 4
  %v1_15e2d = urem i32 %v3_15e28, 128
  %v1_15e30 = add i32 %v0_15e28, -24
  %v2_15e30 = inttoptr i32 %v1_15e30 to i32*
  %v3_15e30 = load i32, i32* %v2_15e30, align 4
  %v10_15e30 = icmp eq i32 %v3_15e30, 0
  %. = select i1 %v10_15e30, i32 0, i32 128
  %v2_15e42 = or i32 %., %v1_15e2d
  %v1_15e46 = add i32 %v0_15e28, -17
  store i32 %v1_15e46, i32* %eax.global-to-local, align 4
  %v4_15e49 = load i32, i32* %v2_15e30, align 4
  %v5_15e49 = add i32 %v4_15e49, %v1_15e46
  store i32 %v5_15e49, i32* %eax.global-to-local, align 4
  %v1_15e4c = trunc i32 %v2_15e42 to i8
  %v3_15e4c = inttoptr i32 %v5_15e49 to i8*
  store i8 %v1_15e4c, i8* %v3_15e4c, align 1
  %v0_15e4e = load i32, i32* @ebp, align 4
  %v1_15e4e = add i32 %v0_15e4e, -32
  %v2_15e4e = inttoptr i32 %v1_15e4e to i32*
  %v3_15e4e = load i32, i32* %v2_15e4e, align 4
  %v7_15e52 = icmp sgt i32 %v3_15e4e, 127
  br i1 %v7_15e52, label %dec_label_pc_15e54, label %dec_label_pc_15e67

dec_label_pc_15e54:                               ; preds = %dec_label_pc_15e28
  %v2_15e57 = sdiv i32 %v3_15e4e, 128
  %v1_15e5a = add nsw i32 %v2_15e57, -1
  store i32 %v1_15e5a, i32* %eax.global-to-local, align 4
  store i32 %v1_15e5a, i32* %v2_15e4e, align 4
  %v0_15e60 = load i32, i32* @ebp, align 4
  %v1_15e60 = add i32 %v0_15e60, -24
  %v2_15e60 = inttoptr i32 %v1_15e60 to i32*
  %v3_15e60 = load i32, i32* %v2_15e60, align 4
  %v4_15e60 = add i32 %v3_15e60, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_15e60, i32* %v2_15e60, align 4
  br label %dec_label_pc_15e28

dec_label_pc_15e67:                               ; preds = %dec_label_pc_15e28, %dec_label_pc_15e67
  %v0_15e8b = phi i32 [ %v0_15e67.pre, %dec_label_pc_15e67 ], [ %v0_15e4e, %dec_label_pc_15e28 ]
  %v1_15e67 = add i32 %v0_15e8b, -17
  store i32 %v1_15e67, i32* %eax.global-to-local, align 4
  %v2_15e6a = add i32 %v0_15e8b, -24
  %v3_15e6a = inttoptr i32 %v2_15e6a to i32*
  %v4_15e6a = load i32, i32* %v3_15e6a, align 4
  %v5_15e6a = add i32 %v4_15e6a, %v1_15e67
  store i32 %v5_15e6a, i32* %eax.global-to-local, align 4
  %v1_15e79 = add i32 %v0_15e8b, -28
  %v2_15e79 = inttoptr i32 %v1_15e79 to i32*
  %v3_15e79 = load i32, i32* %v2_15e79, align 4
  store i32 %v3_15e79, i32* %eax.global-to-local, align 4
  %v3_15e84 = load i32, i32* %v3_15e6a, align 4
  %v10_15e84 = icmp eq i32 %v3_15e84, 0
  %v1_15e88 = icmp eq i1 %v10_15e84, false
  %v2_15e88 = zext i1 %v1_15e88 to i32
  %v4_15e88 = and i32 %v3_15e79, -256
  %v5_15e88 = or i32 %v2_15e88, %v4_15e88
  store i32 %v5_15e88, i32* %eax.global-to-local, align 4
  %v3_15e8b = load i32, i32* %v3_15e6a, align 4
  %v4_15e8b = sub i32 %v3_15e8b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_15e8b, i32* %v3_15e6a, align 4
  %v0_15e8f = load i32, i32* %eax.global-to-local, align 4
  %v4_15e8f = trunc i32 %v0_15e8f to i8
  %v5_15e8f = icmp eq i8 %v4_15e8f, 0
  %v1_15e91 = icmp eq i1 %v5_15e8f, false
  %v0_15e67.pre = load i32, i32* @ebp, align 4
  br i1 %v1_15e91, label %dec_label_pc_15e67, label %dec_label_pc_15e93

dec_label_pc_15e93:                               ; preds = %dec_label_pc_15e67
  %v1_15e93 = add i32 %v0_15e67.pre, -12
  %v2_15e93 = inttoptr i32 %v1_15e93 to i32*
  %v3_15e93 = load i32, i32* %v2_15e93, align 4
  store i32 %v3_15e93, i32* %eax.global-to-local, align 4
  %v1_15e96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15e96 = xor i32 %v1_15e96, %v3_15e93
  %v3_15e96 = icmp eq i32 %v2_15e96, 0
  store i32 %v2_15e96, i32* @eax, align 4
  br i1 %v3_15e96, label %bb, label %dec_label_pc_15e9f

bb:                                               ; preds = %dec_label_pc_15e93
  %v5_15e9d = call i32 @function_15ea4(i32 %v3_15e79, i32 %v5_15e6a, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v5_15e9d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_15e9f

dec_label_pc_15e9f:                               ; preds = %bb, %dec_label_pc_15e93
  %v6_15e9d = phi i32 [ %v5_15e9d, %bb ], [ %v2_15e96, %dec_label_pc_15e93 ]
  ret i32 %v6_15e9d

; uselistorder directives
  uselistorder i32 %v0_15e8b, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15e67, { 1, 0 }
}

define i32 @function_15ea4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15ea4:
  %v0_15ea5 = load i32, i32* @eax, align 4
  ret i32 %v0_15ea5
}

define i32 @_Z11WriteVarIntI11CHashWriterjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15ea6:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %v2_15ee6 = ptrtoint i32* %stack_var_-21 to i32
  %v1_15ecf110 = urem i32 %arg2, 128
  store i32 %v2_15ee6, i32* %eax.global-to-local, align 4
  %v1_15eec111 = trunc i32 %v1_15ecf110 to i8
  %v3_15eec112 = bitcast i32* %stack_var_-21 to i8*
  store i8 %v1_15eec111, i8* %v3_15eec112, align 4
  %tmp118 = icmp ult i32 %arg2, 128
  br i1 %tmp118, label %dec_label_pc_15f07, label %dec_label_pc_15ef4

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15ea6, %dec_label_pc_15ef4
  %v5_15ee9116 = phi i32 [ %v5_15f00, %dec_label_pc_15ef4 ], [ 0, %dec_label_pc_15ea6 ]
  %stack_var_-36.0115 = phi i32 [ %v1_15efa, %dec_label_pc_15ef4 ], [ %arg2, %dec_label_pc_15ea6 ]
  %v2_15ef7 = udiv i32 %stack_var_-36.0115, 128
  %v1_15efa = add nsw i32 %v2_15ef7, -1
  %v5_15f00 = add i32 %v5_15ee9116, ptrtoint (i8** @global_var_1.1176 to i32)
  %v14_15f00 = icmp eq i32 %v5_15f00, 0
  %v1_15ecf = urem i32 %v1_15efa, 128
  %. = select i1 %v14_15f00, i32 0, i32 128
  %v2_15ee4 = or i32 %., %v1_15ecf
  %v6_15ee9 = add i32 %v5_15f00, %v2_15ee6
  store i32 %v6_15ee9, i32* %eax.global-to-local, align 4
  %v1_15eec = trunc i32 %v2_15ee4 to i8
  %v3_15eec = inttoptr i32 %v6_15ee9 to i8*
  store i8 %v1_15eec, i8* %v3_15eec, align 4
  %tmp119 = icmp ult i32 %v1_15efa, 128
  br i1 %tmp119, label %dec_label_pc_15eca.dec_label_pc_15f07_crit_edge, label %dec_label_pc_15ef4

dec_label_pc_15eca.dec_label_pc_15f07_crit_edge:  ; preds = %dec_label_pc_15ef4
  %v0_15f06.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_15f07

dec_label_pc_15f07:                               ; preds = %dec_label_pc_15eca.dec_label_pc_15f07_crit_edge, %dec_label_pc_15ea6
  %v0_15f06 = phi i32 [ %v0_15f06.pre, %dec_label_pc_15eca.dec_label_pc_15f07_crit_edge ], [ %v2_15ee6, %dec_label_pc_15ea6 ]
  ret i32 %v0_15f06

; uselistorder directives
  uselistorder i32 %v5_15f00, { 1, 2, 0 }
  uselistorder i32 %v1_15efa, { 2, 0, 1 }
  uselistorder i32 %v2_15ee6, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15ef4, { 1, 0 }
}

define i32 @function_15f10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_15f10:
  %v2_15f10 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_15f10 = load i32, i32* @eax, align 4
  %v4_15f10 = trunc i32 %v3_15f10 to i8
  %v5_15f10 = or i8 %v4_15f10, %v2_15f10
  %v11_15f10 = load i32, i32* @ecx, align 4
  %v12_15f10 = inttoptr i32 %v11_15f10 to i8*
  store i8 %v5_15f10, i8* %v12_15f10, align 1
  %v2_15f12 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15f12 = load i32, i32* @eax, align 4
  %v4_15f12 = trunc i32 %v3_15f12 to i8
  %v5_15f12 = add i8 %v4_15f12, %v2_15f12
  %v21_15f12 = inttoptr i32 %v3_15f12 to i8*
  store i8 %v5_15f12, i8* %v21_15f12, align 1
  %v0_15f14 = load i32, i32* @ecx, align 4
  %v1_15f14 = add i32 %v0_15f14, -1962662844
  %v2_15f14 = inttoptr i32 %v1_15f14 to i8*
  %v3_15f14 = load i8, i8* %v2_15f14, align 1
  %v5_15f14 = trunc i32 %v0_15f14 to i8
  %v6_15f14 = add i8 %v3_15f14, %v5_15f14
  store i8 %v6_15f14, i8* %v2_15f14, align 1
  %v0_15f1a = load i32, i32* @ebp, align 4
  %v1_15f1a = add i32 %v0_15f1a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_15f1a, i32* @ebp, align 4
  %v0_15f1f = call i32 @function_1aba4()
  %v0_15f24 = load i32, i32* @ebp, align 4
  %v1_15f24 = add i32 %v0_15f24, -24
  %v2_15f24 = inttoptr i32 %v1_15f24 to i32*
  %v3_15f2b = load i32, i32* %v2_15f24, align 4
  %v4_15f2b = sub i32 %v3_15f2b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_15f2b, i32* %v2_15f24, align 4
  %v0_15f33 = load i32, i32* @ebp, align 4
  %v1_15f33 = add i32 %v0_15f33, -12
  %v2_15f33 = inttoptr i32 %v1_15f33 to i32*
  %v3_15f33 = load i32, i32* %v2_15f33, align 4
  %v1_15f36 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15f36 = xor i32 %v1_15f36, %v3_15f33
  %v3_15f36 = icmp eq i32 %v2_15f36, 0
  store i32 %v2_15f36, i32* @eax, align 4
  br i1 %v3_15f36, label %bb, label %dec_label_pc_15f3f

bb:                                               ; preds = %dec_label_pc_15f10
  %v1_15f3d = call i32 @function_15f44()
  br label %dec_label_pc_15f3f

dec_label_pc_15f3f:                               ; preds = %bb, %dec_label_pc_15f10
  %v3_15f3d = phi i32 [ %v1_15f3d, %bb ], [ %v2_15f36, %dec_label_pc_15f10 ]
  ret i32 %v3_15f3d

; uselistorder directives
  uselistorder i32 -1962662844, { 1, 0 }
}

define i32 @function_15f44() local_unnamed_addr {
dec_label_pc_15f44:
  %v0_15f45 = load i32, i32* @eax, align 4
  ret i32 %v0_15f45
}

define i32 @_Z12SerReadWriteI11CHashWriterxEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15f46:
  %tmp110 = ptrtoint i32* %arg2 to i32
  %v1_15f79 = add i32 %tmp110, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_15f79 = inttoptr i32 %v1_15f79 to i32*
  %v3_15f79 = load i32, i32* %v2_15f79, align 4
  %v2_15f7c = load i32, i32* %arg2, align 4
  %v5_15f9a = call i32 @unknown_2e4a2(i32 %arg1, i32 %v2_15f7c, i32 %v3_15f79, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15fb0

bb:                                               ; preds = %dec_label_pc_15f46
  %v1_15fae = call i32 @function_15fb5()
  br label %dec_label_pc_15fb0

dec_label_pc_15fb0:                               ; preds = %bb, %dec_label_pc_15f46
  %v2_15fae = phi i32 [ %v1_15fae, %bb ], [ 0, %dec_label_pc_15f46 ]
  ret i32 %v2_15fae
}

define i32 @function_15fb5() local_unnamed_addr {
dec_label_pc_15fb5:
  %v0_15fb6 = load i32, i32* @eax, align 4
  ret i32 %v0_15fb6
}

define i32 @_Z12SerReadWriteI11CHashWriter7CScriptEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_15fb7:
  %v4_16002 = call i32 @unknown_2e56f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 %v4_16002
}

define i32 @function_16008(i32 %arg1) local_unnamed_addr {
dec_label_pc_16008:
  %v2_16008 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_16008 = load i32, i32* @eax, align 4
  %v4_16008 = trunc i32 %v3_16008 to i8
  %v5_16008 = add i8 %v4_16008, %v2_16008
  %v21_16008 = inttoptr i32 %v3_16008 to i8*
  store i8 %v5_16008, i8* %v21_16008, align 1
  %v2_1600a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1600a = load i32, i32* @eax, align 4
  %v4_1600a = trunc i32 %v3_1600a to i8
  %v5_1600a = add i8 %v4_1600a, %v2_1600a
  %v21_1600a = inttoptr i32 %v3_1600a to i8*
  store i8 %v5_1600a, i8* %v21_1600a, align 1
  %v0_1600c = load i32, i32* @ebp, align 4
  %v1_1600c = add i32 %v0_1600c, -12
  %v2_1600c = inttoptr i32 %v1_1600c to i32*
  %v3_1600c = load i32, i32* %v2_1600c, align 4
  %v1_1600f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1600f = icmp eq i32 %v1_1600f, %v3_1600c
  br i1 %v3_1600f, label %bb, label %dec_label_pc_16008.dec_label_pc_16018_crit_edge

dec_label_pc_16008.dec_label_pc_16018_crit_edge:  ; preds = %dec_label_pc_16008
  %v2_16016.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_16018

bb:                                               ; preds = %dec_label_pc_16008
  %v1_16016 = call i32 @function_1601d()
  br label %dec_label_pc_16018

dec_label_pc_16018:                               ; preds = %dec_label_pc_16008.dec_label_pc_16018_crit_edge, %bb
  %v2_16016 = phi i32 [ %v2_16016.pre, %dec_label_pc_16008.dec_label_pc_16018_crit_edge ], [ %v1_16016, %bb ]
  ret i32 %v2_16016

; uselistorder directives
  uselistorder label %dec_label_pc_16018, { 1, 0 }
}

define i32 @function_1601d() local_unnamed_addr {
dec_label_pc_1601d:
  %v0_1601e = load i32, i32* @eax, align 4
  ret i32 %v0_1601e
}

define i32 @_ZN10CDiskTxPos11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16020:
  %v0_1603f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1603f
}

define i32 @function_16046(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16046:
  %v0_16046 = load i32, i32* @ebp, align 4
  %v1_16046 = add i32 %v0_16046, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_16046, i32* @ebp, align 4
  %v1_1604a = add i32 %v0_16046, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -15)
  %v2_1604a = inttoptr i32 %v1_1604a to i8*
  store i8 0, i8* %v2_1604a, align 1
  %v0_1604e = load i32, i32* @ebp, align 4
  %v1_1604e = add i32 %v0_1604e, -14
  %v2_1604e = inttoptr i32 %v1_1604e to i8*
  store i8 0, i8* %v2_1604e, align 1
  %v0_16052 = load i32, i32* @ebp, align 4
  %v1_16052 = add i32 %v0_16052, -13
  %v2_16052 = inttoptr i32 %v1_16052 to i8*
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %v2_16052, align 1
  %v0_16056 = load i32, i32* @ebp, align 4
  %v1_16056 = add i32 %v0_16056, -20
  %v2_16056 = inttoptr i32 %v1_16056 to i32*
  store i32 0, i32* %v2_16056, align 4
  %v0_1605d = load i32, i32* @ebp, align 4
  %v1_1605d = add i32 %v0_1605d, -28
  %v2_1605d = inttoptr i32 %v1_1605d to i32*
  %v3_1605d = load i32, i32* %v2_1605d, align 4
  %v0_16060 = load i32, i32* @edx, align 4
  %v1_16064 = add i32 %v0_1605d, -40
  %v2_16064 = inttoptr i32 %v1_16064 to i32*
  %v3_16064 = load i32, i32* %v2_16064, align 4
  %v1_1606b = add i32 %v0_1605d, -36
  %v2_1606b = inttoptr i32 %v1_1606b to i32*
  %v3_1606b = load i32, i32* %v2_1606b, align 4
  %v1_16076 = add i32 %v0_1605d, -32
  %v2_16076 = inttoptr i32 %v1_16076 to i32*
  %v3_16076 = load i32, i32* %v2_16076, align 4
  %sext = mul i32 %v0_16060, 16777216
  %v5_1607c = sdiv i32 %sext, 16777216
  %v6_1607c = call i32 @unknown_2e634(i32 %v3_16076, i32 %v3_1605d, i32 %v3_1606b, i32 %v3_16064, i32 %v5_1607c)
  %v0_16081 = load i32, i32* @ebp, align 4
  %v1_16081 = add i32 %v0_16081, -20
  %v2_16081 = inttoptr i32 %v1_16081 to i32*
  %v3_16081 = load i32, i32* %v2_16081, align 4
  %v5_16081 = add i32 %v3_16081, %v6_1607c
  store i32 %v5_16081, i32* %v2_16081, align 4
  %v0_16084 = load i32, i32* @ebp, align 4
  %v1_16084 = add i32 %v0_16084, -28
  %v2_16084 = inttoptr i32 %v1_16084 to i32*
  %v3_16084 = load i32, i32* %v2_16084, align 4
  %v1_16087 = add i32 %v3_16084, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_1608d = call i32 @unknown_1f49b(i32 %v1_16087)
  %v0_16092 = load i32, i32* @ebp, align 4
  %v1_16092 = add i32 %v0_16092, -24
  %v2_1609c = call i32 @unknown_1f4c8(i32 %v1_16092, i32 %v1_1608d)
  %v0_160a4 = load i32, i32* @ebp, align 4
  %v1_160a4 = add i32 %v0_160a4, -24
  %v1_160aa = call i32 @unknown_1f50f(i32 %v1_160a4)
  %v0_160af = load i32, i32* @ebx, align 4
  %v0_160b3 = load i32, i32* @ebp, align 4
  %v1_160b3 = add i32 %v0_160b3, -40
  %v2_160b3 = inttoptr i32 %v1_160b3 to i32*
  %v3_160b3 = load i32, i32* %v2_160b3, align 4
  %v1_160ba = add i32 %v0_160b3, -36
  %v2_160ba = inttoptr i32 %v1_160ba to i32*
  %v3_160ba = load i32, i32* %v2_160ba, align 4
  %v1_160c5 = add i32 %v0_160b3, -32
  %v2_160c5 = inttoptr i32 %v1_160c5 to i32*
  %v3_160c5 = load i32, i32* %v2_160c5, align 4
  %v5_160cb = call i32 @unknown_2c34a(i32 %v3_160c5, i32 %v1_160aa, i32 %v3_160ba, i32 %v3_160b3, i32 %v0_160af)
  %v0_160d0 = load i32, i32* @ebp, align 4
  %v1_160d0 = add i32 %v0_160d0, -20
  %v2_160d0 = inttoptr i32 %v1_160d0 to i32*
  %v3_160d0 = load i32, i32* %v2_160d0, align 4
  %v5_160d0 = add i32 %v3_160d0, %v5_160cb
  store i32 %v5_160d0, i32* %v2_160d0, align 4
  %v0_160d3 = load i32, i32* @ebp, align 4
  %v1_160d3 = add i32 %v0_160d3, -12
  %v2_160d3 = inttoptr i32 %v1_160d3 to i32*
  %v3_160d3 = load i32, i32* %v2_160d3, align 4
  %v1_160d6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_160d6 = xor i32 %v1_160d6, %v3_160d3
  %v3_160d6 = icmp eq i32 %v2_160d6, 0
  store i32 %v2_160d6, i32* @eax, align 4
  br i1 %v3_160d6, label %bb, label %dec_label_pc_160df

bb:                                               ; preds = %dec_label_pc_16046
  %v1_160dd = call i32 @function_160e4()
  br label %dec_label_pc_160df

dec_label_pc_160df:                               ; preds = %bb, %dec_label_pc_16046
  %v2_160dd = phi i32 [ %v1_160dd, %bb ], [ %v2_160d6, %dec_label_pc_16046 ]
  ret i32 %v2_160dd

; uselistorder directives
  uselistorder i32 %v0_1605d, { 0, 2, 1, 3 }
}

define i32 @function_160e4() local_unnamed_addr {
dec_label_pc_160e4:
  %v0_160e8 = load i32, i32* @eax, align 4
  ret i32 %v0_160e8
}

define i32 @_ZNK10CDiskTxPos9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_160ea:
  ret i32 %arg3
}

define i32 @function_16100(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16100:
  %v0_16100 = load i32, i32* @eax, align 4
  %v1_16100 = load i32, i32* @ebp, align 4
  %v2_16100 = add i32 %v1_16100, -36
  %v3_16100 = inttoptr i32 %v2_16100 to i32*
  store i32 %v0_16100, i32* %v3_16100, align 4
  %v0_16103 = load i32, i32* @ebp, align 4
  %v1_16103 = add i32 %v0_16103, 20
  %v2_16103 = inttoptr i32 %v1_16103 to i32*
  %v3_16103 = load i32, i32* %v2_16103, align 4
  %v2_16106 = add i32 %v0_16103, -40
  %v3_16106 = inttoptr i32 %v2_16106 to i32*
  store i32 %v3_16103, i32* %v3_16106, align 4
  %v0_16109 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1610f = load i32, i32* @ebp, align 4
  %v2_1610f = add i32 %v1_1610f, -12
  %v3_1610f = inttoptr i32 %v2_1610f to i32*
  store i32 %v0_16109, i32* %v3_1610f, align 4
  %v0_16114 = load i32, i32* @ebp, align 4
  %v1_16114 = add i32 %v0_16114, -15
  %v2_16114 = inttoptr i32 %v1_16114 to i8*
  store i8 0, i8* %v2_16114, align 1
  %v0_16118 = load i32, i32* @ebp, align 4
  %v1_16118 = add i32 %v0_16118, -14
  %v2_16118 = inttoptr i32 %v1_16118 to i8*
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %v2_16118, align 1
  %v0_1611c = load i32, i32* @ebp, align 4
  %v1_1611c = add i32 %v0_1611c, -13
  %v2_1611c = inttoptr i32 %v1_1611c to i8*
  store i8 0, i8* %v2_1611c, align 1
  %v0_16120 = load i32, i32* @ebp, align 4
  %v1_16120 = add i32 %v0_16120, -20
  %v2_16120 = inttoptr i32 %v1_16120 to i32*
  store i32 0, i32* %v2_16120, align 4
  %v0_16127 = load i32, i32* @ebp, align 4
  %v1_16127 = add i32 %v0_16127, -28
  %v2_16127 = inttoptr i32 %v1_16127 to i32*
  %v3_16127 = load i32, i32* %v2_16127, align 4
  %v0_1612a = load i32, i32* @edx, align 4
  %v1_1612e = add i32 %v0_16127, -40
  %v2_1612e = inttoptr i32 %v1_1612e to i32*
  %v3_1612e = load i32, i32* %v2_1612e, align 4
  %v1_16135 = add i32 %v0_16127, -36
  %v2_16135 = inttoptr i32 %v1_16135 to i32*
  %v3_16135 = load i32, i32* %v2_16135, align 4
  %v1_16140 = add i32 %v0_16127, -32
  %v2_16140 = inttoptr i32 %v1_16140 to i32*
  %v3_16140 = load i32, i32* %v2_16140, align 4
  %sext = mul i32 %v0_1612a, 16777216
  %v5_16146 = sdiv i32 %sext, 16777216
  %v6_16146 = call i32 @unknown_2e766(i32 %v3_16140, i32 %v3_16127, i32 %v3_16135, i32 %v3_1612e, i32 %v5_16146)
  %v0_1614b = load i32, i32* @ebp, align 4
  %v1_1614b = add i32 %v0_1614b, -20
  %v2_1614b = inttoptr i32 %v1_1614b to i32*
  %v3_1614b = load i32, i32* %v2_1614b, align 4
  %v5_1614b = add i32 %v3_1614b, %v6_16146
  store i32 %v5_1614b, i32* %v2_1614b, align 4
  %v0_1614e = load i32, i32* @ebp, align 4
  %v1_1614e = add i32 %v0_1614e, -28
  %v2_1614e = inttoptr i32 %v1_1614e to i32*
  %v3_1614e = load i32, i32* %v2_1614e, align 4
  %v1_16151 = add i32 %v3_1614e, ptrtoint (i32* @global_var_8.1178 to i32)
  ret i32 %v1_16151

; uselistorder directives
  uselistorder i32 %v0_16127, { 0, 2, 1, 3 }
}

define i32 @function_16155(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16155:
  %v0_16157 = call i32 @unknown_1f565()
  %v0_1615c = load i32, i32* @ebp, align 4
  %v1_1615c = add i32 %v0_1615c, -24
  %v2_16166 = call i32 @unknown_1f592(i32 %v1_1615c, i32 %v0_16157)
  %v0_1616e = load i32, i32* @ebp, align 4
  %v1_1616e = add i32 %v0_1616e, -24
  %v1_16174 = call i32 @unknown_1f5d9(i32 %v1_1616e)
  %v0_16179 = load i32, i32* @ebx, align 4
  %v0_1617d = load i32, i32* @ebp, align 4
  %v1_1617d = add i32 %v0_1617d, -40
  %v2_1617d = inttoptr i32 %v1_1617d to i32*
  %v3_1617d = load i32, i32* %v2_1617d, align 4
  %v1_16184 = add i32 %v0_1617d, -36
  %v2_16184 = inttoptr i32 %v1_16184 to i32*
  %v3_16184 = load i32, i32* %v2_16184, align 4
  store i32 %v3_16184, i32* @edx, align 4
  %v1_1618f = add i32 %v0_1617d, -32
  %v2_1618f = inttoptr i32 %v1_1618f to i32*
  %v3_1618f = load i32, i32* %v2_1618f, align 4
  %sext = mul i32 %v0_16179, 16777216
  %v5_16195 = sdiv i32 %sext, 16777216
  %v6_16195 = call i32 @unknown_2e7ce(i32 %v3_1618f, i32 %v1_16174, i32 %v3_16184, i32 %v3_1617d, i32 %v5_16195)
  %v0_1619a = load i32, i32* @ebp, align 4
  %v1_1619a = add i32 %v0_1619a, -20
  %v2_1619a = inttoptr i32 %v1_1619a to i32*
  %v3_1619a = load i32, i32* %v2_1619a, align 4
  %v5_1619a = add i32 %v3_1619a, %v6_16195
  store i32 %v5_1619a, i32* %v2_1619a, align 4
  %v0_1619d = load i32, i32* @ebp, align 4
  %v1_1619d = add i32 %v0_1619d, -12
  %v2_1619d = inttoptr i32 %v1_1619d to i32*
  %v3_1619d = load i32, i32* %v2_1619d, align 4
  %v1_161a0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_161a0 = xor i32 %v1_161a0, %v3_1619d
  %v3_161a0 = icmp eq i32 %v2_161a0, 0
  store i32 %v2_161a0, i32* @eax, align 4
  br i1 %v3_161a0, label %bb, label %dec_label_pc_161a9

bb:                                               ; preds = %dec_label_pc_16155
  %v1_161a7 = call i32 @function_161ae()
  br label %dec_label_pc_161a9

dec_label_pc_161a9:                               ; preds = %bb, %dec_label_pc_16155
  %v2_161a7 = phi i32 [ %v1_161a7, %bb ], [ %v2_161a0, %dec_label_pc_16155 ]
  ret i32 %v2_161a7
}

define i32 @function_161ae() local_unnamed_addr {
dec_label_pc_161ae:
  %v0_161ae = load i32, i32* @ebp, align 4
  %v1_161ae = add i32 %v0_161ae, -4
  %v2_161ae = inttoptr i32 %v1_161ae to i32*
  %v3_161ae = load i32, i32* %v2_161ae, align 4
  store i32 %v3_161ae, i32* @ebx, align 4
  %v0_161b2 = load i32, i32* @eax, align 4
  ret i32 %v0_161b2
}

define i32 @_Z16GetSerializeSizeIcEjRKSbIT_St11char_traitsIS0_ESaIS0_EEii() local_unnamed_addr {
dec_label_pc_161b3:
  %eax.global-to-local = alloca i32, align 4
  %v5_161b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_161b6
}

define i32 @function_161e3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_161e3:
  %v2_161e3 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_161e3 = load i32, i32* @eax, align 4
  %v4_161e3 = trunc i32 %v3_161e3 to i8
  %v5_161e3 = add i8 %v4_161e3, %v2_161e3
  %v21_161e3 = inttoptr i32 %v3_161e3 to i8*
  store i8 %v5_161e3, i8* %v21_161e3, align 1
  %v2_161e5 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_161e5 = load i32, i32* @eax, align 4
  %v4_161e5 = trunc i32 %v3_161e5 to i8
  %v5_161e5 = add i8 %v4_161e5, %v2_161e5
  %v21_161e5 = inttoptr i32 %v3_161e5 to i8*
  store i8 %v5_161e5, i8* %v21_161e5, align 1
  %v0_161e7 = load i32, i32* @eax, align 4
  %v0_161ea = load i32, i32* @edx, align 4
  %v2_161ee = call i32 @function_1a594(i32 %v0_161e7, i32 %v0_161ea)
  %v0_161f5 = load i32, i32* @ebp, align 4
  %v1_161f5 = add i32 %v0_161f5, -28
  %v2_161f5 = inttoptr i32 %v1_161f5 to i32*
  %v3_161f5 = load i32, i32* %v2_161f5, align 4
  ret i32 %v3_161f5
}

define i32 @function_16212() local_unnamed_addr {
dec_label_pc_16212:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_16212 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16212 = add i32 %v0_16212, 1566258372
  %v2_16212 = inttoptr i32 %v1_16212 to i32*
  %v3_16212 = load i32, i32* %v2_16212, align 4
  %v4_16212 = add i32 %v3_16212, 1
  store i32 %v4_16212, i32* %v2_16212, align 4
  %v0_16218 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16218
}

define i32 @_Z9SerializeI11CDataStreamcEvRT_RKSbIT0_St11char_traitsIS3_ESaIS3_EEii(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16219:
  ret i32 %arg2
}

define i32 @function_1622b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1622b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1622b = load i32, i32* @ecx, align 4
  %v1_1622b = sub i32 %v0_1622b, ptrtoint (i8** @global_var_1.1176 to i32)
  %v0_1622d = load i32, i32* @ebp, align 4
  %v1_1622d = add i32 %v0_1622d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1622d, i32* %ebp.global-to-local, align 4
  %v1_1622e = add i32 %v1_1622b, 1166793797
  %v2_1622e = inttoptr i32 %v1_1622e to i8*
  %v3_1622e = load i8, i8* %v2_1622e, align 1
  %v5_1622e = trunc i32 %v1_1622b to i8
  %v6_1622e = load i1, i1* @cf, align 1
  %v7_1622e = zext i1 %v6_1622e to i8
  %v8_1622e = add i8 %v3_1622e, %v5_1622e
  %v9_1622e = add i8 %v7_1622e, %v8_1622e
  %v27_1622e = icmp ule i8 %v9_1622e, %v3_1622e
  %v28_1622e = icmp ult i8 %v8_1622e, %v3_1622e
  %v29_1622e = select i1 %v6_1622e, i1 %v27_1622e, i1 %v28_1622e
  store i1 %v29_1622e, i1* %cf.global-to-local, align 1
  store i8 %v9_1622e, i8* %v2_1622e, align 1
  %v0_16234 = load i32, i32* @eax, align 4
  %v1_16234 = trunc i32 %v0_16234 to i8
  %v2_16234 = load i1, i1* %cf.global-to-local, align 1
  %v3_16234 = zext i1 %v2_16234 to i8
  %v4_16234 = add i8 %v1_16234, -119
  %v5_16234 = add i8 %v4_16234, %v3_16234
  %v22_16234 = icmp ule i8 %v5_16234, %v1_16234
  %v23_16234 = icmp ugt i8 %v1_16234, 118
  %v24_16234 = select i1 %v2_16234, i1 %v22_16234, i1 %v23_16234
  %v25_16234 = zext i8 %v5_16234 to i32
  %v27_16234 = and i32 %v0_16234, -256
  %v28_16234 = or i32 %v25_16234, %v27_16234
  store i32 %v28_16234, i32* %eax.global-to-local, align 4
  %v0_16236 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16236 = add i32 %v0_16236, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_16236, i32* %ebp.global-to-local, align 4
  %v3_1623a = zext i1 %v24_16234 to i8
  %v4_1623a = add i8 %v3_1623a, %v5_16234
  %v19_1623a = icmp ule i8 %v4_1623a, %v5_16234
  %v21_1623a = icmp eq i1 %v24_16234, %v19_1623a
  store i1 %v21_1623a, i1* %cf.global-to-local, align 1
  %v22_1623a = zext i8 %v4_1623a to i32
  %v25_1623a = or i32 %v22_1623a, %v27_16234
  store i32 %v25_1623a, i32* %eax.global-to-local, align 4
  %v1_1623c = inttoptr i32 %v25_1623a to i8*
  %v2_1623c = load i8, i8* %v1_1623c, align 1
  %v5_1623c = add i8 %v2_1623c, %v4_1623a
  store i8 %v5_1623c, i8* %v1_1623c, align 1
  %v0_1623e = load i32, i32* %eax.global-to-local, align 4
  %v1_1623e = load i32, i32* %ebp.global-to-local, align 4
  %v2_1623e = add i32 %v1_1623e, -12
  %v3_1623e = inttoptr i32 %v2_1623e to i32*
  store i32 %v0_1623e, i32* %v3_1623e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_16243 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16243 = add i32 %v0_16243, -32
  %v2_16243 = inttoptr i32 %v1_16243 to i32*
  %v3_16243 = load i32, i32* %v2_16243, align 4
  store i32 %v3_16243, i32* %eax.global-to-local, align 4
  ret i32 %v3_16243

; uselistorder directives
  uselistorder i8 %v4_1623a, { 0, 2, 1 }
  uselistorder i8 %v5_16234, { 1, 0, 3, 2 }
  uselistorder i8 %v9_1622e, { 1, 0 }
  uselistorder i8 %v8_1622e, { 1, 0 }
  uselistorder i8 %v3_1622e, { 1, 2, 0 }
  uselistorder i32 %v1_1622b, { 1, 0 }
}

define i32 @function_16284() local_unnamed_addr {
dec_label_pc_16284:
  %eax.global-to-local = alloca i32, align 4
  %v0_16284 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16284
}

define i32 @function_16291(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16291:
  %v0_16291 = load i32, i32* @eax, align 4
  %v2_16291 = add i32 %v0_16291, 36
  %v16_16291 = and i32 %v2_16291, 255
  %v18_16291 = and i32 %v0_16291, -256
  %v19_16291 = or i32 %v16_16291, %v18_16291
  ret i32 %v19_16291

; uselistorder directives
  uselistorder i32 %v0_16291, { 1, 0 }
}

define i32 @function_162bb() local_unnamed_addr {
dec_label_pc_162bb:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_162bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_162bb = add i32 %v0_162bb, 1566258372
  %v2_162bb = inttoptr i32 %v1_162bb to i32*
  %v3_162bb = load i32, i32* %v2_162bb, align 4
  %v4_162bb = add i32 %v3_162bb, 1
  store i32 %v4_162bb, i32* %v2_162bb, align 4
  %v0_162c1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_162c1
}

define i32 @_Z12SerReadWriteI11CDataStream7CVarIntIiEEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_162c2:
  %v4_1630d = call i32 @unknown_2bcc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16323

bb:                                               ; preds = %dec_label_pc_162c2
  %v1_16321 = call i32 @function_16328()
  br label %dec_label_pc_16323

dec_label_pc_16323:                               ; preds = %bb, %dec_label_pc_162c2
  %v2_16321 = phi i32 [ %v1_16321, %bb ], [ 0, %dec_label_pc_162c2 ]
  ret i32 %v2_16321
}

define i32 @function_16328() local_unnamed_addr {
dec_label_pc_16328:
  %v0_16329 = load i32, i32* @eax, align 4
  ret i32 %v0_16329
}

define i32 @_Z12SerReadWriteI11CDataStream7CVarIntIjEEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1632a:
  %v4_16375 = call i32 @unknown_2bd88(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 0
}

define i32 @_Z12SerReadWriteI11CDataStreamiEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_16392:
  %v4_163dd = call i32 @unknown_23b1e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 0
}

define i32 @_Z12SerReadWriteI11CDataStream7uint256EjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_163fa:
  %v4_16445 = call i32 @unknown_268de(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 0
}

define i32 @_Z12SerReadWriteI11CDataStreamjEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_16462:
  %v4_164ad = call i32 @unknown_2ed39(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_164c3

bb:                                               ; preds = %dec_label_pc_16462
  %v1_164c1 = call i32 @function_164c8()
  br label %dec_label_pc_164c3

dec_label_pc_164c3:                               ; preds = %bb, %dec_label_pc_16462
  %v2_164c1 = phi i32 [ %v1_164c1, %bb ], [ 0, %dec_label_pc_16462 ]
  ret i32 %v2_164c1
}

define i32 @function_164c8() local_unnamed_addr {
dec_label_pc_164c8:
  %v0_164c9 = load i32, i32* @eax, align 4
  ret i32 %v0_164c9
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164ca:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_164f6

bb:                                               ; preds = %dec_label_pc_164ca
  %v3_164f4 = call i32 @function_164fb(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_164f6

dec_label_pc_164f6:                               ; preds = %bb, %dec_label_pc_164ca
  %v4_164f4 = phi i32 [ %v3_164f4, %bb ], [ %arg1, %dec_label_pc_164ca ]
  ret i32 %v4_164f4
}

define i32 @function_164fb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164fb:
  %v0_164fc = load i32, i32* @eax, align 4
  ret i32 %v0_164fc
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_164ff:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_16526 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1652a = ptrtoint i32* %stack_var_-36 to i32
  %v2_16530 = call i32 @unknown_2ee2c(i32 %v2_1652a, i32 %v4_16526)
  store i32 %v2_16530, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16541

bb:                                               ; preds = %dec_label_pc_164ff
  %v1_1653f = call i32 @function_16546()
  br label %dec_label_pc_16541

dec_label_pc_16541:                               ; preds = %bb, %dec_label_pc_164ff
  %v2_1653f = phi i32 [ %v1_1653f, %bb ], [ %v2_16530, %dec_label_pc_164ff ]
  ret i32 %v2_1653f
}

define i32 @function_16546() local_unnamed_addr {
dec_label_pc_16546:
  %v0_16547 = load i32, i32* @eax, align 4
  ret i32 %v0_16547
}

define i32 @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16548:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16574

bb:                                               ; preds = %dec_label_pc_16548
  %v3_16572 = call i32 @function_16579(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_16574

dec_label_pc_16574:                               ; preds = %bb, %dec_label_pc_16548
  %v4_16572 = phi i32 [ %v3_16572, %bb ], [ %arg1, %dec_label_pc_16548 ]
  ret i32 %v4_16572
}

define i32 @function_16579(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16579:
  %v0_1657a = load i32, i32* @eax, align 4
  ret i32 %v0_1657a
}

define i32 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1657d:
  %v2_165a9 = sub i32 %arg2, %arg1
  store i32 %v2_165a9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_165b9

bb:                                               ; preds = %dec_label_pc_1657d
  %v4_165b7 = sext i8 %arg3 to i32
  %v5_165b7 = call i32 @function_165be(i32 %v4_165b7, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_165b9

dec_label_pc_165b9:                               ; preds = %bb, %dec_label_pc_1657d
  %v6_165b7 = phi i32 [ %v5_165b7, %bb ], [ %v2_165a9, %dec_label_pc_1657d ]
  ret i32 %v6_165b7
}

define i32 @function_165be(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_165be:
  %v0_165bf = load i32, i32* @eax, align 4
  ret i32 %v0_165bf
}

define i32 @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_165c0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_165ec

bb:                                               ; preds = %dec_label_pc_165c0
  %v3_165ea = call i32 @function_165f1(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_165ec

dec_label_pc_165ec:                               ; preds = %bb, %dec_label_pc_165c0
  %v4_165ea = phi i32 [ %v3_165ea, %bb ], [ %arg1, %dec_label_pc_165c0 ]
  ret i32 %v4_165ea
}

define i32 @function_165f1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_165f1:
  %v0_165f2 = load i32, i32* @eax, align 4
  ret i32 %v0_165f2
}

define i32 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_165f5:
  %v2_16621 = sub i32 %arg2, %arg1
  store i32 %v2_16621, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16631

bb:                                               ; preds = %dec_label_pc_165f5
  %v4_1662f = sext i8 %arg3 to i32
  %v5_1662f = call i32 @function_16636(i32 %v4_1662f, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_16631

dec_label_pc_16631:                               ; preds = %bb, %dec_label_pc_165f5
  %v6_1662f = phi i32 [ %v5_1662f, %bb ], [ %v2_16621, %dec_label_pc_165f5 ]
  ret i32 %v6_1662f
}

define i32 @function_16636(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16636:
  %v0_16637 = load i32, i32* @eax, align 4
  ret i32 %v0_16637
}

define i32 @_ZSteqIcEbRKSaIT_ES3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16638:
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16666

bb:                                               ; preds = %dec_label_pc_16638
  %v3_16664 = call i32 @function_1666b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_16666

dec_label_pc_16666:                               ; preds = %bb, %dec_label_pc_16638
  %v4_16664 = phi i32 [ %v3_16664, %bb ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_16638 ]
  ret i32 %v4_16664
}

define i32 @function_1666b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1666b:
  %v0_1666c = load i32, i32* @eax, align 4
  ret i32 %v0_1666c
}

define i32 @_ZN9__gnu_cxxeqIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1666d:
  %v1_16691 = call i32 @unknown_2a455(i32 %arg1)
  %v1_16696 = inttoptr i32 %v1_16691 to i32*
  %v2_16696 = load i32, i32* %v1_16696, align 4
  %v1_1669e = call i32 @unknown_2a455(i32 %arg2)
  %v1_166a3 = inttoptr i32 %v1_1669e to i32*
  %v2_166a3 = load i32, i32* %v1_166a3, align 4
  %v12_166a5 = icmp eq i32 %v2_16696, %v2_166a3
  %v1_166a7 = zext i1 %v12_166a5 to i32
  %v3_166a7 = and i32 %v2_166a3, -256
  %v4_166a7 = or i32 %v1_166a7, %v3_166a7
  store i32 %v4_166a7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_166b6

bb:                                               ; preds = %dec_label_pc_1666d
  %v1_166b4 = call i32 @function_166bb()
  br label %dec_label_pc_166b6

dec_label_pc_166b6:                               ; preds = %bb, %dec_label_pc_1666d
  %v2_166b4 = phi i32 [ %v1_166b4, %bb ], [ %v4_166a7, %dec_label_pc_1666d ]
  ret i32 %v2_166b4

; uselistorder directives
  uselistorder i32 %v2_166a3, { 1, 0 }
  uselistorder i32 (i32)* @unknown_2a455, { 1, 0 }
}

define i32 @function_166bb() local_unnamed_addr {
dec_label_pc_166bb:
  %v0_166c0 = load i32, i32* @eax, align 4
  ret i32 %v0_166c0
}

define i32 @_ZN9__gnu_cxx17__is_null_pointerINS_17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEbT_() local_unnamed_addr {
dec_label_pc_166c1:
  %eax.global-to-local = alloca i32, align 4
  %v5_166c1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_166c1
}

define i32 @function_166c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_166c2:
  %stack_var_0 = alloca i32, align 4
  %v1_166c2 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_166c2, i32* @ebp, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_166e9

bb:                                               ; preds = %dec_label_pc_166c2
  %v2_166e7 = call i32 @function_166ee(i32 %arg1)
  br label %dec_label_pc_166e9

dec_label_pc_166e9:                               ; preds = %bb, %dec_label_pc_166c2
  %v3_166e7 = phi i32 [ %v2_166e7, %bb ], [ 0, %dec_label_pc_166c2 ]
  ret i32 %v3_166e7
}

define i32 @function_166ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_166ee:
  %v0_166ef = load i32, i32* @eax, align 4
  ret i32 %v0_166ef
}

define i32 @_ZNSs13_S_copy_charsIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIc25zero_after_free_allocatorIcEEEEEEvPcT_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_166f0:
  %v0_16708 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_16708
}

define i32 @function_16710(i32 %arg1) local_unnamed_addr {
dec_label_pc_16710:
  %v0_1673e5 = load i32, i32* @ebp, align 4
  %v1_1673e6 = add i32 %v0_1673e5, -36
  %v1_167457 = add i32 %v0_1673e5, -32
  %v2_1674b8 = call i32 @unknown_2748d(i32 %v1_167457, i32 %v1_1673e6)
  %v4_167509 = trunc i32 %v2_1674b8 to i8
  %v5_1675010 = icmp eq i8 %v4_167509, 0
  %v1_1675211 = icmp eq i1 %v5_1675010, false
  %v0_1671512 = load i32, i32* @ebp, align 4
  br i1 %v1_1675211, label %dec_label_pc_16715, label %dec_label_pc_16754

dec_label_pc_16715:                               ; preds = %dec_label_pc_16710, %dec_label_pc_16715
  %v0_1671513 = phi i32 [ %v0_16715, %dec_label_pc_16715 ], [ %v0_1671512, %dec_label_pc_16710 ]
  %v1_16715 = add i32 %v0_1671513, -32
  %v1_1671b = call i32 @unknown_2751c(i32 %v1_16715)
  %v0_16724 = load i32, i32* @ebp, align 4
  %v1_16724 = add i32 %v0_16724, -28
  %v2_16724 = inttoptr i32 %v1_16724 to i32*
  %v3_16724 = load i32, i32* %v2_16724, align 4
  %v2_1672a = call i32 @function_185a0(i32 %v3_16724, i32 %v1_1671b)
  %v0_1672f = load i32, i32* @ebp, align 4
  %v1_1672f = add i32 %v0_1672f, -32
  %v1_16735 = call i32 @unknown_274e2(i32 %v1_1672f)
  %v0_1673a = load i32, i32* @ebp, align 4
  %v1_1673a = add i32 %v0_1673a, -28
  %v2_1673a = inttoptr i32 %v1_1673a to i32*
  %v3_1673a = load i32, i32* %v2_1673a, align 4
  %v4_1673a = add i32 %v3_1673a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1673a, i32* %v2_1673a, align 4
  %v0_1673e = load i32, i32* @ebp, align 4
  %v1_1673e = add i32 %v0_1673e, -36
  %v1_16745 = add i32 %v0_1673e, -32
  %v2_1674b = call i32 @unknown_2748d(i32 %v1_16745, i32 %v1_1673e)
  %v4_16750 = trunc i32 %v2_1674b to i8
  %v5_16750 = icmp eq i8 %v4_16750, 0
  %v1_16752 = icmp eq i1 %v5_16750, false
  %v0_16715 = load i32, i32* @ebp, align 4
  br i1 %v1_16752, label %dec_label_pc_16715, label %dec_label_pc_16754

dec_label_pc_16754:                               ; preds = %dec_label_pc_16715, %dec_label_pc_16710
  %v0_16715.lcssa = phi i32 [ %v0_1671512, %dec_label_pc_16710 ], [ %v0_16715, %dec_label_pc_16715 ]
  %v1_16754 = add i32 %v0_16715.lcssa, -12
  %v2_16754 = inttoptr i32 %v1_16754 to i32*
  %v3_16754 = load i32, i32* %v2_16754, align 4
  %v1_16757 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16757 = xor i32 %v1_16757, %v3_16754
  %v3_16757 = icmp eq i32 %v2_16757, 0
  store i32 %v2_16757, i32* @eax, align 4
  br i1 %v3_16757, label %bb, label %dec_label_pc_16760

bb:                                               ; preds = %dec_label_pc_16754
  %v1_1675e = call i32 @function_16765()
  br label %dec_label_pc_16760

dec_label_pc_16760:                               ; preds = %bb, %dec_label_pc_16754
  %v2_1675e = phi i32 [ %v1_1675e, %bb ], [ %v2_16757, %dec_label_pc_16754 ]
  ret i32 %v2_1675e

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_2748d, { 1, 0 }
  uselistorder label %dec_label_pc_16715, { 1, 0 }
}

define i32 @function_16765() local_unnamed_addr {
dec_label_pc_16765:
  %v0_16766 = load i32, i32* @eax, align 4
  ret i32 %v0_16766
}

define i32 @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_16767:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1678d

bb:                                               ; preds = %dec_label_pc_16767
  %v2_1678b = call i32 @function_16792(i32 %arg1)
  br label %dec_label_pc_1678d

dec_label_pc_1678d:                               ; preds = %bb, %dec_label_pc_16767
  %v3_1678b = phi i32 [ %v2_1678b, %bb ], [ %arg1, %dec_label_pc_16767 ]
  ret i32 %v3_1678b
}

define i32 @function_16792(i32 %arg1) local_unnamed_addr {
dec_label_pc_16792:
  %v0_16793 = load i32, i32* @eax, align 4
  ret i32 %v0_16793
}

define i32 @_ZSt22__copy_move_backward_aILb0EPcS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16794:
  %v3_167cf = call i32 @unknown_2f16b(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_167cf, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_167e0

bb:                                               ; preds = %dec_label_pc_16794
  %v1_167de = call i32 @function_167e5()
  br label %dec_label_pc_167e0

dec_label_pc_167e0:                               ; preds = %bb, %dec_label_pc_16794
  %v2_167de = phi i32 [ %v1_167de, %bb ], [ %v3_167cf, %dec_label_pc_16794 ]
  ret i32 %v2_167de
}

define i32 @function_167e5() local_unnamed_addr {
dec_label_pc_167e5:
  %v0_167e6 = load i32, i32* @eax, align 4
  ret i32 %v0_167e6
}

define i32 @_ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_167e7:
  %v1_16804 = call i32 @unknown_2f22f(i32 %arg1)
  store i32 %v1_16804, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16815

bb:                                               ; preds = %dec_label_pc_167e7
  %v1_16813 = call i32 @function_1681a()
  br label %dec_label_pc_16815

dec_label_pc_16815:                               ; preds = %bb, %dec_label_pc_167e7
  %v2_16813 = phi i32 [ %v1_16813, %bb ], [ %v1_16804, %dec_label_pc_167e7 ]
  ret i32 %v2_16813
}

define i32 @function_1681a() local_unnamed_addr {
dec_label_pc_1681a:
  %v0_1681b = load i32, i32* @eax, align 4
  ret i32 %v0_1681b
}

define i32 @_ZSt14__copy_move_a2ILb0EPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1681c:
  %stack_var_-20 = alloca i32, align 4
  %v1_1684d = call i32 @unknown_2aa14(i32 %arg4)
  %v1_1685a = call i32 @unknown_2f291(i32 %arg3)
  %v1_16867 = call i32 @unknown_2f291(i32 %arg2)
  %v3_16877 = call i32 @unknown_2f1a0(i32 %v1_16867, i32 %v1_1685a, i32 %v1_1684d)
  store i32 %v3_16877, i32* %stack_var_-20, align 4
  %v2_1687f = ptrtoint i32* %stack_var_-20 to i32
  %v2_1688c = call i32 @unknown_23be8(i32 %arg1, i32 %v2_1687f)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_168a0

bb:                                               ; preds = %dec_label_pc_1681c
  %v1_1689e = call i32 @function_168a5()
  br label %dec_label_pc_168a0

dec_label_pc_168a0:                               ; preds = %bb, %dec_label_pc_1681c
  %v2_1689e = phi i32 [ %v1_1689e, %bb ], [ %arg1, %dec_label_pc_1681c ]
  ret i32 %v2_1689e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_2f291, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_168a5() local_unnamed_addr {
dec_label_pc_168a5:
  %v0_168ab = load i32, i32* @eax, align 4
  ret i32 %v0_168ab
}

define i32 @_ZSt9__advanceIPKciEvRT_T0_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_168ae:
  %v4_168c0 = zext i8 %arg3 to i32
  ret i32 %v4_168c0
}

define i32 @function_168d1() local_unnamed_addr {
dec_label_pc_168d1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_168d8 = add i32 %tmp92, ptrtoint (i8** @global_var_1.1176 to i32)
  %v9_168d8 = icmp eq i32 %v1_168d8, 0
  store i32 %v1_168d8, i32* @ebp, align 4
  %v0_168d9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_168d9 = sub i32 %v0_168d9, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_168d9, i32* %ecx.global-to-local, align 4
  %v2_168d9 = icmp eq i32 %v1_168d9, 0
  %v4_168d9 = or i1 %v9_168d8, %v2_168d9
  br i1 %v4_168d9, label %dec_label_pc_168db, label %dec_label_pc_168dc

dec_label_pc_168db:                               ; preds = %dec_label_pc_168d1
  %v6_168d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_168d9

dec_label_pc_168dc:                               ; preds = %dec_label_pc_168d1
  %v1_168dc = add i32 %tmp92, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -28)
  %v2_168dc = inttoptr i32 %v1_168dc to i32*
  %v3_168dc = load i32, i32* %v2_168dc, align 4
  store i32 %v3_168dc, i32* %eax.global-to-local, align 4
  %v0_168df = load i32, i32* %edx.global-to-local, align 4
  %v2_168df = inttoptr i32 %v3_168dc to i32*
  store i32 %v0_168df, i32* %v2_168df, align 4
  %v0_168e1 = load i32, i32* @ebp, align 4
  %v1_168e1 = add i32 %v0_168e1, -12
  %v2_168e1 = inttoptr i32 %v1_168e1 to i32*
  %v3_168e1 = load i32, i32* %v2_168e1, align 4
  store i32 %v3_168e1, i32* %eax.global-to-local, align 4
  %v1_168e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_168e4 = xor i32 %v1_168e4, %v3_168e1
  %v3_168e4 = icmp eq i32 %v2_168e4, 0
  store i32 %v2_168e4, i32* @eax, align 4
  br i1 %v3_168e4, label %bb, label %dec_label_pc_168ed

bb:                                               ; preds = %dec_label_pc_168dc
  %v1_168eb = call i32 @function_168f2()
  store i32 %v1_168eb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_168ed

dec_label_pc_168ed:                               ; preds = %bb, %dec_label_pc_168dc
  %v2_168eb = phi i32 [ %v1_168eb, %bb ], [ %v2_168e4, %dec_label_pc_168dc ]
  ret i32 %v2_168eb

; uselistorder directives
  uselistorder i32 %tmp92, { 1, 0 }
}

define i32 @function_168f2() local_unnamed_addr {
dec_label_pc_168f2:
  %v0_168f3 = load i32, i32* @eax, align 4
  ret i32 %v0_168f3
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_168f4:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_1690b = ptrtoint i32* %stack_var_-32 to i32
  %v1_16911 = call i32 @unknown_23fba(i32 %v2_1690b)
  %v1_16916 = inttoptr i32 %v1_16911 to i32*
  %v2_16916 = load i32, i32* %v1_16916, align 4
  store i32 %v2_16916, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16924

bb:                                               ; preds = %dec_label_pc_168f4
  %v1_16922 = call i32 @function_16929()
  br label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %bb, %dec_label_pc_168f4
  %v3_16922 = phi i32 [ %v1_16922, %bb ], [ %v2_16916, %dec_label_pc_168f4 ]
  ret i32 %v3_16922
}

define i32 @function_16929() local_unnamed_addr {
dec_label_pc_16929:
  %v0_1692a = load i32, i32* @eax, align 4
  ret i32 %v0_1692a
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1692b:
  ret i32 %arg1
}

define i32 @function_16936(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16936:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_16938 = load i32, i32* @ebp, align 4
  %v0_16939 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_16939 = or i32 %v0_16939, 137
  store i32 %v11_16939, i32* %eax.global-to-local, align 4
  %v0_1693c = load i32, i32* @ecx, align 4
  %v1_1693c = sub i32 %v0_1693c, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_1693e = add i32 %v0_16938, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)))
  store i32 %v1_1693e, i32* @ebp, align 4
  %v1_1693f = add i32 %v1_1693c, -1587159995
  %v2_1693f = inttoptr i32 %v1_1693f to i8*
  %v3_1693f = load i8, i8* %v2_1693f, align 1
  %v5_1693f = trunc i32 %v1_1693c to i8
  %v8_1693f = add i8 %v3_1693f, %v5_1693f
  %v28_1693f = icmp ult i8 %v8_1693f, %v3_1693f
  store i1 %v28_1693f, i1* %cf.global-to-local, align 1
  store i8 %v8_1693f, i8* %v2_1693f, align 1
  %v0_16945 = load i32, i32* %eax.global-to-local, align 4
  %v1_16945 = trunc i32 %v0_16945 to i8
  %v2_16945 = load i1, i1* %cf.global-to-local, align 1
  %v3_16945 = zext i1 %v2_16945 to i8
  %v4_16945 = add i8 %v3_16945, %v1_16945
  %v19_16945 = icmp ule i8 %v4_16945, %v1_16945
  %v21_16945 = icmp eq i1 %v2_16945, %v19_16945
  store i1 %v21_16945, i1* %cf.global-to-local, align 1
  %v22_16945 = zext i8 %v4_16945 to i32
  %v24_16945 = and i32 %v0_16945, -256
  %v25_16945 = or i32 %v22_16945, %v24_16945
  store i32 %v25_16945, i32* %eax.global-to-local, align 4
  %v1_16947 = inttoptr i32 %v25_16945 to i8*
  %v2_16947 = load i8, i8* %v1_16947, align 1
  %v5_16947 = add i8 %v2_16947, %v4_16945
  store i8 %v5_16947, i8* %v1_16947, align 1
  %v0_16949 = load i32, i32* %eax.global-to-local, align 4
  %v1_16949 = load i32, i32* @ebp, align 4
  %v2_16949 = add i32 %v1_16949, -12
  %v3_16949 = inttoptr i32 %v2_16949 to i32*
  store i32 %v0_16949, i32* %v3_16949, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1694e = load i32, i32* @ebp, align 4
  %v1_1694e = add i32 %v0_1694e, -32
  %v2_1694e = inttoptr i32 %v1_1694e to i32*
  %v3_1694e = load i32, i32* %v2_1694e, align 4
  %v1_16951 = add i32 %v0_1694e, -28
  %v2_16951 = inttoptr i32 %v1_16951 to i32*
  %v3_16951 = load i32, i32* %v2_16951, align 4
  %v2_16956 = sub i32 %v3_1694e, %v3_16951
  store i32 %v2_16956, i32* %eax.global-to-local, align 4
  %v2_1695a = add i32 %v0_1694e, -16
  %v3_1695a = inttoptr i32 %v2_1695a to i32*
  store i32 %v2_16956, i32* %v3_1695a, align 4
  %v0_1695d = load i32, i32* @ebp, align 4
  %v1_1695d = add i32 %v0_1695d, -16
  %v2_1695d = inttoptr i32 %v1_1695d to i32*
  %v3_1695d = load i32, i32* %v2_1695d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_1695d = icmp eq i32 %v3_1695d, 0
  br i1 %v10_1695d, label %bb, label %dec_label_pc_16963

bb:                                               ; preds = %dec_label_pc_16936
  %v1_16961 = call i32 @function_1697c()
  store i32 %v1_16961, i32* %eax.global-to-local, align 4
  %v0_16963.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_16963

dec_label_pc_16963:                               ; preds = %bb, %dec_label_pc_16936
  %v0_16971 = phi i32 [ %v0_16963.pre, %bb ], [ %v0_1695d, %dec_label_pc_16936 ]
  %v1_16963 = add i32 %v0_16971, -16
  %v2_16963 = inttoptr i32 %v1_16963 to i32*
  %v3_16963 = load i32, i32* %v2_16963, align 4
  store i32 %v3_16963, i32* %eax.global-to-local, align 4
  %v1_1696a = add i32 %v0_16971, -28
  %v2_1696a = inttoptr i32 %v1_1696a to i32*
  %v3_1696a = load i32, i32* %v2_1696a, align 4
  store i32 %v3_1696a, i32* %eax.global-to-local, align 4
  %v1_16971 = add i32 %v0_16971, -36
  %v2_16971 = inttoptr i32 %v1_16971 to i32*
  %v3_16971 = load i32, i32* %v2_16971, align 4
  store i32 %v3_16971, i32* %eax.global-to-local, align 4
  ret i32 %v3_16971

; uselistorder directives
  uselistorder i32 %v0_16971, { 0, 2, 1 }
  uselistorder i8 %v4_16945, { 0, 2, 1 }
  uselistorder i8 %v1_16945, { 1, 0 }
  uselistorder i8 %v3_1693f, { 1, 0 }
  uselistorder i32 %v1_1693c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
}

define i32 @function_1697c() local_unnamed_addr {
dec_label_pc_1697c:
  %v0_1697c = load i32, i32* @ebp, align 4
  %v1_1697c = add i32 %v0_1697c, -16
  %v2_1697c = inttoptr i32 %v1_1697c to i32*
  %v3_1697c = load i32, i32* %v2_1697c, align 4
  %v2_1697f = add i32 %v0_1697c, -36
  %v3_1697f = inttoptr i32 %v2_1697f to i32*
  %v4_1697f = load i32, i32* %v3_1697f, align 4
  %v5_1697f = add i32 %v4_1697f, %v3_1697c
  store i32 %v5_1697f, i32* @eax, align 4
  %v1_16982 = add i32 %v0_1697c, -12
  %v2_16982 = inttoptr i32 %v1_16982 to i32*
  %v3_16982 = load i32, i32* %v2_16982, align 4
  %v1_16985 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_16985 = icmp eq i32 %v1_16985, %v3_16982
  br i1 %v3_16985, label %bb, label %dec_label_pc_1698e

bb:                                               ; preds = %dec_label_pc_1697c
  %v1_1698c = call i32 @function_16993()
  br label %dec_label_pc_1698e

dec_label_pc_1698e:                               ; preds = %bb, %dec_label_pc_1697c
  %v2_1698c = phi i32 [ %v1_1698c, %bb ], [ %v5_1697f, %dec_label_pc_1697c ]
  ret i32 %v2_1698c
}

define i32 @function_16993() local_unnamed_addr {
dec_label_pc_16993:
  %v0_16994 = load i32, i32* @eax, align 4
  ret i32 %v0_16994
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16996:
  ret i32 %arg2
}

define i32 @function_169aa() local_unnamed_addr {
dec_label_pc_169aa:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_169aa = load i32, i32* %eax.global-to-local, align 4
  %v1_169aa = trunc i32 %v0_169aa to i8
  %v2_169aa = load i1, i1* %cf.global-to-local, align 1
  %v3_169aa = zext i1 %v2_169aa to i8
  %v4_169aa = add i8 %v3_169aa, %v1_169aa
  %v19_169aa = icmp ule i8 %v4_169aa, %v1_169aa
  %v21_169aa = icmp eq i1 %v2_169aa, %v19_169aa
  store i1 %v21_169aa, i1* %cf.global-to-local, align 1
  %v22_169aa = zext i8 %v4_169aa to i32
  %v24_169aa = and i32 %v0_169aa, -256
  %v25_169aa = or i32 %v22_169aa, %v24_169aa
  store i32 %v25_169aa, i32* %eax.global-to-local, align 4
  ret i32 %v25_169aa

; uselistorder directives
  uselistorder i8 %v4_169aa, { 1, 0 }
  uselistorder i8 %v1_169aa, { 1, 0 }
}

define i32 @function_169c3() local_unnamed_addr {
dec_label_pc_169c3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_169c3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_169c3 = sub i32 %v0_169c3, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_169c3, i32* %ecx.global-to-local, align 4
  %v0_169c5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_169c5
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv() local_unnamed_addr {
dec_label_pc_169c6:
  %eax.global-to-local = alloca i32, align 4
  %v5_169c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_169c6
}

define i32 @function_169c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_169c8:
  %v0_169cb = load i32, i32* @ebx, align 4
  %v1_169cb = add i32 %v0_169cb, 1166608453
  %v2_169cb = inttoptr i32 %v1_169cb to i8*
  %v3_169cb = load i8, i8* %v2_169cb, align 1
  %v4_169cb = load i32, i32* @ecx, align 4
  %v5_169cb = trunc i32 %v4_169cb to i8
  %v6_169cb = sub i8 %v3_169cb, %v5_169cb
  store i8 %v6_169cb, i8* %v2_169cb, align 1
  %v0_169d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_169d8 = load i32, i32* @ebp, align 4
  %v2_169d8 = add i32 %v1_169d8, -12
  %v3_169d8 = inttoptr i32 %v2_169d8 to i32*
  store i32 %v0_169d3, i32* %v3_169d8, align 4
  store i32 -1, i32* @eax, align 4
  %v0_169e2 = load i32, i32* @ebp, align 4
  %v1_169e2 = add i32 %v0_169e2, -12
  %v2_169e2 = inttoptr i32 %v1_169e2 to i32*
  %v3_169e2 = load i32, i32* %v2_169e2, align 4
  %v1_169e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_169e5 = icmp eq i32 %v1_169e5, %v3_169e2
  br i1 %v3_169e5, label %bb, label %dec_label_pc_169ee

bb:                                               ; preds = %dec_label_pc_169c8
  %v1_169ec = call i32 @function_169f3()
  br label %dec_label_pc_169ee

dec_label_pc_169ee:                               ; preds = %bb, %dec_label_pc_169c8
  %v2_169ec = phi i32 [ %v1_169ec, %bb ], [ -1, %dec_label_pc_169c8 ]
  ret i32 %v2_169ec

; uselistorder directives
  uselistorder i32 1166608453, { 1, 2, 0, 3 }
}

define i32 @function_169f3() local_unnamed_addr {
dec_label_pc_169f3:
  %v0_169f4 = load i32, i32* @eax, align 4
  ret i32 %v0_169f4
}

define i32 @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPhjhEEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_169f5:
  ret i32 %arg3
}

define i32 @function_16a20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16a20:
  %v0_16a20 = load i32, i32* @ebp, align 4
  %v1_16a20 = add i32 %v0_16a20, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_16a20, i32* @ebp, align 4
  %v1_16a26 = add i32 %v0_16a20, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -28)
  %v2_16a26 = inttoptr i32 %v1_16a26 to i32*
  %v3_16a26 = load i32, i32* %v2_16a26, align 4
  %v1_16a2c = call i32 @unknown_2f49f(i32 %v3_16a26)
  %v0_16a31 = load i32, i32* @ebp, align 4
  %v1_16a31 = add i32 %v0_16a31, -12
  %v2_16a31 = inttoptr i32 %v1_16a31 to i32*
  %v3_16a31 = load i32, i32* %v2_16a31, align 4
  %v1_16a34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16a34 = xor i32 %v1_16a34, %v3_16a31
  store i1 false, i1* @cf, align 1
  %v3_16a34 = icmp eq i32 %v2_16a34, 0
  store i32 %v2_16a34, i32* @eax, align 4
  br i1 %v3_16a34, label %bb, label %dec_label_pc_16a3d

bb:                                               ; preds = %dec_label_pc_16a20
  %v1_16a3b = call i32 @function_16a42()
  br label %dec_label_pc_16a3d

dec_label_pc_16a3d:                               ; preds = %bb, %dec_label_pc_16a20
  %v3_16a3b = phi i32 [ %v1_16a3b, %bb ], [ %v2_16a34, %dec_label_pc_16a20 ]
  ret i32 %v3_16a3b
}

define i32 @function_16a42() local_unnamed_addr {
dec_label_pc_16a42:
  %v0_16a43 = load i32, i32* @eax, align 4
  ret i32 %v0_16a43
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb1EE7_S_baseES6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_16a44:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_16a5b = ptrtoint i32* %stack_var_-32 to i32
  %v1_16a61 = call i32 @unknown_24e4a(i32 %v2_16a5b)
  %v1_16a66 = inttoptr i32 %v1_16a61 to i32*
  %v2_16a66 = load i32, i32* %v1_16a66, align 4
  store i32 %v2_16a66, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16a74

bb:                                               ; preds = %dec_label_pc_16a44
  %v1_16a72 = call i32 @function_16a79()
  br label %dec_label_pc_16a74

dec_label_pc_16a74:                               ; preds = %bb, %dec_label_pc_16a44
  %v2_16a72 = phi i32 [ %v1_16a72, %bb ], [ %v2_16a66, %dec_label_pc_16a44 ]
  ret i32 %v2_16a72
}

define i32 @function_16a79() local_unnamed_addr {
dec_label_pc_16a79:
  %v0_16a7a = load i32, i32* @eax, align 4
  ret i32 %v0_16a7a
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16a7b:
  %v12_16aa6 = icmp eq i32 %arg2, %arg1
  br i1 %v12_16aa6, label %bb, label %dec_label_pc_16ab3

bb:                                               ; preds = %dec_label_pc_16a7b
  %v4_16ab1 = call i32 @function_16acc(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_16ab3

dec_label_pc_16ab3:                               ; preds = %bb, %dec_label_pc_16a7b
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16acc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16acc:
  %v0_16acc = load i32, i32* @ebp, align 4
  %v1_16acc = add i32 %v0_16acc, -16
  %v2_16acc = inttoptr i32 %v1_16acc to i32*
  %v3_16acc = load i32, i32* %v2_16acc, align 4
  %v2_16acf = add i32 %v0_16acc, -36
  %v3_16acf = inttoptr i32 %v2_16acf to i32*
  %v4_16acf = load i32, i32* %v3_16acf, align 4
  %v5_16acf = add i32 %v4_16acf, %v3_16acc
  store i32 %v5_16acf, i32* @eax, align 4
  %v1_16ad2 = add i32 %v0_16acc, -12
  %v2_16ad2 = inttoptr i32 %v1_16ad2 to i32*
  %v3_16ad2 = load i32, i32* %v2_16ad2, align 4
  %v1_16ad5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_16ad5 = icmp eq i32 %v1_16ad5, %v3_16ad2
  br i1 %v3_16ad5, label %bb, label %dec_label_pc_16ade

bb:                                               ; preds = %dec_label_pc_16acc
  %v1_16adc = call i32 @function_16ae3()
  br label %dec_label_pc_16ade

dec_label_pc_16ade:                               ; preds = %bb, %dec_label_pc_16acc
  %v2_16adc = phi i32 [ %v1_16adc, %bb ], [ %v5_16acf, %dec_label_pc_16acc ]
  ret i32 %v2_16adc
}

define i32 @function_16ae0(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ae0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16ae3() local_unnamed_addr {
dec_label_pc_16ae3:
  %v0_16ae4 = load i32, i32* @eax, align 4
  ret i32 %v0_16ae4
}

define i32 @_ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_16ae5:
  %edx.global-to-local = alloca i32, align 4
  %v0_16b0f = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_16b0f, 16777216
  %v8_16b27 = sdiv i32 %sext, 16777216
  %v9_16b27 = sext i8 %arg4 to i32
  %v10_16b27 = call i32 @unknown_2f5e7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_16b27, i32 %v9_16b27, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v10_16b27, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_16b38

bb:                                               ; preds = %dec_label_pc_16ae5
  %v1_16b36 = call i32 @function_16b3d()
  br label %dec_label_pc_16b38

dec_label_pc_16b38:                               ; preds = %bb, %dec_label_pc_16ae5
  %v2_16b36 = phi i32 [ %v1_16b36, %bb ], [ %v10_16b27, %dec_label_pc_16ae5 ]
  ret i32 %v2_16b36

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16b3d() local_unnamed_addr {
dec_label_pc_16b3d:
  %v0_16b3e = load i32, i32* @eax, align 4
  ret i32 %v0_16b3e
}

define i32 @_ZSt4swapIhEvRT_S1_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16b3f:
  %tmp106 = inttoptr i32 %arg2 to i8*
  %v2_16b5f = load i8, i8* %arg1, align 1
  %v2_16b68 = load i8, i8* %tmp106, align 1
  store i8 %v2_16b68, i8* %arg1, align 1
  store i8 %v2_16b5f, i8* %tmp106, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16b85

bb:                                               ; preds = %dec_label_pc_16b3f
  %v4_16b5c = ptrtoint i8* %arg1 to i32
  %v5_16b83 = call i32 @function_16b8a(i32 %arg2, i32 %v4_16b5c)
  br label %dec_label_pc_16b85

dec_label_pc_16b85:                               ; preds = %bb, %dec_label_pc_16b3f
  %v6_16b83 = phi i32 [ %v5_16b83, %bb ], [ 0, %dec_label_pc_16b3f ]
  ret i32 %v6_16b83

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0, 2 }
}

define i32 @function_16b8a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16b8a:
  %v0_16b8b = load i32, i32* @eax, align 4
  ret i32 %v0_16b8b
}

define i32 @_ZSt22__copy_move_backward_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16b8c:
  ret i32 %arg3
}

define x86_fp80 @function_16ba2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16ba2:
  %v0_16ba2 = load i32, i32* @ebp, align 4
  %v2_16ba3 = add i32 %v0_16ba2, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -95)
  %v3_16ba3 = inttoptr i32 %v2_16ba3 to double*
  %v4_16ba3 = load double, double* %v3_16ba3, align 4
  %v5_16ba3 = fpext double %v4_16ba3 to x86_fp80
  %v6_16ba3 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_16ba3 = fsub x86_fp80 %v5_16ba3, %v6_16ba3
  ret x86_fp80 %v7_16ba3
}

define i32 @function_16ba6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16ba6:
  %eax.global-to-local = alloca i32, align 4
  %v0_16ba6 = load i32, i32* @eax, align 4
  %v1_16ba6 = trunc i32 %v0_16ba6 to i8
  %v2_16ba6 = load i1, i1* @cf, align 1
  %v3_16ba6 = zext i1 %v2_16ba6 to i8
  %v4_16ba6 = add i8 %v3_16ba6, %v1_16ba6
  %v22_16ba6 = zext i8 %v4_16ba6 to i32
  %v24_16ba6 = and i32 %v0_16ba6, -256
  %v25_16ba6 = or i32 %v22_16ba6, %v24_16ba6
  store i32 %v25_16ba6, i32* %eax.global-to-local, align 4
  %v1_16ba8 = inttoptr i32 %v25_16ba6 to i8*
  %v2_16ba8 = load i8, i8* %v1_16ba8, align 1
  %v5_16ba8 = add i8 %v2_16ba8, %v4_16ba6
  store i8 %v5_16ba8, i8* %v1_16ba8, align 1
  %v0_16baa = load i32, i32* %eax.global-to-local, align 4
  %v1_16baa = load i32, i32* @ebp, align 4
  %v2_16baa = add i32 %v1_16baa, -12
  %v3_16baa = inttoptr i32 %v2_16baa to i32*
  store i32 %v0_16baa, i32* %v3_16baa, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_16baf = load i32, i32* @ebp, align 4
  %v1_16baf = add i32 %v0_16baf, -13
  %v2_16baf = inttoptr i32 %v1_16baf to i8*
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %v2_16baf, align 1
  %v0_16bb3 = load i32, i32* @ebp, align 4
  %v1_16bb3 = add i32 %v0_16bb3, -36
  %v2_16bb3 = inttoptr i32 %v1_16bb3 to i32*
  %v3_16bb3 = load i32, i32* %v2_16bb3, align 4
  store i32 %v3_16bb3, i32* %eax.global-to-local, align 4
  %v1_16bba = add i32 %v0_16bb3, -32
  %v2_16bba = inttoptr i32 %v1_16bba to i32*
  %v3_16bba = load i32, i32* %v2_16bba, align 4
  store i32 %v3_16bba, i32* %eax.global-to-local, align 4
  %v1_16bc1 = add i32 %v0_16bb3, -28
  %v2_16bc1 = inttoptr i32 %v1_16bc1 to i32*
  %v3_16bc1 = load i32, i32* %v2_16bc1, align 4
  store i32 %v3_16bc1, i32* %eax.global-to-local, align 4
  %v3_16bc7 = call i32 @unknown_2f80f(i32 %v3_16bc1, i32 %v3_16bba, i32 %v3_16bb3)
  store i32 %v3_16bc7, i32* @eax, align 4
  %v0_16bcc = load i32, i32* @ebp, align 4
  %v1_16bcc = add i32 %v0_16bcc, -12
  %v2_16bcc = inttoptr i32 %v1_16bcc to i32*
  %v3_16bcc = load i32, i32* %v2_16bcc, align 4
  %v1_16bcf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_16bcf = icmp eq i32 %v1_16bcf, %v3_16bcc
  br i1 %v3_16bcf, label %bb, label %dec_label_pc_16bd8

bb:                                               ; preds = %dec_label_pc_16ba6
  %v1_16bd6 = call i32 @function_16bdd()
  store i32 %v1_16bd6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_16bd8

dec_label_pc_16bd8:                               ; preds = %bb, %dec_label_pc_16ba6
  %v2_16bd6 = phi i32 [ %v1_16bd6, %bb ], [ %v3_16bc7, %dec_label_pc_16ba6 ]
  ret i32 %v2_16bd6
}

define i32 @function_16bdc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16bdc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16bdd() local_unnamed_addr {
dec_label_pc_16bdd:
  %v0_16bde = load i32, i32* @eax, align 4
  ret i32 %v0_16bde
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_16bdf:
  ret i32 %arg1
}

define i32 @function_16be8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16be8:
  %v0_16be8 = load i32, i32* @eax, align 4
  %v1_16be8 = load i32, i32* @ebp, align 4
  %v2_16be8 = add i32 %v1_16be8, -28
  %v3_16be8 = inttoptr i32 %v2_16be8 to i32*
  store i32 %v0_16be8, i32* %v3_16be8, align 4
  %v0_16beb = load i32, i32* @ebp, align 4
  %v1_16beb = add i32 %v0_16beb, 12
  %v2_16beb = inttoptr i32 %v1_16beb to i32*
  %v3_16beb = load i32, i32* %v2_16beb, align 4
  %v2_16bee = add i32 %v0_16beb, -32
  %v3_16bee = inttoptr i32 %v2_16bee to i32*
  store i32 %v3_16beb, i32* %v3_16bee, align 4
  %v0_16bf1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16bf7 = load i32, i32* @ebp, align 4
  %v2_16bf7 = add i32 %v1_16bf7, -12
  %v3_16bf7 = inttoptr i32 %v2_16bf7 to i32*
  store i32 %v0_16bf1, i32* %v3_16bf7, align 4
  %v0_16bfc = load i32, i32* @ebp, align 4
  %v1_16bfc = add i32 %v0_16bfc, -28
  %v2_16bfc = inttoptr i32 %v1_16bfc to i32*
  %v3_16bfc = load i32, i32* %v2_16bfc, align 4
  store i32 %v3_16bfc, i32* @eax, align 4
  %v1_16bff = add i32 %v0_16bfc, -12
  %v2_16bff = inttoptr i32 %v1_16bff to i32*
  %v3_16bff = load i32, i32* %v2_16bff, align 4
  %v1_16c02 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_16c02 = icmp eq i32 %v1_16c02, %v3_16bff
  br i1 %v3_16c02, label %bb, label %dec_label_pc_16c0b

bb:                                               ; preds = %dec_label_pc_16be8
  %v1_16c09 = call i32 @function_16c10()
  br label %dec_label_pc_16c0b

dec_label_pc_16c0b:                               ; preds = %bb, %dec_label_pc_16be8
  %v2_16c09 = phi i32 [ %v1_16c09, %bb ], [ %v3_16bfc, %dec_label_pc_16be8 ]
  ret i32 %v2_16c09
}

define i32 @function_16c10() local_unnamed_addr {
dec_label_pc_16c10:
  %v0_16c11 = load i32, i32* @eax, align 4
  ret i32 %v0_16c11
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_16c14:
  %v4_16c26 = zext i8 %arg3 to i32
  ret i32 %v4_16c26
}

define i32 @function_16c2a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16c2a:
  %v0_16c2a = load i32, i32* @eax, align 4
  %v1_16c2a = trunc i32 %v0_16c2a to i8
  %v2_16c2a = load i32, i32* @ebp, align 4
  %v3_16c2a = add i32 %v2_16c2a, -33
  %v4_16c2a = inttoptr i32 %v3_16c2a to i8*
  store i8 %v1_16c2a, i8* %v4_16c2a, align 1
  %v0_16c2d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16c33 = load i32, i32* @ebp, align 4
  %v2_16c33 = add i32 %v1_16c33, -12
  %v3_16c33 = inttoptr i32 %v2_16c33 to i32*
  store i32 %v0_16c2d, i32* %v3_16c33, align 4
  %v0_16c38 = load i32, i32* @ebp, align 4
  %v1_16c38 = add i32 %v0_16c38, -28
  %v1_16c3f = add i32 %v0_16c38, -32
  %v2_16c45 = call i32 @unknown_1fef6(i32 %v1_16c3f, i32 %v1_16c38)
  store i32 %v2_16c45, i32* @eax, align 4
  %v0_16c4a = load i32, i32* @ebp, align 4
  %v1_16c4a = add i32 %v0_16c4a, -12
  %v2_16c4a = inttoptr i32 %v1_16c4a to i32*
  %v3_16c4a = load i32, i32* %v2_16c4a, align 4
  %v1_16c4d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_16c4d = icmp eq i32 %v1_16c4d, %v3_16c4a
  br i1 %v3_16c4d, label %bb, label %dec_label_pc_16c56

bb:                                               ; preds = %dec_label_pc_16c2a
  %v1_16c54 = call i32 @function_16c5b()
  br label %dec_label_pc_16c56

dec_label_pc_16c56:                               ; preds = %bb, %dec_label_pc_16c2a
  %v2_16c54 = phi i32 [ %v1_16c54, %bb ], [ %v2_16c45, %dec_label_pc_16c2a ]
  ret i32 %v2_16c54
}

define i32 @function_16c5b() local_unnamed_addr {
dec_label_pc_16c5b:
  %v0_16c5c = load i32, i32* @eax, align 4
  ret i32 %v0_16c5c
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16c5d:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_16c60 = load i32, i32* %esi.global-to-local, align 4
  %v0_16c61 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16c88 = call i32 @unknown_2b0c9(i32 %arg3)
  store i32 %v1_16c88, i32* %ebx.global-to-local, align 4
  %v1_16c95 = call i32 @unknown_28bb8(i32 %arg2)
  store i32 %v1_16c95, i32* %esi.global-to-local, align 4
  %v1_16ca2 = call i32 @unknown_28bb8(i32 %arg1)
  %v3_16cb2 = call i32 @unknown_2b019(i32 %v1_16ca2, i32 %v1_16c95, i32 %v1_16c88)
  store i32 %v0_16c61, i32* %ebx.global-to-local, align 4
  store i32 %v0_16c60, i32* %esi.global-to-local, align 4
  ret i32 %v3_16cb2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_28bb8, { 1, 0 }
}

define i32 @_ZSt11__addressofI6CTxOutEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ccf:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16cf5

bb:                                               ; preds = %dec_label_pc_16ccf
  %v2_16cf3 = call i32 @function_16cfa(i32 %arg1)
  br label %dec_label_pc_16cf5

dec_label_pc_16cf5:                               ; preds = %bb, %dec_label_pc_16ccf
  %v3_16cf3 = phi i32 [ %v2_16cf3, %bb ], [ %arg1, %dec_label_pc_16ccf ]
  ret i32 %v3_16cf3
}

define i32 @function_16cfa(i32 %arg1) local_unnamed_addr {
dec_label_pc_16cfa:
  %v0_16cfb = load i32, i32* @eax, align 4
  ret i32 %v0_16cfb
}

define i32 @_ZSt8_DestroyI6CTxOutEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_16cfc:
  %v1_16d19 = call i32 @unknown_1cbf6(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16d2a

bb:                                               ; preds = %dec_label_pc_16cfc
  %v1_16d28 = call i32 @function_16d2f()
  br label %dec_label_pc_16d2a

dec_label_pc_16d2a:                               ; preds = %bb, %dec_label_pc_16cfc
  %v2_16d28 = phi i32 [ %v1_16d28, %bb ], [ 0, %dec_label_pc_16cfc ]
  ret i32 %v2_16d28
}

define i32 @function_16d2f() local_unnamed_addr {
dec_label_pc_16d2f:
  %v0_16d30 = load i32, i32* @eax, align 4
  ret i32 %v0_16d30
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16d32:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16d5b

bb:                                               ; preds = %dec_label_pc_16d32
  %v3_16d59 = call i32 @function_16d60(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_16d5b

dec_label_pc_16d5b:                               ; preds = %bb, %dec_label_pc_16d32
  %v4_16d59 = phi i32 [ %v3_16d59, %bb ], [ 0, %dec_label_pc_16d32 ]
  ret i32 %v4_16d59
}

define i32 @function_16d60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16d60:
  %v0_16d61 = load i32, i32* @eax, align 4
  ret i32 %v0_16d61
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI6CTxOutE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d62:
  store i32 214748364, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16d8a

bb:                                               ; preds = %dec_label_pc_16d62
  %v2_16d88 = call i32 @function_16d8f(i32 %arg1)
  br label %dec_label_pc_16d8a

dec_label_pc_16d8a:                               ; preds = %bb, %dec_label_pc_16d62
  %v3_16d88 = phi i32 [ %v2_16d88, %bb ], [ 214748364, %dec_label_pc_16d62 ]
  ret i32 %v3_16d88
}

define i32 @function_16d8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d8f:
  %v0_16d90 = load i32, i32* @eax, align 4
  ret i32 %v0_16d90
}

define i32 @_ZSt10_ConstructI6CTxOutS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16d91:
  store i32 0, i32* @eax, align 4
  %v2_16dbf = call i32 @function_18cef(i32 20, i32 %arg1)
  %v1_16dc6 = icmp eq i32 %v2_16dbf, 0
  br i1 %v1_16dc6, label %bb, label %dec_label_pc_16dca

bb:                                               ; preds = %dec_label_pc_16d91
  %v1_16dc8 = call i32 @function_16df3()
  br label %dec_label_pc_16dca

dec_label_pc_16dca:                               ; preds = %bb, %dec_label_pc_16d91
  %v2_16dd4 = call i32 @unknown_1ccc3(i32 %v2_16dbf, i32 %arg2)
  %v0_16dd9 = call i32 @function_16df3()
  ret i32 %v0_16dd9

; uselistorder directives
  uselistorder i32 ()* @function_16df3, { 1, 0 }
}

define i32 @function_16df3() local_unnamed_addr {
dec_label_pc_16df3:
  %v0_16df3 = load i32, i32* @ebp, align 4
  %v1_16df3 = add i32 %v0_16df3, -28
  %v2_16df3 = inttoptr i32 %v1_16df3 to i32*
  %v3_16df3 = load i32, i32* %v2_16df3, align 4
  %v1_16df6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16df6 = xor i32 %v1_16df6, %v3_16df3
  %v3_16df6 = icmp eq i32 %v2_16df6, 0
  store i32 %v2_16df6, i32* @eax, align 4
  br i1 %v3_16df6, label %bb, label %dec_label_pc_16dff

bb:                                               ; preds = %dec_label_pc_16df3
  %v1_16dfd = call i32 @function_16e04()
  br label %dec_label_pc_16dff

dec_label_pc_16dff:                               ; preds = %bb, %dec_label_pc_16df3
  %v2_16dfd = phi i32 [ %v1_16dfd, %bb ], [ %v2_16df6, %dec_label_pc_16df3 ]
  ret i32 %v2_16dfd
}

define i32 @function_16e04() local_unnamed_addr {
dec_label_pc_16e04:
  %v0_16e0b = load i32, i32* @eax, align 4
  ret i32 %v0_16e0b
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16e0c:
  %v11_16e5a112 = icmp eq i32 %arg2, 0
  %v1_16e5e113 = icmp eq i1 %v11_16e5a112, false
  %v5_16e61117 = icmp eq i1 %v1_16e5e113, false
  %v1_16e63118 = icmp eq i1 %v5_16e61117, false
  br i1 %v1_16e63118, label %dec_label_pc_16e38, label %dec_label_pc_16e65

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e0c, %dec_label_pc_16e38
  %storemerge120 = phi i32 [ %v4_16e56, %dec_label_pc_16e38 ], [ %arg1, %dec_label_pc_16e0c ]
  %stack_var_-36.0.in119 = phi i32 [ %v5_16e52, %dec_label_pc_16e38 ], [ %arg2, %dec_label_pc_16e0c ]
  %v1_16e3e = call i32 @unknown_2dadb(i32 %storemerge120)
  %v2_16e4d = call i32 @unknown_2db9d(i32 %v1_16e3e, i32 %arg3)
  %v5_16e52 = sub i32 %stack_var_-36.0.in119, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_16e56 = add i32 %storemerge120, 20
  %v11_16e5a = icmp eq i32 %v5_16e52, 0
  %v1_16e5e = icmp eq i1 %v11_16e5a, false
  %v5_16e61 = icmp eq i1 %v1_16e5e, false
  %v1_16e63 = icmp eq i1 %v5_16e61, false
  br i1 %v1_16e63, label %dec_label_pc_16e38, label %dec_label_pc_16e65

dec_label_pc_16e65:                               ; preds = %dec_label_pc_16e38, %dec_label_pc_16e0c
  %v0_16e65 = call i32 @function_16e97()
  ret i32 %v0_16e65

; uselistorder directives
  uselistorder i32 %v5_16e52, { 1, 0 }
  uselistorder i32 %storemerge120, { 1, 0 }
  uselistorder label %dec_label_pc_16e38, { 1, 0 }
}

define i32 @function_16e68() local_unnamed_addr {
dec_label_pc_16e68:
  %eax.global-to-local = alloca i32, align 4
  %v0_16e68 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16e68
}

define i32 @function_16e97() local_unnamed_addr {
dec_label_pc_16e97:
  %v0_16e97 = load i32, i32* @ebp, align 4
  %v1_16e97 = add i32 %v0_16e97, -12
  %v2_16e97 = inttoptr i32 %v1_16e97 to i32*
  %v3_16e97 = load i32, i32* %v2_16e97, align 4
  %v1_16e9a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16e9a = xor i32 %v1_16e9a, %v3_16e97
  %v3_16e9a = icmp eq i32 %v2_16e9a, 0
  store i32 %v2_16e9a, i32* @eax, align 4
  br i1 %v3_16e9a, label %bb, label %dec_label_pc_16ea3

bb:                                               ; preds = %dec_label_pc_16e97
  %v1_16ea1 = call i32 @function_16ea8()
  br label %dec_label_pc_16ea3

dec_label_pc_16ea3:                               ; preds = %bb, %dec_label_pc_16e97
  %v2_16ea1 = phi i32 [ %v1_16ea1, %bb ], [ %v2_16e9a, %dec_label_pc_16e97 ]
  ret i32 %v2_16ea1
}

define i32 @function_16ea8() local_unnamed_addr {
dec_label_pc_16ea8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16eaa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16eaa:
  %v0_16eaa = load i32, i32* @eax, align 4
  %v1_16eaa = trunc i32 %v0_16eaa to i8
  %v2_16eaa = xor i8 %v1_16eaa, 91
  %v3_16eaa = icmp eq i8 %v2_16eaa, 0
  store i1 %v3_16eaa, i1* @zf, align 1
  %v8_16eaa = zext i8 %v2_16eaa to i32
  %v10_16eaa = and i32 %v0_16eaa, -256
  %v11_16eaa = or i32 %v8_16eaa, %v10_16eaa
  store i32 %arg1, i32* @ebp, align 4
  ret i32 %v11_16eaa
}

define i32 @_ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_16eae:
  ret i32 %arg1
}

define i32 @function_16f0f() local_unnamed_addr {
dec_label_pc_16f0f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16f0f = load i32, i32* %ecx.global-to-local, align 4
  %v1_16f0f = sub i32 %v0_16f0f, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_16f0f, i32* %ecx.global-to-local, align 4
  %v0_16f11 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16f11
}

define i32 @_Z9SerializeI11CDataStream9CFlatDataEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16f12:
  %v8_16f56 = call i32 @unknown_2fc06(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16f67

bb:                                               ; preds = %dec_label_pc_16f12
  %v1_16f65 = call i32 @function_16f6c()
  br label %dec_label_pc_16f67

dec_label_pc_16f67:                               ; preds = %bb, %dec_label_pc_16f12
  %v2_16f65 = phi i32 [ %v1_16f65, %bb ], [ 0, %dec_label_pc_16f12 ]
  ret i32 %v2_16f65

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16f6c() local_unnamed_addr {
dec_label_pc_16f6c:
  %v0_16f6d = load i32, i32* @eax, align 4
  ret i32 %v0_16f6d
}

define i32 @_Z9SerializeI11CDataStreamEvRT_jii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16f6e:
  ret i32 %arg1
}

define i32 @function_16fae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16fae:
  %v2_16faf = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_16faf = load i32, i32* @eax, align 4
  %v4_16faf = trunc i32 %v3_16faf to i8
  %v5_16faf = add i8 %v4_16faf, %v2_16faf
  %v21_16faf = inttoptr i32 %v3_16faf to i8*
  store i8 %v5_16faf, i8* %v21_16faf, align 1
  %v0_16fb1 = load i32, i32* @ebp, align 4
  %v1_16fb1 = add i32 %v0_16fb1, -12
  %v2_16fb1 = inttoptr i32 %v1_16fb1 to i32*
  %v3_16fb1 = load i32, i32* %v2_16fb1, align 4
  %v1_16fb4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16fb4 = xor i32 %v1_16fb4, %v3_16fb1
  %v3_16fb4 = icmp eq i32 %v2_16fb4, 0
  store i32 %v2_16fb4, i32* @eax, align 4
  br i1 %v3_16fb4, label %bb, label %dec_label_pc_16fbd

bb:                                               ; preds = %dec_label_pc_16fae
  %v1_16fbb = call i32 @function_16fc2()
  br label %dec_label_pc_16fbd

dec_label_pc_16fbd:                               ; preds = %bb, %dec_label_pc_16fae
  %v2_16fbb = phi i32 [ %v1_16fbb, %bb ], [ %v2_16fb4, %dec_label_pc_16fae ]
  ret i32 %v2_16fbb
}

define i32 @function_16fc2() local_unnamed_addr {
dec_label_pc_16fc2:
  %v0_16fc3 = load i32, i32* @eax, align 4
  ret i32 %v0_16fc3
}

define i32 @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16fc4:
  ret i32 %arg2
}

define i32 @function_16ff6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16ff6:
  %v0_16ff8 = load i32, i32* @ecx, align 4
  %v1_16ffb = call i32 @unknown_2fd1b(i32 %v0_16ff8)
  %v0_17003 = load i32, i32* @ebp, align 4
  %v1_17003 = add i32 %v0_17003, -28
  %v2_17003 = inttoptr i32 %v1_17003 to i32*
  %v3_17003 = load i32, i32* %v2_17003, align 4
  store i32 %v3_17003, i32* @eax, align 4
  %v1_17006 = add i32 %v0_17003, -12
  %v2_17006 = inttoptr i32 %v1_17006 to i32*
  %v3_17006 = load i32, i32* %v2_17006, align 4
  %v1_17009 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_17009 = icmp eq i32 %v1_17009, %v3_17006
  br i1 %v3_17009, label %bb, label %dec_label_pc_17012

bb:                                               ; preds = %dec_label_pc_16ff6
  %v1_17010 = call i32 @function_17017()
  br label %dec_label_pc_17012

dec_label_pc_17012:                               ; preds = %bb, %dec_label_pc_16ff6
  %v2_17010 = phi i32 [ %v1_17010, %bb ], [ %v3_17003, %dec_label_pc_16ff6 ]
  ret i32 %v2_17010
}

define i32 @function_17017() local_unnamed_addr {
dec_label_pc_17017:
  %v0_17018 = load i32, i32* @eax, align 4
  ret i32 %v0_17018
}

define i32 @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1701b:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_17056 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1706a = call i32 @unknown_2fdbb(i32 %v2_17056, i32 %arg6)
  %v2_17072 = ptrtoint i32* %stack_var_-32 to i32
  %v2_17086 = call i32 @unknown_2fdbb(i32 %v2_17072, i32 %arg4)
  ret i32 %v2_17086
}

define x86_fp80 @function_1708c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1708c:
  %v0_1708d = load i32, i32* @eax, align 4
  %v1_1708d = trunc i32 %v0_1708d to i8
  %v6_1708d = icmp ugt i8 %v1_1708d, 114
  store i1 %v6_1708d, i1* @cf, align 1
  %v0_1708f = load i32, i32* @ebp, align 4
  %v1_1708f = sub i32 %v0_1708f, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1708f, i32* @ebp, align 4
  %v1_17090 = load i32, i32* @ebx, align 4
  %v2_17090 = add i32 %v1_17090, 1435225157
  %v3_17090 = inttoptr i32 %v2_17090 to double*
  %v4_17090 = load double, double* %v3_17090, align 4
  %v5_17090 = fpext double %v4_17090 to x86_fp80
  %v6_17090 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_17090 = fmul x86_fp80 %v5_17090, %v6_17090
  ret x86_fp80 %v7_17090
}

define i32 @function_17098(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17098:
  %stack_var_-3 = alloca i32, align 4
  %v0_1709b = load i32, i32* @edx, align 4
  %v0_1709f = load i32, i32* @ecx, align 4
  %v2_170a2 = call i32 @unknown_2fdbb(i32 %v0_1709f, i32 %v0_1709b)
  %v0_170aa = load i32, i32* @ebp, align 4
  %v1_170aa = add i32 %v0_170aa, -44
  %v2_170aa = inttoptr i32 %v1_170aa to i32*
  %v3_170aa = load i32, i32* %v2_170aa, align 4
  store i32 %v3_170aa, i32* @ecx, align 4
  %v1_170ad = add i32 %v0_170aa, -20
  %v2_170ad = inttoptr i32 %v1_170ad to i32*
  %v3_170ad = load i32, i32* %v2_170ad, align 4
  %v1_170b0 = add i32 %v0_170aa, -16
  %v2_170b0 = inttoptr i32 %v1_170b0 to i32*
  %v3_170b0 = load i32, i32* %v2_170b0, align 4
  %v1_170bb = add i32 %v0_170aa, -28
  %v2_170bb = inttoptr i32 %v1_170bb to i32*
  %v3_170bb = load i32, i32* %v2_170bb, align 4
  %v1_170be = add i32 %v0_170aa, -24
  %v2_170be = inttoptr i32 %v1_170be to i32*
  %v3_170be = load i32, i32* %v2_170be, align 4
  %v1_170c9 = add i32 %v0_170aa, -36
  %v2_170c9 = inttoptr i32 %v1_170c9 to i32*
  %v3_170c9 = load i32, i32* %v2_170c9, align 4
  %v1_170cc = add i32 %v0_170aa, -32
  %v2_170cc = inttoptr i32 %v1_170cc to i32*
  %v3_170cc = load i32, i32* %v2_170cc, align 4
  store i32 %v3_170aa, i32* %stack_var_-3, align 4
  %v7_170da = call i32 @unknown_2fe12(i32 %v3_170aa, i32 %v3_170c9, i32 %v3_170cc, i32 %v3_170bb, i32 %v3_170be, i32 %v3_170ad, i32 %v3_170b0)
  %v0_170e2 = load i32, i32* @ebp, align 4
  %v1_170e2 = add i32 %v0_170e2, -44
  %v2_170e2 = inttoptr i32 %v1_170e2 to i32*
  %v3_170e2 = load i32, i32* %v2_170e2, align 4
  store i32 %v3_170e2, i32* @eax, align 4
  %v1_170e5 = add i32 %v0_170e2, -12
  %v2_170e5 = inttoptr i32 %v1_170e5 to i32*
  %v3_170e5 = load i32, i32* %v2_170e5, align 4
  %v1_170e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_170e8 = icmp eq i32 %v1_170e8, %v3_170e5
  br i1 %v3_170e8, label %bb, label %dec_label_pc_170f1

bb:                                               ; preds = %dec_label_pc_17098
  %v1_170ef = load i32, i32* %stack_var_-3, align 4
  %v2_170ef = call i32 @function_170f6(i32 %v1_170ef)
  br label %dec_label_pc_170f1

dec_label_pc_170f1:                               ; preds = %bb, %dec_label_pc_17098
  %v5_170ef = phi i32 [ %v2_170ef, %bb ], [ %v3_170e2, %dec_label_pc_17098 ]
  ret i32 %v5_170ef

; uselistorder directives
  uselistorder i32 %v3_170aa, { 1, 0, 2 }
  uselistorder i32 %v0_170aa, { 1, 0, 3, 4, 2, 5, 6 }
  uselistorder i32 (i32, i32)* @unknown_2fdbb, { 0, 2, 1 }
}

define i32 @function_170f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_170f6:
  %v0_170f7 = load i32, i32* @eax, align 4
  ret i32 %v0_170f7
}

define i32 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_170fa:
  %v1_1711e = call i32 @unknown_2ff80(i32 %arg1)
  %v1_17126 = call i32 @unknown_2ffae(i32 %v1_1711e)
  %tmp107 = icmp ult i32 %v1_17126, 67108864
  br i1 %tmp107, label %dec_label_pc_17137, label %dec_label_pc_1713f

dec_label_pc_17137:                               ; preds = %dec_label_pc_170fa
  %v2_1713a = shl i32 %v1_17126, ptrtoint (i8* @global_var_5.1189 to i32)
  br label %dec_label_pc_17144

dec_label_pc_1713f:                               ; preds = %dec_label_pc_170fa
  br label %dec_label_pc_17144

dec_label_pc_17144:                               ; preds = %dec_label_pc_1713f, %dec_label_pc_17137
  %storemerge = phi i32 [ 2147483616, %dec_label_pc_1713f ], [ %v2_1713a, %dec_label_pc_17137 ]
  %v2_1714e2 = phi i32 [ 2147483616, %dec_label_pc_1713f ], [ %v2_1713a, %dec_label_pc_17137 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17150

bb:                                               ; preds = %dec_label_pc_17144
  %v1_1714e = call i32 @function_17155()
  br label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %bb, %dec_label_pc_17144
  %v2_1714e = phi i32 [ %v1_1714e, %bb ], [ %v2_1714e2, %dec_label_pc_17144 ]
  ret i32 %v2_1714e

; uselistorder directives
  uselistorder i32 %v2_1713a, { 1, 0 }
  uselistorder i32 %v1_17126, { 1, 0 }
  uselistorder i32 2147483616, { 1, 0 }
  uselistorder i8* @global_var_5.1189, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_5.1189 to i32), { 4, 3, 0, 2, 1 }
}

define i32 @function_17155() local_unnamed_addr {
dec_label_pc_17155:
  %v0_17156 = load i32, i32* @eax, align 4
  ret i32 %v0_17156
}

define i32 @_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17158:
  %v1_17181 = call i32 @unknown_3000c(i32 %arg1)
  %v10_17186 = icmp ult i32 %v1_17181, %arg2
  %v1_17189 = zext i1 %v10_17186 to i32
  %v3_17189 = and i32 %v1_17181, -256
  %v4_17189 = or i32 %v1_17189, %v3_17189
  %v5_1718c = icmp eq i1 %v10_17186, false
  br i1 %v5_1718c, label %bb, label %dec_label_pc_17190

bb:                                               ; preds = %dec_label_pc_17158
  %v1_1718e = call i32 @function_17195()
  br label %dec_label_pc_17190

dec_label_pc_17190:                               ; preds = %bb, %dec_label_pc_17158
  %v2_1718e = phi i32 [ %v1_1718e, %bb ], [ %v4_17189, %dec_label_pc_17158 ]
  ret i32 %v2_1718e

; uselistorder directives
  uselistorder i1 %v10_17186, { 1, 0 }
}

define i32 @function_17195() local_unnamed_addr {
dec_label_pc_17195:
  %v0_17195 = load i32, i32* @ebp, align 4
  %v1_17195 = add i32 %v0_17195, -32
  %v2_17195 = inttoptr i32 %v1_17195 to i32*
  %v3_17195 = load i32, i32* %v2_17195, align 4
  %v2_17198 = mul i32 %v3_17195, 4
  ret i32 %v2_17198
}

define i32 @function_171b3() local_unnamed_addr {
dec_label_pc_171b3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_171b3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_171b3 = sub i32 %v0_171b3, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_171b3, i32* %ecx.global-to-local, align 4
  %v0_171b5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_171b5
}

define i32 @_ZSt4copyIPmS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_171b6:
  ret i32 %arg2
}

define i32 @function_171ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_171ca:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_171ca = load i32, i32* @ebp, align 4
  %v1_171ca = add i32 %v0_171ca, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_171ca, i32* @ebp, align 4
  %v0_171cb = load i32, i32* @ecx, align 4
  %v1_171cb = add i32 %v0_171cb, -1587159995
  %v2_171cb = inttoptr i32 %v1_171cb to i8*
  %v3_171cb = load i8, i8* %v2_171cb, align 1
  %v5_171cb = trunc i32 %v0_171cb to i8
  %v6_171cb = load i1, i1* @cf, align 1
  %v7_171cb = zext i1 %v6_171cb to i8
  %v8_171cb = add i8 %v3_171cb, %v5_171cb
  %v9_171cb = add i8 %v7_171cb, %v8_171cb
  %v27_171cb = icmp ule i8 %v9_171cb, %v3_171cb
  %v28_171cb = icmp ult i8 %v8_171cb, %v3_171cb
  %v29_171cb = select i1 %v6_171cb, i1 %v27_171cb, i1 %v28_171cb
  store i1 %v29_171cb, i1* %cf.global-to-local, align 1
  store i8 %v9_171cb, i8* %v2_171cb, align 1
  %v0_171d1 = load i32, i32* @eax, align 4
  %v1_171d1 = trunc i32 %v0_171d1 to i8
  %v2_171d1 = load i1, i1* %cf.global-to-local, align 1
  %v3_171d1 = zext i1 %v2_171d1 to i8
  %v4_171d1 = add i8 %v3_171d1, %v1_171d1
  %v19_171d1 = icmp ule i8 %v4_171d1, %v1_171d1
  %v21_171d1 = icmp eq i1 %v2_171d1, %v19_171d1
  store i1 %v21_171d1, i1* %cf.global-to-local, align 1
  %v22_171d1 = zext i8 %v4_171d1 to i32
  %v24_171d1 = and i32 %v0_171d1, -256
  %v25_171d1 = or i32 %v22_171d1, %v24_171d1
  store i32 %v25_171d1, i32* %eax.global-to-local, align 4
  %v1_171d3 = inttoptr i32 %v25_171d1 to i8*
  %v2_171d3 = load i8, i8* %v1_171d3, align 1
  %v5_171d3 = add i8 %v2_171d3, %v4_171d1
  store i8 %v5_171d3, i8* %v1_171d3, align 1
  %v0_171d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_171d5 = load i32, i32* @ebp, align 4
  %v2_171d5 = add i32 %v1_171d5, -12
  %v3_171d5 = inttoptr i32 %v2_171d5 to i32*
  store i32 %v0_171d5, i32* %v3_171d5, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_171da = load i32, i32* @ebp, align 4
  %v1_171da = add i32 %v0_171da, -32
  %v2_171da = inttoptr i32 %v1_171da to i32*
  %v3_171da = load i32, i32* %v2_171da, align 4
  store i32 %v3_171da, i32* %eax.global-to-local, align 4
  %v1_171e0 = call i32 @unknown_30099(i32 %v3_171da)
  store i32 %v1_171e0, i32* %eax.global-to-local, align 4
  %v0_171e7 = load i32, i32* @ebp, align 4
  %v1_171e7 = add i32 %v0_171e7, -28
  %v2_171e7 = inttoptr i32 %v1_171e7 to i32*
  %v3_171e7 = load i32, i32* %v2_171e7, align 4
  store i32 %v3_171e7, i32* %eax.global-to-local, align 4
  %v1_171ed = call i32 @unknown_30099(i32 %v3_171e7)
  store i32 %v1_171ed, i32* %eax.global-to-local, align 4
  ret i32 %v1_171ed

; uselistorder directives
  uselistorder i8 %v4_171d1, { 0, 2, 1 }
  uselistorder i8 %v1_171d1, { 1, 0 }
  uselistorder i8 %v9_171cb, { 1, 0 }
  uselistorder i8 %v8_171cb, { 1, 0 }
  uselistorder i32 (i32)* @unknown_30099, { 1, 0 }
}

define i32 @function_171f7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_171f7:
  %v0_171f7 = load i32, i32* @eax, align 4
  %v11_171f7 = and i32 %v0_171f7, or (i32 zext (i8 ptrtoint (i32* @global_var_8.1178 to i8) to i32), i32 -256)
  %v0_171f9 = load i32, i32* @ebx, align 4
  %v2_17200 = call i32 @unknown_300ce(i32 %v11_171f7, i32 %v0_171f9)
  ret i32 %v2_17200

; uselistorder directives
  uselistorder i32 or (i32 zext (i8 ptrtoint (i32* @global_var_8.1178 to i8) to i32), i32 -256), { 0, 1, 3, 2, 4 }
}

define i32 @function_17210(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17210:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_17215() local_unnamed_addr {
dec_label_pc_17215:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17215 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17215 = add i32 %v0_17215, 1566258372
  %v2_17215 = inttoptr i32 %v1_17215 to i32*
  %v3_17215 = load i32, i32* %v2_17215, align 4
  %v4_17215 = add i32 %v3_17215, 1
  store i32 %v4_17215, i32* %v2_17215, align 4
  %v0_1721b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1721b
}

define i32 @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1721c:
  %stack_var_-24 = alloca i32, align 4
  %v2_17257 = ptrtoint i32* %stack_var_-24 to i32
  %v3_1726b = call i32 @unknown_301a6(i32 %v2_17257, i32 %arg4, i32 %arg5)
  ret i32 %v3_1726b
}

define i32 @function_17278(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17278:
  %v0_17279 = load i32, i32* @ebp, align 4
  %v1_17279 = add i32 %v0_17279, -48
  %v2_17279 = inttoptr i32 %v1_17279 to i32*
  %v3_17279 = load i32, i32* %v2_17279, align 4
  %v0_1727c = load i32, i32* @eax, align 4
  %v0_17284 = load i32, i32* @ecx, align 4
  %v3_17287 = call i32 @unknown_301a6(i32 %v0_17284, i32 %v0_1727c, i32 %v3_17279)
  %v0_1728f = load i32, i32* @ebp, align 4
  %v1_1728f = add i32 %v0_1728f, -44
  %v2_1728f = inttoptr i32 %v1_1728f to i32*
  %v3_1728f = load i32, i32* %v2_1728f, align 4
  store i32 %v3_1728f, i32* @ecx, align 4
  %v1_17292 = add i32 %v0_1728f, -68
  %v2_17292 = inttoptr i32 %v1_17292 to i32*
  %v3_17292 = load i32, i32* %v2_17292, align 4
  %v1_17295 = add i32 %v0_1728f, -64
  %v2_17295 = inttoptr i32 %v1_17295 to i32*
  %v3_17295 = load i32, i32* %v2_17295, align 4
  %v1_172a0 = add i32 %v0_1728f, -20
  %v2_172a0 = inttoptr i32 %v1_172a0 to i32*
  %v3_172a0 = load i32, i32* %v2_172a0, align 4
  %v1_172a3 = add i32 %v0_1728f, -16
  %v2_172a3 = inttoptr i32 %v1_172a3 to i32*
  %v3_172a3 = load i32, i32* %v2_172a3, align 4
  %v1_172ae = add i32 %v0_1728f, -28
  %v2_172ae = inttoptr i32 %v1_172ae to i32*
  %v3_172ae = load i32, i32* %v2_172ae, align 4
  %v1_172b1 = add i32 %v0_1728f, -24
  %v2_172b1 = inttoptr i32 %v1_172b1 to i32*
  %v3_172b1 = load i32, i32* %v2_172b1, align 4
  %v7_172bf = call i32 @unknown_301fd(i32 %v3_1728f, i32 %v3_172ae, i32 %v3_172b1, i32 %v3_172a0, i32 %v3_172a3, i32 %v3_17292, i32 %v3_17295)
  %v0_172c7 = load i32, i32* @ebp, align 4
  %v1_172c7 = add i32 %v0_172c7, -44
  %v2_172c7 = inttoptr i32 %v1_172c7 to i32*
  %v3_172c7 = load i32, i32* %v2_172c7, align 4
  store i32 %v3_172c7, i32* @eax, align 4
  %v1_172ca = add i32 %v0_172c7, -12
  %v2_172ca = inttoptr i32 %v1_172ca to i32*
  %v3_172ca = load i32, i32* %v2_172ca, align 4
  %v1_172cd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_172cd = xor i32 %v1_172cd, %v3_172ca
  %v3_172cd = icmp eq i32 %v2_172cd, 0
  store i32 %v2_172cd, i32* @edx, align 4
  br i1 %v3_172cd, label %bb, label %dec_label_pc_172d6

bb:                                               ; preds = %dec_label_pc_17278
  %v1_172d4 = call i32 @function_172db()
  br label %dec_label_pc_172d6

dec_label_pc_172d6:                               ; preds = %bb, %dec_label_pc_17278
  %v2_172d4 = phi i32 [ %v1_172d4, %bb ], [ %v3_172c7, %dec_label_pc_17278 ]
  ret i32 %v2_172d4

; uselistorder directives
  uselistorder i32 %v0_1728f, { 1, 0, 3, 4, 2, 5, 6 }
}

define i32 @function_172db() local_unnamed_addr {
dec_label_pc_172db:
  %v0_172dc = load i32, i32* @eax, align 4
  ret i32 %v0_172dc
}

define i32 @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_172df:
  ret i32 %arg4
}

define i32 @function_172fe(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_172fe:
  %cf.global-to-local = alloca i1, align 1
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_172fe = load i32, i32* @ebp, align 4
  %v1_172fe = add i32 %v0_172fe, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_172fe, i32* %ebp.global-to-local, align 4
  %v0_172ff = load i32, i32* @ecx, align 4
  %v1_172ff = add i32 %v0_172ff, 1166788677
  %v2_172ff = inttoptr i32 %v1_172ff to i8*
  %v3_172ff = load i8, i8* %v2_172ff, align 1
  %v5_172ff = trunc i32 %v0_172ff to i8
  %v6_172ff = load i1, i1* @cf, align 1
  %v7_172ff = zext i1 %v6_172ff to i8
  %v8_172ff = sub i8 %v3_172ff, %v5_172ff
  %v9_172ff = add i8 %v7_172ff, %v8_172ff
  %v19_172ff = sub i8 %v8_172ff, %v7_172ff
  %v20_172ff = icmp ult i8 %v3_172ff, %v19_172ff
  %v21_172ff = icmp ne i8 %v5_172ff, -1
  %v22_172ff = or i1 %v21_172ff, %v20_172ff
  %v23_172ff = icmp ult i8 %v3_172ff, %v5_172ff
  %v24_172ff = select i1 %v6_172ff, i1 %v22_172ff, i1 %v23_172ff
  store i1 %v24_172ff, i1* %cf.global-to-local, align 1
  store i8 %v9_172ff, i8* %v2_172ff, align 1
  %v0_17305 = load i32, i32* @eax, align 4
  %v1_17305 = trunc i32 %v0_17305 to i8
  %v2_17305 = load i1, i1* %cf.global-to-local, align 1
  %v3_17305 = zext i1 %v2_17305 to i8
  %v4_17305 = add i8 %v1_17305, 119
  %v5_17305 = add i8 %v4_17305, %v3_17305
  %v31_17305 = zext i8 %v5_17305 to i32
  %v33_17305 = and i32 %v0_17305, -256
  %v34_17305 = or i32 %v31_17305, %v33_17305
  %v0_17307 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1730d = add i32 %v0_17307, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_1730d, i32* @ebp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_17312 = inttoptr i32 %v34_17305 to i8*
  %v2_17312 = load i8, i8* %v1_17312, align 1
  %v5_17312 = add i8 %v2_17312, %v5_17305
  %v10_17312 = icmp ult i8 %v5_17312, %v2_17312
  store i1 %v10_17312, i1* %cf.global-to-local, align 1
  store i8 %v5_17312, i8* %v1_17312, align 1
  %v0_17314 = load i32, i32* @ecx, align 4
  %v1_17314 = add i32 %v0_17314, -1070468027
  %v2_17314 = inttoptr i32 %v1_17314 to i8*
  %v3_17314 = load i8, i8* %v2_17314, align 1
  %v5_17314 = trunc i32 %v0_17314 to i8
  %v6_17314 = add i8 %v3_17314, %v5_17314
  %v11_17314 = icmp ult i8 %v6_17314, %v3_17314
  store i1 %v11_17314, i1* %cf.global-to-local, align 1
  store i8 %v6_17314, i8* %v2_17314, align 1
  %v0_1731a = load i32, i32* @ebp, align 4
  %v1_1731a = add i32 %v0_1731a, -20
  store i32 %v1_1731a, i32* %ecx.global-to-local, align 4
  %v1_1731d = add i32 %v0_1731a, -68
  %v2_1731d = inttoptr i32 %v1_1731d to i32*
  %v3_1731d = load i32, i32* %v2_1731d, align 4
  %v1_17320 = add i32 %v0_1731a, -64
  %v2_17320 = inttoptr i32 %v1_17320 to i32*
  %v3_17320 = load i32, i32* %v2_17320, align 4
  store i32 %v3_17320, i32* %edx.global-to-local, align 4
  %v1_17323 = load i32, i32* @esp, align 4
  %v2_17323 = add i32 %v1_17323, 4
  %v3_17323 = inttoptr i32 %v2_17323 to i32*
  store i32 %v3_1731d, i32* %v3_17323, align 4
  %v0_17327 = load i32, i32* %edx.global-to-local, align 4
  %v1_17327 = load i32, i32* @esp, align 4
  %v2_17327 = add i32 %v1_17327, 8
  %v3_17327 = inttoptr i32 %v2_17327 to i32*
  store i32 %v0_17327, i32* %v3_17327, align 4
  %v0_1732b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1732b = load i32, i32* @esp, align 4
  %v2_1732b = inttoptr i32 %v1_1732b to i32*
  store i32 %v0_1732b, i32* %v2_1732b, align 4
  %v0_1732e = call i32 @unknown_3007f()
  %v0_17333 = load i32, i32* @esp, align 4
  %v5_17333 = icmp ult i32 %v0_17333, 4
  store i1 %v5_17333, i1* %cf.global-to-local, align 1
  %v0_17336 = load i32, i32* @ebp, align 4
  %v1_17336 = add i32 %v0_17336, -28
  store i32 %v1_17336, i32* %ecx.global-to-local, align 4
  %v1_17339 = add i32 %v0_17336, -60
  %v2_17339 = inttoptr i32 %v1_17339 to i32*
  %v3_17339 = load i32, i32* %v2_17339, align 4
  %v1_1733c = add i32 %v0_17336, -56
  %v2_1733c = inttoptr i32 %v1_1733c to i32*
  %v3_1733c = load i32, i32* %v2_1733c, align 4
  store i32 %v3_1733c, i32* %edx.global-to-local, align 4
  %v3_1733f = inttoptr i32 %v0_17333 to i32*
  store i32 %v3_17339, i32* %v3_1733f, align 4
  %v0_17343 = load i32, i32* %edx.global-to-local, align 4
  %v1_17343 = load i32, i32* @esp, align 4
  %v2_17343 = add i32 %v1_17343, 8
  %v3_17343 = inttoptr i32 %v2_17343 to i32*
  store i32 %v0_17343, i32* %v3_17343, align 4
  %v0_17347 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17347 = load i32, i32* @esp, align 4
  %v2_17347 = inttoptr i32 %v1_17347 to i32*
  store i32 %v0_17347, i32* %v2_17347, align 4
  %v0_1734a = call i32 @unknown_3007f()
  %v0_1734f = load i32, i32* @esp, align 4
  %v5_1734f = icmp ult i32 %v0_1734f, 4
  store i1 %v5_1734f, i1* %cf.global-to-local, align 1
  %v0_17352 = load i32, i32* @ebp, align 4
  %v1_17352 = add i32 %v0_17352, -36
  store i32 %v1_17352, i32* %ecx.global-to-local, align 4
  %v1_17355 = add i32 %v0_17352, -52
  %v2_17355 = inttoptr i32 %v1_17355 to i32*
  %v3_17355 = load i32, i32* %v2_17355, align 4
  %v1_17358 = add i32 %v0_17352, -48
  %v2_17358 = inttoptr i32 %v1_17358 to i32*
  %v3_17358 = load i32, i32* %v2_17358, align 4
  store i32 %v3_17358, i32* %edx.global-to-local, align 4
  %v3_1735b = inttoptr i32 %v0_1734f to i32*
  store i32 %v3_17355, i32* %v3_1735b, align 4
  %v0_1735f = load i32, i32* %edx.global-to-local, align 4
  %v1_1735f = load i32, i32* @esp, align 4
  %v2_1735f = add i32 %v1_1735f, 8
  %v3_1735f = inttoptr i32 %v2_1735f to i32*
  store i32 %v0_1735f, i32* %v3_1735f, align 4
  %v0_17363 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17363 = load i32, i32* @esp, align 4
  %v2_17363 = inttoptr i32 %v1_17363 to i32*
  store i32 %v0_17363, i32* %v2_17363, align 4
  %v0_17366 = call i32 @unknown_3007f()
  %v0_1736b = load i32, i32* @esp, align 4
  %v5_1736b = icmp ult i32 %v0_1736b, 4
  store i1 %v5_1736b, i1* %cf.global-to-local, align 1
  %v0_1736e = load i32, i32* @ebp, align 4
  %v1_1736e = add i32 %v0_1736e, -44
  %v2_1736e = inttoptr i32 %v1_1736e to i32*
  %v3_1736e = load i32, i32* %v2_1736e, align 4
  store i32 %v3_1736e, i32* %ecx.global-to-local, align 4
  %v1_17371 = add i32 %v0_1736e, -20
  %v2_17371 = inttoptr i32 %v1_17371 to i32*
  %v3_17371 = load i32, i32* %v2_17371, align 4
  %v1_17374 = add i32 %v0_1736e, -16
  %v2_17374 = inttoptr i32 %v1_17374 to i32*
  %v3_17374 = load i32, i32* %v2_17374, align 4
  store i32 %v3_17374, i32* %edx.global-to-local, align 4
  %v2_17377 = add i32 %v0_1736b, 16
  %v3_17377 = inttoptr i32 %v2_17377 to i32*
  store i32 %v3_17371, i32* %v3_17377, align 4
  %v0_1737b = load i32, i32* %edx.global-to-local, align 4
  %v1_1737b = load i32, i32* @esp, align 4
  %v2_1737b = add i32 %v1_1737b, 24
  %v3_1737b = inttoptr i32 %v2_1737b to i32*
  store i32 %v0_1737b, i32* %v3_1737b, align 4
  %v0_1737f = load i32, i32* @ebp, align 4
  %v1_1737f = add i32 %v0_1737f, -28
  %v2_1737f = inttoptr i32 %v1_1737f to i32*
  %v3_1737f = load i32, i32* %v2_1737f, align 4
  %v1_17382 = add i32 %v0_1737f, -24
  %v2_17382 = inttoptr i32 %v1_17382 to i32*
  %v3_17382 = load i32, i32* %v2_17382, align 4
  store i32 %v3_17382, i32* %edx.global-to-local, align 4
  %v1_17385 = load i32, i32* @esp, align 4
  %v2_17385 = add i32 %v1_17385, 12
  %v3_17385 = inttoptr i32 %v2_17385 to i32*
  store i32 %v3_1737f, i32* %v3_17385, align 4
  %v0_17389 = load i32, i32* %edx.global-to-local, align 4
  %v1_17389 = load i32, i32* @esp, align 4
  %v2_17389 = add i32 %v1_17389, 16
  %v3_17389 = inttoptr i32 %v2_17389 to i32*
  store i32 %v0_17389, i32* %v3_17389, align 4
  %v0_1738d = load i32, i32* @ebp, align 4
  %v1_1738d = add i32 %v0_1738d, -36
  %v2_1738d = inttoptr i32 %v1_1738d to i32*
  %v3_1738d = load i32, i32* %v2_1738d, align 4
  %v1_17390 = add i32 %v0_1738d, -32
  %v2_17390 = inttoptr i32 %v1_17390 to i32*
  %v3_17390 = load i32, i32* %v2_17390, align 4
  store i32 %v3_17390, i32* %edx.global-to-local, align 4
  %v1_17393 = load i32, i32* @esp, align 4
  %v2_17393 = add i32 %v1_17393, 4
  %v3_17393 = inttoptr i32 %v2_17393 to i32*
  store i32 %v3_1738d, i32* %v3_17393, align 4
  %v0_17397 = load i32, i32* %edx.global-to-local, align 4
  %v1_17397 = load i32, i32* @esp, align 4
  %v2_17397 = add i32 %v1_17397, 8
  %v3_17397 = inttoptr i32 %v2_17397 to i32*
  store i32 %v0_17397, i32* %v3_17397, align 4
  %v0_1739b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1739b = load i32, i32* @esp, align 4
  %v2_1739b = inttoptr i32 %v1_1739b to i32*
  store i32 %v0_1739b, i32* %v2_1739b, align 4
  %v0_1739e = call i32 @unknown_3039f()
  %v0_173a6 = load i32, i32* @ebp, align 4
  %v1_173a6 = add i32 %v0_173a6, -44
  %v2_173a6 = inttoptr i32 %v1_173a6 to i32*
  %v3_173a6 = load i32, i32* %v2_173a6, align 4
  store i32 %v3_173a6, i32* @eax, align 4
  %v1_173a9 = add i32 %v0_173a6, -12
  %v2_173a9 = inttoptr i32 %v1_173a9 to i32*
  %v3_173a9 = load i32, i32* %v2_173a9, align 4
  store i32 %v3_173a9, i32* %edx.global-to-local, align 4
  %v1_173ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_173ac = xor i32 %v1_173ac, %v3_173a9
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_173ac = icmp eq i32 %v2_173ac, 0
  store i32 %v2_173ac, i32* %edx.global-to-local, align 4
  br i1 %v3_173ac, label %bb, label %dec_label_pc_173b5

bb:                                               ; preds = %dec_label_pc_172fe
  %v1_173b3 = call i32 @function_173ba()
  br label %dec_label_pc_173b5

dec_label_pc_173b5:                               ; preds = %bb, %dec_label_pc_172fe
  %v5_173b3 = phi i32 [ %v1_173b3, %bb ], [ %v3_173a6, %dec_label_pc_172fe ]
  ret i32 %v5_173b3

; uselistorder directives
  uselistorder i8 %v2_17312, { 1, 0 }
  uselistorder i8 %v8_172ff, { 1, 0 }
  uselistorder i8 %v7_172ff, { 1, 0 }
  uselistorder i8 %v5_172ff, { 1, 0, 2 }
  uselistorder i32 ()* @unknown_3007f, { 2, 1, 0 }
}

define i32 @function_173ba() local_unnamed_addr {
dec_label_pc_173ba:
  %v0_173bb = load i32, i32* @eax, align 4
  ret i32 %v0_173bb
}

define i32 @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_173be:
  ret i32 %arg2
}

define i32 @function_173f2() local_unnamed_addr {
dec_label_pc_173f2:
  %v0_173f2 = load i32, i32* @eax, align 4
  %v1_173f2 = trunc i32 %v0_173f2 to i8
  %v2_173f2 = load i1, i1* @cf, align 1
  %v3_173f2 = zext i1 %v2_173f2 to i8
  %v4_173f2 = add i8 %v3_173f2, %v1_173f2
  %v22_173f2 = zext i8 %v4_173f2 to i32
  %v24_173f2 = and i32 %v0_173f2, -256
  %v25_173f2 = or i32 %v22_173f2, %v24_173f2
  store i32 %v25_173f2, i32* @eax, align 4
  %v1_173f4 = inttoptr i32 %v25_173f2 to i8*
  %v2_173f4 = load i8, i8* %v1_173f4, align 1
  %v5_173f4 = add i8 %v2_173f4, %v4_173f2
  %v15_173f4 = icmp eq i8 %v5_173f4, 0
  store i1 %v15_173f4, i1* @zf, align 1
  store i8 %v5_173f4, i8* %v1_173f4, align 1
  %v0_173f6 = load i1, i1* @zf, align 1
  br i1 %v0_173f6, label %bb, label %dec_label_pc_173f2.dec_label_pc_173f8_crit_edge

dec_label_pc_173f2.dec_label_pc_173f8_crit_edge:  ; preds = %dec_label_pc_173f2
  %v2_173f6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_173f8

bb:                                               ; preds = %dec_label_pc_173f2
  %v1_173f6 = call i32 @function_173fd()
  br label %dec_label_pc_173f8

dec_label_pc_173f8:                               ; preds = %dec_label_pc_173f2.dec_label_pc_173f8_crit_edge, %bb
  %v2_173f6 = phi i32 [ %v2_173f6.pre, %dec_label_pc_173f2.dec_label_pc_173f8_crit_edge ], [ %v1_173f6, %bb ]
  ret i32 %v2_173f6

; uselistorder directives
  uselistorder label %dec_label_pc_173f8, { 1, 0 }
}

declare i32 @__stack_chk_fail.673() local_unnamed_addr

define i32 @function_173fd() local_unnamed_addr {
dec_label_pc_173fd:
  %v0_173fe = load i32, i32* @eax, align 4
  ret i32 %v0_173fe
}

define i32 @_Z9SerializeI11CDataStream7CVarIntIiEEvRT_RKT0_li(i32 %arg1) local_unnamed_addr {
dec_label_pc_173ff:
  ret i32 %arg1
}

define i32 @function_17408() local_unnamed_addr {
dec_label_pc_17408:
  %v0_17408 = load i32, i32* @eax, align 4
  %v1_17408 = load i32, i32* @ebp, align 4
  %v2_17408 = add i32 %v1_17408, -28
  %v3_17408 = inttoptr i32 %v2_17408 to i32*
  store i32 %v0_17408, i32* %v3_17408, align 4
  %v0_1740b = load i32, i32* @ebp, align 4
  %v1_1740b = add i32 %v0_1740b, 12
  %v2_1740b = inttoptr i32 %v1_1740b to i32*
  %v3_1740b = load i32, i32* %v2_1740b, align 4
  %v2_1740e = add i32 %v0_1740b, -32
  %v3_1740e = inttoptr i32 %v2_1740e to i32*
  store i32 %v3_1740b, i32* %v3_1740e, align 4
  %v0_17411 = load i32, i32* @ebp, align 4
  %v1_17411 = add i32 %v0_17411, 16
  %v2_17411 = inttoptr i32 %v1_17411 to i32*
  %v3_17411 = load i32, i32* %v2_17411, align 4
  %v2_17414 = add i32 %v0_17411, -36
  %v3_17414 = inttoptr i32 %v2_17414 to i32*
  store i32 %v3_17411, i32* %v3_17414, align 4
  %v0_17417 = load i32, i32* @ebp, align 4
  %v1_17417 = add i32 %v0_17417, 20
  %v2_17417 = inttoptr i32 %v1_17417 to i32*
  %v3_17417 = load i32, i32* %v2_17417, align 4
  %v2_1741a = add i32 %v0_17417, -40
  %v3_1741a = inttoptr i32 %v2_1741a to i32*
  store i32 %v3_17417, i32* %v3_1741a, align 4
  %v0_1741d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_17423 = load i32, i32* @ebp, align 4
  %v2_17423 = add i32 %v1_17423, -12
  %v3_17423 = inttoptr i32 %v2_17423 to i32*
  store i32 %v0_1741d, i32* %v3_17423, align 4
  %v0_17428 = load i32, i32* @ebp, align 4
  %v1_17428 = add i32 %v0_17428, -40
  %v2_17428 = inttoptr i32 %v1_17428 to i32*
  %v3_17428 = load i32, i32* %v2_17428, align 4
  %v1_1742f = add i32 %v0_17428, -36
  %v2_1742f = inttoptr i32 %v1_1742f to i32*
  %v3_1742f = load i32, i32* %v2_1742f, align 4
  %v1_17436 = add i32 %v0_17428, -28
  %v2_17436 = inttoptr i32 %v1_17436 to i32*
  %v3_17436 = load i32, i32* %v2_17436, align 4
  %v1_1743d = add i32 %v0_17428, -32
  %v2_1743d = inttoptr i32 %v1_1743d to i32*
  %v3_1743d = load i32, i32* %v2_1743d, align 4
  %v4_17443 = call i32 @unknown_3054f(i32 %v3_1743d, i32 %v3_17436, i32 %v3_1742f, i32 %v3_17428)
  %v0_17448 = load i32, i32* @ebp, align 4
  %v1_17448 = add i32 %v0_17448, -12
  %v2_17448 = inttoptr i32 %v1_17448 to i32*
  %v3_17448 = load i32, i32* %v2_17448, align 4
  %v1_1744b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1744b = xor i32 %v1_1744b, %v3_17448
  %v3_1744b = icmp eq i32 %v2_1744b, 0
  store i32 %v2_1744b, i32* @eax, align 4
  br i1 %v3_1744b, label %bb, label %dec_label_pc_17454

bb:                                               ; preds = %dec_label_pc_17408
  %v1_17452 = call i32 @function_17459()
  br label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %bb, %dec_label_pc_17408
  %v2_17452 = phi i32 [ %v1_17452, %bb ], [ %v2_1744b, %dec_label_pc_17408 ]
  ret i32 %v2_17452

; uselistorder directives
  uselistorder i32 %v0_17428, { 1, 0, 2, 3 }
}

define i32 @function_17459() local_unnamed_addr {
dec_label_pc_17459:
  %v0_1745a = load i32, i32* @eax, align 4
  ret i32 %v0_1745a
}

define i32 @_Z9SerializeI11CDataStream7CVarIntIjEEvRT_RKT0_li(i32 %arg1) local_unnamed_addr {
dec_label_pc_1745b:
  ret i32 %arg1
}

define i32 @function_17466() local_unnamed_addr {
dec_label_pc_17466:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_17468 = load i32, i32* @ebp, align 4
  %v0_17469 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_17469 = or i32 %v0_17469, 137
  store i32 %v11_17469, i32* %eax.global-to-local, align 4
  %v1_1746b = add i32 %v0_17468, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v9_1746b = icmp eq i32 %v1_1746b, 0
  store i32 %v1_1746b, i32* %ebp.global-to-local, align 4
  %v0_1746c = load i32, i32* @ecx, align 4
  %v1_1746c = sub i32 %v0_1746c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1746c, i32* %ecx.global-to-local, align 4
  %v2_1746c = icmp eq i32 %v1_1746c, 0
  %v4_1746c = or i1 %v9_1746b, %v2_1746c
  br i1 %v4_1746c, label %dec_label_pc_1746e, label %bb

bb:                                               ; preds = %dec_label_pc_17466
  %v6_1746c = call i32 @__stack_chk_fail.673()
  store i32 %v6_1746c, i32* %eax.global-to-local, align 4
  %v0_1746e.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_1746f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_1746f.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_1746e

dec_label_pc_1746e:                               ; preds = %dec_label_pc_17466, %bb
  %v6_1746f = phi i1 [ false, %dec_label_pc_17466 ], [ %v6_1746f.pre, %bb ]
  %v30_1746f = phi i32 [ %v1_1746c, %dec_label_pc_17466 ], [ %v0_1746f.pre, %bb ]
  %v0_1746e = phi i32 [ %v1_1746b, %dec_label_pc_17466 ], [ %v0_1746e.pre, %bb ]
  %v1_1746e = add i32 %v0_1746e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1746e, i32* %ebp.global-to-local, align 4
  %v1_1746f = add i32 %v30_1746f, 1166793797
  %v2_1746f = inttoptr i32 %v1_1746f to i8*
  %v3_1746f = load i8, i8* %v2_1746f, align 1
  %v5_1746f = trunc i32 %v30_1746f to i8
  %v7_1746f = zext i1 %v6_1746f to i8
  %v8_1746f = add i8 %v3_1746f, %v5_1746f
  %v9_1746f = add i8 %v8_1746f, %v7_1746f
  %v27_1746f = icmp ule i8 %v9_1746f, %v3_1746f
  %v28_1746f = icmp ult i8 %v8_1746f, %v3_1746f
  %v29_1746f = select i1 %v6_1746f, i1 %v27_1746f, i1 %v28_1746f
  store i1 %v29_1746f, i1* %cf.global-to-local, align 1
  store i8 %v9_1746f, i8* %v2_1746f, align 1
  %v0_17475 = load i32, i32* %eax.global-to-local, align 4
  %v1_17475 = trunc i32 %v0_17475 to i8
  %v2_17475 = load i1, i1* %cf.global-to-local, align 1
  %v3_17475 = zext i1 %v2_17475 to i8
  %v4_17475 = add i8 %v1_17475, -119
  %v5_17475 = add i8 %v4_17475, %v3_17475
  %v22_17475 = icmp ule i8 %v5_17475, %v1_17475
  %v23_17475 = icmp ugt i8 %v1_17475, 118
  %v24_17475 = select i1 %v2_17475, i1 %v22_17475, i1 %v23_17475
  %v25_17475 = zext i8 %v5_17475 to i32
  %v27_17475 = and i32 %v0_17475, -256
  %v28_17475 = or i32 %v25_17475, %v27_17475
  store i32 %v28_17475, i32* %eax.global-to-local, align 4
  %v0_17477 = load i32, i32* %ebp.global-to-local, align 4
  %v1_17477 = add i32 %v0_17477, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_17477, i32* @ebp, align 4
  %v3_1747b = zext i1 %v24_17475 to i8
  %v4_1747b = add i8 %v3_1747b, %v5_17475
  %v19_1747b = icmp ule i8 %v4_1747b, %v5_17475
  %v21_1747b = icmp eq i1 %v24_17475, %v19_1747b
  store i1 %v21_1747b, i1* %cf.global-to-local, align 1
  %v22_1747b = zext i8 %v4_1747b to i32
  %v25_1747b = or i32 %v22_1747b, %v27_17475
  store i32 %v25_1747b, i32* %eax.global-to-local, align 4
  %v1_1747d = inttoptr i32 %v25_1747b to i8*
  %v2_1747d = load i8, i8* %v1_1747d, align 1
  %v5_1747d = add i8 %v2_1747d, %v4_1747b
  store i8 %v5_1747d, i8* %v1_1747d, align 1
  %v0_1747f = load i32, i32* %eax.global-to-local, align 4
  %v1_1747f = load i32, i32* @ebp, align 4
  %v2_1747f = add i32 %v1_1747f, -12
  %v3_1747f = inttoptr i32 %v2_1747f to i32*
  store i32 %v0_1747f, i32* %v3_1747f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_17484 = load i32, i32* @ebp, align 4
  %v1_17484 = add i32 %v0_17484, -40
  %v2_17484 = inttoptr i32 %v1_17484 to i32*
  %v3_17484 = load i32, i32* %v2_17484, align 4
  store i32 %v3_17484, i32* %eax.global-to-local, align 4
  %v1_1748b = add i32 %v0_17484, -36
  %v2_1748b = inttoptr i32 %v1_1748b to i32*
  %v3_1748b = load i32, i32* %v2_1748b, align 4
  store i32 %v3_1748b, i32* %eax.global-to-local, align 4
  %v1_17492 = add i32 %v0_17484, -28
  %v2_17492 = inttoptr i32 %v1_17492 to i32*
  %v3_17492 = load i32, i32* %v2_17492, align 4
  store i32 %v3_17492, i32* %eax.global-to-local, align 4
  %v1_17499 = add i32 %v0_17484, -32
  %v2_17499 = inttoptr i32 %v1_17499 to i32*
  %v3_17499 = load i32, i32* %v2_17499, align 4
  store i32 %v3_17499, i32* %eax.global-to-local, align 4
  %v4_1749f = call i32 @unknown_305fd(i32 %v3_17499, i32 %v3_17492, i32 %v3_1748b, i32 %v3_17484)
  store i32 %v4_1749f, i32* %eax.global-to-local, align 4
  %v0_174a4 = load i32, i32* @ebp, align 4
  %v1_174a4 = add i32 %v0_174a4, -12
  %v2_174a4 = inttoptr i32 %v1_174a4 to i32*
  %v3_174a4 = load i32, i32* %v2_174a4, align 4
  store i32 %v3_174a4, i32* %eax.global-to-local, align 4
  %v1_174a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_174a7 = xor i32 %v1_174a7, %v3_174a4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_174a7 = icmp eq i32 %v2_174a7, 0
  store i32 %v2_174a7, i32* @eax, align 4
  br i1 %v3_174a7, label %bb11, label %dec_label_pc_174b0

bb11:                                             ; preds = %dec_label_pc_1746e
  %v1_174ae = call i32 @function_174b5()
  store i32 %v1_174ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_174b0

dec_label_pc_174b0:                               ; preds = %bb11, %dec_label_pc_1746e
  %v2_174ae = phi i32 [ %v1_174ae, %bb11 ], [ %v2_174a7, %dec_label_pc_1746e ]
  ret i32 %v2_174ae

; uselistorder directives
  uselistorder i32 %v0_17484, { 1, 0, 2, 3 }
  uselistorder i8 %v4_1747b, { 0, 2, 1 }
  uselistorder i8 %v5_17475, { 1, 0, 3, 2 }
  uselistorder i8 %v9_1746f, { 1, 0 }
  uselistorder i8 %v8_1746f, { 1, 0 }
  uselistorder i8 %v3_1746f, { 1, 2, 0 }
  uselistorder i32 %v30_1746f, { 1, 0 }
  uselistorder i1 %v6_1746f, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 13 }
  uselistorder label %dec_label_pc_1746e, { 1, 0 }
}

define i32 @function_174b5() local_unnamed_addr {
dec_label_pc_174b5:
  %v0_174b6 = load i32, i32* @eax, align 4
  ret i32 %v0_174b6
}

define i32 @_Z9SerializeI11CDataStreamEvRT_hii(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_174b7:
  %stack_var_-36 = alloca i8, align 1
  %v4_174bd = sext i8 %arg2 to i32
  store i8 %arg2, i8* %stack_var_-36, align 1
  %v2_174e8 = ptrtoint i8* %stack_var_-36 to i32
  %v9_174f5 = call i32 @unknown_1c025(i32 %arg1, i32 %v2_174e8, i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 %arg4, i32 %arg3, i32 %v4_174bd, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17506

bb:                                               ; preds = %dec_label_pc_174b7
  %v1_17504 = call i32 @function_1750b()
  br label %dec_label_pc_17506

dec_label_pc_17506:                               ; preds = %bb, %dec_label_pc_174b7
  %v2_17504 = phi i32 [ %v1_17504, %bb ], [ 0, %dec_label_pc_174b7 ]
  ret i32 %v2_17504

; uselistorder directives
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1750b() local_unnamed_addr {
dec_label_pc_1750b:
  %v0_1750c = load i32, i32* @eax, align 4
  ret i32 %v0_1750c
}

define i32 @_Z9SerializeI11CDataStream16CTxOutCompressorEvRT_RKT0_li() local_unnamed_addr {
dec_label_pc_1750d:
  %eax.global-to-local = alloca i32, align 4
  %v2_1750e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1750e
}

define i32 @function_17510(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17510:
  %v0_17513 = load i32, i32* @ebp, align 4
  %v1_17513 = add i32 %v0_17513, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_17513 = inttoptr i32 %v1_17513 to i32*
  %v3_17513 = load i32, i32* %v2_17513, align 4
  %v2_17516 = add i32 %v0_17513, -28
  %v3_17516 = inttoptr i32 %v2_17516 to i32*
  store i32 %v3_17513, i32* %v3_17516, align 4
  %v0_17519 = load i32, i32* @ebp, align 4
  %v1_17519 = add i32 %v0_17519, 12
  %v2_17519 = inttoptr i32 %v1_17519 to i32*
  %v3_17519 = load i32, i32* %v2_17519, align 4
  %v2_1751c = add i32 %v0_17519, -32
  %v3_1751c = inttoptr i32 %v2_1751c to i32*
  store i32 %v3_17519, i32* %v3_1751c, align 4
  %v0_1751f = load i32, i32* @ebp, align 4
  %v1_1751f = add i32 %v0_1751f, 16
  %v2_1751f = inttoptr i32 %v1_1751f to i32*
  %v3_1751f = load i32, i32* %v2_1751f, align 4
  %v2_17522 = add i32 %v0_1751f, -36
  %v3_17522 = inttoptr i32 %v2_17522 to i32*
  store i32 %v3_1751f, i32* %v3_17522, align 4
  %v0_17525 = load i32, i32* @ebp, align 4
  %v1_17525 = add i32 %v0_17525, 20
  %v2_17525 = inttoptr i32 %v1_17525 to i32*
  %v3_17525 = load i32, i32* %v2_17525, align 4
  %v2_17528 = add i32 %v0_17525, -40
  %v3_17528 = inttoptr i32 %v2_17528 to i32*
  store i32 %v3_17525, i32* %v3_17528, align 4
  %v0_1752b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_17531 = load i32, i32* @ebp, align 4
  %v2_17531 = add i32 %v1_17531, -12
  %v3_17531 = inttoptr i32 %v2_17531 to i32*
  store i32 %v0_1752b, i32* %v3_17531, align 4
  %v0_17536 = load i32, i32* @ebp, align 4
  %v1_17536 = add i32 %v0_17536, -40
  %v2_17536 = inttoptr i32 %v1_17536 to i32*
  %v3_17536 = load i32, i32* %v2_17536, align 4
  %v1_1753d = add i32 %v0_17536, -36
  %v2_1753d = inttoptr i32 %v1_1753d to i32*
  %v3_1753d = load i32, i32* %v2_1753d, align 4
  %v1_17544 = add i32 %v0_17536, -28
  %v2_17544 = inttoptr i32 %v1_17544 to i32*
  %v3_17544 = load i32, i32* %v2_17544, align 4
  %v1_1754b = add i32 %v0_17536, -32
  %v2_1754b = inttoptr i32 %v1_1754b to i32*
  %v3_1754b = load i32, i32* %v2_1754b, align 4
  %v4_17551 = call i32 @unknown_30701(i32 %v3_1754b, i32 %v3_17544, i32 %v3_1753d, i32 %v3_17536)
  %v0_17556 = load i32, i32* @ebp, align 4
  %v1_17556 = add i32 %v0_17556, -12
  %v2_17556 = inttoptr i32 %v1_17556 to i32*
  %v3_17556 = load i32, i32* %v2_17556, align 4
  %v1_17559 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17559 = xor i32 %v1_17559, %v3_17556
  %v3_17559 = icmp eq i32 %v2_17559, 0
  store i32 %v2_17559, i32* @eax, align 4
  br i1 %v3_17559, label %bb, label %dec_label_pc_17562

bb:                                               ; preds = %dec_label_pc_17510
  %v1_17560 = call i32 @function_17567()
  br label %dec_label_pc_17562

dec_label_pc_17562:                               ; preds = %bb, %dec_label_pc_17510
  %v4_17560 = phi i32 [ %v1_17560, %bb ], [ %v2_17559, %dec_label_pc_17510 ]
  ret i32 %v4_17560

; uselistorder directives
  uselistorder i32 %v0_17536, { 1, 0, 2, 3 }
}

define i32 @function_17567() local_unnamed_addr {
dec_label_pc_17567:
  %v0_17568 = load i32, i32* @eax, align 4
  ret i32 %v0_17568
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_17569:
  %v1_17583 = add i32 %arg1, 16
  store i32 %v1_17583, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17592

bb:                                               ; preds = %dec_label_pc_17569
  %v2_17590 = call i32 @function_17597(i32 %arg1)
  br label %dec_label_pc_17592

dec_label_pc_17592:                               ; preds = %bb, %dec_label_pc_17569
  %v3_17590 = phi i32 [ %v2_17590, %bb ], [ %v1_17583, %dec_label_pc_17569 ]
  ret i32 %v3_17590
}

define i32 @function_17597(i32 %arg1) local_unnamed_addr {
dec_label_pc_17597:
  %v0_17598 = load i32, i32* @eax, align 4
  ret i32 %v0_17598
}

define i32 @_ZNK15CDiskBlockIndex9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1759a:
  %stack_var_-92 = alloca i32, align 4
  %v2_175e6 = ptrtoint i32* %stack_var_-92 to i32
  ret i32 %v2_175e6
}

define i32 @function_175ed(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_175ed:
  %v2_175ef = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_175ef = load i32, i32* @eax, align 4
  %v4_175ef = trunc i32 %v3_175ef to i8
  %v5_175ef = add i8 %v4_175ef, %v2_175ef
  %v21_175ef = inttoptr i32 %v3_175ef to i8*
  store i8 %v5_175ef, i8* %v21_175ef, align 1
  %v0_175f1 = load i32, i32* @ebp, align 4
  %v1_175f1 = add i32 %v0_175f1, -64
  %v0_175f4 = load i32, i32* @eax, align 4
  %v2_175fb = call i32 @unknown_20e72(i32 %v1_175f1, i32 %v0_175f4)
  %v0_17603 = load i32, i32* @ebp, align 4
  %v1_17603 = add i32 %v0_17603, -64
  %v1_17609 = call i32 @unknown_20eb9(i32 %v1_17603)
  %v0_1761a = load i32, i32* @ebp, align 4
  %v1_1761a = add i32 %v0_1761a, -84
  %v2_1761a = inttoptr i32 %v1_1761a to i32*
  %v3_1761a = load i32, i32* %v2_1761a, align 4
  ret i32 %v3_1761a
}

define i32 @function_17622(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17622:
  %v0_17625 = load i32, i32* @ebp, align 4
  %v1_17625 = add i32 %v0_17625, -80
  %v2_17625 = inttoptr i32 %v1_17625 to i32*
  %v3_17625 = load i32, i32* %v2_17625, align 4
  %v1_1762b = call i32 @unknown_30894(i32 %v3_17625)
  %v0_17630 = load i32, i32* @ebp, align 4
  %v1_17630 = add i32 %v0_17630, -36
  %v2_17630 = inttoptr i32 %v1_17630 to i32*
  %v3_17630 = load i32, i32* %v2_17630, align 4
  %v5_17630 = add i32 %v3_17630, %v1_1762b
  store i32 %v5_17630, i32* %v2_17630, align 4
  %v0_17633 = load i32, i32* @ebp, align 4
  %v1_17636 = add i32 %v0_17633, -76
  %v2_17636 = inttoptr i32 %v1_17636 to i32*
  %v3_17636 = load i32, i32* %v2_17636, align 4
  %v1_17639 = add i32 %v3_17636, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_1763f = call i32 @unknown_20e45(i32 %v1_17639)
  %v0_17644 = load i32, i32* @ebp, align 4
  %v1_17644 = add i32 %v0_17644, -60
  %v2_1764e = call i32 @unknown_20e72(i32 %v1_17644, i32 %v1_1763f)
  %v0_17656 = load i32, i32* @ebp, align 4
  %v1_17656 = add i32 %v0_17656, -60
  %v1_1765c = call i32 @unknown_20eb9(i32 %v1_17656)
  %v0_1766d = load i32, i32* @ebp, align 4
  %v1_17678 = add i32 %v0_1766d, -80
  %v2_17678 = inttoptr i32 %v1_17678 to i32*
  %v3_17678 = load i32, i32* %v2_17678, align 4
  %v1_1767e = call i32 @unknown_30894(i32 %v3_17678)
  %v0_17683 = load i32, i32* @ebp, align 4
  %v1_17683 = add i32 %v0_17683, -36
  %v2_17683 = inttoptr i32 %v1_17683 to i32*
  %v3_17683 = load i32, i32* %v2_17683, align 4
  %v5_17683 = add i32 %v3_17683, %v1_1767e
  store i32 %v5_17683, i32* %v2_17683, align 4
  %v0_17686 = load i32, i32* @ebp, align 4
  %v1_17689 = add i32 %v0_17686, -76
  %v2_17689 = inttoptr i32 %v1_17689 to i32*
  %v3_17689 = load i32, i32* %v2_17689, align 4
  %v1_1768c = add i32 %v3_17689, 64
  %v1_17692 = call i32 @unknown_20a15(i32 %v1_1768c)
  ret i32 %v1_17692
}

define i32 @function_1764c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1764c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_176a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_176a4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_176a4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_176a4 = load i32, i32* @eax, align 4
  %v4_176a4 = trunc i32 %v3_176a4 to i8
  %v5_176a4 = add i8 %v4_176a4, %v2_176a4
  %v21_176a4 = inttoptr i32 %v3_176a4 to i8*
  store i8 %v5_176a4, i8* %v21_176a4, align 1
  %v0_176a9 = load i32, i32* @ebp, align 4
  %v1_176a9 = add i32 %v0_176a9, -56
  store i32 %v1_176a9, i32* %eax.global-to-local, align 4
  %v1_176af = call i32 @unknown_20a89(i32 %v1_176a9)
  store i32 %v1_176af, i32* %eax.global-to-local, align 4
  store i32 %v1_176af, i32* %edx.global-to-local, align 4
  %v0_176b6 = load i32, i32* @ebp, align 4
  %v1_176b6 = add i32 %v0_176b6, -99
  %v2_176b6 = inttoptr i32 %v1_176b6 to i8*
  %v3_176b6 = load i8, i8* %v2_176b6, align 1
  %v0_176be = load i32, i32* @ebx, align 4
  %v1_176c2 = add i32 %v0_176b6, -84
  %v2_176c2 = inttoptr i32 %v1_176c2 to i32*
  %v3_176c2 = load i32, i32* %v2_176c2, align 4
  store i32 %v3_176c2, i32* %eax.global-to-local, align 4
  %v1_176cd = add i32 %v0_176b6, -80
  %v2_176cd = inttoptr i32 %v1_176cd to i32*
  %v3_176cd = load i32, i32* %v2_176cd, align 4
  store i32 %v3_176cd, i32* %eax.global-to-local, align 4
  %v5_176d3 = sext i8 %v3_176b6 to i32
  %v6_176d3 = call i32 @unknown_2fc7e(i32 %v3_176cd, i32 %v1_176af, i32 %v3_176c2, i32 %v0_176be, i32 %v5_176d3)
  store i32 %v6_176d3, i32* %eax.global-to-local, align 4
  %v0_176d8 = load i32, i32* @ebp, align 4
  %v1_176d8 = add i32 %v0_176d8, -36
  %v2_176d8 = inttoptr i32 %v1_176d8 to i32*
  %v3_176d8 = load i32, i32* %v2_176d8, align 4
  %v5_176d8 = add i32 %v3_176d8, %v6_176d3
  store i32 %v5_176d8, i32* %v2_176d8, align 4
  %v0_176db = load i32, i32* @ebp, align 4
  %v1_176db = add i32 %v0_176db, -88
  %v2_176db = inttoptr i32 %v1_176db to i32*
  %v3_176db = load i32, i32* %v2_176db, align 4
  store i32 %v3_176db, i32* %ebx.global-to-local, align 4
  %v1_176de = add i32 %v0_176db, -76
  %v2_176de = inttoptr i32 %v1_176de to i32*
  %v3_176de = load i32, i32* %v2_176de, align 4
  %v1_176e1 = add i32 %v3_176de, 56
  store i32 %v1_176e1, i32* %eax.global-to-local, align 4
  %v1_176e7 = call i32 @unknown_20a15(i32 %v1_176e1)
  store i32 %v1_176e7, i32* %eax.global-to-local, align 4
  %v0_176ec = load i32, i32* @ebp, align 4
  %v1_176ec = add i32 %v0_176ec, -52
  store i32 %v1_176ec, i32* %edx.global-to-local, align 4
  %v2_176f6 = call i32 @unknown_20a42(i32 %v1_176ec, i32 %v1_176e7)
  %v0_176fe = load i32, i32* @ebp, align 4
  %v1_176fe = add i32 %v0_176fe, -52
  store i32 %v1_176fe, i32* %eax.global-to-local, align 4
  store i32 %v1_176fe, i32* %stack_var_-8, align 4
  %v1_17704 = call i32 @unknown_20a89(i32 %v1_176fe)
  store i32 %v1_17704, i32* %eax.global-to-local, align 4
  store i32 %v1_17704, i32* %edx.global-to-local, align 4
  %v0_1770b = load i32, i32* @ebp, align 4
  %v1_1770b = add i32 %v0_1770b, -98
  %v2_1770b = inttoptr i32 %v1_1770b to i8*
  %v3_1770b = load i8, i8* %v2_1770b, align 1
  %v4_1770b = zext i8 %v3_1770b to i32
  store i32 %v4_1770b, i32* %eax.global-to-local, align 4
  %v0_17713 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17717 = add i32 %v0_1770b, -84
  %v2_17717 = inttoptr i32 %v1_17717 to i32*
  %v3_17717 = load i32, i32* %v2_17717, align 4
  store i32 %v3_17717, i32* %eax.global-to-local, align 4
  %v1_17722 = add i32 %v0_1770b, -80
  %v2_17722 = inttoptr i32 %v1_17722 to i32*
  %v3_17722 = load i32, i32* %v2_17722, align 4
  store i32 %v3_17722, i32* %eax.global-to-local, align 4
  store i32 %v3_17722, i32* %stack_var_-8, align 4
  %v5_17728 = call i32 @unknown_2fc7e(i32 %v3_17722, i32 %v1_17704, i32 %v3_17717, i32 %v0_17713, i32 %v4_1770b)
  store i32 %v5_17728, i32* %eax.global-to-local, align 4
  %v0_1772d = load i32, i32* @ebp, align 4
  %v1_1772d = add i32 %v0_1772d, -36
  %v2_1772d = inttoptr i32 %v1_1772d to i32*
  %v3_1772d = load i32, i32* %v2_1772d, align 4
  %v5_1772d = add i32 %v3_1772d, %v5_17728
  store i32 %v5_1772d, i32* %v2_1772d, align 4
  %v0_17730 = load i32, i32* @ebp, align 4
  %v1_17730 = add i32 %v0_17730, -76
  %v2_17730 = inttoptr i32 %v1_17730 to i32*
  %v3_17730 = load i32, i32* %v2_17730, align 4
  store i32 %v3_17730, i32* %eax.global-to-local, align 4
  %v1_17733 = add i32 %v3_17730, 64
  %v2_17733 = inttoptr i32 %v1_17733 to i32*
  %v3_17733 = load i32, i32* %v2_17733, align 4
  %v1_17736 = and i32 %v3_17733, 24
  %v2_17736 = icmp eq i32 %v1_17736, 0
  store i32 %v1_17736, i32* %eax.global-to-local, align 4
  br i1 %v2_17736, label %dec_label_pc_17792, label %dec_label_pc_1773d

dec_label_pc_1773d:                               ; preds = %dec_label_pc_176a4
  %v1_1773d = add i32 %v0_17730, -88
  %v2_1773d = inttoptr i32 %v1_1773d to i32*
  %v3_1773d = load i32, i32* %v2_1773d, align 4
  store i32 %v3_1773d, i32* %ebx.global-to-local, align 4
  %v3_17740 = load i32, i32* %v2_17730, align 4
  %v1_17743 = add i32 %v3_17740, 12
  store i32 %v1_17743, i32* %eax.global-to-local, align 4
  store i32 %v1_17743, i32* %stack_var_-8, align 4
  %v1_17749 = call i32 @unknown_20e45(i32 %v1_17743)
  store i32 %v1_17749, i32* %eax.global-to-local, align 4
  %v0_1774e = load i32, i32* @ebp, align 4
  %v1_1774e = add i32 %v0_1774e, -48
  store i32 %v1_1774e, i32* %edx.global-to-local, align 4
  store i32 %v1_1774e, i32* %stack_var_-8, align 4
  %v2_17758 = call i32 @unknown_20e72(i32 %v1_1774e, i32 %v1_17749)
  %v0_17760 = load i32, i32* @ebp, align 4
  %v1_17760 = add i32 %v0_17760, -48
  store i32 %v1_17760, i32* %eax.global-to-local, align 4
  store i32 %v1_17760, i32* %stack_var_-12, align 4
  %v1_17766 = call i32 @unknown_20eb9(i32 %v1_17760)
  store i32 %v1_17766, i32* %eax.global-to-local, align 4
  store i32 %v1_17766, i32* %edx.global-to-local, align 4
  %v0_1776d = load i32, i32* @ebp, align 4
  %v1_17779 = add i32 %v0_1776d, -84
  %v2_17779 = inttoptr i32 %v1_17779 to i32*
  %v3_17779 = load i32, i32* %v2_17779, align 4
  store i32 %v3_17779, i32* %eax.global-to-local, align 4
  store i32 %v1_17766, i32* %stack_var_-8, align 4
  %v1_17784 = add i32 %v0_1776d, -80
  %v2_17784 = inttoptr i32 %v1_17784 to i32*
  %v3_17784 = load i32, i32* %v2_17784, align 4
  store i32 %v3_17784, i32* %eax.global-to-local, align 4
  store i32 %v3_17784, i32* %stack_var_-12, align 4
  %v1_1778a = call i32 @unknown_30894(i32 %v3_17784)
  store i32 %v1_1778a, i32* %eax.global-to-local, align 4
  %v0_1778f = load i32, i32* @ebp, align 4
  %v1_1778f = add i32 %v0_1778f, -36
  %v2_1778f = inttoptr i32 %v1_1778f to i32*
  %v3_1778f = load i32, i32* %v2_1778f, align 4
  %v5_1778f = add i32 %v3_1778f, %v1_1778a
  store i32 %v5_1778f, i32* %v2_1778f, align 4
  %v0_17792.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_17792

dec_label_pc_17792:                               ; preds = %dec_label_pc_1773d, %dec_label_pc_176a4
  %v0_1779f = phi i32 [ %v0_17792.pre, %dec_label_pc_1773d ], [ %v0_17730, %dec_label_pc_176a4 ]
  %v1_17792 = add i32 %v0_1779f, -76
  %v2_17792 = inttoptr i32 %v1_17792 to i32*
  %v3_17792 = load i32, i32* %v2_17792, align 4
  store i32 %v3_17792, i32* %eax.global-to-local, align 4
  %v1_17795 = add i32 %v3_17792, 64
  %v2_17795 = inttoptr i32 %v1_17795 to i32*
  %v3_17795 = load i32, i32* %v2_17795, align 4
  %v1_17798 = and i32 %v3_17795, 8
  store i32 %v1_17798, i32* %eax.global-to-local, align 4
  %v1_1779f = add i32 %v0_1779f, -88
  %v2_1779f = inttoptr i32 %v1_1779f to i32*
  %v3_1779f = load i32, i32* %v2_1779f, align 4
  store i32 %v3_1779f, i32* @ebx, align 4
  %v3_177a2 = load i32, i32* %v2_17792, align 4
  %v1_177a5 = add i32 %v3_177a2, 16
  store i32 %v1_177a5, i32* %eax.global-to-local, align 4
  %v1_177a8 = load i32, i32* @esp, align 4
  %v2_177a8 = inttoptr i32 %v1_177a8 to i32*
  store i32 %v1_177a5, i32* %v2_177a8, align 4
  %v0_177ab = load i32, i32* %stack_var_-12, align 4
  %v1_177ab = call i32 @unknown_20a15(i32 %v0_177ab)
  store i32 %v1_177ab, i32* %eax.global-to-local, align 4
  %v0_177b0 = load i32, i32* @ebp, align 4
  %v1_177b0 = add i32 %v0_177b0, -44
  store i32 %v1_177b0, i32* %edx.global-to-local, align 4
  %v1_177b3 = load i32, i32* @esp, align 4
  %v2_177b3 = add i32 %v1_177b3, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_177b3 = inttoptr i32 %v2_177b3 to i32*
  store i32 %v1_177ab, i32* %v3_177b3, align 4
  %v0_177b7 = load i32, i32* %edx.global-to-local, align 4
  %v1_177b7 = load i32, i32* @esp, align 4
  %v2_177b7 = inttoptr i32 %v1_177b7 to i32*
  store i32 %v0_177b7, i32* %v2_177b7, align 4
  %v0_177ba = load i32, i32* %stack_var_-12, align 4
  %v1_177ba = load i32, i32* %stack_var_-8, align 4
  %v2_177ba = call i32 @unknown_20a42(i32 %v0_177ba, i32 %v1_177ba)
  %v0_177bf = load i32, i32* @esp, align 4
  %v1_177bf = sub i32 %v0_177bf, ptrtoint (i8** @global_var_4.1177 to i32)
  %v0_177c2 = load i32, i32* @ebp, align 4
  %v1_177c2 = add i32 %v0_177c2, -44
  store i32 %v1_177c2, i32* %eax.global-to-local, align 4
  %v2_177c5 = inttoptr i32 %v1_177bf to i32*
  store i32 %v1_177c2, i32* %v2_177c5, align 4
  %v0_177c8 = load i32, i32* %stack_var_-12, align 4
  %v1_177c8 = call i32 @unknown_20a89(i32 %v0_177c8)
  store i32 %v1_177c8, i32* %eax.global-to-local, align 4
  store i32 %v1_177c8, i32* %edx.global-to-local, align 4
  %v0_177cf = load i32, i32* @ebp, align 4
  %v1_177cf = add i32 %v0_177cf, -96
  %v2_177cf = inttoptr i32 %v1_177cf to i8*
  %v3_177cf = load i8, i8* %v2_177cf, align 1
  %v4_177cf = zext i8 %v3_177cf to i32
  store i32 %v4_177cf, i32* %eax.global-to-local, align 4
  %v2_177d3 = load i32, i32* @esp, align 4
  %v3_177d3 = add i32 %v2_177d3, 16
  %v4_177d3 = inttoptr i32 %v3_177d3 to i8*
  store i8 %v3_177cf, i8* %v4_177d3, align 1
  %v0_177d7 = load i32, i32* @ebx, align 4
  %v1_177d7 = load i32, i32* @esp, align 4
  %v2_177d7 = add i32 %v1_177d7, 12
  %v3_177d7 = inttoptr i32 %v2_177d7 to i32*
  store i32 %v0_177d7, i32* %v3_177d7, align 4
  %v0_177db = load i32, i32* @ebp, align 4
  %v1_177db = add i32 %v0_177db, -84
  %v2_177db = inttoptr i32 %v1_177db to i32*
  %v3_177db = load i32, i32* %v2_177db, align 4
  store i32 %v3_177db, i32* %eax.global-to-local, align 4
  %v1_177de = load i32, i32* @esp, align 4
  %v2_177de = add i32 %v1_177de, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_177de = inttoptr i32 %v2_177de to i32*
  store i32 %v3_177db, i32* %v3_177de, align 4
  %v0_177e2 = load i32, i32* %edx.global-to-local, align 4
  %v1_177e2 = load i32, i32* @esp, align 4
  %v2_177e2 = add i32 %v1_177e2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_177e2 = inttoptr i32 %v2_177e2 to i32*
  store i32 %v0_177e2, i32* %v3_177e2, align 4
  %v0_177e6 = load i32, i32* @ebp, align 4
  %v1_177e6 = add i32 %v0_177e6, -80
  %v2_177e6 = inttoptr i32 %v1_177e6 to i32*
  %v3_177e6 = load i32, i32* %v2_177e6, align 4
  store i32 %v3_177e6, i32* %eax.global-to-local, align 4
  %v1_177e9 = load i32, i32* @esp, align 4
  %v2_177e9 = inttoptr i32 %v1_177e9 to i32*
  store i32 %v3_177e6, i32* %v2_177e9, align 4
  %v3_177e9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_177e9

; uselistorder directives
  uselistorder i32 %v0_176b6, { 1, 0, 2 }
  uselistorder i32 -96, { 5, 10, 3, 4, 6, 7, 8, 9, 1, 2, 0 }
  uselistorder i32 (i32)* @unknown_30894, { 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_20eb9, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @unknown_20e72, { 0, 2, 1 }
  uselistorder i32 24, { 2, 0, 3, 1 }
  uselistorder i32 64, { 7, 8, 0, 9, 10, 11, 12, 2, 3, 4, 5, 1, 6 }
  uselistorder i32 56, { 5, 6, 4, 3, 2, 0, 1 }
}

define i32 @function_177d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_177d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_177f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_177f0:
  %ebx.global-to-local = alloca i32, align 4
  %v2_177f0 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_177f0 = load i32, i32* @eax, align 4
  %v4_177f0 = trunc i32 %v3_177f0 to i8
  %v5_177f0 = add i8 %v4_177f0, %v2_177f0
  %v20_177f0 = load i32, i32* @ecx, align 4
  %v21_177f0 = inttoptr i32 %v20_177f0 to i8*
  store i8 %v5_177f0, i8* %v21_177f0, align 1
  %v0_177f2 = load i32, i32* @ebp, align 4
  %v1_177f2 = add i32 %v0_177f2, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_177f2, i32* @ebp, align 4
  %v0_177f9 = load i32, i32* @eax, align 4
  %v1_177f9 = add i32 %v0_177f9, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_177fa = and i32 %v1_177f9, 16
  %v2_177fa = icmp eq i32 %v1_177fa, 0
  br i1 %v2_177fa, label %dec_label_pc_17856, label %dec_label_pc_17801

dec_label_pc_17801:                               ; preds = %dec_label_pc_177f0
  %v1_17801 = add i32 %v0_177f2, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -88)
  %v2_17801 = inttoptr i32 %v1_17801 to i32*
  %v3_17801 = load i32, i32* %v2_17801, align 4
  store i32 %v3_17801, i32* %ebx.global-to-local, align 4
  %v1_17804 = add i32 %v0_177f2, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -76)
  %v2_17804 = inttoptr i32 %v1_17804 to i32*
  %v3_17804 = load i32, i32* %v2_17804, align 4
  %v1_17807 = add i32 %v3_17804, 20
  %v1_1780d = call i32 @unknown_20a15(i32 %v1_17807)
  %v0_17812 = load i32, i32* @ebp, align 4
  %v1_17812 = add i32 %v0_17812, -40
  %v2_1781c = call i32 @unknown_20a42(i32 %v1_17812, i32 %v1_1780d)
  %v0_17824 = load i32, i32* @ebp, align 4
  %v1_17824 = add i32 %v0_17824, -40
  %v1_1782a = call i32 @unknown_20a89(i32 %v1_17824)
  %v0_17831 = load i32, i32* @ebp, align 4
  %v1_17831 = add i32 %v0_17831, -95
  %v2_17831 = inttoptr i32 %v1_17831 to i8*
  %v3_17831 = load i8, i8* %v2_17831, align 1
  %v0_17839 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1783d = add i32 %v0_17831, -84
  %v2_1783d = inttoptr i32 %v1_1783d to i32*
  %v3_1783d = load i32, i32* %v2_1783d, align 4
  %v1_17848 = add i32 %v0_17831, -80
  %v2_17848 = inttoptr i32 %v1_17848 to i32*
  %v3_17848 = load i32, i32* %v2_17848, align 4
  %v5_1784e = sext i8 %v3_17831 to i32
  %v6_1784e = call i32 @unknown_2fc7e(i32 %v3_17848, i32 %v1_1782a, i32 %v3_1783d, i32 %v0_17839, i32 %v5_1784e)
  %v0_17853 = load i32, i32* @ebp, align 4
  %v1_17853 = add i32 %v0_17853, -36
  %v2_17853 = inttoptr i32 %v1_17853 to i32*
  %v3_17853 = load i32, i32* %v2_17853, align 4
  %v5_17853 = add i32 %v3_17853, %v6_1784e
  store i32 %v5_17853, i32* %v2_17853, align 4
  %v0_17856.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_17856

dec_label_pc_17856:                               ; preds = %dec_label_pc_17801, %dec_label_pc_177f0
  %v0_1786b = phi i32 [ %v0_17856.pre, %dec_label_pc_17801 ], [ %v1_177f2, %dec_label_pc_177f0 ]
  %v1_17856 = add i32 %v0_1786b, -88
  %v2_17856 = inttoptr i32 %v1_17856 to i32*
  %v3_17856 = load i32, i32* %v2_17856, align 4
  %v1_17859 = add i32 %v0_1786b, -76
  %v2_17859 = inttoptr i32 %v1_17859 to i32*
  %v3_17859 = load i32, i32* %v2_17859, align 4
  %v1_1785c = add i32 %v3_17859, 68
  %v1_1785f = add i32 %v0_1786b, -94
  %v2_1785f = inttoptr i32 %v1_1785f to i8*
  %v3_1785f = load i8, i8* %v2_1785f, align 1
  %v1_1786b = add i32 %v0_1786b, -84
  %v2_1786b = inttoptr i32 %v1_1786b to i32*
  %v3_1786b = load i32, i32* %v2_1786b, align 4
  %v1_17876 = add i32 %v0_1786b, -80
  %v2_17876 = inttoptr i32 %v1_17876 to i32*
  %v3_17876 = load i32, i32* %v2_17876, align 4
  %v5_1787c = sext i8 %v3_1785f to i32
  %v6_1787c = call i32 @unknown_308fc(i32 %v3_17876, i32 %v1_1785c, i32 %v3_1786b, i32 %v3_17856, i32 %v5_1787c)
  %v0_17881 = load i32, i32* @ebp, align 4
  %v1_17881 = add i32 %v0_17881, -36
  %v2_17881 = inttoptr i32 %v1_17881 to i32*
  %v3_17881 = load i32, i32* %v2_17881, align 4
  %v5_17881 = add i32 %v3_17881, %v6_1787c
  store i32 %v5_17881, i32* %v2_17881, align 4
  %v0_17884 = load i32, i32* @ebp, align 4
  %v1_17884 = add i32 %v0_17884, -88
  %v2_17884 = inttoptr i32 %v1_17884 to i32*
  %v3_17884 = load i32, i32* %v2_17884, align 4
  %v1_17887 = add i32 %v0_17884, -76
  %v2_17887 = inttoptr i32 %v1_17887 to i32*
  %v3_17887 = load i32, i32* %v2_17887, align 4
  %v1_1788a = add i32 %v3_17887, 116
  %v1_1788d = add i32 %v0_17884, -93
  %v2_1788d = inttoptr i32 %v1_1788d to i8*
  %v3_1788d = load i8, i8* %v2_1788d, align 1
  %v1_17899 = add i32 %v0_17884, -84
  %v2_17899 = inttoptr i32 %v1_17899 to i32*
  %v3_17899 = load i32, i32* %v2_17899, align 4
  %v1_178a4 = add i32 %v0_17884, -80
  %v2_178a4 = inttoptr i32 %v1_178a4 to i32*
  %v3_178a4 = load i32, i32* %v2_178a4, align 4
  %v5_178aa = sext i8 %v3_1788d to i32
  %v6_178aa = call i32 @unknown_30966(i32 %v3_178a4, i32 %v1_1788a, i32 %v3_17899, i32 %v3_17884, i32 %v5_178aa)
  %v0_178af = load i32, i32* @ebp, align 4
  %v1_178af = add i32 %v0_178af, -36
  %v2_178af = inttoptr i32 %v1_178af to i32*
  %v3_178af = load i32, i32* %v2_178af, align 4
  %v5_178af = add i32 %v3_178af, %v6_178aa
  store i32 %v5_178af, i32* %v2_178af, align 4
  %v0_178b2 = load i32, i32* @ebp, align 4
  %v1_178b2 = add i32 %v0_178b2, -88
  %v2_178b2 = inttoptr i32 %v1_178b2 to i32*
  %v3_178b2 = load i32, i32* %v2_178b2, align 4
  %v1_178b5 = add i32 %v0_178b2, -76
  %v2_178b5 = inttoptr i32 %v1_178b5 to i32*
  %v3_178b5 = load i32, i32* %v2_178b5, align 4
  %v1_178b8 = add i32 %v3_178b5, 72
  %v1_178bb = add i32 %v0_178b2, -92
  %v2_178bb = inttoptr i32 %v1_178bb to i8*
  %v3_178bb = load i8, i8* %v2_178bb, align 1
  %v1_178c7 = add i32 %v0_178b2, -84
  %v2_178c7 = inttoptr i32 %v1_178c7 to i32*
  %v3_178c7 = load i32, i32* %v2_178c7, align 4
  %v1_178d2 = add i32 %v0_178b2, -80
  %v2_178d2 = inttoptr i32 %v1_178d2 to i32*
  %v3_178d2 = load i32, i32* %v2_178d2, align 4
  %v5_178d8 = sext i8 %v3_178bb to i32
  %v6_178d8 = call i32 @unknown_30966(i32 %v3_178d2, i32 %v1_178b8, i32 %v3_178c7, i32 %v3_178b2, i32 %v5_178d8)
  %v0_178dd = load i32, i32* @ebp, align 4
  %v1_178dd = add i32 %v0_178dd, -36
  %v2_178dd = inttoptr i32 %v1_178dd to i32*
  %v3_178dd = load i32, i32* %v2_178dd, align 4
  %v5_178dd = add i32 %v3_178dd, %v6_178d8
  store i32 %v5_178dd, i32* %v2_178dd, align 4
  %v0_178e0 = load i32, i32* @ebp, align 4
  %v1_178e0 = add i32 %v0_178e0, -88
  %v2_178e0 = inttoptr i32 %v1_178e0 to i32*
  %v3_178e0 = load i32, i32* %v2_178e0, align 4
  %v1_178e3 = add i32 %v0_178e0, -76
  %v2_178e3 = inttoptr i32 %v1_178e3 to i32*
  %v3_178e3 = load i32, i32* %v2_178e3, align 4
  %v1_178e6 = add i32 %v3_178e3, 104
  %v1_178e9 = add i32 %v0_178e0, -91
  %v2_178e9 = inttoptr i32 %v1_178e9 to i8*
  %v3_178e9 = load i8, i8* %v2_178e9, align 1
  %v1_178f5 = add i32 %v0_178e0, -84
  %v2_178f5 = inttoptr i32 %v1_178f5 to i32*
  %v3_178f5 = load i32, i32* %v2_178f5, align 4
  %v1_17900 = add i32 %v0_178e0, -80
  %v2_17900 = inttoptr i32 %v1_17900 to i32*
  %v3_17900 = load i32, i32* %v2_17900, align 4
  %v5_17906 = sext i8 %v3_178e9 to i32
  %v6_17906 = call i32 @unknown_2c0c2(i32 %v3_17900, i32 %v1_178e6, i32 %v3_178f5, i32 %v3_178e0, i32 %v5_17906)
  %v0_1790b = load i32, i32* @ebp, align 4
  %v1_1790b = add i32 %v0_1790b, -36
  %v2_1790b = inttoptr i32 %v1_1790b to i32*
  %v3_1790b = load i32, i32* %v2_1790b, align 4
  %v5_1790b = add i32 %v3_1790b, %v6_17906
  store i32 %v5_1790b, i32* %v2_1790b, align 4
  %v0_1790e = load i32, i32* @ebp, align 4
  %v1_1790e = add i32 %v0_1790e, -88
  %v2_1790e = inttoptr i32 %v1_1790e to i32*
  %v3_1790e = load i32, i32* %v2_1790e, align 4
  %v1_17911 = add i32 %v0_1790e, -76
  %v2_17911 = inttoptr i32 %v1_17911 to i32*
  %v3_17911 = load i32, i32* %v2_17911, align 4
  %v1_17914 = add i32 %v3_17911, 108
  %v1_17917 = add i32 %v0_1790e, -90
  %v2_17917 = inttoptr i32 %v1_17917 to i8*
  %v3_17917 = load i8, i8* %v2_17917, align 1
  %v1_17923 = add i32 %v0_1790e, -84
  %v2_17923 = inttoptr i32 %v1_17923 to i32*
  %v3_17923 = load i32, i32* %v2_17923, align 4
  %v1_1792e = add i32 %v0_1790e, -80
  %v2_1792e = inttoptr i32 %v1_1792e to i32*
  %v3_1792e = load i32, i32* %v2_1792e, align 4
  %v5_17934 = sext i8 %v3_17917 to i32
  %v6_17934 = call i32 @unknown_2c0c2(i32 %v3_1792e, i32 %v1_17914, i32 %v3_17923, i32 %v3_1790e, i32 %v5_17934)
  %v0_17939 = load i32, i32* @ebp, align 4
  %v1_17939 = add i32 %v0_17939, -36
  %v2_17939 = inttoptr i32 %v1_17939 to i32*
  %v3_17939 = load i32, i32* %v2_17939, align 4
  %v5_17939 = add i32 %v3_17939, %v6_17934
  store i32 %v5_17939, i32* %v2_17939, align 4
  %v0_1793c = load i32, i32* @ebp, align 4
  %v1_1793c = add i32 %v0_1793c, -88
  %v2_1793c = inttoptr i32 %v1_1793c to i32*
  %v3_1793c = load i32, i32* %v2_1793c, align 4
  %v1_1793f = add i32 %v0_1793c, -76
  %v2_1793f = inttoptr i32 %v1_1793f to i32*
  %v3_1793f = load i32, i32* %v2_1793f, align 4
  %v1_17942 = add i32 %v3_1793f, 112
  %v1_17945 = add i32 %v0_1793c, -89
  %v2_17945 = inttoptr i32 %v1_17945 to i8*
  %v3_17945 = load i8, i8* %v2_17945, align 1
  %v4_17945 = zext i8 %v3_17945 to i32
  store i32 %v4_17945, i32* @ecx, align 4
  %v1_17951 = add i32 %v0_1793c, -84
  %v2_17951 = inttoptr i32 %v1_17951 to i32*
  %v3_17951 = load i32, i32* %v2_17951, align 4
  %v1_1795c = add i32 %v0_1793c, -80
  %v2_1795c = inttoptr i32 %v1_1795c to i32*
  %v3_1795c = load i32, i32* %v2_1795c, align 4
  %v5_17962 = sext i8 %v3_17945 to i32
  %v6_17962 = call i32 @unknown_2c0c2(i32 %v3_1795c, i32 %v1_17942, i32 %v3_17951, i32 %v3_1793c, i32 %v5_17962)
  %v0_17967 = load i32, i32* @ebp, align 4
  %v1_17967 = add i32 %v0_17967, -36
  %v2_17967 = inttoptr i32 %v1_17967 to i32*
  %v3_17967 = load i32, i32* %v2_17967, align 4
  %v5_17967 = add i32 %v3_17967, %v6_17962
  store i32 %v5_17967, i32* %v2_17967, align 4
  %v0_1796a = load i32, i32* @ebp, align 4
  %v1_1796a = add i32 %v0_1796a, -28
  %v2_1796a = inttoptr i32 %v1_1796a to i32*
  %v3_1796a = load i32, i32* %v2_1796a, align 4
  %v1_1796d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1796d = xor i32 %v1_1796d, %v3_1796a
  %v3_1796d = icmp eq i32 %v2_1796d, 0
  store i32 %v2_1796d, i32* @eax, align 4
  br i1 %v3_1796d, label %bb, label %dec_label_pc_17976

bb:                                               ; preds = %dec_label_pc_17856
  %v1_17974 = call i32 @function_1797b()
  br label %dec_label_pc_17976

dec_label_pc_17976:                               ; preds = %bb, %dec_label_pc_17856
  %v2_17974 = phi i32 [ %v1_17974, %bb ], [ %v2_1796d, %dec_label_pc_17856 ]
  ret i32 %v2_17974

; uselistorder directives
  uselistorder i32 %v0_1793c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1790e, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_178e0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_178b2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17884, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1786b, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_17831, { 1, 0, 2 }
  uselistorder i32 112, { 9, 8, 3, 0, 4, 1, 6, 5, 2, 7 }
  uselistorder i32 108, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_2c0c2, { 2, 1, 0 }
  uselistorder i32 104, { 3, 2, 1, 0 }
  uselistorder i32 72, { 5, 4, 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_30966, { 1, 0 }
  uselistorder i32 -93, { 2, 1, 0 }
  uselistorder i32 116, { 8, 7, 2, 0, 5, 3, 1, 6, 4 }
  uselistorder i32 -94, { 2, 1, 0 }
  uselistorder i32 68, { 16, 15, 0, 1, 12, 2, 13, 14, 3, 4, 5, 10, 9, 6, 7, 8, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_2fc7e, { 0, 2, 1 }
  uselistorder i32 -95, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_20a89, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @unknown_20a42, { 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_20a15, { 0, 2, 1, 3 }
}

define i32 @function_1797b() local_unnamed_addr {
dec_label_pc_1797b:
  %v0_1797b = load i32, i32* @ebp, align 4
  %v1_17981 = inttoptr i32 %v0_1797b to i32*
  %v2_17981 = load i32, i32* %v1_17981, align 4
  store i32 %v2_17981, i32* @ebp, align 4
  %v0_17982 = load i32, i32* @eax, align 4
  ret i32 %v0_17982
}

define i32 @_Z11UnserializeI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17983:
  %stack_var_-17 = alloca i32, align 4
  %v2_179ac = ptrtoint i32* %stack_var_-17 to i32
  %v5_179ce = call i32 @unknown_30db7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_179ac)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_179df

bb:                                               ; preds = %dec_label_pc_17983
  %v1_179dd = call i32 @function_179e4()
  br label %dec_label_pc_179df

dec_label_pc_179df:                               ; preds = %bb, %dec_label_pc_17983
  %v2_179dd = phi i32 [ %v1_179dd, %bb ], [ 0, %dec_label_pc_17983 ]
  ret i32 %v2_179dd
}

define i32 @function_179e4() local_unnamed_addr {
dec_label_pc_179e4:
  %v0_179e5 = load i32, i32* @eax, align 4
  ret i32 %v0_179e5
}

define i32 @_ZNK7CBigNum9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_179e6:
  ret i32 %arg2
}

define i32 @function_179f6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_179f6:
  %v0_179f6 = load i32, i32* @eax, align 4
  %v1_179f6 = load i32, i32* @ebp, align 4
  %v2_179f6 = add i32 %v1_179f6, -32
  %v3_179f6 = inttoptr i32 %v2_179f6 to i32*
  store i32 %v0_179f6, i32* %v3_179f6, align 4
  %v0_179f9 = load i32, i32* @ebp, align 4
  %v1_179f9 = add i32 %v0_179f9, 16
  %v2_179f9 = inttoptr i32 %v1_179f9 to i32*
  %v3_179f9 = load i32, i32* %v2_179f9, align 4
  %v2_179fc = add i32 %v0_179f9, -36
  %v3_179fc = inttoptr i32 %v2_179fc to i32*
  store i32 %v3_179f9, i32* %v3_179fc, align 4
  %v0_179ff = load i32, i32* @ebp, align 4
  %v1_179ff = add i32 %v0_179ff, 20
  %v2_179ff = inttoptr i32 %v1_179ff to i32*
  %v3_179ff = load i32, i32* %v2_179ff, align 4
  %v2_17a02 = add i32 %v0_179ff, -40
  %v3_17a02 = inttoptr i32 %v2_17a02 to i32*
  store i32 %v3_179ff, i32* %v3_17a02, align 4
  %v0_17a05 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_17a0b = load i32, i32* @ebp, align 4
  %v2_17a0b = add i32 %v1_17a0b, -12
  %v3_17a0b = inttoptr i32 %v2_17a0b to i32*
  store i32 %v0_17a05, i32* %v3_17a0b, align 4
  %v0_17a10 = load i32, i32* @ebp, align 4
  %v1_17a10 = add i32 %v0_17a10, -24
  %v1_17a13 = add i32 %v0_17a10, -28
  %v2_17a13 = inttoptr i32 %v1_17a13 to i32*
  %v3_17a13 = load i32, i32* %v2_17a13, align 4
  %v2_17a1d = call i32 @unknown_1d1d2(i32 %v1_17a10, i32 %v3_17a13)
  %v0_17a25 = load i32, i32* @ebp, align 4
  %v1_17a25 = add i32 %v0_17a25, -40
  %v2_17a25 = inttoptr i32 %v1_17a25 to i32*
  %v3_17a25 = load i32, i32* %v2_17a25, align 4
  %v1_17a2c = add i32 %v0_17a25, -36
  %v2_17a2c = inttoptr i32 %v1_17a2c to i32*
  %v3_17a2c = load i32, i32* %v2_17a2c, align 4
  %v1_17a33 = add i32 %v0_17a25, -24
  %v1_17a3a = add i32 %v0_17a25, -32
  %v2_17a3a = inttoptr i32 %v1_17a3a to i32*
  %v3_17a3a = load i32, i32* %v2_17a3a, align 4
  %v4_17a40 = call i32 @unknown_30f0e(i32 %v3_17a3a, i32 %v1_17a33, i32 %v3_17a2c, i32 %v3_17a25)
  ret i32 %v4_17a40

; uselistorder directives
  uselistorder i32 %v0_17a25, { 1, 0, 2, 3 }
}

define i32 @function_17a45(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a45:
  %v0_17a45 = load i32, i32* @ebp, align 4
  %v1_17a45 = add i32 %v0_17a45, -24
  %v1_17a4b = call i32 @unknown_1fd34(i32 %v1_17a45)
  %v0_17a50 = load i32, i32* @ebp, align 4
  %v1_17a50 = add i32 %v0_17a50, -12
  %v2_17a50 = inttoptr i32 %v1_17a50 to i32*
  %v3_17a50 = load i32, i32* %v2_17a50, align 4
  %v1_17a53 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17a53 = xor i32 %v1_17a53, %v3_17a50
  %v3_17a53 = icmp eq i32 %v2_17a53, 0
  store i32 %v2_17a53, i32* @eax, align 4
  br i1 %v3_17a53, label %bb, label %dec_label_pc_17a5c

bb:                                               ; preds = %dec_label_pc_17a45
  %v1_17a5a = call i32 @function_17a7a()
  store i32 %v1_17a5a, i32* @eax, align 4
  br label %dec_label_pc_17a5c

dec_label_pc_17a5c:                               ; preds = %bb, %dec_label_pc_17a45
  %v0_17a5c = call i32 @function_17a75()
  ret i32 %v0_17a5c
}

define i32 @function_17a5f() local_unnamed_addr {
dec_label_pc_17a5f:
  %eax.global-to-local = alloca i32, align 4
  %v0_17a5f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17a5f
}

define i32 @function_17a75() local_unnamed_addr {
dec_label_pc_17a75:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_17a7a() local_unnamed_addr {
dec_label_pc_17a7a:
  %v0_17a7a = load i32, i32* @ebp, align 4
  %v1_17a7a = add i32 %v0_17a7a, -4
  %v2_17a7a = inttoptr i32 %v1_17a7a to i32*
  %v3_17a7a = load i32, i32* %v2_17a7a, align 4
  store i32 %v3_17a7a, i32* @ebx, align 4
  %v0_17a7e = load i32, i32* @eax, align 4
  ret i32 %v0_17a7e
}

define i32 @_ZNK14CBlockFileInfo9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a80:
  ret i32 %arg2
}

define i32 @function_17a96(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a96:
  %ebp.global-to-local = alloca i32, align 4
  %v0_17a96 = load i32, i32* @ebp, align 4
  %v1_17a96 = add i32 %v0_17a96, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_17a96, i32* %ebp.global-to-local, align 4
  %v0_17a97 = load i32, i32* @ecx, align 4
  %v1_17a97 = add i32 %v0_17a97, 1166781509
  %v2_17a97 = inttoptr i32 %v1_17a97 to i8*
  %v3_17a97 = load i8, i8* %v2_17a97, align 1
  %v5_17a97 = trunc i32 %v0_17a97 to i8
  %v6_17a97 = load i1, i1* @cf, align 1
  %v7_17a97 = zext i1 %v6_17a97 to i8
  %v8_17a97 = add i8 %v3_17a97, %v5_17a97
  %v9_17a97 = add i8 %v7_17a97, %v8_17a97
  store i8 %v9_17a97, i8* %v2_17a97, align 1
  %v0_17a9f = load i32, i32* %ebp.global-to-local, align 4
  %v1_17a9f = add i32 %v0_17a9f, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_17a9f, i32* @ebp, align 4
  %v0_17aa2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17aa7 = add i32 %v0_17a9f, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -28)
  %v3_17aa7 = inttoptr i32 %v2_17aa7 to i32*
  store i32 %v0_17aa2, i32* %v3_17aa7, align 4
  %v0_17aac = load i32, i32* @ebp, align 4
  %v1_17aac = add i32 %v0_17aac, -31
  %v2_17aac = inttoptr i32 %v1_17aac to i8*
  store i8 0, i8* %v2_17aac, align 1
  %v0_17ab0 = load i32, i32* @ebp, align 4
  %v1_17ab0 = add i32 %v0_17ab0, -30
  %v2_17ab0 = inttoptr i32 %v1_17ab0 to i8*
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %v2_17ab0, align 1
  %v0_17ab4 = load i32, i32* @ebp, align 4
  %v1_17ab4 = add i32 %v0_17ab4, -29
  %v2_17ab4 = inttoptr i32 %v1_17ab4 to i8*
  store i8 0, i8* %v2_17ab4, align 1
  %v0_17ab8 = load i32, i32* @ebp, align 4
  %v1_17ab8 = add i32 %v0_17ab8, -36
  %v2_17ab8 = inttoptr i32 %v1_17ab8 to i32*
  store i32 0, i32* %v2_17ab8, align 4
  %v0_17abf = load i32, i32* @ebp, align 4
  %v1_17abf = add i32 %v0_17abf, -76
  %v2_17abf = inttoptr i32 %v1_17abf to i32*
  %v3_17abf = load i32, i32* %v2_17abf, align 4
  %v1_17ac5 = call i32 @unknown_20efb(i32 %v3_17abf)
  %v0_17aca = load i32, i32* @ebp, align 4
  %v1_17aca = add i32 %v0_17aca, -64
  %v2_17ad4 = call i32 @unknown_20f28(i32 %v1_17aca, i32 %v1_17ac5)
  %v0_17adc = load i32, i32* @ebp, align 4
  %v1_17adc = add i32 %v0_17adc, -64
  %v2_17ae2 = call i32 @unknown_20f6f(i32 %v1_17adc)
  %v0_17ae9 = load i32, i32* @ebx, align 4
  %v0_17aed = load i32, i32* @ebp, align 4
  %v1_17aed = add i32 %v0_17aed, -88
  %v2_17aed = inttoptr i32 %v1_17aed to i32*
  %v3_17aed = load i32, i32* %v2_17aed, align 4
  %v1_17af4 = add i32 %v0_17aed, -84
  %v2_17af4 = inttoptr i32 %v1_17af4 to i32*
  %v3_17af4 = load i32, i32* %v2_17af4, align 4
  %v1_17aff = add i32 %v0_17aed, -80
  %v2_17aff = inttoptr i32 %v1_17aff to i32*
  %v3_17aff = load i32, i32* %v2_17aff, align 4
  %sext = mul i32 %v0_17ae9, 16777216
  %v6_17b05 = sdiv i32 %sext, 16777216
  %v7_17b05 = call i32 @unknown_30164(i32 %v3_17aff, i32 %v2_17ae2, i32 %v3_17af4, i32 %v3_17aed, i32 %v6_17b05)
  %v0_17b0a = load i32, i32* @ebp, align 4
  %v1_17b0a = add i32 %v0_17b0a, -36
  %v2_17b0a = inttoptr i32 %v1_17b0a to i32*
  %v3_17b0a = load i32, i32* %v2_17b0a, align 4
  %v5_17b0a = add i32 %v3_17b0a, %v7_17b05
  store i32 %v5_17b0a, i32* %v2_17b0a, align 4
  %v0_17b0d = load i32, i32* @ebp, align 4
  %v1_17b0d = add i32 %v0_17b0d, -76
  %v2_17b0d = inttoptr i32 %v1_17b0d to i32*
  %v3_17b0d = load i32, i32* %v2_17b0d, align 4
  %v1_17b10 = add i32 %v3_17b0d, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_17b16 = call i32 @unknown_20efb(i32 %v1_17b10)
  %v0_17b1b = load i32, i32* @ebp, align 4
  %v1_17b1b = add i32 %v0_17b1b, -60
  %v3_17b25 = call i32 @unknown_20f28(i32 %v1_17b1b, i32 %v2_17b16)
  %v0_17b2d = load i32, i32* @ebp, align 4
  %v1_17b2d = add i32 %v0_17b2d, -60
  %v1_17b33 = call i32 @unknown_20f6f(i32 %v1_17b2d)
  %v0_17b3a = load i32, i32* @esi, align 4
  %v0_17b40 = load i32, i32* @ebp, align 4
  %v1_17b40 = add i32 %v0_17b40, -88
  %v2_17b40 = inttoptr i32 %v1_17b40 to i32*
  %v3_17b40 = load i32, i32* %v2_17b40, align 4
  %v1_17b47 = add i32 %v0_17b40, -84
  %v2_17b47 = inttoptr i32 %v1_17b47 to i32*
  %v3_17b47 = load i32, i32* %v2_17b47, align 4
  %v1_17b52 = add i32 %v0_17b40, -80
  %v2_17b52 = inttoptr i32 %v1_17b52 to i32*
  %v3_17b52 = load i32, i32* %v2_17b52, align 4
  %v6_17b58 = call i32 @unknown_30164(i32 %v3_17b52, i32 %v1_17b33, i32 %v3_17b47, i32 %v3_17b40, i32 %v0_17b3a)
  %v0_17b5d = load i32, i32* @ebp, align 4
  %v1_17b5d = add i32 %v0_17b5d, -36
  %v2_17b5d = inttoptr i32 %v1_17b5d to i32*
  %v3_17b5d = load i32, i32* %v2_17b5d, align 4
  %v5_17b5d = add i32 %v3_17b5d, %v6_17b58
  store i32 %v5_17b5d, i32* %v2_17b5d, align 4
  %v0_17b60 = load i32, i32* @ebp, align 4
  %v1_17b60 = add i32 %v0_17b60, -76
  %v2_17b60 = inttoptr i32 %v1_17b60 to i32*
  %v3_17b60 = load i32, i32* %v2_17b60, align 4
  %v1_17b63 = add i32 %v3_17b60, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_17b69 = call i32 @unknown_20efb(i32 %v1_17b63)
  %v0_17b6e = load i32, i32* @ebp, align 4
  %v1_17b6e = add i32 %v0_17b6e, -56
  %v3_17b78 = call i32 @unknown_20f28(i32 %v1_17b6e, i32 %v1_17b69)
  %v0_17b80 = load i32, i32* @ebp, align 4
  %v1_17b80 = add i32 %v0_17b80, -56
  %v1_17b86 = call i32 @unknown_20f6f(i32 %v1_17b80)
  %v0_17b8b = load i32, i32* @ebp, align 4
  %v1_17b8b = add i32 %v0_17b8b, -92
  %v2_17b8b = inttoptr i32 %v1_17b8b to i8*
  %v3_17b8b = load i8, i8* %v2_17b8b, align 1
  %v4_17b8b = zext i8 %v3_17b8b to i32
  %v1_17b93 = add i32 %v0_17b8b, -88
  %v2_17b93 = inttoptr i32 %v1_17b93 to i32*
  %v3_17b93 = load i32, i32* %v2_17b93, align 4
  %v1_17b9a = add i32 %v0_17b8b, -84
  %v2_17b9a = inttoptr i32 %v1_17b9a to i32*
  %v3_17b9a = load i32, i32* %v2_17b9a, align 4
  %v1_17ba5 = add i32 %v0_17b8b, -80
  %v2_17ba5 = inttoptr i32 %v1_17ba5 to i32*
  %v3_17ba5 = load i32, i32* %v2_17ba5, align 4
  %v6_17bab = call i32 @unknown_30164(i32 %v3_17ba5, i32 %v1_17b86, i32 %v3_17b9a, i32 %v3_17b93, i32 %v4_17b8b)
  %v0_17bb0 = load i32, i32* @ebp, align 4
  %v1_17bb0 = add i32 %v0_17bb0, -36
  %v2_17bb0 = inttoptr i32 %v1_17bb0 to i32*
  %v3_17bb0 = load i32, i32* %v2_17bb0, align 4
  %v5_17bb0 = add i32 %v3_17bb0, %v6_17bab
  store i32 %v5_17bb0, i32* %v2_17bb0, align 4
  %v0_17bb3 = load i32, i32* @ebp, align 4
  %v1_17bb3 = add i32 %v0_17bb3, -76
  %v2_17bb3 = inttoptr i32 %v1_17bb3 to i32*
  %v3_17bb3 = load i32, i32* %v2_17bb3, align 4
  %v1_17bb6 = add i32 %v3_17bb3, 12
  %v1_17bbc = call i32 @unknown_20efb(i32 %v1_17bb6)
  %v0_17bc1 = load i32, i32* @ebp, align 4
  %v1_17bc1 = add i32 %v0_17bc1, -52
  %v2_17bcb = call i32 @unknown_20f28(i32 %v1_17bc1, i32 %v1_17bbc)
  %v0_17bd3 = load i32, i32* @ebp, align 4
  %v1_17bd3 = add i32 %v0_17bd3, -52
  %v1_17bd9 = call i32 @unknown_20f6f(i32 %v1_17bd3)
  %v0_17bde = load i32, i32* @ebp, align 4
  %v1_17bde = add i32 %v0_17bde, -91
  %v2_17bde = inttoptr i32 %v1_17bde to i8*
  %v3_17bde = load i8, i8* %v2_17bde, align 1
  %v4_17bde = zext i8 %v3_17bde to i32
  %v1_17be6 = add i32 %v0_17bde, -88
  %v2_17be6 = inttoptr i32 %v1_17be6 to i32*
  %v3_17be6 = load i32, i32* %v2_17be6, align 4
  %v1_17bed = add i32 %v0_17bde, -84
  %v2_17bed = inttoptr i32 %v1_17bed to i32*
  %v3_17bed = load i32, i32* %v2_17bed, align 4
  %v1_17bf8 = add i32 %v0_17bde, -80
  %v2_17bf8 = inttoptr i32 %v1_17bf8 to i32*
  %v3_17bf8 = load i32, i32* %v2_17bf8, align 4
  %v6_17bfe = call i32 @unknown_30164(i32 %v3_17bf8, i32 %v1_17bd9, i32 %v3_17bed, i32 %v3_17be6, i32 %v4_17bde)
  %v0_17c03 = load i32, i32* @ebp, align 4
  %v1_17c03 = add i32 %v0_17c03, -36
  %v2_17c03 = inttoptr i32 %v1_17c03 to i32*
  %v3_17c03 = load i32, i32* %v2_17c03, align 4
  %v5_17c03 = add i32 %v3_17c03, %v6_17bfe
  store i32 %v5_17c03, i32* %v2_17c03, align 4
  %v0_17c06 = load i32, i32* @ebp, align 4
  %v1_17c06 = add i32 %v0_17c06, -76
  %v2_17c06 = inttoptr i32 %v1_17c06 to i32*
  %v3_17c06 = load i32, i32* %v2_17c06, align 4
  %v1_17c09 = add i32 %v3_17c06, 16
  %v1_17c0f = call i32 @unknown_20efb(i32 %v1_17c09)
  %v0_17c14 = load i32, i32* @ebp, align 4
  %v1_17c14 = add i32 %v0_17c14, -48
  %v2_17c1e = call i32 @unknown_20f28(i32 %v1_17c14, i32 %v1_17c0f)
  %v0_17c26 = load i32, i32* @ebp, align 4
  %v1_17c26 = add i32 %v0_17c26, -48
  %v1_17c2c = call i32 @unknown_20f6f(i32 %v1_17c26)
  %v0_17c31 = load i32, i32* @ebp, align 4
  %v1_17c31 = add i32 %v0_17c31, -90
  %v2_17c31 = inttoptr i32 %v1_17c31 to i8*
  %v3_17c31 = load i8, i8* %v2_17c31, align 1
  %v4_17c31 = zext i8 %v3_17c31 to i32
  %v1_17c39 = add i32 %v0_17c31, -88
  %v2_17c39 = inttoptr i32 %v1_17c39 to i32*
  %v3_17c39 = load i32, i32* %v2_17c39, align 4
  %v1_17c40 = add i32 %v0_17c31, -84
  %v2_17c40 = inttoptr i32 %v1_17c40 to i32*
  %v3_17c40 = load i32, i32* %v2_17c40, align 4
  %v1_17c4b = add i32 %v0_17c31, -80
  %v2_17c4b = inttoptr i32 %v1_17c4b to i32*
  %v3_17c4b = load i32, i32* %v2_17c4b, align 4
  %v6_17c51 = call i32 @unknown_30164(i32 %v3_17c4b, i32 %v1_17c2c, i32 %v3_17c40, i32 %v3_17c39, i32 %v4_17c31)
  %v0_17c56 = load i32, i32* @ebp, align 4
  %v1_17c56 = add i32 %v0_17c56, -36
  %v2_17c56 = inttoptr i32 %v1_17c56 to i32*
  %v3_17c56 = load i32, i32* %v2_17c56, align 4
  %v5_17c56 = add i32 %v3_17c56, %v6_17c51
  store i32 %v5_17c56, i32* %v2_17c56, align 4
  %v0_17c59 = load i32, i32* @ebp, align 4
  %v1_17c59 = add i32 %v0_17c59, -76
  %v2_17c59 = inttoptr i32 %v1_17c59 to i32*
  %v3_17c59 = load i32, i32* %v2_17c59, align 4
  %v1_17c5c = add i32 %v3_17c59, 20
  %v1_17c62 = call i32 @unknown_21156(i32 %v1_17c5c)
  %v0_17c67 = load i32, i32* @ebp, align 4
  %v1_17c67 = add i32 %v0_17c67, -44
  %v2_17c71 = call i32 @unknown_21183(i32 %v1_17c67, i32 %v1_17c62)
  %v0_17c79 = load i32, i32* @ebp, align 4
  %v1_17c79 = add i32 %v0_17c79, -44
  %v1_17c7f = call i32 @unknown_211ca(i32 %v1_17c79)
  %v0_17c84 = load i32, i32* @ebp, align 4
  %v1_17c84 = add i32 %v0_17c84, -89
  %v2_17c84 = inttoptr i32 %v1_17c84 to i8*
  %v3_17c84 = load i8, i8* %v2_17c84, align 1
  %v4_17c84 = zext i8 %v3_17c84 to i32
  %v1_17c8c = add i32 %v0_17c84, -88
  %v2_17c8c = inttoptr i32 %v1_17c8c to i32*
  %v3_17c8c = load i32, i32* %v2_17c8c, align 4
  %v1_17c93 = add i32 %v0_17c84, -84
  %v2_17c93 = inttoptr i32 %v1_17c93 to i32*
  %v3_17c93 = load i32, i32* %v2_17c93, align 4
  %v1_17c9e = add i32 %v0_17c84, -80
  %v2_17c9e = inttoptr i32 %v1_17c9e to i32*
  %v3_17c9e = load i32, i32* %v2_17c9e, align 4
  %v5_17ca4 = call i32 @unknown_3100b(i32 %v3_17c9e, i32 %v1_17c7f, i32 %v3_17c93, i32 %v3_17c8c, i32 %v4_17c84)
  %v0_17ca9 = load i32, i32* @ebp, align 4
  %v1_17ca9 = add i32 %v0_17ca9, -36
  %v2_17ca9 = inttoptr i32 %v1_17ca9 to i32*
  %v3_17ca9 = load i32, i32* %v2_17ca9, align 4
  %v5_17ca9 = add i32 %v3_17ca9, %v5_17ca4
  store i32 %v5_17ca9, i32* %v2_17ca9, align 4
  %v0_17cac = load i32, i32* @ebp, align 4
  %v1_17cac = add i32 %v0_17cac, -76
  %v2_17cac = inttoptr i32 %v1_17cac to i32*
  %v3_17cac = load i32, i32* %v2_17cac, align 4
  %v1_17caf = add i32 %v3_17cac, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v1_17cb5 = call i32 @unknown_21156(i32 %v1_17caf)
  %v0_17cba = load i32, i32* @ebp, align 4
  %v1_17cba = add i32 %v0_17cba, -40
  %v2_17cc4 = call i32 @unknown_21183(i32 %v1_17cba, i32 %v1_17cb5)
  %v0_17ccc = load i32, i32* @ebp, align 4
  %v1_17ccc = add i32 %v0_17ccc, -40
  %v1_17cd2 = call i32 @unknown_211ca(i32 %v1_17ccc)
  %v0_17cd7 = load i32, i32* @edi, align 4
  %v0_17cdd = load i32, i32* @ebp, align 4
  %v1_17cdd = add i32 %v0_17cdd, -88
  %v2_17cdd = inttoptr i32 %v1_17cdd to i32*
  %v3_17cdd = load i32, i32* %v2_17cdd, align 4
  %v1_17ce4 = add i32 %v0_17cdd, -84
  %v2_17ce4 = inttoptr i32 %v1_17ce4 to i32*
  %v3_17ce4 = load i32, i32* %v2_17ce4, align 4
  %v1_17cef = add i32 %v0_17cdd, -80
  %v2_17cef = inttoptr i32 %v1_17cef to i32*
  %v3_17cef = load i32, i32* %v2_17cef, align 4
  %v5_17cf5 = call i32 @unknown_3100b(i32 %v3_17cef, i32 %v1_17cd2, i32 %v3_17ce4, i32 %v3_17cdd, i32 %v0_17cd7)
  %v0_17cfa = load i32, i32* @ebp, align 4
  %v1_17cfa = add i32 %v0_17cfa, -36
  %v2_17cfa = inttoptr i32 %v1_17cfa to i32*
  %v3_17cfa = load i32, i32* %v2_17cfa, align 4
  %v5_17cfa = add i32 %v3_17cfa, %v5_17cf5
  store i32 %v5_17cfa, i32* %v2_17cfa, align 4
  %v0_17cfd = load i32, i32* @ebp, align 4
  %v1_17cfd = add i32 %v0_17cfd, -28
  %v2_17cfd = inttoptr i32 %v1_17cfd to i32*
  %v3_17cfd = load i32, i32* %v2_17cfd, align 4
  %v1_17d00 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17d00 = xor i32 %v1_17d00, %v3_17cfd
  %v3_17d00 = icmp eq i32 %v2_17d00, 0
  store i32 %v2_17d00, i32* @eax, align 4
  br i1 %v3_17d00, label %bb, label %dec_label_pc_17d09

bb:                                               ; preds = %dec_label_pc_17a96
  %v1_17d07 = call i32 @function_17d0e()
  br label %dec_label_pc_17d09

dec_label_pc_17d09:                               ; preds = %bb, %dec_label_pc_17a96
  %v5_17d07 = phi i32 [ %v1_17d07, %bb ], [ %v2_17d00, %dec_label_pc_17a96 ]
  ret i32 %v5_17d07

; uselistorder directives
  uselistorder i32 %v0_17c84, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17c31, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17b8b, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_3100b, { 1, 0 }
  uselistorder i32 -89, { 2, 3, 4, 1, 0 }
  uselistorder i32 (i32)* @unknown_211ca, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_21183, { 1, 0 }
  uselistorder i32 (i32)* @unknown_21156, { 1, 0 }
  uselistorder i32 -90, { 2, 3, 1, 0 }
  uselistorder i32 -91, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_30164, { 4, 3, 2, 1, 0 }
  uselistorder i32 -80, { 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 19, 20, 21, 22, 2, 3, 49, 50, 51, 52, 53, 54, 55, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1 }
  uselistorder i32 (i32)* @unknown_20f6f, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_20f28, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_20efb, { 4, 3, 2, 1, 0 }
}

define i32 @function_17d0e() local_unnamed_addr {
dec_label_pc_17d0e:
  %v0_17d0e = load i32, i32* @ebp, align 4
  %v1_17d14 = inttoptr i32 %v0_17d0e to i32*
  %v2_17d14 = load i32, i32* %v1_17d14, align 4
  store i32 %v2_17d14, i32* @ebp, align 4
  %v0_17d15 = load i32, i32* @eax, align 4
  ret i32 %v0_17d15
}

define i32 @_Z12SerReadWriteI11CDataStream7CVarIntIyEEjRT_RT0_ii21CSerActionUnserialize() local_unnamed_addr {
dec_label_pc_17d16:
  %eax.global-to-local = alloca i32, align 4
  %v17_17d19 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_17d19
}

define i32 @function_17d5e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17d5e:
  %v0_17d5e = load i32, i32* @eax, align 4
  %v1_17d61 = call i32 @unknown_31309(i32 %v0_17d5e)
  store i32 0, i32* @eax, align 4
  %v0_17d6b = load i32, i32* @ebp, align 4
  %v1_17d6b = add i32 %v0_17d6b, -12
  %v2_17d6b = inttoptr i32 %v1_17d6b to i32*
  %v3_17d6b = load i32, i32* %v2_17d6b, align 4
  %v1_17d6e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_17d6e = icmp eq i32 %v1_17d6e, %v3_17d6b
  br i1 %v3_17d6e, label %bb, label %dec_label_pc_17d77

bb:                                               ; preds = %dec_label_pc_17d5e
  %v1_17d75 = call i32 @function_17d7c()
  br label %dec_label_pc_17d77

dec_label_pc_17d77:                               ; preds = %bb, %dec_label_pc_17d5e
  %v3_17d75 = phi i32 [ %v1_17d75, %bb ], [ 0, %dec_label_pc_17d5e ]
  ret i32 %v3_17d75
}

define i32 @function_17d7c() local_unnamed_addr {
dec_label_pc_17d7c:
  %v0_17d7d = load i32, i32* @eax, align 4
  ret i32 %v0_17d7d
}

define i32 @_ZN7CVarIntIiE11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d7e:
  ret i32 %arg1
}

define i32 @function_17d8d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17d8d:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17d8d = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_17d8d = or i32 %v0_17d8d, 137
  store i32 %v11_17d8d, i32* %eax.global-to-local, align 4
  %v0_17d8f = load i32, i32* @ebp, align 4
  %v0_17d90 = load i32, i32* @ecx, align 4
  %v1_17d90 = sub i32 %v0_17d90, ptrtoint (i8** @global_var_1.1176 to i32)
  %v1_17d92 = add i32 %v0_17d8f, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_17d92, i32* %ebp.global-to-local, align 4
  %v1_17d93 = add i32 %v1_17d90, 1166793797
  %v2_17d93 = inttoptr i32 %v1_17d93 to i8*
  %v3_17d93 = load i8, i8* %v2_17d93, align 1
  %v5_17d93 = trunc i32 %v1_17d90 to i8
  %v8_17d93 = add i8 %v3_17d93, %v5_17d93
  %v28_17d93 = icmp ult i8 %v8_17d93, %v3_17d93
  store i1 %v28_17d93, i1* %cf.global-to-local, align 1
  store i8 %v8_17d93, i8* %v2_17d93, align 1
  %v0_17d99 = load i32, i32* %eax.global-to-local, align 4
  %v1_17d99 = trunc i32 %v0_17d99 to i8
  %v2_17d99 = load i1, i1* %cf.global-to-local, align 1
  %v3_17d99 = zext i1 %v2_17d99 to i8
  %v4_17d99 = add i8 %v1_17d99, -119
  %v5_17d99 = add i8 %v4_17d99, %v3_17d99
  %v22_17d99 = icmp ule i8 %v5_17d99, %v1_17d99
  %v23_17d99 = icmp ugt i8 %v1_17d99, 118
  %v24_17d99 = select i1 %v2_17d99, i1 %v22_17d99, i1 %v23_17d99
  %v25_17d99 = zext i8 %v5_17d99 to i32
  %v27_17d99 = and i32 %v0_17d99, -256
  %v28_17d99 = or i32 %v25_17d99, %v27_17d99
  store i32 %v28_17d99, i32* %eax.global-to-local, align 4
  %v0_17d9b = load i32, i32* %ebp.global-to-local, align 4
  %v1_17d9b = add i32 %v0_17d9b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_17d9b, i32* %ebp.global-to-local, align 4
  %v3_17d9f = zext i1 %v24_17d99 to i8
  %v4_17d9f = add i8 %v3_17d9f, %v5_17d99
  %v19_17d9f = icmp ule i8 %v4_17d9f, %v5_17d99
  %v21_17d9f = icmp eq i1 %v24_17d99, %v19_17d9f
  store i1 %v21_17d9f, i1* %cf.global-to-local, align 1
  %v22_17d9f = zext i8 %v4_17d9f to i32
  %v25_17d9f = or i32 %v22_17d9f, %v27_17d99
  store i32 %v25_17d9f, i32* %eax.global-to-local, align 4
  %v1_17da1 = inttoptr i32 %v25_17d9f to i8*
  %v2_17da1 = load i8, i8* %v1_17da1, align 1
  %v5_17da1 = add i8 %v2_17da1, %v4_17d9f
  store i8 %v5_17da1, i8* %v1_17da1, align 1
  %v0_17da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_17da3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_17da3 = add i32 %v1_17da3, -12
  %v3_17da3 = inttoptr i32 %v2_17da3 to i32*
  store i32 %v0_17da3, i32* %v3_17da3, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_17da8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_17da8 = add i32 %v0_17da8, -28
  %v2_17da8 = inttoptr i32 %v1_17da8 to i32*
  %v3_17da8 = load i32, i32* %v2_17da8, align 4
  store i32 %v3_17da8, i32* %eax.global-to-local, align 4
  %v1_17dab = inttoptr i32 %v3_17da8 to i32*
  %v2_17dab = load i32, i32* %v1_17dab, align 4
  store i32 %v2_17dab, i32* %ebx.global-to-local, align 4
  %v1_17dad = add i32 %v0_17da8, -32
  %v2_17dad = inttoptr i32 %v1_17dad to i32*
  %v3_17dad = load i32, i32* %v2_17dad, align 4
  store i32 %v3_17dad, i32* %eax.global-to-local, align 4
  %v1_17db3 = call i32 @unknown_313cd(i32 %v3_17dad)
  store i32 %v1_17db3, i32* %eax.global-to-local, align 4
  %v1_17db8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_17db8 = inttoptr i32 %v1_17db8 to i32*
  store i32 %v1_17db3, i32* %v2_17db8, align 4
  %v0_17dba = load i32, i32* %ebp.global-to-local, align 4
  %v1_17dba = add i32 %v0_17dba, -12
  %v2_17dba = inttoptr i32 %v1_17dba to i32*
  %v3_17dba = load i32, i32* %v2_17dba, align 4
  store i32 %v3_17dba, i32* %eax.global-to-local, align 4
  %v1_17dbd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17dbd = xor i32 %v1_17dbd, %v3_17dba
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_17dbd = icmp eq i32 %v2_17dbd, 0
  store i32 %v2_17dbd, i32* @eax, align 4
  br i1 %v3_17dbd, label %bb, label %dec_label_pc_17dc6

bb:                                               ; preds = %dec_label_pc_17d8d
  %v1_17dc4 = call i32 @function_17dcb()
  store i32 %v1_17dc4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_17dc6

dec_label_pc_17dc6:                               ; preds = %bb, %dec_label_pc_17d8d
  %v3_17dc4 = phi i32 [ %v1_17dc4, %bb ], [ %v2_17dbd, %dec_label_pc_17d8d ]
  ret i32 %v3_17dc4

; uselistorder directives
  uselistorder i8 %v4_17d9f, { 0, 2, 1 }
  uselistorder i8 %v5_17d99, { 1, 0, 3, 2 }
  uselistorder i8 %v3_17d93, { 1, 0 }
  uselistorder i32 %v1_17d90, { 1, 0 }
}

define i32 @function_17dcb() local_unnamed_addr {
dec_label_pc_17dcb:
  %v0_17dd0 = load i32, i32* @eax, align 4
  ret i32 %v0_17dd0
}

define i32 @_ZN7CVarIntIjE11UnserializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17dd2:
  %v2_17dff = load i32, i32* %arg1, align 4
  %v1_17e07 = call i32 @unknown_31494(i32 %arg2)
  %v2_17e0c = inttoptr i32 %v2_17dff to i32*
  store i32 %v1_17e07, i32* %v2_17e0c, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17e1a

bb:                                               ; preds = %dec_label_pc_17dd2
  %v1_17e18 = call i32 @function_17e1f()
  br label %dec_label_pc_17e1a

dec_label_pc_17e1a:                               ; preds = %bb, %dec_label_pc_17dd2
  %v2_17e18 = phi i32 [ %v1_17e18, %bb ], [ 0, %dec_label_pc_17dd2 ]
  ret i32 %v2_17e18
}

define i32 @function_17e1f() local_unnamed_addr {
dec_label_pc_17e1f:
  %v0_17e24 = load i32, i32* @eax, align 4
  ret i32 %v0_17e24
}

define i32 @_ZN9__gnu_cxx13new_allocatorIbEC1Ev(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_17e26:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17e49

bb:                                               ; preds = %dec_label_pc_17e26
  %v2_17e47 = call i32 @function_17e4e(i32 %arg1)
  br label %dec_label_pc_17e49

dec_label_pc_17e49:                               ; preds = %bb, %dec_label_pc_17e26
  %v3_17e47 = phi i32 [ %v2_17e47, %bb ], [ 0, %dec_label_pc_17e26 ]
  ret i32 %v3_17e47
}

define i32 @function_17e4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e4e:
  %v0_17e4f = load i32, i32* @eax, align 4
  ret i32 %v0_17e4f
}

define i32 @_ZN9__gnu_cxx13new_allocatorIbED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e50:
  ret i32 0
}

define i32 @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e7a:
  %v1_17e97 = call i32 @unknown_315ec(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17ea8

bb:                                               ; preds = %dec_label_pc_17e7a
  %v1_17ea6 = call i32 @function_17ead()
  br label %dec_label_pc_17ea8

dec_label_pc_17ea8:                               ; preds = %bb, %dec_label_pc_17e7a
  %v2_17ea6 = phi i32 [ %v1_17ea6, %bb ], [ 0, %dec_label_pc_17e7a ]
  ret i32 %v2_17ea6
}

define i32 @function_17ead() local_unnamed_addr {
dec_label_pc_17ead:
  %v0_17eae = load i32, i32* @eax, align 4
  ret i32 %v0_17eae
}

define i32 @_ZNSt13_Bvector_baseISaIbEEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17eb0:
  %stack_var_-17 = alloca i32, align 4
  %v2_17ed4 = ptrtoint i32* %stack_var_-17 to i32
  %v2_17eda = call i32 @unknown_315e6(i32 %v2_17ed4, i32 %arg2)
  %v2_17eec = call i32 @unknown_31658(i32 %arg1, i32 %v2_17ed4)
  %v1_17ef7 = call i32 @unknown_31622(i32 %v2_17ed4)
  ret i32 0
}

define i32 @function_17f0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f0c:
  %v0_17f0c = load i32, i32* @ecx, align 4
  %v1_17f0c = sub i32 %v0_17f0c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_17f0c, i32* @ecx, align 4
  %v0_17f0e = load i32, i32* @eax, align 4
  ret i32 %v0_17f0e
}

define i32 @_ZNSt13_Bvector_baseISaIbEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17f10:
  %v1_17f2d = call i32 @unknown_2ce2e(i32 %arg1)
  %v1_17f38 = call i32 @unknown_2fd8a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17f49

bb:                                               ; preds = %dec_label_pc_17f10
  %v1_17f47 = call i32 @function_17f4e()
  br label %dec_label_pc_17f49

dec_label_pc_17f49:                               ; preds = %bb, %dec_label_pc_17f10
  %v2_17f47 = phi i32 [ %v1_17f47, %bb ], [ 0, %dec_label_pc_17f10 ]
  ret i32 %v2_17f47

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17f4e() local_unnamed_addr {
dec_label_pc_17f4e:
  %v0_17f4f = load i32, i32* @eax, align 4
  ret i32 %v0_17f4f
}

define i32 @_ZNSt6vectorIbSaIbEE13_M_initializeEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_17f50:
  ret i32 %arg1
}

define i32 @function_17f5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f5c:
  %v0_17f5e = load i32, i32* @ebp, align 4
  %v0_17f5f = load i32, i32* @eax, align 4
  %v11_17f5f = or i32 %v0_17f5f, 137
  store i32 %v11_17f5f, i32* @eax, align 4
  %v1_17f61 = add i32 %v0_17f5e, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v9_17f61 = icmp eq i32 %v1_17f61, 0
  store i32 %v1_17f61, i32* @ebp, align 4
  %v0_17f62 = load i32, i32* @ecx, align 4
  %v1_17f62 = sub i32 %v0_17f62, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_17f62, i32* @ecx, align 4
  %v2_17f62 = icmp eq i32 %v1_17f62, 0
  %v4_17f62 = or i1 %v9_17f61, %v2_17f62
  br i1 %v4_17f62, label %dec_label_pc_17f64, label %bb

bb:                                               ; preds = %dec_label_pc_17f5c
  %v6_17f62 = call i32 @function_17fc9()
  %v1_17f69.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_17f64

dec_label_pc_17f64:                               ; preds = %dec_label_pc_17f5c, %bb
  %v1_17f69 = phi i32 [ %v1_17f61, %dec_label_pc_17f5c ], [ %v1_17f69.pre, %bb ]
  %v0_17f64 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17f69 = add i32 %v1_17f69, -12
  %v3_17f69 = inttoptr i32 %v2_17f69 to i32*
  store i32 %v0_17f64, i32* %v3_17f69, align 4
  %v0_17f6e = load i32, i32* @ebp, align 4
  %v1_17f6e = add i32 %v0_17f6e, -28
  %v2_17f6e = inttoptr i32 %v1_17f6e to i32*
  %v3_17f6e = load i32, i32* %v2_17f6e, align 4
  %v1_17f71 = add i32 %v0_17f6e, -32
  %v2_17f71 = inttoptr i32 %v1_17f71 to i32*
  %v3_17f71 = load i32, i32* %v2_17f71, align 4
  %v2_17f7b = call i32 @unknown_2cc78(i32 %v3_17f6e, i32 %v3_17f71)
  %v1_17f80 = load i32, i32* @ebp, align 4
  %v2_17f80 = add i32 %v1_17f80, -16
  %v3_17f80 = inttoptr i32 %v2_17f80 to i32*
  store i32 %v2_17f7b, i32* %v3_17f80, align 4
  %v0_17f83 = load i32, i32* @ebp, align 4
  %v1_17f83 = add i32 %v0_17f83, -32
  %v2_17f83 = inttoptr i32 %v1_17f83 to i32*
  %v3_17f83 = load i32, i32* %v2_17f83, align 4
  %v1_17f86 = add i32 %v3_17f83, 31
  %v2_17f89 = udiv i32 %v1_17f86, 32
  %v2_17f8c = mul nuw nsw i32 %v2_17f89, 4
  %v2_17f91 = add i32 %v0_17f83, -16
  %v3_17f91 = inttoptr i32 %v2_17f91 to i32*
  %v4_17f91 = load i32, i32* %v3_17f91, align 4
  %v5_17f91 = add i32 %v4_17f91, %v2_17f8c
  %v1_17f94 = add i32 %v0_17f83, -28
  %v2_17f94 = inttoptr i32 %v1_17f94 to i32*
  %v3_17f94 = load i32, i32* %v2_17f94, align 4
  %v2_17f97 = add i32 %v3_17f94, 16
  %v3_17f97 = inttoptr i32 %v2_17f97 to i32*
  store i32 %v5_17f91, i32* %v3_17f97, align 4
  %v0_17fa2 = load i32, i32* @ebp, align 4
  %v1_17fa2 = add i32 %v0_17fa2, -16
  %v2_17fa2 = inttoptr i32 %v1_17fa2 to i32*
  %v3_17fa2 = load i32, i32* %v2_17fa2, align 4
  ret i32 %v3_17fa2

; uselistorder directives
  uselistorder label %dec_label_pc_17f64, { 1, 0 }
}

define i32 @function_17fab(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17fab:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_17fab = call i32 @unknown_e8258439()
  store i32 %v0_17fab, i32* %eax.global-to-local, align 4
  %v2_17fb0 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v4_17fb0 = lshr i32 %v0_17fab, ptrtoint (i32* @global_var_8.1178 to i32)
  %v5_17fb0 = trunc i32 %v4_17fb0 to i8
  %v6_17fb0 = add i8 %v2_17fb0, %v5_17fb0
  %v21_17fb0 = load i32, i32* @ebx, align 4
  %v22_17fb0 = inttoptr i32 %v21_17fb0 to i8*
  store i8 %v6_17fb0, i8* %v22_17fb0, align 1
  %v0_17fb2 = load i32, i32* %eax.global-to-local, align 4
  %v1_17fb2 = inttoptr i32 %v0_17fb2 to i8*
  %v2_17fb2 = load i8, i8* %v1_17fb2, align 1
  %v4_17fb2 = trunc i32 %v0_17fb2 to i8
  %v5_17fb2 = add i8 %v2_17fb2, %v4_17fb2
  store i8 %v5_17fb2, i8* %v1_17fb2, align 1
  %v0_17fb4 = load i32, i32* @ebp, align 4
  %v1_17fb4 = add i32 %v0_17fb4, -28
  %v2_17fb4 = inttoptr i32 %v1_17fb4 to i32*
  %v3_17fb4 = load i32, i32* %v2_17fb4, align 4
  store i32 %v3_17fb4, i32* %ecx.global-to-local, align 4
  %v1_17fb7 = add i32 %v0_17fb4, -24
  %v2_17fb7 = inttoptr i32 %v1_17fb7 to i32*
  %v3_17fb7 = load i32, i32* %v2_17fb7, align 4
  store i32 %v3_17fb7, i32* %eax.global-to-local, align 4
  %v1_17fba = add i32 %v0_17fb4, -20
  %v2_17fba = inttoptr i32 %v1_17fba to i32*
  %v3_17fba = load i32, i32* %v2_17fba, align 4
  store i32 %v3_17fba, i32* %edx.global-to-local, align 4
  %v2_17fbd = inttoptr i32 %v3_17fb4 to i32*
  store i32 %v3_17fb7, i32* %v2_17fbd, align 4
  %v0_17fbf = load i32, i32* %edx.global-to-local, align 4
  %v1_17fbf = load i32, i32* %ecx.global-to-local, align 4
  %v2_17fbf = add i32 %v1_17fbf, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_17fbf = inttoptr i32 %v2_17fbf to i32*
  store i32 %v0_17fbf, i32* %v3_17fbf, align 4
  %v0_17fc2 = load i32, i32* @ebp, align 4
  %v1_17fc2 = add i32 %v0_17fc2, -32
  %v2_17fc2 = inttoptr i32 %v1_17fc2 to i32*
  %v3_17fc2 = load i32, i32* %v2_17fc2, align 4
  store i32 %v3_17fc2, i32* %ecx.global-to-local, align 4
  %v1_17fc5 = add i32 %v0_17fc2, -28
  %v2_17fc5 = inttoptr i32 %v1_17fc5 to i32*
  %v3_17fc5 = load i32, i32* %v2_17fc5, align 4
  store i32 %v3_17fc5, i32* %edx.global-to-local, align 4
  %v4_17fc5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_17fc5
}

define i32 @function_17fc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_17fc8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_17fc9() local_unnamed_addr {
dec_label_pc_17fc9:
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_17fcc = add i32 %tmp3, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_17fcc, i32* @ebp, align 4
  %v0_17fd4 = load i32, i32* @eax, align 4
  %v11_17fd4 = and i32 %v0_17fd4, or (i32 zext (i8 ptrtoint (i8** @global_var_4.1177 to i8) to i32), i32 -256)
  %v1_17fd9 = call i32 @function_1a46c(i32 %v11_17fd4)
  %v0_17fe1 = load i32, i32* @ebp, align 4
  %v1_17fe1 = add i32 %v0_17fe1, -40
  %v2_17fe1 = inttoptr i32 %v1_17fe1 to i32*
  %v3_17fe1 = load i32, i32* %v2_17fe1, align 4
  %v1_17fe4 = add i32 %v0_17fe1, -36
  %v2_17fe4 = inttoptr i32 %v1_17fe4 to i32*
  %v3_17fe4 = load i32, i32* %v2_17fe4, align 4
  store i32 %v3_17fe4, i32* %edx.global-to-local, align 4
  %v1_17fe7 = load i32, i32* @ebx, align 4
  %v2_17fe7 = add i32 %v1_17fe7, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_17fe7 = inttoptr i32 %v2_17fe7 to i32*
  store i32 %v3_17fe1, i32* %v3_17fe7, align 4
  %v0_17fea = load i32, i32* %edx.global-to-local, align 4
  %v1_17fea = load i32, i32* @ebx, align 4
  %v2_17fea = add i32 %v1_17fea, 12
  %v3_17fea = inttoptr i32 %v2_17fea to i32*
  store i32 %v0_17fea, i32* %v3_17fea, align 4
  %v0_17fed = load i32, i32* @ebp, align 4
  %v1_17fed = add i32 %v0_17fed, -12
  %v2_17fed = inttoptr i32 %v1_17fed to i32*
  %v3_17fed = load i32, i32* %v2_17fed, align 4
  %v1_17ff0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17ff0 = xor i32 %v1_17ff0, %v3_17fed
  %v3_17ff0 = icmp eq i32 %v2_17ff0, 0
  store i32 %v2_17ff0, i32* @eax, align 4
  br i1 %v3_17ff0, label %bb, label %dec_label_pc_17ff9

bb:                                               ; preds = %dec_label_pc_17fc9
  %v1_17ff7 = call i32 @function_17ffe()
  br label %dec_label_pc_17ff9

dec_label_pc_17ff9:                               ; preds = %bb, %dec_label_pc_17fc9
  %v2_17ff7 = phi i32 [ %v1_17ff7, %bb ], [ %v2_17ff0, %dec_label_pc_17fc9 ]
  ret i32 %v2_17ff7

; uselistorder directives
  uselistorder i8 ptrtoint (i8** @global_var_4.1177 to i8), { 4, 3, 2, 0, 1 }
}

define i32 @function_17ffe() local_unnamed_addr {
dec_label_pc_17ffe:
  %v0_17ffe = load i32, i32* @ebp, align 4
  %v1_17ffe = add i32 %v0_17ffe, -4
  %v2_17ffe = inttoptr i32 %v1_17ffe to i32*
  %v3_17ffe = load i32, i32* %v2_17ffe, align 4
  store i32 %v3_17ffe, i32* @ebx, align 4
  %v0_18002 = load i32, i32* @eax, align 4
  ret i32 %v0_18002
}

define i32 @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_18004:
  %stack_var_-120 = alloca i32, align 4
  %v1_1803a = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_1803a = inttoptr i32 %v1_1803a to i32*
  %v3_1803a = load i32, i32* %v2_1803a, align 4
  %v1_18040 = add i32 %arg1, 16
  %v2_18040 = inttoptr i32 %v1_18040 to i32*
  %v3_18040 = load i32, i32* %v2_18040, align 4
  %v12_18043 = icmp eq i32 %v3_1803a, %v3_18040
  br i1 %v12_18043, label %bb, label %dec_label_pc_1804b

bb:                                               ; preds = %dec_label_pc_18004
  %v4_1800e = sext i8 %arg4 to i32
  %v6_18045 = call i32 @function_180ea(i32 %v4_1800e, i32 %arg2, i32 %arg3, i32 %arg1)
  br label %dec_label_pc_1804b

dec_label_pc_1804b:                               ; preds = %bb, %dec_label_pc_18004
  %v2_18051 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_18051, i32* @eax, align 4
  %v4_18063 = call i32 @function_1a520(i32 %v2_18051, i32 %v1_1803a, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18093(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18093:
  %v0_18093 = load i32, i32* @ebp, align 4
  %v1_18093 = add i32 %v0_18093, -128
  %v2_18093 = inttoptr i32 %v1_18093 to i32*
  %v3_18093 = load i32, i32* %v2_18093, align 4
  %v0_18096 = load i32, i32* @eax, align 4
  %v0_1809e = load i32, i32* @ecx, align 4
  %v3_180a1 = call i32 @unknown_2cb96(i32 %v0_1809e, i32 %v0_18096, i32 %v3_18093)
  %v0_180a9 = load i32, i32* @ebp, align 4
  %v1_180b0 = add i32 %v0_180a9, -100
  store i32 %v1_180b0, i32* @eax, align 4
  %v1_180b3 = add i32 %v0_180a9, -132
  %v2_180c0 = call i32 @function_1a3b8(i32 %v1_180b0, i32 %v1_180b3)
  %v0_180c8 = load i32, i32* @ebx, align 4
  %v0_180cc = load i32, i32* @ebp, align 4
  %v1_180cc = add i32 %v0_180cc, -100
  store i32 %v1_180cc, i32* @eax, align 4
  %v2_180d2 = call i32 @function_1a04c(i32 %v1_180cc, i32 %v0_180c8)
  %v0_180d7 = load i32, i32* @ebp, align 4
  %v1_180d7 = add i32 %v0_180d7, -124
  %v2_180d7 = inttoptr i32 %v1_180d7 to i32*
  %v3_180d7 = load i32, i32* %v2_180d7, align 4
  %v1_180da = add i32 %v3_180d7, ptrtoint (i32* @global_var_8.1178 to i32)
  store i32 %v1_180da, i32* @eax, align 4
  %v1_180e0 = call i32 @function_1a414(i32 %v1_180da)
  %v0_180e5 = call i32 @function_182ac()
  ret i32 %v0_180e5

; uselistorder directives
  uselistorder i32 -100, { 1, 2, 12, 13, 7, 8, 9, 3, 4, 10, 11, 5, 6, 0 }
}

define i32 @function_180ea(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_180ea:
  %eax.global-to-local = alloca i32, align 4
  %v0_180fa = load i32, i32* @ebp, align 4
  %v1_180fa = add i32 %v0_180fa, -124
  %v2_180fa = inttoptr i32 %v1_180fa to i32*
  %v3_180fa = load i32, i32* %v2_180fa, align 4
  store i32 %v3_180fa, i32* %eax.global-to-local, align 4
  %v5_18100 = call i32 @unknown_2cc5a(i32 %v3_180fa, i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint ([28 x i8]* @global_var_3f4a.1224 to i32))
  store i32 %v5_18100, i32* %eax.global-to-local, align 4
  %v1_18105 = load i32, i32* @ebp, align 4
  %v2_18105 = add i32 %v1_18105, -20
  %v3_18105 = inttoptr i32 %v2_18105 to i32*
  store i32 %v5_18100, i32* %v3_18105, align 4
  %v0_18108 = load i32, i32* @ebp, align 4
  %v1_18108 = add i32 %v0_18108, -124
  %v2_18108 = inttoptr i32 %v1_18108 to i32*
  %v3_18108 = load i32, i32* %v2_18108, align 4
  store i32 %v3_18108, i32* %eax.global-to-local, align 4
  %v1_1810b = add i32 %v0_18108, -20
  %v2_1810b = inttoptr i32 %v1_1810b to i32*
  %v3_1810b = load i32, i32* %v2_1810b, align 4
  %v3_18115 = call i32 @unknown_2cd2c(i32 %v3_18108, i32 %v3_1810b)
  store i32 %v3_18115, i32* %eax.global-to-local, align 4
  %v1_1811a = load i32, i32* @ebp, align 4
  %v2_1811a = add i32 %v1_1811a, -16
  %v3_1811a = inttoptr i32 %v2_1811a to i32*
  store i32 %v3_18115, i32* %v3_1811a, align 4
  %v4_1811a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1811a
}

define i32 @function_18120(i32 %arg1) local_unnamed_addr {
dec_label_pc_18120:
  %v2_18120 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_18120 = load i32, i32* @eax, align 4
  %v4_18120 = trunc i32 %v3_18120 to i8
  %v5_18120 = or i8 %v4_18120, %v2_18120
  %v12_18120 = inttoptr i32 %v3_18120 to i8*
  store i8 %v5_18120, i8* %v12_18120, align 1
  %v2_18122 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_18122 = load i32, i32* @eax, align 4
  %v4_18122 = trunc i32 %v3_18122 to i8
  %v5_18122 = add i8 %v4_18122, %v2_18122
  %v21_18122 = inttoptr i32 %v3_18122 to i8*
  store i8 %v5_18122, i8* %v21_18122, align 1
  %v0_18124 = load i32, i32* @ebx, align 4
  %v1_18124 = add i32 %v0_18124, 1149890629
  %v2_18124 = inttoptr i32 %v1_18124 to i8*
  %v3_18124 = load i8, i8* %v2_18124, align 1
  %v4_18124 = load i32, i32* @ecx, align 4
  %v5_18124 = trunc i32 %v4_18124 to i8
  %v6_18124 = add i8 %v5_18124, %v3_18124
  store i8 %v6_18124, i8* %v2_18124, align 1
  %v0_1812c = load i32, i32* @ebp, align 4
  %v1_1812c = add i32 %v0_1812c, -76
  store i32 %v1_1812c, i32* @eax, align 4
  %v1_18132 = call i32 @function_1a368(i32 %v1_1812c)
  %v0_18137 = load i32, i32* @ebp, align 4
  %v1_18137 = add i32 %v0_18137, -132
  ret i32 %v1_18137
}

define i32 @function_1813f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1813f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_18141 = load i32, i32* @ebp, align 4
  %v1_18141 = add i32 %v0_18141, -60
  store i32 %v1_18141, i32* @eax, align 4
  %v1_18147 = call i32 @function_1a5d8(i32 %v1_18141)
  %v0_1814c = load i32, i32* @ebp, align 4
  %v1_1814c = add i32 %v0_1814c, -84
  store i32 %v1_1814c, i32* %eax.global-to-local, align 4
  %v1_1814f = add i32 %v0_1814c, -124
  %v2_1814f = inttoptr i32 %v1_1814f to i32*
  %v3_1814f = load i32, i32* %v2_1814f, align 4
  store i32 %v3_1814f, i32* %edx.global-to-local, align 4
  %v2_18159 = call i32 @unknown_271a4(i32 %v1_1814c, i32 %v3_1814f)
  %v0_18161 = load i32, i32* @ebp, align 4
  %v1_18168 = add i32 %v0_18161, -68
  store i32 %v1_18168, i32* @eax, align 4
  %v1_1816e = call i32 @function_1a5d8(i32 %v1_18168)
  store i32 %v1_1816e, i32* %eax.global-to-local, align 4
  %v0_18173 = load i32, i32* @ebp, align 4
  %v1_18173 = add i32 %v0_18173, -92
  store i32 %v1_18173, i32* %ecx.global-to-local, align 4
  %v1_18176 = add i32 %v0_18173, -76
  %v2_18176 = inttoptr i32 %v1_18176 to i32*
  %v3_18176 = load i32, i32* %v2_18176, align 4
  store i32 %v3_18176, i32* %eax.global-to-local, align 4
  %v1_18179 = add i32 %v0_18173, -72
  %v2_18179 = inttoptr i32 %v1_18179 to i32*
  %v3_18179 = load i32, i32* %v2_18179, align 4
  store i32 %v3_18179, i32* %edx.global-to-local, align 4
  %v1_18184 = add i32 %v0_18173, -60
  %v2_18184 = inttoptr i32 %v1_18184 to i32*
  %v3_18184 = load i32, i32* %v2_18184, align 4
  store i32 %v3_18184, i32* %eax.global-to-local, align 4
  %v1_18187 = add i32 %v0_18173, -56
  %v2_18187 = inttoptr i32 %v1_18187 to i32*
  %v3_18187 = load i32, i32* %v2_18187, align 4
  store i32 %v3_18187, i32* %edx.global-to-local, align 4
  %v1_18192 = add i32 %v0_18173, -68
  %v2_18192 = inttoptr i32 %v1_18192 to i32*
  %v3_18192 = load i32, i32* %v2_18192, align 4
  store i32 %v3_18192, i32* %eax.global-to-local, align 4
  %v1_18195 = add i32 %v0_18173, -64
  %v2_18195 = inttoptr i32 %v1_18195 to i32*
  %v3_18195 = load i32, i32* %v2_18195, align 4
  store i32 %v3_18195, i32* %edx.global-to-local, align 4
  %v1_181a0 = add i32 %v0_18173, -124
  %v2_181a0 = inttoptr i32 %v1_181a0 to i32*
  %v3_181a0 = load i32, i32* %v2_181a0, align 4
  store i32 %v3_181a0, i32* %eax.global-to-local, align 4
  %v8_181aa = call i32 @unknown_2cd7e(i32 %v1_18173, i32 %v3_181a0, i32 %v3_18192, i32 %v3_18195, i32 %v3_18184, i32 %v3_18187, i32 %v3_18176, i32 %v3_18179)
  store i32 %v8_181aa, i32* %eax.global-to-local, align 4
  %v0_181b2 = load i32, i32* @ebp, align 4
  %v1_181b2 = add i32 %v0_181b2, -136
  %v2_181b2 = inttoptr i32 %v1_181b2 to i8*
  %v3_181b2 = load i8, i8* %v2_181b2, align 1
  %v4_181b2 = zext i8 %v3_181b2 to i32
  store i32 %v4_181b2, i32* %ebx.global-to-local, align 4
  %v1_181b9 = add i32 %v0_181b2, -52
  store i32 %v1_181b9, i32* %eax.global-to-local, align 4
  %v1_181c4 = add i32 %v0_181b2, -92
  store i32 %v1_181c4, i32* %edx.global-to-local, align 4
  %v3_181ce = call i32 @function_1a44c(i32 %v1_181b9, i32 %v1_181c4, i32 0)
  %v0_181d6 = load i32, i32* @ebp, align 4
  %v1_181d6 = add i32 %v0_181d6, -44
  store i32 %v1_181d6, i32* @eax, align 4
  %v1_181d9 = add i32 %v0_181d6, -52
  store i32 %v1_181d9, i32* %edx.global-to-local, align 4
  %v2_181e3 = call i32 @function_1a3b8(i32 %v1_181d6, i32 %v1_181d9)
  %v0_181eb = load i32, i32* @ebx, align 4
  %v0_181ef = load i32, i32* @ebp, align 4
  %v1_181ef = add i32 %v0_181ef, -44
  store i32 %v1_181ef, i32* @eax, align 4
  %v2_181f5 = call i32 @function_1a04c(i32 %v1_181ef, i32 %v0_181eb)
  %v0_181fa = load i32, i32* @ebp, align 4
  %v1_181fa = add i32 %v0_181fa, -36
  store i32 %v1_181fa, i32* %eax.global-to-local, align 4
  %v1_181fd = add i32 %v0_181fa, -124
  %v2_181fd = inttoptr i32 %v1_181fd to i32*
  %v3_181fd = load i32, i32* %v2_181fd, align 4
  store i32 %v3_181fd, i32* %edx.global-to-local, align 4
  %v2_18207 = call i32 @unknown_271ea(i32 %v1_181fa, i32 %v3_181fd)
  store i32 %v2_18207, i32* %eax.global-to-local, align 4
  %v0_1820f = load i32, i32* @ebp, align 4
  %v1_1820f = add i32 %v0_1820f, -124
  %v2_1820f = inttoptr i32 %v1_1820f to i32*
  %v3_1820f = load i32, i32* %v2_1820f, align 4
  store i32 %v3_1820f, i32* %ebx.global-to-local, align 4
  %v1_18212 = add i32 %v0_1820f, -144
  store i32 %v1_18212, i32* @ecx, align 4
  %v1_18218 = add i32 %v0_1820f, -92
  %v2_18218 = inttoptr i32 %v1_18218 to i32*
  %v3_18218 = load i32, i32* %v2_18218, align 4
  store i32 %v3_18218, i32* %eax.global-to-local, align 4
  %v1_1821b = add i32 %v0_1820f, -88
  %v2_1821b = inttoptr i32 %v1_1821b to i32*
  %v3_1821b = load i32, i32* %v2_1821b, align 4
  store i32 %v3_1821b, i32* %edx.global-to-local, align 4
  %v1_18226 = add i32 %v0_1820f, -36
  %v2_18226 = inttoptr i32 %v1_18226 to i32*
  %v3_18226 = load i32, i32* %v2_18226, align 4
  store i32 %v3_18226, i32* %eax.global-to-local, align 4
  %v1_18229 = add i32 %v0_1820f, -32
  %v2_18229 = inttoptr i32 %v1_18229 to i32*
  %v3_18229 = load i32, i32* %v2_18229, align 4
  store i32 %v3_18229, i32* %edx.global-to-local, align 4
  %v1_18234 = add i32 %v0_1820f, -132
  %v2_18234 = inttoptr i32 %v1_18234 to i32*
  %v3_18234 = load i32, i32* %v2_18234, align 4
  store i32 %v3_18234, i32* %eax.global-to-local, align 4
  %v1_1823a = add i32 %v0_1820f, -128
  %v2_1823a = inttoptr i32 %v1_1823a to i32*
  %v3_1823a = load i32, i32* %v2_1823a, align 4
  store i32 %v3_1823a, i32* %edx.global-to-local, align 4
  %v7_18248 = call i32 @unknown_2ce5f(i32 %v1_18212, i32 %v3_18234, i32 %v3_1823a, i32 %v3_18226, i32 %v3_18229, i32 %v3_18218, i32 %v3_1821b)
  store i32 %v7_18248, i32* %eax.global-to-local, align 4
  %v0_18250 = load i32, i32* @ebp, align 4
  %v1_18250 = add i32 %v0_18250, -144
  %v2_18250 = inttoptr i32 %v1_18250 to i32*
  %v3_18250 = load i32, i32* %v2_18250, align 4
  store i32 %v3_18250, i32* %eax.global-to-local, align 4
  %v1_18256 = add i32 %v0_18250, -140
  %v2_18256 = inttoptr i32 %v1_18256 to i32*
  %v3_18256 = load i32, i32* %v2_18256, align 4
  store i32 %v3_18256, i32* %edx.global-to-local, align 4
  %v1_1825c = load i32, i32* %ebx.global-to-local, align 4
  %v2_1825c = add i32 %v1_1825c, ptrtoint (i32* @global_var_8.1178 to i32)
  %v3_1825c = inttoptr i32 %v2_1825c to i32*
  store i32 %v3_18250, i32* %v3_1825c, align 4
  %v0_1825f = load i32, i32* %edx.global-to-local, align 4
  %v1_1825f = load i32, i32* %ebx.global-to-local, align 4
  %v2_1825f = add i32 %v1_1825f, 12
  %v3_1825f = inttoptr i32 %v2_1825f to i32*
  store i32 %v0_1825f, i32* %v3_1825f, align 4
  %v0_18262 = load i32, i32* @ebp, align 4
  %v1_18262 = add i32 %v0_18262, -124
  %v2_18262 = inttoptr i32 %v1_18262 to i32*
  %v3_18262 = load i32, i32* %v2_18262, align 4
  store i32 %v3_18262, i32* %eax.global-to-local, align 4
  %v1_18268 = call i32 @unknown_2cf22(i32 %v3_18262)
  store i32 %v1_18268, i32* %eax.global-to-local, align 4
  %v0_1826d = load i32, i32* @ebp, align 4
  %v1_1826d = add i32 %v0_1826d, -20
  %v2_1826d = inttoptr i32 %v1_1826d to i32*
  %v3_1826d = load i32, i32* %v2_1826d, align 4
  %v1_18270 = add i32 %v3_1826d, 31
  %v2_18273 = udiv i32 %v1_18270, 32
  %v2_18276 = mul nuw nsw i32 %v2_18273, 4
  store i32 %v2_18276, i32* %eax.global-to-local, align 4
  store i32 %v2_18276, i32* %edx.global-to-local, align 4
  %v2_1827b = add i32 %v0_1826d, -16
  %v3_1827b = inttoptr i32 %v2_1827b to i32*
  %v4_1827b = load i32, i32* %v3_1827b, align 4
  %v5_1827b = add i32 %v4_1827b, %v2_18276
  store i32 %v5_1827b, i32* %edx.global-to-local, align 4
  %v1_1827e = add i32 %v0_1826d, -124
  %v2_1827e = inttoptr i32 %v1_1827e to i32*
  %v3_1827e = load i32, i32* %v2_1827e, align 4
  store i32 %v3_1827e, i32* %eax.global-to-local, align 4
  %v2_18281 = add i32 %v3_1827e, 16
  %v3_18281 = inttoptr i32 %v2_18281 to i32*
  store i32 %v5_1827b, i32* %v3_18281, align 4
  %v0_1828c = load i32, i32* @ebp, align 4
  %v1_18293 = add i32 %v0_1828c, -28
  store i32 %v1_18293, i32* @eax, align 4
  %v1_18299 = call i32 @function_1a368(i32 %v1_18293)
  store i32 %v1_18299, i32* %eax.global-to-local, align 4
  %v0_1829e = load i32, i32* @ebp, align 4
  %v1_1829e = add i32 %v0_1829e, -124
  %v2_1829e = inttoptr i32 %v1_1829e to i32*
  %v3_1829e = load i32, i32* %v2_1829e, align 4
  store i32 %v3_1829e, i32* %ecx.global-to-local, align 4
  %v1_182a1 = add i32 %v0_1829e, -28
  %v2_182a1 = inttoptr i32 %v1_182a1 to i32*
  %v3_182a1 = load i32, i32* %v2_182a1, align 4
  store i32 %v3_182a1, i32* %eax.global-to-local, align 4
  %v1_182a4 = add i32 %v0_1829e, -24
  %v2_182a4 = inttoptr i32 %v1_182a4 to i32*
  %v3_182a4 = load i32, i32* %v2_182a4, align 4
  store i32 %v3_182a4, i32* %edx.global-to-local, align 4
  %v2_182a7 = inttoptr i32 %v3_1829e to i32*
  store i32 %v3_182a1, i32* %v2_182a7, align 4
  %v0_182a9 = load i32, i32* %edx.global-to-local, align 4
  %v1_182a9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_182a9 = add i32 %v1_182a9, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_182a9 = inttoptr i32 %v2_182a9 to i32*
  store i32 %v0_182a9, i32* %v3_182a9, align 4
  %v4_182a9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_182a9

; uselistorder directives
  uselistorder i32 %v2_18276, { 2, 1, 0 }
  uselistorder i32 %v0_1820f, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_18173, { 0, 2, 1, 4, 5, 3, 6, 7 }
  uselistorder i32 31, { 1, 2, 5, 3, 4, 0 }
  uselistorder i32 -128, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 -132, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 -88, { 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 3, 4, 5, 30, 31, 32, 33, 34, 35, 36, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2 }
  uselistorder i32 (i32, i32)* @function_1a04c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1a3b8, { 1, 0 }
  uselistorder i32 -136, { 2, 3, 4, 0, 1 }
  uselistorder i32 -92, { 11, 12, 13, 32, 33, 31, 8, 9, 10, 30, 26, 15, 28, 23, 29, 1, 17, 18, 19, 20, 21, 22, 2, 27, 3, 4, 5, 16, 24, 6, 14, 25, 7, 0 }
  uselistorder i32 -124, { 4, 5, 6, 7, 8, 9, 10, 0, 1, 11, 12, 13, 2, 3 }
  uselistorder i32 -84, { 11, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 38, 39, 40, 41, 12, 86, 87, 88, 89, 90, 91, 92, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 1, 58, 59, 35, 36, 37, 2, 42, 43, 44, 45, 46, 0, 3, 4, 47, 48, 49, 50, 51, 52, 5, 13, 6, 53, 54, 55, 56, 57, 14, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 10 }
  uselistorder i32 (i32)* @function_1a5d8, { 1, 0 }
}

define i32 @function_18217(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18217:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1827c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1827c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_182ac() local_unnamed_addr {
dec_label_pc_182ac:
  %v0_182ac = load i32, i32* @ebp, align 4
  %v1_182ac = add i32 %v0_182ac, -12
  %v2_182ac = inttoptr i32 %v1_182ac to i32*
  %v3_182ac = load i32, i32* %v2_182ac, align 4
  %v1_182af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_182af = xor i32 %v1_182af, %v3_182ac
  %v3_182af = icmp eq i32 %v2_182af, 0
  store i32 %v2_182af, i32* @eax, align 4
  br i1 %v3_182af, label %bb, label %dec_label_pc_182b8

bb:                                               ; preds = %dec_label_pc_182ac
  %v1_182b6 = call i32 @function_182bd()
  br label %dec_label_pc_182b8

dec_label_pc_182b8:                               ; preds = %bb, %dec_label_pc_182ac
  %v2_182b6 = phi i32 [ %v1_182b6, %bb ], [ %v2_182af, %dec_label_pc_182ac ]
  ret i32 %v2_182b6
}

define i32 @function_182bd() local_unnamed_addr {
dec_label_pc_182bd:
  %v0_182c1 = load i32, i32* @eax, align 4
  ret i32 %v0_182c1
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE14_M_fill_assignEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_182c2:
  %stack_var_-36 = alloca i32, align 4
  %v1_182ec = call i32 @unknown_31ad0(i32 %arg1)
  %v10_182f1 = icmp ult i32 %v1_182ec, %arg2
  %v5_182f7 = icmp eq i1 %v10_182f1, false
  br i1 %v5_182f7, label %bb, label %dec_label_pc_182fb

bb:                                               ; preds = %dec_label_pc_182c2
  %v1_182f9 = call i32 @function_18345()
  br label %dec_label_pc_182fb

dec_label_pc_182fb:                               ; preds = %bb, %dec_label_pc_182c2
  %v1_18301 = call i32 @unknown_26a8a(i32 %arg1)
  %v2_18318 = ptrtoint i32* %stack_var_-36 to i32
  %v4_1831e = call i32 @unknown_21d46(i32 %v2_18318, i32 %arg2, i32 %arg3, i32 %v1_18301)
  ret i32 %arg1
}

define i32 @function_1832a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1832a:
  %v0_1832a = load i32, i32* @ebp, align 4
  %v1_1832a = add i32 %v0_1832a, -32
  %v1_18330 = call i32 @unknown_21ed4(i32 %v1_1832a)
  %v0_18335 = load i32, i32* @ebp, align 4
  %v1_18335 = add i32 %v0_18335, -32
  ret i32 %v1_18335
}

define i32 @function_1833e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1833e:
  %v2_1833e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1833e = load i32, i32* @eax, align 4
  %v4_1833e = trunc i32 %v3_1833e to i8
  %v5_1833e = add i8 %v4_1833e, %v2_1833e
  %v21_1833e = inttoptr i32 %v3_1833e to i8*
  store i8 %v5_1833e, i8* %v21_1833e, align 1
  %v0_18340 = call i32 @function_18432()
  ret i32 %v0_18340
}

define i32 @function_18345() local_unnamed_addr {
dec_label_pc_18345:
  %v0_18345 = load i32, i32* @ebp, align 4
  %v1_18345 = add i32 %v0_18345, -44
  %v2_18345 = inttoptr i32 %v1_18345 to i32*
  %v3_18345 = load i32, i32* %v2_18345, align 4
  %v1_1834b = call i32 @unknown_21dd2(i32 %v3_18345)
  %v1_18350 = load i32, i32* @ebp, align 4
  %v2_18350 = add i32 %v1_18350, -48
  %v3_18350 = inttoptr i32 %v2_18350 to i32*
  %v4_18350 = load i32, i32* %v3_18350, align 4
  %v10_18350 = icmp ult i32 %v1_1834b, %v4_18350
  %v5_18356 = icmp eq i1 %v10_18350, false
  br i1 %v5_18356, label %bb, label %dec_label_pc_1835e

bb:                                               ; preds = %dec_label_pc_18345
  %v1_18358 = call i32 @function_18408()
  %v0_1835e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1835e

dec_label_pc_1835e:                               ; preds = %bb, %dec_label_pc_18345
  %v0_1835e = phi i32 [ %v0_1835e.pre, %bb ], [ %v1_18350, %dec_label_pc_18345 ]
  %v1_1835e = add i32 %v0_1835e, -16
  %v1_18361 = add i32 %v0_1835e, -44
  %v2_18361 = inttoptr i32 %v1_18361 to i32*
  %v3_18361 = load i32, i32* %v2_18361, align 4
  %v2_1836b = call i32 @unknown_26f0c(i32 %v1_1835e, i32 %v3_18361)
  %v0_18373 = load i32, i32* @ebp, align 4
  %v1_18373 = add i32 %v0_18373, -20
  %v1_18376 = add i32 %v0_18373, -44
  %v2_18376 = inttoptr i32 %v1_18376 to i32*
  %v3_18376 = load i32, i32* %v2_18376, align 4
  %v2_18380 = call i32 @unknown_31b16(i32 %v1_18373, i32 %v3_18376)
  %v0_18388 = load i32, i32* @ebp, align 4
  %v1_18388 = add i32 %v0_18388, -52
  %v2_18388 = inttoptr i32 %v1_18388 to i32*
  %v3_18388 = load i32, i32* %v2_18388, align 4
  %v1_1838f = add i32 %v0_18388, -16
  %v2_1838f = inttoptr i32 %v1_1838f to i32*
  %v3_1838f = load i32, i32* %v2_1838f, align 4
  %v1_18396 = add i32 %v0_18388, -20
  %v2_18396 = inttoptr i32 %v1_18396 to i32*
  %v3_18396 = load i32, i32* %v2_18396, align 4
  %v3_1839c = call i32 @unknown_31b5d(i32 %v3_18396, i32 %v3_1838f, i32 %v3_18388)
  %v0_183a1 = load i32, i32* @ebp, align 4
  %v1_183a1 = add i32 %v0_183a1, -44
  %v2_183a1 = inttoptr i32 %v1_183a1 to i32*
  %v3_183a1 = load i32, i32* %v2_183a1, align 4
  %v1_183a7 = call i32 @unknown_26a8a(i32 %v3_183a1)
  %v0_183ae = load i32, i32* @ebp, align 4
  %v1_183ae = add i32 %v0_183ae, -44
  %v2_183ae = inttoptr i32 %v1_183ae to i32*
  %v3_183ae = load i32, i32* %v2_183ae, align 4
  %v1_183b4 = call i32 @unknown_21dd2(i32 %v3_183ae)
  %v0_183b9 = load i32, i32* @ebp, align 4
  %v1_183c0 = add i32 %v0_183b9, -44
  %v2_183c0 = inttoptr i32 %v1_183c0 to i32*
  %v3_183c0 = load i32, i32* %v2_183c0, align 4
  %v1_183c3 = add i32 %v3_183c0, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_183c3 = inttoptr i32 %v1_183c3 to i32*
  %v3_183c3 = load i32, i32* %v2_183c3, align 4
  ret i32 %v3_183c3

; uselistorder directives
  uselistorder i32 %v0_1835e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_26a8a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_21dd2, { 1, 0 }
}

define i32 @function_183da(i32 %arg1) local_unnamed_addr {
dec_label_pc_183da:
  %v2_183da = load i32, i32* @ecx, align 4
  %v3_183da = load i32, i32* @eax, align 4
  %v4_183da = and i32 %v3_183da, %v2_183da
  %v12_183da = inttoptr i32 %v2_183da to i32*
  store i32 %v4_183da, i32* %v12_183da, align 4
  %v0_183dc = load i32, i32* @ebx, align 4
  %v1_183dc = add i32 %v0_183dc, 1485558853
  %v2_183dc = inttoptr i32 %v1_183dc to i8*
  %v3_183dc = load i8, i8* %v2_183dc, align 1
  %v4_183dc = load i32, i32* @ecx, align 4
  %v5_183dc = trunc i32 %v4_183dc to i8
  %v6_183dc = add i8 %v5_183dc, %v3_183dc
  store i8 %v6_183dc, i8* %v2_183dc, align 1
  %v0_183e2 = load i32, i32* @eax, align 4
  %v1_183e2 = trunc i32 %v0_183e2 to i8
  %v2_183e2 = add i8 %v1_183e2, -117
  %v0_183e4 = load i32, i32* @ebp, align 4
  %v1_183e4 = add i32 %v0_183e4, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_183e4, i32* @ebp, align 4
  %not. = icmp ugt i8 %v2_183e2, -120
  %v3_183e5 = urem i8 %v2_183e2, -119
  %v4_183e5 = zext i8 %v3_183e5 to i32
  %v6_183e5 = and i32 %v0_183e2, -65536
  %v8_183e5 = zext i1 %not. to i32
  %v10_183e5 = shl i32 %v8_183e5, ptrtoint (i32* @global_var_8.1178 to i32)
  %v11_183e5 = or i32 %v4_183e5, %v6_183e5
  %v12_183e5 = or i32 %v11_183e5, %v10_183e5
  %v2_183e7 = add i32 %v12_183e5, 36
  %v16_183e7 = and i32 %v2_183e7, 255
  %v18_183e7 = and i32 %v12_183e5, -61184
  %v19_183e7 = or i32 %v16_183e7, %v18_183e7
  ret i32 %v19_183e7

; uselistorder directives
  uselistorder i32 %v12_183e5, { 1, 0 }
  uselistorder i8 %v2_183e2, { 1, 0 }
  uselistorder i32 %v2_183da, { 1, 0 }
  uselistorder i32 -65536, { 1, 0 }
}

define i32 @function_183ea(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_183ea:
  %v2_183ec = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_183ec = load i32, i32* @eax, align 4
  %v4_183ec = trunc i32 %v3_183ec to i8
  %v5_183ec = add i8 %v4_183ec, %v2_183ec
  %v21_183ec = inttoptr i32 %v3_183ec to i8*
  store i8 %v5_183ec, i8* %v21_183ec, align 1
  %v0_183ee = load i32, i32* @ebp, align 4
  %v1_183ee = add i32 %v0_183ee, -48
  %v2_183ee = inttoptr i32 %v1_183ee to i32*
  %v3_183ee = load i32, i32* %v2_183ee, align 4
  %v1_183f1 = load i32, i32* @eax, align 4
  %v2_183f1 = sub i32 %v3_183ee, %v1_183f1
  %v2_183fa = mul i32 %v2_183f1, 20
  %v0_183fd = load i32, i32* @ebx, align 4
  %v3_183fd = add i32 %v0_183fd, %v2_183fa
  %v1_18400 = add i32 %v0_183ee, -44
  %v2_18400 = inttoptr i32 %v1_18400 to i32*
  %v3_18400 = load i32, i32* %v2_18400, align 4
  %v2_18403 = add i32 %v3_18400, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_18403 = inttoptr i32 %v2_18403 to i32*
  store i32 %v3_183fd, i32* %v3_18403, align 4
  %v0_18406 = call i32 @function_18432()
  ret i32 %v0_18406

; uselistorder directives
  uselistorder i32 ()* @function_18432, { 1, 0 }
}

define i32 @function_18408() local_unnamed_addr {
dec_label_pc_18408:
  %v0_18408 = load i32, i32* @ebp, align 4
  %v1_18408 = add i32 %v0_18408, -44
  %v2_18408 = inttoptr i32 %v1_18408 to i32*
  %v3_18408 = load i32, i32* %v2_18408, align 4
  %v1_1840b = inttoptr i32 %v3_18408 to i32*
  %v2_1840b = load i32, i32* %v1_1840b, align 4
  %v1_1840d = add i32 %v0_18408, -52
  %v2_1840d = inttoptr i32 %v1_1840d to i32*
  %v3_1840d = load i32, i32* %v2_1840d, align 4
  %v1_18414 = add i32 %v0_18408, -48
  %v2_18414 = inttoptr i32 %v1_18414 to i32*
  %v3_18414 = load i32, i32* %v2_18414, align 4
  %v3_1841e = call i32 @unknown_31bc3(i32 %v2_1840b, i32 %v3_18414, i32 %v3_1840d)
  %v0_18427 = load i32, i32* @ebp, align 4
  %v1_18427 = add i32 %v0_18427, -44
  %v2_18427 = inttoptr i32 %v1_18427 to i32*
  %v3_18427 = load i32, i32* %v2_18427, align 4
  %v2_1842d = call i32 @unknown_26b00(i32 %v3_18427, i32 %v3_1841e)
  ret i32 %v2_1842d

; uselistorder directives
  uselistorder i32 %v0_18408, { 1, 0, 2 }
}

define i32 @function_18432() local_unnamed_addr {
dec_label_pc_18432:
  %v0_18432 = load i32, i32* @ebp, align 4
  %v1_18432 = add i32 %v0_18432, -12
  %v2_18432 = inttoptr i32 %v1_18432 to i32*
  %v3_18432 = load i32, i32* %v2_18432, align 4
  %v1_18435 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18435 = xor i32 %v1_18435, %v3_18432
  %v3_18435 = icmp eq i32 %v2_18435, 0
  store i32 %v2_18435, i32* @eax, align 4
  br i1 %v3_18435, label %bb, label %dec_label_pc_1843e

bb:                                               ; preds = %dec_label_pc_18432
  %v1_1843c = call i32 @function_18443()
  br label %dec_label_pc_1843e

dec_label_pc_1843e:                               ; preds = %bb, %dec_label_pc_18432
  %v2_1843c = phi i32 [ %v1_1843c, %bb ], [ %v2_18435, %dec_label_pc_18432 ]
  ret i32 %v2_1843c
}

define i32 @function_18443() local_unnamed_addr {
dec_label_pc_18443:
  %v0_18447 = load i32, i32* @eax, align 4
  ret i32 %v0_18447
}

define i32 @_ZN16CTxOutCompressor11UnserializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18448:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_18494 = ptrtoint i32* %stack_var_-44 to i32
  %v1_1849a = call i32 @unknown_21b1e(i32 %v2_18494)
  %v2_1849f = ptrtoint i32* %stack_var_-32 to i32
  %v2_184a9 = call i32 @unknown_21b4b(i32 %v2_1849f, i32 %v1_1849a)
  %v1_184b7 = call i32 @unknown_21b92(i32 %v2_1849f)
  %v0_184bc = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_184bc, 16777216
  %v5_184d8 = sdiv i32 %sext, 16777216
  %v6_184d8 = call i32 @unknown_3015e(i32 %arg2, i32 %v1_184b7, i32 %arg3, i32 %arg4, i32 %v5_184d8)
  %v2_184e3 = load i32, i32* %arg1, align 4
  store i32 %v2_184e3, i32* %ebx.global-to-local, align 4
  %v3_184e5 = load i32, i32* %stack_var_-44, align 4
  ret i32 %v3_184e5
}

define i32 @function_18554(i32 %arg1) local_unnamed_addr {
dec_label_pc_18554:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_18554 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18554 = add i32 %v0_18554, 1583085669
  %v2_18554 = inttoptr i32 %v1_18554 to i32*
  %v3_18554 = load i32, i32* %v2_18554, align 4
  %v4_18554 = add i32 %v3_18554, -1
  store i32 %v4_18554, i32* %v2_18554, align 4
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  %v0_1855b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1855b
}

define i32 @_Z9SerializeI11CHashWriterEvRT_xii(i32 %arg1) local_unnamed_addr {
dec_label_pc_1855c:
  ret i32 %arg1
}

define i32 @function_18568(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_18568:
  %v0_18568 = load i32, i32* @ebp, align 4
  %v1_18568 = add i32 %v0_18568, 12
  %v2_18568 = inttoptr i32 %v1_18568 to i32*
  %v3_18568 = load i32, i32* %v2_18568, align 4
  %v2_1856b = add i32 %v0_18568, -40
  %v3_1856b = inttoptr i32 %v2_1856b to i32*
  store i32 %v3_18568, i32* %v3_1856b, align 4
  %v0_1856e = load i32, i32* @ebp, align 4
  %v1_1856e = add i32 %v0_1856e, 16
  %v2_1856e = inttoptr i32 %v1_1856e to i32*
  %v3_1856e = load i32, i32* %v2_1856e, align 4
  %v2_18571 = add i32 %v0_1856e, -36
  %v3_18571 = inttoptr i32 %v2_18571 to i32*
  store i32 %v3_1856e, i32* %v3_18571, align 4
  %v0_18574 = load i32, i32* @ebp, align 4
  %v1_18574 = add i32 %v0_18574, 20
  %v2_18574 = inttoptr i32 %v1_18574 to i32*
  %v3_18574 = load i32, i32* %v2_18574, align 4
  %v2_18577 = add i32 %v0_18574, -32
  %v3_18577 = inttoptr i32 %v2_18577 to i32*
  store i32 %v3_18574, i32* %v3_18577, align 4
  %v0_1857a = load i32, i32* @ebp, align 4
  %v1_1857a = add i32 %v0_1857a, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1857a = inttoptr i32 %v1_1857a to i32*
  %v3_1857a = load i32, i32* %v2_1857a, align 4
  %v2_1857d = add i32 %v0_1857a, -44
  %v3_1857d = inttoptr i32 %v2_1857d to i32*
  store i32 %v3_1857a, i32* %v3_1857d, align 4
  %v0_18580 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_18586 = load i32, i32* @ebp, align 4
  %v2_18586 = add i32 %v1_18586, -12
  %v3_18586 = inttoptr i32 %v2_18586 to i32*
  store i32 %v0_18580, i32* %v3_18586, align 4
  %v0_18593 = load i32, i32* @ebp, align 4
  %v1_1859a = add i32 %v0_18593, -28
  %v2_1859a = inttoptr i32 %v1_1859a to i32*
  %v3_1859a = load i32, i32* %v2_1859a, align 4
  ret i32 %v3_1859a
}

define i32 @function_185a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_185a0:
  %v0_185a0 = call i32 @unknown_1d25a()
  %v0_185a5 = load i32, i32* @ebp, align 4
  %v1_185a5 = add i32 %v0_185a5, -12
  %v2_185a5 = inttoptr i32 %v1_185a5 to i32*
  %v3_185a5 = load i32, i32* %v2_185a5, align 4
  %v1_185a8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_185a8 = xor i32 %v1_185a8, %v3_185a5
  %v3_185a8 = icmp eq i32 %v2_185a8, 0
  store i32 %v2_185a8, i32* @eax, align 4
  br i1 %v3_185a8, label %bb, label %dec_label_pc_185b1

bb:                                               ; preds = %dec_label_pc_185a0
  %v1_185af = call i32 @function_185b6()
  br label %dec_label_pc_185b1

dec_label_pc_185b1:                               ; preds = %bb, %dec_label_pc_185a0
  %v3_185af = phi i32 [ %v1_185af, %bb ], [ %v2_185a8, %dec_label_pc_185a0 ]
  ret i32 %v3_185af
}

define i32 @function_185b6() local_unnamed_addr {
dec_label_pc_185b6:
  %v0_185b7 = load i32, i32* @eax, align 4
  ret i32 %v0_185b7
}

define i32 @_Z9SerializeI11CHashWriterEvRT_RK7CScriptii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_185b8:
  %v8_185fc = call i32 @unknown_31f78(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v8_185fc

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18602(i32 %arg1) local_unnamed_addr {
dec_label_pc_18602:
  %v0_18602 = load i32, i32* @ebp, align 4
  %v1_18602 = add i32 %v0_18602, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_18602, i32* @ebp, align 4
  %v0_18604 = load i32, i32* @eax, align 4
  %v1_18604 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18604 = xor i32 %v1_18604, %v0_18604
  %v3_18604 = icmp eq i32 %v2_18604, 0
  store i32 %v2_18604, i32* @eax, align 4
  br i1 %v3_18604, label %bb, label %dec_label_pc_1860d

bb:                                               ; preds = %dec_label_pc_18602
  %v1_1860b = call i32 @function_18612()
  br label %dec_label_pc_1860d

dec_label_pc_1860d:                               ; preds = %bb, %dec_label_pc_18602
  %v2_1860b = phi i32 [ %v1_1860b, %bb ], [ %v2_18604, %dec_label_pc_18602 ]
  ret i32 %v2_1860b
}

define i32 @function_18612() local_unnamed_addr {
dec_label_pc_18612:
  %v0_18613 = load i32, i32* @eax, align 4
  ret i32 %v0_18613
}

define i32 @_Z12SerReadWriteI11CDataStream13CDiskBlockPosEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_18614:
  ret i32 %arg1
}

define i32 @function_18662(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18662:
  %v2_18662 = load i32, i32* @eax, align 4
  %v4_18662 = mul i32 %v2_18662, 2
  %v21_18662 = inttoptr i32 %v2_18662 to i32*
  store i32 %v4_18662, i32* %v21_18662, align 4
  store i32 0, i32* @eax, align 4
  %v0_18669 = load i32, i32* @ebp, align 4
  %v1_18669 = add i32 %v0_18669, -12
  %v2_18669 = inttoptr i32 %v1_18669 to i32*
  %v3_18669 = load i32, i32* %v2_18669, align 4
  %v1_1866c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1866c = icmp eq i32 %v1_1866c, %v3_18669
  br i1 %v3_1866c, label %bb, label %dec_label_pc_18675

bb:                                               ; preds = %dec_label_pc_18662
  %v1_18673 = call i32 @function_1867a()
  br label %dec_label_pc_18675

dec_label_pc_18675:                               ; preds = %bb, %dec_label_pc_18662
  %v2_18673 = phi i32 [ %v1_18673, %bb ], [ 0, %dec_label_pc_18662 ]
  ret i32 %v2_18673

; uselistorder directives
  uselistorder i32 %v2_18662, { 1, 0 }
}

define i32 @function_1867a() local_unnamed_addr {
dec_label_pc_1867a:
  %v0_1867b = load i32, i32* @eax, align 4
  ret i32 %v0_1867b
}

define i32 @_Z12SerReadWriteI11CDataStream13CDiskBlockPosEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1867c:
  %v4_186c7 = call i32 @unknown_320fb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_186dd

bb:                                               ; preds = %dec_label_pc_1867c
  %v1_186db = call i32 @function_186e2()
  br label %dec_label_pc_186dd

dec_label_pc_186dd:                               ; preds = %bb, %dec_label_pc_1867c
  %v2_186db = phi i32 [ %v1_186db, %bb ], [ 0, %dec_label_pc_1867c ]
  ret i32 %v2_186db
}

define i32 @function_186e2() local_unnamed_addr {
dec_label_pc_186e2:
  %v0_186e3 = load i32, i32* @eax, align 4
  ret i32 %v0_186e3
}

define i32 @_Z12SerReadWriteI11CDataStream7CVarIntIjEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_186e4:
  %v4_1872f = call i32 @unknown_2fb3f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18745

bb:                                               ; preds = %dec_label_pc_186e4
  %v1_18743 = call i32 @function_1874a()
  br label %dec_label_pc_18745

dec_label_pc_18745:                               ; preds = %bb, %dec_label_pc_186e4
  %v2_18743 = phi i32 [ %v1_18743, %bb ], [ 0, %dec_label_pc_186e4 ]
  ret i32 %v2_18743
}

define i32 @function_1874a() local_unnamed_addr {
dec_label_pc_1874a:
  %v0_1874b = load i32, i32* @eax, align 4
  ret i32 %v0_1874b
}

define i32 @_Z16WriteCompactSizeI11CDataStreamEvRT_y(i32 %arg1) local_unnamed_addr {
dec_label_pc_1874c:
  ret i32 %arg1
}

define i32 @function_1877c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1877c:
  %v2_1877f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1877f = load i32, i32* @eax, align 4
  %v4_1877f = trunc i32 %v3_1877f to i8
  %v5_1877f = add i8 %v4_1877f, %v2_1877f
  %v21_1877f = inttoptr i32 %v3_1877f to i8*
  store i8 %v5_1877f, i8* %v21_1877f, align 1
  %v0_18781 = load i32, i32* @edi, align 4
  %v1_18781 = add i32 %v0_18781, 37
  %v2_18781 = inttoptr i32 %v1_18781 to i8*
  %v3_18781 = load i8, i8* %v2_18781, align 1
  %v4_18781 = load i32, i32* @edx, align 4
  %v5_18781 = udiv i32 %v4_18781, 256
  %v6_18781 = trunc i32 %v5_18781 to i8
  %v7_18781 = add i8 %v6_18781, %v3_18781
  store i8 %v7_18781, i8* %v2_18781, align 1
  %v0_18784 = load i32, i32* @ebp, align 4
  %v1_18784 = add i32 %v0_18784, -40
  %v2_18784 = inttoptr i32 %v1_18784 to i32*
  %v3_18784 = load i32, i32* %v2_18784, align 4
  %v1_18787 = trunc i32 %v3_18784 to i8
  %v3_18787 = add i32 %v0_18784, -13
  %v4_18787 = inttoptr i32 %v3_18787 to i8*
  store i8 %v1_18787, i8* %v4_18787, align 1
  %v0_18792 = load i32, i32* @ebp, align 4
  %v1_18799 = add i32 %v0_18792, -28
  %v2_18799 = inttoptr i32 %v1_18799 to i32*
  %v3_18799 = load i32, i32* %v2_18799, align 4
  ret i32 %v3_18799
}

define i32 @function_187a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_187a0:
  %stack_var_-2 = alloca i16, align 2
  %v0_187a0 = load i16, i16* @ss, align 2
  store i16 %v0_187a0, i16* %stack_var_-2, align 2
  %v2_187a2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_187a2 = load i32, i32* @eax, align 4
  %v4_187a2 = trunc i32 %v3_187a2 to i8
  %v5_187a2 = add i8 %v4_187a2, %v2_187a2
  %v21_187a2 = inttoptr i32 %v3_187a2 to i8*
  store i8 %v5_187a2, i8* %v21_187a2, align 1
  %v0_187a4 = load i16, i16* %stack_var_-2, align 2
  %v1_187a4 = sext i16 %v0_187a4 to i32
  %v2_187a4 = call i32 @function_188c4(i32 %v1_187a4)
  ret i32 %v2_187a4
}

define i32 @function_187ea(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_187ea:
  %v0_187ea = load i32, i32* @eax, align 4
  %v0_187ef = load i32, i32* @ebp, align 4
  %v1_187ef = add i32 %v0_187ef, -28
  %v2_187ef = inttoptr i32 %v1_187ef to i32*
  %v3_187ef = load i32, i32* %v2_187ef, align 4
  %v2_187f5 = call i32 @unknown_1d2ba(i32 %v3_187ef, i32 %v0_187ea)
  %v0_18802 = load i32, i32* @ebp, align 4
  %v1_18802 = add i32 %v0_18802, -24
  %v1_18809 = add i32 %v0_18802, -28
  %v2_18809 = inttoptr i32 %v1_18809 to i32*
  %v3_18809 = load i32, i32* %v2_18809, align 4
  %v2_1880f = call i32 @unknown_1d2ba(i32 %v3_18809, i32 %v1_18802)
  %v1_18814 = call i32 @function_188c4(i32 %v3_18809)
  ret i32 %v1_18814
}

define i32 @function_187ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_187ec:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18854(i32 %arg1) local_unnamed_addr {
dec_label_pc_18854:
  %v0_18854 = load i32, i32* @eax, align 4
  %v0_18859 = load i32, i32* @ebp, align 4
  %v1_18859 = add i32 %v0_18859, -28
  %v2_18859 = inttoptr i32 %v1_18859 to i32*
  %v3_18859 = load i32, i32* %v2_18859, align 4
  %v2_1885f = call i32 @unknown_1d2ba(i32 %v3_18859, i32 %v0_18854)
  %v0_1886c = load i32, i32* @ebp, align 4
  %v1_1886c = add i32 %v0_1886c, -24
  %v1_18873 = add i32 %v0_1886c, -28
  %v2_18873 = inttoptr i32 %v1_18873 to i32*
  %v3_18873 = load i32, i32* %v2_18873, align 4
  %v2_18879 = call i32 @unknown_1d2ba(i32 %v3_18873, i32 %v1_1886c)
  %v1_1887e = call i32 @function_188c4(i32 %v3_18873)
  ret i32 %v1_1887e

; uselistorder directives
  uselistorder i32 (i32)* @function_188c4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_1d2ba, { 3, 2, 1, 0 }
}

define i32 @function_188c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_188c4:
  %v0_188c4 = load i32, i32* @ebp, align 4
  %v1_188c4 = add i32 %v0_188c4, -12
  %v2_188c4 = inttoptr i32 %v1_188c4 to i32*
  %v3_188c4 = load i32, i32* %v2_188c4, align 4
  %v1_188c7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_188c7 = xor i32 %v1_188c7, %v3_188c4
  %v3_188c7 = icmp eq i32 %v2_188c7, 0
  store i32 %v2_188c7, i32* @eax, align 4
  br i1 %v3_188c7, label %bb, label %dec_label_pc_188d0

bb:                                               ; preds = %dec_label_pc_188c4
  %v1_188ce = call i32 @function_188d5()
  br label %dec_label_pc_188d0

dec_label_pc_188d0:                               ; preds = %bb, %dec_label_pc_188c4
  %v2_188ce = phi i32 [ %v1_188ce, %bb ], [ %v2_188c7, %dec_label_pc_188c4 ]
  ret i32 %v2_188ce
}

define i32 @function_188d5() local_unnamed_addr {
dec_label_pc_188d5:
  %v0_188d6 = load i32, i32* @eax, align 4
  ret i32 %v0_188d6
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_Rjii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_188d7:
  ret i32 %arg4
}

define i32 @function_188f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_188f2:
  %v0_188f2 = load i32, i32* @eax, align 4
  %v1_188f2 = load i32, i32* @ebp, align 4
  %v2_188f2 = add i32 %v1_188f2, -40
  %v3_188f2 = inttoptr i32 %v2_188f2 to i32*
  store i32 %v0_188f2, i32* %v3_188f2, align 4
  %v0_188f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_188fb = load i32, i32* @ebp, align 4
  %v2_188fb = add i32 %v1_188fb, -12
  %v3_188fb = inttoptr i32 %v2_188fb to i32*
  store i32 %v0_188f5, i32* %v3_188fb, align 4
  %v0_18908 = load i32, i32* @ebp, align 4
  %v1_18908 = add i32 %v0_18908, -32
  %v2_18908 = inttoptr i32 %v1_18908 to i32*
  %v3_18908 = load i32, i32* %v2_18908, align 4
  %v1_1890f = add i32 %v0_18908, -28
  %v2_1890f = inttoptr i32 %v1_1890f to i32*
  %v3_1890f = load i32, i32* %v2_1890f, align 4
  %v4_18915 = call i32 @unknown_1d2dd(i32 %v3_1890f, i32 %v3_18908, i32 ptrtoint (i8** @global_var_4.1177 to i32))
  %v0_1891a = load i32, i32* @ebp, align 4
  %v1_1891a = add i32 %v0_1891a, -12
  %v2_1891a = inttoptr i32 %v1_1891a to i32*
  %v3_1891a = load i32, i32* %v2_1891a, align 4
  %v1_1891d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1891d = xor i32 %v1_1891d, %v3_1891a
  %v3_1891d = icmp eq i32 %v2_1891d, 0
  store i32 %v2_1891d, i32* @eax, align 4
  br i1 %v3_1891d, label %bb, label %dec_label_pc_18926

bb:                                               ; preds = %dec_label_pc_188f2
  %v1_18924 = call i32 @function_1892b()
  br label %dec_label_pc_18926

dec_label_pc_18926:                               ; preds = %bb, %dec_label_pc_188f2
  %v2_18924 = phi i32 [ %v1_18924, %bb ], [ %v2_1891d, %dec_label_pc_188f2 ]
  ret i32 %v2_18924
}

define i32 @function_1892b() local_unnamed_addr {
dec_label_pc_1892b:
  %v0_1892c = load i32, i32* @eax, align 4
  ret i32 %v0_1892c
}

define i32 @_ZN9__gnu_cxxmiIPKcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1892d:
  %v1_18951 = call i32 @unknown_2c715(i32 %arg1)
  %v1_18956 = inttoptr i32 %v1_18951 to i32*
  %v2_18956 = load i32, i32* %v1_18956, align 4
  %v1_18960 = call i32 @unknown_2c715(i32 %arg2)
  %v1_18965 = inttoptr i32 %v1_18960 to i32*
  %v2_18965 = load i32, i32* %v1_18965, align 4
  %v2_18969 = sub i32 %v2_18956, %v2_18965
  store i32 %v2_18969, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18979

bb:                                               ; preds = %dec_label_pc_1892d
  %v1_18977 = call i32 @function_1897e()
  br label %dec_label_pc_18979

dec_label_pc_18979:                               ; preds = %bb, %dec_label_pc_1892d
  %v2_18977 = phi i32 [ %v1_18977, %bb ], [ %v2_18969, %dec_label_pc_1892d ]
  ret i32 %v2_18977

; uselistorder directives
  uselistorder i32 (i32)* @unknown_2c715, { 1, 0 }
}

define i32 @function_1897b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1897b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1897e() local_unnamed_addr {
dec_label_pc_1897e:
  %v0_18983 = load i32, i32* @eax, align 4
  ret i32 %v0_18983
}

define i32 @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18984:
  %v3_189bf = call i32 @unknown_2f2af(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_189bf
}

define i32 @function_189c5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_189c5:
  %v0_189c7 = load i32, i32* @edx, align 4
  %v1_189c7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_189c7 = icmp eq i32 %v1_189c7, %v0_189c7
  br i1 %v3_189c7, label %bb, label %dec_label_pc_189c5.dec_label_pc_189d0_crit_edge

dec_label_pc_189c5.dec_label_pc_189d0_crit_edge:  ; preds = %dec_label_pc_189c5
  %v2_189ce.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_189d0

bb:                                               ; preds = %dec_label_pc_189c5
  %v1_189ce = call i32 @function_189d5()
  br label %dec_label_pc_189d0

dec_label_pc_189d0:                               ; preds = %dec_label_pc_189c5.dec_label_pc_189d0_crit_edge, %bb
  %v2_189ce = phi i32 [ %v2_189ce.pre, %dec_label_pc_189c5.dec_label_pc_189d0_crit_edge ], [ %v1_189ce, %bb ]
  ret i32 %v2_189ce

; uselistorder directives
  uselistorder label %dec_label_pc_189d0, { 1, 0 }
}

define i32 @function_189d5() local_unnamed_addr {
dec_label_pc_189d5:
  %v0_189d6 = load i32, i32* @eax, align 4
  ret i32 %v0_189d6
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_189d7:
  %v2_18a02 = sub i32 %arg2, %arg1
  %v12_18a02 = icmp eq i32 %v2_18a02, 0
  br i1 %v12_18a02, label %bb, label %dec_label_pc_18a0f

bb:                                               ; preds = %dec_label_pc_189d7
  %v4_18a0d = call i32 @function_18a2d(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_18a0f

dec_label_pc_18a0f:                               ; preds = %bb, %dec_label_pc_189d7
  %v5_18a17 = sub i32 %arg3, %v2_18a02
  ret i32 %v5_18a17
}

define i32 @function_18a2d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a2d:
  %v0_18a2d = load i32, i32* @ebp, align 4
  %v1_18a2d = add i32 %v0_18a2d, -16
  %v2_18a2d = inttoptr i32 %v1_18a2d to i32*
  %v3_18a2d = load i32, i32* %v2_18a2d, align 4
  %v2_18a32 = add i32 %v0_18a2d, -36
  %v3_18a32 = inttoptr i32 %v2_18a32 to i32*
  %v4_18a32 = load i32, i32* %v3_18a32, align 4
  %v5_18a32 = sub i32 %v4_18a32, %v3_18a2d
  store i32 %v5_18a32, i32* @eax, align 4
  %v1_18a35 = add i32 %v0_18a2d, -12
  %v2_18a35 = inttoptr i32 %v1_18a35 to i32*
  %v3_18a35 = load i32, i32* %v2_18a35, align 4
  %v1_18a38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18a38 = icmp eq i32 %v1_18a38, %v3_18a35
  br i1 %v3_18a38, label %bb, label %dec_label_pc_18a41

bb:                                               ; preds = %dec_label_pc_18a2d
  %v1_18a3f = call i32 @function_18a46()
  br label %dec_label_pc_18a41

dec_label_pc_18a41:                               ; preds = %bb, %dec_label_pc_18a2d
  %v2_18a3f = phi i32 [ %v1_18a3f, %bb ], [ %v5_18a32, %dec_label_pc_18a2d ]
  ret i32 %v2_18a3f
}

define i32 @function_18a44(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a44:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18a46() local_unnamed_addr {
dec_label_pc_18a46:
  %v0_18a47 = load i32, i32* @eax, align 4
  ret i32 %v0_18a47
}

define i32 @_ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a48:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18a6e

bb:                                               ; preds = %dec_label_pc_18a48
  %v2_18a6c = call i32 @function_18a73(i32 %arg1)
  br label %dec_label_pc_18a6e

dec_label_pc_18a6e:                               ; preds = %bb, %dec_label_pc_18a48
  %v3_18a6c = phi i32 [ %v2_18a6c, %bb ], [ %arg1, %dec_label_pc_18a48 ]
  ret i32 %v3_18a6c
}

define i32 @function_18a73(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a73:
  %v0_18a74 = load i32, i32* @eax, align 4
  ret i32 %v0_18a74
}

define i32 @_ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a75:
  %v1_18a92 = call i32 @unknown_314bd(i32 %arg1)
  store i32 %v1_18a92, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18aa3

bb:                                               ; preds = %dec_label_pc_18a75
  %v1_18aa1 = call i32 @function_18aa8()
  br label %dec_label_pc_18aa3

dec_label_pc_18aa3:                               ; preds = %bb, %dec_label_pc_18a75
  %v2_18aa1 = phi i32 [ %v1_18aa1, %bb ], [ %v1_18a92, %dec_label_pc_18a75 ]
  ret i32 %v2_18aa1
}

define i32 @function_18aa8() local_unnamed_addr {
dec_label_pc_18aa8:
  %v0_18aa9 = load i32, i32* @eax, align 4
  ret i32 %v0_18aa9
}

define i32 @_ZSt6fill_nIPhjhET_S1_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18aaa:
  ret i32 %arg1
}

define i32 @function_18ad5(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ad5:
  %v2_18ad6 = load i32, i32* @eax, align 4
  %v4_18ad6 = mul i32 %v2_18ad6, 2
  %v21_18ad6 = inttoptr i32 %v2_18ad6 to i32*
  store i32 %v4_18ad6, i32* %v21_18ad6, align 4
  %v0_18ad8 = load i32, i32* @ebp, align 4
  %v1_18ad8 = add i32 %v0_18ad8, -36
  %v2_18ad8 = inttoptr i32 %v1_18ad8 to i32*
  %v3_18ad8 = load i32, i32* %v2_18ad8, align 4
  %v1_18adf = add i32 %v0_18ad8, -32
  %v2_18adf = inttoptr i32 %v1_18adf to i32*
  %v3_18adf = load i32, i32* %v2_18adf, align 4
  %v0_18ae6 = load i32, i32* @eax, align 4
  %v3_18ae9 = call i32 @unknown_32585(i32 %v0_18ae6, i32 %v3_18adf, i32 %v3_18ad8)
  store i32 %v3_18ae9, i32* @eax, align 4
  %v0_18aee = load i32, i32* @ebp, align 4
  %v1_18aee = add i32 %v0_18aee, -12
  %v2_18aee = inttoptr i32 %v1_18aee to i32*
  %v3_18aee = load i32, i32* %v2_18aee, align 4
  %v1_18af1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18af1 = icmp eq i32 %v1_18af1, %v3_18aee
  br i1 %v3_18af1, label %bb, label %dec_label_pc_18afa

bb:                                               ; preds = %dec_label_pc_18ad5
  %v1_18af8 = call i32 @function_18aff()
  br label %dec_label_pc_18afa

dec_label_pc_18afa:                               ; preds = %bb, %dec_label_pc_18ad5
  %v2_18af8 = phi i32 [ %v1_18af8, %bb ], [ %v3_18ae9, %dec_label_pc_18ad5 ]
  ret i32 %v2_18af8

; uselistorder directives
  uselistorder i32 %v2_18ad6, { 1, 0 }
}

define i32 @function_18aff() local_unnamed_addr {
dec_label_pc_18aff:
  %v0_18b00 = load i32, i32* @eax, align 4
  ret i32 %v0_18b00
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_18b02:
  %v0_18b23 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_18b23
}

define i32 @function_18b2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18b2c:
  store i32 0, i32* @ebx, align 4
  %v0_18b33 = load i32, i32* @ebp, align 4
  %v1_18b33 = add i32 %v0_18b33, -28
  %v2_18b33 = inttoptr i32 %v1_18b33 to i32*
  %v3_18b33 = load i32, i32* %v2_18b33, align 4
  %v2_18b36 = add i32 %v0_18b33, -32
  %v3_18b36 = inttoptr i32 %v2_18b36 to i32*
  %v4_18b36 = load i32, i32* %v3_18b36, align 4
  %v15_18b36 = icmp eq i32 %v3_18b33, %v4_18b36
  %v1_18b39 = icmp eq i1 %v15_18b36, false
  br i1 %v1_18b39, label %bb, label %dec_label_pc_18b3b

bb:                                               ; preds = %dec_label_pc_18b2c
  %v2_18b39 = call i32 @function_18b68()
  %v0_18b3b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_18b3b

dec_label_pc_18b3b:                               ; preds = %bb, %dec_label_pc_18b2c
  %v0_18b3b = phi i32 [ %v0_18b3b.pre, %bb ], [ %v0_18b33, %dec_label_pc_18b2c ]
  %v1_18b3b = add i32 %v0_18b3b, -13
  ret i32 %v1_18b3b
}

define i32 @function_18b46() local_unnamed_addr {
dec_label_pc_18b46:
  store i32 ptrtoint (i8** @global_var_1.1176 to i32), i32* @ebx, align 4
  %v0_18b4b = load i32, i32* @ebp, align 4
  %v1_18b4b = add i32 %v0_18b4b, -13
  %v1_18b52 = add i32 %v0_18b4b, -36
  %v2_18b52 = inttoptr i32 %v1_18b52 to i32*
  %v3_18b52 = load i32, i32* %v2_18b52, align 4
  %v2_18b58 = call i32 @unknown_2f13a(i32 %v3_18b52, i32 %v1_18b4b)
  %v4_18b5d = trunc i32 %v2_18b58 to i8
  %v5_18b5d = icmp eq i8 %v4_18b5d, 0
  br i1 %v5_18b5d, label %bb, label %dec_label_pc_18b61

bb:                                               ; preds = %dec_label_pc_18b46
  %v1_18b5f = call i32 @function_18b68()
  br label %dec_label_pc_18b61

dec_label_pc_18b61:                               ; preds = %bb, %dec_label_pc_18b46
  ret i32 ptrtoint (i8** @global_var_1.1176 to i32)

; uselistorder directives
  uselistorder i32 ()* @function_18b68, { 1, 0 }
}

define i32 @function_18b68() local_unnamed_addr {
dec_label_pc_18b68:
  store i32 0, i32* @eax, align 4
  store i32 0, i32* @esi, align 4
  %v0_18b6f = load i32, i32* @ebx, align 4
  %v4_18b6f = trunc i32 %v0_18b6f to i8
  %v5_18b6f = icmp eq i8 %v4_18b6f, 0
  br i1 %v5_18b6f, label %bb, label %dec_label_pc_18b73

bb:                                               ; preds = %dec_label_pc_18b68
  %v1_18b71 = call i32 @function_18b7e()
  br label %dec_label_pc_18b73

dec_label_pc_18b73:                               ; preds = %bb, %dec_label_pc_18b68
  %v0_18b73 = load i32, i32* @ebp, align 4
  %v1_18b73 = add i32 %v0_18b73, -13
  ret i32 %v1_18b73
}

define i32 @function_18b7e() local_unnamed_addr {
dec_label_pc_18b7e:
  %v0_18b7e = load i32, i32* @esi, align 4
  %v4_18b80 = trunc i32 %v0_18b7e to i8
  %v5_18b80 = icmp eq i8 %v4_18b80, 0
  br i1 %v5_18b80, label %bb, label %dec_label_pc_18b7e.dec_label_pc_18b84_crit_edge

dec_label_pc_18b7e.dec_label_pc_18b84_crit_edge:  ; preds = %dec_label_pc_18b7e
  %v2_18b82.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18b84

bb:                                               ; preds = %dec_label_pc_18b7e
  %v1_18b82 = call i32 @function_18b96()
  br label %dec_label_pc_18b84

dec_label_pc_18b84:                               ; preds = %dec_label_pc_18b7e.dec_label_pc_18b84_crit_edge, %bb
  %v2_18b82 = phi i32 [ %v2_18b82.pre, %dec_label_pc_18b7e.dec_label_pc_18b84_crit_edge ], [ %v1_18b82, %bb ]
  ret i32 %v2_18b82

; uselistorder directives
  uselistorder label %dec_label_pc_18b84, { 1, 0 }
}

define i32 @function_18b91() local_unnamed_addr {
dec_label_pc_18b91:
  %v0_18b91 = call i32 @function_18c39()
  ret i32 %v0_18b91
}

define i32 @function_18b96() local_unnamed_addr {
dec_label_pc_18b96:
  %v0_18b96 = load i32, i32* @ebp, align 4
  %v1_18b96 = add i32 %v0_18b96, -28
  %v2_18b96 = inttoptr i32 %v1_18b96 to i32*
  %v3_18b96 = load i32, i32* %v2_18b96, align 4
  %v2_18b9c = call i32 @unknown_32639(i32 %v3_18b96)
  %v4_18ba1 = trunc i32 %v2_18b9c to i8
  %v5_18ba1 = icmp eq i8 %v4_18ba1, 0
  br i1 %v5_18ba1, label %dec_label_pc_18bb4, label %dec_label_pc_18ba5

dec_label_pc_18ba5:                               ; preds = %dec_label_pc_18b96
  %v0_18ba5 = load i32, i32* @ebp, align 4
  %v1_18ba5 = add i32 %v0_18ba5, -28
  %v2_18ba5 = inttoptr i32 %v1_18ba5 to i32*
  %v3_18ba5 = load i32, i32* %v2_18ba5, align 4
  %v2_18ba8 = add i32 %v0_18ba5, -32
  %v3_18ba8 = inttoptr i32 %v2_18ba8 to i32*
  %v4_18ba8 = load i32, i32* %v3_18ba8, align 4
  %v15_18ba8 = icmp eq i32 %v3_18ba5, %v4_18ba8
  br i1 %v15_18ba8, label %dec_label_pc_18bb4, label %dec_label_pc_18bb9

dec_label_pc_18bb4:                               ; preds = %dec_label_pc_18ba5, %dec_label_pc_18b96
  br label %dec_label_pc_18bb9

dec_label_pc_18bb9:                               ; preds = %dec_label_pc_18ba5, %dec_label_pc_18bb4
  %storemerge = phi i32 [ 0, %dec_label_pc_18bb4 ], [ ptrtoint (i8** @global_var_1.1176 to i32), %dec_label_pc_18ba5 ]
  %v4_18bb9 = trunc i32 %storemerge to i8
  %v5_18bb9 = icmp eq i8 %v4_18bb9, 0
  br i1 %v5_18bb9, label %bb, label %dec_label_pc_18bbd

bb:                                               ; preds = %dec_label_pc_18bb9
  %v1_18bbb = call i32 @function_18bc9()
  br label %dec_label_pc_18bbd

dec_label_pc_18bbd:                               ; preds = %bb, %dec_label_pc_18bb9
  %v3_18bbd = phi i32 [ %v1_18bbb, %bb ], [ %storemerge, %dec_label_pc_18bb9 ]
  ret i32 %v3_18bbd

; uselistorder directives
  uselistorder label %dec_label_pc_18bb9, { 1, 0 }
}

define i32 @function_18bc9() local_unnamed_addr {
dec_label_pc_18bc9:
  %v0_18bc9 = load i32, i32* @ebp, align 4
  %v1_18bc9 = add i32 %v0_18bc9, -32
  %v2_18bc9 = inttoptr i32 %v1_18bc9 to i32*
  %v3_18bc9 = load i32, i32* %v2_18bc9, align 4
  %v1_18bd0 = add i32 %v0_18bc9, -28
  %v2_18bd0 = inttoptr i32 %v1_18bd0 to i32*
  %v3_18bd0 = load i32, i32* %v2_18bd0, align 4
  %v2_18bd6 = call i32 @unknown_2c82f(i32 %v3_18bd0, i32 %v3_18bc9)
  %v1_18bdb = load i32, i32* @ebp, align 4
  %v2_18bdb = add i32 %v1_18bdb, -24
  %v3_18bdb = inttoptr i32 %v2_18bdb to i32*
  store i32 %v2_18bd6, i32* %v3_18bdb, align 4
  %v0_18bde = load i32, i32* @ebp, align 4
  %v1_18bed = add i32 %v0_18bde, -24
  %v2_18bed = inttoptr i32 %v1_18bed to i32*
  %v3_18bed = load i32, i32* %v2_18bed, align 4
  %v2_18bf8 = add i32 %v0_18bde, -20
  %v3_18bf8 = inttoptr i32 %v2_18bf8 to i32*
  store i32 %v3_18bed, i32* %v3_18bf8, align 4
  %v0_18bfb = load i32, i32* @ebp, align 4
  %v1_18bfb = add i32 %v0_18bfb, -20
  %v2_18bfb = inttoptr i32 %v1_18bfb to i32*
  %v3_18bfb = load i32, i32* %v2_18bfb, align 4
  ret i32 %v3_18bfb
}

define i32 @function_18bf9(i32 %arg1) local_unnamed_addr {
dec_label_pc_18bf9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18c26(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18c26:
  %v3_18c26 = load i32, i32* @eax, align 4
  ret i32 %v3_18c26
}

define i32 @function_18c39() local_unnamed_addr {
dec_label_pc_18c39:
  %v0_18c39 = load i32, i32* @ebp, align 4
  %v1_18c39 = add i32 %v0_18c39, -12
  %v2_18c39 = inttoptr i32 %v1_18c39 to i32*
  %v3_18c39 = load i32, i32* %v2_18c39, align 4
  %v1_18c3c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18c3c = icmp eq i32 %v1_18c3c, %v3_18c39
  br i1 %v3_18c3c, label %bb, label %dec_label_pc_18c39.dec_label_pc_18c45_crit_edge

dec_label_pc_18c39.dec_label_pc_18c45_crit_edge:  ; preds = %dec_label_pc_18c39
  %v2_18c43.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18c45

bb:                                               ; preds = %dec_label_pc_18c39
  %v1_18c43 = call i32 @function_18c7c()
  br label %dec_label_pc_18c45

dec_label_pc_18c45:                               ; preds = %dec_label_pc_18c39.dec_label_pc_18c45_crit_edge, %bb
  %v2_18c43 = phi i32 [ %v2_18c43.pre, %dec_label_pc_18c39.dec_label_pc_18c45_crit_edge ], [ %v1_18c43, %bb ]
  ret i32 %v2_18c43

; uselistorder directives
  uselistorder label %dec_label_pc_18c45, { 1, 0 }
}

define i32 @function_18c46(i32 %arg1) local_unnamed_addr {
dec_label_pc_18c46:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18c48() local_unnamed_addr {
dec_label_pc_18c48:
  %eax.global-to-local = alloca i32, align 4
  %v0_18c48 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18c48
}

define i32 @function_18c71(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18c71:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @__cxa_rethrow.1125(i32) local_unnamed_addr

define i32 @function_18c7c() local_unnamed_addr {
dec_label_pc_18c7c:
  %v0_18c82 = load i32, i32* @eax, align 4
  ret i32 %v0_18c82
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18c83:
  %v2_18cae = sub i32 %arg2, %arg1
  %v12_18cae = icmp eq i32 %v2_18cae, 0
  br i1 %v12_18cae, label %bb, label %dec_label_pc_18cbb

bb:                                               ; preds = %dec_label_pc_18c83
  %v4_18cb9 = call i32 @function_18cd9(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_18cbb

dec_label_pc_18cbb:                               ; preds = %bb, %dec_label_pc_18c83
  %v5_18cc3 = sub i32 %arg3, %v2_18cae
  ret i32 %v5_18cc3
}

define i32 @function_18cd9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18cd9:
  %v0_18cd9 = load i32, i32* @ebp, align 4
  %v1_18cd9 = add i32 %v0_18cd9, -16
  %v2_18cd9 = inttoptr i32 %v1_18cd9 to i32*
  %v3_18cd9 = load i32, i32* %v2_18cd9, align 4
  %v2_18cde = add i32 %v0_18cd9, -36
  %v3_18cde = inttoptr i32 %v2_18cde to i32*
  %v4_18cde = load i32, i32* %v3_18cde, align 4
  %v5_18cde = sub i32 %v4_18cde, %v3_18cd9
  ret i32 %v5_18cde
}

define i32 @function_18ceb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18ceb:
  %v0_18ceb = load i1, i1* @zf, align 1
  br i1 %v0_18ceb, label %bb, label %dec_label_pc_18ceb.dec_label_pc_18ced_crit_edge

dec_label_pc_18ceb.dec_label_pc_18ced_crit_edge:  ; preds = %dec_label_pc_18ceb
  %v2_18ceb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18ced

bb:                                               ; preds = %dec_label_pc_18ceb
  %v1_18ceb = call i32 @function_18cf2()
  br label %dec_label_pc_18ced

dec_label_pc_18ced:                               ; preds = %dec_label_pc_18ceb.dec_label_pc_18ced_crit_edge, %bb
  %v2_18ceb = phi i32 [ %v2_18ceb.pre, %dec_label_pc_18ceb.dec_label_pc_18ced_crit_edge ], [ %v1_18ceb, %bb ]
  ret i32 %v2_18ceb

; uselistorder directives
  uselistorder label %dec_label_pc_18ced, { 1, 0 }
}

define i32 @function_18cef(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18cef:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18cf2() local_unnamed_addr {
dec_label_pc_18cf2:
  %v0_18cf3 = load i32, i32* @eax, align 4
  ret i32 %v0_18cf3
}

define i32 @_ZNK9CFlatData9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18cf4:
  ret i32 0
}

define i32 @function_18d1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d1e:
  %v0_18d1e = load i32, i32* @ebp, align 4
  %v1_18d1e = add i32 %v0_18d1e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_18d1e, i32* @ebp, align 4
  %v0_18d21 = load i32, i32* @eax, align 4
  %v1_18d21 = add i32 %v0_18d21, ptrtoint (i8** @global_var_1.1176 to i32)
  %v2_18d22 = add i32 %v0_18d21, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 137)
  %v16_18d22 = and i32 %v2_18d22, 255
  %v18_18d22 = and i32 %v1_18d21, -256
  %v19_18d22 = or i32 %v16_18d22, %v18_18d22
  ret i32 %v19_18d22
}

define i32 @function_18d27() local_unnamed_addr {
dec_label_pc_18d27:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_18d29 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_18d29 = load i32, i32* %ecx.global-to-local, align 4
  %v4_18d29 = lshr i32 %v3_18d29, ptrtoint (i32* @global_var_8.1178 to i32)
  %v5_18d29 = trunc i32 %v4_18d29 to i8
  %v6_18d29 = add i8 %v5_18d29, %v2_18d29
  %v22_18d29 = inttoptr i32 %v3_18d29 to i8*
  store i8 %v6_18d29, i8* %v22_18d29, align 1
  %v0_18d2b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18d2b
}

define i32 @function_18d30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18d30:
  %v0_18d30 = load i32, i32* @ecx, align 4
  %v1_18d30 = add i32 %v0_18d30, -1995955116
  %v2_18d30 = inttoptr i32 %v1_18d30 to i8*
  %v3_18d30 = load i8, i8* %v2_18d30, align 1
  %v5_18d30 = trunc i32 %v0_18d30 to i8
  %v6_18d30 = add i8 %v3_18d30, %v5_18d30
  store i8 %v6_18d30, i8* %v2_18d30, align 1
  %v0_18d39 = load i32, i32* @ebp, align 4
  %v1_18d39 = add i32 %v0_18d39, -32
  %v2_18d39 = inttoptr i32 %v1_18d39 to i32*
  %v3_18d39 = load i32, i32* %v2_18d39, align 4
  %v1_18d3f = call i32 @unknown_1d862(i32 %v3_18d39)
  %v0_18d44 = load i32, i32* @ebp, align 4
  %v1_18d44 = add i32 %v0_18d44, -12
  %v2_18d44 = inttoptr i32 %v1_18d44 to i32*
  %v3_18d44 = load i32, i32* %v2_18d44, align 4
  %v1_18d47 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18d47 = xor i32 %v1_18d47, %v3_18d44
  %v3_18d47 = icmp eq i32 %v2_18d47, 0
  store i32 %v2_18d47, i32* @eax, align 4
  br i1 %v3_18d47, label %bb, label %dec_label_pc_18d50

bb:                                               ; preds = %dec_label_pc_18d30
  %v1_18d4e = call i32 @function_18d55()
  br label %dec_label_pc_18d50

dec_label_pc_18d50:                               ; preds = %bb, %dec_label_pc_18d30
  %v2_18d4e = phi i32 [ %v1_18d4e, %bb ], [ %v2_18d47, %dec_label_pc_18d30 ]
  ret i32 %v2_18d4e
}

define i32 @function_18d55() local_unnamed_addr {
dec_label_pc_18d55:
  %v0_18d56 = load i32, i32* @eax, align 4
  ret i32 %v0_18d56
}

define i32 @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18d57:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_18d85 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_18d85 = inttoptr i32 %v2_18d85 to i32*
  store i32 %arg3, i32* %v3_18d85, align 4
  store i32 %tmp104, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18d97

bb:                                               ; preds = %dec_label_pc_18d57
  %v4_18d95 = call i32 @function_18d9c(i32 %arg2, i32 %arg3, i32 %tmp104)
  br label %dec_label_pc_18d97

dec_label_pc_18d97:                               ; preds = %bb, %dec_label_pc_18d57
  %v5_18d95 = phi i32 [ %v4_18d95, %bb ], [ %tmp104, %dec_label_pc_18d57 ]
  ret i32 %v5_18d95

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_18d9c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18d9c:
  %v0_18d9d = load i32, i32* @eax, align 4
  ret i32 %v0_18d9d
}

define i32 @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18da0:
  %v3_18dd7 = call i32 @unknown_31af7(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18dee

bb:                                               ; preds = %dec_label_pc_18da0
  %v1_18dec = call i32 @function_18df3()
  br label %dec_label_pc_18dee

dec_label_pc_18dee:                               ; preds = %bb, %dec_label_pc_18da0
  %v2_18dec = phi i32 [ %v1_18dec, %bb ], [ %arg1, %dec_label_pc_18da0 ]
  ret i32 %v2_18dec

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18df3() local_unnamed_addr {
dec_label_pc_18df3:
  %v4_18df3 = load i32, i32* @eax, align 4
  ret i32 %v4_18df3
}

define i32 @function_18df4(i32 %arg1) local_unnamed_addr {
dec_label_pc_18df4:
  %v0_18df4 = load i32, i32* @eax, align 4
  ret i32 %v0_18df4
}

define i32 @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_18df7:
  ret i32 %arg4
}

define i32 @function_18e53(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e53:
  %v0_18e55 = load i32, i32* @ebp, align 4
  %v1_18e55 = add i32 %v0_18e55, -36
  %v2_18e55 = inttoptr i32 %v1_18e55 to i32*
  %v3_18e55 = load i32, i32* %v2_18e55, align 4
  %v1_18e58 = add i32 %v0_18e55, -32
  %v2_18e58 = inttoptr i32 %v1_18e58 to i32*
  %v3_18e58 = load i32, i32* %v2_18e58, align 4
  %v0_18e63 = load i32, i32* @ecx, align 4
  %v3_18e66 = call i32 @unknown_32aea(i32 %v0_18e63, i32 %v3_18e55, i32 %v3_18e58)
  %v0_18e6e = load i32, i32* @ebp, align 4
  %v1_18e6e = add i32 %v0_18e6e, -28
  %v2_18e6e = inttoptr i32 %v1_18e6e to i32*
  %v3_18e6e = load i32, i32* %v2_18e6e, align 4
  store i32 %v3_18e6e, i32* @eax, align 4
  %v1_18e71 = add i32 %v0_18e6e, -12
  %v2_18e71 = inttoptr i32 %v1_18e71 to i32*
  %v3_18e71 = load i32, i32* %v2_18e71, align 4
  %v1_18e74 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18e74 = icmp eq i32 %v1_18e74, %v3_18e71
  br i1 %v3_18e74, label %bb, label %dec_label_pc_18e7d

bb:                                               ; preds = %dec_label_pc_18e53
  %v1_18e7b = call i32 @function_18e82()
  br label %dec_label_pc_18e7d

dec_label_pc_18e7d:                               ; preds = %bb, %dec_label_pc_18e53
  %v2_18e7b = phi i32 [ %v1_18e7b, %bb ], [ %v3_18e6e, %dec_label_pc_18e53 ]
  ret i32 %v2_18e7b
}

define i32 @function_18e80(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18e82() local_unnamed_addr {
dec_label_pc_18e82:
  %v0_18e83 = load i32, i32* @eax, align 4
  ret i32 %v0_18e83
}

define i32 @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e86:
  ret i32 %arg1
}

define i32 @function_18e96(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e96:
  %v2_18e96 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_18e96 = load i32, i32* @eax, align 4
  %v4_18e96 = trunc i32 %v3_18e96 to i8
  %v5_18e96 = add i8 %v4_18e96, %v2_18e96
  %v21_18e96 = inttoptr i32 %v3_18e96 to i8*
  store i8 %v5_18e96, i8* %v21_18e96, align 1
  %v0_18e98 = load i32, i32* @eax, align 4
  %v1_18e98 = load i32, i32* @ebp, align 4
  %v2_18e98 = add i32 %v1_18e98, -12
  %v3_18e98 = inttoptr i32 %v2_18e98 to i32*
  store i32 %v0_18e98, i32* %v3_18e98, align 4
  %v0_18e9d = load i32, i32* @ebp, align 4
  %v1_18e9d = add i32 %v0_18e9d, -28
  %v2_18e9d = inttoptr i32 %v1_18e9d to i32*
  %v3_18e9d = load i32, i32* %v2_18e9d, align 4
  store i32 %v3_18e9d, i32* @eax, align 4
  %v1_18ea0 = add i32 %v0_18e9d, -12
  %v2_18ea0 = inttoptr i32 %v1_18ea0 to i32*
  %v3_18ea0 = load i32, i32* %v2_18ea0, align 4
  %v1_18ea3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18ea3 = icmp eq i32 %v1_18ea3, %v3_18ea0
  br i1 %v3_18ea3, label %bb, label %dec_label_pc_18eac

bb:                                               ; preds = %dec_label_pc_18e96
  %v1_18eaa = call i32 @function_18eb1()
  br label %dec_label_pc_18eac

dec_label_pc_18eac:                               ; preds = %bb, %dec_label_pc_18e96
  %v2_18eaa = phi i32 [ %v1_18eaa, %bb ], [ %v3_18e9d, %dec_label_pc_18e96 ]
  ret i32 %v2_18eaa
}

define i32 @function_18eb1() local_unnamed_addr {
dec_label_pc_18eb1:
  %v0_18eb2 = load i32, i32* @eax, align 4
  ret i32 %v0_18eb2
}

define i32 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18eb4:
  ret i32 1073741823
}

define i32 @function_18ee0() local_unnamed_addr {
dec_label_pc_18ee0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_18ee0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18ee0 = sub i32 %v0_18ee0, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_18ee0, i32* %ecx.global-to-local, align 4
  %v0_18ee2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18ee2
}

define i32 @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ee3:
  ret i32 %arg1
}

define i32 @function_18efd(i32 %arg1) local_unnamed_addr {
dec_label_pc_18efd:
  %v0_18efd = load i32, i32* @eax, align 4
  %v1_18f00 = call i32 @unknown_29a6d(i32 %v0_18efd)
  store i32 %v1_18f00, i32* @eax, align 4
  %v0_18f05 = load i32, i32* @ebp, align 4
  %v1_18f05 = add i32 %v0_18f05, -12
  %v2_18f05 = inttoptr i32 %v1_18f05 to i32*
  %v3_18f05 = load i32, i32* %v2_18f05, align 4
  %v1_18f08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18f08 = icmp eq i32 %v1_18f08, %v3_18f05
  br i1 %v3_18f08, label %bb, label %dec_label_pc_18f11

bb:                                               ; preds = %dec_label_pc_18efd
  %v1_18f0f = call i32 @function_18f16()
  br label %dec_label_pc_18f11

dec_label_pc_18f11:                               ; preds = %bb, %dec_label_pc_18efd
  %v2_18f0f = phi i32 [ %v1_18f0f, %bb ], [ %v1_18f00, %dec_label_pc_18efd ]
  ret i32 %v2_18f0f
}

define i32 @function_18f16() local_unnamed_addr {
dec_label_pc_18f16:
  %v0_18f17 = load i32, i32* @eax, align 4
  ret i32 %v0_18f17
}

define i32 @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18f18:
  %v1_18f43 = call i32 @unknown_25ef7(i32 %arg3)
  ret i32 %v1_18f43
}

define i32 @function_18f4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f4c:
  %v1_18f50 = call i32 @unknown_25ef7(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_18f50, i32* @ebx, align 4
  %v0_18f57 = load i32, i32* @ebp, align 4
  %v1_18f57 = add i32 %v0_18f57, -28
  %v2_18f57 = inttoptr i32 %v1_18f57 to i32*
  %v3_18f57 = load i32, i32* %v2_18f57, align 4
  %v1_18f5d = call i32 @unknown_25ef7(i32 %v3_18f57)
  ret i32 %v1_18f5d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_25ef7, { 1, 0, 2 }
}

define i32 @function_18f6f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18f6f:
  %v2_18f70 = load i32, i32* @eax, align 4
  %v4_18f70 = mul i32 %v2_18f70, 2
  %v21_18f70 = inttoptr i32 %v2_18f70 to i32*
  store i32 %v4_18f70, i32* %v21_18f70, align 4
  %v0_18f72 = load i32, i32* @ebp, align 4
  %v1_18f72 = add i32 %v0_18f72, -12
  %v2_18f72 = inttoptr i32 %v1_18f72 to i32*
  %v3_18f72 = load i32, i32* %v2_18f72, align 4
  %v1_18f75 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18f75 = icmp eq i32 %v1_18f75, %v3_18f72
  br i1 %v3_18f75, label %bb, label %dec_label_pc_18f6f.dec_label_pc_18f7e_crit_edge

dec_label_pc_18f6f.dec_label_pc_18f7e_crit_edge:  ; preds = %dec_label_pc_18f6f
  %v2_18f7c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18f7e

bb:                                               ; preds = %dec_label_pc_18f6f
  %v1_18f7c = call i32 @function_18f83()
  br label %dec_label_pc_18f7e

dec_label_pc_18f7e:                               ; preds = %dec_label_pc_18f6f.dec_label_pc_18f7e_crit_edge, %bb
  %v2_18f7c = phi i32 [ %v2_18f7c.pre, %dec_label_pc_18f6f.dec_label_pc_18f7e_crit_edge ], [ %v1_18f7c, %bb ]
  ret i32 %v2_18f7c

; uselistorder directives
  uselistorder i32 %v2_18f70, { 1, 0 }
  uselistorder label %dec_label_pc_18f7e, { 1, 0 }
}

define i32 @function_18f83() local_unnamed_addr {
dec_label_pc_18f83:
  %v0_18f89 = load i32, i32* @eax, align 4
  ret i32 %v0_18f89
}

define i32 @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18f8a:
  ret i32 0
}

define i32 @function_18fae(i32 %arg1) local_unnamed_addr {
dec_label_pc_18fae:
  %v1_18fb2 = load i32, i32* @ebx, align 4
  %v2_18fb2 = add i32 %v1_18fb2, 1149886549
  %v3_18fb2 = inttoptr i32 %v2_18fb2 to double*
  %v4_18fb2 = load double, double* %v3_18fb2, align 4
  %v5_18fb2 = fpext double %v4_18fb2 to x86_fp80
  %v6_18fb2 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_18fb2 = fmul x86_fp80 %v5_18fb2, %v6_18fb2
  store x86_fp80 %v7_18fb2, x86_fp80* @st0, align 4
  %v0_18fba = load i32, i32* @edx, align 4
  %v0_18fbe = load i32, i32* @ecx, align 4
  %v2_18fc1 = call i32 @unknown_32da3(i32 %v0_18fbe, i32 %v0_18fba)
  %v0_18fc9 = load i32, i32* @ebp, align 4
  %v1_18fc9 = add i32 %v0_18fc9, -28
  %v2_18fc9 = inttoptr i32 %v1_18fc9 to i32*
  %v3_18fc9 = load i32, i32* %v2_18fc9, align 4
  store i32 %v3_18fc9, i32* @eax, align 4
  %v1_18fcc = add i32 %v0_18fc9, -12
  %v2_18fcc = inttoptr i32 %v1_18fcc to i32*
  %v3_18fcc = load i32, i32* %v2_18fcc, align 4
  %v1_18fcf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18fcf = xor i32 %v1_18fcf, %v3_18fcc
  %v3_18fcf = icmp eq i32 %v2_18fcf, 0
  store i32 %v2_18fcf, i32* @edx, align 4
  br i1 %v3_18fcf, label %bb, label %dec_label_pc_18fd8

bb:                                               ; preds = %dec_label_pc_18fae
  %v1_18fd6 = call i32 @function_18fdd()
  br label %dec_label_pc_18fd8

dec_label_pc_18fd8:                               ; preds = %bb, %dec_label_pc_18fae
  %v3_18fd6 = phi i32 [ %v1_18fd6, %bb ], [ %v3_18fc9, %dec_label_pc_18fae ]
  ret i32 %v3_18fd6
}

define i32 @function_18fdd() local_unnamed_addr {
dec_label_pc_18fdd:
  %v0_18fde = load i32, i32* @eax, align 4
  ret i32 %v0_18fde
}

define i32 @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_18fe1:
  %v0_19011 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_19011
}

define i32 @function_1901a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1901a:
  %v0_1901c = load i32, i32* @ebp, align 4
  %v1_1901c = add i32 %v0_1901c, -20
  %v1_1901f = add i32 %v0_1901c, -68
  %v2_1901f = inttoptr i32 %v1_1901f to i32*
  %v3_1901f = load i32, i32* %v2_1901f, align 4
  %v1_19022 = add i32 %v0_1901c, -64
  %v2_19022 = inttoptr i32 %v1_19022 to i32*
  %v3_19022 = load i32, i32* %v2_19022, align 4
  %v3_19030 = call i32 @unknown_31d81(i32 %v1_1901c, i32 %v3_1901f, i32 %v3_19022)
  %v0_19038 = load i32, i32* @ebp, align 4
  %v1_19038 = add i32 %v0_19038, -28
  %v1_1903b = add i32 %v0_19038, -60
  %v2_1903b = inttoptr i32 %v1_1903b to i32*
  %v3_1903b = load i32, i32* %v2_1903b, align 4
  %v1_1903e = add i32 %v0_19038, -56
  %v2_1903e = inttoptr i32 %v1_1903e to i32*
  %v3_1903e = load i32, i32* %v2_1903e, align 4
  %v3_1904c = call i32 @unknown_32e43(i32 %v1_19038, i32 %v3_1903b, i32 %v3_1903e)
  %v0_19054 = load i32, i32* @ebp, align 4
  %v1_19054 = add i32 %v0_19054, -36
  %v1_19057 = add i32 %v0_19054, -52
  %v2_19057 = inttoptr i32 %v1_19057 to i32*
  %v3_19057 = load i32, i32* %v2_19057, align 4
  %v1_1905a = add i32 %v0_19054, -48
  %v2_1905a = inttoptr i32 %v1_1905a to i32*
  %v3_1905a = load i32, i32* %v2_1905a, align 4
  %v3_19068 = call i32 @unknown_32e43(i32 %v1_19054, i32 %v3_19057, i32 %v3_1905a)
  %v0_19070 = load i32, i32* @ebp, align 4
  %v1_1908f = add i32 %v0_19070, -36
  %v2_1908f = inttoptr i32 %v1_1908f to i32*
  %v3_1908f = load i32, i32* %v2_1908f, align 4
  ret i32 %v3_1908f

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_32e43, { 1, 0 }
}

define i32 @function_1909e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1909e:
  %v0_190a0 = call i32 @unknown_32e9a()
  %v0_190a8 = load i32, i32* @ebp, align 4
  %v1_190a8 = add i32 %v0_190a8, -44
  %v2_190a8 = inttoptr i32 %v1_190a8 to i32*
  %v3_190a8 = load i32, i32* %v2_190a8, align 4
  store i32 %v3_190a8, i32* @eax, align 4
  %v1_190ab = add i32 %v0_190a8, -12
  %v2_190ab = inttoptr i32 %v1_190ab to i32*
  %v3_190ab = load i32, i32* %v2_190ab, align 4
  %v1_190ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_190ae = icmp eq i32 %v1_190ae, %v3_190ab
  br i1 %v3_190ae, label %bb, label %dec_label_pc_190b7

bb:                                               ; preds = %dec_label_pc_1909e
  %v1_190b5 = call i32 @function_190bc()
  br label %dec_label_pc_190b7

dec_label_pc_190b7:                               ; preds = %bb, %dec_label_pc_1909e
  %v2_190b5 = phi i32 [ %v1_190b5, %bb ], [ %v3_190a8, %dec_label_pc_1909e ]
  ret i32 %v2_190b5
}

define i32 @function_190bc() local_unnamed_addr {
dec_label_pc_190bc:
  %v0_190bd = load i32, i32* @eax, align 4
  ret i32 %v0_190bd
}

define i32 @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_190c0:
  %v7_1912f = call i32 @unknown_33008(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19146

bb:                                               ; preds = %dec_label_pc_190c0
  %v1_19144 = call i32 @function_1914b()
  br label %dec_label_pc_19146

dec_label_pc_19146:                               ; preds = %bb, %dec_label_pc_190c0
  %v2_19144 = phi i32 [ %v1_19144, %bb ], [ %arg1, %dec_label_pc_190c0 ]
  ret i32 %v2_19144

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1914b() local_unnamed_addr {
dec_label_pc_1914b:
  %v0_1914c = load i32, i32* @eax, align 4
  ret i32 %v0_1914c
}

define i32 @_ZNK7CVarIntIiE9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19150:
  %v2_1917c = load i32, i32* %arg1, align 4
  %v1_1917e = inttoptr i32 %v2_1917c to i32*
  %v2_1917e = load i32, i32* %v1_1917e, align 4
  %v2_1918a = call i32 @unknown_33171(i32 %arg2, i32 %v2_1917e)
  ret i32 0
}

define i32 @_ZNK7CVarIntIjE9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_191a2:
  %v2_191ce = load i32, i32* %arg1, align 4
  %v1_191d0 = inttoptr i32 %v2_191ce to i32*
  %v2_191d0 = load i32, i32* %v1_191d0, align 4
  %v2_191dc = call i32 @unknown_33265(i32 %arg2, i32 %v2_191d0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_191ed

bb:                                               ; preds = %dec_label_pc_191a2
  %v1_191eb = call i32 @function_191f2()
  br label %dec_label_pc_191ed

dec_label_pc_191ed:                               ; preds = %bb, %dec_label_pc_191a2
  %v2_191eb = phi i32 [ %v1_191eb, %bb ], [ 0, %dec_label_pc_191a2 ]
  ret i32 %v2_191eb
}

define i32 @function_191ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_191ef:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_191f2() local_unnamed_addr {
dec_label_pc_191f2:
  %v0_191f3 = load i32, i32* @eax, align 4
  ret i32 %v0_191f3
}

define i32 @_ZNK16CTxOutCompressor9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_191f4:
  %v2_19235 = load i32, i32* %arg1, align 4
  %v1_1923a = inttoptr i32 %v2_19235 to i32*
  %v2_1923a = load i32, i32* %v1_1923a, align 4
  ret i32 %v2_1923a
}

define i32 @function_19298() local_unnamed_addr {
dec_label_pc_19298:
  %v2_19298 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_19298 = load i32, i32* @eax, align 4
  %v4_19298 = trunc i32 %v3_19298 to i8
  %v5_19298 = add i8 %v4_19298, %v2_19298
  %v10_19298 = icmp ult i8 %v5_19298, %v2_19298
  store i1 %v10_19298, i1* @cf, align 1
  %v20_19298 = load i32, i32* @ecx, align 4
  %v21_19298 = inttoptr i32 %v20_19298 to i8*
  store i8 %v5_19298, i8* %v21_19298, align 1
  %v0_1929a = load i32, i32* @ebp, align 4
  %v1_1929a = add i32 %v0_1929a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1929a, i32* @ebp, align 4
  %v15_1929a = load i32, i32* @eax, align 4
  ret i32 %v15_1929a

; uselistorder directives
  uselistorder i8 %v2_19298, { 1, 0 }
}

define i32 @function_1929b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1929b:
  %v0_1929c = load i32, i32* @ebp, align 4
  %v1_1929c = add i32 %v0_1929c, -44
  %v2_1929c = inttoptr i32 %v1_1929c to i32*
  %v3_1929c = load i32, i32* %v2_1929c, align 4
  %v1_1929f = inttoptr i32 %v3_1929c to i32*
  %v2_1929f = load i32, i32* %v1_1929f, align 4
  %v1_192a1 = add i32 %v2_1929f, ptrtoint (i32* @global_var_8.1178 to i32)
  %v1_192a7 = call i32 @unknown_229c7(i32 %v1_192a1)
  %v0_192b0 = load i32, i32* @ebp, align 4
  %v1_192b0 = add i32 %v0_192b0, -24
  %v2_192b6 = call i32 @unknown_1ed44(i32 %v1_192b0, i32 %v1_192a7)
  %v0_192bb = load i32, i32* @ebx, align 4
  %v0_192bf = load i32, i32* @ebp, align 4
  %v1_192bf = add i32 %v0_192bf, -56
  %v2_192bf = inttoptr i32 %v1_192bf to i32*
  %v3_192bf = load i32, i32* %v2_192bf, align 4
  %v1_192c6 = add i32 %v0_192bf, -52
  %v2_192c6 = inttoptr i32 %v1_192c6 to i32*
  %v3_192c6 = load i32, i32* %v2_192c6, align 4
  %v1_192cd = add i32 %v0_192bf, -24
  %v1_192d4 = add i32 %v0_192bf, -48
  %v2_192d4 = inttoptr i32 %v1_192d4 to i32*
  %v3_192d4 = load i32, i32* %v2_192d4, align 4
  %sext = mul i32 %v0_192bb, 16777216
  %v5_192da = sdiv i32 %sext, 16777216
  %v6_192da = call i32 @unknown_33357(i32 %v3_192d4, i32 %v1_192cd, i32 %v3_192c6, i32 %v3_192bf, i32 %v5_192da)
  %v0_192df = load i32, i32* @ebp, align 4
  %v1_192df = add i32 %v0_192df, -20
  %v2_192df = inttoptr i32 %v1_192df to i32*
  %v3_192df = load i32, i32* %v2_192df, align 4
  %v5_192df = add i32 %v3_192df, %v6_192da
  store i32 %v5_192df, i32* %v2_192df, align 4
  %v0_192e2 = load i32, i32* @ebp, align 4
  %v1_192e2 = add i32 %v0_192e2, -12
  %v2_192e2 = inttoptr i32 %v1_192e2 to i32*
  %v3_192e2 = load i32, i32* %v2_192e2, align 4
  %v1_192e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_192e5 = xor i32 %v1_192e5, %v3_192e2
  %v3_192e5 = icmp eq i32 %v2_192e5, 0
  store i32 %v2_192e5, i32* @eax, align 4
  br i1 %v3_192e5, label %bb, label %dec_label_pc_192ee

bb:                                               ; preds = %dec_label_pc_1929b
  %v1_192ec = call i32 @function_192f3()
  br label %dec_label_pc_192ee

dec_label_pc_192ee:                               ; preds = %bb, %dec_label_pc_1929b
  %v2_192ec = phi i32 [ %v1_192ec, %bb ], [ %v2_192e5, %dec_label_pc_1929b ]
  ret i32 %v2_192ec

; uselistorder directives
  uselistorder i32 %v0_192bf, { 1, 0, 2, 3 }
}

define i32 @function_192f3() local_unnamed_addr {
dec_label_pc_192f3:
  %v0_192f3 = load i32, i32* @ebp, align 4
  %v1_192f8 = inttoptr i32 %v0_192f3 to i32*
  %v2_192f8 = load i32, i32* %v1_192f8, align 4
  store i32 %v2_192f8, i32* @ebp, align 4
  %v0_192f9 = load i32, i32* @eax, align 4
  ret i32 %v0_192f9
}

define i32 @_Z12SerReadWriteI11CDataStream7CVarIntIiEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_192fa:
  ret i32 %arg2
}

define i32 @function_1930a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1930a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1930a = load i32, i32* @ebp, align 4
  %v1_1930a = add i32 %v0_1930a, ptrtoint (i8** @global_var_1.1176 to i32)
  %v9_1930a = icmp eq i32 %v1_1930a, 0
  store i32 %v1_1930a, i32* @ebp, align 4
  %v0_1930b = load i32, i32* @ecx, align 4
  %v1_1930b = sub i32 %v0_1930b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1930b, i32* @ecx, align 4
  %v2_1930b = icmp eq i32 %v1_1930b, 0
  %v4_1930b = or i1 %v9_1930a, %v2_1930b
  br i1 %v4_1930b, label %dec_label_pc_1930d, label %bb

bb:                                               ; preds = %dec_label_pc_1930a
  %v6_1930b = call i32 @function_19298()
  store i32 %v6_1930b, i32* @eax, align 4
  %v0_1930d.pre = load i32, i32* @ebp, align 4
  %v0_1930e.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1930d

dec_label_pc_1930d:                               ; preds = %dec_label_pc_1930a, %bb
  %v30_1930e = phi i32 [ %v1_1930b, %dec_label_pc_1930a ], [ %v0_1930e.pre, %bb ]
  %v0_1930d = phi i32 [ %v1_1930a, %dec_label_pc_1930a ], [ %v0_1930d.pre, %bb ]
  %v1_1930d = add i32 %v0_1930d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1930d, i32* %ebp.global-to-local, align 4
  %v1_1930e = add i32 %v30_1930e, 1166793797
  %v2_1930e = inttoptr i32 %v1_1930e to i8*
  %v3_1930e = load i8, i8* %v2_1930e, align 1
  %v5_1930e = trunc i32 %v30_1930e to i8
  %v6_1930e = load i1, i1* @cf, align 1
  %v7_1930e = zext i1 %v6_1930e to i8
  %v8_1930e = add i8 %v3_1930e, %v5_1930e
  %v9_1930e = add i8 %v7_1930e, %v8_1930e
  %v27_1930e = icmp ule i8 %v9_1930e, %v3_1930e
  %v28_1930e = icmp ult i8 %v8_1930e, %v3_1930e
  %v29_1930e = select i1 %v6_1930e, i1 %v27_1930e, i1 %v28_1930e
  store i1 %v29_1930e, i1* %cf.global-to-local, align 1
  store i8 %v9_1930e, i8* %v2_1930e, align 1
  %v0_19314 = load i32, i32* @eax, align 4
  %v1_19314 = trunc i32 %v0_19314 to i8
  %v2_19314 = load i1, i1* %cf.global-to-local, align 1
  %v3_19314 = zext i1 %v2_19314 to i8
  %v4_19314 = add i8 %v1_19314, -119
  %v5_19314 = add i8 %v4_19314, %v3_19314
  %v22_19314 = icmp ule i8 %v5_19314, %v1_19314
  %v23_19314 = icmp ugt i8 %v1_19314, 118
  %v24_19314 = select i1 %v2_19314, i1 %v22_19314, i1 %v23_19314
  store i1 %v24_19314, i1* %cf.global-to-local, align 1
  %v25_19314 = zext i8 %v5_19314 to i32
  %v27_19314 = and i32 %v0_19314, -256
  %v28_19314 = or i32 %v25_19314, %v27_19314
  store i32 %v28_19314, i32* %eax.global-to-local, align 4
  %v0_19316 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19316 = add i32 %v0_19316, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_19316, i32* %ebp.global-to-local, align 4
  %v3_19317 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_19317 = fpext float %v3_19317 to x86_fp80
  %v5_19317 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_19317 = fmul x86_fp80 %v4_19317, %v5_19317
  store x86_fp80 %v6_19317, x86_fp80* @st0, align 4
  %v1_1931b = add i32 %v28_19314, -1587161275
  %v2_1931b = inttoptr i32 %v1_1931b to i8*
  %v3_1931b = load i8, i8* %v2_1931b, align 1
  %v4_1931b = load i32, i32* @ecx, align 4
  %v5_1931b = trunc i32 %v4_1931b to i8
  %v7_1931b = zext i1 %v24_19314 to i8
  %v8_1931b = sub i8 %v3_1931b, %v5_1931b
  %v9_1931b = add i8 %v8_1931b, %v7_1931b
  %v19_1931b = sub i8 %v8_1931b, %v7_1931b
  %v20_1931b = icmp ult i8 %v3_1931b, %v19_1931b
  %v21_1931b = icmp ne i8 %v5_1931b, -1
  %v22_1931b = or i1 %v21_1931b, %v20_1931b
  %v23_1931b = icmp ult i8 %v3_1931b, %v5_1931b
  %v24_1931b = select i1 %v24_19314, i1 %v22_1931b, i1 %v23_1931b
  store i1 %v24_1931b, i1* %cf.global-to-local, align 1
  store i8 %v9_1931b, i8* %v2_1931b, align 1
  %v0_19321 = load i32, i32* %eax.global-to-local, align 4
  %v1_19321 = trunc i32 %v0_19321 to i8
  %v2_19321 = load i1, i1* %cf.global-to-local, align 1
  %v3_19321 = zext i1 %v2_19321 to i8
  %v4_19321 = add i8 %v3_19321, %v1_19321
  %v19_19321 = icmp ule i8 %v4_19321, %v1_19321
  %v21_19321 = icmp eq i1 %v2_19321, %v19_19321
  store i1 %v21_19321, i1* %cf.global-to-local, align 1
  %v22_19321 = zext i8 %v4_19321 to i32
  %v24_19321 = and i32 %v0_19321, -256
  %v25_19321 = or i32 %v22_19321, %v24_19321
  store i32 %v25_19321, i32* %eax.global-to-local, align 4
  %v1_19323 = inttoptr i32 %v25_19321 to i8*
  %v2_19323 = load i8, i8* %v1_19323, align 1
  %v5_19323 = add i8 %v2_19323, %v4_19321
  store i8 %v5_19323, i8* %v1_19323, align 1
  %v0_19325 = load i32, i32* %eax.global-to-local, align 4
  %v1_19325 = load i32, i32* %ebp.global-to-local, align 4
  %v2_19325 = add i32 %v1_19325, -12
  %v3_19325 = inttoptr i32 %v2_19325 to i32*
  store i32 %v0_19325, i32* %v3_19325, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1932a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1932a = add i32 %v0_1932a, -40
  %v2_1932a = inttoptr i32 %v1_1932a to i32*
  %v3_1932a = load i32, i32* %v2_1932a, align 4
  store i32 %v3_1932a, i32* %eax.global-to-local, align 4
  %v1_19331 = add i32 %v0_1932a, -36
  %v2_19331 = inttoptr i32 %v1_19331 to i32*
  %v3_19331 = load i32, i32* %v2_19331, align 4
  store i32 %v3_19331, i32* %eax.global-to-local, align 4
  %v1_19338 = add i32 %v0_1932a, -32
  %v2_19338 = inttoptr i32 %v1_19338 to i32*
  %v3_19338 = load i32, i32* %v2_19338, align 4
  store i32 %v3_19338, i32* %eax.global-to-local, align 4
  %v1_1933f = add i32 %v0_1932a, -28
  %v2_1933f = inttoptr i32 %v1_1933f to i32*
  %v3_1933f = load i32, i32* %v2_1933f, align 4
  store i32 %v3_1933f, i32* %eax.global-to-local, align 4
  %v4_19345 = call i32 @unknown_306f9(i32 %v3_1933f, i32 %v3_19338, i32 %v3_19331, i32 %v3_1932a)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1934f = load i32, i32* %ebp.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_19360 = inttoptr i32 %v0_1934f to i32*
  %v2_19360 = load i32, i32* %v1_19360, align 4
  store i32 %v2_19360, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1932a, { 1, 0, 2, 3 }
  uselistorder i8 %v4_19321, { 0, 2, 1 }
  uselistorder i8 %v1_19321, { 1, 0 }
  uselistorder i8 %v8_1931b, { 1, 0 }
  uselistorder i8 %v7_1931b, { 1, 0 }
  uselistorder i8 %v5_1931b, { 1, 0, 2 }
  uselistorder i1 %v24_19314, { 1, 0, 2 }
  uselistorder i8 %v5_19314, { 1, 0 }
  uselistorder i8 %v9_1930e, { 1, 0 }
  uselistorder i8 %v8_1930e, { 1, 0 }
  uselistorder i8 %v3_1930e, { 1, 2, 0 }
  uselistorder i32 %v30_1930e, { 1, 0 }
  uselistorder x86_fp80* @st0, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder label %dec_label_pc_1930d, { 1, 0 }
}

define i32 @_Z12SerReadWriteI11CDataStreamiEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_19362:
  %v2_19395 = load i32, i32* %arg2, align 4
  %v4_193af = call i32 @unknown_26b44(i32 %arg1, i32 %v2_19395, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_193c5

bb:                                               ; preds = %dec_label_pc_19362
  %v1_193c3 = call i32 @function_193ca()
  br label %dec_label_pc_193c5

dec_label_pc_193c5:                               ; preds = %bb, %dec_label_pc_19362
  %v2_193c3 = phi i32 [ %v1_193c3, %bb ], [ 0, %dec_label_pc_19362 ]
  ret i32 %v2_193c3
}

define i32 @function_193ca() local_unnamed_addr {
dec_label_pc_193ca:
  %v0_193cb = load i32, i32* @eax, align 4
  ret i32 %v0_193cb
}

define i32 @_Z12SerReadWriteI11CDataStream7uint256EjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_193cc:
  ret i32 %arg2
}

define i32 @function_193de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_193de:
  %v0_193de = load i32, i32* @ebp, align 4
  %v1_193de = add i32 %v0_193de, 16
  %v2_193de = inttoptr i32 %v1_193de to i32*
  %v3_193de = load i32, i32* %v2_193de, align 4
  %v2_193e1 = add i32 %v0_193de, -36
  %v3_193e1 = inttoptr i32 %v2_193e1 to i32*
  store i32 %v3_193de, i32* %v3_193e1, align 4
  %v0_193e4 = load i32, i32* @ebp, align 4
  %v1_193e4 = add i32 %v0_193e4, 20
  %v2_193e4 = inttoptr i32 %v1_193e4 to i32*
  %v3_193e4 = load i32, i32* %v2_193e4, align 4
  %v2_193e7 = add i32 %v0_193e4, -40
  %v3_193e7 = inttoptr i32 %v2_193e7 to i32*
  store i32 %v3_193e4, i32* %v3_193e7, align 4
  %v0_193ea = load i32, i32* @ebp, align 4
  %v1_193ea = add i32 %v0_193ea, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_193ea = inttoptr i32 %v1_193ea to i8*
  %v3_193ea = load i8, i8* %v2_193ea, align 1
  %v3_193ee = add i32 %v0_193ea, -41
  %v4_193ee = inttoptr i32 %v3_193ee to i8*
  store i8 %v3_193ea, i8* %v4_193ee, align 1
  %v0_193f1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_193f7 = load i32, i32* @ebp, align 4
  %v2_193f7 = add i32 %v1_193f7, -12
  %v3_193f7 = inttoptr i32 %v2_193f7 to i32*
  store i32 %v0_193f1, i32* %v3_193f7, align 4
  %v0_193fc = load i32, i32* @ebp, align 4
  %v1_193fc = add i32 %v0_193fc, -40
  %v2_193fc = inttoptr i32 %v1_193fc to i32*
  %v3_193fc = load i32, i32* %v2_193fc, align 4
  %v1_19403 = add i32 %v0_193fc, -36
  %v2_19403 = inttoptr i32 %v1_19403 to i32*
  %v3_19403 = load i32, i32* %v2_19403, align 4
  %v1_1940a = add i32 %v0_193fc, -32
  %v2_1940a = inttoptr i32 %v1_1940a to i32*
  %v3_1940a = load i32, i32* %v2_1940a, align 4
  %v1_19411 = add i32 %v0_193fc, -28
  %v2_19411 = inttoptr i32 %v1_19411 to i32*
  %v3_19411 = load i32, i32* %v2_19411, align 4
  %v4_19417 = call i32 @unknown_2bdf3(i32 %v3_19411, i32 %v3_1940a, i32 %v3_19403, i32 %v3_193fc)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_193fc, { 1, 0, 2, 3 }
}

define i32 @function_19426(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19426:
  %v0_19426 = load i32, i32* @eax, align 4
  %v1_19426 = load i1, i1* @cf, align 1
  %v2_19426 = zext i1 %v1_19426 to i32
  %v3_19426 = add i32 %v0_19426, 20
  %v4_19426 = add i32 %v3_19426, %v2_19426
  %v14_19426 = icmp eq i32 %v4_19426, 0
  store i32 %v4_19426, i32* @eax, align 4
  br i1 %v14_19426, label %bb, label %dec_label_pc_1942d

bb:                                               ; preds = %dec_label_pc_19426
  %v1_1942b = call i32 @function_19432()
  br label %dec_label_pc_1942d

dec_label_pc_1942d:                               ; preds = %bb, %dec_label_pc_19426
  %v2_1942b = phi i32 [ %v1_1942b, %bb ], [ %v4_19426, %dec_label_pc_19426 ]
  ret i32 %v2_1942b
}

define i32 @function_19432() local_unnamed_addr {
dec_label_pc_19432:
  %v0_19433 = load i32, i32* @eax, align 4
  ret i32 %v0_19433
}

define i32 @_Z16Unserialize_implI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_19434:
  %v1_1946a = call i32 @unknown_226d8(i32 %arg2)
  %v1_19475 = call i32 @unknown_335ff(i32 %arg1)
  ret i32 %v1_19475
}

define i32 @function_194e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194e6:
  %v0_194e6 = load i32, i32* @ecx, align 4
  %v1_194e6 = add i32 %v0_194e6, -1995955108
  %v2_194e6 = inttoptr i32 %v1_194e6 to i8*
  %v3_194e6 = load i8, i8* %v2_194e6, align 1
  %v5_194e6 = trunc i32 %v0_194e6 to i8
  %v6_194e6 = add i8 %v3_194e6, %v5_194e6
  store i8 %v6_194e6, i8* %v2_194e6, align 1
  %v0_194ef = load i32, i32* @ebp, align 4
  %v1_194ef = add i32 %v0_194ef, -44
  %v2_194ef = inttoptr i32 %v1_194ef to i32*
  %v3_194ef = load i32, i32* %v2_194ef, align 4
  %v1_194f5 = call i32 @unknown_1de3a(i32 %v3_194ef)
  %v0_194fa = load i32, i32* @ebp, align 4
  %v1_194fa = add i32 %v0_194fa, -16
  %v2_194fa = inttoptr i32 %v1_194fa to i32*
  %v3_194fa = load i32, i32* %v2_194fa, align 4
  %v1_194fd = add i32 %v0_194fa, -24
  %v2_194fd = inttoptr i32 %v1_194fd to i32*
  %v3_194fd = load i32, i32* %v2_194fd, align 4
  %v5_194fd = add i32 %v3_194fd, %v3_194fa
  store i32 %v5_194fd, i32* %v2_194fd, align 4
  %v0_19500 = load i32, i32* @ebp, align 4
  %v1_19511 = add i32 %v0_19500, -12
  %v2_19511 = inttoptr i32 %v1_19511 to i32*
  %v3_19511 = load i32, i32* %v2_19511, align 4
  %v1_19514 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19514 = xor i32 %v1_19514, %v3_19511
  %v3_19514 = icmp eq i32 %v2_19514, 0
  store i32 %v2_19514, i32* @eax, align 4
  br i1 %v3_19514, label %bb, label %dec_label_pc_1951d

bb:                                               ; preds = %dec_label_pc_194e6
  %v1_1951b = call i32 @function_19522()
  br label %dec_label_pc_1951d

dec_label_pc_1951d:                               ; preds = %bb, %dec_label_pc_194e6
  %v3_1951b = phi i32 [ %v1_1951b, %bb ], [ %v2_19514, %dec_label_pc_194e6 ]
  ret i32 %v3_1951b
}

define i32 @function_19522() local_unnamed_addr {
dec_label_pc_19522:
  %v0_19527 = load i32, i32* @eax, align 4
  ret i32 %v0_19527
}

define i32 @_Z9SerializeI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19528:
  %stack_var_-17 = alloca i32, align 4
  %v2_19551 = ptrtoint i32* %stack_var_-17 to i32
  %v5_19573 = call i32 @unknown_338a7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_19551)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19584

bb:                                               ; preds = %dec_label_pc_19528
  %v1_19582 = call i32 @function_19589()
  br label %dec_label_pc_19584

dec_label_pc_19584:                               ; preds = %bb, %dec_label_pc_19528
  %v2_19582 = phi i32 [ %v1_19582, %bb ], [ 0, %dec_label_pc_19528 ]
  ret i32 %v2_19582
}

define i32 @function_19589() local_unnamed_addr {
dec_label_pc_19589:
  %v0_1958a = load i32, i32* @eax, align 4
  ret i32 %v0_1958a
}

define i32 @_Z12SerReadWriteI11CDataStream7CVarIntIyEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1958b:
  ret i32 %arg2
}

define i32 @function_195d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_195d0:
  %v0_195d0 = load i32, i32* @ebp, align 4
  %v1_195d0 = add i32 %v0_195d0, -28
  %v2_195d0 = inttoptr i32 %v1_195d0 to i32*
  %v3_195d0 = load i32, i32* %v2_195d0, align 4
  %v1_195d6 = call i32 @unknown_339b9(i32 %v3_195d0)
  store i32 0, i32* @eax, align 4
  %v0_195e0 = load i32, i32* @ebp, align 4
  %v1_195e0 = add i32 %v0_195e0, -12
  %v2_195e0 = inttoptr i32 %v1_195e0 to i32*
  %v3_195e0 = load i32, i32* %v2_195e0, align 4
  %v1_195e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_195e3 = icmp eq i32 %v1_195e3, %v3_195e0
  br i1 %v3_195e3, label %bb, label %dec_label_pc_195ec

bb:                                               ; preds = %dec_label_pc_195d0
  %v1_195ea = call i32 @function_195f1()
  br label %dec_label_pc_195ec

dec_label_pc_195ec:                               ; preds = %bb, %dec_label_pc_195d0
  %v2_195ea = phi i32 [ %v1_195ea, %bb ], [ 0, %dec_label_pc_195d0 ]
  ret i32 %v2_195ea
}

define i32 @function_195f1() local_unnamed_addr {
dec_label_pc_195f1:
  %v0_195f2 = load i32, i32* @eax, align 4
  ret i32 %v0_195f2
}

define i32 @_Z11UnserializeI11CDataStream7CVarIntIyEEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_195f3:
  ret i32 %arg3
}

define i32 @function_1962a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1962a:
  %v0_1962a = load i32, i32* @ebp, align 4
  %v1_1962a = add i32 %v0_1962a, -28
  %v2_1962a = inttoptr i32 %v1_1962a to i32*
  %v3_1962a = load i32, i32* %v2_1962a, align 4
  %v1_19631 = add i32 %v0_1962a, -32
  %v2_19631 = inttoptr i32 %v1_19631 to i32*
  %v3_19631 = load i32, i32* %v2_19631, align 4
  %v2_19637 = call i32 @unknown_33a7d(i32 %v3_19631, i32 %v3_1962a)
  %v0_1963c = load i32, i32* @ebp, align 4
  %v1_1963c = add i32 %v0_1963c, -12
  %v2_1963c = inttoptr i32 %v1_1963c to i32*
  %v3_1963c = load i32, i32* %v2_1963c, align 4
  %v1_1963f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1963f = xor i32 %v1_1963f, %v3_1963c
  %v3_1963f = icmp eq i32 %v2_1963f, 0
  store i32 %v2_1963f, i32* @eax, align 4
  br i1 %v3_1963f, label %bb, label %dec_label_pc_19648

bb:                                               ; preds = %dec_label_pc_1962a
  %v1_19646 = call i32 @function_1964d()
  br label %dec_label_pc_19648

dec_label_pc_19648:                               ; preds = %bb, %dec_label_pc_1962a
  %v2_19646 = phi i32 [ %v1_19646, %bb ], [ %v2_1963f, %dec_label_pc_1962a ]
  ret i32 %v2_19646
}

define i32 @function_1964d() local_unnamed_addr {
dec_label_pc_1964d:
  %v0_1964e = load i32, i32* @eax, align 4
  ret i32 %v0_1964e
}

define i32 @_Z10ReadVarIntI11CDataStreamiET0_RT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1964f:
  %stack_var_-17 = alloca i32, align 4
  %v2_19675 = ptrtoint i32* %stack_var_-17 to i32
  br label %dec_label_pc_1966d

dec_label_pc_1966d:                               ; preds = %dec_label_pc_196a6, %dec_label_pc_1964f
  %storemerge = phi i32 [ %v4_196a6, %dec_label_pc_196a6 ], [ 0, %dec_label_pc_1964f ]
  %v4_19682 = call i32 @unknown_1e055(i32 %arg1, i32 %v2_19675, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v2_1968c = mul i32 %storemerge, 128
  %v3_1968f = load i32, i32* %stack_var_-17, align 4
  %v1_19696 = urem i32 %v3_1968f, 128
  %v2_19699 = or i32 %v1_19696, %v2_1968c
  %v4_196a2 = trunc i32 %v3_1968f to i8
  %v6_196a2 = icmp slt i8 %v4_196a2, 0
  %v1_196a4 = icmp eq i1 %v6_196a2, false
  br i1 %v1_196a4, label %dec_label_pc_196ac, label %dec_label_pc_196a6

dec_label_pc_196a6:                               ; preds = %dec_label_pc_1966d
  %v4_196a6 = add i32 %v2_19699, 1
  br label %dec_label_pc_1966d

dec_label_pc_196ac:                               ; preds = %dec_label_pc_1966d
  store i32 %v2_19699, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_196bb

bb:                                               ; preds = %dec_label_pc_196ac
  %v2_196b9 = call i32 @function_196c0(i32 %v2_19699)
  br label %dec_label_pc_196bb

dec_label_pc_196bb:                               ; preds = %bb, %dec_label_pc_196ac
  %v3_196b9 = phi i32 [ %v2_196b9, %bb ], [ %v2_19699, %dec_label_pc_196ac ]
  ret i32 %v3_196b9

; uselistorder directives
  uselistorder i32 %v3_1968f, { 1, 0 }
}

define i32 @function_196c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_196c0:
  %v0_196c1 = load i32, i32* @eax, align 4
  ret i32 %v0_196c1
}

define i32 @_Z10ReadVarIntI11CDataStreamjET0_RT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_196c2:
  %stack_var_-17 = alloca i32, align 4
  %v2_196e8 = ptrtoint i32* %stack_var_-17 to i32
  br label %dec_label_pc_196e0

dec_label_pc_196e0:                               ; preds = %dec_label_pc_19719, %dec_label_pc_196c2
  %storemerge = phi i32 [ %v4_19719, %dec_label_pc_19719 ], [ 0, %dec_label_pc_196c2 ]
  %v4_196f5 = call i32 @unknown_1e0c8(i32 %arg1, i32 %v2_196e8, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v2_196ff = mul i32 %storemerge, 128
  %v3_19702 = load i32, i32* %stack_var_-17, align 4
  %v1_19709 = urem i32 %v3_19702, 128
  %v2_1970c = or i32 %v1_19709, %v2_196ff
  %v4_19715 = trunc i32 %v3_19702 to i8
  %v6_19715 = icmp slt i8 %v4_19715, 0
  %v1_19717 = icmp eq i1 %v6_19715, false
  br i1 %v1_19717, label %dec_label_pc_1971f, label %dec_label_pc_19719

dec_label_pc_19719:                               ; preds = %dec_label_pc_196e0
  %v4_19719 = add i32 %v2_1970c, 1
  br label %dec_label_pc_196e0

dec_label_pc_1971f:                               ; preds = %dec_label_pc_196e0
  store i32 %v2_1970c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1972e

bb:                                               ; preds = %dec_label_pc_1971f
  %v2_1972c = call i32 @function_19733(i32 %v2_1970c)
  br label %dec_label_pc_1972e

dec_label_pc_1972e:                               ; preds = %bb, %dec_label_pc_1971f
  %v3_1972c = phi i32 [ %v2_1972c, %bb ], [ %v2_1970c, %dec_label_pc_1971f ]
  ret i32 %v3_1972c

; uselistorder directives
  uselistorder i32 %v3_19702, { 1, 0 }
}

define i32 @function_19733(i32 %arg1) local_unnamed_addr {
dec_label_pc_19733:
  %v0_19734 = load i32, i32* @eax, align 4
  ret i32 %v0_19734
}

define i32 @_ZNSaImEC1IbEERKSaIT_E() local_unnamed_addr {
dec_label_pc_19736:
  %eax.global-to-local = alloca i32, align 4
  %v5_19736 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_19736
}

define i32 @function_19738(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19738:
  %v4_1973b = load i32, i32* @ecx, align 4
  %v0_19743 = load i32, i32* @ebp, align 4
  %v1_19746 = add i32 %v0_19743, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_19746, i32* @ebp, align 4
  %v1_19747 = sub i32 %v4_1973b, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_19747, i32* @ecx, align 4
  %v0_19749 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1974e = add i32 %v0_19743, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12))
  %v3_1974e = inttoptr i32 %v2_1974e to i32*
  store i32 %v0_19749, i32* %v3_1974e, align 4
  %v0_19753 = load i32, i32* @ebp, align 4
  %v1_19753 = add i32 %v0_19753, -28
  %v2_19753 = inttoptr i32 %v1_19753 to i32*
  %v3_19753 = load i32, i32* %v2_19753, align 4
  %v1_19759 = call i32 @unknown_33c16(i32 %v3_19753)
  %v0_1975e = load i32, i32* @ebp, align 4
  %v1_1975e = add i32 %v0_1975e, -12
  %v2_1975e = inttoptr i32 %v1_1975e to i32*
  %v3_1975e = load i32, i32* %v2_1975e, align 4
  %v1_19761 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19761 = xor i32 %v1_19761, %v3_1975e
  %v3_19761 = icmp eq i32 %v2_19761, 0
  store i32 %v2_19761, i32* @eax, align 4
  br i1 %v3_19761, label %bb, label %dec_label_pc_1976a

bb:                                               ; preds = %dec_label_pc_19738
  %v1_19768 = call i32 @function_1976f()
  br label %dec_label_pc_1976a

dec_label_pc_1976a:                               ; preds = %bb, %dec_label_pc_19738
  %v3_19768 = phi i32 [ %v1_19768, %bb ], [ %v2_19761, %dec_label_pc_19738 ]
  ret i32 %v3_19768

; uselistorder directives
  uselistorder i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 -12), { 2, 0, 3, 4, 5, 1, 6 }
}

define i32 @function_1976f() local_unnamed_addr {
dec_label_pc_1976f:
  %v0_19770 = load i32, i32* @eax, align 4
  ret i32 %v0_19770
}

define i32 @_ZNSaImED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19772:
  %v1_1978f = call i32 @unknown_33c7c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_197a0

bb:                                               ; preds = %dec_label_pc_19772
  %v1_1979e = call i32 @function_197a5()
  br label %dec_label_pc_197a0

dec_label_pc_197a0:                               ; preds = %bb, %dec_label_pc_19772
  %v2_1979e = phi i32 [ %v1_1979e, %bb ], [ 0, %dec_label_pc_19772 ]
  ret i32 %v2_1979e
}

define i32 @function_197a5() local_unnamed_addr {
dec_label_pc_197a5:
  %v0_197a6 = load i32, i32* @eax, align 4
  ret i32 %v0_197a6
}

define i32 @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1ERKSaImE() local_unnamed_addr {
dec_label_pc_197a8:
  %eax.global-to-local = alloca i32, align 4
  %v17_197ab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_197ab
}

define i32 @function_1980a() local_unnamed_addr {
dec_label_pc_1980a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1980a = load i32, i32* %ecx.global-to-local, align 4
  %v1_1980a = sub i32 %v0_1980a, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1980a, i32* %ecx.global-to-local, align 4
  %v0_1980c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1980c
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE8capacityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1980e:
  %v1_19828 = add i32 %arg1, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_19828 = inttoptr i32 %v1_19828 to i32*
  %v3_19828 = load i32, i32* %v2_19828, align 4
  ret i32 %v3_19828
}

define i32 @function_1982c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1982c:
  %v0_1982c = load i32, i32* @eax, align 4
  ret i32 %v0_1982c
}

define i32 @function_19851() local_unnamed_addr {
dec_label_pc_19851:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_19851 = load i32, i32* %ecx.global-to-local, align 4
  %v1_19851 = sub i32 %v0_19851, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_19851, i32* %ecx.global-to-local, align 4
  %v0_19853 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19853
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19854:
  %v2_1987e = call i32 @unknown_2badc(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19892

bb:                                               ; preds = %dec_label_pc_19854
  %v1_19890 = call i32 @function_19897()
  br label %dec_label_pc_19892

dec_label_pc_19892:                               ; preds = %bb, %dec_label_pc_19854
  %v2_19890 = phi i32 [ %v1_19890, %bb ], [ %arg1, %dec_label_pc_19854 ]
  ret i32 %v2_19890

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19897() local_unnamed_addr {
dec_label_pc_19897:
  %v0_19898 = load i32, i32* @eax, align 4
  ret i32 %v0_19898
}

define i32 @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1989b:
  %v1_198c5 = call i32 @unknown_33e11(i32 %arg2)
  %v1_198d2 = call i32 @unknown_33e11(i32 %arg1)
  %v3_198e5 = call i32 @unknown_33e46(i32 %v1_198d2, i32 %v1_198c5, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_198f6

bb:                                               ; preds = %dec_label_pc_1989b
  %v1_198f4 = call i32 @function_198fb()
  br label %dec_label_pc_198f6

dec_label_pc_198f6:                               ; preds = %bb, %dec_label_pc_1989b
  %v2_198f4 = phi i32 [ %v1_198f4, %bb ], [ 0, %dec_label_pc_1989b ]
  ret i32 %v2_198f4

; uselistorder directives
  uselistorder i32 (i32)* @unknown_33e11, { 1, 0 }
}

define i32 @function_198f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_198f8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_198fb() local_unnamed_addr {
dec_label_pc_198fb:
  %v0_19900 = load i32, i32* @eax, align 4
  ret i32 %v0_19900
}

define i32 @_ZSt6fill_nIP6CTxOutjS0_ET_S2_T0_RKT1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_19901:
  ret i32 %arg1
}

define i32 @function_1990e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1990e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1990e = load i32, i32* @ebp, align 4
  %v0_1990f = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_1990f = or i32 %v0_1990f, 137
  store i32 %v11_1990f, i32* %eax.global-to-local, align 4
  %v0_19912 = load i32, i32* @ecx, align 4
  %v1_19912 = sub i32 %v0_19912, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_19912, i32* @ecx, align 4
  %v1_19914 = add i32 %v0_1990e, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)))
  store i32 %v1_19914, i32* @ebp, align 4
  %v1_19915 = add i32 %v1_19912, -1587159995
  %v2_19915 = inttoptr i32 %v1_19915 to i8*
  %v3_19915 = load i8, i8* %v2_19915, align 1
  %v5_19915 = trunc i32 %v1_19912 to i8
  %v8_19915 = add i8 %v3_19915, %v5_19915
  %v28_19915 = icmp ult i8 %v8_19915, %v3_19915
  store i1 %v28_19915, i1* %cf.global-to-local, align 1
  store i8 %v8_19915, i8* %v2_19915, align 1
  %v0_1991b = load i32, i32* %eax.global-to-local, align 4
  %v1_1991b = trunc i32 %v0_1991b to i8
  %v2_1991b = load i1, i1* %cf.global-to-local, align 1
  %v3_1991b = zext i1 %v2_1991b to i8
  %v4_1991b = add i8 %v3_1991b, %v1_1991b
  %v19_1991b = icmp ule i8 %v4_1991b, %v1_1991b
  %v21_1991b = icmp eq i1 %v2_1991b, %v19_1991b
  store i1 %v21_1991b, i1* %cf.global-to-local, align 1
  %v22_1991b = zext i8 %v4_1991b to i32
  %v24_1991b = and i32 %v0_1991b, -256
  %v25_1991b = or i32 %v22_1991b, %v24_1991b
  store i32 %v25_1991b, i32* %eax.global-to-local, align 4
  %v1_1991d = inttoptr i32 %v25_1991b to i8*
  %v2_1991d = load i8, i8* %v1_1991d, align 1
  %v5_1991d = add i8 %v2_1991d, %v4_1991b
  store i8 %v5_1991d, i8* %v1_1991d, align 1
  %v0_1991f = load i32, i32* %eax.global-to-local, align 4
  %v1_1991f = load i32, i32* @ebp, align 4
  %v2_1991f = add i32 %v1_1991f, -12
  %v3_1991f = inttoptr i32 %v2_1991f to i32*
  store i32 %v0_1991f, i32* %v3_1991f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_19924 = load i32, i32* @ebp, align 4
  %v1_19924 = add i32 %v0_19924, -28
  %v2_19924 = inttoptr i32 %v1_19924 to i32*
  %v3_19924 = load i32, i32* %v2_19924, align 4
  store i32 %v3_19924, i32* %eax.global-to-local, align 4
  %v1_1992a = call i32 @unknown_33fa8(i32 %v3_19924)
  store i32 %v1_1992a, i32* %eax.global-to-local, align 4
  %v0_1992f = load i32, i32* @ebp, align 4
  %v1_1992f = add i32 %v0_1992f, -36
  %v2_1992f = inttoptr i32 %v1_1992f to i32*
  %v3_1992f = load i32, i32* %v2_1992f, align 4
  %v1_19936 = add i32 %v0_1992f, -32
  %v2_19936 = inttoptr i32 %v1_19936 to i32*
  %v3_19936 = load i32, i32* %v2_19936, align 4
  %v3_19940 = call i32 @unknown_33fdd(i32 %v1_1992a, i32 %v3_19936, i32 %v3_1992f)
  store i32 %v3_19940, i32* @eax, align 4
  %v0_19945 = load i32, i32* @ebp, align 4
  %v1_19945 = add i32 %v0_19945, -12
  %v2_19945 = inttoptr i32 %v1_19945 to i32*
  %v3_19945 = load i32, i32* %v2_19945, align 4
  %v1_19948 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19948 = xor i32 %v1_19948, %v3_19945
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_19948 = icmp eq i32 %v2_19948, 0
  store i32 %v2_19948, i32* @edx, align 4
  br i1 %v3_19948, label %bb, label %dec_label_pc_19951

bb:                                               ; preds = %dec_label_pc_1990e
  %v1_1994f = call i32 @function_19956()
  store i32 %v1_1994f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_19951

dec_label_pc_19951:                               ; preds = %bb, %dec_label_pc_1990e
  %v4_1994f = phi i32 [ %v1_1994f, %bb ], [ %v3_19940, %dec_label_pc_1990e ]
  ret i32 %v4_1994f

; uselistorder directives
  uselistorder i8 %v4_1991b, { 0, 2, 1 }
  uselistorder i8 %v1_1991b, { 1, 0 }
  uselistorder i8 %v3_19915, { 1, 0 }
  uselistorder i32 %v1_19912, { 1, 0, 2 }
  uselistorder i32 -1587159995, { 6, 1, 0, 2, 7, 3, 4, 8, 9, 5 }
  uselistorder i32 137, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19 }
}

define i32 @function_19956() local_unnamed_addr {
dec_label_pc_19956:
  %v0_19957 = load i32, i32* @eax, align 4
  ret i32 %v0_19957
}

define i32 @_Z12SerReadWriteI11CDataStream17CScriptCompressorEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19958:
  ret i32 %arg2
}

define i32 @function_19968() local_unnamed_addr {
dec_label_pc_19968:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_19968 = load i32, i32* @ebp, align 4
  %v0_19969 = load i32, i32* @ecx, align 4
  %v1_19969 = sub i32 %v0_19969, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_19969, i32* @ecx, align 4
  %v1_1996b = add i32 %v0_19968, add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v1_1996b, i32* %ebp.global-to-local, align 4
  %v1_1996c = add i32 %v1_19969, 1166793797
  %v2_1996c = inttoptr i32 %v1_1996c to i8*
  %v3_1996c = load i8, i8* %v2_1996c, align 1
  %v5_1996c = trunc i32 %v1_19969 to i8
  %v6_1996c = load i1, i1* @cf, align 1
  %v7_1996c = zext i1 %v6_1996c to i8
  %v8_1996c = add i8 %v3_1996c, %v5_1996c
  %v9_1996c = add i8 %v7_1996c, %v8_1996c
  %v27_1996c = icmp ule i8 %v9_1996c, %v3_1996c
  %v28_1996c = icmp ult i8 %v8_1996c, %v3_1996c
  %v29_1996c = select i1 %v6_1996c, i1 %v27_1996c, i1 %v28_1996c
  store i1 %v29_1996c, i1* %cf.global-to-local, align 1
  store i8 %v9_1996c, i8* %v2_1996c, align 1
  %v0_19972 = load i32, i32* @eax, align 4
  %v1_19972 = trunc i32 %v0_19972 to i8
  %v2_19972 = load i1, i1* %cf.global-to-local, align 1
  %v3_19972 = zext i1 %v2_19972 to i8
  %v4_19972 = add i8 %v1_19972, -119
  %v5_19972 = add i8 %v4_19972, %v3_19972
  %v22_19972 = icmp ule i8 %v5_19972, %v1_19972
  %v23_19972 = icmp ugt i8 %v1_19972, 118
  %v24_19972 = select i1 %v2_19972, i1 %v22_19972, i1 %v23_19972
  store i1 %v24_19972, i1* %cf.global-to-local, align 1
  %v25_19972 = zext i8 %v5_19972 to i32
  %v27_19972 = and i32 %v0_19972, -256
  %v28_19972 = or i32 %v25_19972, %v27_19972
  store i32 %v28_19972, i32* %eax.global-to-local, align 4
  %v0_19974 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19974 = add i32 %v0_19974, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_19974, i32* @ebp, align 4
  %v1_19979 = add i32 %v28_19972, -1587161275
  %v2_19979 = inttoptr i32 %v1_19979 to i8*
  %v3_19979 = load i8, i8* %v2_19979, align 1
  %v4_19979 = load i32, i32* @ecx, align 4
  %v5_19979 = trunc i32 %v4_19979 to i8
  %v7_19979 = zext i1 %v24_19972 to i8
  %v8_19979 = sub i8 %v3_19979, %v5_19979
  %v9_19979 = add i8 %v8_19979, %v7_19979
  %v19_19979 = sub i8 %v8_19979, %v7_19979
  %v20_19979 = icmp ult i8 %v3_19979, %v19_19979
  %v21_19979 = icmp ne i8 %v5_19979, -1
  %v22_19979 = or i1 %v21_19979, %v20_19979
  %v23_19979 = icmp ult i8 %v3_19979, %v5_19979
  %v24_19979 = select i1 %v24_19972, i1 %v22_19979, i1 %v23_19979
  store i1 %v24_19979, i1* %cf.global-to-local, align 1
  store i8 %v9_19979, i8* %v2_19979, align 1
  %v0_1997f = load i32, i32* %eax.global-to-local, align 4
  %v1_1997f = trunc i32 %v0_1997f to i8
  %v2_1997f = load i1, i1* %cf.global-to-local, align 1
  %v3_1997f = zext i1 %v2_1997f to i8
  %v4_1997f = add i8 %v3_1997f, %v1_1997f
  %v19_1997f = icmp ule i8 %v4_1997f, %v1_1997f
  %v21_1997f = icmp eq i1 %v2_1997f, %v19_1997f
  store i1 %v21_1997f, i1* %cf.global-to-local, align 1
  %v22_1997f = zext i8 %v4_1997f to i32
  %v24_1997f = and i32 %v0_1997f, -256
  %v25_1997f = or i32 %v22_1997f, %v24_1997f
  store i32 %v25_1997f, i32* %eax.global-to-local, align 4
  %v1_19981 = inttoptr i32 %v25_1997f to i8*
  %v2_19981 = load i8, i8* %v1_19981, align 1
  %v5_19981 = add i8 %v2_19981, %v4_1997f
  store i8 %v5_19981, i8* %v1_19981, align 1
  %v0_19983 = load i32, i32* %eax.global-to-local, align 4
  %v1_19983 = load i32, i32* @ebp, align 4
  %v2_19983 = add i32 %v1_19983, -12
  %v3_19983 = inttoptr i32 %v2_19983 to i32*
  store i32 %v0_19983, i32* %v3_19983, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_19988 = load i32, i32* @ebp, align 4
  %v1_19988 = add i32 %v0_19988, -40
  %v2_19988 = inttoptr i32 %v1_19988 to i32*
  %v3_19988 = load i32, i32* %v2_19988, align 4
  store i32 %v3_19988, i32* %eax.global-to-local, align 4
  %v1_1998f = add i32 %v0_19988, -36
  %v2_1998f = inttoptr i32 %v1_1998f to i32*
  %v3_1998f = load i32, i32* %v2_1998f, align 4
  store i32 %v3_1998f, i32* %eax.global-to-local, align 4
  %v1_19996 = add i32 %v0_19988, -32
  %v2_19996 = inttoptr i32 %v1_19996 to i32*
  %v3_19996 = load i32, i32* %v2_19996, align 4
  store i32 %v3_19996, i32* %eax.global-to-local, align 4
  %v1_1999d = add i32 %v0_19988, -28
  %v2_1999d = inttoptr i32 %v1_1999d to i32*
  %v3_1999d = load i32, i32* %v2_1999d, align 4
  store i32 %v3_1999d, i32* %eax.global-to-local, align 4
  %v4_199a3 = call i32 @unknown_3409a(i32 %v3_1999d, i32 %v3_19996, i32 %v3_1998f, i32 %v3_19988)
  store i32 0, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_19988, { 1, 0, 2, 3 }
  uselistorder i8 %v4_1997f, { 0, 2, 1 }
  uselistorder i8 %v1_1997f, { 1, 0 }
  uselistorder i8 %v8_19979, { 1, 0 }
  uselistorder i8 %v7_19979, { 1, 0 }
  uselistorder i8 %v5_19979, { 1, 0, 2 }
  uselistorder i1 %v24_19972, { 1, 0, 2 }
  uselistorder i8 %v5_19972, { 1, 0 }
  uselistorder i8 %v9_1996c, { 1, 0 }
  uselistorder i8 %v8_1996c, { 1, 0 }
  uselistorder i8 %v3_1996c, { 1, 2, 0 }
  uselistorder i32 %v1_19969, { 1, 0, 2 }
  uselistorder i8 -119, { 7, 9, 0, 1, 2, 3, 4, 5, 10, 12, 11, 8, 6 }
  uselistorder i32 1166793797, { 6, 8, 0, 1, 2, 3, 4, 10, 9, 7, 5 }
  uselistorder i32 add (i32 ptrtoint (i8** @global_var_1.1176 to i32), i32 ptrtoint (i8** @global_var_1.1176 to i32)), { 19, 0, 1, 20, 2, 21, 22, 3, 4, 5, 6, 14, 15, 16, 17, 18, 7, 8, 9, 23, 10, 11, 12, 13 }
}

define i32 @function_199b8() local_unnamed_addr {
dec_label_pc_199b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_199bd() local_unnamed_addr {
dec_label_pc_199bd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_199bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_199bd = sub i32 %v0_199bd, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_199bd, i32* %ecx.global-to-local, align 4
  %v0_199bf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_199bf
}

define i32 @_Z9SerializeI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_199c0:
  %stack_var_-17 = alloca i32, align 4
  %v2_199e9 = ptrtoint i32* %stack_var_-17 to i32
  %v5_19a0b = call i32 @unknown_3415e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_199e9)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19a1c

bb:                                               ; preds = %dec_label_pc_199c0
  %v1_19a1a = call i32 @function_19a21()
  br label %dec_label_pc_19a1c

dec_label_pc_19a1c:                               ; preds = %bb, %dec_label_pc_199c0
  %v2_19a1a = phi i32 [ %v1_19a1a, %bb ], [ 0, %dec_label_pc_199c0 ]
  ret i32 %v2_19a1a
}

define i32 @function_19a21() local_unnamed_addr {
dec_label_pc_19a21:
  %v0_19a22 = load i32, i32* @eax, align 4
  ret i32 %v0_19a22
}

define i32 @_Z11UnserializeI11CDataStream13CDiskBlockPosEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19a23:
  %v8_19a67 = call i32 @unknown_34271(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19a78

bb:                                               ; preds = %dec_label_pc_19a23
  %v1_19a76 = call i32 @function_19a7d()
  br label %dec_label_pc_19a78

dec_label_pc_19a78:                               ; preds = %bb, %dec_label_pc_19a23
  %v2_19a76 = phi i32 [ %v1_19a76, %bb ], [ 0, %dec_label_pc_19a23 ]
  ret i32 %v2_19a76

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19a7d() local_unnamed_addr {
dec_label_pc_19a7d:
  %v0_19a7e = load i32, i32* @eax, align 4
  ret i32 %v0_19a7e
}

define i32 @_Z9SerializeI11CDataStream13CDiskBlockPosEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19a7f:
  %v8_19ac3 = call i32 @unknown_343c1(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19ad4

bb:                                               ; preds = %dec_label_pc_19a7f
  %v1_19ad2 = call i32 @function_19ad9()
  br label %dec_label_pc_19ad4

dec_label_pc_19ad4:                               ; preds = %bb, %dec_label_pc_19a7f
  %v2_19ad2 = phi i32 [ %v1_19ad2, %bb ], [ 0, %dec_label_pc_19a7f ]
  ret i32 %v2_19ad2

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19ad9() local_unnamed_addr {
dec_label_pc_19ad9:
  %v0_19ada = load i32, i32* @eax, align 4
  ret i32 %v0_19ada
}

define i32 @_ZSt10__fill_n_aIjhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT0_E7__valueEPS3_E6__typeES5_T_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19adb:
  %v2_19b04 = add i32 %arg2, %arg1
  %v3_19b17 = call i32 @unknown_30989(i32 %arg1, i32 %v2_19b04, i32 %arg3)
  store i32 %v2_19b04, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19b30

bb:                                               ; preds = %dec_label_pc_19adb
  %v1_19b2e = call i32 @function_19b35()
  br label %dec_label_pc_19b30

dec_label_pc_19b30:                               ; preds = %bb, %dec_label_pc_19adb
  %v2_19b2e = phi i32 [ %v1_19b2e, %bb ], [ %v2_19b04, %dec_label_pc_19adb ]
  ret i32 %v2_19b2e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19b35() local_unnamed_addr {
dec_label_pc_19b35:
  %v0_19b36 = load i32, i32* @eax, align 4
  ret i32 %v0_19b36
}

define i32 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b37:
  %v10_19b4e = icmp eq i32 %arg1, 0
  %v1_19b52 = zext i1 %v10_19b4e to i32
  store i32 %v1_19b52, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19b61

bb:                                               ; preds = %dec_label_pc_19b37
  %v2_19b5f = call i32 @function_19b66(i32 %arg1)
  br label %dec_label_pc_19b61

dec_label_pc_19b61:                               ; preds = %bb, %dec_label_pc_19b37
  %v3_19b5f = phi i32 [ %v2_19b5f, %bb ], [ %v1_19b52, %dec_label_pc_19b37 ]
  ret i32 %v3_19b5f
}

define i32 @function_19b66(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b66:
  %v0_19b67 = load i32, i32* @eax, align 4
  ret i32 %v0_19b67
}

define i32 @_Z16WriteCompactSizeI11CHashWriterEvRT_y(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19b68:
  %v0_19b80 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v10_19b8b = icmp eq i32 %arg3, 0
  %.pre = sext i8 %arg2 to i32
  br i1 %v10_19b8b, label %dec_label_pc_19b91, label %bb

bb:                                               ; preds = %dec_label_pc_19b68
  %v8_19b8f = call i32 @function_19bc5(i32 %.pre, i32 %arg3, i32 %arg1)
  br label %dec_label_pc_19b91

dec_label_pc_19b91:                               ; preds = %dec_label_pc_19b68, %bb
  %v9_19b972 = icmp sgt i8 %arg2, -1
  br i1 %v9_19b972, label %dec_label_pc_19ba0, label %bb111

bb111:                                            ; preds = %dec_label_pc_19b91
  %v7_19b9e = call i32 @function_19bc5(i32 %v0_19b80, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_19ba0

dec_label_pc_19ba0:                               ; preds = %dec_label_pc_19b91, %bb111
  ret i32 %.pre

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_19bc5, { 1, 0 }
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_19ba0, { 1, 0 }
  uselistorder label %dec_label_pc_19b91, { 1, 0 }
}

define i32 @function_19ba6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19ba6:
  %v0_19bae = load i32, i32* @ebp, align 4
  %v1_19bae = add i32 %v0_19bae, -13
  %v1_19bb5 = add i32 %v0_19bae, -28
  %v2_19bb5 = inttoptr i32 %v1_19bb5 to i32*
  %v3_19bb5 = load i32, i32* %v2_19bb5, align 4
  %v4_19bbb = call i32 @unknown_1e866(i32 %v3_19bb5, i32 %v1_19bae, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v0_19bc0 = call i32 @function_19ce0()
  ret i32 %v0_19bc0
}

define i32 @function_19bc5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19bc5:
  %eax.global-to-local = alloca i32, align 4
  %v0_19bc5 = call i32 @unknown_1c4e6()
  %v1_19bcc = and i32 %v0_19bc5, ptrtoint (i32* @global_var_ffff.1188 to i32)
  store i32 %v1_19bcc, i32* %eax.global-to-local, align 4
  %v1_19bd9 = load i32, i32* @ebp, align 4
  %v2_19bd9 = add i32 %v1_19bd9, -36
  %v3_19bd9 = inttoptr i32 %v2_19bd9 to i32*
  %v4_19bd9 = load i32, i32* %v3_19bd9, align 4
  %v10_19bde = icmp eq i32 %v4_19bd9, 0
  br i1 %v10_19bde, label %dec_label_pc_19be3, label %dec_label_pc_19bed.thread

dec_label_pc_19be3:                               ; preds = %dec_label_pc_19bc5
  %v2_19be3 = add i32 %v1_19bd9, -40
  %v3_19be3 = inttoptr i32 %v2_19be3 to i32*
  %v4_19be3 = load i32, i32* %v3_19be3, align 4
  %v10_19be3 = icmp ult i32 %v1_19bcc, %v4_19be3
  %v1_19be6 = icmp eq i1 %v10_19be3, false
  br i1 %v1_19be6, label %dec_label_pc_19bed, label %dec_label_pc_19bed.thread

dec_label_pc_19bed.thread:                        ; preds = %dec_label_pc_19bc5, %dec_label_pc_19be3
  br label %bb

dec_label_pc_19bed:                               ; preds = %dec_label_pc_19be3
  br i1 icmp eq (i8 ptrtoint (i8** @global_var_1.1176 to i8), i8 0), label %bb, label %dec_label_pc_19bf1

bb:                                               ; preds = %dec_label_pc_19bed.thread, %dec_label_pc_19bed
  %v1_19bef = call i32 @function_19c35()
  store i32 %v1_19bef, i32* %eax.global-to-local, align 4
  %v0_19bf1.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_19bf1

dec_label_pc_19bf1:                               ; preds = %bb, %dec_label_pc_19bed
  %v0_19bf1 = phi i32 [ %v0_19bf1.pre, %bb ], [ %v1_19bd9, %dec_label_pc_19bed ]
  %v1_19bf1 = add i32 %v0_19bf1, -13
  %v2_19bf1 = inttoptr i32 %v1_19bf1 to i8*
  store i8 -3, i8* %v2_19bf1, align 1
  %v0_19bf5 = load i32, i32* @ebp, align 4
  %v1_19bf5 = add i32 %v0_19bf5, -40
  %v2_19bf5 = inttoptr i32 %v1_19bf5 to i32*
  %v3_19bf5 = load i32, i32* %v2_19bf5, align 4
  store i32 %v3_19bf5, i32* %eax.global-to-local, align 4
  %v1_19bf8 = trunc i32 %v3_19bf5 to i16
  %v3_19bf8 = add i32 %v0_19bf5, -24
  %v4_19bf8 = inttoptr i32 %v3_19bf8 to i16*
  store i16 %v1_19bf8, i16* %v4_19bf8, align 2
  %v5_19bf8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_19bf8

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_19bed.thread, { 1, 0 }
}

define i32 @function_19bfc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19bfc:
  %v0_19c04 = load i32, i32* @ebp, align 4
  %v1_19c04 = add i32 %v0_19c04, -13
  %v1_19c0b = add i32 %v0_19c04, -28
  %v2_19c0b = inttoptr i32 %v1_19c0b to i32*
  %v3_19c0b = load i32, i32* %v2_19c0b, align 4
  %v4_19c11 = call i32 @unknown_1e866(i32 %v3_19c0b, i32 %v1_19c04, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v0_19c1e = load i32, i32* @ebp, align 4
  %v1_19c1e = add i32 %v0_19c1e, -24
  %v1_19c25 = add i32 %v0_19c1e, -28
  %v2_19c25 = inttoptr i32 %v1_19c25 to i32*
  %v3_19c25 = load i32, i32* %v2_19c25, align 4
  %v4_19c2b = call i32 @unknown_1e866(i32 %v3_19c25, i32 %v1_19c1e, i32 2)
  %v0_19c30 = call i32 @function_19ce0()
  ret i32 %v0_19c30
}

define i32 @function_19c35() local_unnamed_addr {
dec_label_pc_19c35:
  %v0_19c35 = call i32 @unknown_1c50f()
  %v1_19c44 = load i32, i32* @ebp, align 4
  %v2_19c44 = add i32 %v1_19c44, -36
  %v3_19c44 = inttoptr i32 %v2_19c44 to i32*
  %v4_19c44 = load i32, i32* %v3_19c44, align 4
  %v10_19c49 = icmp eq i32 %v4_19c44, 0
  br i1 %v10_19c49, label %dec_label_pc_19c4e, label %dec_label_pc_19c53

dec_label_pc_19c4e:                               ; preds = %dec_label_pc_19c35
  %v2_19c4e = add i32 %v1_19c44, -40
  %v3_19c4e = inttoptr i32 %v2_19c4e to i32*
  %v4_19c4e = load i32, i32* %v3_19c4e, align 4
  %v10_19c4e = icmp ult i32 %v0_19c35, %v4_19c4e
  %v1_19c51 = icmp eq i1 %v10_19c4e, false
  br i1 %v1_19c51, label %dec_label_pc_19c58, label %dec_label_pc_19c53

dec_label_pc_19c53:                               ; preds = %dec_label_pc_19c35, %dec_label_pc_19c4e
  br label %dec_label_pc_19c58

dec_label_pc_19c58:                               ; preds = %dec_label_pc_19c53, %dec_label_pc_19c4e
  ret i32 %v0_19c35

; uselistorder directives
  uselistorder label %dec_label_pc_19c53, { 1, 0 }
}

define i32 @function_19c5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19c5c:
  %v0_19c5c = load i32, i32* @ebp, align 4
  %v1_19c5c = add i32 %v0_19c5c, -13
  %v2_19c5c = inttoptr i32 %v1_19c5c to i8*
  store i8 ptrtoint (i32* @global_var_fe.1225 to i8), i8* %v2_19c5c, align 1
  %v0_19c60 = load i32, i32* @ebp, align 4
  %v1_19c60 = add i32 %v0_19c60, -40
  %v2_19c60 = inttoptr i32 %v1_19c60 to i32*
  %v3_19c60 = load i32, i32* %v2_19c60, align 4
  %v2_19c63 = add i32 %v0_19c60, -24
  %v3_19c63 = inttoptr i32 %v2_19c63 to i32*
  store i32 %v3_19c60, i32* %v3_19c63, align 4
  %v0_19c6e = load i32, i32* @ebp, align 4
  %v1_19c6e = add i32 %v0_19c6e, -13
  %v1_19c75 = add i32 %v0_19c6e, -28
  %v2_19c75 = inttoptr i32 %v1_19c75 to i32*
  %v3_19c75 = load i32, i32* %v2_19c75, align 4
  %v4_19c7b = call i32 @unknown_1e866(i32 %v3_19c75, i32 %v1_19c6e, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v0_19c88 = load i32, i32* @ebp, align 4
  %v1_19c88 = add i32 %v0_19c88, -24
  %v1_19c8f = add i32 %v0_19c88, -28
  %v2_19c8f = inttoptr i32 %v1_19c8f to i32*
  %v3_19c8f = load i32, i32* %v2_19c8f, align 4
  %v4_19c95 = call i32 @unknown_1e866(i32 %v3_19c8f, i32 %v1_19c88, i32 ptrtoint (i8** @global_var_4.1177 to i32))
  %v0_19c9a = call i32 @function_19ce0()
  ret i32 %v0_19c9a

; uselistorder directives
  uselistorder i32 ()* @function_19ce0, { 2, 1, 0 }
}

define i32 @function_19c9c() local_unnamed_addr {
dec_label_pc_19c9c:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_19cac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19cac:
  %v0_19cb4 = load i32, i32* @ebp, align 4
  %v1_19cb4 = add i32 %v0_19cb4, -13
  %v1_19cbb = add i32 %v0_19cb4, -28
  %v2_19cbb = inttoptr i32 %v1_19cbb to i32*
  %v3_19cbb = load i32, i32* %v2_19cbb, align 4
  %v4_19cc1 = call i32 @unknown_1e866(i32 %v3_19cbb, i32 %v1_19cb4, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v0_19cce = load i32, i32* @ebp, align 4
  %v1_19cce = add i32 %v0_19cce, -24
  %v1_19cd5 = add i32 %v0_19cce, -28
  %v2_19cd5 = inttoptr i32 %v1_19cd5 to i32*
  %v3_19cd5 = load i32, i32* %v2_19cd5, align 4
  %v4_19cdb = call i32 @unknown_1e866(i32 %v3_19cd5, i32 %v1_19cce, i32 ptrtoint (i32* @global_var_8.1178 to i32))
  ret i32 %v4_19cdb

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_1e866, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_19ce0() local_unnamed_addr {
dec_label_pc_19ce0:
  %v0_19ce0 = load i32, i32* @ebp, align 4
  %v1_19ce0 = add i32 %v0_19ce0, -12
  %v2_19ce0 = inttoptr i32 %v1_19ce0 to i32*
  %v3_19ce0 = load i32, i32* %v2_19ce0, align 4
  %v1_19ce3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19ce3 = xor i32 %v1_19ce3, %v3_19ce0
  %v3_19ce3 = icmp eq i32 %v2_19ce3, 0
  store i32 %v2_19ce3, i32* @eax, align 4
  br i1 %v3_19ce3, label %bb, label %dec_label_pc_19cec

bb:                                               ; preds = %dec_label_pc_19ce0
  %v1_19cea = call i32 @function_19cf1()
  br label %dec_label_pc_19cec

dec_label_pc_19cec:                               ; preds = %bb, %dec_label_pc_19ce0
  %v2_19cea = phi i32 [ %v1_19cea, %bb ], [ %v2_19ce3, %dec_label_pc_19ce0 ]
  ret i32 %v2_19cea
}

define i32 @function_19cf1() local_unnamed_addr {
dec_label_pc_19cf1:
  %v0_19cf2 = load i32, i32* @eax, align 4
  ret i32 %v0_19cf2
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_19cf3:
  ret i32 %arg5
}

define i32 @function_19d16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d16:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_19d1a = load i32, i32* @eax, align 4
  store i32 %v0_19d1a, i32* %stack_var_-72, align 4
  %v4_19d31 = ptrtoint i32* %stack_var_-56 to i32
  %v2_19d35 = ptrtoint i32* %stack_var_-64 to i32
  %v2_19d3b = call i32 @unknown_1bfb3(i32 %v2_19d35, i32 %v4_19d31)
  %v2_19d50 = ptrtoint i32* %stack_var_-36 to i32
  %v2_19d62 = ptrtoint i32* %stack_var_-72 to i32
  %v2_19d6d = ptrtoint i32* %stack_var_-28 to i32
  %v11_19d9520 = icmp eq i32 %v2_19d3b, 0
  %v12_19d9521 = icmp slt i32 %v2_19d3b, 0
  %v3_19d9922 = icmp eq i1 %v12_19d9521, false
  %v4_19d9923 = icmp eq i1 %v11_19d9520, false
  %v5_19d9924 = icmp eq i1 %v3_19d9922, %v4_19d9923
  %v5_19d9c28 = icmp eq i1 %v5_19d9924, false
  %v1_19d9e29 = icmp eq i1 %v5_19d9c28, false
  br i1 %v1_19d9e29, label %dec_label_pc_19d45, label %dec_label_pc_19da0

dec_label_pc_19d45:                               ; preds = %dec_label_pc_19d16, %dec_label_pc_19d45
  %storemerge.in30 = phi i32 [ %v5_19d91, %dec_label_pc_19d45 ], [ %v2_19d3b, %dec_label_pc_19d16 ]
  %v1_19d48 = load i32, i32* @esp, align 4
  %v2_19d48 = inttoptr i32 %v1_19d48 to i32*
  store i32 %v2_19d35, i32* %v2_19d48, align 4
  %v0_19d4b = call i32 @unknown_1c191()
  store i32 %v2_19d50, i32* %edx.global-to-local, align 4
  %v1_19d53 = load i32, i32* @esp, align 4
  %v2_19d53 = add i32 %v1_19d53, 4
  %v3_19d53 = inttoptr i32 %v2_19d53 to i32*
  store i32 %v0_19d4b, i32* %v3_19d53, align 4
  %v1_19d57 = load i32, i32* @esp, align 4
  %v2_19d57 = inttoptr i32 %v1_19d57 to i32*
  store i32 %v2_19d50, i32* %v2_19d57, align 4
  %v0_19d5a = call i32 @unknown_1c0a7()
  %v0_19d5f = load i32, i32* @esp, align 4
  %v1_19d5f = sub i32 %v0_19d5f, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_19d65 = inttoptr i32 %v1_19d5f to i32*
  store i32 %v2_19d62, i32* %v2_19d65, align 4
  %v0_19d68 = call i32 @unknown_1c191()
  store i32 %v2_19d6d, i32* %edx.global-to-local, align 4
  %v1_19d70 = load i32, i32* @esp, align 4
  %v2_19d70 = add i32 %v1_19d70, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_19d70 = inttoptr i32 %v2_19d70 to i32*
  store i32 %v0_19d68, i32* %v3_19d70, align 4
  %v1_19d74 = load i32, i32* @esp, align 4
  %v2_19d74 = inttoptr i32 %v1_19d74 to i32*
  store i32 %v2_19d6d, i32* %v2_19d74, align 4
  %v0_19d77 = call i32 @unknown_1c0a7()
  %v0_19d7c = load i32, i32* @esp, align 4
  %v3_19d82 = inttoptr i32 %v0_19d7c to i32*
  store i32 %v2_19d50, i32* %v3_19d82, align 4
  %v1_19d89 = load i32, i32* @esp, align 4
  %v2_19d89 = inttoptr i32 %v1_19d89 to i32*
  store i32 %v2_19d6d, i32* %v2_19d89, align 4
  %v0_19d8c = call i32 @unknown_1bda5()
  %v5_19d91 = sub i32 %storemerge.in30, ptrtoint (i8** @global_var_1.1176 to i32)
  %v14_19d91 = icmp eq i32 %v5_19d91, 0
  %v12_19d95 = icmp slt i32 %v5_19d91, 0
  %v3_19d99 = icmp eq i1 %v12_19d95, false
  %v4_19d99 = icmp eq i1 %v14_19d91, false
  %v5_19d99 = icmp eq i1 %v3_19d99, %v4_19d99
  %v5_19d9c = icmp eq i1 %v5_19d99, false
  %v1_19d9e = icmp eq i1 %v5_19d9c, false
  br i1 %v1_19d9e, label %dec_label_pc_19d45, label %dec_label_pc_19d95.dec_label_pc_19da0_crit_edge

dec_label_pc_19d95.dec_label_pc_19da0_crit_edge:  ; preds = %dec_label_pc_19d45
  %v3_19da3.pre = load i32, i32* %stack_var_-72, align 4
  br label %dec_label_pc_19da0

dec_label_pc_19da0:                               ; preds = %dec_label_pc_19d95.dec_label_pc_19da0_crit_edge, %dec_label_pc_19d16
  %v3_19da3 = phi i32 [ %v3_19da3.pre, %dec_label_pc_19d95.dec_label_pc_19da0_crit_edge ], [ %v0_19d1a, %dec_label_pc_19d16 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_19da9 = inttoptr i32 %tmp to i32*
  store i32 %v3_19da3, i32* %v2_19da9, align 4
  %v0_19dab = load i32, i32* %edx.global-to-local, align 4
  %v1_19dab = load i32, i32* @ecx, align 4
  %v2_19dab = add i32 %v1_19dab, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_19dab = inttoptr i32 %v2_19dab to i32*
  store i32 %v0_19dab, i32* %v3_19dab, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_19dbd

bb:                                               ; preds = %dec_label_pc_19da0
  %v1_19dbb = call i32 @function_19dc2()
  br label %dec_label_pc_19dbd

dec_label_pc_19dbd:                               ; preds = %bb, %dec_label_pc_19da0
  %v2_19dbb = phi i32 [ %v1_19dbb, %bb ], [ %tmp, %dec_label_pc_19da0 ]
  ret i32 %v2_19dbb

; uselistorder directives
  uselistorder i32 %v5_19d91, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 ()* @unknown_1c0a7, { 1, 0 }
  uselistorder i32 ()* @unknown_1c191, { 1, 0 }
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 11, 12, 0, 13, 14, 1, 2, 3, 15, 4, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 6, 7, 8, 9, 29, 30, 31, 32, 33, 34, 35, 10, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder label %dec_label_pc_19d45, { 1, 0 }
}

define i32 @function_19dc2() local_unnamed_addr {
dec_label_pc_19dc2:
  %v0_19dc3 = load i32, i32* @eax, align 4
  ret i32 %v0_19dc3
}

define i32 @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19dc6:
  ret i32 0
}

define i32 @function_19de9(i32 %arg1) local_unnamed_addr {
dec_label_pc_19de9:
  %v0_19de9 = load i32, i32* @ebp, align 4
  %v1_19de9 = add i32 %v0_19de9, -13
  %v2_19de9 = inttoptr i32 %v1_19de9 to i8*
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %v2_19de9, align 1
  %v0_19ded = load i32, i32* @ebp, align 4
  %v1_19ded = add i32 %v0_19ded, -36
  %v2_19ded = inttoptr i32 %v1_19ded to i32*
  %v3_19ded = load i32, i32* %v2_19ded, align 4
  %v1_19df4 = add i32 %v0_19ded, -32
  %v2_19df4 = inttoptr i32 %v1_19df4 to i32*
  %v3_19df4 = load i32, i32* %v2_19df4, align 4
  %v1_19dfb = add i32 %v0_19ded, -28
  %v2_19dfb = inttoptr i32 %v1_19dfb to i32*
  %v3_19dfb = load i32, i32* %v2_19dfb, align 4
  %v3_19e01 = call i32 @unknown_347fb(i32 %v3_19dfb, i32 %v3_19df4, i32 %v3_19ded)
  store i32 %v3_19e01, i32* @eax, align 4
  %v0_19e06 = load i32, i32* @ebp, align 4
  %v1_19e06 = add i32 %v0_19e06, -12
  %v2_19e06 = inttoptr i32 %v1_19e06 to i32*
  %v3_19e06 = load i32, i32* %v2_19e06, align 4
  %v1_19e09 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19e09 = icmp eq i32 %v1_19e09, %v3_19e06
  br i1 %v3_19e09, label %bb, label %dec_label_pc_19e12

bb:                                               ; preds = %dec_label_pc_19de9
  %v1_19e10 = call i32 @function_19e17()
  br label %dec_label_pc_19e12

dec_label_pc_19e12:                               ; preds = %bb, %dec_label_pc_19de9
  %v2_19e10 = phi i32 [ %v1_19e10, %bb ], [ %v3_19e01, %dec_label_pc_19de9 ]
  ret i32 %v2_19e10
}

define i32 @function_19e17() local_unnamed_addr {
dec_label_pc_19e17:
  %v0_19e18 = load i32, i32* @eax, align 4
  ret i32 %v0_19e18
}

define i32 @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19e19:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_19e47 = add i32 %tmp104, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_19e47 = inttoptr i32 %v2_19e47 to i32*
  store i32 %arg3, i32* %v3_19e47, align 4
  store i32 %tmp104, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19e59

bb:                                               ; preds = %dec_label_pc_19e19
  %v4_19e57 = call i32 @function_19e5e(i32 %arg2, i32 %arg3, i32 %tmp104)
  br label %dec_label_pc_19e59

dec_label_pc_19e59:                               ; preds = %bb, %dec_label_pc_19e19
  %v5_19e57 = phi i32 [ %v4_19e57, %bb ], [ %tmp104, %dec_label_pc_19e19 ]
  ret i32 %v5_19e57

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_19e5e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19e5e:
  %v0_19e5f = load i32, i32* @eax, align 4
  ret i32 %v0_19e5f
}

define i32 @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19e62:
  ret i32 %arg2
}

define i32 @function_19e99(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19e99:
  %v0_19e99 = call i32 @unknown_33c7b()
  %v0_19ea1 = load i32, i32* @ebp, align 4
  %v1_19ea1 = add i32 %v0_19ea1, -28
  %v2_19ea1 = inttoptr i32 %v1_19ea1 to i32*
  %v3_19ea1 = load i32, i32* %v2_19ea1, align 4
  store i32 %v3_19ea1, i32* @eax, align 4
  %v1_19ea4 = add i32 %v0_19ea1, -12
  %v2_19ea4 = inttoptr i32 %v1_19ea4 to i32*
  %v3_19ea4 = load i32, i32* %v2_19ea4, align 4
  %v1_19ea7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19ea7 = icmp eq i32 %v1_19ea7, %v3_19ea4
  br i1 %v3_19ea7, label %bb, label %dec_label_pc_19eb0

bb:                                               ; preds = %dec_label_pc_19e99
  %v1_19eae = call i32 @function_19eb5()
  br label %dec_label_pc_19eb0

dec_label_pc_19eb0:                               ; preds = %bb, %dec_label_pc_19e99
  %v2_19eae = phi i32 [ %v1_19eae, %bb ], [ %v3_19ea1, %dec_label_pc_19e99 ]
  ret i32 %v2_19eae
}

define i32 @function_19eb5() local_unnamed_addr {
dec_label_pc_19eb5:
  %v0_19eb6 = load i32, i32* @eax, align 4
  ret i32 %v0_19eb6
}

define i32 @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_19eb9:
  ret i32 %arg5
}

define i32 @function_19eda(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_19eda:
  %v0_19eda = load i32, i32* @eax, align 4
  %v1_19eda = load i32, i32* @ebp, align 4
  %v2_19eda = add i32 %v1_19eda, -40
  %v3_19eda = inttoptr i32 %v2_19eda to i32*
  store i32 %v0_19eda, i32* %v3_19eda, align 4
  %v0_19edd = load i32, i32* @ebp, align 4
  %v1_19edd = add i32 %v0_19edd, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_19edd = inttoptr i32 %v1_19edd to i32*
  %v3_19edd = load i32, i32* %v2_19edd, align 4
  %v2_19ee0 = add i32 %v0_19edd, -52
  %v3_19ee0 = inttoptr i32 %v2_19ee0 to i32*
  store i32 %v3_19edd, i32* %v3_19ee0, align 4
  %v0_19ee3 = load i32, i32* @ebp, align 4
  %v1_19ee3 = add i32 %v0_19ee3, ptrtoint (i32* @global_var_20.1184 to i32)
  %v2_19ee3 = inttoptr i32 %v1_19ee3 to i32*
  %v3_19ee3 = load i32, i32* %v2_19ee3, align 4
  %v2_19ee6 = add i32 %v0_19ee3, -48
  %v3_19ee6 = inttoptr i32 %v2_19ee6 to i32*
  store i32 %v3_19ee3, i32* %v3_19ee6, align 4
  %v0_19ee9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_19eef = load i32, i32* @ebp, align 4
  %v2_19eef = add i32 %v1_19eef, -12
  %v3_19eef = inttoptr i32 %v2_19eef to i32*
  store i32 %v0_19ee9, i32* %v3_19eef, align 4
  %v0_19ef4 = load i32, i32* @ebp, align 4
  %v1_19ef4 = add i32 %v0_19ef4, -13
  %v2_19ef4 = inttoptr i32 %v1_19ef4 to i8*
  store i8 0, i8* %v2_19ef4, align 1
  %v0_19ef8 = load i32, i32* @ebp, align 4
  %v1_19ef8 = add i32 %v0_19ef8, -28
  %v2_19ef8 = inttoptr i32 %v1_19ef8 to i32*
  %v3_19ef8 = load i32, i32* %v2_19ef8, align 4
  %v1_19efb = add i32 %v0_19ef8, -52
  %v2_19efb = inttoptr i32 %v1_19efb to i32*
  %v3_19efb = load i32, i32* %v2_19efb, align 4
  %v1_19efe = add i32 %v0_19ef8, -48
  %v2_19efe = inttoptr i32 %v1_19efe to i32*
  %v3_19efe = load i32, i32* %v2_19efe, align 4
  %v1_19f09 = add i32 %v0_19ef8, -44
  %v2_19f09 = inttoptr i32 %v1_19f09 to i32*
  %v3_19f09 = load i32, i32* %v2_19f09, align 4
  %v1_19f0c = add i32 %v0_19ef8, -40
  %v2_19f0c = inttoptr i32 %v1_19f0c to i32*
  %v3_19f0c = load i32, i32* %v2_19f0c, align 4
  %v1_19f17 = add i32 %v0_19ef8, -36
  %v2_19f17 = inttoptr i32 %v1_19f17 to i32*
  %v3_19f17 = load i32, i32* %v2_19f17, align 4
  %v1_19f1a = add i32 %v0_19ef8, -32
  %v2_19f1a = inttoptr i32 %v1_19f1a to i32*
  %v3_19f1a = load i32, i32* %v2_19f1a, align 4
  %v7_19f28 = call i32 @unknown_34961(i32 %v3_19ef8, i32 %v3_19f17, i32 %v3_19f1a, i32 %v3_19f09, i32 %v3_19f0c, i32 %v3_19efb, i32 %v3_19efe)
  %v0_19f30 = load i32, i32* @ebp, align 4
  %v1_19f30 = add i32 %v0_19f30, -28
  %v2_19f30 = inttoptr i32 %v1_19f30 to i32*
  %v3_19f30 = load i32, i32* %v2_19f30, align 4
  store i32 %v3_19f30, i32* @eax, align 4
  %v1_19f33 = add i32 %v0_19f30, -12
  %v2_19f33 = inttoptr i32 %v1_19f33 to i32*
  %v3_19f33 = load i32, i32* %v2_19f33, align 4
  %v1_19f36 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19f36 = icmp eq i32 %v1_19f36, %v3_19f33
  br i1 %v3_19f36, label %bb, label %dec_label_pc_19f3f

bb:                                               ; preds = %dec_label_pc_19eda
  %v1_19f3d = call i32 @function_19f44()
  br label %dec_label_pc_19f3f

dec_label_pc_19f3f:                               ; preds = %bb, %dec_label_pc_19eda
  %v2_19f3d = phi i32 [ %v1_19f3d, %bb ], [ %v3_19f30, %dec_label_pc_19eda ]
  ret i32 %v2_19f3d

; uselistorder directives
  uselistorder i32 %v0_19ef8, { 1, 0, 3, 4, 2, 5, 6 }
}

define i32 @function_19f44() local_unnamed_addr {
dec_label_pc_19f44:
  %v0_19f45 = load i32, i32* @eax, align 4
  ret i32 %v0_19f45
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_19f48:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v4_19f86 = ptrtoint i32* %stack_var_-56 to i32
  %v2_19f8a = ptrtoint i32* %stack_var_-64 to i32
  %v2_19f90 = call i32 @unknown_1c208(i32 %v2_19f8a, i32 %v4_19f86)
  ret i32 %v2_19f90
}

define i32 @function_19fbc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19fbc:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19fbc = call i32 @unknown_1c2fc()
  %v0_19fc4 = load i32, i32* @ebp, align 4
  %v1_19fc4 = add i32 %v0_19fc4, -32
  %v1_19fcb = add i32 %v0_19fc4, -24
  store i32 %v1_19fcb, i32* %eax.global-to-local, align 4
  %v2_19fd1 = call i32 @unknown_1bffa(i32 %v1_19fcb, i32 %v1_19fc4)
  %v0_19fd6 = load i32, i32* @ebp, align 4
  %v1_19fd6 = add i32 %v0_19fd6, -52
  store i32 %v1_19fd6, i32* %eax.global-to-local, align 4
  %v1_19fdc = call i32 @unknown_1c358(i32 %v1_19fd6)
  %v0_19fe1 = load i32, i32* @ebp, align 4
  %v1_19fe1 = add i32 %v0_19fe1, -68
  store i32 %v1_19fe1, i32* %eax.global-to-local, align 4
  %v1_19fe7 = call i32 @unknown_1c358(i32 %v1_19fe1)
  store i32 %v1_19fe7, i32* %eax.global-to-local, align 4
  %v0_19fec = load i32, i32* @ebp, align 4
  %v1_19fec = add i32 %v0_19fec, -16
  %v2_19fec = inttoptr i32 %v1_19fec to i32*
  %v3_19fec = load i32, i32* %v2_19fec, align 4
  %v4_19fec = sub i32 %v3_19fec, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_19fec, i32* %v2_19fec, align 4
  %v0_19ff0 = load i32, i32* @ebp, align 4
  %v1_19ff0 = add i32 %v0_19ff0, -16
  %v2_19ff0 = inttoptr i32 %v1_19ff0 to i32*
  %v3_19ff0 = load i32, i32* %v2_19ff0, align 4
  %v10_19ff0 = icmp eq i32 %v3_19ff0, 0
  %v11_19ff0 = icmp slt i32 %v3_19ff0, 0
  %v3_19ff4 = icmp eq i1 %v11_19ff0, false
  %v4_19ff4 = icmp eq i1 %v10_19ff0, false
  %v5_19ff4 = icmp eq i1 %v3_19ff4, %v4_19ff4
  %v6_19ff4 = zext i1 %v5_19ff4 to i32
  %v7_19ff4 = load i32, i32* %eax.global-to-local, align 4
  %v8_19ff4 = and i32 %v7_19ff4, -256
  %v9_19ff4 = or i32 %v6_19ff4, %v8_19ff4
  store i32 %v9_19ff4, i32* %eax.global-to-local, align 4
  %v1_19ffb = add i32 %v0_19ff0, -44
  %v2_19ffb = inttoptr i32 %v1_19ffb to i32*
  %v3_19ffb = load i32, i32* %v2_19ffb, align 4
  store i32 %v3_19ffb, i32* @ecx, align 4
  %v1_19ffe = add i32 %v0_19ff0, -68
  %v2_19ffe = inttoptr i32 %v1_19ffe to i32*
  %v3_19ffe = load i32, i32* %v2_19ffe, align 4
  store i32 %v3_19ffe, i32* %eax.global-to-local, align 4
  %v1_1a001 = add i32 %v0_19ff0, -64
  %v2_1a001 = inttoptr i32 %v1_1a001 to i32*
  %v3_1a001 = load i32, i32* %v2_1a001, align 4
  store i32 %v3_1a001, i32* %edx.global-to-local, align 4
  %v2_1a004 = inttoptr i32 %v3_19ffb to i32*
  store i32 %v3_19ffe, i32* %v2_1a004, align 4
  %v0_1a006 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a006 = load i32, i32* @ecx, align 4
  %v2_1a006 = add i32 %v1_1a006, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1a006 = inttoptr i32 %v2_1a006 to i32*
  store i32 %v0_1a006, i32* %v3_1a006, align 4
  %v0_1a009 = load i32, i32* @ebp, align 4
  %v1_1a009 = add i32 %v0_1a009, -44
  %v2_1a009 = inttoptr i32 %v1_1a009 to i32*
  %v3_1a009 = load i32, i32* %v2_1a009, align 4
  store i32 %v3_1a009, i32* @eax, align 4
  %v1_1a00c = add i32 %v0_1a009, -12
  %v2_1a00c = inttoptr i32 %v1_1a00c to i32*
  %v3_1a00c = load i32, i32* %v2_1a00c, align 4
  store i32 %v3_1a00c, i32* %edx.global-to-local, align 4
  %v1_1a00f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a00f = xor i32 %v1_1a00f, %v3_1a00c
  store i1 false, i1* @cf, align 1
  %v3_1a00f = icmp eq i32 %v2_1a00f, 0
  store i32 %v2_1a00f, i32* %edx.global-to-local, align 4
  br i1 %v3_1a00f, label %bb, label %dec_label_pc_1a018

bb:                                               ; preds = %dec_label_pc_19fbc
  %v1_1a016 = call i32 @function_1a01d()
  store i32 %v1_1a016, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a018

dec_label_pc_1a018:                               ; preds = %bb, %dec_label_pc_19fbc
  %v3_1a016 = phi i32 [ %v1_1a016, %bb ], [ %v3_1a009, %dec_label_pc_19fbc ]
  ret i32 %v3_1a016

; uselistorder directives
  uselistorder i32 %v3_19ff0, { 1, 0 }
  uselistorder i32 %v0_19ff0, { 0, 2, 1, 3 }
  uselistorder i32 -68, { 34, 35, 2, 3, 4, 17, 28, 30, 29, 31, 32, 33, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 27, 25, 19, 20, 21, 24, 23, 22, 0 }
  uselistorder i32 (i32)* @unknown_1c358, { 1, 0 }
}

define i32 @function_1a01d() local_unnamed_addr {
dec_label_pc_1a01d:
  %v0_1a01e = load i32, i32* @eax, align 4
  ret i32 %v0_1a01e
}

define i32 @_Z11WriteVarIntI11CDataStreamiEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a021:
  ret i32 %arg2
}

define i32 @function_1a036() local_unnamed_addr {
dec_label_pc_1a036:
  %eax.global-to-local = alloca i32, align 4
  %v2_1a036 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a036 = load i32, i32* %eax.global-to-local, align 4
  %v4_1a036 = trunc i32 %v3_1a036 to i8
  %v5_1a036 = add i8 %v4_1a036, %v2_1a036
  %v21_1a036 = inttoptr i32 %v3_1a036 to i8*
  store i8 %v5_1a036, i8* %v21_1a036, align 1
  %v22_1a036 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_1a036
}

define i32 @function_1a046() local_unnamed_addr {
dec_label_pc_1a046:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a047 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a047 = sub i32 %v0_1a047, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1a047, i32* %ecx.global-to-local, align 4
  %v0_1a049 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a049
}

define i32 @function_1a04c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a04c:
  %v0_1a050 = load i32, i32* @edi, align 4
  %v1_1a050 = load i32, i32* @eax, align 4
  %v2_1a050 = mul i32 %v1_1a050, ptrtoint (i8** @global_var_1.1176 to i32)
  %v3_1a050 = add i32 %v0_1a050, -72
  %v4_1a050 = add i32 %v3_1a050, %v2_1a050
  %v5_1a050 = inttoptr i32 %v4_1a050 to i8*
  %v6_1a050 = load i8, i8* %v5_1a050, align 1
  %v7_1a050 = load i32, i32* @edx, align 4
  %v8_1a050 = lshr i32 %v7_1a050, ptrtoint (i32* @global_var_8.1178 to i32)
  %v9_1a050 = trunc i32 %v8_1a050 to i8
  %v10_1a050 = add i8 %v9_1a050, %v6_1a050
  store i8 %v10_1a050, i8* %v5_1a050, align 1
  %v17_1a054 = load i32, i32* @eax, align 4
  ret i32 %v17_1a054

; uselistorder directives
  uselistorder i32 -72, { 4, 3, 30, 29, 31, 32, 33, 8, 0, 1, 2, 5, 6, 7, 9, 28, 27, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* @edi, { 2, 0, 1, 8, 9, 7, 6, 3, 4, 5 }
}

define i32 @function_1a058() local_unnamed_addr {
dec_label_pc_1a058:
  %v0_1a058 = call i32 @function_1a05f()
  ret i32 %v0_1a058
}

define i32 @function_1a05a() local_unnamed_addr {
dec_label_pc_1a05a:
  ret i32 0
}

define i32 @function_1a05f() local_unnamed_addr {
dec_label_pc_1a05f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a05f = load i32, i32* @eax, align 4
  %v1_1a05f = load i32, i32* @edx, align 4
  %v2_1a05f = or i32 %v1_1a05f, %v0_1a05f
  %v0_1a063 = load i32, i32* @ebp, align 4
  %v1_1a063 = add i32 %v0_1a063, -17
  store i32 %v1_1a063, i32* %eax.global-to-local, align 4
  %v2_1a066 = add i32 %v0_1a063, -24
  %v3_1a066 = inttoptr i32 %v2_1a066 to i32*
  %v4_1a066 = load i32, i32* %v3_1a066, align 4
  %v5_1a066 = add i32 %v4_1a066, %v1_1a063
  store i32 %v5_1a066, i32* %eax.global-to-local, align 4
  %v1_1a069 = trunc i32 %v2_1a05f to i8
  %v3_1a069 = inttoptr i32 %v5_1a066 to i8*
  store i8 %v1_1a069, i8* %v3_1a069, align 1
  %v0_1a06b = load i32, i32* @ebp, align 4
  %v1_1a06b = add i32 %v0_1a06b, -32
  %v2_1a06b = inttoptr i32 %v1_1a06b to i32*
  %v3_1a06b = load i32, i32* %v2_1a06b, align 4
  %v7_1a06f = icmp sgt i32 %v3_1a06b, 127
  br i1 %v7_1a06f, label %dec_label_pc_1a071, label %dec_label_pc_1a084

dec_label_pc_1a071:                               ; preds = %dec_label_pc_1a05f
  %v2_1a074 = sdiv i32 %v3_1a06b, 128
  %v1_1a077 = add nsw i32 %v2_1a074, -1
  store i32 %v1_1a077, i32* %eax.global-to-local, align 4
  store i32 %v1_1a077, i32* %v2_1a06b, align 4
  %v0_1a07d = load i32, i32* @ebp, align 4
  %v1_1a07d = add i32 %v0_1a07d, -24
  %v2_1a07d = inttoptr i32 %v1_1a07d to i32*
  %v3_1a07d = load i32, i32* %v2_1a07d, align 4
  %v4_1a07d = add i32 %v3_1a07d, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1a07d, i32* %v2_1a07d, align 4
  %v0_1a081 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a081

dec_label_pc_1a084:                               ; preds = %dec_label_pc_1a05f, %dec_label_pc_1a084
  %v0_1a096 = phi i32 [ %v0_1a084.pre, %dec_label_pc_1a084 ], [ %v0_1a06b, %dec_label_pc_1a05f ]
  %v1_1a084 = add i32 %v0_1a096, -17
  store i32 %v1_1a084, i32* %eax.global-to-local, align 4
  %v2_1a087 = add i32 %v0_1a096, -24
  %v3_1a087 = inttoptr i32 %v2_1a087 to i32*
  %v4_1a087 = load i32, i32* %v3_1a087, align 4
  %v5_1a087 = add i32 %v4_1a087, %v1_1a084
  store i32 %v5_1a087, i32* %eax.global-to-local, align 4
  %v1_1a096 = add i32 %v0_1a096, -28
  %v2_1a096 = inttoptr i32 %v1_1a096 to i32*
  %v3_1a096 = load i32, i32* %v2_1a096, align 4
  store i32 %v3_1a096, i32* %eax.global-to-local, align 4
  %v4_1a09c = call i32 @unknown_1eb8f(i32 %v3_1a096, i32 %v5_1a087, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v4_1a09c, i32* %eax.global-to-local, align 4
  %v0_1a0a1 = load i32, i32* @ebp, align 4
  %v1_1a0a1 = add i32 %v0_1a0a1, -24
  %v2_1a0a1 = inttoptr i32 %v1_1a0a1 to i32*
  %v3_1a0a1 = load i32, i32* %v2_1a0a1, align 4
  %v10_1a0a1 = icmp eq i32 %v3_1a0a1, 0
  %v1_1a0a5 = icmp eq i1 %v10_1a0a1, false
  %v2_1a0a5 = zext i1 %v1_1a0a5 to i32
  %v4_1a0a5 = and i32 %v4_1a09c, -256
  %v5_1a0a5 = or i32 %v2_1a0a5, %v4_1a0a5
  store i32 %v5_1a0a5, i32* %eax.global-to-local, align 4
  %v3_1a0a8 = load i32, i32* %v2_1a0a1, align 4
  %v4_1a0a8 = sub i32 %v3_1a0a8, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1a0a8, i32* %v2_1a0a1, align 4
  %v0_1a0ac = load i32, i32* %eax.global-to-local, align 4
  %v4_1a0ac = trunc i32 %v0_1a0ac to i8
  %v5_1a0ac = icmp eq i8 %v4_1a0ac, 0
  %v1_1a0ae = icmp eq i1 %v5_1a0ac, false
  %v0_1a084.pre = load i32, i32* @ebp, align 4
  br i1 %v1_1a0ae, label %dec_label_pc_1a084, label %dec_label_pc_1a0b0

dec_label_pc_1a0b0:                               ; preds = %dec_label_pc_1a084
  %v1_1a0b0 = add i32 %v0_1a084.pre, -12
  %v2_1a0b0 = inttoptr i32 %v1_1a0b0 to i32*
  %v3_1a0b0 = load i32, i32* %v2_1a0b0, align 4
  store i32 %v3_1a0b0, i32* %eax.global-to-local, align 4
  %v1_1a0b3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a0b3 = xor i32 %v1_1a0b3, %v3_1a0b0
  %v3_1a0b3 = icmp eq i32 %v2_1a0b3, 0
  store i32 %v2_1a0b3, i32* @eax, align 4
  br i1 %v3_1a0b3, label %bb, label %dec_label_pc_1a0bc

bb:                                               ; preds = %dec_label_pc_1a0b0
  %v1_1a0ba = call i32 @function_1a0c1()
  store i32 %v1_1a0ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a0bc

dec_label_pc_1a0bc:                               ; preds = %bb, %dec_label_pc_1a0b0
  %v2_1a0ba = phi i32 [ %v1_1a0ba, %bb ], [ %v2_1a0b3, %dec_label_pc_1a0b0 ]
  ret i32 %v2_1a0ba

; uselistorder directives
  uselistorder i32 %v0_1a096, { 0, 2, 1 }
  uselistorder i32 127, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a084, { 1, 0 }
}

define i32 @function_1a0c1() local_unnamed_addr {
dec_label_pc_1a0c1:
  %v0_1a0c2 = load i32, i32* @eax, align 4
  ret i32 %v0_1a0c2
}

define i32 @_Z11WriteVarIntI11CDataStreamjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a0c3:
  %stack_var_-21 = alloca i32, align 4
  %v2_1a103 = ptrtoint i32* %stack_var_-21 to i32
  %v1_1a0ec118 = urem i32 %arg2, 128
  %v1_1a109119 = trunc i32 %v1_1a0ec118 to i8
  %v3_1a109120 = bitcast i32* %stack_var_-21 to i8*
  store i8 %v1_1a109119, i8* %v3_1a109120, align 4
  %tmp125 = icmp ult i32 %arg2, 128
  br i1 %tmp125, label %dec_label_pc_1a124, label %dec_label_pc_1a111

dec_label_pc_1a0e7.dec_label_pc_1a124.preheader_crit_edge: ; preds = %dec_label_pc_1a111
  %v23_1a11d = inttoptr i32 %v5_1a11d to i8*
  br label %dec_label_pc_1a124

dec_label_pc_1a111:                               ; preds = %dec_label_pc_1a0c3, %dec_label_pc_1a111
  %v5_1a106124 = phi i32 [ %v5_1a11d, %dec_label_pc_1a111 ], [ 0, %dec_label_pc_1a0c3 ]
  %stack_var_-36.0123 = phi i32 [ %v1_1a117, %dec_label_pc_1a111 ], [ %arg2, %dec_label_pc_1a0c3 ]
  %v2_1a114 = udiv i32 %stack_var_-36.0123, 128
  %v1_1a117 = add nsw i32 %v2_1a114, -1
  %v5_1a11d = add i32 %v5_1a106124, ptrtoint (i8** @global_var_1.1176 to i32)
  %v14_1a11d = icmp eq i32 %v5_1a11d, 0
  %v1_1a0ec = urem i32 %v1_1a117, 128
  %. = select i1 %v14_1a11d, i32 0, i32 128
  %v2_1a101 = or i32 %., %v1_1a0ec
  %v6_1a106 = add i32 %v5_1a11d, %v2_1a103
  %v1_1a109 = trunc i32 %v2_1a101 to i8
  %v3_1a109 = inttoptr i32 %v6_1a106 to i8*
  store i8 %v1_1a109, i8* %v3_1a109, align 4
  %tmp126 = icmp ult i32 %v1_1a117, 128
  br i1 %tmp126, label %dec_label_pc_1a0e7.dec_label_pc_1a124.preheader_crit_edge, label %dec_label_pc_1a111

dec_label_pc_1a124:                               ; preds = %dec_label_pc_1a0c3, %dec_label_pc_1a0e7.dec_label_pc_1a124.preheader_crit_edge, %dec_label_pc_1a124
  %stack_var_-28.0 = phi i8* [ %v23_1a148, %dec_label_pc_1a124 ], [ %v23_1a11d, %dec_label_pc_1a0e7.dec_label_pc_1a124.preheader_crit_edge ], [ null, %dec_label_pc_1a0c3 ]
  %v5_1a127 = ptrtoint i8* %stack_var_-28.0 to i32
  %v6_1a127 = add i32 %v5_1a127, %v2_1a103
  %v5_1a13c = call i32 @unknown_1ec31(i32 %arg1, i32 %v6_1a127, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v11_1a141 = icmp eq i8* %stack_var_-28.0, null
  %v1_1a145 = icmp eq i1 %v11_1a141, false
  %v5_1a148 = sub i32 %v5_1a127, ptrtoint (i8** @global_var_1.1176 to i32)
  %v23_1a148 = inttoptr i32 %v5_1a148 to i8*
  %v5_1a14c = icmp eq i1 %v1_1a145, false
  %v1_1a14e = icmp eq i1 %v5_1a14c, false
  br i1 %v1_1a14e, label %dec_label_pc_1a124, label %dec_label_pc_1a150

dec_label_pc_1a150:                               ; preds = %dec_label_pc_1a124
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a15c

bb:                                               ; preds = %dec_label_pc_1a150
  %v3_1a15a = call i32 @function_1a161(i32 %v5_1a148)
  br label %dec_label_pc_1a15c

dec_label_pc_1a15c:                               ; preds = %bb, %dec_label_pc_1a150
  %v4_1a15a = phi i32 [ %v3_1a15a, %bb ], [ 0, %dec_label_pc_1a150 ]
  ret i32 %v4_1a15a

; uselistorder directives
  uselistorder i32 %v5_1a127, { 1, 0 }
  uselistorder i32 %v5_1a11d, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1a117, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a124, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a111, { 1, 0 }
}

define i32 @function_1a161(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a161:
  %v0_1a162 = load i32, i32* @eax, align 4
  ret i32 %v0_1a162
}

define i32 @_Z12SerReadWriteI11CDataStream17CScriptCompressorEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1a163:
  %v4_1a1ae = call i32 @unknown_34cde(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a1c4

bb:                                               ; preds = %dec_label_pc_1a163
  %v1_1a1c2 = call i32 @function_1a1c9()
  br label %dec_label_pc_1a1c4

dec_label_pc_1a1c4:                               ; preds = %bb, %dec_label_pc_1a163
  %v2_1a1c2 = phi i32 [ %v1_1a1c2, %bb ], [ 0, %dec_label_pc_1a163 ]
  ret i32 %v2_1a1c2
}

define i32 @function_1a1c9() local_unnamed_addr {
dec_label_pc_1a1c9:
  %v0_1a1ca = load i32, i32* @eax, align 4
  ret i32 %v0_1a1ca
}

define i32 @_Z15ReadCompactSizeI11CDataStreamEyRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a1cb:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  %v2_1a1ec = ptrtoint i32* %stack_var_-18 to i32
  %v4_1a1f9 = call i32 @unknown_1ebd1(i32 %arg1, i32 %v2_1a1ec, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v3_1a20c = load i32, i32* %stack_var_-18, align 4
  %v1_1a210 = trunc i32 %v3_1a20c to i8
  %tmp111 = icmp ult i8 %v1_1a210, -3
  br i1 %tmp111, label %dec_label_pc_1a214, label %dec_label_pc_1a22a

dec_label_pc_1a214:                               ; preds = %dec_label_pc_1a1cb
  %v4_1a20c = urem i32 %v3_1a20c, 256
  ret i32 %v4_1a20c

dec_label_pc_1a22a:                               ; preds = %dec_label_pc_1a1cb
  %v11_1a22e = icmp eq i8 %v1_1a210, -3
  %v1_1a230 = icmp eq i1 %v11_1a22e, false
  br i1 %v1_1a230, label %dec_label_pc_1a25f, label %dec_label_pc_1a232

dec_label_pc_1a232:                               ; preds = %dec_label_pc_1a22a
  %v2_1a23a = ptrtoint i32* %stack_var_-44 to i32
  %v4_1a247 = call i32 @unknown_1ebd1(i32 %arg1, i32 %v2_1a23a, i32 2)
  %v3_1a24c = load i32, i32* %stack_var_-44, align 4
  %v1_1a250 = and i32 %v3_1a24c, and (i32 ptrtoint (i32* @global_var_ffff.1188 to i32), i32 65535)
  ret i32 %v1_1a250

dec_label_pc_1a25f:                               ; preds = %dec_label_pc_1a22a
  %v11_1a263 = icmp eq i8 %v1_1a210, -2
  %v1_1a265 = icmp eq i1 %v11_1a263, false
  br i1 %v1_1a265, label %dec_label_pc_1a290, label %dec_label_pc_1a267

dec_label_pc_1a267:                               ; preds = %dec_label_pc_1a25f
  %v2_1a26f = ptrtoint i32* %stack_var_-44 to i32
  %v4_1a27c = call i32 @unknown_1ebd1(i32 %arg1, i32 %v2_1a26f, i32 ptrtoint (i8** @global_var_4.1177 to i32))
  %v3_1a281 = load i32, i32* %stack_var_-44, align 4
  ret i32 %v3_1a281

dec_label_pc_1a290:                               ; preds = %dec_label_pc_1a25f
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 65535, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_ffff.1188 to i32), { 0, 2, 1 }
  uselistorder i32 2, { 19, 20, 0, 1, 2, 54, 53, 55, 3, 4, 5, 6, 7, 50, 24, 8, 9, 25, 26, 27, 28, 29, 30, 10, 31, 32, 33, 34, 11, 35, 36, 37, 38, 39, 14, 40, 15, 41, 16, 42, 43, 17, 44, 45, 46, 52, 47, 51, 23, 48, 12, 13, 18, 49, 21, 22 }
  uselistorder i32 (i32, i32, i32)* @unknown_1ebd1, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
}

define i32 @function_1a2a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a2a8:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_1a2a8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a2a8 = load i32, i32* @eax, align 4
  %v4_1a2a8 = trunc i32 %v3_1a2a8 to i8
  %v5_1a2a8 = add i8 %v4_1a2a8, %v2_1a2a8
  %v21_1a2a8 = inttoptr i32 %v3_1a2a8 to i8*
  store i8 %v5_1a2a8, i8* %v21_1a2a8, align 1
  %v0_1a2aa = load i32, i32* @ebp, align 4
  %v1_1a2aa = add i32 %v0_1a2aa, -40
  %v2_1a2aa = inttoptr i32 %v1_1a2aa to i32*
  %v3_1a2aa = load i32, i32* %v2_1a2aa, align 4
  store i32 %v3_1a2aa, i32* %eax.global-to-local, align 4
  %v1_1a2ad = add i32 %v0_1a2aa, -36
  %v2_1a2ad = inttoptr i32 %v1_1a2ad to i32*
  %v3_1a2ad = load i32, i32* %v2_1a2ad, align 4
  store i32 %v3_1a2ad, i32* %edx.global-to-local, align 4
  %v2_1a2b0 = add i32 %v0_1a2aa, -32
  %v3_1a2b0 = inttoptr i32 %v2_1a2b0 to i32*
  store i32 %v3_1a2aa, i32* %v3_1a2b0, align 4
  %v0_1a2b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a2b3 = load i32, i32* @ebp, align 4
  %v2_1a2b3 = add i32 %v1_1a2b3, -28
  %v3_1a2b3 = inttoptr i32 %v2_1a2b3 to i32*
  store i32 %v0_1a2b3, i32* %v3_1a2b3, align 4
  %v0_1a2b6 = load i32, i32* @ebp, align 4
  %v1_1a2b6 = add i32 %v0_1a2b6, -28
  %v2_1a2b6 = inttoptr i32 %v1_1a2b6 to i32*
  %v3_1a2b6 = load i32, i32* %v2_1a2b6, align 4
  %v10_1a2b6 = icmp eq i32 %v3_1a2b6, 0
  br i1 %v10_1a2b6, label %dec_label_pc_1a2c6, label %dec_label_pc_1a2cf

dec_label_pc_1a2c6:                               ; preds = %dec_label_pc_1a2a8
  %v1_1a2c6 = add i32 %v0_1a2b6, -32
  %v2_1a2c6 = inttoptr i32 %v1_1a2c6 to i32*
  %v3_1a2c6 = load i32, i32* %v2_1a2c6, align 4
  %tmp2 = icmp ult i32 %v3_1a2c6, 33554433
  br i1 %tmp2, label %bb, label %dec_label_pc_1a2cf

bb:                                               ; preds = %dec_label_pc_1a2c6
  %v3_1a2cd = call i32 @function_1a340()
  store i32 %v3_1a2cd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a2cf

dec_label_pc_1a2cf:                               ; preds = %dec_label_pc_1a2a8, %bb, %dec_label_pc_1a2c6
  %v2_1a2cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1a2cf

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a2cf, { 1, 2, 0 }
}

define i32 @function_1a2dc() local_unnamed_addr {
dec_label_pc_1a2dc:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a2dc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a2dc
}

define i32 @function_1a2ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a2ec:
  %v0_1a2f7 = load i32, i32* @ebp, align 4
  %v1_1a2f7 = add i32 %v0_1a2f7, -20
  ret i32 %v1_1a2f7
}

declare i32 @_ZNSsC1EPKcRKSaIcE.938(i32, i32) local_unnamed_addr

define i32 @function_1a340() local_unnamed_addr {
dec_label_pc_1a340:
  %v0_1a340 = load i32, i32* @ebp, align 4
  %v1_1a340 = add i32 %v0_1a340, -32
  %v2_1a340 = inttoptr i32 %v1_1a340 to i32*
  %v3_1a340 = load i32, i32* %v2_1a340, align 4
  store i32 %v3_1a340, i32* @eax, align 4
  %v1_1a346 = add i32 %v0_1a340, -12
  %v2_1a346 = inttoptr i32 %v1_1a346 to i32*
  %v3_1a346 = load i32, i32* %v2_1a346, align 4
  %v1_1a349 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a349 = xor i32 %v1_1a349, %v3_1a346
  %v3_1a349 = icmp eq i32 %v2_1a349, 0
  store i32 %v2_1a349, i32* @ecx, align 4
  br i1 %v3_1a349, label %bb, label %dec_label_pc_1a352

bb:                                               ; preds = %dec_label_pc_1a340
  %v1_1a350 = call i32 @function_1a378()
  store i32 %v1_1a350, i32* @eax, align 4
  br label %dec_label_pc_1a352

dec_label_pc_1a352:                               ; preds = %bb, %dec_label_pc_1a340
  %v0_1a352 = call i32 @function_1a373()
  ret i32 %v0_1a352
}

define i32 @function_1a368(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a368:
  %v0_1a368 = load i32, i32* @ecx, align 4
  %v1_1a368 = add i32 %v0_1a368, 604277232
  %v2_1a368 = inttoptr i32 %v1_1a368 to i32*
  %v3_1a368 = load i32, i32* %v2_1a368, align 4
  %v4_1a368 = add i32 %v3_1a368, -1
  store i32 %v4_1a368, i32* %v2_1a368, align 4
  %v21_1a368 = load i32, i32* @eax, align 4
  ret i32 %v21_1a368
}

define i32 @function_1a373() local_unnamed_addr {
dec_label_pc_1a373:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a378() local_unnamed_addr {
dec_label_pc_1a378:
  %v0_1a37e = load i32, i32* @eax, align 4
  ret i32 %v0_1a37e
}

define i32 @_Z14Serialize_implI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a37f:
  ret i32 %arg2
}

define i32 @function_1a3b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a3b8:
  %v2_1a3b8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a3b8 = load i32, i32* @eax, align 4
  %v4_1a3b8 = trunc i32 %v3_1a3b8 to i8
  %v5_1a3b8 = add i8 %v4_1a3b8, %v2_1a3b8
  %v21_1a3b8 = inttoptr i32 %v3_1a3b8 to i8*
  store i8 %v5_1a3b8, i8* %v21_1a3b8, align 1
  store i32 0, i32* @edx, align 4
  %v0_1a3bf = load i32, i32* @eax, align 4
  %v0_1a3c7 = load i32, i32* @ebp, align 4
  %v1_1a3c7 = add i32 %v0_1a3c7, -28
  %v2_1a3c7 = inttoptr i32 %v1_1a3c7 to i32*
  %v3_1a3c7 = load i32, i32* %v2_1a3c7, align 4
  %v3_1a3cd = call i32 @unknown_32acb(i32 %v3_1a3c7, i32 %v0_1a3bf, i32 0)
  %v0_1a3d2 = load i32, i32* @ebp, align 4
  %v1_1a3d2 = add i32 %v0_1a3d2, -32
  %v2_1a3d2 = inttoptr i32 %v1_1a3d2 to i32*
  %v3_1a3d2 = load i32, i32* %v2_1a3d2, align 4
  %v1_1a3d8 = call i32 @unknown_236e9(i32 %v3_1a3d2)
  %v1_1a3dd = xor i32 %v1_1a3d8, ptrtoint (i8** @global_var_1.1176 to i32)
  %v4_1a3dd = trunc i32 %v1_1a3dd to i8
  %v5_1a3e0 = icmp eq i8 %v4_1a3dd, 0
  br i1 %v5_1a3e0, label %bb, label %dec_label_pc_1a3e4

bb:                                               ; preds = %dec_label_pc_1a3b8
  %v1_1a3e2 = call i32 @function_1a417()
  br label %dec_label_pc_1a3e4

dec_label_pc_1a3e4:                               ; preds = %bb, %dec_label_pc_1a3b8
  %v0_1a3e4 = load i32, i32* @ebp, align 4
  %v1_1a3e4 = add i32 %v0_1a3e4, -32
  %v2_1a3e4 = inttoptr i32 %v1_1a3e4 to i32*
  %v3_1a3e4 = load i32, i32* %v2_1a3e4, align 4
  %v1_1a3ea = call i32 @unknown_21c29(i32 %v3_1a3e4)
  store i32 %v1_1a3ea, i32* @ebx, align 4
  %v0_1a3f9 = load i32, i32* @ebp, align 4
  %v1_1a3f9 = add i32 %v0_1a3f9, -32
  %v2_1a3f9 = inttoptr i32 %v1_1a3f9 to i32*
  %v3_1a3f9 = load i32, i32* %v2_1a3f9, align 4
  %v2_1a3ff = call i32 @unknown_21c67(i32 %v3_1a3f9, i32 0)
  %v0_1a40c = load i32, i32* @ebp, align 4
  %v1_1a40c = add i32 %v0_1a40c, -28
  %v2_1a40c = inttoptr i32 %v1_1a40c to i32*
  %v3_1a40c = load i32, i32* %v2_1a40c, align 4
  ret i32 %v3_1a40c
}

define i32 @function_1a414(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a414:
  %v2_1a415 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a415 = load i32, i32* @eax, align 4
  %v4_1a415 = trunc i32 %v3_1a415 to i8
  %v5_1a415 = add i8 %v4_1a415, %v2_1a415
  %v21_1a415 = inttoptr i32 %v3_1a415 to i8*
  store i8 %v5_1a415, i8* %v21_1a415, align 1
  %v22_1a415 = load i32, i32* @eax, align 4
  ret i32 %v22_1a415
}

define i32 @function_1a417() local_unnamed_addr {
dec_label_pc_1a417:
  %v0_1a417 = load i32, i32* @ebp, align 4
  %v1_1a417 = add i32 %v0_1a417, -12
  %v2_1a417 = inttoptr i32 %v1_1a417 to i32*
  %v3_1a417 = load i32, i32* %v2_1a417, align 4
  %v1_1a41a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a41a = xor i32 %v1_1a41a, %v3_1a417
  %v3_1a41a = icmp eq i32 %v2_1a41a, 0
  store i32 %v2_1a41a, i32* @eax, align 4
  br i1 %v3_1a41a, label %bb, label %dec_label_pc_1a423

bb:                                               ; preds = %dec_label_pc_1a417
  %v1_1a421 = call i32 @function_1a428()
  br label %dec_label_pc_1a423

dec_label_pc_1a423:                               ; preds = %bb, %dec_label_pc_1a417
  %v2_1a421 = phi i32 [ %v1_1a421, %bb ], [ %v2_1a41a, %dec_label_pc_1a417 ]
  ret i32 %v2_1a421
}

define i32 @function_1a428() local_unnamed_addr {
dec_label_pc_1a428:
  %v0_1a42d = load i32, i32* @eax, align 4
  ret i32 %v0_1a42d
}

define i32 @_Z9SerializeI11CDataStream7CVarIntIyEEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a42e:
  ret i32 %arg4
}

define i32 @function_1a44c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a44c:
  %v0_1a44c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a452 = load i32, i32* @ebp, align 4
  %v2_1a452 = add i32 %v1_1a452, -12
  %v3_1a452 = inttoptr i32 %v2_1a452 to i32*
  store i32 %v0_1a44c, i32* %v3_1a452, align 4
  %v0_1a457 = load i32, i32* @ebp, align 4
  %v1_1a465 = add i32 %v0_1a457, -28
  %v2_1a465 = inttoptr i32 %v1_1a465 to i32*
  %v3_1a465 = load i32, i32* %v2_1a465, align 4
  ret i32 %v3_1a465
}

define i32 @function_1a46c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a46c:
  %v0_1a46c = load i32, i32* @ebp, align 4
  %v1_1a46c = add i32 %v0_1a46c, -32
  %v2_1a46c = inttoptr i32 %v1_1a46c to i32*
  %v3_1a46c = load i32, i32* %v2_1a46c, align 4
  %v1_1a472 = call i32 @unknown_35006(i32 %v3_1a46c)
  %v0_1a477 = load i32, i32* @ebp, align 4
  %v1_1a477 = add i32 %v0_1a477, -12
  %v2_1a477 = inttoptr i32 %v1_1a477 to i32*
  %v3_1a477 = load i32, i32* %v2_1a477, align 4
  %v1_1a47a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a47a = xor i32 %v1_1a47a, %v3_1a477
  %v3_1a47a = icmp eq i32 %v2_1a47a, 0
  store i32 %v2_1a47a, i32* @eax, align 4
  br i1 %v3_1a47a, label %bb, label %dec_label_pc_1a483

bb:                                               ; preds = %dec_label_pc_1a46c
  %v1_1a481 = call i32 @function_1a488()
  br label %dec_label_pc_1a483

dec_label_pc_1a483:                               ; preds = %bb, %dec_label_pc_1a46c
  %v2_1a481 = phi i32 [ %v1_1a481, %bb ], [ %v2_1a47a, %dec_label_pc_1a46c ]
  ret i32 %v2_1a481
}

define i32 @function_1a488() local_unnamed_addr {
dec_label_pc_1a488:
  %v0_1a489 = load i32, i32* @eax, align 4
  ret i32 %v0_1a489
}

define i32 @_ZN7CVarIntIyE11UnserializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a48a:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_1a4b7 = load i32, i32* %arg1, align 4
  store i32 %v2_1a4b7, i32* %ebx.global-to-local, align 4
  %v1_1a4bf = call i32 @unknown_350bb(i32 %arg2)
  %v2_1a4c4 = inttoptr i32 %v2_1a4b7 to i32*
  store i32 %v1_1a4bf, i32* %v2_1a4c4, align 4
  %v0_1a4c6 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a4c6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1a4c6 = add i32 %v1_1a4c6, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1a4c6 = inttoptr i32 %v2_1a4c6 to i32*
  store i32 %v0_1a4c6, i32* %v3_1a4c6, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a4d5

bb:                                               ; preds = %dec_label_pc_1a48a
  %v1_1a4d3 = call i32 @function_1a4da()
  br label %dec_label_pc_1a4d5

dec_label_pc_1a4d5:                               ; preds = %bb, %dec_label_pc_1a48a
  %v2_1a4d3 = phi i32 [ %v1_1a4d3, %bb ], [ 0, %dec_label_pc_1a48a ]
  ret i32 %v2_1a4d3
}

define i32 @function_1a4da() local_unnamed_addr {
dec_label_pc_1a4da:
  %v0_1a4df = load i32, i32* @eax, align 4
  ret i32 %v0_1a4df
}

define i32 @_ZN9__gnu_cxx13new_allocatorImEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a4e0:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a503

bb:                                               ; preds = %dec_label_pc_1a4e0
  %v2_1a501 = call i32 @function_1a508(i32 %arg1)
  br label %dec_label_pc_1a503

dec_label_pc_1a503:                               ; preds = %bb, %dec_label_pc_1a4e0
  %v3_1a501 = phi i32 [ %v2_1a501, %bb ], [ 0, %dec_label_pc_1a4e0 ]
  ret i32 %v3_1a501
}

define i32 @function_1a508(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a508:
  %v0_1a509 = load i32, i32* @eax, align 4
  ret i32 %v0_1a509
}

define i32 @_ZN9__gnu_cxx13new_allocatorImED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a50a:
  %v0_1a516 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1a516
}

define i32 @function_1a520(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a520:
  %zf.global-to-local = alloca i1, align 1
  %v0_1a520 = load i32, i32* @ebx, align 4
  %v1_1a520 = add i32 %v0_1a520, 862319685
  %v2_1a520 = inttoptr i32 %v1_1a520 to i8*
  %v3_1a520 = load i8, i8* %v2_1a520, align 1
  %v4_1a520 = udiv i8 %v3_1a520, 32
  %v5_1a520 = mul i8 %v3_1a520, 8
  %v6_1a520 = or i8 %v4_1a520, %v5_1a520
  store i8 %v6_1a520, i8* %v2_1a520, align 1
  %v10_1a520 = and i8 %v3_1a520, 16
  %v11_1a520 = icmp ne i8 %v10_1a520, 0
  %v0_1a527 = load i32, i32* @eax, align 4
  %v1_1a527 = trunc i32 %v0_1a527 to i8
  %v3_1a527 = zext i1 %v11_1a520 to i8
  %v4_1a527 = add i8 %v1_1a527, %v3_1a527
  %v13_1a527 = icmp eq i8 %v4_1a527, 0
  store i1 %v13_1a527, i1* %zf.global-to-local, align 1
  %v22_1a527 = zext i8 %v4_1a527 to i32
  %v24_1a527 = and i32 %v0_1a527, -256
  %v25_1a527 = or i32 %v22_1a527, %v24_1a527
  store i32 %v25_1a527, i32* @eax, align 4
  %v1_1a529 = inttoptr i32 %v25_1a527 to i8*
  %v2_1a529 = load i8, i8* %v1_1a529, align 1
  %v5_1a529 = add i8 %v2_1a529, %v4_1a527
  %v15_1a529 = icmp eq i8 %v5_1a529, 0
  store i1 %v15_1a529, i1* %zf.global-to-local, align 1
  store i8 %v5_1a529, i8* %v1_1a529, align 1
  %v0_1a52b = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1a52b, label %bb, label %dec_label_pc_1a520.dec_label_pc_1a52d_crit_edge

dec_label_pc_1a520.dec_label_pc_1a52d_crit_edge:  ; preds = %dec_label_pc_1a520
  %v2_1a52b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a52d

bb:                                               ; preds = %dec_label_pc_1a520
  %v1_1a52b = call i32 @function_1a532()
  br label %dec_label_pc_1a52d

dec_label_pc_1a52d:                               ; preds = %dec_label_pc_1a520.dec_label_pc_1a52d_crit_edge, %bb
  %v2_1a52b = phi i32 [ %v2_1a52b.pre, %dec_label_pc_1a520.dec_label_pc_1a52d_crit_edge ], [ %v1_1a52b, %bb ]
  ret i32 %v2_1a52b

; uselistorder directives
  uselistorder i8 %v3_1a520, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a52d, { 1, 0 }
}

define i32 @function_1a532() local_unnamed_addr {
dec_label_pc_1a532:
  %v0_1a533 = load i32, i32* @eax, align 4
  ret i32 %v0_1a533
}

define i32 @_ZNSaImEC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a534:
  %v2_1a55e = call i32 @unknown_35212(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a56f

bb:                                               ; preds = %dec_label_pc_1a534
  %v1_1a56d = call i32 @function_1a574()
  br label %dec_label_pc_1a56f

dec_label_pc_1a56f:                               ; preds = %bb, %dec_label_pc_1a534
  %v2_1a56d = phi i32 [ %v1_1a56d, %bb ], [ 0, %dec_label_pc_1a534 ]
  ret i32 %v2_1a56d
}

define i32 @function_1a574() local_unnamed_addr {
dec_label_pc_1a574:
  %v0_1a575 = load i32, i32* @eax, align 4
  ret i32 %v0_1a575
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a576:
  ret i32 %arg1
}

define i32 @function_1a594(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a594:
  %v2_1a595 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_1a595 = zext i8 %v2_1a595 to i32
  %v4_1a595 = load i32, i32* @eax, align 4
  %v5_1a595 = and i32 %v4_1a595, -256
  %v6_1a595 = or i32 %v5_1a595, %v3_1a595
  store i32 %v6_1a595, i32* @eax, align 4
  %v1_1a596 = inttoptr i32 %v6_1a595 to i32*
  %v2_1a596 = load i32, i32* %v1_1a596, align 4
  %v4_1a596 = add i32 %v2_1a596, %v6_1a595
  store i32 %v4_1a596, i32* %v1_1a596, align 4
  %v0_1a598 = load i32, i32* @ebp, align 4
  %v1_1a598 = add i32 %v0_1a598, -12
  %v2_1a598 = inttoptr i32 %v1_1a598 to i32*
  %v3_1a598 = load i32, i32* %v2_1a598, align 4
  %v1_1a59b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a59b = icmp eq i32 %v1_1a59b, %v3_1a598
  br i1 %v3_1a59b, label %bb, label %dec_label_pc_1a594.dec_label_pc_1a5a4_crit_edge

dec_label_pc_1a594.dec_label_pc_1a5a4_crit_edge:  ; preds = %dec_label_pc_1a594
  %v2_1a5a2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a5a4

bb:                                               ; preds = %dec_label_pc_1a594
  %v1_1a5a2 = call i32 @function_1a5a9()
  br label %dec_label_pc_1a5a4

dec_label_pc_1a5a4:                               ; preds = %dec_label_pc_1a594.dec_label_pc_1a5a4_crit_edge, %bb
  %v2_1a5a2 = phi i32 [ %v2_1a5a2.pre, %dec_label_pc_1a594.dec_label_pc_1a5a4_crit_edge ], [ %v1_1a5a2, %bb ]
  ret i32 %v2_1a5a2

; uselistorder directives
  uselistorder label %dec_label_pc_1a5a4, { 1, 0 }
}

define i32 @function_1a5a9() local_unnamed_addr {
dec_label_pc_1a5a9:
  %v0_1a5aa = load i32, i32* @eax, align 4
  ret i32 %v0_1a5aa
}

define i32 @_ZSt8__fill_aIP6CTxOutS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a5ab:
  ret i32 0
}

define i32 @function_1a5d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a5d8:
  %v0_1a5d8 = load i32, i32* @ebp, align 4
  %v1_1a5d8 = add i32 %v0_1a5d8, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1a5d8, i32* @ebp, align 4
  %v0_1a5dd = call i32 @unknown_34bf7()
  %v0_1a5e2 = load i32, i32* @ebp, align 4
  %v1_1a5e2 = add i32 %v0_1a5e2, -28
  %v2_1a5e2 = inttoptr i32 %v1_1a5e2 to i32*
  %v3_1a5e2 = load i32, i32* %v2_1a5e2, align 4
  %v4_1a5e2 = add i32 %v3_1a5e2, 20
  store i32 %v4_1a5e2, i32* %v2_1a5e2, align 4
  %v0_1a5e6 = load i32, i32* @ebp, align 4
  %v1_1a5f3 = add i32 %v0_1a5e6, -12
  %v2_1a5f3 = inttoptr i32 %v1_1a5f3 to i32*
  %v3_1a5f3 = load i32, i32* %v2_1a5f3, align 4
  %v1_1a5f6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a5f6 = xor i32 %v1_1a5f6, %v3_1a5f3
  %v3_1a5f6 = icmp eq i32 %v2_1a5f6, 0
  store i32 %v2_1a5f6, i32* @eax, align 4
  br i1 %v3_1a5f6, label %bb, label %dec_label_pc_1a5ff

bb:                                               ; preds = %dec_label_pc_1a5d8
  %v1_1a5fd = call i32 @function_1a604()
  br label %dec_label_pc_1a5ff

dec_label_pc_1a5ff:                               ; preds = %bb, %dec_label_pc_1a5d8
  %v3_1a5fd = phi i32 [ %v1_1a5fd, %bb ], [ %v2_1a5f6, %dec_label_pc_1a5d8 ]
  ret i32 %v3_1a5fd
}

define i32 @function_1a604() local_unnamed_addr {
dec_label_pc_1a604:
  %v0_1a605 = load i32, i32* @eax, align 4
  ret i32 %v0_1a605
}

define i32 @_ZN7CScriptaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a606:
  ret i32 %arg2
}

define i32 @function_1a617(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a617:
  %v0_1a619 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a61e = load i32, i32* @ebp, align 4
  %v2_1a61e = add i32 %v1_1a61e, -12
  %v3_1a61e = inttoptr i32 %v2_1a61e to i32*
  store i32 %v0_1a619, i32* %v3_1a61e, align 4
  %v0_1a623 = load i32, i32* @ebp, align 4
  %v1_1a623 = add i32 %v0_1a623, -32
  %v2_1a623 = inttoptr i32 %v1_1a623 to i32*
  %v3_1a623 = load i32, i32* %v2_1a623, align 4
  %v1_1a626 = add i32 %v0_1a623, -28
  %v2_1a626 = inttoptr i32 %v1_1a626 to i32*
  %v3_1a626 = load i32, i32* %v2_1a626, align 4
  %v2_1a630 = call i32 @unknown_22ac6(i32 %v3_1a626, i32 %v3_1a623)
  %v0_1a635 = load i32, i32* @ebp, align 4
  %v1_1a635 = add i32 %v0_1a635, -28
  %v2_1a635 = inttoptr i32 %v1_1a635 to i32*
  %v3_1a635 = load i32, i32* %v2_1a635, align 4
  store i32 %v3_1a635, i32* @eax, align 4
  %v1_1a638 = add i32 %v0_1a635, -12
  %v2_1a638 = inttoptr i32 %v1_1a638 to i32*
  %v3_1a638 = load i32, i32* %v2_1a638, align 4
  %v1_1a63b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a63b = icmp eq i32 %v1_1a63b, %v3_1a638
  br i1 %v3_1a63b, label %bb, label %dec_label_pc_1a644

bb:                                               ; preds = %dec_label_pc_1a617
  %v1_1a642 = call i32 @function_1a649()
  br label %dec_label_pc_1a644

dec_label_pc_1a644:                               ; preds = %bb, %dec_label_pc_1a617
  %v3_1a642 = phi i32 [ %v1_1a642, %bb ], [ %v3_1a635, %dec_label_pc_1a617 ]
  ret i32 %v3_1a642
}

define i32 @function_1a649() local_unnamed_addr {
dec_label_pc_1a649:
  %v0_1a64a = load i32, i32* @eax, align 4
  ret i32 %v0_1a64a
}

define i32 @_ZN6CTxOutaSERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a64c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1a66c = add i32 %arg2, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1a66c = inttoptr i32 %v1_1a66c to i32*
  %v3_1a66c = load i32, i32* %v2_1a66c, align 4
  %v1_1a66f = inttoptr i32 %arg2 to i32*
  %v2_1a66f = load i32, i32* %v1_1a66f, align 4
  store i32 %v2_1a66f, i32* %arg1, align 4
  %v2_1a676 = add i32 %tmp101, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1a676 = inttoptr i32 %v2_1a676 to i32*
  store i32 %v3_1a66c, i32* %v3_1a676, align 4
  ret i32 %arg2
}

define i32 @function_1a67d() local_unnamed_addr {
dec_label_pc_1a67d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a67d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a67d
}

define i32 @function_1a6a4() local_unnamed_addr {
dec_label_pc_1a6a4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a6a4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a6a4 = sub i32 %v0_1a6a4, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1a6a4, i32* %ecx.global-to-local, align 4
  %v0_1a6a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a6a6
}

define i32 @_ZSt12__niter_baseIP6CTxOutENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a6a7:
  ret i32 %arg1
}

define i32 @function_1a6b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a6b2:
  %v0_1a6b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a6b9 = load i32, i32* @ebp, align 4
  %v2_1a6b9 = add i32 %v1_1a6b9, -12
  %v3_1a6b9 = inttoptr i32 %v2_1a6b9 to i32*
  store i32 %v0_1a6b4, i32* %v3_1a6b9, align 4
  %v0_1a6be = load i32, i32* @ebp, align 4
  %v1_1a6be = add i32 %v0_1a6be, -28
  %v2_1a6be = inttoptr i32 %v1_1a6be to i32*
  %v3_1a6be = load i32, i32* %v2_1a6be, align 4
  %v1_1a6c4 = call i32 @unknown_353ec(i32 %v3_1a6be)
  store i32 %v1_1a6c4, i32* @eax, align 4
  %v0_1a6c9 = load i32, i32* @ebp, align 4
  %v1_1a6c9 = add i32 %v0_1a6c9, -12
  %v2_1a6c9 = inttoptr i32 %v1_1a6c9 to i32*
  %v3_1a6c9 = load i32, i32* %v2_1a6c9, align 4
  %v1_1a6cc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a6cc = icmp eq i32 %v1_1a6cc, %v3_1a6c9
  br i1 %v3_1a6cc, label %bb, label %dec_label_pc_1a6d5

bb:                                               ; preds = %dec_label_pc_1a6b2
  %v1_1a6d3 = call i32 @function_1a6da()
  br label %dec_label_pc_1a6d5

dec_label_pc_1a6d5:                               ; preds = %bb, %dec_label_pc_1a6b2
  %v2_1a6d3 = phi i32 [ %v1_1a6d3, %bb ], [ %v1_1a6c4, %dec_label_pc_1a6b2 ]
  ret i32 %v2_1a6d3
}

define i32 @function_1a6da() local_unnamed_addr {
dec_label_pc_1a6da:
  %v0_1a6db = load i32, i32* @eax, align 4
  ret i32 %v0_1a6db
}

define i32 @_ZSt10__fill_n_aIP6CTxOutjS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT1_E7__valueET_E6__typeES7_T0_RKS5_() local_unnamed_addr {
dec_label_pc_1a6dc:
  %eax.global-to-local = alloca i32, align 4
  %v2_1a6dd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1a6dd
}

define i32 @function_1a6df(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a6df:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a6e2 = load i32, i32* @ebp, align 4
  %v1_1a6e2 = add i32 %v0_1a6e2, ptrtoint (i32* @global_var_8.1178 to i32)
  %v2_1a6e2 = inttoptr i32 %v1_1a6e2 to i32*
  %v3_1a6e2 = load i32, i32* %v2_1a6e2, align 4
  store i32 %v3_1a6e2, i32* %eax.global-to-local, align 4
  %v2_1a6e5 = add i32 %v0_1a6e2, -28
  %v3_1a6e5 = inttoptr i32 %v2_1a6e5 to i32*
  store i32 %v3_1a6e2, i32* %v3_1a6e5, align 4
  %v0_1a6e8 = load i32, i32* @ebp, align 4
  %v1_1a6e8 = add i32 %v0_1a6e8, 12
  %v2_1a6e8 = inttoptr i32 %v1_1a6e8 to i32*
  %v3_1a6e8 = load i32, i32* %v2_1a6e8, align 4
  store i32 %v3_1a6e8, i32* %eax.global-to-local, align 4
  %v2_1a6eb = add i32 %v0_1a6e8, -32
  %v3_1a6eb = inttoptr i32 %v2_1a6eb to i32*
  store i32 %v3_1a6e8, i32* %v3_1a6eb, align 4
  %v0_1a6ee = load i32, i32* @ebp, align 4
  %v1_1a6ee = add i32 %v0_1a6ee, 16
  %v2_1a6ee = inttoptr i32 %v1_1a6ee to i32*
  %v3_1a6ee = load i32, i32* %v2_1a6ee, align 4
  store i32 %v3_1a6ee, i32* %eax.global-to-local, align 4
  %v2_1a6f1 = add i32 %v0_1a6ee, -36
  %v3_1a6f1 = inttoptr i32 %v2_1a6f1 to i32*
  store i32 %v3_1a6ee, i32* %v3_1a6f1, align 4
  %v0_1a6f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a6fa = load i32, i32* @ebp, align 4
  %v2_1a6fa = add i32 %v1_1a6fa, -12
  %v3_1a6fa = inttoptr i32 %v2_1a6fa to i32*
  store i32 %v0_1a6f4, i32* %v3_1a6fa, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1a6ff = load i32, i32* @ebp, align 4
  %v1_1a6ff = add i32 %v0_1a6ff, -32
  %v2_1a6ff = inttoptr i32 %v1_1a6ff to i32*
  %v3_1a6ff = load i32, i32* %v2_1a6ff, align 4
  store i32 %v3_1a6ff, i32* %eax.global-to-local, align 4
  %v2_1a702 = add i32 %v0_1a6ff, -16
  %v3_1a702 = inttoptr i32 %v2_1a702 to i32*
  store i32 %v3_1a6ff, i32* %v3_1a702, align 4
  %v0_1a7214 = load i32, i32* @ebp, align 4
  %v1_1a7215 = add i32 %v0_1a7214, -16
  %v2_1a7216 = inttoptr i32 %v1_1a7215 to i32*
  %v3_1a7217 = load i32, i32* %v2_1a7216, align 4
  %v10_1a7218 = icmp eq i32 %v3_1a7217, 0
  %v1_1a7259 = icmp eq i1 %v10_1a7218, false
  %v2_1a72510 = zext i1 %v1_1a7259 to i32
  %v3_1a72511 = load i32, i32* %eax.global-to-local, align 4
  %v4_1a72512 = and i32 %v3_1a72511, -256
  %v5_1a72513 = or i32 %v2_1a72510, %v4_1a72512
  store i32 %v5_1a72513, i32* %eax.global-to-local, align 4
  %v5_1a72814 = icmp eq i1 %v1_1a7259, false
  %v1_1a72a15 = icmp eq i1 %v5_1a72814, false
  br i1 %v1_1a72a15, label %dec_label_pc_1a707, label %dec_label_pc_1a72c

dec_label_pc_1a707:                               ; preds = %dec_label_pc_1a6df, %dec_label_pc_1a707
  %v0_1a72116 = phi i32 [ %v0_1a721, %dec_label_pc_1a707 ], [ %v0_1a7214, %dec_label_pc_1a6df ]
  %v1_1a707 = add i32 %v0_1a72116, -36
  %v2_1a707 = inttoptr i32 %v1_1a707 to i32*
  %v3_1a707 = load i32, i32* %v2_1a707, align 4
  store i32 %v3_1a707, i32* %eax.global-to-local, align 4
  %v1_1a70e = add i32 %v0_1a72116, -28
  %v2_1a70e = inttoptr i32 %v1_1a70e to i32*
  %v3_1a70e = load i32, i32* %v2_1a70e, align 4
  store i32 %v3_1a70e, i32* %eax.global-to-local, align 4
  %v2_1a714 = call i32 @unknown_34d28(i32 %v3_1a70e, i32 %v3_1a707)
  store i32 %v2_1a714, i32* %eax.global-to-local, align 4
  %v0_1a719 = load i32, i32* @ebp, align 4
  %v1_1a719 = add i32 %v0_1a719, -16
  %v2_1a719 = inttoptr i32 %v1_1a719 to i32*
  %v3_1a719 = load i32, i32* %v2_1a719, align 4
  %v4_1a719 = sub i32 %v3_1a719, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1a719, i32* %v2_1a719, align 4
  %v0_1a71d = load i32, i32* @ebp, align 4
  %v1_1a71d = add i32 %v0_1a71d, -28
  %v2_1a71d = inttoptr i32 %v1_1a71d to i32*
  %v3_1a71d = load i32, i32* %v2_1a71d, align 4
  %v4_1a71d = add i32 %v3_1a71d, 20
  store i32 %v4_1a71d, i32* %v2_1a71d, align 4
  %v0_1a721 = load i32, i32* @ebp, align 4
  %v1_1a721 = add i32 %v0_1a721, -16
  %v2_1a721 = inttoptr i32 %v1_1a721 to i32*
  %v3_1a721 = load i32, i32* %v2_1a721, align 4
  %v10_1a721 = icmp eq i32 %v3_1a721, 0
  %v1_1a725 = icmp eq i1 %v10_1a721, false
  %v2_1a725 = zext i1 %v1_1a725 to i32
  %v3_1a725 = load i32, i32* %eax.global-to-local, align 4
  %v4_1a725 = and i32 %v3_1a725, -256
  %v5_1a725 = or i32 %v2_1a725, %v4_1a725
  store i32 %v5_1a725, i32* %eax.global-to-local, align 4
  %v5_1a728 = icmp eq i1 %v1_1a725, false
  %v1_1a72a = icmp eq i1 %v5_1a728, false
  br i1 %v1_1a72a, label %dec_label_pc_1a707, label %dec_label_pc_1a72c

dec_label_pc_1a72c:                               ; preds = %dec_label_pc_1a707, %dec_label_pc_1a6df
  %v0_1a721.lcssa = phi i32 [ %v0_1a7214, %dec_label_pc_1a6df ], [ %v0_1a721, %dec_label_pc_1a707 ]
  %v1_1a72c = add i32 %v0_1a721.lcssa, -28
  %v2_1a72c = inttoptr i32 %v1_1a72c to i32*
  %v3_1a72c = load i32, i32* %v2_1a72c, align 4
  store i32 %v3_1a72c, i32* @eax, align 4
  %v1_1a72f = add i32 %v0_1a721.lcssa, -12
  %v2_1a72f = inttoptr i32 %v1_1a72f to i32*
  %v3_1a72f = load i32, i32* %v2_1a72f, align 4
  %v1_1a732 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a732 = icmp eq i32 %v1_1a732, %v3_1a72f
  br i1 %v3_1a732, label %bb, label %dec_label_pc_1a73b

bb:                                               ; preds = %dec_label_pc_1a72c
  %v1_1a739 = call i32 @function_1a740()
  store i32 %v1_1a739, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a73b

dec_label_pc_1a73b:                               ; preds = %bb, %dec_label_pc_1a72c
  %v2_1a739 = phi i32 [ %v1_1a739, %bb ], [ %v3_1a72c, %dec_label_pc_1a72c ]
  ret i32 %v2_1a739

; uselistorder directives
  uselistorder i32 %v0_1a721, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 1, 2, 3, 4, 12, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 16, { 10, 12, 13, 14, 2, 15, 65, 6, 70, 50, 51, 3, 22, 16, 18, 0, 4, 71, 5, 52, 8, 21, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 49, 17, 24, 66, 7, 9, 27, 67, 68, 72, 11, 74, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 19, 20, 31, 23, 25, 26, 43, 44, 28, 29, 30, 32, 45, 46, 47, 48, 69, 73, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8.1178 to i32), { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136 }
  uselistorder label %dec_label_pc_1a707, { 1, 0 }
}

define i32 @function_1a740() local_unnamed_addr {
dec_label_pc_1a740:
  %v0_1a741 = load i32, i32* @eax, align 4
  ret i32 %v0_1a741
}

define i32 @_Z11UnserializeI11CDataStream17CScriptCompressorEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a742:
  ret i32 %arg4
}

define i32 @function_1a764(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a764:
  %v2_1a764 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a764 = load i32, i32* @eax, align 4
  %v4_1a764 = trunc i32 %v3_1a764 to i8
  %v5_1a764 = add i8 %v4_1a764, %v2_1a764
  %v21_1a764 = inttoptr i32 %v3_1a764 to i8*
  store i8 %v5_1a764, i8* %v21_1a764, align 1
  %v0_1a766 = load i32, i32* @eax, align 4
  %v1_1a766 = load i32, i32* @ebp, align 4
  %v2_1a766 = add i32 %v1_1a766, -12
  %v3_1a766 = inttoptr i32 %v2_1a766 to i32*
  store i32 %v0_1a766, i32* %v3_1a766, align 4
  %v0_1a76b = load i32, i32* @ebp, align 4
  %v1_1a76b = add i32 %v0_1a76b, -40
  %v2_1a76b = inttoptr i32 %v1_1a76b to i32*
  %v3_1a76b = load i32, i32* %v2_1a76b, align 4
  %v1_1a772 = add i32 %v0_1a76b, -36
  %v2_1a772 = inttoptr i32 %v1_1a772 to i32*
  %v3_1a772 = load i32, i32* %v2_1a772, align 4
  %v1_1a779 = add i32 %v0_1a76b, -28
  %v2_1a779 = inttoptr i32 %v1_1a779 to i32*
  %v3_1a779 = load i32, i32* %v2_1a779, align 4
  %v1_1a780 = add i32 %v0_1a76b, -32
  %v2_1a780 = inttoptr i32 %v1_1a780 to i32*
  %v3_1a780 = load i32, i32* %v2_1a780, align 4
  %v4_1a786 = call i32 @unknown_354b4(i32 %v3_1a780, i32 %v3_1a779, i32 %v3_1a772, i32 %v3_1a76b)
  %v0_1a78b = load i32, i32* @ebp, align 4
  %v1_1a78b = add i32 %v0_1a78b, -12
  %v2_1a78b = inttoptr i32 %v1_1a78b to i32*
  %v3_1a78b = load i32, i32* %v2_1a78b, align 4
  %v1_1a78e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a78e = xor i32 %v1_1a78e, %v3_1a78b
  %v3_1a78e = icmp eq i32 %v2_1a78e, 0
  store i32 %v2_1a78e, i32* @eax, align 4
  br i1 %v3_1a78e, label %bb, label %dec_label_pc_1a797

bb:                                               ; preds = %dec_label_pc_1a764
  %v1_1a795 = call i32 @function_1a79c()
  br label %dec_label_pc_1a797

dec_label_pc_1a797:                               ; preds = %bb, %dec_label_pc_1a764
  %v3_1a795 = phi i32 [ %v1_1a795, %bb ], [ %v2_1a78e, %dec_label_pc_1a764 ]
  ret i32 %v3_1a795

; uselistorder directives
  uselistorder i32 %v0_1a76b, { 1, 0, 2, 3 }
}

define i32 @function_1a79c() local_unnamed_addr {
dec_label_pc_1a79c:
  %v0_1a79d = load i32, i32* @eax, align 4
  ret i32 %v0_1a79d
}

define i32 @_Z14Serialize_implI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a79e:
  ret i32 %arg5
}

define i32 @function_1a7c6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a7c6:
  %v2_1a7c6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a7c6 = load i32, i32* @eax, align 4
  %v4_1a7c6 = trunc i32 %v3_1a7c6 to i8
  %v5_1a7c6 = add i8 %v4_1a7c6, %v2_1a7c6
  %v21_1a7c6 = inttoptr i32 %v3_1a7c6 to i8*
  store i8 %v5_1a7c6, i8* %v21_1a7c6, align 1
  %v0_1a7c8 = load i32, i32* @ecx, align 4
  %v1_1a7c8 = add i32 %v0_1a7c8, -1070468027
  %v2_1a7c8 = inttoptr i32 %v1_1a7c8 to i8*
  %v3_1a7c8 = load i8, i8* %v2_1a7c8, align 1
  %v5_1a7c8 = trunc i32 %v0_1a7c8 to i8
  %v6_1a7c8 = add i8 %v3_1a7c8, %v5_1a7c8
  store i8 %v6_1a7c8, i8* %v2_1a7c8, align 1
  %v0_1a7ce = load i32, i32* @ebp, align 4
  %v1_1a7ce = add i32 %v0_1a7ce, -32
  %v2_1a7ce = inttoptr i32 %v1_1a7ce to i32*
  %v3_1a7ce = load i32, i32* %v2_1a7ce, align 4
  %v1_1a7d4 = call i32 @unknown_22048(i32 %v3_1a7ce)
  %v0_1a7e6 = load i32, i32* @ebp, align 4
  %v1_1a7e6 = add i32 %v0_1a7e6, -28
  %v2_1a7e6 = inttoptr i32 %v1_1a7e6 to i32*
  %v3_1a7e6 = load i32, i32* %v2_1a7e6, align 4
  %v3_1a7ec = call i32 @unknown_34306(i32 %v3_1a7e6, i32 %v1_1a7d4, i32 0)
  %v0_1a7f1 = load i32, i32* @ebp, align 4
  %v1_1a7f1 = add i32 %v0_1a7f1, -32
  %v2_1a7f1 = inttoptr i32 %v1_1a7f1 to i32*
  %v3_1a7f1 = load i32, i32* %v2_1a7f1, align 4
  %v1_1a7f7 = call i32 @unknown_23b08(i32 %v3_1a7f1)
  %v0_1a803 = load i32, i32* @ebp, align 4
  %v1_1a803 = add i32 %v0_1a803, -32
  %v2_1a803 = inttoptr i32 %v1_1a803 to i32*
  %v3_1a803 = load i32, i32* %v2_1a803, align 4
  ret i32 %v3_1a803
}

define i32 @function_1a806(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a806:
  %v0_1a806 = load i32, i32* @eax, align 4
  %v1_1a809 = call i32 @unknown_22048(i32 %v0_1a806)
  %v0_1a818 = load i32, i32* @ebp, align 4
  %v1_1a818 = add i32 %v0_1a818, -32
  %v2_1a818 = inttoptr i32 %v1_1a818 to i32*
  %v3_1a818 = load i32, i32* %v2_1a818, align 4
  %v2_1a81e = call i32 @unknown_22086(i32 %v3_1a818, i32 0)
  %v0_1a82b = load i32, i32* @ebp, align 4
  %v1_1a82b = add i32 %v0_1a82b, -28
  %v2_1a82b = inttoptr i32 %v1_1a82b to i32*
  %v3_1a82b = load i32, i32* %v2_1a82b, align 4
  %v3_1a831 = call i32 @unknown_1f49c(i32 %v3_1a82b, i32 %v2_1a81e, i32 %v1_1a809)
  %v0_1a836 = load i32, i32* @ebp, align 4
  %v1_1a836 = add i32 %v0_1a836, -12
  %v2_1a836 = inttoptr i32 %v1_1a836 to i32*
  %v3_1a836 = load i32, i32* %v2_1a836, align 4
  %v1_1a839 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a839 = xor i32 %v1_1a839, %v3_1a836
  %v3_1a839 = icmp eq i32 %v2_1a839, 0
  store i32 %v2_1a839, i32* @eax, align 4
  br i1 %v3_1a839, label %bb, label %dec_label_pc_1a842

bb:                                               ; preds = %dec_label_pc_1a806
  %v1_1a840 = call i32 @function_1a847()
  br label %dec_label_pc_1a842

dec_label_pc_1a842:                               ; preds = %bb, %dec_label_pc_1a806
  %v2_1a840 = phi i32 [ %v1_1a840, %bb ], [ %v2_1a839, %dec_label_pc_1a806 ]
  ret i32 %v2_1a840
}

define i32 @function_1a847() local_unnamed_addr {
dec_label_pc_1a847:
  %v0_1a84c = load i32, i32* @eax, align 4
  ret i32 %v0_1a84c
}

define i32 @_ZN13CDiskBlockPos11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a84e:
  %stack_var_-32 = alloca i32, align 4
  %v1_1a892 = call i32 @unknown_240f9(i32 %arg1)
  %v2_1a897 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1a8a1 = call i32 @unknown_24126(i32 %v2_1a897, i32 %v1_1a892)
  ret i32 %v2_1a8a1
}

define i32 @function_1a8a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a8a8:
  %v0_1a8aa = load i32, i32* @ebp, align 4
  %v1_1a8aa = add i32 %v0_1a8aa, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1a8aa, i32* @ebp, align 4
  %v0_1a8af = call i32 @unknown_2416d()
  %v0_1a8b4 = load i32, i32* @esi, align 4
  %v0_1a8ba = load i32, i32* @ebp, align 4
  %v1_1a8ba = add i32 %v0_1a8ba, -56
  %v2_1a8ba = inttoptr i32 %v1_1a8ba to i32*
  %v3_1a8ba = load i32, i32* %v2_1a8ba, align 4
  %v1_1a8c1 = add i32 %v0_1a8ba, -52
  %v2_1a8c1 = inttoptr i32 %v1_1a8c1 to i32*
  %v3_1a8c1 = load i32, i32* %v2_1a8c1, align 4
  %v1_1a8cc = add i32 %v0_1a8ba, -48
  %v2_1a8cc = inttoptr i32 %v1_1a8cc to i32*
  %v3_1a8cc = load i32, i32* %v2_1a8cc, align 4
  %sext = mul i32 %v0_1a8b4, 16777216
  %v6_1a8d2 = sdiv i32 %sext, 16777216
  %v7_1a8d2 = call i32 @unknown_30b10(i32 %v3_1a8cc, i32 %v0_1a8af, i32 %v3_1a8c1, i32 %v3_1a8ba, i32 %v6_1a8d2)
  %v0_1a8d7 = load i32, i32* @ebp, align 4
  %v1_1a8d7 = add i32 %v0_1a8d7, -20
  %v2_1a8d7 = inttoptr i32 %v1_1a8d7 to i32*
  %v3_1a8d7 = load i32, i32* %v2_1a8d7, align 4
  %v5_1a8d7 = add i32 %v3_1a8d7, %v7_1a8d2
  store i32 %v5_1a8d7, i32* %v2_1a8d7, align 4
  %v0_1a8da = load i32, i32* @ebp, align 4
  %v1_1a8da = add i32 %v0_1a8da, -44
  %v2_1a8da = inttoptr i32 %v1_1a8da to i32*
  %v3_1a8da = load i32, i32* %v2_1a8da, align 4
  %v1_1a8dd = add i32 %v3_1a8da, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1a8e3 = call i32 @unknown_23cc9(i32 %v1_1a8dd)
  %v0_1a8e8 = load i32, i32* @ebp, align 4
  %v1_1a8e8 = add i32 %v0_1a8e8, -24
  %v3_1a8f2 = call i32 @unknown_23cf6(i32 %v1_1a8e8, i32 %v2_1a8e3)
  %v0_1a8fa = load i32, i32* @ebp, align 4
  %v1_1a8fa = add i32 %v0_1a8fa, -24
  %v1_1a900 = call i32 @unknown_23d3d(i32 %v1_1a8fa)
  %v0_1a905 = load i32, i32* @ebx, align 4
  %v0_1a909 = load i32, i32* @ebp, align 4
  %v1_1a909 = add i32 %v0_1a909, -56
  %v2_1a909 = inttoptr i32 %v1_1a909 to i32*
  %v3_1a909 = load i32, i32* %v2_1a909, align 4
  %v1_1a910 = add i32 %v0_1a909, -52
  %v2_1a910 = inttoptr i32 %v1_1a910 to i32*
  %v3_1a910 = load i32, i32* %v2_1a910, align 4
  %v1_1a91b = add i32 %v0_1a909, -48
  %v2_1a91b = inttoptr i32 %v1_1a91b to i32*
  %v3_1a91b = load i32, i32* %v2_1a91b, align 4
  %v6_1a921 = call i32 @unknown_30b78(i32 %v3_1a91b, i32 %v1_1a900, i32 %v3_1a910, i32 %v3_1a909, i32 %v0_1a905)
  %v0_1a926 = load i32, i32* @ebp, align 4
  %v1_1a926 = add i32 %v0_1a926, -20
  %v2_1a926 = inttoptr i32 %v1_1a926 to i32*
  %v3_1a926 = load i32, i32* %v2_1a926, align 4
  %v5_1a926 = add i32 %v3_1a926, %v6_1a921
  store i32 %v5_1a926, i32* %v2_1a926, align 4
  %v0_1a929 = load i32, i32* @ebp, align 4
  %v1_1a929 = add i32 %v0_1a929, -12
  %v2_1a929 = inttoptr i32 %v1_1a929 to i32*
  %v3_1a929 = load i32, i32* %v2_1a929, align 4
  %v1_1a92c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a92c = xor i32 %v1_1a92c, %v3_1a929
  %v3_1a92c = icmp eq i32 %v2_1a92c, 0
  store i32 %v2_1a92c, i32* @eax, align 4
  br i1 %v3_1a92c, label %bb, label %dec_label_pc_1a935

bb:                                               ; preds = %dec_label_pc_1a8a8
  %v1_1a933 = call i32 @function_1a93a()
  br label %dec_label_pc_1a935

dec_label_pc_1a935:                               ; preds = %bb, %dec_label_pc_1a8a8
  %v3_1a933 = phi i32 [ %v1_1a933, %bb ], [ %v2_1a92c, %dec_label_pc_1a8a8 ]
  ret i32 %v3_1a933
}

define i32 @function_1a93a() local_unnamed_addr {
dec_label_pc_1a93a:
  %v0_1a93a = load i32, i32* @ebp, align 4
  %v1_1a93f = inttoptr i32 %v0_1a93a to i32*
  %v2_1a93f = load i32, i32* %v1_1a93f, align 4
  store i32 %v2_1a93f, i32* @ebp, align 4
  %v0_1a940 = load i32, i32* @eax, align 4
  ret i32 %v0_1a940
}

define i32 @_ZNK13CDiskBlockPos9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a942:
  ret i32 %arg4
}

define i32 @function_1a965(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a965:
  %v2_1a965 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a965 = load i32, i32* @eax, align 4
  %v4_1a965 = trunc i32 %v3_1a965 to i8
  %v5_1a965 = add i8 %v4_1a965, %v2_1a965
  %v21_1a965 = inttoptr i32 %v3_1a965 to i8*
  store i8 %v5_1a965, i8* %v21_1a965, align 1
  %v0_1a967 = load i32, i32* @ecx, align 4
  %v1_1a967 = add i32 %v0_1a967, -1070468027
  %v2_1a967 = inttoptr i32 %v1_1a967 to i8*
  %v3_1a967 = load i8, i8* %v2_1a967, align 1
  %v5_1a967 = trunc i32 %v0_1a967 to i8
  %v6_1a967 = add i8 %v3_1a967, %v5_1a967
  store i8 %v6_1a967, i8* %v2_1a967, align 1
  %v0_1a96d = load i32, i32* @ebp, align 4
  %v1_1a96d = add i32 %v0_1a96d, -15
  %v2_1a96d = inttoptr i32 %v1_1a96d to i8*
  store i8 0, i8* %v2_1a96d, align 1
  %v0_1a971 = load i32, i32* @ebp, align 4
  %v1_1a971 = add i32 %v0_1a971, -14
  %v2_1a971 = inttoptr i32 %v1_1a971 to i8*
  store i8 ptrtoint (i8** @global_var_1.1176 to i8), i8* %v2_1a971, align 1
  %v0_1a975 = load i32, i32* @ebp, align 4
  %v1_1a975 = add i32 %v0_1a975, -13
  %v2_1a975 = inttoptr i32 %v1_1a975 to i8*
  store i8 0, i8* %v2_1a975, align 1
  %v3_1a975 = load i32, i32* @eax, align 4
  ret i32 %v3_1a975

; uselistorder directives
  uselistorder i32 -13, { 26, 12, 33, 28, 29, 30, 31, 11, 32, 16, 1, 17, 15, 22, 23, 24, 27, 2, 3, 13, 14, 18, 19, 20, 21, 4, 5, 6, 7, 0, 8, 9, 10, 25 }
  uselistorder i8 ptrtoint (i8** @global_var_1.1176 to i8), { 18, 17, 10, 16, 15, 14, 13, 0, 1, 3, 6, 4, 9, 12, 2, 11, 5, 7, 8 }
  uselistorder i32 -14, { 11, 9, 10, 12, 0, 1, 6, 7, 8, 2, 3, 4, 5 }
  uselistorder i32 -15, { 5, 4, 0, 7, 6, 8, 1, 2, 3 }
  uselistorder i32 -1070468027, { 3, 0, 1, 2 }
}

define i32 @function_1a97c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a97c:
  %v2_1a97c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a97c = load i32, i32* @eax, align 4
  %v4_1a97c = trunc i32 %v3_1a97c to i8
  %v5_1a97c = add i8 %v4_1a97c, %v2_1a97c
  %v21_1a97c = inttoptr i32 %v3_1a97c to i8*
  store i8 %v5_1a97c, i8* %v21_1a97c, align 1
  %v2_1a97e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a97e = load i32, i32* @eax, align 4
  %v4_1a97e = trunc i32 %v3_1a97e to i8
  %v5_1a97e = add i8 %v4_1a97e, %v2_1a97e
  %v21_1a97e = inttoptr i32 %v3_1a97e to i8*
  store i8 %v5_1a97e, i8* %v21_1a97e, align 1
  %v0_1a980 = load i32, i32* @ebp, align 4
  %v1_1a980 = add i32 %v0_1a980, -44
  %v2_1a980 = inttoptr i32 %v1_1a980 to i32*
  %v3_1a980 = load i32, i32* %v2_1a980, align 4
  %v1_1a986 = call i32 @unknown_241ed(i32 %v3_1a980)
  %v0_1a98b = load i32, i32* @ebp, align 4
  %v1_1a98b = add i32 %v0_1a98b, -28
  %v2_1a995 = call i32 @unknown_2421a(i32 %v1_1a98b, i32 %v1_1a986)
  %v0_1a99d = load i32, i32* @ebp, align 4
  %v1_1a99d = add i32 %v0_1a99d, -28
  %v2_1a9a3 = call i32 @unknown_24261(i32 %v1_1a99d)
  %v0_1a9a8 = load i32, i32* @esi, align 4
  %v0_1a9ae = load i32, i32* @ebp, align 4
  %v1_1a9ae = add i32 %v0_1a9ae, -56
  %v2_1a9ae = inttoptr i32 %v1_1a9ae to i32*
  %v3_1a9ae = load i32, i32* %v2_1a9ae, align 4
  %v1_1a9b5 = add i32 %v0_1a9ae, -52
  %v2_1a9b5 = inttoptr i32 %v1_1a9b5 to i32*
  %v3_1a9b5 = load i32, i32* %v2_1a9b5, align 4
  %v1_1a9c0 = add i32 %v0_1a9ae, -48
  %v2_1a9c0 = inttoptr i32 %v1_1a9c0 to i32*
  %v3_1a9c0 = load i32, i32* %v2_1a9c0, align 4
  %sext = mul i32 %v0_1a9a8, 16777216
  %v6_1a9c6 = sdiv i32 %sext, 16777216
  %v7_1a9c6 = call i32 @unknown_33c3c(i32 %v3_1a9c0, i32 %v2_1a9a3, i32 %v3_1a9b5, i32 %v3_1a9ae, i32 %v6_1a9c6)
  %v0_1a9cb = load i32, i32* @ebp, align 4
  %v1_1a9cb = add i32 %v0_1a9cb, -20
  %v2_1a9cb = inttoptr i32 %v1_1a9cb to i32*
  %v3_1a9cb = load i32, i32* %v2_1a9cb, align 4
  %v5_1a9cb = add i32 %v3_1a9cb, %v7_1a9c6
  store i32 %v5_1a9cb, i32* %v2_1a9cb, align 4
  %v0_1a9ce = load i32, i32* @ebp, align 4
  %v1_1a9ce = add i32 %v0_1a9ce, -44
  %v2_1a9ce = inttoptr i32 %v1_1a9ce to i32*
  %v3_1a9ce = load i32, i32* %v2_1a9ce, align 4
  %v1_1a9d1 = add i32 %v3_1a9ce, ptrtoint (i8** @global_var_4.1177 to i32)
  %v2_1a9d7 = call i32 @unknown_23dbd(i32 %v1_1a9d1)
  %v0_1a9dc = load i32, i32* @ebp, align 4
  %v1_1a9dc = add i32 %v0_1a9dc, -24
  %v3_1a9e6 = call i32 @unknown_23dea(i32 %v1_1a9dc, i32 %v2_1a9d7)
  %v0_1a9ee = load i32, i32* @ebp, align 4
  %v1_1a9ee = add i32 %v0_1a9ee, -24
  %v1_1a9f4 = call i32 @unknown_23e31(i32 %v1_1a9ee)
  %v0_1a9f9 = load i32, i32* @ebx, align 4
  %v0_1a9fd = load i32, i32* @ebp, align 4
  %v1_1a9fd = add i32 %v0_1a9fd, -56
  %v2_1a9fd = inttoptr i32 %v1_1a9fd to i32*
  %v3_1a9fd = load i32, i32* %v2_1a9fd, align 4
  %v1_1aa04 = add i32 %v0_1a9fd, -52
  %v2_1aa04 = inttoptr i32 %v1_1aa04 to i32*
  %v3_1aa04 = load i32, i32* %v2_1aa04, align 4
  %v1_1aa0f = add i32 %v0_1a9fd, -48
  %v2_1aa0f = inttoptr i32 %v1_1aa0f to i32*
  %v3_1aa0f = load i32, i32* %v2_1aa0f, align 4
  %v6_1aa15 = call i32 @unknown_33026(i32 %v3_1aa0f, i32 %v1_1a9f4, i32 %v3_1aa04, i32 %v3_1a9fd, i32 %v0_1a9f9)
  %v0_1aa1a = load i32, i32* @ebp, align 4
  %v1_1aa1a = add i32 %v0_1aa1a, -20
  %v2_1aa1a = inttoptr i32 %v1_1aa1a to i32*
  %v3_1aa1a = load i32, i32* %v2_1aa1a, align 4
  %v5_1aa1a = add i32 %v3_1aa1a, %v6_1aa15
  store i32 %v5_1aa1a, i32* %v2_1aa1a, align 4
  %v0_1aa1d = load i32, i32* @ebp, align 4
  %v1_1aa1d = add i32 %v0_1aa1d, -12
  %v2_1aa1d = inttoptr i32 %v1_1aa1d to i32*
  %v3_1aa1d = load i32, i32* %v2_1aa1d, align 4
  %v1_1aa20 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1aa20 = xor i32 %v1_1aa20, %v3_1aa1d
  %v3_1aa20 = icmp eq i32 %v2_1aa20, 0
  store i32 %v2_1aa20, i32* @eax, align 4
  br i1 %v3_1aa20, label %bb, label %dec_label_pc_1aa29

bb:                                               ; preds = %dec_label_pc_1a97c
  %v1_1aa27 = call i32 @function_1aa2e()
  br label %dec_label_pc_1aa29

dec_label_pc_1aa29:                               ; preds = %bb, %dec_label_pc_1a97c
  %v3_1aa27 = phi i32 [ %v1_1aa27, %bb ], [ %v2_1aa20, %dec_label_pc_1a97c ]
  ret i32 %v3_1aa27

; uselistorder directives
  uselistorder i32 -56, { 69, 70, 71, 72, 36, 16, 17, 65, 66, 37, 19, 67, 68, 56, 0, 18, 15, 20, 63, 64, 1, 57, 58, 59, 60, 61, 62, 2, 38, 39, 40, 41, 42, 43, 3, 21, 4, 44, 45, 46, 47, 48, 49, 5, 22, 23, 24, 25, 26, 27, 6, 50, 51, 52, 53, 54, 55, 7, 8, 9, 28, 29, 30, 31, 32, 33, 34, 35, 13, 10, 11, 12, 14 }
  uselistorder i32* @esi, { 39, 40, 18, 19, 33, 36, 34, 35, 24, 31, 20, 21, 25, 26, 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 14, 12, 13, 29, 30, 22, 27, 28, 23, 15, 37, 38, 16, 17, 32, 0 }
}

define i32 @function_1aa2e() local_unnamed_addr {
dec_label_pc_1aa2e:
  %v0_1aa2e = load i32, i32* @ebp, align 4
  %v1_1aa33 = inttoptr i32 %v0_1aa2e to i32*
  %v2_1aa33 = load i32, i32* %v1_1aa33, align 4
  store i32 %v2_1aa33, i32* @ebp, align 4
  %v0_1aa34 = load i32, i32* @eax, align 4
  ret i32 %v0_1aa34
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1aa35:
  ret i32 %arg3
}

define i32 @function_1aa4a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa4a = load i32, i32* @eax, align 4
  %v1_1aa4a = load i32, i32* @ebp, align 4
  %v2_1aa4a = add i32 %v1_1aa4a, -36
  %v3_1aa4a = inttoptr i32 %v2_1aa4a to i32*
  store i32 %v0_1aa4a, i32* %v3_1aa4a, align 4
  %v0_1aa4d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1aa53 = load i32, i32* @ebp, align 4
  %v2_1aa53 = add i32 %v1_1aa53, -12
  %v3_1aa53 = inttoptr i32 %v2_1aa53 to i32*
  store i32 %v0_1aa4d, i32* %v3_1aa53, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1aa58 = load i32, i32* @ebp, align 4
  %v1_1aa58 = add i32 %v0_1aa58, -32
  %v2_1aa58 = inttoptr i32 %v1_1aa58 to i32*
  %v3_1aa58 = load i32, i32* %v2_1aa58, align 4
  %v1_1aa5b = add i32 %v0_1aa58, -28
  %v2_1aa5b = inttoptr i32 %v1_1aa5b to i32*
  %v3_1aa5b = load i32, i32* %v2_1aa5b, align 4
  %v2_1aa60 = sub i32 %v3_1aa58, %v3_1aa5b
  %v2_1aa64 = sdiv i32 %v2_1aa60, 4
  store i32 %v2_1aa64, i32* %eax.global-to-local, align 4
  %v2_1aa67 = add i32 %v0_1aa58, -16
  %v3_1aa67 = inttoptr i32 %v2_1aa67 to i32*
  store i32 %v2_1aa64, i32* %v3_1aa67, align 4
  %v16_1aa6a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v16_1aa6a

; uselistorder directives
  uselistorder i32 %v2_1aa64, { 1, 0 }
}

define i32 @function_1aa6e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa6e:
  %v0_1aa6e = load i1, i1* @zf, align 1
  br i1 %v0_1aa6e, label %bb, label %dec_label_pc_1aa70

bb:                                               ; preds = %dec_label_pc_1aa6e
  %v1_1aa6e = call i32 @function_1aa8c()
  br label %dec_label_pc_1aa70

dec_label_pc_1aa70:                               ; preds = %bb, %dec_label_pc_1aa6e
  %v0_1aa70 = load i32, i32* @ebp, align 4
  %v1_1aa81 = add i32 %v0_1aa70, -36
  %v2_1aa81 = inttoptr i32 %v1_1aa81 to i32*
  %v3_1aa81 = load i32, i32* %v2_1aa81, align 4
  ret i32 %v3_1aa81

; uselistorder directives
  uselistorder i1* @zf, { 14, 8, 10, 11, 15, 4, 6, 2, 12, 13, 0, 1, 9, 3, 5, 7 }
}

define i32 @function_1aa8c() local_unnamed_addr {
dec_label_pc_1aa8c:
  %v0_1aa8c = load i32, i32* @ebp, align 4
  %v1_1aa8c = add i32 %v0_1aa8c, -16
  %v2_1aa8c = inttoptr i32 %v1_1aa8c to i32*
  %v3_1aa8c = load i32, i32* %v2_1aa8c, align 4
  %v2_1aa8f = mul i32 %v3_1aa8c, 4
  %v2_1aa92 = add i32 %v0_1aa8c, -36
  %v3_1aa92 = inttoptr i32 %v2_1aa92 to i32*
  %v4_1aa92 = load i32, i32* %v3_1aa92, align 4
  %v5_1aa92 = add i32 %v4_1aa92, %v2_1aa8f
  store i32 %v5_1aa92, i32* @eax, align 4
  %v1_1aa95 = add i32 %v0_1aa8c, -12
  %v2_1aa95 = inttoptr i32 %v1_1aa95 to i32*
  %v3_1aa95 = load i32, i32* %v2_1aa95, align 4
  %v1_1aa98 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1aa98 = icmp eq i32 %v1_1aa98, %v3_1aa95
  br i1 %v3_1aa98, label %bb, label %dec_label_pc_1aaa1

bb:                                               ; preds = %dec_label_pc_1aa8c
  %v1_1aa9f = call i32 @function_1aaa6()
  br label %dec_label_pc_1aaa1

dec_label_pc_1aaa1:                               ; preds = %bb, %dec_label_pc_1aa8c
  %v2_1aa9f = phi i32 [ %v1_1aa9f, %bb ], [ %v5_1aa92, %dec_label_pc_1aa8c ]
  ret i32 %v2_1aa9f

; uselistorder directives
  uselistorder i32 4, { 0, 1, 34, 2, 3, 16, 17, 18, 19, 20, 4, 22, 30, 31, 32, 5, 33, 25, 26, 27, 28, 6, 7, 24, 8, 15, 12, 9, 21, 23, 13, 10, 11, 29, 14 }
}

define i32 @function_1aaa6() local_unnamed_addr {
dec_label_pc_1aaa6:
  %v0_1aaa7 = load i32, i32* @eax, align 4
  ret i32 %v0_1aaa7
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1aaa8:
  ret i32 %arg4
}

define i32 @function_1aac4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aac4:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1aac4 = load i32, i32* @eax, align 4
  %v1_1aac4 = load i32, i32* @ebp, align 4
  %v2_1aac4 = add i32 %v1_1aac4, -44
  %v3_1aac4 = inttoptr i32 %v2_1aac4 to i32*
  store i32 %v0_1aac4, i32* %v3_1aac4, align 4
  %v0_1aac7 = load i32, i32* @ebp, align 4
  %v1_1aac7 = add i32 %v0_1aac7, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1aac7 = inttoptr i32 %v1_1aac7 to i32*
  %v3_1aac7 = load i32, i32* %v2_1aac7, align 4
  store i32 %v3_1aac7, i32* %eax.global-to-local, align 4
  %v2_1aaca = add i32 %v0_1aac7, -40
  %v3_1aaca = inttoptr i32 %v2_1aaca to i32*
  store i32 %v3_1aac7, i32* %v3_1aaca, align 4
  %v0_1aacd = load i32, i32* @ebp, align 4
  %v1_1aacd = add i32 %v0_1aacd, ptrtoint (i32* @global_var_1c.1180 to i32)
  %v2_1aacd = inttoptr i32 %v1_1aacd to i32*
  %v3_1aacd = load i32, i32* %v2_1aacd, align 4
  store i32 %v3_1aacd, i32* %eax.global-to-local, align 4
  %v2_1aad0 = add i32 %v0_1aacd, -52
  %v3_1aad0 = inttoptr i32 %v2_1aad0 to i32*
  store i32 %v3_1aacd, i32* %v3_1aad0, align 4
  %v0_1aad3 = load i32, i32* @ebp, align 4
  %v1_1aad3 = add i32 %v0_1aad3, ptrtoint (i32* @global_var_20.1184 to i32)
  %v2_1aad3 = inttoptr i32 %v1_1aad3 to i32*
  %v3_1aad3 = load i32, i32* %v2_1aad3, align 4
  store i32 %v3_1aad3, i32* %eax.global-to-local, align 4
  %v2_1aad6 = add i32 %v0_1aad3, -48
  %v3_1aad6 = inttoptr i32 %v2_1aad6 to i32*
  store i32 %v3_1aad3, i32* %v3_1aad6, align 4
  %v0_1aad9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1aadf = load i32, i32* @ebp, align 4
  %v2_1aadf = add i32 %v1_1aadf, -12
  %v3_1aadf = inttoptr i32 %v2_1aadf to i32*
  store i32 %v0_1aad9, i32* %v3_1aadf, align 4
  %v0_1aae4 = load i32, i32* @ebp, align 4
  %v1_1aae4 = add i32 %v0_1aae4, -36
  %v1_1aaeb = add i32 %v0_1aae4, -44
  store i32 %v1_1aaeb, i32* %eax.global-to-local, align 4
  %v2_1aaf1 = call i32 @unknown_1cd68(i32 %v1_1aaeb, i32 %v1_1aae4)
  store i32 %v2_1aaf1, i32* %eax.global-to-local, align 4
  %v1_1aaf6 = load i32, i32* @ebp, align 4
  %v2_1aaf6 = add i32 %v1_1aaf6, -16
  %v3_1aaf6 = inttoptr i32 %v2_1aaf6 to i32*
  store i32 %v2_1aaf1, i32* %v3_1aaf6, align 4
  br label %dec_label_pc_1ab47

dec_label_pc_1aafb:                               ; preds = %dec_label_pc_1ab47
  %v1_1aafb = add i32 %v0_1ab47, -36
  store i32 %v1_1aafb, i32* %eax.global-to-local, align 4
  %v1_1aafe = load i32, i32* @esp, align 4
  %v2_1aafe = inttoptr i32 %v1_1aafe to i32*
  store i32 %v1_1aafb, i32* %v2_1aafe, align 4
  %v0_1ab01 = call i32 @unknown_1d0ca()
  %v1_1ab06 = urem i32 %v0_1ab01, 256
  store i32 %v1_1ab06, i32* @ebx, align 4
  %v0_1ab09 = load i32, i32* @ebp, align 4
  %v1_1ab09 = add i32 %v0_1ab09, -24
  store i32 %v1_1ab09, i32* %eax.global-to-local, align 4
  %v1_1ab0c = add i32 %v0_1ab09, -52
  store i32 %v1_1ab0c, i32* %edx.global-to-local, align 4
  %v1_1ab0f = load i32, i32* @esp, align 4
  %v2_1ab0f = add i32 %v1_1ab0f, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1ab0f = inttoptr i32 %v2_1ab0f to i32*
  store i32 %v1_1ab0c, i32* %v3_1ab0f, align 4
  %v0_1ab13 = load i32, i32* %eax.global-to-local, align 4
  %v1_1ab13 = load i32, i32* @esp, align 4
  %v2_1ab13 = inttoptr i32 %v1_1ab13 to i32*
  store i32 %v0_1ab13, i32* %v2_1ab13, align 4
  %v0_1ab16 = call i32 @unknown_1ce5c()
  %v0_1ab1b = load i32, i32* @esp, align 4
  %v0_1ab1e = load i32, i32* @ebx, align 4
  %v3_1ab1e = inttoptr i32 %v0_1ab1b to i32*
  store i32 %v0_1ab1e, i32* %v3_1ab1e, align 4
  %v0_1ab22 = load i32, i32* @ebp, align 4
  %v1_1ab22 = add i32 %v0_1ab22, -24
  store i32 %v1_1ab22, i32* %eax.global-to-local, align 4
  %v1_1ab25 = load i32, i32* @esp, align 4
  %v2_1ab25 = inttoptr i32 %v1_1ab25 to i32*
  store i32 %v1_1ab22, i32* %v2_1ab25, align 4
  %v0_1ab28 = call i32 @unknown_1caf0()
  %v0_1ab2d = load i32, i32* @ebp, align 4
  %v1_1ab2d = add i32 %v0_1ab2d, -36
  store i32 %v1_1ab2d, i32* %eax.global-to-local, align 4
  %v1_1ab30 = load i32, i32* @esp, align 4
  %v2_1ab30 = inttoptr i32 %v1_1ab30 to i32*
  store i32 %v1_1ab2d, i32* %v2_1ab30, align 4
  %v0_1ab33 = call i32 @unknown_1d126()
  %v0_1ab38 = load i32, i32* @ebp, align 4
  %v1_1ab38 = add i32 %v0_1ab38, -52
  store i32 %v1_1ab38, i32* %eax.global-to-local, align 4
  %v1_1ab3b = load i32, i32* @esp, align 4
  %v2_1ab3b = inttoptr i32 %v1_1ab3b to i32*
  store i32 %v1_1ab38, i32* %v2_1ab3b, align 4
  %v0_1ab3e = call i32 @unknown_1ceb8()
  store i32 %v0_1ab3e, i32* %eax.global-to-local, align 4
  %v0_1ab43 = load i32, i32* @ebp, align 4
  %v1_1ab43 = add i32 %v0_1ab43, -16
  %v2_1ab43 = inttoptr i32 %v1_1ab43 to i32*
  %v3_1ab43 = load i32, i32* %v2_1ab43, align 4
  %v4_1ab43 = sub i32 %v3_1ab43, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1ab43, i32* %v2_1ab43, align 4
  br label %dec_label_pc_1ab47

dec_label_pc_1ab47:                               ; preds = %dec_label_pc_1aafb, %dec_label_pc_1aac4
  %v0_1ab47 = load i32, i32* @ebp, align 4
  %v1_1ab47 = add i32 %v0_1ab47, -16
  %v2_1ab47 = inttoptr i32 %v1_1ab47 to i32*
  %v3_1ab47 = load i32, i32* %v2_1ab47, align 4
  %v10_1ab47 = icmp eq i32 %v3_1ab47, 0
  %v11_1ab47 = icmp slt i32 %v3_1ab47, 0
  %v3_1ab4b = icmp eq i1 %v11_1ab47, false
  %v4_1ab4b = icmp eq i1 %v10_1ab47, false
  %v5_1ab4b = icmp eq i1 %v3_1ab4b, %v4_1ab4b
  %v6_1ab4b = zext i1 %v5_1ab4b to i32
  %v7_1ab4b = load i32, i32* %eax.global-to-local, align 4
  %v8_1ab4b = and i32 %v7_1ab4b, -256
  %v9_1ab4b = or i32 %v6_1ab4b, %v8_1ab4b
  store i32 %v9_1ab4b, i32* %eax.global-to-local, align 4
  %v5_1ab4e = icmp eq i1 %v5_1ab4b, false
  %v1_1ab50 = icmp eq i1 %v5_1ab4e, false
  br i1 %v1_1ab50, label %dec_label_pc_1aafb, label %dec_label_pc_1ab52

dec_label_pc_1ab52:                               ; preds = %dec_label_pc_1ab47
  %v1_1ab52 = add i32 %v0_1ab47, -28
  %v2_1ab52 = inttoptr i32 %v1_1ab52 to i32*
  %v3_1ab52 = load i32, i32* %v2_1ab52, align 4
  store i32 %v3_1ab52, i32* @ecx, align 4
  %v1_1ab55 = add i32 %v0_1ab47, -52
  %v2_1ab55 = inttoptr i32 %v1_1ab55 to i32*
  %v3_1ab55 = load i32, i32* %v2_1ab55, align 4
  store i32 %v3_1ab55, i32* %eax.global-to-local, align 4
  %v1_1ab58 = add i32 %v0_1ab47, -48
  %v2_1ab58 = inttoptr i32 %v1_1ab58 to i32*
  %v3_1ab58 = load i32, i32* %v2_1ab58, align 4
  store i32 %v3_1ab58, i32* %edx.global-to-local, align 4
  %v2_1ab5b = inttoptr i32 %v3_1ab52 to i32*
  store i32 %v3_1ab55, i32* %v2_1ab5b, align 4
  %v0_1ab5d = load i32, i32* %edx.global-to-local, align 4
  %v1_1ab5d = load i32, i32* @ecx, align 4
  %v2_1ab5d = add i32 %v1_1ab5d, ptrtoint (i8** @global_var_4.1177 to i32)
  %v3_1ab5d = inttoptr i32 %v2_1ab5d to i32*
  store i32 %v0_1ab5d, i32* %v3_1ab5d, align 4
  %v0_1ab60 = load i32, i32* @ebp, align 4
  %v1_1ab60 = add i32 %v0_1ab60, -28
  %v2_1ab60 = inttoptr i32 %v1_1ab60 to i32*
  %v3_1ab60 = load i32, i32* %v2_1ab60, align 4
  store i32 %v3_1ab60, i32* @eax, align 4
  %v1_1ab63 = add i32 %v0_1ab60, -12
  %v2_1ab63 = inttoptr i32 %v1_1ab63 to i32*
  %v3_1ab63 = load i32, i32* %v2_1ab63, align 4
  store i32 %v3_1ab63, i32* %edx.global-to-local, align 4
  %v1_1ab66 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ab66 = xor i32 %v1_1ab66, %v3_1ab63
  %v3_1ab66 = icmp eq i32 %v2_1ab66, 0
  store i32 %v2_1ab66, i32* @edx, align 4
  br i1 %v3_1ab66, label %bb, label %dec_label_pc_1ab6f

bb:                                               ; preds = %dec_label_pc_1ab52
  %v1_1ab6d = call i32 @function_1ab74()
  store i32 %v1_1ab6d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ab6f

dec_label_pc_1ab6f:                               ; preds = %bb, %dec_label_pc_1ab52
  %v2_1ab6d = phi i32 [ %v1_1ab6d, %bb ], [ %v3_1ab60, %dec_label_pc_1ab52 ]
  ret i32 %v2_1ab6d

; uselistorder directives
  uselistorder i32 %v3_1ab47, { 1, 0 }
  uselistorder i32 %v0_1ab47, { 0, 2, 1, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15 }
  uselistorder i32* @esp, { 185, 186, 187, 188, 189, 190, 191, 241, 242, 243, 244, 245, 246, 247, 248, 176, 177, 178, 179, 180, 181, 182, 183, 184, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 28, 29, 0, 249, 168, 169, 170, 171, 172, 173, 174, 240, 175, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 58, 30, 59, 31, 32, 33, 34, 35, 36, 56, 57, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 54, 55, 60, 61, 62, 162, 163, 164, 165, 166, 167, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26, 27 }
  uselistorder i32 ptrtoint (i32* @global_var_20.1184 to i32), { 4, 5, 2, 3, 1, 0, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_1ab74() local_unnamed_addr {
dec_label_pc_1ab74:
  %v0_1ab74 = load i32, i32* @ebp, align 4
  %v1_1ab74 = add i32 %v0_1ab74, -4
  %v2_1ab74 = inttoptr i32 %v1_1ab74 to i32*
  %v3_1ab74 = load i32, i32* %v2_1ab74, align 4
  store i32 %v3_1ab74, i32* @ebx, align 4
  %v0_1ab78 = load i32, i32* @eax, align 4
  ret i32 %v0_1ab78

; uselistorder directives
  uselistorder i32 -4, { 8, 1, 2, 3, 4, 9, 7, 0, 5, 6 }
}

define i32 @function_1ab7a() local_unnamed_addr {
dec_label_pc_1ab7a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_Z9SerializeI11CDataStream17CScriptCompressorEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ab7b:
  ret i32 0
}

define i32 @function_1aba4() local_unnamed_addr {
dec_label_pc_1aba4:
  %v0_1aba4 = load i32, i32* @ebp, align 4
  %v1_1aba4 = add i32 %v0_1aba4, -40
  %v2_1aba4 = inttoptr i32 %v1_1aba4 to i32*
  %v3_1aba4 = load i32, i32* %v2_1aba4, align 4
  %v1_1abab = add i32 %v0_1aba4, -36
  %v2_1abab = inttoptr i32 %v1_1abab to i32*
  %v3_1abab = load i32, i32* %v2_1abab, align 4
  %v1_1abb2 = add i32 %v0_1aba4, -28
  %v2_1abb2 = inttoptr i32 %v1_1abb2 to i32*
  %v3_1abb2 = load i32, i32* %v2_1abb2, align 4
  %v1_1abb9 = add i32 %v0_1aba4, -32
  %v2_1abb9 = inttoptr i32 %v1_1abb9 to i32*
  %v3_1abb9 = load i32, i32* %v2_1abb9, align 4
  %v4_1abbf = call i32 @unknown_35afd(i32 %v3_1abb9, i32 %v3_1abb2, i32 %v3_1abab, i32 %v3_1aba4)
  %v0_1abc4 = load i32, i32* @ebp, align 4
  %v1_1abc4 = add i32 %v0_1abc4, -12
  %v2_1abc4 = inttoptr i32 %v1_1abc4 to i32*
  %v3_1abc4 = load i32, i32* %v2_1abc4, align 4
  %v1_1abc7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1abc7 = xor i32 %v1_1abc7, %v3_1abc4
  %v3_1abc7 = icmp eq i32 %v2_1abc7, 0
  store i32 %v2_1abc7, i32* @eax, align 4
  br i1 %v3_1abc7, label %bb, label %dec_label_pc_1abd0

bb:                                               ; preds = %dec_label_pc_1aba4
  %v1_1abce = call i32 @function_1abd5()
  br label %dec_label_pc_1abd0

dec_label_pc_1abd0:                               ; preds = %bb, %dec_label_pc_1aba4
  %v2_1abce = phi i32 [ %v1_1abce, %bb ], [ %v2_1abc7, %dec_label_pc_1aba4 ]
  ret i32 %v2_1abce

; uselistorder directives
  uselistorder i32 %v0_1aba4, { 1, 0, 2, 3 }
}

define i32 @function_1abd5() local_unnamed_addr {
dec_label_pc_1abd5:
  %v0_1abd6 = load i32, i32* @eax, align 4
  ret i32 %v0_1abd6
}

define i32 @_ZNK7CVarIntIyE9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1abd8:
  %v2_1ac04 = load i32, i32* %arg1, align 4
  ret i32 %v2_1ac04
}

define i32 @function_1ac0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac0a:
  %v0_1ac0a = load i32, i32* @ecx, align 4
  %v1_1ac0a = add i32 %v0_1ac0a, -1996217276
  %v2_1ac0a = inttoptr i32 %v1_1ac0a to i8*
  %v3_1ac0a = load i8, i8* %v2_1ac0a, align 1
  %v5_1ac0a = trunc i32 %v0_1ac0a to i8
  %v6_1ac0a = add i8 %v3_1ac0a, %v5_1ac0a
  store i8 %v6_1ac0a, i8* %v2_1ac0a, align 1
  %v0_1ac13 = load i32, i32* @ebp, align 4
  %v1_1ac13 = add i32 %v0_1ac13, -32
  %v2_1ac13 = inttoptr i32 %v1_1ac13 to i32*
  %v3_1ac13 = load i32, i32* %v2_1ac13, align 4
  %v1_1ac19 = call i32 @unknown_35cdc(i32 %v3_1ac13)
  %v0_1ac1e = load i32, i32* @ebp, align 4
  %v1_1ac1e = add i32 %v0_1ac1e, -12
  %v2_1ac1e = inttoptr i32 %v1_1ac1e to i32*
  %v3_1ac1e = load i32, i32* %v2_1ac1e, align 4
  %v1_1ac21 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ac21 = xor i32 %v1_1ac21, %v3_1ac1e
  %v3_1ac21 = icmp eq i32 %v2_1ac21, 0
  store i32 %v2_1ac21, i32* @eax, align 4
  br i1 %v3_1ac21, label %bb, label %dec_label_pc_1ac2a

bb:                                               ; preds = %dec_label_pc_1ac0a
  %v1_1ac28 = call i32 @function_1ac2f()
  br label %dec_label_pc_1ac2a

dec_label_pc_1ac2a:                               ; preds = %bb, %dec_label_pc_1ac0a
  %v2_1ac28 = phi i32 [ %v1_1ac28, %bb ], [ %v2_1ac21, %dec_label_pc_1ac0a ]
  ret i32 %v2_1ac28

; uselistorder directives
  uselistorder i32* @ecx, { 25, 129, 130, 138, 23, 30, 142, 145, 146, 150, 93, 94, 95, 111, 112, 151, 152, 123, 114, 0, 115, 116, 113, 160, 27, 81, 28, 6, 31, 19, 32, 33, 34, 35, 36, 38, 147, 153, 154, 40, 53, 54, 131, 132, 41, 86, 87, 44, 42, 20, 45, 46, 47, 48, 21, 22, 50, 51, 52, 139, 140, 55, 96, 57, 1, 60, 61, 58, 59, 127, 133, 134, 135, 88, 89, 90, 136, 137, 161, 8, 26, 128, 43, 155, 156, 101, 102, 83, 84, 117, 118, 119, 120, 85, 2, 162, 163, 121, 141, 69, 70, 126, 103, 66, 3, 67, 68, 74, 75, 91, 29, 76, 77, 78, 148, 4, 157, 158, 97, 98, 10, 164, 165, 71, 37, 79, 24, 72, 73, 80, 99, 39, 62, 5, 63, 64, 65, 107, 108, 49, 56, 82, 125, 92, 9, 11, 109, 110, 143, 144, 100, 106, 104, 105, 12, 7, 122, 124, 13, 14, 15, 16, 17, 149, 159, 18 }
}

define i32 @function_1ac2f() local_unnamed_addr {
dec_label_pc_1ac2f:
  %v0_1ac30 = load i32, i32* @eax, align 4
  ret i32 %v0_1ac30
}

define i32 @_Z10ReadVarIntI11CDataStreamyET0_RT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac31:
  %stack_var_-33 = alloca i32, align 4
  %v2_1ac61 = ptrtoint i32* %stack_var_-33 to i32
  br label %dec_label_pc_1ac59

dec_label_pc_1ac59:                               ; preds = %dec_label_pc_1acb4, %dec_label_pc_1ac31
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_1ac31 ], [ %v4_1acb4, %dec_label_pc_1acb4 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1ac31 ], [ %v6_1acb8, %dec_label_pc_1acb4 ]
  %v4_1ac6e = call i32 @unknown_1f637(i32 %arg1, i32 %v2_1ac61, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  %v3_1ac7d = mul i32 %storemerge, 128
  %v4_1ac7d = lshr i32 %stack_var_-44.0, ptrtoint (i32* @global_var_19.1222 to i32)
  %v5_1ac7d = or i32 %v3_1ac7d, %v4_1ac7d
  %v2_1ac81 = mul i32 %stack_var_-44.0, 128
  %v3_1ac84 = load i32, i32* %stack_var_-33, align 4
  %v1_1ac96 = urem i32 %v3_1ac84, 128
  %v2_1aca0 = or i32 %v1_1ac96, %v2_1ac81
  %v4_1acb0 = trunc i32 %v3_1ac84 to i8
  %v6_1acb0 = icmp slt i8 %v4_1acb0, 0
  %v1_1acb2 = icmp eq i1 %v6_1acb0, false
  br i1 %v1_1acb2, label %dec_label_pc_1acbe, label %dec_label_pc_1acb4

dec_label_pc_1acb4:                               ; preds = %dec_label_pc_1ac59
  %v4_1acb4 = add i32 %v2_1aca0, 1
  %v8_1acb4 = icmp eq i32 %v2_1aca0, -1
  %v5_1acb8 = zext i1 %v8_1acb4 to i32
  %v6_1acb8 = add i32 %v5_1acb8, %v5_1ac7d
  br label %dec_label_pc_1ac59

dec_label_pc_1acbe:                               ; preds = %dec_label_pc_1ac59
  store i32 %v2_1aca0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1acd0

bb:                                               ; preds = %dec_label_pc_1acbe
  %sext = mul i32 %v3_1ac84, 16777216
  %v4_1acce = sdiv i32 %sext, 16777216
  %v5_1acce = call i32 @function_1acd5(i32 %v4_1acce, i32 %v2_1aca0, i32 %v5_1ac7d)
  br label %dec_label_pc_1acd0

dec_label_pc_1acd0:                               ; preds = %bb, %dec_label_pc_1acbe
  %v6_1acce = phi i32 [ %v5_1acce, %bb ], [ %v2_1aca0, %dec_label_pc_1acbe ]
  ret i32 %v6_1acce

; uselistorder directives
  uselistorder i32 %v3_1ac84, { 0, 2, 1 }
}

define i32 @function_1acd5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1acd5:
  %v0_1acdc = load i32, i32* @eax, align 4
  ret i32 %v0_1acdc
}

define i32 @_ZN9__gnu_cxx13new_allocatorImEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1acde:
  %v0_1acf0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1acf0
}

define i32 @function_1acfa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1acfa:
  %zf.global-to-local = alloca i1, align 1
  %v0_1acfa = load i32, i32* @ebx, align 4
  %v1_1acfa = add i32 %v0_1acfa, 862319685
  %v2_1acfa = inttoptr i32 %v1_1acfa to i8*
  %v3_1acfa = load i8, i8* %v2_1acfa, align 1
  %v4_1acfa = udiv i8 %v3_1acfa, 32
  %v5_1acfa = mul i8 %v3_1acfa, 8
  %v6_1acfa = or i8 %v4_1acfa, %v5_1acfa
  store i8 %v6_1acfa, i8* %v2_1acfa, align 1
  %v10_1acfa = and i8 %v3_1acfa, 16
  %v11_1acfa = icmp ne i8 %v10_1acfa, 0
  %v0_1ad01 = load i32, i32* @eax, align 4
  %v1_1ad01 = trunc i32 %v0_1ad01 to i8
  %v3_1ad01 = zext i1 %v11_1acfa to i8
  %v4_1ad01 = add i8 %v1_1ad01, %v3_1ad01
  %v13_1ad01 = icmp eq i8 %v4_1ad01, 0
  store i1 %v13_1ad01, i1* %zf.global-to-local, align 1
  %v22_1ad01 = zext i8 %v4_1ad01 to i32
  %v24_1ad01 = and i32 %v0_1ad01, -256
  %v25_1ad01 = or i32 %v22_1ad01, %v24_1ad01
  store i32 %v25_1ad01, i32* @eax, align 4
  %v1_1ad03 = inttoptr i32 %v25_1ad01 to i8*
  %v2_1ad03 = load i8, i8* %v1_1ad03, align 1
  %v5_1ad03 = add i8 %v2_1ad03, %v4_1ad01
  %v15_1ad03 = icmp eq i8 %v5_1ad03, 0
  store i1 %v15_1ad03, i1* %zf.global-to-local, align 1
  store i8 %v5_1ad03, i8* %v1_1ad03, align 1
  %v0_1ad05 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1ad05, label %bb, label %dec_label_pc_1acfa.dec_label_pc_1ad07_crit_edge

dec_label_pc_1acfa.dec_label_pc_1ad07_crit_edge:  ; preds = %dec_label_pc_1acfa
  %v2_1ad05.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ad07

bb:                                               ; preds = %dec_label_pc_1acfa
  %v1_1ad05 = call i32 @function_1ad0c()
  br label %dec_label_pc_1ad07

dec_label_pc_1ad07:                               ; preds = %dec_label_pc_1acfa.dec_label_pc_1ad07_crit_edge, %bb
  %v2_1ad05 = phi i32 [ %v2_1ad05.pre, %dec_label_pc_1acfa.dec_label_pc_1ad07_crit_edge ], [ %v1_1ad05, %bb ]
  ret i32 %v2_1ad05

; uselistorder directives
  uselistorder i8 %v3_1acfa, { 2, 0, 1 }
  uselistorder i8 16, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1ad07, { 1, 0 }
}

define i32 @function_1ad0c() local_unnamed_addr {
dec_label_pc_1ad0c:
  %v0_1ad0d = load i32, i32* @eax, align 4
  ret i32 %v0_1ad0d
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad0e:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_1ad25 = ptrtoint i32* %stack_var_-32 to i32
  %v1_1ad2b = call i32 @unknown_35ed2(i32 %v2_1ad25)
  %v1_1ad30 = inttoptr i32 %v1_1ad2b to i32*
  %v2_1ad30 = load i32, i32* %v1_1ad30, align 4
  ret i32 %v2_1ad30
}

define i32 @function_1ad34(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ad34:
  %v0_1ad35 = load i32, i32* @edx, align 4
  %v1_1ad35 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1ad35 = icmp eq i32 %v1_1ad35, %v0_1ad35
  br i1 %v3_1ad35, label %bb, label %dec_label_pc_1ad34.dec_label_pc_1ad3e_crit_edge

dec_label_pc_1ad34.dec_label_pc_1ad3e_crit_edge:  ; preds = %dec_label_pc_1ad34
  %v2_1ad3c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ad3e

bb:                                               ; preds = %dec_label_pc_1ad34
  %v1_1ad3c = call i32 @function_1ad43()
  br label %dec_label_pc_1ad3e

dec_label_pc_1ad3e:                               ; preds = %dec_label_pc_1ad34.dec_label_pc_1ad3e_crit_edge, %bb
  %v2_1ad3c = phi i32 [ %v2_1ad3c.pre, %dec_label_pc_1ad34.dec_label_pc_1ad3e_crit_edge ], [ %v1_1ad3c, %bb ]
  ret i32 %v2_1ad3c

; uselistorder directives
  uselistorder label %dec_label_pc_1ad3e, { 1, 0 }
}

define i32 @function_1ad43() local_unnamed_addr {
dec_label_pc_1ad43:
  %v0_1ad44 = load i32, i32* @eax, align 4
  ret i32 %v0_1ad44
}

define i32 @_ZNSt10_Iter_baseIP6CTxOutLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad45:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ad6b

bb:                                               ; preds = %dec_label_pc_1ad45
  %v2_1ad69 = call i32 @function_1ad70(i32 %arg1)
  br label %dec_label_pc_1ad6b

dec_label_pc_1ad6b:                               ; preds = %bb, %dec_label_pc_1ad45
  %v3_1ad69 = phi i32 [ %v2_1ad69, %bb ], [ %arg1, %dec_label_pc_1ad45 ]
  ret i32 %v3_1ad69
}

define i32 @function_1ad70(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad70:
  %v0_1ad71 = load i32, i32* @eax, align 4
  ret i32 %v0_1ad71
}

define i32 @_ZN17CScriptCompressor11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ad72:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v2_1ada3 = ptrtoint i32* %stack_var_-28 to i32
  %v1_1ada9 = call i32 @unknown_241ed(i32 %v2_1ada3)
  %v2_1adae = ptrtoint i32* %stack_var_-24 to i32
  %v2_1adb8 = call i32 @unknown_2421a(i32 %v2_1adae, i32 %v1_1ada9)
  %v1_1adc6 = call i32 @unknown_24261(i32 %v2_1adae)
  %v2_1add5 = call i32 @unknown_35f64(i32 %arg2, i32 %v1_1adc6)
  %v3_1adda = load i32, i32* %stack_var_-28, align 4
  %tmp116 = icmp ult i32 %v3_1adda, 6
  br i1 %tmp116, label %dec_label_pc_1ade6, label %bb

bb:                                               ; preds = %dec_label_pc_1ad72
  %v4_1ade0 = call i32 @function_1aeb4()
  br label %dec_label_pc_1ade6

dec_label_pc_1ade6:                               ; preds = %dec_label_pc_1ad72, %bb
  %v2_1ade6 = ptrtoint i32* %stack_var_-17 to i32
  %v1_1adec = call i32 @unknown_2313a(i32 %v2_1ade6)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_24261, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_2421a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_241ed, { 1, 0 }
  uselistorder label %dec_label_pc_1ade6, { 1, 0 }
}

define i32 @function_1ae1e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ae1e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ae1e = load i32, i32* @eax, align 4
  %v11_1ae1e = and i32 %v0_1ae1e, -24
  store i32 %v11_1ae1e, i32* %eax.global-to-local, align 4
  %v0_1ae20 = load i32, i32* @ebx, align 4
  %v1_1ae20 = add i32 %v0_1ae20, 1166868480
  %v2_1ae20 = inttoptr i32 %v1_1ae20 to i8*
  %v3_1ae20 = load i8, i8* %v2_1ae20, align 1
  %v4_1ae20 = add i8 %v3_1ae20, -13
  store i8 %v4_1ae20, i8* %v2_1ae20, align 1
  %v0_1ae27 = load i32, i32* %eax.global-to-local, align 4
  %v1_1ae2a = call i32 @unknown_23170(i32 %v0_1ae27)
  %v0_1ae2f = load i32, i32* @ebp, align 4
  %v1_1ae2f = add i32 %v0_1ae2f, -52
  store i32 %v1_1ae2f, i32* %eax.global-to-local, align 4
  %v1_1ae35 = call i32 @unknown_2261c(i32 %v1_1ae2f)
  %v0_1ae3e = load i32, i32* @ebp, align 4
  %v1_1ae3e = add i32 %v0_1ae3e, -52
  store i32 %v1_1ae3e, i32* %eax.global-to-local, align 4
  %v2_1ae44 = call i32 @unknown_23b82(i32 %v1_1ae3e, i32 %v1_1ae35)
  %v0_1ae53 = load i32, i32* @ebp, align 4
  %v1_1ae53 = add i32 %v0_1ae53, -52
  store i32 %v1_1ae53, i32* %eax.global-to-local, align 4
  %v2_1ae59 = call i32 @unknown_23b82(i32 %v1_1ae53, i32 0)
  %v0_1ae66 = load i32, i32* @ebp, align 4
  %v1_1ae66 = add i32 %v0_1ae66, -40
  store i32 %v1_1ae66, i32* %eax.global-to-local, align 4
  %v3_1ae6c = call i32 @unknown_1f206(i32 %v1_1ae66, i32 %v2_1ae59, i32 %v2_1ae44)
  %v0_1ae71 = load i32, i32* @ebp, align 4
  %v1_1ae71 = add i32 %v0_1ae71, -40
  store i32 %v1_1ae71, i32* %eax.global-to-local, align 4
  %v1_1ae77 = call i32 @unknown_23b55(i32 %v1_1ae71)
  store i32 %v1_1ae77, i32* %eax.global-to-local, align 4
  %v0_1ae80 = load i32, i32* @ebp, align 4
  %v1_1ae80 = add i32 %v0_1ae80, -64
  %v2_1ae80 = inttoptr i32 %v1_1ae80 to i32*
  %v3_1ae80 = load i32, i32* %v2_1ae80, align 4
  store i32 %v3_1ae80, i32* %eax.global-to-local, align 4
  %v2_1ae86 = call i32 @unknown_35fbe(i32 %v3_1ae80, i32 %v1_1ae77)
  store i32 %v2_1ae86, i32* %eax.global-to-local, align 4
  %v0_1ae8b = load i32, i32* @ebp, align 4
  %v1_1ae8b = add i32 %v0_1ae8b, -24
  %v2_1ae8b = inttoptr i32 %v1_1ae8b to i32*
  %v3_1ae8b = load i32, i32* %v2_1ae8b, align 4
  store i32 %v3_1ae8b, i32* %eax.global-to-local, align 4
  %v1_1ae8e = add i32 %v0_1ae8b, -52
  store i32 %v1_1ae8e, i32* @edx, align 4
  %v1_1ae99 = add i32 %v0_1ae8b, -60
  %v2_1ae99 = inttoptr i32 %v1_1ae99 to i32*
  %v3_1ae99 = load i32, i32* %v2_1ae99, align 4
  store i32 %v3_1ae99, i32* %eax.global-to-local, align 4
  ret i32 %v3_1ae99

; uselistorder directives
  uselistorder i32* @edx, { 81, 83, 78, 17, 1, 18, 66, 99, 100, 13, 12, 79, 47, 19, 20, 21, 22, 25, 84, 85, 86, 87, 88, 89, 90, 26, 28, 91, 52, 53, 80, 48, 74, 16, 82, 9, 95, 54, 67, 68, 69, 70, 8, 71, 72, 73, 92, 93, 75, 76, 49, 30, 15, 31, 96, 33, 97, 55, 56, 57, 34, 10, 98, 58, 11, 101, 2, 40, 3, 36, 59, 60, 41, 14, 42, 63, 23, 24, 27, 29, 102, 50, 51, 32, 35, 37, 38, 39, 43, 44, 45, 46, 64, 65, 0, 61, 62, 4, 5, 6, 7, 77, 94 }
}

define i32 @function_1aea4() local_unnamed_addr {
dec_label_pc_1aea4:
  %v0_1aea4 = load i32, i32* @ebp, align 4
  %v1_1aea4 = add i32 %v0_1aea4, -52
  %v1_1aeaa = call i32 @unknown_230c0(i32 %v1_1aea4)
  %v0_1aeaf = call i32 @function_1af6b()
  ret i32 %v0_1aeaf

; uselistorder directives
  uselistorder i32 -52, { 0, 25, 26, 27, 28, 23, 21, 22, 24, 38, 39, 40, 41, 33, 6, 7, 18, 8, 4, 5, 9, 10, 34, 35, 19, 20, 12, 36, 37, 29, 30, 11, 13, 31, 32, 14, 16, 17, 15, 1, 2, 3 }
}

define i32 @function_1aeb4() local_unnamed_addr {
dec_label_pc_1aeb4:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1aeb4 = load i32, i32* @ebp, align 4
  %v1_1aeb4 = add i32 %v0_1aeb4, -24
  %v2_1aeb4 = inttoptr i32 %v1_1aeb4 to i32*
  %v3_1aeb4 = load i32, i32* %v2_1aeb4, align 4
  %v1_1aeb7 = add i32 %v3_1aeb4, -6
  store i32 %v1_1aeb7, i32* %v2_1aeb4, align 4
  %v0_1aebd = load i32, i32* @ebp, align 4
  %v1_1aebd = add i32 %v0_1aebd, -24
  %v2_1aebd = inttoptr i32 %v1_1aebd to i32*
  %v3_1aebd = load i32, i32* %v2_1aebd, align 4
  %v1_1aec0 = add i32 %v0_1aebd, -60
  %v2_1aec0 = inttoptr i32 %v1_1aec0 to i32*
  %v3_1aec0 = load i32, i32* %v2_1aec0, align 4
  %v1_1aec3 = inttoptr i32 %v3_1aec0 to i32*
  %v2_1aec3 = load i32, i32* %v1_1aec3, align 4
  %v3_1aed4 = call i32 @unknown_24cf4(i32 %v2_1aec3, i32 %v3_1aebd, i32 0)
  %v0_1aed9 = load i32, i32* @ebp, align 4
  %v1_1aed9 = add i32 %v0_1aed9, -60
  %v2_1aed9 = inttoptr i32 %v1_1aed9 to i32*
  %v3_1aed9 = load i32, i32* %v2_1aed9, align 4
  %v1_1aedc = inttoptr i32 %v3_1aed9 to i32*
  %v2_1aedc = load i32, i32* %v1_1aedc, align 4
  %v1_1aee1 = call i32 @unknown_2261c(i32 %v2_1aedc)
  %v0_1aee6 = load i32, i32* @ebp, align 4
  %v1_1aee6 = add i32 %v0_1aee6, -60
  %v2_1aee6 = inttoptr i32 %v1_1aee6 to i32*
  %v3_1aee6 = load i32, i32* %v2_1aee6, align 4
  %v1_1aee9 = inttoptr i32 %v3_1aee6 to i32*
  %v2_1aee9 = load i32, i32* %v1_1aee9, align 4
  %v2_1aef2 = call i32 @unknown_23b82(i32 %v2_1aee9, i32 %v1_1aee1)
  store i32 %v2_1aef2, i32* %ebx.global-to-local, align 4
  %v0_1aef9 = load i32, i32* @ebp, align 4
  %v1_1aef9 = add i32 %v0_1aef9, -60
  %v2_1aef9 = inttoptr i32 %v1_1aef9 to i32*
  %v3_1aef9 = load i32, i32* %v2_1aef9, align 4
  %v1_1aefc = inttoptr i32 %v3_1aef9 to i32*
  %v2_1aefc = load i32, i32* %v1_1aefc, align 4
  %v2_1af09 = call i32 @unknown_23b82(i32 %v2_1aefc, i32 0)
  %v0_1af0e = load i32, i32* %ebx.global-to-local, align 4
  %v0_1af16 = load i32, i32* @ebp, align 4
  %v1_1af16 = add i32 %v0_1af16, -32
  %v3_1af1c = call i32 @unknown_1f206(i32 %v1_1af16, i32 %v2_1af09, i32 %v0_1af0e)
  %v0_1af21 = load i32, i32* @ebp, align 4
  %v1_1af21 = add i32 %v0_1af21, -32
  %v1_1af27 = call i32 @unknown_23b55(i32 %v1_1af21)
  %v0_1af30 = load i32, i32* @ebp, align 4
  %v1_1af30 = add i32 %v0_1af30, -64
  %v2_1af30 = inttoptr i32 %v1_1af30 to i32*
  %v3_1af30 = load i32, i32* %v2_1af30, align 4
  %v2_1af36 = call i32 @unknown_35fbe(i32 %v3_1af30, i32 %v1_1af27)
  %v0_1af3b = call i32 @function_1af6b()
  ret i32 %v0_1af3b

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_35fbe, { 1, 0 }
  uselistorder i32 (i32)* @unknown_23b55, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_1f206, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_23b82, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_2261c, { 1, 0 }
}

define i32 @function_1af3e() local_unnamed_addr {
dec_label_pc_1af3e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1af3e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1af3e
}

define i32 @function_1af55() local_unnamed_addr {
dec_label_pc_1af55:
  %eax.global-to-local = alloca i32, align 4
  %v0_1af55 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1af55
}

define i32 @function_1af6b() local_unnamed_addr {
dec_label_pc_1af6b:
  %v0_1af6b = load i32, i32* @ebp, align 4
  %v1_1af6b = add i32 %v0_1af6b, -12
  %v2_1af6b = inttoptr i32 %v1_1af6b to i32*
  %v3_1af6b = load i32, i32* %v2_1af6b, align 4
  %v1_1af6e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1af6e = xor i32 %v1_1af6e, %v3_1af6b
  %v3_1af6e = icmp eq i32 %v2_1af6e, 0
  store i32 %v2_1af6e, i32* @eax, align 4
  br i1 %v3_1af6e, label %bb, label %dec_label_pc_1af77

bb:                                               ; preds = %dec_label_pc_1af6b
  %v1_1af75 = call i32 @function_1af7c()
  br label %dec_label_pc_1af77

dec_label_pc_1af77:                               ; preds = %bb, %dec_label_pc_1af6b
  %v2_1af75 = phi i32 [ %v1_1af75, %bb ], [ %v2_1af6e, %dec_label_pc_1af6b ]
  ret i32 %v2_1af75
}

define i32 @function_1af7c() local_unnamed_addr {
dec_label_pc_1af7c:
  %v0_1af80 = load i32, i32* @eax, align 4
  ret i32 %v0_1af80
}

define i32 @_ZNK17CScriptCompressor9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1af82:
  %stack_var_-52 = alloca i32, align 4
  %v2_1afac = ptrtoint i32* %stack_var_-52 to i32
  %v1_1afb2 = call i32 @unknown_2329a(i32 %v2_1afac)
  ret i32 %v2_1afac
}

define i32 @function_1afbc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1afbc:
  %v0_1afbe = load i32, i32* @ebp, align 4
  %v1_1afbe = add i32 %v0_1afbe, -60
  %v2_1afbe = inttoptr i32 %v1_1afbe to i32*
  %v3_1afbe = load i32, i32* %v2_1afbe, align 4
  ret i32 %v3_1afbe
}

define i32 @function_1afc8() local_unnamed_addr {
dec_label_pc_1afc8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1afc8 = load i32, i32* %eax.global-to-local, align 4
  %v2_1afc8 = mul i32 %v0_1afc8, 8
  %v3_1afc8 = add i32 %v0_1afc8, 1166891380
  %v4_1afc8 = add i32 %v3_1afc8, %v2_1afc8
  %v5_1afc8 = inttoptr i32 %v4_1afc8 to i32*
  %v6_1afc8 = load i32, i32* %v5_1afc8, align 4
  %v7_1afc8 = add i32 %v6_1afc8, 1
  store i32 %v7_1afc8, i32* %v5_1afc8, align 4
  %v0_1afcf = load i32, i32* %ecx.global-to-local, align 4
  %v1_1afcf = add i32 %v0_1afcf, 1424499716
  %v2_1afcf = inttoptr i32 %v1_1afcf to i8*
  %v3_1afcf = load i8, i8* %v2_1afcf, align 1
  %v4_1afcf = udiv i8 %v3_1afcf, 2
  %v5_1afcf = shl i8 %v3_1afcf, 7
  %v6_1afcf = or i8 %v4_1afcf, %v5_1afcf
  store i8 %v6_1afcf, i8* %v2_1afcf, align 1
  %v0_1afd7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1afd7 = add i32 %v0_1afd7, -1929108412
  %v2_1afd7 = inttoptr i32 %v1_1afd7 to i8*
  %v3_1afd7 = load i8, i8* %v2_1afd7, align 1
  %v5_1afd7 = trunc i32 %v0_1afd7 to i8
  %v6_1afd7 = add i8 %v3_1afd7, %v5_1afd7
  store i8 %v6_1afd7, i8* %v2_1afd7, align 1
  %v0_1afdd = load i32, i32* %ebp.global-to-local, align 4
  %v1_1afdd = add i32 %v0_1afdd, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1afdd, i32* @ebp, align 4
  %v0_1afde = load i32, i32* %ecx.global-to-local, align 4
  %v1_1afde = add i32 %v0_1afde, -1410849788
  %v2_1afde = inttoptr i32 %v1_1afde to i8*
  %v3_1afde = load i8, i8* %v2_1afde, align 1
  %v4_1afde = udiv i8 %v3_1afde, 2
  %v5_1afde = shl i8 %v3_1afde, 7
  %v6_1afde = or i8 %v4_1afde, %v5_1afde
  store i8 %v6_1afde, i8* %v2_1afde, align 1
  %v0_1afe4 = load i32, i32* %eax.global-to-local, align 4
  %v1_1afe4 = trunc i32 %v0_1afe4 to i8
  %v0_1afe6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1afe6 = add i32 %v0_1afe6, 608487363
  %v2_1afe6 = inttoptr i32 %v1_1afe6 to i8*
  %v3_1afe6 = load i8, i8* %v2_1afe6, align 1
  %v5_1afe6 = trunc i32 %v0_1afe6 to i8
  %v6_1afe6 = add i8 %v3_1afe6, %v5_1afe6
  store i8 %v6_1afe6, i8* %v2_1afe6, align 1
  %v1_1afec1 = urem i32 %v0_1afe4, 256
  %sext = mul i32 %v0_1afe4, 16777216
  %v16_1afec = sdiv i32 %sext, 16777216
  %v17_1afec = and i32 %v16_1afec, -256
  %v18_1afec = or i32 %v17_1afec, %v1_1afec1
  store i32 %v18_1afec, i32* %eax.global-to-local, align 4
  %v1_1afee = inttoptr i32 %v18_1afec to i8*
  %v2_1afee = load i8, i8* %v1_1afee, align 1
  %v5_1afee = add i8 %v2_1afee, %v1_1afe4
  store i8 %v5_1afee, i8* %v1_1afee, align 1
  %v0_1aff0 = load i32, i32* @ebp, align 4
  %v1_1aff0 = add i32 %v0_1aff0, 76140613
  %v2_1aff0 = inttoptr i32 %v1_1aff0 to i8*
  %v3_1aff0 = load i8, i8* %v2_1aff0, align 1
  %v4_1aff0 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1aff0 = trunc i32 %v4_1aff0 to i8
  %v6_1aff0 = add i8 %v5_1aff0, %v3_1aff0
  store i8 %v6_1aff0, i8* %v2_1aff0, align 1
  %v0_1aff6 = load i32, i32* %eax.global-to-local, align 4
  %v11_1aff6 = and i32 %v0_1aff6, -24
  %v1_1aff8 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v11_1aff6, i32* %esi.global-to-local, align 4
  store i32 %v1_1aff8, i32* %eax.global-to-local, align 4
  %v0_1affb = load i32, i32* %ecx.global-to-local, align 4
  %v1_1affb = add i32 %v0_1affb, -1995955108
  %v2_1affb = inttoptr i32 %v1_1affb to i8*
  %v3_1affb = load i8, i8* %v2_1affb, align 1
  %v5_1affb = trunc i32 %v0_1affb to i8
  %v6_1affb = add i8 %v3_1affb, %v5_1affb
  store i8 %v6_1affb, i8* %v2_1affb, align 1
  %v0_1b004 = load i32, i32* @ebp, align 4
  %v1_1b004 = add i32 %v0_1b004, -36
  store i32 %v1_1b004, i32* %eax.global-to-local, align 4
  %v1_1b00a = call i32 @unknown_1f416(i32 %v1_1b004)
  %v0_1b00f = load i32, i32* @ebp, align 4
  %v1_1b00f = add i32 %v0_1b00f, -36
  store i32 %v1_1b00f, i32* %eax.global-to-local, align 4
  %v1_1b016 = add i32 %v0_1b00f, -64
  %v2_1b016 = inttoptr i32 %v1_1b016 to i32*
  %v3_1b016 = load i32, i32* %v2_1b016, align 4
  store i32 %v3_1b016, i32* %eax.global-to-local, align 4
  %v2_1b01c = call i32 @unknown_36228(i32 %v3_1b016, i32 %v1_1b00f)
  store i32 %v2_1b01c, i32* %eax.global-to-local, align 4
  %v0_1b021 = call i32 @function_1b0ca()
  store i32 %v0_1b021, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b021

; uselistorder directives
  uselistorder i8 %v3_1afde, { 1, 0 }
  uselistorder i8 %v3_1afcf, { 1, 0 }
  uselistorder i32 %v0_1afc8, { 1, 0 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 30, 28, 31, 29, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50, 53, 52, 55, 54, 57, 56, 59, 58, 61, 60, 63, 62, 65, 64, 67, 66 }
  uselistorder i32 256, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 8, { 7, 15, 10, 11, 12, 13, 0, 3, 1, 16, 17, 4, 2, 14, 8, 5, 6, 9 }
}

define i32 @function_1b026() local_unnamed_addr {
dec_label_pc_1b026:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1b026 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b026 = add i32 %v0_1b026, -60
  %v2_1b026 = inttoptr i32 %v1_1b026 to i32*
  %v3_1b026 = load i32, i32* %v2_1b026, align 4
  %v1_1b029 = inttoptr i32 %v3_1b026 to i32*
  %v2_1b029 = load i32, i32* %v1_1b029, align 4
  %v1_1b02e = call i32 @unknown_2282c(i32 %v2_1b029)
  %v1_1b033 = add i32 %v1_1b02e, 6
  %v1_1b036 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1b036 = add i32 %v1_1b036, -20
  %v3_1b036 = inttoptr i32 %v2_1b036 to i32*
  store i32 %v1_1b033, i32* %v3_1b036, align 4
  %v0_1b039 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b039 = add i32 %v0_1b039, -20
  %v1_1b03f = call i32 @unknown_243fd(i32 %v1_1b039)
  %v1_1b044 = add i32 %v0_1b039, -16
  %v2_1b04e = call i32 @unknown_2442a(i32 %v1_1b044, i32 %v1_1b03f)
  %v1_1b056 = add i32 %v0_1b039, -16
  %v1_1b05c = call i32 @unknown_24471(i32 %v1_1b056)
  %v0_1b065 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b065 = add i32 %v0_1b065, -64
  %v2_1b065 = inttoptr i32 %v1_1b065 to i32*
  %v3_1b065 = load i32, i32* %v2_1b065, align 4
  %v2_1b06b = call i32 @unknown_36282(i32 %v3_1b065, i32 %v1_1b05c)
  %v1_1b070 = add i32 %v0_1b065, -60
  %v2_1b070 = inttoptr i32 %v1_1b070 to i32*
  %v3_1b070 = load i32, i32* %v2_1b070, align 4
  %v1_1b073 = inttoptr i32 %v3_1b070 to i32*
  %v2_1b073 = load i32, i32* %v1_1b073, align 4
  %v1_1b078 = call i32 @unknown_2282c(i32 %v2_1b073)
  %v0_1b07d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b07d = add i32 %v0_1b07d, -60
  %v2_1b07d = inttoptr i32 %v1_1b07d to i32*
  %v3_1b07d = load i32, i32* %v2_1b07d, align 4
  %v1_1b080 = inttoptr i32 %v3_1b07d to i32*
  %v2_1b080 = load i32, i32* %v1_1b080, align 4
  %v2_1b089 = call i32 @unknown_23d92(i32 %v2_1b080, i32 %v1_1b078)
  %v0_1b090 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b090 = add i32 %v0_1b090, -60
  %v2_1b090 = inttoptr i32 %v1_1b090 to i32*
  %v3_1b090 = load i32, i32* %v2_1b090, align 4
  %v1_1b093 = inttoptr i32 %v3_1b090 to i32*
  %v2_1b093 = load i32, i32* %v1_1b093, align 4
  %v2_1b0a0 = call i32 @unknown_23d92(i32 %v2_1b093, i32 0)
  %v0_1b0ad = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b0ad = add i32 %v0_1b0ad, -28
  %v1_1b0b3 = call i32 @unknown_1f416(i32 %v1_1b0ad)
  %v1_1b0b8 = add i32 %v0_1b0ad, -28
  %v1_1b0bf = add i32 %v0_1b0ad, -64
  %v2_1b0bf = inttoptr i32 %v1_1b0bf to i32*
  %v3_1b0bf = load i32, i32* %v2_1b0bf, align 4
  %v2_1b0c5 = call i32 @unknown_36228(i32 %v3_1b0bf, i32 %v1_1b0b8)
  ret i32 %v2_1b0c5

; uselistorder directives
  uselistorder i32 %v0_1b0ad, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @unknown_36228, { 1, 0 }
  uselistorder i32 (i32)* @unknown_1f416, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_23d92, { 1, 0 }
  uselistorder i32 -64, { 0, 1, 2, 10, 48, 54, 12, 15, 55, 56, 16, 17, 28, 47, 50, 49, 51, 52, 53, 29, 30, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 36, 37, 45, 46, 43, 44, 38, 31, 32, 33, 3, 4, 5, 6, 7, 35, 8, 34, 41, 42, 40, 39, 9 }
  uselistorder i32 -16, { 1, 2, 79, 78, 80, 81, 36, 32, 31, 0, 33, 84, 85, 76, 20, 21, 22, 23, 43, 24, 44, 45, 46, 48, 82, 71, 25, 27, 28, 29, 30, 47, 34, 35, 49, 26, 77, 50, 51, 83, 39, 40, 55, 56, 57, 88, 89, 90, 86, 87, 58, 59, 74, 75, 62, 63, 64, 65, 66, 91, 92, 93, 41, 42, 72, 73, 37, 38, 3, 52, 53, 54, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 60, 61, 14, 15, 67, 68, 69, 70, 16, 17, 18, 19 }
  uselistorder i32 -20, { 4, 5, 94, 95, 96, 97, 38, 81, 39, 41, 42, 32, 33, 47, 34, 35, 48, 64, 65, 86, 73, 57, 58, 59, 60, 61, 62, 63, 91, 89, 90, 92, 36, 37, 66, 67, 82, 83, 84, 40, 7, 6, 8, 49, 50, 51, 52, 53, 54, 80, 70, 71, 72, 0, 93, 85, 68, 87, 74, 88, 44, 45, 46, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 55, 56, 78, 79, 69, 43, 3, 76, 75, 77, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 6, { 2, 0, 4, 3, 1 }
  uselistorder i32 (i32)* @unknown_2282c, { 1, 0 }
  uselistorder i32 -60, { 1, 2, 3, 4, 26, 22, 23, 24, 25, 95, 27, 28, 29, 103, 104, 30, 31, 58, 105, 106, 97, 98, 96, 100, 99, 101, 0, 5, 6, 7, 57, 59, 60, 102, 9, 8, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 50, 53, 54, 55, 56, 83, 84, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 90, 91, 85, 92, 93, 94, 77, 78, 61, 62, 10, 11, 81, 82, 79, 80, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
}

define i32 @function_1b0ca() local_unnamed_addr {
dec_label_pc_1b0ca:
  %v0_1b0ca = load i32, i32* @ebp, align 4
  %v1_1b0ca = add i32 %v0_1b0ca, -48
  %v1_1b0d0 = call i32 @unknown_232d0(i32 %v1_1b0ca)
  %v0_1b0d5 = load i32, i32* @ebp, align 4
  %v1_1b0d5 = add i32 %v0_1b0d5, -12
  %v2_1b0d5 = inttoptr i32 %v1_1b0d5 to i32*
  %v3_1b0d5 = load i32, i32* %v2_1b0d5, align 4
  %v1_1b0d8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b0d8 = xor i32 %v1_1b0d8, %v3_1b0d5
  %v3_1b0d8 = icmp eq i32 %v2_1b0d8, 0
  store i32 %v2_1b0d8, i32* @eax, align 4
  br i1 %v3_1b0d8, label %bb, label %dec_label_pc_1b0e1

bb:                                               ; preds = %dec_label_pc_1b0ca
  %v1_1b0df = call i32 @function_1b0ff()
  store i32 %v1_1b0df, i32* @eax, align 4
  br label %dec_label_pc_1b0e1

dec_label_pc_1b0e1:                               ; preds = %bb, %dec_label_pc_1b0ca
  %v0_1b0e1 = call i32 @function_1b0fa()
  ret i32 %v0_1b0e1

; uselistorder directives
  uselistorder i32 -48, { 0, 32, 33, 43, 44, 45, 46, 8, 9, 29, 10, 6, 15, 7, 39, 40, 30, 31, 18, 34, 41, 42, 35, 36, 19, 37, 38, 11, 12, 13, 14, 16, 17, 28, 20, 21, 22, 23, 24, 25, 26, 27, 1, 2, 3, 4, 5 }
}

define i32 @function_1b0e4() local_unnamed_addr {
dec_label_pc_1b0e4:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b0e4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b0e4
}

define i32 @function_1b0fa() local_unnamed_addr {
dec_label_pc_1b0fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b0ff() local_unnamed_addr {
dec_label_pc_1b0ff:
  %v0_1b103 = load i32, i32* @eax, align 4
  ret i32 %v0_1b103
}

define i32 @_Z11WriteVarIntI11CDataStreamyEvRT_T0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b104:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-26 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_1b14a = ptrtoint i32* %stack_var_-26 to i32
  br label %dec_label_pc_1b12e

dec_label_pc_1b12e:                               ; preds = %dec_label_pc_1b164, %dec_label_pc_1b104
  %stack_var_-60.0 = phi i32 [ %arg2, %dec_label_pc_1b104 ], [ %v1_1b171, %dec_label_pc_1b164 ]
  %stack_var_-56.0 = phi i32 [ %arg3, %dec_label_pc_1b104 ], [ %v4_1b174, %dec_label_pc_1b164 ]
  %storemerge = phi i8* [ null, %dec_label_pc_1b104 ], [ %v23_1b17d, %dec_label_pc_1b164 ]
  %v1_1b133 = urem i32 %stack_var_-60.0, 128
  %v11_1b136 = icmp eq i8* %storemerge, null
  %. = select i1 %v11_1b136, i32 0, i32 128
  %v2_1b148 = or i32 %., %v1_1b133
  %v5_1b14d = ptrtoint i8* %storemerge to i32
  %v6_1b14d = add i32 %v5_1b14d, %v2_1b14a
  store i32 %v6_1b14d, i32* %eax.global-to-local, align 4
  %v1_1b150 = trunc i32 %v2_1b148 to i8
  %v3_1b150 = inttoptr i32 %v6_1b14d to i8*
  store i8 %v1_1b150, i8* %v3_1b150, align 1
  %v10_1b152 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v10_1b152, label %dec_label_pc_1b158, label %dec_label_pc_1b164

dec_label_pc_1b158:                               ; preds = %dec_label_pc_1b12e
  %tmp113 = icmp ult i32 %stack_var_-60.0, 128
  br i1 %tmp113, label %dec_label_pc_1b183, label %dec_label_pc_1b164

dec_label_pc_1b164:                               ; preds = %dec_label_pc_1b12e, %dec_label_pc_1b158
  %v3_1b16a = udiv i32 %stack_var_-60.0, 128
  %v4_1b16a = shl i32 %stack_var_-56.0, ptrtoint (i32* @global_var_19.1222 to i32)
  %v5_1b16a = or i32 %v4_1b16a, %v3_1b16a
  %v2_1b16e = udiv i32 %stack_var_-56.0, 128
  %v1_1b171 = add i32 %v5_1b16a, -1
  %v5_1b171 = icmp ne i32 %v5_1b16a, 0
  store i32 %v1_1b171, i32* %eax.global-to-local, align 4
  %v2_1b174 = zext i1 %v5_1b171 to i32
  %v3_1b174 = add nsw i32 %v2_1b16e, -1
  %v4_1b174 = add nsw i32 %v3_1b174, %v2_1b174
  %v5_1b17d = add i32 %v5_1b14d, ptrtoint (i8** @global_var_1.1176 to i32)
  %v23_1b17d = inttoptr i32 %v5_1b17d to i8*
  br label %dec_label_pc_1b12e

dec_label_pc_1b183:                               ; preds = %dec_label_pc_1b158
  %v0_1b183 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b183

; uselistorder directives
  uselistorder i32 %v1_1b171, { 1, 0 }
  uselistorder i32 %v5_1b16a, { 1, 0 }
  uselistorder i32 %v5_1b14d, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 128, { 4, 5, 28, 0, 6, 9, 7, 8, 29, 1, 11, 10, 25, 12, 13, 15, 14, 17, 16, 30, 2, 19, 18, 26, 20, 21, 3, 22, 23, 31, 24, 27 }
  uselistorder i8* null, { 2, 1, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_1b164, { 1, 0 }
}

define i32 @function_1b184(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b184:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b184 = load i32, i32* @ebp, align 4
  %v1_1b184 = add i32 %v0_1b184, -22
  store i32 %v1_1b184, i32* %eax.global-to-local, align 4
  %v2_1b187 = add i32 %v0_1b184, -28
  %v3_1b187 = inttoptr i32 %v2_1b187 to i32*
  %v4_1b187 = load i32, i32* %v3_1b187, align 4
  %v5_1b187 = add i32 %v4_1b187, %v1_1b184
  store i32 %v5_1b187, i32* %eax.global-to-local, align 4
  %v1_1b196 = add i32 %v0_1b184, -44
  %v2_1b196 = inttoptr i32 %v1_1b196 to i32*
  %v3_1b196 = load i32, i32* %v2_1b196, align 4
  store i32 %v3_1b196, i32* %eax.global-to-local, align 4
  %v4_1b19c = call i32 @unknown_1fc72(i32 %v3_1b196, i32 %v5_1b187, i32 ptrtoint (i8** @global_var_1.1176 to i32))
  store i32 %v4_1b19c, i32* %eax.global-to-local, align 4
  %v0_1b1a1 = load i32, i32* @ebp, align 4
  %v1_1b1a1 = add i32 %v0_1b1a1, -28
  %v2_1b1a1 = inttoptr i32 %v1_1b1a1 to i32*
  %v3_1b1a1 = load i32, i32* %v2_1b1a1, align 4
  %v10_1b1a1 = icmp eq i32 %v3_1b1a1, 0
  %v1_1b1a5 = icmp eq i1 %v10_1b1a1, false
  %v2_1b1a5 = zext i1 %v1_1b1a5 to i32
  %v4_1b1a5 = and i32 %v4_1b19c, -256
  %v5_1b1a5 = or i32 %v2_1b1a5, %v4_1b1a5
  store i32 %v5_1b1a5, i32* %eax.global-to-local, align 4
  %v3_1b1a8 = load i32, i32* %v2_1b1a1, align 4
  %v4_1b1a8 = sub i32 %v3_1b1a8, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1b1a8, i32* %v2_1b1a1, align 4
  %v0_1b1ac = load i32, i32* %eax.global-to-local, align 4
  %v4_1b1ac = trunc i32 %v0_1b1ac to i8
  %v5_1b1ac = icmp eq i8 %v4_1b1ac, 0
  %v1_1b1ae = icmp eq i1 %v5_1b1ac, false
  br i1 %v1_1b1ae, label %bb, label %dec_label_pc_1b1b0

bb:                                               ; preds = %dec_label_pc_1b184
  %v3_1b1ae = call i32 @function_1b184(i32 %v3_1b196)
  store i32 %v3_1b1ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b1b0

dec_label_pc_1b1b0:                               ; preds = %bb, %dec_label_pc_1b184
  %v0_1b1b0 = load i32, i32* @ebp, align 4
  %v1_1b1b0 = add i32 %v0_1b1b0, -12
  %v2_1b1b0 = inttoptr i32 %v1_1b1b0 to i32*
  %v3_1b1b0 = load i32, i32* %v2_1b1b0, align 4
  store i32 %v3_1b1b0, i32* %eax.global-to-local, align 4
  %v1_1b1b3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b1b3 = xor i32 %v1_1b1b3, %v3_1b1b0
  %v3_1b1b3 = icmp eq i32 %v2_1b1b3, 0
  store i32 %v2_1b1b3, i32* @eax, align 4
  br i1 %v3_1b1b3, label %bb7, label %dec_label_pc_1b1bc

bb7:                                              ; preds = %dec_label_pc_1b1b0
  %v1_1b1ba = call i32 @function_1b1c1()
  store i32 %v1_1b1ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b1bc

dec_label_pc_1b1bc:                               ; preds = %bb7, %dec_label_pc_1b1b0
  %v2_1b1ba = phi i32 [ %v1_1b1ba, %bb7 ], [ %v2_1b1b3, %dec_label_pc_1b1b0 ]
  ret i32 %v2_1b1ba

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32)* @function_1b184, { 1, 0 }
  uselistorder i8 0, { 123, 124, 125, 13, 57, 126, 127, 60, 61, 14, 76, 22, 63, 9, 58, 59, 70, 71, 72, 73, 23, 137, 138, 107, 120, 84, 5, 85, 86, 87, 88, 89, 62, 128, 130, 0, 129, 131, 132, 133, 134, 135, 24, 25, 26, 113, 114, 27, 64, 67, 68, 69, 80, 81, 77, 15, 108, 74, 75, 139, 102, 6, 103, 65, 1, 66, 28, 29, 30, 31, 32, 33, 116, 117, 34, 35, 118, 119, 121, 122, 36, 37, 38, 39, 40, 41, 78, 79, 82, 10, 83, 16, 93, 2, 94, 95, 3, 91, 4, 90, 92, 96, 97, 98, 106, 42, 43, 44, 45, 46, 47, 48, 49, 50, 99, 7, 100, 101, 51, 21, 104, 105, 109, 8, 110, 111, 112, 140, 141, 52, 115, 53, 54, 18, 17, 19, 11, 20, 12, 55, 56, 136 }
  uselistorder i32 -44, { 48, 44, 45, 60, 61, 62, 54, 55, 18, 39, 40, 41, 19, 10, 11, 20, 12, 13, 14, 15, 16, 17, 21, 22, 56, 57, 42, 43, 26, 27, 46, 47, 29, 30, 25, 58, 59, 49, 50, 28, 31, 51, 52, 23, 24, 35, 36, 37, 38, 32, 33, 0, 1, 2, 53, 34, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @function_1b1c1() local_unnamed_addr {
dec_label_pc_1b1c1:
  %v0_1b1c2 = load i32, i32* @eax, align 4
  ret i32 %v0_1b1c2
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b1c4:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b1ea

bb:                                               ; preds = %dec_label_pc_1b1c4
  %v2_1b1e8 = call i32 @function_1b1ef(i32 %arg1)
  br label %dec_label_pc_1b1ea

dec_label_pc_1b1ea:                               ; preds = %bb, %dec_label_pc_1b1c4
  %v3_1b1e8 = phi i32 [ %v2_1b1e8, %bb ], [ %arg1, %dec_label_pc_1b1c4 ]
  ret i32 %v3_1b1e8
}

define i32 @function_1b1ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b1ef:
  %v0_1b1f0 = load i32, i32* @eax, align 4
  ret i32 %v0_1b1f0
}

define i32 @_ZN11CDataStreamrsI7CVarIntIjEEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b1f2:
  %v1_1b212 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1b212 = inttoptr i32 %v1_1b212 to i32*
  %v3_1b212 = load i32, i32* %v2_1b212, align 4
  %v1_1b218 = add i32 %arg1, 20
  %v2_1b218 = inttoptr i32 %v1_1b218 to i32*
  %v3_1b218 = load i32, i32* %v2_1b218, align 4
  %v4_1b230 = call i32 @unknown_30c50(i32 %arg1, i32 %arg2, i32 %v3_1b218, i32 %v3_1b212)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b244

bb:                                               ; preds = %dec_label_pc_1b1f2
  %v1_1b242 = call i32 @function_1b249()
  br label %dec_label_pc_1b244

dec_label_pc_1b244:                               ; preds = %bb, %dec_label_pc_1b1f2
  %v2_1b242 = phi i32 [ %v1_1b242, %bb ], [ %arg1, %dec_label_pc_1b1f2 ]
  ret i32 %v2_1b242

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_1b249() local_unnamed_addr {
dec_label_pc_1b249:
  %v0_1b24a = load i32, i32* @eax, align 4
  ret i32 %v0_1b24a
}

define i32 @_ZN11CDataStreamrsI9CFlatDataEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b24c:
  ret i32 %arg1
}

define i32 @function_1b274(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b274:
  %v0_1b274 = load i32, i32* @eax, align 4
  %v2_1b274 = load i1, i1* @cf, align 1
  %v3_1b274 = zext i1 %v2_1b274 to i32
  %v4_1b274 = add i32 %v0_1b274, 9
  %v5_1b274 = add i32 %v4_1b274, %v3_1b274
  %v2_1b277 = and i32 %v5_1b274, 12
  %v10_1b277 = and i32 %v0_1b274, -256
  %v11_1b277 = or i32 %v2_1b277, %v10_1b277
  %v0_1b27d = load i32, i32* @ebp, align 4
  %v1_1b27d = add i32 %v0_1b27d, -32
  %v2_1b27d = inttoptr i32 %v1_1b27d to i32*
  %v3_1b27d = load i32, i32* %v2_1b27d, align 4
  %v1_1b284 = add i32 %v0_1b27d, -28
  %v2_1b284 = inttoptr i32 %v1_1b284 to i32*
  %v3_1b284 = load i32, i32* %v2_1b284, align 4
  %v3_1b28a = call i32 @unknown_365a5(i32 %v3_1b284, i32 %v3_1b27d, i32 %v11_1b277)
  %v0_1b28f = load i32, i32* @ebp, align 4
  %v1_1b28f = add i32 %v0_1b28f, -28
  %v2_1b28f = inttoptr i32 %v1_1b28f to i32*
  %v3_1b28f = load i32, i32* %v2_1b28f, align 4
  store i32 %v3_1b28f, i32* @eax, align 4
  %v1_1b292 = add i32 %v0_1b28f, -12
  %v2_1b292 = inttoptr i32 %v1_1b292 to i32*
  %v3_1b292 = load i32, i32* %v2_1b292, align 4
  %v1_1b295 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1b295 = icmp eq i32 %v1_1b295, %v3_1b292
  br i1 %v3_1b295, label %bb, label %dec_label_pc_1b29e

bb:                                               ; preds = %dec_label_pc_1b274
  %v1_1b29c = call i32 @function_1b2a3()
  br label %dec_label_pc_1b29e

dec_label_pc_1b29e:                               ; preds = %bb, %dec_label_pc_1b274
  %v2_1b29c = phi i32 [ %v1_1b29c, %bb ], [ %v3_1b28f, %dec_label_pc_1b274 ]
  ret i32 %v2_1b29c

; uselistorder directives
  uselistorder i32 %v0_1b274, { 1, 0 }
}

define i32 @function_1b2a3() local_unnamed_addr {
dec_label_pc_1b2a3:
  %v0_1b2a4 = load i32, i32* @eax, align 4
  ret i32 %v0_1b2a4
}

define i32 @_ZN11CDataStreamlsI9CFlatDataEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b2a6:
  %v1_1b2c6 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1b2c6 = inttoptr i32 %v1_1b2c6 to i32*
  %v3_1b2c6 = load i32, i32* %v2_1b2c6, align 4
  %v1_1b2cc = add i32 %arg1, 20
  %v2_1b2cc = inttoptr i32 %v1_1b2cc to i32*
  %v3_1b2cc = load i32, i32* %v2_1b2cc, align 4
  %v4_1b2e4 = call i32 @unknown_321b8(i32 %arg1, i32 %arg2, i32 %v3_1b2cc, i32 %v3_1b2c6)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b2f8

bb:                                               ; preds = %dec_label_pc_1b2a6
  %v1_1b2f6 = call i32 @function_1b2fd()
  br label %dec_label_pc_1b2f8

dec_label_pc_1b2f8:                               ; preds = %bb, %dec_label_pc_1b2a6
  %v2_1b2f6 = phi i32 [ %v1_1b2f6, %bb ], [ %arg1, %dec_label_pc_1b2a6 ]
  ret i32 %v2_1b2f6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_1b2fd() local_unnamed_addr {
dec_label_pc_1b2fd:
  %v0_1b2fe = load i32, i32* @eax, align 4
  ret i32 %v0_1b2fe
}

define i32 @_ZN11CDataStreamlsI7CVarIntIjEEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b300:
  %v1_1b320 = add i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1b320 = inttoptr i32 %v1_1b320 to i32*
  %v3_1b320 = load i32, i32* %v2_1b320, align 4
  %v1_1b326 = add i32 %arg1, 20
  %v2_1b326 = inttoptr i32 %v1_1b326 to i32*
  %v3_1b326 = load i32, i32* %v2_1b326, align 4
  %v4_1b33e = call i32 @unknown_3275b(i32 %arg1, i32 %arg2, i32 %v3_1b326, i32 %v3_1b320)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b352

bb:                                               ; preds = %dec_label_pc_1b300
  %v1_1b350 = call i32 @function_1b357()
  br label %dec_label_pc_1b352

dec_label_pc_1b352:                               ; preds = %bb, %dec_label_pc_1b300
  %v2_1b350 = phi i32 [ %v1_1b350, %bb ], [ %arg1, %dec_label_pc_1b300 ]
  ret i32 %v2_1b350

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_1b357() local_unnamed_addr {
dec_label_pc_1b357:
  %v0_1b358 = load i32, i32* @eax, align 4
  ret i32 %v0_1b358
}

define i32 @_Z11UnserializeI11CDataStream9CFlatDataEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b359:
  ret i32 %arg3
}

define i32 @function_1b36e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b36e:
  %v0_1b36e = load i32, i32* @eax, align 4
  %v1_1b36e = load i32, i32* @ebp, align 4
  %v2_1b36e = add i32 %v1_1b36e, -36
  %v3_1b36e = inttoptr i32 %v2_1b36e to i32*
  store i32 %v0_1b36e, i32* %v3_1b36e, align 4
  %v0_1b371 = load i32, i32* @ebp, align 4
  %v1_1b371 = add i32 %v0_1b371, 20
  %v2_1b371 = inttoptr i32 %v1_1b371 to i32*
  %v3_1b371 = load i32, i32* %v2_1b371, align 4
  %v2_1b374 = add i32 %v0_1b371, -40
  %v3_1b374 = inttoptr i32 %v2_1b374 to i32*
  store i32 %v3_1b371, i32* %v3_1b374, align 4
  %v0_1b377 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1b37d = load i32, i32* @ebp, align 4
  %v2_1b37d = add i32 %v1_1b37d, -12
  %v3_1b37d = inttoptr i32 %v2_1b37d to i32*
  store i32 %v0_1b377, i32* %v3_1b37d, align 4
  %v0_1b382 = load i32, i32* @ebp, align 4
  %v1_1b382 = add i32 %v0_1b382, -40
  %v2_1b382 = inttoptr i32 %v1_1b382 to i32*
  %v3_1b382 = load i32, i32* %v2_1b382, align 4
  %v1_1b389 = add i32 %v0_1b382, -36
  %v2_1b389 = inttoptr i32 %v1_1b389 to i32*
  %v3_1b389 = load i32, i32* %v2_1b389, align 4
  %v1_1b390 = add i32 %v0_1b382, -28
  %v2_1b390 = inttoptr i32 %v1_1b390 to i32*
  %v3_1b390 = load i32, i32* %v2_1b390, align 4
  %v1_1b397 = add i32 %v0_1b382, -32
  %v2_1b397 = inttoptr i32 %v1_1b397 to i32*
  %v3_1b397 = load i32, i32* %v2_1b397, align 4
  %v4_1b39d = call i32 @unknown_3670f(i32 %v3_1b397, i32 %v3_1b390, i32 %v3_1b389, i32 %v3_1b382)
  %v0_1b3a2 = load i32, i32* @ebp, align 4
  %v1_1b3a2 = add i32 %v0_1b3a2, -12
  %v2_1b3a2 = inttoptr i32 %v1_1b3a2 to i32*
  %v3_1b3a2 = load i32, i32* %v2_1b3a2, align 4
  %v1_1b3a5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b3a5 = xor i32 %v1_1b3a5, %v3_1b3a2
  %v3_1b3a5 = icmp eq i32 %v2_1b3a5, 0
  store i32 %v2_1b3a5, i32* @eax, align 4
  br i1 %v3_1b3a5, label %bb, label %dec_label_pc_1b3ae

bb:                                               ; preds = %dec_label_pc_1b36e
  %v1_1b3ac = call i32 @function_1b3b3()
  br label %dec_label_pc_1b3ae

dec_label_pc_1b3ae:                               ; preds = %bb, %dec_label_pc_1b36e
  %v2_1b3ac = phi i32 [ %v1_1b3ac, %bb ], [ %v2_1b3a5, %dec_label_pc_1b36e ]
  ret i32 %v2_1b3ac

; uselistorder directives
  uselistorder i32 %v0_1b382, { 1, 0, 2, 3 }
  uselistorder i32 -32, { 168, 56, 7, 8, 26, 82, 27, 41, 23, 24, 25, 201, 21, 22, 86, 51, 48, 49, 50, 173, 174, 175, 3, 181, 10, 198, 139, 149, 186, 31, 150, 34, 126, 35, 36, 37, 38, 39, 40, 32, 33, 47, 52, 53, 54, 55, 13, 14, 106, 107, 57, 58, 59, 93, 65, 9, 137, 68, 69, 70, 18, 74, 72, 73, 0, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89, 90, 91, 171, 172, 94, 95, 11, 96, 163, 164, 42, 165, 17, 15, 16, 104, 170, 151, 12, 156, 157, 158, 160, 161, 162, 167, 169, 46, 60, 61, 62, 63, 64, 176, 20, 116, 117, 118, 182, 183, 177, 119, 19, 80, 81, 142, 128, 153, 152, 154, 129, 130, 199, 2, 195, 196, 197, 155, 66, 97, 67, 141, 102, 103, 159, 143, 166, 100, 92, 101, 108, 43, 44, 45, 109, 178, 110, 184, 185, 179, 180, 187, 188, 189, 190, 191, 192, 193, 28, 29, 194, 140, 30, 113, 111, 112, 1, 114, 200, 71, 115, 105, 122, 135, 136, 4, 5, 123, 124, 125, 127, 98, 99, 144, 138, 6, 120, 121, 146, 147, 148, 131, 132, 133, 134, 145 }
  uselistorder i32 -40, { 54, 55, 57, 58, 34, 56, 78, 62, 6, 7, 76, 3, 4, 5, 42, 12, 13, 47, 16, 15, 17, 18, 66, 67, 8, 9, 70, 71, 39, 40, 19, 20, 21, 29, 30, 31, 32, 33, 35, 72, 73, 36, 37, 60, 61, 38, 63, 64, 49, 50, 51, 14, 53, 59, 0, 22, 23, 24, 25, 26, 27, 28, 65, 68, 69, 10, 11, 48, 77, 52, 45, 74, 75, 41, 43, 44, 1, 2, 46 }
  uselistorder i32 -36, { 119, 120, 2, 3, 57, 122, 123, 124, 125, 126, 28, 179, 26, 27, 131, 18, 177, 13, 14, 90, 109, 29, 30, 110, 31, 32, 33, 15, 4, 34, 16, 35, 37, 38, 39, 145, 146, 147, 148, 149, 150, 151, 152, 19, 20, 157, 158, 159, 160, 161, 162, 163, 115, 116, 117, 40, 41, 70, 71, 42, 43, 44, 63, 64, 89, 50, 17, 23, 24, 51, 0, 52, 53, 54, 55, 56, 58, 164, 165, 166, 167, 168, 169, 170, 59, 60, 61, 62, 129, 130, 65, 66, 21, 22, 68, 5, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 111, 112, 113, 118, 121, 128, 45, 46, 47, 48, 49, 144, 72, 73, 74, 153, 154, 25, 108, 79, 80, 81, 82, 83, 84, 85, 178, 175, 176, 91, 114, 107, 127, 36, 155, 156, 171, 172, 173, 174, 1, 6, 86, 69, 7, 8, 9, 76, 77, 78, 67, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 10, 11, 12, 75, 87, 88 }
}

define i32 @function_1b3b3() local_unnamed_addr {
dec_label_pc_1b3b3:
  %v0_1b3b4 = load i32, i32* @eax, align 4
  ret i32 %v0_1b3b4
}

define i32 @_ZN9CFlatData11UnserializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b3b6:
  ret i32 %arg2
}

define i32 @function_1b404(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b404:
  %v2_1b404 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1b404 = load i32, i32* @eax, align 4
  %v4_1b404 = trunc i32 %v3_1b404 to i8
  %v5_1b404 = add i8 %v4_1b404, %v2_1b404
  %v21_1b404 = inttoptr i32 %v3_1b404 to i8*
  store i8 %v5_1b404, i8* %v21_1b404, align 1
  %v0_1b406 = load i32, i32* @ebp, align 4
  %v1_1b406 = add i32 %v0_1b406, -12
  %v2_1b406 = inttoptr i32 %v1_1b406 to i32*
  %v3_1b406 = load i32, i32* %v2_1b406, align 4
  %v1_1b409 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b409 = xor i32 %v1_1b409, %v3_1b406
  store i1 false, i1* @cf, align 1
  %v3_1b409 = icmp eq i32 %v2_1b409, 0
  store i32 %v2_1b409, i32* @eax, align 4
  br i1 %v3_1b409, label %bb, label %dec_label_pc_1b412

bb:                                               ; preds = %dec_label_pc_1b404
  %v1_1b410 = call i32 @function_1b417()
  br label %dec_label_pc_1b412

dec_label_pc_1b412:                               ; preds = %bb, %dec_label_pc_1b404
  %v2_1b410 = phi i32 [ %v1_1b410, %bb ], [ %v2_1b409, %dec_label_pc_1b404 ]
  ret i32 %v2_1b410
}

define i32 @function_1b417() local_unnamed_addr {
dec_label_pc_1b417:
  %v0_1b418 = load i32, i32* @eax, align 4
  ret i32 %v0_1b418
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32 %arg1) {
dec_label_pc_1b438:
  ret i32 %arg1
}

define i32 @function_1b454(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b454:
  %v0_1b454 = load i32, i32* @eax, align 4
  %v11_1b454 = and i32 %v0_1b454, -76
  %v1_1b456 = inttoptr i32 %v11_1b454 to i32*
  %v2_1b456 = load i32, i32* %v1_1b456, align 4
  %v4_1b456 = add i32 %v2_1b456, %v11_1b454
  store i32 %v4_1b456, i32* %v1_1b456, align 4
  %v0_1b458 = load i32, i32* @ebp, align 4
  %v1_1b458 = add i32 %v0_1b458, -28
  %v2_1b458 = inttoptr i32 %v1_1b458 to i32*
  %v3_1b458 = load i32, i32* %v2_1b458, align 4
  %v1_1b45e = call i32 @unknown_1eeb2(i32 %v3_1b458)
  %v1_1b46d = call i32 @function_1b47a()
  %v0_1b46f = load i32, i32* @ebp, align 4
  %v1_1b46f = add i32 %v0_1b46f, -28
  %v2_1b46f = inttoptr i32 %v1_1b46f to i32*
  %v3_1b46f = load i32, i32* %v2_1b46f, align 4
  ret i32 %v3_1b46f

; uselistorder directives
  uselistorder i32 -76, { 0, 8, 7, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1, 23, 24, 25, 9, 10, 50, 51, 52, 53, 54, 55, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 4, 5, 6 }
}

define i32 @function_1b47a() local_unnamed_addr {
dec_label_pc_1b47a:
  %v0_1b47a = load i32, i32* @ebp, align 4
  %v1_1b47a = add i32 %v0_1b47a, -12
  %v2_1b47a = inttoptr i32 %v1_1b47a to i32*
  %v3_1b47a = load i32, i32* %v2_1b47a, align 4
  %v1_1b47d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b47d = xor i32 %v1_1b47d, %v3_1b47a
  %v3_1b47d = icmp eq i32 %v2_1b47d, 0
  store i32 %v2_1b47d, i32* @eax, align 4
  br i1 %v3_1b47d, label %bb, label %dec_label_pc_1b486

bb:                                               ; preds = %dec_label_pc_1b47a
  %v1_1b484 = call i32 @function_1b48b()
  br label %dec_label_pc_1b486

dec_label_pc_1b486:                               ; preds = %bb, %dec_label_pc_1b47a
  %v2_1b484 = phi i32 [ %v1_1b484, %bb ], [ %v2_1b47d, %dec_label_pc_1b47a ]
  ret i32 %v2_1b484
}

define i32 @function_1b48b() local_unnamed_addr {
dec_label_pc_1b48b:
  %v0_1b48c = load i32, i32* @eax, align 4
  ret i32 %v0_1b48c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32 %arg1) {
dec_label_pc_1b48e:
  %v1_1b4ab = call i32 @unknown_368c6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1b4cb() local_unnamed_addr {
dec_label_pc_1b4cb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b4cb = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b4cb = sub i32 %v0_1b4cb, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1b4cb, i32* %ecx.global-to-local, align 4
  %v0_1b4cd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b4cd
}

define i32 @function_1b4fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b4fe:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN12CCoinsViewDBD1Ev(i32* %arg1) {
dec_label_pc_1b510:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_1b4ec_type* @global_var_1b4ec.1181 to i32), i32* %arg1, align 4
  %v1_1b534 = add i32 %tmp99, ptrtoint (i8** @global_var_4.1177 to i32)
  ret i32 %v1_1b534

; uselistorder directives
  uselistorder i8** @global_var_4.1177, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_4.1177 to i32), { 266, 265, 264, 263, 262, 261, 260, 259, 4, 258, 257, 256, 255, 254, 5, 253, 6, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 9, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 7, 11, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 3, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 12, 135, 134, 0, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 10, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 77, 78, 8, 13, 76, 1, 75, 2, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 38, 41, 40, 37, 39, 36, 35, 34, 33, 32, 31, 30, 29, 27, 28, 26, 25, 14, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15 }
  uselistorder i32 ptrtoint (%vtable_1b4ec_type* @global_var_1b4ec.1181 to i32), { 1, 0 }
}

define i32 @function_1b538() local_unnamed_addr {
dec_label_pc_1b538:
  %v0_1b538 = load i32, i32* @eax, align 4
  %v2_1b538 = add i32 %v0_1b538, 36
  %v16_1b538 = and i32 %v2_1b538, 255
  %v18_1b538 = and i32 %v0_1b538, -256
  %v19_1b538 = or i32 %v16_1b538, %v18_1b538
  ret i32 %v19_1b538

; uselistorder directives
  uselistorder i32 %v0_1b538, { 1, 0 }
  uselistorder i32 36, { 0, 1, 2, 10, 6, 11, 12, 3, 4, 5, 13, 7, 8, 9 }
}

define i32 @function_1b561() local_unnamed_addr {
dec_label_pc_1b561:
  %v0_1b561 = call i32 @function_1b57a()
  ret i32 %v0_1b561
}

define i32 @function_1b564() local_unnamed_addr {
dec_label_pc_1b564:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b564 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b564
}

define i32 @function_1b57a() local_unnamed_addr {
dec_label_pc_1b57a:
  %v0_1b57a = load i32, i32* @ebp, align 4
  %v1_1b57a = add i32 %v0_1b57a, -12
  %v2_1b57a = inttoptr i32 %v1_1b57a to i32*
  %v3_1b57a = load i32, i32* %v2_1b57a, align 4
  %v1_1b57d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b57d = xor i32 %v1_1b57d, %v3_1b57a
  %v3_1b57d = icmp eq i32 %v2_1b57d, 0
  store i32 %v2_1b57d, i32* @eax, align 4
  br i1 %v3_1b57d, label %bb, label %dec_label_pc_1b586

bb:                                               ; preds = %dec_label_pc_1b57a
  %v1_1b584 = call i32 @function_1b58b()
  br label %dec_label_pc_1b586

dec_label_pc_1b586:                               ; preds = %bb, %dec_label_pc_1b57a
  %v2_1b584 = phi i32 [ %v1_1b584, %bb ], [ %v2_1b57d, %dec_label_pc_1b57a ]
  ret i32 %v2_1b584
}

define i32 @function_1b58b() local_unnamed_addr {
dec_label_pc_1b58b:
  %v0_1b590 = load i32, i32* @eax, align 4
  ret i32 %v0_1b590
}

define i32 @_ZN12CCoinsViewDBD0Ev(i32 %arg1) {
dec_label_pc_1b592:
  ret i32 %arg1
}

define i32 @function_1b59c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b59c:
  %v0_1b59c = load i32, i32* @ebp, align 4
  %v1_1b59c = add i32 %v0_1b59c, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v1_1b59c, i32* @ebp, align 4
  %v0_1b59d = load i32, i32* @eax, align 4
  ret i32 %v0_1b59d
}

define i32 @function_1b5a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b5a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b5a0 = load i32, i32* @eax, align 4
  %v1_1b5a0 = trunc i32 %v0_1b5a0 to i8
  %v2_1b5a0 = load i1, i1* @cf, align 1
  %v3_1b5a0 = zext i1 %v2_1b5a0 to i8
  %v4_1b5a0 = add i8 %v3_1b5a0, %v1_1b5a0
  %v22_1b5a0 = zext i8 %v4_1b5a0 to i32
  %v24_1b5a0 = and i32 %v0_1b5a0, -256
  %v25_1b5a0 = or i32 %v22_1b5a0, %v24_1b5a0
  store i32 %v25_1b5a0, i32* %eax.global-to-local, align 4
  %v1_1b5a2 = inttoptr i32 %v25_1b5a0 to i8*
  %v2_1b5a2 = load i8, i8* %v1_1b5a2, align 1
  %v5_1b5a2 = add i8 %v2_1b5a2, %v4_1b5a0
  store i8 %v5_1b5a2, i8* %v1_1b5a2, align 1
  %v0_1b5a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_1b5a4 = load i32, i32* @ebp, align 4
  %v2_1b5a4 = add i32 %v1_1b5a4, -12
  %v3_1b5a4 = inttoptr i32 %v2_1b5a4 to i32*
  store i32 %v0_1b5a4, i32* %v3_1b5a4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1b5a9 = load i32, i32* @ebp, align 4
  %v1_1b5a9 = add i32 %v0_1b5a9, -28
  %v2_1b5a9 = inttoptr i32 %v1_1b5a9 to i32*
  %v3_1b5a9 = load i32, i32* %v2_1b5a9, align 4
  store i32 %v3_1b5a9, i32* %eax.global-to-local, align 4
  %v1_1b5af = call i32 @unknown_36aa2(i32 %v3_1b5a9)
  store i32 %v1_1b5af, i32* %eax.global-to-local, align 4
  %v0_1b5b4 = load i32, i32* @ebp, align 4
  %v1_1b5b4 = add i32 %v0_1b5b4, -28
  %v2_1b5b4 = inttoptr i32 %v1_1b5b4 to i32*
  %v3_1b5b4 = load i32, i32* %v2_1b5b4, align 4
  store i32 %v3_1b5b4, i32* %eax.global-to-local, align 4
  ret i32 %v3_1b5b4

; uselistorder directives
  uselistorder i32 -28, { 255, 256, 55, 56, 273, 110, 111, 287, 288, 5, 6, 135, 276, 277, 68, 352, 353, 94, 67, 354, 64, 62, 63, 65, 66, 138, 139, 98, 99, 102, 103, 300, 301, 7, 38, 39, 126, 340, 325, 326, 327, 328, 329, 330, 331, 219, 244, 314, 315, 74, 75, 245, 76, 341, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 83, 93, 100, 101, 104, 105, 106, 107, 109, 309, 44, 316, 165, 166, 112, 113, 114, 146, 147, 278, 118, 214, 121, 37, 122, 123, 124, 125, 52, 53, 127, 128, 129, 130, 131, 132, 133, 136, 137, 140, 141, 317, 142, 143, 144, 295, 293, 294, 292, 0, 296, 148, 297, 149, 40, 41, 42, 43, 150, 151, 152, 263, 167, 264, 265, 49, 50, 51, 47, 48, 3, 162, 279, 280, 198, 246, 302, 257, 342, 258, 259, 262, 78, 79, 1, 80, 272, 266, 274, 275, 267, 289, 290, 8, 115, 116, 117, 303, 57, 58, 59, 60, 179, 180, 181, 182, 183, 184, 185, 318, 319, 320, 310, 311, 332, 9, 220, 304, 187, 188, 54, 134, 231, 247, 248, 249, 250, 251, 346, 343, 344, 345, 45, 46, 339, 252, 253, 254, 119, 120, 298, 299, 228, 158, 159, 261, 232, 268, 269, 270, 160, 161, 145, 281, 282, 283, 215, 216, 170, 171, 284, 95, 96, 97, 168, 305, 61, 169, 306, 312, 313, 307, 308, 321, 322, 323, 324, 333, 334, 335, 336, 221, 222, 223, 224, 69, 70, 71, 337, 338, 225, 153, 72, 73, 175, 173, 174, 2, 176, 177, 189, 190, 191, 172, 347, 348, 349, 350, 4, 108, 291, 178, 10, 11, 12, 13, 199, 163, 14, 208, 15, 16, 193, 194, 209, 210, 211, 212, 17, 351, 260, 18, 271, 19, 285, 286, 20, 21, 22, 23, 24, 25, 28, 26, 27, 226, 227, 195, 196, 197, 154, 155, 156, 157, 164, 233, 234, 235, 236, 239, 240, 213, 229, 217, 218, 29, 186, 30, 192, 241, 242, 243, 200, 201, 202, 31, 32, 203, 204, 205, 206, 207, 230, 237, 238, 33, 34, 35, 36 }
  uselistorder i32* @ebp, {}
  uselistorder i32 -256, { 114, 125, 6, 126, 20, 127, 122, 53, 1, 66, 44, 21, 131, 94, 95, 107, 108, 109, 55, 59, 61, 96, 72, 62, 45, 123, 64, 22, 52, 46, 67, 68, 69, 70, 134, 71, 7, 118, 58, 73, 80, 47, 115, 57, 56, 2, 120, 121, 124, 63, 29, 48, 110, 137, 136, 111, 113, 8, 128, 116, 117, 99, 119, 9, 77, 78, 10, 91, 79, 11, 82, 31, 12, 132, 133, 23, 135, 49, 50, 51, 84, 65, 24, 90, 81, 13, 112, 25, 26, 27, 54, 138, 28, 85, 14, 15, 97, 5, 30, 86, 87, 88, 60, 76, 0, 105, 74, 75, 92, 93, 16, 83, 32, 19, 33, 89, 17, 129, 98, 101, 100, 106, 3, 130, 4, 102, 103, 104, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 18 }
  uselistorder i1 false, { 218, 225, 226, 92, 223, 47, 224, 44, 115, 48, 116, 1, 2, 3, 93, 94, 95, 34, 96, 86, 87, 233, 234, 45, 237, 49, 238, 46, 4, 5, 6, 7, 97, 98, 191, 192, 207, 208, 209, 99, 100, 210, 211, 127, 50, 51, 130, 131, 132, 134, 135, 35, 136, 154, 52, 137, 53, 101, 54, 102, 8, 9, 10, 140, 55, 113, 142, 11, 143, 146, 147, 148, 149, 150, 114, 151, 152, 153, 227, 56, 230, 57, 228, 229, 12, 13, 231, 156, 58, 59, 103, 60, 104, 14, 15, 16, 161, 36, 162, 105, 61, 106, 62, 107, 17, 18, 19, 108, 123, 64, 124, 122, 63, 20, 21, 22, 125, 126, 221, 222, 239, 109, 245, 246, 37, 247, 243, 244, 65, 66, 110, 67, 111, 23, 24, 25, 212, 213, 216, 219, 196, 197, 198, 217, 157, 166, 38, 167, 129, 128, 175, 176, 177, 235, 236, 240, 241, 39, 242, 193, 194, 180, 26, 181, 112, 117, 68, 118, 27, 28, 29, 119, 69, 120, 30, 31, 32, 168, 40, 169, 214, 220, 121, 88, 70, 71, 133, 163, 41, 164, 165, 138, 139, 43, 141, 72, 144, 145, 73, 74, 75, 155, 158, 76, 160, 0, 159, 195, 248, 171, 33, 170, 172, 173, 174, 190, 77, 178, 179, 182, 78, 183, 184, 185, 186, 187, 188, 79, 80, 189, 206, 201, 199, 42, 200, 81, 82, 232, 83, 202, 203, 204, 205, 249, 250, 215, 89, 84, 90, 85, 91, 251, 252, 253 }
  uselistorder i1* @cf, { 47, 51, 10, 55, 38, 6, 45, 44, 56, 39, 20, 12, 14, 16, 17, 18, 22, 8, 48, 53, 11, 15, 2, 46, 1, 62, 63, 52, 49, 23, 24, 9, 26, 4, 28, 57, 58, 59, 60, 61, 40, 41, 32, 30, 50, 54, 3, 34, 35, 7, 36, 13, 42, 19, 21, 25, 5, 27, 0, 29, 31, 33, 37, 43 }
}

define i32 @function_1b5be(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b5be:
  %v0_1b5be = load i32, i32* @ebx, align 4
  %v1_1b5be = add i32 %v0_1b5be, 862319685
  %v2_1b5be = inttoptr i32 %v1_1b5be to i32*
  %v3_1b5be = load i32, i32* %v2_1b5be, align 4
  %v4_1b5be = add i32 %v3_1b5be, -1
  store i32 %v4_1b5be, i32* %v2_1b5be, align 4
  %v0_1b5c4 = load i32, i32* @eax, align 4
  %v1_1b5c4 = add i32 %v0_1b5c4, 20
  %v10_1b5c4 = icmp eq i32 %v1_1b5c4, 0
  store i32 %v1_1b5c4, i32* @eax, align 4
  br i1 %v10_1b5c4, label %bb, label %dec_label_pc_1b5cb

bb:                                               ; preds = %dec_label_pc_1b5be
  %v1_1b5c9 = call i32 @function_1b5d0()
  br label %dec_label_pc_1b5cb

dec_label_pc_1b5cb:                               ; preds = %bb, %dec_label_pc_1b5be
  %v2_1b5c9 = phi i32 [ %v1_1b5c9, %bb ], [ %v1_1b5c4, %dec_label_pc_1b5be ]
  ret i32 %v2_1b5c9

; uselistorder directives
  uselistorder i32 -1, { 14, 65, 66, 15, 16, 17, 18, 19, 10, 69, 20, 21, 22, 67, 23, 11, 78, 24, 25, 70, 26, 73, 27, 28, 68, 1, 29, 30, 2, 31, 32, 33, 34, 3, 35, 36, 4, 5, 6, 37, 38, 39, 7, 40, 41, 8, 42, 43, 44, 45, 46, 47, 48, 49, 50, 9, 71, 72, 51, 52, 53, 54, 55, 56, 57, 74, 12, 75, 13, 76, 77, 0, 58, 59, 60, 61, 62, 63, 64 }
  uselistorder i32 862319685, { 7, 8, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* @ebx, { 180, 203, 204, 184, 185, 186, 231, 232, 58, 76, 151, 224, 66, 68, 1, 69, 74, 70, 75, 63, 77, 79, 80, 81, 78, 0, 217, 83, 169, 170, 171, 91, 97, 92, 101, 102, 103, 107, 106, 108, 64, 65, 220, 205, 208, 209, 206, 207, 2, 187, 124, 188, 3, 59, 216, 225, 161, 166, 4, 165, 181, 182, 189, 190, 86, 87, 88, 98, 221, 218, 219, 142, 143, 139, 140, 141, 122, 226, 60, 61, 62, 150, 5, 6, 210, 211, 212, 213, 162, 214, 132, 7, 8, 172, 173, 174, 175, 176, 111, 9, 10, 191, 192, 193, 194, 195, 125, 126, 127, 112, 11, 12, 196, 197, 198, 199, 128, 73, 113, 114, 121, 44, 110, 82, 117, 13, 14, 15, 144, 145, 146, 147, 16, 17, 227, 163, 164, 18, 19, 20, 167, 168, 177, 178, 179, 183, 21, 22, 23, 116, 200, 201, 202, 24, 215, 25, 26, 27, 28, 118, 31, 29, 30, 119, 120, 222, 223, 32, 100, 33, 34, 35, 36, 131, 67, 71, 72, 84, 85, 109, 89, 90, 93, 94, 95, 96, 99, 37, 137, 104, 105, 133, 134, 135, 136, 38, 228, 129, 130, 39, 40, 41, 115, 42, 43, 123, 138, 45, 46, 229, 48, 47, 230, 49, 50, 148, 149, 51, 52, 53, 152, 153, 154, 155, 156, 157, 158, 159, 160, 54, 55, 56, 57 }
}

define i32 @function_1b5d0() local_unnamed_addr {
dec_label_pc_1b5d0:
  %v0_1b5d1 = load i32, i32* @eax, align 4
  ret i32 %v0_1b5d1
}

declare i32 @unknown_1b5f6(i32, i32) local_unnamed_addr

define i32 @function_1b65e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b65e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b7c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b7c6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_1b7fc(i32, i32) local_unnamed_addr

declare i32 @unknown_1b8ae(i32, i32) local_unnamed_addr

define i32 @function_1b8fe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b8fe:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_1b974:
  %v1_1b98e = add i32 %arg1, 12
  %v2_1b98e = inttoptr i32 %v1_1b98e to i32*
  %v3_1b98e = load i32, i32* %v2_1b98e, align 4
  %v1_1b994 = call i32 @unknown_2ff57(i32 %v3_1b98e)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b9a5

bb:                                               ; preds = %dec_label_pc_1b974
  %v1_1b9a3 = call i32 @function_1b9aa()
  br label %dec_label_pc_1b9a5

dec_label_pc_1b9a5:                               ; preds = %bb, %dec_label_pc_1b974
  %v2_1b9a3 = phi i32 [ %v1_1b9a3, %bb ], [ 0, %dec_label_pc_1b974 ]
  ret i32 %v2_1b9a3

; uselistorder directives
  uselistorder i32 12, { 3, 0, 11, 12, 13, 14, 71, 57, 58, 25, 15, 20, 18, 76, 4, 9, 6, 61, 62, 63, 64, 65, 66, 67, 68, 69, 16, 28, 72, 5, 10, 19, 30, 17, 21, 23, 7, 26, 73, 74, 70, 8, 77, 79, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 59, 60, 22, 24, 29, 50, 51, 31, 1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 75, 78, 2 }
}

define i32 @function_1b9a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b9a8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b9aa() local_unnamed_addr {
dec_label_pc_1b9aa:
  %v0_1b9ab = load i32, i32* @eax, align 4
  ret i32 %v0_1b9ab
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_1b9ac:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b9da

bb:                                               ; preds = %dec_label_pc_1b9ac
  %v3_1b9d8 = call i32 @function_1b9df(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1b9da

dec_label_pc_1b9da:                               ; preds = %bb, %dec_label_pc_1b9ac
  %v4_1b9d8 = phi i32 [ %v3_1b9d8, %bb ], [ 0, %dec_label_pc_1b9ac ]
  ret i32 %v4_1b9d8

; uselistorder directives
  uselistorder i1 true, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 440, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 441, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439 }
}

define i32 @function_1b9df(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b9df:
  %v0_1b9e0 = load i32, i32* @eax, align 4
  ret i32 %v0_1b9e0
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b9e2:
  %v5_1b9e2 = sub i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1b9e7 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.1175(i32 %v5_1b9e2)
  ret i32 %v2_1b9e7

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.1175, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv.1175(i32 %arg1) {
dec_label_pc_1b9ea:
  ret i32 0
}

define i32 @function_1ba0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ba0c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ba0e() local_unnamed_addr {
dec_label_pc_1ba0e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1ba0e = load i32, i32* %ecx.global-to-local, align 4
  %v1_1ba0e = add i32 %v0_1ba0e, -465204285
  %v2_1ba0e = inttoptr i32 %v1_1ba0e to i32*
  %v3_1ba0e = load i32, i32* %v2_1ba0e, align 4
  %v4_1ba0e = sub i32 %v3_1ba0e, ptrtoint (i8** @global_var_1.1176 to i32)
  store i32 %v4_1ba0e, i32* %v2_1ba0e, align 4
  %v0_1ba14 = load i32, i32* %eax.global-to-local, align 4
  %v0_1ba18 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1ba1b = call i32 @unknown_244e2(i32 %v0_1ba18, i32 %v0_1ba14)
  store i32 %v0_1ba18, i32* %eax.global-to-local, align 4
  %v1_1ba22 = icmp eq i32 %v0_1ba18, 0
  br i1 %v1_1ba22, label %dec_label_pc_1ba30, label %dec_label_pc_1ba26

dec_label_pc_1ba26:                               ; preds = %dec_label_pc_1ba0e
  %v1_1ba26 = add i32 %v0_1ba18, ptrtoint (i8** @global_var_18.1179 to i32)
  br label %dec_label_pc_1ba30

dec_label_pc_1ba30:                               ; preds = %dec_label_pc_1ba0e, %dec_label_pc_1ba26
  %storemerge = phi i32 [ %v1_1ba26, %dec_label_pc_1ba26 ], [ 0, %dec_label_pc_1ba0e ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_1ba30 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ba30 = add i32 %v0_1ba30, -12
  %v2_1ba30 = inttoptr i32 %v1_1ba30 to i32*
  %v3_1ba30 = load i32, i32* %v2_1ba30, align 4
  %v1_1ba33 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1ba33 = icmp eq i32 %v1_1ba33, %v3_1ba30
  br i1 %v3_1ba33, label %bb, label %dec_label_pc_1ba3c

bb:                                               ; preds = %dec_label_pc_1ba30
  %v1_1ba3a = call i32 @function_1ba57()
  store i32 %v1_1ba3a, i32* @eax, align 4
  br label %dec_label_pc_1ba3c

dec_label_pc_1ba3c:                               ; preds = %bb, %dec_label_pc_1ba30
  %v0_1ba3c = call i32 @function_1ba52()
  store i32 %v0_1ba3c, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ba3c

; uselistorder directives
  uselistorder i32 %v0_1ba18, { 2, 1, 0, 3 }
  uselistorder i32 20, { 82, 83, 20, 21, 22, 42, 51, 47, 48, 49, 0, 89, 25, 94, 67, 52, 23, 5, 57, 95, 84, 61, 62, 1, 24, 72, 87, 81, 26, 27, 28, 29, 50, 30, 31, 53, 54, 69, 90, 40, 70, 32, 33, 66, 64, 60, 34, 35, 36, 88, 37, 91, 92, 96, 38, 2, 39, 41, 43, 75, 6, 7, 3, 44, 45, 46, 8, 9, 10, 11, 12, 13, 4, 74, 76, 14, 55, 56, 58, 59, 15, 73, 85, 86, 63, 65, 16, 68, 17, 18, 71, 77, 78, 79, 80, 93, 97, 98, 19 }
  uselistorder i32* inttoptr (i32 20 to i32*), { 0, 1, 80, 295, 310, 311, 124, 327, 2, 45, 330, 46, 89, 154, 313, 314, 315, 90, 384, 385, 108, 386, 82, 83, 84, 85, 160, 161, 113, 147, 47, 117, 114, 115, 335, 3, 346, 58, 59, 144, 375, 365, 48, 282, 354, 355, 356, 93, 285, 94, 291, 298, 49, 376, 95, 96, 97, 98, 228, 4, 50, 99, 51, 100, 101, 102, 103, 104, 107, 145, 105, 111, 116, 118, 119, 121, 331, 347, 348, 122, 62, 357, 198, 199, 125, 126, 127, 175, 316, 245, 134, 135, 52, 53, 136, 137, 138, 139, 140, 54, 141, 130, 131, 77, 5, 146, 55, 148, 149, 150, 56, 151, 155, 157, 158, 159, 162, 163, 57, 164, 358, 166, 165, 167, 168, 169, 170, 332, 172, 173, 176, 87, 333, 177, 252, 178, 60, 300, 301, 302, 200, 61, 180, 303, 304, 317, 318, 74, 319, 70, 71, 246, 247, 13, 195, 320, 321, 322, 323, 324, 233, 248, 6, 336, 377, 293, 297, 63, 299, 309, 305, 312, 306, 112, 328, 64, 325, 128, 129, 337, 338, 349, 219, 220, 359, 350, 351, 366, 7, 253, 72, 339, 340, 222, 78, 152, 153, 269, 270, 283, 234, 379, 378, 373, 284, 65, 286, 66, 287, 288, 289, 132, 181, 133, 290, 8, 263, 264, 334, 189, 190, 191, 192, 296, 271, 67, 294, 68, 265, 266, 179, 69, 307, 193, 194, 171, 9, 188, 326, 10, 207, 201, 11, 249, 204, 109, 110, 341, 202, 342, 205, 206, 352, 353, 343, 344, 360, 361, 362, 363, 367, 368, 369, 370, 364, 254, 255, 256, 257, 73, 91, 371, 258, 259, 183, 92, 75, 213, 214, 76, 215, 223, 79, 210, 211, 380, 81, 196, 381, 382, 120, 329, 143, 278, 212, 86, 216, 217, 218, 12, 14, 15, 16, 88, 237, 238, 239, 17, 18, 19, 308, 20, 208, 21, 22, 23, 221, 24, 25, 26, 262, 225, 226, 227, 229, 230, 106, 184, 185, 186, 123, 187, 197, 272, 142, 279, 156, 174, 231, 182, 241, 242, 372, 267, 27, 374, 250, 203, 209, 28, 29, 30, 31, 32, 33, 224, 232, 280, 34, 235, 236, 35, 268, 273, 275, 274, 240, 243, 244, 251, 260, 261, 281, 345, 276, 277, 383, 36, 37, 38, 292, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 -12, { 2, 267, 3, 57, 271, 288, 289, 101, 303, 4, 41, 65, 133, 292, 293, 294, 66, 353, 354, 84, 355, 356, 60, 61, 62, 63, 140, 141, 90, 125, 94, 91, 92, 308, 5, 316, 46, 47, 122, 344, 334, 229, 254, 255, 324, 325, 70, 260, 71, 256, 265, 276, 345, 72, 73, 74, 75, 76, 209, 6, 77, 42, 78, 79, 80, 81, 123, 82, 88, 93, 95, 96, 98, 99, 305, 100, 48, 180, 181, 102, 103, 104, 105, 156, 295, 108, 224, 112, 113, 43, 114, 115, 116, 117, 118, 119, 44, 120, 109, 110, 53, 54, 7, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 142, 143, 45, 144, 326, 146, 145, 147, 148, 149, 150, 151, 306, 153, 154, 157, 64, 307, 158, 230, 159, 278, 279, 280, 85, 182, 161, 162, 281, 296, 52, 49, 50, 225, 15, 177, 297, 298, 299, 300, 214, 226, 8, 268, 269, 346, 270, 274, 275, 277, 286, 287, 282, 290, 291, 283, 89, 301, 106, 107, 309, 310, 58, 59, 317, 198, 199, 327, 318, 319, 335, 9, 231, 51, 311, 312, 201, 55, 131, 132, 242, 257, 215, 348, 349, 347, 341, 342, 258, 259, 261, 262, 263, 111, 163, 264, 10, 238, 172, 173, 174, 272, 273, 243, 244, 239, 240, 160, 284, 175, 176, 152, 11, 302, 171, 12, 187, 13, 0, 86, 87, 183, 313, 184, 186, 320, 321, 322, 323, 314, 315, 328, 329, 330, 331, 332, 336, 337, 338, 333, 232, 233, 234, 235, 67, 68, 339, 236, 237, 165, 69, 193, 194, 195, 202, 56, 190, 191, 192, 350, 178, 351, 97, 304, 121, 251, 196, 197, 14, 16, 179, 17, 18, 218, 219, 1, 19, 20, 21, 285, 22, 188, 23, 24, 25, 200, 26, 27, 204, 205, 207, 206, 208, 210, 211, 83, 166, 167, 168, 169, 170, 245, 252, 135, 155, 212, 164, 220, 221, 340, 343, 227, 185, 189, 28, 29, 30, 31, 32, 203, 213, 253, 216, 217, 241, 246, 249, 247, 248, 222, 223, 228, 250, 352, 33, 34, 266, 35, 36, 37, 38, 39, 40 }
  uselistorder i8** @global_var_1.1176, { 0, 3, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1.1176 to i32), { 384, 383, 382, 381, 35, 380, 379, 36, 378, 377, 376, 375, 374, 373, 37, 372, 58, 371, 370, 59, 369, 368, 367, 366, 365, 38, 39, 40, 41, 364, 363, 362, 361, 360, 359, 358, 42, 43, 357, 356, 355, 354, 353, 352, 0, 351, 350, 48, 60, 349, 348, 347, 61, 62, 346, 345, 344, 343, 342, 341, 340, 11, 12, 339, 338, 44, 337, 336, 335, 334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 13, 322, 321, 320, 319, 14, 318, 317, 316, 315, 45, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 15, 63, 64, 299, 49, 16, 46, 298, 297, 296, 295, 50, 294, 65, 51, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 52, 66, 276, 275, 273, 274, 272, 271, 270, 269, 268, 267, 67, 266, 265, 264, 263, 262, 3, 261, 4, 260, 1, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 68, 69, 246, 244, 245, 243, 17, 242, 241, 240, 239, 238, 237, 236, 235, 234, 18, 233, 47, 232, 231, 19, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 2, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 5, 204, 6, 203, 202, 72, 201, 200, 199, 198, 20, 21, 197, 196, 195, 194, 73, 193, 22, 192, 191, 190, 189, 188, 187, 186, 74, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 75, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 9, 149, 23, 148, 147, 146, 145, 144, 143, 24, 7, 32, 33, 34, 142, 8, 141, 140, 139, 138, 53, 10, 137, 136, 135, 134, 54, 133, 55, 132, 131, 25, 130, 129, 128, 127, 76, 126, 125, 124, 123, 122, 121, 56, 57, 120, 119, 118, 117, 116, 77, 78, 115, 114, 70, 71, 26, 113, 112, 111, 110, 109, 108, 107, 30, 31, 106, 27, 79, 28, 80, 105, 81, 104, 103, 82, 102, 101, 100, 99, 98, 83, 97, 96, 95, 94, 93, 92, 84, 91, 90, 89, 88, 87, 29, 86, 85 }
  uselistorder label %dec_label_pc_1ba30, { 1, 0 }
}

define i32 @function_1ba52() local_unnamed_addr {
dec_label_pc_1ba52:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ba57() local_unnamed_addr {
dec_label_pc_1ba57:
  %v0_1ba5d = load i32, i32* @eax, align 4
  ret i32 %v0_1ba5d
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba5e:
  %v5_1ba5e = sub i32 %arg1, ptrtoint (i8** @global_var_18.1179 to i32)
  %v2_1ba63 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v5_1ba5e)
  ret i32 %v2_1ba63

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_18.1179 to i32), { 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_1ba66:
  ret i32 0
}

define i32 @function_1ba8c() local_unnamed_addr {
dec_label_pc_1ba8c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ba8c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ba8c
}

define i32 @function_1ba96() local_unnamed_addr {
dec_label_pc_1ba96:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ba96 = load i32, i32* %eax.global-to-local, align 4
  %v11_1ba96 = and i32 %v0_1ba96, -24
  store i32 %v11_1ba96, i32* %eax.global-to-local, align 4
  ret i32 %v11_1ba96

; uselistorder directives
  uselistorder i32 %v11_1ba96, { 1, 0 }
  uselistorder i32 -24, { 0, 1, 42, 43, 100, 2, 96, 97, 112, 113, 114, 115, 12, 13, 14, 15, 106, 107, 108, 109, 110, 44, 91, 92, 93, 51, 52, 53, 54, 55, 56, 57, 45, 46, 73, 98, 80, 60, 61, 62, 63, 64, 65, 66, 67, 68, 11, 71, 69, 70, 72, 104, 101, 102, 103, 105, 74, 87, 88, 3, 4, 49, 48, 50, 16, 5, 58, 59, 47, 6, 89, 90, 94, 75, 76, 17, 18, 19, 20, 21, 22, 23, 111, 86, 24, 25, 26, 27, 95, 28, 99, 77, 29, 30, 31, 32, 33, 34, 35, 36, 78, 37, 38, 79, 82, 83, 81, 84, 85, 39, 7, 8, 9, 40, 41, 10 }
  uselistorder i32 1, { 201, 202, 205, 204, 203, 206, 133, 207, 208, 209, 144, 763, 172, 210, 211, 1068, 212, 214, 213, 215, 764, 216, 217, 684, 145, 767, 766, 765, 768, 146, 1080, 769, 142, 143, 43, 770, 42, 711, 218, 219, 220, 37, 1, 0, 221, 151, 152, 772, 771, 773, 222, 223, 224, 225, 160, 161, 775, 774, 780, 779, 778, 777, 776, 168, 685, 36, 781, 226, 227, 699, 697, 698, 121, 122, 228, 229, 230, 231, 712, 713, 1081, 782, 1082, 783, 784, 120, 118, 119, 232, 233, 234, 235, 236, 785, 34, 35, 787, 786, 2, 788, 48, 47, 46, 49, 38, 789, 687, 50, 51, 52, 790, 53, 54, 55, 56, 714, 157, 237, 791, 164, 793, 792, 137, 136, 138, 794, 715, 795, 690, 691, 692, 693, 75, 76, 78, 77, 796, 1069, 238, 239, 59, 60, 240, 241, 797, 799, 798, 242, 243, 244, 173, 174, 63, 3, 800, 717, 245, 246, 247, 248, 39, 40, 801, 249, 250, 251, 802, 803, 718, 805, 804, 1070, 252, 253, 254, 67, 65, 66, 1071, 255, 256, 719, 806, 177, 68, 69, 70, 71, 257, 258, 41, 259, 807, 163, 808, 260, 72, 73, 74, 720, 261, 262, 809, 702, 746, 747, 263, 811, 810, 686, 264, 265, 45, 80, 79, 81, 716, 813, 812, 178, 1072, 266, 267, 815, 814, 721, 141, 268, 722, 761, 101, 269, 270, 723, 271, 272, 273, 274, 818, 817, 816, 275, 276, 820, 819, 175, 822, 821, 179, 824, 823, 176, 277, 278, 828, 827, 826, 825, 149, 147, 148, 150, 832, 831, 830, 829, 180, 181, 182, 129, 131, 130, 279, 280, 281, 282, 44, 834, 833, 162, 139, 140, 835, 283, 284, 286, 287, 285, 1073, 5, 4, 6, 288, 836, 688, 689, 726, 289, 290, 62, 61, 57, 727, 291, 292, 295, 294, 293, 296, 297, 298, 7, 728, 299, 300, 301, 302, 303, 304, 695, 696, 701, 837, 729, 169, 170, 171, 1074, 305, 306, 706, 707, 123, 124, 730, 700, 8, 724, 125, 58, 725, 307, 308, 309, 310, 311, 838, 132, 731, 312, 732, 313, 314, 134, 135, 109, 110, 111, 733, 839, 315, 316, 317, 318, 734, 1075, 319, 320, 321, 322, 323, 842, 841, 840, 85, 324, 325, 326, 735, 87, 86, 88, 327, 328, 329, 736, 330, 331, 332, 333, 334, 335, 336, 337, 93, 94, 338, 92, 703, 95, 154, 155, 158, 159, 339, 156, 9, 10, 11, 12, 165, 167, 166, 340, 341, 843, 13, 737, 342, 343, 344, 844, 345, 845, 183, 14, 846, 848, 847, 346, 347, 98, 15, 348, 96, 349, 350, 850, 849, 351, 352, 353, 354, 355, 356, 694, 738, 739, 357, 64, 852, 851, 16, 760, 17, 358, 359, 360, 361, 740, 18, 362, 363, 364, 365, 368, 367, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 378, 380, 382, 381, 90, 89, 91, 853, 383, 384, 385, 386, 387, 857, 856, 855, 854, 858, 859, 860, 388, 389, 390, 391, 392, 393, 394, 395, 396, 862, 861, 863, 864, 397, 398, 399, 400, 401, 402, 403, 404, 869, 868, 867, 866, 865, 405, 406, 407, 408, 409, 410, 411, 872, 871, 870, 412, 415, 414, 413, 416, 873, 417, 420, 419, 418, 421, 874, 422, 423, 424, 875, 425, 426, 427, 429, 428, 430, 431, 432, 433, 880, 879, 878, 877, 876, 434, 437, 436, 435, 438, 881, 883, 882, 439, 884, 440, 441, 442, 443, 444, 445, 889, 888, 887, 886, 885, 446, 447, 448, 890, 449, 450, 451, 891, 452, 453, 454, 455, 893, 892, 457, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 896, 895, 894, 468, 469, 470, 471, 472, 473, 474, 899, 898, 897, 475, 476, 477, 478, 479, 97, 480, 481, 482, 902, 901, 900, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 906, 905, 904, 903, 493, 494, 495, 496, 497, 907, 103, 104, 498, 499, 500, 909, 908, 911, 910, 100, 913, 912, 99, 915, 914, 192, 916, 917, 19, 762, 919, 918, 501, 741, 921, 920, 502, 923, 922, 503, 504, 505, 82, 83, 84, 742, 925, 924, 186, 934, 933, 932, 931, 930, 929, 928, 927, 926, 506, 936, 935, 20, 939, 938, 937, 940, 507, 508, 941, 509, 510, 511, 512, 942, 513, 947, 946, 945, 944, 943, 756, 117, 704, 514, 515, 516, 517, 184, 954, 953, 952, 951, 950, 949, 948, 21, 22, 518, 519, 23, 187, 520, 521, 955, 956, 957, 958, 522, 188, 523, 524, 525, 526, 527, 959, 705, 528, 529, 530, 531, 753, 960, 532, 533, 534, 535, 536, 537, 538, 539, 961, 966, 965, 964, 963, 962, 106, 105, 107, 108, 540, 541, 543, 542, 968, 967, 544, 969, 24, 25, 977, 976, 975, 974, 973, 972, 971, 970, 197, 198, 979, 978, 190, 189, 982, 981, 980, 193, 194, 986, 985, 984, 983, 102, 748, 749, 545, 546, 987, 547, 548, 989, 988, 993, 992, 991, 990, 26, 27, 549, 550, 551, 1076, 552, 553, 994, 997, 996, 995, 185, 554, 998, 555, 556, 560, 557, 558, 559, 561, 562, 563, 564, 1006, 1005, 1004, 759, 1003, 1002, 1001, 1000, 999, 565, 566, 567, 1007, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 1008, 200, 28, 583, 584, 586, 585, 587, 153, 1009, 588, 589, 590, 591, 708, 592, 1011, 1010, 593, 595, 594, 1012, 116, 113, 114, 112, 115, 754, 755, 596, 597, 598, 599, 600, 758, 1015, 1014, 1013, 196, 601, 602, 603, 604, 1017, 1016, 1019, 1018, 1083, 1084, 744, 29, 745, 191, 1020, 1022, 1021, 30, 31, 32, 33, 199, 605, 606, 607, 750, 608, 609, 751, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 1027, 1026, 1025, 1024, 1023, 624, 1077, 627, 625, 628, 629, 626, 630, 631, 633, 632, 634, 635, 637, 636, 638, 1034, 1033, 1032, 1031, 1030, 1029, 1028, 195, 1035, 639, 640, 752, 641, 642, 643, 644, 128, 126, 127, 1078, 1079, 1037, 1036, 645, 648, 649, 647, 646, 650, 1041, 1040, 1039, 1038, 1042, 1043, 1046, 1045, 1044, 1048, 1047, 1049, 1050, 1051, 1052, 1054, 1053, 651, 652, 653, 654, 757, 656, 655, 657, 1056, 1055, 658, 660, 659, 661, 1058, 1057, 662, 663, 664, 665, 667, 666, 668, 1060, 1059, 709, 1062, 1061, 1063, 669, 672, 671, 670, 673, 1064, 1065, 674, 675, 676, 677, 678, 679, 1066, 1067, 680, 681, 682, 683, 710, 743 }
}

define i32 @function_1beb3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1beb3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_1bf40(i32) local_unnamed_addr

declare i32 @unknown_1bf61(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1bc58(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1bd14(i32) local_unnamed_addr

declare i32 @unknown_1bd20(i32) local_unnamed_addr

declare i32 @unknown_1bd4d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1bda5() local_unnamed_addr

declare i32 @unknown_1bdf7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1be34(i32, i32) local_unnamed_addr

declare i32 @unknown_1be56(i32) local_unnamed_addr

declare i32 @unknown_1bea8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1bfb3(i32, i32) local_unnamed_addr

declare i32 @unknown_1bffa(i32, i32) local_unnamed_addr

declare i32 @unknown_1c025(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c0a7() local_unnamed_addr

declare i32 @unknown_1c0f8(i32, i32) local_unnamed_addr

declare i32 @unknown_1c191() local_unnamed_addr

declare i32 @unknown_1c208(i32, i32) local_unnamed_addr

declare i32 @unknown_1c2fc() local_unnamed_addr

declare i32 @unknown_1c358(i32) local_unnamed_addr

declare i32 @unknown_1c44d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c4cd(i32) local_unnamed_addr

declare i32 @unknown_1c4e6() local_unnamed_addr

declare i32 @unknown_1c50f() local_unnamed_addr

declare i32 @unknown_1c541(i32) local_unnamed_addr

declare i32 @unknown_1c672(i32) local_unnamed_addr

declare i32 @unknown_1c6cc(i32) local_unnamed_addr

declare i32 @unknown_1c72c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c7dc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c892(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c8e4(i32, i32) local_unnamed_addr

declare i32 @unknown_1c8fd(i32) local_unnamed_addr

declare i32 @unknown_1c92a(i32, i32) local_unnamed_addr

declare i32 @unknown_1c948(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c971(i32) local_unnamed_addr

declare i32 @unknown_1c9d0(i32) local_unnamed_addr

declare i32 @unknown_1c9fe(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ca32(i32) local_unnamed_addr

declare i32 @unknown_1caf0() local_unnamed_addr

declare i32 @unknown_1caf8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1cbae(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1cbf6(i32) local_unnamed_addr

declare i32 @unknown_1cc41(i32) local_unnamed_addr

declare i32 @unknown_1cc6e(i32, i32) local_unnamed_addr

declare i32 @unknown_1ccb5(i32) local_unnamed_addr

declare i32 @unknown_1ccc3(i32, i32) local_unnamed_addr

declare i32 @unknown_1cd68(i32, i32) local_unnamed_addr

declare i32 @unknown_1ce10(i32) local_unnamed_addr

declare i32 @unknown_1ce5c() local_unnamed_addr

declare i32 @unknown_1ceb8() local_unnamed_addr

declare i32 @unknown_1cf64(i32, i32) local_unnamed_addr

declare i32 @unknown_1cfb4(i32, i32) local_unnamed_addr

declare i32 @unknown_1d006(i32) local_unnamed_addr

declare i32 @unknown_1d033(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d03e(i32) local_unnamed_addr

declare i32 @unknown_1d058(i32, i32) local_unnamed_addr

declare i32 @unknown_1d071(i32) local_unnamed_addr

declare i32 @unknown_1d09e(i32, i32) local_unnamed_addr

declare i32 @unknown_1d0ca() local_unnamed_addr

declare i32 @unknown_1d0e5(i32) local_unnamed_addr

declare i32 @unknown_1d126() local_unnamed_addr

declare i32 @unknown_1d14e(i32, i32) local_unnamed_addr

declare i32 @unknown_1d19e(i32, i32) local_unnamed_addr

declare i32 @unknown_1d1d2(i32, i32) local_unnamed_addr

declare i32 @unknown_1d204(i32) local_unnamed_addr

declare i32 @unknown_1d25a() local_unnamed_addr

declare i32 @unknown_1d26a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d2ba(i32, i32) local_unnamed_addr

declare i32 @unknown_1d2dd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d33e(i32) local_unnamed_addr

declare i32 @unknown_1d36a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d38c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d3a6(i32) local_unnamed_addr

declare i32 @unknown_1d428(i32) local_unnamed_addr

declare i32 @unknown_1d436(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d686(i32, i32) local_unnamed_addr

declare i32 @unknown_1d6d6(i32, i32) local_unnamed_addr

declare i32 @unknown_1d862(i32) local_unnamed_addr

declare i32 @unknown_1d88c(i32) local_unnamed_addr

declare i32 @unknown_1d8c2(i32) local_unnamed_addr

declare i32 @unknown_1d9d5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1dab4(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1db69(i32) local_unnamed_addr

declare i32 @unknown_1dd2e(i32) local_unnamed_addr

declare i32 @unknown_1de3a(i32) local_unnamed_addr

declare i32 @unknown_1de63(i32) local_unnamed_addr

declare i32 @unknown_1dec4(i32) local_unnamed_addr

declare i32 @unknown_1def4(i32, i32) local_unnamed_addr

declare i32 @unknown_1df96(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e055(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e0c8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e2a6(i32, i32) local_unnamed_addr

declare i32 @unknown_1e38a(i32) local_unnamed_addr

declare i32 @unknown_1e39a(i32) local_unnamed_addr

declare i32 @unknown_1e3b7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e3fd(i32) local_unnamed_addr

declare i32 @unknown_1e42a(i32, i32) local_unnamed_addr

declare i32 @unknown_1e445(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e471(i32) local_unnamed_addr

declare i32 @unknown_1e514(i32) local_unnamed_addr

declare i32 @unknown_1e555(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e57c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e64b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e778(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e824(i32) local_unnamed_addr

declare i32 @unknown_1e82d(i32) local_unnamed_addr

declare i32 @unknown_1e852(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e85a(i32, i32) local_unnamed_addr

declare i32 @unknown_1e866(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1e8a1(i32) local_unnamed_addr

declare i32 @unknown_1e91d(i32) local_unnamed_addr

declare i32 @unknown_1ea92(i32) local_unnamed_addr

declare i32 @unknown_1eaf6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1eb8f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ebd1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ebe7(i32) local_unnamed_addr

declare i32 @unknown_1ec14(i32, i32) local_unnamed_addr

declare i32 @unknown_1ec30(i32, i32) local_unnamed_addr

declare i32 @unknown_1ec31(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ec5b(i32) local_unnamed_addr

declare i32 @unknown_1ed44(i32, i32) local_unnamed_addr

declare i32 @unknown_1edf2(i32) local_unnamed_addr

declare i32 @unknown_1ee08(i32) local_unnamed_addr

declare i32 @unknown_1ee0a(i32) local_unnamed_addr

declare i32 @unknown_1ee42(i32) local_unnamed_addr

declare i32 @unknown_1ee6f(i32, i32) local_unnamed_addr

declare i32 @unknown_1eeb2(i32) local_unnamed_addr

declare i32 @unknown_1eeb6(i32) local_unnamed_addr

declare i32 @unknown_1ef27() local_unnamed_addr

declare i32 @unknown_1efb0(i32, i32) local_unnamed_addr

declare i32 @unknown_1f006(i32, i32) local_unnamed_addr

declare i32 @unknown_1f066(i32) local_unnamed_addr

declare i32 @unknown_1f148(i32) local_unnamed_addr

declare i32 @unknown_1f157(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f1aa(i32, i32) local_unnamed_addr

declare i32 @unknown_1f206(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f310(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f3a6(i32, i32) local_unnamed_addr

declare i32 @unknown_1f416(i32) local_unnamed_addr

declare i32 @unknown_1f49b(i32) local_unnamed_addr

declare i32 @unknown_1f49c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f4c8(i32, i32) local_unnamed_addr

declare i32 @unknown_1f50f(i32) local_unnamed_addr

declare i32 @unknown_1f510() local_unnamed_addr

declare i32 @unknown_1f565() local_unnamed_addr

declare i32 @unknown_1f56a(i32, i32) local_unnamed_addr

declare i32 @unknown_1f592(i32, i32) local_unnamed_addr

declare i32 @unknown_1f59a(i32) local_unnamed_addr

declare i32 @unknown_1f5c0(i32, i32) local_unnamed_addr

declare i32 @unknown_1f5cf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f5d9(i32) local_unnamed_addr

declare i32 @unknown_1f637(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f6a7(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f6fe(i32, i32) local_unnamed_addr

declare i32 @unknown_1f754(i32) local_unnamed_addr

declare i32 @unknown_1f826(i32) local_unnamed_addr

declare i32 @unknown_1f892(i32, i32) local_unnamed_addr

declare i32 @unknown_1f8c1(i32, i32) local_unnamed_addr

declare i32 @unknown_1f8e8(i32, i32) local_unnamed_addr

declare i32 @unknown_1f9bd(i32, i32) local_unnamed_addr

declare i32 @unknown_1fa3d(i32, i32) local_unnamed_addr

declare i32 @unknown_1fabd(i32, i32) local_unnamed_addr

declare i32 @unknown_1faf2(i32, i32) local_unnamed_addr

declare i32 @unknown_1fb3e(i32, i32) local_unnamed_addr

declare i32 @unknown_1fc23(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1fc72(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1fca0(i32, i32) local_unnamed_addr

declare i32 @unknown_1fcf0(i32, i32) local_unnamed_addr

declare i32 @unknown_1fd1e(i32, i32) local_unnamed_addr

declare i32 @unknown_1fd34(i32) local_unnamed_addr

declare i32 @unknown_1fd90(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1fda4(i32) local_unnamed_addr

declare i32 @unknown_1fdb8(i32, i32) local_unnamed_addr

declare i32 @unknown_1fdd1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1fe0e(i32, i32) local_unnamed_addr

declare i32 @unknown_1fe88(i32, i32) local_unnamed_addr

declare i32 @unknown_1fed2(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1fef6(i32, i32) local_unnamed_addr

declare i32 @unknown_2006c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2008a(i32) local_unnamed_addr

declare i32 @unknown_200b2(i32) local_unnamed_addr

declare i32 @unknown_200ec(i32, i32) local_unnamed_addr

declare i32 @unknown_2011f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20140(i32, i32) local_unnamed_addr

declare i32 @unknown_2041e(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20698(i32) local_unnamed_addr

declare i32 @unknown_20701(i32) local_unnamed_addr

declare i32 @unknown_20720(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2082c(i32, i32) local_unnamed_addr

declare i32 @unknown_20832(i32) local_unnamed_addr

declare i32 @unknown_20916(i32, i32) local_unnamed_addr

declare i32 @unknown_20966() local_unnamed_addr

declare i32 @unknown_209ef(i32) local_unnamed_addr

declare i32 @unknown_20a15(i32) local_unnamed_addr

declare i32 @unknown_20a42(i32, i32) local_unnamed_addr

declare i32 @unknown_20a89(i32) local_unnamed_addr

declare i32 @unknown_20aaa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20bcc(i32) local_unnamed_addr

declare i32 @unknown_20c42(i32, i32) local_unnamed_addr

declare i32 @unknown_20c48(i32, i32) local_unnamed_addr

declare i32 @unknown_20c60(i32, i32) local_unnamed_addr

declare i32 @unknown_20cc0(i32, i32) local_unnamed_addr

declare i32 @unknown_20e11(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20e45(i32) local_unnamed_addr

declare i32 @unknown_20e72(i32, i32) local_unnamed_addr

declare i32 @unknown_20eb9(i32) local_unnamed_addr

declare i32 @unknown_20ed2(i32, i32) local_unnamed_addr

declare i32 @unknown_20efb(i32) local_unnamed_addr

declare i32 @unknown_20f1c(i32, i32) local_unnamed_addr

declare i32 @unknown_20f28(i32, i32) local_unnamed_addr

declare i32 @unknown_20f6f(i32) local_unnamed_addr

declare i32 @unknown_210a5(i32, i32) local_unnamed_addr

declare i32 @unknown_210dd(i32) local_unnamed_addr

declare i32 @unknown_2110c(i32, i32) local_unnamed_addr

declare i32 @unknown_21156(i32) local_unnamed_addr

declare i32 @unknown_21183(i32, i32) local_unnamed_addr

declare i32 @unknown_211ca(i32) local_unnamed_addr

declare i32 @unknown_21235(i32, i32) local_unnamed_addr

declare i32 @unknown_2126c() local_unnamed_addr

declare i32 @unknown_212bc(i32) local_unnamed_addr

declare i32 @unknown_2130f(i32, i32) local_unnamed_addr

declare i32 @unknown_21320(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21439(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_214c4(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_218f5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21999(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_219de(i32, i32) local_unnamed_addr

declare i32 @unknown_21aef(i32) local_unnamed_addr

declare i32 @unknown_21b1e(i32) local_unnamed_addr

declare i32 @unknown_21b4b(i32, i32) local_unnamed_addr

declare i32 @unknown_21b92(i32) local_unnamed_addr

declare i32 @unknown_21c29(i32) local_unnamed_addr

declare i32 @unknown_21c67(i32, i32) local_unnamed_addr

declare i32 @unknown_21cfe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21d46(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_21dc8(i32, i32) local_unnamed_addr

declare i32 @unknown_21dd2(i32) local_unnamed_addr

declare i32 @unknown_21ea4(i32, i32) local_unnamed_addr

declare i32 @unknown_21ed4(i32) local_unnamed_addr

declare i32 @unknown_21f73() local_unnamed_addr

declare i32 @unknown_21fe7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22048(i32) local_unnamed_addr

declare i32 @unknown_22079(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22086(i32, i32) local_unnamed_addr

declare i32 @unknown_22127(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2218e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_221e6(i32) local_unnamed_addr

declare i32 @unknown_22216(i32) local_unnamed_addr

declare i32 @unknown_22246(i32) local_unnamed_addr

declare i32 @unknown_2225f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22260(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_222fa(i32) local_unnamed_addr

declare i32 @unknown_2242a(i32, i32) local_unnamed_addr

declare i32 @unknown_2250a(i32, i32) local_unnamed_addr

declare i32 @unknown_22554(i32, i32) local_unnamed_addr

declare i32 @unknown_22604(i32, i32) local_unnamed_addr

declare i32 @unknown_2261c(i32) local_unnamed_addr

declare i32 @unknown_22654(i32, i32) local_unnamed_addr

declare i32 @unknown_226d8(i32) local_unnamed_addr

declare i32 @unknown_2282c(i32) local_unnamed_addr

declare i32 @unknown_22841(i32, i32) local_unnamed_addr

declare i32 @unknown_2288b(i32) local_unnamed_addr

declare i32 @unknown_228f8(i32, i32) local_unnamed_addr

declare i32 @unknown_22948(i32, i32) local_unnamed_addr

declare i32 @unknown_229c0(i32) local_unnamed_addr

declare i32 @unknown_229c7(i32) local_unnamed_addr

declare i32 @unknown_22ac6(i32, i32) local_unnamed_addr

declare i32 @unknown_22b82(i32, i32) local_unnamed_addr

declare i32 @unknown_22bd2(i32, i32) local_unnamed_addr

declare i32 @unknown_22dbf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_22eaf(i32) local_unnamed_addr

declare i32 @unknown_22f68(i32, i32) local_unnamed_addr

declare i32 @unknown_2301e(i32, i32) local_unnamed_addr

declare i32 @unknown_230c0(i32) local_unnamed_addr

declare i32 @unknown_2313a(i32) local_unnamed_addr

declare i32 @unknown_23170(i32) local_unnamed_addr

declare i32 @unknown_2329a(i32) local_unnamed_addr

declare i32 @unknown_232d0(i32) local_unnamed_addr

declare i32 @unknown_2347a(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_234d0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_234d2(i32, i32) local_unnamed_addr

declare i32 @unknown_234da(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23549(i32) local_unnamed_addr

declare i32 @unknown_236b6(i32) local_unnamed_addr

declare i32 @unknown_236e9(i32) local_unnamed_addr

declare i32 @unknown_23904(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_239b6(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23a50(i32, i32) local_unnamed_addr

declare i32 @unknown_23aa7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23aba(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23b08(i32) local_unnamed_addr

declare i32 @unknown_23b1e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23b55(i32) local_unnamed_addr

declare i32 @unknown_23b68(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23b82(i32, i32) local_unnamed_addr

declare i32 @unknown_23be8(i32, i32) local_unnamed_addr

declare i32 @unknown_23cc9(i32) local_unnamed_addr

declare i32 @unknown_23cf6(i32, i32) local_unnamed_addr

declare i32 @unknown_23d3d(i32) local_unnamed_addr

declare i32 @unknown_23d87(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23d92(i32, i32) local_unnamed_addr

declare i32 @unknown_23dbd(i32) local_unnamed_addr

declare i32 @unknown_23dea(i32, i32) local_unnamed_addr

declare i32 @unknown_23e31(i32) local_unnamed_addr

declare i32 @unknown_23fba(i32) local_unnamed_addr

declare i32 @unknown_240c6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_240f9(i32) local_unnamed_addr

declare i32 @unknown_24126(i32, i32) local_unnamed_addr

declare i32 @unknown_24146(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2416d() local_unnamed_addr

declare i32 @unknown_24190(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_241ac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_241ed(i32) local_unnamed_addr

declare i32 @unknown_2421a(i32, i32) local_unnamed_addr

declare i32 @unknown_24261(i32) local_unnamed_addr

declare i32 @unknown_2427e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_242f4(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_243fd(i32) local_unnamed_addr

declare i32 @unknown_2442a(i32, i32) local_unnamed_addr

declare i32 @unknown_24471(i32) local_unnamed_addr

declare i32 @unknown_244e2(i32, i32) local_unnamed_addr

declare i32 @unknown_247e8(i32, i32) local_unnamed_addr

declare i32 @unknown_248ba(i32) local_unnamed_addr

declare i32 @unknown_248e9(i32, i32) local_unnamed_addr

declare i32 @unknown_24948(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_24ad2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_24b85(i32) local_unnamed_addr

declare i32 @unknown_24bb3() local_unnamed_addr

declare i32 @unknown_24c42(i32) local_unnamed_addr

declare i32 @unknown_24c71(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_24cf4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_24daf(i32, i32) local_unnamed_addr

declare i32 @unknown_24e0e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_24e4a(i32) local_unnamed_addr

declare i32 @unknown_24f16(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_24fbe(i32) local_unnamed_addr

declare i32 @unknown_24ff3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_250cc(i32, i32) local_unnamed_addr

declare i32 @unknown_25275(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_252f1(i32, i32) local_unnamed_addr

declare i32 @unknown_256c0(i32, i32) local_unnamed_addr

declare i32 @unknown_257af(i32, i32) local_unnamed_addr

declare i32 @unknown_25822(i32, i32) local_unnamed_addr

declare i32 @unknown_258c4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_258f0(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25976(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25a5b(i32, i32) local_unnamed_addr

declare i32 @unknown_25ae2(i32) local_unnamed_addr

declare i32 @unknown_25b17(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25bfc(i32, i32) local_unnamed_addr

declare i32 @unknown_25c6e() local_unnamed_addr

declare i32 @unknown_25cd0(i32) local_unnamed_addr

declare i32 @unknown_25d05(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25dca(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25e1c() local_unnamed_addr

declare i32 @unknown_25e69(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25ef7(i32) local_unnamed_addr

declare i32 @unknown_25f29(i32) local_unnamed_addr

declare i32 @unknown_25f3f(i32) local_unnamed_addr

declare i32 @unknown_25fe4(i32, i32) local_unnamed_addr

declare i32 @unknown_26059(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26111(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26144(i32, i32) local_unnamed_addr

declare i32 @unknown_261e2(i32, i32) local_unnamed_addr

declare i32 @unknown_26389(i32, i32) local_unnamed_addr

declare i32 @unknown_26424(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_264fc(i32) local_unnamed_addr

declare i32 @unknown_26667(i32, i32) local_unnamed_addr

declare i32 @unknown_267ec(i32) local_unnamed_addr

declare i32 @unknown_268aa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_268de(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26940() local_unnamed_addr

declare i32 @unknown_26a41(i32, i32) local_unnamed_addr

declare i32 @unknown_26a8a(i32) local_unnamed_addr

declare i32 @unknown_26b00(i32, i32) local_unnamed_addr

declare i32 @unknown_26b44(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26b48(i32, i32) local_unnamed_addr

declare i32 @unknown_26bea(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26ca6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26eee(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26f0c(i32, i32) local_unnamed_addr

declare i32 @unknown_271a4(i32, i32) local_unnamed_addr

declare i32 @unknown_271ea(i32, i32) local_unnamed_addr

declare i32 @unknown_2748d(i32, i32) local_unnamed_addr

declare i32 @unknown_274e2(i32) local_unnamed_addr

declare i32 @unknown_2751c(i32) local_unnamed_addr

declare i32 @unknown_278f7(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_27a08(i32, i32) local_unnamed_addr

declare i32 @unknown_27d93(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_27ffe(i32) local_unnamed_addr

declare i32 @unknown_2802e(i32, i32) local_unnamed_addr

declare i32 @unknown_2810c(i32) local_unnamed_addr

declare i32 @unknown_28115(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_281b4(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28269(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28368(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28407(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_284bd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2855c() local_unnamed_addr

declare i32 @unknown_28710(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_288ab(i32) local_unnamed_addr

declare i32 @unknown_28a54(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28ab0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28b0c(i32) local_unnamed_addr

declare i32 @unknown_28b42(i32) local_unnamed_addr

declare i32 @unknown_28b76(i32) local_unnamed_addr

declare i32 @unknown_28b78(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28bb8(i32) local_unnamed_addr

declare i32 @unknown_28c2e(i32) local_unnamed_addr

declare i32 @unknown_28c63(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28cba(i32, i32) local_unnamed_addr

declare i32 @unknown_28cf2(i32, i32) local_unnamed_addr

declare i32 @unknown_28d7e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28dfa(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28e3d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28f2e(i32) local_unnamed_addr

declare i32 @unknown_2927a(i32, i32) local_unnamed_addr

declare i32 @unknown_2936e(i32, i32) local_unnamed_addr

declare i32 @unknown_29460(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_294d1(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_295df(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_29754(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_29879(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_29959(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_29a6d(i32) local_unnamed_addr

declare i32 @unknown_29a88(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_29af0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_29b58() local_unnamed_addr

declare i32 @unknown_29bc0() local_unnamed_addr

declare i32 @unknown_29c28() local_unnamed_addr

declare i32 @unknown_2a0bc(i32, i32) local_unnamed_addr

declare i32 @unknown_2a0f1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2a199(i32, i32) local_unnamed_addr

declare i32 @unknown_2a1ce(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2a2ed(i32, i32) local_unnamed_addr

declare i32 @unknown_2a322(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2a44e(i32, i32) local_unnamed_addr

declare i32 @unknown_2a455(i32) local_unnamed_addr

declare i32 @unknown_2a483(i32, i32) local_unnamed_addr

declare i32 @unknown_2a6db(i32) local_unnamed_addr

declare i32 @unknown_2a75c(i32) local_unnamed_addr

declare i32 @unknown_2a849(i32) local_unnamed_addr

declare i32 @unknown_2a858(i32, i32) local_unnamed_addr

declare i32 @unknown_2a8fe(i32) local_unnamed_addr

declare i32 @unknown_2a933(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2aa14(i32) local_unnamed_addr

declare i32 @unknown_2aa41(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2aaec(i32) local_unnamed_addr

declare i32 @unknown_2abf4(i32, i32) local_unnamed_addr

declare i32 @unknown_2ac66(i32) local_unnamed_addr

declare i32 @unknown_2acf0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ae37(i32) local_unnamed_addr

declare i32 @unknown_2af1c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2b019(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2b0c9(i32) local_unnamed_addr

declare i32 @unknown_2b142(i32) local_unnamed_addr

declare i32 @unknown_2b296(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2b398(i32, i32) local_unnamed_addr

declare i32 @unknown_2b3cd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2b475(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2b5d8(i32) local_unnamed_addr

declare i32 @unknown_2b605(i32) local_unnamed_addr

declare i32 @unknown_2b6fe(i32) local_unnamed_addr

declare i32 @unknown_2b87f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2b970(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ba96(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2badc(i32, i32) local_unnamed_addr

declare i32 @unknown_2bb56(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2bbad(i32, i32) local_unnamed_addr

declare i32 @unknown_2bcc4(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2bd50(i32) local_unnamed_addr

declare i32 @unknown_2bd88(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2bdf3(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2be1f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2be80(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2bf30(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2bf96(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c0c2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c13a(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c2dc(i32, i32) local_unnamed_addr

declare i32 @unknown_2c34a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c381(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c3dd(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c439(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c48f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c715(i32) local_unnamed_addr

declare i32 @unknown_2c82f(i32, i32) local_unnamed_addr

declare i32 @unknown_2c92b(i32) local_unnamed_addr

declare i32 @unknown_2cab2(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2cb96(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2cc5a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2cc78(i32, i32) local_unnamed_addr

declare i32 @unknown_2cd2c(i32, i32) local_unnamed_addr

declare i32 @unknown_2cd7e(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ce2e(i32) local_unnamed_addr

declare i32 @unknown_2ce5f(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2cef7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2cf22(i32) local_unnamed_addr

declare i32 @unknown_2d04b(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d190(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d482(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d780(i32) local_unnamed_addr

declare i32 @unknown_2d830(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d8e0(i32) local_unnamed_addr

declare i32 @unknown_2d940(i32) local_unnamed_addr

declare i32 @unknown_2d9d6(i32, i32) local_unnamed_addr

declare i32 @unknown_2da76(i32, i32) local_unnamed_addr

declare i32 @unknown_2dadb(i32) local_unnamed_addr

declare i32 @unknown_2daec(i32) local_unnamed_addr

declare i32 @unknown_2db9d(i32, i32) local_unnamed_addr

declare i32 @unknown_2dc6c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e1f0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e4a2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e56f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e634(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e766(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e7ce(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ed39(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ee2c(i32, i32) local_unnamed_addr

declare i32 @unknown_2f13a(i32, i32) local_unnamed_addr

declare i32 @unknown_2f16b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f1a0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f22f(i32) local_unnamed_addr

declare i32 @unknown_2f291(i32) local_unnamed_addr

declare i32 @unknown_2f2af(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f49f(i32) local_unnamed_addr

declare i32 @unknown_2f5e7(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f80f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2fb3f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2fc06(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2fc7e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2fd1b(i32) local_unnamed_addr

declare i32 @unknown_2fd8a(i32) local_unnamed_addr

declare i32 @unknown_2fdbb(i32, i32) local_unnamed_addr

declare i32 @unknown_2fe12(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ff57(i32) local_unnamed_addr

declare i32 @unknown_2ff80(i32) local_unnamed_addr

declare i32 @unknown_2ffae(i32) local_unnamed_addr

declare i32 @unknown_3000c(i32) local_unnamed_addr

declare i32 @unknown_3007f() local_unnamed_addr

declare i32 @unknown_30099(i32) local_unnamed_addr

declare i32 @unknown_300ce(i32, i32) local_unnamed_addr

declare i32 @unknown_3015e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30164(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_301a6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_301fd(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3039f() local_unnamed_addr

declare i32 @unknown_3054f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_305fd(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_306f9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30701(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30894(i32) local_unnamed_addr

declare i32 @unknown_308fc(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30966(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30989(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30b10(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30b78(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30c50(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30db7(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30f0e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3100b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31309(i32) local_unnamed_addr

declare i32 @unknown_313cd(i32) local_unnamed_addr

declare i32 @unknown_31494(i32) local_unnamed_addr

declare i32 @unknown_314bd(i32) local_unnamed_addr

declare i32 @unknown_315e6(i32, i32) local_unnamed_addr

declare i32 @unknown_315ec(i32) local_unnamed_addr

declare i32 @unknown_31622(i32) local_unnamed_addr

declare i32 @unknown_31658(i32, i32) local_unnamed_addr

declare i32 @unknown_31ad0(i32) local_unnamed_addr

declare i32 @unknown_31af7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31b16(i32, i32) local_unnamed_addr

declare i32 @unknown_31b5d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31bc3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31d81(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31f78(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_320fb(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_321b8(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32585(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32639(i32) local_unnamed_addr

declare i32 @unknown_3275b(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32acb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32aea(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32da3(i32, i32) local_unnamed_addr

declare i32 @unknown_32e43(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32e9a() local_unnamed_addr

declare i32 @unknown_33008(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33026(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33171(i32, i32) local_unnamed_addr

declare i32 @unknown_33265(i32, i32) local_unnamed_addr

declare i32 @unknown_33357(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_335ff(i32) local_unnamed_addr

declare i32 @unknown_338a7(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_339b9(i32) local_unnamed_addr

declare i32 @unknown_33a7d(i32, i32) local_unnamed_addr

declare i32 @unknown_33c16(i32) local_unnamed_addr

declare i32 @unknown_33c3c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33c7b() local_unnamed_addr

declare i32 @unknown_33c7c(i32) local_unnamed_addr

declare i32 @unknown_33e11(i32) local_unnamed_addr

declare i32 @unknown_33e46(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33fa8(i32) local_unnamed_addr

declare i32 @unknown_33fdd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3409a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3415e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34271(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34306(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_343c1(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_347fb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34961(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34bf7() local_unnamed_addr

declare i32 @unknown_34cde(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34d28(i32, i32) local_unnamed_addr

declare i32 @unknown_35006(i32) local_unnamed_addr

declare i32 @unknown_350bb(i32) local_unnamed_addr

declare i32 @unknown_35212(i32, i32) local_unnamed_addr

declare i32 @unknown_353ec(i32) local_unnamed_addr

declare i32 @unknown_354b4(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35afd(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35cdc(i32) local_unnamed_addr

declare i32 @unknown_35ed2(i32) local_unnamed_addr

declare i32 @unknown_35f64(i32, i32) local_unnamed_addr

declare i32 @unknown_35fbe(i32, i32) local_unnamed_addr

declare i32 @unknown_36228(i32, i32) local_unnamed_addr

declare i32 @unknown_36282(i32, i32) local_unnamed_addr

declare i32 @unknown_365a5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3670f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_368c6(i32) local_unnamed_addr

declare i32 @unknown_36aa2(i32) local_unnamed_addr

define i32 @function_8d013376() local_unnamed_addr {
dec_label_pc_8d013376:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 0, 448, 585, 1, 408, 632, 55, 54, 892, 549, 586, 673, 885, 894, 907, 908, 463, 633, 449, 550, 587, 464, 634, 465, 466, 467, 546, 436, 440, 682, 735, 2, 895, 896, 897, 551, 962, 963, 701, 468, 441, 964, 679, 395, 552, 704, 3, 57, 56, 59, 58, 61, 60, 708, 705, 469, 442, 706, 917, 918, 409, 635, 63, 62, 450, 636, 393, 588, 589, 4, 928, 929, 930, 5, 64, 470, 935, 396, 397, 947, 405, 406, 637, 638, 66, 65, 68, 67, 70, 69, 6, 828, 553, 869, 554, 72, 71, 74, 73, 936, 471, 472, 937, 410, 685, 76, 75, 877, 686, 7, 411, 639, 8, 870, 555, 871, 872, 879, 78, 77, 9, 954, 10, 810, 11, 640, 473, 474, 694, 695, 641, 696, 697, 412, 642, 413, 643, 414, 698, 700, 727, 547, 703, 707, 475, 709, 710, 711, 80, 79, 12, 82, 81, 13, 84, 83, 86, 85, 712, 556, 415, 910, 931, 932, 713, 88, 87, 938, 939, 888, 791, 90, 89, 714, 557, 715, 716, 717, 754, 898, 558, 725, 92, 91, 644, 437, 398, 645, 646, 559, 94, 93, 96, 95, 560, 98, 97, 99, 726, 670, 561, 590, 591, 592, 728, 416, 729, 417, 647, 14, 15, 16, 418, 648, 562, 730, 731, 732, 733, 419, 649, 736, 451, 650, 394, 738, 739, 452, 740, 741, 563, 742, 564, 743, 744, 101, 100, 651, 103, 102, 105, 104, 107, 106, 745, 940, 109, 108, 111, 110, 746, 747, 565, 748, 749, 113, 112, 911, 914, 912, 913, 915, 453, 454, 404, 916, 477, 476, 478, 593, 750, 751, 752, 479, 480, 829, 17, 755, 18, 115, 114, 756, 889, 19, 117, 116, 566, 762, 763, 899, 900, 823, 20, 824, 21, 825, 22, 901, 902, 903, 455, 23, 652, 919, 920, 921, 922, 443, 653, 119, 118, 882, 567, 121, 120, 883, 24, 123, 122, 886, 125, 124, 887, 689, 690, 687, 688, 399, 691, 692, 481, 693, 548, 893, 568, 890, 569, 127, 126, 129, 128, 131, 130, 133, 132, 904, 135, 134, 137, 136, 718, 719, 720, 721, 722, 570, 724, 25, 139, 138, 141, 140, 923, 456, 482, 654, 674, 675, 676, 143, 142, 933, 145, 144, 655, 147, 146, 656, 657, 658, 805, 941, 149, 148, 594, 659, 26, 924, 151, 150, 457, 483, 734, 851, 153, 152, 660, 661, 662, 873, 571, 955, 956, 951, 952, 572, 874, 878, 27, 444, 723, 155, 154, 157, 156, 663, 664, 665, 159, 158, 666, 667, 668, 161, 160, 163, 162, 595, 484, 485, 28, 840, 785, 786, 573, 852, 574, 165, 164, 884, 167, 166, 841, 842, 486, 487, 488, 596, 489, 490, 29, 905, 575, 783, 784, 597, 598, 491, 492, 30, 702, 576, 31, 934, 577, 578, 493, 942, 579, 943, 944, 945, 169, 168, 32, 948, 494, 171, 170, 946, 830, 831, 832, 833, 683, 173, 172, 175, 174, 949, 177, 176, 834, 684, 179, 178, 181, 180, 182, 184, 183, 186, 185, 188, 187, 190, 189, 192, 191, 194, 193, 803, 196, 195, 198, 197, 200, 199, 458, 669, 806, 495, 671, 33, 799, 800, 580, 801, 202, 201, 672, 204, 203, 957, 34, 958, 909, 206, 205, 208, 207, 210, 209, 212, 211, 214, 213, 216, 215, 864, 677, 218, 217, 678, 802, 804, 220, 219, 222, 221, 224, 223, 226, 225, 228, 227, 229, 231, 230, 233, 232, 445, 235, 234, 680, 681, 237, 236, 599, 496, 35, 420, 790, 600, 497, 498, 601, 499, 500, 602, 501, 603, 891, 502, 604, 906, 503, 605, 606, 607, 608, 504, 609, 505, 610, 506, 611, 612, 507, 508, 613, 835, 836, 434, 36, 614, 509, 581, 582, 239, 238, 241, 240, 243, 242, 245, 244, 699, 247, 246, 249, 248, 250, 252, 251, 767, 583, 768, 769, 254, 253, 255, 853, 865, 257, 256, 259, 258, 261, 260, 263, 262, 265, 264, 267, 266, 269, 268, 271, 270, 273, 272, 275, 274, 277, 276, 279, 278, 737, 281, 280, 37, 282, 284, 283, 286, 285, 288, 287, 290, 289, 753, 291, 293, 292, 295, 294, 297, 296, 299, 298, 757, 401, 758, 759, 400, 421, 422, 761, 38, 760, 301, 300, 303, 302, 305, 304, 459, 764, 765, 766, 307, 306, 950, 843, 844, 845, 846, 847, 848, 39, 309, 308, 510, 511, 615, 959, 423, 953, 310, 312, 311, 770, 771, 772, 512, 513, 773, 774, 775, 776, 514, 515, 777, 778, 779, 780, 781, 782, 313, 40, 787, 788, 789, 516, 517, 518, 519, 315, 314, 433, 435, 520, 521, 438, 424, 446, 439, 447, 826, 460, 461, 462, 407, 523, 522, 616, 792, 402, 316, 793, 794, 524, 318, 317, 41, 42, 320, 319, 795, 425, 426, 796, 797, 798, 322, 321, 324, 323, 43, 326, 325, 617, 525, 526, 44, 618, 427, 619, 807, 808, 428, 809, 584, 527, 528, 328, 327, 811, 330, 329, 45, 866, 332, 331, 429, 812, 430, 813, 431, 814, 620, 432, 815, 334, 333, 621, 46, 849, 816, 854, 336, 335, 338, 337, 529, 47, 817, 855, 856, 340, 339, 342, 341, 818, 344, 343, 819, 346, 345, 348, 347, 350, 349, 352, 351, 820, 354, 353, 356, 355, 357, 821, 822, 827, 359, 358, 837, 838, 361, 360, 363, 362, 365, 364, 367, 366, 368, 839, 370, 369, 868, 867, 372, 371, 926, 927, 925, 403, 374, 373, 850, 376, 375, 48, 857, 378, 377, 380, 379, 530, 531, 382, 381, 858, 859, 384, 383, 860, 49, 861, 386, 385, 50, 862, 51, 388, 387, 52, 390, 389, 53, 391, 863, 960, 961, 532, 533, 622, 623, 876, 875, 880, 881, 624, 625, 626, 535, 534, 627, 628, 536, 629, 630, 537, 392, 631, 538, 539, 540, 541, 542, 543, 544, 545, 965, 966, 967, 968, 969, 970, 971, 972 }
  uselistorder i32* @eax, {}
}

declare i32 @unknown_42590b7() local_unnamed_addr

declare i32 @unknown_5504f1e5() local_unnamed_addr

declare i32 @unknown_e8258439() local_unnamed_addr

declare void @__asm_outsb(i16, i8) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

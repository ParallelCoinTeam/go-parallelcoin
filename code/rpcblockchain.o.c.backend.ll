source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_2b270_type = type { i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32)* }
%vtable_2b330_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_2b390_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_2b3b8_type = type { i32 (i32*)*, i32 (i32)*, i32 (i8)* }
%vtable_2b410_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_2b470_type = type { i32 (i32*)*, i32 (i32)* }
%vtable_2b498_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_2b4d0_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_2b4e8_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%"vector<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>.3" = type { i32 }
%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.8" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.9" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.10" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.11" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.12" = type { i32 }

@cf = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@ds = internal unnamed_addr global i16 0
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@fpu_stat_TOP = internal unnamed_addr global i3 0
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0, align 8
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@global_var_2b914.1801 = global i32 0
@global_var_c000.1802 = constant [1850 x i8] c">, std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, boost::recursive_wrapper<std::vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > >, std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, bool, long long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::assigner, VPCV = const void*, NBF = boost::variant<std::basic_string<char>, boost::recursive_wrapper<std::vector<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char> > >, std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, boost::recursive_wrapper<std::vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > >, std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, bool, long long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]\00"
@global_var_2b518.1804 = constant i32 0
@global_var_2b500.1805 = constant i32 0
@global_var_5a68.1808 = constant [18 x i8] c"boost::lock_error\00"
@global_var_2b4b0.1809 = constant i32 54120
@global_var_5b08.1813 = constant [50 x i8] c"boost::bad_get: failed value get using boost::get\00"
@global_var_2b3d0.1814 = constant i32 57452
@global_var_30.1817 = constant i32 862319685
@global_var_5c.1819 = constant i32 -402295808
@global_var_34.1820 = constant i32 5125
@global_var_38.1821 = constant i32 -402295808
@global_var_2b3a4.1823 = constant i32 80911
@global_var_2b34c.1825 = constant i32 81185
@global_var_2b35c.1826 = constant i32 178566
@global_var_2b608.1827 = constant i32 8
@global_var_2b480.1829 = constant i32 70616
@global_var_2b428.1831 = constant i32 84325
@global_var_2b43c.1832 = constant i32 178798
@global_var_60d0.1833 = constant [54 x i8] c"/usr/include/boost/exception/detail/exception_ptr.hpp\00"
@global_var_6288.1834 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_2bd08.1836 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_610b.1838 = constant [22 x i8] c"vector::_M_insert_aux\00"
@global_var_613c.1840 = constant [24 x i8] c"vector::_M_range_insert\00"
@global_var_1e7e0.1844 = constant i32 123748
@global_var_1f2c4.1845 = constant i32 126537
@global_var_20b80.1852 = constant i32 132869
@global_var_21de8.1853 = constant i32 137580
@global_var_22664.1856 = constant i32 139750
@global_var_23840.1857 = constant i32 144323
@global_var_24974.1862 = constant i32 148727
@global_var_27240.1870 = constant i32 159171
@global_var_8b00.1873 = constant [903 x i8] c"asic_string<char> > >, std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, boost::recursive_wrapper<std::vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > >, std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, bool, long long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = const bool*, mpl_::true_ = mpl_::bool_<true>]\00"
@0 = external global i32
@global_var_89.1818 = constant i8 -95
@global_var_2bc08.1837 = external constant i8*
@global_var_88.1843 = constant i8 116
@global_var_2b270.1841 = constant %vtable_2b270_type { i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info }
@global_var_2b330.1824 = constant %vtable_2b330_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.1797, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv }
@global_var_2b390.1822 = constant %vtable_2b390_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_2b3b8.1815 = constant %vtable_2b3b8_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32)* @_ZN5boost6system12system_errorD0Ev, i32 (i8)* @_ZNK5boost6system12system_error4whatEv }
@global_var_2b410.1830 = constant %vtable_2b410_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_2b470.1828 = constant %vtable_2b470_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }
@global_var_2b498.1839 = constant %vtable_2b498_type { i32 (i32*)* @_ZN5boost7bad_getD1Ev, i32 (i32)* @_ZN5boost7bad_getD0Ev, i32 (i32)* @_ZNK5boost7bad_get4whatEv }
@global_var_2b4d0.1807 = constant %vtable_2b4d0_type { i32 (i32*)* @_ZN5boost10lock_errorD1Ev, i32 (i32)* @_ZN5boost10lock_errorD0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_2b4e8.1806 = constant %vtable_2b4e8_type { i32 (i32*)* @_ZN5boost16thread_exceptionD1Ev, i32 (i32)* @_ZN5boost16thread_exceptionD0Ev, i32 ()* @_ZL13EnterCriticalPKcS0_iPvb }

define i32 @_ZL13EnterCriticalPKcS0_iPvb() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %v2_1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_8:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_e:
  ret void
}

define void @LeaveCritical() local_unnamed_addr {
dec_label_pc_42:
  ret void
}

define i32 @function_64() local_unnamed_addr {
dec_label_pc_64:
  %eax.global-to-local = alloca i32, align 4
  %v0_65 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_65
}

define double @_Z13GetDifficultyPK11CBlockIndexi(i32 %blockindex, i32 %algo) local_unnamed_addr {
dec_label_pc_66:
  %st0.global-to-local = alloca x86_fp80, align 4
  %v10_83 = icmp eq i32 %blockindex, 0
  %v1_87 = icmp eq i1 %v10_83, false
  br i1 %v1_87, label %bb, label %dec_label_pc_66.dec_label_pc_89_crit_edge

dec_label_pc_66.dec_label_pc_89_crit_edge:        ; preds = %dec_label_pc_66
  %v5_87.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_89

bb:                                               ; preds = %dec_label_pc_66
  %v4_87 = call x86_fp80 @function_fd(i32 %algo, i32 %blockindex)
  store x86_fp80 %v4_87, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_89

dec_label_pc_89:                                  ; preds = %dec_label_pc_66.dec_label_pc_89_crit_edge, %bb
  %v5_87 = phi x86_fp80 [ %v5_87.pre, %dec_label_pc_66.dec_label_pc_89_crit_edge ], [ %v4_87, %bb ]
  %v6_87 = fptrunc x86_fp80 %v5_87 to double
  ret double %v6_87

; uselistorder directives
  uselistorder label %dec_label_pc_89, { 1, 0 }
}

define i32 @function_96() local_unnamed_addr {
dec_label_pc_96:
  %eax.global-to-local = alloca i32, align 4
  %v0_99 = load i32, i32* %eax.global-to-local, align 4
  %v1_99 = trunc i32 %v0_99 to i8
  %v2_99 = and i8 %v1_99, 4
  %v8_99 = zext i8 %v2_99 to i32
  %v10_99 = and i32 %v0_99, -256
  %v11_99 = or i32 %v8_99, %v10_99
  store i32 %v11_99, i32* %eax.global-to-local, align 4
  %v1_9b = inttoptr i32 %v11_99 to i8*
  %v2_9b = load i8, i8* %v1_9b, align 4
  %v5_9b = add i8 %v2_9b, %v2_99
  store i8 %v5_9b, i8* %v1_9b, align 4
  %v0_9d = load i32, i32* %eax.global-to-local, align 4
  %v1_9d = inttoptr i32 %v0_9d to i8*
  %v2_9d = load i8, i8* %v1_9d, align 1
  %v4_9d = trunc i32 %v0_9d to i8
  %v5_9d = add i8 %v2_9d, %v4_9d
  store i8 %v5_9d, i8* %v1_9d, align 1
  %v0_9f = load i32, i32* %eax.global-to-local, align 4
  %v1_a2 = call i32 @_ZNK12CChainParams16ProofOfWorkLimitEi(i32 %v0_9f)
  store i32 %v1_a2, i32* %eax.global-to-local, align 4
  %v1_aa = call i32 @_ZNK7CBigNum10GetCompactEv(i32 %v1_a2)
  store i32 %v1_aa, i32* %eax.global-to-local, align 4
  %v1_af = load i32, i32* @ebp, align 4
  %v2_af = add i32 %v1_af, -20
  %v3_af = inttoptr i32 %v2_af to i32*
  store i32 %v1_aa, i32* %v3_af, align 4
  %v0_b2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b2
}

define i32 @function_b4() local_unnamed_addr {
dec_label_pc_b4:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_d5() local_unnamed_addr {
dec_label_pc_d5:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d5 = add i32 %v0_d5, 1418317909
  %v2_d5 = inttoptr i32 %v1_d5 to i32*
  %v3_d5 = load i32, i32* %v2_d5, align 4
  %v4_d5 = add i32 %v3_d5, -1
  store i32 %v4_d5, i32* %v2_d5, align 4
  %v0_db = load i32, i32* %eax.global-to-local, align 4
  %v11_db = and i32 %v0_db, -252
  store i32 %v11_db, i32* %eax.global-to-local, align 4
  %v1_e0 = call i32 @_ZNK12CChainParams16ProofOfWorkLimitEi(i32 %v11_db)
  store i32 %v1_e0, i32* %eax.global-to-local, align 4
  %v1_e8 = call i32 @_ZNK7CBigNum10GetCompactEv(i32 %v1_e0)
  store i32 %v1_e8, i32* %eax.global-to-local, align 4
  %v1_ed = load i32, i32* @ebp, align 4
  %v2_ed = add i32 %v1_ed, -20
  %v3_ed = inttoptr i32 %v2_ed to i32*
  store i32 %v1_e8, i32* %v3_ed, align 4
  %v0_f0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f0

; uselistorder directives
  uselistorder i32 %v11_db, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK7CBigNum10GetCompactEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK12CChainParams16ProofOfWorkLimitEi, { 1, 0 }
}

define i32 @function_f2() local_unnamed_addr {
dec_label_pc_f2:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_f2 = add i32 %tmp91, -44
  %v2_f2 = inttoptr i32 %v1_f2 to i32*
  %v3_f2 = load i32, i32* %v2_f2, align 4
  store i32 %v3_f2, i32* %eax.global-to-local, align 4
  %v1_f5 = add i32 %v3_f2, 108
  %v2_f5 = inttoptr i32 %v1_f5 to i32*
  %v3_f5 = load i32, i32* %v2_f5, align 4
  store i32 %v3_f5, i32* %eax.global-to-local, align 4
  %v2_f8 = add i32 %tmp91, -20
  %v3_f8 = inttoptr i32 %v2_f8 to i32*
  store i32 %v3_f5, i32* %v3_f8, align 4
  %v0_fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fb

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define x86_fp80 @function_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fd:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_fd = load i32, i32* @ebp, align 4
  %v1_fd = add i32 %v0_fd, -44
  %v2_fd = inttoptr i32 %v1_fd to i32*
  %v3_fd = load i32, i32* %v2_fd, align 4
  store i32 %v3_fd, i32* %eax.global-to-local, align 4
  %v1_100 = add i32 %v3_fd, 108
  %v2_100 = inttoptr i32 %v1_100 to i32*
  %v3_100 = load i32, i32* %v2_100, align 4
  store i32 %v3_100, i32* %eax.global-to-local, align 4
  %v2_103 = add i32 %v0_fd, -20
  %v3_103 = inttoptr i32 %v2_103 to i32*
  store i32 %v3_100, i32* %v3_103, align 4
  %v0_106 = load i32, i32* @ebp, align 4
  %v1_106 = add i32 %v0_106, -20
  %v2_106 = inttoptr i32 %v1_106 to i32*
  %v3_106 = load i32, i32* %v2_106, align 4
  %v2_109 = udiv i32 %v3_106, 16777216
  store i32 %v2_109, i32* %eax.global-to-local, align 4
  %v2_10c = add i32 %v0_106, -16
  %v3_10c = inttoptr i32 %v2_10c to i32*
  store i32 %v2_109, i32* %v3_10c, align 4
  %v0_10f = load i32, i32* @ebp, align 4
  %v1_10f = add i32 %v0_10f, -20
  %v2_10f = inttoptr i32 %v1_10f to i32*
  %v3_10f = load i32, i32* %v2_10f, align 4
  %v1_112 = urem i32 %v3_10f, 16777216
  store i32 %v1_112, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  %v2_11c = add i32 %v0_10f, -56
  %v3_11c = inttoptr i32 %v2_11c to i32*
  store i32 %v1_112, i32* %v3_11c, align 4
  %v0_11f = load i32, i32* %edx.global-to-local, align 8
  %v1_11f = load i32, i32* @ebp, align 4
  %v2_11f = add i32 %v1_11f, -52
  %v3_11f = inttoptr i32 %v2_11f to i32*
  store i32 %v0_11f, i32* %v3_11f, align 4
  %v0_122 = load i32, i32* @ebp, align 4
  %v1_122 = add i32 %v0_122, -56
  %v2_122 = inttoptr i32 %v1_122 to i64*
  %v3_122 = load i64, i64* %v2_122, align 4
  %v4_122 = sitofp i64 %v3_122 to x86_fp80
  %v5_122 = load i3, i3* @fpu_stat_TOP, align 1
  %v4_12b = fdiv x86_fp80 0xK400EFFFF000000000000, %v4_122
  store x86_fp80 %v4_12b, x86_fp80* %st0.global-to-local, align 4
  %v3_12d = add i32 %v0_122, -32
  %v4_12d = fptrunc x86_fp80 %v4_12b to double
  %v5_12d = inttoptr i32 %v3_12d to double*
  store double %v4_12d, double* %v5_12d, align 4
  br label %dec_label_pc_144

dec_label_pc_132:                                 ; preds = %dec_label_pc_144
  %v1_132 = add i32 %v19_140, -32
  %v2_132 = inttoptr i32 %v1_132 to double*
  %v3_132 = load double, double* %v2_132, align 4
  %v4_132 = fpext double %v3_132 to x86_fp80
  %v4_13b = fmul x86_fp80 %v4_132, 0xK40078000000000000000
  store x86_fp80 %v4_13b, x86_fp80* %st0.global-to-local, align 4
  %v4_13d = fptrunc x86_fp80 %v4_13b to double
  store double %v4_13d, double* %v2_132, align 4
  %v3_140 = load i32, i32* %v2_144, align 4
  %v4_140 = add i32 %v3_140, 1
  store i32 %v4_140, i32* %v2_144, align 4
  %v0_144.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_144

dec_label_pc_144:                                 ; preds = %dec_label_pc_132, %dec_label_pc_fd
  %v19_140 = phi i32 [ %v0_144.pre, %dec_label_pc_132 ], [ %v0_122, %dec_label_pc_fd ]
  %v1_144 = add i32 %v19_140, -16
  %v2_144 = inttoptr i32 %v1_144 to i32*
  %v3_144 = load i32, i32* %v2_144, align 4
  %v4_144 = add i32 %v3_144, -28
  %tmp = sub i32 27, %v3_144
  %v11_144 = and i32 %tmp, %v3_144
  %v12_144 = icmp slt i32 %v11_144, 0
  %v13_144 = icmp eq i32 %v4_144, 0
  %v14_144 = icmp slt i32 %v4_144, 0
  %v3_148 = icmp ne i1 %v14_144, %v12_144
  %v4_148 = or i1 %v13_144, %v3_148
  %v5_148 = zext i1 %v4_148 to i32
  %v6_148 = load i32, i32* %eax.global-to-local, align 4
  %v7_148 = and i32 %v6_148, -256
  %v8_148 = or i32 %v5_148, %v7_148
  store i32 %v8_148, i32* %eax.global-to-local, align 4
  %v5_14b = icmp eq i1 %v4_148, false
  %v1_14d = icmp eq i1 %v5_14b, false
  br i1 %v1_14d, label %dec_label_pc_132, label %dec_label_pc_163.preheader

dec_label_pc_163.preheader:                       ; preds = %dec_label_pc_144
  %v6_122 = add i3 %v5_122, -1
  br label %dec_label_pc_163

dec_label_pc_151:                                 ; preds = %dec_label_pc_163
  %v4_15a = fmul x86_fp80 %v4_151, 0xK3FF78000000000000000
  store x86_fp80 %v4_15a, x86_fp80* %st0.global-to-local, align 4
  %v4_15c = fptrunc x86_fp80 %v4_15a to double
  store double %v4_15c, double* %v2_151, align 4
  %v3_15f = load i32, i32* %v2_163, align 4
  %v4_15f = add i32 %v3_15f, -1
  store i32 %v4_15f, i32* %v2_163, align 4
  %v0_163.pre = load i32, i32* @ebp, align 4
  %v7_167.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_163

dec_label_pc_163:                                 ; preds = %dec_label_pc_163.preheader, %dec_label_pc_151
  %v7_167 = phi i32 [ %v8_148, %dec_label_pc_163.preheader ], [ %v7_167.pre, %dec_label_pc_151 ]
  %v19_15f = phi i32 [ %v19_140, %dec_label_pc_163.preheader ], [ %v0_163.pre, %dec_label_pc_151 ]
  %v1_163 = add i32 %v19_15f, -16
  %v2_163 = inttoptr i32 %v1_163 to i32*
  %v3_163 = load i32, i32* %v2_163, align 4
  %v4_163 = add i32 %v3_163, -29
  %tmp11 = sub i32 28, %v3_163
  %v11_163 = and i32 %tmp11, %v3_163
  %v12_163 = icmp slt i32 %v11_163, 0
  %v13_163 = icmp eq i32 %v4_163, 0
  %v14_163 = icmp slt i32 %v4_163, 0
  %v3_167 = icmp eq i1 %v14_163, %v12_163
  %v4_167 = icmp eq i1 %v13_163, false
  %v5_167 = icmp eq i1 %v3_167, %v4_167
  %v6_167 = zext i1 %v5_167 to i32
  %v8_167 = and i32 %v7_167, -256
  %v9_167 = or i32 %v6_167, %v8_167
  store i32 %v9_167, i32* %eax.global-to-local, align 4
  %v5_16a = icmp eq i1 %v5_167, false
  %v1_16c = icmp eq i1 %v5_16a, false
  %v1_151 = add i32 %v19_15f, -32
  %v2_151 = inttoptr i32 %v1_151 to double*
  %v3_151 = load double, double* %v2_151, align 4
  %v4_151 = fpext double %v3_151 to x86_fp80
  store x86_fp80 %v4_151, x86_fp80* %st0.global-to-local, align 4
  br i1 %v1_16c, label %dec_label_pc_151, label %dec_label_pc_16e

dec_label_pc_16e:                                 ; preds = %dec_label_pc_163
  store i3 %v6_122, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_171 = add i32 %v19_15f, -12
  %v2_171 = inttoptr i32 %v1_171 to i32*
  %v3_171 = load i32, i32* %v2_171, align 4
  store i32 %v3_171, i32* %eax.global-to-local, align 4
  %v1_174 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_174 = xor i32 %v1_174, %v3_171
  %v3_174 = icmp eq i32 %v2_174, 0
  store i32 %v2_174, i32* @eax, align 4
  br i1 %v3_174, label %bb, label %dec_label_pc_17d

bb:                                               ; preds = %dec_label_pc_16e
  %v1_17b = call i32 @function_184()
  store i32 %v1_17b, i32* %eax.global-to-local, align 4
  %v0_17d.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v3_17d.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_17d

dec_label_pc_17d:                                 ; preds = %bb, %dec_label_pc_16e
  %v3_17d = phi x86_fp80 [ %v3_17d.pre, %bb ], [ %v4_151, %dec_label_pc_16e ]
  %v0_17d = phi i3 [ %v0_17d.pre, %bb ], [ %v6_122, %dec_label_pc_16e ]
  %v2_17d = add i3 %v0_17d, 1
  store i3 %v2_17d, i3* %fpu_stat_TOP.global-to-local, align 1
  ret x86_fp80 %v3_17d

; uselistorder directives
  uselistorder x86_fp80 %v4_151, { 0, 2, 1 }
  uselistorder double* %v2_151, { 1, 0 }
  uselistorder i32 %v4_163, { 1, 0 }
  uselistorder i32* %v2_163, { 2, 1, 0 }
  uselistorder i3 %v6_122, { 1, 0 }
  uselistorder i32 %v4_144, { 1, 0 }
  uselistorder i32* %v2_144, { 2, 1, 0 }
  uselistorder i32 %v19_140, { 0, 2, 1 }
  uselistorder i32 %v1_112, { 1, 0 }
  uselistorder i32 %v2_109, { 1, 0 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 108, { 1, 0 }
  uselistorder label %dec_label_pc_163, { 1, 0 }
}

define i32 @function_184() local_unnamed_addr {
dec_label_pc_184:
  %v0_185 = load i32, i32* @eax, align 4
  ret i32 %v0_185
}

define %"vector<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>.3" @_Z11blockToJSONRK6CBlockPK11CBlockIndex(i32 %block, i32 %blockindex) local_unnamed_addr {
dec_label_pc_186:
  %stack_var_-900 = alloca i32, align 4
  %txs_-1152 = alloca %"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>", align 8
  %v4_193 = insertvalue %"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" undef, i32 %block, 0
  store %"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %v4_193, %"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>"* %txs_-1152, align 8
  %v4_1b6 = getelementptr inbounds %"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>", %"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>"* %txs_-1152, i32 0, i32 0
  %v5_1b6 = load i32, i32* %v4_1b6, align 8
  %v1_1bf = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %v5_1b6)
  %v2_1ca = ptrtoint i32* %stack_var_-900 to i32
  %v5_1d4 = insertvalue %"vector<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>.3" undef, i32 %v2_1ca, 0
  ret %"vector<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>.3" %v5_1d4
}

define i32 @function_330() local_unnamed_addr {
dec_label_pc_330:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_330 = add i32 %tmp91, -254843
  %v2_330 = inttoptr i32 %v1_330 to i32*
  %v3_330 = load i32, i32* %v2_330, align 4
  %v4_330 = add i32 %v3_330, -1
  store i32 %v4_330, i32* %v2_330, align 4
  %v0_336 = load i32, i32* %ecx.global-to-local, align 4
  %v1_336 = add i32 %v0_336, -955767740
  %v2_336 = inttoptr i32 %v1_336 to i32*
  %v3_336 = load i32, i32* %v2_336, align 4
  %v4_336 = add i32 %v3_336, -1
  store i32 %v4_336, i32* %v2_336, align 4
  %v0_33d = load i32, i32* %eax.global-to-local, align 4
  %v11_33d = and i32 %v0_33d, -252
  store i32 %v11_33d, i32* @eax, align 4
  %v0_33f = call i32 @function_39c()
  store i32 %v0_33f, i32* %eax.global-to-local, align 4
  ret i32 %v0_33f
}

define i32 @function_39c() local_unnamed_addr {
dec_label_pc_39c:
  %v0_39c = load i32, i32* @eax, align 4
  ret i32 %v0_39c
}

define i32 @function_607() local_unnamed_addr {
dec_label_pc_607:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_607 = load i32, i32* %ebx.global-to-local, align 4
  %v1_607 = add i32 %v0_607, -294779
  %v2_607 = inttoptr i32 %v1_607 to i8*
  %v3_607 = load i8, i8* %v2_607, align 1
  %v4_607 = load i32, i32* %ecx.global-to-local, align 4
  %v5_607 = trunc i32 %v4_607 to i8
  %v6_607 = add i8 %v5_607, %v3_607
  store i8 %v6_607, i8* %v2_607, align 1
  %v0_60d = load i32, i32* %ecx.global-to-local, align 4
  %v1_60d = add i32 %v0_60d, -857201660
  %v2_60d = inttoptr i32 %v1_60d to i32*
  %v3_60d = load i32, i32* %v2_60d, align 4
  %v4_60d = add i32 %v3_60d, -1
  store i32 %v4_60d, i32* %v2_60d, align 4
  %v0_613 = call i32 @function_85890618()
  ret i32 %v0_613
}

define i32 @function_7d1() local_unnamed_addr {
dec_label_pc_7d1:
  %eax.global-to-local = alloca i32, align 4
  %v0_7d1 = load i32, i32* %eax.global-to-local, align 4
  %v24_7d3 = and i32 %v0_7d1, -248
  store i32 %v24_7d3, i32* @eax, align 4
  %v0_7d4 = call i32 @function_ec830000()
  store i32 %v0_7d4, i32* %eax.global-to-local, align 4
  ret i32 %v0_7d4
}

define i32 @function_99e() local_unnamed_addr {
dec_label_pc_99e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-1080 = alloca i32, align 4
  %stack_var_-1084 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_99e = load i32, i32* %ebp.global-to-local, align 4
  %v1_99e = add i32 %v0_99e, -292731
  %v2_99e = inttoptr i32 %v1_99e to i32*
  %v3_99e = load i32, i32* %v2_99e, align 4
  %v4_99e = add i32 %v3_99e, -1
  store i32 %v4_99e, i32* %v2_99e, align 4
  %v0_9a4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_9a4 = add i32 %v0_9a4, 1273504772
  %v2_9a4 = inttoptr i32 %v1_9a4 to i32*
  %v3_9a4 = load i32, i32* %v2_9a4, align 4
  %v4_9a4 = add i32 %v3_9a4, -1
  store i32 %v4_9a4, i32* %v2_9a4, align 4
  %v2_9aa = load i32, i32* %ecx.global-to-local, align 4
  %v3_9aa = load i32, i32* %eax.global-to-local, align 4
  %v4_9aa = and i32 %v3_9aa, %v2_9aa
  %v12_9aa = inttoptr i32 %v2_9aa to i32*
  store i32 %v4_9aa, i32* %v12_9aa, align 4
  %v0_9ac = load i32, i32* %ebx.global-to-local, align 4
  %v1_9ac = add i32 %v0_9ac, -294779
  %v2_9ac = inttoptr i32 %v1_9ac to i8*
  %v3_9ac = load i8, i8* %v2_9ac, align 1
  %v4_9ac = load i32, i32* %ecx.global-to-local, align 4
  %v5_9ac = trunc i32 %v4_9ac to i8
  %v6_9ac = add i8 %v5_9ac, %v3_9ac
  store i8 %v6_9ac, i8* %v2_9ac, align 1
  %v0_9b2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_9b2 = add i32 %v0_9b2, -2054336432
  %v2_9b2 = inttoptr i32 %v1_9b2 to i32*
  %v3_9b2 = load i32, i32* %v2_9b2, align 4
  %v4_9b2 = add i32 %v3_9b2, -1
  store i32 %v4_9b2, i32* %v2_9b2, align 4
  %v1_9b8 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v1_9b8, i32* %stack_var_-4, align 4
  %v4_9b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_9b8, i32* @ebp, align 4
  %v0_9c4 = load i32, i32* %edx.global-to-local, align 8
  %v0_9c8 = load i32, i32* %eax.global-to-local, align 4
  %v3_9cb = call i32 @_ZN5boost15foreach_detail_7containIKSt6vectorI12CTransactionSaIS3_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %v0_9c8, i32 %v0_9c4, i32 0)
  %v2_9d3 = ptrtoint i32* %stack_var_-1084 to i32
  store i32 %v2_9d3, i32* %eax.global-to-local, align 4
  %v1_9e8 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_9d3)
  store i32 %v1_9e8, i32* %eax.global-to-local, align 4
  %v4_9ed = trunc i32 %v1_9e8 to i8
  %v5_9ed = icmp eq i8 %v4_9ed, 0
  %v1_9ef = icmp eq i1 %v5_9ed, false
  br i1 %v1_9ef, label %bb, label %dec_label_pc_9f5

bb:                                               ; preds = %dec_label_pc_99e
  %v2_9ef = call i32 @function_bd4()
  store i32 %v2_9ef, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_9f5

dec_label_pc_9f5:                                 ; preds = %bb, %dec_label_pc_99e
  %v2_9f5 = ptrtoint i32* %stack_var_-1080 to i32
  store i32 %v2_9f5, i32* %eax.global-to-local, align 4
  store i32 %v2_9d3, i32* %edx.global-to-local, align 8
  %v4_a18 = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %v2_9f5, i32 %v2_9d3, i32 0, i32 0)
  store i32 %v2_9f5, i32* %eax.global-to-local, align 4
  %v1_a35 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_9f5)
  store i32 %v1_a35, i32* %eax.global-to-local, align 4
  %v4_a3a = trunc i32 %v1_a35 to i8
  %v5_a3a = icmp eq i8 %v4_a3a, 0
  %v1_a3c = icmp eq i1 %v5_a3a, false
  br i1 %v1_a3c, label %bb116, label %dec_label_pc_a42

bb116:                                            ; preds = %dec_label_pc_9f5
  %v2_a3c = call i32 @function_bd4()
  store i32 %v2_a3c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a42

dec_label_pc_a42:                                 ; preds = %bb116, %dec_label_pc_9f5
  %v2_a42 = ptrtoint i32* %stack_var_-1076 to i32
  store i32 %v2_a42, i32* %eax.global-to-local, align 4
  store i32 %v2_9d3, i32* %edx.global-to-local, align 8
  %v5_a65 = call i32 @_ZN5boost15foreach_detail_3endISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %v2_a42, i32* nonnull %stack_var_-1084, i32 0, i32 0)
  store i32 %v2_a42, i32* %eax.global-to-local, align 4
  %v1_a82 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_a42)
  store i32 %v1_a82, i32* %eax.global-to-local, align 4
  %v4_a87 = trunc i32 %v1_a82 to i8
  %v5_a87 = icmp eq i8 %v4_a87, 0
  %v1_a89 = icmp eq i1 %v5_a87, false
  br i1 %v1_a89, label %bb118, label %dec_label_pc_a8f

bb118:                                            ; preds = %dec_label_pc_a42
  %v2_a89 = call i32 @function_bd4()
  store i32 %v2_a89, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a8f

dec_label_pc_a8f:                                 ; preds = %bb118, %dec_label_pc_a42
  %v2_a96 = call i32 @function_b8e(i32 1)
  store i32 %v2_a96, i32* %eax.global-to-local, align 4
  ret i32 %v2_a96

; uselistorder directives
  uselistorder i32 %v2_a42, { 1, 0, 2, 3 }
  uselistorder i32 %v2_9f5, { 1, 0, 2, 3 }
  uselistorder i32 %v2_9d3, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_9aa, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 2, 4, 5, 6, 1, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 ()* @function_bd4, { 2, 1, 0 }
}

define i32 @function_a9b() local_unnamed_addr {
dec_label_pc_a9b:
  %v0_a9b = load i32, i32* @ebp, align 4
  %v1_a9b = add i32 %v0_a9b, -988
  %v1_aa4 = inttoptr i32 %v1_a9b to i8*
  %v2_aa4 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_aa4)
  %v4_aa9 = trunc i32 %v2_aa4 to i8
  %v5_aa9 = icmp eq i8 %v4_aa9, 0
  %v1_aab = icmp eq i1 %v5_aa9, false
  br i1 %v1_aab, label %bb, label %dec_label_pc_ab1

bb:                                               ; preds = %dec_label_pc_a9b
  %v2_aab = call i32 @function_b6d()
  br label %dec_label_pc_ab1

dec_label_pc_ab1:                                 ; preds = %bb, %dec_label_pc_a9b
  %v0_ab9 = load i32, i32* @ebp, align 4
  %v1_ab9 = add i32 %v0_ab9, -1016
  %v2_ab9 = inttoptr i32 %v1_ab9 to i32*
  %v3_ab9 = load i32, i32* %v2_ab9, align 4
  %v2_ac2 = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %v3_ab9, i32 0)
  %v1_ac7 = load i32, i32* @ebp, align 4
  %v2_ac7 = add i32 %v1_ac7, -1008
  %v3_ac7 = inttoptr i32 %v2_ac7 to i32*
  store i32 %v2_ac2, i32* %v3_ac7, align 4
  %v0_acd = call i32 @function_b5b()
  ret i32 %v0_acd
}

define i32 @function_ad2() local_unnamed_addr {
dec_label_pc_ad2:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_b5b() local_unnamed_addr {
dec_label_pc_b5b:
  %v0_b5b = load i32, i32* @ebp, align 4
  %v1_b5b = add i32 %v0_b5b, -988
  %v2_b5b = inttoptr i32 %v1_b5b to i8*
  %v3_b5b = load i8, i8* %v2_b5b, align 1
  %v4_b5b = zext i8 %v3_b5b to i32
  %v1_b62 = xor i32 %v4_b5b, 1
  ret i32 %v1_b62
}

define i32 @function_b6d() local_unnamed_addr {
dec_label_pc_b6d:
  %v0_b6d = load i32, i32* @ebp, align 4
  %v1_b6d = add i32 %v0_b6d, -988
  %v2_b6d = inttoptr i32 %v1_b6d to i8*
  %v3_b6d = load i8, i8* %v2_b6d, align 1
  %v5_b74 = icmp eq i8 %v3_b6d, 0
  br i1 %v5_b74, label %bb, label %dec_label_pc_b78

bb:                                               ; preds = %dec_label_pc_b6d
  %v2_b76 = call i32 @function_b8e(i32 ptrtoint (i32* @0 to i32))
  %v0_b80.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b78

dec_label_pc_b78:                                 ; preds = %bb, %dec_label_pc_b6d
  %v0_b80 = phi i32 [ %v0_b80.pre, %bb ], [ %v0_b6d, %dec_label_pc_b6d ]
  %v1_b80 = add i32 %v0_b80, -1016
  %v2_b80 = inttoptr i32 %v1_b80 to i32*
  %v3_b80 = load i32, i32* %v2_b80, align 4
  %v2_b89 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_b80, i32 0)
  ret i32 %v2_b89

; uselistorder directives
  uselistorder i32 (i32)* @function_b8e, { 1, 0 }
}

define i32 @function_b8e(i32 %arg1) local_unnamed_addr {
dec_label_pc_b8e:
  %v0_b8e = load i32, i32* @ebp, align 4
  %v1_b8e = add i32 %v0_b8e, -988
  %v2_b8e = inttoptr i32 %v1_b8e to i8*
  %v3_b8e = load i8, i8* %v2_b8e, align 1
  %v5_b95 = icmp eq i8 %v3_b8e, 0
  br i1 %v5_b95, label %dec_label_pc_bc7, label %dec_label_pc_b99

dec_label_pc_b99:                                 ; preds = %dec_label_pc_b8e
  %v1_ba1 = add i32 %v0_b8e, -1012
  %v2_ba1 = inttoptr i32 %v1_ba1 to i32*
  %v3_ba1 = load i32, i32* %v2_ba1, align 4
  %v1_bab = add i32 %v0_b8e, -1016
  %v2_bab = inttoptr i32 %v1_bab to i32*
  %v3_bab = load i32, i32* %v2_bab, align 4
  %v3_bb4 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %v3_bab, i32 %v3_ba1, i32 0)
  %v1_bb9 = xor i32 %v3_bb4, 1
  %v4_bb9 = trunc i32 %v1_bb9 to i8
  %v5_bbc = icmp eq i8 %v4_bb9, 0
  br i1 %v5_bbc, label %dec_label_pc_bc7, label %dec_label_pc_bcc

dec_label_pc_bc7:                                 ; preds = %dec_label_pc_b99, %dec_label_pc_b8e
  br label %dec_label_pc_bcc

dec_label_pc_bcc:                                 ; preds = %dec_label_pc_b99, %dec_label_pc_bc7
  %storemerge = phi i32 [ 0, %dec_label_pc_bc7 ], [ 1, %dec_label_pc_b99 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_b8e, { 1, 0, 2 }
  uselistorder i32 -1016, { 2, 0, 1 }
  uselistorder i32 -988, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_bcc, { 1, 0 }
}

define i32 @function_bd4() local_unnamed_addr {
dec_label_pc_bd4:
  %v0_bd4 = load i32, i32* @ebp, align 4
  %v1_bd4 = add i32 %v0_bd4, -1144
  %v1_bde = add i32 %v0_bd4, -152
  %v2_be7 = inttoptr i32 %v1_bde to i32*
  %v3_be7 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorIS3_SaIS3_EE(i32* %v2_be7, i32 %v1_bd4)
  %v0_bec = load i32, i32* @ebp, align 4
  %v1_bec = add i32 %v0_bec, -987
  ret i32 %v1_bec
}

define i32 @function_11c0() local_unnamed_addr {
dec_label_pc_11c0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11c0 = load i32, i32* @ebp, align 4
  %v1_11c0 = add i32 %v0_11c0, -292731
  %v2_11c0 = inttoptr i32 %v1_11c0 to i32*
  %v3_11c0 = load i32, i32* %v2_11c0, align 4
  %v4_11c0 = add i32 %v3_11c0, -1
  store i32 %v4_11c0, i32* %v2_11c0, align 4
  %v0_11c6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11c6 = add i32 %v0_11c6, 1609049092
  %v2_11c6 = inttoptr i32 %v1_11c6 to i32*
  %v3_11c6 = load i32, i32* %v2_11c6, align 4
  %v4_11c6 = add i32 %v3_11c6, -1
  store i32 %v4_11c6, i32* %v2_11c6, align 4
  %v2_11cc = load i32, i32* %ecx.global-to-local, align 4
  %v3_11cc = load i32, i32* %eax.global-to-local, align 4
  %v4_11cc = load i1, i1* %cf.global-to-local, align 1
  %v5_11cc = zext i1 %v4_11cc to i32
  %v6_11cc = sub i32 %v2_11cc, %v3_11cc
  %v7_11cc = add i32 %v5_11cc, %v6_11cc
  %v17_11cc = sub i32 %v6_11cc, %v5_11cc
  %v18_11cc = icmp ult i32 %v2_11cc, %v17_11cc
  %v19_11cc = icmp ne i32 %v3_11cc, -1
  %v20_11cc = or i1 %v19_11cc, %v18_11cc
  %v21_11cc = icmp ult i32 %v2_11cc, %v3_11cc
  %v22_11cc = select i1 %v4_11cc, i1 %v20_11cc, i1 %v21_11cc
  store i1 %v22_11cc, i1* %cf.global-to-local, align 1
  %v37_11cc = inttoptr i32 %v2_11cc to i32*
  store i32 %v7_11cc, i32* %v37_11cc, align 4
  %v0_11ce = load i32, i32* @ebp, align 4
  %v1_11ce = add i32 %v0_11ce, -250747
  %v2_11ce = inttoptr i32 %v1_11ce to i8*
  %v3_11ce = load i8, i8* %v2_11ce, align 1
  %v4_11ce = load i32, i32* %ecx.global-to-local, align 4
  %v5_11ce = trunc i32 %v4_11ce to i8
  %v6_11ce = add i8 %v5_11ce, %v3_11ce
  store i8 %v6_11ce, i8* %v2_11ce, align 1
  %v0_11d4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11d4 = add i32 %v0_11d4, -1243077628
  %v2_11d4 = inttoptr i32 %v1_11d4 to i32*
  %v3_11d4 = load i32, i32* %v2_11d4, align 4
  %v4_11d4 = add i32 %v3_11d4, -1
  store i32 %v4_11d4, i32* %v2_11d4, align 4
  %v2_11db = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_11db = load i32, i32* %eax.global-to-local, align 4
  %v4_11db = trunc i32 %v3_11db to i8
  %v5_11db = add i8 %v4_11db, %v2_11db
  %v10_11db = icmp ult i8 %v5_11db, %v2_11db
  store i1 %v10_11db, i1* %cf.global-to-local, align 1
  %v21_11db = inttoptr i32 %v3_11db to i8*
  store i8 %v5_11db, i8* %v21_11db, align 1
  %v0_11dd = call i32 @function_1720()
  store i32 %v0_11dd, i32* %eax.global-to-local, align 4
  ret i32 %v0_11dd

; uselistorder directives
  uselistorder i8 %v2_11db, { 1, 0 }
  uselistorder i32 %v6_11cc, { 1, 0 }
  uselistorder i32 %v5_11cc, { 1, 0 }
  uselistorder i32 %v3_11cc, { 1, 0, 2 }
}

define i32 @function_11e2() local_unnamed_addr {
dec_label_pc_11e2:
  %v0_11e4 = load i32, i32* @ebp, align 4
  %v1_11e4 = add i32 %v0_11e4, -736
  %v1_11ed = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_11e4)
  %v0_11f2 = call i32 @function_11f6()
  ret i32 %v0_11f2
}

define i32 @function_11f4() local_unnamed_addr {
dec_label_pc_11f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_11f4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11f4
}

define i32 @function_11f6() local_unnamed_addr {
dec_label_pc_11f6:
  %v0_11f6 = load i32, i32* @ebp, align 4
  %v1_11f6 = add i32 %v0_11f6, -1128
  %v1_1204 = call i32 @function_1208(i32 %v1_11f6)
  ret i32 %v1_1204
}

define i32 @function_1206() local_unnamed_addr {
dec_label_pc_1206:
  %eax.global-to-local = alloca i32, align 4
  %v0_1206 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1206
}

define i32 @function_1208(i32 %arg1) local_unnamed_addr {
dec_label_pc_1208:
  %v0_1208 = load i32, i32* @ebp, align 4
  %v1_1208 = add i32 %v0_1208, -997
  ret i32 %v1_1208
}

define i32 @function_1215() local_unnamed_addr {
dec_label_pc_1215:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1215 = load i32, i32* @ebp, align 4
  %v1_1215 = add i32 %v0_1215, -89979
  %v2_1215 = inttoptr i32 %v1_1215 to i32*
  %v3_1215 = load i32, i32* %v2_1215, align 4
  %v4_1215 = add i32 %v3_1215, -1
  store i32 %v4_1215, i32* %v2_1215, align 4
  %v0_121b = load i32, i32* %ecx.global-to-local, align 4
  %v1_121b = add i32 %v0_121b, -722983932
  %v2_121b = inttoptr i32 %v1_121b to i32*
  %v3_121b = load i32, i32* %v2_121b, align 4
  %v4_121b = add i32 %v3_121b, -1
  store i32 %v4_121b, i32* %v2_121b, align 4
  %v2_1221 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1221 = load i32, i32* %eax.global-to-local, align 4
  %v4_1221 = trunc i32 %v3_1221 to i8
  %v5_1221 = add i8 %v4_1221, %v2_1221
  %v21_1221 = inttoptr i32 %v3_1221 to i8*
  store i8 %v5_1221, i8* %v21_1221, align 1
  %v0_1224 = call i32 @function_1228()
  store i32 %v0_1224, i32* %eax.global-to-local, align 4
  ret i32 %v0_1224
}

define i32 @function_1226() local_unnamed_addr {
dec_label_pc_1226:
  %eax.global-to-local = alloca i32, align 4
  %v0_1226 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1226
}

define i32 @function_1228() local_unnamed_addr {
dec_label_pc_1228:
  %v0_1228 = load i32, i32* @ebp, align 4
  %v1_1228 = add i32 %v0_1228, -1132
  ret i32 %v1_1228
}

define i32 @function_1236() local_unnamed_addr {
dec_label_pc_1236:
  %v0_1236 = call i32 @function_1708()
  ret i32 %v0_1236
}

define i32 @function_123b() local_unnamed_addr {
dec_label_pc_123b:
  %v0_123d = load i32, i32* @ebp, align 4
  %v1_123d = add i32 %v0_123d, -712
  %v1_1246 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_123d)
  %v0_124b = call i32 @function_124f()
  ret i32 %v0_124b
}

define i32 @function_124d() local_unnamed_addr {
dec_label_pc_124d:
  %eax.global-to-local = alloca i32, align 4
  %v0_124d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_124d
}

define i32 @function_124f() local_unnamed_addr {
dec_label_pc_124f:
  %v0_124f = load i32, i32* @ebp, align 4
  %v1_124f = add i32 %v0_124f, -1124
  ret i32 %v1_124f
}

define i32 @function_125d() local_unnamed_addr {
dec_label_pc_125d:
  %v0_125d = call i32 @function_1261()
  ret i32 %v0_125d
}

define i32 @function_125f() local_unnamed_addr {
dec_label_pc_125f:
  %eax.global-to-local = alloca i32, align 4
  %v0_125f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_125f
}

define i32 @function_1261() local_unnamed_addr {
dec_label_pc_1261:
  %v0_1261 = load i32, i32* @ebp, align 4
  %v1_1261 = add i32 %v0_1261, -996
  ret i32 %v1_1261
}

define i32 @function_126e() local_unnamed_addr {
dec_label_pc_126e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_126e = load i32, i32* @ebp, align 4
  %v1_126e = add i32 %v0_126e, -84859
  %v2_126e = inttoptr i32 %v1_126e to i32*
  %v3_126e = load i32, i32* %v2_126e, align 4
  %v4_126e = add i32 %v3_126e, -1
  store i32 %v4_126e, i32* %v2_126e, align 4
  %v0_1274 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1274 = add i32 %v0_1274, 2078811140
  %v2_1274 = inttoptr i32 %v1_1274 to i32*
  %v3_1274 = load i32, i32* %v2_1274, align 4
  %v4_1274 = add i32 %v3_1274, -1
  store i32 %v4_1274, i32* %v2_1274, align 4
  %v2_127a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_127a = load i32, i32* %eax.global-to-local, align 4
  %v4_127a = trunc i32 %v3_127a to i8
  %v5_127a = add i8 %v4_127a, %v2_127a
  %v21_127a = inttoptr i32 %v3_127a to i8*
  store i8 %v5_127a, i8* %v21_127a, align 1
  %v1_127d = call i32 @function_16f6(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_127d, i32* %eax.global-to-local, align 4
  ret i32 %v1_127d
}

define i32 @function_1282() local_unnamed_addr {
dec_label_pc_1282:
  %v0_1284 = load i32, i32* @ebp, align 4
  %v1_1284 = add i32 %v0_1284, -688
  %v1_128d = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1284)
  %v0_1292 = call i32 @function_1296()
  ret i32 %v0_1292
}

define i32 @function_1294() local_unnamed_addr {
dec_label_pc_1294:
  %eax.global-to-local = alloca i32, align 4
  %v0_1294 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1294
}

define i32 @function_1296() local_unnamed_addr {
dec_label_pc_1296:
  %v0_1296 = load i32, i32* @ebp, align 4
  %v1_1296 = add i32 %v0_1296, -1120
  %v1_12a4 = call i32 @function_12a8(i32 %v1_1296)
  ret i32 %v1_12a4
}

define i32 @function_12a6() local_unnamed_addr {
dec_label_pc_12a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_12a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12a6
}

define i32 @function_12a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a8:
  %v0_12a8 = load i32, i32* @ebp, align 4
  %v1_12a8 = add i32 %v0_12a8, -995
  ret i32 %v1_12a8
}

define i32 @function_12b5() local_unnamed_addr {
dec_label_pc_12b5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12b5 = load i32, i32* @ebp, align 4
  %v1_12b5 = add i32 %v0_12b5, -79739
  %v2_12b5 = inttoptr i32 %v1_12b5 to i32*
  %v3_12b5 = load i32, i32* %v2_12b5, align 4
  %v4_12b5 = add i32 %v3_12b5, -1
  store i32 %v4_12b5, i32* %v2_12b5, align 4
  %v0_12bb = load i32, i32* %ecx.global-to-local, align 4
  %v1_12bb = add i32 %v0_12bb, 887628804
  %v2_12bb = inttoptr i32 %v1_12bb to i32*
  %v3_12bb = load i32, i32* %v2_12bb, align 4
  %v4_12bb = add i32 %v3_12bb, -1
  store i32 %v4_12bb, i32* %v2_12bb, align 4
  %v2_12c1 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_12c1 = load i32, i32* %eax.global-to-local, align 4
  %v4_12c1 = trunc i32 %v3_12c1 to i8
  %v5_12c1 = add i8 %v4_12c1, %v2_12c1
  %v21_12c1 = inttoptr i32 %v3_12c1 to i8*
  store i8 %v5_12c1, i8* %v21_12c1, align 1
  %v1_12c4 = call i32 @function_16f6(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_12c4, i32* %eax.global-to-local, align 4
  ret i32 %v1_12c4
}

define i32 @function_12c9() local_unnamed_addr {
dec_label_pc_12c9:
  %v0_12cb = load i32, i32* @ebp, align 4
  %v1_12cb = add i32 %v0_12cb, -664
  %v1_12d4 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_12cb)
  %v0_12d9 = call i32 @function_12dd()
  ret i32 %v0_12d9
}

define i32 @function_12db() local_unnamed_addr {
dec_label_pc_12db:
  %eax.global-to-local = alloca i32, align 4
  %v0_12db = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12db
}

define i32 @function_12dd() local_unnamed_addr {
dec_label_pc_12dd:
  %v0_12dd = load i32, i32* @ebp, align 4
  %v1_12dd = add i32 %v0_12dd, -1116
  ret i32 %v1_12dd
}

define i32 @function_12eb() local_unnamed_addr {
dec_label_pc_12eb:
  %v0_12eb = call i32 @function_12ef()
  ret i32 %v0_12eb
}

define i32 @function_12ed() local_unnamed_addr {
dec_label_pc_12ed:
  %eax.global-to-local = alloca i32, align 4
  %v0_12ed = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12ed
}

define i32 @function_12ef() local_unnamed_addr {
dec_label_pc_12ef:
  %v0_12ef = load i32, i32* @ebp, align 4
  %v1_12ef = add i32 %v0_12ef, -994
  ret i32 %v1_12ef
}

define i32 @function_12fc() local_unnamed_addr {
dec_label_pc_12fc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12fc = load i32, i32* @ebp, align 4
  %v1_12fc = add i32 %v0_12fc, -74619
  %v2_12fc = inttoptr i32 %v1_12fc to i32*
  %v3_12fc = load i32, i32* %v2_12fc, align 4
  %v4_12fc = add i32 %v3_12fc, -1
  store i32 %v4_12fc, i32* %v2_12fc, align 4
  %v0_1302 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1302 = add i32 %v0_1302, -303553532
  %v2_1302 = inttoptr i32 %v1_1302 to i32*
  %v3_1302 = load i32, i32* %v2_1302, align 4
  %v4_1302 = add i32 %v3_1302, -1
  store i32 %v4_1302, i32* %v2_1302, align 4
  %v2_1309 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1309 = load i32, i32* %eax.global-to-local, align 4
  %v4_1309 = trunc i32 %v3_1309 to i8
  %v5_1309 = add i8 %v4_1309, %v2_1309
  %v21_1309 = inttoptr i32 %v3_1309 to i8*
  store i8 %v5_1309, i8* %v21_1309, align 1
  %v1_130b = call i32 @function_16f6(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_130b, i32* %eax.global-to-local, align 4
  ret i32 %v1_130b
}

define i32 @function_1310() local_unnamed_addr {
dec_label_pc_1310:
  %v0_1312 = load i32, i32* @ebp, align 4
  %v1_1312 = add i32 %v0_1312, -640
  %v1_131b = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1312)
  %v0_1320 = call i32 @function_1324()
  ret i32 %v0_1320
}

define i32 @function_1322() local_unnamed_addr {
dec_label_pc_1322:
  %eax.global-to-local = alloca i32, align 4
  %v0_1322 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1322
}

define i32 @function_1324() local_unnamed_addr {
dec_label_pc_1324:
  %v0_1324 = load i32, i32* @ebp, align 4
  %v1_1324 = add i32 %v0_1324, -1112
  ret i32 %v1_1324
}

define i32 @function_1332() local_unnamed_addr {
dec_label_pc_1332:
  %v0_1332 = call i32 @function_1336()
  ret i32 %v0_1332
}

define i32 @function_1334() local_unnamed_addr {
dec_label_pc_1334:
  %eax.global-to-local = alloca i32, align 4
  %v0_1334 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1334
}

define i32 @function_1336() local_unnamed_addr {
dec_label_pc_1336:
  %v0_1336 = load i32, i32* @ebp, align 4
  %v1_1344 = add i32 %v0_1336, -272
  %v1_134d = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1344)
  %v1_1352 = call i32 @function_16f6(i32 %v1_1344)
  ret i32 %v1_1352
}

define i32 @function_1357() local_unnamed_addr {
dec_label_pc_1357:
  %v0_1359 = load i32, i32* @ebp, align 4
  %v1_1359 = add i32 %v0_1359, -616
  %v1_1362 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1359)
  %v0_1367 = call i32 @function_136b()
  ret i32 %v0_1367
}

define i32 @function_1369() local_unnamed_addr {
dec_label_pc_1369:
  %eax.global-to-local = alloca i32, align 4
  %v0_1369 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1369
}

define i32 @function_136b() local_unnamed_addr {
dec_label_pc_136b:
  %v0_136b = load i32, i32* @ebp, align 4
  %v1_136b = add i32 %v0_136b, -1108
  ret i32 %v1_136b
}

define i32 @function_1379() local_unnamed_addr {
dec_label_pc_1379:
  %v0_1379 = call i32 @function_137d()
  ret i32 %v0_1379
}

define i32 @function_137b() local_unnamed_addr {
dec_label_pc_137b:
  %eax.global-to-local = alloca i32, align 4
  %v0_137b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_137b
}

define i32 @function_137d() local_unnamed_addr {
dec_label_pc_137d:
  %v0_137d = load i32, i32* @ebp, align 4
  %v1_137d = add i32 %v0_137d, -992
  ret i32 %v1_137d
}

define i32 @function_138a() local_unnamed_addr {
dec_label_pc_138a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_138a = load i32, i32* @ebp, align 4
  %v1_138a = add i32 %v0_138a, -64379
  %v2_138a = inttoptr i32 %v1_138a to i32*
  %v3_138a = load i32, i32* %v2_138a, align 4
  %v4_138a = add i32 %v3_138a, -1
  store i32 %v4_138a, i32* %v2_138a, align 4
  %v0_1390 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1390 = add i32 %v0_1390, 1609049092
  %v2_1390 = inttoptr i32 %v1_1390 to i32*
  %v3_1390 = load i32, i32* %v2_1390, align 4
  %v4_1390 = add i32 %v3_1390, -1
  store i32 %v4_1390, i32* %v2_1390, align 4
  %v2_1397 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1397 = load i32, i32* %eax.global-to-local, align 4
  %v4_1397 = trunc i32 %v3_1397 to i8
  %v5_1397 = add i8 %v4_1397, %v2_1397
  %v21_1397 = inttoptr i32 %v3_1397 to i8*
  store i8 %v5_1397, i8* %v21_1397, align 1
  %v1_1399 = call i32 @function_16f6(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_1399, i32* %eax.global-to-local, align 4
  ret i32 %v1_1399

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_139e() local_unnamed_addr {
dec_label_pc_139e:
  %v0_13a0 = load i32, i32* @ebp, align 4
  %v1_13a0 = add i32 %v0_13a0, -592
  %v1_13a9 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_13a0)
  %v0_13ae = call i32 @function_13b2()
  ret i32 %v0_13ae
}

define i32 @function_13b0() local_unnamed_addr {
dec_label_pc_13b0:
  %eax.global-to-local = alloca i32, align 4
  %v0_13b0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13b0
}

define i32 @function_13b2() local_unnamed_addr {
dec_label_pc_13b2:
  %v0_13b2 = load i32, i32* @ebp, align 4
  %v1_13b2 = add i32 %v0_13b2, -1100
  ret i32 %v1_13b2
}

define i32 @function_13c0() local_unnamed_addr {
dec_label_pc_13c0:
  %v0_13c0 = call i32 @function_13c4()
  ret i32 %v0_13c0
}

define i32 @function_13c2() local_unnamed_addr {
dec_label_pc_13c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_13c2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13c2
}

define i32 @function_13c4() local_unnamed_addr {
dec_label_pc_13c4:
  %v0_13c4 = load i32, i32* @ebp, align 4
  %v1_13c4 = add i32 %v0_13c4, -991
  ret i32 %v1_13c4
}

define i32 @function_13d1() local_unnamed_addr {
dec_label_pc_13d1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13d1 = load i32, i32* @ebp, align 4
  %v1_13d1 = add i32 %v0_13d1, -59259
  %v2_13d1 = inttoptr i32 %v1_13d1 to i32*
  %v3_13d1 = load i32, i32* %v2_13d1, align 4
  %v4_13d1 = add i32 %v3_13d1, -1
  store i32 %v4_13d1, i32* %v2_13d1, align 4
  %v0_13d7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13d7 = add i32 %v0_13d7, 417866756
  %v2_13d7 = inttoptr i32 %v1_13d7 to i32*
  %v3_13d7 = load i32, i32* %v2_13d7, align 4
  %v4_13d7 = add i32 %v3_13d7, -1
  store i32 %v4_13d7, i32* %v2_13d7, align 4
  %v2_13de = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_13de = load i32, i32* %eax.global-to-local, align 4
  %v4_13de = trunc i32 %v3_13de to i8
  %v5_13de = add i8 %v4_13de, %v2_13de
  %v21_13de = inttoptr i32 %v3_13de to i8*
  store i8 %v5_13de, i8* %v21_13de, align 1
  %v0_13e0 = call i32 @function_13e4()
  store i32 %v0_13e0, i32* %eax.global-to-local, align 4
  ret i32 %v0_13e0

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_13e2() local_unnamed_addr {
dec_label_pc_13e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_13e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13e2
}

define i32 @function_13e4() local_unnamed_addr {
dec_label_pc_13e4:
  %v0_13e4 = load i32, i32* @ebp, align 4
  %v1_13e4 = add i32 %v0_13e4, -1104
  ret i32 %v1_13e4
}

define i32 @function_13f2() local_unnamed_addr {
dec_label_pc_13f2:
  %v1_13f2 = call i32 @function_16f6(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_13f2
}

define i32 @function_13f7() local_unnamed_addr {
dec_label_pc_13f7:
  %v0_13f9 = load i32, i32* @ebp, align 4
  %v1_13f9 = add i32 %v0_13f9, -568
  %v1_1402 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_13f9)
  %v0_1407 = call i32 @function_140b()
  ret i32 %v0_1407
}

define i32 @function_1409() local_unnamed_addr {
dec_label_pc_1409:
  %eax.global-to-local = alloca i32, align 4
  %v0_1409 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1409
}

define i32 @function_140b() local_unnamed_addr {
dec_label_pc_140b:
  %v0_140b = load i32, i32* @ebp, align 4
  %v1_140b = add i32 %v0_140b, -1092
  ret i32 %v1_140b
}

define i32 @function_1419() local_unnamed_addr {
dec_label_pc_1419:
  %v0_1419 = call i32 @function_141d()
  ret i32 %v0_1419
}

define i32 @function_141b() local_unnamed_addr {
dec_label_pc_141b:
  %eax.global-to-local = alloca i32, align 4
  %v0_141b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_141b
}

define i32 @function_141d() local_unnamed_addr {
dec_label_pc_141d:
  %v0_141d = load i32, i32* @ebp, align 4
  %v1_141d = add i32 %v0_141d, -990
  ret i32 %v1_141d
}

define i32 @function_142a() local_unnamed_addr {
dec_label_pc_142a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_142a = load i32, i32* @ebp, align 4
  %v1_142a = add i32 %v0_142a, -54139
  %v2_142a = inttoptr i32 %v1_142a to i32*
  %v3_142a = load i32, i32* %v2_142a, align 4
  %v4_142a = add i32 %v3_142a, -1
  store i32 %v4_142a, i32* %v2_142a, align 4
  %v0_1430 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1430 = add i32 %v0_1430, -1075305468
  %v2_1430 = inttoptr i32 %v1_1430 to i32*
  %v3_1430 = load i32, i32* %v2_1430, align 4
  %v4_1430 = add i32 %v3_1430, -1
  store i32 %v4_1430, i32* %v2_1430, align 4
  %v2_1437 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1437 = load i32, i32* %eax.global-to-local, align 4
  %v4_1437 = trunc i32 %v3_1437 to i8
  %v5_1437 = add i8 %v4_1437, %v2_1437
  %v21_1437 = inttoptr i32 %v3_1437 to i8*
  store i8 %v5_1437, i8* %v21_1437, align 1
  %v0_1439 = call i32 @function_143d()
  store i32 %v0_1439, i32* %eax.global-to-local, align 4
  ret i32 %v0_1439

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_143b() local_unnamed_addr {
dec_label_pc_143b:
  %eax.global-to-local = alloca i32, align 4
  %v0_143b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_143b
}

define i32 @function_143d() local_unnamed_addr {
dec_label_pc_143d:
  %v0_143d = load i32, i32* @ebp, align 4
  %v1_143d = add i32 %v0_143d, -1096
  ret i32 %v1_143d
}

define i32 @function_144b() local_unnamed_addr {
dec_label_pc_144b:
  %v1_144b = call i32 @function_16f6(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_144b
}

define i32 @function_1450() local_unnamed_addr {
dec_label_pc_1450:
  %v0_1452 = load i32, i32* @ebp, align 4
  %v1_1452 = add i32 %v0_1452, -544
  %v1_145b = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1452)
  %v0_1460 = call i32 @function_1464()
  ret i32 %v0_1460
}

define i32 @function_1462() local_unnamed_addr {
dec_label_pc_1462:
  %eax.global-to-local = alloca i32, align 4
  %v0_1462 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1462
}

define i32 @function_1464() local_unnamed_addr {
dec_label_pc_1464:
  %v0_1464 = load i32, i32* @ebp, align 4
  %v1_1464 = add i32 %v0_1464, -1084
  ret i32 %v1_1464
}

define i32 @function_1472() local_unnamed_addr {
dec_label_pc_1472:
  %v0_1472 = call i32 @function_1476()
  ret i32 %v0_1472
}

define i32 @function_1474() local_unnamed_addr {
dec_label_pc_1474:
  %eax.global-to-local = alloca i32, align 4
  %v0_1474 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1474
}

define i32 @function_1476() local_unnamed_addr {
dec_label_pc_1476:
  %v0_1476 = load i32, i32* @ebp, align 4
  %v1_1484 = add i32 %v0_1476, -192
  %v1_148d = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1484)
  %v0_1492 = call i32 @function_1496()
  ret i32 %v0_1492
}

define i32 @function_1494() local_unnamed_addr {
dec_label_pc_1494:
  %eax.global-to-local = alloca i32, align 4
  %v0_1494 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1494
}

define i32 @function_1496() local_unnamed_addr {
dec_label_pc_1496:
  %v0_1496 = load i32, i32* @ebp, align 4
  %v1_1496 = add i32 %v0_1496, -1088
  %v1_14a4 = call i32 @function_16f6(i32 %v1_1496)
  ret i32 %v1_14a4
}

define i32 @function_14a9() local_unnamed_addr {
dec_label_pc_14a9:
  %v0_14ab = load i32, i32* @ebp, align 4
  %v1_14ab = add i32 %v0_14ab, -172
  %v1_14b4 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_14ab)
  %v0_14b9 = call i32 @function_14bd()
  ret i32 %v0_14b9
}

define i32 @function_14bb() local_unnamed_addr {
dec_label_pc_14bb:
  %eax.global-to-local = alloca i32, align 4
  %v0_14bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14bb
}

define i32 @function_14bd() local_unnamed_addr {
dec_label_pc_14bd:
  %v0_14bd = load i32, i32* @ebp, align 4
  %v1_14bd = add i32 %v0_14bd, -1068
  ret i32 %v1_14bd
}

define i32 @function_14cb() local_unnamed_addr {
dec_label_pc_14cb:
  %v1_14cb = call i32 @function_16e4(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_14cb
}

define i32 @function_14d0() local_unnamed_addr {
dec_label_pc_14d0:
  %v0_14d2 = load i32, i32* @ebp, align 4
  %v1_14d2 = add i32 %v0_14d2, -520
  %v1_14db = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_14d2)
  %v0_14e0 = call i32 @function_14e4()
  ret i32 %v0_14e0
}

define i32 @function_14e2() local_unnamed_addr {
dec_label_pc_14e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_14e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14e2
}

define i32 @function_14e4() local_unnamed_addr {
dec_label_pc_14e4:
  %v0_14e4 = load i32, i32* @ebp, align 4
  %v1_14e4 = add i32 %v0_14e4, -1064
  ret i32 %v1_14e4
}

define i32 @function_14f2() local_unnamed_addr {
dec_label_pc_14f2:
  %v0_14f2 = call i32 @function_14f6()
  ret i32 %v0_14f2
}

define i32 @function_14f4() local_unnamed_addr {
dec_label_pc_14f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_14f4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14f4
}

define i32 @function_14f6() local_unnamed_addr {
dec_label_pc_14f6:
  %v0_14f6 = load i32, i32* @ebp, align 4
  %v1_1504 = add i32 %v0_14f6, -152
  %v1_150d = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1504)
  %v1_1512 = call i32 @function_16e4(i32 %v1_1504)
  ret i32 %v1_1512
}

define i32 @function_1517() local_unnamed_addr {
dec_label_pc_1517:
  %v0_1519 = load i32, i32* @ebp, align 4
  %v1_1519 = add i32 %v0_1519, -496
  %v1_1522 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1519)
  %v0_1527 = call i32 @function_152b()
  ret i32 %v0_1527
}

define i32 @function_1529() local_unnamed_addr {
dec_label_pc_1529:
  %eax.global-to-local = alloca i32, align 4
  %v0_1529 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1529
}

define i32 @function_152b() local_unnamed_addr {
dec_label_pc_152b:
  %v0_152b = load i32, i32* @ebp, align 4
  %v1_152b = add i32 %v0_152b, -1060
  ret i32 %v1_152b
}

define i32 @function_1539() local_unnamed_addr {
dec_label_pc_1539:
  %v0_1539 = call i32 @function_153d()
  ret i32 %v0_1539
}

define i32 @function_153b() local_unnamed_addr {
dec_label_pc_153b:
  %eax.global-to-local = alloca i32, align 4
  %v0_153b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_153b
}

define i32 @function_153d() local_unnamed_addr {
dec_label_pc_153d:
  %v0_153d = load i32, i32* @ebp, align 4
  %v1_153d = add i32 %v0_153d, -986
  ret i32 %v1_153d
}

define i32 @function_154a() local_unnamed_addr {
dec_label_pc_154a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_154a = load i32, i32* @ebp, align 4
  %v1_154a = add i32 %v0_154a, -33659
  %v2_154a = inttoptr i32 %v1_154a to i32*
  %v3_154a = load i32, i32* %v2_154a, align 4
  %v4_154a = add i32 %v3_154a, -1
  store i32 %v4_154a, i32* %v2_154a, align 4
  %v0_1550 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1550 = add i32 %v0_1550, -1612176380
  %v2_1550 = inttoptr i32 %v1_1550 to i32*
  %v3_1550 = load i32, i32* %v2_1550, align 4
  %v4_1550 = add i32 %v3_1550, -1
  store i32 %v4_1550, i32* %v2_1550, align 4
  %v2_1557 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1557 = load i32, i32* %eax.global-to-local, align 4
  %v4_1557 = trunc i32 %v3_1557 to i8
  %v5_1557 = add i8 %v4_1557, %v2_1557
  %v21_1557 = inttoptr i32 %v3_1557 to i8*
  store i8 %v5_1557, i8* %v21_1557, align 1
  %v1_1559 = call i32 @function_16e4(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_1559, i32* %eax.global-to-local, align 4
  ret i32 %v1_1559
}

define i32 @function_155e() local_unnamed_addr {
dec_label_pc_155e:
  %v0_1560 = load i32, i32* @ebp, align 4
  %v1_1560 = add i32 %v0_1560, -472
  %v1_1569 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1560)
  %v0_156e = call i32 @function_1572()
  ret i32 %v0_156e
}

define i32 @function_1570() local_unnamed_addr {
dec_label_pc_1570:
  %eax.global-to-local = alloca i32, align 4
  %v0_1570 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1570
}

define i32 @function_1572() local_unnamed_addr {
dec_label_pc_1572:
  %v0_1572 = load i32, i32* @ebp, align 4
  %v1_1572 = add i32 %v0_1572, -1056
  ret i32 %v1_1572
}

define i32 @function_1580() local_unnamed_addr {
dec_label_pc_1580:
  %v0_1580 = call i32 @function_1584()
  ret i32 %v0_1580
}

define i32 @function_1582() local_unnamed_addr {
dec_label_pc_1582:
  %eax.global-to-local = alloca i32, align 4
  %v0_1582 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1582
}

define i32 @function_1584() local_unnamed_addr {
dec_label_pc_1584:
  %v0_1584 = load i32, i32* @ebp, align 4
  %v1_1584 = add i32 %v0_1584, -985
  ret i32 %v1_1584
}

define i32 @function_1591(i32 %arg1) local_unnamed_addr {
dec_label_pc_1591:
  %eax.global-to-local = alloca i32, align 4
  %v0_1591 = load i32, i32* @ebp, align 4
  %v1_1591 = add i32 %v0_1591, 76124229
  %v2_1591 = inttoptr i32 %v1_1591 to i32*
  %v3_1591 = load i32, i32* %v2_1591, align 4
  %v4_1591 = add i32 %v3_1591, -1
  store i32 %v4_1591, i32* %v2_1591, align 4
  %v0_1597 = load i32, i32* %eax.global-to-local, align 4
  %v1_1597 = trunc i32 %v0_1597 to i8
  %v2_1597 = and i8 %v1_1597, -24
  %v8_1597 = zext i8 %v2_1597 to i32
  %v10_1597 = and i32 %v0_1597, -256
  %v11_1597 = or i32 %v8_1597, %v10_1597
  store i32 %v11_1597, i32* %eax.global-to-local, align 4
  %v1_159b = inttoptr i32 %v11_1597 to i8*
  %v2_159b = load i8, i8* %v1_159b, align 8
  %v5_159b = add i8 %v2_159b, %v2_1597
  store i8 %v5_159b, i8* %v1_159b, align 8
  %v1_159d = call i32 @function_16e4(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_159d, i32* %eax.global-to-local, align 4
  ret i32 %v1_159d
}

define i32 @function_15a2() local_unnamed_addr {
dec_label_pc_15a2:
  %v0_15a4 = load i32, i32* @ebp, align 4
  %v1_15a4 = add i32 %v0_15a4, -448
  %v1_15ad = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_15a4)
  %v0_15b2 = call i32 @function_15b6()
  ret i32 %v0_15b2
}

define i32 @function_15b4() local_unnamed_addr {
dec_label_pc_15b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_15b4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15b4
}

define i32 @function_15b6() local_unnamed_addr {
dec_label_pc_15b6:
  %v0_15b6 = load i32, i32* @ebp, align 4
  %v1_15b6 = add i32 %v0_15b6, -1048
  %v1_15c4 = call i32 @function_15c8(i32 %v1_15b6)
  ret i32 %v1_15c4
}

define i32 @function_15c6() local_unnamed_addr {
dec_label_pc_15c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_15c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15c6
}

define i32 @function_15c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c8:
  %v0_15c8 = load i32, i32* @ebp, align 4
  %v1_15c8 = add i32 %v0_15c8, -984
  ret i32 %v1_15c8
}

define i32 @function_15d5(i16 %arg1) local_unnamed_addr {
dec_label_pc_15d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_15d5 = load i32, i32* @ebp, align 4
  %v1_15d5 = add i32 %v0_15d5, 76129349
  %v2_15d5 = inttoptr i32 %v1_15d5 to i32*
  %v3_15d5 = load i32, i32* %v2_15d5, align 4
  %v4_15d5 = add i32 %v3_15d5, -1
  store i32 %v4_15d5, i32* %v2_15d5, align 4
  %v0_15db = load i32, i32* %eax.global-to-local, align 4
  %v1_15db = trunc i32 %v0_15db to i8
  %v2_15db = and i8 %v1_15db, -24
  %v8_15db = zext i8 %v2_15db to i32
  %v10_15db = and i32 %v0_15db, -256
  %v11_15db = or i32 %v8_15db, %v10_15db
  store i32 %v11_15db, i32* %eax.global-to-local, align 4
  %v1_15df = inttoptr i32 %v11_15db to i8*
  %v2_15df = load i8, i8* %v1_15df, align 8
  %v5_15df = add i8 %v2_15df, %v2_15db
  store i8 %v5_15df, i8* %v1_15df, align 8
  %v0_15e1 = call i32 @function_15e5()
  store i32 %v0_15e1, i32* %eax.global-to-local, align 4
  ret i32 %v0_15e1
}

define i32 @function_15e3() local_unnamed_addr {
dec_label_pc_15e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_15e3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15e3
}

define i32 @function_15e5() local_unnamed_addr {
dec_label_pc_15e5:
  %v0_15e5 = load i32, i32* @ebp, align 4
  %v1_15e5 = add i32 %v0_15e5, -1052
  ret i32 %v1_15e5
}

define i32 @function_15f3() local_unnamed_addr {
dec_label_pc_15f3:
  %v1_15f3 = call i32 @function_16e4(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_15f3
}

define i32 @function_15f8() local_unnamed_addr {
dec_label_pc_15f8:
  %v0_15fa = load i32, i32* @ebp, align 4
  %v1_15fa = add i32 %v0_15fa, -424
  %v1_1603 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_15fa)
  %v0_1608 = call i32 @function_160c()
  ret i32 %v0_1608
}

define i32 @function_160a() local_unnamed_addr {
dec_label_pc_160a:
  %eax.global-to-local = alloca i32, align 4
  %v0_160a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_160a
}

define i32 @function_160c() local_unnamed_addr {
dec_label_pc_160c:
  %v0_160c = load i32, i32* @ebp, align 4
  %v1_160c = add i32 %v0_160c, -1044
  ret i32 %v1_160c
}

define i32 @function_161a() local_unnamed_addr {
dec_label_pc_161a:
  %v0_161a = call i32 @function_161e()
  ret i32 %v0_161a
}

define i32 @function_161c() local_unnamed_addr {
dec_label_pc_161c:
  %eax.global-to-local = alloca i32, align 4
  %v0_161c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_161c
}

define i32 @function_161e() local_unnamed_addr {
dec_label_pc_161e:
  %v0_161e = load i32, i32* @ebp, align 4
  %v1_162c = add i32 %v0_161e, -72
  %v1_1632 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_162c)
  %v1_1637 = call i32 @function_16e4(i32 %v1_162c)
  ret i32 %v1_1637
}

define i32 @function_163c() local_unnamed_addr {
dec_label_pc_163c:
  %v0_163e = load i32, i32* @ebp, align 4
  %v1_163e = add i32 %v0_163e, -400
  %v1_1647 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_163e)
  %v0_164c = call i32 @function_1650()
  ret i32 %v0_164c
}

define i32 @function_164e() local_unnamed_addr {
dec_label_pc_164e:
  %eax.global-to-local = alloca i32, align 4
  %v0_164e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_164e
}

define i32 @function_1650() local_unnamed_addr {
dec_label_pc_1650:
  %v0_1650 = load i32, i32* @ebp, align 4
  %v1_1650 = add i32 %v0_1650, -1036
  ret i32 %v1_1650
}

define i32 @function_165e() local_unnamed_addr {
dec_label_pc_165e:
  %v0_165e = call i32 @function_1662()
  ret i32 %v0_165e
}

define i32 @function_1660() local_unnamed_addr {
dec_label_pc_1660:
  %eax.global-to-local = alloca i32, align 4
  %v0_1660 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1660
}

define i32 @function_1662() local_unnamed_addr {
dec_label_pc_1662:
  %v0_1662 = load i32, i32* @ebp, align 4
  %v1_1662 = add i32 %v0_1662, -982
  ret i32 %v1_1662
}

define i32 @function_166f() local_unnamed_addr {
dec_label_pc_166f:
  %eax.global-to-local = alloca i32, align 4
  %v0_166f = load i32, i32* @ebp, align 4
  %v1_166f = add i32 %v0_166f, 76139589
  %v2_166f = inttoptr i32 %v1_166f to i32*
  %v3_166f = load i32, i32* %v2_166f, align 4
  %v4_166f = add i32 %v3_166f, -1
  store i32 %v4_166f, i32* %v2_166f, align 4
  %v0_1675 = load i32, i32* %eax.global-to-local, align 4
  %v1_1675 = trunc i32 %v0_1675 to i8
  %v2_1675 = and i8 %v1_1675, -24
  %v8_1675 = zext i8 %v2_1675 to i32
  %v10_1675 = and i32 %v0_1675, -256
  %v11_1675 = or i32 %v8_1675, %v10_1675
  store i32 %v11_1675, i32* %eax.global-to-local, align 4
  %v1_1679 = inttoptr i32 %v11_1675 to i8*
  %v2_1679 = load i8, i8* %v1_1679, align 8
  %v5_1679 = add i8 %v2_1679, %v2_1675
  store i8 %v5_1679, i8* %v1_1679, align 8
  %v0_167b = call i32 @function_167f()
  store i32 %v0_167b, i32* %eax.global-to-local, align 4
  ret i32 %v0_167b
}

define i32 @function_167d() local_unnamed_addr {
dec_label_pc_167d:
  %eax.global-to-local = alloca i32, align 4
  %v0_167d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_167d
}

define i32 @function_167f() local_unnamed_addr {
dec_label_pc_167f:
  %v0_167f = load i32, i32* @ebp, align 4
  %v1_167f = add i32 %v0_167f, -1040
  ret i32 %v1_167f
}

define i32 @function_168d() local_unnamed_addr {
dec_label_pc_168d:
  %v1_168d = call i32 @function_16e4(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_168d
}

define i32 @function_168f() local_unnamed_addr {
dec_label_pc_168f:
  %v0_1691 = load i32, i32* @ebp, align 4
  %v1_1691 = add i32 %v0_1691, -376
  %v1_169a = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1691)
  %v0_169f = call i32 @function_16a3()
  ret i32 %v0_169f
}

define i32 @function_16a1() local_unnamed_addr {
dec_label_pc_16a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_16a1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16a1
}

define i32 @function_16a3() local_unnamed_addr {
dec_label_pc_16a3:
  %v0_16a3 = load i32, i32* @ebp, align 4
  %v1_16a3 = add i32 %v0_16a3, -1028
  ret i32 %v1_16a3
}

define i32 @function_16b1() local_unnamed_addr {
dec_label_pc_16b1:
  %v0_16b1 = call i32 @function_16b5()
  ret i32 %v0_16b1
}

define i32 @function_16b3() local_unnamed_addr {
dec_label_pc_16b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_16b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16b3
}

define i32 @function_16b5() local_unnamed_addr {
dec_label_pc_16b5:
  %v0_16b5 = load i32, i32* @ebp, align 4
  %v1_16b5 = add i32 %v0_16b5, -981
  ret i32 %v1_16b5
}

define i32 @function_16c2() local_unnamed_addr {
dec_label_pc_16c2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16c2 = load i32, i32* @ebp, align 4
  %v1_16c2 = add i32 %v0_16c2, 76144709
  %v2_16c2 = inttoptr i32 %v1_16c2 to i32*
  %v3_16c2 = load i32, i32* %v2_16c2, align 4
  %v4_16c2 = add i32 %v3_16c2, -1
  store i32 %v4_16c2, i32* %v2_16c2, align 4
  %v0_16c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_16c8 = trunc i32 %v0_16c8 to i8
  %v2_16c8 = and i8 %v1_16c8, -24
  %v8_16c8 = zext i8 %v2_16c8 to i32
  %v10_16c8 = and i32 %v0_16c8, -256
  %v11_16c8 = or i32 %v8_16c8, %v10_16c8
  store i32 %v11_16c8, i32* %eax.global-to-local, align 4
  %v0_16ca = load i32, i32* %ecx.global-to-local, align 4
  %v1_16ca = udiv i32 %v0_16ca, 256
  %v4_16ca = udiv i32 %v0_16c8, 256
  %v6_16ca = sub nsw i32 %v1_16ca, %v4_16ca
  %v21_16ca = and i32 %v6_16ca, 255
  %v23_16ca = mul nuw nsw i32 %v21_16ca, 256
  %v24_16ca = and i32 %v0_16ca, -65281
  %v25_16ca = or i32 %v23_16ca, %v24_16ca
  store i32 %v25_16ca, i32* %ecx.global-to-local, align 4
  %v1_16cc = inttoptr i32 %v11_16c8 to i8*
  %v2_16cc = load i8, i8* %v1_16cc, align 8
  %v5_16cc = add i8 %v2_16cc, %v2_16c8
  store i8 %v5_16cc, i8* %v1_16cc, align 8
  %v0_16ce = call i32 @function_16d2()
  store i32 %v0_16ce, i32* %eax.global-to-local, align 4
  ret i32 %v0_16ce

; uselistorder directives
  uselistorder i32 %v0_16ca, { 1, 0 }
}

define i32 @function_16d0() local_unnamed_addr {
dec_label_pc_16d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_16d0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16d0
}

define i32 @function_16d2() local_unnamed_addr {
dec_label_pc_16d2:
  %v0_16d2 = load i32, i32* @ebp, align 4
  %v1_16d2 = add i32 %v0_16d2, -1032
  %v1_16e0 = call i32 @function_16e4(i32 %v1_16d2)
  ret i32 %v1_16e0

; uselistorder directives
  uselistorder i32 (i32)* @function_16e4, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_16e3() local_unnamed_addr {
dec_label_pc_16e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_16e3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16e3
}

define i32 @function_16e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e4:
  %v0_16e4 = load i32, i32* @ebp, align 4
  %v1_16e4 = add i32 %v0_16e4, -1144
  %v1_16ed = inttoptr i32 %v1_16e4 to i32*
  %v2_16ed = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_16ed)
  %v1_16f2 = call i32 @function_16f6(i32 %v1_16e4)
  ret i32 %v1_16f2

; uselistorder directives
  uselistorder i32 (i32)* @function_16f6, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_16f5() local_unnamed_addr {
dec_label_pc_16f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_16f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16f5
}

define i32 @function_16f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f6:
  %v0_16f6 = load i32, i32* @ebp, align 4
  %v1_16f6 = add i32 %v0_16f6, -980
  %v1_16ff = call i32 @_ZN9CMerkleTxD1Ev(i32 %v1_16f6)
  %v0_1704 = call i32 @function_1708()
  ret i32 %v0_1704

; uselistorder directives
  uselistorder i32 ()* @function_1708, { 1, 0 }
}

define i32 @function_1707() local_unnamed_addr {
dec_label_pc_1707:
  %eax.global-to-local = alloca i32, align 4
  %v0_1707 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1707
}

define i32 @function_1708() local_unnamed_addr {
dec_label_pc_1708:
  %v0_1708 = load i32, i32* @ebp, align 4
  %v1_1708 = add i32 %v0_1708, -1148
  %v2_1708 = inttoptr i32 %v1_1708 to i32*
  %v3_1708 = load i32, i32* %v2_1708, align 4
  %v1_1711 = inttoptr i32 %v3_1708 to i32*
  %v2_1711 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_1711)
  %v0_1716 = load i32, i32* @ebx, align 4
  ret i32 %v0_1716
}

define i32 @function_1720() local_unnamed_addr {
dec_label_pc_1720:
  %v0_1720 = load i32, i32* @ebp, align 4
  %v1_1720 = add i32 %v0_1720, -1148
  %v2_1720 = inttoptr i32 %v1_1720 to i32*
  %v3_1720 = load i32, i32* %v2_1720, align 4
  store i32 %v3_1720, i32* @eax, align 4
  %v1_1726 = add i32 %v0_1720, -12
  %v2_1726 = inttoptr i32 %v1_1726 to i32*
  %v3_1726 = load i32, i32* %v2_1726, align 4
  %v1_1729 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1729 = icmp eq i32 %v1_1729, %v3_1726
  br i1 %v3_1729, label %bb, label %dec_label_pc_1732

bb:                                               ; preds = %dec_label_pc_1720
  %v1_1730 = call i32 @function_1737()
  br label %dec_label_pc_1732

dec_label_pc_1732:                                ; preds = %bb, %dec_label_pc_1720
  %v2_1730 = phi i32 [ %v1_1730, %bb ], [ %v3_1720, %dec_label_pc_1720 ]
  ret i32 %v2_1730

; uselistorder directives
  uselistorder i32 -1148, { 1, 0 }
}

define i32 @function_1737() local_unnamed_addr {
dec_label_pc_1737:
  %v0_173b = load i32, i32* @eax, align 4
  ret i32 %v0_173b
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" @_Z13getblockcountRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_173e:
  %stack_var_-17 = alloca i32, align 4
  %tmp112 = call i8 @__decompiler_undefined_function_4()
  %v10_1763 = icmp eq i8 %tmp112, 0
  %v1_1767 = icmp eq i1 %v10_1763, false
  br i1 %v1_1767, label %dec_label_pc_1784, label %dec_label_pc_1769

dec_label_pc_1769:                                ; preds = %dec_label_pc_173e
  %v4_174f = sext i1 %fHelp to i32
  %v2_176f = inttoptr i32 %v4_174f to i32*
  %v3_176f = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_176f)
  %v1_1774 = icmp ne i32 %v3_176f, 0
  %. = zext i1 %v1_1774 to i32
  br label %dec_label_pc_1784

dec_label_pc_1784:                                ; preds = %dec_label_pc_1769, %dec_label_pc_173e
  %storemerge = phi i32 [ 1, %dec_label_pc_173e ], [ %., %dec_label_pc_1769 ]
  store i32 %storemerge, i32* @eax, align 4
  %v5_1784 = icmp eq i32 %storemerge, 0
  br i1 %v5_1784, label %bb, label %dec_label_pc_1788

bb:                                               ; preds = %dec_label_pc_1784
  %v1_1786 = call i32 @function_17f9()
  br label %dec_label_pc_1788

dec_label_pc_1788:                                ; preds = %bb, %dec_label_pc_1784
  %v2_1796 = ptrtoint i32* %stack_var_-17 to i32
  %v6_1799 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" undef, i32 %v2_1796, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" %v6_1799
}

define i32 @function_17f9() local_unnamed_addr {
dec_label_pc_17f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_182b() local_unnamed_addr {
dec_label_pc_182b:
  %v0_182b = call i32 @function_182f()
  ret i32 %v0_182b
}

define i32 @function_182d() local_unnamed_addr {
dec_label_pc_182d:
  %eax.global-to-local = alloca i32, align 4
  %v0_182d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_182d
}

define i32 @function_182f() local_unnamed_addr {
dec_label_pc_182f:
  %v0_182f = load i32, i32* @ebp, align 4
  %v1_182f = add i32 %v0_182f, -13
  ret i32 %v1_182f
}

define i32 @function_184c() local_unnamed_addr {
dec_label_pc_184c:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_1851(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1851:
  %eax.global-to-local = alloca i32, align 4
  %v0_1857 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1857
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" @_Z16getbestblockhashRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_185a:
  %tmp111 = call i8 @__decompiler_undefined_function_4()
  %v10_187f = icmp eq i8 %tmp111, 0
  %v1_1883 = icmp eq i1 %v10_187f, false
  br i1 %v1_1883, label %dec_label_pc_18a0, label %dec_label_pc_1885

dec_label_pc_1885:                                ; preds = %dec_label_pc_185a
  %v4_186b = sext i1 %fHelp to i32
  %v2_188b = inttoptr i32 %v4_186b to i32*
  %v3_188b = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_188b)
  %v1_1890 = icmp ne i32 %v3_188b, 0
  %. = zext i1 %v1_1890 to i32
  br label %dec_label_pc_18a0

dec_label_pc_18a0:                                ; preds = %dec_label_pc_1885, %dec_label_pc_185a
  %storemerge = phi i32 [ 1, %dec_label_pc_185a ], [ %., %dec_label_pc_1885 ]
  %v5_18a0 = icmp eq i32 %storemerge, 0
  br i1 %v5_18a0, label %bb, label %dec_label_pc_18a4

bb:                                               ; preds = %dec_label_pc_18a0
  %v1_18a2 = call i32 @function_1915()
  br label %dec_label_pc_18a4

dec_label_pc_18a4:                                ; preds = %bb, %dec_label_pc_18a0
  %v3_18a4 = phi i32 [ %v1_18a2, %bb ], [ %storemerge, %dec_label_pc_18a0 ]
  %v4_18a4 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" undef, i32 %v3_18a4, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" %v4_18a4

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_18b1() local_unnamed_addr {
dec_label_pc_18b1:
  %eax.global-to-local = alloca i32, align 4
  %v0_18b1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18b1
}

define i32 @function_1915() local_unnamed_addr {
dec_label_pc_1915:
  %v0_1915 = load i32, i32* @ebp, align 4
  %v1_1915 = add i32 %v0_1915, -20
  ret i32 %v1_1915
}

define i32 @function_1947() local_unnamed_addr {
dec_label_pc_1947:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1947 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1947 = add i32 %v0_1947, 1435231301
  %v2_1947 = inttoptr i32 %v1_1947 to i32*
  %v3_1947 = load i32, i32* %v2_1947, align 4
  %v4_1947 = add i32 %v3_1947, -1
  store i32 %v4_1947, i32* %v2_1947, align 4
  %v0_194e = load i32, i32* %edx.global-to-local, align 8
  %v1_194e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_194e = xor i32 %v1_194e, %v0_194e
  %v3_194e = icmp eq i32 %v2_194e, 0
  store i32 %v2_194e, i32* %edx.global-to-local, align 8
  br i1 %v3_194e, label %bb, label %dec_label_pc_1957

bb:                                               ; preds = %dec_label_pc_1947
  %v1_1955 = call i32 @function_19a3()
  store i32 %v1_1955, i32* @eax, align 4
  br label %dec_label_pc_1957

dec_label_pc_1957:                                ; preds = %bb, %dec_label_pc_1947
  %v0_1957 = call i32 @function_199e()
  ret i32 %v0_1957
}

define i32 @function_1966() local_unnamed_addr {
dec_label_pc_1966:
  %v0_1966 = call i32 @function_196a()
  ret i32 %v0_1966
}

define i32 @function_1968() local_unnamed_addr {
dec_label_pc_1968:
  %eax.global-to-local = alloca i32, align 4
  %v0_1968 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1968
}

define i32 @function_196a() local_unnamed_addr {
dec_label_pc_196a:
  %v0_196a = load i32, i32* @ebp, align 4
  %v1_196a = add i32 %v0_196a, -13
  ret i32 %v1_196a
}

define i32 @function_1988() local_unnamed_addr {
dec_label_pc_1988:
  %eax.global-to-local = alloca i32, align 4
  %v0_1988 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1988
}

define i32 @function_199e() local_unnamed_addr {
dec_label_pc_199e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19a3() local_unnamed_addr {
dec_label_pc_19a3:
  %v0_19a9 = load i32, i32* @eax, align 4
  ret i32 %v0_19a9
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" @_Z13getdifficultyRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_19ac:
  %tmp111 = call i8 @__decompiler_undefined_function_4()
  %v10_19d1 = icmp eq i8 %tmp111, 0
  %v1_19d5 = icmp eq i1 %v10_19d1, false
  br i1 %v1_19d5, label %dec_label_pc_19f2, label %dec_label_pc_19d7

dec_label_pc_19d7:                                ; preds = %dec_label_pc_19ac
  %v4_19bd = sext i1 %fHelp to i32
  %v2_19dd = inttoptr i32 %v4_19bd to i32*
  %v3_19dd = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_19dd)
  %v1_19e2 = icmp ne i32 %v3_19dd, 0
  %. = zext i1 %v1_19e2 to i32
  br label %dec_label_pc_19f2

dec_label_pc_19f2:                                ; preds = %dec_label_pc_19d7, %dec_label_pc_19ac
  %storemerge = phi i32 [ 1, %dec_label_pc_19ac ], [ %., %dec_label_pc_19d7 ]
  store i32 %storemerge, i32* @eax, align 4
  %v5_19f2 = icmp eq i32 %storemerge, 0
  br i1 %v5_19f2, label %bb, label %dec_label_pc_19f6

bb:                                               ; preds = %dec_label_pc_19f2
  %v1_19f4 = call i32 @function_1a67()
  br label %dec_label_pc_19f6

dec_label_pc_19f6:                                ; preds = %bb, %dec_label_pc_19f2
  %v3_19f6 = phi i32 [ %v1_19f4, %bb ], [ %storemerge, %dec_label_pc_19f2 ]
  %v4_19f6 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" undef, i32 %v3_19f6, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" %v4_19f6

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0, 2 }
}

define i32 @function_1a03() local_unnamed_addr {
dec_label_pc_1a03:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a03 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a03
}

define i32 @function_1a67() local_unnamed_addr {
dec_label_pc_1a67:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1aa9() local_unnamed_addr {
dec_label_pc_1aa9:
  %v0_1aa9 = call i32 @function_1aad()
  ret i32 %v0_1aa9
}

define i32 @function_1aab() local_unnamed_addr {
dec_label_pc_1aab:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aab
}

define i32 @function_1aad() local_unnamed_addr {
dec_label_pc_1aad:
  %v0_1aad = load i32, i32* @ebp, align 4
  %v1_1aad = add i32 %v0_1aad, -13
  ret i32 %v1_1aad
}

define i32 @function_1aca() local_unnamed_addr {
dec_label_pc_1aca:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_1acf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1acf:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ad5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ad5
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" @_Z8settxfeeRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_1ad8:
  %tmp111 = call i8 @__decompiler_undefined_function_4()
  %v10_1afd = icmp eq i8 %tmp111, 0
  %v1_1b01 = icmp eq i1 %v10_1afd, false
  br i1 %v1_1b01, label %dec_label_pc_1b2e.thread, label %dec_label_pc_1b03

dec_label_pc_1b03:                                ; preds = %dec_label_pc_1ad8
  %v4_1ae9 = sext i1 %fHelp to i32
  %v2_1b09 = inttoptr i32 %v4_1ae9 to i32*
  %v3_1b09 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_1b09)
  %v1_1b0e = icmp eq i32 %v3_1b09, 0
  br i1 %v1_1b0e, label %dec_label_pc_1b2e.thread, label %dec_label_pc_1b2e

dec_label_pc_1b2e.thread:                         ; preds = %dec_label_pc_1b03, %dec_label_pc_1ad8
  br label %dec_label_pc_1b32

dec_label_pc_1b2e:                                ; preds = %dec_label_pc_1b03
  %v3_1b18 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_1b09)
  %tmp121 = or i32 %v3_1b18, 1
  %tmp122 = icmp ne i32 %tmp121, 1
  %v5_1b2e = icmp eq i1 %tmp122, false
  br i1 %v5_1b2e, label %bb, label %dec_label_pc_1b32

bb:                                               ; preds = %dec_label_pc_1b2e
  %v1_1b30 = call i32 @function_1ba3()
  br label %dec_label_pc_1b32

dec_label_pc_1b32:                                ; preds = %dec_label_pc_1b2e.thread, %bb, %dec_label_pc_1b2e
  %v3_1b32 = phi i32 [ %v1_1b30, %bb ], [ 1, %dec_label_pc_1b2e ], [ 1, %dec_label_pc_1b2e.thread ]
  %v4_1b32 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" undef, i32 %v3_1b32, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" %v4_1b32

; uselistorder directives
  uselistorder label %dec_label_pc_1b32, { 1, 2, 0 }
}

define i32 @function_1b3f() local_unnamed_addr {
dec_label_pc_1b3f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b3f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b3f
}

define i32 @function_1ba3() local_unnamed_addr {
dec_label_pc_1be5:
  %v0_1ba3 = load i32, i32* @ebp, align 4
  %v1_1ba3 = add i32 %v0_1ba3, -32
  %v2_1ba3 = inttoptr i32 %v1_1ba3 to i32*
  store i32 0, i32* %v2_1ba3, align 4
  %v0_1baa = load i32, i32* @ebp, align 4
  %v1_1baa = add i32 %v0_1baa, -28
  %v2_1baa = inttoptr i32 %v1_1baa to i32*
  store i32 0, i32* %v2_1baa, align 4
  %v0_1bb9 = load i32, i32* @ebp, align 4
  %v1_1bb9 = add i32 %v0_1bb9, -48
  %v2_1bb9 = inttoptr i32 %v1_1bb9 to i32*
  %v3_1bb9 = load i32, i32* %v2_1bb9, align 4
  %v2_1bbf = inttoptr i32 %v3_1bb9 to i32*
  %v3_1bbf = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_1bbf, i32 0)
  %v1_1bc7 = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE8get_realEv(i32 %v3_1bbf)
  %v1_1be3 = call i32 @function_1c06()
  %v0_1bed = load i32, i32* @ebp, align 4
  %v1_1bed = add i32 %v0_1bed, -48
  %v2_1bed = inttoptr i32 %v1_1bed to i32*
  %v3_1bed = load i32, i32* %v2_1bed, align 4
  %v2_1bf3 = inttoptr i32 %v3_1bed to i32*
  %v3_1bf3 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_1bf3, i32 0)
  ret i32 %v3_1bf3
}

define i32 @function_1c06() local_unnamed_addr {
dec_label_pc_1c06:
  call void @llvm.trap()
  unreachable
}

define i32 @function_1c3b() local_unnamed_addr {
dec_label_pc_1c3b:
  %v0_1c3d = load i32, i32* @ebp, align 4
  %v1_1c3d = add i32 %v0_1c3d, -20
  %v1_1c48 = call i32 @function_1c4c(i32 %v1_1c3d)
  ret i32 %v1_1c48
}

define i32 @function_1c4a() local_unnamed_addr {
dec_label_pc_1c4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c4a
}

define i32 @function_1c4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c4c:
  %v0_1c4c = load i32, i32* @ebp, align 4
  %v1_1c4c = add i32 %v0_1c4c, -13
  ret i32 %v1_1c4c
}

define i32 @function_1c69() local_unnamed_addr {
dec_label_pc_1c69:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_1c6e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c6e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c74 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c74
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" @_Z13getrawmempoolRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_1c77:
  %tmp111 = call i8 @__decompiler_undefined_function_4()
  %v10_1c9c = icmp eq i8 %tmp111, 0
  %v1_1ca0 = icmp eq i1 %v10_1c9c, false
  br i1 %v1_1ca0, label %dec_label_pc_1cbd, label %dec_label_pc_1ca2

dec_label_pc_1ca2:                                ; preds = %dec_label_pc_1c77
  %v4_1c88 = sext i1 %fHelp to i32
  %v2_1ca8 = inttoptr i32 %v4_1c88 to i32*
  %v3_1ca8 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_1ca8)
  %v1_1cad = icmp ne i32 %v3_1ca8, 0
  %. = zext i1 %v1_1cad to i32
  br label %dec_label_pc_1cbd

dec_label_pc_1cbd:                                ; preds = %dec_label_pc_1ca2, %dec_label_pc_1c77
  %storemerge = phi i32 [ 1, %dec_label_pc_1c77 ], [ %., %dec_label_pc_1ca2 ]
  %v5_1cbd = icmp eq i32 %storemerge, 0
  br i1 %v5_1cbd, label %bb, label %dec_label_pc_1cc1

bb:                                               ; preds = %dec_label_pc_1cbd
  %v1_1cbf = call i32 @function_1d32()
  br label %dec_label_pc_1cc1

dec_label_pc_1cc1:                                ; preds = %bb, %dec_label_pc_1cbd
  %v3_1cc1 = phi i32 [ %v1_1cbf, %bb ], [ %storemerge, %dec_label_pc_1cbd ]
  %v4_1cc1 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" undef, i32 %v3_1cc1, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" %v4_1cc1

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_1cce() local_unnamed_addr {
dec_label_pc_1cce:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cce = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cce
}

define i32 @function_1d32() local_unnamed_addr {
dec_label_pc_1d32:
  %v0_1d32 = load i32, i32* @ebp, align 4
  %v1_1d32 = add i32 %v0_1d32, -96
  %v1_1d38 = call i32 @_ZNSt6vectorI7uint256SaIS0_EEC1Ev(i32 %v1_1d32)
  %v0_1d3d = load i32, i32* @ebp, align 4
  %v1_1d3d = add i32 %v0_1d3d, -96
  ret i32 %v1_1d3d
}

define i32 @function_1d4f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d4f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d4f = load i32, i32* @ebp, align 4
  %v1_1d4f = add i32 %v0_1d4f, 76131397
  %v2_1d4f = inttoptr i32 %v1_1d4f to i32*
  %v3_1d4f = load i32, i32* %v2_1d4f, align 4
  %v4_1d4f = add i32 %v3_1d4f, -1
  store i32 %v4_1d4f, i32* %v2_1d4f, align 4
  %v0_1d55 = load i32, i32* %eax.global-to-local, align 4
  %v11_1d55 = and i32 %v0_1d55, -1166868504
  %v1_1d58 = or i32 %v11_1d55, 1166868481
  %v4_1d58 = trunc i32 %v1_1d58 to i8
  store i32 %v1_1d58, i32* %eax.global-to-local, align 4
  %v1_1d62 = inttoptr i32 %v1_1d58 to i8*
  %v2_1d62 = load i8, i8* %v1_1d62, align 1
  %v5_1d62 = add i8 %v2_1d62, %v4_1d58
  store i8 %v5_1d62, i8* %v1_1d62, align 1
  %v0_1d64 = load i32, i32* %eax.global-to-local, align 4
  %v1_1d64 = inttoptr i32 %v0_1d64 to i8*
  %v2_1d64 = load i8, i8* %v1_1d64, align 1
  %v4_1d64 = trunc i32 %v0_1d64 to i8
  %v5_1d64 = add i8 %v2_1d64, %v4_1d64
  store i8 %v5_1d64, i8* %v1_1d64, align 1
  %v0_1d66 = load i32, i32* @ebp, align 4
  %v1_1d66 = add i32 %v0_1d66, -96
  %v1_1d69 = load i32, i32* @esp, align 4
  %v2_1d69 = add i32 %v1_1d69, 4
  %v3_1d69 = inttoptr i32 %v2_1d69 to i32*
  store i32 %v1_1d66, i32* %v3_1d69, align 4
  %v0_1d6d = load i32, i32* %eax.global-to-local, align 4
  %v1_1d6d = load i32, i32* @esp, align 4
  %v2_1d6d = inttoptr i32 %v1_1d6d to i32*
  store i32 %v0_1d6d, i32* %v2_1d6d, align 4
  %v0_1d70 = call i32 @_ZN5boost15foreach_detail_7containISt6vectorI7uint256SaIS3_EEEENS0_8auto_anyIPT_EERS7_PN4mpl_5bool_ILb0EEE()
  %v0_1d78 = load i32, i32* @ebp, align 4
  %v1_1d78 = add i32 %v0_1d78, -68
  store i32 %v1_1d78, i32* %eax.global-to-local, align 4
  %v2_1d7b = add i32 %v0_1d78, -52
  %v3_1d7b = inttoptr i32 %v2_1d7b to i32*
  store i32 %v1_1d78, i32* %v3_1d7b, align 4
  %v0_1d7e = load i32, i32* @ebp, align 4
  %v1_1d7e = add i32 %v0_1d7e, -52
  %v2_1d7e = inttoptr i32 %v1_1d7e to i32*
  %v3_1d7e = load i32, i32* %v2_1d7e, align 4
  store i32 %v3_1d7e, i32* %eax.global-to-local, align 4
  %v1_1d81 = load i32, i32* @esp, align 4
  %v2_1d81 = inttoptr i32 %v1_1d81 to i32*
  store i32 %v3_1d7e, i32* %v2_1d81, align 4
  %v1_1d84 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_1d84, i32* %eax.global-to-local, align 4
  %v4_1d89 = trunc i32 %v1_1d84 to i8
  %v5_1d89 = icmp eq i8 %v4_1d89, 0
  %v1_1d8b = icmp eq i1 %v5_1d89, false
  br i1 %v1_1d8b, label %bb, label %dec_label_pc_1d91

bb:                                               ; preds = %dec_label_pc_1d4f
  %v2_1d8b = call i32 @function_1ef3()
  store i32 %v2_1d8b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1d91

dec_label_pc_1d91:                                ; preds = %bb, %dec_label_pc_1d4f
  %v0_1d91 = load i32, i32* @ebp, align 4
  %v1_1d91 = add i32 %v0_1d91, -64
  store i32 %v1_1d91, i32* %eax.global-to-local, align 4
  %v0_1d94 = load i32, i32* @esp, align 4
  %v1_1d94 = add i32 %v0_1d94, 12
  %v2_1d94 = inttoptr i32 %v1_1d94 to i32*
  store i32 0, i32* %v2_1d94, align 4
  %v0_1d9c = load i32, i32* @esp, align 4
  %v1_1d9c = add i32 %v0_1d9c, 8
  %v2_1d9c = inttoptr i32 %v1_1d9c to i32*
  store i32 0, i32* %v2_1d9c, align 4
  %v0_1da4 = load i32, i32* @ebp, align 4
  %v1_1da4 = add i32 %v0_1da4, -52
  %v2_1da4 = inttoptr i32 %v1_1da4 to i32*
  %v3_1da4 = load i32, i32* %v2_1da4, align 4
  store i32 %v3_1da4, i32* @edx, align 8
  %v1_1da7 = load i32, i32* @esp, align 4
  %v2_1da7 = add i32 %v1_1da7, 4
  %v3_1da7 = inttoptr i32 %v2_1da7 to i32*
  store i32 %v3_1da4, i32* %v3_1da7, align 4
  %v0_1dab = load i32, i32* %eax.global-to-local, align 4
  %v1_1dab = load i32, i32* @esp, align 4
  %v2_1dab = inttoptr i32 %v1_1dab to i32*
  store i32 %v0_1dab, i32* %v2_1dab, align 4
  %v0_1dae = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_()
  %v0_1db6 = load i32, i32* @ebp, align 4
  %v1_1db6 = add i32 %v0_1db6, -64
  store i32 %v1_1db6, i32* %eax.global-to-local, align 4
  %v2_1db9 = add i32 %v0_1db6, -48
  %v3_1db9 = inttoptr i32 %v2_1db9 to i32*
  store i32 %v1_1db6, i32* %v3_1db9, align 4
  %v0_1dbc = load i32, i32* @ebp, align 4
  %v1_1dbc = add i32 %v0_1dbc, -48
  %v2_1dbc = inttoptr i32 %v1_1dbc to i32*
  %v3_1dbc = load i32, i32* %v2_1dbc, align 4
  store i32 %v3_1dbc, i32* %eax.global-to-local, align 4
  %v1_1dbf = load i32, i32* @esp, align 4
  %v2_1dbf = inttoptr i32 %v1_1dbf to i32*
  store i32 %v3_1dbc, i32* %v2_1dbf, align 4
  %v1_1dc2 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_1dc2, i32* %eax.global-to-local, align 4
  %v4_1dc7 = trunc i32 %v1_1dc2 to i8
  %v5_1dc7 = icmp eq i8 %v4_1dc7, 0
  %v1_1dc9 = icmp eq i1 %v5_1dc7, false
  br i1 %v1_1dc9, label %bb103, label %dec_label_pc_1dcf

bb103:                                            ; preds = %dec_label_pc_1d91
  %v2_1dc9 = call i32 @function_1ef3()
  store i32 %v2_1dc9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1dcf

dec_label_pc_1dcf:                                ; preds = %bb103, %dec_label_pc_1d91
  %v0_1dcf = load i32, i32* @ebp, align 4
  %v1_1dcf = add i32 %v0_1dcf, -60
  store i32 %v1_1dcf, i32* %eax.global-to-local, align 4
  %v0_1dd2 = load i32, i32* @esp, align 4
  %v1_1dd2 = add i32 %v0_1dd2, 12
  %v2_1dd2 = inttoptr i32 %v1_1dd2 to i32*
  store i32 0, i32* %v2_1dd2, align 4
  %v0_1dda = load i32, i32* @esp, align 4
  %v1_1dda = add i32 %v0_1dda, 8
  %v2_1dda = inttoptr i32 %v1_1dda to i32*
  store i32 0, i32* %v2_1dda, align 4
  %v0_1de2 = load i32, i32* @ebp, align 4
  %v1_1de2 = add i32 %v0_1de2, -52
  %v2_1de2 = inttoptr i32 %v1_1de2 to i32*
  %v3_1de2 = load i32, i32* %v2_1de2, align 4
  %v1_1de5 = load i32, i32* @esp, align 4
  %v2_1de5 = add i32 %v1_1de5, 4
  %v3_1de5 = inttoptr i32 %v2_1de5 to i32*
  store i32 %v3_1de2, i32* %v3_1de5, align 4
  %v0_1de9 = load i32, i32* %eax.global-to-local, align 4
  %v1_1de9 = load i32, i32* @esp, align 4
  %v2_1de9 = inttoptr i32 %v1_1de9 to i32*
  store i32 %v0_1de9, i32* %v2_1de9, align 4
  %v0_1dec = call i32 @_ZN5boost15foreach_detail_3endISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_()
  %v0_1df4 = load i32, i32* @ebp, align 4
  %v1_1df4 = add i32 %v0_1df4, -60
  store i32 %v1_1df4, i32* %eax.global-to-local, align 4
  %v2_1df7 = add i32 %v0_1df4, -44
  %v3_1df7 = inttoptr i32 %v2_1df7 to i32*
  store i32 %v1_1df4, i32* %v3_1df7, align 4
  %v0_1dfa = load i32, i32* @ebp, align 4
  %v1_1dfa = add i32 %v0_1dfa, -44
  %v2_1dfa = inttoptr i32 %v1_1dfa to i32*
  %v3_1dfa = load i32, i32* %v2_1dfa, align 4
  store i32 %v3_1dfa, i32* %eax.global-to-local, align 4
  %v1_1dfd = load i32, i32* @esp, align 4
  %v2_1dfd = inttoptr i32 %v1_1dfd to i32*
  store i32 %v3_1dfa, i32* %v2_1dfd, align 4
  %v1_1e00 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_1e00, i32* %eax.global-to-local, align 4
  %v4_1e05 = trunc i32 %v1_1e00 to i8
  %v5_1e05 = icmp eq i8 %v4_1e05, 0
  %v1_1e07 = icmp eq i1 %v5_1e05, false
  br i1 %v1_1e07, label %bb105, label %dec_label_pc_1e0d

bb105:                                            ; preds = %dec_label_pc_1dcf
  %v2_1e07 = call i32 @function_1ef3()
  store i32 %v2_1e07, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1e0d

dec_label_pc_1e0d:                                ; preds = %bb105, %dec_label_pc_1dcf
  %v0_1e0d = load i32, i32* @ebp, align 4
  %v1_1e0d = add i32 %v0_1e0d, -33
  %v2_1e0d = inttoptr i32 %v1_1e0d to i8*
  store i8 1, i8* %v2_1e0d, align 1
  %v0_1e11 = call i32 @function_1eb6()
  store i32 %v0_1e11, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e11

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 ()* @function_1ef3, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost15foreach_detail_13auto_any_basecvbEv, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1e16() local_unnamed_addr {
dec_label_pc_1e16:
  %v0_1e16 = load i32, i32* @ebp, align 4
  %v1_1e16 = add i32 %v0_1e16, -33
  %v1_1e1c = inttoptr i32 %v1_1e16 to i8*
  %v2_1e1c = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_1e1c)
  %v4_1e21 = trunc i32 %v2_1e1c to i8
  %v5_1e21 = icmp eq i8 %v4_1e21, 0
  %v1_1e23 = icmp eq i1 %v5_1e21, false
  br i1 %v1_1e23, label %bb, label %dec_label_pc_1e25

bb:                                               ; preds = %dec_label_pc_1e16
  %v2_1e23 = call i32 @function_1e9b()
  br label %dec_label_pc_1e25

dec_label_pc_1e25:                                ; preds = %bb, %dec_label_pc_1e16
  %v0_1e2d = load i32, i32* @ebp, align 4
  %v1_1e2d = add i32 %v0_1e2d, -48
  %v2_1e2d = inttoptr i32 %v1_1e2d to i32*
  %v3_1e2d = load i32, i32* %v2_1e2d, align 4
  %v2_1e33 = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %v3_1e2d, i32 0)
  %v1_1e38 = load i32, i32* @ebp, align 4
  %v2_1e38 = add i32 %v1_1e38, -40
  %v3_1e38 = inttoptr i32 %v2_1e38 to i32*
  store i32 %v2_1e33, i32* %v3_1e38, align 4
  %v0_1e3b = call i32 @function_1e90()
  ret i32 %v0_1e3b
}

define i32 @function_1e3d() local_unnamed_addr {
dec_label_pc_1e3d:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_1e90() local_unnamed_addr {
dec_label_pc_1e90:
  %v0_1e90 = load i32, i32* @ebp, align 4
  %v1_1e90 = add i32 %v0_1e90, -33
  %v2_1e90 = inttoptr i32 %v1_1e90 to i8*
  %v3_1e90 = load i8, i8* %v2_1e90, align 1
  %v4_1e90 = zext i8 %v3_1e90 to i32
  %v1_1e94 = xor i32 %v4_1e90, 1
  ret i32 %v1_1e94
}

define i32 @function_1e9b() local_unnamed_addr {
dec_label_pc_1e9b:
  %v0_1e9b = load i32, i32* @ebp, align 4
  %v1_1e9b = add i32 %v0_1e9b, -33
  %v2_1e9b = inttoptr i32 %v1_1e9b to i8*
  %v3_1e9b = load i8, i8* %v2_1e9b, align 1
  %v5_1e9f = icmp eq i8 %v3_1e9b, 0
  br i1 %v5_1e9f, label %bb, label %dec_label_pc_1ea3

bb:                                               ; preds = %dec_label_pc_1e9b
  %v1_1ea1 = call i32 @function_1eb6()
  %v0_1eab.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1ea3

dec_label_pc_1ea3:                                ; preds = %bb, %dec_label_pc_1e9b
  %v0_1eab = phi i32 [ %v0_1eab.pre, %bb ], [ %v0_1e9b, %dec_label_pc_1e9b ]
  %v1_1eab = add i32 %v0_1eab, -48
  %v2_1eab = inttoptr i32 %v1_1eab to i32*
  %v3_1eab = load i32, i32* %v2_1eab, align 4
  %v2_1eb1 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_1eab, i32 0)
  ret i32 %v2_1eb1

; uselistorder directives
  uselistorder i32 ()* @function_1eb6, { 1, 0 }
}

define i32 @function_1eb6() local_unnamed_addr {
dec_label_pc_1eb6:
  %v0_1eb6 = load i32, i32* @ebp, align 4
  %v1_1eb6 = add i32 %v0_1eb6, -33
  %v2_1eb6 = inttoptr i32 %v1_1eb6 to i8*
  %v3_1eb6 = load i8, i8* %v2_1eb6, align 1
  %v5_1eba = icmp eq i8 %v3_1eb6, 0
  br i1 %v5_1eba, label %dec_label_pc_1ee6, label %dec_label_pc_1ebe

dec_label_pc_1ebe:                                ; preds = %dec_label_pc_1eb6
  %v1_1ec6 = add i32 %v0_1eb6, -44
  %v2_1ec6 = inttoptr i32 %v1_1ec6 to i32*
  %v3_1ec6 = load i32, i32* %v2_1ec6, align 4
  %v1_1ecd = add i32 %v0_1eb6, -48
  %v2_1ecd = inttoptr i32 %v1_1ecd to i32*
  %v3_1ecd = load i32, i32* %v2_1ecd, align 4
  %v3_1ed3 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %v3_1ecd, i32 %v3_1ec6, i32 0)
  %v1_1ed8 = xor i32 %v3_1ed3, 1
  %v4_1ed8 = trunc i32 %v1_1ed8 to i8
  %v5_1edb = icmp eq i8 %v4_1ed8, 0
  br i1 %v5_1edb, label %dec_label_pc_1ee6, label %dec_label_pc_1eeb

dec_label_pc_1ee6:                                ; preds = %dec_label_pc_1ebe, %dec_label_pc_1eb6
  br label %dec_label_pc_1eeb

dec_label_pc_1eeb:                                ; preds = %dec_label_pc_1ebe, %dec_label_pc_1ee6
  %storemerge = phi i32 [ 0, %dec_label_pc_1ee6 ], [ 1, %dec_label_pc_1ebe ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1eb6, { 1, 0, 2 }
  uselistorder i32 -33, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1eeb, { 1, 0 }
}

define i32 @function_1ef3() local_unnamed_addr {
dec_label_pc_1ef3:
  %v0_1ef3 = load i32, i32* @ebp, align 4
  %v1_1ef3 = add i32 %v0_1ef3, -84
  %v1_1efa = add i32 %v0_1ef3, -108
  %v2_1efa = inttoptr i32 %v1_1efa to i32*
  %v3_1efa = load i32, i32* %v2_1efa, align 4
  %v2_1f00 = inttoptr i32 %v3_1efa to i32*
  %v3_1f00 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorIS3_SaIS3_EE(i32* %v2_1f00, i32 %v1_1ef3)
  %v0_1f05 = load i32, i32* @ebp, align 4
  %v1_1f05 = add i32 %v0_1f05, -84
  %v1_1f0b = inttoptr i32 %v1_1f05 to i32*
  %v2_1f0b = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_1f0b)
  %v0_1f10 = load i32, i32* @ebp, align 4
  %v1_1f10 = add i32 %v0_1f10, -96
  %v1_1f16 = inttoptr i32 %v1_1f10 to i32*
  %v2_1f16 = call i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %v1_1f16)
  %v0_1f1b = load i32, i32* @ebp, align 4
  %v1_1f1b = add i32 %v0_1f1b, -108
  %v2_1f1b = inttoptr i32 %v1_1f1b to i32*
  %v3_1f1b = load i32, i32* %v2_1f1b, align 4
  store i32 %v3_1f1b, i32* @eax, align 4
  %v1_1f1e = add i32 %v0_1f1b, -12
  %v2_1f1e = inttoptr i32 %v1_1f1e to i32*
  %v3_1f1e = load i32, i32* %v2_1f1e, align 4
  %v1_1f21 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f21 = icmp eq i32 %v1_1f21, %v3_1f1e
  br i1 %v3_1f21, label %bb, label %dec_label_pc_1f2a

bb:                                               ; preds = %dec_label_pc_1ef3
  %v1_1f28 = call i32 @function_1fa3()
  store i32 %v1_1f28, i32* @eax, align 4
  br label %dec_label_pc_1f2a

dec_label_pc_1f2a:                                ; preds = %bb, %dec_label_pc_1ef3
  %v0_1f2a = call i32 @function_1f9e()
  ret i32 %v0_1f2a
}

define i32 @function_1f39() local_unnamed_addr {
dec_label_pc_1f39:
  %v0_1f39 = call i32 @function_1f3d()
  ret i32 %v0_1f39
}

define i32 @function_1f3b() local_unnamed_addr {
dec_label_pc_1f3b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f3b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f3b
}

define i32 @function_1f3d() local_unnamed_addr {
dec_label_pc_1f3d:
  %v0_1f3d = load i32, i32* @ebp, align 4
  %v1_1f3d = add i32 %v0_1f3d, -34
  ret i32 %v1_1f3d
}

define i32 @function_1f59() local_unnamed_addr {
dec_label_pc_1f59:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f59 = load i32, i32* @ecx, align 4
  %v1_1f59 = add i32 %v0_1f59, -532312637
  %v2_1f59 = inttoptr i32 %v1_1f59 to i32*
  %v3_1f59 = load i32, i32* %v2_1f59, align 4
  %v4_1f59 = add i32 %v3_1f59, -1
  store i32 %v4_1f59, i32* %v2_1f59, align 4
  %v0_1f5f = load i32, i32* %eax.global-to-local, align 4
  %v1_1f62 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v0_1f5f)
  store i32 %v1_1f62, i32* %eax.global-to-local, align 4
  %v0_1f67 = call i32 @function_1f6b()
  store i32 %v0_1f67, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f67
}

define i32 @function_1f69() local_unnamed_addr {
dec_label_pc_1f69:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f69 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f69
}

define i32 @function_1f6b() local_unnamed_addr {
dec_label_pc_1f6b:
  %v0_1f6b = load i32, i32* @ebp, align 4
  %v1_1f6b = add i32 %v0_1f6b, -56
  ret i32 %v1_1f6b
}

define i32 @function_1f76() local_unnamed_addr {
dec_label_pc_1f76:
  %v0_1f76 = call i32 @function_1f7a()
  ret i32 %v0_1f76
}

define i32 @function_1f78() local_unnamed_addr {
dec_label_pc_1f78:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f78 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f78
}

define i32 @function_1f7a() local_unnamed_addr {
dec_label_pc_1f7a:
  %v0_1f7a = load i32, i32* @ebp, align 4
  %v1_1f7a = add i32 %v0_1f7a, -84
  %v1_1f80 = inttoptr i32 %v1_1f7a to i32*
  %v2_1f80 = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_1f80)
  %v0_1f85 = call i32 @function_1f89()
  ret i32 %v0_1f85
}

define i32 @function_1f87() local_unnamed_addr {
dec_label_pc_1f87:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f87 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f87
}

define i32 @function_1f89() local_unnamed_addr {
dec_label_pc_1f89:
  %v0_1f89 = load i32, i32* @ebp, align 4
  %v1_1f89 = add i32 %v0_1f89, -96
  %v1_1f8f = inttoptr i32 %v1_1f89 to i32*
  %v2_1f8f = call i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %v1_1f8f)
  %v0_1f94 = load i32, i32* @ebx, align 4
  ret i32 %v0_1f94
}

define i32 @function_1f9e() local_unnamed_addr {
dec_label_pc_1f9e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1fa3() local_unnamed_addr {
dec_label_pc_1fa3:
  %v0_1fa3 = load i32, i32* @ebp, align 4
  %v1_1fa3 = add i32 %v0_1fa3, -8
  %v1_1fa6 = inttoptr i32 %v1_1fa3 to i32*
  %v2_1fa6 = load i32, i32* %v1_1fa6, align 4
  store i32 %v2_1fa6, i32* @ebx, align 4
  %v3_1fa6 = add i32 %v0_1fa3, -4
  %v1_1fa7 = inttoptr i32 %v3_1fa6 to i32*
  %v2_1fa7 = load i32, i32* %v1_1fa7, align 4
  store i32 %v2_1fa7, i32* @esi, align 4
  %v1_1fa8 = inttoptr i32 %v0_1fa3 to i32*
  %v2_1fa8 = load i32, i32* %v1_1fa8, align 4
  store i32 %v2_1fa8, i32* @ebp, align 4
  %v0_1fa9 = load i32, i32* @eax, align 4
  ret i32 %v0_1fa9
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.8" @_Z12getblockhashRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_1fac:
  %tmp110 = call i8 @__decompiler_undefined_function_4()
  %v10_1fd1 = icmp eq i8 %tmp110, 0
  %v1_1fd5 = icmp eq i1 %v10_1fd1, false
  br i1 %v1_1fd5, label %dec_label_pc_1ff3, label %dec_label_pc_1fd7

dec_label_pc_1fd7:                                ; preds = %dec_label_pc_1fac
  %v4_1fbd = sext i1 %fHelp to i32
  %v2_1fdd = inttoptr i32 %v4_1fbd to i32*
  %v3_1fdd = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_1fdd)
  %v10_1fe2 = icmp ne i32 %v3_1fdd, 1
  %. = zext i1 %v10_1fe2 to i32
  br label %dec_label_pc_1ff3

dec_label_pc_1ff3:                                ; preds = %dec_label_pc_1fd7, %dec_label_pc_1fac
  %storemerge = phi i32 [ 1, %dec_label_pc_1fac ], [ %., %dec_label_pc_1fd7 ]
  %v5_1ff3 = icmp eq i32 %storemerge, 0
  br i1 %v5_1ff3, label %bb, label %dec_label_pc_1ff7

bb:                                               ; preds = %dec_label_pc_1ff3
  %v1_1ff5 = call i32 @function_2068()
  br label %dec_label_pc_1ff7

dec_label_pc_1ff7:                                ; preds = %bb, %dec_label_pc_1ff3
  %v3_1ff7 = phi i32 [ %v1_1ff5, %bb ], [ %storemerge, %dec_label_pc_1ff3 ]
  %v4_1ff7 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.8" undef, i32 %v3_1ff7, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.8" %v4_1ff7

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_2004() local_unnamed_addr {
dec_label_pc_2004:
  %eax.global-to-local = alloca i32, align 4
  %v0_2004 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2004
}

define i32 @function_2068() local_unnamed_addr {
dec_label_pc_2068:
  %eax.global-to-local = alloca i32, align 4
  %v0_2070 = load i32, i32* @ebp, align 4
  %v1_2070 = add i32 %v0_2070, -48
  %v2_2070 = inttoptr i32 %v1_2070 to i32*
  %v3_2070 = load i32, i32* %v2_2070, align 4
  store i32 %v3_2070, i32* %eax.global-to-local, align 4
  %v2_2076 = inttoptr i32 %v3_2070 to i32*
  %v3_2076 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_2076, i32 0)
  store i32 %v3_2076, i32* %eax.global-to-local, align 4
  %v1_207e = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_intEv(i32 %v3_2076)
  store i32 %v1_207e, i32* %eax.global-to-local, align 4
  %v1_2083 = load i32, i32* @ebp, align 4
  %v2_2083 = add i32 %v1_2083, -24
  %v3_2083 = inttoptr i32 %v2_2083 to i32*
  store i32 %v1_207e, i32* %v3_2083, align 4
  %v0_208a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_208a
}

define i32 @function_20a3() local_unnamed_addr {
dec_label_pc_20a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_20a3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_20a3
}

define i32 @function_2107() local_unnamed_addr {
dec_label_pc_2107:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_2107 = add i32 %tmp91, -24
  %v2_2107 = inttoptr i32 %v1_2107 to i32*
  %v3_2107 = load i32, i32* %v2_2107, align 4
  ret i32 %v3_2107
}

define i32 @function_211b() local_unnamed_addr {
dec_label_pc_211b:
  %eax.global-to-local = alloca i32, align 4
  %v0_211b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_211b
}

define i32 @function_214a() local_unnamed_addr {
dec_label_pc_214a:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_214a = load i32, i32* %ebx.global-to-local, align 4
  %v1_214a = add i32 %v0_214a, 1435227205
  %v2_214a = inttoptr i32 %v1_214a to i32*
  %v3_214a = load i32, i32* %v2_214a, align 4
  %v4_214a = add i32 %v3_214a, -1
  store i32 %v4_214a, i32* %v2_214a, align 4
  %v0_2151 = load i32, i32* %edx.global-to-local, align 8
  %v1_2151 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2151 = xor i32 %v1_2151, %v0_2151
  %v3_2151 = icmp eq i32 %v2_2151, 0
  store i32 %v2_2151, i32* %edx.global-to-local, align 8
  br i1 %v3_2151, label %bb, label %dec_label_pc_215a

bb:                                               ; preds = %dec_label_pc_214a
  %v1_2158 = call i32 @function_21d4()
  store i32 %v1_2158, i32* @eax, align 4
  br label %dec_label_pc_215a

dec_label_pc_215a:                                ; preds = %bb, %dec_label_pc_214a
  %v0_215a = call i32 @function_21cf()
  ret i32 %v0_215a

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
}

define i32 @function_2169() local_unnamed_addr {
dec_label_pc_2169:
  %v0_2169 = call i32 @function_216d()
  ret i32 %v0_2169
}

define i32 @function_216b() local_unnamed_addr {
dec_label_pc_216b:
  %eax.global-to-local = alloca i32, align 4
  %v0_216b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_216b
}

define i32 @function_216d() local_unnamed_addr {
dec_label_pc_216d:
  %v0_216d = load i32, i32* @ebp, align 4
  %v1_216d = add i32 %v0_216d, -14
  ret i32 %v1_216d
}

define i32 @function_2197() local_unnamed_addr {
dec_label_pc_2197:
  %v0_2197 = call i32 @function_219b()
  ret i32 %v0_2197
}

define i32 @function_2199() local_unnamed_addr {
dec_label_pc_2199:
  %eax.global-to-local = alloca i32, align 4
  %v0_2199 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2199
}

define i32 @function_219b() local_unnamed_addr {
dec_label_pc_219b:
  %v0_219b = load i32, i32* @ebp, align 4
  %v1_219b = add i32 %v0_219b, -13
  ret i32 %v1_219b
}

define i32 @function_21b9() local_unnamed_addr {
dec_label_pc_21b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_21b9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21b9
}

define i32 @function_21cf() local_unnamed_addr {
dec_label_pc_21cf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_21d4() local_unnamed_addr {
dec_label_pc_21d4:
  %v0_21da = load i32, i32* @eax, align 4
  ret i32 %v0_21da
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.9" @_Z8getblockRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_21dd:
  %tmp111 = call i8 @__decompiler_undefined_function_4()
  %v10_220e = icmp eq i8 %tmp111, 0
  %v1_2215 = icmp eq i1 %v10_220e, false
  br i1 %v1_2215, label %dec_label_pc_2248.thread, label %dec_label_pc_2217

dec_label_pc_2217:                                ; preds = %dec_label_pc_21dd
  %v4_21f4 = sext i1 %fHelp to i32
  %v2_2220 = inttoptr i32 %v4_21f4 to i32*
  %v3_2220 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_2220)
  %v1_2225 = icmp eq i32 %v3_2220, 0
  br i1 %v1_2225, label %dec_label_pc_2248.thread, label %dec_label_pc_2248

dec_label_pc_2248.thread:                         ; preds = %dec_label_pc_2217, %dec_label_pc_21dd
  br label %dec_label_pc_2250

dec_label_pc_2248:                                ; preds = %dec_label_pc_2217
  %v3_2232 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_2220)
  %tmp121 = icmp ugt i32 %v3_2232, 2
  %v5_2248 = icmp eq i1 %tmp121, false
  br i1 %v5_2248, label %bb, label %dec_label_pc_2250

bb:                                               ; preds = %dec_label_pc_2248
  %v1_224a = call i32 @function_22d3()
  br label %dec_label_pc_2250

dec_label_pc_2250:                                ; preds = %dec_label_pc_2248.thread, %bb, %dec_label_pc_2248
  %v3_2250 = phi i32 [ %v1_224a, %bb ], [ 1, %dec_label_pc_2248 ], [ 1, %dec_label_pc_2248.thread ]
  %v4_2250 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.9" undef, i32 %v3_2250, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.9" %v4_2250

; uselistorder directives
  uselistorder label %dec_label_pc_2250, { 1, 2, 0 }
}

define i32 @function_225d() local_unnamed_addr {
dec_label_pc_225d:
  %eax.global-to-local = alloca i32, align 4
  %v0_225d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_225d
}

define i32 @function_22d3() local_unnamed_addr {
dec_label_pc_22d3:
  %v0_22db = load i32, i32* @ebp, align 4
  %v1_22db = add i32 %v0_22db, -240
  %v2_22db = inttoptr i32 %v1_22db to i32*
  %v3_22db = load i32, i32* %v2_22db, align 4
  %v2_22e4 = inttoptr i32 %v3_22db to i32*
  %v3_22e4 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_22e4, i32 0)
  %v1_22ec = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv(i32 %v3_22e4)
  %v0_22f5 = load i32, i32* @ebp, align 4
  %v1_22f5 = add i32 %v0_22f5, -176
  ret i32 %v1_22f5
}

define i32 @function_2388() local_unnamed_addr {
dec_label_pc_2388:
  %eax.global-to-local = alloca i32, align 4
  %v0_2388 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2388
}

define i32 @function_2409() local_unnamed_addr {
dec_label_pc_2409:
  %v0_2409 = load i32, i32* @ebp, align 4
  %v1_2409 = add i32 %v0_2409, -148
  %v1_2412 = call i32 @_ZN6CBlockC1Ev(i32 %v1_2409)
  %v0_2417 = load i32, i32* @ebp, align 4
  %v1_2417 = add i32 %v0_2417, -44
  ret i32 %v1_2417
}

define i32 @function_251b() local_unnamed_addr {
dec_label_pc_251b:
  %v0_251b = load i32, i32* @ebp, align 4
  %v1_251b = add i32 %v0_251b, -220
  %v1_2524 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_251b)
  %v0_2529 = call i32 @function_2576()
  ret i32 %v0_2529
}

define i32 @function_252b() local_unnamed_addr {
dec_label_pc_252b:
  %v0_252b = load i32, i32* @ebp, align 4
  %v1_252b = add i32 %v0_252b, -192
  %v1_253b = add i32 %v0_252b, -148
  %v3_2548 = call %"vector<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>.3" @_Z11blockToJSONRK6CBlockPK11CBlockIndex(i32 %v1_252b, i32 %v1_253b)
  %v0_2550 = load i32, i32* @ebp, align 4
  %v1_2550 = add i32 %v0_2550, -192
  %v1_255a = add i32 %v0_2550, -236
  %v2_255a = inttoptr i32 %v1_255a to i32*
  %v3_255a = load i32, i32* %v2_255a, align 4
  %v2_2563 = inttoptr i32 %v3_255a to i32*
  %v3_2563 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorINS_9Pair_implIS2_EESaIS6_EE(i32* %v2_2563, i32 %v1_2550)
  %v0_2568 = load i32, i32* @ebp, align 4
  %v1_2568 = add i32 %v0_2568, -192
  %v1_2571 = inttoptr i32 %v1_2568 to i32*
  %v2_2571 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_2571)
  ret i32 %v2_2571
}

define i32 @function_2576() local_unnamed_addr {
dec_label_pc_2576:
  %v0_2576 = load i32, i32* @ebp, align 4
  %v1_2576 = add i32 %v0_2576, -148
  %v1_257f = call i32 @_ZN6CBlockD1Ev(i32 %v1_2576)
  %v0_2584 = load i32, i32* @ebp, align 4
  %v1_2584 = add i32 %v0_2584, -176
  ret i32 %v1_2584
}

define i32 @function_2591() local_unnamed_addr {
dec_label_pc_2591:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2591 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2591 = add i32 %v0_2591, -60283
  %v2_2591 = inttoptr i32 %v1_2591 to i32*
  %v3_2591 = load i32, i32* %v2_2591, align 4
  %v4_2591 = add i32 %v3_2591, -1
  store i32 %v4_2591, i32* %v2_2591, align 4
  %v0_2597 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2597 = add i32 %v0_2597, 862319701
  %v2_2597 = inttoptr i32 %v1_2597 to i32*
  %v3_2597 = load i32, i32* %v2_2597, align 4
  %v4_2597 = add i32 %v3_2597, -1
  store i32 %v4_2597, i32* %v2_2597, align 4
  %v0_259d = load i32, i32* %eax.global-to-local, align 4
  %v1_259d = load i1, i1* %cf.global-to-local, align 1
  %v2_259d = zext i1 %v1_259d to i32
  %v3_259d = add i32 %v0_259d, 20
  %v4_259d = add i32 %v3_259d, %v2_259d
  %v14_259d = icmp eq i32 %v4_259d, 0
  %v22_259d = icmp ule i32 %v4_259d, %v0_259d
  %v23_259d = icmp ugt i32 %v0_259d, -21
  %v24_259d = select i1 %v1_259d, i1 %v22_259d, i1 %v23_259d
  store i1 %v24_259d, i1* %cf.global-to-local, align 1
  store i32 %v4_259d, i32* @eax, align 4
  br i1 %v14_259d, label %bb, label %dec_label_pc_25a8

bb:                                               ; preds = %dec_label_pc_2591
  %v1_25a2 = call i32 @function_267a()
  store i32 %v1_25a2, i32* @eax, align 4
  br label %dec_label_pc_25a8

dec_label_pc_25a8:                                ; preds = %bb, %dec_label_pc_2591
  %v0_25a8 = call i32 @function_2675()
  store i32 %v0_25a8, i32* %eax.global-to-local, align 4
  ret i32 %v0_25a8

; uselistorder directives
  uselistorder i32 %v4_259d, { 1, 0, 2 }
}

define i32 @function_25bd() local_unnamed_addr {
dec_label_pc_25bd:
  %v0_25bd = call i32 @function_25c1()
  ret i32 %v0_25bd
}

define i32 @function_25bf() local_unnamed_addr {
dec_label_pc_25bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_25bf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25bf
}

define i32 @function_25c1() local_unnamed_addr {
dec_label_pc_25c1:
  %v0_25c1 = load i32, i32* @ebp, align 4
  %v1_25c1 = add i32 %v0_25c1, -151
  ret i32 %v1_25c1
}

define i32 @function_25f1() local_unnamed_addr {
dec_label_pc_25f1:
  %v0_25f1 = call i32 @function_25f5()
  ret i32 %v0_25f1
}

define i32 @function_25f3() local_unnamed_addr {
dec_label_pc_25f3:
  %eax.global-to-local = alloca i32, align 4
  %v0_25f3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25f3
}

define i32 @function_25f5() local_unnamed_addr {
dec_label_pc_25f5:
  %v0_25f5 = load i32, i32* @ebp, align 4
  %v1_25f5 = add i32 %v0_25f5, -150
  ret i32 %v1_25f5
}

define i32 @function_260a() local_unnamed_addr {
dec_label_pc_260a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_260a = load i32, i32* %ecx.global-to-local, align 4
  %v1_260a = add i32 %v0_260a, -1991316493
  %v2_260a = inttoptr i32 %v1_260a to i32*
  %v3_260a = load i32, i32* %v2_260a, align 4
  %v4_260a = add i32 %v3_260a, -1
  store i32 %v4_260a, i32* %v2_260a, align 4
  %v0_2610 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2610
}

define i32 @function_2611() local_unnamed_addr {
dec_label_pc_2611:
  %v0_2611 = call i32 @function_2627()
  ret i32 %v0_2611
}

define i32 @function_2614() local_unnamed_addr {
dec_label_pc_2614:
  %eax.global-to-local = alloca i32, align 4
  %v0_2614 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2614
}

define i32 @function_2623() local_unnamed_addr {
dec_label_pc_2623:
  %v0_2623 = call i32 @function_2627()
  ret i32 %v0_2623

; uselistorder directives
  uselistorder i32 ()* @function_2627, { 1, 0 }
}

define i32 @function_2626() local_unnamed_addr {
dec_label_pc_2626:
  %eax.global-to-local = alloca i32, align 4
  %v0_2626 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2626
}

define i32 @function_2627() local_unnamed_addr {
dec_label_pc_2627:
  %v0_2627 = load i32, i32* @ebp, align 4
  %v1_2627 = add i32 %v0_2627, -220
  %v1_2630 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_2627)
  %v0_2635 = call i32 @function_264b()
  ret i32 %v0_2635

; uselistorder directives
  uselistorder i32 (i32)* @_ZN11CDataStreamD1Ev, { 1, 0 }
}

define i32 @function_2637() local_unnamed_addr {
dec_label_pc_2637:
  %v0_2639 = load i32, i32* @ebp, align 4
  %v1_2639 = add i32 %v0_2639, -192
  %v1_2642 = inttoptr i32 %v1_2639 to i32*
  %v2_2642 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_2642)
  %v0_2647 = call i32 @function_264b()
  ret i32 %v0_2647

; uselistorder directives
  uselistorder i32 ()* @function_264b, { 1, 0 }
}

define i32 @function_264a() local_unnamed_addr {
dec_label_pc_264a:
  %eax.global-to-local = alloca i32, align 4
  %v0_264a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_264a
}

define i32 @function_264b() local_unnamed_addr {
dec_label_pc_264b:
  %v0_264b = load i32, i32* @ebp, align 4
  %v1_264b = add i32 %v0_264b, -148
  %v1_2654 = call i32 @_ZN6CBlockD1Ev(i32 %v1_264b)
  %v0_2659 = call i32 @function_265d()
  ret i32 %v0_2659

; uselistorder directives
  uselistorder i32 (i32)* @_ZN6CBlockD1Ev, { 1, 0 }
  uselistorder i32 -148, { 0, 2, 1, 3 }
}

define i32 @function_265b() local_unnamed_addr {
dec_label_pc_265b:
  %eax.global-to-local = alloca i32, align 4
  %v0_265b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_265b
}

define i32 @function_265d() local_unnamed_addr {
dec_label_pc_265d:
  %v0_265d = load i32, i32* @ebp, align 4
  %v1_265d = add i32 %v0_265d, -176
  ret i32 %v1_265d
}

define i32 @function_2675() local_unnamed_addr {
dec_label_pc_2675:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_267a() local_unnamed_addr {
dec_label_pc_267a:
  %v0_2680 = load i32, i32* @eax, align 4
  ret i32 %v0_2680
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.10" @_Z15gettxoutsetinfoRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_2683:
  %tmp111 = call i8 @__decompiler_undefined_function_4()
  %v4_269a = sext i1 %fHelp to i32
  store i32 %v4_269a, i32* @edx, align 8
  %v10_26b4 = icmp eq i8 %tmp111, 0
  %v1_26bb = icmp eq i1 %v10_26b4, false
  br i1 %v1_26bb, label %dec_label_pc_26db, label %dec_label_pc_26bd

dec_label_pc_26bd:                                ; preds = %dec_label_pc_2683
  %v2_26c6 = inttoptr i32 %v4_269a to i32*
  %v3_26c6 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_26c6)
  %v1_26cb = icmp ne i32 %v3_26c6, 0
  %. = zext i1 %v1_26cb to i32
  br label %dec_label_pc_26db

dec_label_pc_26db:                                ; preds = %dec_label_pc_26bd, %dec_label_pc_2683
  %storemerge = phi i32 [ 1, %dec_label_pc_2683 ], [ %., %dec_label_pc_26bd ]
  %v5_26db = icmp eq i32 %storemerge, 0
  br i1 %v5_26db, label %bb, label %dec_label_pc_26e3

bb:                                               ; preds = %dec_label_pc_26db
  %v1_26dd = call i32 @function_2766()
  br label %dec_label_pc_26e3

dec_label_pc_26e3:                                ; preds = %bb, %dec_label_pc_26db
  %v3_26e3 = phi i32 [ %v1_26dd, %bb ], [ %storemerge, %dec_label_pc_26db ]
  %v4_26e3 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.10" undef, i32 %v3_26e3, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.10" %v4_26e3

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_26f0() local_unnamed_addr {
dec_label_pc_26f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_26f0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26f0
}

define i32 @function_2766() local_unnamed_addr {
dec_label_pc_2766:
  %v0_2766 = load i32, i32* @ebp, align 4
  %v1_2766 = add i32 %v0_2766, -480
  %v1_276f = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %v1_2766)
  %v0_2774 = load i32, i32* @ebp, align 4
  %v1_2774 = add i32 %v0_2774, -420
  %v1_277d = inttoptr i32 %v1_2774 to i32*
  %v2_277d = call i32 @_ZN11CCoinsStatsC1Ev(i32* %v1_277d)
  ret i32 %v2_277d
}

define i32 @function_2878() local_unnamed_addr {
dec_label_pc_2878:
  %eax.global-to-local = alloca i32, align 4
  %v0_2878 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2878
}

define i32 @function_2b27() local_unnamed_addr {
dec_label_pc_2b27:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b27 = load i32, i32* %eax.global-to-local, align 4
  %v11_2b27 = and i32 %v0_2b27, -24
  store i32 %v11_2b27, i32* %eax.global-to-local, align 4
  ret i32 %v11_2b27

; uselistorder directives
  uselistorder i32 %v11_2b27, { 1, 0 }
}

define i32 @function_2b87() local_unnamed_addr {
dec_label_pc_2b87:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b87 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b87
}

define i32 @function_2b8f(i16 %arg1) local_unnamed_addr {
dec_label_pc_2b8f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b8f = load i32, i32* %eax.global-to-local, align 4
  %v11_2b8f = and i32 %v0_2b8f, -24
  store i32 %v11_2b8f, i32* %eax.global-to-local, align 4
  ret i32 %v11_2b8f

; uselistorder directives
  uselistorder i32 %v11_2b8f, { 1, 0 }
}

define i32 @function_2d11() local_unnamed_addr {
dec_label_pc_2d11:
  %v0_2d11 = load i32, i32* @ebp, align 4
  %v1_2d11 = add i32 %v0_2d11, -480
  %v1_2d1b = add i32 %v0_2d11, -492
  %v2_2d1b = inttoptr i32 %v1_2d1b to i32*
  %v3_2d1b = load i32, i32* %v2_2d1b, align 4
  %v2_2d24 = inttoptr i32 %v3_2d1b to i32*
  %v3_2d24 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorINS_9Pair_implIS2_EESaIS6_EE(i32* %v2_2d24, i32 %v1_2d11)
  %v0_2d29 = load i32, i32* @ebp, align 4
  %v1_2d29 = add i32 %v0_2d29, -480
  %v1_2d32 = inttoptr i32 %v1_2d29 to i32*
  %v2_2d32 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_2d32)
  %v0_2d37 = load i32, i32* @ebp, align 4
  %v1_2d37 = add i32 %v0_2d37, -492
  %v2_2d37 = inttoptr i32 %v1_2d37 to i32*
  %v3_2d37 = load i32, i32* %v2_2d37, align 4
  store i32 %v3_2d37, i32* @eax, align 4
  %v1_2d3d = add i32 %v0_2d37, -12
  %v2_2d3d = inttoptr i32 %v1_2d3d to i32*
  %v3_2d3d = load i32, i32* %v2_2d3d, align 4
  %v1_2d40 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2d40 = icmp eq i32 %v1_2d40, %v3_2d3d
  br i1 %v3_2d40, label %bb, label %dec_label_pc_2d4d

bb:                                               ; preds = %dec_label_pc_2d11
  %v1_2d47 = call i32 @function_2fa5()
  store i32 %v1_2d47, i32* @eax, align 4
  br label %dec_label_pc_2d4d

dec_label_pc_2d4d:                                ; preds = %bb, %dec_label_pc_2d11
  %v0_2d4d = call i32 @function_2fa0()
  ret i32 %v0_2d4d

; uselistorder directives
  uselistorder i32 (i32*, i32)* @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorINS_9Pair_implIS2_EESaIS6_EE, { 1, 0 }
}

define i32 @function_2d62() local_unnamed_addr {
dec_label_pc_2d62:
  %v0_2d62 = call i32 @function_2d66()
  ret i32 %v0_2d62
}

define i32 @function_2d64() local_unnamed_addr {
dec_label_pc_2d64:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d64 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d64
}

define i32 @function_2d66() local_unnamed_addr {
dec_label_pc_2d66:
  %v0_2d66 = load i32, i32* @ebp, align 4
  %v1_2d66 = add i32 %v0_2d66, -428
  ret i32 %v1_2d66
}

define i32 @function_2d86() local_unnamed_addr {
dec_label_pc_2d86:
  %v0_2d88 = load i32, i32* @ebp, align 4
  %v1_2d88 = add i32 %v0_2d88, -320
  %v1_2d91 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2d88)
  %v0_2d96 = call i32 @function_2d9a()
  ret i32 %v0_2d96
}

define i32 @function_2d98() local_unnamed_addr {
dec_label_pc_2d98:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d98 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d98
}

define i32 @function_2d9a() local_unnamed_addr {
dec_label_pc_2d9a:
  %v0_2d9a = load i32, i32* @ebp, align 4
  %v1_2d9a = add i32 %v0_2d9a, -464
  ret i32 %v1_2d9a
}

define i32 @function_2da8() local_unnamed_addr {
dec_label_pc_2da8:
  %v0_2da8 = call i32 @function_2dac()
  ret i32 %v0_2da8
}

define i32 @function_2daa() local_unnamed_addr {
dec_label_pc_2daa:
  %eax.global-to-local = alloca i32, align 4
  %v0_2daa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2daa
}

define i32 @function_2dac() local_unnamed_addr {
dec_label_pc_2dac:
  %v0_2dac = load i32, i32* @ebp, align 4
  %v1_2dac = add i32 %v0_2dac, -427
  ret i32 %v1_2dac
}

define i32 @function_2db9() local_unnamed_addr {
dec_label_pc_2db9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_2db9 = add i32 %tmp91, -38779
  %v2_2db9 = inttoptr i32 %v1_2db9 to i32*
  %v3_2db9 = load i32, i32* %v2_2db9, align 4
  %v4_2db9 = add i32 %v3_2db9, -1
  store i32 %v4_2db9, i32* %v2_2db9, align 4
  %v0_2dbf = load i32, i32* %ecx.global-to-local, align 4
  %v1_2dbf = add i32 %v0_2dbf, 820519940
  %v2_2dbf = inttoptr i32 %v1_2dbf to i32*
  %v3_2dbf = load i32, i32* %v2_2dbf, align 4
  %v4_2dbf = add i32 %v3_2dbf, -1
  store i32 %v4_2dbf, i32* %v2_2dbf, align 4
  %v0_2dc5 = load i32, i32* %eax.global-to-local, align 4
  %v12_2dc5 = and i32 %v0_2dc5, -65281
  store i32 %v12_2dc5, i32* %eax.global-to-local, align 4
  %v0_2dc7 = load i32, i32* %ecx.global-to-local, align 4
  %v3_2dc7 = udiv i32 %v0_2dc7, 256
  %v5_2dc7 = add i32 %v3_2dc7, %v0_2dc7
  %v20_2dc7 = and i32 %v5_2dc7, 255
  %v22_2dc7 = and i32 %v0_2dc7, -256
  %v23_2dc7 = or i32 %v20_2dc7, %v22_2dc7
  store i32 %v23_2dc7, i32* %ecx.global-to-local, align 4
  ret i32 %v12_2dc5

; uselistorder directives
  uselistorder i32 %v0_2dc7, { 2, 0, 1 }
}

define i32 @function_2dcf() local_unnamed_addr {
dec_label_pc_2dcf:
  %v0_2dcf = load i32, i32* @ebp, align 4
  %v1_2dcf = add i32 %v0_2dcf, -296
  %v1_2dd8 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2dcf)
  %v0_2ddd = call i32 @function_2de1()
  ret i32 %v0_2ddd
}

define i32 @function_2ddf() local_unnamed_addr {
dec_label_pc_2ddf:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ddf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ddf
}

define i32 @function_2de1() local_unnamed_addr {
dec_label_pc_2de1:
  %v0_2de1 = load i32, i32* @ebp, align 4
  %v1_2de1 = add i32 %v0_2de1, -456
  ret i32 %v1_2de1
}

define i32 @function_2def() local_unnamed_addr {
dec_label_pc_2def:
  %v0_2def = call i32 @function_2df3()
  ret i32 %v0_2def
}

define i32 @function_2df1() local_unnamed_addr {
dec_label_pc_2df1:
  %eax.global-to-local = alloca i32, align 4
  %v0_2df1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2df1
}

define i32 @function_2df3() local_unnamed_addr {
dec_label_pc_2df3:
  %v0_2df3 = load i32, i32* @ebp, align 4
  %v1_2df3 = add i32 %v0_2df3, -426
  ret i32 %v1_2df3
}

define i32 @function_2e01() local_unnamed_addr {
dec_label_pc_2e01:
  %v0_2e01 = load i32, i32* @ebp, align 4
  %v1_2e01 = add i32 %v0_2e01, -132
  %v1_2e0a = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2e01)
  %v0_2e0f = call i32 @function_2e13()
  ret i32 %v0_2e0f
}

define i32 @function_2e11() local_unnamed_addr {
dec_label_pc_2e11:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e11 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e11
}

define i32 @function_2e13() local_unnamed_addr {
dec_label_pc_2e13:
  %v0_2e13 = load i32, i32* @ebp, align 4
  %v1_2e13 = add i32 %v0_2e13, -460
  ret i32 %v1_2e13
}

define i32 @function_2e21() local_unnamed_addr {
dec_label_pc_2e21:
  %v0_2e21 = call i32 @function_2f88()
  ret i32 %v0_2e21
}

define i32 @function_2e26() local_unnamed_addr {
dec_label_pc_2e26:
  %v0_2e28 = load i32, i32* @ebp, align 4
  %v1_2e28 = add i32 %v0_2e28, -272
  %v1_2e31 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2e28)
  %v0_2e36 = call i32 @function_2e3a()
  ret i32 %v0_2e36
}

define i32 @function_2e38() local_unnamed_addr {
dec_label_pc_2e38:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e38 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e38
}

define i32 @function_2e3a() local_unnamed_addr {
dec_label_pc_2e3a:
  %v0_2e3a = load i32, i32* @ebp, align 4
  %v1_2e3a = add i32 %v0_2e3a, -452
  ret i32 %v1_2e3a
}

define i32 @function_2e48() local_unnamed_addr {
dec_label_pc_2e48:
  %v0_2e48 = call i32 @function_2e4c()
  ret i32 %v0_2e48
}

define i32 @function_2e4a() local_unnamed_addr {
dec_label_pc_2e4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e4a
}

define i32 @function_2e4c() local_unnamed_addr {
dec_label_pc_2e4c:
  %v0_2e4c = load i32, i32* @ebp, align 4
  %v1_2e4c = add i32 %v0_2e4c, -425
  ret i32 %v1_2e4c
}

define i32 @function_2e5a() local_unnamed_addr {
dec_label_pc_2e5a:
  %v0_2e5a = load i32, i32* @ebp, align 4
  %v1_2e5a = add i32 %v0_2e5a, -112
  %v1_2e60 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2e5a)
  %v0_2e65 = call i32 @function_2f88()
  ret i32 %v0_2e65
}

define i32 @function_2e6a() local_unnamed_addr {
dec_label_pc_2e6a:
  %v0_2e6c = load i32, i32* @ebp, align 4
  %v1_2e6c = add i32 %v0_2e6c, -248
  %v1_2e75 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2e6c)
  %v0_2e7a = call i32 @function_2e7e()
  ret i32 %v0_2e7a
}

define i32 @function_2e7c() local_unnamed_addr {
dec_label_pc_2e7c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e7c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e7c
}

define i32 @function_2e7e() local_unnamed_addr {
dec_label_pc_2e7e:
  %v0_2e7e = load i32, i32* @ebp, align 4
  %v1_2e7e = add i32 %v0_2e7e, -448
  ret i32 %v1_2e7e
}

define i32 @function_2e8c() local_unnamed_addr {
dec_label_pc_2e8c:
  %v0_2e8c = call i32 @function_2e90()
  ret i32 %v0_2e8c
}

define i32 @function_2e8e() local_unnamed_addr {
dec_label_pc_2e8e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e8e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e8e
}

define i32 @function_2e90() local_unnamed_addr {
dec_label_pc_2e90:
  %v0_2e90 = load i32, i32* @ebp, align 4
  %v1_2e90 = add i32 %v0_2e90, -424
  ret i32 %v1_2e90
}

define i32 @function_2e9d() local_unnamed_addr {
dec_label_pc_2e9d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_2e9d = load i32, i32* @ebp, align 4
  %v1_2e9d = add i32 %v0_2e9d, 76129349
  %v2_2e9d = inttoptr i32 %v1_2e9d to i32*
  %v3_2e9d = load i32, i32* %v2_2e9d, align 4
  %v4_2e9d = add i32 %v3_2e9d, -1
  store i32 %v4_2e9d, i32* %v2_2e9d, align 4
  %v0_2ea3 = load i32, i32* %eax.global-to-local, align 4
  %v0_2ea5 = load i32, i32* %edi.global-to-local, align 4
  %v1_2ea5 = add i32 %v0_2ea5, -1
  store i32 %v1_2ea5, i32* %edi.global-to-local, align 4
  %v11_2ea6 = and i32 %v0_2ea3, -65536
  store i32 %v11_2ea6, i32* %eax.global-to-local, align 4
  %v0_2ea8 = load i32, i32* %ecx.global-to-local, align 4
  %v3_2ea8 = udiv i32 %v0_2ea8, 256
  %v5_2ea8 = add i32 %v3_2ea8, %v0_2ea8
  %v20_2ea8 = and i32 %v5_2ea8, 255
  %v22_2ea8 = and i32 %v0_2ea8, -256
  %v23_2ea8 = or i32 %v20_2ea8, %v22_2ea8
  store i32 %v23_2ea8, i32* %ecx.global-to-local, align 4
  %v2_2eaa = inttoptr i32 %v11_2ea6 to i32*
  %v3_2eaa = load i32, i32* %v2_2eaa, align 65536
  %v4_2eaa = sitofp i32 %v3_2eaa to x86_fp80
  %v5_2eaa = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_2eaa = fadd x86_fp80 %v5_2eaa, %v4_2eaa
  store x86_fp80 %v6_2eaa, x86_fp80* %st0.global-to-local, align 4
  %v0_2eb0 = load i32, i32* @ebp, align 4
  %v1_2eb0 = add i32 %v0_2eb0, -224
  store i32 %v1_2eb0, i32* %eax.global-to-local, align 4
  %v1_2eb9 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2eb0)
  store i32 %v1_2eb9, i32* %eax.global-to-local, align 4
  %v0_2ebe = call i32 @function_2ec2()
  store i32 %v0_2ebe, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ebe

; uselistorder directives
  uselistorder i32 %v0_2ea8, { 2, 0, 1 }
}

define i32 @function_2ec0() local_unnamed_addr {
dec_label_pc_2ec0:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ec0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ec0
}

define i32 @function_2ec2() local_unnamed_addr {
dec_label_pc_2ec2:
  %v0_2ec2 = load i32, i32* @ebp, align 4
  %v1_2ec2 = add i32 %v0_2ec2, -444
  ret i32 %v1_2ec2
}

define i32 @function_2ed0() local_unnamed_addr {
dec_label_pc_2ed0:
  %v0_2ed0 = call i32 @function_2ed4()
  ret i32 %v0_2ed0
}

define i32 @function_2ed2() local_unnamed_addr {
dec_label_pc_2ed2:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ed2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ed2
}

define i32 @function_2ed4() local_unnamed_addr {
dec_label_pc_2ed4:
  %v0_2ed4 = load i32, i32* @ebp, align 4
  %v1_2ed4 = add i32 %v0_2ed4, -423
  ret i32 %v1_2ed4
}

define i32 @function_2ee1() local_unnamed_addr {
dec_label_pc_2ee1:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2ee1 = load i32, i32* @ebp, align 4
  %v1_2ee1 = add i32 %v0_2ee1, 76134469
  %v2_2ee1 = inttoptr i32 %v1_2ee1 to i32*
  %v3_2ee1 = load i32, i32* %v2_2ee1, align 4
  %v4_2ee1 = add i32 %v3_2ee1, -1
  store i32 %v4_2ee1, i32* %v2_2ee1, align 4
  %v0_2ee7 = load i32, i32* %eax.global-to-local, align 4
  %v1_2ee7 = trunc i32 %v0_2ee7 to i8
  %v2_2ee7 = and i8 %v1_2ee7, -24
  %v8_2ee7 = zext i8 %v2_2ee7 to i32
  %v10_2ee7 = and i32 %v0_2ee7, -256
  %v11_2ee7 = or i32 %v8_2ee7, %v10_2ee7
  store i32 %v11_2ee7, i32* %eax.global-to-local, align 4
  %v0_2ee9 = load i32, i32* %edx.global-to-local, align 8
  %v1_2ee9 = load i32, i32* @esp, align 4
  %v2_2ee9 = or i32 %v1_2ee9, %v0_2ee9
  store i32 %v2_2ee9, i32* %edx.global-to-local, align 8
  %v1_2eeb = inttoptr i32 %v11_2ee7 to i8*
  %v2_2eeb = load i8, i8* %v1_2eeb, align 8
  %v5_2eeb = add i8 %v2_2eeb, %v2_2ee7
  store i8 %v5_2eeb, i8* %v1_2eeb, align 8
  %v0_2eed = call i32 @function_2f88()
  store i32 %v0_2eed, i32* %eax.global-to-local, align 4
  ret i32 %v0_2eed
}

define i32 @function_2ef2() local_unnamed_addr {
dec_label_pc_2ef2:
  %v0_2ef4 = load i32, i32* @ebp, align 4
  %v1_2ef4 = add i32 %v0_2ef4, -200
  %v1_2efd = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2ef4)
  %v0_2f02 = call i32 @function_2f06()
  ret i32 %v0_2f02
}

define i32 @function_2f04() local_unnamed_addr {
dec_label_pc_2f04:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f04 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f04
}

define i32 @function_2f06() local_unnamed_addr {
dec_label_pc_2f06:
  %v0_2f06 = load i32, i32* @ebp, align 4
  %v1_2f06 = add i32 %v0_2f06, -436
  ret i32 %v1_2f06
}

define i32 @function_2f14() local_unnamed_addr {
dec_label_pc_2f14:
  %v0_2f14 = call i32 @function_2f18()
  ret i32 %v0_2f14
}

define i32 @function_2f16() local_unnamed_addr {
dec_label_pc_2f16:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f16 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f16
}

define i32 @function_2f18() local_unnamed_addr {
dec_label_pc_2f18:
  %v0_2f18 = load i32, i32* @ebp, align 4
  %v1_2f18 = add i32 %v0_2f18, -422
  ret i32 %v1_2f18
}

define i32 @function_2f26() local_unnamed_addr {
dec_label_pc_2f26:
  %v0_2f26 = load i32, i32* @ebp, align 4
  %v1_2f26 = add i32 %v0_2f26, -52
  %v1_2f2c = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2f26)
  %v0_2f31 = call i32 @function_2f35()
  ret i32 %v0_2f31
}

define i32 @function_2f33() local_unnamed_addr {
dec_label_pc_2f33:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f33 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f33
}

define i32 @function_2f35() local_unnamed_addr {
dec_label_pc_2f35:
  %v0_2f35 = load i32, i32* @ebp, align 4
  %v1_2f35 = add i32 %v0_2f35, -440
  ret i32 %v1_2f35
}

define i32 @function_2f43() local_unnamed_addr {
dec_label_pc_2f43:
  %v0_2f43 = call i32 @function_2f88()
  ret i32 %v0_2f43
}

define i32 @function_2f45() local_unnamed_addr {
dec_label_pc_2f45:
  %v0_2f47 = load i32, i32* @ebp, align 4
  %v1_2f47 = add i32 %v0_2f47, -176
  %v1_2f50 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2f47)
  %v0_2f55 = call i32 @function_2f59()
  ret i32 %v0_2f55
}

define i32 @function_2f57() local_unnamed_addr {
dec_label_pc_2f57:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f57 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f57
}

define i32 @function_2f59() local_unnamed_addr {
dec_label_pc_2f59:
  %v0_2f59 = load i32, i32* @ebp, align 4
  %v1_2f59 = add i32 %v0_2f59, -432
  ret i32 %v1_2f59
}

define i32 @function_2f67() local_unnamed_addr {
dec_label_pc_2f67:
  %v0_2f67 = call i32 @function_2f6b()
  ret i32 %v0_2f67
}

define i32 @function_2f69() local_unnamed_addr {
dec_label_pc_2f69:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f69 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f69
}

define i32 @function_2f6b() local_unnamed_addr {
dec_label_pc_2f6b:
  %v0_2f6b = load i32, i32* @ebp, align 4
  %v1_2f6b = add i32 %v0_2f6b, -421
  ret i32 %v1_2f6b
}

define i32 @function_2f78() local_unnamed_addr {
dec_label_pc_2f78:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f78 = load i32, i32* @ebp, align 4
  %v1_2f78 = add i32 %v0_2f78, 76144709
  %v2_2f78 = inttoptr i32 %v1_2f78 to i32*
  %v3_2f78 = load i32, i32* %v2_2f78, align 4
  %v4_2f78 = add i32 %v3_2f78, -1
  store i32 %v4_2f78, i32* %v2_2f78, align 4
  %v0_2f7e = load i32, i32* %eax.global-to-local, align 4
  %v1_2f7e = trunc i32 %v0_2f7e to i8
  %v2_2f7e = and i8 %v1_2f7e, -24
  %v8_2f7e = zext i8 %v2_2f7e to i32
  %v10_2f7e = and i32 %v0_2f7e, -256
  %v11_2f7e = or i32 %v8_2f7e, %v10_2f7e
  store i32 %v11_2f7e, i32* %eax.global-to-local, align 4
  %v1_2f82 = inttoptr i32 %v11_2f7e to i8*
  %v2_2f82 = load i8, i8* %v1_2f82, align 8
  %v5_2f82 = add i8 %v2_2f82, %v2_2f7e
  store i8 %v5_2f82, i8* %v1_2f82, align 8
  %v0_2f84 = call i32 @function_2f88()
  store i32 %v0_2f84, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f84

; uselistorder directives
  uselistorder i32 ()* @function_2f88, { 4, 3, 2, 1, 0 }
}

define i32 @function_2f87() local_unnamed_addr {
dec_label_pc_2f87:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f87 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f87
}

define i32 @function_2f88() local_unnamed_addr {
dec_label_pc_2f88:
  %v0_2f88 = load i32, i32* @ebp, align 4
  %v1_2f88 = add i32 %v0_2f88, -480
  %v1_2f91 = inttoptr i32 %v1_2f88 to i32*
  %v2_2f91 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_2f91)
  %v0_2f96 = load i32, i32* @ebx, align 4
  ret i32 %v0_2f96

; uselistorder directives
  uselistorder i32 -480, { 0, 2, 3, 1 }
}

define i32 @function_2fa0() local_unnamed_addr {
dec_label_pc_2fa0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fa5() local_unnamed_addr {
dec_label_pc_2fa5:
  %v0_2fab = load i32, i32* @eax, align 4
  ret i32 %v0_2fab
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.11" @_Z8gettxoutRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_2fae:
  %tmp110 = call i8 @__decompiler_undefined_function_4()
  %v10_2fdf = icmp eq i8 %tmp110, 0
  %v1_2fe6 = icmp eq i1 %v10_2fdf, false
  br i1 %v1_2fe6, label %dec_label_pc_301a.thread, label %dec_label_pc_2fe8

dec_label_pc_2fe8:                                ; preds = %dec_label_pc_2fae
  %v4_2fc5 = sext i1 %fHelp to i32
  %v2_2ff1 = inttoptr i32 %v4_2fc5 to i32*
  %v3_2ff1 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_2ff1)
  %tmp121 = or i32 %v3_2ff1, 1
  %tmp122 = icmp eq i32 %tmp121, 1
  br i1 %tmp122, label %dec_label_pc_301a.thread, label %dec_label_pc_301a

dec_label_pc_301a.thread:                         ; preds = %dec_label_pc_2fe8, %dec_label_pc_2fae
  br label %dec_label_pc_3022

dec_label_pc_301a:                                ; preds = %dec_label_pc_2fe8
  %v3_3004 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_2ff1)
  %tmp123 = icmp ugt i32 %v3_3004, 3
  %v5_301a = icmp eq i1 %tmp123, false
  br i1 %v5_301a, label %bb, label %dec_label_pc_3022

bb:                                               ; preds = %dec_label_pc_301a
  %v1_301c = call i32 @function_30a5()
  br label %dec_label_pc_3022

dec_label_pc_3022:                                ; preds = %dec_label_pc_301a.thread, %bb, %dec_label_pc_301a
  %v3_3022 = phi i32 [ %v1_301c, %bb ], [ 1, %dec_label_pc_301a ], [ 1, %dec_label_pc_301a.thread ]
  %v4_3022 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.11" undef, i32 %v3_3022, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.11" %v4_3022

; uselistorder directives
  uselistorder label %dec_label_pc_3022, { 1, 2, 0 }
}

define i32 @function_302f() local_unnamed_addr {
dec_label_pc_302f:
  %eax.global-to-local = alloca i32, align 4
  %v0_302f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_302f
}

define i32 @function_30a5() local_unnamed_addr {
dec_label_pc_30a5:
  %v0_30a5 = load i32, i32* @ebp, align 4
  %v1_30a5 = add i32 %v0_30a5, -484
  %v1_30ae = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %v1_30a5)
  %v0_30bb = load i32, i32* @ebp, align 4
  %v1_30bb = add i32 %v0_30bb, -528
  %v2_30bb = inttoptr i32 %v1_30bb to i32*
  %v3_30bb = load i32, i32* %v2_30bb, align 4
  %v2_30c4 = inttoptr i32 %v3_30bb to i32*
  %v3_30c4 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_30c4, i32 0)
  %v1_30cc = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv(i32 %v3_30c4)
  %v0_30d5 = load i32, i32* @ebp, align 4
  %v1_30d5 = add i32 %v0_30d5, -436
  ret i32 %v1_30d5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev, { 2, 1, 0 }
}

define i32 @function_31f3() local_unnamed_addr {
dec_label_pc_31f3:
  %ebx.global-to-local = alloca i32, align 4
  %v0_31f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_31f3 = add i32 %v0_31f3, -1065090576
  %v2_31f3 = inttoptr i32 %v1_31f3 to i32*
  %v3_31f3 = load i32, i32* %v2_31f3, align 4
  %v4_31f3 = add i32 %v3_31f3, 1
  %v12_31f3 = icmp eq i32 %v4_31f3, 0
  store i32 %v4_31f3, i32* %v2_31f3, align 4
  %v0_3218 = load i32, i32* @ebp, align 4
  br i1 %v12_31f3, label %dec_label_pc_3218, label %dec_label_pc_31fb

dec_label_pc_31fb:                                ; preds = %dec_label_pc_31f3
  %v1_3203 = add i32 %v0_3218, -524
  %v2_3203 = inttoptr i32 %v1_3203 to i32*
  %v3_3203 = load i32, i32* %v2_3203, align 4
  %v2_320c = inttoptr i32 %v3_3203 to i32*
  %v3_320c = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKS3_(i32* %v2_320c, i32 ptrtoint (i32* @global_var_2b914.1801 to i32))
  store i32 0, i32* @ebx, align 4
  %v0_3216 = call i32 @function_323d()
  ret i32 %v0_3216

dec_label_pc_3218:                                ; preds = %dec_label_pc_31f3
  %v1_3222 = add i32 %v0_3218, -384
  ret i32 %v1_3222

; uselistorder directives
  uselistorder i32 %v0_3218, { 1, 0 }
}

define i32 @function_323d() local_unnamed_addr {
dec_label_pc_323d:
  %v0_323d = load i32, i32* @ebp, align 4
  %v1_323d = add i32 %v0_323d, -472
  %v1_3246 = call i32 @_ZN17CCoinsViewMemPoolD1Ev(i32 %v1_323d)
  %v0_324b = load i32, i32* @ebx, align 4
  %v10_324b = icmp eq i32 %v0_324b, 1
  %. = zext i1 %v10_324b to i32
  store i32 %., i32* @ebx, align 4
  %v0_325c = load i32, i32* @ebp, align 4
  %v1_325c = add i32 %v0_325c, -448
  %v1_3265 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32 %v1_325c)
  %v0_326f = call i32 @function_3923()
  ret i32 %v0_326f
}

define i32 @function_3475() local_unnamed_addr {
dec_label_pc_3475:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_3475 = add i32 %tmp91, -99963
  %v2_3475 = inttoptr i32 %v1_3475 to i32*
  %v3_3475 = load i32, i32* %v2_3475, align 4
  %v4_3475 = add i32 %v3_3475, -1
  store i32 %v4_3475, i32* %v2_3475, align 4
  %v0_347b = load i32, i32* %ecx.global-to-local, align 4
  %v1_347b = add i32 %v0_347b, -955767740
  %v2_347b = inttoptr i32 %v1_347b to i32*
  %v3_347b = load i32, i32* %v2_347b, align 4
  %v4_347b = add i32 %v3_347b, -1
  store i32 %v4_347b, i32* %v2_347b, align 4
  %v0_3482 = load i32, i32* %eax.global-to-local, align 4
  %v11_3482 = and i32 %v0_3482, -252
  store i32 %v11_3482, i32* @eax, align 4
  %v0_3484 = call i32 @function_34e1()
  store i32 %v0_3484, i32* %eax.global-to-local, align 4
  ret i32 %v0_3484
}

define i32 @function_34e1() local_unnamed_addr {
dec_label_pc_34e1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34fa() local_unnamed_addr {
dec_label_pc_34fa:
  %v0_34fa = load i32, i32* @ebp, align 4
  %v1_34fa = add i32 %v0_34fa, -132
  %v1_3503 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_34fa)
  %v0_3508 = call i32 @function_35de()
  ret i32 %v0_3508
}

define i32 @function_3551() local_unnamed_addr {
dec_label_pc_3551:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_3551 = add i32 %tmp91, -99707
  %v2_3551 = inttoptr i32 %v1_3551 to i32*
  %v3_3551 = load i32, i32* %v2_3551, align 4
  %v4_3551 = add i32 %v3_3551, -1
  store i32 %v4_3551, i32* %v2_3551, align 4
  %v0_3557 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3557 = add i32 %v0_3557, -955767740
  %v2_3557 = inttoptr i32 %v1_3557 to i32*
  %v3_3557 = load i32, i32* %v2_3557, align 4
  %v4_3557 = add i32 %v3_3557, -1
  store i32 %v4_3557, i32* %v2_3557, align 4
  %v0_355e = load i32, i32* %eax.global-to-local, align 4
  %v11_355e = and i32 %v0_355e, -252
  store i32 %v11_355e, i32* @eax, align 4
  %v0_3560 = call i32 @function_35bd()
  store i32 %v0_3560, i32* %eax.global-to-local, align 4
  ret i32 %v0_3560
}

define i32 @function_35a3() local_unnamed_addr {
dec_label_pc_35a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_35a3 = load i32, i32* %eax.global-to-local, align 4
  %v11_35a3 = and i32 %v0_35a3, -24
  store i32 %v11_35a3, i32* %eax.global-to-local, align 4
  ret i32 %v11_35a3

; uselistorder directives
  uselistorder i32 %v11_35a3, { 1, 0 }
}

define i32 @function_35bd() local_unnamed_addr {
dec_label_pc_35bd:
  %v3_35bd = load i32, i32* @eax, align 4
  ret i32 %v3_35bd
}

define i32 @function_35de() local_unnamed_addr {
dec_label_pc_35de:
  %v0_35de = load i32, i32* @ebp, align 4
  %v1_35de = add i32 %v0_35de, -400
  %v2_35de = inttoptr i32 %v1_35de to i32*
  %v3_35de = load i32, i32* %v2_35de, align 4
  %v1_35ee = add i32 %v0_35de, -504
  %v2_35f4 = inttoptr i32 %v1_35ee to i32*
  %v3_35f4 = call i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj(i32* %v2_35f4, i32 %v3_35de)
  %v1_35fc = inttoptr i32 %v3_35f4 to i32*
  %v2_35fc = load i32, i32* %v1_35fc, align 4
  ret i32 %v2_35fc
}

define i32 @function_36cb() local_unnamed_addr {
dec_label_pc_36cb:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_36cb = load i32, i32* %ebx.global-to-local, align 4
  %v1_36cb = add i32 %v0_36cb, 76088512
  %v2_36cb = inttoptr i32 %v1_36cb to i32*
  %v3_36cb = load i32, i32* %v2_36cb, align 4
  %v4_36cb = add i32 %v3_36cb, 1
  store i32 %v4_36cb, i32* %v2_36cb, align 4
  %v0_36d1 = load i32, i32* %eax.global-to-local, align 4
  %v11_36d1 = and i32 %v0_36d1, -24
  store i32 %v11_36d1, i32* @eax, align 4
  %v0_36d3 = call i32 @function_36d7()
  store i32 %v0_36d3, i32* %eax.global-to-local, align 4
  ret i32 %v0_36d3
}

define i32 @function_36d5() local_unnamed_addr {
dec_label_pc_36d5:
  %eax.global-to-local = alloca i32, align 4
  %v2_36d5 = load i32, i32* %eax.global-to-local, align 4
  %v4_36d5 = mul i32 %v2_36d5, 2
  %v21_36d5 = inttoptr i32 %v2_36d5 to i32*
  store i32 %v4_36d5, i32* %v21_36d5, align 4
  %v22_36d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_36d5

; uselistorder directives
  uselistorder i32 %v2_36d5, { 1, 0 }
}

define i32 @function_36d7() local_unnamed_addr {
dec_label_pc_36d7:
  %v0_36da = load i32, i32* @ebp, align 4
  %v1_36da = add i32 %v0_36da, -460
  ret i32 %v1_36da
}

define i32 @function_3765(i16 %arg1) local_unnamed_addr {
dec_label_pc_3765:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3765 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3765 = add i32 %v0_3765, -57211
  %v2_3765 = inttoptr i32 %v1_3765 to i8*
  %v3_3765 = load i8, i8* %v2_3765, align 1
  %v4_3765 = load i32, i32* %ecx.global-to-local, align 4
  %v5_3765 = trunc i32 %v4_3765 to i8
  %v6_3765 = add i8 %v5_3765, %v3_3765
  store i8 %v6_3765, i8* %v2_3765, align 1
  %v0_376b = load i32, i32* %ecx.global-to-local, align 4
  %v1_376b = add i32 %v0_376b, -1125637116
  %v2_376b = inttoptr i32 %v1_376b to i32*
  %v3_376b = load i32, i32* %v2_376b, align 4
  %v4_376b = add i32 %v3_376b, -1
  store i32 %v4_376b, i32* %v2_376b, align 4
  %v6_3771 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_3771
}

define i32 @function_378f(i32 %arg1, i16 %arg2) local_unnamed_addr {
dec_label_pc_378f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_378f = load i32, i32* %ebp.global-to-local, align 4
  %v1_378f = add i32 %v0_378f, 76134469
  %v2_378f = inttoptr i32 %v1_378f to i32*
  %v3_378f = load i32, i32* %v2_378f, align 4
  %v4_378f = add i32 %v3_378f, -1
  store i32 %v4_378f, i32* %v2_378f, align 4
  %v0_3795 = load i32, i32* %eax.global-to-local, align 4
  %v11_3795 = and i32 %v0_3795, -24
  store i32 %v11_3795, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  ret i32 %v11_3795

; uselistorder directives
  uselistorder i32 %v11_3795, { 1, 0 }
}

define i32 @function_3814(i16 %arg1) local_unnamed_addr {
dec_label_pc_3814:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3814 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3814 = add i32 %v0_3814, -51067
  %v2_3814 = inttoptr i32 %v1_3814 to i8*
  %v3_3814 = load i8, i8* %v2_3814, align 1
  %v4_3814 = load i32, i32* %ecx.global-to-local, align 4
  %v5_3814 = trunc i32 %v4_3814 to i8
  %v6_3814 = add i8 %v5_3814, %v3_3814
  store i8 %v6_3814, i8* %v2_3814, align 1
  %v0_381a = load i32, i32* %ecx.global-to-local, align 4
  %v1_381a = add i32 %v0_381a, 233317380
  %v2_381a = inttoptr i32 %v1_381a to i32*
  %v3_381a = load i32, i32* %v2_381a, align 4
  %v4_381a = add i32 %v3_381a, -1
  store i32 %v4_381a, i32* %v2_381a, align 4
  %v6_3820 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_3820
}

define i32 @function_383e(i16 %arg1) local_unnamed_addr {
dec_label_pc_383e:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_383e = load i32, i32* %ebp.global-to-local, align 4
  %v1_383e = add i32 %v0_383e, 76139589
  %v2_383e = inttoptr i32 %v1_383e to i32*
  %v3_383e = load i32, i32* %v2_383e, align 4
  %v4_383e = add i32 %v3_383e, -1
  store i32 %v4_383e, i32* %v2_383e, align 4
  %v0_3844 = load i32, i32* %eax.global-to-local, align 4
  %v11_3844 = and i32 %v0_3844, -24
  store i32 %v11_3844, i32* %eax.global-to-local, align 4
  %v20_3846 = load i32, i32* %edi.global-to-local, align 4
  %v21_3846 = load i1, i1* %df.global-to-local, align 1
  %v22_3846 = select i1 %v21_3846, i32 -1, i32 1
  %v23_3846 = add i32 %v22_3846, %v20_3846
  store i32 %v23_3846, i32* %edi.global-to-local, align 4
  ret i32 %v11_3844

; uselistorder directives
  uselistorder i32 %v11_3844, { 1, 0 }
}

define i32 @function_38c7(i16 %arg1) local_unnamed_addr {
dec_label_pc_38c7:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38c7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_38c7 = add i32 %v0_38c7, -44923
  %v2_38c7 = inttoptr i32 %v1_38c7 to i8*
  %v3_38c7 = load i8, i8* %v2_38c7, align 1
  %v4_38c7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_38c7 = trunc i32 %v4_38c7 to i8
  %v6_38c7 = add i8 %v5_38c7, %v3_38c7
  store i8 %v6_38c7, i8* %v2_38c7, align 1
  %v0_38cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_38cd = add i32 %v0_38cd, 1525163012
  %v2_38cd = inttoptr i32 %v1_38cd to i32*
  %v3_38cd = load i32, i32* %v2_38cd, align 4
  %v4_38cd = add i32 %v3_38cd, -1
  store i32 %v4_38cd, i32* %v2_38cd, align 4
  %v6_38d3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_38d3
}

define i32 @function_391d() local_unnamed_addr {
dec_label_pc_391d:
  %eax.global-to-local = alloca i32, align 4
  %v0_391d = load i32, i32* %eax.global-to-local, align 4
  %v11_391d = and i32 %v0_391d, -24
  store i32 %v11_391d, i32* %eax.global-to-local, align 4
  ret i32 %v11_391d

; uselistorder directives
  uselistorder i32 %v11_391d, { 1, 0 }
}

define i32 @function_3923() local_unnamed_addr {
dec_label_pc_3923:
  %v0_3923 = load i32, i32* @ebp, align 4
  %v1_3923 = add i32 %v0_3923, -508
  %v1_392c = call i32 @_ZN6CCoinsD1Ev(i32 %v1_3923)
  %v0_3931 = load i32, i32* @ebp, align 4
  %v1_3931 = add i32 %v0_3931, -436
  ret i32 %v1_3931
}

define i32 @function_393e() local_unnamed_addr {
dec_label_pc_393e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_393e = load i32, i32* @ebp, align 4
  %v1_393e = add i32 %v0_393e, -123771
  %v2_393e = inttoptr i32 %v1_393e to i32*
  %v3_393e = load i32, i32* %v2_393e, align 4
  %v4_393e = add i32 %v3_393e, -1
  store i32 %v4_393e, i32* %v2_393e, align 4
  %v0_3944 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3944 = add i32 %v0_3944, -1712839676
  %v2_3944 = inttoptr i32 %v1_3944 to i32*
  %v3_3944 = load i32, i32* %v2_3944, align 4
  %v4_3944 = add i32 %v3_3944, -1
  store i32 %v4_3944, i32* %v2_3944, align 4
  %v2_394b = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_394b = load i32, i32* %eax.global-to-local, align 4
  %v4_394b = trunc i32 %v3_394b to i8
  %v5_394b = add i8 %v4_394b, %v2_394b
  %v21_394b = inttoptr i32 %v3_394b to i8*
  store i8 %v5_394b, i8* %v21_394b, align 1
  %v0_394d = load i32, i32* @ebp, align 4
  %v1_394d = add i32 %v0_394d, -524
  %v2_394d = inttoptr i32 %v1_394d to i32*
  %v3_394d = load i32, i32* %v2_394d, align 4
  store i32 %v3_394d, i32* @eax, align 4
  %v1_3953 = add i32 %v0_394d, -12
  %v2_3953 = inttoptr i32 %v1_3953 to i32*
  %v3_3953 = load i32, i32* %v2_3953, align 4
  %v1_3956 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3956 = icmp eq i32 %v1_3956, %v3_3953
  br i1 %v3_3956, label %bb, label %dec_label_pc_3963

bb:                                               ; preds = %dec_label_pc_393e
  %v1_395d = call i32 @function_3c06()
  store i32 %v1_395d, i32* @eax, align 4
  br label %dec_label_pc_3963

dec_label_pc_3963:                                ; preds = %bb, %dec_label_pc_393e
  %v0_3963 = call i32 @function_3c01()
  store i32 %v0_3963, i32* %eax.global-to-local, align 4
  ret i32 %v0_3963
}

define i32 @function_3978() local_unnamed_addr {
dec_label_pc_3978:
  %v0_3978 = call i32 @function_397c()
  ret i32 %v0_3978
}

define i32 @function_397a() local_unnamed_addr {
dec_label_pc_397a:
  %eax.global-to-local = alloca i32, align 4
  %v0_397a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_397a
}

define i32 @function_397c() local_unnamed_addr {
dec_label_pc_397c:
  %v0_397c = load i32, i32* @ebp, align 4
  %v1_397c = add i32 %v0_397c, -393
  ret i32 %v1_397c
}

define i32 @function_399c() local_unnamed_addr {
dec_label_pc_399c:
  %eax.global-to-local = alloca i32, align 4
  %v0_399c = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_399c, i32* @ebx, align 4
  %v0_399e = load i32, i32* @ebp, align 4
  %v1_399e = add i32 %v0_399e, -472
  store i32 %v1_399e, i32* %eax.global-to-local, align 4
  %v1_39a7 = call i32 @_ZN17CCoinsViewMemPoolD1Ev(i32 %v1_399e)
  store i32 %v1_39a7, i32* %eax.global-to-local, align 4
  %v0_39ac = call i32 @function_39b0()
  store i32 %v0_39ac, i32* %eax.global-to-local, align 4
  ret i32 %v0_39ac

; uselistorder directives
  uselistorder i32 (i32)* @_ZN17CCoinsViewMemPoolD1Ev, { 1, 0 }
}

define i32 @function_39ae() local_unnamed_addr {
dec_label_pc_39ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_39ae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39ae
}

define i32 @function_39b0() local_unnamed_addr {
dec_label_pc_39b0:
  %v0_39b0 = load i32, i32* @ebp, align 4
  %v1_39b0 = add i32 %v0_39b0, -448
  %v1_39b9 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32 %v1_39b0)
  %v0_39be = call i32 @function_3bc5()
  ret i32 %v0_39be

; uselistorder directives
  uselistorder i32 (i32)* @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev, { 1, 0 }
}

define i32 @function_39c3() local_unnamed_addr {
dec_label_pc_39c3:
  %v0_39c5 = load i32, i32* @ebp, align 4
  %v1_39c5 = add i32 %v0_39c5, -320
  %v1_39ce = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_39c5)
  %v0_39d3 = call i32 @function_39d7()
  ret i32 %v0_39d3
}

define i32 @function_39d5() local_unnamed_addr {
dec_label_pc_39d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_39d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39d5
}

define i32 @function_39d7() local_unnamed_addr {
dec_label_pc_39d7:
  %v0_39d7 = load i32, i32* @ebp, align 4
  %v1_39d7 = add i32 %v0_39d7, -428
  ret i32 %v1_39d7
}

define i32 @function_39e5() local_unnamed_addr {
dec_label_pc_39e5:
  %v0_39e5 = call i32 @function_39e9()
  ret i32 %v0_39e5
}

define i32 @function_39e7() local_unnamed_addr {
dec_label_pc_39e7:
  %eax.global-to-local = alloca i32, align 4
  %v0_39e7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39e7
}

define i32 @function_39e9() local_unnamed_addr {
dec_label_pc_39e9:
  %v0_39e9 = load i32, i32* @ebp, align 4
  %v1_39e9 = add i32 %v0_39e9, -392
  ret i32 %v1_39e9
}

define i32 @function_39f7() local_unnamed_addr {
dec_label_pc_39f7:
  %v0_39f7 = load i32, i32* @ebp, align 4
  %v1_39f7 = add i32 %v0_39f7, -152
  %v1_3a00 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_39f7)
  %v0_3a05 = call i32 @function_3a09()
  ret i32 %v0_3a05
}

define i32 @function_3a07() local_unnamed_addr {
dec_label_pc_3a07:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a07 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a07
}

define i32 @function_3a09() local_unnamed_addr {
dec_label_pc_3a09:
  %v0_3a09 = load i32, i32* @ebp, align 4
  %v1_3a09 = add i32 %v0_3a09, -432
  ret i32 %v1_3a09
}

define i32 @function_3a17() local_unnamed_addr {
dec_label_pc_3a17:
  %v0_3a17 = call i32 @function_3bc5()
  ret i32 %v0_3a17
}

define i32 @function_3a1c() local_unnamed_addr {
dec_label_pc_3a1c:
  %v0_3a1e = load i32, i32* @ebp, align 4
  %v1_3a1e = add i32 %v0_3a1e, -296
  %v1_3a27 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3a1e)
  %v0_3a2c = call i32 @function_3a30()
  ret i32 %v0_3a2c
}

define i32 @function_3a2e() local_unnamed_addr {
dec_label_pc_3a2e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a2e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a2e
}

define i32 @function_3a30() local_unnamed_addr {
dec_label_pc_3a30:
  %v0_3a30 = load i32, i32* @ebp, align 4
  %v1_3a30 = add i32 %v0_3a30, -424
  ret i32 %v1_3a30
}

define i32 @function_3a3e() local_unnamed_addr {
dec_label_pc_3a3e:
  %v0_3a3e = call i32 @function_3a42()
  ret i32 %v0_3a3e
}

define i32 @function_3a40() local_unnamed_addr {
dec_label_pc_3a40:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a40 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a40
}

define i32 @function_3a42() local_unnamed_addr {
dec_label_pc_3a42:
  %v0_3a42 = load i32, i32* @ebp, align 4
  %v1_3a42 = add i32 %v0_3a42, -391
  ret i32 %v1_3a42
}

define i32 @function_3a4f() local_unnamed_addr {
dec_label_pc_3a4f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_3a4f = load i32, i32* %ebp.global-to-local, align 4
  %v1_3a4f = add i32 %v0_3a4f, -33659
  %v2_3a4f = inttoptr i32 %v1_3a4f to i32*
  %v3_3a4f = load i32, i32* %v2_3a4f, align 4
  %v4_3a4f = add i32 %v3_3a4f, -1
  store i32 %v4_3a4f, i32* %v2_3a4f, align 4
  %v0_3a55 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a55 = add i32 %v0_3a55, -1696062460
  %v2_3a55 = inttoptr i32 %v1_3a55 to i32*
  %v3_3a55 = load i32, i32* %v2_3a55, align 4
  %v4_3a55 = add i32 %v3_3a55, -1
  store i32 %v4_3a55, i32* %v2_3a55, align 4
  %v4_3a5b = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_3a5b, i32* @ebp, align 4
  %v2_3a61 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_3a61 = load i32, i32* %eax.global-to-local, align 4
  %v4_3a61 = trunc i32 %v3_3a61 to i8
  %v5_3a61 = add i8 %v4_3a61, %v2_3a61
  %v21_3a61 = inttoptr i32 %v3_3a61 to i8*
  store i8 %v5_3a61, i8* %v21_3a61, align 1
  %v2_3a65 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_3a65, i32* %eax.global-to-local, align 4
  store i32 %v2_3a65, i32* %stack_var_-4, align 4
  %v1_3a6e = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v2_3a65)
  store i32 %v1_3a6e, i32* %eax.global-to-local, align 4
  %v0_3a73 = call i32 @function_3a77()
  store i32 %v0_3a73, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a73

; uselistorder directives
  uselistorder i32 %v2_3a65, { 1, 0, 2 }
}

define i32 @function_3a75() local_unnamed_addr {
dec_label_pc_3a75:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a75 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a75
}

define i32 @function_3a77() local_unnamed_addr {
dec_label_pc_3a77:
  %v0_3a77 = load i32, i32* @ebp, align 4
  %v1_3a77 = add i32 %v0_3a77, -420
  ret i32 %v1_3a77
}

define i32 @function_3a85() local_unnamed_addr {
dec_label_pc_3a85:
  %v0_3a85 = call i32 @function_3a89()
  ret i32 %v0_3a85
}

define i32 @function_3a87() local_unnamed_addr {
dec_label_pc_3a87:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a87 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a87
}

define i32 @function_3a89() local_unnamed_addr {
dec_label_pc_3a89:
  %v0_3a89 = load i32, i32* @ebp, align 4
  %v1_3a89 = add i32 %v0_3a89, -390
  ret i32 %v1_3a89
}

define i32 @function_3a97() local_unnamed_addr {
dec_label_pc_3a97:
  %v0_3a97 = load i32, i32* @ebp, align 4
  %v1_3a97 = add i32 %v0_3a97, -112
  %v1_3a9d = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3a97)
  %v0_3aa2 = call i32 @function_3bc5()
  ret i32 %v0_3aa2

; uselistorder directives
  uselistorder i32 (i32)* @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_3aa7() local_unnamed_addr {
dec_label_pc_3aa7:
  %v0_3aa9 = load i32, i32* @ebp, align 4
  %v1_3aa9 = add i32 %v0_3aa9, -248
  %v1_3ab2 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3aa9)
  %v0_3ab7 = call i32 @function_3abb()
  ret i32 %v0_3ab7
}

define i32 @function_3ab9() local_unnamed_addr {
dec_label_pc_3ab9:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ab9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3ab9
}

define i32 @function_3abb() local_unnamed_addr {
dec_label_pc_3abb:
  %v0_3abb = load i32, i32* @ebp, align 4
  %v1_3abb = add i32 %v0_3abb, -416
  ret i32 %v1_3abb
}

define i32 @function_3ac9() local_unnamed_addr {
dec_label_pc_3ac9:
  %v0_3ac9 = call i32 @function_3acd()
  ret i32 %v0_3ac9
}

define i32 @function_3acb() local_unnamed_addr {
dec_label_pc_3acb:
  %eax.global-to-local = alloca i32, align 4
  %v0_3acb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3acb
}

define i32 @function_3acd() local_unnamed_addr {
dec_label_pc_3acd:
  %v0_3acd = load i32, i32* @ebp, align 4
  %v1_3acd = add i32 %v0_3acd, -389
  ret i32 %v1_3acd
}

define i32 @function_3ada() local_unnamed_addr {
dec_label_pc_3ada:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3ada = load i32, i32* @ebp, align 4
  %v1_3ada = add i32 %v0_3ada, 76129349
  %v2_3ada = inttoptr i32 %v1_3ada to i32*
  %v3_3ada = load i32, i32* %v2_3ada, align 4
  %v4_3ada = add i32 %v3_3ada, -1
  store i32 %v4_3ada, i32* %v2_3ada, align 4
  %v0_3ae0 = load i32, i32* %eax.global-to-local, align 4
  %v1_3ae0 = trunc i32 %v0_3ae0 to i8
  %v2_3ae0 = and i8 %v1_3ae0, -24
  %v8_3ae0 = zext i8 %v2_3ae0 to i32
  %v10_3ae0 = and i32 %v0_3ae0, -256
  %v11_3ae0 = or i32 %v8_3ae0, %v10_3ae0
  store i32 %v11_3ae0, i32* %eax.global-to-local, align 4
  %v0_3ae2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3ae2 = trunc i32 %v0_3ae2 to i8
  %v6_3ae2 = add i8 %v1_3ae2, %v2_3ae0
  %v28_3ae2 = zext i8 %v6_3ae2 to i32
  %v30_3ae2 = and i32 %v0_3ae2, -256
  %v31_3ae2 = or i32 %v28_3ae2, %v30_3ae2
  store i32 %v31_3ae2, i32* %ecx.global-to-local, align 4
  %v1_3ae4 = inttoptr i32 %v11_3ae0 to i8*
  %v2_3ae4 = load i8, i8* %v1_3ae4, align 8
  %v5_3ae4 = add i8 %v2_3ae4, %v2_3ae0
  store i8 %v5_3ae4, i8* %v1_3ae4, align 8
  %v0_3ae6 = call i32 @function_3bc5()
  store i32 %v0_3ae6, i32* %eax.global-to-local, align 4
  ret i32 %v0_3ae6
}

define i32 @function_3aeb() local_unnamed_addr {
dec_label_pc_3aeb:
  %v0_3aed = load i32, i32* @ebp, align 4
  %v1_3aed = add i32 %v0_3aed, -224
  %v1_3af6 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3aed)
  %v0_3afb = call i32 @function_3aff()
  ret i32 %v0_3afb
}

define i32 @function_3afd() local_unnamed_addr {
dec_label_pc_3afd:
  %eax.global-to-local = alloca i32, align 4
  %v0_3afd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3afd
}

define i32 @function_3aff() local_unnamed_addr {
dec_label_pc_3aff:
  %v0_3aff = load i32, i32* @ebp, align 4
  %v1_3aff = add i32 %v0_3aff, -412
  ret i32 %v1_3aff
}

define i32 @function_3b0d() local_unnamed_addr {
dec_label_pc_3b0d:
  %v0_3b0d = call i32 @function_3b11()
  ret i32 %v0_3b0d
}

define i32 @function_3b0f() local_unnamed_addr {
dec_label_pc_3b0f:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b0f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b0f
}

define i32 @function_3b11() local_unnamed_addr {
dec_label_pc_3b11:
  %v0_3b11 = load i32, i32* @ebp, align 4
  %v1_3b11 = add i32 %v0_3b11, -388
  ret i32 %v1_3b11
}

define i32 @function_3b1e() local_unnamed_addr {
dec_label_pc_3b1e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b1e = load i32, i32* @ebp, align 4
  %v1_3b1e = add i32 %v0_3b1e, 76134469
  %v2_3b1e = inttoptr i32 %v1_3b1e to i32*
  %v3_3b1e = load i32, i32* %v2_3b1e, align 4
  %v4_3b1e = add i32 %v3_3b1e, -1
  store i32 %v4_3b1e, i32* %v2_3b1e, align 4
  %v0_3b24 = load i32, i32* %eax.global-to-local, align 4
  %v11_3b24 = and i32 %v0_3b24, -24
  store i32 %v11_3b24, i32* %eax.global-to-local, align 4
  %v1_3b27 = inttoptr i32 %v11_3b24 to i32*
  store i32 8710400, i32* %v1_3b27, align 8
  %v0_3b2d = load i32, i32* %eax.global-to-local, align 4
  %v1_3b2d = inttoptr i32 %v0_3b2d to i8*
  %v2_3b2d = load i8, i8* %v1_3b2d, align 1
  %v4_3b2d = trunc i32 %v0_3b2d to i8
  %v5_3b2d = add i8 %v2_3b2d, %v4_3b2d
  store i8 %v5_3b2d, i8* %v1_3b2d, align 1
  %v0_3b31 = load i32, i32* @ebp, align 4
  %v1_3b31 = add i32 %v0_3b31, -200
  store i32 %v1_3b31, i32* %eax.global-to-local, align 4
  %v1_3b3a = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3b31)
  store i32 %v1_3b3a, i32* %eax.global-to-local, align 4
  %v0_3b3f = call i32 @function_3b43()
  store i32 %v0_3b3f, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b3f

; uselistorder directives
  uselistorder i32 %v11_3b24, { 1, 0 }
}

define i32 @function_3b41() local_unnamed_addr {
dec_label_pc_3b41:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b41 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b41
}

define i32 @function_3b43() local_unnamed_addr {
dec_label_pc_3b43:
  %v0_3b43 = load i32, i32* @ebp, align 4
  %v1_3b43 = add i32 %v0_3b43, -408
  ret i32 %v1_3b43
}

define i32 @function_3b51() local_unnamed_addr {
dec_label_pc_3b51:
  %v0_3b51 = call i32 @function_3b55()
  ret i32 %v0_3b51
}

define i32 @function_3b53() local_unnamed_addr {
dec_label_pc_3b53:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b53 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b53
}

define i32 @function_3b55() local_unnamed_addr {
dec_label_pc_3b55:
  %v0_3b55 = load i32, i32* @ebp, align 4
  %v1_3b55 = add i32 %v0_3b55, -387
  ret i32 %v1_3b55
}

define i32 @function_3b62() local_unnamed_addr {
dec_label_pc_3b62:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3b62 = load i32, i32* @ebp, align 4
  %v1_3b62 = add i32 %v0_3b62, 76139589
  %v2_3b62 = inttoptr i32 %v1_3b62 to i32*
  %v3_3b62 = load i32, i32* %v2_3b62, align 4
  %v4_3b62 = add i32 %v3_3b62, -1
  store i32 %v4_3b62, i32* %v2_3b62, align 4
  %v0_3b68 = load i32, i32* %eax.global-to-local, align 4
  %v10_3b68 = and i32 %v0_3b68, -256
  %v0_3b6a = load i32, i32* %ebx.global-to-local, align 4
  %v1_3b6a = udiv i32 %v0_3b6a, 256
  %v2_3b6a = urem i32 %v1_3b6a, 256
  %v5_3b6a = or i32 %v2_3b6a, %v10_3b68
  store i32 %v5_3b6a, i32* %eax.global-to-local, align 4
  %v1_3b6c = inttoptr i32 %v5_3b6a to i8*
  %v2_3b6c = load i8, i8* %v1_3b6c, align 1
  %v4_3b6c = trunc i32 %v1_3b6a to i8
  %v5_3b6c = add i8 %v2_3b6c, %v4_3b6c
  store i8 %v5_3b6c, i8* %v1_3b6c, align 1
  %v0_3b6e = call i32 @function_3bb3()
  store i32 %v0_3b6e, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b6e
}

define i32 @function_3b70() local_unnamed_addr {
dec_label_pc_3b70:
  %v0_3b72 = load i32, i32* @ebp, align 4
  %v1_3b72 = add i32 %v0_3b72, -176
  %v1_3b7b = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3b72)
  %v0_3b80 = call i32 @function_3b84()
  ret i32 %v0_3b80

; uselistorder directives
  uselistorder i32 (i32)* @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_3b82() local_unnamed_addr {
dec_label_pc_3b82:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b82 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b82
}

define i32 @function_3b84() local_unnamed_addr {
dec_label_pc_3b84:
  %v0_3b84 = load i32, i32* @ebp, align 4
  %v1_3b84 = add i32 %v0_3b84, -404
  ret i32 %v1_3b84
}

define i32 @function_3b92() local_unnamed_addr {
dec_label_pc_3b92:
  %v0_3b92 = call i32 @function_3b96()
  ret i32 %v0_3b92
}

define i32 @function_3b94() local_unnamed_addr {
dec_label_pc_3b94:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b94 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b94
}

define i32 @function_3b96() local_unnamed_addr {
dec_label_pc_3b96:
  %v0_3b96 = load i32, i32* @ebp, align 4
  %v1_3b96 = add i32 %v0_3b96, -386
  ret i32 %v1_3b96
}

define i32 @function_3ba3() local_unnamed_addr {
dec_label_pc_3ba3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_3ba3 = add i32 %tmp91, 76144709
  %v2_3ba3 = inttoptr i32 %v1_3ba3 to i32*
  %v3_3ba3 = load i32, i32* %v2_3ba3, align 4
  %v4_3ba3 = add i32 %v3_3ba3, -1
  store i32 %v4_3ba3, i32* %v2_3ba3, align 4
  %v0_3ba9 = load i32, i32* %eax.global-to-local, align 4
  %v11_3ba9 = and i32 %v0_3ba9, -24
  store i32 %v11_3ba9, i32* %eax.global-to-local, align 4
  %v0_3bab = load i32, i32* %ecx.global-to-local, align 4
  %v1_3bab = add i32 %v0_3bab, -1
  store i32 %v1_3bab, i32* %ecx.global-to-local, align 4
  %v1_3bac = inttoptr i32 %v11_3ba9 to i32*
  store i32 -1996297472, i32* %v1_3bac, align 8
  %v0_3bb2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3bb2

; uselistorder directives
  uselistorder i32 %v11_3ba9, { 1, 0 }
}

define i32 @function_3bb3() local_unnamed_addr {
dec_label_pc_3bb3:
  %v0_3bb3 = load i32, i32* @ebp, align 4
  %v1_3bb3 = add i32 %v0_3bb3, -460
  %v1_3bbc = inttoptr i32 %v1_3bb3 to i32*
  %v2_3bbc = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_3bbc)
  %v0_3bc1 = call i32 @function_3bc5()
  ret i32 %v0_3bc1

; uselistorder directives
  uselistorder i32 ()* @function_3bc5, { 4, 3, 2, 1, 0 }
}

define i32 @function_3bc4() local_unnamed_addr {
dec_label_pc_3bc4:
  %eax.global-to-local = alloca i32, align 4
  %v0_3bc4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3bc4
}

define i32 @function_3bc5() local_unnamed_addr {
dec_label_pc_3bc5:
  %v0_3bc5 = load i32, i32* @ebp, align 4
  %v1_3bc5 = add i32 %v0_3bc5, -508
  %v1_3bce = call i32 @_ZN6CCoinsD1Ev(i32 %v1_3bc5)
  %v0_3bd3 = call i32 @function_3bd7()
  ret i32 %v0_3bd3

; uselistorder directives
  uselistorder i32 (i32)* @_ZN6CCoinsD1Ev, { 1, 0 }
}

define i32 @function_3bd5() local_unnamed_addr {
dec_label_pc_3bd5:
  %eax.global-to-local = alloca i32, align 4
  %v0_3bd5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3bd5
}

define i32 @function_3bd7() local_unnamed_addr {
dec_label_pc_3bd7:
  %v0_3bd7 = load i32, i32* @ebp, align 4
  %v1_3bd7 = add i32 %v0_3bd7, -436
  ret i32 %v1_3bd7

; uselistorder directives
  uselistorder i32 -436, { 0, 3, 2, 1 }
}

define i32 @function_3be5() local_unnamed_addr {
dec_label_pc_3be5:
  %v0_3be5 = call i32 @function_3be9()
  ret i32 %v0_3be5
}

define i32 @function_3be7() local_unnamed_addr {
dec_label_pc_3be7:
  %eax.global-to-local = alloca i32, align 4
  %v0_3be7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3be7
}

define i32 @function_3be9() local_unnamed_addr {
dec_label_pc_3be9:
  %v0_3be9 = load i32, i32* @ebp, align 4
  %v1_3be9 = add i32 %v0_3be9, -484
  %v1_3bf2 = inttoptr i32 %v1_3be9 to i32*
  %v2_3bf2 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_3bf2)
  %v0_3bf7 = load i32, i32* @ebx, align 4
  ret i32 %v0_3bf7

; uselistorder directives
  uselistorder i32 (i32*)* @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev, { 0, 1, 2, 6, 3, 4, 5 }
}

define i32 @function_3c01() local_unnamed_addr {
dec_label_pc_3c01:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3c06() local_unnamed_addr {
dec_label_pc_3c06:
  %v0_3c0c = load i32, i32* @eax, align 4
  ret i32 %v0_3c0c
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.12" @_Z11verifychainRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(%"vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>,std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>>>" %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_3c0f:
  %tmp110 = call i8 @__decompiler_undefined_function_4()
  %v10_3c34 = icmp eq i8 %tmp110, 0
  %v1_3c38 = icmp eq i1 %v10_3c34, false
  br i1 %v1_3c38, label %dec_label_pc_3c56.thread, label %dec_label_pc_3c56

dec_label_pc_3c56.thread:                         ; preds = %dec_label_pc_3c0f
  br label %dec_label_pc_3c5a

dec_label_pc_3c56:                                ; preds = %dec_label_pc_3c0f
  %v4_3c20 = sext i1 %fHelp to i32
  %v2_3c40 = inttoptr i32 %v4_3c20 to i32*
  %v3_3c40 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_3c40)
  %tmp120 = icmp ugt i32 %v3_3c40, 2
  %v5_3c56 = icmp eq i1 %tmp120, false
  br i1 %v5_3c56, label %bb, label %dec_label_pc_3c5a

bb:                                               ; preds = %dec_label_pc_3c56
  %v1_3c58 = call i32 @function_3ccb()
  br label %dec_label_pc_3c5a

dec_label_pc_3c5a:                                ; preds = %dec_label_pc_3c56.thread, %bb, %dec_label_pc_3c56
  %v3_3c5a = phi i32 [ %v1_3c58, %bb ], [ 1, %dec_label_pc_3c56 ], [ 1, %dec_label_pc_3c56.thread ]
  %v4_3c5a = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.12" undef, i32 %v3_3c5a, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.12" %v4_3c5a

; uselistorder directives
  uselistorder label %dec_label_pc_3c5a, { 1, 2, 0 }
}

define i32 @function_3c67() local_unnamed_addr {
dec_label_pc_3c67:
  %eax.global-to-local = alloca i32, align 4
  %v0_3c67 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3c67
}

define i32 @function_3ccb() local_unnamed_addr {
dec_label_pc_3ccb:
  %v0_3ccb = load i32, i32* @ebp, align 4
  %v1_3ccb = add i32 %v0_3ccb, -14
  ret i32 %v1_3ccb
}

define i32 @function_3df3() local_unnamed_addr {
dec_label_pc_3df3:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v3_3df3 = add i32 %tmp93, -1
  %v18_3df3 = inttoptr i32 %tmp93 to i32*
  store i32 %v3_3df3, i32* %v18_3df3, align 4
  %v0_3df5 = load i32, i32* %edx.global-to-local, align 8
  %v1_3df5 = and i32 %v0_3df5, -65281
  %v2_3df5 = or i32 %v1_3df5, ptrtoint ([1850 x i8]* @global_var_c000.1802 to i32)
  store i32 %v2_3df5, i32* %edx.global-to-local, align 8
  %v0_3df7 = load i32, i32* %eax.global-to-local, align 4
  %v0_3dfb = load i32, i32* @ebp, align 4
  %v1_3dfb = add i32 %v0_3dfb, -44
  %v2_3dfb = inttoptr i32 %v1_3dfb to i32*
  %v3_3dfb = load i32, i32* %v2_3dfb, align 4
  store i32 %v3_3dfb, i32* %eax.global-to-local, align 4
  %v2_3e01 = inttoptr i32 %v3_3dfb to i32*
  %v3_3e01 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Eb(i32* %v2_3e01, i32 %v0_3df7)
  store i32 %v3_3e01, i32* %eax.global-to-local, align 4
  %v0_3e06 = load i32, i32* @ebp, align 4
  %v1_3e06 = add i32 %v0_3e06, -44
  %v2_3e06 = inttoptr i32 %v1_3e06 to i32*
  %v3_3e06 = load i32, i32* %v2_3e06, align 4
  store i32 %v3_3e06, i32* @eax, align 4
  %v1_3e09 = add i32 %v0_3e06, -12
  %v2_3e09 = inttoptr i32 %v1_3e09 to i32*
  %v3_3e09 = load i32, i32* %v2_3e09, align 4
  store i32 %v3_3e09, i32* %edx.global-to-local, align 8
  %v1_3e0c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3e0c = xor i32 %v1_3e0c, %v3_3e09
  %v3_3e0c = icmp eq i32 %v2_3e0c, 0
  store i32 %v2_3e0c, i32* %edx.global-to-local, align 8
  br i1 %v3_3e0c, label %bb, label %dec_label_pc_3e19

bb:                                               ; preds = %dec_label_pc_3df3
  %v1_3e13 = call i32 @function_3e9a()
  store i32 %v1_3e13, i32* @eax, align 4
  br label %dec_label_pc_3e19

dec_label_pc_3e19:                                ; preds = %bb, %dec_label_pc_3df3
  %v0_3e19 = call i32 @function_3e95()
  store i32 %v0_3e19, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e19

; uselistorder directives
  uselistorder i32 %tmp93, { 1, 0 }
}

define i32 @function_3e28() local_unnamed_addr {
dec_label_pc_3e28:
  %v0_3e28 = call i32 @function_3e2c()
  ret i32 %v0_3e28
}

define i32 @function_3e2a() local_unnamed_addr {
dec_label_pc_3e2a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e2a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e2a
}

define i32 @function_3e2c() local_unnamed_addr {
dec_label_pc_3e2c:
  %v0_3e2c = load i32, i32* @ebp, align 4
  %v1_3e2c = add i32 %v0_3e2c, -15
  ret i32 %v1_3e2c
}

define i32 @function_3e4a() local_unnamed_addr {
dec_label_pc_3e4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e4a
}

define i32 @function_3e56() local_unnamed_addr {
dec_label_pc_3e56:
  %v0_3e56 = call i32 @function_3e5a()
  ret i32 %v0_3e56
}

define i32 @function_3e58() local_unnamed_addr {
dec_label_pc_3e58:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e58 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e58
}

define i32 @function_3e5a() local_unnamed_addr {
dec_label_pc_3e5a:
  %v0_3e5a = load i32, i32* @ebp, align 4
  %v1_3e5a = add i32 %v0_3e5a, -14
  ret i32 %v1_3e5a
}

define i32 @function_3e70() local_unnamed_addr {
dec_label_pc_3e70:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e70 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e70
}

define i32 @function_3e7c() local_unnamed_addr {
dec_label_pc_3e7c:
  %v0_3e7c = call i32 @function_3e80()
  ret i32 %v0_3e7c
}

define i32 @function_3e7e() local_unnamed_addr {
dec_label_pc_3e7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e7e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3e7e
}

define i32 @function_3e80() local_unnamed_addr {
dec_label_pc_3e80:
  %v0_3e80 = load i32, i32* @ebp, align 4
  %v1_3e80 = add i32 %v0_3e80, -13
  ret i32 %v1_3e80
}

define i32 @function_3e95() local_unnamed_addr {
dec_label_pc_3e95:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3e9a() local_unnamed_addr {
dec_label_pc_3e9a:
  %v0_3ea0 = load i32, i32* @eax, align 4
  ret i32 %v0_3ea0
}

define void @__static_initialization_and_destruction_0(i32 %__initialize_p, i32 %__priority) local_unnamed_addr {
dec_label_pc_3ea3:
  %v0_3eb5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v13_3ec0 = icmp eq i32 %__initialize_p, 1
  %v1_3ec4 = icmp eq i1 %v13_3ec0, false
  br i1 %v1_3ec4, label %bb, label %dec_label_pc_3eca

bb:                                               ; preds = %dec_label_pc_3ea3
  %v4_3ec4 = call i32 @function_416d(i32 %__priority, i32 %__initialize_p)
  br label %dec_label_pc_3eca

dec_label_pc_3eca:                                ; preds = %bb, %dec_label_pc_3ea3
  %v13_3eca = icmp eq i32 %__priority, 65535
  %v1_3ed1 = icmp eq i1 %v13_3eca, false
  br i1 %v1_3ed1, label %bb9, label %dec_label_pc_3ed7

bb9:                                              ; preds = %dec_label_pc_3eca
  %v4_3ed1 = call i32 @function_416d(i32 %v0_3eb5, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_3ed7

dec_label_pc_3ed7:                                ; preds = %bb9, %dec_label_pc_3eca
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_416d, { 1, 0 }
  uselistorder i32 %__initialize_p, { 1, 0 }
}

define i32 @function_3fb1() local_unnamed_addr {
dec_label_pc_3fb1:
  %eax.global-to-local = alloca i32, align 4
  %v0_3fb1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3fb1
}

define i32 @function_3fbb() local_unnamed_addr {
dec_label_pc_3fbb:
  %eax.global-to-local = alloca i32, align 4
  %v0_3fbb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3fbb
}

define i32 @function_3fc5() local_unnamed_addr {
dec_label_pc_3fc5:
  %eax.global-to-local = alloca i32, align 4
  %v0_3fc5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3fc5
}

define i32 @function_4079() local_unnamed_addr {
dec_label_pc_4079:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4079 = load i32, i32* %eax.global-to-local, align 4
  %v2_4079 = load i32, i32* %ecx.global-to-local, align 4
  %v3_4079 = udiv i32 %v2_4079, 256
  %v5_4079 = add i32 %v3_4079, %v0_4079
  %v20_4079 = and i32 %v5_4079, 255
  %v22_4079 = and i32 %v0_4079, -256
  %v23_4079 = or i32 %v20_4079, %v22_4079
  store i32 %v23_4079, i32* %eax.global-to-local, align 4
  ret i32 %v23_4079

; uselistorder directives
  uselistorder i32 %v0_4079, { 1, 0 }
}

define i32 @function_40ea(i16 %arg1) local_unnamed_addr {
dec_label_pc_40ea:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_40ea = load i32, i32* %ebx.global-to-local, align 4
  %v3_40ea = load i32, i32* %eax.global-to-local, align 4
  %v5_40ea2 = mul i32 %v3_40ea, 256
  %v1_40ea3 = add i32 %v5_40ea2, %v0_40ea
  %v22_40ea = and i32 %v1_40ea3, 65280
  %v23_40ea = and i32 %v0_40ea, -65281
  %v24_40ea = or i32 %v22_40ea, %v23_40ea
  store i32 %v24_40ea, i32* %ebx.global-to-local, align 4
  %v2_40ec = add i32 %v3_40ea, 36
  %v16_40ec = and i32 %v2_40ec, 189
  %v18_40ec = and i32 %v3_40ea, 402652928
  %v19_40ec = or i32 %v18_40ec, %v16_40ec
  %v1_40ee = or i32 %v19_40ec, -402653118
  store i32 %v1_40ee, i32* %eax.global-to-local, align 4
  ret i32 %v1_40ee

; uselistorder directives
  uselistorder i32 %v1_40ee, { 1, 0 }
  uselistorder i32 %v3_40ea, { 2, 1, 0 }
  uselistorder i32 %v0_40ea, { 1, 0 }
}

define i32 @function_416d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_416d:
  %v0_416d = load i32, i32* @ebp, align 4
  %v1_416d = add i32 %v0_416d, -12
  %v2_416d = inttoptr i32 %v1_416d to i32*
  %v3_416d = load i32, i32* %v2_416d, align 4
  %v1_4170 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4170 = xor i32 %v1_4170, %v3_416d
  %v3_4170 = icmp eq i32 %v2_4170, 0
  store i32 %v2_4170, i32* @eax, align 4
  br i1 %v3_4170, label %bb, label %dec_label_pc_4179

bb:                                               ; preds = %dec_label_pc_416d
  %v1_4177 = call i32 @function_417e()
  br label %dec_label_pc_4179

dec_label_pc_4179:                                ; preds = %bb, %dec_label_pc_416d
  %v2_4177 = phi i32 [ %v1_4177, %bb ], [ %v2_4170, %dec_label_pc_416d ]
  ret i32 %v2_4177
}

define i32 @function_417e() local_unnamed_addr {
dec_label_pc_417e:
  %v0_417f = load i32, i32* @eax, align 4
  ret i32 %v0_417f
}

define void @_GLOBAL__sub_I__Z13GetDifficultyPK11CBlockIndexi() local_unnamed_addr {
dec_label_pc_4180:
  call void @__static_initialization_and_destruction_0(i32 1, i32 65535)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_41b1

bb:                                               ; preds = %dec_label_pc_4180
  %v1_41af = call i32 @function_41b6()
  br label %dec_label_pc_41b1

dec_label_pc_41b1:                                ; preds = %bb, %dec_label_pc_4180
  ret void

; uselistorder directives
  uselistorder i32 65535, { 1, 0 }
}

define i32 @function_41b6() local_unnamed_addr {
dec_label_pc_41b6:
  %v0_41b7 = load i32, i32* @eax, align 4
  ret i32 %v0_41b7
}

define i32 @_ZNSt9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_41d4:
  store i32 8, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4200

bb:                                               ; preds = %dec_label_pc_41d4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_41fe = call i32 @_ZN5boost6spirit7classicL5hex_pE(i32 %tmp100)
  br label %dec_label_pc_4200

dec_label_pc_4200:                                ; preds = %bb, %dec_label_pc_41d4
  %v3_41fe = phi i32 [ %v2_41fe, %bb ], [ 0, %dec_label_pc_41d4 ]
  ret i32 %v3_41fe

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classicL5hex_pE(i32 %arg1) local_unnamed_addr {
dec_label_pc_4205:
  %v0_4206 = load i32, i32* @eax, align 4
  ret i32 %v0_4206
}

define i32 @_ZNSt9bad_allocC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4208:
  store i32 %arg1, i32* @eax, align 4
  %v1_4225 = call i32 @function_83dc(i32 %arg1)
  ret i32 %arg1
}

define i32 @_ZnwjPv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4246:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4272

bb:                                               ; preds = %dec_label_pc_4246
  %v3_4270 = call i32 @function_4277(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_4272

dec_label_pc_4272:                                ; preds = %bb, %dec_label_pc_4246
  %v4_4270 = phi i32 [ %v3_4270, %bb ], [ %arg2, %dec_label_pc_4246 ]
  ret i32 %v4_4270
}

define i32 @function_4277(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4277:
  %v0_4278 = load i32, i32* @eax, align 4
  ret i32 %v0_4278
}

define i32 @_ZdlPvS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4279:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_42a2

bb:                                               ; preds = %dec_label_pc_4279
  %v3_42a0 = call i32 @function_42a7(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_42a2

dec_label_pc_42a2:                                ; preds = %bb, %dec_label_pc_4279
  %v4_42a0 = phi i32 [ %v3_42a0, %bb ], [ 0, %dec_label_pc_4279 ]
  ret i32 %v4_42a0
}

define i32 @function_42a7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_42a7:
  %v0_42a8 = load i32, i32* @eax, align 4
  ret i32 %v0_42a8
}

define i32 @_ZN9base_uintILj256EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_42aa:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_42cd

bb:                                               ; preds = %dec_label_pc_42aa
  %v2_42cb = call i32 @function_42d2(i32 %arg1)
  br label %dec_label_pc_42cd

dec_label_pc_42cd:                                ; preds = %bb, %dec_label_pc_42aa
  %v3_42cb = phi i32 [ %v2_42cb, %bb ], [ 0, %dec_label_pc_42aa ]
  ret i32 %v3_42cb
}

define i32 @function_42d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_42d2:
  %v0_42d3 = load i32, i32* @eax, align 4
  ret i32 %v0_42d3
}

define i32 @_ZN7uint256C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_42d4:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_42f1 = call i32 @function_857e(i32 %arg1)
  %v7_4314107 = and i32 %v1_42f1, -256
  %v8_4314108 = or i32 %v7_4314107, 1
  store i32 %v8_4314108, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_42ff

dec_label_pc_42ff:                                ; preds = %dec_label_pc_42d4, %dec_label_pc_42ff
  %storemerge109 = phi i32 [ 0, %dec_label_pc_42d4 ], [ %v4_430c, %dec_label_pc_42ff ]
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_4305 = mul nuw nsw i32 %storemerge109, 4
  %v3_4305 = add i32 %v2_4305, %arg1
  %v4_4305 = inttoptr i32 %v3_4305 to i32*
  store i32 0, i32* %v4_4305, align 4
  %v4_430c = add nuw nsw i32 %storemerge109, 1
  %v6_4314.pre = load i32, i32* %eax.global-to-local, align 4
  %tmp106 = sub nsw i32 5, %storemerge109
  %v11_4310 = and i32 %tmp106, %v4_430c
  %v12_4310 = icmp slt i32 %v11_4310, 0
  %v13_4310 = icmp eq i32 %v4_430c, 7
  %v14_4310 = icmp slt i32 %v4_430c, 7
  %v3_4314 = icmp ne i1 %v14_4310, %v12_4310
  %v4_4314 = or i1 %v13_4310, %v3_4314
  %v5_4314 = zext i1 %v4_4314 to i32
  %v7_4314 = and i32 %v6_4314.pre, -256
  %v8_4314 = or i32 %v5_4314, %v7_4314
  store i32 %v8_4314, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_430c, 8
  br i1 %exitcond, label %dec_label_pc_431b, label %dec_label_pc_42ff

dec_label_pc_431b:                                ; preds = %dec_label_pc_42ff
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge109, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 1, 5, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_42ff, { 1, 0 }
}

define i32 @_ZN7uint256C1Ey(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_432e:
  %eax.global-to-local = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp107, i32* @eax, align 4
  %v1_4357 = call i32 @function_85d8(i32 %tmp107)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v2_4373 = add i32 %tmp107, 4
  %v3_4373 = inttoptr i32 %v2_4373 to i32*
  store i32 %arg3, i32* %v3_4373, align 4
  %v6_4394111 = load i32, i32* %eax.global-to-local, align 4
  %v7_4394112 = and i32 %v6_4394111, -256
  %v8_4394113 = or i32 %v7_4394112, 1
  store i32 %v8_4394113, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_437f

dec_label_pc_437f:                                ; preds = %dec_label_pc_432e, %dec_label_pc_437f
  %storemerge114 = phi i32 [ 2, %dec_label_pc_432e ], [ %v4_438c, %dec_label_pc_437f ]
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v2_4385 = mul nuw nsw i32 %storemerge114, 4
  %v3_4385 = add i32 %v2_4385, %tmp107
  %v4_4385 = inttoptr i32 %v3_4385 to i32*
  store i32 0, i32* %v4_4385, align 4
  %v4_438c = add nuw nsw i32 %storemerge114, 1
  %tmp110 = sub nsw i32 5, %storemerge114
  %v11_4390 = and i32 %tmp110, %v4_438c
  %v12_4390 = icmp slt i32 %v11_4390, 0
  %v13_4390 = icmp eq i32 %v4_438c, 7
  %v14_4390 = icmp slt i32 %v4_438c, 7
  %v3_4394 = icmp ne i1 %v14_4390, %v12_4390
  %v4_4394 = or i1 %v13_4390, %v3_4394
  %v5_4394 = zext i1 %v4_4394 to i32
  %v6_4394 = load i32, i32* %eax.global-to-local, align 4
  %v7_4394 = and i32 %v6_4394, -256
  %v8_4394 = or i32 %v5_4394, %v7_4394
  store i32 %v8_4394, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_438c, 8
  br i1 %exitcond, label %dec_label_pc_439b, label %dec_label_pc_437f

dec_label_pc_439b:                                ; preds = %dec_label_pc_437f
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge114, { 0, 2, 1 }
  uselistorder i32 %tmp107, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 1, 7, 4, 5, 6 }
  uselistorder label %dec_label_pc_437f, { 1, 0 }
}

define i32 @_ZN7uint256aSEy(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_43ae:
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_43e8 = add i32 %tmp106, 4
  %v3_43e8 = inttoptr i32 %v2_43e8 to i32*
  store i32 %arg3, i32* %v3_43e8, align 4
  br label %dec_label_pc_43f4

dec_label_pc_43f4:                                ; preds = %dec_label_pc_43ae, %dec_label_pc_43f4
  %storemerge109 = phi i32 [ 2, %dec_label_pc_43ae ], [ %v4_4401, %dec_label_pc_43f4 ]
  %v2_43fa = mul nuw nsw i32 %storemerge109, 4
  %v3_43fa = add i32 %v2_43fa, %tmp106
  %v4_43fa = inttoptr i32 %v3_43fa to i32*
  store i32 0, i32* %v4_43fa, align 4
  %v4_4401 = add nuw nsw i32 %storemerge109, 1
  %exitcond = icmp eq i32 %v4_4401, 8
  br i1 %exitcond, label %dec_label_pc_4410, label %dec_label_pc_43f4

dec_label_pc_4410:                                ; preds = %dec_label_pc_43f4
  ret i32 %tmp106

; uselistorder directives
  uselistorder i32 %storemerge109, { 1, 0 }
  uselistorder i32 %tmp106, { 1, 0, 2 }
  uselistorder label %dec_label_pc_43f4, { 1, 0 }
}

define i32 @_ZN7uint256C1ERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4426:
  store i32 %arg1, i32* @eax, align 4
  %v1_4449 = call i32 @function_86d0(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v2_445b = call i32 @function_14a5c(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_446c

bb:                                               ; preds = %dec_label_pc_4426
  %v1_446a = call i32 @function_4471()
  br label %dec_label_pc_446c

dec_label_pc_446c:                                ; preds = %bb, %dec_label_pc_4426
  %v2_446a = phi i32 [ %v1_446a, %bb ], [ 0, %dec_label_pc_4426 ]
  ret i32 %v2_446a

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_4471() local_unnamed_addr {
dec_label_pc_4471:
  %v0_4472 = load i32, i32* @eax, align 4
  ret i32 %v0_4472
}

define i32 @_ZltRK7uint256S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4473:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i1 true, i1* @zf, align 1
  %v1_4493 = inttoptr i32 %arg2 to i32*
  %v2_4493 = load i32, i32* %v1_4493, align 4
  store i32 %v2_4493, i32* %stack_var_-48, align 4
  %v2_44c5 = load i32, i32* %arg1, align 4
  store i32 %v2_44c5, i32* %stack_var_-80, align 4
  %v4_44f7 = ptrtoint i32* %stack_var_-48 to i32
  %v2_44fb = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_44fb, i32* @eax, align 4
  %v2_4501 = call i32 @function_14af3(i32 %v2_44fb, i32 %v4_44f7)
  store i32 %v2_4501, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4512

bb:                                               ; preds = %dec_label_pc_4473
  %v1_4510 = call i32 @function_4517()
  br label %dec_label_pc_4512

dec_label_pc_4512:                                ; preds = %bb, %dec_label_pc_4473
  %v2_4510 = phi i32 [ %v1_4510, %bb ], [ %v2_4501, %dec_label_pc_4473 ]
  ret i32 %v2_4510
}

define i32 @function_4517() local_unnamed_addr {
dec_label_pc_4517:
  %v0_4518 = load i32, i32* @eax, align 4
  ret i32 %v0_4518
}

define i32 @_ZNSt14numeric_limitsItE3maxEv() local_unnamed_addr {
dec_label_pc_4519:
  %v0_451f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_453b

bb:                                               ; preds = %dec_label_pc_4519
  %v2_4539 = call i32 @function_4540(i32 %v0_451f)
  br label %dec_label_pc_453b

dec_label_pc_453b:                                ; preds = %bb, %dec_label_pc_4519
  %v3_4539 = phi i32 [ %v2_4539, %bb ], [ -1, %dec_label_pc_4519 ]
  ret i32 %v3_4539
}

define i32 @function_4540(i32 %arg1) local_unnamed_addr {
dec_label_pc_4540:
  %v0_4541 = load i32, i32* @eax, align 4
  ret i32 %v0_4541
}

define i32 @_ZNSt14numeric_limitsIjE3maxEv() local_unnamed_addr {
dec_label_pc_4542:
  %v0_4548 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_4564

bb:                                               ; preds = %dec_label_pc_4542
  %v2_4562 = call i32 @function_4569(i32 %v0_4548)
  br label %dec_label_pc_4564

dec_label_pc_4564:                                ; preds = %bb, %dec_label_pc_4542
  %v3_4562 = phi i32 [ %v2_4562, %bb ], [ -1, %dec_label_pc_4542 ]
  ret i32 %v3_4562
}

define i32 @function_4569(i32 %arg1) local_unnamed_addr {
dec_label_pc_4569:
  %v0_456a = load i32, i32* @eax, align 4
  ret i32 %v0_456a
}

define i32 @_ZStorSt12_Ios_IostateS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_456b:
  %v2_458e = or i32 %arg2, %arg1
  store i32 %v2_458e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_459c

bb:                                               ; preds = %dec_label_pc_456b
  %v3_459a = call i32 @function_45a1(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_459c

dec_label_pc_459c:                                ; preds = %bb, %dec_label_pc_456b
  %v4_459a = phi i32 [ %v3_459a, %bb ], [ %v2_458e, %dec_label_pc_456b ]
  ret i32 %v4_459a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_45a1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_45a1:
  %v0_45a2 = load i32, i32* @eax, align 4
  ret i32 %v0_45a2
}

define i32 @_ZN5boost12noncopyable_11noncopyableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_45a4:
  ret i32 0
}

define i32 @_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_45ce:
  %ebp.global-to-local = alloca i32, align 4
  %v0_45ce = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_45ce, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4606:
  %ebp.global-to-local = alloca i32, align 4
  %v0_4606 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_4606, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost10error_infoINS_11throw_line_EiEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_463e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_463e = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_463e, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_4676:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2b518.1804 to i32), i32* %arg1, align 4
  %v1_4699 = add i32 %tmp100, 4
  %v5_4699 = icmp ugt i32* %arg1, inttoptr (i32 -5 to i32*)
  store i1 %v5_4699, i1* @cf, align 1
  store i32 %v1_4699, i32* @eax, align 4
  %v1_469f = call i32 @function_14d7e(i32 %v1_4699)
  %v1_46a7 = add i32 %tmp100, 8
  %v2_46a7 = inttoptr i32 %v1_46a7 to i32*
  store i32 0, i32* %v2_46a7, align 4
  %v1_46b1 = add i32 %tmp100, 12
  %v2_46b1 = inttoptr i32 %v1_46b1 to i32*
  store i32 0, i32* %v2_46b1, align 4
  %v1_46bb = add i32 %tmp100, 16
  %v2_46bb = inttoptr i32 %v1_46bb to i32*
  store i32 -1, i32* %v2_46bb, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_46ce

bb:                                               ; preds = %dec_label_pc_4676
  %v1_46cc = call i32 @function_46d3()
  br label %dec_label_pc_46ce

dec_label_pc_46ce:                                ; preds = %bb, %dec_label_pc_4676
  %v2_46cc = phi i32 [ %v1_46cc, %bb ], [ 0, %dec_label_pc_4676 ]
  ret i32 %v2_46cc

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_46d3() local_unnamed_addr {
dec_label_pc_46d3:
  %v0_46d4 = load i32, i32* @eax, align 4
  ret i32 %v0_46d4
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_46d6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2b518.1804 to i32), i32* %arg1, align 4
  %v1_46f9 = add i32 %tmp99, 4
  store i32 %v1_46f9, i32* @eax, align 4
  %v1_46ff = call i32 @function_14e12(i32 %v1_46f9)
  %v1_470e = call i32 @function_4732()
  ret i32 %tmp99
}

define i32 @function_471b() local_unnamed_addr {
dec_label_pc_471b:
  %v0_471b = call i32 @function_4732()
  ret i32 %v0_471b

; uselistorder directives
  uselistorder i32 ()* @function_4732, { 1, 0 }
}

define i32 @function_4732() local_unnamed_addr {
dec_label_pc_4732:
  %v0_4732 = load i32, i32* @ebp, align 4
  %v1_4732 = add i32 %v0_4732, -12
  %v2_4732 = inttoptr i32 %v1_4732 to i32*
  %v3_4732 = load i32, i32* %v2_4732, align 4
  %v1_4735 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_4735 = xor i32 %v1_4735, %v3_4732
  %v3_4735 = icmp eq i32 %v2_4735, 0
  store i32 %v2_4735, i32* @eax, align 4
  br i1 %v3_4735, label %bb, label %dec_label_pc_473e

bb:                                               ; preds = %dec_label_pc_4732
  %v1_473c = call i32 @function_4743()
  br label %dec_label_pc_473e

dec_label_pc_473e:                                ; preds = %bb, %dec_label_pc_4732
  %v2_473c = phi i32 [ %v1_473c, %bb ], [ %v2_4735, %dec_label_pc_4732 ]
  ret i32 %v2_473c
}

define i32 @function_4743() local_unnamed_addr {
dec_label_pc_4743:
  %v0_4744 = load i32, i32* @eax, align 4
  ret i32 %v0_4744
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_56c4:
  store i32 %arg1, i32* @eax, align 4
  %v1_56e1 = call i32 @function_9d9a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_5701() local_unnamed_addr {
dec_label_pc_5701:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5701 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5701 = add i32 %v0_5701, -1
  store i32 %v1_5701, i32* %ecx.global-to-local, align 4
  %v0_5703 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5703
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_5704:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2b500.1805 to i32), i32* %arg1, align 4
  %v2_572e = call i32 @function_573b(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_573b(i32 %arg1) local_unnamed_addr {
dec_label_pc_573b:
  %v0_573b = load i32, i32* @ebp, align 4
  %v1_573b = add i32 %v0_573b, -12
  %v2_573b = inttoptr i32 %v1_573b to i32*
  %v3_573b = load i32, i32* %v2_573b, align 4
  %v1_573e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_573e = xor i32 %v1_573e, %v3_573b
  %v3_573e = icmp eq i32 %v2_573e, 0
  store i32 %v2_573e, i32* @eax, align 4
  br i1 %v3_573e, label %bb, label %dec_label_pc_5747

bb:                                               ; preds = %dec_label_pc_573b
  %v1_5745 = call i32 @function_574c()
  br label %dec_label_pc_5747

dec_label_pc_5747:                                ; preds = %bb, %dec_label_pc_573b
  %v2_5745 = phi i32 [ %v1_5745, %bb ], [ %v2_573e, %dec_label_pc_573b ]
  ret i32 %v2_5745
}

define i32 @function_574c() local_unnamed_addr {
dec_label_pc_574c:
  %v0_574d = load i32, i32* @eax, align 4
  ret i32 %v0_574d
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_574e:
  store i32 %arg1, i32* @eax, align 4
  %v1_576b = call i32 @function_ae52(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_578b() local_unnamed_addr {
dec_label_pc_578b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_578b = load i32, i32* %ecx.global-to-local, align 4
  %v1_578b = add i32 %v0_578b, -1
  store i32 %v1_578b, i32* %ecx.global-to-local, align 4
  %v0_578d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_578d
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_578e:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v2_57ac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_57ac, i32* @eax, align 4
  store i32 %v2_57ac, i32* %stack_var_-60, align 4
  %v1_57b2 = call i32 @function_15e96(i32 %v2_57ac)
  %v1_57ba = add i32 %arg2, 4
  store i32 %v1_57ba, i32* @eax, align 4
  store i32 %v1_57ba, i32* %stack_var_-60, align 4
  %v1_57c0 = call i32 @function_15f00(i32 %v1_57ba)
  %v10_57c8 = icmp eq i32 %v1_57c0, 0
  br i1 %v10_57c8, label %dec_label_pc_5807, label %dec_label_pc_57ce

dec_label_pc_57ce:                                ; preds = %dec_label_pc_578e
  %v2_57d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_57c0, i32* %edx.global-to-local, align 8
  store i32 %v2_57d8, i32* %stack_var_-60, align 4
  store i32 %v2_57ac, i32* @eax, align 4
  store i32 %v2_57ac, i32* %stack_var_-64, align 4
  %v3_57f7 = call i32 @function_15f30(i32 %v2_57ac, i32 %v2_57d8, i32 %v1_57c0)
  store i32 %v2_57d8, i32* @eax, align 4
  store i32 %v2_57d8, i32* %stack_var_-64, align 4
  %v1_5802 = call i32 @function_15eca(i32 %v2_57d8)
  br label %dec_label_pc_5807

dec_label_pc_5807:                                ; preds = %dec_label_pc_57ce, %dec_label_pc_578e
  %stack_var_-56.0 = phi i32 [ %tmp97, %dec_label_pc_578e ], [ %v1_57c0, %dec_label_pc_57ce ]
  %v1_580a = add i32 %arg2, 12
  %v2_580a = inttoptr i32 %v1_580a to i32*
  %v3_580a = load i32, i32* %v2_580a, align 4
  store i32 %v3_580a, i32* %edx.global-to-local, align 8
  %v2_5810 = add i32 %arg1, 12
  %v3_5810 = inttoptr i32 %v2_5810 to i32*
  store i32 %v3_580a, i32* %v3_5810, align 4
  %v1_5816 = add i32 %arg2, 16
  %v2_5816 = inttoptr i32 %v1_5816 to i32*
  %v3_5816 = load i32, i32* %v2_5816, align 4
  store i32 %v3_5816, i32* %edx.global-to-local, align 8
  %v2_581c = add i32 %arg1, 16
  %v3_581c = inttoptr i32 %v2_581c to i32*
  store i32 %v3_5816, i32* %v3_581c, align 4
  %v1_5822 = add i32 %arg2, 8
  %v2_5822 = inttoptr i32 %v1_5822 to i32*
  %v3_5822 = load i32, i32* %v2_5822, align 4
  %v2_5828 = add i32 %arg1, 8
  %v3_5828 = inttoptr i32 %v2_5828 to i32*
  store i32 %v3_5822, i32* %v3_5828, align 4
  %v1_582e = add i32 %arg1, 4
  store i32 %v1_582e, i32* %edx.global-to-local, align 8
  store i32 %v2_57ac, i32* @eax, align 4
  %v1_5834 = load i32, i32* @esp, align 4
  %v2_5834 = add i32 %v1_5834, 4
  %v3_5834 = inttoptr i32 %v2_5834 to i32*
  store i32 %v2_57ac, i32* %v3_5834, align 4
  %v0_5838 = load i32, i32* %edx.global-to-local, align 8
  %v1_5838 = load i32, i32* @esp, align 4
  %v2_5838 = inttoptr i32 %v1_5838 to i32*
  store i32 %v0_5838, i32* %v2_5838, align 4
  %v0_583b = load i32, i32* %stack_var_-64, align 4
  %v1_583b = load i32, i32* %stack_var_-60, align 4
  %v3_583b = call i32 @function_15f30(i32 %v0_583b, i32 %v1_583b, i32 %stack_var_-56.0)
  store i32 %v2_57ac, i32* @eax, align 4
  %v1_5843 = load i32, i32* @esp, align 4
  %v2_5843 = inttoptr i32 %v1_5843 to i32*
  store i32 %v2_57ac, i32* %v2_5843, align 4
  %v0_5846 = load i32, i32* %stack_var_-64, align 4
  %v1_5846 = call i32 @function_15eca(i32 %v0_5846)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5857

bb:                                               ; preds = %dec_label_pc_5807
  %v1_5855 = call i32 @function_5884()
  store i32 %v1_5855, i32* @eax, align 4
  br label %dec_label_pc_5857

dec_label_pc_5857:                                ; preds = %bb, %dec_label_pc_5807
  %v0_5857 = call i32 @function_587f()
  ret i32 %v0_5857

; uselistorder directives
  uselistorder i32 %v2_57d8, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_57ac, { 3, 4, 5, 6, 1, 0, 2, 8, 7, 9 }
  uselistorder i32 (i32, i32, i32)* @function_15f30, { 1, 0 }
}

define i32 @function_5859() local_unnamed_addr {
dec_label_pc_5859:
  %eax.global-to-local = alloca i32, align 4
  %v0_5859 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5859, i32* @ebx, align 4
  %v0_585b = load i32, i32* @ebp, align 4
  %v1_585b = add i32 %v0_585b, -20
  store i32 %v1_585b, i32* @eax, align 4
  %v1_5861 = call i32 @function_15eca(i32 %v1_585b)
  store i32 %v1_5861, i32* %eax.global-to-local, align 4
  %v0_5866 = call i32 @function_586a()
  store i32 %v0_5866, i32* %eax.global-to-local, align 4
  ret i32 %v0_5866
}

define i32 @function_5868() local_unnamed_addr {
dec_label_pc_5868:
  %eax.global-to-local = alloca i32, align 4
  %v0_5868 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5868
}

define i32 @function_586a() local_unnamed_addr {
dec_label_pc_586a:
  %v0_586a = load i32, i32* @ebp, align 4
  %v1_586a = add i32 %v0_586a, -24
  store i32 %v1_586a, i32* @eax, align 4
  %v1_5870 = call i32 @function_15eca(i32 %v1_586a)
  %v0_5875 = load i32, i32* @ebx, align 4
  ret i32 %v0_5875

; uselistorder directives
  uselistorder i32 (i32)* @function_15eca, { 3, 2, 1, 0 }
}

define i32 @function_587f() local_unnamed_addr {
dec_label_pc_587f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5884() local_unnamed_addr {
dec_label_pc_5884:
  %v0_5888 = load i32, i32* @eax, align 4
  ret i32 %v0_5888
}

define i32 @_ZN5boost36throw_exception_assert_compatibilityERKSt9exception(i32 %arg1) local_unnamed_addr {
dec_label_pc_5889:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_58ac

bb:                                               ; preds = %dec_label_pc_5889
  %v2_58aa = call i32 @function_58b1(i32 %arg1)
  br label %dec_label_pc_58ac

dec_label_pc_58ac:                                ; preds = %bb, %dec_label_pc_5889
  %v3_58aa = phi i32 [ %v2_58aa, %bb ], [ 0, %dec_label_pc_5889 ]
  ret i32 %v3_58aa
}

define i32 @function_58b1(i32 %arg1) local_unnamed_addr {
dec_label_pc_58b1:
  %v0_58b2 = load i32, i32* @eax, align 4
  ret i32 %v0_58b2
}

define i32 @_ZN5boost16thread_exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_58b4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_58d1 = call i32 @function_9a88(i32 %tmp100)
  store i32 ptrtoint (%vtable_2b4e8_type* @global_var_2b4e8.1806 to i32), i32* %arg1, align 4
  %v1_58e2 = add i32 %tmp100, 4
  %v2_58e2 = inttoptr i32 %v1_58e2 to i32*
  store i32 0, i32* %v2_58e2, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_58f5

bb:                                               ; preds = %dec_label_pc_58b4
  %v1_58f3 = call i32 @function_58fa()
  br label %dec_label_pc_58f5

dec_label_pc_58f5:                                ; preds = %bb, %dec_label_pc_58b4
  %v2_58f3 = phi i32 [ %v1_58f3, %bb ], [ 0, %dec_label_pc_58b4 ]
  ret i32 %v2_58f3

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_58fa() local_unnamed_addr {
dec_label_pc_58fa:
  %v0_58fb = load i32, i32* @eax, align 4
  ret i32 %v0_58fb
}

define i32 @_ZN5boost16thread_exceptionD1Ev(i32* %arg1) {
dec_label_pc_58fc:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b4e8_type* @global_var_2b4e8.1806 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_594e() local_unnamed_addr {
dec_label_pc_594e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_594e = load i32, i32* %ecx.global-to-local, align 4
  %v1_594e = add i32 %v0_594e, -1
  store i32 %v1_594e, i32* %ecx.global-to-local, align 4
  %v0_5950 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5950
}

define i32 @_ZN5boost16thread_exceptionD0Ev(i32 %arg1) {
dec_label_pc_5952:
  store i32 %arg1, i32* @eax, align 4
  %v1_596f = call i32 @function_b24e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_598f() local_unnamed_addr {
dec_label_pc_598f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_598f = load i32, i32* %ecx.global-to-local, align 4
  %v1_598f = add i32 %v0_598f, -1
  store i32 %v1_598f, i32* %ecx.global-to-local, align 4
  %v0_5991 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5991
}

define i32 @_ZN5boost10lock_errorC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_5992:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_59af = call i32 @function_b246(i32 %tmp100)
  store i32 ptrtoint (%vtable_2b4d0_type* @global_var_2b4d0.1807 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_59c9

bb:                                               ; preds = %dec_label_pc_5992
  %v1_59c7 = call i32 @function_59ce()
  br label %dec_label_pc_59c9

dec_label_pc_59c9:                                ; preds = %bb, %dec_label_pc_5992
  %v2_59c7 = phi i32 [ %v1_59c7, %bb ], [ 0, %dec_label_pc_5992 ]
  ret i32 %v2_59c7

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_59ce() local_unnamed_addr {
dec_label_pc_59ce:
  %v0_59cf = load i32, i32* @eax, align 4
  ret i32 %v0_59cf
}

define i32 @_ZN5boost10lock_errorD1Ev(i32* %arg1) {
dec_label_pc_59d0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b4d0_type* @global_var_2b4d0.1807 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 4
  %v1_59f6 = call i32 @function_b2cc(i32 %tmp99)
  %v1_5a05 = call i32 @function_5a12()
  ret i32 %tmp99
}

define i32 @function_5a12() local_unnamed_addr {
dec_label_pc_5a12:
  %v0_5a12 = load i32, i32* @ebp, align 4
  %v1_5a12 = add i32 %v0_5a12, -12
  %v2_5a12 = inttoptr i32 %v1_5a12 to i32*
  %v3_5a12 = load i32, i32* %v2_5a12, align 4
  %v1_5a15 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_5a15 = xor i32 %v1_5a15, %v3_5a12
  %v3_5a15 = icmp eq i32 %v2_5a15, 0
  store i32 %v2_5a15, i32* @eax, align 4
  br i1 %v3_5a15, label %bb, label %dec_label_pc_5a1e

bb:                                               ; preds = %dec_label_pc_5a12
  %v1_5a1c = call i32 @function_5a23()
  br label %dec_label_pc_5a1e

dec_label_pc_5a1e:                                ; preds = %bb, %dec_label_pc_5a12
  %v2_5a1c = phi i32 [ %v1_5a1c, %bb ], [ %v2_5a15, %dec_label_pc_5a12 ]
  ret i32 %v2_5a1c
}

define i32 @function_5a23() local_unnamed_addr {
dec_label_pc_5a23:
  %v0_5a24 = load i32, i32* @eax, align 4
  ret i32 %v0_5a24
}

define i32 @_ZN5boost10lock_errorD0Ev(i32 %arg1) {
dec_label_pc_5a26:
  store i32 %arg1, i32* @eax, align 4
  %v1_5a43 = call i32 @function_b3f6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_5a63() local_unnamed_addr {
dec_label_pc_5a63:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5a63 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5a63 = add i32 %v0_5a63, -1
  store i32 %v1_5a63, i32* %ecx.global-to-local, align 4
  %v0_5a65 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5a65
}

define i32 @function_83dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_83dc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_857e(i32 %arg1) local_unnamed_addr {
dec_label_pc_857e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_85d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_85d8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_86d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_86d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9a88(i32 %arg1) local_unnamed_addr {
dec_label_pc_9a88:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9d9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_9d9a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ae52(i32 %arg1) local_unnamed_addr {
dec_label_pc_ae52:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b246(i32 %arg1) local_unnamed_addr {
dec_label_pc_b246:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b24e(i32 %arg1) local_unnamed_addr {
dec_label_pc_b24e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b2cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_b2cc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b3f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_b3f6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNK5boost10lock_error4whatEv(i32 %arg1) {
dec_label_pc_d274:
  ret i32 ptrtoint ([18 x i8]* @global_var_5a68.1808 to i32)
}

define i32 @_ZN5boost6detail23atomic_exchange_and_addEPii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d2a3:
  %v2_d2cc = load i32, i32* %arg1, align 4
  %v4_d2cc = add i32 %v2_d2cc, %arg2
  store i32 %v4_d2cc, i32* %arg1, align 4
  store i32 %v2_d2cc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d2e2

bb:                                               ; preds = %dec_label_pc_d2a3
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_d2e0 = call i32 @function_d2e7(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_d2e2

dec_label_pc_d2e2:                                ; preds = %bb, %dec_label_pc_d2a3
  %v4_d2e0 = phi i32 [ %v3_d2e0, %bb ], [ %v2_d2cc, %dec_label_pc_d2a3 ]
  ret i32 %v4_d2e0

; uselistorder directives
  uselistorder i32 %v2_d2cc, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_d2e7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d2e7:
  %v0_d2ec = load i32, i32* @eax, align 4
  ret i32 %v0_d2ec
}

define i32 @_ZN5boost6detail16atomic_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_d2ed:
  %v2_d30a = load i32, i32* %arg1, align 4
  %v3_d30a = add i32 %v2_d30a, 1
  store i32 %v3_d30a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d319

bb:                                               ; preds = %dec_label_pc_d2ed
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_d317 = call i32 @function_d31e(i32 %tmp100)
  br label %dec_label_pc_d319

dec_label_pc_d319:                                ; preds = %bb, %dec_label_pc_d2ed
  %v3_d317 = phi i32 [ %v2_d317, %bb ], [ 0, %dec_label_pc_d2ed ]
  ret i32 %v3_d317

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_d31e(i32 %arg1) local_unnamed_addr {
dec_label_pc_d31e:
  %v0_d31f = load i32, i32* @eax, align 4
  ret i32 %v0_d31f
}

define i32 @_ZN5boost6detail15sp_counted_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_d320:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2b4b0.1809 to i32), i32* %arg1, align 4
  %v1_d343 = add i32 %tmp100, 4
  %v2_d343 = inttoptr i32 %v1_d343 to i32*
  store i32 1, i32* %v2_d343, align 4
  %v1_d34d = add i32 %tmp100, 8
  %v2_d34d = inttoptr i32 %v1_d34d to i32*
  store i32 1, i32* %v2_d34d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d360

bb:                                               ; preds = %dec_label_pc_d320
  %v2_d35e = call i32 @function_d365(i32 %tmp100)
  br label %dec_label_pc_d360

dec_label_pc_d360:                                ; preds = %bb, %dec_label_pc_d320
  %v3_d35e = phi i32 [ %v2_d35e, %bb ], [ 0, %dec_label_pc_d320 ]
  ret i32 %v3_d35e
}

define i32 @function_d365(i32 %arg1) local_unnamed_addr {
dec_label_pc_d365:
  %v0_d366 = load i32, i32* @eax, align 4
  ret i32 %v0_d366
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_d368:
  store i32 ptrtoint (i32* @global_var_2b4b0.1809 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d3ab

bb:                                               ; preds = %dec_label_pc_d368
  %v1_d3a9 = call i32 @function_d3b0()
  br label %dec_label_pc_d3ab

dec_label_pc_d3ab:                                ; preds = %bb, %dec_label_pc_d368
  %v2_d3a9 = phi i32 [ %v1_d3a9, %bb ], [ 0, %dec_label_pc_d368 ]
  ret i32 %v2_d3a9
}

define i32 @function_d3b0() local_unnamed_addr {
dec_label_pc_d3b0:
  %v0_d3b1 = load i32, i32* @eax, align 4
  ret i32 %v0_d3b1
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_d3b2:
  store i32 %arg1, i32* @eax, align 4
  %v1_d3cf = call i32 @function_1a71a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_d3ef() local_unnamed_addr {
dec_label_pc_d3ef:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_d3ef = load i32, i32* %ecx.global-to-local, align 4
  %v1_d3ef = add i32 %v0_d3ef, -1
  store i32 %v1_d3ef, i32* %ecx.global-to-local, align 4
  %v0_d3f1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d3f1
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_d3f2:
  %ebp.global-to-local = alloca i32, align 4
  %v0_d3f2 = load i32, i32* %ebp.global-to-local, align 4
  %v10_d409 = icmp eq i32* %arg1, null
  br i1 %v10_d409, label %dec_label_pc_d421, label %dec_label_pc_d40f

dec_label_pc_d40f:                                ; preds = %dec_label_pc_d3f2
  br label %dec_label_pc_d421

dec_label_pc_d421:                                ; preds = %dec_label_pc_d40f, %dec_label_pc_d3f2
  store i32 %v0_d3f2, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_copyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_d434:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d465

bb:                                               ; preds = %dec_label_pc_d434
  %v1_d44e = add i32 %arg1, 4
  %v2_d463 = call i32 @function_d46a(i32 %v1_d44e)
  br label %dec_label_pc_d465

dec_label_pc_d465:                                ; preds = %bb, %dec_label_pc_d434
  %v3_d463 = phi i32 [ %v2_d463, %bb ], [ 0, %dec_label_pc_d434 ]
  ret i32 %v3_d463
}

define i32 @function_d46a(i32 %arg1) local_unnamed_addr {
dec_label_pc_d46a:
  %v0_d46b = load i32, i32* @eax, align 4
  ret i32 %v0_d46b
}

define i32 @_ZN5boost6detail15sp_counted_base7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_d46c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_d486 = add i32 %tmp102, 4
  %v2_d494 = call i32 @function_1a70f(i32 %v1_d486, i32 -1)
  %v10_d499 = icmp eq i32 %v2_d494, 1
  %v5_d49f = icmp eq i1 %v10_d499, false
  br i1 %v5_d49f, label %dec_label_pc_d4c0, label %dec_label_pc_d4a3

dec_label_pc_d4a3:                                ; preds = %dec_label_pc_d46c
  store i32 %tmp102, i32* @eax, align 4
  %v1_d4bb = call i32 @function_1a940(i32 %tmp102)
  br label %dec_label_pc_d4c0

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4a3, %dec_label_pc_d46c
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d4cc

bb:                                               ; preds = %dec_label_pc_d4c0
  %v1_d4ca = call i32 @function_d4d1()
  br label %dec_label_pc_d4cc

dec_label_pc_d4cc:                                ; preds = %bb, %dec_label_pc_d4c0
  %v2_d4ca = phi i32 [ %v1_d4ca, %bb ], [ 0, %dec_label_pc_d4c0 ]
  ret i32 %v2_d4ca

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0, 2 }
}

define i32 @function_d4d1() local_unnamed_addr {
dec_label_pc_d4d1:
  %v0_d4d2 = load i32, i32* @eax, align 4
  ret i32 %v0_d4d2
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_d4d4:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_d4ee = add i32 %tmp102, 8
  store i32 %v1_d4ee, i32* @eax, align 4
  %v2_d4fc = call i32 @function_1a777(i32 %v1_d4ee, i32 -1)
  %v10_d501 = icmp eq i32 %v2_d4fc, 1
  %v5_d507 = icmp eq i1 %v10_d501, false
  br i1 %v5_d507, label %dec_label_pc_d51d, label %dec_label_pc_d50b

dec_label_pc_d50b:                                ; preds = %dec_label_pc_d4d4
  br label %dec_label_pc_d51d

dec_label_pc_d51d:                                ; preds = %dec_label_pc_d50b, %dec_label_pc_d4d4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d529

bb:                                               ; preds = %dec_label_pc_d51d
  %v1_d527 = call i32 @function_d52e()
  br label %dec_label_pc_d529

dec_label_pc_d529:                                ; preds = %bb, %dec_label_pc_d51d
  %v2_d527 = phi i32 [ %v1_d527, %bb ], [ 0, %dec_label_pc_d51d ]
  ret i32 %v2_d527
}

define i32 @function_d52e() local_unnamed_addr {
dec_label_pc_d52e:
  %v0_d52f = load i32, i32* @eax, align 4
  ret i32 %v0_d52f
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_d530:
  %v2_d54a = load i32, i32* %arg1, align 4
  %v1_d54c = icmp eq i32 %v2_d54a, 0
  br i1 %v1_d54c, label %dec_label_pc_d55d, label %dec_label_pc_d550

dec_label_pc_d550:                                ; preds = %dec_label_pc_d530
  br label %dec_label_pc_d55d

dec_label_pc_d55d:                                ; preds = %dec_label_pc_d550, %dec_label_pc_d530
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d569

bb:                                               ; preds = %dec_label_pc_d55d
  %v1_d567 = call i32 @function_d56e()
  br label %dec_label_pc_d569

dec_label_pc_d569:                                ; preds = %bb, %dec_label_pc_d55d
  %v2_d567 = phi i32 [ %v1_d567, %bb ], [ 0, %dec_label_pc_d55d ]
  ret i32 %v2_d567
}

define i32 @function_d56e() local_unnamed_addr {
dec_label_pc_d56e:
  %v0_d56f = load i32, i32* @eax, align 4
  ret i32 %v0_d56f
}

define i32 @_ZN5boost6detail12shared_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d570:
  %v1_d590 = inttoptr i32 %arg2 to i32*
  %v2_d590 = load i32, i32* %v1_d590, align 4
  store i32 %v2_d590, i32* %arg1, align 4
  %v1_d59c = icmp eq i32 %v2_d590, 0
  br i1 %v1_d59c, label %dec_label_pc_d5ad, label %dec_label_pc_d5a0

dec_label_pc_d5a0:                                ; preds = %dec_label_pc_d570
  %v2_d5a3 = load i32, i32* %arg1, align 4
  store i32 %v2_d5a3, i32* @eax, align 4
  %v1_d5a8 = call i32 @function_1a9a4(i32 %v2_d5a3)
  br label %dec_label_pc_d5ad

dec_label_pc_d5ad:                                ; preds = %dec_label_pc_d5a0, %dec_label_pc_d570
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d5b9

bb:                                               ; preds = %dec_label_pc_d5ad
  %v1_d5b7 = call i32 @function_d5be()
  br label %dec_label_pc_d5b9

dec_label_pc_d5b9:                                ; preds = %bb, %dec_label_pc_d5ad
  %v2_d5b7 = phi i32 [ %v1_d5b7, %bb ], [ 0, %dec_label_pc_d5ad ]
  ret i32 %v2_d5b7
}

define i32 @function_d5be() local_unnamed_addr {
dec_label_pc_d5be:
  %v0_d5bf = load i32, i32* @eax, align 4
  ret i32 %v0_d5bf
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisEz() local_unnamed_addr {
dec_label_pc_d5c0:
  %v0_d5c6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d5dd

bb:                                               ; preds = %dec_label_pc_d5c0
  %v2_d5db = call i32 @function_d5e2(i32 %v0_d5c6)
  br label %dec_label_pc_d5dd

dec_label_pc_d5dd:                                ; preds = %bb, %dec_label_pc_d5c0
  %v3_d5db = phi i32 [ %v2_d5db, %bb ], [ 0, %dec_label_pc_d5c0 ]
  ret i32 %v3_d5db
}

define i32 @function_d5e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_d5e2:
  %v0_d5e3 = load i32, i32* @eax, align 4
  ret i32 %v0_d5e3
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC1EP15pthread_mutex_t(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d5e4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_d60c = add i32 %tmp101, 4
  %v2_d60c = inttoptr i32 %v1_d60c to i8*
  store i8 1, i8* %v2_d60c, align 1
  %v2_d613 = load i32, i32* %arg1, align 4
  ret i32 %v2_d613
}

define i32 @function_d644() local_unnamed_addr {
dec_label_pc_d644:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_d644 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d644 = add i32 %v0_d644, 862319685
  %v2_d644 = inttoptr i32 %v1_d644 to i32*
  %v3_d644 = load i32, i32* %v2_d644, align 4
  %v4_d644 = add i32 %v3_d644, -1
  store i32 %v4_d644, i32* %v2_d644, align 4
  %v0_d64a = load i32, i32* %eax.global-to-local, align 4
  %v1_d64a = add i32 %v0_d64a, 20
  store i32 %v1_d64a, i32* %eax.global-to-local, align 4
  ret i32 %v1_d64a
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lock6unlockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_d658:
  %v2_d672 = load i32, i32* %arg1, align 4
  ret i32 %v2_d672
}

define i32 @function_d6bb() local_unnamed_addr {
dec_label_pc_d6bb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_d6bb = load i32, i32* %ecx.global-to-local, align 4
  %v1_d6bb = add i32 %v0_d6bb, -1
  store i32 %v1_d6bb, i32* %ecx.global-to-local, align 4
  %v0_d6bd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d6bd
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_d6be:
  %v1_d6d8 = add i32 %arg1, 4
  %v2_d6d8 = inttoptr i32 %v1_d6d8 to i8*
  %v3_d6d8 = load i8, i8* %v2_d6d8, align 1
  %v5_d6dc = icmp eq i8 %v3_d6d8, 0
  store i1 %v5_d6dc, i1* @zf, align 1
  br i1 %v5_d6dc, label %dec_label_pc_d6eb, label %dec_label_pc_d6e0

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d6be
  store i32 %arg1, i32* @eax, align 4
  %v1_d6e6 = call i32 @function_1ad16(i32 %arg1)
  br label %dec_label_pc_d6eb

dec_label_pc_d6eb:                                ; preds = %dec_label_pc_d6e0, %dec_label_pc_d6be
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d6f7

bb:                                               ; preds = %dec_label_pc_d6eb
  %v1_d6f5 = call i32 @function_d6fc()
  br label %dec_label_pc_d6f7

dec_label_pc_d6f7:                                ; preds = %bb, %dec_label_pc_d6eb
  %v2_d6f5 = phi i32 [ %v1_d6f5, %bb ], [ 0, %dec_label_pc_d6eb ]
  ret i32 %v2_d6f5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_d6fc() local_unnamed_addr {
dec_label_pc_d6fc:
  %v0_d6fd = load i32, i32* @eax, align 4
  ret i32 %v0_d6fd
}

define i32 @_Z16GetSerializeSizeiii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d6fe:
  ret i32 4
}

define i32 @_Z16GetSerializeSizejii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d739:
  store i32 4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d76d

bb:                                               ; preds = %dec_label_pc_d739
  %v4_d76b = call i32 @function_d772(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_d76d

dec_label_pc_d76d:                                ; preds = %bb, %dec_label_pc_d739
  %v5_d76b = phi i32 [ %v4_d76b, %bb ], [ 4, %dec_label_pc_d739 ]
  ret i32 %v5_d76b
}

define i32 @function_d772(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d772:
  %v0_d773 = load i32, i32* @eax, align 4
  ret i32 %v0_d773
}

define i32 @_Z16GetSerializeSizexii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d774:
  store i32 8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d7ae

bb:                                               ; preds = %dec_label_pc_d774
  %v5_d7ac = call i32 @function_d7b3(i32 %arg4, i32 %arg3, i32 %arg1, i32 %arg2)
  br label %dec_label_pc_d7ae

dec_label_pc_d7ae:                                ; preds = %bb, %dec_label_pc_d774
  %v6_d7ac = phi i32 [ %v5_d7ac, %bb ], [ 8, %dec_label_pc_d774 ]
  ret i32 %v6_d7ac
}

define i32 @function_d7b3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d7b3:
  %v0_d7b4 = load i32, i32* @eax, align 4
  ret i32 %v0_d7b4
}

define i32 @_Z20GetSizeOfCompactSizey(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d7b5:
  store i32 0, i32* @eax, align 4
  store i1 false, i1* @cf, align 1
  %v10_d7d2 = icmp eq i32 %arg2, 0
  br i1 %v10_d7d2, label %dec_label_pc_d7d8, label %dec_label_pc_d807

dec_label_pc_d7d8:                                ; preds = %dec_label_pc_d7b5
  %v8_d7de = icmp ult i32 %arg1, 252
  store i1 %v8_d7de, i1* @cf, align 1
  %tmp110 = icmp ult i32 %arg1, 253
  br i1 %tmp110, label %dec_label_pc_d7e7, label %dec_label_pc_d807

dec_label_pc_d7e7:                                ; preds = %dec_label_pc_d7d8
  store i32 1, i32* @eax, align 4
  br label %dec_label_pc_d854

dec_label_pc_d807:                                ; preds = %dec_label_pc_d7b5, %dec_label_pc_d7d8
  %v0_d7ee = call i32 @function_11cce()
  %v1_d7f5 = urem i32 %v0_d7ee, 65536
  store i32 %v1_d7f5, i32* @eax, align 4
  store i32 0, i32* @edx, align 8
  %v10_d807 = icmp ne i32 %arg2, 0
  br i1 %v10_d807, label %dec_label_pc_d821, label %dec_label_pc_d80c

dec_label_pc_d80c:                                ; preds = %dec_label_pc_d807
  %v10_d80c = icmp ult i32 %v1_d7f5, %arg1
  %v1_d80f = icmp eq i1 %v10_d80c, false
  br i1 %v1_d80f, label %dec_label_pc_d81a, label %dec_label_pc_d821

dec_label_pc_d81a:                                ; preds = %dec_label_pc_d80c
  store i32 3, i32* @eax, align 4
  br label %dec_label_pc_d854

dec_label_pc_d821:                                ; preds = %dec_label_pc_d807, %dec_label_pc_d80c
  %v0_d821 = call i32 @function_11cf7()
  br i1 %v10_d807, label %dec_label_pc_d84f, label %dec_label_pc_d83a

dec_label_pc_d83a:                                ; preds = %dec_label_pc_d821
  %v10_d83a = icmp ult i32 %v0_d821, %arg1
  %v1_d83d = icmp eq i1 %v10_d83a, false
  br i1 %v1_d83d, label %dec_label_pc_d848, label %dec_label_pc_d84f

dec_label_pc_d848:                                ; preds = %dec_label_pc_d83a
  store i32 5, i32* @eax, align 4
  br label %dec_label_pc_d854

dec_label_pc_d84f:                                ; preds = %dec_label_pc_d821, %dec_label_pc_d83a
  store i32 9, i32* @eax, align 4
  br label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %dec_label_pc_d84f, %dec_label_pc_d848, %dec_label_pc_d81a, %dec_label_pc_d7e7
  %v2_d85e6 = phi i32 [ 9, %dec_label_pc_d84f ], [ 5, %dec_label_pc_d848 ], [ 3, %dec_label_pc_d81a ], [ 1, %dec_label_pc_d7e7 ]
  br i1 true, label %bb, label %dec_label_pc_d860

bb:                                               ; preds = %dec_label_pc_d854
  %v1_d85e = call i32 @function_d865()
  br label %dec_label_pc_d860

dec_label_pc_d860:                                ; preds = %bb, %dec_label_pc_d854
  %v2_d85e = phi i32 [ %v1_d85e, %bb ], [ %v2_d85e6, %dec_label_pc_d854 ]
  ret i32 %v2_d85e

; uselistorder directives
  uselistorder i32 %v1_d7f5, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_d84f, { 1, 0 }
  uselistorder label %dec_label_pc_d821, { 1, 0 }
  uselistorder label %dec_label_pc_d807, { 1, 0 }
}

define i32 @function_d865() local_unnamed_addr {
dec_label_pc_d865:
  %v0_d866 = load i32, i32* @eax, align 4
  ret i32 %v0_d866
}

define i32 @_ZN9CFlatDataC1EPvS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d868:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_d899 = add i32 %tmp104, 4
  %v3_d899 = inttoptr i32 %v2_d899 to i32*
  store i32 %arg3, i32* %v3_d899, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d8a8

bb:                                               ; preds = %dec_label_pc_d868
  %v4_d8a6 = call i32 @function_d8ad(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_d8a8

dec_label_pc_d8a8:                                ; preds = %bb, %dec_label_pc_d868
  %v5_d8a6 = phi i32 [ %v4_d8a6, %bb ], [ 0, %dec_label_pc_d868 ]
  ret i32 %v5_d8a6
}

define i32 @function_d8ad(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d8ad:
  %v0_d8ae = load i32, i32* @eax, align 4
  ret i32 %v0_d8ae
}

define i32 @_ZNK9CFlatData16GetSerializeSizeEii(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d8b0:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_d8d6 = add i32 %tmp104, 4
  %v2_d8d6 = inttoptr i32 %v1_d8d6 to i32*
  %v3_d8d6 = load i32, i32* %v2_d8d6, align 4
  %v2_d8de = load i32, i32* %arg1, align 4
  %v2_d8e2 = sub i32 %v3_d8d6, %v2_d8de
  store i32 %v2_d8e2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d8f2

bb:                                               ; preds = %dec_label_pc_d8b0
  %v4_d8f0 = call i32 @function_d8f7(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_d8f2

dec_label_pc_d8f2:                                ; preds = %bb, %dec_label_pc_d8b0
  %v5_d8f0 = phi i32 [ %v4_d8f0, %bb ], [ %v2_d8e2, %dec_label_pc_d8b0 ]
  ret i32 %v5_d8f0
}

define i32 @function_d8f7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d8f7:
  %v0_d8f8 = load i32, i32* @eax, align 4
  ret i32 %v0_d8f8
}

define i32 @_Z16GetSerializeSizeRK7CScriptii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d8f9:
  %v3_d930 = call i32 @function_1e364(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_d930, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d941

bb:                                               ; preds = %dec_label_pc_d8f9
  %v1_d93f = call i32 @function_d946()
  br label %dec_label_pc_d941

dec_label_pc_d941:                                ; preds = %bb, %dec_label_pc_d8f9
  %v2_d93f = phi i32 [ %v1_d93f, %bb ], [ %v3_d930, %dec_label_pc_d8f9 ]
  ret i32 %v2_d93f
}

define i32 @function_d946() local_unnamed_addr {
dec_label_pc_d946:
  %v0_d947 = load i32, i32* @eax, align 4
  ret i32 %v0_d947
}

define i32 @_ZN11CDataStreamC1Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d948:
  store i32 %arg1, i32* @eax, align 4
  %v1_d971 = call i32 @function_1e40a(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v3_d98a = call i32 @function_1b2ea(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_d99b

bb:                                               ; preds = %dec_label_pc_d948
  %v1_d999 = call i32 @function_d9a0()
  br label %dec_label_pc_d99b

dec_label_pc_d99b:                                ; preds = %bb, %dec_label_pc_d948
  %v2_d999 = phi i32 [ %v1_d999, %bb ], [ 0, %dec_label_pc_d948 ]
  ret i32 %v2_d999

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_d9a0() local_unnamed_addr {
dec_label_pc_d9a0:
  %v0_d9a1 = load i32, i32* @eax, align 4
  ret i32 %v0_d9a1
}

define i32 @_ZN11CDataStream4InitEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d9a2:
  %v1_d9c8 = add i32 %arg1, 12
  %v2_d9c8 = inttoptr i32 %v1_d9c8 to i32*
  store i32 0, i32* %v2_d9c8, align 4
  %v2_d9d5 = add i32 %arg1, 20
  %v3_d9d5 = inttoptr i32 %v2_d9d5 to i32*
  store i32 %arg2, i32* %v3_d9d5, align 4
  %v2_d9de = add i32 %arg1, 24
  %v3_d9de = inttoptr i32 %v2_d9de to i32*
  store i32 %arg3, i32* %v3_d9de, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_d9e4 = add i32 %arg1, 16
  %v2_d9e4 = inttoptr i32 %v1_d9e4 to i16*
  store i16 0, i16* %v2_d9e4, align 2
  %v2_d9f9 = call i32 @function_11f0d(i32 1, i32 4)
  %v1_da03 = trunc i32 %v2_d9f9 to i16
  %v3_da03 = add i32 %arg1, 18
  %v4_da03 = inttoptr i32 %v3_da03 to i16*
  store i16 %v1_da03, i16* %v4_da03, align 2
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_da13

bb:                                               ; preds = %dec_label_pc_d9a2
  %v1_da11 = call i32 @function_da18()
  br label %dec_label_pc_da13

dec_label_pc_da13:                                ; preds = %bb, %dec_label_pc_d9a2
  %v2_da11 = phi i32 [ %v1_da11, %bb ], [ 0, %dec_label_pc_d9a2 ]
  ret i32 %v2_da11

; uselistorder directives
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_da18() local_unnamed_addr {
dec_label_pc_da18:
  %v0_da19 = load i32, i32* @eax, align 4
  ret i32 %v0_da19
}

define i32 @_ZN11CDataStreamD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_da1a:
  store i32 %arg1, i32* @eax, align 4
  %v1_da37 = call i32 @function_1e512(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_da48

bb:                                               ; preds = %dec_label_pc_da1a
  %v1_da46 = call i32 @function_da4d()
  br label %dec_label_pc_da48

dec_label_pc_da48:                                ; preds = %bb, %dec_label_pc_da1a
  %v2_da46 = phi i32 [ %v1_da46, %bb ], [ 0, %dec_label_pc_da1a ]
  ret i32 %v2_da46

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_da4d() local_unnamed_addr {
dec_label_pc_da4d:
  %v0_da4e = load i32, i32* @eax, align 4
  ret i32 %v0_da4e
}

define i32 @_ZN11CDataStream5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_da50:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_da70 = add i32 %arg2, 12
  %v2_da70 = inttoptr i32 %v1_da70 to i32*
  %v3_da70 = load i32, i32* %v2_da70, align 4
  store i32 %v3_da70, i32* %stack_var_-20, align 4
  %v2_da79 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_da79, i32* @eax, align 4
  %v2_da83 = call i32 @function_1e718(i32 %v2_da79, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_da8e = ptrtoint i32* %stack_var_-20 to i32
  %v3_da9f = call i32 @function_1e760(i32 %arg1, i32 %v2_da79, i32 %v2_da8e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dab6

bb:                                               ; preds = %dec_label_pc_da50
  %v1_dab4 = call i32 @function_dabb()
  br label %dec_label_pc_dab6

dec_label_pc_dab6:                                ; preds = %bb, %dec_label_pc_da50
  %v2_dab4 = phi i32 [ %v1_dab4, %bb ], [ %arg1, %dec_label_pc_da50 ]
  ret i32 %v2_dab4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
}

define i32 @function_dabb() local_unnamed_addr {
dec_label_pc_dabb:
  %v0_dabc = load i32, i32* @eax, align 4
  ret i32 %v0_dabc
}

define i32 @_ZN11CDataStream3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dac0:
  store i32 %arg1, i32* @eax, align 4
  %v2_daea = call i32 @function_1e73e(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt9exceptionC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_db0a:
  ret i32 %arg1
}

define i32 @function_db41() local_unnamed_addr {
dec_label_pc_db41:
  %eax.global-to-local = alloca i32, align 4
  %v0_db42 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_db42
}

define i32 @_ZN11CDataStream5writeEPKci(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_db44:
  %v11_db68 = icmp slt i32 %arg3, 0
  %v1_db6c = icmp eq i1 %v11_db68, false
  br i1 %v1_db6c, label %bb, label %dec_label_pc_db6e

bb:                                               ; preds = %dec_label_pc_db44
  %v5_db6c = call i32 @function_db92(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_db6e

dec_label_pc_db6e:                                ; preds = %bb, %dec_label_pc_db44
  %v3_db86 = phi i32 [ %v5_db6c, %bb ], [ 0, %dec_label_pc_db44 ]
  ret i32 %v3_db86
}

define i32 @function_db92(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_db92:
  %v0_db92 = load i32, i32* @ebp, align 4
  %v1_db9a = add i32 %v0_db92, -28
  %v2_db9a = inttoptr i32 %v1_db9a to i32*
  %v3_db9a = load i32, i32* %v2_db9a, align 4
  %v1_db9d = add i32 %v0_db92, -16
  store i32 %v1_db9d, i32* @eax, align 4
  %v2_dba7 = call i32 @function_1e7c2(i32 %v1_db9d, i32 %v3_db9a)
  %v0_dbaf = load i32, i32* @ebp, align 4
  %v1_dbaf = add i32 %v0_dbaf, -28
  %v2_dbaf = inttoptr i32 %v1_dbaf to i32*
  %v3_dbaf = load i32, i32* %v2_dbaf, align 4
  store i32 %v3_dbaf, i32* @eax, align 4
  %v0_dbb2 = load i32, i32* @ebx, align 4
  %v1_dbb6 = add i32 %v0_dbaf, -32
  %v2_dbb6 = inttoptr i32 %v1_dbb6 to i32*
  %v3_dbb6 = load i32, i32* %v2_dbb6, align 4
  %v1_dbbd = add i32 %v0_dbaf, -16
  %v2_dbbd = inttoptr i32 %v1_dbbd to i32*
  %v3_dbbd = load i32, i32* %v2_dbbd, align 4
  %v4_dbc7 = call i32 @function_1e8ee(i32 %v3_dbaf, i32 %v3_dbbd, i32 %v3_dbb6, i32 %v0_dbb2)
  %v0_dbcc = load i32, i32* @ebp, align 4
  %v1_dbcc = add i32 %v0_dbcc, -28
  %v2_dbcc = inttoptr i32 %v1_dbcc to i32*
  %v3_dbcc = load i32, i32* %v2_dbcc, align 4
  store i32 %v3_dbcc, i32* @eax, align 4
  %v1_dbcf = add i32 %v0_dbcc, -12
  %v2_dbcf = inttoptr i32 %v1_dbcf to i32*
  %v3_dbcf = load i32, i32* %v2_dbcf, align 4
  %v1_dbd2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_dbd2 = icmp eq i32 %v1_dbd2, %v3_dbcf
  br i1 %v3_dbd2, label %bb, label %dec_label_pc_dbdb

bb:                                               ; preds = %dec_label_pc_db92
  %v1_dbd9 = call i32 @function_dbe0()
  br label %dec_label_pc_dbdb

dec_label_pc_dbdb:                                ; preds = %bb, %dec_label_pc_db92
  %v2_dbd9 = phi i32 [ %v1_dbd9, %bb ], [ %v3_dbcc, %dec_label_pc_db92 ]
  ret i32 %v2_dbd9

; uselistorder directives
  uselistorder i32 %v0_dbaf, { 1, 0, 2 }
  uselistorder i32 %v0_db92, { 1, 0 }
}

define i32 @function_dbe0() local_unnamed_addr {
dec_label_pc_dbe0:
  %v0_dbe4 = load i32, i32* @eax, align 4
  ret i32 %v0_dbe4
}

define i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_dbe6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dc0e

bb:                                               ; preds = %dec_label_pc_dbe6
  %v2_dc0c = call i32 @function_dc13(i32 %arg1)
  br label %dec_label_pc_dc0e

dec_label_pc_dc0e:                                ; preds = %bb, %dec_label_pc_dbe6
  %v3_dc0c = phi i32 [ %v2_dc0c, %bb ], [ 0, %dec_label_pc_dbe6 ]
  ret i32 %v3_dc0c
}

define i32 @function_dc13(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc13:
  %v0_dc14 = load i32, i32* @eax, align 4
  ret i32 %v0_dc14
}

define i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %arg1) local_unnamed_addr {
dec_label_pc_dc15:
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @eax, align 4
  store i32 0, i32* @edx, align 8
  br i1 true, label %bb, label %dec_label_pc_dc43

bb:                                               ; preds = %dec_label_pc_dc15
  %v4_dc1b = ptrtoint i8* %arg1 to i32
  %v3_dc41 = call i32 @function_dc48(i32 %v4_dc1b)
  br label %dec_label_pc_dc43

dec_label_pc_dc43:                                ; preds = %bb, %dec_label_pc_dc15
  %v4_dc41 = phi i32 [ %v3_dc41, %bb ], [ 0, %dec_label_pc_dc15 ]
  ret i32 %v4_dc41

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_dc48(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc48:
  %v0_dc49 = load i32, i32* @eax, align 4
  ret i32 %v0_dc49
}

define i32 @_ZN5boost6detail7variant9copy_intoC1EPv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc4a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_dc6d = call i32 @function_1ead6(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dc86

bb:                                               ; preds = %dec_label_pc_dc4a
  %v1_dc84 = call i32 @function_dc8b()
  br label %dec_label_pc_dc86

dec_label_pc_dc86:                                ; preds = %bb, %dec_label_pc_dc4a
  %v2_dc84 = phi i32 [ %v1_dc84, %bb ], [ 0, %dec_label_pc_dc4a ]
  ret i32 %v2_dc84

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_dc8b() local_unnamed_addr {
dec_label_pc_dc8b:
  %v0_dc8c = load i32, i32* @eax, align 4
  ret i32 %v0_dc8c
}

define i32 @_ZN5boost6detail7variant14assign_storageC1EPKv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc8e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_dcb1 = call i32 @function_1eb1a(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @_ZNK5boost7bad_get4whatEv(i32 %arg1) {
dec_label_pc_dcd2:
  store i32 ptrtoint ([50 x i8]* @global_var_5b08.1813 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dcfa

bb:                                               ; preds = %dec_label_pc_dcd2
  %v2_dcf8 = call i32 @function_dcff(i32 %arg1)
  br label %dec_label_pc_dcfa

dec_label_pc_dcfa:                                ; preds = %bb, %dec_label_pc_dcd2
  %v3_dcf8 = phi i32 [ %v2_dcf8, %bb ], [ ptrtoint ([50 x i8]* @global_var_5b08.1813 to i32), %dec_label_pc_dcd2 ]
  ret i32 %v3_dcf8
}

define i32 @function_dcff(i32 %arg1) local_unnamed_addr {
dec_label_pc_dcff:
  %v0_dd00 = load i32, i32* @eax, align 4
  ret i32 %v0_dd00
}

define i32 @_ZN5boost15recursive_mutex4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd02:
  %stack_var_-24 = alloca i32, align 4
  %v2_dd21 = ptrtoint i32* %stack_var_-24 to i32
  %v2_dd27 = call i32 @function_1b2e6(i32 %v2_dd21, i32 %arg1)
  %v1_dd2f = add i32 %arg1, 72
  %v2_dd2f = inttoptr i32 %v1_dd2f to i8*
  %v3_dd2f = load i8, i8* %v2_dd2f, align 1
  %v4_dd2f = zext i8 %v3_dd2f to i32
  %v5_dd33 = icmp eq i8 %v3_dd2f, 0
  br i1 %v5_dd33, label %bb, label %dec_label_pc_dd37

bb:                                               ; preds = %dec_label_pc_dd02
  %v1_dd35 = call i32 @function_dd59()
  br label %dec_label_pc_dd37

dec_label_pc_dd37:                                ; preds = %bb, %dec_label_pc_dd02
  %v2_dd35 = phi i32 [ %v1_dd35, %bb ], [ %v4_dd2f, %dec_label_pc_dd02 ]
  ret i32 %v2_dd35
}

define i32 @function_dd4d() local_unnamed_addr {
dec_label_pc_dd4d:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_dd4d = add i32 %tmp91, -1207470912
  %v2_dd4d = inttoptr i32 %v1_dd4d to i32*
  %v3_dd4d = load i32, i32* %v2_dd4d, align 4
  %v4_dd4d = add i32 %v3_dd4d, 1
  store i32 %v4_dd4d, i32* %v2_dd4d, align 4
  %v2_dd53 = load i32, i32* %eax.global-to-local, align 4
  %v4_dd53 = mul i32 %v2_dd53, 2
  %v21_dd53 = inttoptr i32 %v2_dd53 to i32*
  store i32 %v4_dd53, i32* %v21_dd53, align 4
  %v2_dd55 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_dd55 = load i32, i32* %eax.global-to-local, align 4
  %v4_dd55 = trunc i32 %v3_dd55 to i8
  %v5_dd55 = add i8 %v4_dd55, %v2_dd55
  %v21_dd55 = inttoptr i32 %v3_dd55 to i8*
  store i8 %v5_dd55, i8* %v21_dd55, align 1
  %v0_dd57 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_dd57

; uselistorder directives
  uselistorder i32 %v2_dd53, { 1, 0 }
}

define i32 @function_dd59() local_unnamed_addr {
dec_label_pc_dd59:
  %v1_dd60 = call i32 @function_ddb0()
  %v0_dd62 = load i32, i32* @ebp, align 4
  %v1_dd62 = add i32 %v0_dd62, -28
  %v2_dd62 = inttoptr i32 %v1_dd62 to i32*
  %v3_dd62 = load i32, i32* %v2_dd62, align 4
  %v1_dd65 = add i32 %v3_dd62, 80
  %v2_dd65 = inttoptr i32 %v1_dd65 to i32*
  %v3_dd65 = load i32, i32* %v2_dd65, align 4
  %v1_dd68 = add i32 %v3_dd65, 1
  %v2_dd6e = add i32 %v3_dd62, 80
  %v3_dd6e = inttoptr i32 %v2_dd6e to i32*
  store i32 %v1_dd68, i32* %v3_dd6e, align 4
  %v0_dd71 = call i32 @function_dddc()
  ret i32 %v0_dd71
}

define i32 @function_dd73() local_unnamed_addr {
dec_label_pc_dd73:
  %v0_dd73 = load i32, i32* @ebp, align 4
  %v1_dd73 = add i32 %v0_dd73, -28
  %v2_dd73 = inttoptr i32 %v1_dd73 to i32*
  %v3_dd73 = load i32, i32* %v2_dd73, align 4
  ret i32 %v3_dd73
}

define i32 @function_ddb0() local_unnamed_addr {
dec_label_pc_ddb0:
  %eax.global-to-local = alloca i32, align 4
  %v0_ddb0 = load i32, i32* @ebp, align 4
  %v1_ddb0 = add i32 %v0_ddb0, -28
  %v2_ddb0 = inttoptr i32 %v1_ddb0 to i32*
  %v3_ddb0 = load i32, i32* %v2_ddb0, align 4
  store i32 %v3_ddb0, i32* %eax.global-to-local, align 4
  %v1_ddb3 = add i32 %v3_ddb0, 72
  %v2_ddb3 = inttoptr i32 %v1_ddb3 to i8*
  %v3_ddb3 = load i8, i8* %v2_ddb3, align 1
  %v4_ddb3 = zext i8 %v3_ddb3 to i32
  store i32 %v4_ddb3, i32* %eax.global-to-local, align 4
  %v5_ddb7 = icmp eq i8 %v3_ddb3, 0
  %v1_ddb9 = icmp eq i1 %v5_ddb7, false
  br i1 %v1_ddb9, label %bb, label %dec_label_pc_ddbb

bb:                                               ; preds = %dec_label_pc_ddb0
  %v2_ddb9 = call i32 @function_dd73()
  store i32 %v2_ddb9, i32* %eax.global-to-local, align 4
  %v0_ddbb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_ddbb

dec_label_pc_ddbb:                                ; preds = %bb, %dec_label_pc_ddb0
  %v0_ddbb = phi i32 [ %v0_ddbb.pre, %bb ], [ %v0_ddb0, %dec_label_pc_ddb0 ]
  %v1_ddbb = add i32 %v0_ddbb, -28
  %v2_ddbb = inttoptr i32 %v1_ddbb to i32*
  %v3_ddbb = load i32, i32* %v2_ddbb, align 4
  store i32 %v3_ddbb, i32* %eax.global-to-local, align 4
  %v1_ddbe = add i32 %v3_ddbb, 72
  %v2_ddbe = inttoptr i32 %v1_ddbe to i8*
  store i8 1, i8* %v2_ddbe, align 1
  %v0_ddc2 = load i32, i32* @ebp, align 4
  %v1_ddc2 = add i32 %v0_ddc2, -28
  %v2_ddc2 = inttoptr i32 %v1_ddc2 to i32*
  %v3_ddc2 = load i32, i32* %v2_ddc2, align 4
  store i32 %v3_ddc2, i32* %eax.global-to-local, align 4
  %v1_ddc5 = add i32 %v3_ddc2, 80
  %v2_ddc5 = inttoptr i32 %v1_ddc5 to i32*
  %v3_ddc5 = load i32, i32* %v2_ddc5, align 4
  store i32 %v3_ddc5, i32* %eax.global-to-local, align 4
  %v1_ddc8 = add i32 %v3_ddc5, 1
  %v3_ddcb = load i32, i32* %v2_ddc2, align 4
  store i32 %v3_ddcb, i32* %eax.global-to-local, align 4
  %v2_ddce = add i32 %v3_ddcb, 80
  %v3_ddce = inttoptr i32 %v2_ddce to i32*
  store i32 %v1_ddc8, i32* %v3_ddce, align 4
  %v4_ddce = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_ddce

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 7 }
}

define i32 @function_dddc() local_unnamed_addr {
dec_label_pc_dddc:
  %v0_dddc = load i32, i32* @ebp, align 4
  %v1_dddc = add i32 %v0_dddc, -20
  store i32 %v1_dddc, i32* @eax, align 4
  %v1_dde2 = call i32 @function_1b3c0(i32 %v1_dddc)
  %v0_dde7 = load i32, i32* @ebp, align 4
  %v1_dde7 = add i32 %v0_dde7, -12
  %v2_dde7 = inttoptr i32 %v1_dde7 to i32*
  %v3_dde7 = load i32, i32* %v2_dde7, align 4
  %v1_ddea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ddea = xor i32 %v1_ddea, %v3_dde7
  %v3_ddea = icmp eq i32 %v2_ddea, 0
  store i32 %v2_ddea, i32* @eax, align 4
  br i1 %v3_ddea, label %bb, label %dec_label_pc_ddf3

bb:                                               ; preds = %dec_label_pc_dddc
  %v1_ddf1 = call i32 @function_de11()
  store i32 %v1_ddf1, i32* @eax, align 4
  br label %dec_label_pc_ddf3

dec_label_pc_ddf3:                                ; preds = %bb, %dec_label_pc_dddc
  %v0_ddf3 = call i32 @function_de0c()
  ret i32 %v0_ddf3
}

define i32 @function_ddf6() local_unnamed_addr {
dec_label_pc_ddf6:
  %eax.global-to-local = alloca i32, align 4
  %v0_ddf6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ddf6
}

define i32 @function_de0c() local_unnamed_addr {
dec_label_pc_de0c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_de11() local_unnamed_addr {
dec_label_pc_de11:
  %v0_de16 = load i32, i32* @eax, align 4
  ret i32 %v0_de16
}

define i32 @_ZN5boost15recursive_mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_de18:
  %stack_var_-24 = alloca i32, align 4
  %v2_de36 = ptrtoint i32* %stack_var_-24 to i32
  %v2_de3c = call i32 @function_1b3fc(i32 %v2_de36, i32 %arg1)
  %v1_de44 = add i32 %arg1, 80
  %v2_de44 = inttoptr i32 %v1_de44 to i32*
  %v3_de44 = load i32, i32* %v2_de44, align 4
  %v1_de47 = add i32 %v3_de44, -1
  store i32 %v1_de47, i32* %v2_de44, align 4
  %v1_de56 = icmp eq i32 %v1_de47, 0
  %v5_de5b = icmp eq i1 %v1_de56, false
  br i1 %v5_de5b, label %dec_label_pc_de66, label %dec_label_pc_de5f

dec_label_pc_de5f:                                ; preds = %dec_label_pc_de18
  %v1_de62 = add i32 %arg1, 72
  %v2_de62 = inttoptr i32 %v1_de62 to i8*
  store i8 0, i8* %v2_de62, align 1
  br label %dec_label_pc_de66

dec_label_pc_de66:                                ; preds = %dec_label_pc_de5f, %dec_label_pc_de18
  %v1_de69 = add i32 %arg1, 24
  ret i32 %v1_de69

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @function_de9b() local_unnamed_addr {
dec_label_pc_deb8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp95 = call i32 @__decompiler_undefined_function_0()
  %v1_de9b = add i32 %tmp95, 76147781
  %v2_de9b = inttoptr i32 %v1_de9b to i32*
  %v3_de9b = load i32, i32* %v2_de9b, align 4
  %v4_de9b = add i32 %v3_de9b, -1
  store i32 %v4_de9b, i32* %v2_de9b, align 4
  %v0_dea1 = load i32, i32* %eax.global-to-local, align 4
  %v1_dea1 = trunc i32 %v0_dea1 to i8
  %v2_dea1 = and i8 %v1_dea1, -24
  %v8_dea3 = icmp ugt i8 %v2_dea1, -103
  %phitmp = and i32 %v0_dea1, -256
  %v3_dea4 = select i1 %v8_dea3, i32 255, i32 0
  %v6_dea4 = or i32 %v3_dea4, %phitmp
  store i32 %v6_dea4, i32* %eax.global-to-local, align 4
  %v1_dea5 = inttoptr i32 %v6_dea4 to i8*
  %v2_dea5 = load i8, i8* %v1_dea5, align 1
  %v4_dea5 = trunc i32 %v3_dea4 to i8
  %v5_dea5 = add i8 %v2_dea5, %v4_dea5
  store i8 %v5_dea5, i8* %v1_dea5, align 1
  %v0_dea7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_dea7 = add i32 %v0_dea7, -12
  %v2_dea7 = inttoptr i32 %v1_dea7 to i32*
  %v3_dea7 = load i32, i32* %v2_dea7, align 4
  store i32 %v3_dea7, i32* %eax.global-to-local, align 4
  %v1_deaa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_deaa = xor i32 %v1_deaa, %v3_dea7
  store i32 %v2_deaa, i32* %eax.global-to-local, align 4
  ret i32 %v2_deaa

; uselistorder directives
  uselistorder i32 %v3_dea4, { 1, 0 }
}

define i32 @_ZN5boost15recursive_mutex8try_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_deba:
  %stack_var_-24 = alloca i32, align 4
  %v2_ded9 = ptrtoint i32* %stack_var_-24 to i32
  %v2_dedf = call i32 @function_1b49e(i32 %v2_ded9, i32 %arg1)
  %v1_dee7 = add i32 %arg1, 72
  %v2_dee7 = inttoptr i32 %v1_dee7 to i8*
  %v3_dee7 = load i8, i8* %v2_dee7, align 1
  %v4_dee7 = zext i8 %v3_dee7 to i32
  %v5_deeb = icmp eq i8 %v3_dee7, 0
  br i1 %v5_deeb, label %bb, label %dec_label_pc_deef

bb:                                               ; preds = %dec_label_pc_deba
  %v1_deed = call i32 @function_df11()
  br label %dec_label_pc_deef

dec_label_pc_deef:                                ; preds = %bb, %dec_label_pc_deba
  %v2_deed = phi i32 [ %v1_deed, %bb ], [ %v4_dee7, %dec_label_pc_deba ]
  ret i32 %v2_deed
}

define i32 @function_df05() local_unnamed_addr {
dec_label_pc_df05:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_df05 = add i32 %tmp91, -1207470656
  %v2_df05 = inttoptr i32 %v1_df05 to i32*
  %v3_df05 = load i32, i32* %v2_df05, align 4
  %v4_df05 = add i32 %v3_df05, 1
  store i32 %v4_df05, i32* %v2_df05, align 4
  %v2_df0b = load i32, i32* %eax.global-to-local, align 4
  %v4_df0b = mul i32 %v2_df0b, 2
  %v21_df0b = inttoptr i32 %v2_df0b to i32*
  store i32 %v4_df0b, i32* %v21_df0b, align 4
  %v2_df0d = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_df0d = load i32, i32* %eax.global-to-local, align 4
  %v4_df0d = trunc i32 %v3_df0d to i8
  %v5_df0d = add i8 %v4_df0d, %v2_df0d
  %v21_df0d = inttoptr i32 %v3_df0d to i8*
  store i8 %v5_df0d, i8* %v21_df0d, align 1
  %v0_df0f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_df0f

; uselistorder directives
  uselistorder i32 %v2_df0b, { 1, 0 }
}

define i32 @function_df11() local_unnamed_addr {
dec_label_pc_df11:
  %eax.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_df21 = load i32, i32* @ebp, align 4
  %v1_df21 = add i32 %v0_df21, -28
  %v2_df21 = inttoptr i32 %v1_df21 to i32*
  %v3_df21 = load i32, i32* %v2_df21, align 4
  store i32 %v3_df21, i32* %eax.global-to-local, align 4
  %v1_df24 = add i32 %v3_df21, 72
  %v2_df24 = inttoptr i32 %v1_df24 to i8*
  store i8 1, i8* %v2_df24, align 1
  %v0_df28 = load i32, i32* @ebp, align 4
  %v1_df28 = add i32 %v0_df28, -28
  %v2_df28 = inttoptr i32 %v1_df28 to i32*
  %v3_df28 = load i32, i32* %v2_df28, align 4
  store i32 %v3_df28, i32* %eax.global-to-local, align 4
  %v1_df2b = add i32 %v3_df28, 80
  %v2_df2b = inttoptr i32 %v1_df2b to i32*
  %v3_df2b = load i32, i32* %v2_df2b, align 4
  store i32 %v3_df2b, i32* %eax.global-to-local, align 4
  %v1_df2e = add i32 %v3_df2b, 1
  %v3_df31 = load i32, i32* %v2_df28, align 4
  store i32 %v3_df31, i32* %eax.global-to-local, align 4
  %v2_df34 = add i32 %v3_df31, 80
  %v3_df34 = inttoptr i32 %v2_df34 to i32*
  store i32 %v1_df2e, i32* %v3_df34, align 4
  %v4_df34 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_df34
}

define i32 @function_df47() local_unnamed_addr {
dec_label_pc_df47:
  %v0_df47 = load i32, i32* @ebp, align 4
  %v1_df47 = add i32 %v0_df47, -20
  store i32 %v1_df47, i32* @eax, align 4
  %v1_df4d = call i32 @function_1b578(i32 %v1_df47)
  %v0_df52 = load i32, i32* @ebx, align 4
  store i32 %v0_df52, i32* @eax, align 4
  %v0_df54 = load i32, i32* @ebp, align 4
  %v1_df54 = add i32 %v0_df54, -12
  %v2_df54 = inttoptr i32 %v1_df54 to i32*
  %v3_df54 = load i32, i32* %v2_df54, align 4
  %v1_df57 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_df57 = icmp eq i32 %v1_df57, %v3_df54
  br i1 %v3_df57, label %bb, label %dec_label_pc_df60

bb:                                               ; preds = %dec_label_pc_df47
  %v1_df5e = call i32 @function_df65()
  br label %dec_label_pc_df60

dec_label_pc_df60:                                ; preds = %bb, %dec_label_pc_df47
  %v2_df5e = phi i32 [ %v1_df5e, %bb ], [ %v0_df52, %dec_label_pc_df47 ]
  ret i32 %v2_df5e
}

define i32 @function_df65() local_unnamed_addr {
dec_label_pc_df65:
  %v0_df6a = load i32, i32* @eax, align 4
  ret i32 %v0_df6a
}

define i32 @_ZN5boost9exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_df6c:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2b518.1804 to i32), i32* %arg1, align 4
  %v1_df95 = add i32 %arg2, 4
  store i32 %v1_df95, i32* @edx, align 8
  %v1_df9b = add i32 %tmp103, 4
  store i32 %v1_df9b, i32* @eax, align 4
  %v2_dfa5 = call i32 @function_1f2a8(i32 %v1_df9b, i32 %v1_df95)
  %v1_dfad = add i32 %arg2, 8
  %v2_dfad = inttoptr i32 %v1_dfad to i32*
  %v3_dfad = load i32, i32* %v2_dfad, align 4
  %v2_dfb3 = add i32 %tmp103, 8
  %v3_dfb3 = inttoptr i32 %v2_dfb3 to i32*
  store i32 %v3_dfad, i32* %v3_dfb3, align 4
  %v1_dfb9 = add i32 %arg2, 12
  %v2_dfb9 = inttoptr i32 %v1_dfb9 to i32*
  %v3_dfb9 = load i32, i32* %v2_dfb9, align 4
  %v2_dfbf = add i32 %tmp103, 12
  %v3_dfbf = inttoptr i32 %v2_dfbf to i32*
  store i32 %v3_dfb9, i32* %v3_dfbf, align 4
  %v1_dfc5 = add i32 %arg2, 16
  %v2_dfc5 = inttoptr i32 %v1_dfc5 to i32*
  %v3_dfc5 = load i32, i32* %v2_dfc5, align 4
  %v2_dfcb = add i32 %tmp103, 16
  %v3_dfcb = inttoptr i32 %v2_dfcb to i32*
  store i32 %v3_dfc5, i32* %v3_dfcb, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_dfda

bb:                                               ; preds = %dec_label_pc_df6c
  %v1_dfd8 = call i32 @function_dfdf()
  br label %dec_label_pc_dfda

dec_label_pc_dfda:                                ; preds = %bb, %dec_label_pc_df6c
  %v2_dfd8 = phi i32 [ %v1_dfd8, %bb ], [ 0, %dec_label_pc_df6c ]
  ret i32 %v2_dfd8

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_dfdf() local_unnamed_addr {
dec_label_pc_dfdf:
  %v0_dfe0 = load i32, i32* @eax, align 4
  ret i32 %v0_dfe0
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_dfe2:
  %v1_dffc = add i32 %arg1, 4
  store i32 %v1_dffc, i32* @eax, align 4
  %v1_e002 = call i32 @function_1b512(i32 %v1_dffc)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e013

bb:                                               ; preds = %dec_label_pc_dfe2
  %v1_e011 = call i32 @function_e018()
  br label %dec_label_pc_e013

dec_label_pc_e013:                                ; preds = %bb, %dec_label_pc_dfe2
  %v2_e011 = phi i32 [ %v1_e011, %bb ], [ 0, %dec_label_pc_dfe2 ]
  ret i32 %v2_e011
}

define i32 @function_e018() local_unnamed_addr {
dec_label_pc_e018:
  %v0_e019 = load i32, i32* @eax, align 4
  ret i32 %v0_e019
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e01a:
  %v1_e03a = inttoptr i32 %arg2 to i32*
  %v2_e03a = load i32, i32* %v1_e03a, align 4
  store i32 %v2_e03a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e065

bb:                                               ; preds = %dec_label_pc_e01a
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_e04a = add i32 %tmp103, 4
  %v1_e044 = add i32 %arg2, 4
  %v3_e063 = call i32 @function_e06a(i32 %v1_e04a, i32 %v1_e044)
  br label %dec_label_pc_e065

dec_label_pc_e065:                                ; preds = %bb, %dec_label_pc_e01a
  %v4_e063 = phi i32 [ %v3_e063, %bb ], [ 0, %dec_label_pc_e01a ]
  ret i32 %v4_e063

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e06a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e06a:
  %v0_e06b = load i32, i32* @eax, align 4
  ret i32 %v0_e06b
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e06c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2b3d0.1814 to i32), i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  %v1_e092 = call i32 @function_12610(i32 %tmp100)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e0ba

bb:                                               ; preds = %dec_label_pc_e06c
  %v1_e0b8 = call i32 @function_e0bf()
  br label %dec_label_pc_e0ba

dec_label_pc_e0ba:                                ; preds = %bb, %dec_label_pc_e06c
  %v2_e0b8 = phi i32 [ %v1_e0b8, %bb ], [ 0, %dec_label_pc_e06c ]
  ret i32 %v2_e0b8

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_e0bf() local_unnamed_addr {
dec_label_pc_e0bf:
  %v0_e0c0 = load i32, i32* @eax, align 4
  ret i32 %v0_e0c0
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e0c2:
  %v1_e0df = call i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE8allocateEjPKv(i32 %arg1)
  ret i32 0
}

define i32 @_ZNK5boost6system14error_categoryeqERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e102:
  %v15_e122 = icmp eq i32 %arg1, %arg2
  %v1_e125 = zext i1 %v15_e122 to i32
  %v3_e125 = and i32 %arg1, -256
  %v4_e125 = or i32 %v1_e125, %v3_e125
  store i32 %v4_e125, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e134

bb:                                               ; preds = %dec_label_pc_e102
  %v3_e132 = call i32 @function_e139(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_e134

dec_label_pc_e134:                                ; preds = %bb, %dec_label_pc_e102
  %v4_e132 = phi i32 [ %v3_e132, %bb ], [ %v4_e125, %dec_label_pc_e102 ]
  ret i32 %v4_e132

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_e139(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e139:
  %v0_e13a = load i32, i32* @eax, align 4
  ret i32 %v0_e13a
}

define i32 @_ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e13c:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_e16d = add i32 %tmp104, 4
  %v3_e16d = inttoptr i32 %v2_e16d to i32*
  store i32 %arg3, i32* %v3_e16d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e17c

bb:                                               ; preds = %dec_label_pc_e13c
  %v4_e17a = call i32 @function_e181(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_e17c

dec_label_pc_e17c:                                ; preds = %bb, %dec_label_pc_e13c
  %v5_e17a = phi i32 [ %v4_e17a, %bb ], [ 0, %dec_label_pc_e13c ]
  ret i32 %v5_e17a
}

define i32 @function_e181(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e181:
  %v0_e182 = load i32, i32* @eax, align 4
  ret i32 %v0_e182
}

define i32 @_ZN5boost6systemeqERKNS0_15error_conditionES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e183:
  %ebp.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_e183 = load i32, i32* %ebp.global-to-local, align 4
  %v1_e1a3 = add i32 %tmp102, 4
  %v2_e1a3 = inttoptr i32 %v1_e1a3 to i32*
  %v3_e1a3 = load i32, i32* %v2_e1a3, align 4
  %v1_e1a9 = add i32 %arg2, 4
  %v2_e1a9 = inttoptr i32 %v1_e1a9 to i32*
  %v3_e1a9 = load i32, i32* %v2_e1a9, align 4
  %v12_e1ac = icmp eq i32 %v3_e1a3, %v3_e1a9
  %v1_e1ae = icmp eq i1 %v12_e1ac, false
  br i1 %v1_e1ae, label %dec_label_pc_e1c5, label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e183
  %v2_e1b3 = load i32, i32* %arg1, align 4
  %v1_e1b8 = inttoptr i32 %arg2 to i32*
  %v2_e1b8 = load i32, i32* %v1_e1b8, align 4
  %v12_e1ba = icmp eq i32 %v2_e1b3, %v2_e1b8
  %v1_e1bc = icmp eq i1 %v12_e1ba, false
  br i1 %v1_e1bc, label %dec_label_pc_e1c5, label %dec_label_pc_e1ca

dec_label_pc_e1c5:                                ; preds = %dec_label_pc_e1b0, %dec_label_pc_e183
  br label %dec_label_pc_e1ca

dec_label_pc_e1ca:                                ; preds = %dec_label_pc_e1b0, %dec_label_pc_e1c5
  %storemerge = phi i32 [ 0, %dec_label_pc_e1c5 ], [ 1, %dec_label_pc_e1b0 ]
  store i32 %v0_e183, i32* %ebp.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_e1ca, { 1, 0 }
}

define i32 @_ZNK5boost6system10error_code5valueEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e1de:
  %ebp.global-to-local = alloca i32, align 4
  %v0_e1de = load i32, i32* %ebp.global-to-local, align 4
  %v2_e1f8 = load i32, i32* %arg1, align 4
  store i32 %v0_e1de, i32* %ebp.global-to-local, align 4
  ret i32 %v2_e1f8

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZNK5boost6system10error_code8categoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e20e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_e20e = load i32, i32* %ebp.global-to-local, align 4
  %v1_e228 = add i32 %arg1, 4
  %v2_e228 = inttoptr i32 %v1_e228 to i32*
  %v3_e228 = load i32, i32* %v2_e228, align 4
  store i32 %v0_e20e, i32* %ebp.global-to-local, align 4
  ret i32 %v3_e228

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZNK5boost6system10error_code7messageEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e23e:
  %v1_e25f = add i32 %arg2, 4
  %v2_e25f = inttoptr i32 %v1_e25f to i32*
  store i32 %arg2, i32* @eax, align 4
  %v1_e26f = call i32 @function_1c41c(i32 %arg2)
  %v3_e277 = load i32, i32* %v2_e25f, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e29c

bb:                                               ; preds = %dec_label_pc_e23e
  %v4_e29a = call i32 @function_e2a1(i32 %arg1, i32 %v3_e277, i32 %v1_e26f)
  br label %dec_label_pc_e29c

dec_label_pc_e29c:                                ; preds = %bb, %dec_label_pc_e23e
  %v5_e29a = phi i32 [ %v4_e29a, %bb ], [ %arg1, %dec_label_pc_e23e ]
  ret i32 %v5_e29a

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_e2a1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e2a1:
  %v0_e2a5 = load i32, i32* @eax, align 4
  ret i32 %v0_e2a5
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e2a8:
  store i32 %arg1, i32* @eax, align 4
  %v3_e2df = call i32 @function_1c3e4(i32 %arg1, i32 %arg3, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e2fc:
  %stack_var_-24 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v2_e322 = load i32, i32* %arg1, align 4
  %v1_e324 = add i32 %v2_e322, 16
  %v1_e327 = inttoptr i32 %v1_e324 to i32*
  %v2_e327 = load i32, i32* %v1_e327, align 4
  store i32 %v2_e327, i32* @ecx, align 4
  %v2_e329 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_e329, i32* @eax, align 4
  %v4_e34f = call i32 @function_1c47f(i32 %v2_e329, i32 %arg3, i32 %tmp108, i32 %arg2)
  store i32 %v4_e34f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e360

bb:                                               ; preds = %dec_label_pc_e2fc
  %v1_e35e = call i32 @function_e365()
  br label %dec_label_pc_e360

dec_label_pc_e360:                                ; preds = %bb, %dec_label_pc_e2fc
  %v2_e35e = phi i32 [ %v1_e35e, %bb ], [ %v4_e34f, %dec_label_pc_e2fc ]
  ret i32 %v2_e35e
}

define i32 @function_e365() local_unnamed_addr {
dec_label_pc_e365:
  %v0_e366 = load i32, i32* @eax, align 4
  ret i32 %v0_e366
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e368:
  store i32 %arg2, i32* @eax, align 4
  %v1_e391 = call i32 @function_1c576(i32 %arg2)
  %v2_e3a0 = call i32 @function_1c46a(i32 %arg1, i32 %v1_e391)
  %v4_e3a5 = trunc i32 %v2_e3a0 to i8
  %v5_e3a5 = icmp eq i8 %v4_e3a5, 0
  br i1 %v5_e3a5, label %dec_label_pc_e3c0, label %dec_label_pc_e3a9

dec_label_pc_e3a9:                                ; preds = %dec_label_pc_e368
  %v1_e3af = call i32 @function_1c546(i32 %arg2)
  %v15_e3b4 = icmp eq i32 %v1_e3af, %arg3
  %v1_e3b7 = icmp eq i1 %v15_e3b4, false
  br i1 %v1_e3b7, label %dec_label_pc_e3c0, label %dec_label_pc_e3c5

dec_label_pc_e3c0:                                ; preds = %dec_label_pc_e3a9, %dec_label_pc_e368
  br label %dec_label_pc_e3c5

dec_label_pc_e3c5:                                ; preds = %dec_label_pc_e3a9, %dec_label_pc_e3c0
  %storemerge = phi i32 [ 0, %dec_label_pc_e3c0 ], [ 1, %dec_label_pc_e3a9 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e3c5, { 1, 0 }
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_e3d8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b3b8_type* @global_var_2b3b8.1815 to i32), i32* %arg1, align 4
  %v1_e3fd = add i32 %tmp99, 16
  ret i32 %v1_e3fd
}

define i32 @function_e413() local_unnamed_addr {
dec_label_pc_e413:
  %v2_e41d = call i32 @function_e454(i32 ptrtoint (i32* @0 to i32))
  %v0_e41f = load i32, i32* @ebp, align 4
  %v1_e41f = add i32 %v0_e41f, -28
  %v2_e41f = inttoptr i32 %v1_e41f to i32*
  %v3_e41f = load i32, i32* %v2_e41f, align 4
  %v1_e42a = call i32 @function_e454(i32 %v3_e41f)
  ret i32 %v1_e42a

; uselistorder directives
  uselistorder i32 (i32)* @function_e454, { 1, 0 }
}

define i32 @function_e454(i32 %arg1) local_unnamed_addr {
dec_label_pc_e454:
  %v0_e454 = load i32, i32* @ebp, align 4
  %v1_e454 = add i32 %v0_e454, -12
  %v2_e454 = inttoptr i32 %v1_e454 to i32*
  %v3_e454 = load i32, i32* %v2_e454, align 4
  %v1_e457 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e457 = xor i32 %v1_e457, %v3_e454
  %v3_e457 = icmp eq i32 %v2_e457, 0
  store i32 %v2_e457, i32* @eax, align 4
  br i1 %v3_e457, label %bb, label %dec_label_pc_e460

bb:                                               ; preds = %dec_label_pc_e454
  %v1_e45e = call i32 @function_e465()
  br label %dec_label_pc_e460

dec_label_pc_e460:                                ; preds = %bb, %dec_label_pc_e454
  %v2_e45e = phi i32 [ %v1_e45e, %bb ], [ %v2_e457, %dec_label_pc_e454 ]
  ret i32 %v2_e45e
}

define i32 @function_e465() local_unnamed_addr {
dec_label_pc_e465:
  %v0_e46b = load i32, i32* @eax, align 4
  ret i32 %v0_e46b
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32 %arg1) {
dec_label_pc_e46c:
  store i32 %arg1, i32* @eax, align 4
  %v1_e489 = call i32 @function_1c844(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_e4a9() local_unnamed_addr {
dec_label_pc_e4a9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e4a9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e4a9 = add i32 %v0_e4a9, -1
  store i32 %v1_e4a9, i32* %ecx.global-to-local, align 4
  %v0_e4ab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e4ab
}

define i32 @_ZNK5boost6system12system_error4whatEv(i8 %arg1) {
dec_label_pc_e4ac:
  %v4_e4b3 = sext i8 %arg1 to i32
  %v5_e4d2 = icmp eq i8 %arg1, -16
  br i1 %v5_e4d2, label %bb, label %dec_label_pc_e4da

bb:                                               ; preds = %dec_label_pc_e4ac
  %v3_e4d4 = call i32 @function_e55a(i32 0)
  br label %dec_label_pc_e4da

dec_label_pc_e4da:                                ; preds = %bb, %dec_label_pc_e4ac
  ret i32 %v4_e4b3
}

define i32 @function_e4e6() local_unnamed_addr {
dec_label_pc_e4e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_e4e9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e4e9
}

define i32 @function_e55a(i32 %arg1) local_unnamed_addr {
dec_label_pc_e55a:
  %v0_e55a = load i32, i32* @ebp, align 4
  %v1_e55a = add i32 %v0_e55a, -28
  %v2_e55a = inttoptr i32 %v1_e55a to i32*
  %v3_e55a = load i32, i32* %v2_e55a, align 4
  %v1_e55d = add i32 %v3_e55a, 16
  ret i32 %v1_e55d
}

define i32 @function_e567() local_unnamed_addr {
dec_label_pc_e567:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_e567 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e567 = add i32 %v0_e567, -1948743229
  %v2_e567 = inttoptr i32 %v1_e567 to i32*
  %v3_e567 = load i32, i32* %v2_e567, align 4
  %v4_e567 = add i32 %v3_e567, -1
  store i32 %v4_e567, i32* %v2_e567, align 4
  %v0_e56f = load i32, i32* %edx.global-to-local, align 8
  %v1_e56f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e56f = xor i32 %v1_e56f, %v0_e56f
  %v3_e56f = icmp eq i32 %v2_e56f, 0
  store i32 %v2_e56f, i32* %edx.global-to-local, align 8
  br i1 %v3_e56f, label %bb, label %dec_label_pc_e578

bb:                                               ; preds = %dec_label_pc_e567
  %v1_e576 = call i32 @function_e5c1()
  store i32 %v1_e576, i32* @eax, align 4
  br label %dec_label_pc_e578

dec_label_pc_e578:                                ; preds = %bb, %dec_label_pc_e567
  %v0_e578 = call i32 @function_e5bc()
  ret i32 %v0_e578
}

define i32 @function_e57a() local_unnamed_addr {
dec_label_pc_e57a:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_e593 = add i32 %tmp91, -28
  %v2_e593 = inttoptr i32 %v1_e593 to i32*
  %v3_e593 = load i32, i32* %v2_e593, align 4
  ret i32 %v3_e593
}

define i32 @function_e5a5() local_unnamed_addr {
dec_label_pc_e5a5:
  %eax.global-to-local = alloca i32, align 4
  %v0_e5a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e5a5
}

define i32 @function_e5bc() local_unnamed_addr {
dec_label_pc_e5bc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_e5c1() local_unnamed_addr {
dec_label_pc_e5c1:
  %v0_e5c5 = load i32, i32* @eax, align 4
  ret i32 %v0_e5c5
}

define i32 @_ZN9bignum_stC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e5c6:
  ret i32 0
}

define i32 @_ZN7CBigNumC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e5f0:
  store i32 %arg1, i32* @eax, align 4
  %v1_e60d = call i32 @function_1cbb6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_e62d() local_unnamed_addr {
dec_label_pc_e62d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e62d = load i32, i32* %ecx.global-to-local, align 4
  %v1_e62d = add i32 %v0_e62d, -1
  store i32 %v1_e62d, i32* %ecx.global-to-local, align 4
  %v0_e62f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e62f
}

define i32 @_ZN7CBigNumD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e630:
  ret i32 %arg1
}

define i32 @function_e662() local_unnamed_addr {
dec_label_pc_e662:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e662 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e662 = add i32 %v0_e662, -1
  store i32 %v1_e662, i32* %ecx.global-to-local, align 4
  %v0_e664 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e664
}

define i32 @_ZNK7CBigNum10GetCompactEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e666:
  ret i32 %arg1
}

define i32 @function_e690() local_unnamed_addr {
dec_label_pc_e690:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v7_e690 = inttoptr i32 %tmp93 to i8*
  store i8 -1, i8* %v7_e690, align 1
  %v0_e693 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e693
}

define i32 @function_e6b1() local_unnamed_addr {
dec_label_pc_e6b1:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_e6b1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e6b1 = add i32 %v0_e6b1, -330462270
  %v2_e6b1 = inttoptr i32 %v1_e6b1 to i32*
  %v3_e6b1 = load i32, i32* %v2_e6b1, align 4
  %v4_e6b1 = add i32 %v3_e6b1, -1
  store i32 %v4_e6b1, i32* %v2_e6b1, align 4
  %v1_e6bc = load i32, i32* %ecx.global-to-local, align 4
  %v2_e6be = mul i32 %v1_e6bc, -8
  %v1_e6c1 = add i32 %v2_e6be, 24
  %v0_e6c4 = load i32, i32* %edx.global-to-local, align 8
  store i32 %v1_e6c1, i32* %ecx.global-to-local, align 4
  %v3_e6c8 = and i32 %v1_e6c1, 24
  %v5_e6c8 = icmp eq i32 %v3_e6c8, 0
  br i1 %v5_e6c8, label %bb100, label %bb

bb:                                               ; preds = %dec_label_pc_e6b1
  %v6_e6c8 = shl i32 %v0_e6c4, %v3_e6c8
  br label %bb100

bb100:                                            ; preds = %dec_label_pc_e6b1, %bb
  %v0_e6ca = phi i32 [ %v0_e6c4, %dec_label_pc_e6b1 ], [ %v6_e6c8, %bb ]
  %v1_e6cc = load i32, i32* @ebp, align 4
  %v2_e6cc = add i32 %v1_e6cc, -16
  %v3_e6cc = inttoptr i32 %v2_e6cc to i32*
  store i32 %v0_e6ca, i32* %v3_e6cc, align 4
  %v0_e6cf = call i32 @function_e718()
  ret i32 %v0_e6cf

; uselistorder directives
  uselistorder label %bb100, { 1, 0 }
}

define i32 @function_e6e8() local_unnamed_addr {
dec_label_pc_e6e8:
  %eax.global-to-local = alloca i32, align 4
  %v0_e6e8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e6e8
}

define i32 @function_e718() local_unnamed_addr {
dec_label_pc_e718:
  %v0_e718 = load i32, i32* @ebp, align 4
  %v1_e718 = add i32 %v0_e718, -16
  %v2_e718 = inttoptr i32 %v1_e718 to i32*
  %v3_e718 = load i32, i32* %v2_e718, align 4
  %v1_e71b = and i32 %v3_e718, 8388608
  %v2_e71b = icmp eq i32 %v1_e71b, 0
  br i1 %v2_e71b, label %dec_label_pc_e72c, label %dec_label_pc_e724

dec_label_pc_e724:                                ; preds = %dec_label_pc_e718
  %v3_e724 = load i32, i32* %v2_e718, align 4
  %v5_e724 = udiv i32 %v3_e724, 256
  store i32 %v5_e724, i32* %v2_e718, align 4
  %v0_e728 = load i32, i32* @ebp, align 4
  %v1_e728 = add i32 %v0_e728, -20
  %v2_e728 = inttoptr i32 %v1_e728 to i32*
  %v3_e728 = load i32, i32* %v2_e728, align 4
  %v4_e728 = add i32 %v3_e728, 1
  store i32 %v4_e728, i32* %v2_e728, align 4
  %v0_e72c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_e72c

dec_label_pc_e72c:                                ; preds = %dec_label_pc_e724, %dec_label_pc_e718
  %v12_e732 = phi i32 [ %v0_e72c.pre, %dec_label_pc_e724 ], [ %v0_e718, %dec_label_pc_e718 ]
  %v1_e72c = add i32 %v12_e732, -20
  %v2_e72c = inttoptr i32 %v1_e72c to i32*
  %v3_e72c = load i32, i32* %v2_e72c, align 4
  %v2_e72f = mul i32 %v3_e72c, 16777216
  %v1_e732 = add i32 %v12_e732, -16
  %v2_e732 = inttoptr i32 %v1_e732 to i32*
  %v3_e732 = load i32, i32* %v2_e732, align 4
  %v5_e732 = or i32 %v3_e732, %v2_e72f
  store i32 %v5_e732, i32* %v2_e732, align 4
  %v0_e735 = load i32, i32* @ebp, align 4
  %v1_e735 = add i32 %v0_e735, -44
  %v2_e735 = inttoptr i32 %v1_e735 to i32*
  %v3_e735 = load i32, i32* %v2_e735, align 4
  %v1_e738 = add i32 %v3_e735, 12
  %v2_e738 = inttoptr i32 %v1_e738 to i32*
  %v3_e738 = load i32, i32* %v2_e738, align 4
  %v1_e73b = icmp eq i32 %v3_e738, 0
  %. = select i1 %v1_e73b, i32 0, i32 8388608
  %v1_e74b = add i32 %v0_e735, -16
  %v2_e74b = inttoptr i32 %v1_e74b to i32*
  %v3_e74b = load i32, i32* %v2_e74b, align 4
  %v5_e74b = or i32 %v3_e74b, %.
  store i32 %v5_e74b, i32* %v2_e74b, align 4
  %v0_e74e = load i32, i32* @ebp, align 4
  %v1_e74e = add i32 %v0_e74e, -16
  %v2_e74e = inttoptr i32 %v1_e74e to i32*
  %v3_e74e = load i32, i32* %v2_e74e, align 4
  store i32 %v3_e74e, i32* @eax, align 4
  %v1_e751 = add i32 %v0_e74e, -12
  %v2_e751 = inttoptr i32 %v1_e751 to i32*
  %v3_e751 = load i32, i32* %v2_e751, align 4
  %v1_e754 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_e754 = icmp eq i32 %v1_e754, %v3_e751
  br i1 %v3_e754, label %bb, label %dec_label_pc_e776

bb:                                               ; preds = %dec_label_pc_e72c
  %v1_e75b = call i32 @function_e77b()
  br label %dec_label_pc_e776

dec_label_pc_e776:                                ; preds = %dec_label_pc_e72c, %bb
  %v0_e75d = phi i32 [ %v3_e74e, %dec_label_pc_e72c ], [ %v1_e75b, %bb ]
  ret i32 %v0_e75d

; uselistorder directives
  uselistorder label %dec_label_pc_e776, { 1, 0 }
}

define i32 @function_e75f() local_unnamed_addr {
dec_label_pc_e75f:
  %eax.global-to-local = alloca i32, align 4
  %v0_e75f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e75f
}

define i32 @function_e77b() local_unnamed_addr {
dec_label_pc_e77b:
  %v0_e780 = load i32, i32* @eax, align 4
  ret i32 %v0_e780
}

define i32 @_ZN7CScriptC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e782:
  %v1_e79f = call i32 @function_1f6cc(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e7b0

bb:                                               ; preds = %dec_label_pc_e782
  %v1_e7ae = call i32 @function_e7b5()
  br label %dec_label_pc_e7b0

dec_label_pc_e7b0:                                ; preds = %bb, %dec_label_pc_e782
  %v2_e7ae = phi i32 [ %v1_e7ae, %bb ], [ 0, %dec_label_pc_e782 ]
  ret i32 %v2_e7ae
}

define i32 @function_e7b5() local_unnamed_addr {
dec_label_pc_e7b5:
  %v0_e7b6 = load i32, i32* @eax, align 4
  ret i32 %v0_e7b6
}

define i32 @_ZN7CScriptC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e7b8:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v2_e7d6 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_e7d6, i32* @eax, align 4
  %v1_e7dc = call i32 @function_1f7b2(i32 %v2_e7d6)
  store i32 %arg2, i32* @edx, align 8
  %v2_e7e4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_e7e4, i32* @eax, align 4
  %v2_e7ee = call i32 @function_1f3e6(i32 %v2_e7e4, i32 %arg2)
  store i32 %arg2, i32* @edx, align 8
  %v2_e7f9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e7f9, i32* @eax, align 4
  %v2_e803 = call i32 @function_1f396(i32 %v2_e7f9, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v3_e815 = load i32, i32* %stack_var_-24, align 4
  %v3_e81c = load i32, i32* %stack_var_-28, align 4
  %v4_e826 = call i32 @function_2000e(i32 %arg1, i32 %v3_e81c, i32 %v3_e815, i32 %v2_e7d6)
  store i32 %v2_e7d6, i32* @eax, align 4
  %v1_e831 = call i32 @function_1f7e8(i32 %v2_e7d6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_e842

bb:                                               ; preds = %dec_label_pc_e7b8
  %v1_e840 = call i32 @function_e860()
  store i32 %v1_e840, i32* @eax, align 4
  br label %dec_label_pc_e842

dec_label_pc_e842:                                ; preds = %bb, %dec_label_pc_e7b8
  %v0_e842 = call i32 @function_e85b()
  ret i32 %v0_e842

; uselistorder directives
  uselistorder i32 %v2_e7d6, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_e845() local_unnamed_addr {
dec_label_pc_e845:
  %eax.global-to-local = alloca i32, align 4
  %v0_e845 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e845
}

define i32 @function_e85b() local_unnamed_addr {
dec_label_pc_e85b:
  %v0_e85b = load i32, i32* @eax, align 4
  ret i32 %v0_e85b
}

define i32 @function_e860() local_unnamed_addr {
dec_label_pc_e860:
  %v0_e864 = load i32, i32* @eax, align 4
  ret i32 %v0_e864
}

define i32 @_ZN7CScriptD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e866:
  store i32 %arg1, i32* @eax, align 4
  %v1_e883 = call i32 @function_1f7e6(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Z7GetAlgoi(i32 %arg1) local_unnamed_addr {
dec_label_pc_e89b:
  %v1_e8b5 = and i32 %arg1, 3584
  %v2_e8b5 = icmp eq i32 %v1_e8b5, 0
  br i1 %v2_e8b5, label %dec_label_pc_e8c7, label %dec_label_pc_e8be

dec_label_pc_e8be:                                ; preds = %dec_label_pc_e89b
  %v9_e8be = icmp eq i32 %v1_e8b5, 512
  br i1 %v9_e8be, label %dec_label_pc_e8ce, label %dec_label_pc_e8d5

dec_label_pc_e8c7:                                ; preds = %dec_label_pc_e89b
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_e8da

dec_label_pc_e8ce:                                ; preds = %dec_label_pc_e8be
  store i32 1, i32* @eax, align 4
  br label %dec_label_pc_e8da

dec_label_pc_e8d5:                                ; preds = %dec_label_pc_e8be
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_e8da

dec_label_pc_e8da:                                ; preds = %dec_label_pc_e8d5, %dec_label_pc_e8ce, %dec_label_pc_e8c7
  %v2_e8e42 = phi i32 [ 0, %dec_label_pc_e8d5 ], [ 1, %dec_label_pc_e8ce ], [ 0, %dec_label_pc_e8c7 ]
  br i1 true, label %bb, label %dec_label_pc_e8e6

bb:                                               ; preds = %dec_label_pc_e8da
  %v1_e8e4 = call i32 @function_e8eb()
  br label %dec_label_pc_e8e6

dec_label_pc_e8e6:                                ; preds = %bb, %dec_label_pc_e8da
  %v2_e8e4 = phi i32 [ %v1_e8e4, %bb ], [ %v2_e8e42, %dec_label_pc_e8da ]
  ret i32 %v2_e8e4
}

define i32 @function_e8eb() local_unnamed_addr {
dec_label_pc_e8eb:
  %v0_e8ec = load i32, i32* @eax, align 4
  ret i32 %v0_e8ec
}

define i32 @_Z11GetAlgoNamei(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e8ed:
  %stack_var_-19 = alloca i32, align 4
  %v1_e90e = icmp eq i32 %arg2, 0
  br i1 %v1_e90e, label %dec_label_pc_e919, label %dec_label_pc_e912

dec_label_pc_e912:                                ; preds = %dec_label_pc_e8ed
  %v10_e912 = icmp eq i32 %arg2, 1
  br i1 %v10_e912, label %bb, label %dec_label_pc_e917

bb:                                               ; preds = %dec_label_pc_e912
  %v3_e915 = call i32 @function_e94e(i32 1, i32 %arg1)
  br label %dec_label_pc_e917

dec_label_pc_e917:                                ; preds = %bb, %dec_label_pc_e912
  %v0_e917 = call i32 @function_e980()
  ret i32 %v0_e917

dec_label_pc_e919:                                ; preds = %dec_label_pc_e8ed
  %v2_e919 = ptrtoint i32* %stack_var_-19 to i32
  ret i32 %v2_e919
}

define i32 @function_e949() local_unnamed_addr {
dec_label_pc_e949:
  %v1_e949 = call i32 @function_e9f7(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_e949
}

define i32 @function_e94e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e94e:
  %v0_e94e = load i32, i32* @ebp, align 4
  %v1_e94e = add i32 %v0_e94e, -14
  ret i32 %v1_e94e
}

define i32 @function_e973() local_unnamed_addr {
dec_label_pc_e973:
  %v0_e973 = load i32, i32* @ebp, align 4
  %v1_e973 = add i32 %v0_e973, -14
  %v1_e97e = call i32 @function_e9f7(i32 %v1_e973)
  ret i32 %v1_e97e
}

define i32 @function_e980() local_unnamed_addr {
dec_label_pc_e980:
  %v0_e980 = load i32, i32* @ebp, align 4
  %v1_e99a = add i32 %v0_e980, -28
  %v2_e99a = inttoptr i32 %v1_e99a to i32*
  %v3_e99a = load i32, i32* %v2_e99a, align 4
  ret i32 %v3_e99a
}

define i32 @function_e9a5() local_unnamed_addr {
dec_label_pc_e9a5:
  %v0_e9a5 = load i32, i32* @ebp, align 4
  %v1_e9a5 = add i32 %v0_e9a5, -13
  %v1_e9b0 = call i32 @function_e9f7(i32 %v1_e9a5)
  ret i32 %v1_e9b0

; uselistorder directives
  uselistorder i32 (i32)* @function_e9f7, { 2, 1, 0 }
}

define i32 @function_e9b3() local_unnamed_addr {
dec_label_pc_e9b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_e9b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e9b3
}

define i32 @function_e9ca() local_unnamed_addr {
dec_label_pc_e9ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_e9ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e9ca
}

define i32 @function_e9e1() local_unnamed_addr {
dec_label_pc_e9e1:
  %eax.global-to-local = alloca i32, align 4
  %v0_e9e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e9e1
}

define i32 @function_e9f7(i32 %arg1) local_unnamed_addr {
dec_label_pc_e9f7:
  %v0_e9f7 = load i32, i32* @ebp, align 4
  %v1_e9f7 = add i32 %v0_e9f7, -28
  %v2_e9f7 = inttoptr i32 %v1_e9f7 to i32*
  %v3_e9f7 = load i32, i32* %v2_e9f7, align 4
  ret i32 %v3_e9f7
}

define i32 @_ZNK9COutPoint16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ea14:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-40, align 4
  %v1_ea5a = add i32 %arg1, 36
  %v2_ea68 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_ea68, i32* @eax, align 4
  %v3_ea6e = call i32 @function_1c27c(i32 %v2_ea68, i32 %arg1, i32 %v1_ea5a)
  store i32 %v2_ea68, i32* @eax, align 4
  %v1_ea79 = call i32 @function_201e0(i32 %v2_ea68)
  %v0_ea7e = load i32, i32* @ebx, align 4
  %v2_ea94 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_ea94, i32* @eax, align 4
  %sext = mul i32 %v0_ea7e, 16777216
  %v5_ea9a = sdiv i32 %sext, 16777216
  %v6_ea9a = call i32 @function_2020d(i32 %v2_ea94, i32 %v1_ea79, i32 %arg2, i32 %arg3, i32 %v5_ea9a)
  ret i32 %v6_ea9a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK5CTxIn16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eabc:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v0_eb03 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v2_eb19 = ptrtoint i32* %stack_var_-32 to i32
  %sext = mul i32 %v0_eb03, 16777216
  %v5_eb1f = sdiv i32 %sext, 16777216
  %v6_eb1f = call i32 @function_20498(i32 %v2_eb19, i32 %arg1, i32 %arg2, i32 %arg3, i32 %v5_eb1f)
  %v1_eb2a = add i32 %arg1, 36
  store i32 %v1_eb2a, i32* %edx.global-to-local, align 8
  %v0_eb2d = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_eb19, i32* @eax, align 4
  %sext1 = mul i32 %v0_eb2d, 16777216
  %v5_eb4b = sdiv i32 %sext1, 16777216
  %v6_eb4b = call i32 @function_204f4(i32 %v2_eb19, i32 %v1_eb2a, i32 %arg2, i32 %arg3, i32 %v5_eb4b)
  %v5_eb50 = add i32 %v6_eb4b, %v6_eb1f
  %v1_eb56 = add i32 %arg1, ptrtoint (i32* @global_var_30.1817 to i32)
  store i32 %v1_eb56, i32* %edx.global-to-local, align 8
  %v0_eb59 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_eb19, i32* @eax, align 4
  %sext2 = mul i32 %v0_eb59, 16777216
  %v5_eb75 = sdiv i32 %sext2, 16777216
  %v6_eb75 = call i32 @function_1f9a8(i32 %v2_eb19, i32 %v1_eb56, i32 %arg2, i32 %arg3, i32 %v5_eb75)
  %v5_eb7a = add i32 %v6_eb75, %v5_eb50
  store i32 %v5_eb7a, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_eb8c

bb:                                               ; preds = %dec_label_pc_eabc
  %v2_eb8a = call i32 @function_eb91(i32 %v5_eb7a)
  br label %dec_label_pc_eb8c

dec_label_pc_eb8c:                                ; preds = %bb, %dec_label_pc_eabc
  %v3_eb8a = phi i32 [ %v2_eb8a, %bb ], [ %v5_eb7a, %dec_label_pc_eabc ]
  ret i32 %v3_eb8a

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_eb91(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb91:
  %v0_eb97 = load i32, i32* @eax, align 4
  ret i32 %v0_eb97
}

define i32 @_ZN6CTxOutC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb98:
  %ebx.global-to-local = alloca i32, align 4
  %v0_eb9b = load i32, i32* %ebx.global-to-local, align 4
  %v1_ebb3 = add i32 %arg1, 8
  store i32 %v1_ebb3, i32* @eax, align 4
  %v1_ebb9 = call i32 @function_1d31a(i32 %v1_ebb3)
  %v1_ebc4 = call i32 @function_1d842(i32 %arg1)
  store i32 %v0_eb9b, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK6CTxOut16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ebfc:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v0_ec42 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* @edx, align 8
  %v2_ec58 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_ec58, i32* @eax, align 4
  %sext = mul i32 %v0_ec42, 16777216
  %v5_ec5e = sdiv i32 %sext, 16777216
  %v6_ec5e = call i32 @function_20690(i32 %v2_ec58, i32 %arg1, i32 %arg2, i32 %arg3, i32 %v5_ec5e)
  %v1_ec69 = add i32 %arg1, 8
  store i32 %v1_ec69, i32* %edx.global-to-local, align 8
  %v0_ec6c = load i32, i32* @ebx, align 4
  store i32 %v2_ec58, i32* @eax, align 4
  %sext1 = mul i32 %v0_ec6c, 16777216
  %v5_ec88 = sdiv i32 %sext1, 16777216
  %v6_ec88 = call i32 @function_20634(i32 %v2_ec58, i32 %v1_ec69, i32 %arg2, i32 %arg3, i32 %v5_ec88)
  %v5_ec8d = add i32 %v6_ec88, %v6_ec5e
  store i32 %v5_ec8d, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_ec9f

bb:                                               ; preds = %dec_label_pc_ebfc
  %v2_ec9d = call i32 @function_eca4(i32 %v5_ec8d)
  br label %dec_label_pc_ec9f

dec_label_pc_ec9f:                                ; preds = %bb, %dec_label_pc_ebfc
  %v3_ec9d = phi i32 [ %v2_ec9d, %bb ], [ %v5_ec8d, %dec_label_pc_ebfc ]
  ret i32 %v3_ec9d

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_eca4(i32 %arg1) local_unnamed_addr {
dec_label_pc_eca4:
  %v0_eca9 = load i32, i32* @eax, align 4
  ret i32 %v0_eca9
}

define i32 @_ZN6CTxOut7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_ecaa:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %arg1, align 4
  %v1_ecca = add i32 %tmp100, 4
  %v2_ecca = inttoptr i32 %v1_ecca to i32*
  store i32 -1, i32* %v2_ecca, align 4
  %v1_ecd4 = add i32 %tmp100, 8
  store i32 %v1_ecd4, i32* @eax, align 4
  %v1_ecda = call i32 @function_2058a(i32 %v1_ecd4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @_ZNK6CTxOut6IsNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_ecf2:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_ecf2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_ed0c = add i32 %tmp100, 4
  %v2_ed0c = inttoptr i32 %v1_ed0c to i32*
  %v3_ed0c = load i32, i32* %v2_ed0c, align 4
  %v2_ed0f = load i32, i32* %arg1, align 4
  %v2_ed11 = and i32 %v2_ed0f, %v3_ed0c
  %v10_ed13 = icmp eq i32 %v2_ed11, -1
  %v1_ed16 = zext i1 %v10_ed13 to i32
  %v3_ed16 = and i32 %v2_ed11, -256
  %v4_ed16 = or i32 %v1_ed16, %v3_ed16
  store i32 %v0_ecf2, i32* %ebp.global-to-local, align 4
  ret i32 %v4_ed16

; uselistorder directives
  uselistorder i32 %v2_ed11, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZNK12CTransaction16GetSerializeSizeEii(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ed2c:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %tmp117 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-48, align 4
  %v0_ed74 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v2_ed8a = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_ed8a, i32* @eax, align 4
  %sext = mul i32 %v0_ed74, 16777216
  %v5_ed90 = sdiv i32 %sext, 16777216
  %v6_ed90 = call i32 @function_20919(i32 %v2_ed8a, i32 %tmp117, i32 %arg2, i32 %arg3, i32 %v5_ed90)
  %v2_ed9b = load i32, i32* %arg1, align 4
  %v1_eda3 = add i32 %tmp117, 4
  store i32 %v1_eda3, i32* %edx.global-to-local, align 8
  %v0_eda6 = load i32, i32* @edi, align 4
  store i32 %v2_ed8a, i32* @eax, align 4
  %sext1 = mul i32 %v0_eda6, 16777216
  %v5_edc4 = sdiv i32 %sext1, 16777216
  %v6_edc4 = call i32 @function_20977(i32 %v2_ed8a, i32 %v1_eda3, i32 %arg2, i32 %v2_ed9b, i32 %v5_edc4)
  %v5_edc9 = add i32 %v6_edc4, %v6_ed90
  %v1_edcf = add i32 %tmp117, 16
  store i32 %v1_edcf, i32* %edx.global-to-local, align 8
  %v0_edd2 = load i32, i32* @esi, align 4
  %sext2 = mul i32 %v0_edd2, 16777216
  %v5_edf0 = sdiv i32 %sext2, 16777216
  %v6_edf0 = call i32 @function_209d3(i32 %v2_ed8a, i32 %v1_edcf, i32 %arg2, i32 %v2_ed9b, i32 %v5_edf0)
  %v5_edf5 = add i32 %v6_edf0, %v5_edc9
  %v1_edfb = add i32 %tmp117, 28
  store i32 %v1_edfb, i32* @edx, align 8
  %v0_edfe = load i32, i32* @ebx, align 4
  %sext3 = mul i32 %v0_edfe, 16777216
  %v5_ee1a = sdiv i32 %sext3, 16777216
  %v6_ee1a = call i32 @function_1fc18(i32 %v2_ed8a, i32 %v1_edfb, i32 %arg2, i32 %v2_ed9b, i32 %v5_ee1a)
  %v5_ee1f = add i32 %v6_ee1a, %v5_edf5
  store i32 0, i32* %edx.global-to-local, align 8
  ret i32 %v5_ee1f

; uselistorder directives
  uselistorder i32 %v2_ed9b, { 2, 1, 0 }
  uselistorder i32 %tmp117, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN6CTxOutD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee3e:
  %v1_ee58 = add i32 %arg1, 8
  store i32 %v1_ee58, i32* @eax, align 4
  %v1_ee5e = call i32 @function_1d6a4(i32 %v1_ee58)
  ret i32 0
}

define i32 @_ZN6CTxOutC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee76:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_ee96 = add i32 %arg2, 4
  %v2_ee96 = inttoptr i32 %v1_ee96 to i32*
  %v3_ee96 = load i32, i32* %v2_ee96, align 4
  %v1_ee99 = inttoptr i32 %arg2 to i32*
  %v2_ee99 = load i32, i32* %v1_ee99, align 4
  store i32 %v2_ee99, i32* %arg1, align 4
  %v2_eea0 = add i32 %tmp103, 4
  %v3_eea0 = inttoptr i32 %v2_eea0 to i32*
  store i32 %v3_ee96, i32* %v3_eea0, align 4
  %v1_eea6 = add i32 %arg2, 8
  %v1_eeac = add i32 %tmp103, 8
  store i32 %v1_eeac, i32* @eax, align 4
  %v2_eeb6 = call i32 @function_1d62e(i32 %v1_eeac, i32 %v1_eea6)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @_ZN6CCoinsC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_eece:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v4_eed5 = ptrtoint i8* %arg1 to i32
  store i8 0, i8* %arg1, align 1
  %v2_eeec = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_eeec, i32* @eax, align 4
  %v1_eef2 = call i32 @function_20cf2(i32 %v2_eeec)
  %v2_eef7 = ptrtoint i32* %stack_var_-40 to i32
  %v1_eefd = call i32 @memmove.1726(i32 %v2_eef7)
  %v1_ef05 = add i32 %v4_eed5, 4
  store i32 %v2_eef7, i32* @eax, align 4
  %v4_ef21 = call i32 @function_20d5e(i32 %v1_ef05, i32 0, i32 %v2_eef7, i32 %v2_eeec)
  store i32 %v2_eef7, i32* @eax, align 4
  %v1_ef2c = call i32 @function_1dd0c(i32 %v2_eef7)
  store i32 %v2_eeec, i32* @eax, align 4
  %v1_ef37 = call i32 @function_20d28(i32 %v2_eeec)
  %v1_ef3f = add i32 %v4_eed5, 16
  %v2_ef3f = inttoptr i32 %v1_ef3f to i32*
  store i32 0, i32* %v2_ef3f, align 4
  %v1_ef49 = add i32 %v4_eed5, 20
  %v2_ef49 = inttoptr i32 %v1_ef49 to i32*
  store i32 0, i32* %v2_ef49, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ef84

bb:                                               ; preds = %dec_label_pc_eece
  %v1_ef5a = call i32 @function_ef89()
  br label %dec_label_pc_ef84

dec_label_pc_ef84:                                ; preds = %dec_label_pc_eece, %bb
  %v0_ef5c = phi i32 [ 0, %dec_label_pc_eece ], [ %v1_ef5a, %bb ]
  ret i32 %v0_ef5c

; uselistorder directives
  uselistorder label %dec_label_pc_ef84, { 1, 0 }
}

define i32 @function_ef5e() local_unnamed_addr {
dec_label_pc_ef5e:
  %eax.global-to-local = alloca i32, align 4
  %v0_ef5e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_ef5e, i32* @ebx, align 4
  %v0_ef60 = load i32, i32* @ebp, align 4
  %v1_ef60 = add i32 %v0_ef60, -36
  store i32 %v1_ef60, i32* @eax, align 4
  %v1_ef66 = call i32 @function_1dd0c(i32 %v1_ef60)
  store i32 %v1_ef66, i32* %eax.global-to-local, align 4
  %v0_ef6b = call i32 @function_ef6f()
  store i32 %v0_ef6b, i32* %eax.global-to-local, align 4
  ret i32 %v0_ef6b

; uselistorder directives
  uselistorder i32 (i32)* @function_1dd0c, { 1, 0 }
}

define i32 @function_ef6d() local_unnamed_addr {
dec_label_pc_ef6d:
  %eax.global-to-local = alloca i32, align 4
  %v0_ef6d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ef6d
}

define i32 @function_ef6f() local_unnamed_addr {
dec_label_pc_ef6f:
  %v0_ef6f = load i32, i32* @ebp, align 4
  %v1_ef6f = add i32 %v0_ef6f, -13
  store i32 %v1_ef6f, i32* @eax, align 4
  %v1_ef75 = call i32 @function_20d28(i32 %v1_ef6f)
  %v0_ef7a = load i32, i32* @ebx, align 4
  ret i32 %v0_ef7a

; uselistorder directives
  uselistorder i32 (i32)* @function_20d28, { 1, 0 }
}

define i32 @function_ef89() local_unnamed_addr {
dec_label_pc_ef89:
  %v0_ef8e = load i32, i32* @eax, align 4
  ret i32 %v0_ef8e
}

define i32 @_ZN12CBlockHeaderC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef90:
  store i32 %arg1, i32* @eax, align 4
  %v1_efc9 = call i32 @function_1e118(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_efda

bb:                                               ; preds = %dec_label_pc_ef90
  %v1_efd8 = call i32 @function_efdf()
  br label %dec_label_pc_efda

dec_label_pc_efda:                                ; preds = %bb, %dec_label_pc_ef90
  %v2_efd8 = phi i32 [ %v1_efd8, %bb ], [ 0, %dec_label_pc_ef90 ]
  ret i32 %v2_efd8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_efdf() local_unnamed_addr {
dec_label_pc_efdf:
  %v0_efe0 = load i32, i32* @eax, align 4
  ret i32 %v0_efe0
}

define i32 @_ZNK12CBlockHeader7GetAlgoEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_efe2:
  %v2_effc = load i32, i32* %arg1, align 4
  store i32 %v2_effc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f012

bb:                                               ; preds = %dec_label_pc_efe2
  %v2_f010 = call i32 @function_f017(i32 %v2_effc)
  br label %dec_label_pc_f012

dec_label_pc_f012:                                ; preds = %bb, %dec_label_pc_efe2
  %v3_f010 = phi i32 [ %v2_f010, %bb ], [ %v2_effc, %dec_label_pc_efe2 ]
  ret i32 %v3_f010
}

define i32 @function_f017(i32 %arg1) local_unnamed_addr {
dec_label_pc_f017:
  %v0_f018 = load i32, i32* @eax, align 4
  ret i32 %v0_f018
}

define i32 @_ZNK12CBlockHeader16GetSerializeSizeEii(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f01a:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = call i8 @__decompiler_undefined_function_4()
  %tmp101 = call i8 @__decompiler_undefined_function_4()
  %stack_var_-48 = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-48, align 4
  store i32 %tmp119, i32* @edx, align 8
  %v0_f062 = load i32, i32* @ecx, align 4
  %v2_f078 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_f078, i32* @eax, align 4
  %sext = mul i32 %v0_f062, 16777216
  %v5_f07e = sdiv i32 %sext, 16777216
  %v6_f07e = call i32 @function_20c07(i32 %v2_f078, i32 %tmp119, i32 %arg2, i32 %arg3, i32 %v5_f07e)
  %v2_f089 = load i32, i32* %arg1, align 4
  %v1_f091 = add i32 %tmp119, 4
  store i32 %v2_f078, i32* @eax, align 4
  %v5_f0b4 = sext i8 %tmp101 to i32
  %v6_f0b4 = call i32 @function_20f7c(i32 %v2_f078, i32 %v1_f091, i32 %arg2, i32 %v2_f089, i32 %v5_f0b4)
  %v5_f0b9 = add i32 %v6_f0b4, %v6_f07e
  %v1_f0bf = add i32 %tmp119, 36
  store i32 %v2_f078, i32* @eax, align 4
  %v5_f0e2 = sext i8 %tmp100 to i32
  %v6_f0e2 = call i32 @function_20f7c(i32 %v2_f078, i32 %v1_f0bf, i32 %arg2, i32 %v2_f089, i32 %v5_f0e2)
  %v5_f0e7 = add i32 %v6_f0e2, %v5_f0b9
  %v1_f0ed = add i32 %tmp119, 68
  %v0_f0f0 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v2_f078, i32* @eax, align 4
  %sext1 = mul i32 %v0_f0f0, 16777216
  %v5_f10e = sdiv i32 %sext1, 16777216
  %v6_f10e = call i32 @function_1ff06(i32 %v2_f078, i32 %v1_f0ed, i32 %arg2, i32 %v2_f089, i32 %v5_f10e)
  %v5_f113 = add i32 %v6_f10e, %v5_f0e7
  %v1_f119 = add i32 %tmp119, 72
  %v0_f11c = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_f078, i32* @eax, align 4
  %sext2 = mul i32 %v0_f11c, 16777216
  %v5_f13a = sdiv i32 %sext2, 16777216
  %v6_f13a = call i32 @function_1ff06(i32 %v2_f078, i32 %v1_f119, i32 %arg2, i32 %v2_f089, i32 %v5_f13a)
  %v5_f13f = add i32 %v6_f13a, %v5_f113
  %v1_f145 = add i32 %tmp119, 76
  %v0_f148 = load i32, i32* @ebx, align 4
  store i32 %v2_f078, i32* @eax, align 4
  %sext3 = mul i32 %v0_f148, 16777216
  %v5_f164 = sdiv i32 %sext3, 16777216
  %v6_f164 = call i32 @function_1ff06(i32 %v2_f078, i32 %v1_f145, i32 %arg2, i32 %v2_f089, i32 %v5_f164)
  %v5_f169 = add i32 %v6_f164, %v5_f13f
  store i32 %v5_f169, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f17b

bb:                                               ; preds = %dec_label_pc_f01a
  %v2_f179 = call i32 @function_f180(i32 %v5_f169)
  br label %dec_label_pc_f17b

dec_label_pc_f17b:                                ; preds = %bb, %dec_label_pc_f01a
  %v3_f179 = phi i32 [ %v2_f179, %bb ], [ %v5_f169, %dec_label_pc_f01a ]
  ret i32 %v3_f179

; uselistorder directives
  uselistorder i32 %v2_f089, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp119, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1ff06, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_20f7c, { 1, 0 }
  uselistorder i32 %arg2, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_f180(i32 %arg1) local_unnamed_addr {
dec_label_pc_f180:
  %v0_f187 = load i32, i32* @eax, align 4
  ret i32 %v0_f187
}

define i32 @_ZN12CBlockHeader7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_f188:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 2, i32* %arg1, align 4
  %v1_f1ab = add i32 %tmp102, 4
  %v3_f1c1 = call i32 @__stack_chk_fail.192(i32 %v1_f1ab, i32 0, i32 0)
  %v1_f1c9 = add i32 %tmp102, 36
  %v3_f1df = call i32 @__stack_chk_fail.192(i32 %v1_f1c9, i32 0, i32 0)
  %v1_f1e7 = add i32 %tmp102, 68
  %v2_f1e7 = inttoptr i32 %v1_f1e7 to i32*
  store i32 0, i32* %v2_f1e7, align 4
  %v1_f1f1 = add i32 %tmp102, 72
  %v2_f1f1 = inttoptr i32 %v1_f1f1 to i32*
  store i32 0, i32* %v2_f1f1, align 4
  %v1_f1fb = add i32 %tmp102, 76
  %v2_f1fb = inttoptr i32 %v1_f1fb to i32*
  store i32 0, i32* %v2_f1fb, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__stack_chk_fail.192, { 1, 0 }
}

define i32 @_ZNK12CBlockHeader10GetPoWHashEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f216:
  %v1_f23c = icmp eq i32 %arg3, 0
  br i1 %v1_f23c, label %dec_label_pc_f247, label %dec_label_pc_f240

dec_label_pc_f240:                                ; preds = %dec_label_pc_f216
  %v10_f240 = icmp eq i32 %arg3, 1
  store i1 %v10_f240, i1* @zf, align 1
  br i1 %v10_f240, label %bb, label %dec_label_pc_f245

bb:                                               ; preds = %dec_label_pc_f240
  %v4_f243 = call i32 @function_f25e(i32 1, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_f245

dec_label_pc_f245:                                ; preds = %bb, %dec_label_pc_f240
  %v0_f245 = call i32 @function_f2af()
  ret i32 %v0_f245

dec_label_pc_f247:                                ; preds = %dec_label_pc_f216
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 %v10_f240, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f259() local_unnamed_addr {
dec_label_pc_f259:
  %v2_f25c = call i32 @function_f2c4(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  ret i32 %v2_f25c
}

define i32 @function_f25e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f25e:
  %v0_f25e = load i32, i32* @ebp, align 4
  %v1_f25e = add i32 %v0_f25e, -44
  store i32 %v1_f25e, i32* @eax, align 4
  %v1_f264 = call i32 @function_134ea(i32 %v1_f25e)
  %v0_f269 = load i32, i32* @ebp, align 4
  %v1_f269 = add i32 %v0_f269, -64
  %v2_f269 = inttoptr i32 %v1_f269 to i32*
  %v3_f269 = load i32, i32* %v2_f269, align 4
  ret i32 %v3_f269
}

define i32 @function_f27a() local_unnamed_addr {
dec_label_pc_f27a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_f27a = load i32, i32* %ebx.global-to-local, align 4
  %v1_f27a = add i32 %v0_f27a, 1435223109
  %v2_f27a = inttoptr i32 %v1_f27a to i32*
  %v3_f27a = load i32, i32* %v2_f27a, align 4
  %v4_f27a = add i32 %v3_f27a, -1
  store i32 %v4_f27a, i32* %v2_f27a, align 4
  %v0_f280 = load i32, i32* %eax.global-to-local, align 4
  %v1_f280 = trunc i32 %v0_f280 to i8
  %not. = icmp ugt i8 %v1_f280, -120
  %v3_f280 = urem i8 %v1_f280, ptrtoint (i8* @global_var_89.1818 to i8)
  %v4_f280 = zext i8 %v3_f280 to i32
  %v6_f280 = and i32 %v0_f280, -65536
  %v10_f280 = select i1 %not., i32 256, i32 0
  %v11_f280 = or i32 %v4_f280, %v6_f280
  %v12_f280 = or i32 %v11_f280, %v10_f280
  store i32 %v12_f280, i32* %eax.global-to-local, align 4
  %v0_f282 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f282 = add i32 %v0_f282, 1351211093
  %v2_f282 = inttoptr i32 %v1_f282 to i8*
  %v3_f282 = load i8, i8* %v2_f282, align 1
  %v4_f282 = load i32, i32* %ecx.global-to-local, align 4
  %v5_f282 = trunc i32 %v4_f282 to i8
  %v6_f282 = load i1, i1* %cf.global-to-local, align 1
  %v7_f282 = zext i1 %v6_f282 to i8
  %v8_f282 = add i8 %v5_f282, %v3_f282
  %v9_f282 = add i8 %v8_f282, %v7_f282
  store i8 %v9_f282, i8* %v2_f282, align 1
  %v0_f288 = load i32, i32* %eax.global-to-local, align 4
  %v1_f288 = trunc i32 %v0_f288 to i8
  %v2_f288 = add i8 %v1_f288, -117
  %v16_f288 = zext i8 %v2_f288 to i32
  %v18_f288 = and i32 %v0_f288, -256
  %v19_f288 = or i32 %v16_f288, %v18_f288
  %v1_f28b = load i32, i32* %ecx.global-to-local, align 4
  %v2_f28b = add i32 %v1_f28b, 1435174992
  %v3_f28b = inttoptr i32 %v2_f28b to double*
  %v4_f28b = load double, double* %v3_f28b, align 4
  %v5_f28b = fpext double %v4_f28b to x86_fp80
  %v6_f28b = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_f28b = fmul x86_fp80 %v5_f28b, %v6_f28b
  store x86_fp80 %v7_f28b, x86_fp80* %st0.global-to-local, align 4
  %v1_f291 = add i32 %v1_f28b, -1
  store i32 %v1_f291, i32* %ecx.global-to-local, align 4
  %v2_f294 = or i8 %v2_f288, -117
  store i1 false, i1* %cf.global-to-local, align 1
  %v8_f294 = zext i8 %v2_f294 to i32
  %v11_f294 = or i32 %v8_f294, %v18_f288
  store i32 %v11_f294, i32* %eax.global-to-local, align 4
  store i32 %v11_f294, i32* %stack_var_-16, align 4
  %v0_f29a = load i32, i32* %ebx.global-to-local, align 4
  %v1_f29a = add i32 %v0_f29a, 1351215189
  %v2_f29a = inttoptr i32 %v1_f29a to i8*
  %v3_f29a = load i8, i8* %v2_f29a, align 1
  %v5_f29a = trunc i32 %v1_f291 to i8
  %v8_f29a = add i8 %v3_f29a, %v5_f29a
  %v28_f29a = icmp ult i8 %v8_f29a, %v3_f29a
  store i1 %v28_f29a, i1* %cf.global-to-local, align 1
  store i8 %v8_f29a, i8* %v2_f29a, align 1
  %v0_f2a0 = load i32, i32* %eax.global-to-local, align 4
  %v1_f2a0 = trunc i32 %v0_f2a0 to i8
  %v2_f2a0 = load i1, i1* %cf.global-to-local, align 1
  %v3_f2a0 = zext i1 %v2_f2a0 to i8
  %v4_f2a0 = add i8 %v1_f2a0, -117
  %v5_f2a0 = add i8 %v4_f2a0, %v3_f2a0
  %v22_f2a0 = icmp ule i8 %v5_f2a0, %v1_f2a0
  %v23_f2a0 = icmp ugt i8 %v1_f2a0, 116
  %v24_f2a0 = select i1 %v2_f2a0, i1 %v22_f2a0, i1 %v23_f2a0
  store i1 %v24_f2a0, i1* %cf.global-to-local, align 1
  %v25_f2a0 = zext i8 %v5_f2a0 to i32
  %v27_f2a0 = and i32 %v0_f2a0, -256
  %v28_f2a0 = or i32 %v25_f2a0, %v27_f2a0
  store i32 %v28_f2a0, i32* %eax.global-to-local, align 4
  %v0_f2a4 = load i32, i32* %edx.global-to-local, align 8
  %v2_f2a4 = add i32 %v28_f2a0, 24
  %v3_f2a4 = inttoptr i32 %v2_f2a4 to i32*
  store i32 %v0_f2a4, i32* %v3_f2a4, align 4
  %v0_f2a7 = load i32, i32* @ebp, align 4
  %v1_f2a7 = add i32 %v0_f2a7, -16
  %v2_f2a7 = inttoptr i32 %v1_f2a7 to i32*
  %v3_f2a7 = load i32, i32* %v2_f2a7, align 4
  store i32 %v3_f2a7, i32* %edx.global-to-local, align 8
  %v1_f2aa = load i32, i32* %eax.global-to-local, align 4
  %v2_f2aa = add i32 %v1_f2aa, 28
  %v3_f2aa = inttoptr i32 %v2_f2aa to i32*
  store i32 %v3_f2a7, i32* %v3_f2aa, align 4
  %v0_f2ad = load i32, i32* %stack_var_-16, align 4
  %v2_f2ad = call i32 @function_f2c4(i32 %v0_f2ad, i32 %v19_f288)
  store i32 %v2_f2ad, i32* %eax.global-to-local, align 4
  ret i32 %v2_f2ad

; uselistorder directives
  uselistorder i8 %v5_f2a0, { 1, 0 }
  uselistorder i8 %v3_f29a, { 1, 0 }
  uselistorder i8 %v1_f280, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_f2c4, { 1, 0 }
}

define i32 @function_f2af() local_unnamed_addr {
dec_label_pc_f2af:
  %v0_f2af = load i32, i32* @ebp, align 4
  %v1_f2af = add i32 %v0_f2af, -60
  %v2_f2af = inttoptr i32 %v1_f2af to i32*
  %v3_f2af = load i32, i32* %v2_f2af, align 4
  ret i32 %v3_f2af
}

define i32 @function_f2c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f2c4:
  %v0_f2c4 = load i32, i32* @ebp, align 4
  %v1_f2c4 = add i32 %v0_f2c4, -60
  %v2_f2c4 = inttoptr i32 %v1_f2c4 to i32*
  %v3_f2c4 = load i32, i32* %v2_f2c4, align 4
  ret i32 %v3_f2c4
}

define i32 @_ZNK12CBlockHeader12GetBlockTimeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f2dc:
  %ebp.global-to-local = alloca i32, align 4
  %v0_f2dc = load i32, i32* %ebp.global-to-local, align 4
  %v1_f2f6 = add i32 %arg1, 68
  %v2_f2f6 = inttoptr i32 %v1_f2f6 to i32*
  %v3_f2f6 = load i32, i32* %v2_f2f6, align 4
  store i32 %v0_f2dc, i32* %ebp.global-to-local, align 4
  ret i32 %v3_f2f6
}

define i32 @_ZN6CBlockC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f312:
  store i32 %arg1, i32* @eax, align 4
  %v1_f330 = call i32 @function_1e2a2(i32 %arg1)
  %v1_f338 = add i32 %arg1, 80
  store i32 %v1_f338, i32* @eax, align 4
  %v1_f33e = call i32 @function_212d0(i32 %v1_f338)
  %v1_f346 = add i32 %arg1, ptrtoint (i32* @global_var_5c.1819 to i32)
  store i32 %v1_f346, i32* @eax, align 4
  %v1_f34c = call i32 @function_21380(i32 %v1_f346)
  store i32 %arg1, i32* @eax, align 4
  %v1_f357 = call i32 @function_1e762(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNK6CBlock16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f3a2:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_f3a5 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v0_f3e8 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v2_f3fe = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_f3fe, i32* @eax, align 4
  %sext = mul i32 %v0_f3e8, 16777216
  %v5_f404 = sdiv i32 %sext, 16777216
  %v6_f404 = call i32 @function_214bf(i32 %v2_f3fe, i32 %arg1, i32 %arg2, i32 %arg3, i32 %v5_f404)
  store i1 false, i1* @cf, align 1
  %v1_f40f = add i32 %arg1, 80
  store i32 %v1_f40f, i32* %edx.global-to-local, align 8
  %v0_f412 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_f3fe, i32* @eax, align 4
  %sext1 = mul i32 %v0_f412, 16777216
  %v5_f42e = sdiv i32 %sext1, 16777216
  %v6_f42e = call i32 @function_2151b(i32 %v2_f3fe, i32 %v1_f40f, i32 %arg2, i32 %arg3, i32 %v5_f42e)
  %v5_f433 = add i32 %v6_f42e, %v6_f404
  store i32 0, i32* %edx.global-to-local, align 8
  store i32 %v0_f3a5, i32* %ebx.global-to-local, align 4
  ret i32 %v5_f433

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN6CBlock7SetNullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f450:
  store i32 %arg1, i32* @eax, align 4
  %v1_f46d = call i32 @function_1e5d8(i32 %arg1)
  %v1_f475 = add i32 %arg1, 80
  store i32 %v1_f475, i32* @eax, align 4
  %v1_f47b = call i32 @function_21626(i32 %v1_f475)
  %v1_f483 = add i32 %arg1, ptrtoint (i32* @global_var_5c.1819 to i32)
  store i32 %v1_f483, i32* @eax, align 4
  %v1_f489 = call i32 @function_21664(i32 %v1_f483)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZNK12CChainParams16ProofOfWorkLimitEi(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4a2:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_f4c9 = mul i32 %tmp3, 20
  %v5_f4cf = add i32 %arg1, add (i32 ptrtoint (i32* @global_var_30.1817 to i32), i32 12)
  %v1_f4d2 = add i32 %v5_f4cf, %v2_f4c9
  ret i32 %v1_f4d2
}

define i32 @_ZN12CTransactionD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4e8:
  %v1_f503 = add i32 %arg1, 16
  %v4_f503 = icmp ugt i32 %arg1, -17
  store i1 %v4_f503, i1* @cf, align 1
  store i32 %v1_f503, i32* @eax, align 4
  %v1_f509 = call i32 @function_2105c(i32 %v1_f503)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f528

bb:                                               ; preds = %dec_label_pc_f4e8
  %v1_f511 = add i32 %arg1, 4
  %v2_f526 = call i32 @function_f549(i32 %v1_f511)
  store i32 %v2_f526, i32* @eax, align 4
  br label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %bb, %dec_label_pc_f4e8
  %v0_f528 = call i32 @function_f544()
  ret i32 %v0_f528

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_f52b() local_unnamed_addr {
dec_label_pc_f52b:
  %eax.global-to-local = alloca i32, align 4
  %v0_f52b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f52b
}

define i32 @function_f544() local_unnamed_addr {
dec_label_pc_f544:
  %v0_f544 = load i32, i32* @eax, align 4
  ret i32 %v0_f544
}

define i32 @function_f549(i32 %arg1) local_unnamed_addr {
dec_label_pc_f549:
  %v0_f54e = load i32, i32* @eax, align 4
  ret i32 %v0_f54e
}

define i32 @_ZN12CTransactionC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f550:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_f571 = inttoptr i32 %arg2 to i32*
  %v2_f571 = load i32, i32* %v1_f571, align 4
  store i32 %v2_f571, i32* %arg1, align 4
  %v1_f57b = add i32 %arg2, 4
  store i32 %v1_f57b, i32* @edx, align 8
  %v1_f581 = add i32 %tmp103, 4
  %v5_f581 = icmp ugt i32* %arg1, inttoptr (i32 -5 to i32*)
  store i1 %v5_f581, i1* @cf, align 1
  store i32 %v1_f581, i32* @eax, align 4
  %v2_f58b = call i32 @function_2184e(i32 %v1_f581, i32 %v1_f57b)
  %v1_f593 = add i32 %arg2, 16
  %v1_f599 = add i32 %tmp103, 16
  %v4_f599 = icmp ugt i32* %arg1, inttoptr (i32 -17 to i32*)
  store i1 %v4_f599, i1* @cf, align 1
  store i32 %v1_f599, i32* @eax, align 4
  %v2_f5a3 = call i32 @function_2129a(i32 %v1_f599, i32 %v1_f593)
  %v1_f5ab = add i32 %arg2, 28
  %v2_f5ab = inttoptr i32 %v1_f5ab to i32*
  %v3_f5ab = load i32, i32* %v2_f5ab, align 4
  %v2_f5b1 = add i32 %tmp103, 28
  %v3_f5b1 = inttoptr i32 %v2_f5b1 to i32*
  store i32 %v3_f5ab, i32* %v3_f5b1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f5dc

bb:                                               ; preds = %dec_label_pc_f550
  %v1_f5be = call i32 @function_f5e1()
  br label %dec_label_pc_f5dc

dec_label_pc_f5dc:                                ; preds = %dec_label_pc_f550, %bb
  %v0_f5c0 = phi i32 [ 0, %dec_label_pc_f550 ], [ %v1_f5be, %bb ]
  ret i32 %v0_f5c0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f5dc, { 1, 0 }
}

define i32 @function_f5c2() local_unnamed_addr {
dec_label_pc_f5c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_f5c2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f5c2
}

define i32 @function_f5e1() local_unnamed_addr {
dec_label_pc_f5e1:
  %v0_f5e6 = load i32, i32* @eax, align 4
  ret i32 %v0_f5e6
}

define i32 @_ZN9CMerkleTxC1ERK12CTransaction(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f5e8:
  %v1_f61b = add i32 %arg1, 32
  store i32 %v1_f61b, i32* @eax, align 4
  %v2_f621 = call i32 @function_138bc(i32 %v1_f61b, i32 %arg2)
  %v1_f629 = add i32 %arg1, 64
  store i32 %v1_f629, i32* @eax, align 4
  %v1_f62f = call i32 @function_21656(i32 %v1_f629)
  store i32 %arg1, i32* @eax, align 4
  %v1_f63a = call i32 @function_1ec58(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f664

bb:                                               ; preds = %dec_label_pc_f5e8
  %v1_f649 = call i32 @function_f669()
  br label %dec_label_pc_f664

dec_label_pc_f664:                                ; preds = %dec_label_pc_f5e8, %bb
  %v0_f64b = phi i32 [ 0, %dec_label_pc_f5e8 ], [ %v1_f649, %bb ]
  ret i32 %v0_f64b

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f664, { 1, 0 }
}

define i32 @function_f64d() local_unnamed_addr {
dec_label_pc_f64d:
  %eax.global-to-local = alloca i32, align 4
  %v0_f64d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f64d
}

define i32 @function_f669() local_unnamed_addr {
dec_label_pc_f669:
  %v0_f66e = load i32, i32* @eax, align 4
  ret i32 %v0_f66e
}

define i32 @_ZN9CMerkleTx4InitEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f670:
  %v1_f68a = add i32 %arg1, 32
  store i32 %v1_f68a, i32* @eax, align 4
  %v3_f6a0 = call i32 @function_13a1e(i32 %v1_f68a, i32 0, i32 0)
  %v1_f6a8 = add i32 %arg1, 76
  %v2_f6a8 = inttoptr i32 %v1_f6a8 to i32*
  store i32 -1, i32* %v2_f6a8, align 4
  %v1_f6b2 = add i32 %arg1, 80
  %v2_f6b2 = inttoptr i32 %v1_f6b2 to i8*
  store i8 0, i8* %v2_f6b2, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNK9CMerkleTx19GetDepthInMainChainEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f6ca:
  ret i32 %arg1
}

define i32 @function_f703() local_unnamed_addr {
dec_label_pc_f703:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f703 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f703 = add i32 %v0_f703, -1
  store i32 %v1_f703, i32* %ecx.global-to-local, align 4
  %v0_f705 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f705
}

define i32 @_ZNK11CBlockIndex12GetBlockHashEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f706:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_f726 = inttoptr i32 %arg2 to i32*
  %v2_f726 = load i32, i32* %v1_f726, align 4
  store i32 %v2_f726, i32* %edx.global-to-local, align 8
  store i32 %tmp102, i32* %eax.global-to-local, align 4
  %v1_f72b = inttoptr i32 %v2_f726 to i32*
  %v2_f72b = load i32, i32* %v1_f72b, align 4
  store i32 %v2_f72b, i32* %arg1, align 4
  %v1_f72f = add i32 %v2_f726, 4
  %v2_f72f = inttoptr i32 %v1_f72f to i32*
  %v3_f72f = load i32, i32* %v2_f72f, align 4
  %v1_f732 = load i32, i32* %eax.global-to-local, align 4
  %v2_f732 = add i32 %v1_f732, 4
  %v3_f732 = inttoptr i32 %v2_f732 to i32*
  store i32 %v3_f72f, i32* %v3_f732, align 4
  %v0_f735 = load i32, i32* %edx.global-to-local, align 8
  %v1_f735 = add i32 %v0_f735, 8
  %v2_f735 = inttoptr i32 %v1_f735 to i32*
  %v3_f735 = load i32, i32* %v2_f735, align 4
  %v1_f738 = load i32, i32* %eax.global-to-local, align 4
  %v2_f738 = add i32 %v1_f738, 8
  %v3_f738 = inttoptr i32 %v2_f738 to i32*
  store i32 %v3_f735, i32* %v3_f738, align 4
  %v0_f73b = load i32, i32* %edx.global-to-local, align 8
  %v1_f73b = add i32 %v0_f73b, 12
  %v2_f73b = inttoptr i32 %v1_f73b to i32*
  %v3_f73b = load i32, i32* %v2_f73b, align 4
  %v1_f73e = load i32, i32* %eax.global-to-local, align 4
  %v2_f73e = add i32 %v1_f73e, 12
  %v3_f73e = inttoptr i32 %v2_f73e to i32*
  store i32 %v3_f73b, i32* %v3_f73e, align 4
  %v0_f741 = load i32, i32* %edx.global-to-local, align 8
  %v1_f741 = add i32 %v0_f741, 16
  %v2_f741 = inttoptr i32 %v1_f741 to i32*
  %v3_f741 = load i32, i32* %v2_f741, align 4
  %v1_f744 = load i32, i32* %eax.global-to-local, align 4
  %v2_f744 = add i32 %v1_f744, 16
  %v3_f744 = inttoptr i32 %v2_f744 to i32*
  store i32 %v3_f741, i32* %v3_f744, align 4
  %v0_f747 = load i32, i32* %edx.global-to-local, align 8
  %v1_f747 = add i32 %v0_f747, 20
  %v2_f747 = inttoptr i32 %v1_f747 to i32*
  %v3_f747 = load i32, i32* %v2_f747, align 4
  %v1_f74a = load i32, i32* %eax.global-to-local, align 4
  %v2_f74a = add i32 %v1_f74a, 20
  %v3_f74a = inttoptr i32 %v2_f74a to i32*
  store i32 %v3_f747, i32* %v3_f74a, align 4
  %v0_f74d = load i32, i32* %edx.global-to-local, align 8
  %v1_f74d = add i32 %v0_f74d, 24
  %v2_f74d = inttoptr i32 %v1_f74d to i32*
  %v3_f74d = load i32, i32* %v2_f74d, align 4
  %v1_f750 = load i32, i32* %eax.global-to-local, align 4
  %v2_f750 = add i32 %v1_f750, 24
  %v3_f750 = inttoptr i32 %v2_f750 to i32*
  store i32 %v3_f74d, i32* %v3_f750, align 4
  %v0_f753 = load i32, i32* %edx.global-to-local, align 8
  %v1_f753 = add i32 %v0_f753, 28
  %v2_f753 = inttoptr i32 %v1_f753 to i32*
  %v3_f753 = load i32, i32* %v2_f753, align 4
  %v1_f756 = load i32, i32* %eax.global-to-local, align 4
  %v2_f756 = add i32 %v1_f756, 28
  %v3_f756 = inttoptr i32 %v2_f756 to i32*
  store i32 %v3_f753, i32* %v3_f756, align 4
  store i32 %tmp102, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_f768

bb:                                               ; preds = %dec_label_pc_f706
  %v3_f766 = call i32 @function_f76d(i32 %arg2, i32 %tmp102)
  store i32 %v3_f766, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f768

dec_label_pc_f768:                                ; preds = %bb, %dec_label_pc_f706
  %v4_f766 = phi i32 [ %v3_f766, %bb ], [ %tmp102, %dec_label_pc_f706 ]
  ret i32 %v4_f766

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_f76d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f76d:
  %v0_f76e = load i32, i32* @eax, align 4
  ret i32 %v0_f76e
}

define i32 @_ZNK11CBlockIndex18GetNextInMainChainEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f772:
  %v1_f78d = add i32 %arg1, 8
  %v2_f78d = inttoptr i32 %v1_f78d to i32*
  %v3_f78d = load i32, i32* %v2_f78d, align 4
  ret i32 %v3_f78d
}

define i32 @function_f7c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f7c0:
  ret i32 0
}

define i32 @_ZN11CCoinsStatsC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_f7dc:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  %v0_f7e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %arg1, align 4
  %v1_f7ff = add i32 %tmp6, 4
  store i32 %v1_f7ff, i32* %eax.global-to-local, align 4
  %v3_f815 = call i32 @function_13b0a(i32 %v1_f7ff, i32 0, i32 0)
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  %v1_f81d = add i32 %tmp6, 36
  %v2_f81d = inttoptr i32 %v1_f81d to i32*
  store i32 0, i32* %v2_f81d, align 4
  %v0_f824 = load i32, i32* %eax.global-to-local, align 4
  %v1_f824 = add i32 %v0_f824, 40
  %v2_f824 = inttoptr i32 %v1_f824 to i32*
  store i32 0, i32* %v2_f824, align 4
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  %v1_f82e = add i32 %tmp6, 44
  %v2_f82e = inttoptr i32 %v1_f82e to i32*
  store i32 0, i32* %v2_f82e, align 4
  %v0_f835 = load i32, i32* %eax.global-to-local, align 4
  %v1_f835 = add i32 %v0_f835, ptrtoint (i32* @global_var_30.1817 to i32)
  %v2_f835 = inttoptr i32 %v1_f835 to i32*
  store i32 0, i32* %v2_f835, align 4
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  %v1_f83f = add i32 %tmp6, ptrtoint (i32* @global_var_34.1820 to i32)
  %v2_f83f = inttoptr i32 %v1_f83f to i32*
  store i32 0, i32* %v2_f83f, align 4
  %v0_f846 = load i32, i32* %eax.global-to-local, align 4
  %v1_f846 = add i32 %v0_f846, ptrtoint (i32* @global_var_38.1821 to i32)
  %v2_f846 = inttoptr i32 %v1_f846 to i32*
  store i32 0, i32* %v2_f846, align 4
  %v1_f850 = add i32 %tmp6, 60
  store i32 %v1_f850, i32* %eax.global-to-local, align 4
  %v3_f866 = call i32 @function_13b0a(i32 %v1_f850, i32 0, i32 0)
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  %v1_f86e = add i32 %tmp6, ptrtoint (i32* @global_var_5c.1819 to i32)
  %v2_f86e = inttoptr i32 %v1_f86e to i32*
  store i32 0, i32* %v2_f86e, align 4
  %v0_f875 = load i32, i32* %eax.global-to-local, align 4
  %v1_f875 = add i32 %v0_f875, 96
  %v2_f875 = inttoptr i32 %v1_f875 to i32*
  store i32 0, i32* %v2_f875, align 4
  store i32 %v0_f7e8, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f888

bb:                                               ; preds = %dec_label_pc_f7dc
  %v1_f886 = call i32 @function_f88d()
  store i32 %v1_f886, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f888

dec_label_pc_f888:                                ; preds = %bb, %dec_label_pc_f7dc
  %v2_f886 = phi i32 [ %v1_f886, %bb ], [ 0, %dec_label_pc_f7dc ]
  ret i32 %v2_f886

; uselistorder directives
  uselistorder i32 %tmp6, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 10 }
  uselistorder i32 (i32, i32, i32)* @function_13b0a, { 1, 0 }
}

define i32 @function_f88d() local_unnamed_addr {
dec_label_pc_f88d:
  %v0_f88e = load i32, i32* @eax, align 4
  ret i32 %v0_f88e
}

define i32 @_ZN10CCoinsViewD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f890:
  ret i32 %arg1
}

define i32 @function_f8d8() local_unnamed_addr {
dec_label_pc_f8d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_f8d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f8d9
}

define i32 @_ZN10CCoinsViewD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8da:
  store i32 %arg1, i32* @eax, align 4
  %v1_f8f7 = call i32 @function_1f16a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14nothing_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f91a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f93d

bb:                                               ; preds = %dec_label_pc_f91a
  %v2_f93b = call i32 @function_f942(i32 %arg1)
  br label %dec_label_pc_f93d

dec_label_pc_f93d:                                ; preds = %bb, %dec_label_pc_f91a
  %v3_f93b = phi i32 [ %v2_f93b, %bb ], [ 0, %dec_label_pc_f91a ]
  ret i32 %v3_f93b
}

define i32 @function_f942(i32 %arg1) local_unnamed_addr {
dec_label_pc_f942:
  %v0_f943 = load i32, i32* @eax, align 4
  ret i32 %v0_f943
}

define i32 @_ZN5boost6spirit7classic14nothing_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f944:
  store i32 %arg1, i32* @eax, align 4
  %v1_f961 = call i32 @function_1f25e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14anychar_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f97a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f99d

bb:                                               ; preds = %dec_label_pc_f97a
  %v2_f99b = call i32 @function_f9a2(i32 %arg1)
  br label %dec_label_pc_f99d

dec_label_pc_f99d:                                ; preds = %bb, %dec_label_pc_f97a
  %v3_f99b = phi i32 [ %v2_f99b, %bb ], [ 0, %dec_label_pc_f97a ]
  ret i32 %v3_f99b
}

define i32 @function_f9a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9a2:
  %v0_f9a3 = load i32, i32* @eax, align 4
  ret i32 %v0_f9a3
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_14anychar_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9a4:
  store i32 %arg1, i32* @eax, align 4
  %v1_f9c1 = call i32 @function_1f31e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f9d2

bb:                                               ; preds = %dec_label_pc_f9a4
  %v1_f9d0 = call i32 @function_f9d7()
  br label %dec_label_pc_f9d2

dec_label_pc_f9d2:                                ; preds = %bb, %dec_label_pc_f9a4
  %v2_f9d0 = phi i32 [ %v1_f9d0, %bb ], [ 0, %dec_label_pc_f9a4 ]
  ret i32 %v2_f9d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f9d7() local_unnamed_addr {
dec_label_pc_f9d7:
  %v0_f9d8 = load i32, i32* @eax, align 4
  ret i32 %v0_f9d8
}

define i32 @_ZN5boost6spirit7classic14anychar_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9da:
  store i32 %arg1, i32* @eax, align 4
  %v1_f9f7 = call i32 @function_1f37e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fa08

bb:                                               ; preds = %dec_label_pc_f9da
  %v1_fa06 = call i32 @function_fa0d()
  br label %dec_label_pc_fa08

dec_label_pc_fa08:                                ; preds = %bb, %dec_label_pc_f9da
  %v2_fa06 = phi i32 [ %v1_fa06, %bb ], [ 0, %dec_label_pc_f9da ]
  ret i32 %v2_fa06

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fa0d() local_unnamed_addr {
dec_label_pc_fa0d:
  %v0_fa0e = load i32, i32* @eax, align 4
  ret i32 %v0_fa0e
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12alnum_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa10:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12alnum_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa3a:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_fa57 = call i32 @function_1f44a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fa68

bb:                                               ; preds = %dec_label_pc_fa3a
  %v1_fa66 = call i32 @function_fa6d()
  br label %dec_label_pc_fa68

dec_label_pc_fa68:                                ; preds = %bb, %dec_label_pc_fa3a
  %v2_fa66 = phi i32 [ %v1_fa66, %bb ], [ 0, %dec_label_pc_fa3a ]
  ret i32 %v2_fa66

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fa6d() local_unnamed_addr {
dec_label_pc_fa6d:
  %v0_fa6e = load i32, i32* @eax, align 4
  ret i32 %v0_fa6e
}

define i32 @_ZN5boost6spirit7classic12alnum_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa70:
  store i32 %arg1, i32* @eax, align 4
  %v1_fa8d = call i32 @function_1f4aa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fa9e

bb:                                               ; preds = %dec_label_pc_fa70
  %v1_fa9c = call i32 @function_faa3()
  br label %dec_label_pc_fa9e

dec_label_pc_fa9e:                                ; preds = %bb, %dec_label_pc_fa70
  %v2_fa9c = phi i32 [ %v1_fa9c, %bb ], [ 0, %dec_label_pc_fa70 ]
  ret i32 %v2_fa9c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_faa3() local_unnamed_addr {
dec_label_pc_faa3:
  %v0_faa4 = load i32, i32* @eax, align 4
  ret i32 %v0_faa4
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12alpha_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_faa6:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12alpha_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fad0:
  store i32 %arg1, i32* @eax, align 4
  %v1_faed = call i32 @function_1f576(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic12alpha_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb06:
  %v1_fb23 = call i32 @function_1f5d6(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fb34

bb:                                               ; preds = %dec_label_pc_fb06
  %v1_fb32 = call i32 @function_fb39()
  br label %dec_label_pc_fb34

dec_label_pc_fb34:                                ; preds = %bb, %dec_label_pc_fb06
  %v2_fb32 = phi i32 [ %v1_fb32, %bb ], [ 0, %dec_label_pc_fb06 ]
  ret i32 %v2_fb32
}

define i32 @function_fb39() local_unnamed_addr {
dec_label_pc_fb39:
  %v0_fb3a = load i32, i32* @eax, align 4
  ret i32 %v0_fb3a
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12cntrl_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb3c:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12cntrl_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb66:
  store i32 %arg1, i32* @eax, align 4
  %v1_fb83 = call i32 @function_1f6a2(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fb94

bb:                                               ; preds = %dec_label_pc_fb66
  %v1_fb92 = call i32 @function_fb99()
  br label %dec_label_pc_fb94

dec_label_pc_fb94:                                ; preds = %bb, %dec_label_pc_fb66
  %v2_fb92 = phi i32 [ %v1_fb92, %bb ], [ 0, %dec_label_pc_fb66 ]
  ret i32 %v2_fb92

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fb99() local_unnamed_addr {
dec_label_pc_fb99:
  %v0_fb9a = load i32, i32* @eax, align 4
  ret i32 %v0_fb9a
}

define i32 @_ZN5boost6spirit7classic12cntrl_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb9c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fbca

bb:                                               ; preds = %dec_label_pc_fb9c
  %v2_fbc8 = call i32 @function_fbcf(i32 %arg1)
  br label %dec_label_pc_fbca

dec_label_pc_fbca:                                ; preds = %bb, %dec_label_pc_fb9c
  %v3_fbc8 = phi i32 [ %v2_fbc8, %bb ], [ 0, %dec_label_pc_fb9c ]
  ret i32 %v3_fbc8
}

define i32 @function_fbcf(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbcf:
  %v0_fbd0 = load i32, i32* @eax, align 4
  ret i32 %v0_fbd0
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12digit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbd2:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12digit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbfc:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic12digit_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc32:
  store i32 %arg1, i32* @eax, align 4
  %v1_fc4f = call i32 @function_1f82e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fc60

bb:                                               ; preds = %dec_label_pc_fc32
  %v1_fc5e = call i32 @function_fc65()
  br label %dec_label_pc_fc60

dec_label_pc_fc60:                                ; preds = %bb, %dec_label_pc_fc32
  %v2_fc5e = phi i32 [ %v1_fc5e, %bb ], [ 0, %dec_label_pc_fc32 ]
  ret i32 %v2_fc5e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fc65() local_unnamed_addr {
dec_label_pc_fc65:
  %v0_fc66 = load i32, i32* @eax, align 4
  ret i32 %v0_fc66
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12graph_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc68:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fc8b

bb:                                               ; preds = %dec_label_pc_fc68
  %v2_fc89 = call i32 @function_fc90(i32 %arg1)
  br label %dec_label_pc_fc8b

dec_label_pc_fc8b:                                ; preds = %bb, %dec_label_pc_fc68
  %v3_fc89 = phi i32 [ %v2_fc89, %bb ], [ 0, %dec_label_pc_fc68 ]
  ret i32 %v3_fc89
}

define i32 @function_fc90(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc90:
  %v0_fc91 = load i32, i32* @eax, align 4
  ret i32 %v0_fc91
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12graph_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc92:
  %v1_fcaf = call i32 @function_1f8fa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fcc0

bb:                                               ; preds = %dec_label_pc_fc92
  %v1_fcbe = call i32 @function_fcc5()
  br label %dec_label_pc_fcc0

dec_label_pc_fcc0:                                ; preds = %bb, %dec_label_pc_fc92
  %v2_fcbe = phi i32 [ %v1_fcbe, %bb ], [ 0, %dec_label_pc_fc92 ]
  ret i32 %v2_fcbe
}

define i32 @function_fcc5() local_unnamed_addr {
dec_label_pc_fcc5:
  %v0_fcc6 = load i32, i32* @eax, align 4
  ret i32 %v0_fcc6
}

define i32 @_ZN5boost6spirit7classic12graph_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcc8:
  store i32 %arg1, i32* @eax, align 4
  %v1_fce5 = call i32 @function_1f95a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12lower_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcfe:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12lower_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd28:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_fd45 = call i32 @function_1fa26(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic12lower_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd5e:
  store i32 %arg1, i32* @eax, align 4
  %v1_fd7b = call i32 @function_1fa86(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fd8c

bb:                                               ; preds = %dec_label_pc_fd5e
  %v1_fd8a = call i32 @function_fd91()
  br label %dec_label_pc_fd8c

dec_label_pc_fd8c:                                ; preds = %bb, %dec_label_pc_fd5e
  %v2_fd8a = phi i32 [ %v1_fd8a, %bb ], [ 0, %dec_label_pc_fd5e ]
  ret i32 %v2_fd8a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fd91() local_unnamed_addr {
dec_label_pc_fd91:
  %v0_fd92 = load i32, i32* @eax, align 4
  ret i32 %v0_fd92
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12print_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd94:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12print_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fdbe:
  store i32 %arg1, i32* @eax, align 4
  %v1_fddb = call i32 @function_1fb52(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic12print_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fdf4:
  store i32 %arg1, i32* @eax, align 4
  %v1_fe11 = call i32 @function_1fbb2(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12punct_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe2a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fe4d

bb:                                               ; preds = %dec_label_pc_fe2a
  %v2_fe4b = call i32 @function_fe52(i32 %arg1)
  br label %dec_label_pc_fe4d

dec_label_pc_fe4d:                                ; preds = %bb, %dec_label_pc_fe2a
  %v3_fe4b = phi i32 [ %v2_fe4b, %bb ], [ 0, %dec_label_pc_fe2a ]
  ret i32 %v3_fe4b
}

define i32 @function_fe52(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe52:
  %v0_fe53 = load i32, i32* @eax, align 4
  ret i32 %v0_fe53
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12punct_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe54:
  store i32 %arg1, i32* @eax, align 4
  %v1_fe71 = call i32 @function_1fc7e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fe82

bb:                                               ; preds = %dec_label_pc_fe54
  %v1_fe80 = call i32 @function_fe87()
  br label %dec_label_pc_fe82

dec_label_pc_fe82:                                ; preds = %bb, %dec_label_pc_fe54
  %v2_fe80 = phi i32 [ %v1_fe80, %bb ], [ 0, %dec_label_pc_fe54 ]
  ret i32 %v2_fe80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fe87() local_unnamed_addr {
dec_label_pc_fe87:
  %v0_fe88 = load i32, i32* @eax, align 4
  ret i32 %v0_fe88
}

define i32 @_ZN5boost6spirit7classic12punct_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe8a:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_fea7 = call i32 @function_1fcde(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_feb8

bb:                                               ; preds = %dec_label_pc_fe8a
  %v1_feb6 = call i32 @function_febd()
  br label %dec_label_pc_feb8

dec_label_pc_feb8:                                ; preds = %bb, %dec_label_pc_fe8a
  %v2_feb6 = phi i32 [ %v1_feb6, %bb ], [ 0, %dec_label_pc_fe8a ]
  ret i32 %v2_feb6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_febd() local_unnamed_addr {
dec_label_pc_febd:
  %v0_febe = load i32, i32* @eax, align 4
  ret i32 %v0_febe
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12blank_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fec0:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12blank_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_feea:
  store i32 %arg1, i32* @eax, align 4
  %v1_ff07 = call i32 @function_1fdaa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ff18

bb:                                               ; preds = %dec_label_pc_feea
  %v1_ff16 = call i32 @function_ff1d()
  br label %dec_label_pc_ff18

dec_label_pc_ff18:                                ; preds = %bb, %dec_label_pc_feea
  %v2_ff16 = phi i32 [ %v1_ff16, %bb ], [ 0, %dec_label_pc_feea ]
  ret i32 %v2_ff16

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_ff1d() local_unnamed_addr {
dec_label_pc_ff1d:
  %v0_ff1e = load i32, i32* @eax, align 4
  ret i32 %v0_ff1e
}

define i32 @_ZN5boost6spirit7classic12blank_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff20:
  store i32 %arg1, i32* @eax, align 4
  %v1_ff3d = call i32 @function_1fe0a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12space_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff56:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12space_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff80:
  store i32 %arg1, i32* @eax, align 4
  %v1_ff9d = call i32 @function_1fed6(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic12space_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ffb6:
  %v1_ffd3 = call i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assignerD1Ev(i32 %arg1)
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12upper_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ffec:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12upper_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10016:
  store i32 %arg1, i32* @eax, align 4
  %v1_10033 = call i32 @function_20002(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10044

bb:                                               ; preds = %dec_label_pc_10016
  %v1_10042 = call i32 @function_10049()
  br label %dec_label_pc_10044

dec_label_pc_10044:                               ; preds = %bb, %dec_label_pc_10016
  %v2_10042 = phi i32 [ %v1_10042, %bb ], [ 0, %dec_label_pc_10016 ]
  ret i32 %v2_10042

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10049() local_unnamed_addr {
dec_label_pc_10049:
  %v0_1004a = load i32, i32* @eax, align 4
  ret i32 %v0_1004a
}

define i32 @_ZN5boost6spirit7classic12upper_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1004c:
  store i32 %arg1, i32* @eax, align 4
  %v1_10069 = call i32 @function_20062(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1007a

bb:                                               ; preds = %dec_label_pc_1004c
  %v1_10078 = call i32 @function_1007f()
  br label %dec_label_pc_1007a

dec_label_pc_1007a:                               ; preds = %bb, %dec_label_pc_1004c
  %v2_10078 = phi i32 [ %v1_10078, %bb ], [ 0, %dec_label_pc_1004c ]
  ret i32 %v2_10078

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1007f() local_unnamed_addr {
dec_label_pc_1007f:
  %v0_10080 = load i32, i32* @eax, align 4
  ret i32 %v0_10080
}

define i32 @_ZN5boost6spirit7classic6parserINS1_13xdigit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10082:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_13xdigit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_100ac:
  store i32 %arg1, i32* @eax, align 4
  %v1_100c9 = call i32 @function_2012e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic13xdigit_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_100e2:
  store i32 %arg1, i32* @eax, align 4
  %v1_100ff = call i32 @function_2018e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10110

bb:                                               ; preds = %dec_label_pc_100e2
  %v1_1010e = call i32 @function_10115()
  br label %dec_label_pc_10110

dec_label_pc_10110:                               ; preds = %bb, %dec_label_pc_100e2
  %v2_1010e = phi i32 [ %v1_1010e, %bb ], [ 0, %dec_label_pc_100e2 ]
  ret i32 %v2_1010e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10115() local_unnamed_addr {
dec_label_pc_10115:
  %v0_10116 = load i32, i32* @eax, align 4
  ret i32 %v0_10116
}

define i32 @_ZN5boost6spirit7classic6parserINS1_10eol_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10118:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic10eol_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10142:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_1015f = call i32 @function_2025a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_10end_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10178:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic10end_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_101a2:
  %v1_101bf = call i32 @function_2031a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_101d0

bb:                                               ; preds = %dec_label_pc_101a2
  %v1_101ce = call i32 @function_101d5()
  br label %dec_label_pc_101d0

dec_label_pc_101d0:                               ; preds = %bb, %dec_label_pc_101a2
  %v2_101ce = phi i32 [ %v1_101ce, %bb ], [ 0, %dec_label_pc_101a2 ]
  ret i32 %v2_101ce
}

define i32 @function_101d5() local_unnamed_addr {
dec_label_pc_101d5:
  %v0_101d6 = load i32, i32* @eax, align 4
  ret i32 %v0_101d6
}

define i32 @_ZN5boost6spirit7classic28inhibit_case_parser_gen_baseILi0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_101d8:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic23inhibit_case_parser_genC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10202:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_1021f = call i32 @function_203da(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10230

bb:                                               ; preds = %dec_label_pc_10202
  %v1_1022e = call i32 @function_10235()
  br label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %bb, %dec_label_pc_10202
  %v2_1022e = phi i32 [ %v1_1022e, %bb ], [ 0, %dec_label_pc_10202 ]
  ret i32 %v2_1022e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10235() local_unnamed_addr {
dec_label_pc_10235:
  %v0_10236 = load i32, i32* @eax, align 4
  ret i32 %v0_10236
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11sign_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10238:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1025b

bb:                                               ; preds = %dec_label_pc_10238
  %v2_10259 = call i32 @function_10260(i32 %arg1)
  br label %dec_label_pc_1025b

dec_label_pc_1025b:                               ; preds = %bb, %dec_label_pc_10238
  %v3_10259 = phi i32 [ %v2_10259, %bb ], [ 0, %dec_label_pc_10238 ]
  ret i32 %v3_10259
}

define i32 @function_10260(i32 %arg1) local_unnamed_addr {
dec_label_pc_10260:
  %v0_10261 = load i32, i32* @eax, align 4
  ret i32 %v0_10261
}

define i32 @_ZN5boost6spirit7classic11sign_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10262:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10290

bb:                                               ; preds = %dec_label_pc_10262
  %v2_1028e = call i32 @function_10295(i32 %arg1)
  br label %dec_label_pc_10290

dec_label_pc_10290:                               ; preds = %bb, %dec_label_pc_10262
  %v3_1028e = phi i32 [ %v2_1028e, %bb ], [ 0, %dec_label_pc_10262 ]
  ret i32 %v3_1028e
}

define i32 @function_10295(i32 %arg1) local_unnamed_addr {
dec_label_pc_10295:
  %v0_10296 = load i32, i32* @eax, align 4
  ret i32 %v0_10296
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14epsilon_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10298:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic14epsilon_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_102c2:
  store i32 %arg1, i32* @eax, align 4
  %v1_102df = call i32 @function_2055a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_102f0

bb:                                               ; preds = %dec_label_pc_102c2
  %v1_102ee = call i32 @function_102f5()
  br label %dec_label_pc_102f0

dec_label_pc_102f0:                               ; preds = %bb, %dec_label_pc_102c2
  %v2_102ee = phi i32 [ %v1_102ee, %bb ], [ 0, %dec_label_pc_102c2 ]
  ret i32 %v2_102ee

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_102f5() local_unnamed_addr {
dec_label_pc_102f5:
  %v0_102f6 = load i32, i32* @eax, align 4
  ret i32 %v0_102f6
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_102f8:
  %v1_10312 = add i32 %arg1, 4
  store i32 %v1_10312, i32* @eax, align 4
  %v1_10318 = call i32 @function_22b84(i32 %v1_10312)
  ret i32 0
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10330:
  %v1_1034b = add i32 %arg1, 4
  %v1_10351 = call i32 @__stack_chk_fail.744(i32 %v1_1034b)
  ret i32 %arg1
}

define i32 @function_10360(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10360:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10360 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10360 = add i32 %v0_10360, 862319685
  %v2_10360 = inttoptr i32 %v1_10360 to i32*
  %v3_10360 = load i32, i32* %v2_10360, align 4
  %v4_10360 = add i32 %v3_10360, -1
  store i32 %v4_10360, i32* %v2_10360, align 4
  %v0_10366 = load i32, i32* %eax.global-to-local, align 4
  %v1_10366 = add i32 %v0_10366, 20
  store i32 %v1_10366, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v1_10366
}

define i32 @_ZN9CMerkleTxD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10392:
  %v1_103ad = add i32 %arg1, 64
  store i32 %v1_103ad, i32* @eax, align 4
  %v1_103b3 = call i32 @function_22436(i32 %v1_103ad)
  %v1_103be = call i32 @function_1f87a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_103cf

bb:                                               ; preds = %dec_label_pc_10392
  %v1_103cd = call i32 @function_103ed()
  store i32 %v1_103cd, i32* @eax, align 4
  br label %dec_label_pc_103cf

dec_label_pc_103cf:                               ; preds = %bb, %dec_label_pc_10392
  %v0_103cf = call i32 @function_103e8()
  ret i32 %v0_103cf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_103d2() local_unnamed_addr {
dec_label_pc_103d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_103d2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_103d2
}

define i32 @function_103e8() local_unnamed_addr {
dec_label_pc_103e8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_103ed() local_unnamed_addr {
dec_label_pc_103ed:
  %v0_103f2 = load i32, i32* @eax, align 4
  ret i32 %v0_103f2
}

define i32 @_ZN6CBlockD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_103f4:
  %v1_1040f = add i32 %arg1, ptrtoint (i32* @global_var_5c.1819 to i32)
  store i32 %v1_1040f, i32* @eax, align 4
  %v1_10415 = call i32 @function_22498(i32 %v1_1040f)
  %v1_1041d = add i32 %arg1, 80
  store i32 %v1_1041d, i32* @eax, align 4
  %v1_10423 = call i32 @function_223e8(i32 %v1_1041d)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10450

bb:                                               ; preds = %dec_label_pc_103f4
  %v1_10432 = call i32 @function_10455()
  br label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %dec_label_pc_103f4, %bb
  %v0_10434 = phi i32 [ 0, %dec_label_pc_103f4 ], [ %v1_10432, %bb ]
  ret i32 %v0_10434

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10450, { 1, 0 }
}

define i32 @function_10436() local_unnamed_addr {
dec_label_pc_10436:
  %eax.global-to-local = alloca i32, align 4
  %v0_10436 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_10436, i32* @ebx, align 4
  %v0_10438 = load i32, i32* @ebp, align 4
  %v1_10438 = add i32 %v0_10438, -28
  %v2_10438 = inttoptr i32 %v1_10438 to i32*
  %v3_10438 = load i32, i32* %v2_10438, align 4
  %v1_1043b = add i32 %v3_10438, 80
  store i32 %v1_1043b, i32* @eax, align 4
  %v1_10441 = call i32 @function_223e8(i32 %v1_1043b)
  %v0_10446 = load i32, i32* @ebx, align 4
  store i32 %v0_10446, i32* %eax.global-to-local, align 4
  ret i32 %v0_10446

; uselistorder directives
  uselistorder i32 (i32)* @function_223e8, { 1, 0 }
}

define i32 @function_10455() local_unnamed_addr {
dec_label_pc_10455:
  %v0_1045a = load i32, i32* @eax, align 4
  ret i32 %v0_1045a
}

define i32 @_ZN6CCoinsD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1045c:
  %v1_10476 = add i32 %arg1, 4
  store i32 %v1_10476, i32* @eax, align 4
  %v1_1047c = call i32 @function_21fd0(i32 %v1_10476)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1048d

bb:                                               ; preds = %dec_label_pc_1045c
  %v1_1048b = call i32 @function_10492()
  br label %dec_label_pc_1048d

dec_label_pc_1048d:                               ; preds = %bb, %dec_label_pc_1045c
  %v2_1048b = phi i32 [ %v1_1048b, %bb ], [ 0, %dec_label_pc_1045c ]
  ret i32 %v2_1048b
}

define i32 @function_10492() local_unnamed_addr {
dec_label_pc_10492:
  %v0_10493 = load i32, i32* @eax, align 4
  ret i32 %v0_10493
}

define i32 @_ZN16CCoinsViewBackedD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10494:
  ret i32 %arg1
}

define i32 @_ZN16CCoinsViewBackedD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_104ea:
  store i32 %arg1, i32* @eax, align 4
  %v1_10507 = call i32 @function_2097e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_10516() local_unnamed_addr {
dec_label_pc_10516:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10516 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10516 = add i32 %v0_10516, 862319685
  %v2_10516 = inttoptr i32 %v1_10516 to i32*
  %v3_10516 = load i32, i32* %v2_10516, align 4
  %v4_10516 = add i32 %v3_10516, -1
  store i32 %v4_10516, i32* %v2_10516, align 4
  %v0_1051c = load i32, i32* %eax.global-to-local, align 4
  %v1_1051c = add i32 %v0_1051c, 20
  store i32 %v1_1051c, i32* %eax.global-to-local, align 4
  ret i32 %v1_1051c
}

define i32 @_ZN17CCoinsViewMemPoolD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1052a:
  ret i32 %arg1
}

define i32 @function_1057d() local_unnamed_addr {
dec_label_pc_1057d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1057e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1057e
}

define i32 @_ZN17CCoinsViewMemPoolD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10580:
  store i32 %arg1, i32* @eax, align 4
  %v1_1059d = call i32 @function_20aaa(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_105ac() local_unnamed_addr {
dec_label_pc_105ac:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_105ac = load i32, i32* %ebx.global-to-local, align 4
  %v1_105ac = add i32 %v0_105ac, 862319685
  %v2_105ac = inttoptr i32 %v1_105ac to i32*
  %v3_105ac = load i32, i32* %v2_105ac, align 4
  %v4_105ac = add i32 %v3_105ac, -1
  store i32 %v4_105ac, i32* %v2_105ac, align 4
  %v0_105b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_105b2 = add i32 %v0_105b2, 20
  store i32 %v1_105b2, i32* %eax.global-to-local, align 4
  ret i32 %v1_105b2
}

define i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_105c0:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_105c0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_105da = add i32 %tmp100, 4
  %v2_105da = inttoptr i32 %v1_105da to i32*
  %v3_105da = load i32, i32* %v2_105da, align 4
  %v2_105e2 = load i32, i32* %arg1, align 4
  %v2_105e6 = sub i32 %v3_105da, %v2_105e2
  store i32 %v0_105c0, i32* %ebp.global-to-local, align 4
  ret i32 %v2_105e6
}

define i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_105fe:
  %ebp.global-to-local = alloca i32, align 4
  %v0_105fe = load i32, i32* %ebp.global-to-local, align 4
  %v2_1061e = load i32, i32* %arg1, align 4
  %v5_10620 = add i32 %v2_1061e, %arg2
  store i32 %v0_105fe, i32* %ebp.global-to-local, align 4
  ret i32 %v5_10620
}

define i32 @_ZN9base_uintILj256EE6SetHexERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10636:
  ret i32 %arg2
}

define i32 @function_1065d() local_unnamed_addr {
dec_label_pc_1065d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1065d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1065d = add i32 %v0_1065d, -1962662844
  %v2_1065d = inttoptr i32 %v1_1065d to i32*
  %v3_1065d = load i32, i32* %v2_1065d, align 4
  %v4_1065d = add i32 %v3_1065d, -1
  store i32 %v4_1065d, i32* %v2_1065d, align 4
  %v0_10663 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10663 = add i32 %v0_10663, 1
  store i32 %v1_10663, i32* %ebp.global-to-local, align 4
  %v0_10666 = load i32, i32* %eax.global-to-local, align 4
  %v2_10666 = add i32 %v0_10666, 36
  %v16_10666 = urem i32 %v2_10666, 256
  %v18_10666 = and i32 %v0_10666, -256
  %v19_10666 = or i32 %v16_10666, %v18_10666
  store i32 %v19_10666, i32* %eax.global-to-local, align 4
  %v1_1066d = add i32 %v0_10663, -11
  %v2_1066d = inttoptr i32 %v1_1066d to i32*
  %v3_1066d = load i32, i32* %v2_1066d, align 4
  store i32 %v3_1066d, i32* %eax.global-to-local, align 4
  %v1_10670 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10670 = xor i32 %v1_10670, %v3_1066d
  store i32 %v2_10670, i32* %eax.global-to-local, align 4
  %v1_1067e = inttoptr i32 %v1_10663 to i32*
  %v2_1067e = load i32, i32* %v1_1067e, align 4
  store i32 %v2_1067e, i32* %ebp.global-to-local, align 4
  ret i32 %v2_10670

; uselistorder directives
  uselistorder i32 %v0_10666, { 1, 0 }
}

define i32 @_ZltRK9base_uintILj256EES2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10680:
  %ebp.global-to-local = alloca i32, align 4
  %v0_10680 = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_106a6

dec_label_pc_106a6:                               ; preds = %dec_label_pc_10680, %dec_label_pc_106e4
  %storemerge121 = phi i32 [ 7, %dec_label_pc_10680 ], [ %v4_106e0, %dec_label_pc_106e4 ]
  %v2_106ac = mul nuw nsw i32 %storemerge121, 4
  %v3_106ac = add i32 %v2_106ac, %arg1
  %v4_106ac = inttoptr i32 %v3_106ac to i32*
  %v5_106ac = load i32, i32* %v4_106ac, align 4
  %v3_106b5 = add i32 %v2_106ac, %arg2
  %v4_106b5 = inttoptr i32 %v3_106b5 to i32*
  %v5_106b5 = load i32, i32* %v4_106b5, align 4
  %v7_106b8 = icmp ult i32 %v5_106ac, %v5_106b5
  %v1_106ba = icmp eq i1 %v7_106b8, false
  br i1 %v1_106ba, label %dec_label_pc_106c3, label %dec_label_pc_106bc

dec_label_pc_106bc:                               ; preds = %dec_label_pc_106a6
  br label %dec_label_pc_106f5

dec_label_pc_106c3:                               ; preds = %dec_label_pc_106a6
  %v5_106c9 = load i32, i32* %v4_106ac, align 4
  %v5_106d2 = load i32, i32* %v4_106b5, align 4
  %tmp133 = icmp ugt i32 %v5_106c9, %v5_106d2
  br i1 %tmp133, label %dec_label_pc_106d9, label %dec_label_pc_106e4

dec_label_pc_106d9:                               ; preds = %dec_label_pc_106c3
  br label %dec_label_pc_106f5

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106c3
  %v4_106e0 = add nsw i32 %storemerge121, -1
  %tmp134 = icmp sgt i32 %storemerge121, 0
  %v3_106e9 = icmp eq i1 %tmp134, false
  %v1_106ee = icmp eq i1 %v3_106e9, false
  br i1 %v1_106ee, label %dec_label_pc_106a6, label %dec_label_pc_106f0

dec_label_pc_106f0:                               ; preds = %dec_label_pc_106e4
  br label %dec_label_pc_106f5

dec_label_pc_106f5:                               ; preds = %dec_label_pc_106d9, %dec_label_pc_106bc, %dec_label_pc_106f0
  %v0_10707 = phi i32 [ 0, %dec_label_pc_106d9 ], [ 1, %dec_label_pc_106bc ], [ 0, %dec_label_pc_106f0 ]
  store i32 %v0_10680, i32* %ebp.global-to-local, align 4
  ret i32 %v0_10707

; uselistorder directives
  uselistorder i32 %storemerge121, { 0, 2, 1 }
  uselistorder i32 7, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_106f5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_106a6, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10708:
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10734

bb:                                               ; preds = %dec_label_pc_10708
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_10732 = call i32 @function_10739(i32 %tmp100)
  br label %dec_label_pc_10734

dec_label_pc_10734:                               ; preds = %bb, %dec_label_pc_10708
  %v3_10732 = phi i32 [ %v2_10732, %bb ], [ 0, %dec_label_pc_10708 ]
  ret i32 %v3_10732

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_10739(i32 %arg1) local_unnamed_addr {
dec_label_pc_10739:
  %v0_1073a = load i32, i32* @eax, align 4
  ret i32 %v0_1073a
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1073c:
  store i32 %arg1, i32* @eax, align 4
  %v1_10759 = call i32 @function_2429e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10772:
  %v2_1078c = load i32, i32* %arg1, align 4
  store i32 %v2_1078c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1079a

bb:                                               ; preds = %dec_label_pc_10772
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_10798 = call i32 @function_1079f(i32 %tmp100)
  br label %dec_label_pc_1079a

dec_label_pc_1079a:                               ; preds = %bb, %dec_label_pc_10772
  %v3_10798 = phi i32 [ %v2_10798, %bb ], [ %v2_1078c, %dec_label_pc_10772 ]
  ret i32 %v3_10798

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1079f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1079f:
  %v0_107a0 = load i32, i32* @eax, align 4
  ret i32 %v0_107a0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_107a2:
  %v2_107c2 = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_107ce = call i32 @function_21a90(i32 %arg1, i32 %v2_107c2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost16exception_detail10clone_baseC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_107ea:
  store i32 ptrtoint (i32* @global_var_2b500.1805 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1081c

bb:                                               ; preds = %dec_label_pc_107ea
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1081a = call i32 @function_10821(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1081c

dec_label_pc_1081c:                               ; preds = %bb, %dec_label_pc_107ea
  %v4_1081a = phi i32 [ %v3_1081a, %bb ], [ 0, %dec_label_pc_107ea ]
  ret i32 %v4_1081a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_10821(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10821:
  %v0_10822 = load i32, i32* @eax, align 4
  ret i32 %v0_10822
}

define i32 @_ZN5boost16thread_exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10824:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @edx, align 8
  store i32 %tmp103, i32* @eax, align 4
  %v2_1084e = call i32 @function_1e32e(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_2b4e8_type* @global_var_2b4e8.1806 to i32), i32* %arg1, align 4
  %v1_1085f = add i32 %arg2, 4
  %v2_1085f = inttoptr i32 %v1_1085f to i32*
  %v3_1085f = load i32, i32* %v2_1085f, align 4
  %v2_10865 = add i32 %tmp103, 4
  %v3_10865 = inttoptr i32 %v2_10865 to i32*
  store i32 %v3_1085f, i32* %v3_10865, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10874

bb:                                               ; preds = %dec_label_pc_10824
  %v1_10872 = call i32 @function_10879()
  br label %dec_label_pc_10874

dec_label_pc_10874:                               ; preds = %bb, %dec_label_pc_10824
  %v2_10872 = phi i32 [ %v1_10872, %bb ], [ 0, %dec_label_pc_10824 ]
  ret i32 %v2_10872

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_2b4e8_type* @global_var_2b4e8.1806 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_10879() local_unnamed_addr {
dec_label_pc_10879:
  %v0_1087a = load i32, i32* @eax, align 4
  ret i32 %v0_1087a
}

define i32 @_ZN5boost10lock_errorC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1087c:
  store i32 ptrtoint (%vtable_2b4d0_type* @global_var_2b4d0.1807 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_108c0

bb:                                               ; preds = %dec_label_pc_1087c
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_108be = call i32 @function_108c5(i32 %tmp103, i32 %arg2)
  br label %dec_label_pc_108c0

dec_label_pc_108c0:                               ; preds = %bb, %dec_label_pc_1087c
  %v4_108be = phi i32 [ %v3_108be, %bb ], [ 0, %dec_label_pc_1087c ]
  ret i32 %v4_108be

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_2b4d0_type* @global_var_2b4d0.1807 to i32), { 2, 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_108c5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_108c5:
  %v0_108c6 = load i32, i32* @eax, align 4
  ret i32 %v0_108c6
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_108c8:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @edx, align 8
  store i32 %tmp103, i32* @eax, align 4
  %v2_108f3 = call i32 @function_21144(i32 %tmp103, i32 %arg2)
  %v1_108fb = add i32 %arg2, 8
  %v1_10901 = add i32 %tmp103, 8
  %v2_1090b = call i32 @function_1e834(i32 %v1_10901, i32 %v1_108fb)
  store i32 ptrtoint (%vtable_2b390_type* @global_var_2b390.1822 to i32), i32* %arg1, align 4
  %v2_1091c = inttoptr i32 %v1_10901 to i32*
  store i32 ptrtoint (i32* @global_var_2b3a4.1823 to i32), i32* %v2_1091c, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10948

bb:                                               ; preds = %dec_label_pc_108c8
  %v1_1092d = call i32 @function_1094d()
  br label %dec_label_pc_10948

dec_label_pc_10948:                               ; preds = %dec_label_pc_108c8, %bb
  %v0_1092f = phi i32 [ 0, %dec_label_pc_108c8 ], [ %v1_1092d, %bb ]
  ret i32 %v0_1092f

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10948, { 1, 0 }
}

define i32 @function_10931() local_unnamed_addr {
dec_label_pc_10931:
  %eax.global-to-local = alloca i32, align 4
  %v0_10931 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_10931, i32* @ebx, align 4
  %v0_10933 = load i32, i32* @ebp, align 4
  %v1_10933 = add i32 %v0_10933, -28
  %v2_10933 = inttoptr i32 %v1_10933 to i32*
  %v3_10933 = load i32, i32* %v2_10933, align 4
  store i32 %v3_10933, i32* @eax, align 4
  %v1_10939 = call i32 @function_16298(i32 %v3_10933)
  %v0_1093e = load i32, i32* @ebx, align 4
  store i32 %v0_1093e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1093e
}

define i32 @function_1094d() local_unnamed_addr {
dec_label_pc_1094d:
  %v0_10952 = load i32, i32* @eax, align 4
  ret i32 %v0_10952
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10954:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 4
  %v2_1097e = call i32 @function_2121c(i32 %tmp103, i32 %arg2)
  %v1_10986 = add i32 %arg2, 28
  %v1_1098c = add i32 %tmp103, 28
  store i32 %v1_1098c, i32* @eax, align 4
  %v2_10996 = call i32 @function_2113e(i32 %v1_1098c, i32 %v1_10986)
  store i32 ptrtoint (%vtable_2b330_type* @global_var_2b330.1824 to i32), i32* %arg1, align 4
  %v1_109a7 = add i32 %tmp103, 8
  %v2_109a7 = inttoptr i32 %v1_109a7 to i32*
  store i32 ptrtoint (i32* @global_var_2b34c.1825 to i32), i32* %v2_109a7, align 4
  %v2_109b1 = inttoptr i32 %v1_1098c to i32*
  store i32 ptrtoint (i32* @global_var_2b35c.1826 to i32), i32* %v2_109b1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_109c4

bb:                                               ; preds = %dec_label_pc_10954
  %v1_109c2 = call i32 @function_109c9()
  br label %dec_label_pc_109c4

dec_label_pc_109c4:                               ; preds = %bb, %dec_label_pc_10954
  %v2_109c2 = phi i32 [ %v1_109c2, %bb ], [ 0, %dec_label_pc_10954 ]
  ret i32 %v2_109c2

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_109c9() local_unnamed_addr {
dec_label_pc_109c9:
  %v0_109ca = load i32, i32* @eax, align 4
  ret i32 %v0_109ca
}

define i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_109cb:
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_109ea = call i32 @function_16254(i32 %arg1)
  store i32 %v1_109ea, i32* @ebx, align 4
  %v2_109fd = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_109fd, i32* @eax, align 4
  %v2_10a0a = call i32 @function_24593(i32 %v2_109fd, i32 %arg1)
  store i32 %v2_109fd, i32* @eax, align 4
  %v0_10a19 = load i32, i32* @ebx, align 4
  %v2_10a1c = call i32 @function_2469b(i32 %v0_10a19, i32 %v2_109fd)
  store i32 %v2_109fd, i32* @eax, align 4
  %v1_10a2a = call i32 @function_245e5(i32 %v2_109fd)
  store i32 %v2_109fd, i32* @eax, align 4
  %v1_10a50 = call i32 @function_245e5(i32 %v2_109fd)
  ret i32 %v1_10a50

; uselistorder directives
  uselistorder i32 (i32)* @function_245e5, { 1, 0 }
}

define i32 @_Z16GetSerializeSizeIhSaIhEEjRKSt6vectorIT_T0_Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10a6b:
  %stack_var_-17 = alloca i32, align 4
  %v2_10a8e = ptrtoint i32* %stack_var_-17 to i32
  store i32 %arg1, i32* @eax, align 4
  %v7_10aa9 = call i32 @function_2485d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v2_10a8e, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_10aa9

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ac2:
  store i32 %arg1, i32* @eax, align 4
  %v1_10adf = call i32 @function_24956(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10af0

bb:                                               ; preds = %dec_label_pc_10ac2
  %v1_10aee = call i32 @function_10af5()
  br label %dec_label_pc_10af0

dec_label_pc_10af0:                               ; preds = %bb, %dec_label_pc_10ac2
  %v2_10aee = phi i32 [ %v1_10aee, %bb ], [ 0, %dec_label_pc_10ac2 ]
  ret i32 %v2_10aee

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10af5() local_unnamed_addr {
dec_label_pc_10af5:
  %v0_10af6 = load i32, i32* @eax, align 4
  ret i32 %v0_10af6
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10af8:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_10afb = load i32, i32* %ebx.global-to-local, align 4
  %v1_10b16 = call i32 @function_24a42(i32 %tmp102)
  store i32 %v1_10b16, i32* @eax, align 4
  %v1_10b1e = add i32 %tmp102, 4
  %v2_10b1e = inttoptr i32 %v1_10b1e to i32*
  %v3_10b1e = load i32, i32* %v2_10b1e, align 4
  %v2_10b24 = load i32, i32* %arg1, align 4
  %v3_10b31 = call i32 @function_24a6f(i32 %v2_10b24, i32 %v3_10b1e, i32 %v1_10b16)
  store i32 %tmp102, i32* @eax, align 4
  %v1_10b3c = call i32 @function_249c2(i32 %tmp102)
  store i32 %v0_10afb, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
}

define i32 @_ZN25zero_after_free_allocatorIcEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b72:
  ret i32 %arg1
}

define i32 @function_10ba4() local_unnamed_addr {
dec_label_pc_10ba4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10ba4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10ba4 = add i32 %v0_10ba4, -1
  store i32 %v1_10ba4, i32* %ecx.global-to-local, align 4
  %v0_10ba6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10ba6
}

define i32 @_ZN25zero_after_free_allocatorIcED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ba8:
  ret i32 %arg1
}

define i32 @function_10bda() local_unnamed_addr {
dec_label_pc_10bda:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10bda = load i32, i32* %ecx.global-to-local, align 4
  %v1_10bda = add i32 %v0_10bda, -1
  store i32 %v1_10bda, i32* %ecx.global-to-local, align 4
  %v0_10bdc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10bdc
}

define i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10bde:
  %stack_var_-20 = alloca i32, align 4
  %v2_10bfe = load i32, i32* %arg2, align 4
  store i32 %v2_10bfe, i32* %stack_var_-20, align 4
  %v2_10c03 = ptrtoint i32* %stack_var_-20 to i32
  %v2_10c10 = call i32 @function_24bb8(i32 %arg1, i32 %v2_10c03)
  ret i32 %arg1
}

define i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c2e:
  %stack_var_-20 = alloca i32, align 4
  %v1_10c4e = add i32 %arg2, 4
  %v2_10c4e = inttoptr i32 %v1_10c4e to i32*
  %v3_10c4e = load i32, i32* %v2_10c4e, align 4
  store i32 %v3_10c4e, i32* %stack_var_-20, align 4
  %v2_10c54 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_10c61 = call i32 @function_24c08(i32 %arg1, i32 %v2_10c54)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c7e:
  %v1_10c9e = add i32 %arg2, 4
  store i32 %arg1, i32* @eax, align 4
  %v2_10cab = call i32 @function_24c92(i32 %arg1, i32 %v1_10c9e)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10cc8:
  %v2_10cf2 = call i32 @function_24cdc(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10d10:
  %stack_var_-20 = alloca i32, align 4
  %v2_10d36 = load i32, i32* %arg2, align 4
  %v1_10d3b = inttoptr i32 %arg3 to i32*
  %v2_10d3b = load i32, i32* %v1_10d3b, align 4
  %v2_10d3d = add i32 %v2_10d3b, %v2_10d36
  store i32 %v2_10d3d, i32* %stack_var_-20, align 4
  %v2_10d42 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_10d4f = call i32 @function_24d24(i32 %arg1, i32 %v2_10d42)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10d63

bb:                                               ; preds = %dec_label_pc_10d10
  %v1_10d61 = call i32 @function_10d68()
  br label %dec_label_pc_10d63

dec_label_pc_10d63:                               ; preds = %bb, %dec_label_pc_10d10
  %v2_10d61 = phi i32 [ %v1_10d61, %bb ], [ %arg1, %dec_label_pc_10d10 ]
  ret i32 %v2_10d61

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_10d68() local_unnamed_addr {
dec_label_pc_10d68:
  %v0_10d69 = load i32, i32* @eax, align 4
  ret i32 %v0_10d69
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10d6c:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_10d6c = load i32, i32* %ebp.global-to-local, align 4
  %v1_10d86 = add i32 %tmp100, 4
  %v2_10d86 = inttoptr i32 %v1_10d86 to i32*
  %v3_10d86 = load i32, i32* %v2_10d86, align 4
  %v2_10d8e = load i32, i32* %arg1, align 4
  %v2_10d92 = sub i32 %v3_10d86, %v2_10d8e
  store i32 %v0_10d6c, i32* %ebp.global-to-local, align 4
  ret i32 %v2_10d92
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE6insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10daa:
  %edx.global-to-local = alloca i32, align 4
  %v0_10dd3 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_10dd3, 16777216
  %v5_10df2 = sdiv i32 %sext, 16777216
  %v6_10df2 = call i32 @function_24f3e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_10df2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxxmiIPcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e0a:
  store i32 %arg1, i32* @eax, align 4
  %v1_10e2e = call i32 @function_24f70(i32 %arg1)
  %v1_10e33 = inttoptr i32 %v1_10e2e to i32*
  %v2_10e33 = load i32, i32* %v1_10e33, align 4
  store i32 %v2_10e33, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_10e3d = call i32 @function_24f70(i32 %arg2)
  %v1_10e42 = inttoptr i32 %v1_10e3d to i32*
  %v2_10e42 = load i32, i32* %v1_10e42, align 4
  %v0_10e44 = load i32, i32* @ebx, align 4
  %v2_10e46 = sub i32 %v0_10e44, %v2_10e42
  ret i32 %v2_10e46

; uselistorder directives
  uselistorder i32 (i32)* @function_24f70, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6detail21is_static_visitor_tagC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e62:
  ret i32 0
}

define i32 @_ZN5boost14static_visitorIvEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e8c:
  store i32 %arg1, i32* @eax, align 4
  %v1_10ea9 = call i32 @function_21cee(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost14static_visitorIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ec2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10ee5

bb:                                               ; preds = %dec_label_pc_10ec2
  %v2_10ee3 = call i32 @function_10eea(i32 %arg1)
  br label %dec_label_pc_10ee5

dec_label_pc_10ee5:                               ; preds = %bb, %dec_label_pc_10ec2
  %v3_10ee3 = phi i32 [ %v2_10ee3, %bb ], [ 0, %dec_label_pc_10ec2 ]
  ret i32 %v3_10ee3
}

define i32 @function_10eea(i32 %arg1) local_unnamed_addr {
dec_label_pc_10eea:
  %v0_10eeb = load i32, i32* @eax, align 4
  ret i32 %v0_10eeb
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderjEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10eec:
  store i1 false, i1* @cf, align 1
  %v2_10f1f = load i32, i32* %arg2, align 4
  store i32 %v2_10f1f, i32* @eax, align 4
  %v3_10f32 = call i32 @function_1e625(i32 %v2_10f1f, i32 %arg3, i32 %arg4)
  store i32 %v3_10f32, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10f43

bb:                                               ; preds = %dec_label_pc_10eec
  %v1_10f41 = call i32 @function_10f48()
  br label %dec_label_pc_10f43

dec_label_pc_10f43:                               ; preds = %bb, %dec_label_pc_10eec
  %v2_10f41 = phi i32 [ %v1_10f41, %bb ], [ %v3_10f32, %dec_label_pc_10eec ]
  ret i32 %v2_10f41
}

define i32 @function_10f48() local_unnamed_addr {
dec_label_pc_10f48:
  %v0_10f49 = load i32, i32* @eax, align 4
  ret i32 %v0_10f49
}

define i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f4a:
  store i32 %arg1, i32* @eax, align 4
  %v1_10f67 = call i32 @function_252aa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10f78

bb:                                               ; preds = %dec_label_pc_10f4a
  %v1_10f76 = call i32 @function_10f7d()
  br label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %bb, %dec_label_pc_10f4a
  %v2_10f76 = phi i32 [ %v1_10f76, %bb ], [ 0, %dec_label_pc_10f4a ]
  ret i32 %v2_10f76

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10f7d() local_unnamed_addr {
dec_label_pc_10f7d:
  %v0_10f7e = load i32, i32* @eax, align 4
  ret i32 %v0_10f7e
}

define i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10f80:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_10f83 = load i32, i32* %ebx.global-to-local, align 4
  store i1 false, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 4
  %v1_10f9e = call i32 @function_25396(i32 %tmp102)
  store i32 %v1_10f9e, i32* @eax, align 4
  %v1_10fa6 = add i32 %tmp102, 4
  %v2_10fa6 = inttoptr i32 %v1_10fa6 to i32*
  %v3_10fa6 = load i32, i32* %v2_10fa6, align 4
  store i32 %v3_10fa6, i32* @ecx, align 4
  %v2_10fac = load i32, i32* %arg1, align 4
  store i32 %v2_10fac, i32* @edx, align 8
  %v3_10fb9 = call i32 @function_253c3(i32 %v2_10fac, i32 %v3_10fa6, i32 %v1_10f9e)
  store i32 %tmp102, i32* @eax, align 4
  %v1_10fc4 = call i32 @function_25316(i32 %tmp102)
  store i32 %v0_10f83, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
}

define i32 @_ZNSaIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ffa:
  store i32 %arg1, i32* @eax, align 4
  %v1_11017 = call i32 @function_25486(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11028

bb:                                               ; preds = %dec_label_pc_10ffa
  %v1_11026 = call i32 @function_1102d()
  br label %dec_label_pc_11028

dec_label_pc_11028:                               ; preds = %bb, %dec_label_pc_10ffa
  %v2_11026 = phi i32 [ %v1_11026, %bb ], [ 0, %dec_label_pc_10ffa ]
  ret i32 %v2_11026

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1102d() local_unnamed_addr {
dec_label_pc_1102d:
  %v0_1102e = load i32, i32* @eax, align 4
  ret i32 %v0_1102e
}

define i32 @_ZNSaIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11030:
  store i32 %arg1, i32* @eax, align 4
  %v1_1104d = call i32 @function_254e6(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost3argILi1EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11066:
  ret i32 0
}

define i32 @_ZN5boost3argILi2EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11090:
  ret i32 0
}

define i32 @_ZN5boost3argILi3EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_110ba:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_110dd

bb:                                               ; preds = %dec_label_pc_110ba
  %v2_110db = call i32 @function_110e2(i32 %arg1)
  br label %dec_label_pc_110dd

dec_label_pc_110dd:                               ; preds = %bb, %dec_label_pc_110ba
  %v3_110db = phi i32 [ %v2_110db, %bb ], [ 0, %dec_label_pc_110ba ]
  ret i32 %v3_110db
}

define i32 @function_110e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_110e2:
  %v0_110e3 = load i32, i32* @eax, align 4
  ret i32 %v0_110e3
}

define i32 @_ZN5boost3argILi4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_110e4:
  ret i32 0
}

define i32 @_ZN5boost3argILi5EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1110e:
  ret i32 0
}

define i32 @_ZN5boost3argILi6EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11138:
  ret i32 0
}

define i32 @_ZN5boost3argILi7EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11162:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11185

bb:                                               ; preds = %dec_label_pc_11162
  %v2_11183 = call i32 @function_1118a(i32 %arg1)
  br label %dec_label_pc_11185

dec_label_pc_11185:                               ; preds = %bb, %dec_label_pc_11162
  %v3_11183 = phi i32 [ %v2_11183, %bb ], [ 0, %dec_label_pc_11162 ]
  ret i32 %v3_11183
}

define i32 @function_1118a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1118a:
  %v0_1118b = load i32, i32* @eax, align 4
  ret i32 %v0_1118b
}

define i32 @_ZN5boost3argILi8EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1118c:
  ret i32 0
}

define i32 @_ZN5boost3argILi9EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_111b6:
  ret i32 0
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_111e0:
  %v1_11208 = trunc i32 %arg6 to i8
  %v0_11219 = load i32, i32* @ecx, align 4
  %sext = mul i32 %v0_11219, 16777216
  %v3_11227 = sdiv i32 %sext, 16777216
  %v4_11227 = call i32 @function_25842(i32 %arg1, i32 %arg2, i32 %v3_11227)
  %v10_1122c = icmp eq i8 %v1_11208, 0
  %v4_1125b = sext i8 %arg4 to i32
  store i32 %arg1, i32* @eax, align 4
  br i1 %v10_1122c, label %dec_label_pc_11254, label %dec_label_pc_11232

dec_label_pc_11232:                               ; preds = %dec_label_pc_111e0
  %v5_1124d = call i32 @function_258ce(i32 %arg1, i32 %arg3, i32 %v4_1125b, i32 %arg5)
  %v0_11252 = call i32 @function_1128d()
  ret i32 %v0_11252

dec_label_pc_11254:                               ; preds = %dec_label_pc_111e0
  %v5_1126f = call i32 @function_25968(i32 %arg1, i32 %arg3, i32 %v4_1125b, i32 %arg5)
  %v0_11274 = call i32 @function_1128d()
  ret i32 %v0_11274

; uselistorder directives
  uselistorder i32 ()* @function_1128d, { 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
}

define i32 @function_11277() local_unnamed_addr {
dec_label_pc_11277:
  %eax.global-to-local = alloca i32, align 4
  %v0_11277 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11277
}

define i32 @function_1128d() local_unnamed_addr {
dec_label_pc_1128d:
  %v0_1128d = load i32, i32* @ebp, align 4
  %v1_1128d = add i32 %v0_1128d, -12
  %v2_1128d = inttoptr i32 %v1_1128d to i32*
  %v3_1128d = load i32, i32* %v2_1128d, align 4
  %v1_11290 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11290 = xor i32 %v1_11290, %v3_1128d
  ret i32 %v2_11290
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_112a4:
  store i32 %arg1, i32* @eax, align 4
  %v1_112c1 = call i32 @function_25aa4(i32 %arg1)
  store i32 %v1_112c1, i32* @eax, align 4
  %v4_112c6 = trunc i32 %v1_112c1 to i8
  store i1 false, i1* @cf, align 1
  %v5_112c6 = icmp eq i8 %v4_112c6, 0
  br i1 %v5_112c6, label %dec_label_pc_112cf, label %dec_label_pc_112ca

dec_label_pc_112ca:                               ; preds = %dec_label_pc_112a4
  %v0_112ca = call i32 @function_112e6()
  br label %dec_label_pc_112cf

dec_label_pc_112cf:                               ; preds = %dec_label_pc_112ca, %dec_label_pc_112a4
  store i32 %arg1, i32* @eax, align 4
  %v1_112d5 = call i32 @function_2594c(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
}

define i32 @function_112e6() local_unnamed_addr {
dec_label_pc_112e6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_112eb() local_unnamed_addr {
dec_label_pc_112eb:
  %eax.global-to-local = alloca i32, align 4
  %v0_112ec = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_112ec
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_112ee:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 4
  %v1_11311 = call i32 @function_24e50(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  %v1_11324 = call i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI5CTxInSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11335

bb:                                               ; preds = %dec_label_pc_112ee
  %v1_11333 = call i32 @function_1133a()
  br label %dec_label_pc_11335

dec_label_pc_11335:                               ; preds = %bb, %dec_label_pc_112ee
  %v2_11333 = phi i32 [ %v1_11333, %bb ], [ 0, %dec_label_pc_112ee ]
  ret i32 %v2_11333

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_1133a() local_unnamed_addr {
dec_label_pc_1133a:
  %v0_1133b = load i32, i32* @eax, align 4
  ret i32 %v0_1133b
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1133c:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1133c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1135c = inttoptr i32 %arg2 to i32*
  %v2_1135c = load i32, i32* %v1_1135c, align 4
  store i32 %v2_1135c, i32* %arg1, align 4
  store i32 %v0_1133c, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11382:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_1139f = call i32 @function_159f8(i32 %tmp100)
  %v1_113a7 = add i32 %tmp100, 20
  store i32 %v1_113a7, i32* @eax, align 4
  %v1_113ad = call i32 @function_1558a(i32 %v1_113a7)
  store i32 ptrtoint (%vtable_2b470_type* @global_var_2b470.1828 to i32), i32* %arg1, align 4
  %v2_113be = inttoptr i32 %v1_113a7 to i32*
  store i32 ptrtoint (i32* @global_var_2b480.1829 to i32), i32* %v2_113be, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_113d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_113dd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_113dd
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_113e2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b470_type* @global_var_2b470.1828 to i32), i32* %arg1, align 4
  %v1_11405 = add i32 %tmp99, 20
  %v2_11405 = inttoptr i32 %v1_11405 to i32*
  store i32 ptrtoint (i32* @global_var_2b480.1829 to i32), i32* %v2_11405, align 4
  ret i32 %v1_11405
}

define i32 @function_1144c() local_unnamed_addr {
dec_label_pc_1144c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1144c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1144c = add i32 %v0_1144c, -1
  store i32 %v1_1144c, i32* %ecx.global-to-local, align 4
  %v0_1144e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1144e
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11450:
  %v4_11450 = add i32 %arg1, -20
  %v1_11455 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %v4_11450)
  ret i32 %v1_11455
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) {
dec_label_pc_11458:
  store i32 %arg1, i32* @eax, align 4
  %v1_11475 = call i32 @function_22832(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_11484() local_unnamed_addr {
dec_label_pc_11484:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11484 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11484 = add i32 %v0_11484, 862319685
  %v2_11484 = inttoptr i32 %v1_11484 to i32*
  %v3_11484 = load i32, i32* %v2_11484, align 4
  %v4_11484 = add i32 %v3_11484, -1
  store i32 %v4_11484, i32* %v2_11484, align 4
  %v0_1148a = load i32, i32* %eax.global-to-local, align 4
  %v1_1148a = add i32 %v0_1148a, 20
  store i32 %v1_1148a, i32* %eax.global-to-local, align 4
  ret i32 %v1_1148a
}

define i32 @_ZNSt9bad_allocC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11498:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 4
  %v2_114c2 = call i32 @function_1efa2(i32 %tmp103, i32 %arg2)
  store i32 8, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_114dc

bb:                                               ; preds = %dec_label_pc_11498
  %v1_114da = call i32 @function_114e1()
  br label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %bb, %dec_label_pc_11498
  %v2_114da = phi i32 [ %v1_114da, %bb ], [ 0, %dec_label_pc_11498 ]
  ret i32 %v2_114da

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @function_114e1() local_unnamed_addr {
dec_label_pc_114e1:
  %v0_114e2 = load i32, i32* @eax, align 4
  ret i32 %v0_114e2
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_114e4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_11516 = add i32 %arg2, 20
  %v1_1151c = add i32 %tmp103, 20
  %v2_11526 = call i32 @function_2297c(i32 %v1_1151c, i32 %v1_11516)
  store i32 ptrtoint (%vtable_2b470_type* @global_var_2b470.1828 to i32), i32* %arg1, align 4
  %v2_11537 = inttoptr i32 %v1_1151c to i32*
  store i32 ptrtoint (i32* @global_var_2b480.1829 to i32), i32* %v2_11537, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_2b470_type* @global_var_2b470.1828 to i32), { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11552:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_11584 = add i32 %arg2, 24
  %v1_1158a = add i32 %tmp103, 24
  store i32 %v1_1158a, i32* @eax, align 4
  %v2_11594 = call i32 @function_21d3c(i32 %v1_1158a, i32 %v1_11584)
  store i32 ptrtoint (%vtable_2b410_type* @global_var_2b410.1830 to i32), i32* %arg1, align 4
  %v1_115a5 = add i32 %tmp103, 20
  %v2_115a5 = inttoptr i32 %v1_115a5 to i32*
  store i32 ptrtoint (i32* @global_var_2b428.1831 to i32), i32* %v2_115a5, align 4
  %v2_115af = inttoptr i32 %v1_1158a to i32*
  store i32 ptrtoint (i32* @global_var_2b43c.1832 to i32), i32* %v2_115af, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_115d0:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_115ea = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_115ea, i32* @eax, align 4
  %v1_115f0 = call i32 @function_22952(i32 %v2_115ea)
  %v2_115fc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_115fc, i32* @eax, align 4
  %v3_11602 = call i32 @function_25e80(i32 %v2_115fc, i32 %v2_115ea)
  %v2_1160f = ptrtoint i32* %stack_var_-44 to i32
  %v3_11615 = call i32 @function_15c0e(i32 %v2_1160f, i32 81)
  %v2_11622 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_11622, i32* @eax, align 4
  %v3_11628 = call i32 @function_15bd6(i32 %v2_11622, i32 ptrtoint ([54 x i8]* @global_var_60d0.1833 to i32))
  %v2_11635 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11635, i32* @eax, align 4
  %v3_1163b = call i32 @function_15b9e(i32 %v2_11635, i32 ptrtoint ([169 x i8]* @global_var_6288.1834 to i32))
  store i32 %v2_115fc, i32* @eax, align 4
  %v3_1164d = call i32 @function_26006(i32 %v2_115fc, i32 %v2_11635)
  store i32 %v3_1164d, i32* @eax, align 4
  %v3_1165c = call i32 @function_26048(i32 %v3_1164d, i32 %v2_11622)
  store i32 %v3_1165c, i32* @eax, align 4
  store i32 %v2_1160f, i32* @edx, align 8
  %v3_1166b = call i32 @function_2608a(i32 %v3_1165c, i32 %v2_1160f)
  %v2_11675 = load i8, i8* inttoptr (i32 71120 to i8*), align 16
  %v3_11675 = zext i8 %v2_11675 to i32
  ret i32 %v3_11675
}

define i32 @function_116a3() local_unnamed_addr {
dec_label_pc_116a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_116a3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_116a3
}

define i32 @function_1172f() local_unnamed_addr {
dec_label_pc_1172f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1172f = load i32, i32* %ecx.global-to-local, align 4
  %v1_1172f = add i32 %v0_1172f, -1996297221
  %v2_1172f = inttoptr i32 %v1_1172f to i32*
  %v3_1172f = load i32, i32* %v2_1172f, align 4
  %v4_1172f = add i32 %v3_1172f, -1
  store i32 %v4_1172f, i32* %v2_1172f, align 4
  %v0_11735 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11735
}

define i32 @function_11748() local_unnamed_addr {
dec_label_pc_11748:
  %v0_11748 = call i32 @function_1174c()
  ret i32 %v0_11748
}

define i32 @function_1174a() local_unnamed_addr {
dec_label_pc_1174a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1174a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1174a
}

define i32 @function_1174c() local_unnamed_addr {
dec_label_pc_1174c:
  %v0_1174c = load i32, i32* @ebp, align 4
  %v1_1174c = add i32 %v0_1174c, -92
  %v1_11752 = call i32 @__stack_chk_fail.895(i32 %v1_1174c)
  %v0_11757 = call i32 @function_1175b()
  ret i32 %v0_11757
}

define i32 @function_11759() local_unnamed_addr {
dec_label_pc_11759:
  %eax.global-to-local = alloca i32, align 4
  %v0_11759 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11759
}

define i32 @function_1175b() local_unnamed_addr {
dec_label_pc_1175b:
  %v0_1175b = load i32, i32* @ebp, align 4
  %v1_1175b = add i32 %v0_1175b, -64
  store i32 %v1_1175b, i32* @eax, align 4
  %v1_11761 = call i32 @function_229b2(i32 %v1_1175b)
  %v0_11766 = load i32, i32* @ebx, align 4
  ret i32 %v0_11766
}

define i32 @function_11770() local_unnamed_addr {
dec_label_pc_11770:
  %eax.global-to-local = alloca i32, align 4
  %v0_11770 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11770
}

define i32 @function_11775(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11775:
  %eax.global-to-local = alloca i32, align 4
  %v0_1177c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1177c
}

define i32 @_ZSt4swapIbEvRT_S1_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1177f:
  %tmp107 = inttoptr i32 %arg2 to i8*
  %v2_1179f = load i8, i8* %arg1, align 1
  %v2_117a8 = load i8, i8* %tmp107, align 1
  store i8 %v2_117a8, i8* %arg1, align 1
  store i8 %v2_1179f, i8* %tmp107, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_117c5

bb:                                               ; preds = %dec_label_pc_1177f
  %v4_1179c = ptrtoint i8* %arg1 to i32
  %v5_117c3 = call i32 @function_117ca(i32 %arg2, i32 %v4_1179c)
  br label %dec_label_pc_117c5

dec_label_pc_117c5:                               ; preds = %bb, %dec_label_pc_1177f
  %v6_117c3 = phi i32 [ %v5_117c3, %bb ], [ 0, %dec_label_pc_1177f ]
  ret i32 %v6_117c3

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0, 2 }
}

define i32 @function_117ca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_117ca:
  %v0_117cb = load i32, i32* @eax, align 4
  ret i32 %v0_117cb
}

define i32 @_Z3REFI9CFlatDataERT_RKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_117cc:
  ret i32 %arg1
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder9CFlatDataEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_117f9:
  store i32 %arg2, i32* @eax, align 4
  %v3_1183d = call i32 @function_2636b(i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v3_1183d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1184e

bb:                                               ; preds = %dec_label_pc_117f9
  %v1_1184c = call i32 @function_11853()
  br label %dec_label_pc_1184e

dec_label_pc_1184e:                               ; preds = %bb, %dec_label_pc_117f9
  %v2_1184c = phi i32 [ %v1_1184c, %bb ], [ %v3_1183d, %dec_label_pc_117f9 ]
  ret i32 %v2_1184c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_11853() local_unnamed_addr {
dec_label_pc_11853:
  %v0_11854 = load i32, i32* @eax, align 4
  ret i32 %v0_11854
}

define i32 @_ZNSt6vectorIhSaIhEEC1IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11856:
  %ebx.global-to-local = alloca i32, align 4
  %v2_1188d = call i32 @function_264f4(i32 %arg1, i32 %arg4)
  %v0_11892 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_11892, 16777216
  %v4_118aa = sdiv i32 %sext, 16777216
  %v5_118aa = call i32 @function_26536(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v4_118aa)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_118d4

bb:                                               ; preds = %dec_label_pc_11856
  %v1_118d2 = call i32 @function_118d9()
  br label %dec_label_pc_118d4

dec_label_pc_118d4:                               ; preds = %bb, %dec_label_pc_11856
  %v2_118d2 = phi i32 [ %v1_118d2, %bb ], [ 0, %dec_label_pc_11856 ]
  ret i32 %v2_118d2

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_118d9() local_unnamed_addr {
dec_label_pc_118d9:
  %v0_118de = load i32, i32* @eax, align 4
  ret i32 %v0_118de
}

define i32 @_ZNSt6vectorIhSaIhEE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_118e0:
  ret i32 0
}

define i32 @_ZN9__gnu_cxxmiIPKhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1191e:
  %v1_11942 = call i32 @function_26658(i32 %arg1)
  %v1_11947 = inttoptr i32 %v1_11942 to i32*
  %v2_11947 = load i32, i32* %v1_11947, align 4
  %v1_11951 = call i32 @function_26658(i32 %arg2)
  %v1_11956 = inttoptr i32 %v1_11951 to i32*
  %v2_11956 = load i32, i32* %v1_11956, align 4
  %v2_1195a = sub i32 %v2_11947, %v2_11956
  store i32 %v2_1195a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1196a

bb:                                               ; preds = %dec_label_pc_1191e
  %v1_11968 = call i32 @function_1196f()
  br label %dec_label_pc_1196a

dec_label_pc_1196a:                               ; preds = %bb, %dec_label_pc_1191e
  %v2_11968 = phi i32 [ %v1_11968, %bb ], [ %v2_1195a, %dec_label_pc_1191e ]
  ret i32 %v2_11968

; uselistorder directives
  uselistorder i32 (i32)* @function_26658, { 1, 0 }
}

define i32 @function_1196f() local_unnamed_addr {
dec_label_pc_1196f:
  %v0_11974 = load i32, i32* @eax, align 4
  ret i32 %v0_11974
}

define i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11976:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_1198d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1198d, i32* @eax, align 4
  %v2_1199a = call i32 @function_225a4(i32 %v2_1198d, i32 %arg1)
  %v2_119a2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_119a2, i32* @eax, align 4
  %v2_119af = call i32 @function_22554(i32 %v2_119a2, i32 %arg1)
  %v2_119c4 = call i32 @function_25c4c(i32 %v2_119a2, i32 %v2_1198d)
  store i32 %v2_119c4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_119d5

bb:                                               ; preds = %dec_label_pc_11976
  %v1_119d3 = call i32 @function_119da()
  br label %dec_label_pc_119d5

dec_label_pc_119d5:                               ; preds = %bb, %dec_label_pc_11976
  %v2_119d3 = phi i32 [ %v1_119d3, %bb ], [ %v2_119c4, %dec_label_pc_11976 ]
  ret i32 %v2_119d3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_119da() local_unnamed_addr {
dec_label_pc_119da:
  %v0_119db = load i32, i32* @eax, align 4
  ret i32 %v0_119db
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder9COutPointEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_119dc:
  %v3_11a20 = call i32 @function_26743(i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 %v3_11a20
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder7CScriptEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_11a38:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11a8d

bb:                                               ; preds = %dec_label_pc_11a38
  %v4_11a8b = call i32 @function_11a92(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_11a8d

dec_label_pc_11a8d:                               ; preds = %bb, %dec_label_pc_11a38
  %v5_11a8b = phi i32 [ %v4_11a8b, %bb ], [ %arg2, %dec_label_pc_11a38 ]
  ret i32 %v5_11a8b
}

define i32 @function_11a92(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11a92:
  %v0_11a93 = load i32, i32* @eax, align 4
  ret i32 %v0_11a93
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderxEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11a94:
  %tmp109 = ptrtoint i32* %arg2 to i32
  %v1_11ac7 = add i32 %tmp109, 4
  %v2_11ac7 = inttoptr i32 %v1_11ac7 to i32*
  %v3_11ac7 = load i32, i32* %v2_11ac7, align 4
  store i32 %v3_11ac7, i32* @edx, align 8
  %v2_11aca = load i32, i32* %arg2, align 4
  store i32 %v2_11aca, i32* @eax, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_11ae1 = call i32 @function_1f208(i32 %v2_11aca, i32 %v3_11ac7, i32 %arg3, i32 %arg4)
  ret i32 %v4_11ae1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11afa:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_11b18 = call i32 @function_26970(i32 %tmp102)
  store i32 %v1_11b18, i32* @eax, align 4
  %v1_11b20 = add i32 %tmp102, 4
  %v2_11b20 = inttoptr i32 %v1_11b20 to i32*
  %v3_11b20 = load i32, i32* %v2_11b20, align 4
  store i32 %v3_11b20, i32* @ecx, align 4
  %v2_11b26 = load i32, i32* %arg1, align 4
  %v3_11b33 = call i32 @function_2699d(i32 %v2_11b26, i32 %v3_11b20, i32 %v1_11b18)
  store i32 %tmp102, i32* @eax, align 4
  %v1_11b3e = call i32 @function_268e6(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11b68

bb:                                               ; preds = %dec_label_pc_11afa
  %v1_11b4d = call i32 @function_11b6d()
  br label %dec_label_pc_11b68

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11afa, %bb
  %v0_11b4f = phi i32 [ 0, %dec_label_pc_11afa ], [ %v1_11b4d, %bb ]
  ret i32 %v0_11b4f

; uselistorder directives
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11b68, { 1, 0 }
}

define i32 @function_11b51() local_unnamed_addr {
dec_label_pc_11b51:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11b51 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_11b51, i32* %ebx.global-to-local, align 4
  %v0_11b53 = load i32, i32* @ebp, align 4
  %v1_11b53 = add i32 %v0_11b53, -28
  %v2_11b53 = inttoptr i32 %v1_11b53 to i32*
  %v3_11b53 = load i32, i32* %v2_11b53, align 4
  store i32 %v3_11b53, i32* @eax, align 4
  %v1_11b59 = call i32 @function_268e6(i32 %v3_11b53)
  %v0_11b5e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_11b5e, i32* %eax.global-to-local, align 4
  ret i32 %v0_11b5e

; uselistorder directives
  uselistorder i32 (i32)* @function_268e6, { 1, 0 }
}

define i32 @function_11b6d() local_unnamed_addr {
dec_label_pc_11b6d:
  %v0_11b72 = load i32, i32* @eax, align 4
  ret i32 %v0_11b72
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11b74:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp101, i32* @eax, align 4
  %v1_11b92 = call i32 @function_26b20(i32 %tmp101)
  store i32 %v1_11b92, i32* @eax, align 4
  %v1_11b9a = add i32 %tmp101, 4
  %v2_11b9a = inttoptr i32 %v1_11b9a to i32*
  %v3_11b9a = load i32, i32* %v2_11b9a, align 4
  %v2_11ba0 = load i32, i32* %arg1, align 4
  %v3_11bad = call i32 @function_26b4d(i32 %v2_11ba0, i32 %v3_11b9a, i32 %v1_11b92)
  %v1_11bb8 = call i32 @function_26a96(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11bc9

bb:                                               ; preds = %dec_label_pc_11b74
  %v1_11bc7 = call i32 @function_11be7()
  store i32 %v1_11bc7, i32* @eax, align 4
  br label %dec_label_pc_11bc9

dec_label_pc_11bc9:                               ; preds = %bb, %dec_label_pc_11b74
  %v0_11bc9 = call i32 @function_11be2()
  ret i32 %v0_11bc9

; uselistorder directives
  uselistorder i32 %tmp101, { 3, 2, 1, 0 }
}

define i32 @function_11bcc() local_unnamed_addr {
dec_label_pc_11bcc:
  %eax.global-to-local = alloca i32, align 4
  %v0_11bcc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11bcc
}

define i32 @function_11be2() local_unnamed_addr {
dec_label_pc_11be2:
  %v0_11be2 = load i32, i32* @eax, align 4
  ret i32 %v0_11be2
}

define i32 @function_11be7() local_unnamed_addr {
dec_label_pc_11be7:
  %v0_11bec = load i32, i32* @eax, align 4
  ret i32 %v0_11bec
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderiEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11bed:
  %v2_11c20 = load i32, i32* %arg2, align 4
  store i32 %v2_11c20, i32* @eax, align 4
  %v3_11c33 = call i32 @function_1f2eb(i32 %v2_11c20, i32 %arg3, i32 %arg4)
  store i32 %v3_11c33, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11c44

bb:                                               ; preds = %dec_label_pc_11bed
  %v1_11c42 = call i32 @function_11c49()
  br label %dec_label_pc_11c44

dec_label_pc_11c44:                               ; preds = %bb, %dec_label_pc_11bed
  %v2_11c42 = phi i32 [ %v1_11c42, %bb ], [ %v3_11c33, %dec_label_pc_11bed ]
  ret i32 %v2_11c42
}

define i32 @function_11c49() local_unnamed_addr {
dec_label_pc_11c49:
  %v0_11c4a = load i32, i32* @eax, align 4
  ret i32 %v0_11c4a
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderSt6vectorI5CTxInSaIS2_EEEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_11c4b:
  %v1_11c8f = call i32 @function_26c6c(i32 %arg2)
  ret i32 %v1_11c8f
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderSt6vectorI6CTxOutSaIS2_EEEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_11ca7:
  %v4_11cc5 = zext i8 %arg5 to i32
  ret i32 %v4_11cc5
}

define i32 @function_11cce() local_unnamed_addr {
dec_label_pc_11cce:
  %eax.global-to-local = alloca i32, align 4
  %v0_11cce = load i32, i32* @eax, align 4
  %v1_11cce = trunc i32 %v0_11cce to i8
  %v2_11cce = load i1, i1* @cf, align 1
  %v3_11cce = zext i1 %v2_11cce to i8
  %v4_11cce = add i8 %v3_11cce, %v1_11cce
  %v22_11cce = zext i8 %v4_11cce to i32
  %v24_11cce = and i32 %v0_11cce, -256
  %v25_11cce = or i32 %v22_11cce, %v24_11cce
  store i32 %v25_11cce, i32* %eax.global-to-local, align 4
  %v1_11cd0 = inttoptr i32 %v25_11cce to i8*
  %v2_11cd0 = load i8, i8* %v1_11cd0, align 1
  %v5_11cd0 = add i8 %v2_11cd0, %v4_11cce
  store i8 %v5_11cd0, i8* %v1_11cd0, align 1
  %v0_11cd2 = load i32, i32* %eax.global-to-local, align 4
  %v1_11cd2 = load i32, i32* @ebp, align 4
  %v2_11cd2 = add i32 %v1_11cd2, -12
  %v3_11cd2 = inttoptr i32 %v2_11cd2 to i32*
  store i32 %v0_11cd2, i32* %v3_11cd2, align 4
  store i1 false, i1* @cf, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_11cd7 = load i32, i32* @ebp, align 4
  %v1_11cd7 = add i32 %v0_11cd7, -40
  %v2_11cd7 = inttoptr i32 %v1_11cd7 to i32*
  %v3_11cd7 = load i32, i32* %v2_11cd7, align 4
  store i32 %v3_11cd7, i32* %eax.global-to-local, align 4
  %v1_11cde = add i32 %v0_11cd7, -36
  %v2_11cde = inttoptr i32 %v1_11cde to i32*
  %v3_11cde = load i32, i32* %v2_11cde, align 4
  store i32 %v3_11cde, i32* %eax.global-to-local, align 4
  %v1_11ce5 = add i32 %v0_11cd7, -32
  %v2_11ce5 = inttoptr i32 %v1_11ce5 to i32*
  %v3_11ce5 = load i32, i32* %v2_11ce5, align 4
  store i32 %v3_11ce5, i32* @eax, align 4
  %v3_11ceb = call i32 @function_26d1e(i32 %v3_11ce5, i32 %v3_11cde, i32 %v3_11cd7)
  store i32 %v3_11ceb, i32* %eax.global-to-local, align 4
  ret i32 %v3_11ceb
}

define i32 @function_11cf7() local_unnamed_addr {
dec_label_pc_11cf7:
  %v2_11cf7 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_11cf7 = load i32, i32* @eax, align 4
  %v4_11cf7 = trunc i32 %v3_11cf7 to i8
  %v5_11cf7 = add i8 %v4_11cf7, %v2_11cf7
  %v21_11cf7 = inttoptr i32 %v3_11cf7 to i8*
  store i8 %v5_11cf7, i8* %v21_11cf7, align 1
  %v0_11cf9 = load i32, i32* @ebp, align 4
  %v1_11cf9 = load i32, i32* @eax, align 4
  %v3_11cf9 = add i32 %v0_11cf9, -24
  %v4_11cf9 = add i32 %v3_11cf9, %v1_11cf9
  %v5_11cf9 = inttoptr i32 %v4_11cf9 to i8*
  %v6_11cf9 = load i8, i8* %v5_11cf9, align 1
  %v7_11cf9 = load i32, i32* @edx, align 8
  %v8_11cf9 = udiv i32 %v7_11cf9, 256
  %v9_11cf9 = trunc i32 %v8_11cf9 to i8
  %v10_11cf9 = add i8 %v9_11cf9, %v6_11cf9
  store i8 %v10_11cf9, i8* %v5_11cf9, align 1
  %v31_11cf9 = load i32, i32* @eax, align 4
  ret i32 %v31_11cf9
}

define i32 @function_11d00() local_unnamed_addr {
dec_label_pc_11d00:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11d00 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11d00 = add i32 %v0_11d00, -1
  store i32 %v1_11d00, i32* %ecx.global-to-local, align 4
  %v0_11d02 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11d02
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11d04:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_11d04 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11d1e = add i32 %tmp100, 4
  %v2_11d1e = inttoptr i32 %v1_11d1e to i32*
  %v3_11d1e = load i32, i32* %v2_11d1e, align 4
  %v2_11d26 = load i32, i32* %arg1, align 4
  %v2_11d2a = sub i32 %v3_11d1e, %v2_11d26
  %v2_11d2e = sdiv i32 %v2_11d2a, 4
  %v3_11d31 = mul i32 %v2_11d2e, -991146299
  store i32 %v0_11d04, i32* %ebp.global-to-local, align 4
  ret i32 %v3_11d31
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d4a:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v0_11d4d = load i32, i32* %esi.global-to-local, align 4
  %v0_11d4e = load i32, i32* %ebx.global-to-local, align 4
  %v1_11d6f = call i32 @function_26f58(i32 %arg2)
  store i32 %v1_11d6f, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_11d7c = call i32 @function_23c66(i32 %arg2)
  store i32 %v1_11d7c, i32* @eax, align 4
  %v0_11d84 = load i32, i32* @ebx, align 4
  %v3_11d8f = call i32 @function_26f86(i32 %tmp108, i32 %v1_11d7c, i32 %v0_11d84)
  store i32 %tmp108, i32* @eax, align 4
  %v1_11d9a = call i32 @function_26cf6(i32 %tmp108)
  store i32 %v1_11d9a, i32* @ebx, align 4
  %v2_11da4 = load i32, i32* %arg1, align 4
  store i32 %v2_11da4, i32* @esi, align 4
  %v2_11da6 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_11da6, i32* @eax, align 4
  %v2_11db3 = call i32 @function_26eb8(i32 %v2_11da6, i32 %arg2)
  %v2_11dbb = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_11dbb, i32* @eax, align 4
  %v2_11dc8 = call i32 @function_26f08(i32 %v2_11dbb, i32 %arg2)
  %v0_11dd0 = load i32, i32* @ebx, align 4
  %v0_11dd4 = load i32, i32* @esi, align 4
  %v3_11dd8 = load i32, i32* %stack_var_-20, align 4
  %v3_11ddf = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_11ddf, i32* @eax, align 4
  %v4_11de5 = call i32 @function_2702b(i32 %v3_11ddf, i32 %v3_11dd8, i32 %v0_11dd4, i32 %v0_11dd0)
  %v2_11def = add i32 %tmp108, 4
  %v3_11def = inttoptr i32 %v2_11def to i32*
  store i32 %v4_11de5, i32* %v3_11def, align 4
  store i32 %v0_11d4e, i32* %ebx.global-to-local, align 4
  store i32 %v0_11d4d, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp108, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0 }
}

define i32 @_ZNSaI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e24:
  store i32 %arg1, i32* @eax, align 4
  %v1_11e41 = call i32 @function_2715a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSaI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e5a:
  store i32 %arg1, i32* @eax, align 4
  %v1_11e77 = call i32 @function_271ba(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11e88

bb:                                               ; preds = %dec_label_pc_11e5a
  %v1_11e86 = call i32 @function_11e8d()
  br label %dec_label_pc_11e88

dec_label_pc_11e88:                               ; preds = %bb, %dec_label_pc_11e5a
  %v2_11e86 = phi i32 [ %v1_11e86, %bb ], [ 0, %dec_label_pc_11e5a ]
  ret i32 %v2_11e86

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11e8d() local_unnamed_addr {
dec_label_pc_11e8d:
  %v0_11e8e = load i32, i32* @eax, align 4
  ret i32 %v0_11e8e
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1EjRKS0_RKS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11e90:
  %v0_11eaf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 4
  %v7_11ece = call i32 @function_270cc(i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  %v3_11ee7 = call i32 @function_2721a(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v0_11eaf

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_11f0d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f0d:
  %v2_11f0d = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_11f0d = load i32, i32* @eax, align 4
  %v4_11f0d = trunc i32 %v3_11f0d to i8
  %v5_11f0d = add i8 %v4_11f0d, %v2_11f0d
  %v21_11f0d = inttoptr i32 %v3_11f0d to i8*
  store i8 %v5_11f0d, i8* %v21_11f0d, align 1
  store i32 %arg2, i32* @ebp, align 4
  %v0_11f1b = load i32, i32* @eax, align 4
  ret i32 %v0_11f1b
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11f1c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_11f36 = add i32 %tmp100, 4
  %v2_11f36 = inttoptr i32 %v1_11f36 to i32*
  %v3_11f36 = load i32, i32* %v2_11f36, align 4
  %v2_11f3e = load i32, i32* %arg1, align 4
  %v2_11f42 = sub i32 %v3_11f36, %v2_11f3e
  %v2_11f46 = sdiv i32 %v2_11f42, 4
  %v3_11f49 = mul i32 %v2_11f46, -858993459
  store i32 %v3_11f49, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11f5b

bb:                                               ; preds = %dec_label_pc_11f1c
  %v2_11f59 = call i32 @function_11f60(i32 %tmp100)
  br label %dec_label_pc_11f5b

dec_label_pc_11f5b:                               ; preds = %bb, %dec_label_pc_11f1c
  %v3_11f59 = phi i32 [ %v2_11f59, %bb ], [ %v3_11f49, %dec_label_pc_11f1c ]
  ret i32 %v3_11f59
}

define i32 @function_11f60(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f60:
  %v0_11f61 = load i32, i32* @eax, align 4
  ret i32 %v0_11f61
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder7uint256EjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_11f62:
  store i32 %arg2, i32* @eax, align 4
  %v3_11fa6 = call i32 @function_273c1(i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 %v3_11fa6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fbe:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_11fdb = call i32 @function_274a2(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11fec

bb:                                               ; preds = %dec_label_pc_11fbe
  %v1_11fea = call i32 @function_11ff1()
  br label %dec_label_pc_11fec

dec_label_pc_11fec:                               ; preds = %bb, %dec_label_pc_11fbe
  %v2_11fea = phi i32 [ %v1_11fea, %bb ], [ 0, %dec_label_pc_11fbe ]
  ret i32 %v2_11fea

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11ff1() local_unnamed_addr {
dec_label_pc_11ff1:
  %v0_11ff2 = load i32, i32* @eax, align 4
  ret i32 %v0_11ff2
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11ff4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 4
  %v1_12012 = call i32 @function_27592(i32 %tmp101)
  store i32 %v1_12012, i32* @eax, align 4
  %v1_1201a = add i32 %tmp101, 4
  %v2_1201a = inttoptr i32 %v1_1201a to i32*
  %v3_1201a = load i32, i32* %v2_1201a, align 4
  store i32 %v3_1201a, i32* @ecx, align 4
  %v2_12020 = load i32, i32* %arg1, align 4
  store i32 %v2_12020, i32* @edx, align 8
  %v3_1202d = call i32 @function_275bf(i32 %v2_12020, i32 %v3_1201a, i32 %v1_12012)
  store i32 %tmp101, i32* @eax, align 4
  %v1_12038 = call i32 @function_2750e(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12049

bb:                                               ; preds = %dec_label_pc_11ff4
  %v1_12047 = call i32 @function_12067()
  store i32 %v1_12047, i32* @eax, align 4
  br label %dec_label_pc_12049

dec_label_pc_12049:                               ; preds = %bb, %dec_label_pc_11ff4
  %v0_12049 = call i32 @function_12062()
  ret i32 %v0_12049

; uselistorder directives
  uselistorder i32 %tmp101, { 4, 3, 2, 1, 0 }
}

define i32 @function_1204c() local_unnamed_addr {
dec_label_pc_1204c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1204c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1204c
}

define i32 @function_12062() local_unnamed_addr {
dec_label_pc_12062:
  %v0_12062 = load i32, i32* @eax, align 4
  ret i32 %v0_12062
}

define i32 @function_12067() local_unnamed_addr {
dec_label_pc_12067:
  %v0_1206c = load i32, i32* @eax, align 4
  ret i32 %v0_1206c
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1206e:
  %v1_1208b = call i32 @function_276b8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1209c

bb:                                               ; preds = %dec_label_pc_1206e
  %v1_1209a = call i32 @function_120a1()
  br label %dec_label_pc_1209c

dec_label_pc_1209c:                               ; preds = %bb, %dec_label_pc_1206e
  %v2_1209a = phi i32 [ %v1_1209a, %bb ], [ 0, %dec_label_pc_1206e ]
  ret i32 %v2_1209a
}

define i32 @function_120a1() local_unnamed_addr {
dec_label_pc_120a1:
  %v0_120a2 = load i32, i32* @eax, align 4
  ret i32 %v0_120a2
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_120a4:
  %tmp5 = ptrtoint i32* %arg1 to i32
  store i32 %tmp5, i32* @eax, align 4
  %v1_120c2 = call i32 @function_277a8(i32 %tmp5)
  store i32 %v1_120c2, i32* @eax, align 4
  %v1_120ca = add i32 %tmp5, 4
  %v2_120ca = inttoptr i32 %v1_120ca to i32*
  %v3_120ca = load i32, i32* %v2_120ca, align 4
  store i32 %v3_120ca, i32* @ecx, align 4
  %v2_120d0 = load i32, i32* %arg1, align 4
  %v3_120dd = call i32 @function_277d5(i32 %v2_120d0, i32 %v3_120ca, i32 %v1_120c2)
  store i32 %tmp5, i32* @eax, align 4
  %v1_120e8 = call i32 @function_27724(i32 %tmp5)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_120f9

bb:                                               ; preds = %dec_label_pc_120a4
  %v1_120f7 = call i32 @function_12117()
  store i32 %v1_120f7, i32* @eax, align 4
  br label %dec_label_pc_120f9

dec_label_pc_120f9:                               ; preds = %bb, %dec_label_pc_120a4
  %v0_120f9 = call i32 @function_12112()
  ret i32 %v0_120f9

; uselistorder directives
  uselistorder i32 %tmp5, { 4, 3, 2, 1, 0 }
}

define i32 @function_120fc() local_unnamed_addr {
dec_label_pc_120fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_120fc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_120fc
}

define i32 @function_12112() local_unnamed_addr {
dec_label_pc_12112:
  %v0_12112 = load i32, i32* @eax, align 4
  ret i32 %v0_12112
}

define i32 @function_12117() local_unnamed_addr {
dec_label_pc_12117:
  %v0_1211c = load i32, i32* @eax, align 4
  ret i32 %v0_1211c
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholder12CBlockHeaderEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1211d:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v3_12161 = call i32 @function_27896(i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 %v3_12161

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_Z12SerReadWriteI21ser_streamplaceholderSt6vectorI12CTransactionSaIS2_EEEjRT_RKT0_ii26CSerActionGetSerializeSize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_12179:
  %v3_121bd = call i32 @function_27941(i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v3_121bd, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_121ce

bb:                                               ; preds = %dec_label_pc_12179
  %v1_121cc = call i32 @function_121d3()
  br label %dec_label_pc_121ce

dec_label_pc_121ce:                               ; preds = %bb, %dec_label_pc_12179
  %v2_121cc = phi i32 [ %v1_121cc, %bb ], [ %v3_121bd, %dec_label_pc_12179 ]
  ret i32 %v2_121cc
}

define i32 @function_121d3() local_unnamed_addr {
dec_label_pc_121d3:
  %v0_121d4 = load i32, i32* @eax, align 4
  ret i32 %v0_121d4
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_121d6:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_121f0 = load i32, i32* %arg1, align 4
  %v2_121fc = call i32 @function_279f4(i32 %tmp101, i32 %v2_121f0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1220d

bb:                                               ; preds = %dec_label_pc_121d6
  %v1_1220b = call i32 @function_12212()
  br label %dec_label_pc_1220d

dec_label_pc_1220d:                               ; preds = %bb, %dec_label_pc_121d6
  %v2_1220b = phi i32 [ %v1_1220b, %bb ], [ 0, %dec_label_pc_121d6 ]
  ret i32 %v2_1220b
}

define i32 @function_12212() local_unnamed_addr {
dec_label_pc_12212:
  %v0_12213 = load i32, i32* @eax, align 4
  ret i32 %v0_12213
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12214:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  %v2_1222e = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 4
  %v2_1223a = call i32 @function_27a90(i32 %tmp101, i32 %v2_1222e)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1224b

bb:                                               ; preds = %dec_label_pc_12214
  %v1_12249 = call i32 @function_12250()
  br label %dec_label_pc_1224b

dec_label_pc_1224b:                               ; preds = %bb, %dec_label_pc_12214
  %v2_12249 = phi i32 [ %v1_12249, %bb ], [ 0, %dec_label_pc_12214 ]
  ret i32 %v2_12249

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_12250() local_unnamed_addr {
dec_label_pc_12250:
  %v0_12251 = load i32, i32* @eax, align 4
  ret i32 %v0_12251
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12252:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1226c = add i32 %tmp100, 4
  %v2_1226c = inttoptr i32 %v1_1226c to i32*
  %v3_1226c = load i32, i32* %v2_1226c, align 4
  %v2_12274 = load i32, i32* %arg1, align 4
  %v2_12278 = sub i32 %v3_1226c, %v2_12274
  %v2_1227c = sdiv i32 %v2_12278, 32
  store i32 %v2_1227c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1228b

bb:                                               ; preds = %dec_label_pc_12252
  %v2_12289 = call i32 @function_12290(i32 %tmp100)
  br label %dec_label_pc_1228b

dec_label_pc_1228b:                               ; preds = %bb, %dec_label_pc_12252
  %v3_12289 = phi i32 [ %v2_12289, %bb ], [ %v2_1227c, %dec_label_pc_12252 ]
  ret i32 %v3_12289

; uselistorder directives
  uselistorder i32 %v2_1227c, { 1, 0 }
}

define i32 @function_12290(i32 %arg1) local_unnamed_addr {
dec_label_pc_12290:
  %v0_12291 = load i32, i32* @eax, align 4
  ret i32 %v0_12291
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12292:
  store i32 %arg1, i32* @eax, align 4
  %v1_122af = call i32 @function_1ff94(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_122c8:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_122e5 = call i32 @function_200e0(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122fe:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp108 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_12323 = call i32 @function_27bd8(i32 %arg2)
  store i32 %arg2, i32* @eax, align 4
  %v1_12330 = call i32 @function_24002(i32 %arg2)
  store i32 %v1_12330, i32* @eax, align 4
  %v3_12343 = call i32 @function_27c06(i32 %tmp108, i32 %v1_12330, i32 %v1_12323)
  store i32 %tmp108, i32* @eax, align 4
  %v1_1234e = call i32 @function_27174(i32 %tmp108)
  %v2_12358 = load i32, i32* %arg1, align 4
  %v5_12381 = icmp ult i32* %stack_var_-64, inttoptr (i32 4 to i32*)
  store i1 %v5_12381, i1* @cf, align 1
  %v4_12399 = call i32 @function_27ca3(i32 %tmp98, i32 %tmp100, i32 %v2_12358, i32 %v1_1234e)
  %v2_123a3 = add i32 %tmp108, 4
  %v3_123a3 = inttoptr i32 %v2_123a3 to i32*
  store i32 %v4_12399, i32* %v3_123a3, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_123cb

bb:                                               ; preds = %dec_label_pc_122fe
  %v1_123b0 = call i32 @function_123d0()
  br label %dec_label_pc_123cb

dec_label_pc_123cb:                               ; preds = %dec_label_pc_122fe, %bb
  %v0_123b2 = phi i32 [ 0, %dec_label_pc_122fe ], [ %v1_123b0, %bb ]
  ret i32 %v0_123b2

; uselistorder directives
  uselistorder i32 %tmp108, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_123cb, { 1, 0 }
}

define i32 @function_123b4() local_unnamed_addr {
dec_label_pc_123b4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_123b4 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_123b4, i32* %ebx.global-to-local, align 4
  %v0_123b6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_123b6 = add i32 %v0_123b6, -28
  %v2_123b6 = inttoptr i32 %v1_123b6 to i32*
  %v3_123b6 = load i32, i32* %v2_123b6, align 4
  store i32 %v3_123b6, i32* @eax, align 4
  %v1_123bc = call i32 @function_270ea(i32 %v3_123b6)
  %v0_123c1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_123c1, i32* %eax.global-to-local, align 4
  ret i32 %v0_123c1
}

define i32 @function_123d0() local_unnamed_addr {
dec_label_pc_123d0:
  %v0_123d6 = load i32, i32* @eax, align 4
  ret i32 %v0_123d6
}

define i32 @_ZNKSt6vectorIP11CBlockIndexSaIS1_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_123d8:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_123d8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_123f2 = add i32 %tmp100, 4
  %v2_123f2 = inttoptr i32 %v1_123f2 to i32*
  %v3_123f2 = load i32, i32* %v2_123f2, align 4
  %v2_123fa = load i32, i32* %arg1, align 4
  %v2_123fe = sub i32 %v3_123f2, %v2_123fa
  %v2_12402 = sdiv i32 %v2_123fe, 4
  store i32 %v0_123d8, i32* %ebp.global-to-local, align 4
  ret i32 %v2_12402
}

define i32 @_ZNSt6vectorIP11CBlockIndexSaIS1_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12418:
  %v2_12438 = load i32, i32* %arg1, align 4
  %v2_1243d = mul i32 %arg2, 4
  %v2_12440 = add i32 %v2_12438, %v2_1243d
  store i32 %v2_12440, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1244e

bb:                                               ; preds = %dec_label_pc_12418
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1244c = call i32 @function_12453(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1244e

dec_label_pc_1244e:                               ; preds = %bb, %dec_label_pc_12418
  %v4_1244c = phi i32 [ %v3_1244c, %bb ], [ %v2_12440, %dec_label_pc_12418 ]
  ret i32 %v4_1244c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_12453(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12453:
  %v0_12454 = load i32, i32* @eax, align 4
  ret i32 %v0_12454
}

define i32 @_ZNK9base_uintILj256EE8ToStringEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12456:
  store i32 %arg1, i32* @eax, align 4
  %v2_12480 = call i32 @function_24bb6(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_21ureal_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_124a0:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_21ureal_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_124ca:
  store i32 %arg1, i32* @eax, align 4
  %v1_124e7 = call i32 @function_2496a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_124f8

bb:                                               ; preds = %dec_label_pc_124ca
  %v1_124f6 = call i32 @function_124fd()
  br label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %bb, %dec_label_pc_124ca
  %v2_124f6 = phi i32 [ %v1_124f6, %bb ], [ 0, %dec_label_pc_124ca ]
  ret i32 %v2_124f6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_124fd() local_unnamed_addr {
dec_label_pc_124fd:
  %v0_124fe = load i32, i32* @eax, align 4
  ret i32 %v0_124fe
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_20real_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12500:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_20real_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1252a:
  %v1_12547 = call i32 @function_24a2a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12558

bb:                                               ; preds = %dec_label_pc_1252a
  %v1_12556 = call i32 @function_1255d()
  br label %dec_label_pc_12558

dec_label_pc_12558:                               ; preds = %bb, %dec_label_pc_1252a
  %v2_12556 = phi i32 [ %v1_12556, %bb ], [ 0, %dec_label_pc_1252a ]
  ret i32 %v2_12556
}

define i32 @function_1255d() local_unnamed_addr {
dec_label_pc_1255d:
  %v0_1255e = load i32, i32* @eax, align 4
  ret i32 %v0_1255e
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_28strict_ureal_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12560:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_28strict_ureal_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1258a:
  store i32 %arg1, i32* @eax, align 4
  %v1_125a7 = call i32 @function_24aea(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_125b8

bb:                                               ; preds = %dec_label_pc_1258a
  %v1_125b6 = call i32 @function_125bd()
  br label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %bb, %dec_label_pc_1258a
  %v2_125b6 = phi i32 [ %v1_125b6, %bb ], [ 0, %dec_label_pc_1258a ]
  ret i32 %v2_125b6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_125bd() local_unnamed_addr {
dec_label_pc_125bd:
  %v0_125be = load i32, i32* @eax, align 4
  ret i32 %v0_125be
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_27strict_real_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_125c0:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_27strict_real_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_125ea:
  %v0_125f6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_12607 = call i32 @function_24baa(i32 %arg1)
  ret i32 %v0_125f6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12610(i32 %arg1) local_unnamed_addr {
dec_label_pc_12610:
  %v0_12610 = load i32, i32* @eax, align 4
  %v1_12610 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12610 = xor i32 %v1_12610, %v0_12610
  %v3_12610 = icmp eq i32 %v2_12610, 0
  store i32 %v2_12610, i32* @eax, align 4
  br i1 %v3_12610, label %bb, label %dec_label_pc_12618

bb:                                               ; preds = %dec_label_pc_12610
  %v1_12616 = call i32 @function_1261d()
  br label %dec_label_pc_12618

dec_label_pc_12618:                               ; preds = %bb, %dec_label_pc_12610
  %v2_12616 = phi i32 [ %v1_12616, %bb ], [ %v2_12610, %dec_label_pc_12610 ]
  ret i32 %v2_12616
}

define i32 @function_1261d() local_unnamed_addr {
dec_label_pc_1261d:
  %v0_1261e = load i32, i32* @eax, align 4
  ret i32 %v0_1261e
}

define i32 @_ZN5boost6spirit7classic18refactor_unary_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12620:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12649

bb:                                               ; preds = %dec_label_pc_12620
  %v3_12647 = call i32 @function_1264e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_12649

dec_label_pc_12649:                               ; preds = %bb, %dec_label_pc_12620
  %v4_12647 = phi i32 [ %v3_12647, %bb ], [ 0, %dec_label_pc_12620 ]
  ret i32 %v4_12647
}

define i32 @function_1264e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1264e:
  %v0_1264f = load i32, i32* @eax, align 4
  ret i32 %v0_1264f
}

define i32 @_ZN5boost6spirit7classic19refactor_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12650:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12679

bb:                                               ; preds = %dec_label_pc_12650
  %v3_12677 = call i32 @function_1267e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_12679

dec_label_pc_12679:                               ; preds = %bb, %dec_label_pc_12650
  %v4_12677 = phi i32 [ %v3_12677, %bb ], [ 0, %dec_label_pc_12650 ]
  ret i32 %v4_12677
}

define i32 @function_1267e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1267e:
  %v0_1267f = load i32, i32* @eax, align 4
  ret i32 %v0_1267f
}

define i32 @_ZN5boost6spirit7classic17attach_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12680:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_126a9

bb:                                               ; preds = %dec_label_pc_12680
  %v3_126a7 = call i32 @function_126ae(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_126a9

dec_label_pc_126a9:                               ; preds = %bb, %dec_label_pc_12680
  %v4_126a7 = phi i32 [ %v3_126a7, %bb ], [ 0, %dec_label_pc_12680 ]
  ret i32 %v4_126a7
}

define i32 @function_126ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126ae:
  %v0_126af = load i32, i32* @eax, align 4
  ret i32 %v0_126af
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_126b0:
  %v1_126cd = call i32 @function_28260(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_126de

bb:                                               ; preds = %dec_label_pc_126b0
  %v1_126dc = call i32 @function_126e3()
  br label %dec_label_pc_126de

dec_label_pc_126de:                               ; preds = %bb, %dec_label_pc_126b0
  %v2_126dc = phi i32 [ %v1_126dc, %bb ], [ 0, %dec_label_pc_126b0 ]
  ret i32 %v2_126dc
}

define i32 @function_126e3() local_unnamed_addr {
dec_label_pc_126e3:
  %v0_126e4 = load i32, i32* @eax, align 4
  ret i32 %v0_126e4
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_126e6:
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* @eax, align 4
  %v1_12704 = call i32 @function_28356(i32 %tmp6)
  store i32 %v1_12704, i32* @eax, align 4
  %v1_1270c = add i32 %tmp6, 4
  %v2_1270c = inttoptr i32 %v1_1270c to i32*
  %v3_1270c = load i32, i32* %v2_1270c, align 4
  store i32 %v3_1270c, i32* @ecx, align 4
  %v2_12712 = load i32, i32* %arg1, align 4
  %v3_1271f = call i32 @function_28383(i32 %v2_12712, i32 %v3_1270c, i32 %v1_12704)
  store i32 %tmp6, i32* @eax, align 4
  %v1_1272a = call i32 @function_282cc(i32 %tmp6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12754

bb:                                               ; preds = %dec_label_pc_126e6
  %v1_12739 = call i32 @function_12759()
  br label %dec_label_pc_12754

dec_label_pc_12754:                               ; preds = %dec_label_pc_126e6, %bb
  %v0_1273b = phi i32 [ 0, %dec_label_pc_126e6 ], [ %v1_12739, %bb ]
  ret i32 %v0_1273b

; uselistorder directives
  uselistorder i32 %tmp6, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12754, { 1, 0 }
}

define i32 @function_1273d() local_unnamed_addr {
dec_label_pc_1273d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1273d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1273d, i32* %ebx.global-to-local, align 4
  %v0_1273f = load i32, i32* @ebp, align 4
  %v1_1273f = add i32 %v0_1273f, -28
  %v2_1273f = inttoptr i32 %v1_1273f to i32*
  %v3_1273f = load i32, i32* %v2_1273f, align 4
  store i32 %v3_1273f, i32* @eax, align 4
  %v1_12745 = call i32 @function_282cc(i32 %v3_1273f)
  %v0_1274a = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1274a, i32* %eax.global-to-local, align 4
  ret i32 %v0_1274a

; uselistorder directives
  uselistorder i32 (i32)* @function_282cc, { 1, 0 }
}

define i32 @function_12759() local_unnamed_addr {
dec_label_pc_12759:
  %v0_1275e = load i32, i32* @eax, align 4
  ret i32 %v0_1275e
}

define i32 @_ZNK9base_uintILj256EE6GetHexEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12760:
  %v3_12785 = call i32 @function_127bd(i32 %arg2, i32 %arg1, i32 0)
  ret i32 %v3_12785
}

define i32 @function_127a1(i16 %arg1) local_unnamed_addr {
dec_label_pc_127a1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_127a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_127a2 = and i32 %v0_127a2, -256
  %v2_127a2 = or i32 %v1_127a2, 1
  store i32 %v2_127a2, i32* %ebx.global-to-local, align 4
  %v6_127a4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_127a4
}

define i32 @function_127bd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_127bd:
  %v0_127bd = load i32, i32* @ebp, align 4
  %v1_127c8 = add i32 %v0_127bd, -78
  ret i32 %v1_127c8
}

define i32 @function_12800() local_unnamed_addr {
dec_label_pc_12800:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_12800 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12800 = add i32 %v0_12800, 1435214917
  %v2_12800 = inttoptr i32 %v1_12800 to i32*
  %v3_12800 = load i32, i32* %v2_12800, align 4
  %v4_12800 = add i32 %v3_12800, -1
  store i32 %v4_12800, i32* %v2_12800, align 4
  %v0_12807 = load i32, i32* %edx.global-to-local, align 8
  %v1_12807 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12807 = xor i32 %v1_12807, %v0_12807
  %v3_12807 = icmp eq i32 %v2_12807, 0
  store i32 %v2_12807, i32* %edx.global-to-local, align 8
  br i1 %v3_12807, label %bb, label %dec_label_pc_12810

bb:                                               ; preds = %dec_label_pc_12800
  %v1_1280e = call i32 @function_1282e()
  store i32 %v1_1280e, i32* @eax, align 4
  br label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %bb, %dec_label_pc_12800
  %v0_12810 = call i32 @function_12829()
  ret i32 %v0_12810
}

define i32 @function_12813() local_unnamed_addr {
dec_label_pc_12813:
  %eax.global-to-local = alloca i32, align 4
  %v0_12813 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12813
}

define i32 @function_12829() local_unnamed_addr {
dec_label_pc_12829:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1282e() local_unnamed_addr {
dec_label_pc_1282e:
  %v0_12833 = load i32, i32* @eax, align 4
  ret i32 %v0_12833
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSs(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12836:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 2, i32* %arg1, align 4
  %v1_1285f = add i32 %tmp103, 4
  store i32 %v1_1285f, i32* @edx, align 8
  store i32 %arg2, i32* @eax, align 4
  %v2_1286c = call i32 @function_2858a(i32 %v1_1285f, i32 %arg2)
  %v1_12874 = add i32 %tmp103, 16
  %v2_12874 = inttoptr i32 %v1_12874 to i8*
  store i8 0, i8* %v2_12874, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1288c:
  %v1_128aa = call i32 @function_2865e(i32 %arg1)
  %v1_128b2 = add i32 %arg1, 4
  store i32 %v1_128b2, i32* @eax, align 4
  %v1_128b8 = call i32 @function_26df8(i32 %v1_128b2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_128e5

bb:                                               ; preds = %dec_label_pc_1288c
  %v1_128c7 = call i32 @function_128ea()
  br label %dec_label_pc_128e5

dec_label_pc_128e5:                               ; preds = %dec_label_pc_1288c, %bb
  %v0_128c9 = phi i32 [ 0, %dec_label_pc_1288c ], [ %v1_128c7, %bb ]
  ret i32 %v0_128c9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_128e5, { 1, 0 }
}

define i32 @function_128cb() local_unnamed_addr {
dec_label_pc_128cb:
  %eax.global-to-local = alloca i32, align 4
  %v0_128cb = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_128cb, i32* @ebx, align 4
  %v0_128cd = load i32, i32* @ebp, align 4
  %v1_128cd = add i32 %v0_128cd, -28
  %v2_128cd = inttoptr i32 %v1_128cd to i32*
  %v3_128cd = load i32, i32* %v2_128cd, align 4
  %v1_128d0 = add i32 %v3_128cd, 4
  store i32 %v1_128d0, i32* @eax, align 4
  %v1_128d6 = call i32 @function_26df8(i32 %v1_128d0)
  %v0_128db = load i32, i32* @ebx, align 4
  store i32 %v0_128db, i32* %eax.global-to-local, align 4
  ret i32 %v0_128db

; uselistorder directives
  uselistorder i32 (i32)* @function_26df8, { 1, 0 }
}

define i32 @function_128ea() local_unnamed_addr {
dec_label_pc_128ea:
  %v0_128ef = load i32, i32* @eax, align 4
  ret i32 %v0_128ef
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEEC1ERKSsRKNS_10Value_implIS2_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_128f0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_128f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12929 = add i32 %arg1, 4
  store i32 %arg3, i32* @eax, align 4
  %v2_12936 = call i32 @function_259fe(i32 %v1_12929, i32 %arg3)
  store i32 %v0_128f3, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1296c:
  %stack_var_-20 = alloca i32, align 4
  %v1_1298c = add i32 %arg1, 4
  %v2_1298c = inttoptr i32 %v1_1298c to i32*
  %v3_1298c = load i32, i32* %v2_1298c, align 4
  %v1_12992 = add i32 %arg1, 8
  %v2_12992 = inttoptr i32 %v1_12992 to i32*
  %v3_12992 = load i32, i32* %v2_12992, align 4
  %v12_12995 = icmp eq i32 %v3_1298c, %v3_12992
  br i1 %v12_12995, label %dec_label_pc_129c6, label %dec_label_pc_12999

dec_label_pc_12999:                               ; preds = %dec_label_pc_1296c
  %v3_1299c = load i32, i32* %v2_1298c, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_129b0 = call i32 @function_28826(i32 %arg1, i32 %v3_1299c, i32 %arg2)
  %v3_129b8 = load i32, i32* %v2_1298c, align 4
  %v1_129bb = add i32 %v3_129b8, 24
  store i32 %v1_129bb, i32* %v2_1298c, align 4
  br label %dec_label_pc_129f4

dec_label_pc_129c6:                               ; preds = %dec_label_pc_1296c
  %v2_129c6 = ptrtoint i32* %stack_var_-20 to i32
  %v2_129d3 = call i32 @function_28c1c(i32 %v2_129c6, i32 %arg1)
  %v3_129e2 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_129ef = call i32 @function_288a8(i32 %arg1, i32 %v3_129e2, i32 %arg2)
  br label %dec_label_pc_129f4

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129c6, %dec_label_pc_12999
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 4, 1, 0, 6, 5 }
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a08:
  %v2_12a28 = load i32, i32* %arg1, align 4
  %v2_12a2d = mul i32 %arg2, 32
  %v2_12a30 = add i32 %v2_12a28, %v2_12a2d
  store i32 %v2_12a30, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12a3e

bb:                                               ; preds = %dec_label_pc_12a08
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_12a3c = call i32 @function_12a43(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_12a3e

dec_label_pc_12a3e:                               ; preds = %bb, %dec_label_pc_12a08
  %v4_12a3c = phi i32 [ %v3_12a3c, %bb ], [ %v2_12a30, %dec_label_pc_12a08 ]
  ret i32 %v4_12a3c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_12a43(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a43:
  %v0_12a44 = load i32, i32* @eax, align 4
  ret i32 %v0_12a44
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a46:
  %stack_var_-28 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 4, i32* %arg1, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %v1_12a7d = add i32 %tmp105, 4
  %v2_12a80 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12a80, i32* @eax, align 4
  %v2_12a8a = call i32 @function_28d40(i32 %v1_12a7d, i32 %v2_12a80)
  %v1_12a92 = add i32 %tmp105, 16
  %v2_12a92 = inttoptr i32 %v1_12a92 to i8*
  store i8 0, i8* %v2_12a92, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @_Z16GetSerializeSizeI6CBlockEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12aa9:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v3_12ae0 = call i32 @function_21e4b(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_12ae0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12af8:
  store i32 %arg1, i32* @eax, align 4
  %v1_12b15 = call i32 @function_28ea6(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12b2e:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v1_12b4c = call i32 @function_28f9c(i32 %tmp6)
  store i32 %v1_12b4c, i32* @eax, align 4
  %v1_12b54 = add i32 %tmp6, 4
  %v2_12b54 = inttoptr i32 %v1_12b54 to i32*
  %v3_12b54 = load i32, i32* %v2_12b54, align 4
  %v2_12b5a = load i32, i32* %arg1, align 4
  %v3_12b67 = call i32 @function_28fc9(i32 %v2_12b5a, i32 %v3_12b54, i32 %v1_12b4c)
  %v1_12b72 = call i32 @function_28f12(i32 %tmp6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12b9c

bb:                                               ; preds = %dec_label_pc_12b2e
  %v1_12b81 = call i32 @function_12ba1()
  br label %dec_label_pc_12b9c

dec_label_pc_12b9c:                               ; preds = %dec_label_pc_12b2e, %bb
  %v0_12b83 = phi i32 [ 0, %dec_label_pc_12b2e ], [ %v1_12b81, %bb ]
  ret i32 %v0_12b83

; uselistorder directives
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12b9c, { 1, 0 }
}

define i32 @function_12b85() local_unnamed_addr {
dec_label_pc_12b85:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_12b85 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_12b85, i32* @ebx, align 4
  %v0_12b87 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12b87 = add i32 %v0_12b87, -28
  %v2_12b87 = inttoptr i32 %v1_12b87 to i32*
  %v3_12b87 = load i32, i32* %v2_12b87, align 4
  store i32 %v3_12b87, i32* %eax.global-to-local, align 4
  %v1_12b8d = call i32 @function_28f12(i32 %v3_12b87)
  %v0_12b92 = load i32, i32* @ebx, align 4
  store i32 %v0_12b92, i32* %eax.global-to-local, align 4
  ret i32 %v0_12b92

; uselistorder directives
  uselistorder i32 (i32)* @function_28f12, { 1, 0 }
}

define i32 @function_12ba1() local_unnamed_addr {
dec_label_pc_12ba1:
  %v0_12ba6 = load i32, i32* @eax, align 4
  ret i32 %v0_12ba6
}

define i32 @_ZN5boost15foreach_detail_7containIKSt6vectorI12CTransactionSaIS3_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12ba7:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v2_12bd8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_12be5 = call i32 @function_290e1(i32 %arg1, i32 %v2_12bd8)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12bf9

bb:                                               ; preds = %dec_label_pc_12ba7
  %v1_12bf7 = call i32 @function_12bfe()
  br label %dec_label_pc_12bf9

dec_label_pc_12bf9:                               ; preds = %bb, %dec_label_pc_12ba7
  %v2_12bf7 = phi i32 [ %v1_12bf7, %bb ], [ %arg1, %dec_label_pc_12ba7 ]
  ret i32 %v2_12bf7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_12bfe() local_unnamed_addr {
dec_label_pc_12bfe:
  %v0_12bff = load i32, i32* @eax, align 4
  ret i32 %v0_12bff
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12c02:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_12c31 = call i32 @function_29181(i32 %arg2)
  %v1_12c36 = inttoptr i32 %v1_12c31 to i32*
  %v2_12c36 = load i32, i32* %v1_12c36, align 4
  store i32 %v2_12c36, i32* @eax, align 4
  %v2_12c40 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_12c40, i32* @edx, align 8
  %v2_12c4a = call i32 @function_291db(i32 %v2_12c40, i32 %v2_12c36)
  store i32 %arg1, i32* @eax, align 4
  %v2_12c5f = call i32 @function_29226(i32 %arg1, i32 %v2_12c40)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12c7c:
  %stack_var_-20 = alloca i32, align 4
  %v2_12cb0 = load i32, i32* %arg2, align 4
  store i32 %v2_12cb0, i32* @eax, align 4
  %v2_12cba = ptrtoint i32* %stack_var_-20 to i32
  %v2_12cc4 = call i32 @function_292e5(i32 %v2_12cba, i32 %v2_12cb0)
  store i32 %arg1, i32* @eax, align 4
  %v2_12cd9 = call i32 @function_292a0(i32 %arg1, i32 %v2_12cba)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12ced

bb:                                               ; preds = %dec_label_pc_12c7c
  %v1_12ceb = call i32 @function_12cf2()
  br label %dec_label_pc_12ced

dec_label_pc_12ced:                               ; preds = %bb, %dec_label_pc_12c7c
  %v2_12ceb = phi i32 [ %v1_12ceb, %bb ], [ %arg1, %dec_label_pc_12c7c ]
  ret i32 %v2_12ceb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_12cf2() local_unnamed_addr {
dec_label_pc_12cf2:
  %v0_12cf3 = load i32, i32* @eax, align 4
  ret i32 %v0_12cf3
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12cf6:
  store i32 %arg2, i32* @eax, align 4
  %v1_12d20 = call i32 @function_293a9(i32 %arg2)
  store i32 %v1_12d20, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_12d2d = call i32 @function_293a9(i32 %arg1)
  store i32 %v1_12d2d, i32* @eax, align 4
  %v0_12d32 = load i32, i32* @ebx, align 4
  %v2_12d39 = call i32 @function_293d6(i32 %v1_12d2d, i32 %v0_12d32)
  store i32 %v2_12d39, i32* @eax, align 4
  store i32 0, i32* @edx, align 8
  br i1 true, label %bb, label %dec_label_pc_12d4a

bb:                                               ; preds = %dec_label_pc_12cf6
  %v1_12d48 = call i32 @function_12d4f()
  br label %dec_label_pc_12d4a

dec_label_pc_12d4a:                               ; preds = %bb, %dec_label_pc_12cf6
  %v2_12d48 = phi i32 [ %v1_12d48, %bb ], [ %v2_12d39, %dec_label_pc_12cf6 ]
  ret i32 %v2_12d48

; uselistorder directives
  uselistorder i32 (i32)* @function_293a9, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12d4f() local_unnamed_addr {
dec_label_pc_12d4f:
  %v0_12d54 = load i32, i32* @eax, align 4
  ret i32 %v0_12d54
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d55:
  store i32 %arg1, i32* @eax, align 4
  %v1_12d78 = call i32 @function_29408(i32 %arg1)
  store i32 %v1_12d78, i32* @eax, align 4
  %v1_12d80 = call i32 @function_29489(i32 %v1_12d78)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d98:
  %v1_12dbb = call i32 @function_2944b(i32 %arg1)
  store i32 %v1_12dbb, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12dd4

bb:                                               ; preds = %dec_label_pc_12d98
  %v2_12dd2 = call i32 @function_12dd9(i32 %v1_12dbb)
  br label %dec_label_pc_12dd4

dec_label_pc_12dd4:                               ; preds = %bb, %dec_label_pc_12d98
  %v3_12dd2 = phi i32 [ %v2_12dd2, %bb ], [ %v1_12dbb, %dec_label_pc_12d98 ]
  ret i32 %v3_12dd2
}

define i32 @function_12dd9(i32 %arg1) local_unnamed_addr {
dec_label_pc_12dd9:
  %v0_12dda = load i32, i32* @eax, align 4
  ret i32 %v0_12dda
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ddc:
  %stack_var_-20 = alloca i32, align 4
  %v1_12dfc = add i32 %arg1, 4
  %v2_12dfc = inttoptr i32 %v1_12dfc to i32*
  %v3_12dfc = load i32, i32* %v2_12dfc, align 4
  %v1_12e02 = add i32 %arg1, 8
  %v2_12e02 = inttoptr i32 %v1_12e02 to i32*
  %v3_12e02 = load i32, i32* %v2_12e02, align 4
  %v12_12e05 = icmp eq i32 %v3_12dfc, %v3_12e02
  br i1 %v12_12e05, label %dec_label_pc_12e36, label %dec_label_pc_12e09

dec_label_pc_12e09:                               ; preds = %dec_label_pc_12ddc
  %v3_12e0c = load i32, i32* %v2_12dfc, align 4
  %v3_12e20 = call i32 @function_2957a(i32 %arg1, i32 %v3_12e0c, i32 %arg2)
  %v3_12e28 = load i32, i32* %v2_12dfc, align 4
  %v1_12e2b = add i32 %v3_12e28, 20
  store i32 %v1_12e2b, i32* %v2_12dfc, align 4
  br label %dec_label_pc_12e64

dec_label_pc_12e36:                               ; preds = %dec_label_pc_12ddc
  %v2_12e36 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_12e36, i32* @eax, align 4
  %v2_12e43 = call i32 @function_29914(i32 %v2_12e36, i32 %arg1)
  %v3_12e52 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_12e5f = call i32 @function_295fc(i32 %arg1, i32 %v3_12e52, i32 %arg2)
  br label %dec_label_pc_12e64

dec_label_pc_12e64:                               ; preds = %dec_label_pc_12e36, %dec_label_pc_12e09
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 5, 4 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorIS3_SaIS3_EE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e78:
  %tmp7 = ptrtoint i32* %arg1 to i32
  store i32 1, i32* %arg1, align 4
  %v1_12ea1 = add i32 %tmp7, 4
  store i32 %arg2, i32* @eax, align 4
  %v2_12eae = call i32 @function_299fa(i32 %v1_12ea1, i32 %arg2)
  %v1_12eb6 = add i32 %tmp7, 16
  %v2_12eb6 = inttoptr i32 %v1_12eb6 to i8*
  store i8 0, i8* %v2_12eb6, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ex(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12ece:
  %stack_var_-44 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-44, align 4
  store i32 4, i32* %arg1, align 4
  %v1_12efd = add i32 %tmp105, 4
  %v2_12f00 = ptrtoint i32* %stack_var_-44 to i32
  %v2_12f0a = call i32 @function_29ace(i32 %v1_12efd, i32 %v2_12f00)
  %v1_12f12 = add i32 %tmp105, 16
  %v2_12f12 = inttoptr i32 %v1_12f12 to i8*
  store i8 0, i8* %v2_12f12, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ey(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f2a:
  %stack_var_-28 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 4, i32* %arg1, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %v1_12f65 = add i32 %tmp107, 4
  %v2_12f68 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12f68, i32* @eax, align 4
  %v2_12f72 = call i32 @function_29224(i32 %v1_12f65, i32 %v2_12f68)
  %v1_12f7a = add i32 %tmp107, 16
  %v2_12f7a = inttoptr i32 %v1_12f7a to i8*
  store i8 1, i8* %v2_12f7a, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12f8a

bb:                                               ; preds = %dec_label_pc_12f2a
  %v1_12f88 = call i32 @function_12f8f()
  br label %dec_label_pc_12f8a

dec_label_pc_12f8a:                               ; preds = %bb, %dec_label_pc_12f2a
  %v2_12f88 = phi i32 [ %v1_12f88, %bb ], [ 0, %dec_label_pc_12f2a ]
  ret i32 %v2_12f88

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 0 }
}

define i32 @function_12f8f() local_unnamed_addr {
dec_label_pc_12f8f:
  %v0_12f90 = load i32, i32* @eax, align 4
  ret i32 %v0_12f90
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ed(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f92:
  %stack_var_-44 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-44, align 4
  store i1 false, i1* @cf, align 1
  store i32 5, i32* %arg1, align 4
  %v1_12fc1 = add i32 %tmp105, 4
  %v2_12fc4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_12fc4, i32* @eax, align 4
  %v2_12fce = call i32 @function_29c10(i32 %v1_12fc1, i32 %v2_12fc4)
  %v1_12fd6 = add i32 %tmp105, 16
  %v2_12fd6 = inttoptr i32 %v1_12fd6 to i8*
  store i8 0, i8* %v2_12fd6, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fee:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 4
  %v1_13013 = call i32 @function_29d30(i32 %arg2)
  store i32 %v1_13013, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_13020 = call i32 @function_29cea(i32 %arg2)
  store i32 %v1_13020, i32* @eax, align 4
  %v0_13028 = load i32, i32* @ebx, align 4
  %v3_13033 = call i32 @function_29d5e(i32 %tmp108, i32 %v1_13020, i32 %v0_13028)
  store i32 %tmp108, i32* @eax, align 4
  %v1_1303e = call i32 @function_28c5e(i32 %tmp108)
  store i32 %v1_1303e, i32* @ebx, align 4
  %v2_13048 = load i32, i32* %arg1, align 4
  store i32 %v2_13048, i32* %esi.global-to-local, align 4
  %v2_1304a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1304a, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 8
  %v2_13057 = call i32 @function_29e52(i32 %v2_1304a, i32 %arg2)
  %v2_1305f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1305f, i32* @eax, align 4
  %v2_1306c = call i32 @function_29e02(i32 %v2_1305f, i32 %arg2)
  %v0_13071 = load i32, i32* @esp, align 4
  %v5_13071 = icmp ult i32 %v0_13071, 4
  store i1 %v5_13071, i1* @cf, align 1
  %v0_13074 = load i32, i32* @ebx, align 4
  %v0_13078 = load i32, i32* %esi.global-to-local, align 4
  %v3_1307c = load i32, i32* %stack_var_-20, align 4
  %v3_13083 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_13083, i32* @eax, align 4
  %v4_13089 = call i32 @function_29ea2(i32 %v3_13083, i32 %v3_1307c, i32 %v0_13078, i32 %v0_13074)
  %v2_13093 = add i32 %tmp108, 4
  %v3_13093 = inttoptr i32 %v2_13093 to i32*
  store i32 %v4_13089, i32* %v3_13093, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_130bb

bb:                                               ; preds = %dec_label_pc_12fee
  %v1_130a0 = call i32 @function_130c0()
  br label %dec_label_pc_130bb

dec_label_pc_130bb:                               ; preds = %dec_label_pc_12fee, %bb
  %v0_130a2 = phi i32 [ 0, %dec_label_pc_12fee ], [ %v1_130a0, %bb ]
  ret i32 %v0_130a2

; uselistorder directives
  uselistorder i32 %tmp108, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_130bb, { 1, 0 }
}

define i32 @function_130a4() local_unnamed_addr {
dec_label_pc_130a4:
  %eax.global-to-local = alloca i32, align 4
  %v0_130a4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_130a4
}

define i32 @function_130c0() local_unnamed_addr {
dec_label_pc_130c0:
  %v0_130c6 = load i32, i32* @eax, align 4
  ret i32 %v0_130c6
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_130c8:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v1_130e2 = add i32 %tmp4, 4
  %v2_130e2 = inttoptr i32 %v1_130e2 to i32*
  %v3_130e2 = load i32, i32* %v2_130e2, align 4
  %v2_130ea = load i32, i32* %arg1, align 4
  %v2_130ee = sub i32 %v3_130e2, %v2_130ea
  %v2_130f2 = sdiv i32 %v2_130ee, 4
  %v3_130f5 = mul i32 %v2_130f2, -858993459
  store i32 0, i32* @edx, align 8
  ret i32 %v3_130f5
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1310e:
  %tmp7 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 4
  %v1_13131 = call i32 @function_2a018(i32 %arg2)
  store i32 %v1_13131, i32* %arg1, align 4
  %v1_1313e = add i32 %arg2, 4
  %v1_13144 = add i32 %tmp7, 4
  %v2_1314e = call i32 @function_2a048(i32 %v1_13144, i32 %v1_1313e)
  %v1_13156 = add i32 %arg2, 16
  %v2_13156 = inttoptr i32 %v1_13156 to i8*
  %v3_13156 = load i8, i8* %v2_13156, align 1
  %v3_1315d = add i32 %tmp7, 16
  %v4_1315d = inttoptr i32 %v3_1315d to i8*
  store i8 %v3_13156, i8* %v4_1315d, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1316c

bb:                                               ; preds = %dec_label_pc_1310e
  %v1_1316a = call i32 @function_13171()
  br label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %bb, %dec_label_pc_1310e
  %v2_1316a = phi i32 [ %v1_1316a, %bb ], [ 0, %dec_label_pc_1310e ]
  ret i32 %v2_1316a

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_13171() local_unnamed_addr {
dec_label_pc_13171:
  %v0_13172 = load i32, i32* @eax, align 4
  ret i32 %v0_13172
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13174:
  %v2_13194 = load i32, i32* %arg1, align 4
  store i32 %v2_13194, i32* @ecx, align 4
  %v2_131a0 = mul i32 %arg2, 20
  %v2_131a3 = add i32 %v2_13194, %v2_131a0
  ret i32 %v2_131a3
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE8get_realEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_131b8:
  store i32 %arg1, i32* @eax, align 4
  %v1_131d5 = call i32 @function_2a0c2(i32 %arg1)
  %v10_131da = icmp eq i32 %v1_131d5, 4
  %v5_131e0 = icmp eq i1 %v10_131da, false
  store i32 %arg1, i32* @eax, align 4
  br i1 %v5_131e0, label %dec_label_pc_13231, label %dec_label_pc_131e4

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131b8
  %v1_131ea = call i32 @function_2a24c(i32 %arg1)
  %v4_131ef = trunc i32 %v1_131ea to i8
  %v5_131ef = icmp eq i8 %v4_131ef, 0
  store i32 %arg1, i32* @eax, align 4
  br i1 %v5_131ef, label %dec_label_pc_1321b, label %dec_label_pc_131f3

dec_label_pc_131f3:                               ; preds = %dec_label_pc_131e4
  %v1_131f9 = call i32 @function_2a204(i32 %arg1)
  %v7_13204 = load i3, i3* @fpu_stat_TOP, align 1
  %v0_13207 = load i32, i32* @edx, align 8
  %v2_13207 = icmp slt i32 %v0_13207, 0
  %v1_13209 = icmp eq i1 %v2_13207, false
  br i1 %v1_13209, label %dec_label_pc_13213, label %dec_label_pc_1320b

dec_label_pc_1320b:                               ; preds = %dec_label_pc_131f3
  br label %dec_label_pc_13213

dec_label_pc_13213:                               ; preds = %dec_label_pc_1320b, %dec_label_pc_131f3
  br label %dec_label_pc_13254

dec_label_pc_1321b:                               ; preds = %dec_label_pc_131e4
  %v1_13221 = call i32 @function_2a1b4(i32 %arg1)
  %v7_1322c = load i3, i3* @fpu_stat_TOP, align 1
  br label %dec_label_pc_13254

dec_label_pc_13231:                               ; preds = %dec_label_pc_131b8
  %v2_1323f = call i32 @function_2a27e(i32 %arg1, i32 5)
  %v1_13247 = add i32 %arg1, 4
  store i32 %v1_13247, i32* @eax, align 4
  %v1_1324d = call i32 @function_2a4ce(i32 %v1_13247)
  %v4_13252 = load i3, i3* @fpu_stat_TOP, align 1
  br label %dec_label_pc_13254

dec_label_pc_13254:                               ; preds = %dec_label_pc_13213, %dec_label_pc_1321b, %dec_label_pc_13231
  %v0_13260.in = phi i3 [ %v4_13252, %dec_label_pc_13231 ], [ %v7_1322c, %dec_label_pc_1321b ], [ %v7_13204, %dec_label_pc_13213 ]
  %v0_13260 = add i3 %v0_13260.in, -1
  store i3 %v0_13260, i3* @fpu_stat_TOP, align 1
  br i1 true, label %dec_label_pc_13267, label %dec_label_pc_13260

dec_label_pc_13260:                               ; preds = %dec_label_pc_13254
  br label %dec_label_pc_13267

dec_label_pc_13267:                               ; preds = %dec_label_pc_13260, %dec_label_pc_13254
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 5, 4, 1, 2, 0, 6, 3, 8, 7 }
  uselistorder label %dec_label_pc_13254, { 2, 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Eb(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1326a:
  %stack_var_-36 = alloca i8, align 1
  %tmp7 = ptrtoint i32* %arg1 to i32
  %tmp10 = trunc i32 %arg2 to i8
  store i8 %tmp10, i8* %stack_var_-36, align 1
  store i32 3, i32* %arg1, align 4
  %v1_13293 = add i32 %tmp7, 4
  %v2_13296 = ptrtoint i8* %stack_var_-36 to i32
  store i32 %v2_13296, i32* @eax, align 4
  %v2_132a0 = call i32 @function_2a5fc(i32 %v1_13293, i32 %v2_13296)
  %v1_132a8 = add i32 %tmp7, 16
  %v2_132a8 = inttoptr i32 %v1_132a8 to i8*
  store i8 0, i8* %v2_132a8, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_132b8

bb:                                               ; preds = %dec_label_pc_1326a
  %v1_132b6 = call i32 @function_132bd()
  br label %dec_label_pc_132b8

dec_label_pc_132b8:                               ; preds = %bb, %dec_label_pc_1326a
  %v2_132b6 = phi i32 [ %v1_132b6, %bb ], [ 0, %dec_label_pc_1326a ]
  ret i32 %v2_132b6

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_132bd() local_unnamed_addr {
dec_label_pc_132bd:
  %v0_132be = load i32, i32* @eax, align 4
  ret i32 %v0_132be
}

define i32 @_ZN5boost15foreach_detail_7containISt6vectorI7uint256SaIS3_EEEENS0_8auto_anyIPT_EERS7_PN4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_132bf:
  %stack_var_-20 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_132e8 = call i32 @function_2a6ce(i32 %tmp7)
  store i32 %v1_132e8, i32* %stack_var_-20, align 4
  %v2_132f0 = ptrtoint i32* %stack_var_-20 to i32
  %v2_132fd = call i32 @function_2a725(i32 %tmp9, i32 %v2_132f0)
  ret i32 %tmp9
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_() local_unnamed_addr {
dec_label_pc_1331a:
  %stack_var_-20 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v1_13349 = call i32 @function_2a7c5(i32 %tmp10)
  %v1_1334e = inttoptr i32 %v1_13349 to i32*
  %v2_1334e = load i32, i32* %v1_1334e, align 4
  store i32 %v2_1334e, i32* @eax, align 4
  %v1_13353 = call i32 @function_2a7f2(i32 %v2_1334e)
  store i32 %v1_13353, i32* @eax, align 4
  %v2_13358 = ptrtoint i32* %stack_var_-20 to i32
  %v2_13362 = call i32 @function_2a81f(i32 %v2_13358, i32 %v1_13353)
  %v0_13367 = load i32, i32* @esp, align 4
  %v5_13367 = icmp ult i32 %v0_13367, 4
  store i1 %v5_13367, i1* @cf, align 1
  %v2_13377 = call i32 @function_2a86a(i32 %tmp12, i32 %v2_13358)
  br i1 true, label %bb, label %dec_label_pc_1338b

bb:                                               ; preds = %dec_label_pc_1331a
  %v1_13389 = call i32 @function_13390()
  br label %dec_label_pc_1338b

dec_label_pc_1338b:                               ; preds = %bb, %dec_label_pc_1331a
  %v2_13389 = phi i32 [ %v1_13389, %bb ], [ %tmp12, %dec_label_pc_1331a ]
  ret i32 %v2_13389
}

define i32 @function_13390() local_unnamed_addr {
dec_label_pc_13390:
  %v0_13391 = load i32, i32* @eax, align 4
  ret i32 %v0_13391
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_() local_unnamed_addr {
dec_label_pc_13394:
  %stack_var_-20 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i1 false, i1* @cf, align 1
  %v1_133c8 = inttoptr i32 %tmp10 to i32*
  %v2_133c8 = load i32, i32* %v1_133c8, align 4
  store i32 %v2_133c8, i32* @eax, align 4
  %v2_133d2 = ptrtoint i32* %stack_var_-20 to i32
  %v2_133dc = call i32 @function_2a929(i32 %v2_133d2, i32 %v2_133c8)
  %v2_133f1 = call i32 @function_2a8e4(i32 %tmp12, i32 %v2_133d2)
  br i1 true, label %bb, label %dec_label_pc_13405

bb:                                               ; preds = %dec_label_pc_13394
  %v1_13403 = call i32 @function_1340a()
  br label %dec_label_pc_13405

dec_label_pc_13405:                               ; preds = %bb, %dec_label_pc_13394
  %v2_13403 = phi i32 [ %v1_13403, %bb ], [ %tmp12, %dec_label_pc_13394 ]
  ret i32 %v2_13403
}

define i32 @function_1340a() local_unnamed_addr {
dec_label_pc_1340a:
  %v0_1340b = load i32, i32* @eax, align 4
  ret i32 %v0_1340b
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1340e:
  store i32 %arg2, i32* @eax, align 4
  %v1_13438 = call i32 @function_2a9ed(i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v1_13445 = call i32 @function_2a9ed(i32 %arg1)
  %v2_13451 = call i32 @function_2aa1a(i32 %v1_13445, i32 %v1_13438)
  store i32 %v2_13451, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13462

bb:                                               ; preds = %dec_label_pc_1340e
  %v1_13460 = call i32 @function_13467()
  br label %dec_label_pc_13462

dec_label_pc_13462:                               ; preds = %bb, %dec_label_pc_1340e
  %v2_13460 = phi i32 [ %v1_13460, %bb ], [ %v2_13451, %dec_label_pc_1340e ]
  ret i32 %v2_13460

; uselistorder directives
  uselistorder i32 (i32)* @function_2a9ed, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13467() local_unnamed_addr {
dec_label_pc_13467:
  %v0_1346c = load i32, i32* @eax, align 4
  ret i32 %v0_1346c
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1346d:
  store i32 %arg1, i32* @eax, align 4
  %v1_13490 = call i32 @function_2aa4c(i32 %arg1)
  store i32 %v1_13490, i32* @eax, align 4
  %v1_13498 = call i32 @function_2aacd(i32 %v1_13490)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_134a9

bb:                                               ; preds = %dec_label_pc_1346d
  %v1_134a7 = call i32 @function_134ae()
  br label %dec_label_pc_134a9

dec_label_pc_134a9:                               ; preds = %bb, %dec_label_pc_1346d
  %v2_134a7 = phi i32 [ %v1_134a7, %bb ], [ 0, %dec_label_pc_1346d ]
  ret i32 %v2_134a7

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_134ae() local_unnamed_addr {
dec_label_pc_134ae:
  %v0_134af = load i32, i32* @eax, align 4
  ret i32 %v0_134af
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134b0:
  store i32 %arg1, i32* @eax, align 4
  %v1_134d3 = call i32 @function_2aa8f(i32 %arg1)
  %v1_134db = call i32 @function_2ab4a(i32 %v1_134d3)
  ret i32 %v1_134db

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_134ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_134ea:
  %v0_134ea = load i1, i1* @zf, align 1
  br i1 %v0_134ea, label %bb, label %dec_label_pc_134ea.dec_label_pc_134ec_crit_edge

dec_label_pc_134ea.dec_label_pc_134ec_crit_edge:  ; preds = %dec_label_pc_134ea
  %v2_134ea.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_134ec

bb:                                               ; preds = %dec_label_pc_134ea
  %v1_134ea = call i32 @function_134f1()
  br label %dec_label_pc_134ec

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134ea.dec_label_pc_134ec_crit_edge, %bb
  %v2_134ea = phi i32 [ %v2_134ea.pre, %dec_label_pc_134ea.dec_label_pc_134ec_crit_edge ], [ %v1_134ea, %bb ]
  ret i32 %v2_134ea

; uselistorder directives
  uselistorder label %dec_label_pc_134ec, { 1, 0 }
}

define i32 @function_134f1() local_unnamed_addr {
dec_label_pc_134f1:
  %v0_134f2 = load i32, i32* @eax, align 4
  ret i32 %v0_134f2
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_intEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_134f4:
  store i32 %arg1, i32* @eax, align 4
  %v2_13519 = call i32 @function_2a5ba(i32 %arg1, i32 4)
  store i32 %arg1, i32* @eax, align 4
  %v1_13524 = call i32 @function_2a4f0(i32 %arg1)
  store i32 %v1_13524, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13535

bb:                                               ; preds = %dec_label_pc_134f4
  %v1_13533 = call i32 @function_1353a()
  br label %dec_label_pc_13535

dec_label_pc_13535:                               ; preds = %bb, %dec_label_pc_134f4
  %v2_13533 = phi i32 [ %v1_13533, %bb ], [ %v1_13524, %dec_label_pc_134f4 ]
  ret i32 %v2_13533

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

declare i32 @__stack_chk_fail.192(i32, i32, i32) local_unnamed_addr

define i32 @function_1353a() local_unnamed_addr {
dec_label_pc_1353a:
  %v0_1353b = load i32, i32* @eax, align 4
  ret i32 %v0_1353b
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1353c:
  store i32 %arg1, i32* @eax, align 4
  %v2_13561 = call i32 @function_2a602(i32 %arg1, i32 2)
  %v1_13569 = add i32 %arg1, 4
  store i32 %v1_13569, i32* @eax, align 4
  %v1_1356f = call i32 @function_2ac05(i32 %v1_13569)
  store i32 %v1_1356f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13580

bb:                                               ; preds = %dec_label_pc_1353c
  %v1_1357e = call i32 @function_13585()
  br label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %bb, %dec_label_pc_1353c
  %v2_1357e = phi i32 [ %v1_1357e, %bb ], [ %v1_1356f, %dec_label_pc_1353c ]
  ret i32 %v2_1357e

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_13585() local_unnamed_addr {
dec_label_pc_13585:
  %v0_13586 = load i32, i32* @eax, align 4
  ret i32 %v0_13586
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE8get_boolEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_13588:
  store i32 %arg1, i32* @eax, align 4
  %v2_135ad = call i32 @function_2a64e(i32 %arg1, i32 3)
  %v1_135b5 = add i32 %arg1, 4
  store i32 %v1_135b5, i32* @eax, align 4
  %v1_135bb = call i32 @function_2ac9a(i32 %v1_135b5)
  %v1_135c0 = inttoptr i32 %v1_135bb to i8*
  %v2_135c0 = load i8, i8* %v1_135c0, align 1
  %v3_135c0 = zext i8 %v2_135c0 to i32
  store i32 %v3_135c0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_135cf

bb:                                               ; preds = %dec_label_pc_13588
  %v1_135cd = call i32 @function_135d4()
  br label %dec_label_pc_135cf

dec_label_pc_135cf:                               ; preds = %bb, %dec_label_pc_13588
  %v2_135cd = phi i32 [ %v1_135cd, %bb ], [ %v3_135c0, %dec_label_pc_13588 ]
  ret i32 %v2_135cd

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_135d4() local_unnamed_addr {
dec_label_pc_135d4:
  %v0_135d5 = load i32, i32* @eax, align 4
  ret i32 %v0_135d5
}

define i32 @_ZNKSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE5countERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_135d6:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_135f6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_135f6, i32* @eax, align 4
  %v2_13600 = call i32 @function_2ad64(i32 %v2_135f6, i32 %arg1)
  store i32 %arg1, i32* @edx, align 8
  %v2_1360b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1360b, i32* @eax, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v3_1361c = call i32 @function_2adae(i32 %v2_1360b, i32 %arg1, i32 %arg2)
  store i32 %v2_1360b, i32* @eax, align 4
  %v2_13631 = call i32 @function_2ae9a(i32 %v2_1360b, i32 %v2_135f6)
  %v4_13636 = trunc i32 %v2_13631 to i8
  %v5_13636 = icmp eq i8 %v4_13636, 0
  %. = zext i1 %v5_13636 to i32
  store i32 %., i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13652

bb:                                               ; preds = %dec_label_pc_135d6
  %v1_13650 = call i32 @function_13657()
  br label %dec_label_pc_13652

dec_label_pc_13652:                               ; preds = %bb, %dec_label_pc_135d6
  %v2_13650 = phi i32 [ %v1_13650, %bb ], [ %., %dec_label_pc_135d6 ]
  ret i32 %v2_13650

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_13657() local_unnamed_addr {
dec_label_pc_13657:
  %v0_13658 = load i32, i32* @eax, align 4
  ret i32 %v0_13658
}

define i32 @_ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEEixERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1365a:
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_13678 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_13678, i32* @eax, align 4
  %v3_1368c = call i32 @function_2af5e(i32 %v2_13678, i32 %arg1, i32 %arg2)
  %v2_13694 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_13694, i32* @eax, align 4
  %v2_136a1 = call i32 @function_2b032(i32 %v2_13694, i32 %arg1)
  %v0_136a6 = load i32, i32* @esp, align 4
  %v5_136a6 = icmp ult i32 %v0_136a6, 4
  store i1 %v5_136a6, i1* @cf, align 1
  store i32 %v2_13678, i32* @eax, align 4
  %v2_136b6 = call i32 @function_2b07c(i32 %v2_13678, i32 %v2_13694)
  %v4_136bb = trunc i32 %v2_136b6 to i8
  %v5_136bb = icmp eq i8 %v4_136bb, 0
  %v1_136bd = icmp eq i1 %v5_136bb, false
  br i1 %v1_136bd, label %dec_label_pc_13707, label %dec_label_pc_136bf

dec_label_pc_136bf:                               ; preds = %dec_label_pc_1365a
  store i32 %v2_13678, i32* @eax, align 4
  %v1_136c5 = call i32 @function_2b000(i32 %v2_13678)
  store i32 %v1_136c5, i32* @ebx, align 4
  %v2_136cc = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_136cc, i32* @eax, align 4
  %v2_136d9 = call i32 @function_2afb6(i32 %v2_136cc, i32 %arg1)
  %v0_136e1 = load i32, i32* @ebx, align 4
  %v2_136ec = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_136ec, i32* @eax, align 4
  %v3_136f2 = call i32 @function_2918c(i32 %v2_136ec, i32 %arg2, i32 %v0_136e1)
  %v4_136f7 = trunc i32 %v3_136f2 to i8
  %v5_136f7 = icmp ne i8 %v4_136f7, 0
  %phitmp126 = icmp eq i1 %v5_136f7, false
  br label %dec_label_pc_13707

dec_label_pc_13707:                               ; preds = %dec_label_pc_136bf, %dec_label_pc_1365a
  %storemerge = phi i1 [ false, %dec_label_pc_1365a ], [ %phitmp126, %dec_label_pc_136bf ]
  br i1 %storemerge, label %dec_label_pc_13707.dec_label_pc_13754_crit_edge, label %dec_label_pc_1370b

dec_label_pc_13707.dec_label_pc_13754_crit_edge:  ; preds = %dec_label_pc_13707
  %v1_13757.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_13754

dec_label_pc_1370b:                               ; preds = %dec_label_pc_13707
  store i32 0, i32* %stack_var_-60, align 4
  %v2_13712 = ptrtoint i32* %stack_var_-60 to i32
  %v1_13715 = load i32, i32* @esp, align 4
  %v2_13715 = add i32 %v1_13715, 8
  %v3_13715 = inttoptr i32 %v2_13715 to i32*
  store i32 %v2_13712, i32* %v3_13715, align 4
  %v1_1371c = load i32, i32* @esp, align 4
  %v2_1371c = add i32 %v1_1371c, 4
  %v3_1371c = inttoptr i32 %v2_1371c to i32*
  store i32 %arg2, i32* %v3_1371c, align 4
  %v2_13720 = ptrtoint i32* %stack_var_-52 to i32
  %v1_13723 = load i32, i32* @esp, align 4
  %v2_13723 = inttoptr i32 %v1_13723 to i32*
  store i32 %v2_13720, i32* %v2_13723, align 4
  %v0_13726 = load i32, i32* %stack_var_-60, align 4
  %v1_13726 = call i32 @function_2b0bc(i32 %v0_13726)
  %v2_1372b = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_1372b, i32* @eax, align 4
  %v1_13731 = load i32, i32* @esp, align 4
  %v2_13731 = add i32 %v1_13731, 12
  %v3_13731 = inttoptr i32 %v2_13731 to i32*
  store i32 %v2_13720, i32* %v3_13731, align 4
  %v3_13735 = load i32, i32* %stack_var_-68, align 4
  %v1_13738 = load i32, i32* @esp, align 4
  %v2_13738 = add i32 %v1_13738, 8
  %v3_13738 = inttoptr i32 %v2_13738 to i32*
  store i32 %v3_13735, i32* %v3_13738, align 4
  store i32 %arg1, i32* @edx, align 8
  %v1_1373f = load i32, i32* @esp, align 4
  %v2_1373f = add i32 %v1_1373f, 4
  %v3_1373f = inttoptr i32 %v2_1373f to i32*
  store i32 %arg1, i32* %v3_1373f, align 4
  %v1_13743 = load i32, i32* @esp, align 4
  %v2_13743 = inttoptr i32 %v1_13743 to i32*
  store i32 %v2_1372b, i32* %v2_13743, align 4
  %v0_13746 = call i32 @function_2b132()
  %v0_1374b = load i32, i32* @esp, align 4
  %v1_1374b = add i32 %v0_1374b, -4
  %v3_1374e = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_1374e, i32* %stack_var_-68, align 4
  br label %dec_label_pc_13754

dec_label_pc_13754:                               ; preds = %dec_label_pc_13707.dec_label_pc_13754_crit_edge, %dec_label_pc_1370b
  %v1_13757 = phi i32 [ %v1_13757.pre, %dec_label_pc_13707.dec_label_pc_13754_crit_edge ], [ %v1_1374b, %dec_label_pc_1370b ]
  store i32 %v2_13678, i32* @eax, align 4
  %v2_13757 = inttoptr i32 %v1_13757 to i32*
  store i32 %v2_13678, i32* %v2_13757, align 4
  %v0_1375a = load i32, i32* %stack_var_-68, align 4
  %v1_1375a = call i32 @function_2b000(i32 %v0_1375a)
  %v1_1375f = add i32 %v1_1375a, 32
  store i32 %v1_1375f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1376e

bb:                                               ; preds = %dec_label_pc_13754
  %v1_1376c = call i32 @function_13773()
  br label %dec_label_pc_1376e

dec_label_pc_1376e:                               ; preds = %bb, %dec_label_pc_13754
  %v2_1376c = phi i32 [ %v1_1376c, %bb ], [ %v1_1375f, %dec_label_pc_13754 ]
  ret i32 %v2_1376c

; uselistorder directives
  uselistorder i32 %v2_13678, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_2b000, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_13754, { 1, 0 }
}

define i32 @function_13773() local_unnamed_addr {
dec_label_pc_13773:
  %v0_13777 = load i32, i32* @eax, align 4
  ret i32 %v0_13777
}

define i32 @_ZN11CDataStreamlsI6CBlockEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13778:
  %v1_13798 = add i32 %arg1, 24
  %v2_13798 = inttoptr i32 %v1_13798 to i32*
  %v3_13798 = load i32, i32* %v2_13798, align 4
  %v1_1379e = add i32 %arg1, 20
  %v2_1379e = inttoptr i32 %v1_1379e to i32*
  %v3_1379e = load i32, i32* %v2_1379e, align 4
  %v4_137b6 = call i32 @function_2b2c6(i32 %arg1, i32 %arg2, i32 %v3_1379e, i32 %v3_13798)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_137ca

bb:                                               ; preds = %dec_label_pc_13778
  %v1_137c8 = call i32 @function_137cf()
  br label %dec_label_pc_137ca

dec_label_pc_137ca:                               ; preds = %bb, %dec_label_pc_13778
  %v2_137c8 = phi i32 [ %v1_137c8, %bb ], [ %arg1, %dec_label_pc_13778 ]
  ret i32 %v2_137c8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_137cf() local_unnamed_addr {
dec_label_pc_137cf:
  %v0_137d0 = load i32, i32* @eax, align 4
  ret i32 %v0_137d0
}

define i32 @_Z6HexStrIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEESsT_S8_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_137d1:
  ret i32 %arg1
}

define i32 @function_13812() local_unnamed_addr {
dec_label_pc_13812:
  %eax.global-to-local = alloca i32, align 4
  %v0_13812 = load i32, i32* %eax.global-to-local, align 4
  %v11_13812 = and i32 %v0_13812, -24
  store i32 %v11_13812, i32* %eax.global-to-local, align 4
  ret i32 %v11_13812

; uselistorder directives
  uselistorder i32 %v11_13812, { 1, 0 }
}

define i32 @function_13819() local_unnamed_addr {
dec_label_pc_13819:
  %eax.global-to-local = alloca i32, align 4
  %v0_13819 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13819
}

define i32 @function_1382e() local_unnamed_addr {
dec_label_pc_1382e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1382e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1382e = add i32 %v0_1382e, 1166663749
  %v2_1382e = inttoptr i32 %v1_1382e to i32*
  %v3_1382e = load i32, i32* %v2_1382e, align 4
  %v4_1382e = add i32 %v3_1382e, -1
  store i32 %v4_1382e, i32* %v2_1382e, align 4
  %v0_13835 = call i32 @function_138d5()
  ret i32 %v0_13835
}

define i32 @function_1383a() local_unnamed_addr {
dec_label_pc_1383a:
  %v0_1383a = load i32, i32* @ebp, align 4
  %v1_1383a = add i32 %v0_1383a, -20
  store i32 %v1_1383a, i32* @eax, align 4
  %v1_13840 = call i32 @function_2b409(i32 %v1_1383a)
  %v1_13845 = inttoptr i32 %v1_13840 to i8*
  %v2_13845 = load i8, i8* %v1_13845, align 1
  %v2_13848 = load i32, i32* @ebp, align 4
  %v3_13848 = add i32 %v2_13848, -13
  %v4_13848 = inttoptr i32 %v3_13848 to i8*
  store i8 %v2_13845, i8* %v4_13848, align 1
  %v0_1384b = load i32, i32* @ebp, align 4
  %v1_1384b = add i32 %v0_1384b, -40
  %v2_1384b = inttoptr i32 %v1_1384b to i8*
  %v3_1384b = load i8, i8* %v2_1384b, align 1
  %v10_1384b = icmp eq i8 %v3_1384b, 0
  br i1 %v10_1384b, label %bb, label %dec_label_pc_13851

dec_label_pc_13851:                               ; preds = %dec_label_pc_1383a
  %v1_13858 = add i32 %v0_1384b, 236
  %v4_13863 = trunc i32 %v1_13858 to i8
  %v5_13863 = icmp eq i8 %v4_13863, 0
  br i1 %v5_13863, label %bb, label %dec_label_pc_13873

dec_label_pc_13873:                               ; preds = %dec_label_pc_13851
  br label %dec_label_pc_13877

bb:                                               ; preds = %dec_label_pc_1383a, %dec_label_pc_13851
  %v1_13875 = call i32 @function_1388a()
  %v0_1387f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13877

dec_label_pc_13877:                               ; preds = %dec_label_pc_13873, %bb
  %v0_1387f = phi i32 [ %v0_1387f.pre, %bb ], [ %v0_1384b, %dec_label_pc_13873 ]
  %v1_1387f = add i32 %v0_1387f, -28
  %v2_1387f = inttoptr i32 %v1_1387f to i32*
  %v3_1387f = load i32, i32* %v2_1387f, align 4
  ret i32 %v3_1387f

; uselistorder directives
  uselistorder label %dec_label_pc_13877, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_1388a() local_unnamed_addr {
dec_label_pc_1388a:
  %v0_1388a = load i32, i32* @ebp, align 4
  %v1_1389f = add i32 %v0_1388a, -28
  %v2_1389f = inttoptr i32 %v1_1389f to i32*
  %v3_1389f = load i32, i32* %v2_1389f, align 4
  ret i32 %v3_1389f
}

define i32 @function_138bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_138bc:
  %v0_138bf = load i32, i32* @ebp, align 4
  %v1_138bf = add i32 %v0_138bf, -28
  %v2_138bf = inttoptr i32 %v1_138bf to i32*
  %v3_138bf = load i32, i32* %v2_138bf, align 4
  ret i32 %v3_138bf
}

define i32 @function_138d5() local_unnamed_addr {
dec_label_pc_138d5:
  %v0_138d5 = load i32, i32* @ebp, align 4
  %v1_138d5 = add i32 %v0_138d5, -36
  %v1_138dc = add i32 %v0_138d5, -20
  %v2_138e2 = call i32 @unknown_2b37b(i32 %v1_138dc, i32 %v1_138d5)
  %v4_138e7 = trunc i32 %v2_138e2 to i8
  %v5_138e7 = icmp eq i8 %v4_138e7, 0
  %v1_138e9 = icmp eq i1 %v5_138e7, false
  br i1 %v1_138e9, label %bb, label %dec_label_pc_138ef

bb:                                               ; preds = %dec_label_pc_138d5
  %v2_138e9 = call i32 @function_1383a()
  br label %dec_label_pc_138ef

dec_label_pc_138ef:                               ; preds = %bb, %dec_label_pc_138d5
  %v0_138ef = call i32 @function_13908()
  ret i32 %v0_138ef
}

define i32 @function_138f2() local_unnamed_addr {
dec_label_pc_138f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_138f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_138f2
}

define i32 @function_13908() local_unnamed_addr {
dec_label_pc_13908:
  %v0_13908 = load i32, i32* @ebp, align 4
  %v1_13908 = add i32 %v0_13908, -28
  %v2_13908 = inttoptr i32 %v1_13908 to i32*
  %v3_13908 = load i32, i32* %v2_13908, align 4
  store i32 %v3_13908, i32* @eax, align 4
  %v1_1390b = add i32 %v0_13908, -12
  %v2_1390b = inttoptr i32 %v1_1390b to i32*
  %v3_1390b = load i32, i32* %v2_1390b, align 4
  %v1_1390e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1390e = icmp eq i32 %v1_1390e, %v3_1390b
  br i1 %v3_1390e, label %bb, label %dec_label_pc_13917

bb:                                               ; preds = %dec_label_pc_13908
  %v1_13915 = call i32 @function_1391c()
  br label %dec_label_pc_13917

dec_label_pc_13917:                               ; preds = %bb, %dec_label_pc_13908
  %v2_13915 = phi i32 [ %v1_13915, %bb ], [ %v3_13908, %dec_label_pc_13908 ]
  ret i32 %v2_13915
}

define i32 @function_1391c() local_unnamed_addr {
dec_label_pc_1391c:
  %v0_13921 = load i32, i32* @eax, align 4
  ret i32 %v0_13921
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorINS_9Pair_implIS2_EESaIS6_EE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13924:
  %tmp7 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_1394d = add i32 %tmp7, 4
  store i32 %arg2, i32* @eax, align 4
  %v2_1395a = call i32 @function_2b58c(i32 %v1_1394d, i32 %arg2)
  %v1_13962 = add i32 %tmp7, 16
  %v2_13962 = inttoptr i32 %v1_13962 to i8*
  store i8 0, i8* %v2_13962, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13972

bb:                                               ; preds = %dec_label_pc_13924
  %v1_13970 = call i32 @function_13977()
  br label %dec_label_pc_13972

dec_label_pc_13972:                               ; preds = %bb, %dec_label_pc_13924
  %v2_13970 = phi i32 [ %v1_13970, %bb ], [ 0, %dec_label_pc_13924 ]
  ret i32 %v2_13970

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_13977() local_unnamed_addr {
dec_label_pc_13977:
  %v0_13978 = load i32, i32* @eax, align 4
  ret i32 %v0_13978
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1397a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 6, i32* %arg1, align 4
  %v1_1399d = add i32 %tmp100, 4
  store i32 %v1_1399d, i32* @eax, align 4
  %v1_139a3 = call i32 @function_2b660(i32 %v1_1399d)
  %v1_139ab = add i32 %tmp100, 16
  %v2_139ab = inttoptr i32 %v1_139ab to i8*
  store i8 0, i8* %v2_139ab, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_139bb

bb:                                               ; preds = %dec_label_pc_1397a
  %v1_139b9 = call i32 @function_139c0()
  br label %dec_label_pc_139bb

dec_label_pc_139bb:                               ; preds = %bb, %dec_label_pc_1397a
  %v2_139b9 = phi i32 [ %v1_139b9, %bb ], [ 0, %dec_label_pc_1397a ]
  ret i32 %v2_139b9

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_139c0() local_unnamed_addr {
dec_label_pc_139c0:
  %v0_139c1 = load i32, i32* @eax, align 4
  ret i32 %v0_139c1
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139c2:
  %v2_139e2 = load i32, i32* %arg1, align 4
  %v2_139ee = mul i32 %arg2, 20
  %v2_139f1 = add i32 %v2_139e2, %v2_139ee
  store i32 %v2_139f1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_139ff

bb:                                               ; preds = %dec_label_pc_139c2
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_139fd = call i32 @function_13a04(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_139ff

dec_label_pc_139ff:                               ; preds = %bb, %dec_label_pc_139c2
  %v4_139fd = phi i32 [ %v3_139fd, %bb ], [ %v2_139f1, %dec_label_pc_139c2 ]
  ret i32 %v4_139fd

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_13a04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a04:
  %v0_13a05 = load i32, i32* @eax, align 4
  ret i32 %v0_13a05
}

define i32 @_ZN9base_uintILj256EE6SetHexEPKc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a06:
  %v0_13a18 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_13a18
}

define i32 @function_13a1e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a1e:
  %eax.global-to-local = alloca i32, align 4
  %v0_13a1e = load i32, i32* @eax, align 4
  %v1_13a1e = load i32, i32* @ebp, align 4
  %v2_13a1e = add i32 %v1_13a1e, -12
  %v3_13a1e = inttoptr i32 %v2_13a1e to i32*
  store i32 %v0_13a1e, i32* %v3_13a1e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_13a23 = load i32, i32* @ebp, align 4
  %v1_13a23 = add i32 %v0_13a23, -28
  %v2_13a23 = inttoptr i32 %v1_13a23 to i32*
  store i32 0, i32* %v2_13a23, align 4
  br label %dec_label_pc_13a3d

dec_label_pc_13a2c:                               ; preds = %dec_label_pc_13a3d
  %v1_13a2c = add i32 %v0_13a3d, -44
  %v2_13a2c = inttoptr i32 %v1_13a2c to i32*
  %v3_13a2c = load i32, i32* %v2_13a2c, align 4
  store i32 %v3_13a2c, i32* %eax.global-to-local, align 4
  %v3_13a2f = load i32, i32* %v2_13a3d, align 4
  %v2_13a32 = mul i32 %v3_13a2f, 4
  %v3_13a32 = add i32 %v2_13a32, %v3_13a2c
  %v4_13a32 = inttoptr i32 %v3_13a32 to i32*
  store i32 0, i32* %v4_13a32, align 4
  %v0_13a39 = load i32, i32* @ebp, align 4
  %v1_13a39 = add i32 %v0_13a39, -28
  %v2_13a39 = inttoptr i32 %v1_13a39 to i32*
  %v3_13a39 = load i32, i32* %v2_13a39, align 4
  %v4_13a39 = add i32 %v3_13a39, 1
  store i32 %v4_13a39, i32* %v2_13a39, align 4
  br label %dec_label_pc_13a3d

dec_label_pc_13a3d:                               ; preds = %dec_label_pc_13a2c, %dec_label_pc_13a1e
  %v0_13a3d = load i32, i32* @ebp, align 4
  %v1_13a3d = add i32 %v0_13a3d, -28
  %v2_13a3d = inttoptr i32 %v1_13a3d to i32*
  %v3_13a3d = load i32, i32* %v2_13a3d, align 4
  %v4_13a3d = add i32 %v3_13a3d, -7
  %tmp = sub i32 6, %v3_13a3d
  %v11_13a3d = and i32 %tmp, %v3_13a3d
  %v12_13a3d = icmp slt i32 %v11_13a3d, 0
  %v13_13a3d = icmp eq i32 %v4_13a3d, 0
  %v14_13a3d = icmp slt i32 %v4_13a3d, 0
  %v3_13a41 = icmp ne i1 %v14_13a3d, %v12_13a3d
  %v4_13a41 = or i1 %v13_13a3d, %v3_13a41
  %v5_13a41 = zext i1 %v4_13a41 to i32
  %v6_13a41 = load i32, i32* %eax.global-to-local, align 4
  %v7_13a41 = and i32 %v6_13a41, -256
  %v8_13a41 = or i32 %v5_13a41, %v7_13a41
  store i32 %v8_13a41, i32* %eax.global-to-local, align 4
  %v5_13a44 = icmp eq i1 %v4_13a41, false
  %v1_13a46 = icmp eq i1 %v5_13a44, false
  br i1 %v1_13a46, label %dec_label_pc_13a2c, label %dec_label_pc_13a48

dec_label_pc_13a48:                               ; preds = %dec_label_pc_13a3d
  %v0_13a48 = call i32 @function_13a4e()
  store i32 %v0_13a48, i32* %eax.global-to-local, align 4
  ret i32 %v0_13a48

; uselistorder directives
  uselistorder i32 %v4_13a3d, { 1, 0 }
  uselistorder i32* %v2_13a3d, { 1, 0 }
  uselistorder i32 %v0_13a3d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 1, 4 }
}

define i32 @function_13a4a() local_unnamed_addr {
dec_label_pc_13a4a:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_13a4a = add i32 %tmp91, -48
  %v2_13a4a = inttoptr i32 %v1_13a4a to i32*
  %v3_13a4a = load i32, i32* %v2_13a4a, align 4
  %v4_13a4a = add i32 %v3_13a4a, 1
  store i32 %v4_13a4a, i32* %v2_13a4a, align 4
  %v22_13a4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_13a4a
}

define i32 @function_13a4e() local_unnamed_addr {
dec_label_pc_13a4e:
  %v0_13a4e = load i32, i32* @ebp, align 4
  %v1_13a4e = add i32 %v0_13a4e, -48
  %v2_13a4e = inttoptr i32 %v1_13a4e to i32*
  %v3_13a4e = load i32, i32* %v2_13a4e, align 4
  %v1_13a51 = inttoptr i32 %v3_13a4e to i8*
  %v2_13a51 = load i8, i8* %v1_13a51, align 1
  %v3_13a51 = zext i8 %v2_13a51 to i32
  ret i32 %v3_13a51
}

define i32 @function_13a85() local_unnamed_addr {
dec_label_pc_13a85:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13a85 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13a85 = add i32 %v0_13a85, 74807544
  %v2_13a85 = inttoptr i32 %v1_13a85 to i32*
  %v3_13a85 = load i32, i32* %v2_13a85, align 4
  %v4_13a85 = add i32 %v3_13a85, 1
  store i32 %v4_13a85, i32* %v2_13a85, align 4
  %v0_13a8b = load i32, i32* %ebp.global-to-local, align 4
  %v1_13a8b = add i32 %v0_13a8b, -48
  %v2_13a8b = inttoptr i32 %v1_13a8b to i32*
  %v3_13a8b = load i32, i32* %v2_13a8b, align 4
  %v4_13a8b = add i32 %v3_13a8b, 2
  store i32 %v4_13a8b, i32* %v2_13a8b, align 4
  %v0_13a8f = load i32, i32* %ebp.global-to-local, align 4
  %v1_13a8f = add i32 %v0_13a8f, -48
  %v2_13a8f = inttoptr i32 %v1_13a8f to i32*
  %v3_13a8f = load i32, i32* %v2_13a8f, align 4
  store i32 %v3_13a8f, i32* %eax.global-to-local, align 4
  %v2_13a92 = add i32 %v0_13a8f, -20
  %v3_13a92 = inttoptr i32 %v2_13a92 to i32*
  store i32 %v3_13a8f, i32* %v3_13a92, align 4
  br label %dec_label_pc_13a9b

dec_label_pc_13a97:                               ; preds = %dec_label_pc_13ac5
  %v4_13a97 = add i32 %v3_13a97, 1
  store i32 %v4_13a97, i32* %v2_13a9b, align 4
  br label %dec_label_pc_13a9b

dec_label_pc_13a9b:                               ; preds = %dec_label_pc_13a97, %dec_label_pc_13a85
  %v0_13a9b = load i32, i32* %ebp.global-to-local, align 4
  %v1_13a9b = add i32 %v0_13a9b, -48
  %v2_13a9b = inttoptr i32 %v1_13a9b to i32*
  %v3_13a9b = load i32, i32* %v2_13a9b, align 4
  store i32 %v3_13a9b, i32* %eax.global-to-local, align 4
  %v1_13a9e = inttoptr i32 %v3_13a9b to i8*
  %v2_13a9e = load i8, i8* %v1_13a9e, align 1
  %v3_13a9e = zext i8 %v2_13a9e to i32
  store i32 %v3_13a9e, i32* %eax.global-to-local, align 4
  %v1_13aa4 = add i32 %v3_13a9e, ptrtoint (i8** @global_var_2bc08.1837 to i32)
  %v2_13aa4 = inttoptr i32 %v1_13aa4 to i8*
  %v3_13aa4 = load i8, i8* %v2_13aa4, align 1
  %v4_13aa4 = zext i8 %v3_13aa4 to i32
  store i32 %v4_13aa4, i32* %eax.global-to-local, align 4
  %v5_13aab = icmp eq i8 %v3_13aa4, 0
  %v1_13aad = icmp eq i1 %v5_13aab, false
  br i1 %v1_13aad, label %dec_label_pc_13ac5, label %dec_label_pc_13aaf

dec_label_pc_13aaf:                               ; preds = %dec_label_pc_13a9b
  %v3_13aaf = load i32, i32* %v2_13a9b, align 4
  store i32 %v3_13aaf, i32* %eax.global-to-local, align 4
  %v1_13ab2 = inttoptr i32 %v3_13aaf to i8*
  %v2_13ab2 = load i8, i8* %v1_13ab2, align 1
  %v3_13ab2 = zext i8 %v2_13ab2 to i32
  store i32 %v3_13ab2, i32* %eax.global-to-local, align 4
  %v10_13ab5 = icmp eq i8 %v2_13ab2, 48
  %. = zext i1 %v10_13ab5 to i32
  br label %dec_label_pc_13ac5

dec_label_pc_13ac5:                               ; preds = %dec_label_pc_13aaf, %dec_label_pc_13a9b
  %storemerge = phi i32 [ 1, %dec_label_pc_13a9b ], [ %., %dec_label_pc_13aaf ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v5_13ac5 = icmp eq i32 %storemerge, 0
  %v1_13ac7 = icmp eq i1 %v5_13ac5, false
  %v3_13a97 = load i32, i32* %v2_13a9b, align 4
  br i1 %v1_13ac7, label %dec_label_pc_13a97, label %dec_label_pc_13ac9

dec_label_pc_13ac9:                               ; preds = %dec_label_pc_13ac5
  %v4_13ac9 = add i32 %v3_13a97, -1
  store i32 %v4_13ac9, i32* %v2_13a9b, align 4
  %v0_13acd = load i32, i32* %ebp.global-to-local, align 4
  %v1_13acd = add i32 %v0_13acd, -44
  %v2_13acd = inttoptr i32 %v1_13acd to i32*
  %v3_13acd = load i32, i32* %v2_13acd, align 4
  store i32 %v3_13acd, i32* %eax.global-to-local, align 4
  %v2_13ad0 = add i32 %v0_13acd, -24
  %v3_13ad0 = inttoptr i32 %v2_13ad0 to i32*
  store i32 %v3_13acd, i32* %v3_13ad0, align 4
  %v0_13ad3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13ad3 = add i32 %v0_13ad3, -24
  %v2_13ad3 = inttoptr i32 %v1_13ad3 to i32*
  %v3_13ad3 = load i32, i32* %v2_13ad3, align 4
  %v1_13ad6 = add i32 %v3_13ad3, 32
  store i32 %v1_13ad6, i32* %eax.global-to-local, align 4
  %v2_13ad9 = add i32 %v0_13ad3, -16
  %v3_13ad9 = inttoptr i32 %v2_13ad9 to i32*
  store i32 %v1_13ad6, i32* %v3_13ad9, align 4
  %v0_13adc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13adc

; uselistorder directives
  uselistorder i32* %v2_13a9b, { 0, 2, 3, 4, 1 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
}

define i32 @function_13ade() local_unnamed_addr {
dec_label_pc_13ade:
  %v0_13ade = load i32, i32* @ebp, align 4
  %v1_13ade = add i32 %v0_13ade, -48
  %v2_13ade = inttoptr i32 %v1_13ade to i32*
  %v3_13ade = load i32, i32* %v2_13ade, align 4
  %v1_13ae1 = inttoptr i32 %v3_13ade to i8*
  %v2_13ae1 = load i8, i8* %v1_13ae1, align 1
  %v3_13ae1 = zext i8 %v2_13ae1 to i32
  %v1_13ae7 = add i32 %v3_13ae1, ptrtoint (i8** @global_var_2bc08.1837 to i32)
  %v2_13ae7 = inttoptr i32 %v1_13ae7 to i8*
  %v3_13ae7 = load i8, i8* %v2_13ae7, align 1
  %v1_13aee = add i32 %v0_13ade, -24
  %v2_13aee = inttoptr i32 %v1_13aee to i32*
  %v3_13aee = load i32, i32* %v2_13aee, align 4
  %v3_13af1 = inttoptr i32 %v3_13aee to i8*
  store i8 %v3_13ae7, i8* %v3_13af1, align 1
  %v0_13af3 = load i32, i32* @ebp, align 4
  %v1_13af3 = add i32 %v0_13af3, -48
  %v2_13af3 = inttoptr i32 %v1_13af3 to i32*
  %v3_13af3 = load i32, i32* %v2_13af3, align 4
  %v4_13af3 = add i32 %v3_13af3, -1
  store i32 %v4_13af3, i32* %v2_13af3, align 4
  %v0_13af7 = load i32, i32* @ebp, align 4
  %v1_13af7 = add i32 %v0_13af7, -48
  %v2_13af7 = inttoptr i32 %v1_13af7 to i32*
  %v1_13aff = add i32 %v0_13af7, -24
  %v2_13aff = inttoptr i32 %v1_13aff to i32*
  %v3_13aff = load i32, i32* %v2_13aff, align 4
  %v1_13b02 = inttoptr i32 %v3_13aff to i8*
  %v2_13b02 = load i8, i8* %v1_13b02, align 1
  %v3_13b02 = zext i8 %v2_13b02 to i32
  store i32 %v3_13b02, i32* @edx, align 8
  %v3_13b07 = load i32, i32* %v2_13af7, align 4
  ret i32 %v3_13b07
}

define i32 @function_13b0a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b0a:
  %v2_13b0a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_13b0a = zext i8 %v2_13b0a to i32
  %v1_13b10 = add i32 %v3_13b0a, ptrtoint (i8** @global_var_2bc08.1837 to i32)
  %v2_13b10 = inttoptr i32 %v1_13b10 to i8*
  %v3_13b10 = load i8, i8* %v2_13b10, align 1
  %v4_13b10 = zext i8 %v3_13b10 to i32
  %v2_13b1a = mul nuw nsw i32 %v4_13b10, 16
  %v1_13b1d = load i32, i32* @edx, align 8
  %v2_13b1d = or i32 %v2_13b1a, %v1_13b1d
  %v5_13b1d = trunc i32 %v2_13b1d to i8
  store i32 %v2_13b1d, i32* @edx, align 8
  %v0_13b21 = load i32, i32* @ebp, align 4
  %v1_13b21 = add i32 %v0_13b21, -24
  %v2_13b21 = inttoptr i32 %v1_13b21 to i32*
  %v3_13b21 = load i32, i32* %v2_13b21, align 4
  %v3_13b24 = inttoptr i32 %v3_13b21 to i8*
  store i8 %v5_13b1d, i8* %v3_13b24, align 1
  %v0_13b26 = load i32, i32* @ebp, align 4
  %v1_13b26 = add i32 %v0_13b26, -48
  %v2_13b26 = inttoptr i32 %v1_13b26 to i32*
  %v3_13b26 = load i32, i32* %v2_13b26, align 4
  %v4_13b26 = add i32 %v3_13b26, -1
  store i32 %v4_13b26, i32* %v2_13b26, align 4
  %v0_13b2a = load i32, i32* @ebp, align 4
  %v1_13b2a = add i32 %v0_13b2a, -24
  %v2_13b2a = inttoptr i32 %v1_13b2a to i32*
  %v3_13b2a = load i32, i32* %v2_13b2a, align 4
  %v4_13b2a = add i32 %v3_13b2a, 1
  store i32 %v4_13b2a, i32* %v2_13b2a, align 4
  %v0_13b2e = load i32, i32* @ebp, align 4
  %v1_13b2e = add i32 %v0_13b2e, -48
  %v2_13b2e = inttoptr i32 %v1_13b2e to i32*
  %v3_13b2e = load i32, i32* %v2_13b2e, align 4
  %v2_13b31 = add i32 %v0_13b2e, -20
  %v3_13b31 = inttoptr i32 %v2_13b31 to i32*
  %v4_13b31 = load i32, i32* %v3_13b31, align 4
  %v10_13b31 = icmp ult i32 %v3_13b2e, %v4_13b31
  br i1 %v10_13b31, label %dec_label_pc_13b4a.thread7, label %dec_label_pc_13b36

dec_label_pc_13b36:                               ; preds = %dec_label_pc_13b0a
  %v1_13b36 = add i32 %v0_13b2e, -24
  %v2_13b36 = inttoptr i32 %v1_13b36 to i32*
  %v3_13b36 = load i32, i32* %v2_13b36, align 4
  %v2_13b39 = add i32 %v0_13b2e, -16
  %v3_13b39 = inttoptr i32 %v2_13b39 to i32*
  %v4_13b39 = load i32, i32* %v3_13b39, align 4
  %v10_13b39 = icmp ult i32 %v3_13b36, %v4_13b39
  %v1_13b3c = icmp eq i1 %v10_13b39, false
  br i1 %v1_13b3c, label %dec_label_pc_13b4a.thread7, label %bb

dec_label_pc_13b4a.thread7:                       ; preds = %dec_label_pc_13b0a, %dec_label_pc_13b36
  br label %dec_label_pc_13b4e

bb:                                               ; preds = %dec_label_pc_13b36
  %v2_13b4c = call i32 @function_13ade()
  %v0_13b4e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13b4e

dec_label_pc_13b4e:                               ; preds = %dec_label_pc_13b4a.thread7, %bb
  %v0_13b4e = phi i32 [ %v0_13b4e.pre, %bb ], [ %v0_13b2e, %dec_label_pc_13b4a.thread7 ]
  %v1_13b4e = add i32 %v0_13b4e, -12
  %v2_13b4e = inttoptr i32 %v1_13b4e to i32*
  %v3_13b4e = load i32, i32* %v2_13b4e, align 4
  %v1_13b51 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13b51 = xor i32 %v1_13b51, %v3_13b4e
  %v3_13b51 = icmp eq i32 %v2_13b51, 0
  store i32 %v2_13b51, i32* @eax, align 4
  br i1 %v3_13b51, label %bb4, label %dec_label_pc_13b5a

bb4:                                              ; preds = %dec_label_pc_13b4e
  %v1_13b58 = call i32 @function_13b5f()
  br label %dec_label_pc_13b5a

dec_label_pc_13b5a:                               ; preds = %bb4, %dec_label_pc_13b4e
  %v2_13b58 = phi i32 [ %v1_13b58, %bb4 ], [ %v2_13b51, %dec_label_pc_13b4e ]
  ret i32 %v2_13b58

; uselistorder directives
  uselistorder i32 %v0_13b2e, { 0, 2, 1, 3, 4 }
  uselistorder i32 ptrtoint (i8** @global_var_2bc08.1837 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_13b4e, { 1, 0 }
  uselistorder label %dec_label_pc_13b4a.thread7, { 1, 0 }
}

define i32 @function_13b5f() local_unnamed_addr {
dec_label_pc_13b5f:
  %v0_13b60 = load i32, i32* @eax, align 4
  ret i32 %v0_13b60
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_13b62:
  %v2_13b7c = load i32, i32* %arg1, align 4
  %v1_13b7e = icmp eq i32 %v2_13b7c, 0
  br i1 %v1_13b7e, label %dec_label_pc_13ba8.thread, label %dec_label_pc_13b82

dec_label_pc_13b82:                               ; preds = %dec_label_pc_13b62
  %v2_13b91 = load i32, i32* %arg1, align 4
  %v4_13b98 = trunc i32 %v2_13b91 to i8
  %v5_13b98 = icmp eq i8 %v4_13b98, 0
  br i1 %v5_13b98, label %dec_label_pc_13ba8.thread, label %dec_label_pc_13bac

dec_label_pc_13ba8.thread:                        ; preds = %dec_label_pc_13b62, %dec_label_pc_13b82
  br label %dec_label_pc_13bb5

dec_label_pc_13bac:                               ; preds = %dec_label_pc_13b82
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_13bb5

dec_label_pc_13bb5:                               ; preds = %dec_label_pc_13ba8.thread, %dec_label_pc_13bac
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13bc1

bb:                                               ; preds = %dec_label_pc_13bb5
  %v1_13bbf = call i32 @function_13bc6()
  br label %dec_label_pc_13bc1

dec_label_pc_13bc1:                               ; preds = %bb, %dec_label_pc_13bb5
  %v2_13bbf = phi i32 [ %v1_13bbf, %bb ], [ 0, %dec_label_pc_13bb5 ]
  ret i32 %v2_13bbf

; uselistorder directives
  uselistorder label %dec_label_pc_13bb5, { 1, 0 }
  uselistorder label %dec_label_pc_13ba8.thread, { 1, 0 }
}

define i32 @function_13bc6() local_unnamed_addr {
dec_label_pc_13bc6:
  %v0_13bc7 = load i32, i32* @eax, align 4
  ret i32 %v0_13bc7
}

define i32 @_ZN5boost17enable_error_infoINS_10lock_errorEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13bc8:
  store i32 %arg1, i32* @eax, align 4
  %v2_13bf2 = call i32 @function_2b95e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13c06

bb:                                               ; preds = %dec_label_pc_13bc8
  %v1_13c04 = call i32 @function_13c0b()
  br label %dec_label_pc_13c06

dec_label_pc_13c06:                               ; preds = %bb, %dec_label_pc_13bc8
  %v2_13c04 = phi i32 [ %v1_13c04, %bb ], [ %arg1, %dec_label_pc_13bc8 ]
  ret i32 %v2_13c04

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_13c0b() local_unnamed_addr {
dec_label_pc_13c0b:
  %v0_13c0c = load i32, i32* @eax, align 4
  ret i32 %v0_13c0c
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c0f:
  %eax.global-to-local = alloca i32, align 4
  %v0_13c14 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13c14
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32* %arg1) {
dec_label_pc_13c1a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b390_type* @global_var_2b390.1822 to i32), i32* %arg1, align 4
  %v1_13c3d = add i32 %tmp99, 8
  %v2_13c3d = inttoptr i32 %v1_13c3d to i32*
  store i32 ptrtoint (i32* @global_var_2b3a4.1823 to i32), i32* %v2_13c3d, align 4
  store i32 %v1_13c3d, i32* @eax, align 4
  %v1_13c4d = call i32 @function_182f0(i32 %v1_13c3d)
  %v1_13c58 = call i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_deallocateEPS4_j(i32 %tmp99)
  %v1_13c67 = call i32 @function_13c74()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_13c3d, { 1, 0, 2 }
}

define i32 @function_13c74() local_unnamed_addr {
dec_label_pc_13c74:
  %v0_13c74 = load i32, i32* @ebp, align 4
  %v1_13c74 = add i32 %v0_13c74, -12
  %v2_13c74 = inttoptr i32 %v1_13c74 to i32*
  %v3_13c74 = load i32, i32* %v2_13c74, align 4
  %v1_13c77 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13c77 = xor i32 %v1_13c77, %v3_13c74
  %v3_13c77 = icmp eq i32 %v2_13c77, 0
  store i32 %v2_13c77, i32* @eax, align 4
  br i1 %v3_13c77, label %bb, label %dec_label_pc_13c80

bb:                                               ; preds = %dec_label_pc_13c74
  %v1_13c7e = call i32 @function_13c85()
  br label %dec_label_pc_13c80

dec_label_pc_13c80:                               ; preds = %bb, %dec_label_pc_13c74
  %v2_13c7e = phi i32 [ %v1_13c7e, %bb ], [ %v2_13c77, %dec_label_pc_13c74 ]
  ret i32 %v2_13c7e
}

define i32 @function_13c85() local_unnamed_addr {
dec_label_pc_13c85:
  %v0_13c86 = load i32, i32* @eax, align 4
  ret i32 %v0_13c86
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c88:
  %v4_13c88 = add i32 %arg1, -8
  %v1_13c8d = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %v4_13c88)
  ret i32 %v1_13c8d
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) {
dec_label_pc_13c90:
  ret i32 %arg1
}

define i32 @function_13ccd() local_unnamed_addr {
dec_label_pc_13ccd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13ccd = load i32, i32* %ecx.global-to-local, align 4
  %v1_13ccd = add i32 %v0_13ccd, -1
  store i32 %v1_13ccd, i32* %ecx.global-to-local, align 4
  %v0_13ccf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13ccf
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_10lock_errorEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13cd0:
  store i32 %arg1, i32* @eax, align 4
  %v2_13cfa = call i32 @function_2baca(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13d0e

bb:                                               ; preds = %dec_label_pc_13cd0
  %v1_13d0c = call i32 @function_13d13()
  br label %dec_label_pc_13d0e

dec_label_pc_13d0e:                               ; preds = %bb, %dec_label_pc_13cd0
  %v2_13d0c = phi i32 [ %v1_13d0c, %bb ], [ %arg1, %dec_label_pc_13cd0 ]
  ret i32 %v2_13d0c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_13d13() local_unnamed_addr {
dec_label_pc_13d13:
  %v0_13d14 = load i32, i32* @eax, align 4
  ret i32 %v0_13d14
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d17:
  %eax.global-to-local = alloca i32, align 4
  %v0_13d1c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13d1c
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d21:
  %eax.global-to-local = alloca i32, align 4
  %v0_13d26 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13d26
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_13d2c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b330_type* @global_var_2b330.1824 to i32), i32* %arg1, align 4
  %v1_13d4f = add i32 %tmp99, 8
  %v2_13d4f = inttoptr i32 %v1_13d4f to i32*
  store i32 ptrtoint (i32* @global_var_2b34c.1825 to i32), i32* %v2_13d4f, align 4
  %v1_13d59 = add i32 %tmp99, 28
  %v2_13d59 = inttoptr i32 %v1_13d59 to i32*
  store i32 ptrtoint (i32* @global_var_2b35c.1826 to i32), i32* %v2_13d59, align 4
  store i32 %v1_13d59, i32* @eax, align 4
  %v1_13d69 = call i32 @function_19430(i32 %v1_13d59)
  %v2_13d83 = call i32 @function_13d90(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_13d59, { 1, 0, 2 }
  uselistorder i32 %tmp99, { 1, 0, 2, 3 }
}

define i32 @function_13d90(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d90:
  %v0_13d90 = load i32, i32* @ebp, align 4
  %v1_13d90 = add i32 %v0_13d90, -12
  %v2_13d90 = inttoptr i32 %v1_13d90 to i32*
  %v3_13d90 = load i32, i32* %v2_13d90, align 4
  %v1_13d93 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d93 = xor i32 %v1_13d93, %v3_13d90
  %v3_13d93 = icmp eq i32 %v2_13d93, 0
  store i32 %v2_13d93, i32* @eax, align 4
  br i1 %v3_13d93, label %bb, label %dec_label_pc_13d9c

bb:                                               ; preds = %dec_label_pc_13d90
  %v1_13d9a = call i32 @function_13da1()
  br label %dec_label_pc_13d9c

dec_label_pc_13d9c:                               ; preds = %bb, %dec_label_pc_13d90
  %v2_13d9a = phi i32 [ %v1_13d9a, %bb ], [ %v2_13d93, %dec_label_pc_13d90 ]
  ret i32 %v2_13d9a
}

define i32 @function_13da1() local_unnamed_addr {
dec_label_pc_13da1:
  %v0_13da2 = load i32, i32* @eax, align 4
  ret i32 %v0_13da2
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13da4:
  %v4_13da4 = add i32 %arg1, -28
  %v1_13da9 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_13da4)
  ret i32 %v1_13da9
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13dab:
  %v4_13dab = add i32 %arg1, -8
  %v1_13db0 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_13dab)
  ret i32 %v1_13db0
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) {
dec_label_pc_13db2:
  store i32 %arg1, i32* @eax, align 4
  %v1_13dcf = call i32 @function_27ad0(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Z21GetSerializeSize_implIhSaIhEEjRKSt6vectorIT_T0_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13df2:
  store i1 true, i1* @zf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_13e22 = call i32 @function_243b2(i32 %arg1)
  %v2_13e33 = call i32 @function_215a7(i32 %v1_13e22, i32 0)
  store i32 %arg1, i32* @eax, align 4
  %v1_13e40 = call i32 @function_243b2(i32 %arg1)
  %v2_13e45 = add i32 %v2_13e33, %v1_13e40
  store i32 %v2_13e45, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13e53

bb:                                               ; preds = %dec_label_pc_13df2
  %v1_13e51 = call i32 @function_13e58()
  br label %dec_label_pc_13e53

dec_label_pc_13e53:                               ; preds = %bb, %dec_label_pc_13df2
  %v2_13e51 = phi i32 [ %v1_13e51, %bb ], [ %v2_13e45, %dec_label_pc_13df2 ]
  ret i32 %v2_13e51

; uselistorder directives
  uselistorder i32 (i32)* @function_243b2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_13e58() local_unnamed_addr {
dec_label_pc_13e58:
  %v0_13e5d = load i32, i32* @eax, align 4
  ret i32 %v0_13e5d
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e5e:
  store i32 %arg1, i32* @eax, align 4
  %v1_13e7b = call i32 @function_24a06(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13e8c

bb:                                               ; preds = %dec_label_pc_13e5e
  %v1_13e8a = call i32 @function_13e91()
  br label %dec_label_pc_13e8c

dec_label_pc_13e8c:                               ; preds = %bb, %dec_label_pc_13e5e
  %v2_13e8a = phi i32 [ %v1_13e8a, %bb ], [ 0, %dec_label_pc_13e5e ]
  ret i32 %v2_13e8a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13e91() local_unnamed_addr {
dec_label_pc_13e91:
  %v0_13e92 = load i32, i32* @eax, align 4
  ret i32 %v0_13e92
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e94:
  %v1_13eb1 = call i32 @unknown_2bd40(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13ec2

bb:                                               ; preds = %dec_label_pc_13e94
  %v1_13ec0 = call i32 @function_13ec7()
  br label %dec_label_pc_13ec2

dec_label_pc_13ec2:                               ; preds = %bb, %dec_label_pc_13e94
  %v2_13ec0 = phi i32 [ %v1_13ec0, %bb ], [ 0, %dec_label_pc_13e94 ]
  ret i32 %v2_13ec0
}

define i32 @function_13ec7() local_unnamed_addr {
dec_label_pc_13ec7:
  %v0_13ec8 = load i32, i32* @eax, align 4
  ret i32 %v0_13ec8
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13eca:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_13ee5 = add i32 %tmp101, 8
  %v2_13ee5 = inttoptr i32 %v1_13ee5 to i32*
  %v3_13ee5 = load i32, i32* %v2_13ee5, align 4
  %v2_13eed = load i32, i32* %arg1, align 4
  %v2_13ef1 = sub i32 %v3_13ee5, %v2_13eed
  store i32 %v2_13ef1, i32* @edx, align 8
  %v2_13efa = load i32, i32* %arg1, align 4
  %v3_13f0a = call i32 @function_27f84(i32 %tmp101, i32 %v2_13efa, i32 %v2_13ef1)
  %v1_13f15 = call i32 @function_27d28(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13f26

bb:                                               ; preds = %dec_label_pc_13eca
  %v1_13f24 = call i32 @function_13f44()
  store i32 %v1_13f24, i32* @eax, align 4
  br label %dec_label_pc_13f26

dec_label_pc_13f26:                               ; preds = %bb, %dec_label_pc_13eca
  %v0_13f26 = call i32 @function_13f3f()
  ret i32 %v0_13f26

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_13f29() local_unnamed_addr {
dec_label_pc_13f29:
  %eax.global-to-local = alloca i32, align 4
  %v0_13f29 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13f29
}

define i32 @function_13f3f() local_unnamed_addr {
dec_label_pc_13f3f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_13f44() local_unnamed_addr {
dec_label_pc_13f44:
  %v0_13f49 = load i32, i32* @eax, align 4
  ret i32 %v0_13f49
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f4a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13f70

bb:                                               ; preds = %dec_label_pc_13f4a
  %v2_13f6e = call i32 @function_13f75(i32 %arg1)
  br label %dec_label_pc_13f70

dec_label_pc_13f70:                               ; preds = %bb, %dec_label_pc_13f4a
  %v3_13f6e = phi i32 [ %v2_13f6e, %bb ], [ %arg1, %dec_label_pc_13f4a ]
  ret i32 %v3_13f6e
}

define i32 @function_13f75(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f75:
  %v0_13f76 = load i32, i32* @eax, align 4
  ret i32 %v0_13f76
}

define i32 @_ZSt8_DestroyIPc25zero_after_free_allocatorIcEEvT_S3_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13f77:
  %v15_13fbd108 = icmp eq i32 %arg1, %arg2
  %v1_13fc0109 = icmp eq i1 %v15_13fbd108, false
  %v5_13fc3113 = icmp eq i1 %v1_13fc0109, false
  %v1_13fc5114 = icmp eq i1 %v5_13fc3113, false
  br i1 %v1_13fc5114, label %dec_label_pc_13f9c, label %dec_label_pc_13fc7

dec_label_pc_13f9c:                               ; preds = %dec_label_pc_13f77, %dec_label_pc_13f9c
  %stack_var_-32.0115 = phi i32 [ %v4_13fb6, %dec_label_pc_13f9c ], [ %arg1, %dec_label_pc_13f77 ]
  %v1_13fa2 = call i32 @unknown_2be75(i32 %stack_var_-32.0115)
  store i32 %arg3, i32* @eax, align 4
  %v2_13fb1 = call i32 @function_281c7(i32 %arg3, i32 %v1_13fa2)
  %v4_13fb6 = add i32 %stack_var_-32.0115, 1
  %v15_13fbd = icmp eq i32 %v4_13fb6, %arg2
  %v1_13fc0 = icmp eq i1 %v15_13fbd, false
  %v5_13fc3 = icmp eq i1 %v1_13fc0, false
  %v1_13fc5 = icmp eq i1 %v5_13fc3, false
  br i1 %v1_13fc5, label %dec_label_pc_13f9c, label %dec_label_pc_13fc7

dec_label_pc_13fc7:                               ; preds = %dec_label_pc_13f9c, %dec_label_pc_13f77
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13fd3

bb:                                               ; preds = %dec_label_pc_13fc7
  %v1_13fd1 = call i32 @function_13fd8()
  br label %dec_label_pc_13fd3

dec_label_pc_13fd3:                               ; preds = %bb, %dec_label_pc_13fc7
  %v2_13fd1 = phi i32 [ %v1_13fd1, %bb ], [ 0, %dec_label_pc_13fc7 ]
  ret i32 %v2_13fd1

; uselistorder directives
  uselistorder i32 %v4_13fb6, { 1, 0 }
  uselistorder i32 %stack_var_-32.0115, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13f9c, { 1, 0 }
}

define i32 @function_13fd8() local_unnamed_addr {
dec_label_pc_13fd8:
  %v0_13fd9 = load i32, i32* @eax, align 4
  ret i32 %v0_13fd9
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13fda:
  %v1_13ffa = inttoptr i32 %arg2 to i32*
  %v2_13ffa = load i32, i32* %v1_13ffa, align 4
  store i32 %v2_13ffa, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1400d

bb:                                               ; preds = %dec_label_pc_13fda
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1400b = call i32 @function_14012(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1400d

dec_label_pc_1400d:                               ; preds = %bb, %dec_label_pc_13fda
  %v4_1400b = phi i32 [ %v3_1400b, %bb ], [ 0, %dec_label_pc_13fda ]
  ret i32 %v4_1400b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_14012(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14012:
  %v0_14013 = load i32, i32* @eax, align 4
  ret i32 %v0_14013
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14014:
  %v1_14034 = inttoptr i32 %arg2 to i32*
  %v2_14034 = load i32, i32* %v1_14034, align 4
  store i32 %v2_14034, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14047

bb:                                               ; preds = %dec_label_pc_14014
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_14045 = call i32 @function_1404c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_14047

dec_label_pc_14047:                               ; preds = %bb, %dec_label_pc_14014
  %v4_14045 = phi i32 [ %v3_14045, %bb ], [ 0, %dec_label_pc_14014 ]
  ret i32 %v4_14045

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1404c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1404c:
  %v0_1404d = load i32, i32* @eax, align 4
  ret i32 %v0_1404d
}

define i32 @_ZNKSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1404e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14074

bb:                                               ; preds = %dec_label_pc_1404e
  %v2_14072 = call i32 @function_14079(i32 %arg1)
  br label %dec_label_pc_14074

dec_label_pc_14074:                               ; preds = %bb, %dec_label_pc_1404e
  %v3_14072 = phi i32 [ %v2_14072, %bb ], [ %arg1, %dec_label_pc_1404e ]
  ret i32 %v3_14072
}

define i32 @function_14079(i32 %arg1) local_unnamed_addr {
dec_label_pc_14079:
  %v0_1407a = load i32, i32* @eax, align 4
  ret i32 %v0_1407a
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1407c:
  store i32 %arg1, i32* @eax, align 4
  %v1_14099 = call i32 @function_280ca(i32 %arg1)
  %v1_140a1 = call i32 @unknown_2c000(i32 %v1_14099)
  store i32 %v1_140a1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_140b2

bb:                                               ; preds = %dec_label_pc_1407c
  %v1_140b0 = call i32 @function_140b7()
  br label %dec_label_pc_140b2

dec_label_pc_140b2:                               ; preds = %bb, %dec_label_pc_1407c
  %v2_140b0 = phi i32 [ %v1_140b0, %bb ], [ %v1_140a1, %dec_label_pc_1407c ]
  ret i32 %v2_140b0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_140b7() local_unnamed_addr {
dec_label_pc_140b7:
  %v0_140b8 = load i32, i32* @eax, align 4
  ret i32 %v0_140b8
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE13_M_deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_140ba:
  %v10_140dd = icmp eq i32 %arg2, 0
  br i1 %v10_140dd, label %dec_label_pc_140fc, label %dec_label_pc_140e3

dec_label_pc_140e3:                               ; preds = %dec_label_pc_140ba
  %v3_140f7 = call i32 @unknown_2c0ea(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140e3, %dec_label_pc_140ba
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14108

bb:                                               ; preds = %dec_label_pc_140fc
  %v1_14106 = call i32 @function_1410d()
  br label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %bb, %dec_label_pc_140fc
  %v2_14106 = phi i32 [ %v1_14106, %bb ], [ 0, %dec_label_pc_140fc ]
  ret i32 %v2_14106
}

define i32 @function_1410d() local_unnamed_addr {
dec_label_pc_1410d:
  %v0_1410e = load i32, i32* @eax, align 4
  ret i32 %v0_1410e
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE9constructEPcRKc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_14110:
  store i32 %arg2, i32* @eax, align 4
  %v2_14141 = call i32 @function_18356(i32 1, i32 %arg2)
  %v2_14146 = icmp eq i32 %v2_14141, 0
  br i1 %v2_14146, label %dec_label_pc_14152, label %dec_label_pc_1414a

dec_label_pc_1414a:                               ; preds = %dec_label_pc_14110
  %v3_14141 = inttoptr i32 %v2_14141 to i8*
  %v2_1414d = load i8, i8* %arg3, align 1
  store i8 %v2_1414d, i8* %v3_14141, align 1
  br label %dec_label_pc_14152

dec_label_pc_14152:                               ; preds = %dec_label_pc_1414a, %dec_label_pc_14110
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1415e

bb:                                               ; preds = %dec_label_pc_14152
  %v1_1415c = call i32 @function_14163()
  br label %dec_label_pc_1415e

dec_label_pc_1415e:                               ; preds = %bb, %dec_label_pc_14152
  %v2_1415c = phi i32 [ %v1_1415c, %bb ], [ 0, %dec_label_pc_14152 ]
  ret i32 %v2_1415c

; uselistorder directives
  uselistorder i32 %v2_14141, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_14163() local_unnamed_addr {
dec_label_pc_14163:
  %v0_14164 = load i32, i32* @eax, align 4
  ret i32 %v0_14164
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14166:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1418c

bb:                                               ; preds = %dec_label_pc_14166
  %v2_1418a = call i32 @function_14191(i32 %arg1)
  br label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %bb, %dec_label_pc_14166
  %v3_1418a = phi i32 [ %v2_1418a, %bb ], [ %arg1, %dec_label_pc_14166 ]
  ret i32 %v3_1418a
}

define i32 @function_14191(i32 %arg1) local_unnamed_addr {
dec_label_pc_14191:
  %v0_14192 = load i32, i32* @eax, align 4
  ret i32 %v0_14192
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE18_M_insert_dispatchIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_14194:
  %edx.global-to-local = alloca i32, align 4
  %v0_141c4 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_141c4, 16777216
  %v5_141e3 = sdiv i32 %sext, 16777216
  %v6_141e3 = call i32 @unknown_2c3c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_141e3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_141f4

bb:                                               ; preds = %dec_label_pc_14194
  %v1_141f2 = call i32 @function_141f9()
  br label %dec_label_pc_141f4

dec_label_pc_141f4:                               ; preds = %bb, %dec_label_pc_14194
  %v2_141f2 = phi i32 [ %v1_141f2, %bb ], [ 0, %dec_label_pc_14194 ]
  ret i32 %v2_141f2
}

define i32 @function_141f9() local_unnamed_addr {
dec_label_pc_141f9:
  %v0_141fa = load i32, i32* @eax, align 4
  ret i32 %v0_141fa
}

define i32 @_ZN9__gnu_cxxneIPcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_141fb:
  %v2_14224 = load i32, i32* %arg1, align 4
  %v1_14231 = inttoptr i32 %arg2 to i32*
  %v2_14231 = load i32, i32* %v1_14231, align 4
  %v12_14233 = icmp eq i32 %v2_14224, %v2_14231
  %v1_14235 = icmp eq i1 %v12_14233, false
  %v2_14235 = zext i1 %v1_14235 to i32
  %v4_14235 = and i32 %v2_14231, -256
  %v5_14235 = or i32 %v2_14235, %v4_14235
  store i32 %v5_14235, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14244

bb:                                               ; preds = %dec_label_pc_141fb
  %v2_14242 = call i32 @function_14249(i32 %arg2)
  br label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %bb, %dec_label_pc_141fb
  %v3_14242 = phi i32 [ %v2_14242, %bb ], [ %v5_14235, %dec_label_pc_141fb ]
  ret i32 %v3_14242

; uselistorder directives
  uselistorder i32 %v2_14231, { 1, 0 }
}

define i32 @function_14249(i32 %arg1) local_unnamed_addr {
dec_label_pc_14249:
  %v0_1424e = load i32, i32* @eax, align 4
  ret i32 %v0_1424e
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE7destroyEPc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14250:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14279

bb:                                               ; preds = %dec_label_pc_14250
  %v3_14277 = call i32 @function_1427e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_14279

dec_label_pc_14279:                               ; preds = %bb, %dec_label_pc_14250
  %v4_14277 = phi i32 [ %v3_14277, %bb ], [ 0, %dec_label_pc_14250 ]
  ret i32 %v4_14277
}

define i32 @function_1427e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1427e:
  %v0_1427f = load i32, i32* @eax, align 4
  ret i32 %v0_1427f
}

define i32 @_Z9SerializeI11CDataStreamEvRT_iii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14280:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_142b1 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* @eax, align 4
  %v7_142be = call i32 @function_21dc4(i32 %arg1, i32 %v2_142b1, i32 4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_142cf

bb:                                               ; preds = %dec_label_pc_14280
  %v1_142cd = call i32 @function_142d4()
  br label %dec_label_pc_142cf

dec_label_pc_142cf:                               ; preds = %bb, %dec_label_pc_14280
  %v2_142cd = phi i32 [ %v1_142cd, %bb ], [ 0, %dec_label_pc_14280 ]
  ret i32 %v2_142cd

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_142d4() local_unnamed_addr {
dec_label_pc_142d4:
  %v0_142d5 = load i32, i32* @eax, align 4
  ret i32 %v0_142d5
}

define i32 @_ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_142d6:
  %v2_142ff = load i32, i32* %arg1, align 4
  %v1_1430c = inttoptr i32 %arg2 to i32*
  %v2_1430c = load i32, i32* %v1_1430c, align 4
  %v12_1430e = icmp eq i32 %v2_142ff, %v2_1430c
  %v1_14310 = zext i1 %v12_1430e to i32
  %v3_14310 = and i32 %v2_1430c, -256
  %v4_14310 = or i32 %v1_14310, %v3_14310
  store i32 %v4_14310, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1431f

bb:                                               ; preds = %dec_label_pc_142d6
  %v2_1431d = call i32 @function_14324(i32 %arg2)
  br label %dec_label_pc_1431f

dec_label_pc_1431f:                               ; preds = %bb, %dec_label_pc_142d6
  %v3_1431d = phi i32 [ %v2_1431d, %bb ], [ %v4_14310, %dec_label_pc_142d6 ]
  ret i32 %v3_1431d

; uselistorder directives
  uselistorder i32 %v2_1430c, { 1, 0 }
}

define i32 @function_14324(i32 %arg1) local_unnamed_addr {
dec_label_pc_14324:
  %v0_14329 = load i32, i32* @eax, align 4
  ret i32 %v0_14329
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1432a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14358

bb:                                               ; preds = %dec_label_pc_1432a
  %v2_14356 = call i32 @function_1435d(i32 %arg1)
  br label %dec_label_pc_14358

dec_label_pc_14358:                               ; preds = %bb, %dec_label_pc_1432a
  %v3_14356 = phi i32 [ %v2_14356, %bb ], [ 0, %dec_label_pc_1432a ]
  ret i32 %v3_14356
}

define i32 @function_1435d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1435d:
  %v0_1435e = load i32, i32* @eax, align 4
  ret i32 %v0_1435e
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14360:
  %v1_1437d = call i32 @unknown_2c95e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1438e

bb:                                               ; preds = %dec_label_pc_14360
  %v1_1438c = call i32 @function_14393()
  br label %dec_label_pc_1438e

dec_label_pc_1438e:                               ; preds = %bb, %dec_label_pc_14360
  %v2_1438c = phi i32 [ %v1_1438c, %bb ], [ 0, %dec_label_pc_14360 ]
  ret i32 %v2_1438c
}

define i32 @function_14393() local_unnamed_addr {
dec_label_pc_14393:
  %v0_14394 = load i32, i32* @eax, align 4
  ret i32 %v0_14394
}

define i32 @_ZNSt12_Vector_baseIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14396:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_143b1 = add i32 %tmp101, 8
  %v2_143b1 = inttoptr i32 %v1_143b1 to i32*
  %v3_143b1 = load i32, i32* %v2_143b1, align 4
  %v2_143b9 = load i32, i32* %arg1, align 4
  %v2_143bd = sub i32 %v3_143b1, %v2_143b9
  store i32 %tmp101, i32* @eax, align 4
  %v3_143d6 = call i32 @function_28876(i32 %tmp101, i32 %v2_143b9, i32 %v2_143bd)
  store i32 %tmp101, i32* @eax, align 4
  %v1_143e1 = call i32 @function_286c0(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_143f2

bb:                                               ; preds = %dec_label_pc_14396
  %v1_143f0 = call i32 @function_14410()
  store i32 %v1_143f0, i32* @eax, align 4
  br label %dec_label_pc_143f2

dec_label_pc_143f2:                               ; preds = %bb, %dec_label_pc_14396
  %v0_143f2 = call i32 @function_1440b()
  ret i32 %v0_143f2

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 4, 0 }
}

define i32 @function_143f5() local_unnamed_addr {
dec_label_pc_143f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_143f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_143f5
}

define i32 @function_1440b() local_unnamed_addr {
dec_label_pc_1440b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14410() local_unnamed_addr {
dec_label_pc_14410:
  %v0_14415 = load i32, i32* @eax, align 4
  ret i32 %v0_14415
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14416:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1443c

bb:                                               ; preds = %dec_label_pc_14416
  %v2_1443a = call i32 @function_14441(i32 %arg1)
  br label %dec_label_pc_1443c

dec_label_pc_1443c:                               ; preds = %bb, %dec_label_pc_14416
  %v3_1443a = phi i32 [ %v2_1443a, %bb ], [ %arg1, %dec_label_pc_14416 ]
  ret i32 %v3_1443a
}

define i32 @function_14441(i32 %arg1) local_unnamed_addr {
dec_label_pc_14441:
  %v0_14442 = load i32, i32* @eax, align 4
  ret i32 %v0_14442
}

define i32 @_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14443:
  %v2_14473 = call i32 @unknown_2ca93(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14484

bb:                                               ; preds = %dec_label_pc_14443
  %v1_14482 = call i32 @function_14489()
  br label %dec_label_pc_14484

dec_label_pc_14484:                               ; preds = %bb, %dec_label_pc_14443
  %v2_14482 = phi i32 [ %v1_14482, %bb ], [ 0, %dec_label_pc_14443 ]
  ret i32 %v2_14482
}

define i32 @function_14489() local_unnamed_addr {
dec_label_pc_14489:
  %v0_1448a = load i32, i32* @eax, align 4
  ret i32 %v0_1448a
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1448c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_144af

bb:                                               ; preds = %dec_label_pc_1448c
  %v2_144ad = call i32 @function_144b4(i32 %arg1)
  br label %dec_label_pc_144af

dec_label_pc_144af:                               ; preds = %bb, %dec_label_pc_1448c
  %v3_144ad = phi i32 [ %v2_144ad, %bb ], [ 0, %dec_label_pc_1448c ]
  ret i32 %v3_144ad
}

define i32 @function_144b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_144b4:
  %v0_144b5 = load i32, i32* @eax, align 4
  ret i32 %v0_144b5
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_144b6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_144d9

bb:                                               ; preds = %dec_label_pc_144b6
  %v2_144d7 = call i32 @function_144de(i32 %arg1)
  br label %dec_label_pc_144d9

dec_label_pc_144d9:                               ; preds = %bb, %dec_label_pc_144b6
  %v3_144d7 = phi i32 [ %v2_144d7, %bb ], [ 0, %dec_label_pc_144b6 ]
  ret i32 %v3_144d7
}

define i32 @function_144de(i32 %arg1) local_unnamed_addr {
dec_label_pc_144de:
  %v0_144df = load i32, i32* @eax, align 4
  ret i32 %v0_144df
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_144e0:
  %v10_14503 = icmp eq i32 %arg2, 0
  br i1 %v10_14503, label %dec_label_pc_14522, label %dec_label_pc_14509

dec_label_pc_14509:                               ; preds = %dec_label_pc_144e0
  %v3_1451d = call i32 @unknown_2cc2a(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_14522

dec_label_pc_14522:                               ; preds = %dec_label_pc_14509, %dec_label_pc_144e0
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1452e

bb:                                               ; preds = %dec_label_pc_14522
  %v1_1452c = call i32 @function_14533()
  br label %dec_label_pc_1452e

dec_label_pc_1452e:                               ; preds = %bb, %dec_label_pc_14522
  %v2_1452c = phi i32 [ %v1_1452c, %bb ], [ 0, %dec_label_pc_14522 ]
  ret i32 %v2_1452c
}

define i32 @function_14533() local_unnamed_addr {
dec_label_pc_14533:
  %v0_14534 = load i32, i32* @eax, align 4
  ret i32 %v0_14534
}

define i32 @_ZN5boost6detail7variant9copy_intoD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14536:
  store i32 %arg1, i32* @eax, align 4
  %v1_14553 = call i32 @function_253f8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14564

bb:                                               ; preds = %dec_label_pc_14536
  %v1_14562 = call i32 @function_14569()
  br label %dec_label_pc_14564

dec_label_pc_14564:                               ; preds = %bb, %dec_label_pc_14536
  %v2_14562 = phi i32 [ %v1_14562, %bb ], [ 0, %dec_label_pc_14536 ]
  ret i32 %v2_14562

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14569() local_unnamed_addr {
dec_label_pc_14569:
  %v0_1456a = load i32, i32* @eax, align 4
  ret i32 %v0_1456a
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1456c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1458f

bb:                                               ; preds = %dec_label_pc_1456c
  %v2_1458d = call i32 @function_14594(i32 %arg1)
  br label %dec_label_pc_1458f

dec_label_pc_1458f:                               ; preds = %bb, %dec_label_pc_1456c
  %v3_1458d = phi i32 [ %v2_1458d, %bb ], [ 0, %dec_label_pc_1456c ]
  ret i32 %v3_1458d
}

define i32 @function_14594(i32 %arg1) local_unnamed_addr {
dec_label_pc_14594:
  %v0_14595 = load i32, i32* @eax, align 4
  ret i32 %v0_14595
}

define i32 @_ZN5boost6detail7variant9destroyerC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14596:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_145c4

bb:                                               ; preds = %dec_label_pc_14596
  %v2_145c2 = call i32 @function_145c9(i32 %arg1)
  br label %dec_label_pc_145c4

dec_label_pc_145c4:                               ; preds = %bb, %dec_label_pc_14596
  %v3_145c2 = phi i32 [ %v2_145c2, %bb ], [ 0, %dec_label_pc_14596 ]
  ret i32 %v3_145c2
}

define i32 @function_145c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_145c9:
  %v0_145ca = load i32, i32* @eax, align 4
  ret i32 %v0_145ca
}

define i32 @_ZN5boost6detail7variant9destroyerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_145cc:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_145fa

bb:                                               ; preds = %dec_label_pc_145cc
  %v2_145f8 = call i32 @function_145ff(i32 %arg1)
  br label %dec_label_pc_145fa

dec_label_pc_145fa:                               ; preds = %bb, %dec_label_pc_145cc
  %v3_145f8 = phi i32 [ %v2_145f8, %bb ], [ 0, %dec_label_pc_145cc ]
  ret i32 %v3_145f8
}

define i32 @function_145ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_145ff:
  %v0_14600 = load i32, i32* @eax, align 4
  ret i32 %v0_14600
}

define i32 @_ZN5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14602:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14625

bb:                                               ; preds = %dec_label_pc_14602
  %v2_14623 = call i32 @function_1462a(i32 %arg1)
  br label %dec_label_pc_14625

dec_label_pc_14625:                               ; preds = %bb, %dec_label_pc_14602
  %v3_14623 = phi i32 [ %v2_14623, %bb ], [ 0, %dec_label_pc_14602 ]
  ret i32 %v3_14623
}

define i32 @function_1462a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1462a:
  %v0_1462b = load i32, i32* @eax, align 4
  ret i32 %v0_1462b
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1462c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1465a

bb:                                               ; preds = %dec_label_pc_1462c
  %v2_14658 = call i32 @function_1465f(i32 %arg1)
  br label %dec_label_pc_1465a

dec_label_pc_1465a:                               ; preds = %bb, %dec_label_pc_1462c
  %v3_14658 = phi i32 [ %v2_14658, %bb ], [ 0, %dec_label_pc_1462c ]
  ret i32 %v3_14658
}

define i32 @function_1465f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1465f:
  %v0_14660 = load i32, i32* @eax, align 4
  ret i32 %v0_14660
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEEC1ERS3_NS_12defer_lock_tE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14662:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_14691 = add i32 %tmp104, 4
  %v2_14691 = inttoptr i32 %v1_14691 to i8*
  store i8 0, i8* %v2_14691, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_146a1

bb:                                               ; preds = %dec_label_pc_14662
  %sext = mul i32 %arg3, 16777216
  %v4_1469f = sdiv i32 %sext, 16777216
  %v5_1469f = call i32 @function_146a6(i32 %v4_1469f, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_146a1

dec_label_pc_146a1:                               ; preds = %bb, %dec_label_pc_14662
  %v6_1469f = phi i32 [ %v5_1469f, %bb ], [ 0, %dec_label_pc_14662 ]
  ret i32 %v6_1469f
}

define i32 @function_146a6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_146a6:
  %v0_146a7 = load i32, i32* @eax, align 4
  ret i32 %v0_146a7
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_146a8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v4_146ca = trunc i32 %tmp101 to i8
  %v5_146ca = icmp eq i8 %v4_146ca, 0
  br i1 %v5_146ca, label %dec_label_pc_146db, label %dec_label_pc_146ce

dec_label_pc_146ce:                               ; preds = %dec_label_pc_146a8
  %v2_146d1 = load i32, i32* %arg1, align 4
  %v1_146d6 = call i32 @function_26970(i32 %v2_146d1)
  br label %dec_label_pc_146db

dec_label_pc_146db:                               ; preds = %dec_label_pc_146ce, %dec_label_pc_146a8
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_146e7

bb:                                               ; preds = %dec_label_pc_146db
  %v1_146e5 = call i32 @function_146ec()
  br label %dec_label_pc_146e7

dec_label_pc_146e7:                               ; preds = %bb, %dec_label_pc_146db
  %v2_146e5 = phi i32 [ %v1_146e5, %bb ], [ 0, %dec_label_pc_146db ]
  ret i32 %v2_146e5

; uselistorder directives
  uselistorder i32 (i32)* @function_26970, { 1, 0 }
}

define i32 @function_146ec() local_unnamed_addr {
dec_label_pc_146ec:
  %v0_146ed = load i32, i32* @eax, align 4
  ret i32 %v0_146ed
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE8TryEnterEPKcS6_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_146ee:
  %v1_1471d = call i32 @unknown_2cefa(i32 %arg1)
  %v5_14742 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE8TryEnterEPKcS6_i(i32 %arg2, i32 %arg3, i32 %arg4, i32 %v1_1471d, i32 1)
  %v1_1474d = call i32 @unknown_2cf2a(i32 %arg1)
  %v1_1475d = xor i32 %arg1, 1
  %v4_1475d = trunc i32 %v1_1475d to i8
  %v5_14760 = icmp eq i8 %v4_1475d, 0
  br i1 %v5_14760, label %dec_label_pc_14769, label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %dec_label_pc_14769, %bb, %dec_label_pc_146ee
  %merge = phi i32 [ %v1_1475d, %dec_label_pc_146ee ], [ %v2_1477e, %bb ], [ %arg1, %dec_label_pc_14769 ]
  ret i32 %merge

dec_label_pc_14769:                               ; preds = %dec_label_pc_146ee
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14764

bb:                                               ; preds = %dec_label_pc_14769
  %v2_1477e = call i32 @function_14785(i32 %arg1)
  br label %dec_label_pc_14764

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 4, 3, 5 }
  uselistorder label %dec_label_pc_14764, { 1, 0, 2 }
}

define i32 @function_14785(i32 %arg1) local_unnamed_addr {
dec_label_pc_14785:
  %v0_14786 = load i32, i32* @eax, align 4
  ret i32 %v0_14786
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE5EnterEPKcS6_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14788:
  %v1_147b7 = call i32 @unknown_2cf94(i32 %arg1)
  %v5_147dc = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE5EnterEPKcS6_i(i32 %arg2, i32 %arg3, i32 %arg4, i32 %v1_147b7, i32 0)
  %v1_147e7 = call i32 @unknown_2d04c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_147f8

bb:                                               ; preds = %dec_label_pc_14788
  %v1_147f6 = call i32 @function_147fd()
  br label %dec_label_pc_147f8

dec_label_pc_147f8:                               ; preds = %bb, %dec_label_pc_14788
  %v2_147f6 = phi i32 [ %v1_147f6, %bb ], [ 0, %dec_label_pc_14788 ]
  ret i32 %v2_147f6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_147fd() local_unnamed_addr {
dec_label_pc_147fd:
  %v0_147fe = load i32, i32* @eax, align 4
  ret i32 %v0_147fe
}

define i32 @_ZNK5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE9owns_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14800:
  %v1_1481a = add i32 %arg1, 4
  %v2_1481a = inttoptr i32 %v1_1481a to i8*
  %v3_1481a = load i8, i8* %v2_1481a, align 1
  %v4_1481a = zext i8 %v3_1481a to i32
  store i32 %v4_1481a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1482a

bb:                                               ; preds = %dec_label_pc_14800
  %v2_14828 = call i32 @function_1482f(i32 %arg1)
  br label %dec_label_pc_1482a

dec_label_pc_1482a:                               ; preds = %bb, %dec_label_pc_14800
  %v3_14828 = phi i32 [ %v2_14828, %bb ], [ %v4_1481a, %dec_label_pc_14800 ]
  ret i32 %v3_14828
}

define i32 @function_1482f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1482f:
  %v0_14830 = load i32, i32* @eax, align 4
  ret i32 %v0_14830
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14832:
  %v2_1484c = load i32, i32* %arg1, align 4
  %v1_1484e = icmp eq i32 %v2_1484c, 0
  br i1 %v1_1484e, label %dec_label_pc_14868, label %dec_label_pc_14852

dec_label_pc_14852:                               ; preds = %dec_label_pc_14832
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %dec_label_pc_14852, %dec_label_pc_14832
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14874

bb:                                               ; preds = %dec_label_pc_14868
  %v1_14872 = call i32 @function_14879()
  br label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %bb, %dec_label_pc_14868
  %v2_14872 = phi i32 [ %v1_14872, %bb ], [ 0, %dec_label_pc_14868 ]
  ret i32 %v2_14872
}

define i32 @function_14879() local_unnamed_addr {
dec_label_pc_14879:
  %v0_1487a = load i32, i32* @eax, align 4
  ret i32 %v0_1487a
}

define i32 @_ZN5boost16exception_detail10clone_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1487c:
  store i32 ptrtoint (i32* @global_var_2b500.1805 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_148a8

bb:                                               ; preds = %dec_label_pc_1487c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_148a6 = call i32 @function_148ad(i32 %tmp100)
  br label %dec_label_pc_148a8

dec_label_pc_148a8:                               ; preds = %bb, %dec_label_pc_1487c
  %v3_148a6 = phi i32 [ %v2_148a6, %bb ], [ 0, %dec_label_pc_1487c ]
  ret i32 %v3_148a6

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_148ad(i32 %arg1) local_unnamed_addr {
dec_label_pc_148ad:
  %v0_148ae = load i32, i32* @eax, align 4
  ret i32 %v0_148ae
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_148b0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @edx, align 8
  %v2_148db = call i32 @function_25d94(i32 %tmp102, i32 %arg2)
  %v1_148e3 = add i32 %tmp102, 24
  store i32 %v1_148e3, i32* @eax, align 4
  %v1_148e9 = call x86_fp80 @function_2912c(i32 %v1_148e3)
  store i32 ptrtoint (%vtable_2b410_type* @global_var_2b410.1830 to i32), i32* %arg1, align 4
  %v1_148fa = add i32 %tmp102, 20
  %v2_148fa = inttoptr i32 %v1_148fa to i32*
  store i32 ptrtoint (i32* @global_var_2b428.1831 to i32), i32* %v2_148fa, align 4
  %v2_14904 = inttoptr i32 %v1_148e3 to i32*
  store i32 ptrtoint (i32* @global_var_2b43c.1832 to i32), i32* %v2_14904, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v2_14918 = call i32 @function_1a03e(i32 %tmp102, i32 %arg2)
  %v0_1491d = call i32 @function_14944()
  ret i32 %v0_1491d

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
}

define i32 @function_14920() local_unnamed_addr {
dec_label_pc_14920:
  %eax.global-to-local = alloca i32, align 4
  %v0_14920 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14920
}

define i32 @function_14944() local_unnamed_addr {
dec_label_pc_14944:
  %v0_14944 = load i32, i32* @ebp, align 4
  %v1_14944 = add i32 %v0_14944, -12
  %v2_14944 = inttoptr i32 %v1_14944 to i32*
  %v3_14944 = load i32, i32* %v2_14944, align 4
  %v1_14947 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14947 = xor i32 %v1_14947, %v3_14944
  %v3_14947 = icmp eq i32 %v2_14947, 0
  store i32 %v2_14947, i32* @eax, align 4
  br i1 %v3_14947, label %bb, label %dec_label_pc_14950

bb:                                               ; preds = %dec_label_pc_14944
  %v1_1494e = call i32 @function_14955()
  br label %dec_label_pc_14950

dec_label_pc_14950:                               ; preds = %bb, %dec_label_pc_14944
  %v2_1494e = phi i32 [ %v1_1494e, %bb ], [ %v2_14947, %dec_label_pc_14944 ]
  ret i32 %v2_1494e
}

define i32 @function_14955() local_unnamed_addr {
dec_label_pc_14955:
  %v0_1495a = load i32, i32* @eax, align 4
  ret i32 %v0_1495a
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1495b:
  %eax.global-to-local = alloca i32, align 4
  %v0_14960 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14960
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14965:
  %eax.global-to-local = alloca i32, align 4
  %v0_1496a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1496a
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_14970:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b410_type* @global_var_2b410.1830 to i32), i32* %arg1, align 4
  %v1_14993 = add i32 %tmp99, 20
  %v2_14993 = inttoptr i32 %v1_14993 to i32*
  store i32 ptrtoint (i32* @global_var_2b428.1831 to i32), i32* %v2_14993, align 4
  %v1_1499d = add i32 %tmp99, 24
  %v2_1499d = inttoptr i32 %v1_1499d to i32*
  store i32 ptrtoint (i32* @global_var_2b43c.1832 to i32), i32* %v2_1499d, align 4
  store i32 %v1_1499d, i32* @eax, align 4
  %v1_149ad = call i32 @function_1a074(i32 %v1_1499d)
  store i32 %tmp99, i32* @eax, align 4
  %v1_149b8 = call i32 @function_25d52(i32 %tmp99)
  %v1_149c7 = call i32 @function_149d4()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_1499d, { 1, 0, 2 }
  uselistorder i32 ptrtoint (%vtable_2b410_type* @global_var_2b410.1830 to i32), { 2, 1, 0 }
}

define i32 @function_149d4() local_unnamed_addr {
dec_label_pc_149d4:
  %v0_149d4 = load i32, i32* @ebp, align 4
  %v1_149d4 = add i32 %v0_149d4, -12
  %v2_149d4 = inttoptr i32 %v1_149d4 to i32*
  %v3_149d4 = load i32, i32* %v2_149d4, align 4
  %v1_149d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_149d7 = xor i32 %v1_149d7, %v3_149d4
  %v3_149d7 = icmp eq i32 %v2_149d7, 0
  store i32 %v2_149d7, i32* @eax, align 4
  br i1 %v3_149d7, label %bb, label %dec_label_pc_149e0

bb:                                               ; preds = %dec_label_pc_149d4
  %v1_149de = call i32 @function_149e5()
  br label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %bb, %dec_label_pc_149d4
  %v2_149de = phi i32 [ %v1_149de, %bb ], [ %v2_149d7, %dec_label_pc_149d4 ]
  ret i32 %v2_149de
}

define i32 @function_149e5() local_unnamed_addr {
dec_label_pc_149e5:
  %v0_149e6 = load i32, i32* @eax, align 4
  ret i32 %v0_149e6
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_149e8:
  %v4_149e8 = add i32 %arg1, -24
  %v1_149ed = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_149e8)
  ret i32 %v1_149ed
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_149ef:
  %v4_149ef = add i32 %arg1, -20
  %v1_149f4 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_149ef)
  ret i32 %v1_149f4

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) {
dec_label_pc_149f6:
  %v1_14a13 = call i32 @function_29358(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_14a33() local_unnamed_addr {
dec_label_pc_14a33:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14a33 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14a33 = add i32 %v0_14a33, -1
  store i32 %v1_14a33, i32* %ecx.global-to-local, align 4
  %v0_14a35 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14a35
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a36:
  ret i32 %arg2
}

define i32 @function_14a5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a5c:
  %v0_14a60 = call i32 @unknown_2d37b()
  store i32 %v0_14a60, i32* @eax, align 4
  %v0_14a65 = load i32, i32* @ebp, align 4
  %v1_14a65 = add i32 %v0_14a65, -12
  %v2_14a65 = inttoptr i32 %v1_14a65 to i32*
  %v3_14a65 = load i32, i32* %v2_14a65, align 4
  %v1_14a68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14a68 = icmp eq i32 %v1_14a68, %v3_14a65
  br i1 %v3_14a68, label %bb, label %dec_label_pc_14a71

bb:                                               ; preds = %dec_label_pc_14a5c
  %v1_14a6f = call i32 @function_14a76()
  br label %dec_label_pc_14a71

dec_label_pc_14a71:                               ; preds = %bb, %dec_label_pc_14a5c
  %v2_14a6f = phi i32 [ %v1_14a6f, %bb ], [ %v0_14a60, %dec_label_pc_14a5c ]
  ret i32 %v2_14a6f
}

define i32 @function_14a76() local_unnamed_addr {
dec_label_pc_14a76:
  %v0_14a77 = load i32, i32* @eax, align 4
  ret i32 %v0_14a77
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a78:
  %v2_14aa2 = call i32 @unknown_2d3fb(i32 %arg1, i32 %arg2)
  store i32 %v2_14aa2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14ab3

bb:                                               ; preds = %dec_label_pc_14a78
  %v1_14ab1 = call i32 @function_14ab8()
  br label %dec_label_pc_14ab3

dec_label_pc_14ab3:                               ; preds = %bb, %dec_label_pc_14a78
  %v2_14ab1 = phi i32 [ %v1_14ab1, %bb ], [ %v2_14aa2, %dec_label_pc_14a78 ]
  ret i32 %v2_14ab1
}

define i32 @function_14ab8() local_unnamed_addr {
dec_label_pc_14ab8:
  %v0_14ab9 = load i32, i32* @eax, align 4
  ret i32 %v0_14ab9
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14aba:
  %v2_14ae4 = call i32 @unknown_2d47b(i32 %arg1, i32 %arg2)
  ret i32 %v2_14ae4
}

define i32 @function_14af3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14af3:
  %v0_14af3 = load i1, i1* @zf, align 1
  br i1 %v0_14af3, label %bb, label %dec_label_pc_14af3.dec_label_pc_14af5_crit_edge

dec_label_pc_14af3.dec_label_pc_14af5_crit_edge:  ; preds = %dec_label_pc_14af3
  %v2_14af3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_14af5

bb:                                               ; preds = %dec_label_pc_14af3
  %v1_14af3 = call i32 @function_14afa()
  br label %dec_label_pc_14af5

dec_label_pc_14af5:                               ; preds = %dec_label_pc_14af3.dec_label_pc_14af5_crit_edge, %bb
  %v2_14af3 = phi i32 [ %v2_14af3.pre, %dec_label_pc_14af3.dec_label_pc_14af5_crit_edge ], [ %v1_14af3, %bb ]
  ret i32 %v2_14af3

; uselistorder directives
  uselistorder label %dec_label_pc_14af5, { 1, 0 }
}

define i32 @function_14afa() local_unnamed_addr {
dec_label_pc_14afa:
  %v0_14afb = load i32, i32* @eax, align 4
  ret i32 %v0_14afb
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14afc:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v10_14b19 = icmp eq i32 %arg2, 0
  br i1 %v10_14b19, label %dec_label_pc_14b2c, label %dec_label_pc_14b1f

dec_label_pc_14b1f:                               ; preds = %dec_label_pc_14afc
  %v1_14b22 = add i32 %arg2, 24
  br label %dec_label_pc_14b2c

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14afc, %dec_label_pc_14b1f
  %storemerge = phi i32 [ %v1_14b22, %dec_label_pc_14b1f ], [ 0, %dec_label_pc_14afc ]
  store i32 %storemerge, i32* %arg1, align 4
  %v1_14b34 = add i32 %tmp104, 4
  store i32 %v1_14b34, i32* @edx, align 8
  %v2_14b41 = call i32 @unknown_2d4fc(i32 %v1_14b34, i32 %arg2)
  store i32 %tmp104, i32* @eax, align 4
  %v3_14b5a = call i32 @function_220bc(i32 %tmp104, i32 %arg2, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14b6b

bb:                                               ; preds = %dec_label_pc_14b2c
  %v1_14b69 = call i32 @function_14b70()
  br label %dec_label_pc_14b6b

dec_label_pc_14b6b:                               ; preds = %bb, %dec_label_pc_14b2c
  %v2_14b69 = phi i32 [ %v1_14b69, %bb ], [ 0, %dec_label_pc_14b2c ]
  ret i32 %v2_14b69

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_14b2c, { 1, 0 }
}

define i32 @function_14b70() local_unnamed_addr {
dec_label_pc_14b70:
  %v0_14b71 = load i32, i32* @eax, align 4
  ret i32 %v0_14b71
}

define i32 @_Z16GetSerializeSizeI9CFlatDataEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14b72:
  store i32 %arg1, i32* @eax, align 4
  %v3_14ba9 = call i32 @function_22422(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_14ba9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14bba

bb:                                               ; preds = %dec_label_pc_14b72
  %v1_14bb8 = call i32 @function_14bbf()
  br label %dec_label_pc_14bba

dec_label_pc_14bba:                               ; preds = %bb, %dec_label_pc_14b72
  %v2_14bb8 = phi i32 [ %v1_14bb8, %bb ], [ %v3_14ba9, %dec_label_pc_14b72 ]
  ret i32 %v2_14bb8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14bbf() local_unnamed_addr {
dec_label_pc_14bbf:
  %v0_14bc0 = load i32, i32* @eax, align 4
  ret i32 %v0_14bc0
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14bc1:
  %v7_14bfe = call i32 @unknown_2d64c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_14bfe, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14c0f

bb:                                               ; preds = %dec_label_pc_14bc1
  %v1_14c0d = call i32 @function_14c14()
  br label %dec_label_pc_14c0f

dec_label_pc_14c0f:                               ; preds = %bb, %dec_label_pc_14bc1
  %v2_14c0d = phi i32 [ %v1_14c0d, %bb ], [ %v7_14bfe, %dec_label_pc_14bc1 ]
  ret i32 %v2_14c0d

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14c14() local_unnamed_addr {
dec_label_pc_14c14:
  %v0_14c15 = load i32, i32* @eax, align 4
  ret i32 %v0_14c15
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c16:
  %v1_14c39 = call i32 @function_2902c(i32 %arg1)
  %v1_14c41 = add i32 %arg1, 4
  %v2_14c41 = inttoptr i32 %v1_14c41 to i32*
  %v3_14c41 = load i32, i32* %v2_14c41, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_14c52 = call i32 @function_29059(i32 %arg2, i32 %v3_14c41, i32 %v1_14c39)
  store i32 %arg2, i32* %v2_14c41, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14c6c

bb:                                               ; preds = %dec_label_pc_14c16
  %v1_14c6a = call i32 @function_14c71()
  br label %dec_label_pc_14c6c

dec_label_pc_14c6c:                               ; preds = %bb, %dec_label_pc_14c16
  %v2_14c6a = phi i32 [ %v1_14c6a, %bb ], [ 0, %dec_label_pc_14c16 ]
  ret i32 %v2_14c6a

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14c71() local_unnamed_addr {
dec_label_pc_14c71:
  %v0_14c72 = load i32, i32* @eax, align 4
  ret i32 %v0_14c72
}

define i32 @_ZN5boost15foreach_detail_13auto_any_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c74:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14c97

bb:                                               ; preds = %dec_label_pc_14c74
  %v2_14c95 = call i32 @function_14c9c(i32 %arg1)
  br label %dec_label_pc_14c97

dec_label_pc_14c97:                               ; preds = %bb, %dec_label_pc_14c74
  %v3_14c95 = phi i32 [ %v2_14c95, %bb ], [ 0, %dec_label_pc_14c74 ]
  ret i32 %v3_14c95
}

define i32 @function_14c9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c9c:
  %v0_14c9d = load i32, i32* @eax, align 4
  ret i32 %v0_14c9d
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c9e:
  %v2_14cc8 = call i32 @unknown_2d330(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14cd9

bb:                                               ; preds = %dec_label_pc_14c9e
  %v1_14cd7 = call i32 @function_14cde()
  br label %dec_label_pc_14cd9

dec_label_pc_14cd9:                               ; preds = %bb, %dec_label_pc_14c9e
  %v2_14cd7 = phi i32 [ %v1_14cd7, %bb ], [ 0, %dec_label_pc_14c9e ]
  ret i32 %v2_14cd7
}

define i32 @function_14cde() local_unnamed_addr {
dec_label_pc_14cde:
  %v0_14cdf = load i32, i32* @eax, align 4
  ret i32 %v0_14cdf
}

define i32 @_ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_14ce0:
  %edx.global-to-local = alloca i32, align 4
  %v0_14d0a = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_14d0a, 16777216
  %v8_14d22 = sdiv i32 %sext, 16777216
  %v9_14d22 = sext i8 %arg4 to i32
  %v10_14d22 = call i32 @unknown_2d7ba(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_14d22, i32 %v9_14d22, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14d33

bb:                                               ; preds = %dec_label_pc_14ce0
  %v1_14d31 = call i32 @function_14d38()
  br label %dec_label_pc_14d33

dec_label_pc_14d33:                               ; preds = %bb, %dec_label_pc_14ce0
  %v2_14d31 = phi i32 [ %v1_14d31, %bb ], [ 0, %dec_label_pc_14ce0 ]
  ret i32 %v2_14d31

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14d38() local_unnamed_addr {
dec_label_pc_14d38:
  %v0_14d39 = load i32, i32* @eax, align 4
  ret i32 %v0_14d39
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d3a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14d60

bb:                                               ; preds = %dec_label_pc_14d3a
  %v2_14d5e = call i32 @function_14d65(i32 %arg1)
  br label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %bb, %dec_label_pc_14d3a
  %v3_14d5e = phi i32 [ %v2_14d5e, %bb ], [ %arg1, %dec_label_pc_14d3a ]
  ret i32 %v3_14d5e
}

define i32 @function_14d65(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d65:
  %v0_14d66 = load i32, i32* @eax, align 4
  ret i32 %v0_14d66
}

define i32 @_Z16GetSerializeSizeI9COutPointEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14d67:
  ret i32 %arg3
}

define i32 @function_14d7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_14d81 = load i32, i32* @eax, align 4
  %v1_14d81 = trunc i32 %v0_14d81 to i8
  %v2_14d81 = load i1, i1* @cf, align 1
  %v3_14d81 = zext i1 %v2_14d81 to i8
  %v4_14d81 = add i8 %v3_14d81, %v1_14d81
  %v22_14d81 = zext i8 %v4_14d81 to i32
  %v24_14d81 = and i32 %v0_14d81, -256
  %v25_14d81 = or i32 %v22_14d81, %v24_14d81
  store i32 %v25_14d81, i32* %eax.global-to-local, align 4
  %v1_14d83 = inttoptr i32 %v25_14d81 to i8*
  %v2_14d83 = load i8, i8* %v1_14d83, align 1
  %v5_14d83 = add i8 %v2_14d83, %v4_14d81
  store i8 %v5_14d83, i8* %v1_14d83, align 1
  %v0_14d85 = load i32, i32* %eax.global-to-local, align 4
  %v1_14d85 = load i32, i32* @ebp, align 4
  %v2_14d85 = add i32 %v1_14d85, -12
  %v3_14d85 = inttoptr i32 %v2_14d85 to i32*
  store i32 %v0_14d85, i32* %v3_14d85, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_14d8a = load i32, i32* @ebp, align 4
  %v1_14d8a = add i32 %v0_14d8a, -36
  %v2_14d8a = inttoptr i32 %v1_14d8a to i32*
  %v3_14d8a = load i32, i32* %v2_14d8a, align 4
  store i32 %v3_14d8a, i32* %eax.global-to-local, align 4
  %v1_14d91 = add i32 %v0_14d8a, -32
  %v2_14d91 = inttoptr i32 %v1_14d91 to i32*
  %v3_14d91 = load i32, i32* %v2_14d91, align 4
  store i32 %v3_14d91, i32* %eax.global-to-local, align 4
  %v1_14d98 = add i32 %v0_14d8a, -28
  %v2_14d98 = inttoptr i32 %v1_14d98 to i32*
  %v3_14d98 = load i32, i32* %v2_14d98, align 4
  store i32 %v3_14d98, i32* @eax, align 4
  %v3_14d9e = call i32 @function_2377b(i32 %v3_14d98, i32 %v3_14d91, i32 %v3_14d8a)
  store i32 %v3_14d9e, i32* @eax, align 4
  %v0_14da3 = load i32, i32* @ebp, align 4
  %v1_14da3 = add i32 %v0_14da3, -12
  %v2_14da3 = inttoptr i32 %v1_14da3 to i32*
  %v3_14da3 = load i32, i32* %v2_14da3, align 4
  %v1_14da6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14da6 = icmp eq i32 %v1_14da6, %v3_14da3
  br i1 %v3_14da6, label %bb, label %dec_label_pc_14daf

bb:                                               ; preds = %dec_label_pc_14d7e
  %v1_14dad = call i32 @function_14db4()
  store i32 %v1_14dad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_14daf

dec_label_pc_14daf:                               ; preds = %bb, %dec_label_pc_14d7e
  %v2_14dad = phi i32 [ %v1_14dad, %bb ], [ %v3_14d9e, %dec_label_pc_14d7e ]
  ret i32 %v2_14dad
}

define i32 @function_14db4() local_unnamed_addr {
dec_label_pc_14db4:
  %v0_14db5 = load i32, i32* @eax, align 4
  ret i32 %v0_14db5
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14db6:
  %v1_14dd3 = call i32 @unknown_2d972(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14de4

bb:                                               ; preds = %dec_label_pc_14db6
  %v1_14de2 = call i32 @function_14de9()
  br label %dec_label_pc_14de4

dec_label_pc_14de4:                               ; preds = %bb, %dec_label_pc_14db6
  %v2_14de2 = phi i32 [ %v1_14de2, %bb ], [ 0, %dec_label_pc_14db6 ]
  ret i32 %v2_14de2
}

define i32 @function_14de9() local_unnamed_addr {
dec_label_pc_14de9:
  %v0_14dea = load i32, i32* @eax, align 4
  ret i32 %v0_14dea
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14dec:
  %v2_14e0f = load i32, i32* %arg1, align 4
  ret i32 %v2_14e0f
}

define i32 @function_14e12(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e12:
  %v2_14e12 = load i32, i32* @ecx, align 4
  %v4_14e12 = udiv i32 %v2_14e12, 2
  %v12_14e12 = inttoptr i32 %v2_14e12 to i32*
  store i32 %v4_14e12, i32* %v12_14e12, align 4
  %v0_14e14 = load i32, i32* @ecx, align 4
  %v1_14e14 = add i32 %v0_14e14, 49856968
  %v2_14e14 = inttoptr i32 %v1_14e14 to i32*
  %v3_14e14 = load i32, i32* %v2_14e14, align 4
  %v4_14e14 = udiv i32 %v3_14e14, 512
  %v5_14e14 = mul i32 %v3_14e14, 8388608
  %v6_14e14 = or i32 %v4_14e14, %v5_14e14
  store i32 %v6_14e14, i32* %v2_14e14, align 4
  %v0_14e27 = load i32, i32* @edx, align 8
  %v0_14e2b = load i32, i32* @eax, align 4
  %v0_14e2f = load i32, i32* @ebp, align 4
  %v1_14e2f = add i32 %v0_14e2f, -28
  %v2_14e2f = inttoptr i32 %v1_14e2f to i32*
  %v3_14e2f = load i32, i32* %v2_14e2f, align 4
  %v3_14e35 = call i32 @unknown_2d9de(i32 %v3_14e2f, i32 %v0_14e2b, i32 %v0_14e27)
  %v0_14e3a = load i32, i32* @ebp, align 4
  %v1_14e3a = add i32 %v0_14e3a, -28
  %v2_14e3a = inttoptr i32 %v1_14e3a to i32*
  %v3_14e3a = load i32, i32* %v2_14e3a, align 4
  store i32 %v3_14e3a, i32* @eax, align 4
  %v1_14e40 = call i32 @function_29ba2(i32 %v3_14e3a)
  %v0_14e45 = load i32, i32* @ebp, align 4
  %v1_14e45 = add i32 %v0_14e45, -12
  %v2_14e45 = inttoptr i32 %v1_14e45 to i32*
  %v3_14e45 = load i32, i32* %v2_14e45, align 4
  %v1_14e48 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14e48 = xor i32 %v1_14e48, %v3_14e45
  %v3_14e48 = icmp eq i32 %v2_14e48, 0
  store i32 %v2_14e48, i32* @eax, align 4
  br i1 %v3_14e48, label %bb, label %dec_label_pc_14e51

bb:                                               ; preds = %dec_label_pc_14e12
  %v1_14e4f = call i32 @function_14e6f()
  store i32 %v1_14e4f, i32* @eax, align 4
  br label %dec_label_pc_14e51

dec_label_pc_14e51:                               ; preds = %bb, %dec_label_pc_14e12
  %v0_14e51 = call i32 @function_14e6a()
  ret i32 %v0_14e51

; uselistorder directives
  uselistorder i32 %v2_14e12, { 1, 0 }
}

define i32 @function_14e54() local_unnamed_addr {
dec_label_pc_14e54:
  %eax.global-to-local = alloca i32, align 4
  %v0_14e54 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14e54
}

define i32 @function_14e6a() local_unnamed_addr {
dec_label_pc_14e6a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14e6f() local_unnamed_addr {
dec_label_pc_14e6f:
  %v0_14e74 = load i32, i32* @eax, align 4
  ret i32 %v0_14e74
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e76:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14e9c

bb:                                               ; preds = %dec_label_pc_14e76
  %v2_14e9a = call i32 @function_14ea1(i32 %arg1)
  br label %dec_label_pc_14e9c

dec_label_pc_14e9c:                               ; preds = %bb, %dec_label_pc_14e76
  %v3_14e9a = phi i32 [ %v2_14e9a, %bb ], [ %arg1, %dec_label_pc_14e76 ]
  ret i32 %v3_14e9a
}

define i32 @function_14ea1(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ea1:
  %v0_14ea2 = load i32, i32* @eax, align 4
  ret i32 %v0_14ea2
}

define i32 @_ZSt8_DestroyIP5CTxInS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14ea3:
  %v2_14ed3 = call i32 @unknown_2daea(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14ee4

bb:                                               ; preds = %dec_label_pc_14ea3
  %v1_14ee2 = call i32 @function_14ee9()
  br label %dec_label_pc_14ee4

dec_label_pc_14ee4:                               ; preds = %bb, %dec_label_pc_14ea3
  %v2_14ee2 = phi i32 [ %v1_14ee2, %bb ], [ 0, %dec_label_pc_14ea3 ]
  ret i32 %v2_14ee2
}

define i32 @function_14ee9() local_unnamed_addr {
dec_label_pc_14ee9:
  %v0_14eea = load i32, i32* @eax, align 4
  ret i32 %v0_14eea
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14eec:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14f1a

bb:                                               ; preds = %dec_label_pc_14eec
  %v2_14f18 = call i32 @function_14f1f(i32 %arg1)
  br label %dec_label_pc_14f1a

dec_label_pc_14f1a:                               ; preds = %bb, %dec_label_pc_14eec
  %v3_14f18 = phi i32 [ %v2_14f18, %bb ], [ 0, %dec_label_pc_14eec ]
  ret i32 %v3_14f18
}

define i32 @function_14f1f(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f1f:
  %v0_14f20 = load i32, i32* @eax, align 4
  ret i32 %v0_14f20
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14f22:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_14f3d = add i32 %tmp101, 8
  %v2_14f3d = inttoptr i32 %v1_14f3d to i32*
  %v3_14f3d = load i32, i32* %v2_14f3d, align 4
  %v2_14f45 = load i32, i32* %arg1, align 4
  %v2_14f49 = sub i32 %v3_14f3d, %v2_14f45
  %v2_14f4d = sdiv i32 %v2_14f49, 4
  %v3_14f50 = mul i32 %v2_14f4d, -858993459
  %v3_14f6b = call i32 @unknown_2dbac(i32 %tmp101, i32 %v2_14f45, i32 %v3_14f50)
  store i32 %tmp101, i32* @eax, align 4
  %v1_14f76 = call i32 @function_29e0e(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14f87

bb:                                               ; preds = %dec_label_pc_14f22
  %v1_14f85 = call i32 @function_14fa5()
  store i32 %v1_14f85, i32* @eax, align 4
  br label %dec_label_pc_14f87

dec_label_pc_14f87:                               ; preds = %bb, %dec_label_pc_14f22
  %v0_14f87 = call i32 @function_14fa0()
  ret i32 %v0_14f87

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_14f8a() local_unnamed_addr {
dec_label_pc_14f8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_14f8a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14f8a
}

define i32 @function_14fa0() local_unnamed_addr {
dec_label_pc_14fa0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14fa5() local_unnamed_addr {
dec_label_pc_14fa5:
  %v0_14faa = load i32, i32* @eax, align 4
  ret i32 %v0_14faa
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fac:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14fd2

bb:                                               ; preds = %dec_label_pc_14fac
  %v2_14fd0 = call i32 @function_14fd7(i32 %arg1)
  br label %dec_label_pc_14fd2

dec_label_pc_14fd2:                               ; preds = %bb, %dec_label_pc_14fac
  %v3_14fd0 = phi i32 [ %v2_14fd0, %bb ], [ %arg1, %dec_label_pc_14fac ]
  ret i32 %v3_14fd0
}

define i32 @function_14fd7(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fd7:
  %v0_14fd8 = load i32, i32* @eax, align 4
  ret i32 %v0_14fd8
}

define i32 @_ZSt8_DestroyIP6CTxOutS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14fd9:
  %v2_15009 = call i32 @unknown_2dcb8(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1501a

bb:                                               ; preds = %dec_label_pc_14fd9
  %v1_15018 = call i32 @function_1501f()
  br label %dec_label_pc_1501a

dec_label_pc_1501a:                               ; preds = %bb, %dec_label_pc_14fd9
  %v2_15018 = phi i32 [ %v1_15018, %bb ], [ 0, %dec_label_pc_14fd9 ]
  ret i32 %v2_15018
}

define i32 @function_1501f() local_unnamed_addr {
dec_label_pc_1501f:
  %v0_15020 = load i32, i32* @eax, align 4
  ret i32 %v0_15020
}

define i32 @_Z16GetSerializeSizeI5CTxInSaIS0_EEjRKSt6vectorIT_T0_Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15021:
  %stack_var_-17 = alloca i32, align 4
  %v2_15044 = ptrtoint i32* %stack_var_-17 to i32
  %v7_1505f = call i32 @unknown_2dd42(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v2_15044, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1505f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15070

bb:                                               ; preds = %dec_label_pc_15021
  %v1_1506e = call i32 @function_15075()
  br label %dec_label_pc_15070

dec_label_pc_15070:                               ; preds = %bb, %dec_label_pc_15021
  %v2_1506e = phi i32 [ %v1_1506e, %bb ], [ %v7_1505f, %dec_label_pc_15021 ]
  ret i32 %v2_1506e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15075() local_unnamed_addr {
dec_label_pc_15075:
  %v0_15076 = load i32, i32* @eax, align 4
  ret i32 %v0_15076
}

define i32 @_Z16GetSerializeSizeI6CTxOutSaIS0_EEjRKSt6vectorIT_T0_Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15077:
  %stack_var_-17 = alloca i32, align 4
  %v2_1509a = ptrtoint i32* %stack_var_-17 to i32
  %v7_150b5 = call i32 @unknown_2de67(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v2_1509a, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_150b5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_150c6

bb:                                               ; preds = %dec_label_pc_15077
  %v1_150c4 = call i32 @function_150cb()
  br label %dec_label_pc_150c6

dec_label_pc_150c6:                               ; preds = %bb, %dec_label_pc_15077
  %v2_150c4 = phi i32 [ %v1_150c4, %bb ], [ %v7_150b5, %dec_label_pc_15077 ]
  ret i32 %v2_150c4

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_150cb() local_unnamed_addr {
dec_label_pc_150cb:
  %v0_150cc = load i32, i32* @eax, align 4
  ret i32 %v0_150cc
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_150ce:
  %stack_var_-20 = alloca i32, align 4
  %v1_150ee = add i32 %arg2, 4
  %v2_150ee = inttoptr i32 %v1_150ee to i32*
  %v3_150ee = load i32, i32* %v2_150ee, align 4
  store i32 %v3_150ee, i32* %stack_var_-20, align 4
  %v2_150f4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_15101 = call i32 @unknown_2df8e(i32 %arg1, i32 %v2_150f4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15115

bb:                                               ; preds = %dec_label_pc_150ce
  %v1_15113 = call i32 @function_1511a()
  br label %dec_label_pc_15115

dec_label_pc_15115:                               ; preds = %bb, %dec_label_pc_150ce
  %v2_15113 = phi i32 [ %v1_15113, %bb ], [ %arg1, %dec_label_pc_150ce ]
  ret i32 %v2_15113

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1511a() local_unnamed_addr {
dec_label_pc_1511a:
  %v0_1511b = load i32, i32* @eax, align 4
  ret i32 %v0_1511b
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1511e:
  %stack_var_-20 = alloca i32, align 4
  %v2_1513e = load i32, i32* %arg2, align 4
  store i32 %v2_1513e, i32* %stack_var_-20, align 4
  %v2_15143 = ptrtoint i32* %stack_var_-20 to i32
  %v2_15150 = call i32 @unknown_2dfde(i32 %arg1, i32 %v2_15143)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15164

bb:                                               ; preds = %dec_label_pc_1511e
  %v1_15162 = call i32 @function_15169()
  br label %dec_label_pc_15164

dec_label_pc_15164:                               ; preds = %bb, %dec_label_pc_1511e
  %v2_15162 = phi i32 [ %v1_15162, %bb ], [ %arg1, %dec_label_pc_1511e ]
  ret i32 %v2_15162

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_15169() local_unnamed_addr {
dec_label_pc_15169:
  %v0_1516a = load i32, i32* @eax, align 4
  ret i32 %v0_1516a
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1516e:
  %stack_var_-20 = alloca i32, align 4
  %v1_1518e = add i32 %arg2, 4
  %v2_1518e = inttoptr i32 %v1_1518e to i32*
  %v3_1518e = load i32, i32* %v2_1518e, align 4
  store i32 %v3_1518e, i32* %stack_var_-20, align 4
  %v2_15194 = ptrtoint i32* %stack_var_-20 to i32
  %v2_151a1 = call i32 @unknown_2e096(i32 %arg1, i32 %v2_15194)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_151b5

bb:                                               ; preds = %dec_label_pc_1516e
  %v1_151b3 = call i32 @function_151ba()
  br label %dec_label_pc_151b5

dec_label_pc_151b5:                               ; preds = %bb, %dec_label_pc_1516e
  %v2_151b3 = phi i32 [ %v1_151b3, %bb ], [ %arg1, %dec_label_pc_1516e ]
  ret i32 %v2_151b3

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_151ba() local_unnamed_addr {
dec_label_pc_151ba:
  %v0_151bb = load i32, i32* @eax, align 4
  ret i32 %v0_151bb
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_151be:
  %stack_var_-20 = alloca i32, align 4
  %v2_151de = load i32, i32* %arg2, align 4
  store i32 %v2_151de, i32* %stack_var_-20, align 4
  %v2_151e3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_151f0 = call i32 @unknown_2e0e6(i32 %arg1, i32 %v2_151e3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15204

bb:                                               ; preds = %dec_label_pc_151be
  %v1_15202 = call i32 @function_15209()
  br label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %bb, %dec_label_pc_151be
  %v2_15202 = phi i32 [ %v1_15202, %bb ], [ %arg1, %dec_label_pc_151be ]
  ret i32 %v2_15202

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_15209() local_unnamed_addr {
dec_label_pc_15209:
  %v0_1520a = load i32, i32* @eax, align 4
  ret i32 %v0_1520a
}

define i32 @_ZNKSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1520e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15234

bb:                                               ; preds = %dec_label_pc_1520e
  %v2_15232 = call i32 @function_15239(i32 %arg1)
  br label %dec_label_pc_15234

dec_label_pc_15234:                               ; preds = %bb, %dec_label_pc_1520e
  %v3_15232 = phi i32 [ %v2_15232, %bb ], [ %arg1, %dec_label_pc_1520e ]
  ret i32 %v3_15232
}

define i32 @function_15239(i32 %arg1) local_unnamed_addr {
dec_label_pc_15239:
  %v0_1523a = load i32, i32* @eax, align 4
  ret i32 %v0_1523a
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1523c:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_1526d = call i32 @unknown_2e1cc(i32 %tmp104, i32 %arg3)
  %v2_1527f = call i32 @unknown_2e22c(i32 %tmp104, i32 %arg2)
  store i32 %v2_1527f, i32* %arg1, align 4
  %v2_15293 = add i32 %tmp104, 4
  %v3_15293 = inttoptr i32 %v2_15293 to i32*
  store i32 %v2_1527f, i32* %v3_15293, align 4
  %v2_15299 = load i32, i32* %arg1, align 4
  %v2_152a5 = mul i32 %arg2, 20
  %v3_152a8 = add i32 %v2_15299, %v2_152a5
  %v2_152ae = add i32 %tmp104, 8
  %v3_152ae = inttoptr i32 %v2_152ae to i32*
  store i32 %v3_152a8, i32* %v3_152ae, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_152bd

bb:                                               ; preds = %dec_label_pc_1523c
  %v1_152bb = call i32 @function_152db()
  store i32 %v1_152bb, i32* @eax, align 4
  br label %dec_label_pc_152bd

dec_label_pc_152bd:                               ; preds = %bb, %dec_label_pc_1523c
  %v0_152bd = call i32 @function_152d6()
  ret i32 %v0_152bd

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
}

define i32 @function_152c0() local_unnamed_addr {
dec_label_pc_152c0:
  %eax.global-to-local = alloca i32, align 4
  %v0_152c0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_152c0
}

define i32 @function_152d6() local_unnamed_addr {
dec_label_pc_152d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_152db() local_unnamed_addr {
dec_label_pc_152db:
  %v0_152e0 = load i32, i32* @eax, align 4
  ret i32 %v0_152e0
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_152e1:
  %v7_1531e = call i32 @unknown_2e328(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1531e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1532f

bb:                                               ; preds = %dec_label_pc_152e1
  %v1_1532d = call i32 @function_15334()
  br label %dec_label_pc_1532f

dec_label_pc_1532f:                               ; preds = %bb, %dec_label_pc_152e1
  %v2_1532d = phi i32 [ %v1_1532d, %bb ], [ %v7_1531e, %dec_label_pc_152e1 ]
  ret i32 %v2_1532d

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15334() local_unnamed_addr {
dec_label_pc_15334:
  %v0_15335 = load i32, i32* @eax, align 4
  ret i32 %v0_15335
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15336:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15359

bb:                                               ; preds = %dec_label_pc_15336
  %v2_15357 = call i32 @function_1535e(i32 %arg1)
  br label %dec_label_pc_15359

dec_label_pc_15359:                               ; preds = %bb, %dec_label_pc_15336
  %v3_15357 = phi i32 [ %v2_15357, %bb ], [ 0, %dec_label_pc_15336 ]
  ret i32 %v3_15357
}

define i32 @function_1535e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1535e:
  %v0_1535f = load i32, i32* @eax, align 4
  ret i32 %v0_1535f
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15360:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15383

bb:                                               ; preds = %dec_label_pc_15360
  %v2_15381 = call i32 @function_15388(i32 %arg1)
  br label %dec_label_pc_15383

dec_label_pc_15383:                               ; preds = %bb, %dec_label_pc_15360
  %v3_15381 = phi i32 [ %v2_15381, %bb ], [ 0, %dec_label_pc_15360 ]
  ret i32 %v3_15381
}

define i32 @function_15388(i32 %arg1) local_unnamed_addr {
dec_label_pc_15388:
  %v0_15389 = load i32, i32* @eax, align 4
  ret i32 %v0_15389
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE18_M_fill_initializeEjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1538a:
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %tmp107, i32* @eax, align 4
  %v1_153b3 = call i32 @function_2a336(i32 %tmp107)
  %v2_153bb = load i32, i32* %arg1, align 4
  %v4_153d2 = call i32 @unknown_2e420(i32 %v2_153bb, i32 %arg2, i32 %arg3, i32 %v1_153b3)
  %v1_153da = add i32 %tmp107, 8
  %v2_153da = inttoptr i32 %v1_153da to i32*
  %v3_153da = load i32, i32* %v2_153da, align 4
  %v2_153e0 = add i32 %tmp107, 4
  %v3_153e0 = inttoptr i32 %v2_153e0 to i32*
  store i32 %v3_153da, i32* %v3_153e0, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_153ef

bb:                                               ; preds = %dec_label_pc_1538a
  %v1_153ed = call i32 @function_153f4()
  br label %dec_label_pc_153ef

dec_label_pc_153ef:                               ; preds = %bb, %dec_label_pc_1538a
  %v2_153ed = phi i32 [ %v1_153ed, %bb ], [ 0, %dec_label_pc_1538a ]
  ret i32 %v2_153ed

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
}

define i32 @function_153f4() local_unnamed_addr {
dec_label_pc_153f4:
  %v0_153f5 = load i32, i32* @eax, align 4
  ret i32 %v0_153f5
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_153f6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_15410 = load i32, i32* %arg1, align 4
  %v1_15412 = add i32 %v2_15410, 20
  store i32 %v1_15412, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15429

bb:                                               ; preds = %dec_label_pc_153f6
  %v2_15427 = call i32 @function_1542e(i32 %tmp100)
  br label %dec_label_pc_15429

dec_label_pc_15429:                               ; preds = %bb, %dec_label_pc_153f6
  %v3_15427 = phi i32 [ %v2_15427, %bb ], [ %tmp100, %dec_label_pc_153f6 ]
  ret i32 %v3_15427
}

define i32 @function_1542e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1542e:
  %v0_1542f = load i32, i32* @eax, align 4
  ret i32 %v0_1542f
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_15430:
  %v2_1544a = load i32, i32* %arg1, align 4
  store i32 %v2_1544a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15458

bb:                                               ; preds = %dec_label_pc_15430
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_15456 = call i32 @function_1545d(i32 %tmp100)
  br label %dec_label_pc_15458

dec_label_pc_15458:                               ; preds = %bb, %dec_label_pc_15430
  %v3_15456 = phi i32 [ %v2_15456, %bb ], [ %v2_1544a, %dec_label_pc_15430 ]
  ret i32 %v3_15456

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1545d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1545d:
  %v0_1545e = load i32, i32* @eax, align 4
  ret i32 %v0_1545e
}

define i32 @_Z16GetSerializeSizeI7uint256EjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1545f:
  %v3_15496 = call i32 @unknown_2e54b(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_15496, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_154a7

bb:                                               ; preds = %dec_label_pc_1545f
  %v1_154a5 = call i32 @function_154ac()
  br label %dec_label_pc_154a7

dec_label_pc_154a7:                               ; preds = %bb, %dec_label_pc_1545f
  %v2_154a5 = phi i32 [ %v1_154a5, %bb ], [ %v3_15496, %dec_label_pc_1545f ]
  ret i32 %v2_154a5
}

define i32 @function_154ac() local_unnamed_addr {
dec_label_pc_154ac:
  %v0_154ad = load i32, i32* @eax, align 4
  ret i32 %v0_154ad
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_154ae:
  %v1_154cb = call i32 @unknown_2e628(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_154dc

bb:                                               ; preds = %dec_label_pc_154ae
  %v1_154da = call i32 @function_154e1()
  br label %dec_label_pc_154dc

dec_label_pc_154dc:                               ; preds = %bb, %dec_label_pc_154ae
  %v2_154da = phi i32 [ %v1_154da, %bb ], [ 0, %dec_label_pc_154ae ]
  ret i32 %v2_154da
}

define i32 @function_154e1() local_unnamed_addr {
dec_label_pc_154e1:
  %v0_154e2 = load i32, i32* @eax, align 4
  ret i32 %v0_154e2
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_154e4:
  %v1_15501 = call i32 @unknown_2e60c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15512

bb:                                               ; preds = %dec_label_pc_154e4
  %v1_15510 = call i32 @function_15517()
  br label %dec_label_pc_15512

dec_label_pc_15512:                               ; preds = %bb, %dec_label_pc_154e4
  %v2_15510 = phi i32 [ %v1_15510, %bb ], [ 0, %dec_label_pc_154e4 ]
  ret i32 %v2_15510
}

define i32 @function_15517() local_unnamed_addr {
dec_label_pc_15517:
  %v0_15518 = load i32, i32* @eax, align 4
  ret i32 %v0_15518
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1551a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_15535 = add i32 %tmp101, 8
  %v2_15535 = inttoptr i32 %v1_15535 to i32*
  %v3_15535 = load i32, i32* %v2_15535, align 4
  %v2_1553d = load i32, i32* %arg1, align 4
  %v2_15541 = sub i32 %v3_15535, %v2_1553d
  %v2_15545 = sdiv i32 %v2_15541, 32
  %v3_1555d = call i32 @unknown_2e6ca(i32 %tmp101, i32 %v2_1553d, i32 %v2_15545)
  store i32 %tmp101, i32* @eax, align 4
  %v1_15568 = call i32 @function_2a9c8(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15579

bb:                                               ; preds = %dec_label_pc_1551a
  %v1_15577 = call i32 @function_15597()
  store i32 %v1_15577, i32* @eax, align 4
  br label %dec_label_pc_15579

dec_label_pc_15579:                               ; preds = %bb, %dec_label_pc_1551a
  %v0_15579 = call i32 @function_15592()
  ret i32 %v0_15579

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_1557c() local_unnamed_addr {
dec_label_pc_1557c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1557c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1557c
}

define i32 @function_1558a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1558a:
  %v3_1558a = load i32, i32* @eax, align 4
  ret i32 %v3_1558a
}

define i32 @function_15592() local_unnamed_addr {
dec_label_pc_15592:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15597() local_unnamed_addr {
dec_label_pc_15597:
  %v0_1559c = load i32, i32* @eax, align 4
  ret i32 %v0_1559c
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1559e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_155c4

bb:                                               ; preds = %dec_label_pc_1559e
  %v2_155c2 = call i32 @function_155c9(i32 %arg1)
  br label %dec_label_pc_155c4

dec_label_pc_155c4:                               ; preds = %bb, %dec_label_pc_1559e
  %v3_155c2 = phi i32 [ %v2_155c2, %bb ], [ %arg1, %dec_label_pc_1559e ]
  ret i32 %v3_155c2
}

define i32 @function_155c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_155c9:
  %v0_155ca = load i32, i32* @eax, align 4
  ret i32 %v0_155ca
}

define i32 @_ZSt8_DestroyIP12CTransactionS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_155cb:
  %v2_155fb = call i32 @unknown_2e7d0(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1560c

bb:                                               ; preds = %dec_label_pc_155cb
  %v1_1560a = call i32 @function_15611()
  br label %dec_label_pc_1560c

dec_label_pc_1560c:                               ; preds = %bb, %dec_label_pc_155cb
  %v2_1560a = phi i32 [ %v1_1560a, %bb ], [ 0, %dec_label_pc_155cb ]
  ret i32 %v2_1560a
}

define i32 @function_15611() local_unnamed_addr {
dec_label_pc_15611:
  %v0_15612 = load i32, i32* @eax, align 4
  ret i32 %v0_15612
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15614:
  %v1_15631 = call i32 @unknown_2e8ae(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15642

bb:                                               ; preds = %dec_label_pc_15614
  %v1_15640 = call i32 @function_15647()
  br label %dec_label_pc_15642

dec_label_pc_15642:                               ; preds = %bb, %dec_label_pc_15614
  %v2_15640 = phi i32 [ %v1_15640, %bb ], [ 0, %dec_label_pc_15614 ]
  ret i32 %v2_15640
}

define i32 @function_15647() local_unnamed_addr {
dec_label_pc_15647:
  %v0_15648 = load i32, i32* @eax, align 4
  ret i32 %v0_15648
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1564a:
  %v1_15667 = call i32 @unknown_2e892(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15678

bb:                                               ; preds = %dec_label_pc_1564a
  %v1_15676 = call i32 @function_1567d()
  br label %dec_label_pc_15678

dec_label_pc_15678:                               ; preds = %bb, %dec_label_pc_1564a
  %v2_15676 = phi i32 [ %v1_15676, %bb ], [ 0, %dec_label_pc_1564a ]
  ret i32 %v2_15676
}

define i32 @function_1567d() local_unnamed_addr {
dec_label_pc_1567d:
  %v0_1567e = load i32, i32* @eax, align 4
  ret i32 %v0_1567e
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15680:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1569b = add i32 %tmp101, 8
  %v2_1569b = inttoptr i32 %v1_1569b to i32*
  %v3_1569b = load i32, i32* %v2_1569b, align 4
  %v2_156a3 = load i32, i32* %arg1, align 4
  %v2_156a7 = sub i32 %v3_1569b, %v2_156a3
  store i32 %v2_156a7, i32* @ecx, align 4
  %v2_156ab = sdiv i32 %v2_156a7, 32
  %v2_156b3 = load i32, i32* %arg1, align 4
  %v3_156ce = call x86_fp80 @function_2ac94(i32 %tmp101, i32 %v2_156b3, i32 %v2_156ab)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_156df

bb:                                               ; preds = %dec_label_pc_15680
  %v1_156dd = call i32 @function_156fd()
  store i32 %v1_156dd, i32* @eax, align 4
  br label %dec_label_pc_156df

dec_label_pc_156df:                               ; preds = %bb, %dec_label_pc_15680
  %v0_156df = call i32 @function_156f8()
  ret i32 %v0_156df

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_156e2() local_unnamed_addr {
dec_label_pc_156e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_156e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_156e2
}

define i32 @function_156f8() local_unnamed_addr {
dec_label_pc_156f8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_156fd() local_unnamed_addr {
dec_label_pc_156fd:
  %v0_15702 = load i32, i32* @eax, align 4
  ret i32 %v0_15702
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15704:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1572a

bb:                                               ; preds = %dec_label_pc_15704
  %v2_15728 = call i32 @function_1572f(i32 %arg1)
  br label %dec_label_pc_1572a

dec_label_pc_1572a:                               ; preds = %bb, %dec_label_pc_15704
  %v3_15728 = phi i32 [ %v2_15728, %bb ], [ %arg1, %dec_label_pc_15704 ]
  ret i32 %v3_15728
}

define i32 @function_1572f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1572f:
  %v0_15730 = load i32, i32* @eax, align 4
  ret i32 %v0_15730
}

define i32 @_ZSt8_DestroyIP7uint256S0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15731:
  %v2_15761 = call i32 @unknown_2ea00(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15772

bb:                                               ; preds = %dec_label_pc_15731
  %v1_15770 = call i32 @function_15777()
  br label %dec_label_pc_15772

dec_label_pc_15772:                               ; preds = %bb, %dec_label_pc_15731
  %v2_15770 = phi i32 [ %v1_15770, %bb ], [ 0, %dec_label_pc_15731 ]
  ret i32 %v2_15770
}

define i32 @function_15777() local_unnamed_addr {
dec_label_pc_15777:
  %v0_15778 = load i32, i32* @eax, align 4
  ret i32 %v0_15778
}

define i32 @_Z16GetSerializeSizeI12CBlockHeaderEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15779:
  store i32 %arg1, i32* @eax, align 4
  %v3_157b0 = call i32 @function_24793(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_157b0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_157c1

bb:                                               ; preds = %dec_label_pc_15779
  %v1_157bf = call i32 @function_157c6()
  br label %dec_label_pc_157c1

dec_label_pc_157c1:                               ; preds = %bb, %dec_label_pc_15779
  %v2_157bf = phi i32 [ %v1_157bf, %bb ], [ %v3_157b0, %dec_label_pc_15779 ]
  ret i32 %v2_157bf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_157c6() local_unnamed_addr {
dec_label_pc_157c6:
  %v0_157c7 = load i32, i32* @eax, align 4
  ret i32 %v0_157c7
}

define i32 @_Z16GetSerializeSizeI12CTransactionSaIS0_EEjRKSt6vectorIT_T0_Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_157c8:
  %stack_var_-17 = alloca i32, align 4
  %v2_157eb = ptrtoint i32* %stack_var_-17 to i32
  %v7_15806 = call i32 @unknown_2ead9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v2_157eb, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_15806, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15817

bb:                                               ; preds = %dec_label_pc_157c8
  %v1_15815 = call i32 @function_1581c()
  br label %dec_label_pc_15817

dec_label_pc_15817:                               ; preds = %bb, %dec_label_pc_157c8
  %v2_15815 = phi i32 [ %v1_15815, %bb ], [ %v7_15806, %dec_label_pc_157c8 ]
  ret i32 %v2_15815

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1581c() local_unnamed_addr {
dec_label_pc_1581c:
  %v0_1581d = load i32, i32* @eax, align 4
  ret i32 %v0_1581d
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1581e:
  store i32 %arg1, i32* @eax, align 4
  %v1_15841 = call i32 @function_2adbc(i32 %arg1)
  %v1_15849 = add i32 %arg1, 4
  %v2_15849 = inttoptr i32 %v1_15849 to i32*
  %v3_15849 = load i32, i32* %v2_15849, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_1585a = call i32 @function_2ade9(i32 %arg2, i32 %v3_15849, i32 %v1_15841)
  store i32 %arg2, i32* %v2_15849, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15874

bb:                                               ; preds = %dec_label_pc_1581e
  %v1_15872 = call i32 @function_15879()
  br label %dec_label_pc_15874

dec_label_pc_15874:                               ; preds = %bb, %dec_label_pc_1581e
  %v2_15872 = phi i32 [ %v1_15872, %bb ], [ 0, %dec_label_pc_1581e ]
  ret i32 %v2_15872

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_15879() local_unnamed_addr {
dec_label_pc_15879:
  %v0_1587a = load i32, i32* @eax, align 4
  ret i32 %v0_1587a
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1587c:
  %v1_1589f = call i32 @function_2af80(i32 %arg1)
  %v1_158a7 = add i32 %arg1, 4
  %v2_158a7 = inttoptr i32 %v1_158a7 to i32*
  %v3_158a7 = load i32, i32* %v2_158a7, align 4
  %v3_158b8 = call i32 @__stack_chk_fail.1094(i32 %arg2, i32 %v3_158a7, i32 %v1_1589f)
  store i32 %arg2, i32* %v2_158a7, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_158d2

bb:                                               ; preds = %dec_label_pc_1587c
  %v1_158d0 = call i32 @function_158d7()
  br label %dec_label_pc_158d2

dec_label_pc_158d2:                               ; preds = %bb, %dec_label_pc_1587c
  %v2_158d0 = phi i32 [ %v1_158d0, %bb ], [ 0, %dec_label_pc_1587c ]
  ret i32 %v2_158d0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_158d7() local_unnamed_addr {
dec_label_pc_158d7:
  %v0_158d8 = load i32, i32* @eax, align 4
  ret i32 %v0_158d8
}

define i32 @_ZNKSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_158da:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15900

bb:                                               ; preds = %dec_label_pc_158da
  %v2_158fe = call i32 @function_15905(i32 %arg1)
  br label %dec_label_pc_15900

dec_label_pc_15900:                               ; preds = %bb, %dec_label_pc_158da
  %v3_158fe = phi i32 [ %v2_158fe, %bb ], [ %arg1, %dec_label_pc_158da ]
  ret i32 %v3_158fe
}

define i32 @function_15905(i32 %arg1) local_unnamed_addr {
dec_label_pc_15905:
  %v0_15906 = load i32, i32* @eax, align 4
  ret i32 %v0_15906
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15908:
  %tmp111 = ptrtoint i32* %arg1 to i32
  %v3_15939 = call i32 @unknown_2ece8(i32 %tmp111, i32 %arg3)
  %v3_1594b = call i32 @unknown_2ed48(i32 %tmp111, i32 %arg2)
  store i32 %v3_1594b, i32* %arg1, align 4
  %v2_1595f = add i32 %tmp111, 4
  %v3_1595f = inttoptr i32 %v2_1595f to i32*
  store i32 %v3_1594b, i32* %v3_1595f, align 4
  %v2_15965 = load i32, i32* %arg1, align 4
  %v3_1596a = mul i32 %arg2, ptrtoint (i32* @global_var_34.1820 to i32)
  %v2_1596d = add i32 %v2_15965, %v3_1596a
  %v2_15972 = add i32 %tmp111, 8
  %v3_15972 = inttoptr i32 %v2_15972 to i32*
  store i32 %v2_1596d, i32* %v3_15972, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15981

bb:                                               ; preds = %dec_label_pc_15908
  %v1_1597f = call i32 @function_1599f()
  store i32 %v1_1597f, i32* @eax, align 4
  br label %dec_label_pc_15981

dec_label_pc_15981:                               ; preds = %bb, %dec_label_pc_15908
  %v0_15981 = call i32 @function_1599a()
  ret i32 %v0_15981

; uselistorder directives
  uselistorder i32 %tmp111, { 3, 2, 1, 0 }
}

define i32 @function_15984() local_unnamed_addr {
dec_label_pc_15984:
  %eax.global-to-local = alloca i32, align 4
  %v0_15984 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15984
}

define i32 @function_1599a() local_unnamed_addr {
dec_label_pc_1599a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1599f() local_unnamed_addr {
dec_label_pc_1599f:
  %v0_159a4 = load i32, i32* @eax, align 4
  ret i32 %v0_159a4
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_159a5:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v7_159e2 = call i32 @unknown_2ee3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_159e2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_159f3

bb:                                               ; preds = %dec_label_pc_159a5
  %v1_159f1 = load i32, i32* %stack_var_-60, align 4
  %v2_159f1 = call i32 @function_159f8(i32 %v1_159f1)
  br label %dec_label_pc_159f3

dec_label_pc_159f3:                               ; preds = %bb, %dec_label_pc_159a5
  %v3_159f1 = phi i32 [ %v2_159f1, %bb ], [ %v7_159e2, %dec_label_pc_159a5 ]
  ret i32 %v3_159f1

; uselistorder directives
  uselistorder i32 (i32)* @function_159f8, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_159f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_159f8:
  %v0_159f9 = load i32, i32* @eax, align 4
  ret i32 %v0_159f9
}

define i32 @_Z16GetSerializeSizeI12CTransactionEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_159fa:
  store i32 %arg1, i32* @eax, align 4
  %v3_15a31 = call i32 @function_24726(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_15a31, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15a42

bb:                                               ; preds = %dec_label_pc_159fa
  %v1_15a40 = call i32 @function_15a47()
  br label %dec_label_pc_15a42

dec_label_pc_15a42:                               ; preds = %bb, %dec_label_pc_159fa
  %v2_15a40 = phi i32 [ %v1_15a40, %bb ], [ %v3_15a31, %dec_label_pc_159fa ]
  ret i32 %v2_15a40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15a47() local_unnamed_addr {
dec_label_pc_15a47:
  %v0_15a48 = load i32, i32* @eax, align 4
  ret i32 %v0_15a48
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15a4a:
  %v10_15a6d = icmp eq i32 %arg2, 0
  br i1 %v10_15a6d, label %dec_label_pc_15a8c, label %dec_label_pc_15a73

dec_label_pc_15a73:                               ; preds = %dec_label_pc_15a4a
  %v3_15a87 = call i32 @unknown_2ef30(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_15a8c

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a73, %dec_label_pc_15a4a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15a98

bb:                                               ; preds = %dec_label_pc_15a8c
  %v1_15a96 = call i32 @function_15a9d()
  br label %dec_label_pc_15a98

dec_label_pc_15a98:                               ; preds = %bb, %dec_label_pc_15a8c
  %v2_15a96 = phi i32 [ %v1_15a96, %bb ], [ 0, %dec_label_pc_15a8c ]
  ret i32 %v2_15a96
}

define i32 @function_15a9d() local_unnamed_addr {
dec_label_pc_15a9d:
  %v0_15a9e = load i32, i32* @eax, align 4
  ret i32 %v0_15a9e
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15aa0:
  %v2_15aca = call i32 @unknown_2efc8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15ade

bb:                                               ; preds = %dec_label_pc_15aa0
  %v1_15adc = call i32 @function_15ae3()
  br label %dec_label_pc_15ade

dec_label_pc_15ade:                               ; preds = %bb, %dec_label_pc_15aa0
  %v2_15adc = phi i32 [ %v1_15adc, %bb ], [ %arg1, %dec_label_pc_15aa0 ]
  ret i32 %v2_15adc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_15ae3() local_unnamed_addr {
dec_label_pc_15ae3:
  %v0_15ae4 = load i32, i32* @eax, align 4
  ret i32 %v0_15ae4
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15ae8:
  %v1_15b08 = add i32 %arg2, 4
  %v2_15b15 = call i32 @unknown_2f010(i32 %arg1, i32 %v1_15b08)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15b29

bb:                                               ; preds = %dec_label_pc_15ae8
  %v1_15b27 = call i32 @function_15b2e()
  br label %dec_label_pc_15b29

dec_label_pc_15b29:                               ; preds = %bb, %dec_label_pc_15ae8
  %v2_15b27 = phi i32 [ %v1_15b27, %bb ], [ %arg1, %dec_label_pc_15ae8 ]
  ret i32 %v2_15b27

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_15b2e() local_unnamed_addr {
dec_label_pc_15b2e:
  %v0_15b2f = load i32, i32* @eax, align 4
  ret i32 %v0_15b2f
}

define i32 @_ZNKSt4lessI7uint256EclERKS0_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15b32:
  store i32 %arg2, i32* @eax, align 4
  %v2_15b62 = call i32 @function_19fa5(i32 %arg2, i32 %arg3)
  store i32 %v2_15b62, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15b73

bb:                                               ; preds = %dec_label_pc_15b32
  %v1_15b71 = call i32 @function_15b78()
  br label %dec_label_pc_15b73

dec_label_pc_15b73:                               ; preds = %bb, %dec_label_pc_15b32
  %v2_15b71 = phi i32 [ %v1_15b71, %bb ], [ %v2_15b62, %dec_label_pc_15b32 ]
  ret i32 %v2_15b71

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15b78() local_unnamed_addr {
dec_label_pc_15b78:
  %v0_15b79 = load i32, i32* @eax, align 4
  ret i32 %v0_15b79
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b7a:
  %v1_15b97 = call i32 @unknown_2f12e(i32 %arg1)
  ret i32 %v1_15b97
}

define i32 @function_15b9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15b9e:
  %v0_15b9f = load i32, i32* @eax, align 4
  %v1_15b9f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15b9f = xor i32 %v1_15b9f, %v0_15b9f
  %v3_15b9f = icmp eq i32 %v2_15b9f, 0
  store i32 %v2_15b9f, i32* @eax, align 4
  br i1 %v3_15b9f, label %bb, label %dec_label_pc_15ba8

bb:                                               ; preds = %dec_label_pc_15b9e
  %v1_15ba6 = call i32 @function_15bad()
  br label %dec_label_pc_15ba8

dec_label_pc_15ba8:                               ; preds = %bb, %dec_label_pc_15b9e
  %v2_15ba6 = phi i32 [ %v1_15ba6, %bb ], [ %v2_15b9f, %dec_label_pc_15b9e ]
  ret i32 %v2_15ba6
}

define i32 @function_15bad() local_unnamed_addr {
dec_label_pc_15bad:
  %v0_15bae = load i32, i32* @eax, align 4
  ret i32 %v0_15bae
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bb0:
  %v0_15bbc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_15bcd = call i32 @unknown_2f112(i32 %arg1)
  ret i32 %v0_15bbc
}

define i32 @function_15bd6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15bd6:
  %v0_15bd6 = load i32, i32* @eax, align 4
  %v1_15bd6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15bd6 = xor i32 %v1_15bd6, %v0_15bd6
  %v3_15bd6 = icmp eq i32 %v2_15bd6, 0
  store i32 %v2_15bd6, i32* @eax, align 4
  br i1 %v3_15bd6, label %bb, label %dec_label_pc_15bde

bb:                                               ; preds = %dec_label_pc_15bd6
  %v1_15bdc = call i32 @function_15be3()
  br label %dec_label_pc_15bde

dec_label_pc_15bde:                               ; preds = %bb, %dec_label_pc_15bd6
  %v2_15bdc = phi i32 [ %v1_15bdc, %bb ], [ %v2_15bd6, %dec_label_pc_15bd6 ]
  ret i32 %v2_15bdc
}

define i32 @function_15be3() local_unnamed_addr {
dec_label_pc_15be3:
  %v0_15be4 = load i32, i32* @eax, align 4
  ret i32 %v0_15be4
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15be6:
  %v2_15c09 = load i32, i32* %arg1, align 4
  ret i32 %v2_15c09
}

define i32 @function_15c0e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15c0e:
  %v0_15c0e = load i32, i32* @ecx, align 4
  %v1_15c0e = add i32 %v0_15c0e, 66634184
  %v2_15c0e = inttoptr i32 %v1_15c0e to i32*
  %v3_15c0e = load i32, i32* %v2_15c0e, align 4
  %v4_15c0e = udiv i32 %v3_15c0e, 512
  %v5_15c0e = mul i32 %v3_15c0e, 8388608
  %v6_15c0e = or i32 %v4_15c0e, %v5_15c0e
  store i32 %v6_15c0e, i32* %v2_15c0e, align 4
  %v0_15c15 = load i32, i32* @ebx, align 4
  %v1_15c15 = add i32 %v0_15c15, -1985303894
  %v2_15c15 = inttoptr i32 %v1_15c15 to i8*
  %v3_15c15 = load i8, i8* %v2_15c15, align 1
  %v5_15c15 = udiv i8 %v3_15c15, 4
  store i8 %v5_15c15, i8* %v2_15c15, align 1
  %v0_15c1c = load i32, i32* @ebp, align 4
  %v1_15c1c = add i32 %v0_15c1c, -28
  %v2_15c1c = inttoptr i32 %v1_15c1c to i32*
  %v3_15c1c = load i32, i32* %v2_15c1c, align 4
  %v1_15c1f = inttoptr i32 %v3_15c1c to i32*
  %v2_15c1f = load i32, i32* %v1_15c1f, align 4
  %v0_15c21 = load i32, i32* @edx, align 8
  %v3_15c2f = call i32 @unknown_2f1d0(i32 %v3_15c1c, i32 %v2_15c1f, i32 %v0_15c21)
  %v0_15c34 = load i32, i32* @ebp, align 4
  %v1_15c34 = add i32 %v0_15c34, -28
  %v2_15c34 = inttoptr i32 %v1_15c34 to i32*
  %v3_15c34 = load i32, i32* %v2_15c34, align 4
  store i32 %v3_15c34, i32* @eax, align 4
  %v1_15c3a = call i32 @function_2b760(i32 %v3_15c34)
  %v0_15c3f = load i32, i32* @ebp, align 4
  %v1_15c3f = add i32 %v0_15c3f, -12
  %v2_15c3f = inttoptr i32 %v1_15c3f to i32*
  %v3_15c3f = load i32, i32* %v2_15c3f, align 4
  %v1_15c42 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15c42 = xor i32 %v1_15c42, %v3_15c3f
  %v3_15c42 = icmp eq i32 %v2_15c42, 0
  store i32 %v2_15c42, i32* @eax, align 4
  br i1 %v3_15c42, label %bb, label %dec_label_pc_15c4b

bb:                                               ; preds = %dec_label_pc_15c0e
  %v1_15c49 = call i32 @function_15c69()
  store i32 %v1_15c49, i32* @eax, align 4
  br label %dec_label_pc_15c4b

dec_label_pc_15c4b:                               ; preds = %bb, %dec_label_pc_15c0e
  %v0_15c4b = call i32 @function_15c64()
  ret i32 %v0_15c4b
}

define i32 @function_15c4e() local_unnamed_addr {
dec_label_pc_15c4e:
  %eax.global-to-local = alloca i32, align 4
  %v0_15c4e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15c4e
}

define i32 @function_15c64() local_unnamed_addr {
dec_label_pc_15c64:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15c69() local_unnamed_addr {
dec_label_pc_15c69:
  %v0_15c6e = load i32, i32* @eax, align 4
  ret i32 %v0_15c6e
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c70:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15c96

bb:                                               ; preds = %dec_label_pc_15c70
  %v2_15c94 = call i32 @function_15c9b(i32 %arg1)
  br label %dec_label_pc_15c96

dec_label_pc_15c96:                               ; preds = %bb, %dec_label_pc_15c70
  %v3_15c94 = phi i32 [ %v2_15c94, %bb ], [ %arg1, %dec_label_pc_15c70 ]
  ret i32 %v3_15c94
}

define i32 @function_15c9b(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c9b:
  %v0_15c9c = load i32, i32* @eax, align 4
  ret i32 %v0_15c9c
}

define i32 @_ZSt8_DestroyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES4_EvT_S6_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c9d:
  %v2_15ccd = call i32 @unknown_2f2dc(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15cde

bb:                                               ; preds = %dec_label_pc_15c9d
  %v1_15cdc = call i32 @function_15ce3()
  br label %dec_label_pc_15cde

dec_label_pc_15cde:                               ; preds = %bb, %dec_label_pc_15c9d
  %v2_15cdc = phi i32 [ %v1_15cdc, %bb ], [ 0, %dec_label_pc_15c9d ]
  ret i32 %v2_15cdc
}

define i32 @function_15ce3() local_unnamed_addr {
dec_label_pc_15ce3:
  %v0_15ce4 = load i32, i32* @eax, align 4
  ret i32 %v0_15ce4
}

define i32 @_ZNSsC1IPcEET_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15ce6:
  %v7_15d23 = call i32 @unknown_2f367(i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15d50() local_unnamed_addr {
dec_label_pc_15d50:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15d50 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15d50 = add i32 %v0_15d50, -1
  store i32 %v1_15d50, i32* %ecx.global-to-local, align 4
  %v0_15d52 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15d52
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ISsEERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15d54:
  %ebx.global-to-local = alloca i32, align 4
  %v1_15d75 = add i32 %arg1, 4
  store i32 %v1_15d75, i32* @eax, align 4
  %v1_15d7b = call i32 @function_2a380(i32 %v1_15d75)
  %v0_15d80 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_15d80, 16777216
  %v4_15d99 = sdiv i32 %sext, 16777216
  %v5_15d99 = call i32 @unknown_2f428(i32 %arg1, i32 %arg2, i32 1, i32 %v4_15d99)
  %v0_15d9e = call i32 @function_15dba()
  ret i32 %v0_15d9e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15da1() local_unnamed_addr {
dec_label_pc_15da1:
  %eax.global-to-local = alloca i32, align 4
  %v0_15da1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15da1
}

define i32 @function_15dba() local_unnamed_addr {
dec_label_pc_15dba:
  %v0_15dba = load i32, i32* @ebp, align 4
  %v1_15dba = add i32 %v0_15dba, -12
  %v2_15dba = inttoptr i32 %v1_15dba to i32*
  %v3_15dba = load i32, i32* %v2_15dba, align 4
  %v1_15dbd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15dbd = xor i32 %v1_15dbd, %v3_15dba
  %v3_15dbd = icmp eq i32 %v2_15dbd, 0
  store i32 %v2_15dbd, i32* @eax, align 4
  br i1 %v3_15dbd, label %bb, label %dec_label_pc_15dc6

bb:                                               ; preds = %dec_label_pc_15dba
  %v1_15dc4 = call i32 @function_15dcb()
  br label %dec_label_pc_15dc6

dec_label_pc_15dc6:                               ; preds = %bb, %dec_label_pc_15dba
  %v2_15dc4 = phi i32 [ %v1_15dc4, %bb ], [ %v2_15dbd, %dec_label_pc_15dba ]
  ret i32 %v2_15dc4
}

define i32 @function_15dcb() local_unnamed_addr {
dec_label_pc_15dcb:
  %v0_15dd0 = load i32, i32* @eax, align 4
  ret i32 %v0_15dd0
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E15destroy_contentEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15dd2:
  %stack_var_-17 = alloca i32, align 4
  %v2_15dea = ptrtoint i32* %stack_var_-17 to i32
  %v1_15df0 = call i32 @function_2a368(i32 %v2_15dea)
  %v2_15e02 = call i32 @unknown_2f510(i32 %arg1, i32 %v2_15dea)
  store i32 %v2_15dea, i32* @eax, align 4
  %v1_15e0d = call i32 @function_2a39e(i32 %v2_15dea)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15e1e

bb:                                               ; preds = %dec_label_pc_15dd2
  %v1_15e1c = call i32 @function_15e3c()
  store i32 %v1_15e1c, i32* @eax, align 4
  br label %dec_label_pc_15e1e

dec_label_pc_15e1e:                               ; preds = %bb, %dec_label_pc_15dd2
  %v0_15e1e = call i32 @function_15e37()
  ret i32 %v0_15e1e
}

define i32 @function_15e21() local_unnamed_addr {
dec_label_pc_15e21:
  %eax.global-to-local = alloca i32, align 4
  %v0_15e21 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15e21
}

define i32 @function_15e37() local_unnamed_addr {
dec_label_pc_15e37:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15e3c() local_unnamed_addr {
dec_label_pc_15e3c:
  %v0_15e41 = load i32, i32* @eax, align 4
  ret i32 %v0_15e41
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15e42:
  ret i32 %arg1
}

define i32 @function_15e71() local_unnamed_addr {
dec_label_pc_15e71:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15e71 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15e71 = add i32 %v0_15e71, 1351475269
  %v2_15e71 = inttoptr i32 %v1_15e71 to i32*
  %v3_15e71 = load i32, i32* %v2_15e71, align 4
  %v4_15e71 = add i32 %v3_15e71, -1
  store i32 %v4_15e71, i32* %v2_15e71, align 4
  %v0_15e77 = load i32, i32* %eax.global-to-local, align 4
  %v2_15e77 = add i32 %v0_15e77, 3
  %v0_15e79 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15e79 = add i32 %v0_15e79, 1
  store i32 %v1_15e79, i32* @ebp, align 4
  %v2_15e80 = and i32 %v2_15e77, 4
  %v10_15e80 = and i32 %v0_15e77, -256
  %v11_15e80 = or i32 %v2_15e80, %v10_15e80
  store i32 %v11_15e80, i32* @eax, align 4
  %v1_15e85 = call i32 @function_28f50(i32 %v11_15e80)
  store i32 %v1_15e85, i32* %eax.global-to-local, align 4
  %v0_15e8a = call i32 @function_15ea3()
  store i32 %v0_15e8a, i32* %eax.global-to-local, align 4
  ret i32 %v0_15e8a

; uselistorder directives
  uselistorder i32 %v0_15e77, { 1, 0 }
}

define i32 @function_15e8d() local_unnamed_addr {
dec_label_pc_15e8d:
  %eax.global-to-local = alloca i32, align 4
  %v0_15e8d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15e8d
}

define i32 @function_15e96(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e96:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15ea3() local_unnamed_addr {
dec_label_pc_15ea3:
  %v0_15ea3 = load i32, i32* @ebp, align 4
  %v1_15ea3 = add i32 %v0_15ea3, -12
  %v2_15ea3 = inttoptr i32 %v1_15ea3 to i32*
  %v3_15ea3 = load i32, i32* %v2_15ea3, align 4
  %v1_15ea6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15ea6 = xor i32 %v1_15ea6, %v3_15ea3
  %v3_15ea6 = icmp eq i32 %v2_15ea6, 0
  store i32 %v2_15ea6, i32* @eax, align 4
  br i1 %v3_15ea6, label %bb, label %dec_label_pc_15eaf

bb:                                               ; preds = %dec_label_pc_15ea3
  %v1_15ead = call i32 @function_15eb4()
  br label %dec_label_pc_15eaf

dec_label_pc_15eaf:                               ; preds = %bb, %dec_label_pc_15ea3
  %v2_15ead = phi i32 [ %v1_15ead, %bb ], [ %v2_15ea6, %dec_label_pc_15ea3 ]
  ret i32 %v2_15ead
}

define i32 @function_15eb4() local_unnamed_addr {
dec_label_pc_15eb4:
  %v0_15eb9 = load i32, i32* @eax, align 4
  ret i32 %v0_15eb9
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE9constructEPS5_RKS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15eba:
  ret i32 %arg1
}

define i32 @function_15eca(i32 %arg1) local_unnamed_addr {
dec_label_pc_15eca:
  %v0_15eca = load i32, i32* @ebp, align 4
  %v1_15ecd = add i32 %v0_15eca, 2
  store i32 %v1_15ecd, i32* @ebp, align 4
  %v0_15ece = load i32, i32* @ebx, align 4
  %v1_15ece = add i32 %v0_15ece, 1166610501
  %v2_15ece = inttoptr i32 %v1_15ece to i8*
  %v3_15ece = load i8, i8* %v2_15ece, align 1
  %v4_15ece = udiv i8 %v3_15ece, 2
  %v5_15ece = shl i8 %v3_15ece, 7
  %v6_15ece = or i8 %v4_15ece, %v5_15ece
  store i8 %v6_15ece, i8* %v2_15ece, align 1
  %v0_15ed5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_15edb = load i32, i32* @ebp, align 4
  %v2_15edb = add i32 %v1_15edb, -28
  %v3_15edb = inttoptr i32 %v2_15edb to i32*
  store i32 %v0_15ed5, i32* %v3_15edb, align 4
  store i32 0, i32* @eax, align 4
  %v0_15ee0 = load i32, i32* @ebp, align 4
  %v1_15ee0 = add i32 %v0_15ee0, -48
  %v2_15ee0 = inttoptr i32 %v1_15ee0 to i32*
  %v3_15ee0 = load i32, i32* %v2_15ee0, align 4
  %v2_15eee = call i32 @function_1a100(i32 24, i32 %v3_15ee0)
  store i32 %v2_15eee, i32* @ebx, align 4
  %v1_15ef5 = icmp eq i32 %v2_15eee, 0
  br i1 %v1_15ef5, label %bb, label %dec_label_pc_15ef9

bb:                                               ; preds = %dec_label_pc_15eca
  %v1_15ef7 = call i32 @function_15f22()
  br label %dec_label_pc_15ef9

dec_label_pc_15ef9:                               ; preds = %bb, %dec_label_pc_15eca
  %v0_15ef9 = load i32, i32* @ebp, align 4
  %v1_15ef9 = add i32 %v0_15ef9, -52
  %v2_15ef9 = inttoptr i32 %v1_15ef9 to i32*
  %v3_15ef9 = load i32, i32* %v2_15ef9, align 4
  ret i32 %v3_15ef9

; uselistorder directives
  uselistorder i8 %v3_15ece, { 1, 0 }
}

define i32 @function_15f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f00:
  %v0_15f00 = load i32, i32* @ebx, align 4
  %v1_15f03 = call i32 @function_2bcfc(i32 %v0_15f00)
  %v0_15f08 = call i32 @function_15f22()
  ret i32 %v0_15f08

; uselistorder directives
  uselistorder i32 ()* @function_15f22, { 1, 0 }
}

define i32 @function_15f22() local_unnamed_addr {
dec_label_pc_15f22:
  %v0_15f22 = load i32, i32* @ebp, align 4
  %v1_15f22 = add i32 %v0_15f22, -28
  %v2_15f22 = inttoptr i32 %v1_15f22 to i32*
  %v3_15f22 = load i32, i32* %v2_15f22, align 4
  %v1_15f25 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15f25 = xor i32 %v1_15f25, %v3_15f22
  %v3_15f25 = icmp eq i32 %v2_15f25, 0
  store i32 %v2_15f25, i32* @eax, align 4
  br i1 %v3_15f25, label %bb, label %dec_label_pc_15f2e

bb:                                               ; preds = %dec_label_pc_15f22
  %v1_15f2c = call i32 @function_15f33()
  br label %dec_label_pc_15f2e

dec_label_pc_15f2e:                               ; preds = %bb, %dec_label_pc_15f22
  %v2_15f2c = phi i32 [ %v1_15f2c, %bb ], [ %v2_15f25, %dec_label_pc_15f22 ]
  ret i32 %v2_15f2c
}

define i32 @function_15f30(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15f30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15f33() local_unnamed_addr {
dec_label_pc_15f33:
  %v0_15f3a = load i32, i32* @eax, align 4
  ret i32 %v0_15f3a
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS4_S6_EERKS4_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15f3c:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-68, align 4
  %v1_15f64 = add i32 %tmp113, 4
  %v2_15f64 = inttoptr i32 %v1_15f64 to i32*
  %v3_15f64 = load i32, i32* %v2_15f64, align 4
  %v1_15f6a = add i32 %tmp113, 8
  %v2_15f6a = inttoptr i32 %v1_15f6a to i32*
  %v3_15f6a = load i32, i32* %v2_15f6a, align 4
  %v12_15f6d = icmp eq i32 %v3_15f64, %v3_15f6a
  br i1 %v12_15f6d, label %dec_label_pc_16011, label %dec_label_pc_15f75

dec_label_pc_15f75:                               ; preds = %dec_label_pc_15f3c
  %v3_15f78 = load i32, i32* %v2_15f64, align 4
  %v1_15f7b = add i32 %v3_15f78, -24
  %v4_15f92 = call i32 @unknown_2bdf6(i32 %tmp113, i32 %v3_15f78, i32 %v1_15f7b)
  %v3_15f9a = load i32, i32* %v2_15f64, align 4
  %v1_15f9d = add i32 %v3_15f9a, 24
  store i32 %v1_15f9d, i32* %v2_15f64, align 4
  %v2_15fad = ptrtoint i32* %stack_var_-40 to i32
  %v2_15fb3 = call i32 @unknown_2bd7e(i32 %v2_15fad, i32 %arg3)
  %v3_15fbb = load i32, i32* %v2_15f64, align 4
  %v1_15fbe = add i32 %v3_15fbb, -24
  store i32 %v1_15fbe, i32* %esi.global-to-local, align 4
  %v3_15fc4 = load i32, i32* %v2_15f64, align 4
  %v1_15fc7 = add i32 %v3_15fc4, -48
  %v2_15fca = ptrtoint i32* %stack_var_-68 to i32
  %v1_15fd0 = call i32 @unknown_2f6e8(i32 %v2_15fca)
  %v1_15fd5 = inttoptr i32 %v1_15fd0 to i32*
  %v2_15fd5 = load i32, i32* %v1_15fd5, align 4
  %v0_15fd7 = load i32, i32* %esi.global-to-local, align 4
  %v4_15fe2 = call i32 @unknown_2f715(i32 %v2_15fd5, i32 %v1_15fc7, i32 %v0_15fd7)
  %v1_15fed = call i32 @unknown_2f77c(i32 %v2_15fca)
  %v2_15ffc = call i32 @unknown_2c18e(i32 %v1_15fed, i32 %v2_15fad)
  store i32 %v2_15fad, i32* @eax, align 4
  %v1_16007 = call i32 @function_2626c(i32 %v2_15fad)
  %v0_1600c = call i32 @function_16239()
  ret i32 %v0_1600c

dec_label_pc_16011:                               ; preds = %dec_label_pc_15f3c
  %v4_16027 = call i32 @unknown_2f85e(i32 %tmp113, i32 1, i32 ptrtoint ([22 x i8]* @global_var_610b.1838 to i32))
  %v2_1602f = ptrtoint i32* %stack_var_-60 to i32
  %v2_1603c = call i32 @unknown_2f930(i32 %v2_1602f, i32 %tmp113)
  %v2_1604b = ptrtoint i32* %stack_var_-68 to i32
  %v2_16051 = call i32 @unknown_2f977(i32 %v2_1604b, i32 %v2_1602f)
  %v2_16066 = call i32 @unknown_2f9d8(i32 %tmp113, i32 %v4_16027)
  %v2_1607d = mul i32 %v2_16051, 24
  %v5_16082 = add i32 %v2_16066, %v2_1607d
  %v3_16096 = call i32 @unknown_2bdf6(i32 %tmp113, i32 %v5_16082, i32 %arg3)
  store i32 %tmp113, i32* @eax, align 4
  %v1_160a8 = call i32 @function_2bbac(i32 %tmp113)
  %v1_160b5 = call i32 @unknown_2f6e8(i32 %v2_1604b)
  %v1_160ba = inttoptr i32 %v1_160b5 to i32*
  %v2_160ba = load i32, i32* %v1_160ba, align 4
  %v2_160bf = load i32, i32* %arg1, align 4
  %v5_160d3 = call i32 @unknown_2fa2f(i32 %v2_160bf, i32 %v2_160ba, i32 %v2_16066, i32 %v1_160a8)
  %v4_160db = add i32 %v5_160d3, 24
  store i32 %tmp113, i32* @eax, align 4
  %v1_160e5 = call i32 @function_2bbac(i32 %tmp113)
  %v3_160ef = load i32, i32* %v2_15f64, align 4
  store i32 %v3_160ef, i32* %esi.global-to-local, align 4
  %v1_160f8 = call i32 @unknown_2f6e8(i32 %v2_1604b)
  %v1_160fd = inttoptr i32 %v1_160f8 to i32*
  %v2_160fd = load i32, i32* %v1_160fd, align 4
  %v5_16111 = call i32 @unknown_2fa2f(i32 %v2_160fd, i32 %v3_160ef, i32 %v4_160db, i32 %v1_160e5)
  store i32 %tmp113, i32* @eax, align 4
  %v1_1611f = call i32 @function_2bbac(i32 %tmp113)
  store i32 %v1_1611f, i32* @eax, align 4
  %v3_16127 = load i32, i32* %v2_15f64, align 4
  %v2_1612d = load i32, i32* %arg1, align 4
  %v3_1613a = call i32 @function_2bbd9(i32 %v2_1612d, i32 %v3_16127, i32 %v1_1611f)
  %v3_16142 = load i32, i32* %v2_15f6a, align 4
  %v2_1614a = load i32, i32* %arg1, align 4
  %v2_1614e = sub i32 %v3_16142, %v2_1614a
  %v2_16152 = sdiv i32 %v2_1614e, 8
  %v3_16155 = mul i32 %v2_16152, -1431655765
  %v3_16170 = call i32 @unknown_2f526(i32 %tmp113, i32 %v2_1614a, i32 %v3_16155)
  store i32 %v2_16066, i32* %arg1, align 4
  store i32 %v5_16111, i32* %v2_15f64, align 4
  %v2_1618f = mul i32 %v4_16027, 24
  %v5_16194 = add i32 %v2_16066, %v2_1618f
  store i32 %v5_16194, i32* %v2_15f6a, align 4
  %v0_1619d = call i32 @function_16239()
  ret i32 %v0_1619d

; uselistorder directives
  uselistorder i32 %v2_16066, { 0, 2, 3, 1 }
  uselistorder i32* %v2_15f64, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %tmp113, { 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 0, 13, 12 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_2fa2f, { 1, 0 }
  uselistorder i32 ()* @function_16239, { 1, 0 }
  uselistorder i32 (i32)* @unknown_2f6e8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_2bdf6, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_161a3() local_unnamed_addr {
dec_label_pc_161a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_161a3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_161a3
}

define i32 @function_161ba() local_unnamed_addr {
dec_label_pc_161ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_161ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_161ba
}

define i32 @function_161d1() local_unnamed_addr {
dec_label_pc_161d1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_161d1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_161d1 = add i32 %v0_161d1, 1962986621
  %v2_161d1 = inttoptr i32 %v1_161d1 to i32*
  %v3_161d1 = load i32, i32* %v2_161d1, align 4
  %v4_161d1 = add i32 %v3_161d1, 1
  store i32 %v4_161d1, i32* %v2_161d1, align 4
  %v0_161d7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_161d7 = trunc i32 %v0_161d7 to i8
  %v2_161d7 = load i32, i32* %ebx.global-to-local, align 4
  %v3_161d7 = add i32 %v2_161d7, -796273579
  %v4_161d7 = inttoptr i32 %v3_161d7 to i8*
  %v5_161d7 = load i8, i8* %v4_161d7, align 1
  %v6_161d7 = and i8 %v5_161d7, %v1_161d7
  %v12_161d7 = zext i8 %v6_161d7 to i32
  %v14_161d7 = and i32 %v0_161d7, -256
  %v15_161d7 = or i32 %v12_161d7, %v14_161d7
  store i32 %v15_161d7, i32* %ecx.global-to-local, align 4
  %v0_161dd = load i32, i32* %eax.global-to-local, align 4
  %v2_161dd = mul i32 %v0_161dd, 2
  %v1_161df = load i32, i32* %edx.global-to-local, align 8
  %v2_161df = add i32 %v1_161df, %v2_161dd
  %v2_161e1 = mul i32 %v2_161df, 8
  store i32 %v2_161e1, i32* %eax.global-to-local, align 4
  store i32 %v2_161e1, i32* %edx.global-to-local, align 8
  %v1_161e6 = load i32, i32* @ebp, align 4
  %v2_161e6 = add i32 %v1_161e6, -40
  %v3_161e6 = inttoptr i32 %v2_161e6 to i32*
  %v4_161e6 = load i32, i32* %v3_161e6, align 4
  %v5_161e6 = add i32 %v4_161e6, %v2_161e1
  store i32 %v5_161e6, i32* %edx.global-to-local, align 8
  %v1_161e9 = add i32 %v1_161e6, -60
  %v2_161e9 = inttoptr i32 %v1_161e9 to i32*
  %v3_161e9 = load i32, i32* %v2_161e9, align 4
  store i32 %v3_161e9, i32* %eax.global-to-local, align 4
  %v2_161f3 = call i32 @unknown_2fa8c(i32 %v3_161e9, i32 %v5_161e6)
  store i32 %v2_161f3, i32* %eax.global-to-local, align 4
  %v0_161f8 = call i32 @function_1621b()
  store i32 %v0_161f8, i32* %eax.global-to-local, align 4
  ret i32 %v0_161f8

; uselistorder directives
  uselistorder i32 %v2_161e1, { 2, 1, 0 }
}

define i32 @function_161fa() local_unnamed_addr {
dec_label_pc_161fa:
  %ebp.global-to-local = alloca i32, align 4
  %v0_161fa = load i32, i32* %ebp.global-to-local, align 4
  %v1_161fa = add i32 %v0_161fa, -60
  %v2_161fa = inttoptr i32 %v1_161fa to i32*
  %v3_161fa = load i32, i32* %v2_161fa, align 4
  store i32 %v3_161fa, i32* @eax, align 4
  %v1_16200 = call i32 @function_2bbac(i32 %v3_161fa)
  %v1_16209 = add i32 %v0_161fa, -52
  %v2_16209 = inttoptr i32 %v1_16209 to i32*
  %v3_16209 = load i32, i32* %v2_16209, align 4
  %v1_16210 = add i32 %v0_161fa, -40
  %v2_16210 = inttoptr i32 %v1_16210 to i32*
  %v3_16210 = load i32, i32* %v2_16210, align 4
  store i32 %v3_16210, i32* @eax, align 4
  %v3_16216 = call i32 @function_2bbd9(i32 %v3_16210, i32 %v3_16209, i32 %v1_16200)
  ret i32 %v3_16216

; uselistorder directives
  uselistorder i32 %v0_161fa, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_2bbd9, { 1, 0 }
  uselistorder i32 (i32)* @function_2bbac, { 3, 2, 1, 0 }
}

define i32 @function_1621b() local_unnamed_addr {
dec_label_pc_1621b:
  %v0_1621b = load i32, i32* @ebp, align 4
  %v1_1621b = add i32 %v0_1621b, -60
  %v2_1621b = inttoptr i32 %v1_1621b to i32*
  %v3_1621b = load i32, i32* %v2_1621b, align 4
  %v1_1621e = add i32 %v0_1621b, -48
  %v2_1621e = inttoptr i32 %v1_1621e to i32*
  %v3_1621e = load i32, i32* %v2_1621e, align 4
  %v1_16225 = add i32 %v0_1621b, -40
  %v2_16225 = inttoptr i32 %v1_16225 to i32*
  %v3_16225 = load i32, i32* %v2_16225, align 4
  %v3_1622f = call i32 @unknown_2f526(i32 %v3_1621b, i32 %v3_16225, i32 %v3_1621e)
  ret i32 %v3_1622f

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_2f526, { 1, 0 }
}

define i32 @function_16239() local_unnamed_addr {
dec_label_pc_16239:
  %v0_16239 = load i32, i32* @ebp, align 4
  %v1_16239 = add i32 %v0_16239, -12
  %v2_16239 = inttoptr i32 %v1_16239 to i32*
  %v3_16239 = load i32, i32* %v2_16239, align 4
  %v1_1623c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1623c = xor i32 %v1_1623c, %v3_16239
  %v3_1623c = icmp eq i32 %v2_1623c, 0
  store i32 %v2_1623c, i32* @eax, align 4
  br i1 %v3_1623c, label %bb, label %dec_label_pc_16245

bb:                                               ; preds = %dec_label_pc_16239
  %v1_16243 = call i32 @function_1624a()
  br label %dec_label_pc_16245

dec_label_pc_16245:                               ; preds = %bb, %dec_label_pc_16239
  %v2_16243 = phi i32 [ %v1_16243, %bb ], [ %v2_1623c, %dec_label_pc_16239 ]
  ret i32 %v2_16243
}

define i32 @function_1624a() local_unnamed_addr {
dec_label_pc_1624a:
  %v0_16250 = load i32, i32* @eax, align 4
  ret i32 %v0_16250
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEEaSERKS3_() local_unnamed_addr {
dec_label_pc_16252:
  %eax.global-to-local = alloca i32, align 4
  %v5_16252 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_16252
}

define i32 @function_16254(i32 %arg1) local_unnamed_addr {
dec_label_pc_16254:
  %v4_16257 = load i32, i32* @ecx, align 4
  %v0_1625f = load i32, i32* @ebp, align 4
  %v1_16262 = add i32 %v0_1625f, 2
  store i32 %v1_16262, i32* @ebp, align 4
  %v1_16263 = add i32 %v4_16257, -1
  store i32 %v1_16263, i32* @ecx, align 4
  %v0_16265 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1626a = add i32 %v0_1625f, -10
  %v3_1626a = inttoptr i32 %v2_1626a to i32*
  store i32 %v0_16265, i32* %v3_1626a, align 4
  %v0_1626f = load i32, i32* @ebp, align 4
  %v1_16272 = add i32 %v0_1626f, -28
  %v2_16272 = inttoptr i32 %v1_16272 to i32*
  %v3_16272 = load i32, i32* %v2_16272, align 4
  ret i32 %v3_16272
}

define i32 @function_16298(i32 %arg1) local_unnamed_addr {
dec_label_pc_16298:
  %v0_16298 = load i32, i32* @ebx, align 4
  %v1_16298 = add i32 %v0_16298, 1435231301
  %v2_16298 = inttoptr i32 %v1_16298 to i8*
  %v3_16298 = load i8, i8* %v2_16298, align 1
  %v4_16298 = load i32, i32* @ecx, align 4
  %v5_16298 = trunc i32 %v4_16298 to i8
  %v6_16298 = add i8 %v5_16298, %v3_16298
  store i8 %v6_16298, i8* %v2_16298, align 1
  %v0_1629f = load i32, i32* @edx, align 8
  %v1_1629f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1629f = icmp eq i32 %v1_1629f, %v0_1629f
  br i1 %v3_1629f, label %bb, label %dec_label_pc_16298.dec_label_pc_162a8_crit_edge

dec_label_pc_16298.dec_label_pc_162a8_crit_edge:  ; preds = %dec_label_pc_16298
  %v2_162a6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_162a8

bb:                                               ; preds = %dec_label_pc_16298
  %v1_162a6 = call i32 @function_162ad()
  br label %dec_label_pc_162a8

dec_label_pc_162a8:                               ; preds = %dec_label_pc_16298.dec_label_pc_162a8_crit_edge, %bb
  %v2_162a6 = phi i32 [ %v2_162a6.pre, %dec_label_pc_16298.dec_label_pc_162a8_crit_edge ], [ %v1_162a6, %bb ]
  ret i32 %v2_162a6

; uselistorder directives
  uselistorder label %dec_label_pc_162a8, { 1, 0 }
}

define i32 @function_162ad() local_unnamed_addr {
dec_label_pc_162ad:
  %v0_162ae = load i32, i32* @eax, align 4
  ret i32 %v0_162ae
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162b0:
  %v0_162c2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_162c2
}

define i32 @function_162c9() local_unnamed_addr {
dec_label_pc_162c9:
  %eax.global-to-local = alloca i32, align 4
  %v15_162c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_162c9
}

define i32 @function_162f5() local_unnamed_addr {
dec_label_pc_162f5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_162f5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_162f5 = add i32 %v0_162f5, -1
  store i32 %v1_162f5, i32* %ecx.global-to-local, align 4
  %v0_162f7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_162f7
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IxEERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162fa:
  %ebx.global-to-local = alloca i32, align 4
  %v1_1631b = add i32 %arg1, 4
  store i32 %v1_1631b, i32* @eax, align 4
  %v1_16321 = call i32 @function_2a926(i32 %v1_1631b)
  %v0_16326 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_16326, 16777216
  %v4_1633f = sdiv i32 %sext, 16777216
  %v5_1633f = call i32 @unknown_2fec0(i32 %arg1, i32 %arg2, i32 1, i32 %v4_1633f)
  %v0_16344 = call i32 @function_16360()
  ret i32 %v0_16344

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16347() local_unnamed_addr {
dec_label_pc_16347:
  %eax.global-to-local = alloca i32, align 4
  %v0_16347 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16347
}

define i32 @function_16360() local_unnamed_addr {
dec_label_pc_16360:
  %v0_16360 = load i32, i32* @ebp, align 4
  %v1_16360 = add i32 %v0_16360, -12
  %v2_16360 = inttoptr i32 %v1_16360 to i32*
  %v3_16360 = load i32, i32* %v2_16360, align 4
  %v1_16363 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16363 = xor i32 %v1_16363, %v3_16360
  %v3_16363 = icmp eq i32 %v2_16363, 0
  store i32 %v2_16363, i32* @eax, align 4
  br i1 %v3_16363, label %bb, label %dec_label_pc_1636c

bb:                                               ; preds = %dec_label_pc_16360
  %v1_1636a = call i32 @function_16371()
  br label %dec_label_pc_1636c

dec_label_pc_1636c:                               ; preds = %bb, %dec_label_pc_16360
  %v2_1636a = phi i32 [ %v1_1636a, %bb ], [ %v2_16363, %dec_label_pc_16360 ]
  ret i32 %v2_1636a
}

define i32 @function_16371() local_unnamed_addr {
dec_label_pc_16371:
  %v0_16376 = load i32, i32* @eax, align 4
  ret i32 %v0_16376
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16378:
  %v1_16395 = call i32 @unknown_2fffa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_163a6

bb:                                               ; preds = %dec_label_pc_16378
  %v1_163a4 = call i32 @function_163ab()
  br label %dec_label_pc_163a6

dec_label_pc_163a6:                               ; preds = %bb, %dec_label_pc_16378
  %v2_163a4 = phi i32 [ %v1_163a4, %bb ], [ 0, %dec_label_pc_16378 ]
  ret i32 %v2_163a4
}

define i32 @function_163ab() local_unnamed_addr {
dec_label_pc_163ab:
  %v0_163ac = load i32, i32* @eax, align 4
  ret i32 %v0_163ac
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_163ae:
  %v1_163cb = call i32 @unknown_2ffde(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_163dc

bb:                                               ; preds = %dec_label_pc_163ae
  %v1_163da = call i32 @function_163e1()
  br label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %bb, %dec_label_pc_163ae
  %v2_163da = phi i32 [ %v1_163da, %bb ], [ 0, %dec_label_pc_163ae ]
  ret i32 %v2_163da
}

define i32 @function_163e1() local_unnamed_addr {
dec_label_pc_163e1:
  %v0_163e2 = load i32, i32* @eax, align 4
  ret i32 %v0_163e2
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_163e4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_163ff = add i32 %tmp101, 8
  %v2_163ff = inttoptr i32 %v1_163ff to i32*
  %v3_163ff = load i32, i32* %v2_163ff, align 4
  %v2_16407 = load i32, i32* %arg1, align 4
  %v2_1640b = sub i32 %v3_163ff, %v2_16407
  %v2_1640f = sdiv i32 %v2_1640b, 4
  %v3_16412 = mul i32 %v2_1640f, -858993459
  %v3_1642d = call i32 @unknown_3009c(i32 %tmp101, i32 %v2_16407, i32 %v3_16412)
  %v1_16438 = call i32 @unknown_2c75c(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16449

bb:                                               ; preds = %dec_label_pc_163e4
  %v1_16447 = call i32 @function_16467()
  store i32 %v1_16447, i32* @eax, align 4
  br label %dec_label_pc_16449

dec_label_pc_16449:                               ; preds = %bb, %dec_label_pc_163e4
  %v0_16449 = call i32 @function_16462()
  ret i32 %v0_16449

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_1644c() local_unnamed_addr {
dec_label_pc_1644c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1644c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1644c
}

define i32 @function_16462() local_unnamed_addr {
dec_label_pc_16462:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16467() local_unnamed_addr {
dec_label_pc_16467:
  %v0_1646c = load i32, i32* @eax, align 4
  ret i32 %v0_1646c
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1646e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16494

bb:                                               ; preds = %dec_label_pc_1646e
  %v2_16492 = call i32 @function_16499(i32 %arg1)
  br label %dec_label_pc_16494

dec_label_pc_16494:                               ; preds = %bb, %dec_label_pc_1646e
  %v3_16492 = phi i32 [ %v2_16492, %bb ], [ %arg1, %dec_label_pc_1646e ]
  ret i32 %v3_16492
}

define i32 @function_16499(i32 %arg1) local_unnamed_addr {
dec_label_pc_16499:
  %v0_1649a = load i32, i32* @eax, align 4
  ret i32 %v0_1649a
}

define i32 @_ZSt8_DestroyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES4_EvT_S6_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1649b:
  %v2_164cb = call i32 @unknown_301a8(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_164dc

bb:                                               ; preds = %dec_label_pc_1649b
  %v1_164da = call i32 @function_164e1()
  br label %dec_label_pc_164dc

dec_label_pc_164dc:                               ; preds = %bb, %dec_label_pc_1649b
  %v2_164da = phi i32 [ %v1_164da, %bb ], [ 0, %dec_label_pc_1649b ]
  ret i32 %v2_164da
}

define i32 @function_164e1() local_unnamed_addr {
dec_label_pc_164e1:
  %v0_164e2 = load i32, i32* @eax, align 4
  ret i32 %v0_164e2
}

define i32 @_ZN5boost9addressofIKSt6vectorI12CTransactionSaIS2_EEEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_164e3:
  %stack_var_-20 = alloca i32, align 4
  %v2_16501 = ptrtoint i32* %stack_var_-20 to i32
  %v2_16507 = call i32 @unknown_30233(i32 %v2_16501, i32 %arg1)
  %v1_16512 = call i32 @unknown_3026b(i32 %v2_16501)
  %v2_16522 = call i32 @unknown_3029a(i32 %v1_16512, i32 0)
  store i32 %v2_16522, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16533

bb:                                               ; preds = %dec_label_pc_164e3
  %v1_16531 = call i32 @function_16538()
  br label %dec_label_pc_16533

dec_label_pc_16533:                               ; preds = %bb, %dec_label_pc_164e3
  %v2_16531 = phi i32 [ %v1_16531, %bb ], [ %v2_16522, %dec_label_pc_164e3 ]
  ret i32 %v2_16531
}

define i32 @function_16538() local_unnamed_addr {
dec_label_pc_16538:
  %v0_16539 = load i32, i32* @eax, align 4
  ret i32 %v0_16539
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPKSt6vectorI12CTransactionSaIS3_EEEC1ERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1653a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1655d = call i32 @function_2b1ae(i32 %tmp102)
  %v1_16565 = inttoptr i32 %arg2 to i32*
  %v2_16565 = load i32, i32* %v1_16565, align 4
  store i32 %v2_16565, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16578

bb:                                               ; preds = %dec_label_pc_1653a
  %v1_16576 = call i32 @function_1657d()
  br label %dec_label_pc_16578

dec_label_pc_16578:                               ; preds = %bb, %dec_label_pc_1653a
  %v2_16576 = phi i32 [ %v1_16576, %bb ], [ 0, %dec_label_pc_1653a ]
  ret i32 %v2_16576
}

define i32 @function_1657d() local_unnamed_addr {
dec_label_pc_1657d:
  %v0_1657e = load i32, i32* @eax, align 4
  ret i32 %v0_1657e
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPKSt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SE_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1657f:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_165a5

bb:                                               ; preds = %dec_label_pc_1657f
  %v2_165a3 = call i32 @function_165aa(i32 %arg1)
  br label %dec_label_pc_165a5

dec_label_pc_165a5:                               ; preds = %bb, %dec_label_pc_1657f
  %v3_165a3 = phi i32 [ %v2_165a3, %bb ], [ %arg1, %dec_label_pc_1657f ]
  ret i32 %v3_165a3
}

define i32 @function_165aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_165aa:
  %v0_165ab = load i32, i32* @eax, align 4
  ret i32 %v0_165ab
}

define i32 @_ZN5boost15foreach_detail_7derefofIKSt6vectorI12CTransactionSaIS3_EEEERT_PS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_165ac:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_165d2

bb:                                               ; preds = %dec_label_pc_165ac
  %v2_165d0 = call i32 @function_165d7(i32 %arg1)
  br label %dec_label_pc_165d2

dec_label_pc_165d2:                               ; preds = %bb, %dec_label_pc_165ac
  %v3_165d0 = phi i32 [ %v2_165d0, %bb ], [ %arg1, %dec_label_pc_165ac ]
  ret i32 %v3_165d0
}

define i32 @function_165d7(i32 %arg1) local_unnamed_addr {
dec_label_pc_165d7:
  %v0_165d8 = load i32, i32* @eax, align 4
  ret i32 %v0_165d8
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_165d9:
  %v2_16603 = call i32 @unknown_303c3(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1661a

bb:                                               ; preds = %dec_label_pc_165d9
  %v1_16618 = call i32 @function_1661f()
  br label %dec_label_pc_1661a

dec_label_pc_1661a:                               ; preds = %bb, %dec_label_pc_165d9
  %v2_16618 = phi i32 [ %v1_16618, %bb ], [ %arg1, %dec_label_pc_165d9 ]
  ret i32 %v2_16618

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1661f() local_unnamed_addr {
dec_label_pc_1661f:
  %v0_16620 = load i32, i32* @eax, align 4
  ret i32 %v0_16620
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPK12CTransactionSt6vectorIS4_SaIS4_EEEEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16624:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_16647 = call i32 @function_2b298(i32 %tmp102)
  %v1_16652 = inttoptr i32 %arg2 to i32*
  %v2_16652 = load i32, i32* %v1_16652, align 4
  store i32 %v2_16652, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16662

bb:                                               ; preds = %dec_label_pc_16624
  %v1_16660 = call i32 @function_16667()
  br label %dec_label_pc_16662

dec_label_pc_16662:                               ; preds = %bb, %dec_label_pc_16624
  %v2_16660 = phi i32 [ %v1_16660, %bb ], [ 0, %dec_label_pc_16624 ]
  ret i32 %v2_16660
}

define i32 @function_16667() local_unnamed_addr {
dec_label_pc_16667:
  %v0_16668 = load i32, i32* @eax, align 4
  ret i32 %v0_16668
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16669:
  %v2_16693 = call i32 @unknown_3049d(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_166aa

bb:                                               ; preds = %dec_label_pc_16669
  %v1_166a8 = call i32 @function_166af()
  br label %dec_label_pc_166aa

dec_label_pc_166aa:                               ; preds = %bb, %dec_label_pc_16669
  %v2_166a8 = phi i32 [ %v1_166a8, %bb ], [ %arg1, %dec_label_pc_16669 ]
  ret i32 %v2_166a8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_166af() local_unnamed_addr {
dec_label_pc_166af:
  %v0_166b0 = load i32, i32* @eax, align 4
  ret i32 %v0_166b0
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPK12CTransactionSt6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_166b3:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_166d9

bb:                                               ; preds = %dec_label_pc_166b3
  %v2_166d7 = call i32 @function_166de(i32 %arg1)
  br label %dec_label_pc_166d9

dec_label_pc_166d9:                               ; preds = %bb, %dec_label_pc_166b3
  %v3_166d7 = phi i32 [ %v2_166d7, %bb ], [ %arg1, %dec_label_pc_166b3 ]
  ret i32 %v3_166d7
}

define i32 @function_166de(i32 %arg1) local_unnamed_addr {
dec_label_pc_166de:
  %v0_166df = load i32, i32* @eax, align 4
  ret i32 %v0_166df
}

define i32 @_ZN9__gnu_cxxeqIPK12CTransactionSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_166e0:
  %v1_16704 = call i32 @unknown_3055e(i32 %arg1)
  %v1_16709 = inttoptr i32 %v1_16704 to i32*
  %v2_16709 = load i32, i32* %v1_16709, align 4
  %v1_16711 = call i32 @unknown_3055e(i32 %arg2)
  %v1_16716 = inttoptr i32 %v1_16711 to i32*
  %v2_16716 = load i32, i32* %v1_16716, align 4
  %v12_16718 = icmp eq i32 %v2_16709, %v2_16716
  %v1_1671a = zext i1 %v12_16718 to i32
  %v3_1671a = and i32 %v2_16716, -256
  %v4_1671a = or i32 %v1_1671a, %v3_1671a
  store i32 %v4_1671a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16729

bb:                                               ; preds = %dec_label_pc_166e0
  %v1_16727 = call i32 @function_1672e()
  br label %dec_label_pc_16729

dec_label_pc_16729:                               ; preds = %bb, %dec_label_pc_166e0
  %v2_16727 = phi i32 [ %v1_16727, %bb ], [ %v4_1671a, %dec_label_pc_166e0 ]
  ret i32 %v2_16727

; uselistorder directives
  uselistorder i32 %v2_16716, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3055e, { 1, 0 }
}

define i32 @function_1672e() local_unnamed_addr {
dec_label_pc_1672e:
  %v0_16733 = load i32, i32* @eax, align 4
  ret i32 %v0_16733
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK12CTransactionSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16734:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1674e = load i32, i32* %arg1, align 4
  %v1_16750 = add i32 %v2_1674e, 32
  store i32 %v1_16750, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16767

bb:                                               ; preds = %dec_label_pc_16734
  %v2_16765 = call i32 @function_1676c(i32 %tmp100)
  br label %dec_label_pc_16767

dec_label_pc_16767:                               ; preds = %bb, %dec_label_pc_16734
  %v3_16765 = phi i32 [ %v2_16765, %bb ], [ %tmp100, %dec_label_pc_16734 ]
  ret i32 %v3_16765
}

define i32 @function_1676c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1676c:
  %v0_1676d = load i32, i32* @eax, align 4
  ret i32 %v0_1676d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK12CTransactionSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1676e:
  %v2_16788 = load i32, i32* %arg1, align 4
  store i32 %v2_16788, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16796

bb:                                               ; preds = %dec_label_pc_1676e
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_16794 = call i32 @function_1679b(i32 %tmp100)
  br label %dec_label_pc_16796

dec_label_pc_16796:                               ; preds = %bb, %dec_label_pc_1676e
  %v3_16794 = phi i32 [ %v2_16794, %bb ], [ %v2_16788, %dec_label_pc_1676e ]
  ret i32 %v3_16794

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1679b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1679b:
  %v0_1679c = load i32, i32* @eax, align 4
  ret i32 %v0_1679c
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE9constructEPS5_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1679e:
  store i32 0, i32* @eax, align 4
  %v2_167d2 = call i32 @function_1a9e4(i32 20, i32 %arg2)
  %v1_167d9 = icmp eq i32 %v2_167d2, 0
  br i1 %v1_167d9, label %bb, label %dec_label_pc_167dd

bb:                                               ; preds = %dec_label_pc_1679e
  %v1_167db = call i32 @function_16806()
  br label %dec_label_pc_167dd

dec_label_pc_167dd:                               ; preds = %bb, %dec_label_pc_1679e
  store i32 %arg3, i32* @eax, align 4
  %v2_167e7 = call i32 @function_298ac(i32 %v2_167d2, i32 %arg3)
  %v0_167ec = call i32 @function_16806()
  ret i32 %v0_167ec

; uselistorder directives
  uselistorder i32 ()* @function_16806, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_16806() local_unnamed_addr {
dec_label_pc_16806:
  %v0_16806 = load i32, i32* @ebp, align 4
  %v1_16806 = add i32 %v0_16806, -28
  %v2_16806 = inttoptr i32 %v1_16806 to i32*
  %v3_16806 = load i32, i32* %v2_16806, align 4
  %v1_16809 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16809 = xor i32 %v1_16809, %v3_16806
  %v3_16809 = icmp eq i32 %v2_16809, 0
  store i32 %v2_16809, i32* @eax, align 4
  br i1 %v3_16809, label %bb, label %dec_label_pc_16812

bb:                                               ; preds = %dec_label_pc_16806
  %v1_16810 = call i32 @function_16817()
  br label %dec_label_pc_16812

dec_label_pc_16812:                               ; preds = %bb, %dec_label_pc_16806
  %v2_16810 = phi i32 [ %v1_16810, %bb ], [ %v2_16809, %dec_label_pc_16806 ]
  ret i32 %v2_16810
}

define i32 @function_16817() local_unnamed_addr {
dec_label_pc_16817:
  %v0_1681e = load i32, i32* @eax, align 4
  ret i32 %v0_1681e
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS4_S6_EERKS4_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16820:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-68, align 4
  %v1_16848 = add i32 %tmp113, 4
  %v2_16848 = inttoptr i32 %v1_16848 to i32*
  %v3_16848 = load i32, i32* %v2_16848, align 4
  %v1_1684e = add i32 %tmp113, 8
  %v2_1684e = inttoptr i32 %v1_1684e to i32*
  %v3_1684e = load i32, i32* %v2_1684e, align 4
  %v12_16851 = icmp eq i32 %v3_16848, %v3_1684e
  br i1 %v12_16851, label %dec_label_pc_168f5, label %dec_label_pc_16859

dec_label_pc_16859:                               ; preds = %dec_label_pc_16820
  %v3_1685c = load i32, i32* %v2_16848, align 4
  %v1_1685f = add i32 %v3_1685c, -20
  store i32 %v1_1685f, i32* @ecx, align 4
  %v3_16865 = load i32, i32* %v2_16848, align 4
  %v4_16876 = call i32 @unknown_2cfbe(i32 %tmp113, i32 %v3_16865, i32 %v1_1685f)
  %v3_1687e = load i32, i32* %v2_16848, align 4
  %v1_16881 = add i32 %v3_1687e, 20
  store i32 %v1_16881, i32* %v2_16848, align 4
  %v2_16891 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v3_1687e, i32* %esi.global-to-local, align 4
  %v3_168a8 = load i32, i32* %v2_16848, align 4
  %v1_168ab = add i32 %v3_168a8, -40
  %v2_168ae = ptrtoint i32* %stack_var_-68 to i32
  %v1_168b4 = call i32 @unknown_306cc(i32 %v2_168ae)
  %v1_168b9 = inttoptr i32 %v1_168b4 to i32*
  %v2_168b9 = load i32, i32* %v1_168b9, align 4
  %v0_168bb = load i32, i32* %esi.global-to-local, align 4
  %v4_168c6 = call i32 @unknown_306f9(i32 %v2_168b9, i32 %v1_168ab, i32 %v0_168bb)
  %v1_168d1 = call i32 @unknown_30760(i32 %v2_168ae)
  %v2_168e0 = call i32 @unknown_30090(i32 %v1_168d1, i32 %v2_16891)
  store i32 %v2_16891, i32* @eax, align 4
  %v1_168eb = call i32 @function_26b18(i32 %v2_16891)
  %v0_168f0 = call i32 @function_16b20()
  ret i32 %v0_168f0

dec_label_pc_168f5:                               ; preds = %dec_label_pc_16820
  %v4_1690b = call i32 @unknown_30790(i32 %tmp113, i32 1, i32 ptrtoint ([22 x i8]* @global_var_610b.1838 to i32))
  %v2_16913 = ptrtoint i32* %stack_var_-56 to i32
  %v2_16920 = call i32 @unknown_30862(i32 %v2_16913, i32 %tmp113)
  %v2_1692f = ptrtoint i32* %stack_var_-68 to i32
  %v2_16935 = call i32 @unknown_308a9(i32 %v2_1692f, i32 %v2_16913)
  %v2_1694a = call i32 @unknown_3090a(i32 %tmp113, i32 %v4_1690b)
  %v2_16962 = mul i32 %v2_16935, 20
  %v5_16967 = add i32 %v2_1694a, %v2_16962
  %v3_1697b = call i32 @unknown_2cfbe(i32 %tmp113, i32 %v5_16967, i32 %arg3)
  %v1_1698d = call i32 @unknown_2cc8e(i32 %tmp113)
  %v1_1699a = call i32 @unknown_306cc(i32 %v2_1692f)
  %v1_1699f = inttoptr i32 %v1_1699a to i32*
  %v2_1699f = load i32, i32* %v1_1699f, align 4
  %v2_169a4 = load i32, i32* %arg1, align 4
  %v5_169b8 = call i32 @unknown_30961(i32 %v2_169a4, i32 %v2_1699f, i32 %v2_1694a, i32 %v1_1698d)
  %v4_169c0 = add i32 %v5_169b8, 20
  %v1_169ca = call i32 @unknown_2cc8e(i32 %tmp113)
  %v3_169d4 = load i32, i32* %v2_16848, align 4
  store i32 %v3_169d4, i32* %esi.global-to-local, align 4
  %v1_169dd = call i32 @unknown_306cc(i32 %v2_1692f)
  %v1_169e2 = inttoptr i32 %v1_169dd to i32*
  %v2_169e2 = load i32, i32* %v1_169e2, align 4
  %v5_169f6 = call i32 @unknown_30961(i32 %v2_169e2, i32 %v3_169d4, i32 %v4_169c0, i32 %v1_169ca)
  %v1_16a04 = call i32 @unknown_2cc8e(i32 %tmp113)
  %v3_16a0c = load i32, i32* %v2_16848, align 4
  %v2_16a12 = load i32, i32* %arg1, align 4
  %v3_16a1f = call i32 @unknown_2ccbb(i32 %v2_16a12, i32 %v3_16a0c, i32 %v1_16a04)
  %v3_16a27 = load i32, i32* %v2_1684e, align 4
  %v2_16a2f = load i32, i32* %arg1, align 4
  %v2_16a33 = sub i32 %v3_16a27, %v2_16a2f
  %v2_16a37 = sdiv i32 %v2_16a33, 4
  %v3_16a3a = mul i32 %v2_16a37, -858993459
  %v3_16a55 = call i32 @unknown_304d8(i32 %tmp113, i32 %v2_16a2f, i32 %v3_16a3a)
  store i32 %v2_1694a, i32* %arg1, align 4
  store i32 %v5_169f6, i32* %v2_16848, align 4
  %v2_16a75 = mul i32 %v4_1690b, 20
  %v5_16a7a = add i32 %v2_1694a, %v2_16a75
  store i32 %v5_16a7a, i32* %v2_1684e, align 4
  %v0_16a83 = call i32 @function_16b20()
  ret i32 %v0_16a83

; uselistorder directives
  uselistorder i32 %v2_1694a, { 0, 2, 3, 1 }
  uselistorder i32* %v2_16848, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %tmp113, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_30961, { 1, 0 }
  uselistorder i32 ()* @function_16b20, { 1, 0 }
  uselistorder i32 (i32)* @unknown_306cc, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_2cfbe, { 1, 0 }
}

define i32 @function_16a89() local_unnamed_addr {
dec_label_pc_16a89:
  %eax.global-to-local = alloca i32, align 4
  %v0_16a89 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16a89
}

define i32 @function_16aa0() local_unnamed_addr {
dec_label_pc_16aa0:
  %eax.global-to-local = alloca i32, align 4
  %v0_16aa0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16aa0
}

define i32 @function_16ab7() local_unnamed_addr {
dec_label_pc_16ab7:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16ab7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16ab7 = add i32 %v0_16ab7, 1962987645
  %v2_16ab7 = inttoptr i32 %v1_16ab7 to i32*
  %v3_16ab7 = load i32, i32* %v2_16ab7, align 4
  %v4_16ab7 = add i32 %v3_16ab7, 1
  store i32 %v4_16ab7, i32* %v2_16ab7, align 4
  %v0_16abd = load i32, i32* %ecx.global-to-local, align 4
  %v1_16abd = load i32, i32* %ebx.global-to-local, align 4
  %v2_16abd = add i32 %v1_16abd, -796272555
  %v3_16abd = inttoptr i32 %v2_16abd to i32*
  %v4_16abd = load i32, i32* %v3_16abd, align 4
  %v5_16abd = and i32 %v4_16abd, %v0_16abd
  store i32 %v5_16abd, i32* %ecx.global-to-local, align 4
  %v0_16ac3 = load i32, i32* %eax.global-to-local, align 4
  %v2_16ac3 = mul i32 %v0_16ac3, 4
  %v1_16ac6 = load i32, i32* %edx.global-to-local, align 8
  %v2_16ac6 = add i32 %v1_16ac6, %v2_16ac3
  %v2_16ac8 = mul i32 %v2_16ac6, 4
  store i32 %v2_16ac8, i32* %eax.global-to-local, align 4
  store i32 %v2_16ac8, i32* %edx.global-to-local, align 8
  %v1_16acd = load i32, i32* @ebp, align 4
  %v2_16acd = add i32 %v1_16acd, -36
  %v3_16acd = inttoptr i32 %v2_16acd to i32*
  %v4_16acd = load i32, i32* %v3_16acd, align 4
  %v5_16acd = add i32 %v4_16acd, %v2_16ac8
  store i32 %v5_16acd, i32* %edx.global-to-local, align 8
  %v1_16ad0 = add i32 %v1_16acd, -60
  %v2_16ad0 = inttoptr i32 %v1_16ad0 to i32*
  %v3_16ad0 = load i32, i32* %v2_16ad0, align 4
  store i32 %v3_16ad0, i32* %eax.global-to-local, align 4
  %v2_16ada = call i32 @unknown_309be(i32 %v3_16ad0, i32 %v5_16acd)
  store i32 %v2_16ada, i32* %eax.global-to-local, align 4
  %v0_16adf = call i32 @function_16b02()
  store i32 %v0_16adf, i32* %eax.global-to-local, align 4
  ret i32 %v0_16adf

; uselistorder directives
  uselistorder i32 %v2_16ac8, { 2, 1, 0 }
}

define i32 @function_16ae1() local_unnamed_addr {
dec_label_pc_16ae1:
  %ebp.global-to-local = alloca i32, align 4
  %v0_16ae1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16ae1 = add i32 %v0_16ae1, -60
  %v2_16ae1 = inttoptr i32 %v1_16ae1 to i32*
  %v3_16ae1 = load i32, i32* %v2_16ae1, align 4
  %v1_16ae7 = call i32 @unknown_2cc8e(i32 %v3_16ae1)
  %v1_16af0 = add i32 %v0_16ae1, -48
  %v2_16af0 = inttoptr i32 %v1_16af0 to i32*
  %v3_16af0 = load i32, i32* %v2_16af0, align 4
  %v1_16af7 = add i32 %v0_16ae1, -36
  %v2_16af7 = inttoptr i32 %v1_16af7 to i32*
  %v3_16af7 = load i32, i32* %v2_16af7, align 4
  %v3_16afd = call i32 @unknown_2ccbb(i32 %v3_16af7, i32 %v3_16af0, i32 %v1_16ae7)
  ret i32 %v3_16afd

; uselistorder directives
  uselistorder i32 %v0_16ae1, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_2ccbb, { 1, 0 }
  uselistorder i32 (i32)* @unknown_2cc8e, { 3, 2, 1, 0 }
}

define i32 @function_16b02() local_unnamed_addr {
dec_label_pc_16b02:
  %v0_16b02 = load i32, i32* @ebp, align 4
  %v1_16b02 = add i32 %v0_16b02, -60
  %v2_16b02 = inttoptr i32 %v1_16b02 to i32*
  %v3_16b02 = load i32, i32* %v2_16b02, align 4
  %v1_16b05 = add i32 %v0_16b02, -44
  %v2_16b05 = inttoptr i32 %v1_16b05 to i32*
  %v3_16b05 = load i32, i32* %v2_16b05, align 4
  %v1_16b0c = add i32 %v0_16b02, -36
  %v2_16b0c = inttoptr i32 %v1_16b0c to i32*
  %v3_16b0c = load i32, i32* %v2_16b0c, align 4
  %v3_16b16 = call i32 @unknown_304d8(i32 %v3_16b02, i32 %v3_16b0c, i32 %v3_16b05)
  ret i32 %v3_16b16

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_304d8, { 1, 0 }
}

define i32 @function_16b20() local_unnamed_addr {
dec_label_pc_16b20:
  %v0_16b20 = load i32, i32* @ebp, align 4
  %v1_16b20 = add i32 %v0_16b20, -12
  %v2_16b20 = inttoptr i32 %v1_16b20 to i32*
  %v3_16b20 = load i32, i32* %v2_16b20, align 4
  %v1_16b23 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16b23 = xor i32 %v1_16b23, %v3_16b20
  %v3_16b23 = icmp eq i32 %v2_16b23, 0
  store i32 %v2_16b23, i32* @eax, align 4
  br i1 %v3_16b23, label %bb, label %dec_label_pc_16b2c

bb:                                               ; preds = %dec_label_pc_16b20
  %v1_16b2a = call i32 @function_16b31()
  br label %dec_label_pc_16b2c

dec_label_pc_16b2c:                               ; preds = %bb, %dec_label_pc_16b20
  %v2_16b2a = phi i32 [ %v1_16b2a, %bb ], [ %v2_16b23, %dec_label_pc_16b20 ]
  ret i32 %v2_16b2a
}

define i32 @function_16b31() local_unnamed_addr {
dec_label_pc_16b31:
  %v0_16b37 = load i32, i32* @eax, align 4
  ret i32 %v0_16b37
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16b38:
  %v1_16b58 = add i32 %arg2, 4
  %v2_16b65 = call i32 @unknown_30d12(i32 %arg1, i32 %v1_16b58)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16b79

bb:                                               ; preds = %dec_label_pc_16b38
  %v1_16b77 = call i32 @function_16b7e()
  br label %dec_label_pc_16b79

dec_label_pc_16b79:                               ; preds = %bb, %dec_label_pc_16b38
  %v2_16b77 = phi i32 [ %v1_16b77, %bb ], [ %arg1, %dec_label_pc_16b38 ]
  ret i32 %v2_16b77

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_16b7e() local_unnamed_addr {
dec_label_pc_16b7e:
  %v0_16b7f = load i32, i32* @eax, align 4
  ret i32 %v0_16b7f
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ISE_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16b82:
  %v1_16ba3 = add i32 %arg1, 4
  %v1_16ba9 = call i32 @function_2b1ae(i32 %v1_16ba3)
  %v0_16bae = load i32, i32* @ebx, align 4
  %sext = mul i32 %v0_16bae, 16777216
  %v4_16bc7 = sdiv i32 %sext, 16777216
  %v5_16bc7 = call i32 @unknown_30d96(i32 %arg1, i32 %arg2, i32 1, i32 %v4_16bc7)
  %v0_16bcc = call i32 @function_16be8()
  ret i32 %v0_16bcc

; uselistorder directives
  uselistorder i32 (i32)* @function_2b1ae, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16bcf() local_unnamed_addr {
dec_label_pc_16bcf:
  %eax.global-to-local = alloca i32, align 4
  %v0_16bcf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16bcf
}

define i32 @function_16be8() local_unnamed_addr {
dec_label_pc_16be8:
  %v0_16be8 = load i32, i32* @ebp, align 4
  %v1_16be8 = add i32 %v0_16be8, -12
  %v2_16be8 = inttoptr i32 %v1_16be8 to i32*
  %v3_16be8 = load i32, i32* %v2_16be8, align 4
  %v1_16beb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16beb = xor i32 %v1_16beb, %v3_16be8
  %v3_16beb = icmp eq i32 %v2_16beb, 0
  store i32 %v2_16beb, i32* @eax, align 4
  br i1 %v3_16beb, label %bb, label %dec_label_pc_16bf4

bb:                                               ; preds = %dec_label_pc_16be8
  %v1_16bf2 = call i32 @function_16bf9()
  br label %dec_label_pc_16bf4

dec_label_pc_16bf4:                               ; preds = %bb, %dec_label_pc_16be8
  %v2_16bf2 = phi i32 [ %v1_16bf2, %bb ], [ %v2_16beb, %dec_label_pc_16be8 ]
  ret i32 %v2_16bf2
}

define i32 @function_16bf9() local_unnamed_addr {
dec_label_pc_16bf9:
  %v0_16bfe = load i32, i32* @eax, align 4
  ret i32 %v0_16bfe
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IxEERT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16c00:
  %ebx.global-to-local = alloca i32, align 4
  %v1_16c21 = add i32 %arg1, 4
  store i32 %v1_16c21, i32* @eax, align 4
  %v1_16c27 = call i32 @function_2b22c(i32 %v1_16c21)
  %v0_16c2c = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_16c2c, 16777216
  %v4_16c45 = sdiv i32 %sext, 16777216
  %v5_16c45 = call i32 @unknown_30e7e(i32 %arg1, i32 %arg2, i32 1, i32 %v4_16c45)
  %v0_16c4a = call i32 @function_16c66()
  ret i32 %v0_16c4a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16c4d() local_unnamed_addr {
dec_label_pc_16c4d:
  %eax.global-to-local = alloca i32, align 4
  %v0_16c4d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16c4d
}

define i32 @function_16c66() local_unnamed_addr {
dec_label_pc_16c66:
  %v0_16c66 = load i32, i32* @ebp, align 4
  %v1_16c66 = add i32 %v0_16c66, -12
  %v2_16c66 = inttoptr i32 %v1_16c66 to i32*
  %v3_16c66 = load i32, i32* %v2_16c66, align 4
  %v1_16c69 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16c69 = xor i32 %v1_16c69, %v3_16c66
  %v3_16c69 = icmp eq i32 %v2_16c69, 0
  store i32 %v2_16c69, i32* @eax, align 4
  br i1 %v3_16c69, label %bb, label %dec_label_pc_16c72

bb:                                               ; preds = %dec_label_pc_16c66
  %v1_16c70 = call i32 @function_16c77()
  br label %dec_label_pc_16c72

dec_label_pc_16c72:                               ; preds = %bb, %dec_label_pc_16c66
  %v2_16c70 = phi i32 [ %v1_16c70, %bb ], [ %v2_16c69, %dec_label_pc_16c66 ]
  ret i32 %v2_16c70
}

define i32 @function_16c77() local_unnamed_addr {
dec_label_pc_16c77:
  %v0_16c7c = load i32, i32* @eax, align 4
  ret i32 %v0_16c7c
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IdEERT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16c7e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_16c81 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_16c81, 16777216
  %v4_16cc3 = sdiv i32 %sext, 16777216
  %v5_16cc3 = call i32 @unknown_30f66(i32 %arg1, i32 %arg2, i32 1, i32 %v4_16cc3)
  %v0_16cc8 = call i32 @function_16ce4()
  ret i32 %v0_16cc8
}

define i32 @function_16ccb() local_unnamed_addr {
dec_label_pc_16ccb:
  %eax.global-to-local = alloca i32, align 4
  %v0_16ccb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16ccb
}

define i32 @function_16ce4() local_unnamed_addr {
dec_label_pc_16ce4:
  %v0_16ce4 = load i32, i32* @ebp, align 4
  %v1_16ce4 = add i32 %v0_16ce4, -12
  %v2_16ce4 = inttoptr i32 %v1_16ce4 to i32*
  %v3_16ce4 = load i32, i32* %v2_16ce4, align 4
  %v1_16ce7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16ce7 = xor i32 %v1_16ce7, %v3_16ce4
  %v3_16ce7 = icmp eq i32 %v2_16ce7, 0
  store i32 %v2_16ce7, i32* @eax, align 4
  br i1 %v3_16ce7, label %bb, label %dec_label_pc_16cf0

bb:                                               ; preds = %dec_label_pc_16ce4
  %v1_16cee = call i32 @function_16cf5()
  br label %dec_label_pc_16cf0

dec_label_pc_16cf0:                               ; preds = %bb, %dec_label_pc_16ce4
  %v2_16cee = phi i32 [ %v1_16cee, %bb ], [ %v2_16ce7, %dec_label_pc_16ce4 ]
  ret i32 %v2_16cee
}

define i32 @function_16cf5() local_unnamed_addr {
dec_label_pc_16cf5:
  %v0_16cfa = load i32, i32* @eax, align 4
  ret i32 %v0_16cfa
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16cfc:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_16d16 = add i32 %tmp100, 4
  %v2_16d16 = inttoptr i32 %v1_16d16 to i32*
  %v3_16d16 = load i32, i32* %v2_16d16, align 4
  %v2_16d1e = load i32, i32* %arg1, align 4
  %v2_16d22 = sub i32 %v3_16d16, %v2_16d1e
  %v2_16d26 = sdiv i32 %v2_16d22, 8
  %v3_16d29 = mul i32 %v2_16d26, -1431655765
  store i32 %v3_16d29, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16d3b

bb:                                               ; preds = %dec_label_pc_16cfc
  %v2_16d39 = call i32 @function_16d40(i32 %tmp100)
  br label %dec_label_pc_16d3b

dec_label_pc_16d3b:                               ; preds = %bb, %dec_label_pc_16cfc
  %v3_16d39 = phi i32 [ %v2_16d39, %bb ], [ %v3_16d29, %dec_label_pc_16cfc ]
  ret i32 %v3_16d39
}

define i32 @function_16d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d40:
  %v0_16d41 = load i32, i32* @eax, align 4
  ret i32 %v0_16d41
}

define i32 @_ZNKSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d42:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16d68

bb:                                               ; preds = %dec_label_pc_16d42
  %v2_16d66 = call i32 @function_16d6d(i32 %arg1)
  br label %dec_label_pc_16d68

dec_label_pc_16d68:                               ; preds = %bb, %dec_label_pc_16d42
  %v3_16d66 = phi i32 [ %v2_16d66, %bb ], [ %arg1, %dec_label_pc_16d42 ]
  ret i32 %v3_16d66
}

define i32 @function_16d6d(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d6d:
  %v0_16d6e = load i32, i32* @eax, align 4
  ret i32 %v0_16d6e
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1EjRKS5_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16d70:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_16da1 = call i32 @unknown_310c2(i32 %tmp104, i32 %arg3)
  %v2_16db3 = call i32 @unknown_3080c(i32 %tmp104, i32 %arg2)
  store i32 %v2_16db3, i32* %arg1, align 4
  %v2_16dc7 = add i32 %tmp104, 4
  %v3_16dc7 = inttoptr i32 %v2_16dc7 to i32*
  store i32 %v2_16db3, i32* %v3_16dc7, align 4
  %v2_16dcd = load i32, i32* %arg1, align 4
  %v2_16dd8 = mul i32 %arg2, 24
  %v3_16ddb = add i32 %v2_16dcd, %v2_16dd8
  %v2_16de1 = add i32 %tmp104, 8
  %v3_16de1 = inttoptr i32 %v2_16de1 to i32*
  store i32 %v3_16ddb, i32* %v3_16de1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16df0

bb:                                               ; preds = %dec_label_pc_16d70
  %v1_16dee = call i32 @function_16e0e()
  store i32 %v1_16dee, i32* @eax, align 4
  br label %dec_label_pc_16df0

dec_label_pc_16df0:                               ; preds = %bb, %dec_label_pc_16d70
  %v0_16df0 = call i32 @function_16e09()
  ret i32 %v0_16df0

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
}

define i32 @function_16df3() local_unnamed_addr {
dec_label_pc_16df3:
  %eax.global-to-local = alloca i32, align 4
  %v0_16df3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16df3
}

define i32 @function_16df9() local_unnamed_addr {
dec_label_pc_16df9:
  %eax.global-to-local = alloca i32, align 4
  %v0_16df9 = load i32, i32* %eax.global-to-local, align 4
  %v11_16df9 = and i32 %v0_16df9, -24
  store i32 %v11_16df9, i32* %eax.global-to-local, align 4
  ret i32 %v11_16df9

; uselistorder directives
  uselistorder i32 %v11_16df9, { 1, 0 }
}

define i32 @function_16e09() local_unnamed_addr {
dec_label_pc_16e09:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16e0e() local_unnamed_addr {
dec_label_pc_16e0e:
  %v0_16e13 = load i32, i32* @eax, align 4
  ret i32 %v0_16e13
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_16e14:
  %stack_var_-20 = alloca i32, align 4
  %v2_16e34 = load i32, i32* %arg2, align 4
  store i32 %v2_16e34, i32* %stack_var_-20, align 4
  %v2_16e39 = ptrtoint i32* %stack_var_-20 to i32
  %v2_16e46 = call i32 @unknown_311c6(i32 %arg1, i32 %v2_16e39)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16e5a

bb:                                               ; preds = %dec_label_pc_16e14
  %v1_16e58 = call i32 @function_16e5f()
  br label %dec_label_pc_16e5a

dec_label_pc_16e5a:                               ; preds = %bb, %dec_label_pc_16e14
  %v2_16e58 = phi i32 [ %v1_16e58, %bb ], [ %arg1, %dec_label_pc_16e14 ]
  ret i32 %v2_16e58

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_16e5f() local_unnamed_addr {
dec_label_pc_16e5f:
  %v0_16e60 = load i32, i32* @eax, align 4
  ret i32 %v0_16e60
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16e64:
  %stack_var_-20 = alloca i32, align 4
  %v1_16e84 = add i32 %arg2, 4
  %v2_16e84 = inttoptr i32 %v1_16e84 to i32*
  %v3_16e84 = load i32, i32* %v2_16e84, align 4
  store i32 %v3_16e84, i32* %stack_var_-20, align 4
  %v2_16e8a = ptrtoint i32* %stack_var_-20 to i32
  %v2_16e97 = call i32 @unknown_31216(i32 %arg1, i32 %v2_16e8a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16eab

bb:                                               ; preds = %dec_label_pc_16e64
  %v1_16ea9 = call i32 @function_16eb0()
  br label %dec_label_pc_16eab

dec_label_pc_16eab:                               ; preds = %bb, %dec_label_pc_16e64
  %v2_16ea9 = phi i32 [ %v1_16ea9, %bb ], [ %arg1, %dec_label_pc_16e64 ]
  ret i32 %v2_16ea9

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_16eb0() local_unnamed_addr {
dec_label_pc_16eb0:
  %v0_16eb1 = load i32, i32* @eax, align 4
  ret i32 %v0_16eb1
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_S6_ET0_T_SF_SE_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16eb4:
  %v7_16ef1 = call i32 @unknown_312a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_16ef1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16f02

bb:                                               ; preds = %dec_label_pc_16eb4
  %v1_16f00 = call i32 @function_16f07()
  br label %dec_label_pc_16f02

dec_label_pc_16f02:                               ; preds = %bb, %dec_label_pc_16eb4
  %v2_16f00 = phi i32 [ %v1_16f00, %bb ], [ %v7_16ef1, %dec_label_pc_16eb4 ]
  ret i32 %v2_16f00

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16f07() local_unnamed_addr {
dec_label_pc_16f07:
  %v0_16f08 = load i32, i32* @eax, align 4
  ret i32 %v0_16f08
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE4typeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16f0a:
  %v2_16f24 = load i32, i32* %arg1, align 4
  store i32 %v2_16f24, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16f32

bb:                                               ; preds = %dec_label_pc_16f0a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_16f30 = call i32 @function_16f37(i32 %tmp100)
  br label %dec_label_pc_16f32

dec_label_pc_16f32:                               ; preds = %bb, %dec_label_pc_16f0a
  %v3_16f30 = phi i32 [ %v2_16f30, %bb ], [ %v2_16f24, %dec_label_pc_16f0a ]
  ret i32 %v3_16f30

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_16f37(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f37:
  %v0_16f38 = load i32, i32* @eax, align 4
  ret i32 %v0_16f38
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16f3a:
  %stack_var_-20 = alloca i32, align 4
  %v1_16f5b = add i32 %arg1, 4
  store i32 %v1_16f5b, i32* @eax, align 4
  %v1_16f61 = call i32 @function_2b566(i32 %v1_16f5b)
  %v1_16f6f = call i32 @unknown_2f710(i32 %v1_16f5b)
  %v2_16f78 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16f78, i32* @eax, align 4
  %v2_16f7e = call i32 @function_24b84(i32 %v2_16f78, i32 %v1_16f6f)
  %v2_16f90 = call i32 @unknown_31376(i32 %arg2, i32 %v2_16f78)
  %v1_16f9b = call i32 @unknown_3141c(i32 %arg2)
  %v2_16faa = call i32 @unknown_313e4(i32 %arg1, i32 %v1_16f9b)
  store i32 %v2_16f78, i32* @eax, align 4
  %v1_16fb5 = call i32 @function_2b470(i32 %v2_16f78)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16fc6

bb:                                               ; preds = %dec_label_pc_16f3a
  %v1_16fc4 = call i32 @function_16ff6()
  store i32 %v1_16fc4, i32* @eax, align 4
  br label %dec_label_pc_16fc6

dec_label_pc_16fc6:                               ; preds = %bb, %dec_label_pc_16f3a
  %v0_16fc6 = call i32 @function_16ff1()
  ret i32 %v0_16fc6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16fc8() local_unnamed_addr {
dec_label_pc_16fc8:
  %eax.global-to-local = alloca i32, align 4
  %v0_16fc8 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_16fc8, i32* @ebx, align 4
  %v0_16fca = load i32, i32* @ebp, align 4
  %v1_16fca = add i32 %v0_16fca, -16
  store i32 %v1_16fca, i32* @eax, align 4
  %v1_16fd0 = call i32 @function_2b470(i32 %v1_16fca)
  store i32 %v1_16fd0, i32* %eax.global-to-local, align 4
  %v0_16fd5 = call i32 @function_16fd9()
  store i32 %v0_16fd5, i32* %eax.global-to-local, align 4
  ret i32 %v0_16fd5

; uselistorder directives
  uselistorder i32 (i32)* @function_2b470, { 1, 0 }
}

define i32 @function_16fd7() local_unnamed_addr {
dec_label_pc_16fd7:
  %eax.global-to-local = alloca i32, align 4
  %v0_16fd7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16fd7
}

define i32 @function_16fd9() local_unnamed_addr {
dec_label_pc_16fd9:
  %v0_16fd9 = load i32, i32* @ebp, align 4
  %v1_16fd9 = add i32 %v0_16fd9, -28
  %v2_16fd9 = inttoptr i32 %v1_16fd9 to i32*
  %v3_16fd9 = load i32, i32* %v2_16fd9, align 4
  %v1_16fdc = add i32 %v3_16fd9, 4
  %v1_16fe2 = call i32 @unknown_2b4a6(i32 %v1_16fdc)
  %v0_16fe7 = load i32, i32* @ebx, align 4
  ret i32 %v0_16fe7
}

define i32 @function_16ff1() local_unnamed_addr {
dec_label_pc_16ff1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16ff6() local_unnamed_addr {
dec_label_pc_16ff6:
  %v0_16ffb = load i32, i32* @eax, align 4
  ret i32 %v0_16ffb
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE9get_int64Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ffc:
  %v2_17021 = call i32 @unknown_2e0c2(i32 %arg1, i32 4)
  %v1_17029 = add i32 %arg1, 4
  %v1_1702f = call i32 @unknown_31525(i32 %v1_17029)
  %v1_17037 = inttoptr i32 %v1_1702f to i32*
  %v2_17037 = load i32, i32* %v1_17037, align 4
  store i32 %v2_17037, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17045

bb:                                               ; preds = %dec_label_pc_16ffc
  %v1_17043 = call i32 @function_1704a()
  br label %dec_label_pc_17045

dec_label_pc_17045:                               ; preds = %bb, %dec_label_pc_16ffc
  %v2_17043 = phi i32 [ %v1_17043, %bb ], [ %v2_17037, %dec_label_pc_16ffc ]
  ret i32 %v2_17043

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1704a() local_unnamed_addr {
dec_label_pc_1704a:
  %v0_1704b = load i32, i32* @eax, align 4
  ret i32 %v0_1704b
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE10get_uint64Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1704c:
  %v2_17071 = call i32 @unknown_2e112(i32 %arg1, i32 4)
  %v1_1707c = call i32 @unknown_2e048(i32 %arg1)
  store i32 %v1_1707c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1708d

bb:                                               ; preds = %dec_label_pc_1704c
  %v1_1708b = call i32 @function_17092()
  br label %dec_label_pc_1708d

dec_label_pc_1708d:                               ; preds = %bb, %dec_label_pc_1704c
  %v2_1708b = phi i32 [ %v1_1708b, %bb ], [ %v1_1707c, %dec_label_pc_1704c ]
  ret i32 %v2_1708b

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17092() local_unnamed_addr {
dec_label_pc_17092:
  %v0_17093 = load i32, i32* @eax, align 4
  ret i32 %v0_17093
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE9is_uint64Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17094:
  %v1_170ae = add i32 %arg1, 16
  %v2_170ae = inttoptr i32 %v1_170ae to i8*
  %v3_170ae = load i8, i8* %v2_170ae, align 1
  %v4_170ae = zext i8 %v3_170ae to i32
  store i32 %v4_170ae, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_170be

bb:                                               ; preds = %dec_label_pc_17094
  %v2_170bc = call i32 @function_170c3(i32 %arg1)
  br label %dec_label_pc_170be

dec_label_pc_170be:                               ; preds = %bb, %dec_label_pc_17094
  %v3_170bc = phi i32 [ %v2_170bc, %bb ], [ %v4_170ae, %dec_label_pc_17094 ]
  ret i32 %v3_170bc
}

define i32 @function_170c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_170c3:
  %v0_170c4 = load i32, i32* @eax, align 4
  ret i32 %v0_170c4
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE10check_typeENS_10Value_typeE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_170c6:
  %stack_var_-196 = alloca i32, align 4
  %v1_170f7 = call i32 @unknown_2dfd0(i32 %arg1)
  %v12_17104 = icmp eq i32 %v1_170f7, %arg2
  %v1_17106 = icmp eq i1 %v12_17104, false
  %v5_17109 = icmp eq i1 %v1_17106, false
  br i1 %v5_17109, label %bb, label %dec_label_pc_17111

bb:                                               ; preds = %dec_label_pc_170c6
  %v1_1710b = call i32 @function_17229()
  br label %dec_label_pc_17111

dec_label_pc_17111:                               ; preds = %bb, %dec_label_pc_170c6
  %v2_17119 = ptrtoint i32* %stack_var_-196 to i32
  ret i32 %v2_17119
}

define i32 @function_1719a() local_unnamed_addr {
dec_label_pc_1719a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1719a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1719a
}

define i32 @function_171ff() local_unnamed_addr {
dec_label_pc_171ff:
  %v0_171ff = call i32 @function_17203()
  ret i32 %v0_171ff
}

define i32 @function_17201() local_unnamed_addr {
dec_label_pc_17201:
  %eax.global-to-local = alloca i32, align 4
  %v0_17201 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17201
}

define i32 @function_17203() local_unnamed_addr {
dec_label_pc_17203:
  %v3_17203 = load i32, i32* @eax, align 4
  ret i32 %v3_17203
}

define i32 @function_1720a() local_unnamed_addr {
dec_label_pc_1720a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1720a = load i32, i32* %ecx.global-to-local, align 4
  %v1_1720a = add i32 %v0_1720a, -1996297229
  %v2_1720a = inttoptr i32 %v1_1720a to i32*
  %v3_1720a = load i32, i32* %v2_1720a, align 4
  %v4_1720a = add i32 %v3_1720a, -1
  store i32 %v4_1720a, i32* %v2_1720a, align 4
  %v0_17210 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17210
}

define i32 @function_17229() local_unnamed_addr {
dec_label_pc_17229:
  %v0_17229 = load i32, i32* @ebp, align 4
  %v1_17229 = add i32 %v0_17229, -12
  %v2_17229 = inttoptr i32 %v1_17229 to i32*
  %v3_17229 = load i32, i32* %v2_17229, align 4
  %v1_1722c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1722c = xor i32 %v1_1722c, %v3_17229
  %v3_1722c = icmp eq i32 %v2_1722c, 0
  store i32 %v2_1722c, i32* @eax, align 4
  br i1 %v3_1722c, label %bb, label %dec_label_pc_17235

bb:                                               ; preds = %dec_label_pc_17229
  %v1_17233 = call i32 @function_1723a()
  br label %dec_label_pc_17235

dec_label_pc_17235:                               ; preds = %bb, %dec_label_pc_17229
  %v2_17233 = phi i32 [ %v1_17233, %bb ], [ %v2_1722c, %dec_label_pc_17229 ]
  ret i32 %v2_17233
}

define i32 @function_1723a() local_unnamed_addr {
dec_label_pc_1723a:
  %v0_17240 = load i32, i32* @eax, align 4
  ret i32 %v0_17240
}

define i32 @_ZN5boost7bad_getC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17242:
  store i32 ptrtoint (%vtable_2b498_type* @global_var_2b498.1839 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17279

bb:                                               ; preds = %dec_label_pc_17242
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_17277 = call i32 @function_1727e(i32 %tmp100)
  br label %dec_label_pc_17279

dec_label_pc_17279:                               ; preds = %bb, %dec_label_pc_17242
  %v3_17277 = phi i32 [ %v2_17277, %bb ], [ 0, %dec_label_pc_17242 ]
  ret i32 %v3_17277

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1727e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1727e:
  %v0_1727f = load i32, i32* @eax, align 4
  ret i32 %v0_1727f
}

define i32 @_ZN5boost7bad_getD1Ev(i32* %arg1) {
dec_label_pc_17280:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2b498_type* @global_var_2b498.1839 to i32), i32* %arg1, align 4
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_2b498_type* @global_var_2b498.1839 to i32), { 1, 0 }
}

define i32 @function_172d2() local_unnamed_addr {
dec_label_pc_172d2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_172d2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_172d2 = add i32 %v0_172d2, -1
  store i32 %v1_172d2, i32* %ecx.global-to-local, align 4
  %v0_172d4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_172d4
}

define i32 @_ZN5boost7bad_getD0Ev(i32 %arg1) {
dec_label_pc_172d6:
  %v1_172f3 = call i32 @unknown_2e556(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_17313() local_unnamed_addr {
dec_label_pc_17313:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_17313 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17313 = add i32 %v0_17313, -1
  store i32 %v1_17313, i32* %ecx.global-to-local, align 4
  %v0_17315 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17315
}

define i32 @_ZN5boost3getIdSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_13add_referenceIKT_E4typeERKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_17316:
  %v1_17334 = call i32 @unknown_318ba(i32 %arg1)
  %v10_1733c = icmp eq i32 %v1_17334, 0
  %v1_17340 = icmp eq i1 %v10_1733c, false
  br i1 %v1_17340, label %bb, label %dec_label_pc_17342

bb:                                               ; preds = %dec_label_pc_17316
  %v3_17340 = call i32 @function_17377(i32 %v1_17334)
  br label %dec_label_pc_17342

dec_label_pc_17342:                               ; preds = %bb, %dec_label_pc_17316
  %v2_17342 = phi i32 [ %v3_17340, %bb ], [ %v1_17334, %dec_label_pc_17316 ]
  ret i32 %v2_17342
}

define i32 @function_1734f() local_unnamed_addr {
dec_label_pc_1734f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1734f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1734f
}

define i32 @function_17377(i32 %arg1) local_unnamed_addr {
dec_label_pc_17377:
  %v0_17377 = load i32, i32* @ebp, align 4
  %v1_17377 = add i32 %v0_17377, -16
  %v2_17377 = inttoptr i32 %v1_17377 to i32*
  %v3_17377 = load i32, i32* %v2_17377, align 4
  store i32 %v3_17377, i32* @eax, align 4
  %v1_1737a = add i32 %v0_17377, -12
  %v2_1737a = inttoptr i32 %v1_1737a to i32*
  %v3_1737a = load i32, i32* %v2_1737a, align 4
  %v1_1737d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1737d = icmp eq i32 %v1_1737d, %v3_1737a
  br i1 %v3_1737d, label %bb, label %dec_label_pc_17386

bb:                                               ; preds = %dec_label_pc_17377
  %v1_17384 = call i32 @function_1738b()
  br label %dec_label_pc_17386

dec_label_pc_17386:                               ; preds = %bb, %dec_label_pc_17377
  %v2_17384 = phi i32 [ %v1_17384, %bb ], [ %v3_17377, %dec_label_pc_17377 ]
  ret i32 %v2_17384
}

define i32 @function_1738b() local_unnamed_addr {
dec_label_pc_1738b:
  %v0_17390 = load i32, i32* @eax, align 4
  ret i32 %v0_17390
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IbEERT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17392:
  %ebx.global-to-local = alloca i32, align 4
  %v1_173b3 = add i32 %arg1, 4
  store i32 %v1_173b3, i32* @eax, align 4
  %v1_173b9 = call i32 @function_2b9be(i32 %v1_173b3)
  %v0_173be = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_173be, 16777216
  %v4_173d7 = sdiv i32 %sext, 16777216
  %v5_173d7 = call i32 @unknown_31980(i32 %arg1, i32 %arg2, i32 1, i32 %v4_173d7)
  %v0_173dc = call i32 @function_173f8()
  ret i32 %v0_173dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_173df() local_unnamed_addr {
dec_label_pc_173df:
  %eax.global-to-local = alloca i32, align 4
  %v0_173df = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_173df
}

define i32 @function_173f8() local_unnamed_addr {
dec_label_pc_173f8:
  %v0_173f8 = load i32, i32* @ebp, align 4
  %v1_173f8 = add i32 %v0_173f8, -12
  %v2_173f8 = inttoptr i32 %v1_173f8 to i32*
  %v3_173f8 = load i32, i32* %v2_173f8, align 4
  %v1_173fb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_173fb = xor i32 %v1_173fb, %v3_173f8
  %v3_173fb = icmp eq i32 %v2_173fb, 0
  store i32 %v2_173fb, i32* @eax, align 4
  br i1 %v3_173fb, label %bb, label %dec_label_pc_17404

bb:                                               ; preds = %dec_label_pc_173f8
  %v1_17402 = call i32 @function_17409()
  br label %dec_label_pc_17404

dec_label_pc_17404:                               ; preds = %bb, %dec_label_pc_173f8
  %v2_17402 = phi i32 [ %v1_17402, %bb ], [ %v2_173fb, %dec_label_pc_173f8 ]
  ret i32 %v2_17402
}

define i32 @function_17409() local_unnamed_addr {
dec_label_pc_17409:
  %v0_1740e = load i32, i32* @eax, align 4
  ret i32 %v0_1740e
}

define i32 @_ZN5boost9addressofISt6vectorI7uint256SaIS2_EEEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1740f:
  %stack_var_-20 = alloca i32, align 4
  %v2_1742d = ptrtoint i32* %stack_var_-20 to i32
  %v2_17433 = call i32 @unknown_31a71(i32 %v2_1742d, i32 %arg1)
  %v1_1743e = call i32 @unknown_31aa9(i32 %v2_1742d)
  %v2_1744e = call i32 @unknown_31ad8(i32 %v1_1743e, i32 0)
  store i32 %v2_1744e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1745f

bb:                                               ; preds = %dec_label_pc_1740f
  %v1_1745d = call i32 @function_17464()
  br label %dec_label_pc_1745f

dec_label_pc_1745f:                               ; preds = %bb, %dec_label_pc_1740f
  %v2_1745d = phi i32 [ %v1_1745d, %bb ], [ %v2_1744e, %dec_label_pc_1740f ]
  ret i32 %v2_1745d
}

define i32 @function_17464() local_unnamed_addr {
dec_label_pc_17464:
  %v0_17465 = load i32, i32* @eax, align 4
  ret i32 %v0_17465
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt6vectorI7uint256SaIS3_EEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17466:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_17489 = call i32 @unknown_2c0da(i32 %tmp102)
  %v1_17491 = inttoptr i32 %arg2 to i32*
  %v2_17491 = load i32, i32* %v1_17491, align 4
  store i32 %v2_17491, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_174a4

bb:                                               ; preds = %dec_label_pc_17466
  %v1_174a2 = call i32 @function_174a9()
  br label %dec_label_pc_174a4

dec_label_pc_174a4:                               ; preds = %bb, %dec_label_pc_17466
  %v2_174a2 = phi i32 [ %v1_174a2, %bb ], [ 0, %dec_label_pc_17466 ]
  ret i32 %v2_174a2
}

define i32 @function_174a9() local_unnamed_addr {
dec_label_pc_174a9:
  %v0_174aa = load i32, i32* @eax, align 4
  ret i32 %v0_174aa
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt6vectorI7uint256SaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SD_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_174ab:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_174d1

bb:                                               ; preds = %dec_label_pc_174ab
  %v2_174cf = call i32 @function_174d6(i32 %arg1)
  br label %dec_label_pc_174d1

dec_label_pc_174d1:                               ; preds = %bb, %dec_label_pc_174ab
  %v3_174cf = phi i32 [ %v2_174cf, %bb ], [ %arg1, %dec_label_pc_174ab ]
  ret i32 %v3_174cf
}

define i32 @function_174d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_174d6:
  %v0_174d7 = load i32, i32* @eax, align 4
  ret i32 %v0_174d7
}

define i32 @_ZN5boost15foreach_detail_7derefofISt6vectorI7uint256SaIS3_EEEERT_PS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_174d8:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_174fe

bb:                                               ; preds = %dec_label_pc_174d8
  %v2_174fc = call i32 @function_17503(i32 %arg1)
  br label %dec_label_pc_174fe

dec_label_pc_174fe:                               ; preds = %bb, %dec_label_pc_174d8
  %v3_174fc = phi i32 [ %v2_174fc, %bb ], [ %arg1, %dec_label_pc_174d8 ]
  ret i32 %v3_174fc
}

define i32 @function_17503(i32 %arg1) local_unnamed_addr {
dec_label_pc_17503:
  %v0_17504 = load i32, i32* @eax, align 4
  ret i32 %v0_17504
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorI7uint256SaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17505:
  %v2_1752f = call i32 @unknown_31c01(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17546

bb:                                               ; preds = %dec_label_pc_17505
  %v1_17544 = call i32 @function_1754b()
  br label %dec_label_pc_17546

dec_label_pc_17546:                               ; preds = %bb, %dec_label_pc_17505
  %v2_17544 = phi i32 [ %v1_17544, %bb ], [ %arg1, %dec_label_pc_17505 ]
  ret i32 %v2_17544

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1754b() local_unnamed_addr {
dec_label_pc_1754b:
  %v0_1754c = load i32, i32* @eax, align 4
  ret i32 %v0_1754c
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIP7uint256St6vectorIS4_SaIS4_EEEEEC1ERKS9_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17550:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_17573 = call i32 @unknown_2c1c4(i32 %tmp102)
  %v1_1757e = inttoptr i32 %arg2 to i32*
  %v2_1757e = load i32, i32* %v1_1757e, align 4
  store i32 %v2_1757e, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1758e

bb:                                               ; preds = %dec_label_pc_17550
  %v1_1758c = call i32 @function_17593()
  br label %dec_label_pc_1758e

dec_label_pc_1758e:                               ; preds = %bb, %dec_label_pc_17550
  %v2_1758c = phi i32 [ %v1_1758c, %bb ], [ 0, %dec_label_pc_17550 ]
  ret i32 %v2_1758c
}

define i32 @function_17593() local_unnamed_addr {
dec_label_pc_17593:
  %v0_17594 = load i32, i32* @eax, align 4
  ret i32 %v0_17594
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorI7uint256SaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17595:
  %v2_175bf = call i32 @unknown_31cdb(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_175d6

bb:                                               ; preds = %dec_label_pc_17595
  %v1_175d4 = call i32 @function_175db()
  br label %dec_label_pc_175d6

dec_label_pc_175d6:                               ; preds = %bb, %dec_label_pc_17595
  %v2_175d4 = phi i32 [ %v1_175d4, %bb ], [ %arg1, %dec_label_pc_17595 ]
  ret i32 %v2_175d4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_175db() local_unnamed_addr {
dec_label_pc_175db:
  %v0_175dc = load i32, i32* @eax, align 4
  ret i32 %v0_175dc
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIP7uint256St6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SG_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_175df:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17605

bb:                                               ; preds = %dec_label_pc_175df
  %v2_17603 = call i32 @function_1760a(i32 %arg1)
  br label %dec_label_pc_17605

dec_label_pc_17605:                               ; preds = %bb, %dec_label_pc_175df
  %v3_17603 = phi i32 [ %v2_17603, %bb ], [ %arg1, %dec_label_pc_175df ]
  ret i32 %v3_17603
}

define i32 @function_1760a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1760a:
  %v0_1760b = load i32, i32* @eax, align 4
  ret i32 %v0_1760b
}

define i32 @_ZN9__gnu_cxxeqIP7uint256St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1760c:
  %v1_17630 = call i32 @unknown_31d9c(i32 %arg1)
  %v1_17635 = inttoptr i32 %v1_17630 to i32*
  %v2_17635 = load i32, i32* %v1_17635, align 4
  %v1_1763d = call i32 @unknown_31d9c(i32 %arg2)
  %v1_17642 = inttoptr i32 %v1_1763d to i32*
  %v2_17642 = load i32, i32* %v1_17642, align 4
  %v12_17644 = icmp eq i32 %v2_17635, %v2_17642
  %v1_17646 = zext i1 %v12_17644 to i32
  %v3_17646 = and i32 %v2_17642, -256
  %v4_17646 = or i32 %v1_17646, %v3_17646
  store i32 %v4_17646, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17655

bb:                                               ; preds = %dec_label_pc_1760c
  %v1_17653 = call i32 @function_1765a()
  br label %dec_label_pc_17655

dec_label_pc_17655:                               ; preds = %bb, %dec_label_pc_1760c
  %v2_17653 = phi i32 [ %v1_17653, %bb ], [ %v4_17646, %dec_label_pc_1760c ]
  ret i32 %v2_17653

; uselistorder directives
  uselistorder i32 %v2_17642, { 1, 0 }
  uselistorder i32 (i32)* @unknown_31d9c, { 1, 0 }
}

define i32 @function_1765a() local_unnamed_addr {
dec_label_pc_1765a:
  %v0_1765f = load i32, i32* @eax, align 4
  ret i32 %v0_1765f
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP7uint256St6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17660:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1767a = load i32, i32* %arg1, align 4
  %v1_1767c = add i32 %v2_1767a, 32
  store i32 %v1_1767c, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17693

bb:                                               ; preds = %dec_label_pc_17660
  %v2_17691 = call i32 @function_17698(i32 %tmp100)
  br label %dec_label_pc_17693

dec_label_pc_17693:                               ; preds = %bb, %dec_label_pc_17660
  %v3_17691 = phi i32 [ %v2_17691, %bb ], [ %tmp100, %dec_label_pc_17660 ]
  ret i32 %v3_17691
}

define i32 @function_17698(i32 %arg1) local_unnamed_addr {
dec_label_pc_17698:
  %v0_17699 = load i32, i32* @eax, align 4
  ret i32 %v0_17699
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP7uint256St6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1769a:
  %v2_176b4 = load i32, i32* %arg1, align 4
  store i32 %v2_176b4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_176c2

bb:                                               ; preds = %dec_label_pc_1769a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_176c0 = call i32 @function_176c7(i32 %tmp100)
  br label %dec_label_pc_176c2

dec_label_pc_176c2:                               ; preds = %bb, %dec_label_pc_1769a
  %v3_176c0 = phi i32 [ %v2_176c0, %bb ], [ %v2_176b4, %dec_label_pc_1769a ]
  ret i32 %v3_176c0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_176c7(i32 %arg1) local_unnamed_addr {
dec_label_pc_176c7:
  %v0_176c8 = load i32, i32* @eax, align 4
  ret i32 %v0_176c8
}

define i32 @_ZN5boost3getISsSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_176c9:
  %stack_var_-17 = alloca i32, align 4
  %v10_176e0 = icmp eq i32 %arg1, 0
  %v1_176e4 = icmp eq i1 %v10_176e0, false
  br i1 %v1_176e4, label %dec_label_pc_176ed, label %dec_label_pc_176ff

dec_label_pc_176ed:                               ; preds = %dec_label_pc_176c9
  %v2_176ed = ptrtoint i32* %stack_var_-17 to i32
  %v2_176fa = call i32 @unknown_31e87(i32 %arg1, i32 %v2_176ed)
  br label %dec_label_pc_176ff

dec_label_pc_176ff:                               ; preds = %dec_label_pc_176c9, %dec_label_pc_176ed
  %storemerge = phi i32 [ %v2_176fa, %dec_label_pc_176ed ], [ 0, %dec_label_pc_176c9 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1770b

bb:                                               ; preds = %dec_label_pc_176ff
  %v1_17709 = call i32 @function_17710()
  br label %dec_label_pc_1770b

dec_label_pc_1770b:                               ; preds = %bb, %dec_label_pc_176ff
  %v2_17709 = phi i32 [ %v1_17709, %bb ], [ %storemerge, %dec_label_pc_176ff ]
  ret i32 %v2_17709

; uselistorder directives
  uselistorder label %dec_label_pc_176ff, { 1, 0 }
}

define i32 @function_17710() local_unnamed_addr {
dec_label_pc_17710:
  %v0_17711 = load i32, i32* @eax, align 4
  ret i32 %v0_17711
}

define i32 @_ZN5boost3getIbSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_13add_referenceIKT_E4typeERKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_17712:
  %v1_17730 = call i32 @unknown_31f24(i32 %arg1)
  %v10_17738 = icmp eq i32 %v1_17730, 0
  %v1_1773c = icmp eq i1 %v10_17738, false
  br i1 %v1_1773c, label %bb, label %dec_label_pc_1773e

bb:                                               ; preds = %dec_label_pc_17712
  %v3_1773c = call i32 @function_17773(i32 %v1_17730)
  br label %dec_label_pc_1773e

dec_label_pc_1773e:                               ; preds = %bb, %dec_label_pc_17712
  %v2_1773e = phi i32 [ %v3_1773c, %bb ], [ %v1_17730, %dec_label_pc_17712 ]
  ret i32 %v2_1773e
}

define i32 @function_1774b() local_unnamed_addr {
dec_label_pc_1774b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1774b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1774b
}

define i32 @function_17773(i32 %arg1) local_unnamed_addr {
dec_label_pc_17773:
  %v0_17773 = load i32, i32* @ebp, align 4
  %v1_17773 = add i32 %v0_17773, -16
  %v2_17773 = inttoptr i32 %v1_17773 to i32*
  %v3_17773 = load i32, i32* %v2_17773, align 4
  store i32 %v3_17773, i32* @eax, align 4
  %v1_17776 = add i32 %v0_17773, -12
  %v2_17776 = inttoptr i32 %v1_17776 to i32*
  %v3_17776 = load i32, i32* %v2_17776, align 4
  %v1_17779 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_17779 = icmp eq i32 %v1_17779, %v3_17776
  br i1 %v3_17779, label %bb, label %dec_label_pc_17782

bb:                                               ; preds = %dec_label_pc_17773
  %v1_17780 = call i32 @function_17787()
  br label %dec_label_pc_17782

dec_label_pc_17782:                               ; preds = %bb, %dec_label_pc_17773
  %v2_17780 = phi i32 [ %v1_17780, %bb ], [ %v3_17773, %dec_label_pc_17773 ]
  ret i32 %v2_17780
}

define i32 @function_17787() local_unnamed_addr {
dec_label_pc_17787:
  %v0_1778c = load i32, i32* @eax, align 4
  ret i32 %v0_1778c
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1778e:
  %v1_177ae = add i32 %arg2, 4
  %v2_177bb = call i32 @unknown_31fea(i32 %arg1, i32 %v1_177ae)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_177cf

bb:                                               ; preds = %dec_label_pc_1778e
  %v1_177cd = call i32 @function_177d4()
  br label %dec_label_pc_177cf

dec_label_pc_177cf:                               ; preds = %bb, %dec_label_pc_1778e
  %v2_177cd = phi i32 [ %v1_177cd, %bb ], [ %arg1, %dec_label_pc_1778e ]
  ret i32 %v2_177cd

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_177d4() local_unnamed_addr {
dec_label_pc_177d4:
  %v0_177d5 = load i32, i32* @eax, align 4
  ret i32 %v0_177d5
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE4findERS2_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_177d8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v1_17802 = call i32 @unknown_3209c(i32 %arg2)
  %v1_1780f = call i32 @unknown_3206c(i32 %arg2)
  %v2_17814 = ptrtoint i32* %stack_var_-24 to i32
  %v5_17830 = call i32 @unknown_320cc(i32 %v2_17814, i32 %arg2, i32 %v1_1780f, i32 %v1_17802, i32 %arg3)
  %v2_17838 = ptrtoint i32* %stack_var_-20 to i32
  %v2_17845 = call i32 @unknown_2ef66(i32 %v2_17838, i32 %arg2)
  %v2_1785a = call i32 @unknown_2f09c(i32 %v2_17814, i32 %v2_17838)
  %v4_1785f = trunc i32 %v2_1785a to i8
  %v5_1785f = icmp eq i8 %v4_1785f, 0
  %v1_17861 = icmp eq i1 %v5_1785f, false
  br i1 %v1_17861, label %dec_label_pc_1788a, label %dec_label_pc_17863

dec_label_pc_17863:                               ; preds = %dec_label_pc_177d8
  %v3_17863 = load i32, i32* %stack_var_-24, align 4
  %v1_17869 = call i32 @unknown_32180(i32 %v3_17863)
  %v3_17881 = call i32 @unknown_2d30a(i32 %arg2, i32 %arg3, i32 %v1_17869)
  %v4_17886 = trunc i32 %v3_17881 to i8
  %v5_17886 = icmp eq i8 %v4_17886, 0
  br i1 %v5_17886, label %dec_label_pc_178a1, label %dec_label_pc_1788a

dec_label_pc_1788a:                               ; preds = %dec_label_pc_17863, %dec_label_pc_177d8
  %v2_17897 = call i32 @unknown_2ef66(i32 %tmp115, i32 %arg2)
  br label %dec_label_pc_178a9

dec_label_pc_178a1:                               ; preds = %dec_label_pc_17863
  %v3_178a4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_178a4, i32* %arg1, align 4
  br label %dec_label_pc_178a9

dec_label_pc_178a9:                               ; preds = %dec_label_pc_178a1, %dec_label_pc_1788a
  store i32 %tmp115, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_178b8

bb:                                               ; preds = %dec_label_pc_178a9
  %v1_178b6 = call i32 @function_178bd()
  br label %dec_label_pc_178b8

dec_label_pc_178b8:                               ; preds = %bb, %dec_label_pc_178a9
  %v2_178b6 = phi i32 [ %v1_178b6, %bb ], [ %tmp115, %dec_label_pc_178a9 ]
  ret i32 %v2_178b6

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_2ef66, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 5, 4 }
}

define i32 @function_178bd() local_unnamed_addr {
dec_label_pc_178bd:
  %v0_178c1 = load i32, i32* @eax, align 4
  ret i32 %v0_178c1
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint256P11CBlockIndexEEeqERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_178c4:
  %v2_178e4 = load i32, i32* %arg1, align 4
  %v1_178e9 = inttoptr i32 %arg2 to i32*
  %v2_178e9 = load i32, i32* %v1_178e9, align 4
  %v12_178eb = icmp eq i32 %v2_178e4, %v2_178e9
  %v1_178ed = zext i1 %v12_178eb to i32
  %v3_178ed = and i32 %v2_178e9, -256
  %v4_178ed = or i32 %v1_178ed, %v3_178ed
  store i32 %v4_178ed, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_178fc

bb:                                               ; preds = %dec_label_pc_178c4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_178fa = call i32 @function_17901(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_178fc

dec_label_pc_178fc:                               ; preds = %bb, %dec_label_pc_178c4
  %v4_178fa = phi i32 [ %v3_178fa, %bb ], [ %v4_178ed, %dec_label_pc_178c4 ]
  ret i32 %v4_178fa

; uselistorder directives
  uselistorder i32 %v2_178e9, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_17901(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17901:
  %v0_17902 = load i32, i32* @eax, align 4
  ret i32 %v0_17902
}

define i32 @_ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE11lower_boundERS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17904:
  %v3_1793b = call i32 @unknown_322f0(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17952

bb:                                               ; preds = %dec_label_pc_17904
  %v1_17950 = call i32 @function_17957()
  br label %dec_label_pc_17952

dec_label_pc_17952:                               ; preds = %bb, %dec_label_pc_17904
  %v2_17950 = phi i32 [ %v1_17950, %bb ], [ %arg1, %dec_label_pc_17904 ]
  ret i32 %v2_17950

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17957() local_unnamed_addr {
dec_label_pc_17957:
  %v0_17958 = load i32, i32* @eax, align 4
  ret i32 %v0_17958
}

define i32 @_ZNKSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1795c:
  %v2_17986 = call i32 @unknown_323c4(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1799d

bb:                                               ; preds = %dec_label_pc_1795c
  %v1_1799b = call i32 @function_179a2()
  br label %dec_label_pc_1799d

dec_label_pc_1799d:                               ; preds = %bb, %dec_label_pc_1795c
  %v2_1799b = phi i32 [ %v1_1799b, %bb ], [ %arg1, %dec_label_pc_1795c ]
  ret i32 %v2_1799b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_179a2() local_unnamed_addr {
dec_label_pc_179a2:
  %v0_179a3 = load i32, i32* @eax, align 4
  ret i32 %v0_179a3
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_179a6:
  %v2_179c0 = load i32, i32* %arg1, align 4
  %v1_179c2 = add i32 %v2_179c0, 16
  store i32 %v1_179c2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_179d1

bb:                                               ; preds = %dec_label_pc_179a6
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_179cf = call i32 @function_179d6(i32 %tmp100)
  br label %dec_label_pc_179d1

dec_label_pc_179d1:                               ; preds = %bb, %dec_label_pc_179a6
  %v3_179cf = phi i32 [ %v2_179cf, %bb ], [ %v1_179c2, %dec_label_pc_179a6 ]
  ret i32 %v3_179cf

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_179d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_179d6:
  %v0_179d7 = load i32, i32* @eax, align 4
  ret i32 %v0_179d7
}

define i32 @_ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_179d8:
  %v2_17a02 = call i32 @unknown_32476(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17a19

bb:                                               ; preds = %dec_label_pc_179d8
  %v1_17a17 = call i32 @function_17a1e()
  br label %dec_label_pc_17a19

dec_label_pc_17a19:                               ; preds = %bb, %dec_label_pc_179d8
  %v2_17a17 = phi i32 [ %v1_17a17, %bb ], [ %arg1, %dec_label_pc_179d8 ]
  ret i32 %v2_17a17

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17a1e() local_unnamed_addr {
dec_label_pc_17a1e:
  %v0_17a1f = load i32, i32* @eax, align 4
  ret i32 %v0_17a1f
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEeqERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a22:
  %v2_17a42 = load i32, i32* %arg1, align 4
  %v1_17a47 = inttoptr i32 %arg2 to i32*
  %v2_17a47 = load i32, i32* %v1_17a47, align 4
  %v12_17a49 = icmp eq i32 %v2_17a42, %v2_17a47
  %v1_17a4b = zext i1 %v12_17a49 to i32
  %v3_17a4b = and i32 %v2_17a47, -256
  %v4_17a4b = or i32 %v1_17a4b, %v3_17a4b
  store i32 %v4_17a4b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17a5a

bb:                                               ; preds = %dec_label_pc_17a22
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_17a58 = call i32 @function_17a5f(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_17a5a

dec_label_pc_17a5a:                               ; preds = %bb, %dec_label_pc_17a22
  %v4_17a58 = phi i32 [ %v3_17a58, %bb ], [ %v4_17a4b, %dec_label_pc_17a22 ]
  ret i32 %v4_17a58

; uselistorder directives
  uselistorder i32 %v2_17a47, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_17a5f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a5f:
  %v0_17a60 = load i32, i32* @eax, align 4
  ret i32 %v0_17a60
}

define i32 @_ZNSt4pairIK7uint256P11CBlockIndexEC1ERS1_RKS3_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17a62:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v0_17a7a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v1_17a8b = inttoptr i32 %arg2 to i32*
  %v2_17a8b = load i32, i32* %v1_17a8b, align 4
  store i32 %v2_17a8b, i32* %arg1, align 4
  %v1_17a8f = add i32 %arg2, 4
  %v2_17a8f = inttoptr i32 %v1_17a8f to i32*
  %v3_17a8f = load i32, i32* %v2_17a8f, align 4
  %v1_17a92 = load i32, i32* %eax.global-to-local, align 4
  %v2_17a92 = add i32 %v1_17a92, 4
  %v3_17a92 = inttoptr i32 %v2_17a92 to i32*
  store i32 %v3_17a8f, i32* %v3_17a92, align 4
  %v0_17a95 = load i32, i32* %edx.global-to-local, align 8
  %v1_17a95 = add i32 %v0_17a95, 8
  %v2_17a95 = inttoptr i32 %v1_17a95 to i32*
  %v3_17a95 = load i32, i32* %v2_17a95, align 4
  %v1_17a98 = load i32, i32* %eax.global-to-local, align 4
  %v2_17a98 = add i32 %v1_17a98, 8
  %v3_17a98 = inttoptr i32 %v2_17a98 to i32*
  store i32 %v3_17a95, i32* %v3_17a98, align 4
  %v0_17a9b = load i32, i32* %edx.global-to-local, align 8
  %v1_17a9b = add i32 %v0_17a9b, 12
  %v2_17a9b = inttoptr i32 %v1_17a9b to i32*
  %v3_17a9b = load i32, i32* %v2_17a9b, align 4
  %v1_17a9e = load i32, i32* %eax.global-to-local, align 4
  %v2_17a9e = add i32 %v1_17a9e, 12
  %v3_17a9e = inttoptr i32 %v2_17a9e to i32*
  store i32 %v3_17a9b, i32* %v3_17a9e, align 4
  %v0_17aa1 = load i32, i32* %edx.global-to-local, align 8
  %v1_17aa1 = add i32 %v0_17aa1, 16
  %v2_17aa1 = inttoptr i32 %v1_17aa1 to i32*
  %v3_17aa1 = load i32, i32* %v2_17aa1, align 4
  %v1_17aa4 = load i32, i32* %eax.global-to-local, align 4
  %v2_17aa4 = add i32 %v1_17aa4, 16
  %v3_17aa4 = inttoptr i32 %v2_17aa4 to i32*
  store i32 %v3_17aa1, i32* %v3_17aa4, align 4
  %v0_17aa7 = load i32, i32* %edx.global-to-local, align 8
  %v1_17aa7 = add i32 %v0_17aa7, 20
  %v2_17aa7 = inttoptr i32 %v1_17aa7 to i32*
  %v3_17aa7 = load i32, i32* %v2_17aa7, align 4
  %v1_17aaa = load i32, i32* %eax.global-to-local, align 4
  %v2_17aaa = add i32 %v1_17aaa, 20
  %v3_17aaa = inttoptr i32 %v2_17aaa to i32*
  store i32 %v3_17aa7, i32* %v3_17aaa, align 4
  %v0_17aad = load i32, i32* %edx.global-to-local, align 8
  %v1_17aad = add i32 %v0_17aad, 24
  %v2_17aad = inttoptr i32 %v1_17aad to i32*
  %v3_17aad = load i32, i32* %v2_17aad, align 4
  %v1_17ab0 = load i32, i32* %eax.global-to-local, align 4
  %v2_17ab0 = add i32 %v1_17ab0, 24
  %v3_17ab0 = inttoptr i32 %v2_17ab0 to i32*
  store i32 %v3_17aad, i32* %v3_17ab0, align 4
  %v0_17ab3 = load i32, i32* %edx.global-to-local, align 8
  %v1_17ab3 = add i32 %v0_17ab3, 28
  %v2_17ab3 = inttoptr i32 %v1_17ab3 to i32*
  %v3_17ab3 = load i32, i32* %v2_17ab3, align 4
  store i32 %v3_17ab3, i32* %edx.global-to-local, align 8
  %v1_17ab6 = load i32, i32* %eax.global-to-local, align 4
  %v2_17ab6 = add i32 %v1_17ab6, 28
  %v3_17ab6 = inttoptr i32 %v2_17ab6 to i32*
  store i32 %v3_17ab3, i32* %v3_17ab6, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_17abc = inttoptr i32 %arg3 to i32*
  %v2_17abc = load i32, i32* %v1_17abc, align 4
  store i32 %v2_17abc, i32* %edx.global-to-local, align 8
  %v2_17ac1 = add i32 %tmp104, 32
  %v3_17ac1 = inttoptr i32 %v2_17ac1 to i32*
  store i32 %v2_17abc, i32* %v3_17ac1, align 4
  store i32 %v0_17a7a, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17ad0

bb:                                               ; preds = %dec_label_pc_17a62
  %v4_17ace = call i32 @function_17ad5(i32 %arg3, i32 %arg2, i32 %tmp104)
  store i32 %v4_17ace, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_17ad0

dec_label_pc_17ad0:                               ; preds = %bb, %dec_label_pc_17a62
  %v5_17ace = phi i32 [ %v4_17ace, %bb ], [ 0, %dec_label_pc_17a62 ]
  ret i32 %v5_17ace

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
}

define i32 @function_17ad5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17ad5:
  %v0_17ad6 = load i32, i32* @eax, align 4
  ret i32 %v0_17ad6
}

define i32 @_ZNSt3mapI7uint256P11CBlockIndexSt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertESt17_Rb_tree_iteratorIS7_ERKS7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17ad8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_17b04 = ptrtoint i32* %stack_var_-40 to i32
  %v2_17b08 = ptrtoint i32* %stack_var_-20 to i32
  %v2_17b0e = call i32 @unknown_325c0(i32 %v2_17b08, i32 %v4_17b04)
  %v3_17b20 = load i32, i32* %stack_var_-20, align 4
  %v4_17b2e = call i32 @unknown_325fa(i32 %arg1, i32 %arg2, i32 %v3_17b20, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17b45

bb:                                               ; preds = %dec_label_pc_17ad8
  %v1_17b43 = call i32 @function_17b4a()
  br label %dec_label_pc_17b45

dec_label_pc_17b45:                               ; preds = %bb, %dec_label_pc_17ad8
  %v2_17b43 = phi i32 [ %v1_17b43, %bb ], [ %arg1, %dec_label_pc_17ad8 ]
  ret i32 %v2_17b43

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17b4a() local_unnamed_addr {
dec_label_pc_17b4a:
  %v0_17b4b = load i32, i32* @eax, align 4
  ret i32 %v0_17b4b
}

define i32 @_Z9SerializeI11CDataStream6CBlockEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17b4e:
  %v8_17b92 = call i32 @unknown_32a8c(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17ba3

bb:                                               ; preds = %dec_label_pc_17b4e
  %v1_17ba1 = call i32 @function_17ba8()
  br label %dec_label_pc_17ba3

dec_label_pc_17ba3:                               ; preds = %bb, %dec_label_pc_17b4e
  %v2_17ba1 = phi i32 [ %v1_17ba1, %bb ], [ 0, %dec_label_pc_17b4e ]
  ret i32 %v2_17ba1

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17ba8() local_unnamed_addr {
dec_label_pc_17ba8:
  %v0_17ba9 = load i32, i32* @eax, align 4
  ret i32 %v0_17ba9
}

define i32 @_ZN9__gnu_cxxltIPcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17baa:
  store i32 %arg1, i32* @eax, align 4
  %v1_17bce = call i32 @function_2bd10(i32 %arg1)
  %v1_17bd3 = inttoptr i32 %v1_17bce to i32*
  %v2_17bd3 = load i32, i32* %v1_17bd3, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_17bdb = call i32 @function_2bd10(i32 %arg2)
  %v1_17be0 = inttoptr i32 %v1_17bdb to i32*
  %v2_17be0 = load i32, i32* %v1_17be0, align 4
  %v7_17be2 = icmp ult i32 %v2_17bd3, %v2_17be0
  %v1_17be4 = zext i1 %v7_17be2 to i32
  %v3_17be4 = and i32 %v2_17be0, -256
  %v4_17be4 = or i32 %v1_17be4, %v3_17be4
  store i32 %v4_17be4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17bf3

bb:                                               ; preds = %dec_label_pc_17baa
  %v1_17bf1 = call i32 @function_17bf8()
  br label %dec_label_pc_17bf3

dec_label_pc_17bf3:                               ; preds = %bb, %dec_label_pc_17baa
  %v2_17bf1 = phi i32 [ %v1_17bf1, %bb ], [ %v4_17be4, %dec_label_pc_17baa ]
  ret i32 %v2_17bf1

; uselistorder directives
  uselistorder i32 (i32)* @function_2bd10, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17bf8() local_unnamed_addr {
dec_label_pc_17bf8:
  %v0_17bfd = load i32, i32* @eax, align 4
  ret i32 %v0_17bfd
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17bfe:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_17c18 = load i32, i32* %arg1, align 4
  %v1_17c1a = add i32 %v2_17c18, 1
  store i32 %v1_17c1a, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17c31

bb:                                               ; preds = %dec_label_pc_17bfe
  %v2_17c2f = call i32 @function_17c36(i32 %tmp100)
  br label %dec_label_pc_17c31

dec_label_pc_17c31:                               ; preds = %bb, %dec_label_pc_17bfe
  %v3_17c2f = phi i32 [ %v2_17c2f, %bb ], [ %tmp100, %dec_label_pc_17bfe ]
  ret i32 %v3_17c2f
}

define i32 @function_17c36(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c36:
  %v0_17c37 = load i32, i32* @eax, align 4
  ret i32 %v0_17c37
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17c38:
  %v2_17c52 = load i32, i32* %arg1, align 4
  store i32 %v2_17c52, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17c60

bb:                                               ; preds = %dec_label_pc_17c38
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_17c5e = call i32 @function_17c65(i32 %tmp100)
  br label %dec_label_pc_17c60

dec_label_pc_17c60:                               ; preds = %bb, %dec_label_pc_17c38
  %v3_17c5e = phi i32 [ %v2_17c5e, %bb ], [ %v2_17c52, %dec_label_pc_17c38 ]
  ret i32 %v3_17c5e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_17c65(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c65:
  %v0_17c66 = load i32, i32* @eax, align 4
  ret i32 %v0_17c66
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IS9_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17c68:
  %ebx.global-to-local = alloca i32, align 4
  %v1_17c89 = add i32 %arg1, 4
  %v1_17c8f = call i32 @unknown_2c294(i32 %v1_17c89)
  %v0_17c94 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_17c94, 16777216
  %v4_17cad = sdiv i32 %sext, 16777216
  %v5_17cad = call i32 @unknown_32c4c(i32 %arg1, i32 %arg2, i32 1, i32 %v4_17cad)
  %v0_17cb2 = call i32 @function_17cce()
  ret i32 %v0_17cb2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17cb5() local_unnamed_addr {
dec_label_pc_17cb5:
  %eax.global-to-local = alloca i32, align 4
  %v0_17cb5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17cb5
}

define i32 @function_17cce() local_unnamed_addr {
dec_label_pc_17cce:
  %v0_17cce = load i32, i32* @ebp, align 4
  %v1_17cce = add i32 %v0_17cce, -12
  %v2_17cce = inttoptr i32 %v1_17cce to i32*
  %v3_17cce = load i32, i32* %v2_17cce, align 4
  %v1_17cd1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17cd1 = xor i32 %v1_17cd1, %v3_17cce
  %v3_17cd1 = icmp eq i32 %v2_17cd1, 0
  store i32 %v2_17cd1, i32* @eax, align 4
  br i1 %v3_17cd1, label %bb, label %dec_label_pc_17cda

bb:                                               ; preds = %dec_label_pc_17cce
  %v1_17cd8 = call i32 @function_17cdf()
  br label %dec_label_pc_17cda

dec_label_pc_17cda:                               ; preds = %bb, %dec_label_pc_17cce
  %v2_17cd8 = phi i32 [ %v1_17cd8, %bb ], [ %v2_17cd1, %dec_label_pc_17cce ]
  ret i32 %v2_17cd8
}

define i32 @function_17cdf() local_unnamed_addr {
dec_label_pc_17cdf:
  %v0_17ce4 = load i32, i32* @eax, align 4
  ret i32 %v0_17ce4
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ce6:
  %v1_17d03 = add i32 %arg1, 4
  %v1_17d09 = call i32 @unknown_2c312(i32 %v1_17d03)
  %v1_17d17 = call i32 @unknown_304bc(i32 %v1_17d03)
  %v2_17d29 = call i32 @function_1bf2c(i32 4, i32 %v1_17d17)
  %v1_17d30 = icmp eq i32 %v2_17d29, 0
  br i1 %v1_17d30, label %bb, label %dec_label_pc_17d34

bb:                                               ; preds = %dec_label_pc_17ce6
  %v1_17d32 = call i32 @function_17d3c()
  br label %dec_label_pc_17d34

dec_label_pc_17d34:                               ; preds = %bb, %dec_label_pc_17ce6
  %v3_17d34 = phi i32 [ %v1_17d32, %bb ], [ %v2_17d29, %dec_label_pc_17ce6 ]
  ret i32 %v3_17d34
}

define i32 @function_17d3c() local_unnamed_addr {
dec_label_pc_17d3c:
  %v0_17d44 = load i32, i32* @ebp, align 4
  %v1_17d44 = add i32 %v0_17d44, -44
  %v2_17d44 = inttoptr i32 %v1_17d44 to i32*
  %v3_17d44 = load i32, i32* %v2_17d44, align 4
  %v2_17d4a = call i32 @unknown_32190(i32 %v3_17d44, i32 0)
  %v0_17d4f = load i32, i32* @ebp, align 4
  %v1_17d4f = add i32 %v0_17d4f, -28
  %v2_17d4f = inttoptr i32 %v1_17d4f to i32*
  %v3_17d4f = load i32, i32* %v2_17d4f, align 4
  %v1_17d52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17d52 = xor i32 %v1_17d52, %v3_17d4f
  %v3_17d52 = icmp eq i32 %v2_17d52, 0
  store i32 %v2_17d52, i32* @eax, align 4
  br i1 %v3_17d52, label %bb, label %dec_label_pc_17d5b

bb:                                               ; preds = %dec_label_pc_17d3c
  %v1_17d59 = call i32 @function_17d8e()
  store i32 %v1_17d59, i32* @eax, align 4
  br label %dec_label_pc_17d5b

dec_label_pc_17d5b:                               ; preds = %bb, %dec_label_pc_17d3c
  %v0_17d5b = call i32 @function_17d89()
  ret i32 %v0_17d5b
}

define i32 @function_17d5d() local_unnamed_addr {
dec_label_pc_17d5d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17d5d = load i32, i32* %eax.global-to-local, align 4
  %v0_17d5f = load i32, i32* %esi.global-to-local, align 4
  %v0_17d63 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_17d5d, i32* @ebx, align 4
  %v2_17d6d = call i32 @function_17d71(i32 %v0_17d63, i32 %v0_17d5f)
  store i32 %v2_17d6d, i32* %eax.global-to-local, align 4
  ret i32 %v2_17d6d
}

define i32 @function_17d6f() local_unnamed_addr {
dec_label_pc_17d6f:
  %eax.global-to-local = alloca i32, align 4
  %v0_17d6f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17d6f
}

define i32 @function_17d71(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17d71:
  %v0_17d71 = load i32, i32* @ebp, align 4
  %v1_17d71 = add i32 %v0_17d71, -44
  %v2_17d71 = inttoptr i32 %v1_17d71 to i32*
  %v3_17d71 = load i32, i32* %v2_17d71, align 4
  %v1_17d74 = add i32 %v3_17d71, 4
  %v1_17d7a = call i32 @unknown_2c252(i32 %v1_17d74)
  %v0_17d7f = load i32, i32* @ebx, align 4
  ret i32 %v0_17d7f
}

define i32 @function_17d89() local_unnamed_addr {
dec_label_pc_17d89:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_17d8e() local_unnamed_addr {
dec_label_pc_17d8e:
  %v0_17d95 = load i32, i32* @eax, align 4
  ret i32 %v0_17d95
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17d96:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 4
  %v2_17dc0 = call i32 @function_28612(i32 %tmp103, i32 %arg2)
  %v1_17dc8 = add i32 %tmp103, 8
  store i32 %v1_17dc8, i32* @eax, align 4
  %v1_17dce = call i32 @function_1c40c(i32 %v1_17dc8)
  store i32 ptrtoint (%vtable_2b390_type* @global_var_2b390.1822 to i32), i32* %arg1, align 4
  %v2_17ddf = inttoptr i32 %v1_17dc8 to i32*
  store i32 ptrtoint (i32* @global_var_2b3a4.1823 to i32), i32* %v2_17ddf, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17df2

bb:                                               ; preds = %dec_label_pc_17d96
  %v1_17df0 = call i32 @function_17df7()
  br label %dec_label_pc_17df2

dec_label_pc_17df2:                               ; preds = %bb, %dec_label_pc_17d96
  %v2_17df0 = phi i32 [ %v1_17df0, %bb ], [ 0, %dec_label_pc_17d96 ]
  ret i32 %v2_17df0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_2b390_type* @global_var_2b390.1822 to i32), { 2, 1, 0 }
}

define i32 @function_17df7() local_unnamed_addr {
dec_label_pc_17df7:
  %v0_17df8 = load i32, i32* @eax, align 4
  ret i32 %v0_17df8
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17dfa:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_17e2d = add i32 %tmp102, 28
  %v2_17e33 = call i32 @unknown_2c676(i32 %v1_17e2d, i32 %arg2)
  store i32 ptrtoint (%vtable_2b330_type* @global_var_2b330.1824 to i32), i32* %arg1, align 4
  %v1_17e44 = add i32 %tmp102, 8
  %v2_17e44 = inttoptr i32 %v1_17e44 to i32*
  store i32 ptrtoint (i32* @global_var_2b34c.1825 to i32), i32* %v2_17e44, align 4
  %v2_17e4e = inttoptr i32 %v1_17e2d to i32*
  store i32 ptrtoint (i32* @global_var_2b35c.1826 to i32), i32* %v2_17e4e, align 4
  %v1_17e58 = add i32 %arg2, 8
  store i32 %v1_17e44, i32* @eax, align 4
  %v2_17e68 = call i32 @function_1d588(i32 %v1_17e44, i32 %v1_17e58)
  %v0_17e6d = call i32 @function_17e94()
  ret i32 %v0_17e6d

; uselistorder directives
  uselistorder i32 %v1_17e44, { 1, 0, 2 }
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_2b330_type* @global_var_2b330.1824 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_17e70() local_unnamed_addr {
dec_label_pc_17e70:
  %eax.global-to-local = alloca i32, align 4
  %v0_17e70 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17e70
}

define i32 @function_17e94() local_unnamed_addr {
dec_label_pc_17e94:
  %v0_17e94 = load i32, i32* @ebp, align 4
  %v1_17e94 = add i32 %v0_17e94, -12
  %v2_17e94 = inttoptr i32 %v1_17e94 to i32*
  %v3_17e94 = load i32, i32* %v2_17e94, align 4
  %v1_17e97 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17e97 = xor i32 %v1_17e97, %v3_17e94
  %v3_17e97 = icmp eq i32 %v2_17e97, 0
  store i32 %v2_17e97, i32* @eax, align 4
  br i1 %v3_17e97, label %bb, label %dec_label_pc_17ea0

bb:                                               ; preds = %dec_label_pc_17e94
  %v1_17e9e = call i32 @function_17ea5()
  br label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %bb, %dec_label_pc_17e94
  %v2_17e9e = phi i32 [ %v1_17e9e, %bb ], [ %v2_17e97, %dec_label_pc_17e94 ]
  ret i32 %v2_17e9e
}

define i32 @function_17ea5() local_unnamed_addr {
dec_label_pc_17ea5:
  %v0_17eaa = load i32, i32* @eax, align 4
  ret i32 %v0_17eaa
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17eac:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp100, i32* @eax, align 4
  %v1_17ec9 = call i32 @function_28a1e(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_17eda = add i32 %tmp100, 4
  %v2_17eda = inttoptr i32 %v1_17eda to i32*
  store i32 0, i32* %v2_17eda, align 4
  %v1_17ee4 = add i32 %tmp100, 8
  %v2_17ee4 = inttoptr i32 %v1_17ee4 to i32*
  store i32 0, i32* %v2_17ee4, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17ef7

bb:                                               ; preds = %dec_label_pc_17eac
  %v1_17ef5 = call i32 @function_17efc()
  br label %dec_label_pc_17ef7

dec_label_pc_17ef7:                               ; preds = %bb, %dec_label_pc_17eac
  %v2_17ef5 = phi i32 [ %v1_17ef5, %bb ], [ 0, %dec_label_pc_17eac ]
  ret i32 %v2_17ef5

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_17efc() local_unnamed_addr {
dec_label_pc_17efc:
  %v0_17efd = load i32, i32* @eax, align 4
  ret i32 %v0_17efd
}

define i32 @_ZSt11__addressofIcEPT_RS0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_17efe:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17f24

bb:                                               ; preds = %dec_label_pc_17efe
  %v2_17f22 = call i32 @function_17f29(i32 %arg1)
  br label %dec_label_pc_17f24

dec_label_pc_17f24:                               ; preds = %bb, %dec_label_pc_17efe
  %v3_17f22 = phi i32 [ %v2_17f22, %bb ], [ %arg1, %dec_label_pc_17efe ]
  ret i32 %v3_17f22
}

define i32 @function_17f29(i32 %arg1) local_unnamed_addr {
dec_label_pc_17f29:
  %v0_17f2a = load i32, i32* @eax, align 4
  ret i32 %v0_17f2a
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f2c:
  %v10_17f49 = icmp eq i32 %arg2, 0
  br i1 %v10_17f49, label %dec_label_pc_17f70, label %dec_label_pc_17f4f

dec_label_pc_17f4f:                               ; preds = %dec_label_pc_17f2c
  %v3_17f64 = call i32 @unknown_330b4(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_17f70

dec_label_pc_17f70:                               ; preds = %dec_label_pc_17f2c, %dec_label_pc_17f4f
  %storemerge = phi i32 [ %v3_17f64, %dec_label_pc_17f4f ], [ 0, %dec_label_pc_17f2c ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17f7c

bb:                                               ; preds = %dec_label_pc_17f70
  %v1_17f7a = call i32 @function_17f81()
  br label %dec_label_pc_17f7c

dec_label_pc_17f7c:                               ; preds = %bb, %dec_label_pc_17f70
  %v2_17f7a = phi i32 [ %v1_17f7a, %bb ], [ %storemerge, %dec_label_pc_17f70 ]
  ret i32 %v2_17f7a

; uselistorder directives
  uselistorder label %dec_label_pc_17f70, { 1, 0 }
}

define i32 @function_17f81() local_unnamed_addr {
dec_label_pc_17f81:
  %v0_17f82 = load i32, i32* @eax, align 4
  ret i32 %v0_17f82
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17f84:
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17fac

bb:                                               ; preds = %dec_label_pc_17f84
  %v2_17faa = call i32 @function_17fb1(i32 %arg1)
  br label %dec_label_pc_17fac

dec_label_pc_17fac:                               ; preds = %bb, %dec_label_pc_17f84
  %v3_17faa = phi i32 [ %v2_17faa, %bb ], [ -1, %dec_label_pc_17f84 ]
  ret i32 %v3_17faa
}

define i32 @function_17fb1(i32 %arg1) local_unnamed_addr {
dec_label_pc_17fb1:
  %v0_17fb2 = load i32, i32* @eax, align 4
  ret i32 %v0_17fb2
}

define i32 @_ZSt22__uninitialized_copy_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17fb3:
  %v15_18010112 = icmp eq i32 %arg1, %arg2
  %v1_18013113 = icmp eq i1 %v15_18010112, false
  %v5_18016114 = icmp eq i1 %v1_18013113, false
  %v1_18018115 = icmp eq i1 %v5_18016114, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_18018115, label %dec_label_pc_17fe4, label %dec_label_pc_1801a

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17fb3, %dec_label_pc_17fe4
  %storemerge117 = phi i32 [ %v4_18009, %dec_label_pc_17fe4 ], [ %arg3, %dec_label_pc_17fb3 ]
  %stack_var_-32.0116 = phi i32 [ %v4_18005, %dec_label_pc_17fe4 ], [ %arg1, %dec_label_pc_17fb3 ]
  %v1_17fea = call i32 @unknown_2feb1(i32 %storemerge117)
  %v3_18000 = call i32 @unknown_2c0c3(i32 %arg4, i32 %v1_17fea, i32 %stack_var_-32.0116)
  %v4_18005 = add i32 %stack_var_-32.0116, 1
  %v4_18009 = add i32 %storemerge117, 1
  %v15_18010 = icmp eq i32 %v4_18005, %arg2
  %v1_18013 = icmp eq i1 %v15_18010, false
  %v5_18016 = icmp eq i1 %v1_18013, false
  %v1_18018 = icmp eq i1 %v5_18016, false
  store i32 %v4_18009, i32* @eax, align 4
  br i1 %v1_18018, label %dec_label_pc_17fe4, label %dec_label_pc_1801a

dec_label_pc_1801a:                               ; preds = %dec_label_pc_17fe4, %dec_label_pc_17fb3
  %storemerge.lcssa = phi i32 [ %arg3, %dec_label_pc_17fb3 ], [ %v4_18009, %dec_label_pc_17fe4 ]
  br i1 true, label %bb, label %dec_label_pc_18029

bb:                                               ; preds = %dec_label_pc_1801a
  %v1_18027 = call i32 @function_1802e()
  br label %dec_label_pc_18029

dec_label_pc_18029:                               ; preds = %bb, %dec_label_pc_1801a
  %v2_18027 = phi i32 [ %v1_18027, %bb ], [ %storemerge.lcssa, %dec_label_pc_1801a ]
  ret i32 %v2_18027

; uselistorder directives
  uselistorder i32 %v4_18009, { 0, 2, 1 }
  uselistorder i32 %v4_18005, { 1, 0 }
  uselistorder i32 %stack_var_-32.0116, { 1, 0 }
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_17fe4, { 1, 0 }
}

define i32 @function_1802e() local_unnamed_addr {
dec_label_pc_1802e:
  %v0_1802f = load i32, i32* @eax, align 4
  ret i32 %v0_1802f
}

define i32 @_ZN25zero_after_free_allocatorIcE10deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18030:
  %v10_18053 = icmp eq i32 %arg2, 0
  br i1 %v10_18053, label %bb, label %dec_label_pc_18059

bb:                                               ; preds = %dec_label_pc_18030
  %v4_18057 = call i32 @function_1806b(i32 %arg3, i32 0, i32 %arg1)
  br label %dec_label_pc_18059

dec_label_pc_18059:                               ; preds = %bb, %dec_label_pc_18030
  ret i32 %arg2
}

define i32 @function_1806b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1806b:
  %v0_1806b = load i32, i32* @ebp, align 4
  %v1_1806b = add i32 %v0_1806b, -36
  %v2_1806b = inttoptr i32 %v1_1806b to i32*
  %v3_1806b = load i32, i32* %v2_1806b, align 4
  %v1_18072 = add i32 %v0_1806b, -32
  %v2_18072 = inttoptr i32 %v1_18072 to i32*
  %v3_18072 = load i32, i32* %v2_18072, align 4
  %v1_18079 = add i32 %v0_1806b, -28
  %v2_18079 = inttoptr i32 %v1_18079 to i32*
  %v3_18079 = load i32, i32* %v2_18079, align 4
  %v3_1807f = call i32 @unknown_33214(i32 %v3_18079, i32 %v3_18072, i32 %v3_1806b)
  %v0_18084 = load i32, i32* @ebp, align 4
  %v1_18084 = add i32 %v0_18084, -12
  %v2_18084 = inttoptr i32 %v1_18084 to i32*
  %v3_18084 = load i32, i32* %v2_18084, align 4
  %v1_18087 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18087 = xor i32 %v1_18087, %v3_18084
  %v3_18087 = icmp eq i32 %v2_18087, 0
  store i32 %v2_18087, i32* @eax, align 4
  br i1 %v3_18087, label %bb, label %dec_label_pc_18090

bb:                                               ; preds = %dec_label_pc_1806b
  %v1_1808e = call i32 @function_18095()
  br label %dec_label_pc_18090

dec_label_pc_18090:                               ; preds = %bb, %dec_label_pc_1806b
  %v2_1808e = phi i32 [ %v1_1808e, %bb ], [ %v2_18087, %dec_label_pc_1806b ]
  ret i32 %v2_1808e
}

define i32 @function_18095() local_unnamed_addr {
dec_label_pc_18095:
  %v0_18096 = load i32, i32* @eax, align 4
  ret i32 %v0_18096
}

define i32 @_ZSt13copy_backwardIPcS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18097:
  %v1_180c1 = call i32 @unknown_332bc(i32 %arg2)
  %v1_180ce = call i32 @unknown_332bc(i32 %arg1)
  %v3_180e1 = call i32 @unknown_332f1(i32 %v1_180ce, i32 %v1_180c1, i32 %arg3)
  store i32 %v3_180e1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_180f2

bb:                                               ; preds = %dec_label_pc_18097
  %v1_180f0 = call i32 @function_180f7()
  br label %dec_label_pc_180f2

dec_label_pc_180f2:                               ; preds = %bb, %dec_label_pc_18097
  %v2_180f0 = phi i32 [ %v1_180f0, %bb ], [ %v3_180e1, %dec_label_pc_18097 ]
  ret i32 %v2_180f0

; uselistorder directives
  uselistorder i32 (i32)* @unknown_332bc, { 1, 0 }
}

define i32 @function_180f7() local_unnamed_addr {
dec_label_pc_180f7:
  %v0_180fc = load i32, i32* @eax, align 4
  ret i32 %v0_180fc
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_180fe:
  %v1_18128 = call i32 @unknown_2c17a(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v1_18135 = call i32 @function_28e6a(i32 %arg1)
  %v0_1813a = load i32, i32* @ebx, align 4
  %v2_1813c = sub i32 %v0_1813a, %v1_18135
  %v7_18141 = icmp ult i32 %v2_1813c, %arg2
  %v5_18146 = icmp eq i1 %v7_18141, false
  br i1 %v5_18146, label %bb, label %dec_label_pc_1814a

bb:                                               ; preds = %dec_label_pc_180fe
  %v1_18148 = call i32 @function_18155()
  br label %dec_label_pc_1814a

dec_label_pc_1814a:                               ; preds = %bb, %dec_label_pc_180fe
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_18155() local_unnamed_addr {
dec_label_pc_18155:
  %v0_18155 = load i32, i32* @ebp, align 4
  %v1_18155 = add i32 %v0_18155, -28
  %v2_18155 = inttoptr i32 %v1_18155 to i32*
  %v3_18155 = load i32, i32* %v2_18155, align 4
  store i32 %v3_18155, i32* @eax, align 4
  %v1_1815b = call i32 @function_28e6a(i32 %v3_18155)
  %v0_18162 = load i32, i32* @ebp, align 4
  %v1_18162 = add i32 %v0_18162, -28
  %v2_18162 = inttoptr i32 %v1_18162 to i32*
  %v3_18162 = load i32, i32* %v2_18162, align 4
  store i32 %v3_18162, i32* @eax, align 4
  %v1_18168 = call i32 @function_28e6a(i32 %v3_18162)
  %v1_1816d = load i32, i32* @ebp, align 4
  %v2_1816d = add i32 %v1_1816d, -20
  %v3_1816d = inttoptr i32 %v2_1816d to i32*
  store i32 %v1_18168, i32* %v3_1816d, align 4
  %v0_18170 = load i32, i32* @ebp, align 4
  %v1_18170 = add i32 %v0_18170, -32
  %v1_18177 = add i32 %v0_18170, -20
  %v2_1817d = call i32 @unknown_333ca(i32 %v1_18177, i32 %v1_18170)
  %v1_18182 = inttoptr i32 %v2_1817d to i32*
  %v2_18182 = load i32, i32* %v1_18182, align 4
  %v1_18184 = load i32, i32* @ebx, align 4
  %v2_18184 = add i32 %v1_18184, %v2_18182
  %v1_18186 = load i32, i32* @ebp, align 4
  %v2_18186 = add i32 %v1_18186, -16
  %v3_18186 = inttoptr i32 %v2_18186 to i32*
  store i32 %v2_18184, i32* %v3_18186, align 4
  %v0_18189 = load i32, i32* @ebp, align 4
  %v1_18189 = add i32 %v0_18189, -28
  %v2_18189 = inttoptr i32 %v1_18189 to i32*
  %v3_18189 = load i32, i32* %v2_18189, align 4
  store i32 %v3_18189, i32* @eax, align 4
  %v1_1818f = call i32 @function_28e6a(i32 %v3_18189)
  %v1_18194 = load i32, i32* @ebp, align 4
  %v2_18194 = add i32 %v1_18194, -16
  %v3_18194 = inttoptr i32 %v2_18194 to i32*
  %v4_18194 = load i32, i32* %v3_18194, align 4
  %tmp5 = icmp ugt i32 %v1_1818f, %v4_18194
  br i1 %tmp5, label %dec_label_pc_181a9, label %dec_label_pc_18199

dec_label_pc_18199:                               ; preds = %dec_label_pc_18155
  %v1_18199 = add i32 %v1_18194, -28
  %v2_18199 = inttoptr i32 %v1_18199 to i32*
  %v3_18199 = load i32, i32* %v2_18199, align 4
  %v1_1819f = call i32 @unknown_2c17a(i32 %v3_18199)
  %v1_181a4 = load i32, i32* @ebp, align 4
  %v2_181a4 = add i32 %v1_181a4, -16
  %v3_181a4 = inttoptr i32 %v2_181a4 to i32*
  %v4_181a4 = load i32, i32* %v3_181a4, align 4
  %v10_181a4 = icmp ult i32 %v1_1819f, %v4_181a4
  %v1_181a7 = icmp eq i1 %v10_181a4, false
  br i1 %v1_181a7, label %dec_label_pc_181b9, label %dec_label_pc_181a9

dec_label_pc_181a9:                               ; preds = %dec_label_pc_18155, %dec_label_pc_18199
  %v0_181a9 = phi i32 [ %v1_18194, %dec_label_pc_18155 ], [ %v1_181a4, %dec_label_pc_18199 ]
  %v1_181a9 = add i32 %v0_181a9, -28
  %v2_181a9 = inttoptr i32 %v1_181a9 to i32*
  %v3_181a9 = load i32, i32* %v2_181a9, align 4
  %v1_181af = call i32 @unknown_2c17a(i32 %v3_181a9)
  %v0_181b9.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_181b9

dec_label_pc_181b9:                               ; preds = %dec_label_pc_18199, %dec_label_pc_181a9
  %v0_181b9 = phi i32 [ %v0_181b9.pre, %dec_label_pc_181a9 ], [ %v1_181a4, %dec_label_pc_18199 ]
  %storemerge = phi i32 [ %v1_181af, %dec_label_pc_181a9 ], [ %v4_181a4, %dec_label_pc_18199 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_181b9 = add i32 %v0_181b9, -12
  %v2_181b9 = inttoptr i32 %v1_181b9 to i32*
  %v3_181b9 = load i32, i32* %v2_181b9, align 4
  %v1_181bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_181bc = icmp eq i32 %v1_181bc, %v3_181b9
  br i1 %v3_181bc, label %bb, label %dec_label_pc_181c5

bb:                                               ; preds = %dec_label_pc_181b9
  %v1_181c3 = call i32 @function_181ca()
  br label %dec_label_pc_181c5

dec_label_pc_181c5:                               ; preds = %bb, %dec_label_pc_181b9
  %v2_181c3 = phi i32 [ %v1_181c3, %bb ], [ %storemerge, %dec_label_pc_181b9 ]
  ret i32 %v2_181c3

; uselistorder directives
  uselistorder i32 (i32)* @unknown_2c17a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_181b9, { 1, 0 }
  uselistorder label %dec_label_pc_181a9, { 1, 0 }
}

define i32 @function_181ca() local_unnamed_addr {
dec_label_pc_181ca:
  %v0_181cf = load i32, i32* @eax, align 4
  ret i32 %v0_181cf
}

define i32 @_ZSt22__uninitialized_move_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_181d0:
  %v8_18214 = call i32 @unknown_30183(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_18214, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18225

bb:                                               ; preds = %dec_label_pc_181d0
  %v1_18223 = call i32 @function_1822a()
  br label %dec_label_pc_18225

dec_label_pc_18225:                               ; preds = %bb, %dec_label_pc_181d0
  %v2_18223 = phi i32 [ %v1_18223, %bb ], [ %v8_18214, %dec_label_pc_181d0 ]
  ret i32 %v2_18223

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1822a() local_unnamed_addr {
dec_label_pc_1822a:
  %v0_1822b = load i32, i32* @eax, align 4
  ret i32 %v0_1822b
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1822c:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-68, align 4
  store i32 %arg3, i32* @eax, align 4
  %v15_18261 = icmp eq i32 %arg3, %arg4
  br i1 %v15_18261, label %bb, label %dec_label_pc_1826a

bb:                                               ; preds = %dec_label_pc_1822c
  %v6_18264 = sext i8 %arg5 to i32
  %v7_18264 = call i32 @function_185e5(i32 %v6_18264, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1826a

dec_label_pc_1826a:                               ; preds = %bb, %dec_label_pc_1822c
  %v2_18277 = call i32 @unknown_33279(i32 %arg3, i32 %arg4)
  %v1_18282 = add i32 %arg1, 8
  %v2_18282 = inttoptr i32 %v1_18282 to i32*
  %v3_18282 = load i32, i32* %v2_18282, align 4
  %v1_1828a = add i32 %arg1, 4
  %v2_1828a = inttoptr i32 %v1_1828a to i32*
  %v3_1828a = load i32, i32* %v2_1828a, align 4
  %v2_1828f = sub i32 %v3_18282, %v3_1828a
  %v10_18293 = icmp ult i32 %v2_1828f, %v2_18277
  br i1 %v10_18293, label %bb117, label %dec_label_pc_1829c

bb117:                                            ; preds = %dec_label_pc_1826a
  %v2_18296 = call i32 @function_18443(i32 %v2_18277)
  br label %dec_label_pc_1829c

dec_label_pc_1829c:                               ; preds = %bb117, %dec_label_pc_1826a
  %v2_1829c = ptrtoint i32* %stack_var_-56 to i32
  %v2_182b1 = ptrtoint i32* %stack_var_-68 to i32
  %v3_182be = call i32 @function_29036(i32 %v2_1829c, i32 %v2_182b1, i32 %arg1)
  %tmp120 = icmp ugt i32 %v3_182be, %v2_18277
  br i1 %tmp120, label %dec_label_pc_182db, label %bb119

bb119:                                            ; preds = %dec_label_pc_1829c
  %v3_182c9 = load i32, i32* %v2_1828a, align 4
  %v5_182d5 = call i32 @function_18376(i32 %v3_182be, i32 %v3_182c9)
  br label %dec_label_pc_182db

dec_label_pc_182db:                               ; preds = %dec_label_pc_1829c, %bb119
  %v1_182e1 = call i32 @unknown_2c176(i32 %arg1)
  ret i32 %v1_182e1

; uselistorder directives
  uselistorder i32 %v3_182be, { 1, 0 }
  uselistorder i32 %arg4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_182db, { 1, 0 }
}

define i32 @function_182f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_182f0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_182f0 = load i32, i32* @edx, align 8
  store i32 %v0_182f0, i32* %stack_var_-4, align 4
  %v4_182f0 = ptrtoint i32* %stack_var_-4 to i32
  %v0_182f1 = load i32, i32* @eax, align 4
  %v1_182f1 = trunc i32 %v0_182f1 to i8
  %v2_182f1 = add i8 %v1_182f1, -117
  %v11_182f1 = icmp eq i8 %v2_182f1, 0
  %v16_182f1 = zext i8 %v2_182f1 to i32
  %v18_182f1 = and i32 %v0_182f1, -256
  %v19_182f1 = or i32 %v16_182f1, %v18_182f1
  store i32 %v19_182f1, i32* %eax.global-to-local, align 4
  %v0_182f4.pre = load i32, i32* @ebx, align 4
  %v1_182f4 = add i32 %v0_182f4.pre, 1972044891
  %v2_182f4 = inttoptr i32 %v1_182f4 to i32*
  br label %dec_label_pc_182f3

dec_label_pc_182f3:                               ; preds = %dec_label_pc_182f3, %dec_label_pc_182f0
  %v0_182f3 = phi i32 [ %v3_182f3, %dec_label_pc_182f3 ], [ %v4_182f0, %dec_label_pc_182f0 ]
  %v1_182f3 = inttoptr i32 %v0_182f3 to i32*
  %v2_182f3 = load i32, i32* %v1_182f3, align 4
  store i32 %v2_182f3, i32* @ebp, align 4
  %v3_182f3 = add i32 %v0_182f3, 4
  %v3_182f4 = load i32, i32* %v2_182f4, align 4
  %v1_182fa = add i32 %v3_182f4, -1
  store i32 %v1_182fa, i32* %ecx.global-to-local, align 4
  %v2_182fa = icmp eq i32 %v1_182fa, 0
  %v4_182fa = or i1 %v11_182f1, %v2_182fa
  br i1 %v4_182fa, label %dec_label_pc_182fc, label %dec_label_pc_182f3

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182f3
  %v2_182fe = add i32 %v0_182f3, 16
  %v3_182fe = inttoptr i32 %v2_182fe to i32*
  store i32 %v19_182f1, i32* %v3_182fe, align 4
  %v0_18303 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18303 = load i32, i32* @esp, align 4
  %v2_18303 = add i32 %v1_18303, 8
  %v3_18303 = inttoptr i32 %v2_18303 to i32*
  store i32 %v0_18303, i32* %v3_18303, align 4
  %v0_18307 = load i32, i32* @edx, align 8
  %v1_18307 = load i32, i32* @esp, align 4
  %v2_18307 = add i32 %v1_18307, 4
  %v3_18307 = inttoptr i32 %v2_18307 to i32*
  store i32 %v0_18307, i32* %v3_18307, align 4
  %v0_1830b = load i32, i32* @ebx, align 4
  %v1_1830b = load i32, i32* @esp, align 4
  %v2_1830b = inttoptr i32 %v1_1830b to i32*
  store i32 %v0_1830b, i32* %v2_1830b, align 4
  %v0_1830e = load i32, i32* %stack_var_-4, align 4
  %v4_1830e = call i32 @unknown_303fc(i32 %v0_1830e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_1830e, i32* %eax.global-to-local, align 4
  %v0_18313 = load i32, i32* @ebp, align 4
  %v1_18313 = add i32 %v0_18313, -60
  %v2_18313 = inttoptr i32 %v1_18313 to i32*
  %v3_18313 = load i32, i32* %v2_18313, align 4
  store i32 %v3_18313, i32* %eax.global-to-local, align 4
  %v1_18316 = add i32 %v3_18313, 4
  %v2_18316 = inttoptr i32 %v1_18316 to i32*
  %v3_18316 = load i32, i32* %v2_18316, align 4
  store i32 %v3_18316, i32* %eax.global-to-local, align 4
  %v2_1831b = add i32 %v0_18313, -32
  %v3_1831b = inttoptr i32 %v2_1831b to i32*
  %v4_1831b = load i32, i32* %v3_1831b, align 4
  %v5_1831b = add i32 %v4_1831b, %v3_18316
  %v3_1831e = load i32, i32* %v2_18313, align 4
  store i32 %v3_1831e, i32* %eax.global-to-local, align 4
  %v2_18321 = add i32 %v3_1831e, 4
  %v3_18321 = inttoptr i32 %v2_18321 to i32*
  store i32 %v5_1831b, i32* %v3_18321, align 4
  %v0_18324 = load i32, i32* @ebp, align 4
  %v1_18324 = add i32 %v0_18324, -32
  %v2_18324 = inttoptr i32 %v1_18324 to i32*
  %v3_18324 = load i32, i32* %v2_18324, align 4
  %v1_18327 = sub i32 0, %v3_18324
  store i32 %v1_18327, i32* %eax.global-to-local, align 4
  store i32 %v1_18327, i32* %ebx.global-to-local, align 4
  %v2_1832b = add i32 %v0_18324, -24
  %v3_1832b = inttoptr i32 %v2_1832b to i32*
  %v4_1832b = load i32, i32* %v3_1832b, align 4
  %v5_1832b = sub i32 %v4_1832b, %v3_18324
  store i32 %v5_1832b, i32* %ebx.global-to-local, align 4
  %v1_1832e = add i32 %v0_18324, -64
  store i32 %v1_1832e, i32* %eax.global-to-local, align 4
  %v1_18331 = load i32, i32* @esp, align 4
  %v2_18331 = inttoptr i32 %v1_18331 to i32*
  store i32 %v1_1832e, i32* %v2_18331, align 4
  %v0_18334 = load i32, i32* %stack_var_-4, align 4
  %v1_18334 = call i32 @unknown_2c392(i32 %v0_18334)
  store i32 %v1_18334, i32* %eax.global-to-local, align 4
  %v1_18339 = inttoptr i32 %v1_18334 to i32*
  %v2_18339 = load i32, i32* %v1_18339, align 4
  store i32 %v2_18339, i32* %eax.global-to-local, align 4
  %v0_1833b = load i32, i32* @ebp, align 4
  %v1_1833b = add i32 %v0_1833b, -24
  %v2_1833b = inttoptr i32 %v1_1833b to i32*
  %v3_1833b = load i32, i32* %v2_1833b, align 4
  %v1_1833e = load i32, i32* @esp, align 4
  %v2_1833e = add i32 %v1_1833e, 8
  %v3_1833e = inttoptr i32 %v2_1833e to i32*
  store i32 %v3_1833b, i32* %v3_1833e, align 4
  %v0_18342 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18342 = load i32, i32* @esp, align 4
  %v2_18342 = add i32 %v1_18342, 4
  %v3_18342 = inttoptr i32 %v2_18342 to i32*
  store i32 %v0_18342, i32* %v3_18342, align 4
  %v0_18346 = load i32, i32* %eax.global-to-local, align 4
  %v1_18346 = load i32, i32* @esp, align 4
  %v2_18346 = inttoptr i32 %v1_18346 to i32*
  store i32 %v0_18346, i32* %v2_18346, align 4
  %v0_18349 = call i32 @unknown_302c3()
  %v0_1834e = load i32, i32* @ebp, align 4
  %v1_1834e = add i32 %v0_1834e, -48
  store i32 %v1_1834e, i32* %eax.global-to-local, align 4
  %v1_18351 = add i32 %v0_1834e, -64
  %v2_18351 = inttoptr i32 %v1_18351 to i32*
  %v3_18351 = load i32, i32* %v2_18351, align 4
  %v1_18354 = load i32, i32* @esp, align 4
  %v2_18354 = add i32 %v1_18354, 12
  %v3_18354 = inttoptr i32 %v2_18354 to i32*
  store i32 %v3_18351, i32* %v3_18354, align 4
  %v0_18358 = load i32, i32* @ebp, align 4
  %v1_18358 = add i32 %v0_18358, -72
  %v2_18358 = inttoptr i32 %v1_18358 to i32*
  %v3_18358 = load i32, i32* %v2_18358, align 4
  %v1_1835b = load i32, i32* @esp, align 4
  %v2_1835b = add i32 %v1_1835b, 8
  %v3_1835b = inttoptr i32 %v2_1835b to i32*
  store i32 %v3_18358, i32* %v3_1835b, align 4
  %v0_1835f = load i32, i32* @ebp, align 4
  %v1_1835f = add i32 %v0_1835f, -68
  %v2_1835f = inttoptr i32 %v1_1835f to i32*
  %v3_1835f = load i32, i32* %v2_1835f, align 4
  %v1_18362 = load i32, i32* @esp, align 4
  %v2_18362 = add i32 %v1_18362, 4
  %v3_18362 = inttoptr i32 %v2_18362 to i32*
  store i32 %v3_1835f, i32* %v3_18362, align 4
  %v0_18366 = load i32, i32* %eax.global-to-local, align 4
  %v1_18366 = load i32, i32* @esp, align 4
  %v2_18366 = inttoptr i32 %v1_18366 to i32*
  store i32 %v0_18366, i32* %v2_18366, align 4
  %v0_18369 = load i32, i32* %stack_var_-4, align 4
  %v4_18369 = call i32 @unknown_33573(i32 %v0_18369, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_18369, i32* @eax, align 4
  %v0_18371 = load i32, i32* %stack_var_-4, align 4
  %v5_18371 = call i32 @function_185e5(i32 %v0_18371, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_18371, i32* %eax.global-to-local, align 4
  ret i32 %v5_18371

; uselistorder directives
  uselistorder i32 %v1_182fa, { 1, 0 }
  uselistorder i32 %v0_182f3, { 0, 2, 1 }
  uselistorder i8 -117, { 3, 0, 1, 2 }
}

define i32 @function_18356(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18356:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18376(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18376:
  %ebx.global-to-local = alloca i32, align 4
  %v0_18376 = load i32, i32* @ebp, align 4
  %v1_18376 = add i32 %v0_18376, -68
  %v2_18376 = inttoptr i32 %v1_18376 to i32*
  %v3_18376 = load i32, i32* %v2_18376, align 4
  %v2_18379 = add i32 %v0_18376, -44
  %v3_18379 = inttoptr i32 %v2_18379 to i32*
  store i32 %v3_18376, i32* %v3_18379, align 4
  %v0_1837c = load i32, i32* @ebp, align 4
  %v1_1837c = add i32 %v0_1837c, -28
  %v2_1837c = inttoptr i32 %v1_1837c to i32*
  %v3_1837c = load i32, i32* %v2_1837c, align 4
  %v1_18383 = add i32 %v0_1837c, -44
  %v2_18389 = call i32 @unknown_335ef(i32 %v1_18383, i32 %v3_1837c)
  %v0_1838e = load i32, i32* @ebp, align 4
  %v1_1838e = add i32 %v0_1838e, -60
  %v2_1838e = inttoptr i32 %v1_1838e to i32*
  %v3_1838e = load i32, i32* %v2_1838e, align 4
  %v1_18394 = call i32 @unknown_2c176(i32 %v3_1838e)
  %v0_18399 = load i32, i32* @ebp, align 4
  %v1_18399 = add i32 %v0_18399, -60
  %v2_18399 = inttoptr i32 %v1_18399 to i32*
  %v3_18399 = load i32, i32* %v2_18399, align 4
  %v1_1839c = add i32 %v3_18399, 4
  %v2_1839c = inttoptr i32 %v1_1839c to i32*
  %v3_1839c = load i32, i32* %v2_1839c, align 4
  %v1_1839f = add i32 %v0_18399, -44
  %v2_1839f = inttoptr i32 %v1_1839f to i32*
  %v3_1839f = load i32, i32* %v2_1839f, align 4
  %v1_183aa = add i32 %v0_18399, -72
  %v2_183aa = inttoptr i32 %v1_183aa to i32*
  %v3_183aa = load i32, i32* %v2_183aa, align 4
  %v4_183b4 = call i32 @unknown_332d8(i32 %v3_1839f, i32 %v3_183aa, i32 %v3_1839c, i32 %v1_18394)
  %v0_183b9 = load i32, i32* @ebp, align 4
  %v1_183b9 = add i32 %v0_183b9, -60
  %v2_183b9 = inttoptr i32 %v1_183b9 to i32*
  %v3_183b9 = load i32, i32* %v2_183b9, align 4
  %v1_183bc = add i32 %v3_183b9, 4
  %v2_183bc = inttoptr i32 %v1_183bc to i32*
  %v3_183bc = load i32, i32* %v2_183bc, align 4
  %v1_183bf = add i32 %v0_183b9, -28
  %v2_183bf = inttoptr i32 %v1_183bf to i32*
  %v3_183bf = load i32, i32* %v2_183bf, align 4
  %v1_183c2 = add i32 %v0_183b9, -32
  %v2_183c2 = inttoptr i32 %v1_183c2 to i32*
  %v3_183c2 = load i32, i32* %v2_183c2, align 4
  %v2_183c7 = sub i32 %v3_183c2, %v3_183bf
  store i32 %v2_183c7, i32* %ebx.global-to-local, align 4
  %v2_183cb = add i32 %v2_183c7, %v3_183bc
  %v3_183cd = load i32, i32* %v2_183b9, align 4
  %v2_183d0 = add i32 %v3_183cd, 4
  %v3_183d0 = inttoptr i32 %v2_183d0 to i32*
  store i32 %v2_183cb, i32* %v3_183d0, align 4
  %v0_183d3 = load i32, i32* @ebp, align 4
  %v1_183d3 = add i32 %v0_183d3, -60
  %v2_183d3 = inttoptr i32 %v1_183d3 to i32*
  %v3_183d3 = load i32, i32* %v2_183d3, align 4
  %v1_183d9 = call i32 @unknown_2c176(i32 %v3_183d3)
  store i32 %v1_183d9, i32* %ebx.global-to-local, align 4
  %v0_183e0 = load i32, i32* @ebp, align 4
  %v1_183e0 = add i32 %v0_183e0, -60
  %v2_183e0 = inttoptr i32 %v1_183e0 to i32*
  %v3_183e0 = load i32, i32* %v2_183e0, align 4
  %v1_183e3 = add i32 %v3_183e0, 4
  %v2_183e3 = inttoptr i32 %v1_183e3 to i32*
  %v3_183e3 = load i32, i32* %v2_183e3, align 4
  %v1_183e6 = add i32 %v0_183e0, -64
  %v1_183ec = call i32 @unknown_2c392(i32 %v1_183e6)
  %v1_183f1 = inttoptr i32 %v1_183ec to i32*
  %v2_183f1 = load i32, i32* %v1_183f1, align 4
  %v0_183f3 = load i32, i32* %ebx.global-to-local, align 4
  %v0_183fb = load i32, i32* @ebp, align 4
  %v1_183fb = add i32 %v0_183fb, -24
  %v2_183fb = inttoptr i32 %v1_183fb to i32*
  %v3_183fb = load i32, i32* %v2_183fb, align 4
  %v4_18405 = call i32 @unknown_303fc(i32 %v2_183f1, i32 %v3_183fb, i32 %v3_183e3, i32 %v0_183f3)
  %v0_1840a = load i32, i32* @ebp, align 4
  %v1_1840a = add i32 %v0_1840a, -60
  %v2_1840a = inttoptr i32 %v1_1840a to i32*
  %v3_1840a = load i32, i32* %v2_1840a, align 4
  %v1_1840d = add i32 %v3_1840a, 4
  %v2_1840d = inttoptr i32 %v1_1840d to i32*
  %v3_1840d = load i32, i32* %v2_1840d, align 4
  %v2_18412 = add i32 %v0_1840a, -28
  %v3_18412 = inttoptr i32 %v2_18412 to i32*
  %v4_18412 = load i32, i32* %v3_18412, align 4
  %v5_18412 = add i32 %v4_18412, %v3_1840d
  %v3_18415 = load i32, i32* %v2_1840a, align 4
  %v2_18418 = add i32 %v3_18415, 4
  %v3_18418 = inttoptr i32 %v2_18418 to i32*
  store i32 %v5_18412, i32* %v3_18418, align 4
  %v0_1841b = load i32, i32* @ebp, align 4
  %v1_1841b = add i32 %v0_1841b, -44
  %v2_1841b = inttoptr i32 %v1_1841b to i32*
  %v3_1841b = load i32, i32* %v2_1841b, align 4
  %v1_1841e = add i32 %v0_1841b, -40
  %v1_18421 = add i32 %v0_1841b, -64
  %v2_18421 = inttoptr i32 %v1_18421 to i32*
  %v3_18421 = load i32, i32* %v2_18421, align 4
  %v1_1842c = add i32 %v0_1841b, -68
  %v2_1842c = inttoptr i32 %v1_1842c to i32*
  %v3_1842c = load i32, i32* %v2_1842c, align 4
  %v4_18436 = call i32 @unknown_33573(i32 %v1_1841e, i32 %v3_1842c, i32 %v3_1841b, i32 %v3_18421)
  store i32 %v4_18436, i32* @eax, align 4
  %v5_1843e = call i32 @function_185e5(i32 %v1_1841e, i32 %v3_1842c, i32 %v3_1841b, i32 %v3_18421, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v5_1843e

; uselistorder directives
  uselistorder i32 %v3_18421, { 1, 0 }
  uselistorder i32 %v1_1841e, { 1, 0 }
  uselistorder i32 %v0_1841b, { 1, 0, 2, 3 }
  uselistorder i32 %v0_183b9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_33573, { 1, 0 }
}

define i32 @function_18443(i32 %arg1) local_unnamed_addr {
dec_label_pc_18443:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1844b = load i32, i32* @ebp, align 4
  %v1_1844b = add i32 %v0_1844b, -32
  %v2_1844b = inttoptr i32 %v1_1844b to i32*
  %v3_1844b = load i32, i32* %v2_1844b, align 4
  %v1_18452 = add i32 %v0_1844b, -60
  %v2_18452 = inttoptr i32 %v1_18452 to i32*
  %v3_18452 = load i32, i32* %v2_18452, align 4
  %v4_18458 = call i32 @unknown_3032a(i32 %v3_18452, i32 %v3_1844b, i32 ptrtoint ([24 x i8]* @global_var_613c.1840 to i32))
  %v1_1845d = load i32, i32* @ebp, align 4
  %v2_1845d = add i32 %v1_1845d, -20
  %v3_1845d = inttoptr i32 %v2_1845d to i32*
  store i32 %v4_18458, i32* %v3_1845d, align 4
  %v0_18460 = load i32, i32* @ebp, align 4
  %v1_18460 = add i32 %v0_18460, -60
  %v2_18460 = inttoptr i32 %v1_18460 to i32*
  %v3_18460 = load i32, i32* %v2_18460, align 4
  %v1_18463 = add i32 %v0_18460, -20
  %v2_18463 = inttoptr i32 %v1_18463 to i32*
  %v3_18463 = load i32, i32* %v2_18463, align 4
  %v2_1846d = call i32 @unknown_30158(i32 %v3_18460, i32 %v3_18463)
  %v1_18472 = load i32, i32* @ebp, align 4
  %v2_18472 = add i32 %v1_18472, -16
  %v3_18472 = inttoptr i32 %v2_18472 to i32*
  store i32 %v2_1846d, i32* %v3_18472, align 4
  %v0_18475 = load i32, i32* @ebp, align 4
  %v1_18475 = add i32 %v0_18475, -16
  %v2_18475 = inttoptr i32 %v1_18475 to i32*
  %v3_18475 = load i32, i32* %v2_18475, align 4
  %v2_18478 = add i32 %v0_18475, -36
  %v3_18478 = inttoptr i32 %v2_18478 to i32*
  store i32 %v3_18475, i32* %v3_18478, align 4
  %v0_1847b = load i32, i32* @ebp, align 4
  %v1_1847b = add i32 %v0_1847b, -60
  %v2_1847b = inttoptr i32 %v1_1847b to i32*
  %v3_1847b = load i32, i32* %v2_1847b, align 4
  %v1_18481 = call i32 @unknown_2c176(i32 %v3_1847b)
  store i32 %v1_18481, i32* %ebx.global-to-local, align 4
  %v0_18488 = load i32, i32* @ebp, align 4
  %v1_18488 = add i32 %v0_18488, -64
  %v1_1848e = call i32 @unknown_2c392(i32 %v1_18488)
  %v1_18493 = inttoptr i32 %v1_1848e to i32*
  %v2_18493 = load i32, i32* %v1_18493, align 4
  %v0_18495 = load i32, i32* @ebp, align 4
  %v1_18495 = add i32 %v0_18495, -60
  %v2_18495 = inttoptr i32 %v1_18495 to i32*
  %v3_18495 = load i32, i32* %v2_18495, align 4
  %v1_18498 = inttoptr i32 %v3_18495 to i32*
  %v2_18498 = load i32, i32* %v1_18498, align 4
  %v0_1849a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1849e = add i32 %v0_18495, -16
  %v2_1849e = inttoptr i32 %v1_1849e to i32*
  %v3_1849e = load i32, i32* %v2_1849e, align 4
  %v5_184ac = call i32 @unknown_303fc(i32 %v2_18498, i32 %v2_18493, i32 %v3_1849e, i32 %v0_1849a)
  %v1_184b1 = load i32, i32* @ebp, align 4
  %v2_184b1 = add i32 %v1_184b1, -36
  %v3_184b1 = inttoptr i32 %v2_184b1 to i32*
  store i32 %v5_184ac, i32* %v3_184b1, align 4
  %v0_184b4 = load i32, i32* @ebp, align 4
  %v1_184b4 = add i32 %v0_184b4, -60
  %v2_184b4 = inttoptr i32 %v1_184b4 to i32*
  %v3_184b4 = load i32, i32* %v2_184b4, align 4
  %v1_184ba = call i32 @unknown_2c176(i32 %v3_184b4)
  %v0_184c3 = load i32, i32* @ebp, align 4
  %v1_184c3 = add i32 %v0_184c3, -36
  %v2_184c3 = inttoptr i32 %v1_184c3 to i32*
  %v3_184c3 = load i32, i32* %v2_184c3, align 4
  %v1_184ca = add i32 %v0_184c3, -72
  %v2_184ca = inttoptr i32 %v1_184ca to i32*
  %v3_184ca = load i32, i32* %v2_184ca, align 4
  %v1_184d1 = add i32 %v0_184c3, -68
  %v2_184d1 = inttoptr i32 %v1_184d1 to i32*
  %v3_184d1 = load i32, i32* %v2_184d1, align 4
  %v5_184d7 = call i32 @unknown_332d8(i32 %v3_184d1, i32 %v3_184ca, i32 %v3_184c3, i32 %v1_184ba)
  %v1_184dc = load i32, i32* @ebp, align 4
  %v2_184dc = add i32 %v1_184dc, -36
  %v3_184dc = inttoptr i32 %v2_184dc to i32*
  store i32 %v5_184d7, i32* %v3_184dc, align 4
  %v0_184df = load i32, i32* @ebp, align 4
  %v1_184df = add i32 %v0_184df, -60
  %v2_184df = inttoptr i32 %v1_184df to i32*
  %v3_184df = load i32, i32* %v2_184df, align 4
  %v1_184e5 = call i32 @unknown_2c176(i32 %v3_184df)
  store i32 %v1_184e5, i32* %ebx.global-to-local, align 4
  %v0_184ec = load i32, i32* @ebp, align 4
  %v1_184ec = add i32 %v0_184ec, -60
  %v2_184ec = inttoptr i32 %v1_184ec to i32*
  %v3_184ec = load i32, i32* %v2_184ec, align 4
  %v1_184ef = add i32 %v3_184ec, 4
  %v2_184ef = inttoptr i32 %v1_184ef to i32*
  %v3_184ef = load i32, i32* %v2_184ef, align 4
  store i32 %v3_184ef, i32* %esi.global-to-local, align 4
  %v1_184f2 = add i32 %v0_184ec, -64
  %v1_184f8 = call i32 @unknown_2c392(i32 %v1_184f2)
  %v1_184fd = inttoptr i32 %v1_184f8 to i32*
  %v2_184fd = load i32, i32* %v1_184fd, align 4
  %v0_184ff = load i32, i32* %ebx.global-to-local, align 4
  %v0_18503 = load i32, i32* @ebp, align 4
  %v1_18503 = add i32 %v0_18503, -36
  %v2_18503 = inttoptr i32 %v1_18503 to i32*
  %v3_18503 = load i32, i32* %v2_18503, align 4
  %v0_1850a = load i32, i32* %esi.global-to-local, align 4
  %v5_18511 = call i32 @unknown_303fc(i32 %v2_184fd, i32 %v0_1850a, i32 %v3_18503, i32 %v0_184ff)
  %v1_18516 = load i32, i32* @ebp, align 4
  %v2_18516 = add i32 %v1_18516, -36
  %v3_18516 = inttoptr i32 %v2_18516 to i32*
  store i32 %v5_18511, i32* %v3_18516, align 4
  %v0_18519 = load i32, i32* @ebp, align 4
  %v1_18519 = add i32 %v0_18519, -60
  %v2_18519 = inttoptr i32 %v1_18519 to i32*
  %v3_18519 = load i32, i32* %v2_18519, align 4
  %v1_1851f = call i32 @unknown_2c176(i32 %v3_18519)
  %v0_18524 = load i32, i32* @ebp, align 4
  %v1_18524 = add i32 %v0_18524, -60
  %v2_18524 = inttoptr i32 %v1_18524 to i32*
  %v3_18524 = load i32, i32* %v2_18524, align 4
  %v1_18527 = add i32 %v3_18524, 4
  %v2_18527 = inttoptr i32 %v1_18527 to i32*
  %v3_18527 = load i32, i32* %v2_18527, align 4
  %v1_1852d = inttoptr i32 %v3_18524 to i32*
  %v2_1852d = load i32, i32* %v1_1852d, align 4
  %v4_1853a = call i32 @unknown_2c1a3(i32 %v2_1852d, i32 %v3_18527, i32 %v1_1851f)
  %v0_1853f = load i32, i32* @ebp, align 4
  %v1_1853f = add i32 %v0_1853f, -60
  %v2_1853f = inttoptr i32 %v1_1853f to i32*
  %v3_1853f = load i32, i32* %v2_1853f, align 4
  %v1_18542 = add i32 %v3_1853f, 8
  %v2_18542 = inttoptr i32 %v1_18542 to i32*
  %v3_18542 = load i32, i32* %v2_18542, align 4
  %v1_1854a = inttoptr i32 %v3_1853f to i32*
  %v2_1854a = load i32, i32* %v1_1854a, align 4
  %v2_1854e = sub i32 %v3_18542, %v2_1854a
  %v3_18554 = load i32, i32* %v2_1853f, align 4
  %v1_18557 = inttoptr i32 %v3_18554 to i32*
  %v2_18557 = load i32, i32* %v1_18557, align 4
  %v4_18567 = call i32 @unknown_2c2e6(i32 %v3_18554, i32 %v2_18557, i32 %v2_1854e)
  %v0_1856c = load i32, i32* @ebp, align 4
  %v1_1856c = add i32 %v0_1856c, -60
  %v2_1856c = inttoptr i32 %v1_1856c to i32*
  %v3_1856c = load i32, i32* %v2_1856c, align 4
  %v1_1856f = add i32 %v0_1856c, -16
  %v2_1856f = inttoptr i32 %v1_1856f to i32*
  %v3_1856f = load i32, i32* %v2_1856f, align 4
  %v2_18572 = inttoptr i32 %v3_1856c to i32*
  store i32 %v3_1856f, i32* %v2_18572, align 4
  %v0_18574 = load i32, i32* @ebp, align 4
  %v1_18574 = add i32 %v0_18574, -60
  %v2_18574 = inttoptr i32 %v1_18574 to i32*
  %v3_18574 = load i32, i32* %v2_18574, align 4
  %v1_18577 = add i32 %v0_18574, -36
  %v2_18577 = inttoptr i32 %v1_18577 to i32*
  %v3_18577 = load i32, i32* %v2_18577, align 4
  %v2_1857a = add i32 %v3_18574, 4
  %v3_1857a = inttoptr i32 %v2_1857a to i32*
  store i32 %v3_18577, i32* %v3_1857a, align 4
  %v0_1857d = load i32, i32* @ebp, align 4
  %v1_1857d = add i32 %v0_1857d, -20
  %v2_1857d = inttoptr i32 %v1_1857d to i32*
  %v3_1857d = load i32, i32* %v2_1857d, align 4
  %v1_18580 = add i32 %v0_1857d, -16
  %v2_18580 = inttoptr i32 %v1_18580 to i32*
  %v3_18580 = load i32, i32* %v2_18580, align 4
  %v2_18583 = add i32 %v3_18580, %v3_1857d
  %v1_18585 = add i32 %v0_1857d, -60
  %v2_18585 = inttoptr i32 %v1_18585 to i32*
  %v3_18585 = load i32, i32* %v2_18585, align 4
  store i32 %v3_18585, i32* @eax, align 4
  %v2_18588 = add i32 %v3_18585, 8
  %v3_18588 = inttoptr i32 %v2_18588 to i32*
  store i32 %v2_18583, i32* %v3_18588, align 4
  %v6_1858b = call i32 @function_185e5(i32 %v3_18554, i32 %v2_18557, i32 %v2_1854e, i32 %v0_184ff, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_1858b

; uselistorder directives
  uselistorder i32 %v2_18557, { 1, 0 }
  uselistorder i32 %v3_18554, { 1, 0, 2 }
  uselistorder i32 %v2_1854e, { 1, 0 }
  uselistorder i32 %v0_184ff, { 1, 0 }
  uselistorder i32 %v0_184c3, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_185e5, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_332d8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_303fc, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_2c392, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_2c176, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1858e() local_unnamed_addr {
dec_label_pc_1858e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1858e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1858e
}

define i32 @function_185e5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_185e5:
  %v0_185e5 = load i32, i32* @ebp, align 4
  %v1_185e5 = add i32 %v0_185e5, -12
  %v2_185e5 = inttoptr i32 %v1_185e5 to i32*
  %v3_185e5 = load i32, i32* %v2_185e5, align 4
  %v1_185e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_185e8 = icmp eq i32 %v1_185e8, %v3_185e5
  br i1 %v3_185e8, label %bb, label %dec_label_pc_185e5.dec_label_pc_185f1_crit_edge

dec_label_pc_185e5.dec_label_pc_185f1_crit_edge:  ; preds = %dec_label_pc_185e5
  %v2_185ef.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_185f1

bb:                                               ; preds = %dec_label_pc_185e5
  %v1_185ef = call i32 @function_185f6()
  br label %dec_label_pc_185f1

dec_label_pc_185f1:                               ; preds = %dec_label_pc_185e5.dec_label_pc_185f1_crit_edge, %bb
  %v2_185ef = phi i32 [ %v2_185ef.pre, %dec_label_pc_185e5.dec_label_pc_185f1_crit_edge ], [ %v1_185ef, %bb ]
  ret i32 %v2_185ef

; uselistorder directives
  uselistorder label %dec_label_pc_185f1, { 1, 0 }
}

define i32 @function_185f6() local_unnamed_addr {
dec_label_pc_185f6:
  %v0_185f6 = load i32, i32* @ebp, align 4
  %v1_185fb = inttoptr i32 %v0_185f6 to i32*
  %v2_185fb = load i32, i32* %v1_185fb, align 4
  store i32 %v2_185fb, i32* @ebp, align 4
  %v0_185fc = load i32, i32* @eax, align 4
  ret i32 %v0_185fc
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_185fe:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_1861b = call i32 @function_295f8(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_1862c = add i32 %tmp100, 4
  %v2_1862c = inttoptr i32 %v1_1862c to i32*
  store i32 0, i32* %v2_1862c, align 4
  %v1_18636 = add i32 %tmp100, 8
  %v2_18636 = inttoptr i32 %v1_18636 to i32*
  store i32 0, i32* %v2_18636, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18649

bb:                                               ; preds = %dec_label_pc_185fe
  %v1_18647 = call i32 @function_1864e()
  br label %dec_label_pc_18649

dec_label_pc_18649:                               ; preds = %bb, %dec_label_pc_185fe
  %v2_18647 = phi i32 [ %v1_18647, %bb ], [ 0, %dec_label_pc_185fe ]
  ret i32 %v2_18647

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_1864e() local_unnamed_addr {
dec_label_pc_1864e:
  %v0_1864f = load i32, i32* @eax, align 4
  ret i32 %v0_1864f
}

define i32 @_ZSt8_DestroyIPhEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18650:
  %v2_1867a = call i32 @unknown_33aad(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1868b

bb:                                               ; preds = %dec_label_pc_18650
  %v1_18689 = call i32 @function_18690()
  br label %dec_label_pc_1868b

dec_label_pc_1868b:                               ; preds = %bb, %dec_label_pc_18650
  %v2_18689 = phi i32 [ %v1_18689, %bb ], [ 0, %dec_label_pc_18650 ]
  ret i32 %v2_18689
}

define i32 @function_18690() local_unnamed_addr {
dec_label_pc_18690:
  %v0_18691 = load i32, i32* @eax, align 4
  ret i32 %v0_18691
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18692:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_186bc = call i32 @unknown_33b20(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_186cd = add i32 %tmp103, 4
  %v2_186cd = inttoptr i32 %v1_186cd to i32*
  store i32 0, i32* %v2_186cd, align 4
  %v1_186d7 = add i32 %tmp103, 8
  %v2_186d7 = inttoptr i32 %v1_186d7 to i32*
  store i32 0, i32* %v2_186d7, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_186ea

bb:                                               ; preds = %dec_label_pc_18692
  %v1_186e8 = call i32 @function_186ef()
  br label %dec_label_pc_186ea

dec_label_pc_186ea:                               ; preds = %bb, %dec_label_pc_18692
  %v2_186e8 = phi i32 [ %v1_186e8, %bb ], [ 0, %dec_label_pc_18692 ]
  ret i32 %v2_186e8

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_186ef() local_unnamed_addr {
dec_label_pc_186ef:
  %v0_186f0 = load i32, i32* @eax, align 4
  ret i32 %v0_186f0
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_186f2:
  %v10_1870f = icmp eq i32 %arg2, 0
  br i1 %v10_1870f, label %dec_label_pc_18736, label %dec_label_pc_18715

dec_label_pc_18715:                               ; preds = %dec_label_pc_186f2
  %v3_1872a = call i32 @unknown_33bc2(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_18736

dec_label_pc_18736:                               ; preds = %dec_label_pc_186f2, %dec_label_pc_18715
  %storemerge = phi i32 [ %v3_1872a, %dec_label_pc_18715 ], [ 0, %dec_label_pc_186f2 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18742

bb:                                               ; preds = %dec_label_pc_18736
  %v1_18740 = call i32 @function_18747()
  br label %dec_label_pc_18742

dec_label_pc_18742:                               ; preds = %bb, %dec_label_pc_18736
  %v2_18740 = phi i32 [ %v1_18740, %bb ], [ %storemerge, %dec_label_pc_18736 ]
  ret i32 %v2_18740

; uselistorder directives
  uselistorder label %dec_label_pc_18736, { 1, 0 }
}

define i32 @function_18747() local_unnamed_addr {
dec_label_pc_18747:
  %v0_18748 = load i32, i32* @eax, align 4
  ret i32 %v0_18748
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1874a:
  ret i32 %arg2
}

define i32 @function_18788() local_unnamed_addr {
dec_label_pc_18788:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_18788 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18788 = add i32 %v0_18788, -1
  store i32 %v1_18788, i32* %ecx.global-to-local, align 4
  %v0_1878a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1878a
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1878b:
  %v2_187b5 = call i32 @unknown_33cb6(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_187cc

bb:                                               ; preds = %dec_label_pc_1878b
  %v1_187ca = call i32 @function_187d1()
  br label %dec_label_pc_187cc

dec_label_pc_187cc:                               ; preds = %bb, %dec_label_pc_1878b
  %v2_187ca = phi i32 [ %v1_187ca, %bb ], [ %arg1, %dec_label_pc_1878b ]
  ret i32 %v2_187ca

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_187d1() local_unnamed_addr {
dec_label_pc_187d1:
  %v0_187d2 = load i32, i32* @eax, align 4
  ret i32 %v0_187d2
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_187d6:
  %v1_187f3 = call i32 @unknown_33e2a(i32 %arg1)
  store i32 %v1_187f3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18804

bb:                                               ; preds = %dec_label_pc_187d6
  %v1_18802 = call i32 @function_18809()
  br label %dec_label_pc_18804

dec_label_pc_18804:                               ; preds = %bb, %dec_label_pc_187d6
  %v2_18802 = phi i32 [ %v1_18802, %bb ], [ %v1_187f3, %dec_label_pc_187d6 ]
  ret i32 %v2_18802
}

define i32 @function_18809() local_unnamed_addr {
dec_label_pc_18809:
  %v0_1880a = load i32, i32* @eax, align 4
  ret i32 %v0_1880a
}

define i32 @_ZNK5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE5mutexEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1880c:
  %v2_18826 = load i32, i32* %arg1, align 4
  store i32 %v2_18826, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18834

bb:                                               ; preds = %dec_label_pc_1880c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_18832 = call i32 @function_18839(i32 %tmp100)
  br label %dec_label_pc_18834

dec_label_pc_18834:                               ; preds = %bb, %dec_label_pc_1880c
  %v3_18832 = phi i32 [ %v2_18832, %bb ], [ %v2_18826, %dec_label_pc_1880c ]
  ret i32 %v3_18832

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18839(i32 %arg1) local_unnamed_addr {
dec_label_pc_18839:
  %v0_1883a = load i32, i32* @eax, align 4
  ret i32 %v0_1883a
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE8try_lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1883c:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1885a = call i32 @unknown_2d03c(i32 %tmp101)
  %v4_1885f = trunc i32 %v1_1885a to i8
  %v5_1885f = icmp eq i8 %v4_1885f, 0
  br i1 %v5_1885f, label %dec_label_pc_18879, label %dec_label_pc_18863

dec_label_pc_18863:                               ; preds = %dec_label_pc_1883c
  %v2_18863 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_18863, i32* @eax, align 4
  %v1_18869 = call i32 @function_1e1ce(i32 %v2_18863)
  br label %dec_label_pc_18879

dec_label_pc_18879:                               ; preds = %dec_label_pc_18863, %dec_label_pc_1883c
  %v2_1887c = load i32, i32* %arg1, align 4
  %v1_18881 = call i32 @unknown_33ef4(i32 %v2_1887c)
  %v1_18889 = trunc i32 %v1_18881 to i8
  %v3_18889 = add i32 %tmp101, 4
  %v4_18889 = inttoptr i32 %v3_18889 to i8*
  store i8 %v1_18889, i8* %v4_18889, align 1
  %v4_1888f = and i32 %v1_18881, 255
  store i32 %v4_1888f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1889f

bb:                                               ; preds = %dec_label_pc_18879
  %v1_1889d = call i32 @function_188bd()
  store i32 %v1_1889d, i32* @eax, align 4
  br label %dec_label_pc_1889f

dec_label_pc_1889f:                               ; preds = %bb, %dec_label_pc_18879
  %v0_1889f = call i32 @function_188b8()
  ret i32 %v0_1889f
}

define i32 @function_188a2() local_unnamed_addr {
dec_label_pc_188a2:
  %eax.global-to-local = alloca i32, align 4
  %v0_188a2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_188a2
}

define i32 @function_188b8() local_unnamed_addr {
dec_label_pc_188b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_188bd() local_unnamed_addr {
dec_label_pc_188bd:
  %v0_188c2 = load i32, i32* @eax, align 4
  ret i32 %v0_188c2
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_188c4:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp101, i32* %stack_var_-60, align 4
  %v1_188e2 = call i32 @unknown_2d0c4(i32 %tmp101)
  %v4_188e7 = trunc i32 %v1_188e2 to i8
  %v5_188e7 = icmp eq i8 %v4_188e7, 0
  br i1 %v5_188e7, label %dec_label_pc_18901, label %dec_label_pc_188eb

dec_label_pc_188eb:                               ; preds = %dec_label_pc_188c4
  %v2_188eb = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_188eb, i32* @eax, align 4
  store i32 %v2_188eb, i32* %stack_var_-60, align 4
  %v1_188f1 = call i32 @function_1e256(i32 %v2_188eb)
  store i32 %v2_188eb, i32* @eax, align 4
  store i32 %v2_188eb, i32* %stack_var_-60, align 4
  %v1_188fc = call i32 @function_2928f(i32 %v2_188eb)
  br label %dec_label_pc_18901

dec_label_pc_18901:                               ; preds = %dec_label_pc_188eb, %dec_label_pc_188c4
  %v2_18904 = load i32, i32* %arg1, align 4
  store i32 %v2_18904, i32* %stack_var_-60, align 4
  %v1_18911 = add i32 %tmp101, 4
  %v2_18911 = inttoptr i32 %v1_18911 to i8*
  store i8 1, i8* %v2_18911, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18921

bb:                                               ; preds = %dec_label_pc_18901
  %v1_1891f = load i32, i32* %stack_var_-60, align 4
  %v2_1891f = call i32 @function_1893f(i32 %v1_1891f)
  store i32 %v2_1891f, i32* @eax, align 4
  br label %dec_label_pc_18921

dec_label_pc_18921:                               ; preds = %bb, %dec_label_pc_18901
  %v0_18921 = call i32 @function_1893a()
  ret i32 %v0_18921

; uselistorder directives
  uselistorder i32 %v2_188eb, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %tmp101, { 0, 2, 1 }
}

define i32 @function_18924() local_unnamed_addr {
dec_label_pc_18924:
  %eax.global-to-local = alloca i32, align 4
  %v0_18924 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18924
}

define i32 @function_1893a() local_unnamed_addr {
dec_label_pc_1893a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1893f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1893f:
  %v0_18944 = load i32, i32* @eax, align 4
  ret i32 %v0_18944
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_18945:
  %v2_18965 = load i32, i32* %arg2, align 4
  %v2_1896a = add i32 %arg1, 8
  %v3_1896a = inttoptr i32 %v2_1896a to i32*
  store i32 %v2_18965, i32* %v3_1896a, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1897c

bb:                                               ; preds = %dec_label_pc_18945
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_1897a = call i32 @function_18981(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_1897c

dec_label_pc_1897c:                               ; preds = %bb, %dec_label_pc_18945
  %v4_1897a = phi i32 [ %v3_1897a, %bb ], [ %arg1, %dec_label_pc_18945 ]
  ret i32 %v4_1897a

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_18981(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18981:
  %v0_18982 = load i32, i32* @eax, align 4
  ret i32 %v0_18982
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_18983:
  %v2_189a3 = load i32, i32* %arg2, align 4
  %v2_189a8 = add i32 %arg1, 12
  %v3_189a8 = inttoptr i32 %v2_189a8 to i32*
  store i32 %v2_189a3, i32* %v3_189a8, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_189ba

bb:                                               ; preds = %dec_label_pc_18983
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_189b8 = call i32 @function_189bf(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_189ba

dec_label_pc_189ba:                               ; preds = %bb, %dec_label_pc_18983
  %v4_189b8 = phi i32 [ %v3_189b8, %bb ], [ %arg1, %dec_label_pc_18983 ]
  ret i32 %v4_189b8

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_189bf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_189bf:
  %v0_189c0 = load i32, i32* @eax, align 4
  ret i32 %v0_189c0
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_189c1:
  %v2_189e1 = load i32, i32* %arg2, align 4
  %v2_189e6 = add i32 %arg1, 16
  %v3_189e6 = inttoptr i32 %v2_189e6 to i32*
  store i32 %v2_189e1, i32* %v3_189e6, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_189f8

bb:                                               ; preds = %dec_label_pc_189c1
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_189f6 = call i32 @function_189fd(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_189f8

dec_label_pc_189f8:                               ; preds = %bb, %dec_label_pc_189c1
  %v4_189f6 = phi i32 [ %v3_189f6, %bb ], [ %arg1, %dec_label_pc_189c1 ]
  ret i32 %v4_189f6

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_189fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_189fd:
  %v0_189fe = load i32, i32* @eax, align 4
  ret i32 %v0_189fe
}

define i32 @_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18a00:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_18a32() local_unnamed_addr {
dec_label_pc_18a32:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_18a32 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18a32 = add i32 %v0_18a32, -532313149
  %v2_18a32 = inttoptr i32 %v1_18a32 to i32*
  %v3_18a32 = load i32, i32* %v2_18a32, align 4
  %v4_18a32 = add i32 %v3_18a32, -1
  store i32 %v4_18a32, i32* %v2_18a32, align 4
  %v0_18a38 = load i32, i32* %eax.global-to-local, align 4
  %v0_18a3c = load i32, i32* %ebx.global-to-local, align 4
  %v2_18a3f = call i32 @unknown_340ee(i32 %v0_18a3c, i32 %v0_18a38)
  store i32 %v2_18a3f, i32* %eax.global-to-local, align 4
  %v0_18a44 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18a44 = add i32 %v0_18a44, -28
  %v2_18a44 = inttoptr i32 %v1_18a44 to i32*
  %v3_18a44 = load i32, i32* %v2_18a44, align 4
  store i32 %v3_18a44, i32* %eax.global-to-local, align 4
  %v0_18a47 = load i32, i32* %ebx.global-to-local, align 4
  %v2_18a47 = inttoptr i32 %v3_18a44 to i32*
  store i32 %v0_18a47, i32* %v2_18a47, align 4
  %v0_18a49 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18a49 = add i32 %v0_18a49, -12
  %v2_18a49 = inttoptr i32 %v1_18a49 to i32*
  %v3_18a49 = load i32, i32* %v2_18a49, align 4
  store i32 %v3_18a49, i32* %eax.global-to-local, align 4
  %v1_18a4c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18a4c = xor i32 %v1_18a4c, %v3_18a49
  %v3_18a4c = icmp eq i32 %v2_18a4c, 0
  store i32 %v2_18a4c, i32* @eax, align 4
  br i1 %v3_18a4c, label %bb, label %dec_label_pc_18a55

bb:                                               ; preds = %dec_label_pc_18a32
  %v1_18a53 = call i32 @function_18a85()
  store i32 %v1_18a53, i32* @eax, align 4
  br label %dec_label_pc_18a55

dec_label_pc_18a55:                               ; preds = %bb, %dec_label_pc_18a32
  %v0_18a55 = call i32 @function_18a80()
  store i32 %v0_18a55, i32* %eax.global-to-local, align 4
  ret i32 %v0_18a55
}

define i32 @function_18a58() local_unnamed_addr {
dec_label_pc_18a58:
  %eax.global-to-local = alloca i32, align 4
  %v0_18a58 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18a58
}

define i32 @function_18a80() local_unnamed_addr {
dec_label_pc_18a80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18a85() local_unnamed_addr {
dec_label_pc_18a85:
  %v0_18a8a = load i32, i32* @eax, align 4
  ret i32 %v0_18a8a
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a8b:
  %v3_18ac2 = call i32 @unknown_34208(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_18ac2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18ad3

bb:                                               ; preds = %dec_label_pc_18a8b
  %v1_18ad1 = call i32 @function_18ad8()
  br label %dec_label_pc_18ad3

dec_label_pc_18ad3:                               ; preds = %bb, %dec_label_pc_18a8b
  %v2_18ad1 = phi i32 [ %v1_18ad1, %bb ], [ %v3_18ac2, %dec_label_pc_18a8b ]
  ret i32 %v2_18ad1
}

define i32 @function_18ad8() local_unnamed_addr {
dec_label_pc_18ad8:
  %v0_18ad9 = load i32, i32* @eax, align 4
  ret i32 %v0_18ad9
}

define i32 @_ZNSt6vectorIhSaIhEE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18ada:
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v2_18b11 = call i32 @unknown_342a6(i32 %arg2, i32 %arg3)
  %v2_18b26 = call i32 @unknown_311cc(i32 %tmp110, i32 %v2_18b11)
  store i32 %v2_18b26, i32* %arg1, align 4
  %v5_18b39 = add i32 %v2_18b26, %v2_18b11
  %v2_18b3f = add i32 %tmp110, 8
  %v3_18b3f = inttoptr i32 %v2_18b3f to i32*
  store i32 %v5_18b39, i32* %v3_18b3f, align 4
  %v1_18b48 = call i32 @unknown_2cef0(i32 %tmp110)
  %v2_18b50 = load i32, i32* %arg1, align 4
  %v4_18b67 = call i32 @unknown_2d69b(i32 %arg2, i32 %arg3, i32 %v2_18b50, i32 %v1_18b48)
  %v2_18b71 = add i32 %tmp110, 4
  %v3_18b71 = inttoptr i32 %v2_18b71 to i32*
  store i32 %v4_18b67, i32* %v3_18b71, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18b80

bb:                                               ; preds = %dec_label_pc_18ada
  %v1_18b7e = call i32 @function_18b85()
  br label %dec_label_pc_18b80

dec_label_pc_18b80:                               ; preds = %bb, %dec_label_pc_18ada
  %v2_18b7e = phi i32 [ %v1_18b7e, %bb ], [ 0, %dec_label_pc_18ada ]
  ret i32 %v2_18b7e

; uselistorder directives
  uselistorder i32 %tmp110, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_18b85() local_unnamed_addr {
dec_label_pc_18b85:
  %v0_18b86 = load i32, i32* @eax, align 4
  ret i32 %v0_18b86
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_18b87:
  %v1_18ba4 = call i32 @unknown_3442b(i32 %arg1)
  store i32 %v1_18ba4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18bb5

bb:                                               ; preds = %dec_label_pc_18b87
  %v1_18bb3 = call i32 @function_18bba()
  br label %dec_label_pc_18bb5

dec_label_pc_18bb5:                               ; preds = %bb, %dec_label_pc_18b87
  %v2_18bb3 = phi i32 [ %v1_18bb3, %bb ], [ %v1_18ba4, %dec_label_pc_18b87 ]
  ret i32 %v2_18bb3
}

define i32 @function_18bba() local_unnamed_addr {
dec_label_pc_18bba:
  %v0_18bbb = load i32, i32* @eax, align 4
  ret i32 %v0_18bbb
}

define i32 @_ZNSaI5CTxInED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18bbc:
  %v1_18bd9 = call i32 @unknown_34498(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18bea

bb:                                               ; preds = %dec_label_pc_18bbc
  %v1_18be8 = call i32 @function_18bef()
  br label %dec_label_pc_18bea

dec_label_pc_18bea:                               ; preds = %bb, %dec_label_pc_18bbc
  %v2_18be8 = phi i32 [ %v1_18be8, %bb ], [ 0, %dec_label_pc_18bbc ]
  ret i32 %v2_18be8
}

define i32 @function_18bef() local_unnamed_addr {
dec_label_pc_18bef:
  %v0_18bf0 = load i32, i32* @eax, align 4
  ret i32 %v0_18bf0
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18bf2:
  %v10_18c15 = icmp eq i32 %arg2, 0
  br i1 %v10_18c15, label %dec_label_pc_18c34, label %dec_label_pc_18c1b

dec_label_pc_18c1b:                               ; preds = %dec_label_pc_18bf2
  %v3_18c2f = call i32 @unknown_344f8(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_18c34

dec_label_pc_18c34:                               ; preds = %dec_label_pc_18c1b, %dec_label_pc_18bf2
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18c40

bb:                                               ; preds = %dec_label_pc_18c34
  %v1_18c3e = call i32 @function_18c45()
  br label %dec_label_pc_18c40

dec_label_pc_18c40:                               ; preds = %bb, %dec_label_pc_18c34
  %v2_18c3e = phi i32 [ %v1_18c3e, %bb ], [ 0, %dec_label_pc_18c34 ]
  ret i32 %v2_18c3e
}

define i32 @function_18c45() local_unnamed_addr {
dec_label_pc_18c45:
  %v0_18c46 = load i32, i32* @eax, align 4
  ret i32 %v0_18c46
}

define i32 @_ZSt8_DestroyIP5CTxInEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18c47:
  %v2_18c71 = call i32 @unknown_3458e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18c82

bb:                                               ; preds = %dec_label_pc_18c47
  %v1_18c80 = call i32 @function_18c87()
  br label %dec_label_pc_18c82

dec_label_pc_18c82:                               ; preds = %bb, %dec_label_pc_18c47
  %v2_18c80 = phi i32 [ %v1_18c80, %bb ], [ 0, %dec_label_pc_18c47 ]
  ret i32 %v2_18c80
}

define i32 @function_18c87() local_unnamed_addr {
dec_label_pc_18c87:
  %v0_18c88 = load i32, i32* @eax, align 4
  ret i32 %v0_18c88
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18c8a:
  %v10_18cad = icmp eq i32 %arg2, 0
  br i1 %v10_18cad, label %dec_label_pc_18ccc, label %dec_label_pc_18cb3

dec_label_pc_18cb3:                               ; preds = %dec_label_pc_18c8a
  %v3_18cc7 = call i32 @unknown_34628(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_18ccc

dec_label_pc_18ccc:                               ; preds = %dec_label_pc_18cb3, %dec_label_pc_18c8a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18cd8

bb:                                               ; preds = %dec_label_pc_18ccc
  %v1_18cd6 = call i32 @function_18cdd()
  br label %dec_label_pc_18cd8

dec_label_pc_18cd8:                               ; preds = %bb, %dec_label_pc_18ccc
  %v2_18cd6 = phi i32 [ %v1_18cd6, %bb ], [ 0, %dec_label_pc_18ccc ]
  ret i32 %v2_18cd6
}

define i32 @function_18cdd() local_unnamed_addr {
dec_label_pc_18cdd:
  %v0_18cde = load i32, i32* @eax, align 4
  ret i32 %v0_18cde
}

define i32 @_ZSt8_DestroyIP6CTxOutEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18cdf:
  %v2_18d09 = call i32 @unknown_346be(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18d1a

bb:                                               ; preds = %dec_label_pc_18cdf
  %v1_18d18 = call i32 @function_18d1f()
  br label %dec_label_pc_18d1a

dec_label_pc_18d1a:                               ; preds = %bb, %dec_label_pc_18cdf
  %v2_18d18 = phi i32 [ %v1_18d18, %bb ], [ 0, %dec_label_pc_18cdf ]
  ret i32 %v2_18d18
}

define i32 @function_18d1f() local_unnamed_addr {
dec_label_pc_18d1f:
  %v0_18d20 = load i32, i32* @eax, align 4
  ret i32 %v0_18d20
}

define i32 @_Z21GetSerializeSize_implI5CTxInSaIS0_EEjRKSt6vectorIT_T0_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18d21:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 0, i32* @edx, align 8
  %v2_18d61 = call i32 @function_264d6(i32 %arg1, i32 0)
  %v2_18d69 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_18d69, i32* %eax.global-to-local, align 4
  %v2_18d76 = call i32 @unknown_2de3f(i32 %v2_18d69, i32 %arg1)
  store i32 %v2_18d76, i32* %eax.global-to-local, align 4
  %v16_18d7b = ptrtoint i32* %stack_var_-64 to i32
  %v2_18daf = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_18daf

dec_label_pc_18d80:                               ; preds = %dec_label_pc_18daf
  store i32 %v2_18d69, i32* %eax.global-to-local, align 4
  %v1_18d83 = load i32, i32* @esp, align 4
  %v2_18d83 = inttoptr i32 %v1_18d83 to i32*
  store i32 %v2_18d69, i32* %v2_18d83, align 4
  %v0_18d86 = call i32 @unknown_347e5()
  store i32 %v0_18d86, i32* %eax.global-to-local, align 4
  %v1_18d8e = load i32, i32* @esp, align 4
  %v2_18d8e = add i32 %v1_18d8e, 8
  %v3_18d8e = inttoptr i32 %v2_18d8e to i32*
  store i32 %arg3, i32* %v3_18d8e, align 4
  %v1_18d95 = load i32, i32* @esp, align 4
  %v2_18d95 = add i32 %v1_18d95, 4
  %v3_18d95 = inttoptr i32 %v2_18d95 to i32*
  store i32 %arg2, i32* %v3_18d95, align 4
  %v0_18d99 = load i32, i32* %eax.global-to-local, align 4
  %v1_18d99 = load i32, i32* @esp, align 4
  %v2_18d99 = inttoptr i32 %v1_18d99 to i32*
  store i32 %v0_18d99, i32* %v2_18d99, align 4
  %v0_18d9c = call i32 @unknown_34814()
  %v5_18da1 = add i32 %v0_18d9c, %stack_var_-20.0
  store i32 %v2_18d69, i32* %eax.global-to-local, align 4
  %v1_18da7 = load i32, i32* @esp, align 4
  %v2_18da7 = inttoptr i32 %v1_18da7 to i32*
  store i32 %v2_18d69, i32* %v2_18da7, align 4
  %v1_18daa = call i32 @unknown_347ab(i32 %v5_18da1)
  store i32 %v1_18daa, i32* %eax.global-to-local, align 4
  %v1_18db5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_18daf

dec_label_pc_18daf:                               ; preds = %dec_label_pc_18d80, %dec_label_pc_18d21
  %v1_18db5 = phi i32 [ %v16_18d7b, %dec_label_pc_18d21 ], [ %v1_18db5.pre, %dec_label_pc_18d80 ]
  %stack_var_-20.0 = phi i32 [ %v2_18d61, %dec_label_pc_18d21 ], [ %v5_18da1, %dec_label_pc_18d80 ]
  store i32 %v2_18daf, i32* %eax.global-to-local, align 4
  %v2_18db5 = add i32 %v1_18db5, 4
  %v3_18db5 = inttoptr i32 %v2_18db5 to i32*
  store i32 %arg1, i32* %v3_18db5, align 4
  %v1_18db9 = load i32, i32* @esp, align 4
  %v2_18db9 = inttoptr i32 %v1_18db9 to i32*
  store i32 %v2_18daf, i32* %v2_18db9, align 4
  %v0_18dbc = call i32 @unknown_2ddef()
  %v0_18dc1 = load i32, i32* @esp, align 4
  %v3_18dc7 = inttoptr i32 %v0_18dc1 to i32*
  store i32 %v2_18daf, i32* %v3_18dc7, align 4
  store i32 %v2_18d69, i32* %eax.global-to-local, align 4
  %v1_18dce = load i32, i32* @esp, align 4
  %v2_18dce = inttoptr i32 %v1_18dce to i32*
  store i32 %v2_18d69, i32* %v2_18dce, align 4
  %v0_18dd1 = call i32 @unknown_34756()
  store i32 %v0_18dd1, i32* %eax.global-to-local, align 4
  %v4_18dd6 = trunc i32 %v0_18dd1 to i8
  %v5_18dd6 = icmp eq i8 %v4_18dd6, 0
  %v1_18dd8 = icmp eq i1 %v5_18dd6, false
  br i1 %v1_18dd8, label %dec_label_pc_18d80, label %dec_label_pc_18dda

dec_label_pc_18dda:                               ; preds = %dec_label_pc_18daf
  store i32 %stack_var_-20.0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18de9

bb:                                               ; preds = %dec_label_pc_18dda
  %v1_18de7 = call i32 @function_18dee()
  store i32 %v1_18de7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18de9

dec_label_pc_18de9:                               ; preds = %bb, %dec_label_pc_18dda
  %v2_18de7 = phi i32 [ %v1_18de7, %bb ], [ %stack_var_-20.0, %dec_label_pc_18dda ]
  ret i32 %v2_18de7

; uselistorder directives
  uselistorder i32 %v2_18d69, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 6, 7, 8, 1, 2, 3, 4, 5, 9, 10, 11 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
}

define i32 @function_18dee() local_unnamed_addr {
dec_label_pc_18dee:
  %v0_18def = load i32, i32* @eax, align 4
  ret i32 %v0_18def
}

define i32 @_Z21GetSerializeSize_implI6CTxOutSaIS0_EEjRKSt6vectorIT_T0_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18df0:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_18e1f = call i32 @function_2ad0c(i32 %arg1)
  store i32 %v1_18e1f, i32* @eax, align 4
  %v2_18e30 = call i32 @function_265a5(i32 %v1_18e1f, i32 0)
  %v2_18e38 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_18e38, i32* %eax.global-to-local, align 4
  %v2_18e45 = call i32 @unknown_2dfae(i32 %v2_18e38, i32 %arg1)
  store i32 %v2_18e45, i32* %eax.global-to-local, align 4
  %v16_18e4a = ptrtoint i32* %stack_var_-64 to i32
  %v2_18e7e = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_18e7e

dec_label_pc_18e4f:                               ; preds = %dec_label_pc_18e7e
  store i32 %v2_18e38, i32* %eax.global-to-local, align 4
  %v1_18e52 = load i32, i32* @esp, align 4
  %v2_18e52 = inttoptr i32 %v1_18e52 to i32*
  store i32 %v2_18e38, i32* %v2_18e52, align 4
  %v0_18e55 = call i32 @unknown_2e220()
  store i32 %v0_18e55, i32* %eax.global-to-local, align 4
  %v1_18e5d = load i32, i32* @esp, align 4
  %v2_18e5d = add i32 %v1_18e5d, 8
  %v3_18e5d = inttoptr i32 %v2_18e5d to i32*
  store i32 %arg3, i32* %v3_18e5d, align 4
  %v1_18e64 = load i32, i32* @esp, align 4
  %v2_18e64 = add i32 %v1_18e64, 4
  %v3_18e64 = inttoptr i32 %v2_18e64 to i32*
  store i32 %arg2, i32* %v3_18e64, align 4
  %v0_18e68 = load i32, i32* %eax.global-to-local, align 4
  %v1_18e68 = load i32, i32* @esp, align 4
  %v2_18e68 = inttoptr i32 %v1_18e68 to i32*
  store i32 %v0_18e68, i32* %v2_18e68, align 4
  %v0_18e6b = call i32 @unknown_34986()
  %v5_18e70 = add i32 %v0_18e6b, %stack_var_-20.0
  store i32 %v2_18e38, i32* %eax.global-to-local, align 4
  %v1_18e76 = load i32, i32* @esp, align 4
  %v2_18e76 = inttoptr i32 %v1_18e76 to i32*
  store i32 %v2_18e38, i32* %v2_18e76, align 4
  %v1_18e79 = call i32 @unknown_2e1e6(i32 %v5_18e70)
  store i32 %v1_18e79, i32* %eax.global-to-local, align 4
  %v1_18e84.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_18e7e

dec_label_pc_18e7e:                               ; preds = %dec_label_pc_18e4f, %dec_label_pc_18df0
  %v1_18e84 = phi i32 [ %v16_18e4a, %dec_label_pc_18df0 ], [ %v1_18e84.pre, %dec_label_pc_18e4f ]
  %stack_var_-20.0 = phi i32 [ %v2_18e30, %dec_label_pc_18df0 ], [ %v5_18e70, %dec_label_pc_18e4f ]
  store i32 %v2_18e7e, i32* %eax.global-to-local, align 4
  %v2_18e84 = add i32 %v1_18e84, 4
  %v3_18e84 = inttoptr i32 %v2_18e84 to i32*
  store i32 %arg1, i32* %v3_18e84, align 4
  %v1_18e88 = load i32, i32* @esp, align 4
  %v2_18e88 = inttoptr i32 %v1_18e88 to i32*
  store i32 %v2_18e7e, i32* %v2_18e88, align 4
  %v0_18e8b = call i32 @unknown_2df5e()
  %v0_18e90 = load i32, i32* @esp, align 4
  %v3_18e96 = inttoptr i32 %v0_18e90 to i32*
  store i32 %v2_18e7e, i32* %v3_18e96, align 4
  store i32 %v2_18e38, i32* %eax.global-to-local, align 4
  %v1_18e9d = load i32, i32* @esp, align 4
  %v2_18e9d = inttoptr i32 %v1_18e9d to i32*
  store i32 %v2_18e38, i32* %v2_18e9d, align 4
  %v0_18ea0 = call i32 @unknown_34932()
  store i32 %v0_18ea0, i32* %eax.global-to-local, align 4
  %v4_18ea5 = trunc i32 %v0_18ea0 to i8
  %v5_18ea5 = icmp eq i8 %v4_18ea5, 0
  %v1_18ea7 = icmp eq i1 %v5_18ea5, false
  br i1 %v1_18ea7, label %dec_label_pc_18e4f, label %dec_label_pc_18ea9

dec_label_pc_18ea9:                               ; preds = %dec_label_pc_18e7e
  store i32 %stack_var_-20.0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18eb8

bb:                                               ; preds = %dec_label_pc_18ea9
  %v1_18eb6 = call i32 @function_18ebd()
  store i32 %v1_18eb6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18eb8

dec_label_pc_18eb8:                               ; preds = %bb, %dec_label_pc_18ea9
  %v2_18eb6 = phi i32 [ %v1_18eb6, %bb ], [ %stack_var_-20.0, %dec_label_pc_18ea9 ]
  ret i32 %v2_18eb6

; uselistorder directives
  uselistorder i32 %v2_18e38, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 6, 7, 8, 1, 2, 3, 4, 5, 9, 10, 11 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
}

define i32 @function_18ebd() local_unnamed_addr {
dec_label_pc_18ebd:
  %v0_18ebe = load i32, i32* @eax, align 4
  ret i32 %v0_18ebe
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18ec0:
  %v1_18ee0 = inttoptr i32 %arg2 to i32*
  %v2_18ee0 = load i32, i32* %v1_18ee0, align 4
  store i32 %v2_18ee0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18ef3

bb:                                               ; preds = %dec_label_pc_18ec0
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_18ef1 = call i32 @function_18ef8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_18ef3

dec_label_pc_18ef3:                               ; preds = %bb, %dec_label_pc_18ec0
  %v4_18ef1 = phi i32 [ %v3_18ef1, %bb ], [ 0, %dec_label_pc_18ec0 ]
  ret i32 %v4_18ef1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18ef8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18ef8:
  %v0_18ef9 = load i32, i32* @eax, align 4
  ret i32 %v0_18ef9
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18efa:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18f20

bb:                                               ; preds = %dec_label_pc_18efa
  %v2_18f1e = call i32 @function_18f25(i32 %arg1)
  br label %dec_label_pc_18f20

dec_label_pc_18f20:                               ; preds = %bb, %dec_label_pc_18efa
  %v3_18f1e = phi i32 [ %v2_18f1e, %bb ], [ %arg1, %dec_label_pc_18efa ]
  ret i32 %v3_18f1e
}

define i32 @function_18f25(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f25:
  %v0_18f26 = load i32, i32* @eax, align 4
  ret i32 %v0_18f26
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18f28:
  %v1_18f48 = inttoptr i32 %arg2 to i32*
  %v2_18f48 = load i32, i32* %v1_18f48, align 4
  store i32 %v2_18f48, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18f5b

bb:                                               ; preds = %dec_label_pc_18f28
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_18f59 = call i32 @function_18f60(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_18f5b

dec_label_pc_18f5b:                               ; preds = %bb, %dec_label_pc_18f28
  %v4_18f59 = phi i32 [ %v3_18f59, %bb ], [ 0, %dec_label_pc_18f28 ]
  ret i32 %v4_18f59

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18f60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18f60:
  %v0_18f61 = load i32, i32* @eax, align 4
  ret i32 %v0_18f61
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f62:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18f88

bb:                                               ; preds = %dec_label_pc_18f62
  %v2_18f86 = call i32 @function_18f8d(i32 %arg1)
  br label %dec_label_pc_18f88

dec_label_pc_18f88:                               ; preds = %bb, %dec_label_pc_18f62
  %v3_18f86 = phi i32 [ %v2_18f86, %bb ], [ %arg1, %dec_label_pc_18f62 ]
  ret i32 %v3_18f86
}

define i32 @function_18f8d(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f8d:
  %v0_18f8e = load i32, i32* @eax, align 4
  ret i32 %v0_18f8e
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18f90:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_18fba = call i32 @unknown_34b76(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_18fcb = add i32 %tmp103, 4
  %v2_18fcb = inttoptr i32 %v1_18fcb to i32*
  store i32 0, i32* %v2_18fcb, align 4
  %v1_18fd5 = add i32 %tmp103, 8
  %v2_18fd5 = inttoptr i32 %v1_18fd5 to i32*
  store i32 0, i32* %v2_18fd5, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18fe8

bb:                                               ; preds = %dec_label_pc_18f90
  %v1_18fe6 = call i32 @function_18fed()
  br label %dec_label_pc_18fe8

dec_label_pc_18fe8:                               ; preds = %bb, %dec_label_pc_18f90
  %v2_18fe6 = phi i32 [ %v1_18fe6, %bb ], [ 0, %dec_label_pc_18f90 ]
  ret i32 %v2_18fe6

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_18fed() local_unnamed_addr {
dec_label_pc_18fed:
  %v0_18fee = load i32, i32* @eax, align 4
  ret i32 %v0_18fee
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18ff0:
  %v10_1900d = icmp eq i32 %arg2, 0
  br i1 %v10_1900d, label %dec_label_pc_19034, label %dec_label_pc_19013

dec_label_pc_19013:                               ; preds = %dec_label_pc_18ff0
  %v3_19028 = call i32 @unknown_34c18(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_19034

dec_label_pc_19034:                               ; preds = %dec_label_pc_18ff0, %dec_label_pc_19013
  %storemerge = phi i32 [ %v3_19028, %dec_label_pc_19013 ], [ 0, %dec_label_pc_18ff0 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19040

bb:                                               ; preds = %dec_label_pc_19034
  %v1_1903e = call i32 @function_19045()
  br label %dec_label_pc_19040

dec_label_pc_19040:                               ; preds = %bb, %dec_label_pc_19034
  %v2_1903e = phi i32 [ %v1_1903e, %bb ], [ %storemerge, %dec_label_pc_19034 ]
  ret i32 %v2_1903e

; uselistorder directives
  uselistorder label %dec_label_pc_19034, { 1, 0 }
}

define i32 @function_19045() local_unnamed_addr {
dec_label_pc_19045:
  %v0_19046 = load i32, i32* @eax, align 4
  ret i32 %v0_19046
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19047:
  %v3_1907e = call i32 @unknown_34cd4(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1907e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1908f

bb:                                               ; preds = %dec_label_pc_19047
  %v1_1908d = call i32 @function_19094()
  br label %dec_label_pc_1908f

dec_label_pc_1908f:                               ; preds = %bb, %dec_label_pc_19047
  %v2_1908d = phi i32 [ %v1_1908d, %bb ], [ %v3_1907e, %dec_label_pc_19047 ]
  ret i32 %v2_1908d
}

define i32 @function_19094() local_unnamed_addr {
dec_label_pc_19094:
  %v0_19095 = load i32, i32* @eax, align 4
  ret i32 %v0_19095
}

define i32 @_ZSt24__uninitialized_fill_n_aIP6CTxOutjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19096:
  %v7_190d3 = call i32 @unknown_34de4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_190e4

bb:                                               ; preds = %dec_label_pc_19096
  %v1_190e2 = call i32 @function_190e9()
  br label %dec_label_pc_190e4

dec_label_pc_190e4:                               ; preds = %bb, %dec_label_pc_19096
  %v2_190e2 = phi i32 [ %v1_190e2, %bb ], [ 0, %dec_label_pc_19096 ]
  ret i32 %v2_190e2

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_190e9() local_unnamed_addr {
dec_label_pc_190e9:
  %v0_190ea = load i32, i32* @eax, align 4
  ret i32 %v0_190ea
}

define i32 @_ZNK9base_uintILj256EE16GetSerializeSizeEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_190ec:
  store i32 32, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19120

bb:                                               ; preds = %dec_label_pc_190ec
  %v4_1911e = call i32 @function_19125(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_19120

dec_label_pc_19120:                               ; preds = %bb, %dec_label_pc_190ec
  %v5_1911e = phi i32 [ %v4_1911e, %bb ], [ 32, %dec_label_pc_190ec ]
  ret i32 %v5_1911e
}

define i32 @function_19125(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19125:
  %v0_19126 = load i32, i32* @eax, align 4
  ret i32 %v0_19126
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19128:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_19145 = call i32 @unknown_34ec6(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_19156 = add i32 %tmp100, 4
  %v2_19156 = inttoptr i32 %v1_19156 to i32*
  store i32 0, i32* %v2_19156, align 4
  %v1_19160 = add i32 %tmp100, 8
  %v2_19160 = inttoptr i32 %v1_19160 to i32*
  store i32 0, i32* %v2_19160, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19173

bb:                                               ; preds = %dec_label_pc_19128
  %v1_19171 = call i32 @function_19178()
  br label %dec_label_pc_19173

dec_label_pc_19173:                               ; preds = %bb, %dec_label_pc_19128
  %v2_19171 = phi i32 [ %v1_19171, %bb ], [ 0, %dec_label_pc_19128 ]
  ret i32 %v2_19171

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_19178() local_unnamed_addr {
dec_label_pc_19178:
  %v0_19179 = load i32, i32* @eax, align 4
  ret i32 %v0_19179
}

define i32 @_ZNSaI12CTransactionED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1917a:
  %v1_19197 = call i32 @unknown_34f4e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_191a8

bb:                                               ; preds = %dec_label_pc_1917a
  %v1_191a6 = call i32 @function_191ad()
  br label %dec_label_pc_191a8

dec_label_pc_191a8:                               ; preds = %bb, %dec_label_pc_1917a
  %v2_191a6 = phi i32 [ %v1_191a6, %bb ], [ 0, %dec_label_pc_1917a ]
  ret i32 %v2_191a6
}

define i32 @function_191ad() local_unnamed_addr {
dec_label_pc_191ad:
  %v0_191ae = load i32, i32* @eax, align 4
  ret i32 %v0_191ae
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_191b0:
  %v10_191d3 = icmp eq i32 %arg2, 0
  br i1 %v10_191d3, label %dec_label_pc_191f2, label %dec_label_pc_191d9

dec_label_pc_191d9:                               ; preds = %dec_label_pc_191b0
  %v3_191ed = call i32 @unknown_34fae(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_191f2

dec_label_pc_191f2:                               ; preds = %dec_label_pc_191d9, %dec_label_pc_191b0
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_191fe

bb:                                               ; preds = %dec_label_pc_191f2
  %v1_191fc = call i32 @function_19203()
  br label %dec_label_pc_191fe

dec_label_pc_191fe:                               ; preds = %bb, %dec_label_pc_191f2
  %v2_191fc = phi i32 [ %v1_191fc, %bb ], [ 0, %dec_label_pc_191f2 ]
  ret i32 %v2_191fc
}

define i32 @function_19203() local_unnamed_addr {
dec_label_pc_19203:
  %v0_19204 = load i32, i32* @eax, align 4
  ret i32 %v0_19204
}

define i32 @_ZSt8_DestroyIP12CTransactionEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19205:
  %v2_1922f = call i32 @unknown_35044(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19240

bb:                                               ; preds = %dec_label_pc_19205
  %v1_1923e = call i32 @function_19245()
  br label %dec_label_pc_19240

dec_label_pc_19240:                               ; preds = %bb, %dec_label_pc_19205
  %v2_1923e = phi i32 [ %v1_1923e, %bb ], [ 0, %dec_label_pc_19205 ]
  ret i32 %v2_1923e
}

define i32 @function_19245() local_unnamed_addr {
dec_label_pc_19245:
  %v0_19246 = load i32, i32* @eax, align 4
  ret i32 %v0_19246
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19248:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_19265 = call i32 @unknown_350de(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_19276 = add i32 %tmp100, 4
  %v2_19276 = inttoptr i32 %v1_19276 to i32*
  store i32 0, i32* %v2_19276, align 4
  %v1_19280 = add i32 %tmp100, 8
  %v2_19280 = inttoptr i32 %v1_19280 to i32*
  store i32 0, i32* %v2_19280, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19293

bb:                                               ; preds = %dec_label_pc_19248
  %v1_19291 = call i32 @function_19298()
  br label %dec_label_pc_19293

dec_label_pc_19293:                               ; preds = %bb, %dec_label_pc_19248
  %v2_19291 = phi i32 [ %v1_19291, %bb ], [ 0, %dec_label_pc_19248 ]
  ret i32 %v2_19291

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_19298() local_unnamed_addr {
dec_label_pc_19298:
  %v0_19299 = load i32, i32* @eax, align 4
  ret i32 %v0_19299
}

define i32 @_ZNSaI7uint256ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1929a:
  %v1_192b7 = call i32 @unknown_35166(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_192c8

bb:                                               ; preds = %dec_label_pc_1929a
  %v1_192c6 = call i32 @function_192cd()
  br label %dec_label_pc_192c8

dec_label_pc_192c8:                               ; preds = %bb, %dec_label_pc_1929a
  %v2_192c6 = phi i32 [ %v1_192c6, %bb ], [ 0, %dec_label_pc_1929a ]
  ret i32 %v2_192c6
}

define i32 @function_192cd() local_unnamed_addr {
dec_label_pc_192cd:
  %v0_192ce = load i32, i32* @eax, align 4
  ret i32 %v0_192ce
}

define i32 @_ZSt8_DestroyIP7uint256EvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_192cf:
  %v2_192f9 = call i32 @unknown_351c5(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1930a

bb:                                               ; preds = %dec_label_pc_192cf
  %v1_19308 = call i32 @function_1930f()
  br label %dec_label_pc_1930a

dec_label_pc_1930a:                               ; preds = %bb, %dec_label_pc_192cf
  %v2_19308 = phi i32 [ %v1_19308, %bb ], [ 0, %dec_label_pc_192cf ]
  ret i32 %v2_19308
}

define i32 @function_1930f() local_unnamed_addr {
dec_label_pc_1930f:
  %v0_19310 = load i32, i32* @eax, align 4
  ret i32 %v0_19310
}

define i32 @_Z21GetSerializeSize_implI12CTransactionSaIS0_EEjRKSt6vectorIT_T0_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19311:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_19340 = call i32 @function_2b563(i32 %arg1)
  store i32 %v1_19340, i32* %eax.global-to-local, align 4
  %v2_19351 = inttoptr i32 %v1_19340 to i32*
  %v3_19351 = call i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKSsEEPS4_RT_i(i32* %v2_19351, i32 0)
  %v2_19359 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_19359, i32* %eax.global-to-local, align 4
  %v2_19366 = call i32 @unknown_35237(i32 %v2_19359, i32 %arg1)
  store i32 %v2_19366, i32* %eax.global-to-local, align 4
  %v16_1936b = ptrtoint i32* %stack_var_-64 to i32
  %v2_1939f = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_1939f

dec_label_pc_19370:                               ; preds = %dec_label_pc_1939f
  store i32 %v2_19359, i32* %eax.global-to-local, align 4
  %v1_19373 = load i32, i32* @esp, align 4
  %v2_19373 = inttoptr i32 %v1_19373 to i32*
  store i32 %v2_19359, i32* %v2_19373, align 4
  %v0_19376 = call i32 @unknown_2fa7f()
  store i32 %v0_19376, i32* %eax.global-to-local, align 4
  %v1_1937e = load i32, i32* @esp, align 4
  %v2_1937e = add i32 %v1_1937e, 8
  %v3_1937e = inttoptr i32 %v2_1937e to i32*
  store i32 %arg3, i32* %v3_1937e, align 4
  %v1_19385 = load i32, i32* @esp, align 4
  %v2_19385 = add i32 %v1_19385, 4
  %v3_19385 = inttoptr i32 %v2_19385 to i32*
  store i32 %arg2, i32* %v3_19385, align 4
  %v0_19389 = load i32, i32* %eax.global-to-local, align 4
  %v1_19389 = load i32, i32* @esp, align 4
  %v2_19389 = inttoptr i32 %v1_19389 to i32*
  store i32 %v0_19389, i32* %v2_19389, align 4
  %v0_1938c = call i32 @unknown_2ed0b()
  %v5_19391 = add i32 %v0_1938c, %stack_var_-20.0
  store i32 %v2_19359, i32* %eax.global-to-local, align 4
  %v1_19397 = load i32, i32* @esp, align 4
  %v2_19397 = inttoptr i32 %v1_19397 to i32*
  store i32 %v2_19359, i32* %v2_19397, align 4
  %v1_1939a = call i32 @unknown_2fa45(i32 %v5_19391)
  store i32 %v1_1939a, i32* %eax.global-to-local, align 4
  %v1_193a5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_1939f

dec_label_pc_1939f:                               ; preds = %dec_label_pc_19370, %dec_label_pc_19311
  %v1_193a5 = phi i32 [ %v16_1936b, %dec_label_pc_19311 ], [ %v1_193a5.pre, %dec_label_pc_19370 ]
  %stack_var_-20.0 = phi i32 [ %v3_19351, %dec_label_pc_19311 ], [ %v5_19391, %dec_label_pc_19370 ]
  store i32 %v2_1939f, i32* %eax.global-to-local, align 4
  %v2_193a5 = add i32 %v1_193a5, 4
  %v3_193a5 = inttoptr i32 %v2_193a5 to i32*
  store i32 %arg1, i32* %v3_193a5, align 4
  %v1_193a9 = load i32, i32* @esp, align 4
  %v2_193a9 = inttoptr i32 %v1_193a9 to i32*
  store i32 %v2_1939f, i32* %v2_193a9, align 4
  %v0_193ac = call i32 @unknown_35287()
  %v0_193b1 = load i32, i32* @esp, align 4
  %v3_193b7 = inttoptr i32 %v0_193b1 to i32*
  store i32 %v2_1939f, i32* %v3_193b7, align 4
  store i32 %v2_19359, i32* %eax.global-to-local, align 4
  %v1_193be = load i32, i32* @esp, align 4
  %v2_193be = inttoptr i32 %v1_193be to i32*
  store i32 %v2_19359, i32* %v2_193be, align 4
  %v0_193c1 = call i32 @unknown_352d7()
  store i32 %v0_193c1, i32* %eax.global-to-local, align 4
  %v4_193c6 = trunc i32 %v0_193c1 to i8
  %v5_193c6 = icmp eq i8 %v4_193c6, 0
  %v1_193c8 = icmp eq i1 %v5_193c6, false
  br i1 %v1_193c8, label %dec_label_pc_19370, label %dec_label_pc_193ca

dec_label_pc_193ca:                               ; preds = %dec_label_pc_1939f
  store i32 %stack_var_-20.0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_193d9

bb:                                               ; preds = %dec_label_pc_193ca
  %v1_193d7 = call i32 @function_193de()
  store i32 %v1_193d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_193d9

dec_label_pc_193d9:                               ; preds = %bb, %dec_label_pc_193ca
  %v2_193d7 = phi i32 [ %v1_193d7, %bb ], [ %stack_var_-20.0, %dec_label_pc_193ca ]
  ret i32 %v2_193d7

; uselistorder directives
  uselistorder i32 %v2_19359, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 6, 7, 8, 1, 2, 3, 4, 5, 9, 10, 11, 12 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
}

define i32 @function_193de() local_unnamed_addr {
dec_label_pc_193de:
  %v0_193df = load i32, i32* @eax, align 4
  ret i32 %v0_193df
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_193e0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_193f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1940a = call i32 @unknown_354cc(i32 %tmp102, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_1941b = add i32 %tmp102, 4
  %v2_1941b = inttoptr i32 %v1_1941b to i32*
  store i32 0, i32* %v2_1941b, align 4
  %v1_19425 = add i32 %tmp102, 8
  %v2_19425 = inttoptr i32 %v1_19425 to i32*
  store i32 0, i32* %v2_19425, align 4
  ret i32 %v0_193f2

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_19430(i32 %arg1) local_unnamed_addr {
dec_label_pc_19430:
  %v0_19430 = load i32, i32* @eax, align 4
  %v1_19430 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19430 = xor i32 %v1_19430, %v0_19430
  %v3_19430 = icmp eq i32 %v2_19430, 0
  store i32 %v2_19430, i32* @eax, align 4
  br i1 %v3_19430, label %bb, label %dec_label_pc_19438

bb:                                               ; preds = %dec_label_pc_19430
  %v1_19436 = call i32 @function_1943d()
  br label %dec_label_pc_19438

dec_label_pc_19438:                               ; preds = %bb, %dec_label_pc_19430
  %v2_19436 = phi i32 [ %v1_19436, %bb ], [ %v2_19430, %dec_label_pc_19430 ]
  ret i32 %v2_19436
}

define i32 @function_1943d() local_unnamed_addr {
dec_label_pc_1943d:
  %v0_1943e = load i32, i32* @eax, align 4
  ret i32 %v0_1943e
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19440:
  %v10_1945d = icmp eq i32 %arg2, 0
  br i1 %v10_1945d, label %dec_label_pc_19484, label %dec_label_pc_19463

dec_label_pc_19463:                               ; preds = %dec_label_pc_19440
  %v3_19478 = call i32 @unknown_3556e(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_19484

dec_label_pc_19484:                               ; preds = %dec_label_pc_19440, %dec_label_pc_19463
  %storemerge = phi i32 [ %v3_19478, %dec_label_pc_19463 ], [ 0, %dec_label_pc_19440 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19490

bb:                                               ; preds = %dec_label_pc_19484
  %v1_1948e = call i32 @function_19495()
  br label %dec_label_pc_19490

dec_label_pc_19490:                               ; preds = %bb, %dec_label_pc_19484
  %v2_1948e = phi i32 [ %v1_1948e, %bb ], [ %storemerge, %dec_label_pc_19484 ]
  ret i32 %v2_1948e

; uselistorder directives
  uselistorder label %dec_label_pc_19484, { 1, 0 }
}

define i32 @function_19495() local_unnamed_addr {
dec_label_pc_19495:
  %v0_19496 = load i32, i32* @eax, align 4
  ret i32 %v0_19496
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19497:
  %v3_194ce = call i32 @unknown_35623(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_194ce, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_194df

bb:                                               ; preds = %dec_label_pc_19497
  %v1_194dd = call i32 @function_194e4()
  br label %dec_label_pc_194df

dec_label_pc_194df:                               ; preds = %bb, %dec_label_pc_19497
  %v2_194dd = phi i32 [ %v1_194dd, %bb ], [ %v3_194ce, %dec_label_pc_19497 ]
  ret i32 %v2_194dd
}

define i32 @function_194e4() local_unnamed_addr {
dec_label_pc_194e4:
  %v0_194e5 = load i32, i32* @eax, align 4
  ret i32 %v0_194e5
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256E10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_194e6:
  ret i32 %arg2
}

define i32 @function_19524() local_unnamed_addr {
dec_label_pc_19524:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_19524 = load i32, i32* %ecx.global-to-local, align 4
  %v1_19524 = add i32 %v0_19524, -1
  store i32 %v1_19524, i32* %ecx.global-to-local, align 4
  %v0_19526 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19526
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP7uint256St6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19528:
  %v1_19548 = inttoptr i32 %arg2 to i32*
  %v2_19548 = load i32, i32* %v1_19548, align 4
  store i32 %v2_19548, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1955b

bb:                                               ; preds = %dec_label_pc_19528
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_19559 = call i32 @function_19560(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1955b

dec_label_pc_1955b:                               ; preds = %bb, %dec_label_pc_19528
  %v4_19559 = phi i32 [ %v3_19559, %bb ], [ 0, %dec_label_pc_19528 ]
  ret i32 %v4_19559

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_19560(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19560:
  %v0_19561 = load i32, i32* @eax, align 4
  ret i32 %v0_19561
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19562:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1957f = call i32 @unknown_357b0(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_19590 = add i32 %tmp100, 4
  %v2_19590 = inttoptr i32 %v1_19590 to i32*
  store i32 0, i32* %v2_19590, align 4
  %v1_1959a = add i32 %tmp100, 8
  %v2_1959a = inttoptr i32 %v1_1959a to i32*
  store i32 0, i32* %v2_1959a, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_195ad

bb:                                               ; preds = %dec_label_pc_19562
  %v1_195ab = call i32 @function_195b2()
  br label %dec_label_pc_195ad

dec_label_pc_195ad:                               ; preds = %bb, %dec_label_pc_19562
  %v2_195ab = phi i32 [ %v1_195ab, %bb ], [ 0, %dec_label_pc_19562 ]
  ret i32 %v2_195ab

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_195b2() local_unnamed_addr {
dec_label_pc_195b2:
  %v0_195b3 = load i32, i32* @eax, align 4
  ret i32 %v0_195b3
}

define i32 @_ZNSaIN11json_spirit9Pair_implINS_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_195b4:
  %v1_195d1 = call i32 @unknown_35838(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_195e2

bb:                                               ; preds = %dec_label_pc_195b4
  %v1_195e0 = call i32 @function_195e7()
  br label %dec_label_pc_195e2

dec_label_pc_195e2:                               ; preds = %bb, %dec_label_pc_195b4
  %v2_195e0 = phi i32 [ %v1_195e0, %bb ], [ 0, %dec_label_pc_195b4 ]
  ret i32 %v2_195e0
}

define i32 @function_195e7() local_unnamed_addr {
dec_label_pc_195e7:
  %v0_195e8 = load i32, i32* @eax, align 4
  ret i32 %v0_195e8
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_deallocateEPS4_j(i32 %arg1) local_unnamed_addr {
dec_label_pc_195ea:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v10_1960d = icmp eq i32 %tmp7, 0
  br i1 %v10_1960d, label %dec_label_pc_1962c, label %dec_label_pc_19613

dec_label_pc_19613:                               ; preds = %dec_label_pc_195ea
  %v3_19627 = call i32 @unknown_35898(i32 %arg1, i32 %tmp7, i32 %tmp5)
  br label %dec_label_pc_1962c

dec_label_pc_1962c:                               ; preds = %dec_label_pc_19613, %dec_label_pc_195ea
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19638

bb:                                               ; preds = %dec_label_pc_1962c
  %v1_19636 = call i32 @function_1963d()
  br label %dec_label_pc_19638

dec_label_pc_19638:                               ; preds = %bb, %dec_label_pc_1962c
  %v2_19636 = phi i32 [ %v1_19636, %bb ], [ 0, %dec_label_pc_1962c ]
  ret i32 %v2_19636
}

define i32 @function_1963d() local_unnamed_addr {
dec_label_pc_1963d:
  %v0_1963e = load i32, i32* @eax, align 4
  ret i32 %v0_1963e
}

define i32 @_ZSt8_DestroyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEEvT_S6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1963f:
  %v2_19669 = call i32 @unknown_3592e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1967a

bb:                                               ; preds = %dec_label_pc_1963f
  %v1_19678 = call i32 @function_1967f()
  br label %dec_label_pc_1967a

dec_label_pc_1967a:                               ; preds = %bb, %dec_label_pc_1963f
  %v2_19678 = phi i32 [ %v1_19678, %bb ], [ 0, %dec_label_pc_1963f ]
  ret i32 %v2_19678
}

define i32 @function_1967f() local_unnamed_addr {
dec_label_pc_1967f:
  %v0_19680 = load i32, i32* @eax, align 4
  ret i32 %v0_19680
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19681:
  %edx.global-to-local = alloca i32, align 4
  %v0_196a4 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_196a4, 16777216
  %v7_196bc = sdiv i32 %sext, 16777216
  %v8_196bc = call i32 @unknown_359c6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_196bc, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_196bc, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_196cd

bb:                                               ; preds = %dec_label_pc_19681
  %v1_196cb = call i32 @function_196d2()
  br label %dec_label_pc_196cd

dec_label_pc_196cd:                               ; preds = %bb, %dec_label_pc_19681
  %v2_196cb = phi i32 [ %v1_196cb, %bb ], [ %v8_196bc, %dec_label_pc_19681 ]
  ret i32 %v2_196cb

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_196d2() local_unnamed_addr {
dec_label_pc_196d2:
  %v0_196d3 = load i32, i32* @eax, align 4
  ret i32 %v0_196d3
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKSsEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_196d4:
  %v1_19701 = add i32 %arg1, 4
  %v1_19707 = call i32 @unknown_31eaa(i32 %v1_19701)
  %v2_19716 = call i32 @unknown_35a73(i32 %v1_19707, i32 %arg2)
  %v2_19725 = call i32 @unknown_33b7e(i32 %arg1, i32 %v2_19716)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19736

bb:                                               ; preds = %dec_label_pc_196d4
  %v1_19734 = call i32 @function_1973b()
  br label %dec_label_pc_19736

dec_label_pc_19736:                               ; preds = %bb, %dec_label_pc_196d4
  %v2_19734 = phi i32 [ %v1_19734, %bb ], [ 0, %dec_label_pc_196d4 ]
  ret i32 %v2_19734

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1973b() local_unnamed_addr {
dec_label_pc_1973b:
  %v0_1973c = load i32, i32* @eax, align 4
  ret i32 %v0_1973c
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_9destroyerEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1973e:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1975f = add i32 %tmp105, 4
  %v1_19765 = call i32 @unknown_31f14(i32 %v1_1975f)
  %v1_19772 = call i32 @unknown_33c20(i32 %tmp105)
  %v2_1977c = load i32, i32* %arg1, align 4
  %v4_19790 = call i32 @unknown_35b5d(i32 %v2_1977c, i32 %v1_19772, i32 %arg2, i32 %v1_19765)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_197a1

bb:                                               ; preds = %dec_label_pc_1973e
  %v1_1979f = call i32 @function_197a6()
  br label %dec_label_pc_197a1

dec_label_pc_197a1:                               ; preds = %bb, %dec_label_pc_1973e
  %v2_1979f = phi i32 [ %v1_1979f, %bb ], [ 0, %dec_label_pc_1973e ]
  ret i32 %v2_1979f

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_197a6() local_unnamed_addr {
dec_label_pc_197a6:
  %v0_197ab = load i32, i32* @eax, align 4
  ret i32 %v0_197ab
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_197ac:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_197d2

bb:                                               ; preds = %dec_label_pc_197ac
  %v2_197d0 = call i32 @function_197d7(i32 %arg1)
  br label %dec_label_pc_197d2

dec_label_pc_197d2:                               ; preds = %bb, %dec_label_pc_197ac
  %v3_197d0 = phi i32 [ %v2_197d0, %bb ], [ %arg1, %dec_label_pc_197ac ]
  ret i32 %v3_197d0
}

define i32 @function_197d7(i32 %arg1) local_unnamed_addr {
dec_label_pc_197d7:
  %v0_197d8 = load i32, i32* @eax, align 4
  ret i32 %v0_197d8
}

define i32 @_ZSt13copy_backwardIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_197d9:
  %v1_19803 = call i32 @unknown_35c6c(i32 %arg2)
  %v1_19810 = call i32 @unknown_35c6c(i32 %arg1)
  %v3_19823 = call i32 @unknown_35ca1(i32 %v1_19810, i32 %v1_19803, i32 %arg3)
  store i32 %v3_19823, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19834

bb:                                               ; preds = %dec_label_pc_197d9
  %v1_19832 = call i32 @function_19839()
  br label %dec_label_pc_19834

dec_label_pc_19834:                               ; preds = %bb, %dec_label_pc_197d9
  %v2_19832 = phi i32 [ %v1_19832, %bb ], [ %v3_19823, %dec_label_pc_197d9 ]
  ret i32 %v2_19832

; uselistorder directives
  uselistorder i32 (i32)* @unknown_35c6c, { 1, 0 }
}

define i32 @function_19839() local_unnamed_addr {
dec_label_pc_19839:
  %v0_1983e = load i32, i32* @eax, align 4
  ret i32 %v0_1983e
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_19840:
  %v2_1985a = load i32, i32* %arg1, align 4
  store i32 %v2_1985a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19868

bb:                                               ; preds = %dec_label_pc_19840
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_19866 = call i32 @function_1986d(i32 %tmp100)
  br label %dec_label_pc_19868

dec_label_pc_19868:                               ; preds = %bb, %dec_label_pc_19840
  %v3_19866 = phi i32 [ %v2_19866, %bb ], [ %v2_1985a, %dec_label_pc_19840 ]
  ret i32 %v3_19866

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1986d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1986d:
  %v0_1986e = load i32, i32* @eax, align 4
  ret i32 %v0_1986e
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEaSERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19870:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_19895 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1989b = call i32 @unknown_2c97e(i32 %v2_19895, i32 %arg2)
  %v2_198ad = call i32 @unknown_35daa(i32 %arg1, i32 %v2_19895)
  %v1_198b5 = add i32 %arg1, 4
  %v16_198bb = ptrtoint i32* %stack_var_-32 to i32
  %v2_198c5 = call i32 @unknown_35df4(i32 %v1_198b5, i32 %v16_198bb)
  %v1_198cd = add i32 %arg1, 16
  store i32 %v1_198cd, i32* @eax, align 4
  %v15_198d3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_198dd = call i32 @function_2afef(i32 %v1_198cd, i32 %v15_198d3)
  store i32 %v2_19895, i32* @eax, align 4
  %v1_198eb = call i32 @function_29b68(i32 %v2_19895)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_198fe

bb:                                               ; preds = %dec_label_pc_19870
  %v1_198fc = call i32 @function_1991c()
  store i32 %v1_198fc, i32* @eax, align 4
  br label %dec_label_pc_198fe

dec_label_pc_198fe:                               ; preds = %bb, %dec_label_pc_19870
  %v0_198fe = call i32 @function_19917()
  ret i32 %v0_198fe

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_19901() local_unnamed_addr {
dec_label_pc_19901:
  %eax.global-to-local = alloca i32, align 4
  %v0_19901 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19901
}

define i32 @function_19917() local_unnamed_addr {
dec_label_pc_19917:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1991c() local_unnamed_addr {
dec_label_pc_1991c:
  %v0_19921 = load i32, i32* @eax, align 4
  ret i32 %v0_19921
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19922:
  %v1_1994c = call i32 @unknown_35f36(i32 %arg1)
  %v1_19959 = call i32 @unknown_3061e(i32 %arg1)
  %v2_19960 = sub i32 %v1_1994c, %v1_19959
  %v7_19965 = icmp ult i32 %v2_19960, %arg2
  %v5_1996a = icmp eq i1 %v7_19965, false
  br i1 %v5_1996a, label %bb, label %dec_label_pc_1996e

bb:                                               ; preds = %dec_label_pc_19922
  %v1_1996c = call i32 @function_19979()
  br label %dec_label_pc_1996e

dec_label_pc_1996e:                               ; preds = %bb, %dec_label_pc_19922
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19979() local_unnamed_addr {
dec_label_pc_19979:
  %ebx.global-to-local = alloca i32, align 4
  %v0_19979 = load i32, i32* @ebp, align 4
  %v1_19979 = add i32 %v0_19979, -28
  %v2_19979 = inttoptr i32 %v1_19979 to i32*
  %v3_19979 = load i32, i32* %v2_19979, align 4
  %v1_1997f = call i32 @unknown_3061e(i32 %v3_19979)
  store i32 %v1_1997f, i32* %ebx.global-to-local, align 4
  %v0_19986 = load i32, i32* @ebp, align 4
  %v1_19986 = add i32 %v0_19986, -28
  %v2_19986 = inttoptr i32 %v1_19986 to i32*
  %v3_19986 = load i32, i32* %v2_19986, align 4
  %v1_1998c = call i32 @unknown_3061e(i32 %v3_19986)
  %v1_19991 = load i32, i32* @ebp, align 4
  %v2_19991 = add i32 %v1_19991, -20
  %v3_19991 = inttoptr i32 %v2_19991 to i32*
  store i32 %v1_1998c, i32* %v3_19991, align 4
  %v0_19994 = load i32, i32* @ebp, align 4
  %v1_19994 = add i32 %v0_19994, -32
  %v1_1999b = add i32 %v0_19994, -20
  %v2_199a1 = call i32 @unknown_34bee(i32 %v1_1999b, i32 %v1_19994)
  %v1_199a6 = inttoptr i32 %v2_199a1 to i32*
  %v2_199a6 = load i32, i32* %v1_199a6, align 4
  %v1_199a8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_199a8 = add i32 %v1_199a8, %v2_199a6
  %v1_199aa = load i32, i32* @ebp, align 4
  %v2_199aa = add i32 %v1_199aa, -16
  %v3_199aa = inttoptr i32 %v2_199aa to i32*
  store i32 %v2_199a8, i32* %v3_199aa, align 4
  %v0_199ad = load i32, i32* @ebp, align 4
  %v1_199ad = add i32 %v0_199ad, -28
  %v2_199ad = inttoptr i32 %v1_199ad to i32*
  %v3_199ad = load i32, i32* %v2_199ad, align 4
  %v1_199b3 = call i32 @unknown_3061e(i32 %v3_199ad)
  %v1_199b8 = load i32, i32* @ebp, align 4
  %v2_199b8 = add i32 %v1_199b8, -16
  %v3_199b8 = inttoptr i32 %v2_199b8 to i32*
  %v4_199b8 = load i32, i32* %v3_199b8, align 4
  %tmp5 = icmp ugt i32 %v1_199b3, %v4_199b8
  br i1 %tmp5, label %dec_label_pc_199cd, label %dec_label_pc_199bd

dec_label_pc_199bd:                               ; preds = %dec_label_pc_19979
  %v1_199bd = add i32 %v1_199b8, -28
  %v2_199bd = inttoptr i32 %v1_199bd to i32*
  %v3_199bd = load i32, i32* %v2_199bd, align 4
  %v1_199c3 = call i32 @unknown_35f36(i32 %v3_199bd)
  %v1_199c8 = load i32, i32* @ebp, align 4
  %v2_199c8 = add i32 %v1_199c8, -16
  %v3_199c8 = inttoptr i32 %v2_199c8 to i32*
  %v4_199c8 = load i32, i32* %v3_199c8, align 4
  %v10_199c8 = icmp ult i32 %v1_199c3, %v4_199c8
  %v1_199cb = icmp eq i1 %v10_199c8, false
  br i1 %v1_199cb, label %dec_label_pc_199dd, label %dec_label_pc_199cd

dec_label_pc_199cd:                               ; preds = %dec_label_pc_19979, %dec_label_pc_199bd
  %v0_199cd = phi i32 [ %v1_199b8, %dec_label_pc_19979 ], [ %v1_199c8, %dec_label_pc_199bd ]
  %v1_199cd = add i32 %v0_199cd, -28
  %v2_199cd = inttoptr i32 %v1_199cd to i32*
  %v3_199cd = load i32, i32* %v2_199cd, align 4
  %v1_199d3 = call i32 @unknown_35f36(i32 %v3_199cd)
  %v0_199dd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_199dd

dec_label_pc_199dd:                               ; preds = %dec_label_pc_199bd, %dec_label_pc_199cd
  %v0_199dd = phi i32 [ %v0_199dd.pre, %dec_label_pc_199cd ], [ %v1_199c8, %dec_label_pc_199bd ]
  %storemerge = phi i32 [ %v1_199d3, %dec_label_pc_199cd ], [ %v4_199c8, %dec_label_pc_199bd ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_199dd = add i32 %v0_199dd, -12
  %v2_199dd = inttoptr i32 %v1_199dd to i32*
  %v3_199dd = load i32, i32* %v2_199dd, align 4
  %v1_199e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_199e0 = icmp eq i32 %v1_199e0, %v3_199dd
  br i1 %v3_199e0, label %bb, label %dec_label_pc_199e9

bb:                                               ; preds = %dec_label_pc_199dd
  %v1_199e7 = call i32 @function_199ee()
  br label %dec_label_pc_199e9

dec_label_pc_199e9:                               ; preds = %bb, %dec_label_pc_199dd
  %v2_199e7 = phi i32 [ %v1_199e7, %bb ], [ %storemerge, %dec_label_pc_199dd ]
  ret i32 %v2_199e7

; uselistorder directives
  uselistorder i32 (i32)* @unknown_35f36, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_3061e, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_199dd, { 1, 0 }
  uselistorder label %dec_label_pc_199cd, { 1, 0 }
}

define i32 @function_199ee() local_unnamed_addr {
dec_label_pc_199ee:
  %v0_199f3 = load i32, i32* @eax, align 4
  ret i32 %v0_199f3
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_199f4:
  %v2_19a1e = call i32 @unknown_33580(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19a32

bb:                                               ; preds = %dec_label_pc_199f4
  %v1_19a30 = call i32 @function_19a37()
  br label %dec_label_pc_19a32

dec_label_pc_19a32:                               ; preds = %bb, %dec_label_pc_199f4
  %v2_19a30 = phi i32 [ %v1_19a30, %bb ], [ %arg1, %dec_label_pc_199f4 ]
  ret i32 %v2_19a30

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19a37() local_unnamed_addr {
dec_label_pc_19a37:
  %v0_19a38 = load i32, i32* @eax, align 4
  ret i32 %v0_19a38
}

define i32 @_ZN9__gnu_cxxmiIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19a3b:
  %v1_19a5f = call i32 @unknown_331e7(i32 %arg1)
  %v1_19a64 = inttoptr i32 %v1_19a5f to i32*
  %v2_19a64 = load i32, i32* %v1_19a64, align 4
  %v1_19a6e = call i32 @unknown_331e7(i32 %arg2)
  %v1_19a73 = inttoptr i32 %v1_19a6e to i32*
  %v2_19a73 = load i32, i32* %v1_19a73, align 4
  %v2_19a77 = sub i32 %v2_19a64, %v2_19a73
  %v2_19a7b = sdiv i32 %v2_19a77, 8
  %v3_19a7e = mul i32 %v2_19a7b, -1431655765
  store i32 %v3_19a7e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19a90

bb:                                               ; preds = %dec_label_pc_19a3b
  %v1_19a8e = call i32 @function_19a95()
  br label %dec_label_pc_19a90

dec_label_pc_19a90:                               ; preds = %bb, %dec_label_pc_19a3b
  %v2_19a8e = phi i32 [ %v1_19a8e, %bb ], [ %v3_19a7e, %dec_label_pc_19a3b ]
  ret i32 %v2_19a8e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_331e7, { 1, 0 }
}

define i32 @function_19a95() local_unnamed_addr {
dec_label_pc_19a95:
  %v0_19a9a = load i32, i32* @eax, align 4
  ret i32 %v0_19a9a
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19a9c:
  %v10_19ab9 = icmp eq i32 %arg2, 0
  br i1 %v10_19ab9, label %dec_label_pc_19ae0, label %dec_label_pc_19abf

dec_label_pc_19abf:                               ; preds = %dec_label_pc_19a9c
  %v3_19ad4 = call i32 @unknown_360ee(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_19ae0

dec_label_pc_19ae0:                               ; preds = %dec_label_pc_19a9c, %dec_label_pc_19abf
  %storemerge = phi i32 [ %v3_19ad4, %dec_label_pc_19abf ], [ 0, %dec_label_pc_19a9c ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19aec

bb:                                               ; preds = %dec_label_pc_19ae0
  %v1_19aea = call i32 @function_19af1()
  br label %dec_label_pc_19aec

dec_label_pc_19aec:                               ; preds = %bb, %dec_label_pc_19ae0
  %v2_19aea = phi i32 [ %v1_19aea, %bb ], [ %storemerge, %dec_label_pc_19ae0 ]
  ret i32 %v2_19aea

; uselistorder directives
  uselistorder label %dec_label_pc_19ae0, { 1, 0 }
}

define i32 @function_19af1() local_unnamed_addr {
dec_label_pc_19af1:
  %v0_19af2 = load i32, i32* @eax, align 4
  ret i32 %v0_19af2
}

define i32 @_ZSt22__uninitialized_move_aIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_SaIS4_EET0_T_S8_S7_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19af3:
  %v8_19b37 = call i32 @unknown_361a9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_19b37, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19b48

bb:                                               ; preds = %dec_label_pc_19af3
  %v1_19b46 = call i32 @function_19b4d()
  br label %dec_label_pc_19b48

dec_label_pc_19b48:                               ; preds = %bb, %dec_label_pc_19af3
  %v2_19b46 = phi i32 [ %v1_19b46, %bb ], [ %v8_19b37, %dec_label_pc_19af3 ]
  ret i32 %v2_19b46

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19b4d() local_unnamed_addr {
dec_label_pc_19b4d:
  %v0_19b4e = load i32, i32* @eax, align 4
  ret i32 %v0_19b4e
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE7destroyEPS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19b50:
  store i32 %arg2, i32* @eax, align 4
  %v1_19b73 = call i32 @function_29e80(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19b84

bb:                                               ; preds = %dec_label_pc_19b50
  %v1_19b82 = call i32 @function_19b89()
  br label %dec_label_pc_19b84

dec_label_pc_19b84:                               ; preds = %bb, %dec_label_pc_19b50
  %v2_19b82 = phi i32 [ %v1_19b82, %bb ], [ 0, %dec_label_pc_19b50 ]
  ret i32 %v2_19b82

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_19b89() local_unnamed_addr {
dec_label_pc_19b89:
  %v0_19b8a = load i32, i32* @eax, align 4
  ret i32 %v0_19b8a
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19b8c:
  %v1_19bac = inttoptr i32 %arg2 to i32*
  %v2_19bac = load i32, i32* %v1_19bac, align 4
  store i32 %v2_19bac, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19bbf

bb:                                               ; preds = %dec_label_pc_19b8c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_19bbd = call i32 @function_19bc4(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_19bbf

dec_label_pc_19bbf:                               ; preds = %bb, %dec_label_pc_19b8c
  %v4_19bbd = phi i32 [ %v3_19bbd, %bb ], [ 0, %dec_label_pc_19b8c ]
  ret i32 %v4_19bbd

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_19bc4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19bc4:
  %v0_19bc5 = load i32, i32* @eax, align 4
  ret i32 %v0_19bc5
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKxEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_19bc6:
  %v1_19bf3 = add i32 %arg1, 4
  %v1_19bf9 = call i32 @unknown_3239c(i32 %v1_19bf3)
  %v2_19c08 = call i32 @unknown_362d1(i32 %v1_19bf9, i32 %arg2)
  %v2_19c17 = call i32 @unknown_34070(i32 %arg1, i32 %v2_19c08)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19c28

bb:                                               ; preds = %dec_label_pc_19bc6
  %v1_19c26 = call i32 @function_19c2d()
  br label %dec_label_pc_19c28

dec_label_pc_19c28:                               ; preds = %bb, %dec_label_pc_19bc6
  %v2_19c26 = phi i32 [ %v1_19c26, %bb ], [ 0, %dec_label_pc_19bc6 ]
  ret i32 %v2_19c26

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19c2d() local_unnamed_addr {
dec_label_pc_19c2d:
  %v0_19c2e = load i32, i32* @eax, align 4
  ret i32 %v0_19c2e
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19c30:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_19c4d = call i32 @unknown_36396(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_19c5e = add i32 %tmp100, 4
  %v2_19c5e = inttoptr i32 %v1_19c5e to i32*
  store i32 0, i32* %v2_19c5e, align 4
  %v1_19c68 = add i32 %tmp100, 8
  %v2_19c68 = inttoptr i32 %v1_19c68 to i32*
  store i32 0, i32* %v2_19c68, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19c7b

bb:                                               ; preds = %dec_label_pc_19c30
  %v1_19c79 = call i32 @function_19c80()
  br label %dec_label_pc_19c7b

dec_label_pc_19c7b:                               ; preds = %bb, %dec_label_pc_19c30
  %v2_19c79 = phi i32 [ %v1_19c79, %bb ], [ 0, %dec_label_pc_19c30 ]
  ret i32 %v2_19c79

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_19c80() local_unnamed_addr {
dec_label_pc_19c80:
  %v0_19c81 = load i32, i32* @eax, align 4
  ret i32 %v0_19c81
}

define i32 @_ZNSaIN11json_spirit10Value_implINS_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19c82:
  %v1_19c9f = call i32 @unknown_3641e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19cb0

bb:                                               ; preds = %dec_label_pc_19c82
  %v1_19cae = call i32 @function_19cb5()
  br label %dec_label_pc_19cb0

dec_label_pc_19cb0:                               ; preds = %bb, %dec_label_pc_19c82
  %v2_19cae = phi i32 [ %v1_19cae, %bb ], [ 0, %dec_label_pc_19c82 ]
  ret i32 %v2_19cae
}

define i32 @function_19cb5() local_unnamed_addr {
dec_label_pc_19cb5:
  %v0_19cb6 = load i32, i32* @eax, align 4
  ret i32 %v0_19cb6
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_deallocateEPS4_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19cb8:
  %v10_19cdb = icmp eq i32 %arg2, 0
  br i1 %v10_19cdb, label %dec_label_pc_19cfa, label %dec_label_pc_19ce1

dec_label_pc_19ce1:                               ; preds = %dec_label_pc_19cb8
  %v3_19cf5 = call i32 @unknown_3647e(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_19cfa

dec_label_pc_19cfa:                               ; preds = %dec_label_pc_19ce1, %dec_label_pc_19cb8
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19d06

bb:                                               ; preds = %dec_label_pc_19cfa
  %v1_19d04 = call i32 @function_19d0b()
  br label %dec_label_pc_19d06

dec_label_pc_19d06:                               ; preds = %bb, %dec_label_pc_19cfa
  %v2_19d04 = phi i32 [ %v1_19d04, %bb ], [ 0, %dec_label_pc_19cfa ]
  ret i32 %v2_19d04
}

define i32 @function_19d0b() local_unnamed_addr {
dec_label_pc_19d0b:
  %v0_19d0c = load i32, i32* @eax, align 4
  ret i32 %v0_19d0c
}

define i32 @_ZSt8_DestroyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEEEvT_S6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d0d:
  %v2_19d37 = call i32 @unknown_36514(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19d48

bb:                                               ; preds = %dec_label_pc_19d0d
  %v1_19d46 = call i32 @function_19d4d()
  br label %dec_label_pc_19d48

dec_label_pc_19d48:                               ; preds = %bb, %dec_label_pc_19d0d
  %v2_19d46 = phi i32 [ %v1_19d46, %bb ], [ 0, %dec_label_pc_19d0d ]
  ret i32 %v2_19d46
}

define i32 @function_19d4d() local_unnamed_addr {
dec_label_pc_19d4d:
  %v0_19d4e = load i32, i32* @eax, align 4
  ret i32 %v0_19d4e
}

define i32 @_ZN5boost6detail13addr_impl_refIKSt6vectorI12CTransactionSaIS3_EEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d50:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19d81

bb:                                               ; preds = %dec_label_pc_19d50
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_19d7f = call i32 @function_19d86(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_19d81

dec_label_pc_19d81:                               ; preds = %bb, %dec_label_pc_19d50
  %v4_19d7f = phi i32 [ %v3_19d7f, %bb ], [ 0, %dec_label_pc_19d50 ]
  ret i32 %v4_19d7f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_19d86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d86:
  %v0_19d87 = load i32, i32* @eax, align 4
  ret i32 %v0_19d87
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSt6vectorI12CTransactionSaIS3_EEEcvRS6_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19d88:
  %v2_19da2 = load i32, i32* %arg1, align 4
  store i32 %v2_19da2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19db0

bb:                                               ; preds = %dec_label_pc_19d88
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_19dae = call i32 @function_19db5(i32 %tmp100)
  br label %dec_label_pc_19db0

dec_label_pc_19db0:                               ; preds = %bb, %dec_label_pc_19d88
  %v3_19dae = phi i32 [ %v2_19dae, %bb ], [ %v2_19da2, %dec_label_pc_19d88 ]
  ret i32 %v3_19dae

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_19db5(i32 %arg1) local_unnamed_addr {
dec_label_pc_19db5:
  %v0_19db6 = load i32, i32* @eax, align 4
  ret i32 %v0_19db6
}

define i32 @_ZN5boost6detail14addressof_implIKSt6vectorI12CTransactionSaIS3_EEE1fERS6_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19db7:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19de3

bb:                                               ; preds = %dec_label_pc_19db7
  %v3_19de1 = call i32 @function_19de8(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_19de3

dec_label_pc_19de3:                               ; preds = %bb, %dec_label_pc_19db7
  %v4_19de1 = phi i32 [ %v3_19de1, %bb ], [ %arg1, %dec_label_pc_19db7 ]
  ret i32 %v4_19de1
}

define i32 @function_19de8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19de8:
  %v0_19de9 = load i32, i32* @eax, align 4
  ret i32 %v0_19de9
}

define i32 @_ZN5boost12range_detail11range_beginIKSt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19dea:
  %v2_19e14 = call i32 @unknown_35d10(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19e2b

bb:                                               ; preds = %dec_label_pc_19dea
  %v1_19e29 = call i32 @function_19e30()
  br label %dec_label_pc_19e2b

dec_label_pc_19e2b:                               ; preds = %bb, %dec_label_pc_19dea
  %v2_19e29 = phi i32 [ %v1_19e29, %bb ], [ %arg1, %dec_label_pc_19dea ]
  ret i32 %v2_19e29

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19e30() local_unnamed_addr {
dec_label_pc_19e30:
  %v0_19e31 = load i32, i32* @eax, align 4
  ret i32 %v0_19e31
}

define i32 @_ZN5boost12range_detail9range_endIKSt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19e34:
  %v2_19e5e = call i32 @unknown_35daa(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19e75

bb:                                               ; preds = %dec_label_pc_19e34
  %v1_19e73 = call i32 @function_19e7a()
  br label %dec_label_pc_19e75

dec_label_pc_19e75:                               ; preds = %bb, %dec_label_pc_19e34
  %v2_19e73 = phi i32 [ %v1_19e73, %bb ], [ %arg1, %dec_label_pc_19e34 ]
  ret i32 %v2_19e73

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_35daa, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19e7a() local_unnamed_addr {
dec_label_pc_19e7a:
  %v0_19e7b = load i32, i32* @eax, align 4
  ret i32 %v0_19e7b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK12CTransactionSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19e7e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19ea4

bb:                                               ; preds = %dec_label_pc_19e7e
  %v2_19ea2 = call i32 @function_19ea9(i32 %arg1)
  br label %dec_label_pc_19ea4

dec_label_pc_19ea4:                               ; preds = %bb, %dec_label_pc_19e7e
  %v3_19ea2 = phi i32 [ %v2_19ea2, %bb ], [ %arg1, %dec_label_pc_19e7e ]
  ret i32 %v3_19ea2
}

define i32 @function_19ea9(i32 %arg1) local_unnamed_addr {
dec_label_pc_19ea9:
  %v0_19eaa = load i32, i32* @eax, align 4
  ret i32 %v0_19eaa
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19eac:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19ed2

bb:                                               ; preds = %dec_label_pc_19eac
  %v2_19ed0 = call i32 @function_19ed7(i32 %arg1)
  br label %dec_label_pc_19ed2

dec_label_pc_19ed2:                               ; preds = %bb, %dec_label_pc_19eac
  %v3_19ed0 = phi i32 [ %v2_19ed0, %bb ], [ %arg1, %dec_label_pc_19eac ]
  ret i32 %v3_19ed0
}

define i32 @function_19ed7(i32 %arg1) local_unnamed_addr {
dec_label_pc_19ed7:
  %v0_19ed8 = load i32, i32* @eax, align 4
  ret i32 %v0_19ed8
}

define i32 @_ZSt13copy_backwardIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19ed9:
  %v1_19f03 = call i32 @unknown_36736(i32 %arg2)
  %v1_19f10 = call i32 @unknown_36736(i32 %arg1)
  %v3_19f23 = call i32 @unknown_3676b(i32 %v1_19f10, i32 %v1_19f03, i32 %arg3)
  store i32 %v3_19f23, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19f34

bb:                                               ; preds = %dec_label_pc_19ed9
  %v1_19f32 = call i32 @function_19f39()
  br label %dec_label_pc_19f34

dec_label_pc_19f34:                               ; preds = %bb, %dec_label_pc_19ed9
  %v2_19f32 = phi i32 [ %v1_19f32, %bb ], [ %v3_19f23, %dec_label_pc_19ed9 ]
  ret i32 %v2_19f32

; uselistorder directives
  uselistorder i32 (i32)* @unknown_36736, { 1, 0 }
}

define i32 @function_19f39() local_unnamed_addr {
dec_label_pc_19f39:
  %v0_19f3e = load i32, i32* @eax, align 4
  ret i32 %v0_19f3e
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_19f40:
  %v2_19f5a = load i32, i32* %arg1, align 4
  store i32 %v2_19f5a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19f68

bb:                                               ; preds = %dec_label_pc_19f40
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_19f66 = call i32 @function_19f6d(i32 %tmp100)
  br label %dec_label_pc_19f68

dec_label_pc_19f68:                               ; preds = %bb, %dec_label_pc_19f40
  %v3_19f66 = phi i32 [ %v2_19f66, %bb ], [ %v2_19f5a, %dec_label_pc_19f40 ]
  ret i32 %v3_19f66

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_19f6d(i32 %arg1) local_unnamed_addr {
dec_label_pc_19f6d:
  %v0_19f6e = load i32, i32* @eax, align 4
  ret i32 %v0_19f6e
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19f70:
  %v1_19f9a = call i32 @unknown_36874(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19fa5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19fa5:
  %v1_19fa7 = call i32 @unknown_2d038(i32 ptrtoint (i32* @0 to i32))
  %v0_19fac = load i32, i32* @ebx, align 4
  %v2_19fae = sub i32 %v0_19fac, %v1_19fa7
  %v0_19fb0 = load i32, i32* @ebp, align 4
  %v1_19fb0 = add i32 %v0_19fb0, -32
  %v2_19fb0 = inttoptr i32 %v1_19fb0 to i32*
  %v3_19fb0 = load i32, i32* %v2_19fb0, align 4
  %v7_19fb3 = icmp ult i32 %v2_19fae, %v3_19fb0
  %v5_19fb8 = icmp eq i1 %v7_19fb3, false
  br i1 %v5_19fb8, label %bb, label %dec_label_pc_19fbc

bb:                                               ; preds = %dec_label_pc_19fa5
  %v1_19fba = call i32 @function_19fc7()
  %v0_19fbc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_19fbc

dec_label_pc_19fbc:                               ; preds = %bb, %dec_label_pc_19fa5
  %v0_19fbc = phi i32 [ %v0_19fbc.pre, %bb ], [ %v0_19fb0, %dec_label_pc_19fa5 ]
  %v1_19fbc = add i32 %v0_19fbc, -36
  %v2_19fbc = inttoptr i32 %v1_19fbc to i32*
  %v3_19fbc = load i32, i32* %v2_19fbc, align 4
  ret i32 %v3_19fbc
}

define i32 @function_19fc7() local_unnamed_addr {
dec_label_pc_19fc7:
  %ebx.global-to-local = alloca i32, align 4
  %v0_19fc7 = load i32, i32* @ebp, align 4
  %v1_19fc7 = add i32 %v0_19fc7, -28
  %v2_19fc7 = inttoptr i32 %v1_19fc7 to i32*
  %v3_19fc7 = load i32, i32* %v2_19fc7, align 4
  %v1_19fcd = call i32 @unknown_2d038(i32 %v3_19fc7)
  store i32 %v1_19fcd, i32* %ebx.global-to-local, align 4
  %v0_19fd4 = load i32, i32* @ebp, align 4
  %v1_19fd4 = add i32 %v0_19fd4, -28
  %v2_19fd4 = inttoptr i32 %v1_19fd4 to i32*
  %v3_19fd4 = load i32, i32* %v2_19fd4, align 4
  %v1_19fda = call i32 @unknown_2d038(i32 %v3_19fd4)
  %v1_19fdf = load i32, i32* @ebp, align 4
  %v2_19fdf = add i32 %v1_19fdf, -20
  %v3_19fdf = inttoptr i32 %v2_19fdf to i32*
  store i32 %v1_19fda, i32* %v3_19fdf, align 4
  %v0_19fe2 = load i32, i32* @ebp, align 4
  %v1_19fe2 = add i32 %v0_19fe2, -32
  %v1_19fe9 = add i32 %v0_19fe2, -20
  %v2_19fef = call i32 @unknown_3523c(i32 %v1_19fe9, i32 %v1_19fe2)
  %v1_19ff4 = inttoptr i32 %v2_19fef to i32*
  %v2_19ff4 = load i32, i32* %v1_19ff4, align 4
  %v1_19ff6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_19ff6 = add i32 %v1_19ff6, %v2_19ff4
  %v1_19ff8 = load i32, i32* @ebp, align 4
  %v2_19ff8 = add i32 %v1_19ff8, -16
  %v3_19ff8 = inttoptr i32 %v2_19ff8 to i32*
  store i32 %v2_19ff6, i32* %v3_19ff8, align 4
  %v0_19ffb = load i32, i32* @ebp, align 4
  %v1_19ffb = add i32 %v0_19ffb, -28
  %v2_19ffb = inttoptr i32 %v1_19ffb to i32*
  %v3_19ffb = load i32, i32* %v2_19ffb, align 4
  %v1_1a001 = call i32 @unknown_2d038(i32 %v3_19ffb)
  %v1_1a006 = load i32, i32* @ebp, align 4
  %v2_1a006 = add i32 %v1_1a006, -16
  %v3_1a006 = inttoptr i32 %v2_1a006 to i32*
  %v4_1a006 = load i32, i32* %v3_1a006, align 4
  %tmp5 = icmp ugt i32 %v1_1a001, %v4_1a006
  br i1 %tmp5, label %dec_label_pc_1a01b, label %dec_label_pc_1a00b

dec_label_pc_1a00b:                               ; preds = %dec_label_pc_19fc7
  %v1_1a00b = add i32 %v1_1a006, -28
  %v2_1a00b = inttoptr i32 %v1_1a00b to i32*
  %v3_1a00b = load i32, i32* %v2_1a00b, align 4
  %v1_1a011 = call i32 @unknown_36874(i32 %v3_1a00b)
  %v1_1a016 = load i32, i32* @ebp, align 4
  %v2_1a016 = add i32 %v1_1a016, -16
  %v3_1a016 = inttoptr i32 %v2_1a016 to i32*
  %v4_1a016 = load i32, i32* %v3_1a016, align 4
  %v10_1a016 = icmp ult i32 %v1_1a011, %v4_1a016
  %v1_1a019 = icmp eq i1 %v10_1a016, false
  br i1 %v1_1a019, label %dec_label_pc_1a02b, label %dec_label_pc_1a01b

dec_label_pc_1a01b:                               ; preds = %dec_label_pc_19fc7, %dec_label_pc_1a00b
  %v0_1a01b = phi i32 [ %v1_1a006, %dec_label_pc_19fc7 ], [ %v1_1a016, %dec_label_pc_1a00b ]
  %v1_1a01b = add i32 %v0_1a01b, -28
  %v2_1a01b = inttoptr i32 %v1_1a01b to i32*
  %v3_1a01b = load i32, i32* %v2_1a01b, align 4
  %v1_1a021 = call i32 @unknown_36874(i32 %v3_1a01b)
  %v0_1a02b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1a02b

dec_label_pc_1a02b:                               ; preds = %dec_label_pc_1a00b, %dec_label_pc_1a01b
  %v0_1a02b = phi i32 [ %v0_1a02b.pre, %dec_label_pc_1a01b ], [ %v1_1a016, %dec_label_pc_1a00b ]
  %storemerge = phi i32 [ %v1_1a021, %dec_label_pc_1a01b ], [ %v4_1a016, %dec_label_pc_1a00b ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_1a02b = add i32 %v0_1a02b, -12
  %v2_1a02b = inttoptr i32 %v1_1a02b to i32*
  %v3_1a02b = load i32, i32* %v2_1a02b, align 4
  %v1_1a02e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a02e = icmp eq i32 %v1_1a02e, %v3_1a02b
  br i1 %v3_1a02e, label %bb, label %dec_label_pc_1a037

bb:                                               ; preds = %dec_label_pc_1a02b
  %v1_1a035 = call i32 @function_1a03c()
  br label %dec_label_pc_1a037

dec_label_pc_1a037:                               ; preds = %bb, %dec_label_pc_1a02b
  %v2_1a035 = phi i32 [ %v1_1a035, %bb ], [ %storemerge, %dec_label_pc_1a02b ]
  ret i32 %v2_1a035

; uselistorder directives
  uselistorder i32 (i32)* @unknown_36874, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_2d038, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1a02b, { 1, 0 }
  uselistorder label %dec_label_pc_1a01b, { 1, 0 }
}

define i32 @function_1a03c() local_unnamed_addr {
dec_label_pc_1a03c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a03e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a03e:
  %v0_1a03e = load i32, i32* @eax, align 4
  %v11_1a03e = xor i32 %v0_1a03e, 91
  store i32 %arg1, i32* @ebp, align 4
  ret i32 %v11_1a03e
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a042:
  %v2_1a06c = call i32 @unknown_3421c(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a074(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a074:
  %v0_1a074 = load i32, i32* @ebp, align 4
  %v1_1a074 = add i32 %v0_1a074, -12
  %v2_1a074 = inttoptr i32 %v1_1a074 to i32*
  %v3_1a074 = load i32, i32* %v2_1a074, align 4
  %v1_1a077 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a077 = xor i32 %v1_1a077, %v3_1a074
  store i1 false, i1* @cf, align 1
  %v3_1a077 = icmp eq i32 %v2_1a077, 0
  store i32 %v2_1a077, i32* @edx, align 8
  br i1 %v3_1a077, label %bb, label %dec_label_pc_1a074.dec_label_pc_1a080_crit_edge

dec_label_pc_1a074.dec_label_pc_1a080_crit_edge:  ; preds = %dec_label_pc_1a074
  %v2_1a07e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a080

bb:                                               ; preds = %dec_label_pc_1a074
  %v1_1a07e = call i32 @function_1a085()
  br label %dec_label_pc_1a080

dec_label_pc_1a080:                               ; preds = %dec_label_pc_1a074.dec_label_pc_1a080_crit_edge, %bb
  %v2_1a07e = phi i32 [ %v2_1a07e.pre, %dec_label_pc_1a074.dec_label_pc_1a080_crit_edge ], [ %v1_1a07e, %bb ]
  ret i32 %v2_1a07e

; uselistorder directives
  uselistorder label %dec_label_pc_1a080, { 1, 0 }
}

define i32 @function_1a085() local_unnamed_addr {
dec_label_pc_1a085:
  %v0_1a086 = load i32, i32* @eax, align 4
  ret i32 %v0_1a086
}

define i32 @_ZN9__gnu_cxxmiIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a089:
  %v1_1a0ad = call i32 @unknown_33f35(i32 %arg1)
  %v1_1a0b2 = inttoptr i32 %v1_1a0ad to i32*
  %v2_1a0b2 = load i32, i32* %v1_1a0b2, align 4
  %v1_1a0bc = call i32 @unknown_33f35(i32 %arg2)
  %v1_1a0c1 = inttoptr i32 %v1_1a0bc to i32*
  %v2_1a0c1 = load i32, i32* %v1_1a0c1, align 4
  %v2_1a0c5 = sub i32 %v2_1a0b2, %v2_1a0c1
  %v2_1a0c9 = sdiv i32 %v2_1a0c5, 4
  %v3_1a0cc = mul i32 %v2_1a0c9, -858993459
  store i32 %v3_1a0cc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a0de

bb:                                               ; preds = %dec_label_pc_1a089
  %v1_1a0dc = call i32 @function_1a0e3()
  br label %dec_label_pc_1a0de

dec_label_pc_1a0de:                               ; preds = %bb, %dec_label_pc_1a089
  %v2_1a0dc = phi i32 [ %v1_1a0dc, %bb ], [ %v3_1a0cc, %dec_label_pc_1a089 ]
  ret i32 %v2_1a0dc

; uselistorder directives
  uselistorder i32 (i32)* @unknown_33f35, { 1, 0 }
}

define i32 @function_1a0e3() local_unnamed_addr {
dec_label_pc_1a0e3:
  %v0_1a0e8 = load i32, i32* @eax, align 4
  ret i32 %v0_1a0e8
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a0ea:
  ret i32 %arg2
}

define i32 @function_1a100(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a100:
  %v2_1a100 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a100 = load i32, i32* @eax, align 4
  %v4_1a100 = trunc i32 %v3_1a100 to i8
  %v5_1a100 = add i8 %v4_1a100, %v2_1a100
  %v21_1a100 = inttoptr i32 %v3_1a100 to i8*
  store i8 %v5_1a100, i8* %v21_1a100, align 1
  %v0_1a102 = load i32, i32* @eax, align 4
  %v1_1a102 = load i32, i32* @ebp, align 4
  %v2_1a102 = add i32 %v1_1a102, -12
  %v3_1a102 = inttoptr i32 %v2_1a102 to i32*
  store i32 %v0_1a102, i32* %v3_1a102, align 4
  %v0_1a107 = load i32, i32* @ebp, align 4
  %v1_1a107 = add i32 %v0_1a107, -32
  %v2_1a107 = inttoptr i32 %v1_1a107 to i32*
  %v3_1a107 = load i32, i32* %v2_1a107, align 4
  %v10_1a107 = icmp eq i32 %v3_1a107, 0
  br i1 %v10_1a107, label %dec_label_pc_1a12e, label %dec_label_pc_1a10d

dec_label_pc_1a10d:                               ; preds = %dec_label_pc_1a100
  %v1_1a10d = add i32 %v0_1a107, -28
  %v2_1a10d = inttoptr i32 %v1_1a10d to i32*
  %v3_1a10d = load i32, i32* %v2_1a10d, align 4
  %v3_1a118 = load i32, i32* %v2_1a107, align 4
  %v3_1a122 = call i32 @unknown_36a2c(i32 %v3_1a10d, i32 %v3_1a118, i32 0)
  %v0_1a12e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1a12e

dec_label_pc_1a12e:                               ; preds = %dec_label_pc_1a100, %dec_label_pc_1a10d
  %v0_1a12e = phi i32 [ %v0_1a12e.pre, %dec_label_pc_1a10d ], [ %v0_1a107, %dec_label_pc_1a100 ]
  %storemerge = phi i32 [ %v3_1a122, %dec_label_pc_1a10d ], [ 0, %dec_label_pc_1a100 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_1a12e = add i32 %v0_1a12e, -12
  %v2_1a12e = inttoptr i32 %v1_1a12e to i32*
  %v3_1a12e = load i32, i32* %v2_1a12e, align 4
  %v1_1a131 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a131 = icmp eq i32 %v1_1a131, %v3_1a12e
  br i1 %v3_1a131, label %bb, label %dec_label_pc_1a13a

bb:                                               ; preds = %dec_label_pc_1a12e
  %v1_1a138 = call i32 @function_1a13f()
  br label %dec_label_pc_1a13a

dec_label_pc_1a13a:                               ; preds = %bb, %dec_label_pc_1a12e
  %v2_1a138 = phi i32 [ %v1_1a138, %bb ], [ %storemerge, %dec_label_pc_1a12e ]
  ret i32 %v2_1a138

; uselistorder directives
  uselistorder label %dec_label_pc_1a12e, { 1, 0 }
}

define i32 @function_1a13f() local_unnamed_addr {
dec_label_pc_1a13f:
  %v0_1a140 = load i32, i32* @eax, align 4
  ret i32 %v0_1a140
}

define i32 @_ZSt22__uninitialized_move_aIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_SaIS4_EET0_T_S8_S7_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a141:
  %v8_1a185 = call i32 @unknown_36ae8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_1a185, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a196

bb:                                               ; preds = %dec_label_pc_1a141
  %v1_1a194 = call i32 @function_1a19b()
  br label %dec_label_pc_1a196

dec_label_pc_1a196:                               ; preds = %bb, %dec_label_pc_1a141
  %v2_1a194 = phi i32 [ %v1_1a194, %bb ], [ %v8_1a185, %dec_label_pc_1a141 ]
  ret i32 %v2_1a194

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a19b() local_unnamed_addr {
dec_label_pc_1a19b:
  %v0_1a19c = load i32, i32* @eax, align 4
  ret i32 %v0_1a19c
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE7destroyEPS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a19e:
  store i32 %arg2, i32* @eax, align 4
  %v1_1a1c1 = call i32 @function_2a496(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a1d2

bb:                                               ; preds = %dec_label_pc_1a19e
  %v1_1a1d0 = call i32 @function_1a1d7()
  br label %dec_label_pc_1a1d2

dec_label_pc_1a1d2:                               ; preds = %bb, %dec_label_pc_1a19e
  %v2_1a1d0 = phi i32 [ %v1_1a1d0, %bb ], [ 0, %dec_label_pc_1a19e ]
  ret i32 %v2_1a1d0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1a1d7() local_unnamed_addr {
dec_label_pc_1a1d7:
  %v0_1a1d8 = load i32, i32* @eax, align 4
  ret i32 %v0_1a1d8
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a1da:
  %v1_1a1fa = inttoptr i32 %arg2 to i32*
  %v2_1a1fa = load i32, i32* %v1_1a1fa, align 4
  store i32 %v2_1a1fa, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a20d

bb:                                               ; preds = %dec_label_pc_1a1da
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1a20b = call i32 @function_1a212(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1a20d

dec_label_pc_1a20d:                               ; preds = %bb, %dec_label_pc_1a1da
  %v4_1a20b = phi i32 [ %v3_1a20b, %bb ], [ 0, %dec_label_pc_1a1da ]
  ret i32 %v4_1a20b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a212(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a212:
  %v0_1a213 = load i32, i32* @eax, align 4
  ret i32 %v0_1a213
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKSE_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1a214:
  %v1_1a241 = add i32 %arg1, 4
  %v1_1a247 = call i32 @unknown_329ea(i32 %v1_1a241)
  %v2_1a256 = call i32 @unknown_36c10(i32 %v1_1a247, i32 %arg2)
  %v2_1a265 = call i32 @unknown_346be(i32 %arg1, i32 %v2_1a256)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a276

bb:                                               ; preds = %dec_label_pc_1a214
  %v1_1a274 = call i32 @function_1a27b()
  br label %dec_label_pc_1a276

dec_label_pc_1a276:                               ; preds = %bb, %dec_label_pc_1a214
  %v2_1a274 = phi i32 [ %v1_1a274, %bb ], [ 0, %dec_label_pc_1a214 ]
  ret i32 %v2_1a274

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_346be, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a27b() local_unnamed_addr {
dec_label_pc_1a27b:
  %v0_1a27c = load i32, i32* @eax, align 4
  ret i32 %v0_1a27c
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIxEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1a27e:
  %v1_1a2ab = add i32 %arg1, 4
  %v1_1a2b1 = call i32 @unknown_32a54(i32 %v1_1a2ab)
  %v2_1a2c0 = call i32 @unknown_36989(i32 %v1_1a2b1, i32 %arg2)
  %v2_1a2cf = call i32 @unknown_34728(i32 %arg1, i32 %v2_1a2c0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a2e0

bb:                                               ; preds = %dec_label_pc_1a27e
  %v1_1a2de = call i32 @function_1a2e5()
  br label %dec_label_pc_1a2e0

dec_label_pc_1a2e0:                               ; preds = %bb, %dec_label_pc_1a27e
  %v2_1a2de = phi i32 [ %v1_1a2de, %bb ], [ 0, %dec_label_pc_1a27e ]
  ret i32 %v2_1a2de

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a2e5() local_unnamed_addr {
dec_label_pc_1a2e5:
  %v0_1a2e6 = load i32, i32* @eax, align 4
  ret i32 %v0_1a2e6
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIdEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1a2e8:
  %v1_1a315 = add i32 %arg1, 4
  %v1_1a31b = call i32 @unknown_32abe(i32 %v1_1a315)
  %v2_1a32a = call i32 @unknown_36d64(i32 %v1_1a31b, i32 %arg2)
  %v2_1a339 = call i32 @unknown_34792(i32 %arg1, i32 %v2_1a32a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a34a

bb:                                               ; preds = %dec_label_pc_1a2e8
  %v1_1a348 = call i32 @function_1a34f()
  br label %dec_label_pc_1a34a

dec_label_pc_1a34a:                               ; preds = %bb, %dec_label_pc_1a2e8
  %v2_1a348 = phi i32 [ %v1_1a348, %bb ], [ 0, %dec_label_pc_1a2e8 ]
  ret i32 %v2_1a348

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a34f() local_unnamed_addr {
dec_label_pc_1a34f:
  %v0_1a350 = load i32, i32* @eax, align 4
  ret i32 %v0_1a350
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a352:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_1a37c = call i32 @unknown_36e22(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_1a38d = add i32 %tmp103, 4
  %v2_1a38d = inttoptr i32 %v1_1a38d to i32*
  store i32 0, i32* %v2_1a38d, align 4
  %v1_1a397 = add i32 %tmp103, 8
  %v2_1a397 = inttoptr i32 %v1_1a397 to i32*
  store i32 0, i32* %v2_1a397, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a3aa

bb:                                               ; preds = %dec_label_pc_1a352
  %v1_1a3a8 = call i32 @function_1a3af()
  br label %dec_label_pc_1a3aa

dec_label_pc_1a3aa:                               ; preds = %bb, %dec_label_pc_1a352
  %v2_1a3a8 = phi i32 [ %v1_1a3a8, %bb ], [ 0, %dec_label_pc_1a352 ]
  ret i32 %v2_1a3a8

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_1a3af() local_unnamed_addr {
dec_label_pc_1a3af:
  %v0_1a3b0 = load i32, i32* @eax, align 4
  ret i32 %v0_1a3b0
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a3b2:
  %v1_1a3d2 = inttoptr i32 %arg2 to i32*
  %v2_1a3d2 = load i32, i32* %v1_1a3d2, align 4
  store i32 %v2_1a3d2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a3e5

bb:                                               ; preds = %dec_label_pc_1a3b2
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1a3e3 = call i32 @function_1a3ea(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1a3e5

dec_label_pc_1a3e5:                               ; preds = %bb, %dec_label_pc_1a3b2
  %v4_1a3e3 = phi i32 [ %v3_1a3e3, %bb ], [ 0, %dec_label_pc_1a3b2 ]
  ret i32 %v4_1a3e3

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a3ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a3ea:
  %v0_1a3eb = load i32, i32* @eax, align 4
  ret i32 %v0_1a3eb
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_ET0_T_SF_SE_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a3ec:
  %v3_1a423 = call i32 @unknown_36efe(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1a423, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a434

bb:                                               ; preds = %dec_label_pc_1a3ec
  %v1_1a432 = call i32 @function_1a439()
  br label %dec_label_pc_1a434

dec_label_pc_1a434:                               ; preds = %bb, %dec_label_pc_1a3ec
  %v2_1a432 = phi i32 [ %v1_1a432, %bb ], [ %v3_1a423, %dec_label_pc_1a3ec ]
  ret i32 %v2_1a432
}

define i32 @function_1a439() local_unnamed_addr {
dec_label_pc_1a439:
  %v0_1a43a = load i32, i32* @eax, align 4
  ret i32 %v0_1a43a
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_9copy_intoEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a43c:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1a45d = add i32 %tmp105, 4
  %v1_1a463 = call i32 @unknown_35a5a(i32 %v1_1a45d)
  %v1_1a470 = call i32 @unknown_3491e(i32 %tmp105)
  %v2_1a47a = load i32, i32* %arg1, align 4
  %v4_1a48e = call i32 @unknown_3700f(i32 %v2_1a47a, i32 %v1_1a470, i32 %arg2, i32 %v1_1a463)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a49f

bb:                                               ; preds = %dec_label_pc_1a43c
  %v1_1a49d = call i32 @function_1a4a4()
  br label %dec_label_pc_1a49f

dec_label_pc_1a49f:                               ; preds = %bb, %dec_label_pc_1a43c
  %v2_1a49d = phi i32 [ %v1_1a49d, %bb ], [ 0, %dec_label_pc_1a43c ]
  ret i32 %v2_1a49d

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_1a4a4() local_unnamed_addr {
dec_label_pc_1a4a4:
  %v0_1a4a9 = load i32, i32* @eax, align 4
  ret i32 %v0_1a4a9
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E14indicate_whichEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a4aa:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a4db

bb:                                               ; preds = %dec_label_pc_1a4aa
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1a4d9 = call i32 @function_1a4e0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1a4db

dec_label_pc_1a4db:                               ; preds = %bb, %dec_label_pc_1a4aa
  %v4_1a4d9 = phi i32 [ %v3_1a4d9, %bb ], [ 0, %dec_label_pc_1a4aa ]
  ret i32 %v4_1a4d9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a4e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a4e0:
  %v0_1a4e1 = load i32, i32* @eax, align 4
  ret i32 %v0_1a4e1
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E5whichEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a4e2:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1a4ff = call i32 @unknown_3712a(i32 %tmp101)
  %v4_1a504 = trunc i32 %v1_1a4ff to i8
  %v2_1a514 = load i32, i32* %arg1, align 4
  %not.v0_1a506 = icmp ne i8 %v4_1a504, 0
  %v1_1a50d = sext i1 %not.v0_1a506 to i32
  %storemerge = xor i32 %v1_1a50d, %v2_1a514
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a522

bb:                                               ; preds = %dec_label_pc_1a4e2
  %v1_1a520 = call i32 @function_1a527()
  br label %dec_label_pc_1a522

dec_label_pc_1a522:                               ; preds = %bb, %dec_label_pc_1a4e2
  %v2_1a520 = phi i32 [ %v1_1a520, %bb ], [ %storemerge, %dec_label_pc_1a4e2 ]
  ret i32 %v2_1a520
}

define i32 @function_1a527() local_unnamed_addr {
dec_label_pc_1a527:
  %v0_1a528 = load i32, i32* @eax, align 4
  ret i32 %v0_1a528
}

define i32 @_ZN5boost3getIxSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_13add_referenceIKT_E4typeERKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a529:
  %v1_1a547 = call i32 @unknown_371a3(i32 %arg1)
  %v10_1a54f = icmp eq i32 %v1_1a547, 0
  %v1_1a553 = icmp eq i1 %v10_1a54f, false
  br i1 %v1_1a553, label %bb, label %dec_label_pc_1a555

bb:                                               ; preds = %dec_label_pc_1a529
  %v3_1a553 = call i32 @function_1a58a(i32 %v1_1a547)
  br label %dec_label_pc_1a555

dec_label_pc_1a555:                               ; preds = %bb, %dec_label_pc_1a529
  %v2_1a555 = phi i32 [ %v3_1a553, %bb ], [ %v1_1a547, %dec_label_pc_1a529 ]
  ret i32 %v2_1a555
}

define i32 @function_1a562() local_unnamed_addr {
dec_label_pc_1a562:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a562 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a562
}

define i32 @function_1a58a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a58a:
  %v0_1a58a = load i32, i32* @ebp, align 4
  %v1_1a58a = add i32 %v0_1a58a, -16
  %v2_1a58a = inttoptr i32 %v1_1a58a to i32*
  %v3_1a58a = load i32, i32* %v2_1a58a, align 4
  store i32 %v3_1a58a, i32* @eax, align 4
  %v1_1a58d = add i32 %v0_1a58a, -12
  %v2_1a58d = inttoptr i32 %v1_1a58d to i32*
  %v3_1a58d = load i32, i32* %v2_1a58d, align 4
  %v1_1a590 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a590 = icmp eq i32 %v1_1a590, %v3_1a58d
  br i1 %v3_1a590, label %bb, label %dec_label_pc_1a599

bb:                                               ; preds = %dec_label_pc_1a58a
  %v1_1a597 = call i32 @function_1a59e()
  br label %dec_label_pc_1a599

dec_label_pc_1a599:                               ; preds = %bb, %dec_label_pc_1a58a
  %v2_1a597 = phi i32 [ %v1_1a597, %bb ], [ %v3_1a58a, %dec_label_pc_1a58a ]
  ret i32 %v2_1a597
}

define i32 @function_1a59e() local_unnamed_addr {
dec_label_pc_1a59e:
  %v0_1a5a3 = load i32, i32* @eax, align 4
  ret i32 %v0_1a5a3
}

define i32 @_ZN5boost3getIKdSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEENS2_IS3_INS4_10Value_implIS7_EESaISD_EEEEbxdNS_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a5a4:
  %stack_var_-17 = alloca i32, align 4
  %v10_1a5bb = icmp eq i32 %arg1, 0
  %v1_1a5bf = icmp eq i1 %v10_1a5bb, false
  br i1 %v1_1a5bf, label %dec_label_pc_1a5c8, label %dec_label_pc_1a5da

dec_label_pc_1a5c8:                               ; preds = %dec_label_pc_1a5a4
  %v2_1a5c8 = ptrtoint i32* %stack_var_-17 to i32
  %v2_1a5d5 = call i32 @unknown_37268(i32 %arg1, i32 %v2_1a5c8)
  br label %dec_label_pc_1a5da

dec_label_pc_1a5da:                               ; preds = %dec_label_pc_1a5a4, %dec_label_pc_1a5c8
  %storemerge = phi i32 [ %v2_1a5d5, %dec_label_pc_1a5c8 ], [ 0, %dec_label_pc_1a5a4 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a5e6

bb:                                               ; preds = %dec_label_pc_1a5da
  %v1_1a5e4 = call i32 @function_1a5eb()
  br label %dec_label_pc_1a5e6

dec_label_pc_1a5e6:                               ; preds = %bb, %dec_label_pc_1a5da
  %v2_1a5e4 = phi i32 [ %v1_1a5e4, %bb ], [ %storemerge, %dec_label_pc_1a5da ]
  ret i32 %v2_1a5e4

; uselistorder directives
  uselistorder label %dec_label_pc_1a5da, { 1, 0 }
}

define i32 @function_1a5eb() local_unnamed_addr {
dec_label_pc_1a5eb:
  %v0_1a5ec = load i32, i32* @eax, align 4
  ret i32 %v0_1a5ec
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIbEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a5ee:
  %v2_1a61c = load i8, i8* %arg2, align 1
  %v3_1a61c = zext i8 %v2_1a61c to i32
  %v1_1a625 = add i32 %arg1, 4
  %v1_1a62b = call i32 @unknown_32dc4(i32 %v1_1a625)
  %v2_1a637 = call i32 @unknown_37306(i32 %v1_1a62b, i32 %v3_1a61c)
  %v2_1a646 = call i32 @unknown_34a98(i32 %arg1, i32 %v2_1a637)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a657

bb:                                               ; preds = %dec_label_pc_1a5ee
  %v1_1a655 = call i32 @function_1a65c()
  br label %dec_label_pc_1a657

dec_label_pc_1a657:                               ; preds = %bb, %dec_label_pc_1a5ee
  %v2_1a655 = phi i32 [ %v1_1a655, %bb ], [ 0, %dec_label_pc_1a5ee ]
  ret i32 %v2_1a655

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a65c() local_unnamed_addr {
dec_label_pc_1a65c:
  %v0_1a661 = load i32, i32* @eax, align 4
  ret i32 %v0_1a661
}

define i32 @_ZN5boost6detail13addr_impl_refISt6vectorI7uint256SaIS3_EEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a662:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a693

bb:                                               ; preds = %dec_label_pc_1a662
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1a691 = call i32 @function_1a698(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1a693

dec_label_pc_1a693:                               ; preds = %bb, %dec_label_pc_1a662
  %v4_1a691 = phi i32 [ %v3_1a691, %bb ], [ 0, %dec_label_pc_1a662 ]
  ret i32 %v4_1a691

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a698(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a698:
  %v0_1a699 = load i32, i32* @eax, align 4
  ret i32 %v0_1a699
}

define i32 @_ZNK5boost6detail13addr_impl_refISt6vectorI7uint256SaIS3_EEEcvRS5_Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a69a:
  ret i32 %arg1
}

define i32 @function_1a6c6() local_unnamed_addr {
dec_label_pc_1a6c6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a6c6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a6c6 = add i32 %v0_1a6c6, -1
  store i32 %v1_1a6c6, i32* %ecx.global-to-local, align 4
  %v0_1a6c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a6c8
}

define i32 @_ZN5boost6detail14addressof_implISt6vectorI7uint256SaIS3_EEE1fERS5_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a6c9:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a6f5

bb:                                               ; preds = %dec_label_pc_1a6c9
  %v3_1a6f3 = call i32 @function_1a6fa(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1a6f5

dec_label_pc_1a6f5:                               ; preds = %bb, %dec_label_pc_1a6c9
  %v4_1a6f3 = phi i32 [ %v3_1a6f3, %bb ], [ %arg1, %dec_label_pc_1a6c9 ]
  ret i32 %v4_1a6f3
}

define i32 @function_1a6fa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a6fa:
  %v0_1a6fb = load i32, i32* @eax, align 4
  ret i32 %v0_1a6fb
}

define i32 @_ZN5boost12range_detail11range_beginISt6vectorI7uint256SaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a6fc:
  ret i32 %arg2
}

define i32 @function_1a70f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a70f:
  %v0_1a70f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a714 = load i32, i32* @ebp, align 4
  %v2_1a714 = add i32 %v1_1a714, -12
  %v3_1a714 = inttoptr i32 %v2_1a714 to i32*
  store i32 %v0_1a70f, i32* %v3_1a714, align 4
  ret i32 0
}

define i32 @function_1a71a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a71a:
  %v0_1a71a = load i32, i32* @ebp, align 4
  %v1_1a71a = add i32 %v0_1a71a, 1
  store i32 %v1_1a71a, i32* @ebp, align 4
  %v0_1a721 = load i32, i32* @eax, align 4
  %v11_1a721 = and i32 %v0_1a721, -252
  %v1_1a726 = call i32 @unknown_3019c(i32 %v11_1a721)
  %v0_1a72e = load i32, i32* @ebp, align 4
  %v1_1a72e = add i32 %v0_1a72e, -28
  %v2_1a72e = inttoptr i32 %v1_1a72e to i32*
  %v3_1a72e = load i32, i32* %v2_1a72e, align 4
  store i32 %v3_1a72e, i32* @eax, align 4
  %v1_1a731 = add i32 %v0_1a72e, -12
  %v2_1a731 = inttoptr i32 %v1_1a731 to i32*
  %v3_1a731 = load i32, i32* %v2_1a731, align 4
  %v1_1a734 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a734 = icmp eq i32 %v1_1a734, %v3_1a731
  br i1 %v3_1a734, label %bb, label %dec_label_pc_1a73d

bb:                                               ; preds = %dec_label_pc_1a71a
  %v1_1a73b = call i32 @function_1a742()
  br label %dec_label_pc_1a73d

dec_label_pc_1a73d:                               ; preds = %bb, %dec_label_pc_1a71a
  %v3_1a73b = phi i32 [ %v1_1a73b, %bb ], [ %v3_1a72e, %dec_label_pc_1a71a ]
  ret i32 %v3_1a73b
}

define i32 @function_1a742() local_unnamed_addr {
dec_label_pc_1a742:
  %v0_1a743 = load i32, i32* @eax, align 4
  ret i32 %v0_1a743
}

define i32 @_ZN5boost12range_detail9range_endISt6vectorI7uint256SaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a746:
  %v2_1a770 = call i32 @unknown_3022e(i32 %arg1, i32 %arg2)
  ret i32 %v2_1a770
}

define i32 @function_1a777(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a777:
  %v0_1a777 = load i32, i32* @eax, align 4
  %v2_1a777 = add i32 %v0_1a777, 139
  %v16_1a777 = urem i32 %v2_1a777, 256
  %v18_1a777 = and i32 %v0_1a777, -256
  %v19_1a777 = or i32 %v16_1a777, %v18_1a777
  store i32 %v19_1a777, i32* @eax, align 4
  %v0_1a779 = load i32, i32* @ebp, align 4
  %v1_1a779 = add i32 %v0_1a779, 1
  store i32 %v1_1a779, i32* @ebp, align 4
  %v0_1a77e = load i32, i32* @edx, align 8
  %v1_1a77e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a77e = icmp eq i32 %v1_1a77e, %v0_1a77e
  br i1 %v3_1a77e, label %bb, label %dec_label_pc_1a787

bb:                                               ; preds = %dec_label_pc_1a777
  %v1_1a785 = call i32 @function_1a78c()
  br label %dec_label_pc_1a787

dec_label_pc_1a787:                               ; preds = %bb, %dec_label_pc_1a777
  %v2_1a785 = phi i32 [ %v1_1a785, %bb ], [ %v19_1a777, %dec_label_pc_1a777 ]
  ret i32 %v2_1a785

; uselistorder directives
  uselistorder i32 %v0_1a777, { 1, 0 }
}

define i32 @function_1a78c() local_unnamed_addr {
dec_label_pc_1a78c:
  %v0_1a78d = load i32, i32* @eax, align 4
  ret i32 %v0_1a78d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP7uint256St6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a790:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a7b6

bb:                                               ; preds = %dec_label_pc_1a790
  %v2_1a7b4 = call i32 @function_1a7bb(i32 %arg1)
  br label %dec_label_pc_1a7b6

dec_label_pc_1a7b6:                               ; preds = %bb, %dec_label_pc_1a790
  %v3_1a7b4 = phi i32 [ %v2_1a7b4, %bb ], [ %arg1, %dec_label_pc_1a790 ]
  ret i32 %v3_1a7b4
}

define i32 @function_1a7bb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a7bb:
  %v0_1a7bc = load i32, i32* @eax, align 4
  ret i32 %v0_1a7bc
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKSsEEEENT_11result_typeERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a7be:
  %stack_var_-20 = alloca i32, align 4
  %v2_1a7e2 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1a7e8 = call i32 @unknown_37528(i32 %v2_1a7e2, i32 %arg2)
  %v2_1a7fa = call i32 @unknown_37560(i32 %arg1, i32 %v2_1a7e2)
  store i32 %v2_1a7fa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a80b

bb:                                               ; preds = %dec_label_pc_1a7be
  %v1_1a809 = call i32 @function_1a810()
  br label %dec_label_pc_1a80b

dec_label_pc_1a80b:                               ; preds = %bb, %dec_label_pc_1a7be
  %v2_1a809 = phi i32 [ %v1_1a809, %bb ], [ %v2_1a7fa, %dec_label_pc_1a7be ]
  ret i32 %v2_1a809
}

define i32 @function_1a810() local_unnamed_addr {
dec_label_pc_1a810:
  %v0_1a811 = load i32, i32* @eax, align 4
  ret i32 %v0_1a811
}

define i32 @_ZN5boost3getIKbSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEENS2_IS3_INS4_10Value_implIS7_EESaISD_EEEEbxdNS_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a812:
  %stack_var_-17 = alloca i32, align 4
  %v10_1a829 = icmp eq i32 %arg1, 0
  %v1_1a82d = icmp eq i1 %v10_1a829, false
  br i1 %v1_1a82d, label %dec_label_pc_1a836, label %dec_label_pc_1a848

dec_label_pc_1a836:                               ; preds = %dec_label_pc_1a812
  %v2_1a836 = ptrtoint i32* %stack_var_-17 to i32
  %v2_1a843 = call i32 @unknown_37622(i32 %arg1, i32 %v2_1a836)
  br label %dec_label_pc_1a848

dec_label_pc_1a848:                               ; preds = %dec_label_pc_1a812, %dec_label_pc_1a836
  %storemerge = phi i32 [ %v2_1a843, %dec_label_pc_1a836 ], [ 0, %dec_label_pc_1a812 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a854

bb:                                               ; preds = %dec_label_pc_1a848
  %v1_1a852 = call i32 @function_1a859()
  br label %dec_label_pc_1a854

dec_label_pc_1a854:                               ; preds = %bb, %dec_label_pc_1a848
  %v2_1a852 = phi i32 [ %v1_1a852, %bb ], [ %storemerge, %dec_label_pc_1a848 ]
  ret i32 %v2_1a852

; uselistorder directives
  uselistorder label %dec_label_pc_1a848, { 1, 0 }
}

define i32 @function_1a859() local_unnamed_addr {
dec_label_pc_1a859:
  %v0_1a85a = load i32, i32* @eax, align 4
  ret i32 %v0_1a85a
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256P11CBlockIndexEEC1EPKSt13_Rb_tree_nodeIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a85c:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a88d

bb:                                               ; preds = %dec_label_pc_1a85c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1a88b = call i32 @function_1a892(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1a88d

dec_label_pc_1a88d:                               ; preds = %bb, %dec_label_pc_1a85c
  %v4_1a88b = phi i32 [ %v3_1a88b, %bb ], [ 0, %dec_label_pc_1a85c ]
  ret i32 %v4_1a88b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a892(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a892:
  %v0_1a893 = load i32, i32* @eax, align 4
  ret i32 %v0_1a893
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a894:
  %v1_1a8ae = add i32 %arg1, 8
  %v2_1a8ae = inttoptr i32 %v1_1a8ae to i32*
  %v3_1a8ae = load i32, i32* %v2_1a8ae, align 4
  store i32 %v3_1a8ae, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a8bd

bb:                                               ; preds = %dec_label_pc_1a894
  %v2_1a8bb = call i32 @function_1a8c2(i32 %arg1)
  br label %dec_label_pc_1a8bd

dec_label_pc_1a8bd:                               ; preds = %bb, %dec_label_pc_1a894
  %v3_1a8bb = phi i32 [ %v2_1a8bb, %bb ], [ %v3_1a8ae, %dec_label_pc_1a894 ]
  ret i32 %v3_1a8bb
}

define i32 @function_1a8c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8c2:
  %v0_1a8c3 = load i32, i32* @eax, align 4
  ret i32 %v0_1a8c3
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8c4:
  %v1_1a8de = add i32 %arg1, 4
  store i32 %v1_1a8de, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a8ed

bb:                                               ; preds = %dec_label_pc_1a8c4
  %v2_1a8eb = call i32 @function_1a8f2(i32 %arg1)
  br label %dec_label_pc_1a8ed

dec_label_pc_1a8ed:                               ; preds = %bb, %dec_label_pc_1a8c4
  %v3_1a8eb = phi i32 [ %v2_1a8eb, %bb ], [ %v1_1a8de, %dec_label_pc_1a8c4 ]
  ret i32 %v3_1a8eb
}

define i32 @function_1a8f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8f2:
  %v0_1a8f3 = load i32, i32* @eax, align 4
  ret i32 %v0_1a8f3
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS5_ESF_RS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a8f4:
  ret i32 0
}

define i32 @function_1a931() local_unnamed_addr {
dec_label_pc_1a931:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a931 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a931
}

define i32 @function_1a940(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a940:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a940 = load i32, i32* @eax, align 4
  %v1_1a943 = call i32 @unknown_30426(i32 %v0_1a940)
  %v1_1a948 = xor i32 %v1_1a943, 1
  %v4_1a948 = trunc i32 %v1_1a948 to i8
  store i32 %v1_1a948, i32* %eax.global-to-local, align 4
  %v5_1a94b = icmp eq i8 %v4_1a948, 0
  %v0_1a965 = load i32, i32* @ebp, align 4
  %v1_1a965 = add i32 %v0_1a965, -36
  %v2_1a965 = inttoptr i32 %v1_1a965 to i32*
  %v3_1a965 = load i32, i32* %v2_1a965, align 4
  store i32 %v3_1a965, i32* %eax.global-to-local, align 4
  br i1 %v5_1a94b, label %dec_label_pc_1a965, label %dec_label_pc_1a94f

dec_label_pc_1a94f:                               ; preds = %dec_label_pc_1a940
  %v2_1a952 = add i32 %v0_1a965, -40
  %v3_1a952 = inttoptr i32 %v2_1a952 to i32*
  store i32 %v3_1a965, i32* %v3_1a952, align 4
  %v0_1a955 = load i32, i32* @ebp, align 4
  %v1_1a955 = add i32 %v0_1a955, -36
  %v2_1a955 = inttoptr i32 %v1_1a955 to i32*
  %v3_1a955 = load i32, i32* %v2_1a955, align 4
  store i32 %v3_1a955, i32* %eax.global-to-local, align 4
  %v1_1a95b = call i32 @unknown_3779c(i32 %v3_1a955)
  store i32 %v1_1a95b, i32* %eax.global-to-local, align 4
  %v1_1a960 = load i32, i32* @ebp, align 4
  %v2_1a960 = add i32 %v1_1a960, -36
  %v3_1a960 = inttoptr i32 %v2_1a960 to i32*
  store i32 %v1_1a95b, i32* %v3_1a960, align 4
  br label %dec_label_pc_1a973

dec_label_pc_1a965:                               ; preds = %dec_label_pc_1a940
  %v1_1a96b = call i32 @unknown_377cc(i32 %v3_1a965)
  store i32 %v1_1a96b, i32* %eax.global-to-local, align 4
  %v1_1a970 = load i32, i32* @ebp, align 4
  %v2_1a970 = add i32 %v1_1a970, -36
  %v3_1a970 = inttoptr i32 %v2_1a970 to i32*
  store i32 %v1_1a96b, i32* %v3_1a970, align 4
  br label %dec_label_pc_1a973

dec_label_pc_1a973:                               ; preds = %dec_label_pc_1a965, %dec_label_pc_1a94f
  %v0_1a973 = load i32, i32* @ebp, align 4
  %v1_1a973 = add i32 %v0_1a973, -36
  %v2_1a973 = inttoptr i32 %v1_1a973 to i32*
  %v3_1a973 = load i32, i32* %v2_1a973, align 4
  %v10_1a973 = icmp eq i32 %v3_1a973, 0
  %v1_1a977 = icmp eq i1 %v10_1a973, false
  %v2_1a977 = zext i1 %v1_1a977 to i32
  %v3_1a977 = load i32, i32* %eax.global-to-local, align 4
  %v4_1a977 = and i32 %v3_1a977, -256
  %v5_1a977 = or i32 %v2_1a977, %v4_1a977
  store i32 %v5_1a977, i32* %eax.global-to-local, align 4
  %v1_1a97e = add i32 %v0_1a973, -40
  %v2_1a97e = inttoptr i32 %v1_1a97e to i32*
  %v3_1a97e = load i32, i32* %v2_1a97e, align 4
  store i32 %v3_1a97e, i32* %eax.global-to-local, align 4
  %v1_1a985 = add i32 %v0_1a973, -28
  %v2_1a985 = inttoptr i32 %v1_1a985 to i32*
  %v3_1a985 = load i32, i32* %v2_1a985, align 4
  store i32 %v3_1a985, i32* %eax.global-to-local, align 4
  %v2_1a98b = call i32 @unknown_35150(i32 %v3_1a985, i32 %v3_1a97e)
  store i32 %v2_1a98b, i32* %eax.global-to-local, align 4
  %v0_1a990 = load i32, i32* @ebp, align 4
  %v1_1a990 = add i32 %v0_1a990, -28
  %v2_1a990 = inttoptr i32 %v1_1a990 to i32*
  %v3_1a990 = load i32, i32* %v2_1a990, align 4
  store i32 %v3_1a990, i32* @eax, align 4
  %v1_1a993 = add i32 %v0_1a990, -12
  %v2_1a993 = inttoptr i32 %v1_1a993 to i32*
  %v3_1a993 = load i32, i32* %v2_1a993, align 4
  %v1_1a996 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a996 = icmp eq i32 %v1_1a996, %v3_1a993
  br i1 %v3_1a996, label %bb, label %dec_label_pc_1a99f

bb:                                               ; preds = %dec_label_pc_1a973
  %v2_1a99d = call i32 @function_1a9a4(i32 %v3_1a985)
  store i32 %v2_1a99d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a99f

dec_label_pc_1a99f:                               ; preds = %bb, %dec_label_pc_1a973
  %v5_1a99d = phi i32 [ %v2_1a99d, %bb ], [ %v3_1a990, %dec_label_pc_1a973 ]
  ret i32 %v5_1a99d

; uselistorder directives
  uselistorder i32 %v0_1a973, { 1, 0, 2 }
  uselistorder i32 %v3_1a965, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 8, 9, 6, 10 }
}

define i32 @function_1a9a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a9a4:
  %v0_1a9a5 = load i32, i32* @eax, align 4
  ret i32 %v0_1a9a5
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a9a8:
  %stack_var_-17 = alloca i32, align 4
  %v1_1a9c5 = call i32 @unknown_378b0(i32 %arg1)
  %v2_1a9ce = ptrtoint i32* %stack_var_-17 to i32
  %v2_1a9d4 = call i32 @unknown_378e0(i32 %v2_1a9ce, i32 %v1_1a9c5)
  ret i32 %v2_1a9d4
}

define i32 @function_1a9e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a9e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a9e9() local_unnamed_addr {
dec_label_pc_1a9e9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a9e9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a9e9 = add i32 %v0_1a9e9, -1
  store i32 %v1_1a9e9, i32* %ecx.global-to-local, align 4
  %v0_1a9eb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a9eb
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE11lower_boundERS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a9ec:
  %v1_1aa16 = call i32 @unknown_37988(i32 %arg2)
  %v1_1aa23 = call i32 @unknown_37958(i32 %arg2)
  %v5_1aa44 = call i32 @unknown_379b8(i32 %arg1, i32 %arg2, i32 %v1_1aa23, i32 %v1_1aa16, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1aa5b

bb:                                               ; preds = %dec_label_pc_1a9ec
  %v1_1aa59 = call i32 @function_1aa60()
  br label %dec_label_pc_1aa5b

dec_label_pc_1aa5b:                               ; preds = %bb, %dec_label_pc_1a9ec
  %v2_1aa59 = phi i32 [ %v1_1aa59, %bb ], [ %arg1, %dec_label_pc_1a9ec ]
  ret i32 %v2_1aa59

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1aa60() local_unnamed_addr {
dec_label_pc_1aa60:
  %v0_1aa64 = load i32, i32* @eax, align 4
  ret i32 %v0_1aa64
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa68:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1aa94

bb:                                               ; preds = %dec_label_pc_1aa68
  %v3_1aa92 = call i32 @function_1aa99(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1aa94

dec_label_pc_1aa94:                               ; preds = %bb, %dec_label_pc_1aa68
  %v4_1aa92 = phi i32 [ %v3_1aa92, %bb ], [ %arg1, %dec_label_pc_1aa68 ]
  ret i32 %v4_1aa92
}

define i32 @function_1aa99(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa99:
  %v0_1aa9a = load i32, i32* @eax, align 4
  ret i32 %v0_1aa9a
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa9e:
  %v1_1aabe = add i32 %arg2, 4
  %v2_1aacb = call i32 @unknown_37b1e(i32 %arg1, i32 %v1_1aabe)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1aadf

bb:                                               ; preds = %dec_label_pc_1aa9e
  %v1_1aadd = call i32 @function_1aae4()
  br label %dec_label_pc_1aadf

dec_label_pc_1aadf:                               ; preds = %bb, %dec_label_pc_1aa9e
  %v2_1aadd = phi i32 [ %v1_1aadd, %bb ], [ %arg1, %dec_label_pc_1aa9e ]
  ret i32 %v2_1aadd

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1aae4() local_unnamed_addr {
dec_label_pc_1aae4:
  %v0_1aae5 = load i32, i32* @eax, align 4
  ret i32 %v0_1aae5
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256P11CBlockIndexEEC1ERKSt17_Rb_tree_iteratorIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aae8:
  %v1_1ab08 = inttoptr i32 %arg2 to i32*
  %v2_1ab08 = load i32, i32* %v1_1ab08, align 4
  store i32 %v2_1ab08, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ab1b

bb:                                               ; preds = %dec_label_pc_1aae8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1ab19 = call i32 @function_1ab20(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1ab1b

dec_label_pc_1ab1b:                               ; preds = %bb, %dec_label_pc_1aae8
  %v4_1ab19 = phi i32 [ %v3_1ab19, %bb ], [ 0, %dec_label_pc_1aae8 ]
  ret i32 %v4_1ab19

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1ab20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ab20:
  %v0_1ab21 = load i32, i32* @eax, align 4
  ret i32 %v0_1ab21
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ab22:
  %stack_var_-19 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %tmp123 = ptrtoint i32* %arg1 to i32
  %v1_1ab55 = call i32 @unknown_37abe(i32 %arg2)
  %v12_1ab5a = icmp eq i32 %v1_1ab55, %arg3
  %v5_1ab5f = icmp eq i1 %v12_1ab5a, false
  br i1 %v5_1ab5f, label %dec_label_pc_1ac2b, label %dec_label_pc_1ab67

dec_label_pc_1ab67:                               ; preds = %dec_label_pc_1ab22
  %v1_1ab6d = call i32 @unknown_37c0a(i32 %arg2)
  %v1_1ab72 = icmp eq i32 %v1_1ab6d, 0
  br i1 %v1_1ab72, label %dec_label_pc_1ac02, label %dec_label_pc_1ab76

dec_label_pc_1ab76:                               ; preds = %dec_label_pc_1ab67
  %v2_1ab7d = ptrtoint i32* %stack_var_-21 to i32
  %v2_1ab83 = call i32 @unknown_37a5a(i32 %v2_1ab7d, i32 %arg4)
  %v1_1ab90 = call i32 @unknown_37bda(i32 %arg2)
  %v1_1ab95 = inttoptr i32 %v1_1ab90 to i32*
  %v2_1ab95 = load i32, i32* %v1_1ab95, align 4
  %v1_1ab9a = call i32 @unknown_354ca(i32 %v2_1ab95)
  %v3_1abaf = call i32 @unknown_30654(i32 %arg2, i32 %v1_1ab9a, i32 %v2_1ab83)
  %v4_1abb4 = trunc i32 %v3_1abaf to i8
  %v5_1abb4 = icmp eq i8 %v4_1abb4, 0
  br i1 %v5_1abb4, label %dec_label_pc_1ac02, label %dec_label_pc_1abc8

dec_label_pc_1abc8:                               ; preds = %dec_label_pc_1ab76
  %v1_1abce = call i32 @unknown_37bda(i32 %arg2)
  %v1_1abd3 = inttoptr i32 %v1_1abce to i32*
  %v2_1abd3 = load i32, i32* %v1_1abd3, align 4
  %v5_1abf5 = call i32 @unknown_37c3a(i32 %tmp123, i32 %arg2, i32 0, i32 %v2_1abd3, i32 %arg4)
  %v0_1abfd = call i32 @function_1af22()
  ret i32 %v0_1abfd

dec_label_pc_1ac02:                               ; preds = %dec_label_pc_1ab67, %dec_label_pc_1ab76
  %v2_1ac02 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1ac16 = call i32 @unknown_37d3c(i32 %v2_1ac02, i32 %arg2, i32 %arg4)
  %v3_1ac21 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1ac21, i32* %arg1, align 4
  %v0_1ac26 = call i32 @function_1af22()
  ret i32 %v0_1ac26

dec_label_pc_1ac2b:                               ; preds = %dec_label_pc_1ab22
  %v1_1ac31 = call i32 @unknown_354ca(i32 %arg3)
  %v2_1ac3f = ptrtoint i32* %stack_var_-20 to i32
  %v2_1ac45 = call i32 @unknown_37a5a(i32 %v2_1ac3f, i32 %arg4)
  %v3_1ac58 = call i32 @unknown_30654(i32 %arg2, i32 %v2_1ac45, i32 %v1_1ac31)
  %v4_1ac5d = trunc i32 %v3_1ac58 to i8
  %v5_1ac5d = icmp eq i8 %v4_1ac5d, 0
  br i1 %v5_1ac5d, label %bb, label %dec_label_pc_1ac65

bb:                                               ; preds = %dec_label_pc_1ac2b
  %v1_1ac5f = call i32 @function_1ada5()
  br label %dec_label_pc_1ac65

dec_label_pc_1ac65:                               ; preds = %bb, %dec_label_pc_1ac2b
  store i32 %arg3, i32* %stack_var_-28, align 4
  %v1_1ac74 = call i32 @unknown_37f40(i32 %arg2)
  %v1_1ac79 = inttoptr i32 %v1_1ac74 to i32*
  %v2_1ac79 = load i32, i32* %v1_1ac79, align 4
  %v12_1ac7b = icmp eq i32 %v2_1ac79, %arg3
  %v5_1ac80 = icmp eq i1 %v12_1ac7b, false
  br i1 %v5_1ac80, label %dec_label_pc_1acc7, label %dec_label_pc_1ac84

dec_label_pc_1ac84:                               ; preds = %dec_label_pc_1ac65
  %v1_1ac8a = call i32 @unknown_37f40(i32 %arg2)
  %v1_1ac8f = inttoptr i32 %v1_1ac8a to i32*
  %v2_1ac8f = load i32, i32* %v1_1ac8f, align 4
  %v1_1ac97 = call i32 @unknown_37f40(i32 %arg2)
  %v1_1ac9c = inttoptr i32 %v1_1ac97 to i32*
  %v2_1ac9c = load i32, i32* %v1_1ac9c, align 4
  %v5_1acba = call i32 @unknown_37c3a(i32 %tmp123, i32 %arg2, i32 %v2_1ac9c, i32 %v2_1ac8f, i32 %arg4)
  %v0_1acc2 = call i32 @function_1af22()
  ret i32 %v0_1acc2

dec_label_pc_1acc7:                               ; preds = %dec_label_pc_1ac65
  %v2_1acce = ptrtoint i32* %stack_var_-19 to i32
  %v2_1acd4 = call i32 @unknown_37a5a(i32 %v2_1acce, i32 %arg4)
  %v2_1acdb = ptrtoint i32* %stack_var_-28 to i32
  %v1_1ace1 = call i32 @unknown_37f70(i32 %v2_1acdb)
  %v1_1ace6 = inttoptr i32 %v1_1ace1 to i32*
  %v2_1ace6 = load i32, i32* %v1_1ace6, align 4
  %v1_1aceb = call i32 @unknown_354ca(i32 %v2_1ace6)
  %v3_1ad00 = call i32 @unknown_30654(i32 %arg2, i32 %v1_1aceb, i32 %v2_1acd4)
  %v4_1ad05 = trunc i32 %v3_1ad00 to i8
  %v5_1ad05 = icmp eq i8 %v4_1ad05, 0
  br i1 %v5_1ad05, label %bb130, label %dec_label_pc_1ad09

bb130:                                            ; preds = %dec_label_pc_1acc7
  %v1_1ad07 = call i32 @function_1ad7c()
  br label %dec_label_pc_1ad09

dec_label_pc_1ad09:                               ; preds = %bb130, %dec_label_pc_1acc7
  %v3_1ad09 = load i32, i32* %stack_var_-28, align 4
  %v1_1ad0f = call i32 @unknown_379fa(i32 %v3_1ad09)
  ret i32 %v1_1ad0f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_37f40, { 2, 1, 0 }
  uselistorder i32 %arg4, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 9, 6, 7, 8, 10, 11, 4, 2, 3, 0, 1, 5, 12 }
  uselistorder label %dec_label_pc_1ac02, { 1, 0 }
}

define i32 @function_1ad16(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad16:
  %v0_1ad16 = load i1, i1* @zf, align 1
  %v5_1ad19 = icmp eq i1 %v0_1ad16, false
  %v0_1ad4d = load i32, i32* @ebp, align 4
  br i1 %v5_1ad19, label %dec_label_pc_1ad4d, label %dec_label_pc_1ad1d

dec_label_pc_1ad1d:                               ; preds = %dec_label_pc_1ad16
  %v1_1ad1d = add i32 %v0_1ad4d, -24
  %v2_1ad1d = inttoptr i32 %v1_1ad1d to i32*
  %v3_1ad1d = load i32, i32* %v2_1ad1d, align 4
  %v1_1ad20 = add i32 %v0_1ad4d, -60
  %v2_1ad20 = inttoptr i32 %v1_1ad20 to i32*
  %v3_1ad20 = load i32, i32* %v2_1ad20, align 4
  %v1_1ad23 = add i32 %v0_1ad4d, -72
  %v2_1ad23 = inttoptr i32 %v1_1ad23 to i32*
  %v3_1ad23 = load i32, i32* %v2_1ad23, align 4
  %v1_1ad36 = add i32 %v0_1ad4d, -64
  %v2_1ad36 = inttoptr i32 %v1_1ad36 to i32*
  %v3_1ad36 = load i32, i32* %v2_1ad36, align 4
  %v5_1ad40 = call i32 @unknown_37c3a(i32 %v3_1ad20, i32 %v3_1ad36, i32 0, i32 %v3_1ad1d, i32 %v3_1ad23)
  %v0_1ad48 = call i32 @function_1af22()
  ret i32 %v0_1ad48

dec_label_pc_1ad4d:                               ; preds = %dec_label_pc_1ad16
  %v1_1ad4d = add i32 %v0_1ad4d, -68
  %v2_1ad4d = inttoptr i32 %v1_1ad4d to i32*
  %v3_1ad4d = load i32, i32* %v2_1ad4d, align 4
  %v1_1ad53 = add i32 %v0_1ad4d, -60
  %v2_1ad53 = inttoptr i32 %v1_1ad53 to i32*
  %v3_1ad53 = load i32, i32* %v2_1ad53, align 4
  %v1_1ad56 = add i32 %v0_1ad4d, -72
  %v2_1ad56 = inttoptr i32 %v1_1ad56 to i32*
  %v3_1ad56 = load i32, i32* %v2_1ad56, align 4
  %v1_1ad65 = add i32 %v0_1ad4d, -64
  %v2_1ad65 = inttoptr i32 %v1_1ad65 to i32*
  %v3_1ad65 = load i32, i32* %v2_1ad65, align 4
  %v5_1ad6f = call i32 @unknown_37c3a(i32 %v3_1ad53, i32 %v3_1ad65, i32 %v3_1ad4d, i32 %v3_1ad4d, i32 %v3_1ad56)
  %v0_1ad77 = call i32 @function_1af22()
  ret i32 %v0_1ad77

; uselistorder directives
  uselistorder i32 %v3_1ad4d, { 1, 0 }
  uselistorder i32 %v0_1ad4d, { 0, 2, 1, 7, 4, 3, 6, 5 }
}

define i32 @function_1ad7c() local_unnamed_addr {
dec_label_pc_1ad7c:
  %v0_1ad7c = load i32, i32* @ebp, align 4
  %v1_1ad7c = add i32 %v0_1ad7c, -40
  %v1_1ad7f = add i32 %v0_1ad7c, -72
  %v2_1ad7f = inttoptr i32 %v1_1ad7f to i32*
  %v3_1ad7f = load i32, i32* %v2_1ad7f, align 4
  %v1_1ad86 = add i32 %v0_1ad7c, -64
  %v2_1ad86 = inttoptr i32 %v1_1ad86 to i32*
  %v3_1ad86 = load i32, i32* %v2_1ad86, align 4
  %v3_1ad90 = call i32 @unknown_37d3c(i32 %v1_1ad7c, i32 %v3_1ad86, i32 %v3_1ad7f)
  %v0_1ad98 = load i32, i32* @ebp, align 4
  %v1_1ad98 = add i32 %v0_1ad98, -60
  %v2_1ad98 = inttoptr i32 %v1_1ad98 to i32*
  %v3_1ad98 = load i32, i32* %v2_1ad98, align 4
  %v1_1ad9b = add i32 %v0_1ad98, -40
  %v2_1ad9b = inttoptr i32 %v1_1ad9b to i32*
  %v3_1ad9b = load i32, i32* %v2_1ad9b, align 4
  %v2_1ad9e = inttoptr i32 %v3_1ad98 to i32*
  store i32 %v3_1ad9b, i32* %v2_1ad9e, align 4
  %v0_1ada0 = call i32 @function_1af22()
  ret i32 %v0_1ada0
}

define i32 @function_1ada5() local_unnamed_addr {
dec_label_pc_1ada5:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ada5 = load i32, i32* @ebp, align 4
  %v1_1ada5 = add i32 %v0_1ada5, -72
  %v2_1ada5 = inttoptr i32 %v1_1ada5 to i32*
  %v3_1ada5 = load i32, i32* %v2_1ada5, align 4
  %v1_1adac = add i32 %v0_1ada5, -14
  %v2_1adb2 = call i32 @unknown_37a5a(i32 %v1_1adac, i32 %v3_1ada5)
  store i32 %v2_1adb2, i32* %ebx.global-to-local, align 4
  %v0_1adb9 = load i32, i32* @ebp, align 4
  %v1_1adb9 = add i32 %v0_1adb9, -68
  %v2_1adb9 = inttoptr i32 %v1_1adb9 to i32*
  %v3_1adb9 = load i32, i32* %v2_1adb9, align 4
  %v1_1adbf = call i32 @unknown_354ca(i32 %v3_1adb9)
  %v0_1adc6 = load i32, i32* @ebp, align 4
  %v1_1adc6 = add i32 %v0_1adc6, -64
  %v2_1adc6 = inttoptr i32 %v1_1adc6 to i32*
  %v3_1adc6 = load i32, i32* %v2_1adc6, align 4
  %v0_1adc9 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1add4 = call i32 @unknown_30654(i32 %v3_1adc6, i32 %v1_1adbf, i32 %v0_1adc9)
  %v4_1add9 = trunc i32 %v3_1add4 to i8
  %v5_1add9 = icmp eq i8 %v4_1add9, 0
  %v0_1af0d = load i32, i32* @ebp, align 4
  br i1 %v5_1add9, label %dec_label_pc_1af0d, label %dec_label_pc_1ade1

dec_label_pc_1ade1:                               ; preds = %dec_label_pc_1ada5
  %v1_1ade1 = add i32 %v0_1af0d, -68
  %v2_1ade1 = inttoptr i32 %v1_1ade1 to i32*
  %v3_1ade1 = load i32, i32* %v2_1ade1, align 4
  %v2_1ade4 = add i32 %v0_1af0d, -24
  %v3_1ade4 = inttoptr i32 %v2_1ade4 to i32*
  store i32 %v3_1ade1, i32* %v3_1ade4, align 4
  %v0_1ade7 = load i32, i32* @ebp, align 4
  %v1_1ade7 = add i32 %v0_1ade7, -68
  %v2_1ade7 = inttoptr i32 %v1_1ade7 to i32*
  %v3_1ade7 = load i32, i32* %v2_1ade7, align 4
  store i32 %v3_1ade7, i32* %ebx.global-to-local, align 4
  %v1_1adea = add i32 %v0_1ade7, -64
  %v2_1adea = inttoptr i32 %v1_1adea to i32*
  %v3_1adea = load i32, i32* %v2_1adea, align 4
  %v1_1adf0 = call i32 @unknown_37bda(i32 %v3_1adea)
  %v1_1adf5 = inttoptr i32 %v1_1adf0 to i32*
  %v2_1adf5 = load i32, i32* %v1_1adf5, align 4
  %v0_1adf7 = load i32, i32* %ebx.global-to-local, align 4
  %v12_1adf7 = icmp eq i32 %v0_1adf7, %v2_1adf5
  %v5_1adfc = icmp eq i1 %v12_1adf7, false
  %v0_1ae3a = load i32, i32* @ebp, align 4
  br i1 %v5_1adfc, label %dec_label_pc_1ae3a, label %dec_label_pc_1ae00

dec_label_pc_1ae00:                               ; preds = %dec_label_pc_1ade1
  %v1_1ae00 = add i32 %v0_1ae3a, -64
  %v2_1ae00 = inttoptr i32 %v1_1ae00 to i32*
  %v3_1ae00 = load i32, i32* %v2_1ae00, align 4
  %v1_1ae06 = call i32 @unknown_37bda(i32 %v3_1ae00)
  %v1_1ae0b = inttoptr i32 %v1_1ae06 to i32*
  %v2_1ae0b = load i32, i32* %v1_1ae0b, align 4
  %v0_1ae0d = load i32, i32* @ebp, align 4
  %v1_1ae0d = add i32 %v0_1ae0d, -60
  %v2_1ae0d = inttoptr i32 %v1_1ae0d to i32*
  %v3_1ae0d = load i32, i32* %v2_1ae0d, align 4
  %v1_1ae10 = add i32 %v0_1ae0d, -72
  %v2_1ae10 = inttoptr i32 %v1_1ae10 to i32*
  %v3_1ae10 = load i32, i32* %v2_1ae10, align 4
  %v1_1ae23 = add i32 %v0_1ae0d, -64
  %v2_1ae23 = inttoptr i32 %v1_1ae23 to i32*
  %v3_1ae23 = load i32, i32* %v2_1ae23, align 4
  %v5_1ae2d = call i32 @unknown_37c3a(i32 %v3_1ae0d, i32 %v3_1ae23, i32 0, i32 %v2_1ae0b, i32 %v3_1ae10)
  %v0_1ae35 = call i32 @function_1af22()
  ret i32 %v0_1ae35

dec_label_pc_1ae3a:                               ; preds = %dec_label_pc_1ade1
  %v1_1ae3a = add i32 %v0_1ae3a, -24
  %v1_1ae40 = call i32 @unknown_37fb0(i32 %v1_1ae3a)
  %v1_1ae45 = inttoptr i32 %v1_1ae40 to i32*
  %v2_1ae45 = load i32, i32* %v1_1ae45, align 4
  %v1_1ae4a = call i32 @unknown_354ca(i32 %v2_1ae45)
  store i32 %v1_1ae4a, i32* %ebx.global-to-local, align 4
  %v0_1ae51 = load i32, i32* @ebp, align 4
  %v1_1ae51 = add i32 %v0_1ae51, -72
  %v2_1ae51 = inttoptr i32 %v1_1ae51 to i32*
  %v3_1ae51 = load i32, i32* %v2_1ae51, align 4
  %v1_1ae58 = add i32 %v0_1ae51, -13
  %v2_1ae5e = call i32 @unknown_37a5a(i32 %v1_1ae58, i32 %v3_1ae51)
  %v0_1ae63 = load i32, i32* @ebp, align 4
  %v1_1ae63 = add i32 %v0_1ae63, -64
  %v2_1ae63 = inttoptr i32 %v1_1ae63 to i32*
  %v3_1ae63 = load i32, i32* %v2_1ae63, align 4
  %v0_1ae66 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1ae71 = call i32 @unknown_30654(i32 %v3_1ae63, i32 %v2_1ae5e, i32 %v0_1ae66)
  %v4_1ae76 = trunc i32 %v3_1ae71 to i8
  %v5_1ae76 = icmp eq i8 %v4_1ae76, 0
  %v0_1aee7 = load i32, i32* @ebp, align 4
  br i1 %v5_1ae76, label %dec_label_pc_1aee7, label %dec_label_pc_1ae7a

dec_label_pc_1ae7a:                               ; preds = %dec_label_pc_1ae3a
  %v1_1ae7a = add i32 %v0_1aee7, -68
  %v2_1ae7a = inttoptr i32 %v1_1ae7a to i32*
  %v3_1ae7a = load i32, i32* %v2_1ae7a, align 4
  %v1_1ae80 = call i32 @unknown_379fa(i32 %v3_1ae7a)
  %v1_1ae85 = icmp eq i32 %v1_1ae80, 0
  %v5_1ae8a = icmp eq i1 %v1_1ae85, false
  %v0_1aebb = load i32, i32* @ebp, align 4
  br i1 %v5_1ae8a, label %dec_label_pc_1aebb, label %dec_label_pc_1ae8e

dec_label_pc_1ae8e:                               ; preds = %dec_label_pc_1ae7a
  %v1_1ae8e = add i32 %v0_1aebb, -68
  %v2_1ae8e = inttoptr i32 %v1_1ae8e to i32*
  %v3_1ae8e = load i32, i32* %v2_1ae8e, align 4
  %v1_1ae91 = add i32 %v0_1aebb, -60
  %v2_1ae91 = inttoptr i32 %v1_1ae91 to i32*
  %v3_1ae91 = load i32, i32* %v2_1ae91, align 4
  %v1_1ae94 = add i32 %v0_1aebb, -72
  %v2_1ae94 = inttoptr i32 %v1_1ae94 to i32*
  %v3_1ae94 = load i32, i32* %v2_1ae94, align 4
  %v1_1aea7 = add i32 %v0_1aebb, -64
  %v2_1aea7 = inttoptr i32 %v1_1aea7 to i32*
  %v3_1aea7 = load i32, i32* %v2_1aea7, align 4
  %v5_1aeb1 = call i32 @unknown_37c3a(i32 %v3_1ae91, i32 %v3_1aea7, i32 0, i32 %v3_1ae8e, i32 %v3_1ae94)
  %v0_1aeb9 = call i32 @function_1af22()
  ret i32 %v0_1aeb9

dec_label_pc_1aebb:                               ; preds = %dec_label_pc_1ae7a
  %v1_1aebb = add i32 %v0_1aebb, -24
  %v2_1aebb = inttoptr i32 %v1_1aebb to i32*
  %v3_1aebb = load i32, i32* %v2_1aebb, align 4
  %v1_1aec1 = add i32 %v0_1aebb, -60
  %v2_1aec1 = inttoptr i32 %v1_1aec1 to i32*
  %v3_1aec1 = load i32, i32* %v2_1aec1, align 4
  %v1_1aec4 = add i32 %v0_1aebb, -72
  %v2_1aec4 = inttoptr i32 %v1_1aec4 to i32*
  %v3_1aec4 = load i32, i32* %v2_1aec4, align 4
  store i32 %v3_1aec4, i32* %ebx.global-to-local, align 4
  %v1_1aed3 = add i32 %v0_1aebb, -64
  %v2_1aed3 = inttoptr i32 %v1_1aed3 to i32*
  %v3_1aed3 = load i32, i32* %v2_1aed3, align 4
  %v5_1aedd = call i32 @unknown_37c3a(i32 %v3_1aec1, i32 %v3_1aed3, i32 %v3_1aebb, i32 %v3_1aebb, i32 %v3_1aec4)
  %v0_1aee5 = call i32 @function_1af22()
  ret i32 %v0_1aee5

dec_label_pc_1aee7:                               ; preds = %dec_label_pc_1ae3a
  %v1_1aee7 = add i32 %v0_1aee7, -32
  %v1_1aeea = add i32 %v0_1aee7, -72
  %v2_1aeea = inttoptr i32 %v1_1aeea to i32*
  %v3_1aeea = load i32, i32* %v2_1aeea, align 4
  %v1_1aef1 = add i32 %v0_1aee7, -64
  %v2_1aef1 = inttoptr i32 %v1_1aef1 to i32*
  %v3_1aef1 = load i32, i32* %v2_1aef1, align 4
  %v3_1aefb = call i32 @unknown_37d3c(i32 %v1_1aee7, i32 %v3_1aef1, i32 %v3_1aeea)
  %v0_1af03 = load i32, i32* @ebp, align 4
  %v1_1af03 = add i32 %v0_1af03, -60
  %v2_1af03 = inttoptr i32 %v1_1af03 to i32*
  %v3_1af03 = load i32, i32* %v2_1af03, align 4
  %v1_1af06 = add i32 %v0_1af03, -32
  %v2_1af06 = inttoptr i32 %v1_1af06 to i32*
  %v3_1af06 = load i32, i32* %v2_1af06, align 4
  %v2_1af09 = inttoptr i32 %v3_1af03 to i32*
  store i32 %v3_1af06, i32* %v2_1af09, align 4
  %v0_1af0b = call i32 @function_1af22()
  ret i32 %v0_1af0b

dec_label_pc_1af0d:                               ; preds = %dec_label_pc_1ada5
  %v1_1af0d = add i32 %v0_1af0d, -60
  %v2_1af0d = inttoptr i32 %v1_1af0d to i32*
  %v3_1af0d = load i32, i32* %v2_1af0d, align 4
  %v1_1af10 = add i32 %v0_1af0d, -68
  %v2_1af1a = call i32 @unknown_37ff0(i32 %v3_1af0d, i32 %v1_1af10)
  ret i32 %v2_1af1a

; uselistorder directives
  uselistorder i32 %v3_1aebb, { 1, 0 }
  uselistorder i32 %v0_1aebb, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_1aee7, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1ae3a, { 1, 0 }
  uselistorder i32 %v0_1af0d, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_37d3c, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_379fa, { 1, 0 }
  uselistorder i32 ()* @function_1af22, { 9, 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_37c3a, { 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 (i32)* @unknown_37bda, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_30654, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_354ca, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_37a5a, { 4, 3, 2, 1, 0 }
  uselistorder i32 -72, { 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 0 }
}

define i32 @function_1af22() local_unnamed_addr {
dec_label_pc_1af22:
  %v0_1af22 = load i32, i32* @ebp, align 4
  %v1_1af22 = add i32 %v0_1af22, -60
  %v2_1af22 = inttoptr i32 %v1_1af22 to i32*
  %v3_1af22 = load i32, i32* %v2_1af22, align 4
  store i32 %v3_1af22, i32* @eax, align 4
  %v1_1af25 = add i32 %v0_1af22, -12
  %v2_1af25 = inttoptr i32 %v1_1af25 to i32*
  %v3_1af25 = load i32, i32* %v2_1af25, align 4
  %v1_1af28 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1af28 = icmp eq i32 %v1_1af28, %v3_1af25
  br i1 %v3_1af28, label %bb, label %dec_label_pc_1af31

bb:                                               ; preds = %dec_label_pc_1af22
  %v1_1af2f = call i32 @function_1af36()
  br label %dec_label_pc_1af31

dec_label_pc_1af31:                               ; preds = %bb, %dec_label_pc_1af22
  %v2_1af2f = phi i32 [ %v1_1af2f, %bb ], [ %v3_1af22, %dec_label_pc_1af22 ]
  ret i32 %v2_1af2f
}

define i32 @function_1af36() local_unnamed_addr {
dec_label_pc_1af36:
  %v0_1af3a = load i32, i32* @eax, align 4
  ret i32 %v0_1af3a
}

define i32 @_ZNK6CBlock9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1af3e:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1af7e = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg3, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1af7e, 16777216
  %v5_1af9a = sdiv i32 %sext, 16777216
  %v6_1af9a = call i32 @unknown_38455(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %v5_1af9a)
  %v1_1afa5 = add i32 %arg1, 80
  store i32 %v1_1afa5, i32* %edx.global-to-local, align 8
  %v0_1afa8 = load i32, i32* %ebx.global-to-local, align 4
  %sext1 = mul i32 %v0_1afa8, 16777216
  %v5_1afc4 = sdiv i32 %sext1, 16777216
  %v6_1afc4 = call i32 @unknown_384bd(i32 %arg2, i32 %v1_1afa5, i32 %arg3, i32 %arg4, i32 %v5_1afc4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1afd8

bb:                                               ; preds = %dec_label_pc_1af3e
  %v5_1afc9 = add i32 %v6_1afc4, %v6_1af9a
  %v2_1afd6 = call i32 @function_1afdd(i32 %v5_1afc9)
  br label %dec_label_pc_1afd8

dec_label_pc_1afd8:                               ; preds = %bb, %dec_label_pc_1af3e
  %v3_1afd6 = phi i32 [ %v2_1afd6, %bb ], [ 0, %dec_label_pc_1af3e ]
  ret i32 %v3_1afd6

; uselistorder directives
  uselistorder i32 80, { 1, 0, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1afdd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1afdd:
  %v0_1afe2 = load i32, i32* @eax, align 4
  ret i32 %v0_1afe2
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKS9_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1afe4:
  %v1_1b011 = add i32 %arg1, 4
  %v1_1b017 = call i32 @unknown_337ba(i32 %v1_1b011)
  %v2_1b026 = call i32 @unknown_385cb(i32 %v1_1b017, i32 %arg2)
  %v2_1b035 = call i32 @unknown_3548e(i32 %arg1, i32 %v2_1b026)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b046

bb:                                               ; preds = %dec_label_pc_1afe4
  %v1_1b044 = call i32 @function_1b04b()
  br label %dec_label_pc_1b046

dec_label_pc_1b046:                               ; preds = %bb, %dec_label_pc_1afe4
  %v2_1b044 = phi i32 [ %v1_1b044, %bb ], [ 0, %dec_label_pc_1afe4 ]
  ret i32 %v2_1b044

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b04b() local_unnamed_addr {
dec_label_pc_1b04b:
  %v0_1b04c = load i32, i32* @eax, align 4
  ret i32 %v0_1b04c
}

define i32 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b04d:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_1b06b = ptrtoint i32* %stack_var_-37 to i32
  %v2_1b06e = ptrtoint i32* %stack_var_-32 to i32
  %v2_1b078 = call i32 @unknown_386b4(i32 %v2_1b06b, i32 %v2_1b06e)
  %v3_1b080 = load i32, i32* %stack_var_-32, align 4
  %v0_1b083 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1b091 = call i32 @unknown_386e9(i32 %v3_1b080, i32 %arg2, i32 %v0_1b083)
  store i32 %v3_1b091, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b0a2

bb:                                               ; preds = %dec_label_pc_1b04d
  %v1_1b0a0 = call i32 @function_1b0a7()
  br label %dec_label_pc_1b0a2

dec_label_pc_1b0a2:                               ; preds = %bb, %dec_label_pc_1b04d
  %v2_1b0a0 = phi i32 [ %v1_1b0a0, %bb ], [ %v3_1b091, %dec_label_pc_1b04d ]
  ret i32 %v2_1b0a0
}

define i32 @function_1b0a7() local_unnamed_addr {
dec_label_pc_1b0a7:
  %v0_1b0ab = load i32, i32* @eax, align 4
  ret i32 %v0_1b0ab
}

define i32 @_ZSt22__uninitialized_copy_aIPKcPc25zero_after_free_allocatorIcEET0_T_S6_S5_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b0ac:
  %v15_1b109112 = icmp eq i32 %arg1, %arg2
  %v1_1b10c113 = icmp eq i1 %v15_1b109112, false
  %v5_1b10f114 = icmp eq i1 %v1_1b10c113, false
  %v1_1b111115 = icmp eq i1 %v5_1b10f114, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_1b111115, label %dec_label_pc_1b0dd, label %dec_label_pc_1b113

dec_label_pc_1b0dd:                               ; preds = %dec_label_pc_1b0ac, %dec_label_pc_1b0dd
  %storemerge117 = phi i32 [ %v4_1b102, %dec_label_pc_1b0dd ], [ %arg3, %dec_label_pc_1b0ac ]
  %stack_var_-32.0116 = phi i32 [ %v4_1b0fe, %dec_label_pc_1b0dd ], [ %arg1, %dec_label_pc_1b0ac ]
  %v1_1b0e3 = call i32 @unknown_32faa(i32 %storemerge117)
  %v3_1b0f9 = call i32 @unknown_2f1bc(i32 %arg4, i32 %v1_1b0e3, i32 %stack_var_-32.0116)
  %v4_1b0fe = add i32 %stack_var_-32.0116, 1
  %v4_1b102 = add i32 %storemerge117, 1
  %v15_1b109 = icmp eq i32 %v4_1b0fe, %arg2
  %v1_1b10c = icmp eq i1 %v15_1b109, false
  %v5_1b10f = icmp eq i1 %v1_1b10c, false
  %v1_1b111 = icmp eq i1 %v5_1b10f, false
  store i32 %v4_1b102, i32* @eax, align 4
  br i1 %v1_1b111, label %dec_label_pc_1b0dd, label %dec_label_pc_1b113

dec_label_pc_1b113:                               ; preds = %dec_label_pc_1b0dd, %dec_label_pc_1b0ac
  %storemerge.lcssa = phi i32 [ %arg3, %dec_label_pc_1b0ac ], [ %v4_1b102, %dec_label_pc_1b0dd ]
  br i1 true, label %bb, label %dec_label_pc_1b122

bb:                                               ; preds = %dec_label_pc_1b113
  %v1_1b120 = call i32 @function_1b127()
  br label %dec_label_pc_1b122

dec_label_pc_1b122:                               ; preds = %bb, %dec_label_pc_1b113
  %v2_1b120 = phi i32 [ %v1_1b120, %bb ], [ %storemerge.lcssa, %dec_label_pc_1b113 ]
  ret i32 %v2_1b120

; uselistorder directives
  uselistorder i32 %v4_1b102, { 0, 2, 1 }
  uselistorder i32 %v4_1b0fe, { 1, 0 }
  uselistorder i32 %stack_var_-32.0116, { 1, 0 }
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b0dd, { 1, 0 }
}

define i32 @function_1b127() local_unnamed_addr {
dec_label_pc_1b127:
  %v0_1b128 = load i32, i32* @eax, align 4
  ret i32 %v0_1b128
}

define i32 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b129:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_1b147 = ptrtoint i32* %stack_var_-37 to i32
  %v2_1b14a = ptrtoint i32* %stack_var_-32 to i32
  %v2_1b154 = call i32 @unknown_38808(i32 %v2_1b147, i32 %v2_1b14a)
  %v3_1b15c = load i32, i32* %stack_var_-32, align 4
  %v0_1b15f = load i32, i32* %ebx.global-to-local, align 4
  %v3_1b16d = call i32 @unknown_3883d(i32 %v3_1b15c, i32 %arg2, i32 %v0_1b15f)
  store i32 %v3_1b16d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b17e

bb:                                               ; preds = %dec_label_pc_1b129
  %v1_1b17c = call i32 @function_1b183()
  br label %dec_label_pc_1b17e

dec_label_pc_1b17e:                               ; preds = %bb, %dec_label_pc_1b129
  %v2_1b17c = phi i32 [ %v1_1b17c, %bb ], [ %v3_1b16d, %dec_label_pc_1b129 ]
  ret i32 %v2_1b17c
}

define i32 @function_1b183() local_unnamed_addr {
dec_label_pc_1b183:
  %v0_1b187 = load i32, i32* @eax, align 4
  ret i32 %v0_1b187
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b188:
  %v1_1b1b1 = call i32 @unknown_3310c(i32 %arg1)
  %v10_1b1b6 = icmp ult i32 %v1_1b1b1, %arg2
  %v1_1b1b9 = zext i1 %v10_1b1b6 to i32
  %v3_1b1b9 = and i32 %v1_1b1b1, -256
  %v4_1b1b9 = or i32 %v1_1b1b9, %v3_1b1b9
  %v5_1b1bc = icmp eq i1 %v10_1b1b6, false
  br i1 %v5_1b1bc, label %bb, label %dec_label_pc_1b1c0

bb:                                               ; preds = %dec_label_pc_1b188
  %v1_1b1be = call i32 @function_1b1c5()
  br label %dec_label_pc_1b1c0

dec_label_pc_1b1c0:                               ; preds = %bb, %dec_label_pc_1b188
  %v2_1b1be = phi i32 [ %v1_1b1be, %bb ], [ %v4_1b1b9, %dec_label_pc_1b188 ]
  ret i32 %v2_1b1be

; uselistorder directives
  uselistorder i1 %v10_1b1b6, { 1, 0 }
}

define i32 @function_1b1c5() local_unnamed_addr {
dec_label_pc_1b1c5:
  %v0_1b1c5 = load i32, i32* @ebp, align 4
  %v1_1b1c5 = add i32 %v0_1b1c5, -32
  %v2_1b1c5 = inttoptr i32 %v1_1b1c5 to i32*
  %v3_1b1c5 = load i32, i32* %v2_1b1c5, align 4
  ret i32 %v3_1b1c5
}

define i32 @function_1b1e0() local_unnamed_addr {
dec_label_pc_1b1e0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b1e0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b1e0 = add i32 %v0_1b1e0, -1
  store i32 %v1_1b1e0, i32* %ecx.global-to-local, align 4
  %v0_1b1e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b1e2
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b1e4:
  ret i32 %arg2
}

define i32 @function_1b222() local_unnamed_addr {
dec_label_pc_1b222:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b222 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b222 = add i32 %v0_1b222, -1
  store i32 %v1_1b222, i32* %ecx.global-to-local, align 4
  %v0_1b224 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b224
}

define i32 @_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b225:
  %v1_1b242 = call i32 @unknown_389b1(i32 %arg1)
  store i32 %v1_1b242, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b253

bb:                                               ; preds = %dec_label_pc_1b225
  %v1_1b251 = call i32 @function_1b258()
  br label %dec_label_pc_1b253

dec_label_pc_1b253:                               ; preds = %bb, %dec_label_pc_1b225
  %v2_1b251 = phi i32 [ %v1_1b251, %bb ], [ %v1_1b242, %dec_label_pc_1b225 ]
  ret i32 %v2_1b251
}

define i32 @function_1b258() local_unnamed_addr {
dec_label_pc_1b258:
  %v0_1b259 = load i32, i32* @eax, align 4
  ret i32 %v0_1b259
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPcS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b25a:
  %v1_1b285 = call i32 @unknown_3656c(i32 %arg3)
  %v1_1b292 = call i32 @unknown_3656c(i32 %arg2)
  %v1_1b29f = call i32 @unknown_3656c(i32 %arg1)
  %v3_1b2af = call i32 @unknown_38a13(i32 %v1_1b29f, i32 %v1_1b292, i32 %v1_1b285)
  store i32 %v3_1b2af, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b2c0

bb:                                               ; preds = %dec_label_pc_1b25a
  %v1_1b2be = call i32 @function_1b2c5()
  br label %dec_label_pc_1b2c0

dec_label_pc_1b2c0:                               ; preds = %bb, %dec_label_pc_1b25a
  %v2_1b2be = phi i32 [ %v1_1b2be, %bb ], [ %v3_1b2af, %dec_label_pc_1b25a ]
  ret i32 %v2_1b2be

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3656c, { 2, 1, 0 }
}

define i32 @function_1b2c5() local_unnamed_addr {
dec_label_pc_1b2c5:
  %v0_1b2cb = load i32, i32* @eax, align 4
  ret i32 %v0_1b2cb
}

define i32 @_ZSt3maxIjERKT_S2_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b2cc:
  %v0_1b2de = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1b2de
}

define i32 @function_1b2e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b2e6:
  ret i32 0
}

define i32 @function_1b2ea(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b2ea:
  %v0_1b2ea = load i32, i32* @ebp, align 4
  %v1_1b2ea = add i32 %v0_1b2ea, 1
  store i32 %v1_1b2ea, i32* @ebp, align 4
  %v0_1b2ed = load i32, i32* @ebx, align 4
  %v1_1b2ed = add i32 %v0_1b2ed, 9166917
  %v2_1b2ed = inttoptr i32 %v1_1b2ed to i8*
  %v3_1b2ed = load i8, i8* %v2_1b2ed, align 1
  %v4_1b2ed = load i32, i32* @ecx, align 4
  %v5_1b2ed = trunc i32 %v4_1b2ed to i8
  %v6_1b2ed = load i1, i1* @cf, align 1
  %v7_1b2ed = zext i1 %v6_1b2ed to i8
  %v8_1b2ed = add i8 %v5_1b2ed, %v3_1b2ed
  %v9_1b2ed = add i8 %v8_1b2ed, %v7_1b2ed
  store i8 %v9_1b2ed, i8* %v2_1b2ed, align 1
  %v0_1b2f3 = load i32, i32* @edx, align 8
  %v1_1b2f3 = load i32, i32* @eax, align 4
  %v7_1b2f3 = icmp ult i32 %v0_1b2f3, %v1_1b2f3
  %v1_1b2f5 = icmp eq i1 %v7_1b2f3, false
  %v0_1b2fc = load i32, i32* @ebp, align 4
  %storemerge.in.in.v = select i1 %v1_1b2f5, i32 -28, i32 -32
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v0_1b2fc
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @eax, align 4
  %v1_1b2ff = add i32 %v0_1b2fc, -12
  %v2_1b2ff = inttoptr i32 %v1_1b2ff to i32*
  %v3_1b2ff = load i32, i32* %v2_1b2ff, align 4
  %v1_1b302 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1b302 = icmp eq i32 %v1_1b302, %v3_1b2ff
  br i1 %v3_1b302, label %bb, label %dec_label_pc_1b30b

bb:                                               ; preds = %dec_label_pc_1b2ea
  %v1_1b309 = call i32 @function_1b310()
  br label %dec_label_pc_1b30b

dec_label_pc_1b30b:                               ; preds = %bb, %dec_label_pc_1b2ea
  %v2_1b309 = phi i32 [ %v1_1b309, %bb ], [ %storemerge, %dec_label_pc_1b2ea ]
  ret i32 %v2_1b309

; uselistorder directives
  uselistorder i32 %v0_1b2fc, { 1, 0 }
}

define i32 @function_1b310() local_unnamed_addr {
dec_label_pc_1b310:
  %v0_1b311 = load i32, i32* @eax, align 4
  ret i32 %v0_1b311
}

define i32 @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b312:
  %v1_1b32f = call i32 @unknown_38a9e(i32 %arg1)
  store i32 %v1_1b32f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b340

bb:                                               ; preds = %dec_label_pc_1b312
  %v1_1b33e = call i32 @function_1b345()
  br label %dec_label_pc_1b340

dec_label_pc_1b340:                               ; preds = %bb, %dec_label_pc_1b312
  %v2_1b33e = phi i32 [ %v1_1b33e, %bb ], [ %v1_1b32f, %dec_label_pc_1b312 ]
  ret i32 %v2_1b33e
}

define i32 @function_1b345() local_unnamed_addr {
dec_label_pc_1b345:
  %v0_1b346 = load i32, i32* @eax, align 4
  ret i32 %v0_1b346
}

define i32 @_ZSt4copyIPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b347:
  %v1_1b377 = call i32 @unknown_38b53(i32 %arg3)
  %v1_1b384 = call i32 @unknown_38b53(i32 %arg2)
  %v4_1b3a0 = call i32 @unknown_38b88(i32 %arg1, i32 %v1_1b384, i32 %v1_1b377, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b3b7

bb:                                               ; preds = %dec_label_pc_1b347
  %v1_1b3b5 = call i32 @function_1b3bc()
  br label %dec_label_pc_1b3b7

dec_label_pc_1b3b7:                               ; preds = %bb, %dec_label_pc_1b347
  %v2_1b3b5 = phi i32 [ %v1_1b3b5, %bb ], [ %arg1, %dec_label_pc_1b347 ]
  ret i32 %v2_1b3b5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_38b53, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b3bc() local_unnamed_addr {
dec_label_pc_1b3bc:
  %v4_1b3bf = load i32, i32* @eax, align 4
  ret i32 %v4_1b3bf
}

define i32 @function_1b3c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b3c0:
  %v0_1b3c0 = load i32, i32* @eax, align 4
  ret i32 %v0_1b3c0
}

define i32 @_ZSt7advanceIPKcjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b3c3:
  %stack_var_-37 = alloca i32, align 4
  %v2_1b3e7 = ptrtoint i32* %stack_var_-37 to i32
  %v2_1b3f4 = call i32 @unknown_38a2a(i32 %v2_1b3e7, i32 %arg1)
  ret i32 %v2_1b3f4
}

define i32 @function_1b3fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b3fc:
  %v0_1b3fc = load i32, i32* @ebx, align 4
  %v0_1b400 = load i32, i32* @ebp, align 4
  %v1_1b400 = add i32 %v0_1b400, -16
  %v2_1b400 = inttoptr i32 %v1_1b400 to i32*
  %v3_1b400 = load i32, i32* %v2_1b400, align 4
  %v1_1b407 = add i32 %v0_1b400, -28
  %v2_1b407 = inttoptr i32 %v1_1b407 to i32*
  %v3_1b407 = load i32, i32* %v2_1b407, align 4
  %sext = mul i32 %v0_1b3fc, 16777216
  %v3_1b40d = sdiv i32 %sext, 16777216
  %v4_1b40d = call i32 @unknown_38c96(i32 %v3_1b407, i32 %v3_1b400, i32 %v3_1b40d)
  %v0_1b412 = load i32, i32* @ebp, align 4
  %v1_1b412 = add i32 %v0_1b412, -12
  %v2_1b412 = inttoptr i32 %v1_1b412 to i32*
  %v3_1b412 = load i32, i32* %v2_1b412, align 4
  %v1_1b415 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b415 = xor i32 %v1_1b415, %v3_1b412
  %v3_1b415 = icmp eq i32 %v2_1b415, 0
  store i32 %v2_1b415, i32* @eax, align 4
  br i1 %v3_1b415, label %bb, label %dec_label_pc_1b41e

bb:                                               ; preds = %dec_label_pc_1b3fc
  %v1_1b41c = call i32 @function_1b423()
  br label %dec_label_pc_1b41e

dec_label_pc_1b41e:                               ; preds = %bb, %dec_label_pc_1b3fc
  %v3_1b41c = phi i32 [ %v1_1b41c, %bb ], [ %v2_1b415, %dec_label_pc_1b3fc ]
  ret i32 %v3_1b41c
}

define i32 @function_1b423() local_unnamed_addr {
dec_label_pc_1b423:
  %v0_1b427 = load i32, i32* @eax, align 4
  ret i32 %v0_1b427
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b428:
  %v1_1b445 = call i32 @unknown_38d41(i32 %arg1)
  store i32 %v1_1b445, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b456

bb:                                               ; preds = %dec_label_pc_1b428
  %v1_1b454 = call i32 @function_1b45b()
  br label %dec_label_pc_1b456

dec_label_pc_1b456:                               ; preds = %bb, %dec_label_pc_1b428
  %v2_1b454 = phi i32 [ %v1_1b454, %bb ], [ %v1_1b445, %dec_label_pc_1b428 ]
  ret i32 %v2_1b454
}

define i32 @function_1b45b() local_unnamed_addr {
dec_label_pc_1b45b:
  %v0_1b45c = load i32, i32* @eax, align 4
  ret i32 %v0_1b45c
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b45d:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b486

bb:                                               ; preds = %dec_label_pc_1b45d
  %v3_1b484 = call i32 @function_1b48b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1b486

dec_label_pc_1b486:                               ; preds = %bb, %dec_label_pc_1b45d
  %v4_1b484 = phi i32 [ %v3_1b484, %bb ], [ 0, %dec_label_pc_1b45d ]
  ret i32 %v4_1b484
}

define i32 @function_1b48b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b48b:
  %v0_1b48c = load i32, i32* @eax, align 4
  ret i32 %v0_1b48c
}

define i32 @_ZNSaIhEC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b48e:
  ret i32 %arg2
}

define i32 @function_1b49e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b49e:
  %v0_1b49e = load i32, i32* @ebp, align 4
  %v1_1b49e = add i32 %v0_1b49e, 1
  store i32 %v1_1b49e, i32* @ebp, align 4
  %v0_1b4a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b4a6 = add i32 %v0_1b49e, -11
  %v3_1b4a6 = inttoptr i32 %v2_1b4a6 to i32*
  store i32 %v0_1b4a1, i32* %v3_1b4a6, align 4
  %v0_1b4ab = load i32, i32* @ebp, align 4
  %v1_1b4ab = add i32 %v0_1b4ab, -32
  %v2_1b4ab = inttoptr i32 %v1_1b4ab to i32*
  %v3_1b4ab = load i32, i32* %v2_1b4ab, align 4
  %v1_1b4b2 = add i32 %v0_1b4ab, -28
  %v2_1b4b2 = inttoptr i32 %v1_1b4b2 to i32*
  %v3_1b4b2 = load i32, i32* %v2_1b4b2, align 4
  %v2_1b4b8 = call i32 @unknown_38e48(i32 %v3_1b4b2, i32 %v3_1b4ab)
  %v0_1b4bd = load i32, i32* @ebp, align 4
  %v1_1b4bd = add i32 %v0_1b4bd, -12
  %v2_1b4bd = inttoptr i32 %v1_1b4bd to i32*
  %v3_1b4bd = load i32, i32* %v2_1b4bd, align 4
  %v1_1b4c0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b4c0 = xor i32 %v1_1b4c0, %v3_1b4bd
  %v3_1b4c0 = icmp eq i32 %v2_1b4c0, 0
  store i32 %v2_1b4c0, i32* @eax, align 4
  br i1 %v3_1b4c0, label %bb, label %dec_label_pc_1b4c9

bb:                                               ; preds = %dec_label_pc_1b49e
  %v1_1b4c7 = call i32 @function_1b4ce()
  br label %dec_label_pc_1b4c9

dec_label_pc_1b4c9:                               ; preds = %bb, %dec_label_pc_1b49e
  %v3_1b4c7 = phi i32 [ %v1_1b4c7, %bb ], [ %v2_1b4c0, %dec_label_pc_1b49e ]
  ret i32 %v3_1b4c7
}

define i32 @function_1b4ce() local_unnamed_addr {
dec_label_pc_1b4ce:
  %v0_1b4cf = load i32, i32* @eax, align 4
  ret i32 %v0_1b4cf
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b4d0:
  %v1_1b4f9 = call i32 @unknown_38eba(i32 %arg1)
  %v10_1b4fe = icmp ult i32 %v1_1b4f9, %arg2
  %v1_1b501 = zext i1 %v10_1b4fe to i32
  %v3_1b501 = and i32 %v1_1b4f9, -256
  %v4_1b501 = or i32 %v1_1b501, %v3_1b501
  ret i32 %v4_1b501
}

define i32 @function_1b512(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b512:
  %v0_1b512 = load i32, i32* @eax, align 4
  %v11_1b512 = and i32 %v0_1b512, -24
  ret i32 %v11_1b512
}

define i32 @function_1b528() local_unnamed_addr {
dec_label_pc_1b528:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b528 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b528 = add i32 %v0_1b528, -1
  store i32 %v1_1b528, i32* %ecx.global-to-local, align 4
  %v0_1b52a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b52a
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb0EE7_S_baseES7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b52b:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b55f

bb:                                               ; preds = %dec_label_pc_1b52b
  %v3_1b55d = call i32 @function_1b564(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1b55f

dec_label_pc_1b55f:                               ; preds = %bb, %dec_label_pc_1b52b
  %v4_1b55d = phi i32 [ %v3_1b55d, %bb ], [ %tmp102, %dec_label_pc_1b52b ]
  ret i32 %v4_1b55d
}

define i32 @function_1b564(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b564:
  %v0_1b565 = load i32, i32* @eax, align 4
  ret i32 %v0_1b565
}

define i32 @_ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b568:
  ret i32 %arg2
}

define i32 @function_1b578(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b578:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1b578 = load i32, i32* @ebp, align 4
  %v0_1b579 = load i32, i32* @ecx, align 4
  %v1_1b579 = add i32 %v0_1b579, 255
  %v1_1b57b = add i32 %v0_1b578, 2
  store i32 %v1_1b57b, i32* @ebp, align 4
  %v1_1b57c = add i32 %v0_1b579, -1587159996
  %v2_1b57c = inttoptr i32 %v1_1b57c to i8*
  %v3_1b57c = load i8, i8* %v2_1b57c, align 1
  %v5_1b57c = trunc i32 %v1_1b579 to i8
  %v6_1b57c = load i1, i1* @cf, align 1
  %v7_1b57c = zext i1 %v6_1b57c to i8
  %v8_1b57c = add i8 %v3_1b57c, %v5_1b57c
  %v9_1b57c = add i8 %v7_1b57c, %v8_1b57c
  %v27_1b57c = icmp ule i8 %v9_1b57c, %v3_1b57c
  %v28_1b57c = icmp ult i8 %v8_1b57c, %v3_1b57c
  %v29_1b57c = select i1 %v6_1b57c, i1 %v27_1b57c, i1 %v28_1b57c
  store i1 %v29_1b57c, i1* %cf.global-to-local, align 1
  store i8 %v9_1b57c, i8* %v2_1b57c, align 1
  %v0_1b582 = load i32, i32* @eax, align 4
  %v1_1b582 = trunc i32 %v0_1b582 to i8
  %v2_1b582 = load i1, i1* %cf.global-to-local, align 1
  %v3_1b582 = zext i1 %v2_1b582 to i8
  %v4_1b582 = add i8 %v3_1b582, %v1_1b582
  %v19_1b582 = icmp ule i8 %v4_1b582, %v1_1b582
  %v21_1b582 = icmp eq i1 %v2_1b582, %v19_1b582
  store i1 %v21_1b582, i1* %cf.global-to-local, align 1
  %v22_1b582 = zext i8 %v4_1b582 to i32
  %v24_1b582 = and i32 %v0_1b582, -256
  %v25_1b582 = or i32 %v22_1b582, %v24_1b582
  store i32 %v25_1b582, i32* %eax.global-to-local, align 4
  %v1_1b584 = inttoptr i32 %v25_1b582 to i8*
  %v2_1b584 = load i8, i8* %v1_1b584, align 1
  %v5_1b584 = add i8 %v2_1b584, %v4_1b582
  store i8 %v5_1b584, i8* %v1_1b584, align 1
  %v0_1b586 = load i32, i32* %eax.global-to-local, align 4
  %v1_1b586 = load i32, i32* @ebp, align 4
  %v2_1b586 = add i32 %v1_1b586, -12
  %v3_1b586 = inttoptr i32 %v2_1b586 to i32*
  store i32 %v0_1b586, i32* %v3_1b586, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1b58b = load i32, i32* @ebp, align 4
  %v1_1b58b = add i32 %v0_1b58b, -13
  %v2_1b58b = inttoptr i32 %v1_1b58b to i8*
  store i8 1, i8* %v2_1b58b, align 1
  %v0_1b58f = load i32, i32* @ebp, align 4
  %v1_1b58f = add i32 %v0_1b58f, -36
  %v2_1b58f = inttoptr i32 %v1_1b58f to i32*
  %v3_1b58f = load i32, i32* %v2_1b58f, align 4
  store i32 %v3_1b58f, i32* %eax.global-to-local, align 4
  %v1_1b596 = add i32 %v0_1b58f, -32
  %v2_1b596 = inttoptr i32 %v1_1b596 to i32*
  %v3_1b596 = load i32, i32* %v2_1b596, align 4
  store i32 %v3_1b596, i32* %eax.global-to-local, align 4
  %v1_1b59d = add i32 %v0_1b58f, -28
  %v2_1b59d = inttoptr i32 %v1_1b59d to i32*
  %v3_1b59d = load i32, i32* %v2_1b59d, align 4
  store i32 %v3_1b59d, i32* %eax.global-to-local, align 4
  %v3_1b5a3 = call i32 @unknown_38f81(i32 %v3_1b59d, i32 %v3_1b596, i32 %v3_1b58f)
  store i32 %v3_1b5a3, i32* @eax, align 4
  %v0_1b5a8 = load i32, i32* @ebp, align 4
  %v1_1b5a8 = add i32 %v0_1b5a8, -12
  %v2_1b5a8 = inttoptr i32 %v1_1b5a8 to i32*
  %v3_1b5a8 = load i32, i32* %v2_1b5a8, align 4
  %v1_1b5ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1b5ab = icmp eq i32 %v1_1b5ab, %v3_1b5a8
  br i1 %v3_1b5ab, label %bb, label %dec_label_pc_1b5b4

bb:                                               ; preds = %dec_label_pc_1b578
  %v1_1b5b2 = call i32 @function_1b5b9()
  store i32 %v1_1b5b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b5b4

dec_label_pc_1b5b4:                               ; preds = %bb, %dec_label_pc_1b578
  %v4_1b5b2 = phi i32 [ %v1_1b5b2, %bb ], [ %v3_1b5a3, %dec_label_pc_1b578 ]
  ret i32 %v4_1b5b2

; uselistorder directives
  uselistorder i8 %v4_1b582, { 0, 2, 1 }
  uselistorder i8 %v1_1b582, { 1, 0 }
  uselistorder i8 %v9_1b57c, { 1, 0 }
  uselistorder i8 %v8_1b57c, { 1, 0 }
  uselistorder i8 %v3_1b57c, { 1, 2, 0 }
}

define i32 @function_1b5b9() local_unnamed_addr {
dec_label_pc_1b5b9:
  %v0_1b5ba = load i32, i32* @eax, align 4
  ret i32 %v0_1b5ba
}

define i32 @_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5bb:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b5e1

bb:                                               ; preds = %dec_label_pc_1b5bb
  %v2_1b5df = call i32 @function_1b5e6(i32 %arg1)
  br label %dec_label_pc_1b5e1

dec_label_pc_1b5e1:                               ; preds = %bb, %dec_label_pc_1b5bb
  %v3_1b5df = phi i32 [ %v2_1b5df, %bb ], [ %arg1, %dec_label_pc_1b5bb ]
  ret i32 %v3_1b5df
}

define i32 @function_1b5e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5e6:
  %v0_1b5e7 = load i32, i32* @eax, align 4
  ret i32 %v0_1b5e7
}

define i32 @_ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5e8:
  %v1_1b605 = call i32 @unknown_36ba3(i32 %arg1)
  store i32 %v1_1b605, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b616

bb:                                               ; preds = %dec_label_pc_1b5e8
  %v1_1b614 = call i32 @function_1b61b()
  br label %dec_label_pc_1b616

dec_label_pc_1b616:                               ; preds = %bb, %dec_label_pc_1b5e8
  %v2_1b614 = phi i32 [ %v1_1b614, %bb ], [ %v1_1b605, %dec_label_pc_1b5e8 ]
  ret i32 %v2_1b614
}

define i32 @function_1b61b() local_unnamed_addr {
dec_label_pc_1b61b:
  %v0_1b61c = load i32, i32* @eax, align 4
  ret i32 %v0_1b61c
}

define i32 @_ZNK5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b61e:
  %v1_1b63b = call i32 @unknown_36c72(i32 %arg1)
  store i32 %v1_1b63b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b64c

bb:                                               ; preds = %dec_label_pc_1b61e
  %v1_1b64a = call i32 @function_1b651()
  br label %dec_label_pc_1b64c

dec_label_pc_1b64c:                               ; preds = %bb, %dec_label_pc_1b61e
  %v2_1b64a = phi i32 [ %v1_1b64a, %bb ], [ %v1_1b63b, %dec_label_pc_1b61e ]
  ret i32 %v2_1b64a
}

define i32 @function_1b651() local_unnamed_addr {
dec_label_pc_1b651:
  %v0_1b652 = load i32, i32* @eax, align 4
  ret i32 %v0_1b652
}

define i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b654:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b67a

bb:                                               ; preds = %dec_label_pc_1b654
  %v2_1b678 = call i32 @function_1b67f(i32 %arg1)
  br label %dec_label_pc_1b67a

dec_label_pc_1b67a:                               ; preds = %bb, %dec_label_pc_1b654
  %v3_1b678 = phi i32 [ %v2_1b678, %bb ], [ %arg1, %dec_label_pc_1b654 ]
  ret i32 %v3_1b678
}

define i32 @function_1b67f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b67f:
  %v0_1b680 = load i32, i32* @eax, align 4
  ret i32 %v0_1b680
}

define i32 @_ZN5boost6detail7variant14assign_storageD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b682:
  %v1_1b69f = call i32 @unknown_2c544(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b6b0

bb:                                               ; preds = %dec_label_pc_1b682
  %v1_1b6ae = call i32 @function_1b6b5()
  br label %dec_label_pc_1b6b0

dec_label_pc_1b6b0:                               ; preds = %bb, %dec_label_pc_1b682
  %v2_1b6ae = phi i32 [ %v1_1b6ae, %bb ], [ 0, %dec_label_pc_1b682 ]
  ret i32 %v2_1b6ae
}

define i32 @function_1b6b5() local_unnamed_addr {
dec_label_pc_1b6b5:
  %v0_1b6b6 = load i32, i32* @eax, align 4
  ret i32 %v0_1b6b6
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE8try_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b6b8:
  store i32 %arg1, i32* @eax, align 4
  %v1_1b6d5 = call i32 @function_29572(i32 %arg1)
  store i32 %v1_1b6d5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b6e6

bb:                                               ; preds = %dec_label_pc_1b6b8
  %v1_1b6e4 = call i32 @function_1b6eb()
  br label %dec_label_pc_1b6e6

dec_label_pc_1b6e6:                               ; preds = %bb, %dec_label_pc_1b6b8
  %v2_1b6e4 = phi i32 [ %v1_1b6e4, %bb ], [ %v1_1b6d5, %dec_label_pc_1b6b8 ]
  ret i32 %v2_1b6e4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b6eb() local_unnamed_addr {
dec_label_pc_1b6eb:
  %v0_1b6ec = load i32, i32* @eax, align 4
  ret i32 %v0_1b6ec
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b6ee:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1b711 = call i32 @_Z9SerializeI11CDataStream6CTxOutEvRT_RKT0_li(i32 %tmp102)
  store i32 ptrtoint (%vtable_2b270_type* @global_var_2b270.1841 to i32), i32* %arg1, align 4
  %v2_1b725 = add i32 %tmp102, 12
  %v3_1b725 = inttoptr i32 %v2_1b725 to i32*
  store i32 %arg2, i32* %v3_1b725, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b734

bb:                                               ; preds = %dec_label_pc_1b6ee
  %v1_1b732 = call i32 @function_1b739()
  br label %dec_label_pc_1b734

dec_label_pc_1b734:                               ; preds = %bb, %dec_label_pc_1b6ee
  %v2_1b732 = phi i32 [ %v1_1b732, %bb ], [ 0, %dec_label_pc_1b6ee ]
  ret i32 %v2_1b732

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_1b739() local_unnamed_addr {
dec_label_pc_1b739:
  %v0_1b73a = load i32, i32* @eax, align 4
  ret i32 %v0_1b73a
}

define i32 @_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b73b:
  %v10_1b752 = icmp eq i32* %arg1, null
  br i1 %v10_1b752, label %dec_label_pc_1b76a, label %dec_label_pc_1b758

dec_label_pc_1b758:                               ; preds = %dec_label_pc_1b73b
  br label %dec_label_pc_1b76a

dec_label_pc_1b76a:                               ; preds = %dec_label_pc_1b758, %dec_label_pc_1b73b
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b776

bb:                                               ; preds = %dec_label_pc_1b76a
  %v1_1b774 = call i32 @function_1b77b()
  br label %dec_label_pc_1b776

dec_label_pc_1b776:                               ; preds = %bb, %dec_label_pc_1b76a
  %v2_1b774 = phi i32 [ %v1_1b774, %bb ], [ 0, %dec_label_pc_1b76a ]
  ret i32 %v2_1b774
}

define i32 @function_1b77b() local_unnamed_addr {
dec_label_pc_1b77b:
  %v0_1b77c = load i32, i32* @eax, align 4
  ret i32 %v0_1b77c
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b77d:
  %v3_1b7b4 = call i32 @unknown_36fa8(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1b7b4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b7c5

bb:                                               ; preds = %dec_label_pc_1b77d
  %v1_1b7c3 = call i32 @function_1b7ca()
  br label %dec_label_pc_1b7c5

dec_label_pc_1b7c5:                               ; preds = %bb, %dec_label_pc_1b77d
  %v2_1b7c3 = phi i32 [ %v1_1b7c3, %bb ], [ %v3_1b7b4, %dec_label_pc_1b77d ]
  ret i32 %v2_1b7c3
}

define i32 @function_1b7ca() local_unnamed_addr {
dec_label_pc_1b7ca:
  %v0_1b7cb = load i32, i32* @eax, align 4
  ret i32 %v0_1b7cb
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b7cc:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_1b7ea = ptrtoint i32* %stack_var_-37 to i32
  %v2_1b7ed = ptrtoint i32* %stack_var_-32 to i32
  %v2_1b7f7 = call i32 @unknown_3924f(i32 %v2_1b7ea, i32 %v2_1b7ed)
  %v0_1b7ff = load i32, i32* %ebx.global-to-local, align 4
  %v3_1b80a = load i32, i32* %stack_var_-32, align 4
  %v3_1b810 = call i32 @unknown_39284(i32 %v3_1b80a, i32 %arg2, i32 %v0_1b7ff)
  store i32 %v3_1b810, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b821

bb:                                               ; preds = %dec_label_pc_1b7cc
  %v1_1b81f = call i32 @function_1b826()
  br label %dec_label_pc_1b821

dec_label_pc_1b821:                               ; preds = %bb, %dec_label_pc_1b7cc
  %v2_1b81f = phi i32 [ %v1_1b81f, %bb ], [ %v3_1b810, %dec_label_pc_1b7cc ]
  ret i32 %v2_1b81f
}

define i32 @function_1b826() local_unnamed_addr {
dec_label_pc_1b826:
  %v0_1b82a = load i32, i32* @eax, align 4
  ret i32 %v0_1b82a
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b82b:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_1b84e = ptrtoint i32* %stack_var_-20 to i32
  %v2_1b85b = call i32 @unknown_33fb6(i32 %v2_1b84e, i32 %arg2)
  %v2_1b863 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1b870 = call i32 @unknown_33fb6(i32 %v2_1b863, i32 %arg1)
  %v3_1b87f = load i32, i32* %stack_var_-20, align 4
  %v3_1b886 = load i32, i32* %stack_var_-24, align 4
  %v3_1b88c = call i32 @unknown_3932c(i32 %v3_1b886, i32 %v3_1b87f, i32 %arg3)
  store i32 %v3_1b88c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b89d

bb:                                               ; preds = %dec_label_pc_1b82b
  %v1_1b89b = call i32 @function_1b8a2()
  br label %dec_label_pc_1b89d

dec_label_pc_1b89d:                               ; preds = %bb, %dec_label_pc_1b82b
  %v2_1b89b = phi i32 [ %v1_1b89b, %bb ], [ %v3_1b88c, %dec_label_pc_1b82b ]
  ret i32 %v2_1b89b

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_33fb6, { 1, 0 }
}

define i32 @function_1b8a2() local_unnamed_addr {
dec_label_pc_1b8a2:
  %v0_1b8a3 = load i32, i32* @eax, align 4
  ret i32 %v0_1b8a3
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b8a4:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_1b8bb = ptrtoint i32* %stack_var_-32 to i32
  %v1_1b8c1 = call i32 @unknown_305de(i32 %v2_1b8bb)
  %v1_1b8c6 = inttoptr i32 %v1_1b8c1 to i32*
  %v2_1b8c6 = load i32, i32* %v1_1b8c6, align 4
  store i32 %v2_1b8c6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b8d4

bb:                                               ; preds = %dec_label_pc_1b8a4
  %v1_1b8d2 = call i32 @function_1b8d9()
  br label %dec_label_pc_1b8d4

dec_label_pc_1b8d4:                               ; preds = %bb, %dec_label_pc_1b8a4
  %v2_1b8d2 = phi i32 [ %v1_1b8d2, %bb ], [ %v2_1b8c6, %dec_label_pc_1b8a4 ]
  ret i32 %v2_1b8d2
}

define i32 @function_1b8d9() local_unnamed_addr {
dec_label_pc_1b8d9:
  %v0_1b8da = load i32, i32* @eax, align 4
  ret i32 %v0_1b8da
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b8dc:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b8ff

bb:                                               ; preds = %dec_label_pc_1b8dc
  %v2_1b8fd = call i32 @function_1b904(i32 %arg1)
  br label %dec_label_pc_1b8ff

dec_label_pc_1b8ff:                               ; preds = %bb, %dec_label_pc_1b8dc
  %v3_1b8fd = phi i32 [ %v2_1b8fd, %bb ], [ 0, %dec_label_pc_1b8dc ]
  ret i32 %v3_1b8fd
}

define i32 @function_1b904(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b904:
  %v0_1b905 = load i32, i32* @eax, align 4
  ret i32 %v0_1b905
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b906:
  ret i32 %arg2
}

define i32 @function_1b944() local_unnamed_addr {
dec_label_pc_1b944:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b944 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b944 = add i32 %v0_1b944, -1
  store i32 %v1_1b944, i32* %ecx.global-to-local, align 4
  %v0_1b946 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b946
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP5CTxInEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b947:
  %v15_1b980105 = icmp eq i32 %arg1, %arg2
  %v1_1b983106 = icmp eq i1 %v15_1b980105, false
  %v5_1b986110 = icmp eq i1 %v1_1b983106, false
  %v1_1b988111 = icmp eq i1 %v5_1b986110, false
  br i1 %v1_1b988111, label %dec_label_pc_1b966, label %dec_label_pc_1b98a

dec_label_pc_1b966:                               ; preds = %dec_label_pc_1b947, %dec_label_pc_1b966
  %stack_var_-32.0112 = phi i32 [ %v4_1b979, %dec_label_pc_1b966 ], [ %arg1, %dec_label_pc_1b947 ]
  %v1_1b96c = call i32 @unknown_394ba(i32 %stack_var_-32.0112)
  %v1_1b974 = call i32 @unknown_3951f(i32 %v1_1b96c)
  %v4_1b979 = add i32 %stack_var_-32.0112, ptrtoint (i32* @global_var_34.1820 to i32)
  %v15_1b980 = icmp eq i32 %v4_1b979, %arg2
  %v1_1b983 = icmp eq i1 %v15_1b980, false
  %v5_1b986 = icmp eq i1 %v1_1b983, false
  %v1_1b988 = icmp eq i1 %v5_1b986, false
  br i1 %v1_1b988, label %dec_label_pc_1b966, label %dec_label_pc_1b98a

dec_label_pc_1b98a:                               ; preds = %dec_label_pc_1b966, %dec_label_pc_1b947
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b996

bb:                                               ; preds = %dec_label_pc_1b98a
  %v1_1b994 = call i32 @function_1b99b()
  br label %dec_label_pc_1b996

dec_label_pc_1b996:                               ; preds = %bb, %dec_label_pc_1b98a
  %v2_1b994 = phi i32 [ %v1_1b994, %bb ], [ 0, %dec_label_pc_1b98a ]
  ret i32 %v2_1b994

; uselistorder directives
  uselistorder i32 %v4_1b979, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b966, { 1, 0 }
}

define i32 @function_1b99b() local_unnamed_addr {
dec_label_pc_1b99b:
  %v0_1b99c = load i32, i32* @eax, align 4
  ret i32 %v0_1b99c
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b99e:
  ret i32 %arg2
}

define i32 @function_1b9dc() local_unnamed_addr {
dec_label_pc_1b9dc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b9dc = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b9dc = add i32 %v0_1b9dc, -1
  store i32 %v1_1b9dc, i32* %ecx.global-to-local, align 4
  %v0_1b9de = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b9de
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b9df:
  %v15_1ba18105 = icmp eq i32 %arg1, %arg2
  %v1_1ba1b106 = icmp eq i1 %v15_1ba18105, false
  %v5_1ba1e110 = icmp eq i1 %v1_1ba1b106, false
  %v1_1ba20111 = icmp eq i1 %v5_1ba1e110, false
  br i1 %v1_1ba20111, label %dec_label_pc_1b9fe, label %dec_label_pc_1ba22

dec_label_pc_1b9fe:                               ; preds = %dec_label_pc_1b9df, %dec_label_pc_1b9fe
  %stack_var_-32.0112 = phi i32 [ %v4_1ba11, %dec_label_pc_1b9fe ], [ %arg1, %dec_label_pc_1b9df ]
  %v1_1ba04 = call i32 @unknown_395ec(i32 %stack_var_-32.0112)
  %v1_1ba0c = call i32 @unknown_39619(i32 %v1_1ba04)
  %v4_1ba11 = add i32 %stack_var_-32.0112, 20
  %v15_1ba18 = icmp eq i32 %v4_1ba11, %arg2
  %v1_1ba1b = icmp eq i1 %v15_1ba18, false
  %v5_1ba1e = icmp eq i1 %v1_1ba1b, false
  %v1_1ba20 = icmp eq i1 %v5_1ba1e, false
  br i1 %v1_1ba20, label %dec_label_pc_1b9fe, label %dec_label_pc_1ba22

dec_label_pc_1ba22:                               ; preds = %dec_label_pc_1b9fe, %dec_label_pc_1b9df
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ba2e

bb:                                               ; preds = %dec_label_pc_1ba22
  %v1_1ba2c = call i32 @function_1ba33()
  br label %dec_label_pc_1ba2e

dec_label_pc_1ba2e:                               ; preds = %bb, %dec_label_pc_1ba22
  %v2_1ba2c = phi i32 [ %v1_1ba2c, %bb ], [ 0, %dec_label_pc_1ba22 ]
  ret i32 %v2_1ba2c

; uselistorder directives
  uselistorder i32 %v4_1ba11, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b9fe, { 1, 0 }
}

define i32 @function_1ba33() local_unnamed_addr {
dec_label_pc_1ba33:
  %v0_1ba34 = load i32, i32* @eax, align 4
  ret i32 %v0_1ba34
}

define i32 @_ZN9__gnu_cxxneIPK5CTxInSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ba35:
  %v1_1ba59 = call i32 @unknown_3492f(i32 %arg1)
  %v1_1ba5e = inttoptr i32 %v1_1ba59 to i32*
  %v2_1ba5e = load i32, i32* %v1_1ba5e, align 4
  %v1_1ba66 = call i32 @unknown_3492f(i32 %arg2)
  %v1_1ba6b = inttoptr i32 %v1_1ba66 to i32*
  %v2_1ba6b = load i32, i32* %v1_1ba6b, align 4
  %v12_1ba6d = icmp eq i32 %v2_1ba5e, %v2_1ba6b
  %v1_1ba6f = icmp eq i1 %v12_1ba6d, false
  %v2_1ba6f = zext i1 %v1_1ba6f to i32
  %v4_1ba6f = and i32 %v2_1ba6b, -256
  %v5_1ba6f = or i32 %v2_1ba6f, %v4_1ba6f
  store i32 %v5_1ba6f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ba7e

bb:                                               ; preds = %dec_label_pc_1ba35
  %v1_1ba7c = call i32 @function_1ba83()
  br label %dec_label_pc_1ba7e

dec_label_pc_1ba7e:                               ; preds = %bb, %dec_label_pc_1ba35
  %v2_1ba7c = phi i32 [ %v1_1ba7c, %bb ], [ %v5_1ba6f, %dec_label_pc_1ba35 ]
  ret i32 %v2_1ba7c

; uselistorder directives
  uselistorder i32 %v2_1ba6b, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3492f, { 1, 0 }
}

define i32 @function_1ba83() local_unnamed_addr {
dec_label_pc_1ba83:
  %v0_1ba88 = load i32, i32* @eax, align 4
  ret i32 %v0_1ba88
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ba8a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1baa4 = load i32, i32* %arg1, align 4
  %v1_1baa6 = add i32 %v2_1baa4, ptrtoint (i32* @global_var_34.1820 to i32)
  store i32 %v1_1baa6, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1babd

bb:                                               ; preds = %dec_label_pc_1ba8a
  %v2_1babb = call i32 @function_1bac2(i32 %tmp100)
  br label %dec_label_pc_1babd

dec_label_pc_1babd:                               ; preds = %bb, %dec_label_pc_1ba8a
  %v3_1babb = phi i32 [ %v2_1babb, %bb ], [ %tmp100, %dec_label_pc_1ba8a ]
  ret i32 %v3_1babb
}

define i32 @function_1bac2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bac2:
  %v0_1bac3 = load i32, i32* @eax, align 4
  ret i32 %v0_1bac3
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bac4:
  %v2_1bade = load i32, i32* %arg1, align 4
  store i32 %v2_1bade, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1baec

bb:                                               ; preds = %dec_label_pc_1bac4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1baea = call i32 @function_1baf1(i32 %tmp100)
  br label %dec_label_pc_1baec

dec_label_pc_1baec:                               ; preds = %bb, %dec_label_pc_1bac4
  %v3_1baea = phi i32 [ %v2_1baea, %bb ], [ %v2_1bade, %dec_label_pc_1bac4 ]
  ret i32 %v3_1baea

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1baf1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1baf1:
  %v0_1baf2 = load i32, i32* @eax, align 4
  ret i32 %v0_1baf2
}

define i32 @_Z16GetSerializeSizeI5CTxInEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1baf3:
  store i32 %arg1, i32* @eax, align 4
  %v3_1bb2a = call i32 @function_2a5af(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1bb2a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bb3b

bb:                                               ; preds = %dec_label_pc_1baf3
  %v1_1bb39 = call i32 @function_1bb40()
  br label %dec_label_pc_1bb3b

dec_label_pc_1bb3b:                               ; preds = %bb, %dec_label_pc_1baf3
  %v2_1bb39 = phi i32 [ %v1_1bb39, %bb ], [ %v3_1bb2a, %dec_label_pc_1baf3 ]
  ret i32 %v2_1bb39

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bb40() local_unnamed_addr {
dec_label_pc_1bb40:
  %v0_1bb41 = load i32, i32* @eax, align 4
  ret i32 %v0_1bb41
}

define i32 @_ZN9__gnu_cxxneIPK6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb42:
  %v1_1bb66 = call i32 @unknown_34aa4(i32 %arg1)
  %v1_1bb6b = inttoptr i32 %v1_1bb66 to i32*
  %v2_1bb6b = load i32, i32* %v1_1bb6b, align 4
  %v1_1bb73 = call i32 @unknown_34aa4(i32 %arg2)
  %v1_1bb78 = inttoptr i32 %v1_1bb73 to i32*
  %v2_1bb78 = load i32, i32* %v1_1bb78, align 4
  %v12_1bb7a = icmp eq i32 %v2_1bb6b, %v2_1bb78
  %v1_1bb7c = icmp eq i1 %v12_1bb7a, false
  %v2_1bb7c = zext i1 %v1_1bb7c to i32
  %v4_1bb7c = and i32 %v2_1bb78, -256
  %v5_1bb7c = or i32 %v2_1bb7c, %v4_1bb7c
  store i32 %v5_1bb7c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bb8b

bb:                                               ; preds = %dec_label_pc_1bb42
  %v1_1bb89 = call i32 @function_1bb90()
  br label %dec_label_pc_1bb8b

dec_label_pc_1bb8b:                               ; preds = %bb, %dec_label_pc_1bb42
  %v2_1bb89 = phi i32 [ %v1_1bb89, %bb ], [ %v5_1bb7c, %dec_label_pc_1bb42 ]
  ret i32 %v2_1bb89

; uselistorder directives
  uselistorder i32 %v2_1bb78, { 1, 0 }
  uselistorder i32 (i32)* @unknown_34aa4, { 1, 0 }
}

define i32 @function_1bb90() local_unnamed_addr {
dec_label_pc_1bb90:
  %v0_1bb95 = load i32, i32* @eax, align 4
  ret i32 %v0_1bb95
}

define i32 @_Z16GetSerializeSizeI6CTxOutEjRKT_li(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bb96:
  %v3_1bbcd = call i32 @function_2a792(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1bbcd, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bbde

bb:                                               ; preds = %dec_label_pc_1bb96
  %v1_1bbdc = call i32 @function_1bbe3()
  br label %dec_label_pc_1bbde

dec_label_pc_1bbde:                               ; preds = %bb, %dec_label_pc_1bb96
  %v2_1bbdc = phi i32 [ %v1_1bbdc, %bb ], [ %v3_1bbcd, %dec_label_pc_1bb96 ]
  ret i32 %v2_1bbdc
}

define i32 @function_1bbe3() local_unnamed_addr {
dec_label_pc_1bbe3:
  %v0_1bbe4 = load i32, i32* @eax, align 4
  ret i32 %v0_1bbe4
}

define i32 @_ZNSaI6CTxOutEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bbe6:
  %v2_1bc10 = call i32 @unknown_39856(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bc21

bb:                                               ; preds = %dec_label_pc_1bbe6
  %v1_1bc1f = call i32 @function_1bc26()
  br label %dec_label_pc_1bc21

dec_label_pc_1bc21:                               ; preds = %bb, %dec_label_pc_1bbe6
  %v2_1bc1f = phi i32 [ %v1_1bc1f, %bb ], [ 0, %dec_label_pc_1bbe6 ]
  ret i32 %v2_1bc1f
}

define i32 @function_1bc26() local_unnamed_addr {
dec_label_pc_1bc26:
  %v0_1bc27 = load i32, i32* @eax, align 4
  ret i32 %v0_1bc27
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bc28:
  %v1_1bc51 = call i32 @unknown_398c8(i32 %arg1)
  %v10_1bc56 = icmp ult i32 %v1_1bc51, %arg2
  %v1_1bc59 = zext i1 %v10_1bc56 to i32
  %v3_1bc59 = and i32 %v1_1bc51, -256
  %v4_1bc59 = or i32 %v1_1bc59, %v3_1bc59
  %v5_1bc5c = icmp eq i1 %v10_1bc56, false
  br i1 %v5_1bc5c, label %bb, label %dec_label_pc_1bc60

bb:                                               ; preds = %dec_label_pc_1bc28
  %v1_1bc5e = call i32 @function_1bc65()
  br label %dec_label_pc_1bc60

dec_label_pc_1bc60:                               ; preds = %bb, %dec_label_pc_1bc28
  %v2_1bc5e = phi i32 [ %v1_1bc5e, %bb ], [ %v4_1bc59, %dec_label_pc_1bc28 ]
  ret i32 %v2_1bc5e

; uselistorder directives
  uselistorder i1 %v10_1bc56, { 1, 0 }
}

define i32 @function_1bc65() local_unnamed_addr {
dec_label_pc_1bc65:
  %v0_1bc65 = load i32, i32* @ebp, align 4
  %v1_1bc65 = add i32 %v0_1bc65, -32
  %v2_1bc65 = inttoptr i32 %v1_1bc65 to i32*
  %v3_1bc65 = load i32, i32* %v2_1bc65, align 4
  %v2_1bc6f = mul i32 %v3_1bc65, 20
  ret i32 %v2_1bc6f
}

define i32 @function_1bc8a() local_unnamed_addr {
dec_label_pc_1bc8a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1bc8a = load i32, i32* %ecx.global-to-local, align 4
  %v1_1bc8a = add i32 %v0_1bc8a, -1
  store i32 %v1_1bc8a, i32* %ecx.global-to-local, align 4
  %v0_1bc8c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bc8c
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bc8d:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_1bcef = ptrtoint i32* %stack_var_-36 to i32
  %v2_1bcf3 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1bcf9110 = call i32 @unknown_377cf(i32 %v2_1bcf3, i32 %v4_1bcef)
  %v4_1bcfe111 = trunc i32 %v2_1bcf9110 to i8
  %v5_1bcfe112 = icmp eq i8 %v4_1bcfe111, 0
  %v1_1bd00113 = icmp eq i1 %v5_1bcfe112, false
  br i1 %v1_1bd00113, label %dec_label_pc_1bcb9, label %dec_label_pc_1bd02

dec_label_pc_1bcb9:                               ; preds = %dec_label_pc_1bc8d, %dec_label_pc_1bcb9
  %storemerge114 = phi i32 [ %v4_1bce8, %dec_label_pc_1bcb9 ], [ %arg3, %dec_label_pc_1bc8d ]
  %v1_1bcbf = call i32 @unknown_310bd(i32 %v2_1bcf3)
  %v1_1bccc = call i32 @unknown_3989a(i32 %storemerge114)
  %v2_1bcd8 = call i32 @unknown_3995c(i32 %v1_1bccc, i32 %v1_1bcbf)
  %v1_1bce3 = call i32 @unknown_31083(i32 %v2_1bcf3)
  %v4_1bce8 = add i32 %storemerge114, 20
  %v2_1bcf9 = call i32 @unknown_377cf(i32 %v2_1bcf3, i32 %v4_1bcef)
  %v4_1bcfe = trunc i32 %v2_1bcf9 to i8
  %v5_1bcfe = icmp eq i8 %v4_1bcfe, 0
  %v1_1bd00 = icmp eq i1 %v5_1bcfe, false
  br i1 %v1_1bd00, label %dec_label_pc_1bcb9, label %dec_label_pc_1bd02

dec_label_pc_1bd02:                               ; preds = %dec_label_pc_1bcb9, %dec_label_pc_1bc8d
  %storemerge.lcssa = phi i32 [ %arg3, %dec_label_pc_1bc8d ], [ %v4_1bce8, %dec_label_pc_1bcb9 ]
  store i32 %storemerge.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bd11

bb:                                               ; preds = %dec_label_pc_1bd02
  %v1_1bd0f = call i32 @function_1bd48()
  store i32 %v1_1bd0f, i32* @eax, align 4
  br label %dec_label_pc_1bd11

dec_label_pc_1bd11:                               ; preds = %bb, %dec_label_pc_1bd02
  %v0_1bd11 = call i32 @function_1bd43()
  ret i32 %v0_1bd11

; uselistorder directives
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %v2_1bcf3, { 3, 1, 2, 0 }
  uselistorder i32 %v4_1bcef, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_377cf, { 1, 0 }
  uselistorder label %dec_label_pc_1bcb9, { 1, 0 }
}

define i32 @function_1bd14() local_unnamed_addr {
dec_label_pc_1bd14:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bd14 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bd14
}

define i32 @function_1bd43() local_unnamed_addr {
dec_label_pc_1bd43:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1bd48() local_unnamed_addr {
dec_label_pc_1bd48:
  %v0_1bd4d = load i32, i32* @eax, align 4
  ret i32 %v0_1bd4d
}

define i32 @_ZSt20uninitialized_fill_nIP6CTxOutjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bd4e:
  %v3_1bd85 = call i32 @unknown_39a98(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bd96

bb:                                               ; preds = %dec_label_pc_1bd4e
  %v1_1bd94 = call i32 @function_1bd9b()
  br label %dec_label_pc_1bd96

dec_label_pc_1bd96:                               ; preds = %bb, %dec_label_pc_1bd4e
  %v2_1bd94 = phi i32 [ %v1_1bd94, %bb ], [ 0, %dec_label_pc_1bd4e ]
  ret i32 %v2_1bd94
}

define i32 @function_1bd9b() local_unnamed_addr {
dec_label_pc_1bd9b:
  %v0_1bd9c = load i32, i32* @eax, align 4
  ret i32 %v0_1bd9c
}

define i32 @_ZNSaI12CTransactionEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bd9e:
  %v1_1bdbb = call i32 @unknown_39b8a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bdcc

bb:                                               ; preds = %dec_label_pc_1bd9e
  %v1_1bdca = call i32 @function_1bdd1()
  br label %dec_label_pc_1bdcc

dec_label_pc_1bdcc:                               ; preds = %bb, %dec_label_pc_1bd9e
  %v2_1bdca = phi i32 [ %v1_1bdca, %bb ], [ 0, %dec_label_pc_1bd9e ]
  ret i32 %v2_1bdca
}

define i32 @function_1bdd1() local_unnamed_addr {
dec_label_pc_1bdd1:
  %v0_1bdd2 = load i32, i32* @eax, align 4
  ret i32 %v0_1bdd2
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bdd4:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bdf7

bb:                                               ; preds = %dec_label_pc_1bdd4
  %v2_1bdf5 = call i32 @function_1bdfc(i32 %arg1)
  br label %dec_label_pc_1bdf7

dec_label_pc_1bdf7:                               ; preds = %bb, %dec_label_pc_1bdd4
  %v3_1bdf5 = phi i32 [ %v2_1bdf5, %bb ], [ 0, %dec_label_pc_1bdd4 ]
  ret i32 %v3_1bdf5
}

define i32 @function_1bdfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bdfc:
  %v0_1bdfd = load i32, i32* @eax, align 4
  ret i32 %v0_1bdfd
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bdfe:
  ret i32 %arg2
}

define i32 @function_1be3c() local_unnamed_addr {
dec_label_pc_1be3c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1be3c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1be3c = add i32 %v0_1be3c, -1
  store i32 %v1_1be3c, i32* %ecx.global-to-local, align 4
  %v0_1be3e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1be3e
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP12CTransactionEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1be3f:
  %v15_1be78105 = icmp eq i32 %arg1, %arg2
  %v1_1be7b106 = icmp eq i1 %v15_1be78105, false
  %v5_1be7e110 = icmp eq i1 %v1_1be7b106, false
  %v1_1be80111 = icmp eq i1 %v5_1be7e110, false
  br i1 %v1_1be80111, label %dec_label_pc_1be5e, label %dec_label_pc_1be82

dec_label_pc_1be5e:                               ; preds = %dec_label_pc_1be3f, %dec_label_pc_1be5e
  %stack_var_-32.0112 = phi i32 [ %v4_1be71, %dec_label_pc_1be5e ], [ %arg1, %dec_label_pc_1be3f ]
  %v1_1be64 = call i32 @unknown_39c55(i32 %stack_var_-32.0112)
  %v1_1be6c = call i32 @unknown_39c82(i32 %v1_1be64)
  %v4_1be71 = add i32 %stack_var_-32.0112, 32
  %v15_1be78 = icmp eq i32 %v4_1be71, %arg2
  %v1_1be7b = icmp eq i1 %v15_1be78, false
  %v5_1be7e = icmp eq i1 %v1_1be7b, false
  %v1_1be80 = icmp eq i1 %v5_1be7e, false
  br i1 %v1_1be80, label %dec_label_pc_1be5e, label %dec_label_pc_1be82

dec_label_pc_1be82:                               ; preds = %dec_label_pc_1be5e, %dec_label_pc_1be3f
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1be8e

bb:                                               ; preds = %dec_label_pc_1be82
  %v1_1be8c = call i32 @function_1be93()
  br label %dec_label_pc_1be8e

dec_label_pc_1be8e:                               ; preds = %bb, %dec_label_pc_1be82
  %v2_1be8c = phi i32 [ %v1_1be8c, %bb ], [ 0, %dec_label_pc_1be82 ]
  ret i32 %v2_1be8c

; uselistorder directives
  uselistorder i32 %v4_1be71, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1be5e, { 1, 0 }
}

define i32 @function_1be93() local_unnamed_addr {
dec_label_pc_1be93:
  %v0_1be94 = load i32, i32* @eax, align 4
  ret i32 %v0_1be94
}

define i32 @_ZNSaI7uint256EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1be96:
  %v1_1beb3 = call i32 @unknown_39d0e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bec4

bb:                                               ; preds = %dec_label_pc_1be96
  %v1_1bec2 = call i32 @function_1bec9()
  br label %dec_label_pc_1bec4

dec_label_pc_1bec4:                               ; preds = %bb, %dec_label_pc_1be96
  %v2_1bec2 = phi i32 [ %v1_1bec2, %bb ], [ 0, %dec_label_pc_1be96 ]
  ret i32 %v2_1bec2
}

define i32 @function_1bec9() local_unnamed_addr {
dec_label_pc_1bec9:
  %v0_1beca = load i32, i32* @eax, align 4
  ret i32 %v0_1beca
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1becc:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1beef

bb:                                               ; preds = %dec_label_pc_1becc
  %v2_1beed = call i32 @function_1bef4(i32 %arg1)
  br label %dec_label_pc_1beef

dec_label_pc_1beef:                               ; preds = %bb, %dec_label_pc_1becc
  %v3_1beed = phi i32 [ %v2_1beed, %bb ], [ 0, %dec_label_pc_1becc ]
  ret i32 %v3_1beed
}

define i32 @function_1bef4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bef4:
  %v0_1bef5 = load i32, i32* @eax, align 4
  ret i32 %v0_1bef5
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIP7uint256EEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bef6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bf1f

bb:                                               ; preds = %dec_label_pc_1bef6
  %v3_1bf1d = call i32 @function_1bf24(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1bf1f

dec_label_pc_1bf1f:                               ; preds = %bb, %dec_label_pc_1bef6
  %v4_1bf1d = phi i32 [ %v3_1bf1d, %bb ], [ 0, %dec_label_pc_1bef6 ]
  ret i32 %v4_1bf1d
}

define i32 @function_1bf24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bf24:
  %v0_1bf25 = load i32, i32* @eax, align 4
  ret i32 %v0_1bf25
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE5beginEv() local_unnamed_addr {
dec_label_pc_1bf26:
  %eax.global-to-local = alloca i32, align 4
  %v17_1bf29 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1bf29
}

define i32 @function_1bf2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bf2c:
  %v0_1bf2c = load i32, i32* @ebp, align 4
  %v1_1bf2c = add i32 %v0_1bf2c, 8
  %v2_1bf2c = inttoptr i32 %v1_1bf2c to i32*
  %v3_1bf2c = load i32, i32* %v2_1bf2c, align 4
  %v2_1bf2f = add i32 %v0_1bf2c, -28
  %v3_1bf2f = inttoptr i32 %v2_1bf2f to i32*
  store i32 %v3_1bf2c, i32* %v3_1bf2f, align 4
  %v0_1bf32 = load i32, i32* @ebp, align 4
  %v1_1bf32 = add i32 %v0_1bf32, 12
  %v2_1bf32 = inttoptr i32 %v1_1bf32 to i32*
  %v3_1bf32 = load i32, i32* %v2_1bf32, align 4
  %v2_1bf35 = add i32 %v0_1bf32, -32
  %v3_1bf35 = inttoptr i32 %v2_1bf35 to i32*
  store i32 %v3_1bf32, i32* %v3_1bf35, align 4
  %v0_1bf38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1bf3e = load i32, i32* @ebp, align 4
  %v2_1bf3e = add i32 %v1_1bf3e, -12
  %v3_1bf3e = inttoptr i32 %v2_1bf3e to i32*
  store i32 %v0_1bf38, i32* %v3_1bf3e, align 4
  %v0_1bf43 = load i32, i32* @ebp, align 4
  %v1_1bf43 = add i32 %v0_1bf43, -32
  %v2_1bf43 = inttoptr i32 %v1_1bf43 to i32*
  %v3_1bf43 = load i32, i32* %v2_1bf43, align 4
  %v1_1bf46 = inttoptr i32 %v3_1bf43 to i32*
  %v2_1bf46 = load i32, i32* %v1_1bf46, align 4
  %v2_1bf48 = add i32 %v0_1bf43, -16
  %v3_1bf48 = inttoptr i32 %v2_1bf48 to i32*
  store i32 %v2_1bf46, i32* %v3_1bf48, align 4
  %v0_1bf4b = load i32, i32* @ebp, align 4
  %v1_1bf4b = add i32 %v0_1bf4b, -16
  %v1_1bf52 = add i32 %v0_1bf4b, -28
  %v2_1bf52 = inttoptr i32 %v1_1bf52 to i32*
  %v3_1bf52 = load i32, i32* %v2_1bf52, align 4
  %v2_1bf58 = call i32 @unknown_39dc8(i32 %v3_1bf52, i32 %v1_1bf4b)
  %v0_1bf5d = load i32, i32* @ebp, align 4
  %v1_1bf5d = add i32 %v0_1bf5d, -28
  %v2_1bf5d = inttoptr i32 %v1_1bf5d to i32*
  %v3_1bf5d = load i32, i32* %v2_1bf5d, align 4
  store i32 %v3_1bf5d, i32* @eax, align 4
  %v1_1bf60 = add i32 %v0_1bf5d, -12
  %v2_1bf60 = inttoptr i32 %v1_1bf60 to i32*
  %v3_1bf60 = load i32, i32* %v2_1bf60, align 4
  %v1_1bf63 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1bf63 = icmp eq i32 %v1_1bf63, %v3_1bf60
  br i1 %v3_1bf63, label %bb, label %dec_label_pc_1bf6c

bb:                                               ; preds = %dec_label_pc_1bf2c
  %v1_1bf6a = call i32 @function_1bf71()
  br label %dec_label_pc_1bf6c

dec_label_pc_1bf6c:                               ; preds = %bb, %dec_label_pc_1bf2c
  %v3_1bf6a = phi i32 [ %v1_1bf6a, %bb ], [ %v3_1bf5d, %dec_label_pc_1bf2c ]
  ret i32 %v3_1bf6a
}

define i32 @function_1bf71() local_unnamed_addr {
dec_label_pc_1bf71:
  %v0_1bf72 = load i32, i32* @eax, align 4
  ret i32 %v0_1bf72
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bf76:
  %stack_var_-20 = alloca i32, align 4
  %v1_1bf96 = add i32 %arg2, 4
  %v2_1bf96 = inttoptr i32 %v1_1bf96 to i32*
  %v3_1bf96 = load i32, i32* %v2_1bf96, align 4
  store i32 %v3_1bf96, i32* %stack_var_-20, align 4
  %v2_1bf9c = ptrtoint i32* %stack_var_-20 to i32
  %v2_1bfa9 = call i32 @unknown_39e18(i32 %arg1, i32 %v2_1bf9c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bfbd

bb:                                               ; preds = %dec_label_pc_1bf76
  %v1_1bfbb = call i32 @function_1bfc2()
  br label %dec_label_pc_1bfbd

dec_label_pc_1bfbd:                               ; preds = %bb, %dec_label_pc_1bf76
  %v2_1bfbb = phi i32 [ %v1_1bfbb, %bb ], [ %arg1, %dec_label_pc_1bf76 ]
  ret i32 %v2_1bfbb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1bfc2() local_unnamed_addr {
dec_label_pc_1bfc2:
  %v0_1bfc3 = load i32, i32* @eax, align 4
  ret i32 %v0_1bfc3
}

define i32 @_ZN9__gnu_cxxneIPK12CTransactionSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bfc6:
  %v1_1bfea = call i32 @unknown_35e44(i32 %arg1)
  %v1_1bfef = inttoptr i32 %v1_1bfea to i32*
  %v2_1bfef = load i32, i32* %v1_1bfef, align 4
  %v1_1bff7 = call i32 @unknown_35e44(i32 %arg2)
  %v1_1bffc = inttoptr i32 %v1_1bff7 to i32*
  %v2_1bffc = load i32, i32* %v1_1bffc, align 4
  %v12_1bffe = icmp eq i32 %v2_1bfef, %v2_1bffc
  %v1_1c000 = icmp eq i1 %v12_1bffe, false
  %v2_1c000 = zext i1 %v1_1c000 to i32
  %v4_1c000 = and i32 %v2_1bffc, -256
  %v5_1c000 = or i32 %v2_1c000, %v4_1c000
  store i32 %v5_1c000, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c00f

bb:                                               ; preds = %dec_label_pc_1bfc6
  %v1_1c00d = call i32 @function_1c014()
  br label %dec_label_pc_1c00f

dec_label_pc_1c00f:                               ; preds = %bb, %dec_label_pc_1bfc6
  %v2_1c00d = phi i32 [ %v1_1c00d, %bb ], [ %v5_1c000, %dec_label_pc_1bfc6 ]
  ret i32 %v2_1c00d

; uselistorder directives
  uselistorder i32 %v2_1bffc, { 1, 0 }
  uselistorder i32 (i32)* @unknown_35e44, { 1, 0 }
}

define i32 @function_1c014() local_unnamed_addr {
dec_label_pc_1c014:
  %v0_1c019 = load i32, i32* @eax, align 4
  ret i32 %v0_1c019
}

define i32 @_Z12SerReadWriteI11CDataStream9CFlatDataEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1c01a:
  %v4_1c065 = call i32 @unknown_39ef6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c07b

bb:                                               ; preds = %dec_label_pc_1c01a
  %v1_1c079 = call i32 @function_1c080()
  br label %dec_label_pc_1c07b

dec_label_pc_1c07b:                               ; preds = %bb, %dec_label_pc_1c01a
  %v2_1c079 = phi i32 [ %v1_1c079, %bb ], [ 0, %dec_label_pc_1c01a ]
  ret i32 %v2_1c079
}

define i32 @function_1c080() local_unnamed_addr {
dec_label_pc_1c080:
  %v0_1c081 = load i32, i32* @eax, align 4
  ret i32 %v0_1c081
}

define i32 @_Z12SerReadWriteI11CDataStreamjEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1c082:
  %v2_1c0b5 = load i32, i32* %arg2, align 4
  %v4_1c0cf = call i32 @unknown_39fba(i32 %arg1, i32 %v2_1c0b5, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c0e5

bb:                                               ; preds = %dec_label_pc_1c082
  %v1_1c0e3 = call i32 @function_1c0ea()
  br label %dec_label_pc_1c0e5

dec_label_pc_1c0e5:                               ; preds = %bb, %dec_label_pc_1c082
  %v2_1c0e3 = phi i32 [ %v1_1c0e3, %bb ], [ 0, %dec_label_pc_1c082 ]
  ret i32 %v2_1c0e3
}

define i32 @function_1c0ea() local_unnamed_addr {
dec_label_pc_1c0ea:
  %v0_1c0eb = load i32, i32* @eax, align 4
  ret i32 %v0_1c0eb
}

define i32 @_ZNSaI5CTxInEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c0ec:
  %v2_1c116 = call i32 @unknown_3a07a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c127

bb:                                               ; preds = %dec_label_pc_1c0ec
  %v1_1c125 = call i32 @function_1c12c()
  br label %dec_label_pc_1c127

dec_label_pc_1c127:                               ; preds = %bb, %dec_label_pc_1c0ec
  %v2_1c125 = phi i32 [ %v1_1c125, %bb ], [ 0, %dec_label_pc_1c0ec ]
  ret i32 %v2_1c125
}

define i32 @function_1c12c() local_unnamed_addr {
dec_label_pc_1c12c:
  %v0_1c12d = load i32, i32* @eax, align 4
  ret i32 %v0_1c12d
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE8allocateEjPKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c12e:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1c157 = call i32 @unknown_3a0ec(i32 %arg1)
  %v10_1c15c = icmp ult i32 %v1_1c157, %tmp6
  %v1_1c15f = zext i1 %v10_1c15c to i32
  %v3_1c15f = and i32 %v1_1c157, -256
  %v4_1c15f = or i32 %v1_1c15f, %v3_1c15f
  %v5_1c162 = icmp eq i1 %v10_1c15c, false
  br i1 %v5_1c162, label %bb, label %dec_label_pc_1c166

bb:                                               ; preds = %dec_label_pc_1c12e
  %v1_1c164 = call i32 @function_1c16b()
  br label %dec_label_pc_1c166

dec_label_pc_1c166:                               ; preds = %bb, %dec_label_pc_1c12e
  %v2_1c164 = phi i32 [ %v1_1c164, %bb ], [ %v4_1c15f, %dec_label_pc_1c12e ]
  ret i32 %v2_1c164

; uselistorder directives
  uselistorder i1 %v10_1c15c, { 1, 0 }
}

define i32 @function_1c16b() local_unnamed_addr {
dec_label_pc_1c16b:
  %v0_1c16b = load i32, i32* @ebp, align 4
  %v1_1c16b = add i32 %v0_1c16b, -32
  %v2_1c16b = inttoptr i32 %v1_1c16b to i32*
  %v3_1c16b = load i32, i32* %v2_1c16b, align 4
  %v3_1c16e = mul i32 %v3_1c16b, ptrtoint (i32* @global_var_34.1820 to i32)
  ret i32 %v3_1c16e
}

define i32 @function_1c189() local_unnamed_addr {
dec_label_pc_1c189:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c189 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c189 = add i32 %v0_1c189, -1
  store i32 %v1_1c189, i32* %ecx.global-to-local, align 4
  %v0_1c18b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c18b
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c18c:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_1c1ee = ptrtoint i32* %stack_var_-36 to i32
  %v2_1c1f2 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1c1f8110 = call i32 @unknown_37bc1(i32 %v2_1c1f2, i32 %v4_1c1ee)
  %v4_1c1fd111 = trunc i32 %v2_1c1f8110 to i8
  %v5_1c1fd112 = icmp eq i8 %v4_1c1fd111, 0
  %v1_1c1ff113 = icmp eq i1 %v5_1c1fd112, false
  br i1 %v1_1c1ff113, label %dec_label_pc_1c1b8, label %dec_label_pc_1c201

dec_label_pc_1c1b8:                               ; preds = %dec_label_pc_1c18c, %dec_label_pc_1c1b8
  %storemerge114 = phi i32 [ %v4_1c1e7, %dec_label_pc_1c1b8 ], [ %arg3, %dec_label_pc_1c18c ]
  %v1_1c1be = call i32 @unknown_37c50(i32 %v2_1c1f2)
  %v1_1c1cb = call i32 @unknown_39cff(i32 %storemerge114)
  %v2_1c1d7 = call i32 @unknown_3a208(i32 %v1_1c1cb, i32 %v1_1c1be)
  %v1_1c1e2 = call i32 @unknown_37c16(i32 %v2_1c1f2)
  %v4_1c1e7 = add i32 %storemerge114, ptrtoint (i32* @global_var_34.1820 to i32)
  %v2_1c1f8 = call i32 @unknown_37bc1(i32 %v2_1c1f2, i32 %v4_1c1ee)
  %v4_1c1fd = trunc i32 %v2_1c1f8 to i8
  %v5_1c1fd = icmp eq i8 %v4_1c1fd, 0
  %v1_1c1ff = icmp eq i1 %v5_1c1fd, false
  br i1 %v1_1c1ff, label %dec_label_pc_1c1b8, label %dec_label_pc_1c201

dec_label_pc_1c201:                               ; preds = %dec_label_pc_1c1b8, %dec_label_pc_1c18c
  %storemerge.lcssa = phi i32 [ %arg3, %dec_label_pc_1c18c ], [ %v4_1c1e7, %dec_label_pc_1c1b8 ]
  store i32 %storemerge.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c210

bb:                                               ; preds = %dec_label_pc_1c201
  %v1_1c20e = call i32 @function_1c247()
  store i32 %v1_1c20e, i32* @eax, align 4
  br label %dec_label_pc_1c210

dec_label_pc_1c210:                               ; preds = %bb, %dec_label_pc_1c201
  %v0_1c210 = call i32 @function_1c242()
  ret i32 %v0_1c210

; uselistorder directives
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %v2_1c1f2, { 3, 1, 2, 0 }
  uselistorder i32 %v4_1c1ee, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_37bc1, { 1, 0 }
  uselistorder label %dec_label_pc_1c1b8, { 1, 0 }
}

define i32 @function_1c213() local_unnamed_addr {
dec_label_pc_1c213:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c213 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c213
}

define i32 @function_1c242() local_unnamed_addr {
dec_label_pc_1c242:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c247() local_unnamed_addr {
dec_label_pc_1c247:
  %v0_1c24c = load i32, i32* @eax, align 4
  ret i32 %v0_1c24c
}

define i32 @_ZNSaIN11json_spirit9Pair_implINS_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c24e:
  %v1_1c26b = call i32 @unknown_3a346(i32 %arg1)
  ret i32 0
}

define i32 @function_1c27c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c27c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c281() local_unnamed_addr {
dec_label_pc_1c281:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c282 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c282
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c284:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c2a7

bb:                                               ; preds = %dec_label_pc_1c284
  %v2_1c2a5 = call i32 @function_1c2ac(i32 %arg1)
  br label %dec_label_pc_1c2a7

dec_label_pc_1c2a7:                               ; preds = %bb, %dec_label_pc_1c284
  %v3_1c2a5 = phi i32 [ %v2_1c2a5, %bb ], [ 0, %dec_label_pc_1c284 ]
  ret i32 %v3_1c2a5
}

define i32 @function_1c2ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c2ac:
  %v0_1c2ad = load i32, i32* @eax, align 4
  ret i32 %v0_1c2ad
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c2ae:
  ret i32 %arg2
}

define i32 @function_1c2ec() local_unnamed_addr {
dec_label_pc_1c2ec:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c2ec = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c2ec = add i32 %v0_1c2ec, -1
  store i32 %v1_1c2ec, i32* %ecx.global-to-local, align 4
  %v0_1c2ee = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c2ee
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEEEEvT_S8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c2ef:
  %v15_1c328105 = icmp eq i32 %arg1, %arg2
  %v1_1c32b106 = icmp eq i1 %v15_1c328105, false
  %v5_1c32e110 = icmp eq i1 %v1_1c32b106, false
  %v1_1c330111 = icmp eq i1 %v5_1c32e110, false
  br i1 %v1_1c330111, label %dec_label_pc_1c30e, label %dec_label_pc_1c332

dec_label_pc_1c30e:                               ; preds = %dec_label_pc_1c2ef, %dec_label_pc_1c30e
  %stack_var_-32.0112 = phi i32 [ %v4_1c321, %dec_label_pc_1c30e ], [ %arg1, %dec_label_pc_1c2ef ]
  %v1_1c314 = call i32 @unknown_3a411(i32 %stack_var_-32.0112)
  %v1_1c31c = call i32 @unknown_3a43e(i32 %v1_1c314)
  %v4_1c321 = add i32 %stack_var_-32.0112, 24
  %v15_1c328 = icmp eq i32 %v4_1c321, %arg2
  %v1_1c32b = icmp eq i1 %v15_1c328, false
  %v5_1c32e = icmp eq i1 %v1_1c32b, false
  %v1_1c330 = icmp eq i1 %v5_1c32e, false
  br i1 %v1_1c330, label %dec_label_pc_1c30e, label %dec_label_pc_1c332

dec_label_pc_1c332:                               ; preds = %dec_label_pc_1c30e, %dec_label_pc_1c2ef
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c33e

bb:                                               ; preds = %dec_label_pc_1c332
  %v1_1c33c = call i32 @function_1c343()
  br label %dec_label_pc_1c33e

dec_label_pc_1c33e:                               ; preds = %bb, %dec_label_pc_1c332
  %v2_1c33c = phi i32 [ %v1_1c33c, %bb ], [ 0, %dec_label_pc_1c332 ]
  ret i32 %v2_1c33c

; uselistorder directives
  uselistorder i32 %v4_1c321, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1c30e, { 1, 0 }
}

define i32 @function_1c343() local_unnamed_addr {
dec_label_pc_1c343:
  %v0_1c344 = load i32, i32* @eax, align 4
  ret i32 %v0_1c344
}

define i32 @_ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1c345:
  %edx.global-to-local = alloca i32, align 4
  %v0_1c36f = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1c36f, 16777216
  %v8_1c387 = sdiv i32 %sext, 16777216
  %v9_1c387 = sext i8 %arg4 to i32
  %v10_1c387 = call i32 @unknown_3a4c9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_1c387, i32 %v9_1c387, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v10_1c387, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_1c398

bb:                                               ; preds = %dec_label_pc_1c345
  %v1_1c396 = call i32 @function_1c39d()
  br label %dec_label_pc_1c398

dec_label_pc_1c398:                               ; preds = %bb, %dec_label_pc_1c345
  %v2_1c396 = phi i32 [ %v1_1c396, %bb ], [ %v10_1c387, %dec_label_pc_1c345 ]
  ret i32 %v2_1c396

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c39d() local_unnamed_addr {
dec_label_pc_1c39d:
  %v0_1c39e = load i32, i32* @eax, align 4
  ret i32 %v0_1c39e
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_node10initializeEPvRKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c39f:
  store i32 0, i32* @eax, align 4
  %v2_1c3cd = call i32 @function_205e5(i32 4, i32 %arg1)
  %v1_1c3d4 = icmp eq i32 %v2_1c3cd, 0
  br i1 %v1_1c3d4, label %bb, label %dec_label_pc_1c3d8

bb:                                               ; preds = %dec_label_pc_1c39f
  %v1_1c3d6 = call i32 @function_1c3e7()
  br label %dec_label_pc_1c3d8

dec_label_pc_1c3d8:                               ; preds = %bb, %dec_label_pc_1c39f
  ret i32 %arg2
}

define i32 @function_1c3e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c3e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c3e7() local_unnamed_addr {
dec_label_pc_1c3e7:
  store i32 0, i32* @eax, align 4
  %v0_1c3ec = load i32, i32* @ebp, align 4
  %v1_1c3ec = add i32 %v0_1c3ec, -28
  %v2_1c3ec = inttoptr i32 %v1_1c3ec to i32*
  %v3_1c3ec = load i32, i32* %v2_1c3ec, align 4
  %v1_1c3ef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1c3ef = icmp eq i32 %v1_1c3ef, %v3_1c3ec
  br i1 %v3_1c3ef, label %bb, label %dec_label_pc_1c3f8

bb:                                               ; preds = %dec_label_pc_1c3e7
  %v1_1c3f6 = call i32 @function_1c417()
  store i32 %v1_1c3f6, i32* @eax, align 4
  br label %dec_label_pc_1c3f8

dec_label_pc_1c3f8:                               ; preds = %bb, %dec_label_pc_1c3e7
  %v0_1c3f8 = call i32 @function_1c412()
  ret i32 %v0_1c3f8
}

define i32 @function_1c40c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c40c:
  %v0_1c40c = load i32, i32* @eax, align 4
  %v11_1c40c = and i32 %v0_1c40c, -24
  ret i32 %v11_1c40c
}

define i32 @function_1c412() local_unnamed_addr {
dec_label_pc_1c412:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c417() local_unnamed_addr {
dec_label_pc_1c417:
  %v5_1c41b = load i32, i32* @eax, align 4
  ret i32 %v5_1c41b
}

define i32 @function_1c41c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c41c:
  %v0_1c41e = load i32, i32* @eax, align 4
  ret i32 %v0_1c41e
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_9destroyerEPvEENT_11result_typeEiiRSN_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c41f:
  ret i32 %arg3
}

define i32 @function_1c46a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c46a:
  %v0_1c46e = load i32, i32* @ebp, align 4
  %v1_1c475 = add i32 %v0_1c46e, -28
  %v2_1c475 = inttoptr i32 %v1_1c475 to i32*
  %v3_1c475 = load i32, i32* %v2_1c475, align 4
  ret i32 %v3_1c475
}

define i32 @function_1c47f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c47f:
  %v0_1c47f = load i32, i32* @ebx, align 4
  %v1_1c47f = add i32 %v0_1c47f, 862319685
  %v2_1c47f = inttoptr i32 %v1_1c47f to i8*
  %v3_1c47f = load i8, i8* %v2_1c47f, align 1
  %v4_1c47f = load i32, i32* @ecx, align 4
  %v5_1c47f = trunc i32 %v4_1c47f to i8
  %v6_1c47f = add i8 %v5_1c47f, %v3_1c47f
  store i8 %v6_1c47f, i8* %v2_1c47f, align 1
  %v0_1c485 = load i32, i32* @eax, align 4
  %v1_1c485 = add i32 %v0_1c485, 20
  %v10_1c485 = icmp eq i32 %v1_1c485, 0
  store i32 %v1_1c485, i32* @eax, align 4
  br i1 %v10_1c485, label %bb, label %dec_label_pc_1c48c

bb:                                               ; preds = %dec_label_pc_1c47f
  %v1_1c48a = call i32 @function_1c491()
  br label %dec_label_pc_1c48c

dec_label_pc_1c48c:                               ; preds = %bb, %dec_label_pc_1c47f
  %v2_1c48a = phi i32 [ %v1_1c48a, %bb ], [ %v1_1c485, %dec_label_pc_1c47f ]
  ret i32 %v2_1c48a
}

define i32 @function_1c491() local_unnamed_addr {
dec_label_pc_1c491:
  %v0_1c492 = load i32, i32* @eax, align 4
  ret i32 %v0_1c492
}

define i32 @_ZSt12__miter_baseIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEENSt11_Miter_baseIT_E13iterator_typeES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c493:
  %v1_1c4b0 = call i32 @unknown_3acc3(i32 %arg1)
  store i32 %v1_1c4b0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c4c1

bb:                                               ; preds = %dec_label_pc_1c493
  %v1_1c4bf = call i32 @function_1c4c6()
  br label %dec_label_pc_1c4c1

dec_label_pc_1c4c1:                               ; preds = %bb, %dec_label_pc_1c493
  %v2_1c4bf = phi i32 [ %v1_1c4bf, %bb ], [ %v1_1c4b0, %dec_label_pc_1c493 ]
  ret i32 %v2_1c4bf
}

define i32 @function_1c4c6() local_unnamed_addr {
dec_label_pc_1c4c6:
  %v0_1c4c7 = load i32, i32* @eax, align 4
  ret i32 %v0_1c4c7
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c4c8:
  %v1_1c4f3 = call i32 @unknown_3ad25(i32 %arg3)
  %v1_1c500 = call i32 @unknown_3ad25(i32 %arg2)
  %v1_1c50d = call i32 @unknown_3ad25(i32 %arg1)
  %v3_1c51d = call i32 @unknown_3ad5a(i32 %v1_1c50d, i32 %v1_1c500, i32 %v1_1c4f3)
  store i32 %v3_1c51d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c52e

bb:                                               ; preds = %dec_label_pc_1c4c8
  %v1_1c52c = call i32 @function_1c533()
  br label %dec_label_pc_1c52e

dec_label_pc_1c52e:                               ; preds = %bb, %dec_label_pc_1c4c8
  %v2_1c52c = phi i32 [ %v1_1c52c, %bb ], [ %v3_1c51d, %dec_label_pc_1c4c8 ]
  ret i32 %v2_1c52c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3ad25, { 2, 1, 0 }
}

define i32 @function_1c533() local_unnamed_addr {
dec_label_pc_1c533:
  %v0_1c539 = load i32, i32* @eax, align 4
  ret i32 %v0_1c539
}

define i32 @_ZSt4swapIN11json_spirit10Value_typeEEvRT_S3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c53a:
  ret i32 %arg1
}

define i32 @function_1c546(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c546:
  %v0_1c546 = load i32, i32* @ebp, align 4
  %v1_1c546 = add i32 %v0_1c546, 12
  %v2_1c546 = inttoptr i32 %v1_1c546 to i32*
  %v3_1c546 = load i32, i32* %v2_1c546, align 4
  %v2_1c549 = add i32 %v0_1c546, -32
  %v3_1c549 = inttoptr i32 %v2_1c549 to i32*
  store i32 %v3_1c546, i32* %v3_1c549, align 4
  %v0_1c54c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1c552 = load i32, i32* @ebp, align 4
  %v2_1c552 = add i32 %v1_1c552, -12
  %v3_1c552 = inttoptr i32 %v2_1c552 to i32*
  store i32 %v0_1c54c, i32* %v3_1c552, align 4
  %v0_1c557 = load i32, i32* @ebp, align 4
  %v1_1c557 = add i32 %v0_1c557, -28
  %v2_1c557 = inttoptr i32 %v1_1c557 to i32*
  %v3_1c557 = load i32, i32* %v2_1c557, align 4
  %v1_1c55a = inttoptr i32 %v3_1c557 to i32*
  %v2_1c55a = load i32, i32* %v1_1c55a, align 4
  %v2_1c55c = add i32 %v0_1c557, -16
  %v3_1c55c = inttoptr i32 %v2_1c55c to i32*
  store i32 %v2_1c55a, i32* %v3_1c55c, align 4
  %v0_1c55f = load i32, i32* @ebp, align 4
  %v1_1c55f = add i32 %v0_1c55f, -32
  %v2_1c55f = inttoptr i32 %v1_1c55f to i32*
  %v3_1c55f = load i32, i32* %v2_1c55f, align 4
  %v1_1c562 = inttoptr i32 %v3_1c55f to i32*
  %v2_1c562 = load i32, i32* %v1_1c562, align 4
  %v1_1c564 = add i32 %v0_1c55f, -28
  %v2_1c564 = inttoptr i32 %v1_1c564 to i32*
  %v3_1c564 = load i32, i32* %v2_1c564, align 4
  %v2_1c567 = inttoptr i32 %v3_1c564 to i32*
  store i32 %v2_1c562, i32* %v2_1c567, align 4
  %v0_1c569 = load i32, i32* @ebp, align 4
  %v1_1c569 = add i32 %v0_1c569, -32
  %v2_1c569 = inttoptr i32 %v1_1c569 to i32*
  %v3_1c569 = load i32, i32* %v2_1c569, align 4
  %v1_1c56c = add i32 %v0_1c569, -16
  %v2_1c56c = inttoptr i32 %v1_1c56c to i32*
  %v3_1c56c = load i32, i32* %v2_1c56c, align 4
  %v2_1c56f = inttoptr i32 %v3_1c569 to i32*
  store i32 %v3_1c56c, i32* %v2_1c56f, align 4
  %v0_1c571 = load i32, i32* @ebp, align 4
  %v1_1c571 = add i32 %v0_1c571, -12
  %v2_1c571 = inttoptr i32 %v1_1c571 to i32*
  %v3_1c571 = load i32, i32* %v2_1c571, align 4
  ret i32 %v3_1c571
}

define i32 @function_1c576(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c576:
  %v0_1c576 = load i32, i32* @eax, align 4
  %v1_1c576 = add i32 %v0_1c576, 20
  %v10_1c576 = icmp eq i32 %v1_1c576, 0
  store i32 %v1_1c576, i32* @eax, align 4
  br i1 %v10_1c576, label %bb, label %dec_label_pc_1c57d

bb:                                               ; preds = %dec_label_pc_1c576
  %v1_1c57b = call i32 @function_1c582()
  br label %dec_label_pc_1c57d

dec_label_pc_1c57d:                               ; preds = %bb, %dec_label_pc_1c576
  %v2_1c57b = phi i32 [ %v1_1c57b, %bb ], [ %v1_1c576, %dec_label_pc_1c576 ]
  ret i32 %v2_1c57b
}

define i32 @function_1c582() local_unnamed_addr {
dec_label_pc_1c582:
  %v0_1c583 = load i32, i32* @eax, align 4
  ret i32 %v0_1c583
}

define i32 @_ZSt4swapIN5boost7variantISsNS0_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEENS2_IS3_INS4_10Value_implIS7_EESaISD_EEEEbxdNS0_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EEEvRT_SM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c584:
  %stack_var_-28 = alloca i32, align 4
  %v2_1c5a9 = ptrtoint i32* %stack_var_-28 to i32
  %v2_1c5af = call i32 @unknown_3ae6a(i32 %v2_1c5a9, i32 %arg1)
  %v2_1c5c1 = call i32 @unknown_3aee4(i32 %arg1, i32 %arg2)
  %v2_1c5d3 = call i32 @unknown_3aee4(i32 %arg2, i32 %v2_1c5a9)
  %v1_1c5de = call i32 @unknown_2ee10(i32 %v2_1c5a9)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c5ef

bb:                                               ; preds = %dec_label_pc_1c584
  %v1_1c5ed = call i32 @function_1c60d()
  store i32 %v1_1c5ed, i32* @eax, align 4
  br label %dec_label_pc_1c5ef

dec_label_pc_1c5ef:                               ; preds = %bb, %dec_label_pc_1c584
  %v0_1c5ef = call i32 @function_1c608()
  ret i32 %v0_1c5ef

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_3aee4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c5f2() local_unnamed_addr {
dec_label_pc_1c5f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c5f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c5f2
}

define i32 @function_1c608() local_unnamed_addr {
dec_label_pc_1c608:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c60d() local_unnamed_addr {
dec_label_pc_1c60d:
  %v0_1c612 = load i32, i32* @eax, align 4
  ret i32 %v0_1c612
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c614:
  %v1_1c631 = call i32 @unknown_33356(i32 %arg1)
  %v1_1c639 = call i32 @unknown_3afba(i32 %v1_1c631)
  store i32 %v1_1c639, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c64a

bb:                                               ; preds = %dec_label_pc_1c614
  %v1_1c648 = call i32 @function_1c64f()
  br label %dec_label_pc_1c64a

dec_label_pc_1c64a:                               ; preds = %bb, %dec_label_pc_1c614
  %v2_1c648 = phi i32 [ %v1_1c648, %bb ], [ %v1_1c639, %dec_label_pc_1c614 ]
  ret i32 %v2_1c648
}

define i32 @function_1c64f() local_unnamed_addr {
dec_label_pc_1c64f:
  %v0_1c650 = load i32, i32* @eax, align 4
  ret i32 %v0_1c650
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c652:
  %v1_1c67b = call i32 @unknown_3aff8(i32 %arg1)
  %v10_1c680 = icmp ult i32 %v1_1c67b, %arg2
  %v1_1c683 = zext i1 %v10_1c680 to i32
  %v3_1c683 = and i32 %v1_1c67b, -256
  %v4_1c683 = or i32 %v1_1c683, %v3_1c683
  %v5_1c686 = icmp eq i1 %v10_1c680, false
  br i1 %v5_1c686, label %bb, label %dec_label_pc_1c68a

bb:                                               ; preds = %dec_label_pc_1c652
  %v1_1c688 = call i32 @function_1c68f()
  br label %dec_label_pc_1c68a

dec_label_pc_1c68a:                               ; preds = %bb, %dec_label_pc_1c652
  %v2_1c688 = phi i32 [ %v1_1c688, %bb ], [ %v4_1c683, %dec_label_pc_1c652 ]
  ret i32 %v2_1c688

; uselistorder directives
  uselistorder i1 %v10_1c680, { 1, 0 }
}

define i32 @function_1c68f() local_unnamed_addr {
dec_label_pc_1c68f:
  %v0_1c68f = load i32, i32* @ebp, align 4
  %v1_1c68f = add i32 %v0_1c68f, -32
  %v2_1c68f = inttoptr i32 %v1_1c68f to i32*
  %v3_1c68f = load i32, i32* %v2_1c68f, align 4
  %v2_1c698 = mul i32 %v3_1c68f, 24
  ret i32 %v2_1c698
}

define i32 @function_1c6b3() local_unnamed_addr {
dec_label_pc_1c6b3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c6b3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c6b3 = add i32 %v0_1c6b3, -1
  store i32 %v1_1c6b3, i32* %ecx.global-to-local, align 4
  %v0_1c6b5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c6b5
}

define i32 @_ZSt22__uninitialized_copy_aIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_S4_ET0_T_S7_S6_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c6b6:
  %v7_1c6f3 = call i32 @unknown_3b08b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1c6f3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c704

bb:                                               ; preds = %dec_label_pc_1c6b6
  %v1_1c702 = call i32 @function_1c709()
  br label %dec_label_pc_1c704

dec_label_pc_1c704:                               ; preds = %bb, %dec_label_pc_1c6b6
  %v2_1c702 = phi i32 [ %v1_1c702, %bb ], [ %v7_1c6f3, %dec_label_pc_1c6b6 ]
  ret i32 %v2_1c702

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c709() local_unnamed_addr {
dec_label_pc_1c709:
  %v0_1c70a = load i32, i32* @eax, align 4
  ret i32 %v0_1c70a
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_nodeENS8_ILi3EEEEENSB_INS4_5list3IbxdEEEEE16initializer_nodeENS8_ILi4EEEEENSB_INS4_5list2IxdEEEEE16initializer_node10initializeEPvRKx(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1c70b:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_1c736 = call i32 @function_20951(i32 8, i32 %arg1)
  %v1_1c73d = icmp eq i32 %v2_1c736, 0
  br i1 %v1_1c73d, label %dec_label_pc_1c74e, label %dec_label_pc_1c741

dec_label_pc_1c741:                               ; preds = %dec_label_pc_1c70b
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v1_1c744 = add i32 %tmp102, 4
  %v2_1c744 = inttoptr i32 %v1_1c744 to i32*
  %v3_1c744 = load i32, i32* %v2_1c744, align 4
  store i32 %v3_1c744, i32* %edx.global-to-local, align 8
  %v2_1c747 = load i32, i32* %arg2, align 4
  %v2_1c749 = inttoptr i32 %v2_1c736 to i32*
  store i32 %v2_1c747, i32* %v2_1c749, align 4
  %v0_1c74b = load i32, i32* %edx.global-to-local, align 8
  %v2_1c74b = add i32 %v2_1c736, 4
  %v3_1c74b = inttoptr i32 %v2_1c74b to i32*
  store i32 %v0_1c74b, i32* %v3_1c74b, align 4
  br label %dec_label_pc_1c74e

dec_label_pc_1c74e:                               ; preds = %dec_label_pc_1c741, %dec_label_pc_1c70b
  store i32 4, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_1c75f

bb:                                               ; preds = %dec_label_pc_1c74e
  %v1_1c75d = call i32 @function_1c764()
  br label %dec_label_pc_1c75f

dec_label_pc_1c75f:                               ; preds = %bb, %dec_label_pc_1c74e
  %v2_1c75d = phi i32 [ %v1_1c75d, %bb ], [ 4, %dec_label_pc_1c74e ]
  ret i32 %v2_1c75d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c764() local_unnamed_addr {
dec_label_pc_1c764:
  %v0_1c765 = load i32, i32* @eax, align 4
  ret i32 %v0_1c765
}

define i32 @_ZNSaIN11json_spirit10Value_implINS_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c766:
  %v1_1c783 = call i32 @unknown_3b18a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c794

bb:                                               ; preds = %dec_label_pc_1c766
  %v1_1c792 = call i32 @function_1c799()
  br label %dec_label_pc_1c794

dec_label_pc_1c794:                               ; preds = %bb, %dec_label_pc_1c766
  %v2_1c792 = phi i32 [ %v1_1c792, %bb ], [ 0, %dec_label_pc_1c766 ]
  ret i32 %v2_1c792
}

define i32 @function_1c799() local_unnamed_addr {
dec_label_pc_1c799:
  %v0_1c79a = load i32, i32* @eax, align 4
  ret i32 %v0_1c79a
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c79c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c7bf

bb:                                               ; preds = %dec_label_pc_1c79c
  %v2_1c7bd = call i32 @function_1c7c4(i32 %arg1)
  br label %dec_label_pc_1c7bf

dec_label_pc_1c7bf:                               ; preds = %bb, %dec_label_pc_1c79c
  %v3_1c7bd = phi i32 [ %v2_1c7bd, %bb ], [ 0, %dec_label_pc_1c79c ]
  ret i32 %v3_1c7bd
}

define i32 @function_1c7c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c7c4:
  %v0_1c7c5 = load i32, i32* @eax, align 4
  ret i32 %v0_1c7c5
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c7c6:
  ret i32 %arg2
}

define i32 @function_1c804() local_unnamed_addr {
dec_label_pc_1c804:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c804 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c804 = add i32 %v0_1c804, -1
  store i32 %v1_1c804, i32* %ecx.global-to-local, align 4
  %v0_1c806 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c806
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEEEEvT_S8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c807:
  ret i32 %arg1
}

define i32 @function_1c844(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c844:
  %v0_1c844 = load i32, i32* @eax, align 4
  %v1_1c844 = load i32, i32* @ebp, align 4
  store i32 %v0_1c844, i32* @ebp, align 4
  %v1_1c84d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c84d = xor i32 %v1_1c84d, %v1_1c844
  %v3_1c84d = icmp eq i32 %v2_1c84d, 0
  store i32 %v2_1c84d, i32* @eax, align 4
  br i1 %v3_1c84d, label %bb, label %dec_label_pc_1c856

bb:                                               ; preds = %dec_label_pc_1c844
  %v1_1c854 = call i32 @function_1c85b()
  br label %dec_label_pc_1c856

dec_label_pc_1c856:                               ; preds = %bb, %dec_label_pc_1c844
  %v2_1c854 = phi i32 [ %v1_1c854, %bb ], [ %v2_1c84d, %dec_label_pc_1c844 ]
  ret i32 %v2_1c854
}

define i32 @function_1c85b() local_unnamed_addr {
dec_label_pc_1c85b:
  %v0_1c85c = load i32, i32* @eax, align 4
  ret i32 %v0_1c85c
}

define i32 @_ZSt12__miter_baseIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEEENSt11_Miter_baseIT_E13iterator_typeES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c85d:
  %v1_1c87a = call i32 @unknown_3b30d(i32 %arg1)
  store i32 %v1_1c87a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c88b

bb:                                               ; preds = %dec_label_pc_1c85d
  %v1_1c889 = call i32 @function_1c890()
  br label %dec_label_pc_1c88b

dec_label_pc_1c88b:                               ; preds = %bb, %dec_label_pc_1c85d
  %v2_1c889 = phi i32 [ %v1_1c889, %bb ], [ %v1_1c87a, %dec_label_pc_1c85d ]
  ret i32 %v2_1c889
}

define i32 @function_1c890() local_unnamed_addr {
dec_label_pc_1c890:
  %v0_1c891 = load i32, i32* @eax, align 4
  ret i32 %v0_1c891
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c892:
  %v1_1c8bd = call i32 @unknown_3b36f(i32 %arg3)
  %v1_1c8ca = call i32 @unknown_3b36f(i32 %arg2)
  %v1_1c8d7 = call i32 @unknown_3b36f(i32 %arg1)
  %v3_1c8e7 = call i32 @unknown_3b3a4(i32 %v1_1c8d7, i32 %v1_1c8ca, i32 %v1_1c8bd)
  store i32 %v3_1c8e7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c8f8

bb:                                               ; preds = %dec_label_pc_1c892
  %v1_1c8f6 = call i32 @function_1c8fd()
  br label %dec_label_pc_1c8f8

dec_label_pc_1c8f8:                               ; preds = %bb, %dec_label_pc_1c892
  %v2_1c8f6 = phi i32 [ %v1_1c8f6, %bb ], [ %v3_1c8e7, %dec_label_pc_1c892 ]
  ret i32 %v2_1c8f6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3b36f, { 2, 1, 0 }
}

define i32 @function_1c8fd() local_unnamed_addr {
dec_label_pc_1c8fd:
  %v0_1c903 = load i32, i32* @eax, align 4
  ret i32 %v0_1c903
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c904:
  %v1_1c921 = call i32 @unknown_3b46a(i32 %arg1)
  %v1_1c929 = call i32 @unknown_3b498(i32 %v1_1c921)
  store i32 %v1_1c929, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c93a

bb:                                               ; preds = %dec_label_pc_1c904
  %v1_1c938 = call i32 @function_1c93f()
  br label %dec_label_pc_1c93a

dec_label_pc_1c93a:                               ; preds = %bb, %dec_label_pc_1c904
  %v2_1c938 = phi i32 [ %v1_1c938, %bb ], [ %v1_1c929, %dec_label_pc_1c904 ]
  ret i32 %v2_1c938
}

define i32 @function_1c93f() local_unnamed_addr {
dec_label_pc_1c93f:
  %v0_1c940 = load i32, i32* @eax, align 4
  ret i32 %v0_1c940
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c942:
  %v1_1c96b = call i32 @unknown_3b4d6(i32 %arg1)
  %v10_1c970 = icmp ult i32 %v1_1c96b, %arg2
  %v1_1c973 = zext i1 %v10_1c970 to i32
  %v3_1c973 = and i32 %v1_1c96b, -256
  %v4_1c973 = or i32 %v1_1c973, %v3_1c973
  %v5_1c976 = icmp eq i1 %v10_1c970, false
  br i1 %v5_1c976, label %bb, label %dec_label_pc_1c97a

bb:                                               ; preds = %dec_label_pc_1c942
  %v1_1c978 = call i32 @function_1c97f()
  br label %dec_label_pc_1c97a

dec_label_pc_1c97a:                               ; preds = %bb, %dec_label_pc_1c942
  %v2_1c978 = phi i32 [ %v1_1c978, %bb ], [ %v4_1c973, %dec_label_pc_1c942 ]
  ret i32 %v2_1c978

; uselistorder directives
  uselistorder i1 %v10_1c970, { 1, 0 }
}

define i32 @function_1c97f() local_unnamed_addr {
dec_label_pc_1c97f:
  %v0_1c97f = load i32, i32* @ebp, align 4
  %v1_1c97f = add i32 %v0_1c97f, -32
  %v2_1c97f = inttoptr i32 %v1_1c97f to i32*
  %v3_1c97f = load i32, i32* %v2_1c97f, align 4
  %v2_1c989 = mul i32 %v3_1c97f, 20
  ret i32 %v2_1c989
}

define i32 @function_1c9a4() local_unnamed_addr {
dec_label_pc_1c9a4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c9a4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c9a4 = add i32 %v0_1c9a4, -1
  store i32 %v1_1c9a4, i32* %ecx.global-to-local, align 4
  %v0_1c9a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c9a6
}

define i32 @_ZSt22__uninitialized_copy_aIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_S4_ET0_T_S7_S6_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c9a7:
  %v7_1c9e4 = call i32 @unknown_3b56a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1c9e4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c9f5

bb:                                               ; preds = %dec_label_pc_1c9a7
  %v1_1c9f3 = call i32 @function_1c9fa()
  br label %dec_label_pc_1c9f5

dec_label_pc_1c9f5:                               ; preds = %bb, %dec_label_pc_1c9a7
  %v2_1c9f3 = phi i32 [ %v1_1c9f3, %bb ], [ %v7_1c9e4, %dec_label_pc_1c9a7 ]
  ret i32 %v2_1c9f3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c9fa() local_unnamed_addr {
dec_label_pc_1c9fa:
  %v0_1c9fb = load i32, i32* @eax, align 4
  ret i32 %v0_1c9fb
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_node10initializeEPvRKSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c9fc:
  store i32 0, i32* @eax, align 4
  %v2_1ca2a = call i32 @function_20c42(i32 4, i32 %arg1)
  %v1_1ca31 = icmp eq i32 %v2_1ca2a, 0
  br i1 %v1_1ca31, label %dec_label_pc_1ca44, label %dec_label_pc_1ca35

dec_label_pc_1ca35:                               ; preds = %dec_label_pc_1c9fc
  %v2_1ca3f = call i32 @unknown_3b60e(i32 %v2_1ca2a, i32 %arg2)
  br label %dec_label_pc_1ca44

dec_label_pc_1ca44:                               ; preds = %dec_label_pc_1ca35, %dec_label_pc_1c9fc
  store i32 2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ca55

bb:                                               ; preds = %dec_label_pc_1ca44
  %v1_1ca53 = call i32 @function_1ca74()
  store i32 %v1_1ca53, i32* @eax, align 4
  br label %dec_label_pc_1ca55

dec_label_pc_1ca55:                               ; preds = %bb, %dec_label_pc_1ca44
  %v0_1ca55 = call i32 @function_1ca6f()
  ret i32 %v0_1ca55
}

define i32 @function_1ca6f() local_unnamed_addr {
dec_label_pc_1ca6f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ca74() local_unnamed_addr {
dec_label_pc_1ca74:
  %v0_1ca7b = load i32, i32* @eax, align 4
  ret i32 %v0_1ca7b
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS3_INS5_INS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_nodeENS8_ILi3EEEEENSB_INS4_5list3IbxdEEEEE16initializer_nodeENS8_ILi4EEEEENSB_INS4_5list2IxdEEEEE16initializer_nodeENS8_ILi5EEEEENSB_INS4_5list1IdEEEEE16initializer_node10initializeEPvRKd(i32 %arg1, double* %arg2) local_unnamed_addr {
dec_label_pc_1ca7c:
  store i32 %arg1, i32* @eax, align 4
  %v2_1caa7 = call i32 @function_20cc2(i32 8, i32 %arg1)
  %v2_1caac = icmp eq i32 %v2_1caa7, 0
  br i1 %v2_1caac, label %dec_label_pc_1cab7, label %dec_label_pc_1cab0

dec_label_pc_1cab0:                               ; preds = %dec_label_pc_1ca7c
  %v3_1caa7 = inttoptr i32 %v2_1caa7 to double*
  %v2_1cab3 = load double, double* %arg2, align 4
  store double %v2_1cab3, double* %v3_1caa7, align 4
  br label %dec_label_pc_1cab7

dec_label_pc_1cab7:                               ; preds = %dec_label_pc_1cab0, %dec_label_pc_1ca7c
  store i32 5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cac8

bb:                                               ; preds = %dec_label_pc_1cab7
  %v1_1cac6 = call i32 @function_1cacd()
  br label %dec_label_pc_1cac8

dec_label_pc_1cac8:                               ; preds = %bb, %dec_label_pc_1cab7
  %v2_1cac6 = phi i32 [ %v1_1cac6, %bb ], [ 5, %dec_label_pc_1cab7 ]
  ret i32 %v2_1cac6

; uselistorder directives
  uselistorder i32 %v2_1caa7, { 1, 0 }
  uselistorder i32 5, { 2, 5, 4, 7, 3, 6, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cacd() local_unnamed_addr {
dec_label_pc_1cacd:
  %v0_1cace = load i32, i32* @eax, align 4
  ret i32 %v0_1cace
}

define i32 @_ZNSaIN11json_spirit9Pair_implINS_13Config_vectorISsEEEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cad0:
  %v2_1cafa = call i32 @unknown_3b752(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cb0b

bb:                                               ; preds = %dec_label_pc_1cad0
  %v1_1cb09 = call i32 @function_1cb10()
  br label %dec_label_pc_1cb0b

dec_label_pc_1cb0b:                               ; preds = %bb, %dec_label_pc_1cad0
  %v2_1cb09 = phi i32 [ %v1_1cb09, %bb ], [ 0, %dec_label_pc_1cad0 ]
  ret i32 %v2_1cb09
}

define i32 @function_1cb10() local_unnamed_addr {
dec_label_pc_1cb10:
  %v0_1cb11 = load i32, i32* @eax, align 4
  ret i32 %v0_1cb11
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEPS8_EET0_T_SH_SG_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cb12:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_1cb74 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1cb78 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1cb7e110 = call i32 @unknown_3b7c4(i32 %v2_1cb78, i32 %v4_1cb74)
  %v4_1cb83111 = trunc i32 %v2_1cb7e110 to i8
  %v5_1cb83112 = icmp eq i8 %v4_1cb83111, 0
  %v1_1cb85113 = icmp eq i1 %v5_1cb83112, false
  br i1 %v1_1cb85113, label %dec_label_pc_1cb3e, label %dec_label_pc_1cb87

dec_label_pc_1cb3e:                               ; preds = %dec_label_pc_1cb12, %dec_label_pc_1cb3e
  %storemerge114 = phi i32 [ %v4_1cb6d, %dec_label_pc_1cb3e ], [ %arg3, %dec_label_pc_1cb12 ]
  %v1_1cb44 = call i32 @unknown_3b852(i32 %v2_1cb78)
  %v1_1cb51 = call i32 @unknown_3ac34(i32 %storemerge114)
  %v2_1cb5d = call i32 @unknown_3b881(i32 %v1_1cb51, i32 %v1_1cb44)
  %v1_1cb68 = call i32 @unknown_3b818(i32 %v2_1cb78)
  %v4_1cb6d = add i32 %storemerge114, 24
  %v2_1cb7e = call i32 @unknown_3b7c4(i32 %v2_1cb78, i32 %v4_1cb74)
  %v4_1cb83 = trunc i32 %v2_1cb7e to i8
  %v5_1cb83 = icmp eq i8 %v4_1cb83, 0
  %v1_1cb85 = icmp eq i1 %v5_1cb83, false
  br i1 %v1_1cb85, label %dec_label_pc_1cb3e, label %dec_label_pc_1cb87

dec_label_pc_1cb87:                               ; preds = %dec_label_pc_1cb3e, %dec_label_pc_1cb12
  %storemerge.lcssa = phi i32 [ %arg3, %dec_label_pc_1cb12 ], [ %v4_1cb6d, %dec_label_pc_1cb3e ]
  store i32 %storemerge.lcssa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cb96

bb:                                               ; preds = %dec_label_pc_1cb87
  %v1_1cb94 = call i32 @function_1cbcd()
  store i32 %v1_1cb94, i32* @eax, align 4
  br label %dec_label_pc_1cb96

dec_label_pc_1cb96:                               ; preds = %bb, %dec_label_pc_1cb87
  %v0_1cb96 = call i32 @function_1cbc8()
  ret i32 %v0_1cb96

; uselistorder directives
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %v2_1cb78, { 3, 1, 2, 0 }
  uselistorder i32 %v4_1cb74, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_1cb3e, { 1, 0 }
}

define i32 @function_1cb99() local_unnamed_addr {
dec_label_pc_1cb99:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cb99 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cb99
}

define i32 @function_1cbb6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cbb6:
  %v0_1cbb8 = load i32, i32* @ebp, align 4
  %v1_1cbb8 = add i32 %v0_1cbb8, -36
  %v2_1cbb8 = inttoptr i32 %v1_1cbb8 to i32*
  %v3_1cbb8 = load i32, i32* %v2_1cbb8, align 4
  %v1_1cbbe = call i32 @unknown_36151(i32 %v3_1cbb8)
  ret i32 %v1_1cbbe
}

define i32 @function_1cbc8() local_unnamed_addr {
dec_label_pc_1cbc8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1cbcd() local_unnamed_addr {
dec_label_pc_1cbcd:
  %v0_1cbd2 = load i32, i32* @eax, align 4
  ret i32 %v0_1cbd2
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_9copy_intoEPKvEENT_11result_typeEiiRSO_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1cbd3:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1cc0c = load i32, i32* %ecx.global-to-local, align 4
  %v0_1cc10 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1cc10, 16777216
  %v12_1cc2f = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_1cc0c, 16777216
  %v13_1cc2f = sdiv i32 %sext1, 16777216
  %v14_1cc2f = call i32 @unknown_3b9bd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_1cc2f, i32 %v13_1cc2f, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cc40

bb:                                               ; preds = %dec_label_pc_1cbd3
  %v1_1cc3e = call i32 @function_1cc45()
  br label %dec_label_pc_1cc40

dec_label_pc_1cc40:                               ; preds = %bb, %dec_label_pc_1cbd3
  %v2_1cc3e = phi i32 [ %v1_1cc3e, %bb ], [ 0, %dec_label_pc_1cbd3 ]
  ret i32 %v2_1cc3e

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cc45() local_unnamed_addr {
dec_label_pc_1cc45:
  %v0_1cc46 = load i32, i32* @eax, align 4
  ret i32 %v0_1cc46
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E12using_backupEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1cc48:
  %v2_1cc62 = load i32, i32* %arg1, align 4
  %tmp103 = icmp slt i32 %v2_1cc62, 0
  %v2_1cc64 = zext i1 %tmp103 to i32
  store i32 %v2_1cc64, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cc73

bb:                                               ; preds = %dec_label_pc_1cc48
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1cc71 = call i32 @function_1cc78(i32 %tmp100)
  br label %dec_label_pc_1cc73

dec_label_pc_1cc73:                               ; preds = %bb, %dec_label_pc_1cc48
  %v3_1cc71 = phi i32 [ %v2_1cc71, %bb ], [ %v2_1cc64, %dec_label_pc_1cc48 ]
  ret i32 %v3_1cc71

; uselistorder directives
  uselistorder i32 %v2_1cc64, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1cc78(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cc78:
  %v0_1cc79 = load i32, i32* @eax, align 4
  ret i32 %v0_1cc79
}

define i32 @_ZN5boost3getIKxSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEENS2_IS3_INS4_10Value_implIS7_EESaISD_EEEEbxdNS_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cc7a:
  %stack_var_-17 = alloca i32, align 4
  %v10_1cc91 = icmp eq i32 %arg1, 0
  %v1_1cc95 = icmp eq i1 %v10_1cc91, false
  br i1 %v1_1cc95, label %dec_label_pc_1cc9e, label %dec_label_pc_1ccb0

dec_label_pc_1cc9e:                               ; preds = %dec_label_pc_1cc7a
  %v2_1cc9e = ptrtoint i32* %stack_var_-17 to i32
  %v2_1ccab = call i32 @unknown_3bf8e(i32 %arg1, i32 %v2_1cc9e)
  br label %dec_label_pc_1ccb0

dec_label_pc_1ccb0:                               ; preds = %dec_label_pc_1cc7a, %dec_label_pc_1cc9e
  %storemerge = phi i32 [ %v2_1ccab, %dec_label_pc_1cc9e ], [ 0, %dec_label_pc_1cc7a ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ccbc

bb:                                               ; preds = %dec_label_pc_1ccb0
  %v1_1ccba = call i32 @function_1ccc1()
  br label %dec_label_pc_1ccbc

dec_label_pc_1ccbc:                               ; preds = %bb, %dec_label_pc_1ccb0
  %v2_1ccba = phi i32 [ %v1_1ccba, %bb ], [ %storemerge, %dec_label_pc_1ccb0 ]
  ret i32 %v2_1ccba

; uselistorder directives
  uselistorder label %dec_label_pc_1ccb0, { 1, 0 }
}

define i32 @function_1ccc1() local_unnamed_addr {
dec_label_pc_1ccc1:
  %v0_1ccc2 = load i32, i32* @eax, align 4
  ret i32 %v0_1ccc2
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKdEEEENT_11result_typeERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ccc4:
  %stack_var_-20 = alloca i32, align 4
  %v2_1cce8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1ccee = call i32 @unknown_3c02c(i32 %v2_1cce8, i32 %arg2)
  %v2_1cd00 = call i32 @unknown_3c064(i32 %arg1, i32 %v2_1cce8)
  store i32 %v2_1cd00, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cd11

bb:                                               ; preds = %dec_label_pc_1ccc4
  %v1_1cd0f = call i32 @function_1cd16()
  br label %dec_label_pc_1cd11

dec_label_pc_1cd11:                               ; preds = %bb, %dec_label_pc_1ccc4
  %v2_1cd0f = phi i32 [ %v1_1cd0f, %bb ], [ %v2_1cd00, %dec_label_pc_1ccc4 ]
  ret i32 %v2_1cd0f
}

define i32 @function_1cd16() local_unnamed_addr {
dec_label_pc_1cd16:
  %v0_1cd17 = load i32, i32* @eax, align 4
  ret i32 %v0_1cd17
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_nodeENS8_ILi3EEEEENSB_INS4_5list3IbxdEEEEE16initializer_node10initializeEPvb(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_1cd18:
  store i32 %arg1, i32* @eax, align 4
  %v2_1cd43 = call i32 @function_20f5e(i32 1, i32 %arg1)
  %v2_1cd48 = icmp eq i32 %v2_1cd43, 0
  br i1 %v2_1cd48, label %dec_label_pc_1cd52, label %dec_label_pc_1cd4c

dec_label_pc_1cd4c:                               ; preds = %dec_label_pc_1cd18
  %v3_1cd43 = inttoptr i32 %v2_1cd43 to i8*
  store i8 %arg2, i8* %v3_1cd43, align 1
  br label %dec_label_pc_1cd52

dec_label_pc_1cd52:                               ; preds = %dec_label_pc_1cd4c, %dec_label_pc_1cd18
  store i32 3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cd63

bb:                                               ; preds = %dec_label_pc_1cd52
  %v1_1cd61 = call i32 @function_1cd68()
  br label %dec_label_pc_1cd63

dec_label_pc_1cd63:                               ; preds = %bb, %dec_label_pc_1cd52
  %v2_1cd61 = phi i32 [ %v1_1cd61, %bb ], [ 3, %dec_label_pc_1cd52 ]
  ret i32 %v2_1cd61

; uselistorder directives
  uselistorder i32 %v2_1cd43, { 1, 0 }
}

define i32 @function_1cd68() local_unnamed_addr {
dec_label_pc_1cd68:
  %v0_1cd69 = load i32, i32* @eax, align 4
  ret i32 %v0_1cd69
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cd6a:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cd9b

bb:                                               ; preds = %dec_label_pc_1cd6a
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1cd99 = call i32 @function_1cda0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1cd9b

dec_label_pc_1cd9b:                               ; preds = %bb, %dec_label_pc_1cd6a
  %v4_1cd99 = phi i32 [ %v3_1cd99, %bb ], [ 0, %dec_label_pc_1cd6a ]
  ret i32 %v4_1cd99

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1cda0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cda0:
  %v0_1cda1 = load i32, i32* @eax, align 4
  ret i32 %v0_1cda1
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKSsEEEEEENT_11result_typeERSQ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cda2:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1cdc3 = add i32 %tmp105, 4
  %v1_1cdc9 = call i32 @unknown_383c0(i32 %v1_1cdc3)
  %v1_1cdd6 = call i32 @unknown_37284(i32 %tmp105)
  %v2_1cde0 = load i32, i32* %arg1, align 4
  %v4_1cdf4 = call i32 @unknown_3c1b0(i32 %v2_1cde0, i32 %v1_1cdd6, i32 %arg2, i32 %v1_1cdc9)
  store i32 %v4_1cdf4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ce05

bb:                                               ; preds = %dec_label_pc_1cda2
  %v1_1ce03 = call i32 @function_1ce0a()
  br label %dec_label_pc_1ce05

dec_label_pc_1ce05:                               ; preds = %bb, %dec_label_pc_1cda2
  %v2_1ce03 = phi i32 [ %v1_1ce03, %bb ], [ %v4_1cdf4, %dec_label_pc_1cda2 ]
  ret i32 %v2_1ce03

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_1ce0a() local_unnamed_addr {
dec_label_pc_1ce0a:
  %v0_1ce0f = load i32, i32* @eax, align 4
  ret i32 %v0_1ce0f
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKbEEEENT_11result_typeERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ce10:
  %stack_var_-20 = alloca i32, align 4
  %v2_1ce34 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1ce3a = call i32 @unknown_3c292(i32 %v2_1ce34, i32 %arg2)
  %v2_1ce4c = call i32 @unknown_3c2ca(i32 %arg1, i32 %v2_1ce34)
  store i32 %v2_1ce4c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ce5d

bb:                                               ; preds = %dec_label_pc_1ce10
  %v1_1ce5b = call i32 @function_1ce62()
  br label %dec_label_pc_1ce5d

dec_label_pc_1ce5d:                               ; preds = %bb, %dec_label_pc_1ce10
  %v2_1ce5b = phi i32 [ %v1_1ce5b, %bb ], [ %v2_1ce4c, %dec_label_pc_1ce10 ]
  ret i32 %v2_1ce5b
}

define i32 @function_1ce62() local_unnamed_addr {
dec_label_pc_1ce62:
  %v0_1ce63 = load i32, i32* @eax, align 4
  ret i32 %v0_1ce63
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ce64:
  %stack_var_-17 = alloca i32, align 4
  %v1_1ce81 = call i32 @unknown_3c38c(i32 %arg1)
  %v2_1ce8a = ptrtoint i32* %stack_var_-17 to i32
  %v2_1ce90 = call i32 @unknown_39d9c(i32 %v2_1ce8a, i32 %v1_1ce81)
  store i32 %v2_1ce90, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cea1

bb:                                               ; preds = %dec_label_pc_1ce64
  %v1_1ce9f = call i32 @function_1cea6()
  br label %dec_label_pc_1cea1

dec_label_pc_1cea1:                               ; preds = %bb, %dec_label_pc_1ce64
  %v2_1ce9f = phi i32 [ %v1_1ce9f, %bb ], [ %v2_1ce90, %dec_label_pc_1ce64 ]
  ret i32 %v2_1ce9f
}

define i32 @function_1cea6() local_unnamed_addr {
dec_label_pc_1cea6:
  %v0_1cea7 = load i32, i32* @eax, align 4
  ret i32 %v0_1cea7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cea8:
  %v1_1cec2 = add i32 %arg1, 8
  %v2_1cec2 = inttoptr i32 %v1_1cec2 to i32*
  %v3_1cec2 = load i32, i32* %v2_1cec2, align 4
  store i32 %v3_1cec2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ced1

bb:                                               ; preds = %dec_label_pc_1cea8
  %v2_1cecf = call i32 @function_1ced6(i32 %arg1)
  br label %dec_label_pc_1ced1

dec_label_pc_1ced1:                               ; preds = %bb, %dec_label_pc_1cea8
  %v3_1cecf = phi i32 [ %v2_1cecf, %bb ], [ %v3_1cec2, %dec_label_pc_1cea8 ]
  ret i32 %v3_1cecf
}

define i32 @function_1ced6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ced6:
  %v0_1ced7 = load i32, i32* @eax, align 4
  ret i32 %v0_1ced7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ced8:
  %v1_1cef2 = add i32 %arg1, 12
  %v2_1cef2 = inttoptr i32 %v1_1cef2 to i32*
  %v3_1cef2 = load i32, i32* %v2_1cef2, align 4
  store i32 %v3_1cef2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cf01

bb:                                               ; preds = %dec_label_pc_1ced8
  %v2_1ceff = call i32 @function_1cf06(i32 %arg1)
  br label %dec_label_pc_1cf01

dec_label_pc_1cf01:                               ; preds = %bb, %dec_label_pc_1ced8
  %v3_1ceff = phi i32 [ %v2_1ceff, %bb ], [ %v3_1cef2, %dec_label_pc_1ced8 ]
  ret i32 %v3_1ceff
}

define i32 @function_1cf06(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf06:
  %v0_1cf07 = load i32, i32* @eax, align 4
  ret i32 %v0_1cf07
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf08:
  %v1_1cf22 = add i32 %arg1, 16
  store i32 %v1_1cf22, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cf31

bb:                                               ; preds = %dec_label_pc_1cf08
  %v2_1cf2f = call i32 @function_1cf36(i32 %arg1)
  br label %dec_label_pc_1cf31

dec_label_pc_1cf31:                               ; preds = %bb, %dec_label_pc_1cf08
  %v3_1cf2f = phi i32 [ %v2_1cf2f, %bb ], [ %v1_1cf22, %dec_label_pc_1cf08 ]
  ret i32 %v3_1cf2f
}

define i32 @function_1cf36(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf36:
  %v0_1cf37 = load i32, i32* @eax, align 4
  ret i32 %v0_1cf37
}

define i32 @_ZNKSt10_Select1stISt4pairIK7uint256P11CBlockIndexEEclERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cf38:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cf64

bb:                                               ; preds = %dec_label_pc_1cf38
  %v3_1cf62 = call i32 @function_1cf69(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1cf64

dec_label_pc_1cf64:                               ; preds = %bb, %dec_label_pc_1cf38
  %v4_1cf62 = phi i32 [ %v3_1cf62, %bb ], [ %arg2, %dec_label_pc_1cf38 ]
  ret i32 %v4_1cf62
}

define i32 @function_1cf69(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cf69:
  %v0_1cf6a = load i32, i32* @eax, align 4
  ret i32 %v0_1cf6a
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf6c:
  %v1_1cf86 = add i32 %arg1, 8
  %v2_1cf86 = inttoptr i32 %v1_1cf86 to i32*
  %v3_1cf86 = load i32, i32* %v2_1cf86, align 4
  store i32 %v3_1cf86, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cf95

bb:                                               ; preds = %dec_label_pc_1cf6c
  %v2_1cf93 = call i32 @function_1cf9a(i32 %arg1)
  br label %dec_label_pc_1cf95

dec_label_pc_1cf95:                               ; preds = %bb, %dec_label_pc_1cf6c
  %v3_1cf93 = phi i32 [ %v2_1cf93, %bb ], [ %v3_1cf86, %dec_label_pc_1cf6c ]
  ret i32 %v3_1cf93
}

define i32 @function_1cf9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf9a:
  %v0_1cf9b = load i32, i32* @eax, align 4
  ret i32 %v0_1cf9b
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf9c:
  %v1_1cfb6 = add i32 %arg1, 4
  store i32 %v1_1cfb6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cfc5

bb:                                               ; preds = %dec_label_pc_1cf9c
  %v2_1cfc3 = call i32 @function_1cfca(i32 %arg1)
  br label %dec_label_pc_1cfc5

dec_label_pc_1cfc5:                               ; preds = %bb, %dec_label_pc_1cf9c
  %v3_1cfc3 = phi i32 [ %v2_1cfc3, %bb ], [ %v1_1cfb6, %dec_label_pc_1cf9c ]
  ret i32 %v3_1cfc3
}

define i32 @function_1cfca(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cfca:
  %v0_1cfcb = load i32, i32* @eax, align 4
  ret i32 %v0_1cfcb
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_ESE_RS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1cfcc:
  %v10_1d04b117126 = icmp eq i32 %arg3, 0
  %v1_1d04f118127 = icmp eq i1 %v10_1d04b117126, false
  %v5_1d052122129 = icmp eq i1 %v1_1d04f118127, false
  %v1_1d054123130 = icmp eq i1 %v5_1d052122129, false
  br i1 %v1_1d054123130, label %dec_label_pc_1cffd.lr.ph, label %dec_label_pc_1d056

dec_label_pc_1cffd.lr.ph:                         ; preds = %dec_label_pc_1cfcc, %dec_label_pc_1d027
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_1d027 ], [ %arg4, %dec_label_pc_1cfcc ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_1d033, %dec_label_pc_1d027 ], [ %arg3, %dec_label_pc_1cfcc ]
  br label %dec_label_pc_1cffd

dec_label_pc_1cffd:                               ; preds = %dec_label_pc_1cffd.lr.ph, %dec_label_pc_1d03d
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_1cffd.lr.ph ], [ %v1_1d043, %dec_label_pc_1d03d ]
  %v1_1d003 = call i32 @unknown_39e30(i32 %stack_var_-40.0124)
  %v3_1d01b = call i32 @unknown_32afe(i32 %arg2, i32 %v1_1d003, i32 %arg5)
  %v1_1d020 = xor i32 %v3_1d01b, 1
  %v4_1d020 = trunc i32 %v1_1d020 to i8
  %v5_1d023 = icmp eq i8 %v4_1d020, 0
  br i1 %v5_1d023, label %dec_label_pc_1d03d, label %dec_label_pc_1d027

dec_label_pc_1d027:                               ; preds = %dec_label_pc_1cffd
  %v1_1d033 = call i32 @unknown_3c524(i32 %stack_var_-40.0124)
  %v10_1d04b117 = icmp eq i32 %v1_1d033, 0
  %v1_1d04f118 = icmp eq i1 %v10_1d04b117, false
  %v5_1d052122 = icmp eq i1 %v1_1d04f118, false
  %v1_1d054123 = icmp eq i1 %v5_1d052122, false
  br i1 %v1_1d054123, label %dec_label_pc_1cffd.lr.ph, label %dec_label_pc_1d056

dec_label_pc_1d03d:                               ; preds = %dec_label_pc_1cffd
  %v1_1d043 = call i32 @unknown_3c554(i32 %stack_var_-40.0124)
  %v10_1d04b = icmp eq i32 %v1_1d043, 0
  %v1_1d04f = icmp eq i1 %v10_1d04b, false
  %v5_1d052 = icmp eq i1 %v1_1d04f, false
  %v1_1d054 = icmp eq i1 %v5_1d052, false
  br i1 %v1_1d054, label %dec_label_pc_1cffd, label %dec_label_pc_1d056

dec_label_pc_1d056:                               ; preds = %dec_label_pc_1d03d, %dec_label_pc_1cfcc, %dec_label_pc_1d027
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_1cfcc ], [ %stack_var_-40.0124, %dec_label_pc_1d027 ], [ %stack_var_-44.0.ph132, %dec_label_pc_1d03d ]
  %v2_1d063 = call i32 @unknown_3a04c(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d077

bb:                                               ; preds = %dec_label_pc_1d056
  %v1_1d075 = call i32 @function_1d07c()
  br label %dec_label_pc_1d077

dec_label_pc_1d077:                               ; preds = %bb, %dec_label_pc_1d056
  %v2_1d075 = phi i32 [ %v1_1d075, %bb ], [ %arg1, %dec_label_pc_1d056 ]
  ret i32 %v2_1d075

; uselistorder directives
  uselistorder i32 %v1_1d033, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1d056, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1cffd, { 1, 0 }
  uselistorder label %dec_label_pc_1cffd.lr.ph, { 1, 0 }
}

define i32 @function_1d07c() local_unnamed_addr {
dec_label_pc_1d07c:
  %v0_1d07d = load i32, i32* @eax, align 4
  ret i32 %v0_1d07d
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEC1EPSt13_Rb_tree_nodeIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d080:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d0b1

bb:                                               ; preds = %dec_label_pc_1d080
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1d0af = call i32 @function_1d0b6(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1d0b1

dec_label_pc_1d0b1:                               ; preds = %bb, %dec_label_pc_1d080
  %v4_1d0af = phi i32 [ %v3_1d0af, %bb ], [ 0, %dec_label_pc_1d080 ]
  ret i32 %v4_1d0af

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1d0b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d0b6:
  %v0_1d0b7 = load i32, i32* @eax, align 4
  ret i32 %v0_1d0b7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d0b8:
  %v1_1d0d2 = add i32 %arg1, 16
  store i32 %v1_1d0d2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d0e1

bb:                                               ; preds = %dec_label_pc_1d0b8
  %v2_1d0df = call i32 @function_1d0e6(i32 %arg1)
  br label %dec_label_pc_1d0e1

dec_label_pc_1d0e1:                               ; preds = %bb, %dec_label_pc_1d0b8
  %v3_1d0df = phi i32 [ %v2_1d0df, %bb ], [ %v1_1d0d2, %dec_label_pc_1d0b8 ]
  ret i32 %v3_1d0df
}

define i32 @function_1d0e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d0e6:
  %v0_1d0e7 = load i32, i32* @eax, align 4
  ret i32 %v0_1d0e7
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d0e8:
  %v1_1d102 = add i32 %arg1, 20
  %v2_1d102 = inttoptr i32 %v1_1d102 to i32*
  %v3_1d102 = load i32, i32* %v2_1d102, align 4
  store i32 %v3_1d102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d111

bb:                                               ; preds = %dec_label_pc_1d0e8
  %v2_1d10f = call i32 @function_1d116(i32 %arg1)
  br label %dec_label_pc_1d111

dec_label_pc_1d111:                               ; preds = %bb, %dec_label_pc_1d0e8
  %v3_1d10f = phi i32 [ %v2_1d10f, %bb ], [ %v3_1d102, %dec_label_pc_1d0e8 ]
  ret i32 %v3_1d10f
}

define i32 @function_1d116(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d116:
  %v0_1d117 = load i32, i32* @eax, align 4
  ret i32 %v0_1d117
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1d118:
  %stack_var_-18 = alloca i32, align 4
  %v10_1d148 = icmp eq i32 %arg3, 0
  %v1_1d14c = icmp eq i1 %v10_1d148, false
  br i1 %v1_1d14c, label %dec_label_pc_1d1a0, label %dec_label_pc_1d14e

dec_label_pc_1d14e:                               ; preds = %dec_label_pc_1d118
  %v1_1d154 = call i32 @unknown_3a0b4(i32 %arg2)
  %v15_1d159 = icmp eq i32 %v1_1d154, %arg4
  br i1 %v15_1d159, label %dec_label_pc_1d1a0, label %dec_label_pc_1d15e

dec_label_pc_1d15e:                               ; preds = %dec_label_pc_1d14e
  %v1_1d164 = call i32 @unknown_37ac0(i32 %arg4)
  %v2_1d172 = ptrtoint i32* %stack_var_-18 to i32
  %v2_1d178 = call i32 @unknown_3a050(i32 %v2_1d172, i32 %arg5)
  %v3_1d18b = call i32 @unknown_32c4a(i32 %arg2, i32 %v2_1d178, i32 %v1_1d164)
  %v4_1d190 = trunc i32 %v3_1d18b to i8
  %v5_1d190 = icmp ne i8 %v4_1d190, 0
  %phitmp = zext i1 %v5_1d190 to i32
  br label %dec_label_pc_1d1a0

dec_label_pc_1d1a0:                               ; preds = %dec_label_pc_1d15e, %dec_label_pc_1d118, %dec_label_pc_1d14e
  %storemerge = phi i32 [ 1, %dec_label_pc_1d14e ], [ 1, %dec_label_pc_1d118 ], [ %phitmp, %dec_label_pc_1d15e ]
  %v2_1d1b0 = call i32 @unknown_3c6d0(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d1a0, { 0, 2, 1 }
}

define i32 @function_1d210() local_unnamed_addr {
dec_label_pc_1d210:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d210 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d210 = add i32 %v0_1d210, 1566262468
  %v2_1d210 = inttoptr i32 %v1_1d210 to i32*
  %v3_1d210 = load i32, i32* %v2_1d210, align 4
  %v4_1d210 = add i32 %v3_1d210, 1
  store i32 %v4_1d210, i32* %v2_1d210, align 4
  %v0_1d216 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d216
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE16_M_insert_uniqueERKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d21a:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %v1_1d244 = call i32 @unknown_3a186(i32 %arg2)
  %v1_1d252 = call i32 @unknown_3a1b6(i32 %arg2)
  %v2_1d27a = ptrtoint i32* %stack_var_-22 to i32
  %v10_1d2bc121 = icmp eq i32 %v1_1d244, 0
  %v1_1d2c0122 = icmp eq i1 %v10_1d2bc121, false
  %v5_1d2c3126 = icmp eq i1 %v1_1d2c0122, false
  %v1_1d2c5127 = icmp eq i1 %v5_1d2c3126, false
  br i1 %v1_1d2c5127, label %dec_label_pc_1d260, label %dec_label_pc_1d2c7

dec_label_pc_1d260:                               ; preds = %dec_label_pc_1d21a, %dec_label_pc_1d2bc.backedge
  %stack_var_-32.0128 = phi i32 [ %storemerge2.be, %dec_label_pc_1d2bc.backedge ], [ %v1_1d244, %dec_label_pc_1d21a ]
  %v1_1d26c = call i32 @unknown_3a07e(i32 %stack_var_-32.0128)
  %v2_1d280 = call i32 @unknown_3a152(i32 %v2_1d27a, i32 %arg3)
  %v3_1d293 = call i32 @unknown_32d4c(i32 %arg2, i32 %v2_1d280, i32 %v1_1d26c)
  %v1_1d298 = trunc i32 %v3_1d293 to i8
  %v10_1d29b = icmp eq i8 %v1_1d298, 0
  br i1 %v10_1d29b, label %dec_label_pc_1d2ae, label %dec_label_pc_1d2a1

dec_label_pc_1d2a1:                               ; preds = %dec_label_pc_1d260
  %v1_1d2a7 = call i32 @unknown_3c772(i32 %stack_var_-32.0128)
  br label %dec_label_pc_1d2bc.backedge

dec_label_pc_1d2ae:                               ; preds = %dec_label_pc_1d260
  %v1_1d2b4 = call i32 @unknown_3c7a2(i32 %stack_var_-32.0128)
  br label %dec_label_pc_1d2bc.backedge

dec_label_pc_1d2bc.backedge:                      ; preds = %dec_label_pc_1d2ae, %dec_label_pc_1d2a1
  %storemerge2.be = phi i32 [ %v1_1d2b4, %dec_label_pc_1d2ae ], [ %v1_1d2a7, %dec_label_pc_1d2a1 ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_1d2ae ], [ %v1_1d298, %dec_label_pc_1d2a1 ]
  %v10_1d2bc = icmp eq i32 %storemerge2.be, 0
  %v1_1d2c0 = icmp eq i1 %v10_1d2bc, false
  %v5_1d2c3 = icmp eq i1 %v1_1d2c0, false
  %v1_1d2c5 = icmp eq i1 %v5_1d2c3, false
  br i1 %v1_1d2c5, label %dec_label_pc_1d260, label %dec_label_pc_1d2c7

dec_label_pc_1d2c7:                               ; preds = %dec_label_pc_1d2bc.backedge, %dec_label_pc_1d21a
  %stack_var_-28.0.lcssa = phi i32 [ %v1_1d252, %dec_label_pc_1d21a ], [ %stack_var_-32.0128, %dec_label_pc_1d2bc.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_1d21a ], [ %stack_var_-17.0.be, %dec_label_pc_1d2bc.backedge ]
  %v2_1d2ce = ptrtoint i32* %stack_var_-48 to i32
  %v2_1d2d4 = call i32 @unknown_3a29a(i32 %v2_1d2ce, i32 %stack_var_-28.0.lcssa)
  %v10_1d2d9 = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_1d2d9, label %bb, label %dec_label_pc_1d2e3

bb:                                               ; preds = %dec_label_pc_1d2c7
  %v1_1d2dd = call i32 @function_1d365()
  br label %dec_label_pc_1d2e3

dec_label_pc_1d2e3:                               ; preds = %bb, %dec_label_pc_1d2c7
  %v2_1d2e3 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1d2f0 = call i32 @unknown_3c890(i32 %v2_1d2e3, i32 %arg2)
  %v2_1d305 = call i32 @unknown_34c3c(i32 %v2_1d2ce, i32 %v2_1d2e3)
  %v4_1d30a = trunc i32 %v2_1d305 to i8
  %v5_1d30a = icmp eq i8 %v4_1d30a, 0
  br i1 %v5_1d30a, label %bb120, label %dec_label_pc_1d30e

bb120:                                            ; preds = %dec_label_pc_1d2e3
  %v1_1d30c = call i32 @function_1d35a()
  br label %dec_label_pc_1d30e

dec_label_pc_1d30e:                               ; preds = %bb120, %dec_label_pc_1d2e3
  %v2_1d312 = ptrtoint i32* %stack_var_-40 to i32
  ret i32 %v2_1d312

; uselistorder directives
  uselistorder i32 %stack_var_-32.0128, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1d260, { 1, 0 }
}

define i32 @function_1d31a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d31a:
  %v0_1d31a = load i32, i32* @eax, align 4
  %v11_1d31a = and i32 %v0_1d31a, -240
  %v0_1d31c = load i32, i32* @ebp, align 4
  %v1_1d31c = add i32 %v0_1d31c, -24
  %v2_1d31c = inttoptr i32 %v1_1d31c to i32*
  %v3_1d31c = load i32, i32* %v2_1d31c, align 4
  %v1_1d323 = add i32 %v0_1d31c, -28
  %v2_1d323 = inttoptr i32 %v1_1d323 to i32*
  %v3_1d323 = load i32, i32* %v2_1d323, align 4
  %v1_1d32a = add i32 %v0_1d31c, -64
  %v2_1d32a = inttoptr i32 %v1_1d32a to i32*
  %v3_1d32a = load i32, i32* %v2_1d32a, align 4
  %v4_1d334 = call i32 @unknown_3a332(i32 %v11_1d31a, i32 %v3_1d32a, i32 %v3_1d323, i32 %v3_1d31c)
  %v0_1d33c = load i32, i32* @ebp, align 4
  %v1_1d33c = add i32 %v0_1d33c, -17
  %v1_1d343 = add i32 %v0_1d33c, -36
  %v1_1d34a = add i32 %v0_1d33c, -60
  %v2_1d34a = inttoptr i32 %v1_1d34a to i32*
  %v3_1d34a = load i32, i32* %v2_1d34a, align 4
  %v3_1d350 = call i32 @unknown_3c8da(i32 %v3_1d34a, i32 %v1_1d343, i32 %v1_1d33c)
  %v0_1d355 = call i32 @function_1d403()
  ret i32 %v0_1d355

; uselistorder directives
  uselistorder i32 -17, { 2, 0, 1 }
}

define i32 @function_1d35a() local_unnamed_addr {
dec_label_pc_1d35a:
  %v0_1d35a = load i32, i32* @ebp, align 4
  %v1_1d35a = add i32 %v0_1d35a, -44
  %v1_1d360 = call i32 @unknown_3c926(i32 %v1_1d35a)
  ret i32 %v1_1d360
}

define i32 @function_1d365() local_unnamed_addr {
dec_label_pc_1d365:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d365 = load i32, i32* @ebp, align 4
  %v1_1d365 = add i32 %v0_1d365, -68
  %v2_1d365 = inttoptr i32 %v1_1d365 to i32*
  %v3_1d365 = load i32, i32* %v2_1d365, align 4
  %v1_1d36c = add i32 %v0_1d365, -16
  %v2_1d372 = call i32 @unknown_3a152(i32 %v1_1d36c, i32 %v3_1d365)
  store i32 %v2_1d372, i32* %ebx.global-to-local, align 4
  %v0_1d379 = load i32, i32* @ebp, align 4
  %v1_1d379 = add i32 %v0_1d379, -44
  %v2_1d379 = inttoptr i32 %v1_1d379 to i32*
  %v3_1d379 = load i32, i32* %v2_1d379, align 4
  %v1_1d37f = call i32 @unknown_37bc2(i32 %v3_1d379)
  %v0_1d386 = load i32, i32* @ebp, align 4
  %v1_1d386 = add i32 %v0_1d386, -64
  %v2_1d386 = inttoptr i32 %v1_1d386 to i32*
  %v3_1d386 = load i32, i32* %v2_1d386, align 4
  %v0_1d389 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1d394 = call i32 @unknown_32d4c(i32 %v3_1d386, i32 %v1_1d37f, i32 %v0_1d389)
  %v4_1d399 = trunc i32 %v3_1d394 to i8
  %v5_1d399 = icmp eq i8 %v4_1d399, 0
  %v0_1d3e6 = load i32, i32* @ebp, align 4
  br i1 %v5_1d399, label %dec_label_pc_1d3e6, label %dec_label_pc_1d39d

dec_label_pc_1d39d:                               ; preds = %dec_label_pc_1d365
  %v1_1d39d = add i32 %v0_1d3e6, -15
  %v2_1d39d = inttoptr i32 %v1_1d39d to i8*
  store i8 1, i8* %v2_1d39d, align 1
  %v0_1d3a1 = load i32, i32* @ebp, align 4
  %v1_1d3a1 = add i32 %v0_1d3a1, -32
  %v1_1d3ab = add i32 %v0_1d3a1, -24
  %v2_1d3ab = inttoptr i32 %v1_1d3ab to i32*
  %v3_1d3ab = load i32, i32* %v2_1d3ab, align 4
  %v1_1d3b2 = add i32 %v0_1d3a1, -28
  %v2_1d3b2 = inttoptr i32 %v1_1d3b2 to i32*
  %v3_1d3b2 = load i32, i32* %v2_1d3b2, align 4
  %v1_1d3b9 = add i32 %v0_1d3a1, -64
  %v2_1d3b9 = inttoptr i32 %v1_1d3b9 to i32*
  %v3_1d3b9 = load i32, i32* %v2_1d3b9, align 4
  %v4_1d3c3 = call i32 @unknown_3a332(i32 %v1_1d3a1, i32 %v3_1d3b9, i32 %v3_1d3b2, i32 %v3_1d3ab)
  %v0_1d3cb = load i32, i32* @ebp, align 4
  %v1_1d3cb = add i32 %v0_1d3cb, -15
  %v1_1d3d2 = add i32 %v0_1d3cb, -32
  %v1_1d3d9 = add i32 %v0_1d3cb, -60
  %v2_1d3d9 = inttoptr i32 %v1_1d3d9 to i32*
  %v3_1d3d9 = load i32, i32* %v2_1d3d9, align 4
  %v3_1d3df = call i32 @unknown_3c8da(i32 %v3_1d3d9, i32 %v1_1d3d2, i32 %v1_1d3cb)
  %v0_1d3e4 = call i32 @function_1d403()
  ret i32 %v0_1d3e4

dec_label_pc_1d3e6:                               ; preds = %dec_label_pc_1d365
  %v1_1d3e6 = add i32 %v0_1d3e6, -14
  %v2_1d3e6 = inttoptr i32 %v1_1d3e6 to i8*
  store i8 0, i8* %v2_1d3e6, align 1
  %v0_1d3ea = load i32, i32* @ebp, align 4
  %v1_1d3ea = add i32 %v0_1d3ea, -14
  %v1_1d3f1 = add i32 %v0_1d3ea, -44
  %v1_1d3f8 = add i32 %v0_1d3ea, -60
  %v2_1d3f8 = inttoptr i32 %v1_1d3f8 to i32*
  %v3_1d3f8 = load i32, i32* %v2_1d3f8, align 4
  %v3_1d3fe = call i32 @unknown_3c8da(i32 %v3_1d3f8, i32 %v1_1d3f1, i32 %v1_1d3ea)
  ret i32 %v3_1d3fe

; uselistorder directives
  uselistorder i32 %v0_1d3a1, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1d3e6, { 1, 0 }
  uselistorder i32 ()* @function_1d403, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3c8da, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_3a332, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_32d4c, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3a152, { 1, 0 }
}

define i32 @function_1d403() local_unnamed_addr {
dec_label_pc_1d403:
  %v0_1d403 = load i32, i32* @ebp, align 4
  %v1_1d403 = add i32 %v0_1d403, -60
  %v2_1d403 = inttoptr i32 %v1_1d403 to i32*
  %v3_1d403 = load i32, i32* %v2_1d403, align 4
  store i32 %v3_1d403, i32* @eax, align 4
  %v1_1d406 = add i32 %v0_1d403, -12
  %v2_1d406 = inttoptr i32 %v1_1d406 to i32*
  %v3_1d406 = load i32, i32* %v2_1d406, align 4
  %v1_1d409 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1d409 = icmp eq i32 %v1_1d409, %v3_1d406
  br i1 %v3_1d409, label %bb, label %dec_label_pc_1d412

bb:                                               ; preds = %dec_label_pc_1d403
  %v1_1d410 = call i32 @function_1d417()
  br label %dec_label_pc_1d412

dec_label_pc_1d412:                               ; preds = %bb, %dec_label_pc_1d403
  %v2_1d410 = phi i32 [ %v1_1d410, %bb ], [ %v3_1d403, %dec_label_pc_1d403 ]
  ret i32 %v2_1d410
}

define i32 @function_1d417() local_unnamed_addr {
dec_label_pc_1d417:
  %v0_1d41b = load i32, i32* @eax, align 4
  ret i32 %v0_1d41b
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d41e:
  %v1_1d438 = add i32 %arg1, 12
  store i32 %v1_1d438, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d447

bb:                                               ; preds = %dec_label_pc_1d41e
  %v2_1d445 = call i32 @function_1d44c(i32 %arg1)
  br label %dec_label_pc_1d447

dec_label_pc_1d447:                               ; preds = %bb, %dec_label_pc_1d41e
  %v3_1d445 = phi i32 [ %v2_1d445, %bb ], [ %v1_1d438, %dec_label_pc_1d41e ]
  ret i32 %v3_1d445
}

define i32 @function_1d44c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d44c:
  %v0_1d44d = load i32, i32* @eax, align 4
  ret i32 %v0_1d44d
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256P11CBlockIndexEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d44e:
  %v2_1d468 = load i32, i32* %arg1, align 4
  ret i32 %v2_1d468
}

define i32 @function_1d48a() local_unnamed_addr {
dec_label_pc_1d48a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d48a = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d48a = add i32 %v0_1d48a, -1
  store i32 %v1_1d48a, i32* %ecx.global-to-local, align 4
  %v0_1d48c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d48c
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256P11CBlockIndexEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d48e:
  %v2_1d4a8 = load i32, i32* %arg1, align 4
  ret i32 %v2_1d4a8
}

define i32 @function_1d4ca() local_unnamed_addr {
dec_label_pc_1d4ca:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d4ca = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d4ca = add i32 %v0_1d4ca, -1
  store i32 %v1_1d4ca, i32* %ecx.global-to-local, align 4
  %v0_1d4cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d4cc
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint256P11CBlockIndexEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d4ce:
  %v2_1d4ee = load i32, i32* %arg2, align 4
  %v2_1d4fa = call i32 @unknown_3a54e(i32 %arg1, i32 %v2_1d4ee)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d50e

bb:                                               ; preds = %dec_label_pc_1d4ce
  %v1_1d50c = call i32 @function_1d513()
  br label %dec_label_pc_1d50e

dec_label_pc_1d50e:                               ; preds = %bb, %dec_label_pc_1d4ce
  %v2_1d50c = phi i32 [ %v1_1d50c, %bb ], [ %arg1, %dec_label_pc_1d4ce ]
  ret i32 %v2_1d50c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d513() local_unnamed_addr {
dec_label_pc_1d513:
  %v0_1d514 = load i32, i32* @eax, align 4
  ret i32 %v0_1d514
}

define i32 @_Z12SerReadWriteI11CDataStream12CBlockHeaderEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1d517:
  %v4_1d562 = call i32 @unknown_3cc62(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d578

bb:                                               ; preds = %dec_label_pc_1d517
  %v1_1d576 = call i32 @function_1d57d()
  br label %dec_label_pc_1d578

dec_label_pc_1d578:                               ; preds = %bb, %dec_label_pc_1d517
  %v2_1d576 = phi i32 [ %v1_1d576, %bb ], [ 0, %dec_label_pc_1d517 ]
  ret i32 %v2_1d576
}

define i32 @function_1d57d() local_unnamed_addr {
dec_label_pc_1d57d:
  %v0_1d57e = load i32, i32* @eax, align 4
  ret i32 %v0_1d57e
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI12CTransactionSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d57f:
  ret i32 %arg1
}

define i32 @function_1d588(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d588:
  %v0_1d588 = load i32, i32* @eax, align 4
  %v1_1d588 = load i32, i32* @ebp, align 4
  %v2_1d588 = add i32 %v1_1d588, -28
  %v3_1d588 = inttoptr i32 %v2_1d588 to i32*
  store i32 %v0_1d588, i32* %v3_1d588, align 4
  %v0_1d58b = load i32, i32* @ebp, align 4
  %v1_1d58b = add i32 %v0_1d58b, 12
  %v2_1d58b = inttoptr i32 %v1_1d58b to i32*
  %v3_1d58b = load i32, i32* %v2_1d58b, align 4
  %v2_1d58e = add i32 %v0_1d58b, -32
  %v3_1d58e = inttoptr i32 %v2_1d58e to i32*
  store i32 %v3_1d58b, i32* %v3_1d58e, align 4
  %v0_1d591 = load i32, i32* @ebp, align 4
  %v1_1d591 = add i32 %v0_1d591, 16
  %v2_1d591 = inttoptr i32 %v1_1d591 to i32*
  %v3_1d591 = load i32, i32* %v2_1d591, align 4
  %v2_1d594 = add i32 %v0_1d591, -36
  %v3_1d594 = inttoptr i32 %v2_1d594 to i32*
  store i32 %v3_1d591, i32* %v3_1d594, align 4
  %v0_1d597 = load i32, i32* @ebp, align 4
  %v1_1d597 = add i32 %v0_1d597, 20
  %v2_1d597 = inttoptr i32 %v1_1d597 to i32*
  %v3_1d597 = load i32, i32* %v2_1d597, align 4
  %v2_1d59a = add i32 %v0_1d597, -40
  %v3_1d59a = inttoptr i32 %v2_1d59a to i32*
  store i32 %v3_1d597, i32* %v3_1d59a, align 4
  %v0_1d59d = load i32, i32* @ebp, align 4
  %v1_1d59d = add i32 %v0_1d59d, 24
  %v2_1d59d = inttoptr i32 %v1_1d59d to i8*
  %v3_1d59d = load i8, i8* %v2_1d59d, align 1
  %v3_1d5a1 = add i32 %v0_1d59d, -41
  %v4_1d5a1 = inttoptr i32 %v3_1d5a1 to i8*
  store i8 %v3_1d59d, i8* %v4_1d5a1, align 1
  %v0_1d5a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1d5aa = load i32, i32* @ebp, align 4
  %v2_1d5aa = add i32 %v1_1d5aa, -12
  %v3_1d5aa = inttoptr i32 %v2_1d5aa to i32*
  store i32 %v0_1d5a4, i32* %v3_1d5aa, align 4
  %v0_1d5af = load i32, i32* @ebp, align 4
  %v1_1d5af = add i32 %v0_1d5af, -40
  %v2_1d5af = inttoptr i32 %v1_1d5af to i32*
  %v3_1d5af = load i32, i32* %v2_1d5af, align 4
  %v1_1d5b6 = add i32 %v0_1d5af, -36
  %v2_1d5b6 = inttoptr i32 %v1_1d5b6 to i32*
  %v3_1d5b6 = load i32, i32* %v2_1d5b6, align 4
  %v1_1d5bd = add i32 %v0_1d5af, -32
  %v2_1d5bd = inttoptr i32 %v1_1d5bd to i32*
  %v3_1d5bd = load i32, i32* %v2_1d5bd, align 4
  %v1_1d5c4 = add i32 %v0_1d5af, -28
  %v2_1d5c4 = inttoptr i32 %v1_1d5c4 to i32*
  %v3_1d5c4 = load i32, i32* %v2_1d5c4, align 4
  %v4_1d5ca = call i32 @unknown_3cd26(i32 %v3_1d5c4, i32 %v3_1d5bd, i32 %v3_1d5b6, i32 %v3_1d5af)
  store i32 0, i32* @eax, align 4
  %v0_1d5d4 = load i32, i32* @ebp, align 4
  %v1_1d5d4 = add i32 %v0_1d5d4, -12
  %v2_1d5d4 = inttoptr i32 %v1_1d5d4 to i32*
  %v3_1d5d4 = load i32, i32* %v2_1d5d4, align 4
  %v1_1d5d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1d5d7 = icmp eq i32 %v1_1d5d7, %v3_1d5d4
  br i1 %v3_1d5d7, label %bb, label %dec_label_pc_1d5e0

bb:                                               ; preds = %dec_label_pc_1d588
  %v1_1d5de = call i32 @function_1d5e5()
  br label %dec_label_pc_1d5e0

dec_label_pc_1d5e0:                               ; preds = %bb, %dec_label_pc_1d588
  %v2_1d5de = phi i32 [ %v1_1d5de, %bb ], [ 0, %dec_label_pc_1d588 ]
  ret i32 %v2_1d5de

; uselistorder directives
  uselistorder i32 %v0_1d5af, { 1, 0, 2, 3 }
}

define i32 @function_1d5e5() local_unnamed_addr {
dec_label_pc_1d5e5:
  %v0_1d5e6 = load i32, i32* @eax, align 4
  ret i32 %v0_1d5e6
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_node10initializeEPvRKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d5e7:
  store i32 0, i32* @eax, align 4
  %v2_1d615 = call i32 @function_2182d(i32 4, i32 %arg1)
  ret i32 %arg2
}

define i32 @function_1d62b() local_unnamed_addr {
dec_label_pc_1d62b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d62b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d62b
}

define i32 @function_1d62e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d62e:
  %v0_1d62e = load i32, i32* @eax, align 4
  %v1_1d62e = add i32 %v0_1d62e, 1
  %v2_1d62e = inttoptr i32 %v1_1d62e to i8*
  %v3_1d62e = load i8, i8* %v2_1d62e, align 1
  %v4_1d62e = load i32, i32* @ebx, align 4
  %v5_1d62e = udiv i32 %v4_1d62e, 256
  %v6_1d62e = trunc i32 %v5_1d62e to i8
  %v7_1d62e = add i8 %v6_1d62e, %v3_1d62e
  store i8 %v7_1d62e, i8* %v2_1d62e, align 1
  %v0_1d634 = load i32, i32* @ebp, align 4
  %v1_1d634 = add i32 %v0_1d634, -28
  %v2_1d634 = inttoptr i32 %v1_1d634 to i32*
  %v3_1d634 = load i32, i32* %v2_1d634, align 4
  %v1_1d637 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1d637 = icmp eq i32 %v1_1d637, %v3_1d634
  br i1 %v3_1d637, label %bb, label %dec_label_pc_1d640

bb:                                               ; preds = %dec_label_pc_1d62e
  %v1_1d63e = call i32 @function_1d65f()
  store i32 %v1_1d63e, i32* @eax, align 4
  br label %dec_label_pc_1d640

dec_label_pc_1d640:                               ; preds = %bb, %dec_label_pc_1d62e
  %v0_1d640 = call i32 @function_1d65a()
  ret i32 %v0_1d640
}

define i32 @function_1d65a() local_unnamed_addr {
dec_label_pc_1d65a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d65f() local_unnamed_addr {
dec_label_pc_1d65f:
  %v0_1d666 = load i32, i32* @eax, align 4
  ret i32 %v0_1d666
}

define i32 @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d667:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d693

bb:                                               ; preds = %dec_label_pc_1d667
  %v3_1d691 = call i32 @function_1d698(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1d693

dec_label_pc_1d693:                               ; preds = %bb, %dec_label_pc_1d667
  %v4_1d691 = phi i32 [ %v3_1d691, %bb ], [ %arg1, %dec_label_pc_1d667 ]
  ret i32 %v4_1d691
}

define i32 @function_1d698(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d698:
  %v0_1d699 = load i32, i32* @eax, align 4
  ret i32 %v0_1d699
}

define i32 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag() local_unnamed_addr {
dec_label_pc_1d69c:
  %eax.global-to-local = alloca i32, align 4
  %v17_1d69f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1d69f
}

define i32 @function_1d6a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d6a4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1d6a4 = load i32, i32* @ecx, align 4
  %v1_1d6a4 = add i32 %v0_1d6a4, 1166795845
  %v2_1d6a4 = inttoptr i32 %v1_1d6a4 to i8*
  %v3_1d6a4 = load i8, i8* %v2_1d6a4, align 1
  %v5_1d6a4 = trunc i32 %v0_1d6a4 to i8
  %v6_1d6a4 = or i8 %v3_1d6a4, %v5_1d6a4
  store i8 %v6_1d6a4, i8* %v2_1d6a4, align 1
  %v0_1d6aa = load i32, i32* @eax, align 4
  %v2_1d6aa = or i32 %v0_1d6aa, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_1d6aa, i32* %eax.global-to-local, align 4
  %v0_1d6ac = load i32, i32* @ebp, align 4
  %v1_1d6ac = add i32 %v0_1d6ac, 1
  %v9_1d6ac = icmp eq i32 %v1_1d6ac, 0
  store i32 %v1_1d6ac, i32* @ebp, align 4
  %v0_1d6ad = load i32, i32* @ecx, align 4
  %v1_1d6ad = add i32 %v0_1d6ad, -1
  %v2_1d6ad = icmp eq i32 %v1_1d6ad, 0
  %v4_1d6ad = or i1 %v9_1d6ac, %v2_1d6ad
  br i1 %v4_1d6ad, label %dec_label_pc_1d6af, label %dec_label_pc_1d6be

dec_label_pc_1d6af:                               ; preds = %dec_label_pc_1d6a4
  %v1_1d6b1 = add i32 %v2_1d6aa, -1587159227
  %v2_1d6b1 = inttoptr i32 %v1_1d6b1 to i8*
  %v3_1d6b1 = load i8, i8* %v2_1d6b1, align 1
  %v5_1d6b1 = trunc i32 %v1_1d6ad to i8
  %v8_1d6b1 = add i8 %v3_1d6b1, %v5_1d6b1
  %v28_1d6b1 = icmp ult i8 %v8_1d6b1, %v3_1d6b1
  store i1 %v28_1d6b1, i1* %cf.global-to-local, align 1
  store i8 %v8_1d6b1, i8* %v2_1d6b1, align 1
  %v0_1d6b7 = load i32, i32* %eax.global-to-local, align 4
  %v1_1d6b7 = trunc i32 %v0_1d6b7 to i8
  %v2_1d6b7 = load i1, i1* %cf.global-to-local, align 1
  %v3_1d6b7 = zext i1 %v2_1d6b7 to i8
  %v4_1d6b7 = add i8 %v3_1d6b7, %v1_1d6b7
  %v19_1d6b7 = icmp ule i8 %v4_1d6b7, %v1_1d6b7
  %v21_1d6b7 = icmp eq i1 %v2_1d6b7, %v19_1d6b7
  store i1 %v21_1d6b7, i1* %cf.global-to-local, align 1
  %v22_1d6b7 = zext i8 %v4_1d6b7 to i32
  %v24_1d6b7 = and i32 %v0_1d6b7, -256
  %v25_1d6b7 = or i32 %v22_1d6b7, %v24_1d6b7
  store i32 %v25_1d6b7, i32* %eax.global-to-local, align 4
  %v1_1d6b9 = inttoptr i32 %v25_1d6b7 to i8*
  %v2_1d6b9 = load i8, i8* %v1_1d6b9, align 1
  %v5_1d6b9 = add i8 %v2_1d6b9, %v4_1d6b7
  %v10_1d6b9 = icmp ult i8 %v5_1d6b9, %v2_1d6b9
  store i1 %v10_1d6b9, i1* %cf.global-to-local, align 1
  store i8 %v5_1d6b9, i8* %v1_1d6b9, align 1
  %v0_1d6bb = load i32, i32* %eax.global-to-local, align 4
  %v1_1d6bb = load i32, i32* @ebp, align 4
  %v2_1d6bb = add i32 %v1_1d6bb, -12
  %v3_1d6bb = inttoptr i32 %v2_1d6bb to i32*
  store i32 %v0_1d6bb, i32* %v3_1d6bb, align 4
  %v0_1d6c0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1d6be

dec_label_pc_1d6be:                               ; preds = %dec_label_pc_1d6a4, %dec_label_pc_1d6af
  %v0_1d6cc = phi i32 [ %v1_1d6ac, %dec_label_pc_1d6a4 ], [ %v0_1d6c0.pre, %dec_label_pc_1d6af ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1d6c0 = add i32 %v0_1d6cc, -32
  %v2_1d6c0 = inttoptr i32 %v1_1d6c0 to i32*
  %v3_1d6c0 = load i32, i32* %v2_1d6c0, align 4
  %v1_1d6c3 = add i32 %v0_1d6cc, -28
  %v2_1d6c3 = inttoptr i32 %v1_1d6c3 to i32*
  %v3_1d6c3 = load i32, i32* %v2_1d6c3, align 4
  %v2_1d6c8 = sub i32 %v3_1d6c0, %v3_1d6c3
  store i32 %v2_1d6c8, i32* @eax, align 4
  %v1_1d6cc = add i32 %v0_1d6cc, -12
  %v2_1d6cc = inttoptr i32 %v1_1d6cc to i32*
  %v3_1d6cc = load i32, i32* %v2_1d6cc, align 4
  %v1_1d6cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1d6cf = icmp eq i32 %v1_1d6cf, %v3_1d6cc
  br i1 %v3_1d6cf, label %bb, label %dec_label_pc_1d6d8

bb:                                               ; preds = %dec_label_pc_1d6be
  %v1_1d6d6 = call i32 @function_1d6dd()
  store i32 %v1_1d6d6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1d6d8

dec_label_pc_1d6d8:                               ; preds = %bb, %dec_label_pc_1d6be
  %v2_1d6d6 = phi i32 [ %v1_1d6d6, %bb ], [ %v2_1d6c8, %dec_label_pc_1d6be ]
  ret i32 %v2_1d6d6

; uselistorder directives
  uselistorder i32 %v0_1d6cc, { 0, 2, 1 }
  uselistorder i8 %v2_1d6b9, { 1, 0 }
  uselistorder i8 %v4_1d6b7, { 0, 2, 1 }
  uselistorder i8 %v1_1d6b7, { 1, 0 }
  uselistorder i8 %v3_1d6b1, { 1, 0 }
  uselistorder label %dec_label_pc_1d6be, { 1, 0 }
}

define i32 @function_1d6dd() local_unnamed_addr {
dec_label_pc_1d6dd:
  %v0_1d6de = load i32, i32* @eax, align 4
  ret i32 %v0_1d6de
}

define i32 @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d6df:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d70b

bb:                                               ; preds = %dec_label_pc_1d6df
  %v3_1d709 = call i32 @function_1d710(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1d70b

dec_label_pc_1d70b:                               ; preds = %bb, %dec_label_pc_1d6df
  %v4_1d709 = phi i32 [ %v3_1d709, %bb ], [ %arg1, %dec_label_pc_1d6df ]
  ret i32 %v4_1d709
}

define i32 @function_1d710(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d710:
  %v0_1d711 = load i32, i32* @eax, align 4
  ret i32 %v0_1d711
}

define i32 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1d714:
  %v2_1d740 = sub i32 %arg2, %arg1
  store i32 %v2_1d740, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d750

bb:                                               ; preds = %dec_label_pc_1d714
  %v4_1d74e = sext i8 %arg3 to i32
  %v5_1d74e = call i32 @function_1d755(i32 %v4_1d74e, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1d750

dec_label_pc_1d750:                               ; preds = %bb, %dec_label_pc_1d714
  %v6_1d74e = phi i32 [ %v5_1d74e, %bb ], [ %v2_1d740, %dec_label_pc_1d714 ]
  ret i32 %v6_1d74e
}

define i32 @function_1d755(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d755:
  %v0_1d756 = load i32, i32* @eax, align 4
  ret i32 %v0_1d756
}

define i32 @_ZSteqIcEbRKSaIT_ES3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d757:
  store i32 1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d785

bb:                                               ; preds = %dec_label_pc_1d757
  %v3_1d783 = call i32 @function_1d78a(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1d785

dec_label_pc_1d785:                               ; preds = %bb, %dec_label_pc_1d757
  %v4_1d783 = phi i32 [ %v3_1d783, %bb ], [ 1, %dec_label_pc_1d757 ]
  ret i32 %v4_1d783
}

define i32 @function_1d78a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d78a:
  %v0_1d78b = load i32, i32* @eax, align 4
  ret i32 %v0_1d78b
}

define i32 @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d78c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d7b2

bb:                                               ; preds = %dec_label_pc_1d78c
  %v2_1d7b0 = call i32 @function_1d7b7(i32 %arg1)
  br label %dec_label_pc_1d7b2

dec_label_pc_1d7b2:                               ; preds = %bb, %dec_label_pc_1d78c
  %v3_1d7b0 = phi i32 [ %v2_1d7b0, %bb ], [ %arg1, %dec_label_pc_1d78c ]
  ret i32 %v3_1d7b0
}

define i32 @function_1d7b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d7b7:
  %v0_1d7b8 = load i32, i32* @eax, align 4
  ret i32 %v0_1d7b8
}

define i32 @_ZSt22__copy_move_backward_aILb0EPcS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d7b9:
  %v3_1d7f4 = call i32 @unknown_3d085(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1d7f4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d805

bb:                                               ; preds = %dec_label_pc_1d7b9
  %v1_1d803 = call i32 @function_1d80a()
  br label %dec_label_pc_1d805

dec_label_pc_1d805:                               ; preds = %bb, %dec_label_pc_1d7b9
  %v2_1d803 = phi i32 [ %v1_1d803, %bb ], [ %v3_1d7f4, %dec_label_pc_1d7b9 ]
  ret i32 %v2_1d803
}

define i32 @function_1d80a() local_unnamed_addr {
dec_label_pc_1d80a:
  %v0_1d80b = load i32, i32* @eax, align 4
  ret i32 %v0_1d80b
}

define i32 @_ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d80c:
  %v1_1d829 = call i32 @unknown_3d149(i32 %arg1)
  store i32 %v1_1d829, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d83a

bb:                                               ; preds = %dec_label_pc_1d80c
  %v1_1d838 = call i32 @function_1d83f()
  br label %dec_label_pc_1d83a

dec_label_pc_1d83a:                               ; preds = %bb, %dec_label_pc_1d80c
  %v2_1d838 = phi i32 [ %v1_1d838, %bb ], [ %v1_1d829, %dec_label_pc_1d80c ]
  ret i32 %v2_1d838
}

define i32 @function_1d83f() local_unnamed_addr {
dec_label_pc_1d83f:
  %v0_1d840 = load i32, i32* @eax, align 4
  ret i32 %v0_1d840
}

define i32 @_ZSt14__copy_move_a2ILb0EPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET1_T0_SB_SA_() local_unnamed_addr {
dec_label_pc_1d841:
  %eax.global-to-local = alloca i32, align 4
  %v5_1d841 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_1d841
}

define i32 @function_1d842(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d842:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1d872 = call i32 @unknown_38c69(i32 %tmp6)
  %v1_1d87f = call i32 @unknown_3d1ab(i32 %tmp8)
  %v1_1d88c = call i32 @unknown_3d1ab(i32 %tmp10)
  %v3_1d89c = call i32 @unknown_3d0ba(i32 %v1_1d88c, i32 %v1_1d87f, i32 %v1_1d872)
  store i32 %v3_1d89c, i32* %stack_var_-16, align 4
  %v2_1d8a4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1d8b1 = call i32 @unknown_31855(i32 %arg1, i32 %v2_1d8a4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d8c5

bb:                                               ; preds = %dec_label_pc_1d842
  %v1_1d8c3 = call i32 @function_1d8ca()
  br label %dec_label_pc_1d8c5

dec_label_pc_1d8c5:                               ; preds = %bb, %dec_label_pc_1d842
  %v3_1d8c3 = phi i32 [ %v1_1d8c3, %bb ], [ %arg1, %dec_label_pc_1d842 ]
  ret i32 %v3_1d8c3

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3d1ab, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d8ca() local_unnamed_addr {
dec_label_pc_1d8ca:
  %v0_1d8d0 = load i32, i32* @eax, align 4
  ret i32 %v0_1d8d0
}

define i32 @_ZSt9__advanceIPKciEvRT_T0_St26random_access_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d8d3:
  %v2_1d8fa = load i32, i32* %arg1, align 4
  %v2_1d8ff = add i32 %v2_1d8fa, %arg2
  store i32 %v2_1d8ff, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d912

bb:                                               ; preds = %dec_label_pc_1d8d3
  %tmp104 = ptrtoint i32* %arg1 to i32
  %sext = mul i32 %arg3, 16777216
  %v4_1d910 = sdiv i32 %sext, 16777216
  %v5_1d910 = call i32 @function_1d917(i32 %v4_1d910, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1d912

dec_label_pc_1d912:                               ; preds = %bb, %dec_label_pc_1d8d3
  %v6_1d910 = phi i32 [ %v5_1d910, %bb ], [ 0, %dec_label_pc_1d8d3 ]
  ret i32 %v6_1d910

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_1d917(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d917:
  %v0_1d918 = load i32, i32* @eax, align 4
  ret i32 %v0_1d918
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d919:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_1d930 = ptrtoint i32* %stack_var_-32 to i32
  %v1_1d936 = call i32 @unknown_31a7f(i32 %v2_1d930)
  %v1_1d93b = inttoptr i32 %v1_1d936 to i32*
  %v2_1d93b = load i32, i32* %v1_1d93b, align 4
  store i32 %v2_1d93b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d949

bb:                                               ; preds = %dec_label_pc_1d919
  %v1_1d947 = call i32 @function_1d94e()
  br label %dec_label_pc_1d949

dec_label_pc_1d949:                               ; preds = %bb, %dec_label_pc_1d919
  %v2_1d947 = phi i32 [ %v1_1d947, %bb ], [ %v2_1d93b, %dec_label_pc_1d919 ]
  ret i32 %v2_1d947
}

define i32 @function_1d94e() local_unnamed_addr {
dec_label_pc_1d94e:
  %v0_1d94f = load i32, i32* @eax, align 4
  ret i32 %v0_1d94f
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d950:
  %v12_1d97b = icmp eq i32 %arg2, %arg1
  br i1 %v12_1d97b, label %bb, label %dec_label_pc_1d988

bb:                                               ; preds = %dec_label_pc_1d950
  %v4_1d986 = call i32 @function_1d9a1(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1d988

dec_label_pc_1d988:                               ; preds = %bb, %dec_label_pc_1d950
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d9a1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d9a1:
  %v0_1d9a1 = load i32, i32* @ebp, align 4
  %v1_1d9a1 = add i32 %v0_1d9a1, -16
  %v2_1d9a1 = inttoptr i32 %v1_1d9a1 to i32*
  %v3_1d9a1 = load i32, i32* %v2_1d9a1, align 4
  %v2_1d9a4 = add i32 %v0_1d9a1, -36
  %v3_1d9a4 = inttoptr i32 %v2_1d9a4 to i32*
  %v4_1d9a4 = load i32, i32* %v3_1d9a4, align 4
  %v5_1d9a4 = add i32 %v4_1d9a4, %v3_1d9a1
  store i32 %v5_1d9a4, i32* @eax, align 4
  %v1_1d9a7 = add i32 %v0_1d9a1, -12
  %v2_1d9a7 = inttoptr i32 %v1_1d9a7 to i32*
  %v3_1d9a7 = load i32, i32* %v2_1d9a7, align 4
  %v1_1d9aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1d9aa = icmp eq i32 %v1_1d9aa, %v3_1d9a7
  br i1 %v3_1d9aa, label %bb, label %dec_label_pc_1d9b3

bb:                                               ; preds = %dec_label_pc_1d9a1
  %v1_1d9b1 = call i32 @function_1d9b8()
  br label %dec_label_pc_1d9b3

dec_label_pc_1d9b3:                               ; preds = %bb, %dec_label_pc_1d9a1
  %v2_1d9b1 = phi i32 [ %v1_1d9b1, %bb ], [ %v5_1d9a4, %dec_label_pc_1d9a1 ]
  ret i32 %v2_1d9b1
}

define i32 @function_1d9b8() local_unnamed_addr {
dec_label_pc_1d9b8:
  %v0_1d9b9 = load i32, i32* @eax, align 4
  ret i32 %v0_1d9b9
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d9ba:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d9e3

bb:                                               ; preds = %dec_label_pc_1d9ba
  %v3_1d9e1 = call i32 @function_1d9e8(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1d9e3

dec_label_pc_1d9e3:                               ; preds = %bb, %dec_label_pc_1d9ba
  %v4_1d9e1 = phi i32 [ %v3_1d9e1, %bb ], [ 0, %dec_label_pc_1d9ba ]
  ret i32 %v4_1d9e1
}

define i32 @function_1d9e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d9e8:
  %v0_1d9e9 = load i32, i32* @eax, align 4
  ret i32 %v0_1d9e9
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d9ea:
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1da12

bb:                                               ; preds = %dec_label_pc_1d9ea
  %v2_1da10 = call i32 @function_1da17(i32 %arg1)
  br label %dec_label_pc_1da12

dec_label_pc_1da12:                               ; preds = %bb, %dec_label_pc_1d9ea
  %v3_1da10 = phi i32 [ %v2_1da10, %bb ], [ -1, %dec_label_pc_1d9ea ]
  ret i32 %v3_1da10
}

define i32 @function_1da17(i32 %arg1) local_unnamed_addr {
dec_label_pc_1da17:
  %v0_1da18 = load i32, i32* @eax, align 4
  ret i32 %v0_1da18
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1da19:
  %v12_1da44 = icmp eq i32 %arg2, %arg1
  br i1 %v12_1da44, label %bb, label %dec_label_pc_1da51

bb:                                               ; preds = %dec_label_pc_1da19
  %v4_1da4f = call i32 @function_1da6a(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1da51

dec_label_pc_1da51:                               ; preds = %bb, %dec_label_pc_1da19
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

declare i32 @memmove.1726(i32) local_unnamed_addr

define i32 @function_1da6a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1da6a:
  %v0_1da6a = load i32, i32* @ebp, align 4
  %v1_1da6a = add i32 %v0_1da6a, -16
  %v2_1da6a = inttoptr i32 %v1_1da6a to i32*
  %v3_1da6a = load i32, i32* %v2_1da6a, align 4
  %v2_1da6d = add i32 %v0_1da6a, -36
  %v3_1da6d = inttoptr i32 %v2_1da6d to i32*
  %v4_1da6d = load i32, i32* %v3_1da6d, align 4
  %v5_1da6d = add i32 %v4_1da6d, %v3_1da6a
  store i32 %v5_1da6d, i32* @eax, align 4
  %v1_1da70 = add i32 %v0_1da6a, -12
  %v2_1da70 = inttoptr i32 %v1_1da70 to i32*
  %v3_1da70 = load i32, i32* %v2_1da70, align 4
  %v1_1da73 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1da73 = icmp eq i32 %v1_1da73, %v3_1da70
  br i1 %v3_1da73, label %bb, label %dec_label_pc_1da7c

bb:                                               ; preds = %dec_label_pc_1da6a
  %v1_1da7a = call i32 @function_1da81()
  br label %dec_label_pc_1da7c

dec_label_pc_1da7c:                               ; preds = %bb, %dec_label_pc_1da6a
  %v2_1da7a = phi i32 [ %v1_1da7a, %bb ], [ %v5_1da6d, %dec_label_pc_1da6a ]
  ret i32 %v2_1da7a
}

define i32 @function_1da81() local_unnamed_addr {
dec_label_pc_1da81:
  %v0_1da82 = load i32, i32* @eax, align 4
  ret i32 %v0_1da82
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1da83:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1daaf

bb:                                               ; preds = %dec_label_pc_1da83
  %v3_1daad = call i32 @function_1dab4(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1daaf

dec_label_pc_1daaf:                               ; preds = %bb, %dec_label_pc_1da83
  %v4_1daad = phi i32 [ %v3_1daad, %bb ], [ %arg1, %dec_label_pc_1da83 ]
  ret i32 %v4_1daad
}

define i32 @function_1dab4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dab4:
  %v0_1dab5 = load i32, i32* @eax, align 4
  ret i32 %v0_1dab5
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1dab8:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_1dadf = ptrtoint i32* %stack_var_-32 to i32
  %v2_1dae3 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1dae9 = call i32 @unknown_2f3d6(i32 %v2_1dae3, i32 %v4_1dadf)
  store i32 %v2_1dae9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dafa

bb:                                               ; preds = %dec_label_pc_1dab8
  %v1_1daf8 = call i32 @function_1daff()
  br label %dec_label_pc_1dafa

dec_label_pc_1dafa:                               ; preds = %bb, %dec_label_pc_1dab8
  %v2_1daf8 = phi i32 [ %v1_1daf8, %bb ], [ %v2_1dae9, %dec_label_pc_1dab8 ]
  ret i32 %v2_1daf8
}

define i32 @function_1daff() local_unnamed_addr {
dec_label_pc_1daff:
  %v0_1db00 = load i32, i32* @eax, align 4
  ret i32 %v0_1db00
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1db01:
  %v1_1db2c = call i32 @unknown_390e9(i32 %arg3)
  %v1_1db39 = call i32 @unknown_36688(i32 %arg2)
  %v1_1db46 = call i32 @unknown_36688(i32 %arg1)
  %v3_1db56 = call i32 @unknown_39069(i32 %v1_1db46, i32 %v1_1db39, i32 %v1_1db2c)
  store i32 %v3_1db56, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1db67

bb:                                               ; preds = %dec_label_pc_1db01
  %v1_1db65 = call i32 @function_1db6c()
  br label %dec_label_pc_1db67

dec_label_pc_1db67:                               ; preds = %bb, %dec_label_pc_1db01
  %v2_1db65 = phi i32 [ %v1_1db65, %bb ], [ %v3_1db56, %dec_label_pc_1db01 ]
  ret i32 %v2_1db65

; uselistorder directives
  uselistorder i32 (i32)* @unknown_36688, { 1, 0 }
}

define i32 @function_1db6c() local_unnamed_addr {
dec_label_pc_1db6c:
  %v0_1db72 = load i32, i32* @eax, align 4
  ret i32 %v0_1db72
}

define i32 @_ZSt11__addressofI5CTxInEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1db73:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1db99

bb:                                               ; preds = %dec_label_pc_1db73
  %v2_1db97 = call i32 @function_1db9e(i32 %arg1)
  br label %dec_label_pc_1db99

dec_label_pc_1db99:                               ; preds = %bb, %dec_label_pc_1db73
  %v3_1db97 = phi i32 [ %v2_1db97, %bb ], [ %arg1, %dec_label_pc_1db73 ]
  ret i32 %v3_1db97
}

define i32 @function_1db9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1db9e:
  %v0_1db9f = load i32, i32* @eax, align 4
  ret i32 %v0_1db9f
}

define i32 @_ZN5CTxInD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dba0:
  %v1_1dbba = add i32 %arg1, 36
  %v1_1dbc0 = call i32 @unknown_2c406(i32 %v1_1dbba)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dbd1

bb:                                               ; preds = %dec_label_pc_1dba0
  %v1_1dbcf = call i32 @function_1dbd6()
  br label %dec_label_pc_1dbd1

dec_label_pc_1dbd1:                               ; preds = %bb, %dec_label_pc_1dba0
  %v2_1dbcf = phi i32 [ %v1_1dbcf, %bb ], [ 0, %dec_label_pc_1dba0 ]
  ret i32 %v2_1dbcf
}

define i32 @function_1dbd6() local_unnamed_addr {
dec_label_pc_1dbd6:
  %v0_1dbd7 = load i32, i32* @eax, align 4
  ret i32 %v0_1dbd7
}

define i32 @_ZSt8_DestroyI5CTxInEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dbd8:
  %v1_1dbf5 = call i32 @unknown_3b778(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dc06

bb:                                               ; preds = %dec_label_pc_1dbd8
  %v1_1dc04 = call i32 @function_1dc0b()
  br label %dec_label_pc_1dc06

dec_label_pc_1dc06:                               ; preds = %bb, %dec_label_pc_1dbd8
  %v2_1dc04 = phi i32 [ %v1_1dc04, %bb ], [ 0, %dec_label_pc_1dbd8 ]
  ret i32 %v2_1dc04
}

define i32 @function_1dc0b() local_unnamed_addr {
dec_label_pc_1dc0b:
  %v0_1dc0c = load i32, i32* @eax, align 4
  ret i32 %v0_1dc0c
}

define i32 @_ZSt11__addressofI6CTxOutEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dc0d:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dc33

bb:                                               ; preds = %dec_label_pc_1dc0d
  %v2_1dc31 = call i32 @function_1dc38(i32 %arg1)
  br label %dec_label_pc_1dc33

dec_label_pc_1dc33:                               ; preds = %bb, %dec_label_pc_1dc0d
  %v3_1dc31 = phi i32 [ %v2_1dc31, %bb ], [ %arg1, %dec_label_pc_1dc0d ]
  ret i32 %v3_1dc31
}

define i32 @function_1dc38(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dc38:
  %v0_1dc39 = load i32, i32* @eax, align 4
  ret i32 %v0_1dc39
}

define i32 @_ZSt8_DestroyI6CTxOutEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dc3a:
  %v1_1dc57 = call i32 @unknown_2ca78(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dc68

bb:                                               ; preds = %dec_label_pc_1dc3a
  %v1_1dc66 = call i32 @function_1dc6d()
  br label %dec_label_pc_1dc68

dec_label_pc_1dc68:                               ; preds = %bb, %dec_label_pc_1dc3a
  %v2_1dc66 = phi i32 [ %v1_1dc66, %bb ], [ 0, %dec_label_pc_1dc3a ]
  ret i32 %v2_1dc66
}

define i32 @function_1dc6d() local_unnamed_addr {
dec_label_pc_1dc6d:
  %v0_1dc6e = load i32, i32* @eax, align 4
  ret i32 %v0_1dc6e
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dc70:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dc99

bb:                                               ; preds = %dec_label_pc_1dc70
  %v3_1dc97 = call i32 @function_1dc9e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1dc99

dec_label_pc_1dc99:                               ; preds = %bb, %dec_label_pc_1dc70
  %v4_1dc97 = phi i32 [ %v3_1dc97, %bb ], [ 0, %dec_label_pc_1dc70 ]
  ret i32 %v4_1dc97
}

define i32 @function_1dc9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dc9e:
  %v0_1dc9f = load i32, i32* @eax, align 4
  ret i32 %v0_1dc9f
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI6CTxOutE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dca0:
  store i32 214748364, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dcc8

bb:                                               ; preds = %dec_label_pc_1dca0
  %v2_1dcc6 = call i32 @function_1dccd(i32 %arg1)
  br label %dec_label_pc_1dcc8

dec_label_pc_1dcc8:                               ; preds = %bb, %dec_label_pc_1dca0
  %v3_1dcc6 = phi i32 [ %v2_1dcc6, %bb ], [ 214748364, %dec_label_pc_1dca0 ]
  ret i32 %v3_1dcc6
}

define i32 @function_1dccd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dccd:
  %v0_1dcce = load i32, i32* @eax, align 4
  ret i32 %v0_1dcce
}

define i32 @_ZSt10_ConstructI6CTxOutS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dccf:
  %v2_1dcfd = call i32 @function_21f15(i32 20, i32 %arg1)
  %v1_1dd04 = icmp eq i32 %v2_1dcfd, 0
  br i1 %v1_1dd04, label %bb, label %dec_label_pc_1dd08

bb:                                               ; preds = %dec_label_pc_1dccf
  %v1_1dd06 = call i32 @function_1dd31()
  br label %dec_label_pc_1dd08

dec_label_pc_1dd08:                               ; preds = %bb, %dec_label_pc_1dccf
  ret i32 %arg2
}

define i32 @function_1dd0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd0c:
  %v0_1dd0f = load i32, i32* @ebx, align 4
  %v1_1dd12 = call i32 @unknown_2cb45(i32 %v0_1dd0f)
  %v0_1dd17 = call i32 @function_1dd31()
  ret i32 %v0_1dd17
}

define i32 @function_1dd31() local_unnamed_addr {
dec_label_pc_1dd31:
  %v0_1dd31 = load i32, i32* @ebp, align 4
  %v1_1dd31 = add i32 %v0_1dd31, -28
  %v2_1dd31 = inttoptr i32 %v1_1dd31 to i32*
  %v3_1dd31 = load i32, i32* %v2_1dd31, align 4
  %v1_1dd34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1dd34 = xor i32 %v1_1dd34, %v3_1dd31
  %v3_1dd34 = icmp eq i32 %v2_1dd34, 0
  store i32 %v2_1dd34, i32* @eax, align 4
  br i1 %v3_1dd34, label %bb, label %dec_label_pc_1dd3d

bb:                                               ; preds = %dec_label_pc_1dd31
  %v1_1dd3b = call i32 @function_1dd42()
  br label %dec_label_pc_1dd3d

dec_label_pc_1dd3d:                               ; preds = %bb, %dec_label_pc_1dd31
  %v2_1dd3b = phi i32 [ %v1_1dd3b, %bb ], [ %v2_1dd34, %dec_label_pc_1dd31 ]
  ret i32 %v2_1dd3b
}

define i32 @function_1dd42() local_unnamed_addr {
dec_label_pc_1dd42:
  %v0_1dd49 = load i32, i32* @eax, align 4
  ret i32 %v0_1dd49
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1dd4a:
  %v10_1dd98110 = icmp eq i32 %arg2, 0
  %v1_1dd9c111 = icmp eq i1 %v10_1dd98110, false
  %v5_1dd9f115 = icmp eq i1 %v1_1dd9c111, false
  %v1_1dda1116 = icmp eq i1 %v5_1dd9f115, false
  br i1 %v1_1dda1116, label %dec_label_pc_1dd76, label %dec_label_pc_1dda3

dec_label_pc_1dd76:                               ; preds = %dec_label_pc_1dd4a, %dec_label_pc_1dd76
  %storemerge118 = phi i32 [ %v4_1dd94, %dec_label_pc_1dd76 ], [ %arg1, %dec_label_pc_1dd4a ]
  %stack_var_-36.0117 = phi i32 [ %v4_1dd90, %dec_label_pc_1dd76 ], [ %arg2, %dec_label_pc_1dd4a ]
  %v1_1dd7c = call i32 @unknown_3b957(i32 %storemerge118)
  %v2_1dd8b = call i32 @unknown_3ba19(i32 %v1_1dd7c, i32 %arg3)
  %v4_1dd90 = add i32 %stack_var_-36.0117, -1
  %v4_1dd94 = add i32 %storemerge118, 20
  %v10_1dd98 = icmp eq i32 %v4_1dd90, 0
  %v1_1dd9c = icmp eq i1 %v10_1dd98, false
  %v5_1dd9f = icmp eq i1 %v1_1dd9c, false
  %v1_1dda1 = icmp eq i1 %v5_1dd9f, false
  br i1 %v1_1dda1, label %dec_label_pc_1dd76, label %dec_label_pc_1dda3

dec_label_pc_1dda3:                               ; preds = %dec_label_pc_1dd76, %dec_label_pc_1dd4a
  %v0_1dda3 = call i32 @function_1ddd5()
  ret i32 %v0_1dda3

; uselistorder directives
  uselistorder i32 %v4_1dd90, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder label %dec_label_pc_1dd76, { 1, 0 }
}

define i32 @function_1dda6() local_unnamed_addr {
dec_label_pc_1dda6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1dda6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1dda6
}

define i32 @function_1ddd5() local_unnamed_addr {
dec_label_pc_1ddd5:
  %v0_1ddd5 = load i32, i32* @ebp, align 4
  %v1_1ddd5 = add i32 %v0_1ddd5, -12
  %v2_1ddd5 = inttoptr i32 %v1_1ddd5 to i32*
  %v3_1ddd5 = load i32, i32* %v2_1ddd5, align 4
  %v1_1ddd8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ddd8 = xor i32 %v1_1ddd8, %v3_1ddd5
  %v3_1ddd8 = icmp eq i32 %v2_1ddd8, 0
  store i32 %v2_1ddd8, i32* @eax, align 4
  br i1 %v3_1ddd8, label %bb, label %dec_label_pc_1dde1

bb:                                               ; preds = %dec_label_pc_1ddd5
  %v1_1dddf = call i32 @function_1dde6()
  br label %dec_label_pc_1dde1

dec_label_pc_1dde1:                               ; preds = %bb, %dec_label_pc_1ddd5
  %v2_1dddf = phi i32 [ %v1_1dddf, %bb ], [ %v2_1ddd8, %dec_label_pc_1ddd5 ]
  ret i32 %v2_1dddf
}

define i32 @function_1dde6() local_unnamed_addr {
dec_label_pc_1dde6:
  %v0_1ddeb = load i32, i32* @eax, align 4
  ret i32 %v0_1ddeb
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ddec:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1de0f

bb:                                               ; preds = %dec_label_pc_1ddec
  %v2_1de0d = call i32 @function_1de14(i32 %arg1)
  br label %dec_label_pc_1de0f

dec_label_pc_1de0f:                               ; preds = %bb, %dec_label_pc_1ddec
  %v3_1de0d = phi i32 [ %v2_1de0d, %bb ], [ 0, %dec_label_pc_1ddec ]
  ret i32 %v3_1de0d
}

define i32 @function_1de14(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de14:
  %v0_1de15 = load i32, i32* @eax, align 4
  ret i32 %v0_1de15
}

define i32 @_ZSt11__addressofI12CTransactionEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de16:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1de3c

bb:                                               ; preds = %dec_label_pc_1de16
  %v2_1de3a = call i32 @function_1de41(i32 %arg1)
  br label %dec_label_pc_1de3c

dec_label_pc_1de3c:                               ; preds = %bb, %dec_label_pc_1de16
  %v3_1de3a = phi i32 [ %v2_1de3a, %bb ], [ %arg1, %dec_label_pc_1de16 ]
  ret i32 %v3_1de3a
}

define i32 @function_1de41(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de41:
  %v0_1de42 = load i32, i32* @eax, align 4
  ret i32 %v0_1de42
}

define i32 @_ZSt8_DestroyI12CTransactionEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de43:
  %v1_1de60 = call i32 @unknown_2d32b(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1de71

bb:                                               ; preds = %dec_label_pc_1de43
  %v1_1de6f = call i32 @function_1de76()
  br label %dec_label_pc_1de71

dec_label_pc_1de71:                               ; preds = %bb, %dec_label_pc_1de43
  %v2_1de6f = phi i32 [ %v1_1de6f, %bb ], [ 0, %dec_label_pc_1de43 ]
  ret i32 %v2_1de6f
}

define i32 @function_1de76() local_unnamed_addr {
dec_label_pc_1de76:
  %v0_1de77 = load i32, i32* @eax, align 4
  ret i32 %v0_1de77
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de78:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1de9b

bb:                                               ; preds = %dec_label_pc_1de78
  %v2_1de99 = call i32 @function_1dea0(i32 %arg1)
  br label %dec_label_pc_1de9b

dec_label_pc_1de9b:                               ; preds = %bb, %dec_label_pc_1de78
  %v3_1de99 = phi i32 [ %v2_1de99, %bb ], [ 0, %dec_label_pc_1de78 ]
  ret i32 %v3_1de99
}

define i32 @function_1dea0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dea0:
  %v0_1dea1 = load i32, i32* @eax, align 4
  ret i32 %v0_1dea1
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK12CTransactionSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dea2:
  %v1_1dec2 = inttoptr i32 %arg2 to i32*
  %v2_1dec2 = load i32, i32* %v1_1dec2, align 4
  store i32 %v2_1dec2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ded5

bb:                                               ; preds = %dec_label_pc_1dea2
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1ded3 = call i32 @function_1deda(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1ded5

dec_label_pc_1ded5:                               ; preds = %bb, %dec_label_pc_1dea2
  %v4_1ded3 = phi i32 [ %v3_1ded3, %bb ], [ 0, %dec_label_pc_1dea2 ]
  ret i32 %v4_1ded3

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1deda(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1deda:
  %v0_1dedb = load i32, i32* @eax, align 4
  ret i32 %v0_1dedb
}

define i32 @_Z9SerializeI11CDataStream9CFlatDataEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1dedc:
  %v8_1df20 = call i32 @unknown_3d87c(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1df31

bb:                                               ; preds = %dec_label_pc_1dedc
  %v1_1df2f = call i32 @function_1df36()
  br label %dec_label_pc_1df31

dec_label_pc_1df31:                               ; preds = %bb, %dec_label_pc_1dedc
  %v2_1df2f = phi i32 [ %v1_1df2f, %bb ], [ 0, %dec_label_pc_1dedc ]
  ret i32 %v2_1df2f

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1df36() local_unnamed_addr {
dec_label_pc_1df36:
  %v0_1df37 = load i32, i32* @eax, align 4
  ret i32 %v0_1df37
}

define i32 @_Z9SerializeI11CDataStreamEvRT_jii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1df38:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_1df69 = ptrtoint i32* %stack_var_-36 to i32
  %v7_1df76 = call i32 @function_2ba7c(i32 %arg1, i32 %v2_1df69, i32 4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1df87

bb:                                               ; preds = %dec_label_pc_1df38
  %v1_1df85 = call i32 @function_1df8c()
  br label %dec_label_pc_1df87

dec_label_pc_1df87:                               ; preds = %bb, %dec_label_pc_1df38
  %v2_1df85 = phi i32 [ %v1_1df85, %bb ], [ 0, %dec_label_pc_1df38 ]
  ret i32 %v2_1df85

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1df8c() local_unnamed_addr {
dec_label_pc_1df8c:
  %v0_1df8d = load i32, i32* @eax, align 4
  ret i32 %v0_1df8d
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1df8e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dfb7

bb:                                               ; preds = %dec_label_pc_1df8e
  %v3_1dfb5 = call i32 @function_1dfbc(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1dfb7

dec_label_pc_1dfb7:                               ; preds = %bb, %dec_label_pc_1df8e
  %v4_1dfb5 = phi i32 [ %v3_1dfb5, %bb ], [ 0, %dec_label_pc_1df8e ]
  ret i32 %v4_1dfb5
}

define i32 @function_1dfbc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dfbc:
  %v0_1dfbd = load i32, i32* @eax, align 4
  ret i32 %v0_1dfbd
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI5CTxInE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dfbe:
  store i32 82595524, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dfe6

bb:                                               ; preds = %dec_label_pc_1dfbe
  %v2_1dfe4 = call i32 @function_1dfeb(i32 %arg1)
  br label %dec_label_pc_1dfe6

dec_label_pc_1dfe6:                               ; preds = %bb, %dec_label_pc_1dfbe
  %v3_1dfe4 = phi i32 [ %v2_1dfe4, %bb ], [ 82595524, %dec_label_pc_1dfbe ]
  ret i32 %v3_1dfe4
}

define i32 @function_1dfeb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dfeb:
  %v0_1dfec = load i32, i32* @eax, align 4
  ret i32 %v0_1dfec
}

define i32 @_ZN5CTxInC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dfee:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_1e000 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp103, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v1_1e011 = inttoptr i32 %arg2 to i32*
  %v2_1e011 = load i32, i32* %v1_1e011, align 4
  store i32 %v2_1e011, i32* %arg1, align 4
  %v1_1e015 = add i32 %arg2, 4
  %v2_1e015 = inttoptr i32 %v1_1e015 to i32*
  %v3_1e015 = load i32, i32* %v2_1e015, align 4
  %v1_1e018 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e018 = add i32 %v1_1e018, 4
  %v3_1e018 = inttoptr i32 %v2_1e018 to i32*
  store i32 %v3_1e015, i32* %v3_1e018, align 4
  %v0_1e01b = load i32, i32* %edx.global-to-local, align 8
  %v1_1e01b = add i32 %v0_1e01b, 8
  %v2_1e01b = inttoptr i32 %v1_1e01b to i32*
  %v3_1e01b = load i32, i32* %v2_1e01b, align 4
  %v1_1e01e = load i32, i32* %eax.global-to-local, align 4
  %v2_1e01e = add i32 %v1_1e01e, 8
  %v3_1e01e = inttoptr i32 %v2_1e01e to i32*
  store i32 %v3_1e01b, i32* %v3_1e01e, align 4
  %v0_1e021 = load i32, i32* %edx.global-to-local, align 8
  %v1_1e021 = add i32 %v0_1e021, 12
  %v2_1e021 = inttoptr i32 %v1_1e021 to i32*
  %v3_1e021 = load i32, i32* %v2_1e021, align 4
  %v1_1e024 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e024 = add i32 %v1_1e024, 12
  %v3_1e024 = inttoptr i32 %v2_1e024 to i32*
  store i32 %v3_1e021, i32* %v3_1e024, align 4
  %v0_1e027 = load i32, i32* %edx.global-to-local, align 8
  %v1_1e027 = add i32 %v0_1e027, 16
  %v2_1e027 = inttoptr i32 %v1_1e027 to i32*
  %v3_1e027 = load i32, i32* %v2_1e027, align 4
  %v1_1e02a = load i32, i32* %eax.global-to-local, align 4
  %v2_1e02a = add i32 %v1_1e02a, 16
  %v3_1e02a = inttoptr i32 %v2_1e02a to i32*
  store i32 %v3_1e027, i32* %v3_1e02a, align 4
  %v0_1e02d = load i32, i32* %edx.global-to-local, align 8
  %v1_1e02d = add i32 %v0_1e02d, 20
  %v2_1e02d = inttoptr i32 %v1_1e02d to i32*
  %v3_1e02d = load i32, i32* %v2_1e02d, align 4
  %v1_1e030 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e030 = add i32 %v1_1e030, 20
  %v3_1e030 = inttoptr i32 %v2_1e030 to i32*
  store i32 %v3_1e02d, i32* %v3_1e030, align 4
  %v0_1e033 = load i32, i32* %edx.global-to-local, align 8
  %v1_1e033 = add i32 %v0_1e033, 24
  %v2_1e033 = inttoptr i32 %v1_1e033 to i32*
  %v3_1e033 = load i32, i32* %v2_1e033, align 4
  %v1_1e036 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e036 = add i32 %v1_1e036, 24
  %v3_1e036 = inttoptr i32 %v2_1e036 to i32*
  store i32 %v3_1e033, i32* %v3_1e036, align 4
  %v0_1e039 = load i32, i32* %edx.global-to-local, align 8
  %v1_1e039 = add i32 %v0_1e039, 28
  %v2_1e039 = inttoptr i32 %v1_1e039 to i32*
  %v3_1e039 = load i32, i32* %v2_1e039, align 4
  %v1_1e03c = load i32, i32* %eax.global-to-local, align 4
  %v2_1e03c = add i32 %v1_1e03c, 28
  %v3_1e03c = inttoptr i32 %v2_1e03c to i32*
  store i32 %v3_1e039, i32* %v3_1e03c, align 4
  %v0_1e03f = load i32, i32* %edx.global-to-local, align 8
  %v1_1e03f = add i32 %v0_1e03f, 32
  %v2_1e03f = inttoptr i32 %v1_1e03f to i32*
  %v3_1e03f = load i32, i32* %v2_1e03f, align 4
  %v1_1e042 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e042 = add i32 %v1_1e042, 32
  %v3_1e042 = inttoptr i32 %v2_1e042 to i32*
  store i32 %v3_1e03f, i32* %v3_1e042, align 4
  %v1_1e048 = add i32 %arg2, 36
  store i32 %v1_1e048, i32* %edx.global-to-local, align 8
  %v1_1e04e = add i32 %tmp103, 36
  store i32 %v1_1e04e, i32* %eax.global-to-local, align 4
  %v2_1e058 = call i32 @unknown_2c7a6(i32 %v1_1e04e, i32 %v1_1e048)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_1e060 = add i32 %arg2, ptrtoint (i32* @global_var_30.1817 to i32)
  %v2_1e060 = inttoptr i32 %v1_1e060 to i32*
  %v3_1e060 = load i32, i32* %v2_1e060, align 4
  store i32 %v3_1e060, i32* %edx.global-to-local, align 8
  %v2_1e066 = add i32 %tmp103, ptrtoint (i32* @global_var_30.1817 to i32)
  %v3_1e066 = inttoptr i32 %v2_1e066 to i32*
  store i32 %v3_1e060, i32* %v3_1e066, align 4
  store i32 %v0_1e000, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e075

bb:                                               ; preds = %dec_label_pc_1dfee
  %v1_1e073 = call i32 @function_1e07a()
  store i32 %v1_1e073, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1e075

dec_label_pc_1e075:                               ; preds = %bb, %dec_label_pc_1dfee
  %v2_1e073 = phi i32 [ %v1_1e073, %bb ], [ 0, %dec_label_pc_1dfee ]
  ret i32 %v2_1e073

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 0, 2, 1, 6 }
}

define i32 @function_1e07a() local_unnamed_addr {
dec_label_pc_1e07a:
  %v0_1e07b = load i32, i32* @eax, align 4
  ret i32 %v0_1e07b
}

define i32 @_ZSt10_ConstructI5CTxInS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e07c:
  store i32 0, i32* @eax, align 4
  %v2_1e0aa = call i32 @function_222c2(i32 ptrtoint (i32* @global_var_34.1820 to i32), i32 %arg1)
  %v1_1e0b1 = icmp eq i32 %v2_1e0aa, 0
  br i1 %v1_1e0b1, label %bb, label %dec_label_pc_1e0b5

bb:                                               ; preds = %dec_label_pc_1e07c
  %v1_1e0b3 = call i32 @function_1e0de()
  br label %dec_label_pc_1e0b5

dec_label_pc_1e0b5:                               ; preds = %bb, %dec_label_pc_1e07c
  %v2_1e0bf = call i32 @unknown_3c06a(i32 %v2_1e0aa, i32 %arg2)
  %v0_1e0c4 = call i32 @function_1e0de()
  ret i32 %v0_1e0c4

; uselistorder directives
  uselistorder i32 ()* @function_1e0de, { 1, 0 }
}

define i32 @function_1e0de() local_unnamed_addr {
dec_label_pc_1e0de:
  %v0_1e0de = load i32, i32* @ebp, align 4
  %v1_1e0de = add i32 %v0_1e0de, -28
  %v2_1e0de = inttoptr i32 %v1_1e0de to i32*
  %v3_1e0de = load i32, i32* %v2_1e0de, align 4
  %v1_1e0e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e0e1 = xor i32 %v1_1e0e1, %v3_1e0de
  %v3_1e0e1 = icmp eq i32 %v2_1e0e1, 0
  store i32 %v2_1e0e1, i32* @eax, align 4
  br i1 %v3_1e0e1, label %bb, label %dec_label_pc_1e0ea

bb:                                               ; preds = %dec_label_pc_1e0de
  %v1_1e0e8 = call i32 @function_1e0ef()
  br label %dec_label_pc_1e0ea

dec_label_pc_1e0ea:                               ; preds = %bb, %dec_label_pc_1e0de
  %v2_1e0e8 = phi i32 [ %v1_1e0e8, %bb ], [ %v2_1e0e1, %dec_label_pc_1e0de ]
  ret i32 %v2_1e0e8
}

define i32 @function_1e0ef() local_unnamed_addr {
dec_label_pc_1e0ef:
  %v0_1e0f6 = load i32, i32* @eax, align 4
  ret i32 %v0_1e0f6
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e0f8:
  %v0_1e104 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1e104
}

define i32 @function_1e118(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e118:
  %v0_1e118 = load i32, i32* @ebp, align 4
  %v1_1e118 = load i32, i32* @eax, align 4
  %v3_1e118 = add i32 %v0_1e118, -24
  %v4_1e118 = add i32 %v3_1e118, %v1_1e118
  %v5_1e118 = inttoptr i32 %v4_1e118 to i8*
  %v6_1e118 = load i8, i8* %v5_1e118, align 1
  %v7_1e118 = load i32, i32* @edx, align 8
  %v8_1e118 = udiv i32 %v7_1e118, 256
  %v9_1e118 = trunc i32 %v8_1e118 to i8
  %v10_1e118 = add i8 %v9_1e118, %v6_1e118
  store i8 %v10_1e118, i8* %v5_1e118, align 1
  %v31_1e118 = load i32, i32* @eax, align 4
  ret i32 %v31_1e118
}

define i32 @function_1e11f() local_unnamed_addr {
dec_label_pc_1e11f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1e11f = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e11f = add i32 %v0_1e11f, -1
  store i32 %v1_1e11f, i32* %ecx.global-to-local, align 4
  %v0_1e121 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e121
}

define i32 @_ZSt11__addressofIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e122:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e148

bb:                                               ; preds = %dec_label_pc_1e122
  %v2_1e146 = call i32 @function_1e14d(i32 %arg1)
  br label %dec_label_pc_1e148

dec_label_pc_1e148:                               ; preds = %bb, %dec_label_pc_1e122
  %v3_1e146 = phi i32 [ %v2_1e146, %bb ], [ %arg1, %dec_label_pc_1e122 ]
  ret i32 %v3_1e146
}

define i32 @function_1e14d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e14d:
  %v0_1e14e = load i32, i32* @eax, align 4
  ret i32 %v0_1e14e
}

define i32 @_ZSt8_DestroyIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e14f:
  %v1_1e16c = call i32 @unknown_2e47f(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e17d

bb:                                               ; preds = %dec_label_pc_1e14f
  %v1_1e17b = call i32 @function_1e182()
  br label %dec_label_pc_1e17d

dec_label_pc_1e17d:                               ; preds = %bb, %dec_label_pc_1e14f
  %v2_1e17b = phi i32 [ %v1_1e17b, %bb ], [ 0, %dec_label_pc_1e14f ]
  ret i32 %v2_1e17b
}

define i32 @function_1e182() local_unnamed_addr {
dec_label_pc_1e182:
  %v0_1e183 = load i32, i32* @eax, align 4
  ret i32 %v0_1e183
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1e184:
  %stack_var_-17 = alloca i32, align 4
  %v2_1e1bd = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_1e1bd
}

define i32 @function_1e1ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e1ce:
  %v0_1e1ce = load i32, i32* @ebp, align 4
  %v1_1e1ce = add i32 %v0_1e1ce, 1
  store i32 %v1_1e1ce, i32* @ebp, align 4
  %v0_1e1cf = load i32, i32* @eax, align 4
  %v1_1e1d4 = add i32 %v0_1e1ce, -35
  %v2_1e1d4 = inttoptr i32 %v1_1e1d4 to i32*
  %v3_1e1d4 = load i32, i32* %v2_1e1d4, align 4
  %v2_1e1da = call i32 @unknown_3b8db(i32 %v3_1e1d4, i32 %v0_1e1cf)
  %v4_1e1df = trunc i32 %v2_1e1da to i8
  %v5_1e1df = icmp ne i8 %v4_1e1df, 0
  %. = zext i1 %v5_1e1df to i32
  store i32 %., i32* @eax, align 4
  store i32 %., i32* @esi, align 4
  %v0_1e1f1 = load i32, i32* @ebx, align 4
  %v4_1e1f1 = trunc i32 %v0_1e1f1 to i8
  %v5_1e1f1 = icmp eq i8 %v4_1e1f1, 0
  br i1 %v5_1e1f1, label %bb, label %dec_label_pc_1e1f5

bb:                                               ; preds = %dec_label_pc_1e1ce
  %v1_1e1f3 = call i32 @function_1e200()
  br label %dec_label_pc_1e1f5

dec_label_pc_1e1f5:                               ; preds = %bb, %dec_label_pc_1e1ce
  %v0_1e1f5 = load i32, i32* @ebp, align 4
  %v1_1e1f5 = add i32 %v0_1e1f5, -13
  ret i32 %v1_1e1f5
}

define i32 @function_1e200() local_unnamed_addr {
dec_label_pc_1e200:
  %v0_1e200 = load i32, i32* @esi, align 4
  %v4_1e202 = trunc i32 %v0_1e200 to i8
  %v5_1e202 = icmp eq i8 %v4_1e202, 0
  br i1 %v5_1e202, label %bb, label %dec_label_pc_1e200.dec_label_pc_1e206_crit_edge

dec_label_pc_1e200.dec_label_pc_1e206_crit_edge:  ; preds = %dec_label_pc_1e200
  %v2_1e204.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1e206

bb:                                               ; preds = %dec_label_pc_1e200
  %v1_1e204 = call i32 @function_1e218()
  br label %dec_label_pc_1e206

dec_label_pc_1e206:                               ; preds = %dec_label_pc_1e200.dec_label_pc_1e206_crit_edge, %bb
  %v2_1e204 = phi i32 [ %v2_1e204.pre, %dec_label_pc_1e200.dec_label_pc_1e206_crit_edge ], [ %v1_1e204, %bb ]
  ret i32 %v2_1e204

; uselistorder directives
  uselistorder label %dec_label_pc_1e206, { 1, 0 }
}

define i32 @function_1e213() local_unnamed_addr {
dec_label_pc_1e213:
  %v0_1e213 = call i32 @function_1e2bb()
  ret i32 %v0_1e213
}

define i32 @function_1e218() local_unnamed_addr {
dec_label_pc_1e218:
  %v0_1e218 = load i32, i32* @ebp, align 4
  %v1_1e218 = add i32 %v0_1e218, -28
  %v2_1e218 = inttoptr i32 %v1_1e218 to i32*
  %v3_1e218 = load i32, i32* %v2_1e218, align 4
  %v2_1e21e = call i32 @unknown_3db87(i32 %v3_1e218)
  %v4_1e223 = trunc i32 %v2_1e21e to i8
  %v5_1e223 = icmp eq i8 %v4_1e223, 0
  br i1 %v5_1e223, label %bb, label %dec_label_pc_1e227

dec_label_pc_1e227:                               ; preds = %dec_label_pc_1e218
  %v0_1e227 = load i32, i32* @ebp, align 4
  %v1_1e227 = add i32 %v0_1e227, -28
  %v2_1e227 = inttoptr i32 %v1_1e227 to i32*
  %v3_1e227 = load i32, i32* %v2_1e227, align 4
  %v2_1e22a = add i32 %v0_1e227, -32
  %v3_1e22a = inttoptr i32 %v2_1e22a to i32*
  %v4_1e22a = load i32, i32* %v3_1e22a, align 4
  %v15_1e22a = icmp eq i32 %v3_1e227, %v4_1e22a
  br i1 %v15_1e22a, label %bb, label %dec_label_pc_1e23b

dec_label_pc_1e23b:                               ; preds = %dec_label_pc_1e227
  br label %dec_label_pc_1e23f

bb:                                               ; preds = %dec_label_pc_1e218, %dec_label_pc_1e227
  %v1_1e23d = call i32 @function_1e24b()
  br label %dec_label_pc_1e23f

dec_label_pc_1e23f:                               ; preds = %dec_label_pc_1e23b, %bb
  %v3_1e23f = phi i32 [ %v1_1e23d, %bb ], [ 1, %dec_label_pc_1e23b ]
  ret i32 %v3_1e23f

; uselistorder directives
  uselistorder label %dec_label_pc_1e23f, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_1e24b() local_unnamed_addr {
dec_label_pc_1e24b:
  %v0_1e24b = load i32, i32* @ebp, align 4
  %v1_1e24b = add i32 %v0_1e24b, -32
  %v2_1e24b = inttoptr i32 %v1_1e24b to i32*
  %v3_1e24b = load i32, i32* %v2_1e24b, align 4
  %v1_1e252 = add i32 %v0_1e24b, -28
  %v2_1e252 = inttoptr i32 %v1_1e252 to i32*
  %v3_1e252 = load i32, i32* %v2_1e252, align 4
  %v2_1e258 = call i32 @unknown_392ad(i32 %v3_1e252, i32 %v3_1e24b)
  %v1_1e25d = load i32, i32* @ebp, align 4
  %v2_1e25d = add i32 %v1_1e25d, -24
  %v3_1e25d = inttoptr i32 %v2_1e25d to i32*
  store i32 %v2_1e258, i32* %v3_1e25d, align 4
  %v0_1e260 = load i32, i32* @ebp, align 4
  %v1_1e26f = add i32 %v0_1e260, -24
  %v2_1e26f = inttoptr i32 %v1_1e26f to i32*
  %v3_1e26f = load i32, i32* %v2_1e26f, align 4
  ret i32 %v3_1e26f
}

define i32 @function_1e256(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e256:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e2a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e2a2:
  %v0_1e2a5 = load i32, i32* @ebp, align 4
  %v1_1e2a5 = add i32 %v0_1e2a5, -20
  %v2_1e2a5 = inttoptr i32 %v1_1e2a5 to i32*
  %v3_1e2a5 = load i32, i32* %v2_1e2a5, align 4
  ret i32 %v3_1e2a5
}

define i32 @function_1e2bb() local_unnamed_addr {
dec_label_pc_1e2bb:
  %v0_1e2bb = load i32, i32* @ebp, align 4
  %v1_1e2bb = add i32 %v0_1e2bb, -12
  %v2_1e2bb = inttoptr i32 %v1_1e2bb to i32*
  %v3_1e2bb = load i32, i32* %v2_1e2bb, align 4
  %v1_1e2be = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e2be = icmp eq i32 %v1_1e2be, %v3_1e2bb
  br i1 %v3_1e2be, label %bb, label %dec_label_pc_1e2c7

bb:                                               ; preds = %dec_label_pc_1e2bb
  %v1_1e2c5 = call i32 @function_1e2fe()
  store i32 %v1_1e2c5, i32* @eax, align 4
  br label %dec_label_pc_1e2c7

dec_label_pc_1e2c7:                               ; preds = %bb, %dec_label_pc_1e2bb
  %v0_1e2c7 = call i32 @function_1e2f9()
  ret i32 %v0_1e2c7
}

define i32 @function_1e2ca() local_unnamed_addr {
dec_label_pc_1e2ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e2ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e2ca
}

define i32 @function_1e2f9() local_unnamed_addr {
dec_label_pc_1e2f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e2fe() local_unnamed_addr {
dec_label_pc_1e2fe:
  %v0_1e304 = load i32, i32* @eax, align 4
  ret i32 %v0_1e304
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_9destroyerEPvNS_7variantISsSM_SS_bxdNS1_5void_ES19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_E18has_fallback_type_EEENT1_11result_typeEiiRS1C_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1e305:
  %v4_1e326 = zext i8 %arg5 to i32
  ret i32 %v4_1e326
}

define i32 @function_1e32e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e32e:
  %v0_1e330 = load i32, i32* @eax, align 4
  %v2_1e330 = load i1, i1* @cf, align 1
  %v3_1e330 = zext i1 %v2_1e330 to i32
  %v4_1e330 = add i32 %v0_1e330, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_88.1843 to i8) to i32))
  %v5_1e330 = add i32 %v4_1e330, %v3_1e330
  %v31_1e330 = urem i32 %v5_1e330, 256
  %v33_1e330 = and i32 %v0_1e330, -256
  %v34_1e330 = or i32 %v31_1e330, %v33_1e330
  %v0_1e332 = load i32, i32* @ebp, align 4
  %v1_1e332 = add i32 %v0_1e332, 1
  store i32 %v1_1e332, i32* @ebp, align 4
  ret i32 %v34_1e330

; uselistorder directives
  uselistorder i32 %v0_1e330, { 1, 0 }
}

define i32 @function_1e334() local_unnamed_addr {
dec_label_pc_1e334:
  %v0_1e334 = load i32, i32* @ebp, align 4
  %v1_1e334 = add i32 %v0_1e334, 32
  %v2_1e334 = inttoptr i32 %v1_1e334 to i32*
  %v3_1e334 = load i32, i32* %v2_1e334, align 4
  %v2_1e337 = add i32 %v0_1e334, -64
  %v3_1e337 = inttoptr i32 %v2_1e337 to i32*
  store i32 %v3_1e334, i32* %v3_1e337, align 4
  %v0_1e33a = load i32, i32* @ebp, align 4
  %v1_1e33a = add i32 %v0_1e33a, 36
  %v2_1e33a = inttoptr i32 %v1_1e33a to i32*
  %v3_1e33a = load i32, i32* %v2_1e33a, align 4
  %v2_1e33d = add i32 %v0_1e33a, -68
  %v3_1e33d = inttoptr i32 %v2_1e33d to i32*
  store i32 %v3_1e33a, i32* %v3_1e33d, align 4
  %v0_1e340 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1e346 = load i32, i32* @ebp, align 4
  %v2_1e346 = add i32 %v1_1e346, -28
  %v3_1e346 = inttoptr i32 %v2_1e346 to i32*
  store i32 %v0_1e340, i32* %v3_1e346, align 4
  %v0_1e34b = load i32, i32* @ebp, align 4
  %v1_1e34b = add i32 %v0_1e34b, -48
  %v2_1e34b = inttoptr i32 %v1_1e34b to i32*
  %v3_1e34b = load i32, i32* %v2_1e34b, align 4
  %tmp100 = icmp ult i32 %v3_1e34b, 20
  br i1 %tmp100, label %dec_label_pc_1e355, label %bb

bb:                                               ; preds = %dec_label_pc_1e334
  %v4_1e34f = call i32 @function_1e78e()
  %v0_1e355.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1e355

dec_label_pc_1e355:                               ; preds = %dec_label_pc_1e334, %bb
  %v0_1e355 = phi i32 [ %v0_1e34b, %dec_label_pc_1e334 ], [ %v0_1e355.pre, %bb ]
  %v1_1e355 = add i32 %v0_1e355, -48
  %v2_1e355 = inttoptr i32 %v1_1e355 to i32*
  %v3_1e355 = load i32, i32* %v2_1e355, align 4
  %v2_1e358 = mul i32 %v3_1e355, 4
  %v1_1e35b = add i32 %v2_1e358, ptrtoint (i32* @global_var_1e7e0.1844 to i32)
  %v1_1e360 = inttoptr i32 %v1_1e35b to i32*
  %v2_1e360 = load i32, i32* %v1_1e360, align 4
  ret i32 %v2_1e360

; uselistorder directives
  uselistorder i32 -68, { 0, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 1 }
  uselistorder label %dec_label_pc_1e355, { 1, 0 }
}

define i32 @function_1e364(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e364:
  %v0_1e36c = load i32, i32* @ebp, align 4
  %v1_1e36c = add i32 %v0_1e36c, -83
  %v2_1e36c = inttoptr i32 %v1_1e36c to i8*
  %v3_1e36c = load i8, i8* %v2_1e36c, align 1
  %v1_1e37c = add i32 %v0_1e36c, -56
  %v2_1e37c = inttoptr i32 %v1_1e37c to i32*
  %v3_1e37c = load i32, i32* %v2_1e37c, align 4
  %v1_1e383 = add i32 %v0_1e36c, -52
  %v2_1e383 = inttoptr i32 %v1_1e383 to i32*
  %v3_1e383 = load i32, i32* %v2_1e383, align 4
  %v1_1e38a = add i32 %v0_1e36c, -44
  %v2_1e38a = inttoptr i32 %v1_1e38a to i32*
  %v3_1e38a = load i32, i32* %v2_1e38a, align 4
  %v6_1e390 = sext i8 %v3_1e36c to i32
  %v7_1e390 = call i32 @unknown_3dd39(i32 %v3_1e38a, i32 %v3_1e383, i32 %v3_1e37c, i32 0, i32 %v6_1e390, i32 1)
  %v0_1e395 = call i32 @function_1e7c6()
  ret i32 %v0_1e395

; uselistorder directives
  uselistorder i32 %v0_1e36c, { 0, 2, 1, 3 }
}

define i32 @function_1e39a() local_unnamed_addr {
dec_label_pc_1e39a:
  %v0_1e3a2 = load i32, i32* @ebp, align 4
  %v1_1e3a2 = add i32 %v0_1e3a2, -82
  %v2_1e3a2 = inttoptr i32 %v1_1e3a2 to i8*
  %v3_1e3a2 = load i8, i8* %v2_1e3a2, align 1
  %v1_1e3b2 = add i32 %v0_1e3a2, -56
  %v2_1e3b2 = inttoptr i32 %v1_1e3b2 to i32*
  %v3_1e3b2 = load i32, i32* %v2_1e3b2, align 4
  %v1_1e3b9 = add i32 %v0_1e3a2, -52
  %v2_1e3b9 = inttoptr i32 %v1_1e3b9 to i32*
  %v3_1e3b9 = load i32, i32* %v2_1e3b9, align 4
  %v1_1e3c0 = add i32 %v0_1e3a2, -44
  %v2_1e3c0 = inttoptr i32 %v1_1e3c0 to i32*
  %v3_1e3c0 = load i32, i32* %v2_1e3c0, align 4
  %v6_1e3c6 = sext i8 %v3_1e3a2 to i32
  %v7_1e3c6 = call i32 @unknown_3dda6(i32 %v3_1e3c0, i32 %v3_1e3b9, i32 %v3_1e3b2, i32 0, i32 %v6_1e3c6, i32 1)
  %v0_1e3cb = call i32 @function_1e7c6()
  ret i32 %v0_1e3cb

; uselistorder directives
  uselistorder i32 %v0_1e3a2, { 0, 2, 1, 3 }
}

define i32 @function_1e3d0() local_unnamed_addr {
dec_label_pc_1e3d0:
  %v0_1e3d8 = load i32, i32* @ebp, align 4
  %v1_1e3d8 = add i32 %v0_1e3d8, -81
  %v2_1e3d8 = inttoptr i32 %v1_1e3d8 to i8*
  %v3_1e3d8 = load i8, i8* %v2_1e3d8, align 1
  %v1_1e3e8 = add i32 %v0_1e3d8, -56
  %v2_1e3e8 = inttoptr i32 %v1_1e3e8 to i32*
  %v3_1e3e8 = load i32, i32* %v2_1e3e8, align 4
  %v1_1e3ef = add i32 %v0_1e3d8, -52
  %v2_1e3ef = inttoptr i32 %v1_1e3ef to i32*
  %v3_1e3ef = load i32, i32* %v2_1e3ef, align 4
  %v1_1e3f6 = add i32 %v0_1e3d8, -44
  %v2_1e3f6 = inttoptr i32 %v1_1e3f6 to i32*
  %v3_1e3f6 = load i32, i32* %v2_1e3f6, align 4
  %v6_1e3fc = sext i8 %v3_1e3d8 to i32
  %v7_1e3fc = call i32 @unknown_3de13(i32 %v3_1e3f6, i32 %v3_1e3ef, i32 %v3_1e3e8, i32 0, i32 %v6_1e3fc, i32 1)
  %v0_1e401 = call i32 @function_1e7c6()
  ret i32 %v0_1e401

; uselistorder directives
  uselistorder i32 %v0_1e3d8, { 0, 2, 1, 3 }
}

define i32 @function_1e40a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e40a:
  %v2_1e40a = load i32, i32* @eax, align 4
  %v4_1e40a = mul i32 %v2_1e40a, 2
  %v21_1e40a = inttoptr i32 %v2_1e40a to i32*
  store i32 %v4_1e40a, i32* %v21_1e40a, align 4
  %v2_1e40c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1e40c = load i32, i32* @eax, align 4
  %v4_1e40c = trunc i32 %v3_1e40c to i8
  %v5_1e40c = add i8 %v4_1e40c, %v2_1e40c
  %v21_1e40c = inttoptr i32 %v3_1e40c to i8*
  store i8 %v5_1e40c, i8* %v21_1e40c, align 1
  %v0_1e40e = load i32, i32* @ebp, align 4
  %v1_1e40e = add i32 %v0_1e40e, -80
  %v2_1e40e = inttoptr i32 %v1_1e40e to i8*
  %v3_1e40e = load i8, i8* %v2_1e40e, align 1
  %v1_1e41e = add i32 %v0_1e40e, -56
  %v2_1e41e = inttoptr i32 %v1_1e41e to i32*
  %v3_1e41e = load i32, i32* %v2_1e41e, align 4
  %v1_1e425 = add i32 %v0_1e40e, -52
  %v2_1e425 = inttoptr i32 %v1_1e425 to i32*
  %v3_1e425 = load i32, i32* %v2_1e425, align 4
  %v1_1e42c = add i32 %v0_1e40e, -44
  %v2_1e42c = inttoptr i32 %v1_1e42c to i32*
  %v3_1e42c = load i32, i32* %v2_1e42c, align 4
  %v5_1e432 = sext i8 %v3_1e40e to i32
  %v6_1e432 = call i32 @unknown_3de80(i32 %v3_1e42c, i32 %v3_1e425, i32 %v3_1e41e, i32 0, i32 %v5_1e432)
  %v0_1e437 = call i32 @function_1e7c6()
  ret i32 %v0_1e437

; uselistorder directives
  uselistorder i32 %v0_1e40e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1e40a, { 1, 0 }
}

define i32 @function_1e43c() local_unnamed_addr {
dec_label_pc_1e43c:
  %v0_1e444 = load i32, i32* @ebp, align 4
  %v1_1e444 = add i32 %v0_1e444, -79
  %v2_1e444 = inttoptr i32 %v1_1e444 to i8*
  %v3_1e444 = load i8, i8* %v2_1e444, align 1
  %v1_1e454 = add i32 %v0_1e444, -56
  %v2_1e454 = inttoptr i32 %v1_1e454 to i32*
  %v3_1e454 = load i32, i32* %v2_1e454, align 4
  %v1_1e45b = add i32 %v0_1e444, -52
  %v2_1e45b = inttoptr i32 %v1_1e45b to i32*
  %v3_1e45b = load i32, i32* %v2_1e45b, align 4
  %v1_1e462 = add i32 %v0_1e444, -44
  %v2_1e462 = inttoptr i32 %v1_1e462 to i32*
  %v3_1e462 = load i32, i32* %v2_1e462, align 4
  %v6_1e468 = sext i8 %v3_1e444 to i32
  %v7_1e468 = call i32 @unknown_3deed(i32 %v3_1e462, i32 %v3_1e45b, i32 %v3_1e454, i32 0, i32 %v6_1e468, i32 1)
  %v0_1e46d = call i32 @function_1e7c6()
  ret i32 %v0_1e46d

; uselistorder directives
  uselistorder i32 %v0_1e444, { 0, 2, 1, 3 }
}

define i32 @function_1e472() local_unnamed_addr {
dec_label_pc_1e472:
  %v0_1e47a = load i32, i32* @ebp, align 4
  %v1_1e47a = add i32 %v0_1e47a, -78
  %v2_1e47a = inttoptr i32 %v1_1e47a to i8*
  %v3_1e47a = load i8, i8* %v2_1e47a, align 1
  %v1_1e48a = add i32 %v0_1e47a, -56
  %v2_1e48a = inttoptr i32 %v1_1e48a to i32*
  %v3_1e48a = load i32, i32* %v2_1e48a, align 4
  %v1_1e491 = add i32 %v0_1e47a, -52
  %v2_1e491 = inttoptr i32 %v1_1e491 to i32*
  %v3_1e491 = load i32, i32* %v2_1e491, align 4
  %v1_1e498 = add i32 %v0_1e47a, -44
  %v2_1e498 = inttoptr i32 %v1_1e498 to i32*
  %v3_1e498 = load i32, i32* %v2_1e498, align 4
  %v6_1e49e = sext i8 %v3_1e47a to i32
  %v7_1e49e = call i32 @unknown_3df5a(i32 %v3_1e498, i32 %v3_1e491, i32 %v3_1e48a, i32 0, i32 %v6_1e49e, i32 1)
  %v0_1e4a3 = call i32 @function_1e7c6()
  ret i32 %v0_1e4a3

; uselistorder directives
  uselistorder i32 %v0_1e47a, { 0, 2, 1, 3 }
}

define i32 @function_1e4a8() local_unnamed_addr {
dec_label_pc_1e4a8:
  %v0_1e4b0 = load i32, i32* @ebp, align 4
  %v1_1e4c7 = add i32 %v0_1e4b0, -52
  %v2_1e4c7 = inttoptr i32 %v1_1e4c7 to i32*
  %v3_1e4c7 = load i32, i32* %v2_1e4c7, align 4
  %v1_1e4ce = add i32 %v0_1e4b0, -44
  %v2_1e4ce = inttoptr i32 %v1_1e4ce to i32*
  %v3_1e4ce = load i32, i32* %v2_1e4ce, align 4
  %v2_1e4d4 = call i32 @unknown_3dfc7(i32 %v3_1e4ce, i32 %v3_1e4c7)
  %v0_1e4d9 = call i32 @function_1e7c6()
  ret i32 %v0_1e4d9

; uselistorder directives
  uselistorder i32 %v0_1e4b0, { 1, 0 }
}

define i32 @function_1e512(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e512:
  %v2_1e512 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1e512 = load i32, i32* @eax, align 4
  %v4_1e512 = trunc i32 %v3_1e512 to i8
  %v5_1e512 = add i8 %v4_1e512, %v2_1e512
  %v21_1e512 = inttoptr i32 %v3_1e512 to i8*
  store i8 %v5_1e512, i8* %v21_1e512, align 1
  %v0_1e51c = load i32, i32* @ebp, align 4
  %v1_1e533 = add i32 %v0_1e51c, -52
  %v2_1e533 = inttoptr i32 %v1_1e533 to i32*
  %v3_1e533 = load i32, i32* %v2_1e533, align 4
  %v1_1e53a = add i32 %v0_1e51c, -44
  %v2_1e53a = inttoptr i32 %v1_1e53a to i32*
  %v3_1e53a = load i32, i32* %v2_1e53a, align 4
  %v2_1e540 = call i32 @unknown_3dfc7(i32 %v3_1e53a, i32 %v3_1e533)
  %v0_1e545 = call i32 @function_1e7c6()
  ret i32 %v0_1e545

; uselistorder directives
  uselistorder i32 %v0_1e51c, { 1, 0 }
}

define i32 @function_1e54a() local_unnamed_addr {
dec_label_pc_1e54a:
  %v0_1e552 = load i32, i32* @ebp, align 4
  %v1_1e569 = add i32 %v0_1e552, -52
  %v2_1e569 = inttoptr i32 %v1_1e569 to i32*
  %v3_1e569 = load i32, i32* %v2_1e569, align 4
  %v1_1e570 = add i32 %v0_1e552, -44
  %v2_1e570 = inttoptr i32 %v1_1e570 to i32*
  %v3_1e570 = load i32, i32* %v2_1e570, align 4
  %v2_1e576 = call i32 @unknown_3dfc7(i32 %v3_1e570, i32 %v3_1e569)
  %v0_1e57b = call i32 @function_1e7c6()
  ret i32 %v0_1e57b

; uselistorder directives
  uselistorder i32 %v0_1e552, { 1, 0 }
}

define i32 @function_1e580() local_unnamed_addr {
dec_label_pc_1e580:
  %v0_1e588 = load i32, i32* @ebp, align 4
  %v1_1e59f = add i32 %v0_1e588, -52
  %v2_1e59f = inttoptr i32 %v1_1e59f to i32*
  %v3_1e59f = load i32, i32* %v2_1e59f, align 4
  %v1_1e5a6 = add i32 %v0_1e588, -44
  %v2_1e5a6 = inttoptr i32 %v1_1e5a6 to i32*
  %v3_1e5a6 = load i32, i32* %v2_1e5a6, align 4
  %v2_1e5ac = call i32 @unknown_3dfc7(i32 %v3_1e5a6, i32 %v3_1e59f)
  %v0_1e5b1 = call i32 @function_1e7c6()
  ret i32 %v0_1e5b1

; uselistorder directives
  uselistorder i32 %v0_1e588, { 1, 0 }
}

define i32 @function_1e5d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5d8:
  %v0_1e5d8 = load i32, i32* @eax, align 4
  %v0_1e5dc = load i32, i32* @ebp, align 4
  %v1_1e5dc = add i32 %v0_1e5dc, -44
  %v2_1e5dc = inttoptr i32 %v1_1e5dc to i32*
  %v3_1e5dc = load i32, i32* %v2_1e5dc, align 4
  %v2_1e5e2 = call i32 @unknown_3dfc7(i32 %v3_1e5dc, i32 %v0_1e5d8)
  %v0_1e5e7 = call i32 @function_1e7c6()
  ret i32 %v0_1e5e7
}

define i32 @function_1e5ec() local_unnamed_addr {
dec_label_pc_1e5ec:
  %v0_1e5f4 = load i32, i32* @ebp, align 4
  %v1_1e60b = add i32 %v0_1e5f4, -52
  %v2_1e60b = inttoptr i32 %v1_1e60b to i32*
  %v3_1e60b = load i32, i32* %v2_1e60b, align 4
  %v1_1e612 = add i32 %v0_1e5f4, -44
  %v2_1e612 = inttoptr i32 %v1_1e612 to i32*
  %v3_1e612 = load i32, i32* %v2_1e612, align 4
  %v2_1e618 = call i32 @unknown_3dfc7(i32 %v3_1e612, i32 %v3_1e60b)
  %v0_1e61d = call i32 @function_1e7c6()
  ret i32 %v0_1e61d

; uselistorder directives
  uselistorder i32 %v0_1e5f4, { 1, 0 }
}

define i32 @function_1e625(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e625:
  %v0_1e625 = load i32, i32* @eax, align 4
  %v1_1e625 = trunc i32 %v0_1e625 to i8
  %v2_1e625 = load i1, i1* @cf, align 1
  %v3_1e625 = zext i1 %v2_1e625 to i8
  %v4_1e625 = add i8 %v1_1e625, 1
  %v5_1e625 = add i8 %v4_1e625, %v3_1e625
  %v25_1e625 = zext i8 %v5_1e625 to i32
  %v27_1e625 = and i32 %v0_1e625, -256
  %v28_1e625 = or i32 %v25_1e625, %v27_1e625
  %v1_1e627 = inttoptr i32 %v28_1e625 to i8*
  %v2_1e627 = load i8, i8* %v1_1e627, align 1
  %v5_1e627 = add i8 %v2_1e627, %v5_1e625
  store i8 %v5_1e627, i8* %v1_1e627, align 1
  %v2_1e629 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1e629 = load i32, i32* @ecx, align 4
  %v4_1e629 = trunc i32 %v3_1e629 to i8
  %v5_1e629 = add i8 %v4_1e629, %v2_1e629
  %v20_1e629 = load i32, i32* @edi, align 4
  %v21_1e629 = inttoptr i32 %v20_1e629 to i8*
  store i8 %v5_1e629, i8* %v21_1e629, align 1
  %v0_1e63a = load i32, i32* @ebp, align 4
  %v1_1e641 = add i32 %v0_1e63a, -52
  %v2_1e641 = inttoptr i32 %v1_1e641 to i32*
  %v3_1e641 = load i32, i32* %v2_1e641, align 4
  %v1_1e648 = add i32 %v0_1e63a, -44
  %v2_1e648 = inttoptr i32 %v1_1e648 to i32*
  %v3_1e648 = load i32, i32* %v2_1e648, align 4
  %v2_1e64e = call i32 @unknown_3dfc7(i32 %v3_1e648, i32 %v3_1e641)
  %v0_1e653 = call i32 @function_1e7c6()
  ret i32 %v0_1e653
}

define i32 @function_1e658() local_unnamed_addr {
dec_label_pc_1e658:
  %v0_1e660 = load i32, i32* @ebp, align 4
  %v1_1e677 = add i32 %v0_1e660, -52
  %v2_1e677 = inttoptr i32 %v1_1e677 to i32*
  %v3_1e677 = load i32, i32* %v2_1e677, align 4
  %v1_1e67e = add i32 %v0_1e660, -44
  %v2_1e67e = inttoptr i32 %v1_1e67e to i32*
  %v3_1e67e = load i32, i32* %v2_1e67e, align 4
  %v2_1e684 = call i32 @unknown_3dfc7(i32 %v3_1e67e, i32 %v3_1e677)
  %v0_1e689 = call i32 @function_1e7c6()
  ret i32 %v0_1e689

; uselistorder directives
  uselistorder i32 %v0_1e660, { 1, 0 }
}

define i32 @function_1e68e() local_unnamed_addr {
dec_label_pc_1e68e:
  %v0_1e696 = load i32, i32* @ebp, align 4
  %v1_1e6ad = add i32 %v0_1e696, -52
  %v2_1e6ad = inttoptr i32 %v1_1e6ad to i32*
  %v3_1e6ad = load i32, i32* %v2_1e6ad, align 4
  %v1_1e6b4 = add i32 %v0_1e696, -44
  %v2_1e6b4 = inttoptr i32 %v1_1e6b4 to i32*
  %v3_1e6b4 = load i32, i32* %v2_1e6b4, align 4
  %v2_1e6ba = call i32 @unknown_3dfc7(i32 %v3_1e6b4, i32 %v3_1e6ad)
  %v0_1e6bf = call i32 @function_1e7c6()
  ret i32 %v0_1e6bf

; uselistorder directives
  uselistorder i32 %v0_1e696, { 1, 0 }
}

define i32 @function_1e6c4() local_unnamed_addr {
dec_label_pc_1e6c4:
  %v0_1e6cc = load i32, i32* @ebp, align 4
  %v1_1e6e3 = add i32 %v0_1e6cc, -52
  %v2_1e6e3 = inttoptr i32 %v1_1e6e3 to i32*
  %v3_1e6e3 = load i32, i32* %v2_1e6e3, align 4
  %v1_1e6ea = add i32 %v0_1e6cc, -44
  %v2_1e6ea = inttoptr i32 %v1_1e6ea to i32*
  %v3_1e6ea = load i32, i32* %v2_1e6ea, align 4
  %v2_1e6f0 = call i32 @unknown_3dfc7(i32 %v3_1e6ea, i32 %v3_1e6e3)
  %v0_1e6f5 = call i32 @function_1e7c6()
  ret i32 %v0_1e6f5

; uselistorder directives
  uselistorder i32 %v0_1e6cc, { 1, 0 }
}

define i32 @function_1e718(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e718:
  %v0_1e718 = load i32, i32* @ebp, align 4
  %v1_1e718 = add i32 %v0_1e718, 1
  store i32 %v1_1e718, i32* @ebp, align 4
  %v0_1e71a = load i32, i32* @eax, align 4
  %v1_1e71e = add i32 %v0_1e718, -43
  %v2_1e71e = inttoptr i32 %v1_1e71e to i32*
  %v3_1e71e = load i32, i32* %v2_1e71e, align 4
  %v2_1e724 = call i32 @unknown_3dfc7(i32 %v3_1e71e, i32 %v0_1e71a)
  %v0_1e729 = call i32 @function_1e7c6()
  ret i32 %v0_1e729
}

define i32 @function_1e73e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e73e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e73e = load i32, i32* @eax, align 4
  %v1_1e73e = trunc i32 %v0_1e73e to i8
  %v2_1e73e = and i8 %v1_1e73e, 12
  %v8_1e73e = zext i8 %v2_1e73e to i32
  %v10_1e73e = and i32 %v0_1e73e, -256
  %v11_1e73e = or i32 %v8_1e73e, %v10_1e73e
  store i32 %v11_1e73e, i32* %eax.global-to-local, align 4
  %v1_1e740 = inttoptr i32 %v11_1e73e to i8*
  %v2_1e740 = load i8, i8* %v1_1e740, align 4
  %v5_1e740 = add i8 %v2_1e740, %v2_1e73e
  store i8 %v5_1e740, i8* %v1_1e740, align 4
  %v0_1e742 = load i32, i32* %eax.global-to-local, align 4
  %v1_1e742 = inttoptr i32 %v0_1e742 to i8*
  %v2_1e742 = load i8, i8* %v1_1e742, align 1
  %v4_1e742 = trunc i32 %v0_1e742 to i8
  %v5_1e742 = add i8 %v2_1e742, %v4_1e742
  store i8 %v5_1e742, i8* %v1_1e742, align 1
  %v0_1e744 = load i32, i32* @ebp, align 4
  %v1_1e744 = add i32 %v0_1e744, -56
  %v2_1e744 = inttoptr i32 %v1_1e744 to i32*
  %v3_1e744 = load i32, i32* %v2_1e744, align 4
  store i32 %v3_1e744, i32* %eax.global-to-local, align 4
  %v1_1e74b = add i32 %v0_1e744, -52
  %v2_1e74b = inttoptr i32 %v1_1e74b to i32*
  %v3_1e74b = load i32, i32* %v2_1e74b, align 4
  store i32 %v3_1e74b, i32* %eax.global-to-local, align 4
  %v1_1e752 = add i32 %v0_1e744, -44
  %v2_1e752 = inttoptr i32 %v1_1e752 to i32*
  %v3_1e752 = load i32, i32* %v2_1e752, align 4
  store i32 %v3_1e752, i32* %eax.global-to-local, align 4
  %v2_1e758 = call i32 @unknown_3dfc7(i32 %v3_1e752, i32 %v3_1e74b)
  store i32 %v2_1e758, i32* %eax.global-to-local, align 4
  %v0_1e75d = call i32 @function_1e7c6()
  store i32 %v0_1e75d, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e75d
}

define i32 @function_1e760(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e760:
  %v16_1e760 = load i32, i32* @eax, align 4
  ret i32 %v16_1e760
}

define i32 @function_1e762(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e762:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e762 = load i32, i32* @eax, align 4
  %v1_1e762 = trunc i32 %v0_1e762 to i8
  %v2_1e762 = load i1, i1* @cf, align 1
  %v3_1e762 = zext i1 %v2_1e762 to i8
  %v4_1e762 = add i8 %v1_1e762, 1
  %v5_1e762 = add i8 %v4_1e762, %v3_1e762
  %v25_1e762 = zext i8 %v5_1e762 to i32
  %v27_1e762 = and i32 %v0_1e762, -256
  %v28_1e762 = or i32 %v25_1e762, %v27_1e762
  store i32 %v28_1e762, i32* %eax.global-to-local, align 4
  %v1_1e764 = inttoptr i32 %v28_1e762 to i8*
  %v2_1e764 = load i8, i8* %v1_1e764, align 1
  %v5_1e764 = add i8 %v2_1e764, %v5_1e762
  store i8 %v5_1e764, i8* %v1_1e764, align 1
  %v0_1e766 = load i32, i32* %eax.global-to-local, align 4
  %v1_1e766 = add i32 %v0_1e766, -955243428
  %v2_1e766 = inttoptr i32 %v1_1e766 to i8*
  %v3_1e766 = load i8, i8* %v2_1e766, align 1
  %v4_1e766 = load i32, i32* @ecx, align 4
  %v5_1e766 = trunc i32 %v4_1e766 to i8
  %v6_1e766 = add i8 %v5_1e766, %v3_1e766
  store i8 %v6_1e766, i8* %v2_1e766, align 1
  %v0_1e76d = load i32, i32* %eax.global-to-local, align 4
  %v1_1e76d = trunc i32 %v0_1e76d to i8
  %v2_1e76d = and i8 %v1_1e76d, 12
  %v8_1e76d = zext i8 %v2_1e76d to i32
  %v10_1e76d = and i32 %v0_1e76d, -256
  %v11_1e76d = or i32 %v8_1e76d, %v10_1e76d
  store i32 %v11_1e76d, i32* %eax.global-to-local, align 4
  %v1_1e76f = inttoptr i32 %v11_1e76d to i8*
  %v2_1e76f = load i8, i8* %v1_1e76f, align 4
  %v5_1e76f = add i8 %v2_1e76f, %v2_1e76d
  store i8 %v5_1e76f, i8* %v1_1e76f, align 4
  %v0_1e771 = load i32, i32* %eax.global-to-local, align 4
  %v1_1e771 = inttoptr i32 %v0_1e771 to i8*
  %v2_1e771 = load i8, i8* %v1_1e771, align 1
  %v4_1e771 = trunc i32 %v0_1e771 to i8
  %v5_1e771 = add i8 %v2_1e771, %v4_1e771
  store i8 %v5_1e771, i8* %v1_1e771, align 1
  %v0_1e773 = load i32, i32* @ebp, align 4
  %v1_1e773 = add i32 %v0_1e773, -56
  %v2_1e773 = inttoptr i32 %v1_1e773 to i32*
  %v3_1e773 = load i32, i32* %v2_1e773, align 4
  store i32 %v3_1e773, i32* %eax.global-to-local, align 4
  %v1_1e77a = add i32 %v0_1e773, -52
  %v2_1e77a = inttoptr i32 %v1_1e77a to i32*
  %v3_1e77a = load i32, i32* %v2_1e77a, align 4
  store i32 %v3_1e77a, i32* %eax.global-to-local, align 4
  %v1_1e781 = add i32 %v0_1e773, -44
  %v2_1e781 = inttoptr i32 %v1_1e781 to i32*
  %v3_1e781 = load i32, i32* %v2_1e781, align 4
  store i32 %v3_1e781, i32* %eax.global-to-local, align 4
  %v2_1e787 = call i32 @unknown_3dfc7(i32 %v3_1e781, i32 %v3_1e77a)
  store i32 %v2_1e787, i32* %eax.global-to-local, align 4
  %v0_1e78c = call i32 @function_1e7c6()
  store i32 %v0_1e78c, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e78c

; uselistorder directives
  uselistorder i32 ()* @function_1e7c6, { 0, 5, 4, 18, 17, 16, 7, 15, 6, 14, 13, 3, 12, 11, 10, 2, 9, 8, 1 }
  uselistorder i32 (i32, i32)* @unknown_3dfc7, { 0, 3, 2, 12, 11, 10, 5, 9, 4, 8, 7, 1, 6 }
}

define i32 @function_1e78e() local_unnamed_addr {
dec_label_pc_1e78e:
  %v0_1e7a6 = load i32, i32* @ebp, align 4
  %v1_1e7bb = add i32 %v0_1e7a6, -44
  %v2_1e7bb = inttoptr i32 %v1_1e7bb to i32*
  %v3_1e7bb = load i32, i32* %v2_1e7bb, align 4
  ret i32 %v3_1e7bb
}

define i32 @function_1e7c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e7c2:
  store i32 %arg1, i32* @ebx, align 4
  %v2_1e7c4 = load i32, i32* @eax, align 4
  %v4_1e7c4 = mul i32 %v2_1e7c4, 2
  %v21_1e7c4 = inttoptr i32 %v2_1e7c4 to i32*
  store i32 %v4_1e7c4, i32* %v21_1e7c4, align 4
  %v22_1e7c4 = load i32, i32* @eax, align 4
  ret i32 %v22_1e7c4

; uselistorder directives
  uselistorder i32 %v2_1e7c4, { 1, 0 }
}

define i32 @function_1e7c6() local_unnamed_addr {
dec_label_pc_1e7c6:
  %v0_1e7c6 = load i32, i32* @ebp, align 4
  %v1_1e7c6 = add i32 %v0_1e7c6, -28
  %v2_1e7c6 = inttoptr i32 %v1_1e7c6 to i32*
  %v3_1e7c6 = load i32, i32* %v2_1e7c6, align 4
  %v1_1e7c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e7c9 = xor i32 %v1_1e7c9, %v3_1e7c6
  store i1 false, i1* @cf, align 1
  %v3_1e7c9 = icmp eq i32 %v2_1e7c9, 0
  store i32 %v2_1e7c9, i32* @eax, align 4
  br i1 %v3_1e7c9, label %bb, label %dec_label_pc_1e7d2

bb:                                               ; preds = %dec_label_pc_1e7c6
  %v1_1e7d0 = call i32 @function_1e7d7()
  br label %dec_label_pc_1e7d2

dec_label_pc_1e7d2:                               ; preds = %bb, %dec_label_pc_1e7c6
  %v2_1e7d0 = phi i32 [ %v1_1e7d0, %bb ], [ %v2_1e7c9, %dec_label_pc_1e7c6 ]
  ret i32 %v2_1e7d0
}

define i32 @function_1e7d7() local_unnamed_addr {
dec_label_pc_1e7d7:
  %v0_1e7d7 = load i32, i32* @esp, align 4
  %v5_1e7d7 = icmp ugt i32 %v0_1e7d7, -109
  store i1 %v5_1e7d7, i1* @cf, align 1
  %v0_1e7de = load i32, i32* @eax, align 4
  ret i32 %v0_1e7de
}

define i32 @_ZNSt10_Iter_baseIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEELb0EE7_S_baseES5_() local_unnamed_addr {
dec_label_pc_1e830:
  %eax.global-to-local = alloca i32, align 4
  %v2_1e831 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1e831
}

define i32 @function_1e834(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e834:
  %v0_1e835 = load i32, i32* @ebx, align 4
  %v1_1e835 = add i32 %v0_1e835, 1166608453
  %v2_1e835 = inttoptr i32 %v1_1e835 to i8*
  %v3_1e835 = load i8, i8* %v2_1e835, align 1
  %v4_1e835 = load i32, i32* @ecx, align 4
  %v5_1e835 = trunc i32 %v4_1e835 to i8
  %v6_1e835 = sub i8 %v3_1e835, %v5_1e835
  store i8 %v6_1e835, i8* %v2_1e835, align 1
  %v0_1e83d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1e842 = load i32, i32* @ebp, align 4
  %v2_1e842 = add i32 %v1_1e842, -12
  %v3_1e842 = inttoptr i32 %v2_1e842 to i32*
  store i32 %v0_1e83d, i32* %v3_1e842, align 4
  %v0_1e847 = load i32, i32* @ebp, align 4
  %v1_1e847 = add i32 %v0_1e847, -28
  %v2_1e847 = inttoptr i32 %v1_1e847 to i32*
  %v3_1e847 = load i32, i32* %v2_1e847, align 4
  store i32 %v3_1e847, i32* @eax, align 4
  %v1_1e84a = add i32 %v0_1e847, -12
  %v2_1e84a = inttoptr i32 %v1_1e84a to i32*
  %v3_1e84a = load i32, i32* %v2_1e84a, align 4
  %v1_1e84d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e84d = icmp eq i32 %v1_1e84d, %v3_1e84a
  br i1 %v3_1e84d, label %bb, label %dec_label_pc_1e856

bb:                                               ; preds = %dec_label_pc_1e834
  %v1_1e854 = call i32 @function_1e85b()
  br label %dec_label_pc_1e856

dec_label_pc_1e856:                               ; preds = %bb, %dec_label_pc_1e834
  %v2_1e854 = phi i32 [ %v1_1e854, %bb ], [ %v3_1e847, %dec_label_pc_1e834 ]
  ret i32 %v2_1e854
}

define i32 @function_1e85b() local_unnamed_addr {
dec_label_pc_1e85b:
  %v0_1e85c = load i32, i32* @eax, align 4
  ret i32 %v0_1e85c
}

define i32 @_ZSt12__niter_baseIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEENSt11_Niter_baseIT_E13iterator_typeES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e85d:
  %v1_1e87a = call i32 @unknown_3d08d(i32 %arg1)
  store i32 %v1_1e87a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e88b

bb:                                               ; preds = %dec_label_pc_1e85d
  %v1_1e889 = call i32 @function_1e890()
  br label %dec_label_pc_1e88b

dec_label_pc_1e88b:                               ; preds = %bb, %dec_label_pc_1e85d
  %v2_1e889 = phi i32 [ %v1_1e889, %bb ], [ %v1_1e87a, %dec_label_pc_1e85d ]
  ret i32 %v2_1e889
}

define i32 @function_1e890() local_unnamed_addr {
dec_label_pc_1e890:
  %v0_1e891 = load i32, i32* @eax, align 4
  ret i32 %v0_1e891
}

define i32 @_ZSt22__copy_move_backward_aILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e892:
  %v3_1e8cd = call i32 @unknown_3e615(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1e8cd, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e8de

bb:                                               ; preds = %dec_label_pc_1e892
  %v1_1e8dc = call i32 @function_1e8e3()
  br label %dec_label_pc_1e8de

dec_label_pc_1e8de:                               ; preds = %bb, %dec_label_pc_1e892
  %v2_1e8dc = phi i32 [ %v1_1e8dc, %bb ], [ %v3_1e8cd, %dec_label_pc_1e892 ]
  ret i32 %v2_1e8dc
}

define i32 @function_1e8e3() local_unnamed_addr {
dec_label_pc_1e8e3:
  %v0_1e8e4 = load i32, i32* @eax, align 4
  ret i32 %v0_1e8e4
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ISJ_EERT_() local_unnamed_addr {
dec_label_pc_1e8e6:
  %eax.global-to-local = alloca i32, align 4
  %v17_1e8ea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1e8ea
}

define i32 @function_1e8ee(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e8ee:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1e8ee = load i32, i32* @ebp, align 4
  %v1_1e8ee = add i32 %v0_1e8ee, 1
  store i32 %v1_1e8ee, i32* %ebp.global-to-local, align 4
  %v0_1e8ef = load i32, i32* @ecx, align 4
  %v1_1e8ef = add i32 %v0_1e8ef, 1166795845
  %v2_1e8ef = inttoptr i32 %v1_1e8ef to i8*
  %v3_1e8ef = load i8, i8* %v2_1e8ef, align 1
  %v5_1e8ef = trunc i32 %v0_1e8ef to i8
  %v6_1e8ef = or i8 %v3_1e8ef, %v5_1e8ef
  store i8 %v6_1e8ef, i8* %v2_1e8ef, align 1
  %v0_1e8f5 = load i32, i32* @eax, align 4
  %v2_1e8f5 = or i32 %v0_1e8f5, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i32 %v2_1e8f5, i32* @eax, align 4
  %v0_1e8f7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e8f7 = add i32 %v0_1e8f7, 1
  %v9_1e8f7 = icmp eq i32 %v1_1e8f7, 0
  store i32 %v1_1e8f7, i32* @ebp, align 4
  %v0_1e8f8 = load i32, i32* @ecx, align 4
  %v2_1e8f8 = icmp eq i32 %v0_1e8f8, 1
  %v4_1e8f8 = or i1 %v9_1e8f7, %v2_1e8f8
  br i1 %v4_1e8f8, label %dec_label_pc_1e8fa, label %bb

bb:                                               ; preds = %dec_label_pc_1e8ee
  %v6_1e8f8 = call i32 @function_1e95f()
  %v1_1e8ff.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1e8fa

dec_label_pc_1e8fa:                               ; preds = %dec_label_pc_1e8ee, %bb
  %v1_1e8ff = phi i32 [ %v1_1e8f7, %dec_label_pc_1e8ee ], [ %v1_1e8ff.pre, %bb ]
  %v0_1e8fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e8ff = add i32 %v1_1e8ff, -12
  %v3_1e8ff = inttoptr i32 %v2_1e8ff to i32*
  store i32 %v0_1e8fa, i32* %v3_1e8ff, align 4
  %v0_1e904 = load i32, i32* @ebp, align 4
  %v1_1e904 = add i32 %v0_1e904, -28
  %v2_1e904 = inttoptr i32 %v1_1e904 to i32*
  %v3_1e904 = load i32, i32* %v2_1e904, align 4
  %v1_1e907 = add i32 %v3_1e904, 4
  %v1_1e90d = call i32 @unknown_32f12(i32 %v1_1e907)
  %v0_1e91a = load i32, i32* @ebp, align 4
  %v1_1e91a = add i32 %v0_1e91a, -32
  %v2_1e91a = inttoptr i32 %v1_1e91a to i32*
  %v3_1e91a = load i32, i32* %v2_1e91a, align 4
  %v1_1e921 = add i32 %v0_1e91a, -28
  %v2_1e921 = inttoptr i32 %v1_1e921 to i32*
  %v3_1e921 = load i32, i32* %v2_1e921, align 4
  %v3_1e927 = call i32 @unknown_3e6e6(i32 %v3_1e921, i32 %v3_1e91a, i32 1)
  %v0_1e92c = call i32 @function_1e948()
  ret i32 %v0_1e92c

; uselistorder directives
  uselistorder label %dec_label_pc_1e8fa, { 1, 0 }
}

define i32 @function_1e92f() local_unnamed_addr {
dec_label_pc_1e92f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e92f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e92f
}

define i32 @function_1e948() local_unnamed_addr {
dec_label_pc_1e948:
  %v0_1e948 = load i32, i32* @ebp, align 4
  %v1_1e948 = add i32 %v0_1e948, -12
  %v2_1e948 = inttoptr i32 %v1_1e948 to i32*
  %v3_1e948 = load i32, i32* %v2_1e948, align 4
  %v1_1e94b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e94b = xor i32 %v1_1e94b, %v3_1e948
  %v3_1e94b = icmp eq i32 %v2_1e94b, 0
  store i32 %v2_1e94b, i32* @eax, align 4
  br i1 %v3_1e94b, label %bb, label %dec_label_pc_1e954

bb:                                               ; preds = %dec_label_pc_1e948
  %v1_1e952 = call i32 @function_1e959()
  br label %dec_label_pc_1e954

dec_label_pc_1e954:                               ; preds = %bb, %dec_label_pc_1e948
  %v2_1e952 = phi i32 [ %v1_1e952, %bb ], [ %v2_1e94b, %dec_label_pc_1e948 ]
  ret i32 %v2_1e952
}

define i32 @function_1e959() local_unnamed_addr {
dec_label_pc_1e959:
  %v0_1e95e = load i32, i32* @eax, align 4
  ret i32 %v0_1e95e
}

define i32 @function_1e95f() local_unnamed_addr {
dec_label_pc_1e95f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EaSERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e960:
  %v2_1e98a = call i32 @unknown_3e7a8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e99e

bb:                                               ; preds = %dec_label_pc_1e960
  %v1_1e99c = call i32 @function_1e9a3()
  br label %dec_label_pc_1e99e

dec_label_pc_1e99e:                               ; preds = %bb, %dec_label_pc_1e960
  %v2_1e99c = phi i32 [ %v1_1e99c, %bb ], [ %arg1, %dec_label_pc_1e960 ]
  ret i32 %v2_1e99c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e9a3() local_unnamed_addr {
dec_label_pc_1e9a3:
  %v0_1e9a4 = load i32, i32* @eax, align 4
  ret i32 %v0_1e9a4
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e9a6:
  store i32 178956970, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e9ce

bb:                                               ; preds = %dec_label_pc_1e9a6
  %v2_1e9cc = call i32 @function_1e9d3(i32 %arg1)
  br label %dec_label_pc_1e9ce

dec_label_pc_1e9ce:                               ; preds = %bb, %dec_label_pc_1e9a6
  %v3_1e9cc = phi i32 [ %v2_1e9cc, %bb ], [ 178956970, %dec_label_pc_1e9a6 ]
  ret i32 %v3_1e9cc
}

define i32 @function_1e9d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e9d3:
  %v0_1e9d4 = load i32, i32* @eax, align 4
  ret i32 %v0_1e9d4
}

define i32 @_ZSt18uninitialized_copyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e9d5:
  %v3_1ea0c = call i32 @unknown_3e940(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1ea0c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ea1d

bb:                                               ; preds = %dec_label_pc_1e9d5
  %v1_1ea1b = call i32 @function_1ea22()
  br label %dec_label_pc_1ea1d

dec_label_pc_1ea1d:                               ; preds = %bb, %dec_label_pc_1e9d5
  %v2_1ea1b = phi i32 [ %v1_1ea1b, %bb ], [ %v3_1ea0c, %dec_label_pc_1e9d5 ]
  ret i32 %v2_1ea1b
}

define i32 @function_1ea22() local_unnamed_addr {
dec_label_pc_1ea22:
  %v0_1ea23 = load i32, i32* @eax, align 4
  ret i32 %v0_1ea23
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea24:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ea47

bb:                                               ; preds = %dec_label_pc_1ea24
  %v2_1ea45 = call i32 @function_1ea4c(i32 %arg1)
  br label %dec_label_pc_1ea47

dec_label_pc_1ea47:                               ; preds = %bb, %dec_label_pc_1ea24
  %v3_1ea45 = phi i32 [ %v2_1ea45, %bb ], [ 0, %dec_label_pc_1ea24 ]
  ret i32 %v3_1ea45
}

define i32 @function_1ea4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea4c:
  %v0_1ea4d = load i32, i32* @eax, align 4
  ret i32 %v0_1ea4d
}

define i32 @_ZSt11__addressofIN11json_spirit10Value_implINS0_13Config_vectorISsEEEEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea4e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ea74

bb:                                               ; preds = %dec_label_pc_1ea4e
  %v2_1ea72 = call i32 @function_1ea79(i32 %arg1)
  br label %dec_label_pc_1ea74

dec_label_pc_1ea74:                               ; preds = %bb, %dec_label_pc_1ea4e
  %v3_1ea72 = phi i32 [ %v2_1ea72, %bb ], [ %arg1, %dec_label_pc_1ea4e ]
  ret i32 %v3_1ea72
}

define i32 @function_1ea79(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea79:
  %v0_1ea7a = load i32, i32* @eax, align 4
  ret i32 %v0_1ea7a
}

define i32 @_ZSt8_DestroyIN11json_spirit10Value_implINS0_13Config_vectorISsEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea7b:
  %v1_1ea98 = call i32 @unknown_2ed73(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1eaa9

bb:                                               ; preds = %dec_label_pc_1ea7b
  %v1_1eaa7 = call i32 @function_1eaae()
  br label %dec_label_pc_1eaa9

dec_label_pc_1eaa9:                               ; preds = %bb, %dec_label_pc_1ea7b
  %v2_1eaa7 = phi i32 [ %v1_1eaa7, %bb ], [ 0, %dec_label_pc_1ea7b ]
  ret i32 %v2_1eaa7
}

define i32 @function_1eaae() local_unnamed_addr {
dec_label_pc_1eaae:
  %v0_1eaaf = load i32, i32* @eax, align 4
  ret i32 %v0_1eaaf
}

define i32 @_ZNSt10_Iter_baseIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEELb0EE7_S_baseES5_() local_unnamed_addr {
dec_label_pc_1eab0:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i1 false, i1* @cf, align 1
  ret i32 %tmp2
}

define i32 @function_1ead6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ead6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1eadb() local_unnamed_addr {
dec_label_pc_1eadb:
  %eax.global-to-local = alloca i32, align 4
  %v0_1eadc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1eadc
}

define i32 @_ZSt12__niter_baseIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEEENSt11_Niter_baseIT_E13iterator_typeES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eadd:
  %v1_1eafa = call i32 @unknown_3d58d(i32 %arg1)
  store i32 %v1_1eafa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1eb0b

bb:                                               ; preds = %dec_label_pc_1eadd
  %v1_1eb09 = call i32 @function_1eb10()
  br label %dec_label_pc_1eb0b

dec_label_pc_1eb0b:                               ; preds = %bb, %dec_label_pc_1eadd
  %v2_1eb09 = phi i32 [ %v1_1eb09, %bb ], [ %v1_1eafa, %dec_label_pc_1eadd ]
  ret i32 %v2_1eb09
}

define i32 @function_1eb10() local_unnamed_addr {
dec_label_pc_1eb10:
  %v0_1eb11 = load i32, i32* @eax, align 4
  ret i32 %v0_1eb11
}

define i32 @_ZSt22__copy_move_backward_aILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_() local_unnamed_addr {
dec_label_pc_1eb12:
  %eax.global-to-local = alloca i32, align 4
  %v17_1eb15 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1eb15
}

define i32 @function_1eb1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eb1a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1eb1a = load i32, i32* @ecx, align 4
  %v1_1eb1a = add i32 %v0_1eb1a, 1166795845
  %v2_1eb1a = inttoptr i32 %v1_1eb1a to i8*
  %v3_1eb1a = load i8, i8* %v2_1eb1a, align 1
  %v5_1eb1a = trunc i32 %v0_1eb1a to i8
  %v6_1eb1a = or i8 %v3_1eb1a, %v5_1eb1a
  store i8 %v6_1eb1a, i8* %v2_1eb1a, align 1
  %v0_1eb20 = load i32, i32* @eax, align 4
  %v2_1eb20 = or i32 %v0_1eb20, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_1eb20, i32* %eax.global-to-local, align 4
  %v0_1eb22 = load i32, i32* @ebp, align 4
  %v1_1eb22 = add i32 %v0_1eb22, 1
  %v9_1eb22 = icmp eq i32 %v1_1eb22, 0
  store i32 %v1_1eb22, i32* %ebp.global-to-local, align 4
  %v0_1eb23 = load i32, i32* @ecx, align 4
  %v1_1eb23 = add i32 %v0_1eb23, -1
  store i32 %v1_1eb23, i32* %ecx.global-to-local, align 4
  %v2_1eb23 = icmp eq i32 %v1_1eb23, 0
  %v4_1eb23 = or i1 %v9_1eb22, %v2_1eb23
  br i1 %v4_1eb23, label %dec_label_pc_1eb25, label %bb

bb:                                               ; preds = %dec_label_pc_1eb1a
  %v6_1eb23 = call i32 @_ZNSt10_Iter_baseIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEELb0EE7_S_baseES5_()
  store i32 %v6_1eb23, i32* %eax.global-to-local, align 4
  %v0_1eb25.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_1eb26.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_1eb26.pre = load i1, i1* @cf, align 1
  br label %dec_label_pc_1eb25

dec_label_pc_1eb25:                               ; preds = %dec_label_pc_1eb1a, %bb
  %v6_1eb26 = phi i1 [ false, %dec_label_pc_1eb1a ], [ %v6_1eb26.pre, %bb ]
  %v30_1eb26 = phi i32 [ %v1_1eb23, %dec_label_pc_1eb1a ], [ %v0_1eb26.pre, %bb ]
  %v0_1eb25 = phi i32 [ %v1_1eb22, %dec_label_pc_1eb1a ], [ %v0_1eb25.pre, %bb ]
  %v1_1eb25 = add i32 %v0_1eb25, 1
  store i32 %v1_1eb25, i32* @ebp, align 4
  %v1_1eb26 = add i32 %v30_1eb26, -1587159995
  %v2_1eb26 = inttoptr i32 %v1_1eb26 to i8*
  %v3_1eb26 = load i8, i8* %v2_1eb26, align 1
  %v5_1eb26 = trunc i32 %v30_1eb26 to i8
  %v7_1eb26 = zext i1 %v6_1eb26 to i8
  %v8_1eb26 = add i8 %v3_1eb26, %v5_1eb26
  %v9_1eb26 = add i8 %v8_1eb26, %v7_1eb26
  %v27_1eb26 = icmp ule i8 %v9_1eb26, %v3_1eb26
  %v28_1eb26 = icmp ult i8 %v8_1eb26, %v3_1eb26
  %v29_1eb26 = select i1 %v6_1eb26, i1 %v27_1eb26, i1 %v28_1eb26
  store i1 %v29_1eb26, i1* %cf.global-to-local, align 1
  store i8 %v9_1eb26, i8* %v2_1eb26, align 1
  %v0_1eb2c = load i32, i32* %eax.global-to-local, align 4
  %v1_1eb2c = trunc i32 %v0_1eb2c to i8
  %v2_1eb2c = load i1, i1* %cf.global-to-local, align 1
  %v3_1eb2c = zext i1 %v2_1eb2c to i8
  %v4_1eb2c = add i8 %v3_1eb2c, %v1_1eb2c
  %v19_1eb2c = icmp ule i8 %v4_1eb2c, %v1_1eb2c
  %v21_1eb2c = icmp eq i1 %v2_1eb2c, %v19_1eb2c
  store i1 %v21_1eb2c, i1* %cf.global-to-local, align 1
  %v22_1eb2c = zext i8 %v4_1eb2c to i32
  %v24_1eb2c = and i32 %v0_1eb2c, -256
  %v25_1eb2c = or i32 %v22_1eb2c, %v24_1eb2c
  store i32 %v25_1eb2c, i32* %eax.global-to-local, align 4
  %v1_1eb2e = inttoptr i32 %v25_1eb2c to i8*
  %v2_1eb2e = load i8, i8* %v1_1eb2e, align 1
  %v5_1eb2e = add i8 %v2_1eb2e, %v4_1eb2c
  store i8 %v5_1eb2e, i8* %v1_1eb2e, align 1
  %v0_1eb30 = load i32, i32* %eax.global-to-local, align 4
  %v1_1eb30 = load i32, i32* @ebp, align 4
  %v2_1eb30 = add i32 %v1_1eb30, -12
  %v3_1eb30 = inttoptr i32 %v2_1eb30 to i32*
  store i32 %v0_1eb30, i32* %v3_1eb30, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1eb35 = load i32, i32* @ebp, align 4
  %v1_1eb35 = add i32 %v0_1eb35, -13
  %v2_1eb35 = inttoptr i32 %v1_1eb35 to i8*
  store i8 0, i8* %v2_1eb35, align 1
  %v0_1eb39 = load i32, i32* @ebp, align 4
  %v1_1eb39 = add i32 %v0_1eb39, -36
  %v2_1eb39 = inttoptr i32 %v1_1eb39 to i32*
  %v3_1eb39 = load i32, i32* %v2_1eb39, align 4
  store i32 %v3_1eb39, i32* %eax.global-to-local, align 4
  %v1_1eb40 = add i32 %v0_1eb39, -32
  %v2_1eb40 = inttoptr i32 %v1_1eb40 to i32*
  %v3_1eb40 = load i32, i32* %v2_1eb40, align 4
  store i32 %v3_1eb40, i32* %eax.global-to-local, align 4
  %v1_1eb47 = add i32 %v0_1eb39, -28
  %v2_1eb47 = inttoptr i32 %v1_1eb47 to i32*
  %v3_1eb47 = load i32, i32* %v2_1eb47, align 4
  store i32 %v3_1eb47, i32* %eax.global-to-local, align 4
  %v3_1eb4d = call i32 @unknown_3eb24(i32 %v3_1eb47, i32 %v3_1eb40, i32 %v3_1eb39)
  store i32 %v3_1eb4d, i32* @eax, align 4
  %v0_1eb52 = load i32, i32* @ebp, align 4
  %v1_1eb52 = add i32 %v0_1eb52, -12
  %v2_1eb52 = inttoptr i32 %v1_1eb52 to i32*
  %v3_1eb52 = load i32, i32* %v2_1eb52, align 4
  %v1_1eb55 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1eb55 = icmp eq i32 %v1_1eb55, %v3_1eb52
  br i1 %v3_1eb55, label %bb10, label %dec_label_pc_1eb5e

bb10:                                             ; preds = %dec_label_pc_1eb25
  %v1_1eb5c = call i32 @function_1eb63()
  store i32 %v1_1eb5c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1eb5e

dec_label_pc_1eb5e:                               ; preds = %bb10, %dec_label_pc_1eb25
  %v3_1eb5c = phi i32 [ %v1_1eb5c, %bb10 ], [ %v3_1eb4d, %dec_label_pc_1eb25 ]
  ret i32 %v3_1eb5c

; uselistorder directives
  uselistorder i8 %v4_1eb2c, { 0, 2, 1 }
  uselistorder i8 %v1_1eb2c, { 1, 0 }
  uselistorder i8 %v9_1eb26, { 1, 0 }
  uselistorder i8 %v8_1eb26, { 1, 0 }
  uselistorder i8 %v3_1eb26, { 1, 2, 0 }
  uselistorder i32 %v30_1eb26, { 1, 0 }
  uselistorder i1 %v6_1eb26, { 1, 0 }
  uselistorder i32 %v1_1eb23, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9 }
  uselistorder label %dec_label_pc_1eb25, { 1, 0 }
}

define i32 @function_1eb63() local_unnamed_addr {
dec_label_pc_1eb63:
  %v0_1eb64 = load i32, i32* @eax, align 4
  ret i32 %v0_1eb64
}

define i32 @_ZNKSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eb66:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1eb8c

bb:                                               ; preds = %dec_label_pc_1eb66
  %v2_1eb8a = call i32 @function_1eb91(i32 %arg1)
  br label %dec_label_pc_1eb8c

dec_label_pc_1eb8c:                               ; preds = %bb, %dec_label_pc_1eb66
  %v3_1eb8a = phi i32 [ %v2_1eb8a, %bb ], [ %arg1, %dec_label_pc_1eb66 ]
  ret i32 %v3_1eb8a
}

define i32 @function_1eb91(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eb91:
  %v0_1eb92 = load i32, i32* @eax, align 4
  ret i32 %v0_1eb92
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eb94:
  store i32 214748364, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ebbc

bb:                                               ; preds = %dec_label_pc_1eb94
  %v2_1ebba = call i32 @function_1ebc1(i32 %arg1)
  br label %dec_label_pc_1ebbc

dec_label_pc_1ebbc:                               ; preds = %bb, %dec_label_pc_1eb94
  %v3_1ebba = phi i32 [ %v2_1ebba, %bb ], [ 214748364, %dec_label_pc_1eb94 ]
  ret i32 %v3_1ebba

; uselistorder directives
  uselistorder i32 214748364, { 0, 2, 1, 3 }
}

define i32 @function_1ebc1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ebc1:
  %v0_1ebc2 = load i32, i32* @eax, align 4
  ret i32 %v0_1ebc2
}

define i32 @_ZSt18uninitialized_copyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ebc3:
  %v3_1ebfa = call i32 @unknown_3ec51(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1ebfa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ec0b

bb:                                               ; preds = %dec_label_pc_1ebc3
  %v1_1ec09 = call i32 @function_1ec10()
  br label %dec_label_pc_1ec0b

dec_label_pc_1ec0b:                               ; preds = %bb, %dec_label_pc_1ebc3
  %v2_1ec09 = phi i32 [ %v1_1ec09, %bb ], [ %v3_1ebfa, %dec_label_pc_1ebc3 ]
  ret i32 %v2_1ec09
}

define i32 @function_1ec10() local_unnamed_addr {
dec_label_pc_1ec10:
  %v0_1ec11 = load i32, i32* @eax, align 4
  ret i32 %v0_1ec11
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ec12:
  ret i32 0
}

define i32 @function_1ec3e() local_unnamed_addr {
dec_label_pc_1ec3e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ec3e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ec3e
}

define i32 @function_1ec58(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ec58:
  %v0_1ec58 = load i32, i32* @eax, align 4
  %v1_1ec58 = add i32 %v0_1ec58, 20
  %v10_1ec58 = icmp eq i32 %v1_1ec58, 0
  store i32 %v1_1ec58, i32* @eax, align 4
  br i1 %v10_1ec58, label %bb, label %dec_label_pc_1ec5f

bb:                                               ; preds = %dec_label_pc_1ec58
  %v1_1ec5d = call i32 @function_1ec7a()
  store i32 %v1_1ec5d, i32* @eax, align 4
  br label %dec_label_pc_1ec5f

dec_label_pc_1ec5f:                               ; preds = %bb, %dec_label_pc_1ec58
  %v0_1ec5f = call i32 @function_1ec75()
  ret i32 %v0_1ec5f
}

define i32 @function_1ec75() local_unnamed_addr {
dec_label_pc_1ec75:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ec7a() local_unnamed_addr {
dec_label_pc_1ec7a:
  %v0_1ec80 = load i32, i32* @eax, align 4
  ret i32 %v0_1ec80
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEEC1ERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ec82:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ecab

bb:                                               ; preds = %dec_label_pc_1ec82
  %v3_1eca9 = call i32 @function_1ecb0(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1ecab

dec_label_pc_1ecab:                               ; preds = %bb, %dec_label_pc_1ec82
  %v4_1eca9 = phi i32 [ %v3_1eca9, %bb ], [ 0, %dec_label_pc_1ec82 ]
  ret i32 %v4_1eca9
}

define i32 @function_1ecb0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ecb0:
  %v0_1ecb1 = load i32, i32* @eax, align 4
  ret i32 %v0_1ecb1
}

define i32 @_ZN9__gnu_cxxneIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ecb2:
  %v1_1ecd6 = call i32 @unknown_3eec2(i32 %arg1)
  %v1_1ecdb = inttoptr i32 %v1_1ecd6 to i32*
  %v2_1ecdb = load i32, i32* %v1_1ecdb, align 4
  %v1_1ece3 = call i32 @unknown_3eec2(i32 %arg2)
  %v1_1ece8 = inttoptr i32 %v1_1ece3 to i32*
  %v2_1ece8 = load i32, i32* %v1_1ece8, align 4
  %v12_1ecea = icmp eq i32 %v2_1ecdb, %v2_1ece8
  %v1_1ecec = icmp eq i1 %v12_1ecea, false
  %v2_1ecec = zext i1 %v1_1ecec to i32
  %v4_1ecec = and i32 %v2_1ece8, -256
  %v5_1ecec = or i32 %v2_1ecec, %v4_1ecec
  store i32 %v5_1ecec, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ecfb

bb:                                               ; preds = %dec_label_pc_1ecb2
  %v1_1ecf9 = call i32 @function_1ed00()
  br label %dec_label_pc_1ecfb

dec_label_pc_1ecfb:                               ; preds = %bb, %dec_label_pc_1ecb2
  %v2_1ecf9 = phi i32 [ %v1_1ecf9, %bb ], [ %v5_1ecec, %dec_label_pc_1ecb2 ]
  ret i32 %v2_1ecf9

; uselistorder directives
  uselistorder i32 %v2_1ece8, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3eec2, { 1, 0 }
}

define i32 @function_1ed00() local_unnamed_addr {
dec_label_pc_1ed00:
  %v0_1ed05 = load i32, i32* @eax, align 4
  ret i32 %v0_1ed05
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ed06:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1ed20 = load i32, i32* %arg1, align 4
  %v1_1ed22 = add i32 %v2_1ed20, 24
  store i32 %v1_1ed22, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ed39

bb:                                               ; preds = %dec_label_pc_1ed06
  %v2_1ed37 = call i32 @function_1ed3e(i32 %tmp100)
  br label %dec_label_pc_1ed39

dec_label_pc_1ed39:                               ; preds = %bb, %dec_label_pc_1ed06
  %v3_1ed37 = phi i32 [ %v2_1ed37, %bb ], [ %tmp100, %dec_label_pc_1ed06 ]
  ret i32 %v3_1ed37
}

define i32 @function_1ed3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed3e:
  %v0_1ed3f = load i32, i32* @eax, align 4
  ret i32 %v0_1ed3f
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ed40:
  %v2_1ed5a = load i32, i32* %arg1, align 4
  store i32 %v2_1ed5a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ed68

bb:                                               ; preds = %dec_label_pc_1ed40
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1ed66 = call i32 @function_1ed6d(i32 %tmp100)
  br label %dec_label_pc_1ed68

dec_label_pc_1ed68:                               ; preds = %bb, %dec_label_pc_1ed40
  %v3_1ed66 = phi i32 [ %v2_1ed66, %bb ], [ %v2_1ed5a, %dec_label_pc_1ed40 ]
  ret i32 %v3_1ed66

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1ed6d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed6d:
  %v0_1ed6e = load i32, i32* @eax, align 4
  ret i32 %v0_1ed6e
}

define i32 @_ZSt10_ConstructIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES4_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ed6f:
  store i32 0, i32* @eax, align 4
  %v2_1ed9d = call i32 @function_22fb5(i32 24, i32 %arg1)
  %v1_1eda4 = icmp eq i32 %v2_1ed9d, 0
  br i1 %v1_1eda4, label %bb, label %dec_label_pc_1eda8

bb:                                               ; preds = %dec_label_pc_1ed6f
  %v1_1eda6 = call i32 @function_1edd1()
  br label %dec_label_pc_1eda8

dec_label_pc_1eda8:                               ; preds = %bb, %dec_label_pc_1ed6f
  %v2_1edb2 = call i32 @unknown_34bb1(i32 %v2_1ed9d, i32 %arg2)
  %v0_1edb7 = call i32 @function_1edd1()
  ret i32 %v0_1edb7

; uselistorder directives
  uselistorder i32 ()* @function_1edd1, { 1, 0 }
}

define i32 @function_1edd1() local_unnamed_addr {
dec_label_pc_1edd1:
  %v0_1edd1 = load i32, i32* @ebp, align 4
  %v1_1edd1 = add i32 %v0_1edd1, -28
  %v2_1edd1 = inttoptr i32 %v1_1edd1 to i32*
  %v3_1edd1 = load i32, i32* %v2_1edd1, align 4
  %v1_1edd4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1edd4 = xor i32 %v1_1edd4, %v3_1edd1
  %v3_1edd4 = icmp eq i32 %v2_1edd4, 0
  store i32 %v2_1edd4, i32* @eax, align 4
  br i1 %v3_1edd4, label %bb, label %dec_label_pc_1eddd

bb:                                               ; preds = %dec_label_pc_1edd1
  %v1_1eddb = call i32 @function_1ede2()
  br label %dec_label_pc_1eddd

dec_label_pc_1eddd:                               ; preds = %bb, %dec_label_pc_1edd1
  %v2_1eddb = phi i32 [ %v1_1eddb, %bb ], [ %v2_1edd4, %dec_label_pc_1edd1 ]
  ret i32 %v2_1eddb
}

define i32 @function_1ede2() local_unnamed_addr {
dec_label_pc_1ede2:
  %v0_1ede9 = load i32, i32* @eax, align 4
  ret i32 %v0_1ede9
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_9copy_intoEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_E18has_fallback_type_EEENT1_11result_typeEiiRS1D_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1edea:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_1ee3a, label %bb

bb:                                               ; preds = %dec_label_pc_1edea
  %sext = mul i32 %arg6, 16777216
  %v12_1ee34 = sdiv i32 %sext, 16777216
  %v13_1ee34 = sext i8 %arg5 to i32
  %v14_1ee34 = call i32 @function_1f273(i32 %arg8, i32 %arg7, i32 %v12_1ee34, i32 %v13_1ee34, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1ee3a

dec_label_pc_1ee3a:                               ; preds = %dec_label_pc_1edea, %bb
  %v2_1ee3d = mul i32 %arg2, 4
  %v1_1ee40 = add i32 %v2_1ee3d, ptrtoint (i32* @global_var_1f2c4.1845 to i32)
  %v1_1ee45 = inttoptr i32 %v1_1ee40 to i32*
  %v2_1ee45 = load i32, i32* %v1_1ee45, align 4
  ret i32 %v2_1ee45

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ee3a, { 1, 0 }
}

define i32 @function_1ee49() local_unnamed_addr {
dec_label_pc_1ee49:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1ee51 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ee51 = add i32 %v0_1ee51, -83
  %v2_1ee51 = inttoptr i32 %v1_1ee51 to i8*
  %v3_1ee51 = load i8, i8* %v2_1ee51, align 1
  %v1_1ee61 = add i32 %v0_1ee51, -56
  %v2_1ee61 = inttoptr i32 %v1_1ee61 to i32*
  %v3_1ee61 = load i32, i32* %v2_1ee61, align 4
  %v1_1ee68 = add i32 %v0_1ee51, -52
  %v2_1ee68 = inttoptr i32 %v1_1ee68 to i32*
  %v3_1ee68 = load i32, i32* %v2_1ee68, align 4
  %v1_1ee6f = add i32 %v0_1ee51, -44
  %v2_1ee6f = inttoptr i32 %v1_1ee6f to i32*
  %v3_1ee6f = load i32, i32* %v2_1ee6f, align 4
  %v6_1ee75 = sext i8 %v3_1ee51 to i32
  %v7_1ee75 = call i32 @unknown_3f027(i32 %v3_1ee6f, i32 %v3_1ee68, i32 %v3_1ee61, i32 0, i32 %v6_1ee75, i32 1)
  ret i32 %v7_1ee75

; uselistorder directives
  uselistorder i32 %v0_1ee51, { 0, 2, 1, 3 }
}

define i32 @function_1ee7f() local_unnamed_addr {
dec_label_pc_1ee7f:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1ee87 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ee87 = add i32 %v0_1ee87, -82
  %v2_1ee87 = inttoptr i32 %v1_1ee87 to i8*
  %v3_1ee87 = load i8, i8* %v2_1ee87, align 1
  %v1_1ee97 = add i32 %v0_1ee87, -56
  %v2_1ee97 = inttoptr i32 %v1_1ee97 to i32*
  %v3_1ee97 = load i32, i32* %v2_1ee97, align 4
  %v1_1ee9e = add i32 %v0_1ee87, -52
  %v2_1ee9e = inttoptr i32 %v1_1ee9e to i32*
  %v3_1ee9e = load i32, i32* %v2_1ee9e, align 4
  %v1_1eea5 = add i32 %v0_1ee87, -44
  %v2_1eea5 = inttoptr i32 %v1_1eea5 to i32*
  %v3_1eea5 = load i32, i32* %v2_1eea5, align 4
  %v6_1eeab = sext i8 %v3_1ee87 to i32
  %v7_1eeab = call i32 @unknown_3f094(i32 %v3_1eea5, i32 %v3_1ee9e, i32 %v3_1ee97, i32 0, i32 %v6_1eeab, i32 1)
  ret i32 %v7_1eeab

; uselistorder directives
  uselistorder i32 %v0_1ee87, { 0, 2, 1, 3 }
}

define i32 @function_1eeb5() local_unnamed_addr {
dec_label_pc_1eeb5:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1eebd = load i32, i32* %ebp.global-to-local, align 4
  %v1_1eebd = add i32 %v0_1eebd, -81
  %v2_1eebd = inttoptr i32 %v1_1eebd to i8*
  %v3_1eebd = load i8, i8* %v2_1eebd, align 1
  %v1_1eecd = add i32 %v0_1eebd, -56
  %v2_1eecd = inttoptr i32 %v1_1eecd to i32*
  %v3_1eecd = load i32, i32* %v2_1eecd, align 4
  %v1_1eed4 = add i32 %v0_1eebd, -52
  %v2_1eed4 = inttoptr i32 %v1_1eed4 to i32*
  %v3_1eed4 = load i32, i32* %v2_1eed4, align 4
  %v1_1eedb = add i32 %v0_1eebd, -44
  %v2_1eedb = inttoptr i32 %v1_1eedb to i32*
  %v3_1eedb = load i32, i32* %v2_1eedb, align 4
  %v6_1eee1 = sext i8 %v3_1eebd to i32
  %v7_1eee1 = call i32 @unknown_3f101(i32 %v3_1eedb, i32 %v3_1eed4, i32 %v3_1eecd, i32 0, i32 %v6_1eee1, i32 1)
  ret i32 %v7_1eee1

; uselistorder directives
  uselistorder i32 %v0_1eebd, { 0, 2, 1, 3 }
}

define i32 @function_1eeeb() local_unnamed_addr {
dec_label_pc_1eeeb:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1eef3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1eef3 = add i32 %v0_1eef3, -80
  %v2_1eef3 = inttoptr i32 %v1_1eef3 to i8*
  %v3_1eef3 = load i8, i8* %v2_1eef3, align 1
  %v1_1ef03 = add i32 %v0_1eef3, -56
  %v2_1ef03 = inttoptr i32 %v1_1ef03 to i32*
  %v3_1ef03 = load i32, i32* %v2_1ef03, align 4
  %v1_1ef0a = add i32 %v0_1eef3, -52
  %v2_1ef0a = inttoptr i32 %v1_1ef0a to i32*
  %v3_1ef0a = load i32, i32* %v2_1ef0a, align 4
  %v1_1ef11 = add i32 %v0_1eef3, -44
  %v2_1ef11 = inttoptr i32 %v1_1ef11 to i32*
  %v3_1ef11 = load i32, i32* %v2_1ef11, align 4
  %v6_1ef17 = sext i8 %v3_1eef3 to i32
  %v7_1ef17 = call i32 @unknown_3f16e(i32 %v3_1ef11, i32 %v3_1ef0a, i32 %v3_1ef03, i32 0, i32 %v6_1ef17, i32 1)
  ret i32 %v7_1ef17

; uselistorder directives
  uselistorder i32 %v0_1eef3, { 0, 2, 1, 3 }
}

define i32 @function_1ef21() local_unnamed_addr {
dec_label_pc_1ef21:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1ef29 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ef29 = add i32 %v0_1ef29, -79
  %v2_1ef29 = inttoptr i32 %v1_1ef29 to i8*
  %v3_1ef29 = load i8, i8* %v2_1ef29, align 1
  %v1_1ef39 = add i32 %v0_1ef29, -56
  %v2_1ef39 = inttoptr i32 %v1_1ef39 to i32*
  %v3_1ef39 = load i32, i32* %v2_1ef39, align 4
  %v1_1ef40 = add i32 %v0_1ef29, -52
  %v2_1ef40 = inttoptr i32 %v1_1ef40 to i32*
  %v3_1ef40 = load i32, i32* %v2_1ef40, align 4
  %v1_1ef47 = add i32 %v0_1ef29, -44
  %v2_1ef47 = inttoptr i32 %v1_1ef47 to i32*
  %v3_1ef47 = load i32, i32* %v2_1ef47, align 4
  %v6_1ef4d = sext i8 %v3_1ef29 to i32
  %v7_1ef4d = call i32 @unknown_3f1db(i32 %v3_1ef47, i32 %v3_1ef40, i32 %v3_1ef39, i32 0, i32 %v6_1ef4d, i32 1)
  ret i32 %v7_1ef4d

; uselistorder directives
  uselistorder i32 %v0_1ef29, { 0, 2, 1, 3 }
}

define i32 @function_1ef57() local_unnamed_addr {
dec_label_pc_1ef57:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1ef5f = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ef5f = add i32 %v0_1ef5f, -78
  %v2_1ef5f = inttoptr i32 %v1_1ef5f to i8*
  %v3_1ef5f = load i8, i8* %v2_1ef5f, align 1
  %v1_1ef6f = add i32 %v0_1ef5f, -56
  %v2_1ef6f = inttoptr i32 %v1_1ef6f to i32*
  %v3_1ef6f = load i32, i32* %v2_1ef6f, align 4
  %v1_1ef76 = add i32 %v0_1ef5f, -52
  %v2_1ef76 = inttoptr i32 %v1_1ef76 to i32*
  %v3_1ef76 = load i32, i32* %v2_1ef76, align 4
  %v1_1ef7d = add i32 %v0_1ef5f, -44
  %v2_1ef7d = inttoptr i32 %v1_1ef7d to i32*
  %v3_1ef7d = load i32, i32* %v2_1ef7d, align 4
  %v6_1ef83 = sext i8 %v3_1ef5f to i32
  %v7_1ef83 = call i32 @unknown_3f248(i32 %v3_1ef7d, i32 %v3_1ef76, i32 %v3_1ef6f, i32 0, i32 %v6_1ef83, i32 1)
  ret i32 %v7_1ef83

; uselistorder directives
  uselistorder i32 %v0_1ef5f, { 0, 2, 1, 3 }
}

define i32 @function_1efa2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1efa2:
  %v2_1efa2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1efa2 = load i32, i32* @eax, align 4
  %v4_1efa2 = trunc i32 %v3_1efa2 to i8
  %v5_1efa2 = add i8 %v4_1efa2, %v2_1efa2
  %v21_1efa2 = inttoptr i32 %v3_1efa2 to i8*
  store i8 %v5_1efa2, i8* %v21_1efa2, align 1
  %v0_1efa4 = load i32, i32* @ebx, align 4
  %v1_1efa4 = add i32 %v0_1efa4, 1149880389
  %v2_1efa4 = inttoptr i32 %v1_1efa4 to i8*
  %v3_1efa4 = load i8, i8* %v2_1efa4, align 1
  %v4_1efa4 = load i32, i32* @ecx, align 4
  %v5_1efa4 = trunc i32 %v4_1efa4 to i8
  %v6_1efa4 = add i8 %v5_1efa4, %v3_1efa4
  store i8 %v6_1efa4, i8* %v2_1efa4, align 1
  %v0_1efac = load i32, i32* @ebp, align 4
  %v1_1efb3 = add i32 %v0_1efac, -44
  %v2_1efb3 = inttoptr i32 %v1_1efb3 to i32*
  %v3_1efb3 = load i32, i32* %v2_1efb3, align 4
  %v1_1efb9 = call i32 @unknown_3f2b5(i32 %v3_1efb3)
  ret i32 %v1_1efb9
}

define i32 @function_1efc3() local_unnamed_addr {
dec_label_pc_1efc3:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1efcb = load i32, i32* %ebp.global-to-local, align 4
  %v1_1efe9 = add i32 %v0_1efcb, -44
  %v2_1efe9 = inttoptr i32 %v1_1efe9 to i32*
  %v3_1efe9 = load i32, i32* %v2_1efe9, align 4
  %v1_1efef = call i32 @unknown_3f2b5(i32 %v3_1efe9)
  ret i32 %v1_1efef
}

define i32 @function_1eff9() local_unnamed_addr {
dec_label_pc_1eff9:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f001 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f01f = add i32 %v0_1f001, -44
  %v2_1f01f = inttoptr i32 %v1_1f01f to i32*
  %v3_1f01f = load i32, i32* %v2_1f01f, align 4
  %v1_1f025 = call i32 @unknown_3f2b5(i32 %v3_1f01f)
  ret i32 %v1_1f025
}

define i32 @function_1f02f() local_unnamed_addr {
dec_label_pc_1f02f:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f037 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f055 = add i32 %v0_1f037, -44
  %v2_1f055 = inttoptr i32 %v1_1f055 to i32*
  %v3_1f055 = load i32, i32* %v2_1f055, align 4
  %v1_1f05b = call i32 @unknown_3f2b5(i32 %v3_1f055)
  ret i32 %v1_1f05b
}

define i32 @function_1f065() local_unnamed_addr {
dec_label_pc_1f065:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f06d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f08b = add i32 %v0_1f06d, -44
  %v2_1f08b = inttoptr i32 %v1_1f08b to i32*
  %v3_1f08b = load i32, i32* %v2_1f08b, align 4
  %v1_1f091 = call i32 @unknown_3f2b5(i32 %v3_1f08b)
  ret i32 %v1_1f091
}

define i32 @function_1f09b() local_unnamed_addr {
dec_label_pc_1f09b:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f0a3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f0c1 = add i32 %v0_1f0a3, -44
  %v2_1f0c1 = inttoptr i32 %v1_1f0c1 to i32*
  %v3_1f0c1 = load i32, i32* %v2_1f0c1, align 4
  %v1_1f0c7 = call i32 @unknown_3f2b5(i32 %v3_1f0c1)
  ret i32 %v1_1f0c7
}

define i32 @function_1f0d1() local_unnamed_addr {
dec_label_pc_1f0d1:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f0d9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f0f7 = add i32 %v0_1f0d9, -44
  %v2_1f0f7 = inttoptr i32 %v1_1f0f7 to i32*
  %v3_1f0f7 = load i32, i32* %v2_1f0f7, align 4
  %v1_1f0fd = call i32 @unknown_3f2b5(i32 %v3_1f0f7)
  ret i32 %v1_1f0fd
}

define i32 @function_1f107() local_unnamed_addr {
dec_label_pc_1f107:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f10f = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f12d = add i32 %v0_1f10f, -44
  %v2_1f12d = inttoptr i32 %v1_1f12d to i32*
  %v3_1f12d = load i32, i32* %v2_1f12d, align 4
  %v1_1f133 = call i32 @unknown_3f2b5(i32 %v3_1f12d)
  ret i32 %v1_1f133
}

define i32 @function_1f16a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f16a:
  %v2_1f16b = load i32, i32* @edx, align 8
  %v3_1f16b = load i32, i32* @eax, align 4
  %v4_1f16b = add i32 %v3_1f16b, %v2_1f16b
  %v21_1f16b = inttoptr i32 %v2_1f16b to i32*
  store i32 %v4_1f16b, i32* %v21_1f16b, align 4
  %v3_1f16f = load i32, i32* @eax, align 4
  %v4_1f16f = trunc i32 %v3_1f16f to i8
  %v5_1f171 = mul i8 %v4_1f16f, 2
  %v21_1f171 = inttoptr i32 %v3_1f16f to i8*
  store i8 %v5_1f171, i8* %v21_1f171, align 1
  %v0_1f17b = load i32, i32* @ebp, align 4
  %v1_1f199 = add i32 %v0_1f17b, -44
  %v2_1f199 = inttoptr i32 %v1_1f199 to i32*
  %v3_1f199 = load i32, i32* %v2_1f199, align 4
  %v1_1f19f = call i32 @unknown_3f2b5(i32 %v3_1f199)
  ret i32 %v1_1f19f

; uselistorder directives
  uselistorder i32 %v2_1f16b, { 1, 0 }
}

define i32 @function_1f1a9() local_unnamed_addr {
dec_label_pc_1f1a9:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f1b1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f1cf = add i32 %v0_1f1b1, -44
  %v2_1f1cf = inttoptr i32 %v1_1f1cf to i32*
  %v3_1f1cf = load i32, i32* %v2_1f1cf, align 4
  %v1_1f1d5 = call i32 @unknown_3f2b5(i32 %v3_1f1cf)
  ret i32 %v1_1f1d5
}

define i32 @function_1f208(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f208:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1f208 = load i32, i32* @eax, align 4
  %v1_1f208 = trunc i32 %v0_1f208 to i8
  %v2_1f208 = and i8 %v1_1f208, -24
  %v8_1f208 = zext i8 %v2_1f208 to i32
  %v10_1f208 = and i32 %v0_1f208, -256
  %v11_1f208 = or i32 %v8_1f208, %v10_1f208
  store i32 %v11_1f208, i32* %eax.global-to-local, align 4
  %v2_1f20a = load i32, i32* @esi, align 4
  %v24_1f20a = load i1, i1* @df, align 1
  %v25_1f20a = select i1 %v24_1f20a, i32 -4, i32 4
  %v27_1f20a = add i32 %v25_1f20a, %v2_1f20a
  store i32 %v27_1f20a, i32* %esi.global-to-local, align 4
  %v2_1f20b = load i8, i8* bitcast (i32* @edx to i8*), align 8
  %v5_1f20b = add i8 %v2_1f20b, %v2_1f208
  %v20_1f20b = load i32, i32* @edx, align 8
  %v21_1f20b = inttoptr i32 %v20_1f20b to i8*
  store i8 %v5_1f20b, i8* %v21_1f20b, align 1
  %v0_1f210 = load i32, i32* %eax.global-to-local, align 4
  %v1_1f210 = inttoptr i32 %v0_1f210 to i8*
  %v2_1f210 = load i8, i8* %v1_1f210, align 1
  %v4_1f210 = trunc i32 %v0_1f210 to i8
  %v5_1f210 = add i8 %v2_1f210, %v4_1f210
  store i8 %v5_1f210, i8* %v1_1f210, align 1
  %v3_1f212 = load i32, i32* %eax.global-to-local, align 4
  %v11_1f215 = and i32 %v3_1f212, -236
  store i32 %v11_1f215, i32* %eax.global-to-local, align 4
  %v1_1f217 = inttoptr i32 %v11_1f215 to i32*
  %v2_1f217 = load i32, i32* %v1_1f217, align 4
  %v4_1f217 = add i32 %v2_1f217, %v11_1f215
  store i32 %v4_1f217, i32* %v1_1f217, align 4
  %v0_1f219 = load i32, i32* %eax.global-to-local, align 4
  %v1_1f219 = inttoptr i32 %v0_1f219 to i8*
  %v2_1f219 = load i8, i8* %v1_1f219, align 1
  %v4_1f219 = trunc i32 %v0_1f219 to i8
  %v5_1f219 = add i8 %v2_1f219, %v4_1f219
  store i8 %v5_1f219, i8* %v1_1f219, align 1
  %v0_1f21b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1f21b, i32* %eax.global-to-local, align 4
  %v0_1f229 = load i32, i32* @ebp, align 4
  %v1_1f229 = add i32 %v0_1f229, -56
  %v2_1f229 = inttoptr i32 %v1_1f229 to i32*
  %v3_1f229 = load i32, i32* %v2_1f229, align 4
  store i32 %v3_1f229, i32* %eax.global-to-local, align 4
  %v1_1f230 = add i32 %v0_1f229, -52
  %v2_1f230 = inttoptr i32 %v1_1f230 to i32*
  %v3_1f230 = load i32, i32* %v2_1f230, align 4
  store i32 %v3_1f230, i32* %eax.global-to-local, align 4
  %v1_1f237 = add i32 %v0_1f229, -44
  %v2_1f237 = inttoptr i32 %v1_1f237 to i32*
  %v3_1f237 = load i32, i32* %v2_1f237, align 4
  store i32 %v3_1f237, i32* %eax.global-to-local, align 4
  %v1_1f23d = call i32 @unknown_3f2b5(i32 %v3_1f237)
  store i32 %v1_1f23d, i32* %eax.global-to-local, align 4
  ret i32 %v1_1f23d

; uselistorder directives
  uselistorder i32 %v11_1f215, { 0, 2, 1 }
  uselistorder i32 -4, { 2, 0, 1 }
}

define i32 @function_1f25e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f25e:
  %v0_1f25e = load i32, i32* @ebx, align 4
  %v1_1f25e = add i32 %v0_1f25e, 1149881413
  %v2_1f25e = inttoptr i32 %v1_1f25e to i8*
  %v3_1f25e = load i8, i8* %v2_1f25e, align 1
  %v4_1f25e = load i32, i32* @ecx, align 4
  %v5_1f25e = trunc i32 %v4_1f25e to i8
  %v6_1f25e = or i8 %v5_1f25e, %v3_1f25e
  store i8 %v6_1f25e, i8* %v2_1f25e, align 1
  %v0_1f266 = load i32, i32* @ebp, align 4
  %v1_1f266 = add i32 %v0_1f266, -44
  %v2_1f266 = inttoptr i32 %v1_1f266 to i32*
  %v3_1f266 = load i32, i32* %v2_1f266, align 4
  %v1_1f26c = call i32 @unknown_3f2b5(i32 %v3_1f266)
  ret i32 %v1_1f26c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3f2b5, { 1, 3, 11, 0, 10, 9, 8, 7, 6, 5, 4, 2 }
}

define i32 @function_1f273(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1f273:
  %v0_1f28b = load i32, i32* @ebp, align 4
  %v1_1f2a0 = add i32 %v0_1f28b, -44
  %v2_1f2a0 = inttoptr i32 %v1_1f2a0 to i32*
  %v3_1f2a0 = load i32, i32* %v2_1f2a0, align 4
  ret i32 %v3_1f2a0
}

define i32 @function_1f2a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f2a8:
  %v2_1f2a8 = load i8, i8* bitcast (i32* @edx to i8*), align 8
  %v3_1f2a8 = load i32, i32* @eax, align 4
  %v4_1f2a8 = trunc i32 %v3_1f2a8 to i8
  %v5_1f2a8 = add i8 %v4_1f2a8, %v2_1f2a8
  %v20_1f2a8 = load i32, i32* @edx, align 8
  %v21_1f2a8 = inttoptr i32 %v20_1f2a8 to i8*
  store i8 %v5_1f2a8, i8* %v21_1f2a8, align 1
  %v0_1f2aa = load i32, i32* @ebx, align 4
  %v1_1f2aa = add i32 %v0_1f2aa, 862315589
  %v2_1f2aa = inttoptr i32 %v1_1f2aa to i8*
  %v3_1f2aa = load i8, i8* %v2_1f2aa, align 1
  %v4_1f2aa = load i32, i32* @ecx, align 4
  %v5_1f2aa = trunc i32 %v4_1f2aa to i8
  %v6_1f2aa = add i8 %v5_1f2aa, %v3_1f2aa
  store i8 %v6_1f2aa, i8* %v2_1f2aa, align 1
  %v0_1f2b0 = load i32, i32* @eax, align 4
  %v1_1f2b0 = add i32 %v0_1f2b0, 20
  %v10_1f2b0 = icmp eq i32 %v1_1f2b0, 0
  store i32 %v1_1f2b0, i32* @eax, align 4
  br i1 %v10_1f2b0, label %bb, label %dec_label_pc_1f2b7

bb:                                               ; preds = %dec_label_pc_1f2a8
  %v1_1f2b5 = call i32 @function_1f2bc()
  br label %dec_label_pc_1f2b7

dec_label_pc_1f2b7:                               ; preds = %bb, %dec_label_pc_1f2a8
  %v2_1f2b5 = phi i32 [ %v1_1f2b5, %bb ], [ %v1_1f2b0, %dec_label_pc_1f2a8 ]
  ret i32 %v2_1f2b5
}

define i32 @function_1f2bc() local_unnamed_addr {
dec_label_pc_1f2bc:
  %v0_1f2c3 = load i32, i32* @eax, align 4
  ret i32 %v0_1f2c3
}

define i32 @function_1f2eb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f2eb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKxEEEENT_11result_typeERSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f314:
  ret i32 %arg1
}

define i32 @function_1f31e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f31e:
  %v0_1f31e = load i32, i32* @ebp, align 4
  %v1_1f324 = add i32 %v0_1f31e, 3
  store i32 %v1_1f324, i32* @ebp, align 4
  %v0_1f327 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f32c = add i32 %v0_1f31e, -9
  %v3_1f32c = inttoptr i32 %v2_1f32c to i32*
  store i32 %v0_1f327, i32* %v3_1f32c, align 4
  %v0_1f331 = load i32, i32* @ebp, align 4
  %v1_1f331 = add i32 %v0_1f331, -32
  %v2_1f331 = inttoptr i32 %v1_1f331 to i32*
  %v3_1f331 = load i32, i32* %v2_1f331, align 4
  %v1_1f338 = add i32 %v0_1f331, -16
  %v2_1f33e = call i32 @unknown_3f8a0(i32 %v1_1f338, i32 %v3_1f331)
  %v0_1f343 = load i32, i32* @ebp, align 4
  %v1_1f343 = add i32 %v0_1f343, -16
  %v1_1f34a = add i32 %v0_1f343, -28
  %v2_1f34a = inttoptr i32 %v1_1f34a to i32*
  %v3_1f34a = load i32, i32* %v2_1f34a, align 4
  %v2_1f350 = call i32 @unknown_3f8d8(i32 %v3_1f34a, i32 %v1_1f343)
  store i32 %v2_1f350, i32* @eax, align 4
  %v0_1f355 = load i32, i32* @ebp, align 4
  %v1_1f355 = add i32 %v0_1f355, -12
  %v2_1f355 = inttoptr i32 %v1_1f355 to i32*
  %v3_1f355 = load i32, i32* %v2_1f355, align 4
  %v1_1f358 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f358 = icmp eq i32 %v1_1f358, %v3_1f355
  br i1 %v3_1f358, label %bb, label %dec_label_pc_1f361

bb:                                               ; preds = %dec_label_pc_1f31e
  %v1_1f35f = call i32 @function_1f366()
  br label %dec_label_pc_1f361

dec_label_pc_1f361:                               ; preds = %bb, %dec_label_pc_1f31e
  %v3_1f35f = phi i32 [ %v1_1f35f, %bb ], [ %v2_1f350, %dec_label_pc_1f31e ]
  ret i32 %v3_1f35f
}

define i32 @function_1f366() local_unnamed_addr {
dec_label_pc_1f366:
  %v0_1f367 = load i32, i32* @eax, align 4
  ret i32 %v0_1f367
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEEC1ERS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f368:
  ret i32 %arg1
}

define i32 @function_1f37e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f37e:
  %v2_1f37e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1f37e = load i32, i32* @eax, align 4
  %v4_1f37e = trunc i32 %v3_1f37e to i8
  %v5_1f37e = add i8 %v4_1f37e, %v2_1f37e
  %v21_1f37e = inttoptr i32 %v3_1f37e to i8*
  store i8 %v5_1f37e, i8* %v21_1f37e, align 1
  %v0_1f380 = load i32, i32* @eax, align 4
  %v1_1f380 = load i32, i32* @ebp, align 4
  %v2_1f380 = add i32 %v1_1f380, -12
  %v3_1f380 = inttoptr i32 %v2_1f380 to i32*
  store i32 %v0_1f380, i32* %v3_1f380, align 4
  %v0_1f385 = load i32, i32* @ebp, align 4
  %v1_1f385 = add i32 %v0_1f385, -28
  %v2_1f385 = inttoptr i32 %v1_1f385 to i32*
  %v3_1f385 = load i32, i32* %v2_1f385, align 4
  ret i32 %v3_1f385
}

define i32 @function_1f396(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f396:
  %v0_1f396 = load i32, i32* @ebp, align 4
  %v1_1f396 = load i32, i32* @eax, align 4
  %v3_1f396 = add i32 %v0_1f396, -24
  %v4_1f396 = add i32 %v3_1f396, %v1_1f396
  %v5_1f396 = inttoptr i32 %v4_1f396 to i8*
  %v6_1f396 = load i8, i8* %v5_1f396, align 1
  %v7_1f396 = load i32, i32* @edx, align 8
  %v8_1f396 = udiv i32 %v7_1f396, 256
  %v9_1f396 = trunc i32 %v8_1f396 to i8
  %v10_1f396 = add i8 %v9_1f396, %v6_1f396
  store i8 %v10_1f396, i8* %v5_1f396, align 1
  %v31_1f396 = load i32, i32* @eax, align 4
  ret i32 %v31_1f396
}

define i32 @function_1f39d() local_unnamed_addr {
dec_label_pc_1f39d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f39d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f39d = add i32 %v0_1f39d, -1
  store i32 %v1_1f39d, i32* %ecx.global-to-local, align 4
  %v0_1f39f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f39f
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKdEEEEEENT_11result_typeERSQ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f3a0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1f3c1 = add i32 %tmp102, 4
  %v1_1f3c7 = call i32 @unknown_3a9be(i32 %v1_1f3c1)
  %v1_1f3d4 = call i32 @unknown_39882(i32 %tmp102)
  %v2_1f3de = load i32, i32* %arg1, align 4
  ret i32 %v2_1f3de

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_1f3e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f3e6:
  %v0_1f3e9 = load i32, i32* @eax, align 4
  %v11_1f3e9 = and i32 %v0_1f3e9, -248
  %v0_1f3eb = load i32, i32* @edx, align 8
  %v2_1f3f2 = call i32 @unknown_3f9d2(i32 %v11_1f3e9, i32 %v0_1f3eb)
  store i32 %v2_1f3f2, i32* @eax, align 4
  %v0_1f3f7 = load i32, i32* @ebp, align 4
  %v1_1f3f7 = add i32 %v0_1f3f7, -12
  %v2_1f3f7 = inttoptr i32 %v1_1f3f7 to i32*
  %v3_1f3f7 = load i32, i32* %v2_1f3f7, align 4
  %v1_1f3fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f3fa = icmp eq i32 %v1_1f3fa, %v3_1f3f7
  br i1 %v3_1f3fa, label %bb, label %dec_label_pc_1f403

bb:                                               ; preds = %dec_label_pc_1f3e6
  %v1_1f401 = call i32 @function_1f408()
  br label %dec_label_pc_1f403

dec_label_pc_1f403:                               ; preds = %bb, %dec_label_pc_1f3e6
  %v3_1f401 = phi i32 [ %v1_1f401, %bb ], [ %v2_1f3f2, %dec_label_pc_1f3e6 ]
  ret i32 %v3_1f401
}

define i32 @function_1f408() local_unnamed_addr {
dec_label_pc_1f408:
  %v0_1f40d = load i32, i32* @eax, align 4
  ret i32 %v0_1f40d
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKSsEEEEPKvEENT_11result_typeEiiRSS_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f40e:
  ret i32 0
}

define i32 @function_1f44a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f44a:
  %v0_1f44f = load i32, i32* @ebp, align 4
  %v1_1f44f = add i32 %v0_1f44f, -40
  %v2_1f44f = inttoptr i32 %v1_1f44f to i32*
  %v3_1f44f = load i32, i32* %v2_1f44f, align 4
  %v1_1f456 = add i32 %v0_1f44f, -36
  %v2_1f456 = inttoptr i32 %v1_1f456 to i32*
  %v3_1f456 = load i32, i32* %v2_1f456, align 4
  %v1_1f45d = add i32 %v0_1f44f, -32
  %v2_1f45d = inttoptr i32 %v1_1f45d to i32*
  %v3_1f45d = load i32, i32* %v2_1f45d, align 4
  %v1_1f464 = add i32 %v0_1f44f, -28
  %v2_1f464 = inttoptr i32 %v1_1f464 to i32*
  %v3_1f464 = load i32, i32* %v2_1f464, align 4
  %v4_1f46a = call i32 @unknown_3fab4(i32 %v3_1f464, i32 %v3_1f45d, i32 %v3_1f456, i32 %v3_1f44f)
  store i32 %v4_1f46a, i32* @eax, align 4
  %v0_1f46f = load i32, i32* @ebp, align 4
  %v1_1f46f = add i32 %v0_1f46f, -12
  %v2_1f46f = inttoptr i32 %v1_1f46f to i32*
  %v3_1f46f = load i32, i32* %v2_1f46f, align 4
  %v1_1f472 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f472 = icmp eq i32 %v1_1f472, %v3_1f46f
  br i1 %v3_1f472, label %bb, label %dec_label_pc_1f47b

bb:                                               ; preds = %dec_label_pc_1f44a
  %v1_1f479 = call i32 @function_1f480()
  br label %dec_label_pc_1f47b

dec_label_pc_1f47b:                               ; preds = %bb, %dec_label_pc_1f44a
  %v3_1f479 = phi i32 [ %v1_1f479, %bb ], [ %v4_1f46a, %dec_label_pc_1f44a ]
  ret i32 %v3_1f479

; uselistorder directives
  uselistorder i32 %v0_1f44f, { 1, 0, 2, 3 }
}

define i32 @function_1f480() local_unnamed_addr {
dec_label_pc_1f480:
  %v0_1f481 = load i32, i32* @eax, align 4
  ret i32 %v0_1f481
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f482:
  %v0_1f494 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %v0_1f494
}

define i32 @function_1f4aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4aa:
  %v0_1f4aa = load i32, i32* @eax, align 4
  %v1_1f4aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f4aa = xor i32 %v1_1f4aa, %v0_1f4aa
  %v3_1f4aa = icmp eq i32 %v2_1f4aa, 0
  store i32 %v2_1f4aa, i32* @eax, align 4
  br i1 %v3_1f4aa, label %bb, label %dec_label_pc_1f4b3

bb:                                               ; preds = %dec_label_pc_1f4aa
  %v1_1f4b1 = call i32 @function_1f4b8()
  br label %dec_label_pc_1f4b3

dec_label_pc_1f4b3:                               ; preds = %bb, %dec_label_pc_1f4aa
  %v2_1f4b1 = phi i32 [ %v1_1f4b1, %bb ], [ %v2_1f4aa, %dec_label_pc_1f4aa ]
  ret i32 %v2_1f4b1
}

define i32 @function_1f4b8() local_unnamed_addr {
dec_label_pc_1f4b8:
  %v0_1f4b9 = load i32, i32* @eax, align 4
  ret i32 %v0_1f4b9
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKbEEEEEENT_11result_typeERSQ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f4ba:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1f4db = add i32 %tmp105, 4
  %v1_1f4e1 = call i32 @unknown_3aad8(i32 %v1_1f4db)
  %v1_1f4ee = call i32 @unknown_3999c(i32 %tmp105)
  %v2_1f4f8 = load i32, i32* %arg1, align 4
  %v4_1f50c = call i32 @unknown_4008a(i32 %v2_1f4f8, i32 %v1_1f4ee, i32 %arg2, i32 %v1_1f4e1)
  store i32 %v4_1f50c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f51d

bb:                                               ; preds = %dec_label_pc_1f4ba
  %v1_1f51b = call i32 @function_1f522()
  br label %dec_label_pc_1f51d

dec_label_pc_1f51d:                               ; preds = %bb, %dec_label_pc_1f4ba
  %v2_1f51b = phi i32 [ %v1_1f51b, %bb ], [ %v4_1f50c, %dec_label_pc_1f4ba ]
  ret i32 %v2_1f51b

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_1f522() local_unnamed_addr {
dec_label_pc_1f522:
  %v0_1f527 = load i32, i32* @eax, align 4
  ret i32 %v0_1f527
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f528:
  %v1_1f542 = add i32 %arg1, 16
  store i32 %v1_1f542, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f551

bb:                                               ; preds = %dec_label_pc_1f528
  %v2_1f54f = call i32 @function_1f556(i32 %arg1)
  br label %dec_label_pc_1f551

dec_label_pc_1f551:                               ; preds = %bb, %dec_label_pc_1f528
  %v3_1f54f = phi i32 [ %v2_1f54f, %bb ], [ %v1_1f542, %dec_label_pc_1f528 ]
  ret i32 %v3_1f54f
}

define i32 @function_1f556(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f556:
  %v0_1f557 = load i32, i32* @eax, align 4
  ret i32 %v0_1f557
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f558:
  %v1_1f572 = add i32 %arg1, 8
  %v2_1f572 = inttoptr i32 %v1_1f572 to i32*
  %v3_1f572 = load i32, i32* %v2_1f572, align 4
  ret i32 %v3_1f572
}

define i32 @function_1f576(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f576:
  %v0_1f578 = load i32, i32* @edx, align 8
  %v1_1f578 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f578 = icmp eq i32 %v1_1f578, %v0_1f578
  br i1 %v3_1f578, label %bb, label %dec_label_pc_1f576.dec_label_pc_1f581_crit_edge

dec_label_pc_1f576.dec_label_pc_1f581_crit_edge:  ; preds = %dec_label_pc_1f576
  %v2_1f57f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1f581

bb:                                               ; preds = %dec_label_pc_1f576
  %v1_1f57f = call i32 @function_1f586()
  br label %dec_label_pc_1f581

dec_label_pc_1f581:                               ; preds = %dec_label_pc_1f576.dec_label_pc_1f581_crit_edge, %bb
  %v2_1f57f = phi i32 [ %v2_1f57f.pre, %dec_label_pc_1f576.dec_label_pc_1f581_crit_edge ], [ %v1_1f57f, %bb ]
  ret i32 %v2_1f57f

; uselistorder directives
  uselistorder label %dec_label_pc_1f581, { 1, 0 }
}

define i32 @function_1f586() local_unnamed_addr {
dec_label_pc_1f586:
  %v0_1f587 = load i32, i32* @eax, align 4
  ret i32 %v0_1f587
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f588:
  %v1_1f5a2 = add i32 %arg1, 12
  %v2_1f5a2 = inttoptr i32 %v1_1f5a2 to i32*
  %v3_1f5a2 = load i32, i32* %v2_1f5a2, align 4
  store i32 %v3_1f5a2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f5b1

bb:                                               ; preds = %dec_label_pc_1f588
  %v2_1f5af = call i32 @function_1f5b6(i32 %arg1)
  br label %dec_label_pc_1f5b1

dec_label_pc_1f5b1:                               ; preds = %bb, %dec_label_pc_1f588
  %v3_1f5af = phi i32 [ %v2_1f5af, %bb ], [ %v3_1f5a2, %dec_label_pc_1f588 ]
  ret i32 %v3_1f5af
}

define i32 @function_1f5b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5b6:
  %v0_1f5b7 = load i32, i32* @eax, align 4
  ret i32 %v0_1f5b7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_create_nodeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f5b8:
  ret i32 0
}

define i32 @function_1f5d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5d6:
  %v0_1f5d6 = load i32, i32* @ebp, align 4
  %v1_1f5d6 = add i32 %v0_1f5d6, -28
  %v2_1f5d6 = inttoptr i32 %v1_1f5d6 to i32*
  %v3_1f5d6 = load i32, i32* %v2_1f5d6, align 4
  %v1_1f5dc = call i32 @unknown_401fc(i32 %v3_1f5d6)
  %v1_1f5e1 = load i32, i32* @ebp, align 4
  %v2_1f5e1 = add i32 %v1_1f5e1, -20
  %v3_1f5e1 = inttoptr i32 %v2_1f5e1 to i32*
  store i32 %v1_1f5dc, i32* %v3_1f5e1, align 4
  %v0_1f5e4 = load i32, i32* @ebp, align 4
  %v1_1f5e4 = add i32 %v0_1f5e4, -20
  %v2_1f5e4 = inttoptr i32 %v1_1f5e4 to i32*
  %v3_1f5e4 = load i32, i32* %v2_1f5e4, align 4
  %v1_1f5e7 = add i32 %v3_1f5e4, 16
  ret i32 %v1_1f5e7
}

define i32 @function_1f5ea() local_unnamed_addr {
dec_label_pc_1f5ea:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f5ea = load i32, i32* %eax.global-to-local, align 4
  %v1_1f5ed = call i32 @unknown_402c7(i32 %v0_1f5ea)
  store i32 %v1_1f5ed, i32* %ebx.global-to-local, align 4
  %v0_1f5f4 = load i32, i32* @ebp, align 4
  %v1_1f5f4 = add i32 %v0_1f5f4, -13
  store i32 %v1_1f5f4, i32* %eax.global-to-local, align 4
  %v1_1f5f7 = add i32 %v0_1f5f4, -28
  %v2_1f5f7 = inttoptr i32 %v1_1f5f7 to i32*
  %v3_1f5f7 = load i32, i32* %v2_1f5f7, align 4
  %v2_1f601 = call i32 @unknown_40242(i32 %v1_1f5f4, i32 %v3_1f5f7)
  store i32 %v2_1f601, i32* %eax.global-to-local, align 4
  %v0_1f609 = load i32, i32* @ebp, align 4
  %v1_1f609 = add i32 %v0_1f609, -32
  %v2_1f609 = inttoptr i32 %v1_1f609 to i32*
  %v3_1f609 = load i32, i32* %v2_1f609, align 4
  %v0_1f610 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f614 = add i32 %v0_1f609, -13
  store i32 %v1_1f614, i32* %eax.global-to-local, align 4
  %v3_1f61a = call i32 @unknown_402f4(i32 %v1_1f614, i32 %v0_1f610, i32 %v3_1f609)
  %v0_1f61f = load i32, i32* @ebp, align 4
  %v1_1f61f = add i32 %v0_1f61f, -13
  store i32 %v1_1f61f, i32* %eax.global-to-local, align 4
  %v1_1f625 = call i32 @unknown_40292(i32 %v1_1f61f)
  store i32 %v1_1f625, i32* %eax.global-to-local, align 4
  %v0_1f62a = load i32, i32* @ebp, align 4
  %v1_1f62a = add i32 %v0_1f62a, -20
  %v2_1f62a = inttoptr i32 %v1_1f62a to i32*
  %v3_1f62a = load i32, i32* %v2_1f62a, align 4
  store i32 %v3_1f62a, i32* @eax, align 4
  %v1_1f62d = add i32 %v0_1f62a, -12
  %v2_1f62d = inttoptr i32 %v1_1f62d to i32*
  %v3_1f62d = load i32, i32* %v2_1f62d, align 4
  %v1_1f630 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f630 = icmp eq i32 %v1_1f630, %v3_1f62d
  br i1 %v3_1f630, label %bb, label %dec_label_pc_1f639

bb:                                               ; preds = %dec_label_pc_1f5ea
  %v1_1f637 = call i32 @function_1f670()
  store i32 %v1_1f637, i32* @eax, align 4
  br label %dec_label_pc_1f639

dec_label_pc_1f639:                               ; preds = %bb, %dec_label_pc_1f5ea
  %v0_1f639 = call i32 @function_1f66b()
  store i32 %v0_1f639, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f639

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
}

define i32 @function_1f63c() local_unnamed_addr {
dec_label_pc_1f63c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f63c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f63c
}

define i32 @function_1f66b() local_unnamed_addr {
dec_label_pc_1f66b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f670() local_unnamed_addr {
dec_label_pc_1f670:
  %v0_1f674 = load i32, i32* @eax, align 4
  ret i32 %v0_1f674
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f676:
  ret i32 %arg1
}

define i32 @function_1f6a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6a2:
  %v0_1f6a2 = load i32, i32* @eax, align 4
  %v11_1f6a2 = and i32 %v0_1f6a2, -24
  store i32 %v11_1f6a2, i32* @eax, align 4
  %v2_1f6a5 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_1f6a5 = mul i8 %v2_1f6a5, 2
  %v4_1f6a5 = lshr i8 %v2_1f6a5, 7
  %v5_1f6a5 = or i8 %v4_1f6a5, %v3_1f6a5
  %v6_1f6a5 = load i32, i32* @ecx, align 4
  %v7_1f6a5 = inttoptr i32 %v6_1f6a5 to i8*
  store i8 %v5_1f6a5, i8* %v7_1f6a5, align 1
  %v0_1f6a7 = load i32, i32* @ebx, align 4
  %v1_1f6a7 = add i32 %v0_1f6a7, 1435231301
  %v2_1f6a7 = inttoptr i32 %v1_1f6a7 to i8*
  %v3_1f6a7 = load i8, i8* %v2_1f6a7, align 1
  %v4_1f6a7 = load i32, i32* @ecx, align 4
  %v5_1f6a7 = trunc i32 %v4_1f6a7 to i8
  %v6_1f6a7 = add i8 %v5_1f6a7, %v3_1f6a7
  store i8 %v6_1f6a7, i8* %v2_1f6a7, align 1
  %v0_1f6ae = load i32, i32* @edx, align 8
  %v1_1f6ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f6ae = icmp eq i32 %v1_1f6ae, %v0_1f6ae
  br i1 %v3_1f6ae, label %bb, label %dec_label_pc_1f6a2.dec_label_pc_1f6b7_crit_edge

dec_label_pc_1f6a2.dec_label_pc_1f6b7_crit_edge:  ; preds = %dec_label_pc_1f6a2
  %v2_1f6b5.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1f6b7

bb:                                               ; preds = %dec_label_pc_1f6a2
  %v1_1f6b5 = call i32 @function_1f6bc()
  br label %dec_label_pc_1f6b7

dec_label_pc_1f6b7:                               ; preds = %dec_label_pc_1f6a2.dec_label_pc_1f6b7_crit_edge, %bb
  %v2_1f6b5 = phi i32 [ %v2_1f6b5.pre, %dec_label_pc_1f6a2.dec_label_pc_1f6b7_crit_edge ], [ %v1_1f6b5, %bb ]
  ret i32 %v2_1f6b5

; uselistorder directives
  uselistorder i8 %v2_1f6a5, { 1, 0 }
  uselistorder label %dec_label_pc_1f6b7, { 1, 0 }
}

define i32 @function_1f6bc() local_unnamed_addr {
dec_label_pc_1f6bc:
  %v0_1f6bd = load i32, i32* @eax, align 4
  ret i32 %v0_1f6bd
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IK7uint256P11CBlockIndexEEbEC1ERKS6_RKb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6c0:
  ret i32 %arg1
}

define i32 @function_1f6cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6cc:
  %v0_1f6cc = load i32, i32* @ebp, align 4
  %v1_1f6cc = add i32 %v0_1f6cc, 12
  %v2_1f6cc = inttoptr i32 %v1_1f6cc to i32*
  %v3_1f6cc = load i32, i32* %v2_1f6cc, align 4
  %v2_1f6cf = add i32 %v0_1f6cc, -32
  %v3_1f6cf = inttoptr i32 %v2_1f6cf to i32*
  store i32 %v3_1f6cc, i32* %v3_1f6cf, align 4
  %v0_1f6d2 = load i32, i32* @ebp, align 4
  %v1_1f6d2 = add i32 %v0_1f6d2, 16
  %v2_1f6d2 = inttoptr i32 %v1_1f6d2 to i32*
  %v3_1f6d2 = load i32, i32* %v2_1f6d2, align 4
  %v2_1f6d5 = add i32 %v0_1f6d2, -36
  %v3_1f6d5 = inttoptr i32 %v2_1f6d5 to i32*
  store i32 %v3_1f6d2, i32* %v3_1f6d5, align 4
  %v0_1f6d8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1f6de = load i32, i32* @ebp, align 4
  %v2_1f6de = add i32 %v1_1f6de, -12
  %v3_1f6de = inttoptr i32 %v2_1f6de to i32*
  store i32 %v0_1f6d8, i32* %v3_1f6de, align 4
  %v0_1f6e3 = load i32, i32* @ebp, align 4
  %v1_1f6e3 = add i32 %v0_1f6e3, -28
  %v2_1f6e3 = inttoptr i32 %v1_1f6e3 to i32*
  %v3_1f6e3 = load i32, i32* %v2_1f6e3, align 4
  %v1_1f6e6 = add i32 %v0_1f6e3, -32
  %v2_1f6e6 = inttoptr i32 %v1_1f6e6 to i32*
  %v3_1f6e6 = load i32, i32* %v2_1f6e6, align 4
  %v1_1f6e9 = inttoptr i32 %v3_1f6e6 to i32*
  %v2_1f6e9 = load i32, i32* %v1_1f6e9, align 4
  %v2_1f6eb = inttoptr i32 %v3_1f6e3 to i32*
  store i32 %v2_1f6e9, i32* %v2_1f6eb, align 4
  %v0_1f6ed = load i32, i32* @ebp, align 4
  %v1_1f6ed = add i32 %v0_1f6ed, -36
  %v2_1f6ed = inttoptr i32 %v1_1f6ed to i32*
  %v3_1f6ed = load i32, i32* %v2_1f6ed, align 4
  %v1_1f6f0 = inttoptr i32 %v3_1f6ed to i8*
  %v2_1f6f0 = load i8, i8* %v1_1f6f0, align 1
  %v1_1f6f3 = add i32 %v0_1f6ed, -28
  %v2_1f6f3 = inttoptr i32 %v1_1f6f3 to i32*
  %v3_1f6f3 = load i32, i32* %v2_1f6f3, align 4
  %v3_1f6f6 = add i32 %v3_1f6f3, 4
  %v4_1f6f6 = inttoptr i32 %v3_1f6f6 to i8*
  store i8 %v2_1f6f0, i8* %v4_1f6f6, align 1
  %v0_1f6f9 = load i32, i32* @ebp, align 4
  %v1_1f6f9 = add i32 %v0_1f6f9, -12
  %v2_1f6f9 = inttoptr i32 %v1_1f6f9 to i32*
  %v3_1f6f9 = load i32, i32* %v2_1f6f9, align 4
  %v1_1f6fc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f6fc = xor i32 %v1_1f6fc, %v3_1f6f9
  %v3_1f6fc = icmp eq i32 %v2_1f6fc, 0
  store i32 %v2_1f6fc, i32* @eax, align 4
  br i1 %v3_1f6fc, label %bb, label %dec_label_pc_1f705

bb:                                               ; preds = %dec_label_pc_1f6cc
  %v1_1f703 = call i32 @function_1f70a()
  br label %dec_label_pc_1f705

dec_label_pc_1f705:                               ; preds = %bb, %dec_label_pc_1f6cc
  %v3_1f703 = phi i32 [ %v1_1f703, %bb ], [ %v2_1f6fc, %dec_label_pc_1f6cc ]
  ret i32 %v3_1f703
}

define i32 @function_1f70a() local_unnamed_addr {
dec_label_pc_1f70a:
  %v0_1f70b = load i32, i32* @eax, align 4
  ret i32 %v0_1f70b
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK7uint256P11CBlockIndexEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f70c:
  %v2_1f726 = load i32, i32* %arg1, align 4
  ret i32 %v2_1f726
}

declare i32 @__stack_chk_fail.712() local_unnamed_addr

define i32 @function_1f748() local_unnamed_addr {
dec_label_pc_1f748:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f748 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f748 = add i32 %v0_1f748, -1
  store i32 %v1_1f748, i32* %ecx.global-to-local, align 4
  %v0_1f74a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f74a
}

define i32 @_Z9SerializeI11CDataStream12CBlockHeaderEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f74b:
  %v8_1f78f = call i32 @unknown_40555(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f7a0

bb:                                               ; preds = %dec_label_pc_1f74b
  %v1_1f79e = call i32 @function_1f7a5()
  br label %dec_label_pc_1f7a0

dec_label_pc_1f7a0:                               ; preds = %bb, %dec_label_pc_1f74b
  %v2_1f79e = phi i32 [ %v1_1f79e, %bb ], [ 0, %dec_label_pc_1f74b ]
  ret i32 %v2_1f79e

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f7a5() local_unnamed_addr {
dec_label_pc_1f7a5:
  %v0_1f7a6 = load i32, i32* @eax, align 4
  ret i32 %v0_1f7a6
}

define i32 @_Z9SerializeI11CDataStream12CTransactionSaIS1_EEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7a7:
  ret i32 %arg1
}

define i32 @function_1f7b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7b2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f7b4 = load i32, i32* @ebp, align 4
  %v0_1f7b5 = load i32, i32* @eax, align 4
  %v2_1f7b5 = or i32 %v0_1f7b5, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_1f7b5, i32* %eax.global-to-local, align 4
  %v1_1f7b7 = add i32 %v0_1f7b4, 2
  %v9_1f7b7 = icmp eq i32 %v1_1f7b7, 0
  store i32 %v1_1f7b7, i32* %ebp.global-to-local, align 4
  %v0_1f7b8 = load i32, i32* @ecx, align 4
  %v1_1f7b8 = add i32 %v0_1f7b8, -1
  store i32 %v1_1f7b8, i32* @ecx, align 4
  %v2_1f7b8 = icmp eq i32 %v1_1f7b8, 0
  %v4_1f7b8 = or i1 %v9_1f7b7, %v2_1f7b8
  br i1 %v4_1f7b8, label %dec_label_pc_1f7ba, label %bb

bb:                                               ; preds = %dec_label_pc_1f7b2
  %v6_1f7b8 = call i32 @__stack_chk_fail.712()
  store i32 %v6_1f7b8, i32* %eax.global-to-local, align 4
  %v0_1f7ba.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_1f7bb.pre = load i32, i32* @ecx, align 4
  %v6_1f7bb.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_1f7ba

dec_label_pc_1f7ba:                               ; preds = %dec_label_pc_1f7b2, %bb
  %v6_1f7bb = phi i1 [ false, %dec_label_pc_1f7b2 ], [ %v6_1f7bb.pre, %bb ]
  %v30_1f7bb = phi i32 [ %v1_1f7b8, %dec_label_pc_1f7b2 ], [ %v0_1f7bb.pre, %bb ]
  %v0_1f7ba = phi i32 [ %v1_1f7b7, %dec_label_pc_1f7b2 ], [ %v0_1f7ba.pre, %bb ]
  %v1_1f7ba = add i32 %v0_1f7ba, 1
  store i32 %v1_1f7ba, i32* %ebp.global-to-local, align 4
  %v1_1f7bb = add i32 %v30_1f7bb, 1166793797
  %v2_1f7bb = inttoptr i32 %v1_1f7bb to i8*
  %v3_1f7bb = load i8, i8* %v2_1f7bb, align 1
  %v5_1f7bb = trunc i32 %v30_1f7bb to i8
  %v7_1f7bb = zext i1 %v6_1f7bb to i8
  %v8_1f7bb = add i8 %v3_1f7bb, %v5_1f7bb
  %v9_1f7bb = add i8 %v8_1f7bb, %v7_1f7bb
  %v27_1f7bb = icmp ule i8 %v9_1f7bb, %v3_1f7bb
  %v28_1f7bb = icmp ult i8 %v8_1f7bb, %v3_1f7bb
  %v29_1f7bb = select i1 %v6_1f7bb, i1 %v27_1f7bb, i1 %v28_1f7bb
  store i1 %v29_1f7bb, i1* %cf.global-to-local, align 1
  store i8 %v9_1f7bb, i8* %v2_1f7bb, align 1
  %v0_1f7c1 = load i32, i32* %eax.global-to-local, align 4
  %v1_1f7c1 = trunc i32 %v0_1f7c1 to i8
  %v2_1f7c1 = load i1, i1* %cf.global-to-local, align 1
  %v3_1f7c1 = zext i1 %v2_1f7c1 to i8
  %v4_1f7c1 = add i8 %v1_1f7c1, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_1f7c1 = add i8 %v4_1f7c1, %v3_1f7c1
  %v20_1f7c1 = add i8 %v1_1f7c1, -119
  %v21_1f7c1 = add i8 %v20_1f7c1, %v3_1f7c1
  %v22_1f7c1 = icmp ule i8 %v21_1f7c1, %v1_1f7c1
  %v23_1f7c1 = icmp ugt i8 %v1_1f7c1, 118
  %v24_1f7c1 = select i1 %v2_1f7c1, i1 %v22_1f7c1, i1 %v23_1f7c1
  %v25_1f7c1 = zext i8 %v5_1f7c1 to i32
  %v27_1f7c1 = and i32 %v0_1f7c1, -256
  %v28_1f7c1 = or i32 %v25_1f7c1, %v27_1f7c1
  store i32 %v28_1f7c1, i32* %eax.global-to-local, align 4
  %v0_1f7c3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f7c3 = add i32 %v0_1f7c3, 1
  store i32 %v1_1f7c3, i32* @ebp, align 4
  %v3_1f7c7 = zext i1 %v24_1f7c1 to i8
  %v4_1f7c7 = add i8 %v3_1f7c7, %v5_1f7c1
  %v19_1f7c7 = icmp ule i8 %v4_1f7c7, %v5_1f7c1
  %v21_1f7c7 = icmp eq i1 %v24_1f7c1, %v19_1f7c7
  store i1 %v21_1f7c7, i1* %cf.global-to-local, align 1
  %v22_1f7c7 = zext i8 %v4_1f7c7 to i32
  %v25_1f7c7 = or i32 %v22_1f7c7, %v27_1f7c1
  store i32 %v25_1f7c7, i32* %eax.global-to-local, align 4
  %v1_1f7c9 = inttoptr i32 %v25_1f7c7 to i8*
  %v2_1f7c9 = load i8, i8* %v1_1f7c9, align 1
  %v5_1f7c9 = add i8 %v2_1f7c9, %v4_1f7c7
  store i8 %v5_1f7c9, i8* %v1_1f7c9, align 1
  %v0_1f7cb = load i32, i32* %eax.global-to-local, align 4
  %v1_1f7cb = load i32, i32* @ebp, align 4
  %v2_1f7cb = add i32 %v1_1f7cb, -12
  %v3_1f7cb = inttoptr i32 %v2_1f7cb to i32*
  store i32 %v0_1f7cb, i32* %v3_1f7cb, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_1f7d0 = load i32, i32* @ebp, align 4
  %v1_1f7d0 = add i32 %v0_1f7d0, -13
  store i32 %v1_1f7d0, i32* %eax.global-to-local, align 4
  %v1_1f7d7 = add i32 %v0_1f7d0, -40
  %v2_1f7d7 = inttoptr i32 %v1_1f7d7 to i32*
  %v3_1f7d7 = load i32, i32* %v2_1f7d7, align 4
  store i32 %v3_1f7d7, i32* %eax.global-to-local, align 4
  %v1_1f7de = add i32 %v0_1f7d0, -36
  %v2_1f7de = inttoptr i32 %v1_1f7de to i32*
  %v3_1f7de = load i32, i32* %v2_1f7de, align 4
  store i32 %v3_1f7de, i32* %eax.global-to-local, align 4
  %v1_1f7e5 = add i32 %v0_1f7d0, -32
  %v2_1f7e5 = inttoptr i32 %v1_1f7e5 to i32*
  %v3_1f7e5 = load i32, i32* %v2_1f7e5, align 4
  store i32 %v3_1f7e5, i32* %eax.global-to-local, align 4
  ret i32 %v3_1f7e5

; uselistorder directives
  uselistorder i32 %v0_1f7d0, { 1, 0, 2, 3 }
  uselistorder i8 %v4_1f7c7, { 0, 2, 1 }
  uselistorder i8 %v5_1f7c1, { 1, 0, 2 }
  uselistorder i8 %v9_1f7bb, { 1, 0 }
  uselistorder i8 %v8_1f7bb, { 1, 0 }
  uselistorder i8 %v3_1f7bb, { 1, 2, 0 }
  uselistorder i32 %v30_1f7bb, { 1, 0 }
  uselistorder i1 %v6_1f7bb, { 1, 0 }
  uselistorder i32 %v1_1f7b8, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder label %dec_label_pc_1f7ba, { 1, 0 }
}

define i32 @function_1f7e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7e6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f7e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7e8:
  %v0_1f7e8 = load i32, i32* @eax, align 4
  %v0_1f7ec = load i32, i32* @ebp, align 4
  %v1_1f7ec = add i32 %v0_1f7ec, -28
  %v2_1f7ec = inttoptr i32 %v1_1f7ec to i32*
  %v3_1f7ec = load i32, i32* %v2_1f7ec, align 4
  %v2_1f7f2 = call i32 @unknown_40716(i32 %v3_1f7ec, i32 %v0_1f7e8)
  %v0_1f7f7 = load i32, i32* @ebp, align 4
  %v1_1f7f7 = add i32 %v0_1f7f7, -12
  %v2_1f7f7 = inttoptr i32 %v1_1f7f7 to i32*
  %v3_1f7f7 = load i32, i32* %v2_1f7f7, align 4
  %v1_1f7fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f7fa = xor i32 %v1_1f7fa, %v3_1f7f7
  %v3_1f7fa = icmp eq i32 %v2_1f7fa, 0
  store i32 %v2_1f7fa, i32* @eax, align 4
  br i1 %v3_1f7fa, label %bb, label %dec_label_pc_1f803

bb:                                               ; preds = %dec_label_pc_1f7e8
  %v1_1f801 = call i32 @function_1f808()
  br label %dec_label_pc_1f803

dec_label_pc_1f803:                               ; preds = %bb, %dec_label_pc_1f7e8
  %v2_1f801 = phi i32 [ %v1_1f801, %bb ], [ %v2_1f7fa, %dec_label_pc_1f7e8 ]
  ret i32 %v2_1f801
}

define i32 @function_1f808() local_unnamed_addr {
dec_label_pc_1f808:
  %v0_1f809 = load i32, i32* @eax, align 4
  ret i32 %v0_1f809
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f80a:
  ret i32 0
}

define i32 @function_1f82e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f82e:
  %v2_1f82e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1f82e = load i32, i32* @eax, align 4
  %v4_1f82e = trunc i32 %v3_1f82e to i8
  %v5_1f82e = add i8 %v4_1f82e, %v2_1f82e
  %v21_1f82e = inttoptr i32 %v3_1f82e to i8*
  store i8 %v5_1f82e, i8* %v21_1f82e, align 1
  %v22_1f82e = load i32, i32* @eax, align 4
  ret i32 %v22_1f82e
}

define i32 @function_1f834() local_unnamed_addr {
dec_label_pc_1f834:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f834 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f834 = add i32 %v0_1f834, -532313149
  %v2_1f834 = inttoptr i32 %v1_1f834 to i32*
  %v3_1f834 = load i32, i32* %v2_1f834, align 4
  %v4_1f834 = add i32 %v3_1f834, -1
  store i32 %v4_1f834, i32* %v2_1f834, align 4
  %v0_1f83a = load i32, i32* %eax.global-to-local, align 4
  %v0_1f83e = load i32, i32* %ebx.global-to-local, align 4
  %v2_1f841 = call i32 @unknown_327f8(i32 %v0_1f83e, i32 %v0_1f83a)
  store i32 %v2_1f841, i32* %eax.global-to-local, align 4
  %v0_1f846 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f846 = add i32 %v0_1f846, -28
  %v2_1f846 = inttoptr i32 %v1_1f846 to i32*
  %v3_1f846 = load i32, i32* %v2_1f846, align 4
  store i32 %v3_1f846, i32* %eax.global-to-local, align 4
  %v0_1f849 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1f849 = inttoptr i32 %v3_1f846 to i32*
  store i32 %v0_1f849, i32* %v2_1f849, align 4
  %v0_1f84b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f84b = add i32 %v0_1f84b, -12
  %v2_1f84b = inttoptr i32 %v1_1f84b to i32*
  %v3_1f84b = load i32, i32* %v2_1f84b, align 4
  store i32 %v3_1f84b, i32* %eax.global-to-local, align 4
  %v1_1f84e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f84e = xor i32 %v1_1f84e, %v3_1f84b
  %v3_1f84e = icmp eq i32 %v2_1f84e, 0
  store i32 %v2_1f84e, i32* @eax, align 4
  br i1 %v3_1f84e, label %bb, label %dec_label_pc_1f857

bb:                                               ; preds = %dec_label_pc_1f834
  %v1_1f855 = call i32 @function_1f872()
  store i32 %v1_1f855, i32* @eax, align 4
  br label %dec_label_pc_1f857

dec_label_pc_1f857:                               ; preds = %bb, %dec_label_pc_1f834
  %v0_1f857 = call i32 @function_1f86d()
  store i32 %v0_1f857, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f857
}

define i32 @function_1f86d() local_unnamed_addr {
dec_label_pc_1f86d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f872() local_unnamed_addr {
dec_label_pc_1f872:
  %v0_1f878 = load i32, i32* @eax, align 4
  ret i32 %v0_1f878
}

define i32 @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_() local_unnamed_addr {
dec_label_pc_1f879:
  %eax.global-to-local = alloca i32, align 4
  %v5_1f879 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_1f879
}

define i32 @function_1f87a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f87a:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %v1_1f87a = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1f87a, i32* @ebp, align 4
  %v3_1f8b4 = call i32 @unknown_3d1c9(i32 %arg1, i32 %tmp8, i32 %tmp6)
  store i32 %v3_1f8b4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f8c5

bb:                                               ; preds = %dec_label_pc_1f87a
  %v1_1f8c3 = call i32 @function_1f8ca()
  br label %dec_label_pc_1f8c5

dec_label_pc_1f8c5:                               ; preds = %bb, %dec_label_pc_1f87a
  %v2_1f8c3 = phi i32 [ %v1_1f8c3, %bb ], [ %v3_1f8b4, %dec_label_pc_1f87a ]
  ret i32 %v2_1f8c3
}

define i32 @function_1f8ca() local_unnamed_addr {
dec_label_pc_1f8ca:
  %v0_1f8cb = load i32, i32* @eax, align 4
  ret i32 %v0_1f8cb
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f8cc:
  ret i32 %arg1
}

define i32 @function_1f8fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f8fa:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v10_1f8fe = icmp eq i32 %tmp4, 0
  br i1 %v10_1f8fe, label %bb, label %dec_label_pc_1f904

bb:                                               ; preds = %dec_label_pc_1f8fa
  %v1_1f902 = call i32 @function_1f922()
  br label %dec_label_pc_1f904

dec_label_pc_1f904:                               ; preds = %bb, %dec_label_pc_1f8fa
  %v5_1f90c = sub i32 %tmp3, %tmp4
  ret i32 %v5_1f90c

; uselistorder directives
  uselistorder i32 %tmp4, { 1, 0 }
}

define i32 @function_1f922() local_unnamed_addr {
dec_label_pc_1f922:
  %v0_1f922 = load i32, i32* @ebp, align 4
  %v1_1f922 = add i32 %v0_1f922, -16
  %v2_1f922 = inttoptr i32 %v1_1f922 to i32*
  %v3_1f922 = load i32, i32* %v2_1f922, align 4
  %v2_1f927 = add i32 %v0_1f922, -36
  %v3_1f927 = inttoptr i32 %v2_1f927 to i32*
  %v4_1f927 = load i32, i32* %v3_1f927, align 4
  %v5_1f927 = sub i32 %v4_1f927, %v3_1f922
  store i32 %v5_1f927, i32* @eax, align 4
  %v1_1f92a = add i32 %v0_1f922, -12
  %v2_1f92a = inttoptr i32 %v1_1f92a to i32*
  %v3_1f92a = load i32, i32* %v2_1f92a, align 4
  %v1_1f92d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f92d = icmp eq i32 %v1_1f92d, %v3_1f92a
  br i1 %v3_1f92d, label %bb, label %dec_label_pc_1f936

bb:                                               ; preds = %dec_label_pc_1f922
  %v1_1f934 = call i32 @function_1f93b()
  br label %dec_label_pc_1f936

dec_label_pc_1f936:                               ; preds = %bb, %dec_label_pc_1f922
  %v2_1f934 = phi i32 [ %v1_1f934, %bb ], [ %v5_1f927, %dec_label_pc_1f922 ]
  ret i32 %v2_1f934
}

define i32 @function_1f93b() local_unnamed_addr {
dec_label_pc_1f93b:
  %v0_1f93c = load i32, i32* @eax, align 4
  ret i32 %v0_1f93c
}

define i32 @_ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_() local_unnamed_addr {
dec_label_pc_1f93d:
  %eax.global-to-local = alloca i32, align 4
  %v5_1f93d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_1f93d
}

define i32 @function_1f95a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f95a:
  %v0_1f95a = load i32, i32* @edx, align 8
  %v1_1f95a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f95a = icmp eq i32 %v1_1f95a, %v0_1f95a
  br i1 %v3_1f95a, label %bb, label %dec_label_pc_1f95a.dec_label_pc_1f963_crit_edge

dec_label_pc_1f95a.dec_label_pc_1f963_crit_edge:  ; preds = %dec_label_pc_1f95a
  %v2_1f961.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1f963

bb:                                               ; preds = %dec_label_pc_1f95a
  %v1_1f961 = call i32 @function_1f968()
  br label %dec_label_pc_1f963

dec_label_pc_1f963:                               ; preds = %dec_label_pc_1f95a.dec_label_pc_1f963_crit_edge, %bb
  %v2_1f961 = phi i32 [ %v2_1f961.pre, %dec_label_pc_1f95a.dec_label_pc_1f963_crit_edge ], [ %v1_1f961, %bb ]
  ret i32 %v2_1f961

; uselistorder directives
  uselistorder label %dec_label_pc_1f963, { 1, 0 }
}

define i32 @function_1f968() local_unnamed_addr {
dec_label_pc_1f968:
  %v0_1f969 = load i32, i32* @eax, align 4
  ret i32 %v0_1f969
}

define i32 @_ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f96a:
  %v1_1f987 = call i32 @unknown_3f2a7(i32 %arg1)
  store i32 %v1_1f987, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f998

bb:                                               ; preds = %dec_label_pc_1f96a
  %v1_1f996 = call i32 @function_1f99d()
  br label %dec_label_pc_1f998

dec_label_pc_1f998:                               ; preds = %bb, %dec_label_pc_1f96a
  %v2_1f996 = phi i32 [ %v1_1f996, %bb ], [ %v1_1f987, %dec_label_pc_1f96a ]
  ret i32 %v2_1f996
}

define i32 @function_1f99d() local_unnamed_addr {
dec_label_pc_1f99d:
  %v0_1f99e = load i32, i32* @eax, align 4
  ret i32 %v0_1f99e
}

define i32 @_ZNK9CFlatData9SerializeI11CDataStreamEEvRT_ii() local_unnamed_addr {
dec_label_pc_1f9a0:
  %eax.global-to-local = alloca i32, align 4
  %v17_1f9a3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1f9a3
}

define i32 @function_1f9a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1f9a8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f9a8 = load i32, i32* @ecx, align 4
  %v1_1f9a8 = add i32 %v0_1f9a8, 1166795845
  %v2_1f9a8 = inttoptr i32 %v1_1f9a8 to i8*
  %v3_1f9a8 = load i8, i8* %v2_1f9a8, align 1
  %v5_1f9a8 = trunc i32 %v0_1f9a8 to i8
  %v6_1f9a8 = or i8 %v3_1f9a8, %v5_1f9a8
  store i8 %v6_1f9a8, i8* %v2_1f9a8, align 1
  %v0_1f9ae = load i32, i32* @eax, align 4
  %v2_1f9ae = or i32 %v0_1f9ae, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_1f9ae, i32* %eax.global-to-local, align 4
  %v0_1f9b0 = load i32, i32* @ebp, align 4
  %v0_1f9b1 = load i32, i32* @ecx, align 4
  %v1_1f9b1 = add i32 %v0_1f9b1, 255
  %v1_1f9b3 = add i32 %v0_1f9b0, 2
  store i32 %v1_1f9b3, i32* %ebp.global-to-local, align 4
  %v1_1f9b4 = add i32 %v0_1f9b1, 1166793796
  %v2_1f9b4 = inttoptr i32 %v1_1f9b4 to i8*
  %v3_1f9b4 = load i8, i8* %v2_1f9b4, align 1
  %v5_1f9b4 = trunc i32 %v1_1f9b1 to i8
  %v8_1f9b4 = add i8 %v3_1f9b4, %v5_1f9b4
  %v28_1f9b4 = icmp ult i8 %v8_1f9b4, %v3_1f9b4
  store i1 %v28_1f9b4, i1* %cf.global-to-local, align 1
  store i8 %v8_1f9b4, i8* %v2_1f9b4, align 1
  %v0_1f9ba = load i32, i32* %eax.global-to-local, align 4
  %v1_1f9ba = trunc i32 %v0_1f9ba to i8
  %v2_1f9ba = load i1, i1* %cf.global-to-local, align 1
  %v3_1f9ba = zext i1 %v2_1f9ba to i8
  %v4_1f9ba = add i8 %v1_1f9ba, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_1f9ba = add i8 %v4_1f9ba, %v3_1f9ba
  %v20_1f9ba = add i8 %v1_1f9ba, -119
  %v21_1f9ba = add i8 %v20_1f9ba, %v3_1f9ba
  %v22_1f9ba = icmp ule i8 %v21_1f9ba, %v1_1f9ba
  %v23_1f9ba = icmp ugt i8 %v1_1f9ba, 118
  %v24_1f9ba = select i1 %v2_1f9ba, i1 %v22_1f9ba, i1 %v23_1f9ba
  %v25_1f9ba = zext i8 %v5_1f9ba to i32
  %v27_1f9ba = and i32 %v0_1f9ba, -256
  %v28_1f9ba = or i32 %v25_1f9ba, %v27_1f9ba
  store i32 %v28_1f9ba, i32* %eax.global-to-local, align 4
  %v0_1f9bc = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f9bc = add i32 %v0_1f9bc, 1
  store i32 %v1_1f9bc, i32* @ebp, align 4
  %v3_1f9c0 = zext i1 %v24_1f9ba to i8
  %v4_1f9c0 = add i8 %v3_1f9c0, %v5_1f9ba
  %v19_1f9c0 = icmp ule i8 %v4_1f9c0, %v5_1f9ba
  %v21_1f9c0 = icmp eq i1 %v24_1f9ba, %v19_1f9c0
  store i1 %v21_1f9c0, i1* %cf.global-to-local, align 1
  %v22_1f9c0 = zext i8 %v4_1f9c0 to i32
  %v25_1f9c0 = or i32 %v22_1f9c0, %v27_1f9ba
  store i32 %v25_1f9c0, i32* %eax.global-to-local, align 4
  %v1_1f9c2 = inttoptr i32 %v25_1f9c0 to i8*
  %v2_1f9c2 = load i8, i8* %v1_1f9c2, align 1
  %v5_1f9c2 = add i8 %v2_1f9c2, %v4_1f9c0
  store i8 %v5_1f9c2, i8* %v1_1f9c2, align 1
  %v0_1f9c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_1f9c4 = load i32, i32* @ebp, align 4
  %v2_1f9c4 = add i32 %v1_1f9c4, -12
  %v3_1f9c4 = inttoptr i32 %v2_1f9c4 to i32*
  store i32 %v0_1f9c4, i32* %v3_1f9c4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1f9c9 = load i32, i32* @ebp, align 4
  %v1_1f9c9 = add i32 %v0_1f9c9, -28
  %v2_1f9c9 = inttoptr i32 %v1_1f9c9 to i32*
  %v3_1f9c9 = load i32, i32* %v2_1f9c9, align 4
  store i32 %v3_1f9c9, i32* %eax.global-to-local, align 4
  %v1_1f9cc = add i32 %v3_1f9c9, 4
  %v2_1f9cc = inttoptr i32 %v1_1f9cc to i32*
  %v3_1f9cc = load i32, i32* %v2_1f9cc, align 4
  store i32 %v3_1f9cc, i32* %eax.global-to-local, align 4
  %v3_1f9d1 = load i32, i32* %v2_1f9c9, align 4
  store i32 %v3_1f9d1, i32* %eax.global-to-local, align 4
  %v1_1f9d4 = inttoptr i32 %v3_1f9d1 to i32*
  %v2_1f9d4 = load i32, i32* %v1_1f9d4, align 4
  store i32 %v2_1f9d4, i32* %eax.global-to-local, align 4
  %v2_1f9d6 = sub i32 %v3_1f9cc, %v2_1f9d4
  %v7_1f9d6 = icmp ult i32 %v3_1f9cc, %v2_1f9d4
  store i1 %v7_1f9d6, i1* %cf.global-to-local, align 1
  %v3_1f9d8 = load i32, i32* %v2_1f9c9, align 4
  store i32 %v3_1f9d8, i32* %eax.global-to-local, align 4
  %v1_1f9db = inttoptr i32 %v3_1f9d8 to i32*
  %v2_1f9db = load i32, i32* %v1_1f9db, align 4
  store i32 %v2_1f9db, i32* %eax.global-to-local, align 4
  %v1_1f9e5 = add i32 %v0_1f9c9, -32
  %v2_1f9e5 = inttoptr i32 %v1_1f9e5 to i32*
  %v3_1f9e5 = load i32, i32* %v2_1f9e5, align 4
  store i32 %v3_1f9e5, i32* %eax.global-to-local, align 4
  %v3_1f9eb = call i32 @unknown_2d4e4(i32 %v3_1f9e5, i32 %v2_1f9db, i32 %v2_1f9d6)
  store i32 %v3_1f9eb, i32* %eax.global-to-local, align 4
  %v0_1f9f0 = load i32, i32* @ebp, align 4
  %v1_1f9f0 = add i32 %v0_1f9f0, -12
  %v2_1f9f0 = inttoptr i32 %v1_1f9f0 to i32*
  %v3_1f9f0 = load i32, i32* %v2_1f9f0, align 4
  store i32 %v3_1f9f0, i32* %eax.global-to-local, align 4
  %v1_1f9f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f9f3 = xor i32 %v1_1f9f3, %v3_1f9f0
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1f9f3 = icmp eq i32 %v2_1f9f3, 0
  store i32 %v2_1f9f3, i32* @eax, align 4
  br i1 %v3_1f9f3, label %bb, label %dec_label_pc_1f9fc

bb:                                               ; preds = %dec_label_pc_1f9a8
  %v1_1f9fa = call i32 @function_1fa01()
  store i32 %v1_1f9fa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1f9fc

dec_label_pc_1f9fc:                               ; preds = %bb, %dec_label_pc_1f9a8
  %v3_1f9fa = phi i32 [ %v1_1f9fa, %bb ], [ %v2_1f9f3, %dec_label_pc_1f9a8 ]
  ret i32 %v3_1f9fa

; uselistorder directives
  uselistorder i32 %v2_1f9d4, { 1, 0, 2 }
  uselistorder i32 %v3_1f9cc, { 1, 0, 2 }
  uselistorder i8 %v4_1f9c0, { 0, 2, 1 }
  uselistorder i8 %v5_1f9ba, { 1, 0, 2 }
  uselistorder i8 %v3_1f9b4, { 1, 0 }
}

define i32 @function_1fa01() local_unnamed_addr {
dec_label_pc_1fa01:
  %v0_1fa02 = load i32, i32* @eax, align 4
  ret i32 %v0_1fa02
}

define i32 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa03:
  %v10_1fa1a = icmp eq i32 %arg1, 0
  %v1_1fa1e = zext i1 %v10_1fa1a to i32
  ret i32 %v1_1fa1e
}

define i32 @function_1fa26(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa26:
  %v0_1fa26 = load i32, i32* @eax, align 4
  %v1_1fa26 = load i1, i1* @cf, align 1
  %v2_1fa26 = zext i1 %v1_1fa26 to i32
  %v3_1fa26 = add i32 %v0_1fa26, 20
  %v4_1fa26 = add i32 %v3_1fa26, %v2_1fa26
  %v14_1fa26 = icmp eq i32 %v4_1fa26, 0
  store i32 %v4_1fa26, i32* @eax, align 4
  br i1 %v14_1fa26, label %bb, label %dec_label_pc_1fa2d

bb:                                               ; preds = %dec_label_pc_1fa26
  %v1_1fa2b = call i32 @function_1fa32()
  br label %dec_label_pc_1fa2d

dec_label_pc_1fa2d:                               ; preds = %bb, %dec_label_pc_1fa26
  %v2_1fa2b = phi i32 [ %v1_1fa2b, %bb ], [ %v4_1fa26, %dec_label_pc_1fa26 ]
  ret i32 %v2_1fa2b
}

define i32 @function_1fa32() local_unnamed_addr {
dec_label_pc_1fa32:
  %v0_1fa33 = load i32, i32* @eax, align 4
  ret i32 %v0_1fa33
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1fa34:
  ret i32 %arg1
}

define i32 @function_1fa86(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa86:
  %v0_1fa86 = load i32, i32* @eax, align 4
  %v1_1fa89 = call i32 @unknown_40a7d(i32 %v0_1fa86)
  %v0_1fa8e = load i32, i32* @ebp, align 4
  %v1_1fa8e = add i32 %v0_1fa8e, -12
  %v2_1fa8e = inttoptr i32 %v1_1fa8e to i32*
  %v3_1fa8e = load i32, i32* %v2_1fa8e, align 4
  %v1_1fa91 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fa91 = xor i32 %v1_1fa91, %v3_1fa8e
  %v3_1fa91 = icmp eq i32 %v2_1fa91, 0
  store i32 %v2_1fa91, i32* @eax, align 4
  br i1 %v3_1fa91, label %bb, label %dec_label_pc_1fa9a

bb:                                               ; preds = %dec_label_pc_1fa86
  %v1_1fa98 = call i32 @function_1fa9f()
  br label %dec_label_pc_1fa9a

dec_label_pc_1fa9a:                               ; preds = %bb, %dec_label_pc_1fa86
  %v2_1fa98 = phi i32 [ %v1_1fa98, %bb ], [ %v2_1fa91, %dec_label_pc_1fa86 ]
  ret i32 %v2_1fa98
}

define i32 @function_1fa9f() local_unnamed_addr {
dec_label_pc_1fa9f:
  %v0_1faa0 = load i32, i32* @eax, align 4
  ret i32 %v0_1faa0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsSE_NS5_IS6_INS7_10Value_implISA_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1faa1:
  %edx.global-to-local = alloca i32, align 4
  %v0_1fad7 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1fad7, 16777216
  %v5_1faf6 = sdiv i32 %sext, 16777216
  %v6_1faf6 = call i32 @unknown_40b4f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1faf6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1fb07

bb:                                               ; preds = %dec_label_pc_1faa1
  %v1_1fb05 = call i32 @function_1fb0c()
  br label %dec_label_pc_1fb07

dec_label_pc_1fb07:                               ; preds = %bb, %dec_label_pc_1faa1
  %v2_1fb05 = phi i32 [ %v1_1fb05, %bb ], [ 0, %dec_label_pc_1faa1 ]
  ret i32 %v2_1fb05
}

define i32 @function_1fb0c() local_unnamed_addr {
dec_label_pc_1fb0c:
  %v0_1fb0d = load i32, i32* @eax, align 4
  ret i32 %v0_1fb0d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsNS5_IS6_INS7_9Pair_implISA_EESaISH_EEEESE_bxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1fb0e:
  ret i32 %arg3
}

define i32 @function_1fb52(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb52:
  %v0_1fb52 = load i32, i32* @eax, align 4
  %v0_1fb56 = load i32, i32* @ebp, align 4
  %v1_1fb56 = add i32 %v0_1fb56, -32
  %v2_1fb56 = inttoptr i32 %v1_1fb56 to i32*
  %v3_1fb56 = load i32, i32* %v2_1fb56, align 4
  %v1_1fb5d = add i32 %v0_1fb56, -28
  %v2_1fb5d = inttoptr i32 %v1_1fb5d to i32*
  %v3_1fb5d = load i32, i32* %v2_1fb5d, align 4
  %v3_1fb63 = call i32 @unknown_40c21(i32 %v3_1fb5d, i32 %v3_1fb56, i32 %v0_1fb52)
  %v0_1fb68 = load i32, i32* @ebp, align 4
  %v1_1fb68 = add i32 %v0_1fb68, -12
  %v2_1fb68 = inttoptr i32 %v1_1fb68 to i32*
  %v3_1fb68 = load i32, i32* %v2_1fb68, align 4
  %v1_1fb6b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fb6b = xor i32 %v1_1fb6b, %v3_1fb68
  %v3_1fb6b = icmp eq i32 %v2_1fb6b, 0
  store i32 %v2_1fb6b, i32* @eax, align 4
  br i1 %v3_1fb6b, label %bb, label %dec_label_pc_1fb74

bb:                                               ; preds = %dec_label_pc_1fb52
  %v1_1fb72 = call i32 @function_1fb79()
  br label %dec_label_pc_1fb74

dec_label_pc_1fb74:                               ; preds = %bb, %dec_label_pc_1fb52
  %v2_1fb72 = phi i32 [ %v1_1fb72, %bb ], [ %v2_1fb6b, %dec_label_pc_1fb52 ]
  ret i32 %v2_1fb72
}

define i32 @function_1fb79() local_unnamed_addr {
dec_label_pc_1fb79:
  %v0_1fb7a = load i32, i32* @eax, align 4
  ret i32 %v0_1fb7a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1fb7b:
  ret i32 0
}

define i32 @function_1fbb2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fbb2:
  %v0_1fbb5 = load i32, i32* @ebp, align 4
  %v1_1fbb5 = add i32 %v0_1fbb5, -40
  %v2_1fbb5 = inttoptr i32 %v1_1fbb5 to i32*
  %v3_1fbb5 = load i32, i32* %v2_1fbb5, align 4
  %v1_1fbbc = add i32 %v0_1fbb5, -36
  %v2_1fbbc = inttoptr i32 %v1_1fbbc to i32*
  %v3_1fbbc = load i32, i32* %v2_1fbbc, align 4
  %v1_1fbc3 = add i32 %v0_1fbb5, -32
  %v2_1fbc3 = inttoptr i32 %v1_1fbc3 to i32*
  %v3_1fbc3 = load i32, i32* %v2_1fbc3, align 4
  %v1_1fbca = add i32 %v0_1fbb5, -28
  %v2_1fbca = inttoptr i32 %v1_1fbca to i32*
  %v3_1fbca = load i32, i32* %v2_1fbca, align 4
  %v4_1fbd0 = call i32 @unknown_40cf3(i32 %v3_1fbca, i32 %v3_1fbc3, i32 %v3_1fbbc, i32 %v3_1fbb5)
  %v0_1fbd5 = load i32, i32* @ebp, align 4
  %v1_1fbd5 = add i32 %v0_1fbd5, -12
  %v2_1fbd5 = inttoptr i32 %v1_1fbd5 to i32*
  %v3_1fbd5 = load i32, i32* %v2_1fbd5, align 4
  %v1_1fbd8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fbd8 = xor i32 %v1_1fbd8, %v3_1fbd5
  %v3_1fbd8 = icmp eq i32 %v2_1fbd8, 0
  store i32 %v2_1fbd8, i32* @eax, align 4
  br i1 %v3_1fbd8, label %bb, label %dec_label_pc_1fbe1

bb:                                               ; preds = %dec_label_pc_1fbb2
  %v1_1fbdf = call i32 @function_1fbe6()
  br label %dec_label_pc_1fbe1

dec_label_pc_1fbe1:                               ; preds = %bb, %dec_label_pc_1fbb2
  %v2_1fbdf = phi i32 [ %v1_1fbdf, %bb ], [ %v2_1fbd8, %dec_label_pc_1fbb2 ]
  ret i32 %v2_1fbdf

; uselistorder directives
  uselistorder i32 %v0_1fbb5, { 1, 0, 2, 3 }
}

define i32 @function_1fbe6() local_unnamed_addr {
dec_label_pc_1fbe6:
  %v0_1fbe7 = load i32, i32* @eax, align 4
  ret i32 %v0_1fbe7
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1fbe8:
  ret i32 %arg6
}

define i32 @function_1fc18(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1fc18:
  %v0_1fc18 = load i32, i32* @ecx, align 4
  %v1_1fc18 = add i32 %v0_1fc18, -1070468027
  %v2_1fc18 = inttoptr i32 %v1_1fc18 to i8*
  %v3_1fc18 = load i8, i8* %v2_1fc18, align 1
  %v5_1fc18 = trunc i32 %v0_1fc18 to i8
  %v6_1fc18 = add i8 %v3_1fc18, %v5_1fc18
  store i8 %v6_1fc18, i8* %v2_1fc18, align 1
  %v0_1fc1e = load i32, i32* @edx, align 8
  %v0_1fc22 = load i32, i32* @ebp, align 4
  %v1_1fc22 = add i32 %v0_1fc22, -40
  %v2_1fc22 = inttoptr i32 %v1_1fc22 to i32*
  %v3_1fc22 = load i32, i32* %v2_1fc22, align 4
  %v1_1fc29 = add i32 %v0_1fc22, -36
  %v2_1fc29 = inttoptr i32 %v1_1fc29 to i32*
  %v3_1fc29 = load i32, i32* %v2_1fc29, align 4
  %v1_1fc30 = add i32 %v0_1fc22, -32
  %v2_1fc30 = inttoptr i32 %v1_1fc30 to i32*
  %v3_1fc30 = load i32, i32* %v2_1fc30, align 4
  %v1_1fc37 = add i32 %v0_1fc22, -28
  %v2_1fc37 = inttoptr i32 %v1_1fc37 to i32*
  %v3_1fc37 = load i32, i32* %v2_1fc37, align 4
  %sext = mul i32 %v0_1fc1e, 16777216
  %v5_1fc3d = sdiv i32 %sext, 16777216
  %v6_1fc3d = call i32 @unknown_40dc5(i32 %v3_1fc37, i32 %v3_1fc30, i32 %v3_1fc29, i32 %v3_1fc22, i32 %v5_1fc3d)
  %v0_1fc42 = load i32, i32* @ebp, align 4
  %v1_1fc42 = add i32 %v0_1fc42, -12
  %v2_1fc42 = inttoptr i32 %v1_1fc42 to i32*
  %v3_1fc42 = load i32, i32* %v2_1fc42, align 4
  %v1_1fc45 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fc45 = xor i32 %v1_1fc45, %v3_1fc42
  %v3_1fc45 = icmp eq i32 %v2_1fc45, 0
  store i32 %v2_1fc45, i32* @eax, align 4
  br i1 %v3_1fc45, label %bb, label %dec_label_pc_1fc4e

bb:                                               ; preds = %dec_label_pc_1fc18
  %v1_1fc4c = call i32 @function_1fc53()
  br label %dec_label_pc_1fc4e

dec_label_pc_1fc4e:                               ; preds = %bb, %dec_label_pc_1fc18
  %v2_1fc4c = phi i32 [ %v1_1fc4c, %bb ], [ %v2_1fc45, %dec_label_pc_1fc18 ]
  ret i32 %v2_1fc4c

; uselistorder directives
  uselistorder i32 %v0_1fc22, { 1, 0, 2, 3 }
}

define i32 @function_1fc53() local_unnamed_addr {
dec_label_pc_1fc53:
  %v0_1fc54 = load i32, i32* @eax, align 4
  ret i32 %v0_1fc54
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1fc55:
  ret i32 %arg6
}

define i32 @function_1fc7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fc7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fc7e = load i32, i32* @ebp, align 4
  %v1_1fc7e = add i32 %v0_1fc7e, 1
  store i32 %v1_1fc7e, i32* @ebp, align 4
  %v1_1fc7f = add i32 %v0_1fc7e, -94
  %v2_1fc7f = inttoptr i32 %v1_1fc7f to i8*
  %v3_1fc7f = load i8, i8* %v2_1fc7f, align 1
  %v5_1fc7f = mul i8 %v3_1fc7f, 2
  store i8 %v5_1fc7f, i8* %v2_1fc7f, align 1
  %v16_1fc7f = icmp slt i8 %v3_1fc7f, 0
  %v0_1fc82 = load i32, i32* @eax, align 4
  %v1_1fc82 = trunc i32 %v0_1fc82 to i8
  %v3_1fc82 = zext i1 %v16_1fc7f to i8
  %v4_1fc82 = add i8 %v1_1fc82, %v3_1fc82
  %v22_1fc82 = zext i8 %v4_1fc82 to i32
  %v24_1fc82 = and i32 %v0_1fc82, -256
  %v25_1fc82 = or i32 %v22_1fc82, %v24_1fc82
  store i32 %v25_1fc82, i32* %eax.global-to-local, align 4
  %v1_1fc84 = inttoptr i32 %v25_1fc82 to i8*
  %v2_1fc84 = load i8, i8* %v1_1fc84, align 1
  %v5_1fc84 = add i8 %v2_1fc84, %v4_1fc82
  store i8 %v5_1fc84, i8* %v1_1fc84, align 1
  %v0_1fc86 = load i32, i32* %eax.global-to-local, align 4
  %v1_1fc86 = load i32, i32* @ebp, align 4
  %v2_1fc86 = add i32 %v1_1fc86, -12
  %v3_1fc86 = inttoptr i32 %v2_1fc86 to i32*
  store i32 %v0_1fc86, i32* %v3_1fc86, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1fc8b = load i32, i32* @edx, align 8
  %v0_1fc8f = load i32, i32* @ebp, align 4
  %v1_1fc8f = add i32 %v0_1fc8f, -40
  %v2_1fc8f = inttoptr i32 %v1_1fc8f to i32*
  %v3_1fc8f = load i32, i32* %v2_1fc8f, align 4
  store i32 %v3_1fc8f, i32* %eax.global-to-local, align 4
  %v1_1fc96 = add i32 %v0_1fc8f, -36
  %v2_1fc96 = inttoptr i32 %v1_1fc96 to i32*
  %v3_1fc96 = load i32, i32* %v2_1fc96, align 4
  store i32 %v3_1fc96, i32* %eax.global-to-local, align 4
  %v1_1fc9d = add i32 %v0_1fc8f, -32
  %v2_1fc9d = inttoptr i32 %v1_1fc9d to i32*
  %v3_1fc9d = load i32, i32* %v2_1fc9d, align 4
  store i32 %v3_1fc9d, i32* %eax.global-to-local, align 4
  %v1_1fca4 = add i32 %v0_1fc8f, -28
  %v2_1fca4 = inttoptr i32 %v1_1fca4 to i32*
  %v3_1fca4 = load i32, i32* %v2_1fca4, align 4
  store i32 %v3_1fca4, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_1fc8b, 16777216
  %v5_1fcaa = sdiv i32 %sext, 16777216
  %v6_1fcaa = call i32 @unknown_40e97(i32 %v3_1fca4, i32 %v3_1fc9d, i32 %v3_1fc96, i32 %v3_1fc8f, i32 %v5_1fcaa)
  store i32 %v6_1fcaa, i32* %eax.global-to-local, align 4
  %v0_1fcaf = load i32, i32* @ebp, align 4
  %v1_1fcaf = add i32 %v0_1fcaf, -12
  %v2_1fcaf = inttoptr i32 %v1_1fcaf to i32*
  %v3_1fcaf = load i32, i32* %v2_1fcaf, align 4
  store i32 %v3_1fcaf, i32* %eax.global-to-local, align 4
  %v1_1fcb2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fcb2 = xor i32 %v1_1fcb2, %v3_1fcaf
  store i32 %v2_1fcb2, i32* %eax.global-to-local, align 4
  ret i32 %v2_1fcb2

; uselistorder directives
  uselistorder i32 %v0_1fc8f, { 1, 0, 2, 3 }
  uselistorder i8 %v3_1fc7f, { 1, 0 }
}

define i32 @function_1fcbf() local_unnamed_addr {
dec_label_pc_1fcbf:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1fcbf = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fcbf = add i32 %v0_1fcbf, -1
  store i32 %v1_1fcbf, i32* %ecx.global-to-local, align 4
  %v0_1fcc1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fcc1
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fcc2:
  ret i32 %arg4
}

define i32 @function_1fcde(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fcde:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1fcde = load i32, i32* @ebp, align 4
  %v1_1fcde = add i32 %v0_1fcde, 1
  store i32 %v1_1fcde, i32* %ebp.global-to-local, align 4
  %v0_1fce3 = load i32, i32* @eax, align 4
  %v1_1fce3 = add i32 %v0_1fce3, 1166792517
  %v2_1fce3 = inttoptr i32 %v1_1fce3 to i8*
  %v3_1fce3 = load i8, i8* %v2_1fce3, align 1
  %v4_1fce3 = load i32, i32* @ecx, align 4
  %v5_1fce3 = trunc i32 %v4_1fce3 to i8
  %v6_1fce3 = load i1, i1* @cf, align 1
  %v7_1fce3 = zext i1 %v6_1fce3 to i8
  %v8_1fce3 = sub i8 %v3_1fce3, %v5_1fce3
  %v9_1fce3 = add i8 %v8_1fce3, %v7_1fce3
  %v19_1fce3 = sub i8 %v8_1fce3, %v7_1fce3
  %v20_1fce3 = icmp ult i8 %v3_1fce3, %v19_1fce3
  %v21_1fce3 = icmp ne i8 %v5_1fce3, -1
  %v22_1fce3 = or i1 %v21_1fce3, %v20_1fce3
  %v23_1fce3 = icmp ult i8 %v3_1fce3, %v5_1fce3
  %v24_1fce3 = select i1 %v6_1fce3, i1 %v22_1fce3, i1 %v23_1fce3
  store i1 %v24_1fce3, i1* %cf.global-to-local, align 1
  store i8 %v9_1fce3, i8* %v2_1fce3, align 1
  %v0_1fce9 = load i32, i32* @eax, align 4
  %v1_1fce9 = trunc i32 %v0_1fce9 to i8
  %v2_1fce9 = load i1, i1* %cf.global-to-local, align 1
  %v3_1fce9 = zext i1 %v2_1fce9 to i32
  %v4_1fce9 = add i32 %v0_1fce9, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_1fce9 = add i32 %v4_1fce9, %v3_1fce9
  %v17_1fce9 = icmp ult i8 %v1_1fce9, -119
  %v18_1fce9 = or i1 %v2_1fce9, %v17_1fce9
  store i1 %v18_1fce9, i1* %cf.global-to-local, align 1
  %v31_1fce9 = urem i32 %v5_1fce9, 256
  %v33_1fce9 = and i32 %v0_1fce9, -256
  %v34_1fce9 = or i32 %v31_1fce9, %v33_1fce9
  store i32 %v34_1fce9, i32* %eax.global-to-local, align 4
  %v0_1fceb = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fceb = add i32 %v0_1fceb, 1
  store i32 %v1_1fceb, i32* @ebp, align 4
  %v1_1fcec = add i32 %v0_1fceb, -94
  %v2_1fcec = inttoptr i32 %v1_1fcec to i8*
  %v3_1fcec = load i8, i8* %v2_1fcec, align 1
  %v5_1fcec = mul i8 %v3_1fcec, 2
  store i8 %v5_1fcec, i8* %v2_1fcec, align 1
  %v16_1fcec = icmp slt i8 %v3_1fcec, 0
  %v0_1fcef = load i32, i32* %eax.global-to-local, align 4
  %v1_1fcef = trunc i32 %v0_1fcef to i8
  %v3_1fcef = zext i1 %v16_1fcec to i8
  %v4_1fcef = add i8 %v1_1fcef, %v3_1fcef
  %v19_1fcef = icmp ule i8 %v4_1fcef, %v1_1fcef
  %v21_1fcef = icmp eq i1 %v16_1fcec, %v19_1fcef
  store i1 %v21_1fcef, i1* %cf.global-to-local, align 1
  %v22_1fcef = zext i8 %v4_1fcef to i32
  %v24_1fcef = and i32 %v0_1fcef, -256
  %v25_1fcef = or i32 %v22_1fcef, %v24_1fcef
  store i32 %v25_1fcef, i32* %eax.global-to-local, align 4
  %v1_1fcf1 = inttoptr i32 %v25_1fcef to i8*
  %v2_1fcf1 = load i8, i8* %v1_1fcf1, align 1
  %v5_1fcf1 = add i8 %v2_1fcf1, %v4_1fcef
  store i8 %v5_1fcf1, i8* %v1_1fcf1, align 1
  %v0_1fcf3 = load i32, i32* %eax.global-to-local, align 4
  %v1_1fcf3 = load i32, i32* @ebp, align 4
  %v2_1fcf3 = add i32 %v1_1fcf3, -12
  %v3_1fcf3 = inttoptr i32 %v2_1fcf3 to i32*
  store i32 %v0_1fcf3, i32* %v3_1fcf3, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_1fcef, { 0, 2, 1 }
  uselistorder i8 %v1_1fcef, { 1, 0 }
  uselistorder i8 %v3_1fcec, { 1, 0 }
  uselistorder i1 %v2_1fce9, { 1, 0 }
  uselistorder i32 %v0_1fce9, { 1, 0, 2 }
  uselistorder i8 %v5_1fce3, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9destroyerEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSH_13Config_vectorISsEEEESaISL_EEEENSF_ISG_INSH_10Value_implISK_EESaISQ_EEEEbxdNS1_5void_ESU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_E18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb1EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_1fd1c:
  %eax.global-to-local = alloca i32, align 4
  %v17_1fd1f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_1fd1f
}

define i32 @function_1fd24() local_unnamed_addr {
dec_label_pc_1fd24:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_1fd24 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fd24 = add i32 %v0_1fd24, 1166795845
  %v2_1fd24 = inttoptr i32 %v1_1fd24 to i8*
  %v3_1fd24 = load i8, i8* %v2_1fd24, align 1
  %v5_1fd24 = trunc i32 %v0_1fd24 to i8
  %v6_1fd24 = or i8 %v3_1fd24, %v5_1fd24
  store i8 %v6_1fd24, i8* %v2_1fd24, align 1
  %v0_1fd2a = load i32, i32* %eax.global-to-local, align 4
  %v2_1fd2a = or i32 %v0_1fd2a, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_1fd2a, i32* %eax.global-to-local, align 4
  %v0_1fd2c = load i32, i32* %ebp.global-to-local, align 4
  %v0_1fd2d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fd2d = add i32 %v0_1fd2d, -1
  store i32 %v1_1fd2d, i32* %ecx.global-to-local, align 4
  %v1_1fd2f = add i32 %v0_1fd2c, 2
  store i32 %v1_1fd2f, i32* %ebp.global-to-local, align 4
  %v1_1fd30 = add i32 %v0_1fd2d, 1166793796
  %v2_1fd30 = inttoptr i32 %v1_1fd30 to i8*
  %v3_1fd30 = load i8, i8* %v2_1fd30, align 1
  %v5_1fd30 = trunc i32 %v1_1fd2d to i8
  %v8_1fd30 = add i8 %v3_1fd30, %v5_1fd30
  %v28_1fd30 = icmp ult i8 %v8_1fd30, %v3_1fd30
  store i1 %v28_1fd30, i1* %cf.global-to-local, align 1
  store i8 %v8_1fd30, i8* %v2_1fd30, align 1
  %v0_1fd36 = load i32, i32* %eax.global-to-local, align 4
  %v1_1fd36 = trunc i32 %v0_1fd36 to i8
  %v2_1fd36 = load i1, i1* %cf.global-to-local, align 1
  %v3_1fd36 = zext i1 %v2_1fd36 to i8
  %v4_1fd36 = add i8 %v1_1fd36, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_1fd36 = add i8 %v4_1fd36, %v3_1fd36
  %v20_1fd36 = add i8 %v1_1fd36, -119
  %v21_1fd36 = add i8 %v20_1fd36, %v3_1fd36
  %v22_1fd36 = icmp ule i8 %v21_1fd36, %v1_1fd36
  %v23_1fd36 = icmp ugt i8 %v1_1fd36, 118
  %v24_1fd36 = select i1 %v2_1fd36, i1 %v22_1fd36, i1 %v23_1fd36
  store i1 %v24_1fd36, i1* %cf.global-to-local, align 1
  %v25_1fd36 = zext i8 %v5_1fd36 to i32
  %v27_1fd36 = and i32 %v0_1fd36, -256
  %v28_1fd36 = or i32 %v25_1fd36, %v27_1fd36
  store i32 %v28_1fd36, i32* %eax.global-to-local, align 4
  %v0_1fd38 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fd38 = add i32 %v0_1fd38, 1
  store i32 %v1_1fd38, i32* %ebp.global-to-local, align 4
  %v3_1fd39 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_1fd39 = fpext float %v3_1fd39 to x86_fp80
  %v5_1fd39 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_1fd39 = fmul x86_fp80 %v4_1fd39, %v5_1fd39
  store x86_fp80 %v6_1fd39, x86_fp80* %st0.global-to-local, align 4
  %v0_1fd3b = load i32, i32* %edx.global-to-local, align 8
  %v1_1fd3b = and i32 %v0_1fd3b, -65281
  %v2_1fd3b = or i32 %v1_1fd3b, 17664
  store i32 %v2_1fd3b, i32* %edx.global-to-local, align 8
  %v1_1fd3d = add i32 %v28_1fd36, -1240475835
  %v2_1fd3d = inttoptr i32 %v1_1fd3d to i8*
  %v3_1fd3d = load i8, i8* %v2_1fd3d, align 1
  %v4_1fd3d = load i32, i32* %ecx.global-to-local, align 4
  %v5_1fd3d = trunc i32 %v4_1fd3d to i8
  %v7_1fd3d = zext i1 %v24_1fd36 to i8
  %v8_1fd3d = sub i8 %v3_1fd3d, %v5_1fd3d
  %v9_1fd3d = add i8 %v8_1fd3d, %v7_1fd3d
  %v19_1fd3d = sub i8 %v8_1fd3d, %v7_1fd3d
  %v20_1fd3d = icmp ult i8 %v3_1fd3d, %v19_1fd3d
  %v21_1fd3d = icmp ne i8 %v5_1fd3d, -1
  %v22_1fd3d = or i1 %v21_1fd3d, %v20_1fd3d
  %v23_1fd3d = icmp ult i8 %v3_1fd3d, %v5_1fd3d
  %v24_1fd3d = select i1 %v24_1fd36, i1 %v22_1fd3d, i1 %v23_1fd3d
  store i1 %v24_1fd3d, i1* %cf.global-to-local, align 1
  store i8 %v9_1fd3d, i8* %v2_1fd3d, align 1
  %v0_1fd43 = load i32, i32* %ebp.global-to-local, align 4
  %v0_1fd44 = load i32, i32* %eax.global-to-local, align 4
  %v1_1fd44 = trunc i32 %v0_1fd44 to i8
  %v2_1fd44 = load i1, i1* %cf.global-to-local, align 1
  %v17_1fd44 = icmp ult i8 %v1_1fd44, -120
  %v18_1fd44 = or i1 %v2_1fd44, %v17_1fd44
  %v1_1fd46 = add i32 %v0_1fd43, 2
  store i32 %v1_1fd46, i32* %ebp.global-to-local, align 4
  %v3_1fd47 = select i1 %v18_1fd44, i32 255, i32 0
  %v5_1fd47 = and i32 %v0_1fd44, -256
  %v6_1fd47 = or i32 %v3_1fd47, %v5_1fd47
  store i32 %v6_1fd47, i32* %eax.global-to-local, align 4
  %v1_1fd48 = add i32 %v0_1fd43, 34
  %v2_1fd48 = inttoptr i32 %v1_1fd48 to i32*
  %v3_1fd48 = load i32, i32* %v2_1fd48, align 4
  store i32 %v3_1fd48, i32* %eax.global-to-local, align 4
  %v2_1fd4b = add i32 %v0_1fd43, -46
  %v3_1fd4b = inttoptr i32 %v2_1fd4b to i32*
  store i32 %v3_1fd48, i32* %v3_1fd4b, align 4
  %v0_1fd4e = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fd4e = add i32 %v0_1fd4e, 36
  %v2_1fd4e = inttoptr i32 %v1_1fd4e to i32*
  %v3_1fd4e = load i32, i32* %v2_1fd4e, align 4
  store i32 %v3_1fd4e, i32* %eax.global-to-local, align 4
  %v2_1fd51 = add i32 %v0_1fd4e, -52
  %v3_1fd51 = inttoptr i32 %v2_1fd51 to i32*
  store i32 %v3_1fd4e, i32* %v3_1fd51, align 4
  %v0_1fd54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1fd5a = load i32, i32* %ebp.global-to-local, align 4
  %v2_1fd5a = add i32 %v1_1fd5a, -12
  %v3_1fd5a = inttoptr i32 %v2_1fd5a to i32*
  store i32 %v0_1fd54, i32* %v3_1fd5a, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v8_1fd3d, { 1, 0 }
  uselistorder i8 %v7_1fd3d, { 1, 0 }
  uselistorder i8 %v5_1fd3d, { 1, 0, 2 }
  uselistorder i1 %v24_1fd36, { 1, 0, 2 }
  uselistorder i8 %v3_1fd30, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN11json_spirit9Pair_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fd83:
  ret i32 %arg3
}

define i32 @function_1fdaa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fdaa:
  %v0_1fdaa = load i32, i32* @ebp, align 4
  %v1_1fdaa = add i32 %v0_1fdaa, 1
  store i32 %v1_1fdaa, i32* @ebp, align 4
  %v2_1fdad = load i32, i32* @ecx, align 4
  %v4_1fdad = udiv i32 %v2_1fdad, 2
  %v12_1fdad = inttoptr i32 %v2_1fdad to i32*
  store i32 %v4_1fdad, i32* %v12_1fdad, align 4
  %v0_1fdaf = load i32, i32* @ecx, align 4
  %v1_1fdaf = add i32 %v0_1fdaf, 66634184
  %v2_1fdaf = inttoptr i32 %v1_1fdaf to i32*
  %v3_1fdaf = load i32, i32* %v2_1fdaf, align 4
  %v4_1fdaf = udiv i32 %v3_1fdaf, 512
  %v5_1fdaf = mul i32 %v3_1fdaf, 8388608
  %v6_1fdaf = or i32 %v4_1fdaf, %v5_1fdaf
  store i32 %v6_1fdaf, i32* %v2_1fdaf, align 4
  %v0_1fdb6 = load i32, i32* @ebx, align 4
  %v1_1fdb6 = add i32 %v0_1fdb6, -1985303894
  %v2_1fdb6 = inttoptr i32 %v1_1fdb6 to i8*
  %v3_1fdb6 = load i8, i8* %v2_1fdb6, align 1
  %v5_1fdb6 = udiv i8 %v3_1fdb6, 32
  store i8 %v5_1fdb6, i8* %v2_1fdb6, align 1
  %v18_1fdb6 = load i32, i32* @eax, align 4
  ret i32 %v18_1fdb6

; uselistorder directives
  uselistorder i32 %v2_1fdad, { 1, 0 }
  uselistorder i32 -1985303894, { 1, 0 }
  uselistorder i32 66634184, { 1, 0 }
}

define i32 @function_1fdbe() local_unnamed_addr {
dec_label_pc_1fdbe:
  %eax.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1fdde

dec_label_pc_1fdc0:                               ; preds = %dec_label_pc_1fdde
  %v1_1fdc0 = add i32 %v0_1fdde, -32
  %v2_1fdc0 = inttoptr i32 %v1_1fdc0 to i32*
  %v3_1fdc0 = load i32, i32* %v2_1fdc0, align 4
  %v4_1fdc0 = add i32 %v3_1fdc0, -24
  store i32 %v4_1fdc0, i32* %v2_1fdc0, align 4
  %v0_1fdc4 = load i32, i32* @ebp, align 4
  %v1_1fdc4 = add i32 %v0_1fdc4, -36
  %v2_1fdc4 = inttoptr i32 %v1_1fdc4 to i32*
  %v3_1fdc4 = load i32, i32* %v2_1fdc4, align 4
  %v4_1fdc4 = add i32 %v3_1fdc4, -24
  store i32 %v4_1fdc4, i32* %v2_1fdc4, align 4
  %v0_1fdc8 = load i32, i32* @ebp, align 4
  %v1_1fdc8 = add i32 %v0_1fdc8, -32
  %v2_1fdc8 = inttoptr i32 %v1_1fdc8 to i32*
  %v3_1fdc8 = load i32, i32* %v2_1fdc8, align 4
  store i32 %v3_1fdc8, i32* %eax.global-to-local, align 4
  %v1_1fdcf = add i32 %v0_1fdc8, -36
  %v2_1fdcf = inttoptr i32 %v1_1fdcf to i32*
  %v3_1fdcf = load i32, i32* %v2_1fdcf, align 4
  store i32 %v3_1fdcf, i32* %eax.global-to-local, align 4
  %v2_1fdd5 = call i32 @unknown_35fd5(i32 %v3_1fdcf, i32 %v3_1fdc8)
  store i32 %v2_1fdd5, i32* %eax.global-to-local, align 4
  %v0_1fdda = load i32, i32* @ebp, align 4
  %v1_1fdda = add i32 %v0_1fdda, -16
  %v2_1fdda = inttoptr i32 %v1_1fdda to i32*
  %v3_1fdda = load i32, i32* %v2_1fdda, align 4
  %v4_1fdda = add i32 %v3_1fdda, -1
  store i32 %v4_1fdda, i32* %v2_1fdda, align 4
  br label %dec_label_pc_1fdde

dec_label_pc_1fdde:                               ; preds = %dec_label_pc_1fdc0, %dec_label_pc_1fdbe
  %v0_1fdde = load i32, i32* @ebp, align 4
  %v1_1fdde = add i32 %v0_1fdde, -16
  %v2_1fdde = inttoptr i32 %v1_1fdde to i32*
  %v3_1fdde = load i32, i32* %v2_1fdde, align 4
  %v10_1fdde = icmp eq i32 %v3_1fdde, 0
  %v11_1fdde = icmp slt i32 %v3_1fdde, 0
  %v3_1fde2 = icmp eq i1 %v11_1fdde, false
  %v4_1fde2 = icmp eq i1 %v10_1fdde, false
  %v5_1fde2 = icmp eq i1 %v3_1fde2, %v4_1fde2
  %v6_1fde2 = zext i1 %v5_1fde2 to i32
  %v7_1fde2 = load i32, i32* %eax.global-to-local, align 4
  %v8_1fde2 = and i32 %v7_1fde2, -256
  %v9_1fde2 = or i32 %v6_1fde2, %v8_1fde2
  store i32 %v9_1fde2, i32* %eax.global-to-local, align 4
  %v5_1fde5 = icmp eq i1 %v5_1fde2, false
  %v1_1fde7 = icmp eq i1 %v5_1fde5, false
  br i1 %v1_1fde7, label %dec_label_pc_1fdc0, label %dec_label_pc_1fde9

dec_label_pc_1fde9:                               ; preds = %dec_label_pc_1fdde
  %v1_1fde9 = add i32 %v0_1fdde, -36
  %v2_1fde9 = inttoptr i32 %v1_1fde9 to i32*
  %v3_1fde9 = load i32, i32* %v2_1fde9, align 4
  store i32 %v3_1fde9, i32* @eax, align 4
  %v1_1fdec = add i32 %v0_1fdde, -12
  %v2_1fdec = inttoptr i32 %v1_1fdec to i32*
  %v3_1fdec = load i32, i32* %v2_1fdec, align 4
  %v1_1fdef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1fdef = icmp eq i32 %v1_1fdef, %v3_1fdec
  br i1 %v3_1fdef, label %bb, label %dec_label_pc_1fdf8

bb:                                               ; preds = %dec_label_pc_1fde9
  %v1_1fdf6 = call i32 @function_1fdfd()
  store i32 %v1_1fdf6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1fdf8

dec_label_pc_1fdf8:                               ; preds = %bb, %dec_label_pc_1fde9
  %v2_1fdf6 = phi i32 [ %v1_1fdf6, %bb ], [ %v3_1fde9, %dec_label_pc_1fde9 ]
  ret i32 %v2_1fdf6

; uselistorder directives
  uselistorder i32 %v3_1fdde, { 1, 0 }
  uselistorder i32 %v0_1fdde, { 1, 0, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 1, 2, 3 }
}

define i32 @function_1fdfd() local_unnamed_addr {
dec_label_pc_1fdfd:
  %v0_1fdfe = load i32, i32* @eax, align 4
  ret i32 %v0_1fdfe
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructISsSA_SF_bxdSI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EEvRNS0_IT_T0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_EEl(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fe00:
  ret i32 %arg1
}

define i32 @function_1fe0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fe0a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1fe0a = load i32, i32* @ebp, align 4
  %v0_1fe0e = load i32, i32* @eax, align 4
  %v2_1fe0e = or i32 %v0_1fe0e, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_1fe0e, i32* %eax.global-to-local, align 4
  %v0_1fe11 = load i32, i32* @ecx, align 4
  %v1_1fe11 = add i32 %v0_1fe11, 255
  %v1_1fe13 = add i32 %v0_1fe0a, 4
  store i32 %v1_1fe13, i32* @ebp, align 4
  %v1_1fe14 = add i32 %v0_1fe11, -1587159996
  %v2_1fe14 = inttoptr i32 %v1_1fe14 to i8*
  %v3_1fe14 = load i8, i8* %v2_1fe14, align 1
  %v5_1fe14 = trunc i32 %v1_1fe11 to i8
  %v8_1fe14 = add i8 %v3_1fe14, %v5_1fe14
  %v28_1fe14 = icmp ult i8 %v8_1fe14, %v3_1fe14
  store i1 %v28_1fe14, i1* %cf.global-to-local, align 1
  store i8 %v8_1fe14, i8* %v2_1fe14, align 1
  %v0_1fe1a = load i32, i32* %eax.global-to-local, align 4
  %v1_1fe1a = trunc i32 %v0_1fe1a to i8
  %v2_1fe1a = load i1, i1* %cf.global-to-local, align 1
  %v3_1fe1a = zext i1 %v2_1fe1a to i8
  %v4_1fe1a = add i8 %v3_1fe1a, %v1_1fe1a
  %v19_1fe1a = icmp ule i8 %v4_1fe1a, %v1_1fe1a
  %v21_1fe1a = icmp eq i1 %v2_1fe1a, %v19_1fe1a
  store i1 %v21_1fe1a, i1* %cf.global-to-local, align 1
  %v22_1fe1a = zext i8 %v4_1fe1a to i32
  %v24_1fe1a = and i32 %v0_1fe1a, -256
  %v25_1fe1a = or i32 %v22_1fe1a, %v24_1fe1a
  store i32 %v25_1fe1a, i32* %eax.global-to-local, align 4
  %v1_1fe1c = inttoptr i32 %v25_1fe1a to i8*
  %v2_1fe1c = load i8, i8* %v1_1fe1c, align 1
  %v5_1fe1c = add i8 %v2_1fe1c, %v4_1fe1a
  store i8 %v5_1fe1c, i8* %v1_1fe1c, align 1
  %v0_1fe1e = load i32, i32* %eax.global-to-local, align 4
  %v1_1fe1e = load i32, i32* @ebp, align 4
  %v2_1fe1e = add i32 %v1_1fe1e, -12
  %v3_1fe1e = inttoptr i32 %v2_1fe1e to i32*
  store i32 %v0_1fe1e, i32* %v3_1fe1e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1fe23 = load i32, i32* @ebp, align 4
  %v1_1fe23 = add i32 %v0_1fe23, -32
  %v2_1fe23 = inttoptr i32 %v1_1fe23 to i32*
  %v3_1fe23 = load i32, i32* %v2_1fe23, align 4
  store i32 %v3_1fe23, i32* %eax.global-to-local, align 4
  %v1_1fe2a = add i32 %v0_1fe23, -28
  %v2_1fe2a = inttoptr i32 %v1_1fe2a to i32*
  %v3_1fe2a = load i32, i32* %v2_1fe2a, align 4
  store i32 %v3_1fe2a, i32* %eax.global-to-local, align 4
  %v2_1fe30 = call i32 @unknown_410a8(i32 %v3_1fe2a, i32 %v3_1fe23)
  store i32 %v2_1fe30, i32* %eax.global-to-local, align 4
  %v0_1fe35 = load i32, i32* @ebp, align 4
  %v1_1fe35 = add i32 %v0_1fe35, -12
  %v2_1fe35 = inttoptr i32 %v1_1fe35 to i32*
  %v3_1fe35 = load i32, i32* %v2_1fe35, align 4
  store i32 %v3_1fe35, i32* %eax.global-to-local, align 4
  %v1_1fe38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fe38 = xor i32 %v1_1fe38, %v3_1fe35
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1fe38 = icmp eq i32 %v2_1fe38, 0
  store i32 %v2_1fe38, i32* @eax, align 4
  br i1 %v3_1fe38, label %bb, label %dec_label_pc_1fe41

bb:                                               ; preds = %dec_label_pc_1fe0a
  %v1_1fe3f = call i32 @function_1fe46()
  store i32 %v1_1fe3f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1fe41

dec_label_pc_1fe41:                               ; preds = %bb, %dec_label_pc_1fe0a
  %v3_1fe3f = phi i32 [ %v1_1fe3f, %bb ], [ %v2_1fe38, %dec_label_pc_1fe0a ]
  ret i32 %v3_1fe3f

; uselistorder directives
  uselistorder i8 %v4_1fe1a, { 0, 2, 1 }
  uselistorder i8 %v1_1fe1a, { 1, 0 }
  uselistorder i8 %v3_1fe14, { 1, 0 }
}

define i32 @function_1fe46() local_unnamed_addr {
dec_label_pc_1fe46:
  %v0_1fe47 = load i32, i32* @eax, align 4
  ret i32 %v0_1fe47
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E14variant_assignERKSJ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fe48:
  %stack_var_-24 = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_1fe69 = load i32, i32* %arg1, align 4
  %v1_1fe6e = inttoptr i32 %arg2 to i32*
  %v2_1fe6e = load i32, i32* %v1_1fe6e, align 4
  %v12_1fe70 = icmp eq i32 %v2_1fe69, %v2_1fe6e
  %v1_1fe72 = icmp eq i1 %v12_1fe70, false
  br i1 %v1_1fe72, label %dec_label_pc_1feb0, label %dec_label_pc_1fe74

dec_label_pc_1fe74:                               ; preds = %dec_label_pc_1fe48
  %v1_1fe77 = add i32 %arg2, 4
  %v1_1fe7d = call i32 @unknown_3b466(i32 %v1_1fe77)
  %v2_1fe86 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1fe8c = call i32 @unknown_2dad6(i32 %v2_1fe86, i32 %v1_1fe7d)
  %v2_1fe9e = call i32 @unknown_4113e(i32 %tmp104, i32 %v2_1fe86)
  %v1_1fea9 = call i32 @unknown_3b4ca(i32 %v2_1fe86)
  %v0_1feae = call i32 @function_1ff1e()
  ret i32 %v0_1feae

dec_label_pc_1feb0:                               ; preds = %dec_label_pc_1fe48
  %v1_1feb6 = call i32 @unknown_3a32a(i32 %arg2)
  %v2_1fec6 = ptrtoint i32* %stack_var_-24 to i32
  %v3_1fecc = call i32 @unknown_411ac(i32 %v2_1fec6, i32 %tmp104, i32 %v1_1feb6)
  ret i32 %v2_1fec6

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_1fed6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fed6:
  %v0_1fed8 = load i32, i32* @ebp, align 4
  %v1_1fed8 = add i32 %v0_1fed8, -32
  %v2_1fed8 = inttoptr i32 %v1_1fed8 to i32*
  %v3_1fed8 = load i32, i32* %v2_1fed8, align 4
  %v1_1fede = call i32 @unknown_411fe(i32 %v3_1fed8)
  %v0_1fee3 = load i32, i32* @ebp, align 4
  %v1_1fee3 = add i32 %v0_1fee3, -20
  %v1_1fee9 = call i32 @unknown_3fd7e(i32 %v1_1fee3)
  %v0_1feee = call i32 @function_1ff1e()
  ret i32 %v0_1feee
}

define i32 @function_1fef1() local_unnamed_addr {
dec_label_pc_1fef1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fef1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fef1
}

define i32 @function_1ff06(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1ff06:
  %v0_1ff06 = load i32, i32* @ecx, align 4
  %v1_1ff06 = add i32 %v0_1ff06, -330986045
  %v2_1ff06 = inttoptr i32 %v1_1ff06 to i32*
  %v3_1ff06 = load i32, i32* %v2_1ff06, align 4
  %v4_1ff06 = add i32 %v3_1ff06, -1
  store i32 %v4_1ff06, i32* %v2_1ff06, align 4
  %v0_1ff0c = load i32, i32* @eax, align 4
  %v1_1ff0f = call i32 @unknown_3fd7e(i32 %v0_1ff0c)
  %v0_1ff14 = load i32, i32* @ebx, align 4
  ret i32 %v0_1ff14
}

define i32 @function_1ff1e() local_unnamed_addr {
dec_label_pc_1ff1e:
  %v0_1ff1e = load i32, i32* @ebp, align 4
  %v1_1ff1e = add i32 %v0_1ff1e, -12
  %v2_1ff1e = inttoptr i32 %v1_1ff1e to i32*
  %v3_1ff1e = load i32, i32* %v2_1ff1e, align 4
  %v1_1ff21 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ff21 = xor i32 %v1_1ff21, %v3_1ff1e
  %v3_1ff21 = icmp eq i32 %v2_1ff21, 0
  store i32 %v2_1ff21, i32* @eax, align 4
  br i1 %v3_1ff21, label %bb, label %dec_label_pc_1ff2a

bb:                                               ; preds = %dec_label_pc_1ff1e
  %v1_1ff28 = call i32 @function_1ff2f()
  br label %dec_label_pc_1ff2a

dec_label_pc_1ff2a:                               ; preds = %bb, %dec_label_pc_1ff1e
  %v2_1ff28 = phi i32 [ %v1_1ff28, %bb ], [ %v2_1ff21, %dec_label_pc_1ff1e ]
  ret i32 %v2_1ff28
}

define i32 @function_1ff2f() local_unnamed_addr {
dec_label_pc_1ff2f:
  %v0_1ff34 = load i32, i32* @eax, align 4
  ret i32 %v0_1ff34
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assignerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ff36:
  %v1_1ff53 = call i32 @unknown_30df8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ff64

bb:                                               ; preds = %dec_label_pc_1ff36
  %v1_1ff62 = call i32 @function_1ff69()
  br label %dec_label_pc_1ff64

dec_label_pc_1ff64:                               ; preds = %bb, %dec_label_pc_1ff36
  %v2_1ff62 = phi i32 [ %v1_1ff62, %bb ], [ 0, %dec_label_pc_1ff36 ]
  ret i32 %v2_1ff62
}

define i32 @function_1ff69() local_unnamed_addr {
dec_label_pc_1ff69:
  %v0_1ff6a = load i32, i32* @eax, align 4
  ret i32 %v0_1ff6a
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEES7_EET0_T_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ff6b:
  ret i32 %arg3
}

define i32 @function_1ff94(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ff94:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ff95() local_unnamed_addr {
dec_label_pc_1ff95:
  %ebp.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1ffb9

dec_label_pc_1ff97:                               ; preds = %dec_label_pc_1ffb9
  %v1_1ff9d = call i32 @unknown_3e08d(i32 %v3_1ff97)
  %v0_1ffa2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ffa2 = add i32 %v0_1ffa2, -28
  %v2_1ffa2 = inttoptr i32 %v1_1ffa2 to i32*
  %v3_1ffa2 = load i32, i32* %v2_1ffa2, align 4
  %v2_1ffac = call i32 @unknown_3ecda(i32 %v1_1ff9d, i32 %v3_1ffa2)
  %v1_1ffb1 = add i32 %v0_1ffa2, -28
  %v2_1ffb1 = inttoptr i32 %v1_1ffb1 to i32*
  %v3_1ffb1 = load i32, i32* %v2_1ffb1, align 4
  %v4_1ffb1 = add i32 %v3_1ffb1, 24
  store i32 %v4_1ffb1, i32* %v2_1ffb1, align 4
  %v0_1ffb5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ffb5 = add i32 %v0_1ffb5, -16
  %v2_1ffb5 = inttoptr i32 %v1_1ffb5 to i32*
  %v3_1ffb5 = load i32, i32* %v2_1ffb5, align 4
  %v4_1ffb5 = add i32 %v3_1ffb5, 24
  store i32 %v4_1ffb5, i32* %v2_1ffb5, align 4
  br label %dec_label_pc_1ffb9

dec_label_pc_1ffb9:                               ; preds = %dec_label_pc_1ff97, %dec_label_pc_1ff95
  %v0_1ffb9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ffb9 = add i32 %v0_1ffb9, -28
  %v2_1ffb9 = inttoptr i32 %v1_1ffb9 to i32*
  %v3_1ffb9 = load i32, i32* %v2_1ffb9, align 4
  %v2_1ffbc = add i32 %v0_1ffb9, -32
  %v3_1ffbc = inttoptr i32 %v2_1ffbc to i32*
  %v4_1ffbc = load i32, i32* %v3_1ffbc, align 4
  %v15_1ffbc = icmp eq i32 %v3_1ffb9, %v4_1ffbc
  %v1_1ffbf = icmp eq i1 %v15_1ffbc, false
  %v5_1ffc2 = icmp eq i1 %v1_1ffbf, false
  %v1_1ffc4 = icmp eq i1 %v5_1ffc2, false
  %v1_1ff97 = add i32 %v0_1ffb9, -16
  %v2_1ff97 = inttoptr i32 %v1_1ff97 to i32*
  %v3_1ff97 = load i32, i32* %v2_1ff97, align 4
  store i32 %v3_1ff97, i32* @eax, align 4
  br i1 %v1_1ffc4, label %dec_label_pc_1ff97, label %dec_label_pc_1ffc6

dec_label_pc_1ffc6:                               ; preds = %dec_label_pc_1ffb9
  %v1_1ffc9 = add i32 %v0_1ffb9, -12
  %v2_1ffc9 = inttoptr i32 %v1_1ffc9 to i32*
  %v3_1ffc9 = load i32, i32* %v2_1ffc9, align 4
  %v1_1ffcc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1ffcc = icmp eq i32 %v1_1ffcc, %v3_1ffc9
  br i1 %v3_1ffcc, label %bb, label %dec_label_pc_1ffd5

bb:                                               ; preds = %dec_label_pc_1ffc6
  %v1_1ffd3 = call i32 @function_2000c()
  store i32 %v1_1ffd3, i32* @eax, align 4
  br label %dec_label_pc_1ffd5

dec_label_pc_1ffd5:                               ; preds = %bb, %dec_label_pc_1ffc6
  %v0_1ffd5 = call i32 @function_20007()
  ret i32 %v0_1ffd5

; uselistorder directives
  uselistorder i32 %v3_1ff97, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 1 }
}

define i32 @function_1ffd8() local_unnamed_addr {
dec_label_pc_1ffd8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ffd8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ffd8
}

define i32 @function_20002(i32 %arg1) local_unnamed_addr {
dec_label_pc_20002:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_20007() local_unnamed_addr {
dec_label_pc_20007:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2000c() local_unnamed_addr {
dec_label_pc_2000c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2000e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2000e:
  %v0_2000e = load i32, i32* @eax, align 4
  %v11_2000e = xor i32 %v0_2000e, 91
  store i32 %arg1, i32* @ebp, align 4
  ret i32 %v11_2000e
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN11json_spirit10Value_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20012:
  %v2_2003d = sub i32 %arg2, %arg1
  %v2_20041 = sdiv i32 %v2_2003d, 4
  %v3_20044 = mul i32 %v2_20041, -858993459
  ret i32 %v3_20044
}

define i32 @function_20062(i32 %arg1) local_unnamed_addr {
dec_label_pc_20062:
  %eax.global-to-local = alloca i32, align 4
  %v0_20062 = load i32, i32* @eax, align 4
  %v2_20062 = add i32 %v0_20062, 36
  %v16_20062 = and i32 %v2_20062, 255
  %v18_20062 = and i32 %v0_20062, -256
  %v19_20062 = or i32 %v16_20062, %v18_20062
  store i32 %v19_20062, i32* %eax.global-to-local, align 4
  %v1_20064 = call i32 @unknown_39882(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_20064, i32* %eax.global-to-local, align 4
  %v0_20069 = load i32, i32* @ebp, align 4
  %v1_20069 = add i32 %v0_20069, -16
  %v2_20069 = inttoptr i32 %v1_20069 to i32*
  %v3_20069 = load i32, i32* %v2_20069, align 4
  %v4_20069 = add i32 %v3_20069, -1
  store i32 %v4_20069, i32* %v2_20069, align 4
  %v0_2006d = load i32, i32* @ebp, align 4
  %v1_2006d = add i32 %v0_2006d, -16
  %v2_2006d = inttoptr i32 %v1_2006d to i32*
  %v3_2006d = load i32, i32* %v2_2006d, align 4
  %v10_2006d = icmp eq i32 %v3_2006d, 0
  %v11_2006d = icmp slt i32 %v3_2006d, 0
  %v3_20071 = icmp eq i1 %v11_2006d, false
  %v4_20071 = icmp eq i1 %v10_2006d, false
  %v5_20071 = icmp eq i1 %v3_20071, %v4_20071
  %v6_20071 = zext i1 %v5_20071 to i32
  %v7_20071 = load i32, i32* %eax.global-to-local, align 4
  %v8_20071 = and i32 %v7_20071, -256
  %v9_20071 = or i32 %v6_20071, %v8_20071
  store i32 %v9_20071, i32* %eax.global-to-local, align 4
  %v1_20078 = add i32 %v0_2006d, -36
  %v2_20078 = inttoptr i32 %v1_20078 to i32*
  %v3_20078 = load i32, i32* %v2_20078, align 4
  store i32 %v3_20078, i32* @eax, align 4
  %v1_2007b = add i32 %v0_2006d, -12
  %v2_2007b = inttoptr i32 %v1_2007b to i32*
  %v3_2007b = load i32, i32* %v2_2007b, align 4
  %v1_2007e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2007e = icmp eq i32 %v1_2007e, %v3_2007b
  br i1 %v3_2007e, label %bb, label %dec_label_pc_20087

bb:                                               ; preds = %dec_label_pc_20062
  %v1_20085 = call i32 @function_2008c()
  store i32 %v1_20085, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20087

dec_label_pc_20087:                               ; preds = %bb, %dec_label_pc_20062
  %v3_20085 = phi i32 [ %v1_20085, %bb ], [ %v3_20078, %dec_label_pc_20062 ]
  ret i32 %v3_20085

; uselistorder directives
  uselistorder i32 %v3_2006d, { 1, 0 }
  uselistorder i32 %v0_2006d, { 1, 0, 2 }
  uselistorder i32 %v0_20062, { 1, 0 }
}

define i32 @function_2008c() local_unnamed_addr {
dec_label_pc_2008c:
  %v0_2008d = load i32, i32* @eax, align 4
  ret i32 %v0_2008d
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEES7_EET0_T_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2008e:
  ret i32 %arg1
}

define i32 @function_200e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_200e0:
  %v0_200e0 = load i32, i32* @ebp, align 4
  %v1_200e0 = add i32 %v0_200e0, 1
  %v9_200e0 = icmp eq i32 %v1_200e0, 0
  %v0_200e1 = load i32, i32* @ecx, align 4
  %v2_200e1 = icmp eq i32 %v0_200e1, 1
  %v4_200e1 = or i1 %v9_200e0, %v2_200e1
  %v0_200e3 = load i32, i32* @eax, align 4
  br i1 %v4_200e1, label %dec_label_pc_200e3, label %dec_label_pc_200f2

dec_label_pc_200e3:                               ; preds = %dec_label_pc_200e0
  ret i32 %v1_200e0

dec_label_pc_200f2:                               ; preds = %dec_label_pc_200e0
  %v1_200f2 = trunc i32 %v0_200e3 to i8
  %v2_200f2 = load i1, i1* @cf, align 1
  %v3_200f2 = zext i1 %v2_200f2 to i8
  %v4_200f2 = add i8 %v3_200f2, %v1_200f2
  %v22_200f2 = zext i8 %v4_200f2 to i32
  %v24_200f2 = and i32 %v0_200e3, -256
  %v25_200f2 = or i32 %v22_200f2, %v24_200f2
  store i32 %v25_200f2, i32* @eax, align 4
  %v1_200f4 = inttoptr i32 %v25_200f2 to i8*
  %v2_200f4 = load i8, i8* %v1_200f4, align 1
  %v5_200f4 = add i8 %v2_200f4, %v4_200f2
  store i8 %v5_200f4, i8* %v1_200f4, align 1
  %v0_200f8 = call i32 @function_2012a()
  ret i32 %v0_200f8
}

define i32 @function_200fb() local_unnamed_addr {
dec_label_pc_200fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_200fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_200fb
}

define i32 @function_20122() local_unnamed_addr {
dec_label_pc_20122:
  %v2_20123 = load i32, i32* @eax, align 4
  %v4_20123 = mul i32 %v2_20123, 2
  %v21_20123 = inttoptr i32 %v2_20123 to i32*
  store i32 %v4_20123, i32* %v21_20123, align 4
  %v22_20123 = load i32, i32* @eax, align 4
  ret i32 %v22_20123

; uselistorder directives
  uselistorder i32 %v2_20123, { 1, 0 }
}

define i32 @function_2012a() local_unnamed_addr {
dec_label_pc_2012a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2012e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2012e:
  %v0_2012e = load i32, i32* @ebx, align 4
  %v1_2012e = add i32 %v0_2012e, 1566258372
  %v2_2012e = inttoptr i32 %v1_2012e to i32*
  %v3_2012e = load i32, i32* %v2_2012e, align 4
  %v4_2012e = add i32 %v3_2012e, 1
  store i32 %v4_2012e, i32* %v2_2012e, align 4
  %v0_20134 = load i32, i32* @eax, align 4
  ret i32 %v0_20134
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1ERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20136:
  %v1_2015b = call i32 @unknown_3ec9c(i32 %arg2)
  %v1_20168 = call i32 @unknown_331fe(i32 %arg2)
  %v3_2017b = call i32 @unknown_415d6(i32 %arg1, i32 %v1_20168, i32 %v1_2015b)
  %v1_20186 = call i32 @unknown_365a4(i32 %arg1)
  ret i32 %v1_20186

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2018e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2018e:
  %eax.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_2018e = load i32, i32* @ebp, align 4
  %v1_2018e = add i32 %v0_2018e, 1
  %v9_2018e = icmp eq i32 %v1_2018e, 0
  store i1 %v9_2018e, i1* %zf.global-to-local, align 1
  store i32 %v1_2018e, i32* @ebp, align 4
  %v1_20191 = add i32 %v0_2018e, 1435234374
  %v2_20191 = inttoptr i32 %v1_20191 to i8*
  %v3_20191 = load i8, i8* %v2_20191, align 1
  %v4_20191 = load i32, i32* @ecx, align 4
  %v5_20191 = trunc i32 %v4_20191 to i8
  %v6_20191 = xor i8 %v5_20191, %v3_20191
  %v7_20191 = icmp eq i8 %v6_20191, 0
  store i1 %v7_20191, i1* %zf.global-to-local, align 1
  store i8 %v6_20191, i8* %v2_20191, align 1
  %v0_20197 = load i32, i32* @ecx, align 4
  %v2_20197 = icmp eq i32 %v0_20197, 1
  %v3_20197 = load i1, i1* %zf.global-to-local, align 1
  %v4_20197 = or i1 %v2_20197, %v3_20197
  br i1 %v4_20197, label %dec_label_pc_2018e.dec_label_pc_20199_crit_edge, label %bb

dec_label_pc_2018e.dec_label_pc_20199_crit_edge:  ; preds = %dec_label_pc_2018e
  %v0_2019a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_20199

bb:                                               ; preds = %dec_label_pc_2018e
  %v6_20197 = call i32 @function_20122()
  store i32 %v6_20197, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20199

dec_label_pc_20199:                               ; preds = %dec_label_pc_2018e.dec_label_pc_20199_crit_edge, %bb
  %v9_2019a = phi i32 [ %v0_2019a.pre, %dec_label_pc_2018e.dec_label_pc_20199_crit_edge ], [ %v6_20197, %bb ]
  %v1_2019a = trunc i32 %v9_2019a to i8
  %v2_2019a = and i8 %v1_2019a, 4
  %v3_2019a = icmp eq i8 %v2_2019a, 0
  store i1 %v3_2019a, i1* %zf.global-to-local, align 1
  %v8_2019a = zext i8 %v2_2019a to i32
  %v10_2019a = and i32 %v9_2019a, -256
  %v11_2019a = or i32 %v8_2019a, %v10_2019a
  store i32 %v11_2019a, i32* %eax.global-to-local, align 4
  %v1_2019f = call i32 @unknown_416cc(i32 %v11_2019a)
  %v0_201a4 = load i32, i32* @esp, align 4
  %v10_201a4 = icmp eq i32 %v0_201a4, 4
  store i1 %v10_201a4, i1* %zf.global-to-local, align 1
  %v0_201a7 = load i32, i32* @ebp, align 4
  %v1_201a7 = add i32 %v0_201a7, -20
  store i32 %v1_201a7, i32* %eax.global-to-local, align 4
  %v1_201aa = add i32 %v0_201a7, -32
  %v2_201aa = inttoptr i32 %v1_201aa to i32*
  %v3_201aa = load i32, i32* %v2_201aa, align 4
  %v2_201b4 = call i32 @unknown_4167c(i32 %v1_201a7, i32 %v3_201aa)
  store i32 %v2_201b4, i32* %eax.global-to-local, align 4
  %v0_201b9 = load i32, i32* @esp, align 4
  %v10_201b9 = icmp eq i32 %v0_201b9, 4
  store i1 %v10_201b9, i1* %zf.global-to-local, align 1
  %v0_201bc = load i32, i32* @ebx, align 4
  %v0_201c0 = load i32, i32* @esi, align 4
  %v0_201c4 = load i32, i32* @ebp, align 4
  %v1_201c4 = add i32 %v0_201c4, -16
  %v2_201c4 = inttoptr i32 %v1_201c4 to i32*
  %v3_201c4 = load i32, i32* %v2_201c4, align 4
  store i32 %v3_201c4, i32* %eax.global-to-local, align 4
  %v1_201cb = add i32 %v0_201c4, -20
  %v2_201cb = inttoptr i32 %v1_201cb to i32*
  %v3_201cb = load i32, i32* %v2_201cb, align 4
  store i32 %v3_201cb, i32* %eax.global-to-local, align 4
  %v4_201d1 = call i32 @unknown_4171c(i32 %v3_201cb, i32 %v3_201c4, i32 %v0_201c0, i32 %v0_201bc)
  store i32 %v4_201d1, i32* %eax.global-to-local, align 4
  %v0_201d8 = load i32, i32* @ebp, align 4
  %v1_201d8 = add i32 %v0_201d8, -28
  %v2_201d8 = inttoptr i32 %v1_201d8 to i32*
  %v3_201d8 = load i32, i32* %v2_201d8, align 4
  store i32 %v3_201d8, i32* %eax.global-to-local, align 4
  %v2_201db = add i32 %v3_201d8, 4
  %v3_201db = inttoptr i32 %v2_201db to i32*
  store i32 %v4_201d1, i32* %v3_201db, align 4
  %v4_201db = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_201db

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_20199, { 1, 0 }
}

define i32 @function_201e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_201e0:
  %v0_201e1 = load i32, i32* @eax, align 4
  %v1_201e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_201e1 = xor i32 %v1_201e1, %v0_201e1
  %v3_201e1 = icmp eq i32 %v2_201e1, 0
  store i32 %v2_201e1, i32* @eax, align 4
  br i1 %v3_201e1, label %bb, label %dec_label_pc_201ea

bb:                                               ; preds = %dec_label_pc_201e0
  %v1_201e8 = call i32 @function_20208()
  store i32 %v1_201e8, i32* @eax, align 4
  br label %dec_label_pc_201ea

dec_label_pc_201ea:                               ; preds = %bb, %dec_label_pc_201e0
  %v0_201ea = call i32 @function_20203()
  ret i32 %v0_201ea
}

define i32 @function_201ed() local_unnamed_addr {
dec_label_pc_201ed:
  %eax.global-to-local = alloca i32, align 4
  %v0_201ed = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_201ed
}

define i32 @function_20203() local_unnamed_addr {
dec_label_pc_20203:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_20208() local_unnamed_addr {
dec_label_pc_20208:
  %v0_20208 = load i32, i32* @ebp, align 4
  %v1_20208 = add i32 %v0_20208, -8
  %v1_2020b = inttoptr i32 %v1_20208 to i32*
  %v2_2020b = load i32, i32* %v1_2020b, align 4
  store i32 %v2_2020b, i32* @ebx, align 4
  %v4_2020c = load i32, i32* @eax, align 4
  ret i32 %v4_2020c

; uselistorder directives
  uselistorder i32 -8, { 4, 1, 2, 0, 3 }
}

define i32 @function_2020d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2020d:
  %v0_2020e = load i32, i32* @eax, align 4
  ret i32 %v0_2020e
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20210:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20236

bb:                                               ; preds = %dec_label_pc_20210
  %v2_20234 = call i32 @function_2023b(i32 %arg1)
  br label %dec_label_pc_20236

dec_label_pc_20236:                               ; preds = %bb, %dec_label_pc_20210
  %v3_20234 = phi i32 [ %v2_20234, %bb ], [ %arg1, %dec_label_pc_20210 ]
  ret i32 %v3_20234
}

define i32 @function_2023b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2023b:
  %v0_2023c = load i32, i32* @eax, align 4
  ret i32 %v0_2023c
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2023d:
  ret i32 %arg4
}

define i32 @function_2025a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2025a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2025c = load i32, i32* @edx, align 8
  %v1_2025c = and i32 %v0_2025c, -65281
  %v2_2025c = or i32 %v1_2025c, 17664
  store i32 %v2_2025c, i32* %edx.global-to-local, align 8
  %v0_2025e = load i32, i32* @eax, align 4
  %v1_2025e = add i32 %v0_2025e, 1166792517
  %v2_2025e = inttoptr i32 %v1_2025e to i8*
  %v3_2025e = load i8, i8* %v2_2025e, align 1
  %v4_2025e = load i32, i32* @ecx, align 4
  %v5_2025e = trunc i32 %v4_2025e to i8
  %v6_2025e = load i1, i1* @cf, align 1
  %v7_2025e = zext i1 %v6_2025e to i8
  %v8_2025e = sub i8 %v3_2025e, %v5_2025e
  %v9_2025e = add i8 %v8_2025e, %v7_2025e
  %v19_2025e = sub i8 %v8_2025e, %v7_2025e
  %v20_2025e = icmp ult i8 %v3_2025e, %v19_2025e
  %v21_2025e = icmp ne i8 %v5_2025e, -1
  %v22_2025e = or i1 %v21_2025e, %v20_2025e
  %v23_2025e = icmp ult i8 %v3_2025e, %v5_2025e
  %v24_2025e = select i1 %v6_2025e, i1 %v22_2025e, i1 %v23_2025e
  store i1 %v24_2025e, i1* %cf.global-to-local, align 1
  store i8 %v9_2025e, i8* %v2_2025e, align 1
  %v0_20264 = load i32, i32* @eax, align 4
  %v1_20264 = trunc i32 %v0_20264 to i8
  %v2_20264 = load i1, i1* %cf.global-to-local, align 1
  %v3_20264 = zext i1 %v2_20264 to i32
  %v4_20264 = add i32 %v0_20264, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_20264 = add i32 %v4_20264, %v3_20264
  %v17_20264 = icmp ult i8 %v1_20264, -119
  %v18_20264 = or i1 %v2_20264, %v17_20264
  store i1 %v18_20264, i1* %cf.global-to-local, align 1
  %v31_20264 = urem i32 %v5_20264, 256
  %v33_20264 = and i32 %v0_20264, -256
  %v34_20264 = or i32 %v31_20264, %v33_20264
  store i32 %v34_20264, i32* %eax.global-to-local, align 4
  %v0_20266 = load i32, i32* @ebp, align 4
  %v1_20266 = add i32 %v0_20266, 1
  store i32 %v1_20266, i32* @ebp, align 4
  %v1_20267 = add i32 %v0_20266, -94
  %v2_20267 = inttoptr i32 %v1_20267 to i8*
  %v3_20267 = load i8, i8* %v2_20267, align 1
  %v5_20267 = mul i8 %v3_20267, 2
  store i8 %v5_20267, i8* %v2_20267, align 1
  %v16_20267 = icmp slt i8 %v3_20267, 0
  %v0_2026a = load i32, i32* %eax.global-to-local, align 4
  %v1_2026a = trunc i32 %v0_2026a to i8
  %v3_2026a = zext i1 %v16_20267 to i8
  %v4_2026a = add i8 %v1_2026a, %v3_2026a
  %v19_2026a = icmp ule i8 %v4_2026a, %v1_2026a
  %v21_2026a = icmp eq i1 %v16_20267, %v19_2026a
  store i1 %v21_2026a, i1* %cf.global-to-local, align 1
  %v22_2026a = zext i8 %v4_2026a to i32
  %v24_2026a = and i32 %v0_2026a, -256
  %v25_2026a = or i32 %v22_2026a, %v24_2026a
  store i32 %v25_2026a, i32* %eax.global-to-local, align 4
  %v1_2026c = inttoptr i32 %v25_2026a to i8*
  %v2_2026c = load i8, i8* %v1_2026c, align 1
  %v5_2026c = add i8 %v2_2026c, %v4_2026a
  store i8 %v5_2026c, i8* %v1_2026c, align 1
  %v0_2026e = load i32, i32* %eax.global-to-local, align 4
  %v1_2026e = load i32, i32* @ebp, align 4
  %v2_2026e = add i32 %v1_2026e, -12
  %v3_2026e = inttoptr i32 %v2_2026e to i32*
  store i32 %v0_2026e, i32* %v3_2026e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_20273 = load i32, i32* %edx.global-to-local, align 8
  %v0_20277 = load i32, i32* @ebp, align 4
  %v1_20277 = add i32 %v0_20277, -40
  %v2_20277 = inttoptr i32 %v1_20277 to i32*
  %v3_20277 = load i32, i32* %v2_20277, align 4
  store i32 %v3_20277, i32* %eax.global-to-local, align 4
  %v1_2027e = add i32 %v0_20277, -36
  %v2_2027e = inttoptr i32 %v1_2027e to i32*
  %v3_2027e = load i32, i32* %v2_2027e, align 4
  store i32 %v3_2027e, i32* %eax.global-to-local, align 4
  %v1_20285 = add i32 %v0_20277, -32
  %v2_20285 = inttoptr i32 %v1_20285 to i32*
  %v3_20285 = load i32, i32* %v2_20285, align 4
  store i32 %v3_20285, i32* %eax.global-to-local, align 4
  %v1_2028c = add i32 %v0_20277, -28
  %v2_2028c = inttoptr i32 %v1_2028c to i32*
  %v3_2028c = load i32, i32* %v2_2028c, align 4
  store i32 %v3_2028c, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_20273, 16777216
  %v5_20292 = sdiv i32 %sext, 16777216
  %v6_20292 = call i32 @unknown_41878(i32 %v3_2028c, i32 %v3_20285, i32 %v3_2027e, i32 %v3_20277, i32 %v5_20292)
  store i32 %v6_20292, i32* %eax.global-to-local, align 4
  %v0_20297 = load i32, i32* @ebp, align 4
  %v1_20297 = add i32 %v0_20297, -12
  %v2_20297 = inttoptr i32 %v1_20297 to i32*
  %v3_20297 = load i32, i32* %v2_20297, align 4
  store i32 %v3_20297, i32* %eax.global-to-local, align 4
  %v1_2029a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2029a = xor i32 %v1_2029a, %v3_20297
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2029a = icmp eq i32 %v2_2029a, 0
  store i32 %v2_2029a, i32* @eax, align 4
  br i1 %v3_2029a, label %bb, label %dec_label_pc_202a3

bb:                                               ; preds = %dec_label_pc_2025a
  %v1_202a1 = call i32 @function_202a8()
  store i32 %v1_202a1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_202a3

dec_label_pc_202a3:                               ; preds = %bb, %dec_label_pc_2025a
  %v2_202a1 = phi i32 [ %v1_202a1, %bb ], [ %v2_2029a, %dec_label_pc_2025a ]
  ret i32 %v2_202a1

; uselistorder directives
  uselistorder i32 %v0_20277, { 1, 0, 2, 3 }
  uselistorder i8 %v4_2026a, { 0, 2, 1 }
  uselistorder i8 %v1_2026a, { 1, 0 }
  uselistorder i8 %v3_20267, { 1, 0 }
  uselistorder i1 %v2_20264, { 1, 0 }
  uselistorder i32 %v0_20264, { 1, 0, 2 }
  uselistorder i8 %v5_2025e, { 1, 0, 2 }
}

define i32 @function_202a8() local_unnamed_addr {
dec_label_pc_202a8:
  %v0_202a9 = load i32, i32* @eax, align 4
  ret i32 %v0_202a9
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS_7variantISsSF_NS6_IS7_INS8_10Value_implISB_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_202aa:
  %edx.global-to-local = alloca i32, align 4
  %v0_202e0 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_202e0, 16777216
  %v5_202ff = sdiv i32 %sext, 16777216
  %v6_202ff = call i32 @unknown_4194a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_202ff)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20310

bb:                                               ; preds = %dec_label_pc_202aa
  %v1_2030e = call i32 @function_20315()
  br label %dec_label_pc_20310

dec_label_pc_20310:                               ; preds = %bb, %dec_label_pc_202aa
  %v2_2030e = phi i32 [ %v1_2030e, %bb ], [ 0, %dec_label_pc_202aa ]
  ret i32 %v2_2030e
}

define i32 @function_20315() local_unnamed_addr {
dec_label_pc_20315:
  %v0_20316 = load i32, i32* @eax, align 4
  ret i32 %v0_20316
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS8_13Config_vectorISsEEEESaISC_EEEENS_7variantISsNS6_IS7_INS8_9Pair_implISB_EESaISI_EEEESF_bxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_20317:
  %eax.global-to-local = alloca i32, align 4
  %v2_20318 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_20318
}

define i32 @function_2031a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2031a:
  %v0_2031d = load i32, i32* @ebp, align 4
  %v1_2031d = add i32 %v0_2031d, 8
  %v2_2031d = inttoptr i32 %v1_2031d to i32*
  %v3_2031d = load i32, i32* %v2_2031d, align 4
  %v2_20320 = add i32 %v0_2031d, -28
  %v3_20320 = inttoptr i32 %v2_20320 to i32*
  store i32 %v3_2031d, i32* %v3_20320, align 4
  %v0_20323 = load i32, i32* @ebp, align 4
  %v1_20323 = add i32 %v0_20323, 12
  %v2_20323 = inttoptr i32 %v1_20323 to i32*
  %v3_20323 = load i32, i32* %v2_20323, align 4
  %v2_20326 = add i32 %v0_20323, -32
  %v3_20326 = inttoptr i32 %v2_20326 to i32*
  store i32 %v3_20323, i32* %v3_20326, align 4
  %v0_20329 = load i32, i32* @ebp, align 4
  %v1_20329 = add i32 %v0_20329, 16
  %v2_20329 = inttoptr i32 %v1_20329 to i32*
  %v3_20329 = load i32, i32* %v2_20329, align 4
  %v2_2032c = add i32 %v0_20329, -36
  %v3_2032c = inttoptr i32 %v2_2032c to i32*
  store i32 %v3_20329, i32* %v3_2032c, align 4
  %v0_2032f = load i32, i32* @ebp, align 4
  %v1_2032f = add i32 %v0_2032f, 20
  %v2_2032f = inttoptr i32 %v1_2032f to i32*
  %v3_2032f = load i32, i32* %v2_2032f, align 4
  %v2_20332 = add i32 %v0_2032f, -40
  %v3_20332 = inttoptr i32 %v2_20332 to i32*
  store i32 %v3_2032f, i32* %v3_20332, align 4
  %v0_20335 = load i32, i32* @ebp, align 4
  %v1_20335 = add i32 %v0_20335, 24
  %v2_20335 = inttoptr i32 %v1_20335 to i8*
  %v3_20335 = load i8, i8* %v2_20335, align 1
  %v3_20339 = add i32 %v0_20335, -41
  %v4_20339 = inttoptr i32 %v3_20339 to i8*
  store i8 %v3_20335, i8* %v4_20339, align 1
  %v0_2033c = load i32, i32* @ebp, align 4
  %v1_2033c = add i32 %v0_2033c, 28
  %v2_2033c = inttoptr i32 %v1_2033c to i32*
  %v3_2033c = load i32, i32* %v2_2033c, align 4
  %v2_2033f = add i32 %v0_2033c, -48
  %v3_2033f = inttoptr i32 %v2_2033f to i32*
  store i32 %v3_2033c, i32* %v3_2033f, align 4
  %v0_20342 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20348 = load i32, i32* @ebp, align 4
  %v2_20348 = add i32 %v1_20348, -12
  %v3_20348 = inttoptr i32 %v2_20348 to i32*
  store i32 %v0_20342, i32* %v3_20348, align 4
  %v0_2034d = load i32, i32* @edx, align 8
  %v0_20351 = load i32, i32* @ebp, align 4
  %v1_20351 = add i32 %v0_20351, -40
  %v2_20351 = inttoptr i32 %v1_20351 to i32*
  %v3_20351 = load i32, i32* %v2_20351, align 4
  %v1_20358 = add i32 %v0_20351, -36
  %v2_20358 = inttoptr i32 %v1_20358 to i32*
  %v3_20358 = load i32, i32* %v2_20358, align 4
  %v1_2035f = add i32 %v0_20351, -32
  %v2_2035f = inttoptr i32 %v1_2035f to i32*
  %v3_2035f = load i32, i32* %v2_2035f, align 4
  %v1_20366 = add i32 %v0_20351, -28
  %v2_20366 = inttoptr i32 %v1_20366 to i32*
  %v3_20366 = load i32, i32* %v2_20366, align 4
  %sext = mul i32 %v0_2034d, 16777216
  %v5_2036c = sdiv i32 %sext, 16777216
  %v6_2036c = call i32 @unknown_41a1c(i32 %v3_20366, i32 %v3_2035f, i32 %v3_20358, i32 %v3_20351, i32 %v5_2036c)
  %v0_20371 = load i32, i32* @ebp, align 4
  %v1_20371 = add i32 %v0_20371, -12
  %v2_20371 = inttoptr i32 %v1_20371 to i32*
  %v3_20371 = load i32, i32* %v2_20371, align 4
  %v1_20374 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20374 = xor i32 %v1_20374, %v3_20371
  %v3_20374 = icmp eq i32 %v2_20374, 0
  store i32 %v2_20374, i32* @eax, align 4
  br i1 %v3_20374, label %bb, label %dec_label_pc_2037d

bb:                                               ; preds = %dec_label_pc_2031a
  %v1_2037b = call i32 @function_20382()
  br label %dec_label_pc_2037d

dec_label_pc_2037d:                               ; preds = %bb, %dec_label_pc_2031a
  %v2_2037b = phi i32 [ %v1_2037b, %bb ], [ %v2_20374, %dec_label_pc_2031a ]
  ret i32 %v2_2037b

; uselistorder directives
  uselistorder i32 %v0_20351, { 1, 0, 2, 3 }
}

define i32 @function_20382() local_unnamed_addr {
dec_label_pc_20382:
  %v0_20383 = load i32, i32* @eax, align 4
  ret i32 %v0_20383
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_20384:
  ret i32 %arg1
}

define i32 @function_203da(i32 %arg1) local_unnamed_addr {
dec_label_pc_203da:
  %v2_203da = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_203da = load i32, i32* @edx, align 8
  %v4_203da = trunc i32 %v3_203da to i8
  %v5_203da = load i1, i1* @cf, align 1
  %v6_203da = zext i1 %v5_203da to i8
  %v7_203da = add i8 %v4_203da, %v2_203da
  %v8_203da = add i8 %v7_203da, %v6_203da
  %v29_203da = load i32, i32* @edi, align 4
  %v30_203da = inttoptr i32 %v29_203da to i8*
  store i8 %v8_203da, i8* %v30_203da, align 1
  %v0_203de = load i32, i32* @ebp, align 4
  %v1_203de = add i32 %v0_203de, -12
  %v2_203de = inttoptr i32 %v1_203de to i32*
  %v3_203de = load i32, i32* %v2_203de, align 4
  %v1_203e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_203e1 = xor i32 %v1_203e1, %v3_203de
  %v3_203e1 = icmp eq i32 %v2_203e1, 0
  store i32 %v2_203e1, i32* @eax, align 4
  br i1 %v3_203e1, label %bb, label %dec_label_pc_203ea

bb:                                               ; preds = %dec_label_pc_203da
  %v1_203e8 = call i32 @function_203ef()
  br label %dec_label_pc_203ea

dec_label_pc_203ea:                               ; preds = %bb, %dec_label_pc_203da
  %v2_203e8 = phi i32 [ %v1_203e8, %bb ], [ %v2_203e1, %dec_label_pc_203da ]
  ret i32 %v2_203e8
}

define i32 @function_203ef() local_unnamed_addr {
dec_label_pc_203ef:
  %v0_203f0 = load i32, i32* @eax, align 4
  ret i32 %v0_203f0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_203f1:
  %edx.global-to-local = alloca i32, align 4
  %v0_20427 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_20427, 16777216
  %v5_20446 = sdiv i32 %sext, 16777216
  %v6_20446 = call i32 @unknown_41bc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_20446)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20457

bb:                                               ; preds = %dec_label_pc_203f1
  %v1_20455 = call i32 @function_2045c()
  br label %dec_label_pc_20457

dec_label_pc_20457:                               ; preds = %bb, %dec_label_pc_203f1
  %v2_20455 = phi i32 [ %v1_20455, %bb ], [ 0, %dec_label_pc_203f1 ]
  ret i32 %v2_20455
}

define i32 @function_2045c() local_unnamed_addr {
dec_label_pc_2045c:
  %v0_2045d = load i32, i32* @eax, align 4
  ret i32 %v0_2045d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2045e:
  ret i32 0
}

define i32 @function_20498(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20498:
  %v0_20498 = load i32, i32* @ebp, align 4
  %v1_20498 = add i32 %v0_20498, -40
  %v2_20498 = inttoptr i32 %v1_20498 to i32*
  %v3_20498 = load i32, i32* %v2_20498, align 4
  %v1_2049f = add i32 %v0_20498, -36
  %v2_2049f = inttoptr i32 %v1_2049f to i32*
  %v3_2049f = load i32, i32* %v2_2049f, align 4
  %v1_204a6 = add i32 %v0_20498, -32
  %v2_204a6 = inttoptr i32 %v1_204a6 to i32*
  %v3_204a6 = load i32, i32* %v2_204a6, align 4
  %v1_204ad = add i32 %v0_20498, -28
  %v2_204ad = inttoptr i32 %v1_204ad to i32*
  %v3_204ad = load i32, i32* %v2_204ad, align 4
  %v4_204b3 = call i32 @unknown_41c92(i32 %v3_204ad, i32 %v3_204a6, i32 %v3_2049f, i32 %v3_20498)
  %v0_204b8 = load i32, i32* @ebp, align 4
  %v1_204b8 = add i32 %v0_204b8, -12
  %v2_204b8 = inttoptr i32 %v1_204b8 to i32*
  %v3_204b8 = load i32, i32* %v2_204b8, align 4
  %v1_204bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_204bb = xor i32 %v1_204bb, %v3_204b8
  %v3_204bb = icmp eq i32 %v2_204bb, 0
  store i32 %v2_204bb, i32* @eax, align 4
  br i1 %v3_204bb, label %bb, label %dec_label_pc_204c4

bb:                                               ; preds = %dec_label_pc_20498
  %v1_204c2 = call i32 @function_204c9()
  br label %dec_label_pc_204c4

dec_label_pc_204c4:                               ; preds = %bb, %dec_label_pc_20498
  %v3_204c2 = phi i32 [ %v1_204c2, %bb ], [ %v2_204bb, %dec_label_pc_20498 ]
  ret i32 %v3_204c2

; uselistorder directives
  uselistorder i32 %v0_20498, { 1, 0, 2, 3 }
}

define i32 @function_204c9() local_unnamed_addr {
dec_label_pc_204c9:
  %v0_204ca = load i32, i32* @eax, align 4
  ret i32 %v0_204ca
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_204cb:
  ret i32 %arg6
}

define i32 @function_204f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_204f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_204f4 = load i32, i32* @ebp, align 4
  %v1_204f4 = add i32 %v0_204f4, 1
  store i32 %v1_204f4, i32* @ebp, align 4
  %v1_204f5 = add i32 %v0_204f4, -94
  %v2_204f5 = inttoptr i32 %v1_204f5 to i8*
  %v3_204f5 = load i8, i8* %v2_204f5, align 1
  %v5_204f5 = mul i8 %v3_204f5, 2
  store i8 %v5_204f5, i8* %v2_204f5, align 1
  %v16_204f5 = icmp slt i8 %v3_204f5, 0
  %v0_204f8 = load i32, i32* @eax, align 4
  %v1_204f8 = trunc i32 %v0_204f8 to i8
  %v3_204f8 = zext i1 %v16_204f5 to i8
  %v4_204f8 = add i8 %v1_204f8, %v3_204f8
  %v22_204f8 = zext i8 %v4_204f8 to i32
  %v24_204f8 = and i32 %v0_204f8, -256
  %v25_204f8 = or i32 %v22_204f8, %v24_204f8
  store i32 %v25_204f8, i32* %eax.global-to-local, align 4
  %v1_204fa = inttoptr i32 %v25_204f8 to i8*
  %v2_204fa = load i8, i8* %v1_204fa, align 1
  %v5_204fa = add i8 %v2_204fa, %v4_204f8
  store i8 %v5_204fa, i8* %v1_204fa, align 1
  %v0_204fc = load i32, i32* %eax.global-to-local, align 4
  %v1_204fc = load i32, i32* @ebp, align 4
  %v2_204fc = add i32 %v1_204fc, -12
  %v3_204fc = inttoptr i32 %v2_204fc to i32*
  store i32 %v0_204fc, i32* %v3_204fc, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v3_204f5, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9copy_intoEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSI_13Config_vectorISsEEEESaISM_EEEENSG_ISH_INSI_10Value_implISL_EESaISR_EEEEbxdNS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_20525:
  ret i32 %arg8
}

define i32 @function_2055a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2055a:
  %v0_2055a = load i32, i32* @eax, align 4
  %v1_2055a = load i32, i32* @ebp, align 4
  %v2_2055a = add i32 %v1_2055a, -52
  %v3_2055a = inttoptr i32 %v2_2055a to i32*
  store i32 %v0_2055a, i32* %v3_2055a, align 4
  %v0_2055d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20563 = load i32, i32* @ebp, align 4
  %v2_20563 = add i32 %v1_20563, -12
  %v3_20563 = inttoptr i32 %v2_20563 to i32*
  store i32 %v0_2055d, i32* %v3_20563, align 4
  ret i32 0
}

define i32 @function_2058a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2058a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2058c:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_205bd

bb:                                               ; preds = %dec_label_pc_2058c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_205bb = call i32 @function_205c2(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_205bd

dec_label_pc_205bd:                               ; preds = %bb, %dec_label_pc_2058c
  %v4_205bb = phi i32 [ %v3_205bb, %bb ], [ 0, %dec_label_pc_2058c ]
  ret i32 %v4_205bb

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_205c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_205c2:
  %v0_205c3 = load i32, i32* @eax, align 4
  ret i32 %v0_205c3
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKxEEEEEENT_11result_typeERSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_205c4:
  ret i32 %arg1
}

define i32 @function_205e5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_205e5:
  %ebx.global-to-local = alloca i32, align 4
  %v0_205e5 = load i32, i32* @eax, align 4
  %v1_205e5 = add i32 %v0_205e5, 4
  %v1_205eb = call i32 @unknown_3bbe2(i32 %v1_205e5)
  store i32 %v1_205eb, i32* %ebx.global-to-local, align 4
  %v0_205f2 = load i32, i32* @ebp, align 4
  %v1_205f2 = add i32 %v0_205f2, -28
  %v2_205f2 = inttoptr i32 %v1_205f2 to i32*
  %v3_205f2 = load i32, i32* %v2_205f2, align 4
  %v1_205f8 = call i32 @unknown_3aaa6(i32 %v3_205f2)
  %v0_205ff = load i32, i32* @ebp, align 4
  %v1_205ff = add i32 %v0_205ff, -28
  %v2_205ff = inttoptr i32 %v1_205ff to i32*
  %v3_205ff = load i32, i32* %v2_205ff, align 4
  %v1_20602 = inttoptr i32 %v3_205ff to i32*
  %v2_20602 = load i32, i32* %v1_20602, align 4
  %v0_20604 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20608 = add i32 %v0_205ff, -32
  %v2_20608 = inttoptr i32 %v1_20608 to i32*
  %v3_20608 = load i32, i32* %v2_20608, align 4
  %v4_20616 = call i32 @unknown_41e5d(i32 %v2_20602, i32 %v1_205f8, i32 %v3_20608, i32 %v0_20604)
  store i32 %v4_20616, i32* @eax, align 4
  %v0_2061b = load i32, i32* @ebp, align 4
  %v1_2061b = add i32 %v0_2061b, -12
  %v2_2061b = inttoptr i32 %v1_2061b to i32*
  %v3_2061b = load i32, i32* %v2_2061b, align 4
  %v1_2061e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2061e = icmp eq i32 %v1_2061e, %v3_2061b
  br i1 %v3_2061e, label %bb, label %dec_label_pc_20627

bb:                                               ; preds = %dec_label_pc_205e5
  %v1_20625 = call i32 @function_2062c()
  br label %dec_label_pc_20627

dec_label_pc_20627:                               ; preds = %bb, %dec_label_pc_205e5
  %v2_20625 = phi i32 [ %v1_20625, %bb ], [ %v4_20616, %dec_label_pc_205e5 ]
  ret i32 %v2_20625
}

declare i32 @__stack_chk_fail.744(i32) local_unnamed_addr

define i32 @function_2062c() local_unnamed_addr {
dec_label_pc_2062c:
  %v0_20631 = load i32, i32* @eax, align 4
  ret i32 %v0_20631
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKdEEEEPKvEENT_11result_typeEiiRSS_T0_() local_unnamed_addr {
dec_label_pc_20632:
  %eax.global-to-local = alloca i32, align 4
  %v5_20632 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_20632
}

define i32 @function_20634(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20634:
  %v0_20638 = load i32, i32* @ebp, align 4
  %v1_20638 = add i32 %v0_20638, 8
  %v2_20638 = inttoptr i32 %v1_20638 to i32*
  %v3_20638 = load i32, i32* %v2_20638, align 4
  %v2_2063b = add i32 %v0_20638, -28
  %v3_2063b = inttoptr i32 %v2_2063b to i32*
  store i32 %v3_20638, i32* %v3_2063b, align 4
  %v0_2063e = load i32, i32* @ebp, align 4
  %v1_2063e = add i32 %v0_2063e, 12
  %v2_2063e = inttoptr i32 %v1_2063e to i32*
  %v3_2063e = load i32, i32* %v2_2063e, align 4
  %v2_20641 = add i32 %v0_2063e, -32
  %v3_20641 = inttoptr i32 %v2_20641 to i32*
  store i32 %v3_2063e, i32* %v3_20641, align 4
  %v0_20644 = load i32, i32* @ebp, align 4
  %v1_20644 = add i32 %v0_20644, 16
  %v2_20644 = inttoptr i32 %v1_20644 to i32*
  %v3_20644 = load i32, i32* %v2_20644, align 4
  %v2_20647 = add i32 %v0_20644, -36
  %v3_20647 = inttoptr i32 %v2_20647 to i32*
  store i32 %v3_20644, i32* %v3_20647, align 4
  %v0_2064a = load i32, i32* @ebp, align 4
  %v1_2064a = add i32 %v0_2064a, 20
  %v2_2064a = inttoptr i32 %v1_2064a to i32*
  %v3_2064a = load i32, i32* %v2_2064a, align 4
  %v2_2064d = add i32 %v0_2064a, -40
  %v3_2064d = inttoptr i32 %v2_2064d to i32*
  store i32 %v3_2064a, i32* %v3_2064d, align 4
  %v0_20650 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20656 = load i32, i32* @ebp, align 4
  %v2_20656 = add i32 %v1_20656, -12
  %v3_20656 = inttoptr i32 %v2_20656 to i32*
  store i32 %v0_20650, i32* %v3_20656, align 4
  %v0_20673 = load i32, i32* @ebp, align 4
  %v1_20688 = add i32 %v0_20673, -28
  %v2_20688 = inttoptr i32 %v1_20688 to i32*
  %v3_20688 = load i32, i32* %v2_20688, align 4
  ret i32 %v3_20688
}

define i32 @function_20690(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20690:
  %cf.global-to-local = alloca i1, align 1
  %v2_20690 = load i8, i8* bitcast (i32* @edx to i8*), align 8
  %v3_20690 = load i32, i32* @eax, align 4
  %v4_20690 = trunc i32 %v3_20690 to i8
  %v5_20690 = load i1, i1* @cf, align 1
  %v6_20690 = zext i1 %v5_20690 to i8
  %v7_20690 = sub i8 %v2_20690, %v4_20690
  %v8_20690 = add i8 %v7_20690, %v6_20690
  %v18_20690 = sub i8 %v7_20690, %v6_20690
  %v19_20690 = icmp ult i8 %v2_20690, %v18_20690
  %v20_20690 = icmp ne i8 %v4_20690, -1
  %v21_20690 = or i1 %v20_20690, %v19_20690
  %v22_20690 = icmp ult i8 %v2_20690, %v4_20690
  %v23_20690 = select i1 %v5_20690, i1 %v21_20690, i1 %v22_20690
  store i1 %v23_20690, i1* %cf.global-to-local, align 1
  %v36_20690 = load i32, i32* @edx, align 8
  %v37_20690 = inttoptr i32 %v36_20690 to i8*
  store i8 %v8_20690, i8* %v37_20690, align 1
  %v0_20692 = load i32, i32* @ebx, align 4
  %v1_20692 = add i32 %v0_20692, 862319701
  %v2_20692 = inttoptr i32 %v1_20692 to i8*
  %v3_20692 = load i8, i8* %v2_20692, align 1
  %v4_20692 = load i32, i32* @ecx, align 4
  %v5_20692 = trunc i32 %v4_20692 to i8
  %v6_20692 = add i8 %v5_20692, %v3_20692
  %v11_20692 = icmp ult i8 %v6_20692, %v3_20692
  store i1 %v11_20692, i1* %cf.global-to-local, align 1
  store i8 %v6_20692, i8* %v2_20692, align 1
  %v0_20698 = load i32, i32* @eax, align 4
  %v1_20698 = load i1, i1* %cf.global-to-local, align 1
  %v2_20698 = zext i1 %v1_20698 to i32
  %v3_20698 = add i32 %v0_20698, 20
  %v4_20698 = add i32 %v3_20698, %v2_20698
  %v14_20698 = icmp eq i32 %v4_20698, 0
  %v22_20698 = icmp ule i32 %v4_20698, %v0_20698
  %v23_20698 = icmp ugt i32 %v0_20698, -21
  %v24_20698 = select i1 %v1_20698, i1 %v22_20698, i1 %v23_20698
  store i1 %v24_20698, i1* %cf.global-to-local, align 1
  store i32 %v4_20698, i32* @eax, align 4
  br i1 %v14_20698, label %bb, label %dec_label_pc_2069f

bb:                                               ; preds = %dec_label_pc_20690
  %v1_2069d = call i32 @function_206a4()
  br label %dec_label_pc_2069f

dec_label_pc_2069f:                               ; preds = %bb, %dec_label_pc_20690
  %v2_2069d = phi i32 [ %v1_2069d, %bb ], [ %v4_20698, %dec_label_pc_20690 ]
  ret i32 %v2_2069d

; uselistorder directives
  uselistorder i32 %v4_20698, { 0, 2, 1, 3 }
  uselistorder i8 %v3_20692, { 1, 0 }
  uselistorder i8 %v4_20690, { 1, 0, 2 }
  uselistorder i32 862319701, { 1, 0 }
}

define i32 @function_206a4() local_unnamed_addr {
dec_label_pc_206a4:
  %v0_206a5 = load i32, i32* @eax, align 4
  ret i32 %v0_206a5
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_206a6:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_206f6, label %bb

bb:                                               ; preds = %dec_label_pc_206a6
  %sext = mul i32 %arg6, 16777216
  %v12_206f0 = sdiv i32 %sext, 16777216
  %v13_206f0 = sext i8 %arg5 to i32
  %v14_206f0 = call i32 @function_20b2f(i32 %arg8, i32 %arg7, i32 %v12_206f0, i32 %v13_206f0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_206f6

dec_label_pc_206f6:                               ; preds = %dec_label_pc_206a6, %bb
  %v2_206f9 = mul i32 %arg2, 4
  %v1_206fc = add i32 %v2_206f9, ptrtoint (i32* @global_var_20b80.1852 to i32)
  %v1_20701 = inttoptr i32 %v1_206fc to i32*
  %v2_20701 = load i32, i32* %v1_20701, align 4
  ret i32 %v2_20701

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_206f6, { 1, 0 }
}

define i32 @function_20705() local_unnamed_addr {
dec_label_pc_20705:
  %v0_2070d = load i32, i32* @ebp, align 4
  %v1_2070d = add i32 %v0_2070d, -83
  %v2_2070d = inttoptr i32 %v1_2070d to i8*
  %v3_2070d = load i8, i8* %v2_2070d, align 1
  %v1_2071d = add i32 %v0_2070d, -56
  %v2_2071d = inttoptr i32 %v1_2071d to i32*
  %v3_2071d = load i32, i32* %v2_2071d, align 4
  %v1_20724 = add i32 %v0_2070d, -52
  %v2_20724 = inttoptr i32 %v1_20724 to i32*
  %v3_20724 = load i32, i32* %v2_20724, align 4
  %v1_2072b = add i32 %v0_2070d, -44
  %v2_2072b = inttoptr i32 %v1_2072b to i32*
  %v3_2072b = load i32, i32* %v2_2072b, align 4
  %v6_20731 = sext i8 %v3_2070d to i32
  %v7_20731 = call i32 @unknown_424de(i32 %v3_2072b, i32 %v3_20724, i32 %v3_2071d, i32 0, i32 %v6_20731, i32 1)
  store i32 %v7_20731, i32* @eax, align 4
  %v1_20736 = call i32 @function_20b67(i32 %v3_2072b)
  ret i32 %v1_20736

; uselistorder directives
  uselistorder i32 %v0_2070d, { 0, 2, 1, 3 }
}

define i32 @function_2073b() local_unnamed_addr {
dec_label_pc_2073b:
  %v0_20743 = load i32, i32* @ebp, align 4
  %v1_20743 = add i32 %v0_20743, -82
  %v2_20743 = inttoptr i32 %v1_20743 to i8*
  %v3_20743 = load i8, i8* %v2_20743, align 1
  %v1_20753 = add i32 %v0_20743, -56
  %v2_20753 = inttoptr i32 %v1_20753 to i32*
  %v3_20753 = load i32, i32* %v2_20753, align 4
  %v1_2075a = add i32 %v0_20743, -52
  %v2_2075a = inttoptr i32 %v1_2075a to i32*
  %v3_2075a = load i32, i32* %v2_2075a, align 4
  %v1_20761 = add i32 %v0_20743, -44
  %v2_20761 = inttoptr i32 %v1_20761 to i32*
  %v3_20761 = load i32, i32* %v2_20761, align 4
  %v6_20767 = sext i8 %v3_20743 to i32
  %v7_20767 = call i32 @unknown_4254b(i32 %v3_20761, i32 %v3_2075a, i32 %v3_20753, i32 0, i32 %v6_20767, i32 1)
  store i32 %v7_20767, i32* @eax, align 4
  %v1_2076c = call i32 @function_20b67(i32 %v3_20761)
  ret i32 %v1_2076c

; uselistorder directives
  uselistorder i32 %v0_20743, { 0, 2, 1, 3 }
}

define i32 @function_20771() local_unnamed_addr {
dec_label_pc_20771:
  %v0_20779 = load i32, i32* @ebp, align 4
  %v1_20779 = add i32 %v0_20779, -81
  %v2_20779 = inttoptr i32 %v1_20779 to i8*
  %v3_20779 = load i8, i8* %v2_20779, align 1
  %v1_20789 = add i32 %v0_20779, -56
  %v2_20789 = inttoptr i32 %v1_20789 to i32*
  %v3_20789 = load i32, i32* %v2_20789, align 4
  %v1_20790 = add i32 %v0_20779, -52
  %v2_20790 = inttoptr i32 %v1_20790 to i32*
  %v3_20790 = load i32, i32* %v2_20790, align 4
  %v1_20797 = add i32 %v0_20779, -44
  %v2_20797 = inttoptr i32 %v1_20797 to i32*
  %v3_20797 = load i32, i32* %v2_20797, align 4
  %v6_2079d = sext i8 %v3_20779 to i32
  %v7_2079d = call i32 @unknown_425b8(i32 %v3_20797, i32 %v3_20790, i32 %v3_20789, i32 0, i32 %v6_2079d, i32 1)
  store i32 %v7_2079d, i32* @eax, align 4
  %v1_207a2 = call i32 @function_20b67(i32 %v3_20797)
  ret i32 %v1_207a2

; uselistorder directives
  uselistorder i32 %v0_20779, { 0, 2, 1, 3 }
}

define i32 @function_207a7() local_unnamed_addr {
dec_label_pc_207a7:
  %v0_207af = load i32, i32* @ebp, align 4
  %v1_207af = add i32 %v0_207af, -80
  %v2_207af = inttoptr i32 %v1_207af to i8*
  %v3_207af = load i8, i8* %v2_207af, align 1
  %v1_207bf = add i32 %v0_207af, -56
  %v2_207bf = inttoptr i32 %v1_207bf to i32*
  %v3_207bf = load i32, i32* %v2_207bf, align 4
  %v1_207c6 = add i32 %v0_207af, -52
  %v2_207c6 = inttoptr i32 %v1_207c6 to i32*
  %v3_207c6 = load i32, i32* %v2_207c6, align 4
  %v1_207cd = add i32 %v0_207af, -44
  %v2_207cd = inttoptr i32 %v1_207cd to i32*
  %v3_207cd = load i32, i32* %v2_207cd, align 4
  %v6_207d3 = sext i8 %v3_207af to i32
  %v7_207d3 = call i32 @unknown_42625(i32 %v3_207cd, i32 %v3_207c6, i32 %v3_207bf, i32 0, i32 %v6_207d3, i32 1)
  store i32 %v7_207d3, i32* @eax, align 4
  %v1_207d8 = call i32 @function_20b67(i32 %v3_207cd)
  ret i32 %v1_207d8

; uselistorder directives
  uselistorder i32 %v0_207af, { 0, 2, 1, 3 }
}

define i32 @function_207dd() local_unnamed_addr {
dec_label_pc_207dd:
  %v0_207e5 = load i32, i32* @ebp, align 4
  %v1_207e5 = add i32 %v0_207e5, -79
  %v2_207e5 = inttoptr i32 %v1_207e5 to i8*
  %v3_207e5 = load i8, i8* %v2_207e5, align 1
  %v1_207f5 = add i32 %v0_207e5, -56
  %v2_207f5 = inttoptr i32 %v1_207f5 to i32*
  %v3_207f5 = load i32, i32* %v2_207f5, align 4
  %v1_207fc = add i32 %v0_207e5, -52
  %v2_207fc = inttoptr i32 %v1_207fc to i32*
  %v3_207fc = load i32, i32* %v2_207fc, align 4
  %v1_20803 = add i32 %v0_207e5, -44
  %v2_20803 = inttoptr i32 %v1_20803 to i32*
  %v3_20803 = load i32, i32* %v2_20803, align 4
  %v6_20809 = sext i8 %v3_207e5 to i32
  %v7_20809 = call i32 @unknown_42692(i32 %v3_20803, i32 %v3_207fc, i32 %v3_207f5, i32 0, i32 %v6_20809, i32 1)
  store i32 %v7_20809, i32* @eax, align 4
  %v1_2080e = call i32 @function_20b67(i32 %v3_20803)
  ret i32 %v1_2080e

; uselistorder directives
  uselistorder i32 %v0_207e5, { 0, 2, 1, 3 }
}

define i32 @function_20813() local_unnamed_addr {
dec_label_pc_20813:
  %v0_2081b = load i32, i32* @ebp, align 4
  %v1_2081b = add i32 %v0_2081b, -78
  %v2_2081b = inttoptr i32 %v1_2081b to i8*
  %v3_2081b = load i8, i8* %v2_2081b, align 1
  %v1_2082b = add i32 %v0_2081b, -56
  %v2_2082b = inttoptr i32 %v1_2082b to i32*
  %v3_2082b = load i32, i32* %v2_2082b, align 4
  %v1_20832 = add i32 %v0_2081b, -52
  %v2_20832 = inttoptr i32 %v1_20832 to i32*
  %v3_20832 = load i32, i32* %v2_20832, align 4
  %v1_20839 = add i32 %v0_2081b, -44
  %v2_20839 = inttoptr i32 %v1_20839 to i32*
  %v3_20839 = load i32, i32* %v2_20839, align 4
  %v6_2083f = sext i8 %v3_2081b to i32
  %v7_2083f = call i32 @unknown_426ff(i32 %v3_20839, i32 %v3_20832, i32 %v3_2082b, i32 0, i32 %v6_2083f, i32 1)
  store i32 %v7_2083f, i32* @eax, align 4
  %v1_20844 = call i32 @function_20b67(i32 %v3_20839)
  ret i32 %v1_20844

; uselistorder directives
  uselistorder i32 %v0_2081b, { 0, 2, 1, 3 }
}

define i32 @function_20849() local_unnamed_addr {
dec_label_pc_20849:
  %v0_20851 = load i32, i32* @ebp, align 4
  %v1_20868 = add i32 %v0_20851, -52
  %v2_20868 = inttoptr i32 %v1_20868 to i32*
  %v3_20868 = load i32, i32* %v2_20868, align 4
  %v1_2086f = add i32 %v0_20851, -44
  %v2_2086f = inttoptr i32 %v1_2086f to i32*
  %v3_2086f = load i32, i32* %v2_2086f, align 4
  %v2_20875 = call i32 @unknown_4276c(i32 %v3_2086f, i32 %v3_20868)
  store i32 %v2_20875, i32* @eax, align 4
  %v1_2087a = call i32 @function_20b67(i32 %v3_2086f)
  ret i32 %v1_2087a

; uselistorder directives
  uselistorder i32 %v0_20851, { 1, 0 }
}

define i32 @function_2087f() local_unnamed_addr {
dec_label_pc_2087f:
  %v0_20887 = load i32, i32* @ebp, align 4
  %v1_2089e = add i32 %v0_20887, -52
  %v2_2089e = inttoptr i32 %v1_2089e to i32*
  %v3_2089e = load i32, i32* %v2_2089e, align 4
  %v1_208a5 = add i32 %v0_20887, -44
  %v2_208a5 = inttoptr i32 %v1_208a5 to i32*
  %v3_208a5 = load i32, i32* %v2_208a5, align 4
  %v2_208ab = call i32 @unknown_4276c(i32 %v3_208a5, i32 %v3_2089e)
  store i32 %v2_208ab, i32* @eax, align 4
  %v1_208b0 = call i32 @function_20b67(i32 %v3_208a5)
  ret i32 %v1_208b0

; uselistorder directives
  uselistorder i32 %v0_20887, { 1, 0 }
}

define i32 @function_208b5() local_unnamed_addr {
dec_label_pc_208b5:
  %v0_208bd = load i32, i32* @ebp, align 4
  %v1_208d4 = add i32 %v0_208bd, -52
  %v2_208d4 = inttoptr i32 %v1_208d4 to i32*
  %v3_208d4 = load i32, i32* %v2_208d4, align 4
  %v1_208db = add i32 %v0_208bd, -44
  %v2_208db = inttoptr i32 %v1_208db to i32*
  %v3_208db = load i32, i32* %v2_208db, align 4
  %v2_208e1 = call i32 @unknown_4276c(i32 %v3_208db, i32 %v3_208d4)
  store i32 %v2_208e1, i32* @eax, align 4
  %v1_208e6 = call i32 @function_20b67(i32 %v3_208db)
  ret i32 %v1_208e6

; uselistorder directives
  uselistorder i32 %v0_208bd, { 1, 0 }
}

define i32 @function_20919(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20919:
  %v0_20919 = load i16, i16* @ds, align 2
  %v0_2091a = load i32, i32* @eax, align 4
  %v5_2091a = mul i32 %v0_2091a, 2
  %v20_2091a = and i32 %v5_2091a, 254
  %v22_2091a = and i32 %v0_2091a, -256
  %v23_2091a = or i32 %v20_2091a, %v22_2091a
  store i32 %v23_2091a, i32* @eax, align 4
  %v1_2091c = sext i16 %v0_20919 to i32
  %v2_2091c = call i32 @function_20b67(i32 %v1_2091c)
  ret i32 %v2_2091c

; uselistorder directives
  uselistorder i32 %v0_2091a, { 1, 0 }
}

define i32 @function_20951(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20951:
  %v0_20951 = load i32, i32* @ecx, align 4
  %v1_20951 = trunc i32 %v0_20951 to i8
  %v3_20951 = udiv i32 %v0_20951, 256
  %v4_20951 = trunc i32 %v3_20951 to i8
  %v5_20951 = add i8 %v4_20951, %v1_20951
  %v10_20951 = icmp ult i8 %v5_20951, %v1_20951
  %v2_20953 = load i8, i8* bitcast (i32* @edx to i8*), align 8
  %v3_20953 = load i32, i32* @eax, align 4
  %v4_20953 = trunc i32 %v3_20953 to i8
  %v6_20953 = zext i1 %v10_20951 to i8
  %v7_20953 = add i8 %v4_20953, %v2_20953
  %v8_20953 = add i8 %v7_20953, %v6_20953
  %v29_20953 = load i32, i32* @edx, align 8
  %v30_20953 = inttoptr i32 %v29_20953 to i8*
  store i8 %v8_20953, i8* %v30_20953, align 1
  %v2_20955 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_20955 = load i32, i32* @eax, align 4
  %v4_20955 = trunc i32 %v3_20955 to i8
  %v5_20955 = add i8 %v4_20955, %v2_20955
  %v21_20955 = inttoptr i32 %v3_20955 to i8*
  store i8 %v5_20955, i8* %v21_20955, align 1
  %v0_2095f = load i32, i32* @ebp, align 4
  %v1_2096f = add i32 %v0_2095f, -56
  %v2_2096f = inttoptr i32 %v1_2096f to i32*
  %v3_2096f = load i32, i32* %v2_2096f, align 4
  ret i32 %v3_2096f

; uselistorder directives
  uselistorder i8 %v1_20951, { 1, 0 }
}

define i32 @function_20977(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20977:
  %v0_20977 = load i32, i32* @ebp, align 4
  %v1_20977 = add i32 %v0_20977, 1
  store i32 %v1_20977, i32* @ebp, align 4
  %v0_20979 = load i32, i32* @eax, align 4
  %v1_2097d = add i32 %v0_20977, -43
  %v2_2097d = inttoptr i32 %v1_2097d to i32*
  %v3_2097d = load i32, i32* %v2_2097d, align 4
  %v2_20983 = call i32 @unknown_4276c(i32 %v3_2097d, i32 %v0_20979)
  store i32 %v2_20983, i32* @eax, align 4
  %v1_20988 = call i32 @function_20b67(i32 %v3_2097d)
  ret i32 %v1_20988
}

define i32 @function_2097e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2097e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_209be() local_unnamed_addr {
dec_label_pc_209be:
  %v1_209be = call i32 @function_20b67(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_209be
}

define i32 @function_209d3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_209d3:
  %v0_209db = load i32, i32* @ebp, align 4
  %v1_209e2 = add i32 %v0_209db, -52
  %v2_209e2 = inttoptr i32 %v1_209e2 to i32*
  %v3_209e2 = load i32, i32* %v2_209e2, align 4
  %v1_209e9 = add i32 %v0_209db, -44
  %v2_209e9 = inttoptr i32 %v1_209e9 to i32*
  %v3_209e9 = load i32, i32* %v2_209e9, align 4
  %v2_209ef = call i32 @unknown_4276c(i32 %v3_209e9, i32 %v3_209e2)
  store i32 %v2_209ef, i32* @eax, align 4
  %v1_209f4 = call i32 @function_20b67(i32 %v3_209e9)
  ret i32 %v1_209f4
}

define i32 @function_209f9() local_unnamed_addr {
dec_label_pc_209f9:
  %v0_20a01 = load i32, i32* @ebp, align 4
  %v1_20a18 = add i32 %v0_20a01, -52
  %v2_20a18 = inttoptr i32 %v1_20a18 to i32*
  %v3_20a18 = load i32, i32* %v2_20a18, align 4
  %v1_20a1f = add i32 %v0_20a01, -44
  %v2_20a1f = inttoptr i32 %v1_20a1f to i32*
  %v3_20a1f = load i32, i32* %v2_20a1f, align 4
  %v2_20a25 = call i32 @unknown_4276c(i32 %v3_20a1f, i32 %v3_20a18)
  store i32 %v2_20a25, i32* @eax, align 4
  %v1_20a2a = call i32 @function_20b67(i32 %v3_20a1f)
  ret i32 %v1_20a2a

; uselistorder directives
  uselistorder i32 %v0_20a01, { 1, 0 }
}

define i32 @function_20a2f() local_unnamed_addr {
dec_label_pc_20a2f:
  %v0_20a37 = load i32, i32* @ebp, align 4
  %v1_20a4e = add i32 %v0_20a37, -52
  %v2_20a4e = inttoptr i32 %v1_20a4e to i32*
  %v3_20a4e = load i32, i32* %v2_20a4e, align 4
  %v1_20a55 = add i32 %v0_20a37, -44
  %v2_20a55 = inttoptr i32 %v1_20a55 to i32*
  %v3_20a55 = load i32, i32* %v2_20a55, align 4
  %v2_20a5b = call i32 @unknown_4276c(i32 %v3_20a55, i32 %v3_20a4e)
  store i32 %v2_20a5b, i32* @eax, align 4
  %v1_20a60 = call i32 @function_20b67(i32 %v3_20a55)
  ret i32 %v1_20a60

; uselistorder directives
  uselistorder i32 %v0_20a37, { 1, 0 }
}

define i32 @function_20a65() local_unnamed_addr {
dec_label_pc_20a65:
  %v0_20a6d = load i32, i32* @ebp, align 4
  %v1_20a84 = add i32 %v0_20a6d, -52
  %v2_20a84 = inttoptr i32 %v1_20a84 to i32*
  %v3_20a84 = load i32, i32* %v2_20a84, align 4
  %v1_20a8b = add i32 %v0_20a6d, -44
  %v2_20a8b = inttoptr i32 %v1_20a8b to i32*
  %v3_20a8b = load i32, i32* %v2_20a8b, align 4
  %v2_20a91 = call i32 @unknown_4276c(i32 %v3_20a8b, i32 %v3_20a84)
  store i32 %v2_20a91, i32* @eax, align 4
  %v1_20a96 = call i32 @function_20b67(i32 %v3_20a8b)
  ret i32 %v1_20a96

; uselistorder directives
  uselistorder i32 %v0_20a6d, { 1, 0 }
}

define i32 @function_20aaa(i32 %arg1) local_unnamed_addr {
dec_label_pc_20aaa:
  %eax.global-to-local = alloca i32, align 4
  %v0_20aab = load i32, i32* @eax, align 4
  %v1_20aab = trunc i32 %v0_20aab to i8
  %v2_20aab = and i8 %v1_20aab, 12
  %v8_20aab = zext i8 %v2_20aab to i32
  %v10_20aab = and i32 %v0_20aab, -256
  %v11_20aab = or i32 %v8_20aab, %v10_20aab
  store i32 %v11_20aab, i32* %eax.global-to-local, align 4
  %v1_20aad = inttoptr i32 %v11_20aab to i8*
  %v2_20aad = load i8, i8* %v1_20aad, align 4
  %v5_20aad = add i8 %v2_20aad, %v2_20aab
  store i8 %v5_20aad, i8* %v1_20aad, align 4
  %v0_20aaf = load i32, i32* %eax.global-to-local, align 4
  %v1_20aaf = inttoptr i32 %v0_20aaf to i8*
  %v2_20aaf = load i8, i8* %v1_20aaf, align 1
  %v4_20aaf = trunc i32 %v0_20aaf to i8
  %v5_20aaf = add i8 %v2_20aaf, %v4_20aaf
  store i8 %v5_20aaf, i8* %v1_20aaf, align 1
  %v0_20ab1 = load i32, i32* @ebp, align 4
  %v1_20ab1 = add i32 %v0_20ab1, -56
  %v2_20ab1 = inttoptr i32 %v1_20ab1 to i32*
  %v3_20ab1 = load i32, i32* %v2_20ab1, align 4
  store i32 %v3_20ab1, i32* %eax.global-to-local, align 4
  %v1_20ab8 = add i32 %v0_20ab1, -52
  %v2_20ab8 = inttoptr i32 %v1_20ab8 to i32*
  %v3_20ab8 = load i32, i32* %v2_20ab8, align 4
  store i32 %v3_20ab8, i32* %eax.global-to-local, align 4
  %v1_20abf = add i32 %v0_20ab1, -44
  %v2_20abf = inttoptr i32 %v1_20abf to i32*
  %v3_20abf = load i32, i32* %v2_20abf, align 4
  store i32 %v3_20abf, i32* %eax.global-to-local, align 4
  %v2_20ac5 = call i32 @unknown_4276c(i32 %v3_20abf, i32 %v3_20ab8)
  store i32 %v2_20ac5, i32* @eax, align 4
  %v1_20aca = call i32 @function_20b67(i32 %v3_20abf)
  store i32 %v1_20aca, i32* %eax.global-to-local, align 4
  ret i32 %v1_20aca
}

define i32 @function_20acf() local_unnamed_addr {
dec_label_pc_20acf:
  %v0_20ae5 = load i32, i32* @ebp, align 4
  %v1_20aec = add i32 %v0_20ae5, -52
  %v2_20aec = inttoptr i32 %v1_20aec to i32*
  %v3_20aec = load i32, i32* %v2_20aec, align 4
  %v1_20af3 = add i32 %v0_20ae5, -44
  %v2_20af3 = inttoptr i32 %v1_20af3 to i32*
  %v3_20af3 = load i32, i32* %v2_20af3, align 4
  %v2_20af9 = call i32 @unknown_4276c(i32 %v3_20af3, i32 %v3_20aec)
  store i32 %v2_20af9, i32* @eax, align 4
  %v1_20afe = call i32 @function_20b67(i32 %v3_20af3)
  ret i32 %v1_20afe
}

define i32 @function_20b00() local_unnamed_addr {
dec_label_pc_20b00:
  %v0_20b14 = load i32, i32* @ebp, align 4
  %v1_20b1b = add i32 %v0_20b14, -52
  %v2_20b1b = inttoptr i32 %v1_20b1b to i32*
  %v3_20b1b = load i32, i32* %v2_20b1b, align 4
  %v1_20b22 = add i32 %v0_20b14, -44
  %v2_20b22 = inttoptr i32 %v1_20b22 to i32*
  %v3_20b22 = load i32, i32* %v2_20b22, align 4
  %v2_20b28 = call i32 @unknown_4276c(i32 %v3_20b22, i32 %v3_20b1b)
  store i32 %v2_20b28, i32* @eax, align 4
  %v1_20b2d = call i32 @function_20b67(i32 %v3_20b22)
  ret i32 %v1_20b2d

; uselistorder directives
  uselistorder i32 (i32)* @function_20b67, { 18, 17, 4, 16, 15, 14, 3, 0, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32, i32)* @unknown_4276c, { 10, 9, 2, 8, 7, 6, 1, 0, 5, 4, 3 }
}

define i32 @function_20b2f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_20b2f:
  %v0_20b3f = load i32, i32* @ecx, align 4
  %v0_20b43 = load i32, i32* @edx, align 8
  %v0_20b47 = load i32, i32* @ebp, align 4
  %v1_20b47 = add i32 %v0_20b47, -56
  %v2_20b47 = inttoptr i32 %v1_20b47 to i32*
  %v3_20b47 = load i32, i32* %v2_20b47, align 4
  %v1_20b4e = add i32 %v0_20b47, -52
  %v2_20b4e = inttoptr i32 %v1_20b4e to i32*
  %v3_20b4e = load i32, i32* %v2_20b4e, align 4
  %v1_20b55 = add i32 %v0_20b47, -48
  %v2_20b55 = inttoptr i32 %v1_20b55 to i32*
  %v3_20b55 = load i32, i32* %v2_20b55, align 4
  %v1_20b5c = add i32 %v0_20b47, -44
  %v2_20b5c = inttoptr i32 %v1_20b5c to i32*
  %v3_20b5c = load i32, i32* %v2_20b5c, align 4
  %sext = mul i32 %v0_20b43, 16777216
  %v8_20b62 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_20b3f, 16777216
  %v9_20b62 = sdiv i32 %sext1, 16777216
  %v10_20b62 = call i32 @unknown_427c6(i32 %v3_20b5c, i32 %v3_20b55, i32 %v3_20b4e, i32 %v3_20b47, i32 %v8_20b62, i32 %v9_20b62, i32 0, i32 0)
  ret i32 %v10_20b62

; uselistorder directives
  uselistorder i32 %v0_20b47, { 1, 0, 2, 3 }
}

define i32 @function_20b67(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b67:
  %v0_20b67 = load i32, i32* @ebp, align 4
  %v1_20b67 = add i32 %v0_20b67, -28
  %v2_20b67 = inttoptr i32 %v1_20b67 to i32*
  %v3_20b67 = load i32, i32* %v2_20b67, align 4
  %v1_20b6a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20b6a = icmp eq i32 %v1_20b6a, %v3_20b67
  br i1 %v3_20b6a, label %bb, label %dec_label_pc_20b67.dec_label_pc_20b73_crit_edge

dec_label_pc_20b67.dec_label_pc_20b73_crit_edge:  ; preds = %dec_label_pc_20b67
  %v2_20b71.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_20b73

bb:                                               ; preds = %dec_label_pc_20b67
  %v1_20b71 = call i32 @function_20b78()
  br label %dec_label_pc_20b73

dec_label_pc_20b73:                               ; preds = %dec_label_pc_20b67.dec_label_pc_20b73_crit_edge, %bb
  %v2_20b71 = phi i32 [ %v2_20b71.pre, %dec_label_pc_20b67.dec_label_pc_20b73_crit_edge ], [ %v1_20b71, %bb ]
  ret i32 %v2_20b71

; uselistorder directives
  uselistorder label %dec_label_pc_20b73, { 1, 0 }
}

define i32 @function_20b78() local_unnamed_addr {
dec_label_pc_20b78:
  %v0_20b7f = load i32, i32* @eax, align 4
  ret i32 %v0_20b7f
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKbEEEEPKvEENT_11result_typeEiiRSS_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20bd0:
  ret i32 0
}

define i32 @function_20c07(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20c07:
  %v2_20c07 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_20c07 = load i32, i32* @eax, align 4
  %v4_20c07 = trunc i32 %v3_20c07 to i8
  %v5_20c07 = add i8 %v4_20c07, %v2_20c07
  %v21_20c07 = inttoptr i32 %v3_20c07 to i8*
  store i8 %v5_20c07, i8* %v21_20c07, align 1
  %v0_20c09 = load i32, i32* @ecx, align 4
  %v0_20c0d = load i32, i32* @edx, align 8
  %v0_20c11 = load i32, i32* @ebp, align 4
  %v1_20c11 = add i32 %v0_20c11, -40
  %v2_20c11 = inttoptr i32 %v1_20c11 to i32*
  %v3_20c11 = load i32, i32* %v2_20c11, align 4
  %v1_20c18 = add i32 %v0_20c11, -36
  %v2_20c18 = inttoptr i32 %v1_20c18 to i32*
  %v3_20c18 = load i32, i32* %v2_20c18, align 4
  %v1_20c1f = add i32 %v0_20c11, -32
  %v2_20c1f = inttoptr i32 %v1_20c1f to i32*
  %v3_20c1f = load i32, i32* %v2_20c1f, align 4
  %v1_20c26 = add i32 %v0_20c11, -28
  %v2_20c26 = inttoptr i32 %v1_20c26 to i32*
  %v3_20c26 = load i32, i32* %v2_20c26, align 4
  %sext = mul i32 %v0_20c0d, 16777216
  %v6_20c2c = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_20c09, 16777216
  %v7_20c2c = sdiv i32 %sext1, 16777216
  %v8_20c2c = call i32 @unknown_42d57(i32 %v3_20c26, i32 %v3_20c1f, i32 %v3_20c18, i32 %v3_20c11, i32 %v6_20c2c, i32 %v7_20c2c)
  store i32 %v8_20c2c, i32* @eax, align 4
  %v0_20c31 = load i32, i32* @ebp, align 4
  %v1_20c31 = add i32 %v0_20c31, -12
  %v2_20c31 = inttoptr i32 %v1_20c31 to i32*
  %v3_20c31 = load i32, i32* %v2_20c31, align 4
  %v1_20c34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20c34 = icmp eq i32 %v1_20c34, %v3_20c31
  br i1 %v3_20c34, label %bb, label %dec_label_pc_20c3d

bb:                                               ; preds = %dec_label_pc_20c07
  %v3_20c3b = call i32 @function_20c42(i32 %v3_20c26, i32 %v3_20c1f)
  br label %dec_label_pc_20c3d

dec_label_pc_20c3d:                               ; preds = %bb, %dec_label_pc_20c07
  %v4_20c3b = phi i32 [ %v3_20c3b, %bb ], [ %v8_20c2c, %dec_label_pc_20c07 ]
  ret i32 %v4_20c3b

; uselistorder directives
  uselistorder i32 %v0_20c11, { 1, 0, 2, 3 }
}

define i32 @function_20c42(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20c42:
  %v0_20c43 = load i32, i32* @eax, align 4
  ret i32 %v0_20c43
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c44:
  %v3_20c71 = call i32 @unknown_432f8(i32 %arg1, i32 1, i32 0)
  store i32 %v3_20c71, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20c82

bb:                                               ; preds = %dec_label_pc_20c44
  %v1_20c80 = call i32 @function_20c87()
  br label %dec_label_pc_20c82

dec_label_pc_20c82:                               ; preds = %bb, %dec_label_pc_20c44
  %v2_20c80 = phi i32 [ %v1_20c80, %bb ], [ %v3_20c71, %dec_label_pc_20c44 ]
  ret i32 %v2_20c80
}

define i32 @function_20c87() local_unnamed_addr {
dec_label_pc_20c87:
  %v0_20c88 = load i32, i32* @eax, align 4
  ret i32 %v0_20c88
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20c8a:
  %v1_20cad = call i32 @unknown_4339c(i32 %arg2)
  %v2_20cbc = call i32 @unknown_433ca(i32 %arg1, i32 %v1_20cad)
  ret i32 %v2_20cbc
}

define i32 @function_20cc2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20cc2:
  %v0_20cc2 = load i32, i32* @ebp, align 4
  %v1_20cc2 = add i32 %v0_20cc2, 1
  store i32 %v1_20cc2, i32* @ebp, align 4
  %v0_20cc7 = load i32, i32* @edx, align 8
  %v1_20cc7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20cc7 = icmp eq i32 %v1_20cc7, %v0_20cc7
  br i1 %v3_20cc7, label %bb, label %dec_label_pc_20cc2.dec_label_pc_20cd0_crit_edge

dec_label_pc_20cc2.dec_label_pc_20cd0_crit_edge:  ; preds = %dec_label_pc_20cc2
  %v2_20cce.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_20cd0

bb:                                               ; preds = %dec_label_pc_20cc2
  %v1_20cce = call i32 @function_20cd5()
  br label %dec_label_pc_20cd0

dec_label_pc_20cd0:                               ; preds = %dec_label_pc_20cc2.dec_label_pc_20cd0_crit_edge, %bb
  %v2_20cce = phi i32 [ %v2_20cce.pre, %dec_label_pc_20cc2.dec_label_pc_20cd0_crit_edge ], [ %v1_20cce, %bb ]
  ret i32 %v2_20cce

; uselistorder directives
  uselistorder label %dec_label_pc_20cd0, { 1, 0 }
}

define i32 @function_20cd5() local_unnamed_addr {
dec_label_pc_20cd5:
  %v0_20cd6 = load i32, i32* @eax, align 4
  ret i32 %v0_20cd6
}

define i32 @_ZNSaISt4pairIK7uint256P11CBlockIndexEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20cda:
  ret i32 0
}

define i32 @function_20cf2(i32 %arg1) local_unnamed_addr {
dec_label_pc_20cf2:
  %v0_20cf2 = load i32, i32* @ebp, align 4
  %v1_20cf2 = add i32 %v0_20cf2, 1
  store i32 %v1_20cf2, i32* @ebp, align 4
  %v0_20cf7 = call i32 @unknown_43456()
  %v0_20cfc = load i32, i32* @ebp, align 4
  %v1_20cfc = add i32 %v0_20cfc, -12
  %v2_20cfc = inttoptr i32 %v1_20cfc to i32*
  %v3_20cfc = load i32, i32* %v2_20cfc, align 4
  %v1_20cff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20cff = xor i32 %v1_20cff, %v3_20cfc
  %v3_20cff = icmp eq i32 %v2_20cff, 0
  store i32 %v2_20cff, i32* @eax, align 4
  br i1 %v3_20cff, label %bb, label %dec_label_pc_20d08

bb:                                               ; preds = %dec_label_pc_20cf2
  %v1_20d06 = call i32 @function_20d0d()
  br label %dec_label_pc_20d08

dec_label_pc_20d08:                               ; preds = %bb, %dec_label_pc_20cf2
  %v2_20d06 = phi i32 [ %v1_20d06, %bb ], [ %v2_20cff, %dec_label_pc_20cf2 ]
  ret i32 %v2_20d06
}

define i32 @function_20d0d() local_unnamed_addr {
dec_label_pc_20d0d:
  %v0_20d0e = load i32, i32* @eax, align 4
  ret i32 %v0_20d0e
}

define i32 @_ZSt11__addressofISt4pairIK7uint256P11CBlockIndexEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d0f:
  ret i32 0
}

define i32 @function_20d28(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d28:
  %v0_20d2c = load i32, i32* @edx, align 8
  %v1_20d2c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20d2c = icmp eq i32 %v1_20d2c, %v0_20d2c
  br i1 %v3_20d2c, label %bb, label %dec_label_pc_20d28.dec_label_pc_20d35_crit_edge

dec_label_pc_20d28.dec_label_pc_20d35_crit_edge:  ; preds = %dec_label_pc_20d28
  %v2_20d33.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_20d35

bb:                                               ; preds = %dec_label_pc_20d28
  %v1_20d33 = call i32 @function_20d3a()
  br label %dec_label_pc_20d35

dec_label_pc_20d35:                               ; preds = %dec_label_pc_20d28.dec_label_pc_20d35_crit_edge, %bb
  %v2_20d33 = phi i32 [ %v2_20d33.pre, %dec_label_pc_20d28.dec_label_pc_20d35_crit_edge ], [ %v1_20d33, %bb ]
  ret i32 %v2_20d33

; uselistorder directives
  uselistorder label %dec_label_pc_20d35, { 1, 0 }
}

define i32 @function_20d3a() local_unnamed_addr {
dec_label_pc_20d3a:
  %v0_20d3b = load i32, i32* @eax, align 4
  ret i32 %v0_20d3b
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256P11CBlockIndexEE9constructEPS6_RKS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20d3c:
  %v0_20d54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_20d54
}

define i32 @function_20d5e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20d5e:
  %edx.global-to-local = alloca i32, align 4
  %v0_20d5e = load i32, i32* @ebx, align 4
  %v1_20d5e = add i32 %v0_20d5e, 1149886533
  %v2_20d5e = inttoptr i32 %v1_20d5e to i8*
  %v3_20d5e = load i8, i8* %v2_20d5e, align 1
  %v4_20d5e = udiv i8 %v3_20d5e, 16
  %v5_20d5e = mul i8 %v3_20d5e, 16
  %v6_20d5e = or i8 %v4_20d5e, %v5_20d5e
  store i8 %v6_20d5e, i8* %v2_20d5e, align 1
  %v0_20d6d = call i32 @function_24f82()
  %v1_20d72 = icmp eq i32 %v0_20d6d, 0
  br i1 %v1_20d72, label %dec_label_pc_20dad, label %dec_label_pc_20d76

dec_label_pc_20d76:                               ; preds = %dec_label_pc_20d5e
  %v0_20d76 = load i32, i32* @ebp, align 4
  %v1_20d76 = add i32 %v0_20d76, -36
  %v2_20d76 = inttoptr i32 %v1_20d76 to i32*
  %v3_20d76 = load i32, i32* %v2_20d76, align 4
  store i32 %v3_20d76, i32* %edx.global-to-local, align 8
  %v1_20d79 = inttoptr i32 %v3_20d76 to i32*
  %v2_20d79 = load i32, i32* %v1_20d79, align 4
  %v2_20d7b = inttoptr i32 %v0_20d6d to i32*
  store i32 %v2_20d79, i32* %v2_20d7b, align 4
  %v0_20d7d = load i32, i32* %edx.global-to-local, align 8
  %v1_20d7d = add i32 %v0_20d7d, 4
  %v2_20d7d = inttoptr i32 %v1_20d7d to i32*
  %v3_20d7d = load i32, i32* %v2_20d7d, align 4
  %v2_20d80 = add i32 %v0_20d6d, 4
  %v3_20d80 = inttoptr i32 %v2_20d80 to i32*
  store i32 %v3_20d7d, i32* %v3_20d80, align 4
  %v0_20d83 = load i32, i32* %edx.global-to-local, align 8
  %v1_20d83 = add i32 %v0_20d83, 8
  %v2_20d83 = inttoptr i32 %v1_20d83 to i32*
  %v3_20d83 = load i32, i32* %v2_20d83, align 4
  %v2_20d86 = add i32 %v0_20d6d, 8
  %v3_20d86 = inttoptr i32 %v2_20d86 to i32*
  store i32 %v3_20d83, i32* %v3_20d86, align 4
  %v0_20d89 = load i32, i32* %edx.global-to-local, align 8
  %v1_20d89 = add i32 %v0_20d89, 12
  %v2_20d89 = inttoptr i32 %v1_20d89 to i32*
  %v3_20d89 = load i32, i32* %v2_20d89, align 4
  %v2_20d8c = add i32 %v0_20d6d, 12
  %v3_20d8c = inttoptr i32 %v2_20d8c to i32*
  store i32 %v3_20d89, i32* %v3_20d8c, align 4
  %v0_20d8f = load i32, i32* %edx.global-to-local, align 8
  %v1_20d8f = add i32 %v0_20d8f, 16
  %v2_20d8f = inttoptr i32 %v1_20d8f to i32*
  %v3_20d8f = load i32, i32* %v2_20d8f, align 4
  %v2_20d92 = add i32 %v0_20d6d, 16
  %v3_20d92 = inttoptr i32 %v2_20d92 to i32*
  store i32 %v3_20d8f, i32* %v3_20d92, align 4
  %v0_20d95 = load i32, i32* %edx.global-to-local, align 8
  %v1_20d95 = add i32 %v0_20d95, 20
  %v2_20d95 = inttoptr i32 %v1_20d95 to i32*
  %v3_20d95 = load i32, i32* %v2_20d95, align 4
  %v2_20d98 = add i32 %v0_20d6d, 20
  %v3_20d98 = inttoptr i32 %v2_20d98 to i32*
  store i32 %v3_20d95, i32* %v3_20d98, align 4
  %v0_20d9b = load i32, i32* %edx.global-to-local, align 8
  %v1_20d9b = add i32 %v0_20d9b, 24
  %v2_20d9b = inttoptr i32 %v1_20d9b to i32*
  %v3_20d9b = load i32, i32* %v2_20d9b, align 4
  %v2_20d9e = add i32 %v0_20d6d, 24
  %v3_20d9e = inttoptr i32 %v2_20d9e to i32*
  store i32 %v3_20d9b, i32* %v3_20d9e, align 4
  %v0_20da1 = load i32, i32* %edx.global-to-local, align 8
  %v1_20da1 = add i32 %v0_20da1, 28
  %v2_20da1 = inttoptr i32 %v1_20da1 to i32*
  %v3_20da1 = load i32, i32* %v2_20da1, align 4
  %v2_20da4 = add i32 %v0_20d6d, 28
  %v3_20da4 = inttoptr i32 %v2_20da4 to i32*
  store i32 %v3_20da1, i32* %v3_20da4, align 4
  %v0_20da7 = load i32, i32* %edx.global-to-local, align 8
  %v1_20da7 = add i32 %v0_20da7, 32
  %v2_20da7 = inttoptr i32 %v1_20da7 to i32*
  %v3_20da7 = load i32, i32* %v2_20da7, align 4
  store i32 %v3_20da7, i32* @edx, align 8
  %v2_20daa = add i32 %v0_20d6d, 32
  %v3_20daa = inttoptr i32 %v2_20daa to i32*
  store i32 %v3_20da7, i32* %v3_20daa, align 4
  br label %dec_label_pc_20dad

dec_label_pc_20dad:                               ; preds = %dec_label_pc_20d76, %dec_label_pc_20d5e
  %v0_20dad = load i32, i32* @ebp, align 4
  %v1_20dad = add i32 %v0_20dad, -12
  %v2_20dad = inttoptr i32 %v1_20dad to i32*
  %v3_20dad = load i32, i32* %v2_20dad, align 4
  %v1_20db0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20db0 = xor i32 %v1_20db0, %v3_20dad
  %v3_20db0 = icmp eq i32 %v2_20db0, 0
  store i32 %v2_20db0, i32* @eax, align 4
  br i1 %v3_20db0, label %bb, label %dec_label_pc_20db9

bb:                                               ; preds = %dec_label_pc_20dad
  %v1_20db7 = call i32 @function_20dbe()
  br label %dec_label_pc_20db9

dec_label_pc_20db9:                               ; preds = %bb, %dec_label_pc_20dad
  %v2_20db7 = phi i32 [ %v1_20db7, %bb ], [ %v2_20db0, %dec_label_pc_20dad ]
  ret i32 %v2_20db7
}

define i32 @function_20dbe() local_unnamed_addr {
dec_label_pc_20dbe:
  %v0_20dbf = load i32, i32* @eax, align 4
  ret i32 %v0_20dbf
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20dc0:
  %v3_20df2 = call i32 @unknown_43566(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20e03

bb:                                               ; preds = %dec_label_pc_20dc0
  %v1_20e01 = call i32 @function_20e08()
  br label %dec_label_pc_20e03

dec_label_pc_20e03:                               ; preds = %bb, %dec_label_pc_20dc0
  %v2_20e01 = phi i32 [ %v1_20e01, %bb ], [ 0, %dec_label_pc_20dc0 ]
  ret i32 %v2_20e01
}

define i32 @function_20e08() local_unnamed_addr {
dec_label_pc_20e08:
  %v0_20e09 = load i32, i32* @eax, align 4
  ret i32 %v0_20e09
}

define i32 @_ZNK12CBlockHeader9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20e0a:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp97 = call i8 @__decompiler_undefined_function_4()
  %tmp98 = call i8 @__decompiler_undefined_function_4()
  %tmp116 = ptrtoint i32* %arg1 to i32
  %v0_20e4c = load i32, i32* %ecx.global-to-local, align 4
  %sext = mul i32 %v0_20e4c, 16777216
  %v5_20e68 = sdiv i32 %sext, 16777216
  %v6_20e68 = call i32 @unknown_435f1(i32 %arg2, i32 %tmp116, i32 %arg3, i32 %arg4, i32 %v5_20e68)
  %v2_20e73 = load i32, i32* %arg1, align 4
  %v1_20e7b = add i32 %tmp116, 4
  %v5_20e9e = sext i8 %tmp98 to i32
  %v6_20e9e = call i32 @unknown_4365b(i32 %arg2, i32 %v1_20e7b, i32 %arg3, i32 %v2_20e73, i32 %v5_20e9e)
  %v1_20ea9 = add i32 %tmp116, 36
  %v5_20ecc = sext i8 %tmp97 to i32
  %v6_20ecc = call i32 @unknown_4365b(i32 %arg2, i32 %v1_20ea9, i32 %arg3, i32 %v2_20e73, i32 %v5_20ecc)
  %v1_20ed7 = add i32 %tmp116, 68
  %v0_20eda = load i32, i32* %edi.global-to-local, align 4
  %sext1 = mul i32 %v0_20eda, 16777216
  %v5_20ef8 = sdiv i32 %sext1, 16777216
  %v6_20ef8 = call i32 @unknown_3ce8c(i32 %arg2, i32 %v1_20ed7, i32 %arg3, i32 %v2_20e73, i32 %v5_20ef8)
  %v0_20f06 = load i32, i32* %esi.global-to-local, align 4
  ret i32 %v0_20f06

; uselistorder directives
  uselistorder i32 %v2_20e73, { 2, 1, 0 }
  uselistorder i32 %tmp116, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_4365b, { 1, 0 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_20f5e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20f5e:
  %zf.global-to-local = alloca i1, align 1
  %v2_20f5e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_20f5e = load i32, i32* @eax, align 4
  %v4_20f5e = trunc i32 %v3_20f5e to i8
  %v5_20f5e = add i8 %v4_20f5e, %v2_20f5e
  %v15_20f5e = icmp eq i8 %v5_20f5e, 0
  store i1 %v15_20f5e, i1* %zf.global-to-local, align 1
  %v21_20f5e = inttoptr i32 %v3_20f5e to i8*
  store i8 %v5_20f5e, i8* %v21_20f5e, align 1
  %v0_20f60 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_20f60, label %bb, label %dec_label_pc_20f5e.dec_label_pc_20f62_crit_edge

dec_label_pc_20f5e.dec_label_pc_20f62_crit_edge:  ; preds = %dec_label_pc_20f5e
  %v2_20f60.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_20f62

bb:                                               ; preds = %dec_label_pc_20f5e
  %v1_20f60 = call i32 @function_20f67()
  br label %dec_label_pc_20f62

dec_label_pc_20f62:                               ; preds = %dec_label_pc_20f5e.dec_label_pc_20f62_crit_edge, %bb
  %v2_20f60 = phi i32 [ %v2_20f60.pre, %dec_label_pc_20f5e.dec_label_pc_20f62_crit_edge ], [ %v1_20f60, %bb ]
  ret i32 %v2_20f60

; uselistorder directives
  uselistorder label %dec_label_pc_20f62, { 1, 0 }
}

define i32 @function_20f67() local_unnamed_addr {
dec_label_pc_20f67:
  %v0_20f6e = load i32, i32* @eax, align 4
  ret i32 %v0_20f6e
}

define i32 @_Z14Serialize_implI11CDataStream12CTransactionSaIS1_EEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f6f:
  ret i32 %arg1
}

define i32 @function_20f7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_20f7c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_20f7c = load i32, i32* @ebp, align 4
  %v0_20f7d = load i32, i32* @eax, align 4
  %v2_20f7d = or i32 %v0_20f7d, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_20f7d, i32* %eax.global-to-local, align 4
  %v0_20f80 = load i32, i32* @ecx, align 4
  %v1_20f80 = add i32 %v0_20f80, -1
  store i32 %v1_20f80, i32* @ecx, align 4
  %v1_20f82 = add i32 %v0_20f7c, 3
  store i32 %v1_20f82, i32* %ebp.global-to-local, align 4
  %v1_20f83 = add i32 %v0_20f80, 1166793796
  %v2_20f83 = inttoptr i32 %v1_20f83 to i8*
  %v3_20f83 = load i8, i8* %v2_20f83, align 1
  %v5_20f83 = trunc i32 %v1_20f80 to i8
  %v8_20f83 = add i8 %v3_20f83, %v5_20f83
  %v28_20f83 = icmp ult i8 %v8_20f83, %v3_20f83
  store i1 %v28_20f83, i1* %cf.global-to-local, align 1
  store i8 %v8_20f83, i8* %v2_20f83, align 1
  %v0_20f89 = load i32, i32* %eax.global-to-local, align 4
  %v1_20f89 = trunc i32 %v0_20f89 to i8
  %v2_20f89 = load i1, i1* %cf.global-to-local, align 1
  %v3_20f89 = zext i1 %v2_20f89 to i8
  %v4_20f89 = add i8 %v1_20f89, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_20f89 = add i8 %v4_20f89, %v3_20f89
  %v25_20f89 = zext i8 %v5_20f89 to i32
  %v27_20f89 = and i32 %v0_20f89, -256
  %v28_20f89 = or i32 %v25_20f89, %v27_20f89
  store i32 %v28_20f89, i32* %eax.global-to-local, align 4
  %v0_20f8b = load i32, i32* %ebp.global-to-local, align 4
  %v1_20f8b = add i32 %v0_20f8b, 1
  store i32 %v1_20f8b, i32* @ebp, align 4
  %v1_20f8c = load i32, i32* @ebx, align 4
  %v2_20f8c = add i32 %v1_20f8c, 1166612549
  %v3_20f8c = inttoptr i32 %v2_20f8c to float*
  %v4_20f8c = load float, float* %v3_20f8c, align 4
  %v5_20f8c = fpext float %v4_20f8c to x86_fp80
  %v6_20f8c = load x86_fp80, x86_fp80* @st0, align 4
  %v7_20f8c = fmul x86_fp80 %v5_20f8c, %v6_20f8c
  store x86_fp80 %v7_20f8c, x86_fp80* @st0, align 4
  %v2_20f92 = udiv i8 %v5_20f89, 101
  %v3_20f92 = urem i8 %v5_20f89, 101
  %v4_20f92 = zext i8 %v3_20f92 to i32
  %v6_20f92 = and i32 %v0_20f89, -65536
  %v8_20f92 = zext i8 %v2_20f92 to i32
  %v10_20f92 = mul nuw nsw i32 %v8_20f92, 256
  %v11_20f92 = or i32 %v4_20f92, %v6_20f92
  %v12_20f92 = or i32 %v11_20f92, %v10_20f92
  store i32 %v12_20f92, i32* %eax.global-to-local, align 4
  %v0_20f94 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20f99 = add i32 %v0_20f8b, -11
  %v3_20f99 = inttoptr i32 %v2_20f99 to i32*
  store i32 %v0_20f94, i32* %v3_20f99, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_20f9e = load i32, i32* @ebp, align 4
  %v1_20f9e = add i32 %v0_20f9e, -32
  %v2_20f9e = inttoptr i32 %v1_20f9e to i32*
  %v3_20f9e = load i32, i32* %v2_20f9e, align 4
  store i32 %v3_20f9e, i32* %eax.global-to-local, align 4
  %v1_20fa4 = call i32 @unknown_331c1(i32 %v3_20f9e)
  store i32 %v1_20fa4, i32* %eax.global-to-local, align 4
  %v0_20fb6 = load i32, i32* @ebp, align 4
  %v1_20fb6 = add i32 %v0_20fb6, -28
  %v2_20fb6 = inttoptr i32 %v1_20fb6 to i32*
  %v3_20fb6 = load i32, i32* %v2_20fb6, align 4
  store i32 %v3_20fb6, i32* %eax.global-to-local, align 4
  %v3_20fbc = call i32 @unknown_43828(i32 %v3_20fb6, i32 %v1_20fa4, i32 0)
  %v0_20fc1 = load i32, i32* @ebp, align 4
  %v1_20fc1 = add i32 %v0_20fc1, -20
  store i32 %v1_20fc1, i32* %eax.global-to-local, align 4
  %v1_20fc4 = add i32 %v0_20fc1, -32
  %v2_20fc4 = inttoptr i32 %v1_20fc4 to i32*
  %v3_20fc4 = load i32, i32* %v2_20fc4, align 4
  %v2_20fce = call i32 @unknown_3ce95(i32 %v1_20fc1, i32 %v3_20fc4)
  store i32 %v2_20fce, i32* %eax.global-to-local, align 4
  %v0_20fd3 = load i32, i32* @esp, align 4
  %v5_20fd3 = icmp ult i32 %v0_20fd3, 4
  store i1 %v5_20fd3, i1* %cf.global-to-local, align 1
  %v16_20fd3 = ptrtoint i32* %stack_var_-4 to i32
  br label %dec_label_pc_2100b

dec_label_pc_20fd8:                               ; preds = %dec_label_pc_2100b
  %v1_20fd8 = add i32 %v0_20fd8, -20
  store i32 %v1_20fd8, i32* %eax.global-to-local, align 4
  %v1_20fdb = load i32, i32* @esp, align 4
  %v2_20fdb = inttoptr i32 %v1_20fdb to i32*
  store i32 %v1_20fd8, i32* %v2_20fdb, align 4
  %v0_20fde = call i32 @unknown_376dd()
  store i32 %v0_20fde, i32* %eax.global-to-local, align 4
  %v0_20fe3 = load i32, i32* @ebp, align 4
  %v1_20fe3 = add i32 %v0_20fe3, -40
  %v2_20fe3 = inttoptr i32 %v1_20fe3 to i32*
  %v3_20fe3 = load i32, i32* %v2_20fe3, align 4
  %v1_20fe6 = load i32, i32* @esp, align 4
  %v2_20fe6 = add i32 %v1_20fe6, 12
  %v3_20fe6 = inttoptr i32 %v2_20fe6 to i32*
  store i32 %v3_20fe3, i32* %v3_20fe6, align 4
  %v0_20fea = load i32, i32* @ebp, align 4
  %v1_20fea = add i32 %v0_20fea, -36
  %v2_20fea = inttoptr i32 %v1_20fea to i32*
  %v3_20fea = load i32, i32* %v2_20fea, align 4
  %v1_20fed = load i32, i32* @esp, align 4
  %v2_20fed = add i32 %v1_20fed, 8
  %v3_20fed = inttoptr i32 %v2_20fed to i32*
  store i32 %v3_20fea, i32* %v3_20fed, align 4
  %v0_20ff1 = load i32, i32* %eax.global-to-local, align 4
  %v1_20ff1 = load i32, i32* @esp, align 4
  %v2_20ff1 = add i32 %v1_20ff1, 4
  %v3_20ff1 = inttoptr i32 %v2_20ff1 to i32*
  store i32 %v0_20ff1, i32* %v3_20ff1, align 4
  %v0_20ff5 = load i32, i32* @ebp, align 4
  %v1_20ff5 = add i32 %v0_20ff5, -28
  %v2_20ff5 = inttoptr i32 %v1_20ff5 to i32*
  %v3_20ff5 = load i32, i32* %v2_20ff5, align 4
  store i32 %v3_20ff5, i32* %eax.global-to-local, align 4
  %v1_20ff8 = load i32, i32* @esp, align 4
  %v2_20ff8 = inttoptr i32 %v1_20ff8 to i32*
  store i32 %v3_20ff5, i32* %v2_20ff8, align 4
  %v0_20ffb = call i32 @unknown_439b3()
  %v0_21000 = load i32, i32* @ebp, align 4
  %v1_21000 = add i32 %v0_21000, -20
  store i32 %v1_21000, i32* %eax.global-to-local, align 4
  %v1_21003 = load i32, i32* @esp, align 4
  %v2_21003 = inttoptr i32 %v1_21003 to i32*
  store i32 %v1_21000, i32* %v2_21003, align 4
  %v0_21006 = call i32 @unknown_376a3()
  store i32 %v0_21006, i32* %eax.global-to-local, align 4
  %v1_21011.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_2100b

dec_label_pc_2100b:                               ; preds = %dec_label_pc_20fd8, %dec_label_pc_20f7c
  %v1_21011 = phi i32 [ %v1_21011.pre, %dec_label_pc_20fd8 ], [ %v16_20fd3, %dec_label_pc_20f7c ]
  %v0_2100b = load i32, i32* @ebp, align 4
  %v1_2100b = add i32 %v0_2100b, -16
  store i32 %v1_2100b, i32* %eax.global-to-local, align 4
  %v1_2100e = add i32 %v0_2100b, -32
  %v2_2100e = inttoptr i32 %v1_2100e to i32*
  %v3_2100e = load i32, i32* %v2_2100e, align 4
  %v2_21011 = add i32 %v1_21011, 4
  %v3_21011 = inttoptr i32 %v2_21011 to i32*
  store i32 %v3_2100e, i32* %v3_21011, align 4
  %v0_21015 = load i32, i32* %eax.global-to-local, align 4
  %v1_21015 = load i32, i32* @esp, align 4
  %v2_21015 = inttoptr i32 %v1_21015 to i32*
  store i32 %v0_21015, i32* %v2_21015, align 4
  %v0_21018 = call i32 @unknown_3cee5()
  %v0_2101d = load i32, i32* @esp, align 4
  %v5_2101d = icmp ult i32 %v0_2101d, 4
  store i1 %v5_2101d, i1* %cf.global-to-local, align 1
  %v0_21020 = load i32, i32* @ebp, align 4
  %v1_21020 = add i32 %v0_21020, -16
  %v3_21023 = inttoptr i32 %v0_2101d to i32*
  store i32 %v1_21020, i32* %v3_21023, align 4
  %v0_21027 = load i32, i32* @ebp, align 4
  %v1_21027 = add i32 %v0_21027, -20
  store i32 %v1_21027, i32* %eax.global-to-local, align 4
  %v1_2102a = load i32, i32* @esp, align 4
  %v2_2102a = inttoptr i32 %v1_2102a to i32*
  store i32 %v1_21027, i32* %v2_2102a, align 4
  %v0_2102d = call i32 @unknown_3cf35()
  store i32 %v0_2102d, i32* %eax.global-to-local, align 4
  %v4_21032 = trunc i32 %v0_2102d to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_21032 = icmp eq i8 %v4_21032, 0
  %v1_21034 = icmp eq i1 %v5_21032, false
  %v0_20fd8 = load i32, i32* @ebp, align 4
  br i1 %v1_21034, label %dec_label_pc_20fd8, label %dec_label_pc_21036

dec_label_pc_21036:                               ; preds = %dec_label_pc_2100b
  %v1_21036 = add i32 %v0_20fd8, -12
  %v2_21036 = inttoptr i32 %v1_21036 to i32*
  %v3_21036 = load i32, i32* %v2_21036, align 4
  store i32 %v3_21036, i32* %eax.global-to-local, align 4
  %v1_21039 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21039 = xor i32 %v1_21039, %v3_21036
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_21039 = icmp eq i32 %v2_21039, 0
  store i32 %v2_21039, i32* @eax, align 4
  br i1 %v3_21039, label %bb, label %dec_label_pc_21042

bb:                                               ; preds = %dec_label_pc_21036
  %v1_21040 = call i32 @function_21047()
  store i32 %v1_21040, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_21042

dec_label_pc_21042:                               ; preds = %bb, %dec_label_pc_21036
  %v2_21040 = phi i32 [ %v1_21040, %bb ], [ %v2_21039, %dec_label_pc_21036 ]
  ret i32 %v2_21040

; uselistorder directives
  uselistorder i8 %v3_20f83, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 -65536, { 0, 2, 1 }
}

define i32 @function_21047() local_unnamed_addr {
dec_label_pc_21047:
  %v0_21048 = load i32, i32* @eax, align 4
  ret i32 %v0_21048
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvSsEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21049:
  ret i32 %arg2
}

define i32 @function_2105c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2105c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2105c = load i32, i32* @ebp, align 4
  %v1_2105c = add i32 %v0_2105c, 1
  store i32 %v1_2105c, i32* %ebp.global-to-local, align 4
  %v0_2105d = load i32, i32* @ecx, align 4
  %v1_2105d = add i32 %v0_2105d, 1166793797
  %v2_2105d = inttoptr i32 %v1_2105d to i8*
  %v3_2105d = load i8, i8* %v2_2105d, align 1
  %v5_2105d = trunc i32 %v0_2105d to i8
  %v6_2105d = load i1, i1* @cf, align 1
  %v7_2105d = zext i1 %v6_2105d to i8
  %v8_2105d = add i8 %v3_2105d, %v5_2105d
  %v9_2105d = add i8 %v7_2105d, %v8_2105d
  %v27_2105d = icmp ule i8 %v9_2105d, %v3_2105d
  %v28_2105d = icmp ult i8 %v8_2105d, %v3_2105d
  %v29_2105d = select i1 %v6_2105d, i1 %v27_2105d, i1 %v28_2105d
  store i1 %v29_2105d, i1* %cf.global-to-local, align 1
  store i8 %v9_2105d, i8* %v2_2105d, align 1
  %v0_21063 = load i32, i32* @eax, align 4
  %v1_21063 = trunc i32 %v0_21063 to i8
  %v2_21063 = load i1, i1* %cf.global-to-local, align 1
  %v3_21063 = zext i1 %v2_21063 to i8
  %v4_21063 = add i8 %v1_21063, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_21063 = add i8 %v4_21063, %v3_21063
  %v20_21063 = add i8 %v1_21063, -119
  %v21_21063 = add i8 %v20_21063, %v3_21063
  %v22_21063 = icmp ule i8 %v21_21063, %v1_21063
  %v23_21063 = icmp ugt i8 %v1_21063, 118
  %v24_21063 = select i1 %v2_21063, i1 %v22_21063, i1 %v23_21063
  store i1 %v24_21063, i1* %cf.global-to-local, align 1
  %v25_21063 = zext i8 %v5_21063 to i32
  %v27_21063 = and i32 %v0_21063, -256
  %v28_21063 = or i32 %v25_21063, %v27_21063
  store i32 %v28_21063, i32* %eax.global-to-local, align 4
  %v0_21065 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21065 = add i32 %v0_21065, 1
  store i32 %v1_21065, i32* @ebp, align 4
  %v1_2106a = add i32 %v28_21063, -1587161275
  %v2_2106a = inttoptr i32 %v1_2106a to i8*
  %v3_2106a = load i8, i8* %v2_2106a, align 1
  %v4_2106a = load i32, i32* @ecx, align 4
  %v5_2106a = trunc i32 %v4_2106a to i8
  %v7_2106a = zext i1 %v24_21063 to i8
  %v8_2106a = sub i8 %v3_2106a, %v5_2106a
  %v9_2106a = add i8 %v8_2106a, %v7_2106a
  %v19_2106a = sub i8 %v8_2106a, %v7_2106a
  %v20_2106a = icmp ult i8 %v3_2106a, %v19_2106a
  %v21_2106a = icmp ne i8 %v5_2106a, -1
  %v22_2106a = or i1 %v21_2106a, %v20_2106a
  %v23_2106a = icmp ult i8 %v3_2106a, %v5_2106a
  %v24_2106a = select i1 %v24_21063, i1 %v22_2106a, i1 %v23_2106a
  store i1 %v24_2106a, i1* %cf.global-to-local, align 1
  store i8 %v9_2106a, i8* %v2_2106a, align 1
  %v0_21070 = load i32, i32* %eax.global-to-local, align 4
  %v1_21070 = trunc i32 %v0_21070 to i8
  %v2_21070 = load i1, i1* %cf.global-to-local, align 1
  %v3_21070 = zext i1 %v2_21070 to i8
  %v4_21070 = add i8 %v3_21070, %v1_21070
  %v19_21070 = icmp ule i8 %v4_21070, %v1_21070
  %v21_21070 = icmp eq i1 %v2_21070, %v19_21070
  store i1 %v21_21070, i1* %cf.global-to-local, align 1
  %v22_21070 = zext i8 %v4_21070 to i32
  %v24_21070 = and i32 %v0_21070, -256
  %v25_21070 = or i32 %v22_21070, %v24_21070
  store i32 %v25_21070, i32* %eax.global-to-local, align 4
  %v1_21072 = inttoptr i32 %v25_21070 to i8*
  %v2_21072 = load i8, i8* %v1_21072, align 1
  %v5_21072 = add i8 %v2_21072, %v4_21070
  store i8 %v5_21072, i8* %v1_21072, align 1
  %v0_21074 = load i32, i32* %eax.global-to-local, align 4
  %v1_21074 = load i32, i32* @ebp, align 4
  %v2_21074 = add i32 %v1_21074, -12
  %v3_21074 = inttoptr i32 %v2_21074 to i32*
  store i32 %v0_21074, i32* %v3_21074, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_21079 = load i32, i32* @ebp, align 4
  %v1_21079 = add i32 %v0_21079, -36
  %v2_21079 = inttoptr i32 %v1_21079 to i32*
  %v3_21079 = load i32, i32* %v2_21079, align 4
  store i32 %v3_21079, i32* %eax.global-to-local, align 4
  %v1_2107f = call i32 @unknown_43ae9(i32 %v3_21079)
  store i32 %v1_2107f, i32* %eax.global-to-local, align 4
  %v0_21090 = load i32, i32* @ebp, align 4
  %v1_21090 = add i32 %v0_21090, -32
  %v2_21090 = inttoptr i32 %v1_21090 to i32*
  %v3_21090 = load i32, i32* %v2_21090, align 4
  store i32 %v3_21090, i32* %eax.global-to-local, align 4
  %v3_21096 = call i32 @unknown_43b17(i32 %v3_21090, i32 %v1_2107f, i32 1)
  store i32 %v3_21096, i32* %eax.global-to-local, align 4
  %v0_2109b = load i32, i32* @ebp, align 4
  %v1_2109b = add i32 %v0_2109b, -12
  %v2_2109b = inttoptr i32 %v1_2109b to i32*
  %v3_2109b = load i32, i32* %v2_2109b, align 4
  store i32 %v3_2109b, i32* %eax.global-to-local, align 4
  %v1_2109e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2109e = xor i32 %v1_2109e, %v3_2109b
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2109e = icmp eq i32 %v2_2109e, 0
  store i32 %v2_2109e, i32* @eax, align 4
  br i1 %v3_2109e, label %bb, label %dec_label_pc_210a7

bb:                                               ; preds = %dec_label_pc_2105c
  %v1_210a5 = call i32 @function_210ac()
  store i32 %v1_210a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_210a7

dec_label_pc_210a7:                               ; preds = %bb, %dec_label_pc_2105c
  %v3_210a5 = phi i32 [ %v1_210a5, %bb ], [ %v2_2109e, %dec_label_pc_2105c ]
  ret i32 %v3_210a5

; uselistorder directives
  uselistorder i8 %v4_21070, { 0, 2, 1 }
  uselistorder i8 %v1_21070, { 1, 0 }
  uselistorder i8 %v8_2106a, { 1, 0 }
  uselistorder i8 %v7_2106a, { 1, 0 }
  uselistorder i8 %v5_2106a, { 1, 0, 2 }
  uselistorder i1 %v24_21063, { 1, 0, 2 }
  uselistorder i8 %v9_2105d, { 1, 0 }
  uselistorder i8 %v8_2105d, { 1, 0 }
}

define i32 @function_210ac() local_unnamed_addr {
dec_label_pc_210ac:
  %v0_210ad = load i32, i32* @eax, align 4
  ret i32 %v0_210ad
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_210ae:
  %v1_210e4 = call i32 @unknown_43bbd(i32 %arg3)
  %v3_210fb = call i32 @unknown_43bea(i32 %arg2, i32 %v1_210e4, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2110c

bb:                                               ; preds = %dec_label_pc_210ae
  %v1_2110a = call i32 @function_21111()
  br label %dec_label_pc_2110c

dec_label_pc_2110c:                               ; preds = %bb, %dec_label_pc_210ae
  %v2_2110a = phi i32 [ %v1_2110a, %bb ], [ 0, %dec_label_pc_210ae ]
  ret i32 %v2_2110a
}

define i32 @function_21111() local_unnamed_addr {
dec_label_pc_21111:
  %v0_21112 = load i32, i32* @eax, align 4
  ret i32 %v0_21112
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21113:
  %v0_21138 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_21138
}

define i32 @function_2113e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2113e:
  %v0_2113e = load i32, i32* @eax, align 4
  %v1_2113e = load i32, i32* @ebp, align 4
  %v2_2113e = add i32 %v1_2113e, -12
  %v3_2113e = inttoptr i32 %v2_2113e to i32*
  store i32 %v0_2113e, i32* %v3_2113e, align 4
  ret i32 0
}

define i32 @function_21144(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21144:
  %eax.global-to-local = alloca i32, align 4
  %v0_21144 = load i32, i32* @ebp, align 4
  %v1_21144 = add i32 %v0_21144, 1
  store i32 %v1_21144, i32* @ebp, align 4
  %v0_2114b = load i32, i32* @eax, align 4
  %v3_2114b = load i32, i32* @edx, align 8
  %v4_2114b = sub i32 %v0_2114b, %v3_2114b
  %v0_2114d = load i32, i32* @ebx, align 4
  %v5_2114d2 = mul i32 %v4_2114b, 256
  %v1_2114d3 = add i32 %v5_2114d2, %v0_2114d
  %v22_2114d = and i32 %v1_2114d3, 65280
  %v23_2114d = and i32 %v0_2114d, -65281
  %v24_2114d = or i32 %v22_2114d, %v23_2114d
  store i32 %v24_2114d, i32* @ebx, align 4
  %v11_21150 = and i32 %v4_2114b, -248
  store i32 %v11_21150, i32* %eax.global-to-local, align 4
  %v1_21152 = inttoptr i32 %v11_21150 to i32*
  %v2_21152 = load i32, i32* %v1_21152, align 8
  %v4_21152 = add i32 %v2_21152, %v11_21150
  store i32 %v4_21152, i32* %v1_21152, align 8
  %v0_21154 = load i32, i32* %eax.global-to-local, align 4
  %v1_21154 = inttoptr i32 %v0_21154 to i8*
  %v2_21154 = load i8, i8* %v1_21154, align 1
  %v4_21154 = trunc i32 %v0_21154 to i8
  %v5_21154 = add i8 %v2_21154, %v4_21154
  store i8 %v5_21154, i8* %v1_21154, align 1
  %v0_21156 = load i32, i32* %eax.global-to-local, align 4
  %v0_2115a = load i32, i32* @ebp, align 4
  %v1_2115a = add i32 %v0_2115a, -32
  %v2_2115a = inttoptr i32 %v1_2115a to i32*
  %v3_2115a = load i32, i32* %v2_2115a, align 4
  store i32 %v3_2115a, i32* %eax.global-to-local, align 4
  %v2_21160 = call i32 @unknown_43cbd(i32 %v3_2115a, i32 %v0_21156)
  store i32 %v2_21160, i32* %eax.global-to-local, align 4
  %v0_21165 = load i32, i32* @ebp, align 4
  %v1_21165 = add i32 %v0_21165, -12
  %v2_21165 = inttoptr i32 %v1_21165 to i32*
  %v3_21165 = load i32, i32* %v2_21165, align 4
  store i32 %v3_21165, i32* %eax.global-to-local, align 4
  %v1_21168 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21168 = xor i32 %v1_21168, %v3_21165
  %v3_21168 = icmp eq i32 %v2_21168, 0
  store i32 %v2_21168, i32* @eax, align 4
  br i1 %v3_21168, label %bb, label %dec_label_pc_21171

bb:                                               ; preds = %dec_label_pc_21144
  %v1_2116f = call i32 @function_21176()
  store i32 %v1_2116f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_21171

dec_label_pc_21171:                               ; preds = %bb, %dec_label_pc_21144
  %v2_2116f = phi i32 [ %v1_2116f, %bb ], [ %v2_21168, %dec_label_pc_21144 ]
  ret i32 %v2_2116f

; uselistorder directives
  uselistorder i32 %v11_21150, { 0, 2, 1 }
  uselistorder i32 %v0_2114d, { 1, 0 }
  uselistorder i32 %v4_2114b, { 1, 0 }
}

define i32 @function_21176() local_unnamed_addr {
dec_label_pc_21176:
  %v0_21177 = load i32, i32* @eax, align 4
  ret i32 %v0_21177
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvbEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21178:
  %v1_211ae = call i32 @unknown_43d63(i32 %arg3)
  %v3_211c5 = call i32 @unknown_43d90(i32 %arg2, i32 %v1_211ae, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_211d6

bb:                                               ; preds = %dec_label_pc_21178
  %v1_211d4 = call i32 @function_211db()
  br label %dec_label_pc_211d6

dec_label_pc_211d6:                               ; preds = %bb, %dec_label_pc_21178
  %v2_211d4 = phi i32 [ %v1_211d4, %bb ], [ 0, %dec_label_pc_21178 ]
  ret i32 %v2_211d4
}

define i32 @function_211db() local_unnamed_addr {
dec_label_pc_211db:
  %v0_211dc = load i32, i32* @eax, align 4
  ret i32 %v0_211dc
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvxEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_211dd:
  %v1_21213 = call i32 @unknown_43e2b(i32 %arg3)
  ret i32 %v1_21213
}

define i32 @function_2121c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2121c:
  %v2_2121c = load i32, i32* @eax, align 4
  %v4_2121c = mul i32 %v2_2121c, 2
  %v21_2121c = inttoptr i32 %v2_2121c to i32*
  store i32 %v4_2121c, i32* %v21_2121c, align 4
  %v2_2121e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2121e = load i32, i32* @eax, align 4
  %v4_2121e = trunc i32 %v3_2121e to i8
  %v5_2121e = add i8 %v4_2121e, %v2_2121e
  %v21_2121e = inttoptr i32 %v3_2121e to i8*
  store i8 %v5_2121e, i8* %v21_2121e, align 1
  %v0_21220 = load i32, i32* @eax, align 4
  %v0_21224 = load i32, i32* @ebp, align 4
  %v1_21224 = add i32 %v0_21224, -32
  %v2_21224 = inttoptr i32 %v1_21224 to i32*
  %v3_21224 = load i32, i32* %v2_21224, align 4
  %v2_2122a = call i32 @unknown_43e59(i32 %v3_21224, i32 %v0_21220)
  %v0_2122f = load i32, i32* @ebp, align 4
  %v1_2122f = add i32 %v0_2122f, -12
  %v2_2122f = inttoptr i32 %v1_2122f to i32*
  %v3_2122f = load i32, i32* %v2_2122f, align 4
  %v1_21232 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21232 = xor i32 %v1_21232, %v3_2122f
  %v3_21232 = icmp eq i32 %v2_21232, 0
  store i32 %v2_21232, i32* @eax, align 4
  br i1 %v3_21232, label %bb, label %dec_label_pc_2123b

bb:                                               ; preds = %dec_label_pc_2121c
  %v1_21239 = call i32 @function_21240()
  br label %dec_label_pc_2123b

dec_label_pc_2123b:                               ; preds = %bb, %dec_label_pc_2121c
  %v2_21239 = phi i32 [ %v1_21239, %bb ], [ %v2_21232, %dec_label_pc_2121c ]
  ret i32 %v2_21239

; uselistorder directives
  uselistorder i32 %v2_2121c, { 1, 0 }
}

define i32 @function_21240() local_unnamed_addr {
dec_label_pc_21240:
  %v0_21241 = load i32, i32* @eax, align 4
  ret i32 %v0_21241
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvdEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21242:
  %v0_21267 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_21278 = call i32 @unknown_43ef4(i32 %arg3)
  %v3_2128f = call i32 @unknown_43f22(i32 %arg2, i32 %v1_21278, i32 1)
  ret i32 %v0_21267
}

define i32 @function_2129a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2129a:
  %zf.global-to-local = alloca i1, align 1
  %v0_2129a = load i32, i32* @eax, align 4
  %v1_2129a = trunc i32 %v0_2129a to i8
  %v2_2129a = load i1, i1* @cf, align 1
  %v3_2129a = zext i1 %v2_2129a to i8
  %v4_2129a = add i8 %v3_2129a, %v1_2129a
  %v13_2129a = icmp eq i8 %v4_2129a, 0
  store i1 %v13_2129a, i1* %zf.global-to-local, align 1
  %v22_2129a = zext i8 %v4_2129a to i32
  %v24_2129a = and i32 %v0_2129a, -256
  %v25_2129a = or i32 %v22_2129a, %v24_2129a
  store i32 %v25_2129a, i32* @eax, align 4
  %v1_2129c = inttoptr i32 %v25_2129a to i8*
  %v2_2129c = load i8, i8* %v1_2129c, align 1
  %v5_2129c = add i8 %v2_2129c, %v4_2129a
  %v15_2129c = icmp eq i8 %v5_2129c, 0
  store i1 %v15_2129c, i1* %zf.global-to-local, align 1
  store i8 %v5_2129c, i8* %v1_2129c, align 1
  %v0_2129e = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2129e, label %bb, label %dec_label_pc_2129a.dec_label_pc_212a0_crit_edge

dec_label_pc_2129a.dec_label_pc_212a0_crit_edge:  ; preds = %dec_label_pc_2129a
  %v2_2129e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_212a0

bb:                                               ; preds = %dec_label_pc_2129a
  %v1_2129e = call i32 @function_212a5()
  br label %dec_label_pc_212a0

dec_label_pc_212a0:                               ; preds = %dec_label_pc_2129a.dec_label_pc_212a0_crit_edge, %bb
  %v2_2129e = phi i32 [ %v2_2129e.pre, %dec_label_pc_2129a.dec_label_pc_212a0_crit_edge ], [ %v1_2129e, %bb ]
  ret i32 %v2_2129e

; uselistorder directives
  uselistorder label %dec_label_pc_212a0, { 1, 0 }
}

define i32 @function_212a5() local_unnamed_addr {
dec_label_pc_212a5:
  %v0_212a6 = load i32, i32* @eax, align 4
  ret i32 %v0_212a6
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E25convert_construct_variantISJ_EEvRT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_212a8:
  ret i32 0
}

define i32 @function_212d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_212d0:
  %v0_212d0 = load i32, i32* @ebx, align 4
  %v1_212d0 = add i32 %v0_212d0, 1149886533
  %v2_212d0 = inttoptr i32 %v1_212d0 to i8*
  %v3_212d0 = load i8, i8* %v2_212d0, align 1
  %v4_212d0 = load i32, i32* @ecx, align 4
  %v5_212d0 = trunc i32 %v4_212d0 to i8
  %v6_212d0 = add i8 %v5_212d0, %v3_212d0
  store i8 %v6_212d0, i8* %v2_212d0, align 1
  %v0_212d8 = load i32, i32* @ebp, align 4
  %v1_212d8 = add i32 %v0_212d8, -28
  %v2_212d8 = inttoptr i32 %v1_212d8 to i32*
  %v3_212d8 = load i32, i32* %v2_212d8, align 4
  %v1_212de = call i32 @unknown_43ff4(i32 %v3_212d8)
  %v0_212e3 = load i32, i32* @ebp, align 4
  %v1_212e3 = add i32 %v0_212e3, -12
  %v2_212e3 = inttoptr i32 %v1_212e3 to i32*
  %v3_212e3 = load i32, i32* %v2_212e3, align 4
  %v1_212e6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_212e6 = xor i32 %v1_212e6, %v3_212e3
  %v3_212e6 = icmp eq i32 %v2_212e6, 0
  store i32 %v2_212e6, i32* @eax, align 4
  br i1 %v3_212e6, label %bb, label %dec_label_pc_212ef

bb:                                               ; preds = %dec_label_pc_212d0
  %v1_212ed = call i32 @function_212f4()
  br label %dec_label_pc_212ef

dec_label_pc_212ef:                               ; preds = %bb, %dec_label_pc_212d0
  %v2_212ed = phi i32 [ %v1_212ed, %bb ], [ %v2_212e6, %dec_label_pc_212d0 ]
  ret i32 %v2_212ed

; uselistorder directives
  uselistorder i32 1149886533, { 1, 0 }
}

define i32 @function_212f4() local_unnamed_addr {
dec_label_pc_212f4:
  %v0_212f5 = load i32, i32* @eax, align 4
  ret i32 %v0_212f5
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14assign_storageEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_212f6:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_21317 = add i32 %tmp105, 4
  %v1_2131d = call i32 @unknown_39acc(i32 %v1_21317)
  %v1_2132a = call i32 @unknown_3b7d8(i32 %tmp105)
  %v2_21334 = load i32, i32* %arg1, align 4
  %v4_21348 = call i32 @unknown_440e6(i32 %v2_21334, i32 %v1_2132a, i32 %arg2, i32 %v1_2131d)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21359

bb:                                               ; preds = %dec_label_pc_212f6
  %v1_21357 = call i32 @function_2135e()
  br label %dec_label_pc_21359

dec_label_pc_21359:                               ; preds = %bb, %dec_label_pc_212f6
  %v2_21357 = phi i32 [ %v1_21357, %bb ], [ 0, %dec_label_pc_212f6 ]
  ret i32 %v2_21357

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2135e() local_unnamed_addr {
dec_label_pc_2135e:
  %v0_21363 = load i32, i32* @eax, align 4
  ret i32 %v0_21363
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assignerC1ERSJ_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21364:
  ret i32 %arg3
}

define i32 @function_21380(i32 %arg1) local_unnamed_addr {
dec_label_pc_21380:
  %v2_21380 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_21380 = load i32, i32* @eax, align 4
  %v4_21380 = trunc i32 %v3_21380 to i8
  %v5_21380 = add i8 %v4_21380, %v2_21380
  %v21_21380 = inttoptr i32 %v3_21380 to i8*
  store i8 %v5_21380, i8* %v21_21380, align 1
  %v0_21382 = load i32, i32* @eax, align 4
  %v1_21382 = load i32, i32* @ebp, align 4
  %v2_21382 = add i32 %v1_21382, -12
  %v3_21382 = inttoptr i32 %v2_21382 to i32*
  store i32 %v0_21382, i32* %v3_21382, align 4
  %v0_21387 = load i32, i32* @ebp, align 4
  %v1_21387 = add i32 %v0_21387, -28
  %v2_21387 = inttoptr i32 %v1_21387 to i32*
  %v3_21387 = load i32, i32* %v2_21387, align 4
  %v1_2138d = call i32 @unknown_321f0(i32 %v3_21387)
  %v0_21392 = load i32, i32* @ebp, align 4
  %v1_21392 = add i32 %v0_21392, -28
  %v2_21392 = inttoptr i32 %v1_21392 to i32*
  %v3_21392 = load i32, i32* %v2_21392, align 4
  %v1_21395 = add i32 %v0_21392, -32
  %v2_21395 = inttoptr i32 %v1_21395 to i32*
  %v3_21395 = load i32, i32* %v2_21395, align 4
  %v2_21398 = inttoptr i32 %v3_21392 to i32*
  store i32 %v3_21395, i32* %v2_21398, align 4
  %v0_2139a = load i32, i32* @ebp, align 4
  %v1_2139a = add i32 %v0_2139a, -28
  %v2_2139a = inttoptr i32 %v1_2139a to i32*
  %v3_2139a = load i32, i32* %v2_2139a, align 4
  %v1_2139d = add i32 %v0_2139a, -36
  %v2_2139d = inttoptr i32 %v1_2139d to i32*
  %v3_2139d = load i32, i32* %v2_2139d, align 4
  %v2_213a0 = add i32 %v3_2139a, 4
  %v3_213a0 = inttoptr i32 %v2_213a0 to i32*
  store i32 %v3_2139d, i32* %v3_213a0, align 4
  %v0_213a3 = load i32, i32* @ebp, align 4
  %v1_213a3 = add i32 %v0_213a3, -12
  %v2_213a3 = inttoptr i32 %v1_213a3 to i32*
  %v3_213a3 = load i32, i32* %v2_213a3, align 4
  %v1_213a6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_213a6 = xor i32 %v1_213a6, %v3_213a3
  store i1 false, i1* @cf, align 1
  %v3_213a6 = icmp eq i32 %v2_213a6, 0
  store i32 %v2_213a6, i32* @eax, align 4
  br i1 %v3_213a6, label %bb, label %dec_label_pc_213af

bb:                                               ; preds = %dec_label_pc_21380
  %v1_213ad = call i32 @function_213b4()
  br label %dec_label_pc_213af

dec_label_pc_213af:                               ; preds = %bb, %dec_label_pc_21380
  %v2_213ad = phi i32 [ %v1_213ad, %bb ], [ %v2_213a6, %dec_label_pc_21380 ]
  ret i32 %v2_213ad
}

define i32 @function_213b4() local_unnamed_addr {
dec_label_pc_213b4:
  %v0_213b5 = load i32, i32* @eax, align 4
  ret i32 %v0_213b5
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSJ_8assignerEEENT_11result_typeERSM_(i32* %arg1) local_unnamed_addr {
dec_label_pc_213b6:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = ptrtoint i32* %arg1 to i32
  %v1_213d7 = add i32 %tmp9, 4
  %v1_213dd = call i32 @unknown_3c9d4(i32 %v1_213d7)
  %v1_213ea = call i32 @unknown_3b898(i32 %tmp9)
  %v2_213f4 = load i32, i32* %arg1, align 4
  %v4_21408 = call i32 @unknown_4421a(i32 %v2_213f4, i32 %v1_213ea, i32 %tmp6, i32 %v1_213dd)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21419

bb:                                               ; preds = %dec_label_pc_213b6
  %v1_21417 = call i32 @function_2141e()
  br label %dec_label_pc_21419

dec_label_pc_21419:                               ; preds = %bb, %dec_label_pc_213b6
  %v2_21417 = phi i32 [ %v1_21417, %bb ], [ 0, %dec_label_pc_213b6 ]
  ret i32 %v2_21417

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
}

define i32 @function_2141e() local_unnamed_addr {
dec_label_pc_2141e:
  %v0_21423 = load i32, i32* @eax, align 4
  ret i32 %v0_21423
}

define i32 @_ZSt10_ConstructIN11json_spirit10Value_implINS0_13Config_vectorISsEEEES4_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21424:
  store i32 0, i32* @eax, align 4
  %v2_21452 = call i32 @function_2566a(i32 20, i32 %arg1)
  %v1_21459 = icmp eq i32 %v2_21452, 0
  br i1 %v1_21459, label %bb, label %dec_label_pc_2145d

bb:                                               ; preds = %dec_label_pc_21424
  %v1_2145b = call i32 @function_21486()
  br label %dec_label_pc_2145d

dec_label_pc_2145d:                               ; preds = %bb, %dec_label_pc_21424
  %v2_21467 = call i32 @unknown_34532(i32 %v2_21452, i32 %arg2)
  %v0_2146c = call i32 @function_21486()
  ret i32 %v0_2146c

; uselistorder directives
  uselistorder i32 ()* @function_21486, { 1, 0 }
}

define i32 @function_21486() local_unnamed_addr {
dec_label_pc_21486:
  %v0_21486 = load i32, i32* @ebp, align 4
  %v1_21486 = add i32 %v0_21486, -28
  %v2_21486 = inttoptr i32 %v1_21486 to i32*
  %v3_21486 = load i32, i32* %v2_21486, align 4
  %v1_21489 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21489 = xor i32 %v1_21489, %v3_21486
  %v3_21489 = icmp eq i32 %v2_21489, 0
  store i32 %v2_21489, i32* @eax, align 4
  br i1 %v3_21489, label %bb, label %dec_label_pc_21492

bb:                                               ; preds = %dec_label_pc_21486
  %v1_21490 = call i32 @function_21497()
  br label %dec_label_pc_21492

dec_label_pc_21492:                               ; preds = %bb, %dec_label_pc_21486
  %v2_21490 = phi i32 [ %v1_21490, %bb ], [ %v2_21489, %dec_label_pc_21486 ]
  ret i32 %v2_21490
}

define i32 @function_21497() local_unnamed_addr {
dec_label_pc_21497:
  %v0_2149e = load i32, i32* @eax, align 4
  ret i32 %v0_2149e
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1EjRKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_214a0:
  %v0_214b9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_214b9
}

define i32 @function_214bf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_214bf:
  %v0_214bf = load i32, i32* @eax, align 4
  %v1_214bf = load i32, i32* @ebp, align 4
  %v2_214bf = add i32 %v1_214bf, -12
  %v3_214bf = inttoptr i32 %v2_214bf to i32*
  store i32 %v0_214bf, i32* %v3_214bf, align 4
  %v0_214c4 = load i32, i32* @ebp, align 4
  %v1_214c4 = add i32 %v0_214c4, -28
  %v2_214c4 = inttoptr i32 %v1_214c4 to i32*
  %v3_214c4 = load i32, i32* %v2_214c4, align 4
  %v1_214c7 = add i32 %v0_214c4, -36
  %v2_214c7 = inttoptr i32 %v1_214c7 to i32*
  %v3_214c7 = load i32, i32* %v2_214c7, align 4
  %v2_214d1 = call i32 @unknown_44378(i32 %v3_214c4, i32 %v3_214c7)
  %v0_214d6 = load i32, i32* @ebp, align 4
  %v1_214d6 = add i32 %v0_214d6, -32
  %v2_214d6 = inttoptr i32 %v1_214d6 to i32*
  %v3_214d6 = load i32, i32* %v2_214d6, align 4
  %v1_214dd = add i32 %v0_214d6, -28
  %v2_214dd = inttoptr i32 %v1_214dd to i32*
  %v3_214dd = load i32, i32* %v2_214dd, align 4
  %v2_214e3 = call i32 @unknown_3b58a(i32 %v3_214dd, i32 %v3_214d6)
  %v0_214ea = load i32, i32* @ebp, align 4
  %v1_214ea = add i32 %v0_214ea, -28
  %v2_214ea = inttoptr i32 %v1_214ea to i32*
  %v3_214ea = load i32, i32* %v2_214ea, align 4
  %v2_214ed = inttoptr i32 %v3_214ea to i32*
  store i32 %v2_214e3, i32* %v2_214ed, align 4
  %v0_214ef = load i32, i32* @ebp, align 4
  %v1_214ef = add i32 %v0_214ef, -28
  %v2_214ef = inttoptr i32 %v1_214ef to i32*
  %v3_214ef = load i32, i32* %v2_214ef, align 4
  %v1_214f2 = inttoptr i32 %v3_214ef to i32*
  %v2_214f2 = load i32, i32* %v1_214f2, align 4
  %v2_214f7 = add i32 %v3_214ef, 4
  %v3_214f7 = inttoptr i32 %v2_214f7 to i32*
  store i32 %v2_214f2, i32* %v3_214f7, align 4
  %v0_214fa = load i32, i32* @ebp, align 4
  %v1_214fa = add i32 %v0_214fa, -28
  %v2_214fa = inttoptr i32 %v1_214fa to i32*
  %v3_214fa = load i32, i32* %v2_214fa, align 4
  %v1_214fd = inttoptr i32 %v3_214fa to i32*
  %v2_214fd = load i32, i32* %v1_214fd, align 4
  %v1_214ff = add i32 %v0_214fa, -32
  %v2_214ff = inttoptr i32 %v1_214ff to i32*
  %v3_214ff = load i32, i32* %v2_214ff, align 4
  %v2_21509 = mul i32 %v3_214ff, 20
  %v3_2150c = add i32 %v2_21509, %v2_214fd
  %v3_2150f = load i32, i32* %v2_214fa, align 4
  %v2_21512 = add i32 %v3_2150f, 8
  %v3_21512 = inttoptr i32 %v2_21512 to i32*
  store i32 %v3_2150c, i32* %v3_21512, align 4
  %v0_21515 = load i32, i32* @ebp, align 4
  %v1_21515 = add i32 %v0_21515, -12
  %v2_21515 = inttoptr i32 %v1_21515 to i32*
  %v3_21515 = load i32, i32* %v2_21515, align 4
  ret i32 %v3_21515
}

define i32 @function_2151b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2151b:
  %zf.global-to-local = alloca i1, align 1
  %v0_2151b = load i32, i32* @eax, align 4
  %v1_2151b = trunc i32 %v0_2151b to i8
  %v2_2151b = load i1, i1* @cf, align 1
  %v3_2151b = zext i1 %v2_2151b to i8
  %v4_2151b = add i8 %v3_2151b, %v1_2151b
  %v13_2151b = icmp eq i8 %v4_2151b, 0
  store i1 %v13_2151b, i1* %zf.global-to-local, align 1
  %v22_2151b = zext i8 %v4_2151b to i32
  %v24_2151b = and i32 %v0_2151b, -256
  %v25_2151b = or i32 %v22_2151b, %v24_2151b
  store i32 %v25_2151b, i32* @eax, align 4
  %v1_2151d = inttoptr i32 %v25_2151b to i8*
  %v2_2151d = load i8, i8* %v1_2151d, align 1
  %v5_2151d = add i8 %v2_2151d, %v4_2151b
  %v15_2151d = icmp eq i8 %v5_2151d, 0
  store i1 %v15_2151d, i1* %zf.global-to-local, align 1
  store i8 %v5_2151d, i8* %v1_2151d, align 1
  %v0_2151f = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2151f, label %bb, label %dec_label_pc_21521

bb:                                               ; preds = %dec_label_pc_2151b
  %v1_2151f = call i32 @function_2153f()
  store i32 %v1_2151f, i32* @eax, align 4
  br label %dec_label_pc_21521

dec_label_pc_21521:                               ; preds = %bb, %dec_label_pc_2151b
  %v0_21521 = call i32 @function_2153a()
  ret i32 %v0_21521
}

define i32 @function_21524() local_unnamed_addr {
dec_label_pc_21524:
  %eax.global-to-local = alloca i32, align 4
  %v0_21524 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21524
}

define i32 @function_2153a() local_unnamed_addr {
dec_label_pc_2153a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2153f() local_unnamed_addr {
dec_label_pc_2153f:
  %v0_21544 = load i32, i32* @eax, align 4
  ret i32 %v0_21544
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_21546:
  %stack_var_-20 = alloca i32, align 4
  %v2_21566 = load i32, i32* %arg2, align 4
  store i32 %v2_21566, i32* %stack_var_-20, align 4
  %v2_2156b = ptrtoint i32* %stack_var_-20 to i32
  %v2_21578 = call i32 @unknown_4447e(i32 %arg1, i32 %v2_2156b)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2158c

bb:                                               ; preds = %dec_label_pc_21546
  %v1_2158a = call i32 @function_21591()
  br label %dec_label_pc_2158c

dec_label_pc_2158c:                               ; preds = %bb, %dec_label_pc_21546
  %v2_2158a = phi i32 [ %v1_2158a, %bb ], [ %arg1, %dec_label_pc_21546 ]
  ret i32 %v2_2158a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_21591() local_unnamed_addr {
dec_label_pc_21591:
  %v0_21592 = load i32, i32* @eax, align 4
  ret i32 %v0_21592
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21596:
  ret i32 %arg2
}

define i32 @function_215a7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_215a7:
  %v0_215a9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_215ae = load i32, i32* @ebp, align 4
  %v2_215ae = add i32 %v1_215ae, -12
  %v3_215ae = inttoptr i32 %v2_215ae to i32*
  store i32 %v0_215a9, i32* %v3_215ae, align 4
  %v0_215b3 = load i32, i32* @ebp, align 4
  %v1_215b3 = add i32 %v0_215b3, -32
  %v2_215b3 = inttoptr i32 %v1_215b3 to i32*
  %v3_215b3 = load i32, i32* %v2_215b3, align 4
  %v1_215b6 = add i32 %v3_215b3, 4
  %v2_215b6 = inttoptr i32 %v1_215b6 to i32*
  %v3_215b6 = load i32, i32* %v2_215b6, align 4
  %v2_215b9 = add i32 %v0_215b3, -16
  %v3_215b9 = inttoptr i32 %v2_215b9 to i32*
  store i32 %v3_215b6, i32* %v3_215b9, align 4
  %v0_215bc = load i32, i32* @ebp, align 4
  %v1_215bc = add i32 %v0_215bc, -16
  %v1_215c3 = add i32 %v0_215bc, -28
  %v2_215c3 = inttoptr i32 %v1_215c3 to i32*
  %v3_215c3 = load i32, i32* %v2_215c3, align 4
  %v2_215c9 = call i32 @unknown_444ce(i32 %v3_215c3, i32 %v1_215bc)
  %v0_215ce = load i32, i32* @ebp, align 4
  %v1_215ce = add i32 %v0_215ce, -28
  %v2_215ce = inttoptr i32 %v1_215ce to i32*
  %v3_215ce = load i32, i32* %v2_215ce, align 4
  store i32 %v3_215ce, i32* @eax, align 4
  %v1_215d1 = add i32 %v0_215ce, -12
  %v2_215d1 = inttoptr i32 %v1_215d1 to i32*
  %v3_215d1 = load i32, i32* %v2_215d1, align 4
  %v1_215d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_215d4 = icmp eq i32 %v1_215d4, %v3_215d1
  store i1 %v3_215d4, i1* @zf, align 1
  br i1 %v3_215d4, label %bb, label %dec_label_pc_215dd

bb:                                               ; preds = %dec_label_pc_215a7
  %v1_215db = call i32 @function_215e2()
  br label %dec_label_pc_215dd

dec_label_pc_215dd:                               ; preds = %bb, %dec_label_pc_215a7
  %v3_215db = phi i32 [ %v1_215db, %bb ], [ %v3_215ce, %dec_label_pc_215a7 ]
  ret i32 %v3_215db

; uselistorder directives
  uselistorder i1 %v3_215d4, { 1, 0 }
}

define i32 @function_215e2() local_unnamed_addr {
dec_label_pc_215e2:
  %v0_215e3 = load i32, i32* @eax, align 4
  ret i32 %v0_215e3
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_S6_ET0_T_SF_SE_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_215e6:
  %v0_21604 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_21604
}

define i32 @function_21626(i32 %arg1) local_unnamed_addr {
dec_label_pc_21626:
  %v0_21626 = load i32, i32* @eax, align 4
  %v5_21626 = mul i32 %v0_21626, 2
  %v20_21626 = and i32 %v5_21626, 254
  %v22_21626 = and i32 %v0_21626, -256
  %v23_21626 = or i32 %v20_21626, %v22_21626
  store i32 %v23_21626, i32* @eax, align 4
  %v0_21628 = load i32, i32* @ebp, align 4
  %v1_21628 = add i32 %v0_21628, -12
  %v2_21628 = inttoptr i32 %v1_21628 to i32*
  %v3_21628 = load i32, i32* %v2_21628, align 4
  %v1_2162b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2162b = icmp eq i32 %v1_2162b, %v3_21628
  br i1 %v3_2162b, label %bb, label %dec_label_pc_21634

bb:                                               ; preds = %dec_label_pc_21626
  %v1_21632 = call i32 @function_21639()
  br label %dec_label_pc_21634

dec_label_pc_21634:                               ; preds = %bb, %dec_label_pc_21626
  %v2_21632 = phi i32 [ %v1_21632, %bb ], [ %v23_21626, %dec_label_pc_21626 ]
  ret i32 %v2_21632

; uselistorder directives
  uselistorder i32 %v0_21626, { 1, 0 }
}

define i32 @function_21639() local_unnamed_addr {
dec_label_pc_21639:
  %v0_2163a = load i32, i32* @eax, align 4
  ret i32 %v0_2163a
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvSsEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2163b:
  ret i32 %arg4
}

define i32 @function_21656(i32 %arg1) local_unnamed_addr {
dec_label_pc_21656:
  %eax.global-to-local = alloca i32, align 4
  %v0_21656 = load i32, i32* @eax, align 4
  %v1_21656 = load i32, i32* @ebp, align 4
  %v2_21656 = add i32 %v1_21656, -40
  %v3_21656 = inttoptr i32 %v2_21656 to i32*
  store i32 %v0_21656, i32* %v3_21656, align 4
  %v0_21659 = load i32, i32* @ebp, align 4
  %v1_21659 = add i32 %v0_21659, 24
  %v2_21659 = inttoptr i32 %v1_21659 to i8*
  %v3_21659 = load i8, i8* %v2_21659, align 1
  %v4_21659 = zext i8 %v3_21659 to i32
  store i32 %v4_21659, i32* %eax.global-to-local, align 4
  %v3_2165d = add i32 %v0_21659, -41
  %v4_2165d = inttoptr i32 %v3_2165d to i8*
  store i8 %v3_21659, i8* %v4_2165d, align 1
  %v5_2165d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2165d
}

define i32 @function_21664(i32 %arg1) local_unnamed_addr {
dec_label_pc_21664:
  %v2_21664 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_21664 = load i32, i32* @eax, align 4
  %v4_21664 = trunc i32 %v3_21664 to i8
  %v5_21664 = add i8 %v4_21664, %v2_21664
  %v21_21664 = inttoptr i32 %v3_21664 to i8*
  store i8 %v5_21664, i8* %v21_21664, align 1
  %v0_21666 = load i32, i32* @eax, align 4
  %v1_21666 = load i32, i32* @ebp, align 4
  %v2_21666 = add i32 %v1_21666, -12
  %v3_21666 = inttoptr i32 %v2_21666 to i32*
  store i32 %v0_21666, i32* %v3_21666, align 4
  %v0_2166b = load i32, i32* @ebp, align 4
  %v1_2166b = add i32 %v0_2166b, -36
  %v2_2166b = inttoptr i32 %v1_2166b to i32*
  %v3_2166b = load i32, i32* %v2_2166b, align 4
  %v1_21671 = call i32 @unknown_445fc(i32 %v3_2166b)
  %v0_21682 = load i32, i32* @ebp, align 4
  %v1_21682 = add i32 %v0_21682, -32
  %v2_21682 = inttoptr i32 %v1_21682 to i32*
  %v3_21682 = load i32, i32* %v2_21682, align 4
  %v3_21688 = call i32 @unknown_44629(i32 %v3_21682, i32 %v1_21671, i32 1)
  %v0_2168d = load i32, i32* @ebp, align 4
  %v1_2168d = add i32 %v0_2168d, -12
  %v2_2168d = inttoptr i32 %v1_2168d to i32*
  %v3_2168d = load i32, i32* %v2_2168d, align 4
  %v1_21690 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21690 = xor i32 %v1_21690, %v3_2168d
  %v3_21690 = icmp eq i32 %v2_21690, 0
  store i32 %v2_21690, i32* @eax, align 4
  br i1 %v3_21690, label %bb, label %dec_label_pc_21699

bb:                                               ; preds = %dec_label_pc_21664
  %v1_21697 = call i32 @function_2169e()
  br label %dec_label_pc_21699

dec_label_pc_21699:                               ; preds = %bb, %dec_label_pc_21664
  %v2_21697 = phi i32 [ %v1_21697, %bb ], [ %v2_21690, %dec_label_pc_21664 ]
  ret i32 %v2_21697
}

define i32 @function_2169e() local_unnamed_addr {
dec_label_pc_2169e:
  %v0_2169f = load i32, i32* @eax, align 4
  ret i32 %v0_2169f
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEEEENT_11result_typeEiRSG_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_216a0:
  %v1_216d6 = call i32 @unknown_44711(i32 %arg3)
  %v3_216ed = call i32 @unknown_4473e(i32 %arg2, i32 %v1_216d6, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_216fe

bb:                                               ; preds = %dec_label_pc_216a0
  %v1_216fc = call i32 @function_21703()
  br label %dec_label_pc_216fe

dec_label_pc_216fe:                               ; preds = %bb, %dec_label_pc_216a0
  %v2_216fc = phi i32 [ %v1_216fc, %bb ], [ 0, %dec_label_pc_216a0 ]
  ret i32 %v2_216fc
}

define i32 @function_21703() local_unnamed_addr {
dec_label_pc_21703:
  %v0_21704 = load i32, i32* @eax, align 4
  ret i32 %v0_21704
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS8_13Config_vectorISsEEEESaISC_EEEEEENT_11result_typeEiRSG_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21705:
  %v1_2173b = call i32 @unknown_44826(i32 %arg3)
  %v3_21752 = call i32 @unknown_44853(i32 %arg2, i32 %v1_2173b, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21763

bb:                                               ; preds = %dec_label_pc_21705
  %v1_21761 = call i32 @function_21768()
  br label %dec_label_pc_21763

dec_label_pc_21763:                               ; preds = %bb, %dec_label_pc_21705
  %v2_21761 = phi i32 [ %v1_21761, %bb ], [ 0, %dec_label_pc_21705 ]
  ret i32 %v2_21761
}

define i32 @function_21768() local_unnamed_addr {
dec_label_pc_21768:
  %v0_21769 = load i32, i32* @eax, align 4
  ret i32 %v0_21769
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvbEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2176a:
  %v1_217a0 = call i32 @unknown_4493b(i32 %arg3)
  %v3_217b7 = call i32 @unknown_44968(i32 %arg2, i32 %v1_217a0, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_217c8

bb:                                               ; preds = %dec_label_pc_2176a
  %v1_217c6 = call i32 @function_217cd()
  br label %dec_label_pc_217c8

dec_label_pc_217c8:                               ; preds = %bb, %dec_label_pc_2176a
  %v2_217c6 = phi i32 [ %v1_217c6, %bb ], [ 0, %dec_label_pc_2176a ]
  ret i32 %v2_217c6
}

define i32 @function_217cd() local_unnamed_addr {
dec_label_pc_217cd:
  %v0_217ce = load i32, i32* @eax, align 4
  ret i32 %v0_217ce
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvxEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_217cf:
  %v1_21805 = call i32 @unknown_44a24(i32 %arg3)
  %v3_2181c = call i32 @unknown_44a51(i32 %arg2, i32 %v1_21805, i32 1)
  ret i32 0
}

define i32 @function_2182d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2182d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_21832() local_unnamed_addr {
dec_label_pc_21832:
  %eax.global-to-local = alloca i32, align 4
  %v0_21833 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21833
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvdEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21834:
  ret i32 %arg3
}

define i32 @function_2184e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2184e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2184e = load i32, i32* @eax, align 4
  %v1_2184e = trunc i32 %v0_2184e to i8
  %v2_2184e = load i1, i1* @cf, align 1
  %v3_2184e = zext i1 %v2_2184e to i8
  %v4_2184e = add i8 %v1_2184e, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_2184e = add i8 %v4_2184e, %v3_2184e
  %v20_2184e = add i8 %v1_2184e, -119
  %v21_2184e = add i8 %v20_2184e, %v3_2184e
  %v22_2184e = icmp ule i8 %v21_2184e, %v1_2184e
  %v23_2184e = icmp ugt i8 %v1_2184e, 118
  %v24_2184e = select i1 %v2_2184e, i1 %v22_2184e, i1 %v23_2184e
  store i1 %v24_2184e, i1* %cf.global-to-local, align 1
  %v25_2184e = zext i8 %v5_2184e to i32
  %v27_2184e = and i32 %v0_2184e, -256
  %v28_2184e = or i32 %v25_2184e, %v27_2184e
  store i32 %v28_2184e, i32* %eax.global-to-local, align 4
  %v0_21850 = load i32, i32* @ebp, align 4
  %v1_21850 = add i32 %v0_21850, 1
  store i32 %v1_21850, i32* @ebp, align 4
  %v1_21855 = add i32 %v28_2184e, -1587161275
  %v2_21855 = inttoptr i32 %v1_21855 to i8*
  %v3_21855 = load i8, i8* %v2_21855, align 1
  %v4_21855 = load i32, i32* @ecx, align 4
  %v5_21855 = trunc i32 %v4_21855 to i8
  %v7_21855 = zext i1 %v24_2184e to i8
  %v8_21855 = sub i8 %v3_21855, %v5_21855
  %v9_21855 = add i8 %v8_21855, %v7_21855
  %v19_21855 = sub i8 %v8_21855, %v7_21855
  %v20_21855 = icmp ult i8 %v3_21855, %v19_21855
  %v21_21855 = icmp ne i8 %v5_21855, -1
  %v22_21855 = or i1 %v21_21855, %v20_21855
  %v23_21855 = icmp ult i8 %v3_21855, %v5_21855
  %v24_21855 = select i1 %v24_2184e, i1 %v22_21855, i1 %v23_21855
  store i1 %v24_21855, i1* %cf.global-to-local, align 1
  store i8 %v9_21855, i8* %v2_21855, align 1
  %v0_2185b = load i32, i32* %eax.global-to-local, align 4
  %v1_2185b = trunc i32 %v0_2185b to i8
  %v2_2185b = load i1, i1* %cf.global-to-local, align 1
  %v3_2185b = zext i1 %v2_2185b to i8
  %v4_2185b = add i8 %v3_2185b, %v1_2185b
  %v19_2185b = icmp ule i8 %v4_2185b, %v1_2185b
  %v21_2185b = icmp eq i1 %v2_2185b, %v19_2185b
  store i1 %v21_2185b, i1* %cf.global-to-local, align 1
  %v22_2185b = zext i8 %v4_2185b to i32
  %v24_2185b = and i32 %v0_2185b, -256
  %v25_2185b = or i32 %v22_2185b, %v24_2185b
  store i32 %v25_2185b, i32* %eax.global-to-local, align 4
  %v1_2185d = inttoptr i32 %v25_2185b to i8*
  %v2_2185d = load i8, i8* %v1_2185d, align 1
  %v5_2185d = add i8 %v2_2185d, %v4_2185b
  store i8 %v5_2185d, i8* %v1_2185d, align 1
  %v0_2185f = load i32, i32* %eax.global-to-local, align 4
  %v1_2185f = load i32, i32* @ebp, align 4
  %v2_2185f = add i32 %v1_2185f, -12
  %v3_2185f = inttoptr i32 %v2_2185f to i32*
  store i32 %v0_2185f, i32* %v3_2185f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_21864 = load i32, i32* @ebp, align 4
  %v1_21864 = add i32 %v0_21864, -36
  %v2_21864 = inttoptr i32 %v1_21864 to i32*
  %v3_21864 = load i32, i32* %v2_21864, align 4
  store i32 %v3_21864, i32* %eax.global-to-local, align 4
  %v1_2186a = call i32 @unknown_44b14(i32 %v3_21864)
  store i32 %v1_2186a, i32* %eax.global-to-local, align 4
  %v0_2187b = load i32, i32* @ebp, align 4
  %v1_2187b = add i32 %v0_2187b, -32
  %v2_2187b = inttoptr i32 %v1_2187b to i32*
  %v3_2187b = load i32, i32* %v2_2187b, align 4
  store i32 %v3_2187b, i32* %eax.global-to-local, align 4
  %v3_21881 = call i32 @unknown_44b42(i32 %v3_2187b, i32 %v1_2186a, i32 1)
  store i32 %v3_21881, i32* %eax.global-to-local, align 4
  %v0_21886 = load i32, i32* @ebp, align 4
  %v1_21886 = add i32 %v0_21886, -12
  %v2_21886 = inttoptr i32 %v1_21886 to i32*
  %v3_21886 = load i32, i32* %v2_21886, align 4
  store i32 %v3_21886, i32* %eax.global-to-local, align 4
  %v1_21889 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21889 = xor i32 %v1_21889, %v3_21886
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_21889 = icmp eq i32 %v2_21889, 0
  store i32 %v2_21889, i32* @eax, align 4
  br i1 %v3_21889, label %bb, label %dec_label_pc_21892

bb:                                               ; preds = %dec_label_pc_2184e
  %v1_21890 = call i32 @function_21897()
  store i32 %v1_21890, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_21892

dec_label_pc_21892:                               ; preds = %bb, %dec_label_pc_2184e
  %v2_21890 = phi i32 [ %v1_21890, %bb ], [ %v2_21889, %dec_label_pc_2184e ]
  ret i32 %v2_21890

; uselistorder directives
  uselistorder i8 %v4_2185b, { 0, 2, 1 }
  uselistorder i8 %v1_2185b, { 1, 0 }
  uselistorder i8 %v8_21855, { 1, 0 }
  uselistorder i8 %v7_21855, { 1, 0 }
  uselistorder i8 %v5_21855, { 1, 0, 2 }
  uselistorder i1 %v24_2184e, { 1, 0, 2 }
}

define i32 @function_21897() local_unnamed_addr {
dec_label_pc_21897:
  %v0_21898 = load i32, i32* @eax, align 4
  ret i32 %v0_21898
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKxEEEEPKvEENT_11result_typeEiiRSS_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21899:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_218d2 = load i32, i32* %ecx.global-to-local, align 4
  %v0_218d6 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_218d6, 16777216
  %v12_218f5 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_218d2, 16777216
  %v13_218f5 = sdiv i32 %sext1, 16777216
  %v14_218f5 = call i32 @unknown_44bfd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_218f5, i32 %v13_218f5, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v14_218f5, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_21906

bb:                                               ; preds = %dec_label_pc_21899
  %v1_21904 = call i32 @function_2190b()
  br label %dec_label_pc_21906

dec_label_pc_21906:                               ; preds = %bb, %dec_label_pc_21899
  %v2_21904 = phi i32 [ %v1_21904, %bb ], [ %v14_218f5, %dec_label_pc_21899 ]
  ret i32 %v2_21904

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2190b() local_unnamed_addr {
dec_label_pc_2190b:
  %v0_2190c = load i32, i32* @eax, align 4
  ret i32 %v0_2190c
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2190d:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_2195d, label %bb

bb:                                               ; preds = %dec_label_pc_2190d
  %sext = mul i32 %arg6, 16777216
  %v12_21957 = sdiv i32 %sext, 16777216
  %v13_21957 = sext i8 %arg5 to i32
  %v14_21957 = call i32 @function_21d96(i32 %arg8, i32 %arg7, i32 %v12_21957, i32 %v13_21957, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2195d

dec_label_pc_2195d:                               ; preds = %dec_label_pc_2190d, %bb
  %v2_21960 = mul i32 %arg2, 4
  %v1_21963 = add i32 %v2_21960, ptrtoint (i32* @global_var_21de8.1853 to i32)
  %v1_21968 = inttoptr i32 %v1_21963 to i32*
  %v2_21968 = load i32, i32* %v1_21968, align 4
  ret i32 %v2_21968

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2195d, { 1, 0 }
}

define i32 @function_2196c() local_unnamed_addr {
dec_label_pc_2196c:
  %v0_21974 = load i32, i32* @ebp, align 4
  %v1_21974 = add i32 %v0_21974, -83
  %v2_21974 = inttoptr i32 %v1_21974 to i8*
  %v3_21974 = load i8, i8* %v2_21974, align 1
  %v1_21984 = add i32 %v0_21974, -56
  %v2_21984 = inttoptr i32 %v1_21984 to i32*
  %v3_21984 = load i32, i32* %v2_21984, align 4
  %v1_2198b = add i32 %v0_21974, -52
  %v2_2198b = inttoptr i32 %v1_2198b to i32*
  %v3_2198b = load i32, i32* %v2_2198b, align 4
  %v1_21992 = add i32 %v0_21974, -44
  %v2_21992 = inttoptr i32 %v1_21992 to i32*
  %v3_21992 = load i32, i32* %v2_21992, align 4
  %v6_21998 = sext i8 %v3_21974 to i32
  %v7_21998 = call i32 @unknown_4519d(i32 %v3_21992, i32 %v3_2198b, i32 %v3_21984, i32 0, i32 %v6_21998, i32 1)
  store i32 %v7_21998, i32* @eax, align 4
  %v0_2199d = call i32 @function_21dce()
  ret i32 %v0_2199d

; uselistorder directives
  uselistorder i32 %v0_21974, { 0, 2, 1, 3 }
}

define i32 @function_219a2() local_unnamed_addr {
dec_label_pc_219a2:
  %v0_219aa = load i32, i32* @ebp, align 4
  %v1_219aa = add i32 %v0_219aa, -82
  %v2_219aa = inttoptr i32 %v1_219aa to i8*
  %v3_219aa = load i8, i8* %v2_219aa, align 1
  %v1_219ba = add i32 %v0_219aa, -56
  %v2_219ba = inttoptr i32 %v1_219ba to i32*
  %v3_219ba = load i32, i32* %v2_219ba, align 4
  %v1_219c1 = add i32 %v0_219aa, -52
  %v2_219c1 = inttoptr i32 %v1_219c1 to i32*
  %v3_219c1 = load i32, i32* %v2_219c1, align 4
  %v1_219c8 = add i32 %v0_219aa, -44
  %v2_219c8 = inttoptr i32 %v1_219c8 to i32*
  %v3_219c8 = load i32, i32* %v2_219c8, align 4
  %v6_219ce = sext i8 %v3_219aa to i32
  %v7_219ce = call i32 @unknown_4520a(i32 %v3_219c8, i32 %v3_219c1, i32 %v3_219ba, i32 0, i32 %v6_219ce, i32 1)
  store i32 %v7_219ce, i32* @eax, align 4
  %v0_219d3 = call i32 @function_21dce()
  ret i32 %v0_219d3

; uselistorder directives
  uselistorder i32 %v0_219aa, { 0, 2, 1, 3 }
}

define i32 @function_219d8() local_unnamed_addr {
dec_label_pc_219d8:
  %v0_219e0 = load i32, i32* @ebp, align 4
  %v1_219e0 = add i32 %v0_219e0, -81
  %v2_219e0 = inttoptr i32 %v1_219e0 to i8*
  %v3_219e0 = load i8, i8* %v2_219e0, align 1
  %v1_219f0 = add i32 %v0_219e0, -56
  %v2_219f0 = inttoptr i32 %v1_219f0 to i32*
  %v3_219f0 = load i32, i32* %v2_219f0, align 4
  %v1_219f7 = add i32 %v0_219e0, -52
  %v2_219f7 = inttoptr i32 %v1_219f7 to i32*
  %v3_219f7 = load i32, i32* %v2_219f7, align 4
  %v1_219fe = add i32 %v0_219e0, -44
  %v2_219fe = inttoptr i32 %v1_219fe to i32*
  %v3_219fe = load i32, i32* %v2_219fe, align 4
  %v6_21a04 = sext i8 %v3_219e0 to i32
  %v7_21a04 = call i32 @unknown_45277(i32 %v3_219fe, i32 %v3_219f7, i32 %v3_219f0, i32 0, i32 %v6_21a04, i32 1)
  store i32 %v7_21a04, i32* @eax, align 4
  %v0_21a09 = call i32 @function_21dce()
  ret i32 %v0_21a09

; uselistorder directives
  uselistorder i32 %v0_219e0, { 0, 2, 1, 3 }
}

define i32 @function_21a0e() local_unnamed_addr {
dec_label_pc_21a0e:
  %v0_21a16 = load i32, i32* @ebp, align 4
  %v1_21a16 = add i32 %v0_21a16, -80
  %v2_21a16 = inttoptr i32 %v1_21a16 to i8*
  %v3_21a16 = load i8, i8* %v2_21a16, align 1
  %v1_21a26 = add i32 %v0_21a16, -56
  %v2_21a26 = inttoptr i32 %v1_21a26 to i32*
  %v3_21a26 = load i32, i32* %v2_21a26, align 4
  %v1_21a2d = add i32 %v0_21a16, -52
  %v2_21a2d = inttoptr i32 %v1_21a2d to i32*
  %v3_21a2d = load i32, i32* %v2_21a2d, align 4
  %v1_21a34 = add i32 %v0_21a16, -44
  %v2_21a34 = inttoptr i32 %v1_21a34 to i32*
  %v3_21a34 = load i32, i32* %v2_21a34, align 4
  %v6_21a3a = sext i8 %v3_21a16 to i32
  %v7_21a3a = call i32 @unknown_452e4(i32 %v3_21a34, i32 %v3_21a2d, i32 %v3_21a26, i32 0, i32 %v6_21a3a, i32 1)
  store i32 %v7_21a3a, i32* @eax, align 4
  %v0_21a3f = call i32 @function_21dce()
  ret i32 %v0_21a3f

; uselistorder directives
  uselistorder i32 %v0_21a16, { 0, 2, 1, 3 }
}

define i32 @function_21a44() local_unnamed_addr {
dec_label_pc_21a44:
  %v0_21a4c = load i32, i32* @ebp, align 4
  %v1_21a4c = add i32 %v0_21a4c, -79
  %v2_21a4c = inttoptr i32 %v1_21a4c to i8*
  %v3_21a4c = load i8, i8* %v2_21a4c, align 1
  %v1_21a5c = add i32 %v0_21a4c, -56
  %v2_21a5c = inttoptr i32 %v1_21a5c to i32*
  %v3_21a5c = load i32, i32* %v2_21a5c, align 4
  %v1_21a63 = add i32 %v0_21a4c, -52
  %v2_21a63 = inttoptr i32 %v1_21a63 to i32*
  %v3_21a63 = load i32, i32* %v2_21a63, align 4
  %v1_21a6a = add i32 %v0_21a4c, -44
  %v2_21a6a = inttoptr i32 %v1_21a6a to i32*
  %v3_21a6a = load i32, i32* %v2_21a6a, align 4
  %v6_21a70 = sext i8 %v3_21a4c to i32
  %v7_21a70 = call i32 @unknown_45351(i32 %v3_21a6a, i32 %v3_21a63, i32 %v3_21a5c, i32 0, i32 %v6_21a70, i32 1)
  store i32 %v7_21a70, i32* @eax, align 4
  %v0_21a75 = call i32 @function_21dce()
  ret i32 %v0_21a75

; uselistorder directives
  uselistorder i32 %v0_21a4c, { 0, 2, 1, 3 }
}

define i32 @function_21a90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21a90:
  %v2_21a90 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_21a90 = load i32, i32* @eax, align 4
  %v4_21a90 = trunc i32 %v3_21a90 to i8
  %v5_21a90 = add i8 %v4_21a90, %v2_21a90
  %v21_21a90 = inttoptr i32 %v3_21a90 to i8*
  store i8 %v5_21a90, i8* %v21_21a90, align 1
  %v0_21a92 = load i32, i32* @ebp, align 4
  %v1_21a92 = add i32 %v0_21a92, -56
  %v2_21a92 = inttoptr i32 %v1_21a92 to i32*
  %v3_21a92 = load i32, i32* %v2_21a92, align 4
  %v1_21a99 = add i32 %v0_21a92, -52
  %v2_21a99 = inttoptr i32 %v1_21a99 to i32*
  %v3_21a99 = load i32, i32* %v2_21a99, align 4
  %v1_21aa0 = add i32 %v0_21a92, -44
  %v2_21aa0 = inttoptr i32 %v1_21aa0 to i32*
  %v3_21aa0 = load i32, i32* %v2_21aa0, align 4
  %v3_21aa6 = call i32 @unknown_453be(i32 %v3_21aa0, i32 %v3_21a99, i32 %v3_21a92)
  store i32 %v3_21aa6, i32* @eax, align 4
  %v0_21aab = call i32 @function_21dce()
  ret i32 %v0_21aab
}

define i32 @function_21ab0() local_unnamed_addr {
dec_label_pc_21ab0:
  %v0_21ab8 = load i32, i32* @ebp, align 4
  %v1_21acf = add i32 %v0_21ab8, -52
  %v2_21acf = inttoptr i32 %v1_21acf to i32*
  %v3_21acf = load i32, i32* %v2_21acf, align 4
  %v1_21ad6 = add i32 %v0_21ab8, -44
  %v2_21ad6 = inttoptr i32 %v1_21ad6 to i32*
  %v3_21ad6 = load i32, i32* %v2_21ad6, align 4
  %v2_21adc = call i32 @unknown_4542b(i32 %v3_21ad6, i32 %v3_21acf)
  store i32 %v2_21adc, i32* @eax, align 4
  %v0_21ae1 = call i32 @function_21dce()
  ret i32 %v0_21ae1

; uselistorder directives
  uselistorder i32 %v0_21ab8, { 1, 0 }
}

define i32 @function_21ae6() local_unnamed_addr {
dec_label_pc_21ae6:
  %v0_21aee = load i32, i32* @ebp, align 4
  %v1_21b05 = add i32 %v0_21aee, -52
  %v2_21b05 = inttoptr i32 %v1_21b05 to i32*
  %v3_21b05 = load i32, i32* %v2_21b05, align 4
  %v1_21b0c = add i32 %v0_21aee, -44
  %v2_21b0c = inttoptr i32 %v1_21b0c to i32*
  %v3_21b0c = load i32, i32* %v2_21b0c, align 4
  %v2_21b12 = call i32 @unknown_4542b(i32 %v3_21b0c, i32 %v3_21b05)
  store i32 %v2_21b12, i32* @eax, align 4
  %v0_21b17 = call i32 @function_21dce()
  ret i32 %v0_21b17

; uselistorder directives
  uselistorder i32 %v0_21aee, { 1, 0 }
}

define i32 @function_21b4a() local_unnamed_addr {
dec_label_pc_21b4a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v3_21b4a = load i32, i32* %eax.global-to-local, align 4
  %v0_21b4c = load i32, i32* %ecx.global-to-local, align 4
  %v1_21b4c = trunc i32 %v0_21b4c to i8
  %v3_21b4c = udiv i32 %v0_21b4c, 256
  %v4_21b4c = trunc i32 %v3_21b4c to i8
  %v5_21b4c = add i8 %v4_21b4c, %v1_21b4c
  %v11_21b4c = xor i8 %v5_21b4c, %v1_21b4c
  %v12_21b4c = xor i8 %v5_21b4c, %v4_21b4c
  %v13_21b4c = and i8 %v11_21b4c, %v12_21b4c
  %v14_21b4c = icmp slt i8 %v13_21b4c, 0
  %v16_21b4c = icmp slt i8 %v5_21b4c, 0
  %v20_21b4c = zext i8 %v5_21b4c to i32
  %v22_21b4c = and i32 %v0_21b4c, -256
  %v23_21b4c = or i32 %v20_21b4c, %v22_21b4c
  store i32 %v23_21b4c, i32* %ecx.global-to-local, align 4
  %v2_21b4e = icmp eq i1 %v16_21b4c, %v14_21b4c
  br i1 %v2_21b4e, label %dec_label_pc_21b50, label %dec_label_pc_21b52

dec_label_pc_21b50:                               ; preds = %dec_label_pc_21b4a
  %v4_21b4a = trunc i32 %v3_21b4a to i8
  %v5_21b50 = mul i8 %v4_21b4a, 2
  %v21_21b50 = inttoptr i32 %v3_21b4a to i8*
  store i8 %v5_21b50, i8* %v21_21b50, align 1
  br label %dec_label_pc_21b52

dec_label_pc_21b52:                               ; preds = %dec_label_pc_21b4a, %dec_label_pc_21b50
  %v0_21b5a = load i32, i32* @ebp, align 4
  %v1_21b5a = add i32 %v0_21b5a, -74
  %v2_21b5a = inttoptr i32 %v1_21b5a to i8*
  %v3_21b5a = load i8, i8* %v2_21b5a, align 1
  %v4_21b5a = zext i8 %v3_21b5a to i32
  store i32 %v4_21b5a, i32* %eax.global-to-local, align 4
  %v1_21b6a = add i32 %v0_21b5a, -56
  %v2_21b6a = inttoptr i32 %v1_21b6a to i32*
  %v3_21b6a = load i32, i32* %v2_21b6a, align 4
  store i32 %v3_21b6a, i32* %eax.global-to-local, align 4
  %v1_21b71 = add i32 %v0_21b5a, -52
  %v2_21b71 = inttoptr i32 %v1_21b71 to i32*
  %v3_21b71 = load i32, i32* %v2_21b71, align 4
  store i32 %v3_21b71, i32* %eax.global-to-local, align 4
  %v1_21b78 = add i32 %v0_21b5a, -44
  %v2_21b78 = inttoptr i32 %v1_21b78 to i32*
  %v3_21b78 = load i32, i32* %v2_21b78, align 4
  store i32 %v3_21b78, i32* %eax.global-to-local, align 4
  %v2_21b7e = call i32 @unknown_4542b(i32 %v3_21b78, i32 %v3_21b71)
  store i32 %v2_21b7e, i32* @eax, align 4
  %v0_21b83 = call i32 @function_21dce()
  store i32 %v0_21b83, i32* %eax.global-to-local, align 4
  ret i32 %v0_21b83

; uselistorder directives
  uselistorder i32 %v0_21b5a, { 1, 0, 2, 3 }
  uselistorder i8 %v5_21b4c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_21b4c, { 1, 0, 2 }
  uselistorder i32* %ecx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_21b52, { 1, 0 }
}

define i32 @function_21b8a() local_unnamed_addr {
dec_label_pc_21b8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_21b8a = load i32, i32* %eax.global-to-local, align 4
  %v11_21b8a = and i32 %v0_21b8a, -236
  store i32 %v11_21b8a, i32* %eax.global-to-local, align 4
  %v1_21b8c = inttoptr i32 %v11_21b8a to i32*
  %v2_21b8c = load i32, i32* %v1_21b8c, align 4
  %v4_21b8c = add i32 %v2_21b8c, %v11_21b8a
  store i32 %v4_21b8c, i32* %v1_21b8c, align 4
  %v0_21b8e = load i32, i32* %eax.global-to-local, align 4
  %v1_21b8e = inttoptr i32 %v0_21b8e to i8*
  %v2_21b8e = load i8, i8* %v1_21b8e, align 1
  %v4_21b8e = trunc i32 %v0_21b8e to i8
  %v5_21b8e = add i8 %v2_21b8e, %v4_21b8e
  store i8 %v5_21b8e, i8* %v1_21b8e, align 1
  %v0_21b90 = load i32, i32* @ebp, align 4
  %v1_21ba0 = add i32 %v0_21b90, -56
  %v2_21ba0 = inttoptr i32 %v1_21ba0 to i32*
  %v3_21ba0 = load i32, i32* %v2_21ba0, align 4
  store i32 %v3_21ba0, i32* %eax.global-to-local, align 4
  %v1_21ba7 = add i32 %v0_21b90, -52
  %v2_21ba7 = inttoptr i32 %v1_21ba7 to i32*
  %v3_21ba7 = load i32, i32* %v2_21ba7, align 4
  store i32 %v3_21ba7, i32* %eax.global-to-local, align 4
  %v1_21bae = add i32 %v0_21b90, -44
  %v2_21bae = inttoptr i32 %v1_21bae to i32*
  %v3_21bae = load i32, i32* %v2_21bae, align 4
  store i32 %v3_21bae, i32* %eax.global-to-local, align 4
  %v2_21bb4 = call i32 @unknown_4542b(i32 %v3_21bae, i32 %v3_21ba7)
  store i32 %v2_21bb4, i32* @eax, align 4
  %v0_21bb9 = call i32 @function_21dce()
  store i32 %v0_21bb9, i32* %eax.global-to-local, align 4
  ret i32 %v0_21bb9

; uselistorder directives
  uselistorder i32 %v0_21b90, { 1, 0, 2 }
  uselistorder i32 %v11_21b8a, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
}

define i32 @function_21bbe() local_unnamed_addr {
dec_label_pc_21bbe:
  %v0_21bc6 = load i32, i32* @ebp, align 4
  %v1_21bdd = add i32 %v0_21bc6, -52
  %v2_21bdd = inttoptr i32 %v1_21bdd to i32*
  %v3_21bdd = load i32, i32* %v2_21bdd, align 4
  %v1_21be4 = add i32 %v0_21bc6, -44
  %v2_21be4 = inttoptr i32 %v1_21be4 to i32*
  %v3_21be4 = load i32, i32* %v2_21be4, align 4
  %v2_21bea = call i32 @unknown_4542b(i32 %v3_21be4, i32 %v3_21bdd)
  store i32 %v2_21bea, i32* @eax, align 4
  %v0_21bef = call i32 @function_21dce()
  ret i32 %v0_21bef

; uselistorder directives
  uselistorder i32 %v0_21bc6, { 1, 0 }
}

define i32 @function_21bf4() local_unnamed_addr {
dec_label_pc_21bf4:
  %v0_21bfc = load i32, i32* @ebp, align 4
  %v1_21c13 = add i32 %v0_21bfc, -52
  %v2_21c13 = inttoptr i32 %v1_21c13 to i32*
  %v3_21c13 = load i32, i32* %v2_21c13, align 4
  %v1_21c1a = add i32 %v0_21bfc, -44
  %v2_21c1a = inttoptr i32 %v1_21c1a to i32*
  %v3_21c1a = load i32, i32* %v2_21c1a, align 4
  %v2_21c20 = call i32 @unknown_4542b(i32 %v3_21c1a, i32 %v3_21c13)
  store i32 %v2_21c20, i32* @eax, align 4
  %v0_21c25 = call i32 @function_21dce()
  ret i32 %v0_21c25

; uselistorder directives
  uselistorder i32 %v0_21bfc, { 1, 0 }
}

define i32 @function_21c2a() local_unnamed_addr {
dec_label_pc_21c2a:
  %v0_21c32 = load i32, i32* @ebp, align 4
  %v1_21c49 = add i32 %v0_21c32, -52
  %v2_21c49 = inttoptr i32 %v1_21c49 to i32*
  %v3_21c49 = load i32, i32* %v2_21c49, align 4
  %v1_21c50 = add i32 %v0_21c32, -44
  %v2_21c50 = inttoptr i32 %v1_21c50 to i32*
  %v3_21c50 = load i32, i32* %v2_21c50, align 4
  %v2_21c56 = call i32 @unknown_4542b(i32 %v3_21c50, i32 %v3_21c49)
  store i32 %v2_21c56, i32* @eax, align 4
  %v0_21c5b = call i32 @function_21dce()
  ret i32 %v0_21c5b

; uselistorder directives
  uselistorder i32 %v0_21c32, { 1, 0 }
}

define i32 @function_21c60() local_unnamed_addr {
dec_label_pc_21c60:
  %v0_21c68 = load i32, i32* @ebp, align 4
  %v1_21c7f = add i32 %v0_21c68, -52
  %v2_21c7f = inttoptr i32 %v1_21c7f to i32*
  %v3_21c7f = load i32, i32* %v2_21c7f, align 4
  %v1_21c86 = add i32 %v0_21c68, -44
  %v2_21c86 = inttoptr i32 %v1_21c86 to i32*
  %v3_21c86 = load i32, i32* %v2_21c86, align 4
  %v2_21c8c = call i32 @unknown_4542b(i32 %v3_21c86, i32 %v3_21c7f)
  store i32 %v2_21c8c, i32* @eax, align 4
  %v0_21c91 = call i32 @function_21dce()
  ret i32 %v0_21c91

; uselistorder directives
  uselistorder i32 %v0_21c68, { 1, 0 }
}

define i32 @function_21c96() local_unnamed_addr {
dec_label_pc_21c96:
  %v0_21c9e = load i32, i32* @ebp, align 4
  %v1_21cb5 = add i32 %v0_21c9e, -52
  %v2_21cb5 = inttoptr i32 %v1_21cb5 to i32*
  %v3_21cb5 = load i32, i32* %v2_21cb5, align 4
  %v1_21cbc = add i32 %v0_21c9e, -44
  %v2_21cbc = inttoptr i32 %v1_21cbc to i32*
  %v3_21cbc = load i32, i32* %v2_21cbc, align 4
  %v2_21cc2 = call i32 @unknown_4542b(i32 %v3_21cbc, i32 %v3_21cb5)
  store i32 %v2_21cc2, i32* @eax, align 4
  %v0_21cc7 = call i32 @function_21dce()
  ret i32 %v0_21cc7

; uselistorder directives
  uselistorder i32 %v0_21c9e, { 1, 0 }
}

define i32 @function_21cee(i32 %arg1) local_unnamed_addr {
dec_label_pc_21cee:
  %v0_21cee = load i32, i32* @eax, align 4
  %v0_21cf2 = load i32, i32* @ebp, align 4
  %v1_21cf2 = add i32 %v0_21cf2, -44
  %v2_21cf2 = inttoptr i32 %v1_21cf2 to i32*
  %v3_21cf2 = load i32, i32* %v2_21cf2, align 4
  %v2_21cf8 = call i32 @unknown_4542b(i32 %v3_21cf2, i32 %v0_21cee)
  store i32 %v2_21cf8, i32* @eax, align 4
  %v0_21cfd = call i32 @function_21dce()
  ret i32 %v0_21cfd
}

define i32 @function_21d02() local_unnamed_addr {
dec_label_pc_21d02:
  %v0_21d18 = load i32, i32* @ebp, align 4
  %v1_21d1f = add i32 %v0_21d18, -52
  %v2_21d1f = inttoptr i32 %v1_21d1f to i32*
  %v3_21d1f = load i32, i32* %v2_21d1f, align 4
  %v1_21d26 = add i32 %v0_21d18, -44
  %v2_21d26 = inttoptr i32 %v1_21d26 to i32*
  %v3_21d26 = load i32, i32* %v2_21d26, align 4
  %v2_21d2c = call i32 @unknown_4542b(i32 %v3_21d26, i32 %v3_21d1f)
  store i32 %v2_21d2c, i32* @eax, align 4
  %v0_21d31 = call i32 @function_21dce()
  ret i32 %v0_21d31
}

define i32 @function_21d3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21d3c:
  %v2_21d3c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_21d3c = load i32, i32* @eax, align 4
  %v4_21d3c = trunc i32 %v3_21d3c to i8
  %v5_21d3c = add i8 %v4_21d3c, %v2_21d3c
  %v21_21d3c = inttoptr i32 %v3_21d3c to i8*
  store i8 %v5_21d3c, i8* %v21_21d3c, align 1
  %v0_21d4c = load i32, i32* @ebp, align 4
  %v1_21d53 = add i32 %v0_21d4c, -52
  %v2_21d53 = inttoptr i32 %v1_21d53 to i32*
  %v3_21d53 = load i32, i32* %v2_21d53, align 4
  %v1_21d5a = add i32 %v0_21d4c, -44
  %v2_21d5a = inttoptr i32 %v1_21d5a to i32*
  %v3_21d5a = load i32, i32* %v2_21d5a, align 4
  %v2_21d60 = call i32 @unknown_4542b(i32 %v3_21d5a, i32 %v3_21d53)
  store i32 %v2_21d60, i32* @eax, align 4
  %v0_21d65 = call i32 @function_21dce()
  ret i32 %v0_21d65
}

define i32 @function_21d67() local_unnamed_addr {
dec_label_pc_21d67:
  %v0_21d7b = load i32, i32* @ebp, align 4
  %v1_21d82 = add i32 %v0_21d7b, -52
  %v2_21d82 = inttoptr i32 %v1_21d82 to i32*
  %v3_21d82 = load i32, i32* %v2_21d82, align 4
  %v1_21d89 = add i32 %v0_21d7b, -44
  %v2_21d89 = inttoptr i32 %v1_21d89 to i32*
  %v3_21d89 = load i32, i32* %v2_21d89, align 4
  %v2_21d8f = call i32 @unknown_4542b(i32 %v3_21d89, i32 %v3_21d82)
  store i32 %v2_21d8f, i32* @eax, align 4
  %v0_21d94 = call i32 @function_21dce()
  ret i32 %v0_21d94

; uselistorder directives
  uselistorder i32 ()* @function_21dce, { 18, 4, 17, 3, 16, 15, 14, 13, 12, 1, 0, 11, 10, 2, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32, i32)* @unknown_4542b, { 12, 3, 11, 2, 10, 9, 8, 7, 6, 1, 0, 5, 4 }
}

define i32 @function_21d96(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_21d96:
  %v0_21dae = load i32, i32* @ebp, align 4
  %v1_21dbc = add i32 %v0_21dae, -48
  %v2_21dbc = inttoptr i32 %v1_21dbc to i32*
  %v3_21dbc = load i32, i32* %v2_21dbc, align 4
  ret i32 %v3_21dbc
}

define i32 @function_21dc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_21dc4:
  %v0_21dc4 = load i32, i32* @ebp, align 4
  %v1_21dc4 = add i32 %v0_21dc4, 1
  store i32 %v1_21dc4, i32* @ebp, align 4
  %v0_21dc9 = call i32 @unknown_45485()
  ret i32 %v0_21dc9
}

define i32 @function_21dce() local_unnamed_addr {
dec_label_pc_21dce:
  %v0_21dce = load i32, i32* @ebp, align 4
  %v1_21dce = add i32 %v0_21dce, -28
  %v2_21dce = inttoptr i32 %v1_21dce to i32*
  %v3_21dce = load i32, i32* %v2_21dce, align 4
  %v1_21dd1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21dd1 = icmp eq i32 %v1_21dd1, %v3_21dce
  br i1 %v3_21dd1, label %bb, label %dec_label_pc_21dce.dec_label_pc_21dda_crit_edge

dec_label_pc_21dce.dec_label_pc_21dda_crit_edge:  ; preds = %dec_label_pc_21dce
  %v2_21dd8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_21dda

bb:                                               ; preds = %dec_label_pc_21dce
  %v1_21dd8 = call i32 @function_21ddf()
  br label %dec_label_pc_21dda

dec_label_pc_21dda:                               ; preds = %dec_label_pc_21dce.dec_label_pc_21dda_crit_edge, %bb
  %v2_21dd8 = phi i32 [ %v2_21dd8.pre, %dec_label_pc_21dce.dec_label_pc_21dda_crit_edge ], [ %v1_21dd8, %bb ]
  ret i32 %v2_21dd8

; uselistorder directives
  uselistorder label %dec_label_pc_21dda, { 1, 0 }
}

define i32 @function_21ddf() local_unnamed_addr {
dec_label_pc_21ddf:
  %v0_21de6 = load i32, i32* @eax, align 4
  ret i32 %v0_21de6
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21e38:
  ret i32 %arg2
}

define i32 @function_21e4b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21e4b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_21e4b = load i32, i32* @ebp, align 4
  %v1_21e4b = add i32 %v0_21e4b, 1
  store i32 %v1_21e4b, i32* %ebp.global-to-local, align 4
  %v0_21e4c = load i32, i32* @ecx, align 4
  %v1_21e4c = add i32 %v0_21e4c, 1166793797
  %v2_21e4c = inttoptr i32 %v1_21e4c to i8*
  %v3_21e4c = load i8, i8* %v2_21e4c, align 1
  %v5_21e4c = trunc i32 %v0_21e4c to i8
  %v6_21e4c = load i1, i1* @cf, align 1
  %v7_21e4c = zext i1 %v6_21e4c to i8
  %v8_21e4c = add i8 %v3_21e4c, %v5_21e4c
  %v9_21e4c = add i8 %v7_21e4c, %v8_21e4c
  %v27_21e4c = icmp ule i8 %v9_21e4c, %v3_21e4c
  %v28_21e4c = icmp ult i8 %v8_21e4c, %v3_21e4c
  %v29_21e4c = select i1 %v6_21e4c, i1 %v27_21e4c, i1 %v28_21e4c
  store i1 %v29_21e4c, i1* %cf.global-to-local, align 1
  store i8 %v9_21e4c, i8* %v2_21e4c, align 1
  %v0_21e52 = load i32, i32* @eax, align 4
  %v1_21e52 = trunc i32 %v0_21e52 to i8
  %v2_21e52 = load i1, i1* %cf.global-to-local, align 1
  %v3_21e52 = zext i1 %v2_21e52 to i8
  %v4_21e52 = add i8 %v1_21e52, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_21e52 = add i8 %v4_21e52, %v3_21e52
  %v20_21e52 = add i8 %v1_21e52, -119
  %v21_21e52 = add i8 %v20_21e52, %v3_21e52
  %v22_21e52 = icmp ule i8 %v21_21e52, %v1_21e52
  %v23_21e52 = icmp ugt i8 %v1_21e52, 118
  %v24_21e52 = select i1 %v2_21e52, i1 %v22_21e52, i1 %v23_21e52
  store i1 %v24_21e52, i1* %cf.global-to-local, align 1
  %v25_21e52 = zext i8 %v5_21e52 to i32
  %v27_21e52 = and i32 %v0_21e52, -256
  %v28_21e52 = or i32 %v25_21e52, %v27_21e52
  store i32 %v28_21e52, i32* %eax.global-to-local, align 4
  %v0_21e54 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21e54 = add i32 %v0_21e54, 1
  store i32 %v1_21e54, i32* %ebp.global-to-local, align 4
  %v0_21e57 = load i32, i32* @edx, align 8
  %v1_21e57 = and i32 %v0_21e57, -65281
  %v2_21e57 = or i32 %v1_21e57, 17664
  store i32 %v2_21e57, i32* %edx.global-to-local, align 8
  %v1_21e59 = add i32 %v28_21e52, 1166792517
  %v2_21e59 = inttoptr i32 %v1_21e59 to i8*
  %v3_21e59 = load i8, i8* %v2_21e59, align 1
  %v4_21e59 = load i32, i32* @ecx, align 4
  %v5_21e59 = trunc i32 %v4_21e59 to i8
  %v7_21e59 = zext i1 %v24_21e52 to i8
  %v8_21e59 = sub i8 %v3_21e59, %v5_21e59
  %v9_21e59 = add i8 %v8_21e59, %v7_21e59
  %v19_21e59 = sub i8 %v8_21e59, %v7_21e59
  %v20_21e59 = icmp ult i8 %v3_21e59, %v19_21e59
  %v21_21e59 = icmp ne i8 %v5_21e59, -1
  %v22_21e59 = or i1 %v21_21e59, %v20_21e59
  %v23_21e59 = icmp ult i8 %v3_21e59, %v5_21e59
  %v24_21e59 = select i1 %v24_21e52, i1 %v22_21e59, i1 %v23_21e59
  store i1 %v24_21e59, i1* %cf.global-to-local, align 1
  store i8 %v9_21e59, i8* %v2_21e59, align 1
  %v0_21e5f = load i32, i32* %eax.global-to-local, align 4
  %v1_21e5f = trunc i32 %v0_21e5f to i8
  %v2_21e5f = load i1, i1* %cf.global-to-local, align 1
  %v3_21e5f = zext i1 %v2_21e5f to i32
  %v4_21e5f = add i32 %v0_21e5f, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_21e5f = add i32 %v4_21e5f, %v3_21e5f
  %v17_21e5f = icmp ult i8 %v1_21e5f, -119
  %v18_21e5f = or i1 %v2_21e5f, %v17_21e5f
  store i1 %v18_21e5f, i1* %cf.global-to-local, align 1
  %v31_21e5f = urem i32 %v5_21e5f, 256
  %v33_21e5f = and i32 %v0_21e5f, -256
  %v34_21e5f = or i32 %v31_21e5f, %v33_21e5f
  store i32 %v34_21e5f, i32* %eax.global-to-local, align 4
  %v0_21e61 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21e61 = add i32 %v0_21e61, 1
  store i32 %v1_21e61, i32* @ebp, align 4
  %v1_21e62 = add i32 %v0_21e61, -94
  %v2_21e62 = inttoptr i32 %v1_21e62 to i8*
  %v3_21e62 = load i8, i8* %v2_21e62, align 1
  %v5_21e62 = mul i8 %v3_21e62, 2
  store i8 %v5_21e62, i8* %v2_21e62, align 1
  %v16_21e62 = icmp slt i8 %v3_21e62, 0
  %v0_21e65 = load i32, i32* %eax.global-to-local, align 4
  %v1_21e65 = trunc i32 %v0_21e65 to i8
  %v3_21e65 = zext i1 %v16_21e62 to i8
  %v4_21e65 = add i8 %v1_21e65, %v3_21e65
  %v19_21e65 = icmp ule i8 %v4_21e65, %v1_21e65
  %v21_21e65 = icmp eq i1 %v16_21e62, %v19_21e65
  store i1 %v21_21e65, i1* %cf.global-to-local, align 1
  %v22_21e65 = zext i8 %v4_21e65 to i32
  %v24_21e65 = and i32 %v0_21e65, -256
  %v25_21e65 = or i32 %v22_21e65, %v24_21e65
  store i32 %v25_21e65, i32* %eax.global-to-local, align 4
  %v1_21e67 = inttoptr i32 %v25_21e65 to i8*
  %v2_21e67 = load i8, i8* %v1_21e67, align 1
  %v5_21e67 = add i8 %v2_21e67, %v4_21e65
  store i8 %v5_21e67, i8* %v1_21e67, align 1
  %v0_21e69 = load i32, i32* %eax.global-to-local, align 4
  %v1_21e69 = load i32, i32* @ebp, align 4
  %v2_21e69 = add i32 %v1_21e69, -12
  %v3_21e69 = inttoptr i32 %v2_21e69 to i32*
  store i32 %v0_21e69, i32* %v3_21e69, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_21e6e = load i32, i32* %edx.global-to-local, align 8
  %v0_21e72 = load i32, i32* @ebp, align 4
  %v1_21e72 = add i32 %v0_21e72, -40
  %v2_21e72 = inttoptr i32 %v1_21e72 to i32*
  %v3_21e72 = load i32, i32* %v2_21e72, align 4
  store i32 %v3_21e72, i32* %eax.global-to-local, align 4
  %v1_21e79 = add i32 %v0_21e72, -36
  %v2_21e79 = inttoptr i32 %v1_21e79 to i32*
  %v3_21e79 = load i32, i32* %v2_21e79, align 4
  store i32 %v3_21e79, i32* %eax.global-to-local, align 4
  %v1_21e80 = add i32 %v0_21e72, -32
  %v2_21e80 = inttoptr i32 %v1_21e80 to i32*
  %v3_21e80 = load i32, i32* %v2_21e80, align 4
  store i32 %v3_21e80, i32* %eax.global-to-local, align 4
  %v1_21e87 = add i32 %v0_21e72, -28
  %v2_21e87 = inttoptr i32 %v1_21e87 to i32*
  %v3_21e87 = load i32, i32* %v2_21e87, align 4
  store i32 %v3_21e87, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_21e6e, 16777216
  %v5_21e8d = sdiv i32 %sext, 16777216
  %v6_21e8d = call i32 @unknown_45a17(i32 %v3_21e87, i32 %v3_21e80, i32 %v3_21e79, i32 %v3_21e72, i32 %v5_21e8d)
  store i32 %v6_21e8d, i32* @eax, align 4
  %v0_21e92 = load i32, i32* @ebp, align 4
  %v1_21e92 = add i32 %v0_21e92, -12
  %v2_21e92 = inttoptr i32 %v1_21e92 to i32*
  %v3_21e92 = load i32, i32* %v2_21e92, align 4
  store i32 %v3_21e92, i32* %edx.global-to-local, align 8
  %v1_21e95 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21e95 = xor i32 %v1_21e95, %v3_21e92
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_21e95 = icmp eq i32 %v2_21e95, 0
  store i32 %v2_21e95, i32* %edx.global-to-local, align 8
  br i1 %v3_21e95, label %bb, label %dec_label_pc_21e9e

bb:                                               ; preds = %dec_label_pc_21e4b
  %v1_21e9c = call i32 @function_21ea3()
  store i32 %v1_21e9c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_21e9e

dec_label_pc_21e9e:                               ; preds = %bb, %dec_label_pc_21e4b
  %v2_21e9c = phi i32 [ %v1_21e9c, %bb ], [ %v6_21e8d, %dec_label_pc_21e4b ]
  ret i32 %v2_21e9c

; uselistorder directives
  uselistorder i32 %v0_21e72, { 1, 0, 2, 3 }
  uselistorder i8 %v4_21e65, { 0, 2, 1 }
  uselistorder i8 %v1_21e65, { 1, 0 }
  uselistorder i8 %v3_21e62, { 1, 0 }
  uselistorder i1 %v2_21e5f, { 1, 0 }
  uselistorder i32 %v0_21e5f, { 1, 0, 2 }
  uselistorder i8 %v8_21e59, { 1, 0 }
  uselistorder i8 %v7_21e59, { 1, 0 }
  uselistorder i8 %v5_21e59, { 1, 0, 2 }
  uselistorder i1 %v24_21e52, { 1, 0, 2 }
  uselistorder i8 %v9_21e4c, { 1, 0 }
  uselistorder i8 %v8_21e4c, { 1, 0 }
}

define i32 @function_21ea3() local_unnamed_addr {
dec_label_pc_21ea3:
  %v0_21ea4 = load i32, i32* @eax, align 4
  ret i32 %v0_21ea4
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsSJ_NSA_ISB_INSC_10Value_implISF_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_21ea5:
  %edx.global-to-local = alloca i32, align 4
  %v0_21edb = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_21edb, 16777216
  %v5_21efa = sdiv i32 %sext, 16777216
  %v6_21efa = call i32 @unknown_45ae9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_21efa)
  store i32 %v6_21efa, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_21f0b

bb:                                               ; preds = %dec_label_pc_21ea5
  %v1_21f09 = call i32 @function_21f10()
  br label %dec_label_pc_21f0b

dec_label_pc_21f0b:                               ; preds = %bb, %dec_label_pc_21ea5
  %v2_21f09 = phi i32 [ %v1_21f09, %bb ], [ %v6_21efa, %dec_label_pc_21ea5 ]
  ret i32 %v2_21f09
}

define i32 @function_21f10() local_unnamed_addr {
dec_label_pc_21f10:
  %v0_21f11 = load i32, i32* @eax, align 4
  ret i32 %v0_21f11
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsNSA_ISB_INSC_9Pair_implISF_EESaISM_EEEESJ_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_21f12:
  %eax.global-to-local = alloca i32, align 4
  %v2_21f13 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_21f13
}

define i32 @function_21f15(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21f15:
  %v0_21f18 = load i32, i32* @ebp, align 4
  %v1_21f18 = add i32 %v0_21f18, 8
  %v2_21f18 = inttoptr i32 %v1_21f18 to i32*
  %v3_21f18 = load i32, i32* %v2_21f18, align 4
  %v2_21f1b = add i32 %v0_21f18, -28
  %v3_21f1b = inttoptr i32 %v2_21f1b to i32*
  store i32 %v3_21f18, i32* %v3_21f1b, align 4
  %v0_21f1e = load i32, i32* @ebp, align 4
  %v1_21f1e = add i32 %v0_21f1e, 12
  %v2_21f1e = inttoptr i32 %v1_21f1e to i32*
  %v3_21f1e = load i32, i32* %v2_21f1e, align 4
  %v2_21f21 = add i32 %v0_21f1e, -32
  %v3_21f21 = inttoptr i32 %v2_21f21 to i32*
  store i32 %v3_21f1e, i32* %v3_21f21, align 4
  %v0_21f24 = load i32, i32* @ebp, align 4
  %v1_21f24 = add i32 %v0_21f24, 16
  %v2_21f24 = inttoptr i32 %v1_21f24 to i32*
  %v3_21f24 = load i32, i32* %v2_21f24, align 4
  %v2_21f27 = add i32 %v0_21f24, -36
  %v3_21f27 = inttoptr i32 %v2_21f27 to i32*
  store i32 %v3_21f24, i32* %v3_21f27, align 4
  %v0_21f2a = load i32, i32* @ebp, align 4
  %v1_21f2a = add i32 %v0_21f2a, 20
  %v2_21f2a = inttoptr i32 %v1_21f2a to i32*
  %v3_21f2a = load i32, i32* %v2_21f2a, align 4
  %v2_21f2d = add i32 %v0_21f2a, -40
  %v3_21f2d = inttoptr i32 %v2_21f2d to i32*
  store i32 %v3_21f2a, i32* %v3_21f2d, align 4
  %v0_21f30 = load i32, i32* @ebp, align 4
  %v1_21f30 = add i32 %v0_21f30, 24
  %v2_21f30 = inttoptr i32 %v1_21f30 to i8*
  %v3_21f30 = load i8, i8* %v2_21f30, align 1
  %v3_21f34 = add i32 %v0_21f30, -41
  %v4_21f34 = inttoptr i32 %v3_21f34 to i8*
  store i8 %v3_21f30, i8* %v4_21f34, align 1
  %v0_21f37 = load i32, i32* @ebp, align 4
  %v1_21f37 = add i32 %v0_21f37, 28
  %v2_21f37 = inttoptr i32 %v1_21f37 to i32*
  %v3_21f37 = load i32, i32* %v2_21f37, align 4
  %v2_21f3a = add i32 %v0_21f37, -48
  %v3_21f3a = inttoptr i32 %v2_21f3a to i32*
  store i32 %v3_21f37, i32* %v3_21f3a, align 4
  %v0_21f3d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_21f43 = load i32, i32* @ebp, align 4
  %v2_21f43 = add i32 %v1_21f43, -12
  %v3_21f43 = inttoptr i32 %v2_21f43 to i32*
  store i32 %v0_21f3d, i32* %v3_21f43, align 4
  %v0_21f48 = load i32, i32* @edx, align 8
  %v0_21f4c = load i32, i32* @ebp, align 4
  %v1_21f4c = add i32 %v0_21f4c, -40
  %v2_21f4c = inttoptr i32 %v1_21f4c to i32*
  %v3_21f4c = load i32, i32* %v2_21f4c, align 4
  %v1_21f53 = add i32 %v0_21f4c, -36
  %v2_21f53 = inttoptr i32 %v1_21f53 to i32*
  %v3_21f53 = load i32, i32* %v2_21f53, align 4
  %v1_21f5a = add i32 %v0_21f4c, -32
  %v2_21f5a = inttoptr i32 %v1_21f5a to i32*
  %v3_21f5a = load i32, i32* %v2_21f5a, align 4
  %v1_21f61 = add i32 %v0_21f4c, -28
  %v2_21f61 = inttoptr i32 %v1_21f61 to i32*
  %v3_21f61 = load i32, i32* %v2_21f61, align 4
  %sext = mul i32 %v0_21f48, 16777216
  %v5_21f67 = sdiv i32 %sext, 16777216
  %v6_21f67 = call i32 @unknown_45bbb(i32 %v3_21f61, i32 %v3_21f5a, i32 %v3_21f53, i32 %v3_21f4c, i32 %v5_21f67)
  store i32 %v6_21f67, i32* @eax, align 4
  %v0_21f6c = load i32, i32* @ebp, align 4
  %v1_21f6c = add i32 %v0_21f6c, -12
  %v2_21f6c = inttoptr i32 %v1_21f6c to i32*
  %v3_21f6c = load i32, i32* %v2_21f6c, align 4
  %v1_21f6f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21f6f = icmp eq i32 %v1_21f6f, %v3_21f6c
  br i1 %v3_21f6f, label %bb, label %dec_label_pc_21f78

bb:                                               ; preds = %dec_label_pc_21f15
  %v1_21f76 = call i32 @function_21f7d()
  br label %dec_label_pc_21f78

dec_label_pc_21f78:                               ; preds = %bb, %dec_label_pc_21f15
  %v2_21f76 = phi i32 [ %v1_21f76, %bb ], [ %v6_21f67, %dec_label_pc_21f15 ]
  ret i32 %v2_21f76

; uselistorder directives
  uselistorder i32 %v0_21f4c, { 1, 0, 2, 3 }
}

define i32 @function_21f7d() local_unnamed_addr {
dec_label_pc_21f7d:
  %v0_21f7e = load i32, i32* @eax, align 4
  ret i32 %v0_21f7e
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_21f7f:
  ret i32 %arg2
}

define i32 @function_21fd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_21fd0:
  %v0_21fd4 = call i32 @unknown_45c8d()
  store i32 %v0_21fd4, i32* @eax, align 4
  %v0_21fd9 = load i32, i32* @ebp, align 4
  %v1_21fd9 = add i32 %v0_21fd9, -12
  %v2_21fd9 = inttoptr i32 %v1_21fd9 to i32*
  %v3_21fd9 = load i32, i32* %v2_21fd9, align 4
  %v1_21fdc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21fdc = icmp eq i32 %v1_21fdc, %v3_21fd9
  br i1 %v3_21fdc, label %bb, label %dec_label_pc_21fe5

bb:                                               ; preds = %dec_label_pc_21fd0
  %v1_21fe3 = call i32 @function_21fea()
  br label %dec_label_pc_21fe5

dec_label_pc_21fe5:                               ; preds = %bb, %dec_label_pc_21fd0
  %v2_21fe3 = phi i32 [ %v1_21fe3, %bb ], [ %v0_21fd4, %dec_label_pc_21fd0 ]
  ret i32 %v2_21fe3
}

define i32 @function_21fea() local_unnamed_addr {
dec_label_pc_21fea:
  %v0_21feb = load i32, i32* @eax, align 4
  ret i32 %v0_21feb
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_21fec:
  %edx.global-to-local = alloca i32, align 4
  %v0_22022 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_22022, 16777216
  %v5_22041 = sdiv i32 %sext, 16777216
  %v6_22041 = call i32 @unknown_45d5f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_22041)
  store i32 %v6_22041, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_22052

bb:                                               ; preds = %dec_label_pc_21fec
  %v1_22050 = call i32 @function_22057()
  br label %dec_label_pc_22052

dec_label_pc_22052:                               ; preds = %bb, %dec_label_pc_21fec
  %v2_22050 = phi i32 [ %v1_22050, %bb ], [ %v6_22041, %dec_label_pc_21fec ]
  ret i32 %v2_22050
}

define i32 @function_22057() local_unnamed_addr {
dec_label_pc_22057:
  %v0_22058 = load i32, i32* @eax, align 4
  ret i32 %v0_22058
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_22059:
  %edx.global-to-local = alloca i32, align 4
  %v0_22084 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_2208f = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2208f, 16777216
  %v5_220ae = sdiv i32 %sext, 16777216
  %v6_220ae = call i32 @unknown_45e31(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_220ae)
  store i32 %v0_22084, i32* %edx.global-to-local, align 8
  ret i32 %v6_220ae
}

define i32 @function_220bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_220bc:
  %v0_220bc = load i32, i32* @ebp, align 4
  %v1_220bc = load i32, i32* @eax, align 4
  %v3_220bc = add i32 %v0_220bc, -24
  %v4_220bc = add i32 %v3_220bc, %v1_220bc
  %v5_220bc = inttoptr i32 %v4_220bc to i8*
  %v6_220bc = load i8, i8* %v5_220bc, align 1
  %v7_220bc = load i32, i32* @edx, align 8
  %v8_220bc = udiv i32 %v7_220bc, 256
  %v9_220bc = trunc i32 %v8_220bc to i8
  %v10_220bc = add i8 %v9_220bc, %v6_220bc
  store i8 %v10_220bc, i8* %v5_220bc, align 1
  %v31_220bc = load i32, i32* @eax, align 4
  ret i32 %v31_220bc
}

define i32 @function_220c3() local_unnamed_addr {
dec_label_pc_220c3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_220c3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_220c3 = add i32 %v0_220c3, -1
  store i32 %v1_220c3, i32* %ecx.global-to-local, align 4
  %v0_220c5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_220c5
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_220c6:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSM_13Config_vectorISsEEEESaISQ_EEEENSK_ISL_INSM_10Value_implISP_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_22120:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_22187:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_221d7, label %bb

bb:                                               ; preds = %dec_label_pc_22187
  %sext = mul i32 %arg6, 16777216
  %v12_221d1 = sdiv i32 %sext, 16777216
  %v13_221d1 = sext i8 %arg5 to i32
  %v14_221d1 = call i32 @function_22610(i32 %arg8, i32 %arg7, i32 %v12_221d1, i32 %v13_221d1, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_221d7

dec_label_pc_221d7:                               ; preds = %dec_label_pc_22187, %bb
  %v2_221da = mul i32 %arg2, 4
  %v1_221dd = add i32 %v2_221da, ptrtoint (i32* @global_var_22664.1856 to i32)
  %v1_221e2 = inttoptr i32 %v1_221dd to i32*
  %v2_221e2 = load i32, i32* %v1_221e2, align 4
  ret i32 %v2_221e2

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_221d7, { 1, 0 }
}

define i32 @function_221e6() local_unnamed_addr {
dec_label_pc_221e6:
  %v0_221ee = load i32, i32* @ebp, align 4
  %v1_221ee = add i32 %v0_221ee, -83
  %v2_221ee = inttoptr i32 %v1_221ee to i8*
  %v3_221ee = load i8, i8* %v2_221ee, align 1
  %v1_221fe = add i32 %v0_221ee, -56
  %v2_221fe = inttoptr i32 %v1_221fe to i32*
  %v3_221fe = load i32, i32* %v2_221fe, align 4
  %v1_22205 = add i32 %v0_221ee, -52
  %v2_22205 = inttoptr i32 %v1_22205 to i32*
  %v3_22205 = load i32, i32* %v2_22205, align 4
  %v1_2220c = add i32 %v0_221ee, -44
  %v2_2220c = inttoptr i32 %v1_2220c to i32*
  %v3_2220c = load i32, i32* %v2_2220c, align 4
  %v6_22212 = sext i8 %v3_221ee to i32
  %v7_22212 = call i32 @unknown_45fc4(i32 %v3_2220c, i32 %v3_22205, i32 %v3_221fe, i32 0, i32 %v6_22212, i32 1)
  store i32 %v7_22212, i32* @eax, align 4
  %v0_22217 = call i32 @function_22648()
  ret i32 %v0_22217

; uselistorder directives
  uselistorder i32 %v0_221ee, { 0, 2, 1, 3 }
}

define i32 @function_2221c() local_unnamed_addr {
dec_label_pc_2221c:
  %v0_22224 = load i32, i32* @ebp, align 4
  %v1_22224 = add i32 %v0_22224, -82
  %v2_22224 = inttoptr i32 %v1_22224 to i8*
  %v3_22224 = load i8, i8* %v2_22224, align 1
  %v1_22234 = add i32 %v0_22224, -56
  %v2_22234 = inttoptr i32 %v1_22234 to i32*
  %v3_22234 = load i32, i32* %v2_22234, align 4
  %v1_2223b = add i32 %v0_22224, -52
  %v2_2223b = inttoptr i32 %v1_2223b to i32*
  %v3_2223b = load i32, i32* %v2_2223b, align 4
  %v1_22242 = add i32 %v0_22224, -44
  %v2_22242 = inttoptr i32 %v1_22242 to i32*
  %v3_22242 = load i32, i32* %v2_22242, align 4
  %v6_22248 = sext i8 %v3_22224 to i32
  %v7_22248 = call i32 @unknown_46031(i32 %v3_22242, i32 %v3_2223b, i32 %v3_22234, i32 0, i32 %v6_22248, i32 1)
  store i32 %v7_22248, i32* @eax, align 4
  %v0_2224d = call i32 @function_22648()
  ret i32 %v0_2224d

; uselistorder directives
  uselistorder i32 %v0_22224, { 0, 2, 1, 3 }
}

define i32 @function_22252() local_unnamed_addr {
dec_label_pc_22252:
  %v0_2225a = load i32, i32* @ebp, align 4
  %v1_2225a = add i32 %v0_2225a, -81
  %v2_2225a = inttoptr i32 %v1_2225a to i8*
  %v3_2225a = load i8, i8* %v2_2225a, align 1
  %v1_2226a = add i32 %v0_2225a, -56
  %v2_2226a = inttoptr i32 %v1_2226a to i32*
  %v3_2226a = load i32, i32* %v2_2226a, align 4
  %v1_22271 = add i32 %v0_2225a, -52
  %v2_22271 = inttoptr i32 %v1_22271 to i32*
  %v3_22271 = load i32, i32* %v2_22271, align 4
  %v1_22278 = add i32 %v0_2225a, -44
  %v2_22278 = inttoptr i32 %v1_22278 to i32*
  %v3_22278 = load i32, i32* %v2_22278, align 4
  %v6_2227e = sext i8 %v3_2225a to i32
  %v7_2227e = call i32 @unknown_4609e(i32 %v3_22278, i32 %v3_22271, i32 %v3_2226a, i32 0, i32 %v6_2227e, i32 1)
  store i32 %v7_2227e, i32* @eax, align 4
  %v0_22283 = call i32 @function_22648()
  ret i32 %v0_22283

; uselistorder directives
  uselistorder i32 %v0_2225a, { 0, 2, 1, 3 }
}

define i32 @function_22288() local_unnamed_addr {
dec_label_pc_22288:
  %v0_22290 = load i32, i32* @ebp, align 4
  %v1_22290 = add i32 %v0_22290, -80
  %v2_22290 = inttoptr i32 %v1_22290 to i8*
  %v3_22290 = load i8, i8* %v2_22290, align 1
  %v1_222a0 = add i32 %v0_22290, -56
  %v2_222a0 = inttoptr i32 %v1_222a0 to i32*
  %v3_222a0 = load i32, i32* %v2_222a0, align 4
  %v1_222a7 = add i32 %v0_22290, -52
  %v2_222a7 = inttoptr i32 %v1_222a7 to i32*
  %v3_222a7 = load i32, i32* %v2_222a7, align 4
  %v1_222ae = add i32 %v0_22290, -44
  %v2_222ae = inttoptr i32 %v1_222ae to i32*
  %v3_222ae = load i32, i32* %v2_222ae, align 4
  %v6_222b4 = sext i8 %v3_22290 to i32
  %v7_222b4 = call i32 @unknown_4610b(i32 %v3_222ae, i32 %v3_222a7, i32 %v3_222a0, i32 0, i32 %v6_222b4, i32 1)
  store i32 %v7_222b4, i32* @eax, align 4
  %v0_222b9 = call i32 @function_22648()
  ret i32 %v0_222b9

; uselistorder directives
  uselistorder i32 %v0_22290, { 0, 2, 1, 3 }
}

define i32 @function_222c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_222c2:
  %v2_222c2 = load i32, i32* @eax, align 4
  %v4_222c2 = mul i32 %v2_222c2, 2
  %v21_222c2 = inttoptr i32 %v2_222c2 to i32*
  store i32 %v4_222c2, i32* %v21_222c2, align 4
  %v2_222c4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_222c4 = load i32, i32* @eax, align 4
  %v4_222c4 = trunc i32 %v3_222c4 to i8
  %v5_222c4 = add i8 %v4_222c4, %v2_222c4
  %v21_222c4 = inttoptr i32 %v3_222c4 to i8*
  store i8 %v5_222c4, i8* %v21_222c4, align 1
  %v0_222c6 = load i32, i32* @ebp, align 4
  %v1_222c6 = add i32 %v0_222c6, -79
  %v2_222c6 = inttoptr i32 %v1_222c6 to i8*
  %v3_222c6 = load i8, i8* %v2_222c6, align 1
  %v1_222d6 = add i32 %v0_222c6, -56
  %v2_222d6 = inttoptr i32 %v1_222d6 to i32*
  %v3_222d6 = load i32, i32* %v2_222d6, align 4
  %v1_222dd = add i32 %v0_222c6, -52
  %v2_222dd = inttoptr i32 %v1_222dd to i32*
  %v3_222dd = load i32, i32* %v2_222dd, align 4
  %v1_222e4 = add i32 %v0_222c6, -44
  %v2_222e4 = inttoptr i32 %v1_222e4 to i32*
  %v3_222e4 = load i32, i32* %v2_222e4, align 4
  %v5_222ea = sext i8 %v3_222c6 to i32
  %v6_222ea = call i32 @unknown_46178(i32 %v3_222e4, i32 %v3_222dd, i32 %v3_222d6, i32 0, i32 %v5_222ea)
  store i32 %v6_222ea, i32* @eax, align 4
  %v0_222ef = call i32 @function_22648()
  ret i32 %v0_222ef

; uselistorder directives
  uselistorder i32 %v0_222c6, { 0, 2, 1, 3 }
  uselistorder i32 %v2_222c2, { 1, 0 }
}

define i32 @function_222f4() local_unnamed_addr {
dec_label_pc_222f4:
  %v0_222fc = load i32, i32* @ebp, align 4
  %v1_222fc = add i32 %v0_222fc, -78
  %v2_222fc = inttoptr i32 %v1_222fc to i8*
  %v3_222fc = load i8, i8* %v2_222fc, align 1
  %v1_2230c = add i32 %v0_222fc, -56
  %v2_2230c = inttoptr i32 %v1_2230c to i32*
  %v3_2230c = load i32, i32* %v2_2230c, align 4
  %v1_22313 = add i32 %v0_222fc, -52
  %v2_22313 = inttoptr i32 %v1_22313 to i32*
  %v3_22313 = load i32, i32* %v2_22313, align 4
  %v1_2231a = add i32 %v0_222fc, -44
  %v2_2231a = inttoptr i32 %v1_2231a to i32*
  %v3_2231a = load i32, i32* %v2_2231a, align 4
  %v6_22320 = sext i8 %v3_222fc to i32
  %v7_22320 = call i32 @unknown_461e5(i32 %v3_2231a, i32 %v3_22313, i32 %v3_2230c, i32 0, i32 %v6_22320, i32 1)
  store i32 %v7_22320, i32* @eax, align 4
  %v0_22325 = call i32 @function_22648()
  ret i32 %v0_22325

; uselistorder directives
  uselistorder i32 %v0_222fc, { 0, 2, 1, 3 }
}

define i32 @function_2232a() local_unnamed_addr {
dec_label_pc_2232a:
  %v0_22332 = load i32, i32* @ebp, align 4
  %v1_22349 = add i32 %v0_22332, -52
  %v2_22349 = inttoptr i32 %v1_22349 to i32*
  %v3_22349 = load i32, i32* %v2_22349, align 4
  %v1_22350 = add i32 %v0_22332, -44
  %v2_22350 = inttoptr i32 %v1_22350 to i32*
  %v3_22350 = load i32, i32* %v2_22350, align 4
  %v2_22356 = call i32 @unknown_46252(i32 %v3_22350, i32 %v3_22349)
  store i32 %v2_22356, i32* @eax, align 4
  %v0_2235b = call i32 @function_22648()
  ret i32 %v0_2235b

; uselistorder directives
  uselistorder i32 %v0_22332, { 1, 0 }
}

define i32 @function_22360() local_unnamed_addr {
dec_label_pc_22360:
  %v0_22368 = load i32, i32* @ebp, align 4
  %v1_2237f = add i32 %v0_22368, -52
  %v2_2237f = inttoptr i32 %v1_2237f to i32*
  %v3_2237f = load i32, i32* %v2_2237f, align 4
  %v1_22386 = add i32 %v0_22368, -44
  %v2_22386 = inttoptr i32 %v1_22386 to i32*
  %v3_22386 = load i32, i32* %v2_22386, align 4
  %v2_2238c = call i32 @unknown_46252(i32 %v3_22386, i32 %v3_2237f)
  store i32 %v2_2238c, i32* @eax, align 4
  %v0_22391 = call i32 @function_22648()
  ret i32 %v0_22391

; uselistorder directives
  uselistorder i32 %v0_22368, { 1, 0 }
}

define i32 @function_22396() local_unnamed_addr {
dec_label_pc_22396:
  %v0_2239e = load i32, i32* @ebp, align 4
  %v1_223b5 = add i32 %v0_2239e, -52
  %v2_223b5 = inttoptr i32 %v1_223b5 to i32*
  %v3_223b5 = load i32, i32* %v2_223b5, align 4
  %v1_223bc = add i32 %v0_2239e, -44
  %v2_223bc = inttoptr i32 %v1_223bc to i32*
  %v3_223bc = load i32, i32* %v2_223bc, align 4
  %v2_223c2 = call i32 @unknown_46252(i32 %v3_223bc, i32 %v3_223b5)
  store i32 %v2_223c2, i32* @eax, align 4
  %v0_223c7 = call i32 @function_22648()
  ret i32 %v0_223c7

; uselistorder directives
  uselistorder i32 %v0_2239e, { 1, 0 }
}

define i32 @function_223e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_223e8:
  %v0_223eb = load i32, i32* @ebp, align 4
  %v1_223eb = add i32 %v0_223eb, -52
  %v2_223eb = inttoptr i32 %v1_223eb to i32*
  %v3_223eb = load i32, i32* %v2_223eb, align 4
  %v1_223f2 = add i32 %v0_223eb, -44
  %v2_223f2 = inttoptr i32 %v1_223f2 to i32*
  %v3_223f2 = load i32, i32* %v2_223f2, align 4
  %v2_223f8 = call i32 @unknown_46252(i32 %v3_223f2, i32 %v3_223eb)
  store i32 %v2_223f8, i32* @eax, align 4
  %v0_223fd = call i32 @function_22648()
  ret i32 %v0_223fd
}

define i32 @function_22422(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22422:
  %v0_22422 = load i32, i32* @ebp, align 4
  %v1_22422 = add i32 %v0_22422, 1
  store i32 %v1_22422, i32* @ebp, align 4
  %v0_22424 = load i32, i32* @eax, align 4
  %v1_22428 = add i32 %v0_22422, -43
  %v2_22428 = inttoptr i32 %v1_22428 to i32*
  %v3_22428 = load i32, i32* %v2_22428, align 4
  %v2_2242e = call i32 @unknown_46252(i32 %v3_22428, i32 %v0_22424)
  ret i32 %v2_2242e
}

define i32 @function_22436(i32 %arg1) local_unnamed_addr {
dec_label_pc_22436:
  %v2_22436 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_22436 = load i32, i32* @eax, align 4
  %v4_22436 = trunc i32 %v3_22436 to i8
  %v5_22436 = add i8 %v4_22436, %v2_22436
  %v21_22436 = inttoptr i32 %v3_22436 to i8*
  store i8 %v5_22436, i8* %v21_22436, align 1
  %v0_22440 = load i32, i32* @ebp, align 4
  %v1_22457 = add i32 %v0_22440, -52
  %v2_22457 = inttoptr i32 %v1_22457 to i32*
  %v3_22457 = load i32, i32* %v2_22457, align 4
  %v1_2245e = add i32 %v0_22440, -44
  %v2_2245e = inttoptr i32 %v1_2245e to i32*
  %v3_2245e = load i32, i32* %v2_2245e, align 4
  %v2_22464 = call i32 @unknown_46252(i32 %v3_2245e, i32 %v3_22457)
  store i32 %v2_22464, i32* @eax, align 4
  %v0_22469 = call i32 @function_22648()
  ret i32 %v0_22469

; uselistorder directives
  uselistorder i32 %v0_22440, { 1, 0 }
}

define i32 @function_22498(i32 %arg1) local_unnamed_addr {
dec_label_pc_22498:
  %v2_2249a = call i32 @unknown_46252(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_2249a, i32* @eax, align 4
  %v0_2249f = call i32 @function_22648()
  ret i32 %v0_2249f
}

define i32 @function_224a4() local_unnamed_addr {
dec_label_pc_224a4:
  %v0_224ac = load i32, i32* @ebp, align 4
  %v1_224c3 = add i32 %v0_224ac, -52
  %v2_224c3 = inttoptr i32 %v1_224c3 to i32*
  %v3_224c3 = load i32, i32* %v2_224c3, align 4
  %v1_224ca = add i32 %v0_224ac, -44
  %v2_224ca = inttoptr i32 %v1_224ca to i32*
  %v3_224ca = load i32, i32* %v2_224ca, align 4
  %v2_224d0 = call i32 @unknown_46252(i32 %v3_224ca, i32 %v3_224c3)
  store i32 %v2_224d0, i32* @eax, align 4
  %v0_224d5 = call i32 @function_22648()
  ret i32 %v0_224d5

; uselistorder directives
  uselistorder i32 %v0_224ac, { 1, 0 }
}

define i32 @function_224da() local_unnamed_addr {
dec_label_pc_224da:
  %v0_224e2 = load i32, i32* @ebp, align 4
  %v1_224f9 = add i32 %v0_224e2, -52
  %v2_224f9 = inttoptr i32 %v1_224f9 to i32*
  %v3_224f9 = load i32, i32* %v2_224f9, align 4
  %v1_22500 = add i32 %v0_224e2, -44
  %v2_22500 = inttoptr i32 %v1_22500 to i32*
  %v3_22500 = load i32, i32* %v2_22500, align 4
  %v2_22506 = call i32 @unknown_46252(i32 %v3_22500, i32 %v3_224f9)
  store i32 %v2_22506, i32* @eax, align 4
  %v0_2250b = call i32 @function_22648()
  ret i32 %v0_2250b

; uselistorder directives
  uselistorder i32 %v0_224e2, { 1, 0 }
}

define i32 @function_22510() local_unnamed_addr {
dec_label_pc_22510:
  %v0_22518 = load i32, i32* @ebp, align 4
  %v1_2252f = add i32 %v0_22518, -52
  %v2_2252f = inttoptr i32 %v1_2252f to i32*
  %v3_2252f = load i32, i32* %v2_2252f, align 4
  %v1_22536 = add i32 %v0_22518, -44
  %v2_22536 = inttoptr i32 %v1_22536 to i32*
  %v3_22536 = load i32, i32* %v2_22536, align 4
  %v2_2253c = call i32 @unknown_46252(i32 %v3_22536, i32 %v3_2252f)
  store i32 %v2_2253c, i32* @eax, align 4
  %v0_22541 = call i32 @function_22648()
  ret i32 %v0_22541

; uselistorder directives
  uselistorder i32 %v0_22518, { 1, 0 }
}

define i32 @function_22554(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22554:
  %v0_2255e = load i32, i32* @ebp, align 4
  %v1_22565 = add i32 %v0_2255e, -52
  %v2_22565 = inttoptr i32 %v1_22565 to i32*
  %v3_22565 = load i32, i32* %v2_22565, align 4
  %v1_2256c = add i32 %v0_2255e, -44
  %v2_2256c = inttoptr i32 %v1_2256c to i32*
  %v3_2256c = load i32, i32* %v2_2256c, align 4
  %v2_22572 = call i32 @unknown_46252(i32 %v3_2256c, i32 %v3_22565)
  store i32 %v2_22572, i32* @eax, align 4
  %v0_22577 = call i32 @function_22648()
  ret i32 %v0_22577
}

define i32 @function_225a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_225a4:
  %v2_225a6 = call i32 @unknown_46252(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_225a6, i32* @eax, align 4
  %v0_225ab = call i32 @function_22648()
  ret i32 %v0_225ab
}

define i32 @function_225b0() local_unnamed_addr {
dec_label_pc_225b0:
  %v0_225c6 = load i32, i32* @ebp, align 4
  %v1_225cd = add i32 %v0_225c6, -52
  %v2_225cd = inttoptr i32 %v1_225cd to i32*
  %v3_225cd = load i32, i32* %v2_225cd, align 4
  %v1_225d4 = add i32 %v0_225c6, -44
  %v2_225d4 = inttoptr i32 %v1_225d4 to i32*
  %v3_225d4 = load i32, i32* %v2_225d4, align 4
  %v2_225da = call i32 @unknown_46252(i32 %v3_225d4, i32 %v3_225cd)
  store i32 %v2_225da, i32* @eax, align 4
  %v0_225df = call i32 @function_22648()
  ret i32 %v0_225df
}

define i32 @function_225e1() local_unnamed_addr {
dec_label_pc_225e1:
  %v0_225f5 = load i32, i32* @ebp, align 4
  %v1_225fc = add i32 %v0_225f5, -52
  %v2_225fc = inttoptr i32 %v1_225fc to i32*
  %v3_225fc = load i32, i32* %v2_225fc, align 4
  %v1_22603 = add i32 %v0_225f5, -44
  %v2_22603 = inttoptr i32 %v1_22603 to i32*
  %v3_22603 = load i32, i32* %v2_22603, align 4
  %v2_22609 = call i32 @unknown_46252(i32 %v3_22603, i32 %v3_225fc)
  store i32 %v2_22609, i32* @eax, align 4
  %v0_2260e = call i32 @function_22648()
  ret i32 %v0_2260e

; uselistorder directives
  uselistorder i32 ()* @function_22648, { 18, 17, 4, 3, 16, 15, 14, 2, 0, 1, 13, 12, 11, 10, 5, 9, 8, 7, 6 }
  uselistorder i32 (i32, i32)* @unknown_46252, { 13, 12, 4, 3, 11, 10, 9, 2, 0, 5, 1, 8, 7, 6 }
}

define i32 @function_22610(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_22610:
  %v0_22620 = load i32, i32* @ecx, align 4
  %v0_22624 = load i32, i32* @edx, align 8
  %v0_22628 = load i32, i32* @ebp, align 4
  %v1_22628 = add i32 %v0_22628, -56
  %v2_22628 = inttoptr i32 %v1_22628 to i32*
  %v3_22628 = load i32, i32* %v2_22628, align 4
  %v1_2262f = add i32 %v0_22628, -52
  %v2_2262f = inttoptr i32 %v1_2262f to i32*
  %v3_2262f = load i32, i32* %v2_2262f, align 4
  %v1_22636 = add i32 %v0_22628, -48
  %v2_22636 = inttoptr i32 %v1_22636 to i32*
  %v3_22636 = load i32, i32* %v2_22636, align 4
  %v1_2263d = add i32 %v0_22628, -44
  %v2_2263d = inttoptr i32 %v1_2263d to i32*
  %v3_2263d = load i32, i32* %v2_2263d, align 4
  %sext = mul i32 %v0_22624, 16777216
  %v8_22643 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_22620, 16777216
  %v9_22643 = sdiv i32 %sext1, 16777216
  %v10_22643 = call i32 @unknown_462ac(i32 %v3_2263d, i32 %v3_22636, i32 %v3_2262f, i32 %v3_22628, i32 %v8_22643, i32 %v9_22643, i32 0, i32 0)
  ret i32 %v10_22643

; uselistorder directives
  uselistorder i32 %v0_22628, { 1, 0, 2, 3 }
}

define i32 @function_22648() local_unnamed_addr {
dec_label_pc_22648:
  %v0_22648 = load i32, i32* @ebp, align 4
  %v1_22648 = add i32 %v0_22648, -28
  %v2_22648 = inttoptr i32 %v1_22648 to i32*
  %v3_22648 = load i32, i32* %v2_22648, align 4
  %v1_2264b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2264b = icmp eq i32 %v1_2264b, %v3_22648
  br i1 %v3_2264b, label %bb, label %dec_label_pc_22648.dec_label_pc_22654_crit_edge

dec_label_pc_22648.dec_label_pc_22654_crit_edge:  ; preds = %dec_label_pc_22648
  %v2_22652.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_22654

bb:                                               ; preds = %dec_label_pc_22648
  %v1_22652 = call i32 @function_22659()
  br label %dec_label_pc_22654

dec_label_pc_22654:                               ; preds = %dec_label_pc_22648.dec_label_pc_22654_crit_edge, %bb
  %v2_22652 = phi i32 [ %v2_22652.pre, %dec_label_pc_22648.dec_label_pc_22654_crit_edge ], [ %v1_22652, %bb ]
  ret i32 %v2_22652

; uselistorder directives
  uselistorder label %dec_label_pc_22654, { 1, 0 }
}

define i32 @function_22659() local_unnamed_addr {
dec_label_pc_22659:
  %v0_22660 = load i32, i32* @eax, align 4
  ret i32 %v0_22660
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256P11CBlockIndexEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_226b4:
  %v1_226dd = call i32 @unknown_46840(i32 %arg1)
  %v10_226e2 = icmp ult i32 %v1_226dd, %arg2
  %v1_226e5 = zext i1 %v10_226e2 to i32
  %v3_226e5 = and i32 %v1_226dd, -256
  %v4_226e5 = or i32 %v1_226e5, %v3_226e5
  %v5_226e8 = icmp eq i1 %v10_226e2, false
  br i1 %v5_226e8, label %bb, label %dec_label_pc_226ec

bb:                                               ; preds = %dec_label_pc_226b4
  %v1_226ea = call i32 @function_226f1()
  br label %dec_label_pc_226ec

dec_label_pc_226ec:                               ; preds = %bb, %dec_label_pc_226b4
  %v2_226ea = phi i32 [ %v1_226ea, %bb ], [ %v4_226e5, %dec_label_pc_226b4 ]
  ret i32 %v2_226ea

; uselistorder directives
  uselistorder i1 %v10_226e2, { 1, 0 }
}

define i32 @function_226f1() local_unnamed_addr {
dec_label_pc_226f1:
  %v0_226f1 = load i32, i32* @ebp, align 4
  %v1_226f1 = add i32 %v0_226f1, -32
  %v2_226f1 = inttoptr i32 %v1_226f1 to i32*
  %v3_226f1 = load i32, i32* %v2_226f1, align 4
  %v3_226f4 = mul i32 %v3_226f1, ptrtoint (i32* @global_var_34.1820 to i32)
  ret i32 %v3_226f4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_34.1820 to i32), { 1, 2, 4, 3, 5, 6, 0, 7 }
}

define i32 @function_2270f() local_unnamed_addr {
dec_label_pc_2270f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2270f = load i32, i32* %ecx.global-to-local, align 4
  %v1_2270f = add i32 %v0_2270f, -1
  store i32 %v1_2270f, i32* %ecx.global-to-local, align 4
  %v0_22711 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22711
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_P11CBlockIndexESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22712:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22738

bb:                                               ; preds = %dec_label_pc_22712
  %v2_22736 = call i32 @function_2273d(i32 %arg1)
  br label %dec_label_pc_22738

dec_label_pc_22738:                               ; preds = %bb, %dec_label_pc_22712
  %v3_22736 = phi i32 [ %v2_22736, %bb ], [ %arg1, %dec_label_pc_22712 ]
  ret i32 %v3_22736
}

define i32 @function_2273d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2273d:
  %v0_2273e = load i32, i32* @eax, align 4
  ret i32 %v0_2273e
}

define i32 @_ZNSaISt4pairIK7uint256P11CBlockIndexEEC1ISt13_Rb_tree_nodeIS4_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22740:
  %v1_22763 = call i32 @unknown_468fc(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22774

bb:                                               ; preds = %dec_label_pc_22740
  %v1_22772 = call i32 @function_22779()
  br label %dec_label_pc_22774

dec_label_pc_22774:                               ; preds = %bb, %dec_label_pc_22740
  %v2_22772 = phi i32 [ %v1_22772, %bb ], [ 0, %dec_label_pc_22740 ]
  ret i32 %v2_22772
}

define i32 @function_22779() local_unnamed_addr {
dec_label_pc_22779:
  %v0_2277a = load i32, i32* @eax, align 4
  ret i32 %v0_2277a
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256P11CBlockIndexEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2277c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2279f

bb:                                               ; preds = %dec_label_pc_2277c
  %v2_2279d = call i32 @function_227a4(i32 %arg1)
  br label %dec_label_pc_2279f

dec_label_pc_2279f:                               ; preds = %bb, %dec_label_pc_2277c
  %v3_2279d = phi i32 [ %v2_2279d, %bb ], [ 0, %dec_label_pc_2277c ]
  ret i32 %v3_2279d
}

define i32 @function_227a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_227a4:
  %v0_227a5 = load i32, i32* @eax, align 4
  ret i32 %v0_227a5
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256P11CBlockIndexEEE10deallocateEPS8_j(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_227a6:
  ret i32 %arg2
}

define i32 @function_227e4() local_unnamed_addr {
dec_label_pc_227e4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_227e4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_227e4 = add i32 %v0_227e4, -1
  store i32 %v1_227e4, i32* %ecx.global-to-local, align 4
  %v0_227e6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_227e6
}

define i32 @_Z12SerReadWriteI11CDataStreamiEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_227e7:
  ret i32 %arg1
}

define i32 @function_22832(i32 %arg1) local_unnamed_addr {
dec_label_pc_22832:
  %v0_22834 = call i32 @unknown_36a67()
  store i32 0, i32* @eax, align 4
  %v0_2283e = load i32, i32* @ebp, align 4
  %v1_2283e = add i32 %v0_2283e, -12
  %v2_2283e = inttoptr i32 %v1_2283e to i32*
  %v3_2283e = load i32, i32* %v2_2283e, align 4
  %v1_22841 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22841 = icmp eq i32 %v1_22841, %v3_2283e
  br i1 %v3_22841, label %bb, label %dec_label_pc_2284a

bb:                                               ; preds = %dec_label_pc_22832
  %v1_22848 = call i32 @function_2284f()
  br label %dec_label_pc_2284a

dec_label_pc_2284a:                               ; preds = %bb, %dec_label_pc_22832
  %v2_22848 = phi i32 [ %v1_22848, %bb ], [ 0, %dec_label_pc_22832 ]
  ret i32 %v2_22848
}

define i32 @function_2284f() local_unnamed_addr {
dec_label_pc_2284f:
  %v0_22850 = load i32, i32* @eax, align 4
  ret i32 %v0_22850
}

define i32 @_Z12SerReadWriteI11CDataStream7uint256EjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_22851:
  %v4_2289c = call i32 @unknown_46a37(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_228b2

bb:                                               ; preds = %dec_label_pc_22851
  %v1_228b0 = call i32 @function_228b7()
  br label %dec_label_pc_228b2

dec_label_pc_228b2:                               ; preds = %bb, %dec_label_pc_22851
  %v2_228b0 = phi i32 [ %v1_228b0, %bb ], [ 0, %dec_label_pc_22851 ]
  ret i32 %v2_228b0
}

define i32 @function_228b7() local_unnamed_addr {
dec_label_pc_228b7:
  %v0_228b8 = load i32, i32* @eax, align 4
  ret i32 %v0_228b8
}

define i32 @_Z16WriteCompactSizeI11CDataStreamEvRT_y(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_228b9:
  store i32 0, i32* @eax, align 4
  store i1 false, i1* @cf, align 1
  %v10_228dc = icmp eq i32 %arg3, 0
  br i1 %v10_228dc, label %dec_label_pc_228e2, label %dec_label_pc_2292f

dec_label_pc_228e2:                               ; preds = %dec_label_pc_228b9
  %v9_228e8 = icmp ult i16 %arg2, 252
  store i1 %v9_228e8, i1* @cf, align 1
  %tmp117 = icmp ult i16 %arg2, 253
  br i1 %tmp117, label %dec_label_pc_228f1, label %dec_label_pc_2292f

dec_label_pc_228f1:                               ; preds = %dec_label_pc_228e2
  %v1_2290c = call i32 @unknown_303fd(i32 %arg1)
  %v0_22911 = call i32 @function_22a31()
  ret i32 %v0_22911

dec_label_pc_2292f:                               ; preds = %dec_label_pc_228b9, %dec_label_pc_228e2
  %v0_22916 = call i32 @function_26dd2()
  %v1_2291d = urem i32 %v0_22916, 65536
  store i32 %v1_2291d, i32* @eax, align 4
  %v10_2292f = icmp eq i32 %arg3, 0
  %.pre116 = sext i16 %arg2 to i32
  br i1 %v10_2292f, label %dec_label_pc_22934, label %bb

dec_label_pc_22934:                               ; preds = %dec_label_pc_2292f
  %v11_22934 = icmp ult i32 %v1_2291d, %.pre116
  %v1_22937 = icmp eq i1 %v11_22934, false
  br i1 %v1_22937, label %dec_label_pc_2293e, label %bb

dec_label_pc_2293e:                               ; preds = %dec_label_pc_22934
  br label %dec_label_pc_22942

bb:                                               ; preds = %dec_label_pc_2292f, %dec_label_pc_22934
  %v1_22940 = call i32 @function_22986()
  br label %dec_label_pc_22942

dec_label_pc_22942:                               ; preds = %dec_label_pc_2293e, %bb
  ret i32 %.pre116

; uselistorder directives
  uselistorder i32 %v1_2291d, { 1, 0 }
  uselistorder label %dec_label_pc_22942, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_2292f, { 1, 0 }
}

define i32 @function_22952(i32 %arg1) local_unnamed_addr {
dec_label_pc_22952:
  %v2_22952 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_22952 = load i32, i32* @eax, align 4
  %v4_22952 = trunc i32 %v3_22952 to i8
  %v5_22952 = add i8 %v4_22952, %v2_22952
  %v21_22952 = inttoptr i32 %v3_22952 to i8*
  store i8 %v5_22952, i8* %v21_22952, align 1
  %v0_22954 = load i32, i32* @ebp, align 4
  %v1_22954 = add i32 %v0_22954, 1149891397
  %v2_22954 = inttoptr i32 %v1_22954 to i8*
  %v3_22954 = load i8, i8* %v2_22954, align 1
  %v4_22954 = load i32, i32* @ecx, align 4
  %v5_22954 = trunc i32 %v4_22954 to i8
  %v6_22954 = add i8 %v5_22954, %v3_22954
  store i8 %v6_22954, i8* %v2_22954, align 1
  store i1 false, i1* @cf, align 1
  %v0_2295c = load i32, i32* @ebp, align 4
  %v1_2295c = add i32 %v0_2295c, -28
  %v2_2295c = inttoptr i32 %v1_2295c to i32*
  %v3_2295c = load i32, i32* %v2_2295c, align 4
  %v1_22962 = call i32 @unknown_303fd(i32 %v3_2295c)
  %v0_2296f = load i32, i32* @ebp, align 4
  %v1_22976 = add i32 %v0_2296f, -28
  %v2_22976 = inttoptr i32 %v1_22976 to i32*
  %v3_22976 = load i32, i32* %v2_22976, align 4
  ret i32 %v3_22976
}

define i32 @function_2297c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2297c:
  %v1_2297c = call i32 @unknown_303fd(i32 ptrtoint (i32* @0 to i32))
  %v0_22981 = call i32 @function_22a31()
  ret i32 %v0_22981
}

define i32 @function_22986() local_unnamed_addr {
dec_label_pc_2299a:
  %v1_22995 = load i32, i32* @ebp, align 4
  %v2_22995 = add i32 %v1_22995, -36
  %v3_22995 = inttoptr i32 %v2_22995 to i32*
  %v4_22995 = load i32, i32* %v3_22995, align 4
  %v10_2299a = icmp eq i32 %v4_22995, 0
  br i1 %v10_2299a, label %dec_label_pc_2299f, label %bb

dec_label_pc_2299f:                               ; preds = %dec_label_pc_2299a
  %v0_2299f = load i32, i32* @eax, align 4
  %v2_2299f = add i32 %v1_22995, -40
  %v3_2299f = inttoptr i32 %v2_2299f to i32*
  %v4_2299f = load i32, i32* %v3_2299f, align 4
  %v10_2299f = icmp ult i32 %v0_2299f, %v4_2299f
  %v1_229a2 = icmp eq i1 %v10_2299f, false
  br i1 %v1_229a2, label %dec_label_pc_229a9, label %bb

dec_label_pc_229a9:                               ; preds = %dec_label_pc_2299f
  br label %dec_label_pc_229ad

bb:                                               ; preds = %dec_label_pc_2299a, %dec_label_pc_2299f
  %v1_229ab = call i32 @function_229ed()
  store i32 %v1_229ab, i32* @eax, align 4
  %v0_229ad.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_229ad

dec_label_pc_229ad:                               ; preds = %dec_label_pc_229a9, %bb
  %v0_229ad = phi i32 [ %v0_229ad.pre, %bb ], [ %v1_22995, %dec_label_pc_229a9 ]
  %v1_229ad = add i32 %v0_229ad, -13
  %v2_229ad = inttoptr i32 %v1_229ad to i8*
  store i8 -2, i8* %v2_229ad, align 1
  %v3_229ad = load i32, i32* @eax, align 4
  ret i32 %v3_229ad

; uselistorder directives
  uselistorder label %dec_label_pc_229ad, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_229b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_229b2:
  %eax.global-to-local = alloca i32, align 4
  %v0_229b2 = load i32, i32* @ebp, align 4
  %v1_229b2 = add i32 %v0_229b2, 1
  store i32 %v1_229b2, i32* @ebp, align 4
  %v0_229b9 = load i32, i32* @eax, align 4
  %v11_229b9 = and i32 %v0_229b9, -248
  store i32 %v11_229b9, i32* %eax.global-to-local, align 4
  %v1_229bb = inttoptr i32 %v11_229b9 to i32*
  %v2_229bb = load i32, i32* %v1_229bb, align 8
  %v4_229bb = add i32 %v2_229bb, %v11_229b9
  store i32 %v4_229bb, i32* %v1_229bb, align 8
  %v0_229bd = load i32, i32* %eax.global-to-local, align 4
  %v1_229bd = inttoptr i32 %v0_229bd to i8*
  %v2_229bd = load i8, i8* %v1_229bd, align 1
  %v4_229bd = trunc i32 %v0_229bd to i8
  %v5_229bd = add i8 %v2_229bd, %v4_229bd
  store i8 %v5_229bd, i8* %v1_229bd, align 1
  %v0_229bf = load i32, i32* @ebp, align 4
  %v1_229bf = add i32 %v0_229bf, -13
  store i32 %v1_229bf, i32* %eax.global-to-local, align 4
  %v1_229c6 = add i32 %v0_229bf, -28
  %v2_229c6 = inttoptr i32 %v1_229c6 to i32*
  %v3_229c6 = load i32, i32* %v2_229c6, align 4
  store i32 %v3_229c6, i32* %eax.global-to-local, align 4
  %v1_229cc = call i32 @unknown_303fd(i32 %v3_229c6)
  %v0_229d9 = load i32, i32* @ebp, align 4
  %v1_229d9 = add i32 %v0_229d9, -24
  store i32 %v1_229d9, i32* %eax.global-to-local, align 4
  %v1_229e0 = add i32 %v0_229d9, -28
  %v2_229e0 = inttoptr i32 %v1_229e0 to i32*
  %v3_229e0 = load i32, i32* %v2_229e0, align 4
  store i32 %v3_229e0, i32* %eax.global-to-local, align 4
  %v1_229e6 = call i32 @unknown_303fd(i32 %v3_229e0)
  store i32 %v1_229e6, i32* %eax.global-to-local, align 4
  %v0_229eb = call i32 @function_22a31()
  store i32 %v0_229eb, i32* %eax.global-to-local, align 4
  ret i32 %v0_229eb

; uselistorder directives
  uselistorder i32 %v11_229b9, { 0, 2, 1 }
}

define i32 @function_229ed() local_unnamed_addr {
dec_label_pc_229ed:
  %edx.global-to-local = alloca i32, align 4
  %v0_229ed = load i32, i32* @ebp, align 4
  %v1_229ed = add i32 %v0_229ed, -13
  %v2_229ed = inttoptr i32 %v1_229ed to i8*
  store i8 -1, i8* %v2_229ed, align 1
  %v0_229f1 = load i32, i32* @ebp, align 4
  %v1_229f1 = add i32 %v0_229f1, -40
  %v2_229f1 = inttoptr i32 %v1_229f1 to i32*
  %v3_229f1 = load i32, i32* %v2_229f1, align 4
  %v1_229f4 = add i32 %v0_229f1, -36
  %v2_229f4 = inttoptr i32 %v1_229f4 to i32*
  %v3_229f4 = load i32, i32* %v2_229f4, align 4
  store i32 %v3_229f4, i32* %edx.global-to-local, align 8
  %v2_229f7 = add i32 %v0_229f1, -24
  %v3_229f7 = inttoptr i32 %v2_229f7 to i32*
  store i32 %v3_229f1, i32* %v3_229f7, align 4
  %v0_229fa = load i32, i32* %edx.global-to-local, align 8
  %v1_229fa = load i32, i32* @ebp, align 4
  %v2_229fa = add i32 %v1_229fa, -20
  %v3_229fa = inttoptr i32 %v2_229fa to i32*
  store i32 %v0_229fa, i32* %v3_229fa, align 4
  %v0_22a05 = load i32, i32* @ebp, align 4
  %v1_22a0c = add i32 %v0_22a05, -28
  %v2_22a0c = inttoptr i32 %v1_22a0c to i32*
  %v3_22a0c = load i32, i32* %v2_22a0c, align 4
  %v1_22a12 = call i32 @unknown_303fd(i32 %v3_22a0c)
  %v0_22a1f = load i32, i32* @ebp, align 4
  %v1_22a26 = add i32 %v0_22a1f, -28
  %v2_22a26 = inttoptr i32 %v1_22a26 to i32*
  %v3_22a26 = load i32, i32* %v2_22a26, align 4
  %v1_22a2c = call i32 @unknown_303fd(i32 %v3_22a26)
  ret i32 %v1_22a2c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_303fd, { 6, 5, 1, 0, 2, 3, 4 }
}

define i32 @function_22a31() local_unnamed_addr {
dec_label_pc_22a31:
  %v0_22a31 = load i32, i32* @ebp, align 4
  %v1_22a31 = add i32 %v0_22a31, -12
  %v2_22a31 = inttoptr i32 %v1_22a31 to i32*
  %v3_22a31 = load i32, i32* %v2_22a31, align 4
  %v1_22a34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22a34 = xor i32 %v1_22a34, %v3_22a31
  %v3_22a34 = icmp eq i32 %v2_22a34, 0
  store i32 %v2_22a34, i32* @eax, align 4
  br i1 %v3_22a34, label %bb, label %dec_label_pc_22a3d

bb:                                               ; preds = %dec_label_pc_22a31
  %v1_22a3b = call i32 @function_22a42()
  br label %dec_label_pc_22a3d

dec_label_pc_22a3d:                               ; preds = %bb, %dec_label_pc_22a31
  %v3_22a3b = phi i32 [ %v1_22a3b, %bb ], [ %v2_22a34, %dec_label_pc_22a31 ]
  ret i32 %v3_22a3b
}

define i32 @function_22a42() local_unnamed_addr {
dec_label_pc_22a42:
  %v0_22a43 = load i32, i32* @eax, align 4
  ret i32 %v0_22a43
}

define i32 @_Z9SerializeI11CDataStream12CTransactionEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22a44:
  %v8_22a88 = call i32 @unknown_46c86(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22a99

bb:                                               ; preds = %dec_label_pc_22a44
  %v1_22a97 = call i32 @function_22a9e()
  br label %dec_label_pc_22a99

dec_label_pc_22a99:                               ; preds = %bb, %dec_label_pc_22a44
  %v2_22a97 = phi i32 [ %v1_22a97, %bb ], [ 0, %dec_label_pc_22a44 ]
  ret i32 %v2_22a97

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22a9e() local_unnamed_addr {
dec_label_pc_22a9e:
  %v0_22a9f = load i32, i32* @eax, align 4
  ret i32 %v0_22a9f
}

define i32 @_ZN5boost6detail7variant12cast_storageISsEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22aa0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22ac6

bb:                                               ; preds = %dec_label_pc_22aa0
  %v2_22ac4 = call i32 @function_22acb(i32 %arg1)
  br label %dec_label_pc_22ac6

dec_label_pc_22ac6:                               ; preds = %bb, %dec_label_pc_22aa0
  %v3_22ac4 = phi i32 [ %v2_22ac4, %bb ], [ %arg1, %dec_label_pc_22aa0 ]
  ret i32 %v3_22ac4
}

define i32 @function_22acb(i32 %arg1) local_unnamed_addr {
dec_label_pc_22acb:
  %v0_22acc = load i32, i32* @eax, align 4
  ret i32 %v0_22acc
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitISsEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22ace:
  ret i32 %arg2
}

define i32 @function_22b0c() local_unnamed_addr {
dec_label_pc_22b0c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22b0c = load i32, i32* %ecx.global-to-local, align 4
  %v1_22b0c = add i32 %v0_22b0c, -1
  store i32 %v1_22b0c, i32* %ecx.global-to-local, align 4
  %v0_22b0e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22b0e
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b0f:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22b35

bb:                                               ; preds = %dec_label_pc_22b0f
  %v2_22b33 = call i32 @function_22b3a(i32 %arg1)
  br label %dec_label_pc_22b35

dec_label_pc_22b35:                               ; preds = %bb, %dec_label_pc_22b0f
  %v3_22b33 = phi i32 [ %v2_22b33, %bb ], [ %arg1, %dec_label_pc_22b0f ]
  ret i32 %v3_22b33
}

define i32 @function_22b3a(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b3a:
  %v0_22b3b = load i32, i32* @eax, align 4
  ret i32 %v0_22b3b
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22b3c:
  %v1_22b65 = call i32 @unknown_46e88(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22b76

bb:                                               ; preds = %dec_label_pc_22b3c
  %v1_22b74 = call i32 @function_22b7b()
  br label %dec_label_pc_22b76

dec_label_pc_22b76:                               ; preds = %bb, %dec_label_pc_22b3c
  %v2_22b74 = phi i32 [ %v1_22b74, %bb ], [ 0, %dec_label_pc_22b3c ]
  ret i32 %v2_22b74
}

define i32 @function_22b7b() local_unnamed_addr {
dec_label_pc_22b7b:
  %v0_22b7c = load i32, i32* @eax, align 4
  ret i32 %v0_22b7c
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERT_Pv() local_unnamed_addr {
dec_label_pc_22b7d:
  %eax.global-to-local = alloca i32, align 4
  %v17_22b80 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_22b80
}

define i32 @function_22b84(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b84:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_22b84 = load i32, i32* @ebp, align 4
  %v1_22b84 = add i32 %v0_22b84, 1
  store i32 %v1_22b84, i32* @ebp, align 4
  %v0_22b85 = load i32, i32* @ecx, align 4
  %v1_22b85 = add i32 %v0_22b85, -1587157947
  %v2_22b85 = inttoptr i32 %v1_22b85 to i8*
  %v3_22b85 = load i8, i8* %v2_22b85, align 1
  %v5_22b85 = trunc i32 %v0_22b85 to i8
  %v6_22b85 = or i8 %v3_22b85, %v5_22b85
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_22b85, i8* %v2_22b85, align 1
  %v0_22b8b = load i32, i32* @eax, align 4
  %v1_22b8b = trunc i32 %v0_22b8b to i8
  %v2_22b8b = load i1, i1* %cf.global-to-local, align 1
  %v3_22b8b = zext i1 %v2_22b8b to i8
  %v4_22b8b = add i8 %v3_22b8b, %v1_22b8b
  %v19_22b8b = icmp ule i8 %v4_22b8b, %v1_22b8b
  %v21_22b8b = icmp eq i1 %v2_22b8b, %v19_22b8b
  store i1 %v21_22b8b, i1* %cf.global-to-local, align 1
  %v22_22b8b = zext i8 %v4_22b8b to i32
  %v24_22b8b = and i32 %v0_22b8b, -256
  %v25_22b8b = or i32 %v22_22b8b, %v24_22b8b
  store i32 %v25_22b8b, i32* %eax.global-to-local, align 4
  %v1_22b8d = inttoptr i32 %v25_22b8b to i8*
  %v2_22b8d = load i8, i8* %v1_22b8d, align 1
  %v5_22b8d = add i8 %v2_22b8d, %v4_22b8b
  store i8 %v5_22b8d, i8* %v1_22b8d, align 1
  %v0_22b8f = load i32, i32* %eax.global-to-local, align 4
  %v1_22b8f = load i32, i32* @ebp, align 4
  %v2_22b8f = add i32 %v1_22b8f, -12
  %v3_22b8f = inttoptr i32 %v2_22b8f to i32*
  store i32 %v0_22b8f, i32* %v3_22b8f, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_22b94 = load i32, i32* @ebp, align 4
  %v1_22b94 = add i32 %v0_22b94, -28
  %v2_22b94 = inttoptr i32 %v1_22b94 to i32*
  %v3_22b94 = load i32, i32* %v2_22b94, align 4
  store i32 %v3_22b94, i32* @eax, align 4
  %v1_22b97 = add i32 %v0_22b94, -12
  %v2_22b97 = inttoptr i32 %v1_22b97 to i32*
  %v3_22b97 = load i32, i32* %v2_22b97, align 4
  %v1_22b9a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_22b9a = icmp eq i32 %v1_22b9a, %v3_22b97
  br i1 %v3_22b9a, label %bb, label %dec_label_pc_22ba3

bb:                                               ; preds = %dec_label_pc_22b84
  %v1_22ba1 = call i32 @function_22ba8()
  store i32 %v1_22ba1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22ba3

dec_label_pc_22ba3:                               ; preds = %bb, %dec_label_pc_22b84
  %v2_22ba1 = phi i32 [ %v1_22ba1, %bb ], [ %v3_22b94, %dec_label_pc_22b84 ]
  ret i32 %v2_22ba1

; uselistorder directives
  uselistorder i8 %v4_22b8b, { 0, 2, 1 }
  uselistorder i8 %v1_22b8b, { 1, 0 }
}

define i32 @function_22ba8() local_unnamed_addr {
dec_label_pc_22ba8:
  %v0_22ba9 = load i32, i32* @eax, align 4
  ret i32 %v0_22ba9
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22baa:
  %v1_22bd3 = call i32 @unknown_46f2e(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22be4

bb:                                               ; preds = %dec_label_pc_22baa
  %v1_22be2 = call i32 @function_22be9()
  br label %dec_label_pc_22be4

dec_label_pc_22be4:                               ; preds = %bb, %dec_label_pc_22baa
  %v2_22be2 = phi i32 [ %v1_22be2, %bb ], [ 0, %dec_label_pc_22baa ]
  ret i32 %v2_22be2
}

define i32 @function_22be9() local_unnamed_addr {
dec_label_pc_22be9:
  %v0_22bea = load i32, i32* @eax, align 4
  ret i32 %v0_22bea
}

define i32 @_ZN5boost6detail7variant12cast_storageIbEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22beb:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22c11

bb:                                               ; preds = %dec_label_pc_22beb
  %v2_22c0f = call i32 @function_22c16(i32 %arg1)
  br label %dec_label_pc_22c11

dec_label_pc_22c11:                               ; preds = %bb, %dec_label_pc_22beb
  %v3_22c0f = phi i32 [ %v2_22c0f, %bb ], [ %arg1, %dec_label_pc_22beb ]
  ret i32 %v3_22c0f
}

define i32 @function_22c16(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c16:
  %v0_22c17 = load i32, i32* @eax, align 4
  ret i32 %v0_22c17
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitIbEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22c18:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22c47

bb:                                               ; preds = %dec_label_pc_22c18
  %v4_22c45 = call i32 @function_22c4c(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_22c47

dec_label_pc_22c47:                               ; preds = %bb, %dec_label_pc_22c18
  %v5_22c45 = phi i32 [ %v4_22c45, %bb ], [ 0, %dec_label_pc_22c18 ]
  ret i32 %v5_22c45
}

define i32 @function_22c4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22c4c:
  %v0_22c4d = load i32, i32* @eax, align 4
  ret i32 %v0_22c4d
}

define i32 @_ZN5boost6detail7variant12cast_storageIxEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c4e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22c74

bb:                                               ; preds = %dec_label_pc_22c4e
  %v2_22c72 = call i32 @function_22c79(i32 %arg1)
  br label %dec_label_pc_22c74

dec_label_pc_22c74:                               ; preds = %bb, %dec_label_pc_22c4e
  %v3_22c72 = phi i32 [ %v2_22c72, %bb ], [ %arg1, %dec_label_pc_22c4e ]
  ret i32 %v3_22c72
}

define i32 @function_22c79(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c79:
  %v0_22c7a = load i32, i32* @eax, align 4
  ret i32 %v0_22c7a
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitIxEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22c7c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22cab

bb:                                               ; preds = %dec_label_pc_22c7c
  %v4_22ca9 = call i32 @function_22cb0(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_22cab

dec_label_pc_22cab:                               ; preds = %bb, %dec_label_pc_22c7c
  %v5_22ca9 = phi i32 [ %v4_22ca9, %bb ], [ 0, %dec_label_pc_22c7c ]
  ret i32 %v5_22ca9
}

define i32 @function_22cb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22cb0:
  %v0_22cb1 = load i32, i32* @eax, align 4
  ret i32 %v0_22cb1
}

define i32 @_ZN5boost6detail7variant12cast_storageIdEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22cb2:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22cd8

bb:                                               ; preds = %dec_label_pc_22cb2
  %v2_22cd6 = call i32 @function_22cdd(i32 %arg1)
  br label %dec_label_pc_22cd8

dec_label_pc_22cd8:                               ; preds = %bb, %dec_label_pc_22cb2
  %v3_22cd6 = phi i32 [ %v2_22cd6, %bb ], [ %arg1, %dec_label_pc_22cb2 ]
  ret i32 %v3_22cd6
}

define i32 @function_22cdd(i32 %arg1) local_unnamed_addr {
dec_label_pc_22cdd:
  %v0_22cde = load i32, i32* @eax, align 4
  ret i32 %v0_22cde
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitIdEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22ce0:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22d0f

bb:                                               ; preds = %dec_label_pc_22ce0
  %v4_22d0d = call i32 @function_22d14(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_22d0f

dec_label_pc_22d0f:                               ; preds = %bb, %dec_label_pc_22ce0
  %v5_22d0d = phi i32 [ %v4_22d0d, %bb ], [ 0, %dec_label_pc_22ce0 ]
  ret i32 %v5_22d0d
}

define i32 @function_22d14(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22d14:
  %v0_22d15 = load i32, i32* @eax, align 4
  ret i32 %v0_22d15
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_intoD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d16:
  %v1_22d33 = call i32 @unknown_47116(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22d44

bb:                                               ; preds = %dec_label_pc_22d16
  %v1_22d42 = call i32 @function_22d49()
  br label %dec_label_pc_22d44

dec_label_pc_22d44:                               ; preds = %bb, %dec_label_pc_22d16
  %v2_22d42 = phi i32 [ %v1_22d42, %bb ], [ 0, %dec_label_pc_22d16 ]
  ret i32 %v2_22d42
}

define i32 @function_22d49() local_unnamed_addr {
dec_label_pc_22d49:
  %v0_22d4a = load i32, i32* @eax, align 4
  ret i32 %v0_22d4a
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructISJ_EEvRT_lN4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_22d4c:
  %stack_var_-20 = alloca i32, align 4
  %v1_22d7a = add i32 %arg1, 4
  %v1_22d80 = call i32 @unknown_3b522(i32 %v1_22d7a)
  %v2_22d89 = ptrtoint i32* %stack_var_-20 to i32
  %v2_22d8f = call i32 @unknown_47108(i32 %v2_22d89, i32 %v1_22d80)
  %v2_22da1 = call i32 @unknown_47176(i32 %arg2, i32 %v2_22d89)
  %v2_22db0 = call i32 @unknown_3d1f6(i32 %arg1, i32 %v2_22da1)
  %v1_22dbb = call i32 @unknown_45a62(i32 %v2_22d89)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22dcc

bb:                                               ; preds = %dec_label_pc_22d4c
  %v1_22dca = call i32 @function_22dea()
  store i32 %v1_22dca, i32* @eax, align 4
  br label %dec_label_pc_22dcc

dec_label_pc_22dcc:                               ; preds = %bb, %dec_label_pc_22d4c
  %v0_22dcc = call i32 @function_22de5()
  ret i32 %v0_22dcc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22dcf() local_unnamed_addr {
dec_label_pc_22dcf:
  %eax.global-to-local = alloca i32, align 4
  %v0_22dcf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22dcf
}

define i32 @function_22de5() local_unnamed_addr {
dec_label_pc_22de5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22dea() local_unnamed_addr {
dec_label_pc_22dea:
  %v0_22def = load i32, i32* @eax, align 4
  ret i32 %v0_22def
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14assign_storageEPvEENT_11result_typeEiiRSN_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22df0:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_22e29 = load i32, i32* %ecx.global-to-local, align 4
  %v0_22e2d = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_22e2d, 16777216
  %v12_22e4c = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_22e29, 16777216
  %v13_22e4c = sdiv i32 %sext1, 16777216
  %v14_22e4c = call i32 @unknown_47288(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_22e4c, i32 %v13_22e4c, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22e5d

bb:                                               ; preds = %dec_label_pc_22df0
  %v1_22e5b = call i32 @function_22e62()
  br label %dec_label_pc_22e5d

dec_label_pc_22e5d:                               ; preds = %bb, %dec_label_pc_22df0
  %v2_22e5b = phi i32 [ %v1_22e5b, %bb ], [ 0, %dec_label_pc_22df0 ]
  ret i32 %v2_22e5b

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22e62() local_unnamed_addr {
dec_label_pc_22e62:
  %v0_22e63 = load i32, i32* @eax, align 4
  ret i32 %v0_22e63
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSJ_8assignerEPKvEENT_11result_typeEiiRSO_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22e64:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_22e9d = load i32, i32* %ecx.global-to-local, align 4
  %v0_22ea1 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_22ea1, 16777216
  %v12_22ec0 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_22e9d, 16777216
  %v13_22ec0 = sdiv i32 %sext1, 16777216
  %v14_22ec0 = call i32 @unknown_47828(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_22ec0, i32 %v13_22ec0, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22ed1

bb:                                               ; preds = %dec_label_pc_22e64
  %v1_22ecf = call i32 @function_22ed6()
  br label %dec_label_pc_22ed1

dec_label_pc_22ed1:                               ; preds = %bb, %dec_label_pc_22e64
  %v2_22ecf = phi i32 [ %v1_22ecf, %bb ], [ 0, %dec_label_pc_22e64 ]
  ret i32 %v2_22ecf

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22ed6() local_unnamed_addr {
dec_label_pc_22ed6:
  %v0_22ed7 = load i32, i32* @eax, align 4
  ret i32 %v0_22ed7
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22ed8:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_22f02 = call i32 @unknown_47dc8(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_22f13 = add i32 %tmp103, 4
  %v2_22f13 = inttoptr i32 %v1_22f13 to i32*
  store i32 0, i32* %v2_22f13, align 4
  %v1_22f1d = add i32 %tmp103, 8
  %v2_22f1d = inttoptr i32 %v1_22f1d to i32*
  store i32 0, i32* %v2_22f1d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22f30

bb:                                               ; preds = %dec_label_pc_22ed8
  %v1_22f2e = call i32 @function_22f35()
  br label %dec_label_pc_22f30

dec_label_pc_22f30:                               ; preds = %bb, %dec_label_pc_22ed8
  %v2_22f2e = phi i32 [ %v1_22f2e, %bb ], [ 0, %dec_label_pc_22ed8 ]
  ret i32 %v2_22f2e

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_22f35() local_unnamed_addr {
dec_label_pc_22f35:
  %v0_22f36 = load i32, i32* @eax, align 4
  ret i32 %v0_22f36
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22f38:
  %v1_22f58 = inttoptr i32 %arg2 to i32*
  %v2_22f58 = load i32, i32* %v1_22f58, align 4
  store i32 %v2_22f58, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22f6b

bb:                                               ; preds = %dec_label_pc_22f38
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_22f69 = call i32 @function_22f70(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_22f6b

dec_label_pc_22f6b:                               ; preds = %bb, %dec_label_pc_22f38
  %v4_22f69 = phi i32 [ %v3_22f69, %bb ], [ 0, %dec_label_pc_22f38 ]
  ret i32 %v4_22f69

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22f70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22f70:
  %v0_22f71 = load i32, i32* @eax, align 4
  ret i32 %v0_22f71
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_ET0_T_SF_SE_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22f72:
  %v3_22fa9 = call i32 @unknown_47ea4(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_22fa9
}

define i32 @function_22fb5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22fb5:
  %v2_22fb5 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_22fb5 = load i32, i32* @eax, align 4
  %v4_22fb5 = trunc i32 %v3_22fb5 to i8
  %v5_22fb5 = add i8 %v4_22fb5, %v2_22fb5
  %v21_22fb5 = inttoptr i32 %v3_22fb5 to i8*
  store i8 %v5_22fb5, i8* %v21_22fb5, align 1
  %v0_22fb7 = load i32, i32* @ebp, align 4
  %v1_22fb7 = load i32, i32* @eax, align 4
  %v3_22fb7 = add i32 %v0_22fb7, -24
  %v4_22fb7 = add i32 %v3_22fb7, %v1_22fb7
  %v5_22fb7 = inttoptr i32 %v4_22fb7 to i8*
  %v6_22fb7 = load i8, i8* %v5_22fb7, align 1
  %v7_22fb7 = load i32, i32* @edx, align 8
  %v8_22fb7 = udiv i32 %v7_22fb7, 256
  %v9_22fb7 = trunc i32 %v8_22fb7 to i8
  %v10_22fb7 = add i8 %v9_22fb7, %v6_22fb7
  store i8 %v10_22fb7, i8* %v5_22fb7, align 1
  %v31_22fb7 = load i32, i32* @eax, align 4
  ret i32 %v31_22fb7
}

define i32 @function_22fbe() local_unnamed_addr {
dec_label_pc_22fbe:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22fbe = load i32, i32* %ecx.global-to-local, align 4
  %v1_22fbe = add i32 %v0_22fbe, -1
  store i32 %v1_22fbe, i32* %ecx.global-to-local, align 4
  %v0_22fc0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22fc0
}

define i32 @_ZN5boost6detail7variant12cast_storageISsEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22fc1:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22fe7

bb:                                               ; preds = %dec_label_pc_22fc1
  %v2_22fe5 = call i32 @function_22fec(i32 %arg1)
  br label %dec_label_pc_22fe7

dec_label_pc_22fe7:                               ; preds = %bb, %dec_label_pc_22fc1
  %v3_22fe5 = phi i32 [ %v2_22fe5, %bb ], [ %arg1, %dec_label_pc_22fc1 ]
  ret i32 %v3_22fe5
}

define i32 @function_22fec(i32 %arg1) local_unnamed_addr {
dec_label_pc_22fec:
  %v0_22fed = load i32, i32* @eax, align 4
  ret i32 %v0_22fed
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitISsEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22fee:
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %tmp105, i32* @eax, align 4
  %v2_23017 = load i32, i32* %arg1, align 4
  %v2_23024 = call i32 @function_27234(i32 4, i32 %v2_23017)
  %v1_2302b = icmp eq i32 %v2_23024, 0
  br i1 %v1_2302b, label %bb, label %dec_label_pc_2302f

bb:                                               ; preds = %dec_label_pc_22fee
  %v1_2302d = call i32 @function_23058()
  br label %dec_label_pc_2302f

dec_label_pc_2302f:                               ; preds = %bb, %dec_label_pc_22fee
  ret i32 %arg2
}

define i32 @function_2303e() local_unnamed_addr {
dec_label_pc_2303e:
  %v0_2303e = call i32 @function_23058()
  ret i32 %v0_2303e

; uselistorder directives
  uselistorder i32 ()* @function_23058, { 1, 0 }
}

define i32 @function_23058() local_unnamed_addr {
dec_label_pc_23058:
  %v0_23058 = load i32, i32* @ebp, align 4
  %v1_23058 = add i32 %v0_23058, -28
  %v2_23058 = inttoptr i32 %v1_23058 to i32*
  %v3_23058 = load i32, i32* %v2_23058, align 4
  %v1_2305b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2305b = xor i32 %v1_2305b, %v3_23058
  %v3_2305b = icmp eq i32 %v2_2305b, 0
  store i32 %v2_2305b, i32* @eax, align 4
  br i1 %v3_2305b, label %bb, label %dec_label_pc_23064

bb:                                               ; preds = %dec_label_pc_23058
  %v1_23062 = call i32 @function_23069()
  br label %dec_label_pc_23064

dec_label_pc_23064:                               ; preds = %bb, %dec_label_pc_23058
  %v2_23062 = phi i32 [ %v1_23062, %bb ], [ %v2_2305b, %dec_label_pc_23058 ]
  ret i32 %v2_23062
}

define i32 @function_23069() local_unnamed_addr {
dec_label_pc_23069:
  %v0_23070 = load i32, i32* @eax, align 4
  ret i32 %v0_23070
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23071:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23097

bb:                                               ; preds = %dec_label_pc_23071
  %v2_23095 = call i32 @function_2309c(i32 %arg1)
  br label %dec_label_pc_23097

dec_label_pc_23097:                               ; preds = %bb, %dec_label_pc_23071
  %v3_23095 = phi i32 [ %v2_23095, %bb ], [ %arg1, %dec_label_pc_23071 ]
  ret i32 %v3_23095
}

define i32 @function_2309c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2309c:
  %v0_2309d = load i32, i32* @eax, align 4
  ret i32 %v0_2309d
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2309e:
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %tmp105, i32* @eax, align 4
  %v2_230c7 = load i32, i32* %arg1, align 4
  %v2_230d4 = call i32 @function_272e4(i32 4, i32 %v2_230c7)
  %v1_230db = icmp eq i32 %v2_230d4, 0
  br i1 %v1_230db, label %bb, label %dec_label_pc_230df

bb:                                               ; preds = %dec_label_pc_2309e
  %v1_230dd = call i32 @function_23108()
  br label %dec_label_pc_230df

dec_label_pc_230df:                               ; preds = %bb, %dec_label_pc_2309e
  %v2_230e9 = call i32 @unknown_48092(i32 %v2_230d4, i32 %arg2)
  %v0_230ee = call i32 @function_23108()
  ret i32 %v0_230ee

; uselistorder directives
  uselistorder i32 ()* @function_23108, { 1, 0 }
}

define i32 @function_23108() local_unnamed_addr {
dec_label_pc_23108:
  %v0_23108 = load i32, i32* @ebp, align 4
  %v1_23108 = add i32 %v0_23108, -28
  %v2_23108 = inttoptr i32 %v1_23108 to i32*
  %v3_23108 = load i32, i32* %v2_23108, align 4
  %v1_2310b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2310b = xor i32 %v1_2310b, %v3_23108
  %v3_2310b = icmp eq i32 %v2_2310b, 0
  store i32 %v2_2310b, i32* @eax, align 4
  br i1 %v3_2310b, label %bb, label %dec_label_pc_23114

bb:                                               ; preds = %dec_label_pc_23108
  %v1_23112 = call i32 @function_23119()
  br label %dec_label_pc_23114

dec_label_pc_23114:                               ; preds = %bb, %dec_label_pc_23108
  %v2_23112 = phi i32 [ %v1_23112, %bb ], [ %v2_2310b, %dec_label_pc_23108 ]
  ret i32 %v2_23112
}

define i32 @function_23119() local_unnamed_addr {
dec_label_pc_23119:
  %v0_23120 = load i32, i32* @eax, align 4
  ret i32 %v0_23120
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23121:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23147

bb:                                               ; preds = %dec_label_pc_23121
  %v2_23145 = call i32 @function_2314c(i32 %arg1)
  br label %dec_label_pc_23147

dec_label_pc_23147:                               ; preds = %bb, %dec_label_pc_23121
  %v3_23145 = phi i32 [ %v2_23145, %bb ], [ %arg1, %dec_label_pc_23121 ]
  ret i32 %v3_23145
}

define i32 @function_2314c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2314c:
  %v0_2314d = load i32, i32* @eax, align 4
  ret i32 %v0_2314d
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2314e:
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %tmp105, i32* @eax, align 4
  %v2_23177 = load i32, i32* %arg1, align 4
  %v2_23184 = call i32 @function_27394(i32 4, i32 %v2_23177)
  %v1_2318b = icmp eq i32 %v2_23184, 0
  br i1 %v1_2318b, label %bb, label %dec_label_pc_2318f

bb:                                               ; preds = %dec_label_pc_2314e
  %v1_2318d = call i32 @function_231b8()
  br label %dec_label_pc_2318f

dec_label_pc_2318f:                               ; preds = %bb, %dec_label_pc_2314e
  %v2_23199 = call i32 @unknown_481bc(i32 %v2_23184, i32 %arg2)
  %v0_2319e = call i32 @function_231b8()
  ret i32 %v0_2319e

; uselistorder directives
  uselistorder i32 ()* @function_231b8, { 1, 0 }
}

define i32 @function_231b8() local_unnamed_addr {
dec_label_pc_231b8:
  %v0_231b8 = load i32, i32* @ebp, align 4
  %v1_231b8 = add i32 %v0_231b8, -28
  %v2_231b8 = inttoptr i32 %v1_231b8 to i32*
  %v3_231b8 = load i32, i32* %v2_231b8, align 4
  %v1_231bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_231bb = xor i32 %v1_231bb, %v3_231b8
  %v3_231bb = icmp eq i32 %v2_231bb, 0
  store i32 %v2_231bb, i32* @eax, align 4
  br i1 %v3_231bb, label %bb, label %dec_label_pc_231c4

bb:                                               ; preds = %dec_label_pc_231b8
  %v1_231c2 = call i32 @function_231c9()
  br label %dec_label_pc_231c4

dec_label_pc_231c4:                               ; preds = %bb, %dec_label_pc_231b8
  %v2_231c2 = phi i32 [ %v1_231c2, %bb ], [ %v2_231bb, %dec_label_pc_231b8 ]
  ret i32 %v2_231c2
}

define i32 @function_231c9() local_unnamed_addr {
dec_label_pc_231c9:
  %v0_231d0 = load i32, i32* @eax, align 4
  ret i32 %v0_231d0
}

define i32 @_ZN5boost6detail7variant12cast_storageIbEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_231d1:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_231f7

bb:                                               ; preds = %dec_label_pc_231d1
  %v2_231f5 = call i32 @function_231fc(i32 %arg1)
  br label %dec_label_pc_231f7

dec_label_pc_231f7:                               ; preds = %bb, %dec_label_pc_231d1
  %v3_231f5 = phi i32 [ %v2_231f5, %bb ], [ %arg1, %dec_label_pc_231d1 ]
  ret i32 %v3_231f5
}

define i32 @function_231fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_231fc:
  %v0_231fd = load i32, i32* @eax, align 4
  ret i32 %v0_231fd
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitIbEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_231fe:
  store i1 false, i1* @cf, align 1
  %v2_23224 = load i32, i32* %arg1, align 4
  store i32 %v2_23224, i32* @eax, align 4
  %v2_23231 = call i32 @function_27444(i32 1, i32 %v2_23224)
  %v2_23236 = icmp eq i32 %v2_23231, 0
  br i1 %v2_23236, label %dec_label_pc_23242, label %dec_label_pc_2323a

dec_label_pc_2323a:                               ; preds = %dec_label_pc_231fe
  %tmp114 = inttoptr i32 %arg2 to i8*
  %v3_23231 = inttoptr i32 %v2_23231 to i8*
  %v2_2323d = load i8, i8* %tmp114, align 1
  store i8 %v2_2323d, i8* %v3_23231, align 1
  br label %dec_label_pc_23242

dec_label_pc_23242:                               ; preds = %dec_label_pc_2323a, %dec_label_pc_231fe
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2324e

bb:                                               ; preds = %dec_label_pc_23242
  %v1_2324c = call i32 @function_23253()
  br label %dec_label_pc_2324e

dec_label_pc_2324e:                               ; preds = %bb, %dec_label_pc_23242
  %v2_2324c = phi i32 [ %v1_2324c, %bb ], [ 0, %dec_label_pc_23242 ]
  ret i32 %v2_2324c

; uselistorder directives
  uselistorder i32 %v2_23231, { 1, 0 }
}

define i32 @function_23253() local_unnamed_addr {
dec_label_pc_23253:
  %v0_23254 = load i32, i32* @eax, align 4
  ret i32 %v0_23254
}

define i32 @_ZN5boost6detail7variant12cast_storageIxEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23255:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2327b

bb:                                               ; preds = %dec_label_pc_23255
  %v2_23279 = call i32 @function_23280(i32 %arg1)
  br label %dec_label_pc_2327b

dec_label_pc_2327b:                               ; preds = %bb, %dec_label_pc_23255
  %v3_23279 = phi i32 [ %v2_23279, %bb ], [ %arg1, %dec_label_pc_23255 ]
  ret i32 %v3_23279
}

define i32 @function_23280(i32 %arg1) local_unnamed_addr {
dec_label_pc_23280:
  %v0_23281 = load i32, i32* @eax, align 4
  ret i32 %v0_23281
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitIxEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23282:
  %edx.global-to-local = alloca i32, align 4
  %v2_232a8 = load i32, i32* %arg1, align 4
  %v1_232bc = icmp eq i32 %v2_232a8, 0
  br i1 %v1_232bc, label %dec_label_pc_232cd, label %dec_label_pc_232c0

dec_label_pc_232c0:                               ; preds = %dec_label_pc_23282
  %v1_232c3 = add i32 %arg2, 4
  %v2_232c3 = inttoptr i32 %v1_232c3 to i32*
  %v3_232c3 = load i32, i32* %v2_232c3, align 4
  store i32 %v3_232c3, i32* %edx.global-to-local, align 8
  %v1_232c6 = inttoptr i32 %arg2 to i32*
  %v2_232c6 = load i32, i32* %v1_232c6, align 4
  %v2_232c8 = inttoptr i32 %v2_232a8 to i32*
  store i32 %v2_232c6, i32* %v2_232c8, align 4
  %v0_232ca = load i32, i32* %edx.global-to-local, align 8
  %v2_232ca = add i32 %v2_232a8, 4
  %v3_232ca = inttoptr i32 %v2_232ca to i32*
  store i32 %v0_232ca, i32* %v3_232ca, align 4
  br label %dec_label_pc_232cd

dec_label_pc_232cd:                               ; preds = %dec_label_pc_232c0, %dec_label_pc_23282
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_232d9

bb:                                               ; preds = %dec_label_pc_232cd
  %v1_232d7 = call i32 @function_232de()
  br label %dec_label_pc_232d9

dec_label_pc_232d9:                               ; preds = %bb, %dec_label_pc_232cd
  %v2_232d7 = phi i32 [ %v1_232d7, %bb ], [ 0, %dec_label_pc_232cd ]
  ret i32 %v2_232d7

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_232de() local_unnamed_addr {
dec_label_pc_232de:
  %v0_232df = load i32, i32* @eax, align 4
  ret i32 %v0_232df
}

define i32 @_ZN5boost6detail7variant12cast_storageIdEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_232e0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23306

bb:                                               ; preds = %dec_label_pc_232e0
  %v2_23304 = call i32 @function_2330b(i32 %arg1)
  br label %dec_label_pc_23306

dec_label_pc_23306:                               ; preds = %bb, %dec_label_pc_232e0
  %v3_23304 = phi i32 [ %v2_23304, %bb ], [ %arg1, %dec_label_pc_232e0 ]
  ret i32 %v3_23304
}

define i32 @function_2330b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2330b:
  %v0_2330c = load i32, i32* @eax, align 4
  ret i32 %v0_2330c
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitIdEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2330e:
  %v2_23334 = load i32, i32* %arg1, align 4
  store i32 %v2_23334, i32* @eax, align 4
  %v2_23341 = call i32 @function_27554(i32 8, i32 %v2_23334)
  %v2_23346 = icmp eq i32 %v2_23341, 0
  br i1 %v2_23346, label %dec_label_pc_23351, label %dec_label_pc_2334a

dec_label_pc_2334a:                               ; preds = %dec_label_pc_2330e
  %tmp114 = inttoptr i32 %arg2 to double*
  %v3_23341 = inttoptr i32 %v2_23341 to double*
  %v2_2334d = load double, double* %tmp114, align 4
  store double %v2_2334d, double* %v3_23341, align 4
  br label %dec_label_pc_23351

dec_label_pc_23351:                               ; preds = %dec_label_pc_2334a, %dec_label_pc_2330e
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2335d

bb:                                               ; preds = %dec_label_pc_23351
  %v1_2335b = call i32 @function_23362()
  br label %dec_label_pc_2335d

dec_label_pc_2335d:                               ; preds = %bb, %dec_label_pc_23351
  %v2_2335b = phi i32 [ %v1_2335b, %bb ], [ 0, %dec_label_pc_23351 ]
  ret i32 %v2_2335b

; uselistorder directives
  uselistorder i32 %v2_23341, { 1, 0 }
}

define i32 @function_23362() local_unnamed_addr {
dec_label_pc_23362:
  %v0_23363 = load i32, i32* @eax, align 4
  ret i32 %v0_23363
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_23364:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_233b4, label %bb

bb:                                               ; preds = %dec_label_pc_23364
  %sext = mul i32 %arg6, 16777216
  %v12_233ae = sdiv i32 %sext, 16777216
  %v13_233ae = sext i8 %arg5 to i32
  %v14_233ae = call i32 @function_237ed(i32 %arg8, i32 %arg7, i32 %v12_233ae, i32 %v13_233ae, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_233b4

dec_label_pc_233b4:                               ; preds = %dec_label_pc_23364, %bb
  %v2_233b7 = mul i32 %arg2, 4
  %v1_233ba = add i32 %v2_233b7, ptrtoint (i32* @global_var_23840.1857 to i32)
  %v1_233bf = inttoptr i32 %v1_233ba to i32*
  %v2_233bf = load i32, i32* %v1_233bf, align 4
  ret i32 %v2_233bf

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_233b4, { 1, 0 }
}

define i32 @function_233c3() local_unnamed_addr {
dec_label_pc_233c3:
  %v0_233cb = load i32, i32* @ebp, align 4
  %v1_233cb = add i32 %v0_233cb, -83
  %v2_233cb = inttoptr i32 %v1_233cb to i8*
  %v3_233cb = load i8, i8* %v2_233cb, align 1
  %v1_233db = add i32 %v0_233cb, -56
  %v2_233db = inttoptr i32 %v1_233db to i32*
  %v3_233db = load i32, i32* %v2_233db, align 4
  %v1_233e2 = add i32 %v0_233cb, -52
  %v2_233e2 = inttoptr i32 %v1_233e2 to i32*
  %v3_233e2 = load i32, i32* %v2_233e2, align 4
  %v1_233e9 = add i32 %v0_233cb, -44
  %v2_233e9 = inttoptr i32 %v1_233e9 to i32*
  %v3_233e9 = load i32, i32* %v2_233e9, align 4
  %v6_233ef = sext i8 %v3_233cb to i32
  %v7_233ef = call i32 @unknown_4844b(i32 %v3_233e9, i32 %v3_233e2, i32 %v3_233db, i32 0, i32 %v6_233ef, i32 1)
  store i32 %v7_233ef, i32* @eax, align 4
  %v0_233f4 = call i32 @function_23825()
  ret i32 %v0_233f4

; uselistorder directives
  uselistorder i32 %v0_233cb, { 0, 2, 1, 3 }
}

define i32 @function_233f9() local_unnamed_addr {
dec_label_pc_233f9:
  %v0_23401 = load i32, i32* @ebp, align 4
  %v1_23401 = add i32 %v0_23401, -82
  %v2_23401 = inttoptr i32 %v1_23401 to i8*
  %v3_23401 = load i8, i8* %v2_23401, align 1
  %v1_23411 = add i32 %v0_23401, -56
  %v2_23411 = inttoptr i32 %v1_23411 to i32*
  %v3_23411 = load i32, i32* %v2_23411, align 4
  %v1_23418 = add i32 %v0_23401, -52
  %v2_23418 = inttoptr i32 %v1_23418 to i32*
  %v3_23418 = load i32, i32* %v2_23418, align 4
  %v1_2341f = add i32 %v0_23401, -44
  %v2_2341f = inttoptr i32 %v1_2341f to i32*
  %v3_2341f = load i32, i32* %v2_2341f, align 4
  %v6_23425 = sext i8 %v3_23401 to i32
  %v7_23425 = call i32 @unknown_484b8(i32 %v3_2341f, i32 %v3_23418, i32 %v3_23411, i32 0, i32 %v6_23425, i32 1)
  store i32 %v7_23425, i32* @eax, align 4
  %v0_2342a = call i32 @function_23825()
  ret i32 %v0_2342a

; uselistorder directives
  uselistorder i32 %v0_23401, { 0, 2, 1, 3 }
}

define i32 @function_2342f() local_unnamed_addr {
dec_label_pc_2342f:
  %v0_23437 = load i32, i32* @ebp, align 4
  %v1_23437 = add i32 %v0_23437, -81
  %v2_23437 = inttoptr i32 %v1_23437 to i8*
  %v3_23437 = load i8, i8* %v2_23437, align 1
  %v1_23447 = add i32 %v0_23437, -56
  %v2_23447 = inttoptr i32 %v1_23447 to i32*
  %v3_23447 = load i32, i32* %v2_23447, align 4
  %v1_2344e = add i32 %v0_23437, -52
  %v2_2344e = inttoptr i32 %v1_2344e to i32*
  %v3_2344e = load i32, i32* %v2_2344e, align 4
  %v1_23455 = add i32 %v0_23437, -44
  %v2_23455 = inttoptr i32 %v1_23455 to i32*
  %v3_23455 = load i32, i32* %v2_23455, align 4
  %v6_2345b = sext i8 %v3_23437 to i32
  %v7_2345b = call i32 @unknown_48525(i32 %v3_23455, i32 %v3_2344e, i32 %v3_23447, i32 0, i32 %v6_2345b, i32 1)
  store i32 %v7_2345b, i32* @eax, align 4
  %v0_23460 = call i32 @function_23825()
  ret i32 %v0_23460

; uselistorder directives
  uselistorder i32 %v0_23437, { 0, 2, 1, 3 }
}

define i32 @function_23465() local_unnamed_addr {
dec_label_pc_23465:
  %v0_2346d = load i32, i32* @ebp, align 4
  %v1_2346d = add i32 %v0_2346d, -80
  %v2_2346d = inttoptr i32 %v1_2346d to i8*
  %v3_2346d = load i8, i8* %v2_2346d, align 1
  %v1_2347d = add i32 %v0_2346d, -56
  %v2_2347d = inttoptr i32 %v1_2347d to i32*
  %v3_2347d = load i32, i32* %v2_2347d, align 4
  %v1_23484 = add i32 %v0_2346d, -52
  %v2_23484 = inttoptr i32 %v1_23484 to i32*
  %v3_23484 = load i32, i32* %v2_23484, align 4
  %v1_2348b = add i32 %v0_2346d, -44
  %v2_2348b = inttoptr i32 %v1_2348b to i32*
  %v3_2348b = load i32, i32* %v2_2348b, align 4
  %v6_23491 = sext i8 %v3_2346d to i32
  %v7_23491 = call i32 @unknown_48592(i32 %v3_2348b, i32 %v3_23484, i32 %v3_2347d, i32 0, i32 %v6_23491, i32 1)
  store i32 %v7_23491, i32* @eax, align 4
  %v0_23496 = call i32 @function_23825()
  ret i32 %v0_23496

; uselistorder directives
  uselistorder i32 %v0_2346d, { 0, 2, 1, 3 }
}

define i32 @function_2349b() local_unnamed_addr {
dec_label_pc_2349b:
  %v0_234a3 = load i32, i32* @ebp, align 4
  %v1_234a3 = add i32 %v0_234a3, -79
  %v2_234a3 = inttoptr i32 %v1_234a3 to i8*
  %v3_234a3 = load i8, i8* %v2_234a3, align 1
  %v1_234b3 = add i32 %v0_234a3, -56
  %v2_234b3 = inttoptr i32 %v1_234b3 to i32*
  %v3_234b3 = load i32, i32* %v2_234b3, align 4
  %v1_234ba = add i32 %v0_234a3, -52
  %v2_234ba = inttoptr i32 %v1_234ba to i32*
  %v3_234ba = load i32, i32* %v2_234ba, align 4
  %v1_234c1 = add i32 %v0_234a3, -44
  %v2_234c1 = inttoptr i32 %v1_234c1 to i32*
  %v3_234c1 = load i32, i32* %v2_234c1, align 4
  %v6_234c7 = sext i8 %v3_234a3 to i32
  %v7_234c7 = call i32 @unknown_485ff(i32 %v3_234c1, i32 %v3_234ba, i32 %v3_234b3, i32 0, i32 %v6_234c7, i32 1)
  store i32 %v7_234c7, i32* @eax, align 4
  %v0_234cc = call i32 @function_23825()
  ret i32 %v0_234cc

; uselistorder directives
  uselistorder i32 %v0_234a3, { 0, 2, 1, 3 }
}

define i32 @function_234d1() local_unnamed_addr {
dec_label_pc_234d1:
  %v0_234d9 = load i32, i32* @ebp, align 4
  %v1_234d9 = add i32 %v0_234d9, -78
  %v2_234d9 = inttoptr i32 %v1_234d9 to i8*
  %v3_234d9 = load i8, i8* %v2_234d9, align 1
  %v1_234e9 = add i32 %v0_234d9, -56
  %v2_234e9 = inttoptr i32 %v1_234e9 to i32*
  %v3_234e9 = load i32, i32* %v2_234e9, align 4
  %v1_234f0 = add i32 %v0_234d9, -52
  %v2_234f0 = inttoptr i32 %v1_234f0 to i32*
  %v3_234f0 = load i32, i32* %v2_234f0, align 4
  %v1_234f7 = add i32 %v0_234d9, -44
  %v2_234f7 = inttoptr i32 %v1_234f7 to i32*
  %v3_234f7 = load i32, i32* %v2_234f7, align 4
  %v6_234fd = sext i8 %v3_234d9 to i32
  %v7_234fd = call i32 @unknown_4866c(i32 %v3_234f7, i32 %v3_234f0, i32 %v3_234e9, i32 0, i32 %v6_234fd, i32 1)
  store i32 %v7_234fd, i32* @eax, align 4
  %v0_23502 = call i32 @function_23825()
  ret i32 %v0_23502

; uselistorder directives
  uselistorder i32 %v0_234d9, { 0, 2, 1, 3 }
}

define i32 @function_23507() local_unnamed_addr {
dec_label_pc_23507:
  %v0_2350f = load i32, i32* @ebp, align 4
  %v1_2352d = add i32 %v0_2350f, -44
  %v2_2352d = inttoptr i32 %v1_2352d to i32*
  %v3_2352d = load i32, i32* %v2_2352d, align 4
  %v1_23533 = call i32 @unknown_486d9(i32 %v3_2352d)
  store i32 %v1_23533, i32* @eax, align 4
  %v0_23538 = call i32 @function_23825()
  ret i32 %v0_23538
}

define i32 @function_2353d() local_unnamed_addr {
dec_label_pc_2353d:
  %v0_23545 = load i32, i32* @ebp, align 4
  %v1_23563 = add i32 %v0_23545, -44
  %v2_23563 = inttoptr i32 %v1_23563 to i32*
  %v3_23563 = load i32, i32* %v2_23563, align 4
  %v1_23569 = call i32 @unknown_486d9(i32 %v3_23563)
  store i32 %v1_23569, i32* @eax, align 4
  %v0_2356e = call i32 @function_23825()
  ret i32 %v0_2356e
}

define i32 @function_23573() local_unnamed_addr {
dec_label_pc_23573:
  %v0_2357b = load i32, i32* @ebp, align 4
  %v1_23599 = add i32 %v0_2357b, -44
  %v2_23599 = inttoptr i32 %v1_23599 to i32*
  %v3_23599 = load i32, i32* %v2_23599, align 4
  %v1_2359f = call i32 @unknown_486d9(i32 %v3_23599)
  store i32 %v1_2359f, i32* @eax, align 4
  %v0_235a4 = call i32 @function_23825()
  ret i32 %v0_235a4
}

define i32 @function_235a9() local_unnamed_addr {
dec_label_pc_235a9:
  %v0_235b1 = load i32, i32* @ebp, align 4
  %v1_235cf = add i32 %v0_235b1, -44
  %v2_235cf = inttoptr i32 %v1_235cf to i32*
  %v3_235cf = load i32, i32* %v2_235cf, align 4
  %v1_235d5 = call i32 @unknown_486d9(i32 %v3_235cf)
  store i32 %v1_235d5, i32* @eax, align 4
  %v0_235da = call i32 @function_23825()
  ret i32 %v0_235da
}

define i32 @function_235df() local_unnamed_addr {
dec_label_pc_235df:
  %v0_235e7 = load i32, i32* @ebp, align 4
  %v1_23605 = add i32 %v0_235e7, -44
  %v2_23605 = inttoptr i32 %v1_23605 to i32*
  %v3_23605 = load i32, i32* %v2_23605, align 4
  %v1_2360b = call i32 @unknown_486d9(i32 %v3_23605)
  store i32 %v1_2360b, i32* @eax, align 4
  %v0_23610 = call i32 @function_23825()
  ret i32 %v0_23610
}

define i32 @function_23615() local_unnamed_addr {
dec_label_pc_23615:
  %v0_2361d = load i32, i32* @ebp, align 4
  %v1_2363b = add i32 %v0_2361d, -44
  %v2_2363b = inttoptr i32 %v1_2363b to i32*
  %v3_2363b = load i32, i32* %v2_2363b, align 4
  %v1_23641 = call i32 @unknown_486d9(i32 %v3_2363b)
  store i32 %v1_23641, i32* @eax, align 4
  %v0_23646 = call i32 @function_23825()
  ret i32 %v0_23646
}

define i32 @function_2364b() local_unnamed_addr {
dec_label_pc_2364b:
  %v0_23653 = load i32, i32* @ebp, align 4
  %v1_23671 = add i32 %v0_23653, -44
  %v2_23671 = inttoptr i32 %v1_23671 to i32*
  %v3_23671 = load i32, i32* %v2_23671, align 4
  %v1_23677 = call i32 @unknown_486d9(i32 %v3_23671)
  store i32 %v1_23677, i32* @eax, align 4
  %v0_2367c = call i32 @function_23825()
  ret i32 %v0_2367c
}

define i32 @function_23681() local_unnamed_addr {
dec_label_pc_23681:
  %v0_23689 = load i32, i32* @ebp, align 4
  %v1_236a7 = add i32 %v0_23689, -44
  %v2_236a7 = inttoptr i32 %v1_236a7 to i32*
  %v3_236a7 = load i32, i32* %v2_236a7, align 4
  %v1_236ad = call i32 @unknown_486d9(i32 %v3_236a7)
  store i32 %v1_236ad, i32* @eax, align 4
  %v0_236b2 = call i32 @function_23825()
  ret i32 %v0_236b2
}

define i32 @function_236b7() local_unnamed_addr {
dec_label_pc_236b7:
  %v0_236bf = load i32, i32* @ebp, align 4
  %v1_236dd = add i32 %v0_236bf, -44
  %v2_236dd = inttoptr i32 %v1_236dd to i32*
  %v3_236dd = load i32, i32* %v2_236dd, align 4
  %v1_236e3 = call i32 @unknown_486d9(i32 %v3_236dd)
  store i32 %v1_236e3, i32* @eax, align 4
  %v0_236e8 = call i32 @function_23825()
  ret i32 %v0_236e8
}

define i32 @function_236ed() local_unnamed_addr {
dec_label_pc_236ed:
  %v0_236f5 = load i32, i32* @ebp, align 4
  %v1_23713 = add i32 %v0_236f5, -44
  %v2_23713 = inttoptr i32 %v1_23713 to i32*
  %v3_23713 = load i32, i32* %v2_23713, align 4
  %v1_23719 = call i32 @unknown_486d9(i32 %v3_23713)
  store i32 %v1_23719, i32* @eax, align 4
  %v0_2371e = call i32 @function_23825()
  ret i32 %v0_2371e
}

define i32 @function_23723() local_unnamed_addr {
dec_label_pc_23723:
  %v0_2372b = load i32, i32* @ebp, align 4
  %v1_23749 = add i32 %v0_2372b, -44
  %v2_23749 = inttoptr i32 %v1_23749 to i32*
  %v3_23749 = load i32, i32* %v2_23749, align 4
  %v1_2374f = call i32 @unknown_486d9(i32 %v3_23749)
  store i32 %v1_2374f, i32* @eax, align 4
  %v0_23754 = call i32 @function_23825()
  ret i32 %v0_23754
}

define i32 @function_2377b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2377b:
  %v0_2377d = load i32, i32* @ebp, align 4
  %v1_2377d = add i32 %v0_2377d, -44
  %v2_2377d = inttoptr i32 %v1_2377d to i32*
  %v3_2377d = load i32, i32* %v2_2377d, align 4
  %v1_23783 = call i32 @unknown_486d9(i32 %v3_2377d)
  store i32 %v1_23783, i32* @eax, align 4
  %v0_23788 = call i32 @function_23825()
  ret i32 %v0_23788
}

define i32 @function_2378d() local_unnamed_addr {
dec_label_pc_2378d:
  %v0_237a3 = load i32, i32* @ebp, align 4
  %v1_237b1 = add i32 %v0_237a3, -44
  %v2_237b1 = inttoptr i32 %v1_237b1 to i32*
  %v3_237b1 = load i32, i32* %v2_237b1, align 4
  %v1_237b7 = call i32 @unknown_486d9(i32 %v3_237b1)
  store i32 %v1_237b7, i32* @eax, align 4
  %v0_237bc = call i32 @function_23825()
  ret i32 %v0_237bc
}

define i32 @function_237be() local_unnamed_addr {
dec_label_pc_237be:
  %v0_237d2 = load i32, i32* @ebp, align 4
  %v1_237e0 = add i32 %v0_237d2, -44
  %v2_237e0 = inttoptr i32 %v1_237e0 to i32*
  %v3_237e0 = load i32, i32* %v2_237e0, align 4
  %v1_237e6 = call i32 @unknown_486d9(i32 %v3_237e0)
  store i32 %v1_237e6, i32* @eax, align 4
  %v0_237eb = call i32 @function_23825()
  ret i32 %v0_237eb

; uselistorder directives
  uselistorder i32 ()* @function_23825, { 19, 18, 0, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @unknown_486d9, { 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_237ed(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_237ed:
  %v0_237fd = load i32, i32* @ecx, align 4
  %v0_23801 = load i32, i32* @edx, align 8
  %v0_23805 = load i32, i32* @ebp, align 4
  %v1_23805 = add i32 %v0_23805, -56
  %v2_23805 = inttoptr i32 %v1_23805 to i32*
  %v3_23805 = load i32, i32* %v2_23805, align 4
  %v1_2380c = add i32 %v0_23805, -52
  %v2_2380c = inttoptr i32 %v1_2380c to i32*
  %v3_2380c = load i32, i32* %v2_2380c, align 4
  %v1_23813 = add i32 %v0_23805, -48
  %v2_23813 = inttoptr i32 %v1_23813 to i32*
  %v3_23813 = load i32, i32* %v2_23813, align 4
  %v1_2381a = add i32 %v0_23805, -44
  %v2_2381a = inttoptr i32 %v1_2381a to i32*
  %v3_2381a = load i32, i32* %v2_2381a, align 4
  %sext = mul i32 %v0_23801, 16777216
  %v8_23820 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_237fd, 16777216
  %v9_23820 = sdiv i32 %sext1, 16777216
  %v10_23820 = call i32 @unknown_48733(i32 %v3_2381a, i32 %v3_23813, i32 %v3_2380c, i32 %v3_23805, i32 %v8_23820, i32 %v9_23820, i32 0, i32 0)
  ret i32 %v10_23820

; uselistorder directives
  uselistorder i32 %v0_23805, { 1, 0, 2, 3 }
}

define i32 @function_23825() local_unnamed_addr {
dec_label_pc_23825:
  %v0_23825 = load i32, i32* @ebp, align 4
  %v1_23825 = add i32 %v0_23825, -28
  %v2_23825 = inttoptr i32 %v1_23825 to i32*
  %v3_23825 = load i32, i32* %v2_23825, align 4
  %v1_23828 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23828 = icmp eq i32 %v1_23828, %v3_23825
  br i1 %v3_23828, label %bb, label %dec_label_pc_23825.dec_label_pc_23831_crit_edge

dec_label_pc_23825.dec_label_pc_23831_crit_edge:  ; preds = %dec_label_pc_23825
  %v2_2382f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_23831

bb:                                               ; preds = %dec_label_pc_23825
  %v1_2382f = call i32 @function_23836()
  br label %dec_label_pc_23831

dec_label_pc_23831:                               ; preds = %dec_label_pc_23825.dec_label_pc_23831_crit_edge, %bb
  %v2_2382f = phi i32 [ %v2_2382f.pre, %dec_label_pc_23825.dec_label_pc_23831_crit_edge ], [ %v1_2382f, %bb ]
  ret i32 %v2_2382f

; uselistorder directives
  uselistorder label %dec_label_pc_23831, { 1, 0 }
}

define i32 @function_23836() local_unnamed_addr {
dec_label_pc_23836:
  %v0_2383d = load i32, i32* @eax, align 4
  ret i32 %v0_2383d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_23890:
  %edx.global-to-local = alloca i32, align 4
  %v0_238c6 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_238c6, 16777216
  %v5_238e5 = sdiv i32 %sext, 16777216
  %v6_238e5 = call i32 @unknown_48cc6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_238e5)
  store i32 %v6_238e5, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_238f6

bb:                                               ; preds = %dec_label_pc_23890
  %v1_238f4 = call i32 @function_238fb()
  br label %dec_label_pc_238f6

dec_label_pc_238f6:                               ; preds = %bb, %dec_label_pc_23890
  %v2_238f4 = phi i32 [ %v1_238f4, %bb ], [ %v6_238e5, %dec_label_pc_23890 ]
  ret i32 %v2_238f4
}

define i32 @function_238fb() local_unnamed_addr {
dec_label_pc_238fb:
  %v0_238fc = load i32, i32* @eax, align 4
  ret i32 %v0_238fc
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsSJ_NSA_ISB_INSC_10Value_implISF_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_238fd:
  %edx.global-to-local = alloca i32, align 4
  %v0_23933 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23933, 16777216
  %v5_23952 = sdiv i32 %sext, 16777216
  %v6_23952 = call i32 @unknown_48d98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_23952)
  store i32 %v6_23952, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_23963

bb:                                               ; preds = %dec_label_pc_238fd
  %v1_23961 = call i32 @function_23968()
  br label %dec_label_pc_23963

dec_label_pc_23963:                               ; preds = %bb, %dec_label_pc_238fd
  %v2_23961 = phi i32 [ %v1_23961, %bb ], [ %v6_23952, %dec_label_pc_238fd ]
  ret i32 %v2_23961
}

define i32 @function_23968() local_unnamed_addr {
dec_label_pc_23968:
  %v0_23969 = load i32, i32* @eax, align 4
  ret i32 %v0_23969
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsNSA_ISB_INSC_9Pair_implISF_EESaISM_EEEESJ_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2396a:
  %edx.global-to-local = alloca i32, align 4
  %v0_239a0 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_239a0, 16777216
  %v5_239bf = sdiv i32 %sext, 16777216
  %v6_239bf = call i32 @unknown_48e6a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_239bf)
  store i32 %v6_239bf, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_239d0

bb:                                               ; preds = %dec_label_pc_2396a
  %v1_239ce = call i32 @function_239d5()
  br label %dec_label_pc_239d0

dec_label_pc_239d0:                               ; preds = %bb, %dec_label_pc_2396a
  %v2_239ce = phi i32 [ %v1_239ce, %bb ], [ %v6_239bf, %dec_label_pc_2396a ]
  ret i32 %v2_239ce
}

define i32 @function_239d5() local_unnamed_addr {
dec_label_pc_239d5:
  %v0_239d6 = load i32, i32* @eax, align 4
  ret i32 %v0_239d6
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_239d7:
  %edx.global-to-local = alloca i32, align 4
  %v0_23a0d = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23a0d, 16777216
  %v5_23a2c = sdiv i32 %sext, 16777216
  %v6_23a2c = call i32 @unknown_48f3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_23a2c)
  store i32 %v6_23a2c, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_23a3d

bb:                                               ; preds = %dec_label_pc_239d7
  %v1_23a3b = call i32 @function_23a42()
  br label %dec_label_pc_23a3d

dec_label_pc_23a3d:                               ; preds = %bb, %dec_label_pc_239d7
  %v2_23a3b = phi i32 [ %v1_23a3b, %bb ], [ %v6_23a2c, %dec_label_pc_239d7 ]
  ret i32 %v2_23a3b
}

define i32 @function_23a42() local_unnamed_addr {
dec_label_pc_23a42:
  %v0_23a43 = load i32, i32* @eax, align 4
  ret i32 %v0_23a43
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_23a44:
  %edx.global-to-local = alloca i32, align 4
  %v0_23a7a = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23a7a, 16777216
  %v5_23a99 = sdiv i32 %sext, 16777216
  %v6_23a99 = call i32 @unknown_4900e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_23a99)
  store i32 %v6_23a99, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_23aaa

bb:                                               ; preds = %dec_label_pc_23a44
  %v1_23aa8 = call i32 @function_23aaf()
  br label %dec_label_pc_23aaa

dec_label_pc_23aaa:                               ; preds = %bb, %dec_label_pc_23a44
  %v2_23aa8 = phi i32 [ %v1_23aa8, %bb ], [ %v6_23a99, %dec_label_pc_23a44 ]
  ret i32 %v2_23aa8
}

define i32 @function_23aaf() local_unnamed_addr {
dec_label_pc_23aaf:
  %v0_23ab0 = load i32, i32* @eax, align 4
  ret i32 %v0_23ab0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_23ab1:
  %edx.global-to-local = alloca i32, align 4
  %v0_23ae7 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23ae7, 16777216
  %v5_23b06 = sdiv i32 %sext, 16777216
  %v6_23b06 = call i32 @unknown_490e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_23b06)
  store i32 %v6_23b06, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_23b17

bb:                                               ; preds = %dec_label_pc_23ab1
  %v1_23b15 = call i32 @function_23b1c()
  br label %dec_label_pc_23b17

dec_label_pc_23b17:                               ; preds = %bb, %dec_label_pc_23ab1
  %v2_23b15 = phi i32 [ %v1_23b15, %bb ], [ %v6_23b06, %dec_label_pc_23ab1 ]
  ret i32 %v2_23b15
}

define i32 @function_23b1c() local_unnamed_addr {
dec_label_pc_23b1c:
  %v0_23b1d = load i32, i32* @eax, align 4
  ret i32 %v0_23b1d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_23b1e:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSM_13Config_vectorISsEEEESaISQ_EEEENSK_ISL_INSM_10Value_implISP_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_23b78:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvSsEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_23bdf:
  %v1_23c15 = call i32 @unknown_46ba0(i32 %arg3)
  %v3_23c2c = call i32 @unknown_49273(i32 %arg2, i32 %v1_23c15, i32 1)
  store i32 %v3_23c2c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23c3d

bb:                                               ; preds = %dec_label_pc_23bdf
  %v1_23c3b = call i32 @function_23c42()
  br label %dec_label_pc_23c3d

dec_label_pc_23c3d:                               ; preds = %bb, %dec_label_pc_23bdf
  %v2_23c3b = phi i32 [ %v1_23c3b, %bb ], [ %v3_23c2c, %dec_label_pc_23bdf ]
  ret i32 %v2_23c3b
}

define i32 @function_23c42() local_unnamed_addr {
dec_label_pc_23c42:
  %v0_23c43 = load i32, i32* @eax, align 4
  ret i32 %v0_23c43
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_23c44:
  %v4_23c62 = zext i8 %arg5 to i32
  ret i32 %v4_23c62
}

define i32 @function_23c66(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c66:
  %v0_23c66 = load i32, i32* @eax, align 4
  %v1_23c66 = trunc i32 %v0_23c66 to i8
  %v2_23c66 = load i32, i32* @ebp, align 4
  %v3_23c66 = add i32 %v2_23c66, -41
  %v4_23c66 = inttoptr i32 %v3_23c66 to i8*
  store i8 %v1_23c66, i8* %v4_23c66, align 1
  %v0_23c69 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_23c6f = load i32, i32* @ebp, align 4
  %v2_23c6f = add i32 %v1_23c6f, -12
  %v3_23c6f = inttoptr i32 %v2_23c6f to i32*
  store i32 %v0_23c69, i32* %v3_23c6f, align 4
  %v0_23c74 = load i32, i32* @ebp, align 4
  %v1_23c74 = add i32 %v0_23c74, -36
  %v2_23c74 = inttoptr i32 %v1_23c74 to i32*
  %v3_23c74 = load i32, i32* %v2_23c74, align 4
  %v1_23c7a = call i32 @unknown_46cb5(i32 %v3_23c74)
  %v0_23c8b = load i32, i32* @ebp, align 4
  %v1_23c8b = add i32 %v0_23c8b, -32
  %v2_23c8b = inttoptr i32 %v1_23c8b to i32*
  %v3_23c8b = load i32, i32* %v2_23c8b, align 4
  %v3_23c91 = call i32 @unknown_49322(i32 %v3_23c8b, i32 %v1_23c7a, i32 1)
  store i32 %v3_23c91, i32* @eax, align 4
  %v0_23c96 = load i32, i32* @ebp, align 4
  %v1_23c96 = add i32 %v0_23c96, -12
  %v2_23c96 = inttoptr i32 %v1_23c96 to i32*
  %v3_23c96 = load i32, i32* %v2_23c96, align 4
  %v1_23c99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23c99 = icmp eq i32 %v1_23c99, %v3_23c96
  br i1 %v3_23c99, label %bb, label %dec_label_pc_23ca2

bb:                                               ; preds = %dec_label_pc_23c66
  %v1_23ca0 = call i32 @function_23ca7()
  br label %dec_label_pc_23ca2

dec_label_pc_23ca2:                               ; preds = %bb, %dec_label_pc_23c66
  %v2_23ca0 = phi i32 [ %v1_23ca0, %bb ], [ %v3_23c91, %dec_label_pc_23c66 ]
  ret i32 %v2_23ca0
}

define i32 @function_23ca7() local_unnamed_addr {
dec_label_pc_23ca7:
  %v0_23ca8 = load i32, i32* @eax, align 4
  ret i32 %v0_23ca8
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_23ca9:
  %v1_23cdf = call i32 @unknown_46dca(i32 %arg3)
  %v3_23cf6 = call i32 @unknown_493df(i32 %arg2, i32 %v1_23cdf, i32 1)
  store i32 %v3_23cf6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23d07

bb:                                               ; preds = %dec_label_pc_23ca9
  %v1_23d05 = call i32 @function_23d0c()
  br label %dec_label_pc_23d07

dec_label_pc_23d07:                               ; preds = %bb, %dec_label_pc_23ca9
  %v2_23d05 = phi i32 [ %v1_23d05, %bb ], [ %v3_23cf6, %dec_label_pc_23ca9 ]
  ret i32 %v2_23d05
}

define i32 @function_23d0c() local_unnamed_addr {
dec_label_pc_23d0c:
  %v0_23d0d = load i32, i32* @eax, align 4
  ret i32 %v0_23d0d
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvbEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_23d0e:
  %v1_23d44 = call i32 @unknown_46edf(i32 %arg3)
  %v3_23d5b = call i32 @unknown_4949c(i32 %arg2, i32 %v1_23d44, i32 1)
  store i32 %v3_23d5b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23d6c

bb:                                               ; preds = %dec_label_pc_23d0e
  %v1_23d6a = call i32 @function_23d71()
  br label %dec_label_pc_23d6c

dec_label_pc_23d6c:                               ; preds = %bb, %dec_label_pc_23d0e
  %v2_23d6a = phi i32 [ %v1_23d6a, %bb ], [ %v3_23d5b, %dec_label_pc_23d0e ]
  ret i32 %v2_23d6a
}

define i32 @function_23d71() local_unnamed_addr {
dec_label_pc_23d71:
  %v0_23d72 = load i32, i32* @eax, align 4
  ret i32 %v0_23d72
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvxEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_23d73:
  %v1_23da9 = call i32 @unknown_46fc8(i32 %arg3)
  %v3_23dc0 = call i32 @unknown_4954b(i32 %arg2, i32 %v1_23da9, i32 1)
  store i32 %v3_23dc0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23dd1

bb:                                               ; preds = %dec_label_pc_23d73
  %v1_23dcf = call i32 @function_23dd6()
  br label %dec_label_pc_23dd1

dec_label_pc_23dd1:                               ; preds = %bb, %dec_label_pc_23d73
  %v2_23dcf = phi i32 [ %v1_23dcf, %bb ], [ %v3_23dc0, %dec_label_pc_23d73 ]
  ret i32 %v2_23dcf
}

define i32 @function_23dd6() local_unnamed_addr {
dec_label_pc_23dd6:
  %v0_23dd7 = load i32, i32* @eax, align 4
  ret i32 %v0_23dd7
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvdEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_23dd8:
  %v1_23e0e = call i32 @unknown_470b8(i32 %arg3)
  %v3_23e25 = call i32 @unknown_495fa(i32 %arg2, i32 %v1_23e0e, i32 1)
  store i32 %v3_23e25, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23e36

bb:                                               ; preds = %dec_label_pc_23dd8
  %v1_23e34 = call i32 @function_23e3b()
  br label %dec_label_pc_23e36

dec_label_pc_23e36:                               ; preds = %bb, %dec_label_pc_23dd8
  %v2_23e34 = phi i32 [ %v1_23e34, %bb ], [ %v3_23e25, %dec_label_pc_23dd8 ]
  ret i32 %v2_23e34
}

define i32 @function_23e3b() local_unnamed_addr {
dec_label_pc_23e3b:
  %v0_23e3c = load i32, i32* @eax, align 4
  ret i32 %v0_23e3c
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_23e3d:
  %edx.global-to-local = alloca i32, align 4
  %v0_23e73 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23e73, 16777216
  %v5_23e92 = sdiv i32 %sext, 16777216
  %v6_23e92 = call i32 @unknown_496a9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_23e92)
  store i32 %v6_23e92, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_23ea3

bb:                                               ; preds = %dec_label_pc_23e3d
  %v1_23ea1 = call i32 @function_23ea8()
  br label %dec_label_pc_23ea3

dec_label_pc_23ea3:                               ; preds = %bb, %dec_label_pc_23e3d
  %v2_23ea1 = phi i32 [ %v1_23ea1, %bb ], [ %v6_23e92, %dec_label_pc_23e3d ]
  ret i32 %v2_23ea1
}

define i32 @function_23ea8() local_unnamed_addr {
dec_label_pc_23ea8:
  %v0_23ea9 = load i32, i32* @eax, align 4
  ret i32 %v0_23ea9
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsSJ_NSA_ISB_INSC_10Value_implISF_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_23eaa:
  %edx.global-to-local = alloca i32, align 4
  %v0_23ee0 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23ee0, 16777216
  %v5_23eff = sdiv i32 %sext, 16777216
  %v6_23eff = call i32 @unknown_4977b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_23eff)
  store i32 %v6_23eff, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_23f10

bb:                                               ; preds = %dec_label_pc_23eaa
  %v1_23f0e = call i32 @function_23f15()
  br label %dec_label_pc_23f10

dec_label_pc_23f10:                               ; preds = %bb, %dec_label_pc_23eaa
  %v2_23f0e = phi i32 [ %v1_23f0e, %bb ], [ %v6_23eff, %dec_label_pc_23eaa ]
  ret i32 %v2_23f0e
}

define i32 @function_23f15() local_unnamed_addr {
dec_label_pc_23f15:
  %v0_23f16 = load i32, i32* @eax, align 4
  ret i32 %v0_23f16
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsNSA_ISB_INSC_9Pair_implISF_EESaISM_EEEESJ_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_23f17:
  %edx.global-to-local = alloca i32, align 4
  %v0_23f4d = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23f4d, 16777216
  %v5_23f6c = sdiv i32 %sext, 16777216
  %v6_23f6c = call i32 @unknown_4984d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_23f6c)
  store i32 %v6_23f6c, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_23f7d

bb:                                               ; preds = %dec_label_pc_23f17
  %v1_23f7b = call i32 @function_23f82()
  br label %dec_label_pc_23f7d

dec_label_pc_23f7d:                               ; preds = %bb, %dec_label_pc_23f17
  %v2_23f7b = phi i32 [ %v1_23f7b, %bb ], [ %v6_23f6c, %dec_label_pc_23f17 ]
  ret i32 %v2_23f7b
}

define i32 @function_23f82() local_unnamed_addr {
dec_label_pc_23f82:
  %v0_23f83 = load i32, i32* @eax, align 4
  ret i32 %v0_23f83
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f84:
  ret i32 %arg1
}

define i32 @function_23f8e() local_unnamed_addr {
dec_label_pc_23f8e:
  %eax.global-to-local = alloca i32, align 4
  %v15_23f8e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_23f8e
}

define i32 @function_23fee() local_unnamed_addr {
dec_label_pc_23fee:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_23fee = load i32, i32* %ecx.global-to-local, align 4
  %v1_23fee = add i32 %v0_23fee, -1
  store i32 %v1_23fee, i32* %ecx.global-to-local, align 4
  %v0_23ff0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23ff0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23ff1:
  ret i32 %arg2
}

define i32 @function_24002(i32 %arg1) local_unnamed_addr {
dec_label_pc_24002:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_24002 = load i32, i32* @ecx, align 4
  %v1_24002 = add i32 %v0_24002, -1
  store i32 %v1_24002, i32* %ecx.global-to-local, align 4
  %v0_24004 = load i32, i32* @ebp, align 4
  %v1_24004 = add i32 %v0_24004, 1
  store i32 %v1_24004, i32* %ebp.global-to-local, align 4
  %v1_24005 = add i32 %v0_24002, 1166793796
  %v2_24005 = inttoptr i32 %v1_24005 to i8*
  %v3_24005 = load i8, i8* %v2_24005, align 1
  %v5_24005 = trunc i32 %v1_24002 to i8
  %v6_24005 = load i1, i1* @cf, align 1
  %v7_24005 = zext i1 %v6_24005 to i8
  %v8_24005 = add i8 %v3_24005, %v5_24005
  %v9_24005 = add i8 %v7_24005, %v8_24005
  %v27_24005 = icmp ule i8 %v9_24005, %v3_24005
  %v28_24005 = icmp ult i8 %v8_24005, %v3_24005
  %v29_24005 = select i1 %v6_24005, i1 %v27_24005, i1 %v28_24005
  store i1 %v29_24005, i1* %cf.global-to-local, align 1
  store i8 %v9_24005, i8* %v2_24005, align 1
  %v0_2400b = load i32, i32* @eax, align 4
  %v1_2400b = trunc i32 %v0_2400b to i8
  %v2_2400b = load i1, i1* %cf.global-to-local, align 1
  %v3_2400b = zext i1 %v2_2400b to i8
  %v4_2400b = add i8 %v1_2400b, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_2400b = add i8 %v4_2400b, %v3_2400b
  %v20_2400b = add i8 %v1_2400b, -119
  %v21_2400b = add i8 %v20_2400b, %v3_2400b
  %v22_2400b = icmp ule i8 %v21_2400b, %v1_2400b
  %v23_2400b = icmp ugt i8 %v1_2400b, 118
  %v24_2400b = select i1 %v2_2400b, i1 %v22_2400b, i1 %v23_2400b
  store i1 %v24_2400b, i1* %cf.global-to-local, align 1
  %v25_2400b = zext i8 %v5_2400b to i32
  %v27_2400b = and i32 %v0_2400b, -256
  %v28_2400b = or i32 %v25_2400b, %v27_2400b
  store i32 %v28_2400b, i32* %eax.global-to-local, align 4
  %v0_2400d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2400d = add i32 %v0_2400d, 1
  store i32 %v1_2400d, i32* %ebp.global-to-local, align 4
  %v0_24010 = load i32, i32* @edx, align 8
  %v1_24010 = and i32 %v0_24010, -65281
  %v2_24010 = or i32 %v1_24010, 17664
  store i32 %v2_24010, i32* %edx.global-to-local, align 8
  %v1_24012 = add i32 %v28_2400b, 1166792517
  %v2_24012 = inttoptr i32 %v1_24012 to i8*
  %v3_24012 = load i8, i8* %v2_24012, align 1
  %v4_24012 = load i32, i32* %ecx.global-to-local, align 4
  %v5_24012 = trunc i32 %v4_24012 to i8
  %v7_24012 = zext i1 %v24_2400b to i8
  %v8_24012 = sub i8 %v3_24012, %v5_24012
  %v9_24012 = add i8 %v8_24012, %v7_24012
  %v19_24012 = sub i8 %v8_24012, %v7_24012
  %v20_24012 = icmp ult i8 %v3_24012, %v19_24012
  %v21_24012 = icmp ne i8 %v5_24012, -1
  %v22_24012 = or i1 %v21_24012, %v20_24012
  %v23_24012 = icmp ult i8 %v3_24012, %v5_24012
  %v24_24012 = select i1 %v24_2400b, i1 %v22_24012, i1 %v23_24012
  store i1 %v24_24012, i1* %cf.global-to-local, align 1
  store i8 %v9_24012, i8* %v2_24012, align 1
  %v0_24018 = load i32, i32* %eax.global-to-local, align 4
  %v1_24018 = trunc i32 %v0_24018 to i8
  %v2_24018 = load i1, i1* %cf.global-to-local, align 1
  %v3_24018 = zext i1 %v2_24018 to i32
  %v4_24018 = add i32 %v0_24018, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_24018 = add i32 %v4_24018, %v3_24018
  %v17_24018 = icmp ult i8 %v1_24018, -119
  %v18_24018 = or i1 %v2_24018, %v17_24018
  store i1 %v18_24018, i1* %cf.global-to-local, align 1
  %v31_24018 = urem i32 %v5_24018, 256
  %v33_24018 = and i32 %v0_24018, -256
  %v34_24018 = or i32 %v31_24018, %v33_24018
  store i32 %v34_24018, i32* %eax.global-to-local, align 4
  %v0_2401a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2401a = add i32 %v0_2401a, 1
  store i32 %v1_2401a, i32* @ebp, align 4
  %v1_2401b = add i32 %v0_2401a, -94
  %v2_2401b = inttoptr i32 %v1_2401b to i8*
  %v3_2401b = load i8, i8* %v2_2401b, align 1
  %v5_2401b = mul i8 %v3_2401b, 2
  store i8 %v5_2401b, i8* %v2_2401b, align 1
  %v16_2401b = icmp slt i8 %v3_2401b, 0
  %v0_2401e = load i32, i32* %eax.global-to-local, align 4
  %v1_2401e = trunc i32 %v0_2401e to i8
  %v3_2401e = zext i1 %v16_2401b to i8
  %v4_2401e = add i8 %v1_2401e, %v3_2401e
  %v19_2401e = icmp ule i8 %v4_2401e, %v1_2401e
  %v21_2401e = icmp eq i1 %v16_2401b, %v19_2401e
  store i1 %v21_2401e, i1* %cf.global-to-local, align 1
  %v22_2401e = zext i8 %v4_2401e to i32
  %v24_2401e = and i32 %v0_2401e, -256
  %v25_2401e = or i32 %v22_2401e, %v24_2401e
  store i32 %v25_2401e, i32* %eax.global-to-local, align 4
  %v1_24020 = inttoptr i32 %v25_2401e to i8*
  %v2_24020 = load i8, i8* %v1_24020, align 1
  %v5_24020 = add i8 %v2_24020, %v4_2401e
  store i8 %v5_24020, i8* %v1_24020, align 1
  %v0_24022 = load i32, i32* %eax.global-to-local, align 4
  %v1_24022 = load i32, i32* @ebp, align 4
  %v2_24022 = add i32 %v1_24022, -12
  %v3_24022 = inttoptr i32 %v2_24022 to i32*
  store i32 %v0_24022, i32* %v3_24022, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_24027 = load i32, i32* %edx.global-to-local, align 8
  %v0_2402b = load i32, i32* @ebp, align 4
  %v1_2402b = add i32 %v0_2402b, -40
  %v2_2402b = inttoptr i32 %v1_2402b to i32*
  %v3_2402b = load i32, i32* %v2_2402b, align 4
  store i32 %v3_2402b, i32* %eax.global-to-local, align 4
  %v1_24032 = add i32 %v0_2402b, -36
  %v2_24032 = inttoptr i32 %v1_24032 to i32*
  %v3_24032 = load i32, i32* %v2_24032, align 4
  store i32 %v3_24032, i32* %eax.global-to-local, align 4
  %v1_24039 = add i32 %v0_2402b, -32
  %v2_24039 = inttoptr i32 %v1_24039 to i32*
  %v3_24039 = load i32, i32* %v2_24039, align 4
  store i32 %v3_24039, i32* %eax.global-to-local, align 4
  %v1_24040 = add i32 %v0_2402b, -28
  %v2_24040 = inttoptr i32 %v1_24040 to i32*
  %v3_24040 = load i32, i32* %v2_24040, align 4
  store i32 %v3_24040, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_24027, 16777216
  %v5_24046 = sdiv i32 %sext, 16777216
  %v6_24046 = call i32 @unknown_499f1(i32 %v3_24040, i32 %v3_24039, i32 %v3_24032, i32 %v3_2402b, i32 %v5_24046)
  store i32 %v6_24046, i32* @eax, align 4
  %v0_2404b = load i32, i32* @ebp, align 4
  %v1_2404b = add i32 %v0_2404b, -12
  %v2_2404b = inttoptr i32 %v1_2404b to i32*
  %v3_2404b = load i32, i32* %v2_2404b, align 4
  store i32 %v3_2404b, i32* %edx.global-to-local, align 8
  %v1_2404e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2404e = xor i32 %v1_2404e, %v3_2404b
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2404e = icmp eq i32 %v2_2404e, 0
  store i32 %v2_2404e, i32* %edx.global-to-local, align 8
  br i1 %v3_2404e, label %bb, label %dec_label_pc_24057

bb:                                               ; preds = %dec_label_pc_24002
  %v1_24055 = call i32 @function_2405c()
  store i32 %v1_24055, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_24057

dec_label_pc_24057:                               ; preds = %bb, %dec_label_pc_24002
  %v3_24055 = phi i32 [ %v1_24055, %bb ], [ %v6_24046, %dec_label_pc_24002 ]
  ret i32 %v3_24055

; uselistorder directives
  uselistorder i32 %v0_2402b, { 1, 0, 2, 3 }
  uselistorder i8 %v4_2401e, { 0, 2, 1 }
  uselistorder i8 %v1_2401e, { 1, 0 }
  uselistorder i8 %v3_2401b, { 1, 0 }
  uselistorder i1 %v2_24018, { 1, 0 }
  uselistorder i32 %v0_24018, { 1, 0, 2 }
  uselistorder i8 %v8_24012, { 1, 0 }
  uselistorder i8 %v7_24012, { 1, 0 }
  uselistorder i8 %v5_24012, { 1, 0, 2 }
  uselistorder i1 %v24_2400b, { 1, 0, 2 }
  uselistorder i8 %v9_24005, { 1, 0 }
  uselistorder i8 %v8_24005, { 1, 0 }
  uselistorder i8 %v3_24005, { 1, 2, 0 }
}

define i32 @function_2405c() local_unnamed_addr {
dec_label_pc_2405c:
  %v0_2405d = load i32, i32* @eax, align 4
  ret i32 %v0_2405d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2405e:
  %edx.global-to-local = alloca i32, align 4
  %v0_24094 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_24094, 16777216
  %v5_240b3 = sdiv i32 %sext, 16777216
  %v6_240b3 = call i32 @unknown_49ac3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_240b3)
  store i32 %v6_240b3, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_240c4

bb:                                               ; preds = %dec_label_pc_2405e
  %v1_240c2 = call i32 @function_240c9()
  br label %dec_label_pc_240c4

dec_label_pc_240c4:                               ; preds = %bb, %dec_label_pc_2405e
  %v2_240c2 = phi i32 [ %v1_240c2, %bb ], [ %v6_240b3, %dec_label_pc_2405e ]
  ret i32 %v2_240c2
}

define i32 @function_240c9() local_unnamed_addr {
dec_label_pc_240c9:
  %v0_240ca = load i32, i32* @eax, align 4
  ret i32 %v0_240ca
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_240cb:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSM_13Config_vectorISsEEEESaISQ_EEEENSK_ISL_INSM_10Value_implISP_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_24125:
  ret i32 0
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256P11CBlockIndexEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2418c:
  store i32 82595524, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_241b4

bb:                                               ; preds = %dec_label_pc_2418c
  %v2_241b2 = call i32 @function_241b9(i32 %arg1)
  br label %dec_label_pc_241b4

dec_label_pc_241b4:                               ; preds = %bb, %dec_label_pc_2418c
  %v3_241b2 = phi i32 [ %v2_241b2, %bb ], [ 82595524, %dec_label_pc_2418c ]
  ret i32 %v3_241b2

; uselistorder directives
  uselistorder i32 82595524, { 0, 2, 1, 3 }
}

define i32 @function_241b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_241b9:
  %v0_241ba = load i32, i32* @eax, align 4
  ret i32 %v0_241ba
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256P11CBlockIndexEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_241bc:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_241df

bb:                                               ; preds = %dec_label_pc_241bc
  %v2_241dd = call i32 @function_241e4(i32 %arg1)
  br label %dec_label_pc_241df

dec_label_pc_241df:                               ; preds = %bb, %dec_label_pc_241bc
  %v3_241dd = phi i32 [ %v2_241dd, %bb ], [ 0, %dec_label_pc_241bc ]
  ret i32 %v3_241dd
}

define i32 @function_241e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_241e4:
  %v0_241e5 = load i32, i32* @eax, align 4
  ret i32 %v0_241e5
}

define i32 @_Z9SerializeI11CDataStream7uint256EvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_241e6:
  %v8_2422a = call i32 @unknown_49cb0(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2423b

bb:                                               ; preds = %dec_label_pc_241e6
  %v1_24239 = call i32 @function_24240()
  br label %dec_label_pc_2423b

dec_label_pc_2423b:                               ; preds = %bb, %dec_label_pc_241e6
  %v2_24239 = phi i32 [ %v1_24239, %bb ], [ 0, %dec_label_pc_241e6 ]
  ret i32 %v2_24239

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24240() local_unnamed_addr {
dec_label_pc_24240:
  %v0_24241 = load i32, i32* @eax, align 4
  ret i32 %v0_24241
}

define i32 @_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24242:
  ret i32 %arg2
}

define i32 @function_2429e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2429e:
  %v0_242a0 = call i32 @unknown_46a29()
  %v0_242a5 = load i32, i32* @ebp, align 4
  %v1_242a5 = add i32 %v0_242a5, -36
  %v2_242a5 = inttoptr i32 %v1_242a5 to i32*
  %v3_242a5 = load i32, i32* %v2_242a5, align 4
  %v5_242a5 = add i32 %v3_242a5, %v0_242a0
  store i32 %v5_242a5, i32* %v2_242a5, align 4
  %v0_242a8 = load i32, i32* @ebp, align 4
  %v1_242a8 = add i32 %v0_242a8, -44
  %v2_242a8 = inttoptr i32 %v1_242a8 to i32*
  %v3_242a8 = load i32, i32* %v2_242a8, align 4
  %v1_242ab = inttoptr i32 %v3_242a8 to i32*
  %v2_242ab = load i32, i32* %v1_242ab, align 4
  %v2_242ad = add i32 %v0_242a8, -56
  %v3_242ad = inttoptr i32 %v2_242ad to i32*
  store i32 %v2_242ab, i32* %v3_242ad, align 4
  %v0_242b0 = load i32, i32* @ebp, align 4
  %v1_242b0 = add i32 %v0_242b0, -44
  %v2_242b0 = inttoptr i32 %v1_242b0 to i32*
  %v3_242b0 = load i32, i32* %v2_242b0, align 4
  %v1_242b3 = add i32 %v3_242b0, 4
  %v0_242b6 = load i32, i32* @edi, align 4
  %v1_242bc = add i32 %v0_242b0, -56
  %v2_242bc = inttoptr i32 %v1_242bc to i32*
  %v3_242bc = load i32, i32* %v2_242bc, align 4
  %v1_242c3 = add i32 %v0_242b0, -52
  %v2_242c3 = inttoptr i32 %v1_242c3 to i32*
  %v3_242c3 = load i32, i32* %v2_242c3, align 4
  %v1_242ce = add i32 %v0_242b0, -48
  %v2_242ce = inttoptr i32 %v1_242ce to i32*
  %v3_242ce = load i32, i32* %v2_242ce, align 4
  %sext = mul i32 %v0_242b6, 16777216
  %v5_242d4 = sdiv i32 %sext, 16777216
  %v6_242d4 = call i32 @unknown_49d62(i32 %v3_242ce, i32 %v1_242b3, i32 %v3_242c3, i32 %v3_242bc, i32 %v5_242d4)
  %v0_242d9 = load i32, i32* @ebp, align 4
  %v1_242d9 = add i32 %v0_242d9, -36
  %v2_242d9 = inttoptr i32 %v1_242d9 to i32*
  %v3_242d9 = load i32, i32* %v2_242d9, align 4
  %v5_242d9 = add i32 %v3_242d9, %v6_242d4
  store i32 %v5_242d9, i32* %v2_242d9, align 4
  %v0_242dc = load i32, i32* @ebp, align 4
  %v1_242dc = add i32 %v0_242dc, -44
  %v2_242dc = inttoptr i32 %v1_242dc to i32*
  %v3_242dc = load i32, i32* %v2_242dc, align 4
  %v1_242df = add i32 %v3_242dc, 16
  %v0_242e2 = load i32, i32* @esi, align 4
  %v1_242e8 = add i32 %v0_242dc, -56
  %v2_242e8 = inttoptr i32 %v1_242e8 to i32*
  %v3_242e8 = load i32, i32* %v2_242e8, align 4
  %v1_242ef = add i32 %v0_242dc, -52
  %v2_242ef = inttoptr i32 %v1_242ef to i32*
  %v3_242ef = load i32, i32* %v2_242ef, align 4
  %v1_242fa = add i32 %v0_242dc, -48
  %v2_242fa = inttoptr i32 %v1_242fa to i32*
  %v3_242fa = load i32, i32* %v2_242fa, align 4
  %sext1 = mul i32 %v0_242e2, 16777216
  %v5_24300 = sdiv i32 %sext1, 16777216
  %v6_24300 = call i32 @unknown_49dca(i32 %v3_242fa, i32 %v1_242df, i32 %v3_242ef, i32 %v3_242e8, i32 %v5_24300)
  %v0_24305 = load i32, i32* @ebp, align 4
  %v1_24305 = add i32 %v0_24305, -36
  %v2_24305 = inttoptr i32 %v1_24305 to i32*
  %v3_24305 = load i32, i32* %v2_24305, align 4
  %v5_24305 = add i32 %v3_24305, %v6_24300
  store i32 %v5_24305, i32* %v2_24305, align 4
  %v0_24308 = load i32, i32* @ebp, align 4
  %v1_24308 = add i32 %v0_24308, -44
  %v2_24308 = inttoptr i32 %v1_24308 to i32*
  %v3_24308 = load i32, i32* %v2_24308, align 4
  %v1_2430b = add i32 %v3_24308, 28
  %v0_2430e = load i32, i32* @ebx, align 4
  %v1_24312 = add i32 %v0_24308, -56
  %v2_24312 = inttoptr i32 %v1_24312 to i32*
  %v3_24312 = load i32, i32* %v2_24312, align 4
  %v1_24319 = add i32 %v0_24308, -52
  %v2_24319 = inttoptr i32 %v1_24319 to i32*
  %v3_24319 = load i32, i32* %v2_24319, align 4
  %v1_24324 = add i32 %v0_24308, -48
  %v2_24324 = inttoptr i32 %v1_24324 to i32*
  %v3_24324 = load i32, i32* %v2_24324, align 4
  %sext2 = mul i32 %v0_2430e, 16777216
  %v5_2432a = sdiv i32 %sext2, 16777216
  %v6_2432a = call i32 @unknown_402c4(i32 %v3_24324, i32 %v1_2430b, i32 %v3_24319, i32 %v3_24312, i32 %v5_2432a)
  %v0_2432f = load i32, i32* @ebp, align 4
  %v1_2432f = add i32 %v0_2432f, -36
  %v2_2432f = inttoptr i32 %v1_2432f to i32*
  %v3_2432f = load i32, i32* %v2_2432f, align 4
  %v5_2432f = add i32 %v3_2432f, %v6_2432a
  store i32 %v5_2432f, i32* %v2_2432f, align 4
  %v0_24332 = load i32, i32* @ebp, align 4
  %v1_24332 = add i32 %v0_24332, -28
  %v2_24332 = inttoptr i32 %v1_24332 to i32*
  %v3_24332 = load i32, i32* %v2_24332, align 4
  %v1_24335 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24335 = xor i32 %v1_24335, %v3_24332
  %v3_24335 = icmp eq i32 %v2_24335, 0
  store i32 %v2_24335, i32* @eax, align 4
  br i1 %v3_24335, label %bb, label %dec_label_pc_2433e

bb:                                               ; preds = %dec_label_pc_2429e
  %v1_2433c = call i32 @function_24343()
  br label %dec_label_pc_2433e

dec_label_pc_2433e:                               ; preds = %bb, %dec_label_pc_2429e
  %v2_2433c = phi i32 [ %v1_2433c, %bb ], [ %v2_24335, %dec_label_pc_2429e ]
  ret i32 %v2_2433c

; uselistorder directives
  uselistorder i32 %v0_24308, { 0, 2, 1, 3 }
  uselistorder i32 %v0_242dc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_242b0, { 0, 2, 1, 3 }
}

define i32 @function_24343() local_unnamed_addr {
dec_label_pc_24343:
  %v0_2434a = load i32, i32* @eax, align 4
  ret i32 %v0_2434a
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2434c:
  %v2_24366 = load i32, i32* %arg1, align 4
  %v1_2436b = call i32 @unknown_49f3c(i32 %v2_24366)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2437c

bb:                                               ; preds = %dec_label_pc_2434c
  %v1_2437a = call i32 @function_24381()
  br label %dec_label_pc_2437c

dec_label_pc_2437c:                               ; preds = %bb, %dec_label_pc_2434c
  %v2_2437a = phi i32 [ %v1_2437a, %bb ], [ 0, %dec_label_pc_2434c ]
  ret i32 %v2_2437a
}

define i32 @function_24381() local_unnamed_addr {
dec_label_pc_24381:
  %v0_24382 = load i32, i32* @eax, align 4
  ret i32 %v0_24382
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_24384:
  %v2_2439e = load i32, i32* %arg1, align 4
  %v1_243a3 = call i32 @unknown_49fba(i32 %v2_2439e)
  ret i32 0
}

define i32 @function_243b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_243b2:
  %v0_243b2 = load i1, i1* @zf, align 1
  br i1 %v0_243b2, label %bb, label %dec_label_pc_243b2.dec_label_pc_243b4_crit_edge

dec_label_pc_243b2.dec_label_pc_243b4_crit_edge:  ; preds = %dec_label_pc_243b2
  %v2_243b2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_243b4

bb:                                               ; preds = %dec_label_pc_243b2
  %v1_243b2 = call i32 @function_243b9()
  br label %dec_label_pc_243b4

dec_label_pc_243b4:                               ; preds = %dec_label_pc_243b2.dec_label_pc_243b4_crit_edge, %bb
  %v2_243b2 = phi i32 [ %v2_243b2.pre, %dec_label_pc_243b2.dec_label_pc_243b4_crit_edge ], [ %v1_243b2, %bb ]
  ret i32 %v2_243b2

; uselistorder directives
  uselistorder label %dec_label_pc_243b4, { 1, 0 }
}

define i32 @function_243b9() local_unnamed_addr {
dec_label_pc_243b9:
  %v0_243ba = load i32, i32* @eax, align 4
  ret i32 %v0_243ba
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_intoC1EPv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_243bc:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_243df = call i32 @unknown_4a038(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_243f8

bb:                                               ; preds = %dec_label_pc_243bc
  %v1_243f6 = call i32 @function_243fd()
  br label %dec_label_pc_243f8

dec_label_pc_243f8:                               ; preds = %bb, %dec_label_pc_243bc
  %v2_243f6 = phi i32 [ %v1_243f6, %bb ], [ 0, %dec_label_pc_243bc ]
  ret i32 %v2_243f6
}

define i32 @function_243fd() local_unnamed_addr {
dec_label_pc_243fd:
  %v0_243fe = load i32, i32* @eax, align 4
  ret i32 %v0_243fe
}

define i32 @_ZN5boost14static_visitorIiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24400:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24423

bb:                                               ; preds = %dec_label_pc_24400
  %v2_24421 = call i32 @function_24428(i32 %arg1)
  br label %dec_label_pc_24423

dec_label_pc_24423:                               ; preds = %bb, %dec_label_pc_24400
  %v3_24421 = phi i32 [ %v2_24421, %bb ], [ 0, %dec_label_pc_24400 ]
  ret i32 %v3_24421
}

define i32 @function_24428(i32 %arg1) local_unnamed_addr {
dec_label_pc_24428:
  %v0_24429 = load i32, i32* @eax, align 4
  ret i32 %v0_24429
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSJ_17convert_copy_intoEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2442a:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2444b = add i32 %tmp105, 4
  %v1_24451 = call i32 @unknown_3cc00(i32 %v1_2444b)
  %v1_2445e = call i32 @unknown_3e90c(i32 %tmp105)
  %v2_24468 = load i32, i32* %arg1, align 4
  %v4_2447c = call i32 @unknown_4a0db(i32 %v2_24468, i32 %v1_2445e, i32 %arg2, i32 %v1_24451)
  store i32 %v4_2447c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2448d

bb:                                               ; preds = %dec_label_pc_2442a
  %v1_2448b = call i32 @function_24492()
  br label %dec_label_pc_2448d

dec_label_pc_2448d:                               ; preds = %bb, %dec_label_pc_2442a
  %v2_2448b = phi i32 [ %v1_2448b, %bb ], [ %v4_2447c, %dec_label_pc_2442a ]
  ret i32 %v2_2448b

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_24492() local_unnamed_addr {
dec_label_pc_24492:
  %v0_24497 = load i32, i32* @eax, align 4
  ret i32 %v0_24497
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14assign_storageEPvNS_7variantISsSM_SS_bxdNS1_5void_ES19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_E18has_fallback_type_EEENT1_11result_typeEiiRS1C_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_24498:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_244e8, label %bb

bb:                                               ; preds = %dec_label_pc_24498
  %sext = mul i32 %arg6, 16777216
  %v12_244e2 = sdiv i32 %sext, 16777216
  %v13_244e2 = sext i8 %arg5 to i32
  %v14_244e2 = call i32 @function_24921(i32 %arg8, i32 %arg7, i32 %v12_244e2, i32 %v13_244e2, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_244e8

dec_label_pc_244e8:                               ; preds = %dec_label_pc_24498, %bb
  %v2_244eb = mul i32 %arg2, 4
  %v1_244ee = add i32 %v2_244eb, ptrtoint (i32* @global_var_24974.1862 to i32)
  %v1_244f3 = inttoptr i32 %v1_244ee to i32*
  %v2_244f3 = load i32, i32* %v1_244f3, align 4
  ret i32 %v2_244f3

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_244e8, { 1, 0 }
}

define i32 @function_244f7() local_unnamed_addr {
dec_label_pc_244f7:
  %v0_244ff = load i32, i32* @ebp, align 4
  %v1_244ff = add i32 %v0_244ff, -83
  %v2_244ff = inttoptr i32 %v1_244ff to i8*
  %v3_244ff = load i8, i8* %v2_244ff, align 1
  %v1_2450f = add i32 %v0_244ff, -56
  %v2_2450f = inttoptr i32 %v1_2450f to i32*
  %v3_2450f = load i32, i32* %v2_2450f, align 4
  %v1_24516 = add i32 %v0_244ff, -52
  %v2_24516 = inttoptr i32 %v1_24516 to i32*
  %v3_24516 = load i32, i32* %v2_24516, align 4
  %v1_2451d = add i32 %v0_244ff, -44
  %v2_2451d = inttoptr i32 %v1_2451d to i32*
  %v3_2451d = load i32, i32* %v2_2451d, align 4
  %v6_24523 = sext i8 %v3_244ff to i32
  %v7_24523 = call i32 @unknown_4a1bd(i32 %v3_2451d, i32 %v3_24516, i32 %v3_2450f, i32 0, i32 %v6_24523, i32 1)
  %v0_24528 = call i32 @function_24959()
  ret i32 %v0_24528

; uselistorder directives
  uselistorder i32 %v0_244ff, { 0, 2, 1, 3 }
}

define i32 @function_2452d() local_unnamed_addr {
dec_label_pc_2452d:
  %v0_24535 = load i32, i32* @ebp, align 4
  %v1_24535 = add i32 %v0_24535, -82
  %v2_24535 = inttoptr i32 %v1_24535 to i8*
  %v3_24535 = load i8, i8* %v2_24535, align 1
  %v1_24545 = add i32 %v0_24535, -56
  %v2_24545 = inttoptr i32 %v1_24545 to i32*
  %v3_24545 = load i32, i32* %v2_24545, align 4
  %v1_2454c = add i32 %v0_24535, -52
  %v2_2454c = inttoptr i32 %v1_2454c to i32*
  %v3_2454c = load i32, i32* %v2_2454c, align 4
  %v1_24553 = add i32 %v0_24535, -44
  %v2_24553 = inttoptr i32 %v1_24553 to i32*
  %v3_24553 = load i32, i32* %v2_24553, align 4
  %v6_24559 = sext i8 %v3_24535 to i32
  %v7_24559 = call i32 @unknown_4a22a(i32 %v3_24553, i32 %v3_2454c, i32 %v3_24545, i32 0, i32 %v6_24559, i32 1)
  %v0_2455e = call i32 @function_24959()
  ret i32 %v0_2455e

; uselistorder directives
  uselistorder i32 %v0_24535, { 0, 2, 1, 3 }
}

define i32 @function_24593(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24593:
  %eax.global-to-local = alloca i32, align 4
  %v0_24598 = load i32, i32* @ebx, align 4
  %v3_24598 = load i32, i32* @eax, align 4
  %v5_245981 = mul i32 %v3_24598, 256
  %v1_245982 = add i32 %v5_245981, %v0_24598
  %v22_24598 = and i32 %v1_245982, 65280
  %v23_24598 = and i32 %v0_24598, -65281
  %v24_24598 = or i32 %v22_24598, %v23_24598
  store i32 %v24_24598, i32* @ebx, align 4
  %v11_2459b = and i32 %v3_24598, -236
  store i32 %v11_2459b, i32* %eax.global-to-local, align 4
  %v1_2459d = inttoptr i32 %v11_2459b to i32*
  %v2_2459d = load i32, i32* %v1_2459d, align 4
  %v4_2459d = add i32 %v2_2459d, %v11_2459b
  store i32 %v4_2459d, i32* %v1_2459d, align 4
  %v0_2459f = load i32, i32* %eax.global-to-local, align 4
  %v1_2459f = inttoptr i32 %v0_2459f to i8*
  %v2_2459f = load i8, i8* %v1_2459f, align 1
  %v4_2459f = trunc i32 %v0_2459f to i8
  %v5_2459f = add i8 %v2_2459f, %v4_2459f
  store i8 %v5_2459f, i8* %v1_2459f, align 1
  %v0_245a1 = load i32, i32* @ebp, align 4
  %v1_245a1 = add i32 %v0_245a1, -80
  %v2_245a1 = inttoptr i32 %v1_245a1 to i8*
  %v3_245a1 = load i8, i8* %v2_245a1, align 1
  %v4_245a1 = zext i8 %v3_245a1 to i32
  store i32 %v4_245a1, i32* %eax.global-to-local, align 4
  %v1_245b1 = add i32 %v0_245a1, -56
  %v2_245b1 = inttoptr i32 %v1_245b1 to i32*
  %v3_245b1 = load i32, i32* %v2_245b1, align 4
  store i32 %v3_245b1, i32* %eax.global-to-local, align 4
  %v1_245b8 = add i32 %v0_245a1, -52
  %v2_245b8 = inttoptr i32 %v1_245b8 to i32*
  %v3_245b8 = load i32, i32* %v2_245b8, align 4
  store i32 %v3_245b8, i32* %eax.global-to-local, align 4
  %v1_245bf = add i32 %v0_245a1, -44
  %v2_245bf = inttoptr i32 %v1_245bf to i32*
  %v3_245bf = load i32, i32* %v2_245bf, align 4
  store i32 %v3_245bf, i32* %eax.global-to-local, align 4
  %v5_245c5 = sext i8 %v3_245a1 to i32
  %v6_245c5 = call i32 @unknown_4a304(i32 %v3_245bf, i32 %v3_245b8, i32 %v3_245b1, i32 0, i32 %v5_245c5)
  store i32 %v6_245c5, i32* %eax.global-to-local, align 4
  %v0_245ca = call i32 @function_24959()
  store i32 %v0_245ca, i32* %eax.global-to-local, align 4
  ret i32 %v0_245ca

; uselistorder directives
  uselistorder i32 %v0_245a1, { 0, 2, 1, 3 }
  uselistorder i32 %v11_2459b, { 0, 2, 1 }
  uselistorder i32 %v3_24598, { 1, 0 }
  uselistorder i32 %v0_24598, { 1, 0 }
}

define i32 @function_245e5(i32 %arg1) local_unnamed_addr {
dec_label_pc_245e5:
  %v2_245e5 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_245e5 = load i32, i32* @eax, align 4
  %v4_245e5 = trunc i32 %v3_245e5 to i8
  %v5_245e5 = add i8 %v4_245e5, %v2_245e5
  %v21_245e5 = inttoptr i32 %v3_245e5 to i8*
  store i8 %v5_245e5, i8* %v21_245e5, align 1
  %v0_245e7 = load i32, i32* @ebp, align 4
  %v1_245e7 = add i32 %v0_245e7, -56
  %v2_245e7 = inttoptr i32 %v1_245e7 to i32*
  %v3_245e7 = load i32, i32* %v2_245e7, align 4
  %v1_245ee = add i32 %v0_245e7, -52
  %v2_245ee = inttoptr i32 %v1_245ee to i32*
  %v3_245ee = load i32, i32* %v2_245ee, align 4
  %v1_245f5 = add i32 %v0_245e7, -44
  %v2_245f5 = inttoptr i32 %v1_245f5 to i32*
  %v3_245f5 = load i32, i32* %v2_245f5, align 4
  %v3_245fb = call i32 @unknown_4a371(i32 %v3_245f5, i32 %v3_245ee, i32 %v3_245e7)
  %v0_24600 = call i32 @function_24959()
  ret i32 %v0_24600
}

define i32 @function_24605() local_unnamed_addr {
dec_label_pc_24605:
  %v0_2460d = load i32, i32* @ebp, align 4
  %v1_2460d = add i32 %v0_2460d, -78
  %v2_2460d = inttoptr i32 %v1_2460d to i8*
  %v3_2460d = load i8, i8* %v2_2460d, align 1
  %v1_2461d = add i32 %v0_2460d, -56
  %v2_2461d = inttoptr i32 %v1_2461d to i32*
  %v3_2461d = load i32, i32* %v2_2461d, align 4
  %v1_24624 = add i32 %v0_2460d, -52
  %v2_24624 = inttoptr i32 %v1_24624 to i32*
  %v3_24624 = load i32, i32* %v2_24624, align 4
  %v1_2462b = add i32 %v0_2460d, -44
  %v2_2462b = inttoptr i32 %v1_2462b to i32*
  %v3_2462b = load i32, i32* %v2_2462b, align 4
  %v6_24631 = sext i8 %v3_2460d to i32
  %v7_24631 = call i32 @unknown_4a3de(i32 %v3_2462b, i32 %v3_24624, i32 %v3_2461d, i32 0, i32 %v6_24631, i32 1)
  %v0_24636 = call i32 @function_24959()
  ret i32 %v0_24636

; uselistorder directives
  uselistorder i32 %v0_2460d, { 0, 2, 1, 3 }
}

define i32 @function_2463b() local_unnamed_addr {
dec_label_pc_2463b:
  %v0_24643 = load i32, i32* @ebp, align 4
  %v1_2465a = add i32 %v0_24643, -52
  %v2_2465a = inttoptr i32 %v1_2465a to i32*
  %v3_2465a = load i32, i32* %v2_2465a, align 4
  %v1_24661 = add i32 %v0_24643, -44
  %v2_24661 = inttoptr i32 %v1_24661 to i32*
  %v3_24661 = load i32, i32* %v2_24661, align 4
  %v2_24667 = call i32 @unknown_4a44b(i32 %v3_24661, i32 %v3_2465a)
  %v0_2466c = call i32 @function_24959()
  ret i32 %v0_2466c

; uselistorder directives
  uselistorder i32 %v0_24643, { 1, 0 }
}

define i32 @function_2469b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2469b:
  %v2_2469d = call i32 @unknown_4a44b(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_246a2 = call i32 @function_24959()
  ret i32 %v0_246a2
}

define i32 @function_246a7() local_unnamed_addr {
dec_label_pc_246a7:
  %v0_246af = load i32, i32* @ebp, align 4
  %v1_246c6 = add i32 %v0_246af, -52
  %v2_246c6 = inttoptr i32 %v1_246c6 to i32*
  %v3_246c6 = load i32, i32* %v2_246c6, align 4
  %v1_246cd = add i32 %v0_246af, -44
  %v2_246cd = inttoptr i32 %v1_246cd to i32*
  %v3_246cd = load i32, i32* %v2_246cd, align 4
  %v2_246d3 = call i32 @unknown_4a44b(i32 %v3_246cd, i32 %v3_246c6)
  %v0_246d8 = call i32 @function_24959()
  ret i32 %v0_246d8

; uselistorder directives
  uselistorder i32 %v0_246af, { 1, 0 }
}

define i32 @function_246dd() local_unnamed_addr {
dec_label_pc_246dd:
  %v0_246e5 = load i32, i32* @ebp, align 4
  %v1_246fc = add i32 %v0_246e5, -52
  %v2_246fc = inttoptr i32 %v1_246fc to i32*
  %v3_246fc = load i32, i32* %v2_246fc, align 4
  %v1_24703 = add i32 %v0_246e5, -44
  %v2_24703 = inttoptr i32 %v1_24703 to i32*
  %v3_24703 = load i32, i32* %v2_24703, align 4
  %v2_24709 = call i32 @unknown_4a44b(i32 %v3_24703, i32 %v3_246fc)
  %v0_2470e = call i32 @function_24959()
  ret i32 %v0_2470e

; uselistorder directives
  uselistorder i32 %v0_246e5, { 1, 0 }
}

define i32 @function_24726(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24726:
  %v0_24726 = load i32, i32* @eax, align 4
  %v1_24726 = trunc i32 %v0_24726 to i8
  %v1_24728 = inttoptr i32 %v0_24726 to i8*
  %v2_24728 = load i8, i8* %v1_24728, align 1
  %v5_24728 = add i8 %v2_24728, %v1_24726
  store i8 %v5_24728, i8* %v1_24728, align 1
  %v0_2472a = load i32, i32* @ebx, align 4
  %v1_2472a = add i32 %v0_2472a, 1149880389
  %v2_2472a = inttoptr i32 %v1_2472a to i8*
  %v3_2472a = load i8, i8* %v2_2472a, align 1
  %v4_2472a = load i32, i32* @ecx, align 4
  %v5_2472a = trunc i32 %v4_2472a to i8
  %v6_2472a = add i8 %v5_2472a, %v3_2472a
  store i8 %v6_2472a, i8* %v2_2472a, align 1
  %v0_24732 = load i32, i32* @ebp, align 4
  %v1_24732 = add i32 %v0_24732, -52
  %v2_24732 = inttoptr i32 %v1_24732 to i32*
  %v3_24732 = load i32, i32* %v2_24732, align 4
  %v1_24739 = add i32 %v0_24732, -44
  %v2_24739 = inttoptr i32 %v1_24739 to i32*
  %v3_24739 = load i32, i32* %v2_24739, align 4
  %v2_2473f = call i32 @unknown_4a44b(i32 %v3_24739, i32 %v3_24732)
  %v0_24744 = call i32 @function_24959()
  ret i32 %v0_24744
}

define i32 @function_24749() local_unnamed_addr {
dec_label_pc_24749:
  %v0_24751 = load i32, i32* @ebp, align 4
  %v1_24768 = add i32 %v0_24751, -52
  %v2_24768 = inttoptr i32 %v1_24768 to i32*
  %v3_24768 = load i32, i32* %v2_24768, align 4
  %v1_2476f = add i32 %v0_24751, -44
  %v2_2476f = inttoptr i32 %v1_2476f to i32*
  %v3_2476f = load i32, i32* %v2_2476f, align 4
  %v2_24775 = call i32 @unknown_4a44b(i32 %v3_2476f, i32 %v3_24768)
  %v0_2477a = call i32 @function_24959()
  ret i32 %v0_2477a

; uselistorder directives
  uselistorder i32 %v0_24751, { 1, 0 }
}

define i32 @function_24793(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24793:
  %v2_24793 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_24793 = load i32, i32* @eax, align 4
  %v4_24793 = trunc i32 %v3_24793 to i8
  %v5_24793 = add i8 %v4_24793, %v2_24793
  %v21_24793 = inttoptr i32 %v3_24793 to i8*
  store i8 %v5_24793, i8* %v21_24793, align 1
  %v2_24795 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_24795 = load i32, i32* @eax, align 4
  %v4_24795 = trunc i32 %v3_24795 to i8
  %v5_24795 = add i8 %v4_24795, %v2_24795
  %v21_24795 = inttoptr i32 %v3_24795 to i8*
  store i8 %v5_24795, i8* %v21_24795, align 1
  %v0_24797 = load i32, i32* @ebp, align 4
  %v1_2479e = add i32 %v0_24797, -52
  %v2_2479e = inttoptr i32 %v1_2479e to i32*
  %v3_2479e = load i32, i32* %v2_2479e, align 4
  %v1_247a5 = add i32 %v0_24797, -44
  %v2_247a5 = inttoptr i32 %v1_247a5 to i32*
  %v3_247a5 = load i32, i32* %v2_247a5, align 4
  %v2_247ab = call i32 @unknown_4a44b(i32 %v3_247a5, i32 %v3_2479e)
  %v0_247b0 = call i32 @function_24959()
  ret i32 %v0_247b0
}

define i32 @function_247b5() local_unnamed_addr {
dec_label_pc_247b5:
  %v0_247bd = load i32, i32* @ebp, align 4
  %v1_247d4 = add i32 %v0_247bd, -52
  %v2_247d4 = inttoptr i32 %v1_247d4 to i32*
  %v3_247d4 = load i32, i32* %v2_247d4, align 4
  %v1_247db = add i32 %v0_247bd, -44
  %v2_247db = inttoptr i32 %v1_247db to i32*
  %v3_247db = load i32, i32* %v2_247db, align 4
  %v2_247e1 = call i32 @unknown_4a44b(i32 %v3_247db, i32 %v3_247d4)
  %v0_247e6 = call i32 @function_24959()
  ret i32 %v0_247e6

; uselistorder directives
  uselistorder i32 %v0_247bd, { 1, 0 }
}

define i32 @function_247eb() local_unnamed_addr {
dec_label_pc_247eb:
  %v0_247f3 = load i32, i32* @ebp, align 4
  %v1_2480a = add i32 %v0_247f3, -52
  %v2_2480a = inttoptr i32 %v1_2480a to i32*
  %v3_2480a = load i32, i32* %v2_2480a, align 4
  %v1_24811 = add i32 %v0_247f3, -44
  %v2_24811 = inttoptr i32 %v1_24811 to i32*
  %v3_24811 = load i32, i32* %v2_24811, align 4
  %v2_24817 = call i32 @unknown_4a44b(i32 %v3_24811, i32 %v3_2480a)
  %v0_2481c = call i32 @function_24959()
  ret i32 %v0_2481c

; uselistorder directives
  uselistorder i32 %v0_247f3, { 1, 0 }
}

define i32 @function_24821() local_unnamed_addr {
dec_label_pc_24821:
  %v0_24829 = load i32, i32* @ebp, align 4
  %v1_24840 = add i32 %v0_24829, -52
  %v2_24840 = inttoptr i32 %v1_24840 to i32*
  %v3_24840 = load i32, i32* %v2_24840, align 4
  %v1_24847 = add i32 %v0_24829, -44
  %v2_24847 = inttoptr i32 %v1_24847 to i32*
  %v3_24847 = load i32, i32* %v2_24847, align 4
  %v2_2484d = call i32 @unknown_4a44b(i32 %v3_24847, i32 %v3_24840)
  %v0_24852 = call i32 @function_24959()
  ret i32 %v0_24852

; uselistorder directives
  uselistorder i32 %v0_24829, { 1, 0 }
}

define i32 @function_2485d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2485d:
  %v2_2485d = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2485d = load i32, i32* @eax, align 4
  %v4_2485d = trunc i32 %v3_2485d to i8
  %v5_2485d = add i8 %v4_2485d, %v2_2485d
  %v21_2485d = inttoptr i32 %v3_2485d to i8*
  store i8 %v5_2485d, i8* %v21_2485d, align 1
  %v0_2485f = load i32, i32* @ebp, align 4
  %v1_24876 = add i32 %v0_2485f, -52
  %v2_24876 = inttoptr i32 %v1_24876 to i32*
  %v3_24876 = load i32, i32* %v2_24876, align 4
  %v1_2487d = add i32 %v0_2485f, -44
  %v2_2487d = inttoptr i32 %v1_2487d to i32*
  %v3_2487d = load i32, i32* %v2_2487d, align 4
  %v2_24883 = call i32 @unknown_4a44b(i32 %v3_2487d, i32 %v3_24876)
  %v0_24888 = call i32 @function_24959()
  ret i32 %v0_24888

; uselistorder directives
  uselistorder i32 %v0_2485f, { 1, 0 }
}

define i32 @function_2488d() local_unnamed_addr {
dec_label_pc_2488d:
  %v0_248a3 = load i32, i32* @ebp, align 4
  %v1_248aa = add i32 %v0_248a3, -52
  %v2_248aa = inttoptr i32 %v1_248aa to i32*
  %v3_248aa = load i32, i32* %v2_248aa, align 4
  %v1_248b1 = add i32 %v0_248a3, -44
  %v2_248b1 = inttoptr i32 %v1_248b1 to i32*
  %v3_248b1 = load i32, i32* %v2_248b1, align 4
  %v2_248b7 = call i32 @unknown_4a44b(i32 %v3_248b1, i32 %v3_248aa)
  %v0_248bc = call i32 @function_24959()
  ret i32 %v0_248bc
}

define i32 @function_248c1() local_unnamed_addr {
dec_label_pc_248c1:
  %v0_248d7 = load i32, i32* @ebp, align 4
  %v1_248de = add i32 %v0_248d7, -52
  %v2_248de = inttoptr i32 %v1_248de to i32*
  %v3_248de = load i32, i32* %v2_248de, align 4
  %v1_248e5 = add i32 %v0_248d7, -44
  %v2_248e5 = inttoptr i32 %v1_248e5 to i32*
  %v3_248e5 = load i32, i32* %v2_248e5, align 4
  %v2_248eb = call i32 @unknown_4a44b(i32 %v3_248e5, i32 %v3_248de)
  %v0_248f0 = call i32 @function_24959()
  ret i32 %v0_248f0
}

define i32 @function_248f2() local_unnamed_addr {
dec_label_pc_248f2:
  %v0_24906 = load i32, i32* @ebp, align 4
  %v1_2490d = add i32 %v0_24906, -52
  %v2_2490d = inttoptr i32 %v1_2490d to i32*
  %v3_2490d = load i32, i32* %v2_2490d, align 4
  %v1_24914 = add i32 %v0_24906, -44
  %v2_24914 = inttoptr i32 %v1_24914 to i32*
  %v3_24914 = load i32, i32* %v2_24914, align 4
  %v2_2491a = call i32 @unknown_4a44b(i32 %v3_24914, i32 %v3_2490d)
  %v0_2491f = call i32 @function_24959()
  ret i32 %v0_2491f

; uselistorder directives
  uselistorder i32 ()* @function_24959, { 18, 17, 16, 3, 15, 14, 13, 4, 12, 5, 11, 10, 2, 9, 8, 1, 0, 7, 6 }
  uselistorder i32 (i32, i32)* @unknown_4a44b, { 13, 12, 11, 1, 10, 9, 8, 2, 7, 3, 6, 5, 0, 4 }
}

define i32 @function_24921(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_24921:
  %v0_24939 = load i32, i32* @ebp, align 4
  %v1_2494e = add i32 %v0_24939, -44
  %v2_2494e = inttoptr i32 %v1_2494e to i32*
  %v3_2494e = load i32, i32* %v2_2494e, align 4
  ret i32 %v3_2494e
}

define i32 @function_24956(i32 %arg1) local_unnamed_addr {
dec_label_pc_24956:
  %v0_24957 = load i32, i32* @eax, align 4
  %v5_24957 = mul i32 %v0_24957, 2
  %v20_24957 = and i32 %v5_24957, 254
  %v22_24957 = and i32 %v0_24957, -256
  %v23_24957 = or i32 %v20_24957, %v22_24957
  ret i32 %v23_24957

; uselistorder directives
  uselistorder i32 %v0_24957, { 1, 0 }
}

define i32 @function_24959() local_unnamed_addr {
dec_label_pc_24959:
  %v0_24959 = load i32, i32* @ebp, align 4
  %v1_24959 = add i32 %v0_24959, -28
  %v2_24959 = inttoptr i32 %v1_24959 to i32*
  %v3_24959 = load i32, i32* %v2_24959, align 4
  %v1_2495c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2495c = xor i32 %v1_2495c, %v3_24959
  %v3_2495c = icmp eq i32 %v2_2495c, 0
  store i32 %v2_2495c, i32* @eax, align 4
  br i1 %v3_2495c, label %bb, label %dec_label_pc_24965

bb:                                               ; preds = %dec_label_pc_24959
  %v2_24963 = call i32 @function_2496a(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_24965

dec_label_pc_24965:                               ; preds = %bb, %dec_label_pc_24959
  %v3_24963 = phi i32 [ %v2_24963, %bb ], [ %v2_2495c, %dec_label_pc_24959 ]
  ret i32 %v3_24963
}

define i32 @function_2496a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2496a:
  store i32 %arg1, i32* @ebx, align 4
  %v0_24971 = load i32, i32* @eax, align 4
  ret i32 %v0_24971
}

define i32 @function_249c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_249c2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS_7variantISsSM_SS_bxdNS1_5void_ES17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_E8assignerEPKvNS18_18has_fallback_type_EEENT1_11result_typeEiiRS1D_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_249c4:
  %v0_249ff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_249ff
}

define i32 @function_24a06(i32 %arg1) local_unnamed_addr {
dec_label_pc_24a06:
  %v0_24a06 = load i32, i32* @ebp, align 4
  %v1_24a06 = add i32 %v0_24a06, 1
  store i32 %v1_24a06, i32* @ebp, align 4
  %v0_24a09 = load i32, i32* @ebx, align 4
  %v1_24a09 = add i32 %v0_24a09, 252956797
  %v2_24a09 = inttoptr i32 %v1_24a09 to i8*
  %v3_24a09 = load i8, i8* %v2_24a09, align 1
  %v4_24a09 = shl i8 %v3_24a09, 7
  %v5_24a09 = udiv i8 %v3_24a09, 2
  %v6_24a09 = or i8 %v5_24a09, %v4_24a09
  store i8 %v6_24a09, i8* %v2_24a09, align 1
  %v0_24a13 = load i32, i32* @ebx, align 4
  %v1_24a13 = add i32 %v0_24a13, -524169147
  %v2_24a13 = inttoptr i32 %v1_24a13 to i8*
  %v3_24a13 = load i8, i8* %v2_24a13, align 1
  %v4_24a13 = load i32, i32* @ecx, align 4
  %v5_24a13 = trunc i32 %v4_24a13 to i8
  %v6_24a13 = add i8 %v5_24a13, %v3_24a13
  store i8 %v6_24a13, i8* %v2_24a13, align 1
  %v0_24a19 = load i32, i32* @eax, align 4
  %v3_24a19 = add i32 %v0_24a19, 35
  %v18_24a19 = and i32 %v3_24a19, 255
  %v20_24a19 = and i32 %v0_24a19, -256
  %v21_24a19 = or i32 %v18_24a19, %v20_24a19
  %v1_24a1f = inttoptr i32 %v21_24a19 to i32*
  %v2_24a1f = load i32, i32* %v1_24a1f, align 4
  ret i32 %v2_24a1f

; uselistorder directives
  uselistorder i32 %v0_24a19, { 1, 0 }
}

define i32 @function_24a2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_24a2a:
  %v2_24a2a = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_24a2a = load i32, i32* @ecx, align 4
  %v4_24a2a = trunc i32 %v3_24a2a to i8
  %v5_24a2a = add i8 %v4_24a2a, %v2_24a2a
  %v20_24a2a = load i32, i32* @edi, align 4
  %v21_24a2a = inttoptr i32 %v20_24a2a to i8*
  store i8 %v5_24a2a, i8* %v21_24a2a, align 1
  %v0_24a3b = load i32, i32* @ebp, align 4
  %v1_24a3b = add i32 %v0_24a3b, -56
  %v2_24a3b = inttoptr i32 %v1_24a3b to i32*
  %v3_24a3b = load i32, i32* %v2_24a3b, align 4
  ret i32 %v3_24a3b
}

define i32 @function_24a42(i32 %arg1) local_unnamed_addr {
dec_label_pc_24a42:
  %v0_24a42 = load i32, i32* @ebp, align 4
  %v1_24a42 = add i32 %v0_24a42, -52
  %v2_24a42 = inttoptr i32 %v1_24a42 to i32*
  %v3_24a42 = load i32, i32* %v2_24a42, align 4
  %v1_24a49 = add i32 %v0_24a42, -44
  %v2_24a49 = inttoptr i32 %v1_24a49 to i32*
  %v3_24a49 = load i32, i32* %v2_24a49, align 4
  %v2_24a4f = call i32 @unknown_4aa38(i32 %v3_24a49, i32 %v3_24a42)
  %v0_24a54 = call i32 @function_24e85()
  ret i32 %v0_24a54
}

define i32 @function_24a6f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24a6f:
  %v2_24a6f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_24a6f = load i32, i32* @eax, align 4
  %v4_24a6f = trunc i32 %v3_24a6f to i8
  %v5_24a6f = add i8 %v4_24a6f, %v2_24a6f
  %v21_24a6f = inttoptr i32 %v3_24a6f to i8*
  store i8 %v5_24a6f, i8* %v21_24a6f, align 1
  %v0_24a71 = load i32, i32* @ebp, align 4
  %v1_24a71 = add i32 %v0_24a71, -56
  %v2_24a71 = inttoptr i32 %v1_24a71 to i32*
  %v3_24a71 = load i32, i32* %v2_24a71, align 4
  %v1_24a78 = add i32 %v0_24a71, -52
  %v2_24a78 = inttoptr i32 %v1_24a78 to i32*
  %v3_24a78 = load i32, i32* %v2_24a78, align 4
  %v1_24a7f = add i32 %v0_24a71, -44
  %v2_24a7f = inttoptr i32 %v1_24a7f to i32*
  %v3_24a7f = load i32, i32* %v2_24a7f, align 4
  %v3_24a85 = call i32 @unknown_4aaa5(i32 %v3_24a7f, i32 %v3_24a78, i32 %v3_24a71)
  %v0_24a8a = call i32 @function_24e85()
  ret i32 %v0_24a8a
}

define i32 @function_24a8f() local_unnamed_addr {
dec_label_pc_24a8f:
  %v0_24a97 = load i32, i32* @ebp, align 4
  %v1_24a97 = add i32 %v0_24a97, -81
  %v2_24a97 = inttoptr i32 %v1_24a97 to i8*
  %v3_24a97 = load i8, i8* %v2_24a97, align 1
  %v1_24aa7 = add i32 %v0_24a97, -56
  %v2_24aa7 = inttoptr i32 %v1_24aa7 to i32*
  %v3_24aa7 = load i32, i32* %v2_24aa7, align 4
  %v1_24aae = add i32 %v0_24a97, -52
  %v2_24aae = inttoptr i32 %v1_24aae to i32*
  %v3_24aae = load i32, i32* %v2_24aae, align 4
  %v1_24ab5 = add i32 %v0_24a97, -44
  %v2_24ab5 = inttoptr i32 %v1_24ab5 to i32*
  %v3_24ab5 = load i32, i32* %v2_24ab5, align 4
  %v6_24abb = sext i8 %v3_24a97 to i32
  %v7_24abb = call i32 @unknown_4ab12(i32 %v3_24ab5, i32 %v3_24aae, i32 %v3_24aa7, i32 0, i32 %v6_24abb, i32 1)
  %v0_24ac0 = call i32 @function_24e85()
  ret i32 %v0_24ac0

; uselistorder directives
  uselistorder i32 %v0_24a97, { 0, 2, 1, 3 }
}

define i32 @function_24aea(i32 %arg1) local_unnamed_addr {
dec_label_pc_24aea:
  %v0_24aec = load i32, i32* @ebp, align 4
  %v1_24aec = add i32 %v0_24aec, 1
  store i32 %v1_24aec, i32* @ebp, align 4
  %v0_24af1 = call i32 @unknown_4ab7f()
  %v0_24af6 = call i32 @function_24e85()
  ret i32 %v0_24af6
}

define i32 @function_24afb() local_unnamed_addr {
dec_label_pc_24afb:
  %v0_24b03 = load i32, i32* @ebp, align 4
  %v1_24b03 = add i32 %v0_24b03, -79
  %v2_24b03 = inttoptr i32 %v1_24b03 to i8*
  %v3_24b03 = load i8, i8* %v2_24b03, align 1
  %v1_24b13 = add i32 %v0_24b03, -56
  %v2_24b13 = inttoptr i32 %v1_24b13 to i32*
  %v3_24b13 = load i32, i32* %v2_24b13, align 4
  %v1_24b1a = add i32 %v0_24b03, -52
  %v2_24b1a = inttoptr i32 %v1_24b1a to i32*
  %v3_24b1a = load i32, i32* %v2_24b1a, align 4
  %v1_24b21 = add i32 %v0_24b03, -44
  %v2_24b21 = inttoptr i32 %v1_24b21 to i32*
  %v3_24b21 = load i32, i32* %v2_24b21, align 4
  %v6_24b27 = sext i8 %v3_24b03 to i32
  %v7_24b27 = call i32 @unknown_4abec(i32 %v3_24b21, i32 %v3_24b1a, i32 %v3_24b13, i32 0, i32 %v6_24b27, i32 1)
  %v0_24b2c = call i32 @function_24e85()
  ret i32 %v0_24b2c

; uselistorder directives
  uselistorder i32 %v0_24b03, { 0, 2, 1, 3 }
  uselistorder i32 -79, { 0, 1, 6, 2, 3, 4, 5 }
}

define i32 @function_24b31() local_unnamed_addr {
dec_label_pc_24b31:
  %v0_24b39 = load i32, i32* @ebp, align 4
  %v1_24b39 = add i32 %v0_24b39, -78
  %v2_24b39 = inttoptr i32 %v1_24b39 to i8*
  %v3_24b39 = load i8, i8* %v2_24b39, align 1
  %v1_24b49 = add i32 %v0_24b39, -56
  %v2_24b49 = inttoptr i32 %v1_24b49 to i32*
  %v3_24b49 = load i32, i32* %v2_24b49, align 4
  %v1_24b50 = add i32 %v0_24b39, -52
  %v2_24b50 = inttoptr i32 %v1_24b50 to i32*
  %v3_24b50 = load i32, i32* %v2_24b50, align 4
  %v1_24b57 = add i32 %v0_24b39, -44
  %v2_24b57 = inttoptr i32 %v1_24b57 to i32*
  %v3_24b57 = load i32, i32* %v2_24b57, align 4
  %v6_24b5d = sext i8 %v3_24b39 to i32
  %v7_24b5d = call i32 @unknown_4ac59(i32 %v3_24b57, i32 %v3_24b50, i32 %v3_24b49, i32 0, i32 %v6_24b5d, i32 1)
  %v0_24b62 = call i32 @function_24e85()
  ret i32 %v0_24b62

; uselistorder directives
  uselistorder i32 %v0_24b39, { 0, 2, 1, 3 }
}

define i32 @function_24b84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24b84:
  %v0_24b86 = load i32, i32* @ebp, align 4
  %v1_24b86 = add i32 %v0_24b86, -52
  %v2_24b86 = inttoptr i32 %v1_24b86 to i32*
  %v3_24b86 = load i32, i32* %v2_24b86, align 4
  %v1_24b8d = add i32 %v0_24b86, -44
  %v2_24b8d = inttoptr i32 %v1_24b8d to i32*
  %v3_24b8d = load i32, i32* %v2_24b8d, align 4
  %v2_24b93 = call i32 @unknown_4acc6(i32 %v3_24b8d, i32 %v3_24b86)
  %v0_24b98 = call i32 @function_24e85()
  ret i32 %v0_24b98
}

define i32 @function_24baa(i32 %arg1) local_unnamed_addr {
dec_label_pc_24baa:
  %v0_24bab = load i32, i32* @eax, align 4
  %v11_24bab = and i32 %v0_24bab, -240
  ret i32 %v11_24bab
}

define i32 @function_24bb6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24bb6:
  %v15_24bb6 = load i32, i32* @eax, align 4
  ret i32 %v15_24bb6
}

define i32 @function_24bb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24bb8:
  %v0_24bbc = load i32, i32* @ebp, align 4
  %v1_24bbc = add i32 %v0_24bbc, -52
  %v2_24bbc = inttoptr i32 %v1_24bbc to i32*
  %v3_24bbc = load i32, i32* %v2_24bbc, align 4
  %v1_24bc3 = add i32 %v0_24bbc, -44
  %v2_24bc3 = inttoptr i32 %v1_24bc3 to i32*
  %v3_24bc3 = load i32, i32* %v2_24bc3, align 4
  %v2_24bc9 = call i32 @unknown_4acc6(i32 %v3_24bc3, i32 %v3_24bbc)
  %v0_24bce = call i32 @function_24e85()
  ret i32 %v0_24bce
}

define i32 @function_24bfe() local_unnamed_addr {
dec_label_pc_24bfe:
  %eax.global-to-local = alloca i32, align 4
  %v0_24bfe = load i32, i32* %eax.global-to-local, align 4
  %v11_24bfe = and i32 %v0_24bfe, -24
  store i32 %v11_24bfe, i32* %eax.global-to-local, align 4
  ret i32 %v11_24bfe

; uselistorder directives
  uselistorder i32 %v11_24bfe, { 1, 0 }
}

define i32 @function_24c08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c08:
  %eax.global-to-local = alloca i32, align 4
  %v3_24c08 = load i32, i32* @eax, align 4
  %v11_24c0b = and i32 %v3_24c08, -236
  store i32 %v11_24c0b, i32* %eax.global-to-local, align 4
  %v1_24c0d = inttoptr i32 %v11_24c0b to i32*
  %v2_24c0d = load i32, i32* %v1_24c0d, align 4
  %v4_24c0d = add i32 %v2_24c0d, %v11_24c0b
  store i32 %v4_24c0d, i32* %v1_24c0d, align 4
  %v0_24c0f = load i32, i32* %eax.global-to-local, align 4
  %v1_24c0f = inttoptr i32 %v0_24c0f to i8*
  %v2_24c0f = load i8, i8* %v1_24c0f, align 1
  %v4_24c0f = trunc i32 %v0_24c0f to i8
  %v5_24c0f = add i8 %v2_24c0f, %v4_24c0f
  store i8 %v5_24c0f, i8* %v1_24c0f, align 1
  %v0_24c11 = load i32, i32* @ebp, align 4
  %v1_24c11 = add i32 %v0_24c11, -74
  %v2_24c11 = inttoptr i32 %v1_24c11 to i8*
  %v3_24c11 = load i8, i8* %v2_24c11, align 1
  %v4_24c11 = zext i8 %v3_24c11 to i32
  store i32 %v4_24c11, i32* %eax.global-to-local, align 4
  %v1_24c21 = add i32 %v0_24c11, -56
  %v2_24c21 = inttoptr i32 %v1_24c21 to i32*
  %v3_24c21 = load i32, i32* %v2_24c21, align 4
  store i32 %v3_24c21, i32* %eax.global-to-local, align 4
  %v1_24c28 = add i32 %v0_24c11, -52
  %v2_24c28 = inttoptr i32 %v1_24c28 to i32*
  %v3_24c28 = load i32, i32* %v2_24c28, align 4
  store i32 %v3_24c28, i32* %eax.global-to-local, align 4
  %v1_24c2f = add i32 %v0_24c11, -44
  %v2_24c2f = inttoptr i32 %v1_24c2f to i32*
  %v3_24c2f = load i32, i32* %v2_24c2f, align 4
  store i32 %v3_24c2f, i32* %eax.global-to-local, align 4
  %v2_24c35 = call i32 @unknown_4acc6(i32 %v3_24c2f, i32 %v3_24c28)
  store i32 %v2_24c35, i32* %eax.global-to-local, align 4
  %v0_24c3a = call i32 @function_24e85()
  store i32 %v0_24c3a, i32* %eax.global-to-local, align 4
  ret i32 %v0_24c3a

; uselistorder directives
  uselistorder i32 %v0_24c11, { 1, 0, 2, 3 }
  uselistorder i32 %v11_24c0b, { 0, 2, 1 }
}

define i32 @function_24c3f() local_unnamed_addr {
dec_label_pc_24c3f:
  %v0_24c47 = load i32, i32* @ebp, align 4
  %v1_24c5e = add i32 %v0_24c47, -52
  %v2_24c5e = inttoptr i32 %v1_24c5e to i32*
  %v3_24c5e = load i32, i32* %v2_24c5e, align 4
  %v1_24c65 = add i32 %v0_24c47, -44
  %v2_24c65 = inttoptr i32 %v1_24c65 to i32*
  %v3_24c65 = load i32, i32* %v2_24c65, align 4
  %v2_24c6b = call i32 @unknown_4acc6(i32 %v3_24c65, i32 %v3_24c5e)
  %v0_24c70 = call i32 @function_24e85()
  ret i32 %v0_24c70

; uselistorder directives
  uselistorder i32 %v0_24c47, { 1, 0 }
}

define i32 @function_24c92(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c92:
  %v0_24c94 = load i32, i32* @ebp, align 4
  %v1_24c94 = add i32 %v0_24c94, -52
  %v2_24c94 = inttoptr i32 %v1_24c94 to i32*
  %v3_24c94 = load i32, i32* %v2_24c94, align 4
  %v1_24c9b = add i32 %v0_24c94, -44
  %v2_24c9b = inttoptr i32 %v1_24c9b to i32*
  %v3_24c9b = load i32, i32* %v2_24c9b, align 4
  %v2_24ca1 = call i32 @unknown_4acc6(i32 %v3_24c9b, i32 %v3_24c94)
  %v0_24ca6 = call i32 @function_24e85()
  ret i32 %v0_24ca6
}

define i32 @function_24cdc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24cdc:
  %v0_24cdc = call i32 @function_24e85()
  ret i32 %v0_24cdc
}

define i32 @function_24ce1() local_unnamed_addr {
dec_label_pc_24ce1:
  %v0_24ce9 = load i32, i32* @ebp, align 4
  %v1_24d00 = add i32 %v0_24ce9, -52
  %v2_24d00 = inttoptr i32 %v1_24d00 to i32*
  %v3_24d00 = load i32, i32* %v2_24d00, align 4
  %v1_24d07 = add i32 %v0_24ce9, -44
  %v2_24d07 = inttoptr i32 %v1_24d07 to i32*
  %v3_24d07 = load i32, i32* %v2_24d07, align 4
  %v2_24d0d = call i32 @unknown_4acc6(i32 %v3_24d07, i32 %v3_24d00)
  %v0_24d12 = call i32 @function_24e85()
  ret i32 %v0_24d12

; uselistorder directives
  uselistorder i32 %v0_24ce9, { 1, 0 }
}

define i32 @function_24d24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24d24:
  %v0_24d2f = load i32, i32* @ebp, align 4
  %v1_24d36 = add i32 %v0_24d2f, -52
  %v2_24d36 = inttoptr i32 %v1_24d36 to i32*
  %v3_24d36 = load i32, i32* %v2_24d36, align 4
  %v1_24d3d = add i32 %v0_24d2f, -44
  %v2_24d3d = inttoptr i32 %v1_24d3d to i32*
  %v3_24d3d = load i32, i32* %v2_24d3d, align 4
  %v2_24d43 = call i32 @unknown_4acc6(i32 %v3_24d3d, i32 %v3_24d36)
  %v0_24d48 = call i32 @function_24e85()
  ret i32 %v0_24d48
}

define i32 @function_24d4d() local_unnamed_addr {
dec_label_pc_24d4d:
  %v0_24d55 = load i32, i32* @ebp, align 4
  %v1_24d6c = add i32 %v0_24d55, -52
  %v2_24d6c = inttoptr i32 %v1_24d6c to i32*
  %v3_24d6c = load i32, i32* %v2_24d6c, align 4
  %v1_24d73 = add i32 %v0_24d55, -44
  %v2_24d73 = inttoptr i32 %v1_24d73 to i32*
  %v3_24d73 = load i32, i32* %v2_24d73, align 4
  %v2_24d79 = call i32 @unknown_4acc6(i32 %v3_24d73, i32 %v3_24d6c)
  %v0_24d7e = call i32 @function_24e85()
  ret i32 %v0_24d7e

; uselistorder directives
  uselistorder i32 %v0_24d55, { 1, 0 }
}

define i32 @function_24d83() local_unnamed_addr {
dec_label_pc_24d83:
  %v0_24d8b = load i32, i32* @ebp, align 4
  %v1_24da2 = add i32 %v0_24d8b, -52
  %v2_24da2 = inttoptr i32 %v1_24da2 to i32*
  %v3_24da2 = load i32, i32* %v2_24da2, align 4
  %v1_24da9 = add i32 %v0_24d8b, -44
  %v2_24da9 = inttoptr i32 %v1_24da9 to i32*
  %v3_24da9 = load i32, i32* %v2_24da9, align 4
  %v2_24daf = call i32 @unknown_4acc6(i32 %v3_24da9, i32 %v3_24da2)
  %v0_24db4 = call i32 @function_24e85()
  ret i32 %v0_24db4

; uselistorder directives
  uselistorder i32 %v0_24d8b, { 1, 0 }
}

define i32 @function_24db9() local_unnamed_addr {
dec_label_pc_24db9:
  %v0_24dcf = load i32, i32* @ebp, align 4
  %v1_24dd6 = add i32 %v0_24dcf, -52
  %v2_24dd6 = inttoptr i32 %v1_24dd6 to i32*
  %v3_24dd6 = load i32, i32* %v2_24dd6, align 4
  %v1_24ddd = add i32 %v0_24dcf, -44
  %v2_24ddd = inttoptr i32 %v1_24ddd to i32*
  %v3_24ddd = load i32, i32* %v2_24ddd, align 4
  %v2_24de3 = call i32 @unknown_4acc6(i32 %v3_24ddd, i32 %v3_24dd6)
  %v0_24de8 = call i32 @function_24e85()
  ret i32 %v0_24de8
}

define i32 @function_24ded() local_unnamed_addr {
dec_label_pc_24ded:
  %v0_24e03 = load i32, i32* @ebp, align 4
  %v1_24e0a = add i32 %v0_24e03, -52
  %v2_24e0a = inttoptr i32 %v1_24e0a to i32*
  %v3_24e0a = load i32, i32* %v2_24e0a, align 4
  %v1_24e11 = add i32 %v0_24e03, -44
  %v2_24e11 = inttoptr i32 %v1_24e11 to i32*
  %v3_24e11 = load i32, i32* %v2_24e11, align 4
  %v2_24e17 = call i32 @unknown_4acc6(i32 %v3_24e11, i32 %v3_24e0a)
  %v0_24e1c = call i32 @function_24e85()
  ret i32 %v0_24e1c
}

define i32 @function_24e1e() local_unnamed_addr {
dec_label_pc_24e1e:
  %v0_24e32 = load i32, i32* @ebp, align 4
  %v1_24e39 = add i32 %v0_24e32, -52
  %v2_24e39 = inttoptr i32 %v1_24e39 to i32*
  %v3_24e39 = load i32, i32* %v2_24e39, align 4
  %v1_24e40 = add i32 %v0_24e32, -44
  %v2_24e40 = inttoptr i32 %v1_24e40 to i32*
  %v3_24e40 = load i32, i32* %v2_24e40, align 4
  %v2_24e46 = call i32 @unknown_4acc6(i32 %v3_24e40, i32 %v3_24e39)
  %v0_24e4b = call i32 @function_24e85()
  ret i32 %v0_24e4b

; uselistorder directives
  uselistorder i32 ()* @function_24e85, { 18, 17, 16, 15, 14, 6, 13, 5, 4, 12, 3, 2, 8, 11, 10, 7, 9, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4acc6, { 11, 10, 9, 8, 7, 3, 6, 2, 5, 1, 0, 4 }
}

define i32 @function_24e50(i32 %arg1) local_unnamed_addr {
dec_label_pc_24e50:
  %eax.global-to-local = alloca i32, align 4
  %v0_24e50 = load i32, i32* @eax, align 4
  %v1_24e50 = trunc i32 %v0_24e50 to i8
  %v2_24e50 = load i1, i1* @cf, align 1
  %v3_24e50 = zext i1 %v2_24e50 to i8
  %v4_24e50 = add i8 %v3_24e50, %v1_24e50
  %v29_24e50 = zext i8 %v4_24e50 to i32
  %v31_24e50 = and i32 %v0_24e50, -256
  %v32_24e50 = or i32 %v29_24e50, %v31_24e50
  store i32 %v32_24e50, i32* %eax.global-to-local, align 4
  %v1_24e52 = inttoptr i32 %v32_24e50 to i8*
  %v2_24e52 = load i8, i8* %v1_24e52, align 1
  %v5_24e52 = add i8 %v2_24e52, %v4_24e50
  store i8 %v5_24e52, i8* %v1_24e52, align 1
  %v3_24e54 = load i32, i32* %eax.global-to-local, align 4
  %v4_24e54 = trunc i32 %v3_24e54 to i8
  %v2_24e57 = and i8 %v4_24e54, 24
  %v8_24e57 = zext i8 %v2_24e57 to i32
  %v10_24e57 = and i32 %v3_24e54, -256
  %v11_24e57 = or i32 %v8_24e57, %v10_24e57
  store i32 %v11_24e57, i32* %eax.global-to-local, align 4
  %v1_24e59 = inttoptr i32 %v11_24e57 to i8*
  %v2_24e59 = load i8, i8* %v1_24e59, align 8
  %v5_24e59 = add i8 %v2_24e59, %v2_24e57
  store i8 %v5_24e59, i8* %v1_24e59, align 8
  %v0_24e5b = load i32, i32* %eax.global-to-local, align 4
  %v1_24e5b = inttoptr i32 %v0_24e5b to i8*
  %v2_24e5b = load i8, i8* %v1_24e5b, align 1
  %v4_24e5b = trunc i32 %v0_24e5b to i8
  %v5_24e5b = add i8 %v2_24e5b, %v4_24e5b
  store i8 %v5_24e5b, i8* %v1_24e5b, align 1
  %v0_24e5d = load i32, i32* @ecx, align 4
  %v0_24e61 = load i32, i32* @edx, align 8
  %v0_24e65 = load i32, i32* @ebp, align 4
  %v1_24e65 = add i32 %v0_24e65, -56
  %v2_24e65 = inttoptr i32 %v1_24e65 to i32*
  %v3_24e65 = load i32, i32* %v2_24e65, align 4
  store i32 %v3_24e65, i32* %eax.global-to-local, align 4
  %v1_24e6c = add i32 %v0_24e65, -52
  %v2_24e6c = inttoptr i32 %v1_24e6c to i32*
  %v3_24e6c = load i32, i32* %v2_24e6c, align 4
  store i32 %v3_24e6c, i32* %eax.global-to-local, align 4
  %v1_24e73 = add i32 %v0_24e65, -48
  %v2_24e73 = inttoptr i32 %v1_24e73 to i32*
  %v3_24e73 = load i32, i32* %v2_24e73, align 4
  store i32 %v3_24e73, i32* %eax.global-to-local, align 4
  %v1_24e7a = add i32 %v0_24e65, -44
  %v2_24e7a = inttoptr i32 %v1_24e7a to i32*
  %v3_24e7a = load i32, i32* %v2_24e7a, align 4
  store i32 %v3_24e7a, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_24e61, 16777216
  %v6_24e80 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_24e5d, 16777216
  %v7_24e80 = sdiv i32 %sext1, 16777216
  %v8_24e80 = call i32 @unknown_4ad20(i32 %v3_24e7a, i32 %v3_24e73, i32 %v3_24e6c, i32 %v3_24e65, i32 %v6_24e80, i32 %v7_24e80)
  store i32 %v8_24e80, i32* %eax.global-to-local, align 4
  ret i32 %v8_24e80

; uselistorder directives
  uselistorder i32 %v0_24e65, { 1, 0, 2, 3 }
}

define i32 @function_24e85() local_unnamed_addr {
dec_label_pc_24e85:
  %v0_24e85 = load i32, i32* @ebp, align 4
  %v1_24e85 = add i32 %v0_24e85, -28
  %v2_24e85 = inttoptr i32 %v1_24e85 to i32*
  %v3_24e85 = load i32, i32* %v2_24e85, align 4
  %v1_24e88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24e88 = xor i32 %v1_24e88, %v3_24e85
  %v3_24e88 = icmp eq i32 %v2_24e88, 0
  store i32 %v2_24e88, i32* @eax, align 4
  br i1 %v3_24e88, label %bb, label %dec_label_pc_24e91

bb:                                               ; preds = %dec_label_pc_24e85
  %v1_24e8f = call i32 @function_24e96()
  br label %dec_label_pc_24e91

dec_label_pc_24e91:                               ; preds = %bb, %dec_label_pc_24e85
  %v2_24e8f = phi i32 [ %v1_24e8f, %bb ], [ %v2_24e88, %dec_label_pc_24e85 ]
  ret i32 %v2_24e8f
}

define i32 @function_24e96() local_unnamed_addr {
dec_label_pc_24e96:
  %v0_24e9d = load i32, i32* @eax, align 4
  ret i32 %v0_24e9d
}

define i32 @function_24ed1() local_unnamed_addr {
dec_label_pc_24ed1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSaIN11json_spirit10Value_implINS_13Config_vectorISsEEEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24ef0:
  %v2_24f1a = call i32 @unknown_4b2b4(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24f2b

bb:                                               ; preds = %dec_label_pc_24ef0
  %v1_24f29 = call i32 @function_24f30()
  br label %dec_label_pc_24f2b

dec_label_pc_24f2b:                               ; preds = %bb, %dec_label_pc_24ef0
  %v2_24f29 = phi i32 [ %v1_24f29, %bb ], [ 0, %dec_label_pc_24ef0 ]
  ret i32 %v2_24f29
}

define i32 @function_24f30() local_unnamed_addr {
dec_label_pc_24f30:
  %v0_24f31 = load i32, i32* @eax, align 4
  ret i32 %v0_24f31
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEPS8_EET0_T_SH_SG_(i32 %arg1) local_unnamed_addr {
dec_label_pc_24f32:
  ret i32 %arg1
}

define i32 @function_24f3e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_24f3e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_24f40 = load i32, i32* @ebp, align 4
  %v0_24f41 = load i32, i32* @eax, align 4
  %v2_24f41 = or i32 %v0_24f41, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_24f41, i32* @eax, align 4
  %v1_24f43 = add i32 %v0_24f40, 2
  %v9_24f43 = icmp eq i32 %v1_24f43, 0
  store i32 %v1_24f43, i32* %ebp.global-to-local, align 4
  %v0_24f44 = load i32, i32* @ecx, align 4
  %v1_24f44 = add i32 %v0_24f44, -1
  store i32 %v1_24f44, i32* %ecx.global-to-local, align 4
  %v2_24f44 = icmp eq i32 %v1_24f44, 0
  %v4_24f44 = or i1 %v9_24f43, %v2_24f44
  br i1 %v4_24f44, label %dec_label_pc_24f46, label %bb

bb:                                               ; preds = %dec_label_pc_24f3e
  %v6_24f44 = call i32 @function_24ed1()
  store i32 %v6_24f44, i32* @eax, align 4
  %v0_24f46.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_24f47.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_24f47.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_24f46

dec_label_pc_24f46:                               ; preds = %dec_label_pc_24f3e, %bb
  %v6_24f47 = phi i1 [ false, %dec_label_pc_24f3e ], [ %v6_24f47.pre, %bb ]
  %v30_24f47 = phi i32 [ %v1_24f44, %dec_label_pc_24f3e ], [ %v0_24f47.pre, %bb ]
  %v0_24f46 = phi i32 [ %v1_24f43, %dec_label_pc_24f3e ], [ %v0_24f46.pre, %bb ]
  %v1_24f46 = add i32 %v0_24f46, 1
  store i32 %v1_24f46, i32* %ebp.global-to-local, align 4
  %v1_24f47 = add i32 %v30_24f47, -1587159995
  %v2_24f47 = inttoptr i32 %v1_24f47 to i8*
  %v3_24f47 = load i8, i8* %v2_24f47, align 1
  %v5_24f47 = trunc i32 %v30_24f47 to i8
  %v7_24f47 = zext i1 %v6_24f47 to i8
  %v8_24f47 = add i8 %v3_24f47, %v5_24f47
  %v9_24f47 = add i8 %v8_24f47, %v7_24f47
  %v27_24f47 = icmp ule i8 %v9_24f47, %v3_24f47
  %v28_24f47 = icmp ult i8 %v8_24f47, %v3_24f47
  %v29_24f47 = select i1 %v6_24f47, i1 %v27_24f47, i1 %v28_24f47
  store i1 %v29_24f47, i1* %cf.global-to-local, align 1
  store i8 %v9_24f47, i8* %v2_24f47, align 1
  %v0_24f4d = load i32, i32* @eax, align 4
  %v1_24f4d = trunc i32 %v0_24f4d to i8
  %v2_24f4d = load i1, i1* %cf.global-to-local, align 1
  %v3_24f4d = zext i1 %v2_24f4d to i8
  %v4_24f4d = add i8 %v3_24f4d, %v1_24f4d
  %v19_24f4d = icmp ule i8 %v4_24f4d, %v1_24f4d
  %v21_24f4d = icmp eq i1 %v2_24f4d, %v19_24f4d
  store i1 %v21_24f4d, i1* %cf.global-to-local, align 1
  %v22_24f4d = zext i8 %v4_24f4d to i32
  %v24_24f4d = and i32 %v0_24f4d, -256
  %v25_24f4d = or i32 %v22_24f4d, %v24_24f4d
  store i32 %v25_24f4d, i32* %eax.global-to-local, align 4
  %v1_24f4f = inttoptr i32 %v25_24f4d to i8*
  %v2_24f4f = load i8, i8* %v1_24f4f, align 1
  %v5_24f4f = add i8 %v2_24f4f, %v4_24f4d
  store i8 %v5_24f4f, i8* %v1_24f4f, align 1
  %v0_24f51 = load i32, i32* %eax.global-to-local, align 4
  %v1_24f51 = load i32, i32* %ebp.global-to-local, align 4
  %v2_24f51 = add i32 %v1_24f51, -12
  %v3_24f51 = inttoptr i32 %v2_24f51 to i32*
  store i32 %v0_24f51, i32* %v3_24f51, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_24f56 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24f56 = add i32 %v0_24f56, -36
  %v2_24f56 = inttoptr i32 %v1_24f56 to i32*
  %v3_24f56 = load i32, i32* %v2_24f56, align 4
  store i32 %v3_24f56, i32* %eax.global-to-local, align 4
  %v2_24f59 = add i32 %v0_24f56, -16
  %v3_24f59 = inttoptr i32 %v2_24f59 to i32*
  store i32 %v3_24f56, i32* %v3_24f59, align 4
  %v0_24f5c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24f5c

; uselistorder directives
  uselistorder i8 %v4_24f4d, { 0, 2, 1 }
  uselistorder i8 %v1_24f4d, { 1, 0 }
  uselistorder i8 %v9_24f47, { 1, 0 }
  uselistorder i8 %v8_24f47, { 1, 0 }
  uselistorder i8 %v3_24f47, { 1, 2, 0 }
  uselistorder i32 %v30_24f47, { 1, 0 }
  uselistorder i1 %v6_24f47, { 1, 0 }
  uselistorder i32 %v1_24f44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_24f46, { 1, 0 }
}

define i32 @function_24f6a() local_unnamed_addr {
dec_label_pc_24f6a:
  %eax.global-to-local = alloca i32, align 4
  %v0_24f6a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24f6a
}

define i32 @function_24f70(i32 %arg1) local_unnamed_addr {
dec_label_pc_24f70:
  %eax.global-to-local = alloca i32, align 4
  %v0_24f70 = load i32, i32* @eax, align 4
  %v11_24f70 = and i32 %v0_24f70, -24
  store i32 %v11_24f70, i32* %eax.global-to-local, align 4
  %v0_24f72 = load i32, i32* @ecx, align 4
  %v3_24f72 = load i32, i32* @edx, align 8
  %v5_24f7212 = mul i32 %v3_24f72, 256
  %tmp5 = and i32 %v5_24f7212, 65280
  %v15_24f72 = or i32 %tmp5, %v0_24f72
  store i32 %v15_24f72, i32* @ecx, align 4
  %v1_24f74 = inttoptr i32 %v11_24f70 to i32*
  %v2_24f74 = load i32, i32* %v1_24f74, align 8
  %v4_24f74 = add i32 %v2_24f74, %v11_24f70
  store i32 %v4_24f74, i32* %v1_24f74, align 8
  %v0_24f76 = load i32, i32* @ebx, align 4
  %v0_24f7a = load i32, i32* %eax.global-to-local, align 4
  %v2_24f7d = call i32 @unknown_46356(i32 %v0_24f7a, i32 %v0_24f76)
  store i32 %v2_24f7d, i32* %eax.global-to-local, align 4
  ret i32 %v2_24f7d

; uselistorder directives
  uselistorder i32 %v11_24f70, { 0, 2, 1 }
}

define i32 @function_24f82() local_unnamed_addr {
dec_label_pc_24f82:
  %v0_24f82 = load i32, i32* @ebp, align 4
  %v1_24f82 = add i32 %v0_24f82, -28
  %v1_24f88 = call i32 @unknown_4b37a(i32 %v1_24f82)
  %v0_24f8d = load i32, i32* @ebp, align 4
  %v1_24f8d = add i32 %v0_24f8d, -16
  %v2_24f8d = inttoptr i32 %v1_24f8d to i32*
  %v3_24f8d = load i32, i32* %v2_24f8d, align 4
  %v4_24f8d = add i32 %v3_24f8d, 20
  store i32 %v4_24f8d, i32* %v2_24f8d, align 4
  %v0_24f91 = load i32, i32* @ebp, align 4
  %v1_24f91 = add i32 %v0_24f91, -32
  %v1_24f98 = add i32 %v0_24f91, -28
  %v2_24f9e = call i32 @unknown_4b326(i32 %v1_24f98, i32 %v1_24f91)
  %v0_24fa7 = load i32, i32* @ebp, align 4
  %v1_24fa7 = add i32 %v0_24fa7, -16
  %v2_24fa7 = inttoptr i32 %v1_24fa7 to i32*
  %v3_24fa7 = load i32, i32* %v2_24fa7, align 4
  store i32 %v3_24fa7, i32* @eax, align 4
  %v1_24faa = add i32 %v0_24fa7, -12
  %v2_24faa = inttoptr i32 %v1_24faa to i32*
  %v3_24faa = load i32, i32* %v2_24faa, align 4
  %v1_24fad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24fad = xor i32 %v1_24fad, %v3_24faa
  %v3_24fad = icmp eq i32 %v2_24fad, 0
  store i32 %v2_24fad, i32* @edx, align 8
  br i1 %v3_24fad, label %bb, label %dec_label_pc_24fb6

bb:                                               ; preds = %dec_label_pc_24f82
  %v1_24fb4 = call i32 @function_24fed()
  store i32 %v1_24fb4, i32* @eax, align 4
  br label %dec_label_pc_24fb6

dec_label_pc_24fb6:                               ; preds = %bb, %dec_label_pc_24f82
  %v0_24fb6 = call i32 @function_24fe8()
  ret i32 %v0_24fb6
}

define i32 @function_24fb9() local_unnamed_addr {
dec_label_pc_24fb9:
  %eax.global-to-local = alloca i32, align 4
  %v0_24fb9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24fb9
}

define i32 @function_24fe8() local_unnamed_addr {
dec_label_pc_24fe8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24fed() local_unnamed_addr {
dec_label_pc_24fed:
  %v0_24ff2 = load i32, i32* @eax, align 4
  ret i32 %v0_24ff2
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24ff4:
  %v1_25019 = call i32 @unknown_4b4a6(i32 %arg2)
  ret i32 %v1_25019
}

define i32 @function_2502b() local_unnamed_addr {
dec_label_pc_2502b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2502b = load i32, i32* %ecx.global-to-local, align 4
  %v1_2502b = add i32 %v0_2502b, 611617219
  %v2_2502b = inttoptr i32 %v1_2502b to i32*
  %v3_2502b = load i32, i32* %v2_2502b, align 4
  %v4_2502b = add i32 %v3_2502b, -1
  store i32 %v4_2502b, i32* %v2_2502b, align 4
  %v0_25031 = load i32, i32* %eax.global-to-local, align 4
  %v1_25031 = trunc i32 %v0_25031 to i8
  %v2_25031 = add i8 %v1_25031, ptrtoint (i8* @global_var_89.1818 to i8)
  %v6_25031 = icmp ult i8 %v2_25031, %v1_25031
  %v3_25033 = zext i1 %v6_25031 to i32
  %v4_25033 = add i32 %v0_25031, zext (i8 add (i8 ptrtoint (i8* @global_var_89.1818 to i8), i8 -36) to i32)
  %v5_25033 = add i32 %v3_25033, %v4_25033
  %v31_25033 = and i32 %v5_25033, 255
  %v33_25033 = and i32 %v0_25031, -256
  %v34_25033 = or i32 %v31_25033, %v33_25033
  store i32 %v34_25033, i32* %eax.global-to-local, align 4
  %v0_25035 = call i32 @unknown_37fe2()
  store i32 %v0_25035, i32* %eax.global-to-local, align 4
  %v0_2503a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2503a = add i32 %v0_2503a, -28
  %v2_2503a = inttoptr i32 %v1_2503a to i32*
  %v3_2503a = load i32, i32* %v2_2503a, align 4
  store i32 %v3_2503a, i32* %eax.global-to-local, align 4
  %v0_2503d = load i32, i32* %ebx.global-to-local, align 4
  %v2_2503d = inttoptr i32 %v3_2503a to i32*
  store i32 %v0_2503d, i32* %v2_2503d, align 4
  %v0_2503f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2503f = add i32 %v0_2503f, -12
  %v2_2503f = inttoptr i32 %v1_2503f to i32*
  %v3_2503f = load i32, i32* %v2_2503f, align 4
  store i32 %v3_2503f, i32* %eax.global-to-local, align 4
  %v1_25042 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25042 = xor i32 %v1_25042, %v3_2503f
  %v3_25042 = icmp eq i32 %v2_25042, 0
  store i32 %v2_25042, i32* @eax, align 4
  br i1 %v3_25042, label %bb, label %dec_label_pc_2504b

bb:                                               ; preds = %dec_label_pc_2502b
  %v1_25049 = call i32 @function_25066()
  store i32 %v1_25049, i32* @eax, align 4
  br label %dec_label_pc_2504b

dec_label_pc_2504b:                               ; preds = %bb, %dec_label_pc_2502b
  %v0_2504b = call i32 @function_25061()
  store i32 %v0_2504b, i32* %eax.global-to-local, align 4
  ret i32 %v0_2504b

; uselistorder directives
  uselistorder i32 %v0_25031, { 1, 0, 2 }
}

define i32 @function_25061() local_unnamed_addr {
dec_label_pc_25061:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25066() local_unnamed_addr {
dec_label_pc_25066:
  %v0_2506c = load i32, i32* @eax, align 4
  ret i32 %v0_2506c
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2506e:
  %v1_25093 = call i32 @unknown_4b556(i32 %arg2)
  ret i32 %v1_25093
}

define i32 @function_250a5() local_unnamed_addr {
dec_label_pc_250a5:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_250a5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_250a5 = add i32 %v0_250a5, 611617219
  %v2_250a5 = inttoptr i32 %v1_250a5 to i32*
  %v3_250a5 = load i32, i32* %v2_250a5, align 4
  %v4_250a5 = add i32 %v3_250a5, -1
  store i32 %v4_250a5, i32* %v2_250a5, align 4
  %v0_250ab = load i32, i32* %eax.global-to-local, align 4
  %v1_250ab = trunc i32 %v0_250ab to i8
  %v2_250ab = add i8 %v1_250ab, ptrtoint (i8* @global_var_89.1818 to i8)
  %v6_250ab = icmp ult i8 %v2_250ab, %v1_250ab
  %v3_250ad = zext i1 %v6_250ab to i32
  %v4_250ad = add i32 %v0_250ab, zext (i8 add (i8 ptrtoint (i8* @global_var_89.1818 to i8), i8 -36) to i32)
  %v5_250ad = add i32 %v3_250ad, %v4_250ad
  %v31_250ad = and i32 %v5_250ad, 255
  %v33_250ad = and i32 %v0_250ab, -256
  %v34_250ad = or i32 %v31_250ad, %v33_250ad
  store i32 %v34_250ad, i32* %eax.global-to-local, align 4
  %v0_250af = call i32 @unknown_451a4()
  store i32 %v0_250af, i32* %eax.global-to-local, align 4
  %v0_250b4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_250b4 = add i32 %v0_250b4, -28
  %v2_250b4 = inttoptr i32 %v1_250b4 to i32*
  %v3_250b4 = load i32, i32* %v2_250b4, align 4
  store i32 %v3_250b4, i32* %eax.global-to-local, align 4
  %v0_250b7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_250b7 = inttoptr i32 %v3_250b4 to i32*
  store i32 %v0_250b7, i32* %v2_250b7, align 4
  %v0_250b9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_250b9 = add i32 %v0_250b9, -12
  %v2_250b9 = inttoptr i32 %v1_250b9 to i32*
  %v3_250b9 = load i32, i32* %v2_250b9, align 4
  store i32 %v3_250b9, i32* %eax.global-to-local, align 4
  %v1_250bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_250bc = xor i32 %v1_250bc, %v3_250b9
  %v3_250bc = icmp eq i32 %v2_250bc, 0
  store i32 %v2_250bc, i32* @eax, align 4
  br i1 %v3_250bc, label %bb, label %dec_label_pc_250c5

bb:                                               ; preds = %dec_label_pc_250a5
  %v1_250c3 = call i32 @function_250e0()
  store i32 %v1_250c3, i32* @eax, align 4
  br label %dec_label_pc_250c5

dec_label_pc_250c5:                               ; preds = %bb, %dec_label_pc_250a5
  %v0_250c5 = call i32 @function_250db()
  store i32 %v0_250c5, i32* %eax.global-to-local, align 4
  ret i32 %v0_250c5

; uselistorder directives
  uselistorder i32 %v0_250ab, { 1, 0, 2 }
}

define i32 @function_250db() local_unnamed_addr {
dec_label_pc_250db:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_250e0() local_unnamed_addr {
dec_label_pc_250e0:
  %v0_250e6 = load i32, i32* @eax, align 4
  ret i32 %v0_250e6
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_250e7:
  %edx.global-to-local = alloca i32, align 4
  %v0_2511d = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2511d, 16777216
  %v5_2513c = sdiv i32 %sext, 16777216
  %v6_2513c = call i32 @unknown_4b604(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2513c)
  store i32 %v6_2513c, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_2514d

bb:                                               ; preds = %dec_label_pc_250e7
  %v1_2514b = call i32 @function_25152()
  br label %dec_label_pc_2514d

dec_label_pc_2514d:                               ; preds = %bb, %dec_label_pc_250e7
  %v2_2514b = phi i32 [ %v1_2514b, %bb ], [ %v6_2513c, %dec_label_pc_250e7 ]
  ret i32 %v2_2514b
}

define i32 @function_25152() local_unnamed_addr {
dec_label_pc_25152:
  %v0_25153 = load i32, i32* @eax, align 4
  ret i32 %v0_25153
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsSJ_NSA_ISB_INSC_10Value_implISF_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_25154:
  %edx.global-to-local = alloca i32, align 4
  %v0_2518a = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2518a, 16777216
  %v5_251a9 = sdiv i32 %sext, 16777216
  %v6_251a9 = call i32 @unknown_4b6d6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_251a9)
  store i32 %v6_251a9, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_251ba

bb:                                               ; preds = %dec_label_pc_25154
  %v1_251b8 = call i32 @function_251bf()
  br label %dec_label_pc_251ba

dec_label_pc_251ba:                               ; preds = %bb, %dec_label_pc_25154
  %v2_251b8 = phi i32 [ %v1_251b8, %bb ], [ %v6_251a9, %dec_label_pc_25154 ]
  ret i32 %v2_251b8
}

define i32 @function_251bf() local_unnamed_addr {
dec_label_pc_251bf:
  %v0_251c0 = load i32, i32* @eax, align 4
  ret i32 %v0_251c0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsNSA_ISB_INSC_9Pair_implISF_EESaISM_EEEESJ_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_251c1:
  %edx.global-to-local = alloca i32, align 4
  %v0_251f7 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_251f7, 16777216
  %v5_25216 = sdiv i32 %sext, 16777216
  %v6_25216 = call i32 @unknown_4b7a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_25216)
  store i32 %v6_25216, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_25227

bb:                                               ; preds = %dec_label_pc_251c1
  %v1_25225 = call i32 @function_2522c()
  br label %dec_label_pc_25227

dec_label_pc_25227:                               ; preds = %bb, %dec_label_pc_251c1
  %v2_25225 = phi i32 [ %v1_25225, %bb ], [ %v6_25216, %dec_label_pc_251c1 ]
  ret i32 %v2_25225
}

define i32 @function_2522c() local_unnamed_addr {
dec_label_pc_2522c:
  %v0_2522d = load i32, i32* @eax, align 4
  ret i32 %v0_2522d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2522e:
  %edx.global-to-local = alloca i32, align 4
  %v0_25264 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_25264, 16777216
  %v5_25283 = sdiv i32 %sext, 16777216
  %v6_25283 = call i32 @unknown_4b87a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_25283)
  store i32 %v6_25283, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_25294

bb:                                               ; preds = %dec_label_pc_2522e
  %v1_25292 = call i32 @function_25299()
  br label %dec_label_pc_25294

dec_label_pc_25294:                               ; preds = %bb, %dec_label_pc_2522e
  %v2_25292 = phi i32 [ %v1_25292, %bb ], [ %v6_25283, %dec_label_pc_2522e ]
  ret i32 %v2_25292
}

define i32 @function_25299() local_unnamed_addr {
dec_label_pc_25299:
  %v0_2529a = load i32, i32* @eax, align 4
  ret i32 %v0_2529a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_2529b:
  ret i32 %arg1
}

define i32 @function_252a5() local_unnamed_addr {
dec_label_pc_252a5:
  %eax.global-to-local = alloca i32, align 4
  %v15_252a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_252a5
}

define i32 @function_252aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_252aa:
  %v0_252aa = load i32, i32* @eax, align 4
  %v1_252aa = load i32, i32* @ebp, align 4
  %v2_252aa = add i32 %v1_252aa, -32
  %v3_252aa = inttoptr i32 %v2_252aa to i32*
  store i32 %v0_252aa, i32* %v3_252aa, align 4
  %v0_252ad = load i32, i32* @ebp, align 4
  %v1_252ad = add i32 %v0_252ad, 16
  %v2_252ad = inttoptr i32 %v1_252ad to i32*
  %v3_252ad = load i32, i32* %v2_252ad, align 4
  %v2_252b0 = add i32 %v0_252ad, -36
  %v3_252b0 = inttoptr i32 %v2_252b0 to i32*
  store i32 %v3_252ad, i32* %v3_252b0, align 4
  %v0_252b3 = load i32, i32* @ebp, align 4
  %v1_252b3 = add i32 %v0_252b3, 20
  %v2_252b3 = inttoptr i32 %v1_252b3 to i32*
  %v3_252b3 = load i32, i32* %v2_252b3, align 4
  %v2_252b6 = add i32 %v0_252b3, -40
  %v3_252b6 = inttoptr i32 %v2_252b6 to i32*
  store i32 %v3_252b3, i32* %v3_252b6, align 4
  %v0_252b9 = load i32, i32* @ebp, align 4
  %v1_252b9 = add i32 %v0_252b9, 24
  %v2_252b9 = inttoptr i32 %v1_252b9 to i8*
  %v3_252b9 = load i8, i8* %v2_252b9, align 1
  %v3_252bd = add i32 %v0_252b9, -41
  %v4_252bd = inttoptr i32 %v3_252bd to i8*
  store i8 %v3_252b9, i8* %v4_252bd, align 1
  %v0_252c0 = load i32, i32* @ebp, align 4
  %v1_252c0 = add i32 %v0_252c0, 28
  %v2_252c0 = inttoptr i32 %v1_252c0 to i32*
  %v3_252c0 = load i32, i32* %v2_252c0, align 4
  %v2_252c3 = add i32 %v0_252c0, -48
  %v3_252c3 = inttoptr i32 %v2_252c3 to i32*
  store i32 %v3_252c0, i32* %v3_252c3, align 4
  %v0_252c6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_252cc = load i32, i32* @ebp, align 4
  %v2_252cc = add i32 %v1_252cc, -12
  %v3_252cc = inttoptr i32 %v2_252cc to i32*
  store i32 %v0_252c6, i32* %v3_252cc, align 4
  %v0_252d1 = load i32, i32* @edx, align 8
  %v0_252d5 = load i32, i32* @ebp, align 4
  %v1_252d5 = add i32 %v0_252d5, -40
  %v2_252d5 = inttoptr i32 %v1_252d5 to i32*
  %v3_252d5 = load i32, i32* %v2_252d5, align 4
  %v1_252dc = add i32 %v0_252d5, -36
  %v2_252dc = inttoptr i32 %v1_252dc to i32*
  %v3_252dc = load i32, i32* %v2_252dc, align 4
  %v1_252e3 = add i32 %v0_252d5, -32
  %v2_252e3 = inttoptr i32 %v1_252e3 to i32*
  %v3_252e3 = load i32, i32* %v2_252e3, align 4
  %v1_252ea = add i32 %v0_252d5, -28
  %v2_252ea = inttoptr i32 %v1_252ea to i32*
  %v3_252ea = load i32, i32* %v2_252ea, align 4
  %sext = mul i32 %v0_252d1, 16777216
  %v5_252f0 = sdiv i32 %sext, 16777216
  %v6_252f0 = call i32 @unknown_4b94c(i32 %v3_252ea, i32 %v3_252e3, i32 %v3_252dc, i32 %v3_252d5, i32 %v5_252f0)
  store i32 %v6_252f0, i32* @eax, align 4
  %v0_252f5 = load i32, i32* @ebp, align 4
  %v1_252f5 = add i32 %v0_252f5, -12
  %v2_252f5 = inttoptr i32 %v1_252f5 to i32*
  %v3_252f5 = load i32, i32* %v2_252f5, align 4
  %v1_252f8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_252f8 = icmp eq i32 %v1_252f8, %v3_252f5
  br i1 %v3_252f8, label %bb, label %dec_label_pc_25301

bb:                                               ; preds = %dec_label_pc_252aa
  %v1_252ff = call i32 @function_25306()
  br label %dec_label_pc_25301

dec_label_pc_25301:                               ; preds = %bb, %dec_label_pc_252aa
  %v2_252ff = phi i32 [ %v1_252ff, %bb ], [ %v6_252f0, %dec_label_pc_252aa ]
  ret i32 %v2_252ff

; uselistorder directives
  uselistorder i32 %v0_252d5, { 1, 0, 2, 3 }
}

define i32 @function_25306() local_unnamed_addr {
dec_label_pc_25306:
  %v0_25307 = load i32, i32* @eax, align 4
  ret i32 %v0_25307
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_25308:
  ret i32 %arg1
}

define i32 @function_25316(i32 %arg1) local_unnamed_addr {
dec_label_pc_25316:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_25316 = load i32, i32* @eax, align 4
  %v2_25316 = or i32 %v0_25316, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_25316, i32* %eax.global-to-local, align 4
  %v0_25318 = load i32, i32* @ebp, align 4
  %v0_25319 = load i32, i32* @ecx, align 4
  %v1_25319 = add i32 %v0_25319, -1
  store i32 %v1_25319, i32* %ecx.global-to-local, align 4
  %v1_2531b = add i32 %v0_25318, 2
  store i32 %v1_2531b, i32* %ebp.global-to-local, align 4
  %v1_2531c = add i32 %v0_25319, 1166793796
  %v2_2531c = inttoptr i32 %v1_2531c to i8*
  %v3_2531c = load i8, i8* %v2_2531c, align 1
  %v5_2531c = trunc i32 %v1_25319 to i8
  %v8_2531c = add i8 %v3_2531c, %v5_2531c
  %v28_2531c = icmp ult i8 %v8_2531c, %v3_2531c
  store i1 %v28_2531c, i1* %cf.global-to-local, align 1
  store i8 %v8_2531c, i8* %v2_2531c, align 1
  %v0_25322 = load i32, i32* %eax.global-to-local, align 4
  %v1_25322 = trunc i32 %v0_25322 to i8
  %v2_25322 = load i1, i1* %cf.global-to-local, align 1
  %v3_25322 = zext i1 %v2_25322 to i8
  %v4_25322 = add i8 %v1_25322, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_25322 = add i8 %v4_25322, %v3_25322
  %v20_25322 = add i8 %v1_25322, -119
  %v21_25322 = add i8 %v20_25322, %v3_25322
  %v22_25322 = icmp ule i8 %v21_25322, %v1_25322
  %v23_25322 = icmp ugt i8 %v1_25322, 118
  %v24_25322 = select i1 %v2_25322, i1 %v22_25322, i1 %v23_25322
  store i1 %v24_25322, i1* %cf.global-to-local, align 1
  %v25_25322 = zext i8 %v5_25322 to i32
  %v27_25322 = and i32 %v0_25322, -256
  %v28_25322 = or i32 %v25_25322, %v27_25322
  store i32 %v28_25322, i32* %eax.global-to-local, align 4
  %v0_25324 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25324 = add i32 %v0_25324, 1
  store i32 %v1_25324, i32* %ebp.global-to-local, align 4
  %v0_25327 = load i32, i32* @edx, align 8
  %v1_25327 = and i32 %v0_25327, -65281
  %v2_25327 = or i32 %v1_25327, 17664
  store i32 %v2_25327, i32* %edx.global-to-local, align 8
  %v1_25329 = add i32 %v28_25322, 1166792517
  %v2_25329 = inttoptr i32 %v1_25329 to i8*
  %v3_25329 = load i8, i8* %v2_25329, align 1
  %v4_25329 = load i32, i32* %ecx.global-to-local, align 4
  %v5_25329 = trunc i32 %v4_25329 to i8
  %v7_25329 = zext i1 %v24_25322 to i8
  %v8_25329 = sub i8 %v3_25329, %v5_25329
  %v9_25329 = add i8 %v8_25329, %v7_25329
  %v19_25329 = sub i8 %v8_25329, %v7_25329
  %v20_25329 = icmp ult i8 %v3_25329, %v19_25329
  %v21_25329 = icmp ne i8 %v5_25329, -1
  %v22_25329 = or i1 %v21_25329, %v20_25329
  %v23_25329 = icmp ult i8 %v3_25329, %v5_25329
  %v24_25329 = select i1 %v24_25322, i1 %v22_25329, i1 %v23_25329
  store i1 %v24_25329, i1* %cf.global-to-local, align 1
  store i8 %v9_25329, i8* %v2_25329, align 1
  %v0_2532f = load i32, i32* %eax.global-to-local, align 4
  %v1_2532f = trunc i32 %v0_2532f to i8
  %v2_2532f = load i1, i1* %cf.global-to-local, align 1
  %v3_2532f = zext i1 %v2_2532f to i32
  %v4_2532f = add i32 %v0_2532f, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_2532f = add i32 %v4_2532f, %v3_2532f
  %v17_2532f = icmp ult i8 %v1_2532f, -119
  %v18_2532f = or i1 %v2_2532f, %v17_2532f
  store i1 %v18_2532f, i1* %cf.global-to-local, align 1
  %v31_2532f = urem i32 %v5_2532f, 256
  %v33_2532f = and i32 %v0_2532f, -256
  %v34_2532f = or i32 %v31_2532f, %v33_2532f
  store i32 %v34_2532f, i32* %eax.global-to-local, align 4
  %v0_25331 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25331 = add i32 %v0_25331, 1
  store i32 %v1_25331, i32* @ebp, align 4
  %v1_25332 = add i32 %v0_25331, -94
  %v2_25332 = inttoptr i32 %v1_25332 to i8*
  %v3_25332 = load i8, i8* %v2_25332, align 1
  %v5_25332 = mul i8 %v3_25332, 2
  store i8 %v5_25332, i8* %v2_25332, align 1
  %v16_25332 = icmp slt i8 %v3_25332, 0
  %v0_25335 = load i32, i32* %eax.global-to-local, align 4
  %v1_25335 = trunc i32 %v0_25335 to i8
  %v3_25335 = zext i1 %v16_25332 to i8
  %v4_25335 = add i8 %v1_25335, %v3_25335
  %v19_25335 = icmp ule i8 %v4_25335, %v1_25335
  %v21_25335 = icmp eq i1 %v16_25332, %v19_25335
  store i1 %v21_25335, i1* %cf.global-to-local, align 1
  %v22_25335 = zext i8 %v4_25335 to i32
  %v24_25335 = and i32 %v0_25335, -256
  %v25_25335 = or i32 %v22_25335, %v24_25335
  store i32 %v25_25335, i32* %eax.global-to-local, align 4
  %v1_25337 = inttoptr i32 %v25_25335 to i8*
  %v2_25337 = load i8, i8* %v1_25337, align 1
  %v5_25337 = add i8 %v2_25337, %v4_25335
  store i8 %v5_25337, i8* %v1_25337, align 1
  %v0_25339 = load i32, i32* %eax.global-to-local, align 4
  %v1_25339 = load i32, i32* @ebp, align 4
  %v2_25339 = add i32 %v1_25339, -12
  %v3_25339 = inttoptr i32 %v2_25339 to i32*
  store i32 %v0_25339, i32* %v3_25339, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2533e = load i32, i32* %edx.global-to-local, align 8
  %v0_25342 = load i32, i32* @ebp, align 4
  %v1_25342 = add i32 %v0_25342, -40
  %v2_25342 = inttoptr i32 %v1_25342 to i32*
  %v3_25342 = load i32, i32* %v2_25342, align 4
  store i32 %v3_25342, i32* %eax.global-to-local, align 4
  %v1_25349 = add i32 %v0_25342, -36
  %v2_25349 = inttoptr i32 %v1_25349 to i32*
  %v3_25349 = load i32, i32* %v2_25349, align 4
  store i32 %v3_25349, i32* %eax.global-to-local, align 4
  %v1_25350 = add i32 %v0_25342, -32
  %v2_25350 = inttoptr i32 %v1_25350 to i32*
  %v3_25350 = load i32, i32* %v2_25350, align 4
  store i32 %v3_25350, i32* %eax.global-to-local, align 4
  %v1_25357 = add i32 %v0_25342, -28
  %v2_25357 = inttoptr i32 %v1_25357 to i32*
  %v3_25357 = load i32, i32* %v2_25357, align 4
  store i32 %v3_25357, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_2533e, 16777216
  %v5_2535d = sdiv i32 %sext, 16777216
  %v6_2535d = call i32 @unknown_4ba1e(i32 %v3_25357, i32 %v3_25350, i32 %v3_25349, i32 %v3_25342, i32 %v5_2535d)
  store i32 %v6_2535d, i32* @eax, align 4
  %v0_25362 = load i32, i32* @ebp, align 4
  %v1_25362 = add i32 %v0_25362, -12
  %v2_25362 = inttoptr i32 %v1_25362 to i32*
  %v3_25362 = load i32, i32* %v2_25362, align 4
  store i32 %v3_25362, i32* %edx.global-to-local, align 8
  %v1_25365 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25365 = xor i32 %v1_25365, %v3_25362
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_25365 = icmp eq i32 %v2_25365, 0
  store i32 %v2_25365, i32* %edx.global-to-local, align 8
  br i1 %v3_25365, label %bb, label %dec_label_pc_2536e

bb:                                               ; preds = %dec_label_pc_25316
  %v1_2536c = call i32 @function_25373()
  store i32 %v1_2536c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2536e

dec_label_pc_2536e:                               ; preds = %bb, %dec_label_pc_25316
  %v3_2536c = phi i32 [ %v1_2536c, %bb ], [ %v6_2535d, %dec_label_pc_25316 ]
  ret i32 %v3_2536c

; uselistorder directives
  uselistorder i32 %v0_25342, { 1, 0, 2, 3 }
  uselistorder i8 %v4_25335, { 0, 2, 1 }
  uselistorder i8 %v1_25335, { 1, 0 }
  uselistorder i8 %v3_25332, { 1, 0 }
  uselistorder i1 %v2_2532f, { 1, 0 }
  uselistorder i32 %v0_2532f, { 1, 0, 2 }
  uselistorder i8 %v8_25329, { 1, 0 }
  uselistorder i8 %v7_25329, { 1, 0 }
  uselistorder i8 %v5_25329, { 1, 0, 2 }
  uselistorder i1 %v24_25322, { 1, 0, 2 }
  uselistorder i8 %v3_2531c, { 1, 0 }
}

define i32 @function_25373() local_unnamed_addr {
dec_label_pc_25373:
  %v0_25374 = load i32, i32* @eax, align 4
  ret i32 %v0_25374
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25375:
  ret i32 %arg4
}

define i32 @function_25396(i32 %arg1) local_unnamed_addr {
dec_label_pc_25396:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_25396 = load i32, i32* @eax, align 4
  %v1_25396 = add i32 %v0_25396, 1166792517
  %v2_25396 = inttoptr i32 %v1_25396 to i8*
  %v3_25396 = load i8, i8* %v2_25396, align 1
  %v4_25396 = load i32, i32* @ecx, align 4
  %v5_25396 = trunc i32 %v4_25396 to i8
  %v6_25396 = load i1, i1* @cf, align 1
  %v7_25396 = zext i1 %v6_25396 to i8
  %v8_25396 = sub i8 %v3_25396, %v5_25396
  %v9_25396 = add i8 %v8_25396, %v7_25396
  %v19_25396 = sub i8 %v8_25396, %v7_25396
  %v20_25396 = icmp ult i8 %v3_25396, %v19_25396
  %v21_25396 = icmp ne i8 %v5_25396, -1
  %v22_25396 = or i1 %v21_25396, %v20_25396
  %v23_25396 = icmp ult i8 %v3_25396, %v5_25396
  %v24_25396 = select i1 %v6_25396, i1 %v22_25396, i1 %v23_25396
  store i1 %v24_25396, i1* %cf.global-to-local, align 1
  store i8 %v9_25396, i8* %v2_25396, align 1
  %v0_2539c = load i32, i32* @eax, align 4
  %v1_2539c = trunc i32 %v0_2539c to i8
  %v2_2539c = load i1, i1* %cf.global-to-local, align 1
  %v3_2539c = zext i1 %v2_2539c to i32
  %v4_2539c = add i32 %v0_2539c, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_2539c = add i32 %v4_2539c, %v3_2539c
  %v17_2539c = icmp ult i8 %v1_2539c, -119
  %v18_2539c = or i1 %v2_2539c, %v17_2539c
  store i1 %v18_2539c, i1* %cf.global-to-local, align 1
  %v31_2539c = urem i32 %v5_2539c, 256
  %v33_2539c = and i32 %v0_2539c, -256
  %v34_2539c = or i32 %v31_2539c, %v33_2539c
  store i32 %v34_2539c, i32* %eax.global-to-local, align 4
  %v0_2539e = load i32, i32* @ebp, align 4
  %v1_2539e = add i32 %v0_2539e, 1
  store i32 %v1_2539e, i32* @ebp, align 4
  %v1_2539f = add i32 %v0_2539e, -94
  %v2_2539f = inttoptr i32 %v1_2539f to i8*
  %v3_2539f = load i8, i8* %v2_2539f, align 1
  %v5_2539f = mul i8 %v3_2539f, 2
  store i8 %v5_2539f, i8* %v2_2539f, align 1
  %v16_2539f = icmp slt i8 %v3_2539f, 0
  %v0_253a2 = load i32, i32* %eax.global-to-local, align 4
  %v1_253a2 = trunc i32 %v0_253a2 to i8
  %v3_253a2 = zext i1 %v16_2539f to i8
  %v4_253a2 = add i8 %v1_253a2, %v3_253a2
  %v19_253a2 = icmp ule i8 %v4_253a2, %v1_253a2
  %v21_253a2 = icmp eq i1 %v16_2539f, %v19_253a2
  store i1 %v21_253a2, i1* %cf.global-to-local, align 1
  %v22_253a2 = zext i8 %v4_253a2 to i32
  %v24_253a2 = and i32 %v0_253a2, -256
  %v25_253a2 = or i32 %v22_253a2, %v24_253a2
  store i32 %v25_253a2, i32* %eax.global-to-local, align 4
  %v1_253a4 = inttoptr i32 %v25_253a2 to i8*
  %v2_253a4 = load i8, i8* %v1_253a4, align 1
  %v5_253a4 = add i8 %v2_253a4, %v4_253a2
  store i8 %v5_253a4, i8* %v1_253a4, align 1
  %v0_253a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_253a6 = load i32, i32* @ebp, align 4
  %v2_253a6 = add i32 %v1_253a6, -12
  %v3_253a6 = inttoptr i32 %v2_253a6 to i32*
  store i32 %v0_253a6, i32* %v3_253a6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_253a2, { 0, 2, 1 }
  uselistorder i8 %v1_253a2, { 1, 0 }
  uselistorder i8 %v3_2539f, { 1, 0 }
  uselistorder i1 %v2_2539c, { 1, 0 }
  uselistorder i32 %v0_2539c, { 1, 0, 2 }
  uselistorder i8 %v5_25396, { 1, 0, 2 }
}

define i32 @function_253c3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_253c3:
  %v3_253c3 = load i32, i32* @eax, align 4
  ret i32 %v3_253c3
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSM_13Config_vectorISsEEEESaISQ_EEEENSK_ISL_INSM_10Value_implISP_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_253cf:
  %v4_253f4 = urem i32 %arg6, 256
  ret i32 %v4_253f4
}

define i32 @function_253f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_253f8:
  %v0_253f8 = load i32, i32* @eax, align 4
  %v1_253f8 = trunc i32 %v0_253f8 to i8
  %v2_253f8 = load i32, i32* @ebp, align 4
  %v3_253f8 = add i32 %v2_253f8, -42
  %v4_253f8 = inttoptr i32 %v3_253f8 to i8*
  store i8 %v1_253f8, i8* %v4_253f8, align 1
  %v0_253fb = load i32, i32* @ebp, align 4
  %v1_253fb = add i32 %v0_253fb, 32
  %v2_253fb = inttoptr i32 %v1_253fb to i32*
  %v3_253fb = load i32, i32* %v2_253fb, align 4
  %v2_253fe = add i32 %v0_253fb, -48
  %v3_253fe = inttoptr i32 %v2_253fe to i32*
  store i32 %v3_253fb, i32* %v3_253fe, align 4
  %v0_25401 = load i32, i32* @ebp, align 4
  %v1_25401 = add i32 %v0_25401, 36
  %v2_25401 = inttoptr i32 %v1_25401 to i32*
  %v3_25401 = load i32, i32* %v2_25401, align 4
  %v2_25404 = add i32 %v0_25401, -52
  %v3_25404 = inttoptr i32 %v2_25404 to i32*
  store i32 %v3_25401, i32* %v3_25404, align 4
  %v0_25407 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2540d = load i32, i32* @ebp, align 4
  %v2_2540d = add i32 %v1_2540d, -12
  %v3_2540d = inttoptr i32 %v2_2540d to i32*
  store i32 %v0_25407, i32* %v3_2540d, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvSsEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_25436:
  %v1_2546c = call i32 @unknown_483f7(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_25486(i32 %arg1) local_unnamed_addr {
dec_label_pc_25486:
  %v0_25486 = load i32, i32* @eax, align 4
  %v5_25486 = mul i32 %v0_25486, 2
  %v20_25486 = and i32 %v5_25486, 254
  %v22_25486 = and i32 %v0_25486, -256
  %v23_25486 = or i32 %v20_25486, %v22_25486
  store i32 %v23_25486, i32* @eax, align 4
  %v0_25488 = load i32, i32* @ebp, align 4
  %v1_25488 = add i32 %v0_25488, -12
  %v2_25488 = inttoptr i32 %v1_25488 to i32*
  %v3_25488 = load i32, i32* %v2_25488, align 4
  %v1_2548b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2548b = icmp eq i32 %v1_2548b, %v3_25488
  br i1 %v3_2548b, label %bb, label %dec_label_pc_25494

bb:                                               ; preds = %dec_label_pc_25486
  %v1_25492 = call i32 @function_25499()
  br label %dec_label_pc_25494

dec_label_pc_25494:                               ; preds = %bb, %dec_label_pc_25486
  %v3_25492 = phi i32 [ %v1_25492, %bb ], [ %v23_25486, %dec_label_pc_25486 ]
  ret i32 %v3_25492

; uselistorder directives
  uselistorder i32 %v0_25486, { 1, 0 }
}

define i32 @function_25499() local_unnamed_addr {
dec_label_pc_25499:
  %v0_2549a = load i32, i32* @eax, align 4
  ret i32 %v0_2549a
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2549b:
  %v1_254d1 = call i32 @unknown_4850c(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_254e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_254e6:
  %v0_254e8 = call i32 @unknown_4bc61()
  store i32 %v0_254e8, i32* @eax, align 4
  %v0_254ed = load i32, i32* @ebp, align 4
  %v1_254ed = add i32 %v0_254ed, -12
  %v2_254ed = inttoptr i32 %v1_254ed to i32*
  %v3_254ed = load i32, i32* %v2_254ed, align 4
  %v1_254f0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_254f0 = icmp eq i32 %v1_254f0, %v3_254ed
  br i1 %v3_254f0, label %bb, label %dec_label_pc_254f9

bb:                                               ; preds = %dec_label_pc_254e6
  %v1_254f7 = call i32 @function_254fe()
  br label %dec_label_pc_254f9

dec_label_pc_254f9:                               ; preds = %bb, %dec_label_pc_254e6
  %v2_254f7 = phi i32 [ %v1_254f7, %bb ], [ %v0_254e8, %dec_label_pc_254e6 ]
  ret i32 %v2_254f7
}

define i32 @function_254fe() local_unnamed_addr {
dec_label_pc_254fe:
  %v0_254ff = load i32, i32* @eax, align 4
  ret i32 %v0_254ff
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_25500:
  %v1_25536 = call i32 @unknown_48621(i32 %arg3)
  %v3_2554d = call i32 @unknown_4bd1e(i32 %arg2, i32 %v1_25536, i32 1)
  store i32 %v3_2554d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2555e

bb:                                               ; preds = %dec_label_pc_25500
  %v1_2555c = call i32 @function_25563()
  br label %dec_label_pc_2555e

dec_label_pc_2555e:                               ; preds = %bb, %dec_label_pc_25500
  %v2_2555c = phi i32 [ %v1_2555c, %bb ], [ %v3_2554d, %dec_label_pc_25500 ]
  ret i32 %v2_2555c
}

define i32 @function_25563() local_unnamed_addr {
dec_label_pc_25563:
  %v0_25564 = load i32, i32* @eax, align 4
  ret i32 %v0_25564
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvbEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_25565:
  %v1_2559b = call i32 @unknown_48736(i32 %arg3)
  %v3_255b2 = call i32 @unknown_4bddb(i32 %arg2, i32 %v1_2559b, i32 1)
  store i32 %v3_255b2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_255c3

bb:                                               ; preds = %dec_label_pc_25565
  %v1_255c1 = call i32 @function_255c8()
  br label %dec_label_pc_255c3

dec_label_pc_255c3:                               ; preds = %bb, %dec_label_pc_25565
  %v2_255c1 = phi i32 [ %v1_255c1, %bb ], [ %v3_255b2, %dec_label_pc_25565 ]
  ret i32 %v2_255c1
}

define i32 @function_255c8() local_unnamed_addr {
dec_label_pc_255c8:
  %v0_255c9 = load i32, i32* @eax, align 4
  ret i32 %v0_255c9
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvxEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_255ca:
  %v1_25600 = call i32 @unknown_4881f(i32 %arg3)
  %v3_25617 = call i32 @unknown_4be8a(i32 %arg2, i32 %v1_25600, i32 1)
  store i32 %v3_25617, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25628

bb:                                               ; preds = %dec_label_pc_255ca
  %v1_25626 = call i32 @function_2562d()
  br label %dec_label_pc_25628

dec_label_pc_25628:                               ; preds = %bb, %dec_label_pc_255ca
  %v2_25626 = phi i32 [ %v1_25626, %bb ], [ %v3_25617, %dec_label_pc_255ca ]
  ret i32 %v2_25626
}

define i32 @function_2562d() local_unnamed_addr {
dec_label_pc_2562d:
  %v0_2562e = load i32, i32* @eax, align 4
  ret i32 %v0_2562e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKdEEEEPKvdEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2562f:
  %v1_25665 = call i32 @unknown_4890f(i32 %arg3)
  ret i32 %v1_25665
}

define i32 @function_2566a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2566a:
  %v0_25672 = load i32, i32* @eax, align 4
  %v0_25676 = load i32, i32* @ebp, align 4
  %v1_25676 = add i32 %v0_25676, -32
  %v2_25676 = inttoptr i32 %v1_25676 to i32*
  %v3_25676 = load i32, i32* %v2_25676, align 4
  %v3_2567c = call i32 @unknown_4bf39(i32 %v3_25676, i32 %v0_25672, i32 1)
  store i32 %v3_2567c, i32* @eax, align 4
  %v0_25681 = load i32, i32* @ebp, align 4
  %v1_25681 = add i32 %v0_25681, -12
  %v2_25681 = inttoptr i32 %v1_25681 to i32*
  %v3_25681 = load i32, i32* %v2_25681, align 4
  %v1_25684 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25684 = icmp eq i32 %v1_25684, %v3_25681
  br i1 %v3_25684, label %bb, label %dec_label_pc_2568d

bb:                                               ; preds = %dec_label_pc_2566a
  %v1_2568b = call i32 @function_25692()
  br label %dec_label_pc_2568d

dec_label_pc_2568d:                               ; preds = %bb, %dec_label_pc_2566a
  %v2_2568b = phi i32 [ %v1_2568b, %bb ], [ %v3_2567c, %dec_label_pc_2566a ]
  ret i32 %v2_2568b
}

define i32 @function_25692() local_unnamed_addr {
dec_label_pc_25692:
  %v0_25693 = load i32, i32* @eax, align 4
  ret i32 %v0_25693
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIS4_EEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25694:
  %v2_256ba = load i32, i32* %arg1, align 4
  %v2_256c6 = call i32 @unknown_4bfe8(i32 %v2_256ba, i32 %arg2)
  store i32 %v2_256c6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_256d7

bb:                                               ; preds = %dec_label_pc_25694
  %v1_256d5 = call i32 @function_256dc()
  br label %dec_label_pc_256d7

dec_label_pc_256d7:                               ; preds = %bb, %dec_label_pc_25694
  %v2_256d5 = phi i32 [ %v1_256d5, %bb ], [ %v2_256c6, %dec_label_pc_25694 ]
  ret i32 %v2_256d5
}

define i32 @function_256dc() local_unnamed_addr {
dec_label_pc_256dc:
  %v0_256dd = load i32, i32* @eax, align 4
  ret i32 %v0_256dd
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_256de:
  %v1_25707 = call i32 @unknown_4bb90(i32 %arg2)
  %v3_2571e = call i32 @unknown_4c06e(i32 %arg1, i32 %v1_25707, i32 1)
  store i32 %v3_2571e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2572f

bb:                                               ; preds = %dec_label_pc_256de
  %v1_2572d = call i32 @function_25734()
  br label %dec_label_pc_2572f

dec_label_pc_2572f:                               ; preds = %bb, %dec_label_pc_256de
  %v2_2572d = phi i32 [ %v1_2572d, %bb ], [ %v3_2571e, %dec_label_pc_256de ]
  ret i32 %v2_2572d
}

define i32 @function_25734() local_unnamed_addr {
dec_label_pc_25734:
  %v0_25735 = load i32, i32* @eax, align 4
  ret i32 %v0_25735
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitISt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25736:
  %v1_2575f = call i32 @unknown_4bc1e(i32 %arg2)
  %v3_25776 = call i32 @unknown_4c110(i32 %arg1, i32 %v1_2575f, i32 1)
  store i32 %v3_25776, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25787

bb:                                               ; preds = %dec_label_pc_25736
  %v1_25785 = call i32 @function_2578c()
  br label %dec_label_pc_25787

dec_label_pc_25787:                               ; preds = %bb, %dec_label_pc_25736
  %v2_25785 = phi i32 [ %v1_25785, %bb ], [ %v3_25776, %dec_label_pc_25736 ]
  ret i32 %v2_25785
}

define i32 @function_2578c() local_unnamed_addr {
dec_label_pc_2578c:
  %v0_2578d = load i32, i32* @eax, align 4
  ret i32 %v0_2578d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKbEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2578e:
  %v2_257b4 = load i32, i32* %arg1, align 4
  %v2_257c0 = call i32 @unknown_4c1b2(i32 %v2_257b4, i32 %arg2)
  store i32 %v2_257c0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_257d1

bb:                                               ; preds = %dec_label_pc_2578e
  %v1_257cf = call i32 @function_257d6()
  br label %dec_label_pc_257d1

dec_label_pc_257d1:                               ; preds = %bb, %dec_label_pc_2578e
  %v2_257cf = phi i32 [ %v1_257cf, %bb ], [ %v2_257c0, %dec_label_pc_2578e ]
  ret i32 %v2_257cf
}

define i32 @function_257d6() local_unnamed_addr {
dec_label_pc_257d6:
  %v0_257d7 = load i32, i32* @eax, align 4
  ret i32 %v0_257d7
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKxEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_257d8:
  %v2_257fe = load i32, i32* %arg1, align 4
  %v2_2580a = call i32 @unknown_4c232(i32 %v2_257fe, i32 %arg2)
  store i32 %v2_2580a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2581b

bb:                                               ; preds = %dec_label_pc_257d8
  %v1_25819 = call i32 @function_25820()
  br label %dec_label_pc_2581b

dec_label_pc_2581b:                               ; preds = %bb, %dec_label_pc_257d8
  %v2_25819 = phi i32 [ %v1_25819, %bb ], [ %v2_2580a, %dec_label_pc_257d8 ]
  ret i32 %v2_25819
}

define i32 @function_25820() local_unnamed_addr {
dec_label_pc_25820:
  %v0_25821 = load i32, i32* @eax, align 4
  ret i32 %v0_25821
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKdEEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25822:
  %v0_2583a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2583a
}

define i32 @function_25842(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25842:
  %v0_25845 = load i32, i32* @ebp, align 4
  %v1_25845 = add i32 %v0_25845, -28
  %v2_25845 = inttoptr i32 %v1_25845 to i32*
  %v3_25845 = load i32, i32* %v2_25845, align 4
  %v1_25848 = inttoptr i32 %v3_25845 to i32*
  %v2_25848 = load i32, i32* %v1_25848, align 4
  %v1_2584a = add i32 %v0_25845, -32
  %v2_2584a = inttoptr i32 %v1_2584a to i32*
  %v3_2584a = load i32, i32* %v2_2584a, align 4
  %v2_25854 = call i32 @unknown_4c2b2(i32 %v2_25848, i32 %v3_2584a)
  store i32 %v2_25854, i32* @eax, align 4
  %v0_25859 = load i32, i32* @ebp, align 4
  %v1_25859 = add i32 %v0_25859, -12
  %v2_25859 = inttoptr i32 %v1_25859 to i32*
  %v3_25859 = load i32, i32* %v2_25859, align 4
  %v1_2585c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2585c = xor i32 %v1_2585c, %v3_25859
  %v3_2585c = icmp eq i32 %v2_2585c, 0
  store i32 %v2_2585c, i32* @edx, align 8
  br i1 %v3_2585c, label %bb, label %dec_label_pc_25865

bb:                                               ; preds = %dec_label_pc_25842
  %v1_25863 = call i32 @function_2586a()
  br label %dec_label_pc_25865

dec_label_pc_25865:                               ; preds = %bb, %dec_label_pc_25842
  %v2_25863 = phi i32 [ %v1_25863, %bb ], [ %v2_25854, %dec_label_pc_25842 ]
  ret i32 %v2_25863
}

define i32 @function_2586a() local_unnamed_addr {
dec_label_pc_2586a:
  %v0_2586b = load i32, i32* @eax, align 4
  ret i32 %v0_2586b
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvSsEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2586c:
  %v1_258a2 = call i32 @unknown_4882d(i32 %arg3)
  %v3_258b9 = call i32 @unknown_4c332(i32 %arg2, i32 %v1_258a2, i32 1)
  ret i32 %v3_258b9
}

define i32 @function_258ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_258ce:
  %v0_258d0 = load i32, i32* @eax, align 4
  ret i32 %v0_258d0
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_258d1:
  %v1_25907 = call i32 @unknown_48942(i32 %arg3)
  %v3_2591e = call i32 @unknown_4c3e1(i32 %arg2, i32 %v1_25907, i32 1)
  store i32 %v3_2591e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2592f

bb:                                               ; preds = %dec_label_pc_258d1
  %v1_2592d = call i32 @function_25934()
  br label %dec_label_pc_2592f

dec_label_pc_2592f:                               ; preds = %bb, %dec_label_pc_258d1
  %v2_2592d = phi i32 [ %v1_2592d, %bb ], [ %v3_2591e, %dec_label_pc_258d1 ]
  ret i32 %v2_2592d
}

define i32 @function_25934() local_unnamed_addr {
dec_label_pc_25934:
  %v0_25935 = load i32, i32* @eax, align 4
  ret i32 %v0_25935
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25936:
  ret i32 %arg3
}

define i32 @function_2594c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2594c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2594c = load i32, i32* @ebp, align 4
  %v1_2594c = add i32 %v0_2594c, 1
  store i32 %v1_2594c, i32* @ebp, align 4
  %v0_25957 = load i32, i32* @eax, align 4
  %v1_25957 = add i32 %v0_25957, -1587161275
  %v2_25957 = inttoptr i32 %v1_25957 to i8*
  %v3_25957 = load i8, i8* %v2_25957, align 1
  %v4_25957 = load i32, i32* @ecx, align 4
  %v5_25957 = trunc i32 %v4_25957 to i8
  %v6_25957 = load i1, i1* @cf, align 1
  %v7_25957 = zext i1 %v6_25957 to i8
  %v8_25957 = sub i8 %v3_25957, %v5_25957
  %v9_25957 = add i8 %v8_25957, %v7_25957
  %v19_25957 = sub i8 %v8_25957, %v7_25957
  %v20_25957 = icmp ult i8 %v3_25957, %v19_25957
  %v21_25957 = icmp ne i8 %v5_25957, -1
  %v22_25957 = or i1 %v21_25957, %v20_25957
  %v23_25957 = icmp ult i8 %v3_25957, %v5_25957
  %v24_25957 = select i1 %v6_25957, i1 %v22_25957, i1 %v23_25957
  store i1 %v24_25957, i1* %cf.global-to-local, align 1
  store i8 %v9_25957, i8* %v2_25957, align 1
  %v0_2595d = load i32, i32* @eax, align 4
  %v1_2595d = trunc i32 %v0_2595d to i8
  %v2_2595d = load i1, i1* %cf.global-to-local, align 1
  %v3_2595d = zext i1 %v2_2595d to i8
  %v4_2595d = add i8 %v3_2595d, %v1_2595d
  %v19_2595d = icmp ule i8 %v4_2595d, %v1_2595d
  %v21_2595d = icmp eq i1 %v2_2595d, %v19_2595d
  store i1 %v21_2595d, i1* %cf.global-to-local, align 1
  %v22_2595d = zext i8 %v4_2595d to i32
  %v24_2595d = and i32 %v0_2595d, -256
  %v25_2595d = or i32 %v22_2595d, %v24_2595d
  store i32 %v25_2595d, i32* %eax.global-to-local, align 4
  %v1_2595f = inttoptr i32 %v25_2595d to i8*
  %v2_2595f = load i8, i8* %v1_2595f, align 1
  %v5_2595f = add i8 %v2_2595f, %v4_2595d
  store i8 %v5_2595f, i8* %v1_2595f, align 1
  %v0_25961 = load i32, i32* %eax.global-to-local, align 4
  %v1_25961 = load i32, i32* @ebp, align 4
  %v2_25961 = add i32 %v1_25961, -12
  %v3_25961 = inttoptr i32 %v2_25961 to i32*
  store i32 %v0_25961, i32* %v3_25961, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_2595d, { 0, 2, 1 }
  uselistorder i8 %v1_2595d, { 1, 0 }
  uselistorder i8 %v5_25957, { 1, 0, 2 }
}

define i32 @function_25968(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25968:
  %eax.global-to-local = alloca i32, align 4
  %v2_2596e = load i8, i8* bitcast (i32* @edx to i8*), align 8
  %v3_2596e = load i32, i32* @eax, align 4
  %v4_2596e = trunc i32 %v3_2596e to i8
  %v5_2596e = xor i8 %v4_2596e, %v2_2596e
  %v11_2596e = load i32, i32* @edx, align 8
  %v12_2596e = inttoptr i32 %v11_2596e to i8*
  store i8 %v5_2596e, i8* %v12_2596e, align 1
  %v3_25970 = load i32, i32* @eax, align 4
  %v11_25973 = and i32 %v3_25970, -248
  store i32 %v11_25973, i32* %eax.global-to-local, align 4
  %v1_25975 = inttoptr i32 %v11_25973 to i32*
  %v2_25975 = load i32, i32* %v1_25975, align 8
  %v4_25975 = add i32 %v2_25975, %v11_25973
  store i32 %v4_25975, i32* %v1_25975, align 8
  %v0_25977 = load i32, i32* %eax.global-to-local, align 4
  %v1_25977 = inttoptr i32 %v0_25977 to i8*
  %v2_25977 = load i8, i8* %v1_25977, align 1
  %v4_25977 = trunc i32 %v0_25977 to i8
  %v5_25977 = add i8 %v2_25977, %v4_25977
  store i8 %v5_25977, i8* %v1_25977, align 1
  %v0_25979 = load i32, i32* %eax.global-to-local, align 4
  %v0_2597d = load i32, i32* @ebp, align 4
  %v1_2597d = add i32 %v0_2597d, -32
  %v2_2597d = inttoptr i32 %v1_2597d to i32*
  %v3_2597d = load i32, i32* %v2_2597d, align 4
  store i32 %v3_2597d, i32* %eax.global-to-local, align 4
  %v2_25983 = call i32 @unknown_4c49e(i32 %v3_2597d, i32 %v0_25979)
  store i32 %v2_25983, i32* @eax, align 4
  %v0_25988 = load i32, i32* @ebp, align 4
  %v1_25988 = add i32 %v0_25988, -12
  %v2_25988 = inttoptr i32 %v1_25988 to i32*
  %v3_25988 = load i32, i32* %v2_25988, align 4
  %v1_2598b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2598b = icmp eq i32 %v1_2598b, %v3_25988
  br i1 %v3_2598b, label %bb, label %dec_label_pc_25994

bb:                                               ; preds = %dec_label_pc_25968
  %v1_25992 = call i32 @function_25999()
  store i32 %v1_25992, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_25994

dec_label_pc_25994:                               ; preds = %bb, %dec_label_pc_25968
  %v2_25992 = phi i32 [ %v1_25992, %bb ], [ %v2_25983, %dec_label_pc_25968 ]
  ret i32 %v2_25992

; uselistorder directives
  uselistorder i32 %v11_25973, { 0, 2, 1 }
}

define i32 @function_25999() local_unnamed_addr {
dec_label_pc_25999:
  %v0_2599a = load i32, i32* @eax, align 4
  ret i32 %v0_2599a
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvbEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2599b:
  %stack_var_-76 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-76, align 4
  %v1_259d1 = call i32 @unknown_48b6c(i32 %arg3)
  store i32 %arg2, i32* %stack_var_-76, align 4
  %v3_259e8 = call i32 @unknown_4c55b(i32 %arg2, i32 %v1_259d1, i32 1)
  store i32 %v3_259e8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_259f9

bb:                                               ; preds = %dec_label_pc_2599b
  %v1_259f7 = load i32, i32* %stack_var_-76, align 4
  %v3_259f7 = call i32 @function_259fe(i32 %v1_259f7, i32 %v1_259d1)
  br label %dec_label_pc_259f9

dec_label_pc_259f9:                               ; preds = %bb, %dec_label_pc_2599b
  %v4_259f7 = phi i32 [ %v3_259f7, %bb ], [ %v3_259e8, %dec_label_pc_2599b ]
  ret i32 %v4_259f7

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_259fe, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_259fe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_259fe:
  %v0_259ff = load i32, i32* @eax, align 4
  ret i32 %v0_259ff
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvxEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_25a00:
  %v1_25a36 = call i32 @unknown_48c55(i32 %arg3)
  %v3_25a4d = call i32 @unknown_4c60a(i32 %arg2, i32 %v1_25a36, i32 1)
  store i32 %v3_25a4d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25a5e

bb:                                               ; preds = %dec_label_pc_25a00
  %v1_25a5c = call i32 @function_25a63()
  br label %dec_label_pc_25a5e

dec_label_pc_25a5e:                               ; preds = %bb, %dec_label_pc_25a00
  %v2_25a5c = phi i32 [ %v1_25a5c, %bb ], [ %v3_25a4d, %dec_label_pc_25a00 ]
  ret i32 %v2_25a5c
}

define i32 @function_25a63() local_unnamed_addr {
dec_label_pc_25a63:
  %v0_25a64 = load i32, i32* @eax, align 4
  ret i32 %v0_25a64
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvdEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_25a65:
  %v1_25a9b = call i32 @unknown_48d45(i32 %arg3)
  ret i32 %v1_25a9b
}

define i32 @function_25aa4(i32 %arg1) local_unnamed_addr {
dec_label_pc_25aa4:
  %v2_25aa4 = load i32, i32* @eax, align 4
  %v4_25aa4 = mul i32 %v2_25aa4, 2
  %v21_25aa4 = inttoptr i32 %v2_25aa4 to i32*
  store i32 %v4_25aa4, i32* %v21_25aa4, align 4
  %v2_25aa6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_25aa6 = load i32, i32* @eax, align 4
  %v4_25aa6 = trunc i32 %v3_25aa6 to i8
  %v5_25aa6 = add i8 %v4_25aa6, %v2_25aa6
  %v21_25aa6 = inttoptr i32 %v3_25aa6 to i8*
  store i8 %v5_25aa6, i8* %v21_25aa6, align 1
  %v0_25aa8 = load i32, i32* @eax, align 4
  %v0_25aac = load i32, i32* @ebp, align 4
  %v1_25aac = add i32 %v0_25aac, -32
  %v2_25aac = inttoptr i32 %v1_25aac to i32*
  %v3_25aac = load i32, i32* %v2_25aac, align 4
  %v2_25ab2 = call i32 @unknown_4c6b9(i32 %v3_25aac, i32 %v0_25aa8)
  store i32 %v2_25ab2, i32* @eax, align 4
  %v0_25ab7 = load i32, i32* @ebp, align 4
  %v1_25ab7 = add i32 %v0_25ab7, -12
  %v2_25ab7 = inttoptr i32 %v1_25ab7 to i32*
  %v3_25ab7 = load i32, i32* %v2_25ab7, align 4
  %v1_25aba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25aba = xor i32 %v1_25aba, %v3_25ab7
  %v3_25aba = icmp eq i32 %v2_25aba, 0
  store i32 %v2_25aba, i32* @edx, align 8
  br i1 %v3_25aba, label %bb, label %dec_label_pc_25ac3

bb:                                               ; preds = %dec_label_pc_25aa4
  %v1_25ac1 = call i32 @function_25ac8()
  br label %dec_label_pc_25ac3

dec_label_pc_25ac3:                               ; preds = %bb, %dec_label_pc_25aa4
  %v2_25ac1 = phi i32 [ %v1_25ac1, %bb ], [ %v2_25ab2, %dec_label_pc_25aa4 ]
  ret i32 %v2_25ac1

; uselistorder directives
  uselistorder i32 %v2_25aa4, { 1, 0 }
}

define i32 @function_25ac8() local_unnamed_addr {
dec_label_pc_25ac8:
  %v0_25ac9 = load i32, i32* @eax, align 4
  ret i32 %v0_25ac9
}

define i32 @_ZNK9base_uintILj256EE9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25aca:
  %v7_25b08 = call i32 @unknown_3360e(i32 %arg2, i32 %arg1, i32 32, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25b19

bb:                                               ; preds = %dec_label_pc_25aca
  %v1_25b17 = call i32 @function_25b1e()
  br label %dec_label_pc_25b19

dec_label_pc_25b19:                               ; preds = %bb, %dec_label_pc_25aca
  %v2_25b17 = phi i32 [ %v1_25b17, %bb ], [ 0, %dec_label_pc_25aca ]
  ret i32 %v2_25b17

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25b1e() local_unnamed_addr {
dec_label_pc_25b1e:
  %v0_25b1f = load i32, i32* @eax, align 4
  ret i32 %v0_25b1f
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI5CTxInSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1) local_unnamed_addr {
dec_label_pc_25b20:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v4_25b6b = call i32 @unknown_4c7be(i32 %arg1, i32 %tmp12, i32 %tmp10, i32 %tmp8)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25b81

bb:                                               ; preds = %dec_label_pc_25b20
  %v1_25b7f = call i32 @function_25b86()
  br label %dec_label_pc_25b81

dec_label_pc_25b81:                               ; preds = %bb, %dec_label_pc_25b20
  %v3_25b7f = phi i32 [ %v1_25b7f, %bb ], [ 0, %dec_label_pc_25b20 ]
  ret i32 %v3_25b7f
}

define i32 @function_25b86() local_unnamed_addr {
dec_label_pc_25b86:
  %v0_25b87 = load i32, i32* @eax, align 4
  ret i32 %v0_25b87
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI6CTxOutSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_25b88:
  %v4_25bd3 = call i32 @unknown_4c889(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25be9

bb:                                               ; preds = %dec_label_pc_25b88
  %v1_25be7 = call i32 @function_25bee()
  br label %dec_label_pc_25be9

dec_label_pc_25be9:                               ; preds = %bb, %dec_label_pc_25b88
  %v2_25be7 = phi i32 [ %v1_25be7, %bb ], [ 0, %dec_label_pc_25b88 ]
  ret i32 %v2_25be7
}

define i32 @function_25bec(i32 %arg1) local_unnamed_addr {
dec_label_pc_25bec:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25bee() local_unnamed_addr {
dec_label_pc_25bee:
  %v0_25bef = load i32, i32* @eax, align 4
  ret i32 %v0_25bef
}

define i32 @_ZN5boost14checked_deleteISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_25bf0:
  %v1_25c0b = icmp eq i32 %arg1, 0
  br i1 %v1_25c0b, label %bb, label %dec_label_pc_25c0f

bb:                                               ; preds = %dec_label_pc_25bf0
  %v2_25c0d = call i32 @function_25c1f(i32 0)
  br label %dec_label_pc_25c0f

dec_label_pc_25c0f:                               ; preds = %bb, %dec_label_pc_25bf0
  %v1_25c12 = call i32 @unknown_382d6(i32 %arg1)
  ret i32 %v1_25c12
}

define i32 @function_25c1f(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c1f:
  %v0_25c1f = load i32, i32* @ebp, align 4
  %v1_25c1f = add i32 %v0_25c1f, -12
  %v2_25c1f = inttoptr i32 %v1_25c1f to i32*
  %v3_25c1f = load i32, i32* %v2_25c1f, align 4
  %v1_25c22 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25c22 = xor i32 %v1_25c22, %v3_25c1f
  %v3_25c22 = icmp eq i32 %v2_25c22, 0
  store i32 %v2_25c22, i32* @eax, align 4
  br i1 %v3_25c22, label %bb, label %dec_label_pc_25c2b

bb:                                               ; preds = %dec_label_pc_25c1f
  %v1_25c29 = call i32 @function_25c30()
  br label %dec_label_pc_25c2b

dec_label_pc_25c2b:                               ; preds = %bb, %dec_label_pc_25c1f
  %v2_25c29 = phi i32 [ %v1_25c29, %bb ], [ %v2_25c22, %dec_label_pc_25c1f ]
  ret i32 %v2_25c29
}

define i32 @function_25c30() local_unnamed_addr {
dec_label_pc_25c30:
  %v0_25c35 = load i32, i32* @eax, align 4
  ret i32 %v0_25c35
}

define i32 @_ZN5boost14checked_deleteISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c36:
  %v0_25c43 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_25c43
}

define i32 @function_25c4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25c4c:
  %v0_25c4e = load i32, i32* @ebp, align 4
  %v1_25c4e = add i32 %v0_25c4e, -28
  %v2_25c4e = inttoptr i32 %v1_25c4e to i32*
  %v3_25c4e = load i32, i32* %v2_25c4e, align 4
  %v1_25c51 = icmp eq i32 %v3_25c4e, 0
  br i1 %v1_25c51, label %bb, label %dec_label_pc_25c55

bb:                                               ; preds = %dec_label_pc_25c4c
  %v1_25c53 = call i32 @function_25c65()
  br label %dec_label_pc_25c55

dec_label_pc_25c55:                               ; preds = %bb, %dec_label_pc_25c4c
  %v1_25c58 = call i32 @unknown_38764(i32 %v3_25c4e)
  ret i32 %v1_25c58
}

define i32 @function_25c65() local_unnamed_addr {
dec_label_pc_25c65:
  %v0_25c65 = load i32, i32* @ebp, align 4
  %v1_25c65 = add i32 %v0_25c65, -12
  %v2_25c65 = inttoptr i32 %v1_25c65 to i32*
  %v3_25c65 = load i32, i32* %v2_25c65, align 4
  %v1_25c68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25c68 = xor i32 %v1_25c68, %v3_25c65
  %v3_25c68 = icmp eq i32 %v2_25c68, 0
  store i32 %v2_25c68, i32* @eax, align 4
  br i1 %v3_25c68, label %bb, label %dec_label_pc_25c71

bb:                                               ; preds = %dec_label_pc_25c65
  %v1_25c6f = call i32 @function_25c76()
  br label %dec_label_pc_25c71

dec_label_pc_25c71:                               ; preds = %bb, %dec_label_pc_25c65
  %v2_25c6f = phi i32 [ %v1_25c6f, %bb ], [ %v2_25c68, %dec_label_pc_25c65 ]
  ret i32 %v2_25c6f
}

define i32 @function_25c76() local_unnamed_addr {
dec_label_pc_25c76:
  %v0_25c7b = load i32, i32* @eax, align 4
  ret i32 %v0_25c7b
}

define i32 @_ZN5boost14static_visitorIiEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c7c:
  %v1_25c99 = call i32 @unknown_36ade(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25caa

bb:                                               ; preds = %dec_label_pc_25c7c
  %v1_25ca8 = call i32 @function_25caf()
  br label %dec_label_pc_25caa

dec_label_pc_25caa:                               ; preds = %bb, %dec_label_pc_25c7c
  %v2_25ca8 = phi i32 [ %v1_25ca8, %bb ], [ 0, %dec_label_pc_25c7c ]
  ret i32 %v2_25ca8
}

define i32 @function_25caf() local_unnamed_addr {
dec_label_pc_25caf:
  %v0_25cb0 = load i32, i32* @eax, align 4
  ret i32 %v0_25cb0
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSJ_17convert_copy_intoEPvEENT_11result_typeEiiRSN_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25cb1:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_25cea = load i32, i32* %ecx.global-to-local, align 4
  %v0_25cee = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_25cee, 16777216
  %v12_25d0d = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_25cea, 16777216
  %v13_25d0d = sdiv i32 %sext1, 16777216
  %v14_25d0d = call i32 @unknown_4ca15(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_25d0d, i32 %v13_25d0d, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v14_25d0d, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_25d1e

bb:                                               ; preds = %dec_label_pc_25cb1
  %v1_25d1c = call i32 @function_25d23()
  br label %dec_label_pc_25d1e

dec_label_pc_25d1e:                               ; preds = %bb, %dec_label_pc_25cb1
  %v2_25d1c = phi i32 [ %v1_25d1c, %bb ], [ %v14_25d0d, %dec_label_pc_25cb1 ]
  ret i32 %v2_25d1c

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25d23() local_unnamed_addr {
dec_label_pc_25d23:
  %v0_25d24 = load i32, i32* @eax, align 4
  ret i32 %v0_25d24
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_25d25:
  ret i32 %arg6
}

define i32 @function_25d52(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d52:
  %eax.global-to-local = alloca i32, align 4
  %v0_25d52 = load i32, i32* @eax, align 4
  %v1_25d52 = trunc i32 %v0_25d52 to i8
  %v2_25d52 = load i1, i1* @cf, align 1
  %v3_25d52 = zext i1 %v2_25d52 to i8
  %v4_25d52 = add i8 %v3_25d52, %v1_25d52
  %v22_25d52 = zext i8 %v4_25d52 to i32
  %v24_25d52 = and i32 %v0_25d52, -256
  %v25_25d52 = or i32 %v22_25d52, %v24_25d52
  store i32 %v25_25d52, i32* %eax.global-to-local, align 4
  %v1_25d54 = inttoptr i32 %v25_25d52 to i8*
  %v2_25d54 = load i8, i8* %v1_25d54, align 1
  %v5_25d54 = add i8 %v2_25d54, %v4_25d52
  store i8 %v5_25d54, i8* %v1_25d54, align 1
  %v0_25d56 = load i32, i32* %eax.global-to-local, align 4
  %v1_25d56 = load i32, i32* @ebp, align 4
  %v2_25d56 = add i32 %v1_25d56, -12
  %v3_25d56 = inttoptr i32 %v2_25d56 to i32*
  store i32 %v0_25d56, i32* %v3_25d56, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_25d5b = load i32, i32* @edx, align 8
  %v0_25d5f = load i32, i32* @ebp, align 4
  %v1_25d5f = add i32 %v0_25d5f, -40
  %v2_25d5f = inttoptr i32 %v1_25d5f to i32*
  %v3_25d5f = load i32, i32* %v2_25d5f, align 4
  store i32 %v3_25d5f, i32* %eax.global-to-local, align 4
  %v1_25d66 = add i32 %v0_25d5f, -36
  %v2_25d66 = inttoptr i32 %v1_25d66 to i32*
  %v3_25d66 = load i32, i32* %v2_25d66, align 4
  store i32 %v3_25d66, i32* %eax.global-to-local, align 4
  %v1_25d6d = add i32 %v0_25d5f, -32
  %v2_25d6d = inttoptr i32 %v1_25d6d to i32*
  %v3_25d6d = load i32, i32* %v2_25d6d, align 4
  store i32 %v3_25d6d, i32* %eax.global-to-local, align 4
  %v1_25d74 = add i32 %v0_25d5f, -28
  %v2_25d74 = inttoptr i32 %v1_25d74 to i32*
  %v3_25d74 = load i32, i32* %v2_25d74, align 4
  store i32 %v3_25d74, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_25d5b, 16777216
  %v5_25d7a = sdiv i32 %sext, 16777216
  %v6_25d7a = call i32 @unknown_4cfb5(i32 %v3_25d74, i32 %v3_25d6d, i32 %v3_25d66, i32 %v3_25d5f, i32 %v5_25d7a)
  store i32 %v6_25d7a, i32* %eax.global-to-local, align 4
  %v0_25d7f = load i32, i32* @ebp, align 4
  %v1_25d7f = add i32 %v0_25d7f, -12
  %v2_25d7f = inttoptr i32 %v1_25d7f to i32*
  %v3_25d7f = load i32, i32* %v2_25d7f, align 4
  store i32 %v3_25d7f, i32* %eax.global-to-local, align 4
  %v1_25d82 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25d82 = xor i32 %v1_25d82, %v3_25d7f
  %v3_25d82 = icmp eq i32 %v2_25d82, 0
  store i32 %v2_25d82, i32* @eax, align 4
  br i1 %v3_25d82, label %bb, label %dec_label_pc_25d8b

bb:                                               ; preds = %dec_label_pc_25d52
  %v1_25d89 = call i32 @function_25d90()
  store i32 %v1_25d89, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_25d8b

dec_label_pc_25d8b:                               ; preds = %bb, %dec_label_pc_25d52
  %v2_25d89 = phi i32 [ %v1_25d89, %bb ], [ %v2_25d82, %dec_label_pc_25d52 ]
  ret i32 %v2_25d89

; uselistorder directives
  uselistorder i32 %v0_25d5f, { 1, 0, 2, 3 }
}

define i32 @function_25d90() local_unnamed_addr {
dec_label_pc_25d90:
  %v0_25d91 = load i32, i32* @eax, align 4
  ret i32 %v0_25d91
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsSE_NS5_IS6_INS7_10Value_implISA_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_25d92:
  %eax.global-to-local = alloca i32, align 4
  %v5_25d92 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_25d92
}

define i32 @function_25d94(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25d94:
  %v0_25d98 = load i32, i32* @ebp, align 4
  %v1_25d98 = add i32 %v0_25d98, 8
  %v2_25d98 = inttoptr i32 %v1_25d98 to i32*
  %v3_25d98 = load i32, i32* %v2_25d98, align 4
  %v2_25d9b = add i32 %v0_25d98, -28
  %v3_25d9b = inttoptr i32 %v2_25d9b to i32*
  store i32 %v3_25d98, i32* %v3_25d9b, align 4
  %v0_25d9e = load i32, i32* @ebp, align 4
  %v1_25d9e = add i32 %v0_25d9e, 12
  %v2_25d9e = inttoptr i32 %v1_25d9e to i32*
  %v3_25d9e = load i32, i32* %v2_25d9e, align 4
  %v2_25da1 = add i32 %v0_25d9e, -32
  %v3_25da1 = inttoptr i32 %v2_25da1 to i32*
  store i32 %v3_25d9e, i32* %v3_25da1, align 4
  %v0_25da4 = load i32, i32* @ebp, align 4
  %v1_25da4 = add i32 %v0_25da4, 16
  %v2_25da4 = inttoptr i32 %v1_25da4 to i32*
  %v3_25da4 = load i32, i32* %v2_25da4, align 4
  %v2_25da7 = add i32 %v0_25da4, -36
  %v3_25da7 = inttoptr i32 %v2_25da7 to i32*
  store i32 %v3_25da4, i32* %v3_25da7, align 4
  %v0_25daa = load i32, i32* @ebp, align 4
  %v1_25daa = add i32 %v0_25daa, 20
  %v2_25daa = inttoptr i32 %v1_25daa to i32*
  %v3_25daa = load i32, i32* %v2_25daa, align 4
  %v2_25dad = add i32 %v0_25daa, -40
  %v3_25dad = inttoptr i32 %v2_25dad to i32*
  store i32 %v3_25daa, i32* %v3_25dad, align 4
  %v0_25db0 = load i32, i32* @ebp, align 4
  %v1_25db0 = add i32 %v0_25db0, 24
  %v2_25db0 = inttoptr i32 %v1_25db0 to i8*
  %v3_25db0 = load i8, i8* %v2_25db0, align 1
  %v3_25db4 = add i32 %v0_25db0, -41
  %v4_25db4 = inttoptr i32 %v3_25db4 to i8*
  store i8 %v3_25db0, i8* %v4_25db4, align 1
  %v0_25db7 = load i32, i32* @ebp, align 4
  %v1_25db7 = add i32 %v0_25db7, 28
  %v2_25db7 = inttoptr i32 %v1_25db7 to i32*
  %v3_25db7 = load i32, i32* %v2_25db7, align 4
  %v2_25dba = add i32 %v0_25db7, -48
  %v3_25dba = inttoptr i32 %v2_25dba to i32*
  store i32 %v3_25db7, i32* %v3_25dba, align 4
  %v0_25dbd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_25dc3 = load i32, i32* @ebp, align 4
  %v2_25dc3 = add i32 %v1_25dc3, -12
  %v3_25dc3 = inttoptr i32 %v2_25dc3 to i32*
  store i32 %v0_25dbd, i32* %v3_25dc3, align 4
  %v0_25dc8 = load i32, i32* @edx, align 8
  %v0_25dcc = load i32, i32* @ebp, align 4
  %v1_25dcc = add i32 %v0_25dcc, -40
  %v2_25dcc = inttoptr i32 %v1_25dcc to i32*
  %v3_25dcc = load i32, i32* %v2_25dcc, align 4
  %v1_25dd3 = add i32 %v0_25dcc, -36
  %v2_25dd3 = inttoptr i32 %v1_25dd3 to i32*
  %v3_25dd3 = load i32, i32* %v2_25dd3, align 4
  %v1_25dda = add i32 %v0_25dcc, -32
  %v2_25dda = inttoptr i32 %v1_25dda to i32*
  %v3_25dda = load i32, i32* %v2_25dda, align 4
  %v1_25de1 = add i32 %v0_25dcc, -28
  %v2_25de1 = inttoptr i32 %v1_25de1 to i32*
  %v3_25de1 = load i32, i32* %v2_25de1, align 4
  %sext = mul i32 %v0_25dc8, 16777216
  %v5_25de7 = sdiv i32 %sext, 16777216
  %v6_25de7 = call i32 @unknown_4d087(i32 %v3_25de1, i32 %v3_25dda, i32 %v3_25dd3, i32 %v3_25dcc, i32 %v5_25de7)
  %v0_25dec = load i32, i32* @ebp, align 4
  %v1_25dec = add i32 %v0_25dec, -12
  %v2_25dec = inttoptr i32 %v1_25dec to i32*
  %v3_25dec = load i32, i32* %v2_25dec, align 4
  %v1_25def = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25def = xor i32 %v1_25def, %v3_25dec
  %v3_25def = icmp eq i32 %v2_25def, 0
  store i32 %v2_25def, i32* @eax, align 4
  br i1 %v3_25def, label %bb, label %dec_label_pc_25df8

bb:                                               ; preds = %dec_label_pc_25d94
  %v1_25df6 = call i32 @function_25dfd()
  br label %dec_label_pc_25df8

dec_label_pc_25df8:                               ; preds = %bb, %dec_label_pc_25d94
  %v2_25df6 = phi i32 [ %v1_25df6, %bb ], [ %v2_25def, %dec_label_pc_25d94 ]
  ret i32 %v2_25df6

; uselistorder directives
  uselistorder i32 %v0_25dcc, { 1, 0, 2, 3 }
}

define i32 @function_25dfd() local_unnamed_addr {
dec_label_pc_25dfd:
  %v0_25dfe = load i32, i32* @eax, align 4
  ret i32 %v0_25dfe
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsNS5_IS6_INS7_9Pair_implISA_EESaISH_EEEESE_bxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_25dff:
  %edx.global-to-local = alloca i32, align 4
  %v0_25e35 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_25e35, 16777216
  %v5_25e54 = sdiv i32 %sext, 16777216
  %v6_25e54 = call i32 @unknown_4d159(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_25e54)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25e65

bb:                                               ; preds = %dec_label_pc_25dff
  %v1_25e63 = call i32 @function_25e6a()
  br label %dec_label_pc_25e65

dec_label_pc_25e65:                               ; preds = %bb, %dec_label_pc_25dff
  %v2_25e63 = phi i32 [ %v1_25e63, %bb ], [ 0, %dec_label_pc_25dff ]
  ret i32 %v2_25e63
}

define i32 @function_25e6a() local_unnamed_addr {
dec_label_pc_25e6a:
  %v0_25e6b = load i32, i32* @eax, align 4
  ret i32 %v0_25e6b
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25e6c:
  ret i32 %arg2
}

define i32 @function_25e80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25e80:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_25e80 = load i32, i32* @ecx, align 4
  %v1_25e80 = add i32 %v0_25e80, 1166793797
  %v2_25e80 = inttoptr i32 %v1_25e80 to i8*
  %v3_25e80 = load i8, i8* %v2_25e80, align 1
  %v5_25e80 = trunc i32 %v0_25e80 to i8
  %v6_25e80 = load i1, i1* @cf, align 1
  %v7_25e80 = zext i1 %v6_25e80 to i8
  %v8_25e80 = add i8 %v3_25e80, %v5_25e80
  %v9_25e80 = add i8 %v7_25e80, %v8_25e80
  %v27_25e80 = icmp ule i8 %v9_25e80, %v3_25e80
  %v28_25e80 = icmp ult i8 %v8_25e80, %v3_25e80
  %v29_25e80 = select i1 %v6_25e80, i1 %v27_25e80, i1 %v28_25e80
  store i1 %v29_25e80, i1* %cf.global-to-local, align 1
  store i8 %v9_25e80, i8* %v2_25e80, align 1
  %v0_25e86 = load i32, i32* @eax, align 4
  %v1_25e86 = trunc i32 %v0_25e86 to i8
  %v2_25e86 = load i1, i1* %cf.global-to-local, align 1
  %v3_25e86 = zext i1 %v2_25e86 to i8
  %v4_25e86 = add i8 %v1_25e86, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_25e86 = add i8 %v4_25e86, %v3_25e86
  %v20_25e86 = add i8 %v1_25e86, -119
  %v21_25e86 = add i8 %v20_25e86, %v3_25e86
  %v22_25e86 = icmp ule i8 %v21_25e86, %v1_25e86
  %v23_25e86 = icmp ugt i8 %v1_25e86, 118
  %v24_25e86 = select i1 %v2_25e86, i1 %v22_25e86, i1 %v23_25e86
  store i1 %v24_25e86, i1* %cf.global-to-local, align 1
  %v25_25e86 = zext i8 %v5_25e86 to i32
  %v27_25e86 = and i32 %v0_25e86, -256
  %v28_25e86 = or i32 %v25_25e86, %v27_25e86
  store i32 %v28_25e86, i32* %eax.global-to-local, align 4
  %v0_25e88 = load i32, i32* @ebp, align 4
  %v1_25e88 = add i32 %v0_25e88, 1
  store i32 %v1_25e88, i32* %ebp.global-to-local, align 4
  %v3_25e89 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_25e89 = fpext float %v3_25e89 to x86_fp80
  %v5_25e89 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_25e89 = fmul x86_fp80 %v4_25e89, %v5_25e89
  store x86_fp80 %v6_25e89, x86_fp80* @st0, align 4
  %v0_25e8b = load i32, i32* @edx, align 8
  %v1_25e8b = and i32 %v0_25e8b, -65281
  %v2_25e8b = or i32 %v1_25e8b, 17664
  store i32 %v2_25e8b, i32* @edx, align 8
  %v1_25e8d = add i32 %v28_25e86, 1166792517
  %v2_25e8d = inttoptr i32 %v1_25e8d to i8*
  %v3_25e8d = load i8, i8* %v2_25e8d, align 1
  %v4_25e8d = load i32, i32* @ecx, align 4
  %v5_25e8d = trunc i32 %v4_25e8d to i8
  %v7_25e8d = zext i1 %v24_25e86 to i8
  %v8_25e8d = sub i8 %v3_25e8d, %v5_25e8d
  %v9_25e8d = add i8 %v8_25e8d, %v7_25e8d
  %v19_25e8d = sub i8 %v8_25e8d, %v7_25e8d
  %v20_25e8d = icmp ult i8 %v3_25e8d, %v19_25e8d
  %v21_25e8d = icmp ne i8 %v5_25e8d, -1
  %v22_25e8d = or i1 %v21_25e8d, %v20_25e8d
  %v23_25e8d = icmp ult i8 %v3_25e8d, %v5_25e8d
  %v24_25e8d = select i1 %v24_25e86, i1 %v22_25e8d, i1 %v23_25e8d
  store i1 %v24_25e8d, i1* %cf.global-to-local, align 1
  store i8 %v9_25e8d, i8* %v2_25e8d, align 1
  %v0_25e93 = load i32, i32* %eax.global-to-local, align 4
  %v1_25e93 = trunc i32 %v0_25e93 to i8
  %v2_25e93 = load i1, i1* %cf.global-to-local, align 1
  %v3_25e93 = zext i1 %v2_25e93 to i32
  %v4_25e93 = add i32 %v0_25e93, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_25e93 = add i32 %v4_25e93, %v3_25e93
  %v17_25e93 = icmp ult i8 %v1_25e93, -119
  %v18_25e93 = or i1 %v2_25e93, %v17_25e93
  store i1 %v18_25e93, i1* %cf.global-to-local, align 1
  %v31_25e93 = urem i32 %v5_25e93, 256
  %v33_25e93 = and i32 %v0_25e93, -256
  %v34_25e93 = or i32 %v31_25e93, %v33_25e93
  store i32 %v34_25e93, i32* %eax.global-to-local, align 4
  %v0_25e95 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25e95 = add i32 %v0_25e95, 1
  store i32 %v1_25e95, i32* @ebp, align 4
  %v1_25e96 = add i32 %v0_25e95, -94
  %v2_25e96 = inttoptr i32 %v1_25e96 to i8*
  %v3_25e96 = load i8, i8* %v2_25e96, align 1
  %v5_25e96 = mul i8 %v3_25e96, 2
  store i8 %v5_25e96, i8* %v2_25e96, align 1
  %v16_25e96 = icmp slt i8 %v3_25e96, 0
  %v0_25e99 = load i32, i32* %eax.global-to-local, align 4
  %v1_25e99 = trunc i32 %v0_25e99 to i8
  %v3_25e99 = zext i1 %v16_25e96 to i8
  %v4_25e99 = add i8 %v1_25e99, %v3_25e99
  %v19_25e99 = icmp ule i8 %v4_25e99, %v1_25e99
  %v21_25e99 = icmp eq i1 %v16_25e96, %v19_25e99
  store i1 %v21_25e99, i1* %cf.global-to-local, align 1
  %v22_25e99 = zext i8 %v4_25e99 to i32
  %v24_25e99 = and i32 %v0_25e99, -256
  %v25_25e99 = or i32 %v22_25e99, %v24_25e99
  store i32 %v25_25e99, i32* %eax.global-to-local, align 4
  %v1_25e9b = inttoptr i32 %v25_25e99 to i8*
  %v2_25e9b = load i8, i8* %v1_25e9b, align 1
  %v5_25e9b = add i8 %v2_25e9b, %v4_25e99
  store i8 %v5_25e9b, i8* %v1_25e9b, align 1
  %v0_25e9d = load i32, i32* %eax.global-to-local, align 4
  %v1_25e9d = load i32, i32* @ebp, align 4
  %v2_25e9d = add i32 %v1_25e9d, -12
  %v3_25e9d = inttoptr i32 %v2_25e9d to i32*
  store i32 %v0_25e9d, i32* %v3_25e9d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_25ea2 = load i32, i32* @edx, align 8
  %v0_25ea6 = load i32, i32* @ebp, align 4
  %v1_25ea6 = add i32 %v0_25ea6, -40
  %v2_25ea6 = inttoptr i32 %v1_25ea6 to i32*
  %v3_25ea6 = load i32, i32* %v2_25ea6, align 4
  store i32 %v3_25ea6, i32* %eax.global-to-local, align 4
  %v1_25ead = add i32 %v0_25ea6, -36
  %v2_25ead = inttoptr i32 %v1_25ead to i32*
  %v3_25ead = load i32, i32* %v2_25ead, align 4
  store i32 %v3_25ead, i32* %eax.global-to-local, align 4
  %v1_25eb4 = add i32 %v0_25ea6, -32
  %v2_25eb4 = inttoptr i32 %v1_25eb4 to i32*
  %v3_25eb4 = load i32, i32* %v2_25eb4, align 4
  store i32 %v3_25eb4, i32* %eax.global-to-local, align 4
  %v1_25ebb = add i32 %v0_25ea6, -28
  %v2_25ebb = inttoptr i32 %v1_25ebb to i32*
  %v3_25ebb = load i32, i32* %v2_25ebb, align 4
  store i32 %v3_25ebb, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_25ea2, 16777216
  %v5_25ec1 = sdiv i32 %sext, 16777216
  %v6_25ec1 = call i32 @unknown_4d22b(i32 %v3_25ebb, i32 %v3_25eb4, i32 %v3_25ead, i32 %v3_25ea6, i32 %v5_25ec1)
  store i32 %v6_25ec1, i32* %eax.global-to-local, align 4
  %v0_25ec6 = load i32, i32* @ebp, align 4
  %v1_25ec6 = add i32 %v0_25ec6, -12
  %v2_25ec6 = inttoptr i32 %v1_25ec6 to i32*
  %v3_25ec6 = load i32, i32* %v2_25ec6, align 4
  store i32 %v3_25ec6, i32* %eax.global-to-local, align 4
  %v1_25ec9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25ec9 = xor i32 %v1_25ec9, %v3_25ec6
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* @of, align 1
  %v3_25ec9 = icmp eq i32 %v2_25ec9, 0
  store i32 %v2_25ec9, i32* @eax, align 4
  br i1 %v3_25ec9, label %bb, label %dec_label_pc_25ed2

bb:                                               ; preds = %dec_label_pc_25e80
  %v1_25ed0 = call i32 @function_25ed7()
  store i32 %v1_25ed0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_25ed2

dec_label_pc_25ed2:                               ; preds = %bb, %dec_label_pc_25e80
  %v2_25ed0 = phi i32 [ %v1_25ed0, %bb ], [ %v2_25ec9, %dec_label_pc_25e80 ]
  ret i32 %v2_25ed0

; uselistorder directives
  uselistorder i32 %v0_25ea6, { 1, 0, 2, 3 }
  uselistorder i8 %v4_25e99, { 0, 2, 1 }
  uselistorder i8 %v1_25e99, { 1, 0 }
  uselistorder i8 %v3_25e96, { 1, 0 }
  uselistorder i1 %v2_25e93, { 1, 0 }
  uselistorder i32 %v0_25e93, { 1, 0, 2 }
  uselistorder i8 %v8_25e8d, { 1, 0 }
  uselistorder i8 %v7_25e8d, { 1, 0 }
  uselistorder i8 %v5_25e8d, { 1, 0, 2 }
  uselistorder i1 %v24_25e86, { 1, 0, 2 }
  uselistorder i8 %v9_25e80, { 1, 0 }
  uselistorder i8 %v8_25e80, { 1, 0 }
}

define i32 @function_25ed7() local_unnamed_addr {
dec_label_pc_25ed7:
  %v0_25ed8 = load i32, i32* @eax, align 4
  ret i32 %v0_25ed8
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_25ed9:
  %edx.global-to-local = alloca i32, align 4
  %v0_25f0f = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_25f0f, 16777216
  %v5_25f2e = sdiv i32 %sext, 16777216
  %v6_25f2e = call i32 @unknown_4d2fd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_25f2e)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25f3f

bb:                                               ; preds = %dec_label_pc_25ed9
  %v1_25f3d = call i32 @function_25f44()
  br label %dec_label_pc_25f3f

dec_label_pc_25f3f:                               ; preds = %bb, %dec_label_pc_25ed9
  %v2_25f3d = phi i32 [ %v1_25f3d, %bb ], [ 0, %dec_label_pc_25ed9 ]
  ret i32 %v2_25f3d
}

declare i32 @__stack_chk_fail.895(i32) local_unnamed_addr

define i32 @function_25f44() local_unnamed_addr {
dec_label_pc_25f44:
  %v0_25f45 = load i32, i32* @eax, align 4
  ret i32 %v0_25f45
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_25f46:
  %edx.global-to-local = alloca i32, align 4
  %v0_25f7c = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_25f7c, 16777216
  %v5_25f9b = sdiv i32 %sext, 16777216
  %v6_25f9b = call i32 @unknown_4d3cf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_25f9b)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25fac

bb:                                               ; preds = %dec_label_pc_25f46
  %v1_25faa = call i32 @function_25fb1()
  br label %dec_label_pc_25fac

dec_label_pc_25fac:                               ; preds = %bb, %dec_label_pc_25f46
  %v2_25faa = phi i32 [ %v1_25faa, %bb ], [ 0, %dec_label_pc_25f46 ]
  ret i32 %v2_25faa
}

define i32 @function_25fb1() local_unnamed_addr {
dec_label_pc_25fb1:
  %v0_25fb2 = load i32, i32* @eax, align 4
  ret i32 %v0_25fb2
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_25fb3:
  ret i32 0
}

define i32 @function_26006(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26006:
  %v2_26006 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26006 = load i32, i32* @eax, align 4
  %v4_26006 = trunc i32 %v3_26006 to i8
  %v5_26006 = add i8 %v4_26006, %v2_26006
  %v21_26006 = inttoptr i32 %v3_26006 to i8*
  store i8 %v5_26006, i8* %v21_26006, align 1
  %v22_26006 = load i32, i32* @eax, align 4
  ret i32 %v22_26006
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14assign_storageEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSH_13Config_vectorISsEEEESaISL_EEEENSF_ISG_INSH_10Value_implISK_EESaISQ_EEEEbxdNS1_5void_ESU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_E18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2600d:
  ret i32 %arg8
}

define i32 @function_26048(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26048:
  %v2_26048 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26048 = load i32, i32* @eax, align 4
  %v4_26048 = trunc i32 %v3_26048 to i8
  %v5_26048 = add i8 %v4_26048, %v2_26048
  %v21_26048 = inttoptr i32 %v3_26048 to i8*
  store i8 %v5_26048, i8* %v21_26048, align 1
  %v0_2604a = load i32, i32* @ecx, align 4
  %v1_2604a = add i32 %v0_2604a, -1070468027
  %v2_2604a = inttoptr i32 %v1_2604a to i8*
  %v3_2604a = load i8, i8* %v2_2604a, align 1
  %v5_2604a = trunc i32 %v0_2604a to i8
  %v6_2604a = add i8 %v3_2604a, %v5_2604a
  %v11_2604a = icmp ult i8 %v6_2604a, %v3_2604a
  store i1 %v11_2604a, i1* @cf, align 1
  store i8 %v6_2604a, i8* %v2_2604a, align 1
  %v3_26068 = load i32, i32* @eax, align 4
  ret i32 %v3_26068
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSsNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26074:
  ret i32 %arg3
}

define i32 @function_2608a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2608a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2608a = load i32, i32* @ebp, align 4
  %v1_2608a = add i32 %v0_2608a, 1
  store i32 %v1_2608a, i32* %ebp.global-to-local, align 4
  %v0_26093 = load i32, i32* @edx, align 8
  %v1_26093 = and i32 %v0_26093, -65281
  %v2_26093 = or i32 %v1_26093, 17664
  store i32 %v2_26093, i32* %edx.global-to-local, align 8
  %v0_26095 = load i32, i32* @eax, align 4
  %v1_26095 = add i32 %v0_26095, 1166792517
  %v2_26095 = inttoptr i32 %v1_26095 to i8*
  %v3_26095 = load i8, i8* %v2_26095, align 1
  %v4_26095 = load i32, i32* @ecx, align 4
  %v5_26095 = trunc i32 %v4_26095 to i8
  %v6_26095 = load i1, i1* @cf, align 1
  %v7_26095 = zext i1 %v6_26095 to i8
  %v8_26095 = sub i8 %v3_26095, %v5_26095
  %v9_26095 = add i8 %v8_26095, %v7_26095
  %v19_26095 = sub i8 %v8_26095, %v7_26095
  %v20_26095 = icmp ult i8 %v3_26095, %v19_26095
  %v21_26095 = icmp ne i8 %v5_26095, -1
  %v22_26095 = or i1 %v21_26095, %v20_26095
  %v23_26095 = icmp ult i8 %v3_26095, %v5_26095
  %v24_26095 = select i1 %v6_26095, i1 %v22_26095, i1 %v23_26095
  store i1 %v24_26095, i1* %cf.global-to-local, align 1
  store i8 %v9_26095, i8* %v2_26095, align 1
  %v0_2609b = load i32, i32* @eax, align 4
  %v1_2609b = trunc i32 %v0_2609b to i8
  %v2_2609b = load i1, i1* %cf.global-to-local, align 1
  %v3_2609b = zext i1 %v2_2609b to i32
  %v4_2609b = add i32 %v0_2609b, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_2609b = add i32 %v4_2609b, %v3_2609b
  %v17_2609b = icmp ult i8 %v1_2609b, -119
  %v18_2609b = or i1 %v2_2609b, %v17_2609b
  store i1 %v18_2609b, i1* %cf.global-to-local, align 1
  %v31_2609b = urem i32 %v5_2609b, 256
  %v33_2609b = and i32 %v0_2609b, -256
  %v34_2609b = or i32 %v31_2609b, %v33_2609b
  store i32 %v34_2609b, i32* %eax.global-to-local, align 4
  %v0_2609d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2609d = add i32 %v0_2609d, 1
  store i32 %v1_2609d, i32* @ebp, align 4
  %v1_2609e = add i32 %v0_2609d, -94
  %v2_2609e = inttoptr i32 %v1_2609e to i8*
  %v3_2609e = load i8, i8* %v2_2609e, align 1
  %v5_2609e = mul i8 %v3_2609e, 2
  store i8 %v5_2609e, i8* %v2_2609e, align 1
  %v16_2609e = icmp slt i8 %v3_2609e, 0
  %v0_260a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_260a1 = trunc i32 %v0_260a1 to i8
  %v3_260a1 = zext i1 %v16_2609e to i8
  %v4_260a1 = add i8 %v1_260a1, %v3_260a1
  %v19_260a1 = icmp ule i8 %v4_260a1, %v1_260a1
  %v21_260a1 = icmp eq i1 %v16_2609e, %v19_260a1
  store i1 %v21_260a1, i1* %cf.global-to-local, align 1
  %v22_260a1 = zext i8 %v4_260a1 to i32
  %v24_260a1 = and i32 %v0_260a1, -256
  %v25_260a1 = or i32 %v22_260a1, %v24_260a1
  store i32 %v25_260a1, i32* %eax.global-to-local, align 4
  %v1_260a3 = inttoptr i32 %v25_260a1 to i8*
  %v2_260a3 = load i8, i8* %v1_260a3, align 1
  %v5_260a3 = add i8 %v2_260a3, %v4_260a1
  store i8 %v5_260a3, i8* %v1_260a3, align 1
  %v0_260a5 = load i32, i32* %eax.global-to-local, align 4
  %v1_260a5 = load i32, i32* @ebp, align 4
  %v2_260a5 = add i32 %v1_260a5, -12
  %v3_260a5 = inttoptr i32 %v2_260a5 to i32*
  store i32 %v0_260a5, i32* %v3_260a5, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_260aa = load i32, i32* %edx.global-to-local, align 8
  %v0_260ae = load i32, i32* @ebp, align 4
  %v1_260ae = add i32 %v0_260ae, -40
  %v2_260ae = inttoptr i32 %v1_260ae to i32*
  %v3_260ae = load i32, i32* %v2_260ae, align 4
  store i32 %v3_260ae, i32* %eax.global-to-local, align 4
  %v1_260b5 = add i32 %v0_260ae, -36
  %v2_260b5 = inttoptr i32 %v1_260b5 to i32*
  %v3_260b5 = load i32, i32* %v2_260b5, align 4
  store i32 %v3_260b5, i32* %eax.global-to-local, align 4
  %v1_260bc = add i32 %v0_260ae, -32
  %v2_260bc = inttoptr i32 %v1_260bc to i32*
  %v3_260bc = load i32, i32* %v2_260bc, align 4
  store i32 %v3_260bc, i32* %eax.global-to-local, align 4
  %v1_260c3 = add i32 %v0_260ae, -28
  %v2_260c3 = inttoptr i32 %v1_260c3 to i32*
  %v3_260c3 = load i32, i32* %v2_260c3, align 4
  store i32 %v3_260c3, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_260aa, 16777216
  %v5_260c9 = sdiv i32 %sext, 16777216
  %v6_260c9 = call i32 @unknown_4d562(i32 %v3_260c3, i32 %v3_260bc, i32 %v3_260b5, i32 %v3_260ae, i32 %v5_260c9)
  store i32 %v6_260c9, i32* %eax.global-to-local, align 4
  %v0_260ce = load i32, i32* @ebp, align 4
  %v1_260ce = add i32 %v0_260ce, -12
  %v2_260ce = inttoptr i32 %v1_260ce to i32*
  %v3_260ce = load i32, i32* %v2_260ce, align 4
  store i32 %v3_260ce, i32* %eax.global-to-local, align 4
  %v1_260d1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_260d1 = xor i32 %v1_260d1, %v3_260ce
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_260d1 = icmp eq i32 %v2_260d1, 0
  store i32 %v2_260d1, i32* @eax, align 4
  br i1 %v3_260d1, label %bb, label %dec_label_pc_260da

bb:                                               ; preds = %dec_label_pc_2608a
  %v1_260d8 = call i32 @function_260df()
  store i32 %v1_260d8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_260da

dec_label_pc_260da:                               ; preds = %bb, %dec_label_pc_2608a
  %v2_260d8 = phi i32 [ %v1_260d8, %bb ], [ %v2_260d1, %dec_label_pc_2608a ]
  ret i32 %v2_260d8

; uselistorder directives
  uselistorder i32 %v0_260ae, { 1, 0, 2, 3 }
  uselistorder i8 %v4_260a1, { 0, 2, 1 }
  uselistorder i8 %v1_260a1, { 1, 0 }
  uselistorder i8 %v3_2609e, { 1, 0 }
  uselistorder i1 %v2_2609b, { 1, 0 }
  uselistorder i32 %v0_2609b, { 1, 0, 2 }
  uselistorder i8 %v5_26095, { 1, 0, 2 }
}

define i32 @function_260df() local_unnamed_addr {
dec_label_pc_260df:
  %v0_260e0 = load i32, i32* @eax, align 4
  ret i32 %v0_260e0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSD_NSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_260e1:
  %edx.global-to-local = alloca i32, align 4
  %v0_26117 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_26117, 16777216
  %v5_26136 = sdiv i32 %sext, 16777216
  %v6_26136 = call i32 @unknown_4d634(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_26136)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26147

bb:                                               ; preds = %dec_label_pc_260e1
  %v1_26145 = call i32 @function_2614c()
  br label %dec_label_pc_26147

dec_label_pc_26147:                               ; preds = %bb, %dec_label_pc_260e1
  %v2_26145 = phi i32 [ %v1_26145, %bb ], [ 0, %dec_label_pc_260e1 ]
  ret i32 %v2_26145
}

define i32 @function_2614c() local_unnamed_addr {
dec_label_pc_2614c:
  %v0_2614d = load i32, i32* @eax, align 4
  ret i32 %v0_2614d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSI_NSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2614e:
  %edx.global-to-local = alloca i32, align 4
  %v0_26184 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_26184, 16777216
  %v5_261a3 = sdiv i32 %sext, 16777216
  %v6_261a3 = call i32 @unknown_4d706(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_261a3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_261b4

bb:                                               ; preds = %dec_label_pc_2614e
  %v1_261b2 = call i32 @function_261b9()
  br label %dec_label_pc_261b4

dec_label_pc_261b4:                               ; preds = %bb, %dec_label_pc_2614e
  %v2_261b2 = phi i32 [ %v1_261b2, %bb ], [ 0, %dec_label_pc_2614e ]
  ret i32 %v2_261b2
}

define i32 @function_261b9() local_unnamed_addr {
dec_label_pc_261b9:
  %v0_261ba = load i32, i32* @eax, align 4
  ret i32 %v0_261ba
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvbNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_261bb:
  %edx.global-to-local = alloca i32, align 4
  %v0_261f1 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_261f1, 16777216
  %v5_26210 = sdiv i32 %sext, 16777216
  %v6_26210 = call i32 @unknown_4d7d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_26210)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26221

bb:                                               ; preds = %dec_label_pc_261bb
  %v1_2621f = call i32 @function_26226()
  br label %dec_label_pc_26221

dec_label_pc_26221:                               ; preds = %bb, %dec_label_pc_261bb
  %v2_2621f = phi i32 [ %v1_2621f, %bb ], [ 0, %dec_label_pc_261bb ]
  ret i32 %v2_2621f
}

define i32 @function_26226() local_unnamed_addr {
dec_label_pc_26226:
  %v0_26227 = load i32, i32* @eax, align 4
  ret i32 %v0_26227
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvxNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_26228:
  ret i32 %arg3
}

define i32 @function_2626c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2626c:
  %v0_2626c = load i32, i32* @eax, align 4
  %v0_26270 = load i32, i32* @ebp, align 4
  %v1_26270 = add i32 %v0_26270, -32
  %v2_26270 = inttoptr i32 %v1_26270 to i32*
  %v3_26270 = load i32, i32* %v2_26270, align 4
  %v1_26277 = add i32 %v0_26270, -28
  %v2_26277 = inttoptr i32 %v1_26277 to i32*
  %v3_26277 = load i32, i32* %v2_26277, align 4
  %v3_2627d = call i32 @unknown_4d8aa(i32 %v3_26277, i32 %v3_26270, i32 %v0_2626c)
  %v0_26282 = load i32, i32* @ebp, align 4
  %v1_26282 = add i32 %v0_26282, -12
  %v2_26282 = inttoptr i32 %v1_26282 to i32*
  %v3_26282 = load i32, i32* %v2_26282, align 4
  %v1_26285 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26285 = xor i32 %v1_26285, %v3_26282
  %v3_26285 = icmp eq i32 %v2_26285, 0
  store i32 %v2_26285, i32* @eax, align 4
  br i1 %v3_26285, label %bb, label %dec_label_pc_2628e

bb:                                               ; preds = %dec_label_pc_2626c
  %v1_2628c = call i32 @function_26293()
  br label %dec_label_pc_2628e

dec_label_pc_2628e:                               ; preds = %bb, %dec_label_pc_2626c
  %v2_2628c = phi i32 [ %v1_2628c, %bb ], [ %v2_26285, %dec_label_pc_2626c ]
  ret i32 %v2_2628c
}

define i32 @function_26293() local_unnamed_addr {
dec_label_pc_26293:
  %v0_26294 = load i32, i32* @eax, align 4
  ret i32 %v0_26294
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvdNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_26295:
  %edx.global-to-local = alloca i32, align 4
  %v0_262cb = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_262cb, 16777216
  %v5_262ea = sdiv i32 %sext, 16777216
  %v6_262ea = call i32 @unknown_4d97c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_262ea)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_262fb

bb:                                               ; preds = %dec_label_pc_26295
  %v1_262f9 = call i32 @function_26300()
  br label %dec_label_pc_262fb

dec_label_pc_262fb:                               ; preds = %bb, %dec_label_pc_26295
  %v2_262f9 = phi i32 [ %v1_262f9, %bb ], [ 0, %dec_label_pc_26295 ]
  ret i32 %v2_262f9
}

define i32 @function_26300() local_unnamed_addr {
dec_label_pc_26300:
  %v0_26301 = load i32, i32* @eax, align 4
  ret i32 %v0_26301
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_26302:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdNS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E8assignerEPKvNST_18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2635c:
  ret i32 %arg2
}

define i32 @function_2636b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2636b:
  %v0_2636b = load i32, i32* @eax, align 4
  %v1_2636b = load i32, i32* @ebp, align 4
  %v2_2636b = add i32 %v1_2636b, -32
  %v3_2636b = inttoptr i32 %v2_2636b to i32*
  store i32 %v0_2636b, i32* %v3_2636b, align 4
  %v0_2636e = load i32, i32* @ebp, align 4
  %v1_2636e = add i32 %v0_2636e, 16
  %v2_2636e = inttoptr i32 %v1_2636e to i32*
  %v3_2636e = load i32, i32* %v2_2636e, align 4
  %v2_26371 = add i32 %v0_2636e, -36
  %v3_26371 = inttoptr i32 %v2_26371 to i32*
  store i32 %v3_2636e, i32* %v3_26371, align 4
  %v0_26374 = load i32, i32* @ebp, align 4
  %v1_26374 = add i32 %v0_26374, 20
  %v2_26374 = inttoptr i32 %v1_26374 to i32*
  %v3_26374 = load i32, i32* %v2_26374, align 4
  %v2_26377 = add i32 %v0_26374, -40
  %v3_26377 = inttoptr i32 %v2_26377 to i32*
  store i32 %v3_26374, i32* %v3_26377, align 4
  %v0_2637a = load i32, i32* @ebp, align 4
  %v1_2637a = add i32 %v0_2637a, 24
  %v2_2637a = inttoptr i32 %v1_2637a to i8*
  %v3_2637a = load i8, i8* %v2_2637a, align 1
  %v3_2637e = add i32 %v0_2637a, -41
  %v4_2637e = inttoptr i32 %v3_2637e to i8*
  store i8 %v3_2637a, i8* %v4_2637e, align 1
  %v0_26381 = load i32, i32* @ebp, align 4
  %v1_26381 = add i32 %v0_26381, 28
  %v2_26381 = inttoptr i32 %v1_26381 to i8*
  %v3_26381 = load i8, i8* %v2_26381, align 1
  %v3_26385 = add i32 %v0_26381, -42
  %v4_26385 = inttoptr i32 %v3_26385 to i8*
  store i8 %v3_26381, i8* %v4_26385, align 1
  %v0_26388 = load i32, i32* @ebp, align 4
  %v1_26388 = add i32 %v0_26388, 32
  %v2_26388 = inttoptr i32 %v1_26388 to i32*
  %v3_26388 = load i32, i32* %v2_26388, align 4
  %v2_2638b = add i32 %v0_26388, -48
  %v3_2638b = inttoptr i32 %v2_2638b to i32*
  store i32 %v3_26388, i32* %v3_2638b, align 4
  %v0_2638e = load i32, i32* @ebp, align 4
  %v1_2638e = add i32 %v0_2638e, 36
  %v2_2638e = inttoptr i32 %v1_2638e to i32*
  %v3_2638e = load i32, i32* %v2_2638e, align 4
  %v2_26391 = add i32 %v0_2638e, -52
  %v3_26391 = inttoptr i32 %v2_26391 to i32*
  store i32 %v3_2638e, i32* %v3_26391, align 4
  %v0_26394 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2639a = load i32, i32* @ebp, align 4
  %v2_2639a = add i32 %v1_2639a, -12
  %v3_2639a = inttoptr i32 %v2_2639a to i32*
  store i32 %v0_26394, i32* %v3_2639a, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 32, { 16, 5, 15, 19, 20, 6, 8, 9, 10, 4, 11, 12, 13, 14, 0, 1, 7, 21, 2, 3, 17, 18 }
  uselistorder i32 -42, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEEC1ERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_263c4:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_263ed

bb:                                               ; preds = %dec_label_pc_263c4
  %v3_263eb = call i32 @function_263f2(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_263ed

dec_label_pc_263ed:                               ; preds = %bb, %dec_label_pc_263c4
  %v4_263eb = phi i32 [ %v3_263eb, %bb ], [ 0, %dec_label_pc_263c4 ]
  ret i32 %v4_263eb
}

define i32 @function_263f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_263f2:
  %v0_263f3 = load i32, i32* @eax, align 4
  ret i32 %v0_263f3
}

define i32 @_ZN9__gnu_cxxneIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_263f4:
  %v1_26418 = call i32 @unknown_4db40(i32 %arg1)
  %v1_2641d = inttoptr i32 %v1_26418 to i32*
  %v2_2641d = load i32, i32* %v1_2641d, align 4
  %v1_26425 = call i32 @unknown_4db40(i32 %arg2)
  %v1_2642a = inttoptr i32 %v1_26425 to i32*
  %v2_2642a = load i32, i32* %v1_2642a, align 4
  %v12_2642c = icmp eq i32 %v2_2641d, %v2_2642a
  %v1_2642e = icmp eq i1 %v12_2642c, false
  %v2_2642e = zext i1 %v1_2642e to i32
  %v4_2642e = and i32 %v2_2642a, -256
  %v5_2642e = or i32 %v2_2642e, %v4_2642e
  store i32 %v5_2642e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2643d

bb:                                               ; preds = %dec_label_pc_263f4
  %v1_2643b = call i32 @function_26442()
  br label %dec_label_pc_2643d

dec_label_pc_2643d:                               ; preds = %bb, %dec_label_pc_263f4
  %v2_2643b = phi i32 [ %v1_2643b, %bb ], [ %v5_2642e, %dec_label_pc_263f4 ]
  ret i32 %v2_2643b

; uselistorder directives
  uselistorder i32 %v2_2642a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4db40, { 1, 0 }
}

define i32 @function_26442() local_unnamed_addr {
dec_label_pc_26442:
  %v0_26447 = load i32, i32* @eax, align 4
  ret i32 %v0_26447
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_26448:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_26462 = load i32, i32* %arg1, align 4
  %v1_26464 = add i32 %v2_26462, 20
  store i32 %v1_26464, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2647b

bb:                                               ; preds = %dec_label_pc_26448
  %v2_26479 = call i32 @function_26480(i32 %tmp100)
  br label %dec_label_pc_2647b

dec_label_pc_2647b:                               ; preds = %bb, %dec_label_pc_26448
  %v3_26479 = phi i32 [ %v2_26479, %bb ], [ %tmp100, %dec_label_pc_26448 ]
  ret i32 %v3_26479
}

define i32 @function_26480(i32 %arg1) local_unnamed_addr {
dec_label_pc_26480:
  %v0_26481 = load i32, i32* @eax, align 4
  ret i32 %v0_26481
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_26482:
  %v2_2649c = load i32, i32* %arg1, align 4
  store i32 %v2_2649c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_264aa

bb:                                               ; preds = %dec_label_pc_26482
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_264a8 = call i32 @function_264af(i32 %tmp100)
  br label %dec_label_pc_264aa

dec_label_pc_264aa:                               ; preds = %bb, %dec_label_pc_26482
  %v3_264a8 = phi i32 [ %v2_264a8, %bb ], [ %v2_2649c, %dec_label_pc_26482 ]
  ret i32 %v3_264a8

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_264af(i32 %arg1) local_unnamed_addr {
dec_label_pc_264af:
  %v0_264b0 = load i32, i32* @eax, align 4
  ret i32 %v0_264b0
}

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_264b2:
  %v1_264cf = call i32 @unknown_4dc2c(i32 %arg1)
  ret i32 %v1_264cf
}

define i32 @function_264d6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_264d6:
  %v0_264d7 = load i32, i32* @edx, align 8
  %v1_264d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_264d7 = icmp eq i32 %v1_264d7, %v0_264d7
  br i1 %v3_264d7, label %bb, label %dec_label_pc_264d6.dec_label_pc_264e0_crit_edge

dec_label_pc_264d6.dec_label_pc_264e0_crit_edge:  ; preds = %dec_label_pc_264d6
  %v2_264de.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_264e0

bb:                                               ; preds = %dec_label_pc_264d6
  %v1_264de = call i32 @function_264e5()
  br label %dec_label_pc_264e0

dec_label_pc_264e0:                               ; preds = %dec_label_pc_264d6.dec_label_pc_264e0_crit_edge, %bb
  %v2_264de = phi i32 [ %v2_264de.pre, %dec_label_pc_264d6.dec_label_pc_264e0_crit_edge ], [ %v1_264de, %bb ]
  ret i32 %v2_264de

; uselistorder directives
  uselistorder label %dec_label_pc_264e0, { 1, 0 }
}

define i32 @function_264e5() local_unnamed_addr {
dec_label_pc_264e5:
  %v0_264e6 = load i32, i32* @eax, align 4
  ret i32 %v0_264e6
}

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_264e8:
  ret i32 %arg1
}

define i32 @function_264f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_264f4:
  %v0_264f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_264fa = load i32, i32* @ebp, align 4
  %v2_264fa = add i32 %v1_264fa, -12
  %v3_264fa = inttoptr i32 %v2_264fa to i32*
  store i32 %v0_264f4, i32* %v3_264fa, align 4
  %v0_264ff = load i32, i32* @ebp, align 4
  %v1_264ff = add i32 %v0_264ff, -28
  %v2_264ff = inttoptr i32 %v1_264ff to i32*
  %v3_264ff = load i32, i32* %v2_264ff, align 4
  %v1_26505 = call i32 @unknown_4dc92(i32 %v3_264ff)
  store i32 %v1_26505, i32* @eax, align 4
  %v0_2650a = load i32, i32* @ebp, align 4
  %v1_2650a = add i32 %v0_2650a, -12
  %v2_2650a = inttoptr i32 %v1_2650a to i32*
  %v3_2650a = load i32, i32* %v2_2650a, align 4
  %v1_2650d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2650d = xor i32 %v1_2650d, %v3_2650a
  store i1 false, i1* @cf, align 1
  %v3_2650d = icmp eq i32 %v2_2650d, 0
  store i32 %v2_2650d, i32* @edx, align 8
  br i1 %v3_2650d, label %bb, label %dec_label_pc_26516

bb:                                               ; preds = %dec_label_pc_264f4
  %v1_26514 = call i32 @function_2651b()
  br label %dec_label_pc_26516

dec_label_pc_26516:                               ; preds = %bb, %dec_label_pc_264f4
  %v3_26514 = phi i32 [ %v1_26514, %bb ], [ %v1_26505, %dec_label_pc_264f4 ]
  ret i32 %v3_26514
}

define i32 @function_2651b() local_unnamed_addr {
dec_label_pc_2651b:
  %v0_2651c = load i32, i32* @eax, align 4
  ret i32 %v0_2651c
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvSsEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2651d:
  ret i32 %arg3
}

define i32 @function_26536(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26536:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_26536 = load i32, i32* @ebp, align 4
  %v0_26537 = load i32, i32* @eax, align 4
  %v1_26537 = trunc i32 %v0_26537 to i8
  %v2_26537 = load i1, i1* @cf, align 1
  %v3_26537 = zext i1 %v2_26537 to i8
  %v4_26537 = add i8 %v1_26537, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_26537 = add i8 %v4_26537, %v3_26537
  %v20_26537 = add i8 %v1_26537, -119
  %v21_26537 = add i8 %v20_26537, %v3_26537
  %v22_26537 = icmp ule i8 %v21_26537, %v1_26537
  %v23_26537 = icmp ugt i8 %v1_26537, 118
  %v24_26537 = select i1 %v2_26537, i1 %v22_26537, i1 %v23_26537
  store i1 %v24_26537, i1* %cf.global-to-local, align 1
  %v25_26537 = zext i8 %v5_26537 to i32
  %v27_26537 = and i32 %v0_26537, -256
  %v28_26537 = or i32 %v25_26537, %v27_26537
  store i32 %v28_26537, i32* %eax.global-to-local, align 4
  %v1_26539 = add i32 %v0_26536, 2
  store i32 %v1_26539, i32* @ebp, align 4
  %v1_2653e = add i32 %v28_26537, -1587161275
  %v2_2653e = inttoptr i32 %v1_2653e to i8*
  %v3_2653e = load i8, i8* %v2_2653e, align 1
  %v4_2653e = load i32, i32* @ecx, align 4
  %v5_2653e = trunc i32 %v4_2653e to i8
  %v7_2653e = zext i1 %v24_26537 to i8
  %v8_2653e = sub i8 %v3_2653e, %v5_2653e
  %v9_2653e = add i8 %v8_2653e, %v7_2653e
  %v19_2653e = sub i8 %v8_2653e, %v7_2653e
  %v20_2653e = icmp ult i8 %v3_2653e, %v19_2653e
  %v21_2653e = icmp ne i8 %v5_2653e, -1
  %v22_2653e = or i1 %v21_2653e, %v20_2653e
  %v23_2653e = icmp ult i8 %v3_2653e, %v5_2653e
  %v24_2653e = select i1 %v24_26537, i1 %v22_2653e, i1 %v23_2653e
  store i1 %v24_2653e, i1* %cf.global-to-local, align 1
  store i8 %v9_2653e, i8* %v2_2653e, align 1
  %v0_26544 = load i32, i32* %eax.global-to-local, align 4
  %v1_26544 = trunc i32 %v0_26544 to i8
  %v2_26544 = load i1, i1* %cf.global-to-local, align 1
  %v3_26544 = zext i1 %v2_26544 to i8
  %v4_26544 = add i8 %v3_26544, %v1_26544
  %v19_26544 = icmp ule i8 %v4_26544, %v1_26544
  %v21_26544 = icmp eq i1 %v2_26544, %v19_26544
  store i1 %v21_26544, i1* %cf.global-to-local, align 1
  %v22_26544 = zext i8 %v4_26544 to i32
  %v24_26544 = and i32 %v0_26544, -256
  %v25_26544 = or i32 %v22_26544, %v24_26544
  store i32 %v25_26544, i32* %eax.global-to-local, align 4
  %v1_26546 = inttoptr i32 %v25_26544 to i8*
  %v2_26546 = load i8, i8* %v1_26546, align 1
  %v5_26546 = add i8 %v2_26546, %v4_26544
  store i8 %v5_26546, i8* %v1_26546, align 1
  %v0_26548 = load i32, i32* %eax.global-to-local, align 4
  %v1_26548 = load i32, i32* @ebp, align 4
  %v2_26548 = add i32 %v1_26548, -12
  %v3_26548 = inttoptr i32 %v2_26548 to i32*
  store i32 %v0_26548, i32* %v3_26548, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2654d = load i32, i32* @ebp, align 4
  %v1_2654d = add i32 %v0_2654d, -36
  %v2_2654d = inttoptr i32 %v1_2654d to i32*
  %v3_2654d = load i32, i32* %v2_2654d, align 4
  store i32 %v3_2654d, i32* %eax.global-to-local, align 4
  %v1_26553 = call i32 @unknown_494de(i32 %v3_2654d)
  store i32 %v1_26553, i32* %eax.global-to-local, align 4
  %v0_26564 = load i32, i32* @ebp, align 4
  %v1_26564 = add i32 %v0_26564, -32
  %v2_26564 = inttoptr i32 %v1_26564 to i32*
  %v3_26564 = load i32, i32* %v2_26564, align 4
  store i32 %v3_26564, i32* %eax.global-to-local, align 4
  %v3_2656a = call i32 @unknown_4dcf7(i32 %v3_26564, i32 %v1_26553, i32 1)
  store i32 %v3_2656a, i32* @eax, align 4
  %v0_2656f = load i32, i32* @ebp, align 4
  %v1_2656f = add i32 %v0_2656f, -12
  %v2_2656f = inttoptr i32 %v1_2656f to i32*
  %v3_2656f = load i32, i32* %v2_2656f, align 4
  %v1_26572 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_26572 = icmp eq i32 %v1_26572, %v3_2656f
  br i1 %v3_26572, label %bb, label %dec_label_pc_2657b

bb:                                               ; preds = %dec_label_pc_26536
  %v1_26579 = call i32 @function_26580()
  store i32 %v1_26579, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2657b

dec_label_pc_2657b:                               ; preds = %bb, %dec_label_pc_26536
  %v2_26579 = phi i32 [ %v1_26579, %bb ], [ %v3_2656a, %dec_label_pc_26536 ]
  ret i32 %v2_26579

; uselistorder directives
  uselistorder i8 %v4_26544, { 0, 2, 1 }
  uselistorder i8 %v1_26544, { 1, 0 }
  uselistorder i8 %v8_2653e, { 1, 0 }
  uselistorder i8 %v7_2653e, { 1, 0 }
  uselistorder i8 %v5_2653e, { 1, 0, 2 }
  uselistorder i1 %v24_26537, { 1, 0, 2 }
}

define i32 @function_26580() local_unnamed_addr {
dec_label_pc_26580:
  %v0_26581 = load i32, i32* @eax, align 4
  ret i32 %v0_26581
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_26582:
  %v4_265a0 = zext i8 %arg5 to i32
  ret i32 %v4_265a0
}

define i32 @function_265a5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_265a5:
  %v0_265a5 = load i32, i32* @ebp, align 4
  %v1_265a5 = add i32 %v0_265a5, 1
  store i32 %v1_265a5, i32* @ebp, align 4
  %v0_265a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_265ad = add i32 %v0_265a5, -11
  %v3_265ad = inttoptr i32 %v2_265ad to i32*
  store i32 %v0_265a7, i32* %v3_265ad, align 4
  %v0_265b2 = load i32, i32* @ebp, align 4
  %v1_265b2 = add i32 %v0_265b2, -36
  %v2_265b2 = inttoptr i32 %v1_265b2 to i32*
  %v3_265b2 = load i32, i32* %v2_265b2, align 4
  %v1_265b8 = call i32 @unknown_495f3(i32 %v3_265b2)
  %v0_265c9 = load i32, i32* @ebp, align 4
  %v1_265c9 = add i32 %v0_265c9, -32
  %v2_265c9 = inttoptr i32 %v1_265c9 to i32*
  %v3_265c9 = load i32, i32* %v2_265c9, align 4
  %v3_265cf = call i32 @unknown_4dda6(i32 %v3_265c9, i32 %v1_265b8, i32 1)
  store i32 %v3_265cf, i32* @eax, align 4
  %v0_265d4 = load i32, i32* @ebp, align 4
  %v1_265d4 = add i32 %v0_265d4, -12
  %v2_265d4 = inttoptr i32 %v1_265d4 to i32*
  %v3_265d4 = load i32, i32* %v2_265d4, align 4
  %v1_265d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_265d7 = icmp eq i32 %v1_265d7, %v3_265d4
  br i1 %v3_265d7, label %bb, label %dec_label_pc_265e0

bb:                                               ; preds = %dec_label_pc_265a5
  %v1_265de = call i32 @function_265e5()
  br label %dec_label_pc_265e0

dec_label_pc_265e0:                               ; preds = %bb, %dec_label_pc_265a5
  %v2_265de = phi i32 [ %v1_265de, %bb ], [ %v3_265cf, %dec_label_pc_265a5 ]
  ret i32 %v2_265de
}

define i32 @function_265e5() local_unnamed_addr {
dec_label_pc_265e5:
  %v0_265e6 = load i32, i32* @eax, align 4
  ret i32 %v0_265e6
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_265e7:
  %v1_2661d = call i32 @unknown_49708(i32 %arg3)
  %v3_26634 = call i32 @unknown_4de63(i32 %arg2, i32 %v1_2661d, i32 1)
  store i32 %v3_26634, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26645

bb:                                               ; preds = %dec_label_pc_265e7
  %v1_26643 = call i32 @function_2664a()
  br label %dec_label_pc_26645

dec_label_pc_26645:                               ; preds = %bb, %dec_label_pc_265e7
  %v2_26643 = phi i32 [ %v1_26643, %bb ], [ %v3_26634, %dec_label_pc_265e7 ]
  ret i32 %v2_26643
}

define i32 @function_2664a() local_unnamed_addr {
dec_label_pc_2664a:
  %v0_2664b = load i32, i32* @eax, align 4
  ret i32 %v0_2664b
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvbEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_2664c:
  ret i32 %arg1
}

define i32 @function_26658(i32 %arg1) local_unnamed_addr {
dec_label_pc_26658:
  %v0_26658 = load i32, i32* @ebp, align 4
  %v1_26658 = add i32 %v0_26658, 12
  %v2_26658 = inttoptr i32 %v1_26658 to i32*
  %v3_26658 = load i32, i32* %v2_26658, align 4
  %v2_2665b = add i32 %v0_26658, -32
  %v3_2665b = inttoptr i32 %v2_2665b to i32*
  store i32 %v3_26658, i32* %v3_2665b, align 4
  %v0_2665e = load i32, i32* @ebp, align 4
  %v1_2665e = add i32 %v0_2665e, 16
  %v2_2665e = inttoptr i32 %v1_2665e to i32*
  %v3_2665e = load i32, i32* %v2_2665e, align 4
  %v2_26661 = add i32 %v0_2665e, -36
  %v3_26661 = inttoptr i32 %v2_26661 to i32*
  store i32 %v3_2665e, i32* %v3_26661, align 4
  %v0_26664 = load i32, i32* @ebp, align 4
  %v1_26664 = add i32 %v0_26664, 20
  %v2_26664 = inttoptr i32 %v1_26664 to i32*
  %v3_26664 = load i32, i32* %v2_26664, align 4
  %v2_26667 = add i32 %v0_26664, -40
  %v3_26667 = inttoptr i32 %v2_26667 to i32*
  store i32 %v3_26664, i32* %v3_26667, align 4
  %v0_2666a = load i32, i32* @ebp, align 4
  %v1_2666a = add i32 %v0_2666a, 24
  %v2_2666a = inttoptr i32 %v1_2666a to i8*
  %v3_2666a = load i8, i8* %v2_2666a, align 1
  %v3_2666e = add i32 %v0_2666a, -41
  %v4_2666e = inttoptr i32 %v3_2666e to i8*
  store i8 %v3_2666a, i8* %v4_2666e, align 1
  %v0_26671 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_26677 = load i32, i32* @ebp, align 4
  %v2_26677 = add i32 %v1_26677, -12
  %v3_26677 = inttoptr i32 %v2_26677 to i32*
  store i32 %v0_26671, i32* %v3_26677, align 4
  %v0_2667c = load i32, i32* @ebp, align 4
  %v1_2667c = add i32 %v0_2667c, -36
  %v2_2667c = inttoptr i32 %v1_2667c to i32*
  %v3_2667c = load i32, i32* %v2_2667c, align 4
  %v1_26682 = call i32 @unknown_4981d(i32 %v3_2667c)
  %v0_26693 = load i32, i32* @ebp, align 4
  %v1_26693 = add i32 %v0_26693, -32
  %v2_26693 = inttoptr i32 %v1_26693 to i32*
  %v3_26693 = load i32, i32* %v2_26693, align 4
  %v3_26699 = call i32 @unknown_4df20(i32 %v3_26693, i32 %v1_26682, i32 1)
  store i32 %v3_26699, i32* @eax, align 4
  %v0_2669e = load i32, i32* @ebp, align 4
  %v1_2669e = add i32 %v0_2669e, -12
  %v2_2669e = inttoptr i32 %v1_2669e to i32*
  %v3_2669e = load i32, i32* %v2_2669e, align 4
  %v1_266a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_266a1 = icmp eq i32 %v1_266a1, %v3_2669e
  br i1 %v3_266a1, label %bb, label %dec_label_pc_266aa

bb:                                               ; preds = %dec_label_pc_26658
  %v1_266a8 = call i32 @function_266af()
  br label %dec_label_pc_266aa

dec_label_pc_266aa:                               ; preds = %bb, %dec_label_pc_26658
  %v2_266a8 = phi i32 [ %v1_266a8, %bb ], [ %v3_26699, %dec_label_pc_26658 ]
  ret i32 %v2_266a8
}

define i32 @function_266af() local_unnamed_addr {
dec_label_pc_266af:
  %v0_266b0 = load i32, i32* @eax, align 4
  ret i32 %v0_266b0
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvxEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_266b1:
  %v1_266e7 = call i32 @unknown_49906(i32 %arg3)
  %v3_266fe = call i32 @unknown_4dfcf(i32 %arg2, i32 %v1_266e7, i32 1)
  store i32 %v3_266fe, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2670f

bb:                                               ; preds = %dec_label_pc_266b1
  %v1_2670d = call i32 @function_26714()
  br label %dec_label_pc_2670f

dec_label_pc_2670f:                               ; preds = %bb, %dec_label_pc_266b1
  %v2_2670d = phi i32 [ %v1_2670d, %bb ], [ %v3_266fe, %dec_label_pc_266b1 ]
  ret i32 %v2_2670d
}

define i32 @function_26714() local_unnamed_addr {
dec_label_pc_26714:
  %v0_26715 = load i32, i32* @eax, align 4
  ret i32 %v0_26715
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvdEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_26716:
  %v0_2673b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2673b
}

define i32 @function_26743(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26743:
  %v0_26746 = load i32, i32* @ebp, align 4
  %v1_26746 = add i32 %v0_26746, -36
  %v2_26746 = inttoptr i32 %v1_26746 to i32*
  %v3_26746 = load i32, i32* %v2_26746, align 4
  %v1_2674c = call i32 @unknown_499f6(i32 %v3_26746)
  %v0_2675d = load i32, i32* @ebp, align 4
  %v1_2675d = add i32 %v0_2675d, -32
  %v2_2675d = inttoptr i32 %v1_2675d to i32*
  %v3_2675d = load i32, i32* %v2_2675d, align 4
  %v3_26763 = call i32 @unknown_4e07e(i32 %v3_2675d, i32 %v1_2674c, i32 1)
  store i32 %v3_26763, i32* @eax, align 4
  %v0_26768 = load i32, i32* @ebp, align 4
  %v1_26768 = add i32 %v0_26768, -12
  %v2_26768 = inttoptr i32 %v1_26768 to i32*
  %v3_26768 = load i32, i32* %v2_26768, align 4
  %v1_2676b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2676b = icmp eq i32 %v1_2676b, %v3_26768
  br i1 %v3_2676b, label %bb, label %dec_label_pc_26774

bb:                                               ; preds = %dec_label_pc_26743
  %v1_26772 = call i32 @function_26779()
  br label %dec_label_pc_26774

dec_label_pc_26774:                               ; preds = %bb, %dec_label_pc_26743
  %v2_26772 = phi i32 [ %v1_26772, %bb ], [ %v3_26763, %dec_label_pc_26743 ]
  ret i32 %v2_26772
}

define i32 @function_26779() local_unnamed_addr {
dec_label_pc_26779:
  %v0_2677a = load i32, i32* @eax, align 4
  ret i32 %v0_2677a
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitIKSsEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2677c:
  %v2_267a2 = load i32, i32* %arg1, align 4
  %v2_267ae = call i32 @unknown_4e12e(i32 %v2_267a2, i32 %arg2)
  store i32 %v2_267ae, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_267bf

bb:                                               ; preds = %dec_label_pc_2677c
  %v1_267bd = call i32 @function_267c4()
  br label %dec_label_pc_267bf

dec_label_pc_267bf:                               ; preds = %bb, %dec_label_pc_2677c
  %v2_267bd = phi i32 [ %v1_267bd, %bb ], [ %v2_267ae, %dec_label_pc_2677c ]
  ret i32 %v2_267bd
}

define i32 @function_267c4() local_unnamed_addr {
dec_label_pc_267c4:
  %v0_267c5 = load i32, i32* @eax, align 4
  ret i32 %v0_267c5
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_267c6:
  %v1_267ef = call i32 @unknown_4cc78(i32 %arg2)
  %v3_26806 = call i32 @unknown_4e1ae(i32 %arg1, i32 %v1_267ef, i32 1)
  store i32 %v3_26806, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26817

bb:                                               ; preds = %dec_label_pc_267c6
  %v1_26815 = call i32 @function_2681c()
  br label %dec_label_pc_26817

dec_label_pc_26817:                               ; preds = %bb, %dec_label_pc_267c6
  %v2_26815 = phi i32 [ %v1_26815, %bb ], [ %v3_26806, %dec_label_pc_267c6 ]
  ret i32 %v2_26815
}

define i32 @function_2681c() local_unnamed_addr {
dec_label_pc_2681c:
  %v0_2681d = load i32, i32* @eax, align 4
  ret i32 %v0_2681d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitISt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2681e:
  %v1_26847 = call i32 @unknown_4cd06(i32 %arg2)
  %v3_2685e = call i32 @unknown_4e250(i32 %arg1, i32 %v1_26847, i32 1)
  store i32 %v3_2685e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2686f

bb:                                               ; preds = %dec_label_pc_2681e
  %v1_2686d = call i32 @function_26874()
  br label %dec_label_pc_2686f

dec_label_pc_2686f:                               ; preds = %bb, %dec_label_pc_2681e
  %v2_2686d = phi i32 [ %v1_2686d, %bb ], [ %v3_2685e, %dec_label_pc_2681e ]
  ret i32 %v2_2686d
}

define i32 @function_26874() local_unnamed_addr {
dec_label_pc_26874:
  %v0_26875 = load i32, i32* @eax, align 4
  ret i32 %v0_26875
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitIKbEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26876:
  %v2_2689c = load i32, i32* %arg1, align 4
  %v2_268a8 = call i32 @unknown_4e2f2(i32 %v2_2689c, i32 %arg2)
  store i32 %v2_268a8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_268b9

bb:                                               ; preds = %dec_label_pc_26876
  %v1_268b7 = call i32 @function_268be()
  br label %dec_label_pc_268b9

dec_label_pc_268b9:                               ; preds = %bb, %dec_label_pc_26876
  %v2_268b7 = phi i32 [ %v1_268b7, %bb ], [ %v2_268a8, %dec_label_pc_26876 ]
  ret i32 %v2_268b7
}

define i32 @function_268be() local_unnamed_addr {
dec_label_pc_268be:
  %v0_268bf = load i32, i32* @eax, align 4
  ret i32 %v0_268bf
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitIKxEEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_268c0:
  ret i32 %arg1
}

define i32 @function_268e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_268e6:
  %v0_268e8 = load i32, i32* @ebp, align 4
  %v1_268e8 = add i32 %v0_268e8, -32
  %v2_268e8 = inttoptr i32 %v1_268e8 to i32*
  %v3_268e8 = load i32, i32* %v2_268e8, align 4
  %v0_268ef = load i32, i32* @eax, align 4
  %v2_268f2 = call i32 @unknown_4e372(i32 %v0_268ef, i32 %v3_268e8)
  store i32 %v2_268f2, i32* @eax, align 4
  %v0_268f7 = load i32, i32* @ebp, align 4
  %v1_268f7 = add i32 %v0_268f7, -12
  %v2_268f7 = inttoptr i32 %v1_268f7 to i32*
  %v3_268f7 = load i32, i32* %v2_268f7, align 4
  %v1_268fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_268fa = icmp eq i32 %v1_268fa, %v3_268f7
  br i1 %v3_268fa, label %bb, label %dec_label_pc_26903

bb:                                               ; preds = %dec_label_pc_268e6
  %v1_26901 = call i32 @function_26908()
  br label %dec_label_pc_26903

dec_label_pc_26903:                               ; preds = %bb, %dec_label_pc_268e6
  %v2_26901 = phi i32 [ %v1_26901, %bb ], [ %v2_268f2, %dec_label_pc_268e6 ]
  ret i32 %v2_26901
}

define i32 @function_26908() local_unnamed_addr {
dec_label_pc_26908:
  %v0_26909 = load i32, i32* @eax, align 4
  ret i32 %v0_26909
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitIS4_EEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2690a:
  ret i32 0
}

define i32 @function_26951() local_unnamed_addr {
dec_label_pc_26951:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26951 = load i32, i32* %ecx.global-to-local, align 4
  %v1_26951 = add i32 %v0_26951, -1
  store i32 %v1_26951, i32* %ecx.global-to-local, align 4
  %v0_26953 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26953
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26954:
  %v0_26966 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_26966
}

define i32 @function_26970(i32 %arg1) local_unnamed_addr {
dec_label_pc_26970:
  %v0_26970 = load i32, i32* @ebx, align 4
  %v1_26970 = add i32 %v0_26970, 76144709
  %v2_26970 = inttoptr i32 %v1_26970 to i8*
  %v3_26970 = load i8, i8* %v2_26970, align 1
  %v4_26970 = udiv i8 %v3_26970, 16
  %v5_26970 = mul i8 %v3_26970, 16
  %v6_26970 = or i8 %v4_26970, %v5_26970
  store i8 %v6_26970, i8* %v2_26970, align 1
  %v0_26977 = call i32 @unknown_4e477()
  store i32 %v0_26977, i32* @eax, align 4
  %v0_2697c = load i32, i32* @ebp, align 4
  %v1_2697c = add i32 %v0_2697c, -12
  %v2_2697c = inttoptr i32 %v1_2697c to i32*
  %v3_2697c = load i32, i32* %v2_2697c, align 4
  %v1_2697f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2697f = icmp eq i32 %v1_2697f, %v3_2697c
  br i1 %v3_2697f, label %bb, label %dec_label_pc_26988

bb:                                               ; preds = %dec_label_pc_26970
  %v1_26986 = call i32 @function_2698d()
  br label %dec_label_pc_26988

dec_label_pc_26988:                               ; preds = %bb, %dec_label_pc_26970
  %v2_26986 = phi i32 [ %v1_26986, %bb ], [ %v0_26977, %dec_label_pc_26970 ]
  ret i32 %v2_26986
}

define i32 @function_2698d() local_unnamed_addr {
dec_label_pc_2698d:
  %v0_2698e = load i32, i32* @eax, align 4
  ret i32 %v0_2698e
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKSt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_26990:
  ret i32 %arg1
}

define i32 @function_2699d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2699d:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2699d = load i32, i32* @ebp, align 4
  %v0_2699e = load i32, i32* @eax, align 4
  %v2_2699e = or i32 %v0_2699e, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2699e, i32* %eax.global-to-local, align 4
  %v0_269a1 = load i32, i32* @ecx, align 4
  %v1_269a1 = add i32 %v0_269a1, 255
  %v1_269a3 = add i32 %v0_2699d, 3
  store i32 %v1_269a3, i32* @ebp, align 4
  %v1_269a4 = add i32 %v0_269a1, -1587159996
  %v2_269a4 = inttoptr i32 %v1_269a4 to i8*
  %v3_269a4 = load i8, i8* %v2_269a4, align 1
  %v5_269a4 = trunc i32 %v1_269a1 to i8
  %v8_269a4 = add i8 %v3_269a4, %v5_269a4
  %v28_269a4 = icmp ult i8 %v8_269a4, %v3_269a4
  store i1 %v28_269a4, i1* %cf.global-to-local, align 1
  store i8 %v8_269a4, i8* %v2_269a4, align 1
  %v0_269aa = load i32, i32* %eax.global-to-local, align 4
  %v1_269aa = trunc i32 %v0_269aa to i8
  %v2_269aa = load i1, i1* %cf.global-to-local, align 1
  %v3_269aa = zext i1 %v2_269aa to i8
  %v4_269aa = add i8 %v3_269aa, %v1_269aa
  %v19_269aa = icmp ule i8 %v4_269aa, %v1_269aa
  %v21_269aa = icmp eq i1 %v2_269aa, %v19_269aa
  store i1 %v21_269aa, i1* %cf.global-to-local, align 1
  %v22_269aa = zext i8 %v4_269aa to i32
  %v24_269aa = and i32 %v0_269aa, -256
  %v25_269aa = or i32 %v22_269aa, %v24_269aa
  store i32 %v25_269aa, i32* %eax.global-to-local, align 4
  %v1_269ac = inttoptr i32 %v25_269aa to i8*
  %v2_269ac = load i8, i8* %v1_269ac, align 1
  %v5_269ac = add i8 %v2_269ac, %v4_269aa
  store i8 %v5_269ac, i8* %v1_269ac, align 1
  %v0_269ae = load i32, i32* %eax.global-to-local, align 4
  %v1_269ae = load i32, i32* @ebp, align 4
  %v2_269ae = add i32 %v1_269ae, -12
  %v3_269ae = inttoptr i32 %v2_269ae to i32*
  store i32 %v0_269ae, i32* %v3_269ae, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_269b3 = load i32, i32* @ebp, align 4
  %v1_269b3 = add i32 %v0_269b3, -28
  %v2_269b3 = inttoptr i32 %v1_269b3 to i32*
  %v3_269b3 = load i32, i32* %v2_269b3, align 4
  store i32 %v3_269b3, i32* %eax.global-to-local, align 4
  %v1_269b6 = inttoptr i32 %v3_269b3 to i32*
  %v2_269b6 = load i32, i32* %v1_269b6, align 4
  store i32 %v2_269b6, i32* %eax.global-to-local, align 4
  %v1_269b8 = add i32 %v0_269b3, -32
  %v2_269b8 = inttoptr i32 %v1_269b8 to i32*
  %v3_269b8 = load i32, i32* %v2_269b8, align 4
  %v2_269c2 = call i32 @unknown_4e50a(i32 %v2_269b6, i32 %v3_269b8)
  store i32 %v2_269c2, i32* @eax, align 4
  %v0_269c7 = load i32, i32* @ebp, align 4
  %v1_269c7 = add i32 %v0_269c7, -12
  %v2_269c7 = inttoptr i32 %v1_269c7 to i32*
  %v3_269c7 = load i32, i32* %v2_269c7, align 4
  %v1_269ca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_269ca = icmp eq i32 %v1_269ca, %v3_269c7
  br i1 %v3_269ca, label %bb, label %dec_label_pc_269d3

bb:                                               ; preds = %dec_label_pc_2699d
  %v1_269d1 = call i32 @function_269d8()
  store i32 %v1_269d1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_269d3

dec_label_pc_269d3:                               ; preds = %bb, %dec_label_pc_2699d
  %v3_269d1 = phi i32 [ %v1_269d1, %bb ], [ %v2_269c2, %dec_label_pc_2699d ]
  ret i32 %v3_269d1

; uselistorder directives
  uselistorder i8 %v4_269aa, { 0, 2, 1 }
  uselistorder i8 %v1_269aa, { 1, 0 }
  uselistorder i8 %v3_269a4, { 1, 0 }
}

define i32 @function_269d8() local_unnamed_addr {
dec_label_pc_269d8:
  %v0_269d9 = load i32, i32* @eax, align 4
  ret i32 %v0_269d9
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKSt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_269da:
  %v2_26a00 = load i32, i32* %arg1, align 4
  %v2_26a0c = call i32 @unknown_4e58a(i32 %v2_26a00, i32 %arg2)
  store i32 %v2_26a0c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26a1d

bb:                                               ; preds = %dec_label_pc_269da
  %v1_26a1b = call i32 @function_26a22()
  br label %dec_label_pc_26a1d

dec_label_pc_26a1d:                               ; preds = %bb, %dec_label_pc_269da
  %v2_26a1b = phi i32 [ %v1_26a1b, %bb ], [ %v2_26a0c, %dec_label_pc_269da ]
  ret i32 %v2_26a1b
}

define i32 @function_26a22() local_unnamed_addr {
dec_label_pc_26a22:
  %v0_26a23 = load i32, i32* @eax, align 4
  ret i32 %v0_26a23
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIbEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a24:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26a52

bb:                                               ; preds = %dec_label_pc_26a24
  %v3_26a50 = call i32 @function_26a57(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_26a52

dec_label_pc_26a52:                               ; preds = %bb, %dec_label_pc_26a24
  %v4_26a50 = phi i32 [ %v3_26a50, %bb ], [ 0, %dec_label_pc_26a24 ]
  ret i32 %v4_26a50
}

define i32 @function_26a57(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a57:
  %v0_26a58 = load i32, i32* @eax, align 4
  ret i32 %v0_26a58
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIxEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a5a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26a88

bb:                                               ; preds = %dec_label_pc_26a5a
  %v3_26a86 = call i32 @function_26a8d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_26a88

dec_label_pc_26a88:                               ; preds = %bb, %dec_label_pc_26a5a
  %v4_26a86 = phi i32 [ %v3_26a86, %bb ], [ 0, %dec_label_pc_26a5a ]
  ret i32 %v4_26a86
}

define i32 @function_26a8d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a8d:
  %v0_26a8e = load i32, i32* @eax, align 4
  ret i32 %v0_26a8e
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIdEEPS3_RKT_() local_unnamed_addr {
dec_label_pc_26a90:
  %eax.global-to-local = alloca i32, align 4
  %v17_26a93 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_26a93
}

define i32 @function_26a96(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a96:
  %v0_26a96 = load i32, i32* @ebp, align 4
  %v1_26a96 = add i32 %v0_26a96, 8
  %v2_26a96 = inttoptr i32 %v1_26a96 to i32*
  %v3_26a96 = load i32, i32* %v2_26a96, align 4
  %v2_26a99 = add i32 %v0_26a96, -28
  %v3_26a99 = inttoptr i32 %v2_26a99 to i32*
  store i32 %v3_26a96, i32* %v3_26a99, align 4
  %v0_26a9c = load i32, i32* @ebp, align 4
  %v1_26a9c = add i32 %v0_26a9c, 12
  %v2_26a9c = inttoptr i32 %v1_26a9c to i32*
  %v3_26a9c = load i32, i32* %v2_26a9c, align 4
  %v2_26a9f = add i32 %v0_26a9c, -32
  %v3_26a9f = inttoptr i32 %v2_26a9f to i32*
  store i32 %v3_26a9c, i32* %v3_26a9f, align 4
  %v0_26aa2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_26aa8 = load i32, i32* @ebp, align 4
  %v2_26aa8 = add i32 %v1_26aa8, -12
  %v3_26aa8 = inttoptr i32 %v2_26aa8 to i32*
  store i32 %v0_26aa2, i32* %v3_26aa8, align 4
  store i32 0, i32* @eax, align 4
  %v0_26ab2 = load i32, i32* @ebp, align 4
  %v1_26ab2 = add i32 %v0_26ab2, -12
  %v2_26ab2 = inttoptr i32 %v1_26ab2 to i32*
  %v3_26ab2 = load i32, i32* %v2_26ab2, align 4
  %v1_26ab5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26ab5 = icmp eq i32 %v1_26ab5, %v3_26ab2
  br i1 %v3_26ab5, label %bb, label %dec_label_pc_26abe

bb:                                               ; preds = %dec_label_pc_26a96
  %v1_26abc = call i32 @function_26ac3()
  br label %dec_label_pc_26abe

dec_label_pc_26abe:                               ; preds = %bb, %dec_label_pc_26a96
  %v2_26abc = phi i32 [ %v1_26abc, %bb ], [ 0, %dec_label_pc_26a96 ]
  ret i32 %v2_26abc
}

define i32 @function_26ac3() local_unnamed_addr {
dec_label_pc_26ac3:
  %v0_26ac4 = load i32, i32* @eax, align 4
  ret i32 %v0_26ac4
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKSsEEPS4_RT_i(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ac6:
  %v2_26aec = load i32, i32* %arg1, align 4
  %v2_26af8 = call i32 @unknown_4e6ac(i32 %v2_26aec, i32 %arg2)
  store i32 %v2_26af8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26b09

bb:                                               ; preds = %dec_label_pc_26ac6
  %v1_26b07 = call i32 @function_26b0e()
  br label %dec_label_pc_26b09

dec_label_pc_26b09:                               ; preds = %bb, %dec_label_pc_26ac6
  %v2_26b07 = phi i32 [ %v1_26b07, %bb ], [ %v2_26af8, %dec_label_pc_26ac6 ]
  ret i32 %v2_26b07
}

define i32 @function_26b0e() local_unnamed_addr {
dec_label_pc_26b0e:
  %v0_26b0f = load i32, i32* @eax, align 4
  ret i32 %v0_26b0f
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl() local_unnamed_addr {
dec_label_pc_26b10:
  %eax.global-to-local = alloca i32, align 4
  %v17_26b13 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_26b13
}

define i32 @function_26b18(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b18:
  %v0_26b18 = load i32, i32* @ecx, align 4
  %v1_26b18 = add i32 %v0_26b18, 1166795845
  %v2_26b18 = inttoptr i32 %v1_26b18 to i8*
  %v3_26b18 = load i8, i8* %v2_26b18, align 1
  %v5_26b18 = trunc i32 %v0_26b18 to i8
  %v6_26b18 = or i8 %v3_26b18, %v5_26b18
  store i8 %v6_26b18, i8* %v2_26b18, align 1
  %v0_26b1e = load i32, i32* @eax, align 4
  %v2_26b1e = or i32 %v0_26b1e, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  ret i32 %v2_26b1e
}

define i32 @function_26b20(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b20:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_26b20 = load i32, i32* @ebp, align 4
  %v0_26b21 = load i32, i32* @ecx, align 4
  %v1_26b21 = add i32 %v0_26b21, 255
  %v1_26b23 = add i32 %v0_26b20, 2
  store i32 %v1_26b23, i32* @ebp, align 4
  %v1_26b24 = add i32 %v0_26b21, -1587159996
  %v2_26b24 = inttoptr i32 %v1_26b24 to i8*
  %v3_26b24 = load i8, i8* %v2_26b24, align 1
  %v5_26b24 = trunc i32 %v1_26b21 to i8
  %v6_26b24 = load i1, i1* @cf, align 1
  %v7_26b24 = zext i1 %v6_26b24 to i8
  %v8_26b24 = add i8 %v3_26b24, %v5_26b24
  %v9_26b24 = add i8 %v7_26b24, %v8_26b24
  %v27_26b24 = icmp ule i8 %v9_26b24, %v3_26b24
  %v28_26b24 = icmp ult i8 %v8_26b24, %v3_26b24
  %v29_26b24 = select i1 %v6_26b24, i1 %v27_26b24, i1 %v28_26b24
  store i1 %v29_26b24, i1* %cf.global-to-local, align 1
  store i8 %v9_26b24, i8* %v2_26b24, align 1
  %v0_26b2a = load i32, i32* @eax, align 4
  %v1_26b2a = trunc i32 %v0_26b2a to i8
  %v2_26b2a = load i1, i1* %cf.global-to-local, align 1
  %v3_26b2a = zext i1 %v2_26b2a to i8
  %v4_26b2a = add i8 %v3_26b2a, %v1_26b2a
  %v19_26b2a = icmp ule i8 %v4_26b2a, %v1_26b2a
  %v21_26b2a = icmp eq i1 %v2_26b2a, %v19_26b2a
  store i1 %v21_26b2a, i1* %cf.global-to-local, align 1
  %v22_26b2a = zext i8 %v4_26b2a to i32
  %v24_26b2a = and i32 %v0_26b2a, -256
  %v25_26b2a = or i32 %v22_26b2a, %v24_26b2a
  store i32 %v25_26b2a, i32* %eax.global-to-local, align 4
  %v1_26b2c = inttoptr i32 %v25_26b2a to i8*
  %v2_26b2c = load i8, i8* %v1_26b2c, align 1
  %v5_26b2c = add i8 %v2_26b2c, %v4_26b2a
  store i8 %v5_26b2c, i8* %v1_26b2c, align 1
  %v0_26b2e = load i32, i32* %eax.global-to-local, align 4
  %v1_26b2e = load i32, i32* @ebp, align 4
  %v2_26b2e = add i32 %v1_26b2e, -12
  %v3_26b2e = inttoptr i32 %v2_26b2e to i32*
  store i32 %v0_26b2e, i32* %v3_26b2e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_26b33 = load i32, i32* @ebp, align 4
  %v1_26b33 = add i32 %v0_26b33, -32
  %v2_26b33 = inttoptr i32 %v1_26b33 to i32*
  %v3_26b33 = load i32, i32* %v2_26b33, align 4
  store i32 %v3_26b33, i32* %eax.global-to-local, align 4
  %v1_26b39 = call i32 @unknown_4cfc2(i32 %v3_26b33)
  store i32 %v1_26b39, i32* %eax.global-to-local, align 4
  %v0_26b4a = load i32, i32* @ebp, align 4
  %v1_26b4a = add i32 %v0_26b4a, -28
  %v2_26b4a = inttoptr i32 %v1_26b4a to i32*
  %v3_26b4a = load i32, i32* %v2_26b4a, align 4
  store i32 %v3_26b4a, i32* %eax.global-to-local, align 4
  ret i32 %v3_26b4a

; uselistorder directives
  uselistorder i8 %v4_26b2a, { 0, 2, 1 }
  uselistorder i8 %v1_26b2a, { 1, 0 }
  uselistorder i8 %v9_26b24, { 1, 0 }
  uselistorder i8 %v8_26b24, { 1, 0 }
  uselistorder i8 %v3_26b24, { 1, 2, 0 }
}

define i32 @function_26b4d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26b4d:
  %v0_26b4d = load i32, i32* @eax, align 4
  %v1_26b50 = call i32 @unknown_4e72c(i32 %v0_26b4d)
  store i32 %v1_26b50, i32* @eax, align 4
  %v0_26b55 = load i32, i32* @ebp, align 4
  %v1_26b55 = add i32 %v0_26b55, -12
  %v2_26b55 = inttoptr i32 %v1_26b55 to i32*
  %v3_26b55 = load i32, i32* %v2_26b55, align 4
  %v1_26b58 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26b58 = icmp eq i32 %v1_26b58, %v3_26b55
  br i1 %v3_26b58, label %bb, label %dec_label_pc_26b61

bb:                                               ; preds = %dec_label_pc_26b4d
  %v1_26b5f = call i32 @function_26b66()
  br label %dec_label_pc_26b61

dec_label_pc_26b61:                               ; preds = %bb, %dec_label_pc_26b4d
  %v2_26b5f = phi i32 [ %v1_26b5f, %bb ], [ %v1_26b50, %dec_label_pc_26b4d ]
  ret i32 %v2_26b5f
}

define i32 @function_26b66() local_unnamed_addr {
dec_label_pc_26b66:
  %v0_26b67 = load i32, i32* @eax, align 4
  ret i32 %v0_26b67
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitISt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26b68:
  %v1_26b91 = call i32 @unknown_4d050(i32 %arg2)
  %v3_26ba8 = call i32 @unknown_4e7ce(i32 %arg1, i32 %v1_26b91, i32 1)
  store i32 %v3_26ba8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26bb9

bb:                                               ; preds = %dec_label_pc_26b68
  %v1_26bb7 = call i32 @function_26bbe()
  br label %dec_label_pc_26bb9

dec_label_pc_26bb9:                               ; preds = %bb, %dec_label_pc_26b68
  %v2_26bb7 = phi i32 [ %v1_26bb7, %bb ], [ %v3_26ba8, %dec_label_pc_26b68 ]
  ret i32 %v2_26bb7
}

define i32 @function_26bbe() local_unnamed_addr {
dec_label_pc_26bbe:
  %v0_26bbf = load i32, i32* @eax, align 4
  ret i32 %v0_26bbf
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIS4_EEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26bc0:
  %v2_26be6 = load i32, i32* %arg1, align 4
  %v2_26bf2 = call i32 @unknown_4e870(i32 %v2_26be6, i32 %arg2)
  store i32 %v2_26bf2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26c03

bb:                                               ; preds = %dec_label_pc_26bc0
  %v1_26c01 = call i32 @function_26c08()
  br label %dec_label_pc_26c03

dec_label_pc_26c03:                               ; preds = %bb, %dec_label_pc_26bc0
  %v2_26c01 = phi i32 [ %v1_26c01, %bb ], [ %v2_26bf2, %dec_label_pc_26bc0 ]
  ret i32 %v2_26c01
}

define i32 @function_26c08() local_unnamed_addr {
dec_label_pc_26c08:
  %v0_26c09 = load i32, i32* @eax, align 4
  ret i32 %v0_26c09
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKxEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26c0a:
  %v2_26c30 = load i32, i32* %arg1, align 4
  %v2_26c3c = call i32 @unknown_4e8f6(i32 %v2_26c30, i32 %arg2)
  store i32 %v2_26c3c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26c4d

bb:                                               ; preds = %dec_label_pc_26c0a
  %v1_26c4b = call i32 @function_26c52()
  br label %dec_label_pc_26c4d

dec_label_pc_26c4d:                               ; preds = %bb, %dec_label_pc_26c0a
  %v2_26c4b = phi i32 [ %v1_26c4b, %bb ], [ %v2_26c3c, %dec_label_pc_26c0a ]
  ret i32 %v2_26c4b
}

define i32 @function_26c52() local_unnamed_addr {
dec_label_pc_26c52:
  %v0_26c53 = load i32, i32* @eax, align 4
  ret i32 %v0_26c53
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKdEEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26c54:
  ret i32 %arg3
}

define i32 @function_26c6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c6c:
  %v0_26c6c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_26c72 = load i32, i32* @ebp, align 4
  %v2_26c72 = add i32 %v1_26c72, -12
  %v3_26c72 = inttoptr i32 %v2_26c72 to i32*
  store i32 %v0_26c6c, i32* %v3_26c72, align 4
  %v0_26c77 = load i32, i32* @ebp, align 4
  %v1_26c77 = add i32 %v0_26c77, -28
  %v2_26c77 = inttoptr i32 %v1_26c77 to i32*
  %v3_26c77 = load i32, i32* %v2_26c77, align 4
  %v1_26c7a = inttoptr i32 %v3_26c77 to i32*
  %v2_26c7a = load i32, i32* %v1_26c7a, align 4
  %v1_26c7c = add i32 %v0_26c77, -32
  %v2_26c7c = inttoptr i32 %v1_26c7c to i32*
  %v3_26c7c = load i32, i32* %v2_26c7c, align 4
  %v2_26c86 = call i32 @unknown_4e976(i32 %v2_26c7a, i32 %v3_26c7c)
  store i32 %v2_26c86, i32* @eax, align 4
  %v0_26c8b = load i32, i32* @ebp, align 4
  %v1_26c8b = add i32 %v0_26c8b, -12
  %v2_26c8b = inttoptr i32 %v1_26c8b to i32*
  %v3_26c8b = load i32, i32* %v2_26c8b, align 4
  %v1_26c8e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26c8e = icmp eq i32 %v1_26c8e, %v3_26c8b
  br i1 %v3_26c8e, label %bb, label %dec_label_pc_26c97

bb:                                               ; preds = %dec_label_pc_26c6c
  %v1_26c95 = call i32 @function_26c9c()
  br label %dec_label_pc_26c97

dec_label_pc_26c97:                               ; preds = %bb, %dec_label_pc_26c6c
  %v2_26c95 = phi i32 [ %v1_26c95, %bb ], [ %v2_26c86, %dec_label_pc_26c6c ]
  ret i32 %v2_26c95
}

define i32 @function_26c9c() local_unnamed_addr {
dec_label_pc_26c9c:
  %v0_26c9d = load i32, i32* @eax, align 4
  ret i32 %v0_26c9d
}

define i32 @_Z9SerializeI11CDataStream5CTxInSaIS1_EEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26c9e:
  %stack_var_-17 = alloca i32, align 4
  %v0_26cbc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26cc7 = ptrtoint i32* %stack_var_-17 to i32
  %v5_26ce9 = call i32 @unknown_4e9f5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_26cc7)
  ret i32 %v0_26cbc
}

define i32 @function_26cf6(i32 %arg1) local_unnamed_addr {
dec_label_pc_26cf6:
  %zf.global-to-local = alloca i1, align 1
  %v2_26cf6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26cf6 = load i32, i32* @eax, align 4
  %v4_26cf6 = trunc i32 %v3_26cf6 to i8
  %v5_26cf6 = add i8 %v4_26cf6, %v2_26cf6
  %v15_26cf6 = icmp eq i8 %v5_26cf6, 0
  store i1 %v15_26cf6, i1* %zf.global-to-local, align 1
  %v21_26cf6 = inttoptr i32 %v3_26cf6 to i8*
  store i8 %v5_26cf6, i8* %v21_26cf6, align 1
  %v0_26cf8 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_26cf8, label %bb, label %dec_label_pc_26cf6.dec_label_pc_26cfa_crit_edge

dec_label_pc_26cf6.dec_label_pc_26cfa_crit_edge:  ; preds = %dec_label_pc_26cf6
  %v2_26cf8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_26cfa

bb:                                               ; preds = %dec_label_pc_26cf6
  %v1_26cf8 = call i32 @function_26cff()
  br label %dec_label_pc_26cfa

dec_label_pc_26cfa:                               ; preds = %dec_label_pc_26cf6.dec_label_pc_26cfa_crit_edge, %bb
  %v2_26cf8 = phi i32 [ %v2_26cf8.pre, %dec_label_pc_26cf6.dec_label_pc_26cfa_crit_edge ], [ %v1_26cf8, %bb ]
  ret i32 %v2_26cf8

; uselistorder directives
  uselistorder label %dec_label_pc_26cfa, { 1, 0 }
}

define i32 @function_26cff() local_unnamed_addr {
dec_label_pc_26cff:
  %v0_26d00 = load i32, i32* @eax, align 4
  ret i32 %v0_26d00
}

define i32 @_Z9SerializeI11CDataStream6CTxOutSaIS1_EEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26d01:
  ret i32 %arg4
}

define i32 @function_26d1e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26d1e:
  %eax.global-to-local = alloca i32, align 4
  %v0_26d21 = load i32, i32* @eax, align 4
  %v1_26d21 = trunc i32 %v0_26d21 to i8
  %v2_26d21 = load i1, i1* @cf, align 1
  %v3_26d21 = zext i1 %v2_26d21 to i8
  %v4_26d21 = add i8 %v3_26d21, %v1_26d21
  %v22_26d21 = zext i8 %v4_26d21 to i32
  %v24_26d21 = and i32 %v0_26d21, -256
  %v25_26d21 = or i32 %v22_26d21, %v24_26d21
  store i32 %v25_26d21, i32* %eax.global-to-local, align 4
  %v1_26d23 = inttoptr i32 %v25_26d21 to i8*
  %v2_26d23 = load i8, i8* %v1_26d23, align 1
  %v5_26d23 = add i8 %v2_26d23, %v4_26d21
  store i8 %v5_26d23, i8* %v1_26d23, align 1
  %v0_26d25 = load i32, i32* %eax.global-to-local, align 4
  %v1_26d25 = load i32, i32* @ebp, align 4
  %v2_26d25 = add i32 %v1_26d25, -12
  %v3_26d25 = inttoptr i32 %v2_26d25 to i32*
  store i32 %v0_26d25, i32* %v3_26d25, align 4
  %v0_26d2a = load i32, i32* @ebp, align 4
  %v1_26d2a = add i32 %v0_26d2a, -13
  store i32 %v1_26d2a, i32* %eax.global-to-local, align 4
  %v1_26d31 = add i32 %v0_26d2a, -40
  %v2_26d31 = inttoptr i32 %v1_26d31 to i32*
  %v3_26d31 = load i32, i32* %v2_26d31, align 4
  store i32 %v3_26d31, i32* %eax.global-to-local, align 4
  %v1_26d38 = add i32 %v0_26d2a, -36
  %v2_26d38 = inttoptr i32 %v1_26d38 to i32*
  %v3_26d38 = load i32, i32* %v2_26d38, align 4
  store i32 %v3_26d38, i32* %eax.global-to-local, align 4
  %v1_26d3f = add i32 %v0_26d2a, -32
  %v2_26d3f = inttoptr i32 %v1_26d3f to i32*
  %v3_26d3f = load i32, i32* %v2_26d3f, align 4
  store i32 %v3_26d3f, i32* %eax.global-to-local, align 4
  %v1_26d46 = add i32 %v0_26d2a, -28
  %v2_26d46 = inttoptr i32 %v1_26d46 to i32*
  %v3_26d46 = load i32, i32* %v2_26d46, align 4
  store i32 %v3_26d46, i32* %eax.global-to-local, align 4
  %v5_26d4c = call i32 @unknown_4eb32(i32 %v3_26d46, i32 %v3_26d3f, i32 %v3_26d38, i32 %v3_26d31, i32 %v1_26d2a)
  store i32 %v5_26d4c, i32* %eax.global-to-local, align 4
  %v0_26d51 = load i32, i32* @ebp, align 4
  %v1_26d51 = add i32 %v0_26d51, -12
  %v2_26d51 = inttoptr i32 %v1_26d51 to i32*
  %v3_26d51 = load i32, i32* %v2_26d51, align 4
  store i32 %v3_26d51, i32* %eax.global-to-local, align 4
  %v1_26d54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26d54 = xor i32 %v1_26d54, %v3_26d51
  %v3_26d54 = icmp eq i32 %v2_26d54, 0
  store i32 %v2_26d54, i32* @eax, align 4
  br i1 %v3_26d54, label %bb, label %dec_label_pc_26d5d

bb:                                               ; preds = %dec_label_pc_26d1e
  %v1_26d5b = call i32 @function_26d62()
  store i32 %v1_26d5b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26d5d

dec_label_pc_26d5d:                               ; preds = %bb, %dec_label_pc_26d1e
  %v2_26d5b = phi i32 [ %v1_26d5b, %bb ], [ %v2_26d54, %dec_label_pc_26d1e ]
  ret i32 %v2_26d5b

; uselistorder directives
  uselistorder i32 %v0_26d2a, { 0, 2, 1, 3, 4 }
}

define i32 @function_26d62() local_unnamed_addr {
dec_label_pc_26d62:
  %v0_26d63 = load i32, i32* @eax, align 4
  ret i32 %v0_26d63
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS_7variantISsSM_SS_bxdNS1_5void_ES17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_E17convert_copy_intoEPvNS18_18has_fallback_type_EEENT1_11result_typeEiiRS1C_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_26d64:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_26db4, label %bb

bb:                                               ; preds = %dec_label_pc_26d64
  %sext = mul i32 %arg6, 16777216
  %v12_26dae = sdiv i32 %sext, 16777216
  %v13_26dae = sext i8 %arg5 to i32
  %v14_26dae = call i32 @function_271ed(i32 %arg8, i32 %arg7, i32 %v12_26dae, i32 %v13_26dae, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_26db4

dec_label_pc_26db4:                               ; preds = %dec_label_pc_26d64, %bb
  %v2_26db7 = mul i32 %arg2, 4
  %v1_26dba = add i32 %v2_26db7, ptrtoint (i32* @global_var_27240.1870 to i32)
  %v1_26dbf = inttoptr i32 %v1_26dba to i32*
  %v2_26dbf = load i32, i32* %v1_26dbf, align 4
  ret i32 %v2_26dbf

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_26db4, { 1, 0 }
}

define i32 @function_26dd2() local_unnamed_addr {
dec_label_pc_26dd2:
  %eax.global-to-local = alloca i32, align 4
  %v3_26dd2 = load i32, i32* @eax, align 4
  %v4_26dd2 = trunc i32 %v3_26dd2 to i8
  %v2_26dd5 = and i8 %v4_26dd2, 12
  %v8_26dd5 = zext i8 %v2_26dd5 to i32
  %v10_26dd5 = and i32 %v3_26dd2, -256
  %v11_26dd5 = or i32 %v8_26dd5, %v10_26dd5
  store i32 %v11_26dd5, i32* %eax.global-to-local, align 4
  %v1_26dd7 = inttoptr i32 %v11_26dd5 to i8*
  %v2_26dd7 = load i8, i8* %v1_26dd7, align 4
  %v5_26dd7 = add i8 %v2_26dd7, %v2_26dd5
  store i8 %v5_26dd7, i8* %v1_26dd7, align 4
  %v0_26dd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_26dd9 = inttoptr i32 %v0_26dd9 to i8*
  %v2_26dd9 = load i8, i8* %v1_26dd9, align 1
  %v4_26dd9 = trunc i32 %v0_26dd9 to i8
  %v5_26dd9 = add i8 %v2_26dd9, %v4_26dd9
  store i8 %v5_26dd9, i8* %v1_26dd9, align 1
  %v0_26ddb = load i32, i32* @ebp, align 4
  %v1_26ddb = add i32 %v0_26ddb, -56
  %v2_26ddb = inttoptr i32 %v1_26ddb to i32*
  %v3_26ddb = load i32, i32* %v2_26ddb, align 4
  store i32 %v3_26ddb, i32* %eax.global-to-local, align 4
  %v1_26de2 = add i32 %v0_26ddb, -52
  %v2_26de2 = inttoptr i32 %v1_26de2 to i32*
  %v3_26de2 = load i32, i32* %v2_26de2, align 4
  store i32 %v3_26de2, i32* %eax.global-to-local, align 4
  %v1_26de9 = add i32 %v0_26ddb, -44
  %v2_26de9 = inttoptr i32 %v1_26de9 to i32*
  %v3_26de9 = load i32, i32* %v2_26de9, align 4
  store i32 %v3_26de9, i32* %eax.global-to-local, align 4
  %v3_26def = call i32 @unknown_4ec6f(i32 %v3_26de9, i32 %v3_26de2, i32 %v3_26ddb)
  store i32 %v3_26def, i32* %eax.global-to-local, align 4
  ret i32 %v3_26def

; uselistorder directives
  uselistorder i8 12, { 0, 1, 3, 2 }
}

define i32 @function_26df8(i32 %arg1) local_unnamed_addr {
dec_label_pc_26df8:
  %eax.global-to-local = alloca i32, align 4
  %v0_26df8 = load i32, i32* @ebx, align 4
  %v3_26df8 = load i32, i32* @eax, align 4
  %v5_26df81 = mul i32 %v3_26df8, 256
  %v1_26df82 = add i32 %v5_26df81, %v0_26df8
  %v22_26df8 = and i32 %v1_26df82, 65280
  %v23_26df8 = and i32 %v0_26df8, -65281
  %v24_26df8 = or i32 %v22_26df8, %v23_26df8
  store i32 %v24_26df8, i32* @ebx, align 4
  %v11_26dfb = and i32 %v3_26df8, -236
  store i32 %v11_26dfb, i32* %eax.global-to-local, align 4
  %v1_26dfd = inttoptr i32 %v11_26dfb to i32*
  %v2_26dfd = load i32, i32* %v1_26dfd, align 4
  %v4_26dfd = add i32 %v2_26dfd, %v11_26dfb
  store i32 %v4_26dfd, i32* %v1_26dfd, align 4
  %v0_26dff = load i32, i32* %eax.global-to-local, align 4
  %v1_26dff = inttoptr i32 %v0_26dff to i8*
  %v2_26dff = load i8, i8* %v1_26dff, align 1
  %v4_26dff = trunc i32 %v0_26dff to i8
  %v5_26dff = add i8 %v2_26dff, %v4_26dff
  store i8 %v5_26dff, i8* %v1_26dff, align 1
  %v0_26e01 = load i32, i32* @ebp, align 4
  %v1_26e01 = add i32 %v0_26e01, -82
  %v2_26e01 = inttoptr i32 %v1_26e01 to i8*
  %v3_26e01 = load i8, i8* %v2_26e01, align 1
  %v4_26e01 = zext i8 %v3_26e01 to i32
  store i32 %v4_26e01, i32* %eax.global-to-local, align 4
  %v1_26e11 = add i32 %v0_26e01, -56
  %v2_26e11 = inttoptr i32 %v1_26e11 to i32*
  %v3_26e11 = load i32, i32* %v2_26e11, align 4
  store i32 %v3_26e11, i32* %eax.global-to-local, align 4
  %v1_26e18 = add i32 %v0_26e01, -52
  %v2_26e18 = inttoptr i32 %v1_26e18 to i32*
  %v3_26e18 = load i32, i32* %v2_26e18, align 4
  store i32 %v3_26e18, i32* %eax.global-to-local, align 4
  %v1_26e1f = add i32 %v0_26e01, -44
  %v2_26e1f = inttoptr i32 %v1_26e1f to i32*
  %v3_26e1f = load i32, i32* %v2_26e1f, align 4
  store i32 %v3_26e1f, i32* %eax.global-to-local, align 4
  %v5_26e25 = sext i8 %v3_26e01 to i32
  %v6_26e25 = call i32 @unknown_4ecdc(i32 %v3_26e1f, i32 %v3_26e18, i32 %v3_26e11, i32 0, i32 %v5_26e25)
  store i32 %v6_26e25, i32* @eax, align 4
  %v0_26e2a = call i32 @function_27225()
  store i32 %v0_26e2a, i32* %eax.global-to-local, align 4
  ret i32 %v0_26e2a

; uselistorder directives
  uselistorder i32 %v0_26e01, { 0, 2, 1, 3 }
  uselistorder i32 %v11_26dfb, { 0, 2, 1 }
  uselistorder i32 %v3_26df8, { 1, 0 }
  uselistorder i32 %v0_26df8, { 1, 0 }
  uselistorder i32 -82, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @function_26e2f() local_unnamed_addr {
dec_label_pc_26e2f:
  %v0_26e37 = load i32, i32* @ebp, align 4
  %v1_26e37 = add i32 %v0_26e37, -81
  %v2_26e37 = inttoptr i32 %v1_26e37 to i8*
  %v3_26e37 = load i8, i8* %v2_26e37, align 1
  %v1_26e47 = add i32 %v0_26e37, -56
  %v2_26e47 = inttoptr i32 %v1_26e47 to i32*
  %v3_26e47 = load i32, i32* %v2_26e47, align 4
  %v1_26e4e = add i32 %v0_26e37, -52
  %v2_26e4e = inttoptr i32 %v1_26e4e to i32*
  %v3_26e4e = load i32, i32* %v2_26e4e, align 4
  %v1_26e55 = add i32 %v0_26e37, -44
  %v2_26e55 = inttoptr i32 %v1_26e55 to i32*
  %v3_26e55 = load i32, i32* %v2_26e55, align 4
  %v6_26e5b = sext i8 %v3_26e37 to i32
  %v7_26e5b = call i32 @unknown_4ed49(i32 %v3_26e55, i32 %v3_26e4e, i32 %v3_26e47, i32 0, i32 %v6_26e5b, i32 1)
  store i32 %v7_26e5b, i32* @eax, align 4
  %v0_26e60 = call i32 @function_27225()
  ret i32 %v0_26e60

; uselistorder directives
  uselistorder i32 %v0_26e37, { 0, 2, 1, 3 }
}

define i32 @function_26e65() local_unnamed_addr {
dec_label_pc_26e65:
  %v0_26e6d = load i32, i32* @ebp, align 4
  %v1_26e6d = add i32 %v0_26e6d, -80
  %v2_26e6d = inttoptr i32 %v1_26e6d to i8*
  %v3_26e6d = load i8, i8* %v2_26e6d, align 1
  %v1_26e7d = add i32 %v0_26e6d, -56
  %v2_26e7d = inttoptr i32 %v1_26e7d to i32*
  %v3_26e7d = load i32, i32* %v2_26e7d, align 4
  %v1_26e84 = add i32 %v0_26e6d, -52
  %v2_26e84 = inttoptr i32 %v1_26e84 to i32*
  %v3_26e84 = load i32, i32* %v2_26e84, align 4
  %v1_26e8b = add i32 %v0_26e6d, -44
  %v2_26e8b = inttoptr i32 %v1_26e8b to i32*
  %v3_26e8b = load i32, i32* %v2_26e8b, align 4
  %v6_26e91 = sext i8 %v3_26e6d to i32
  %v7_26e91 = call i32 @unknown_4edb6(i32 %v3_26e8b, i32 %v3_26e84, i32 %v3_26e7d, i32 0, i32 %v6_26e91, i32 1)
  store i32 %v7_26e91, i32* @eax, align 4
  %v0_26e96 = call i32 @function_27225()
  ret i32 %v0_26e96

; uselistorder directives
  uselistorder i32 %v0_26e6d, { 0, 2, 1, 3 }
}

define i32 @function_26eb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26eb8:
  %v0_26eba = load i32, i32* @ebp, align 4
  %v1_26eba = add i32 %v0_26eba, -52
  %v2_26eba = inttoptr i32 %v1_26eba to i32*
  %v3_26eba = load i32, i32* %v2_26eba, align 4
  %v1_26ec1 = add i32 %v0_26eba, -44
  %v2_26ec1 = inttoptr i32 %v1_26ec1 to i32*
  %v3_26ec1 = load i32, i32* %v2_26ec1, align 4
  %v2_26ec7 = call i32 @unknown_4ee23(i32 %v3_26ec1, i32 %v3_26eba)
  store i32 %v2_26ec7, i32* @eax, align 4
  %v0_26ecc = call i32 @function_27225()
  ret i32 %v0_26ecc
}

define i32 @function_26ed1() local_unnamed_addr {
dec_label_pc_26ed1:
  %v0_26ed9 = load i32, i32* @ebp, align 4
  %v1_26ed9 = add i32 %v0_26ed9, -78
  %v2_26ed9 = inttoptr i32 %v1_26ed9 to i8*
  %v3_26ed9 = load i8, i8* %v2_26ed9, align 1
  %v1_26ee9 = add i32 %v0_26ed9, -56
  %v2_26ee9 = inttoptr i32 %v1_26ee9 to i32*
  %v3_26ee9 = load i32, i32* %v2_26ee9, align 4
  %v1_26ef0 = add i32 %v0_26ed9, -52
  %v2_26ef0 = inttoptr i32 %v1_26ef0 to i32*
  %v3_26ef0 = load i32, i32* %v2_26ef0, align 4
  %v1_26ef7 = add i32 %v0_26ed9, -44
  %v2_26ef7 = inttoptr i32 %v1_26ef7 to i32*
  %v3_26ef7 = load i32, i32* %v2_26ef7, align 4
  %v6_26efd = sext i8 %v3_26ed9 to i32
  %v7_26efd = call i32 @unknown_4ee90(i32 %v3_26ef7, i32 %v3_26ef0, i32 %v3_26ee9, i32 0, i32 %v6_26efd, i32 1)
  store i32 %v7_26efd, i32* @eax, align 4
  %v0_26f02 = call i32 @function_27225()
  ret i32 %v0_26f02

; uselistorder directives
  uselistorder i32 %v0_26ed9, { 0, 2, 1, 3 }
}

define i32 @function_26f08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f08:
  %eax.global-to-local = alloca i32, align 4
  %v0_26f09 = load i32, i32* @eax, align 4
  %v11_26f09 = and i32 %v0_26f09, -236
  store i32 %v11_26f09, i32* %eax.global-to-local, align 4
  %v1_26f0b = inttoptr i32 %v11_26f09 to i32*
  %v2_26f0b = load i32, i32* %v1_26f0b, align 4
  %v4_26f0b = add i32 %v2_26f0b, %v11_26f09
  store i32 %v4_26f0b, i32* %v1_26f0b, align 4
  %v0_26f0d = load i32, i32* %eax.global-to-local, align 4
  %v1_26f0d = inttoptr i32 %v0_26f0d to i8*
  %v2_26f0d = load i8, i8* %v1_26f0d, align 1
  %v4_26f0d = trunc i32 %v0_26f0d to i8
  %v5_26f0d = add i8 %v2_26f0d, %v4_26f0d
  store i8 %v5_26f0d, i8* %v1_26f0d, align 1
  %v0_26f0f = load i32, i32* @ebp, align 4
  %v1_26f1f = add i32 %v0_26f0f, -56
  %v2_26f1f = inttoptr i32 %v1_26f1f to i32*
  %v3_26f1f = load i32, i32* %v2_26f1f, align 4
  store i32 %v3_26f1f, i32* %eax.global-to-local, align 4
  %v1_26f26 = add i32 %v0_26f0f, -52
  %v2_26f26 = inttoptr i32 %v1_26f26 to i32*
  %v3_26f26 = load i32, i32* %v2_26f26, align 4
  store i32 %v3_26f26, i32* %eax.global-to-local, align 4
  %v1_26f2d = add i32 %v0_26f0f, -44
  %v2_26f2d = inttoptr i32 %v1_26f2d to i32*
  %v3_26f2d = load i32, i32* %v2_26f2d, align 4
  store i32 %v3_26f2d, i32* %eax.global-to-local, align 4
  %v2_26f33 = call i32 @unknown_4eefd(i32 %v3_26f2d, i32 %v3_26f26)
  store i32 %v2_26f33, i32* @eax, align 4
  %v0_26f38 = call i32 @function_27225()
  store i32 %v0_26f38, i32* %eax.global-to-local, align 4
  ret i32 %v0_26f38

; uselistorder directives
  uselistorder i32 %v0_26f0f, { 1, 0, 2 }
  uselistorder i32 %v11_26f09, { 0, 2, 1 }
}

define i32 @function_26f58(i32 %arg1) local_unnamed_addr {
dec_label_pc_26f58:
  %v0_26f5c = load i32, i32* @ebp, align 4
  %v1_26f5c = add i32 %v0_26f5c, -52
  %v2_26f5c = inttoptr i32 %v1_26f5c to i32*
  %v3_26f5c = load i32, i32* %v2_26f5c, align 4
  %v1_26f63 = add i32 %v0_26f5c, -44
  %v2_26f63 = inttoptr i32 %v1_26f63 to i32*
  %v3_26f63 = load i32, i32* %v2_26f63, align 4
  %v2_26f69 = call i32 @unknown_4eefd(i32 %v3_26f63, i32 %v3_26f5c)
  store i32 %v2_26f69, i32* @eax, align 4
  %v0_26f6e = call i32 @function_27225()
  ret i32 %v0_26f6e
}

define i32 @function_26f86(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26f86:
  %v0_26f86 = load i32, i32* @eax, align 4
  %v1_26f86 = trunc i32 %v0_26f86 to i8
  %v1_26f88 = inttoptr i32 %v0_26f86 to i8*
  %v2_26f88 = load i8, i8* %v1_26f88, align 1
  %v5_26f88 = add i8 %v2_26f88, %v1_26f86
  store i8 %v5_26f88, i8* %v1_26f88, align 1
  %v0_26f8a = load i32, i32* @ebx, align 4
  %v1_26f8a = add i32 %v0_26f8a, 1149880389
  %v2_26f8a = inttoptr i32 %v1_26f8a to i8*
  %v3_26f8a = load i8, i8* %v2_26f8a, align 1
  %v4_26f8a = load i32, i32* @ecx, align 4
  %v5_26f8a = trunc i32 %v4_26f8a to i8
  %v6_26f8a = add i8 %v5_26f8a, %v3_26f8a
  store i8 %v6_26f8a, i8* %v2_26f8a, align 1
  %v0_26f92 = load i32, i32* @ebp, align 4
  %v1_26f92 = add i32 %v0_26f92, -52
  %v2_26f92 = inttoptr i32 %v1_26f92 to i32*
  %v3_26f92 = load i32, i32* %v2_26f92, align 4
  %v1_26f99 = add i32 %v0_26f92, -44
  %v2_26f99 = inttoptr i32 %v1_26f99 to i32*
  %v3_26f99 = load i32, i32* %v2_26f99, align 4
  %v2_26f9f = call i32 @unknown_4eefd(i32 %v3_26f99, i32 %v3_26f92)
  store i32 %v2_26f9f, i32* @eax, align 4
  %v0_26fa4 = call i32 @function_27225()
  ret i32 %v0_26fa4
}

define i32 @function_26fa9() local_unnamed_addr {
dec_label_pc_26fa9:
  %v0_26fb1 = load i32, i32* @ebp, align 4
  %v1_26fc8 = add i32 %v0_26fb1, -52
  %v2_26fc8 = inttoptr i32 %v1_26fc8 to i32*
  %v3_26fc8 = load i32, i32* %v2_26fc8, align 4
  %v1_26fcf = add i32 %v0_26fb1, -44
  %v2_26fcf = inttoptr i32 %v1_26fcf to i32*
  %v3_26fcf = load i32, i32* %v2_26fcf, align 4
  %v2_26fd5 = call i32 @unknown_4eefd(i32 %v3_26fcf, i32 %v3_26fc8)
  store i32 %v2_26fd5, i32* @eax, align 4
  %v0_26fda = call i32 @function_27225()
  ret i32 %v0_26fda

; uselistorder directives
  uselistorder i32 %v0_26fb1, { 1, 0 }
}

define i32 @function_26fdf() local_unnamed_addr {
dec_label_pc_26fdf:
  %v0_26fe7 = load i32, i32* @ebp, align 4
  %v1_26ffe = add i32 %v0_26fe7, -52
  %v2_26ffe = inttoptr i32 %v1_26ffe to i32*
  %v3_26ffe = load i32, i32* %v2_26ffe, align 4
  %v1_27005 = add i32 %v0_26fe7, -44
  %v2_27005 = inttoptr i32 %v1_27005 to i32*
  %v3_27005 = load i32, i32* %v2_27005, align 4
  %v2_2700b = call i32 @unknown_4eefd(i32 %v3_27005, i32 %v3_26ffe)
  store i32 %v2_2700b, i32* @eax, align 4
  %v0_27010 = call i32 @function_27225()
  ret i32 %v0_27010

; uselistorder directives
  uselistorder i32 %v0_26fe7, { 1, 0 }
}

define i32 @function_2702b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2702b:
  %v2_2702b = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2702b = load i32, i32* @eax, align 4
  %v4_2702b = trunc i32 %v3_2702b to i8
  %v5_2702b = add i8 %v4_2702b, %v2_2702b
  %v21_2702b = inttoptr i32 %v3_2702b to i8*
  store i8 %v5_2702b, i8* %v21_2702b, align 1
  %v0_2702d = load i32, i32* @ebp, align 4
  %v1_27034 = add i32 %v0_2702d, -52
  %v2_27034 = inttoptr i32 %v1_27034 to i32*
  %v3_27034 = load i32, i32* %v2_27034, align 4
  %v1_2703b = add i32 %v0_2702d, -44
  %v2_2703b = inttoptr i32 %v1_2703b to i32*
  %v3_2703b = load i32, i32* %v2_2703b, align 4
  %v2_27041 = call i32 @unknown_4eefd(i32 %v3_2703b, i32 %v3_27034)
  store i32 %v2_27041, i32* @eax, align 4
  %v0_27046 = call i32 @function_27225()
  ret i32 %v0_27046
}

define i32 @function_2704b() local_unnamed_addr {
dec_label_pc_2704b:
  %v0_27053 = load i32, i32* @ebp, align 4
  %v1_2706a = add i32 %v0_27053, -52
  %v2_2706a = inttoptr i32 %v1_2706a to i32*
  %v3_2706a = load i32, i32* %v2_2706a, align 4
  %v1_27071 = add i32 %v0_27053, -44
  %v2_27071 = inttoptr i32 %v1_27071 to i32*
  %v3_27071 = load i32, i32* %v2_27071, align 4
  %v2_27077 = call i32 @unknown_4eefd(i32 %v3_27071, i32 %v3_2706a)
  store i32 %v2_27077, i32* @eax, align 4
  %v0_2707c = call i32 @function_27225()
  ret i32 %v0_2707c

; uselistorder directives
  uselistorder i32 %v0_27053, { 1, 0 }
}

define i32 @function_27081() local_unnamed_addr {
dec_label_pc_27081:
  %v0_27089 = load i32, i32* @ebp, align 4
  %v1_270a0 = add i32 %v0_27089, -52
  %v2_270a0 = inttoptr i32 %v1_270a0 to i32*
  %v3_270a0 = load i32, i32* %v2_270a0, align 4
  %v1_270a7 = add i32 %v0_27089, -44
  %v2_270a7 = inttoptr i32 %v1_270a7 to i32*
  %v3_270a7 = load i32, i32* %v2_270a7, align 4
  %v2_270ad = call i32 @unknown_4eefd(i32 %v3_270a7, i32 %v3_270a0)
  store i32 %v2_270ad, i32* @eax, align 4
  %v0_270b2 = call i32 @function_27225()
  ret i32 %v0_270b2

; uselistorder directives
  uselistorder i32 %v0_27089, { 1, 0 }
}

define i32 @function_270cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_270cc:
  %v2_270cc = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_270cc = load i32, i32* @eax, align 4
  %v4_270cc = trunc i32 %v3_270cc to i8
  %v5_270cc = add i8 %v4_270cc, %v2_270cc
  %v21_270cc = inttoptr i32 %v3_270cc to i8*
  store i8 %v5_270cc, i8* %v21_270cc, align 1
  %v0_270ce = load i32, i32* @ebx, align 4
  %v1_270ce = add i32 %v0_270ce, 1149880389
  %v2_270ce = inttoptr i32 %v1_270ce to i8*
  %v3_270ce = load i8, i8* %v2_270ce, align 1
  %v4_270ce = load i32, i32* @ecx, align 4
  %v5_270ce = trunc i32 %v4_270ce to i8
  %v6_270ce = add i8 %v5_270ce, %v3_270ce
  store i8 %v6_270ce, i8* %v2_270ce, align 1
  %v0_270d6 = load i32, i32* @ebp, align 4
  %v1_270d6 = add i32 %v0_270d6, -52
  %v2_270d6 = inttoptr i32 %v1_270d6 to i32*
  %v3_270d6 = load i32, i32* %v2_270d6, align 4
  %v1_270dd = add i32 %v0_270d6, -44
  %v2_270dd = inttoptr i32 %v1_270dd to i32*
  %v3_270dd = load i32, i32* %v2_270dd, align 4
  %v2_270e3 = call i32 @unknown_4eefd(i32 %v3_270dd, i32 %v3_270d6)
  store i32 %v2_270e3, i32* @eax, align 4
  %v0_270e8 = call i32 @function_27225()
  ret i32 %v0_270e8

; uselistorder directives
  uselistorder i32 1149880389, { 1, 2, 0, 3 }
}

define i32 @function_270ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_270ea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_270ed() local_unnamed_addr {
dec_label_pc_270ed:
  %v0_270f5 = load i32, i32* @ebp, align 4
  %v1_2710c = add i32 %v0_270f5, -52
  %v2_2710c = inttoptr i32 %v1_2710c to i32*
  %v3_2710c = load i32, i32* %v2_2710c, align 4
  %v1_27113 = add i32 %v0_270f5, -44
  %v2_27113 = inttoptr i32 %v1_27113 to i32*
  %v3_27113 = load i32, i32* %v2_27113, align 4
  %v2_27119 = call i32 @unknown_4eefd(i32 %v3_27113, i32 %v3_2710c)
  store i32 %v2_27119, i32* @eax, align 4
  %v0_2711e = call i32 @function_27225()
  ret i32 %v0_2711e

; uselistorder directives
  uselistorder i32 %v0_270f5, { 1, 0 }
}

define i32 @function_27123() local_unnamed_addr {
dec_label_pc_27123:
  %v0_2712b = load i32, i32* @ebp, align 4
  %v1_27142 = add i32 %v0_2712b, -52
  %v2_27142 = inttoptr i32 %v1_27142 to i32*
  %v3_27142 = load i32, i32* %v2_27142, align 4
  %v1_27149 = add i32 %v0_2712b, -44
  %v2_27149 = inttoptr i32 %v1_27149 to i32*
  %v3_27149 = load i32, i32* %v2_27149, align 4
  %v2_2714f = call i32 @unknown_4eefd(i32 %v3_27149, i32 %v3_27142)
  store i32 %v2_2714f, i32* @eax, align 4
  %v0_27154 = call i32 @function_27225()
  ret i32 %v0_27154

; uselistorder directives
  uselistorder i32 %v0_2712b, { 1, 0 }
}

define i32 @function_2715a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2715a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2715b = load i32, i32* @eax, align 4
  %v11_2715b = and i32 %v0_2715b, -236
  store i32 %v11_2715b, i32* %eax.global-to-local, align 4
  %v1_2715d = inttoptr i32 %v11_2715b to i32*
  %v2_2715d = load i32, i32* %v1_2715d, align 4
  %v4_2715d = add i32 %v2_2715d, %v11_2715b
  store i32 %v4_2715d, i32* %v1_2715d, align 4
  %v0_2715f = load i32, i32* %eax.global-to-local, align 4
  %v1_2715f = inttoptr i32 %v0_2715f to i8*
  %v2_2715f = load i8, i8* %v1_2715f, align 1
  %v4_2715f = trunc i32 %v0_2715f to i8
  %v5_2715f = add i8 %v2_2715f, %v4_2715f
  store i8 %v5_2715f, i8* %v1_2715f, align 1
  %v0_27161 = load i32, i32* @edi, align 4
  store i32 %v0_27161, i32* %eax.global-to-local, align 4
  %v0_2716f = load i32, i32* @ebp, align 4
  %v1_2716f = add i32 %v0_2716f, -56
  %v2_2716f = inttoptr i32 %v1_2716f to i32*
  %v3_2716f = load i32, i32* %v2_2716f, align 4
  store i32 %v3_2716f, i32* %eax.global-to-local, align 4
  %v1_27176 = add i32 %v0_2716f, -52
  %v2_27176 = inttoptr i32 %v1_27176 to i32*
  %v3_27176 = load i32, i32* %v2_27176, align 4
  store i32 %v3_27176, i32* %eax.global-to-local, align 4
  %v1_2717d = add i32 %v0_2716f, -44
  %v2_2717d = inttoptr i32 %v1_2717d to i32*
  %v3_2717d = load i32, i32* %v2_2717d, align 4
  store i32 %v3_2717d, i32* %eax.global-to-local, align 4
  %v2_27183 = call i32 @unknown_4eefd(i32 %v3_2717d, i32 %v3_27176)
  store i32 %v2_27183, i32* @eax, align 4
  %v0_27188 = call i32 @function_27225()
  store i32 %v0_27188, i32* %eax.global-to-local, align 4
  ret i32 %v0_27188

; uselistorder directives
  uselistorder i32 %v11_2715b, { 0, 2, 1 }
}

define i32 @function_27174(i32 %arg1) local_unnamed_addr {
dec_label_pc_27174:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_271ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_271ba:
  %v0_271ba = load i32, i32* @eax, align 4
  %v5_271ba = mul i32 %v0_271ba, 2
  %v20_271ba = and i32 %v5_271ba, 254
  %v22_271ba = and i32 %v0_271ba, -256
  %v23_271ba = or i32 %v20_271ba, %v22_271ba
  store i32 %v23_271ba, i32* @eax, align 4
  %v0_271bc = call i32 @function_27225()
  ret i32 %v0_271bc

; uselistorder directives
  uselistorder i32 %v0_271ba, { 1, 0 }
  uselistorder i32 254, { 0, 3, 1, 4, 2 }
}

define i32 @function_271be() local_unnamed_addr {
dec_label_pc_271be:
  %v0_271d2 = load i32, i32* @ebp, align 4
  %v1_271d9 = add i32 %v0_271d2, -52
  %v2_271d9 = inttoptr i32 %v1_271d9 to i32*
  %v3_271d9 = load i32, i32* %v2_271d9, align 4
  %v1_271e0 = add i32 %v0_271d2, -44
  %v2_271e0 = inttoptr i32 %v1_271e0 to i32*
  %v3_271e0 = load i32, i32* %v2_271e0, align 4
  %v2_271e6 = call i32 @unknown_4eefd(i32 %v3_271e0, i32 %v3_271d9)
  store i32 %v2_271e6, i32* @eax, align 4
  %v0_271eb = call i32 @function_27225()
  ret i32 %v0_271eb

; uselistorder directives
  uselistorder i32 ()* @function_27225, { 18, 6, 5, 17, 16, 7, 15, 14, 4, 13, 12, 3, 2, 1, 11, 0, 10, 9, 8 }
  uselistorder i32 (i32, i32)* @unknown_4eefd, { 12, 4, 11, 10, 5, 9, 8, 3, 7, 6, 2, 1, 0 }
}

define i32 @function_271ed(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_271ed:
  %v0_27205 = load i32, i32* @ebp, align 4
  %v1_27213 = add i32 %v0_27205, -48
  %v2_27213 = inttoptr i32 %v1_27213 to i32*
  %v3_27213 = load i32, i32* %v2_27213, align 4
  ret i32 %v3_27213
}

define i32 @function_2721a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2721a:
  %v0_2721a = load i32, i32* @ebp, align 4
  %v1_2721a = add i32 %v0_2721a, -44
  %v2_2721a = inttoptr i32 %v1_2721a to i32*
  %v3_2721a = load i32, i32* %v2_2721a, align 4
  %v1_27220 = call i32 @unknown_4ef57(i32 %v3_2721a)
  ret i32 %v1_27220
}

define i32 @function_27225() local_unnamed_addr {
dec_label_pc_27225:
  %v0_27225 = load i32, i32* @ebp, align 4
  %v1_27225 = add i32 %v0_27225, -28
  %v2_27225 = inttoptr i32 %v1_27225 to i32*
  %v3_27225 = load i32, i32* %v2_27225, align 4
  %v1_27228 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27228 = icmp eq i32 %v1_27228, %v3_27225
  br i1 %v3_27228, label %bb, label %dec_label_pc_27225.dec_label_pc_27231_crit_edge

dec_label_pc_27225.dec_label_pc_27231_crit_edge:  ; preds = %dec_label_pc_27225
  %v2_2722f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27231

bb:                                               ; preds = %dec_label_pc_27225
  %v1_2722f = call i32 @function_27236()
  br label %dec_label_pc_27231

dec_label_pc_27231:                               ; preds = %dec_label_pc_27225.dec_label_pc_27231_crit_edge, %bb
  %v2_2722f = phi i32 [ %v2_2722f.pre, %dec_label_pc_27225.dec_label_pc_27231_crit_edge ], [ %v1_2722f, %bb ]
  ret i32 %v2_2722f

; uselistorder directives
  uselistorder label %dec_label_pc_27231, { 1, 0 }
}

define i32 @function_27234(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27234:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27236() local_unnamed_addr {
dec_label_pc_27236:
  %v0_2723d = load i32, i32* @eax, align 4
  ret i32 %v0_2723d
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvSsEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_27290:
  %v1_272c6 = call i32 @unknown_49d30(i32 %arg3)
  %v3_272dd = call i32 @unknown_4f4ea(i32 %arg2, i32 %v1_272c6, i32 1)
  ret i32 %v3_272dd
}

define i32 @function_272e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_272e4:
  %v0_272e5 = load i32, i32* @eax, align 4
  %v1_272e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_272e5 = xor i32 %v1_272e5, %v0_272e5
  %v3_272e5 = icmp eq i32 %v2_272e5, 0
  store i32 %v2_272e5, i32* @eax, align 4
  br i1 %v3_272e5, label %bb, label %dec_label_pc_272ee

bb:                                               ; preds = %dec_label_pc_272e4
  %v1_272ec = call i32 @function_272f3()
  br label %dec_label_pc_272ee

dec_label_pc_272ee:                               ; preds = %bb, %dec_label_pc_272e4
  %v2_272ec = phi i32 [ %v1_272ec, %bb ], [ %v2_272e5, %dec_label_pc_272e4 ]
  ret i32 %v2_272ec
}

define i32 @function_272f3() local_unnamed_addr {
dec_label_pc_272f3:
  %v0_272f4 = load i32, i32* @eax, align 4
  ret i32 %v0_272f4
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_272f5:
  %v1_2732b = call i32 @unknown_49e04(i32 %arg3)
  %v3_27342 = call i32 @unknown_4f599(i32 %arg2, i32 %v1_2732b, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27353

bb:                                               ; preds = %dec_label_pc_272f5
  %v1_27351 = call i32 @function_27358()
  br label %dec_label_pc_27353

dec_label_pc_27353:                               ; preds = %bb, %dec_label_pc_272f5
  %v2_27351 = phi i32 [ %v1_27351, %bb ], [ 0, %dec_label_pc_272f5 ]
  ret i32 %v2_27351
}

define i32 @function_27358() local_unnamed_addr {
dec_label_pc_27358:
  %v0_27359 = load i32, i32* @eax, align 4
  ret i32 %v0_27359
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2735a:
  ret i32 %arg3
}

define i32 @function_27394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27394:
  %eax.global-to-local = alloca i32, align 4
  %v3_27394 = load i32, i32* @eax, align 4
  %v11_27397 = and i32 %v3_27394, -248
  store i32 %v11_27397, i32* %eax.global-to-local, align 4
  %v1_27399 = inttoptr i32 %v11_27397 to i32*
  %v2_27399 = load i32, i32* %v1_27399, align 8
  %v4_27399 = add i32 %v2_27399, %v11_27397
  store i32 %v4_27399, i32* %v1_27399, align 8
  %v0_2739b = load i32, i32* %eax.global-to-local, align 4
  %v1_2739b = inttoptr i32 %v0_2739b to i8*
  %v2_2739b = load i8, i8* %v1_2739b, align 1
  %v4_2739b = trunc i32 %v0_2739b to i8
  %v5_2739b = add i8 %v2_2739b, %v4_2739b
  store i8 %v5_2739b, i8* %v1_2739b, align 1
  %v0_2739d = load i32, i32* %eax.global-to-local, align 4
  %v0_273a1 = load i32, i32* @ebp, align 4
  %v1_273a1 = add i32 %v0_273a1, -32
  %v2_273a1 = inttoptr i32 %v1_273a1 to i32*
  %v3_273a1 = load i32, i32* %v2_273a1, align 4
  store i32 %v3_273a1, i32* %eax.global-to-local, align 4
  %v2_273a7 = call i32 @unknown_4f648(i32 %v3_273a1, i32 %v0_2739d)
  store i32 %v2_273a7, i32* %eax.global-to-local, align 4
  %v0_273ac = load i32, i32* @ebp, align 4
  %v1_273ac = add i32 %v0_273ac, -12
  %v2_273ac = inttoptr i32 %v1_273ac to i32*
  %v3_273ac = load i32, i32* %v2_273ac, align 4
  store i32 %v3_273ac, i32* %eax.global-to-local, align 4
  %v1_273af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_273af = xor i32 %v1_273af, %v3_273ac
  %v3_273af = icmp eq i32 %v2_273af, 0
  store i32 %v2_273af, i32* @eax, align 4
  br i1 %v3_273af, label %bb, label %dec_label_pc_273b8

bb:                                               ; preds = %dec_label_pc_27394
  %v1_273b6 = call i32 @function_273bd()
  store i32 %v1_273b6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_273b8

dec_label_pc_273b8:                               ; preds = %bb, %dec_label_pc_27394
  %v2_273b6 = phi i32 [ %v1_273b6, %bb ], [ %v2_273af, %dec_label_pc_27394 ]
  ret i32 %v2_273b6

; uselistorder directives
  uselistorder i32 %v11_27397, { 0, 2, 1 }
}

define i32 @function_273bd() local_unnamed_addr {
dec_label_pc_273bd:
  %v0_273be = load i32, i32* @eax, align 4
  ret i32 %v0_273be
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvbEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_273bf:
  %eax.global-to-local = alloca i32, align 4
  %v5_273bf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_273bf
}

define i32 @function_273c1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_273c1:
  %v0_273c5 = load i32, i32* @ebp, align 4
  %v1_273c5 = add i32 %v0_273c5, 8
  %v2_273c5 = inttoptr i32 %v1_273c5 to i32*
  %v3_273c5 = load i32, i32* %v2_273c5, align 4
  %v2_273c8 = add i32 %v0_273c5, -28
  %v3_273c8 = inttoptr i32 %v2_273c8 to i32*
  store i32 %v3_273c5, i32* %v3_273c8, align 4
  %v0_273cb = load i32, i32* @ebp, align 4
  %v1_273cb = add i32 %v0_273cb, 12
  %v2_273cb = inttoptr i32 %v1_273cb to i32*
  %v3_273cb = load i32, i32* %v2_273cb, align 4
  %v2_273ce = add i32 %v0_273cb, -32
  %v3_273ce = inttoptr i32 %v2_273ce to i32*
  store i32 %v3_273cb, i32* %v3_273ce, align 4
  %v0_273d1 = load i32, i32* @ebp, align 4
  %v1_273d1 = add i32 %v0_273d1, 16
  %v2_273d1 = inttoptr i32 %v1_273d1 to i32*
  %v3_273d1 = load i32, i32* %v2_273d1, align 4
  %v2_273d4 = add i32 %v0_273d1, -36
  %v3_273d4 = inttoptr i32 %v2_273d4 to i32*
  store i32 %v3_273d1, i32* %v3_273d4, align 4
  %v0_273d7 = load i32, i32* @ebp, align 4
  %v1_273d7 = add i32 %v0_273d7, 20
  %v2_273d7 = inttoptr i32 %v1_273d7 to i32*
  %v3_273d7 = load i32, i32* %v2_273d7, align 4
  %v2_273da = add i32 %v0_273d7, -40
  %v3_273da = inttoptr i32 %v2_273da to i32*
  store i32 %v3_273d7, i32* %v3_273da, align 4
  %v0_273dd = load i32, i32* @ebp, align 4
  %v1_273dd = add i32 %v0_273dd, 24
  %v2_273dd = inttoptr i32 %v1_273dd to i8*
  %v3_273dd = load i8, i8* %v2_273dd, align 1
  %v3_273e1 = add i32 %v0_273dd, -41
  %v4_273e1 = inttoptr i32 %v3_273e1 to i8*
  store i8 %v3_273dd, i8* %v4_273e1, align 1
  %v0_273e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_273ea = load i32, i32* @ebp, align 4
  %v2_273ea = add i32 %v1_273ea, -12
  %v3_273ea = inttoptr i32 %v2_273ea to i32*
  store i32 %v0_273e4, i32* %v3_273ea, align 4
  %v0_273ef = load i32, i32* @ebp, align 4
  %v1_273ef = add i32 %v0_273ef, -36
  %v2_273ef = inttoptr i32 %v1_273ef to i32*
  %v3_273ef = load i32, i32* %v2_273ef, align 4
  %v1_273f5 = call i32 @unknown_49faa(i32 %v3_273ef)
  %v0_27406 = load i32, i32* @ebp, align 4
  %v1_27406 = add i32 %v0_27406, -32
  %v2_27406 = inttoptr i32 %v1_27406 to i32*
  %v3_27406 = load i32, i32* %v2_27406, align 4
  %v3_2740c = call i32 @unknown_4f6f7(i32 %v3_27406, i32 %v1_273f5, i32 1)
  %v0_27411 = load i32, i32* @ebp, align 4
  %v1_27411 = add i32 %v0_27411, -12
  %v2_27411 = inttoptr i32 %v1_27411 to i32*
  %v3_27411 = load i32, i32* %v2_27411, align 4
  %v1_27414 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27414 = xor i32 %v1_27414, %v3_27411
  %v3_27414 = icmp eq i32 %v2_27414, 0
  store i32 %v2_27414, i32* @eax, align 4
  br i1 %v3_27414, label %bb, label %dec_label_pc_2741d

bb:                                               ; preds = %dec_label_pc_273c1
  %v1_2741b = call i32 @function_27422()
  br label %dec_label_pc_2741d

dec_label_pc_2741d:                               ; preds = %bb, %dec_label_pc_273c1
  %v4_2741b = phi i32 [ %v1_2741b, %bb ], [ %v2_27414, %dec_label_pc_273c1 ]
  ret i32 %v4_2741b
}

define i32 @function_27422() local_unnamed_addr {
dec_label_pc_27422:
  %v0_27423 = load i32, i32* @eax, align 4
  ret i32 %v0_27423
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvxEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27424:
  ret i32 %arg4
}

define i32 @function_27444(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27444:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_27444 = load i32, i32* @ebp, align 4
  %v1_27444 = add i32 %v0_27444, 1
  store i32 %v1_27444, i32* @ebp, align 4
  %v0_27445 = load i32, i32* @eax, align 4
  %v1_27445 = add i32 %v0_27445, -1587161275
  %v2_27445 = inttoptr i32 %v1_27445 to i8*
  %v3_27445 = load i8, i8* %v2_27445, align 1
  %v4_27445 = load i32, i32* @ecx, align 4
  %v5_27445 = trunc i32 %v4_27445 to i8
  %v6_27445 = load i1, i1* @cf, align 1
  %v7_27445 = zext i1 %v6_27445 to i8
  %v8_27445 = sub i8 %v3_27445, %v5_27445
  %v9_27445 = add i8 %v8_27445, %v7_27445
  %v19_27445 = sub i8 %v8_27445, %v7_27445
  %v20_27445 = icmp ult i8 %v3_27445, %v19_27445
  %v21_27445 = icmp ne i8 %v5_27445, -1
  %v22_27445 = or i1 %v21_27445, %v20_27445
  %v23_27445 = icmp ult i8 %v3_27445, %v5_27445
  %v24_27445 = select i1 %v6_27445, i1 %v22_27445, i1 %v23_27445
  store i1 %v24_27445, i1* %cf.global-to-local, align 1
  store i8 %v9_27445, i8* %v2_27445, align 1
  %v0_2744b = load i32, i32* @eax, align 4
  %v1_2744b = trunc i32 %v0_2744b to i8
  %v2_2744b = load i1, i1* %cf.global-to-local, align 1
  %v3_2744b = zext i1 %v2_2744b to i8
  %v4_2744b = add i8 %v3_2744b, %v1_2744b
  %v19_2744b = icmp ule i8 %v4_2744b, %v1_2744b
  %v21_2744b = icmp eq i1 %v2_2744b, %v19_2744b
  store i1 %v21_2744b, i1* %cf.global-to-local, align 1
  %v22_2744b = zext i8 %v4_2744b to i32
  %v24_2744b = and i32 %v0_2744b, -256
  %v25_2744b = or i32 %v22_2744b, %v24_2744b
  store i32 %v25_2744b, i32* %eax.global-to-local, align 4
  %v1_2744d = inttoptr i32 %v25_2744b to i8*
  %v2_2744d = load i8, i8* %v1_2744d, align 1
  %v5_2744d = add i8 %v2_2744d, %v4_2744b
  store i8 %v5_2744d, i8* %v1_2744d, align 1
  %v0_2744f = load i32, i32* %eax.global-to-local, align 4
  %v1_2744f = load i32, i32* @ebp, align 4
  %v2_2744f = add i32 %v1_2744f, -12
  %v3_2744f = inttoptr i32 %v2_2744f to i32*
  store i32 %v0_2744f, i32* %v3_2744f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_27454 = load i32, i32* @ebp, align 4
  %v1_27454 = add i32 %v0_27454, -36
  %v2_27454 = inttoptr i32 %v1_27454 to i32*
  %v3_27454 = load i32, i32* %v2_27454, align 4
  store i32 %v3_27454, i32* %eax.global-to-local, align 4
  %v1_2745a = call i32 @unknown_4a072(i32 %v3_27454)
  store i32 %v1_2745a, i32* %eax.global-to-local, align 4
  %v0_2746b = load i32, i32* @ebp, align 4
  %v1_2746b = add i32 %v0_2746b, -32
  %v2_2746b = inttoptr i32 %v1_2746b to i32*
  %v3_2746b = load i32, i32* %v2_2746b, align 4
  store i32 %v3_2746b, i32* %eax.global-to-local, align 4
  %v3_27471 = call i32 @unknown_4f7a0(i32 %v3_2746b, i32 %v1_2745a, i32 1)
  store i32 %v3_27471, i32* %eax.global-to-local, align 4
  %v0_27476 = load i32, i32* @ebp, align 4
  %v1_27476 = add i32 %v0_27476, -12
  %v2_27476 = inttoptr i32 %v1_27476 to i32*
  %v3_27476 = load i32, i32* %v2_27476, align 4
  store i32 %v3_27476, i32* %eax.global-to-local, align 4
  %v1_27479 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27479 = xor i32 %v1_27479, %v3_27476
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_27479 = icmp eq i32 %v2_27479, 0
  store i32 %v2_27479, i32* @eax, align 4
  br i1 %v3_27479, label %bb, label %dec_label_pc_27482

bb:                                               ; preds = %dec_label_pc_27444
  %v1_27480 = call i32 @function_27487()
  store i32 %v1_27480, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27482

dec_label_pc_27482:                               ; preds = %bb, %dec_label_pc_27444
  %v2_27480 = phi i32 [ %v1_27480, %bb ], [ %v2_27479, %dec_label_pc_27444 ]
  ret i32 %v2_27480

; uselistorder directives
  uselistorder i8 %v4_2744b, { 0, 2, 1 }
  uselistorder i8 %v1_2744b, { 1, 0 }
  uselistorder i8 %v5_27445, { 1, 0, 2 }
}

define i32 @function_27487() local_unnamed_addr {
dec_label_pc_27487:
  %v0_27488 = load i32, i32* @eax, align 4
  ret i32 %v0_27488
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvdEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27489:
  ret i32 %arg3
}

define i32 @function_274a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_274a2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_274a2 = load i32, i32* @ebp, align 4
  %v0_274a3 = load i32, i32* @eax, align 4
  %v1_274a3 = trunc i32 %v0_274a3 to i8
  %v2_274a3 = load i1, i1* @cf, align 1
  %v3_274a3 = zext i1 %v2_274a3 to i8
  %v4_274a3 = add i8 %v1_274a3, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_274a3 = add i8 %v4_274a3, %v3_274a3
  %v20_274a3 = add i8 %v1_274a3, -119
  %v21_274a3 = add i8 %v20_274a3, %v3_274a3
  %v22_274a3 = icmp ule i8 %v21_274a3, %v1_274a3
  %v23_274a3 = icmp ugt i8 %v1_274a3, 118
  %v24_274a3 = select i1 %v2_274a3, i1 %v22_274a3, i1 %v23_274a3
  store i1 %v24_274a3, i1* %cf.global-to-local, align 1
  %v25_274a3 = zext i8 %v5_274a3 to i32
  %v27_274a3 = and i32 %v0_274a3, -256
  %v28_274a3 = or i32 %v25_274a3, %v27_274a3
  store i32 %v28_274a3, i32* %eax.global-to-local, align 4
  %v1_274a5 = add i32 %v0_274a2, 2
  store i32 %v1_274a5, i32* @ebp, align 4
  %v1_274aa = add i32 %v28_274a3, -1587161275
  %v2_274aa = inttoptr i32 %v1_274aa to i8*
  %v3_274aa = load i8, i8* %v2_274aa, align 1
  %v4_274aa = load i32, i32* @ecx, align 4
  %v5_274aa = trunc i32 %v4_274aa to i8
  %v7_274aa = zext i1 %v24_274a3 to i8
  %v8_274aa = sub i8 %v3_274aa, %v5_274aa
  %v9_274aa = add i8 %v8_274aa, %v7_274aa
  %v19_274aa = sub i8 %v8_274aa, %v7_274aa
  %v20_274aa = icmp ult i8 %v3_274aa, %v19_274aa
  %v21_274aa = icmp ne i8 %v5_274aa, -1
  %v22_274aa = or i1 %v21_274aa, %v20_274aa
  %v23_274aa = icmp ult i8 %v3_274aa, %v5_274aa
  %v24_274aa = select i1 %v24_274a3, i1 %v22_274aa, i1 %v23_274aa
  store i1 %v24_274aa, i1* %cf.global-to-local, align 1
  store i8 %v9_274aa, i8* %v2_274aa, align 1
  %v0_274b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_274b0 = trunc i32 %v0_274b0 to i8
  %v2_274b0 = load i1, i1* %cf.global-to-local, align 1
  %v3_274b0 = zext i1 %v2_274b0 to i8
  %v4_274b0 = add i8 %v3_274b0, %v1_274b0
  %v19_274b0 = icmp ule i8 %v4_274b0, %v1_274b0
  %v21_274b0 = icmp eq i1 %v2_274b0, %v19_274b0
  store i1 %v21_274b0, i1* %cf.global-to-local, align 1
  %v22_274b0 = zext i8 %v4_274b0 to i32
  %v24_274b0 = and i32 %v0_274b0, -256
  %v25_274b0 = or i32 %v22_274b0, %v24_274b0
  store i32 %v25_274b0, i32* %eax.global-to-local, align 4
  %v1_274b2 = inttoptr i32 %v25_274b0 to i8*
  %v2_274b2 = load i8, i8* %v1_274b2, align 1
  %v5_274b2 = add i8 %v2_274b2, %v4_274b0
  store i8 %v5_274b2, i8* %v1_274b2, align 1
  %v0_274b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_274b4 = load i32, i32* @ebp, align 4
  %v2_274b4 = add i32 %v1_274b4, -12
  %v3_274b4 = inttoptr i32 %v2_274b4 to i32*
  store i32 %v0_274b4, i32* %v3_274b4, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_274b9 = load i32, i32* @ebp, align 4
  %v1_274b9 = add i32 %v0_274b9, -36
  %v2_274b9 = inttoptr i32 %v1_274b9 to i32*
  %v3_274b9 = load i32, i32* %v2_274b9, align 4
  store i32 %v3_274b9, i32* %eax.global-to-local, align 4
  %v1_274bf = call i32 @unknown_4a13b(i32 %v3_274b9)
  store i32 %v1_274bf, i32* %eax.global-to-local, align 4
  %v0_274d0 = load i32, i32* @ebp, align 4
  %v1_274d0 = add i32 %v0_274d0, -32
  %v2_274d0 = inttoptr i32 %v1_274d0 to i32*
  %v3_274d0 = load i32, i32* %v2_274d0, align 4
  store i32 %v3_274d0, i32* %eax.global-to-local, align 4
  %v3_274d6 = call i32 @unknown_4f84d(i32 %v3_274d0, i32 %v1_274bf, i32 1)
  store i32 %v3_274d6, i32* %eax.global-to-local, align 4
  %v0_274db = load i32, i32* @ebp, align 4
  %v1_274db = add i32 %v0_274db, -12
  %v2_274db = inttoptr i32 %v1_274db to i32*
  %v3_274db = load i32, i32* %v2_274db, align 4
  store i32 %v3_274db, i32* %eax.global-to-local, align 4
  %v1_274de = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_274de = xor i32 %v1_274de, %v3_274db
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_274de = icmp eq i32 %v2_274de, 0
  store i32 %v2_274de, i32* @eax, align 4
  br i1 %v3_274de, label %bb, label %dec_label_pc_274e7

bb:                                               ; preds = %dec_label_pc_274a2
  %v1_274e5 = call i32 @function_274ec()
  store i32 %v1_274e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_274e7

dec_label_pc_274e7:                               ; preds = %bb, %dec_label_pc_274a2
  %v3_274e5 = phi i32 [ %v1_274e5, %bb ], [ %v2_274de, %dec_label_pc_274a2 ]
  ret i32 %v3_274e5

; uselistorder directives
  uselistorder i8 %v4_274b0, { 0, 2, 1 }
  uselistorder i8 %v1_274b0, { 1, 0 }
  uselistorder i8 %v8_274aa, { 1, 0 }
  uselistorder i8 %v7_274aa, { 1, 0 }
  uselistorder i8 %v5_274aa, { 1, 0, 2 }
  uselistorder i1 %v24_274a3, { 1, 0, 2 }
}

define i32 @function_274ec() local_unnamed_addr {
dec_label_pc_274ec:
  %v0_274ed = load i32, i32* @eax, align 4
  ret i32 %v0_274ed
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSsEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_274ee:
  ret i32 %arg4
}

define i32 @function_2750e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2750e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2750e = load i32, i32* @ebp, align 4
  %v1_2750e = add i32 %v0_2750e, 1
  store i32 %v1_2750e, i32* @ebp, align 4
  %v0_2750f = load i32, i32* @eax, align 4
  %v1_2750f = add i32 %v0_2750f, -1587161275
  %v2_2750f = inttoptr i32 %v1_2750f to i8*
  %v3_2750f = load i8, i8* %v2_2750f, align 1
  %v4_2750f = load i32, i32* @ecx, align 4
  %v5_2750f = trunc i32 %v4_2750f to i8
  %v6_2750f = load i1, i1* @cf, align 1
  %v7_2750f = zext i1 %v6_2750f to i8
  %v8_2750f = sub i8 %v3_2750f, %v5_2750f
  %v9_2750f = add i8 %v8_2750f, %v7_2750f
  %v19_2750f = sub i8 %v8_2750f, %v7_2750f
  %v20_2750f = icmp ult i8 %v3_2750f, %v19_2750f
  %v21_2750f = icmp ne i8 %v5_2750f, -1
  %v22_2750f = or i1 %v21_2750f, %v20_2750f
  %v23_2750f = icmp ult i8 %v3_2750f, %v5_2750f
  %v24_2750f = select i1 %v6_2750f, i1 %v22_2750f, i1 %v23_2750f
  store i1 %v24_2750f, i1* %cf.global-to-local, align 1
  store i8 %v9_2750f, i8* %v2_2750f, align 1
  %v0_27515 = load i32, i32* @eax, align 4
  %v1_27515 = trunc i32 %v0_27515 to i8
  %v2_27515 = load i1, i1* %cf.global-to-local, align 1
  %v3_27515 = zext i1 %v2_27515 to i8
  %v4_27515 = add i8 %v3_27515, %v1_27515
  %v19_27515 = icmp ule i8 %v4_27515, %v1_27515
  %v21_27515 = icmp eq i1 %v2_27515, %v19_27515
  store i1 %v21_27515, i1* %cf.global-to-local, align 1
  %v22_27515 = zext i8 %v4_27515 to i32
  %v24_27515 = and i32 %v0_27515, -256
  %v25_27515 = or i32 %v22_27515, %v24_27515
  store i32 %v25_27515, i32* %eax.global-to-local, align 4
  %v1_27517 = inttoptr i32 %v25_27515 to i8*
  %v2_27517 = load i8, i8* %v1_27517, align 1
  %v5_27517 = add i8 %v2_27517, %v4_27515
  store i8 %v5_27517, i8* %v1_27517, align 1
  %v0_27519 = load i32, i32* %eax.global-to-local, align 4
  %v1_27519 = load i32, i32* @ebp, align 4
  %v2_27519 = add i32 %v1_27519, -12
  %v3_27519 = inttoptr i32 %v2_27519 to i32*
  store i32 %v0_27519, i32* %v3_27519, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2751e = load i32, i32* @ebp, align 4
  %v1_2751e = add i32 %v0_2751e, -36
  %v2_2751e = inttoptr i32 %v1_2751e to i32*
  %v3_2751e = load i32, i32* %v2_2751e, align 4
  store i32 %v3_2751e, i32* %eax.global-to-local, align 4
  %v1_27524 = call i32 @unknown_4a4af(i32 %v3_2751e)
  store i32 %v1_27524, i32* %eax.global-to-local, align 4
  %v0_27535 = load i32, i32* @ebp, align 4
  %v1_27535 = add i32 %v0_27535, -32
  %v2_27535 = inttoptr i32 %v1_27535 to i32*
  %v3_27535 = load i32, i32* %v2_27535, align 4
  store i32 %v3_27535, i32* %eax.global-to-local, align 4
  %v3_2753b = call i32 @unknown_4f8f4(i32 %v3_27535, i32 %v1_27524, i32 1)
  store i32 %v3_2753b, i32* %eax.global-to-local, align 4
  %v0_27540 = load i32, i32* @ebp, align 4
  %v1_27540 = add i32 %v0_27540, -12
  %v2_27540 = inttoptr i32 %v1_27540 to i32*
  %v3_27540 = load i32, i32* %v2_27540, align 4
  store i32 %v3_27540, i32* %eax.global-to-local, align 4
  %v1_27543 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27543 = xor i32 %v1_27543, %v3_27540
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_27543 = icmp eq i32 %v2_27543, 0
  store i32 %v2_27543, i32* @eax, align 4
  br i1 %v3_27543, label %bb, label %dec_label_pc_2754c

bb:                                               ; preds = %dec_label_pc_2750e
  %v1_2754a = call i32 @function_27551()
  store i32 %v1_2754a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2754c

dec_label_pc_2754c:                               ; preds = %bb, %dec_label_pc_2750e
  %v2_2754a = phi i32 [ %v1_2754a, %bb ], [ %v2_27543, %dec_label_pc_2750e ]
  ret i32 %v2_2754a

; uselistorder directives
  uselistorder i8 %v4_27515, { 0, 2, 1 }
  uselistorder i8 %v1_27515, { 1, 0 }
  uselistorder i8 %v5_2750f, { 1, 0, 2 }
}

define i32 @function_27551() local_unnamed_addr {
dec_label_pc_27551:
  %v0_27552 = load i32, i32* @eax, align 4
  ret i32 %v0_27552
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSD_EENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_27553:
  %eax.global-to-local = alloca i32, align 4
  %v5_27553 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_27553
}

define i32 @function_27554(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27554:
  %v2_27554 = load i32, i32* @eax, align 4
  ret i32 %v2_27554
}

define i32 @function_27592(i32 %arg1) local_unnamed_addr {
dec_label_pc_27592:
  %v2_27592 = load i32, i32* @eax, align 4
  %v4_27592 = mul i32 %v2_27592, 2
  %v21_27592 = inttoptr i32 %v2_27592 to i32*
  store i32 %v4_27592, i32* %v21_27592, align 4
  %v2_27594 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_27594 = load i32, i32* @eax, align 4
  %v4_27594 = trunc i32 %v3_27594 to i8
  %v5_27594 = add i8 %v4_27594, %v2_27594
  %v21_27594 = inttoptr i32 %v3_27594 to i8*
  store i8 %v5_27594, i8* %v21_27594, align 1
  %v0_27596 = load i32, i32* @eax, align 4
  %v0_2759a = load i32, i32* @ebp, align 4
  %v1_2759a = add i32 %v0_2759a, -32
  %v2_2759a = inttoptr i32 %v1_2759a to i32*
  %v3_2759a = load i32, i32* %v2_2759a, align 4
  %v2_275a0 = call i32 @unknown_4f9b3(i32 %v3_2759a, i32 %v0_27596)
  %v0_275a5 = load i32, i32* @ebp, align 4
  %v1_275a5 = add i32 %v0_275a5, -12
  %v2_275a5 = inttoptr i32 %v1_275a5 to i32*
  %v3_275a5 = load i32, i32* %v2_275a5, align 4
  %v1_275a8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_275a8 = xor i32 %v1_275a8, %v3_275a5
  %v3_275a8 = icmp eq i32 %v2_275a8, 0
  store i32 %v2_275a8, i32* @eax, align 4
  br i1 %v3_275a8, label %bb, label %dec_label_pc_275b1

bb:                                               ; preds = %dec_label_pc_27592
  %v1_275af = call i32 @function_275b6()
  br label %dec_label_pc_275b1

dec_label_pc_275b1:                               ; preds = %bb, %dec_label_pc_27592
  %v2_275af = phi i32 [ %v1_275af, %bb ], [ %v2_275a8, %dec_label_pc_27592 ]
  ret i32 %v2_275af

; uselistorder directives
  uselistorder i32 %v2_27592, { 1, 0 }
}

define i32 @function_275b6() local_unnamed_addr {
dec_label_pc_275b6:
  %v0_275b7 = load i32, i32* @eax, align 4
  ret i32 %v0_275b7
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSI_EENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_275b8:
  %eax.global-to-local = alloca i32, align 4
  %v17_275bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_275bb
}

define i32 @function_275bf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_275bf:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_275bf = load i32, i32* @ebp, align 4
  %v1_275bf = add i32 %v0_275bf, 1
  store i32 %v1_275bf, i32* %ebp.global-to-local, align 4
  %v0_275c0 = load i32, i32* @ecx, align 4
  %v1_275c0 = add i32 %v0_275c0, 1166795845
  %v2_275c0 = inttoptr i32 %v1_275c0 to i8*
  %v3_275c0 = load i8, i8* %v2_275c0, align 1
  %v5_275c0 = trunc i32 %v0_275c0 to i8
  %v6_275c0 = or i8 %v3_275c0, %v5_275c0
  store i8 %v6_275c0, i8* %v2_275c0, align 1
  %v0_275c6 = load i32, i32* @eax, align 4
  %v2_275c6 = or i32 %v0_275c6, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_275c6, i32* %eax.global-to-local, align 4
  %v0_275c8 = load i32, i32* %ebp.global-to-local, align 4
  %v0_275c9 = load i32, i32* @ecx, align 4
  %v1_275c9 = add i32 %v0_275c9, -1
  store i32 %v1_275c9, i32* @ecx, align 4
  %v1_275cb = add i32 %v0_275c8, 2
  store i32 %v1_275cb, i32* %ebp.global-to-local, align 4
  %v1_275cc = add i32 %v0_275c9, 1166793796
  %v2_275cc = inttoptr i32 %v1_275cc to i8*
  %v3_275cc = load i8, i8* %v2_275cc, align 1
  %v5_275cc = trunc i32 %v1_275c9 to i8
  %v8_275cc = add i8 %v3_275cc, %v5_275cc
  %v28_275cc = icmp ult i8 %v8_275cc, %v3_275cc
  store i1 %v28_275cc, i1* %cf.global-to-local, align 1
  store i8 %v8_275cc, i8* %v2_275cc, align 1
  %v0_275d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_275d2 = trunc i32 %v0_275d2 to i8
  %v2_275d2 = load i1, i1* %cf.global-to-local, align 1
  %v3_275d2 = zext i1 %v2_275d2 to i8
  %v4_275d2 = add i8 %v1_275d2, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_275d2 = add i8 %v4_275d2, %v3_275d2
  %v20_275d2 = add i8 %v1_275d2, -119
  %v21_275d2 = add i8 %v20_275d2, %v3_275d2
  %v22_275d2 = icmp ule i8 %v21_275d2, %v1_275d2
  %v23_275d2 = icmp ugt i8 %v1_275d2, 118
  %v24_275d2 = select i1 %v2_275d2, i1 %v22_275d2, i1 %v23_275d2
  store i1 %v24_275d2, i1* %cf.global-to-local, align 1
  %v25_275d2 = zext i8 %v5_275d2 to i32
  %v27_275d2 = and i32 %v0_275d2, -256
  %v28_275d2 = or i32 %v25_275d2, %v27_275d2
  store i32 %v28_275d2, i32* %eax.global-to-local, align 4
  %v0_275d4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_275d4 = add i32 %v0_275d4, 1
  store i32 %v1_275d4, i32* @ebp, align 4
  %v1_275d9 = add i32 %v28_275d2, -1587161275
  %v2_275d9 = inttoptr i32 %v1_275d9 to i8*
  %v3_275d9 = load i8, i8* %v2_275d9, align 1
  %v4_275d9 = load i32, i32* @ecx, align 4
  %v5_275d9 = trunc i32 %v4_275d9 to i8
  %v7_275d9 = zext i1 %v24_275d2 to i8
  %v8_275d9 = sub i8 %v3_275d9, %v5_275d9
  %v9_275d9 = add i8 %v8_275d9, %v7_275d9
  %v19_275d9 = sub i8 %v8_275d9, %v7_275d9
  %v20_275d9 = icmp ult i8 %v3_275d9, %v19_275d9
  %v21_275d9 = icmp ne i8 %v5_275d9, -1
  %v22_275d9 = or i1 %v21_275d9, %v20_275d9
  %v23_275d9 = icmp ult i8 %v3_275d9, %v5_275d9
  %v24_275d9 = select i1 %v24_275d2, i1 %v22_275d9, i1 %v23_275d9
  store i1 %v24_275d9, i1* %cf.global-to-local, align 1
  store i8 %v9_275d9, i8* %v2_275d9, align 1
  %v0_275df = load i32, i32* %eax.global-to-local, align 4
  %v1_275df = trunc i32 %v0_275df to i8
  %v2_275df = load i1, i1* %cf.global-to-local, align 1
  %v3_275df = zext i1 %v2_275df to i8
  %v4_275df = add i8 %v3_275df, %v1_275df
  %v19_275df = icmp ule i8 %v4_275df, %v1_275df
  %v21_275df = icmp eq i1 %v2_275df, %v19_275df
  store i1 %v21_275df, i1* %cf.global-to-local, align 1
  %v22_275df = zext i8 %v4_275df to i32
  %v24_275df = and i32 %v0_275df, -256
  %v25_275df = or i32 %v22_275df, %v24_275df
  store i32 %v25_275df, i32* %eax.global-to-local, align 4
  %v1_275e1 = inttoptr i32 %v25_275df to i8*
  %v2_275e1 = load i8, i8* %v1_275e1, align 1
  %v5_275e1 = add i8 %v2_275e1, %v4_275df
  store i8 %v5_275e1, i8* %v1_275e1, align 1
  %v0_275e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_275e3 = load i32, i32* @ebp, align 4
  %v2_275e3 = add i32 %v1_275e3, -12
  %v3_275e3 = inttoptr i32 %v2_275e3 to i32*
  store i32 %v0_275e3, i32* %v3_275e3, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_275e8 = load i32, i32* @ebp, align 4
  %v1_275e8 = add i32 %v0_275e8, -36
  %v2_275e8 = inttoptr i32 %v1_275e8 to i32*
  %v3_275e8 = load i32, i32* %v2_275e8, align 4
  store i32 %v3_275e8, i32* %eax.global-to-local, align 4
  %v1_275ee = call i32 @unknown_4a6d9(i32 %v3_275e8)
  store i32 %v1_275ee, i32* %eax.global-to-local, align 4
  %v0_275ff = load i32, i32* @ebp, align 4
  %v1_275ff = add i32 %v0_275ff, -32
  %v2_275ff = inttoptr i32 %v1_275ff to i32*
  %v3_275ff = load i32, i32* %v2_275ff, align 4
  store i32 %v3_275ff, i32* %eax.global-to-local, align 4
  %v3_27605 = call i32 @unknown_4fa72(i32 %v3_275ff, i32 %v1_275ee, i32 1)
  store i32 %v3_27605, i32* %eax.global-to-local, align 4
  %v0_2760a = load i32, i32* @ebp, align 4
  %v1_2760a = add i32 %v0_2760a, -12
  %v2_2760a = inttoptr i32 %v1_2760a to i32*
  %v3_2760a = load i32, i32* %v2_2760a, align 4
  store i32 %v3_2760a, i32* %eax.global-to-local, align 4
  %v1_2760d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2760d = xor i32 %v1_2760d, %v3_2760a
  store i1 false, i1* @cf, align 1
  %v3_2760d = icmp eq i32 %v2_2760d, 0
  store i32 %v2_2760d, i32* @eax, align 4
  br i1 %v3_2760d, label %bb, label %dec_label_pc_27616

bb:                                               ; preds = %dec_label_pc_275bf
  %v1_27614 = call i32 @function_2761b()
  store i32 %v1_27614, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27616

dec_label_pc_27616:                               ; preds = %bb, %dec_label_pc_275bf
  %v3_27614 = phi i32 [ %v1_27614, %bb ], [ %v2_2760d, %dec_label_pc_275bf ]
  ret i32 %v3_27614

; uselistorder directives
  uselistorder i8 %v4_275df, { 0, 2, 1 }
  uselistorder i8 %v1_275df, { 1, 0 }
  uselistorder i8 %v8_275d9, { 1, 0 }
  uselistorder i8 %v7_275d9, { 1, 0 }
  uselistorder i8 %v5_275d9, { 1, 0, 2 }
  uselistorder i1 %v24_275d2, { 1, 0, 2 }
  uselistorder i8 %v3_275cc, { 1, 0 }
  uselistorder i32 -1587161275, { 1, 2, 3, 0, 4, 5, 6, 7 }
}

define i32 @function_2761b() local_unnamed_addr {
dec_label_pc_2761b:
  %v0_2761c = load i32, i32* @eax, align 4
  ret i32 %v0_2761c
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvbEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2761d:
  %v1_27653 = call i32 @unknown_4a7ee(i32 %arg3)
  %v3_2766a = call i32 @unknown_4fb31(i32 %arg2, i32 %v1_27653, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2767b

bb:                                               ; preds = %dec_label_pc_2761d
  %v1_27679 = call i32 @function_27680()
  br label %dec_label_pc_2767b

dec_label_pc_2767b:                               ; preds = %bb, %dec_label_pc_2761d
  %v2_27679 = phi i32 [ %v1_27679, %bb ], [ 0, %dec_label_pc_2761d ]
  ret i32 %v2_27679
}

define i32 @function_27680() local_unnamed_addr {
dec_label_pc_27680:
  %v0_27681 = load i32, i32* @eax, align 4
  ret i32 %v0_27681
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvxEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_27682:
  ret i32 %arg3
}

define i32 @function_276b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_276b8:
  %v0_276b8 = call i32 @unknown_4a8d7()
  %v0_276c9 = load i32, i32* @ebp, align 4
  %v1_276c9 = add i32 %v0_276c9, -32
  %v2_276c9 = inttoptr i32 %v1_276c9 to i32*
  %v3_276c9 = load i32, i32* %v2_276c9, align 4
  %v3_276cf = call i32 @unknown_4fbf0(i32 %v3_276c9, i32 %v0_276b8, i32 1)
  %v0_276d4 = load i32, i32* @ebp, align 4
  %v1_276d4 = add i32 %v0_276d4, -12
  %v2_276d4 = inttoptr i32 %v1_276d4 to i32*
  %v3_276d4 = load i32, i32* %v2_276d4, align 4
  %v1_276d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_276d7 = xor i32 %v1_276d7, %v3_276d4
  %v3_276d7 = icmp eq i32 %v2_276d7, 0
  store i32 %v2_276d7, i32* @eax, align 4
  br i1 %v3_276d7, label %bb, label %dec_label_pc_276e0

bb:                                               ; preds = %dec_label_pc_276b8
  %v1_276de = call i32 @function_276e5()
  br label %dec_label_pc_276e0

dec_label_pc_276e0:                               ; preds = %bb, %dec_label_pc_276b8
  %v2_276de = phi i32 [ %v1_276de, %bb ], [ %v2_276d7, %dec_label_pc_276b8 ]
  ret i32 %v2_276de
}

define i32 @function_276e5() local_unnamed_addr {
dec_label_pc_276e5:
  %v0_276e6 = load i32, i32* @eax, align 4
  ret i32 %v0_276e6
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvdEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_276e7:
  %v1_2771d = call i32 @unknown_4a9c7(i32 %arg3)
  ret i32 %v1_2771d
}

define i32 @function_27724(i32 %arg1) local_unnamed_addr {
dec_label_pc_27724:
  %eax.global-to-local = alloca i32, align 4
  %v0_27724 = load i32, i32* @eax, align 4
  %v11_27724 = and i32 %v0_27724, -248
  store i32 %v11_27724, i32* %eax.global-to-local, align 4
  %v1_27726 = inttoptr i32 %v11_27724 to i32*
  %v2_27726 = load i32, i32* %v1_27726, align 8
  %v4_27726 = add i32 %v2_27726, %v11_27724
  store i32 %v4_27726, i32* %v1_27726, align 8
  %v0_27728 = load i32, i32* %eax.global-to-local, align 4
  %v1_27728 = inttoptr i32 %v0_27728 to i8*
  %v2_27728 = load i8, i8* %v1_27728, align 1
  %v4_27728 = trunc i32 %v0_27728 to i8
  %v5_27728 = add i8 %v2_27728, %v4_27728
  store i8 %v5_27728, i8* %v1_27728, align 1
  %v0_2772a = load i32, i32* %eax.global-to-local, align 4
  %v0_2772e = load i32, i32* @ebp, align 4
  %v1_2772e = add i32 %v0_2772e, -32
  %v2_2772e = inttoptr i32 %v1_2772e to i32*
  %v3_2772e = load i32, i32* %v2_2772e, align 4
  store i32 %v3_2772e, i32* %eax.global-to-local, align 4
  %v2_27734 = call i32 @unknown_4fcaf(i32 %v3_2772e, i32 %v0_2772a)
  store i32 %v2_27734, i32* %eax.global-to-local, align 4
  %v0_27739 = load i32, i32* @ebp, align 4
  %v1_27739 = add i32 %v0_27739, -12
  %v2_27739 = inttoptr i32 %v1_27739 to i32*
  %v3_27739 = load i32, i32* %v2_27739, align 4
  store i32 %v3_27739, i32* %eax.global-to-local, align 4
  %v1_2773c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2773c = xor i32 %v1_2773c, %v3_27739
  %v3_2773c = icmp eq i32 %v2_2773c, 0
  store i32 %v2_2773c, i32* @eax, align 4
  br i1 %v3_2773c, label %bb, label %dec_label_pc_27745

bb:                                               ; preds = %dec_label_pc_27724
  %v1_27743 = call i32 @function_2774a()
  store i32 %v1_27743, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27745

dec_label_pc_27745:                               ; preds = %bb, %dec_label_pc_27724
  %v2_27743 = phi i32 [ %v1_27743, %bb ], [ %v2_2773c, %dec_label_pc_27724 ]
  ret i32 %v2_27743

; uselistorder directives
  uselistorder i32 %v11_27724, { 0, 2, 1 }
}

define i32 @function_2774a() local_unnamed_addr {
dec_label_pc_2774a:
  %v0_2774b = load i32, i32* @eax, align 4
  ret i32 %v0_2774b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2774c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27772

bb:                                               ; preds = %dec_label_pc_2774c
  %v2_27770 = call i32 @function_27777(i32 %arg1)
  br label %dec_label_pc_27772

dec_label_pc_27772:                               ; preds = %bb, %dec_label_pc_2774c
  %v3_27770 = phi i32 [ %v2_27770, %bb ], [ %arg1, %dec_label_pc_2774c ]
  ret i32 %v3_27770
}

define i32 @function_27777(i32 %arg1) local_unnamed_addr {
dec_label_pc_27777:
  %v0_27778 = load i32, i32* @eax, align 4
  ret i32 %v0_27778
}

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2777a:
  %v2_27794 = load i32, i32* %arg1, align 4
  store i32 %v2_27794, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_277a2

bb:                                               ; preds = %dec_label_pc_2777a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_277a0 = call i32 @function_277a7(i32 %tmp100)
  br label %dec_label_pc_277a2

dec_label_pc_277a2:                               ; preds = %bb, %dec_label_pc_2777a
  %v3_277a0 = phi i32 [ %v2_277a0, %bb ], [ %v2_27794, %dec_label_pc_2777a ]
  ret i32 %v3_277a0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_277a7(i32 %arg1) local_unnamed_addr {
dec_label_pc_277a7:
  %v4_277a7 = load i32, i32* @eax, align 4
  ret i32 %v4_277a7
}

define i32 @function_277a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_277a8:
  %v0_277a8 = load i32, i32* @eax, align 4
  ret i32 %v0_277a8
}

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_277aa:
  ret i32 0
}

define i32 @function_277d5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_277d5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_277d6() local_unnamed_addr {
dec_label_pc_277d6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_277d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_277d6 = add i32 %v0_277d6, -1
  store i32 %v1_277d6, i32* %ecx.global-to-local, align 4
  %v0_277d8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_277d8
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKSsEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_277da:
  %v2_27800 = load i32, i32* %arg1, align 4
  %v2_2780c = call i32 @unknown_4fdfc(i32 %v2_27800, i32 %arg2)
  store i32 %v2_2780c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2781d

bb:                                               ; preds = %dec_label_pc_277da
  %v1_2781b = call i32 @function_27822()
  br label %dec_label_pc_2781d

dec_label_pc_2781d:                               ; preds = %bb, %dec_label_pc_277da
  %v2_2781b = phi i32 [ %v1_2781b, %bb ], [ %v2_2780c, %dec_label_pc_277da ]
  ret i32 %v2_2781b
}

define i32 @function_27822() local_unnamed_addr {
dec_label_pc_27822:
  %v0_27823 = load i32, i32* @eax, align 4
  ret i32 %v0_27823
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl() local_unnamed_addr {
dec_label_pc_27824:
  %eax.global-to-local = alloca i32, align 4
  %v2_27825 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_27825
}

define i32 @function_2787a() local_unnamed_addr {
dec_label_pc_2787a:
  %v0_2787b = load i32, i32* @eax, align 4
  ret i32 %v0_2787b
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitISt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2787c:
  ret i32 %arg3
}

define i32 @function_27896(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27896:
  %eax.global-to-local = alloca i32, align 4
  %v0_27896 = load i32, i32* @eax, align 4
  %v1_27896 = trunc i32 %v0_27896 to i8
  %v2_27896 = load i1, i1* @cf, align 1
  %v3_27896 = zext i1 %v2_27896 to i8
  %v4_27896 = add i8 %v3_27896, %v1_27896
  %v22_27896 = zext i8 %v4_27896 to i32
  %v24_27896 = and i32 %v0_27896, -256
  %v25_27896 = or i32 %v22_27896, %v24_27896
  store i32 %v25_27896, i32* %eax.global-to-local, align 4
  %v1_27898 = inttoptr i32 %v25_27896 to i8*
  %v2_27898 = load i8, i8* %v1_27898, align 1
  %v5_27898 = add i8 %v2_27898, %v4_27896
  store i8 %v5_27898, i8* %v1_27898, align 1
  %v0_2789a = load i32, i32* %eax.global-to-local, align 4
  %v1_2789a = load i32, i32* @ebp, align 4
  %v2_2789a = add i32 %v1_2789a, -12
  %v3_2789a = inttoptr i32 %v2_2789a to i32*
  store i32 %v0_2789a, i32* %v3_2789a, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2789f = load i32, i32* @ebp, align 4
  %v1_2789f = add i32 %v0_2789f, -32
  %v2_2789f = inttoptr i32 %v1_2789f to i32*
  %v3_2789f = load i32, i32* %v2_2789f, align 4
  store i32 %v3_2789f, i32* %eax.global-to-local, align 4
  %v1_278a5 = call i32 @unknown_4dd64(i32 %v3_2789f)
  store i32 %v1_278a5, i32* %eax.global-to-local, align 4
  %v0_278b6 = load i32, i32* @ebp, align 4
  %v1_278b6 = add i32 %v0_278b6, -28
  %v2_278b6 = inttoptr i32 %v1_278b6 to i32*
  %v3_278b6 = load i32, i32* %v2_278b6, align 4
  store i32 %v3_278b6, i32* %eax.global-to-local, align 4
  %v3_278bc = call i32 @unknown_4ff1e(i32 %v3_278b6, i32 %v1_278a5, i32 1)
  store i32 %v3_278bc, i32* @eax, align 4
  %v0_278c1 = load i32, i32* @ebp, align 4
  %v1_278c1 = add i32 %v0_278c1, -12
  %v2_278c1 = inttoptr i32 %v1_278c1 to i32*
  %v3_278c1 = load i32, i32* %v2_278c1, align 4
  %v1_278c4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_278c4 = icmp eq i32 %v1_278c4, %v3_278c1
  br i1 %v3_278c4, label %bb, label %dec_label_pc_278cd

bb:                                               ; preds = %dec_label_pc_27896
  %v1_278cb = call i32 @function_278d2()
  store i32 %v1_278cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_278cd

dec_label_pc_278cd:                               ; preds = %bb, %dec_label_pc_27896
  %v2_278cb = phi i32 [ %v1_278cb, %bb ], [ %v3_278bc, %dec_label_pc_27896 ]
  ret i32 %v2_278cb
}

define i32 @function_278d2() local_unnamed_addr {
dec_label_pc_278d2:
  %v0_278d3 = load i32, i32* @eax, align 4
  ret i32 %v0_278d3
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKbEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_278d4:
  %v2_278fa = load i32, i32* %arg1, align 4
  %v2_27906 = call i32 @unknown_4ffc0(i32 %v2_278fa, i32 %arg2)
  store i32 %v2_27906, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27917

bb:                                               ; preds = %dec_label_pc_278d4
  %v1_27915 = call i32 @function_2791c()
  br label %dec_label_pc_27917

dec_label_pc_27917:                               ; preds = %bb, %dec_label_pc_278d4
  %v2_27915 = phi i32 [ %v1_27915, %bb ], [ %v2_27906, %dec_label_pc_278d4 ]
  ret i32 %v2_27915
}

define i32 @function_2791c() local_unnamed_addr {
dec_label_pc_2791c:
  %v0_2791d = load i32, i32* @eax, align 4
  ret i32 %v0_2791d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIS4_EEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2791e:
  ret i32 0
}

define i32 @function_27941(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27941:
  %v0_27941 = load i32, i32* @ebp, align 4
  %v1_27941 = add i32 %v0_27941, -28
  %v2_27941 = inttoptr i32 %v1_27941 to i32*
  %v3_27941 = load i32, i32* %v2_27941, align 4
  %v1_27944 = inttoptr i32 %v3_27941 to i32*
  %v2_27944 = load i32, i32* %v1_27944, align 4
  %v1_27946 = add i32 %v0_27941, -32
  %v2_27946 = inttoptr i32 %v1_27946 to i32*
  %v3_27946 = load i32, i32* %v2_27946, align 4
  %v2_27950 = call i32 @unknown_50040(i32 %v2_27944, i32 %v3_27946)
  store i32 %v2_27950, i32* @eax, align 4
  %v0_27955 = load i32, i32* @ebp, align 4
  %v1_27955 = add i32 %v0_27955, -12
  %v2_27955 = inttoptr i32 %v1_27955 to i32*
  %v3_27955 = load i32, i32* %v2_27955, align 4
  %v1_27958 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27958 = icmp eq i32 %v1_27958, %v3_27955
  br i1 %v3_27958, label %bb, label %dec_label_pc_27961

bb:                                               ; preds = %dec_label_pc_27941
  %v1_2795f = call i32 @function_27966()
  br label %dec_label_pc_27961

dec_label_pc_27961:                               ; preds = %bb, %dec_label_pc_27941
  %v2_2795f = phi i32 [ %v1_2795f, %bb ], [ %v2_27950, %dec_label_pc_27941 ]
  ret i32 %v2_2795f
}

define i32 @function_27966() local_unnamed_addr {
dec_label_pc_27966:
  %v0_27967 = load i32, i32* @eax, align 4
  ret i32 %v0_27967
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKdEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27968:
  %v2_2798e = load i32, i32* %arg1, align 4
  %v2_2799a = call i32 @unknown_500c6(i32 %v2_2798e, i32 %arg2)
  store i32 %v2_2799a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_279ab

bb:                                               ; preds = %dec_label_pc_27968
  %v1_279a9 = call i32 @function_279b0()
  br label %dec_label_pc_279ab

dec_label_pc_279ab:                               ; preds = %bb, %dec_label_pc_27968
  %v2_279a9 = phi i32 [ %v1_279a9, %bb ], [ %v2_2799a, %dec_label_pc_27968 ]
  ret i32 %v2_279a9
}

define i32 @function_279b0() local_unnamed_addr {
dec_label_pc_279b0:
  %v0_279b1 = load i32, i32* @eax, align 4
  ret i32 %v0_279b1
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKdEclISsEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_279b2:
  ret i32 0
}

define i32 @function_279e4() local_unnamed_addr {
dec_label_pc_279e4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_279e4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_279e4 = add i32 %v0_279e4, -1
  store i32 %v1_279e4, i32* %ecx.global-to-local, align 4
  %v0_279e6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_279e6
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitIKSt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_279e8:
  ret i32 %arg1
}

define i32 @function_279f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_279f4:
  %v0_279f4 = load i32, i32* @ebp, align 4
  %v1_279f4 = add i32 %v0_279f4, 12
  %v2_279f4 = inttoptr i32 %v1_279f4 to i32*
  %v3_279f4 = load i32, i32* %v2_279f4, align 4
  %v2_279f7 = add i32 %v0_279f4, -32
  %v3_279f7 = inttoptr i32 %v2_279f7 to i32*
  store i32 %v3_279f4, i32* %v3_279f7, align 4
  %v0_279fa = load i32, i32* @ebp, align 4
  %v1_279fa = add i32 %v0_279fa, 16
  %v2_279fa = inttoptr i32 %v1_279fa to i32*
  %v3_279fa = load i32, i32* %v2_279fa, align 4
  %v2_279fd = add i32 %v0_279fa, -36
  %v3_279fd = inttoptr i32 %v2_279fd to i32*
  store i32 %v3_279fa, i32* %v3_279fd, align 4
  %v0_27a00 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27a06 = load i32, i32* @ebp, align 4
  %v2_27a06 = add i32 %v1_27a06, -12
  %v3_27a06 = inttoptr i32 %v2_27a06 to i32*
  store i32 %v0_27a00, i32* %v3_27a06, align 4
  %v0_27a0b = load i32, i32* @ebp, align 4
  %v1_27a0b = add i32 %v0_27a0b, -28
  %v2_27a0b = inttoptr i32 %v1_27a0b to i32*
  %v3_27a0b = load i32, i32* %v2_27a0b, align 4
  %v1_27a0e = inttoptr i32 %v3_27a0b to i32*
  %v2_27a0e = load i32, i32* %v1_27a0e, align 4
  %v1_27a10 = add i32 %v0_27a0b, -32
  %v2_27a10 = inttoptr i32 %v1_27a10 to i32*
  %v3_27a10 = load i32, i32* %v2_27a10, align 4
  %v2_27a1a = call i32 @unknown_5017c(i32 %v2_27a0e, i32 %v3_27a10)
  store i32 %v2_27a1a, i32* @eax, align 4
  %v0_27a1f = load i32, i32* @ebp, align 4
  %v1_27a1f = add i32 %v0_27a1f, -12
  %v2_27a1f = inttoptr i32 %v1_27a1f to i32*
  %v3_27a1f = load i32, i32* %v2_27a1f, align 4
  %v1_27a22 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27a22 = icmp eq i32 %v1_27a22, %v3_27a1f
  br i1 %v3_27a22, label %bb, label %dec_label_pc_27a2b

bb:                                               ; preds = %dec_label_pc_279f4
  %v1_27a29 = call i32 @function_27a30()
  br label %dec_label_pc_27a2b

dec_label_pc_27a2b:                               ; preds = %bb, %dec_label_pc_279f4
  %v2_27a29 = phi i32 [ %v1_27a29, %bb ], [ %v2_27a1a, %dec_label_pc_279f4 ]
  ret i32 %v2_27a29
}

define i32 @function_27a30() local_unnamed_addr {
dec_label_pc_27a30:
  %v0_27a31 = load i32, i32* @eax, align 4
  ret i32 %v0_27a31
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKdEEE14internal_visitIKSt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a32:
  ret i32 %arg2
}

define i32 @function_27a7a() local_unnamed_addr {
dec_label_pc_27a7a:
  %v0_27a7b = load i32, i32* @eax, align 4
  ret i32 %v0_27a7b
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKdEclIbEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a7c:
  ret i32 %arg2
}

define i32 @function_27a90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a90:
  %eax.global-to-local = alloca i32, align 4
  %v0_27a90 = load i32, i32* @eax, align 4
  %v1_27a90 = trunc i32 %v0_27a90 to i8
  %v2_27a90 = load i1, i1* @cf, align 1
  %v3_27a90 = zext i1 %v2_27a90 to i8
  %v4_27a90 = add i8 %v3_27a90, %v1_27a90
  %v22_27a90 = zext i8 %v4_27a90 to i32
  %v24_27a90 = and i32 %v0_27a90, -256
  %v25_27a90 = or i32 %v22_27a90, %v24_27a90
  store i32 %v25_27a90, i32* %eax.global-to-local, align 4
  %v1_27a92 = inttoptr i32 %v25_27a90 to i8*
  %v2_27a92 = load i8, i8* %v1_27a92, align 1
  %v5_27a92 = add i8 %v2_27a92, %v4_27a90
  store i8 %v5_27a92, i8* %v1_27a92, align 1
  %v0_27a94 = load i32, i32* %eax.global-to-local, align 4
  %v1_27a94 = load i32, i32* @ebp, align 4
  %v2_27a94 = add i32 %v1_27a94, -12
  %v3_27a94 = inttoptr i32 %v2_27a94 to i32*
  store i32 %v0_27a94, i32* %v3_27a94, align 4
  store i32 0, i32* @eax, align 4
  %v0_27a9e = load i32, i32* @ebp, align 4
  %v1_27a9e = add i32 %v0_27a9e, -12
  %v2_27a9e = inttoptr i32 %v1_27a9e to i32*
  %v3_27a9e = load i32, i32* %v2_27a9e, align 4
  %v1_27aa1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27aa1 = icmp eq i32 %v1_27aa1, %v3_27a9e
  br i1 %v3_27aa1, label %bb, label %dec_label_pc_27aaa

bb:                                               ; preds = %dec_label_pc_27a90
  %v1_27aa8 = call i32 @function_27aaf()
  store i32 %v1_27aa8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27aaa

dec_label_pc_27aaa:                               ; preds = %bb, %dec_label_pc_27a90
  %v2_27aa8 = phi i32 [ %v1_27aa8, %bb ], [ 0, %dec_label_pc_27a90 ]
  ret i32 %v2_27aa8
}

define i32 @function_27aaf() local_unnamed_addr {
dec_label_pc_27aaf:
  %v0_27ab0 = load i32, i32* @eax, align 4
  ret i32 %v0_27ab0
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKdEclIxEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27ab2:
  ret i32 0
}

define i32 @function_27ad0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27ad0:
  %v2_27ad0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_27ad0 = load i32, i32* @eax, align 4
  %v4_27ad0 = trunc i32 %v3_27ad0 to i8
  %v5_27ad0 = add i8 %v4_27ad0, %v2_27ad0
  %v21_27ad0 = inttoptr i32 %v3_27ad0 to i8*
  store i8 %v5_27ad0, i8* %v21_27ad0, align 1
  %v2_27ad2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_27ad2 = load i32, i32* @eax, align 4
  %v4_27ad2 = trunc i32 %v3_27ad2 to i8
  %v5_27ad2 = add i8 %v4_27ad2, %v2_27ad2
  %v21_27ad2 = inttoptr i32 %v3_27ad2 to i8*
  store i8 %v5_27ad2, i8* %v21_27ad2, align 1
  %v0_27ad4 = load i32, i32* @ebp, align 4
  %v1_27ad4 = add i32 %v0_27ad4, -12
  %v2_27ad4 = inttoptr i32 %v1_27ad4 to i32*
  %v3_27ad4 = load i32, i32* %v2_27ad4, align 4
  %v1_27ad7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27ad7 = icmp eq i32 %v1_27ad7, %v3_27ad4
  br i1 %v3_27ad7, label %bb, label %dec_label_pc_27ad0.dec_label_pc_27ae0_crit_edge

dec_label_pc_27ad0.dec_label_pc_27ae0_crit_edge:  ; preds = %dec_label_pc_27ad0
  %v2_27ade.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27ae0

bb:                                               ; preds = %dec_label_pc_27ad0
  %v1_27ade = call i32 @function_27ae5()
  br label %dec_label_pc_27ae0

dec_label_pc_27ae0:                               ; preds = %dec_label_pc_27ad0.dec_label_pc_27ae0_crit_edge, %bb
  %v2_27ade = phi i32 [ %v2_27ade.pre, %dec_label_pc_27ad0.dec_label_pc_27ae0_crit_edge ], [ %v1_27ade, %bb ]
  ret i32 %v2_27ade

; uselistorder directives
  uselistorder label %dec_label_pc_27ae0, { 1, 0 }
}

define i32 @function_27ae5() local_unnamed_addr {
dec_label_pc_27ae5:
  %v0_27ae6 = load i32, i32* @eax, align 4
  ret i32 %v0_27ae6
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKdEclERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27ae8:
  %v1_27b0b = call i32 @unknown_502e7(i32 %arg2)
  store i32 %v1_27b0b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27b1c

bb:                                               ; preds = %dec_label_pc_27ae8
  %v1_27b1a = call i32 @function_27b21()
  br label %dec_label_pc_27b1c

dec_label_pc_27b1c:                               ; preds = %bb, %dec_label_pc_27ae8
  %v2_27b1a = phi i32 [ %v1_27b1a, %bb ], [ %v1_27b0b, %dec_label_pc_27ae8 ]
  ret i32 %v2_27b1a
}

define i32 @function_27b21() local_unnamed_addr {
dec_label_pc_27b21:
  %v0_27b22 = load i32, i32* @eax, align 4
  ret i32 %v0_27b22
}

define i32 @_ZN5boost9addressofIKSsEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b23:
  %stack_var_-20 = alloca i32, align 4
  %v2_27b41 = ptrtoint i32* %stack_var_-20 to i32
  %v2_27b47 = call i32 @unknown_50379(i32 %v2_27b41, i32 %arg1)
  %v1_27b52 = call i32 @unknown_503b1(i32 %v2_27b41)
  %v2_27b62 = call i32 @unknown_503e0(i32 %v1_27b52, i32 0)
  store i32 %v2_27b62, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27b73

bb:                                               ; preds = %dec_label_pc_27b23
  %v1_27b71 = call i32 @function_27b78()
  br label %dec_label_pc_27b73

dec_label_pc_27b73:                               ; preds = %bb, %dec_label_pc_27b23
  %v2_27b71 = phi i32 [ %v1_27b71, %bb ], [ %v2_27b62, %dec_label_pc_27b23 ]
  ret i32 %v2_27b71
}

define i32 @function_27b78() local_unnamed_addr {
dec_label_pc_27b78:
  %v0_27b79 = load i32, i32* @eax, align 4
  ret i32 %v0_27b79
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27b7a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27ba8

bb:                                               ; preds = %dec_label_pc_27b7a
  %v3_27ba6 = call i32 @function_27bad(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_27ba8

dec_label_pc_27ba8:                               ; preds = %bb, %dec_label_pc_27b7a
  %v4_27ba6 = phi i32 [ %v3_27ba6, %bb ], [ 0, %dec_label_pc_27b7a ]
  ret i32 %v4_27ba6
}

define i32 @function_27bad(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27bad:
  %v0_27bae = load i32, i32* @eax, align 4
  ret i32 %v0_27bae
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27bb0:
  ret i32 0
}

define i32 @function_27bd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_27bd8:
  %zf.global-to-local = alloca i1, align 1
  %v0_27bd8 = load i32, i32* @eax, align 4
  %v1_27bd8 = trunc i32 %v0_27bd8 to i8
  %v2_27bd8 = load i1, i1* @cf, align 1
  %v3_27bd8 = zext i1 %v2_27bd8 to i8
  %v4_27bd8 = add i8 %v3_27bd8, %v1_27bd8
  %v13_27bd8 = icmp eq i8 %v4_27bd8, 0
  store i1 %v13_27bd8, i1* %zf.global-to-local, align 1
  %v22_27bd8 = zext i8 %v4_27bd8 to i32
  %v24_27bd8 = and i32 %v0_27bd8, -256
  %v25_27bd8 = or i32 %v22_27bd8, %v24_27bd8
  store i32 %v25_27bd8, i32* @eax, align 4
  %v1_27bda = inttoptr i32 %v25_27bd8 to i8*
  %v2_27bda = load i8, i8* %v1_27bda, align 1
  %v5_27bda = add i8 %v2_27bda, %v4_27bd8
  %v10_27bda = icmp ult i8 %v5_27bda, %v2_27bda
  store i1 %v10_27bda, i1* @cf, align 1
  %v15_27bda = icmp eq i8 %v5_27bda, 0
  store i1 %v15_27bda, i1* %zf.global-to-local, align 1
  store i8 %v5_27bda, i8* %v1_27bda, align 1
  %v0_27bdc = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_27bdc, label %bb, label %dec_label_pc_27bd8.dec_label_pc_27bde_crit_edge

dec_label_pc_27bd8.dec_label_pc_27bde_crit_edge:  ; preds = %dec_label_pc_27bd8
  %v2_27bdc.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27bde

bb:                                               ; preds = %dec_label_pc_27bd8
  %v1_27bdc = call i32 @function_27be3()
  br label %dec_label_pc_27bde

dec_label_pc_27bde:                               ; preds = %dec_label_pc_27bd8.dec_label_pc_27bde_crit_edge, %bb
  %v2_27bdc = phi i32 [ %v2_27bdc.pre, %dec_label_pc_27bd8.dec_label_pc_27bde_crit_edge ], [ %v1_27bdc, %bb ]
  ret i32 %v2_27bdc

; uselistorder directives
  uselistorder i8 %v2_27bda, { 1, 0 }
  uselistorder label %dec_label_pc_27bde, { 1, 0 }
}

define i32 @function_27be3() local_unnamed_addr {
dec_label_pc_27be3:
  %v0_27be4 = load i32, i32* @eax, align 4
  ret i32 %v0_27be4
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclISsEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27be6:
  ret i32 0
}

define i32 @function_27c06(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27c06:
  %v2_27c06 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_27c06 = load i32, i32* @eax, align 4
  %v4_27c06 = trunc i32 %v3_27c06 to i8
  %v5_27c06 = add i8 %v4_27c06, %v2_27c06
  %v21_27c06 = inttoptr i32 %v3_27c06 to i8*
  store i8 %v5_27c06, i8* %v21_27c06, align 1
  %v0_27c08 = load i32, i32* @ebp, align 4
  %v1_27c08 = add i32 %v0_27c08, -12
  %v2_27c08 = inttoptr i32 %v1_27c08 to i32*
  %v3_27c08 = load i32, i32* %v2_27c08, align 4
  %v1_27c0b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27c0b = icmp eq i32 %v1_27c0b, %v3_27c08
  br i1 %v3_27c0b, label %bb, label %dec_label_pc_27c06.dec_label_pc_27c14_crit_edge

dec_label_pc_27c06.dec_label_pc_27c14_crit_edge:  ; preds = %dec_label_pc_27c06
  %v2_27c12.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27c14

bb:                                               ; preds = %dec_label_pc_27c06
  %v1_27c12 = call i32 @function_27c19()
  br label %dec_label_pc_27c14

dec_label_pc_27c14:                               ; preds = %dec_label_pc_27c06.dec_label_pc_27c14_crit_edge, %bb
  %v2_27c12 = phi i32 [ %v2_27c12.pre, %dec_label_pc_27c06.dec_label_pc_27c14_crit_edge ], [ %v1_27c12, %bb ]
  ret i32 %v2_27c12

; uselistorder directives
  uselistorder label %dec_label_pc_27c14, { 1, 0 }
}

define i32 @function_27c19() local_unnamed_addr {
dec_label_pc_27c19:
  %v0_27c1a = load i32, i32* @eax, align 4
  ret i32 %v0_27c1a
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKSt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27c1c:
  %v2_27c42 = load i32, i32* %arg1, align 4
  %v2_27c4e = call i32 @unknown_5050c(i32 %v2_27c42, i32 %arg2)
  store i32 %v2_27c4e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27c5f

bb:                                               ; preds = %dec_label_pc_27c1c
  %v1_27c5d = call i32 @function_27c64()
  br label %dec_label_pc_27c5f

dec_label_pc_27c5f:                               ; preds = %bb, %dec_label_pc_27c1c
  %v2_27c5d = phi i32 [ %v1_27c5d, %bb ], [ %v2_27c4e, %dec_label_pc_27c1c ]
  ret i32 %v2_27c5d
}

define i32 @function_27c64() local_unnamed_addr {
dec_label_pc_27c64:
  %v0_27c65 = load i32, i32* @eax, align 4
  ret i32 %v0_27c65
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKSt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27c66:
  %v2_27c8c = load i32, i32* %arg1, align 4
  %v2_27c98 = call i32 @unknown_5058c(i32 %v2_27c8c, i32 %arg2)
  ret i32 %v2_27c98
}

define i32 @function_27ca3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27ca3:
  %zf.global-to-local = alloca i1, align 1
  %v0_27ca3 = load i32, i32* @eax, align 4
  %v1_27ca3 = trunc i32 %v0_27ca3 to i8
  %v2_27ca3 = load i1, i1* @cf, align 1
  %v3_27ca3 = zext i1 %v2_27ca3 to i8
  %v4_27ca3 = add i8 %v3_27ca3, %v1_27ca3
  %v13_27ca3 = icmp eq i8 %v4_27ca3, 0
  store i1 %v13_27ca3, i1* %zf.global-to-local, align 1
  %v22_27ca3 = zext i8 %v4_27ca3 to i32
  %v24_27ca3 = and i32 %v0_27ca3, -256
  %v25_27ca3 = or i32 %v22_27ca3, %v24_27ca3
  store i32 %v25_27ca3, i32* @eax, align 4
  %v1_27ca5 = inttoptr i32 %v25_27ca3 to i8*
  %v2_27ca5 = load i8, i8* %v1_27ca5, align 1
  %v5_27ca5 = add i8 %v2_27ca5, %v4_27ca3
  %v15_27ca5 = icmp eq i8 %v5_27ca5, 0
  store i1 %v15_27ca5, i1* %zf.global-to-local, align 1
  store i8 %v5_27ca5, i8* %v1_27ca5, align 1
  %v0_27ca7 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_27ca7, label %bb, label %dec_label_pc_27ca3.dec_label_pc_27ca9_crit_edge

dec_label_pc_27ca3.dec_label_pc_27ca9_crit_edge:  ; preds = %dec_label_pc_27ca3
  %v2_27ca7.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27ca9

bb:                                               ; preds = %dec_label_pc_27ca3
  %v1_27ca7 = call i32 @function_27cae()
  br label %dec_label_pc_27ca9

dec_label_pc_27ca9:                               ; preds = %dec_label_pc_27ca3.dec_label_pc_27ca9_crit_edge, %bb
  %v2_27ca7 = phi i32 [ %v2_27ca7.pre, %dec_label_pc_27ca3.dec_label_pc_27ca9_crit_edge ], [ %v1_27ca7, %bb ]
  ret i32 %v2_27ca7

; uselistorder directives
  uselistorder label %dec_label_pc_27ca9, { 1, 0 }
}

define i32 @function_27cae() local_unnamed_addr {
dec_label_pc_27cae:
  %v0_27caf = load i32, i32* @eax, align 4
  ret i32 %v0_27caf
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27cb0:
  %v1_27cd3 = call i32 @unknown_5060b(i32 %arg2)
  store i32 %v1_27cd3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27ce4

bb:                                               ; preds = %dec_label_pc_27cb0
  %v1_27ce2 = call i32 @function_27ce9()
  br label %dec_label_pc_27ce4

dec_label_pc_27ce4:                               ; preds = %bb, %dec_label_pc_27cb0
  %v2_27ce2 = phi i32 [ %v1_27ce2, %bb ], [ %v1_27cd3, %dec_label_pc_27cb0 ]
  ret i32 %v2_27ce2
}

define i32 @function_27ce9() local_unnamed_addr {
dec_label_pc_27ce9:
  %v0_27cea = load i32, i32* @eax, align 4
  ret i32 %v0_27cea
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclIxEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27cec:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27d1a

bb:                                               ; preds = %dec_label_pc_27cec
  %v3_27d18 = call i32 @function_27d1f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_27d1a

dec_label_pc_27d1a:                               ; preds = %bb, %dec_label_pc_27cec
  %v4_27d18 = phi i32 [ %v3_27d18, %bb ], [ 0, %dec_label_pc_27cec ]
  ret i32 %v4_27d18
}

define i32 @function_27d1f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27d1f:
  %v0_27d20 = load i32, i32* @eax, align 4
  ret i32 %v0_27d20
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclIdEEPS3_RKT_() local_unnamed_addr {
dec_label_pc_27d22:
  %eax.global-to-local = alloca i32, align 4
  %v17_27d25 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_27d25
}

define i32 @function_27d28(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d28:
  %v0_27d28 = load i32, i32* @ebp, align 4
  %v1_27d28 = add i32 %v0_27d28, 8
  %v2_27d28 = inttoptr i32 %v1_27d28 to i32*
  %v3_27d28 = load i32, i32* %v2_27d28, align 4
  %v2_27d2b = add i32 %v0_27d28, -28
  %v3_27d2b = inttoptr i32 %v2_27d2b to i32*
  store i32 %v3_27d28, i32* %v3_27d2b, align 4
  %v0_27d2e = load i32, i32* @ebp, align 4
  %v1_27d2e = add i32 %v0_27d2e, 12
  %v2_27d2e = inttoptr i32 %v1_27d2e to i32*
  %v3_27d2e = load i32, i32* %v2_27d2e, align 4
  %v2_27d31 = add i32 %v0_27d2e, -32
  %v3_27d31 = inttoptr i32 %v2_27d31 to i32*
  store i32 %v3_27d2e, i32* %v3_27d31, align 4
  %v0_27d34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27d3a = load i32, i32* @ebp, align 4
  %v2_27d3a = add i32 %v1_27d3a, -12
  %v3_27d3a = inttoptr i32 %v2_27d3a to i32*
  store i32 %v0_27d34, i32* %v3_27d3a, align 4
  store i32 0, i32* @eax, align 4
  %v0_27d44 = load i32, i32* @ebp, align 4
  %v1_27d44 = add i32 %v0_27d44, -12
  %v2_27d44 = inttoptr i32 %v1_27d44 to i32*
  %v3_27d44 = load i32, i32* %v2_27d44, align 4
  %v1_27d47 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27d47 = icmp eq i32 %v1_27d47, %v3_27d44
  br i1 %v3_27d47, label %bb, label %dec_label_pc_27d50

bb:                                               ; preds = %dec_label_pc_27d28
  %v1_27d4e = call i32 @function_27d55()
  br label %dec_label_pc_27d50

dec_label_pc_27d50:                               ; preds = %bb, %dec_label_pc_27d28
  %v2_27d4e = phi i32 [ %v1_27d4e, %bb ], [ 0, %dec_label_pc_27d28 ]
  ret i32 %v2_27d4e
}

define i32 @function_27d55() local_unnamed_addr {
dec_label_pc_27d55:
  %v0_27d56 = load i32, i32* @eax, align 4
  ret i32 %v0_27d56
}

define i32 @_Z14Serialize_implI11CDataStream5CTxInSaIS1_EEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_27d57:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v0_27d7b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_27d8c = call i32 @unknown_39a5b(i32 %arg2)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_27da4 = call i32 @unknown_4a610(i32 %arg1, i32 %v1_27d8c, i32 0)
  %v2_27da9 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_27da9, i32* %eax.global-to-local, align 4
  %v2_27db6 = call i32 @unknown_3ce75(i32 %v2_27da9, i32 %arg2)
  store i32 %v2_27db6, i32* %eax.global-to-local, align 4
  %v16_27dbb = ptrtoint i32* %stack_var_-80 to i32
  %v2_27df3 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_27df3

dec_label_pc_27dc0:                               ; preds = %dec_label_pc_27df3
  store i32 %v2_27da9, i32* %eax.global-to-local, align 4
  %v1_27dc3 = load i32, i32* @esp, align 4
  %v2_27dc3 = inttoptr i32 %v1_27dc3 to i32*
  store i32 %v2_27da9, i32* %v2_27dc3, align 4
  %v0_27dc6 = call i32 @unknown_4381b()
  store i32 %v0_27dc6, i32* %eax.global-to-local, align 4
  %v1_27dce = load i32, i32* @esp, align 4
  %v2_27dce = add i32 %v1_27dce, 12
  %v3_27dce = inttoptr i32 %v2_27dce to i32*
  store i32 %arg4, i32* %v3_27dce, align 4
  %v1_27dd5 = load i32, i32* @esp, align 4
  %v2_27dd5 = add i32 %v1_27dd5, 8
  %v3_27dd5 = inttoptr i32 %v2_27dd5 to i32*
  store i32 %arg3, i32* %v3_27dd5, align 4
  %v0_27dd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_27dd9 = load i32, i32* @esp, align 4
  %v2_27dd9 = add i32 %v1_27dd9, 4
  %v3_27dd9 = inttoptr i32 %v2_27dd9 to i32*
  store i32 %v0_27dd9, i32* %v3_27dd9, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_27de0 = load i32, i32* @esp, align 4
  %v2_27de0 = inttoptr i32 %v1_27de0 to i32*
  store i32 %arg1, i32* %v2_27de0, align 4
  %v0_27de3 = call i32 @unknown_50709()
  store i32 %v2_27da9, i32* %eax.global-to-local, align 4
  %v1_27deb = load i32, i32* @esp, align 4
  %v2_27deb = inttoptr i32 %v1_27deb to i32*
  store i32 %v2_27da9, i32* %v2_27deb, align 4
  %v0_27dee = call i32 @unknown_437e1()
  store i32 %v0_27dee, i32* %eax.global-to-local, align 4
  %v1_27df9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_27df3

dec_label_pc_27df3:                               ; preds = %dec_label_pc_27dc0, %dec_label_pc_27d57
  %v1_27df9 = phi i32 [ %v1_27df9.pre, %dec_label_pc_27dc0 ], [ %v16_27dbb, %dec_label_pc_27d57 ]
  store i32 %v2_27df3, i32* %eax.global-to-local, align 4
  %v2_27df9 = add i32 %v1_27df9, 4
  %v3_27df9 = inttoptr i32 %v2_27df9 to i32*
  store i32 %arg2, i32* %v3_27df9, align 4
  %v1_27dfd = load i32, i32* @esp, align 4
  %v2_27dfd = inttoptr i32 %v1_27dfd to i32*
  store i32 %v2_27df3, i32* %v2_27dfd, align 4
  %v0_27e00 = call i32 @unknown_3ce25()
  %v0_27e05 = load i32, i32* @esp, align 4
  %v3_27e0b = inttoptr i32 %v0_27e05 to i32*
  store i32 %v2_27df3, i32* %v3_27e0b, align 4
  store i32 %v2_27da9, i32* %eax.global-to-local, align 4
  %v1_27e12 = load i32, i32* @esp, align 4
  %v2_27e12 = inttoptr i32 %v1_27e12 to i32*
  store i32 %v2_27da9, i32* %v2_27e12, align 4
  %v0_27e15 = call i32 @unknown_4378c()
  store i32 %v0_27e15, i32* %eax.global-to-local, align 4
  %v4_27e1a = trunc i32 %v0_27e15 to i8
  %v5_27e1a = icmp eq i8 %v4_27e1a, 0
  %v1_27e1c = icmp eq i1 %v5_27e1a, false
  br i1 %v1_27e1c, label %dec_label_pc_27dc0, label %dec_label_pc_27e1e

dec_label_pc_27e1e:                               ; preds = %dec_label_pc_27df3
  store i32 %v0_27d7b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27e2a

bb:                                               ; preds = %dec_label_pc_27e1e
  %v1_27e28 = call i32 @function_27e2f()
  store i32 %v1_27e28, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27e2a

dec_label_pc_27e2a:                               ; preds = %bb, %dec_label_pc_27e1e
  %v2_27e28 = phi i32 [ %v1_27e28, %bb ], [ 0, %dec_label_pc_27e1e ]
  ret i32 %v2_27e28

; uselistorder directives
  uselistorder i32 %v2_27da9, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
}

define i32 @function_27e2f() local_unnamed_addr {
dec_label_pc_27e2f:
  %v0_27e30 = load i32, i32* @eax, align 4
  ret i32 %v0_27e30
}

define i32 @_Z14Serialize_implI11CDataStream6CTxOutSaIS1_EEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_27e31:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v0_27e55 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_27e66 = call i32 @unknown_39d4d(i32 %arg2)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_27e7e = call i32 @unknown_4a6ea(i32 %arg1, i32 %v1_27e66, i32 0)
  %v2_27e83 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_27e83, i32* %eax.global-to-local, align 4
  %v2_27e90 = call i32 @unknown_3cfef(i32 %v2_27e83, i32 %arg2)
  store i32 %v2_27e90, i32* %eax.global-to-local, align 4
  %v16_27e95 = ptrtoint i32* %stack_var_-80 to i32
  %v2_27ecd = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_27ecd

dec_label_pc_27e9a:                               ; preds = %dec_label_pc_27ecd
  store i32 %v2_27e83, i32* %eax.global-to-local, align 4
  %v1_27e9d = load i32, i32* @esp, align 4
  %v2_27e9d = inttoptr i32 %v1_27e9d to i32*
  store i32 %v2_27e83, i32* %v2_27e9d, align 4
  %v0_27ea0 = call i32 @unknown_3d261()
  store i32 %v0_27ea0, i32* %eax.global-to-local, align 4
  %v1_27ea8 = load i32, i32* @esp, align 4
  %v2_27ea8 = add i32 %v1_27ea8, 12
  %v3_27ea8 = inttoptr i32 %v2_27ea8 to i32*
  store i32 %arg4, i32* %v3_27ea8, align 4
  %v1_27eaf = load i32, i32* @esp, align 4
  %v2_27eaf = add i32 %v1_27eaf, 8
  %v3_27eaf = inttoptr i32 %v2_27eaf to i32*
  store i32 %arg3, i32* %v3_27eaf, align 4
  %v0_27eb3 = load i32, i32* %eax.global-to-local, align 4
  %v1_27eb3 = load i32, i32* @esp, align 4
  %v2_27eb3 = add i32 %v1_27eb3, 4
  %v3_27eb3 = inttoptr i32 %v2_27eb3 to i32*
  store i32 %v0_27eb3, i32* %v3_27eb3, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_27eba = load i32, i32* @esp, align 4
  %v2_27eba = inttoptr i32 %v1_27eba to i32*
  store i32 %arg1, i32* %v2_27eba, align 4
  %v0_27ebd = call i32 @unknown_5083f()
  store i32 %v2_27e83, i32* %eax.global-to-local, align 4
  %v1_27ec5 = load i32, i32* @esp, align 4
  %v2_27ec5 = inttoptr i32 %v1_27ec5 to i32*
  store i32 %v2_27e83, i32* %v2_27ec5, align 4
  %v0_27ec8 = call i32 @unknown_3d227()
  store i32 %v0_27ec8, i32* %eax.global-to-local, align 4
  %v1_27ed3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_27ecd

dec_label_pc_27ecd:                               ; preds = %dec_label_pc_27e9a, %dec_label_pc_27e31
  %v1_27ed3 = phi i32 [ %v1_27ed3.pre, %dec_label_pc_27e9a ], [ %v16_27e95, %dec_label_pc_27e31 ]
  store i32 %v2_27ecd, i32* %eax.global-to-local, align 4
  %v2_27ed3 = add i32 %v1_27ed3, 4
  %v3_27ed3 = inttoptr i32 %v2_27ed3 to i32*
  store i32 %arg2, i32* %v3_27ed3, align 4
  %v1_27ed7 = load i32, i32* @esp, align 4
  %v2_27ed7 = inttoptr i32 %v1_27ed7 to i32*
  store i32 %v2_27ecd, i32* %v2_27ed7, align 4
  %v0_27eda = call i32 @unknown_3cf9f()
  %v0_27edf = load i32, i32* @esp, align 4
  %v3_27ee5 = inttoptr i32 %v0_27edf to i32*
  store i32 %v2_27ecd, i32* %v3_27ee5, align 4
  store i32 %v2_27e83, i32* %eax.global-to-local, align 4
  %v1_27eec = load i32, i32* @esp, align 4
  %v2_27eec = inttoptr i32 %v1_27eec to i32*
  store i32 %v2_27e83, i32* %v2_27eec, align 4
  %v0_27eef = call i32 @unknown_43973()
  store i32 %v0_27eef, i32* %eax.global-to-local, align 4
  %v4_27ef4 = trunc i32 %v0_27eef to i8
  %v5_27ef4 = icmp eq i8 %v4_27ef4, 0
  %v1_27ef6 = icmp eq i1 %v5_27ef4, false
  br i1 %v1_27ef6, label %dec_label_pc_27e9a, label %dec_label_pc_27ef8

dec_label_pc_27ef8:                               ; preds = %dec_label_pc_27ecd
  store i32 %v0_27e55, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27f04

bb:                                               ; preds = %dec_label_pc_27ef8
  %v1_27f02 = call i32 @function_27f09()
  store i32 %v1_27f02, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27f04

dec_label_pc_27f04:                               ; preds = %bb, %dec_label_pc_27ef8
  %v2_27f02 = phi i32 [ %v1_27f02, %bb ], [ 0, %dec_label_pc_27ef8 ]
  ret i32 %v2_27f02

; uselistorder directives
  uselistorder i32 %v2_27e83, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15 }
  uselistorder i32* @esp, { 27, 28, 29, 0, 21, 22, 23, 24, 25, 26, 36, 37, 38, 1, 30, 31, 32, 33, 34, 35, 84, 85, 86, 2, 78, 79, 80, 81, 82, 83, 87, 76, 77, 100, 44, 45, 46, 3, 39, 40, 41, 42, 43, 52, 53, 54, 4, 47, 48, 49, 50, 51, 60, 61, 62, 5, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 6, 99, 74, 75, 88, 89, 90, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
}

define i32 @function_27f09() local_unnamed_addr {
dec_label_pc_27f09:
  %v0_27f0a = load i32, i32* @eax, align 4
  ret i32 %v0_27f0a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSsNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_27f0b:
  %edx.global-to-local = alloca i32, align 4
  %v0_27f41 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_27f41, 16777216
  %v5_27f60 = sdiv i32 %sext, 16777216
  %v6_27f60 = call i32 @unknown_50975(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_27f60)
  store i32 %v6_27f60, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_27f71

bb:                                               ; preds = %dec_label_pc_27f0b
  %v1_27f6f = call i32 @function_27f76()
  br label %dec_label_pc_27f71

dec_label_pc_27f71:                               ; preds = %bb, %dec_label_pc_27f0b
  %v2_27f6f = phi i32 [ %v1_27f6f, %bb ], [ %v6_27f60, %dec_label_pc_27f0b ]
  ret i32 %v2_27f6f
}

define i32 @function_27f76() local_unnamed_addr {
dec_label_pc_27f76:
  %v0_27f77 = load i32, i32* @eax, align 4
  ret i32 %v0_27f77
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSD_NSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_27f78:
  ret i32 %arg1
}

define i32 @function_27f84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27f84:
  %v0_27f84 = load i32, i32* @ebp, align 4
  %v1_27f84 = add i32 %v0_27f84, 12
  %v2_27f84 = inttoptr i32 %v1_27f84 to i32*
  %v3_27f84 = load i32, i32* %v2_27f84, align 4
  %v2_27f87 = add i32 %v0_27f84, -32
  %v3_27f87 = inttoptr i32 %v2_27f87 to i32*
  store i32 %v3_27f84, i32* %v3_27f87, align 4
  %v0_27f8a = load i32, i32* @ebp, align 4
  %v1_27f8a = add i32 %v0_27f8a, 16
  %v2_27f8a = inttoptr i32 %v1_27f8a to i32*
  %v3_27f8a = load i32, i32* %v2_27f8a, align 4
  %v2_27f8d = add i32 %v0_27f8a, -36
  %v3_27f8d = inttoptr i32 %v2_27f8d to i32*
  store i32 %v3_27f8a, i32* %v3_27f8d, align 4
  %v0_27f90 = load i32, i32* @ebp, align 4
  %v1_27f90 = add i32 %v0_27f90, 20
  %v2_27f90 = inttoptr i32 %v1_27f90 to i32*
  %v3_27f90 = load i32, i32* %v2_27f90, align 4
  %v2_27f93 = add i32 %v0_27f90, -40
  %v3_27f93 = inttoptr i32 %v2_27f93 to i32*
  store i32 %v3_27f90, i32* %v3_27f93, align 4
  %v0_27f96 = load i32, i32* @ebp, align 4
  %v1_27f96 = add i32 %v0_27f96, 24
  %v2_27f96 = inttoptr i32 %v1_27f96 to i8*
  %v3_27f96 = load i8, i8* %v2_27f96, align 1
  %v3_27f9a = add i32 %v0_27f96, -41
  %v4_27f9a = inttoptr i32 %v3_27f9a to i8*
  store i8 %v3_27f96, i8* %v4_27f9a, align 1
  %v0_27f9d = load i32, i32* @ebp, align 4
  %v1_27f9d = add i32 %v0_27f9d, 28
  %v2_27f9d = inttoptr i32 %v1_27f9d to i32*
  %v3_27f9d = load i32, i32* %v2_27f9d, align 4
  %v2_27fa0 = add i32 %v0_27f9d, -48
  %v3_27fa0 = inttoptr i32 %v2_27fa0 to i32*
  store i32 %v3_27f9d, i32* %v3_27fa0, align 4
  %v0_27fa3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27fa9 = load i32, i32* @ebp, align 4
  %v2_27fa9 = add i32 %v1_27fa9, -12
  %v3_27fa9 = inttoptr i32 %v2_27fa9 to i32*
  store i32 %v0_27fa3, i32* %v3_27fa9, align 4
  %v0_27fae = load i32, i32* @edx, align 8
  %v0_27fb2 = load i32, i32* @ebp, align 4
  %v1_27fb2 = add i32 %v0_27fb2, -40
  %v2_27fb2 = inttoptr i32 %v1_27fb2 to i32*
  %v3_27fb2 = load i32, i32* %v2_27fb2, align 4
  %v1_27fb9 = add i32 %v0_27fb2, -36
  %v2_27fb9 = inttoptr i32 %v1_27fb9 to i32*
  %v3_27fb9 = load i32, i32* %v2_27fb9, align 4
  %v1_27fc0 = add i32 %v0_27fb2, -32
  %v2_27fc0 = inttoptr i32 %v1_27fc0 to i32*
  %v3_27fc0 = load i32, i32* %v2_27fc0, align 4
  %v1_27fc7 = add i32 %v0_27fb2, -28
  %v2_27fc7 = inttoptr i32 %v1_27fc7 to i32*
  %v3_27fc7 = load i32, i32* %v2_27fc7, align 4
  %sext = mul i32 %v0_27fae, 16777216
  %v5_27fcd = sdiv i32 %sext, 16777216
  %v6_27fcd = call i32 @unknown_50a47(i32 %v3_27fc7, i32 %v3_27fc0, i32 %v3_27fb9, i32 %v3_27fb2, i32 %v5_27fcd)
  store i32 %v6_27fcd, i32* @eax, align 4
  %v0_27fd2 = load i32, i32* @ebp, align 4
  %v1_27fd2 = add i32 %v0_27fd2, -12
  %v2_27fd2 = inttoptr i32 %v1_27fd2 to i32*
  %v3_27fd2 = load i32, i32* %v2_27fd2, align 4
  %v1_27fd5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27fd5 = icmp eq i32 %v1_27fd5, %v3_27fd2
  br i1 %v3_27fd5, label %bb, label %dec_label_pc_27fde

bb:                                               ; preds = %dec_label_pc_27f84
  %v1_27fdc = call i32 @function_27fe3()
  br label %dec_label_pc_27fde

dec_label_pc_27fde:                               ; preds = %bb, %dec_label_pc_27f84
  %v2_27fdc = phi i32 [ %v1_27fdc, %bb ], [ %v6_27fcd, %dec_label_pc_27f84 ]
  ret i32 %v2_27fdc

; uselistorder directives
  uselistorder i32 %v0_27fb2, { 1, 0, 2, 3 }
}

define i32 @function_27fe3() local_unnamed_addr {
dec_label_pc_27fe3:
  %v0_27fe4 = load i32, i32* @eax, align 4
  ret i32 %v0_27fe4
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSI_NSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_27fe5:
  %edx.global-to-local = alloca i32, align 4
  %v0_2801b = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2801b, 16777216
  %v5_2803a = sdiv i32 %sext, 16777216
  %v6_2803a = call i32 @unknown_50b19(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2803a)
  store i32 %v6_2803a, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_2804b

bb:                                               ; preds = %dec_label_pc_27fe5
  %v1_28049 = call i32 @function_28050()
  br label %dec_label_pc_2804b

dec_label_pc_2804b:                               ; preds = %bb, %dec_label_pc_27fe5
  %v2_28049 = phi i32 [ %v1_28049, %bb ], [ %v6_2803a, %dec_label_pc_27fe5 ]
  ret i32 %v2_28049
}

define i32 @function_28050() local_unnamed_addr {
dec_label_pc_28050:
  %v0_28051 = load i32, i32* @eax, align 4
  ret i32 %v0_28051
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvbNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_28052:
  ret i32 %arg1
}

define i32 @function_2805c() local_unnamed_addr {
dec_label_pc_2805c:
  %eax.global-to-local = alloca i32, align 4
  %v15_2805c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_2805c
}

define i32 @function_280bc() local_unnamed_addr {
dec_label_pc_280bc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_280bc = load i32, i32* %ecx.global-to-local, align 4
  %v1_280bc = add i32 %v0_280bc, -1
  store i32 %v1_280bc, i32* %ecx.global-to-local, align 4
  %v0_280be = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_280be
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvxNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_280bf:
  ret i32 %arg1
}

define i32 @function_280ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_280ca:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_280cc = load i32, i32* @ebp, align 4
  %v0_280cd = load i32, i32* @eax, align 4
  %v2_280cd = or i32 %v0_280cd, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_280cd, i32* %eax.global-to-local, align 4
  %v0_280d0 = load i32, i32* @ecx, align 4
  %v1_280d0 = add i32 %v0_280d0, -1
  store i32 %v1_280d0, i32* %ecx.global-to-local, align 4
  %v1_280d2 = add i32 %v0_280cc, 3
  store i32 %v1_280d2, i32* %ebp.global-to-local, align 4
  %v1_280d3 = add i32 %v0_280d0, 1166793796
  %v2_280d3 = inttoptr i32 %v1_280d3 to i8*
  %v3_280d3 = load i8, i8* %v2_280d3, align 1
  %v5_280d3 = trunc i32 %v1_280d0 to i8
  %v8_280d3 = add i8 %v3_280d3, %v5_280d3
  %v28_280d3 = icmp ult i8 %v8_280d3, %v3_280d3
  store i1 %v28_280d3, i1* %cf.global-to-local, align 1
  store i8 %v8_280d3, i8* %v2_280d3, align 1
  %v0_280d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_280d9 = trunc i32 %v0_280d9 to i8
  %v2_280d9 = load i1, i1* %cf.global-to-local, align 1
  %v3_280d9 = zext i1 %v2_280d9 to i8
  %v4_280d9 = add i8 %v1_280d9, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_280d9 = add i8 %v4_280d9, %v3_280d9
  %v20_280d9 = add i8 %v1_280d9, -119
  %v21_280d9 = add i8 %v20_280d9, %v3_280d9
  %v22_280d9 = icmp ule i8 %v21_280d9, %v1_280d9
  %v23_280d9 = icmp ugt i8 %v1_280d9, 118
  %v24_280d9 = select i1 %v2_280d9, i1 %v22_280d9, i1 %v23_280d9
  store i1 %v24_280d9, i1* %cf.global-to-local, align 1
  %v25_280d9 = zext i8 %v5_280d9 to i32
  %v27_280d9 = and i32 %v0_280d9, -256
  %v28_280d9 = or i32 %v25_280d9, %v27_280d9
  store i32 %v28_280d9, i32* %eax.global-to-local, align 4
  %v0_280db = load i32, i32* %ebp.global-to-local, align 4
  %v1_280db = add i32 %v0_280db, 1
  store i32 %v1_280db, i32* %ebp.global-to-local, align 4
  %v0_280de = load i32, i32* @edx, align 8
  %v1_280de = and i32 %v0_280de, -65281
  %v2_280de = or i32 %v1_280de, 17664
  store i32 %v2_280de, i32* %edx.global-to-local, align 8
  %v1_280e0 = add i32 %v28_280d9, 1166792517
  %v2_280e0 = inttoptr i32 %v1_280e0 to i8*
  %v3_280e0 = load i8, i8* %v2_280e0, align 1
  %v4_280e0 = load i32, i32* %ecx.global-to-local, align 4
  %v5_280e0 = trunc i32 %v4_280e0 to i8
  %v7_280e0 = zext i1 %v24_280d9 to i8
  %v8_280e0 = sub i8 %v3_280e0, %v5_280e0
  %v9_280e0 = add i8 %v8_280e0, %v7_280e0
  %v19_280e0 = sub i8 %v8_280e0, %v7_280e0
  %v20_280e0 = icmp ult i8 %v3_280e0, %v19_280e0
  %v21_280e0 = icmp ne i8 %v5_280e0, -1
  %v22_280e0 = or i1 %v21_280e0, %v20_280e0
  %v23_280e0 = icmp ult i8 %v3_280e0, %v5_280e0
  %v24_280e0 = select i1 %v24_280d9, i1 %v22_280e0, i1 %v23_280e0
  store i1 %v24_280e0, i1* %cf.global-to-local, align 1
  store i8 %v9_280e0, i8* %v2_280e0, align 1
  %v0_280e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_280e6 = trunc i32 %v0_280e6 to i8
  %v2_280e6 = load i1, i1* %cf.global-to-local, align 1
  %v3_280e6 = zext i1 %v2_280e6 to i32
  %v4_280e6 = add i32 %v0_280e6, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32))
  %v5_280e6 = add i32 %v4_280e6, %v3_280e6
  %v17_280e6 = icmp ult i8 %v1_280e6, -119
  %v18_280e6 = or i1 %v2_280e6, %v17_280e6
  store i1 %v18_280e6, i1* %cf.global-to-local, align 1
  %v31_280e6 = urem i32 %v5_280e6, 256
  %v33_280e6 = and i32 %v0_280e6, -256
  %v34_280e6 = or i32 %v31_280e6, %v33_280e6
  store i32 %v34_280e6, i32* %eax.global-to-local, align 4
  %v0_280e8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_280e8 = add i32 %v0_280e8, 1
  store i32 %v1_280e8, i32* @ebp, align 4
  %v1_280e9 = add i32 %v0_280e8, -94
  %v2_280e9 = inttoptr i32 %v1_280e9 to i8*
  %v3_280e9 = load i8, i8* %v2_280e9, align 1
  %v5_280e9 = mul i8 %v3_280e9, 2
  store i8 %v5_280e9, i8* %v2_280e9, align 1
  %v16_280e9 = icmp slt i8 %v3_280e9, 0
  %v0_280ec = load i32, i32* %eax.global-to-local, align 4
  %v1_280ec = trunc i32 %v0_280ec to i8
  %v3_280ec = zext i1 %v16_280e9 to i8
  %v4_280ec = add i8 %v1_280ec, %v3_280ec
  %v19_280ec = icmp ule i8 %v4_280ec, %v1_280ec
  %v21_280ec = icmp eq i1 %v16_280e9, %v19_280ec
  store i1 %v21_280ec, i1* %cf.global-to-local, align 1
  %v22_280ec = zext i8 %v4_280ec to i32
  %v24_280ec = and i32 %v0_280ec, -256
  %v25_280ec = or i32 %v22_280ec, %v24_280ec
  store i32 %v25_280ec, i32* %eax.global-to-local, align 4
  %v1_280ee = inttoptr i32 %v25_280ec to i8*
  %v2_280ee = load i8, i8* %v1_280ee, align 1
  %v5_280ee = add i8 %v2_280ee, %v4_280ec
  store i8 %v5_280ee, i8* %v1_280ee, align 1
  %v0_280f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_280f0 = load i32, i32* @ebp, align 4
  %v2_280f0 = add i32 %v1_280f0, -12
  %v3_280f0 = inttoptr i32 %v2_280f0 to i32*
  store i32 %v0_280f0, i32* %v3_280f0, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_280f5 = load i32, i32* %edx.global-to-local, align 8
  %v0_280f9 = load i32, i32* @ebp, align 4
  %v1_280f9 = add i32 %v0_280f9, -40
  %v2_280f9 = inttoptr i32 %v1_280f9 to i32*
  %v3_280f9 = load i32, i32* %v2_280f9, align 4
  store i32 %v3_280f9, i32* %eax.global-to-local, align 4
  %v1_28100 = add i32 %v0_280f9, -36
  %v2_28100 = inttoptr i32 %v1_28100 to i32*
  %v3_28100 = load i32, i32* %v2_28100, align 4
  store i32 %v3_28100, i32* %eax.global-to-local, align 4
  %v1_28107 = add i32 %v0_280f9, -32
  %v2_28107 = inttoptr i32 %v1_28107 to i32*
  %v3_28107 = load i32, i32* %v2_28107, align 4
  store i32 %v3_28107, i32* %eax.global-to-local, align 4
  %v1_2810e = add i32 %v0_280f9, -28
  %v2_2810e = inttoptr i32 %v1_2810e to i32*
  %v3_2810e = load i32, i32* %v2_2810e, align 4
  store i32 %v3_2810e, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_280f5, 16777216
  %v5_28114 = sdiv i32 %sext, 16777216
  %v6_28114 = call i32 @unknown_50cbd(i32 %v3_2810e, i32 %v3_28107, i32 %v3_28100, i32 %v3_280f9, i32 %v5_28114)
  store i32 %v6_28114, i32* @eax, align 4
  %v0_28119 = load i32, i32* @ebp, align 4
  %v1_28119 = add i32 %v0_28119, -12
  %v2_28119 = inttoptr i32 %v1_28119 to i32*
  %v3_28119 = load i32, i32* %v2_28119, align 4
  store i32 %v3_28119, i32* %edx.global-to-local, align 8
  %v1_2811c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2811c = xor i32 %v1_2811c, %v3_28119
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2811c = icmp eq i32 %v2_2811c, 0
  store i32 %v2_2811c, i32* %edx.global-to-local, align 8
  br i1 %v3_2811c, label %bb, label %dec_label_pc_28125

bb:                                               ; preds = %dec_label_pc_280ca
  %v1_28123 = call i32 @function_2812a()
  store i32 %v1_28123, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28125

dec_label_pc_28125:                               ; preds = %bb, %dec_label_pc_280ca
  %v3_28123 = phi i32 [ %v1_28123, %bb ], [ %v6_28114, %dec_label_pc_280ca ]
  ret i32 %v3_28123

; uselistorder directives
  uselistorder i32 %v0_280f9, { 1, 0, 2, 3 }
  uselistorder i8 %v4_280ec, { 0, 2, 1 }
  uselistorder i8 %v1_280ec, { 1, 0 }
  uselistorder i8 %v3_280e9, { 1, 0 }
  uselistorder i1 %v2_280e6, { 1, 0 }
  uselistorder i32 %v0_280e6, { 1, 0, 2 }
  uselistorder i8 %v8_280e0, { 1, 0 }
  uselistorder i8 %v7_280e0, { 1, 0 }
  uselistorder i8 %v5_280e0, { 1, 0, 2 }
  uselistorder i1 %v24_280d9, { 1, 0, 2 }
  uselistorder i8 %v3_280d3, { 1, 0 }
  uselistorder i32 1166792517, { 0, 3, 4, 5, 6, 2, 1, 7, 8 }
  uselistorder i32 17664, { 0, 3, 4, 5, 2, 1, 6, 7 }
}

define i32 @function_2812a() local_unnamed_addr {
dec_label_pc_2812a:
  %v0_2812b = load i32, i32* @eax, align 4
  ret i32 %v0_2812b
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvdNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2812c:
  %edx.global-to-local = alloca i32, align 4
  %v0_28162 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_28162, 16777216
  %v5_28181 = sdiv i32 %sext, 16777216
  %v6_28181 = call i32 @unknown_50d8f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_28181)
  store i32 %v6_28181, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 8
  br i1 true, label %bb, label %dec_label_pc_28192

bb:                                               ; preds = %dec_label_pc_2812c
  %v1_28190 = call i32 @function_28197()
  br label %dec_label_pc_28192

dec_label_pc_28192:                               ; preds = %bb, %dec_label_pc_2812c
  %v2_28190 = phi i32 [ %v1_28190, %bb ], [ %v6_28181, %dec_label_pc_2812c ]
  ret i32 %v2_28190
}

define i32 @function_28197() local_unnamed_addr {
dec_label_pc_28197:
  %v0_28198 = load i32, i32* @eax, align 4
  ret i32 %v0_28198
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_28199:
  ret i32 %arg6
}

define i32 @function_281c7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_281c7:
  %v2_281c7 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_281c7 = load i32, i32* @eax, align 4
  %v4_281c7 = trunc i32 %v3_281c7 to i8
  %v5_281c7 = add i8 %v4_281c7, %v2_281c7
  %v21_281c7 = inttoptr i32 %v3_281c7 to i8*
  store i8 %v5_281c7, i8* %v21_281c7, align 1
  %v0_281c9 = load i32, i32* @ecx, align 4
  %v1_281c9 = add i32 %v0_281c9, -1070468027
  %v2_281c9 = inttoptr i32 %v1_281c9 to i8*
  %v3_281c9 = load i8, i8* %v2_281c9, align 1
  %v5_281c9 = trunc i32 %v0_281c9 to i8
  %v6_281c9 = add i8 %v3_281c9, %v5_281c9
  store i8 %v6_281c9, i8* %v2_281c9, align 1
  %v3_281e7 = load i32, i32* @eax, align 4
  ret i32 %v3_281e7
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdNS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E17convert_copy_intoEPvNST_18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_281f3:
  ret i32 0
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitISsEEvRT_i() local_unnamed_addr {
dec_label_pc_2825a:
  %eax.global-to-local = alloca i32, align 4
  %v17_2825d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2825d
}

define i32 @function_28260(i32 %arg1) local_unnamed_addr {
dec_label_pc_28260:
  %v0_28260 = load i32, i32* @ebp, align 4
  %v1_28260 = add i32 %v0_28260, 8
  %v2_28260 = inttoptr i32 %v1_28260 to i32*
  %v3_28260 = load i32, i32* %v2_28260, align 4
  %v2_28263 = add i32 %v0_28260, -28
  %v3_28263 = inttoptr i32 %v2_28263 to i32*
  store i32 %v3_28260, i32* %v3_28263, align 4
  %v0_28266 = load i32, i32* @ebp, align 4
  %v1_28266 = add i32 %v0_28266, 12
  %v2_28266 = inttoptr i32 %v1_28266 to i32*
  %v3_28266 = load i32, i32* %v2_28266, align 4
  %v2_28269 = add i32 %v0_28266, -32
  %v3_28269 = inttoptr i32 %v2_28269 to i32*
  store i32 %v3_28266, i32* %v3_28269, align 4
  %v0_2826c = load i32, i32* @ebp, align 4
  %v1_2826c = add i32 %v0_2826c, 16
  %v2_2826c = inttoptr i32 %v1_2826c to i32*
  %v3_2826c = load i32, i32* %v2_2826c, align 4
  %v2_2826f = add i32 %v0_2826c, -36
  %v3_2826f = inttoptr i32 %v2_2826f to i32*
  store i32 %v3_2826c, i32* %v3_2826f, align 4
  %v0_28272 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_28278 = load i32, i32* @ebp, align 4
  %v2_28278 = add i32 %v1_28278, -12
  %v3_28278 = inttoptr i32 %v2_28278 to i32*
  store i32 %v0_28272, i32* %v3_28278, align 4
  %v0_2827d = load i32, i32* @ebp, align 4
  %v1_28286 = add i32 %v0_2827d, -32
  %v2_28286 = inttoptr i32 %v1_28286 to i32*
  %v3_28286 = load i32, i32* %v2_28286, align 4
  ret i32 %v3_28286
}

define i32 @function_282a1() local_unnamed_addr {
dec_label_pc_282a1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_282a1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_282a1 = add i32 %v0_282a1, -1
  store i32 %v1_282a1, i32* %ecx.global-to-local, align 4
  %v0_282a3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_282a3
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_282a4:
  %v2_282ca = load i32, i32* %arg1, align 4
  ret i32 %v2_282ca
}

define i32 @function_282cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_282cc:
  %v0_282cc = load i32, i32* @eax, align 4
  %v0_282d0 = load i32, i32* @ebp, align 4
  %v1_282d0 = add i32 %v0_282d0, -32
  %v2_282d0 = inttoptr i32 %v1_282d0 to i32*
  %v3_282d0 = load i32, i32* %v2_282d0, align 4
  %v2_282d6 = call i32 @unknown_50f6c(i32 %v3_282d0, i32 %v0_282cc)
  %v0_282db = load i32, i32* @ebp, align 4
  %v1_282db = add i32 %v0_282db, -12
  %v2_282db = inttoptr i32 %v1_282db to i32*
  %v3_282db = load i32, i32* %v2_282db, align 4
  %v1_282de = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_282de = xor i32 %v1_282de, %v3_282db
  %v3_282de = icmp eq i32 %v2_282de, 0
  store i32 %v2_282de, i32* @eax, align 4
  br i1 %v3_282de, label %bb, label %dec_label_pc_282e7

bb:                                               ; preds = %dec_label_pc_282cc
  %v1_282e5 = call i32 @function_282ec()
  br label %dec_label_pc_282e7

dec_label_pc_282e7:                               ; preds = %bb, %dec_label_pc_282cc
  %v2_282e5 = phi i32 [ %v1_282e5, %bb ], [ %v2_282de, %dec_label_pc_282cc ]
  ret i32 %v2_282e5
}

define i32 @function_282ec() local_unnamed_addr {
dec_label_pc_282ec:
  %v0_282ed = load i32, i32* @eax, align 4
  ret i32 %v0_282ed
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_282ee:
  %v2_28314 = load i32, i32* %arg1, align 4
  ret i32 %v2_28314
}

define i32 @function_28335() local_unnamed_addr {
dec_label_pc_28335:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_28335 = load i32, i32* %ecx.global-to-local, align 4
  %v1_28335 = add i32 %v0_28335, -1
  store i32 %v1_28335, i32* %ecx.global-to-local, align 4
  %v0_28337 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28337
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitIbEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28338:
  %v0_28350 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_28350
}

define i32 @function_28356(i32 %arg1) local_unnamed_addr {
dec_label_pc_28356:
  %v0_28356 = load i32, i32* @eax, align 4
  %v1_28356 = load i32, i32* @ebp, align 4
  %v2_28356 = add i32 %v1_28356, -12
  %v3_28356 = inttoptr i32 %v2_28356 to i32*
  store i32 %v0_28356, i32* %v3_28356, align 4
  %v0_2835b = load i32, i32* @ebp, align 4
  %v1_2835b = add i32 %v0_2835b, -28
  %v2_2835b = inttoptr i32 %v1_2835b to i32*
  %v3_2835b = load i32, i32* %v2_2835b, align 4
  %v1_2835e = inttoptr i32 %v3_2835b to i32*
  %v2_2835e = load i32, i32* %v1_2835e, align 4
  %v1_28360 = inttoptr i32 %v2_2835e to i8*
  %v2_28360 = load i8, i8* %v1_28360, align 1
  %v1_28363 = add i32 %v0_2835b, -32
  %v2_28363 = inttoptr i32 %v1_28363 to i32*
  %v3_28363 = load i32, i32* %v2_28363, align 4
  %v3_28366 = inttoptr i32 %v3_28363 to i8*
  store i8 %v2_28360, i8* %v3_28366, align 1
  %v0_28368 = load i32, i32* @ebp, align 4
  %v1_28368 = add i32 %v0_28368, -12
  %v2_28368 = inttoptr i32 %v1_28368 to i32*
  %v3_28368 = load i32, i32* %v2_28368, align 4
  %v1_2836b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2836b = xor i32 %v1_2836b, %v3_28368
  %v3_2836b = icmp eq i32 %v2_2836b, 0
  store i32 %v2_2836b, i32* @eax, align 4
  br i1 %v3_2836b, label %bb, label %dec_label_pc_28374

bb:                                               ; preds = %dec_label_pc_28356
  %v1_28372 = call i32 @function_28379()
  br label %dec_label_pc_28374

dec_label_pc_28374:                               ; preds = %bb, %dec_label_pc_28356
  %v3_28372 = phi i32 [ %v1_28372, %bb ], [ %v2_2836b, %dec_label_pc_28356 ]
  ret i32 %v3_28372
}

define i32 @function_28379() local_unnamed_addr {
dec_label_pc_28379:
  %v0_2837a = load i32, i32* @eax, align 4
  ret i32 %v0_2837a
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitIxEEvRT_i() local_unnamed_addr {
dec_label_pc_2837c:
  %eax.global-to-local = alloca i32, align 4
  %v17_2837f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2837f
}

define i32 @function_28383(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28383:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_28383 = load i32, i32* @ebp, align 4
  %v1_28383 = add i32 %v0_28383, 1
  store i32 %v1_28383, i32* %ebp.global-to-local, align 4
  %v0_28384 = load i32, i32* @ecx, align 4
  %v1_28384 = add i32 %v0_28384, 1166795845
  %v2_28384 = inttoptr i32 %v1_28384 to i8*
  %v3_28384 = load i8, i8* %v2_28384, align 1
  %v5_28384 = trunc i32 %v0_28384 to i8
  %v6_28384 = or i8 %v3_28384, %v5_28384
  store i8 %v6_28384, i8* %v2_28384, align 1
  %v0_2838a = load i32, i32* @eax, align 4
  %v2_2838a = or i32 %v0_2838a, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2838a, i32* %eax.global-to-local, align 4
  %v0_2838c = load i32, i32* %ebp.global-to-local, align 4
  %v0_2838d = load i32, i32* @ecx, align 4
  %v1_2838d = add i32 %v0_2838d, -1
  store i32 %v1_2838d, i32* %ecx.global-to-local, align 4
  %v1_2838f = add i32 %v0_2838c, 2
  store i32 %v1_2838f, i32* @ebp, align 4
  %v1_28390 = add i32 %v0_2838d, -1587159996
  %v2_28390 = inttoptr i32 %v1_28390 to i8*
  %v3_28390 = load i8, i8* %v2_28390, align 1
  %v5_28390 = trunc i32 %v1_2838d to i8
  %v8_28390 = add i8 %v3_28390, %v5_28390
  %v28_28390 = icmp ult i8 %v8_28390, %v3_28390
  store i1 %v28_28390, i1* %cf.global-to-local, align 1
  store i8 %v8_28390, i8* %v2_28390, align 1
  %v0_28396 = load i32, i32* %eax.global-to-local, align 4
  %v1_28396 = trunc i32 %v0_28396 to i8
  %v2_28396 = load i1, i1* %cf.global-to-local, align 1
  %v3_28396 = zext i1 %v2_28396 to i8
  %v4_28396 = add i8 %v3_28396, %v1_28396
  %v19_28396 = icmp ule i8 %v4_28396, %v1_28396
  %v21_28396 = icmp eq i1 %v2_28396, %v19_28396
  store i1 %v21_28396, i1* %cf.global-to-local, align 1
  %v22_28396 = zext i8 %v4_28396 to i32
  %v24_28396 = and i32 %v0_28396, -256
  %v25_28396 = or i32 %v22_28396, %v24_28396
  store i32 %v25_28396, i32* %eax.global-to-local, align 4
  %v1_28398 = inttoptr i32 %v25_28396 to i8*
  %v2_28398 = load i8, i8* %v1_28398, align 1
  %v5_28398 = add i8 %v2_28398, %v4_28396
  store i8 %v5_28398, i8* %v1_28398, align 1
  %v0_2839a = load i32, i32* %eax.global-to-local, align 4
  %v1_2839a = load i32, i32* @ebp, align 4
  %v2_2839a = add i32 %v1_2839a, -12
  %v3_2839a = inttoptr i32 %v2_2839a to i32*
  store i32 %v0_2839a, i32* %v3_2839a, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2839f = load i32, i32* @ebp, align 4
  %v1_2839f = add i32 %v0_2839f, -28
  %v2_2839f = inttoptr i32 %v1_2839f to i32*
  %v3_2839f = load i32, i32* %v2_2839f, align 4
  store i32 %v3_2839f, i32* %eax.global-to-local, align 4
  %v1_283a2 = inttoptr i32 %v3_2839f to i32*
  %v2_283a2 = load i32, i32* %v1_283a2, align 4
  store i32 %v2_283a2, i32* %eax.global-to-local, align 4
  %v1_283a4 = add i32 %v2_283a2, 4
  %v2_283a4 = inttoptr i32 %v1_283a4 to i32*
  %v3_283a4 = load i32, i32* %v2_283a4, align 4
  store i32 %v3_283a4, i32* %edx.global-to-local, align 8
  %v1_283a7 = inttoptr i32 %v2_283a2 to i32*
  %v2_283a7 = load i32, i32* %v1_283a7, align 4
  store i32 %v2_283a7, i32* %eax.global-to-local, align 4
  %v1_283a9 = add i32 %v0_2839f, -32
  %v2_283a9 = inttoptr i32 %v1_283a9 to i32*
  %v3_283a9 = load i32, i32* %v2_283a9, align 4
  store i32 %v3_283a9, i32* %ecx.global-to-local, align 4
  %v2_283ac = inttoptr i32 %v3_283a9 to i32*
  store i32 %v2_283a7, i32* %v2_283ac, align 4
  %v0_283ae = load i32, i32* %edx.global-to-local, align 8
  %v1_283ae = load i32, i32* %ecx.global-to-local, align 4
  %v2_283ae = add i32 %v1_283ae, 4
  %v3_283ae = inttoptr i32 %v2_283ae to i32*
  store i32 %v0_283ae, i32* %v3_283ae, align 4
  %v0_283b1 = load i32, i32* @ebp, align 4
  %v1_283b1 = add i32 %v0_283b1, -12
  %v2_283b1 = inttoptr i32 %v1_283b1 to i32*
  %v3_283b1 = load i32, i32* %v2_283b1, align 4
  store i32 %v3_283b1, i32* %eax.global-to-local, align 4
  %v1_283b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_283b4 = xor i32 %v1_283b4, %v3_283b1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_283b4 = icmp eq i32 %v2_283b4, 0
  store i32 %v2_283b4, i32* @eax, align 4
  br i1 %v3_283b4, label %bb, label %dec_label_pc_283bd

bb:                                               ; preds = %dec_label_pc_28383
  %v1_283bb = call i32 @function_283c2()
  store i32 %v1_283bb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_283bd

dec_label_pc_283bd:                               ; preds = %bb, %dec_label_pc_28383
  %v3_283bb = phi i32 [ %v1_283bb, %bb ], [ %v2_283b4, %dec_label_pc_28383 ]
  ret i32 %v3_283bb

; uselistorder directives
  uselistorder i8 %v4_28396, { 0, 2, 1 }
  uselistorder i8 %v1_28396, { 1, 0 }
  uselistorder i8 %v3_28390, { 1, 0 }
}

define i32 @function_283c2() local_unnamed_addr {
dec_label_pc_283c2:
  %v0_283c3 = load i32, i32* @eax, align 4
  ret i32 %v0_283c3
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitIdEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_283c4:
  %tmp106 = inttoptr i32 %arg2 to double*
  %v2_283ea = load i32, i32* %arg1, align 4
  %v1_283ec = inttoptr i32 %v2_283ea to double*
  %v2_283ec = load double, double* %v1_283ec, align 4
  store double %v2_283ec, double* %tmp106, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_283ff

bb:                                               ; preds = %dec_label_pc_283c4
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v5_283fd = call i32 @function_28404(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_283ff

dec_label_pc_283ff:                               ; preds = %bb, %dec_label_pc_283c4
  %v6_283fd = phi i32 [ %v5_283fd, %bb ], [ 0, %dec_label_pc_283c4 ]
  ret i32 %v6_283fd

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_28404(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28404:
  %v0_28405 = load i32, i32* @eax, align 4
  ret i32 %v0_28405
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitISsEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28406:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_28409 = load i32, i32* %ebx.global-to-local, align 4
  %v0_2842e = load i32, i32* %ecx.global-to-local, align 4
  %v0_28432 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_28432, 16777216
  %v5_28443 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2842e, 16777216
  %v6_28443 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_28409, 16777216
  %v7_28443 = sdiv i32 %sext2, 16777216
  %v8_28443 = call i32 @unknown_5116a(i32 %arg1, i32 %arg2, i32 %v5_28443, i32 %v6_28443, i32 %v7_28443)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28454

bb:                                               ; preds = %dec_label_pc_28406
  %v1_28452 = call i32 @function_28459()
  br label %dec_label_pc_28454

dec_label_pc_28454:                               ; preds = %bb, %dec_label_pc_28406
  %v2_28452 = phi i32 [ %v1_28452, %bb ], [ 0, %dec_label_pc_28406 ]
  ret i32 %v2_28452
}

define i32 @function_28459() local_unnamed_addr {
dec_label_pc_28459:
  %v0_2845e = load i32, i32* @eax, align 4
  ret i32 %v0_2845e
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitISA_EEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28460:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_28463 = load i32, i32* %ebx.global-to-local, align 4
  %v0_28488 = load i32, i32* %ecx.global-to-local, align 4
  %v0_2848c = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2848c, 16777216
  %v5_2849d = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_28488, 16777216
  %v6_2849d = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_28463, 16777216
  %v7_2849d = sdiv i32 %sext2, 16777216
  %v8_2849d = call i32 @unknown_512d2(i32 %arg1, i32 %arg2, i32 %v5_2849d, i32 %v6_2849d, i32 %v7_2849d)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_284ae

bb:                                               ; preds = %dec_label_pc_28460
  %v1_284ac = call i32 @function_284b3()
  br label %dec_label_pc_284ae

dec_label_pc_284ae:                               ; preds = %bb, %dec_label_pc_28460
  %v2_284ac = phi i32 [ %v1_284ac, %bb ], [ 0, %dec_label_pc_28460 ]
  ret i32 %v2_284ac
}

define i32 @function_284b3() local_unnamed_addr {
dec_label_pc_284b3:
  %v0_284b8 = load i32, i32* @eax, align 4
  ret i32 %v0_284b8
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitISF_EEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_284ba:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_284bd = load i32, i32* %ebx.global-to-local, align 4
  %v0_284e2 = load i32, i32* %ecx.global-to-local, align 4
  %v0_284e6 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_284e6, 16777216
  %v5_284f7 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_284e2, 16777216
  %v6_284f7 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_284bd, 16777216
  %v7_284f7 = sdiv i32 %sext2, 16777216
  %v8_284f7 = call i32 @unknown_5143a(i32 %arg1, i32 %arg2, i32 %v5_284f7, i32 %v6_284f7, i32 %v7_284f7)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28508

bb:                                               ; preds = %dec_label_pc_284ba
  %v1_28506 = call i32 @function_2850d()
  br label %dec_label_pc_28508

dec_label_pc_28508:                               ; preds = %bb, %dec_label_pc_284ba
  %v2_28506 = phi i32 [ %v1_28506, %bb ], [ 0, %dec_label_pc_284ba ]
  ret i32 %v2_28506
}

define i32 @function_2850d() local_unnamed_addr {
dec_label_pc_2850d:
  %v0_28512 = load i32, i32* @eax, align 4
  ret i32 %v0_28512
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitIbEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28514:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_28517 = load i32, i32* %ebx.global-to-local, align 4
  %v0_2853c = load i32, i32* %ecx.global-to-local, align 4
  %v0_28540 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_28540, 16777216
  %v5_28551 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2853c, 16777216
  %v6_28551 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_28517, 16777216
  %v7_28551 = sdiv i32 %sext2, 16777216
  %v8_28551 = call i32 @unknown_515a2(i32 %arg1, i32 %arg2, i32 %v5_28551, i32 %v6_28551, i32 %v7_28551)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28562

bb:                                               ; preds = %dec_label_pc_28514
  %v1_28560 = call i32 @function_28567()
  br label %dec_label_pc_28562

dec_label_pc_28562:                               ; preds = %bb, %dec_label_pc_28514
  %v2_28560 = phi i32 [ %v1_28560, %bb ], [ 0, %dec_label_pc_28514 ]
  ret i32 %v2_28560
}

define i32 @function_28567() local_unnamed_addr {
dec_label_pc_28567:
  %v0_2856c = load i32, i32* @eax, align 4
  ret i32 %v0_2856c
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitIxEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2856e:
  ret i32 %arg3
}

define i32 @function_2858a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2858a:
  %v2_2858a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2858a = load i32, i32* @eax, align 4
  %v4_2858a = trunc i32 %v3_2858a to i8
  %v5_2858a = add i8 %v4_2858a, %v2_2858a
  %v21_2858a = inttoptr i32 %v3_2858a to i8*
  store i8 %v5_2858a, i8* %v21_2858a, align 1
  %v0_2858c = load i32, i32* @ecx, align 4
  %v1_2858c = add i32 %v0_2858c, -1070468027
  %v2_2858c = inttoptr i32 %v1_2858c to i8*
  %v3_2858c = load i8, i8* %v2_2858c, align 1
  %v5_2858c = trunc i32 %v0_2858c to i8
  %v6_2858c = add i8 %v3_2858c, %v5_2858c
  store i8 %v6_2858c, i8* %v2_2858c, align 1
  %v0_28592 = load i32, i32* @ebx, align 4
  %v0_28596 = load i32, i32* @ecx, align 4
  %v0_2859a = load i32, i32* @edx, align 8
  %v0_2859e = load i32, i32* @ebp, align 4
  %v1_2859e = add i32 %v0_2859e, -32
  %v2_2859e = inttoptr i32 %v1_2859e to i32*
  %v3_2859e = load i32, i32* %v2_2859e, align 4
  %v1_285a5 = add i32 %v0_2859e, -28
  %v2_285a5 = inttoptr i32 %v1_285a5 to i32*
  %v3_285a5 = load i32, i32* %v2_285a5, align 4
  %sext = mul i32 %v0_2859a, 16777216
  %v5_285ab = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_28596, 16777216
  %v6_285ab = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_28592, 16777216
  %v7_285ab = sdiv i32 %sext2, 16777216
  %v8_285ab = call i32 @unknown_51692(i32 %v3_285a5, i32 %v3_2859e, i32 %v5_285ab, i32 %v6_285ab, i32 %v7_285ab)
  %v0_285b0 = load i32, i32* @ebp, align 4
  %v1_285b0 = add i32 %v0_285b0, -12
  %v2_285b0 = inttoptr i32 %v1_285b0 to i32*
  %v3_285b0 = load i32, i32* %v2_285b0, align 4
  %v1_285b3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_285b3 = xor i32 %v1_285b3, %v3_285b0
  %v3_285b3 = icmp eq i32 %v2_285b3, 0
  store i32 %v2_285b3, i32* @eax, align 4
  br i1 %v3_285b3, label %bb, label %dec_label_pc_285bc

bb:                                               ; preds = %dec_label_pc_2858a
  %v1_285ba = call i32 @function_285c1()
  br label %dec_label_pc_285bc

dec_label_pc_285bc:                               ; preds = %bb, %dec_label_pc_2858a
  %v2_285ba = phi i32 [ %v1_285ba, %bb ], [ %v2_285b3, %dec_label_pc_2858a ]
  ret i32 %v2_285ba
}

define i32 @function_285c1() local_unnamed_addr {
dec_label_pc_285c1:
  %v0_285c6 = load i32, i32* @eax, align 4
  ret i32 %v0_285c6
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitIdEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_285c8:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_285cb = load i32, i32* %ebx.global-to-local, align 4
  %v0_285e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_285f0 = load i32, i32* %ecx.global-to-local, align 4
  %v0_285f4 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_285f4, 16777216
  %v5_28605 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_285f0, 16777216
  %v6_28605 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_285cb, 16777216
  %v7_28605 = sdiv i32 %sext2, 16777216
  %v8_28605 = call i32 @unknown_51788(i32 %arg1, i32 %arg2, i32 %v5_28605, i32 %v6_28605, i32 %v7_28605)
  ret i32 %v0_285e1
}

define i32 @function_28612(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28612:
  %zf.global-to-local = alloca i1, align 1
  %v2_28612 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_28612 = load i32, i32* @eax, align 4
  %v4_28612 = trunc i32 %v3_28612 to i8
  %v5_28612 = add i8 %v4_28612, %v2_28612
  %v15_28612 = icmp eq i8 %v5_28612, 0
  store i1 %v15_28612, i1* %zf.global-to-local, align 1
  %v21_28612 = inttoptr i32 %v3_28612 to i8*
  store i8 %v5_28612, i8* %v21_28612, align 1
  %v0_28614 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_28614, label %bb, label %dec_label_pc_28612.dec_label_pc_28616_crit_edge

dec_label_pc_28612.dec_label_pc_28616_crit_edge:  ; preds = %dec_label_pc_28612
  %v2_28614.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_28616

bb:                                               ; preds = %dec_label_pc_28612
  %v1_28614 = call i32 @function_2861b()
  br label %dec_label_pc_28616

dec_label_pc_28616:                               ; preds = %dec_label_pc_28612.dec_label_pc_28616_crit_edge, %bb
  %v2_28614 = phi i32 [ %v2_28614.pre, %dec_label_pc_28612.dec_label_pc_28616_crit_edge ], [ %v1_28614, %bb ]
  ret i32 %v2_28614

; uselistorder directives
  uselistorder label %dec_label_pc_28616, { 1, 0 }
}

define i32 @function_2861b() local_unnamed_addr {
dec_label_pc_2861b:
  %v0_28620 = load i32, i32* @eax, align 4
  ret i32 %v0_28620
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclISsEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28622:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28650

bb:                                               ; preds = %dec_label_pc_28622
  %v3_2864e = call i32 @function_28655(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_28650

dec_label_pc_28650:                               ; preds = %bb, %dec_label_pc_28622
  %v4_2864e = phi i32 [ %v3_2864e, %bb ], [ 0, %dec_label_pc_28622 ]
  ret i32 %v4_2864e
}

define i32 @function_28655(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28655:
  %v0_28656 = load i32, i32* @eax, align 4
  ret i32 %v0_28656
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKSt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i() local_unnamed_addr {
dec_label_pc_28658:
  %eax.global-to-local = alloca i32, align 4
  %v17_2865b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2865b
}

define i32 @function_2865e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2865e:
  %v0_2865e = load i32, i32* @ebp, align 4
  %v1_2865e = add i32 %v0_2865e, 8
  %v2_2865e = inttoptr i32 %v1_2865e to i32*
  %v3_2865e = load i32, i32* %v2_2865e, align 4
  %v2_28661 = add i32 %v0_2865e, -28
  %v3_28661 = inttoptr i32 %v2_28661 to i32*
  store i32 %v3_2865e, i32* %v3_28661, align 4
  %v0_28664 = load i32, i32* @ebp, align 4
  %v1_28664 = add i32 %v0_28664, 12
  %v2_28664 = inttoptr i32 %v1_28664 to i32*
  %v3_28664 = load i32, i32* %v2_28664, align 4
  %v2_28667 = add i32 %v0_28664, -32
  %v3_28667 = inttoptr i32 %v2_28667 to i32*
  store i32 %v3_28664, i32* %v3_28667, align 4
  %v0_2866a = load i32, i32* @ebp, align 4
  %v1_2866a = add i32 %v0_2866a, 16
  %v2_2866a = inttoptr i32 %v1_2866a to i32*
  %v3_2866a = load i32, i32* %v2_2866a, align 4
  %v2_2866d = add i32 %v0_2866a, -36
  %v3_2866d = inttoptr i32 %v2_2866d to i32*
  store i32 %v3_2866a, i32* %v3_2866d, align 4
  %v0_28670 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_28676 = load i32, i32* @ebp, align 4
  %v2_28676 = add i32 %v1_28676, -12
  %v3_28676 = inttoptr i32 %v2_28676 to i32*
  store i32 %v0_28670, i32* %v3_28676, align 4
  %v0_2867b = load i32, i32* @ebp, align 4
  %v1_2867b = add i32 %v0_2867b, -28
  %v2_2867b = inttoptr i32 %v1_2867b to i32*
  %v3_2867b = load i32, i32* %v2_2867b, align 4
  %v1_2867e = inttoptr i32 %v3_2867b to i32*
  %v2_2867e = load i32, i32* %v1_2867e, align 4
  %v1_28680 = add i32 %v0_2867b, -32
  %v2_28680 = inttoptr i32 %v1_28680 to i32*
  %v3_28680 = load i32, i32* %v2_28680, align 4
  %v2_2868a = call i32 @unknown_518ac(i32 %v2_2867e, i32 %v3_28680)
  store i32 %v2_2868a, i32* @eax, align 4
  %v0_2868f = load i32, i32* @ebp, align 4
  %v1_2868f = add i32 %v0_2868f, -12
  %v2_2868f = inttoptr i32 %v1_2868f to i32*
  %v3_2868f = load i32, i32* %v2_2868f, align 4
  %v1_28692 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28692 = icmp eq i32 %v1_28692, %v3_2868f
  br i1 %v3_28692, label %bb, label %dec_label_pc_2869b

bb:                                               ; preds = %dec_label_pc_2865e
  %v1_28699 = call i32 @function_286a0()
  br label %dec_label_pc_2869b

dec_label_pc_2869b:                               ; preds = %bb, %dec_label_pc_2865e
  %v2_28699 = phi i32 [ %v1_28699, %bb ], [ %v2_2868a, %dec_label_pc_2865e ]
  ret i32 %v2_28699
}

define i32 @function_286a0() local_unnamed_addr {
dec_label_pc_286a0:
  %v0_286a1 = load i32, i32* @eax, align 4
  ret i32 %v0_286a1
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKSt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_286a2:
  %v0_286ba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_286ba
}

define i32 @function_286c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_286c0:
  %v0_286c0 = load i32, i32* @eax, align 4
  %v1_286c0 = load i32, i32* @ebp, align 4
  %v2_286c0 = add i32 %v1_286c0, -12
  %v3_286c0 = inttoptr i32 %v2_286c0 to i32*
  store i32 %v0_286c0, i32* %v3_286c0, align 4
  %v0_286c5 = load i32, i32* @ebp, align 4
  %v1_286c5 = add i32 %v0_286c5, -28
  %v2_286c5 = inttoptr i32 %v1_286c5 to i32*
  %v3_286c5 = load i32, i32* %v2_286c5, align 4
  %v1_286c8 = inttoptr i32 %v3_286c5 to i32*
  %v2_286c8 = load i32, i32* %v1_286c8, align 4
  %v1_286ca = add i32 %v0_286c5, -32
  %v2_286ca = inttoptr i32 %v1_286ca to i32*
  %v3_286ca = load i32, i32* %v2_286ca, align 4
  %v2_286d4 = call i32 @unknown_5192c(i32 %v2_286c8, i32 %v3_286ca)
  store i32 %v2_286d4, i32* @eax, align 4
  %v0_286d9 = load i32, i32* @ebp, align 4
  %v1_286d9 = add i32 %v0_286d9, -12
  %v2_286d9 = inttoptr i32 %v1_286d9 to i32*
  %v3_286d9 = load i32, i32* %v2_286d9, align 4
  %v1_286dc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_286dc = icmp eq i32 %v1_286dc, %v3_286d9
  br i1 %v3_286dc, label %bb, label %dec_label_pc_286e5

bb:                                               ; preds = %dec_label_pc_286c0
  %v1_286e3 = call i32 @function_286ea()
  br label %dec_label_pc_286e5

dec_label_pc_286e5:                               ; preds = %bb, %dec_label_pc_286c0
  %v3_286e3 = phi i32 [ %v1_286e3, %bb ], [ %v2_286d4, %dec_label_pc_286c0 ]
  ret i32 %v3_286e3
}

define i32 @function_286ea() local_unnamed_addr {
dec_label_pc_286ea:
  %v0_286eb = load i32, i32* @eax, align 4
  ret i32 %v0_286eb
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclIbEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_286ec:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2871a

bb:                                               ; preds = %dec_label_pc_286ec
  %v3_28718 = call i32 @function_2871f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2871a

dec_label_pc_2871a:                               ; preds = %bb, %dec_label_pc_286ec
  %v4_28718 = phi i32 [ %v3_28718, %bb ], [ 0, %dec_label_pc_286ec ]
  ret i32 %v4_28718
}

define i32 @function_2871f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2871f:
  %v0_28720 = load i32, i32* @eax, align 4
  ret i32 %v0_28720
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28722:
  %v1_28745 = call i32 @unknown_519e1(i32 %arg2)
  store i32 %v1_28745, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28756

bb:                                               ; preds = %dec_label_pc_28722
  %v1_28754 = call i32 @function_2875b()
  br label %dec_label_pc_28756

dec_label_pc_28756:                               ; preds = %bb, %dec_label_pc_28722
  %v2_28754 = phi i32 [ %v1_28754, %bb ], [ %v1_28745, %dec_label_pc_28722 ]
  ret i32 %v2_28754
}

define i32 @function_2875b() local_unnamed_addr {
dec_label_pc_2875b:
  %v0_2875c = load i32, i32* @eax, align 4
  ret i32 %v0_2875c
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclIdEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2875e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2878c

bb:                                               ; preds = %dec_label_pc_2875e
  %v3_2878a = call i32 @function_28791(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2878c

dec_label_pc_2878c:                               ; preds = %bb, %dec_label_pc_2875e
  %v4_2878a = phi i32 [ %v3_2878a, %bb ], [ 0, %dec_label_pc_2875e ]
  ret i32 %v4_2878a
}

define i32 @function_28791(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28791:
  %v0_28792 = load i32, i32* @eax, align 4
  ret i32 %v0_28792
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKdEclISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28794:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_287c2

bb:                                               ; preds = %dec_label_pc_28794
  %v3_287c0 = call i32 @function_287c7(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_287c2

dec_label_pc_287c2:                               ; preds = %bb, %dec_label_pc_28794
  %v4_287c0 = phi i32 [ %v3_287c0, %bb ], [ 0, %dec_label_pc_28794 ]
  ret i32 %v4_287c0
}

define i32 @function_287c7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_287c7:
  %v0_287c8 = load i32, i32* @eax, align 4
  ret i32 %v0_287c8
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKdEclISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_287ca:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_287f8

bb:                                               ; preds = %dec_label_pc_287ca
  %v3_287f6 = call i32 @function_287fd(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_287f8

dec_label_pc_287f8:                               ; preds = %bb, %dec_label_pc_287ca
  %v4_287f6 = phi i32 [ %v3_287f6, %bb ], [ 0, %dec_label_pc_287ca ]
  ret i32 %v4_287f6
}

define i32 @function_287fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_287fd:
  %v0_287fe = load i32, i32* @eax, align 4
  ret i32 %v0_287fe
}

define i32 @_ZN5boost9addressofIKdEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_287ff:
  %stack_var_-20 = alloca i32, align 4
  %v2_2881d = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_2881d
}

define i32 @function_28826(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28826:
  %v0_28828 = load i32, i32* @ebp, align 4
  %v1_28828 = add i32 %v0_28828, -16
  %v1_2882e = call i32 @unknown_51b4d(i32 %v1_28828)
  %v2_2883e = call i32 @unknown_51b7c(i32 %v1_2882e, i32 0)
  store i32 %v2_2883e, i32* @eax, align 4
  %v0_28843 = load i32, i32* @ebp, align 4
  %v1_28843 = add i32 %v0_28843, -12
  %v2_28843 = inttoptr i32 %v1_28843 to i32*
  %v3_28843 = load i32, i32* %v2_28843, align 4
  %v1_28846 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28846 = icmp eq i32 %v1_28846, %v3_28843
  br i1 %v3_28846, label %bb, label %dec_label_pc_2884f

bb:                                               ; preds = %dec_label_pc_28826
  %v1_2884d = call i32 @function_28854()
  br label %dec_label_pc_2884f

dec_label_pc_2884f:                               ; preds = %bb, %dec_label_pc_28826
  %v2_2884d = phi i32 [ %v1_2884d, %bb ], [ %v2_2883e, %dec_label_pc_28826 ]
  ret i32 %v2_2884d
}

define i32 @function_28854() local_unnamed_addr {
dec_label_pc_28854:
  %v0_28855 = load i32, i32* @eax, align 4
  ret i32 %v0_28855
}

define i32 @_ZN5boost6detail13addr_impl_refIKSsEC1ERS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28856:
  ret i32 %arg1
}

define i32 @function_28876(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28876:
  %v0_28876 = load i32, i32* @ebp, align 4
  %v1_28876 = add i32 %v0_28876, -32
  %v2_28876 = inttoptr i32 %v1_28876 to i32*
  %v3_28876 = load i32, i32* %v2_28876, align 4
  %v1_28879 = load i32, i32* @eax, align 4
  %v2_28879 = inttoptr i32 %v1_28879 to i32*
  store i32 %v3_28876, i32* %v2_28879, align 4
  %v0_2887b = load i32, i32* @ebp, align 4
  %v1_2887b = add i32 %v0_2887b, -12
  %v2_2887b = inttoptr i32 %v1_2887b to i32*
  %v3_2887b = load i32, i32* %v2_2887b, align 4
  %v1_2887e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2887e = xor i32 %v1_2887e, %v3_2887b
  %v3_2887e = icmp eq i32 %v2_2887e, 0
  store i32 %v2_2887e, i32* @eax, align 4
  br i1 %v3_2887e, label %bb, label %dec_label_pc_28887

bb:                                               ; preds = %dec_label_pc_28876
  %v1_28885 = call i32 @function_2888c()
  br label %dec_label_pc_28887

dec_label_pc_28887:                               ; preds = %bb, %dec_label_pc_28876
  %v2_28885 = phi i32 [ %v1_28885, %bb ], [ %v2_2887e, %dec_label_pc_28876 ]
  ret i32 %v2_28885
}

define i32 @function_2888c() local_unnamed_addr {
dec_label_pc_2888c:
  %v0_2888d = load i32, i32* @eax, align 4
  ret i32 %v0_2888d
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSsEcvRS2_Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2888e:
  ret i32 %arg1
}

define i32 @function_288a8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_288a8:
  %v0_288aa = load i32, i32* @ebp, align 4
  %v1_288aa = add i32 %v0_288aa, -12
  %v2_288aa = inttoptr i32 %v1_288aa to i32*
  %v3_288aa = load i32, i32* %v2_288aa, align 4
  %v1_288ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_288ad = icmp eq i32 %v1_288ad, %v3_288aa
  br i1 %v3_288ad, label %bb, label %dec_label_pc_288a8.dec_label_pc_288b6_crit_edge

dec_label_pc_288a8.dec_label_pc_288b6_crit_edge:  ; preds = %dec_label_pc_288a8
  %v2_288b4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_288b6

bb:                                               ; preds = %dec_label_pc_288a8
  %v1_288b4 = call i32 @function_288bb()
  br label %dec_label_pc_288b6

dec_label_pc_288b6:                               ; preds = %dec_label_pc_288a8.dec_label_pc_288b6_crit_edge, %bb
  %v2_288b4 = phi i32 [ %v2_288b4.pre, %dec_label_pc_288a8.dec_label_pc_288b6_crit_edge ], [ %v1_288b4, %bb ]
  ret i32 %v2_288b4

; uselistorder directives
  uselistorder label %dec_label_pc_288b6, { 1, 0 }
}

define i32 @function_288bb() local_unnamed_addr {
dec_label_pc_288bb:
  %v0_288bc = load i32, i32* @eax, align 4
  ret i32 %v0_288bc
}

define i32 @_ZN5boost6detail14addressof_implIKSsE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288bd:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_288e9

bb:                                               ; preds = %dec_label_pc_288bd
  %v3_288e7 = call i32 @function_288ee(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_288e9

dec_label_pc_288e9:                               ; preds = %bb, %dec_label_pc_288bd
  %v4_288e7 = phi i32 [ %v3_288e7, %bb ], [ %arg1, %dec_label_pc_288bd ]
  ret i32 %v4_288e7
}

define i32 @function_288ee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288ee:
  %v0_288ef = load i32, i32* @eax, align 4
  ret i32 %v0_288ef
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288f0:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2891e

bb:                                               ; preds = %dec_label_pc_288f0
  %v3_2891c = call i32 @function_28923(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2891e

dec_label_pc_2891e:                               ; preds = %bb, %dec_label_pc_288f0
  %v4_2891c = phi i32 [ %v3_2891c, %bb ], [ 0, %dec_label_pc_288f0 ]
  ret i32 %v4_2891c
}

define i32 @function_28923(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28923:
  %v0_28924 = load i32, i32* @eax, align 4
  ret i32 %v0_28924
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28926:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28954

bb:                                               ; preds = %dec_label_pc_28926
  %v3_28952 = call i32 @function_28959(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_28954

dec_label_pc_28954:                               ; preds = %bb, %dec_label_pc_28926
  %v4_28952 = phi i32 [ %v3_28952, %bb ], [ 0, %dec_label_pc_28926 ]
  ret i32 %v4_28952
}

define i32 @function_28959(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28959:
  %v0_2895a = load i32, i32* @eax, align 4
  ret i32 %v0_2895a
}

define i32 @_ZN5boost9addressofIKbEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2895b:
  %stack_var_-20 = alloca i32, align 4
  %v2_28979 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2897f = call i32 @unknown_51d0b(i32 %v2_28979, i32 %arg1)
  %v1_2898a = call i32 @unknown_51d43(i32 %v2_28979)
  %v2_2899a = call i32 @unknown_51d72(i32 %v1_2898a, i32 0)
  store i32 %v2_2899a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_289ab

bb:                                               ; preds = %dec_label_pc_2895b
  %v1_289a9 = call i32 @function_289b0()
  br label %dec_label_pc_289ab

dec_label_pc_289ab:                               ; preds = %bb, %dec_label_pc_2895b
  %v2_289a9 = phi i32 [ %v1_289a9, %bb ], [ %v2_2899a, %dec_label_pc_2895b ]
  ret i32 %v2_289a9
}

declare i32 @__stack_chk_fail.1006() local_unnamed_addr

define i32 @function_289b0() local_unnamed_addr {
dec_label_pc_289b0:
  %v0_289b1 = load i32, i32* @eax, align 4
  ret i32 %v0_289b1
}

define i32 @_Z9SerializeI11CDataStream5CTxInEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_289b2:
  %v8_289f6 = call i32 @unknown_51dfc(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28a07

bb:                                               ; preds = %dec_label_pc_289b2
  %v1_28a05 = call i32 @function_28a0c()
  br label %dec_label_pc_28a07

dec_label_pc_28a07:                               ; preds = %bb, %dec_label_pc_289b2
  %v2_28a05 = phi i32 [ %v1_28a05, %bb ], [ 0, %dec_label_pc_289b2 ]
  ret i32 %v2_28a05

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_28a0c() local_unnamed_addr {
dec_label_pc_28a0c:
  %v0_28a0d = load i32, i32* @eax, align 4
  ret i32 %v0_28a0d
}

define i32 @_Z9SerializeI11CDataStream6CTxOutEvRT_RKT0_li(i32 %arg1) local_unnamed_addr {
dec_label_pc_28a0e:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v4_28a0e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_28a0e, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1, 2, 3, 4, 5, 39, 6, 7, 8, 9, 10, 11, 12, 13 }
}

define i32 @function_28a1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_28a1e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_28a1e = load i32, i32* @ebp, align 4
  %v1_28a1e = add i32 %v0_28a1e, 1
  %v9_28a1e = icmp eq i32 %v1_28a1e, 0
  store i32 %v1_28a1e, i32* %ebp.global-to-local, align 4
  %v0_28a1f = load i32, i32* @ecx, align 4
  %v1_28a1f = add i32 %v0_28a1f, -1
  store i32 %v1_28a1f, i32* %ecx.global-to-local, align 4
  %v2_28a1f = icmp eq i32 %v1_28a1f, 0
  %v4_28a1f = or i1 %v9_28a1e, %v2_28a1f
  br i1 %v4_28a1f, label %dec_label_pc_28a21, label %bb

bb:                                               ; preds = %dec_label_pc_28a1e
  %v6_28a1f = call i32 @__stack_chk_fail.1006()
  store i32 %v6_28a1f, i32* @eax, align 4
  %v0_28a21.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_28a22.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_28a21

dec_label_pc_28a21:                               ; preds = %dec_label_pc_28a1e, %bb
  %v30_28a22 = phi i32 [ %v1_28a1f, %dec_label_pc_28a1e ], [ %v0_28a22.pre, %bb ]
  %v0_28a21 = phi i32 [ %v1_28a1e, %dec_label_pc_28a1e ], [ %v0_28a21.pre, %bb ]
  %v1_28a21 = add i32 %v0_28a21, 1
  store i32 %v1_28a21, i32* %ebp.global-to-local, align 4
  %v1_28a22 = add i32 %v30_28a22, 1166793797
  %v2_28a22 = inttoptr i32 %v1_28a22 to i8*
  %v3_28a22 = load i8, i8* %v2_28a22, align 1
  %v5_28a22 = trunc i32 %v30_28a22 to i8
  %v6_28a22 = load i1, i1* @cf, align 1
  %v7_28a22 = zext i1 %v6_28a22 to i8
  %v8_28a22 = add i8 %v3_28a22, %v5_28a22
  %v9_28a22 = add i8 %v7_28a22, %v8_28a22
  %v27_28a22 = icmp ule i8 %v9_28a22, %v3_28a22
  %v28_28a22 = icmp ult i8 %v8_28a22, %v3_28a22
  %v29_28a22 = select i1 %v6_28a22, i1 %v27_28a22, i1 %v28_28a22
  store i1 %v29_28a22, i1* %cf.global-to-local, align 1
  store i8 %v9_28a22, i8* %v2_28a22, align 1
  %v0_28a28 = load i32, i32* @eax, align 4
  %v1_28a28 = trunc i32 %v0_28a28 to i8
  %v2_28a28 = load i1, i1* %cf.global-to-local, align 1
  %v3_28a28 = zext i1 %v2_28a28 to i8
  %v4_28a28 = add i8 %v1_28a28, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_28a28 = add i8 %v4_28a28, %v3_28a28
  %v20_28a28 = add i8 %v1_28a28, -119
  %v21_28a28 = add i8 %v20_28a28, %v3_28a28
  %v22_28a28 = icmp ule i8 %v21_28a28, %v1_28a28
  %v23_28a28 = icmp ugt i8 %v1_28a28, 118
  %v24_28a28 = select i1 %v2_28a28, i1 %v22_28a28, i1 %v23_28a28
  %v25_28a28 = zext i8 %v5_28a28 to i32
  %v27_28a28 = and i32 %v0_28a28, -256
  %v28_28a28 = or i32 %v25_28a28, %v27_28a28
  store i32 %v28_28a28, i32* %eax.global-to-local, align 4
  %v0_28a2a = load i32, i32* %ebp.global-to-local, align 4
  %v1_28a2a = add i32 %v0_28a2a, 1
  store i32 %v1_28a2a, i32* @ebp, align 4
  %v3_28a2e = zext i1 %v24_28a28 to i8
  %v4_28a2e = add i8 %v3_28a2e, %v5_28a28
  %v19_28a2e = icmp ule i8 %v4_28a2e, %v5_28a28
  %v21_28a2e = icmp eq i1 %v24_28a28, %v19_28a2e
  store i1 %v21_28a2e, i1* %cf.global-to-local, align 1
  %v22_28a2e = zext i8 %v4_28a2e to i32
  %v25_28a2e = or i32 %v22_28a2e, %v27_28a28
  store i32 %v25_28a2e, i32* %eax.global-to-local, align 4
  %v1_28a30 = inttoptr i32 %v25_28a2e to i8*
  %v2_28a30 = load i8, i8* %v1_28a30, align 1
  %v5_28a30 = add i8 %v2_28a30, %v4_28a2e
  store i8 %v5_28a30, i8* %v1_28a30, align 1
  %v0_28a32 = load i32, i32* %eax.global-to-local, align 4
  %v1_28a32 = load i32, i32* @ebp, align 4
  %v2_28a32 = add i32 %v1_28a32, -12
  %v3_28a32 = inttoptr i32 %v2_28a32 to i32*
  store i32 %v0_28a32, i32* %v3_28a32, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_28a37 = load i32, i32* @ebp, align 4
  %v1_28a37 = add i32 %v0_28a37, -40
  %v2_28a37 = inttoptr i32 %v1_28a37 to i32*
  %v3_28a37 = load i32, i32* %v2_28a37, align 4
  store i32 %v3_28a37, i32* %eax.global-to-local, align 4
  %v1_28a3e = add i32 %v0_28a37, -36
  %v2_28a3e = inttoptr i32 %v1_28a3e to i32*
  %v3_28a3e = load i32, i32* %v2_28a3e, align 4
  store i32 %v3_28a3e, i32* %eax.global-to-local, align 4
  %v1_28a45 = add i32 %v0_28a37, -28
  %v2_28a45 = inttoptr i32 %v1_28a45 to i32*
  %v3_28a45 = load i32, i32* %v2_28a45, align 4
  store i32 %v3_28a45, i32* %eax.global-to-local, align 4
  %v1_28a4c = add i32 %v0_28a37, -32
  %v2_28a4c = inttoptr i32 %v1_28a4c to i32*
  %v3_28a4c = load i32, i32* %v2_28a4c, align 4
  store i32 %v3_28a4c, i32* %eax.global-to-local, align 4
  %v4_28a52 = call i32 @unknown_51f2c(i32 %v3_28a4c, i32 %v3_28a45, i32 %v3_28a3e, i32 %v3_28a37)
  store i32 %v4_28a52, i32* %eax.global-to-local, align 4
  %v0_28a57 = load i32, i32* @ebp, align 4
  %v1_28a57 = add i32 %v0_28a57, -12
  %v2_28a57 = inttoptr i32 %v1_28a57 to i32*
  %v3_28a57 = load i32, i32* %v2_28a57, align 4
  store i32 %v3_28a57, i32* %eax.global-to-local, align 4
  %v1_28a5a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28a5a = xor i32 %v1_28a5a, %v3_28a57
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_28a5a = icmp eq i32 %v2_28a5a, 0
  store i32 %v2_28a5a, i32* @eax, align 4
  br i1 %v3_28a5a, label %bb10, label %dec_label_pc_28a63

bb10:                                             ; preds = %dec_label_pc_28a21
  %v1_28a61 = call i32 @function_28a68()
  store i32 %v1_28a61, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28a63

dec_label_pc_28a63:                               ; preds = %bb10, %dec_label_pc_28a21
  %v2_28a61 = phi i32 [ %v1_28a61, %bb10 ], [ %v2_28a5a, %dec_label_pc_28a21 ]
  ret i32 %v2_28a61

; uselistorder directives
  uselistorder i32 %v0_28a37, { 1, 0, 2, 3 }
  uselistorder i8 %v4_28a2e, { 0, 2, 1 }
  uselistorder i8 %v5_28a28, { 1, 0, 2 }
  uselistorder i8 %v9_28a22, { 1, 0 }
  uselistorder i8 %v8_28a22, { 1, 0 }
  uselistorder i8 %v3_28a22, { 1, 2, 0 }
  uselistorder i32 %v30_28a22, { 1, 0 }
  uselistorder i32 %v1_28a1f, { 0, 2, 1 }
  uselistorder i32 1166793797, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_28a21, { 1, 0 }
}

define i32 @function_28a68() local_unnamed_addr {
dec_label_pc_28a68:
  %v0_28a69 = load i32, i32* @eax, align 4
  ret i32 %v0_28a69
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSsEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_28a6a:
  %v1_28aa0 = call i32 @unknown_4b50a(i32 %arg3)
  %v3_28ab7 = call i32 @unknown_5202e(i32 %arg2, i32 %v1_28aa0, i32 1)
  store i32 %v3_28ab7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28ac8

bb:                                               ; preds = %dec_label_pc_28a6a
  %v1_28ac6 = call i32 @function_28acd()
  br label %dec_label_pc_28ac8

dec_label_pc_28ac8:                               ; preds = %bb, %dec_label_pc_28a6a
  %v2_28ac6 = phi i32 [ %v1_28ac6, %bb ], [ %v3_28ab7, %dec_label_pc_28a6a ]
  ret i32 %v2_28ac6
}

define i32 @function_28acd() local_unnamed_addr {
dec_label_pc_28acd:
  %v0_28ace = load i32, i32* @eax, align 4
  ret i32 %v0_28ace
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSD_EENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_28acf:
  %v1_28b05 = call i32 @unknown_4b5de(i32 %arg3)
  %v3_28b1c = call i32 @unknown_520dd(i32 %arg2, i32 %v1_28b05, i32 1)
  store i32 %v3_28b1c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28b2d

bb:                                               ; preds = %dec_label_pc_28acf
  %v1_28b2b = call i32 @function_28b32()
  br label %dec_label_pc_28b2d

dec_label_pc_28b2d:                               ; preds = %bb, %dec_label_pc_28acf
  %v2_28b2b = phi i32 [ %v1_28b2b, %bb ], [ %v3_28b1c, %dec_label_pc_28acf ]
  ret i32 %v2_28b2b
}

define i32 @function_28b32() local_unnamed_addr {
dec_label_pc_28b32:
  %v0_28b33 = load i32, i32* @eax, align 4
  ret i32 %v0_28b33
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSI_EENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_28b34:
  %v1_28b6a = call i32 @unknown_4b6b1(i32 %arg3)
  %v3_28b81 = call i32 @unknown_5219a(i32 %arg2, i32 %v1_28b6a, i32 1)
  store i32 %v3_28b81, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28b92

bb:                                               ; preds = %dec_label_pc_28b34
  %v1_28b90 = call i32 @function_28b97()
  br label %dec_label_pc_28b92

dec_label_pc_28b92:                               ; preds = %bb, %dec_label_pc_28b34
  %v2_28b90 = phi i32 [ %v1_28b90, %bb ], [ %v3_28b81, %dec_label_pc_28b34 ]
  ret i32 %v2_28b90
}

define i32 @function_28b97() local_unnamed_addr {
dec_label_pc_28b97:
  %v0_28b98 = load i32, i32* @eax, align 4
  ret i32 %v0_28b98
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvbEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_28b99:
  %v1_28bcf = call i32 @unknown_4b784(i32 %arg3)
  %v3_28be6 = call i32 @unknown_52257(i32 %arg2, i32 %v1_28bcf, i32 1)
  store i32 %v3_28be6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28bf7

bb:                                               ; preds = %dec_label_pc_28b99
  %v1_28bf5 = call i32 @function_28bfc()
  br label %dec_label_pc_28bf7

dec_label_pc_28bf7:                               ; preds = %bb, %dec_label_pc_28b99
  %v2_28bf5 = phi i32 [ %v1_28bf5, %bb ], [ %v3_28be6, %dec_label_pc_28b99 ]
  ret i32 %v2_28bf5
}

define i32 @function_28bfc() local_unnamed_addr {
dec_label_pc_28bfc:
  %v0_28bfd = load i32, i32* @eax, align 4
  ret i32 %v0_28bfd
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvxEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28bfe:
  ret i32 %arg4
}

define i32 @function_28c1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28c1c:
  %v0_28c1c = load i32, i32* @ebp, align 4
  %v1_28c1c = add i32 %v0_28c1c, 24
  %v2_28c1c = inttoptr i32 %v1_28c1c to i8*
  %v3_28c1c = load i8, i8* %v2_28c1c, align 1
  %v3_28c20 = add i32 %v0_28c1c, -41
  %v4_28c20 = inttoptr i32 %v3_28c20 to i8*
  store i8 %v3_28c1c, i8* %v4_28c20, align 1
  %v0_28c23 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_28c29 = load i32, i32* @ebp, align 4
  %v2_28c29 = add i32 %v1_28c29, -12
  %v3_28c29 = inttoptr i32 %v2_28c29 to i32*
  store i32 %v0_28c23, i32* %v3_28c29, align 4
  %v0_28c2e = load i32, i32* @ebp, align 4
  %v1_28c2e = add i32 %v0_28c2e, -36
  %v2_28c2e = inttoptr i32 %v1_28c2e to i32*
  %v3_28c2e = load i32, i32* %v2_28c2e, align 4
  %v1_28c34 = call i32 @unknown_4b84c(i32 %v3_28c2e)
  %v0_28c45 = load i32, i32* @ebp, align 4
  %v1_28c45 = add i32 %v0_28c45, -32
  %v2_28c45 = inttoptr i32 %v1_28c45 to i32*
  %v3_28c45 = load i32, i32* %v2_28c45, align 4
  %v3_28c4b = call i32 @unknown_5230c(i32 %v3_28c45, i32 %v1_28c34, i32 1)
  store i32 %v3_28c4b, i32* @eax, align 4
  %v0_28c50 = load i32, i32* @ebp, align 4
  %v1_28c50 = add i32 %v0_28c50, -12
  %v2_28c50 = inttoptr i32 %v1_28c50 to i32*
  %v3_28c50 = load i32, i32* %v2_28c50, align 4
  %v1_28c53 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28c53 = icmp eq i32 %v1_28c53, %v3_28c50
  br i1 %v3_28c53, label %bb, label %dec_label_pc_28c5c

bb:                                               ; preds = %dec_label_pc_28c1c
  %v1_28c5a = call i32 @function_28c61()
  br label %dec_label_pc_28c5c

dec_label_pc_28c5c:                               ; preds = %bb, %dec_label_pc_28c1c
  %v2_28c5a = phi i32 [ %v1_28c5a, %bb ], [ %v3_28c4b, %dec_label_pc_28c1c ]
  ret i32 %v2_28c5a

; uselistorder directives
  uselistorder i32 -41, { 4, 3, 5, 7, 8, 2, 9, 6, 0, 11, 10, 1 }
}

define i32 @function_28c5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_28c5e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28c61() local_unnamed_addr {
dec_label_pc_28c61:
  %v0_28c62 = load i32, i32* @eax, align 4
  ret i32 %v0_28c62
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvdEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_28c63:
  %v1_28c99 = call i32 @unknown_4b915(i32 %arg3)
  %v3_28cb0 = call i32 @unknown_523bb(i32 %arg2, i32 %v1_28c99, i32 1)
  store i32 %v3_28cb0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28cc1

bb:                                               ; preds = %dec_label_pc_28c63
  %v1_28cbf = call i32 @function_28cc6()
  br label %dec_label_pc_28cc1

dec_label_pc_28cc1:                               ; preds = %bb, %dec_label_pc_28c63
  %v2_28cbf = phi i32 [ %v1_28cbf, %bb ], [ %v3_28cb0, %dec_label_pc_28c63 ]
  ret i32 %v2_28cbf
}

define i32 @function_28cc6() local_unnamed_addr {
dec_label_pc_28cc6:
  %v0_28cc7 = load i32, i32* @eax, align 4
  ret i32 %v0_28cc7
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEaSERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28cc8:
  %v1_28ceb = call i32 @unknown_4f17a(i32 %arg2)
  %v2_28cfa = call i32 @unknown_5246a(i32 %arg1, i32 %v1_28ceb)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28d0e

bb:                                               ; preds = %dec_label_pc_28cc8
  %v1_28d0c = call i32 @function_28d13()
  br label %dec_label_pc_28d0e

dec_label_pc_28d0e:                               ; preds = %bb, %dec_label_pc_28cc8
  %v2_28d0c = phi i32 [ %v1_28d0c, %bb ], [ %arg1, %dec_label_pc_28cc8 ]
  ret i32 %v2_28d0c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_28d13() local_unnamed_addr {
dec_label_pc_28d13:
  %v0_28d14 = load i32, i32* @eax, align 4
  ret i32 %v0_28d14
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEaSERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28d16:
  %v1_28d39 = call i32 @unknown_4f1fe(i32 %arg2)
  ret i32 %v1_28d39
}

define i32 @function_28d40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28d40:
  %v0_28d42 = load i32, i32* @ebp, align 4
  %v1_28d42 = add i32 %v0_28d42, -28
  %v2_28d42 = inttoptr i32 %v1_28d42 to i32*
  %v3_28d42 = load i32, i32* %v2_28d42, align 4
  %v1_28d48 = call i32 @unknown_52502(i32 %v3_28d42)
  %v0_28d4d = load i32, i32* @ebp, align 4
  %v1_28d4d = add i32 %v0_28d4d, -28
  %v2_28d4d = inttoptr i32 %v1_28d4d to i32*
  %v3_28d4d = load i32, i32* %v2_28d4d, align 4
  store i32 %v3_28d4d, i32* @eax, align 4
  %v1_28d50 = add i32 %v0_28d4d, -12
  %v2_28d50 = inttoptr i32 %v1_28d50 to i32*
  %v3_28d50 = load i32, i32* %v2_28d50, align 4
  %v1_28d53 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28d53 = icmp eq i32 %v1_28d53, %v3_28d50
  br i1 %v3_28d53, label %bb, label %dec_label_pc_28d5c

bb:                                               ; preds = %dec_label_pc_28d40
  %v1_28d5a = call i32 @function_28d61()
  br label %dec_label_pc_28d5c

dec_label_pc_28d5c:                               ; preds = %bb, %dec_label_pc_28d40
  %v2_28d5a = phi i32 [ %v1_28d5a, %bb ], [ %v3_28d4d, %dec_label_pc_28d40 ]
  ret i32 %v2_28d5a
}

define i32 @function_28d61() local_unnamed_addr {
dec_label_pc_28d61:
  %v0_28d62 = load i32, i32* @eax, align 4
  ret i32 %v0_28d62
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implISsEEvRKT_N4mpl_5bool_ILb0EEESR_NSQ_ILb1EEE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_28d64:
  %v2_28d9c = load i32, i32* %arg1, align 4
  %v1_28da1 = call i32 @unknown_3eb36(i32 %v2_28d9c)
  %v2_28da9 = load i32, i32* %arg1, align 4
  %v1_28dab = add i32 %v2_28da9, 4
  %v1_28db1 = call i32 @unknown_4153a(i32 %v1_28dab)
  %v2_28dc3 = call i32 @unknown_2cfaa(i32 4, i32 %v1_28db1)
  %v1_28dca = icmp eq i32 %v2_28dc3, 0
  br i1 %v1_28dca, label %bb, label %dec_label_pc_28dce

bb:                                               ; preds = %dec_label_pc_28d64
  %v1_28dcc = call i32 @function_28ddd()
  br label %dec_label_pc_28dce

dec_label_pc_28dce:                               ; preds = %bb, %dec_label_pc_28d64
  ret i32 %arg2
}

define i32 @function_28ddd() local_unnamed_addr {
dec_label_pc_28ddd:
  %v0_28ddd = load i32, i32* @ebp, align 4
  %v1_28ddd = add i32 %v0_28ddd, -44
  %v2_28ddd = inttoptr i32 %v1_28ddd to i32*
  %v3_28ddd = load i32, i32* %v2_28ddd, align 4
  %v1_28de0 = add i32 %v3_28ddd, 4
  %v2_28de0 = inttoptr i32 %v1_28de0 to i32*
  %v3_28de0 = load i32, i32* %v2_28de0, align 4
  %v1_28de6 = inttoptr i32 %v3_28ddd to i32*
  %v2_28de6 = load i32, i32* %v1_28de6, align 4
  %v2_28def = call i32 @unknown_4320e(i32 %v2_28de6, i32 %v3_28de0)
  %v0_28df4 = load i32, i32* @ebp, align 4
  %v1_28df4 = add i32 %v0_28df4, -28
  %v2_28df4 = inttoptr i32 %v1_28df4 to i32*
  %v3_28df4 = load i32, i32* %v2_28df4, align 4
  %v1_28df7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28df7 = xor i32 %v1_28df7, %v3_28df4
  %v3_28df7 = icmp eq i32 %v2_28df7, 0
  store i32 %v2_28df7, i32* @eax, align 4
  br i1 %v3_28df7, label %bb, label %dec_label_pc_28e00

bb:                                               ; preds = %dec_label_pc_28ddd
  %v2_28dfe = call i32 @function_28e6a(i32 %v2_28de6)
  store i32 %v2_28dfe, i32* @eax, align 4
  br label %dec_label_pc_28e00

dec_label_pc_28e00:                               ; preds = %bb, %dec_label_pc_28ddd
  %v0_28e00 = call i32 @function_28e65()
  ret i32 %v0_28e00

; uselistorder directives
  uselistorder i32 (i32)* @function_28e6a, { 4, 3, 2, 1, 0 }
}

define i32 @function_28e55() local_unnamed_addr {
dec_label_pc_28e55:
  %eax.global-to-local = alloca i32, align 4
  %v0_28e55 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28e55
}

define i32 @function_28e65() local_unnamed_addr {
dec_label_pc_28e65:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28e6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_28e6a:
  store i32 %arg1, i32* @ebx, align 4
  %v0_28e71 = load i32, i32* @eax, align 4
  ret i32 %v0_28e71
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implISA_EEvRKT_N4mpl_5bool_ILb0EEESR_NSQ_ILb1EEE(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_28e72:
  %v0_28e9c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_28e9c
}

define i32 @function_28ea6(i32 %arg1) local_unnamed_addr {
dec_label_pc_28ea6:
  %v0_28eaf = call i32 @unknown_3ec44()
  %v0_28eb4 = load i32, i32* @ebp, align 4
  %v1_28eb4 = add i32 %v0_28eb4, -44
  %v2_28eb4 = inttoptr i32 %v1_28eb4 to i32*
  %v3_28eb4 = load i32, i32* %v2_28eb4, align 4
  %v1_28eb7 = inttoptr i32 %v3_28eb4 to i32*
  %v2_28eb7 = load i32, i32* %v1_28eb7, align 4
  %v1_28eb9 = add i32 %v2_28eb7, 4
  %v1_28ebf = call i32 @unknown_41648(i32 %v1_28eb9)
  %v2_28ed1 = call i32 @unknown_2d0b8(i32 4, i32 %v1_28ebf)
  %v1_28ed8 = icmp eq i32 %v2_28ed1, 0
  br i1 %v1_28ed8, label %dec_label_pc_28eeb, label %dec_label_pc_28edc

dec_label_pc_28edc:                               ; preds = %dec_label_pc_28ea6
  %v0_28edc = load i32, i32* @ebp, align 4
  %v1_28edc = add i32 %v0_28edc, -48
  %v2_28edc = inttoptr i32 %v1_28edc to i32*
  %v3_28edc = load i32, i32* %v2_28edc, align 4
  %v2_28ee6 = call i32 @unknown_4de66(i32 %v2_28ed1, i32 %v3_28edc)
  br label %dec_label_pc_28eeb

dec_label_pc_28eeb:                               ; preds = %dec_label_pc_28edc, %dec_label_pc_28ea6
  %v0_28eeb = load i32, i32* @ebp, align 4
  %v1_28eeb = add i32 %v0_28eeb, -44
  %v2_28eeb = inttoptr i32 %v1_28eeb to i32*
  %v3_28eeb = load i32, i32* %v2_28eeb, align 4
  %v1_28eee = add i32 %v3_28eeb, 4
  %v2_28eee = inttoptr i32 %v1_28eee to i32*
  %v3_28eee = load i32, i32* %v2_28eee, align 4
  %v1_28ef4 = inttoptr i32 %v3_28eeb to i32*
  %v2_28ef4 = load i32, i32* %v1_28ef4, align 4
  %v2_28efd = call i32 @unknown_4331c(i32 %v2_28ef4, i32 %v3_28eee)
  %v0_28f02 = load i32, i32* @ebp, align 4
  %v1_28f02 = add i32 %v0_28f02, -28
  %v2_28f02 = inttoptr i32 %v1_28f02 to i32*
  %v3_28f02 = load i32, i32* %v2_28f02, align 4
  %v1_28f05 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28f05 = xor i32 %v1_28f05, %v3_28f02
  %v3_28f05 = icmp eq i32 %v2_28f05, 0
  store i32 %v2_28f05, i32* @eax, align 4
  br i1 %v3_28f05, label %bb, label %dec_label_pc_28f0e

bb:                                               ; preds = %dec_label_pc_28eeb
  %v1_28f0c = call i32 @function_28f78()
  store i32 %v1_28f0c, i32* @eax, align 4
  br label %dec_label_pc_28f0e

dec_label_pc_28f0e:                               ; preds = %bb, %dec_label_pc_28eeb
  %v0_28f0e = call i32 @function_28f73()
  ret i32 %v0_28f0e
}

define i32 @function_28f12(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f12:
  %v0_28f12 = load i32, i32* @esi, align 4
  %v0_28f16 = load i32, i32* @ebx, align 4
  %v2_28f19 = call i32 @unknown_2d0eb(i32 %v0_28f16, i32 %v0_28f12)
  %v0_28f1e = load i32, i32* @edi, align 4
  ret i32 %v0_28f1e
}

define i32 @function_28f50(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f50:
  %eax.global-to-local = alloca i32, align 4
  %v0_28f50 = load i32, i32* @eax, align 4
  %v1_28f50 = trunc i32 %v0_28f50 to i8
  %v2_28f50 = add i8 %v1_28f50, 3
  %v16_28f50 = zext i8 %v2_28f50 to i32
  %v18_28f50 = and i32 %v0_28f50, -256
  %v19_28f50 = or i32 %v16_28f50, %v18_28f50
  store i32 %v19_28f50, i32* %eax.global-to-local, align 4
  %v1_28f52 = inttoptr i32 %v19_28f50 to i8*
  %v2_28f52 = load i8, i8* %v1_28f52, align 1
  %v5_28f52 = add i8 %v2_28f52, %v2_28f50
  store i8 %v5_28f52, i8* %v1_28f52, align 1
  %v0_28f54 = load i32, i32* @ecx, align 4
  %v1_28f54 = add i32 %v0_28f54, -1075305468
  %v2_28f54 = inttoptr i32 %v1_28f54 to i8*
  %v3_28f54 = load i8, i8* %v2_28f54, align 1
  %v5_28f54 = trunc i32 %v0_28f54 to i8
  %v6_28f54 = add i8 %v3_28f54, %v5_28f54
  store i8 %v6_28f54, i8* %v2_28f54, align 1
  %v24_28f54 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v24_28f54
}

define i32 @function_28f63() local_unnamed_addr {
dec_label_pc_28f63:
  %eax.global-to-local = alloca i32, align 4
  %v0_28f63 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28f63
}

define i32 @function_28f73() local_unnamed_addr {
dec_label_pc_28f73:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28f78() local_unnamed_addr {
dec_label_pc_28f78:
  %v0_28f7f = load i32, i32* @eax, align 4
  ret i32 %v0_28f7f
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implISF_EEvRKT_N4mpl_5bool_ILb0EEESR_NSQ_ILb1EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_28f80:
  %v4_28f95 = zext i8 %arg3 to i32
  ret i32 %v4_28f95
}

define i32 @function_28f9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f9c:
  %v0_28f9c = load i32, i32* @ebp, align 4
  %v1_28f9c = add i32 %v0_28f9c, 20
  %v2_28f9c = inttoptr i32 %v1_28f9c to i8*
  %v3_28f9c = load i8, i8* %v2_28f9c, align 1
  %v3_28fa0 = add i32 %v0_28f9c, -50
  %v4_28fa0 = inttoptr i32 %v3_28fa0 to i8*
  store i8 %v3_28f9c, i8* %v4_28fa0, align 1
  %v0_28fa3 = load i32, i32* @ebp, align 4
  %v1_28fa3 = add i32 %v0_28fa3, 24
  %v2_28fa3 = inttoptr i32 %v1_28fa3 to i8*
  %v3_28fa3 = load i8, i8* %v2_28fa3, align 1
  %v3_28fa7 = add i32 %v0_28fa3, -51
  %v4_28fa7 = inttoptr i32 %v3_28fa7 to i8*
  store i8 %v3_28fa3, i8* %v4_28fa7, align 1
  %v0_28faa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_28fb0 = load i32, i32* @ebp, align 4
  %v2_28fb0 = add i32 %v1_28fb0, -28
  %v3_28fb0 = inttoptr i32 %v2_28fb0 to i32*
  store i32 %v0_28faa, i32* %v3_28fb0, align 4
  %v0_28fb5 = load i32, i32* @ebp, align 4
  %v1_28fb5 = add i32 %v0_28fb5, -44
  %v2_28fb5 = inttoptr i32 %v1_28fb5 to i32*
  %v3_28fb5 = load i32, i32* %v2_28fb5, align 4
  %v1_28fb8 = inttoptr i32 %v3_28fb5 to i32*
  %v2_28fb8 = load i32, i32* %v1_28fb8, align 4
  %v1_28fbd = call i32 @unknown_3ed52(i32 %v2_28fb8)
  %v0_28fc2 = load i32, i32* @ebp, align 4
  %v1_28fc2 = add i32 %v0_28fc2, -44
  %v2_28fc2 = inttoptr i32 %v1_28fc2 to i32*
  %v3_28fc2 = load i32, i32* %v2_28fc2, align 4
  %v1_28fc5 = inttoptr i32 %v3_28fc2 to i32*
  %v2_28fc5 = load i32, i32* %v1_28fc5, align 4
  ret i32 %v2_28fc5
}

define i32 @function_28fc9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28fc9:
  %v1_28fcd = call i32 @unknown_41756(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_28fcd, i32* @esi, align 4
  %v2_28fdf = call i32 @unknown_2d1c6(i32 4, i32 %v1_28fcd)
  store i32 %v2_28fdf, i32* @ebx, align 4
  %v1_28fe6 = icmp eq i32 %v2_28fdf, 0
  br i1 %v1_28fe6, label %dec_label_pc_28ff9, label %dec_label_pc_28fea

dec_label_pc_28fea:                               ; preds = %dec_label_pc_28fc9
  %v0_28fea = load i32, i32* @ebp, align 4
  %v1_28fea = add i32 %v0_28fea, -48
  %v2_28fea = inttoptr i32 %v1_28fea to i32*
  %v3_28fea = load i32, i32* %v2_28fea, align 4
  %v2_28ff4 = call i32 @unknown_4dfee(i32 %v2_28fdf, i32 %v3_28fea)
  br label %dec_label_pc_28ff9

dec_label_pc_28ff9:                               ; preds = %dec_label_pc_28fea, %dec_label_pc_28fc9
  %v0_28ff9 = load i32, i32* @ebp, align 4
  %v1_28ff9 = add i32 %v0_28ff9, -44
  %v2_28ff9 = inttoptr i32 %v1_28ff9 to i32*
  %v3_28ff9 = load i32, i32* %v2_28ff9, align 4
  %v1_28ffc = add i32 %v3_28ff9, 4
  %v2_28ffc = inttoptr i32 %v1_28ffc to i32*
  %v3_28ffc = load i32, i32* %v2_28ffc, align 4
  %v1_29002 = inttoptr i32 %v3_28ff9 to i32*
  %v2_29002 = load i32, i32* %v1_29002, align 4
  %v2_2900b = call i32 @unknown_4342a(i32 %v2_29002, i32 %v3_28ffc)
  %v0_29010 = load i32, i32* @ebp, align 4
  %v1_29010 = add i32 %v0_29010, -28
  %v2_29010 = inttoptr i32 %v1_29010 to i32*
  %v3_29010 = load i32, i32* %v2_29010, align 4
  %v1_29013 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29013 = xor i32 %v1_29013, %v3_29010
  %v3_29013 = icmp eq i32 %v2_29013, 0
  store i32 %v2_29013, i32* @eax, align 4
  br i1 %v3_29013, label %bb, label %dec_label_pc_2901c

bb:                                               ; preds = %dec_label_pc_28ff9
  %v1_2901a = call i32 @function_29086()
  store i32 %v1_2901a, i32* @eax, align 4
  br label %dec_label_pc_2901c

dec_label_pc_2901c:                               ; preds = %bb, %dec_label_pc_28ff9
  %v0_2901c = call i32 @function_29081()
  ret i32 %v0_2901c
}

define i32 @function_2902c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2902c:
  %v0_2902c = load i32, i32* @edi, align 4
  ret i32 %v0_2902c
}

define i32 @function_29036(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29036:
  %v0_29036 = load i32, i32* @ebp, align 4
  %v1_29036 = add i32 %v0_29036, -44
  %v2_29036 = inttoptr i32 %v1_29036 to i32*
  %v3_29036 = load i32, i32* %v2_29036, align 4
  %v1_29039 = inttoptr i32 %v3_29036 to i32*
  %v2_29039 = load i32, i32* %v1_29039, align 4
  %v1_2903b = add i32 %v2_29039, 4
  %v1_29041 = call i32 @unknown_41756(i32 %v1_2903b)
  %v2_29051 = call i32 @unknown_2d1c6(i32 1, i32 %v1_29041)
  %v0_29056 = load i32, i32* @ebp, align 4
  %v1_29056 = add i32 %v0_29056, -44
  %v2_29056 = inttoptr i32 %v1_29056 to i32*
  %v3_29056 = load i32, i32* %v2_29056, align 4
  ret i32 %v3_29056

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_2d1c6, { 1, 0 }
  uselistorder i32 (i32)* @unknown_41756, { 1, 0 }
}

define i32 @function_29059(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29059:
  %v0_29063 = load i32, i32* @eax, align 4
  %v2_29066 = call i32 @unknown_4342a(i32 %v0_29063, i32 3)
  ret i32 %v2_29066

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4342a, { 1, 0 }
}

define i32 @function_29081() local_unnamed_addr {
dec_label_pc_29081:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29086() local_unnamed_addr {
dec_label_pc_29086:
  %v0_2908d = load i32, i32* @eax, align 4
  ret i32 %v0_2908d
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implIbN4mpl_5bool_ILb1EEENSJ_18has_fallback_type_EEEvRKT_SO_T0_T1_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2908e:
  %v2_290c3 = load i32, i32* %arg1, align 4
  %v1_290c8 = call i32 @unknown_3ee60(i32 %v2_290c3)
  %v2_290d0 = load i32, i32* %arg1, align 4
  %v1_290d2 = add i32 %v2_290d0, 4
  %v1_290d8 = call i32 @unknown_41864(i32 %v1_290d2)
  ret i32 %v1_290d8
}

define i32 @function_290e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_290e1:
  %v1_290e8 = call i32 @unknown_2d2d4(i32 1)
  %v2_290ed = icmp eq i32 %v1_290e8, 0
  br i1 %v2_290ed, label %dec_label_pc_290f9, label %dec_label_pc_290f1

dec_label_pc_290f1:                               ; preds = %dec_label_pc_290e1
  %v2_290e8 = inttoptr i32 %v1_290e8 to i8*
  %v0_290f1 = load i32, i32* @ebp, align 4
  %v1_290f1 = add i32 %v0_290f1, -32
  %v2_290f1 = inttoptr i32 %v1_290f1 to i32*
  %v3_290f1 = load i32, i32* %v2_290f1, align 4
  %v1_290f4 = inttoptr i32 %v3_290f1 to i8*
  %v2_290f4 = load i8, i8* %v1_290f4, align 1
  store i8 %v2_290f4, i8* %v2_290e8, align 1
  br label %dec_label_pc_290f9

dec_label_pc_290f9:                               ; preds = %dec_label_pc_290f1, %dec_label_pc_290e1
  %v0_290f9 = load i32, i32* @ebp, align 4
  %v1_290f9 = add i32 %v0_290f9, -28
  %v2_290f9 = inttoptr i32 %v1_290f9 to i32*
  %v3_290f9 = load i32, i32* %v2_290f9, align 4
  %v1_290fc = add i32 %v3_290f9, 4
  %v2_290fc = inttoptr i32 %v1_290fc to i32*
  %v3_290fc = load i32, i32* %v2_290fc, align 4
  %v1_29102 = inttoptr i32 %v3_290f9 to i32*
  %v2_29102 = load i32, i32* %v1_29102, align 4
  %v2_2910b = call i32 @unknown_43538(i32 %v2_29102, i32 %v3_290fc)
  %v0_29110 = load i32, i32* @ebp, align 4
  %v1_29110 = add i32 %v0_29110, -12
  %v2_29110 = inttoptr i32 %v1_29110 to i32*
  %v3_29110 = load i32, i32* %v2_29110, align 4
  %v1_29113 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29113 = xor i32 %v1_29113, %v3_29110
  %v3_29113 = icmp eq i32 %v2_29113, 0
  store i32 %v2_29113, i32* @eax, align 4
  br i1 %v3_29113, label %bb, label %dec_label_pc_2911c

bb:                                               ; preds = %dec_label_pc_290f9
  %v1_2911a = call i32 @function_29121()
  br label %dec_label_pc_2911c

dec_label_pc_2911c:                               ; preds = %bb, %dec_label_pc_290f9
  %v2_2911a = phi i32 [ %v1_2911a, %bb ], [ %v2_29113, %dec_label_pc_290f9 ]
  ret i32 %v2_2911a

; uselistorder directives
  uselistorder i32 %v1_290e8, { 1, 0 }
}

define i32 @function_29121() local_unnamed_addr {
dec_label_pc_29121:
  %v0_29122 = load i32, i32* @eax, align 4
  ret i32 %v0_29122
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implIxN4mpl_5bool_ILb1EEENSJ_18has_fallback_type_EEEvRKT_SO_T0_T1_() local_unnamed_addr {
dec_label_pc_29124:
  %eax.global-to-local = alloca i32, align 4
  %v17_29127 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_29127
}

define x86_fp80 @function_2912c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2912c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2912c = load i32, i32* @ecx, align 4
  %v1_2912c = add i32 %v0_2912c, 1166795845
  %v2_2912c = inttoptr i32 %v1_2912c to i8*
  %v3_2912c = load i8, i8* %v2_2912c, align 1
  %v5_2912c = trunc i32 %v0_2912c to i8
  %v6_2912c = or i8 %v3_2912c, %v5_2912c
  store i8 %v6_2912c, i8* %v2_2912c, align 1
  %v0_29132 = load i32, i32* @eax, align 4
  %v2_29132 = or i32 %v0_29132, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_29132, i32* %eax.global-to-local, align 4
  %v0_29134 = load i32, i32* @ebp, align 4
  %v1_29134 = add i32 %v0_29134, 1
  %v9_29134 = icmp eq i32 %v1_29134, 0
  store i32 %v1_29134, i32* %ebp.global-to-local, align 4
  %v0_29135 = load i32, i32* @ecx, align 4
  %v1_29135 = add i32 %v0_29135, -1
  %v2_29135 = icmp eq i32 %v1_29135, 0
  %v4_29135 = or i1 %v9_29134, %v2_29135
  br i1 %v4_29135, label %dec_label_pc_29137, label %dec_label_pc_29146

dec_label_pc_29137:                               ; preds = %dec_label_pc_2912c
  %v1_29139 = add i32 %v2_29132, -1240473787
  %v2_29139 = inttoptr i32 %v1_29139 to i8*
  %v3_29139 = load i8, i8* %v2_29139, align 1
  %v5_29139 = trunc i32 %v1_29135 to i8
  %v8_29139 = add i8 %v3_29139, %v5_29139
  %v28_29139 = icmp ult i8 %v8_29139, %v3_29139
  store i1 %v28_29139, i1* %cf.global-to-local, align 1
  store i8 %v8_29139, i8* %v2_29139, align 1
  %v0_2913f = load i32, i32* %ebp.global-to-local, align 4
  %v0_29140 = load i32, i32* %eax.global-to-local, align 4
  %v1_29140 = trunc i32 %v0_29140 to i8
  %v2_29140 = load i1, i1* %cf.global-to-local, align 1
  %v3_29140 = zext i1 %v2_29140 to i8
  %v4_29140 = add i8 %v1_29140, ptrtoint (i8* @global_var_88.1843 to i8)
  %v5_29140 = add i8 %v4_29140, %v3_29140
  %v20_29140 = add i8 %v1_29140, -120
  %v21_29140 = add i8 %v20_29140, %v3_29140
  %v22_29140 = icmp ule i8 %v21_29140, %v1_29140
  %v23_29140 = icmp ugt i8 %v1_29140, 119
  %v24_29140 = select i1 %v2_29140, i1 %v22_29140, i1 %v23_29140
  store i1 %v24_29140, i1* %cf.global-to-local, align 1
  %v25_29140 = zext i8 %v5_29140 to i32
  %v27_29140 = and i32 %v0_29140, -256
  %v28_29140 = or i32 %v25_29140, %v27_29140
  store i32 %v28_29140, i32* %eax.global-to-local, align 4
  %v1_29142 = add i32 %v0_2913f, 2
  store i32 %v1_29142, i32* %ebp.global-to-local, align 4
  %v3_29143 = load i16, i16* bitcast (i32* @edi to i16*), align 4
  %v4_29143 = sitofp i16 %v3_29143 to x86_fp80
  %v5_29143 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_29143 = fmul x86_fp80 %v5_29143, %v4_29143
  ret x86_fp80 %v6_29143

dec_label_pc_29146:                               ; preds = %dec_label_pc_2912c
  %v1_29146 = add i32 %v0_29134, 2
  store i32 %v1_29146, i32* %ebp.global-to-local, align 4
  %v1_29147 = add i32 %v2_29132, -1587159739
  %v2_29147 = inttoptr i32 %v1_29147 to i8*
  %v3_29147 = load i8, i8* %v2_29147, align 1
  %v5_29147 = trunc i32 %v1_29135 to i8
  %v8_29147 = sub i8 %v3_29147, %v5_29147
  %v23_29147 = icmp ult i8 %v3_29147, %v5_29147
  store i1 %v23_29147, i1* %cf.global-to-local, align 1
  store i8 %v8_29147, i8* %v2_29147, align 1
  %v0_2914d = load i32, i32* %eax.global-to-local, align 4
  %v1_2914d = trunc i32 %v0_2914d to i8
  %v2_2914d = load i1, i1* %cf.global-to-local, align 1
  %v3_2914d = zext i1 %v2_2914d to i8
  %v4_2914d = add i8 %v3_2914d, %v1_2914d
  %v19_2914d = icmp ule i8 %v4_2914d, %v1_2914d
  %v21_2914d = icmp eq i1 %v2_2914d, %v19_2914d
  store i1 %v21_2914d, i1* %cf.global-to-local, align 1
  %v22_2914d = zext i8 %v4_2914d to i32
  %v24_2914d = and i32 %v0_2914d, -256
  %v25_2914d = or i32 %v22_2914d, %v24_2914d
  store i32 %v25_2914d, i32* %eax.global-to-local, align 4
  %v1_2914f = inttoptr i32 %v25_2914d to i8*
  %v2_2914f = load i8, i8* %v1_2914f, align 1
  %v5_2914f = add i8 %v2_2914f, %v4_2914d
  store i8 %v5_2914f, i8* %v1_2914f, align 1
  %v0_29151 = load i32, i32* %eax.global-to-local, align 4
  %v1_29151 = load i32, i32* %ebp.global-to-local, align 4
  %v2_29151 = add i32 %v1_29151, -12
  %v3_29151 = inttoptr i32 %v2_29151 to i32*
  store i32 %v0_29151, i32* %v3_29151, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_29156 = load i32, i32* %ebp.global-to-local, align 4
  %v1_29156 = add i32 %v0_29156, -28
  %v2_29156 = inttoptr i32 %v1_29156 to i32*
  %v3_29156 = load i32, i32* %v2_29156, align 4
  store i32 %v3_29156, i32* %eax.global-to-local, align 4
  %v1_29159 = inttoptr i32 %v3_29156 to i32*
  %v2_29159 = load i32, i32* %v1_29159, align 4
  store i32 %v2_29159, i32* %eax.global-to-local, align 4
  %v1_2915e = call i32 @unknown_3eef6(i32 %v2_29159)
  store i32 %v1_2915e, i32* %eax.global-to-local, align 4
  %v0_29163 = load i32, i32* %ebp.global-to-local, align 4
  %v1_29163 = add i32 %v0_29163, -28
  %v2_29163 = inttoptr i32 %v1_29163 to i32*
  %v3_29163 = load i32, i32* %v2_29163, align 4
  store i32 %v3_29163, i32* %eax.global-to-local, align 4
  %v1_29166 = inttoptr i32 %v3_29163 to i32*
  %v2_29166 = load i32, i32* %v1_29166, align 4
  %v1_29168 = add i32 %v2_29166, 4
  %v5_29168 = icmp ugt i32 %v2_29166, -5
  store i1 %v5_29168, i1* %cf.global-to-local, align 1
  store i32 %v1_29168, i32* %eax.global-to-local, align 4
  %v1_2916e = call i32 @unknown_418fa(i32 %v1_29168)
  store i32 %v1_2916e, i32* %eax.global-to-local, align 4
  %v2_29177 = load x86_fp80, x86_fp80* @st0, align 4
  ret x86_fp80 %v2_29177

; uselistorder directives
  uselistorder i8 %v4_2914d, { 0, 2, 1 }
  uselistorder i8 %v1_2914d, { 1, 0 }
  uselistorder i8 %v3_29139, { 1, 0 }
  uselistorder i32 %v1_29135, { 1, 0, 2 }
  uselistorder i32 %v2_29132, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12 }
}

define i32 @function_29181(i32 %arg1) local_unnamed_addr {
dec_label_pc_29181:
  %v2_29181 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_29181 = load i32, i32* @eax, align 4
  %v4_29181 = trunc i32 %v3_29181 to i8
  %v5_29181 = add i8 %v4_29181, %v2_29181
  %v21_29181 = inttoptr i32 %v3_29181 to i8*
  store i8 %v5_29181, i8* %v21_29181, align 1
  %v0_29183 = load i32, i32* @eax, align 4
  store i32 %v0_29183, i32* @ecx, align 4
  store i1 false, i1* @cf, align 1
  %v0_29189 = load i32, i32* @ebp, align 4
  %v1_29189 = add i32 %v0_29189, -32
  %v2_29189 = inttoptr i32 %v1_29189 to i32*
  %v3_29189 = load i32, i32* %v2_29189, align 4
  ret i32 %v3_29189
}

define i32 @function_2918c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2918c:
  %edx.global-to-local = alloca i32, align 4
  %v0_2918c = load i32, i32* @eax, align 4
  %v1_2918c = add i32 %v0_2918c, 4
  %v2_2918c = inttoptr i32 %v1_2918c to i32*
  %v3_2918c = load i32, i32* %v2_2918c, align 4
  store i32 %v3_2918c, i32* %edx.global-to-local, align 8
  %v1_29191 = load i32, i32* @ecx, align 4
  %v2_29191 = inttoptr i32 %v1_29191 to i32*
  store i32 %v0_2918c, i32* %v2_29191, align 4
  %v0_29193 = load i32, i32* %edx.global-to-local, align 8
  %v1_29193 = load i32, i32* @ecx, align 4
  %v2_29193 = add i32 %v1_29193, 4
  %v3_29193 = inttoptr i32 %v2_29193 to i32*
  store i32 %v0_29193, i32* %v3_29193, align 4
  %v0_29196 = load i32, i32* @ebp, align 4
  %v1_29196 = add i32 %v0_29196, -28
  %v2_29196 = inttoptr i32 %v1_29196 to i32*
  %v3_29196 = load i32, i32* %v2_29196, align 4
  %v1_29199 = add i32 %v3_29196, 4
  %v2_29199 = inttoptr i32 %v1_29199 to i32*
  %v3_29199 = load i32, i32* %v2_29199, align 4
  store i32 %v3_29199, i32* %edx.global-to-local, align 8
  %v3_2919c = load i32, i32* %v2_29196, align 4
  %v1_2919f = inttoptr i32 %v3_2919c to i32*
  %v2_2919f = load i32, i32* %v1_2919f, align 4
  %v2_291a8 = call i32 @unknown_435ce(i32 %v2_2919f, i32 %v3_29199)
  %v0_291ad = load i32, i32* @ebp, align 4
  %v1_291ad = add i32 %v0_291ad, -12
  %v2_291ad = inttoptr i32 %v1_291ad to i32*
  %v3_291ad = load i32, i32* %v2_291ad, align 4
  %v1_291b0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_291b0 = xor i32 %v1_291b0, %v3_291ad
  %v3_291b0 = icmp eq i32 %v2_291b0, 0
  store i32 %v2_291b0, i32* @eax, align 4
  br i1 %v3_291b0, label %bb, label %dec_label_pc_291b9

bb:                                               ; preds = %dec_label_pc_2918c
  %v1_291b7 = call i32 @function_291be()
  br label %dec_label_pc_291b9

dec_label_pc_291b9:                               ; preds = %bb, %dec_label_pc_2918c
  %v3_291b7 = phi i32 [ %v1_291b7, %bb ], [ %v2_291b0, %dec_label_pc_2918c ]
  ret i32 %v3_291b7
}

define i32 @function_291be() local_unnamed_addr {
dec_label_pc_291be:
  %v0_291bf = load i32, i32* @eax, align 4
  ret i32 %v0_291bf
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implIdN4mpl_5bool_ILb1EEENSJ_18has_fallback_type_EEEvRKT_SO_T0_T1_(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_291c0:
  %v4_291d2 = zext i8 %arg3 to i32
  ret i32 %v4_291d2
}

define i32 @function_291db(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_291db:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_291db = load i32, i32* @ebp, align 4
  %v0_291dc = load i32, i32* @eax, align 4
  %v1_291dc = trunc i32 %v0_291dc to i8
  %v2_291dc = load i1, i1* @cf, align 1
  %v3_291dc = zext i1 %v2_291dc to i8
  %v4_291dc = add i8 %v1_291dc, ptrtoint (i8* @global_var_88.1843 to i8)
  %v5_291dc = add i8 %v4_291dc, %v3_291dc
  %v20_291dc = add i8 %v1_291dc, -120
  %v21_291dc = add i8 %v20_291dc, %v3_291dc
  %v22_291dc = icmp ule i8 %v21_291dc, %v1_291dc
  %v23_291dc = icmp ugt i8 %v1_291dc, 119
  %v24_291dc = select i1 %v2_291dc, i1 %v22_291dc, i1 %v23_291dc
  store i1 %v24_291dc, i1* %cf.global-to-local, align 1
  %v25_291dc = zext i8 %v5_291dc to i32
  %v27_291dc = and i32 %v0_291dc, -256
  %v28_291dc = or i32 %v25_291dc, %v27_291dc
  store i32 %v28_291dc, i32* %eax.global-to-local, align 4
  %v1_291de = add i32 %v0_291db, 2
  store i32 %v1_291de, i32* @ebp, align 4
  %v1_291e3 = add i32 %v28_291dc, -1587159739
  %v2_291e3 = inttoptr i32 %v1_291e3 to i8*
  %v3_291e3 = load i8, i8* %v2_291e3, align 1
  %v4_291e3 = load i32, i32* @ecx, align 4
  %v5_291e3 = trunc i32 %v4_291e3 to i8
  %v7_291e3 = zext i1 %v24_291dc to i8
  %v8_291e3 = sub i8 %v3_291e3, %v5_291e3
  %v9_291e3 = add i8 %v8_291e3, %v7_291e3
  %v19_291e3 = sub i8 %v8_291e3, %v7_291e3
  %v20_291e3 = icmp ult i8 %v3_291e3, %v19_291e3
  %v21_291e3 = icmp ne i8 %v5_291e3, -1
  %v22_291e3 = or i1 %v21_291e3, %v20_291e3
  %v23_291e3 = icmp ult i8 %v3_291e3, %v5_291e3
  %v24_291e3 = select i1 %v24_291dc, i1 %v22_291e3, i1 %v23_291e3
  store i1 %v24_291e3, i1* %cf.global-to-local, align 1
  store i8 %v9_291e3, i8* %v2_291e3, align 1
  %v0_291e9 = load i32, i32* %eax.global-to-local, align 4
  %v1_291e9 = trunc i32 %v0_291e9 to i8
  %v2_291e9 = load i1, i1* %cf.global-to-local, align 1
  %v3_291e9 = zext i1 %v2_291e9 to i8
  %v4_291e9 = add i8 %v3_291e9, %v1_291e9
  %v19_291e9 = icmp ule i8 %v4_291e9, %v1_291e9
  %v21_291e9 = icmp eq i1 %v2_291e9, %v19_291e9
  store i1 %v21_291e9, i1* %cf.global-to-local, align 1
  %v22_291e9 = zext i8 %v4_291e9 to i32
  %v24_291e9 = and i32 %v0_291e9, -256
  %v25_291e9 = or i32 %v22_291e9, %v24_291e9
  store i32 %v25_291e9, i32* %eax.global-to-local, align 4
  %v1_291eb = inttoptr i32 %v25_291e9 to i8*
  %v2_291eb = load i8, i8* %v1_291eb, align 1
  %v5_291eb = add i8 %v2_291eb, %v4_291e9
  store i8 %v5_291eb, i8* %v1_291eb, align 1
  %v0_291ed = load i32, i32* %eax.global-to-local, align 4
  %v1_291ed = load i32, i32* @ebp, align 4
  %v2_291ed = add i32 %v1_291ed, -12
  %v3_291ed = inttoptr i32 %v2_291ed to i32*
  store i32 %v0_291ed, i32* %v3_291ed, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_291f2 = load i32, i32* @ebp, align 4
  %v1_291f2 = add i32 %v0_291f2, -28
  %v2_291f2 = inttoptr i32 %v1_291f2 to i32*
  %v3_291f2 = load i32, i32* %v2_291f2, align 4
  store i32 %v3_291f2, i32* %eax.global-to-local, align 4
  %v1_291f5 = inttoptr i32 %v3_291f2 to i32*
  %v2_291f5 = load i32, i32* %v1_291f5, align 4
  store i32 %v2_291f5, i32* %eax.global-to-local, align 4
  %v1_291fa = call i32 @unknown_3ef92(i32 %v2_291f5)
  store i32 %v1_291fa, i32* %eax.global-to-local, align 4
  %v0_291ff = load i32, i32* @ebp, align 4
  %v1_291ff = add i32 %v0_291ff, -28
  %v2_291ff = inttoptr i32 %v1_291ff to i32*
  %v3_291ff = load i32, i32* %v2_291ff, align 4
  store i32 %v3_291ff, i32* %eax.global-to-local, align 4
  %v1_29202 = inttoptr i32 %v3_291ff to i32*
  %v2_29202 = load i32, i32* %v1_29202, align 4
  %v1_29204 = add i32 %v2_29202, 4
  %v5_29204 = icmp ugt i32 %v2_29202, -5
  store i1 %v5_29204, i1* %cf.global-to-local, align 1
  store i32 %v1_29204, i32* %eax.global-to-local, align 4
  %v1_2920a = call i32 @unknown_41996(i32 %v1_29204)
  store i32 %v1_2920a, i32* %eax.global-to-local, align 4
  %v2_2921a = call i32 @unknown_2d406(i32 8, i32 %v1_2920a)
  store i32 %v2_2921a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_2921f = icmp eq i32 %v2_2921a, 0
  br i1 %v1_2921f, label %bb, label %dec_label_pc_29223

bb:                                               ; preds = %dec_label_pc_291db
  %v1_29221 = call i32 @function_2922a()
  store i32 %v1_29221, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29223

dec_label_pc_29223:                               ; preds = %bb, %dec_label_pc_291db
  %v4_29223 = phi i32 [ %v1_29221, %bb ], [ %v2_2921a, %dec_label_pc_291db ]
  ret i32 %v4_29223

; uselistorder directives
  uselistorder i8 %v4_291e9, { 0, 2, 1 }
  uselistorder i8 %v1_291e9, { 1, 0 }
  uselistorder i8 %v8_291e3, { 1, 0 }
  uselistorder i8 %v7_291e3, { 1, 0 }
  uselistorder i8 %v5_291e3, { 1, 0, 2 }
  uselistorder i1 %v24_291dc, { 1, 0, 2 }
  uselistorder i8 -1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 -1587159739, { 1, 0 }
  uselistorder i8 -120, { 2, 1, 3, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_88.1843 to i8), { 2, 1, 0 }
}

define i32 @function_29224(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29224:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29226(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29226:
  %v2_29226 = load double, double* bitcast (i32* @edx to double*), align 8
  %v2_29228 = load i32, i32* @eax, align 4
  %v4_29228 = inttoptr i32 %v2_29228 to double*
  store double %v2_29226, double* %v4_29228, align 4
  ret i32 %v2_29228
}

define i32 @function_2922a() local_unnamed_addr {
dec_label_pc_2922a:
  %v0_2922a = load i32, i32* @ebp, align 4
  %v1_2922a = add i32 %v0_2922a, -28
  %v2_2922a = inttoptr i32 %v1_2922a to i32*
  %v3_2922a = load i32, i32* %v2_2922a, align 4
  %v1_2922d = add i32 %v3_2922a, 4
  %v2_2922d = inttoptr i32 %v1_2922d to i32*
  %v3_2922d = load i32, i32* %v2_2922d, align 4
  %v1_29233 = inttoptr i32 %v3_2922a to i32*
  %v2_29233 = load i32, i32* %v1_29233, align 4
  %v2_2923c = call i32 @unknown_4366a(i32 %v2_29233, i32 %v3_2922d)
  %v0_29241 = load i32, i32* @ebp, align 4
  %v1_29241 = add i32 %v0_29241, -12
  %v2_29241 = inttoptr i32 %v1_29241 to i32*
  %v3_29241 = load i32, i32* %v2_29241, align 4
  %v1_29244 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29244 = xor i32 %v1_29244, %v3_29241
  %v3_29244 = icmp eq i32 %v2_29244, 0
  store i32 %v2_29244, i32* @eax, align 4
  br i1 %v3_29244, label %bb, label %dec_label_pc_2924d

bb:                                               ; preds = %dec_label_pc_2922a
  %v1_2924b = call i32 @function_29252()
  br label %dec_label_pc_2924d

dec_label_pc_2924d:                               ; preds = %bb, %dec_label_pc_2922a
  %v2_2924b = phi i32 [ %v1_2924b, %bb ], [ %v2_29244, %dec_label_pc_2922a ]
  ret i32 %v2_2924b
}

define i32 @function_29252() local_unnamed_addr {
dec_label_pc_29252:
  %v0_29253 = load i32, i32* @eax, align 4
  ret i32 %v0_29253
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29254:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29282

bb:                                               ; preds = %dec_label_pc_29254
  %v3_29280 = call i32 @function_29287(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_29282

dec_label_pc_29282:                               ; preds = %bb, %dec_label_pc_29254
  %v4_29280 = phi i32 [ %v3_29280, %bb ], [ 0, %dec_label_pc_29254 ]
  ret i32 %v4_29280
}

define i32 @function_29287(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29287:
  %v0_29288 = load i32, i32* @eax, align 4
  ret i32 %v0_29288
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_() local_unnamed_addr {
dec_label_pc_2928a:
  %eax.global-to-local = alloca i32, align 4
  %v2_2928b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2928b
}

define i32 @function_2928f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2928f:
  %v0_2928f = load i32, i32* @ebx, align 4
  %v1_2928f = add i32 %v0_2928f, 1166608453
  %v2_2928f = inttoptr i32 %v1_2928f to i8*
  %v3_2928f = load i8, i8* %v2_2928f, align 1
  %v4_2928f = load i32, i32* @ecx, align 4
  %v5_2928f = trunc i32 %v4_2928f to i8
  %v6_2928f = sub i8 %v3_2928f, %v5_2928f
  store i8 %v6_2928f, i8* %v2_2928f, align 1
  %v0_29298 = load i32, i32* @eax, align 4
  %v2_29298 = or i32 %v0_29298, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  ret i32 %v2_29298
}

define i32 @function_292a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_292a0:
  %v2_292a0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_292a0 = load i32, i32* @eax, align 4
  %v4_292a0 = trunc i32 %v3_292a0 to i8
  %v5_292a0 = add i8 %v4_292a0, %v2_292a0
  %v21_292a0 = inttoptr i32 %v3_292a0 to i8*
  store i8 %v5_292a0, i8* %v21_292a0, align 1
  %v0_292a2 = load i32, i32* @eax, align 4
  %v1_292a2 = load i32, i32* @ebp, align 4
  %v2_292a2 = add i32 %v1_292a2, -12
  %v3_292a2 = inttoptr i32 %v2_292a2 to i32*
  store i32 %v0_292a2, i32* %v3_292a2, align 4
  store i32 0, i32* @eax, align 4
  %v0_292ac = load i32, i32* @ebp, align 4
  %v1_292ac = add i32 %v0_292ac, -12
  %v2_292ac = inttoptr i32 %v1_292ac to i32*
  %v3_292ac = load i32, i32* %v2_292ac, align 4
  %v1_292af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_292af = icmp eq i32 %v1_292af, %v3_292ac
  br i1 %v3_292af, label %bb, label %dec_label_pc_292b8

bb:                                               ; preds = %dec_label_pc_292a0
  %v1_292b6 = call i32 @function_292bd()
  br label %dec_label_pc_292b8

dec_label_pc_292b8:                               ; preds = %bb, %dec_label_pc_292a0
  %v2_292b6 = phi i32 [ %v1_292b6, %bb ], [ 0, %dec_label_pc_292a0 ]
  ret i32 %v2_292b6
}

define i32 @function_292bd() local_unnamed_addr {
dec_label_pc_292bd:
  %v0_292be = load i32, i32* @eax, align 4
  ret i32 %v0_292be
}

define i32 @_ZN5boost9addressofIKxEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_292bf:
  %stack_var_-20 = alloca i32, align 4
  %v2_292dd = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_292dd
}

define i32 @function_292e5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_292e5:
  %v0_292e8 = load i32, i32* @ebp, align 4
  %v1_292e8 = add i32 %v0_292e8, -16
  %v1_292ee = call i32 @unknown_52b2d(i32 %v1_292e8)
  %v2_292fe = call i32 @unknown_52b5c(i32 %v1_292ee, i32 0)
  store i32 %v2_292fe, i32* @eax, align 4
  %v0_29303 = load i32, i32* @ebp, align 4
  %v1_29303 = add i32 %v0_29303, -12
  %v2_29303 = inttoptr i32 %v1_29303 to i32*
  %v3_29303 = load i32, i32* %v2_29303, align 4
  %v1_29306 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29306 = icmp eq i32 %v1_29306, %v3_29303
  br i1 %v3_29306, label %bb, label %dec_label_pc_2930f

bb:                                               ; preds = %dec_label_pc_292e5
  %v1_2930d = call i32 @function_29314()
  br label %dec_label_pc_2930f

dec_label_pc_2930f:                               ; preds = %bb, %dec_label_pc_292e5
  %v2_2930d = phi i32 [ %v1_2930d, %bb ], [ %v2_292fe, %dec_label_pc_292e5 ]
  ret i32 %v2_2930d
}

define i32 @function_29314() local_unnamed_addr {
dec_label_pc_29314:
  %v0_29315 = load i32, i32* @eax, align 4
  ret i32 %v0_29315
}

define i32 @_ZN5boost6detail13addr_impl_refIKdEC1ERS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29316:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29347

bb:                                               ; preds = %dec_label_pc_29316
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_29345 = call i32 @function_2934c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_29347

dec_label_pc_29347:                               ; preds = %bb, %dec_label_pc_29316
  %v4_29345 = phi i32 [ %v3_29345, %bb ], [ 0, %dec_label_pc_29316 ]
  ret i32 %v4_29345

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2934c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2934c:
  %v0_2934d = load i32, i32* @eax, align 4
  ret i32 %v0_2934d
}

define i32 @_ZNK5boost6detail13addr_impl_refIKdEcvRS2_Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2934e:
  ret i32 %arg1
}

define i32 @function_29358(i32 %arg1) local_unnamed_addr {
dec_label_pc_29358:
  %v0_29358 = load i32, i32* @ebp, align 4
  %v1_29358 = add i32 %v0_29358, 1
  store i32 %v1_29358, i32* @ebp, align 4
  %v0_2935b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29360 = add i32 %v0_29358, -11
  %v3_29360 = inttoptr i32 %v2_29360 to i32*
  store i32 %v0_2935b, i32* %v3_29360, align 4
  %v0_29365 = load i32, i32* @ebp, align 4
  %v1_29365 = add i32 %v0_29365, -28
  %v2_29365 = inttoptr i32 %v1_29365 to i32*
  %v3_29365 = load i32, i32* %v2_29365, align 4
  %v1_29368 = inttoptr i32 %v3_29365 to i32*
  %v2_29368 = load i32, i32* %v1_29368, align 4
  store i32 %v2_29368, i32* @eax, align 4
  %v1_2936a = add i32 %v0_29365, -12
  %v2_2936a = inttoptr i32 %v1_2936a to i32*
  %v3_2936a = load i32, i32* %v2_2936a, align 4
  %v1_2936d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2936d = icmp eq i32 %v1_2936d, %v3_2936a
  br i1 %v3_2936d, label %bb, label %dec_label_pc_29376

bb:                                               ; preds = %dec_label_pc_29358
  %v1_29374 = call i32 @function_2937b()
  br label %dec_label_pc_29376

dec_label_pc_29376:                               ; preds = %bb, %dec_label_pc_29358
  %v2_29374 = phi i32 [ %v1_29374, %bb ], [ %v2_29368, %dec_label_pc_29358 ]
  ret i32 %v2_29374
}

define i32 @function_2937b() local_unnamed_addr {
dec_label_pc_2937b:
  %v0_2937c = load i32, i32* @eax, align 4
  ret i32 %v0_2937c
}

define i32 @_ZN5boost6detail14addressof_implIKdE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2937d:
  ret i32 %arg1
}

define i32 @function_293a9(i32 %arg1) local_unnamed_addr {
dec_label_pc_293a9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_293ae() local_unnamed_addr {
dec_label_pc_293ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_293af = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_293af
}

define i32 @_ZN5boost6detail13addr_impl_refIKbEC1ERS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_293b0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_293d6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_293d6:
  %v0_293d6 = load i32, i32* @ebp, align 4
  %v1_293d6 = add i32 %v0_293d6, 1
  store i32 %v1_293d6, i32* @ebp, align 4
  %v0_293d8 = load i32, i32* @eax, align 4
  %v1_293d8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_293d8 = xor i32 %v1_293d8, %v0_293d8
  %v3_293d8 = icmp eq i32 %v2_293d8, 0
  store i32 %v2_293d8, i32* @eax, align 4
  br i1 %v3_293d8, label %bb, label %dec_label_pc_293e1

bb:                                               ; preds = %dec_label_pc_293d6
  %v1_293df = call i32 @function_293e6()
  br label %dec_label_pc_293e1

dec_label_pc_293e1:                               ; preds = %bb, %dec_label_pc_293d6
  %v2_293df = phi i32 [ %v1_293df, %bb ], [ %v2_293d8, %dec_label_pc_293d6 ]
  ret i32 %v2_293df
}

define i32 @function_293e6() local_unnamed_addr {
dec_label_pc_293e6:
  %v0_293e7 = load i32, i32* @eax, align 4
  ret i32 %v0_293e7
}

define i32 @_ZNK5boost6detail13addr_impl_refIKbEcvRS2_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_293e8:
  %v2_29402 = load i32, i32* %arg1, align 4
  ret i32 %v2_29402
}

define i32 @function_29408(i32 %arg1) local_unnamed_addr {
dec_label_pc_29408:
  %v0_29408 = load i32, i32* @edx, align 8
  %v1_29408 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29408 = icmp eq i32 %v1_29408, %v0_29408
  br i1 %v3_29408, label %bb, label %dec_label_pc_29408.dec_label_pc_29410_crit_edge

dec_label_pc_29408.dec_label_pc_29410_crit_edge:  ; preds = %dec_label_pc_29408
  %v2_2940e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_29410

bb:                                               ; preds = %dec_label_pc_29408
  %v1_2940e = call i32 @function_29415()
  br label %dec_label_pc_29410

dec_label_pc_29410:                               ; preds = %dec_label_pc_29408.dec_label_pc_29410_crit_edge, %bb
  %v2_2940e = phi i32 [ %v2_2940e.pre, %dec_label_pc_29408.dec_label_pc_29410_crit_edge ], [ %v1_2940e, %bb ]
  ret i32 %v2_2940e

; uselistorder directives
  uselistorder label %dec_label_pc_29410, { 1, 0 }
}

define i32 @function_29415() local_unnamed_addr {
dec_label_pc_29415:
  %v0_29416 = load i32, i32* @eax, align 4
  ret i32 %v0_29416
}

define i32 @_ZN5boost6detail14addressof_implIKbE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29417:
  ret i32 %arg1
}

define i32 @_ZNK5CTxIn9SerializeI11CDataStreamEEvRT_ii() local_unnamed_addr {
dec_label_pc_2944a:
  %eax.global-to-local = alloca i32, align 4
  %v5_2944a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2944a
}

define i32 @function_2944b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2944b:
  ret i32 0
}

define i32 @function_29489(i32 %arg1) local_unnamed_addr {
dec_label_pc_29489:
  %v0_29489 = load i32, i32* @ebp, align 4
  %v1_29489 = add i32 %v0_29489, 1
  store i32 %v1_29489, i32* @ebp, align 4
  %v0_2948d = load i32, i32* @eax, align 4
  %v11_2948d = and i32 %v0_2948d, -240
  %v1_2948f = add i32 %v0_29489, -39
  %v2_2948f = inttoptr i32 %v1_2948f to i32*
  %v3_2948f = load i32, i32* %v2_2948f, align 4
  %v1_29496 = add i32 %v0_29489, -35
  %v2_29496 = inttoptr i32 %v1_29496 to i32*
  %v3_29496 = load i32, i32* %v2_29496, align 4
  %v1_294a1 = add i32 %v0_29489, -31
  %v2_294a1 = inttoptr i32 %v1_294a1 to i32*
  %v3_294a1 = load i32, i32* %v2_294a1, align 4
  %v4_294a7 = call i32 @unknown_52d1a(i32 %v3_294a1, i32 %v11_2948d, i32 %v3_29496, i32 %v3_2948f)
  %v0_294ac = load i32, i32* @ebp, align 4
  %v1_294ac = add i32 %v0_294ac, -20
  %v2_294ac = inttoptr i32 %v1_294ac to i32*
  %v3_294ac = load i32, i32* %v2_294ac, align 4
  %v5_294ac = add i32 %v3_294ac, %v4_294a7
  store i32 %v5_294ac, i32* %v2_294ac, align 4
  %v0_294af = load i32, i32* @ebp, align 4
  %v1_294af = add i32 %v0_294af, -28
  %v2_294af = inttoptr i32 %v1_294af to i32*
  %v3_294af = load i32, i32* %v2_294af, align 4
  %v1_294b2 = add i32 %v3_294af, 36
  %v0_294b5 = load i32, i32* @esi, align 4
  %v1_294bb = add i32 %v0_294af, -40
  %v2_294bb = inttoptr i32 %v1_294bb to i32*
  %v3_294bb = load i32, i32* %v2_294bb, align 4
  %v1_294c2 = add i32 %v0_294af, -36
  %v2_294c2 = inttoptr i32 %v1_294c2 to i32*
  %v3_294c2 = load i32, i32* %v2_294c2, align 4
  %v1_294cd = add i32 %v0_294af, -32
  %v2_294cd = inttoptr i32 %v1_294cd to i32*
  %v3_294cd = load i32, i32* %v2_294cd, align 4
  %sext = mul i32 %v0_294b5, 16777216
  %v5_294d3 = sdiv i32 %sext, 16777216
  %v6_294d3 = call i32 @unknown_52d82(i32 %v3_294cd, i32 %v1_294b2, i32 %v3_294c2, i32 %v3_294bb, i32 %v5_294d3)
  %v0_294d8 = load i32, i32* @ebp, align 4
  %v1_294d8 = add i32 %v0_294d8, -20
  %v2_294d8 = inttoptr i32 %v1_294d8 to i32*
  %v3_294d8 = load i32, i32* %v2_294d8, align 4
  %v5_294d8 = add i32 %v3_294d8, %v6_294d3
  store i32 %v5_294d8, i32* %v2_294d8, align 4
  %v0_294db = load i32, i32* @ebp, align 4
  %v1_294db = add i32 %v0_294db, -28
  %v2_294db = inttoptr i32 %v1_294db to i32*
  %v3_294db = load i32, i32* %v2_294db, align 4
  %v1_294de = add i32 %v3_294db, ptrtoint (i32* @global_var_30.1817 to i32)
  %v0_294e1 = load i32, i32* @ebx, align 4
  %v1_294e5 = add i32 %v0_294db, -40
  %v2_294e5 = inttoptr i32 %v1_294e5 to i32*
  %v3_294e5 = load i32, i32* %v2_294e5, align 4
  %v1_294ec = add i32 %v0_294db, -36
  %v2_294ec = inttoptr i32 %v1_294ec to i32*
  %v3_294ec = load i32, i32* %v2_294ec, align 4
  %v1_294f7 = add i32 %v0_294db, -32
  %v2_294f7 = inttoptr i32 %v1_294f7 to i32*
  %v3_294f7 = load i32, i32* %v2_294f7, align 4
  %sext1 = mul i32 %v0_294e1, 16777216
  %v5_294fd = sdiv i32 %sext1, 16777216
  %v6_294fd = call i32 @unknown_454cc(i32 %v3_294f7, i32 %v1_294de, i32 %v3_294ec, i32 %v3_294e5, i32 %v5_294fd)
  %v0_29502 = load i32, i32* @ebp, align 4
  %v1_29502 = add i32 %v0_29502, -20
  %v2_29502 = inttoptr i32 %v1_29502 to i32*
  %v3_29502 = load i32, i32* %v2_29502, align 4
  %v5_29502 = add i32 %v3_29502, %v6_294fd
  store i32 %v5_29502, i32* %v2_29502, align 4
  %v0_29505 = load i32, i32* @ebp, align 4
  %v1_29505 = add i32 %v0_29505, -12
  %v2_29505 = inttoptr i32 %v1_29505 to i32*
  %v3_29505 = load i32, i32* %v2_29505, align 4
  %v1_29508 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29508 = xor i32 %v1_29508, %v3_29505
  %v3_29508 = icmp eq i32 %v2_29508, 0
  store i32 %v2_29508, i32* @eax, align 4
  br i1 %v3_29508, label %bb, label %dec_label_pc_29511

bb:                                               ; preds = %dec_label_pc_29489
  %v1_2950f = call i32 @function_29516()
  br label %dec_label_pc_29511

dec_label_pc_29511:                               ; preds = %bb, %dec_label_pc_29489
  %v3_2950f = phi i32 [ %v1_2950f, %bb ], [ %v2_29508, %dec_label_pc_29489 ]
  ret i32 %v3_2950f

; uselistorder directives
  uselistorder i32 %v0_294db, { 0, 2, 1, 3 }
  uselistorder i32 %v0_294af, { 0, 2, 1, 3 }
  uselistorder i32 862319685, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_30.1817 to i32), { 1, 2, 3, 4, 0, 5 }
}

define i32 @function_29516() local_unnamed_addr {
dec_label_pc_29516:
  %v0_2951c = load i32, i32* @eax, align 4
  ret i32 %v0_2951c
}

define i32 @_ZNK6CTxOut9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2951e:
  ret i32 %arg1
}

define i32 @function_29572(i32 %arg1) local_unnamed_addr {
dec_label_pc_29572:
  %v0_29574 = load i32, i32* @ebp, align 4
  %v1_29574 = add i32 %v0_29574, -32
  %v2_29574 = inttoptr i32 %v1_29574 to i32*
  %v3_29574 = load i32, i32* %v2_29574, align 4
  ret i32 %v3_29574
}

define i32 @function_2957a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2957a:
  %v0_2957a = call i32 @unknown_52ebe()
  %v0_2957f = load i32, i32* @ebp, align 4
  %v1_2957f = add i32 %v0_2957f, -20
  %v2_2957f = inttoptr i32 %v1_2957f to i32*
  %v3_2957f = load i32, i32* %v2_2957f, align 4
  %v5_2957f = add i32 %v3_2957f, %v0_2957a
  store i32 %v5_2957f, i32* %v2_2957f, align 4
  %v0_29582 = load i32, i32* @ebp, align 4
  %v1_29582 = add i32 %v0_29582, -28
  %v2_29582 = inttoptr i32 %v1_29582 to i32*
  %v3_29582 = load i32, i32* %v2_29582, align 4
  %v1_29585 = add i32 %v3_29582, 8
  %v0_29588 = load i32, i32* @ebx, align 4
  %v1_2958c = add i32 %v0_29582, -40
  %v2_2958c = inttoptr i32 %v1_2958c to i32*
  %v3_2958c = load i32, i32* %v2_2958c, align 4
  %v1_29593 = add i32 %v0_29582, -36
  %v2_29593 = inttoptr i32 %v1_29593 to i32*
  %v3_29593 = load i32, i32* %v2_29593, align 4
  %v1_2959e = add i32 %v0_29582, -32
  %v2_2959e = inttoptr i32 %v1_2959e to i32*
  %v3_2959e = load i32, i32* %v2_2959e, align 4
  %sext = mul i32 %v0_29588, 16777216
  %v5_295a4 = sdiv i32 %sext, 16777216
  %v6_295a4 = call i32 @unknown_52e56(i32 %v3_2959e, i32 %v1_29585, i32 %v3_29593, i32 %v3_2958c, i32 %v5_295a4)
  %v0_295a9 = load i32, i32* @ebp, align 4
  %v1_295a9 = add i32 %v0_295a9, -20
  %v2_295a9 = inttoptr i32 %v1_295a9 to i32*
  %v3_295a9 = load i32, i32* %v2_295a9, align 4
  %v5_295a9 = add i32 %v3_295a9, %v6_295a4
  store i32 %v5_295a9, i32* %v2_295a9, align 4
  %v0_295ac = load i32, i32* @ebp, align 4
  %v1_295ac = add i32 %v0_295ac, -12
  %v2_295ac = inttoptr i32 %v1_295ac to i32*
  %v3_295ac = load i32, i32* %v2_295ac, align 4
  %v1_295af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_295af = xor i32 %v1_295af, %v3_295ac
  %v3_295af = icmp eq i32 %v2_295af, 0
  store i32 %v2_295af, i32* @eax, align 4
  br i1 %v3_295af, label %bb, label %dec_label_pc_295b8

bb:                                               ; preds = %dec_label_pc_2957a
  %v1_295b6 = call i32 @function_295bd()
  br label %dec_label_pc_295b8

dec_label_pc_295b8:                               ; preds = %bb, %dec_label_pc_2957a
  %v2_295b6 = phi i32 [ %v1_295b6, %bb ], [ %v2_295af, %dec_label_pc_2957a ]
  ret i32 %v2_295b6

; uselistorder directives
  uselistorder i32 %v0_29582, { 0, 2, 1, 3 }
}

define i32 @function_295bd() local_unnamed_addr {
dec_label_pc_295bd:
  %v0_295c2 = load i32, i32* @eax, align 4
  ret i32 %v0_295c2
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitISsEEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_295c4:
  %v2_295ea = load i32, i32* %arg1, align 4
  ret i32 %v2_295ea
}

define i32 @function_295f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_295f8:
  %v0_295f8 = load i32, i32* @eax, align 4
  ret i32 %v0_295f8
}

define i32 @function_295fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_295fc:
  %v0_295fe = load i32, i32* @edx, align 8
  %v1_295fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_295fe = icmp eq i32 %v1_295fe, %v0_295fe
  br i1 %v3_295fe, label %bb, label %dec_label_pc_295fc.dec_label_pc_29607_crit_edge

dec_label_pc_295fc.dec_label_pc_29607_crit_edge:  ; preds = %dec_label_pc_295fc
  %v2_29605.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_29607

bb:                                               ; preds = %dec_label_pc_295fc
  %v1_29605 = call i32 @function_2960c()
  br label %dec_label_pc_29607

dec_label_pc_29607:                               ; preds = %dec_label_pc_295fc.dec_label_pc_29607_crit_edge, %bb
  %v2_29605 = phi i32 [ %v2_29605.pre, %dec_label_pc_295fc.dec_label_pc_29607_crit_edge ], [ %v1_29605, %bb ]
  ret i32 %v2_29605

; uselistorder directives
  uselistorder label %dec_label_pc_29607, { 1, 0 }
}

define i32 @function_2960c() local_unnamed_addr {
dec_label_pc_2960c:
  %v0_2960d = load i32, i32* @eax, align 4
  ret i32 %v0_2960d
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIS9_EEiRNS1_IT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2960e:
  %v1_29637 = call i32 @unknown_53020(i32 %arg2)
  %v3_2964e = call i32 @unknown_53056(i32 %arg1, i32 %v1_29637, i32 1)
  store i32 %v3_2964e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2965f

bb:                                               ; preds = %dec_label_pc_2960e
  %v1_2965d = call i32 @function_29664()
  br label %dec_label_pc_2965f

dec_label_pc_2965f:                               ; preds = %bb, %dec_label_pc_2960e
  %v2_2965d = phi i32 [ %v1_2965d, %bb ], [ %v3_2964e, %dec_label_pc_2960e ]
  ret i32 %v2_2965d
}

define i32 @function_29664() local_unnamed_addr {
dec_label_pc_29664:
  %v0_29665 = load i32, i32* @eax, align 4
  ret i32 %v0_29665
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitISE_EEiRNS1_IT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29666:
  %v1_2968f = call i32 @unknown_530f8(i32 %arg2)
  %v3_296a6 = call i32 @unknown_5312e(i32 %arg1, i32 %v1_2968f, i32 1)
  store i32 %v3_296a6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_296b7

bb:                                               ; preds = %dec_label_pc_29666
  %v1_296b5 = call i32 @function_296bc()
  br label %dec_label_pc_296b7

dec_label_pc_296b7:                               ; preds = %bb, %dec_label_pc_29666
  %v2_296b5 = phi i32 [ %v1_296b5, %bb ], [ %v3_296a6, %dec_label_pc_29666 ]
  ret i32 %v2_296b5
}

define i32 @function_296bc() local_unnamed_addr {
dec_label_pc_296bc:
  %v0_296bd = load i32, i32* @eax, align 4
  ret i32 %v0_296bd
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIbEEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_296be:
  %tmp107 = inttoptr i32 %arg2 to i8*
  %v2_296e4 = load i8, i8* %tmp107, align 1
  %v3_296e4 = zext i8 %v2_296e4 to i32
  %v2_296ed = load i32, i32* %arg1, align 4
  %v2_296f6 = call i32 @unknown_463d6(i32 %v2_296ed, i32 %v3_296e4)
  store i32 %v2_296f6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29707

bb:                                               ; preds = %dec_label_pc_296be
  %v1_29705 = call i32 @function_2970c()
  br label %dec_label_pc_29707

dec_label_pc_29707:                               ; preds = %bb, %dec_label_pc_296be
  %v2_29705 = phi i32 [ %v1_29705, %bb ], [ %v2_296f6, %dec_label_pc_296be ]
  ret i32 %v2_29705
}

define i32 @function_2970c() local_unnamed_addr {
dec_label_pc_2970c:
  %v0_2970d = load i32, i32* @eax, align 4
  ret i32 %v0_2970d
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIxEEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2970e:
  %v2_29734 = load i32, i32* %arg1, align 4
  %v2_29740 = call i32 @unknown_45e19(i32 %v2_29734, i32 %arg2)
  store i32 %v2_29740, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29751

bb:                                               ; preds = %dec_label_pc_2970e
  %v1_2974f = call i32 @function_29756()
  br label %dec_label_pc_29751

dec_label_pc_29751:                               ; preds = %bb, %dec_label_pc_2970e
  %v2_2974f = phi i32 [ %v1_2974f, %bb ], [ %v2_29740, %dec_label_pc_2970e ]
  ret i32 %v2_2974f
}

define i32 @function_29756() local_unnamed_addr {
dec_label_pc_29756:
  %v0_29757 = load i32, i32* @eax, align 4
  ret i32 %v0_29757
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIdEEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29758:
  %v2_2977e = load i32, i32* %arg1, align 4
  %v2_2978a = call i32 @unknown_461d4(i32 %v2_2977e, i32 %arg2)
  store i32 %v2_2978a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2979b

bb:                                               ; preds = %dec_label_pc_29758
  %v1_29799 = call i32 @function_297a0()
  br label %dec_label_pc_2979b

dec_label_pc_2979b:                               ; preds = %bb, %dec_label_pc_29758
  %v2_29799 = phi i32 [ %v1_29799, %bb ], [ %v2_2978a, %dec_label_pc_29758 ]
  ret i32 %v2_29799
}

define i32 @function_297a0() local_unnamed_addr {
dec_label_pc_297a0:
  %v0_297a1 = load i32, i32* @eax, align 4
  ret i32 %v0_297a1
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE6assignERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_297a2:
  %v1_297c5 = call i32 @unknown_531b4(i32 %arg1)
  %v2_297d4 = call i32 @unknown_532b4(i32 %v1_297c5, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_297e5

bb:                                               ; preds = %dec_label_pc_297a2
  %v1_297e3 = call i32 @function_297ea()
  br label %dec_label_pc_297e5

dec_label_pc_297e5:                               ; preds = %bb, %dec_label_pc_297a2
  %v2_297e3 = phi i32 [ %v1_297e3, %bb ], [ 0, %dec_label_pc_297a2 ]
  ret i32 %v2_297e3
}

define i32 @function_297ea() local_unnamed_addr {
dec_label_pc_297ea:
  %v0_297eb = load i32, i32* @eax, align 4
  ret i32 %v0_297eb
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE6assignERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_297ec:
  %v1_2980f = call i32 @unknown_5327e(i32 %arg1)
  %v2_2981e = call i32 @unknown_53596(i32 %v1_2980f, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2982f

bb:                                               ; preds = %dec_label_pc_297ec
  %v1_2982d = call i32 @function_29834()
  br label %dec_label_pc_2982f

dec_label_pc_2982f:                               ; preds = %bb, %dec_label_pc_297ec
  %v2_2982d = phi i32 [ %v1_2982d, %bb ], [ 0, %dec_label_pc_297ec ]
  ret i32 %v2_2982d
}

define i32 @function_29834() local_unnamed_addr {
dec_label_pc_29834:
  %v0_29835 = load i32, i32* @eax, align 4
  ret i32 %v0_29835
}

define i32 @_ZN5boost6detail13addr_impl_refIKxEC1ERS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29836:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29867

bb:                                               ; preds = %dec_label_pc_29836
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_29865 = call i32 @function_2986c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_29867

dec_label_pc_29867:                               ; preds = %bb, %dec_label_pc_29836
  %v4_29865 = phi i32 [ %v3_29865, %bb ], [ 0, %dec_label_pc_29836 ]
  ret i32 %v4_29865

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2986c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2986c:
  %v0_2986d = load i32, i32* @eax, align 4
  ret i32 %v0_2986d
}

define i32 @_ZNK5boost6detail13addr_impl_refIKxEcvRS2_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2986e:
  %v2_29888 = load i32, i32* %arg1, align 4
  store i32 %v2_29888, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29896

bb:                                               ; preds = %dec_label_pc_2986e
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_29894 = call i32 @function_2989b(i32 %tmp100)
  br label %dec_label_pc_29896

dec_label_pc_29896:                               ; preds = %bb, %dec_label_pc_2986e
  %v3_29894 = phi i32 [ %v2_29894, %bb ], [ %v2_29888, %dec_label_pc_2986e ]
  ret i32 %v3_29894

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2989b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2989b:
  %v0_2989c = load i32, i32* @eax, align 4
  ret i32 %v0_2989c
}

define i32 @_ZN5boost6detail14addressof_implIKxE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2989d:
  ret i32 %arg2
}

define i32 @function_298ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_298ac:
  %v0_298ac = load i32, i32* @eax, align 4
  %v1_298ac = load i32, i32* @ebp, align 4
  %v2_298ac = add i32 %v1_298ac, -32
  %v3_298ac = inttoptr i32 %v2_298ac to i32*
  store i32 %v0_298ac, i32* %v3_298ac, align 4
  %v0_298af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_298b5 = load i32, i32* @ebp, align 4
  %v2_298b5 = add i32 %v1_298b5, -12
  %v3_298b5 = inttoptr i32 %v2_298b5 to i32*
  store i32 %v0_298af, i32* %v3_298b5, align 4
  %v0_298ba = load i32, i32* @ebp, align 4
  %v1_298ba = add i32 %v0_298ba, -28
  %v2_298ba = inttoptr i32 %v1_298ba to i32*
  %v3_298ba = load i32, i32* %v2_298ba, align 4
  store i32 %v3_298ba, i32* @eax, align 4
  %v1_298bd = add i32 %v0_298ba, -12
  %v2_298bd = inttoptr i32 %v1_298bd to i32*
  %v3_298bd = load i32, i32* %v2_298bd, align 4
  %v1_298c0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_298c0 = icmp eq i32 %v1_298c0, %v3_298bd
  br i1 %v3_298c0, label %bb, label %dec_label_pc_298c9

bb:                                               ; preds = %dec_label_pc_298ac
  %v1_298c7 = call i32 @function_298ce()
  br label %dec_label_pc_298c9

dec_label_pc_298c9:                               ; preds = %bb, %dec_label_pc_298ac
  %v2_298c7 = phi i32 [ %v1_298c7, %bb ], [ %v3_298ba, %dec_label_pc_298ac ]
  ret i32 %v2_298c7
}

define i32 @function_298ce() local_unnamed_addr {
dec_label_pc_298ce:
  %v0_298cf = load i32, i32* @eax, align 4
  ret i32 %v0_298cf
}

define i32 @_Z12SerReadWriteI11CDataStream9COutPointEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_298d0:
  ret i32 %arg2
}

define i32 @function_29914(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29914:
  %v0_29916 = load i32, i32* @ebp, align 4
  %v1_29916 = add i32 %v0_29916, 1
  store i32 %v1_29916, i32* @ebp, align 4
  %v0_2991b = call i32 @unknown_53915()
  store i32 0, i32* @eax, align 4
  %v0_29925 = load i32, i32* @ebp, align 4
  %v1_29925 = add i32 %v0_29925, -12
  %v2_29925 = inttoptr i32 %v1_29925 to i32*
  %v3_29925 = load i32, i32* %v2_29925, align 4
  %v1_29928 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29928 = xor i32 %v1_29928, %v3_29925
  %v3_29928 = icmp eq i32 %v2_29928, 0
  store i32 %v2_29928, i32* @edx, align 8
  br i1 %v3_29928, label %bb, label %dec_label_pc_29931

bb:                                               ; preds = %dec_label_pc_29914
  %v1_2992f = call i32 @function_29936()
  br label %dec_label_pc_29931

dec_label_pc_29931:                               ; preds = %bb, %dec_label_pc_29914
  %v3_2992f = phi i32 [ %v1_2992f, %bb ], [ 0, %dec_label_pc_29914 ]
  ret i32 %v3_2992f
}

define i32 @function_29936() local_unnamed_addr {
dec_label_pc_29936:
  %v0_29937 = load i32, i32* @eax, align 4
  ret i32 %v0_29937
}

define i32 @_Z12SerReadWriteI11CDataStream7CScriptEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_29938:
  %v4_29983 = call i32 @unknown_539d9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29999

bb:                                               ; preds = %dec_label_pc_29938
  %v1_29997 = call i32 @function_2999e()
  br label %dec_label_pc_29999

dec_label_pc_29999:                               ; preds = %bb, %dec_label_pc_29938
  %v2_29997 = phi i32 [ %v1_29997, %bb ], [ 0, %dec_label_pc_29938 ]
  ret i32 %v2_29997
}

define i32 @function_2999e() local_unnamed_addr {
dec_label_pc_2999e:
  %v0_2999f = load i32, i32* @eax, align 4
  ret i32 %v0_2999f
}

define i32 @_Z12SerReadWriteI11CDataStreamxEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_299a0:
  %tmp109 = ptrtoint i32* %arg2 to i32
  %v1_299d3 = add i32 %tmp109, 4
  %v2_299d3 = inttoptr i32 %v1_299d3 to i32*
  %v3_299d3 = load i32, i32* %v2_299d3, align 4
  %v2_299d6 = load i32, i32* %arg2, align 4
  %v5_299f4 = call i32 @unknown_53a9d(i32 %arg1, i32 %v2_299d6, i32 %v3_299d3, i32 %arg3, i32 %arg4)
  ret i32 %v5_299f4
}

define i32 @function_299fa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_299fa:
  %v2_299fa = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_299fa = load i32, i32* @eax, align 4
  %v4_299fa = trunc i32 %v3_299fa to i8
  %v5_299fa = add i8 %v4_299fa, %v2_299fa
  %v21_299fa = inttoptr i32 %v3_299fa to i8*
  store i8 %v5_299fa, i8* %v21_299fa, align 1
  %v2_299fc = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_299fc = load i32, i32* @eax, align 4
  %v4_299fc = trunc i32 %v3_299fc to i8
  %v5_299fc = add i8 %v4_299fc, %v2_299fc
  %v21_299fc = inttoptr i32 %v3_299fc to i8*
  store i8 %v5_299fc, i8* %v21_299fc, align 1
  %v0_299fe = load i32, i32* @ebp, align 4
  %v1_299fe = add i32 %v0_299fe, -12
  %v2_299fe = inttoptr i32 %v1_299fe to i32*
  %v3_299fe = load i32, i32* %v2_299fe, align 4
  %v1_29a01 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29a01 = icmp eq i32 %v1_29a01, %v3_299fe
  br i1 %v3_29a01, label %bb, label %dec_label_pc_299fa.dec_label_pc_29a0a_crit_edge

dec_label_pc_299fa.dec_label_pc_29a0a_crit_edge:  ; preds = %dec_label_pc_299fa
  %v2_29a08.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_29a0a

bb:                                               ; preds = %dec_label_pc_299fa
  %v1_29a08 = call i32 @function_29a0f()
  br label %dec_label_pc_29a0a

dec_label_pc_29a0a:                               ; preds = %dec_label_pc_299fa.dec_label_pc_29a0a_crit_edge, %bb
  %v2_29a08 = phi i32 [ %v2_29a08.pre, %dec_label_pc_299fa.dec_label_pc_29a0a_crit_edge ], [ %v1_29a08, %bb ]
  ret i32 %v2_29a08

; uselistorder directives
  uselistorder label %dec_label_pc_29a0a, { 1, 0 }
}

define i32 @function_29a0f() local_unnamed_addr {
dec_label_pc_29a0f:
  %v0_29a10 = load i32, i32* @eax, align 4
  ret i32 %v0_29a10
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a12:
  %v1_29a2f = call i32 @unknown_53b6c(i32 %arg1)
  store i32 %v1_29a2f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29a40

bb:                                               ; preds = %dec_label_pc_29a12
  %v1_29a3e = call i32 @function_29a45()
  br label %dec_label_pc_29a40

dec_label_pc_29a40:                               ; preds = %bb, %dec_label_pc_29a12
  %v2_29a3e = phi i32 [ %v1_29a3e, %bb ], [ %v1_29a2f, %dec_label_pc_29a12 ]
  ret i32 %v2_29a3e
}

define i32 @function_29a45() local_unnamed_addr {
dec_label_pc_29a45:
  %v0_29a46 = load i32, i32* @eax, align 4
  ret i32 %v0_29a46
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIS9_EEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29a48:
  %v2_29a6e = load i32, i32* %arg1, align 4
  %v2_29a7a = call i32 @unknown_4702f(i32 %v2_29a6e, i32 %arg2)
  store i32 %v2_29a7a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29a8b

bb:                                               ; preds = %dec_label_pc_29a48
  %v1_29a89 = call i32 @function_29a90()
  br label %dec_label_pc_29a8b

dec_label_pc_29a8b:                               ; preds = %bb, %dec_label_pc_29a48
  %v2_29a89 = phi i32 [ %v1_29a89, %bb ], [ %v2_29a7a, %dec_label_pc_29a48 ]
  ret i32 %v2_29a89
}

define i32 @function_29a90() local_unnamed_addr {
dec_label_pc_29a90:
  %v0_29a91 = load i32, i32* @eax, align 4
  ret i32 %v0_29a91
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a92:
  %v1_29aaf = call i32 @unknown_53c1c(i32 %arg1)
  store i32 %v1_29aaf, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29ac0

bb:                                               ; preds = %dec_label_pc_29a92
  %v1_29abe = call i32 @function_29ac5()
  br label %dec_label_pc_29ac0

dec_label_pc_29ac0:                               ; preds = %bb, %dec_label_pc_29a92
  %v2_29abe = phi i32 [ %v1_29abe, %bb ], [ %v1_29aaf, %dec_label_pc_29a92 ]
  ret i32 %v2_29abe
}

define i32 @function_29ac5() local_unnamed_addr {
dec_label_pc_29ac5:
  %v0_29ac6 = load i32, i32* @eax, align 4
  ret i32 %v0_29ac6
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitISE_EEiRT_i() local_unnamed_addr {
dec_label_pc_29ac8:
  %eax.global-to-local = alloca i32, align 4
  %v17_29acb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_29acb
}

define i32 @function_29ace(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29ace:
  %v0_29ace = load i32, i32* @ebp, align 4
  %v1_29ace = add i32 %v0_29ace, 8
  %v2_29ace = inttoptr i32 %v1_29ace to i32*
  %v3_29ace = load i32, i32* %v2_29ace, align 4
  %v2_29ad1 = add i32 %v0_29ace, -28
  %v3_29ad1 = inttoptr i32 %v2_29ad1 to i32*
  store i32 %v3_29ace, i32* %v3_29ad1, align 4
  %v0_29ad4 = load i32, i32* @ebp, align 4
  %v1_29ad4 = add i32 %v0_29ad4, 12
  %v2_29ad4 = inttoptr i32 %v1_29ad4 to i32*
  %v3_29ad4 = load i32, i32* %v2_29ad4, align 4
  %v2_29ad7 = add i32 %v0_29ad4, -32
  %v3_29ad7 = inttoptr i32 %v2_29ad7 to i32*
  store i32 %v3_29ad4, i32* %v3_29ad7, align 4
  %v0_29ada = load i32, i32* @ebp, align 4
  %v1_29ada = add i32 %v0_29ada, 16
  %v2_29ada = inttoptr i32 %v1_29ada to i32*
  %v3_29ada = load i32, i32* %v2_29ada, align 4
  %v2_29add = add i32 %v0_29ada, -36
  %v3_29add = inttoptr i32 %v2_29add to i32*
  store i32 %v3_29ada, i32* %v3_29add, align 4
  %v0_29ae0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29ae6 = load i32, i32* @ebp, align 4
  %v2_29ae6 = add i32 %v1_29ae6, -12
  %v3_29ae6 = inttoptr i32 %v2_29ae6 to i32*
  store i32 %v0_29ae0, i32* %v3_29ae6, align 4
  %v0_29aeb = load i32, i32* @ebp, align 4
  %v1_29aeb = add i32 %v0_29aeb, -28
  %v2_29aeb = inttoptr i32 %v1_29aeb to i32*
  %v3_29aeb = load i32, i32* %v2_29aeb, align 4
  %v1_29aee = inttoptr i32 %v3_29aeb to i32*
  %v2_29aee = load i32, i32* %v1_29aee, align 4
  %v1_29af0 = add i32 %v0_29aeb, -32
  %v2_29af0 = inttoptr i32 %v1_29af0 to i32*
  %v3_29af0 = load i32, i32* %v2_29af0, align 4
  %v2_29afa = call i32 @unknown_464c4(i32 %v2_29aee, i32 %v3_29af0)
  store i32 %v2_29afa, i32* @eax, align 4
  %v0_29aff = load i32, i32* @ebp, align 4
  %v1_29aff = add i32 %v0_29aff, -12
  %v2_29aff = inttoptr i32 %v1_29aff to i32*
  %v3_29aff = load i32, i32* %v2_29aff, align 4
  %v1_29b02 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29b02 = icmp eq i32 %v1_29b02, %v3_29aff
  br i1 %v3_29b02, label %bb, label %dec_label_pc_29b0b

bb:                                               ; preds = %dec_label_pc_29ace
  %v1_29b09 = call i32 @function_29b10()
  br label %dec_label_pc_29b0b

dec_label_pc_29b0b:                               ; preds = %bb, %dec_label_pc_29ace
  %v2_29b09 = phi i32 [ %v1_29b09, %bb ], [ %v2_29afa, %dec_label_pc_29ace ]
  ret i32 %v2_29b09
}

define i32 @function_29b10() local_unnamed_addr {
dec_label_pc_29b10:
  %v0_29b11 = load i32, i32* @eax, align 4
  ret i32 %v0_29b11
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEaSERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29b12:
  %stack_var_-64 = alloca i32, align 4
  %v1_29b44 = call i32 @unknown_4080e(i32 %arg2)
  %v1_29b52 = call i32 @unknown_53ccc(i32 %arg1)
  %v10_29b57 = icmp ult i32 %v1_29b52, %v1_29b44
  %v5_29b5d = icmp eq i1 %v10_29b57, false
  br i1 %v5_29b5d, label %bb, label %dec_label_pc_29b65

bb:                                               ; preds = %dec_label_pc_29b12
  %v1_29b5f = call i32 @function_29c35()
  br label %dec_label_pc_29b65

dec_label_pc_29b65:                               ; preds = %bb, %dec_label_pc_29b12
  %v2_29b65 = ptrtoint i32* %stack_var_-64 to i32
  ret i32 %v2_29b65
}

define i32 @function_29b68(i32 %arg1) local_unnamed_addr {
dec_label_pc_29b68:
  %v0_29b68 = load i32, i32* @ebp, align 4
  %v1_29b68 = add i32 %v0_29b68, -80
  %v2_29b68 = inttoptr i32 %v1_29b68 to i32*
  %v3_29b68 = load i32, i32* %v2_29b68, align 4
  %v0_29b6f = load i32, i32* @eax, align 4
  %v2_29b72 = call i32 @unknown_40976(i32 %v0_29b6f, i32 %v3_29b68)
  %v0_29b7a = load i32, i32* @ebp, align 4
  %v1_29b7a = add i32 %v0_29b7a, -64
  %v1_29b7d = add i32 %v0_29b7a, -80
  %v2_29b7d = inttoptr i32 %v1_29b7d to i32*
  %v3_29b7d = load i32, i32* %v2_29b7d, align 4
  %v2_29b87 = call i32 @unknown_40926(i32 %v1_29b7a, i32 %v3_29b7d)
  %v0_29b8f = load i32, i32* @ebp, align 4
  %v1_29b96 = add i32 %v0_29b8f, -64
  %v2_29b96 = inttoptr i32 %v1_29b96 to i32*
  %v3_29b96 = load i32, i32* %v2_29b96, align 4
  ret i32 %v3_29b96
}

define i32 @function_29ba2(i32 %arg1) local_unnamed_addr {
dec_label_pc_29ba2:
  %v0_29ba4 = load i32, i32* @ebp, align 4
  %v1_29ba4 = add i32 %v0_29ba4, -76
  %v2_29ba4 = inttoptr i32 %v1_29ba4 to i32*
  %v3_29ba4 = load i32, i32* %v2_29ba4, align 4
  %v1_29baa = call i32 @unknown_53d12(i32 %v3_29ba4)
  %v1_29baf = load i32, i32* @ebp, align 4
  %v2_29baf = add i32 %v1_29baf, -32
  %v3_29baf = inttoptr i32 %v2_29baf to i32*
  store i32 %v1_29baa, i32* %v3_29baf, align 4
  %v0_29bb2 = load i32, i32* @ebp, align 4
  %v1_29bb2 = add i32 %v0_29bb2, -76
  %v2_29bb2 = inttoptr i32 %v1_29bb2 to i32*
  %v3_29bb2 = load i32, i32* %v2_29bb2, align 4
  %v1_29bb8 = call i32 @unknown_3f782(i32 %v3_29bb2)
  %v0_29bbd = load i32, i32* @ebp, align 4
  %v1_29bbd = add i32 %v0_29bbd, -76
  %v2_29bbd = inttoptr i32 %v1_29bbd to i32*
  %v3_29bbd = load i32, i32* %v2_29bbd, align 4
  %v1_29bc0 = add i32 %v3_29bbd, 4
  %v2_29bc0 = inttoptr i32 %v1_29bc0 to i32*
  %v3_29bc0 = load i32, i32* %v2_29bc0, align 4
  %v1_29bc6 = inttoptr i32 %v3_29bbd to i32*
  %v2_29bc6 = load i32, i32* %v1_29bc6, align 4
  %v3_29bd3 = call i32 @unknown_3f7af(i32 %v2_29bc6, i32 %v3_29bc0, i32 %v1_29bb8)
  %v0_29bd8 = load i32, i32* @ebp, align 4
  %v1_29bd8 = add i32 %v0_29bd8, -76
  %v2_29bd8 = inttoptr i32 %v1_29bd8 to i32*
  %v3_29bd8 = load i32, i32* %v2_29bd8, align 4
  %v1_29bdb = add i32 %v3_29bd8, 8
  %v2_29bdb = inttoptr i32 %v1_29bdb to i32*
  %v3_29bdb = load i32, i32* %v2_29bdb, align 4
  %v1_29be3 = inttoptr i32 %v3_29bd8 to i32*
  %v2_29be3 = load i32, i32* %v1_29be3, align 4
  %v2_29be7 = sub i32 %v3_29bdb, %v2_29be3
  %v2_29beb = sdiv i32 %v2_29be7, 8
  %v3_29bee = mul i32 %v2_29beb, -1431655765
  %v3_29bf6 = load i32, i32* %v2_29bd8, align 4
  %v1_29bf9 = inttoptr i32 %v3_29bf6 to i32*
  %v2_29bf9 = load i32, i32* %v1_29bf9, align 4
  %v3_29c09 = call i32 @unknown_430fc(i32 %v3_29bf6, i32 %v2_29bf9, i32 %v3_29bee)
  ret i32 %v3_29c09
}

define i32 @function_29c10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29c10:
  %ecx.global-to-local = alloca i32, align 4
  %v0_29c13 = load i32, i32* @ecx, align 4
  %v1_29c13 = add i32 %v0_29c13, -1
  store i32 %v1_29c13, i32* %ecx.global-to-local, align 4
  %v0_29c15 = load i32, i32* @ebx, align 4
  %v1_29c15 = add i32 %v0_29c15, 143373381
  %v2_29c15 = inttoptr i32 %v1_29c15 to i8*
  %v3_29c15 = load i8, i8* %v2_29c15, align 1
  %v5_29c15 = trunc i32 %v1_29c13 to i8
  %v6_29c15 = load i1, i1* @cf, align 1
  %v7_29c15 = zext i1 %v6_29c15 to i8
  %v8_29c15 = add i8 %v3_29c15, %v5_29c15
  %v9_29c15 = add i8 %v8_29c15, %v7_29c15
  store i8 %v9_29c15, i8* %v2_29c15, align 1
  %v0_29c1b = load i32, i32* @ebp, align 4
  %v1_29c1b = add i32 %v0_29c1b, -36
  %v2_29c1b = inttoptr i32 %v1_29c1b to i32*
  %v3_29c1b = load i32, i32* %v2_29c1b, align 4
  %v2_29c24 = mul i32 %v3_29c1b, 24
  %v0_29c27 = load i32, i32* %ecx.global-to-local, align 4
  %v3_29c27 = add i32 %v0_29c27, %v2_29c24
  %v1_29c2a = add i32 %v0_29c1b, -76
  %v2_29c2a = inttoptr i32 %v1_29c2a to i32*
  %v3_29c2a = load i32, i32* %v2_29c2a, align 4
  %v2_29c2d = add i32 %v3_29c2a, 8
  %v3_29c2d = inttoptr i32 %v2_29c2d to i32*
  store i32 %v3_29c27, i32* %v3_29c2d, align 4
  %v0_29c30 = call i32 @function_29d73()
  ret i32 %v0_29c30
}

define i32 @function_29c35() local_unnamed_addr {
dec_label_pc_29c35:
  %ebx.global-to-local = alloca i32, align 4
  %v0_29c35 = load i32, i32* @ebp, align 4
  %v1_29c35 = add i32 %v0_29c35, -76
  %v2_29c35 = inttoptr i32 %v1_29c35 to i32*
  %v3_29c35 = load i32, i32* %v2_29c35, align 4
  %v1_29c3b = call i32 @unknown_4080e(i32 %v3_29c35)
  %v1_29c40 = load i32, i32* @ebp, align 4
  %v1_29c4e = add i32 %v1_29c40, -76
  %v2_29c4e = inttoptr i32 %v1_29c4e to i32*
  %v3_29c4e = load i32, i32* %v2_29c4e, align 4
  %v1_29c54 = call i32 @unknown_3f782(i32 %v3_29c4e)
  store i32 %v1_29c54, i32* %ebx.global-to-local, align 4
  %v0_29c5b = load i32, i32* @ebp, align 4
  %v1_29c5b = add i32 %v0_29c5b, -40
  %v1_29c5e = add i32 %v0_29c5b, -76
  %v2_29c5e = inttoptr i32 %v1_29c5e to i32*
  %v3_29c5e = load i32, i32* %v2_29c5e, align 4
  %v2_29c68 = call i32 @unknown_3fdc2(i32 %v1_29c5b, i32 %v3_29c5e)
  %v0_29c70 = load i32, i32* @ebp, align 4
  %v1_29c70 = add i32 %v0_29c70, -48
  %v1_29c73 = add i32 %v0_29c70, -76
  %v2_29c73 = inttoptr i32 %v1_29c73 to i32*
  %v3_29c73 = load i32, i32* %v2_29c73, align 4
  %v2_29c7d = call i32 @unknown_43506(i32 %v1_29c70, i32 %v3_29c73)
  %v0_29c85 = load i32, i32* @ebp, align 4
  %v1_29c85 = add i32 %v0_29c85, -52
  %v1_29c88 = add i32 %v0_29c85, -80
  %v2_29c88 = inttoptr i32 %v1_29c88 to i32*
  %v3_29c88 = load i32, i32* %v2_29c88, align 4
  %v2_29c92 = call i32 @unknown_40976(i32 %v1_29c85, i32 %v3_29c88)
  %v0_29c9a = load i32, i32* @ebp, align 4
  %v1_29c9a = add i32 %v0_29c9a, -56
  %v1_29c9d = add i32 %v0_29c9a, -80
  %v2_29c9d = inttoptr i32 %v1_29c9d to i32*
  %v3_29c9d = load i32, i32* %v2_29c9d, align 4
  %v2_29ca7 = call i32 @unknown_40926(i32 %v1_29c9a, i32 %v3_29c9d)
  %v0_29caf = load i32, i32* @ebp, align 4
  %v1_29caf = add i32 %v0_29caf, -44
  %v1_29cb2 = add i32 %v0_29caf, -48
  %v2_29cb2 = inttoptr i32 %v1_29cb2 to i32*
  %v3_29cb2 = load i32, i32* %v2_29cb2, align 4
  %v1_29cb9 = add i32 %v0_29caf, -52
  %v2_29cb9 = inttoptr i32 %v1_29cb9 to i32*
  %v3_29cb9 = load i32, i32* %v2_29cb9, align 4
  %v1_29cc0 = add i32 %v0_29caf, -56
  %v2_29cc0 = inttoptr i32 %v1_29cc0 to i32*
  %v3_29cc0 = load i32, i32* %v2_29cc0, align 4
  %v4_29cca = call i32 @unknown_53dcc(i32 %v1_29caf, i32 %v3_29cc0, i32 %v3_29cb9, i32 %v3_29cb2)
  %v0_29cd2 = load i32, i32* %ebx.global-to-local, align 4
  %v0_29cd6 = load i32, i32* @ebp, align 4
  %v1_29cd6 = add i32 %v0_29cd6, -40
  %v2_29cd6 = inttoptr i32 %v1_29cd6 to i32*
  %v3_29cd6 = load i32, i32* %v2_29cd6, align 4
  %v1_29cdd = add i32 %v0_29cd6, -44
  %v2_29cdd = inttoptr i32 %v1_29cdd to i32*
  %v3_29cdd = load i32, i32* %v2_29cdd, align 4
  %v3_29ce3 = call i32 @unknown_53e5a(i32 %v3_29cdd, i32 %v3_29cd6, i32 %v0_29cd2)
  ret i32 %v3_29ce3

; uselistorder directives
  uselistorder i32 %v0_29caf, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32)* @unknown_40926, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_40976, { 1, 0 }
}

define i32 @function_29cea(i32 %arg1) local_unnamed_addr {
dec_label_pc_29cea:
  %v2_29cea = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_29cea = load i32, i32* @eax, align 4
  %v4_29cea = trunc i32 %v3_29cea to i8
  %v5_29cea = add i8 %v4_29cea, %v2_29cea
  %v21_29cea = inttoptr i32 %v3_29cea to i8*
  store i8 %v5_29cea, i8* %v21_29cea, align 1
  %v0_29cec = load i32, i32* @ebx, align 4
  %v1_29cec = add i32 %v0_29cec, 411808837
  %v2_29cec = inttoptr i32 %v1_29cec to i8*
  %v3_29cec = load i8, i8* %v2_29cec, align 1
  %v4_29cec = load i32, i32* @ecx, align 4
  %v5_29cec = trunc i32 %v4_29cec to i8
  %v6_29cec = add i8 %v5_29cec, %v3_29cec
  store i8 %v6_29cec, i8* %v2_29cec, align 1
  %v0_29cf2 = load i32, i32* @ebp, align 4
  %v1_29cf2 = add i32 %v0_29cf2, -80
  %v2_29cf2 = inttoptr i32 %v1_29cf2 to i32*
  %v3_29cf2 = load i32, i32* %v2_29cf2, align 4
  %v1_29cf5 = inttoptr i32 %v3_29cf2 to i32*
  %v2_29cf5 = load i32, i32* %v1_29cf5, align 4
  store i32 %v2_29cf5, i32* @esi, align 4
  %v1_29cf7 = add i32 %v0_29cf2, -76
  %v2_29cf7 = inttoptr i32 %v1_29cf7 to i32*
  %v3_29cf7 = load i32, i32* %v2_29cf7, align 4
  %v1_29cfd = call i32 @unknown_4080e(i32 %v3_29cf7)
  %v2_29d0a = mul i32 %v1_29cfd, 24
  %v0_29d0d = load i32, i32* @esi, align 4
  %v3_29d0d = add i32 %v0_29d0d, %v2_29d0a
  %v0_29d10 = load i32, i32* @ebp, align 4
  %v1_29d10 = add i32 %v0_29d10, -80
  %v2_29d10 = inttoptr i32 %v1_29d10 to i32*
  %v3_29d10 = load i32, i32* %v2_29d10, align 4
  %v1_29d13 = inttoptr i32 %v3_29d10 to i32*
  %v2_29d13 = load i32, i32* %v1_29d13, align 4
  %v0_29d15 = load i32, i32* @ebx, align 4
  %v3_29d20 = call i32 @unknown_53ea2(i32 %v2_29d13, i32 %v3_29d0d, i32 %v0_29d15)
  %v0_29d25 = load i32, i32* @ebp, align 4
  %v1_29d25 = add i32 %v0_29d25, -76
  %v2_29d25 = inttoptr i32 %v1_29d25 to i32*
  %v3_29d25 = load i32, i32* %v2_29d25, align 4
  %v1_29d2b = call i32 @unknown_3f782(i32 %v3_29d25)
  ret i32 %v1_29d2b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3f782, { 1, 2, 0 }
}

define i32 @function_29d30(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d30:
  %v0_29d32 = load i32, i32* @ebp, align 4
  %v1_29d32 = add i32 %v0_29d32, -76
  %v2_29d32 = inttoptr i32 %v1_29d32 to i32*
  %v3_29d32 = load i32, i32* %v2_29d32, align 4
  %v1_29d35 = add i32 %v3_29d32, 4
  %v2_29d35 = inttoptr i32 %v1_29d35 to i32*
  %v3_29d35 = load i32, i32* %v2_29d35, align 4
  store i32 %v3_29d35, i32* @edi, align 4
  %v1_29d38 = add i32 %v0_29d32, -80
  %v2_29d38 = inttoptr i32 %v1_29d38 to i32*
  %v3_29d3e = load i32, i32* %v2_29d38, align 4
  %v1_29d41 = inttoptr i32 %v3_29d3e to i32*
  %v2_29d41 = load i32, i32* %v1_29d41, align 4
  %v2_29d43 = add i32 %v0_29d32, -84
  %v3_29d43 = inttoptr i32 %v2_29d43 to i32*
  store i32 %v2_29d41, i32* %v3_29d43, align 4
  %v0_29d46 = load i32, i32* @ebp, align 4
  %v1_29d46 = add i32 %v0_29d46, -76
  %v2_29d46 = inttoptr i32 %v1_29d46 to i32*
  %v3_29d46 = load i32, i32* %v2_29d46, align 4
  %v1_29d4c = call i32 @unknown_4080e(i32 %v3_29d46)
  %v2_29d59 = mul i32 %v1_29d4c, 24
  ret i32 %v2_29d59

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4080e, { 1, 0, 3, 2 }
}

define i32 @function_29d5e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29d5e:
  %v2_29d5e = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_29d5e = zext i8 %v2_29d5e to i32
  %v4_29d5e = load i32, i32* @eax, align 4
  %v5_29d5e = and i32 %v4_29d5e, -256
  %v6_29d5e = or i32 %v5_29d5e, %v3_29d5e
  %v7_29d5e = load i32, i32* @esi, align 4
  %v8_29d5e = load i1, i1* @df, align 1
  %v9_29d5e = select i1 %v8_29d5e, i32 -1, i32 1
  %v10_29d5e = add i32 %v9_29d5e, %v7_29d5e
  %v0_29d5f = load i32, i32* @ebx, align 4
  %v0_29d63 = load i32, i32* @edi, align 4
  %v4_29d6e = call i32 @unknown_461c8(i32 %v6_29d5e, i32 %v10_29d5e, i32 %v0_29d63, i32 %v0_29d5f)
  ret i32 %v4_29d6e
}

define i32 @function_29d73() local_unnamed_addr {
dec_label_pc_29d73:
  %v0_29d73 = load i32, i32* @ebp, align 4
  %v1_29d73 = add i32 %v0_29d73, -76
  %v2_29d73 = inttoptr i32 %v1_29d73 to i32*
  %v3_29d73 = load i32, i32* %v2_29d73, align 4
  %v1_29d76 = inttoptr i32 %v3_29d73 to i32*
  %v2_29d76 = load i32, i32* %v1_29d76, align 4
  %v1_29d78 = add i32 %v0_29d73, -36
  %v2_29d78 = inttoptr i32 %v1_29d78 to i32*
  %v3_29d78 = load i32, i32* %v2_29d78, align 4
  %v2_29d81 = mul i32 %v3_29d78, 24
  %v3_29d84 = add i32 %v2_29d81, %v2_29d76
  %v3_29d87 = load i32, i32* %v2_29d73, align 4
  %v2_29d8a = add i32 %v3_29d87, 4
  %v3_29d8a = inttoptr i32 %v2_29d8a to i32*
  store i32 %v3_29d84, i32* %v3_29d8a, align 4
  %v0_29d8d = load i32, i32* @ebp, align 4
  %v1_29d8d = add i32 %v0_29d8d, -76
  %v2_29d8d = inttoptr i32 %v1_29d8d to i32*
  %v3_29d8d = load i32, i32* %v2_29d8d, align 4
  store i32 %v3_29d8d, i32* @eax, align 4
  %v1_29d90 = add i32 %v0_29d8d, -28
  %v2_29d90 = inttoptr i32 %v1_29d90 to i32*
  %v3_29d90 = load i32, i32* %v2_29d90, align 4
  %v1_29d93 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29d93 = icmp eq i32 %v1_29d93, %v3_29d90
  br i1 %v3_29d93, label %bb, label %dec_label_pc_29d9c

bb:                                               ; preds = %dec_label_pc_29d73
  %v1_29d9a = call i32 @function_29da1()
  br label %dec_label_pc_29d9c

dec_label_pc_29d9c:                               ; preds = %bb, %dec_label_pc_29d73
  %v2_29d9a = phi i32 [ %v1_29d9a, %bb ], [ %v3_29d8d, %dec_label_pc_29d73 ]
  ret i32 %v2_29d9a
}

define i32 @function_29da1() local_unnamed_addr {
dec_label_pc_29da1:
  %v0_29da8 = load i32, i32* @eax, align 4
  ret i32 %v0_29da8
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEaSERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29daa:
  %stack_var_-64 = alloca i32, align 4
  %v1_29ddc = call i32 @unknown_3ce72(i32 %arg2)
  %v1_29dea = call i32 @unknown_541a0(i32 %arg1)
  %v10_29def = icmp ult i32 %v1_29dea, %v1_29ddc
  %v5_29df5 = icmp eq i1 %v10_29def, false
  br i1 %v5_29df5, label %bb, label %dec_label_pc_29dfd

bb:                                               ; preds = %dec_label_pc_29daa
  %v1_29df7 = call i32 @function_29ece()
  br label %dec_label_pc_29dfd

dec_label_pc_29dfd:                               ; preds = %bb, %dec_label_pc_29daa
  %v2_29dfd = ptrtoint i32* %stack_var_-64 to i32
  ret i32 %v2_29dfd
}

define i32 @function_29e02(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29e02:
  %v0_29e02 = load i32, i32* @eax, align 4
  %v1_29e02 = and i32 %v0_29e02, -256
  %v11_29e05 = or i32 %v1_29e02, or (i32 and (i32 ptrtoint (i8* @global_var_89.1818 to i32), i32 -256), i32 zext (i8 and (i8 ptrtoint (i8* @global_var_89.1818 to i8), i8 4) to i32))
  %v1_29e0a = call i32 @unknown_4b340(i32 %v11_29e05)
  %v0_29e12 = load i32, i32* @ebp, align 4
  %v1_29e12 = add i32 %v0_29e12, -64
  %v1_29e15 = add i32 %v0_29e12, -80
  %v2_29e15 = inttoptr i32 %v1_29e15 to i32*
  %v3_29e15 = load i32, i32* %v2_29e15, align 4
  %v2_29e1f = call i32 @unknown_4b2f0(i32 %v1_29e12, i32 %v3_29e15)
  %v0_29e27 = load i32, i32* @ebp, align 4
  %v1_29e27 = add i32 %v0_29e27, -60
  %v2_29e27 = inttoptr i32 %v1_29e27 to i32*
  %v3_29e27 = load i32, i32* %v2_29e27, align 4
  %v1_29e2e = add i32 %v0_29e27, -64
  %v2_29e2e = inttoptr i32 %v1_29e2e to i32*
  %v3_29e2e = load i32, i32* %v2_29e2e, align 4
  %v1_29e35 = add i32 %v0_29e27, -36
  %v2_29e35 = inttoptr i32 %v1_29e35 to i32*
  %v3_29e35 = load i32, i32* %v2_29e35, align 4
  %v1_29e3c = add i32 %v0_29e27, -76
  %v2_29e3c = inttoptr i32 %v1_29e3c to i32*
  %v3_29e3c = load i32, i32* %v2_29e3c, align 4
  %v4_29e42 = call i32 @unknown_541e6(i32 %v3_29e3c, i32 %v3_29e35, i32 %v3_29e2e, i32 %v3_29e27)
  %v1_29e47 = load i32, i32* @ebp, align 4
  %v2_29e47 = add i32 %v1_29e47, -32
  %v3_29e47 = inttoptr i32 %v2_29e47 to i32*
  store i32 %v4_29e42, i32* %v3_29e47, align 4
  %v0_29e4a = load i32, i32* @ebp, align 4
  %v1_29e4a = add i32 %v0_29e4a, -76
  %v2_29e4a = inttoptr i32 %v1_29e4a to i32*
  %v3_29e4a = load i32, i32* %v2_29e4a, align 4
  ret i32 %v3_29e4a

; uselistorder directives
  uselistorder i32 %v0_29e27, { 1, 0, 2, 3 }
  uselistorder i32 -60, { 37, 39, 9, 10, 40, 41, 11, 12, 13, 14, 15, 16, 42, 43, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 1, 0, 2, 4, 3, 5, 6, 38, 7, 8 }
  uselistorder i32 -64, { 23, 24, 15, 16, 0, 4, 5, 26, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28, 17, 18, 19, 20, 21, 22, 1, 25, 2, 3 }
  uselistorder i8 4, { 1, 3, 0, 2 }
}

define i32 @function_29e0e(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e0e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29e51() local_unnamed_addr {
dec_label_pc_29e51:
  %eax.global-to-local = alloca i32, align 4
  %v0_29e51 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29e51
}

define i32 @function_29e52(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29e52:
  %v0_29e54 = load i32, i32* @ebx, align 4
  %v1_29e54 = add i32 %v0_29e54, 1250669653
  %v2_29e54 = inttoptr i32 %v1_29e54 to i8*
  %v3_29e54 = load i8, i8* %v2_29e54, align 1
  %v4_29e54 = load i32, i32* @ecx, align 4
  %v5_29e54 = trunc i32 %v4_29e54 to i8
  %v6_29e54 = add i8 %v5_29e54, %v3_29e54
  store i8 %v6_29e54, i8* %v2_29e54, align 1
  %v0_29e68 = load i32, i32* @edx, align 8
  %v1_29e6b = call i32 @unknown_40245(i32 %v0_29e68)
  %v0_29e70 = load i32, i32* @ebp, align 4
  %v1_29e70 = add i32 %v0_29e70, -76
  %v2_29e70 = inttoptr i32 %v1_29e70 to i32*
  %v3_29e70 = load i32, i32* %v2_29e70, align 4
  %v1_29e73 = add i32 %v3_29e70, 8
  %v2_29e73 = inttoptr i32 %v1_29e73 to i32*
  %v3_29e73 = load i32, i32* %v2_29e73, align 4
  %v1_29e7b = inttoptr i32 %v3_29e70 to i32*
  %v2_29e7b = load i32, i32* %v1_29e7b, align 4
  %v2_29e7f = sub i32 %v3_29e73, %v2_29e7b
  %v2_29e83 = sdiv i32 %v2_29e7f, 4
  %v3_29e86 = mul i32 %v2_29e83, -858993459
  store i32 %v3_29e86, i32* @ecx, align 4
  %v3_29e93 = load i32, i32* %v2_29e70, align 4
  ret i32 %v3_29e93
}

define i32 @function_29e80(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29ea2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29ea2:
  %ecx.global-to-local = alloca i32, align 4
  %v0_29ea7 = load i32, i32* @ebp, align 4
  %v1_29ea7 = add i32 %v0_29ea7, 1
  store i32 %v1_29ea7, i32* @ebp, align 4
  store i32 %v1_29ea7, i32* inttoptr (i32 -1962933865 to i32*), align 4
  %v0_29eab = load i32, i32* @ecx, align 4
  %v1_29eab = add i32 %v0_29eab, -1
  store i32 %v1_29eab, i32* %ecx.global-to-local, align 4
  %v0_29ead = load i32, i32* @ebx, align 4
  %v1_29ead = add i32 %v0_29ead, 143373381
  %v2_29ead = inttoptr i32 %v1_29ead to i8*
  %v3_29ead = load i8, i8* %v2_29ead, align 1
  %v5_29ead = trunc i32 %v1_29eab to i8
  %v6_29ead = load i1, i1* @cf, align 1
  %v7_29ead = zext i1 %v6_29ead to i8
  %v8_29ead = add i8 %v3_29ead, %v5_29ead
  %v9_29ead = add i8 %v8_29ead, %v7_29ead
  store i8 %v9_29ead, i8* %v2_29ead, align 1
  %v0_29eb3 = load i32, i32* @ebp, align 4
  %v1_29eb3 = add i32 %v0_29eb3, -36
  %v2_29eb3 = inttoptr i32 %v1_29eb3 to i32*
  %v3_29eb3 = load i32, i32* %v2_29eb3, align 4
  %v2_29ebd = mul i32 %v3_29eb3, 20
  %v0_29ec0 = load i32, i32* %ecx.global-to-local, align 4
  %v3_29ec0 = add i32 %v0_29ec0, %v2_29ebd
  %v1_29ec3 = add i32 %v0_29eb3, -76
  %v2_29ec3 = inttoptr i32 %v1_29ec3 to i32*
  %v3_29ec3 = load i32, i32* %v2_29ec3, align 4
  %v2_29ec6 = add i32 %v3_29ec3, 8
  %v3_29ec6 = inttoptr i32 %v2_29ec6 to i32*
  store i32 %v3_29ec0, i32* %v3_29ec6, align 4
  %v0_29ec9 = call i32 @function_2a00e()
  ret i32 %v0_29ec9
}

define i32 @function_29ece() local_unnamed_addr {
dec_label_pc_29ece:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_29ece = load i32, i32* @ebp, align 4
  %v1_29ece = add i32 %v0_29ece, -76
  %v2_29ece = inttoptr i32 %v1_29ece to i32*
  %v3_29ece = load i32, i32* %v2_29ece, align 4
  %v1_29ed4 = call i32 @unknown_3ce72(i32 %v3_29ece)
  %v1_29ed9 = load i32, i32* @ebp, align 4
  %v2_29ed9 = add i32 %v1_29ed9, -36
  %v3_29ed9 = inttoptr i32 %v2_29ed9 to i32*
  %v4_29ed9 = load i32, i32* %v3_29ed9, align 4
  %v10_29ed9 = icmp ult i32 %v1_29ed4, %v4_29ed9
  %v1_29edc = icmp eq i1 %v10_29ed9, false
  %v5_29edf = icmp eq i1 %v1_29edc, false
  %v1_29f86 = add i32 %v1_29ed9, -76
  %v2_29f86 = inttoptr i32 %v1_29f86 to i32*
  %v3_29f86 = load i32, i32* %v2_29f86, align 4
  br i1 %v5_29edf, label %dec_label_pc_29f86, label %dec_label_pc_29ee7

dec_label_pc_29ee7:                               ; preds = %dec_label_pc_29ece
  %v1_29eed = call i32 @unknown_40218(i32 %v3_29f86)
  store i32 %v1_29eed, i32* %ebx.global-to-local, align 4
  %v0_29ef4 = load i32, i32* @ebp, align 4
  %v1_29ef4 = add i32 %v0_29ef4, -40
  %v1_29ef7 = add i32 %v0_29ef4, -76
  %v2_29ef7 = inttoptr i32 %v1_29ef7 to i32*
  %v3_29ef7 = load i32, i32* %v2_29ef7, align 4
  %v2_29f01 = call i32 @unknown_408e2(i32 %v1_29ef4, i32 %v3_29ef7)
  %v0_29f09 = load i32, i32* @ebp, align 4
  %v1_29f09 = add i32 %v0_29f09, -48
  %v1_29f0c = add i32 %v0_29f09, -76
  %v2_29f0c = inttoptr i32 %v1_29f0c to i32*
  %v3_29f0c = load i32, i32* %v2_29f0c, align 4
  %v2_29f16 = call i32 @unknown_43dec(i32 %v1_29f09, i32 %v3_29f0c)
  %v0_29f1e = load i32, i32* @ebp, align 4
  %v1_29f1e = add i32 %v0_29f1e, -52
  %v1_29f2b = call i32 @unknown_4b340(i32 %v1_29f1e)
  %v0_29f33 = load i32, i32* @ebp, align 4
  %v1_29f33 = add i32 %v0_29f33, -56
  %v1_29f36 = add i32 %v0_29f33, -80
  %v2_29f36 = inttoptr i32 %v1_29f36 to i32*
  %v3_29f36 = load i32, i32* %v2_29f36, align 4
  %v2_29f40 = call i32 @unknown_4b2f0(i32 %v1_29f33, i32 %v3_29f36)
  %v0_29f48 = load i32, i32* @ebp, align 4
  %v1_29f48 = add i32 %v0_29f48, -44
  %v1_29f4b = add i32 %v0_29f48, -48
  %v2_29f4b = inttoptr i32 %v1_29f4b to i32*
  %v3_29f4b = load i32, i32* %v2_29f4b, align 4
  %v1_29f52 = add i32 %v0_29f48, -52
  %v2_29f52 = inttoptr i32 %v1_29f52 to i32*
  %v3_29f52 = load i32, i32* %v2_29f52, align 4
  %v1_29f59 = add i32 %v0_29f48, -56
  %v2_29f59 = inttoptr i32 %v1_29f59 to i32*
  %v3_29f59 = load i32, i32* %v2_29f59, align 4
  %v4_29f63 = call i32 @unknown_542a0(i32 %v1_29f48, i32 %v3_29f59, i32 %v3_29f52, i32 %v3_29f4b)
  %v0_29f6b = load i32, i32* %ebx.global-to-local, align 4
  %v0_29f6f = load i32, i32* @ebp, align 4
  %v1_29f6f = add i32 %v0_29f6f, -40
  %v2_29f6f = inttoptr i32 %v1_29f6f to i32*
  %v3_29f6f = load i32, i32* %v2_29f6f, align 4
  %v1_29f76 = add i32 %v0_29f6f, -44
  %v2_29f76 = inttoptr i32 %v1_29f76 to i32*
  %v3_29f76 = load i32, i32* %v2_29f76, align 4
  %v3_29f7c = call i32 @unknown_5432e(i32 %v3_29f76, i32 %v3_29f6f, i32 %v0_29f6b)
  %v0_29f81 = call i32 @function_2a00e()
  ret i32 %v0_29f81

dec_label_pc_29f86:                               ; preds = %dec_label_pc_29ece
  %v1_29f89 = inttoptr i32 %v3_29f86 to i32*
  %v2_29f89 = load i32, i32* %v1_29f89, align 4
  store i32 %v2_29f89, i32* %ebx.global-to-local, align 4
  %v1_29f8b = add i32 %v1_29ed9, -80
  %v2_29f8b = inttoptr i32 %v1_29f8b to i32*
  %v3_29f8b = load i32, i32* %v2_29f8b, align 4
  %v1_29f8e = inttoptr i32 %v3_29f8b to i32*
  %v2_29f8e = load i32, i32* %v1_29f8e, align 4
  store i32 %v2_29f8e, i32* %esi.global-to-local, align 4
  %v3_29f90 = load i32, i32* %v2_29f86, align 4
  %v1_29f96 = call i32 @unknown_3ce72(i32 %v3_29f90)
  %v2_29fa4 = mul i32 %v1_29f96, 20
  %v3_29fa7 = add i32 %v2_29f8e, %v2_29fa4
  %v0_29faa = load i32, i32* @ebp, align 4
  %v1_29faa = add i32 %v0_29faa, -80
  %v2_29faa = inttoptr i32 %v1_29faa to i32*
  %v3_29faa = load i32, i32* %v2_29faa, align 4
  %v1_29fad = inttoptr i32 %v3_29faa to i32*
  %v2_29fad = load i32, i32* %v1_29fad, align 4
  %v0_29faf = load i32, i32* %ebx.global-to-local, align 4
  %v3_29fba = call i32 @unknown_54376(i32 %v2_29fad, i32 %v3_29fa7, i32 %v0_29faf)
  %v0_29fbf = load i32, i32* @ebp, align 4
  %v1_29fbf = add i32 %v0_29fbf, -76
  %v2_29fbf = inttoptr i32 %v1_29fbf to i32*
  %v3_29fbf = load i32, i32* %v2_29fbf, align 4
  %v1_29fc5 = call i32 @unknown_40218(i32 %v3_29fbf)
  store i32 %v1_29fc5, i32* %ebx.global-to-local, align 4
  %v0_29fcc = load i32, i32* @ebp, align 4
  %v1_29fcc = add i32 %v0_29fcc, -76
  %v2_29fcc = inttoptr i32 %v1_29fcc to i32*
  %v3_29fcc = load i32, i32* %v2_29fcc, align 4
  %v1_29fcf = add i32 %v3_29fcc, 4
  %v2_29fcf = inttoptr i32 %v1_29fcf to i32*
  %v3_29fcf = load i32, i32* %v2_29fcf, align 4
  store i32 %v3_29fcf, i32* %edi.global-to-local, align 4
  %v1_29fd2 = add i32 %v0_29fcc, -80
  %v2_29fd2 = inttoptr i32 %v1_29fd2 to i32*
  %v3_29fd2 = load i32, i32* %v2_29fd2, align 4
  %v1_29fd5 = add i32 %v3_29fd2, 4
  %v2_29fd5 = inttoptr i32 %v1_29fd5 to i32*
  %v3_29fd5 = load i32, i32* %v2_29fd5, align 4
  store i32 %v3_29fd5, i32* %esi.global-to-local, align 4
  %v3_29fd8 = load i32, i32* %v2_29fd2, align 4
  %v1_29fdb = inttoptr i32 %v3_29fd8 to i32*
  %v2_29fdb = load i32, i32* %v1_29fdb, align 4
  %v2_29fdd = add i32 %v0_29fcc, -84
  %v3_29fdd = inttoptr i32 %v2_29fdd to i32*
  store i32 %v2_29fdb, i32* %v3_29fdd, align 4
  %v0_29fe0 = load i32, i32* @ebp, align 4
  %v1_29fe0 = add i32 %v0_29fe0, -76
  %v2_29fe0 = inttoptr i32 %v1_29fe0 to i32*
  %v3_29fe0 = load i32, i32* %v2_29fe0, align 4
  %v1_29fe6 = call i32 @unknown_3ce72(i32 %v3_29fe0)
  %v2_29ff4 = mul i32 %v1_29fe6, 20
  %v1_29ff7 = load i32, i32* @ebp, align 4
  %v2_29ff7 = add i32 %v1_29ff7, -84
  %v3_29ff7 = inttoptr i32 %v2_29ff7 to i32*
  %v4_29ff7 = load i32, i32* %v3_29ff7, align 4
  %v5_29ff7 = add i32 %v4_29ff7, %v2_29ff4
  %v0_29ffa = load i32, i32* %ebx.global-to-local, align 4
  %v0_29ffe = load i32, i32* %edi.global-to-local, align 4
  %v0_2a002 = load i32, i32* %esi.global-to-local, align 4
  %v4_2a009 = call i32 @unknown_46751(i32 %v5_29ff7, i32 %v0_2a002, i32 %v0_29ffe, i32 %v0_29ffa)
  ret i32 %v4_2a009

; uselistorder directives
  uselistorder i32 %v0_29f48, { 1, 0, 2, 3 }
  uselistorder i32 %v3_29f86, { 1, 0 }
  uselistorder i32 -84, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 ()* @function_2a00e, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4b2f0, { 1, 0 }
  uselistorder i32 -80, { 6, 7, 8, 9, 14, 15, 16, 17, 10, 11, 12, 13, 0, 18, 1, 2, 3, 4, 5, 19 }
  uselistorder i32 (i32)* @unknown_4b340, { 1, 0 }
  uselistorder i32 (i32)* @unknown_40218, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3ce72, { 3, 2, 1, 0 }
}

define i32 @function_2a00e() local_unnamed_addr {
dec_label_pc_2a00e:
  %v0_2a00e = load i32, i32* @ebp, align 4
  %v1_2a013 = add i32 %v0_2a00e, -36
  %v2_2a013 = inttoptr i32 %v1_2a013 to i32*
  %v3_2a013 = load i32, i32* %v2_2a013, align 4
  ret i32 %v3_2a013
}

define i32 @function_2a018(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a018:
  %v0_2a018 = load i32, i32* @eax, align 4
  %v2_2a018 = mul i32 %v0_2a018, 4
  %v1_2a01b = load i32, i32* @edx, align 8
  %v2_2a01b = add i32 %v1_2a01b, %v2_2a018
  %v2_2a01d = mul i32 %v2_2a01b, 4
  %v0_2a020 = load i32, i32* @ecx, align 4
  %v3_2a020 = add i32 %v0_2a020, %v2_2a01d
  %v0_2a023 = load i32, i32* @ebp, align 4
  %v1_2a023 = add i32 %v0_2a023, -76
  %v2_2a023 = inttoptr i32 %v1_2a023 to i32*
  %v3_2a023 = load i32, i32* %v2_2a023, align 4
  %v2_2a026 = add i32 %v3_2a023, 4
  %v3_2a026 = inttoptr i32 %v2_2a026 to i32*
  store i32 %v3_2a020, i32* %v3_2a026, align 4
  %v0_2a029 = load i32, i32* @ebp, align 4
  %v1_2a029 = add i32 %v0_2a029, -76
  %v2_2a029 = inttoptr i32 %v1_2a029 to i32*
  %v3_2a029 = load i32, i32* %v2_2a029, align 4
  store i32 %v3_2a029, i32* @eax, align 4
  %v1_2a02c = add i32 %v0_2a029, -28
  %v2_2a02c = inttoptr i32 %v1_2a02c to i32*
  %v3_2a02c = load i32, i32* %v2_2a02c, align 4
  %v1_2a02f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a02f = icmp eq i32 %v1_2a02f, %v3_2a02c
  br i1 %v3_2a02f, label %bb, label %dec_label_pc_2a038

bb:                                               ; preds = %dec_label_pc_2a018
  %v1_2a036 = call i32 @function_2a03d()
  br label %dec_label_pc_2a038

dec_label_pc_2a038:                               ; preds = %bb, %dec_label_pc_2a018
  %v2_2a036 = phi i32 [ %v1_2a036, %bb ], [ %v3_2a029, %dec_label_pc_2a018 ]
  ret i32 %v2_2a036

; uselistorder directives
  uselistorder i32 -76, { 23, 24, 0, 1, 2, 4, 5, 3, 6, 11, 12, 13, 14, 25, 26, 15, 16, 17, 18, 7, 8, 9, 10, 27, 19, 20, 21, 22 }
}

define i32 @function_2a03d() local_unnamed_addr {
dec_label_pc_2a03d:
  %v0_2a03d = load i32, i32* @ebp, align 4
  %v1_2a043 = inttoptr i32 %v0_2a03d to i32*
  %v2_2a043 = load i32, i32* %v1_2a043, align 4
  store i32 %v2_2a043, i32* @ebp, align 4
  %v0_2a044 = load i32, i32* @eax, align 4
  ret i32 %v0_2a044
}

define i32 @_Z9SerializeI11CDataStream9COutPointEvRT_RKT0_li() local_unnamed_addr {
dec_label_pc_2a045:
  %eax.global-to-local = alloca i32, align 4
  %v2_2a046 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2a046
}

define i32 @function_2a048(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a048:
  %v0_2a04b = load i32, i32* @ebp, align 4
  %v1_2a04b = add i32 %v0_2a04b, 8
  %v2_2a04b = inttoptr i32 %v1_2a04b to i32*
  %v3_2a04b = load i32, i32* %v2_2a04b, align 4
  %v2_2a04e = add i32 %v0_2a04b, -28
  %v3_2a04e = inttoptr i32 %v2_2a04e to i32*
  store i32 %v3_2a04b, i32* %v3_2a04e, align 4
  %v0_2a051 = load i32, i32* @ebp, align 4
  %v1_2a051 = add i32 %v0_2a051, 12
  %v2_2a051 = inttoptr i32 %v1_2a051 to i32*
  %v3_2a051 = load i32, i32* %v2_2a051, align 4
  %v2_2a054 = add i32 %v0_2a051, -32
  %v3_2a054 = inttoptr i32 %v2_2a054 to i32*
  store i32 %v3_2a051, i32* %v3_2a054, align 4
  %v0_2a057 = load i32, i32* @ebp, align 4
  %v1_2a057 = add i32 %v0_2a057, 16
  %v2_2a057 = inttoptr i32 %v1_2a057 to i32*
  %v3_2a057 = load i32, i32* %v2_2a057, align 4
  %v2_2a05a = add i32 %v0_2a057, -36
  %v3_2a05a = inttoptr i32 %v2_2a05a to i32*
  store i32 %v3_2a057, i32* %v3_2a05a, align 4
  %v0_2a05d = load i32, i32* @ebp, align 4
  %v1_2a05d = add i32 %v0_2a05d, 20
  %v2_2a05d = inttoptr i32 %v1_2a05d to i32*
  %v3_2a05d = load i32, i32* %v2_2a05d, align 4
  %v2_2a060 = add i32 %v0_2a05d, -40
  %v3_2a060 = inttoptr i32 %v2_2a060 to i32*
  store i32 %v3_2a05d, i32* %v3_2a060, align 4
  %v0_2a063 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a069 = load i32, i32* @ebp, align 4
  %v2_2a069 = add i32 %v1_2a069, -12
  %v3_2a069 = inttoptr i32 %v2_2a069 to i32*
  store i32 %v0_2a063, i32* %v3_2a069, align 4
  %v0_2a06e = load i32, i32* @ebp, align 4
  %v1_2a06e = add i32 %v0_2a06e, -40
  %v2_2a06e = inttoptr i32 %v1_2a06e to i32*
  %v3_2a06e = load i32, i32* %v2_2a06e, align 4
  %v1_2a075 = add i32 %v0_2a06e, -36
  %v2_2a075 = inttoptr i32 %v1_2a075 to i32*
  %v3_2a075 = load i32, i32* %v2_2a075, align 4
  %v1_2a07c = add i32 %v0_2a06e, -28
  %v2_2a07c = inttoptr i32 %v1_2a07c to i32*
  %v3_2a07c = load i32, i32* %v2_2a07c, align 4
  %v1_2a083 = add i32 %v0_2a06e, -32
  %v2_2a083 = inttoptr i32 %v1_2a083 to i32*
  %v3_2a083 = load i32, i32* %v2_2a083, align 4
  %v4_2a089 = call i32 @unknown_54677(i32 %v3_2a083, i32 %v3_2a07c, i32 %v3_2a075, i32 %v3_2a06e)
  %v0_2a08e = load i32, i32* @ebp, align 4
  %v1_2a08e = add i32 %v0_2a08e, -12
  %v2_2a08e = inttoptr i32 %v1_2a08e to i32*
  %v3_2a08e = load i32, i32* %v2_2a08e, align 4
  %v1_2a091 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a091 = xor i32 %v1_2a091, %v3_2a08e
  %v3_2a091 = icmp eq i32 %v2_2a091, 0
  store i32 %v2_2a091, i32* @eax, align 4
  br i1 %v3_2a091, label %bb, label %dec_label_pc_2a09a

bb:                                               ; preds = %dec_label_pc_2a048
  %v1_2a098 = call i32 @function_2a09f()
  br label %dec_label_pc_2a09a

dec_label_pc_2a09a:                               ; preds = %bb, %dec_label_pc_2a048
  %v2_2a098 = phi i32 [ %v1_2a098, %bb ], [ %v2_2a091, %dec_label_pc_2a048 ]
  ret i32 %v2_2a098

; uselistorder directives
  uselistorder i32 %v0_2a06e, { 1, 0, 2, 3 }
}

define i32 @function_2a09f() local_unnamed_addr {
dec_label_pc_2a09f:
  %v0_2a0a0 = load i32, i32* @eax, align 4
  ret i32 %v0_2a0a0
}

define i32 @_Z9SerializeI11CDataStreamEvRT_RK7CScriptii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2a0a1:
  ret i32 %arg4
}

define i32 @function_2a0c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a0c2:
  %v2_2a0c2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2a0c2 = load i32, i32* @eax, align 4
  %v4_2a0c2 = trunc i32 %v3_2a0c2 to i8
  %v5_2a0c2 = add i8 %v4_2a0c2, %v2_2a0c2
  %v21_2a0c2 = inttoptr i32 %v3_2a0c2 to i8*
  store i8 %v5_2a0c2, i8* %v21_2a0c2, align 1
  %v0_2a0c4 = load i32, i32* @ecx, align 4
  %v1_2a0c4 = add i32 %v0_2a0c4, -1070468027
  %v2_2a0c4 = inttoptr i32 %v1_2a0c4 to i8*
  %v3_2a0c4 = load i8, i8* %v2_2a0c4, align 1
  %v5_2a0c4 = trunc i32 %v0_2a0c4 to i8
  %v6_2a0c4 = add i8 %v3_2a0c4, %v5_2a0c4
  store i8 %v6_2a0c4, i8* %v2_2a0c4, align 1
  %v0_2a0ca = load i32, i32* @ebp, align 4
  %v1_2a0ca = add i32 %v0_2a0ca, -32
  %v2_2a0ca = inttoptr i32 %v1_2a0ca to i32*
  %v3_2a0ca = load i32, i32* %v2_2a0ca, align 4
  %v1_2a0cd = add i32 %v0_2a0ca, -40
  %v2_2a0cd = inttoptr i32 %v1_2a0cd to i32*
  %v3_2a0cd = load i32, i32* %v2_2a0cd, align 4
  %v1_2a0d4 = add i32 %v0_2a0ca, -36
  %v2_2a0d4 = inttoptr i32 %v1_2a0d4 to i32*
  %v3_2a0d4 = load i32, i32* %v2_2a0d4, align 4
  %v1_2a0df = add i32 %v0_2a0ca, -28
  %v2_2a0df = inttoptr i32 %v1_2a0df to i32*
  %v3_2a0df = load i32, i32* %v2_2a0df, align 4
  %v4_2a0e5 = call i32 @unknown_54772(i32 %v3_2a0df, i32 %v3_2a0ca, i32 %v3_2a0d4, i32 %v3_2a0cd)
  %v0_2a0ea = load i32, i32* @ebp, align 4
  %v1_2a0ea = add i32 %v0_2a0ea, -12
  %v2_2a0ea = inttoptr i32 %v1_2a0ea to i32*
  %v3_2a0ea = load i32, i32* %v2_2a0ea, align 4
  %v1_2a0ed = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a0ed = xor i32 %v1_2a0ed, %v3_2a0ea
  %v3_2a0ed = icmp eq i32 %v2_2a0ed, 0
  store i32 %v2_2a0ed, i32* @eax, align 4
  br i1 %v3_2a0ed, label %bb, label %dec_label_pc_2a0f6

bb:                                               ; preds = %dec_label_pc_2a0c2
  %v1_2a0f4 = call i32 @function_2a0fb()
  br label %dec_label_pc_2a0f6

dec_label_pc_2a0f6:                               ; preds = %bb, %dec_label_pc_2a0c2
  %v2_2a0f4 = phi i32 [ %v1_2a0f4, %bb ], [ %v2_2a0ed, %dec_label_pc_2a0c2 ]
  ret i32 %v2_2a0f4

; uselistorder directives
  uselistorder i32 %v0_2a0ca, { 1, 0, 2, 3 }
}

define i32 @function_2a0fb() local_unnamed_addr {
dec_label_pc_2a0fb:
  %v0_2a0fc = load i32, i32* @eax, align 4
  ret i32 %v0_2a0fc
}

define i32 @_Z9SerializeI11CDataStreamEvRT_xii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2a0fd:
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-44, align 4
  %v2_2a134 = ptrtoint i32* %stack_var_-44 to i32
  %v3_2a141 = call i32 @unknown_37c41(i32 %arg1, i32 %v2_2a134, i32 8)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a152

bb:                                               ; preds = %dec_label_pc_2a0fd
  %v1_2a150 = call i32 @function_2a157()
  br label %dec_label_pc_2a152

dec_label_pc_2a152:                               ; preds = %bb, %dec_label_pc_2a0fd
  %v2_2a150 = phi i32 [ %v1_2a150, %bb ], [ 0, %dec_label_pc_2a0fd ]
  ret i32 %v2_2a150
}

define i32 @function_2a157() local_unnamed_addr {
dec_label_pc_2a157:
  %v0_2a158 = load i32, i32* @eax, align 4
  ret i32 %v0_2a158
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a15a:
  %v2_2a174 = load i32, i32* %arg1, align 4
  store i32 %v2_2a174, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a182

bb:                                               ; preds = %dec_label_pc_2a15a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2a180 = call i32 @function_2a187(i32 %tmp100)
  br label %dec_label_pc_2a182

dec_label_pc_2a182:                               ; preds = %bb, %dec_label_pc_2a15a
  %v3_2a180 = phi i32 [ %v2_2a180, %bb ], [ %v2_2a174, %dec_label_pc_2a15a ]
  ret i32 %v3_2a180

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2a187(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a187:
  %v0_2a188 = load i32, i32* @eax, align 4
  ret i32 %v0_2a188
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a18a:
  %v2_2a1a4 = load i32, i32* %arg1, align 4
  store i32 %v2_2a1a4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a1b2

bb:                                               ; preds = %dec_label_pc_2a18a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2a1b0 = call i32 @function_2a1b7(i32 %tmp100)
  br label %dec_label_pc_2a1b2

dec_label_pc_2a1b2:                               ; preds = %bb, %dec_label_pc_2a18a
  %v3_2a1b0 = phi i32 [ %v2_2a1b0, %bb ], [ %v2_2a1a4, %dec_label_pc_2a18a ]
  ret i32 %v3_2a1b0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2a1b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a1b4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a1b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a1b7:
  %v0_2a1b8 = load i32, i32* @eax, align 4
  ret i32 %v0_2a1b8
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a1ba:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_2a1d4 = add i32 %tmp100, 8
  %v2_2a1d4 = inttoptr i32 %v1_2a1d4 to i32*
  %v3_2a1d4 = load i32, i32* %v2_2a1d4, align 4
  %v2_2a1dc = load i32, i32* %arg1, align 4
  %v2_2a1e0 = sub i32 %v3_2a1d4, %v2_2a1dc
  %v2_2a1e4 = sdiv i32 %v2_2a1e0, 8
  %v3_2a1e7 = mul i32 %v2_2a1e4, -1431655765
  store i32 %v3_2a1e7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a1f9

bb:                                               ; preds = %dec_label_pc_2a1ba
  %v2_2a1f7 = call i32 @function_2a1fe(i32 %tmp100)
  br label %dec_label_pc_2a1f9

dec_label_pc_2a1f9:                               ; preds = %bb, %dec_label_pc_2a1ba
  %v3_2a1f7 = phi i32 [ %v2_2a1f7, %bb ], [ %v3_2a1e7, %dec_label_pc_2a1ba ]
  ret i32 %v3_2a1f7
}

define i32 @function_2a1fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a1fe:
  %v0_2a1ff = load i32, i32* @eax, align 4
  ret i32 %v0_2a1ff
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEEEPS4_jT_SE_() local_unnamed_addr {
dec_label_pc_2a200:
  %eax.global-to-local = alloca i32, align 4
  %v5_2a203 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2a203
}

define i32 @function_2a204(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a204:
  %v0_2a207 = load i32, i32* @ebp, align 4
  %v1_2a207 = add i32 %v0_2a207, 8
  %v2_2a207 = inttoptr i32 %v1_2a207 to i32*
  %v3_2a207 = load i32, i32* %v2_2a207, align 4
  %v2_2a20a = add i32 %v0_2a207, -28
  %v3_2a20a = inttoptr i32 %v2_2a20a to i32*
  store i32 %v3_2a207, i32* %v3_2a20a, align 4
  %v0_2a20d = load i32, i32* @ebp, align 4
  %v1_2a20d = add i32 %v0_2a20d, 12
  %v2_2a20d = inttoptr i32 %v1_2a20d to i32*
  %v3_2a20d = load i32, i32* %v2_2a20d, align 4
  %v2_2a210 = add i32 %v0_2a20d, -32
  %v3_2a210 = inttoptr i32 %v2_2a210 to i32*
  store i32 %v3_2a20d, i32* %v3_2a210, align 4
  %v0_2a213 = load i32, i32* @ebp, align 4
  %v1_2a213 = add i32 %v0_2a213, 16
  %v2_2a213 = inttoptr i32 %v1_2a213 to i32*
  %v3_2a213 = load i32, i32* %v2_2a213, align 4
  %v2_2a216 = add i32 %v0_2a213, -36
  %v3_2a216 = inttoptr i32 %v2_2a216 to i32*
  store i32 %v3_2a213, i32* %v3_2a216, align 4
  %v0_2a219 = load i32, i32* @ebp, align 4
  %v1_2a219 = add i32 %v0_2a219, 20
  %v2_2a219 = inttoptr i32 %v1_2a219 to i32*
  %v3_2a219 = load i32, i32* %v2_2a219, align 4
  %v2_2a21c = add i32 %v0_2a219, -40
  %v3_2a21c = inttoptr i32 %v2_2a21c to i32*
  store i32 %v3_2a219, i32* %v3_2a21c, align 4
  %v0_2a21f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a225 = load i32, i32* @ebp, align 4
  %v2_2a225 = add i32 %v1_2a225, -12
  %v3_2a225 = inttoptr i32 %v2_2a225 to i32*
  store i32 %v0_2a21f, i32* %v3_2a225, align 4
  %v0_2a22a = load i32, i32* @ebp, align 4
  %v1_2a22a = add i32 %v0_2a22a, -28
  %v2_2a22a = inttoptr i32 %v1_2a22a to i32*
  %v3_2a22a = load i32, i32* %v2_2a22a, align 4
  %v1_2a22d = add i32 %v0_2a22a, -32
  %v2_2a22d = inttoptr i32 %v1_2a22d to i32*
  %v3_2a22d = load i32, i32* %v2_2a22d, align 4
  store i32 %v3_2a22d, i32* @edx, align 8
  %v2_2a237 = call i32 @unknown_43c9c(i32 %v3_2a22a, i32 %v3_2a22d)
  %v1_2a23c = load i32, i32* @ebp, align 4
  %v2_2a23c = add i32 %v1_2a23c, -16
  %v3_2a23c = inttoptr i32 %v2_2a23c to i32*
  store i32 %v2_2a237, i32* %v3_2a23c, align 4
  %v0_2a23f = load i32, i32* @ebp, align 4
  %v1_2a23f = add i32 %v0_2a23f, -28
  %v2_2a23f = inttoptr i32 %v1_2a23f to i32*
  %v3_2a23f = load i32, i32* %v2_2a23f, align 4
  %v1_2a245 = call i32 @unknown_3fe70(i32 %v3_2a23f)
  ret i32 %v1_2a245
}

define i32 @function_2a24c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a24c:
  %v0_2a24e = load i32, i32* @ebp, align 4
  %v1_2a24e = add i32 %v0_2a24e, -16
  %v2_2a24e = inttoptr i32 %v1_2a24e to i32*
  %v3_2a24e = load i32, i32* %v2_2a24e, align 4
  %v1_2a255 = add i32 %v0_2a24e, -40
  %v2_2a255 = inttoptr i32 %v1_2a255 to i32*
  %v3_2a255 = load i32, i32* %v2_2a255, align 4
  %v1_2a25c = add i32 %v0_2a24e, -36
  %v2_2a25c = inttoptr i32 %v1_2a25c to i32*
  %v3_2a25c = load i32, i32* %v2_2a25c, align 4
  %v3_2a262 = call i32 @unknown_410b4(i32 %v3_2a25c, i32 %v3_2a255, i32 %v3_2a24e)
  %v0_2a267 = load i32, i32* @ebp, align 4
  %v1_2a267 = add i32 %v0_2a267, -16
  %v2_2a267 = inttoptr i32 %v1_2a267 to i32*
  %v3_2a267 = load i32, i32* %v2_2a267, align 4
  store i32 %v3_2a267, i32* @eax, align 4
  %v1_2a26a = add i32 %v0_2a267, -12
  %v2_2a26a = inttoptr i32 %v1_2a26a to i32*
  %v3_2a26a = load i32, i32* %v2_2a26a, align 4
  %v1_2a26d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a26d = xor i32 %v1_2a26d, %v3_2a26a
  %v3_2a26d = icmp eq i32 %v2_2a26d, 0
  store i32 %v2_2a26d, i32* @edx, align 8
  br i1 %v3_2a26d, label %bb, label %dec_label_pc_2a276

bb:                                               ; preds = %dec_label_pc_2a24c
  %v1_2a274 = call i32 @function_2a2b4()
  store i32 %v1_2a274, i32* @eax, align 4
  br label %dec_label_pc_2a276

dec_label_pc_2a276:                               ; preds = %bb, %dec_label_pc_2a24c
  %v0_2a276 = call i32 @function_2a2af()
  ret i32 %v0_2a276
}

define i32 @function_2a279() local_unnamed_addr {
dec_label_pc_2a279:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a279 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a279
}

define i32 @function_2a27e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a27e:
  %v0_2a27e = load i32, i32* @ecx, align 4
  %v1_2a27e = add i32 %v0_2a27e, 604277208
  %v2_2a27e = inttoptr i32 %v1_2a27e to i32*
  %v3_2a27e = load i32, i32* %v2_2a27e, align 4
  %v4_2a27e = add i32 %v3_2a27e, -1
  store i32 %v4_2a27e, i32* %v2_2a27e, align 4
  %v21_2a27e = load i32, i32* @eax, align 4
  ret i32 %v21_2a27e
}

define i32 @function_2a2af() local_unnamed_addr {
dec_label_pc_2a2af:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a2b4() local_unnamed_addr {
dec_label_pc_2a2b4:
  %v0_2a2b9 = load i32, i32* @eax, align 4
  ret i32 %v0_2a2b9
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET0_T_SG_SF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2a2ba:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_2a2e3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2a2f0 = call i32 @unknown_549ee(i32 %v2_2a2e3, i32 %arg3)
  %v2_2a2f8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_2a305 = call i32 @unknown_549ee(i32 %v2_2a2f8, i32 %arg2)
  %v3_2a317 = load i32, i32* %stack_var_-20, align 4
  %v3_2a31e = load i32, i32* %stack_var_-24, align 4
  %v4_2a328 = call i32 @unknown_54a38(i32 %arg1, i32 %v3_2a31e, i32 %v3_2a317, i32 %arg4)
  ret i32 %v4_2a328

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_549ee, { 1, 0 }
}

define i32 @function_2a32e() local_unnamed_addr {
dec_label_pc_2a32e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a32e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a32e
}

define i32 @function_2a336(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a336:
  %v0_2a336 = load i32, i32* @edx, align 8
  %v1_2a336 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a336 = icmp eq i32 %v1_2a336, %v0_2a336
  br i1 %v3_2a336, label %bb, label %dec_label_pc_2a336.dec_label_pc_2a33f_crit_edge

dec_label_pc_2a336.dec_label_pc_2a33f_crit_edge:  ; preds = %dec_label_pc_2a336
  %v2_2a33d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2a33f

bb:                                               ; preds = %dec_label_pc_2a336
  %v1_2a33d = call i32 @function_2a344()
  br label %dec_label_pc_2a33f

dec_label_pc_2a33f:                               ; preds = %dec_label_pc_2a336.dec_label_pc_2a33f_crit_edge, %bb
  %v2_2a33d = phi i32 [ %v2_2a33d.pre, %dec_label_pc_2a336.dec_label_pc_2a33f_crit_edge ], [ %v1_2a33d, %bb ]
  ret i32 %v2_2a33d

; uselistorder directives
  uselistorder label %dec_label_pc_2a33f, { 1, 0 }
}

define i32 @function_2a344() local_unnamed_addr {
dec_label_pc_2a344:
  %v0_2a345 = load i32, i32* @eax, align 4
  ret i32 %v0_2a345
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEES6_EvT_SC_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a348:
  %v0_2a360 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2a360
}

define i32 @function_2a368(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a368:
  %v0_2a36b = load i32, i32* @ebp, align 4
  %v1_2a36b = add i32 %v0_2a36b, -32
  %v2_2a36b = inttoptr i32 %v1_2a36b to i32*
  %v3_2a36b = load i32, i32* %v2_2a36b, align 4
  %v1_2a372 = add i32 %v0_2a36b, -28
  %v2_2a372 = inttoptr i32 %v1_2a372 to i32*
  %v3_2a372 = load i32, i32* %v2_2a372, align 4
  %v2_2a378 = call i32 @unknown_54b58(i32 %v3_2a372, i32 %v3_2a36b)
  %v0_2a37d = load i32, i32* @ebp, align 4
  %v1_2a37d = add i32 %v0_2a37d, -12
  %v2_2a37d = inttoptr i32 %v1_2a37d to i32*
  %v3_2a37d = load i32, i32* %v2_2a37d, align 4
  ret i32 %v3_2a37d
}

define i32 @function_2a380(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a380:
  %v0_2a380 = load i32, i32* @eax, align 4
  %v1_2a380 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a380 = xor i32 %v1_2a380, %v0_2a380
  %v3_2a380 = icmp eq i32 %v2_2a380, 0
  store i32 %v2_2a380, i32* @eax, align 4
  br i1 %v3_2a380, label %bb, label %dec_label_pc_2a389

bb:                                               ; preds = %dec_label_pc_2a380
  %v1_2a387 = call i32 @function_2a38e()
  br label %dec_label_pc_2a389

dec_label_pc_2a389:                               ; preds = %bb, %dec_label_pc_2a380
  %v2_2a387 = phi i32 [ %v1_2a387, %bb ], [ %v2_2a380, %dec_label_pc_2a380 ]
  ret i32 %v2_2a387
}

define i32 @function_2a38e() local_unnamed_addr {
dec_label_pc_2a38e:
  %v0_2a38f = load i32, i32* @eax, align 4
  ret i32 %v0_2a38f
}

define i32 @_ZSt4copyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a390:
  ret i32 %arg1
}

define i32 @function_2a39e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a39e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2a39e = load i32, i32* @ebp, align 4
  %v0_2a39f = load i32, i32* @eax, align 4
  %v2_2a39f = or i32 %v0_2a39f, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2a39f, i32* %eax.global-to-local, align 4
  %v0_2a3a2 = load i32, i32* @ecx, align 4
  %v1_2a3a2 = add i32 %v0_2a3a2, 255
  %v1_2a3a4 = add i32 %v0_2a39e, 3
  store i32 %v1_2a3a4, i32* %ebp.global-to-local, align 4
  %v1_2a3a5 = add i32 %v0_2a3a2, -1587159996
  %v2_2a3a5 = inttoptr i32 %v1_2a3a5 to i8*
  %v3_2a3a5 = load i8, i8* %v2_2a3a5, align 1
  %v5_2a3a5 = trunc i32 %v1_2a3a2 to i8
  %v8_2a3a5 = add i8 %v3_2a3a5, %v5_2a3a5
  %v28_2a3a5 = icmp ult i8 %v8_2a3a5, %v3_2a3a5
  store i1 %v28_2a3a5, i1* %cf.global-to-local, align 1
  store i8 %v8_2a3a5, i8* %v2_2a3a5, align 1
  %v0_2a3ab = load i32, i32* %eax.global-to-local, align 4
  %v1_2a3ab = trunc i32 %v0_2a3ab to i8
  %v2_2a3ab = load i1, i1* %cf.global-to-local, align 1
  %v3_2a3ab = zext i1 %v2_2a3ab to i8
  %v4_2a3ab = add i8 %v3_2a3ab, %v1_2a3ab
  %v19_2a3ab = icmp ule i8 %v4_2a3ab, %v1_2a3ab
  %v21_2a3ab = icmp eq i1 %v2_2a3ab, %v19_2a3ab
  store i1 %v21_2a3ab, i1* %cf.global-to-local, align 1
  %v22_2a3ab = zext i8 %v4_2a3ab to i32
  %v24_2a3ab = and i32 %v0_2a3ab, -256
  %v25_2a3ab = or i32 %v22_2a3ab, %v24_2a3ab
  store i32 %v25_2a3ab, i32* %eax.global-to-local, align 4
  %v1_2a3ad = inttoptr i32 %v25_2a3ab to i8*
  %v2_2a3ad = load i8, i8* %v1_2a3ad, align 1
  %v5_2a3ad = add i8 %v2_2a3ad, %v4_2a3ab
  store i8 %v5_2a3ad, i8* %v1_2a3ad, align 1
  %v0_2a3af = load i32, i32* %eax.global-to-local, align 4
  %v1_2a3af = load i32, i32* %ebp.global-to-local, align 4
  %v2_2a3af = add i32 %v1_2a3af, -12
  %v3_2a3af = inttoptr i32 %v2_2a3af to i32*
  store i32 %v0_2a3af, i32* %v3_2a3af, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2a3b4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2a3b4 = add i32 %v0_2a3b4, -32
  %v2_2a3b4 = inttoptr i32 %v1_2a3b4 to i32*
  %v3_2a3b4 = load i32, i32* %v2_2a3b4, align 4
  store i32 %v3_2a3b4, i32* %eax.global-to-local, align 4
  %v1_2a3ba = call i32 @unknown_46823(i32 %v3_2a3b4)
  store i32 %v1_2a3ba, i32* %eax.global-to-local, align 4
  store i32 %v1_2a3ba, i32* %ebx.global-to-local, align 4
  %v0_2a3c1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2a3c1 = add i32 %v0_2a3c1, -28
  %v2_2a3c1 = inttoptr i32 %v1_2a3c1 to i32*
  %v3_2a3c1 = load i32, i32* %v2_2a3c1, align 4
  store i32 %v3_2a3c1, i32* %eax.global-to-local, align 4
  %v1_2a3c7 = call i32 @unknown_46823(i32 %v3_2a3c1)
  store i32 %v1_2a3c7, i32* %eax.global-to-local, align 4
  %v0_2a3cc = load i32, i32* %ebp.global-to-local, align 4
  %v1_2a3cc = add i32 %v0_2a3cc, -36
  %v2_2a3cc = inttoptr i32 %v1_2a3cc to i32*
  %v3_2a3cc = load i32, i32* %v2_2a3cc, align 4
  %v0_2a3d3 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2a3da = call i32 @unknown_54be2(i32 %v1_2a3c7, i32 %v0_2a3d3, i32 %v3_2a3cc)
  store i32 %v3_2a3da, i32* @eax, align 4
  %v0_2a3df = load i32, i32* %ebp.global-to-local, align 4
  %v1_2a3df = add i32 %v0_2a3df, -12
  %v2_2a3df = inttoptr i32 %v1_2a3df to i32*
  %v3_2a3df = load i32, i32* %v2_2a3df, align 4
  %v1_2a3e2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2a3e2 = icmp eq i32 %v1_2a3e2, %v3_2a3df
  br i1 %v3_2a3e2, label %bb, label %dec_label_pc_2a3eb

bb:                                               ; preds = %dec_label_pc_2a39e
  %v1_2a3e9 = call i32 @function_2a3f0()
  store i32 %v1_2a3e9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2a3eb

dec_label_pc_2a3eb:                               ; preds = %bb, %dec_label_pc_2a39e
  %v3_2a3e9 = phi i32 [ %v1_2a3e9, %bb ], [ %v3_2a3da, %dec_label_pc_2a39e ]
  ret i32 %v3_2a3e9

; uselistorder directives
  uselistorder i8 %v4_2a3ab, { 0, 2, 1 }
  uselistorder i8 %v1_2a3ab, { 1, 0 }
  uselistorder i8 %v3_2a3a5, { 1, 0 }
  uselistorder i32 (i32)* @unknown_46823, { 1, 0 }
  uselistorder i32 3, { 2, 9, 3, 4, 5, 6, 7, 11, 0, 10, 13, 8, 12, 1 }
}

define i32 @function_2a3f0() local_unnamed_addr {
dec_label_pc_2a3f0:
  %v0_2a3f5 = load i32, i32* @eax, align 4
  ret i32 %v0_2a3f5
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a3f6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_2a410 = add i32 %tmp100, 8
  %v2_2a410 = inttoptr i32 %v1_2a410 to i32*
  %v3_2a410 = load i32, i32* %v2_2a410, align 4
  %v2_2a418 = load i32, i32* %arg1, align 4
  %v2_2a41c = sub i32 %v3_2a410, %v2_2a418
  %v2_2a420 = sdiv i32 %v2_2a41c, 4
  %v3_2a423 = mul i32 %v2_2a420, -858993459
  store i32 %v3_2a423, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a435

bb:                                               ; preds = %dec_label_pc_2a3f6
  %v2_2a433 = call i32 @function_2a43a(i32 %tmp100)
  br label %dec_label_pc_2a435

dec_label_pc_2a435:                               ; preds = %bb, %dec_label_pc_2a3f6
  %v3_2a433 = phi i32 [ %v2_2a433, %bb ], [ %v3_2a423, %dec_label_pc_2a3f6 ]
  ret i32 %v3_2a433
}

define i32 @function_2a43a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a43a:
  %v0_2a43b = load i32, i32* @eax, align 4
  ret i32 %v0_2a43b
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEEEPS4_jT_SE_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2a43c:
  ret i32 %arg4
}

define i32 @function_2a496(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a496:
  %v0_2a498 = load i32, i32* @ebp, align 4
  %v1_2a498 = add i32 %v0_2a498, -36
  %v2_2a498 = inttoptr i32 %v1_2a498 to i32*
  %v3_2a498 = load i32, i32* %v2_2a498, align 4
  %v1_2a49e = call i32 @unknown_4ba22(i32 %v3_2a498)
  %v0_2a4a3 = load i32, i32* @ebp, align 4
  %v1_2a4a3 = add i32 %v0_2a4a3, -16
  %v2_2a4a3 = inttoptr i32 %v1_2a4a3 to i32*
  %v3_2a4a3 = load i32, i32* %v2_2a4a3, align 4
  store i32 %v3_2a4a3, i32* @eax, align 4
  %v1_2a4a6 = add i32 %v0_2a4a3, -12
  %v2_2a4a6 = inttoptr i32 %v1_2a4a6 to i32*
  %v3_2a4a6 = load i32, i32* %v2_2a4a6, align 4
  %v1_2a4a9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a4a9 = icmp eq i32 %v1_2a4a9, %v3_2a4a6
  br i1 %v3_2a4a9, label %bb, label %dec_label_pc_2a4b2

bb:                                               ; preds = %dec_label_pc_2a496
  %v2_2a4b0 = call i32 @function_2a4f0(i32 %v3_2a498)
  store i32 %v2_2a4b0, i32* @eax, align 4
  br label %dec_label_pc_2a4b2

dec_label_pc_2a4b2:                               ; preds = %bb, %dec_label_pc_2a496
  %v0_2a4b2 = call i32 @function_2a4eb()
  ret i32 %v0_2a4b2

; uselistorder directives
  uselistorder i32 (i32)* @function_2a4f0, { 1, 0 }
}

define i32 @function_2a4b5() local_unnamed_addr {
dec_label_pc_2a4b5:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a4b5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a4b5
}

define i32 @function_2a4ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4ce:
  %v0_2a4ce = load i32, i32* @ebp, align 4
  %v1_2a4ce = add i32 %v0_2a4ce, 1
  store i32 %v1_2a4ce, i32* @ebp, align 4
  %v0_2a4d5 = load i32, i32* @eax, align 4
  %v11_2a4d5 = and i32 %v0_2a4d5, -248
  %v1_2a4d7 = add i32 %v0_2a4ce, -15
  %v2_2a4d7 = inttoptr i32 %v1_2a4d7 to i32*
  %v3_2a4d7 = load i32, i32* %v2_2a4d7, align 4
  store i32 %v3_2a4d7, i32* @edx, align 8
  %v2_2a4e1 = call i32 @unknown_440f4(i32 %v11_2a4d5, i32 %v3_2a4d7)
  ret i32 %v2_2a4e1

; uselistorder directives
  uselistorder i32 -248, { 0, 2, 3, 4, 5, 6, 1, 8, 9, 7 }
}

define i32 @function_2a4eb() local_unnamed_addr {
dec_label_pc_2a4eb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a4f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4f0:
  %v0_2a4f5 = load i32, i32* @eax, align 4
  ret i32 %v0_2a4f5
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET0_T_SG_SF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2a4f6:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_2a51f = ptrtoint i32* %stack_var_-20 to i32
  %v2_2a52c = call i32 @unknown_54dba(i32 %v2_2a51f, i32 %arg3)
  %v2_2a534 = ptrtoint i32* %stack_var_-24 to i32
  %v2_2a541 = call i32 @unknown_54dba(i32 %v2_2a534, i32 %arg2)
  %v3_2a553 = load i32, i32* %stack_var_-20, align 4
  %v3_2a55a = load i32, i32* %stack_var_-24, align 4
  %v4_2a564 = call i32 @unknown_54e04(i32 %arg1, i32 %v3_2a55a, i32 %v3_2a553, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a57b

bb:                                               ; preds = %dec_label_pc_2a4f6
  %v1_2a579 = call i32 @function_2a580()
  br label %dec_label_pc_2a57b

dec_label_pc_2a57b:                               ; preds = %bb, %dec_label_pc_2a4f6
  %v2_2a579 = phi i32 [ %v1_2a579, %bb ], [ %arg1, %dec_label_pc_2a4f6 ]
  ret i32 %v2_2a579

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_54dba, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2a580() local_unnamed_addr {
dec_label_pc_2a580:
  %v0_2a581 = load i32, i32* @eax, align 4
  ret i32 %v0_2a581
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEES6_EvT_SC_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a584:
  ret i32 %arg2
}

define i32 @function_2a5af(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a5af:
  %v0_2a5af = load i32, i32* @ebp, align 4
  %v1_2a5af = add i32 %v0_2a5af, 1
  store i32 %v1_2a5af, i32* @ebp, align 4
  %v0_2a5b4 = call i32 @unknown_54f24()
  ret i32 %v0_2a5b4
}

define i32 @function_2a5ba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a5ba:
  %v0_2a5ba = load i32, i32* @ebp, align 4
  %v1_2a5ba = add i32 %v0_2a5ba, 1
  store i32 %v1_2a5ba, i32* @ebp, align 4
  %v0_2a5bc = load i32, i32* @eax, align 4
  %v1_2a5bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a5bc = xor i32 %v1_2a5bc, %v0_2a5bc
  %v3_2a5bc = icmp eq i32 %v2_2a5bc, 0
  store i32 %v2_2a5bc, i32* @eax, align 4
  br i1 %v3_2a5bc, label %bb, label %dec_label_pc_2a5c5

bb:                                               ; preds = %dec_label_pc_2a5ba
  %v1_2a5c3 = call i32 @function_2a5ca()
  br label %dec_label_pc_2a5c5

dec_label_pc_2a5c5:                               ; preds = %bb, %dec_label_pc_2a5ba
  %v2_2a5c3 = phi i32 [ %v1_2a5c3, %bb ], [ %v2_2a5bc, %dec_label_pc_2a5ba ]
  ret i32 %v2_2a5c3
}

define i32 @function_2a5ca() local_unnamed_addr {
dec_label_pc_2a5ca:
  %v0_2a5cb = load i32, i32* @eax, align 4
  ret i32 %v0_2a5cb
}

define i32 @_ZSt4copyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a5cc:
  %v1_2a5f6 = call i32 @unknown_46e29(i32 %arg2)
  ret i32 %v1_2a5f6
}

define i32 @function_2a5fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a5fc:
  %v0_2a5fc = load i32, i32* @eax, align 4
  ret i32 %v0_2a5fc
}

define i32 @function_2a602(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a602:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a602 = load i32, i32* @eax, align 4
  %v11_2a602 = and i32 %v0_2a602, -24
  %v1_2a604 = load i32, i32* @ecx, align 4
  %v2_2a604 = and i32 %v11_2a602, %v1_2a604
  store i32 %v2_2a604, i32* %eax.global-to-local, align 4
  %v1_2a606 = inttoptr i32 %v2_2a604 to i32*
  %v2_2a606 = load i32, i32* %v1_2a606, align 8
  %v4_2a606 = add i32 %v2_2a606, %v2_2a604
  store i32 %v4_2a606, i32* %v1_2a606, align 8
  %v0_2a608 = load i32, i32* @ebp, align 4
  %v1_2a608 = add i32 %v0_2a608, -36
  %v2_2a608 = inttoptr i32 %v1_2a608 to i32*
  %v3_2a608 = load i32, i32* %v2_2a608, align 4
  %v0_2a60f = load i32, i32* @ebx, align 4
  %v0_2a613 = load i32, i32* %eax.global-to-local, align 4
  %v3_2a616 = call i32 @unknown_54fae(i32 %v0_2a613, i32 %v0_2a60f, i32 %v3_2a608)
  store i32 %v3_2a616, i32* @eax, align 4
  %v0_2a61b = load i32, i32* @ebp, align 4
  %v1_2a61b = add i32 %v0_2a61b, -12
  %v2_2a61b = inttoptr i32 %v1_2a61b to i32*
  %v3_2a61b = load i32, i32* %v2_2a61b, align 4
  %v1_2a61e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a61e = icmp eq i32 %v1_2a61e, %v3_2a61b
  br i1 %v3_2a61e, label %bb, label %dec_label_pc_2a627

bb:                                               ; preds = %dec_label_pc_2a602
  %v1_2a625 = call i32 @function_2a62c()
  store i32 %v1_2a625, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2a627

dec_label_pc_2a627:                               ; preds = %bb, %dec_label_pc_2a602
  %v2_2a625 = phi i32 [ %v1_2a625, %bb ], [ %v3_2a616, %dec_label_pc_2a602 ]
  ret i32 %v2_2a625
}

define i32 @function_2a62c() local_unnamed_addr {
dec_label_pc_2a62c:
  %v0_2a631 = load i32, i32* @eax, align 4
  ret i32 %v0_2a631
}

define i32 @_ZNK9COutPoint9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2a632:
  ret i32 %arg4
}

define i32 @function_2a64e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a64e:
  %v0_2a64e = load i32, i32* @eax, align 4
  %v1_2a64e = load i32, i32* @ebp, align 4
  %v2_2a64e = add i32 %v1_2a64e, -56
  %v3_2a64e = inttoptr i32 %v2_2a64e to i32*
  store i32 %v0_2a64e, i32* %v3_2a64e, align 4
  %v0_2a651 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a657 = load i32, i32* @ebp, align 4
  %v2_2a657 = add i32 %v1_2a657, -12
  %v3_2a657 = inttoptr i32 %v2_2a657 to i32*
  store i32 %v0_2a651, i32* %v3_2a657, align 4
  %v0_2a65c = load i32, i32* @ebp, align 4
  %v1_2a65c = add i32 %v0_2a65c, -15
  %v2_2a65c = inttoptr i32 %v1_2a65c to i8*
  store i8 0, i8* %v2_2a65c, align 1
  %v0_2a660 = load i32, i32* @ebp, align 4
  %v1_2a660 = add i32 %v0_2a660, -14
  %v2_2a660 = inttoptr i32 %v1_2a660 to i8*
  store i8 1, i8* %v2_2a660, align 1
  %v0_2a664 = load i32, i32* @ebp, align 4
  %v1_2a664 = add i32 %v0_2a664, -13
  %v2_2a664 = inttoptr i32 %v1_2a664 to i8*
  store i8 0, i8* %v2_2a664, align 1
  %v0_2a668 = load i32, i32* @ebp, align 4
  %v1_2a668 = add i32 %v0_2a668, -20
  %v2_2a668 = inttoptr i32 %v1_2a668 to i32*
  store i32 0, i32* %v2_2a668, align 4
  %v0_2a66f = load i32, i32* @ebp, align 4
  %v1_2a66f = add i32 %v0_2a66f, -44
  %v2_2a66f = inttoptr i32 %v1_2a66f to i32*
  %v3_2a66f = load i32, i32* %v2_2a66f, align 4
  %v1_2a672 = add i32 %v3_2a66f, 36
  %v1_2a680 = add i32 %v0_2a66f, -28
  %v3_2a686 = call i32 @unknown_37e9a(i32 %v1_2a680, i32 %v3_2a66f, i32 %v1_2a672)
  %v0_2a68b = load i32, i32* @ebp, align 4
  %v1_2a68b = add i32 %v0_2a68b, -28
  %v1_2a691 = call i32 @unknown_3bdfe(i32 %v1_2a68b)
  %v0_2a696 = load i32, i32* @ebx, align 4
  %v0_2a69a = load i32, i32* @ebp, align 4
  %v1_2a69a = add i32 %v0_2a69a, -56
  %v2_2a69a = inttoptr i32 %v1_2a69a to i32*
  %v3_2a69a = load i32, i32* %v2_2a69a, align 4
  %v1_2a6a1 = add i32 %v0_2a69a, -52
  %v2_2a6a1 = inttoptr i32 %v1_2a6a1 to i32*
  %v3_2a6a1 = load i32, i32* %v2_2a6a1, align 4
  %v1_2a6ac = add i32 %v0_2a69a, -48
  %v2_2a6ac = inttoptr i32 %v1_2a6ac to i32*
  %v3_2a6ac = load i32, i32* %v2_2a6ac, align 4
  %sext = mul i32 %v0_2a696, 16777216
  %v5_2a6b2 = sdiv i32 %sext, 16777216
  %v6_2a6b2 = call i32 @unknown_4664c(i32 %v3_2a6ac, i32 %v1_2a691, i32 %v3_2a6a1, i32 %v3_2a69a, i32 %v5_2a6b2)
  %v0_2a6b7 = load i32, i32* @ebp, align 4
  %v1_2a6b7 = add i32 %v0_2a6b7, -20
  %v2_2a6b7 = inttoptr i32 %v1_2a6b7 to i32*
  %v3_2a6b7 = load i32, i32* %v2_2a6b7, align 4
  %v5_2a6b7 = add i32 %v3_2a6b7, %v6_2a6b2
  store i32 %v5_2a6b7, i32* %v2_2a6b7, align 4
  %v0_2a6ba = load i32, i32* @ebp, align 4
  %v1_2a6ba = add i32 %v0_2a6ba, -12
  %v2_2a6ba = inttoptr i32 %v1_2a6ba to i32*
  %v3_2a6ba = load i32, i32* %v2_2a6ba, align 4
  %v1_2a6bd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a6bd = xor i32 %v1_2a6bd, %v3_2a6ba
  %v3_2a6bd = icmp eq i32 %v2_2a6bd, 0
  store i32 %v2_2a6bd, i32* @eax, align 4
  br i1 %v3_2a6bd, label %bb, label %dec_label_pc_2a6c6

bb:                                               ; preds = %dec_label_pc_2a64e
  %v1_2a6c4 = call i32 @function_2a6cb()
  br label %dec_label_pc_2a6c6

dec_label_pc_2a6c6:                               ; preds = %bb, %dec_label_pc_2a64e
  %v2_2a6c4 = phi i32 [ %v1_2a6c4, %bb ], [ %v2_2a6bd, %dec_label_pc_2a64e ]
  ret i32 %v2_2a6c4

; uselistorder directives
  uselistorder i32 16777216, { 1, 0, 3, 2, 6, 4, 7, 5, 11, 8, 12, 9, 13, 10, 17, 14, 18, 15, 19, 16, 23, 20, 24, 21, 25, 22, 29, 26, 30, 27, 31, 28, 35, 32, 36, 33, 37, 34, 41, 38, 42, 39, 43, 40, 45, 44, 47, 46, 49, 48, 51, 50, 53, 52, 55, 54, 57, 56, 59, 58, 61, 60, 63, 62, 65, 64, 67, 66, 69, 68, 71, 70, 73, 72, 75, 74, 77, 76, 80, 78, 81, 79, 83, 82, 85, 84, 87, 86, 89, 88, 91, 90, 93, 92, 96, 94, 97, 95, 99, 98, 103, 100, 104, 101, 105, 102, 107, 106, 109, 108, 111, 110, 113, 112, 115, 114, 117, 116, 119, 118, 121, 120, 123, 122, 125, 124, 127, 126, 130, 128, 131, 129, 133, 132, 136, 134, 137, 135, 140, 138, 141, 139, 144, 142, 145, 143, 147, 146, 149, 148, 151, 150, 153, 152, 155, 154, 157, 156, 159, 158, 162, 160, 163, 161, 166, 164, 167, 165, 170, 168, 171, 169, 174, 172, 175, 173, 177, 176, 179, 178, 181, 180, 183, 182, 185, 184, 187, 186, 189, 188, 191, 190, 193, 192, 195, 194, 198, 196, 199, 197, 201, 200, 203, 202, 206, 204, 207, 205, 209, 208, 211, 210, 213, 212, 215, 214, 217, 216, 219, 218, 221, 220, 223, 222, 225, 224, 227, 226, 229, 228, 231, 230, 233, 232, 235, 234, 238, 236, 239, 237, 244, 240, 245, 241, 246, 242, 247, 243, 252, 248, 253, 249, 254, 250, 255, 251, 258, 256, 259, 257, 263, 260, 264, 261, 265, 262, 267, 266, 268, 270, 269 }
  uselistorder i32 -48, { 28, 13, 14, 15, 16, 29, 30, 26, 17, 31, 24, 25, 33, 32, 34, 35, 36, 18, 19, 22, 20, 21, 37, 0, 1, 27, 2, 3, 23, 39, 43, 44, 40, 41, 42, 4, 5, 6, 38, 7, 45, 10, 8, 9, 11, 12, 46, 47 }
  uselistorder i32 -52, { 116, 103, 104, 105, 106, 0, 119, 1, 2, 118, 3, 4, 120, 5, 6, 121, 122, 123, 7, 124, 8, 9, 117, 108, 127, 115, 129, 10, 11, 12, 13, 14, 131, 15, 132, 16, 133, 134, 112, 17, 18, 19, 135, 136, 20, 21, 22, 137, 23, 24, 25, 114, 26, 113, 27, 28, 29, 30, 138, 139, 31, 32, 141, 142, 143, 107, 33, 34, 35, 36, 37, 38, 109, 39, 40, 126, 41, 42, 43, 146, 145, 44, 45, 46, 47, 111, 48, 49, 50, 51, 52, 128, 53, 54, 55, 56, 57, 58, 155, 156, 59, 60, 140, 61, 62, 63, 64, 65, 110, 66, 67, 144, 68, 69, 70, 148, 71, 72, 73, 74, 75, 76, 77, 78, 79, 147, 154, 125, 80, 81, 82, 83, 84, 85, 157, 149, 86, 87, 88, 130, 89, 90, 91, 150, 92, 93, 94, 151, 95, 96, 152, 97, 153, 98, 99, 100, 101, 102, 158 }
  uselistorder i32 -44, { 154, 129, 130, 131, 132, 144, 145, 155, 156, 157, 158, 159, 133, 161, 0, 163, 1, 2, 162, 3, 4, 164, 5, 6, 165, 166, 167, 7, 168, 8, 9, 160, 136, 173, 10, 11, 12, 13, 14, 176, 15, 177, 16, 178, 179, 151, 17, 18, 19, 180, 181, 134, 20, 21, 22, 182, 23, 24, 25, 153, 26, 152, 27, 28, 29, 30, 183, 184, 31, 32, 186, 187, 188, 189, 135, 33, 34, 203, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 137, 52, 53, 170, 54, 55, 56, 192, 191, 57, 58, 59, 60, 140, 61, 62, 63, 64, 65, 171, 66, 175, 67, 68, 69, 70, 71, 204, 205, 72, 73, 185, 74, 75, 76, 77, 78, 138, 79, 80, 190, 81, 82, 83, 198, 84, 85, 86, 87, 88, 89, 90, 91, 92, 139, 193, 169, 93, 194, 94, 95, 96, 97, 98, 99, 100, 172, 101, 102, 103, 104, 105, 106, 118, 206, 199, 107, 108, 109, 174, 110, 196, 111, 112, 200, 113, 114, 115, 201, 116, 117, 202, 141, 142, 143, 146, 147, 148, 149, 119, 150, 120, 121, 195, 197, 122, 123, 124, 207, 125, 126, 127, 208, 128 }
  uselistorder i32 -20, { 23, 24, 25, 26, 27, 28, 29, 12, 37, 35, 36, 38, 30, 31, 32, 43, 33, 34, 44, 21, 22, 13, 14, 15, 16, 17, 18, 19, 20, 0, 41, 2, 4, 3, 1, 5, 6, 39, 40, 7, 8, 42, 45, 46, 47, 9, 10, 11 }
  uselistorder i32 -13, { 13, 17, 9, 18, 10, 14, 19, 20, 21, 16, 12, 15, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i8 1, { 4, 11, 6, 2, 0, 7, 3, 5, 8, 9, 10, 1 }
  uselistorder i32 -14, { 6, 3, 4, 5, 0, 7, 1, 8, 2 }
  uselistorder i32 -15, { 4, 0, 2, 3, 1 }
  uselistorder i32 -56, { 52, 53, 42, 43, 44, 45, 56, 57, 0, 1, 2, 54, 47, 59, 60, 3, 4, 5, 61, 55, 6, 62, 63, 7, 8, 65, 66, 67, 68, 46, 9, 10, 11, 12, 13, 14, 48, 15, 50, 16, 17, 18, 19, 73, 74, 64, 20, 21, 22, 23, 24, 49, 69, 51, 25, 26, 27, 28, 29, 30, 58, 31, 32, 33, 34, 35, 36, 75, 70, 37, 38, 71, 39, 40, 72, 41, 76, 77 }
}

define i32 @function_2a6cb() local_unnamed_addr {
dec_label_pc_2a6cb:
  %v17_2a6cb = load i32, i32* @eax, align 4
  ret i32 %v17_2a6cb
}

define i32 @function_2a6ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a6ce:
  store i32 %arg1, i32* @ebx, align 4
  %v0_2a6d0 = load i32, i32* @eax, align 4
  ret i32 %v0_2a6d0
}

define i32 @_Z9SerializeI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2a6d1:
  %stack_var_-17 = alloca i32, align 4
  %v0_2a6ef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a6fa = ptrtoint i32* %stack_var_-17 to i32
  %v5_2a71c = call i32 @unknown_55125(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_2a6fa)
  ret i32 %v0_2a6ef
}

define i32 @function_2a725(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a725:
  %v0_2a725 = load i32, i32* @eax, align 4
  %v1_2a725 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a725 = xor i32 %v1_2a725, %v0_2a725
  %v3_2a725 = icmp eq i32 %v2_2a725, 0
  store i32 %v2_2a725, i32* @eax, align 4
  br i1 %v3_2a725, label %bb, label %dec_label_pc_2a72d

bb:                                               ; preds = %dec_label_pc_2a725
  %v1_2a72b = call i32 @function_2a732()
  br label %dec_label_pc_2a72d

dec_label_pc_2a72d:                               ; preds = %bb, %dec_label_pc_2a725
  %v2_2a72b = phi i32 [ %v1_2a72b, %bb ], [ %v2_2a725, %dec_label_pc_2a725 ]
  ret i32 %v2_2a72b
}

define i32 @function_2a732() local_unnamed_addr {
dec_label_pc_2a732:
  %v0_2a733 = load i32, i32* @eax, align 4
  ret i32 %v0_2a733
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a734:
  %v0_2a746 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2a746
}

define i32 @function_2a779() local_unnamed_addr {
dec_label_pc_2a779:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a779 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a779 = add i32 %v0_2a779, -1
  store i32 %v1_2a779, i32* %ecx.global-to-local, align 4
  %v0_2a77b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a77b
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET1_T0_SG_SF_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a77e:
  ret i32 %arg2
}

define i32 @function_2a792(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a792:
  %v0_2a792 = load i32, i32* @ebp, align 4
  %v1_2a792 = add i32 %v0_2a792, 16
  %v2_2a792 = inttoptr i32 %v1_2a792 to i32*
  %v3_2a792 = load i32, i32* %v2_2a792, align 4
  %v2_2a795 = add i32 %v0_2a792, -36
  %v3_2a795 = inttoptr i32 %v2_2a795 to i32*
  store i32 %v3_2a792, i32* %v3_2a795, align 4
  %v0_2a798 = load i32, i32* @ebp, align 4
  %v1_2a798 = add i32 %v0_2a798, 20
  %v2_2a798 = inttoptr i32 %v1_2a798 to i32*
  %v3_2a798 = load i32, i32* %v2_2a798, align 4
  %v2_2a79b = add i32 %v0_2a798, -40
  %v3_2a79b = inttoptr i32 %v2_2a79b to i32*
  store i32 %v3_2a798, i32* %v3_2a79b, align 4
  %v0_2a79e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a7a4 = load i32, i32* @ebp, align 4
  %v2_2a7a4 = add i32 %v1_2a7a4, -12
  %v3_2a7a4 = inttoptr i32 %v2_2a7a4 to i32*
  store i32 %v0_2a79e, i32* %v3_2a7a4, align 4
  %v0_2a7a9 = load i32, i32* @ebp, align 4
  %v1_2a7a9 = add i32 %v0_2a7a9, -40
  %v2_2a7a9 = inttoptr i32 %v1_2a7a9 to i32*
  %v3_2a7a9 = load i32, i32* %v2_2a7a9, align 4
  %v1_2a7af = call i32 @unknown_552f3(i32 %v3_2a7a9)
  %v0_2a7b6 = load i32, i32* @ebp, align 4
  %v1_2a7b6 = add i32 %v0_2a7b6, -36
  %v2_2a7b6 = inttoptr i32 %v1_2a7b6 to i32*
  %v3_2a7b6 = load i32, i32* %v2_2a7b6, align 4
  %v1_2a7bc = call i32 @unknown_552be(i32 %v3_2a7b6)
  ret i32 %v1_2a7bc
}

define i32 @function_2a7c5(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a7c5:
  %v0_2a7c5 = load i32, i32* @ecx, align 4
  %v1_2a7c5 = add i32 %v0_2a7c5, -1
  store i32 %v1_2a7c5, i32* @ecx, align 4
  %v1_2a7c9 = call i32 @unknown_552be(i32 ptrtoint (i32* @0 to i32))
  %v0_2a7ce = load i32, i32* @esi, align 4
  %v0_2a7d2 = load i32, i32* @ebx, align 4
  %v3_2a7d9 = call i32 @unknown_55328(i32 %v1_2a7c9, i32 %v0_2a7d2, i32 %v0_2a7ce)
  %v1_2a7de = load i32, i32* @ebp, align 4
  %v2_2a7de = add i32 %v1_2a7de, -16
  %v3_2a7de = inttoptr i32 %v2_2a7de to i32*
  store i32 %v3_2a7d9, i32* %v3_2a7de, align 4
  %v0_2a7e1 = load i32, i32* @ebp, align 4
  %v1_2a7e8 = add i32 %v0_2a7e1, -28
  %v2_2a7e8 = inttoptr i32 %v1_2a7e8 to i32*
  %v3_2a7e8 = load i32, i32* %v2_2a7e8, align 4
  ret i32 %v3_2a7e8
}

define i32 @function_2a7f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a7f2:
  %v0_2a7f2 = load i32, i32* @ebx, align 4
  %v1_2a7f2 = add i32 %v0_2a7f2, 1435231301
  %v2_2a7f2 = inttoptr i32 %v1_2a7f2 to i8*
  %v3_2a7f2 = load i8, i8* %v2_2a7f2, align 1
  %v4_2a7f2 = load i32, i32* @ecx, align 4
  %v5_2a7f2 = trunc i32 %v4_2a7f2 to i8
  %v6_2a7f2 = add i8 %v5_2a7f2, %v3_2a7f2
  store i8 %v6_2a7f2, i8* %v2_2a7f2, align 1
  %v0_2a7f9 = load i32, i32* @edx, align 8
  %v1_2a7f9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a7f9 = icmp eq i32 %v1_2a7f9, %v0_2a7f9
  br i1 %v3_2a7f9, label %bb, label %dec_label_pc_2a7f2.dec_label_pc_2a802_crit_edge

dec_label_pc_2a7f2.dec_label_pc_2a802_crit_edge:  ; preds = %dec_label_pc_2a7f2
  %v2_2a800.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2a802

bb:                                               ; preds = %dec_label_pc_2a7f2
  %v1_2a800 = call i32 @function_2a807()
  br label %dec_label_pc_2a802

dec_label_pc_2a802:                               ; preds = %dec_label_pc_2a7f2.dec_label_pc_2a802_crit_edge, %bb
  %v2_2a800 = phi i32 [ %v2_2a800.pre, %dec_label_pc_2a7f2.dec_label_pc_2a802_crit_edge ], [ %v1_2a800, %bb ]
  ret i32 %v2_2a800

; uselistorder directives
  uselistorder i32 1435231301, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_2a802, { 1, 0 }
}

define i32 @function_2a807() local_unnamed_addr {
dec_label_pc_2a807:
  %v0_2a80d = load i32, i32* @eax, align 4
  ret i32 %v0_2a80d
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a810:
  ret i32 %arg2
}

define i32 @function_2a81f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a81f:
  %v0_2a81f = load i32, i32* @eax, align 4
  %v1_2a81f = load i32, i32* @ebp, align 4
  %v2_2a81f = add i32 %v1_2a81f, -32
  %v3_2a81f = inttoptr i32 %v2_2a81f to i32*
  store i32 %v0_2a81f, i32* %v3_2a81f, align 4
  %v0_2a822 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a828 = load i32, i32* @ebp, align 4
  %v2_2a828 = add i32 %v1_2a828, -12
  %v3_2a828 = inttoptr i32 %v2_2a828 to i32*
  store i32 %v0_2a822, i32* %v3_2a828, align 4
  %v0_2a82d = load i32, i32* @ebp, align 4
  %v1_2a82d = add i32 %v0_2a82d, -32
  %v2_2a82d = inttoptr i32 %v1_2a82d to i32*
  %v3_2a82d = load i32, i32* %v2_2a82d, align 4
  %v1_2a834 = add i32 %v0_2a82d, -28
  %v2_2a834 = inttoptr i32 %v1_2a834 to i32*
  %v3_2a834 = load i32, i32* %v2_2a834, align 4
  %v2_2a83a = call i32 @unknown_5540d(i32 %v3_2a834, i32 %v3_2a82d)
  %v0_2a83f = load i32, i32* @ebp, align 4
  %v1_2a83f = add i32 %v0_2a83f, -12
  %v2_2a83f = inttoptr i32 %v1_2a83f to i32*
  %v3_2a83f = load i32, i32* %v2_2a83f, align 4
  %v1_2a842 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a842 = xor i32 %v1_2a842, %v3_2a83f
  %v3_2a842 = icmp eq i32 %v2_2a842, 0
  store i32 %v2_2a842, i32* @eax, align 4
  br i1 %v3_2a842, label %bb, label %dec_label_pc_2a84b

bb:                                               ; preds = %dec_label_pc_2a81f
  %v1_2a849 = call i32 @function_2a850()
  br label %dec_label_pc_2a84b

dec_label_pc_2a84b:                               ; preds = %bb, %dec_label_pc_2a81f
  %v2_2a849 = phi i32 [ %v1_2a849, %bb ], [ %v2_2a842, %dec_label_pc_2a81f ]
  ret i32 %v2_2a849
}

define i32 @function_2a850() local_unnamed_addr {
dec_label_pc_2a850:
  %v0_2a851 = load i32, i32* @eax, align 4
  ret i32 %v0_2a851
}

define i32 @_ZSt14__copy_move_a2ILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a852:
  ret i32 %arg3
}

define i32 @function_2a86a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a86a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_2a86a = load i32, i32* @ebp, align 4
  %v1_2a86a = add i32 %v0_2a86a, 1
  store i32 %v1_2a86a, i32* @ebp, align 4
  %v2_2a86b = add i32 %v0_2a86a, -94
  %v3_2a86b = inttoptr i32 %v2_2a86b to double*
  %v4_2a86b = load double, double* %v3_2a86b, align 4
  %v5_2a86b = fpext double %v4_2a86b to x86_fp80
  %v6_2a86b = load x86_fp80, x86_fp80* @st0, align 4
  %v7_2a86b = fsub x86_fp80 %v5_2a86b, %v6_2a86b
  store x86_fp80 %v7_2a86b, x86_fp80* @st0, align 4
  %v0_2a86e = load i32, i32* @eax, align 4
  %v1_2a86e = trunc i32 %v0_2a86e to i8
  %v2_2a86e = load i1, i1* @cf, align 1
  %v3_2a86e = zext i1 %v2_2a86e to i8
  %v4_2a86e = add i8 %v3_2a86e, %v1_2a86e
  %v22_2a86e = zext i8 %v4_2a86e to i32
  %v24_2a86e = and i32 %v0_2a86e, -256
  %v25_2a86e = or i32 %v22_2a86e, %v24_2a86e
  store i32 %v25_2a86e, i32* %eax.global-to-local, align 4
  %v1_2a870 = inttoptr i32 %v25_2a86e to i8*
  %v2_2a870 = load i8, i8* %v1_2a870, align 1
  %v5_2a870 = add i8 %v2_2a870, %v4_2a86e
  store i8 %v5_2a870, i8* %v1_2a870, align 1
  %v0_2a872 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a872 = load i32, i32* @ebp, align 4
  %v2_2a872 = add i32 %v1_2a872, -12
  %v3_2a872 = inttoptr i32 %v2_2a872 to i32*
  store i32 %v0_2a872, i32* %v3_2a872, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2a877 = load i32, i32* @ebp, align 4
  %v1_2a877 = add i32 %v0_2a877, -36
  %v2_2a877 = inttoptr i32 %v1_2a877 to i32*
  %v3_2a877 = load i32, i32* %v2_2a877, align 4
  store i32 %v3_2a877, i32* %eax.global-to-local, align 4
  %v1_2a87d = call i32 @unknown_490af(i32 %v3_2a877)
  store i32 %v1_2a87d, i32* %eax.global-to-local, align 4
  store i32 %v1_2a87d, i32* %esi.global-to-local, align 4
  %v0_2a884 = load i32, i32* @ebp, align 4
  %v1_2a884 = add i32 %v0_2a884, -32
  %v2_2a884 = inttoptr i32 %v1_2a884 to i32*
  %v3_2a884 = load i32, i32* %v2_2a884, align 4
  store i32 %v3_2a884, i32* %eax.global-to-local, align 4
  %v1_2a88a = call i32 @unknown_490af(i32 %v3_2a884)
  store i32 %v1_2a88a, i32* %eax.global-to-local, align 4
  store i32 %v1_2a88a, i32* %ebx.global-to-local, align 4
  %v0_2a891 = load i32, i32* @ebp, align 4
  %v1_2a891 = add i32 %v0_2a891, -28
  %v2_2a891 = inttoptr i32 %v1_2a891 to i32*
  %v3_2a891 = load i32, i32* %v2_2a891, align 4
  store i32 %v3_2a891, i32* %eax.global-to-local, align 4
  %v1_2a897 = call i32 @unknown_490af(i32 %v3_2a891)
  store i32 %v1_2a897, i32* %eax.global-to-local, align 4
  %v0_2a89c = load i32, i32* %esi.global-to-local, align 4
  %v0_2a8a0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2a8a7 = call i32 @unknown_554bd(i32 %v1_2a897, i32 %v0_2a8a0, i32 %v0_2a89c)
  store i32 %v3_2a8a7, i32* @eax, align 4
  %v0_2a8ac = load i32, i32* @ebp, align 4
  %v1_2a8ac = add i32 %v0_2a8ac, -12
  %v2_2a8ac = inttoptr i32 %v1_2a8ac to i32*
  %v3_2a8ac = load i32, i32* %v2_2a8ac, align 4
  %v1_2a8af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a8af = icmp eq i32 %v1_2a8af, %v3_2a8ac
  br i1 %v3_2a8af, label %bb, label %dec_label_pc_2a8b8

bb:                                               ; preds = %dec_label_pc_2a86a
  %v1_2a8b6 = call i32 @function_2a8bd()
  store i32 %v1_2a8b6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2a8b8

dec_label_pc_2a8b8:                               ; preds = %bb, %dec_label_pc_2a86a
  %v3_2a8b6 = phi i32 [ %v1_2a8b6, %bb ], [ %v3_2a8a7, %dec_label_pc_2a86a ]
  ret i32 %v3_2a8b6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_490af, { 2, 1, 0 }
}

define i32 @function_2a8bd() local_unnamed_addr {
dec_label_pc_2a8bd:
  %v0_2a8c3 = load i32, i32* @eax, align 4
  ret i32 %v0_2a8c3
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a8c4:
  ret i32 %arg1
}

define i32 @function_2a8e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a8e4:
  %v0_2a8e4 = load i32, i32* @ebp, align 4
  %v1_2a8e4 = add i32 %v0_2a8e4, -32
  %v2_2a8e4 = inttoptr i32 %v1_2a8e4 to i32*
  %v3_2a8e4 = load i32, i32* %v2_2a8e4, align 4
  %v0_2a8eb = load i32, i32* @eax, align 4
  %v2_2a8ee = call i32 @unknown_55582(i32 %v0_2a8eb, i32 %v3_2a8e4)
  %v0_2a8f6 = load i32, i32* @ebp, align 4
  %v1_2a8f6 = add i32 %v0_2a8f6, -28
  %v2_2a8f6 = inttoptr i32 %v1_2a8f6 to i32*
  %v3_2a8f6 = load i32, i32* %v2_2a8f6, align 4
  store i32 %v3_2a8f6, i32* @eax, align 4
  %v1_2a8f9 = add i32 %v0_2a8f6, -12
  %v2_2a8f9 = inttoptr i32 %v1_2a8f9 to i32*
  %v3_2a8f9 = load i32, i32* %v2_2a8f9, align 4
  %v1_2a8fc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a8fc = icmp eq i32 %v1_2a8fc, %v3_2a8f9
  br i1 %v3_2a8fc, label %bb, label %dec_label_pc_2a905

bb:                                               ; preds = %dec_label_pc_2a8e4
  %v1_2a903 = call i32 @function_2a90a()
  br label %dec_label_pc_2a905

dec_label_pc_2a905:                               ; preds = %bb, %dec_label_pc_2a8e4
  %v2_2a903 = phi i32 [ %v1_2a903, %bb ], [ %v3_2a8f6, %dec_label_pc_2a8e4 ]
  ret i32 %v2_2a903
}

define i32 @function_2a90a() local_unnamed_addr {
dec_label_pc_2a90a:
  %v0_2a90b = load i32, i32* @eax, align 4
  ret i32 %v0_2a90b
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET1_T0_SG_SF_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a90e:
  ret i32 %arg3
}

define i32 @function_2a926(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a926:
  %v0_2a926 = load i32, i32* @ebp, align 4
  %v1_2a926 = add i32 %v0_2a926, 1
  store i32 %v1_2a926, i32* @ebp, align 4
  %v15_2a926 = load i32, i32* @eax, align 4
  ret i32 %v15_2a926
}

define i32 @function_2a929(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a929:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_2a929 = load i32, i32* @ebp, align 4
  %v0_2a92a = load i32, i32* @eax, align 4
  %v1_2a92a = trunc i32 %v0_2a92a to i8
  %v2_2a92a = load i1, i1* @cf, align 1
  %v3_2a92a = zext i1 %v2_2a92a to i8
  %v4_2a92a = add i8 %v1_2a92a, ptrtoint (i8* @global_var_89.1818 to i8)
  %v5_2a92a = add i8 %v4_2a92a, %v3_2a92a
  %v20_2a92a = add i8 %v1_2a92a, -119
  %v21_2a92a = add i8 %v20_2a92a, %v3_2a92a
  %v22_2a92a = icmp ule i8 %v21_2a92a, %v1_2a92a
  %v23_2a92a = icmp ugt i8 %v1_2a92a, 118
  %v24_2a92a = select i1 %v2_2a92a, i1 %v22_2a92a, i1 %v23_2a92a
  %v25_2a92a = zext i8 %v5_2a92a to i32
  %v27_2a92a = and i32 %v0_2a92a, -256
  %v28_2a92a = or i32 %v25_2a92a, %v27_2a92a
  store i32 %v28_2a92a, i32* %eax.global-to-local, align 4
  %v1_2a92c = add i32 %v0_2a929, 2
  store i32 %v1_2a92c, i32* @ebp, align 4
  %v3_2a930 = zext i1 %v24_2a92a to i8
  %v4_2a930 = add i8 %v3_2a930, %v5_2a92a
  %v22_2a930 = zext i8 %v4_2a930 to i32
  %v25_2a930 = or i32 %v22_2a930, %v27_2a92a
  store i32 %v25_2a930, i32* %eax.global-to-local, align 4
  %v1_2a932 = inttoptr i32 %v25_2a930 to i8*
  %v2_2a932 = load i8, i8* %v1_2a932, align 1
  %v5_2a932 = add i8 %v2_2a932, %v4_2a930
  store i8 %v5_2a932, i8* %v1_2a932, align 1
  %v0_2a934 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a934 = load i32, i32* @ebp, align 4
  %v2_2a934 = add i32 %v1_2a934, -12
  %v3_2a934 = inttoptr i32 %v2_2a934 to i32*
  store i32 %v0_2a934, i32* %v3_2a934, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2a939 = load i32, i32* @ebp, align 4
  %v1_2a939 = add i32 %v0_2a939, -40
  %v2_2a939 = inttoptr i32 %v1_2a939 to i32*
  %v3_2a939 = load i32, i32* %v2_2a939, align 4
  store i32 %v3_2a939, i32* %eax.global-to-local, align 4
  %v1_2a93f = call i32 @unknown_5563e(i32 %v3_2a939)
  store i32 %v1_2a93f, i32* %eax.global-to-local, align 4
  store i32 %v1_2a93f, i32* %esi.global-to-local, align 4
  %v0_2a946 = load i32, i32* @ebp, align 4
  %v1_2a946 = add i32 %v0_2a946, -36
  %v2_2a946 = inttoptr i32 %v1_2a946 to i32*
  %v3_2a946 = load i32, i32* %v2_2a946, align 4
  store i32 %v3_2a946, i32* %eax.global-to-local, align 4
  %v1_2a94c = call i32 @unknown_55609(i32 %v3_2a946)
  store i32 %v1_2a94c, i32* %eax.global-to-local, align 4
  store i32 %v1_2a94c, i32* %ebx.global-to-local, align 4
  %v0_2a953 = load i32, i32* @ebp, align 4
  %v1_2a953 = add i32 %v0_2a953, -32
  %v2_2a953 = inttoptr i32 %v1_2a953 to i32*
  %v3_2a953 = load i32, i32* %v2_2a953, align 4
  store i32 %v3_2a953, i32* %eax.global-to-local, align 4
  %v1_2a959 = call i32 @unknown_55609(i32 %v3_2a953)
  store i32 %v1_2a959, i32* %eax.global-to-local, align 4
  %v0_2a95e = load i32, i32* %esi.global-to-local, align 4
  %v0_2a962 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2a969 = call i32 @unknown_55673(i32 %v1_2a959, i32 %v0_2a962, i32 %v0_2a95e)
  %v1_2a96e = load i32, i32* @ebp, align 4
  %v2_2a96e = add i32 %v1_2a96e, -16
  %v3_2a96e = inttoptr i32 %v2_2a96e to i32*
  store i32 %v3_2a969, i32* %v3_2a96e, align 4
  %v0_2a971 = load i32, i32* @ebp, align 4
  %v1_2a971 = add i32 %v0_2a971, -16
  store i32 %v1_2a971, i32* %eax.global-to-local, align 4
  %v1_2a978 = add i32 %v0_2a971, -28
  %v2_2a978 = inttoptr i32 %v1_2a978 to i32*
  %v3_2a978 = load i32, i32* %v2_2a978, align 4
  store i32 %v3_2a978, i32* %eax.global-to-local, align 4
  %v2_2a97e = call i32 @unknown_44ae8(i32 %v3_2a978, i32 %v1_2a971)
  store i32 %v2_2a97e, i32* %eax.global-to-local, align 4
  %v0_2a983 = load i32, i32* @ebp, align 4
  %v1_2a983 = add i32 %v0_2a983, -28
  %v2_2a983 = inttoptr i32 %v1_2a983 to i32*
  %v3_2a983 = load i32, i32* %v2_2a983, align 4
  store i32 %v3_2a983, i32* @eax, align 4
  %v1_2a986 = add i32 %v0_2a983, -12
  %v2_2a986 = inttoptr i32 %v1_2a986 to i32*
  %v3_2a986 = load i32, i32* %v2_2a986, align 4
  %v1_2a989 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a989 = icmp eq i32 %v1_2a989, %v3_2a986
  br i1 %v3_2a989, label %bb, label %dec_label_pc_2a992

bb:                                               ; preds = %dec_label_pc_2a929
  %v1_2a990 = call i32 @function_2a997()
  store i32 %v1_2a990, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2a992

dec_label_pc_2a992:                               ; preds = %bb, %dec_label_pc_2a929
  %v2_2a990 = phi i32 [ %v1_2a990, %bb ], [ %v3_2a983, %dec_label_pc_2a929 ]
  ret i32 %v2_2a990

; uselistorder directives
  uselistorder i32 (i32)* @unknown_55609, { 1, 0 }
  uselistorder i32 -40, { 28, 13, 14, 59, 60, 61, 62, 63, 5, 6, 7, 8, 29, 30, 31, 18, 25, 26, 27, 34, 55, 35, 36, 37, 38, 23, 24, 22, 39, 40, 41, 33, 9, 10, 11, 12, 32, 48, 49, 50, 52, 53, 42, 43, 44, 45, 51, 46, 54, 47, 19, 20, 15, 16, 57, 58, 17, 21, 1, 0, 2, 3, 56, 4 }
  uselistorder i8 -119, { 3, 0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 6, 7, 4, 5, 19, 20, 17, 23, 18, 21, 22 }
}

define i32 @function_2a997() local_unnamed_addr {
dec_label_pc_2a997:
  %v0_2a99d = load i32, i32* @eax, align 4
  ret i32 %v0_2a99d
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a9a0:
  ret i32 %arg1
}

define i32 @function_2a9c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9c8:
  %v0_2a9ca = call i32 @unknown_55758()
  %v0_2a9cf = load i32, i32* @ebp, align 4
  %v1_2a9cf = add i32 %v0_2a9cf, -12
  %v2_2a9cf = inttoptr i32 %v1_2a9cf to i32*
  %v3_2a9cf = load i32, i32* %v2_2a9cf, align 4
  %v1_2a9d2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a9d2 = xor i32 %v1_2a9d2, %v3_2a9cf
  %v3_2a9d2 = icmp eq i32 %v2_2a9d2, 0
  store i32 %v2_2a9d2, i32* @eax, align 4
  br i1 %v3_2a9d2, label %bb, label %dec_label_pc_2a9db

bb:                                               ; preds = %dec_label_pc_2a9c8
  %v1_2a9d9 = call i32 @function_2a9e0()
  br label %dec_label_pc_2a9db

dec_label_pc_2a9db:                               ; preds = %bb, %dec_label_pc_2a9c8
  %v2_2a9d9 = phi i32 [ %v1_2a9d9, %bb ], [ %v2_2a9d2, %dec_label_pc_2a9c8 ]
  ret i32 %v2_2a9d9
}

define i32 @function_2a9e0() local_unnamed_addr {
dec_label_pc_2a9e0:
  %v0_2a9e1 = load i32, i32* @eax, align 4
  ret i32 %v0_2a9e1
}

define i32 @_ZSt14__copy_move_a2ILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9e2:
  ret i32 %arg1
}

define i32 @function_2a9ed(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9ed:
  %v0_2a9ed = load i32, i32* @eax, align 4
  %v1_2a9ed = load i32, i32* @ebp, align 4
  %v2_2a9ed = add i32 %v1_2a9ed, -28
  %v3_2a9ed = inttoptr i32 %v2_2a9ed to i32*
  store i32 %v0_2a9ed, i32* %v3_2a9ed, align 4
  %v0_2a9f0 = load i32, i32* @ebp, align 4
  %v1_2a9f0 = add i32 %v0_2a9f0, 12
  %v2_2a9f0 = inttoptr i32 %v1_2a9f0 to i32*
  %v3_2a9f0 = load i32, i32* %v2_2a9f0, align 4
  %v2_2a9f3 = add i32 %v0_2a9f0, -32
  %v3_2a9f3 = inttoptr i32 %v2_2a9f3 to i32*
  store i32 %v3_2a9f0, i32* %v3_2a9f3, align 4
  %v0_2a9f6 = load i32, i32* @ebp, align 4
  %v1_2a9f6 = add i32 %v0_2a9f6, 16
  %v2_2a9f6 = inttoptr i32 %v1_2a9f6 to i32*
  %v3_2a9f6 = load i32, i32* %v2_2a9f6, align 4
  %v2_2a9f9 = add i32 %v0_2a9f6, -36
  %v3_2a9f9 = inttoptr i32 %v2_2a9f9 to i32*
  store i32 %v3_2a9f6, i32* %v3_2a9f9, align 4
  %v0_2a9fc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2aa02 = load i32, i32* @ebp, align 4
  %v2_2aa02 = add i32 %v1_2aa02, -12
  %v3_2aa02 = inttoptr i32 %v2_2aa02 to i32*
  store i32 %v0_2a9fc, i32* %v3_2aa02, align 4
  %v0_2aa07 = load i32, i32* @ebp, align 4
  %v1_2aa07 = add i32 %v0_2aa07, -36
  %v2_2aa07 = inttoptr i32 %v1_2aa07 to i32*
  %v3_2aa07 = load i32, i32* %v2_2aa07, align 4
  %v1_2aa0d = call i32 @unknown_494bf(i32 %v3_2aa07)
  store i32 %v1_2aa0d, i32* @esi, align 4
  %v0_2aa14 = load i32, i32* @ebp, align 4
  %v1_2aa14 = add i32 %v0_2aa14, -32
  %v2_2aa14 = inttoptr i32 %v1_2aa14 to i32*
  %v3_2aa14 = load i32, i32* %v2_2aa14, align 4
  ret i32 %v3_2aa14
}

define i32 @function_2aa1a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aa1a:
  %v1_2aa1a = call i32 @unknown_494bf(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_2aa1a, i32* @ebx, align 4
  %v0_2aa21 = load i32, i32* @ebp, align 4
  %v1_2aa21 = add i32 %v0_2aa21, -28
  %v2_2aa21 = inttoptr i32 %v1_2aa21 to i32*
  %v3_2aa21 = load i32, i32* %v2_2aa21, align 4
  %v1_2aa27 = call i32 @unknown_494bf(i32 %v3_2aa21)
  %v0_2aa2c = load i32, i32* @esi, align 4
  %v0_2aa30 = load i32, i32* @ebx, align 4
  %v3_2aa37 = call i32 @unknown_55808(i32 %v1_2aa27, i32 %v0_2aa30, i32 %v0_2aa2c)
  store i32 %v3_2aa37, i32* @eax, align 4
  %v0_2aa3c = load i32, i32* @ebp, align 4
  %v1_2aa3c = add i32 %v0_2aa3c, -12
  %v2_2aa3c = inttoptr i32 %v1_2aa3c to i32*
  %v3_2aa3c = load i32, i32* %v2_2aa3c, align 4
  %v1_2aa3f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2aa3f = icmp eq i32 %v1_2aa3f, %v3_2aa3c
  br i1 %v3_2aa3f, label %bb, label %dec_label_pc_2aa48

bb:                                               ; preds = %dec_label_pc_2aa1a
  %v1_2aa46 = call i32 @function_2aa4d()
  br label %dec_label_pc_2aa48

dec_label_pc_2aa48:                               ; preds = %bb, %dec_label_pc_2aa1a
  %v3_2aa46 = phi i32 [ %v1_2aa46, %bb ], [ %v3_2aa37, %dec_label_pc_2aa1a ]
  ret i32 %v3_2aa46

; uselistorder directives
  uselistorder i32* @esi, { 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 16, 17, 1, 3, 4, 14, 15, 18, 2 }
  uselistorder i32 (i32)* @unknown_494bf, { 2, 1, 0 }
}

define i32 @function_2aa4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aa4c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2aa4d() local_unnamed_addr {
dec_label_pc_2aa4d:
  %v0_2aa53 = load i32, i32* @eax, align 4
  ret i32 %v0_2aa53
}

define i32 @_Z14Serialize_implI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2aa54:
  %v1_2aa8a = call i32 @unknown_3b014(i32 %arg2)
  ret i32 %v1_2aa8a
}

define i32 @function_2aa8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aa8f:
  %v0_2aa94 = load i32, i32* @eax, align 4
  %v0_2aa9c = load i32, i32* @ebp, align 4
  %v1_2aa9c = add i32 %v0_2aa9c, -28
  %v2_2aa9c = inttoptr i32 %v1_2aa9c to i32*
  %v3_2aa9c = load i32, i32* %v2_2aa9c, align 4
  %v3_2aaa2 = call i32 @unknown_4d30d(i32 %v3_2aa9c, i32 %v0_2aa94, i32 0)
  %v0_2aaa7 = load i32, i32* @ebp, align 4
  %v1_2aaa7 = add i32 %v0_2aaa7, -32
  %v2_2aaa7 = inttoptr i32 %v1_2aaa7 to i32*
  %v3_2aaa7 = load i32, i32* %v2_2aaa7, align 4
  %v1_2aaad = call i32 @unknown_3c3ca(i32 %v3_2aaa7)
  %v0_2aab9 = load i32, i32* @ebp, align 4
  %v1_2aab9 = add i32 %v0_2aab9, -32
  %v2_2aab9 = inttoptr i32 %v1_2aab9 to i32*
  %v3_2aab9 = load i32, i32* %v2_2aab9, align 4
  %v1_2aabf = call i32 @unknown_3b014(i32 %v3_2aab9)
  ret i32 %v1_2aabf
}

define i32 @function_2aacd(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aacd:
  %eax.global-to-local = alloca i32, align 4
  %v0_2aacd = load i32, i32* @ebx, align 4
  %v1_2aacd = add i32 %v0_2aacd, 76144709
  %v2_2aacd = inttoptr i32 %v1_2aacd to i8*
  %v3_2aacd = load i8, i8* %v2_2aacd, align 1
  %v4_2aacd = load i32, i32* @ecx, align 4
  %v5_2aacd = trunc i32 %v4_2aacd to i8
  %v6_2aacd = add i8 %v5_2aacd, %v3_2aacd
  store i8 %v6_2aacd, i8* %v2_2aacd, align 1
  %v0_2aad3 = load i32, i32* @eax, align 4
  %v1_2aad3 = trunc i32 %v0_2aad3 to i8
  %v2_2aad3 = and i8 %v1_2aad3, -24
  %v4_2aad3 = icmp slt i8 %v2_2aad3, 0
  %v8_2aad3 = zext i8 %v2_2aad3 to i32
  %v10_2aad3 = and i32 %v0_2aad3, -256
  %v11_2aad3 = or i32 %v8_2aad3, %v10_2aad3
  store i32 %v11_2aad3, i32* %eax.global-to-local, align 4
  %v1_2aad5 = icmp eq i1 %v4_2aad3, false
  br i1 %v1_2aad5, label %dec_label_pc_2aadc, label %dec_label_pc_2aad7

dec_label_pc_2aad7:                               ; preds = %dec_label_pc_2aacd
  %v1_2aad7 = inttoptr i32 %v11_2aad3 to i32*
  %v2_2aad7 = load i32, i32* %v1_2aad7, align 8
  %v4_2aad7 = add i32 %v2_2aad7, %v11_2aad3
  store i32 %v4_2aad7, i32* %v1_2aad7, align 8
  %v22_2aad7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_2aad7

dec_label_pc_2aadc:                               ; preds = %dec_label_pc_2aacd
  %v0_2aadc = load i32, i32* @ecx, align 4
  %v1_2aadc = add i32 %v0_2aadc, -1962662844
  %v2_2aadc = inttoptr i32 %v1_2aadc to i8*
  %v3_2aadc = load i8, i8* %v2_2aadc, align 1
  %v5_2aadc = trunc i32 %v0_2aadc to i8
  %v6_2aadc = or i8 %v3_2aadc, %v5_2aadc
  store i8 %v6_2aadc, i8* %v2_2aadc, align 1
  %v0_2aae2 = load i32, i32* @ebp, align 4
  %v1_2aae2 = add i32 %v0_2aae2, 1
  store i32 %v1_2aae2, i32* @ebp, align 4
  %v0_2aae5 = load i32, i32* %eax.global-to-local, align 4
  %v2_2aae5 = add i32 %v0_2aae5, 36
  %v16_2aae5 = and i32 %v2_2aae5, 255
  %v18_2aae5 = and i32 %v0_2aae5, -256
  %v19_2aae5 = or i32 %v16_2aae5, %v18_2aae5
  store i32 %v19_2aae5, i32* %eax.global-to-local, align 4
  %v0_2aae7 = call i32 @unknown_38598()
  store i32 %v0_2aae7, i32* %eax.global-to-local, align 4
  %v0_2aaec = load i32, i32* @ebp, align 4
  %v1_2aaec = add i32 %v0_2aaec, -12
  %v2_2aaec = inttoptr i32 %v1_2aaec to i32*
  %v3_2aaec = load i32, i32* %v2_2aaec, align 4
  store i32 %v3_2aaec, i32* %eax.global-to-local, align 4
  %v1_2aaef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2aaef = xor i32 %v1_2aaef, %v3_2aaec
  %v3_2aaef = icmp eq i32 %v2_2aaef, 0
  store i32 %v2_2aaef, i32* @eax, align 4
  br i1 %v3_2aaef, label %bb, label %dec_label_pc_2aaf8

bb:                                               ; preds = %dec_label_pc_2aadc
  %v1_2aaf6 = call i32 @function_2aafd()
  store i32 %v1_2aaf6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2aaf8

dec_label_pc_2aaf8:                               ; preds = %bb, %dec_label_pc_2aadc
  %v2_2aaf6 = phi i32 [ %v1_2aaf6, %bb ], [ %v2_2aaef, %dec_label_pc_2aadc ]
  ret i32 %v2_2aaf6

; uselistorder directives
  uselistorder i32 %v0_2aae5, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 36, { 0, 10, 11, 12, 9, 5, 1, 18, 4, 6, 7, 8, 2, 17, 13, 14, 15, 16, 3 }
  uselistorder i32 -1962662844, { 1, 0 }
  uselistorder i8 -24, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 76144709, { 3, 4, 0, 1, 2 }
}

define i32 @function_2aafd() local_unnamed_addr {
dec_label_pc_2aafd:
  %v0_2ab02 = load i32, i32* @eax, align 4
  ret i32 %v0_2ab02
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb0EE7_S_baseESC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ab03:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ab37

bb:                                               ; preds = %dec_label_pc_2ab03
  %v3_2ab35 = call i32 @function_2ab3c(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2ab37

dec_label_pc_2ab37:                               ; preds = %bb, %dec_label_pc_2ab03
  %v4_2ab35 = phi i32 [ %v3_2ab35, %bb ], [ %tmp102, %dec_label_pc_2ab03 ]
  ret i32 %v4_2ab35
}

define i32 @function_2ab3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ab3c:
  %v0_2ab3d = load i32, i32* @eax, align 4
  ret i32 %v0_2ab3d
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ab40:
  ret i32 %arg1
}

define i32 @function_2ab4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ab4a:
  %v0_2ab4a = load i32, i32* @ebp, align 4
  %v1_2ab4a = add i32 %v0_2ab4a, 1
  store i32 %v1_2ab4a, i32* @ebp, align 4
  %v0_2ab4d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ab52 = add i32 %v0_2ab4a, -11
  %v3_2ab52 = inttoptr i32 %v2_2ab52 to i32*
  store i32 %v0_2ab4d, i32* %v3_2ab52, align 4
  %v0_2ab57 = load i32, i32* @ebp, align 4
  %v1_2ab57 = add i32 %v0_2ab57, -28
  %v2_2ab57 = inttoptr i32 %v1_2ab57 to i32*
  %v3_2ab57 = load i32, i32* %v2_2ab57, align 4
  %v1_2ab5d = call i32 @unknown_559b9(i32 %v3_2ab57)
  store i32 %v1_2ab5d, i32* @eax, align 4
  %v0_2ab62 = load i32, i32* @ebp, align 4
  %v1_2ab62 = add i32 %v0_2ab62, -12
  %v2_2ab62 = inttoptr i32 %v1_2ab62 to i32*
  %v3_2ab62 = load i32, i32* %v2_2ab62, align 4
  %v1_2ab65 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ab65 = icmp eq i32 %v1_2ab65, %v3_2ab62
  br i1 %v3_2ab65, label %bb, label %dec_label_pc_2ab6e

bb:                                               ; preds = %dec_label_pc_2ab4a
  %v1_2ab6c = call i32 @function_2ab73()
  br label %dec_label_pc_2ab6e

dec_label_pc_2ab6e:                               ; preds = %bb, %dec_label_pc_2ab4a
  %v3_2ab6c = phi i32 [ %v1_2ab6c, %bb ], [ %v1_2ab5d, %dec_label_pc_2ab4a ]
  ret i32 %v3_2ab6c
}

define i32 @function_2ab73() local_unnamed_addr {
dec_label_pc_2ab73:
  %v0_2ab74 = load i32, i32* @eax, align 4
  ret i32 %v0_2ab74
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ab75:
  %v1_2ab92 = call i32 @unknown_55a25(i32 %arg1)
  store i32 %v1_2ab92, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2aba3

bb:                                               ; preds = %dec_label_pc_2ab75
  %v1_2aba1 = call i32 @function_2aba8()
  br label %dec_label_pc_2aba3

dec_label_pc_2aba3:                               ; preds = %bb, %dec_label_pc_2ab75
  %v2_2aba1 = phi i32 [ %v1_2aba1, %bb ], [ %v1_2ab92, %dec_label_pc_2ab75 ]
  ret i32 %v2_2aba1
}

define i32 @function_2aba8() local_unnamed_addr {
dec_label_pc_2aba8:
  %v0_2aba9 = load i32, i32* @eax, align 4
  ret i32 %v0_2aba9
}

define i32 @_ZSt13__copy_move_aILb0EPKN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEPS4_ET1_T0_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2abaa:
  %v3_2abe5 = call i32 @unknown_55a91(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2abe5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2abf6

bb:                                               ; preds = %dec_label_pc_2abaa
  %v1_2abf4 = call i32 @function_2abfb()
  br label %dec_label_pc_2abf6

dec_label_pc_2abf6:                               ; preds = %bb, %dec_label_pc_2abaa
  %v2_2abf4 = phi i32 [ %v1_2abf4, %bb ], [ %v3_2abe5, %dec_label_pc_2abaa ]
  ret i32 %v2_2abf4
}

define i32 @function_2abfb() local_unnamed_addr {
dec_label_pc_2abfb:
  %v0_2abfc = load i32, i32* @eax, align 4
  ret i32 %v0_2abfc
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEEEvT_SE_() local_unnamed_addr {
dec_label_pc_2abfd:
  %eax.global-to-local = alloca i32, align 4
  %v17_2ac00 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2ac00
}

define i32 @function_2ac05(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ac05:
  %v0_2ac05 = load i32, i32* @ecx, align 4
  %v1_2ac05 = add i32 %v0_2ac05, 1166795845
  %v2_2ac05 = inttoptr i32 %v1_2ac05 to i8*
  %v3_2ac05 = load i8, i8* %v2_2ac05, align 1
  %v5_2ac05 = trunc i32 %v0_2ac05 to i8
  %v6_2ac05 = or i8 %v3_2ac05, %v5_2ac05
  store i8 %v6_2ac05, i8* %v2_2ac05, align 1
  %v0_2ac0d = load i32, i32* @ebp, align 4
  %v1_2ac0d = add i32 %v0_2ac0d, 1
  store i32 %v1_2ac0d, i32* @ebp, align 4
  %v0_2ac10 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ac15 = add i32 %v0_2ac0d, -11
  %v3_2ac15 = inttoptr i32 %v2_2ac15 to i32*
  store i32 %v0_2ac10, i32* %v3_2ac15, align 4
  %v0_2ac424 = load i32, i32* @ebp, align 4
  %v1_2ac425 = add i32 %v0_2ac424, -32
  %v1_2ac496 = add i32 %v0_2ac424, -28
  %v2_2ac4f7 = call i32 @unknown_55b60(i32 %v1_2ac496, i32 %v1_2ac425)
  %v4_2ac548 = trunc i32 %v2_2ac4f7 to i8
  %v5_2ac549 = icmp eq i8 %v4_2ac548, 0
  %v1_2ac5610 = icmp eq i1 %v5_2ac549, false
  %v0_2ac1c11 = load i32, i32* @ebp, align 4
  br i1 %v1_2ac5610, label %dec_label_pc_2ac1c, label %dec_label_pc_2ac58

dec_label_pc_2ac1c:                               ; preds = %dec_label_pc_2ac05, %dec_label_pc_2ac1c
  %v0_2ac1c12 = phi i32 [ %v0_2ac1c, %dec_label_pc_2ac1c ], [ %v0_2ac1c11, %dec_label_pc_2ac05 ]
  %v1_2ac1c = add i32 %v0_2ac1c12, -28
  %v1_2ac22 = call i32 @unknown_4443d(i32 %v1_2ac1c)
  %v1_2ac2a = call i32 @unknown_48d1f(i32 %v1_2ac22)
  %v1_2ac32 = call i32 @unknown_48d4c(i32 %v1_2ac2a)
  %v0_2ac37 = load i32, i32* @ebp, align 4
  %v1_2ac37 = add i32 %v0_2ac37, -28
  %v1_2ac3d = call i32 @unknown_55bb5(i32 %v1_2ac37)
  %v0_2ac42 = load i32, i32* @ebp, align 4
  %v1_2ac42 = add i32 %v0_2ac42, -32
  %v1_2ac49 = add i32 %v0_2ac42, -28
  %v2_2ac4f = call i32 @unknown_55b60(i32 %v1_2ac49, i32 %v1_2ac42)
  %v4_2ac54 = trunc i32 %v2_2ac4f to i8
  %v5_2ac54 = icmp eq i8 %v4_2ac54, 0
  %v1_2ac56 = icmp eq i1 %v5_2ac54, false
  %v0_2ac1c = load i32, i32* @ebp, align 4
  br i1 %v1_2ac56, label %dec_label_pc_2ac1c, label %dec_label_pc_2ac58

dec_label_pc_2ac58:                               ; preds = %dec_label_pc_2ac1c, %dec_label_pc_2ac05
  %v0_2ac1c.lcssa = phi i32 [ %v0_2ac1c11, %dec_label_pc_2ac05 ], [ %v0_2ac1c, %dec_label_pc_2ac1c ]
  %v1_2ac58 = add i32 %v0_2ac1c.lcssa, -12
  %v2_2ac58 = inttoptr i32 %v1_2ac58 to i32*
  %v3_2ac58 = load i32, i32* %v2_2ac58, align 4
  %v1_2ac5b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ac5b = xor i32 %v1_2ac5b, %v3_2ac58
  %v3_2ac5b = icmp eq i32 %v2_2ac5b, 0
  store i32 %v2_2ac5b, i32* @eax, align 4
  br i1 %v3_2ac5b, label %bb, label %dec_label_pc_2ac64

bb:                                               ; preds = %dec_label_pc_2ac58
  %v1_2ac62 = call i32 @function_2ac69()
  br label %dec_label_pc_2ac64

dec_label_pc_2ac64:                               ; preds = %bb, %dec_label_pc_2ac58
  %v2_2ac62 = phi i32 [ %v1_2ac62, %bb ], [ %v2_2ac5b, %dec_label_pc_2ac58 ]
  ret i32 %v2_2ac62

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_55b60, { 1, 0 }
  uselistorder i32 -11, { 3, 4, 5, 0, 1, 6, 2 }
  uselistorder i32 1166795845, { 7, 1, 9, 2, 0, 8, 4, 5, 6, 3 }
  uselistorder label %dec_label_pc_2ac1c, { 1, 0 }
}

define i32 @function_2ac69() local_unnamed_addr {
dec_label_pc_2ac69:
  %v0_2ac6a = load i32, i32* @eax, align 4
  ret i32 %v0_2ac6a
}

define i32 @_ZSt13__copy_move_aILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ac6b:
  ret i32 %arg1
}

define x86_fp80 @function_2ac94(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ac94:
  %v1_2ac94 = load i32, i32* @ecx, align 4
  %v2_2ac94 = add i32 %v1_2ac94, -1962400700
  %v3_2ac94 = inttoptr i32 %v2_2ac94 to double*
  %v4_2ac94 = load double, double* %v3_2ac94, align 4
  %v5_2ac94 = fpext double %v4_2ac94 to x86_fp80
  %v6_2ac94 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_2ac94 = fmul x86_fp80 %v5_2ac94, %v6_2ac94
  ret x86_fp80 %v7_2ac94

; uselistorder directives
  uselistorder x86_fp80* @st0, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
}

define i32 @function_2ac9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ac9a:
  %v0_2ac9a = load i32, i32* @ebp, align 4
  %v1_2ac9a = add i32 %v0_2ac9a, 1
  store i32 %v1_2ac9a, i32* @ebp, align 4
  %v1_2aca0 = add i32 %v0_2ac9a, -27
  %v2_2aca0 = inttoptr i32 %v1_2aca0 to i32*
  %v3_2aca0 = load i32, i32* %v2_2aca0, align 4
  %v1_2aca6 = call i32 @unknown_55c5d(i32 %v3_2aca0)
  store i32 %v1_2aca6, i32* @eax, align 4
  %v0_2acab = load i32, i32* @ebp, align 4
  %v1_2acab = add i32 %v0_2acab, -12
  %v2_2acab = inttoptr i32 %v1_2acab to i32*
  %v3_2acab = load i32, i32* %v2_2acab, align 4
  %v1_2acae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2acae = icmp eq i32 %v1_2acae, %v3_2acab
  br i1 %v3_2acae, label %bb, label %dec_label_pc_2acb7

bb:                                               ; preds = %dec_label_pc_2ac9a
  %v1_2acb5 = call i32 @function_2acbc()
  br label %dec_label_pc_2acb7

dec_label_pc_2acb7:                               ; preds = %bb, %dec_label_pc_2ac9a
  %v3_2acb5 = phi i32 [ %v1_2acb5, %bb ], [ %v1_2aca6, %dec_label_pc_2ac9a ]
  ret i32 %v3_2acb5
}

define i32 @function_2acbc() local_unnamed_addr {
dec_label_pc_2acbc:
  %v0_2acbd = load i32, i32* @eax, align 4
  ret i32 %v0_2acbd
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb0EE7_S_baseESC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2acbe:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2acf2

bb:                                               ; preds = %dec_label_pc_2acbe
  %v3_2acf0 = call i32 @function_2acf7(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2acf2

dec_label_pc_2acf2:                               ; preds = %bb, %dec_label_pc_2acbe
  %v4_2acf0 = phi i32 [ %v3_2acf0, %bb ], [ %tmp102, %dec_label_pc_2acbe ]
  ret i32 %v4_2acf0
}

define i32 @function_2acf7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2acf7:
  %v0_2acf8 = load i32, i32* @eax, align 4
  ret i32 %v0_2acf8
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2acfb:
  ret i32 %arg1
}

define i32 @function_2ad0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad0c:
  %v0_2ad0c = load i32, i32* @ecx, align 4
  %v1_2ad0c = add i32 %v0_2ad0c, -1070468027
  %v2_2ad0c = inttoptr i32 %v1_2ad0c to i8*
  %v3_2ad0c = load i8, i8* %v2_2ad0c, align 1
  %v5_2ad0c = trunc i32 %v0_2ad0c to i8
  %v6_2ad0c = add i8 %v3_2ad0c, %v5_2ad0c
  store i8 %v6_2ad0c, i8* %v2_2ad0c, align 1
  %v0_2ad12 = load i32, i32* @ebp, align 4
  %v1_2ad12 = add i32 %v0_2ad12, -28
  %v2_2ad12 = inttoptr i32 %v1_2ad12 to i32*
  %v3_2ad12 = load i32, i32* %v2_2ad12, align 4
  %v1_2ad18 = call i32 @unknown_55d69(i32 %v3_2ad12)
  store i32 %v1_2ad18, i32* @eax, align 4
  %v0_2ad1d = load i32, i32* @ebp, align 4
  %v1_2ad1d = add i32 %v0_2ad1d, -12
  %v2_2ad1d = inttoptr i32 %v1_2ad1d to i32*
  %v3_2ad1d = load i32, i32* %v2_2ad1d, align 4
  %v1_2ad20 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ad20 = icmp eq i32 %v1_2ad20, %v3_2ad1d
  br i1 %v3_2ad20, label %bb, label %dec_label_pc_2ad29

bb:                                               ; preds = %dec_label_pc_2ad0c
  %v1_2ad27 = call i32 @function_2ad2e()
  br label %dec_label_pc_2ad29

dec_label_pc_2ad29:                               ; preds = %bb, %dec_label_pc_2ad0c
  %v2_2ad27 = phi i32 [ %v1_2ad27, %bb ], [ %v1_2ad18, %dec_label_pc_2ad0c ]
  ret i32 %v2_2ad27

; uselistorder directives
  uselistorder i32 -1070468027, { 0, 4, 5, 1, 2, 3 }
}

define i32 @function_2ad2e() local_unnamed_addr {
dec_label_pc_2ad2e:
  %v0_2ad2f = load i32, i32* @eax, align 4
  ret i32 %v0_2ad2f
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad30:
  %v1_2ad4d = call i32 @unknown_55dd5(i32 %arg1)
  store i32 %v1_2ad4d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ad5e

bb:                                               ; preds = %dec_label_pc_2ad30
  %v1_2ad5c = call i32 @function_2ad63()
  br label %dec_label_pc_2ad5e

dec_label_pc_2ad5e:                               ; preds = %bb, %dec_label_pc_2ad30
  %v2_2ad5c = phi i32 [ %v1_2ad5c, %bb ], [ %v1_2ad4d, %dec_label_pc_2ad30 ]
  ret i32 %v2_2ad5c
}

define i32 @function_2ad63() local_unnamed_addr {
dec_label_pc_2ad63:
  %v4_2ad63 = load i32, i32* @eax, align 4
  ret i32 %v4_2ad63
}

define i32 @function_2ad64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ad64:
  %v0_2ad64 = load i32, i32* @eax, align 4
  ret i32 %v0_2ad64
}

define i32 @_ZSt13__copy_move_aILb0EPKN11json_spirit10Value_implINS0_13Config_vectorISsEEEEPS4_ET1_T0_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ad65:
  %v3_2ada0 = call i32 @unknown_55e41(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_2ada0
}

define i32 @function_2adae(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2adae:
  %v0_2adae = load i32, i32* @ebp, align 4
  %v1_2adae = load i32, i32* @eax, align 4
  %v3_2adae = add i32 %v0_2adae, -24
  %v4_2adae = add i32 %v3_2adae, %v1_2adae
  %v5_2adae = inttoptr i32 %v4_2adae to i8*
  %v6_2adae = load i8, i8* %v5_2adae, align 1
  %v7_2adae = load i32, i32* @edx, align 8
  %v8_2adae = udiv i32 %v7_2adae, 256
  %v9_2adae = trunc i32 %v8_2adae to i8
  %v10_2adae = add i8 %v9_2adae, %v6_2adae
  store i8 %v10_2adae, i8* %v5_2adae, align 1
  %v31_2adae = load i32, i32* @eax, align 4
  ret i32 %v31_2adae
}

define i32 @function_2adb5() local_unnamed_addr {
dec_label_pc_2adb5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2adb5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2adb5 = add i32 %v0_2adb5, -1
  store i32 %v1_2adb5, i32* %ecx.global-to-local, align 4
  %v0_2adb7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2adb7
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEEEvT_SE_() local_unnamed_addr {
dec_label_pc_2adb8:
  %eax.global-to-local = alloca i32, align 4
  %v2_2adb9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2adb9
}

define i32 @function_2adbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2adbc:
  %v4_2adbd = load i32, i32* @ecx, align 4
  %v0_2adc5 = load i32, i32* @ebp, align 4
  %v1_2adc8 = add i32 %v0_2adc5, 2
  store i32 %v1_2adc8, i32* @ebp, align 4
  %v1_2adc9 = add i32 %v4_2adbd, -1
  store i32 %v1_2adc9, i32* @ecx, align 4
  %v0_2adcb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2add0 = add i32 %v0_2adc5, -10
  %v3_2add0 = inttoptr i32 %v2_2add0 to i32*
  store i32 %v0_2adcb, i32* %v3_2add0, align 4
  %v0_2add5 = call i32 @function_2adfd()
  ret i32 %v0_2add5
}

define i32 @function_2add7() local_unnamed_addr {
dec_label_pc_2add7:
  %v0_2add7 = load i32, i32* @ebp, align 4
  %v1_2add7 = add i32 %v0_2add7, -28
  %v1_2addd = call i32 @unknown_44cf8(i32 %v1_2add7)
  ret i32 %v1_2addd
}

define i32 @function_2ade9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ade9:
  %v0_2ade9 = load i32, i32* @ecx, align 4
  %v1_2ade9 = add i32 %v0_2ade9, 1105732612
  %v2_2ade9 = inttoptr i32 %v1_2ade9 to i8*
  %v3_2ade9 = load i8, i8* %v2_2ade9, align 1
  %v5_2ade9 = trunc i32 %v0_2ade9 to i8
  %v6_2ade9 = add i8 %v3_2ade9, %v5_2ade9
  store i8 %v6_2ade9, i8* %v2_2ade9, align 1
  %v0_2adef = call i32 @function_458d0001()
  ret i32 %v0_2adef
}

define i32 @function_2adfd() local_unnamed_addr {
dec_label_pc_2adfd:
  %v0_2adfd = load i32, i32* @ebp, align 4
  %v1_2adfd = add i32 %v0_2adfd, -32
  %v1_2ae04 = add i32 %v0_2adfd, -28
  %v2_2ae0a = call i32 @unknown_55f10(i32 %v1_2ae04, i32 %v1_2adfd)
  %v4_2ae0f = trunc i32 %v2_2ae0a to i8
  %v5_2ae0f = icmp eq i8 %v4_2ae0f, 0
  %v1_2ae11 = icmp eq i1 %v5_2ae0f, false
  br i1 %v1_2ae11, label %bb, label %dec_label_pc_2ae13

bb:                                               ; preds = %dec_label_pc_2adfd
  %v2_2ae11 = call i32 @function_2add7()
  br label %dec_label_pc_2ae13

dec_label_pc_2ae13:                               ; preds = %bb, %dec_label_pc_2adfd
  %v0_2ae13 = load i32, i32* @ebp, align 4
  %v1_2ae13 = add i32 %v0_2ae13, -12
  %v2_2ae13 = inttoptr i32 %v1_2ae13 to i32*
  %v3_2ae13 = load i32, i32* %v2_2ae13, align 4
  %v1_2ae16 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ae16 = xor i32 %v1_2ae16, %v3_2ae13
  %v3_2ae16 = icmp eq i32 %v2_2ae16, 0
  store i32 %v2_2ae16, i32* @eax, align 4
  br i1 %v3_2ae16, label %bb4, label %dec_label_pc_2ae1f

bb4:                                              ; preds = %dec_label_pc_2ae13
  %v1_2ae1d = call i32 @function_2ae24()
  br label %dec_label_pc_2ae1f

dec_label_pc_2ae1f:                               ; preds = %bb4, %dec_label_pc_2ae13
  %v2_2ae1d = phi i32 [ %v1_2ae1d, %bb4 ], [ %v2_2ae16, %dec_label_pc_2ae13 ]
  ret i32 %v2_2ae1d
}

define i32 @function_2ae24() local_unnamed_addr {
dec_label_pc_2ae24:
  %v0_2ae25 = load i32, i32* @eax, align 4
  ret i32 %v0_2ae25
}

define i32 @_ZSt13__copy_move_aILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ae26:
  ret i32 %arg1
}

define i32 @function_2ae76() local_unnamed_addr {
dec_label_pc_2ae76:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ae76 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ae76 = add i32 %v0_2ae76, -1
  store i32 %v1_2ae76, i32* %ecx.global-to-local, align 4
  %v0_2ae78 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ae78
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESC_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ae79:
  %stack_var_-32 = alloca i32, align 4
  %v2_2ae90 = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_2ae90
}

define i32 @function_2ae9a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ae9a:
  %v0_2ae9a = load i32, i32* @ebx, align 4
  %v1_2ae9a = add i32 %v0_2ae9a, -195720448
  %v2_2ae9a = inttoptr i32 %v1_2ae9a to i8*
  %v3_2ae9a = load i8, i8* %v2_2ae9a, align 1
  %v4_2ae9a = load i32, i32* @ecx, align 4
  %v5_2ae9a = trunc i32 %v4_2ae9a to i8
  %v6_2ae9a = add i8 %v5_2ae9a, %v3_2ae9a
  store i8 %v6_2ae9a, i8* %v2_2ae9a, align 1
  %v0_2aea0 = load i32, i32* @edx, align 8
  %v1_2aea0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2aea0 = icmp eq i32 %v1_2aea0, %v0_2aea0
  br i1 %v3_2aea0, label %bb, label %dec_label_pc_2ae9a.dec_label_pc_2aea9_crit_edge

dec_label_pc_2ae9a.dec_label_pc_2aea9_crit_edge:  ; preds = %dec_label_pc_2ae9a
  %v2_2aea7.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2aea9

bb:                                               ; preds = %dec_label_pc_2ae9a
  %v1_2aea7 = call i32 @function_2aeae()
  br label %dec_label_pc_2aea9

dec_label_pc_2aea9:                               ; preds = %dec_label_pc_2ae9a.dec_label_pc_2aea9_crit_edge, %bb
  %v2_2aea7 = phi i32 [ %v2_2aea7.pre, %dec_label_pc_2ae9a.dec_label_pc_2aea9_crit_edge ], [ %v1_2aea7, %bb ]
  ret i32 %v2_2aea7

; uselistorder directives
  uselistorder label %dec_label_pc_2aea9, { 1, 0 }
}

define i32 @function_2aeae() local_unnamed_addr {
dec_label_pc_2aeae:
  %v0_2aeaf = load i32, i32* @eax, align 4
  ret i32 %v0_2aeaf
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aeb0:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2aec7 = ptrtoint i32* %stack_var_-32 to i32
  %v1_2aecd = call i32 @unknown_4465c(i32 %v2_2aec7)
  %v1_2aed2 = inttoptr i32 %v1_2aecd to i32*
  %v2_2aed2 = load i32, i32* %v1_2aed2, align 4
  store i32 %v2_2aed2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2aee0

bb:                                               ; preds = %dec_label_pc_2aeb0
  %v1_2aede = call i32 @function_2aee5()
  br label %dec_label_pc_2aee0

dec_label_pc_2aee0:                               ; preds = %bb, %dec_label_pc_2aeb0
  %v2_2aede = phi i32 [ %v1_2aede, %bb ], [ %v2_2aed2, %dec_label_pc_2aeb0 ]
  ret i32 %v2_2aede
}

define i32 @function_2aee5() local_unnamed_addr {
dec_label_pc_2aee5:
  %v0_2aee6 = load i32, i32* @eax, align 4
  ret i32 %v0_2aee6
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN11json_spirit9Pair_implINS3_13Config_vectorISsEEEEPS7_EET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2aee7:
  %v2_2af12 = sub i32 %arg2, %arg1
  %v2_2af16 = sdiv i32 %v2_2af12, 8
  %v3_2af19 = mul i32 %v2_2af16, -1431655765
  %v10_2af42110 = icmp eq i32 %v3_2af19, 0
  %v11_2af42111 = icmp slt i32 %v3_2af19, 0
  %v3_2af46112 = icmp eq i1 %v11_2af42111, false
  %v4_2af46113 = icmp eq i1 %v10_2af42110, false
  %v5_2af46114 = icmp eq i1 %v3_2af46112, %v4_2af46113
  %v5_2af49115 = icmp eq i1 %v5_2af46114, false
  %v1_2af4b116 = icmp eq i1 %v5_2af49115, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_2af4b116, label %dec_label_pc_2af24, label %dec_label_pc_2af4d

dec_label_pc_2af24:                               ; preds = %dec_label_pc_2aee7, %dec_label_pc_2af24
  %storemerge119 = phi i32 [ %v4_2af3e, %dec_label_pc_2af24 ], [ %v3_2af19, %dec_label_pc_2aee7 ]
  %stack_var_-40.0118 = phi i32 [ %v4_2af3a, %dec_label_pc_2af24 ], [ %arg3, %dec_label_pc_2aee7 ]
  %stack_var_-32.0117 = phi i32 [ %v4_2af36, %dec_label_pc_2af24 ], [ %arg1, %dec_label_pc_2aee7 ]
  %v2_2af31 = call i32 @unknown_41139(i32 %stack_var_-40.0118, i32 %stack_var_-32.0117)
  %v4_2af36 = add i32 %stack_var_-32.0117, 24
  %v4_2af3a = add i32 %stack_var_-40.0118, 24
  %v4_2af3e = add i32 %storemerge119, -1
  %v13_2af3e = icmp eq i32 %v4_2af3e, 0
  %v11_2af42 = icmp slt i32 %v4_2af3e, 0
  %v3_2af46 = icmp eq i1 %v11_2af42, false
  %v4_2af46 = icmp eq i1 %v13_2af3e, false
  %v5_2af46 = icmp eq i1 %v3_2af46, %v4_2af46
  %v5_2af49 = icmp eq i1 %v5_2af46, false
  %v1_2af4b = icmp eq i1 %v5_2af49, false
  store i32 %v4_2af3a, i32* @eax, align 4
  br i1 %v1_2af4b, label %dec_label_pc_2af24, label %dec_label_pc_2af4d

dec_label_pc_2af4d:                               ; preds = %dec_label_pc_2af24, %dec_label_pc_2aee7
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_2aee7 ], [ %v4_2af3a, %dec_label_pc_2af24 ]
  br i1 true, label %bb, label %dec_label_pc_2af5c

bb:                                               ; preds = %dec_label_pc_2af4d
  %v1_2af5a = call i32 @function_2af61()
  br label %dec_label_pc_2af5c

dec_label_pc_2af5c:                               ; preds = %bb, %dec_label_pc_2af4d
  %v2_2af5a = phi i32 [ %v1_2af5a, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_2af4d ]
  ret i32 %v2_2af5a

; uselistorder directives
  uselistorder i32 %v4_2af3e, { 1, 2, 0 }
  uselistorder i32 %v4_2af3a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-32.0117, { 1, 0 }
  uselistorder i32 %stack_var_-40.0118, { 1, 0 }
  uselistorder label %dec_label_pc_2af24, { 1, 0 }
}

define i32 @function_2af5e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2af5e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2af61() local_unnamed_addr {
dec_label_pc_2af61:
  %v0_2af62 = load i32, i32* @eax, align 4
  ret i32 %v0_2af62
}

define i32 @_ZN9__gnu_cxxneIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2af63:
  %v0_2af76 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2af76
}

define i32 @function_2af80(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af80:
  %v0_2af80 = load i32, i32* @ebx, align 4
  %v1_2af80 = add i32 %v0_2af80, 76145733
  %v2_2af80 = inttoptr i32 %v1_2af80 to i8*
  %v3_2af80 = load i8, i8* %v2_2af80, align 1
  %v4_2af80 = udiv i8 %v3_2af80, 16
  %v5_2af80 = mul i8 %v3_2af80, 16
  %v6_2af80 = or i8 %v4_2af80, %v5_2af80
  store i8 %v6_2af80, i8* %v2_2af80, align 1
  %v0_2af87 = call i32 @unknown_4470f()
  ret i32 %v0_2af87
}

define i32 @function_2af8f() local_unnamed_addr {
dec_label_pc_2af8f:
  %eax.global-to-local = alloca i32, align 4
  %v15_2af8f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_2af8f
}

define i32 @function_2af9a() local_unnamed_addr {
dec_label_pc_2af9a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_2af9a = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_2af9a = load i32, i32* %ebx.global-to-local, align 4
  %v4_2af9a = udiv i32 %v3_2af9a, 256
  %v5_2af9a = trunc i32 %v4_2af9a to i8
  %v6_2af9a = add i8 %v5_2af9a, %v2_2af9a
  %v21_2af9a = load i32, i32* %ecx.global-to-local, align 4
  %v22_2af9a = inttoptr i32 %v21_2af9a to i8*
  store i8 %v6_2af9a, i8* %v22_2af9a, align 1
  %v0_2af9c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2af9c
}

declare i32 @__stack_chk_fail.1094(i32, i32, i32) local_unnamed_addr

define i32 @function_2afb6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2afb6:
  %v0_2afb6 = load i32, i32* @eax, align 4
  ret i32 %v0_2afb6
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2afb8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_2afd2 = load i32, i32* %arg1, align 4
  %v1_2afd4 = add i32 %v2_2afd2, 24
  store i32 %v1_2afd4, i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_2afef(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2afef:
  %v0_2aff1 = load i32, i32* @eax, align 4
  ret i32 %v0_2aff1
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN11json_spirit9Pair_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aff2:
  ret i32 %arg1
}

define i32 @function_2b000(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b000:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2b000 = load i32, i32* @eax, align 4
  %v2_2b000 = or i32 %v0_2b000, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2b000, i32* %eax.global-to-local, align 4
  %v0_2b002 = load i32, i32* @ebp, align 4
  %v0_2b003 = load i32, i32* @ecx, align 4
  %v1_2b003 = add i32 %v0_2b003, 255
  %v1_2b005 = add i32 %v0_2b002, 2
  store i32 %v1_2b005, i32* @ebp, align 4
  %v1_2b006 = add i32 %v0_2b003, -1587159996
  %v2_2b006 = inttoptr i32 %v1_2b006 to i8*
  %v3_2b006 = load i8, i8* %v2_2b006, align 1
  %v5_2b006 = trunc i32 %v1_2b003 to i8
  %v8_2b006 = add i8 %v3_2b006, %v5_2b006
  %v28_2b006 = icmp ult i8 %v8_2b006, %v3_2b006
  store i1 %v28_2b006, i1* %cf.global-to-local, align 1
  store i8 %v8_2b006, i8* %v2_2b006, align 1
  %v0_2b00c = load i32, i32* %eax.global-to-local, align 4
  %v1_2b00c = trunc i32 %v0_2b00c to i8
  %v2_2b00c = load i1, i1* %cf.global-to-local, align 1
  %v3_2b00c = zext i1 %v2_2b00c to i8
  %v4_2b00c = add i8 %v3_2b00c, %v1_2b00c
  %v19_2b00c = icmp ule i8 %v4_2b00c, %v1_2b00c
  %v21_2b00c = icmp eq i1 %v2_2b00c, %v19_2b00c
  store i1 %v21_2b00c, i1* %cf.global-to-local, align 1
  %v22_2b00c = zext i8 %v4_2b00c to i32
  %v24_2b00c = and i32 %v0_2b00c, -256
  %v25_2b00c = or i32 %v22_2b00c, %v24_2b00c
  store i32 %v25_2b00c, i32* %eax.global-to-local, align 4
  %v1_2b00e = inttoptr i32 %v25_2b00c to i8*
  %v2_2b00e = load i8, i8* %v1_2b00e, align 1
  %v5_2b00e = add i8 %v2_2b00e, %v4_2b00c
  store i8 %v5_2b00e, i8* %v1_2b00e, align 1
  %v0_2b010 = load i32, i32* %eax.global-to-local, align 4
  %v1_2b010 = load i32, i32* @ebp, align 4
  %v2_2b010 = add i32 %v1_2b010, -12
  %v3_2b010 = inttoptr i32 %v2_2b010 to i32*
  store i32 %v0_2b010, i32* %v3_2b010, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2b015 = load i32, i32* @ebp, align 4
  %v1_2b015 = add i32 %v0_2b015, -32
  %v2_2b015 = inttoptr i32 %v1_2b015 to i32*
  %v3_2b015 = load i32, i32* %v2_2b015, align 4
  %v1_2b018 = add i32 %v0_2b015, -28
  %v2_2b018 = inttoptr i32 %v1_2b018 to i32*
  %v3_2b018 = load i32, i32* %v2_2b018, align 4
  %v2_2b01d = sub i32 %v3_2b015, %v3_2b018
  store i32 %v2_2b01d, i32* @ecx, align 4
  %v2_2b021 = sdiv i32 %v2_2b01d, 8
  %v3_2b024 = mul i32 %v2_2b021, -1431655765
  store i32 %v3_2b024, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_2b02a = add i32 %v0_2b015, -16
  %v3_2b02a = inttoptr i32 %v2_2b02a to i32*
  store i32 %v3_2b024, i32* %v3_2b02a, align 4
  %v0_2b02d = call i32 @function_2b04d()
  store i32 %v0_2b02d, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b02d

; uselistorder directives
  uselistorder i32 %v3_2b024, { 1, 0 }
  uselistorder i8 %v4_2b00c, { 0, 2, 1 }
  uselistorder i8 %v1_2b00c, { 1, 0 }
  uselistorder i8 %v3_2b006, { 1, 0 }
  uselistorder i32 8, { 0, 1, 20, 110, 2, 21, 12, 114, 75, 76, 118, 3, 107, 115, 77, 13, 80, 111, 22, 23, 68, 81, 82, 66, 14, 24, 28, 89, 90, 91, 92, 97, 87, 25, 26, 27, 29, 30, 15, 16, 53, 31, 32, 33, 4, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 71, 72, 73, 48, 49, 50, 51, 52, 54, 55, 56, 5, 57, 58, 6, 7, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 74, 116, 117, 78, 79, 83, 84, 85, 86, 88, 112, 113, 93, 94, 95, 96, 98, 99, 100, 101, 8, 102, 103, 104, 105, 106, 108, 9, 10, 11, 109, 18, 19, 17 }
  uselistorder i32 -32, { 164, 40, 146, 0, 53, 54, 55, 56, 57, 58, 59, 60, 61, 36, 37, 148, 149, 150, 155, 156, 62, 144, 159, 160, 34, 63, 17, 64, 65, 66, 67, 69, 29, 44, 45, 70, 71, 166, 161, 162, 163, 152, 153, 46, 47, 48, 49, 73, 74, 75, 76, 77, 147, 78, 79, 80, 81, 5, 82, 83, 6, 141, 85, 86, 87, 88, 89, 90, 91, 92, 22, 93, 94, 35, 95, 96, 42, 43, 41, 97, 157, 158, 8, 98, 99, 100, 123, 72, 84, 7, 9, 10, 68, 114, 116, 50, 117, 118, 165, 101, 102, 115, 119, 120, 121, 122, 126, 15, 127, 103, 104, 105, 106, 2, 107, 108, 3, 4, 109, 125, 110, 111, 128, 129, 130, 131, 154, 112, 113, 138, 139, 23, 24, 124, 30, 31, 11, 12, 13, 14, 132, 133, 134, 135, 32, 33, 16, 136, 137, 1, 18, 19, 20, 143, 38, 39, 21, 25, 26, 51, 52, 27, 28, 145, 142, 140, 151, 167, 168, 169 }
}

define i32 @function_2b02f() local_unnamed_addr {
dec_label_pc_2b02f:
  %v0_2b02f = load i32, i32* @ebp, align 4
  %v1_2b02f = add i32 %v0_2b02f, -28
  %v2_2b02f = inttoptr i32 %v1_2b02f to i32*
  %v3_2b02f = load i32, i32* %v2_2b02f, align 4
  ret i32 %v3_2b02f
}

define i32 @function_2b032(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b032:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b032 = load i32, i32* @eax, align 4
  %v0_2b036 = load i32, i32* @ebp, align 4
  %v1_2b036 = add i32 %v0_2b036, -36
  %v2_2b036 = inttoptr i32 %v1_2b036 to i32*
  %v3_2b036 = load i32, i32* %v2_2b036, align 4
  store i32 %v3_2b036, i32* %eax.global-to-local, align 4
  %v2_2b03c = call i32 @unknown_41244(i32 %v3_2b036, i32 %v0_2b032)
  store i32 %v2_2b03c, i32* %eax.global-to-local, align 4
  %v0_2b041 = load i32, i32* @ebp, align 4
  %v1_2b041 = add i32 %v0_2b041, -28
  %v2_2b041 = inttoptr i32 %v1_2b041 to i32*
  %v3_2b041 = load i32, i32* %v2_2b041, align 4
  %v4_2b041 = add i32 %v3_2b041, 24
  store i32 %v4_2b041, i32* %v2_2b041, align 4
  %v0_2b045 = load i32, i32* @ebp, align 4
  %v1_2b045 = add i32 %v0_2b045, -36
  %v2_2b045 = inttoptr i32 %v1_2b045 to i32*
  %v3_2b045 = load i32, i32* %v2_2b045, align 4
  %v4_2b045 = add i32 %v3_2b045, 24
  store i32 %v4_2b045, i32* %v2_2b045, align 4
  %v0_2b049 = load i32, i32* @ebp, align 4
  %v1_2b049 = add i32 %v0_2b049, -16
  %v2_2b049 = inttoptr i32 %v1_2b049 to i32*
  %v3_2b049 = load i32, i32* %v2_2b049, align 4
  %v4_2b049 = add i32 %v3_2b049, -1
  store i32 %v4_2b049, i32* %v2_2b049, align 4
  %v22_2b049 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_2b049
}

define i32 @function_2b04d() local_unnamed_addr {
dec_label_pc_2b04d:
  %v0_2b04d = load i32, i32* @ebp, align 4
  %v1_2b04d = add i32 %v0_2b04d, -16
  %v2_2b04d = inttoptr i32 %v1_2b04d to i32*
  %v3_2b04d = load i32, i32* %v2_2b04d, align 4
  %v10_2b04d = icmp eq i32 %v3_2b04d, 0
  %v11_2b04d = icmp slt i32 %v3_2b04d, 0
  %v3_2b051 = icmp eq i1 %v11_2b04d, false
  %v4_2b051 = icmp eq i1 %v10_2b04d, false
  %v5_2b051 = icmp eq i1 %v3_2b051, %v4_2b051
  %v5_2b054 = icmp eq i1 %v5_2b051, false
  %v1_2b056 = icmp eq i1 %v5_2b054, false
  br i1 %v1_2b056, label %bb, label %dec_label_pc_2b058

bb:                                               ; preds = %dec_label_pc_2b04d
  %v2_2b056 = call i32 @function_2b02f()
  %v0_2b058.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2b058

dec_label_pc_2b058:                               ; preds = %bb, %dec_label_pc_2b04d
  %v0_2b058 = phi i32 [ %v0_2b058.pre, %bb ], [ %v0_2b04d, %dec_label_pc_2b04d ]
  %v1_2b058 = add i32 %v0_2b058, -36
  %v2_2b058 = inttoptr i32 %v1_2b058 to i32*
  %v3_2b058 = load i32, i32* %v2_2b058, align 4
  store i32 %v3_2b058, i32* @eax, align 4
  %v1_2b05b = add i32 %v0_2b058, -12
  %v2_2b05b = inttoptr i32 %v1_2b05b to i32*
  %v3_2b05b = load i32, i32* %v2_2b05b, align 4
  %v1_2b05e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b05e = icmp eq i32 %v1_2b05e, %v3_2b05b
  br i1 %v3_2b05e, label %bb3, label %dec_label_pc_2b067

bb3:                                              ; preds = %dec_label_pc_2b058
  %v1_2b065 = call i32 @function_2b06c()
  br label %dec_label_pc_2b067

dec_label_pc_2b067:                               ; preds = %bb3, %dec_label_pc_2b058
  %v2_2b065 = phi i32 [ %v1_2b065, %bb3 ], [ %v3_2b058, %dec_label_pc_2b058 ]
  ret i32 %v2_2b065

; uselistorder directives
  uselistorder i32 %v0_2b058, { 1, 0 }
  uselistorder i32 %v3_2b04d, { 1, 0 }
}

define i32 @function_2b06c() local_unnamed_addr {
dec_label_pc_2b06c:
  %v0_2b06d = load i32, i32* @eax, align 4
  ret i32 %v0_2b06d
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESC_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b06e:
  ret i32 %arg1
}

define i32 @function_2b07c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b07c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b07c = load i32, i32* @eax, align 4
  %v1_2b07c = trunc i32 %v0_2b07c to i8
  %v2_2b07c = load i1, i1* @cf, align 1
  %v3_2b07c = zext i1 %v2_2b07c to i8
  %v4_2b07c = add i8 %v3_2b07c, %v1_2b07c
  %v22_2b07c = zext i8 %v4_2b07c to i32
  %v24_2b07c = and i32 %v0_2b07c, -256
  %v25_2b07c = or i32 %v22_2b07c, %v24_2b07c
  store i32 %v25_2b07c, i32* %eax.global-to-local, align 4
  %v1_2b07e = inttoptr i32 %v25_2b07c to i8*
  %v2_2b07e = load i8, i8* %v1_2b07e, align 1
  %v5_2b07e = add i8 %v2_2b07e, %v4_2b07c
  store i8 %v5_2b07e, i8* %v1_2b07e, align 1
  %v0_2b080 = load i32, i32* %eax.global-to-local, align 4
  %v1_2b080 = load i32, i32* @ebp, align 4
  %v2_2b080 = add i32 %v1_2b080, -12
  %v3_2b080 = inttoptr i32 %v2_2b080 to i32*
  store i32 %v0_2b080, i32* %v3_2b080, align 4
  %v0_2b085 = load i32, i32* @ebp, align 4
  %v1_2b085 = add i32 %v0_2b085, -28
  store i32 %v1_2b085, i32* %eax.global-to-local, align 4
  %v1_2b08b = call i32 @unknown_527ba(i32 %v1_2b085)
  store i32 %v1_2b08b, i32* %eax.global-to-local, align 4
  %v1_2b090 = inttoptr i32 %v1_2b08b to i32*
  %v2_2b090 = load i32, i32* %v1_2b090, align 4
  store i32 %v2_2b090, i32* @eax, align 4
  %v0_2b092 = load i32, i32* @ebp, align 4
  %v1_2b092 = add i32 %v0_2b092, -12
  %v2_2b092 = inttoptr i32 %v1_2b092 to i32*
  %v3_2b092 = load i32, i32* %v2_2b092, align 4
  %v1_2b095 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b095 = icmp eq i32 %v1_2b095, %v3_2b092
  br i1 %v3_2b095, label %bb, label %dec_label_pc_2b09e

bb:                                               ; preds = %dec_label_pc_2b07c
  %v1_2b09c = call i32 @function_2b0a3()
  store i32 %v1_2b09c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b09e

dec_label_pc_2b09e:                               ; preds = %bb, %dec_label_pc_2b07c
  %v2_2b09c = phi i32 [ %v1_2b09c, %bb ], [ %v2_2b090, %dec_label_pc_2b07c ]
  ret i32 %v2_2b09c
}

define i32 @function_2b0a3() local_unnamed_addr {
dec_label_pc_2b0a3:
  %v0_2b0a4 = load i32, i32* @eax, align 4
  ret i32 %v0_2b0a4
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b0a5:
  ret i32 0
}

define i32 @function_2b0bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b0bc:
  %v0_2b0bc = load i32, i32* @ebp, align 4
  %v1_2b0bc = add i32 %v0_2b0bc, -28
  %v1_2b0c2 = call i32 @unknown_44f51(i32 %v1_2b0bc)
  %v1_2b0c7 = inttoptr i32 %v1_2b0c2 to i32*
  %v2_2b0c7 = load i32, i32* %v1_2b0c7, align 4
  store i32 %v2_2b0c7, i32* @eax, align 4
  %v0_2b0c9 = load i32, i32* @ebp, align 4
  %v1_2b0c9 = add i32 %v0_2b0c9, -12
  %v2_2b0c9 = inttoptr i32 %v1_2b0c9 to i32*
  %v3_2b0c9 = load i32, i32* %v2_2b0c9, align 4
  %v1_2b0cc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_2b0cc = icmp eq i32 %v1_2b0cc, %v3_2b0c9
  br i1 %v3_2b0cc, label %bb, label %dec_label_pc_2b0d5

bb:                                               ; preds = %dec_label_pc_2b0bc
  %v1_2b0d3 = call i32 @function_2b0da()
  br label %dec_label_pc_2b0d5

dec_label_pc_2b0d5:                               ; preds = %bb, %dec_label_pc_2b0bc
  %v3_2b0d3 = phi i32 [ %v1_2b0d3, %bb ], [ %v2_2b0c7, %dec_label_pc_2b0bc ]
  ret i32 %v3_2b0d3
}

define i32 @function_2b0da() local_unnamed_addr {
dec_label_pc_2b0da:
  %v0_2b0db = load i32, i32* @eax, align 4
  ret i32 %v0_2b0db
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN11json_spirit10Value_implINS3_13Config_vectorISsEEEEPS7_EET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b0dc:
  %v2_2b107 = sub i32 %arg2, %arg1
  %v2_2b10b = sdiv i32 %v2_2b107, 4
  %v3_2b10e = mul i32 %v2_2b10b, -858993459
  ret i32 %v3_2b10e
}

define i32 @function_2b132() local_unnamed_addr {
dec_label_pc_2b132:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b132 = load i32, i32* @eax, align 4
  %v2_2b132 = load i1, i1* @cf, align 1
  %v3_2b132 = zext i1 %v2_2b132 to i32
  %v4_2b132 = add i32 %v0_2b132, 131
  %v5_2b132 = add i32 %v4_2b132, %v3_2b132
  %v25_2b132 = and i32 %v5_2b132, 255
  %v27_2b132 = and i32 %v0_2b132, -256
  %v28_2b132 = or i32 %v25_2b132, %v27_2b132
  store i32 %v28_2b132, i32* %eax.global-to-local, align 4
  %v0_2b134 = load i32, i32* @edx, align 8
  %v1_2b134 = trunc i32 %v0_2b134 to i16
  %v2_2b134 = call i32 @__asm_insd(i16 %v1_2b134)
  %v3_2b134 = load i32, i32* @edi, align 4
  %v4_2b134 = inttoptr i32 %v3_2b134 to i32*
  store i32 %v2_2b134, i32* %v4_2b134, align 4
  %v0_2b135 = load i32, i32* @ebx, align 4
  %v1_2b135 = add i32 %v0_2b135, 251719805
  %v2_2b135 = inttoptr i32 %v1_2b135 to i32*
  %v3_2b135 = load i32, i32* %v2_2b135, align 4
  %v4_2b135 = load i32, i32* %eax.global-to-local, align 4
  %v5_2b135 = add i32 %v4_2b135, %v3_2b135
  %v6_2b135 = urem i32 %v3_2b135, 16
  %v7_2b135 = urem i32 %v4_2b135, 16
  %v8_2b135 = add nuw nsw i32 %v7_2b135, %v6_2b135
  %v9_2b135 = icmp ugt i32 %v8_2b135, 15
  %v10_2b135 = icmp ult i32 %v5_2b135, %v3_2b135
  %v15_2b135 = icmp eq i32 %v5_2b135, 0
  %v17_2b135 = trunc i32 %v5_2b135 to i8
  %v18_2b135 = call i8 @llvm.ctpop.i8(i8 %v17_2b135)
  %v19_2b135 = urem i8 %v18_2b135, 2
  %v20_2b135 = icmp eq i8 %v19_2b135, 0
  store i32 %v5_2b135, i32* %v2_2b135, align 4
  %v1_2b13c = zext i1 %v10_2b135 to i32
  %v12_2b13c = select i1 %v20_2b135, i32 4, i32 0
  %v14_2b13c = select i1 %v9_2b135, i32 16, i32 0
  %v16_2b13c = select i1 %v15_2b135, i32 64, i32 0
  %tmp = ashr i32 %v5_2b135, 31
  %tmp2 = and i32 %tmp, 128
  %v11_2b13c = or i32 %v16_2b13c, %v1_2b13c
  %v13_2b13c = or i32 %v11_2b13c, %tmp2
  %v15_2b13c = or i32 %v13_2b13c, %v14_2b13c
  %v17_2b13c = or i32 %v15_2b13c, %v12_2b13c
  %v21_2b13c = load i32, i32* %eax.global-to-local, align 4
  %v20_2b13c = mul nuw nsw i32 %v17_2b13c, 256
  %v23_2b13c = and i32 %v21_2b13c, -65281
  %v22_2b13c = or i32 %v23_2b13c, %v20_2b13c
  %v24_2b13c = or i32 %v22_2b13c, 512
  store i32 %v24_2b13c, i32* @eax, align 4
  %v0_2b145 = load i32, i32* @ebp, align 4
  %v1_2b145 = add i32 %v0_2b145, -12
  %v2_2b145 = inttoptr i32 %v1_2b145 to i32*
  %v3_2b145 = load i32, i32* %v2_2b145, align 4
  %v1_2b148 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b148 = icmp eq i32 %v1_2b148, %v3_2b145
  br i1 %v3_2b148, label %bb, label %dec_label_pc_2b151

bb:                                               ; preds = %dec_label_pc_2b132
  %v1_2b14f = call i32 @function_2b156()
  store i32 %v1_2b14f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b151

dec_label_pc_2b151:                               ; preds = %bb, %dec_label_pc_2b132
  %v2_2b14f = phi i32 [ %v1_2b14f, %bb ], [ %v24_2b13c, %dec_label_pc_2b132 ]
  ret i32 %v2_2b14f

; uselistorder directives
  uselistorder i32 %v24_2b13c, { 1, 0 }
  uselistorder i32 %v3_2b135, { 2, 0, 1 }
  uselistorder i32 %v0_2b132, { 1, 0 }
  uselistorder i32 512, { 3, 0, 1, 2, 4 }
  uselistorder i32 -65281, { 15, 4, 6, 8, 9, 10, 11, 7, 5, 12, 13, 14, 0, 1, 2, 3 }
  uselistorder i32 256, { 1, 2, 3, 4, 36, 5, 6, 7, 8, 9, 10, 37, 11, 12, 13, 14, 15, 38, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 39, 28, 30, 29, 31, 32, 33, 34, 35 }
  uselistorder i8 0, { 117, 65, 103, 0, 74, 72, 73, 62, 5, 35, 36, 76, 77, 78, 79, 80, 6, 7, 8, 9, 10, 11, 112, 113, 87, 88, 85, 86, 89, 44, 12, 13, 82, 83, 14, 15, 96, 57, 58, 59, 60, 37, 38, 40, 41, 4, 39, 42, 43, 45, 1, 46, 2, 47, 3, 48, 49, 50, 51, 52, 99, 16, 53, 54, 55, 56, 61, 69, 63, 64, 66, 67, 68, 70, 17, 71, 115, 20, 18, 19, 118, 119, 120, 121, 107, 124, 116, 75, 123, 122, 81, 114, 84, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 23, 24, 21, 22, 25, 26, 27, 106, 108, 109, 110, 111, 30, 31, 28, 29, 32, 33, 34 }
  uselistorder i32 16, { 0, 1, 2, 22, 11, 52, 56, 59, 25, 53, 20, 26, 27, 28, 29, 19, 30, 31, 8, 37, 38, 41, 32, 42, 33, 5, 6, 7, 14, 9, 10, 12, 13, 4, 15, 16, 17, 18, 3, 21, 60, 62, 57, 58, 65, 23, 61, 24, 64, 63, 54, 55, 34, 35, 36, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32* @edi, { 13, 4, 5, 0, 3, 6, 8, 7, 10, 11, 1, 9, 2, 12 }
  uselistorder i32* @edx, { 97, 99, 100, 27, 89, 15, 90, 91, 94, 28, 30, 31, 32, 0, 102, 22, 23, 40, 13, 41, 42, 43, 44, 20, 18, 48, 95, 96, 49, 51, 66, 52, 47, 36, 6, 9, 7, 16, 10, 35, 1, 67, 68, 11, 63, 8, 12, 71, 55, 56, 57, 58, 69, 59, 60, 61, 73, 74, 77, 38, 2, 3, 65, 80, 83, 19, 14, 25, 26, 4, 45, 84, 17, 21, 24, 86, 87, 85, 98, 101, 92, 93, 29, 33, 34, 103, 37, 81, 39, 46, 50, 53, 54, 62, 64, 70, 72, 75, 76, 78, 79, 82, 88, 5 }
  uselistorder i32 255, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 19, 14, 15, 16, 17 }
  uselistorder i1* @cf, { 82, 83, 84, 9, 11, 13, 90, 15, 16, 5, 19, 20, 21, 27, 29, 31, 32, 33, 1, 75, 35, 37, 38, 39, 40, 41, 7, 45, 47, 43, 22, 2, 42, 3, 4, 17, 62, 68, 86, 63, 66, 70, 53, 55, 25, 57, 59, 0, 73, 87, 88, 89, 49, 51, 72, 74, 8, 6, 80, 85, 10, 12, 14, 91, 18, 23, 24, 26, 28, 30, 34, 76, 77, 36, 44, 46, 48, 50, 52, 54, 56, 58, 60, 61, 64, 65, 67, 69, 71, 78, 79, 81 }
}

define i32 @function_2b156() local_unnamed_addr {
dec_label_pc_2b156:
  %v0_2b157 = load i32, i32* @eax, align 4
  ret i32 %v0_2b157
}

define i32 @_ZN9__gnu_cxxneIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b158:
  %v1_2b17c = call i32 @unknown_45004(i32 %arg1)
  %v1_2b181 = inttoptr i32 %v1_2b17c to i32*
  %v2_2b181 = load i32, i32* %v1_2b181, align 4
  %v1_2b189 = call i32 @unknown_45004(i32 %arg2)
  %v1_2b18e = inttoptr i32 %v1_2b189 to i32*
  %v2_2b18e = load i32, i32* %v1_2b18e, align 4
  %v12_2b190 = icmp eq i32 %v2_2b181, %v2_2b18e
  %v1_2b192 = icmp eq i1 %v12_2b190, false
  %v2_2b192 = zext i1 %v1_2b192 to i32
  %v4_2b192 = and i32 %v2_2b18e, -256
  %v5_2b192 = or i32 %v2_2b192, %v4_2b192
  store i32 %v5_2b192, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b1a1

bb:                                               ; preds = %dec_label_pc_2b158
  %v1_2b19f = call i32 @function_2b1a6()
  br label %dec_label_pc_2b1a1

dec_label_pc_2b1a1:                               ; preds = %bb, %dec_label_pc_2b158
  %v2_2b19f = phi i32 [ %v1_2b19f, %bb ], [ %v5_2b192, %dec_label_pc_2b158 ]
  ret i32 %v2_2b19f

; uselistorder directives
  uselistorder i32 %v2_2b18e, { 1, 0 }
  uselistorder i32 -256, { 28, 148, 149, 150, 59, 60, 61, 62, 48, 7, 63, 64, 65, 66, 50, 51, 10, 42, 147, 54, 55, 56, 70, 71, 76, 77, 78, 79, 80, 81, 82, 30, 83, 31, 137, 84, 85, 87, 88, 29, 89, 90, 91, 92, 93, 49, 96, 97, 98, 99, 100, 101, 102, 2, 3, 104, 94, 95, 57, 105, 72, 73, 74, 108, 32, 67, 68, 69, 145, 119, 120, 124, 125, 121, 122, 123, 126, 107, 128, 129, 109, 110, 111, 75, 112, 113, 114, 8, 4, 144, 115, 116, 117, 130, 131, 86, 33, 135, 151, 152, 136, 103, 106, 127, 34, 35, 133, 36, 37, 38, 39, 134, 40, 41, 140, 139, 58, 43, 44, 45, 46, 47, 9, 5, 141, 52, 53, 118, 11, 138, 12, 13, 14, 146, 132, 6, 142, 0, 143, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 153, 154, 27 }
  uselistorder i32 (i32)* @unknown_45004, { 1, 0 }
}

define i32 @function_2b1a6() local_unnamed_addr {
dec_label_pc_2b1a6:
  %v0_2b1ab = load i32, i32* @eax, align 4
  ret i32 %v0_2b1ab
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv() local_unnamed_addr {
dec_label_pc_2b1ac:
  %eax.global-to-local = alloca i32, align 4
  %v5_2b1ac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2b1ac
}

define i32 @function_2b1ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b1ae:
  %v0_2b1b1 = load i32, i32* @ebx, align 4
  %v1_2b1b1 = add i32 %v0_2b1b1, 1166608453
  %v2_2b1b1 = inttoptr i32 %v1_2b1b1 to i8*
  %v3_2b1b1 = load i8, i8* %v2_2b1b1, align 1
  %v4_2b1b1 = load i32, i32* @ecx, align 4
  %v5_2b1b1 = trunc i32 %v4_2b1b1 to i8
  %v6_2b1b1 = sub i8 %v3_2b1b1, %v5_2b1b1
  store i8 %v6_2b1b1, i8* %v2_2b1b1, align 1
  %v0_2b1b9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2b1be = load i32, i32* @ebp, align 4
  %v2_2b1be = add i32 %v1_2b1be, -12
  %v3_2b1be = inttoptr i32 %v2_2b1be to i32*
  store i32 %v0_2b1b9, i32* %v3_2b1be, align 4
  %v0_2b1c3 = load i32, i32* @ebp, align 4
  %v1_2b1c3 = add i32 %v0_2b1c3, -28
  %v2_2b1c3 = inttoptr i32 %v1_2b1c3 to i32*
  %v3_2b1c3 = load i32, i32* %v2_2b1c3, align 4
  %v1_2b1c6 = inttoptr i32 %v3_2b1c3 to i32*
  %v2_2b1c6 = load i32, i32* %v1_2b1c6, align 4
  %v1_2b1c8 = add i32 %v2_2b1c6, 20
  %v2_2b1ce = inttoptr i32 %v3_2b1c3 to i32*
  store i32 %v1_2b1c8, i32* %v2_2b1ce, align 4
  %v0_2b1d0 = load i32, i32* @ebp, align 4
  %v1_2b1d0 = add i32 %v0_2b1d0, -28
  %v2_2b1d0 = inttoptr i32 %v1_2b1d0 to i32*
  %v3_2b1d0 = load i32, i32* %v2_2b1d0, align 4
  store i32 %v3_2b1d0, i32* @eax, align 4
  %v1_2b1d3 = add i32 %v0_2b1d0, -12
  %v2_2b1d3 = inttoptr i32 %v1_2b1d3 to i32*
  %v3_2b1d3 = load i32, i32* %v2_2b1d3, align 4
  %v1_2b1d6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b1d6 = icmp eq i32 %v1_2b1d6, %v3_2b1d3
  br i1 %v3_2b1d6, label %bb, label %dec_label_pc_2b1df

bb:                                               ; preds = %dec_label_pc_2b1ae
  %v1_2b1dd = call i32 @function_2b1e4()
  br label %dec_label_pc_2b1df

dec_label_pc_2b1df:                               ; preds = %bb, %dec_label_pc_2b1ae
  %v2_2b1dd = phi i32 [ %v1_2b1dd, %bb ], [ %v3_2b1d0, %dec_label_pc_2b1ae ]
  ret i32 %v2_2b1dd
}

define i32 @function_2b1e4() local_unnamed_addr {
dec_label_pc_2b1e4:
  %v0_2b1e5 = load i32, i32* @eax, align 4
  ret i32 %v0_2b1e5
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN11json_spirit10Value_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b1e6:
  %v2_2b211 = sub i32 %arg2, %arg1
  %v2_2b215 = sdiv i32 %v2_2b211, 4
  %v3_2b218 = mul i32 %v2_2b215, -858993459
  ret i32 %v3_2b218

; uselistorder directives
  uselistorder i32 4, { 3, 0, 4, 5, 269, 6, 27, 58, 59, 7, 292, 171, 255, 60, 178, 179, 281, 282, 283, 158, 180, 61, 118, 181, 38, 183, 39, 184, 62, 40, 63, 275, 276, 65, 64, 67, 66, 8, 9, 68, 206, 10, 69, 70, 41, 42, 43, 71, 72, 11, 12, 161, 216, 73, 287, 74, 219, 220, 218, 221, 75, 223, 224, 13, 86, 211, 29, 30, 14, 76, 32, 230, 231, 77, 78, 197, 15, 242, 16, 79, 80, 36, 44, 81, 82, 45, 33, 83, 84, 85, 46, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 17, 97, 98, 99, 100, 101, 102, 103, 105, 104, 106, 107, 108, 110, 109, 112, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 162, 163, 164, 165, 166, 167, 128, 129, 52, 47, 130, 131, 132, 133, 134, 135, 48, 136, 49, 53, 137, 138, 139, 140, 141, 142, 143, 18, 28, 19, 144, 20, 145, 146, 1, 147, 148, 149, 150, 151, 152, 153, 154, 155, 21, 156, 157, 159, 160, 37, 212, 168, 277, 284, 285, 286, 169, 264, 50, 170, 288, 265, 31, 270, 271, 22, 266, 172, 173, 293, 174, 175, 278, 279, 176, 177, 182, 290, 291, 185, 186, 54, 187, 289, 280, 23, 24, 188, 189, 35, 190, 191, 192, 25, 272, 193, 26, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 273, 209, 210, 263, 267, 268, 213, 214, 215, 217, 222, 225, 226, 227, 228, 274, 229, 232, 233, 234, 235, 236, 238, 237, 239, 240, 241, 51, 243, 244, 34, 245, 2, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 55, 56, 57 }
}

define i32 @function_2b22c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b22c:
  %v2_2b233 = load i32, i32* @eax, align 4
  %v4_2b233 = mul i32 %v2_2b233, 2
  %v21_2b233 = inttoptr i32 %v2_2b233 to i32*
  store i32 %v4_2b233, i32* %v21_2b233, align 4
  %v0_2b235 = load i32, i32* @ebp, align 4
  %v1_2b235 = add i32 %v0_2b235, -28
  %v2_2b235 = inttoptr i32 %v1_2b235 to i32*
  %v3_2b235 = load i32, i32* %v2_2b235, align 4
  %v4_2b235 = add i32 %v3_2b235, 20
  store i32 %v4_2b235, i32* %v2_2b235, align 4
  %v0_2b239 = load i32, i32* @ebp, align 4
  %v1_2b239 = add i32 %v0_2b239, -36
  %v2_2b239 = inttoptr i32 %v1_2b239 to i32*
  %v3_2b239 = load i32, i32* %v2_2b239, align 4
  %v4_2b239 = add i32 %v3_2b239, 20
  store i32 %v4_2b239, i32* %v2_2b239, align 4
  %v0_2b23d = load i32, i32* @ebp, align 4
  %v1_2b23d = add i32 %v0_2b23d, -16
  %v2_2b23d = inttoptr i32 %v1_2b23d to i32*
  %v3_2b23d = load i32, i32* %v2_2b23d, align 4
  %v4_2b23d = add i32 %v3_2b23d, -1
  store i32 %v4_2b23d, i32* %v2_2b23d, align 4
  %v0_2b241 = load i32, i32* @ebp, align 4
  %v1_2b24c = add i32 %v0_2b241, -36
  %v2_2b24c = inttoptr i32 %v1_2b24c to i32*
  %v3_2b24c = load i32, i32* %v2_2b24c, align 4
  store i32 %v3_2b24c, i32* @eax, align 4
  %v1_2b24f = add i32 %v0_2b241, -12
  %v2_2b24f = inttoptr i32 %v1_2b24f to i32*
  %v3_2b24f = load i32, i32* %v2_2b24f, align 4
  %v1_2b252 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b252 = icmp eq i32 %v1_2b252, %v3_2b24f
  br i1 %v3_2b252, label %bb, label %dec_label_pc_2b25b

bb:                                               ; preds = %dec_label_pc_2b22c
  %v1_2b259 = call i32 @function_2b260()
  br label %dec_label_pc_2b25b

dec_label_pc_2b25b:                               ; preds = %bb, %dec_label_pc_2b22c
  %v3_2b259 = phi i32 [ %v1_2b259, %bb ], [ %v3_2b24c, %dec_label_pc_2b22c ]
  ret i32 %v3_2b259

; uselistorder directives
  uselistorder i32 %v0_2b241, { 1, 0 }
  uselistorder i32 %v2_2b233, { 1, 0 }
  uselistorder i32 -16, { 32, 64, 63, 65, 38, 39, 40, 16, 60, 61, 62, 41, 42, 52, 53, 43, 36, 37, 50, 51, 44, 45, 46, 1, 0, 3, 2, 47, 48, 49, 12, 13, 14, 54, 55, 28, 29, 56, 15, 33, 34, 35, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 4, 59, 5, 6, 7, 8, 9, 10, 11, 57, 58, 66, 67, 68 }
  uselistorder i32 -36, { 31, 32, 120, 118, 119, 41, 42, 43, 44, 16, 17, 110, 18, 33, 111, 112, 113, 115, 116, 45, 8, 46, 47, 122, 123, 117, 48, 49, 50, 52, 28, 53, 114, 38, 39, 40, 55, 56, 57, 58, 9, 59, 60, 102, 62, 63, 64, 19, 65, 66, 67, 68, 36, 37, 35, 69, 70, 71, 72, 73, 74, 75, 76, 54, 61, 10, 11, 12, 13, 51, 85, 87, 88, 121, 86, 89, 91, 90, 93, 95, 77, 78, 79, 80, 2, 0, 1, 81, 92, 82, 83, 96, 97, 98, 84, 101, 14, 15, 29, 30, 94, 99, 100, 104, 105, 107, 108, 106, 34, 20, 21, 22, 23, 24, 25, 26, 27, 4, 3, 5, 109, 6, 103, 7 }
  uselistorder i32 2, { 3, 35, 23, 24, 25, 27, 26, 36, 37, 4, 28, 0, 38, 29, 5, 6, 39, 30, 1, 7, 8, 9, 2, 10, 11, 31, 40, 41, 32, 12, 13, 45, 42, 33, 20, 34, 14, 44, 43, 47, 46, 15, 16, 18, 19, 21, 17, 22 }
}

define i32 @function_2b260() local_unnamed_addr {
dec_label_pc_2b260:
  %v0_2b261 = load i32, i32* @eax, align 4
  ret i32 %v0_2b261
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32 %arg1) {
dec_label_pc_2b284:
  %v0_2b290 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2b290
}

define i32 @function_2b298(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b298:
  %v0_2b29b = load i32, i32* @ebp, align 4
  %v1_2b29b = add i32 %v0_2b29b, -28
  %v2_2b29b = inttoptr i32 %v1_2b29b to i32*
  %v3_2b29b = load i32, i32* %v2_2b29b, align 4
  %v1_2b29e = inttoptr i32 %v3_2b29b to i32*
  store i32 ptrtoint (%vtable_2b270_type* @global_var_2b270.1841 to i32), i32* %v1_2b29e, align 4
  %v0_2b2a4 = load i32, i32* @ebp, align 4
  %v1_2b2a4 = add i32 %v0_2b2a4, -28
  %v2_2b2a4 = inttoptr i32 %v1_2b2a4 to i32*
  %v3_2b2a4 = load i32, i32* %v2_2b2a4, align 4
  %v1_2b2aa = call i32 @unknown_385ec(i32 %v3_2b2a4)
  %v5_2b2b9 = call i32 @function_2b2c6(i32 %v3_2b2a4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_2b2bb = load i32, i32* @ebp, align 4
  %v1_2b2bb = add i32 %v0_2b2bb, -28
  %v2_2b2bb = inttoptr i32 %v1_2b2bb to i32*
  %v3_2b2bb = load i32, i32* %v2_2b2bb, align 4
  ret i32 %v3_2b2bb

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_2b2c6, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_2b270_type* @global_var_2b270.1841 to i32), { 1, 0 }
}

define i32 @function_2b2c6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2b2c6:
  %v0_2b2c6 = load i32, i32* @ebp, align 4
  %v1_2b2c6 = add i32 %v0_2b2c6, -12
  %v2_2b2c6 = inttoptr i32 %v1_2b2c6 to i32*
  %v3_2b2c6 = load i32, i32* %v2_2b2c6, align 4
  %v1_2b2c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b2c9 = xor i32 %v1_2b2c9, %v3_2b2c6
  %v3_2b2c9 = icmp eq i32 %v2_2b2c9, 0
  store i32 %v2_2b2c9, i32* @eax, align 4
  br i1 %v3_2b2c9, label %bb, label %dec_label_pc_2b2d2

bb:                                               ; preds = %dec_label_pc_2b2c6
  %v1_2b2d0 = call i32 @function_2b2d7()
  br label %dec_label_pc_2b2d2

dec_label_pc_2b2d2:                               ; preds = %bb, %dec_label_pc_2b2c6
  %v2_2b2d0 = phi i32 [ %v1_2b2d0, %bb ], [ %v2_2b2c9, %dec_label_pc_2b2c6 ]
  ret i32 %v2_2b2d0
}

define i32 @function_2b2d7() local_unnamed_addr {
dec_label_pc_2b2d7:
  %v0_2b2d8 = load i32, i32* @eax, align 4
  ret i32 %v0_2b2d8
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32 %arg1) {
dec_label_pc_2b2da:
  %v1_2b2f7 = call i32 @unknown_5655e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2b317() local_unnamed_addr {
dec_label_pc_2b317:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b317 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2b317 = add i32 %v0_2b317, -1
  store i32 %v1_2b317, i32* %ecx.global-to-local, align 4
  %v0_2b319 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b319
}

declare i32 @unknown_2b37b(i32, i32) local_unnamed_addr

define i32 @function_2b409(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b409:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b470(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b470:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_2b4a6(i32) local_unnamed_addr

define i32 @function_2b563(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b563:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b566(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b566:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b58c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b58c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b660(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b660:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b760(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b760:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_2b918:
  %v1_2b932 = add i32 %arg1, 12
  %v2_2b932 = inttoptr i32 %v1_2b932 to i32*
  %v3_2b932 = load i32, i32* %v2_2b932, align 4
  %v1_2b938 = call i32 @unknown_47053(i32 %v3_2b932)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b949

bb:                                               ; preds = %dec_label_pc_2b918
  %v1_2b947 = call i32 @function_2b94e()
  br label %dec_label_pc_2b949

dec_label_pc_2b949:                               ; preds = %bb, %dec_label_pc_2b918
  %v2_2b947 = phi i32 [ %v1_2b947, %bb ], [ 0, %dec_label_pc_2b918 ]
  ret i32 %v2_2b947

; uselistorder directives
  uselistorder i1 true, {}
  uselistorder i32 12, { 4, 23, 43, 47, 48, 24, 44, 20, 5, 6, 21, 25, 26, 27, 28, 19, 10, 30, 31, 32, 33, 29, 34, 7, 8, 9, 15, 11, 12, 35, 16, 13, 14, 22, 17, 18, 49, 45, 46, 0, 1, 36, 37, 38, 39, 40, 41, 42, 2, 3 }
}

define i32 @function_2b94e() local_unnamed_addr {
dec_label_pc_2b94e:
  %v0_2b94f = load i32, i32* @eax, align 4
  ret i32 %v0_2b94f
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info(i32 %arg1) {
dec_label_pc_2b950:
  ret i32 %arg1
}

define i32 @function_2b95e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b95e:
  %v0_2b95e = load i32, i32* @eax, align 4
  %v2_2b95e = or i32 %v0_2b95e, zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32)
  store i32 %v2_2b95e, i32* @eax, align 4
  %v0_2b960 = load i32, i32* @ebp, align 4
  %v1_2b960 = add i32 %v0_2b960, 1
  %v9_2b960 = icmp eq i32 %v1_2b960, 0
  store i1 %v9_2b960, i1* @zf, align 1
  store i32 %v1_2b960, i32* @ebp, align 4
  %v0_2b961 = load i32, i32* @ecx, align 4
  %v2_2b961 = icmp eq i32 %v0_2b961, 1
  %v4_2b961 = or i1 %v9_2b960, %v2_2b961
  br i1 %v4_2b961, label %dec_label_pc_2b963, label %bb

bb:                                               ; preds = %dec_label_pc_2b95e
  %v6_2b961 = call i32 @function_2b9c8()
  %v1_2b968.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2b963

dec_label_pc_2b963:                               ; preds = %dec_label_pc_2b95e, %bb
  %v1_2b968 = phi i32 [ %v1_2b960, %dec_label_pc_2b95e ], [ %v1_2b968.pre, %bb ]
  %v0_2b963 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b968 = add i32 %v1_2b968, -12
  %v3_2b968 = inttoptr i32 %v2_2b968 to i32*
  store i32 %v0_2b963, i32* %v3_2b968, align 4
  store i32 0, i32* @eax, align 4
  %v0_2b972 = load i32, i32* @ebp, align 4
  %v1_2b972 = add i32 %v0_2b972, -12
  %v2_2b972 = inttoptr i32 %v1_2b972 to i32*
  %v3_2b972 = load i32, i32* %v2_2b972, align 4
  %v1_2b975 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b975 = icmp eq i32 %v1_2b975, %v3_2b972
  br i1 %v3_2b975, label %bb3, label %dec_label_pc_2b97e

bb3:                                              ; preds = %dec_label_pc_2b963
  %v1_2b97c = call i32 @function_2b983()
  br label %dec_label_pc_2b97e

dec_label_pc_2b97e:                               ; preds = %bb3, %dec_label_pc_2b963
  %v2_2b97c = phi i32 [ %v1_2b97c, %bb3 ], [ 0, %dec_label_pc_2b963 ]
  ret i32 %v2_2b97c

; uselistorder directives
  uselistorder i8* @global_var_89.1818, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_89.1818 to i8), { 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 2, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3 }
  uselistorder i32 zext (i8 ptrtoint (i8* @global_var_89.1818 to i8) to i32), { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20 }
  uselistorder label %dec_label_pc_2b963, { 1, 0 }
}

define i32 @function_2b983() local_unnamed_addr {
dec_label_pc_2b983:
  %v0_2b984 = load i32, i32* @eax, align 4
  ret i32 %v0_2b984
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b986:
  %v4_2b986 = add i32 %arg1, -28
  %v1_2b98b = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.1797(i32 %v4_2b986)
  ret i32 %v1_2b98b

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.1797, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.1797(i32 %arg1) {
dec_label_pc_2b98e:
  ret i32 0
}

define i32 @function_2b9b4() local_unnamed_addr {
dec_label_pc_2b9b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b9b4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b9b4
}

define i32 @function_2b9be(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b9be:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b9be = load i32, i32* @eax, align 4
  %v11_2b9be = and i32 %v0_2b9be, -24
  store i32 %v11_2b9be, i32* %eax.global-to-local, align 4
  %v2_2b9c1 = load i32, i32* @ecx, align 4
  %v4_2b9c1 = or i32 %v2_2b9c1, %v11_2b9be
  %v12_2b9c1 = inttoptr i32 %v2_2b9c1 to i32*
  store i32 %v4_2b9c1, i32* %v12_2b9c1, align 4
  %v13_2b9c1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v13_2b9c1

; uselistorder directives
  uselistorder i32 %v2_2b9c1, { 1, 0 }
}

define i32 @function_2b9c8() local_unnamed_addr {
dec_label_pc_2b9c8:
  %v0_2b9c8 = load i1, i1* @zf, align 1
  br i1 %v0_2b9c8, label %dec_label_pc_2b9d4, label %dec_label_pc_2b9ca

dec_label_pc_2b9ca:                               ; preds = %dec_label_pc_2b9c8
  %v0_2b9ca = load i32, i32* @eax, align 4
  %v1_2b9ca = add i32 %v0_2b9ca, 28
  br label %dec_label_pc_2b9d4

dec_label_pc_2b9d4:                               ; preds = %dec_label_pc_2b9c8, %dec_label_pc_2b9ca
  %storemerge = phi i32 [ %v1_2b9ca, %dec_label_pc_2b9ca ], [ 0, %dec_label_pc_2b9c8 ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_2b9d4 = load i32, i32* @ebp, align 4
  %v1_2b9d4 = add i32 %v0_2b9d4, -12
  %v2_2b9d4 = inttoptr i32 %v1_2b9d4 to i32*
  %v3_2b9d4 = load i32, i32* %v2_2b9d4, align 4
  %v1_2b9d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b9d7 = icmp eq i32 %v1_2b9d7, %v3_2b9d4
  br i1 %v3_2b9d7, label %bb, label %dec_label_pc_2b9e0

bb:                                               ; preds = %dec_label_pc_2b9d4
  %v1_2b9de = call i32 @function_2b9fb()
  store i32 %v1_2b9de, i32* @eax, align 4
  br label %dec_label_pc_2b9e0

dec_label_pc_2b9e0:                               ; preds = %bb, %dec_label_pc_2b9d4
  %v0_2b9e0 = call i32 @function_2b9f6()
  ret i32 %v0_2b9e0

; uselistorder directives
  uselistorder i32 28, { 11, 9, 12, 8, 13, 16, 4, 20, 21, 17, 2, 3, 5, 6, 7, 10, 14, 15, 23, 24, 18, 19, 1, 22, 0 }
  uselistorder i1 false, { 114, 300, 301, 56, 302, 48, 57, 303, 115, 58, 116, 49, 3, 4, 5, 6, 174, 287, 7, 184, 170, 171, 172, 59, 117, 60, 61, 186, 187, 188, 176, 177, 162, 163, 298, 299, 179, 180, 181, 118, 119, 198, 199, 200, 201, 202, 203, 204, 121, 122, 206, 208, 209, 210, 211, 212, 213, 120, 214, 215, 216, 217, 218, 221, 223, 224, 225, 226, 229, 50, 230, 192, 193, 123, 234, 235, 124, 219, 125, 62, 63, 189, 190, 249, 250, 305, 251, 252, 253, 254, 255, 256, 257, 237, 238, 240, 51, 98, 64, 99, 126, 241, 242, 243, 100, 65, 101, 52, 296, 297, 244, 261, 262, 263, 53, 264, 127, 272, 273, 54, 274, 271, 306, 128, 66, 129, 8, 9, 10, 258, 259, 130, 67, 131, 11, 12, 13, 132, 133, 68, 134, 17, 18, 19, 14, 15, 16, 135, 136, 20, 69, 70, 137, 71, 138, 21, 22, 23, 139, 24, 72, 140, 141, 73, 142, 25, 26, 27, 143, 28, 74, 144, 145, 146, 75, 147, 29, 30, 31, 148, 76, 149, 32, 33, 34, 268, 269, 276, 77, 150, 78, 151, 35, 36, 37, 79, 80, 81, 82, 83, 280, 152, 153, 154, 175, 173, 84, 155, 85, 156, 157, 158, 159, 86, 160, 87, 161, 38, 39, 40, 164, 165, 166, 167, 168, 88, 169, 178, 182, 89, 183, 41, 42, 43, 285, 102, 103, 248, 90, 104, 1, 0, 304, 185, 291, 91, 307, 191, 194, 195, 196, 197, 205, 277, 207, 220, 222, 227, 228, 231, 233, 2, 232, 236, 239, 245, 246, 247, 55, 105, 260, 265, 266, 267, 92, 270, 275, 278, 279, 93, 94, 95, 281, 282, 44, 283, 45, 284, 286, 46, 288, 289, 106, 107, 108, 109, 290, 47, 292, 293, 294, 295, 110, 111, 112, 113, 308, 96, 309, 310, 97, 311, 312, 313, 314, 315 }
  uselistorder i1* @zf, { 3, 4, 0, 1, 7, 9, 2, 5, 6, 8, 10 }
  uselistorder label %dec_label_pc_2b9d4, { 1, 0 }
}

define i32 @function_2b9f6() local_unnamed_addr {
dec_label_pc_2b9f6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b9fb() local_unnamed_addr {
dec_label_pc_2b9fb:
  %v0_2ba01 = load i32, i32* @eax, align 4
  ret i32 %v0_2ba01
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ba02:
  %v4_2ba02 = add i32 %arg1, -28
  %v1_2ba07 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %v4_2ba02)
  ret i32 %v1_2ba07

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv, { 1, 0 }
  uselistorder i32 -28, { 2, 3, 71, 72, 73, 68, 74, 75, 242, 243, 244, 245, 246, 85, 84, 48, 222, 220, 221, 0, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 98, 99, 77, 78, 223, 224, 225, 226, 234, 235, 236, 256, 238, 239, 69, 110, 111, 112, 86, 113, 114, 115, 247, 88, 89, 116, 117, 118, 119, 28, 254, 255, 61, 92, 121, 122, 253, 240, 241, 228, 93, 94, 95, 124, 125, 126, 127, 128, 209, 129, 130, 131, 132, 134, 76, 135, 136, 90, 91, 87, 133, 237, 141, 142, 6, 7, 174, 175, 143, 144, 147, 123, 218, 29, 30, 31, 149, 32, 33, 229, 230, 137, 138, 148, 37, 38, 120, 233, 96, 97, 166, 167, 168, 169, 170, 34, 248, 249, 250, 251, 171, 172, 173, 232, 180, 181, 40, 41, 183, 150, 151, 152, 153, 10, 8, 9, 154, 155, 179, 156, 157, 184, 11, 186, 187, 188, 231, 158, 159, 160, 161, 35, 203, 204, 205, 146, 252, 12, 49, 50, 51, 36, 176, 178, 177, 62, 63, 39, 182, 190, 191, 192, 42, 64, 65, 66, 193, 194, 197, 1, 210, 211, 212, 213, 79, 80, 81, 82, 83, 43, 44, 45, 46, 47, 13, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 14, 70, 145, 214, 215, 139, 140, 216, 217, 219, 4, 163, 162, 164, 15, 165, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 185, 26, 189, 27, 195, 196, 199, 200, 201, 198, 202, 206, 207, 208, 227, 5 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_2ba0a:
  ret i32 0
}

define i32 @function_2ba30() local_unnamed_addr {
dec_label_pc_2ba30:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ba30 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ba30
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ba6e:
  %v4_2ba6e = add i32 %arg1, -24
  %v1_2ba73 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v4_2ba6e)
  ret i32 %v1_2ba73

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_2ba76:
  %v5_2ba7a = load i32, i32* @eax, align 4
  ret i32 %v5_2ba7a
}

define i32 @function_2ba7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2ba7c:
  %v0_2ba7d = load i32, i32* @ebx, align 4
  %v1_2ba7d = add i32 %v0_2ba7d, 1166608453
  %v2_2ba7d = inttoptr i32 %v1_2ba7d to i8*
  %v3_2ba7d = load i8, i8* %v2_2ba7d, align 1
  %v4_2ba7d = load i32, i32* @ecx, align 4
  %v5_2ba7d = trunc i32 %v4_2ba7d to i8
  %v6_2ba7d = xor i8 %v5_2ba7d, %v3_2ba7d
  store i8 %v6_2ba7d, i8* %v2_2ba7d, align 1
  %v0_2ba85 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2ba8a = load i32, i32* @ebp, align 4
  %v2_2ba8a = add i32 %v1_2ba8a, -12
  %v3_2ba8a = inttoptr i32 %v2_2ba8a to i32*
  store i32 %v0_2ba85, i32* %v3_2ba8a, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @ebp, { 442, 713, 714, 2, 715, 716, 717, 610, 611, 612, 599, 600, 601, 602, 613, 614, 615, 1443, 1444, 1445, 1446, 1447, 1448, 3, 1454, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 637, 638, 636, 639, 640, 1461, 511, 512, 718, 719, 720, 1352, 1353, 1351, 0, 1, 1354, 1355, 732, 733, 734, 735, 739, 740, 741, 736, 737, 738, 742, 743, 744, 745, 746, 747, 748, 749, 642, 750, 751, 752, 753, 754, 755, 756, 757, 758, 616, 617, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 473, 474, 475, 476, 477, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 1356, 1357, 1360, 1361, 478, 479, 1368, 1369, 498, 499, 622, 623, 624, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 774, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 775, 776, 777, 778, 779, 780, 781, 782, 1479, 1480, 783, 784, 785, 786, 787, 398, 399, 400, 401, 402, 403, 404, 405, 1481, 1322, 1323, 1324, 1325, 1326, 508, 509, 510, 1424, 1425, 1426, 1427, 1428, 1429, 788, 789, 790, 791, 606, 607, 608, 792, 793, 794, 795, 481, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 646, 647, 648, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 1459, 1460, 817, 654, 818, 819, 820, 526, 527, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 406, 407, 1477, 1478, 838, 839, 840, 841, 842, 570, 571, 572, 573, 574, 480, 843, 670, 671, 844, 845, 672, 673, 674, 846, 847, 848, 849, 850, 851, 1474, 1475, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1387, 1388, 1389, 1390, 1391, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 856, 700, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 1364, 1365, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 412, 413, 414, 415, 416, 417, 898, 899, 900, 901, 902, 903, 904, 905, 906, 418, 419, 914, 907, 408, 21, 909, 22, 23, 908, 24, 25, 910, 26, 27, 911, 912, 913, 28, 915, 29, 30, 852, 423, 1292, 1293, 1294, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 949, 950, 951, 952, 953, 954, 955, 956, 513, 514, 515, 516, 517, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 619, 620, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 655, 656, 657, 658, 659, 660, 661, 662, 663, 649, 650, 651, 946, 947, 409, 994, 995, 1419, 1420, 996, 997, 998, 1421, 1422, 433, 434, 999, 1000, 666, 667, 668, 669, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1178, 1179, 1180, 1181, 1019, 1025, 993, 31, 32, 33, 34, 35, 1020, 36, 1021, 37, 1022, 1023, 597, 38, 39, 853, 854, 40, 1024, 1026, 855, 694, 695, 1029, 410, 41, 42, 43, 1027, 44, 45, 46, 641, 47, 635, 48, 49, 50, 51, 1028, 1030, 52, 53, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 857, 858, 859, 860, 861, 916, 917, 918, 919, 920, 1331, 411, 54, 55, 1332, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 420, 421, 422, 438, 1060, 1061, 1062, 1063, 1392, 424, 425, 426, 427, 428, 1393, 1394, 1395, 1396, 4, 429, 984, 985, 986, 992, 430, 1057, 431, 73, 74, 948, 75, 76, 77, 1058, 643, 644, 1056, 78, 79, 80, 81, 440, 82, 83, 84, 85, 645, 1416, 444, 445, 446, 447, 448, 449, 450, 451, 452, 833, 834, 835, 836, 837, 1403, 675, 676, 432, 86, 990, 87, 1018, 88, 89, 90, 91, 92, 1402, 1404, 93, 94, 1045, 95, 96, 97, 98, 99, 1134, 1135, 1136, 1137, 1138, 1139, 1146, 1147, 1148, 1149, 1131, 1132, 1150, 696, 697, 698, 699, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 435, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1034, 1035, 1037, 1038, 1039, 1040, 1036, 1140, 1141, 1142, 1143, 1144, 1145, 1166, 1167, 1168, 1169, 1162, 1163, 1164, 1165, 1170, 1171, 1172, 1173, 1174, 1182, 1183, 1184, 1185, 1186, 463, 464, 1175, 1176, 1401, 436, 100, 101, 1055, 102, 103, 104, 1192, 1193, 1194, 466, 105, 106, 107, 108, 109, 110, 111, 112, 113, 1197, 1198, 1199, 1200, 1201, 1202, 468, 469, 470, 1064, 1065, 1206, 1207, 1208, 1209, 1210, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1216, 1081, 1082, 1083, 1084, 1085, 862, 1086, 1087, 1219, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 117, 114, 115, 116, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1195, 1196, 1106, 1107, 1108, 1109, 1110, 1211, 1212, 1213, 1214, 1215, 1111, 1059, 1220, 1221, 1222, 1223, 1224, 1225, 1228, 1229, 1230, 1231, 1232, 1233, 1397, 1398, 1399, 1400, 1112, 1113, 1114, 1115, 1116, 1226, 1227, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 437, 1124, 942, 1125, 991, 439, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 5, 1277, 1278, 1041, 1042, 1469, 129, 1470, 1282, 1283, 1284, 118, 119, 120, 1017, 121, 1151, 122, 123, 1285, 124, 125, 126, 1287, 127, 128, 1291, 6, 130, 131, 132, 133, 1043, 1044, 134, 1471, 518, 519, 520, 521, 522, 523, 524, 525, 1177, 441, 443, 1187, 453, 454, 7, 1189, 1190, 1191, 1188, 575, 576, 577, 578, 579, 580, 581, 582, 1203, 455, 457, 458, 456, 459, 460, 461, 462, 1204, 1205, 1234, 465, 1236, 1237, 467, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 471, 1245, 584, 585, 586, 587, 588, 589, 472, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1260, 1261, 1288, 1289, 1290, 482, 1298, 484, 486, 485, 487, 488, 490, 489, 491, 483, 492, 493, 494, 495, 496, 1299, 1302, 1303, 1304, 1306, 1307, 1305, 1300, 1301, 1309, 1310, 1311, 1308, 497, 8, 1313, 1314, 652, 664, 9, 626, 627, 628, 629, 630, 631, 632, 633, 10, 634, 11, 500, 501, 502, 503, 504, 505, 506, 507, 702, 703, 704, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 705, 706, 707, 708, 709, 710, 711, 12, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 583, 135, 590, 591, 592, 593, 594, 595, 596, 136, 137, 598, 603, 604, 605, 138, 139, 609, 618, 1031, 1032, 1033, 621, 140, 141, 1315, 1316, 1317, 1318, 1319, 1320, 142, 143, 625, 987, 988, 989, 1327, 1328, 1329, 1333, 1334, 1335, 1336, 653, 665, 701, 712, 13, 1345, 1346, 1347, 1348, 1342, 1343, 1344, 1126, 1128, 1127, 1129, 1130, 144, 149, 1133, 145, 14, 146, 147, 148, 150, 1476, 151, 1286, 1295, 1296, 1297, 152, 153, 154, 1423, 155, 156, 158, 1159, 157, 1160, 1161, 159, 160, 163, 161, 1217, 162, 1218, 164, 165, 15, 166, 167, 168, 1235, 169, 170, 1256, 1257, 1258, 1259, 1262, 1263, 1265, 16, 1266, 1264, 1267, 1279, 1280, 1281, 1312, 171, 172, 1321, 1330, 1337, 173, 174, 175, 176, 177, 1338, 178, 207, 208, 182, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 1417, 1418, 214, 215, 216, 217, 218, 219, 1339, 1340, 1341, 241, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 1440, 1441, 1442, 1349, 1350, 252, 253, 251, 254, 255, 256, 260, 261, 257, 258, 259, 262, 1472, 1473, 1358, 1359, 263, 264, 1362, 1363, 274, 275, 265, 266, 267, 268, 276, 277, 278, 279, 280, 17, 269, 270, 271, 272, 273, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 1366, 1367, 294, 295, 1382, 1383, 1384, 1385, 296, 297, 1386, 298, 371, 365, 360, 328, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 379, 380, 381, 18, 374, 375, 376, 377, 378, 382, 19, 20, 1482, 1483, 1484, 1485, 1486, 383, 384 }
  uselistorder i32* @ecx, { 12, 1, 32, 19, 129, 130, 133, 22, 23, 24, 14, 25, 119, 33, 34, 35, 36, 37, 120, 20, 121, 122, 124, 38, 39, 40, 41, 139, 15, 42, 131, 132, 43, 27, 28, 5, 16, 137, 138, 126, 127, 30, 29, 50, 51, 52, 53, 54, 56, 9, 57, 58, 59, 17, 60, 63, 64, 65, 66, 67, 72, 73, 74, 77, 78, 79, 71, 46, 31, 21, 47, 8, 83, 68, 10, 44, 45, 93, 134, 94, 95, 96, 97, 98, 11, 13, 104, 84, 85, 86, 48, 99, 87, 88, 2, 89, 103, 105, 106, 0, 107, 108, 90, 91, 3, 111, 92, 70, 113, 114, 115, 116, 82, 135, 76, 101, 102, 109, 112, 117, 18, 6, 80, 81, 69, 26, 118, 4, 136, 123, 128, 49, 55, 61, 62, 125, 75, 100, 110, 7 }
  uselistorder i32 1166608453, { 0, 2, 1, 3 }
  uselistorder i32* @ebx, { 28, 35, 114, 38, 117, 43, 44, 45, 46, 47, 48, 42, 113, 49, 50, 51, 52, 53, 120, 58, 59, 29, 62, 63, 31, 119, 66, 67, 64, 65, 72, 75, 39, 40, 78, 37, 79, 80, 86, 118, 83, 84, 92, 95, 99, 101, 87, 88, 93, 89, 90, 104, 91, 74, 85, 107, 30, 96, 97, 103, 106, 109, 36, 41, 0, 32, 33, 2, 3, 4, 5, 34, 11, 110, 111, 112, 73, 115, 116, 54, 55, 56, 57, 60, 61, 6, 7, 8, 9, 68, 69, 70, 71, 10, 76, 77, 81, 82, 12, 13, 14, 15, 94, 16, 17, 98, 100, 102, 105, 108, 18, 19, 20, 21, 1, 22, 23, 24, 26, 25, 27 }
}

define i32 @function_2ba9a() local_unnamed_addr {
dec_label_pc_2ba9a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ba9a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ba9a = add i32 %v0_2ba9a, -465204285
  %v2_2ba9a = inttoptr i32 %v1_2ba9a to i32*
  %v3_2ba9a = load i32, i32* %v2_2ba9a, align 4
  %v4_2ba9a = add i32 %v3_2ba9a, -1
  store i32 %v4_2ba9a, i32* %v2_2ba9a, align 4
  %v0_2baa0 = load i32, i32* %eax.global-to-local, align 4
  %v0_2baa4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2baa7 = call i32 @unknown_3cfc0(i32 %v0_2baa4, i32 %v0_2baa0)
  store i32 %v0_2baa4, i32* %eax.global-to-local, align 4
  %v1_2baae = icmp eq i32 %v0_2baa4, 0
  br i1 %v1_2baae, label %dec_label_pc_2babc, label %dec_label_pc_2bab2

dec_label_pc_2bab2:                               ; preds = %dec_label_pc_2ba9a
  %v1_2bab2 = add i32 %v0_2baa4, 24
  br label %dec_label_pc_2babc

dec_label_pc_2babc:                               ; preds = %dec_label_pc_2ba9a, %dec_label_pc_2bab2
  %storemerge = phi i32 [ %v1_2bab2, %dec_label_pc_2bab2 ], [ 0, %dec_label_pc_2ba9a ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_2babc = load i32, i32* %ebp.global-to-local, align 4
  %v1_2babc = add i32 %v0_2babc, -12
  %v2_2babc = inttoptr i32 %v1_2babc to i32*
  %v3_2babc = load i32, i32* %v2_2babc, align 4
  %v1_2babf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2babf = icmp eq i32 %v1_2babf, %v3_2babc
  br i1 %v3_2babf, label %bb, label %dec_label_pc_2bac8

bb:                                               ; preds = %dec_label_pc_2babc
  %v1_2bac6 = call i32 @function_2bae3()
  store i32 %v1_2bac6, i32* @eax, align 4
  br label %dec_label_pc_2bac8

dec_label_pc_2bac8:                               ; preds = %bb, %dec_label_pc_2babc
  %v0_2bac8 = call i32 @function_2bade()
  store i32 %v0_2bac8, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bac8

; uselistorder directives
  uselistorder i32 %v0_2baa4, { 2, 1, 0, 3 }
  uselistorder i32 20, { 41, 42, 45, 36, 76, 79, 8, 9, 10, 53, 50, 54, 0, 55, 29, 56, 48, 62, 66, 1, 2, 3, 33, 4, 11, 20, 67, 68, 5, 70, 71, 63, 64, 74, 6, 65, 7, 30, 31, 32, 21, 38, 34, 12, 72, 73, 35, 13, 37, 39, 40, 14, 43, 15, 44, 22, 46, 16, 47, 49, 17, 51, 18, 52, 57, 58, 59, 23, 60, 61, 24, 25, 26, 77, 78, 19, 69, 75, 27, 28, 80 }
  uselistorder i32* inttoptr (i32 20 to i32*), { 0, 62, 142, 143, 144, 146, 24, 97, 104, 105, 348, 349, 350, 351, 25, 353, 115, 116, 77, 147, 321, 322, 150, 151, 152, 153, 154, 117, 155, 156, 157, 158, 159, 160, 71, 26, 161, 27, 148, 149, 323, 324, 74, 110, 111, 28, 118, 326, 327, 328, 335, 336, 337, 359, 342, 343, 162, 163, 101, 102, 164, 165, 166, 167, 168, 119, 120, 169, 170, 171, 352, 172, 173, 174, 175, 29, 30, 358, 177, 178, 83, 179, 128, 180, 129, 31, 181, 182, 32, 357, 344, 345, 33, 346, 329, 130, 131, 132, 34, 35, 133, 134, 184, 137, 186, 187, 188, 189, 190, 191, 325, 192, 193, 194, 195, 43, 196, 197, 44, 46, 199, 298, 36, 202, 203, 204, 205, 206, 207, 208, 37, 209, 210, 38, 212, 213, 78, 79, 214, 215, 216, 80, 217, 108, 218, 219, 124, 125, 121, 211, 39, 40, 224, 339, 340, 41, 52, 225, 226, 127, 227, 228, 229, 1, 2, 267, 230, 42, 231, 237, 185, 200, 201, 312, 45, 47, 48, 239, 330, 223, 238, 49, 338, 64, 65, 176, 334, 260, 262, 263, 50, 135, 136, 51, 53, 354, 355, 54, 233, 234, 55, 261, 264, 265, 268, 56, 269, 270, 68, 266, 332, 275, 69, 240, 277, 241, 242, 243, 244, 279, 245, 3, 246, 247, 4, 333, 248, 274, 249, 250, 251, 278, 252, 253, 5, 280, 282, 283, 254, 331, 255, 256, 57, 257, 281, 258, 259, 58, 293, 294, 295, 235, 236, 356, 6, 7, 59, 60, 61, 63, 271, 66, 67, 273, 272, 84, 85, 276, 284, 285, 70, 87, 88, 287, 288, 289, 291, 297, 72, 299, 302, 301, 304, 303, 73, 306, 122, 114, 75, 138, 76, 8, 140, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 106, 107, 12, 232, 109, 307, 308, 9, 112, 220, 221, 113, 222, 310, 313, 316, 123, 126, 139, 141, 319, 145, 10, 11, 286, 183, 198, 341, 13, 320, 14, 15, 16, 290, 17, 292, 296, 300, 305, 309, 311, 314, 315, 317, 318, 18, 19, 347, 20, 21, 22, 23, 360 }
  uselistorder i32 -12, { 0, 22, 93, 94, 95, 96, 50, 56, 57, 298, 299, 300, 301, 302, 303, 66, 33, 97, 274, 100, 101, 102, 103, 67, 104, 105, 106, 107, 108, 109, 110, 29, 98, 99, 275, 31, 61, 62, 63, 277, 278, 279, 284, 285, 290, 291, 111, 112, 54, 55, 113, 114, 68, 115, 116, 117, 118, 119, 304, 73, 120, 309, 123, 124, 37, 38, 125, 78, 126, 79, 80, 127, 128, 308, 292, 293, 294, 295, 296, 280, 81, 82, 83, 84, 85, 86, 129, 89, 132, 133, 134, 135, 136, 137, 138, 139, 276, 140, 141, 142, 143, 144, 145, 146, 18, 19, 147, 148, 20, 256, 257, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 34, 165, 166, 167, 168, 169, 59, 170, 171, 172, 173, 74, 75, 69, 70, 162, 17, 176, 287, 177, 288, 21, 178, 179, 77, 180, 181, 182, 183, 184, 1, 2, 225, 185, 130, 131, 149, 150, 191, 192, 281, 175, 286, 24, 25, 121, 122, 214, 215, 218, 219, 220, 87, 88, 221, 222, 305, 306, 307, 186, 188, 187, 216, 217, 223, 226, 227, 224, 231, 28, 193, 233, 234, 194, 195, 196, 197, 198, 199, 3, 200, 201, 202, 4, 283, 203, 204, 205, 230, 206, 207, 208, 235, 236, 209, 5, 237, 238, 240, 241, 282, 210, 239, 211, 212, 250, 251, 252, 253, 189, 190, 6, 23, 26, 27, 228, 229, 39, 40, 232, 242, 243, 42, 43, 244, 245, 246, 248, 255, 259, 260, 262, 261, 30, 264, 265, 71, 65, 32, 7, 91, 35, 36, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 60, 8, 64, 174, 267, 269, 270, 271, 72, 76, 90, 92, 273, 213, 9, 258, 289, 10, 11, 247, 12, 249, 254, 263, 266, 268, 272, 13, 14, 297, 15, 16, 310 }
  uselistorder i32 24, { 11, 53, 54, 16, 17, 18, 0, 1, 2, 3, 36, 37, 34, 39, 40, 41, 32, 44, 22, 46, 47, 48, 45, 12, 13, 8, 19, 20, 21, 25, 23, 4, 24, 26, 27, 5, 6, 28, 7, 29, 9, 30, 31, 33, 35, 38, 42, 43, 51, 52, 14, 10, 15, 49, 50 }
  uselistorder i32 -1, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 185, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 1, 183, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 2, 184, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 186, 100, 101, 0, 187, 188, 102, 103, 104, 105, 106, 107, 189, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 190, 3, 191, 4, 192, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 182, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181 }
  uselistorder label %dec_label_pc_2babc, { 1, 0 }
}

define i32 @function_2baca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2baca:
  %v0_2baca = load i32, i32* @eax, align 4
  ret i32 %v0_2baca
}

define i32 @function_2bade() local_unnamed_addr {
dec_label_pc_2bade:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bae3() local_unnamed_addr {
dec_label_pc_2bae3:
  %v0_2bae9 = load i32, i32* @eax, align 4
  ret i32 %v0_2bae9
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2baea:
  %v4_2baea = add i32 %arg1, -24
  %v1_2baef = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v4_2baea)
  ret i32 %v1_2baef

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 -24, { 18, 19, 13, 52, 14, 15, 0, 27, 26, 51, 37, 20, 21, 16, 42, 32, 33, 40, 28, 41, 1, 2, 29, 30, 31, 44, 34, 38, 39, 3, 35, 36, 22, 47, 48, 49, 45, 46, 23, 24, 4, 43, 25, 17, 5, 6, 7, 8, 9, 10, 11, 12, 53, 50 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_2baf2:
  ret i32 0
}

define i32 @function_2bb18() local_unnamed_addr {
dec_label_pc_2bb18:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bb18 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bb18

; uselistorder directives
  uselistorder i32 1, { 331, 334, 333, 332, 335, 336, 92, 337, 0, 1332, 338, 339, 896, 891, 239, 240, 237, 238, 341, 340, 342, 343, 1099, 1100, 344, 345, 897, 346, 347, 1333, 1408, 898, 1334, 1335, 109, 111, 110, 112, 1322, 1336, 114, 113, 115, 348, 349, 1101, 227, 1409, 1311, 1103, 1102, 1410, 350, 93, 94, 95, 96, 351, 1105, 1104, 352, 899, 1106, 900, 856, 855, 857, 1337, 116, 353, 1107, 1338, 858, 245, 1108, 901, 1340, 1028, 1029, 1341, 902, 1342, 859, 1324, 1109, 903, 117, 118, 236, 1325, 98, 99, 100, 904, 1030, 1031, 354, 76, 355, 1032, 1033, 1034, 1035, 1036, 1037, 1318, 1319, 1320, 89, 90, 87, 88, 1110, 1111, 1112, 931, 91, 293, 294, 292, 307, 308, 306, 304, 305, 303, 301, 302, 300, 298, 299, 297, 1413, 231, 232, 235, 233, 234, 932, 356, 357, 358, 359, 933, 4, 1328, 1329, 101, 103, 102, 104, 105, 360, 361, 362, 5, 6, 1115, 1114, 1113, 865, 1118, 1117, 1116, 870, 934, 124, 130, 1119, 131, 363, 364, 1038, 132, 935, 365, 366, 133, 1039, 1040, 1041, 1351, 1352, 138, 136, 137, 936, 937, 1042, 1353, 134, 135, 1043, 139, 140, 1044, 1307, 79, 80, 1045, 938, 81, 1046, 1047, 141, 142, 972, 973, 974, 123, 861, 222, 143, 1120, 1048, 144, 145, 939, 940, 146, 147, 367, 368, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1314, 1056, 150, 151, 7, 8, 9, 10, 1354, 1355, 154, 155, 152, 153, 11, 12, 1356, 1357, 156, 157, 158, 13, 941, 97, 312, 311, 1057, 1058, 1121, 230, 1358, 160, 161, 1059, 1060, 1061, 1062, 975, 1063, 1064, 1065, 1359, 167, 168, 1360, 1361, 162, 164, 163, 165, 166, 369, 14, 15, 16, 17, 372, 371, 370, 373, 376, 375, 374, 377, 378, 169, 379, 1362, 171, 172, 170, 173, 159, 223, 380, 976, 977, 1346, 978, 1331, 979, 174, 980, 981, 18, 1347, 1348, 1349, 125, 129, 128, 126, 127, 381, 382, 383, 19, 20, 21, 1066, 1067, 1068, 1069, 1070, 1071, 22, 23, 24, 25, 26, 27, 982, 983, 984, 985, 986, 987, 28, 1072, 384, 385, 250, 251, 252, 253, 386, 1122, 1365, 177, 178, 915, 387, 388, 860, 1411, 229, 389, 390, 391, 392, 1323, 988, 989, 990, 991, 992, 393, 394, 29, 30, 916, 31, 1343, 1344, 1345, 119, 122, 120, 121, 1327, 887, 889, 888, 993, 994, 995, 996, 997, 254, 255, 1073, 1374, 194, 195, 862, 1074, 1075, 1076, 1077, 1078, 192, 1123, 395, 199, 193, 1079, 1080, 1363, 175, 1081, 1082, 1375, 1376, 198, 196, 197, 1377, 1124, 200, 201, 202, 82, 33, 32, 34, 1083, 203, 1378, 1310, 1084, 176, 1381, 998, 999, 1000, 1001, 1002, 1003, 206, 917, 83, 1382, 210, 35, 918, 36, 1366, 181, 179, 180, 396, 1, 1367, 183, 182, 1368, 397, 2, 1350, 184, 398, 399, 400, 1125, 185, 186, 401, 1369, 1412, 880, 881, 883, 882, 884, 885, 919, 1370, 1371, 189, 187, 188, 402, 403, 1372, 190, 37, 1383, 207, 208, 209, 920, 922, 1126, 921, 406, 405, 404, 407, 1385, 1386, 211, 212, 213, 408, 409, 410, 878, 877, 411, 412, 148, 149, 413, 414, 415, 416, 417, 418, 419, 420, 1004, 421, 1005, 422, 1006, 423, 1007, 424, 1008, 425, 1009, 426, 427, 1391, 1392, 216, 217, 218, 219, 923, 873, 428, 1010, 3, 1393, 1394, 220, 924, 925, 243, 221, 1395, 1011, 1012, 1013, 1014, 1015, 1364, 429, 965, 1315, 1127, 430, 431, 38, 39, 1128, 432, 1130, 1129, 1131, 1132, 926, 966, 1308, 1380, 204, 205, 927, 1379, 433, 434, 435, 436, 437, 863, 1136, 1135, 1134, 1133, 1288, 438, 439, 970, 971, 1137, 1309, 1138, 1139, 1085, 1140, 1141, 257, 258, 440, 1143, 1142, 441, 442, 443, 444, 40, 445, 446, 447, 1144, 41, 448, 449, 864, 450, 1146, 1145, 451, 452, 1147, 928, 453, 454, 455, 1149, 1148, 456, 457, 458, 459, 460, 461, 1150, 1152, 1151, 1154, 1153, 259, 214, 215, 462, 463, 1387, 1155, 1396, 464, 465, 466, 467, 1157, 1156, 256, 1312, 1313, 1159, 1158, 260, 262, 261, 866, 1164, 1163, 1162, 1161, 1160, 468, 469, 1165, 1399, 271, 470, 1166, 1167, 1398, 1400, 471, 472, 1168, 473, 868, 867, 474, 1171, 1170, 1169, 263, 475, 476, 1174, 1173, 1172, 264, 1177, 1176, 1175, 265, 1180, 1179, 1178, 266, 477, 480, 479, 478, 481, 482, 1182, 1181, 483, 1183, 484, 485, 486, 85, 86, 84, 1184, 107, 106, 108, 1186, 1185, 1316, 1317, 487, 488, 489, 490, 491, 492, 1086, 272, 1321, 1188, 1187, 42, 43, 1190, 1189, 493, 1191, 1192, 494, 1087, 273, 495, 496, 497, 498, 499, 500, 501, 502, 503, 1193, 504, 505, 1194, 1195, 1196, 506, 507, 508, 1088, 274, 509, 1089, 275, 510, 1090, 511, 1289, 513, 514, 512, 515, 516, 517, 1091, 1199, 1198, 1197, 44, 1200, 518, 519, 1092, 276, 520, 521, 522, 929, 523, 1290, 525, 526, 524, 527, 528, 529, 1093, 1203, 1202, 1201, 45, 530, 1291, 532, 531, 533, 534, 1204, 535, 1094, 277, 536, 537, 538, 1205, 539, 1206, 540, 541, 542, 1207, 1208, 1209, 1210, 1211, 1212, 543, 544, 226, 46, 545, 546, 267, 268, 547, 1326, 1016, 548, 1213, 47, 1095, 1330, 549, 269, 270, 550, 551, 288, 1407, 1017, 1292, 1293, 553, 552, 554, 1294, 555, 1373, 191, 556, 557, 558, 559, 1220, 1219, 1218, 1217, 1216, 1215, 1214, 1222, 1221, 1223, 1224, 1225, 1226, 560, 1228, 1227, 48, 1229, 1230, 1231, 1339, 1232, 1233, 1234, 1235, 561, 562, 1236, 1237, 279, 563, 564, 566, 565, 1295, 49, 50, 567, 568, 51, 570, 569, 571, 1238, 572, 573, 1240, 1239, 52, 53, 54, 574, 575, 874, 576, 577, 578, 1242, 1241, 290, 228, 876, 579, 580, 581, 582, 583, 1247, 1246, 1245, 1244, 1243, 584, 585, 586, 587, 278, 55, 869, 588, 56, 310, 57, 1248, 1249, 1250, 589, 590, 591, 592, 58, 1251, 1252, 593, 967, 295, 1296, 595, 594, 596, 59, 60, 597, 598, 879, 599, 600, 601, 602, 224, 225, 886, 61, 62, 63, 603, 604, 605, 606, 607, 1253, 281, 280, 282, 1254, 612, 609, 610, 608, 611, 613, 942, 954, 1255, 65, 64, 614, 615, 1257, 1256, 1258, 66, 67, 1259, 283, 284, 1260, 285, 287, 286, 1262, 1261, 616, 617, 618, 943, 955, 1263, 968, 1384, 619, 1266, 1265, 1264, 620, 1297, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 1018, 1267, 309, 68, 1019, 69, 1388, 871, 1298, 635, 1268, 636, 637, 1269, 638, 1389, 872, 1390, 1299, 639, 1270, 890, 1272, 1271, 1096, 969, 1397, 640, 641, 642, 643, 963, 964, 70, 644, 645, 1401, 1402, 1403, 646, 647, 648, 649, 650, 651, 652, 653, 1276, 1275, 1274, 1273, 296, 654, 655, 656, 657, 71, 72, 289, 1278, 1277, 1404, 1405, 944, 73, 1406, 945, 291, 1097, 74, 75, 658, 659, 660, 661, 662, 956, 663, 664, 665, 666, 667, 668, 669, 670, 950, 946, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 1280, 1279, 692, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 329, 328, 330, 1300, 324, 325, 326, 327, 320, 319, 321, 322, 323, 316, 315, 317, 705, 1301, 706, 707, 708, 709, 710, 711, 712, 957, 1302, 713, 714, 951, 947, 958, 959, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 729, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 318, 742, 743, 744, 745, 1020, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 905, 906, 952, 948, 907, 908, 909, 911, 910, 912, 913, 875, 914, 1021, 960, 757, 758, 759, 760, 761, 1022, 1304, 1303, 762, 77, 763, 1023, 241, 892, 764, 765, 953, 949, 961, 962, 242, 893, 766, 767, 1024, 768, 769, 771, 770, 772, 1025, 244, 894, 773, 1026, 1281, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 314, 789, 790, 78, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 1027, 1306, 1305, 839, 1098, 1285, 1284, 1283, 1282, 842, 843, 841, 840, 844, 845, 847, 846, 848, 849, 1287, 1286, 1414, 248, 249, 246, 247, 850, 851, 852, 895, 853, 313, 854, 930 }
}

define i32 @function_2bbac(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbac:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bbd9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2bbd9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bcfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bcfc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bd10(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_2bd40(i32) local_unnamed_addr

declare i32 @unknown_2bd7e(i32, i32) local_unnamed_addr

declare i32 @unknown_2bdf6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2be75(i32) local_unnamed_addr

declare i32 @unknown_2c000(i32) local_unnamed_addr

declare i32 @unknown_2c0c3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c0da(i32) local_unnamed_addr

declare i32 @unknown_2c0ea(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c176(i32) local_unnamed_addr

declare i32 @unknown_2c17a(i32) local_unnamed_addr

declare i32 @unknown_2c18e(i32, i32) local_unnamed_addr

declare i32 @unknown_2c1a3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c1c4(i32) local_unnamed_addr

declare i32 @unknown_2c252(i32) local_unnamed_addr

declare i32 @unknown_2c294(i32) local_unnamed_addr

declare i32 @unknown_2c2e6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c312(i32) local_unnamed_addr

declare i32 @unknown_2c392(i32) local_unnamed_addr

declare i32 @unknown_2c3c0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2c406(i32) local_unnamed_addr

declare i32 @unknown_2c544(i32) local_unnamed_addr

declare i32 @unknown_2c676(i32, i32) local_unnamed_addr

declare i32 @unknown_2c75c(i32) local_unnamed_addr

declare i32 @unknown_2c7a6(i32, i32) local_unnamed_addr

declare i32 @unknown_2c95e(i32) local_unnamed_addr

declare i32 @unknown_2c97e(i32, i32) local_unnamed_addr

declare i32 @unknown_2ca78(i32) local_unnamed_addr

declare i32 @unknown_2ca93(i32, i32) local_unnamed_addr

declare i32 @unknown_2cb45(i32) local_unnamed_addr

declare i32 @unknown_2cc2a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2cc8e(i32) local_unnamed_addr

declare i32 @unknown_2ccbb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2cef0(i32) local_unnamed_addr

declare i32 @unknown_2cefa(i32) local_unnamed_addr

declare i32 @unknown_2cf2a(i32) local_unnamed_addr

declare i32 @unknown_2cf94(i32) local_unnamed_addr

declare i32 @unknown_2cfaa(i32, i32) local_unnamed_addr

declare i32 @unknown_2cfbe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d038(i32) local_unnamed_addr

declare i32 @unknown_2d03c(i32) local_unnamed_addr

declare i32 @unknown_2d04c(i32) local_unnamed_addr

declare i32 @unknown_2d0b8(i32, i32) local_unnamed_addr

declare i32 @unknown_2d0c4(i32) local_unnamed_addr

declare i32 @unknown_2d0eb(i32, i32) local_unnamed_addr

declare i32 @unknown_2d1c6(i32, i32) local_unnamed_addr

declare i32 @unknown_2d2d4(i32) local_unnamed_addr

declare i32 @unknown_2d30a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d32b(i32) local_unnamed_addr

declare i32 @unknown_2d330(i32, i32) local_unnamed_addr

declare i32 @unknown_2d37b() local_unnamed_addr

declare i32 @unknown_2d3fb(i32, i32) local_unnamed_addr

declare i32 @unknown_2d406(i32, i32) local_unnamed_addr

declare i32 @unknown_2d47b(i32, i32) local_unnamed_addr

declare i32 @unknown_2d4e4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d4fc(i32, i32) local_unnamed_addr

declare i32 @unknown_2d64c(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d69b(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d7ba(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2d972(i32) local_unnamed_addr

declare i32 @unknown_2d9de(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2dad6(i32, i32) local_unnamed_addr

declare i32 @unknown_2daea(i32, i32) local_unnamed_addr

declare i32 @unknown_2dbac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2dcb8(i32, i32) local_unnamed_addr

declare i32 @unknown_2dd42(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ddef() local_unnamed_addr

declare i32 @unknown_2de3f(i32, i32) local_unnamed_addr

declare i32 @unknown_2de67(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2df5e() local_unnamed_addr

declare i32 @unknown_2df8e(i32, i32) local_unnamed_addr

declare i32 @unknown_2dfae(i32, i32) local_unnamed_addr

declare i32 @unknown_2dfd0(i32) local_unnamed_addr

declare i32 @unknown_2dfde(i32, i32) local_unnamed_addr

declare i32 @unknown_2e048(i32) local_unnamed_addr

declare i32 @unknown_2e096(i32, i32) local_unnamed_addr

declare i32 @unknown_2e0c2(i32, i32) local_unnamed_addr

declare i32 @unknown_2e0e6(i32, i32) local_unnamed_addr

declare i32 @unknown_2e112(i32, i32) local_unnamed_addr

declare i32 @unknown_2e1cc(i32, i32) local_unnamed_addr

declare i32 @unknown_2e1e6(i32) local_unnamed_addr

declare i32 @unknown_2e220() local_unnamed_addr

declare i32 @unknown_2e22c(i32, i32) local_unnamed_addr

declare i32 @unknown_2e328(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e420(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e47f(i32) local_unnamed_addr

declare i32 @unknown_2e54b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e556(i32) local_unnamed_addr

declare i32 @unknown_2e60c(i32) local_unnamed_addr

declare i32 @unknown_2e628(i32) local_unnamed_addr

declare i32 @unknown_2e6ca(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2e7d0(i32, i32) local_unnamed_addr

declare i32 @unknown_2e892(i32) local_unnamed_addr

declare i32 @unknown_2e8ae(i32) local_unnamed_addr

declare i32 @unknown_2ea00(i32, i32) local_unnamed_addr

declare i32 @unknown_2ead9(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ece8(i32, i32) local_unnamed_addr

declare i32 @unknown_2ed0b() local_unnamed_addr

declare i32 @unknown_2ed48(i32, i32) local_unnamed_addr

declare i32 @unknown_2ed73(i32) local_unnamed_addr

declare i32 @unknown_2ee10(i32) local_unnamed_addr

declare i32 @unknown_2ee3c(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ef30(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ef66(i32, i32) local_unnamed_addr

declare i32 @unknown_2efc8(i32, i32) local_unnamed_addr

declare i32 @unknown_2f010(i32, i32) local_unnamed_addr

declare i32 @unknown_2f09c(i32, i32) local_unnamed_addr

declare i32 @unknown_2f112(i32) local_unnamed_addr

declare i32 @unknown_2f12e(i32) local_unnamed_addr

declare i32 @unknown_2f1bc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f1d0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f2dc(i32, i32) local_unnamed_addr

declare i32 @unknown_2f367(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f3d6(i32, i32) local_unnamed_addr

declare i32 @unknown_2f428(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f510(i32, i32) local_unnamed_addr

declare i32 @unknown_2f526(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f6e8(i32) local_unnamed_addr

declare i32 @unknown_2f710(i32) local_unnamed_addr

declare i32 @unknown_2f715(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f77c(i32) local_unnamed_addr

declare i32 @unknown_2f85e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2f930(i32, i32) local_unnamed_addr

declare i32 @unknown_2f977(i32, i32) local_unnamed_addr

declare i32 @unknown_2f9d8(i32, i32) local_unnamed_addr

declare i32 @unknown_2fa2f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2fa45(i32) local_unnamed_addr

declare i32 @unknown_2fa7f() local_unnamed_addr

declare i32 @unknown_2fa8c(i32, i32) local_unnamed_addr

declare i32 @unknown_2feb1(i32) local_unnamed_addr

declare i32 @unknown_2fec0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_2ffde(i32) local_unnamed_addr

declare i32 @unknown_2fffa(i32) local_unnamed_addr

declare i32 @unknown_30090(i32, i32) local_unnamed_addr

declare i32 @unknown_3009c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30158(i32, i32) local_unnamed_addr

declare i32 @unknown_30183(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3019c(i32) local_unnamed_addr

declare i32 @unknown_301a8(i32, i32) local_unnamed_addr

declare i32 @unknown_3022e(i32, i32) local_unnamed_addr

declare i32 @unknown_30233(i32, i32) local_unnamed_addr

declare i32 @unknown_3026b(i32) local_unnamed_addr

declare i32 @unknown_3029a(i32, i32) local_unnamed_addr

declare i32 @unknown_302c3() local_unnamed_addr

declare i32 @unknown_3032a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_303c3(i32, i32) local_unnamed_addr

declare i32 @unknown_303fc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_303fd(i32) local_unnamed_addr

declare i32 @unknown_30426(i32) local_unnamed_addr

declare i32 @unknown_3049d(i32, i32) local_unnamed_addr

declare i32 @unknown_304bc(i32) local_unnamed_addr

declare i32 @unknown_304d8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3055e(i32) local_unnamed_addr

declare i32 @unknown_305de(i32) local_unnamed_addr

declare i32 @unknown_3061e(i32) local_unnamed_addr

declare i32 @unknown_30654(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_306cc(i32) local_unnamed_addr

declare i32 @unknown_306f9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30760(i32) local_unnamed_addr

declare i32 @unknown_30790(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3080c(i32, i32) local_unnamed_addr

declare i32 @unknown_30862(i32, i32) local_unnamed_addr

declare i32 @unknown_308a9(i32, i32) local_unnamed_addr

declare i32 @unknown_3090a(i32, i32) local_unnamed_addr

declare i32 @unknown_30961(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_309be(i32, i32) local_unnamed_addr

declare i32 @unknown_30d12(i32, i32) local_unnamed_addr

declare i32 @unknown_30d96(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30df8(i32) local_unnamed_addr

declare i32 @unknown_30e7e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_30f66(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31083(i32) local_unnamed_addr

declare i32 @unknown_310bd(i32) local_unnamed_addr

declare i32 @unknown_310c2(i32, i32) local_unnamed_addr

declare i32 @unknown_311c6(i32, i32) local_unnamed_addr

declare i32 @unknown_311cc(i32, i32) local_unnamed_addr

declare i32 @unknown_31216(i32, i32) local_unnamed_addr

declare i32 @unknown_312a0(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31376(i32, i32) local_unnamed_addr

declare i32 @unknown_313e4(i32, i32) local_unnamed_addr

declare i32 @unknown_3141c(i32) local_unnamed_addr

declare i32 @unknown_31525(i32) local_unnamed_addr

declare i32 @unknown_31855(i32, i32) local_unnamed_addr

declare i32 @unknown_318ba(i32) local_unnamed_addr

declare i32 @unknown_31980(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_31a71(i32, i32) local_unnamed_addr

declare i32 @unknown_31a7f(i32) local_unnamed_addr

declare i32 @unknown_31aa9(i32) local_unnamed_addr

declare i32 @unknown_31ad8(i32, i32) local_unnamed_addr

declare i32 @unknown_31c01(i32, i32) local_unnamed_addr

declare i32 @unknown_31cdb(i32, i32) local_unnamed_addr

declare i32 @unknown_31d9c(i32) local_unnamed_addr

declare i32 @unknown_31e87(i32, i32) local_unnamed_addr

declare i32 @unknown_31eaa(i32) local_unnamed_addr

declare i32 @unknown_31f14(i32) local_unnamed_addr

declare i32 @unknown_31f24(i32) local_unnamed_addr

declare i32 @unknown_31fea(i32, i32) local_unnamed_addr

declare i32 @unknown_3206c(i32) local_unnamed_addr

declare i32 @unknown_3209c(i32) local_unnamed_addr

declare i32 @unknown_320cc(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32180(i32) local_unnamed_addr

declare i32 @unknown_32190(i32, i32) local_unnamed_addr

declare i32 @unknown_321f0(i32) local_unnamed_addr

declare i32 @unknown_322f0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3239c(i32) local_unnamed_addr

declare i32 @unknown_323c4(i32, i32) local_unnamed_addr

declare i32 @unknown_32476(i32, i32) local_unnamed_addr

declare i32 @unknown_325c0(i32, i32) local_unnamed_addr

declare i32 @unknown_325fa(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_327f8(i32, i32) local_unnamed_addr

declare i32 @unknown_329ea(i32) local_unnamed_addr

declare i32 @unknown_32a54(i32) local_unnamed_addr

declare i32 @unknown_32a8c(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32abe(i32) local_unnamed_addr

declare i32 @unknown_32afe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32c4a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32c4c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32d4c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_32dc4(i32) local_unnamed_addr

declare i32 @unknown_32f12(i32) local_unnamed_addr

declare i32 @unknown_32faa(i32) local_unnamed_addr

declare i32 @unknown_330b4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3310c(i32) local_unnamed_addr

declare i32 @unknown_331c1(i32) local_unnamed_addr

declare i32 @unknown_331e7(i32) local_unnamed_addr

declare i32 @unknown_331fe(i32) local_unnamed_addr

declare i32 @unknown_33214(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33279(i32, i32) local_unnamed_addr

declare i32 @unknown_332bc(i32) local_unnamed_addr

declare i32 @unknown_332d8(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_332f1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33356(i32) local_unnamed_addr

declare i32 @unknown_333ca(i32, i32) local_unnamed_addr

declare i32 @unknown_33573(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33580(i32, i32) local_unnamed_addr

declare i32 @unknown_335ef(i32, i32) local_unnamed_addr

declare i32 @unknown_3360e(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_337ba(i32) local_unnamed_addr

declare i32 @unknown_33aad(i32, i32) local_unnamed_addr

declare i32 @unknown_33b20(i32, i32) local_unnamed_addr

declare i32 @unknown_33b7e(i32, i32) local_unnamed_addr

declare i32 @unknown_33bc2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_33c20(i32) local_unnamed_addr

declare i32 @unknown_33cb6(i32, i32) local_unnamed_addr

declare i32 @unknown_33e2a(i32) local_unnamed_addr

declare i32 @unknown_33ef4(i32) local_unnamed_addr

declare i32 @unknown_33f35(i32) local_unnamed_addr

declare i32 @unknown_33fb6(i32, i32) local_unnamed_addr

declare i32 @unknown_34070(i32, i32) local_unnamed_addr

declare i32 @unknown_340ee(i32, i32) local_unnamed_addr

declare i32 @unknown_34208(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3421c(i32, i32) local_unnamed_addr

declare i32 @unknown_342a6(i32, i32) local_unnamed_addr

declare i32 @unknown_3442b(i32) local_unnamed_addr

declare i32 @unknown_34498(i32) local_unnamed_addr

declare i32 @unknown_344f8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34532(i32, i32) local_unnamed_addr

declare i32 @unknown_3458e(i32, i32) local_unnamed_addr

declare i32 @unknown_34628(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_346be(i32, i32) local_unnamed_addr

declare i32 @unknown_34728(i32, i32) local_unnamed_addr

declare i32 @unknown_34756() local_unnamed_addr

declare i32 @unknown_34792(i32, i32) local_unnamed_addr

declare i32 @unknown_347ab(i32) local_unnamed_addr

declare i32 @unknown_347e5() local_unnamed_addr

declare i32 @unknown_34814() local_unnamed_addr

declare i32 @unknown_3491e(i32) local_unnamed_addr

declare i32 @unknown_3492f(i32) local_unnamed_addr

declare i32 @unknown_34932() local_unnamed_addr

declare i32 @unknown_34986() local_unnamed_addr

declare i32 @unknown_34a98(i32, i32) local_unnamed_addr

declare i32 @unknown_34aa4(i32) local_unnamed_addr

declare i32 @unknown_34b76(i32, i32) local_unnamed_addr

declare i32 @unknown_34bb1(i32, i32) local_unnamed_addr

declare i32 @unknown_34bee(i32, i32) local_unnamed_addr

declare i32 @unknown_34c18(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34c3c(i32, i32) local_unnamed_addr

declare i32 @unknown_34cd4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34de4(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34ec6(i32) local_unnamed_addr

declare i32 @unknown_34f4e(i32) local_unnamed_addr

declare i32 @unknown_34fae(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35044(i32, i32) local_unnamed_addr

declare i32 @unknown_350de(i32) local_unnamed_addr

declare i32 @unknown_35150(i32, i32) local_unnamed_addr

declare i32 @unknown_35166(i32) local_unnamed_addr

declare i32 @unknown_351c5(i32, i32) local_unnamed_addr

declare i32 @unknown_35237(i32, i32) local_unnamed_addr

declare i32 @unknown_3523c(i32, i32) local_unnamed_addr

declare i32 @unknown_35287() local_unnamed_addr

declare i32 @unknown_352d7() local_unnamed_addr

declare i32 @unknown_3548e(i32, i32) local_unnamed_addr

declare i32 @unknown_354ca(i32) local_unnamed_addr

declare i32 @unknown_354cc(i32, i32) local_unnamed_addr

declare i32 @unknown_3556e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35623(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_357b0(i32) local_unnamed_addr

declare i32 @unknown_35838(i32) local_unnamed_addr

declare i32 @unknown_35898(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3592e(i32, i32) local_unnamed_addr

declare i32 @unknown_359c6(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35a5a(i32) local_unnamed_addr

declare i32 @unknown_35a73(i32, i32) local_unnamed_addr

declare i32 @unknown_35b5d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35c6c(i32) local_unnamed_addr

declare i32 @unknown_35ca1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35d10(i32, i32) local_unnamed_addr

declare i32 @unknown_35daa(i32, i32) local_unnamed_addr

declare i32 @unknown_35df4(i32, i32) local_unnamed_addr

declare i32 @unknown_35e44(i32) local_unnamed_addr

declare i32 @unknown_35f36(i32) local_unnamed_addr

declare i32 @unknown_35fd5(i32, i32) local_unnamed_addr

declare i32 @unknown_360ee(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36151(i32) local_unnamed_addr

declare i32 @unknown_361a9(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_362d1(i32, i32) local_unnamed_addr

declare i32 @unknown_36396(i32) local_unnamed_addr

declare i32 @unknown_3641e(i32) local_unnamed_addr

declare i32 @unknown_3647e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36514(i32, i32) local_unnamed_addr

declare i32 @unknown_3656c(i32) local_unnamed_addr

declare i32 @unknown_365a4(i32) local_unnamed_addr

declare i32 @unknown_36688(i32) local_unnamed_addr

declare i32 @unknown_36736(i32) local_unnamed_addr

declare i32 @unknown_3676b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36874(i32) local_unnamed_addr

declare i32 @unknown_36989(i32, i32) local_unnamed_addr

declare i32 @unknown_36a2c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36a67() local_unnamed_addr

declare i32 @unknown_36ade(i32) local_unnamed_addr

declare i32 @unknown_36ae8(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36ba3(i32) local_unnamed_addr

declare i32 @unknown_36c10(i32, i32) local_unnamed_addr

declare i32 @unknown_36c72(i32) local_unnamed_addr

declare i32 @unknown_36d64(i32, i32) local_unnamed_addr

declare i32 @unknown_36e22(i32, i32) local_unnamed_addr

declare i32 @unknown_36efe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36fa8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3700f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3712a(i32) local_unnamed_addr

declare i32 @unknown_371a3(i32) local_unnamed_addr

declare i32 @unknown_37268(i32, i32) local_unnamed_addr

declare i32 @unknown_37284(i32) local_unnamed_addr

declare i32 @unknown_37306(i32, i32) local_unnamed_addr

declare i32 @unknown_37528(i32, i32) local_unnamed_addr

declare i32 @unknown_37560(i32, i32) local_unnamed_addr

declare i32 @unknown_37622(i32, i32) local_unnamed_addr

declare i32 @unknown_376a3() local_unnamed_addr

declare i32 @unknown_376dd() local_unnamed_addr

declare i32 @unknown_3779c(i32) local_unnamed_addr

declare i32 @unknown_377cc(i32) local_unnamed_addr

declare i32 @unknown_377cf(i32, i32) local_unnamed_addr

declare i32 @unknown_378b0(i32) local_unnamed_addr

declare i32 @unknown_378e0(i32, i32) local_unnamed_addr

declare i32 @unknown_37958(i32) local_unnamed_addr

declare i32 @unknown_37988(i32) local_unnamed_addr

declare i32 @unknown_379b8(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_379fa(i32) local_unnamed_addr

declare i32 @unknown_37a5a(i32, i32) local_unnamed_addr

declare i32 @unknown_37abe(i32) local_unnamed_addr

declare i32 @unknown_37ac0(i32) local_unnamed_addr

declare i32 @unknown_37b1e(i32, i32) local_unnamed_addr

declare i32 @unknown_37bc1(i32, i32) local_unnamed_addr

declare i32 @unknown_37bc2(i32) local_unnamed_addr

declare i32 @unknown_37bda(i32) local_unnamed_addr

declare i32 @unknown_37c0a(i32) local_unnamed_addr

declare i32 @unknown_37c16(i32) local_unnamed_addr

declare i32 @unknown_37c3a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37c41(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37c50(i32) local_unnamed_addr

declare i32 @unknown_37d3c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37e9a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37f40(i32) local_unnamed_addr

declare i32 @unknown_37f70(i32) local_unnamed_addr

declare i32 @unknown_37fb0(i32) local_unnamed_addr

declare i32 @unknown_37fe2() local_unnamed_addr

declare i32 @unknown_37ff0(i32, i32) local_unnamed_addr

declare i32 @unknown_382d6(i32) local_unnamed_addr

declare i32 @unknown_383c0(i32) local_unnamed_addr

declare i32 @unknown_38455(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_384bd(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38598() local_unnamed_addr

declare i32 @unknown_385cb(i32, i32) local_unnamed_addr

declare i32 @unknown_385ec(i32) local_unnamed_addr

declare i32 @unknown_386b4(i32, i32) local_unnamed_addr

declare i32 @unknown_386e9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38764(i32) local_unnamed_addr

declare i32 @unknown_38808(i32, i32) local_unnamed_addr

declare i32 @unknown_3883d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_389b1(i32) local_unnamed_addr

declare i32 @unknown_38a13(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38a2a(i32, i32) local_unnamed_addr

declare i32 @unknown_38a9e(i32) local_unnamed_addr

declare i32 @unknown_38b53(i32) local_unnamed_addr

declare i32 @unknown_38b88(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38c69(i32) local_unnamed_addr

declare i32 @unknown_38c96(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38d41(i32) local_unnamed_addr

declare i32 @unknown_38e48(i32, i32) local_unnamed_addr

declare i32 @unknown_38eba(i32) local_unnamed_addr

declare i32 @unknown_38f81(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39069(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_390e9(i32) local_unnamed_addr

declare i32 @unknown_3924f(i32, i32) local_unnamed_addr

declare i32 @unknown_39284(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_392ad(i32, i32) local_unnamed_addr

declare i32 @unknown_3932c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_394ba(i32) local_unnamed_addr

declare i32 @unknown_3951f(i32) local_unnamed_addr

declare i32 @unknown_395ec(i32) local_unnamed_addr

declare i32 @unknown_39619(i32) local_unnamed_addr

declare i32 @unknown_39856(i32, i32) local_unnamed_addr

declare i32 @unknown_39882(i32) local_unnamed_addr

declare i32 @unknown_3989a(i32) local_unnamed_addr

declare i32 @unknown_398c8(i32) local_unnamed_addr

declare i32 @unknown_3995c(i32, i32) local_unnamed_addr

declare i32 @unknown_3999c(i32) local_unnamed_addr

declare i32 @unknown_39a5b(i32) local_unnamed_addr

declare i32 @unknown_39a98(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39acc(i32) local_unnamed_addr

declare i32 @unknown_39b8a(i32) local_unnamed_addr

declare i32 @unknown_39c55(i32) local_unnamed_addr

declare i32 @unknown_39c82(i32) local_unnamed_addr

declare i32 @unknown_39cff(i32) local_unnamed_addr

declare i32 @unknown_39d0e(i32) local_unnamed_addr

declare i32 @unknown_39d4d(i32) local_unnamed_addr

declare i32 @unknown_39d9c(i32, i32) local_unnamed_addr

declare i32 @unknown_39dc8(i32, i32) local_unnamed_addr

declare i32 @unknown_39e18(i32, i32) local_unnamed_addr

declare i32 @unknown_39e30(i32) local_unnamed_addr

declare i32 @unknown_39ef6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39fba(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a04c(i32, i32) local_unnamed_addr

declare i32 @unknown_3a050(i32, i32) local_unnamed_addr

declare i32 @unknown_3a07a(i32, i32) local_unnamed_addr

declare i32 @unknown_3a07e(i32) local_unnamed_addr

declare i32 @unknown_3a0b4(i32) local_unnamed_addr

declare i32 @unknown_3a0ec(i32) local_unnamed_addr

declare i32 @unknown_3a152(i32, i32) local_unnamed_addr

declare i32 @unknown_3a186(i32) local_unnamed_addr

declare i32 @unknown_3a1b6(i32) local_unnamed_addr

declare i32 @unknown_3a208(i32, i32) local_unnamed_addr

declare i32 @unknown_3a29a(i32, i32) local_unnamed_addr

declare i32 @unknown_3a32a(i32) local_unnamed_addr

declare i32 @unknown_3a332(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a346(i32) local_unnamed_addr

declare i32 @unknown_3a411(i32) local_unnamed_addr

declare i32 @unknown_3a43e(i32) local_unnamed_addr

declare i32 @unknown_3a4c9(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a54e(i32, i32) local_unnamed_addr

declare i32 @unknown_3a9be(i32) local_unnamed_addr

declare i32 @unknown_3aaa6(i32) local_unnamed_addr

declare i32 @unknown_3aad8(i32) local_unnamed_addr

declare i32 @unknown_3ac34(i32) local_unnamed_addr

declare i32 @unknown_3acc3(i32) local_unnamed_addr

declare i32 @unknown_3ad25(i32) local_unnamed_addr

declare i32 @unknown_3ad5a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ae6a(i32, i32) local_unnamed_addr

declare i32 @unknown_3aee4(i32, i32) local_unnamed_addr

declare i32 @unknown_3afba(i32) local_unnamed_addr

declare i32 @unknown_3aff8(i32) local_unnamed_addr

declare i32 @unknown_3b014(i32) local_unnamed_addr

declare i32 @unknown_3b08b(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b18a(i32) local_unnamed_addr

declare i32 @unknown_3b30d(i32) local_unnamed_addr

declare i32 @unknown_3b36f(i32) local_unnamed_addr

declare i32 @unknown_3b3a4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b466(i32) local_unnamed_addr

declare i32 @unknown_3b46a(i32) local_unnamed_addr

declare i32 @unknown_3b498(i32) local_unnamed_addr

declare i32 @unknown_3b4ca(i32) local_unnamed_addr

declare i32 @unknown_3b4d6(i32) local_unnamed_addr

declare i32 @unknown_3b522(i32) local_unnamed_addr

declare i32 @unknown_3b56a(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b58a(i32, i32) local_unnamed_addr

declare i32 @unknown_3b60e(i32, i32) local_unnamed_addr

declare i32 @unknown_3b752(i32, i32) local_unnamed_addr

declare i32 @unknown_3b778(i32) local_unnamed_addr

declare i32 @unknown_3b7c4(i32, i32) local_unnamed_addr

declare i32 @unknown_3b7d8(i32) local_unnamed_addr

declare i32 @unknown_3b818(i32) local_unnamed_addr

declare i32 @unknown_3b852(i32) local_unnamed_addr

declare i32 @unknown_3b881(i32, i32) local_unnamed_addr

declare i32 @unknown_3b898(i32) local_unnamed_addr

declare i32 @unknown_3b8db(i32, i32) local_unnamed_addr

declare i32 @unknown_3b957(i32) local_unnamed_addr

declare i32 @unknown_3b9bd(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ba19(i32, i32) local_unnamed_addr

declare i32 @unknown_3bbe2(i32) local_unnamed_addr

declare i32 @unknown_3bdfe(i32) local_unnamed_addr

declare i32 @unknown_3bf8e(i32, i32) local_unnamed_addr

declare i32 @unknown_3c02c(i32, i32) local_unnamed_addr

declare i32 @unknown_3c064(i32, i32) local_unnamed_addr

declare i32 @unknown_3c06a(i32, i32) local_unnamed_addr

declare i32 @unknown_3c1b0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c292(i32, i32) local_unnamed_addr

declare i32 @unknown_3c2ca(i32, i32) local_unnamed_addr

declare i32 @unknown_3c38c(i32) local_unnamed_addr

declare i32 @unknown_3c3ca(i32) local_unnamed_addr

declare i32 @unknown_3c524(i32) local_unnamed_addr

declare i32 @unknown_3c554(i32) local_unnamed_addr

declare i32 @unknown_3c6d0(i32, i32) local_unnamed_addr

declare i32 @unknown_3c772(i32) local_unnamed_addr

declare i32 @unknown_3c7a2(i32) local_unnamed_addr

declare i32 @unknown_3c890(i32, i32) local_unnamed_addr

declare i32 @unknown_3c8da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c926(i32) local_unnamed_addr

declare i32 @unknown_3c9d4(i32) local_unnamed_addr

declare i32 @unknown_3cc00(i32) local_unnamed_addr

declare i32 @unknown_3cc62(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3cd26(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ce25() local_unnamed_addr

declare i32 @unknown_3ce72(i32) local_unnamed_addr

declare i32 @unknown_3ce75(i32, i32) local_unnamed_addr

declare i32 @unknown_3ce8c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ce95(i32, i32) local_unnamed_addr

declare i32 @unknown_3cee5() local_unnamed_addr

declare i32 @unknown_3cf35() local_unnamed_addr

declare i32 @unknown_3cf9f() local_unnamed_addr

declare i32 @unknown_3cfc0(i32, i32) local_unnamed_addr

declare i32 @unknown_3cfef(i32, i32) local_unnamed_addr

declare i32 @unknown_3d085(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d08d(i32) local_unnamed_addr

declare i32 @unknown_3d0ba(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d149(i32) local_unnamed_addr

declare i32 @unknown_3d1ab(i32) local_unnamed_addr

declare i32 @unknown_3d1c9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d1f6(i32, i32) local_unnamed_addr

declare i32 @unknown_3d227() local_unnamed_addr

declare i32 @unknown_3d261() local_unnamed_addr

declare i32 @unknown_3d58d(i32) local_unnamed_addr

declare i32 @unknown_3d87c(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3db87(i32) local_unnamed_addr

declare i32 @unknown_3dd39(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dda6(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3de13(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3de80(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3deed(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3df5a(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dfc7(i32, i32) local_unnamed_addr

declare i32 @unknown_3e08d(i32) local_unnamed_addr

declare i32 @unknown_3e615(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e6e6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e7a8(i32, i32) local_unnamed_addr

declare i32 @unknown_3e90c(i32) local_unnamed_addr

declare i32 @unknown_3e940(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3eb24(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3eb36(i32) local_unnamed_addr

declare i32 @unknown_3ec44() local_unnamed_addr

declare i32 @unknown_3ec51(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ec9c(i32) local_unnamed_addr

declare i32 @unknown_3ecda(i32, i32) local_unnamed_addr

declare i32 @unknown_3ed52(i32) local_unnamed_addr

declare i32 @unknown_3ee60(i32) local_unnamed_addr

declare i32 @unknown_3eec2(i32) local_unnamed_addr

declare i32 @unknown_3eef6(i32) local_unnamed_addr

declare i32 @unknown_3ef92(i32) local_unnamed_addr

declare i32 @unknown_3f027(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f094(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f101(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f16e(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f1db(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f248(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f2a7(i32) local_unnamed_addr

declare i32 @unknown_3f2b5(i32) local_unnamed_addr

declare i32 @unknown_3f782(i32) local_unnamed_addr

declare i32 @unknown_3f7af(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f8a0(i32, i32) local_unnamed_addr

declare i32 @unknown_3f8d8(i32, i32) local_unnamed_addr

declare i32 @unknown_3f9d2(i32, i32) local_unnamed_addr

declare i32 @unknown_3fab4(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fd7e(i32) local_unnamed_addr

declare i32 @unknown_3fdc2(i32, i32) local_unnamed_addr

declare i32 @unknown_3fe70(i32) local_unnamed_addr

declare i32 @unknown_4008a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_401fc(i32) local_unnamed_addr

declare i32 @unknown_40218(i32) local_unnamed_addr

declare i32 @unknown_40242(i32, i32) local_unnamed_addr

declare i32 @unknown_40245(i32) local_unnamed_addr

declare i32 @unknown_40292(i32) local_unnamed_addr

declare i32 @unknown_402c4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_402c7(i32) local_unnamed_addr

declare i32 @unknown_402f4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40555(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40716(i32, i32) local_unnamed_addr

declare i32 @unknown_4080e(i32) local_unnamed_addr

declare i32 @unknown_408e2(i32, i32) local_unnamed_addr

declare i32 @unknown_40926(i32, i32) local_unnamed_addr

declare i32 @unknown_40976(i32, i32) local_unnamed_addr

declare i32 @unknown_40a7d(i32) local_unnamed_addr

declare i32 @unknown_40b4f(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40c21(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40cf3(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40dc5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40e97(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_410a8(i32, i32) local_unnamed_addr

declare i32 @unknown_410b4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41139(i32, i32) local_unnamed_addr

declare i32 @unknown_4113e(i32, i32) local_unnamed_addr

declare i32 @unknown_411ac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_411fe(i32) local_unnamed_addr

declare i32 @unknown_41244(i32, i32) local_unnamed_addr

declare i32 @unknown_4153a(i32) local_unnamed_addr

declare i32 @unknown_415d6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41648(i32) local_unnamed_addr

declare i32 @unknown_4167c(i32, i32) local_unnamed_addr

declare i32 @unknown_416cc(i32) local_unnamed_addr

declare i32 @unknown_4171c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41756(i32) local_unnamed_addr

declare i32 @unknown_41864(i32) local_unnamed_addr

declare i32 @unknown_41878(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_418fa(i32) local_unnamed_addr

declare i32 @unknown_4194a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41996(i32) local_unnamed_addr

declare i32 @unknown_41a1c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41bc0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41c92(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41e5d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_424de(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4254b(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_425b8(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42625(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42692(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_426ff(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4276c(i32, i32) local_unnamed_addr

declare i32 @unknown_427c6(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42d57(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_430fc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4320e(i32, i32) local_unnamed_addr

declare i32 @unknown_432f8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4331c(i32, i32) local_unnamed_addr

declare i32 @unknown_4339c(i32) local_unnamed_addr

declare i32 @unknown_433ca(i32, i32) local_unnamed_addr

declare i32 @unknown_4342a(i32, i32) local_unnamed_addr

declare i32 @unknown_43456() local_unnamed_addr

declare i32 @unknown_43506(i32, i32) local_unnamed_addr

declare i32 @unknown_43538(i32, i32) local_unnamed_addr

declare i32 @unknown_43566(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_435ce(i32, i32) local_unnamed_addr

declare i32 @unknown_435f1(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4365b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4366a(i32, i32) local_unnamed_addr

declare i32 @unknown_4378c() local_unnamed_addr

declare i32 @unknown_437e1() local_unnamed_addr

declare i32 @unknown_4381b() local_unnamed_addr

declare i32 @unknown_43828(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43973() local_unnamed_addr

declare i32 @unknown_439b3() local_unnamed_addr

declare i32 @unknown_43ae9(i32) local_unnamed_addr

declare i32 @unknown_43b17(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43bbd(i32) local_unnamed_addr

declare i32 @unknown_43bea(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43c9c(i32, i32) local_unnamed_addr

declare i32 @unknown_43cbd(i32, i32) local_unnamed_addr

declare i32 @unknown_43d63(i32) local_unnamed_addr

declare i32 @unknown_43d90(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43dec(i32, i32) local_unnamed_addr

declare i32 @unknown_43e2b(i32) local_unnamed_addr

declare i32 @unknown_43e59(i32, i32) local_unnamed_addr

declare i32 @unknown_43ef4(i32) local_unnamed_addr

declare i32 @unknown_43f22(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43ff4(i32) local_unnamed_addr

declare i32 @unknown_440e6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_440f4(i32, i32) local_unnamed_addr

declare i32 @unknown_4421a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44378(i32, i32) local_unnamed_addr

declare i32 @unknown_4443d(i32) local_unnamed_addr

declare i32 @unknown_4447e(i32, i32) local_unnamed_addr

declare i32 @unknown_444ce(i32, i32) local_unnamed_addr

declare i32 @unknown_445fc(i32) local_unnamed_addr

declare i32 @unknown_44629(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4465c(i32) local_unnamed_addr

declare i32 @unknown_4470f() local_unnamed_addr

declare i32 @unknown_44711(i32) local_unnamed_addr

declare i32 @unknown_4473e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44826(i32) local_unnamed_addr

declare i32 @unknown_44853(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4493b(i32) local_unnamed_addr

declare i32 @unknown_44968(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44a24(i32) local_unnamed_addr

declare i32 @unknown_44a51(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44ae8(i32, i32) local_unnamed_addr

declare i32 @unknown_44b14(i32) local_unnamed_addr

declare i32 @unknown_44b42(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44bfd(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44cf8(i32) local_unnamed_addr

declare i32 @unknown_44f51(i32) local_unnamed_addr

declare i32 @unknown_45004(i32) local_unnamed_addr

declare i32 @unknown_4519d(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_451a4() local_unnamed_addr

declare i32 @unknown_4520a(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45277(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_452e4(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45351(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_453be(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4542b(i32, i32) local_unnamed_addr

declare i32 @unknown_45485() local_unnamed_addr

declare i32 @unknown_454cc(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45a17(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45a62(i32) local_unnamed_addr

declare i32 @unknown_45ae9(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45bbb(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45c8d() local_unnamed_addr

declare i32 @unknown_45d5f(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45e19(i32, i32) local_unnamed_addr

declare i32 @unknown_45e31(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45fc4(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46031(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4609e(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4610b(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46178(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_461c8(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_461d4(i32, i32) local_unnamed_addr

declare i32 @unknown_461e5(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46252(i32, i32) local_unnamed_addr

declare i32 @unknown_462ac(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46356(i32, i32) local_unnamed_addr

declare i32 @unknown_463d6(i32, i32) local_unnamed_addr

declare i32 @unknown_464c4(i32, i32) local_unnamed_addr

declare i32 @unknown_4664c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46751(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46823(i32) local_unnamed_addr

declare i32 @unknown_46840(i32) local_unnamed_addr

declare i32 @unknown_468fc(i32) local_unnamed_addr

declare i32 @unknown_46a29() local_unnamed_addr

declare i32 @unknown_46a37(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46ba0(i32) local_unnamed_addr

declare i32 @unknown_46c86(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46cb5(i32) local_unnamed_addr

declare i32 @unknown_46dca(i32) local_unnamed_addr

declare i32 @unknown_46e29(i32) local_unnamed_addr

declare i32 @unknown_46e88(i32) local_unnamed_addr

declare i32 @unknown_46edf(i32) local_unnamed_addr

declare i32 @unknown_46f2e(i32) local_unnamed_addr

declare i32 @unknown_46fc8(i32) local_unnamed_addr

declare i32 @unknown_4702f(i32, i32) local_unnamed_addr

declare i32 @unknown_47053(i32) local_unnamed_addr

declare i32 @unknown_470b8(i32) local_unnamed_addr

declare i32 @unknown_47108(i32, i32) local_unnamed_addr

declare i32 @unknown_47116(i32) local_unnamed_addr

declare i32 @unknown_47176(i32, i32) local_unnamed_addr

declare i32 @unknown_47288(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47828(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47dc8(i32, i32) local_unnamed_addr

declare i32 @unknown_47ea4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48092(i32, i32) local_unnamed_addr

declare i32 @unknown_481bc(i32, i32) local_unnamed_addr

declare i32 @unknown_483f7(i32) local_unnamed_addr

declare i32 @unknown_4844b(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_484b8(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4850c(i32) local_unnamed_addr

declare i32 @unknown_48525(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48592(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_485ff(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48621(i32) local_unnamed_addr

declare i32 @unknown_4866c(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_486d9(i32) local_unnamed_addr

declare i32 @unknown_48733(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48736(i32) local_unnamed_addr

declare i32 @unknown_4881f(i32) local_unnamed_addr

declare i32 @unknown_4882d(i32) local_unnamed_addr

declare i32 @unknown_4890f(i32) local_unnamed_addr

declare i32 @unknown_48942(i32) local_unnamed_addr

declare i32 @unknown_48b6c(i32) local_unnamed_addr

declare i32 @unknown_48c55(i32) local_unnamed_addr

declare i32 @unknown_48cc6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48d1f(i32) local_unnamed_addr

declare i32 @unknown_48d45(i32) local_unnamed_addr

declare i32 @unknown_48d4c(i32) local_unnamed_addr

declare i32 @unknown_48d98(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48e6a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48f3c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4900e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_490af(i32) local_unnamed_addr

declare i32 @unknown_490e0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49273(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49322(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_493df(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4949c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_494bf(i32) local_unnamed_addr

declare i32 @unknown_494de(i32) local_unnamed_addr

declare i32 @unknown_4954b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_495f3(i32) local_unnamed_addr

declare i32 @unknown_495fa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_496a9(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49708(i32) local_unnamed_addr

declare i32 @unknown_4977b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4981d(i32) local_unnamed_addr

declare i32 @unknown_4984d(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49906(i32) local_unnamed_addr

declare i32 @unknown_499f1(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_499f6(i32) local_unnamed_addr

declare i32 @unknown_49ac3(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49cb0(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49d30(i32) local_unnamed_addr

declare i32 @unknown_49d62(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49dca(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49e04(i32) local_unnamed_addr

declare i32 @unknown_49f3c(i32) local_unnamed_addr

declare i32 @unknown_49faa(i32) local_unnamed_addr

declare i32 @unknown_49fba(i32) local_unnamed_addr

declare i32 @unknown_4a038(i32) local_unnamed_addr

declare i32 @unknown_4a072(i32) local_unnamed_addr

declare i32 @unknown_4a0db(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a13b(i32) local_unnamed_addr

declare i32 @unknown_4a1bd(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a22a(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a304(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a371(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a3de(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a44b(i32, i32) local_unnamed_addr

declare i32 @unknown_4a4af(i32) local_unnamed_addr

declare i32 @unknown_4a610(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a6d9(i32) local_unnamed_addr

declare i32 @unknown_4a6ea(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a7ee(i32) local_unnamed_addr

declare i32 @unknown_4a8d7() local_unnamed_addr

declare i32 @unknown_4a9c7(i32) local_unnamed_addr

declare i32 @unknown_4aa38(i32, i32) local_unnamed_addr

declare i32 @unknown_4aaa5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ab12(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ab7f() local_unnamed_addr

declare i32 @unknown_4abec(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ac59(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4acc6(i32, i32) local_unnamed_addr

declare i32 @unknown_4ad20(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b2b4(i32, i32) local_unnamed_addr

declare i32 @unknown_4b2f0(i32, i32) local_unnamed_addr

declare i32 @unknown_4b326(i32, i32) local_unnamed_addr

declare i32 @unknown_4b340(i32) local_unnamed_addr

declare i32 @unknown_4b37a(i32) local_unnamed_addr

declare i32 @unknown_4b4a6(i32) local_unnamed_addr

declare i32 @unknown_4b50a(i32) local_unnamed_addr

declare i32 @unknown_4b556(i32) local_unnamed_addr

declare i32 @unknown_4b5de(i32) local_unnamed_addr

declare i32 @unknown_4b604(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b6b1(i32) local_unnamed_addr

declare i32 @unknown_4b6d6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b784(i32) local_unnamed_addr

declare i32 @unknown_4b7a8(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b84c(i32) local_unnamed_addr

declare i32 @unknown_4b87a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b915(i32) local_unnamed_addr

declare i32 @unknown_4b94c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ba1e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ba22(i32) local_unnamed_addr

declare i32 @unknown_4bb90(i32) local_unnamed_addr

declare i32 @unknown_4bc1e(i32) local_unnamed_addr

declare i32 @unknown_4bc61() local_unnamed_addr

declare i32 @unknown_4bd1e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bddb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4be8a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bf39(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bfe8(i32, i32) local_unnamed_addr

declare i32 @unknown_4c06e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c110(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c1b2(i32, i32) local_unnamed_addr

declare i32 @unknown_4c232(i32, i32) local_unnamed_addr

declare i32 @unknown_4c2b2(i32, i32) local_unnamed_addr

declare i32 @unknown_4c332(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c3e1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c49e(i32, i32) local_unnamed_addr

declare i32 @unknown_4c55b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c60a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c6b9(i32, i32) local_unnamed_addr

declare i32 @unknown_4c7be(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c889(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ca15(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4cc78(i32) local_unnamed_addr

declare i32 @unknown_4cd06(i32) local_unnamed_addr

declare i32 @unknown_4cfb5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4cfc2(i32) local_unnamed_addr

declare i32 @unknown_4d050(i32) local_unnamed_addr

declare i32 @unknown_4d087(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d159(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d22b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d2fd(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d30d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d3cf(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d562(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d634(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d706(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d7d8(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d8aa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d97c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4db40(i32) local_unnamed_addr

declare i32 @unknown_4dc2c(i32) local_unnamed_addr

declare i32 @unknown_4dc92(i32) local_unnamed_addr

declare i32 @unknown_4dcf7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4dd64(i32) local_unnamed_addr

declare i32 @unknown_4dda6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4de63(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4de66(i32, i32) local_unnamed_addr

declare i32 @unknown_4df20(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4dfcf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4dfee(i32, i32) local_unnamed_addr

declare i32 @unknown_4e07e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e12e(i32, i32) local_unnamed_addr

declare i32 @unknown_4e1ae(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e250(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e2f2(i32, i32) local_unnamed_addr

declare i32 @unknown_4e372(i32, i32) local_unnamed_addr

declare i32 @unknown_4e477() local_unnamed_addr

declare i32 @unknown_4e50a(i32, i32) local_unnamed_addr

declare i32 @unknown_4e58a(i32, i32) local_unnamed_addr

declare i32 @unknown_4e6ac(i32, i32) local_unnamed_addr

declare i32 @unknown_4e72c(i32) local_unnamed_addr

declare i32 @unknown_4e7ce(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e870(i32, i32) local_unnamed_addr

declare i32 @unknown_4e8f6(i32, i32) local_unnamed_addr

declare i32 @unknown_4e976(i32, i32) local_unnamed_addr

declare i32 @unknown_4e9f5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4eb32(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ec6f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ecdc(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ed49(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4edb6(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ee23(i32, i32) local_unnamed_addr

declare i32 @unknown_4ee90(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4eefd(i32, i32) local_unnamed_addr

declare i32 @unknown_4ef57(i32) local_unnamed_addr

declare i32 @unknown_4f17a(i32) local_unnamed_addr

declare i32 @unknown_4f1fe(i32) local_unnamed_addr

declare i32 @unknown_4f4ea(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f599(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f648(i32, i32) local_unnamed_addr

declare i32 @unknown_4f6f7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f7a0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f84d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f8f4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f9b3(i32, i32) local_unnamed_addr

declare i32 @unknown_4fa72(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fb31(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fbf0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fcaf(i32, i32) local_unnamed_addr

declare i32 @unknown_4fdfc(i32, i32) local_unnamed_addr

declare i32 @unknown_4ff1e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ffc0(i32, i32) local_unnamed_addr

declare i32 @unknown_50040(i32, i32) local_unnamed_addr

declare i32 @unknown_500c6(i32, i32) local_unnamed_addr

declare i32 @unknown_5017c(i32, i32) local_unnamed_addr

declare i32 @unknown_502e7(i32) local_unnamed_addr

declare i32 @unknown_50379(i32, i32) local_unnamed_addr

declare i32 @unknown_503b1(i32) local_unnamed_addr

declare i32 @unknown_503e0(i32, i32) local_unnamed_addr

declare i32 @unknown_5050c(i32, i32) local_unnamed_addr

declare i32 @unknown_5058c(i32, i32) local_unnamed_addr

declare i32 @unknown_5060b(i32) local_unnamed_addr

declare i32 @unknown_50709() local_unnamed_addr

declare i32 @unknown_5083f() local_unnamed_addr

declare i32 @unknown_50975(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50a47(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50b19(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50cbd(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50d8f(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50f6c(i32, i32) local_unnamed_addr

declare i32 @unknown_5116a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_512d2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5143a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_515a2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51692(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51788(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_518ac(i32, i32) local_unnamed_addr

declare i32 @unknown_5192c(i32, i32) local_unnamed_addr

declare i32 @unknown_519e1(i32) local_unnamed_addr

declare i32 @unknown_51b4d(i32) local_unnamed_addr

declare i32 @unknown_51b7c(i32, i32) local_unnamed_addr

declare i32 @unknown_51d0b(i32, i32) local_unnamed_addr

declare i32 @unknown_51d43(i32) local_unnamed_addr

declare i32 @unknown_51d72(i32, i32) local_unnamed_addr

declare i32 @unknown_51dfc(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51f2c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5202e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_520dd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5219a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52257(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5230c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_523bb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5246a(i32, i32) local_unnamed_addr

declare i32 @unknown_52502(i32) local_unnamed_addr

declare i32 @unknown_527ba(i32) local_unnamed_addr

declare i32 @unknown_52b2d(i32) local_unnamed_addr

declare i32 @unknown_52b5c(i32, i32) local_unnamed_addr

declare i32 @unknown_52d1a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52d82(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52e56(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52ebe() local_unnamed_addr

declare i32 @unknown_53020(i32) local_unnamed_addr

declare i32 @unknown_53056(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_530f8(i32) local_unnamed_addr

declare i32 @unknown_5312e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_531b4(i32) local_unnamed_addr

declare i32 @unknown_5327e(i32) local_unnamed_addr

declare i32 @unknown_532b4(i32, i32) local_unnamed_addr

declare i32 @unknown_53596(i32, i32) local_unnamed_addr

declare i32 @unknown_53915() local_unnamed_addr

declare i32 @unknown_539d9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53a9d(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53b6c(i32) local_unnamed_addr

declare i32 @unknown_53c1c(i32) local_unnamed_addr

declare i32 @unknown_53ccc(i32) local_unnamed_addr

declare i32 @unknown_53d12(i32) local_unnamed_addr

declare i32 @unknown_53dcc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53e5a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53ea2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_541a0(i32) local_unnamed_addr

declare i32 @unknown_541e6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_542a0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5432e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54376(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54677(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54772(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_549ee(i32, i32) local_unnamed_addr

declare i32 @unknown_54a38(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54b58(i32, i32) local_unnamed_addr

declare i32 @unknown_54be2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54dba(i32, i32) local_unnamed_addr

declare i32 @unknown_54e04(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54f24() local_unnamed_addr

declare i32 @unknown_54fae(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55125(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_552be(i32) local_unnamed_addr

declare i32 @unknown_552f3(i32) local_unnamed_addr

declare i32 @unknown_55328(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5540d(i32, i32) local_unnamed_addr

declare i32 @unknown_554bd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55582(i32, i32) local_unnamed_addr

declare i32 @unknown_55609(i32) local_unnamed_addr

declare i32 @unknown_5563e(i32) local_unnamed_addr

declare i32 @unknown_55673(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55758() local_unnamed_addr

declare i32 @unknown_55808(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_559b9(i32) local_unnamed_addr

declare i32 @unknown_55a25(i32) local_unnamed_addr

declare i32 @unknown_55a91(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55b60(i32, i32) local_unnamed_addr

declare i32 @unknown_55bb5(i32) local_unnamed_addr

declare i32 @unknown_55c5d(i32) local_unnamed_addr

declare i32 @unknown_55d69(i32) local_unnamed_addr

declare i32 @unknown_55dd5(i32) local_unnamed_addr

declare i32 @unknown_55e41(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55f10(i32, i32) local_unnamed_addr

declare i32 @unknown_5655e(i32) local_unnamed_addr

define i32 @function_458d0001() local_unnamed_addr {
dec_label_pc_458d0001:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_85890618() local_unnamed_addr {
dec_label_pc_85890618:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ec830000() local_unnamed_addr {
dec_label_pc_ec830000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 0, 959, 1083, 1, 2, 960, 3, 849, 1263, 1264, 148, 147, 1267, 4, 5, 6, 1441, 7, 1442, 1443, 1030, 1108, 1107, 837, 838, 1240, 1420, 1270, 887, 1241, 1031, 1032, 1271, 1272, 1268, 1269, 1422, 1033, 1237, 1425, 150, 149, 1426, 1435, 850, 1109, 851, 1273, 1274, 152, 151, 154, 153, 156, 155, 1275, 1276, 8, 1277, 158, 157, 973, 852, 1278, 853, 1110, 1279, 1280, 1034, 1444, 1035, 1246, 1247, 1281, 1282, 1283, 1284, 1285, 1286, 1111, 1112, 1212, 1036, 1213, 1214, 160, 159, 974, 854, 1113, 855, 1114, 1252, 975, 856, 1115, 857, 1116, 858, 1117, 859, 1118, 860, 1119, 1448, 162, 161, 164, 163, 166, 165, 168, 167, 170, 169, 1437, 1037, 1438, 1439, 9, 171, 1255, 1038, 172, 173, 175, 174, 976, 177, 176, 977, 861, 1256, 862, 1120, 10, 11, 863, 1121, 978, 12, 864, 1290, 13, 14, 1039, 15, 1291, 1423, 179, 178, 1292, 1040, 1293, 1294, 1041, 1295, 1042, 1129, 1043, 1296, 1131, 181, 180, 1134, 888, 889, 890, 891, 1386, 1044, 865, 1297, 866, 1122, 867, 1123, 1045, 16, 1046, 1300, 183, 182, 17, 18, 185, 184, 1235, 187, 186, 189, 188, 191, 190, 1301, 1047, 19, 193, 192, 195, 194, 1302, 1048, 197, 196, 1248, 1243, 1049, 198, 893, 892, 200, 199, 1298, 1299, 1124, 868, 1125, 869, 1126, 870, 1307, 202, 201, 1308, 20, 1050, 1436, 21, 22, 1051, 1309, 1052, 203, 204, 205, 206, 1084, 1085, 1346, 1053, 1310, 1311, 208, 207, 1312, 894, 895, 896, 1313, 897, 898, 899, 900, 210, 209, 212, 211, 23, 214, 213, 1316, 216, 215, 218, 217, 24, 25, 219, 1288, 1054, 220, 221, 222, 26, 27, 223, 224, 225, 226, 227, 228, 902, 901, 903, 904, 905, 906, 907, 908, 230, 229, 1127, 232, 231, 1128, 234, 233, 1130, 1132, 1133, 1135, 1136, 1137, 1138, 236, 235, 238, 237, 1139, 1140, 1141, 240, 239, 910, 909, 242, 241, 912, 911, 243, 245, 244, 247, 246, 249, 248, 251, 250, 253, 252, 1055, 255, 254, 257, 256, 1434, 846, 847, 1142, 1056, 871, 1143, 872, 1306, 259, 258, 261, 260, 914, 913, 915, 916, 917, 918, 919, 920, 28, 29, 262, 263, 1287, 1057, 921, 922, 923, 924, 925, 264, 927, 926, 1338, 1058, 30, 266, 265, 268, 267, 270, 269, 1340, 1144, 1145, 1059, 272, 271, 1445, 274, 273, 1446, 31, 1314, 276, 275, 1315, 32, 278, 277, 1339, 1060, 1345, 928, 1061, 280, 279, 1347, 1348, 33, 1349, 34, 979, 35, 930, 929, 931, 932, 933, 934, 935, 936, 1356, 282, 281, 36, 37, 1062, 1357, 38, 284, 283, 1318, 1319, 286, 285, 1320, 1063, 1359, 1321, 1289, 1322, 1323, 288, 287, 1324, 1325, 1064, 1086, 1087, 39, 1065, 980, 40, 1066, 844, 1067, 1355, 1326, 41, 1327, 290, 289, 1328, 1329, 1146, 1358, 1068, 1330, 1088, 42, 1364, 1365, 1366, 292, 291, 1367, 43, 1331, 44, 1372, 937, 938, 939, 940, 941, 942, 1147, 1148, 1069, 294, 293, 1337, 45, 1070, 1378, 1379, 296, 295, 298, 297, 1382, 1383, 1447, 943, 944, 945, 946, 947, 948, 845, 300, 299, 1149, 1150, 1071, 302, 301, 304, 303, 306, 305, 308, 307, 310, 309, 312, 311, 314, 313, 316, 315, 1151, 1152, 839, 1350, 1153, 318, 317, 320, 319, 322, 321, 324, 323, 326, 325, 328, 327, 1072, 1353, 1354, 1073, 873, 1218, 874, 1154, 1155, 840, 1156, 330, 329, 1157, 842, 841, 332, 331, 1158, 961, 1159, 146, 334, 333, 950, 949, 336, 335, 1160, 1161, 1074, 1368, 338, 337, 340, 339, 341, 1162, 342, 1369, 1370, 1163, 1164, 1075, 343, 345, 344, 347, 346, 46, 349, 348, 875, 1165, 876, 1166, 351, 350, 353, 352, 355, 354, 357, 356, 359, 358, 361, 360, 363, 362, 365, 364, 367, 366, 369, 368, 371, 370, 373, 372, 375, 374, 377, 376, 1076, 1373, 379, 378, 1375, 47, 381, 380, 383, 382, 952, 1167, 951, 953, 981, 1168, 385, 384, 1391, 48, 387, 386, 962, 1169, 49, 389, 388, 391, 390, 963, 1170, 1171, 393, 392, 395, 394, 397, 396, 399, 398, 1172, 1173, 1174, 401, 400, 403, 402, 405, 404, 407, 406, 409, 408, 964, 982, 1394, 1244, 411, 410, 413, 412, 415, 414, 1175, 417, 416, 419, 418, 1176, 1177, 1178, 421, 420, 423, 422, 425, 424, 965, 983, 1179, 427, 426, 429, 428, 430, 432, 431, 434, 433, 1259, 436, 435, 438, 437, 1180, 1181, 1182, 440, 439, 966, 984, 1183, 1257, 1184, 1185, 1186, 985, 442, 441, 444, 443, 446, 445, 1187, 1188, 1189, 448, 447, 450, 449, 1190, 452, 451, 454, 453, 1191, 1192, 1193, 456, 455, 967, 986, 1194, 458, 457, 1195, 1196, 1197, 460, 459, 462, 461, 987, 988, 1198, 464, 463, 466, 465, 1199, 468, 467, 470, 469, 1200, 472, 471, 474, 473, 1089, 1201, 475, 968, 989, 1202, 477, 476, 1203, 1204, 1205, 479, 478, 481, 480, 1206, 1207, 1208, 1260, 1261, 1209, 877, 1210, 969, 990, 1211, 483, 482, 1215, 1216, 1217, 1219, 485, 484, 1220, 991, 1221, 1222, 487, 486, 489, 488, 1223, 970, 1224, 491, 490, 493, 492, 992, 1225, 1226, 495, 494, 1227, 496, 497, 1228, 1229, 1230, 1231, 1232, 1233, 1077, 499, 498, 501, 500, 993, 503, 502, 504, 506, 505, 508, 507, 1234, 1236, 1395, 1396, 1078, 1090, 509, 1238, 511, 510, 1303, 1304, 1305, 513, 512, 1239, 514, 516, 515, 518, 517, 520, 519, 521, 523, 522, 525, 524, 527, 526, 528, 530, 529, 532, 531, 534, 533, 536, 535, 538, 537, 539, 541, 540, 542, 544, 543, 546, 545, 1399, 548, 547, 1079, 550, 549, 552, 551, 554, 553, 556, 555, 558, 557, 971, 1242, 1245, 1249, 560, 559, 562, 561, 1250, 564, 563, 954, 566, 565, 568, 567, 570, 569, 572, 571, 574, 573, 576, 575, 578, 577, 580, 579, 582, 581, 1251, 584, 583, 586, 585, 588, 587, 589, 591, 590, 593, 592, 595, 594, 597, 596, 599, 598, 601, 600, 1253, 603, 602, 1254, 605, 604, 607, 606, 609, 608, 610, 612, 611, 614, 613, 994, 50, 1258, 1262, 616, 615, 1265, 1266, 1409, 886, 1333, 1334, 1335, 1332, 1336, 1080, 618, 617, 620, 619, 1440, 1029, 622, 621, 624, 623, 51, 1427, 626, 625, 627, 629, 628, 52, 631, 630, 53, 54, 55, 56, 632, 634, 633, 57, 58, 59, 60, 636, 635, 61, 1091, 995, 638, 637, 640, 639, 642, 641, 644, 643, 646, 645, 1371, 62, 648, 647, 63, 650, 649, 64, 652, 651, 65, 654, 653, 66, 67, 656, 655, 658, 657, 659, 661, 660, 662, 664, 663, 666, 665, 68, 69, 1081, 667, 669, 668, 70, 671, 670, 673, 672, 71, 72, 675, 674, 73, 74, 677, 676, 75, 76, 77, 679, 678, 78, 79, 80, 681, 680, 81, 82, 83, 683, 682, 84, 685, 684, 687, 686, 85, 86, 87, 88, 689, 688, 691, 690, 693, 692, 695, 694, 697, 696, 699, 698, 89, 701, 700, 1317, 878, 879, 90, 703, 702, 705, 704, 706, 91, 708, 707, 92, 710, 709, 712, 711, 714, 713, 93, 716, 715, 94, 95, 96, 718, 717, 97, 98, 720, 719, 722, 721, 99, 100, 101, 102, 103, 724, 723, 104, 726, 725, 728, 727, 730, 729, 105, 106, 107, 732, 731, 108, 109, 110, 734, 733, 736, 735, 738, 737, 111, 112, 740, 739, 742, 741, 113, 744, 743, 114, 115, 746, 745, 748, 747, 116, 750, 749, 752, 751, 754, 753, 117, 756, 755, 118, 758, 757, 1410, 1411, 996, 997, 1412, 1413, 1414, 1415, 1416, 1417, 998, 999, 1418, 119, 759, 120, 1000, 1001, 761, 760, 763, 762, 764, 121, 765, 122, 123, 1341, 124, 1342, 1343, 1344, 1002, 1003, 1004, 1005, 767, 766, 769, 768, 1351, 1352, 1006, 125, 126, 770, 127, 771, 128, 772, 1360, 880, 881, 1361, 1362, 1363, 129, 773, 775, 774, 972, 1092, 1093, 1094, 130, 1095, 882, 1096, 1007, 1008, 777, 776, 131, 779, 778, 781, 780, 783, 782, 785, 784, 1374, 1009, 1376, 1377, 132, 787, 786, 883, 788, 1380, 884, 1381, 885, 1384, 790, 789, 792, 791, 1385, 794, 793, 796, 795, 848, 1387, 1388, 1082, 798, 797, 800, 799, 802, 801, 1389, 804, 803, 1390, 806, 805, 808, 807, 810, 809, 133, 812, 811, 814, 813, 816, 815, 1392, 818, 817, 820, 819, 1393, 822, 821, 823, 1397, 1398, 1400, 825, 824, 1401, 1402, 134, 135, 136, 137, 827, 826, 1403, 138, 828, 1405, 1404, 139, 829, 1407, 1406, 843, 831, 830, 833, 832, 835, 834, 836, 1408, 1097, 1098, 1099, 1010, 140, 1419, 1100, 1011, 1421, 1101, 1012, 141, 1013, 955, 1014, 1015, 1102, 1103, 1104, 1105, 142, 1424, 1017, 1016, 1428, 1429, 1430, 143, 1431, 1106, 144, 1432, 145, 1433, 1018, 956, 1019, 1020, 957, 1021, 958, 1022, 1023, 1024, 1025, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1026, 1027, 1028, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465 }
  uselistorder i32* @eax, { 113, 114, 712, 613, 1205, 691, 692, 60, 58, 2200, 59, 37, 1310, 839, 837, 838, 38, 2208, 1977, 840, 2209, 2210, 2211, 116, 1433, 971, 844, 1283, 649, 548, 648, 83, 845, 2217, 660, 1998, 1317, 677, 2020, 117, 1434, 1288, 3006, 3007, 1289, 3008, 1290, 3009, 3010, 1291, 3012, 3011, 3013, 3014, 533, 1294, 118, 1295, 1435, 0, 119, 1436, 1296, 3, 713, 2060, 1301, 3026, 1302, 120, 1437, 565, 1889, 121, 1438, 847, 2219, 1241, 2949, 122, 1439, 123, 1440, 850, 2225, 124, 1441, 851, 2228, 2229, 2226, 854, 853, 2233, 2234, 726, 2076, 856, 2238, 2239, 688, 857, 2240, 2241, 859, 2243, 2244, 860, 2245, 2246, 861, 4, 863, 2249, 2250, 864, 848, 2220, 2221, 1242, 2950, 2951, 1305, 1244, 2955, 2956, 125, 1442, 1247, 504, 2962, 1246, 1831, 126, 1443, 693, 2038, 2039, 697, 2042, 2043, 735, 5, 1252, 1250, 1254, 1251, 2963, 127, 1444, 128, 1255, 1445, 129, 1446, 130, 1447, 1253, 2964, 2965, 1269, 2977, 1270, 2978, 2979, 524, 755, 2251, 1308, 3047, 2252, 2253, 1856, 1278, 2992, 131, 1448, 132, 1449, 133, 1450, 869, 6, 2264, 2265, 134, 1451, 870, 2267, 665, 2006, 2007, 135, 1452, 136, 1453, 137, 1454, 138, 1455, 139, 1456, 140, 1457, 141, 1458, 142, 1459, 143, 1460, 871, 7, 1004, 872, 2268, 874, 2272, 2273, 875, 8, 876, 2276, 2277, 878, 770, 2120, 144, 1461, 879, 2282, 880, 2283, 2284, 2285, 1906, 145, 1462, 882, 2290, 2289, 868, 2291, 1292, 3015, 3016, 2292, 2293, 2126, 883, 2297, 887, 885, 2109, 886, 2299, 891, 889, 1405, 890, 2302, 592, 146, 591, 1463, 1307, 3045, 147, 1464, 148, 1465, 894, 866, 2308, 149, 1466, 150, 1467, 151, 1468, 152, 1469, 599, 1933, 1934, 1316, 153, 1470, 154, 1471, 155, 1472, 156, 1473, 157, 1474, 895, 9, 794, 2152, 2153, 896, 2309, 158, 1475, 159, 1476, 160, 1477, 161, 1478, 162, 1479, 795, 2154, 2155, 898, 2313, 163, 1480, 603, 10, 1941, 1306, 3042, 3043, 164, 1481, 165, 1482, 166, 1483, 167, 1484, 168, 1485, 1279, 2993, 2994, 1280, 2995, 2996, 1281, 2997, 2998, 815, 2178, 169, 1486, 810, 2171, 2172, 170, 1487, 818, 2182, 171, 1488, 172, 1489, 173, 1490, 819, 2183, 174, 1491, 175, 1492, 908, 11, 2330, 2331, 176, 1493, 909, 12, 2332, 910, 13, 2333, 2334, 177, 1494, 178, 1495, 179, 1496, 828, 14, 2193, 2194, 917, 2347, 2348, 831, 919, 2351, 180, 1497, 921, 2353, 181, 1498, 923, 2355, 2356, 836, 182, 1499, 928, 929, 183, 1500, 184, 1501, 924, 2358, 2359, 1248, 2960, 185, 1502, 930, 2364, 2365, 931, 2366, 2367, 2368, 1318, 251, 932, 2369, 2370, 2371, 936, 2376, 2377, 255, 1575, 1576, 1577, 938, 2380, 258, 1581, 1582, 186, 1503, 261, 1586, 1587, 940, 265, 15, 1326, 2385, 2386, 913, 2389, 2390, 1327, 1328, 87, 2382, 2383, 1329, 1330, 2392, 2393, 1331, 1332, 2394, 2395, 2396, 2397, 2398, 1333, 2399, 1334, 1335, 2314, 2315, 1611, 1178, 2858, 2859, 941, 16, 2400, 943, 2409, 187, 1504, 188, 1505, 189, 1506, 946, 2412, 2413, 2414, 2003, 546, 1871, 947, 2415, 190, 1507, 191, 1508, 192, 1509, 951, 2419, 2420, 952, 2421, 953, 2422, 2423, 193, 1510, 194, 1511, 195, 1512, 196, 1513, 956, 2430, 197, 1514, 959, 2437, 198, 1515, 566, 1890, 961, 2439, 2440, 962, 2441, 568, 17, 199, 1516, 200, 1517, 201, 1518, 202, 1519, 2444, 203, 1520, 689, 2030, 2031, 204, 1521, 205, 1522, 206, 1523, 966, 2448, 2449, 2450, 974, 2451, 975, 2452, 207, 1524, 208, 1525, 967, 2453, 2454, 209, 1526, 774, 2127, 771, 2121, 2122, 1311, 1527, 1312, 1528, 957, 2431, 210, 1529, 211, 88, 1530, 980, 2479, 212, 1531, 982, 2483, 2484, 2485, 1319, 213, 1532, 897, 1533, 1276, 2987, 2988, 2989, 2486, 2487, 214, 1534, 1303, 1277, 2990, 215, 1535, 216, 1536, 217, 1537, 218, 1538, 219, 1539, 299, 1626, 1627, 220, 1540, 221, 1541, 222, 1542, 986, 2493, 987, 2495, 2496, 2144, 990, 2499, 2500, 989, 2501, 2502, 991, 2506, 2507, 223, 1543, 224, 1544, 225, 1545, 226, 1546, 63, 61, 62, 1336, 66, 64, 65, 1337, 1101, 1099, 1100, 2723, 2517, 2520, 995, 2521, 2522, 227, 1547, 996, 1005, 2530, 2480, 2527, 906, 2321, 2529, 2186, 1006, 1008, 2539, 2533, 2536, 2065, 2066, 2053, 2538, 2540, 228, 1548, 229, 1549, 230, 1550, 825, 18, 231, 1551, 1018, 2567, 232, 1552, 233, 1553, 234, 1554, 235, 1555, 911, 2335, 2336, 236, 1556, 237, 1557, 238, 1558, 239, 1559, 240, 1560, 241, 1561, 242, 1562, 942, 2401, 2402, 243, 1563, 244, 1564, 245, 1565, 246, 1566, 247, 1567, 248, 1568, 249, 1569, 1219, 19, 1338, 1339, 2923, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 250, 1570, 1571, 252, 1572, 253, 1573, 254, 1574, 256, 1578, 1579, 257, 1580, 259, 1583, 1584, 260, 1585, 262, 1588, 1589, 263, 1590, 264, 1591, 1592, 266, 1593, 318, 1646, 1647, 267, 1594, 268, 1595, 269, 1596, 270, 1597, 273, 271, 272, 1598, 274, 1599, 275, 1600, 276, 1601, 277, 1602, 278, 1603, 279, 1604, 280, 1605, 281, 1606, 1027, 2584, 2585, 282, 1607, 283, 1608, 284, 1609, 285, 1610, 1262, 2971, 2972, 287, 286, 1612, 2455, 1613, 1614, 288, 1615, 977, 2475, 289, 1616, 290, 1617, 291, 1618, 1022, 20, 1357, 1358, 2432, 2433, 1359, 1360, 1361, 2574, 2579, 2580, 2113, 2575, 1362, 1363, 1364, 1365, 1668, 1669, 1320, 1366, 1367, 1368, 1369, 768, 2116, 292, 1619, 1271, 2980, 349, 1683, 293, 1620, 892, 2304, 2305, 1267, 21, 1370, 2469, 2470, 1371, 2514, 2515, 1372, 1373, 1374, 1375, 1376, 2974, 2975, 1377, 1378, 2563, 2564, 1379, 1380, 1381, 1382, 1383, 294, 1621, 1080, 2681, 2682, 373, 295, 1622, 296, 1623, 297, 1624, 1087, 2692, 2693, 2694, 2674, 1088, 2695, 2696, 826, 2189, 298, 1625, 1091, 1089, 1090, 2701, 2702, 2703, 300, 1628, 1629, 301, 1630, 1297, 3027, 3028, 3029, 302, 1631, 1298, 3030, 1081, 22, 2683, 2684, 1009, 2546, 2547, 2548, 1321, 303, 1632, 1011, 2553, 2554, 2549, 304, 1633, 1083, 2688, 2689, 1093, 2707, 2708, 391, 23, 1725, 305, 1634, 1102, 2724, 1103, 24, 1104, 2725, 401, 25, 306, 1635, 1094, 2709, 2710, 1266, 26, 1384, 1385, 2570, 2571, 1386, 1387, 1388, 2737, 1020, 2738, 2739, 1743, 1744, 2740, 2741, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1113, 2746, 2747, 2748, 420, 1752, 1753, 307, 1636, 1112, 2587, 2756, 1117, 2757, 308, 1637, 1031, 2592, 1033, 2595, 309, 1638, 1035, 2597, 2598, 2599, 310, 1639, 1123, 1122, 1120, 1121, 2763, 2764, 27, 1038, 914, 1036, 1322, 2342, 2343, 1039, 2604, 2605, 2772, 69, 67, 1042, 68, 1398, 915, 1043, 2610, 1044, 2611, 2711, 1045, 2613, 2614, 70, 1399, 1047, 2618, 2619, 2622, 1111, 2742, 1051, 2626, 1052, 2628, 2629, 311, 1640, 1053, 2631, 2632, 1055, 2635, 2636, 1118, 2758, 2759, 312, 1641, 1056, 28, 1057, 2639, 1023, 2581, 73, 71, 72, 1400, 1061, 2642, 1127, 2773, 2774, 1126, 2775, 313, 1642, 1133, 2785, 1063, 29, 2646, 2647, 1265, 1263, 1264, 2973, 314, 1643, 1066, 30, 315, 1644, 316, 1645, 1067, 2652, 2653, 1069, 2656, 1128, 2776, 2777, 1132, 2778, 2659, 2660, 1072, 2663, 945, 1148, 2811, 2812, 2813, 2427, 2669, 2670, 2472, 317, 1648, 1649, 319, 1650, 320, 1651, 321, 1652, 322, 1653, 1078, 1076, 1077, 2675, 2676, 323, 1654, 324, 1655, 325, 1656, 1159, 2825, 2826, 326, 1657, 1161, 327, 1658, 328, 1659, 329, 1660, 330, 1661, 331, 1662, 332, 1663, 1165, 1164, 2832, 2833, 2834, 333, 1664, 334, 1665, 1012, 2555, 1299, 3031, 1167, 1323, 3032, 1169, 2838, 2840, 2510, 2697, 2844, 2850, 1324, 2559, 76, 74, 75, 584, 31, 39, 1910, 335, 1666, 336, 1667, 1098, 2720, 337, 1670, 1671, 338, 1672, 339, 1673, 340, 1674, 341, 1675, 342, 1676, 343, 1677, 344, 1678, 345, 1679, 346, 1680, 347, 1681, 348, 1682, 1105, 2726, 350, 1684, 351, 1685, 352, 1686, 353, 1687, 354, 1688, 355, 1689, 356, 1690, 357, 1691, 358, 1692, 359, 1693, 360, 1694, 361, 1695, 362, 1696, 363, 1697, 364, 1698, 365, 1699, 1115, 2752, 366, 1700, 367, 1701, 368, 1702, 369, 1703, 370, 1704, 371, 1705, 1110, 2734, 2735, 372, 1706, 1109, 1107, 1108, 2732, 1707, 601, 1937, 1938, 374, 1708, 375, 1709, 376, 1710, 1116, 2753, 2754, 377, 1711, 378, 1712, 379, 1713, 380, 1714, 381, 1715, 382, 1716, 383, 1717, 384, 1718, 385, 1719, 386, 1720, 387, 1721, 388, 1722, 389, 1723, 390, 1724, 392, 1726, 1727, 393, 1728, 394, 40, 395, 1729, 396, 1730, 399, 397, 398, 1731, 400, 1732, 402, 1733, 1734, 405, 403, 404, 1735, 1736, 406, 1737, 407, 1738, 408, 1739, 409, 1740, 1135, 2788, 2789, 410, 1741, 411, 1742, 412, 1745, 1746, 413, 1747, 414, 1748, 417, 415, 416, 1749, 1136, 2791, 2792, 418, 1750, 419, 1751, 1137, 2794, 2795, 1141, 423, 421, 1942, 422, 1754, 1139, 1755, 424, 1756, 425, 1757, 426, 1758, 1124, 429, 427, 428, 1759, 430, 1760, 431, 1761, 432, 1762, 433, 1763, 434, 1764, 605, 1946, 435, 1765, 436, 1766, 437, 1767, 438, 1768, 439, 1769, 440, 1770, 441, 1771, 444, 442, 443, 1772, 445, 1773, 446, 1774, 447, 1775, 448, 1776, 1777, 449, 1778, 450, 1779, 451, 1780, 452, 1781, 453, 1782, 454, 1783, 455, 1784, 456, 1785, 457, 1786, 458, 1787, 459, 1788, 460, 1789, 461, 1790, 1791, 462, 1792, 463, 1793, 464, 1794, 465, 1795, 466, 1796, 1150, 2816, 2817, 467, 1797, 2808, 1151, 2818, 468, 1798, 469, 1799, 1153, 2821, 1157, 470, 1800, 471, 1801, 1173, 41, 2851, 472, 1802, 473, 1803, 474, 1804, 475, 1805, 1, 476, 1806, 477, 1807, 478, 1808, 1183, 2872, 479, 1809, 480, 1810, 481, 1811, 482, 1812, 667, 1187, 2883, 2884, 483, 1813, 484, 1814, 485, 1815, 486, 42, 487, 1816, 488, 1817, 1260, 2879, 2880, 1190, 2888, 2889, 489, 1818, 490, 1819, 491, 1820, 492, 43, 493, 1821, 494, 44, 495, 1822, 496, 1823, 497, 1824, 498, 1825, 499, 1826, 500, 1827, 501, 1828, 502, 1829, 503, 1830, 505, 1832, 1833, 506, 1834, 1204, 45, 2904, 2905, 507, 1835, 772, 32, 2128, 701, 46, 508, 1836, 509, 1837, 510, 1838, 511, 1839, 512, 1840, 513, 1841, 514, 1842, 515, 1843, 516, 1844, 517, 1845, 518, 1846, 519, 1847, 520, 1848, 521, 1849, 522, 1850, 523, 1851, 1852, 525, 1853, 526, 47, 527, 1854, 528, 1855, 529, 48, 532, 530, 531, 1857, 1858, 1859, 534, 1860, 535, 1861, 536, 1862, 537, 1863, 538, 1864, 539, 1865, 540, 1866, 833, 2203, 541, 1867, 542, 1868, 543, 1869, 544, 1870, 545, 49, 829, 2196, 2197, 547, 1872, 1873, 549, 1874, 550, 1875, 551, 1876, 552, 1877, 553, 1878, 554, 1879, 555, 1880, 556, 1881, 557, 1882, 558, 1883, 559, 50, 560, 1884, 561, 1885, 562, 1886, 563, 1887, 564, 1888, 567, 1891, 1892, 569, 1893, 1894, 570, 1895, 571, 1896, 572, 1897, 573, 1898, 574, 1899, 575, 1900, 576, 1901, 577, 1902, 79, 77, 78, 1401, 578, 1903, 579, 1904, 580, 1905, 583, 581, 582, 1907, 1908, 1909, 587, 585, 586, 1911, 1912, 588, 1913, 998, 1914, 999, 1915, 1000, 51, 1001, 1916, 1002, 1917, 1003, 1918, 1919, 834, 33, 1920, 1921, 808, 2204, 2205, 1922, 589, 1923, 590, 52, 1924, 1925, 1926, 1927, 593, 1928, 594, 1929, 595, 1930, 2, 596, 1931, 597, 53, 598, 1932, 600, 1935, 1936, 602, 1939, 1940, 604, 1943, 1944, 1945, 608, 606, 607, 1947, 609, 1948, 610, 1949, 611, 1950, 612, 1951, 1952, 1953, 614, 1954, 615, 1955, 616, 1956, 617, 1957, 618, 1958, 619, 1959, 620, 1960, 621, 1961, 622, 1962, 623, 1963, 624, 1964, 625, 1965, 626, 54, 627, 1966, 628, 1967, 629, 1968, 630, 1969, 631, 1970, 632, 1971, 633, 1972, 634, 1973, 635, 1974, 636, 1975, 637, 1976, 638, 1978, 1979, 639, 1980, 640, 1981, 641, 1982, 80, 642, 1983, 643, 1984, 644, 1985, 647, 645, 1402, 646, 1986, 1987, 1988, 1989, 650, 1990, 651, 1991, 652, 1992, 653, 1993, 656, 654, 655, 1994, 657, 1995, 658, 1996, 659, 1997, 661, 1999, 2000, 662, 2001, 663, 2002, 664, 2004, 2005, 666, 2008, 2009, 2010, 668, 2011, 669, 2012, 670, 2013, 671, 2014, 672, 2015, 673, 2016, 674, 2017, 675, 2018, 676, 2019, 678, 2021, 679, 2022, 680, 2023, 681, 2024, 684, 682, 683, 2025, 685, 2026, 686, 2027, 687, 2028, 2029, 89, 34, 690, 2032, 1403, 1404, 2033, 2034, 2035, 2036, 2037, 1206, 1210, 2906, 2907, 81, 1406, 1211, 1407, 696, 694, 695, 2040, 2041, 698, 2044, 2045, 699, 2046, 700, 2047, 970, 968, 969, 2456, 2457, 972, 2458, 2459, 973, 2460, 2461, 702, 2048, 2049, 703, 2050, 704, 2051, 705, 2052, 706, 2054, 2055, 979, 2056, 709, 707, 708, 2057, 710, 2058, 711, 2059, 714, 2061, 2062, 2063, 715, 2064, 716, 2067, 2068, 717, 2069, 718, 2070, 721, 719, 720, 2071, 722, 2072, 723, 2073, 724, 2074, 725, 2075, 729, 727, 978, 728, 2077, 2078, 730, 2079, 731, 2080, 732, 2081, 733, 2082, 734, 2083, 736, 2084, 2085, 737, 2086, 738, 2087, 739, 2088, 742, 740, 741, 2089, 743, 2090, 744, 2091, 745, 2092, 746, 2093, 747, 2094, 748, 2095, 749, 2096, 750, 2097, 751, 2098, 754, 752, 753, 2099, 2100, 756, 2101, 757, 2102, 758, 2103, 1217, 1215, 1216, 2918, 2919, 2920, 759, 2104, 1220, 2924, 2925, 2926, 760, 2105, 761, 2106, 762, 2107, 763, 2108, 764, 2110, 2111, 765, 2112, 766, 2114, 2115, 767, 2117, 2118, 1225, 35, 769, 2119, 1227, 2934, 773, 2123, 2124, 2125, 775, 2129, 2130, 2131, 776, 2132, 777, 2133, 778, 2134, 779, 2135, 780, 2136, 781, 2137, 782, 2138, 783, 2139, 784, 2140, 785, 2141, 786, 2142, 787, 2143, 788, 2145, 2146, 789, 2147, 790, 2148, 791, 2149, 792, 2150, 793, 2151, 798, 796, 797, 2156, 2157, 2158, 799, 2159, 800, 2160, 801, 2161, 802, 2162, 2163, 803, 2164, 804, 2165, 805, 2166, 806, 2167, 807, 2168, 2169, 809, 2170, 811, 2173, 2174, 812, 2175, 813, 2176, 814, 2177, 816, 2180, 2179, 817, 2181, 822, 820, 821, 2184, 823, 2185, 824, 2187, 2188, 827, 2190, 2191, 2192, 2195, 830, 2198, 2199, 832, 2201, 2202, 835, 2206, 2207, 841, 2212, 2213, 842, 2214, 1239, 2947, 2672, 1272, 2981, 843, 2215, 2216, 1282, 2999, 3000, 82, 1408, 1409, 846, 2218, 1293, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 1300, 55, 3033, 3034, 3035, 849, 2222, 2223, 2224, 1243, 2952, 2953, 2954, 1245, 2957, 2958, 2959, 1092, 36, 2227, 852, 2230, 2231, 2232, 855, 2235, 2236, 2237, 858, 2242, 862, 2247, 2248, 1304, 3040, 3041, 2966, 2968, 2967, 2969, 1273, 2982, 2983, 865, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 3048, 867, 2262, 2263, 2266, 2269, 2270, 873, 2271, 2274, 2275, 877, 2278, 2279, 2280, 2281, 881, 2286, 2287, 2288, 2294, 2295, 2296, 884, 2298, 888, 2300, 2301, 2303, 2306, 3046, 893, 2307, 2310, 2311, 2312, 899, 1410, 2316, 2317, 3044, 86, 84, 85, 1284, 1411, 3001, 3002, 3003, 3004, 1258, 2970, 900, 2318, 901, 2319, 902, 2320, 1144, 2803, 2804, 2322, 903, 2323, 2324, 904, 2325, 905, 2326, 2327, 2328, 907, 2329, 912, 1412, 2337, 2338, 2339, 2340, 2341, 2344, 2345, 916, 2346, 918, 2349, 2350, 920, 2352, 922, 2354, 2357, 927, 925, 926, 2360, 2361, 2362, 2363, 1249, 2961, 935, 933, 934, 2372, 2373, 2374, 2375, 937, 2378, 2379, 2381, 1274, 2984, 1172, 2847, 2384, 939, 2387, 2388, 2391, 2403, 2404, 2405, 2406, 2407, 2408, 1180, 2860, 2861, 2862, 2863, 944, 2410, 2411, 950, 948, 949, 2416, 2417, 2418, 954, 1413, 2424, 2425, 2426, 2428, 955, 2429, 958, 2434, 2435, 2436, 960, 2438, 963, 2442, 2443, 964, 2445, 2446, 965, 2447, 1414, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2471, 976, 2473, 2474, 2476, 2477, 2478, 981, 2481, 2482, 983, 2488, 2489, 2490, 2991, 984, 2491, 985, 2492, 2494, 988, 2497, 2498, 2503, 2504, 2505, 992, 2508, 2509, 993, 2511, 2512, 994, 2513, 2516, 2518, 2519, 2523, 997, 2524, 2525, 2526, 2528, 2531, 2532, 1007, 2534, 2535, 2537, 2541, 2542, 2543, 2544, 2545, 1010, 2550, 2551, 2552, 1013, 1415, 2556, 2557, 1014, 2558, 1015, 2560, 2561, 1016, 2562, 2565, 1017, 2566, 2568, 1019, 2569, 2572, 2573, 1275, 2985, 2986, 1021, 1416, 2576, 2577, 2578, 1026, 1024, 1025, 2582, 2583, 2586, 1028, 2588, 2589, 1029, 2590, 1030, 2591, 1032, 2593, 2594, 1034, 2596, 2600, 1037, 2601, 2602, 2603, 1040, 2606, 2607, 1041, 2608, 2609, 2612, 2615, 1046, 2616, 2617, 1048, 2620, 2621, 1049, 2623, 2624, 1050, 2625, 2627, 2630, 1054, 2633, 2634, 2637, 2638, 1058, 2640, 1059, 2641, 1060, 2643, 2644, 1062, 2645, 1064, 2648, 2649, 1065, 2650, 2651, 1068, 2654, 2655, 1070, 2657, 2658, 1071, 2661, 2662, 1073, 2664, 2665, 1074, 2666, 2667, 1075, 2668, 2671, 1240, 2948, 1268, 2976, 2673, 1079, 2677, 2678, 2679, 2680, 1082, 2685, 2686, 2687, 1086, 1084, 1085, 2690, 2691, 2698, 2699, 2700, 2704, 2705, 3036, 3037, 3038, 3039, 2706, 1095, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 1096, 2719, 1097, 2721, 2722, 1106, 1417, 1418, 2727, 2728, 2729, 2730, 2731, 2733, 2736, 2743, 2744, 2745, 1114, 2749, 2750, 2751, 2755, 1119, 2760, 2761, 2762, 2765, 2766, 2767, 1125, 2768, 2769, 2770, 2771, 1131, 1129, 1130, 2779, 2780, 2781, 2782, 2783, 2784, 1134, 2786, 90, 1419, 2787, 93, 91, 92, 2790, 94, 1420, 2793, 1138, 2796, 2797, 2798, 1140, 2799, 2800, 1142, 2801, 1143, 2802, 1145, 2805, 2806, 1146, 2807, 1147, 2809, 2810, 1149, 2814, 2815, 1152, 2819, 2820, 1156, 1154, 1155, 2822, 2823, 1158, 2824, 2827, 1160, 2828, 2829, 1162, 2830, 1163, 2831, 1166, 2835, 2836, 2837, 2839, 1168, 2841, 2842, 2843, 1170, 2845, 2846, 1171, 2848, 2849, 1174, 2852, 2853, 2854, 1175, 2855, 1176, 2856, 1177, 2857, 1179, 2864, 2865, 2866, 2867, 2868, 2869, 1181, 2870, 1182, 2871, 1184, 2873, 2874, 1185, 2875, 1186, 2876, 2877, 1259, 2878, 1261, 2881, 2882, 1188, 2885, 2886, 1189, 2887, 2890, 1191, 2891, 1192, 2892, 1193, 2893, 1194, 2894, 1195, 1197, 1200, 1199, 1212, 1214, 1202, 1229, 1230, 1231, 1235, 2895, 1196, 2896, 2897, 1198, 2898, 2899, 2900, 1201, 2901, 2902, 1203, 2903, 1209, 1207, 1421, 1422, 1208, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 1213, 2916, 2917, 1218, 2921, 2922, 1221, 2927, 2928, 1222, 2929, 1223, 2930, 1224, 2931, 1226, 2932, 2933, 1228, 2935, 2936, 2937, 2938, 2939, 1232, 2940, 1233, 2941, 1234, 2942, 2943, 1236, 2944, 1237, 2945, 1238, 2946, 97, 95, 96, 1423, 100, 98, 99, 1424, 1425, 101, 1426, 102, 1427, 1287, 1285, 1286, 3005, 105, 103, 104, 1428, 1315, 1313, 1314, 108, 106, 107, 1429, 1256, 56, 111, 109, 110, 1257, 57, 112, 1430, 1325, 1431, 115, 1432, 1309, 3049 }
}

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

declare i32 @__asm_insd(i16) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }

source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_3f6bc_type = type { i32 (i32*)*, i32 (i32)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_3f71c_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_3f75c_type = type { i32 (i32*)*, i32 (i32)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_3f7bc_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_3f7e4_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_3f89c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_3f8fc_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_3f93c_type = type { i32 (i32)*, i32 (i32)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_3f99c_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_3f9dc_type = type { i32 (i32*)*, i32 (i32)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_3fa3c_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_3fa64_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_3fa7c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_3fadc_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_3fb3c_type = type { i32 (i32*)*, i32 (i32)* }
%vtable_3fb64_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_3fb7c_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_3fb94_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_3fbf4_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_3fc0c_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.0" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.1" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.2" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.3" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" = type { i32 }
%"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" = type { i32 }

@cf = internal unnamed_addr global i1 false
@pf = internal unnamed_addr global i1 false
@az = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@sf = internal unnamed_addr global i1 false
@tf = internal unnamed_addr global i1 false
@if = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@nt = internal unnamed_addr global i1 false
@cs = internal unnamed_addr global i16 0
@ds = internal unnamed_addr global i16 0
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@fpu_stat_TOP = internal unnamed_addr global i3 0
@eax = internal unnamed_addr global i32 0, align 8
@ecx = internal unnamed_addr global i32 0, align 8
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external local_unnamed_addr global i32
@1 = external local_unnamed_addr global i32
@global_var_5cc0.2788 = local_unnamed_addr constant i32 -196769536
@global_var_682f.2789 = constant i32 3145777
@global_var_6831.2790 = constant i32 1728053296
@global_var_5d14.2793 = constant i32 2048
@global_var_8d08.2794 = constant [265 x i8] c"il::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = void]\00"
@global_var_5cfc.2795 = constant i32 20
@global_var_6f04.2796 = constant [9 x i8] c"template\00"
@global_var_5cdc.2797 = local_unnamed_addr constant i32 355689972
@global_var_6f4f.2798 = constant [10 x i8] c"prevblock\00"
@global_var_c389.2799 = constant [569 x i8] c"nfig_vector<std::basic_string<char> > > > > >, bool, long long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = void]\00"
@global_var_70b0.2800 = constant [9 x i8] c"rejected\00"
@global_var_404ec.2801 = constant i32 69495939
@global_var_6374.2805 = constant [18 x i8] c"boost::lock_error\00"
@global_var_3fbe4.2806 = constant i32 0
@global_var_3fbcc.2807 = constant i32 0
@global_var_3fbac.2808 = constant i32 66064
@global_var_3fa9c.2811 = constant i32 70306
@global_var_6550.2816 = constant [34 x i8] c"CDataStream::read() : end of data\00"
@global_var_657c.2822 = constant [50 x i8] c"boost::bad_get: failed value get using boost::get\00"
@global_var_30.2823 = constant i32 862319685
@global_var_5c.2824 = constant i32 -402295808
@global_var_89d8.2825 = constant [1081 x i8] c"t) [with Visitor = boost::detail::variant::copy_into, VoidPtrCV = const void*, NBF = boost::variant<std::basic_string<char>, boost::recursive_wrapper<std::vector<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char> > >, std::allocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, boost::recursive_wrapper<std::vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > >, std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, bool, long long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = void]\00"
@global_var_6603.2826 = constant [7 x i8] c"main.h\00"
@global_var_660a.2827 = constant [3 x i8] c"cs\00"
@global_var_54.2828 = constant i32 862319685
@global_var_3fa50.2830 = constant i32 103963
@global_var_3f9f8.2832 = constant i32 104237
@global_var_3fa08.2833 = constant i32 264442
@global_var_40134.2834 = constant i32 8
@global_var_a50.2835 = constant i32 -1929379736
@global_var_3f9b0.2837 = constant i32 106037
@global_var_3f958.2839 = constant i32 106311
@global_var_3f968.2840 = constant i32 264210
@global_var_40034.2841 = constant i32 8
@global_var_3f910.2843 = constant i32 108344
@global_var_3f8b8.2845 = constant i32 108617
@global_var_3f8c8.2846 = constant i32 263978
@global_var_3ff14.2847 = constant i32 8
@global_var_3fb4c.2849 = constant i32 86840
@global_var_3faf4.2851 = constant i32 109133
@global_var_3fb08.2852 = constant i32 264674
@global_var_70d0.2853 = constant [54 x i8] c"/usr/include/boost/exception/detail/exception_ptr.hpp\00"
@global_var_72b4.2854 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_40b90.2857 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_40b70.2858 = constant [49 x i8] c"0123456789abcdef0123456789abcdef0123456789abcdef\00"
@global_var_40b80.2859 = constant [33 x i8] c"0123456789abcdef0123456789abcdef\00"
@global_var_1a2e8.2861 = constant i32 107120
@global_var_a0c4.2862 = constant [126 x i8] c"llocator<json_spirit::Pair_impl<json_spirit::Config_vector<std::basic_string<char> > > > >*, mpl_::true_ = mpl_::bool_<true>]\00"
@global_var_7126.2864 = constant [22 x i8] c"vector::_M_insert_aux\00"
@global_var_7154.2867 = constant [23 x i8] c"vector::_M_fill_insert\00"
@global_var_3f7d0.2869 = constant i32 180055
@global_var_3f778.2871 = constant i32 180329
@global_var_3f788.2872 = constant i32 263636
@global_var_2710.2874 = constant i32 70626
@global_var_3f730.2876 = constant i32 180609
@global_var_3f6d8.2878 = constant i32 180883
@global_var_3f6e8.2879 = constant i32 263404
@global_var_5d.2881 = constant i32 -51903116
@global_var_2d8d8.2882 = constant i32 185436
@global_var_2de04.2883 = constant i32 186759
@global_var_8800.2884 = constant [218 x i8] c"void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = const std::basic_string<char>*, mpl_::true_ = mpl_::bool_<true>]\00"
@global_var_30f24.2893 = constant i32 199335
@global_var_322fc.2894 = constant i32 204415
@global_var_33c34.2899 = constant i32 210871
@global_var_35824.2905 = constant i32 218025
@global_var_35d50.2906 = constant i32 219347
@global_var_38620.2913 = constant i32 229794
@global_var_17799.2914 = constant i32 838092169
@global_var_8bc1.2917 = constant [592 x i8] c"ue_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, bool, long long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = void]\00"
@global_var_8b00.2918 = constant [785 x i8] c"ig_vector<std::basic_string<char> > > > > >, boost::recursive_wrapper<std::vector<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > >, std::allocator<json_spirit::Value_impl<json_spirit::Config_vector<std::basic_string<char> > > > > >, bool, long long int, double, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, typename Visitor::result_type = void]\00"
@global_var_8900.2919 = constant [31 x i8] c" CDataStream::read(char*, int)\00"
@2 = external global i32
@3 = internal constant [6 x i8] c"\83\F0\1F\BA\1F\00"
@global_var_5ccc.2792 = local_unnamed_addr constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0)
@global_var_7f.2821 = constant i8 -119
@global_var_34.2855 = constant i64 -1727847338677890043
@global_var_147b.2860 = constant i64 391941135271049
@global_var_45.2866 = constant i8 -125
@global_var_49.2902 = constant i8 -95
@global_var_3f6bc.2877 = constant %vtable_3f6bc_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev, i32 ()* @pszBase58, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2787, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv }
@global_var_3f71c.2875 = constant %vtable_3f71c_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev, i32 ()* @pszBase58 }
@global_var_3f75c.2870 = constant %vtable_3f75c_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev, i32 ()* @pszBase58, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv }
@global_var_3f7bc.2868 = constant %vtable_3f7bc_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev, i32 ()* @pszBase58 }
@global_var_3f7e4.2880 = constant %vtable_3f7e4_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info }
@global_var_3f89c.2844 = constant %vtable_3f89c_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv }
@global_var_3f8fc.2842 = constant %vtable_3f8fc_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_3f93c.2838 = constant %vtable_3f93c_type { i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev, i32 ()* @pszBase58, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv }
@global_var_3f99c.2836 = constant %vtable_3f99c_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev, i32 ()* @pszBase58 }
@global_var_3f9dc.2831 = constant %vtable_3f9dc_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev, i32 ()* @pszBase58, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv }
@global_var_3fa3c.2829 = constant %vtable_3fa3c_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev, i32 ()* @pszBase58 }
@global_var_3fa64.2863 = constant %vtable_3fa64_type { i32 (i32*)* @_ZN5boost7bad_getD1Ev, i32 (i32)* @_ZN5boost7bad_getD0Ev, i32 (i32)* @_ZNK5boost7bad_get4whatEv }
@global_var_3fa7c.2812 = constant %vtable_3fa7c_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_3fadc.2850 = constant %vtable_3fadc_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_3fb3c.2848 = constant %vtable_3fb3c_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }
@global_var_3fb64.2809 = constant %vtable_3fb64_type { i32 (i32*)* @_ZN5boost9gregorian9bad_monthD1Ev, i32 (i32)* @_ZN5boost9gregorian9bad_monthD0Ev, i32 ()* @pszBase58 }
@global_var_3fb7c.2865 = constant %vtable_3fb7c_type { i32 (i32*)* @_ZN5boost9gregorian8bad_yearD1Ev, i32 (i32)* @_ZN5boost9gregorian8bad_yearD0Ev, i32 ()* @pszBase58 }
@global_var_3fb94.2810 = constant %vtable_3fb94_type { i32 (i32*)* @_ZN5boost9gregorian16bad_day_of_monthD1Ev, i32 (i32)* @_ZN5boost9gregorian16bad_day_of_monthD0Ev, i32 ()* @pszBase58 }
@global_var_3fbf4.2804 = constant %vtable_3fbf4_type { i32 (i32*)* @_ZN5boost10lock_errorD1Ev, i32 (i32)* @_ZN5boost10lock_errorD0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_3fc0c.2803 = constant %vtable_3fc0c_type { i32 (i32*)* @_ZN5boost16thread_exceptionD1Ev, i32 (i32)* @_ZN5boost16thread_exceptionD0Ev, i32 ()* @pszBase58 }

define i32 @pszBase58() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_8:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_e:
  ret void
}

define void @LeaveCritical() local_unnamed_addr {
dec_label_pc_42:
  ret void
}

define void @ReadOrderPos(i64 %nOrderPos, i32 %mapValue) local_unnamed_addr {
dec_label_pc_66:
  ret void
}

define i32 @function_bc() local_unnamed_addr {
dec_label_pc_bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_bf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_bf
}

define i32 @function_d6() local_unnamed_addr {
dec_label_pc_d6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_d6 = load i32, i32* %ebx.global-to-local, align 4
  %v4_d6 = trunc i32 %v0_d6 to i8
  %v5_d6 = icmp eq i8 %v4_d6, 0
  %v0_ef = load i32, i32* @ebp, align 4
  br i1 %v5_d6, label %dec_label_pc_ef, label %dec_label_pc_da

dec_label_pc_da:                                  ; preds = %dec_label_pc_d6
  %v1_da = add i32 %v0_ef, -28
  %v2_da = inttoptr i32 %v1_da to i32*
  %v3_da = load i32, i32* %v2_da, align 4
  store i32 %v3_da, i32* %eax.global-to-local, align 8
  %v1_dd = inttoptr i32 %v3_da to i32*
  store i32 -1, i32* %v1_dd, align 4
  %v0_e3 = load i32, i32* %eax.global-to-local, align 8
  %v1_e3 = add i32 %v0_e3, 4
  %v2_e3 = inttoptr i32 %v1_e3 to i32*
  store i32 -1, i32* %v2_e3, align 4
  %v0_ea = call i32 @function_1a2()
  store i32 %v0_ea, i32* %eax.global-to-local, align 8
  ret i32 %v0_ea

dec_label_pc_ef:                                  ; preds = %dec_label_pc_d6
  %v1_ef = add i32 %v0_ef, -13
  store i32 %v1_ef, i32* %eax.global-to-local, align 8
  ret i32 %v1_ef

; uselistorder directives
  uselistorder i32 %v0_ef, { 1, 0 }
}

define i32 @function_154() local_unnamed_addr {
dec_label_pc_154:
  %v0_154 = call i32 @function_1a2()
  ret i32 %v0_154

; uselistorder directives
  uselistorder i32 ()* @function_1a2, { 1, 0 }
}

define i32 @function_157() local_unnamed_addr {
dec_label_pc_157:
  %eax.global-to-local = alloca i32, align 4
  %v0_157 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_157
}

define i32 @function_163() local_unnamed_addr {
dec_label_pc_163:
  %v0_163 = call i32 @function_167()
  ret i32 %v0_163
}

define i32 @function_165() local_unnamed_addr {
dec_label_pc_165:
  %eax.global-to-local = alloca i32, align 4
  %v0_165 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_165
}

define i32 @function_167() local_unnamed_addr {
dec_label_pc_167:
  %v0_167 = load i32, i32* @ebp, align 4
  %v1_167 = add i32 %v0_167, -14
  ret i32 %v1_167
}

define i32 @function_17d() local_unnamed_addr {
dec_label_pc_17d:
  %eax.global-to-local = alloca i32, align 4
  %v0_17d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17d
}

define i32 @function_189() local_unnamed_addr {
dec_label_pc_189:
  %v0_189 = call i32 @function_18d()
  ret i32 %v0_189
}

define i32 @function_18b() local_unnamed_addr {
dec_label_pc_18b:
  %eax.global-to-local = alloca i32, align 4
  %v0_18b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18b
}

define i32 @function_18d() local_unnamed_addr {
dec_label_pc_18d:
  %v0_18d = load i32, i32* @ebp, align 4
  %v1_18d = add i32 %v0_18d, -13
  ret i32 %v1_18d
}

define i32 @function_1a2() local_unnamed_addr {
dec_label_pc_1a2:
  %v0_1a2 = load i32, i32* @ebp, align 4
  %v1_1a2 = add i32 %v0_1a2, -12
  %v2_1a2 = inttoptr i32 %v1_1a2 to i32*
  %v3_1a2 = load i32, i32* %v2_1a2, align 4
  %v1_1a5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a5 = xor i32 %v1_1a5, %v3_1a2
  %v3_1a5 = icmp eq i32 %v2_1a5, 0
  store i32 %v2_1a5, i32* @eax, align 8
  br i1 %v3_1a5, label %bb, label %dec_label_pc_1ae

bb:                                               ; preds = %dec_label_pc_1a2
  %v1_1ac = call i32 @function_1b3()
  br label %dec_label_pc_1ae

dec_label_pc_1ae:                                 ; preds = %bb, %dec_label_pc_1a2
  %v2_1ac = phi i32 [ %v1_1ac, %bb ], [ %v2_1a5, %dec_label_pc_1a2 ]
  ret i32 %v2_1ac
}

define i32 @function_1b3() local_unnamed_addr {
dec_label_pc_1b3:
  %v0_1b8 = load i32, i32* @eax, align 8
  ret i32 %v0_1b8
}

define void @WriteOrderPos(i64 %nOrderPos, i32 %mapValue) local_unnamed_addr {
dec_label_pc_1b9:
  %stack_var_-24 = alloca i32, align 4
  %v4_1c0 = trunc i64 %nOrderPos to i32
  %v1_1da = add i32 %v4_1c0, 4
  %v2_1da = inttoptr i32 %v1_1da to i32*
  %v3_1da = load i32, i32* %v2_1da, align 4
  %v1_1dd = inttoptr i32 %v4_1c0 to i32*
  %v2_1dd = load i32, i32* %v1_1dd, align 4
  %v1_1e1 = sub i32 -1, %v3_1da
  %v1_1e4 = sub i32 -1, %v2_1dd
  %v2_1e7 = or i32 %v1_1e4, %v1_1e1
  %v3_1e7 = icmp eq i32 %v2_1e7, 0
  br i1 %v3_1e7, label %bb, label %dec_label_pc_1f1

bb:                                               ; preds = %dec_label_pc_1b9
  %v4_1eb = call i32 @function_2a9(i32 %mapValue, i32 %v4_1c0)
  br label %dec_label_pc_1f1

dec_label_pc_1f1:                                 ; preds = %bb, %dec_label_pc_1b9
  %v3_1f4 = load i32, i32* %v2_1da, align 4
  %v2_1f7 = load i32, i32* %v1_1dd, align 4
  %v2_1f9 = ptrtoint i32* %stack_var_-24 to i32
  %v3_207 = call i32 @_Z8i64tostrx(i32 %v2_1f9, i32 %v2_1f7, i32 %v3_1f4)
  ret void
}

define i32 @function_276() local_unnamed_addr {
dec_label_pc_276:
  %eax.global-to-local = alloca i32, align 4
  %v0_276 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_276
}

define i32 @function_279() local_unnamed_addr {
dec_label_pc_279:
  %eax.global-to-local = alloca i32, align 4
  %v0_279 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_279
}

define i32 @function_285() local_unnamed_addr {
dec_label_pc_285:
  %v0_285 = call i32 @function_289()
  ret i32 %v0_285
}

define i32 @function_287() local_unnamed_addr {
dec_label_pc_287:
  %eax.global-to-local = alloca i32, align 4
  %v0_287 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_287
}

define i32 @function_289() local_unnamed_addr {
dec_label_pc_289:
  %v0_289 = load i32, i32* @ebp, align 4
  %v1_289 = add i32 %v0_289, -13
  ret i32 %v1_289
}

define i32 @function_2a9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a9:
  %v0_2aa = load i32, i32* @ebp, align 4
  %v1_2aa = add i32 %v0_2aa, -12
  %v2_2aa = inttoptr i32 %v1_2aa to i32*
  %v3_2aa = load i32, i32* %v2_2aa, align 4
  %v1_2ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ad = xor i32 %v1_2ad, %v3_2aa
  %v3_2ad = icmp eq i32 %v2_2ad, 0
  store i32 %v2_2ad, i32* @eax, align 8
  br i1 %v3_2ad, label %bb, label %dec_label_pc_2b6

bb:                                               ; preds = %dec_label_pc_2a9
  %v1_2b4 = call i32 @function_2bb()
  br label %dec_label_pc_2b6

dec_label_pc_2b6:                                 ; preds = %bb, %dec_label_pc_2a9
  %v2_2b4 = phi i32 [ %v1_2b4, %bb ], [ %v2_2ad, %dec_label_pc_2a9 ]
  ret i32 %v2_2b4
}

define i32 @function_2bb() local_unnamed_addr {
dec_label_pc_2bb:
  %v0_2bf = load i32, i32* @eax, align 8
  ret i32 %v0_2bf
}

define void @_Z13InitRPCMiningv() local_unnamed_addr {
dec_label_pc_2c0:
  ret void
}

define i32 @function_2df() local_unnamed_addr {
dec_label_pc_2df:
  %eax.global-to-local = alloca i32, align 4
  %v0_2df = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2df
}

define i32 @function_308(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_308:
  %eax.global-to-local = alloca i32, align 4
  %v0_30d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30d
}

define void @_Z17ShutdownRPCMiningv() local_unnamed_addr {
dec_label_pc_30e:
  %v1_32d = call i32 @_ZN11CReserveKeyD1Ev(i32 -196769536)
  ret void
}

define i32 @function_33a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33a:
  store i32 0, i32* @global_var_5cc0.2788, align 4
  %v0_344 = load i32, i32* @ebp, align 4
  %v1_344 = add i32 %v0_344, -12
  %v2_344 = inttoptr i32 %v1_344 to i32*
  %v3_344 = load i32, i32* %v2_344, align 4
  %v1_347 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_347 = xor i32 %v1_347, %v3_344
  %v3_347 = icmp eq i32 %v2_347, 0
  store i32 %v2_347, i32* @eax, align 8
  br i1 %v3_347, label %bb, label %dec_label_pc_350

bb:                                               ; preds = %dec_label_pc_33a
  %v1_34e = call i32 @function_355()
  br label %dec_label_pc_350

dec_label_pc_350:                                 ; preds = %bb, %dec_label_pc_33a
  %v2_34e = phi i32 [ %v1_34e, %bb ], [ %v2_347, %dec_label_pc_33a ]
  ret i32 %v2_34e
}

define i32 @function_355() local_unnamed_addr {
dec_label_pc_355:
  %v0_35a = load i32, i32* @eax, align 8
  ret i32 %v0_35a
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" @_Z16GetNetworkHashPSii(i32 %lookup, i32 %height) local_unnamed_addr {
dec_label_pc_35b:
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" zeroinitializer
}

define i32 @function_3a6() local_unnamed_addr {
dec_label_pc_3a6:
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_3a6 = load i32, i32* @ebp, align 4
  %v1_3a6 = add i32 %v0_3a6, -56
  %v2_3a6 = inttoptr i32 %v1_3a6 to i32*
  %v3_3a6 = load i32, i32* %v2_3a6, align 4
  %v10_3a6 = icmp eq i32 %v3_3a6, 0
  br i1 %v10_3a6, label %dec_label_pc_3b6, label %dec_label_pc_3ac

dec_label_pc_3ac:                                 ; preds = %dec_label_pc_3a6
  %v1_3af = add i32 %v3_3a6, 8
  %v2_3af = inttoptr i32 %v1_3af to i32*
  %v3_3af = load i32, i32* %v2_3af, align 4
  %v1_3b2 = icmp eq i32 %v3_3af, 0
  %v1_3b4 = icmp eq i1 %v1_3b2, false
  br i1 %v1_3b4, label %dec_label_pc_3ce, label %dec_label_pc_3b6

dec_label_pc_3b6:                                 ; preds = %dec_label_pc_3ac, %dec_label_pc_3a6
  %v1_3be = add i32 %v0_3a6, -92
  %v2_3be = inttoptr i32 %v1_3be to i32*
  %v3_3be = load i32, i32* %v2_3be, align 4
  %v2_3c4 = inttoptr i32 %v3_3be to i32*
  %v3_3c4 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ei(i32* %v2_3c4, i32 0)
  br label %dec_label_pc_553

dec_label_pc_3ce:                                 ; preds = %dec_label_pc_3ac
  %v1_3ce = add i32 %v0_3a6, -96
  %v2_3ce = inttoptr i32 %v1_3ce to i32*
  %v3_3ce = load i32, i32* %v2_3ce, align 4
  %v10_3ce = icmp eq i32 %v3_3ce, 0
  %v11_3ce = icmp slt i32 %v3_3ce, 0
  %v3_3d2 = icmp eq i1 %v11_3ce, false
  %v4_3d2 = icmp eq i1 %v10_3ce, false
  %v5_3d2 = icmp eq i1 %v3_3d2, %v4_3d2
  br i1 %v5_3d2, label %dec_label_pc_40a, label %dec_label_pc_3d4

dec_label_pc_3d4:                                 ; preds = %dec_label_pc_3ce
  %v3_3d4 = load i32, i32* %v2_3a6, align 4
  %v1_3d7 = add i32 %v3_3d4, 8
  %v2_3d7 = inttoptr i32 %v1_3d7 to i32*
  %v3_3d7 = load i32, i32* %v2_3d7, align 4
  %v2_3f2 = sdiv i32 %v3_3d7, 408
  %v2_3fe = mul i32 %v2_3f2, 2016
  store i32 %v2_3fe, i32* %edx.global-to-local, align 4
  %v2_402 = sub i32 %v3_3d7, %v2_3fe
  %v1_404 = add i32 %v2_402, 1
  store i32 %v1_404, i32* %v2_3ce, align 4
  %v0_40a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_40a

dec_label_pc_40a:                                 ; preds = %dec_label_pc_3d4, %dec_label_pc_3ce
  %v1_41b = phi i32 [ %v0_40a.pre, %dec_label_pc_3d4 ], [ %v0_3a6, %dec_label_pc_3ce ]
  %v1_40a = add i32 %v1_41b, -56
  %v2_40a = inttoptr i32 %v1_40a to i32*
  %v3_40a = load i32, i32* %v2_40a, align 4
  %v1_40d = add i32 %v3_40a, 8
  %v2_40d = inttoptr i32 %v1_40d to i32*
  %v3_40d = load i32, i32* %v2_40d, align 4
  %v2_410 = add i32 %v1_41b, -96
  %v3_410 = inttoptr i32 %v2_410 to i32*
  %v4_410 = load i32, i32* %v3_410, align 4
  %v5_413 = icmp slt i32 %v3_40d, %v4_410
  br i1 %v5_413, label %dec_label_pc_415, label %dec_label_pc_41e

dec_label_pc_415:                                 ; preds = %dec_label_pc_40a
  %v3_415 = load i32, i32* %v2_40a, align 4
  %v1_418 = add i32 %v3_415, 8
  %v2_418 = inttoptr i32 %v1_418 to i32*
  %v3_418 = load i32, i32* %v2_418, align 4
  store i32 %v3_418, i32* %v3_410, align 4
  %v0_41e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_41e

dec_label_pc_41e:                                 ; preds = %dec_label_pc_40a, %dec_label_pc_415
  %v0_41e = phi i32 [ %v1_41b, %dec_label_pc_40a ], [ %v0_41e.pre, %dec_label_pc_415 ]
  %v1_41e = add i32 %v0_41e, -56
  %v2_41e = inttoptr i32 %v1_41e to i32*
  %v3_41e = load i32, i32* %v2_41e, align 4
  %v2_421 = add i32 %v0_41e, -52
  %v3_421 = inttoptr i32 %v2_421 to i32*
  store i32 %v3_41e, i32* %v3_421, align 4
  %v0_424 = load i32, i32* @ebp, align 4
  %v1_424 = add i32 %v0_424, -52
  %v2_424 = inttoptr i32 %v1_424 to i32*
  %v3_424 = load i32, i32* %v2_424, align 4
  %v1_42a = call i32 @_ZNK11CBlockIndex12GetBlockTimeEv(i32 %v3_424)
  %v1_42f = load i32, i32* @ebp, align 4
  %v2_42f = add i32 %v1_42f, -88
  %v3_42f = inttoptr i32 %v2_42f to i32*
  store i32 %v1_42a, i32* %v3_42f, align 4
  %v0_432 = load i32, i32* @edx, align 4
  %v1_432 = load i32, i32* @ebp, align 4
  %v2_432 = add i32 %v1_432, -84
  %v3_432 = inttoptr i32 %v2_432 to i32*
  store i32 %v0_432, i32* %v3_432, align 4
  %v0_435 = load i32, i32* @ebp, align 4
  %v1_435 = add i32 %v0_435, -88
  %v2_435 = inttoptr i32 %v1_435 to i32*
  %v3_435 = load i32, i32* %v2_435, align 4
  %v1_438 = add i32 %v0_435, -84
  %v2_438 = inttoptr i32 %v1_438 to i32*
  %v3_438 = load i32, i32* %v2_438, align 4
  store i32 %v3_438, i32* %edx.global-to-local, align 4
  %v2_43b = add i32 %v0_435, -80
  %v3_43b = inttoptr i32 %v2_43b to i32*
  store i32 %v3_435, i32* %v3_43b, align 4
  %v0_43e = load i32, i32* %edx.global-to-local, align 4
  %v1_43e = load i32, i32* @ebp, align 4
  %v2_43e = add i32 %v1_43e, -76
  %v3_43e = inttoptr i32 %v2_43e to i32*
  store i32 %v0_43e, i32* %v3_43e, align 4
  %v0_441 = load i32, i32* @ebp, align 4
  %v1_441 = add i32 %v0_441, -48
  %v2_441 = inttoptr i32 %v1_441 to i32*
  store i32 0, i32* %v2_441, align 4
  br label %dec_label_pc_4a2

dec_label_pc_44a:                                 ; preds = %dec_label_pc_4a2
  %v1_44a = add i32 %v0_4a2, -52
  %v2_44a = inttoptr i32 %v1_44a to i32*
  %v3_44a = load i32, i32* %v2_44a, align 4
  %v1_44d = add i32 %v3_44a, 4
  %v2_44d = inttoptr i32 %v1_44d to i32*
  %v3_44d = load i32, i32* %v2_44d, align 4
  store i32 %v3_44d, i32* %v2_44a, align 4
  %v0_453 = load i32, i32* @ebp, align 4
  %v1_453 = add i32 %v0_453, -52
  %v2_453 = inttoptr i32 %v1_453 to i32*
  %v3_453 = load i32, i32* %v2_453, align 4
  %v1_459 = call i32 @_ZNK11CBlockIndex12GetBlockTimeEv(i32 %v3_453)
  %v1_45e = load i32, i32* @ebp, align 4
  %v2_45e = add i32 %v1_45e, -72
  %v3_45e = inttoptr i32 %v2_45e to i32*
  store i32 %v1_459, i32* %v3_45e, align 4
  %v0_461 = load i32, i32* @edx, align 4
  %v1_461 = load i32, i32* @ebp, align 4
  %v2_461 = add i32 %v1_461, -68
  %v3_461 = inttoptr i32 %v2_461 to i32*
  store i32 %v0_461, i32* %v3_461, align 4
  %v0_464 = load i32, i32* @ebp, align 4
  %v1_464 = add i32 %v0_464, -88
  %v1_46b = add i32 %v0_464, -72
  %v2_471 = inttoptr i32 %v1_46b to i32*
  %v3_471 = call i32 @_ZSt3minIxERKT_S2_S2_(i32* %v2_471, i32 %v1_464)
  %v1_476 = add i32 %v3_471, 4
  %v2_476 = inttoptr i32 %v1_476 to i32*
  %v3_476 = load i32, i32* %v2_476, align 4
  store i32 %v3_476, i32* %edx.global-to-local, align 4
  %v1_479 = inttoptr i32 %v3_471 to i32*
  %v2_479 = load i32, i32* %v1_479, align 4
  %v1_47b = load i32, i32* @ebp, align 4
  %v2_47b = add i32 %v1_47b, -88
  %v3_47b = inttoptr i32 %v2_47b to i32*
  store i32 %v2_479, i32* %v3_47b, align 4
  %v0_47e = load i32, i32* %edx.global-to-local, align 4
  %v1_47e = load i32, i32* @ebp, align 4
  %v2_47e = add i32 %v1_47e, -84
  %v3_47e = inttoptr i32 %v2_47e to i32*
  store i32 %v0_47e, i32* %v3_47e, align 4
  %v0_481 = load i32, i32* @ebp, align 4
  %v1_481 = add i32 %v0_481, -80
  %v1_488 = add i32 %v0_481, -72
  %v2_48e = inttoptr i32 %v1_488 to i32*
  %v3_48e = call i32 @_ZSt3maxIxERKT_S2_S2_(i32* %v2_48e, i32 %v1_481)
  %v1_493 = add i32 %v3_48e, 4
  %v2_493 = inttoptr i32 %v1_493 to i32*
  %v3_493 = load i32, i32* %v2_493, align 4
  store i32 %v3_493, i32* %edx.global-to-local, align 4
  %v1_496 = inttoptr i32 %v3_48e to i32*
  %v2_496 = load i32, i32* %v1_496, align 4
  %v1_498 = load i32, i32* @ebp, align 4
  %v2_498 = add i32 %v1_498, -80
  %v3_498 = inttoptr i32 %v2_498 to i32*
  store i32 %v2_496, i32* %v3_498, align 4
  %v0_49b = load i32, i32* %edx.global-to-local, align 4
  %v1_49b = load i32, i32* @ebp, align 4
  %v2_49b = add i32 %v1_49b, -76
  %v3_49b = inttoptr i32 %v2_49b to i32*
  store i32 %v0_49b, i32* %v3_49b, align 4
  %v0_49e = load i32, i32* @ebp, align 4
  %v1_49e = add i32 %v0_49e, -48
  %v2_49e = inttoptr i32 %v1_49e to i32*
  %v3_49e = load i32, i32* %v2_49e, align 4
  %v4_49e = add i32 %v3_49e, 1
  store i32 %v4_49e, i32* %v2_49e, align 4
  br label %dec_label_pc_4a2

dec_label_pc_4a2:                                 ; preds = %dec_label_pc_44a, %dec_label_pc_41e
  %v0_4a2 = load i32, i32* @ebp, align 4
  %v1_4a2 = add i32 %v0_4a2, -48
  %v2_4a2 = inttoptr i32 %v1_4a2 to i32*
  %v3_4a2 = load i32, i32* %v2_4a2, align 4
  %v2_4a5 = add i32 %v0_4a2, -96
  %v3_4a5 = inttoptr i32 %v2_4a5 to i32*
  %v4_4a5 = load i32, i32* %v3_4a5, align 4
  %v5_4a5 = sub i32 %v3_4a2, %v4_4a5
  %v11_4a5 = xor i32 %v4_4a5, %v3_4a2
  %v12_4a5 = xor i32 %v5_4a5, %v3_4a2
  %v13_4a5 = and i32 %v12_4a5, %v11_4a5
  %v14_4a5 = icmp slt i32 %v13_4a5, 0
  %v16_4a5 = icmp slt i32 %v5_4a5, 0
  %v2_4a8 = icmp ne i1 %v16_4a5, %v14_4a5
  %v5_4ab = icmp eq i1 %v2_4a8, false
  %v1_4ad = icmp eq i1 %v5_4ab, false
  br i1 %v1_4ad, label %dec_label_pc_44a, label %dec_label_pc_4af

dec_label_pc_4af:                                 ; preds = %dec_label_pc_4a2
  %v1_4af = add i32 %v0_4a2, -88
  %v2_4af = inttoptr i32 %v1_4af to i32*
  %v3_4af = load i32, i32* %v2_4af, align 4
  %v1_4b2 = add i32 %v0_4a2, -84
  %v2_4b2 = inttoptr i32 %v1_4b2 to i32*
  %v3_4b2 = load i32, i32* %v2_4b2, align 4
  %v1_4b5 = add i32 %v0_4a2, -80
  %v2_4b5 = inttoptr i32 %v1_4b5 to i32*
  %v3_4b5 = load i32, i32* %v2_4b5, align 4
  %v1_4b8 = add i32 %v0_4a2, -76
  %v2_4b8 = inttoptr i32 %v1_4b8 to i32*
  %v3_4b8 = load i32, i32* %v2_4b8, align 4
  store i32 %v3_4b8, i32* %edx.global-to-local, align 4
  %v2_4bd = xor i32 %v3_4b8, %v3_4b2
  %v2_4bf = xor i32 %v3_4b5, %v3_4af
  %v2_4c1 = or i32 %v2_4bd, %v2_4bf
  %v3_4c1 = icmp eq i32 %v2_4c1, 0
  %v1_4c5 = icmp eq i1 %v3_4c1, false
  br i1 %v1_4c5, label %dec_label_pc_4dc, label %dec_label_pc_4c7

dec_label_pc_4c7:                                 ; preds = %dec_label_pc_4af
  %v1_4cf = add i32 %v0_4a2, -92
  %v2_4cf = inttoptr i32 %v1_4cf to i32*
  %v3_4cf = load i32, i32* %v2_4cf, align 4
  %v2_4d5 = inttoptr i32 %v3_4cf to i32*
  %v3_4d5 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ei(i32* %v2_4d5, i32 0)
  br label %dec_label_pc_553

dec_label_pc_4dc:                                 ; preds = %dec_label_pc_4af
  %v1_4dc = add i32 %v0_4a2, -52
  %v2_4dc = inttoptr i32 %v1_4dc to i32*
  %v3_4dc = load i32, i32* %v2_4dc, align 4
  %v1_4df = add i32 %v3_4dc, 24
  %v1_4e2 = add i32 %v0_4a2, -56
  %v2_4e2 = inttoptr i32 %v1_4e2 to i32*
  %v3_4e2 = load i32, i32* %v2_4e2, align 4
  %v1_4e5 = add i32 %v3_4e2, 24
  store i32 %v1_4e5, i32* %edx.global-to-local, align 4
  %v1_4e8 = add i32 %v0_4a2, -44
  %v3_4f6 = inttoptr i32 %v1_4e5 to i32*
  %v4_4f6 = call i32 @_ZmiRK7uint256S1_(i32 %v1_4e8, i32* %v3_4f6, i32 %v1_4df)
  %v0_4fe = load i32, i32* @ebp, align 4
  %v1_4fe = add i32 %v0_4fe, -80
  %v2_4fe = inttoptr i32 %v1_4fe to i32*
  %v3_4fe = load i32, i32* %v2_4fe, align 4
  %v1_501 = add i32 %v0_4fe, -76
  %v2_501 = inttoptr i32 %v1_501 to i32*
  %v3_501 = load i32, i32* %v2_501, align 4
  store i32 %v3_501, i32* %edx.global-to-local, align 4
  %v1_504 = add i32 %v0_4fe, -88
  %v2_504 = inttoptr i32 %v1_504 to i32*
  %v3_504 = load i32, i32* %v2_504, align 4
  %v1_507 = add i32 %v0_4fe, -84
  %v2_507 = inttoptr i32 %v1_507 to i32*
  %v3_507 = load i32, i32* %v2_507, align 4
  %v2_50a = sub i32 %v3_4fe, %v3_504
  %v7_50a = icmp ult i32 %v3_4fe, %v3_504
  %v3_50c = zext i1 %v7_50a to i32
  %v4_50c = sub i32 %v3_501, %v3_507
  %v5_50c = add i32 %v4_50c, %v3_50c
  store i32 %v5_50c, i32* %edx.global-to-local, align 4
  %v2_50e = add i32 %v0_4fe, -64
  %v3_50e = inttoptr i32 %v2_50e to i32*
  store i32 %v2_50a, i32* %v3_50e, align 4
  %v0_511 = load i32, i32* %edx.global-to-local, align 4
  %v1_511 = load i32, i32* @ebp, align 4
  %v2_511 = add i32 %v1_511, -60
  %v3_511 = inttoptr i32 %v2_511 to i32*
  store i32 %v0_511, i32* %v3_511, align 4
  %v0_514 = load i32, i32* @ebp, align 4
  %v1_514 = add i32 %v0_514, -44
  %v1_51a = call x86_fp80 @_ZNK9base_uintILj256EE9getdoubleEv(i32 %v1_514)
  store x86_fp80 %v1_51a, x86_fp80* %st0.global-to-local, align 4
  %v0_51f = load i32, i32* @ebp, align 4
  %v1_51f = add i32 %v0_51f, -64
  %v2_51f = inttoptr i32 %v1_51f to i64*
  %v3_51f = load i64, i64* %v2_51f, align 4
  %v4_51f = sitofp i64 %v3_51f to x86_fp80
  %v4_522 = fdiv x86_fp80 %v4_51f, %v4_51f
  store x86_fp80 %v4_522, x86_fp80* %st0.global-to-local, align 4
  %v1_527 = add i32 %v0_51f, -102
  %v2_527 = inttoptr i32 %v1_527 to i16*
  %v3_527 = load i16, i16* %v2_527, align 2
  %tmp109 = urem i16 %v3_527, 256
  %v2_52b = or i16 %tmp109, 3072
  %v3_52d = add i32 %v0_51f, -104
  %v4_52d = inttoptr i32 %v3_52d to i16*
  store i16 %v2_52b, i16* %v4_52d, align 2
  %v1_534 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v2_534 = fptosi x86_fp80 %v1_534 to i64
  %v3_534 = load i32, i32* @ebp, align 4
  %v4_534 = add i32 %v3_534, -112
  %v5_534 = inttoptr i32 %v4_534 to i64*
  store i64 %v2_534, i64* %v5_534, align 4
  %v2_53a = inttoptr i32 %v4_534 to i32*
  %v3_53a = load i32, i32* %v2_53a, align 4
  %v1_53d = add i32 %v3_534, -108
  %v2_53d = inttoptr i32 %v1_53d to i32*
  %v3_53d = load i32, i32* %v2_53d, align 4
  store i32 %v3_53d, i32* %edx.global-to-local, align 4
  %v1_548 = add i32 %v3_534, -92
  %v2_548 = inttoptr i32 %v1_548 to i32*
  %v3_548 = load i32, i32* %v2_548, align 4
  %v3_54e = inttoptr i32 %v3_548 to i32*
  %v4_54e = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ex(i32* %v3_54e, i32 %v3_53a, i32 %v3_53d)
  br label %dec_label_pc_553

dec_label_pc_553:                                 ; preds = %dec_label_pc_4dc, %dec_label_pc_4c7, %dec_label_pc_3b6
  %v0_553 = load i32, i32* @ebp, align 4
  %v1_553 = add i32 %v0_553, -92
  %v2_553 = inttoptr i32 %v1_553 to i32*
  %v3_553 = load i32, i32* %v2_553, align 4
  store i32 %v3_553, i32* @eax, align 8
  %v1_556 = add i32 %v0_553, -12
  %v2_556 = inttoptr i32 %v1_556 to i32*
  %v3_556 = load i32, i32* %v2_556, align 4
  store i32 %v3_556, i32* %edx.global-to-local, align 4
  %v1_559 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_559 = xor i32 %v1_559, %v3_556
  %v3_559 = icmp eq i32 %v2_559, 0
  store i32 %v2_559, i32* %edx.global-to-local, align 4
  br i1 %v3_559, label %bb, label %dec_label_pc_562

bb:                                               ; preds = %dec_label_pc_553
  %v1_560 = call i32 @function_567()
  br label %dec_label_pc_562

dec_label_pc_562:                                 ; preds = %bb, %dec_label_pc_553
  %v2_560 = phi i32 [ %v1_560, %bb ], [ %v3_553, %dec_label_pc_553 ]
  ret i32 %v2_560

; uselistorder directives
  uselistorder i32 %v3_504, { 1, 0 }
  uselistorder i32 %v3_4fe, { 1, 0 }
  uselistorder i32 %v0_4fe, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v5_4a5, { 1, 0 }
  uselistorder i32 %v0_4a2, { 0, 1, 2, 3, 5, 4, 7, 6, 9, 10, 8 }
  uselistorder i32 %v0_41e, { 1, 0 }
  uselistorder i32 %v2_3fe, { 1, 0 }
  uselistorder i32 %v3_3d7, { 1, 0 }
  uselistorder i32 %v3_3ce, { 1, 0 }
  uselistorder i32 %v0_3a6, { 1, 2, 0, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 7, 8, 9, 10, 12, 13, 14 }
  uselistorder i32 (i32)* @_ZNK11CBlockIndex12GetBlockTimeEv, { 1, 0 }
  uselistorder label %dec_label_pc_41e, { 1, 0 }
}

define i32 @function_567() local_unnamed_addr {
dec_label_pc_567:
  %v0_56d = load i32, i32* @eax, align 8
  ret i32 %v0_56d
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.0" @_Z16getnetworkhashpsRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_570:
  %tmp110 = call i8 @__decompiler_undefined_function_2()
  %v10_595 = icmp eq i8 %tmp110, 0
  %v1_599 = icmp eq i1 %v10_595, false
  br i1 %v1_599, label %dec_label_pc_5b7, label %dec_label_pc_59b

dec_label_pc_59b:                                 ; preds = %dec_label_pc_570
  %v4_581 = sext i1 %fHelp to i32
  %v2_5a1 = inttoptr i32 %v4_581 to i32*
  %v3_5a1 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_5a1)
  %tmp119 = icmp ugt i32 %v3_5a1, 2
  %. = zext i1 %tmp119 to i32
  br label %dec_label_pc_5b7

dec_label_pc_5b7:                                 ; preds = %dec_label_pc_59b, %dec_label_pc_570
  %storemerge = phi i32 [ 1, %dec_label_pc_570 ], [ %., %dec_label_pc_59b ]
  %v5_5b7 = icmp eq i32 %storemerge, 0
  br i1 %v5_5b7, label %bb, label %dec_label_pc_5bb

bb:                                               ; preds = %dec_label_pc_5b7
  %v1_5b9 = call i32 @function_62c()
  br label %dec_label_pc_5bb

dec_label_pc_5bb:                                 ; preds = %bb, %dec_label_pc_5b7
  %v3_5bb = phi i32 [ %v1_5b9, %bb ], [ %storemerge, %dec_label_pc_5b7 ]
  %v4_5bb = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.0" undef, i32 %v3_5bb, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.0" %v4_5bb

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_5c8() local_unnamed_addr {
dec_label_pc_5c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5c8
}

define i32 @function_62c() local_unnamed_addr {
dec_label_pc_62c:
  %v0_62c = load i32, i32* @ebp, align 4
  %v1_62c = add i32 %v0_62c, -32
  %v2_62c = inttoptr i32 %v1_62c to i32*
  %v3_62c = load i32, i32* %v2_62c, align 4
  %v1_632 = inttoptr i32 %v3_62c to i32*
  %v2_632 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v1_632)
  %tmp7 = or i32 %v2_632, 1
  %tmp8 = icmp eq i32 %tmp7, 1
  br i1 %tmp8, label %dec_label_pc_660, label %dec_label_pc_63c

dec_label_pc_63c:                                 ; preds = %dec_label_pc_62c
  %v0_644 = load i32, i32* @ebp, align 4
  %v1_644 = add i32 %v0_644, -32
  %v2_644 = inttoptr i32 %v1_644 to i32*
  %v3_644 = load i32, i32* %v2_644, align 4
  %v2_64a = inttoptr i32 %v3_644 to i32*
  %v3_64a = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_64a, i32 1)
  %v1_652 = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_intEv(i32 %v3_64a)
  br label %dec_label_pc_660

dec_label_pc_660:                                 ; preds = %dec_label_pc_62c, %dec_label_pc_63c
  %v0_660 = load i32, i32* @ebp, align 4
  %v1_660 = add i32 %v0_660, -32
  %v2_660 = inttoptr i32 %v1_660 to i32*
  %v3_660 = load i32, i32* %v2_660, align 4
  %v1_666 = inttoptr i32 %v3_660 to i32*
  %v2_666 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v1_666)
  %v1_66b = icmp eq i32 %v2_666, 0
  br i1 %v1_66b, label %dec_label_pc_691, label %dec_label_pc_66f

dec_label_pc_66f:                                 ; preds = %dec_label_pc_660
  %v0_677 = load i32, i32* @ebp, align 4
  %v1_677 = add i32 %v0_677, -32
  %v2_677 = inttoptr i32 %v1_677 to i32*
  %v3_677 = load i32, i32* %v2_677, align 4
  %v2_67d = inttoptr i32 %v3_677 to i32*
  %v3_67d = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_67d, i32 0)
  %v1_685 = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_intEv(i32 %v3_67d)
  br label %dec_label_pc_691

dec_label_pc_691:                                 ; preds = %dec_label_pc_660, %dec_label_pc_66f
  %storemerge = phi i32 [ %v1_685, %dec_label_pc_66f ], [ 120, %dec_label_pc_660 ]
  %v0_691 = load i32, i32* @ebp, align 4
  %v1_691 = add i32 %v0_691, -28
  %v2_691 = inttoptr i32 %v1_691 to i32*
  %v3_691 = load i32, i32* %v2_691, align 4
  %v3_69f = call %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>" @_Z16GetNetworkHashPSii(i32 %v3_691, i32 %storemerge)
  %v0_6a7 = load i32, i32* @ebp, align 4
  %v1_6a7 = add i32 %v0_6a7, -28
  %v2_6a7 = inttoptr i32 %v1_6a7 to i32*
  %v3_6a7 = load i32, i32* %v2_6a7, align 4
  store i32 %v3_6a7, i32* @eax, align 8
  %v1_6aa = add i32 %v0_6a7, -12
  %v2_6aa = inttoptr i32 %v1_6aa to i32*
  %v3_6aa = load i32, i32* %v2_6aa, align 4
  %v1_6ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6ad = icmp eq i32 %v1_6ad, %v3_6aa
  br i1 %v3_6ad, label %bb, label %dec_label_pc_6b6

bb:                                               ; preds = %dec_label_pc_691
  %v1_6b4 = call i32 @function_6eb()
  store i32 %v1_6b4, i32* @eax, align 8
  br label %dec_label_pc_6b6

dec_label_pc_6b6:                                 ; preds = %bb, %dec_label_pc_691
  %v0_6b6 = call i32 @function_6e6()
  ret i32 %v0_6b6

; uselistorder directives
  uselistorder label %dec_label_pc_691, { 1, 0 }
  uselistorder label %dec_label_pc_660, { 1, 0 }
}

define i32 @function_6c5() local_unnamed_addr {
dec_label_pc_6c5:
  %v0_6c5 = call i32 @function_6c9()
  ret i32 %v0_6c5
}

define i32 @function_6c7() local_unnamed_addr {
dec_label_pc_6c7:
  %eax.global-to-local = alloca i32, align 4
  %v0_6c7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6c7
}

define i32 @function_6c9() local_unnamed_addr {
dec_label_pc_6c9:
  %v0_6c9 = load i32, i32* @ebp, align 4
  %v1_6c9 = add i32 %v0_6c9, -13
  ret i32 %v1_6c9
}

define i32 @function_6e6() local_unnamed_addr {
dec_label_pc_6e6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_6eb() local_unnamed_addr {
dec_label_pc_6eb:
  %v0_6f1 = load i32, i32* @eax, align 8
  ret i32 %v0_6f1
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.1" @_Z11getgenerateRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_6f4:
  %tmp111 = call i8 @__decompiler_undefined_function_2()
  %v10_719 = icmp eq i8 %tmp111, 0
  %v1_71d = icmp eq i1 %v10_719, false
  br i1 %v1_71d, label %dec_label_pc_73a, label %dec_label_pc_71f

dec_label_pc_71f:                                 ; preds = %dec_label_pc_6f4
  %v4_705 = sext i1 %fHelp to i32
  %v2_725 = inttoptr i32 %v4_705 to i32*
  %v3_725 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_725)
  %v1_72a = icmp ne i32 %v3_725, 0
  %. = zext i1 %v1_72a to i32
  br label %dec_label_pc_73a

dec_label_pc_73a:                                 ; preds = %dec_label_pc_71f, %dec_label_pc_6f4
  %storemerge = phi i32 [ 1, %dec_label_pc_6f4 ], [ %., %dec_label_pc_71f ]
  %v5_73a = icmp eq i32 %storemerge, 0
  br i1 %v5_73a, label %bb, label %dec_label_pc_73e

bb:                                               ; preds = %dec_label_pc_73a
  %v1_73c = call i32 @function_7af()
  br label %dec_label_pc_73e

dec_label_pc_73e:                                 ; preds = %bb, %dec_label_pc_73a
  %v3_73e = phi i32 [ %v1_73c, %bb ], [ %storemerge, %dec_label_pc_73a ]
  %v4_73e = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.1" undef, i32 %v3_73e, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.1" %v4_73e

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_74b() local_unnamed_addr {
dec_label_pc_74b:
  %eax.global-to-local = alloca i32, align 4
  %v0_74b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_74b
}

define i32 @function_7af() local_unnamed_addr {
dec_label_pc_7af:
  %v0_7af = load i32, i32* @ebp, align 4
  %v1_7af = add i32 %v0_7af, -13
  ret i32 %v1_7af
}

define i32 @function_80e() local_unnamed_addr {
dec_label_pc_80e:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_80e = load i32, i32* %ebx.global-to-local, align 4
  %v1_80e = add i32 %v0_80e, 1435231301
  %v2_80e = inttoptr i32 %v1_80e to i32*
  %v3_80e = load i32, i32* %v2_80e, align 4
  %v4_80e = add i32 %v3_80e, -1
  store i32 %v4_80e, i32* %v2_80e, align 4
  %v0_815 = load i32, i32* %edx.global-to-local, align 4
  %v1_815 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_815 = xor i32 %v1_815, %v0_815
  %v3_815 = icmp eq i32 %v2_815, 0
  store i32 %v2_815, i32* %edx.global-to-local, align 4
  br i1 %v3_815, label %bb, label %dec_label_pc_81e

bb:                                               ; preds = %dec_label_pc_80e
  %v1_81c = call i32 @function_879()
  store i32 %v1_81c, i32* @eax, align 8
  br label %dec_label_pc_81e

dec_label_pc_81e:                                 ; preds = %bb, %dec_label_pc_80e
  %v0_81e = call i32 @function_874()
  ret i32 %v0_81e
}

define i32 @function_82d() local_unnamed_addr {
dec_label_pc_82d:
  %v0_82d = call i32 @function_831()
  ret i32 %v0_82d
}

define i32 @function_82f() local_unnamed_addr {
dec_label_pc_82f:
  %eax.global-to-local = alloca i32, align 4
  %v0_82f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_82f
}

define i32 @function_831() local_unnamed_addr {
dec_label_pc_831:
  %v0_831 = load i32, i32* @ebp, align 4
  %v1_831 = add i32 %v0_831, -14
  ret i32 %v1_831
}

define i32 @function_84f() local_unnamed_addr {
dec_label_pc_84f:
  %eax.global-to-local = alloca i32, align 4
  %v0_84f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_84f
}

define i32 @function_85b() local_unnamed_addr {
dec_label_pc_85b:
  %v0_85b = call i32 @function_85f()
  ret i32 %v0_85b
}

define i32 @function_85d() local_unnamed_addr {
dec_label_pc_85d:
  %eax.global-to-local = alloca i32, align 4
  %v0_85d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_85d
}

define i32 @function_85f() local_unnamed_addr {
dec_label_pc_85f:
  %v0_85f = load i32, i32* @ebp, align 4
  %v1_85f = add i32 %v0_85f, -13
  ret i32 %v1_85f
}

define i32 @function_874() local_unnamed_addr {
dec_label_pc_874:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_879() local_unnamed_addr {
dec_label_pc_879:
  %v0_87f = load i32, i32* @eax, align 8
  ret i32 %v0_87f
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.2" @_Z11setgenerateRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_882:
  %tmp111 = call i8 @__decompiler_undefined_function_2()
  %v10_8a7 = icmp eq i8 %tmp111, 0
  %v1_8ab = icmp eq i1 %v10_8a7, false
  br i1 %v1_8ab, label %dec_label_pc_8d8, label %dec_label_pc_8ad

dec_label_pc_8ad:                                 ; preds = %dec_label_pc_882
  %v4_893 = sext i1 %fHelp to i32
  %v2_8b3 = inttoptr i32 %v4_893 to i32*
  %v3_8b3 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_8b3)
  %v1_8b8 = icmp eq i32 %v3_8b3, 0
  br i1 %v1_8b8, label %dec_label_pc_8d8, label %dec_label_pc_8bc

dec_label_pc_8bc:                                 ; preds = %dec_label_pc_8ad
  %v3_8c2 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_8b3)
  %tmp120 = icmp ugt i32 %v3_8c2, 2
  %. = zext i1 %tmp120 to i32
  br label %dec_label_pc_8d8

dec_label_pc_8d8:                                 ; preds = %dec_label_pc_8bc, %dec_label_pc_882, %dec_label_pc_8ad
  %storemerge = phi i32 [ 1, %dec_label_pc_8ad ], [ 1, %dec_label_pc_882 ], [ %., %dec_label_pc_8bc ]
  %v5_8d8 = icmp eq i32 %storemerge, 0
  br i1 %v5_8d8, label %bb, label %dec_label_pc_8dc

bb:                                               ; preds = %dec_label_pc_8d8
  %v1_8da = call i32 @function_94d()
  br label %dec_label_pc_8dc

dec_label_pc_8dc:                                 ; preds = %bb, %dec_label_pc_8d8
  %v3_8dc = phi i32 [ %v1_8da, %bb ], [ %storemerge, %dec_label_pc_8d8 ]
  %v4_8dc = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.2" undef, i32 %v3_8dc, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.2" %v4_8dc

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder label %dec_label_pc_8d8, { 0, 2, 1 }
}

define i32 @function_8e9() local_unnamed_addr {
dec_label_pc_8e9:
  %eax.global-to-local = alloca i32, align 4
  %v0_8e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_8e9
}

define i32 @function_94d() local_unnamed_addr {
dec_label_pc_94d:
  %v0_94d = load i32, i32* @ebp, align 4
  %v1_94d = add i32 %v0_94d, -13
  %v2_94d = inttoptr i32 %v1_94d to i8*
  store i8 1, i8* %v2_94d, align 1
  %v0_951 = load i32, i32* @ebp, align 4
  %v1_951 = add i32 %v0_951, -48
  %v2_951 = inttoptr i32 %v1_951 to i32*
  %v3_951 = load i32, i32* %v2_951, align 4
  %v1_957 = inttoptr i32 %v3_951 to i32*
  %v2_957 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v1_957)
  %v1_95c = icmp eq i32 %v2_957, 0
  %v1_95e = icmp eq i1 %v1_95c, false
  %v5_961 = icmp eq i1 %v1_95e, false
  br i1 %v5_961, label %dec_label_pc_983, label %dec_label_pc_965

dec_label_pc_965:                                 ; preds = %dec_label_pc_94d
  %v0_96d = load i32, i32* @ebp, align 4
  %v1_96d = add i32 %v0_96d, -48
  %v2_96d = inttoptr i32 %v1_96d to i32*
  %v3_96d = load i32, i32* %v2_96d, align 4
  %v2_973 = inttoptr i32 %v3_96d to i32*
  %v3_973 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_973, i32 0)
  %v1_97b = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE8get_boolEv(i32 %v3_973)
  %v1_980 = trunc i32 %v1_97b to i8
  %v2_980 = load i32, i32* @ebp, align 4
  %v3_980 = add i32 %v2_980, -13
  %v4_980 = inttoptr i32 %v3_980 to i8*
  store i8 %v1_980, i8* %v4_980, align 1
  br label %dec_label_pc_983

dec_label_pc_983:                                 ; preds = %dec_label_pc_965, %dec_label_pc_94d
  %v0_983 = load i32, i32* @ebp, align 4
  %v1_983 = add i32 %v0_983, -48
  %v2_983 = inttoptr i32 %v1_983 to i32*
  %v3_983 = load i32, i32* %v2_983, align 4
  %v1_989 = inttoptr i32 %v3_983 to i32*
  %v2_989 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v1_989)
  %tmp4 = or i32 %v2_989, 1
  %tmp5 = icmp eq i32 %tmp4, 1
  %v3_991 = icmp ne i1 %tmp5, true
  %v5_994 = icmp eq i1 %v3_991, false
  br i1 %v5_994, label %bb, label %dec_label_pc_99c

bb:                                               ; preds = %dec_label_pc_983
  %v1_996 = call i32 @function_a41()
  br label %dec_label_pc_99c

dec_label_pc_99c:                                 ; preds = %bb, %dec_label_pc_983
  %v0_9a4 = load i32, i32* @ebp, align 4
  %v1_9a4 = add i32 %v0_9a4, -48
  %v2_9a4 = inttoptr i32 %v1_9a4 to i32*
  %v3_9a4 = load i32, i32* %v2_9a4, align 4
  %v2_9aa = inttoptr i32 %v3_9a4 to i32*
  %v3_9aa = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_9aa, i32 1)
  %v1_9b2 = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_intEv(i32 %v3_9aa)
  %v1_9b7 = load i32, i32* @ebp, align 4
  %v2_9b7 = add i32 %v1_9b7, -20
  %v3_9b7 = inttoptr i32 %v2_9b7 to i32*
  store i32 %v1_9b2, i32* %v3_9b7, align 4
  %v0_9ba = load i32, i32* @ebp, align 4
  %v1_9ba = add i32 %v0_9ba, -28
  %v1_9bd = add i32 %v0_9ba, -20
  %v2_9bd = inttoptr i32 %v1_9bd to i32*
  %v3_9bd = load i32, i32* %v2_9bd, align 4
  %v2_9c7 = call i32 @_Z6itostri(i32 %v1_9ba, i32 %v3_9bd)
  %v0_9cf = load i32, i32* @ebp, align 4
  %v1_9cf = add i32 %v0_9cf, -15
  ret i32 %v1_9cf

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_intEv, { 2, 1, 0 }
}

define i32 @function_a41() local_unnamed_addr {
dec_label_pc_a41:
  %v0_a41 = load i32, i32* @ebp, align 4
  %v1_a53 = add i32 %v0_a41, -14
  ret i32 %v1_a53
}

define i32 @function_ac2() local_unnamed_addr {
dec_label_pc_ac2:
  %cs.global-to-local = alloca i16, align 2
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ac5 = load i32, i32* %eax.global-to-local, align 8
  %v2_ac5 = and i32 %v0_ac5, 4
  %v2_ac8 = add nuw nsw i32 %v2_ac5, 4
  %v18_ac8 = and i32 %v0_ac5, -256
  %v19_ac8 = or i32 %v2_ac8, %v18_ac8
  store i32 %v19_ac8, i32* %eax.global-to-local, align 8
  %v0_aca = load i32, i32* %ebx.global-to-local, align 4
  %v1_aca = add i32 %v0_aca, 76141637
  %v2_aca = inttoptr i32 %v1_aca to i8*
  %v3_aca = load i8, i8* %v2_aca, align 1
  %v4_aca = load i32, i32* %ecx.global-to-local, align 8
  %v5_aca = trunc i32 %v4_aca to i8
  %v6_aca = add i8 %v5_aca, %v3_aca
  store i8 %v6_aca, i8* %v2_aca, align 1
  %v0_ad0 = load i32, i32* %eax.global-to-local, align 8
  %v11_ad0 = and i32 %v0_ad0, -24
  store i32 %v11_ad0, i32* %eax.global-to-local, align 8
  %v0_ad2 = load i16, i16* %cs.global-to-local, align 2
  %v5_ad2 = sext i16 %v0_ad2 to i32
  %v6_ad2 = call i32 @unknown_8b000168(i32 %v5_ad2)
  store i32 %v6_ad2, i32* @eax, align 8
  %v0_ad9 = load i32, i32* @ebp, align 4
  %v1_ad9 = add i32 %v0_ad9, -12
  %v2_ad9 = inttoptr i32 %v1_ad9 to i32*
  %v3_ad9 = load i32, i32* %v2_ad9, align 4
  %v1_adc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_adc = icmp eq i32 %v1_adc, %v3_ad9
  br i1 %v3_adc, label %bb, label %dec_label_pc_ae9

bb:                                               ; preds = %dec_label_pc_ac2
  %v1_ae3 = call i32 @function_b78()
  store i32 %v1_ae3, i32* @eax, align 8
  br label %dec_label_pc_ae9

dec_label_pc_ae9:                                 ; preds = %bb, %dec_label_pc_ac2
  %v0_ae9 = call i32 @function_b73()
  store i32 %v0_ae9, i32* %eax.global-to-local, align 8
  ret i32 %v0_ae9

; uselistorder directives
  uselistorder i32 %v0_ac5, { 1, 0 }
}

define i32 @function_afb() local_unnamed_addr {
dec_label_pc_afb:
  %v0_afb = call i32 @function_aff()
  ret i32 %v0_afb
}

define i32 @function_afd() local_unnamed_addr {
dec_label_pc_afd:
  %eax.global-to-local = alloca i32, align 4
  %v0_afd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_afd
}

define i32 @function_aff() local_unnamed_addr {
dec_label_pc_aff:
  %v0_aff = load i32, i32* @ebp, align 4
  %v1_aff = add i32 %v0_aff, -16
  ret i32 %v1_aff
}

define i32 @function_b1d() local_unnamed_addr {
dec_label_pc_b1d:
  %eax.global-to-local = alloca i32, align 4
  %v0_b1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b1d
}

define i32 @function_b29() local_unnamed_addr {
dec_label_pc_b29:
  %v0_b29 = call i32 @function_b2d()
  ret i32 %v0_b29
}

define i32 @function_b2b() local_unnamed_addr {
dec_label_pc_b2b:
  %eax.global-to-local = alloca i32, align 4
  %v0_b2b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b2b
}

define i32 @function_b2d() local_unnamed_addr {
dec_label_pc_b2d:
  %v0_b2d = load i32, i32* @ebp, align 4
  %v1_b2d = add i32 %v0_b2d, -15
  ret i32 %v1_b2d
}

define i32 @function_b4e() local_unnamed_addr {
dec_label_pc_b4e:
  %eax.global-to-local = alloca i32, align 4
  %v0_b4e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b4e
}

define i32 @function_b5a() local_unnamed_addr {
dec_label_pc_b5a:
  %v0_b5a = call i32 @function_b5e()
  ret i32 %v0_b5a
}

define i32 @function_b5c() local_unnamed_addr {
dec_label_pc_b5c:
  %eax.global-to-local = alloca i32, align 4
  %v0_b5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b5c
}

define i32 @function_b5e() local_unnamed_addr {
dec_label_pc_b5e:
  %v0_b5e = load i32, i32* @ebp, align 4
  %v1_b5e = add i32 %v0_b5e, -14
  ret i32 %v1_b5e
}

define i32 @function_b73() local_unnamed_addr {
dec_label_pc_b73:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_b78() local_unnamed_addr {
dec_label_pc_b78:
  %v0_b7e = load i32, i32* @eax, align 8
  ret i32 %v0_b7e
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.3" @_Z15gethashespersecRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_b81:
  %tmp111 = call i8 @__decompiler_undefined_function_2()
  %v10_ba6 = icmp eq i8 %tmp111, 0
  %v1_baa = icmp eq i1 %v10_ba6, false
  br i1 %v1_baa, label %dec_label_pc_bc7, label %dec_label_pc_bac

dec_label_pc_bac:                                 ; preds = %dec_label_pc_b81
  %v4_b92 = sext i1 %fHelp to i32
  %v2_bb2 = inttoptr i32 %v4_b92 to i32*
  %v3_bb2 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_bb2)
  %v1_bb7 = icmp ne i32 %v3_bb2, 0
  %. = zext i1 %v1_bb7 to i32
  br label %dec_label_pc_bc7

dec_label_pc_bc7:                                 ; preds = %dec_label_pc_bac, %dec_label_pc_b81
  %storemerge = phi i32 [ 1, %dec_label_pc_b81 ], [ %., %dec_label_pc_bac ]
  %v5_bc7 = icmp eq i32 %storemerge, 0
  br i1 %v5_bc7, label %bb, label %dec_label_pc_bcb

bb:                                               ; preds = %dec_label_pc_bc7
  %v1_bc9 = call i32 @function_c3c()
  br label %dec_label_pc_bcb

dec_label_pc_bcb:                                 ; preds = %bb, %dec_label_pc_bc7
  %v3_bcb = phi i32 [ %v1_bc9, %bb ], [ %storemerge, %dec_label_pc_bc7 ]
  %v4_bcb = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.3" undef, i32 %v3_bcb, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.3" %v4_bcb

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_bd8() local_unnamed_addr {
dec_label_pc_bd8:
  %eax.global-to-local = alloca i32, align 4
  %v0_bd8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_bd8
}

define i32 @function_c3c() local_unnamed_addr {
dec_label_pc_c3c:
  %v0_c3c = call i32 @_Z13GetTimeMillisv()
  call void @llvm.trap()
  unreachable
}

define i32 @function_ccf() local_unnamed_addr {
dec_label_pc_ccf:
  %v0_ccf = call i32 @function_cd3()
  ret i32 %v0_ccf
}

define i32 @function_cd1() local_unnamed_addr {
dec_label_pc_cd1:
  %eax.global-to-local = alloca i32, align 4
  %v0_cd1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_cd1
}

define i32 @function_cd3() local_unnamed_addr {
dec_label_pc_cd3:
  %v0_cd3 = load i32, i32* @ebp, align 4
  %v1_cd3 = add i32 %v0_cd3, -13
  ret i32 %v1_cd3
}

define i32 @function_cf0() local_unnamed_addr {
dec_label_pc_cf0:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_cf0 = add i32 %tmp92, -28
  %v2_cf0 = inttoptr i32 %v1_cf0 to i32*
  %v3_cf0 = load i32, i32* %v2_cf0, align 4
  store i32 %v3_cf0, i32* @eax, align 8
  %v1_cf3 = add i32 %tmp92, -12
  %v2_cf3 = inttoptr i32 %v1_cf3 to i32*
  %v3_cf3 = load i32, i32* %v2_cf3, align 4
  %v1_cf6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_cf6 = icmp eq i32 %v1_cf6, %v3_cf3
  br i1 %v3_cf6, label %bb, label %dec_label_pc_cff

bb:                                               ; preds = %dec_label_pc_cf0
  %v1_cfd = call i32 @function_d04()
  br label %dec_label_pc_cff

dec_label_pc_cff:                                 ; preds = %bb, %dec_label_pc_cf0
  %v2_cfd = phi i32 [ %v1_cfd, %bb ], [ %v3_cf0, %dec_label_pc_cf0 ]
  ret i32 %v2_cfd

; uselistorder directives
  uselistorder i32 %tmp92, { 1, 0 }
}

define i32 @function_d04() local_unnamed_addr {
dec_label_pc_d04:
  %v0_d0a = load i32, i32* @eax, align 8
  ret i32 %v0_d0a
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" @_Z13getmininginfoRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_d0d:
  %tmp111 = call i8 @__decompiler_undefined_function_2()
  %v4_d24 = sext i1 %fHelp to i32
  store i32 %v4_d24, i32* @edx, align 4
  %v10_d3e = icmp eq i8 %tmp111, 0
  %v1_d45 = icmp eq i1 %v10_d3e, false
  br i1 %v1_d45, label %dec_label_pc_d65, label %dec_label_pc_d47

dec_label_pc_d47:                                 ; preds = %dec_label_pc_d0d
  %v2_d50 = inttoptr i32 %v4_d24 to i32*
  %v3_d50 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_d50)
  %v1_d55 = icmp ne i32 %v3_d50, 0
  %. = zext i1 %v1_d55 to i32
  br label %dec_label_pc_d65

dec_label_pc_d65:                                 ; preds = %dec_label_pc_d47, %dec_label_pc_d0d
  %storemerge = phi i32 [ 1, %dec_label_pc_d0d ], [ %., %dec_label_pc_d47 ]
  %v5_d65 = icmp eq i32 %storemerge, 0
  br i1 %v5_d65, label %bb, label %dec_label_pc_d6d

bb:                                               ; preds = %dec_label_pc_d65
  %v1_d67 = call i32 @function_df0()
  br label %dec_label_pc_d6d

dec_label_pc_d6d:                                 ; preds = %bb, %dec_label_pc_d65
  %v3_d6d = phi i32 [ %v1_d67, %bb ], [ %storemerge, %dec_label_pc_d65 ]
  %v4_d6d = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" undef, i32 %v3_d6d, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.4" %v4_d6d

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_d7a() local_unnamed_addr {
dec_label_pc_d7a:
  %eax.global-to-local = alloca i32, align 4
  %v0_d7a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_d7a
}

define i32 @function_df0() local_unnamed_addr {
dec_label_pc_df0:
  %v0_df0 = load i32, i32* @ebp, align 4
  %v1_df0 = add i32 %v0_df0, -740
  %v1_df9 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %v1_df0)
  ret i32 %v1_df9
}

define i32 @function_1266() local_unnamed_addr {
dec_label_pc_1266:
  %eax.global-to-local = alloca i32, align 4
  %v0_1266 = load i32, i32* %eax.global-to-local, align 8
  %v11_1266 = and i32 %v0_1266, -24
  store i32 %v11_1266, i32* %eax.global-to-local, align 8
  ret i32 %v11_1266

; uselistorder directives
  uselistorder i32 %v11_1266, { 1, 0 }
}

define i32 @function_1966() local_unnamed_addr {
dec_label_pc_1966:
  %eax.global-to-local = alloca i32, align 4
  %v0_1966 = load i32, i32* %eax.global-to-local, align 8
  %v11_1966 = and i32 %v0_1966, -24
  store i32 %v11_1966, i32* %eax.global-to-local, align 8
  ret i32 %v11_1966

; uselistorder directives
  uselistorder i32 %v11_1966, { 1, 0 }
}

define i32 @function_197a() local_unnamed_addr {
dec_label_pc_197a:
  %v0_197a = load i32, i32* @ebp, align 4
  %v1_1988 = add i32 %v0_197a, -32
  %v1_198e = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1988)
  %v0_1993 = load i32, i32* @ebp, align 4
  %v1_1993 = add i32 %v0_1993, -740
  %v1_199d = add i32 %v0_1993, -748
  %v2_199d = inttoptr i32 %v1_199d to i32*
  %v3_199d = load i32, i32* %v2_199d, align 4
  %v2_19a6 = inttoptr i32 %v3_199d to i32*
  %v3_19a6 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorINS_9Pair_implIS2_EESaIS6_EE(i32* %v2_19a6, i32 %v1_1993)
  %v0_19ab = load i32, i32* @ebp, align 4
  %v1_19ab = add i32 %v0_19ab, -740
  %v1_19b4 = inttoptr i32 %v1_19ab to i32*
  %v2_19b4 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_19b4)
  %v0_19b9 = load i32, i32* @ebp, align 4
  %v1_19b9 = add i32 %v0_19b9, -748
  %v2_19b9 = inttoptr i32 %v1_19b9 to i32*
  %v3_19b9 = load i32, i32* %v2_19b9, align 4
  store i32 %v3_19b9, i32* @eax, align 8
  %v1_19bf = add i32 %v0_19b9, -12
  %v2_19bf = inttoptr i32 %v1_19bf to i32*
  %v3_19bf = load i32, i32* %v2_19bf, align 4
  %v1_19c2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19c2 = icmp eq i32 %v1_19c2, %v3_19bf
  br i1 %v3_19c2, label %bb, label %dec_label_pc_19cf

bb:                                               ; preds = %dec_label_pc_197a
  %v1_19c9 = call i32 @function_1e84()
  store i32 %v1_19c9, i32* @eax, align 8
  br label %dec_label_pc_19cf

dec_label_pc_19cf:                                ; preds = %bb, %dec_label_pc_197a
  %v0_19cf = call i32 @function_1e7f()
  ret i32 %v0_19cf
}

define i32 @function_19d4() local_unnamed_addr {
dec_label_pc_19d4:
  %v0_19d6 = load i32, i32* @ebp, align 4
  %v1_19d6 = add i32 %v0_19d6, -728
  %v1_19e4 = call i32 @function_19e8(i32 %v1_19d6)
  ret i32 %v1_19e4
}

define i32 @function_19e6() local_unnamed_addr {
dec_label_pc_19e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_19e6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19e6
}

define i32 @function_19e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_19e8:
  %v0_19e8 = load i32, i32* @ebp, align 4
  %v1_19e8 = add i32 %v0_19e8, -646
  ret i32 %v1_19e8
}

define i32 @function_1a08() local_unnamed_addr {
dec_label_pc_1a08:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a08 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1a08, i32* @ebx, align 4
  %v0_1a0a = load i32, i32* @ebp, align 4
  %v1_1a0a = add i32 %v0_1a0a, -628
  store i32 %v1_1a0a, i32* %eax.global-to-local, align 8
  %v1_1a13 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1a0a)
  store i32 %v1_1a13, i32* %eax.global-to-local, align 8
  %v0_1a18 = call i32 @function_1a1c()
  store i32 %v0_1a18, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a18
}

define i32 @function_1a1a() local_unnamed_addr {
dec_label_pc_1a1a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a1a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a1a
}

define i32 @function_1a1c() local_unnamed_addr {
dec_label_pc_1a1c:
  %v0_1a1c = load i32, i32* @ebp, align 4
  %v1_1a1c = add i32 %v0_1a1c, -724
  ret i32 %v1_1a1c
}

define i32 @function_1a2a() local_unnamed_addr {
dec_label_pc_1a2a:
  %v0_1a2a = call i32 @function_1a2e()
  ret i32 %v0_1a2a
}

define i32 @function_1a2c() local_unnamed_addr {
dec_label_pc_1a2c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a2c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a2c
}

define i32 @function_1a2e() local_unnamed_addr {
dec_label_pc_1a2e:
  %v0_1a2e = load i32, i32* @ebp, align 4
  %v1_1a3c = add i32 %v0_1a2e, -292
  %v1_1a45 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1a3c)
  %v1_1a4a = call i32 @function_1e67(i32 %v1_1a3c)
  ret i32 %v1_1a4a
}

define i32 @function_1a4f() local_unnamed_addr {
dec_label_pc_1a4f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a4f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1a4f, i32* @ebx, align 4
  %v0_1a51 = load i32, i32* @ebp, align 4
  %v1_1a51 = add i32 %v0_1a51, -604
  store i32 %v1_1a51, i32* %eax.global-to-local, align 8
  %v1_1a5a = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1a51)
  store i32 %v1_1a5a, i32* %eax.global-to-local, align 8
  %v0_1a5f = call i32 @function_1a63()
  store i32 %v0_1a5f, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a5f
}

define i32 @function_1a61() local_unnamed_addr {
dec_label_pc_1a61:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a61 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a61
}

define i32 @function_1a63() local_unnamed_addr {
dec_label_pc_1a63:
  %v0_1a63 = load i32, i32* @ebp, align 4
  %v1_1a63 = add i32 %v0_1a63, -720
  ret i32 %v1_1a63
}

define i32 @function_1a71() local_unnamed_addr {
dec_label_pc_1a71:
  %v0_1a71 = call i32 @function_1a75()
  ret i32 %v0_1a71
}

define i32 @function_1a73() local_unnamed_addr {
dec_label_pc_1a73:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a73 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a73
}

define i32 @function_1a75() local_unnamed_addr {
dec_label_pc_1a75:
  %v0_1a75 = load i32, i32* @ebp, align 4
  %v1_1a75 = add i32 %v0_1a75, -644
  ret i32 %v1_1a75
}

define i32 @function_1a82() local_unnamed_addr {
dec_label_pc_1a82:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a82 = load i32, i32* @ebp, align 4
  %v1_1a82 = add i32 %v0_1a82, -69499
  %v2_1a82 = inttoptr i32 %v1_1a82 to i32*
  %v3_1a82 = load i32, i32* %v2_1a82, align 4
  %v4_1a82 = add i32 %v3_1a82, -1
  store i32 %v4_1a82, i32* %v2_1a82, align 4
  %v0_1a88 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1a88 = add i32 %v0_1a88, 1709712388
  %v2_1a88 = inttoptr i32 %v1_1a88 to i32*
  %v3_1a88 = load i32, i32* %v2_1a88, align 4
  %v4_1a88 = add i32 %v3_1a88, -1
  store i32 %v4_1a88, i32* %v2_1a88, align 4
  %v2_1a8e = load i8, i8* bitcast (i32* @ecx to i8*), align 8
  %v3_1a8e = load i32, i32* %eax.global-to-local, align 8
  %v4_1a8e = trunc i32 %v3_1a8e to i8
  %v5_1a8e = and i8 %v4_1a8e, %v2_1a8e
  %v11_1a8e = load i32, i32* %ecx.global-to-local, align 8
  %v12_1a8e = inttoptr i32 %v11_1a8e to i8*
  store i8 %v5_1a8e, i8* %v12_1a8e, align 1
  %v0_1a90 = load i32, i32* %ecx.global-to-local, align 8
  %v3_1a90 = udiv i32 %v0_1a90, 256
  %v5_1a90 = add i32 %v3_1a90, %v0_1a90
  %v20_1a90 = urem i32 %v5_1a90, 256
  %v22_1a90 = and i32 %v0_1a90, -256
  %v23_1a90 = or i32 %v20_1a90, %v22_1a90
  store i32 %v23_1a90, i32* @ecx, align 8
  %v2_1a92 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1a92 = mul i32 %v2_1a92, 2
  %tmp97 = icmp slt i32 %v2_1a92, 0
  %v4_1a92 = zext i1 %tmp97 to i32
  %v5_1a92 = or i32 %v4_1a92, %v3_1a92
  %v7_1a92 = inttoptr i32 %v2_1a92 to i32*
  store i32 %v5_1a92, i32* %v7_1a92, align 4
  %v2_1a94 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1a94 = load i32, i32* %eax.global-to-local, align 8
  %v4_1a94 = trunc i32 %v3_1a94 to i8
  %v5_1a94 = add i8 %v4_1a94, %v2_1a94
  %v21_1a94 = inttoptr i32 %v3_1a94 to i8*
  store i8 %v5_1a94, i8* %v21_1a94, align 1
  %v0_1a96 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1a96, i32* @ebx, align 4
  %v0_1a98 = load i32, i32* @ebp, align 4
  %v1_1a98 = add i32 %v0_1a98, -580
  store i32 %v1_1a98, i32* %eax.global-to-local, align 8
  %v1_1aa1 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1a98)
  store i32 %v1_1aa1, i32* %eax.global-to-local, align 8
  %v0_1aa6 = call i32 @function_1aaa()
  store i32 %v0_1aa6, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa6

; uselistorder directives
  uselistorder i32 %v2_1a92, { 2, 1, 0 }
  uselistorder i32 %v0_1a90, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 0, 1, 2 }
}

define i32 @function_1aa8() local_unnamed_addr {
dec_label_pc_1aa8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa8
}

define i32 @function_1aaa() local_unnamed_addr {
dec_label_pc_1aaa:
  %v0_1aaa = load i32, i32* @ebp, align 4
  %v1_1aaa = add i32 %v0_1aaa, -716
  ret i32 %v1_1aaa
}

define i32 @function_1ab8() local_unnamed_addr {
dec_label_pc_1ab8:
  %v0_1ab8 = call i32 @function_1abc()
  ret i32 %v0_1ab8
}

define i32 @function_1aba() local_unnamed_addr {
dec_label_pc_1aba:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aba
}

define i32 @function_1abc() local_unnamed_addr {
dec_label_pc_1abc:
  %v0_1abc = load i32, i32* @ebp, align 4
  %v1_1abc = add i32 %v0_1abc, -643
  ret i32 %v1_1abc
}

define i32 @function_1ac9() local_unnamed_addr {
dec_label_pc_1ac9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1ac9 = load i32, i32* @ebp, align 4
  %v1_1ac9 = add i32 %v0_1ac9, -64379
  %v2_1ac9 = inttoptr i32 %v1_1ac9 to i32*
  %v3_1ac9 = load i32, i32* %v2_1ac9, align 4
  %v4_1ac9 = add i32 %v3_1ac9, -1
  store i32 %v4_1ac9, i32* %v2_1ac9, align 4
  %v0_1acf = load i32, i32* %ecx.global-to-local, align 8
  %v1_1acf = add i32 %v0_1acf, 518530052
  %v2_1acf = inttoptr i32 %v1_1acf to i32*
  %v3_1acf = load i32, i32* %v2_1acf, align 4
  %v4_1acf = add i32 %v3_1acf, -1
  store i32 %v4_1acf, i32* %v2_1acf, align 4
  %v2_1ad5 = load i8, i8* bitcast (i32* @ecx to i8*), align 8
  %v3_1ad5 = load i32, i32* %eax.global-to-local, align 8
  %v4_1ad5 = trunc i32 %v3_1ad5 to i8
  %v5_1ad5 = and i8 %v4_1ad5, %v2_1ad5
  %v11_1ad5 = load i32, i32* %ecx.global-to-local, align 8
  %v12_1ad5 = inttoptr i32 %v11_1ad5 to i8*
  store i8 %v5_1ad5, i8* %v12_1ad5, align 1
  %v0_1ad7 = load i32, i32* %ecx.global-to-local, align 8
  %v3_1ad7 = udiv i32 %v0_1ad7, 256
  %v5_1ad7 = add i32 %v3_1ad7, %v0_1ad7
  %v20_1ad7 = and i32 %v5_1ad7, 255
  %v22_1ad7 = and i32 %v0_1ad7, -256
  %v23_1ad7 = or i32 %v20_1ad7, %v22_1ad7
  store i32 %v23_1ad7, i32* @ecx, align 8
  %v2_1ad9 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_1ad9 = zext i8 %v2_1ad9 to i32
  %v4_1ad9 = load i32, i32* %eax.global-to-local, align 8
  %v5_1ad9 = and i32 %v4_1ad9, -256
  %v6_1ad9 = or i32 %v5_1ad9, %v3_1ad9
  store i32 %v6_1ad9, i32* %eax.global-to-local, align 8
  %v1_1adb = inttoptr i32 %v6_1ad9 to i8*
  %v2_1adb = load i8, i8* %v1_1adb, align 1
  %v5_1adb = add i8 %v2_1adb, %v2_1ad9
  store i8 %v5_1adb, i8* %v1_1adb, align 1
  %v0_1add = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1add, i32* @ebx, align 4
  %v0_1adf = load i32, i32* @ebp, align 4
  %v1_1adf = add i32 %v0_1adf, -556
  store i32 %v1_1adf, i32* %eax.global-to-local, align 8
  %v1_1ae8 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1adf)
  store i32 %v1_1ae8, i32* %eax.global-to-local, align 8
  %v0_1aed = call i32 @function_1af1()
  store i32 %v0_1aed, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aed

; uselistorder directives
  uselistorder i32 %v0_1ad7, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
}

define i32 @function_1aef() local_unnamed_addr {
dec_label_pc_1aef:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aef
}

define i32 @function_1af1() local_unnamed_addr {
dec_label_pc_1af1:
  %v0_1af1 = load i32, i32* @ebp, align 4
  %v1_1af1 = add i32 %v0_1af1, -712
  ret i32 %v1_1af1
}

define i32 @function_1aff() local_unnamed_addr {
dec_label_pc_1aff:
  %v0_1aff = call i32 @function_1b03()
  ret i32 %v0_1aff
}

define i32 @function_1b01() local_unnamed_addr {
dec_label_pc_1b01:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b01 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b01
}

define i32 @function_1b03() local_unnamed_addr {
dec_label_pc_1b03:
  %v0_1b03 = load i32, i32* @ebp, align 4
  %v1_1b03 = add i32 %v0_1b03, -642
  ret i32 %v1_1b03
}

define i32 @function_1b10(i16 %arg1) local_unnamed_addr {
dec_label_pc_1b10:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b10 = load i32, i32* @ebp, align 4
  %v1_1b10 = add i32 %v0_1b10, -59259
  %v2_1b10 = inttoptr i32 %v1_1b10 to i32*
  %v3_1b10 = load i32, i32* %v2_1b10, align 4
  %v4_1b10 = add i32 %v3_1b10, -1
  store i32 %v4_1b10, i32* %v2_1b10, align 4
  %v0_1b16 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1b16 = add i32 %v0_1b16, -672652284
  %v2_1b16 = inttoptr i32 %v1_1b16 to i32*
  %v3_1b16 = load i32, i32* %v2_1b16, align 4
  %v4_1b16 = add i32 %v3_1b16, -1
  store i32 %v4_1b16, i32* %v2_1b16, align 4
  %v2_1b1d = load i32, i32* %eax.global-to-local, align 8
  %v4_1b1d = mul i32 %v2_1b1d, 2
  %v21_1b1d = inttoptr i32 %v2_1b1d to i32*
  store i32 %v4_1b1d, i32* %v21_1b1d, align 4
  %v1_1b1f = call i32 @function_1e67(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_1b1f, i32* %eax.global-to-local, align 8
  ret i32 %v1_1b1f

; uselistorder directives
  uselistorder i32 %v2_1b1d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1b24() local_unnamed_addr {
dec_label_pc_1b24:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b24 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1b24, i32* @ebx, align 4
  %v0_1b26 = load i32, i32* @ebp, align 4
  %v1_1b26 = add i32 %v0_1b26, -532
  store i32 %v1_1b26, i32* %eax.global-to-local, align 8
  %v1_1b2f = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1b26)
  store i32 %v1_1b2f, i32* %eax.global-to-local, align 8
  %v0_1b34 = call i32 @function_1b38()
  store i32 %v0_1b34, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b34

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_1b36() local_unnamed_addr {
dec_label_pc_1b36:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b36 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b36
}

define i32 @function_1b38() local_unnamed_addr {
dec_label_pc_1b38:
  %v0_1b38 = load i32, i32* @ebp, align 4
  %v1_1b38 = add i32 %v0_1b38, -704
  ret i32 %v1_1b38
}

define i32 @function_1b46() local_unnamed_addr {
dec_label_pc_1b46:
  %v0_1b46 = call i32 @function_1b4a()
  ret i32 %v0_1b46
}

define i32 @function_1b48() local_unnamed_addr {
dec_label_pc_1b48:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b48 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b48
}

define i32 @function_1b4a() local_unnamed_addr {
dec_label_pc_1b4a:
  %v0_1b4a = load i32, i32* @ebp, align 4
  %v1_1b4a = add i32 %v0_1b4a, -641
  ret i32 %v1_1b4a
}

define i32 @function_1b57(i16 %arg1) local_unnamed_addr {
dec_label_pc_1b57:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b57 = load i32, i32* @ebp, align 4
  %v1_1b57 = add i32 %v0_1b57, -54139
  %v2_1b57 = inttoptr i32 %v1_1b57 to i32*
  %v3_1b57 = load i32, i32* %v2_1b57, align 4
  %v4_1b57 = add i32 %v3_1b57, -1
  store i32 %v4_1b57, i32* %v2_1b57, align 4
  %v0_1b5d = load i32, i32* %ecx.global-to-local, align 8
  %v1_1b5d = add i32 %v0_1b5d, -1863834620
  %v2_1b5d = inttoptr i32 %v1_1b5d to i32*
  %v3_1b5d = load i32, i32* %v2_1b5d, align 4
  %v4_1b5d = add i32 %v3_1b5d, -1
  store i32 %v4_1b5d, i32* %v2_1b5d, align 4
  %v2_1b64 = load i32, i32* %eax.global-to-local, align 8
  %v4_1b64 = mul i32 %v2_1b64, 2
  %v21_1b64 = inttoptr i32 %v2_1b64 to i32*
  store i32 %v4_1b64, i32* %v21_1b64, align 4
  %v0_1b66 = call i32 @function_1b6a()
  store i32 %v0_1b66, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b66

; uselistorder directives
  uselistorder i32 %v2_1b64, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1b68() local_unnamed_addr {
dec_label_pc_1b68:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b68 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b68
}

define i32 @function_1b6a() local_unnamed_addr {
dec_label_pc_1b6a:
  %v0_1b6a = load i32, i32* @ebp, align 4
  %v1_1b6a = add i32 %v0_1b6a, -708
  ret i32 %v1_1b6a
}

define i32 @function_1b78() local_unnamed_addr {
dec_label_pc_1b78:
  %v1_1b78 = call i32 @function_1e67(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_1b78
}

define i32 @function_1b7d() local_unnamed_addr {
dec_label_pc_1b7d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b7d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1b7d, i32* @ebx, align 4
  %v0_1b7f = load i32, i32* @ebp, align 4
  %v1_1b7f = add i32 %v0_1b7f, -508
  store i32 %v1_1b7f, i32* %eax.global-to-local, align 8
  %v1_1b88 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1b7f)
  store i32 %v1_1b88, i32* %eax.global-to-local, align 8
  %v0_1b8d = call i32 @function_1b91()
  store i32 %v0_1b8d, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b8d

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_1b8f() local_unnamed_addr {
dec_label_pc_1b8f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b8f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b8f
}

define i32 @function_1b91() local_unnamed_addr {
dec_label_pc_1b91:
  %v0_1b91 = load i32, i32* @ebp, align 4
  %v1_1b91 = add i32 %v0_1b91, -700
  ret i32 %v1_1b91
}

define i32 @function_1b9f() local_unnamed_addr {
dec_label_pc_1b9f:
  %v0_1b9f = call i32 @function_1ba3()
  ret i32 %v0_1b9f
}

define i32 @function_1ba1() local_unnamed_addr {
dec_label_pc_1ba1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ba1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ba1
}

define i32 @function_1ba3() local_unnamed_addr {
dec_label_pc_1ba3:
  %v0_1ba3 = load i32, i32* @ebp, align 4
  %v1_1ba3 = add i32 %v0_1ba3, -640
  ret i32 %v1_1ba3
}

define i32 @function_1bb0(i16 %arg1) local_unnamed_addr {
dec_label_pc_1bb0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1bb0 = load i32, i32* @ebp, align 4
  %v1_1bb0 = add i32 %v0_1bb0, -49019
  %v2_1bb0 = inttoptr i32 %v1_1bb0 to i32*
  %v3_1bb0 = load i32, i32* %v2_1bb0, align 4
  %v4_1bb0 = add i32 %v3_1bb0, -1
  store i32 %v4_1bb0, i32* %v2_1bb0, align 4
  %v0_1bb6 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1bb6 = add i32 %v0_1bb6, 937960452
  %v2_1bb6 = inttoptr i32 %v1_1bb6 to i32*
  %v3_1bb6 = load i32, i32* %v2_1bb6, align 4
  %v4_1bb6 = add i32 %v3_1bb6, -1
  store i32 %v4_1bb6, i32* %v2_1bb6, align 4
  %v2_1bbd = load i32, i32* %eax.global-to-local, align 8
  %v4_1bbd = mul i32 %v2_1bbd, 2
  %v21_1bbd = inttoptr i32 %v2_1bbd to i32*
  store i32 %v4_1bbd, i32* %v21_1bbd, align 4
  %v1_1bbf = call i32 @function_1e67(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_1bbf, i32* %eax.global-to-local, align 8
  ret i32 %v1_1bbf

; uselistorder directives
  uselistorder i32 %v2_1bbd, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1bc4() local_unnamed_addr {
dec_label_pc_1bc4:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bc4 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1bc4, i32* @ebx, align 4
  %v0_1bc6 = load i32, i32* @ebp, align 4
  %v1_1bc6 = add i32 %v0_1bc6, -484
  store i32 %v1_1bc6, i32* %eax.global-to-local, align 8
  %v1_1bcf = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1bc6)
  store i32 %v1_1bcf, i32* %eax.global-to-local, align 8
  %v0_1bd4 = call i32 @function_1bd8()
  store i32 %v0_1bd4, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bd4

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_1bd6() local_unnamed_addr {
dec_label_pc_1bd6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bd6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bd6
}

define i32 @function_1bd8() local_unnamed_addr {
dec_label_pc_1bd8:
  %v0_1bd8 = load i32, i32* @ebp, align 4
  %v1_1bd8 = add i32 %v0_1bd8, -696
  ret i32 %v1_1bd8
}

define i32 @function_1be6() local_unnamed_addr {
dec_label_pc_1be6:
  %v0_1be6 = call i32 @function_1bea()
  ret i32 %v0_1be6
}

define i32 @function_1be8() local_unnamed_addr {
dec_label_pc_1be8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1be8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1be8
}

define i32 @function_1bea() local_unnamed_addr {
dec_label_pc_1bea:
  %v0_1bea = load i32, i32* @ebp, align 4
  %v1_1bea = add i32 %v0_1bea, -639
  ret i32 %v1_1bea
}

define i32 @function_1bf7() local_unnamed_addr {
dec_label_pc_1bf7:
  %ds.global-to-local = alloca i16, align 2
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1bf7 = load i32, i32* @ebp, align 4
  %v1_1bf7 = add i32 %v0_1bf7, -43899
  %v2_1bf7 = inttoptr i32 %v1_1bf7 to i32*
  %v3_1bf7 = load i32, i32* %v2_1bf7, align 4
  %v4_1bf7 = add i32 %v3_1bf7, -1
  store i32 %v4_1bf7, i32* %v2_1bf7, align 4
  %v0_1bfd = load i32, i32* %ecx.global-to-local, align 8
  %v1_1bfd = add i32 %v0_1bfd, -253221884
  %v2_1bfd = inttoptr i32 %v1_1bfd to i32*
  %v3_1bfd = load i32, i32* %v2_1bfd, align 4
  %v4_1bfd = add i32 %v3_1bfd, -1
  store i32 %v4_1bfd, i32* %v2_1bfd, align 4
  %v0_1c03 = load i16, i16* %ds.global-to-local, align 2
  %v2_1c04 = load i32, i32* %eax.global-to-local, align 8
  %v4_1c04 = mul i32 %v2_1c04, 2
  %v21_1c04 = inttoptr i32 %v2_1c04 to i32*
  store i32 %v4_1c04, i32* %v21_1c04, align 4
  %v1_1c06 = sext i16 %v0_1c03 to i32
  %v2_1c06 = call i32 @function_1e67(i32 %v1_1c06)
  store i32 %v2_1c06, i32* %eax.global-to-local, align 8
  ret i32 %v2_1c06

; uselistorder directives
  uselistorder i32 %v2_1c04, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1c0b() local_unnamed_addr {
dec_label_pc_1c0b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c0b = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1c0b, i32* @ebx, align 4
  %v0_1c0d = load i32, i32* @ebp, align 4
  %v1_1c0d = add i32 %v0_1c0d, -460
  store i32 %v1_1c0d, i32* %eax.global-to-local, align 8
  %v1_1c16 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1c0d)
  store i32 %v1_1c16, i32* %eax.global-to-local, align 8
  %v0_1c1b = call i32 @function_1c1f()
  store i32 %v0_1c1b, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c1b

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_1c1d() local_unnamed_addr {
dec_label_pc_1c1d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c1d
}

define i32 @function_1c1f() local_unnamed_addr {
dec_label_pc_1c1f:
  %v0_1c1f = load i32, i32* @ebp, align 4
  %v1_1c1f = add i32 %v0_1c1f, -692
  ret i32 %v1_1c1f
}

define i32 @function_1c2d() local_unnamed_addr {
dec_label_pc_1c2d:
  %v0_1c2d = call i32 @function_1c31()
  ret i32 %v0_1c2d
}

define i32 @function_1c2f() local_unnamed_addr {
dec_label_pc_1c2f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c2f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c2f
}

define i32 @function_1c31() local_unnamed_addr {
dec_label_pc_1c31:
  %v0_1c31 = load i32, i32* @ebp, align 4
  %v1_1c31 = add i32 %v0_1c31, -638
  ret i32 %v1_1c31
}

define i32 @function_1c3e() local_unnamed_addr {
dec_label_pc_1c3e:
  %ds.global-to-local = alloca i16, align 2
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c3e = load i32, i32* @ebp, align 4
  %v1_1c3e = add i32 %v0_1c3e, -38779
  %v2_1c3e = inttoptr i32 %v1_1c3e to i32*
  %v3_1c3e = load i32, i32* %v2_1c3e, align 4
  %v4_1c3e = add i32 %v3_1c3e, -1
  store i32 %v4_1c3e, i32* %v2_1c3e, align 4
  %v0_1c44 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1c44 = add i32 %v0_1c44, -1444404220
  %v2_1c44 = inttoptr i32 %v1_1c44 to i32*
  %v3_1c44 = load i32, i32* %v2_1c44, align 4
  %v4_1c44 = add i32 %v3_1c44, -1
  store i32 %v4_1c44, i32* %v2_1c44, align 4
  %v0_1c4a = load i16, i16* %ds.global-to-local, align 2
  %v2_1c4b = load i32, i32* %eax.global-to-local, align 8
  %v4_1c4b = mul i32 %v2_1c4b, 2
  %v21_1c4b = inttoptr i32 %v2_1c4b to i32*
  store i32 %v4_1c4b, i32* %v21_1c4b, align 4
  %v1_1c4d = sext i16 %v0_1c4a to i32
  %v2_1c4d = call i32 @function_1e67(i32 %v1_1c4d)
  store i32 %v2_1c4d, i32* %eax.global-to-local, align 8
  ret i32 %v2_1c4d

; uselistorder directives
  uselistorder i32 %v2_1c4b, { 1, 0 }
}

define i32 @function_1c52() local_unnamed_addr {
dec_label_pc_1c52:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c52 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1c52, i32* @ebx, align 4
  %v0_1c54 = load i32, i32* @ebp, align 4
  %v1_1c54 = add i32 %v0_1c54, -436
  store i32 %v1_1c54, i32* %eax.global-to-local, align 8
  %v1_1c5d = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1c54)
  store i32 %v1_1c5d, i32* %eax.global-to-local, align 8
  %v0_1c62 = call i32 @function_1c66()
  store i32 %v0_1c62, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c62
}

define i32 @function_1c64() local_unnamed_addr {
dec_label_pc_1c64:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c64 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c64
}

define i32 @function_1c66() local_unnamed_addr {
dec_label_pc_1c66:
  %v0_1c66 = load i32, i32* @ebp, align 4
  %v1_1c66 = add i32 %v0_1c66, -680
  %v1_1c74 = call i32 @function_1c78(i32 %v1_1c66)
  ret i32 %v1_1c74
}

define i32 @function_1c76() local_unnamed_addr {
dec_label_pc_1c76:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c76 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c76
}

define i32 @function_1c78(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c78:
  %v0_1c78 = load i32, i32* @ebp, align 4
  %v1_1c78 = add i32 %v0_1c78, -636
  ret i32 %v1_1c78
}

define i32 @function_1c85() local_unnamed_addr {
dec_label_pc_1c85:
  %ds.global-to-local = alloca i16, align 2
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c85 = load i32, i32* @ebp, align 4
  %v1_1c85 = add i32 %v0_1c85, -33659
  %v2_1c85 = inttoptr i32 %v1_1c85 to i32*
  %v3_1c85 = load i32, i32* %v2_1c85, align 4
  %v4_1c85 = add i32 %v3_1c85, -1
  store i32 %v4_1c85, i32* %v2_1c85, align 4
  %v0_1c8b = load i32, i32* %ecx.global-to-local, align 8
  %v1_1c8b = add i32 %v0_1c8b, 1659380740
  %v2_1c8b = inttoptr i32 %v1_1c8b to i32*
  %v3_1c8b = load i32, i32* %v2_1c8b, align 4
  %v4_1c8b = add i32 %v3_1c8b, -1
  store i32 %v4_1c8b, i32* %v2_1c8b, align 4
  %v0_1c91 = load i16, i16* %ds.global-to-local, align 2
  %v2_1c92 = load i32, i32* %eax.global-to-local, align 8
  %v4_1c92 = mul i32 %v2_1c92, 2
  %v21_1c92 = inttoptr i32 %v2_1c92 to i32*
  store i32 %v4_1c92, i32* %v21_1c92, align 4
  %v1_1c94 = sext i16 %v0_1c91 to i32
  %v2_1c94 = call i32 @function_1c98(i32 %v1_1c94)
  store i32 %v2_1c94, i32* %eax.global-to-local, align 8
  ret i32 %v2_1c94

; uselistorder directives
  uselistorder i32 %v2_1c92, { 1, 0 }
}

define i32 @function_1c96() local_unnamed_addr {
dec_label_pc_1c96:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c96
}

define i32 @function_1c98(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c98:
  %v0_1c98 = load i32, i32* @ebp, align 4
  %v1_1c98 = add i32 %v0_1c98, -684
  ret i32 %v1_1c98
}

define i32 @function_1ca6() local_unnamed_addr {
dec_label_pc_1ca6:
  %v0_1ca6 = call i32 @function_1caa()
  ret i32 %v0_1ca6
}

define i32 @function_1ca8() local_unnamed_addr {
dec_label_pc_1ca8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ca8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ca8
}

define i32 @function_1caa() local_unnamed_addr {
dec_label_pc_1caa:
  %v0_1caa = load i32, i32* @ebp, align 4
  %v1_1caa = add i32 %v0_1caa, -688
  ret i32 %v1_1caa
}

define i32 @function_1cb8() local_unnamed_addr {
dec_label_pc_1cb8:
  %v0_1cb8 = call i32 @function_1cbc()
  ret i32 %v0_1cb8
}

define i32 @function_1cba() local_unnamed_addr {
dec_label_pc_1cba:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1cba
}

define i32 @function_1cbc() local_unnamed_addr {
dec_label_pc_1cbc:
  %v0_1cbc = load i32, i32* @ebp, align 4
  %v1_1cbc = add i32 %v0_1cbc, -637
  ret i32 %v1_1cbc
}

define i32 @function_1cca() local_unnamed_addr {
dec_label_pc_1cca:
  %v1_1cca = call i32 @function_1e67(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_1cca
}

define i32 @function_1ccf() local_unnamed_addr {
dec_label_pc_1ccf:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ccf = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1ccf, i32* @ebx, align 4
  %v0_1cd1 = load i32, i32* @ebp, align 4
  %v1_1cd1 = add i32 %v0_1cd1, -412
  store i32 %v1_1cd1, i32* %eax.global-to-local, align 8
  %v1_1cda = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1cd1)
  store i32 %v1_1cda, i32* %eax.global-to-local, align 8
  %v0_1cdf = call i32 @function_1ce3()
  store i32 %v0_1cdf, i32* %eax.global-to-local, align 8
  ret i32 %v0_1cdf
}

define i32 @function_1ce1() local_unnamed_addr {
dec_label_pc_1ce1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ce1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ce1
}

define i32 @function_1ce3() local_unnamed_addr {
dec_label_pc_1ce3:
  %v0_1ce3 = load i32, i32* @ebp, align 4
  %v1_1ce3 = add i32 %v0_1ce3, -672
  ret i32 %v1_1ce3
}

define i32 @function_1cf1() local_unnamed_addr {
dec_label_pc_1cf1:
  %v0_1cf1 = call i32 @function_1cf5()
  ret i32 %v0_1cf1
}

define i32 @function_1cf3() local_unnamed_addr {
dec_label_pc_1cf3:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cf3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1cf3
}

define i32 @function_1cf5() local_unnamed_addr {
dec_label_pc_1cf5:
  %v0_1cf5 = load i32, i32* @ebp, align 4
  %v1_1cf5 = add i32 %v0_1cf5, -634
  ret i32 %v1_1cf5
}

define i32 @function_1d03() local_unnamed_addr {
dec_label_pc_1d03:
  %v0_1d03 = load i32, i32* @ebp, align 4
  %v1_1d03 = add i32 %v0_1d03, -112
  %v1_1d09 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1d03)
  %v0_1d0e = call i32 @function_1d12()
  ret i32 %v0_1d0e
}

define i32 @function_1d10() local_unnamed_addr {
dec_label_pc_1d10:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d10 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d10
}

define i32 @function_1d12() local_unnamed_addr {
dec_label_pc_1d12:
  %v0_1d12 = load i32, i32* @ebp, align 4
  %v1_1d12 = add i32 %v0_1d12, -676
  ret i32 %v1_1d12
}

define i32 @function_1d20() local_unnamed_addr {
dec_label_pc_1d20:
  %v0_1d20 = call i32 @function_1d24()
  ret i32 %v0_1d20
}

define i32 @function_1d22() local_unnamed_addr {
dec_label_pc_1d22:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d22 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d22
}

define i32 @function_1d24() local_unnamed_addr {
dec_label_pc_1d24:
  %v0_1d24 = load i32, i32* @ebp, align 4
  %v1_1d24 = add i32 %v0_1d24, -635
  ret i32 %v1_1d24
}

define i32 @function_1d32() local_unnamed_addr {
dec_label_pc_1d32:
  %v1_1d32 = call i32 @function_1e67(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_1d32
}

define i32 @function_1d37() local_unnamed_addr {
dec_label_pc_1d37:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d37 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1d37, i32* @ebx, align 4
  %v0_1d39 = load i32, i32* @ebp, align 4
  %v1_1d39 = add i32 %v0_1d39, -388
  store i32 %v1_1d39, i32* %eax.global-to-local, align 8
  %v1_1d42 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1d39)
  store i32 %v1_1d42, i32* %eax.global-to-local, align 8
  %v0_1d47 = call i32 @function_1d4b()
  store i32 %v0_1d47, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d47
}

define i32 @function_1d49() local_unnamed_addr {
dec_label_pc_1d49:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d49 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d49
}

define i32 @function_1d4b() local_unnamed_addr {
dec_label_pc_1d4b:
  %v0_1d4b = load i32, i32* @ebp, align 4
  %v1_1d4b = add i32 %v0_1d4b, -664
  ret i32 %v1_1d4b
}

define i32 @function_1d59() local_unnamed_addr {
dec_label_pc_1d59:
  %v0_1d59 = call i32 @function_1d5d()
  ret i32 %v0_1d59
}

define i32 @function_1d5b() local_unnamed_addr {
dec_label_pc_1d5b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d5b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d5b
}

define i32 @function_1d5d() local_unnamed_addr {
dec_label_pc_1d5d:
  %v0_1d5d = load i32, i32* @ebp, align 4
  %v1_1d5d = add i32 %v0_1d5d, -632
  ret i32 %v1_1d5d
}

define i32 @function_1d6a() local_unnamed_addr {
dec_label_pc_1d6a:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1d6a = add i32 %tmp91, 76129349
  %v2_1d6a = inttoptr i32 %v1_1d6a to i32*
  %v3_1d6a = load i32, i32* %v2_1d6a, align 4
  %v4_1d6a = add i32 %v3_1d6a, -1
  store i32 %v4_1d6a, i32* %v2_1d6a, align 4
  %v0_1d70 = load i32, i32* %eax.global-to-local, align 8
  %v11_1d70 = and i32 %v0_1d70, -24
  store i32 %v11_1d70, i32* %eax.global-to-local, align 8
  %v0_1d72 = load i8, i8* inttoptr (i32 48955393 to i8*), align 1
  %v3_1d72 = add i8 %v0_1d72, 119
  store i8 %v3_1d72, i8* inttoptr (i32 48955393 to i8*), align 1
  ret i32 %v11_1d70
}

define i32 @function_1d88() local_unnamed_addr {
dec_label_pc_1d88:
  %v0_1d88 = call i32 @function_1d8c()
  ret i32 %v0_1d88
}

define i32 @function_1d8a() local_unnamed_addr {
dec_label_pc_1d8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d8a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d8a
}

define i32 @function_1d8c() local_unnamed_addr {
dec_label_pc_1d8c:
  %v0_1d8c = load i32, i32* @ebp, align 4
  %v1_1d8c = add i32 %v0_1d8c, -633
  ret i32 %v1_1d8c
}

define i32 @function_1d9a() local_unnamed_addr {
dec_label_pc_1d9a:
  %v1_1d9a = call i32 @function_1e67(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_1d9a
}

define i32 @function_1d9f() local_unnamed_addr {
dec_label_pc_1d9f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d9f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1d9f, i32* @ebx, align 4
  %v0_1da1 = load i32, i32* @ebp, align 4
  %v1_1da1 = add i32 %v0_1da1, -364
  store i32 %v1_1da1, i32* %eax.global-to-local, align 8
  %v1_1daa = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1da1)
  store i32 %v1_1daa, i32* %eax.global-to-local, align 8
  %v0_1daf = call i32 @function_1db3()
  store i32 %v0_1daf, i32* %eax.global-to-local, align 8
  ret i32 %v0_1daf
}

define i32 @function_1db1() local_unnamed_addr {
dec_label_pc_1db1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1db1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1db1
}

define i32 @function_1db3() local_unnamed_addr {
dec_label_pc_1db3:
  %v0_1db3 = load i32, i32* @ebp, align 4
  %v1_1db3 = add i32 %v0_1db3, -660
  ret i32 %v1_1db3
}

define i32 @function_1dc1() local_unnamed_addr {
dec_label_pc_1dc1:
  %v0_1dc1 = call i32 @function_1dc5()
  ret i32 %v0_1dc1
}

define i32 @function_1dc3() local_unnamed_addr {
dec_label_pc_1dc3:
  %eax.global-to-local = alloca i32, align 4
  %v0_1dc3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dc3
}

define i32 @function_1dc5() local_unnamed_addr {
dec_label_pc_1dc5:
  %v0_1dc5 = load i32, i32* @ebp, align 4
  %v1_1dc5 = add i32 %v0_1dc5, -631
  ret i32 %v1_1dc5
}

define i32 @function_1dd3() local_unnamed_addr {
dec_label_pc_1dd3:
  %v0_1dd3 = load i32, i32* @ebp, align 4
  %v1_1dd3 = add i32 %v0_1dd3, -72
  %v1_1dd9 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1dd3)
  %v1_1dde = call i32 @function_1e67(i32 %v1_1dd3)
  ret i32 %v1_1dde
}

define i32 @function_1de3() local_unnamed_addr {
dec_label_pc_1de3:
  %eax.global-to-local = alloca i32, align 4
  %v0_1de3 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1de3, i32* @ebx, align 4
  %v0_1de5 = load i32, i32* @ebp, align 4
  %v1_1de5 = add i32 %v0_1de5, -340
  store i32 %v1_1de5, i32* %eax.global-to-local, align 8
  %v1_1dee = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1de5)
  store i32 %v1_1dee, i32* %eax.global-to-local, align 8
  %v0_1df3 = call i32 @function_1df7()
  store i32 %v0_1df3, i32* %eax.global-to-local, align 8
  ret i32 %v0_1df3
}

define i32 @function_1df5() local_unnamed_addr {
dec_label_pc_1df5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1df5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1df5
}

define i32 @function_1df7() local_unnamed_addr {
dec_label_pc_1df7:
  %v0_1df7 = load i32, i32* @ebp, align 4
  %v1_1df7 = add i32 %v0_1df7, -656
  ret i32 %v1_1df7
}

define i32 @function_1e05() local_unnamed_addr {
dec_label_pc_1e05:
  %v0_1e05 = call i32 @function_1e09()
  ret i32 %v0_1e05
}

define i32 @function_1e07() local_unnamed_addr {
dec_label_pc_1e07:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e07 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e07
}

define i32 @function_1e09() local_unnamed_addr {
dec_label_pc_1e09:
  %v0_1e09 = load i32, i32* @ebp, align 4
  %v1_1e09 = add i32 %v0_1e09, -630
  ret i32 %v1_1e09
}

define i32 @function_1e16() local_unnamed_addr {
dec_label_pc_1e16:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e16 = load i32, i32* @ebp, align 4
  %v1_1e16 = add i32 %v0_1e16, 76139589
  %v2_1e16 = inttoptr i32 %v1_1e16 to i32*
  %v3_1e16 = load i32, i32* %v2_1e16, align 4
  %v4_1e16 = add i32 %v3_1e16, -1
  store i32 %v4_1e16, i32* %v2_1e16, align 4
  %v0_1e1c = load i32, i32* %eax.global-to-local, align 8
  %v1_1e1c = trunc i32 %v0_1e1c to i8
  %v2_1e1c = and i8 %v1_1e1c, -24
  %v2_1e1e = udiv i8 %v2_1e1c, 28
  %v3_1e1e = urem i8 %v2_1e1c, 28
  %v4_1e1e = zext i8 %v3_1e1e to i32
  %v6_1e1e = and i32 %v0_1e1c, -65536
  %v8_1e1e = zext i8 %v2_1e1e to i32
  %v10_1e1e = mul nuw nsw i32 %v8_1e1e, 256
  %v11_1e1e = or i32 %v4_1e1e, %v6_1e1e
  %v12_1e1e = or i32 %v11_1e1e, %v10_1e1e
  store i32 %v12_1e1e, i32* %eax.global-to-local, align 8
  %v1_1e20 = inttoptr i32 %v12_1e1e to i32*
  %v2_1e20 = load i32, i32* %v1_1e20, align 4
  %v4_1e20 = add i32 %v12_1e1e, %v2_1e20
  store i32 %v4_1e20, i32* %v1_1e20, align 4
  %v1_1e22 = call i32 @function_1e67(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_1e22, i32* %eax.global-to-local, align 8
  ret i32 %v1_1e22
}

define i32 @function_1e24() local_unnamed_addr {
dec_label_pc_1e24:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e24 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1e24, i32* @ebx, align 4
  %v0_1e26 = load i32, i32* @ebp, align 4
  %v1_1e26 = add i32 %v0_1e26, -316
  store i32 %v1_1e26, i32* %eax.global-to-local, align 8
  %v1_1e2f = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1e26)
  store i32 %v1_1e2f, i32* %eax.global-to-local, align 8
  %v0_1e34 = call i32 @function_1e38()
  store i32 %v0_1e34, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e34
}

define i32 @function_1e36() local_unnamed_addr {
dec_label_pc_1e36:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e36 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e36
}

define i32 @function_1e38() local_unnamed_addr {
dec_label_pc_1e38:
  %v0_1e38 = load i32, i32* @ebp, align 4
  %v1_1e38 = add i32 %v0_1e38, -652
  ret i32 %v1_1e38
}

define i32 @function_1e46() local_unnamed_addr {
dec_label_pc_1e46:
  %v0_1e46 = call i32 @function_1e4a()
  ret i32 %v0_1e46
}

define i32 @function_1e48() local_unnamed_addr {
dec_label_pc_1e48:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e48 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e48
}

define i32 @function_1e4a() local_unnamed_addr {
dec_label_pc_1e4a:
  %v0_1e4a = load i32, i32* @ebp, align 4
  %v1_1e4a = add i32 %v0_1e4a, -629
  ret i32 %v1_1e4a
}

define i32 @function_1e58() local_unnamed_addr {
dec_label_pc_1e58:
  %v0_1e58 = load i32, i32* @ebp, align 4
  %v1_1e58 = add i32 %v0_1e58, -32
  %v1_1e5e = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_1e58)
  %v1_1e63 = call i32 @function_1e67(i32 %v1_1e58)
  ret i32 %v1_1e63

; uselistorder directives
  uselistorder i32 (i32)* @function_1e67, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1e66() local_unnamed_addr {
dec_label_pc_1e66:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e66 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e66
}

define i32 @function_1e67(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e67:
  %v0_1e67 = load i32, i32* @ebp, align 4
  %v1_1e67 = add i32 %v0_1e67, -740
  %v1_1e70 = inttoptr i32 %v1_1e67 to i32*
  %v2_1e70 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_1e70)
  %v0_1e75 = load i32, i32* @ebx, align 4
  ret i32 %v0_1e75
}

define i32 @function_1e7f() local_unnamed_addr {
dec_label_pc_1e7f:
  %v0_1e7f = load i32, i32* @eax, align 8
  ret i32 %v0_1e7f
}

define i32 @function_1e84() local_unnamed_addr {
dec_label_pc_1e84:
  %v0_1e8a = load i32, i32* @eax, align 8
  ret i32 %v0_1e8a
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" @_Z7getworkRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_1e8d:
  %tmp110 = call i8 @__decompiler_undefined_function_2()
  %v10_1ebe = icmp eq i8 %tmp110, 0
  %v1_1ec5 = icmp eq i1 %v10_1ebe, false
  br i1 %v1_1ec5, label %dec_label_pc_1ee6, label %dec_label_pc_1ec7

dec_label_pc_1ec7:                                ; preds = %dec_label_pc_1e8d
  %v4_1ea4 = sext i1 %fHelp to i32
  %v2_1ed0 = inttoptr i32 %v4_1ea4 to i32*
  %v3_1ed0 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_1ed0)
  %tmp119 = or i32 %v3_1ed0, 1
  %tmp120 = icmp ne i32 %tmp119, 1
  %. = zext i1 %tmp120 to i32
  br label %dec_label_pc_1ee6

dec_label_pc_1ee6:                                ; preds = %dec_label_pc_1ec7, %dec_label_pc_1e8d
  %storemerge = phi i32 [ 1, %dec_label_pc_1e8d ], [ %., %dec_label_pc_1ec7 ]
  store i32 %storemerge, i32* @eax, align 8
  %v5_1ee6 = icmp eq i32 %storemerge, 0
  br i1 %v5_1ee6, label %bb, label %dec_label_pc_1eee

bb:                                               ; preds = %dec_label_pc_1ee6
  %v1_1ee8 = call i32 @function_1f71()
  br label %dec_label_pc_1eee

dec_label_pc_1eee:                                ; preds = %bb, %dec_label_pc_1ee6
  %v3_1eee = phi i32 [ %v1_1ee8, %bb ], [ %storemerge, %dec_label_pc_1ee6 ]
  %v4_1eee = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" undef, i32 %v3_1eee, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.5" %v4_1eee

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0, 2 }
}

define i32 @function_1efb() local_unnamed_addr {
dec_label_pc_1efb:
  %eax.global-to-local = alloca i32, align 4
  %v0_1efb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1efb
}

define i32 @function_1f71() local_unnamed_addr {
dec_label_pc_1f71:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f92() local_unnamed_addr {
dec_label_pc_1f92:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f92 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f92
}

define i32 @function_2013() local_unnamed_addr {
dec_label_pc_2013:
  %eax.global-to-local = alloca i32, align 4
  %v0_2018 = load i32, i32* %eax.global-to-local, align 8
  %v4_2018 = trunc i32 %v0_2018 to i8
  %v5_2018 = icmp eq i8 %v4_2018, 0
  br i1 %v5_2018, label %bb, label %dec_label_pc_2020

bb:                                               ; preds = %dec_label_pc_2013
  %v1_201a = call i32 @function_20ae()
  store i32 %v1_201a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2020

dec_label_pc_2020:                                ; preds = %bb, %dec_label_pc_2013
  %v0_202e = load i32, i32* @ebp, align 4
  %v1_205c = add i32 %v0_202e, -548
  store i32 %v1_205c, i32* %eax.global-to-local, align 8
  ret i32 %v1_205c

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
}

define i32 @function_20ae() local_unnamed_addr {
dec_label_pc_20ae:
  %v2_20b3 = load i8, i8* inttoptr (i32 23748 to i8*), align 4
  %v3_20b3 = zext i8 %v2_20b3 to i32
  %v5_20b6 = icmp eq i8 %v2_20b3, 0
  %v1_20b8 = icmp eq i1 %v5_20b6, false
  br i1 %v1_20b8, label %bb, label %dec_label_pc_20ba

bb:                                               ; preds = %dec_label_pc_20ae
  %v2_20b8 = call i32 @function_2109()
  br label %dec_label_pc_20ba

dec_label_pc_20ba:                                ; preds = %bb, %dec_label_pc_20ae
  %v2_20ba = phi i32 [ %v2_20b8, %bb ], [ %v3_20b3, %dec_label_pc_20ae ]
  ret i32 %v2_20ba
}

define i32 @function_2109() local_unnamed_addr {
dec_label_pc_2109:
  %v2_210e = load i8, i8* bitcast (i8** @global_var_5ccc.2792 to i8*), align 4
  %v3_210e = zext i8 %v2_210e to i32
  %v5_2111 = icmp eq i8 %v2_210e, 0
  %v1_2113 = icmp eq i1 %v5_2111, false
  br i1 %v1_2113, label %bb, label %dec_label_pc_2115

bb:                                               ; preds = %dec_label_pc_2109
  %v2_2113 = call i32 @function_2164()
  br label %dec_label_pc_2115

dec_label_pc_2115:                                ; preds = %bb, %dec_label_pc_2109
  %v3_2115 = phi i32 [ %v2_2113, %bb ], [ %v3_210e, %dec_label_pc_2109 ]
  ret i32 %v3_2115
}

define i32 @function_2164() local_unnamed_addr {
dec_label_pc_2164:
  %v0_2164 = load i32, i32* @ebp, align 4
  %v1_2164 = add i32 %v0_2164, -624
  %v2_2164 = inttoptr i32 %v1_2164 to i32*
  %v3_2164 = load i32, i32* %v2_2164, align 4
  %v1_216d = inttoptr i32 %v3_2164 to i32*
  %v2_216d = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v1_216d)
  %v1_2172 = icmp eq i32 %v2_216d, 0
  %v1_2174 = zext i1 %v1_2172 to i32
  %v3_2174 = and i32 %v2_216d, -256
  %v4_2174 = or i32 %v1_2174, %v3_2174
  %v5_2177 = icmp eq i1 %v1_2172, false
  br i1 %v5_2177, label %bb, label %dec_label_pc_217f

bb:                                               ; preds = %dec_label_pc_2164
  %v1_2179 = call i32 @function_2a29()
  br label %dec_label_pc_217f

dec_label_pc_217f:                                ; preds = %bb, %dec_label_pc_2164
  %v1_217f = phi i32 [ %v1_2179, %bb ], [ %v4_2174, %dec_label_pc_2164 ]
  ret i32 %v1_217f

; uselistorder directives
  uselistorder i1 %v1_2172, { 1, 0 }
}

define i32 @function_21bf() local_unnamed_addr {
dec_label_pc_21bf:
  store i32 1, i32* @eax, align 8
  %v0_21c4 = call i32 @function_21cb()
  ret i32 %v0_21c4
}

define i32 @function_21c6() local_unnamed_addr {
dec_label_pc_21c6:
  ret i32 0
}

define i32 @function_21cb() local_unnamed_addr {
dec_label_pc_21cb:
  %v0_21cb = load i32, i32* @eax, align 8
  %v4_21cb = trunc i32 %v0_21cb to i8
  %v5_21cb = icmp eq i8 %v4_21cb, 0
  br i1 %v5_21cb, label %bb, label %dec_label_pc_21d3

bb:                                               ; preds = %dec_label_pc_21cb
  %v1_21cd = call i32 @function_24b4()
  br label %dec_label_pc_21d3

dec_label_pc_21d3:                                ; preds = %bb, %dec_label_pc_21cb
  %v1_21d3 = phi i32 [ %v1_21cd, %bb ], [ %v0_21cb, %dec_label_pc_21cb ]
  ret i32 %v1_21d3
}

define i32 @function_22db() local_unnamed_addr {
dec_label_pc_22db:
  %v0_22db = load i32, i32* @ebp, align 4
  %v1_22db = add i32 %v0_22db, -451
  %v1_22e4 = inttoptr i32 %v1_22db to i8*
  %v2_22e4 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_22e4)
  %v4_22e9 = trunc i32 %v2_22e4 to i8
  %v5_22e9 = icmp eq i8 %v4_22e9, 0
  %v1_22eb = icmp eq i1 %v5_22e9, false
  br i1 %v1_22eb, label %bb, label %dec_label_pc_22ed

bb:                                               ; preds = %dec_label_pc_22db
  %v2_22eb = call i32 @function_233c()
  br label %dec_label_pc_22ed

dec_label_pc_22ed:                                ; preds = %bb, %dec_label_pc_22db
  %v0_22f5 = load i32, i32* @ebp, align 4
  %v1_22f5 = add i32 %v0_22f5, -484
  %v2_22f5 = inttoptr i32 %v1_22f5 to i32*
  %v3_22f5 = load i32, i32* %v2_22f5, align 4
  %v2_22fe = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE(i32 %v3_22f5, i32 0)
  %v1_2303 = inttoptr i32 %v2_22fe to i32*
  %v2_2303 = load i32, i32* %v1_2303, align 4
  %v1_2305 = load i32, i32* @ebp, align 4
  %v2_2305 = add i32 %v1_2305, -476
  %v3_2305 = inttoptr i32 %v2_2305 to i32*
  store i32 %v2_2303, i32* %v3_2305, align 4
  %v0_230b = call i32 @function_232e()
  ret i32 %v0_230b
}

define i32 @function_230d() local_unnamed_addr {
dec_label_pc_230d:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_232e() local_unnamed_addr {
dec_label_pc_232e:
  %v0_232e = load i32, i32* @ebp, align 4
  %v1_232e = add i32 %v0_232e, -451
  %v2_232e = inttoptr i32 %v1_232e to i8*
  %v3_232e = load i8, i8* %v2_232e, align 1
  %v4_232e = zext i8 %v3_232e to i32
  %v1_2335 = xor i32 %v4_232e, 1
  ret i32 %v1_2335
}

define i32 @function_233c() local_unnamed_addr {
dec_label_pc_233c:
  %v0_233c = load i32, i32* @ebp, align 4
  %v1_233c = add i32 %v0_233c, -451
  %v2_233c = inttoptr i32 %v1_233c to i8*
  %v3_233c = load i8, i8* %v2_233c, align 1
  %v5_2343 = icmp eq i8 %v3_233c, 0
  br i1 %v5_2343, label %bb, label %dec_label_pc_2347

bb:                                               ; preds = %dec_label_pc_233c
  %v1_2345 = call i32 @function_235d()
  %v0_234f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2347

dec_label_pc_2347:                                ; preds = %bb, %dec_label_pc_233c
  %v0_234f = phi i32 [ %v0_234f.pre, %bb ], [ %v0_233c, %dec_label_pc_233c ]
  %v1_234f = add i32 %v0_234f, -484
  %v2_234f = inttoptr i32 %v1_234f to i32*
  %v3_234f = load i32, i32* %v2_234f, align 4
  %v2_2358 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_234f, i32 0)
  ret i32 %v2_2358
}

define i32 @function_235d() local_unnamed_addr {
dec_label_pc_235d:
  %v0_235d = load i32, i32* @ebp, align 4
  %v1_235d = add i32 %v0_235d, -451
  %v2_235d = inttoptr i32 %v1_235d to i8*
  %v3_235d = load i8, i8* %v2_235d, align 1
  %v5_2364 = icmp eq i8 %v3_235d, 0
  br i1 %v5_2364, label %dec_label_pc_2396, label %dec_label_pc_2368

dec_label_pc_2368:                                ; preds = %dec_label_pc_235d
  %v1_2370 = add i32 %v0_235d, -480
  %v2_2370 = inttoptr i32 %v1_2370 to i32*
  %v3_2370 = load i32, i32* %v2_2370, align 4
  %v1_237a = add i32 %v0_235d, -484
  %v2_237a = inttoptr i32 %v1_237a to i32*
  %v3_237a = load i32, i32* %v2_237a, align 4
  %v3_2383 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE(i32 %v3_237a, i32 %v3_2370, i32 0)
  %v1_2388 = xor i32 %v3_2383, 1
  %v4_2388 = trunc i32 %v1_2388 to i8
  %v5_238b = icmp eq i8 %v4_2388, 0
  br i1 %v5_238b, label %dec_label_pc_2396, label %dec_label_pc_239b

dec_label_pc_2396:                                ; preds = %dec_label_pc_2368, %dec_label_pc_235d
  br label %dec_label_pc_239b

dec_label_pc_239b:                                ; preds = %dec_label_pc_2368, %dec_label_pc_2396
  %storemerge = phi i32 [ 0, %dec_label_pc_2396 ], [ 1, %dec_label_pc_2368 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_235d, { 1, 0, 2 }
  uselistorder i32 -484, { 3, 0, 1, 2 }
  uselistorder i32 -451, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_239b, { 1, 0 }
}

define i32 @function_23a3() local_unnamed_addr {
dec_label_pc_23a3:
  %v2_23aa = call i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EE5clearEv(i32* nonnull @global_var_5d14.2793)
  ret i32 %v2_23aa
}

define i32 @function_23af() local_unnamed_addr {
dec_label_pc_23af:
  %eax.global-to-local = alloca i32, align 4
  store i32 0, i32* inttoptr (i32 23840 to i32*), align 32
  %v0_23af = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23af
}

define i32 @function_23d2() local_unnamed_addr {
dec_label_pc_23d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_23d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23d2
}

define i32 @function_23f4() local_unnamed_addr {
dec_label_pc_23f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_23f4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23f4
}

define i32 @function_2414() local_unnamed_addr {
dec_label_pc_2414:
  %eax.global-to-local = alloca i32, align 4
  %v0_2414 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2414
}

define i32 @function_24a8() local_unnamed_addr {
dec_label_pc_24a8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_24a8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24a8 = add i32 %v0_24a8, -120699
  %v2_24a8 = inttoptr i32 %v1_24a8 to i8*
  %v3_24a8 = load i8, i8* %v2_24a8, align 1
  %v4_24a8 = load i32, i32* %ecx.global-to-local, align 8
  %v5_24a8 = trunc i32 %v4_24a8 to i8
  %v6_24a8 = add i8 %v5_24a8, %v3_24a8
  store i8 %v6_24a8, i8* %v2_24a8, align 1
  %v0_24ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24ae
}

define i32 @function_24b4() local_unnamed_addr {
dec_label_pc_24b4:
  %v0_24b4 = load i32, i32* inttoptr (i32 23860 to i32*), align 4
  %v1_24b9 = load i32, i32* @ebp, align 4
  %v2_24b9 = add i32 %v1_24b9, -468
  %v3_24b9 = inttoptr i32 %v2_24b9 to i32*
  store i32 %v0_24b4, i32* %v3_24b9, align 4
  %v0_24c5 = load i32, i32* @ebp, align 4
  %v1_24c5 = add i32 %v0_24c5, -468
  %v2_24c5 = inttoptr i32 %v1_24c5 to i32*
  %v3_24c5 = load i32, i32* %v2_24c5, align 4
  ret i32 %v3_24c5
}

define i32 @function_2600() local_unnamed_addr {
dec_label_pc_2600:
  %eax.global-to-local = alloca i32, align 4
  %v0_2600 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2600
}

define i32 @function_2641() local_unnamed_addr {
dec_label_pc_2641:
  %eax.global-to-local = alloca i32, align 4
  %v0_2642 = load i32, i32* %eax.global-to-local, align 8
  %v1_2642 = trunc i32 %v0_2642 to i8
  %not. = icmp ugt i8 %v1_2642, -126
  %v3_2642 = urem i8 %v1_2642, -125
  %v4_2642 = zext i8 %v3_2642 to i32
  %v6_2642 = and i32 %v0_2642, -65536
  %v10_2642 = select i1 %not., i32 256, i32 0
  %v11_2642 = or i32 %v4_2642, %v6_2642
  %v12_2642 = or i32 %v11_2642, %v10_2642
  store i32 %v12_2642, i32* %eax.global-to-local, align 8
  ret i32 %v12_2642

; uselistorder directives
  uselistorder i8 %v1_2642, { 1, 0 }
}

define i32 @function_2653() local_unnamed_addr {
dec_label_pc_2653:
  %eax.global-to-local = alloca i32, align 4
  %v0_2653 = load i32, i32* %eax.global-to-local, align 8
  %v11_2653 = and i32 %v0_2653, -24
  store i32 %v11_2653, i32* @eax, align 8
  %v0_2655 = call i32 @function_26b3()
  store i32 %v0_2655, i32* %eax.global-to-local, align 8
  ret i32 %v0_2655
}

define i32 @function_26b3() local_unnamed_addr {
dec_label_pc_26b3:
  %v0_26b6 = load i32, i32* @ebp, align 4
  %v1_26b6 = add i32 %v0_26b6, -412
  %v1_26bf = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEEC1ERKSsRKNS_10Value_implIS2_EE(i32 %v1_26b6)
  %v0_26c4 = load i32, i32* @ebp, align 4
  %v1_26c4 = add i32 %v0_26c4, -412
  %v1_26ce = add i32 %v0_26c4, -568
  %v2_26d7 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 %v1_26ce, i32 %v1_26c4)
  %v0_26dc = load i32, i32* @ebp, align 4
  %v1_26dc = add i32 %v0_26dc, -412
  %v1_26e5 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_26dc)
  %v0_26ea = load i32, i32* @ebp, align 4
  %v1_26ea = add i32 %v0_26ea, -524
  ret i32 %v1_26ea
}

define i32 @function_2737() local_unnamed_addr {
dec_label_pc_2737:
  %v0_2737 = call i32 @function_24548980()
  ret i32 %v0_2737
}

define i32 @function_282a() local_unnamed_addr {
dec_label_pc_282a:
  %eax.global-to-local = alloca i32, align 4
  %v0_282a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_282a
}

define i32 @function_29fd() local_unnamed_addr {
dec_label_pc_29fd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_29fd = load i32, i32* @ebp, align 4
  %v1_29fd = add i32 %v0_29fd, -145275
  %v2_29fd = inttoptr i32 %v1_29fd to i32*
  %v3_29fd = load i32, i32* %v2_29fd, align 4
  %v4_29fd = add i32 %v3_29fd, -1
  store i32 %v4_29fd, i32* %v2_29fd, align 4
  %v0_2a03 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2a03 = add i32 %v0_2a03, -1962662844
  %v2_2a03 = inttoptr i32 %v1_2a03 to i32*
  %v3_2a03 = load i32, i32* %v2_2a03, align 4
  %v4_2a03 = add i32 %v3_2a03, -1
  store i32 %v4_2a03, i32* %v2_2a03, align 4
  %v1_2a09 = load i32, i32* %edi.global-to-local, align 4
  %v0_2a10 = load i32, i32* %eax.global-to-local, align 8
  %v11_2a10 = and i32 %v0_2a10, -24
  %v1_2a12 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v11_2a10, i32* %esi.global-to-local, align 4
  %v1_2a13 = add i32 %v1_2a09, -1
  store i32 %v1_2a13, i32* %edi.global-to-local, align 4
  %v4_2a14 = add i32 %v1_2a12, %v11_2a10
  %v21_2a14 = inttoptr i32 %v1_2a12 to i32*
  store i32 %v4_2a14, i32* %v21_2a14, align 4
  %v0_2a16 = load i32, i32* @ebp, align 4
  %v1_2a16 = add i32 %v0_2a16, -568
  store i32 %v1_2a16, i32* %eax.global-to-local, align 8
  %v1_2a1f = inttoptr i32 %v1_2a16 to i32*
  %v2_2a1f = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_2a1f)
  store i32 %v2_2a1f, i32* %eax.global-to-local, align 8
  %v0_2a24 = call i32 @function_3010()
  store i32 %v0_2a24, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a24

; uselistorder directives
  uselistorder i32 %v11_2a10, { 1, 0 }
}

define i32 @function_2a29() local_unnamed_addr {
dec_label_pc_2a29:
  %v0_2a31 = load i32, i32* @ebp, align 4
  %v1_2a31 = add i32 %v0_2a31, -624
  %v2_2a31 = inttoptr i32 %v1_2a31 to i32*
  %v3_2a31 = load i32, i32* %v2_2a31, align 4
  %v2_2a3a = inttoptr i32 %v3_2a31 to i32*
  %v3_2a3a = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_2a3a, i32 0)
  %v1_2a42 = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv(i32 %v3_2a3a)
  %v0_2a49 = load i32, i32* @ebp, align 4
  %v1_2a49 = add i32 %v0_2a49, -568
  ret i32 %v1_2a49
}

define i32 @function_2a89() local_unnamed_addr {
dec_label_pc_2a89:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a89 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a89
}

define i32 @function_2b09() local_unnamed_addr {
dec_label_pc_2b09:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2b0c = load i32, i32* %eax.global-to-local, align 8
  %v1_2b0c = trunc i32 %v0_2b0c to i8
  %v2_2b0c = and i8 %v1_2b0c, 4
  %v8_2b0c = zext i8 %v2_2b0c to i32
  %v10_2b0c = and i32 %v0_2b0c, -256
  %v11_2b0c = or i32 %v8_2b0c, %v10_2b0c
  store i32 %v11_2b0c, i32* %eax.global-to-local, align 8
  %v1_2b0e = inttoptr i32 %v11_2b0c to i8*
  %v2_2b0e = load i8, i8* %v1_2b0e, align 4
  %v5_2b0e = add i8 %v2_2b0e, %v2_2b0c
  store i8 %v5_2b0e, i8* %v1_2b0e, align 4
  %v0_2b10 = load i32, i32* %eax.global-to-local, align 8
  %v1_2b10 = inttoptr i32 %v0_2b10 to i8*
  %v2_2b10 = load i8, i8* %v1_2b10, align 1
  %v4_2b10 = trunc i32 %v0_2b10 to i8
  %v5_2b10 = add i8 %v2_2b10, %v4_2b10
  store i8 %v5_2b10, i8* %v1_2b10, align 1
  %v0_2b12 = load i32, i32* @ebp, align 4
  %v1_2b12 = add i32 %v0_2b12, -568
  store i32 %v1_2b12, i32* %eax.global-to-local, align 8
  %v1_2b1b = inttoptr i32 %v1_2b12 to i32*
  %v2_2b1b = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v1_2b1b)
  store i32 %v2_2b1b, i32* %eax.global-to-local, align 8
  %v1_2b20 = load i32, i32* @ebp, align 4
  %v2_2b20 = add i32 %v1_2b20, -464
  %v3_2b20 = inttoptr i32 %v2_2b20 to i32*
  store i32 %v2_2b1b, i32* %v3_2b20, align 4
  %v0_2b26 = load i32, i32* @ebp, align 4
  %v1_2b26 = add i32 %v0_2b26, -492
  %v2_2b26 = inttoptr i32 %v1_2b26 to i32*
  store i32 0, i32* %v2_2b26, align 4
  br label %dec_label_pc_2b65

dec_label_pc_2b32:                                ; preds = %dec_label_pc_2b65
  %v3_2b32 = load i32, i32* %v2_2b65, align 4
  %v2_2b38 = mul i32 %v3_2b32, 4
  store i32 %v2_2b38, i32* %eax.global-to-local, align 8
  store i32 %v2_2b38, i32* %ebx.global-to-local, align 4
  %v2_2b3d = add i32 %v0_2b65, -464
  %v3_2b3d = inttoptr i32 %v2_2b3d to i32*
  %v4_2b3d = load i32, i32* %v3_2b3d, align 4
  %v5_2b3d = add i32 %v4_2b3d, %v2_2b38
  store i32 %v5_2b3d, i32* @ebx, align 4
  %v3_2b43 = load i32, i32* %v2_2b65, align 4
  %v2_2b49 = mul i32 %v3_2b43, 4
  store i32 %v2_2b49, i32* %eax.global-to-local, align 8
  %v4_2b4c = load i32, i32* %v3_2b3d, align 4
  %v5_2b4c = add i32 %v4_2b4c, %v2_2b49
  store i32 %v5_2b4c, i32* %eax.global-to-local, align 8
  %v1_2b52 = inttoptr i32 %v5_2b4c to i32*
  %v2_2b52 = load i32, i32* %v1_2b52, align 4
  store i32 %v2_2b52, i32* %eax.global-to-local, align 8
  %v1_2b57 = call i32 @_Z11ByteReversej(i32 %v2_2b52)
  store i32 %v1_2b57, i32* %eax.global-to-local, align 8
  %v1_2b5c = load i32, i32* @ebx, align 4
  %v2_2b5c = inttoptr i32 %v1_2b5c to i32*
  store i32 %v1_2b57, i32* %v2_2b5c, align 4
  %v0_2b5e = load i32, i32* @ebp, align 4
  %v1_2b5e = add i32 %v0_2b5e, -492
  %v2_2b5e = inttoptr i32 %v1_2b5e to i32*
  %v3_2b5e = load i32, i32* %v2_2b5e, align 4
  %v4_2b5e = add i32 %v3_2b5e, 1
  store i32 %v4_2b5e, i32* %v2_2b5e, align 4
  br label %dec_label_pc_2b65

dec_label_pc_2b65:                                ; preds = %dec_label_pc_2b32, %dec_label_pc_2b09
  %v0_2b65 = load i32, i32* @ebp, align 4
  %v1_2b65 = add i32 %v0_2b65, -492
  %v2_2b65 = inttoptr i32 %v1_2b65 to i32*
  %v3_2b65 = load i32, i32* %v2_2b65, align 4
  %v4_2b65 = add i32 %v3_2b65, -31
  %tmp103 = sub i32 30, %v3_2b65
  %v11_2b65 = and i32 %tmp103, %v3_2b65
  %v12_2b65 = icmp slt i32 %v11_2b65, 0
  %v13_2b65 = icmp eq i32 %v4_2b65, 0
  %v14_2b65 = icmp slt i32 %v4_2b65, 0
  %v3_2b6c = icmp ne i1 %v14_2b65, %v12_2b65
  %v4_2b6c = or i1 %v13_2b65, %v3_2b6c
  %v5_2b6c = zext i1 %v4_2b6c to i32
  %v6_2b6c = load i32, i32* %eax.global-to-local, align 8
  %v7_2b6c = and i32 %v6_2b6c, -256
  %v8_2b6c = or i32 %v5_2b6c, %v7_2b6c
  store i32 %v8_2b6c, i32* %eax.global-to-local, align 8
  %v5_2b6f = icmp eq i1 %v4_2b6c, false
  %v1_2b71 = icmp eq i1 %v5_2b6f, false
  br i1 %v1_2b71, label %dec_label_pc_2b32, label %dec_label_pc_2b73

dec_label_pc_2b73:                                ; preds = %dec_label_pc_2b65
  %v1_2b73 = add i32 %v0_2b65, -464
  %v2_2b73 = inttoptr i32 %v1_2b73 to i32*
  %v3_2b73 = load i32, i32* %v2_2b73, align 4
  %v1_2b79 = add i32 %v3_2b73, 36
  store i32 %v1_2b79, i32* %eax.global-to-local, align 8
  %v2_2b87 = call i32 @_ZNKSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEE5countERS8_(i32 ptrtoint (i32* @global_var_5cfc.2795 to i32), i32 %v1_2b79)
  %v1_2b8c = icmp eq i32 %v2_2b87, 0
  %v1_2b8e = zext i1 %v1_2b8c to i32
  %v3_2b8e = and i32 %v2_2b87, -256
  %v4_2b8e = or i32 %v1_2b8e, %v3_2b8e
  store i32 %v4_2b8e, i32* %eax.global-to-local, align 8
  %v5_2b91 = icmp eq i1 %v1_2b8c, false
  %v0_2bb0 = load i32, i32* @ebp, align 4
  br i1 %v5_2b91, label %dec_label_pc_2bb0, label %dec_label_pc_2b95

dec_label_pc_2b95:                                ; preds = %dec_label_pc_2b73
  %v1_2b9d = add i32 %v0_2bb0, -620
  %v2_2b9d = inttoptr i32 %v1_2b9d to i32*
  %v3_2b9d = load i32, i32* %v2_2b9d, align 4
  store i32 %v3_2b9d, i32* %eax.global-to-local, align 8
  %v2_2ba6 = inttoptr i32 %v3_2b9d to i32*
  %v3_2ba6 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Eb(i32* %v2_2ba6, i32 0)
  store i32 %v3_2ba6, i32* %eax.global-to-local, align 8
  %v0_2bab = call i32 @function_2ceb()
  store i32 %v0_2bab, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bab

dec_label_pc_2bb0:                                ; preds = %dec_label_pc_2b73
  %v1_2bb0 = add i32 %v0_2bb0, -464
  %v2_2bb0 = inttoptr i32 %v1_2bb0 to i32*
  %v3_2bb0 = load i32, i32* %v2_2bb0, align 4
  %v1_2bb6 = add i32 %v3_2bb0, 36
  store i32 %v1_2bb6, i32* %eax.global-to-local, align 8
  %v2_2bc4 = call i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEEixERS8_(i32 ptrtoint (i32* @global_var_5cfc.2795 to i32), i32 %v1_2bb6)
  store i32 %v2_2bc4, i32* %eax.global-to-local, align 8
  %v1_2bc9 = inttoptr i32 %v2_2bc4 to i32*
  %v2_2bc9 = load i32, i32* %v1_2bc9, align 4
  store i32 %v2_2bc9, i32* %eax.global-to-local, align 8
  %v1_2bcb = load i32, i32* @ebp, align 4
  %v2_2bcb = add i32 %v1_2bcb, -460
  %v3_2bcb = inttoptr i32 %v2_2bcb to i32*
  store i32 %v2_2bc9, i32* %v3_2bcb, align 4
  %v0_2bd1 = load i32, i32* @ebp, align 4
  %v1_2bd1 = add i32 %v0_2bd1, -464
  %v2_2bd1 = inttoptr i32 %v1_2bd1 to i32*
  %v3_2bd1 = load i32, i32* %v2_2bd1, align 4
  store i32 %v3_2bd1, i32* %eax.global-to-local, align 8
  %v1_2bd7 = add i32 %v3_2bd1, 68
  %v2_2bd7 = inttoptr i32 %v1_2bd7 to i32*
  %v3_2bd7 = load i32, i32* %v2_2bd7, align 4
  %v1_2bda = add i32 %v0_2bd1, -460
  %v2_2bda = inttoptr i32 %v1_2bda to i32*
  %v3_2bda = load i32, i32* %v2_2bda, align 4
  store i32 %v3_2bda, i32* %eax.global-to-local, align 8
  %v2_2be0 = add i32 %v3_2bda, 68
  %v3_2be0 = inttoptr i32 %v2_2be0 to i32*
  store i32 %v3_2bd7, i32* %v3_2be0, align 4
  %v0_2be3 = load i32, i32* @ebp, align 4
  %v1_2be3 = add i32 %v0_2be3, -464
  %v2_2be3 = inttoptr i32 %v1_2be3 to i32*
  %v3_2be3 = load i32, i32* %v2_2be3, align 4
  store i32 %v3_2be3, i32* %eax.global-to-local, align 8
  %v1_2be9 = add i32 %v3_2be3, 76
  %v2_2be9 = inttoptr i32 %v1_2be9 to i32*
  %v3_2be9 = load i32, i32* %v2_2be9, align 4
  %v1_2bec = add i32 %v0_2be3, -460
  %v2_2bec = inttoptr i32 %v1_2bec to i32*
  %v3_2bec = load i32, i32* %v2_2bec, align 4
  store i32 %v3_2bec, i32* %eax.global-to-local, align 8
  %v2_2bf2 = add i32 %v3_2bec, 76
  %v3_2bf2 = inttoptr i32 %v2_2bf2 to i32*
  store i32 %v3_2be9, i32* %v3_2bf2, align 4
  %v0_2bf5 = load i32, i32* @ebp, align 4
  %v1_2bf5 = add i32 %v0_2bf5, -464
  %v2_2bf5 = inttoptr i32 %v1_2bf5 to i32*
  %v3_2bf5 = load i32, i32* %v2_2bf5, align 4
  %v1_2bfb = add i32 %v3_2bf5, 36
  store i32 %v1_2bfb, i32* %eax.global-to-local, align 8
  %v2_2c09 = call i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEEixERS8_(i32 ptrtoint (i32* @global_var_5cfc.2795 to i32), i32 %v1_2bfb)
  store i32 %v2_2c09, i32* %eax.global-to-local, align 8
  %v1_2c0e = add i32 %v2_2c09, 4
  store i32 %v1_2c0e, i32* %ebx.global-to-local, align 4
  %v0_2c11 = load i32, i32* @ebp, align 4
  %v1_2c11 = add i32 %v0_2c11, -460
  %v2_2c11 = inttoptr i32 %v1_2c11 to i32*
  %v3_2c11 = load i32, i32* %v2_2c11, align 4
  %v1_2c17 = add i32 %v3_2c11, 80
  store i32 %v1_2c17, i32* %eax.global-to-local, align 8
  %v2_2c25 = inttoptr i32 %v1_2c17 to i32*
  %v3_2c25 = call i32 @_ZNSt6vectorI12CTransactionSaIS0_EEixEj(i32* %v2_2c25, i32 0)
  %v1_2c2a = add i32 %v3_2c25, 4
  store i32 %v1_2c2a, i32* %eax.global-to-local, align 8
  %v2_2c38 = inttoptr i32 %v1_2c2a to i32*
  %v3_2c38 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %v2_2c38, i32 0)
  %v1_2c3d = add i32 %v3_2c38, 36
  store i32 %v1_2c3d, i32* %eax.global-to-local, align 8
  %v0_2c40 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2c47 = call i32 @_ZN7CScriptaSERKS_(i32 %v1_2c3d, i32 %v0_2c40)
  store i32 %v2_2c47, i32* %eax.global-to-local, align 8
  %v0_2c4c = load i32, i32* @ebp, align 4
  %v1_2c4c = add i32 %v0_2c4c, -460
  %v2_2c4c = inttoptr i32 %v1_2c4c to i32*
  %v3_2c4c = load i32, i32* %v2_2c4c, align 4
  store i32 %v3_2c4c, i32* %ebx.global-to-local, align 4
  %v1_2c52 = add i32 %v0_2c4c, -664
  store i32 %v1_2c52, i32* %eax.global-to-local, align 8
  ret i32 %v1_2c52

; uselistorder directives
  uselistorder i32 %v0_2bb0, { 1, 0 }
  uselistorder i1 %v1_2b8c, { 1, 0 }
  uselistorder i32 %v4_2b65, { 1, 0 }
  uselistorder i32* %v2_2b65, { 2, 1, 0 }
  uselistorder i32 %v0_2b65, { 0, 2, 1 }
  uselistorder i32 %v2_2b49, { 1, 0 }
  uselistorder i32 %v2_2b38, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30 }
  uselistorder i32 (i32, i32)* @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEEixERS8_, { 1, 0 }
  uselistorder i32 -492, { 1, 0, 2 }
  uselistorder i32 -464, { 0, 1, 2, 3, 5, 4, 6 }
}

define i32 @function_2ceb() local_unnamed_addr {
dec_label_pc_2ceb:
  %v0_2ceb = load i32, i32* @ebp, align 4
  %v1_2ceb = add i32 %v0_2ceb, -568
  %v1_2cf4 = inttoptr i32 %v1_2ceb to i32*
  %v2_2cf4 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_2cf4)
  %v0_2cf9 = call i32 @function_3010()
  ret i32 %v0_2cf9

; uselistorder directives
  uselistorder i32 ()* @function_3010, { 1, 0 }
}

define i32 @function_2d0e() local_unnamed_addr {
dec_label_pc_2d0e:
  %v0_2d0e = call i32 @function_2d12()
  ret i32 %v0_2d0e
}

define i32 @function_2d10() local_unnamed_addr {
dec_label_pc_2d10:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d10 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d10
}

define i32 @function_2d12() local_unnamed_addr {
dec_label_pc_2d12:
  %v0_2d12 = load i32, i32* @ebp, align 4
  %v1_2d12 = add i32 %v0_2d12, -454
  ret i32 %v1_2d12
}

define i32 @function_2d42() local_unnamed_addr {
dec_label_pc_2d42:
  %v0_2d42 = call i32 @function_2d46()
  ret i32 %v0_2d42
}

define i32 @function_2d44() local_unnamed_addr {
dec_label_pc_2d44:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d44 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d44
}

define i32 @function_2d46() local_unnamed_addr {
dec_label_pc_2d46:
  %v0_2d5c = load i32, i32* @esi, align 4
  ret i32 %v0_2d5c
}

define i32 @function_2d76() local_unnamed_addr {
dec_label_pc_2d76:
  %v0_2d76 = call i32 @function_2d7a()
  ret i32 %v0_2d76
}

define i32 @function_2d78() local_unnamed_addr {
dec_label_pc_2d78:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d78 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d78
}

define i32 @function_2d7a() local_unnamed_addr {
dec_label_pc_2d7a:
  %v0_2d7a = load i32, i32* @ebp, align 4
  %v1_2d7a = add i32 %v0_2d7a, -452
  ret i32 %v1_2d7a
}

define i32 @function_2d9b() local_unnamed_addr {
dec_label_pc_2d9b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d9b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d9b
}

define i32 @function_2db9() local_unnamed_addr {
dec_label_pc_2db9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2db9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2db9
}

define i32 @function_2de6() local_unnamed_addr {
dec_label_pc_2de6:
  %v0_2de6 = call i32 @function_2dea()
  ret i32 %v0_2de6
}

define i32 @function_2de8() local_unnamed_addr {
dec_label_pc_2de8:
  %eax.global-to-local = alloca i32, align 4
  %v0_2de8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2de8
}

define i32 @function_2dea() local_unnamed_addr {
dec_label_pc_2dea:
  %v0_2dea = load i32, i32* @ebp, align 4
  %v1_2dea = add i32 %v0_2dea, -450
  ret i32 %v1_2dea
}

define i32 @function_2e0a() local_unnamed_addr {
dec_label_pc_2e0a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e0a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2e0a, i32* @ebx, align 4
  %v0_2e0c = load i32, i32* @ebp, align 4
  %v1_2e0c = add i32 %v0_2e0c, -596
  store i32 %v1_2e0c, i32* %eax.global-to-local, align 8
  %v1_2e15 = call i32 @_ZNSt4pairIP6CBlock7CScriptED1Ev(i32 %v1_2e0c)
  store i32 %v1_2e15, i32* %eax.global-to-local, align 8
  %v0_2e1a = call i32 @function_2e1e()
  store i32 %v0_2e1a, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e1a
}

define i32 @function_2e1c() local_unnamed_addr {
dec_label_pc_2e1c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e1c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e1c
}

define i32 @function_2e1e() local_unnamed_addr {
dec_label_pc_2e1e:
  %v0_2e1e = load i32, i32* @ebp, align 4
  %v1_2e1e = add i32 %v0_2e1e, -580
  %v1_2e27 = call i32 @_ZN7CScriptD1Ev(i32 %v1_2e1e)
  %v0_2e2c = load i32, i32* @ebx, align 4
  ret i32 %v0_2e2c
}

define i32 @function_2e37() local_unnamed_addr {
dec_label_pc_2e37:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e37 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e37
}

define i32 @function_2e50() local_unnamed_addr {
dec_label_pc_2e50:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e50 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2e50, i32* @ebx, align 4
  %v0_2e52 = load i32, i32* @ebp, align 4
  %v1_2e52 = add i32 %v0_2e52, -412
  store i32 %v1_2e52, i32* %eax.global-to-local, align 8
  %v1_2e5b = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2e52)
  store i32 %v1_2e5b, i32* %eax.global-to-local, align 8
  %v0_2e60 = call i32 @function_2e64()
  store i32 %v0_2e60, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e60
}

define i32 @function_2e62() local_unnamed_addr {
dec_label_pc_2e62:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e62 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e62
}

define i32 @function_2e64() local_unnamed_addr {
dec_label_pc_2e64:
  %v0_2e64 = load i32, i32* @ebp, align 4
  %v1_2e64 = add i32 %v0_2e64, -524
  ret i32 %v1_2e64
}

define i32 @function_2e72() local_unnamed_addr {
dec_label_pc_2e72:
  %v0_2e72 = call i32 @function_2e76()
  ret i32 %v0_2e72
}

define i32 @function_2e74() local_unnamed_addr {
dec_label_pc_2e74:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e74 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e74
}

define i32 @function_2e76() local_unnamed_addr {
dec_label_pc_2e76:
  %v0_2e76 = load i32, i32* @ebp, align 4
  %v1_2e84 = add i32 %v0_2e76, -316
  %v1_2e8d = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2e84)
  %v0_2e92 = call i32 @function_2e96()
  ret i32 %v0_2e92
}

define i32 @function_2e94() local_unnamed_addr {
dec_label_pc_2e94:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e94 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e94
}

define i32 @function_2e96() local_unnamed_addr {
dec_label_pc_2e96:
  %v0_2e96 = load i32, i32* @ebp, align 4
  %v1_2e96 = add i32 %v0_2e96, -528
  %v1_2ea4 = call i32 @function_2fb0(i32 %v1_2e96)
  ret i32 %v1_2ea4
}

define i32 @function_2ea9() local_unnamed_addr {
dec_label_pc_2ea9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ea9 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2ea9, i32* @ebx, align 4
  %v0_2eab = load i32, i32* @ebp, align 4
  %v1_2eab = add i32 %v0_2eab, -388
  store i32 %v1_2eab, i32* %eax.global-to-local, align 8
  %v1_2eb4 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2eab)
  store i32 %v1_2eb4, i32* %eax.global-to-local, align 8
  %v0_2eb9 = call i32 @function_2ebd()
  store i32 %v0_2eb9, i32* %eax.global-to-local, align 8
  ret i32 %v0_2eb9
}

define i32 @function_2ebb() local_unnamed_addr {
dec_label_pc_2ebb:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ebb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ebb
}

define i32 @function_2ebd() local_unnamed_addr {
dec_label_pc_2ebd:
  %v0_2ebd = load i32, i32* @ebp, align 4
  %v1_2ebd = add i32 %v0_2ebd, -516
  ret i32 %v1_2ebd
}

define i32 @function_2ecb() local_unnamed_addr {
dec_label_pc_2ecb:
  %v0_2ecb = call i32 @function_2ecf()
  ret i32 %v0_2ecb
}

define i32 @function_2ecd() local_unnamed_addr {
dec_label_pc_2ecd:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ecd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ecd
}

define i32 @function_2ecf() local_unnamed_addr {
dec_label_pc_2ecf:
  %v0_2ecf = load i32, i32* @ebp, align 4
  %v1_2ecf = add i32 %v0_2ecf, -448
  ret i32 %v1_2ecf
}

define i32 @function_2edd() local_unnamed_addr {
dec_label_pc_2edd:
  %v0_2edd = load i32, i32* @ebp, align 4
  %v1_2edd = add i32 %v0_2edd, -296
  %v1_2ee6 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2edd)
  %v0_2eeb = call i32 @function_2eef()
  ret i32 %v0_2eeb
}

define i32 @function_2eed() local_unnamed_addr {
dec_label_pc_2eed:
  %eax.global-to-local = alloca i32, align 4
  %v0_2eed = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2eed
}

define i32 @function_2eef() local_unnamed_addr {
dec_label_pc_2eef:
  %v0_2eef = load i32, i32* @ebp, align 4
  %v1_2eef = add i32 %v0_2eef, -520
  ret i32 %v1_2eef
}

define i32 @function_2efd() local_unnamed_addr {
dec_label_pc_2efd:
  %v1_2efd = call i32 @function_2fb0(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_2efd
}

define i32 @function_2f02() local_unnamed_addr {
dec_label_pc_2f02:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f02 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2f02, i32* @ebx, align 4
  %v0_2f04 = load i32, i32* @ebp, align 4
  %v1_2f04 = add i32 %v0_2f04, -364
  store i32 %v1_2f04, i32* %eax.global-to-local, align 8
  %v1_2f0d = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2f04)
  store i32 %v1_2f0d, i32* %eax.global-to-local, align 8
  %v0_2f12 = call i32 @function_2f16()
  store i32 %v0_2f12, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f12
}

define i32 @function_2f14() local_unnamed_addr {
dec_label_pc_2f14:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f14 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f14
}

define i32 @function_2f16() local_unnamed_addr {
dec_label_pc_2f16:
  %v0_2f16 = load i32, i32* @ebp, align 4
  %v1_2f16 = add i32 %v0_2f16, -508
  %v1_2f24 = call i32 @function_2f28(i32 %v1_2f16)
  ret i32 %v1_2f24
}

define i32 @function_2f26() local_unnamed_addr {
dec_label_pc_2f26:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f26 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f26
}

define i32 @function_2f28(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f28:
  %v0_2f28 = load i32, i32* @ebp, align 4
  %v1_2f28 = add i32 %v0_2f28, -447
  ret i32 %v1_2f28
}

define i32 @function_2f36() local_unnamed_addr {
dec_label_pc_2f36:
  %v0_2f36 = load i32, i32* @ebp, align 4
  %v1_2f36 = add i32 %v0_2f36, -276
  %v1_2f3f = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2f36)
  %v0_2f44 = call i32 @function_2f48()
  ret i32 %v0_2f44
}

define i32 @function_2f46() local_unnamed_addr {
dec_label_pc_2f46:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f46 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f46
}

define i32 @function_2f48() local_unnamed_addr {
dec_label_pc_2f48:
  %v0_2f48 = load i32, i32* @ebp, align 4
  %v1_2f48 = add i32 %v0_2f48, -512
  ret i32 %v1_2f48
}

define i32 @function_2f56() local_unnamed_addr {
dec_label_pc_2f56:
  %v1_2f56 = call i32 @function_2fb0(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_2f56
}

define i32 @function_2f58() local_unnamed_addr {
dec_label_pc_2f58:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f58 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2f58, i32* @ebx, align 4
  %v0_2f5a = load i32, i32* @ebp, align 4
  %v1_2f5a = add i32 %v0_2f5a, -340
  store i32 %v1_2f5a, i32* %eax.global-to-local, align 8
  %v1_2f63 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2f5a)
  store i32 %v1_2f63, i32* %eax.global-to-local, align 8
  %v0_2f68 = call i32 @function_2f6c()
  store i32 %v0_2f68, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f68
}

define i32 @function_2f6a() local_unnamed_addr {
dec_label_pc_2f6a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f6a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f6a
}

define i32 @function_2f6c() local_unnamed_addr {
dec_label_pc_2f6c:
  %v0_2f6c = load i32, i32* @ebp, align 4
  %v1_2f6c = add i32 %v0_2f6c, -500
  ret i32 %v1_2f6c
}

define i32 @function_2f7a() local_unnamed_addr {
dec_label_pc_2f7a:
  %v0_2f7a = call i32 @function_2f7e()
  ret i32 %v0_2f7a
}

define i32 @function_2f7c() local_unnamed_addr {
dec_label_pc_2f7c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f7c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f7c
}

define i32 @function_2f7e() local_unnamed_addr {
dec_label_pc_2f7e:
  %v0_2f7e = load i32, i32* @ebp, align 4
  %v1_2f8c = add i32 %v0_2f7e, -256
  %v1_2f95 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_2f8c)
  %v0_2f9a = call i32 @function_2f9e()
  ret i32 %v0_2f9a
}

define i32 @function_2f9c() local_unnamed_addr {
dec_label_pc_2f9c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f9c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f9c
}

define i32 @function_2f9e() local_unnamed_addr {
dec_label_pc_2f9e:
  %v0_2f9e = load i32, i32* @ebp, align 4
  %v1_2f9e = add i32 %v0_2f9e, -504
  %v1_2fac = call i32 @function_2fb0(i32 %v1_2f9e)
  ret i32 %v1_2fac

; uselistorder directives
  uselistorder i32 (i32)* @function_2fb0, { 3, 2, 1, 0 }
}

define i32 @function_2faf() local_unnamed_addr {
dec_label_pc_2faf:
  %eax.global-to-local = alloca i32, align 4
  %v0_2faf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2faf
}

define i32 @function_2fb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fb0:
  %v0_2fb0 = load i32, i32* @ebp, align 4
  %v1_2fb0 = add i32 %v0_2fb0, -568
  %v1_2fb9 = inttoptr i32 %v1_2fb0 to i32*
  %v2_2fb9 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_2fb9)
  %v0_2fbe = load i32, i32* @ebx, align 4
  ret i32 %v0_2fbe

; uselistorder directives
  uselistorder i32 -568, { 0, 1, 2, 5, 3, 4 }
}

define i32 @function_2fd8() local_unnamed_addr {
dec_label_pc_2fd8:
  %v0_2fd8 = call i32 @function_2fdc()
  ret i32 %v0_2fd8
}

define i32 @function_2fda() local_unnamed_addr {
dec_label_pc_2fda:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fda = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fda
}

define i32 @function_2fdc() local_unnamed_addr {
dec_label_pc_2fdc:
  %v0_2fdc = load i32, i32* @ebp, align 4
  %v1_2fdc = add i32 %v0_2fdc, -445
  ret i32 %v1_2fdc
}

define i32 @function_2ff1() local_unnamed_addr {
dec_label_pc_2ff1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ff1 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2ff1 = add i32 %v0_2ff1, -1996297229
  %v2_2ff1 = inttoptr i32 %v1_2ff1 to i32*
  %v3_2ff1 = load i32, i32* %v2_2ff1, align 4
  %v4_2ff1 = add i32 %v3_2ff1, -1
  store i32 %v4_2ff1, i32* %v2_2ff1, align 4
  %v0_2ff7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ff7
}

define i32 @function_3010() local_unnamed_addr {
dec_label_pc_3010:
  %v0_3010 = load i32, i32* @ebp, align 4
  %v1_3010 = add i32 %v0_3010, -620
  %v2_3010 = inttoptr i32 %v1_3010 to i32*
  %v3_3010 = load i32, i32* %v2_3010, align 4
  store i32 %v3_3010, i32* @eax, align 8
  %v1_3016 = add i32 %v0_3010, -12
  %v2_3016 = inttoptr i32 %v1_3016 to i32*
  %v3_3016 = load i32, i32* %v2_3016, align 4
  %v1_3019 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3019 = icmp eq i32 %v1_3019, %v3_3016
  br i1 %v3_3019, label %bb, label %dec_label_pc_3022

bb:                                               ; preds = %dec_label_pc_3010
  %v1_3020 = call i32 @function_3027()
  br label %dec_label_pc_3022

dec_label_pc_3022:                                ; preds = %bb, %dec_label_pc_3010
  %v2_3020 = phi i32 [ %v1_3020, %bb ], [ %v3_3010, %dec_label_pc_3010 ]
  ret i32 %v2_3020

; uselistorder directives
  uselistorder i32 -620, { 1, 0 }
}

define i32 @function_3027() local_unnamed_addr {
dec_label_pc_3027:
  %v0_302d = load i32, i32* @eax, align 8
  ret i32 %v0_302d
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" @_Z16getblocktemplateRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_3030:
  %tmp108 = call i8 @__decompiler_undefined_function_2()
  %v10_3061 = icmp eq i8 %tmp108, 0
  %v1_3068 = icmp eq i1 %v10_3061, false
  br i1 %v1_3068, label %dec_label_pc_3089, label %dec_label_pc_306a

dec_label_pc_306a:                                ; preds = %dec_label_pc_3030
  %v4_3047 = sext i1 %fHelp to i32
  %v2_3073 = inttoptr i32 %v4_3047 to i32*
  %v3_3073 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_3073)
  %tmp117 = or i32 %v3_3073, 1
  %tmp118 = icmp ne i32 %tmp117, 1
  %. = zext i1 %tmp118 to i32
  br label %dec_label_pc_3089

dec_label_pc_3089:                                ; preds = %dec_label_pc_306a, %dec_label_pc_3030
  %storemerge = phi i32 [ 1, %dec_label_pc_3030 ], [ %., %dec_label_pc_306a ]
  %v5_3089 = icmp eq i32 %storemerge, 0
  br i1 %v5_3089, label %bb, label %dec_label_pc_3091

bb:                                               ; preds = %dec_label_pc_3089
  %v1_308b = call i32 @function_3114()
  br label %dec_label_pc_3091

dec_label_pc_3091:                                ; preds = %bb, %dec_label_pc_3089
  %v3_3091 = phi i32 [ %v1_308b, %bb ], [ %storemerge, %dec_label_pc_3089 ]
  %v4_3091 = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" undef, i32 %v3_3091, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.6" %v4_3091

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
}

define i32 @function_309e() local_unnamed_addr {
dec_label_pc_309e:
  %eax.global-to-local = alloca i32, align 4
  %v0_309e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_309e
}

define i32 @function_30a1() local_unnamed_addr {
dec_label_pc_30a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_30a1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30a1
}

define i32 @function_30af() local_unnamed_addr {
dec_label_pc_30af:
  %eax.global-to-local = alloca i32, align 4
  %v0_30af = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30af
}

define i32 @function_30ef() local_unnamed_addr {
dec_label_pc_30ef:
  %eax.global-to-local = alloca i32, align 4
  %v0_30ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30ef
}

define i32 @function_3114() local_unnamed_addr {
dec_label_pc_3114:
  %v0_3114 = load i32, i32* @ebp, align 4
  %v1_3114 = add i32 %v0_3114, -1084
  ret i32 %v1_3114
}

define i32 @function_31e3() local_unnamed_addr {
dec_label_pc_31e3:
  %v0_31e3 = call i32 @function_3292()
  ret i32 %v0_31e3
}

define i32 @function_3211() local_unnamed_addr {
dec_label_pc_3211:
  %eax.global-to-local = alloca i32, align 4
  %v0_3211 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3211
}

define i32 @function_3292() local_unnamed_addr {
dec_label_pc_3292:
  %v0_329a = load i32, i32* @ebp, align 4
  %v1_329a = add i32 %v0_329a, -1312
  %v3_32a3 = call i32 @_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_(i32 %v1_329a, i32 ptrtoint ([9 x i8]* @global_var_6f04.2796 to i32))
  store i32 %v3_32a3, i32* @eax, align 8
  %v4_32a8 = trunc i32 %v3_32a3 to i8
  %v5_32a8 = icmp eq i8 %v4_32a8, 0
  br i1 %v5_32a8, label %bb, label %dec_label_pc_32b0

bb:                                               ; preds = %dec_label_pc_3292
  %v1_32aa = call i32 @function_333e()
  br label %dec_label_pc_32b0

dec_label_pc_32b0:                                ; preds = %bb, %dec_label_pc_3292
  %v2_32b0 = phi i32 [ %v1_32aa, %bb ], [ %v3_32a3, %dec_label_pc_3292 ]
  ret i32 %v2_32b0
}

define i32 @function_32bd() local_unnamed_addr {
dec_label_pc_32bd:
  %eax.global-to-local = alloca i32, align 4
  %v0_32bd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32bd
}

define i32 @function_333e() local_unnamed_addr {
dec_label_pc_333e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_335f() local_unnamed_addr {
dec_label_pc_335f:
  %eax.global-to-local = alloca i32, align 4
  %v0_335f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_335f
}

define i32 @function_33e0() local_unnamed_addr {
dec_label_pc_33e0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_33fa() local_unnamed_addr {
dec_label_pc_33fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_33fa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33fa
}

define i32 @function_34bb() local_unnamed_addr {
dec_label_pc_34bb:
  store i32 1, i32* @eax, align 8
  %v0_34c0 = call i32 @function_34c7()
  ret i32 %v0_34c0
}

define i32 @function_34c2() local_unnamed_addr {
dec_label_pc_34c2:
  ret i32 0
}

define i32 @function_34c7() local_unnamed_addr {
dec_label_pc_34c7:
  %v0_34c7 = load i32, i32* @eax, align 8
  %v4_34c7 = trunc i32 %v0_34c7 to i8
  %v5_34c7 = icmp eq i8 %v4_34c7, 0
  br i1 %v5_34c7, label %bb, label %dec_label_pc_34cf

bb:                                               ; preds = %dec_label_pc_34c7
  %v1_34c9 = call i32 @function_35ed()
  br label %dec_label_pc_34cf

dec_label_pc_34cf:                                ; preds = %bb, %dec_label_pc_34c7
  %v0_34cf = phi i32 [ %v1_34c9, %bb ], [ %v0_34c7, %dec_label_pc_34c7 ]
  store i32 0, i32* @global_var_5cdc.2797, align 4
  ret i32 %v0_34cf
}

define i32 @function_34f2() local_unnamed_addr {
dec_label_pc_34f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_34f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34f2
}

define i32 @function_3541() local_unnamed_addr {
dec_label_pc_3541:
  %eax.global-to-local = alloca i32, align 4
  %v0_3541 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3541
}

define i32 @function_3561() local_unnamed_addr {
dec_label_pc_3561:
  %eax.global-to-local = alloca i32, align 4
  %v0_3561 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3561
}

define i32 @function_35e1() local_unnamed_addr {
dec_label_pc_35e1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_35e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_35e1 = add i32 %v0_35e1, -289659
  %v2_35e1 = inttoptr i32 %v1_35e1 to i32*
  %v3_35e1 = load i32, i32* %v2_35e1, align 4
  %v4_35e1 = add i32 %v3_35e1, -1
  store i32 %v4_35e1, i32* %v2_35e1, align 4
  %v0_35e7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35e7
}

define i32 @function_35ed() local_unnamed_addr {
dec_label_pc_35ed:
  %v0_35ed = load i32, i32* inttoptr (i32 23788 to i32*), align 4
  %v1_35f2 = load i32, i32* @ebp, align 4
  %v2_35f2 = add i32 %v1_35f2, -1128
  %v3_35f2 = inttoptr i32 %v2_35f2 to i32*
  store i32 %v0_35ed, i32* %v3_35f2, align 4
  %v0_35fe = load i32, i32* @ebp, align 4
  %v1_35fe = add i32 %v0_35fe, -1128
  %v2_35fe = inttoptr i32 %v1_35fe to i32*
  %v3_35fe = load i32, i32* %v2_35fe, align 4
  ret i32 %v3_35fe
}

define i32 @function_360f() local_unnamed_addr {
dec_label_pc_360f:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_360f = load i32, i32* @ebx, align 4
  %v1_360f = add i32 %v0_360f, -288635
  %v2_360f = inttoptr i32 %v1_360f to i32*
  %v3_360f = load i32, i32* %v2_360f, align 4
  %v4_360f = add i32 %v3_360f, -1
  store i32 %v4_360f, i32* %v2_360f, align 4
  %v0_3615 = load i32, i32* %edi.global-to-local, align 4
  %v1_3615 = add i32 %v0_3615, 1
  store i32 %v1_3615, i32* %edi.global-to-local, align 4
  %v0_3617 = load i32, i32* %eax.global-to-local, align 8
  %v1_3617 = add i32 %v0_3617, 1
  %v11_3617 = trunc i32 %v1_3617 to i8
  store i32 %v1_3617, i32* %eax.global-to-local, align 8
  %v1_3619 = inttoptr i32 %v1_3617 to i8*
  %v2_3619 = load i8, i8* %v1_3619, align 1
  %v5_3619 = add i8 %v2_3619, %v11_3617
  store i8 %v5_3619, i8* %v1_3619, align 1
  %v0_361b = load i32, i32* %eax.global-to-local, align 8
  %v1_361b = inttoptr i32 %v0_361b to i8*
  %v2_361b = load i8, i8* %v1_361b, align 1
  %v4_361b = trunc i32 %v0_361b to i8
  %v5_361b = add i8 %v2_361b, %v4_361b
  store i8 %v5_361b, i8* %v1_361b, align 1
  %v0_361d = load i32, i32* @ebp, align 4
  %v1_361d = add i32 %v0_361d, -1376
  store i32 %v1_361d, i32* %eax.global-to-local, align 8
  %v1_3626 = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %v1_361d)
  %v0_362b = load i32, i32* @ebp, align 4
  %v1_362b = add i32 %v0_362b, -1420
  store i32 %v1_362b, i32* %eax.global-to-local, align 8
  %v1_3634 = call i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEEC1Ev(i32 %v1_362b)
  store i32 %v1_3634, i32* %eax.global-to-local, align 8
  %v0_3639 = load i32, i32* @ebp, align 4
  %v1_3639 = add i32 %v0_3639, -1144
  %v2_3639 = inttoptr i32 %v1_3639 to i32*
  store i32 0, i32* %v2_3639, align 4
  %v0_3643 = load i32, i32* @ebp, align 4
  %v1_3643 = add i32 %v0_3643, -1128
  %v2_3643 = inttoptr i32 %v1_3643 to i32*
  %v3_3643 = load i32, i32* %v2_3643, align 4
  %v1_3649 = add i32 %v3_3643, 80
  %v1_364c = add i32 %v0_3643, -1288
  store i32 %v1_364c, i32* %eax.global-to-local, align 8
  %v3_3661 = call i32 @_ZN5boost15foreach_detail_7containISt6vectorI12CTransactionSaIS3_EEEENS0_8auto_anyIPT_EERS7_PN4mpl_5bool_ILb0EEE(i32 %v1_364c, i32 %v1_3649, i32 0)
  %v0_3669 = load i32, i32* @ebp, align 4
  %v1_3669 = add i32 %v0_3669, -1288
  store i32 %v1_3669, i32* %eax.global-to-local, align 8
  %v2_366f = add i32 %v0_3669, -1124
  %v3_366f = inttoptr i32 %v2_366f to i32*
  store i32 %v1_3669, i32* %v3_366f, align 4
  %v0_3675 = load i32, i32* @ebp, align 4
  %v1_3675 = add i32 %v0_3675, -1124
  %v2_3675 = inttoptr i32 %v1_3675 to i32*
  %v3_3675 = load i32, i32* %v2_3675, align 4
  store i32 %v3_3675, i32* %eax.global-to-local, align 8
  %v1_367e = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_3675)
  store i32 %v1_367e, i32* %eax.global-to-local, align 8
  %v4_3683 = trunc i32 %v1_367e to i8
  %v5_3683 = icmp eq i8 %v4_3683, 0
  %v1_3685 = icmp eq i1 %v5_3683, false
  br i1 %v1_3685, label %bb, label %dec_label_pc_368b

bb:                                               ; preds = %dec_label_pc_360f
  %v2_3685 = call i32 @function_3fa3()
  store i32 %v2_3685, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_368b

dec_label_pc_368b:                                ; preds = %bb, %dec_label_pc_360f
  %v0_368b = load i32, i32* @ebp, align 4
  %v1_368b = add i32 %v0_368b, -1284
  store i32 %v1_368b, i32* %eax.global-to-local, align 8
  %v1_36a1 = add i32 %v0_368b, -1124
  %v2_36a1 = inttoptr i32 %v1_36a1 to i32*
  %v3_36a1 = load i32, i32* %v2_36a1, align 4
  %v4_36ae = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %v1_368b, i32 %v3_36a1, i32 0, i32 0)
  %v0_36b6 = load i32, i32* @ebp, align 4
  %v1_36b6 = add i32 %v0_36b6, -1284
  store i32 %v1_36b6, i32* %eax.global-to-local, align 8
  %v2_36bc = add i32 %v0_36b6, -1120
  %v3_36bc = inttoptr i32 %v2_36bc to i32*
  store i32 %v1_36b6, i32* %v3_36bc, align 4
  %v0_36c2 = load i32, i32* @ebp, align 4
  %v1_36c2 = add i32 %v0_36c2, -1120
  %v2_36c2 = inttoptr i32 %v1_36c2 to i32*
  %v3_36c2 = load i32, i32* %v2_36c2, align 4
  store i32 %v3_36c2, i32* %eax.global-to-local, align 8
  %v1_36cb = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_36c2)
  store i32 %v1_36cb, i32* %eax.global-to-local, align 8
  %v4_36d0 = trunc i32 %v1_36cb to i8
  %v5_36d0 = icmp eq i8 %v4_36d0, 0
  %v1_36d2 = icmp eq i1 %v5_36d0, false
  br i1 %v1_36d2, label %bb108, label %dec_label_pc_36d8

bb108:                                            ; preds = %dec_label_pc_368b
  %v2_36d2 = call i32 @function_3fa3()
  store i32 %v2_36d2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_36d8

dec_label_pc_36d8:                                ; preds = %bb108, %dec_label_pc_368b
  %v0_36d8 = load i32, i32* @ebp, align 4
  %v1_36d8 = add i32 %v0_36d8, -1280
  store i32 %v1_36d8, i32* %eax.global-to-local, align 8
  %v1_36ee = add i32 %v0_36d8, -1124
  %v2_36ee = inttoptr i32 %v1_36ee to i32*
  %v3_36ee = load i32, i32* %v2_36ee, align 4
  %v4_36fb = call i32 @_ZN5boost15foreach_detail_3endISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %v1_36d8, i32 %v3_36ee, i32 0, i32 0)
  %v0_3703 = load i32, i32* @ebp, align 4
  %v1_3703 = add i32 %v0_3703, -1280
  store i32 %v1_3703, i32* %eax.global-to-local, align 8
  %v2_3709 = add i32 %v0_3703, -1116
  %v3_3709 = inttoptr i32 %v2_3709 to i32*
  store i32 %v1_3703, i32* %v3_3709, align 4
  %v0_370f = load i32, i32* @ebp, align 4
  %v1_370f = add i32 %v0_370f, -1116
  %v2_370f = inttoptr i32 %v1_370f to i32*
  %v3_370f = load i32, i32* %v2_370f, align 4
  store i32 %v3_370f, i32* %eax.global-to-local, align 8
  %v1_3718 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_370f)
  store i32 %v1_3718, i32* %eax.global-to-local, align 8
  %v4_371d = trunc i32 %v1_3718 to i8
  %v5_371d = icmp eq i8 %v4_371d, 0
  %v1_371f = icmp eq i1 %v5_371d, false
  br i1 %v1_371f, label %bb110, label %dec_label_pc_3725

bb110:                                            ; preds = %dec_label_pc_36d8
  %v2_371f = call i32 @function_3fa3()
  store i32 %v2_371f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3725

dec_label_pc_3725:                                ; preds = %bb110, %dec_label_pc_36d8
  %v0_3725 = load i32, i32* @ebp, align 4
  %v1_3725 = add i32 %v0_3725, -1078
  %v2_3725 = inttoptr i32 %v1_3725 to i8*
  store i8 1, i8* %v2_3725, align 1
  %v0_372c = call i32 @function_3f5d()
  store i32 %v0_372c, i32* %eax.global-to-local, align 8
  ret i32 %v0_372c

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 3, 2, 4, 5, 6, 7, 1, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 ()* @function_3fa3, { 2, 1, 0 }
}

define i32 @function_3731() local_unnamed_addr {
dec_label_pc_3731:
  %v0_3731 = load i32, i32* @ebp, align 4
  %v1_3731 = add i32 %v0_3731, -1078
  %v1_373a = inttoptr i32 %v1_3731 to i8*
  %v2_373a = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_373a)
  %v4_373f = trunc i32 %v2_373a to i8
  %v5_373f = icmp eq i8 %v4_373f, 0
  %v1_3741 = icmp eq i1 %v5_373f, false
  br i1 %v1_3741, label %bb, label %dec_label_pc_3747

bb:                                               ; preds = %dec_label_pc_3731
  %v2_3741 = call i32 @function_3f3c()
  br label %dec_label_pc_3747

dec_label_pc_3747:                                ; preds = %bb, %dec_label_pc_3731
  %v0_374f = load i32, i32* @ebp, align 4
  %v1_374f = add i32 %v0_374f, -1120
  %v2_374f = inttoptr i32 %v1_374f to i32*
  %v3_374f = load i32, i32* %v2_374f, align 4
  %v2_3758 = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %v3_374f, i32 0)
  %v1_375d = load i32, i32* @ebp, align 4
  %v2_375d = add i32 %v1_375d, -1112
  %v3_375d = inttoptr i32 %v2_375d to i32*
  store i32 %v2_3758, i32* %v3_375d, align 4
  %v0_3763 = call i32 @function_3f2a()
  ret i32 %v0_3763
}

define i32 @function_3768() local_unnamed_addr {
dec_label_pc_3768:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_379e() local_unnamed_addr {
dec_label_pc_379e:
  %eax.global-to-local = alloca i32, align 4
  %v0_379e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_379e
}

define i32 @function_388b(i16 %arg1) local_unnamed_addr {
dec_label_pc_388b:
  %eax.global-to-local = alloca i32, align 4
  %v6_388b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_388b
}

define i32 @function_3899(i16 %arg1) local_unnamed_addr {
dec_label_pc_3899:
  %eax.global-to-local = alloca i32, align 4
  %v6_3899 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_3899
}

define i32 @function_390f(i16 %arg1) local_unnamed_addr {
dec_label_pc_390f:
  %eax.global-to-local = alloca i32, align 4
  %v6_390f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_390f
}

define i32 @function_3a17() local_unnamed_addr {
dec_label_pc_3a17:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a17 = load i32, i32* @ebp, align 4
  %v1_3a17 = add i32 %v0_3a17, -345979
  %v2_3a17 = inttoptr i32 %v1_3a17 to i32*
  %v3_3a17 = load i32, i32* %v2_3a17, align 4
  %v4_3a17 = add i32 %v3_3a17, -1
  store i32 %v4_3a17, i32* %v2_3a17, align 4
  %v0_3a1d = load i32, i32* @ecx, align 8
  %v1_3a1d = add i32 %v0_3a1d, 1760044036
  %v2_3a1d = inttoptr i32 %v1_3a1d to i32*
  %v3_3a1d = load i32, i32* %v2_3a1d, align 4
  %v4_3a1d = add i32 %v3_3a1d, -1
  store i32 %v4_3a1d, i32* %v2_3a1d, align 4
  %v2_3a24 = load i32, i32* %eax.global-to-local, align 8
  %v4_3a24 = mul i32 %v2_3a24, 2
  %v21_3a24 = inttoptr i32 %v2_3a24 to i32*
  store i32 %v4_3a24, i32* %v21_3a24, align 4
  %v0_3a26 = load i32, i32* @ebp, align 4
  %v1_3a26 = add i32 %v0_3a26, -1112
  %v2_3a26 = inttoptr i32 %v1_3a26 to i32*
  %v3_3a26 = load i32, i32* %v2_3a26, align 4
  %v1_3a2c = add i32 %v3_3a26, 4
  store i32 %v1_3a2c, i32* @edx, align 4
  %v1_3a2f = add i32 %v0_3a26, -1252
  store i32 %v1_3a2f, i32* %eax.global-to-local, align 8
  %v3_3a44 = call i32 @_ZN5boost15foreach_detail_7containISt6vectorI5CTxInSaIS3_EEEENS0_8auto_anyIPT_EERS7_PN4mpl_5bool_ILb0EEE(i32 %v1_3a2f, i32 %v1_3a2c, i32 0)
  %v0_3a4c = load i32, i32* @ebp, align 4
  %v1_3a4c = add i32 %v0_3a4c, -1252
  store i32 %v1_3a4c, i32* %eax.global-to-local, align 8
  %v2_3a52 = add i32 %v0_3a4c, -1108
  %v3_3a52 = inttoptr i32 %v2_3a52 to i32*
  store i32 %v1_3a4c, i32* %v3_3a52, align 4
  %v0_3a58 = load i32, i32* @ebp, align 4
  %v1_3a58 = add i32 %v0_3a58, -1108
  %v2_3a58 = inttoptr i32 %v1_3a58 to i32*
  %v3_3a58 = load i32, i32* %v2_3a58, align 4
  store i32 %v3_3a58, i32* %eax.global-to-local, align 8
  %v1_3a61 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_3a58)
  store i32 %v1_3a61, i32* %eax.global-to-local, align 8
  %v4_3a66 = trunc i32 %v1_3a61 to i8
  %v5_3a66 = icmp eq i8 %v4_3a66, 0
  %v1_3a68 = icmp eq i1 %v5_3a66, false
  br i1 %v1_3a68, label %dec_label_pc_3c45, label %dec_label_pc_3a6e

dec_label_pc_3a6e:                                ; preds = %dec_label_pc_3a17
  %v0_3a6e = load i32, i32* @ebp, align 4
  %v1_3a6e = add i32 %v0_3a6e, -1248
  store i32 %v1_3a6e, i32* %eax.global-to-local, align 8
  %v1_3a84 = add i32 %v0_3a6e, -1108
  %v2_3a84 = inttoptr i32 %v1_3a84 to i32*
  %v3_3a84 = load i32, i32* %v2_3a84, align 4
  %v4_3a91 = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %v1_3a6e, i32 %v3_3a84, i32 0, i32 0)
  %v0_3a99 = load i32, i32* @ebp, align 4
  %v1_3a99 = add i32 %v0_3a99, -1248
  store i32 %v1_3a99, i32* %eax.global-to-local, align 8
  %v2_3a9f = add i32 %v0_3a99, -1104
  %v3_3a9f = inttoptr i32 %v2_3a9f to i32*
  store i32 %v1_3a99, i32* %v3_3a9f, align 4
  %v0_3aa5 = load i32, i32* @ebp, align 4
  %v1_3aa5 = add i32 %v0_3aa5, -1104
  %v2_3aa5 = inttoptr i32 %v1_3aa5 to i32*
  %v3_3aa5 = load i32, i32* %v2_3aa5, align 4
  store i32 %v3_3aa5, i32* %eax.global-to-local, align 8
  %v1_3aae = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_3aa5)
  store i32 %v1_3aae, i32* %eax.global-to-local, align 8
  %v4_3ab3 = trunc i32 %v1_3aae to i8
  %v5_3ab3 = icmp eq i8 %v4_3ab3, 0
  %v1_3ab5 = icmp eq i1 %v5_3ab3, false
  br i1 %v1_3ab5, label %dec_label_pc_3c45, label %dec_label_pc_3abb

dec_label_pc_3abb:                                ; preds = %dec_label_pc_3a6e
  %v0_3abb = load i32, i32* @ebp, align 4
  %v1_3abb = add i32 %v0_3abb, -1244
  store i32 %v1_3abb, i32* %eax.global-to-local, align 8
  %v1_3ad1 = add i32 %v0_3abb, -1108
  %v2_3ad1 = inttoptr i32 %v1_3ad1 to i32*
  %v3_3ad1 = load i32, i32* %v2_3ad1, align 4
  %v4_3ade = inttoptr i32 %v3_3ad1 to i32*
  %v5_3ade = call i32 @_ZN5boost15foreach_detail_3endISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %v1_3abb, i32* %v4_3ade, i32 0, i32 0)
  %v0_3ae6 = load i32, i32* @ebp, align 4
  %v1_3ae6 = add i32 %v0_3ae6, -1244
  store i32 %v1_3ae6, i32* %eax.global-to-local, align 8
  %v2_3aec = add i32 %v0_3ae6, -1100
  %v3_3aec = inttoptr i32 %v2_3aec to i32*
  store i32 %v1_3ae6, i32* %v3_3aec, align 4
  %v0_3af2 = load i32, i32* @ebp, align 4
  %v1_3af2 = add i32 %v0_3af2, -1100
  %v2_3af2 = inttoptr i32 %v1_3af2 to i32*
  %v3_3af2 = load i32, i32* %v2_3af2, align 4
  store i32 %v3_3af2, i32* %eax.global-to-local, align 8
  %v1_3afb = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_3af2)
  store i32 %v1_3afb, i32* %eax.global-to-local, align 8
  %v4_3b00 = trunc i32 %v1_3afb to i8
  %v5_3b00 = icmp eq i8 %v4_3b00, 0
  %v1_3b02 = icmp eq i1 %v5_3b00, false
  br i1 %v1_3b02, label %dec_label_pc_3c45, label %dec_label_pc_3b08

dec_label_pc_3b08:                                ; preds = %dec_label_pc_3abb
  %v0_3b08 = load i32, i32* @ebp, align 4
  %v1_3b08 = add i32 %v0_3b08, -1075
  %v2_3b08 = inttoptr i32 %v1_3b08 to i8*
  store i8 1, i8* %v2_3b08, align 1
  br label %dec_label_pc_3bff

dec_label_pc_3b14:                                ; preds = %dec_label_pc_3c3d
  %v0_3b14 = load i32, i32* @ebp, align 4
  %v1_3b14 = add i32 %v0_3b14, -1075
  store i32 %v1_3b14, i32* %eax.global-to-local, align 8
  %v1_3b1d = inttoptr i32 %v1_3b14 to i8*
  %v2_3b1d = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_3b1d)
  store i32 %v2_3b1d, i32* %eax.global-to-local, align 8
  %v4_3b22 = trunc i32 %v2_3b1d to i8
  %v5_3b22 = icmp eq i8 %v4_3b22, 0
  %v1_3b24 = icmp eq i1 %v5_3b22, false
  br i1 %v1_3b24, label %dec_label_pc_3b14.dec_label_pc_3bde_crit_edge, label %dec_label_pc_3b2a

dec_label_pc_3b14.dec_label_pc_3bde_crit_edge:    ; preds = %dec_label_pc_3b14
  %v0_3bde.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3bde

dec_label_pc_3b2a:                                ; preds = %dec_label_pc_3b14
  %v0_3b32 = load i32, i32* @ebp, align 4
  %v1_3b32 = add i32 %v0_3b32, -1104
  %v2_3b32 = inttoptr i32 %v1_3b32 to i32*
  %v3_3b32 = load i32, i32* %v2_3b32, align 4
  store i32 %v3_3b32, i32* %eax.global-to-local, align 8
  %v2_3b3b = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %v3_3b32, i32 0)
  store i32 %v2_3b3b, i32* %eax.global-to-local, align 8
  %v1_3b40 = load i32, i32* @ebp, align 4
  %v2_3b40 = add i32 %v1_3b40, -1096
  %v3_3b40 = inttoptr i32 %v2_3b40 to i32*
  store i32 %v2_3b3b, i32* %v3_3b40, align 4
  br label %dec_label_pc_3bcc

dec_label_pc_3b4b:                                ; preds = %dec_label_pc_3bcc
  %v1_3b4b = add i32 %v0_3bcc, -1096
  %v2_3b4b = inttoptr i32 %v1_3b4b to i32*
  %v3_3b4b = load i32, i32* %v2_3b4b, align 4
  %v1_3b55 = add i32 %v0_3bcc, -1420
  store i32 %v1_3b55, i32* %eax.global-to-local, align 8
  %v2_3b5e = call i32 @_ZNKSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEE5countERS4_(i32 %v1_3b55, i32 %v3_3b4b)
  %v1_3b63 = icmp eq i32 %v2_3b5e, 0
  %v1_3b65 = icmp eq i1 %v1_3b63, false
  %v2_3b65 = zext i1 %v1_3b65 to i32
  %v4_3b65 = and i32 %v2_3b5e, -256
  %v5_3b65 = or i32 %v2_3b65, %v4_3b65
  store i32 %v5_3b65, i32* %eax.global-to-local, align 8
  %v5_3b68 = icmp eq i1 %v1_3b65, false
  br i1 %v5_3b68, label %dec_label_pc_3bc5, label %dec_label_pc_3b6c

dec_label_pc_3b6c:                                ; preds = %dec_label_pc_3b4b
  %v0_3b6c = load i32, i32* @ebp, align 4
  %v1_3b6c = add i32 %v0_3b6c, -1096
  %v2_3b6c = inttoptr i32 %v1_3b6c to i32*
  %v3_3b6c = load i32, i32* %v2_3b6c, align 4
  %v1_3b76 = add i32 %v0_3b6c, -1420
  store i32 %v1_3b76, i32* %eax.global-to-local, align 8
  %v2_3b7f = call i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_(i32 %v1_3b76, i32 %v3_3b6c)
  store i32 %v2_3b7f, i32* %eax.global-to-local, align 8
  %v1_3b84 = add i32 %v2_3b7f, 4
  %v2_3b84 = inttoptr i32 %v1_3b84 to i32*
  %v3_3b84 = load i32, i32* %v2_3b84, align 4
  %v1_3b87 = inttoptr i32 %v2_3b7f to i32*
  %v2_3b87 = load i32, i32* %v1_3b87, align 4
  %v0_3b91 = load i32, i32* @ebp, align 4
  %v1_3b91 = add i32 %v0_3b91, -472
  store i32 %v1_3b91, i32* %eax.global-to-local, align 8
  %v3_3b9a = inttoptr i32 %v1_3b91 to i32*
  %v4_3b9a = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ex(i32* %v3_3b9a, i32 %v2_3b87, i32 %v3_3b84)
  %v0_3b9f = load i32, i32* @ebp, align 4
  %v1_3b9f = add i32 %v0_3b9f, -472
  %v1_3ba9 = add i32 %v0_3b9f, -1352
  store i32 %v1_3ba9, i32* %eax.global-to-local, align 8
  %v2_3bb2 = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 %v1_3ba9, i32 %v1_3b9f)
  %v0_3bb7 = load i32, i32* @ebp, align 4
  %v1_3bb7 = add i32 %v0_3bb7, -472
  store i32 %v1_3bb7, i32* %eax.global-to-local, align 8
  %v1_3bc0 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3bb7)
  store i32 %v1_3bc0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3bc5

dec_label_pc_3bc5:                                ; preds = %dec_label_pc_3b6c, %dec_label_pc_3b4b
  %v0_3bc5 = load i32, i32* @ebp, align 4
  %v1_3bc5 = add i32 %v0_3bc5, -1075
  %v2_3bc5 = inttoptr i32 %v1_3bc5 to i8*
  store i8 1, i8* %v2_3bc5, align 1
  br label %dec_label_pc_3bcc

dec_label_pc_3bcc:                                ; preds = %dec_label_pc_3bc5, %dec_label_pc_3b2a
  %v0_3bcc = load i32, i32* @ebp, align 4
  %v1_3bcc = add i32 %v0_3bcc, -1075
  %v2_3bcc = inttoptr i32 %v1_3bcc to i8*
  %v3_3bcc = load i8, i8* %v2_3bcc, align 1
  %v4_3bcc = zext i8 %v3_3bcc to i32
  %v1_3bd3 = xor i32 %v4_3bcc, 1
  store i32 %v1_3bd3, i32* %eax.global-to-local, align 8
  %v5_3bd6 = icmp eq i32 %v1_3bd3, 0
  %v1_3bd8 = icmp eq i1 %v5_3bd6, false
  br i1 %v1_3bd8, label %dec_label_pc_3b4b, label %dec_label_pc_3bde

dec_label_pc_3bde:                                ; preds = %dec_label_pc_3bcc, %dec_label_pc_3b14.dec_label_pc_3bde_crit_edge
  %v0_3bf1 = phi i32 [ %v0_3bde.pre, %dec_label_pc_3b14.dec_label_pc_3bde_crit_edge ], [ %v0_3bcc, %dec_label_pc_3bcc ]
  %v1_3bde = add i32 %v0_3bf1, -1075
  %v2_3bde = inttoptr i32 %v1_3bde to i8*
  %v3_3bde = load i8, i8* %v2_3bde, align 1
  %v4_3bde = zext i8 %v3_3bde to i32
  store i32 %v4_3bde, i32* %eax.global-to-local, align 8
  %v5_3be5 = icmp eq i8 %v3_3bde, 0
  br i1 %v5_3be5, label %dec_label_pc_3bff, label %dec_label_pc_3be9

dec_label_pc_3be9:                                ; preds = %dec_label_pc_3bde
  %v1_3bf1 = add i32 %v0_3bf1, -1104
  %v2_3bf1 = inttoptr i32 %v1_3bf1 to i32*
  %v3_3bf1 = load i32, i32* %v2_3bf1, align 4
  store i32 %v3_3bf1, i32* %eax.global-to-local, align 8
  %v2_3bfa = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_3bf1, i32 0)
  store i32 %v2_3bfa, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3bff

dec_label_pc_3bff:                                ; preds = %dec_label_pc_3be9, %dec_label_pc_3bde, %dec_label_pc_3b08
  %v0_3bff = load i32, i32* @ebp, align 4
  %v1_3bff = add i32 %v0_3bff, -1075
  %v2_3bff = inttoptr i32 %v1_3bff to i8*
  %v3_3bff = load i8, i8* %v2_3bff, align 1
  %v4_3bff = zext i8 %v3_3bff to i32
  store i32 %v4_3bff, i32* %eax.global-to-local, align 8
  %v5_3c06 = icmp eq i8 %v3_3bff, 0
  br i1 %v5_3c06, label %dec_label_pc_3c38, label %dec_label_pc_3c0a

dec_label_pc_3c0a:                                ; preds = %dec_label_pc_3bff
  %v1_3c12 = add i32 %v0_3bff, -1100
  %v2_3c12 = inttoptr i32 %v1_3c12 to i32*
  %v3_3c12 = load i32, i32* %v2_3c12, align 4
  store i32 %v3_3c12, i32* %eax.global-to-local, align 8
  %v1_3c1c = add i32 %v0_3bff, -1104
  %v2_3c1c = inttoptr i32 %v1_3c1c to i32*
  %v3_3c1c = load i32, i32* %v2_3c1c, align 4
  store i32 %v3_3c1c, i32* %eax.global-to-local, align 8
  %v3_3c25 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %v3_3c1c, i32 %v3_3c12, i32 0)
  %v1_3c2a = xor i32 %v3_3c25, 1
  %v4_3c2a = trunc i32 %v1_3c2a to i8
  store i32 %v1_3c2a, i32* %eax.global-to-local, align 8
  %v5_3c2d = icmp eq i8 %v4_3c2a, 0
  br i1 %v5_3c2d, label %dec_label_pc_3c38, label %dec_label_pc_3c3d

dec_label_pc_3c38:                                ; preds = %dec_label_pc_3c0a, %dec_label_pc_3bff
  br label %dec_label_pc_3c3d

dec_label_pc_3c3d:                                ; preds = %dec_label_pc_3c0a, %dec_label_pc_3c38
  %storemerge = phi i32 [ 0, %dec_label_pc_3c38 ], [ 1, %dec_label_pc_3c0a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_3c3d = icmp eq i32 %storemerge, 0
  %v1_3c3f = icmp eq i1 %v5_3c3d, false
  br i1 %v1_3c3f, label %dec_label_pc_3b14, label %dec_label_pc_3c45

dec_label_pc_3c45:                                ; preds = %dec_label_pc_3c3d, %dec_label_pc_3abb, %dec_label_pc_3a6e, %dec_label_pc_3a17
  %v0_3c45 = load i32, i32* @ebp, align 4
  %v1_3c45 = add i32 %v0_3c45, -1352
  %v1_3c4b = load i32, i32* @esp, align 4
  %v2_3c4b = add i32 %v1_3c4b, 4
  %v3_3c4b = inttoptr i32 %v2_3c4b to i32*
  store i32 %v1_3c45, i32* %v3_3c4b, align 4
  %v0_3c4f = load i32, i32* @ebp, align 4
  %v1_3c4f = add i32 %v0_3c4f, -452
  store i32 %v1_3c4f, i32* %eax.global-to-local, align 8
  %v1_3c55 = load i32, i32* @esp, align 4
  %v2_3c55 = inttoptr i32 %v1_3c55 to i32*
  store i32 %v1_3c4f, i32* %v2_3c55, align 4
  %v0_3c58 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorIS3_SaIS3_EE()
  %v0_3c5d = load i32, i32* @ebp, align 4
  %v1_3c5d = add i32 %v0_3c5d, -1074
  store i32 %v1_3c5d, i32* %eax.global-to-local, align 8
  %v1_3c63 = load i32, i32* @esp, align 4
  %v2_3c63 = inttoptr i32 %v1_3c63 to i32*
  store i32 %v1_3c5d, i32* %v2_3c63, align 4
  %v3_3c63 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_3c63

; uselistorder directives
  uselistorder i32 %v0_3bff, { 1, 0, 2 }
  uselistorder i32 %v0_3bcc, { 0, 3, 1, 2 }
  uselistorder i32 %v2_3a24, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 19, 6, 20, 21, 22, 23, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 -1075, { 4, 1, 2, 0, 3, 5 }
  uselistorder i32 -1104, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @_ZNK5boost15foreach_detail_13auto_any_basecvbEv, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_3c3d, { 1, 0 }
}

define i32 @function_3d19() local_unnamed_addr {
dec_label_pc_3d19:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d19 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d19
}

define i32 @function_3def() local_unnamed_addr {
dec_label_pc_3def:
  %eax.global-to-local = alloca i32, align 4
  %v0_3def = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3def
}

define i32 @function_3ea9() local_unnamed_addr {
dec_label_pc_3ea9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3ea9 = load i32, i32* @ebp, align 4
  %v1_3ea9 = add i32 %v0_3ea9, -105339
  %v2_3ea9 = inttoptr i32 %v1_3ea9 to i32*
  %v3_3ea9 = load i32, i32* %v2_3ea9, align 4
  %v4_3ea9 = add i32 %v3_3ea9, -1
  store i32 %v4_3ea9, i32* %v2_3ea9, align 4
  %v0_3eaf = load i32, i32* %ecx.global-to-local, align 8
  %v1_3eaf = add i32 %v0_3eaf, 1055400964
  %v2_3eaf = inttoptr i32 %v1_3eaf to i32*
  %v3_3eaf = load i32, i32* %v2_3eaf, align 4
  %v4_3eaf = add i32 %v3_3eaf, -1
  store i32 %v4_3eaf, i32* %v2_3eaf, align 4
  %v2_3eb6 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3eb6 = load i32, i32* %eax.global-to-local, align 8
  %v4_3eb6 = trunc i32 %v3_3eb6 to i8
  %v5_3eb6 = add i8 %v4_3eb6, %v2_3eb6
  %v21_3eb6 = inttoptr i32 %v3_3eb6 to i8*
  store i8 %v5_3eb6, i8* %v21_3eb6, align 1
  %v0_3eb8 = load i32, i32* @ebp, align 4
  %v1_3eb8 = add i32 %v0_3eb8, -1364
  %v1_3ec2 = add i32 %v0_3eb8, -392
  store i32 %v1_3ec2, i32* %eax.global-to-local, align 8
  %v2_3ecb = inttoptr i32 %v1_3ec2 to i32*
  %v3_3ecb = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorINS_9Pair_implIS2_EESaIS6_EE(i32* %v2_3ecb, i32 %v1_3eb8)
  %v0_3ed0 = load i32, i32* @ebp, align 4
  %v1_3ed0 = add i32 %v0_3ed0, -392
  %v1_3eda = add i32 %v0_3ed0, -1376
  store i32 %v1_3eda, i32* %eax.global-to-local, align 8
  %v2_3ee3 = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 %v1_3eda, i32 %v1_3ed0)
  %v0_3ee8 = load i32, i32* @ebp, align 4
  %v1_3ee8 = add i32 %v0_3ee8, -392
  store i32 %v1_3ee8, i32* %eax.global-to-local, align 8
  %v1_3ef1 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_3ee8)
  %v0_3ef6 = load i32, i32* @ebp, align 4
  %v1_3ef6 = add i32 %v0_3ef6, -1352
  store i32 %v1_3ef6, i32* %eax.global-to-local, align 8
  %v1_3eff = inttoptr i32 %v1_3ef6 to i32*
  %v2_3eff = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_3eff)
  %v0_3f04 = load i32, i32* @ebp, align 4
  %v1_3f04 = add i32 %v0_3f04, -1448
  store i32 %v1_3f04, i32* %eax.global-to-local, align 8
  %v1_3f0d = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_3f04)
  %v0_3f12 = load i32, i32* @ebp, align 4
  %v1_3f12 = add i32 %v0_3f12, -1364
  store i32 %v1_3f12, i32* %eax.global-to-local, align 8
  %v1_3f1b = inttoptr i32 %v1_3f12 to i32*
  %v2_3f1b = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_3f1b)
  store i32 %v2_3f1b, i32* %eax.global-to-local, align 8
  %v0_3f23 = load i32, i32* @ebp, align 4
  %v1_3f23 = add i32 %v0_3f23, -1078
  %v2_3f23 = inttoptr i32 %v1_3f23 to i8*
  store i8 1, i8* %v2_3f23, align 1
  %v3_3f23 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_3f23
}

define i32 @function_3f2a() local_unnamed_addr {
dec_label_pc_3f2a:
  %v0_3f2a = load i32, i32* @ebp, align 4
  %v1_3f2a = add i32 %v0_3f2a, -1078
  %v2_3f2a = inttoptr i32 %v1_3f2a to i8*
  %v3_3f2a = load i8, i8* %v2_3f2a, align 1
  %v4_3f2a = zext i8 %v3_3f2a to i32
  %v1_3f31 = xor i32 %v4_3f2a, 1
  ret i32 %v1_3f31
}

define i32 @function_3f3c() local_unnamed_addr {
dec_label_pc_3f3c:
  %v0_3f3c = load i32, i32* @ebp, align 4
  %v1_3f3c = add i32 %v0_3f3c, -1078
  %v2_3f3c = inttoptr i32 %v1_3f3c to i8*
  %v3_3f3c = load i8, i8* %v2_3f3c, align 1
  %v5_3f43 = icmp eq i8 %v3_3f3c, 0
  br i1 %v5_3f43, label %bb, label %dec_label_pc_3f47

bb:                                               ; preds = %dec_label_pc_3f3c
  %v1_3f45 = call i32 @function_3f5d()
  %v0_3f4f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3f47

dec_label_pc_3f47:                                ; preds = %bb, %dec_label_pc_3f3c
  %v0_3f4f = phi i32 [ %v0_3f4f.pre, %bb ], [ %v0_3f3c, %dec_label_pc_3f3c ]
  %v1_3f4f = add i32 %v0_3f4f, -1120
  %v2_3f4f = inttoptr i32 %v1_3f4f to i32*
  %v3_3f4f = load i32, i32* %v2_3f4f, align 4
  %v2_3f58 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_3f4f, i32 0)
  ret i32 %v2_3f58

; uselistorder directives
  uselistorder i32 ()* @function_3f5d, { 1, 0 }
}

define i32 @function_3f5d() local_unnamed_addr {
dec_label_pc_3f5d:
  %v0_3f5d = load i32, i32* @ebp, align 4
  %v1_3f5d = add i32 %v0_3f5d, -1078
  %v2_3f5d = inttoptr i32 %v1_3f5d to i8*
  %v3_3f5d = load i8, i8* %v2_3f5d, align 1
  %v5_3f64 = icmp eq i8 %v3_3f5d, 0
  br i1 %v5_3f64, label %dec_label_pc_3f96, label %dec_label_pc_3f68

dec_label_pc_3f68:                                ; preds = %dec_label_pc_3f5d
  %v1_3f70 = add i32 %v0_3f5d, -1116
  %v2_3f70 = inttoptr i32 %v1_3f70 to i32*
  %v3_3f70 = load i32, i32* %v2_3f70, align 4
  %v1_3f7a = add i32 %v0_3f5d, -1120
  %v2_3f7a = inttoptr i32 %v1_3f7a to i32*
  %v3_3f7a = load i32, i32* %v2_3f7a, align 4
  %v3_3f83 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %v3_3f7a, i32 %v3_3f70, i32 0)
  %v1_3f88 = xor i32 %v3_3f83, 1
  %v4_3f88 = trunc i32 %v1_3f88 to i8
  %v5_3f8b = icmp eq i8 %v4_3f88, 0
  br i1 %v5_3f8b, label %dec_label_pc_3f96, label %dec_label_pc_3f9b

dec_label_pc_3f96:                                ; preds = %dec_label_pc_3f68, %dec_label_pc_3f5d
  br label %dec_label_pc_3f9b

dec_label_pc_3f9b:                                ; preds = %dec_label_pc_3f68, %dec_label_pc_3f96
  %storemerge = phi i32 [ 0, %dec_label_pc_3f96 ], [ 1, %dec_label_pc_3f68 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_3f5d, { 1, 0, 2 }
  uselistorder i32 -1120, { 2, 0, 1, 3, 4 }
  uselistorder i32 -1078, { 4, 1, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_3f9b, { 1, 0 }
}

define i32 @function_3fa3() local_unnamed_addr {
dec_label_pc_3fa3:
  %v0_3fa3 = load i32, i32* @ebp, align 4
  %v1_3fa3 = add i32 %v0_3fa3, -1340
  %v1_3fac = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %v1_3fa3)
  %v0_3fb1 = load i32, i32* @ebp, align 4
  %v1_3fb1 = add i32 %v0_3fb1, -1224
  ret i32 %v1_3fb1
}

define i32 @function_4100() local_unnamed_addr {
dec_label_pc_4100:
  %eax.global-to-local = alloca i32, align 4
  %v0_4100 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4100
}

define i32 @function_41a3() local_unnamed_addr {
dec_label_pc_41a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_41a3 = load i32, i32* %eax.global-to-local, align 8
  %v11_41a3 = and i32 %v0_41a3, -24
  store i32 %v11_41a3, i32* %eax.global-to-local, align 8
  %v0_41f8 = load i32, i32* @ebp, align 4
  %v1_41f8 = add i32 %v0_41f8, -84859
  %v2_41f8 = inttoptr i32 %v1_41f8 to i8*
  %v3_41f8 = load i8, i8* %v2_41f8, align 1
  %v4_41f8 = load i32, i32* @ecx, align 8
  %v5_41f8 = trunc i32 %v4_41f8 to i8
  %v6_41f8 = add i8 %v5_41f8, %v3_41f8
  store i8 %v6_41f8, i8* %v2_41f8, align 1
  %v0_41fe = load i32, i32* @ecx, align 8
  %v1_41fe = add i32 %v0_41fe, -269999100
  %v2_41fe = inttoptr i32 %v1_41fe to i32*
  %v3_41fe = load i32, i32* %v2_41fe, align 4
  %v4_41fe = add i32 %v3_41fe, -1
  store i32 %v4_41fe, i32* %v2_41fe, align 4
  %v0_4205 = load i32, i32* %eax.global-to-local, align 8
  %v1_4205 = inttoptr i32 %v0_4205 to i8*
  %v2_4205 = load i8, i8* %v1_4205, align 1
  %v4_4205 = trunc i32 %v0_4205 to i8
  %v5_4205 = add i8 %v2_4205, %v4_4205
  store i8 %v5_4205, i8* %v1_4205, align 1
  %v0_420f = load i32, i32* @ebp, align 4
  %v1_420f = add i32 %v0_420f, -312
  store i32 %v1_420f, i32* %eax.global-to-local, align 8
  %v3_4218 = inttoptr i32 %v1_420f to i32*
  %v4_4218 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1EPKc(i32* %v3_4218, i32 ptrtoint ([10 x i8]* @global_var_6f4f.2798 to i32))
  %v0_421d = load i32, i32* @ebp, align 4
  %v1_421d = add i32 %v0_421d, -312
  store i32 %v1_421d, i32* %eax.global-to-local, align 8
  %v3_422e = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 23792, i32 %v1_421d)
  %v0_4233 = load i32, i32* @ebp, align 4
  %v1_4233 = add i32 %v0_4233, -312
  store i32 %v1_4233, i32* %eax.global-to-local, align 8
  %v1_423c = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_4233)
  %v0_4241 = load i32, i32* @ebp, align 4
  %v1_4241 = add i32 %v0_4241, -1328
  store i32 %v1_4241, i32* %eax.global-to-local, align 8
  %v1_424a = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %v1_4241)
  store i32 %v1_424a, i32* %eax.global-to-local, align 8
  %v0_424f = load i32, i32* @ebp, align 4
  %v1_424f = add i32 %v0_424f, -1128
  %v2_424f = inttoptr i32 %v1_424f to i32*
  %v3_424f = load i32, i32* %v2_424f, align 4
  store i32 %v3_424f, i32* %eax.global-to-local, align 8
  %v1_4255 = inttoptr i32 %v3_424f to i32*
  %v2_4255 = load i32, i32* %v1_4255, align 4
  %v1_425b = add i32 %v0_424f, -292
  store i32 %v1_425b, i32* %eax.global-to-local, align 8
  %v3_4264 = inttoptr i32 %v1_425b to i32*
  %v4_4264 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ei(i32* %v3_4264, i32 %v2_4255)
  %v0_4269 = load i32, i32* @ebp, align 4
  %v1_4269 = add i32 %v0_4269, -1070
  store i32 %v1_4269, i32* %eax.global-to-local, align 8
  ret i32 %v1_4269

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_, { 2, 1, 0 }
}

define i32 @function_4389() local_unnamed_addr {
dec_label_pc_4389:
  %eax.global-to-local = alloca i32, align 4
  %v0_4389 = load i32, i32* %eax.global-to-local, align 8
  %v11_4389 = and i32 %v0_4389, -24
  store i32 %v11_4389, i32* @eax, align 8
  %v0_438b = call i32 @function_43c0()
  store i32 %v0_438b, i32* %eax.global-to-local, align 8
  ret i32 %v0_438b
}

define i32 @function_43c0() local_unnamed_addr {
dec_label_pc_43c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4606() local_unnamed_addr {
dec_label_pc_4606:
  %eax.global-to-local = alloca i32, align 4
  %v0_4606 = load i32, i32* %eax.global-to-local, align 8
  %v11_4606 = and i32 %v0_4606, -24
  store i32 %v11_4606, i32* @eax, align 8
  %v0_4608 = call i32 @function_8d000131()
  store i32 %v0_4608, i32* %eax.global-to-local, align 8
  ret i32 %v0_4608
}

define i32 @function_4656() local_unnamed_addr {
dec_label_pc_4656:
  %eax.global-to-local = alloca i32, align 4
  %v0_4656 = load i32, i32* %eax.global-to-local, align 8
  %v11_4656 = and i32 %v0_4656, -24
  store i32 %v11_4656, i32* %eax.global-to-local, align 8
  ret i32 %v11_4656

; uselistorder directives
  uselistorder i32 %v11_4656, { 1, 0 }
}

define i32 @function_4724() local_unnamed_addr {
dec_label_pc_4724:
  %eax.global-to-local = alloca i32, align 4
  %v0_4724 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4724
}

define i32 @function_4ad9(i16 %arg1) local_unnamed_addr {
dec_label_pc_4ad9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4ad9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_4ad9 = add i32 %v0_4ad9, 76134469
  %v2_4ad9 = inttoptr i32 %v1_4ad9 to i8*
  %v3_4ad9 = load i8, i8* %v2_4ad9, align 1
  %v4_4ad9 = load i32, i32* %ecx.global-to-local, align 8
  %v5_4ad9 = trunc i32 %v4_4ad9 to i8
  %v6_4ad9 = or i8 %v5_4ad9, %v3_4ad9
  store i8 %v6_4ad9, i8* %v2_4ad9, align 1
  %v0_4adf = load i32, i32* %eax.global-to-local, align 8
  %v11_4adf = and i32 %v0_4adf, -24
  store i32 %v11_4adf, i32* %eax.global-to-local, align 8
  ret i32 %v11_4adf

; uselistorder directives
  uselistorder i32 %v11_4adf, { 1, 0 }
}

define i32 @function_4c59() local_unnamed_addr {
dec_label_pc_4c59:
  %eax.global-to-local = alloca i32, align 4
  %v0_4c59 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4c59
}

define i32 @function_4c63() local_unnamed_addr {
dec_label_pc_4c63:
  %eax.global-to-local = alloca i32, align 4
  %v0_4c66 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4c66
}

define i32 @function_4d37() local_unnamed_addr {
dec_label_pc_4d37:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d37 = load i32, i32* %eax.global-to-local, align 8
  %v11_4d37 = and i32 %v0_4d37, -24
  store i32 %v11_4d37, i32* %eax.global-to-local, align 8
  ret i32 %v11_4d37

; uselistorder directives
  uselistorder i32 %v11_4d37, { 1, 0 }
}

define i32 @function_4d74() local_unnamed_addr {
dec_label_pc_4d74:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4d74 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4d74 = add i32 %v0_4d74, -371579
  %v2_4d74 = inttoptr i32 %v1_4d74 to i32*
  %v3_4d74 = load i32, i32* %v2_4d74, align 4
  %v4_4d74 = add i32 %v3_4d74, -1
  store i32 %v4_4d74, i32* %v2_4d74, align 4
  %v0_4d7a = load i32, i32* %ebx.global-to-local, align 4
  %v1_4d7a = add i32 %v0_4d7a, 862319701
  %v2_4d7a = inttoptr i32 %v1_4d7a to i32*
  %v3_4d7a = load i32, i32* %v2_4d7a, align 4
  %v4_4d7a = add i32 %v3_4d7a, -1
  store i32 %v4_4d7a, i32* %v2_4d7a, align 4
  %v0_4d80 = load i32, i32* %eax.global-to-local, align 8
  %v1_4d80 = load i1, i1* %cf.global-to-local, align 1
  %v2_4d80 = zext i1 %v1_4d80 to i32
  %v3_4d80 = add i32 %v0_4d80, 20
  %v4_4d80 = add i32 %v3_4d80, %v2_4d80
  %v14_4d80 = icmp eq i32 %v4_4d80, 0
  %v22_4d80 = icmp ule i32 %v4_4d80, %v0_4d80
  %v23_4d80 = icmp ugt i32 %v0_4d80, -21
  %v24_4d80 = select i1 %v1_4d80, i1 %v22_4d80, i1 %v23_4d80
  store i1 %v24_4d80, i1* %cf.global-to-local, align 1
  store i32 %v4_4d80, i32* @eax, align 8
  br i1 %v14_4d80, label %bb, label %dec_label_pc_4d8b

bb:                                               ; preds = %dec_label_pc_4d74
  %v1_4d85 = call i32 @function_55e4()
  store i32 %v1_4d85, i32* @eax, align 8
  br label %dec_label_pc_4d8b

dec_label_pc_4d8b:                                ; preds = %bb, %dec_label_pc_4d74
  %v0_4d8b = call i32 @function_55df()
  store i32 %v0_4d8b, i32* %eax.global-to-local, align 8
  ret i32 %v0_4d8b

; uselistorder directives
  uselistorder i32 %v4_4d80, { 1, 0, 2 }
}

define i32 @function_4da0() local_unnamed_addr {
dec_label_pc_4da0:
  %v0_4da0 = call i32 @function_4da4()
  ret i32 %v0_4da0
}

define i32 @function_4da2() local_unnamed_addr {
dec_label_pc_4da2:
  %eax.global-to-local = alloca i32, align 4
  %v0_4da2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4da2
}

define i32 @function_4da4() local_unnamed_addr {
dec_label_pc_4da4:
  %v0_4da4 = load i32, i32* @ebp, align 4
  %v1_4da4 = add i32 %v0_4da4, -1085
  ret i32 %v1_4da4
}

define i32 @function_4dc5() local_unnamed_addr {
dec_label_pc_4dc5:
  %eax.global-to-local = alloca i32, align 4
  %v0_4dc5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4dc5
}

define i32 @function_4dee() local_unnamed_addr {
dec_label_pc_4dee:
  %v0_4dee = call i32 @function_4df2()
  ret i32 %v0_4dee
}

define i32 @function_4df0() local_unnamed_addr {
dec_label_pc_4df0:
  %eax.global-to-local = alloca i32, align 4
  %v0_4df0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4df0
}

define i32 @function_4df2() local_unnamed_addr {
dec_label_pc_4df2:
  %v0_4df2 = load i32, i32* @ebp, align 4
  %v1_4df2 = add i32 %v0_4df2, -1083
  ret i32 %v1_4df2
}

define i32 @function_4e08() local_unnamed_addr {
dec_label_pc_4e08:
  %v0_4e0a = call i32 @function_55c7()
  ret i32 %v0_4e0a
}

define i32 @function_4e1f() local_unnamed_addr {
dec_label_pc_4e1f:
  %v0_4e1f = call i32 @function_4e23()
  ret i32 %v0_4e1f
}

define i32 @function_4e21() local_unnamed_addr {
dec_label_pc_4e21:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e21 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4e21
}

define i32 @function_4e23() local_unnamed_addr {
dec_label_pc_4e23:
  %v0_4e23 = load i32, i32* @ebp, align 4
  %v1_4e23 = add i32 %v0_4e23, -1082
  ret i32 %v1_4e23
}

define i32 @function_4e39() local_unnamed_addr {
dec_label_pc_4e39:
  %v0_4e3b = call i32 @function_55c7()
  ret i32 %v0_4e3b
}

define i32 @function_4e50() local_unnamed_addr {
dec_label_pc_4e50:
  %v0_4e50 = call i32 @function_4e54()
  ret i32 %v0_4e50
}

define i32 @function_4e52() local_unnamed_addr {
dec_label_pc_4e52:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4e52
}

define i32 @function_4e54() local_unnamed_addr {
dec_label_pc_4e54:
  %v0_4e54 = load i32, i32* @ebp, align 4
  %v1_4e54 = add i32 %v0_4e54, -1081
  ret i32 %v1_4e54
}

define i32 @function_4e6a() local_unnamed_addr {
dec_label_pc_4e6a:
  %v0_4e6c = call i32 @function_55c7()
  ret i32 %v0_4e6c
}

define i32 @function_4e81() local_unnamed_addr {
dec_label_pc_4e81:
  %v0_4e81 = call i32 @function_4e85()
  ret i32 %v0_4e81
}

define i32 @function_4e83() local_unnamed_addr {
dec_label_pc_4e83:
  %eax.global-to-local = alloca i32, align 4
  %v0_4e83 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4e83
}

define i32 @function_4e85() local_unnamed_addr {
dec_label_pc_4e85:
  %v0_4e85 = load i32, i32* @ebp, align 4
  %v1_4e85 = add i32 %v0_4e85, -1080
  ret i32 %v1_4e85
}

define i32 @function_4e9b() local_unnamed_addr {
dec_label_pc_4e9b:
  %v0_4e9d = call i32 @function_55c7()
  ret i32 %v0_4e9d
}

define i32 @function_4eb2() local_unnamed_addr {
dec_label_pc_4eb2:
  %v0_4eb2 = call i32 @function_4eb6()
  ret i32 %v0_4eb2
}

define i32 @function_4eb4() local_unnamed_addr {
dec_label_pc_4eb4:
  %eax.global-to-local = alloca i32, align 4
  %v0_4eb4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4eb4
}

define i32 @function_4eb6() local_unnamed_addr {
dec_label_pc_4eb6:
  %v0_4eb6 = load i32, i32* @ebp, align 4
  %v1_4eb6 = add i32 %v0_4eb6, -1079
  ret i32 %v1_4eb6
}

define i32 @function_4ecb() local_unnamed_addr {
dec_label_pc_4ecb:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ecb = load i32, i32* @ecx, align 8
  %v1_4ecb = add i32 %v0_4ecb, 116713971
  %v2_4ecb = inttoptr i32 %v1_4ecb to i32*
  %v3_4ecb = load i32, i32* %v2_4ecb, align 4
  %v4_4ecb = add i32 %v3_4ecb, -1
  store i32 %v4_4ecb, i32* %v2_4ecb, align 4
  %v2_4ed1 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_4ed1 = load i32, i32* %eax.global-to-local, align 8
  %v4_4ed1 = trunc i32 %v3_4ed1 to i8
  %v5_4ed1 = add i8 %v4_4ed1, %v2_4ed1
  %v21_4ed1 = inttoptr i32 %v3_4ed1 to i8*
  store i8 %v5_4ed1, i8* %v21_4ed1, align 1
  %v0_4ed3 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_4ed3, i32* @ebx, align 4
  %v0_4ed5 = load i32, i32* @ebp, align 4
  %v1_4ed5 = add i32 %v0_4ed5, -992
  store i32 %v1_4ed5, i32* %eax.global-to-local, align 8
  %v1_4ede = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_4ed5)
  store i32 %v1_4ede, i32* %eax.global-to-local, align 8
  %v0_4ee3 = call i32 @function_4ee7()
  store i32 %v0_4ee3, i32* %eax.global-to-local, align 8
  ret i32 %v0_4ee3
}

define i32 @function_4ee5() local_unnamed_addr {
dec_label_pc_4ee5:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ee5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4ee5
}

define i32 @function_4ee7() local_unnamed_addr {
dec_label_pc_4ee7:
  %v0_4ee7 = load i32, i32* @ebp, align 4
  %v1_4ee7 = add i32 %v0_4ee7, -1264
  ret i32 %v1_4ee7
}

define i32 @function_4ef5() local_unnamed_addr {
dec_label_pc_4ef5:
  %v0_4ef5 = call i32 @function_4ef9()
  ret i32 %v0_4ef5
}

define i32 @function_4ef7() local_unnamed_addr {
dec_label_pc_4ef7:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ef7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4ef7
}

define i32 @function_4ef9() local_unnamed_addr {
dec_label_pc_4ef9:
  %v0_4ef9 = load i32, i32* @ebp, align 4
  %v1_4ef9 = add i32 %v0_4ef9, -1077
  ret i32 %v1_4ef9
}

define i32 @function_4f06() local_unnamed_addr {
dec_label_pc_4f06:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_4f06 = add i32 %tmp91, -130939
  %v2_4f06 = inttoptr i32 %v1_4f06 to i32*
  %v3_4f06 = load i32, i32* %v2_4f06, align 4
  %v4_4f06 = add i32 %v3_4f06, -1
  store i32 %v4_4f06, i32* %v2_4f06, align 4
  %v0_4f0c = load i32, i32* %ecx.global-to-local, align 8
  %v1_4f0c = add i32 %v0_4f0c, -504880124
  %v2_4f0c = inttoptr i32 %v1_4f0c to i32*
  %v3_4f0c = load i32, i32* %v2_4f0c, align 4
  %v4_4f0c = add i32 %v3_4f0c, -1
  store i32 %v4_4f0c, i32* %v2_4f0c, align 4
  %v0_4f14 = load i32, i32* %ebx.global-to-local, align 4
  %v2_4f14 = load i32, i32* %ecx.global-to-local, align 8
  %v3_4f14 = udiv i32 %v2_4f14, 256
  %v5_4f14 = add i32 %v3_4f14, %v0_4f14
  %v20_4f14 = and i32 %v5_4f14, 255
  %v22_4f14 = and i32 %v0_4f14, -256
  %v23_4f14 = or i32 %v20_4f14, %v22_4f14
  store i32 %v23_4f14, i32* %ebx.global-to-local, align 4
  %v1_4f16 = trunc i32 %v2_4f14 to i8
  %v3_4f16 = add i32 %v2_4f14, 210079171
  %v4_4f16 = inttoptr i32 %v3_4f16 to i8*
  %v5_4f16 = load i8, i8* %v4_4f16, align 1
  %v6_4f16 = add i8 %v5_4f16, %v1_4f16
  %v21_4f16 = zext i8 %v6_4f16 to i32
  %v23_4f16 = and i32 %v2_4f14, -256
  %v24_4f16 = or i32 %v21_4f16, %v23_4f16
  store i32 %v24_4f16, i32* %ecx.global-to-local, align 8
  %v0_4f1c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4f1c

; uselistorder directives
  uselistorder i32 %v2_4f14, { 1, 3, 2, 0 }
  uselistorder i32 %v0_4f14, { 1, 0 }
}

define i32 @function_4f27() local_unnamed_addr {
dec_label_pc_4f27:
  %v0_4f27 = call i32 @function_508f()
  ret i32 %v0_4f27
}

define i32 @function_4f2c() local_unnamed_addr {
dec_label_pc_4f2c:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f2c = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_4f2c, i32* @ebx, align 4
  %v0_4f2e = load i32, i32* @ebp, align 4
  %v1_4f2e = add i32 %v0_4f2e, -968
  store i32 %v1_4f2e, i32* %eax.global-to-local, align 8
  %v1_4f37 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_4f2e)
  store i32 %v1_4f37, i32* %eax.global-to-local, align 8
  %v0_4f3c = call i32 @function_4f40()
  store i32 %v0_4f3c, i32* %eax.global-to-local, align 8
  ret i32 %v0_4f3c
}

define i32 @function_4f3e() local_unnamed_addr {
dec_label_pc_4f3e:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f3e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4f3e
}

define i32 @function_4f40() local_unnamed_addr {
dec_label_pc_4f40:
  %v0_4f40 = load i32, i32* @ebp, align 4
  %v1_4f40 = add i32 %v0_4f40, -1256
  ret i32 %v1_4f40
}

define i32 @function_4f4e() local_unnamed_addr {
dec_label_pc_4f4e:
  %v0_4f4e = call i32 @function_4f52()
  ret i32 %v0_4f4e
}

define i32 @function_4f50() local_unnamed_addr {
dec_label_pc_4f50:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f50 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4f50
}

define i32 @function_4f52() local_unnamed_addr {
dec_label_pc_4f52:
  %v0_4f52 = load i32, i32* @ebp, align 4
  %v1_4f52 = add i32 %v0_4f52, -1076
  ret i32 %v1_4f52
}

define i32 @function_4f5f() local_unnamed_addr {
dec_label_pc_4f5f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_4f5f = add i32 %tmp91, -125819
  %v2_4f5f = inttoptr i32 %v1_4f5f to i32*
  %v3_4f5f = load i32, i32* %v2_4f5f, align 4
  %v4_4f5f = add i32 %v3_4f5f, -1
  store i32 %v4_4f5f, i32* %v2_4f5f, align 4
  %v0_4f65 = load i32, i32* %ecx.global-to-local, align 8
  %v1_4f65 = add i32 %v0_4f65, -1998052348
  %v2_4f65 = inttoptr i32 %v1_4f65 to i32*
  %v3_4f65 = load i32, i32* %v2_4f65, align 4
  %v4_4f65 = add i32 %v3_4f65, -1
  store i32 %v4_4f65, i32* %v2_4f65, align 4
  %v0_4f6d = load i32, i32* %ebx.global-to-local, align 4
  %v2_4f6d = load i32, i32* %ecx.global-to-local, align 8
  %v3_4f6d = udiv i32 %v2_4f6d, 256
  %v5_4f6d = add i32 %v3_4f6d, %v0_4f6d
  %v20_4f6d = and i32 %v5_4f6d, 255
  %v22_4f6d = and i32 %v0_4f6d, -256
  %v23_4f6d = or i32 %v20_4f6d, %v22_4f6d
  store i32 %v23_4f6d, i32* %ebx.global-to-local, align 4
  %v1_4f6f = trunc i32 %v2_4f6d to i8
  %v3_4f6f = add i32 %v2_4f6d, 344296899
  %v4_4f6f = inttoptr i32 %v3_4f6f to i8*
  %v5_4f6f = load i8, i8* %v4_4f6f, align 1
  %v6_4f6f = add i8 %v5_4f6f, %v1_4f6f
  %v21_4f6f = zext i8 %v6_4f6f to i32
  %v23_4f6f = and i32 %v2_4f6d, -256
  %v24_4f6f = or i32 %v21_4f6f, %v23_4f6f
  store i32 %v24_4f6f, i32* %ecx.global-to-local, align 8
  %v0_4f75 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4f75

; uselistorder directives
  uselistorder i32 %v2_4f6d, { 1, 3, 2, 0 }
  uselistorder i32 %v0_4f6d, { 1, 0 }
}

define i32 @function_4f80() local_unnamed_addr {
dec_label_pc_4f80:
  %v0_4f80 = call i32 @function_508f()
  ret i32 %v0_4f80
}

define i32 @function_4f85() local_unnamed_addr {
dec_label_pc_4f85:
  %v0_4f87 = load i32, i32* @ebp, align 4
  %v1_4f87 = add i32 %v0_4f87, -472
  %v1_4f90 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_4f87)
  %v0_4f95 = call i32 @function_507d()
  ret i32 %v0_4f95
}

define i32 @function_4f9a() local_unnamed_addr {
dec_label_pc_4f9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f9a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_4f9a, i32* @ebx, align 4
  %v0_4f9c = load i32, i32* @ebp, align 4
  %v1_4f9c = add i32 %v0_4f9c, -944
  store i32 %v1_4f9c, i32* %eax.global-to-local, align 8
  %v1_4fa5 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_4f9c)
  store i32 %v1_4fa5, i32* %eax.global-to-local, align 8
  %v0_4faa = call i32 @function_4fae()
  store i32 %v0_4faa, i32* %eax.global-to-local, align 8
  ret i32 %v0_4faa
}

define i32 @function_4fac() local_unnamed_addr {
dec_label_pc_4fac:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fac
}

define i32 @function_4fae() local_unnamed_addr {
dec_label_pc_4fae:
  %v0_4fae = load i32, i32* @ebp, align 4
  %v1_4fae = add i32 %v0_4fae, -1240
  ret i32 %v1_4fae
}

define i32 @function_4fbc() local_unnamed_addr {
dec_label_pc_4fbc:
  %v0_4fbc = call i32 @function_4fc0()
  ret i32 %v0_4fbc
}

define i32 @function_4fbe() local_unnamed_addr {
dec_label_pc_4fbe:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fbe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fbe
}

define i32 @function_4fc0() local_unnamed_addr {
dec_label_pc_4fc0:
  %v0_4fc0 = load i32, i32* @ebp, align 4
  %v1_4fc0 = add i32 %v0_4fc0, -1074
  ret i32 %v1_4fc0
}

define i32 @function_4fcd() local_unnamed_addr {
dec_label_pc_4fcd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_4fcd = add i32 %tmp91, -115579
  %v2_4fcd = inttoptr i32 %v1_4fcd to i32*
  %v3_4fcd = load i32, i32* %v2_4fcd, align 4
  %v4_4fcd = add i32 %v3_4fcd, -1
  store i32 %v4_4fcd, i32* %v2_4fcd, align 4
  %v0_4fd3 = load i32, i32* %ecx.global-to-local, align 8
  %v1_4fd3 = add i32 %v0_4fd3, 451421188
  %v2_4fd3 = inttoptr i32 %v1_4fd3 to i32*
  %v3_4fd3 = load i32, i32* %v2_4fd3, align 4
  %v4_4fd3 = add i32 %v3_4fd3, -1
  store i32 %v4_4fd3, i32* %v2_4fd3, align 4
  %v0_4fdb = load i32, i32* %ecx.global-to-local, align 8
  %v3_4fdb = udiv i32 %v0_4fdb, 256
  %v5_4fdb = add i32 %v3_4fdb, %v0_4fdb
  %v20_4fdb = and i32 %v5_4fdb, 255
  %v22_4fdb = and i32 %v0_4fdb, -256
  %v23_4fdb = or i32 %v20_4fdb, %v22_4fdb
  store i32 %v23_4fdb, i32* %ecx.global-to-local, align 8
  %v2_4fde = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_4fde = load i32, i32* %eax.global-to-local, align 8
  %v4_4fde = trunc i32 %v3_4fde to i8
  %v5_4fde = add i8 %v4_4fde, %v2_4fde
  %v21_4fde = inttoptr i32 %v3_4fde to i8*
  store i8 %v5_4fde, i8* %v21_4fde, align 1
  %v0_4fe0 = load i32, i32* %ecx.global-to-local, align 8
  %v1_4fe0 = add i32 %v0_4fe0, 1753583043
  %v2_4fe0 = inttoptr i32 %v1_4fe0 to i8*
  %v3_4fe0 = load i8, i8* %v2_4fe0, align 1
  %v5_4fe0 = trunc i32 %v0_4fe0 to i8
  %v6_4fe0 = add i8 %v3_4fe0, %v5_4fe0
  store i8 %v6_4fe0, i8* %v2_4fe0, align 1
  %v0_4fe6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fe6

; uselistorder directives
  uselistorder i32 %v0_4fdb, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2 }
}

define i32 @function_4fe8() local_unnamed_addr {
dec_label_pc_4fe8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4fe8 = load i32, i32* %ecx.global-to-local, align 8
  %v1_4fe8 = add i32 %v0_4fe8, 1038623748
  %v2_4fe8 = inttoptr i32 %v1_4fe8 to i32*
  %v3_4fe8 = load i32, i32* %v2_4fe8, align 4
  %v4_4fe8 = add i32 %v3_4fe8, -1
  store i32 %v4_4fe8, i32* %v2_4fe8, align 4
  %v0_4ff0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_4ff0 = load i32, i32* %ecx.global-to-local, align 8
  %v3_4ff0 = udiv i32 %v2_4ff0, 256
  %v5_4ff0 = add i32 %v3_4ff0, %v0_4ff0
  %v20_4ff0 = and i32 %v5_4ff0, 255
  %v22_4ff0 = and i32 %v0_4ff0, -256
  %v23_4ff0 = or i32 %v20_4ff0, %v22_4ff0
  store i32 %v23_4ff0, i32* %ebx.global-to-local, align 4
  %v1_4ff2 = trunc i32 %v2_4ff0 to i8
  %v3_4ff2 = add i32 %v2_4ff0, 746950083
  %v4_4ff2 = inttoptr i32 %v3_4ff2 to i8*
  %v5_4ff2 = load i8, i8* %v4_4ff2, align 1
  %v6_4ff2 = add i8 %v5_4ff2, %v1_4ff2
  %v21_4ff2 = zext i8 %v6_4ff2 to i32
  %v23_4ff2 = and i32 %v2_4ff0, -256
  %v24_4ff2 = or i32 %v21_4ff2, %v23_4ff2
  store i32 %v24_4ff2, i32* %ecx.global-to-local, align 8
  %v0_4ff8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4ff8

; uselistorder directives
  uselistorder i32 %v2_4ff0, { 1, 3, 2, 0 }
  uselistorder i32 %v0_4ff0, { 1, 0 }
}

define i32 @function_5003() local_unnamed_addr {
dec_label_pc_5003:
  %v0_5003 = call i32 @function_5007()
  ret i32 %v0_5003
}

define i32 @function_5005() local_unnamed_addr {
dec_label_pc_5005:
  %eax.global-to-local = alloca i32, align 4
  %v0_5005 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5005
}

define i32 @function_5007() local_unnamed_addr {
dec_label_pc_5007:
  %v0_5007 = load i32, i32* @ebp, align 4
  %v1_5007 = add i32 %v0_5007, -1073
  ret i32 %v1_5007
}

define i32 @function_5014() local_unnamed_addr {
dec_label_pc_5014:
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_5014 = add i32 %tmp91, -110459
  %v2_5014 = inttoptr i32 %v1_5014 to i32*
  %v3_5014 = load i32, i32* %v2_5014, align 4
  %v4_5014 = add i32 %v3_5014, -1
  store i32 %v4_5014, i32* %v2_5014, align 4
  %v0_501a = load i32, i32* %ecx.global-to-local, align 8
  %v1_501a = add i32 %v0_501a, -739761148
  %v2_501a = inttoptr i32 %v1_501a to i32*
  %v3_501a = load i32, i32* %v2_501a, align 4
  %v4_501a = add i32 %v3_501a, -1
  store i32 %v4_501a, i32* %v2_501a, align 4
  %v0_5020 = call i32 @function_58eb0000()
  ret i32 %v0_5020
}

define i32 @function_5027() local_unnamed_addr {
dec_label_pc_5027:
  %v0_5027 = load i32, i32* @ebp, align 4
  %v1_5027 = add i32 %v0_5027, -896
  %v1_5030 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5027)
  %v0_5035 = call i32 @function_5039()
  ret i32 %v0_5035
}

define i32 @function_5037() local_unnamed_addr {
dec_label_pc_5037:
  %eax.global-to-local = alloca i32, align 4
  %v0_5037 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5037
}

define i32 @function_5039() local_unnamed_addr {
dec_label_pc_5039:
  %v0_5039 = load i32, i32* @ebp, align 4
  %v1_5039 = add i32 %v0_5039, -1232
  ret i32 %v1_5039
}

define i32 @function_5047() local_unnamed_addr {
dec_label_pc_5047:
  %v0_5047 = call i32 @function_504b()
  ret i32 %v0_5047
}

define i32 @function_5049() local_unnamed_addr {
dec_label_pc_5049:
  %eax.global-to-local = alloca i32, align 4
  %v0_5049 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5049
}

define i32 @function_504b() local_unnamed_addr {
dec_label_pc_504b:
  %v0_504b = load i32, i32* @ebp, align 4
  %v1_504b = add i32 %v0_504b, -1072
  ret i32 %v1_504b
}

define i32 @function_5058() local_unnamed_addr {
dec_label_pc_5058:
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_5058 = add i32 %tmp91, -105339
  %v2_5058 = inttoptr i32 %v1_5058 to i32*
  %v3_5058 = load i32, i32* %v2_5058, align 4
  %v4_5058 = add i32 %v3_5058, -1
  store i32 %v4_5058, i32* %v2_5058, align 4
  %v0_505e = load i32, i32* %ecx.global-to-local, align 8
  %v1_505e = add i32 %v0_505e, -1880611836
  %v2_505e = inttoptr i32 %v1_505e to i32*
  %v3_505e = load i32, i32* %v2_505e, align 4
  %v4_505e = add i32 %v3_505e, -1
  store i32 %v4_505e, i32* %v2_505e, align 4
  %v0_5064 = call i32 @function_14eb0000()
  ret i32 %v0_5064
}

define i32 @function_506b() local_unnamed_addr {
dec_label_pc_506b:
  %v0_506b = load i32, i32* @ebp, align 4
  %v1_506b = add i32 %v0_506b, -392
  %v1_5074 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_506b)
  %v0_5079 = call i32 @function_507d()
  ret i32 %v0_5079

; uselistorder directives
  uselistorder i32 ()* @function_507d, { 1, 0 }
}

define i32 @function_507c() local_unnamed_addr {
dec_label_pc_507c:
  %eax.global-to-local = alloca i32, align 4
  %v0_507c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_507c
}

define i32 @function_507d() local_unnamed_addr {
dec_label_pc_507d:
  %v0_507d = load i32, i32* @ebp, align 4
  %v1_507d = add i32 %v0_507d, -1352
  %v1_5086 = inttoptr i32 %v1_507d to i32*
  %v2_5086 = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_5086)
  %v0_508b = call i32 @function_508f()
  ret i32 %v0_508b

; uselistorder directives
  uselistorder i32 ()* @function_508f, { 2, 1, 0 }
  uselistorder i32 -1352, { 0, 1, 3, 2 }
}

define i32 @function_508e() local_unnamed_addr {
dec_label_pc_508e:
  %eax.global-to-local = alloca i32, align 4
  %v0_508e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_508e
}

define i32 @function_508f() local_unnamed_addr {
dec_label_pc_508f:
  %v0_508f = load i32, i32* @ebp, align 4
  %v1_508f = add i32 %v0_508f, -1448
  %v1_5098 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_508f)
  %v0_509d = call i32 @function_50a1()
  ret i32 %v0_509d
}

define i32 @function_509f() local_unnamed_addr {
dec_label_pc_509f:
  %eax.global-to-local = alloca i32, align 4
  %v0_509f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_509f
}

define i32 @function_50a1() local_unnamed_addr {
dec_label_pc_50a1:
  %v0_50a1 = load i32, i32* @ebp, align 4
  %v1_50a1 = add i32 %v0_50a1, -1364
  %v1_50aa = inttoptr i32 %v1_50a1 to i32*
  %v2_50aa = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_50aa)
  %v0_50af = call i32 @function_55a3()
  ret i32 %v0_50af
}

define i32 @function_50b4() local_unnamed_addr {
dec_label_pc_50b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_50b4 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_50b4, i32* @ebx, align 4
  %v0_50b6 = load i32, i32* @ebp, align 4
  %v1_50b6 = add i32 %v0_50b6, -872
  store i32 %v1_50b6, i32* %eax.global-to-local, align 8
  %v1_50bf = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_50b6)
  store i32 %v1_50bf, i32* %eax.global-to-local, align 8
  %v0_50c4 = call i32 @function_50c8()
  store i32 %v0_50c4, i32* %eax.global-to-local, align 8
  ret i32 %v0_50c4
}

define i32 @function_50c6() local_unnamed_addr {
dec_label_pc_50c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_50c6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_50c6
}

define i32 @function_50c8() local_unnamed_addr {
dec_label_pc_50c8:
  %v0_50c8 = load i32, i32* @ebp, align 4
  %v1_50c8 = add i32 %v0_50c8, -1216
  ret i32 %v1_50c8
}

define i32 @function_50d6() local_unnamed_addr {
dec_label_pc_50d6:
  %v0_50d6 = call i32 @function_50da()
  ret i32 %v0_50d6
}

define i32 @function_50d8() local_unnamed_addr {
dec_label_pc_50d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_50d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_50d8
}

define i32 @function_50da() local_unnamed_addr {
dec_label_pc_50da:
  %v0_50da = load i32, i32* @ebp, align 4
  %v1_50da = add i32 %v0_50da, -1071
  ret i32 %v1_50da
}

define i32 @function_50e7() local_unnamed_addr {
dec_label_pc_50e7:
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_50e7 = add i32 %tmp91, -95099
  %v2_50e7 = inttoptr i32 %v1_50e7 to i32*
  %v3_50e7 = load i32, i32* %v2_50e7, align 4
  %v4_50e7 = add i32 %v3_50e7, -1
  store i32 %v4_50e7, i32* %v2_50e7, align 4
  %v0_50ed = load i32, i32* %ecx.global-to-local, align 8
  %v1_50ed = add i32 %v0_50ed, 15213572
  %v2_50ed = inttoptr i32 %v1_50ed to i32*
  %v3_50ed = load i32, i32* %v2_50ed, align 4
  %v4_50ed = add i32 %v3_50ed, -1
  store i32 %v4_50ed, i32* %v2_50ed, align 4
  %v0_50f3 = call i32 @function_2eb0000()
  ret i32 %v0_50f3
}

define i32 @function_5108() local_unnamed_addr {
dec_label_pc_5108:
  %v0_5108 = call i32 @function_5591()
  ret i32 %v0_5108
}

define i32 @function_510d() local_unnamed_addr {
dec_label_pc_510d:
  %v0_510f = load i32, i32* @ebp, align 4
  %v1_510f = add i32 %v0_510f, -1396
  %v1_5118 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_510f)
  %v0_511d = call i32 @function_5591()
  ret i32 %v0_511d
}

define i32 @function_5123() local_unnamed_addr {
dec_label_pc_5123:
  %eax.global-to-local = alloca i32, align 4
  %v0_5123 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5123
}

define i32 @function_5136() local_unnamed_addr {
dec_label_pc_5136:
  %v0_5136 = call i32 @function_5591()
  ret i32 %v0_5136
}

define i32 @function_513b() local_unnamed_addr {
dec_label_pc_513b:
  %v0_513d = load i32, i32* @ebp, align 4
  %v1_513d = add i32 %v0_513d, -352
  %v1_5146 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_513d)
  %v0_514b = call i32 @function_5591()
  ret i32 %v0_514b
}

define i32 @function_5150() local_unnamed_addr {
dec_label_pc_5150:
  %v0_5152 = load i32, i32* @ebp, align 4
  %v1_5152 = add i32 %v0_5152, -332
  %v1_515b = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5152)
  %v0_5160 = call i32 @function_5591()
  ret i32 %v0_5160
}

define i32 @function_5165() local_unnamed_addr {
dec_label_pc_5165:
  %v0_5167 = load i32, i32* @ebp, align 4
  %v1_5167 = add i32 %v0_5167, -312
  %v1_5170 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5167)
  %v0_5175 = call i32 @function_5591()
  ret i32 %v0_5175
}

define i32 @function_517a() local_unnamed_addr {
dec_label_pc_517a:
  %eax.global-to-local = alloca i32, align 4
  %v0_517a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_517a, i32* @ebx, align 4
  %v0_517c = load i32, i32* @ebp, align 4
  %v1_517c = add i32 %v0_517c, -848
  store i32 %v1_517c, i32* %eax.global-to-local, align 8
  %v1_5185 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_517c)
  store i32 %v1_5185, i32* %eax.global-to-local, align 8
  %v0_518a = call i32 @function_518e()
  store i32 %v0_518a, i32* %eax.global-to-local, align 8
  ret i32 %v0_518a
}

define i32 @function_518c() local_unnamed_addr {
dec_label_pc_518c:
  %eax.global-to-local = alloca i32, align 4
  %v0_518c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_518c
}

define i32 @function_518e() local_unnamed_addr {
dec_label_pc_518e:
  %v0_518e = load i32, i32* @ebp, align 4
  %v1_518e = add i32 %v0_518e, -1212
  ret i32 %v1_518e
}

define i32 @function_519c() local_unnamed_addr {
dec_label_pc_519c:
  %v0_519c = call i32 @function_51a0()
  ret i32 %v0_519c
}

define i32 @function_519e() local_unnamed_addr {
dec_label_pc_519e:
  %eax.global-to-local = alloca i32, align 4
  %v0_519e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_519e
}

define i32 @function_51a0() local_unnamed_addr {
dec_label_pc_51a0:
  %v0_51a0 = load i32, i32* @ebp, align 4
  %v1_51a0 = add i32 %v0_51a0, -1070
  ret i32 %v1_51a0
}

define i32 @function_51ad() local_unnamed_addr {
dec_label_pc_51ad:
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_51ad = add i32 %tmp91, -74619
  %v2_51ad = inttoptr i32 %v1_51ad to i32*
  %v3_51ad = load i32, i32* %v2_51ad, align 4
  %v4_51ad = add i32 %v3_51ad, -1
  store i32 %v4_51ad, i32* %v2_51ad, align 4
  %v0_51b3 = load i32, i32* %ecx.global-to-local, align 8
  %v1_51b3 = add i32 %v0_51b3, 988292100
  %v2_51b3 = inttoptr i32 %v1_51b3 to i32*
  %v3_51b3 = load i32, i32* %v2_51b3, align 4
  %v4_51b3 = add i32 %v3_51b3, -1
  store i32 %v4_51b3, i32* %v2_51b3, align 4
  %v0_51b9 = call i32 @function_bee951be()
  ret i32 %v0_51b9
}

define i32 @function_51bf() local_unnamed_addr {
dec_label_pc_51bf:
  %eax.global-to-local = alloca i32, align 4
  %v2_51bf = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_51bf = load i32, i32* %eax.global-to-local, align 8
  %v4_51bf = trunc i32 %v3_51bf to i8
  %v5_51bf = add i8 %v4_51bf, %v2_51bf
  %v21_51bf = inttoptr i32 %v3_51bf to i8*
  store i8 %v5_51bf, i8* %v21_51bf, align 1
  %v0_51c1 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_51c1, i32* @ebx, align 4
  %v0_51c3 = load i32, i32* @ebp, align 4
  %v1_51c3 = add i32 %v0_51c3, -824
  store i32 %v1_51c3, i32* %eax.global-to-local, align 8
  %v1_51cc = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_51c3)
  store i32 %v1_51cc, i32* %eax.global-to-local, align 8
  %v0_51d1 = call i32 @function_51d5()
  store i32 %v0_51d1, i32* %eax.global-to-local, align 8
  ret i32 %v0_51d1
}

define i32 @function_51d3() local_unnamed_addr {
dec_label_pc_51d3:
  %eax.global-to-local = alloca i32, align 4
  %v0_51d3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_51d3
}

define i32 @function_51d5() local_unnamed_addr {
dec_label_pc_51d5:
  %v0_51d5 = load i32, i32* @ebp, align 4
  %v1_51d5 = add i32 %v0_51d5, -1204
  ret i32 %v1_51d5
}

define i32 @function_51e3() local_unnamed_addr {
dec_label_pc_51e3:
  %v0_51e3 = call i32 @function_51e7()
  ret i32 %v0_51e3
}

define i32 @function_51e5() local_unnamed_addr {
dec_label_pc_51e5:
  %eax.global-to-local = alloca i32, align 4
  %v0_51e5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_51e5
}

define i32 @function_51e7() local_unnamed_addr {
dec_label_pc_51e7:
  %v0_51e7 = load i32, i32* @ebp, align 4
  %v1_51e7 = add i32 %v0_51e7, -1069
  ret i32 %v1_51e7
}

define i32 @function_51f5() local_unnamed_addr {
dec_label_pc_51f5:
  %v0_51f5 = load i32, i32* @ebp, align 4
  %v1_51f5 = add i32 %v0_51f5, -272
  %v1_51fe = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_51f5)
  %v0_5203 = call i32 @function_5207()
  ret i32 %v0_5203
}

define i32 @function_5205() local_unnamed_addr {
dec_label_pc_5205:
  %eax.global-to-local = alloca i32, align 4
  %v0_5205 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5205
}

define i32 @function_5207() local_unnamed_addr {
dec_label_pc_5207:
  %v0_5207 = load i32, i32* @ebp, align 4
  %v1_5207 = add i32 %v0_5207, -1208
  ret i32 %v1_5207
}

define i32 @function_5215() local_unnamed_addr {
dec_label_pc_5215:
  %v0_5215 = call i32 @function_557f()
  ret i32 %v0_5215
}

define i32 @function_521a() local_unnamed_addr {
dec_label_pc_521a:
  %eax.global-to-local = alloca i32, align 4
  %v0_521a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_521a, i32* @ebx, align 4
  %v0_521c = load i32, i32* @ebp, align 4
  %v1_521c = add i32 %v0_521c, -800
  store i32 %v1_521c, i32* %eax.global-to-local, align 8
  %v1_5225 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_521c)
  store i32 %v1_5225, i32* %eax.global-to-local, align 8
  %v0_522a = call i32 @function_522e()
  store i32 %v0_522a, i32* %eax.global-to-local, align 8
  ret i32 %v0_522a
}

define i32 @function_522c() local_unnamed_addr {
dec_label_pc_522c:
  %eax.global-to-local = alloca i32, align 4
  %v0_522c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_522c
}

define i32 @function_522e() local_unnamed_addr {
dec_label_pc_522e:
  %v0_522e = load i32, i32* @ebp, align 4
  %v1_522e = add i32 %v0_522e, -1200
  ret i32 %v1_522e
}

define i32 @function_523c() local_unnamed_addr {
dec_label_pc_523c:
  %v0_523c = call i32 @function_5240()
  ret i32 %v0_523c
}

define i32 @function_523e() local_unnamed_addr {
dec_label_pc_523e:
  %eax.global-to-local = alloca i32, align 4
  %v0_523e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_523e
}

define i32 @function_5240() local_unnamed_addr {
dec_label_pc_5240:
  %v0_5240 = load i32, i32* @ebp, align 4
  %v1_5240 = add i32 %v0_5240, -1068
  ret i32 %v1_5240
}

define i32 @function_524e() local_unnamed_addr {
dec_label_pc_524e:
  %v0_524e = load i32, i32* @ebp, align 4
  %v1_524e = add i32 %v0_524e, -252
  %v1_5257 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_524e)
  %v0_525c = call i32 @function_557f()
  ret i32 %v0_525c
}

define i32 @function_5261() local_unnamed_addr {
dec_label_pc_5261:
  %eax.global-to-local = alloca i32, align 4
  %v0_5261 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_5261, i32* @ebx, align 4
  %v0_5263 = load i32, i32* @ebp, align 4
  %v1_5263 = add i32 %v0_5263, -776
  store i32 %v1_5263, i32* %eax.global-to-local, align 8
  %v1_526c = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5263)
  store i32 %v1_526c, i32* %eax.global-to-local, align 8
  %v0_5271 = call i32 @function_5275()
  store i32 %v0_5271, i32* %eax.global-to-local, align 8
  ret i32 %v0_5271
}

define i32 @function_5273() local_unnamed_addr {
dec_label_pc_5273:
  %eax.global-to-local = alloca i32, align 4
  %v0_5273 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5273
}

define i32 @function_5275() local_unnamed_addr {
dec_label_pc_5275:
  %v0_5275 = load i32, i32* @ebp, align 4
  %v1_5275 = add i32 %v0_5275, -1196
  ret i32 %v1_5275
}

define i32 @function_5283() local_unnamed_addr {
dec_label_pc_5283:
  %v0_5283 = call i32 @function_5287()
  ret i32 %v0_5283
}

define i32 @function_5285() local_unnamed_addr {
dec_label_pc_5285:
  %eax.global-to-local = alloca i32, align 4
  %v0_5285 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5285
}

define i32 @function_5287() local_unnamed_addr {
dec_label_pc_5287:
  %v0_5287 = load i32, i32* @ebp, align 4
  %v1_5287 = add i32 %v0_5287, -1067
  ret i32 %v1_5287
}

define i32 @function_5295() local_unnamed_addr {
dec_label_pc_5295:
  %v0_5295 = load i32, i32* @ebp, align 4
  %v1_5295 = add i32 %v0_5295, -232
  %v1_529e = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5295)
  %v0_52a3 = call i32 @function_557f()
  ret i32 %v0_52a3
}

define i32 @function_52a8() local_unnamed_addr {
dec_label_pc_52a8:
  %eax.global-to-local = alloca i32, align 4
  %v0_52a8 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_52a8, i32* @ebx, align 4
  %v0_52aa = load i32, i32* @ebp, align 4
  %v1_52aa = add i32 %v0_52aa, -752
  store i32 %v1_52aa, i32* %eax.global-to-local, align 8
  %v1_52b3 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_52aa)
  store i32 %v1_52b3, i32* %eax.global-to-local, align 8
  %v0_52b8 = call i32 @function_52bc()
  store i32 %v0_52b8, i32* %eax.global-to-local, align 8
  ret i32 %v0_52b8
}

define i32 @function_52ba() local_unnamed_addr {
dec_label_pc_52ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_52ba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_52ba
}

define i32 @function_52bc() local_unnamed_addr {
dec_label_pc_52bc:
  %v0_52bc = load i32, i32* @ebp, align 4
  %v1_52bc = add i32 %v0_52bc, -1192
  ret i32 %v1_52bc
}

define i32 @function_52ca() local_unnamed_addr {
dec_label_pc_52ca:
  %v0_52ca = call i32 @function_52ce()
  ret i32 %v0_52ca
}

define i32 @function_52cc() local_unnamed_addr {
dec_label_pc_52cc:
  %eax.global-to-local = alloca i32, align 4
  %v0_52cc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_52cc
}

define i32 @function_52ce() local_unnamed_addr {
dec_label_pc_52ce:
  %v0_52ce = load i32, i32* @ebp, align 4
  %v1_52ce = add i32 %v0_52ce, -1066
  ret i32 %v1_52ce
}

define i32 @function_52dc() local_unnamed_addr {
dec_label_pc_52dc:
  %v0_52dc = load i32, i32* @ebp, align 4
  %v1_52dc = add i32 %v0_52dc, -212
  %v1_52e5 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_52dc)
  %v0_52ea = call i32 @function_557f()
  ret i32 %v0_52ea
}

define i32 @function_52ef() local_unnamed_addr {
dec_label_pc_52ef:
  %eax.global-to-local = alloca i32, align 4
  %v0_52ef = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_52ef, i32* @ebx, align 4
  %v0_52f1 = load i32, i32* @ebp, align 4
  %v1_52f1 = add i32 %v0_52f1, -728
  store i32 %v1_52f1, i32* %eax.global-to-local, align 8
  %v1_52fa = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_52f1)
  store i32 %v1_52fa, i32* %eax.global-to-local, align 8
  %v0_52ff = call i32 @function_5303()
  store i32 %v0_52ff, i32* %eax.global-to-local, align 8
  ret i32 %v0_52ff
}

define i32 @function_5301() local_unnamed_addr {
dec_label_pc_5301:
  %eax.global-to-local = alloca i32, align 4
  %v0_5301 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5301
}

define i32 @function_5303() local_unnamed_addr {
dec_label_pc_5303:
  %v0_5303 = load i32, i32* @ebp, align 4
  %v1_5303 = add i32 %v0_5303, -1184
  ret i32 %v1_5303
}

define i32 @function_5311() local_unnamed_addr {
dec_label_pc_5311:
  %v0_5311 = call i32 @function_5315()
  ret i32 %v0_5311
}

define i32 @function_5313() local_unnamed_addr {
dec_label_pc_5313:
  %eax.global-to-local = alloca i32, align 4
  %v0_5313 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5313
}

define i32 @function_5315() local_unnamed_addr {
dec_label_pc_5315:
  %v0_5315 = load i32, i32* @ebp, align 4
  %v1_5315 = add i32 %v0_5315, -1065
  ret i32 %v1_5315
}

define i32 @function_5323() local_unnamed_addr {
dec_label_pc_5323:
  %v0_5323 = load i32, i32* @ebp, align 4
  %v1_5323 = add i32 %v0_5323, -192
  %v1_532c = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5323)
  %v0_5331 = call i32 @function_5335()
  ret i32 %v0_5331
}

define i32 @function_5333() local_unnamed_addr {
dec_label_pc_5333:
  %eax.global-to-local = alloca i32, align 4
  %v0_5333 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5333
}

define i32 @function_5335() local_unnamed_addr {
dec_label_pc_5335:
  %v0_5335 = load i32, i32* @ebp, align 4
  %v1_5335 = add i32 %v0_5335, -1188
  ret i32 %v1_5335
}

define i32 @function_5343() local_unnamed_addr {
dec_label_pc_5343:
  %v0_5343 = call i32 @function_557f()
  ret i32 %v0_5343
}

define i32 @function_5348() local_unnamed_addr {
dec_label_pc_5348:
  %eax.global-to-local = alloca i32, align 4
  %v0_5348 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_5348, i32* @ebx, align 4
  %v0_534a = load i32, i32* @ebp, align 4
  %v1_534a = add i32 %v0_534a, -704
  store i32 %v1_534a, i32* %eax.global-to-local, align 8
  %v1_5353 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_534a)
  store i32 %v1_5353, i32* %eax.global-to-local, align 8
  %v0_5358 = call i32 @function_535c()
  store i32 %v0_5358, i32* %eax.global-to-local, align 8
  ret i32 %v0_5358
}

define i32 @function_535a() local_unnamed_addr {
dec_label_pc_535a:
  %eax.global-to-local = alloca i32, align 4
  %v0_535a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_535a
}

define i32 @function_535c() local_unnamed_addr {
dec_label_pc_535c:
  %v0_535c = load i32, i32* @ebp, align 4
  %v1_535c = add i32 %v0_535c, -1180
  ret i32 %v1_535c
}

define i32 @function_536a() local_unnamed_addr {
dec_label_pc_536a:
  %v0_536a = call i32 @function_536e()
  ret i32 %v0_536a
}

define i32 @function_536c() local_unnamed_addr {
dec_label_pc_536c:
  %eax.global-to-local = alloca i32, align 4
  %v0_536c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_536c
}

define i32 @function_536e() local_unnamed_addr {
dec_label_pc_536e:
  %v0_536e = load i32, i32* @ebp, align 4
  %v1_536e = add i32 %v0_536e, -1064
  ret i32 %v1_536e
}

define i32 @function_537c() local_unnamed_addr {
dec_label_pc_537c:
  %v0_537c = load i32, i32* @ebp, align 4
  %v1_537c = add i32 %v0_537c, -172
  %v1_5385 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_537c)
  %v0_538a = call i32 @function_557f()
  ret i32 %v0_538a
}

define i32 @function_538f() local_unnamed_addr {
dec_label_pc_538f:
  %eax.global-to-local = alloca i32, align 4
  %v0_538f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_538f, i32* @ebx, align 4
  %v0_5391 = load i32, i32* @ebp, align 4
  %v1_5391 = add i32 %v0_5391, -680
  store i32 %v1_5391, i32* %eax.global-to-local, align 8
  %v1_539a = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5391)
  store i32 %v1_539a, i32* %eax.global-to-local, align 8
  %v0_539f = call i32 @function_53a3()
  store i32 %v0_539f, i32* %eax.global-to-local, align 8
  ret i32 %v0_539f
}

define i32 @function_53a1() local_unnamed_addr {
dec_label_pc_53a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_53a1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_53a1
}

define i32 @function_53a3() local_unnamed_addr {
dec_label_pc_53a3:
  %v0_53a3 = load i32, i32* @ebp, align 4
  %v1_53a3 = add i32 %v0_53a3, -1176
  ret i32 %v1_53a3
}

define i32 @function_53b1() local_unnamed_addr {
dec_label_pc_53b1:
  %v0_53b1 = call i32 @function_53b5()
  ret i32 %v0_53b1
}

define i32 @function_53b3() local_unnamed_addr {
dec_label_pc_53b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_53b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_53b3
}

define i32 @function_53b5() local_unnamed_addr {
dec_label_pc_53b5:
  %v0_53b5 = load i32, i32* @ebp, align 4
  %v1_53b5 = add i32 %v0_53b5, -1063
  ret i32 %v1_53b5
}

define i32 @function_53c2() local_unnamed_addr {
dec_label_pc_53c2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_53c2 = add i32 %tmp91, -38779
  %v2_53c2 = inttoptr i32 %v1_53c2 to i32*
  %v3_53c2 = load i32, i32* %v2_53c2, align 4
  %v4_53c2 = add i32 %v3_53c2, -1
  store i32 %v4_53c2, i32* %v2_53c2, align 4
  %v0_53c8 = load i32, i32* %ecx.global-to-local, align 8
  %v1_53c8 = add i32 %v0_53c8, 635970564
  %v2_53c8 = inttoptr i32 %v1_53c8 to i32*
  %v3_53c8 = load i32, i32* %v2_53c8, align 4
  %v4_53c8 = add i32 %v3_53c8, -1
  store i32 %v4_53c8, i32* %v2_53c8, align 4
  %v0_53d0 = load i32, i32* %ecx.global-to-local, align 8
  %v3_53d0 = udiv i32 %v0_53d0, 256
  %v5_53d0 = add i32 %v3_53d0, %v0_53d0
  %v20_53d0 = urem i32 %v5_53d0, 256
  %v22_53d0 = and i32 %v0_53d0, -256
  %v23_53d0 = or i32 %v20_53d0, %v22_53d0
  store i32 %v23_53d0, i32* %ecx.global-to-local, align 8
  %v0_53d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_53d2

; uselistorder directives
  uselistorder i32 %v0_53d0, { 2, 1, 0 }
}

define i32 @function_53d8() local_unnamed_addr {
dec_label_pc_53d8:
  %v0_53d8 = load i32, i32* @ebp, align 4
  %v1_53d8 = add i32 %v0_53d8, -656
  %v1_53e1 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_53d8)
  %v0_53e6 = call i32 @function_53ea()
  ret i32 %v0_53e6
}

define i32 @function_53e8() local_unnamed_addr {
dec_label_pc_53e8:
  %eax.global-to-local = alloca i32, align 4
  %v0_53e8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_53e8
}

define i32 @function_53ea() local_unnamed_addr {
dec_label_pc_53ea:
  %v0_53ea = load i32, i32* @ebp, align 4
  %v1_53ea = add i32 %v0_53ea, -1172
  ret i32 %v1_53ea
}

define i32 @function_53f8() local_unnamed_addr {
dec_label_pc_53f8:
  %v0_53f8 = call i32 @function_53fc()
  ret i32 %v0_53f8
}

define i32 @function_53fa() local_unnamed_addr {
dec_label_pc_53fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_53fa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_53fa
}

define i32 @function_53fc() local_unnamed_addr {
dec_label_pc_53fc:
  %v0_53fc = load i32, i32* @ebp, align 4
  %v1_53fc = add i32 %v0_53fc, -1062
  ret i32 %v1_53fc
}

define i32 @function_5409() local_unnamed_addr {
dec_label_pc_5409:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5409 = load i32, i32* @ebp, align 4
  %v1_5409 = add i32 %v0_5409, -33659
  %v2_5409 = inttoptr i32 %v1_5409 to i32*
  %v3_5409 = load i32, i32* %v2_5409, align 4
  %v4_5409 = add i32 %v3_5409, -1
  store i32 %v4_5409, i32* %v2_5409, align 4
  %v0_540f = load i32, i32* %ecx.global-to-local, align 8
  %v1_540f = add i32 %v0_540f, -555211772
  %v2_540f = inttoptr i32 %v1_540f to i32*
  %v3_540f = load i32, i32* %v2_540f, align 4
  %v4_540f = add i32 %v3_540f, -1
  store i32 %v4_540f, i32* %v2_540f, align 4
  %v0_5417 = load i32, i32* %ecx.global-to-local, align 8
  %v3_5417 = udiv i32 %v0_5417, 256
  %v5_5417 = add i32 %v3_5417, %v0_5417
  %v20_5417 = urem i32 %v5_5417, 256
  %v22_5417 = and i32 %v0_5417, -256
  %v23_5417 = or i32 %v20_5417, %v22_5417
  store i32 %v23_5417, i32* @ecx, align 8
  %v2_541b = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_541b = load i32, i32* %eax.global-to-local, align 8
  %v4_541b = trunc i32 %v3_541b to i8
  %v5_541b = add i8 %v4_541b, %v2_541b
  %v21_541b = inttoptr i32 %v3_541b to i8*
  store i8 %v5_541b, i8* %v21_541b, align 1
  %v0_541d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_541d, i32* @ebx, align 4
  %v0_541f = load i32, i32* @ebp, align 4
  %v1_541f = add i32 %v0_541f, -632
  store i32 %v1_541f, i32* %eax.global-to-local, align 8
  %v1_5428 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_541f)
  store i32 %v1_5428, i32* %eax.global-to-local, align 8
  %v0_542d = call i32 @function_5431()
  store i32 %v0_542d, i32* %eax.global-to-local, align 8
  ret i32 %v0_542d

; uselistorder directives
  uselistorder i32 %v0_5417, { 2, 1, 0 }
}

define i32 @function_542f() local_unnamed_addr {
dec_label_pc_542f:
  %eax.global-to-local = alloca i32, align 4
  %v0_542f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_542f
}

define i32 @function_5431() local_unnamed_addr {
dec_label_pc_5431:
  %v0_5431 = load i32, i32* @ebp, align 4
  %v1_5431 = add i32 %v0_5431, -1168
  ret i32 %v1_5431
}

define i32 @function_543f() local_unnamed_addr {
dec_label_pc_543f:
  %v0_543f = call i32 @function_5443()
  ret i32 %v0_543f
}

define i32 @function_5441() local_unnamed_addr {
dec_label_pc_5441:
  %eax.global-to-local = alloca i32, align 4
  %v0_5441 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5441
}

define i32 @function_5443() local_unnamed_addr {
dec_label_pc_5443:
  %v0_5443 = load i32, i32* @ebp, align 4
  %v1_5443 = add i32 %v0_5443, -1061
  ret i32 %v1_5443
}

define i32 @function_5450() local_unnamed_addr {
dec_label_pc_5450:
  %cs.global-to-local = alloca i16, align 2
  %eax.global-to-local = alloca i32, align 4
  %v0_5450 = load i32, i32* @ebp, align 4
  %v1_5450 = add i32 %v0_5450, 76124229
  %v2_5450 = inttoptr i32 %v1_5450 to i32*
  %v3_5450 = load i32, i32* %v2_5450, align 4
  %v4_5450 = add i32 %v3_5450, -1
  store i32 %v4_5450, i32* %v2_5450, align 4
  %v0_5456 = load i32, i32* %eax.global-to-local, align 8
  %v11_5456 = and i32 %v0_5456, -24
  store i32 %v11_5456, i32* %eax.global-to-local, align 8
  %v0_5458 = load i16, i16* %cs.global-to-local, align 2
  %v5_5458 = sext i16 %v0_5458 to i32
  %v6_5458 = call i32 @unknown_e90000e6(i32 %v5_5458)
  store i32 %v6_5458, i32* %eax.global-to-local, align 8
  %v1_545f = inttoptr i32 %v6_5458 to i8*
  %v2_545f = load i8, i8* %v1_545f, align 1
  %v4_545f = trunc i32 %v6_5458 to i8
  %v5_545f = add i8 %v2_545f, %v4_545f
  store i8 %v5_545f, i8* %v1_545f, align 1
  %v0_5461 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_5461, i32* @ebx, align 4
  %v0_5463 = load i32, i32* @ebp, align 4
  %v1_5463 = add i32 %v0_5463, -608
  store i32 %v1_5463, i32* %eax.global-to-local, align 8
  %v1_546c = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_5463)
  store i32 %v1_546c, i32* %eax.global-to-local, align 8
  %v0_5471 = call i32 @function_5475()
  store i32 %v0_5471, i32* %eax.global-to-local, align 8
  ret i32 %v0_5471
}

define i32 @function_5473() local_unnamed_addr {
dec_label_pc_5473:
  %eax.global-to-local = alloca i32, align 4
  %v0_5473 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5473
}

define i32 @function_5475() local_unnamed_addr {
dec_label_pc_5475:
  %v0_5475 = load i32, i32* @ebp, align 4
  %v1_5475 = add i32 %v0_5475, -1164
  ret i32 %v1_5475
}

define i32 @function_5483() local_unnamed_addr {
dec_label_pc_5483:
  %v0_5483 = call i32 @function_5487()
  ret i32 %v0_5483
}

define i32 @function_5485() local_unnamed_addr {
dec_label_pc_5485:
  %eax.global-to-local = alloca i32, align 4
  %v0_5485 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5485
}

define i32 @function_5487() local_unnamed_addr {
dec_label_pc_5487:
  %v0_5487 = load i32, i32* @ebp, align 4
  %v1_5487 = add i32 %v0_5487, -1060
  ret i32 %v1_5487
}

define i32 @function_5494() local_unnamed_addr {
dec_label_pc_5494:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_5494 = load i32, i32* @ebp, align 4
  %v1_5494 = add i32 %v0_5494, 76129349
  %v2_5494 = inttoptr i32 %v1_5494 to i32*
  %v3_5494 = load i32, i32* %v2_5494, align 4
  %v4_5494 = add i32 %v3_5494, -1
  store i32 %v4_5494, i32* %v2_5494, align 4
  %v0_549a = load i32, i32* %eax.global-to-local, align 8
  %v1_549a = trunc i32 %v0_549a to i8
  %v2_549a = and i8 %v1_549a, -24
  %v8_549a = zext i8 %v2_549a to i32
  %v10_549a = and i32 %v0_549a, -256
  %v11_549a = or i32 %v8_549a, %v10_549a
  store i32 %v11_549a, i32* %eax.global-to-local, align 8
  %v0_549f = load i32, i32* %ecx.global-to-local, align 8
  %v3_549f = udiv i32 %v0_549f, 256
  %v5_549f = add i32 %v3_549f, %v0_549f
  %v20_549f = and i32 %v5_549f, 255
  %v22_549f = and i32 %v0_549f, -256
  %v23_549f = or i32 %v20_549f, %v22_549f
  store i32 %v23_549f, i32* @ecx, align 8
  %v2_54a1 = inttoptr i32 %v11_549a to i32*
  %v3_54a1 = load i32, i32* %v2_54a1, align 8
  %v4_54a1 = sitofp i32 %v3_54a1 to x86_fp80
  %v5_54a1 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_54a1 = fadd x86_fp80 %v5_54a1, %v4_54a1
  store x86_fp80 %v6_54a1, x86_fp80* %st0.global-to-local, align 4
  %v1_54a3 = inttoptr i32 %v11_549a to i8*
  %v2_54a3 = load i8, i8* %v1_54a3, align 8
  %v5_54a3 = add i8 %v2_54a3, %v2_549a
  store i8 %v5_54a3, i8* %v1_54a3, align 8
  %v0_54a5 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_54a5, i32* @ebx, align 4
  %v0_54a7 = load i32, i32* @ebp, align 4
  %v1_54a7 = add i32 %v0_54a7, -584
  store i32 %v1_54a7, i32* %eax.global-to-local, align 8
  %v1_54b0 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_54a7)
  store i32 %v1_54b0, i32* %eax.global-to-local, align 8
  %v0_54b5 = call i32 @function_54b9()
  store i32 %v0_54b5, i32* %eax.global-to-local, align 8
  ret i32 %v0_54b5

; uselistorder directives
  uselistorder i32 %v0_549f, { 2, 0, 1 }
}

define i32 @function_54b7() local_unnamed_addr {
dec_label_pc_54b7:
  %eax.global-to-local = alloca i32, align 4
  %v0_54b7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_54b7
}

define i32 @function_54b9() local_unnamed_addr {
dec_label_pc_54b9:
  %v0_54b9 = load i32, i32* @ebp, align 4
  %v1_54b9 = add i32 %v0_54b9, -1160
  ret i32 %v1_54b9
}

define i32 @function_54c7() local_unnamed_addr {
dec_label_pc_54c7:
  %v0_54c7 = call i32 @function_54cb()
  ret i32 %v0_54c7
}

define i32 @function_54c9() local_unnamed_addr {
dec_label_pc_54c9:
  %eax.global-to-local = alloca i32, align 4
  %v0_54c9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_54c9
}

define i32 @function_54cb() local_unnamed_addr {
dec_label_pc_54cb:
  %v0_54cb = load i32, i32* @ebp, align 4
  %v1_54cb = add i32 %v0_54cb, -1059
  ret i32 %v1_54cb
}

define i32 @function_54d8() local_unnamed_addr {
dec_label_pc_54d8:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_54d8 = load i32, i32* @ebp, align 4
  %v1_54d8 = add i32 %v0_54d8, 76134469
  %v2_54d8 = inttoptr i32 %v1_54d8 to i32*
  %v3_54d8 = load i32, i32* %v2_54d8, align 4
  %v4_54d8 = add i32 %v3_54d8, -1
  store i32 %v4_54d8, i32* %v2_54d8, align 4
  %v0_54de = load i32, i32* %eax.global-to-local, align 8
  %v1_54de = trunc i32 %v0_54de to i8
  %v2_54de = and i8 %v1_54de, -24
  %v1_54e0 = udiv i32 %v0_54de, 256
  %v3_54e0 = load i32, i32* %edx.global-to-local, align 4
  %v4_54e0 = udiv i32 %v3_54e0, 256
  %v8_54e0 = add nuw nsw i32 %v4_54e0, %v1_54e0
  %v30_54e0 = and i32 %v8_54e0, 255
  %v32_54e0 = mul nuw nsw i32 %v30_54e0, 256
  %v33_54e0 = and i32 %v0_54de, -65304
  %v34_54e0 = or i32 %v32_54e0, %v33_54e0
  store i32 %v34_54e0, i32* %eax.global-to-local, align 8
  %v1_54e2 = inttoptr i32 %v34_54e0 to i8*
  %v2_54e2 = load i8, i8* %v1_54e2, align 8
  %v5_54e2 = add i8 %v2_54e2, %v2_54de
  store i8 %v5_54e2, i8* %v1_54e2, align 8
  %v0_54e4 = call i32 @function_557f()
  store i32 %v0_54e4, i32* %eax.global-to-local, align 8
  ret i32 %v0_54e4

; uselistorder directives
  uselistorder i32 %v0_54de, { 1, 0, 2 }
}

define i32 @function_54e9() local_unnamed_addr {
dec_label_pc_54e9:
  %eax.global-to-local = alloca i32, align 4
  %v0_54e9 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_54e9, i32* @ebx, align 4
  %v0_54eb = load i32, i32* @ebp, align 4
  %v1_54eb = add i32 %v0_54eb, -560
  store i32 %v1_54eb, i32* %eax.global-to-local, align 8
  %v1_54f4 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_54eb)
  store i32 %v1_54f4, i32* %eax.global-to-local, align 8
  %v0_54f9 = call i32 @function_54fd()
  store i32 %v0_54f9, i32* %eax.global-to-local, align 8
  ret i32 %v0_54f9
}

define i32 @function_54fb() local_unnamed_addr {
dec_label_pc_54fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_54fb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_54fb
}

define i32 @function_54fd() local_unnamed_addr {
dec_label_pc_54fd:
  %v0_54fd = load i32, i32* @ebp, align 4
  %v1_54fd = add i32 %v0_54fd, -1152
  ret i32 %v1_54fd
}

define i32 @function_550b() local_unnamed_addr {
dec_label_pc_550b:
  %v0_550b = call i32 @function_550f()
  ret i32 %v0_550b
}

define i32 @function_550d() local_unnamed_addr {
dec_label_pc_550d:
  %eax.global-to-local = alloca i32, align 4
  %v0_550d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_550d
}

define i32 @function_550f() local_unnamed_addr {
dec_label_pc_550f:
  %v0_550f = load i32, i32* @ebp, align 4
  %v1_550f = add i32 %v0_550f, -1058
  ret i32 %v1_550f
}

define i32 @function_551d() local_unnamed_addr {
dec_label_pc_551d:
  %v0_551d = load i32, i32* @ebp, align 4
  %v1_551d = add i32 %v0_551d, -52
  %v1_5523 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %v1_551d)
  %v0_5528 = call i32 @function_552c()
  ret i32 %v0_5528

; uselistorder directives
  uselistorder i32 (i32)* @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev, { 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_552a() local_unnamed_addr {
dec_label_pc_552a:
  %eax.global-to-local = alloca i32, align 4
  %v0_552a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_552a
}

define i32 @function_552c() local_unnamed_addr {
dec_label_pc_552c:
  %v0_552c = load i32, i32* @ebp, align 4
  %v1_552c = add i32 %v0_552c, -1156
  ret i32 %v1_552c
}

define i32 @function_553a() local_unnamed_addr {
dec_label_pc_553a:
  %v0_553a = call i32 @function_557f()
  ret i32 %v0_553a
}

define i32 @function_553c() local_unnamed_addr {
dec_label_pc_553c:
  %eax.global-to-local = alloca i32, align 4
  %v0_553c = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_553c, i32* @ebx, align 4
  %v0_553e = load i32, i32* @ebp, align 4
  %v1_553e = add i32 %v0_553e, -536
  store i32 %v1_553e, i32* %eax.global-to-local, align 8
  %v1_5547 = call i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %v1_553e)
  store i32 %v1_5547, i32* %eax.global-to-local, align 8
  %v0_554c = call i32 @function_5550()
  store i32 %v0_554c, i32* %eax.global-to-local, align 8
  ret i32 %v0_554c

; uselistorder directives
  uselistorder i32 (i32)* @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_554e() local_unnamed_addr {
dec_label_pc_554e:
  %eax.global-to-local = alloca i32, align 4
  %v0_554e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_554e
}

define i32 @function_5550() local_unnamed_addr {
dec_label_pc_5550:
  %v0_5550 = load i32, i32* @ebp, align 4
  %v1_5550 = add i32 %v0_5550, -1148
  ret i32 %v1_5550
}

define i32 @function_555e() local_unnamed_addr {
dec_label_pc_555e:
  %v0_555e = call i32 @function_5562()
  ret i32 %v0_555e
}

define i32 @function_5560() local_unnamed_addr {
dec_label_pc_5560:
  %eax.global-to-local = alloca i32, align 4
  %v0_5560 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5560
}

define i32 @function_5562() local_unnamed_addr {
dec_label_pc_5562:
  %v0_5562 = load i32, i32* @ebp, align 4
  %v1_5562 = add i32 %v0_5562, -1057
  ret i32 %v1_5562
}

define i32 @function_556f() local_unnamed_addr {
dec_label_pc_556f:
  %eax.global-to-local = alloca i32, align 4
  %v0_556f = load i32, i32* @ebp, align 4
  %v1_556f = add i32 %v0_556f, 76144709
  %v2_556f = inttoptr i32 %v1_556f to i32*
  %v3_556f = load i32, i32* %v2_556f, align 4
  %v4_556f = add i32 %v3_556f, -1
  store i32 %v4_556f, i32* %v2_556f, align 4
  %v0_5575 = load i32, i32* %eax.global-to-local, align 8
  %v1_5575 = trunc i32 %v0_5575 to i8
  %v2_5575 = and i8 %v1_5575, -24
  %v5_5575 = call i8 @llvm.ctpop.i8(i8 %v2_5575)
  %v6_5575 = urem i8 %v5_5575, 2
  %v7_5575 = icmp eq i8 %v6_5575, 0
  %v8_5575 = zext i8 %v2_5575 to i32
  %v10_5575 = and i32 %v0_5575, -256
  %v11_5575 = or i32 %v8_5575, %v10_5575
  store i32 %v11_5575, i32* %eax.global-to-local, align 8
  %v1_5577 = icmp eq i1 %v7_5575, false
  br i1 %v1_5577, label %bb, label %dec_label_pc_5579

bb:                                               ; preds = %dec_label_pc_556f
  %v2_5577 = call i32 @function_555e()
  store i32 %v2_5577, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_5579

dec_label_pc_5579:                                ; preds = %bb, %dec_label_pc_556f
  %v20_5579 = phi i32 [ %v2_5577, %bb ], [ %v11_5575, %dec_label_pc_556f ]
  %v1_5579 = inttoptr i32 %v20_5579 to i8*
  %v2_5579 = load i8, i8* %v1_5579, align 1
  %v4_5579 = trunc i32 %v20_5579 to i8
  %v5_5579 = add i8 %v2_5579, %v4_5579
  store i8 %v5_5579, i8* %v1_5579, align 1
  %v0_557b = call i32 @function_557f()
  store i32 %v0_557b, i32* %eax.global-to-local, align 8
  ret i32 %v0_557b

; uselistorder directives
  uselistorder i32 %v20_5579, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 ()* @function_557f, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_557e() local_unnamed_addr {
dec_label_pc_557e:
  %eax.global-to-local = alloca i32, align 4
  %v0_557e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_557e
}

define i32 @function_557f() local_unnamed_addr {
dec_label_pc_557f:
  %v0_557f = load i32, i32* @ebp, align 4
  %v1_557f = add i32 %v0_557f, -1328
  %v1_5588 = inttoptr i32 %v1_557f to i32*
  %v2_5588 = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_5588)
  %v0_558d = call i32 @function_5591()
  ret i32 %v0_558d

; uselistorder directives
  uselistorder i32 ()* @function_5591, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_5590() local_unnamed_addr {
dec_label_pc_5590:
  %eax.global-to-local = alloca i32, align 4
  %v0_5590 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5590
}

define i32 @function_5591() local_unnamed_addr {
dec_label_pc_5591:
  %v0_5591 = load i32, i32* @ebp, align 4
  %v1_5591 = add i32 %v0_5591, -1340
  %v1_559a = inttoptr i32 %v1_5591 to i32*
  %v2_559a = call i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_559a)
  %v0_559f = call i32 @function_55a3()
  ret i32 %v0_559f

; uselistorder directives
  uselistorder i32 ()* @function_55a3, { 1, 0 }
  uselistorder i32 (i32*)* @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev, { 1, 0, 2, 3, 4, 5, 6, 7 }
}

define i32 @function_55a2() local_unnamed_addr {
dec_label_pc_55a2:
  %eax.global-to-local = alloca i32, align 4
  %v0_55a2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_55a2
}

define i32 @function_55a3() local_unnamed_addr {
dec_label_pc_55a3:
  %v0_55a3 = load i32, i32* @ebp, align 4
  %v1_55a3 = add i32 %v0_55a3, -1420
  %v1_55ac = call i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEED1Ev(i32 %v1_55a3)
  %v0_55b1 = call i32 @function_55b5()
  ret i32 %v0_55b1
}

define i32 @function_55b3() local_unnamed_addr {
dec_label_pc_55b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_55b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_55b3
}

define i32 @function_55b5() local_unnamed_addr {
dec_label_pc_55b5:
  %v0_55b5 = load i32, i32* @ebp, align 4
  %v1_55b5 = add i32 %v0_55b5, -1376
  %v1_55be = inttoptr i32 %v1_55b5 to i32*
  %v2_55be = call i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %v1_55be)
  %v0_55c3 = call i32 @function_55c7()
  ret i32 %v0_55c3

; uselistorder directives
  uselistorder i32 ()* @function_55c7, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev, { 1, 0, 2 }
}

define i32 @function_55c6() local_unnamed_addr {
dec_label_pc_55c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_55c6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_55c6
}

define i32 @function_55c7() local_unnamed_addr {
dec_label_pc_55c7:
  %v0_55c7 = load i32, i32* @ebp, align 4
  %v1_55c7 = add i32 %v0_55c7, -1312
  ret i32 %v1_55c7
}

define i32 @function_55df() local_unnamed_addr {
dec_label_pc_55df:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_55e4() local_unnamed_addr {
dec_label_pc_55e4:
  %v0_55ea = load i32, i32* @eax, align 8
  ret i32 %v0_55ea
}

define %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" @_Z11submitblockRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb(i32 %params, i1 %fHelp) local_unnamed_addr {
dec_label_pc_55ed:
  %tmp111 = call i8 @__decompiler_undefined_function_2()
  %v10_561e = icmp eq i8 %tmp111, 0
  %v1_5625 = icmp eq i1 %v10_561e, false
  br i1 %v1_5625, label %dec_label_pc_5658, label %dec_label_pc_5627

dec_label_pc_5627:                                ; preds = %dec_label_pc_55ed
  %v4_5604 = sext i1 %fHelp to i32
  %v2_5630 = inttoptr i32 %v4_5604 to i32*
  %v3_5630 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_5630)
  %v1_5635 = icmp eq i32 %v3_5630, 0
  br i1 %v1_5635, label %dec_label_pc_5658, label %dec_label_pc_5639

dec_label_pc_5639:                                ; preds = %dec_label_pc_5627
  %v3_5642 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %v2_5630)
  %tmp120 = icmp ugt i32 %v3_5642, 2
  %. = zext i1 %tmp120 to i32
  br label %dec_label_pc_5658

dec_label_pc_5658:                                ; preds = %dec_label_pc_5639, %dec_label_pc_55ed, %dec_label_pc_5627
  %storemerge = phi i32 [ 1, %dec_label_pc_5627 ], [ 1, %dec_label_pc_55ed ], [ %., %dec_label_pc_5639 ]
  %v5_5658 = icmp eq i32 %storemerge, 0
  br i1 %v5_5658, label %bb, label %dec_label_pc_565c

bb:                                               ; preds = %dec_label_pc_5658
  %v1_565a = call i32 @function_56d6()
  br label %dec_label_pc_565c

dec_label_pc_565c:                                ; preds = %bb, %dec_label_pc_5658
  %v3_565c = phi i32 [ %v1_565a, %bb ], [ %storemerge, %dec_label_pc_5658 ]
  %v4_565c = insertvalue %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" undef, i32 %v3_565c, 0
  ret %"Value_impl<json_spirit::Config_vector<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>.7" %v4_565c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 (i32*)* @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv, { 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_5658, { 0, 2, 1 }
}

define i32 @function_5669() local_unnamed_addr {
dec_label_pc_5669:
  %eax.global-to-local = alloca i32, align 4
  %v0_5669 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5669
}

define i32 @function_56d6() local_unnamed_addr {
dec_label_pc_56d6:
  %v0_56de = load i32, i32* @ebp, align 4
  %v1_56de = add i32 %v0_56de, -192
  %v2_56de = inttoptr i32 %v1_56de to i32*
  %v3_56de = load i32, i32* %v2_56de, align 4
  %v2_56e7 = inttoptr i32 %v3_56de to i32*
  %v3_56e7 = call i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %v2_56e7, i32 0)
  %v1_56ef = call i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv(i32 %v3_56e7)
  %v0_56f6 = load i32, i32* @ebp, align 4
  %v1_56f6 = add i32 %v0_56f6, -152
  ret i32 %v1_56f6

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv, { 1, 0 }
  uselistorder i32 (i32*, i32)* @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 -192, { 1, 0 }
}

define i32 @function_5785() local_unnamed_addr {
dec_label_pc_5785:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_5785 = load i32, i32* %eax.global-to-local, align 8
  %v1_5785 = add i32 %v0_5785, -1240495291
  %v2_5785 = inttoptr i32 %v1_5785 to i32*
  %v3_5785 = load i32, i32* %v2_5785, align 4
  %v4_5785 = add i32 %v3_5785, -1
  store i32 %v4_5785, i32* %v2_5785, align 4
  %v0_578b = load i32, i32* %ebp.global-to-local, align 4
  %v1_578b = add i32 %v0_578b, 1
  %v9_578b = icmp eq i32 %v1_578b, 0
  store i32 %v1_578b, i32* @ebp, align 4
  %v0_578c = load i32, i32* @ebx, align 4
  %v1_578c = add i32 %v0_578c, -1065090576
  %v2_578c = inttoptr i32 %v1_578c to i32*
  %v3_578c = load i32, i32* %v2_578c, align 4
  store i32 %v3_578c, i32* %eax.global-to-local, align 8
  %v1_57b4 = add i32 %v0_578b, -187
  %v2_57b4 = inttoptr i32 %v1_57b4 to i32*
  %v3_57b4 = load i32, i32* %v2_57b4, align 4
  store i32 %v3_57b4, i32* %eax.global-to-local, align 8
  %v3_57bd = inttoptr i32 %v3_57b4 to i32*
  br i1 %v9_578b, label %dec_label_pc_57ac, label %dec_label_pc_5794

dec_label_pc_5794:                                ; preds = %dec_label_pc_5785
  %v4_57a5 = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1EPKc(i32* %v3_57bd, i32 ptrtoint ([9 x i8]* @global_var_70b0.2800 to i32))
  br label %dec_label_pc_57c2

dec_label_pc_57ac:                                ; preds = %dec_label_pc_5785
  %v4_57bd = call i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKS3_(i32* %v3_57bd, i32 ptrtoint (i32* @global_var_404ec.2801 to i32))
  br label %dec_label_pc_57c2

dec_label_pc_57c2:                                ; preds = %dec_label_pc_57ac, %dec_label_pc_5794
  %v0_57c2 = load i32, i32* @ebp, align 4
  %v1_57c2 = add i32 %v0_57c2, -116
  store i32 %v1_57c2, i32* %eax.global-to-local, align 8
  %v1_57c8 = call i32 @_ZN6CBlockD1Ev(i32 %v1_57c2)
  %v0_57cd = load i32, i32* @ebp, align 4
  %v1_57cd = add i32 %v0_57cd, -180
  store i32 %v1_57cd, i32* %eax.global-to-local, align 8
  %v1_57d6 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_57cd)
  %v0_57db = load i32, i32* @ebp, align 4
  %v1_57db = add i32 %v0_57db, -152
  store i32 %v1_57db, i32* %eax.global-to-local, align 8
  %v1_57e4 = inttoptr i32 %v1_57db to i32*
  %v2_57e4 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_57e4)
  store i32 %v2_57e4, i32* %eax.global-to-local, align 8
  %v0_57e9 = load i32, i32* @ebp, align 4
  %v1_57e9 = add i32 %v0_57e9, -188
  %v2_57e9 = inttoptr i32 %v1_57e9 to i32*
  %v3_57e9 = load i32, i32* %v2_57e9, align 4
  store i32 %v3_57e9, i32* @eax, align 8
  %v1_57ef = add i32 %v0_57e9, -12
  %v2_57ef = inttoptr i32 %v1_57ef to i32*
  %v3_57ef = load i32, i32* %v2_57ef, align 4
  %v1_57f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_57f2 = icmp eq i32 %v1_57f2, %v3_57ef
  br i1 %v3_57f2, label %bb, label %dec_label_pc_57ff

bb:                                               ; preds = %dec_label_pc_57c2
  %v1_57f9 = call i32 @function_593c()
  store i32 %v1_57f9, i32* @eax, align 8
  br label %dec_label_pc_57ff

dec_label_pc_57ff:                                ; preds = %bb, %dec_label_pc_57c2
  %v0_57ff = call i32 @function_5937()
  store i32 %v0_57ff, i32* %eax.global-to-local, align 8
  ret i32 %v0_57ff

; uselistorder directives
  uselistorder i32* %v3_57bd, { 1, 0 }
}

define i32 @function_5814() local_unnamed_addr {
dec_label_pc_5814:
  %v0_5814 = call i32 @function_5818()
  ret i32 %v0_5814
}

define i32 @function_5816() local_unnamed_addr {
dec_label_pc_5816:
  %eax.global-to-local = alloca i32, align 4
  %v0_5816 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5816
}

define i32 @function_5818() local_unnamed_addr {
dec_label_pc_5818:
  %v0_5818 = load i32, i32* @ebp, align 4
  %v1_5818 = add i32 %v0_5818, -119
  ret i32 %v1_5818
}

define i32 @function_5842() local_unnamed_addr {
dec_label_pc_5842:
  %v0_5842 = call i32 @function_5846()
  ret i32 %v0_5842
}

define i32 @function_5844() local_unnamed_addr {
dec_label_pc_5844:
  %eax.global-to-local = alloca i32, align 4
  %v0_5844 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5844
}

define i32 @function_5846() local_unnamed_addr {
dec_label_pc_5846:
  %v0_5846 = load i32, i32* @ebp, align 4
  %v1_5846 = add i32 %v0_5846, -118
  ret i32 %v1_5846
}

define i32 @function_5858() local_unnamed_addr {
dec_label_pc_5858:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5858 = load i32, i32* %ecx.global-to-local, align 8
  %v1_5858 = add i32 %v0_5858, -1996297229
  %v2_5858 = inttoptr i32 %v1_5858 to i32*
  %v3_5858 = load i32, i32* %v2_5858, align 4
  %v4_5858 = add i32 %v3_5858, -1
  store i32 %v4_5858, i32* %v2_5858, align 4
  %v0_585e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_585e
}

define i32 @function_5864() local_unnamed_addr {
dec_label_pc_5864:
  %v0_5864 = call i32 @function_58fe()
  ret i32 %v0_5864
}

define i32 @function_5869() local_unnamed_addr {
dec_label_pc_5869:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_5869 = load i32, i32* %edx.global-to-local, align 4
  %v10_5869 = icmp eq i32 %v0_5869, 1
  %v3_5875 = load i32, i32* %eax.global-to-local, align 8
  br i1 %v10_5869, label %dec_label_pc_5875, label %dec_label_pc_586e

dec_label_pc_586e:                                ; preds = %dec_label_pc_5869
  store i32 %v3_5875, i32* @ebx, align 4
  %v0_5870 = call i32 @function_58fe()
  store i32 %v0_5870, i32* %eax.global-to-local, align 8
  ret i32 %v0_5870

dec_label_pc_5875:                                ; preds = %dec_label_pc_5869
  ret i32 %v3_5875

; uselistorder directives
  uselistorder i32 %v3_5875, { 1, 0 }
  uselistorder i32 ()* @function_58fe, { 1, 0 }
}

define i32 @function_588d() local_unnamed_addr {
dec_label_pc_588d:
  %eax.global-to-local = alloca i32, align 4
  %v0_588d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_588d
}

define i32 @function_58b4() local_unnamed_addr {
dec_label_pc_58b4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_58b5 = load i32, i32* %ecx.global-to-local, align 8
  %v1_58b5 = add i32 %v0_58b5, -955767740
  %v2_58b5 = inttoptr i32 %v1_58b5 to i8*
  %v3_58b5 = load i8, i8* %v2_58b5, align 1
  %v4_58b5 = or i8 %v3_58b5, 68
  store i8 %v4_58b5, i8* %v2_58b5, align 1
  %v0_58bc = load i32, i32* %eax.global-to-local, align 8
  %v11_58bc = and i32 %v0_58bc, -252
  store i32 %v11_58bc, i32* @eax, align 8
  %v0_58be = call i32 @function_89ffffff()
  store i32 %v0_58be, i32* %eax.global-to-local, align 8
  ret i32 %v0_58be
}

define i32 @function_58fd() local_unnamed_addr {
dec_label_pc_58fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_58fd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_58fd
}

define i32 @function_58fe() local_unnamed_addr {
dec_label_pc_58fe:
  %v0_58fe = load i32, i32* @ebp, align 4
  %v1_58fe = add i32 %v0_58fe, -116
  %v1_5904 = call i32 @_ZN6CBlockD1Ev(i32 %v1_58fe)
  %v0_5909 = call i32 @function_590d()
  ret i32 %v0_5909

; uselistorder directives
  uselistorder i32 (i32)* @_ZN6CBlockD1Ev, { 1, 0 }
}

define i32 @function_590b() local_unnamed_addr {
dec_label_pc_590b:
  %eax.global-to-local = alloca i32, align 4
  %v0_590b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_590b
}

define i32 @function_590d() local_unnamed_addr {
dec_label_pc_590d:
  %v0_590d = load i32, i32* @ebp, align 4
  %v1_590d = add i32 %v0_590d, -180
  %v1_5916 = call i32 @_ZN11CDataStreamD1Ev(i32 %v1_590d)
  %v0_591b = call i32 @function_591f()
  ret i32 %v0_591b

; uselistorder directives
  uselistorder i32 (i32)* @_ZN11CDataStreamD1Ev, { 3, 2, 1, 0 }
}

define i32 @function_591d() local_unnamed_addr {
dec_label_pc_591d:
  %eax.global-to-local = alloca i32, align 4
  %v0_591d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_591d
}

define i32 @function_591f() local_unnamed_addr {
dec_label_pc_591f:
  %v0_591f = load i32, i32* @ebp, align 4
  %v1_591f = add i32 %v0_591f, -152
  %v1_5928 = inttoptr i32 %v1_591f to i32*
  %v2_5928 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_5928)
  %v0_592d = load i32, i32* @ebx, align 4
  ret i32 %v0_592d
}

define i32 @function_5937() local_unnamed_addr {
dec_label_pc_5937:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_593c() local_unnamed_addr {
dec_label_pc_593c:
  %v0_5942 = load i32, i32* @eax, align 8
  ret i32 %v0_5942
}

define void @__static_initialization_and_destruction_0(i32 %__initialize_p, i32 %__priority) local_unnamed_addr {
dec_label_pc_5945:
  %v0_5957 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v13_5962 = icmp eq i32 %__initialize_p, 1
  %v1_5966 = icmp eq i1 %v13_5962, false
  br i1 %v1_5966, label %bb, label %dec_label_pc_596c

bb:                                               ; preds = %dec_label_pc_5945
  %v4_5966 = call i32 @function_5c0f(i32 %__priority, i32 %__initialize_p)
  br label %dec_label_pc_596c

dec_label_pc_596c:                                ; preds = %bb, %dec_label_pc_5945
  %v13_596c = icmp eq i32 %__priority, 65535
  %v1_5973 = icmp eq i1 %v13_596c, false
  br i1 %v1_5973, label %bb9, label %dec_label_pc_5979

bb9:                                              ; preds = %dec_label_pc_596c
  %v4_5973 = call i32 @function_5c0f(i32 %v0_5957, i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_5979

dec_label_pc_5979:                                ; preds = %bb9, %dec_label_pc_596c
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_5c0f, { 1, 0 }
  uselistorder i32 %__initialize_p, { 1, 0 }
}

define i32 @function_5a53() local_unnamed_addr {
dec_label_pc_5a53:
  %eax.global-to-local = alloca i32, align 4
  %v0_5a53 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5a53
}

define i32 @function_5a5d() local_unnamed_addr {
dec_label_pc_5a5d:
  %eax.global-to-local = alloca i32, align 4
  %v0_5a5d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5a5d
}

define i32 @function_5a67() local_unnamed_addr {
dec_label_pc_5a67:
  %eax.global-to-local = alloca i32, align 4
  %v0_5a67 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5a67
}

define i32 @function_5afa(i16 %arg1) local_unnamed_addr {
dec_label_pc_5afa:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %v3_5afa = load double, double* bitcast (i32* @eax to double*), align 8
  %v4_5afa = fpext double %v3_5afa to x86_fp80
  %v5_5afa = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_5afa = fadd x86_fp80 %v4_5afa, %v5_5afa
  store x86_fp80 %v6_5afa, x86_fp80* %st0.global-to-local, align 4
  %v0_5afc = load i32, i32* %ebx.global-to-local, align 4
  %v1_5afc = udiv i32 %v0_5afc, 256
  %v2_5afc = trunc i32 %v1_5afc to i8
  %tmp99 = bitcast double %v3_5afa to i64
  %v4_5afc = trunc i64 %tmp99 to i8
  %v5_5afc = add i8 %v2_5afc, %v4_5afc
  %v20_5afc = zext i8 %v5_5afc to i32
  %v22_5afc = mul nuw nsw i32 %v20_5afc, 256
  %v23_5afc = and i32 %v0_5afc, -65281
  %v24_5afc = or i32 %v22_5afc, %v23_5afc
  store i32 %v24_5afc, i32* %ebx.global-to-local, align 4
  %v0_5b00 = load i8, i8* inttoptr (i32 -402653092 to i8*), align 4
  %v0_5b05 = load i32, i32* %ecx.global-to-local, align 8
  %v1_5b05 = add i32 %v0_5b05, 1
  store i32 %v1_5b05, i32* %ecx.global-to-local, align 8
  %v4_5b06 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_5b06 = add i3 %v4_5b06, -1
  store i3 %v5_5b06, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_5b08 = add i8 %v0_5b00, %v5_5afc
  %v20_5b08 = zext i8 %v5_5b08 to i32
  %v22_5b08 = mul nuw nsw i32 %v20_5b08, 256
  %v24_5b08 = or i32 %v22_5b08, %v23_5afc
  store i32 %v24_5b08, i32* %ebx.global-to-local, align 4
  %v0_5b0c = load i32, i32* inttoptr (i32 -402653092 to i32*), align 4
  ret i32 %v0_5b0c

; uselistorder directives
  uselistorder i32 %v0_5afc, { 1, 0 }
}

define i32 @function_5c0f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5c0f:
  %v0_5c0f = load i32, i32* @ebp, align 4
  %v1_5c0f = add i32 %v0_5c0f, -12
  %v2_5c0f = inttoptr i32 %v1_5c0f to i32*
  %v3_5c0f = load i32, i32* %v2_5c0f, align 4
  %v1_5c12 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_5c12 = xor i32 %v1_5c12, %v3_5c0f
  %v3_5c12 = icmp eq i32 %v2_5c12, 0
  store i32 %v2_5c12, i32* @eax, align 8
  br i1 %v3_5c12, label %bb, label %dec_label_pc_5c1b

bb:                                               ; preds = %dec_label_pc_5c0f
  %v1_5c19 = call i32 @function_5c20()
  br label %dec_label_pc_5c1b

dec_label_pc_5c1b:                                ; preds = %bb, %dec_label_pc_5c0f
  %v2_5c19 = phi i32 [ %v1_5c19, %bb ], [ %v2_5c12, %dec_label_pc_5c0f ]
  ret i32 %v2_5c19
}

define i32 @function_5c20() local_unnamed_addr {
dec_label_pc_5c20:
  %v0_5c21 = load i32, i32* @eax, align 8
  ret i32 %v0_5c21
}

define void @_GLOBAL__sub_I__Z13InitRPCMiningv() local_unnamed_addr {
dec_label_pc_5c22:
  call void @__static_initialization_and_destruction_0(i32 1, i32 65535)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_5c53

bb:                                               ; preds = %dec_label_pc_5c22
  %v1_5c51 = call i32 @function_5c58()
  br label %dec_label_pc_5c53

dec_label_pc_5c53:                                ; preds = %bb, %dec_label_pc_5c22
  ret void

; uselistorder directives
  uselistorder i32 65535, { 1, 0 }
}

define i32 @function_5c58() local_unnamed_addr {
dec_label_pc_5c58:
  %v0_5c59 = load i32, i32* @eax, align 8
  ret i32 %v0_5c59
}

define i32 @_ZNSt9exceptionC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5c7c:
  ret i32 %arg1
}

define i32 @_ZN5boost6spirit7classicL5hex_pE() local_unnamed_addr {
dec_label_pc_5cad:
  %eax.global-to-local = alloca i32, align 4
  %v0_5cae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5cae
}

define i32 @_ZSt4__lgi(i32 %arg1) local_unnamed_addr {
dec_label_pc_5caf:
  ret i32 %arg1
}

define i32 @_ZNSt9bad_allocC1Ev() local_unnamed_addr {
dec_label_pc_5cee:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_5d29() local_unnamed_addr {
dec_label_pc_5d29:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5d29 = load i32, i32* %ecx.global-to-local, align 8
  %v1_5d29 = add i32 %v0_5d29, -1
  store i32 %v1_5d29, i32* %ecx.global-to-local, align 8
  %v0_5d2b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5d2b
}

define i32 @_ZnwjPv() local_unnamed_addr {
dec_label_pc_5d2c:
  %eax.global-to-local = alloca i32, align 4
  %v17_5d2f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_5d2f
}

define i32 @function_5d5c() local_unnamed_addr {
dec_label_pc_5d5c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5d5c = load i32, i32* %ecx.global-to-local, align 8
  %v1_5d5c = add i32 %v0_5d5c, -1
  store i32 %v1_5d5c, i32* %ecx.global-to-local, align 8
  %v0_5d5e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5d5e
}

define i32 @_ZdlPvS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5d5f:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_5d88

bb:                                               ; preds = %dec_label_pc_5d5f
  %v3_5d86 = call i32 @function_5d8d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_5d88

dec_label_pc_5d88:                                ; preds = %bb, %dec_label_pc_5d5f
  %v4_5d86 = phi i32 [ %v3_5d86, %bb ], [ 0, %dec_label_pc_5d5f ]
  ret i32 %v4_5d86
}

define i32 @function_5d8d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5d8d:
  %v0_5d8e = load i32, i32* @eax, align 8
  ret i32 %v0_5d8e
}

define i32 @_ZN9base_uintILj256EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5d90:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_5db3

bb:                                               ; preds = %dec_label_pc_5d90
  %v2_5db1 = call i32 @function_5db8(i32 %arg1)
  br label %dec_label_pc_5db3

dec_label_pc_5db3:                                ; preds = %bb, %dec_label_pc_5d90
  %v3_5db1 = phi i32 [ %v2_5db1, %bb ], [ 0, %dec_label_pc_5d90 ]
  ret i32 %v3_5db1
}

define i32 @function_5db8(i32 %arg1) local_unnamed_addr {
dec_label_pc_5db8:
  %v0_5db9 = load i32, i32* @eax, align 8
  ret i32 %v0_5db9
}

define i32 @_ZN7uint256C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5dba:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v0_5dc6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_5dd7 = call i32 @function_bb4a(i32 %arg1)
  %v7_5dfa107 = and i32 %v1_5dd7, -256
  %v8_5dfa108 = or i32 %v7_5dfa107, 1
  store i32 %v8_5dfa108, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_5de5

dec_label_pc_5de5:                                ; preds = %dec_label_pc_5dba, %dec_label_pc_5de5
  %storemerge109 = phi i32 [ 0, %dec_label_pc_5dba ], [ %v4_5df2, %dec_label_pc_5de5 ]
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v2_5deb = mul nuw nsw i32 %storemerge109, 4
  %v3_5deb = add i32 %v2_5deb, %arg1
  %v4_5deb = inttoptr i32 %v3_5deb to i32*
  store i32 0, i32* %v4_5deb, align 4
  %v4_5df2 = add nuw nsw i32 %storemerge109, 1
  %v6_5dfa.pre = load i32, i32* %eax.global-to-local, align 8
  %tmp106 = sub nsw i32 5, %storemerge109
  %v11_5df6 = and i32 %tmp106, %v4_5df2
  %v12_5df6 = icmp slt i32 %v11_5df6, 0
  %v13_5df6 = icmp eq i32 %v4_5df2, 7
  %v14_5df6 = icmp slt i32 %v4_5df2, 7
  %v3_5dfa = icmp ne i1 %v14_5df6, %v12_5df6
  %v4_5dfa = or i1 %v13_5df6, %v3_5dfa
  %v5_5dfa = zext i1 %v4_5dfa to i32
  %v7_5dfa = and i32 %v6_5dfa.pre, -256
  %v8_5dfa = or i32 %v5_5dfa, %v7_5dfa
  store i32 %v8_5dfa, i32* %eax.global-to-local, align 8
  %exitcond = icmp eq i32 %v4_5df2, 8
  br i1 %exitcond, label %dec_label_pc_5e01, label %dec_label_pc_5de5

dec_label_pc_5e01:                                ; preds = %dec_label_pc_5de5
  store i32 %v0_5dc6, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_5e0d

bb:                                               ; preds = %dec_label_pc_5e01
  %v1_5e0b = call i32 @function_5e12()
  store i32 %v1_5e0b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_5e0d

dec_label_pc_5e0d:                                ; preds = %bb, %dec_label_pc_5e01
  %v2_5e0b = phi i32 [ %v1_5e0b, %bb ], [ 0, %dec_label_pc_5e01 ]
  ret i32 %v2_5e0b

; uselistorder directives
  uselistorder i32 %storemerge109, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_5de5, { 1, 0 }
}

define i32 @function_5e12() local_unnamed_addr {
dec_label_pc_5e12:
  %v0_5e13 = load i32, i32* @eax, align 8
  ret i32 %v0_5e13
}

define i32 @_ZN7uint256C1ERK9base_uintILj256EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_5e14:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v0_5e26 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_5e37 = call i32 @function_bba4(i32 %arg1)
  %v7_5e5f109 = and i32 %v1_5e37, -256
  %v8_5e5f110 = or i32 %v7_5e5f109, 1
  store i32 %v8_5e5f110, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_5e45

dec_label_pc_5e45:                                ; preds = %dec_label_pc_5e14, %dec_label_pc_5e45
  %storemerge111 = phi i32 [ 0, %dec_label_pc_5e14 ], [ %v4_5e57, %dec_label_pc_5e45 ]
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v2_5e4b = mul nuw nsw i32 %storemerge111, 4
  %v3_5e4b = add i32 %v2_5e4b, %arg2
  %v4_5e4b = inttoptr i32 %v3_5e4b to i32*
  %v5_5e4b = load i32, i32* %v4_5e4b, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v4_5e54 = add i32 %v2_5e4b, %arg1
  %v5_5e54 = inttoptr i32 %v4_5e54 to i32*
  store i32 %v5_5e4b, i32* %v5_5e54, align 4
  %v4_5e57 = add nuw nsw i32 %storemerge111, 1
  %v6_5e5f.pre = load i32, i32* %eax.global-to-local, align 8
  %tmp108 = sub nsw i32 5, %storemerge111
  %v11_5e5b = and i32 %tmp108, %v4_5e57
  %v12_5e5b = icmp slt i32 %v11_5e5b, 0
  %v13_5e5b = icmp eq i32 %v4_5e57, 7
  %v14_5e5b = icmp slt i32 %v4_5e57, 7
  %v3_5e5f = icmp ne i1 %v14_5e5b, %v12_5e5b
  %v4_5e5f = or i1 %v13_5e5b, %v3_5e5f
  %v5_5e5f = zext i1 %v4_5e5f to i32
  %v7_5e5f = and i32 %v6_5e5f.pre, -256
  %v8_5e5f = or i32 %v5_5e5f, %v7_5e5f
  store i32 %v8_5e5f, i32* %eax.global-to-local, align 8
  %exitcond = icmp eq i32 %v4_5e57, 8
  br i1 %exitcond, label %dec_label_pc_5e66, label %dec_label_pc_5e45

dec_label_pc_5e66:                                ; preds = %dec_label_pc_5e45
  store i32 %v0_5e26, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_5e72

bb:                                               ; preds = %dec_label_pc_5e66
  %v1_5e70 = call i32 @function_5e77()
  store i32 %v1_5e70, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_5e72

dec_label_pc_5e72:                                ; preds = %bb, %dec_label_pc_5e66
  %v2_5e70 = phi i32 [ %v1_5e70, %bb ], [ 0, %dec_label_pc_5e66 ]
  ret i32 %v2_5e70

; uselistorder directives
  uselistorder i32 %storemerge111, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 6, 2, 3, 4, 1, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_5e45, { 1, 0 }
}

define i32 @function_5e77() local_unnamed_addr {
dec_label_pc_5e77:
  %v0_5e78 = load i32, i32* @eax, align 8
  ret i32 %v0_5e78
}

define i32 @_ZN7uint256C1Ey(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5e7a:
  %eax.global-to-local = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 8
  %v0_5e92 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp107, i32* @eax, align 8
  %v1_5ea3 = call i32 @function_bc0a(i32 %tmp107)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v2_5ebf = add i32 %tmp107, 4
  %v3_5ebf = inttoptr i32 %v2_5ebf to i32*
  store i32 %arg3, i32* %v3_5ebf, align 4
  %v6_5ee0111 = load i32, i32* %eax.global-to-local, align 8
  %v7_5ee0112 = and i32 %v6_5ee0111, -256
  %v8_5ee0113 = or i32 %v7_5ee0112, 1
  store i32 %v8_5ee0113, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_5ecb

dec_label_pc_5ecb:                                ; preds = %dec_label_pc_5e7a, %dec_label_pc_5ecb
  %storemerge114 = phi i32 [ 2, %dec_label_pc_5e7a ], [ %v4_5ed8, %dec_label_pc_5ecb ]
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v2_5ed1 = mul nuw nsw i32 %storemerge114, 4
  %v3_5ed1 = add i32 %v2_5ed1, %tmp107
  %v4_5ed1 = inttoptr i32 %v3_5ed1 to i32*
  store i32 0, i32* %v4_5ed1, align 4
  %v4_5ed8 = add nuw nsw i32 %storemerge114, 1
  %tmp110 = sub nsw i32 5, %storemerge114
  %v11_5edc = and i32 %tmp110, %v4_5ed8
  %v12_5edc = icmp slt i32 %v11_5edc, 0
  %v13_5edc = icmp eq i32 %v4_5ed8, 7
  %v14_5edc = icmp slt i32 %v4_5ed8, 7
  %v3_5ee0 = icmp ne i1 %v14_5edc, %v12_5edc
  %v4_5ee0 = or i1 %v13_5edc, %v3_5ee0
  %v5_5ee0 = zext i1 %v4_5ee0 to i32
  %v6_5ee0 = load i32, i32* %eax.global-to-local, align 8
  %v7_5ee0 = and i32 %v6_5ee0, -256
  %v8_5ee0 = or i32 %v5_5ee0, %v7_5ee0
  store i32 %v8_5ee0, i32* %eax.global-to-local, align 8
  %exitcond = icmp eq i32 %v4_5ed8, 8
  br i1 %exitcond, label %dec_label_pc_5ee7, label %dec_label_pc_5ecb

dec_label_pc_5ee7:                                ; preds = %dec_label_pc_5ecb
  store i32 %v0_5e92, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_5ef3

bb:                                               ; preds = %dec_label_pc_5ee7
  %v1_5ef1 = call i32 @function_5ef8()
  store i32 %v1_5ef1, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_5ef3

dec_label_pc_5ef3:                                ; preds = %bb, %dec_label_pc_5ee7
  %v2_5ef1 = phi i32 [ %v1_5ef1, %bb ], [ 0, %dec_label_pc_5ee7 ]
  ret i32 %v2_5ef1

; uselistorder directives
  uselistorder i32 %storemerge114, { 0, 2, 1 }
  uselistorder i32 %tmp107, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6, 7, 8 }
  uselistorder label %dec_label_pc_5ecb, { 1, 0 }
}

define i32 @function_5ef8() local_unnamed_addr {
dec_label_pc_5ef8:
  %v0_5ef9 = load i32, i32* @eax, align 8
  ret i32 %v0_5ef9
}

define i32 @_ZN7uint256aSEy(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5efa:
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_5f34 = add i32 %tmp106, 4
  %v3_5f34 = inttoptr i32 %v2_5f34 to i32*
  store i32 %arg3, i32* %v3_5f34, align 4
  br label %dec_label_pc_5f40

dec_label_pc_5f40:                                ; preds = %dec_label_pc_5efa, %dec_label_pc_5f40
  %storemerge109 = phi i32 [ 2, %dec_label_pc_5efa ], [ %v4_5f4d, %dec_label_pc_5f40 ]
  %v2_5f46 = mul nuw nsw i32 %storemerge109, 4
  %v3_5f46 = add i32 %v2_5f46, %tmp106
  %v4_5f46 = inttoptr i32 %v3_5f46 to i32*
  store i32 0, i32* %v4_5f46, align 4
  %v4_5f4d = add nuw nsw i32 %storemerge109, 1
  store i32 %tmp106, i32* @eax, align 8
  %exitcond = icmp eq i32 %v4_5f4d, 8
  br i1 %exitcond, label %dec_label_pc_5f5c, label %dec_label_pc_5f40

dec_label_pc_5f5c:                                ; preds = %dec_label_pc_5f40
  br i1 true, label %bb, label %dec_label_pc_5f6b

bb:                                               ; preds = %dec_label_pc_5f5c
  %v1_5f69 = call i32 @function_5f70()
  br label %dec_label_pc_5f6b

dec_label_pc_5f6b:                                ; preds = %bb, %dec_label_pc_5f5c
  %v2_5f69 = phi i32 [ %v1_5f69, %bb ], [ %tmp106, %dec_label_pc_5f5c ]
  ret i32 %v2_5f69

; uselistorder directives
  uselistorder i32 %storemerge109, { 1, 0 }
  uselistorder i32 %tmp106, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_5f40, { 1, 0 }
}

define i32 @function_5f70() local_unnamed_addr {
dec_label_pc_5f70:
  %v0_5f71 = load i32, i32* @eax, align 8
  ret i32 %v0_5f71
}

define i32 @_ZeqRK7uint256y(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5f72:
  %stack_var_-48 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  %v2_5f98 = load i32, i32* %arg1, align 4
  store i32 %v2_5f98, i32* %stack_var_-48, align 4
  store i32 %arg3, i32* @edx, align 4
  %v2_5fd5 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_5fd5, i32* @eax, align 8
  %v6_5fdb = call i32 @function_19da2(i32 %v2_5fd5, i32 %arg2, i32 %arg3, i32 %arg2, i32 %arg3, i32 %tmp114)
  store i32 %v6_5fdb, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_5fec

bb:                                               ; preds = %dec_label_pc_5f72
  %v1_5fea = call i32 @function_5ff1()
  br label %dec_label_pc_5fec

dec_label_pc_5fec:                                ; preds = %bb, %dec_label_pc_5f72
  %v2_5fea = phi i32 [ %v1_5fea, %bb ], [ %v6_5fdb, %dec_label_pc_5f72 ]
  ret i32 %v2_5fea

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_5ff1() local_unnamed_addr {
dec_label_pc_5ff1:
  %v0_5ff2 = load i32, i32* @eax, align 8
  ret i32 %v0_5ff2
}

define i32 @_ZmiRK9base_uintILj256EES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_5ff3:
  %stack_var_-48 = alloca i32, align 4
  %v2_601d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_601d, i32* @eax, align 8
  %v2_6023 = call i32 @function_be07(i32 %v2_601d, i32 %arg2)
  %v2_6035 = call i32 @function_19f63(i32 %v2_601d, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  %v2_6044 = call i32 @function_be07(i32 %arg1, i32 %v2_6035)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_6058

bb:                                               ; preds = %dec_label_pc_5ff3
  %v1_6056 = call i32 @function_605d()
  br label %dec_label_pc_6058

dec_label_pc_6058:                                ; preds = %bb, %dec_label_pc_5ff3
  %v2_6056 = phi i32 [ %v1_6056, %bb ], [ %arg1, %dec_label_pc_5ff3 ]
  ret i32 %v2_6056

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_be07, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_605d() local_unnamed_addr {
dec_label_pc_605d:
  %v0_605e = load i32, i32* @eax, align 8
  ret i32 %v0_605e
}

define i32 @_ZltRK7uint256S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6061:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v1_6081 = inttoptr i32 %arg2 to i32*
  %v2_6081 = load i32, i32* %v1_6081, align 4
  store i32 %v2_6081, i32* %stack_var_-48, align 4
  %v2_60b3 = load i32, i32* %arg1, align 4
  store i32 %v2_60b3, i32* %stack_var_-80, align 4
  %v4_60e5 = ptrtoint i32* %stack_var_-48 to i32
  %v2_60e9 = ptrtoint i32* %stack_var_-80 to i32
  %v2_60ef = call i32 @function_1a02b(i32 %v2_60e9, i32 %v4_60e5)
  store i32 %v2_60ef, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_6100

bb:                                               ; preds = %dec_label_pc_6061
  %v1_60fe = call i32 @function_6105()
  br label %dec_label_pc_6100

dec_label_pc_6100:                                ; preds = %bb, %dec_label_pc_6061
  %v2_60fe = phi i32 [ %v1_60fe, %bb ], [ %v2_60ef, %dec_label_pc_6061 ]
  ret i32 %v2_60fe
}

define i32 @function_6105() local_unnamed_addr {
dec_label_pc_6105:
  %v0_6106 = load i32, i32* @eax, align 8
  ret i32 %v0_6106
}

define i32 @_ZmiRK7uint256S1_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_6107:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v1_612d = inttoptr i32 %arg3 to i32*
  %v2_612d = load i32, i32* %v1_612d, align 4
  store i32 %v2_612d, i32* %stack_var_-48, align 4
  %v2_615f = load i32, i32* %arg2, align 4
  store i32 %v2_615f, i32* %stack_var_-80, align 4
  store i32 %arg1, i32* @eax, align 8
  %v4_6194 = ptrtoint i32* %stack_var_-48 to i32
  %v2_6198 = ptrtoint i32* %stack_var_-80 to i32
  %v3_61a2 = call i32 @function_c0fa(i32 %arg1, i32 %v2_6198, i32 %v4_6194)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_61b9

bb:                                               ; preds = %dec_label_pc_6107
  %v1_61b7 = call i32 @function_61be()
  br label %dec_label_pc_61b9

dec_label_pc_61b9:                                ; preds = %bb, %dec_label_pc_6107
  %v2_61b7 = phi i32 [ %v1_61b7, %bb ], [ %arg1, %dec_label_pc_6107 ]
  ret i32 %v2_61b7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_61be() local_unnamed_addr {
dec_label_pc_61be:
  %v0_61bf = load i32, i32* @eax, align 8
  ret i32 %v0_61bf
}

define i32 @_ZN5boost16thread_exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_61c2:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_61df = call i32 @function_be3e(i32 %tmp100)
  store i32 ptrtoint (%vtable_3fc0c_type* @global_var_3fc0c.2803 to i32), i32* %arg1, align 4
  %v1_61f0 = add i32 %tmp100, 4
  %v2_61f0 = inttoptr i32 %v1_61f0 to i32*
  store i32 0, i32* %v2_61f0, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_6203

bb:                                               ; preds = %dec_label_pc_61c2
  %v1_6201 = call i32 @function_6208()
  br label %dec_label_pc_6203

dec_label_pc_6203:                                ; preds = %bb, %dec_label_pc_61c2
  %v2_6201 = phi i32 [ %v1_6201, %bb ], [ 0, %dec_label_pc_61c2 ]
  ret i32 %v2_6201

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_6208() local_unnamed_addr {
dec_label_pc_6208:
  %v0_6209 = load i32, i32* @eax, align 8
  ret i32 %v0_6209
}

define i32 @_ZN5boost16thread_exceptionD1Ev(i32* %arg1) {
dec_label_pc_620a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fc0c_type* @global_var_3fc0c.2803 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_624b() local_unnamed_addr {
dec_label_pc_624b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_624b = load i32, i32* %ebx.global-to-local, align 4
  %v1_624b = add i32 %v0_624b, 862319685
  %v2_624b = inttoptr i32 %v1_624b to i32*
  %v3_624b = load i32, i32* %v2_624b, align 4
  %v4_624b = add i32 %v3_624b, -1
  store i32 %v4_624b, i32* %v2_624b, align 4
  %v0_6251 = load i32, i32* %eax.global-to-local, align 8
  %v1_6251 = add i32 %v0_6251, 20
  store i32 %v1_6251, i32* %eax.global-to-local, align 8
  ret i32 %v1_6251
}

define i32 @_ZN5boost16thread_exceptionD0Ev(i32 %arg1) {
dec_label_pc_6260:
  store i32 %arg1, i32* @eax, align 8
  %v1_627d = call i32 @function_c46a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_629d() local_unnamed_addr {
dec_label_pc_629d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_629d = load i32, i32* %ecx.global-to-local, align 8
  %v1_629d = add i32 %v0_629d, -1
  store i32 %v1_629d, i32* %ecx.global-to-local, align 8
  %v0_629f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_629f
}

define i32 @_ZN5boost10lock_errorC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_62a0:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_62bd = call i32 @function_c462(i32 %tmp100)
  store i32 ptrtoint (%vtable_3fbf4_type* @global_var_3fbf4.2804 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_62d7

bb:                                               ; preds = %dec_label_pc_62a0
  %v1_62d5 = call i32 @function_62dc()
  br label %dec_label_pc_62d7

dec_label_pc_62d7:                                ; preds = %bb, %dec_label_pc_62a0
  %v2_62d5 = phi i32 [ %v1_62d5, %bb ], [ 0, %dec_label_pc_62a0 ]
  ret i32 %v2_62d5

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_62dc() local_unnamed_addr {
dec_label_pc_62dc:
  %v0_62dd = load i32, i32* @eax, align 8
  ret i32 %v0_62dd
}

define i32 @_ZN5boost10lock_errorD1Ev(i32* %arg1) {
dec_label_pc_62de:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fbf4_type* @global_var_3fbf4.2804 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_6304 = call i32 @function_c4e8(i32 %tmp99)
  %v1_6313 = call i32 @function_6320()
  ret i32 %tmp99
}

define i32 @function_6320() local_unnamed_addr {
dec_label_pc_6320:
  %v0_6320 = load i32, i32* @ebp, align 4
  %v1_6320 = add i32 %v0_6320, -12
  %v2_6320 = inttoptr i32 %v1_6320 to i32*
  %v3_6320 = load i32, i32* %v2_6320, align 4
  %v1_6323 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6323 = xor i32 %v1_6323, %v3_6320
  %v3_6323 = icmp eq i32 %v2_6323, 0
  store i32 %v2_6323, i32* @eax, align 8
  br i1 %v3_6323, label %bb, label %dec_label_pc_632c

bb:                                               ; preds = %dec_label_pc_6320
  %v1_632a = call i32 @function_6331()
  br label %dec_label_pc_632c

dec_label_pc_632c:                                ; preds = %bb, %dec_label_pc_6320
  %v2_632a = phi i32 [ %v1_632a, %bb ], [ %v2_6323, %dec_label_pc_6320 ]
  ret i32 %v2_632a
}

define i32 @function_6331() local_unnamed_addr {
dec_label_pc_6331:
  %v0_6332 = load i32, i32* @eax, align 8
  ret i32 %v0_6332
}

define i32 @_ZN5boost10lock_errorD0Ev(i32 %arg1) {
dec_label_pc_6334:
  store i32 %arg1, i32* @eax, align 8
  %v1_6351 = call i32 @function_c612(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_6371() local_unnamed_addr {
dec_label_pc_6371:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6371 = load i32, i32* %ecx.global-to-local, align 8
  %v1_6371 = add i32 %v0_6371, -1
  store i32 %v1_6371, i32* %ecx.global-to-local, align 8
  %v0_6373 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6373
}

define i32 @function_bb4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_bb4a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_bba4(i32 %arg1) local_unnamed_addr {
dec_label_pc_bba4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_bc0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_bc0a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_be07(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_be07:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_be3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_be3e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_c0fa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c0fa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_c462(i32 %arg1) local_unnamed_addr {
dec_label_pc_c462:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_c46a(i32 %arg1) local_unnamed_addr {
dec_label_pc_c46a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_c4e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_c4e8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_c612(i32 %arg1) local_unnamed_addr {
dec_label_pc_c612:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost10lock_error4whatEv(i32 %arg1) {
dec_label_pc_e5b4:
  store i32 ptrtoint ([18 x i8]* @global_var_6374.2805 to i32), i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_e5dc

bb:                                               ; preds = %dec_label_pc_e5b4
  %v2_e5da = call i32 @function_e5e1(i32 %arg1)
  br label %dec_label_pc_e5dc

dec_label_pc_e5dc:                                ; preds = %bb, %dec_label_pc_e5b4
  %v3_e5da = phi i32 [ %v2_e5da, %bb ], [ ptrtoint ([18 x i8]* @global_var_6374.2805 to i32), %dec_label_pc_e5b4 ]
  ret i32 %v3_e5da
}

define i32 @function_e5e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_e5e1:
  %v0_e5e2 = load i32, i32* @eax, align 8
  ret i32 %v0_e5e2
}

define i32 @_ZStorSt12_Ios_IostateS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e5e3:
  %v2_e606 = or i32 %arg2, %arg1
  store i32 %v2_e606, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_e614

bb:                                               ; preds = %dec_label_pc_e5e3
  %v3_e612 = call i32 @function_e619(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_e614

dec_label_pc_e614:                                ; preds = %bb, %dec_label_pc_e5e3
  %v4_e612 = phi i32 [ %v3_e612, %bb ], [ %v2_e606, %dec_label_pc_e5e3 ]
  ret i32 %v4_e612

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e619(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e619:
  %v0_e61a = load i32, i32* @eax, align 8
  ret i32 %v0_e61a
}

define i32 @_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e61c:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_e64d

bb:                                               ; preds = %dec_label_pc_e61c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_e64b = call i32 @function_e652(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_e64d

dec_label_pc_e64d:                                ; preds = %bb, %dec_label_pc_e61c
  %v4_e64b = phi i32 [ %v3_e64b, %bb ], [ 0, %dec_label_pc_e61c ]
  ret i32 %v4_e64b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e652(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e652:
  %v0_e653 = load i32, i32* @eax, align 8
  ret i32 %v0_e653
}

define i32 @_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e654:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_e685

bb:                                               ; preds = %dec_label_pc_e654
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_e683 = call i32 @function_e68a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_e685

dec_label_pc_e685:                                ; preds = %bb, %dec_label_pc_e654
  %v4_e683 = phi i32 [ %v3_e683, %bb ], [ 0, %dec_label_pc_e654 ]
  ret i32 %v4_e683

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e68a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e68a:
  %v0_e68b = load i32, i32* @eax, align 8
  ret i32 %v0_e68b
}

define i32 @_ZN5boost10error_infoINS_11throw_line_EiEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e68c:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_e6bd

bb:                                               ; preds = %dec_label_pc_e68c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_e6bb = call i32 @function_e6c2(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_e6bd

dec_label_pc_e6bd:                                ; preds = %bb, %dec_label_pc_e68c
  %v4_e6bb = phi i32 [ %v3_e6bb, %bb ], [ 0, %dec_label_pc_e68c ]
  ret i32 %v4_e6bb

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e6c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e6c2:
  %v0_e6c3 = load i32, i32* @eax, align 8
  ret i32 %v0_e6c3
}

define i32 @_ZN5boost9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e6c4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_3fbe4.2806 to i32), i32* %arg1, align 4
  %v1_e6e7 = add i32 %tmp100, 4
  store i32 %v1_e6e7, i32* %stack_var_-60, align 4
  %v1_e6f5 = add i32 %tmp100, 8
  %v2_e6f5 = inttoptr i32 %v1_e6f5 to i32*
  store i32 0, i32* %v2_e6f5, align 4
  %v1_e6ff = add i32 %tmp100, 12
  %v2_e6ff = inttoptr i32 %v1_e6ff to i32*
  store i32 0, i32* %v2_e6ff, align 4
  %v1_e709 = add i32 %tmp100, 16
  %v2_e709 = inttoptr i32 %v1_e709 to i32*
  store i32 -1, i32* %v2_e709, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_e71c

bb:                                               ; preds = %dec_label_pc_e6c4
  %v1_e71a = load i32, i32* %stack_var_-60, align 4
  %v2_e71a = call i32 @function_e721(i32 %v1_e71a)
  br label %dec_label_pc_e71c

dec_label_pc_e71c:                                ; preds = %bb, %dec_label_pc_e6c4
  %v3_e71a = phi i32 [ %v2_e71a, %bb ], [ 0, %dec_label_pc_e6c4 ]
  ret i32 %v3_e71a

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_e721(i32 %arg1) local_unnamed_addr {
dec_label_pc_e721:
  %v0_e722 = load i32, i32* @eax, align 8
  ret i32 %v0_e722
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e724:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_3fbe4.2806 to i32), i32* %arg1, align 4
  %v1_e747 = add i32 %tmp99, 4
  store i32 %v1_e747, i32* @eax, align 8
  %v1_e74d = call i32 @function_227aa(i32 %v1_e747)
  %v1_e75c = call i32 @function_e780()
  ret i32 %tmp99
}

define i32 @function_e769() local_unnamed_addr {
dec_label_pc_e769:
  %v0_e769 = call i32 @function_e780()
  ret i32 %v0_e769

; uselistorder directives
  uselistorder i32 ()* @function_e780, { 1, 0 }
}

define i32 @function_e780() local_unnamed_addr {
dec_label_pc_e780:
  %v0_e780 = load i32, i32* @ebp, align 4
  %v1_e780 = add i32 %v0_e780, -12
  %v2_e780 = inttoptr i32 %v1_e780 to i32*
  %v3_e780 = load i32, i32* %v2_e780, align 4
  %v1_e783 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_e783 = xor i32 %v1_e783, %v3_e780
  %v3_e783 = icmp eq i32 %v2_e783, 0
  store i32 %v2_e783, i32* @eax, align 8
  br i1 %v3_e783, label %bb, label %dec_label_pc_e78c

bb:                                               ; preds = %dec_label_pc_e780
  %v1_e78a = call i32 @function_e791()
  br label %dec_label_pc_e78c

dec_label_pc_e78c:                                ; preds = %bb, %dec_label_pc_e780
  %v2_e78a = phi i32 [ %v1_e78a, %bb ], [ %v2_e783, %dec_label_pc_e780 ]
  ret i32 %v2_e78a
}

define i32 @function_e791() local_unnamed_addr {
dec_label_pc_e791:
  %v0_e792 = load i32, i32* @eax, align 8
  ret i32 %v0_e792
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff5c:
  %v1_ff79 = call i32 @function_1e680(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_ff99() local_unnamed_addr {
dec_label_pc_ff99:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ff99 = load i32, i32* %ecx.global-to-local, align 8
  %v1_ff99 = add i32 %v0_ff99, -1
  store i32 %v1_ff99, i32* %ecx.global-to-local, align 8
  %v0_ff9b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_ff9b
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_ff9c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_3fbcc.2807 to i32), i32* %arg1, align 4
  %v2_ffc6 = call i32 @function_ffd3(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_ffd3(i32 %arg1) local_unnamed_addr {
dec_label_pc_ffd3:
  %v0_ffd3 = load i32, i32* @ebp, align 4
  %v1_ffd3 = add i32 %v0_ffd3, -12
  %v2_ffd3 = inttoptr i32 %v1_ffd3 to i32*
  %v3_ffd3 = load i32, i32* %v2_ffd3, align 4
  %v1_ffd6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ffd6 = xor i32 %v1_ffd6, %v3_ffd3
  %v3_ffd6 = icmp eq i32 %v2_ffd6, 0
  store i32 %v2_ffd6, i32* @eax, align 8
  br i1 %v3_ffd6, label %bb, label %dec_label_pc_ffdf

bb:                                               ; preds = %dec_label_pc_ffd3
  %v1_ffdd = call i32 @function_ffe4()
  br label %dec_label_pc_ffdf

dec_label_pc_ffdf:                                ; preds = %bb, %dec_label_pc_ffd3
  %v2_ffdd = phi i32 [ %v1_ffdd, %bb ], [ %v2_ffd6, %dec_label_pc_ffd3 ]
  ret i32 %v2_ffdd
}

define i32 @function_ffe4() local_unnamed_addr {
dec_label_pc_ffe4:
  %v0_ffe5 = load i32, i32* @eax, align 8
  ret i32 %v0_ffe5
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ffe6:
  %v1_10003 = call i32 @function_1ff82(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_10012() local_unnamed_addr {
dec_label_pc_10012:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10012 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10012 = add i32 %v0_10012, 862319685
  %v2_10012 = inttoptr i32 %v1_10012 to i32*
  %v3_10012 = load i32, i32* %v2_10012, align 4
  %v4_10012 = add i32 %v3_10012, -1
  store i32 %v4_10012, i32* %v2_10012, align 4
  %v0_10018 = load i32, i32* %eax.global-to-local, align 8
  %v1_10018 = add i32 %v0_10018, 20
  store i32 %v1_10018, i32* %eax.global-to-local, align 8
  ret i32 %v1_10018
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10026:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v2_10044 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_10044, i32* @eax, align 8
  store i32 %v2_10044, i32* %stack_var_-60, align 4
  %v1_1004a = call i32 @function_24078(i32 %v2_10044)
  %v1_10052 = add i32 %arg2, 4
  store i32 %v1_10052, i32* %stack_var_-60, align 4
  %v1_10058 = call i32 @function_240e2(i32 %v1_10052)
  %v10_10060 = icmp eq i32 %v1_10058, 0
  br i1 %v10_10060, label %dec_label_pc_1009f, label %dec_label_pc_10066

dec_label_pc_10066:                               ; preds = %dec_label_pc_10026
  %v2_10070 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_10058, i32* %edx.global-to-local, align 4
  store i32 %v2_10070, i32* %stack_var_-60, align 4
  store i32 %v2_10044, i32* %stack_var_-64, align 4
  %v3_1008f = call i32 @function_24112(i32 %v2_10044, i32 %v2_10070, i32 %v1_10058)
  store i32 %v2_10070, i32* %stack_var_-64, align 4
  %v1_1009a = call i32 @function_240ac(i32 %v2_10070)
  br label %dec_label_pc_1009f

dec_label_pc_1009f:                               ; preds = %dec_label_pc_10066, %dec_label_pc_10026
  %stack_var_-56.0 = phi i32 [ %tmp97, %dec_label_pc_10026 ], [ %v1_10058, %dec_label_pc_10066 ]
  %v1_100a2 = add i32 %arg2, 12
  %v2_100a2 = inttoptr i32 %v1_100a2 to i32*
  %v3_100a2 = load i32, i32* %v2_100a2, align 4
  store i32 %v3_100a2, i32* %edx.global-to-local, align 4
  %v2_100a8 = add i32 %arg1, 12
  %v3_100a8 = inttoptr i32 %v2_100a8 to i32*
  store i32 %v3_100a2, i32* %v3_100a8, align 4
  %v1_100ae = add i32 %arg2, 16
  %v2_100ae = inttoptr i32 %v1_100ae to i32*
  %v3_100ae = load i32, i32* %v2_100ae, align 4
  store i32 %v3_100ae, i32* %edx.global-to-local, align 4
  %v2_100b4 = add i32 %arg1, 16
  %v3_100b4 = inttoptr i32 %v2_100b4 to i32*
  store i32 %v3_100ae, i32* %v3_100b4, align 4
  %v1_100ba = add i32 %arg2, 8
  %v2_100ba = inttoptr i32 %v1_100ba to i32*
  %v3_100ba = load i32, i32* %v2_100ba, align 4
  %v2_100c0 = add i32 %arg1, 8
  %v3_100c0 = inttoptr i32 %v2_100c0 to i32*
  store i32 %v3_100ba, i32* %v3_100c0, align 4
  %v1_100c6 = add i32 %arg1, 4
  store i32 %v1_100c6, i32* %edx.global-to-local, align 4
  %v1_100cc = load i32, i32* @esp, align 4
  %v2_100cc = add i32 %v1_100cc, 4
  %v3_100cc = inttoptr i32 %v2_100cc to i32*
  store i32 %v2_10044, i32* %v3_100cc, align 4
  %v0_100d0 = load i32, i32* %edx.global-to-local, align 4
  %v1_100d0 = load i32, i32* @esp, align 4
  %v2_100d0 = inttoptr i32 %v1_100d0 to i32*
  store i32 %v0_100d0, i32* %v2_100d0, align 4
  %v0_100d3 = load i32, i32* %stack_var_-64, align 4
  %v1_100d3 = load i32, i32* %stack_var_-60, align 4
  %v3_100d3 = call i32 @function_24112(i32 %v0_100d3, i32 %v1_100d3, i32 %stack_var_-56.0)
  %v1_100db = load i32, i32* @esp, align 4
  %v2_100db = inttoptr i32 %v1_100db to i32*
  store i32 %v2_10044, i32* %v2_100db, align 4
  %v0_100de = load i32, i32* %stack_var_-64, align 4
  %v1_100de = call i32 @function_240ac(i32 %v0_100de)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_100ef

bb:                                               ; preds = %dec_label_pc_1009f
  %v1_100ed = call i32 @function_1011c()
  store i32 %v1_100ed, i32* @eax, align 8
  br label %dec_label_pc_100ef

dec_label_pc_100ef:                               ; preds = %bb, %dec_label_pc_1009f
  %v0_100ef = call i32 @function_10117()
  ret i32 %v0_100ef

; uselistorder directives
  uselistorder i32 %v2_10070, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10044, { 2, 3, 1, 0, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32)* @function_24112, { 1, 0 }
}

define i32 @function_100f1() local_unnamed_addr {
dec_label_pc_100f1:
  %eax.global-to-local = alloca i32, align 4
  %v0_100f1 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_100f1, i32* @ebx, align 4
  %v0_100f3 = load i32, i32* @ebp, align 4
  %v1_100f3 = add i32 %v0_100f3, -20
  store i32 %v1_100f3, i32* %eax.global-to-local, align 8
  %v1_100f9 = call i32 @function_240ac(i32 %v1_100f3)
  store i32 %v1_100f9, i32* %eax.global-to-local, align 8
  %v0_100fe = call i32 @function_10102()
  store i32 %v0_100fe, i32* %eax.global-to-local, align 8
  ret i32 %v0_100fe
}

define i32 @function_10100() local_unnamed_addr {
dec_label_pc_10100:
  %eax.global-to-local = alloca i32, align 4
  %v0_10100 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10100
}

define i32 @function_10102() local_unnamed_addr {
dec_label_pc_10102:
  %v0_10102 = load i32, i32* @ebp, align 4
  %v1_10102 = add i32 %v0_10102, -24
  %v1_10108 = call i32 @function_240ac(i32 %v1_10102)
  %v0_1010d = load i32, i32* @ebx, align 4
  ret i32 %v0_1010d

; uselistorder directives
  uselistorder i32 (i32)* @function_240ac, { 3, 2, 1, 0 }
}

define i32 @function_10117() local_unnamed_addr {
dec_label_pc_10117:
  %v0_10117 = load i32, i32* @eax, align 8
  ret i32 %v0_10117
}

define i32 @function_1011c() local_unnamed_addr {
dec_label_pc_1011c:
  %v0_10120 = load i32, i32* @eax, align 8
  ret i32 %v0_10120
}

define i32 @_ZN5boost36throw_exception_assert_compatibilityERKSt9exception(i32 %arg1) local_unnamed_addr {
dec_label_pc_10121:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10144

bb:                                               ; preds = %dec_label_pc_10121
  %v2_10142 = call i32 @function_10149(i32 %arg1)
  br label %dec_label_pc_10144

dec_label_pc_10144:                               ; preds = %bb, %dec_label_pc_10121
  %v3_10142 = phi i32 [ %v2_10142, %bb ], [ 0, %dec_label_pc_10121 ]
  ret i32 %v3_10142
}

define i32 @function_10149(i32 %arg1) local_unnamed_addr {
dec_label_pc_10149:
  %v0_1014a = load i32, i32* @eax, align 8
  ret i32 %v0_1014a
}

define i32 @_ZN5boost6detail23atomic_exchange_and_addEPii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1014b:
  %v2_10174 = load i32, i32* %arg1, align 4
  %v4_10174 = add i32 %v2_10174, %arg2
  store i32 %v4_10174, i32* %arg1, align 4
  store i32 %v2_10174, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1018a

bb:                                               ; preds = %dec_label_pc_1014b
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_10188 = call i32 @function_1018f(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_1018a

dec_label_pc_1018a:                               ; preds = %bb, %dec_label_pc_1014b
  %v4_10188 = phi i32 [ %v3_10188, %bb ], [ %v2_10174, %dec_label_pc_1014b ]
  ret i32 %v4_10188

; uselistorder directives
  uselistorder i32 %v2_10174, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_1018f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1018f:
  %v0_10194 = load i32, i32* @eax, align 8
  ret i32 %v0_10194
}

define i32 @_ZN5boost6detail16atomic_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_10195:
  %v2_101b2 = load i32, i32* %arg1, align 4
  %v3_101b2 = add i32 %v2_101b2, 1
  store i32 %v3_101b2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_101c1

bb:                                               ; preds = %dec_label_pc_10195
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_101bf = call i32 @function_101c6(i32 %tmp100)
  br label %dec_label_pc_101c1

dec_label_pc_101c1:                               ; preds = %bb, %dec_label_pc_10195
  %v3_101bf = phi i32 [ %v2_101bf, %bb ], [ 0, %dec_label_pc_10195 ]
  ret i32 %v3_101bf

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_101c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_101c6:
  %v0_101c7 = load i32, i32* @eax, align 8
  ret i32 %v0_101c7
}

define i32 @_ZN5boost6detail15sp_counted_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_101c8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_3fbac.2808 to i32), i32* %arg1, align 4
  %v1_101eb = add i32 %tmp100, 4
  %v2_101eb = inttoptr i32 %v1_101eb to i32*
  store i32 1, i32* %v2_101eb, align 4
  %v1_101f5 = add i32 %tmp100, 8
  %v2_101f5 = inttoptr i32 %v1_101f5 to i32*
  store i32 1, i32* %v2_101f5, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10208

bb:                                               ; preds = %dec_label_pc_101c8
  %v2_10206 = call i32 @function_1020d(i32 %tmp100)
  br label %dec_label_pc_10208

dec_label_pc_10208:                               ; preds = %bb, %dec_label_pc_101c8
  %v3_10206 = phi i32 [ %v2_10206, %bb ], [ 0, %dec_label_pc_101c8 ]
  ret i32 %v3_10206
}

define i32 @function_1020d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1020d:
  %v0_1020e = load i32, i32* @eax, align 8
  ret i32 %v0_1020e
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10210:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_3fbac.2808 to i32), i32* %arg1, align 4
  %v2_1023a = call i32 @function_10247(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_10247(i32 %arg1) local_unnamed_addr {
dec_label_pc_10247:
  %v0_10247 = load i32, i32* @ebp, align 4
  %v1_10247 = add i32 %v0_10247, -12
  %v2_10247 = inttoptr i32 %v1_10247 to i32*
  %v3_10247 = load i32, i32* %v2_10247, align 4
  %v1_1024a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1024a = xor i32 %v1_1024a, %v3_10247
  %v3_1024a = icmp eq i32 %v2_1024a, 0
  store i32 %v2_1024a, i32* @eax, align 8
  br i1 %v3_1024a, label %bb, label %dec_label_pc_10253

bb:                                               ; preds = %dec_label_pc_10247
  %v1_10251 = call i32 @function_10258()
  br label %dec_label_pc_10253

dec_label_pc_10253:                               ; preds = %bb, %dec_label_pc_10247
  %v2_10251 = phi i32 [ %v1_10251, %bb ], [ %v2_1024a, %dec_label_pc_10247 ]
  ret i32 %v2_10251
}

define i32 @function_10258() local_unnamed_addr {
dec_label_pc_10258:
  %v0_10259 = load i32, i32* @eax, align 8
  ret i32 %v0_10259
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1025a:
  store i32 %arg1, i32* @eax, align 8
  %v1_10277 = call i32 @function_2046a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_10297() local_unnamed_addr {
dec_label_pc_10297:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10297 = load i32, i32* %ecx.global-to-local, align 8
  %v1_10297 = add i32 %v0_10297, -1
  store i32 %v1_10297, i32* %ecx.global-to-local, align 8
  %v0_10299 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10299
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_1029a:
  %v10_102b1 = icmp eq i32* %arg1, null
  br i1 %v10_102b1, label %dec_label_pc_102c9, label %dec_label_pc_102b7

dec_label_pc_102b7:                               ; preds = %dec_label_pc_1029a
  br label %dec_label_pc_102c9

dec_label_pc_102c9:                               ; preds = %dec_label_pc_102b7, %dec_label_pc_1029a
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_102d5

bb:                                               ; preds = %dec_label_pc_102c9
  %v1_102d3 = call i32 @function_102da()
  br label %dec_label_pc_102d5

dec_label_pc_102d5:                               ; preds = %bb, %dec_label_pc_102c9
  %v2_102d3 = phi i32 [ %v1_102d3, %bb ], [ 0, %dec_label_pc_102c9 ]
  ret i32 %v2_102d3
}

define i32 @function_102da() local_unnamed_addr {
dec_label_pc_102da:
  %v0_102db = load i32, i32* @eax, align 8
  ret i32 %v0_102db
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_copyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_102dc:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1030d

bb:                                               ; preds = %dec_label_pc_102dc
  %v1_102f6 = add i32 %arg1, 4
  %v2_1030b = call i32 @function_10312(i32 %v1_102f6)
  br label %dec_label_pc_1030d

dec_label_pc_1030d:                               ; preds = %bb, %dec_label_pc_102dc
  %v3_1030b = phi i32 [ %v2_1030b, %bb ], [ 0, %dec_label_pc_102dc ]
  ret i32 %v3_1030b
}

define i32 @function_10312(i32 %arg1) local_unnamed_addr {
dec_label_pc_10312:
  %v0_10313 = load i32, i32* @eax, align 8
  ret i32 %v0_10313
}

define i32 @_ZN5boost6detail15sp_counted_base7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10314:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1032e = add i32 %tmp102, 4
  store i32 %v1_1032e, i32* @eax, align 8
  %v2_1033c = call i32 @function_2045f(i32 %v1_1032e, i32 -1)
  %v10_10341 = icmp eq i32 %v2_1033c, 1
  %v5_10347 = icmp eq i1 %v10_10341, false
  br i1 %v5_10347, label %dec_label_pc_10368, label %dec_label_pc_1034b

dec_label_pc_1034b:                               ; preds = %dec_label_pc_10314
  store i32 %tmp102, i32* @eax, align 8
  %v1_10363 = call i32 @function_20690(i32 %tmp102)
  br label %dec_label_pc_10368

dec_label_pc_10368:                               ; preds = %dec_label_pc_1034b, %dec_label_pc_10314
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10374

bb:                                               ; preds = %dec_label_pc_10368
  %v1_10372 = call i32 @function_10379()
  br label %dec_label_pc_10374

dec_label_pc_10374:                               ; preds = %bb, %dec_label_pc_10368
  %v2_10372 = phi i32 [ %v1_10372, %bb ], [ 0, %dec_label_pc_10368 ]
  ret i32 %v2_10372

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0, 2 }
}

define i32 @function_10379() local_unnamed_addr {
dec_label_pc_10379:
  %v0_1037a = load i32, i32* @eax, align 8
  ret i32 %v0_1037a
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1037c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_10396 = add i32 %tmp102, 8
  store i32 %v1_10396, i32* @eax, align 8
  %v2_103a4 = call i32 @function_204c7(i32 %v1_10396, i32 -1)
  %v10_103a9 = icmp eq i32 %v2_103a4, 1
  %v5_103af = icmp eq i1 %v10_103a9, false
  br i1 %v5_103af, label %dec_label_pc_103c5, label %dec_label_pc_103b3

dec_label_pc_103b3:                               ; preds = %dec_label_pc_1037c
  br label %dec_label_pc_103c5

dec_label_pc_103c5:                               ; preds = %dec_label_pc_103b3, %dec_label_pc_1037c
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_103d1

bb:                                               ; preds = %dec_label_pc_103c5
  %v1_103cf = call i32 @function_103d6()
  br label %dec_label_pc_103d1

dec_label_pc_103d1:                               ; preds = %bb, %dec_label_pc_103c5
  %v2_103cf = phi i32 [ %v1_103cf, %bb ], [ 0, %dec_label_pc_103c5 ]
  ret i32 %v2_103cf
}

define i32 @function_103d6() local_unnamed_addr {
dec_label_pc_103d6:
  %v0_103d7 = load i32, i32* @eax, align 8
  ret i32 %v0_103d7
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_103d8:
  %v2_103f2 = load i32, i32* %arg1, align 4
  %v1_103f4 = icmp eq i32 %v2_103f2, 0
  br i1 %v1_103f4, label %dec_label_pc_10405, label %dec_label_pc_103f8

dec_label_pc_103f8:                               ; preds = %dec_label_pc_103d8
  %v2_103fb = load i32, i32* %arg1, align 4
  store i32 %v2_103fb, i32* @eax, align 8
  %v1_10400 = call i32 @function_206ec(i32 %v2_103fb)
  br label %dec_label_pc_10405

dec_label_pc_10405:                               ; preds = %dec_label_pc_103f8, %dec_label_pc_103d8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10411

bb:                                               ; preds = %dec_label_pc_10405
  %v1_1040f = call i32 @function_10416()
  br label %dec_label_pc_10411

dec_label_pc_10411:                               ; preds = %bb, %dec_label_pc_10405
  %v2_1040f = phi i32 [ %v1_1040f, %bb ], [ 0, %dec_label_pc_10405 ]
  ret i32 %v2_1040f
}

define i32 @function_10416() local_unnamed_addr {
dec_label_pc_10416:
  %v0_10417 = load i32, i32* @eax, align 8
  ret i32 %v0_10417
}

define i32 @_ZN5boost6detail12shared_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10418:
  %ebp.global-to-local = alloca i32, align 4
  %v0_10418 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10438 = inttoptr i32 %arg2 to i32*
  %v2_10438 = load i32, i32* %v1_10438, align 4
  store i32 %v2_10438, i32* %arg1, align 4
  %v1_10444 = icmp eq i32 %v2_10438, 0
  br i1 %v1_10444, label %dec_label_pc_10455, label %dec_label_pc_10448

dec_label_pc_10448:                               ; preds = %dec_label_pc_10418
  br label %dec_label_pc_10455

dec_label_pc_10455:                               ; preds = %dec_label_pc_10448, %dec_label_pc_10418
  store i32 %v0_10418, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisEz() local_unnamed_addr {
dec_label_pc_10468:
  %v0_1046e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10485

bb:                                               ; preds = %dec_label_pc_10468
  %v2_10483 = call i32 @function_1048a(i32 %v0_1046e)
  br label %dec_label_pc_10485

dec_label_pc_10485:                               ; preds = %bb, %dec_label_pc_10468
  %v3_10483 = phi i32 [ %v2_10483, %bb ], [ 0, %dec_label_pc_10468 ]
  ret i32 %v3_10483
}

define i32 @function_1048a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1048a:
  %v0_1048b = load i32, i32* @eax, align 8
  ret i32 %v0_1048b
}

define i32 @_ZN5boost12noncopyable_11noncopyableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1048c:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_104af

bb:                                               ; preds = %dec_label_pc_1048c
  %v2_104ad = call i32 @function_104b4(i32 %arg1)
  br label %dec_label_pc_104af

dec_label_pc_104af:                               ; preds = %bb, %dec_label_pc_1048c
  %v3_104ad = phi i32 [ %v2_104ad, %bb ], [ 0, %dec_label_pc_1048c ]
  ret i32 %v3_104ad
}

define i32 @function_104b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_104b4:
  %v0_104b5 = load i32, i32* @eax, align 8
  ret i32 %v0_104b5
}

define i32 @_ZN5boost9date_time6c_time6gmtimeEPKlP2tm(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_104b6:
  ret i32 %arg1
}

define i32 @function_10525() local_unnamed_addr {
dec_label_pc_10525:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_10525 = add i32 %tmp91, 76145733
  %v2_10525 = inttoptr i32 %v1_10525 to i32*
  %v3_10525 = load i32, i32* %v2_10525, align 4
  %v4_10525 = add i32 %v3_10525, -1
  store i32 %v4_10525, i32* %v2_10525, align 4
  %v0_1052b = load i32, i32* %eax.global-to-local, align 8
  %v11_1052b = and i32 %v0_1052b, -24
  store i32 %v11_1052b, i32* %eax.global-to-local, align 8
  %v0_10531 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10531 = add i32 %v0_10531, -48
  %v2_10531 = inttoptr i32 %v1_10531 to i32*
  %v3_10531 = load i32, i32* %v2_10531, align 4
  store i32 %v3_10531, i32* @eax, align 8
  %v1_10534 = add i32 %v0_10531, -12
  %v2_10534 = inttoptr i32 %v1_10534 to i32*
  %v3_10534 = load i32, i32* %v2_10534, align 4
  %v1_10537 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_10537 = icmp eq i32 %v1_10537, %v3_10534
  br i1 %v3_10537, label %bb, label %dec_label_pc_10540

bb:                                               ; preds = %dec_label_pc_10525
  %v1_1053e = call i32 @function_1057c()
  store i32 %v1_1053e, i32* @eax, align 8
  br label %dec_label_pc_10540

dec_label_pc_10540:                               ; preds = %bb, %dec_label_pc_10525
  %v0_10540 = call i32 @function_10577()
  store i32 %v0_10540, i32* %eax.global-to-local, align 8
  ret i32 %v0_10540
}

define i32 @function_10543() local_unnamed_addr {
dec_label_pc_10543:
  %eax.global-to-local = alloca i32, align 4
  %v0_10543 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10543
}

define i32 @function_1054f() local_unnamed_addr {
dec_label_pc_1054f:
  %v0_1054f = call i32 @function_10553()
  ret i32 %v0_1054f
}

define i32 @function_10551() local_unnamed_addr {
dec_label_pc_10551:
  %eax.global-to-local = alloca i32, align 4
  %v0_10551 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10551
}

define i32 @function_10553() local_unnamed_addr {
dec_label_pc_10553:
  %v0_10553 = load i32, i32* @ebp, align 4
  %v1_10553 = add i32 %v0_10553, -20
  ret i32 %v1_10553
}

define i32 @function_1055e() local_unnamed_addr {
dec_label_pc_1055e:
  %v0_1055e = call i32 @function_10562()
  ret i32 %v0_1055e
}

define i32 @function_10560() local_unnamed_addr {
dec_label_pc_10560:
  %eax.global-to-local = alloca i32, align 4
  %v0_10560 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10560
}

define i32 @function_10562() local_unnamed_addr {
dec_label_pc_10562:
  %v0_10562 = load i32, i32* @ebp, align 4
  %v1_10562 = add i32 %v0_10562, -13
  ret i32 %v1_10562
}

define i32 @function_10577() local_unnamed_addr {
dec_label_pc_10577:
  %v0_10577 = load i32, i32* @eax, align 8
  ret i32 %v0_10577
}

define i32 @function_1057c() local_unnamed_addr {
dec_label_pc_1057c:
  %v0_10581 = load i32, i32* @eax, align 8
  ret i32 %v0_10581
}

define i32 @_ZNSt14numeric_limitsItE3maxEv() local_unnamed_addr {
dec_label_pc_10582:
  %v0_10588 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_105a4

bb:                                               ; preds = %dec_label_pc_10582
  %v2_105a2 = call i32 @function_105a9(i32 %v0_10588)
  br label %dec_label_pc_105a4

dec_label_pc_105a4:                               ; preds = %bb, %dec_label_pc_10582
  %v3_105a2 = phi i32 [ %v2_105a2, %bb ], [ -1, %dec_label_pc_10582 ]
  ret i32 %v3_105a2
}

define i32 @function_105a9(i32 %arg1) local_unnamed_addr {
dec_label_pc_105a9:
  %v0_105aa = load i32, i32* @eax, align 8
  ret i32 %v0_105aa
}

define i32 @_ZNSt14numeric_limitsIjE3minEv() local_unnamed_addr {
dec_label_pc_105ab:
  %v0_105b1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_105cd

bb:                                               ; preds = %dec_label_pc_105ab
  %v2_105cb = call i32 @function_105d2(i32 %v0_105b1)
  br label %dec_label_pc_105cd

dec_label_pc_105cd:                               ; preds = %bb, %dec_label_pc_105ab
  %v3_105cb = phi i32 [ %v2_105cb, %bb ], [ 0, %dec_label_pc_105ab ]
  ret i32 %v3_105cb
}

define i32 @function_105d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_105d2:
  %v0_105d3 = load i32, i32* @eax, align 8
  ret i32 %v0_105d3
}

define i32 @_ZNSt14numeric_limitsIjE3maxEv() local_unnamed_addr {
dec_label_pc_105d4:
  %v0_105da = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_105f6

bb:                                               ; preds = %dec_label_pc_105d4
  %v2_105f4 = call i32 @function_105fb(i32 %v0_105da)
  br label %dec_label_pc_105f6

dec_label_pc_105f6:                               ; preds = %bb, %dec_label_pc_105d4
  %v3_105f4 = phi i32 [ %v2_105f4, %bb ], [ -1, %dec_label_pc_105d4 ]
  ret i32 %v3_105f4
}

define i32 @function_105fb(i32 %arg1) local_unnamed_addr {
dec_label_pc_105fb:
  %v0_105fc = load i32, i32* @eax, align 8
  ret i32 %v0_105fc
}

define i32 @_ZNSt14numeric_limitsIxE3minEv() local_unnamed_addr {
dec_label_pc_105fd:
  %v0_10603 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10624

bb:                                               ; preds = %dec_label_pc_105fd
  %v2_10622 = call i32 @function_10629(i32 %v0_10603)
  br label %dec_label_pc_10624

dec_label_pc_10624:                               ; preds = %bb, %dec_label_pc_105fd
  %v3_10622 = phi i32 [ %v2_10622, %bb ], [ 0, %dec_label_pc_105fd ]
  ret i32 %v3_10622
}

define i32 @function_10629(i32 %arg1) local_unnamed_addr {
dec_label_pc_10629:
  %v0_1062a = load i32, i32* @eax, align 8
  ret i32 %v0_1062a
}

define i32 @_ZNSt14numeric_limitsIxE3maxEv() local_unnamed_addr {
dec_label_pc_1062b:
  %v0_10631 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10652

bb:                                               ; preds = %dec_label_pc_1062b
  %v2_10650 = call i32 @function_10657(i32 %v0_10631)
  br label %dec_label_pc_10652

dec_label_pc_10652:                               ; preds = %bb, %dec_label_pc_1062b
  %v3_10650 = phi i32 [ %v2_10650, %bb ], [ -1, %dec_label_pc_1062b ]
  ret i32 %v3_10650
}

define i32 @function_10657(i32 %arg1) local_unnamed_addr {
dec_label_pc_10657:
  %v0_10658 = load i32, i32* @eax, align 8
  ret i32 %v0_10658
}

define i32 @_ZN5boost9date_time37time_resolution_traits_adapted64_impl9as_numberENS0_11int_adapterIxEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10659:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_10676 = ptrtoint i32* %stack_var_-36 to i32
  %v1_1067c = call i32 @function_2496b(i32 %v2_10676)
  store i32 %v1_1067c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1068d

bb:                                               ; preds = %dec_label_pc_10659
  %v1_1068b = call i32 @function_10692()
  br label %dec_label_pc_1068d

dec_label_pc_1068d:                               ; preds = %bb, %dec_label_pc_10659
  %v2_1068b = phi i32 [ %v1_1068b, %bb ], [ %v1_1067c, %dec_label_pc_10659 ]
  ret i32 %v2_1068b
}

define i32 @function_10692() local_unnamed_addr {
dec_label_pc_10692:
  %v0_10693 = load i32, i32* @eax, align 8
  ret i32 %v0_10693
}

define i32 @_ZN5boost9date_time37time_resolution_traits_adapted64_impl10is_adaptedEv() local_unnamed_addr {
dec_label_pc_10694:
  %v0_1069a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_106b6

bb:                                               ; preds = %dec_label_pc_10694
  %v2_106b4 = call i32 @function_106bb(i32 %v0_1069a)
  br label %dec_label_pc_106b6

dec_label_pc_106b6:                               ; preds = %bb, %dec_label_pc_10694
  %v3_106b4 = phi i32 [ %v2_106b4, %bb ], [ 1, %dec_label_pc_10694 ]
  ret i32 %v3_106b4
}

define i32 @function_106bb(i32 %arg1) local_unnamed_addr {
dec_label_pc_106bb:
  %v0_106bc = load i32, i32* @eax, align 8
  ret i32 %v0_106bc
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_106be:
  %stack_var_-17 = alloca i32, align 4
  %v2_106d6 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_106d6
}

define i32 @function_10722(i32 %arg1) local_unnamed_addr {
dec_label_pc_10722:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10722 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10722 = add i32 %v0_10722, 13100101
  %v2_10722 = inttoptr i32 %v1_10722 to i32*
  %v3_10722 = load i32, i32* %v2_10722, align 4
  %v4_10722 = add i32 %v3_10722, -1
  store i32 %v4_10722, i32* %v2_10722, align 4
  %v0_1072c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1072c = add i32 %v0_1072c, -12
  %v2_1072c = inttoptr i32 %v1_1072c to i32*
  %v3_1072c = load i32, i32* %v2_1072c, align 4
  %v1_1072f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1072f = xor i32 %v1_1072f, %v3_1072c
  %v3_1072f = icmp eq i32 %v2_1072f, 0
  store i32 %v2_1072f, i32* @eax, align 8
  br i1 %v3_1072f, label %bb, label %dec_label_pc_10738

bb:                                               ; preds = %dec_label_pc_10722
  %v1_10736 = call i32 @function_10765()
  store i32 %v1_10736, i32* @eax, align 8
  br label %dec_label_pc_10738

dec_label_pc_10738:                               ; preds = %bb, %dec_label_pc_10722
  %v0_10738 = call i32 @function_10760()
  ret i32 %v0_10738
}

define i32 @function_1073b() local_unnamed_addr {
dec_label_pc_1073b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1073b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1073b
}

define i32 @function_10747() local_unnamed_addr {
dec_label_pc_10747:
  %v0_10747 = call i32 @function_1074b()
  ret i32 %v0_10747
}

define i32 @function_10749() local_unnamed_addr {
dec_label_pc_10749:
  %eax.global-to-local = alloca i32, align 4
  %v0_10749 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10749
}

define i32 @function_1074b() local_unnamed_addr {
dec_label_pc_1074b:
  %v0_1074b = load i32, i32* @ebp, align 4
  %v1_1074b = add i32 %v0_1074b, -13
  ret i32 %v1_1074b
}

define i32 @function_10760() local_unnamed_addr {
dec_label_pc_10760:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10765() local_unnamed_addr {
dec_label_pc_10765:
  %v0_1076a = load i32, i32* @eax, align 8
  ret i32 %v0_1076a
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthC1ERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1076c:
  ret i32 %arg1
}

define i32 @function_107b4() local_unnamed_addr {
dec_label_pc_107b4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_107b4 = load i32, i32* %ecx.global-to-local, align 8
  %v1_107b4 = add i32 %v0_107b4, -1
  store i32 %v1_107b4, i32* %ecx.global-to-local, align 8
  %v0_107b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_107b6
}

define i32 @_ZN5boost9gregorian8greg_dayC1Et(i32 %arg1, i16 %arg2) local_unnamed_addr {
dec_label_pc_107b8:
  %v4_107be = sext i16 %arg2 to i32
  %v3_107e4 = call i32 @function_24afc(i32 %arg1, i32 %v4_107be)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_107f5

bb:                                               ; preds = %dec_label_pc_107b8
  %v1_107f3 = call i32 @function_107fa()
  br label %dec_label_pc_107f5

dec_label_pc_107f5:                               ; preds = %bb, %dec_label_pc_107b8
  %v2_107f3 = phi i32 [ %v1_107f3, %bb ], [ 0, %dec_label_pc_107b8 ]
  ret i32 %v2_107f3
}

define i32 @function_107fa() local_unnamed_addr {
dec_label_pc_107fa:
  %v0_107fb = load i32, i32* @eax, align 8
  ret i32 %v0_107fb
}

define i32 @_ZNK5boost9gregorian8greg_daycvtEv(i16* %arg1) local_unnamed_addr {
dec_label_pc_107fc:
  %v2_10816 = load i16, i16* %arg1, align 2
  %v3_10816 = zext i16 %v2_10816 to i32
  store i32 %v3_10816, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10825

bb:                                               ; preds = %dec_label_pc_107fc
  %v4_10802 = ptrtoint i16* %arg1 to i32
  %v3_10823 = call i32 @function_1082a(i32 %v4_10802)
  br label %dec_label_pc_10825

dec_label_pc_10825:                               ; preds = %bb, %dec_label_pc_107fc
  %v4_10823 = phi i32 [ %v3_10823, %bb ], [ %v3_10816, %dec_label_pc_107fc ]
  ret i32 %v4_10823

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @function_1082a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1082a:
  %v0_1082b = load i32, i32* @eax, align 8
  ret i32 %v0_1082b
}

define i32 @_ZN5boost9gregorian8bad_yearC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1082c:
  %stack_var_-17 = alloca i32, align 4
  %v2_10844 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_10844
}

define i32 @function_10890() local_unnamed_addr {
dec_label_pc_10890:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10890 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10890 = add i32 %v0_10890, 13100101
  %v2_10890 = inttoptr i32 %v1_10890 to i32*
  %v3_10890 = load i32, i32* %v2_10890, align 4
  %v4_10890 = add i32 %v3_10890, -1
  store i32 %v4_10890, i32* %v2_10890, align 4
  %v0_10898 = load i32, i32* %eax.global-to-local, align 8
  %v4_10898 = mul i32 %v0_10898, 2
  store i32 %v4_10898, i32* %eax.global-to-local, align 8
  %v0_1089a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1089a = add i32 %v0_1089a, -12
  %v2_1089a = inttoptr i32 %v1_1089a to i32*
  %v3_1089a = load i32, i32* %v2_1089a, align 4
  store i32 %v3_1089a, i32* %eax.global-to-local, align 8
  %v1_1089d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1089d = xor i32 %v1_1089d, %v3_1089a
  %v3_1089d = icmp eq i32 %v2_1089d, 0
  store i32 %v2_1089d, i32* @eax, align 8
  br i1 %v3_1089d, label %bb, label %dec_label_pc_108a6

bb:                                               ; preds = %dec_label_pc_10890
  %v1_108a4 = call i32 @function_108d3()
  store i32 %v1_108a4, i32* @eax, align 8
  br label %dec_label_pc_108a6

dec_label_pc_108a6:                               ; preds = %bb, %dec_label_pc_10890
  %v0_108a6 = call i32 @function_108ce()
  store i32 %v0_108a6, i32* %eax.global-to-local, align 8
  ret i32 %v0_108a6
}

define i32 @function_108a9() local_unnamed_addr {
dec_label_pc_108a9:
  %eax.global-to-local = alloca i32, align 4
  %v0_108a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_108a9
}

define i32 @function_108b5() local_unnamed_addr {
dec_label_pc_108b5:
  %v0_108b5 = call i32 @function_108b9()
  ret i32 %v0_108b5
}

define i32 @function_108b7() local_unnamed_addr {
dec_label_pc_108b7:
  %eax.global-to-local = alloca i32, align 4
  %v0_108b7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_108b7
}

define i32 @function_108b9() local_unnamed_addr {
dec_label_pc_108b9:
  %v0_108b9 = load i32, i32* @ebp, align 4
  %v1_108b9 = add i32 %v0_108b9, -13
  ret i32 %v1_108b9
}

define i32 @function_108ce() local_unnamed_addr {
dec_label_pc_108ce:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_108d3() local_unnamed_addr {
dec_label_pc_108d3:
  %v0_108d8 = load i32, i32* @eax, align 8
  ret i32 %v0_108d8
}

define i32 @_ZN5boost9gregorian9greg_yearC1Et(i32 %arg1, i16 %arg2) local_unnamed_addr {
dec_label_pc_108da:
  %v4_108e0 = sext i16 %arg2 to i32
  store i32 %arg1, i32* @eax, align 8
  %v3_10906 = call i32 @function_24c70(i32 %arg1, i32 %v4_108e0)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10917

bb:                                               ; preds = %dec_label_pc_108da
  %v1_10915 = call i32 @function_1091c()
  br label %dec_label_pc_10917

dec_label_pc_10917:                               ; preds = %bb, %dec_label_pc_108da
  %v2_10915 = phi i32 [ %v1_10915, %bb ], [ 0, %dec_label_pc_108da ]
  ret i32 %v2_10915

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1091c() local_unnamed_addr {
dec_label_pc_1091c:
  %v0_1091d = load i32, i32* @eax, align 8
  ret i32 %v0_1091d
}

define i32 @_ZNK5boost9gregorian9greg_yearcvtEv(i16* %arg1) local_unnamed_addr {
dec_label_pc_1091e:
  %v2_10938 = load i16, i16* %arg1, align 2
  %v3_10938 = zext i16 %v2_10938 to i32
  store i32 %v3_10938, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10947

bb:                                               ; preds = %dec_label_pc_1091e
  %v4_10924 = ptrtoint i16* %arg1 to i32
  %v3_10945 = call i32 @function_1094c(i32 %v4_10924)
  br label %dec_label_pc_10947

dec_label_pc_10947:                               ; preds = %bb, %dec_label_pc_1091e
  %v4_10945 = phi i32 [ %v3_10945, %bb ], [ %v3_10938, %dec_label_pc_1091e ]
  ret i32 %v4_10945

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @function_1094c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1094c:
  %v0_1094d = load i32, i32* @eax, align 8
  ret i32 %v0_1094d
}

define i32 @_ZN5boost9gregorian9bad_monthC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1094e:
  %stack_var_-17 = alloca i32, align 4
  %v2_10966 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_10966
}

define i32 @function_109a8() local_unnamed_addr {
dec_label_pc_109a8:
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_109b3 = add i32 %tmp91, -28
  %v2_109b3 = inttoptr i32 %v1_109b3 to i32*
  %v3_109b3 = load i32, i32* %v2_109b3, align 4
  %v1_109b6 = inttoptr i32 %v3_109b3 to i32*
  store i32 ptrtoint (%vtable_3fb64_type* @global_var_3fb64.2809 to i32), i32* %v1_109b6, align 4
  %v0_109bc = load i32, i32* %ebp.global-to-local, align 4
  %v1_109bc = add i32 %v0_109bc, -12
  %v2_109bc = inttoptr i32 %v1_109bc to i32*
  %v3_109bc = load i32, i32* %v2_109bc, align 4
  %v1_109bf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_109bf = xor i32 %v1_109bf, %v3_109bc
  %v3_109bf = icmp eq i32 %v2_109bf, 0
  store i32 %v2_109bf, i32* @eax, align 8
  br i1 %v3_109bf, label %bb, label %dec_label_pc_109c8

bb:                                               ; preds = %dec_label_pc_109a8
  %v1_109a8 = add i32 %tmp91, -13
  %v2_109c6 = call i32 @function_109f5(i32 %v1_109a8)
  store i32 %v2_109c6, i32* @eax, align 8
  br label %dec_label_pc_109c8

dec_label_pc_109c8:                               ; preds = %bb, %dec_label_pc_109a8
  %v0_109c8 = call i32 @function_109f0()
  ret i32 %v0_109c8
}

define i32 @function_109cb() local_unnamed_addr {
dec_label_pc_109cb:
  %eax.global-to-local = alloca i32, align 4
  %v0_109cb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_109cb
}

define i32 @function_109d7() local_unnamed_addr {
dec_label_pc_109d7:
  %v0_109d7 = call i32 @function_109db()
  ret i32 %v0_109d7
}

define i32 @function_109d9() local_unnamed_addr {
dec_label_pc_109d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_109d9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_109d9
}

define i32 @function_109db() local_unnamed_addr {
dec_label_pc_109db:
  %v0_109db = load i32, i32* @ebp, align 4
  %v1_109db = add i32 %v0_109db, -13
  ret i32 %v1_109db
}

define i32 @function_109f0() local_unnamed_addr {
dec_label_pc_109f0:
  %v0_109f0 = load i32, i32* @eax, align 8
  ret i32 %v0_109f0
}

define i32 @function_109f5(i32 %arg1) local_unnamed_addr {
dec_label_pc_109f5:
  %v0_109fa = load i32, i32* @eax, align 8
  ret i32 %v0_109fa
}

define i32 @_ZN5boost9gregorian10greg_monthC1Et(i32 %arg1, i16 %arg2) local_unnamed_addr {
dec_label_pc_109fc:
  %v4_10a02 = sext i16 %arg2 to i32
  store i32 %arg1, i32* @eax, align 8
  %v3_10a28 = call i32 @function_24de4(i32 %arg1, i32 %v4_10a02)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10a39

bb:                                               ; preds = %dec_label_pc_109fc
  %v1_10a37 = call i32 @function_10a3e()
  br label %dec_label_pc_10a39

dec_label_pc_10a39:                               ; preds = %bb, %dec_label_pc_109fc
  %v2_10a37 = phi i32 [ %v1_10a37, %bb ], [ 0, %dec_label_pc_109fc ]
  ret i32 %v2_10a37

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10a3e() local_unnamed_addr {
dec_label_pc_10a3e:
  %v0_10a3f = load i32, i32* @eax, align 8
  ret i32 %v0_10a3f
}

define i32 @_ZNK5boost9gregorian10greg_monthcvtEv(i16* %arg1) local_unnamed_addr {
dec_label_pc_10a40:
  %ebp.global-to-local = alloca i32, align 4
  %v0_10a40 = load i32, i32* %ebp.global-to-local, align 4
  %v2_10a5a = load i16, i16* %arg1, align 2
  %v3_10a5a = zext i16 %v2_10a5a to i32
  store i32 %v0_10a40, i32* %ebp.global-to-local, align 4
  ret i32 %v3_10a5a

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthD1Ev(i32* %arg1) {
dec_label_pc_10a70:
  store i32 ptrtoint (%vtable_3fb94_type* @global_var_3fb94.2810 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10abe

bb:                                               ; preds = %dec_label_pc_10a70
  %v1_10abc = call i32 @function_10ac3()
  br label %dec_label_pc_10abe

dec_label_pc_10abe:                               ; preds = %bb, %dec_label_pc_10a70
  %v2_10abc = phi i32 [ %v1_10abc, %bb ], [ 0, %dec_label_pc_10a70 ]
  ret i32 %v2_10abc
}

define i32 @function_10ac3() local_unnamed_addr {
dec_label_pc_10ac3:
  %v0_10ac4 = load i32, i32* @eax, align 8
  ret i32 %v0_10ac4
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthD0Ev(i32 %arg1) {
dec_label_pc_10ac6:
  %v1_10ae3 = call i32 @_ZNK5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEE10is_specialEv(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10aff

bb:                                               ; preds = %dec_label_pc_10ac6
  %v2_10afd = call i32 @function_10b04(i32 %arg1)
  br label %dec_label_pc_10aff

dec_label_pc_10aff:                               ; preds = %bb, %dec_label_pc_10ac6
  %v3_10afd = phi i32 [ %v2_10afd, %bb ], [ 0, %dec_label_pc_10ac6 ]
  ret i32 %v3_10afd
}

define i32 @function_10b04(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b04:
  %v0_10b05 = load i32, i32* @eax, align 8
  ret i32 %v0_10b05
}

define i32 @_ZN5boost9gregorian4dateC1ENS0_9greg_yearENS0_10greg_monthENS0_8greg_dayE(i32 %arg1, i16 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10b06:
  %tmp100 = trunc i32 %arg4 to i16
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-54 = alloca i16, align 2
  store i16 %tmp100, i16* %stack_var_-54, align 2
  store i32 %arg1, i32* @eax, align 8
  %v4_10b4b = zext i16 %arg2 to i32
  store i32 %v4_10b4b, i32* @edx, align 4
  %v4_10b57 = sext i16 %arg2 to i32
  %sext = mul i32 %arg3, 65536
  %v5_10b57 = sdiv i32 %sext, 65536
  %sext4 = mul i32 %arg4, 65536
  %v6_10b57 = sdiv i32 %sext4, 65536
  %v7_10b57 = call i32 @function_25042(i32 %arg1, i32 %v4_10b57, i32 %v5_10b57, i32 %v6_10b57)
  store i32 %v4_10b4b, i32* @eax, align 8
  %v3_10b6d = call i32 @function_250c6(i32 %v4_10b4b, i32 %v5_10b57)
  store i32 %v3_10b6d, i32* @ebx, align 4
  %v2_10b74 = ptrtoint i16* %stack_var_-54 to i32
  store i32 %v2_10b74, i32* @eax, align 8
  %v1_10b7a = call i32 @function_21302(i32 %v2_10b74)
  %v0_10b7f = load i32, i32* @ebx, align 4
  %v1_10b7f = trunc i32 %v0_10b7f to i16
  %v3_10b7f = trunc i32 %v1_10b7a to i16
  %v9_10b7f = icmp ult i16 %v1_10b7f, %v3_10b7f
  %v5_10b85 = icmp eq i1 %v9_10b7f, false
  br i1 %v5_10b85, label %bb, label %dec_label_pc_10b89

bb:                                               ; preds = %dec_label_pc_10b06
  %v1_10b87 = call i32 @function_10c00()
  br label %dec_label_pc_10b89

dec_label_pc_10b89:                               ; preds = %bb, %dec_label_pc_10b06
  %v2_10b89 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_10b89

; uselistorder directives
  uselistorder i32 %v5_10b57, { 1, 0 }
  uselistorder i32 %v4_10b4b, { 1, 0, 2 }
  uselistorder i16 %arg2, { 1, 0 }
}

define i32 @function_10bad() local_unnamed_addr {
dec_label_pc_10bad:
  %v0_10bad = load i32, i32* @ebp, align 4
  %v1_10bad = add i32 %v0_10bad, 1149889605
  %v2_10bad = inttoptr i32 %v1_10bad to i32*
  %v3_10bad = load i32, i32* %v2_10bad, align 4
  %v4_10bad = add i32 %v3_10bad, -1
  store i32 %v4_10bad, i32* %v2_10bad, align 4
  %v0_10bb5 = load i32, i32* @ebp, align 4
  %v1_10bc0 = add i32 %v0_10bb5, -28
  store i32 %v1_10bc0, i32* @eax, align 8
  %v1_10bd3 = call i32 @function_21576(i32 %v1_10bc0)
  %v0_10bd8 = call i32 @function_10bdc()
  ret i32 %v0_10bd8

; uselistorder directives
  uselistorder i32 %v1_10bc0, { 1, 0 }
}

define i32 @function_10bda() local_unnamed_addr {
dec_label_pc_10bda:
  %eax.global-to-local = alloca i32, align 4
  %v0_10bda = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10bda
}

define i32 @function_10bdc() local_unnamed_addr {
dec_label_pc_10bdc:
  %v0_10bdc = load i32, i32* @ebp, align 4
  %v1_10bdc = add i32 %v0_10bdc, -20
  %v1_10be7 = call i32 @function_10beb(i32 %v1_10bdc)
  ret i32 %v1_10be7
}

define i32 @function_10be9() local_unnamed_addr {
dec_label_pc_10be9:
  %eax.global-to-local = alloca i32, align 4
  %v0_10be9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10be9
}

define i32 @function_10beb(i32 %arg1) local_unnamed_addr {
dec_label_pc_10beb:
  %v0_10beb = load i32, i32* @ebp, align 4
  %v1_10beb = add i32 %v0_10beb, -13
  ret i32 %v1_10beb
}

define i32 @function_10c00() local_unnamed_addr {
dec_label_pc_10c00:
  %v0_10c00 = load i32, i32* @ebp, align 4
  %v1_10c00 = add i32 %v0_10c00, -12
  %v2_10c00 = inttoptr i32 %v1_10c00 to i32*
  %v3_10c00 = load i32, i32* %v2_10c00, align 4
  %v1_10c03 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10c03 = xor i32 %v1_10c03, %v3_10c00
  %v3_10c03 = icmp eq i32 %v2_10c03, 0
  store i32 %v2_10c03, i32* @eax, align 8
  br i1 %v3_10c03, label %bb, label %dec_label_pc_10c0c

bb:                                               ; preds = %dec_label_pc_10c00
  %v1_10c0a = call i32 @function_10c11()
  br label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %bb, %dec_label_pc_10c00
  %v2_10c0a = phi i32 [ %v1_10c0a, %bb ], [ %v2_10c03, %dec_label_pc_10c00 ]
  ret i32 %v2_10c0a
}

define i32 @function_10c11() local_unnamed_addr {
dec_label_pc_10c11:
  %v0_10c16 = load i32, i32* @eax, align 8
  ret i32 %v0_10c16
}

define i32 @_ZNK5boost9gregorian4date10day_numberEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10c18:
  %v2_10c32 = load i32, i32* %arg1, align 4
  store i32 %v2_10c32, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10c40

bb:                                               ; preds = %dec_label_pc_10c18
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_10c3e = call i32 @function_10c45(i32 %tmp100)
  br label %dec_label_pc_10c40

dec_label_pc_10c40:                               ; preds = %bb, %dec_label_pc_10c18
  %v3_10c3e = phi i32 [ %v2_10c3e, %bb ], [ %v2_10c32, %dec_label_pc_10c18 ]
  ret i32 %v3_10c3e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_10c45(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c45:
  %v0_10c46 = load i32, i32* @eax, align 8
  ret i32 %v0_10c46
}

define i32 @_ZN5boost10posix_time13time_durationC1Eiiix(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10c48:
  store i32 %arg2, i32* @eax, align 8
  %v6_10ca6 = call i32 @function_25660(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10cb7

bb:                                               ; preds = %dec_label_pc_10c48
  %v1_10cb5 = call i32 @function_10cbc()
  br label %dec_label_pc_10cb7

dec_label_pc_10cb7:                               ; preds = %bb, %dec_label_pc_10c48
  %v2_10cb5 = phi i32 [ %v1_10cb5, %bb ], [ 0, %dec_label_pc_10c48 ]
  ret i32 %v2_10cb5

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10cbc() local_unnamed_addr {
dec_label_pc_10cbc:
  %v0_10cbd = load i32, i32* @eax, align 8
  ret i32 %v0_10cbd
}

define i32 @_ZN5boost10posix_time13time_durationC1ENS_9date_time14special_valuesE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10cbe:
  store i32 %arg1, i32* @eax, align 8
  %v2_10ce8 = call i32 @function_25764(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10cf9

bb:                                               ; preds = %dec_label_pc_10cbe
  %v1_10cf7 = call i32 @function_10cfe()
  br label %dec_label_pc_10cf9

dec_label_pc_10cf9:                               ; preds = %bb, %dec_label_pc_10cbe
  %v2_10cf7 = phi i32 [ %v1_10cf7, %bb ], [ 0, %dec_label_pc_10cbe ]
  ret i32 %v2_10cf7

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10cfe() local_unnamed_addr {
dec_label_pc_10cfe:
  %v0_10cff = load i32, i32* @eax, align 8
  ret i32 %v0_10cff
}

define i32 @_ZN5boost10posix_time5ptimeC1ENS_9gregorian4dateENS0_13time_durationE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10d00:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_10d35 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10d35, i32* @edx, align 4
  %v7_10d3f = call i32 @function_258f8(i32 %arg1, i32 %v2_10d35, i32 %arg3, i32 0, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10d50

bb:                                               ; preds = %dec_label_pc_10d00
  %v1_10d4e = call i32 @function_10d55()
  br label %dec_label_pc_10d50

dec_label_pc_10d50:                               ; preds = %bb, %dec_label_pc_10d00
  %v2_10d4e = phi i32 [ %v1_10d4e, %bb ], [ 0, %dec_label_pc_10d00 ]
  ret i32 %v2_10d4e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_10d55() local_unnamed_addr {
dec_label_pc_10d55:
  %v0_10d56 = load i32, i32* @eax, align 8
  ret i32 %v0_10d56
}

define i32 @_ZN5boost10posix_time5ptimeC1ENS_9gregorian4dateE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d58:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_10d9d = ptrtoint i32* %stack_var_-24 to i32
  %v6_10da3 = call i32 @function_219a0(i32 %v2_10d9d, i32 0, i32 0, i32 0, i32 0, i32 0)
  store i32 %arg1, i32* @eax, align 8
  %v2_10dba = ptrtoint i32* %stack_var_-36 to i32
  %v4_10dc4 = call i32 @function_25950(i32 %arg1, i32 %v2_10dba, i32 %v2_10d9d, i32 0)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10dd5

bb:                                               ; preds = %dec_label_pc_10d58
  %v1_10dd3 = call i32 @function_10dda()
  br label %dec_label_pc_10dd5

dec_label_pc_10dd5:                               ; preds = %bb, %dec_label_pc_10d58
  %v2_10dd3 = phi i32 [ %v1_10dd3, %bb ], [ 0, %dec_label_pc_10d58 ]
  ret i32 %v2_10dd3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10dda() local_unnamed_addr {
dec_label_pc_10dda:
  %v0_10ddb = load i32, i32* @eax, align 8
  ret i32 %v0_10ddb
}

define i32 @_ZN5boost10posix_time13time_durationC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10ddc:
  store i32 %arg2, i32* @edx, align 4
  %v2_10e06 = call i32 @function_25bba(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10e17

bb:                                               ; preds = %dec_label_pc_10ddc
  %v1_10e15 = call i32 @function_10e1c()
  br label %dec_label_pc_10e17

dec_label_pc_10e17:                               ; preds = %bb, %dec_label_pc_10ddc
  %v2_10e15 = phi i32 [ %v1_10e15, %bb ], [ 0, %dec_label_pc_10ddc ]
  ret i32 %v2_10e15

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10e1c() local_unnamed_addr {
dec_label_pc_10e1c:
  %v0_10e1d = load i32, i32* @eax, align 8
  ret i32 %v0_10e1d
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC1EP15pthread_mutex_t(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e1e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_10e46 = add i32 %tmp101, 4
  %v2_10e46 = inttoptr i32 %v1_10e46 to i8*
  store i8 1, i8* %v2_10e46, align 1
  %v2_10e4d = load i32, i32* %arg1, align 4
  ret i32 %v2_10e4d
}

define i32 @function_10e8f() local_unnamed_addr {
dec_label_pc_10e8f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10e8f = load i32, i32* %ecx.global-to-local, align 8
  %v1_10e8f = add i32 %v0_10e8f, -1
  store i32 %v1_10e8f, i32* %ecx.global-to-local, align 8
  %v0_10e91 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10e91
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lock6unlockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10e92:
  %v2_10eac = load i32, i32* %arg1, align 4
  ret i32 %v2_10eac
}

define i32 @function_10ef5() local_unnamed_addr {
dec_label_pc_10ef5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10ef5 = load i32, i32* %ecx.global-to-local, align 8
  %v1_10ef5 = add i32 %v0_10ef5, -1
  store i32 %v1_10ef5, i32* %ecx.global-to-local, align 8
  %v0_10ef7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10ef7
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ef8:
  %v1_10f12 = add i32 %arg1, 4
  %v2_10f12 = inttoptr i32 %v1_10f12 to i8*
  %v3_10f12 = load i8, i8* %v2_10f12, align 1
  %v5_10f16 = icmp eq i8 %v3_10f12, 0
  br i1 %v5_10f16, label %dec_label_pc_10f25, label %dec_label_pc_10f1a

dec_label_pc_10f1a:                               ; preds = %dec_label_pc_10ef8
  %v1_10f20 = call i32 @function_21d8a(i32 %arg1)
  br label %dec_label_pc_10f25

dec_label_pc_10f25:                               ; preds = %dec_label_pc_10f1a, %dec_label_pc_10ef8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_10f31

bb:                                               ; preds = %dec_label_pc_10f25
  %v1_10f2f = call i32 @function_10f36()
  br label %dec_label_pc_10f31

dec_label_pc_10f31:                               ; preds = %bb, %dec_label_pc_10f25
  %v2_10f2f = phi i32 [ %v1_10f2f, %bb ], [ 0, %dec_label_pc_10f25 ]
  ret i32 %v2_10f2f
}

define i32 @function_10f36() local_unnamed_addr {
dec_label_pc_10f36:
  %v0_10f37 = load i32, i32* @eax, align 8
  ret i32 %v0_10f37
}

define i32 @_ZN5boost15recursive_mutex4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f38:
  %stack_var_-24 = alloca i32, align 4
  %v2_10f57 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10f57, i32* @eax, align 8
  %v2_10f5d = call i32 @function_21d56(i32 %v2_10f57, i32 %arg1)
  %v1_10f65 = add i32 %arg1, 72
  %v2_10f65 = inttoptr i32 %v1_10f65 to i8*
  %v3_10f65 = load i8, i8* %v2_10f65, align 1
  %v4_10f65 = zext i8 %v3_10f65 to i32
  %v5_10f69 = icmp eq i8 %v3_10f65, 0
  br i1 %v5_10f69, label %bb, label %dec_label_pc_10f6d

bb:                                               ; preds = %dec_label_pc_10f38
  %v1_10f6b = call i32 @function_10f8f()
  br label %dec_label_pc_10f6d

dec_label_pc_10f6d:                               ; preds = %bb, %dec_label_pc_10f38
  %v2_10f6b = phi i32 [ %v1_10f6b, %bb ], [ %v4_10f65, %dec_label_pc_10f38 ]
  ret i32 %v2_10f6b
}

define i32 @function_10f83() local_unnamed_addr {
dec_label_pc_10f83:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_10f83 = add i32 %tmp91, -1207470912
  %v2_10f83 = inttoptr i32 %v1_10f83 to i32*
  %v3_10f83 = load i32, i32* %v2_10f83, align 4
  %v4_10f83 = add i32 %v3_10f83, 1
  store i32 %v4_10f83, i32* %v2_10f83, align 4
  %v2_10f89 = load i32, i32* %eax.global-to-local, align 8
  %v4_10f89 = mul i32 %v2_10f89, 2
  %v21_10f89 = inttoptr i32 %v2_10f89 to i32*
  store i32 %v4_10f89, i32* %v21_10f89, align 4
  %v2_10f8b = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_10f8b = load i32, i32* %eax.global-to-local, align 8
  %v4_10f8b = trunc i32 %v3_10f8b to i8
  %v5_10f8b = add i8 %v4_10f8b, %v2_10f8b
  %v21_10f8b = inttoptr i32 %v3_10f8b to i8*
  store i8 %v5_10f8b, i8* %v21_10f8b, align 1
  %v0_10f8d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f8d

; uselistorder directives
  uselistorder i32 %v2_10f89, { 1, 0 }
}

define i32 @function_10f8f() local_unnamed_addr {
dec_label_pc_10f8f:
  %v1_10f96 = call i32 @function_10fe6()
  %v0_10f98 = load i32, i32* @ebp, align 4
  %v1_10f98 = add i32 %v0_10f98, -28
  %v2_10f98 = inttoptr i32 %v1_10f98 to i32*
  %v3_10f98 = load i32, i32* %v2_10f98, align 4
  %v1_10f9b = add i32 %v3_10f98, 80
  %v2_10f9b = inttoptr i32 %v1_10f9b to i32*
  %v3_10f9b = load i32, i32* %v2_10f9b, align 4
  %v1_10f9e = add i32 %v3_10f9b, 1
  %v2_10fa4 = add i32 %v3_10f98, 80
  %v3_10fa4 = inttoptr i32 %v2_10fa4 to i32*
  store i32 %v1_10f9e, i32* %v3_10fa4, align 4
  %v0_10fa7 = call i32 @function_11012()
  ret i32 %v0_10fa7
}

define i32 @function_10fa9() local_unnamed_addr {
dec_label_pc_10fa9:
  %v0_10fa9 = load i32, i32* @ebp, align 4
  %v1_10fa9 = add i32 %v0_10fa9, -28
  %v2_10fa9 = inttoptr i32 %v1_10fa9 to i32*
  %v3_10fa9 = load i32, i32* %v2_10fa9, align 4
  ret i32 %v3_10fa9
}

define i32 @function_10fe6() local_unnamed_addr {
dec_label_pc_10fe6:
  %eax.global-to-local = alloca i32, align 4
  %v0_10fe6 = load i32, i32* @ebp, align 4
  %v1_10fe6 = add i32 %v0_10fe6, -28
  %v2_10fe6 = inttoptr i32 %v1_10fe6 to i32*
  %v3_10fe6 = load i32, i32* %v2_10fe6, align 4
  store i32 %v3_10fe6, i32* %eax.global-to-local, align 8
  %v1_10fe9 = add i32 %v3_10fe6, 72
  %v2_10fe9 = inttoptr i32 %v1_10fe9 to i8*
  %v3_10fe9 = load i8, i8* %v2_10fe9, align 1
  %v4_10fe9 = zext i8 %v3_10fe9 to i32
  store i32 %v4_10fe9, i32* %eax.global-to-local, align 8
  %v5_10fed = icmp eq i8 %v3_10fe9, 0
  %v1_10fef = icmp eq i1 %v5_10fed, false
  br i1 %v1_10fef, label %bb, label %dec_label_pc_10ff1

bb:                                               ; preds = %dec_label_pc_10fe6
  %v2_10fef = call i32 @function_10fa9()
  store i32 %v2_10fef, i32* %eax.global-to-local, align 8
  %v0_10ff1.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_10ff1

dec_label_pc_10ff1:                               ; preds = %bb, %dec_label_pc_10fe6
  %v0_10ff1 = phi i32 [ %v0_10ff1.pre, %bb ], [ %v0_10fe6, %dec_label_pc_10fe6 ]
  %v1_10ff1 = add i32 %v0_10ff1, -28
  %v2_10ff1 = inttoptr i32 %v1_10ff1 to i32*
  %v3_10ff1 = load i32, i32* %v2_10ff1, align 4
  store i32 %v3_10ff1, i32* %eax.global-to-local, align 8
  %v1_10ff4 = add i32 %v3_10ff1, 72
  %v2_10ff4 = inttoptr i32 %v1_10ff4 to i8*
  store i8 1, i8* %v2_10ff4, align 1
  %v0_10ff8 = load i32, i32* @ebp, align 4
  %v1_10ff8 = add i32 %v0_10ff8, -28
  %v2_10ff8 = inttoptr i32 %v1_10ff8 to i32*
  %v3_10ff8 = load i32, i32* %v2_10ff8, align 4
  store i32 %v3_10ff8, i32* %eax.global-to-local, align 8
  %v1_10ffb = add i32 %v3_10ff8, 80
  %v2_10ffb = inttoptr i32 %v1_10ffb to i32*
  %v3_10ffb = load i32, i32* %v2_10ffb, align 4
  store i32 %v3_10ffb, i32* %eax.global-to-local, align 8
  %v1_10ffe = add i32 %v3_10ffb, 1
  %v3_11001 = load i32, i32* %v2_10ff8, align 4
  store i32 %v3_11001, i32* %eax.global-to-local, align 8
  %v2_11004 = add i32 %v3_11001, 80
  %v3_11004 = inttoptr i32 %v2_11004 to i32*
  store i32 %v1_10ffe, i32* %v3_11004, align 4
  %v4_11004 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_11004

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 7 }
}

define i32 @function_11012() local_unnamed_addr {
dec_label_pc_11012:
  %v0_11012 = load i32, i32* @ebp, align 4
  %v1_11012 = add i32 %v0_11012, -20
  store i32 %v1_11012, i32* @eax, align 8
  %v1_11018 = call i32 @function_21e30(i32 %v1_11012)
  %v0_1101d = load i32, i32* @ebp, align 4
  %v1_1101d = add i32 %v0_1101d, -12
  %v2_1101d = inttoptr i32 %v1_1101d to i32*
  %v3_1101d = load i32, i32* %v2_1101d, align 4
  %v1_11020 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11020 = xor i32 %v1_11020, %v3_1101d
  %v3_11020 = icmp eq i32 %v2_11020, 0
  store i32 %v2_11020, i32* @eax, align 8
  br i1 %v3_11020, label %bb, label %dec_label_pc_11029

bb:                                               ; preds = %dec_label_pc_11012
  %v1_11027 = call i32 @function_11047()
  store i32 %v1_11027, i32* @eax, align 8
  br label %dec_label_pc_11029

dec_label_pc_11029:                               ; preds = %bb, %dec_label_pc_11012
  %v0_11029 = call i32 @function_11042()
  ret i32 %v0_11029
}

define i32 @function_1102c() local_unnamed_addr {
dec_label_pc_1102c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1102c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1102c
}

define i32 @function_11042() local_unnamed_addr {
dec_label_pc_11042:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11047() local_unnamed_addr {
dec_label_pc_11047:
  %v0_1104c = load i32, i32* @eax, align 8
  ret i32 %v0_1104c
}

define i32 @_ZN5boost15recursive_mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1104e:
  %stack_var_-24 = alloca i32, align 4
  %v2_1106c = ptrtoint i32* %stack_var_-24 to i32
  %v2_11072 = call i32 @function_21e6c(i32 %v2_1106c, i32 %arg1)
  %v1_1107a = add i32 %arg1, 80
  %v2_1107a = inttoptr i32 %v1_1107a to i32*
  %v3_1107a = load i32, i32* %v2_1107a, align 4
  %v1_1107d = add i32 %v3_1107a, -1
  store i32 %v1_1107d, i32* %v2_1107a, align 4
  %v1_1108c = icmp eq i32 %v1_1107d, 0
  %v5_11091 = icmp eq i1 %v1_1108c, false
  br i1 %v5_11091, label %dec_label_pc_1109c, label %dec_label_pc_11095

dec_label_pc_11095:                               ; preds = %dec_label_pc_1104e
  %v1_11098 = add i32 %arg1, 72
  %v2_11098 = inttoptr i32 %v1_11098 to i8*
  store i8 0, i8* %v2_11098, align 1
  br label %dec_label_pc_1109c

dec_label_pc_1109c:                               ; preds = %dec_label_pc_11095, %dec_label_pc_1104e
  %v1_1109f = add i32 %arg1, 24
  ret i32 %v1_1109f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @function_110ed() local_unnamed_addr {
dec_label_pc_110ed:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_110ed = load i32, i32* %ecx.global-to-local, align 8
  %v1_110ed = add i32 %v0_110ed, -1
  store i32 %v1_110ed, i32* %ecx.global-to-local, align 8
  %v0_110ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_110ef
}

define i32 @_ZN5boost15recursive_mutex8try_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_110f0:
  %stack_var_-24 = alloca i32, align 4
  %v2_1110f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1110f, i32* @eax, align 8
  %v2_11115 = call i32 @function_21f0e(i32 %v2_1110f, i32 %arg1)
  %v1_1111d = add i32 %arg1, 72
  %v2_1111d = inttoptr i32 %v1_1111d to i8*
  %v3_1111d = load i8, i8* %v2_1111d, align 1
  %v4_1111d = zext i8 %v3_1111d to i32
  %v5_11121 = icmp eq i8 %v3_1111d, 0
  br i1 %v5_11121, label %bb, label %dec_label_pc_11125

bb:                                               ; preds = %dec_label_pc_110f0
  %v1_11123 = call i32 @function_11147()
  br label %dec_label_pc_11125

dec_label_pc_11125:                               ; preds = %bb, %dec_label_pc_110f0
  %v2_11123 = phi i32 [ %v1_11123, %bb ], [ %v4_1111d, %dec_label_pc_110f0 ]
  ret i32 %v2_11123
}

define i32 @function_1113b() local_unnamed_addr {
dec_label_pc_1113b:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1113b = add i32 %tmp91, -1207470656
  %v2_1113b = inttoptr i32 %v1_1113b to i32*
  %v3_1113b = load i32, i32* %v2_1113b, align 4
  %v4_1113b = add i32 %v3_1113b, 1
  store i32 %v4_1113b, i32* %v2_1113b, align 4
  %v2_11141 = load i32, i32* %eax.global-to-local, align 8
  %v4_11141 = mul i32 %v2_11141, 2
  %v21_11141 = inttoptr i32 %v2_11141 to i32*
  store i32 %v4_11141, i32* %v21_11141, align 4
  %v2_11143 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_11143 = load i32, i32* %eax.global-to-local, align 8
  %v4_11143 = trunc i32 %v3_11143 to i8
  %v5_11143 = add i8 %v4_11143, %v2_11143
  %v21_11143 = inttoptr i32 %v3_11143 to i8*
  store i8 %v5_11143, i8* %v21_11143, align 1
  %v0_11145 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11145

; uselistorder directives
  uselistorder i32 %v2_11141, { 1, 0 }
}

define i32 @function_11147() local_unnamed_addr {
dec_label_pc_11147:
  %eax.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_11157 = load i32, i32* @ebp, align 4
  %v1_11157 = add i32 %v0_11157, -28
  %v2_11157 = inttoptr i32 %v1_11157 to i32*
  %v3_11157 = load i32, i32* %v2_11157, align 4
  store i32 %v3_11157, i32* %eax.global-to-local, align 8
  %v1_1115a = add i32 %v3_11157, 72
  %v2_1115a = inttoptr i32 %v1_1115a to i8*
  store i8 1, i8* %v2_1115a, align 1
  %v0_1115e = load i32, i32* @ebp, align 4
  %v1_1115e = add i32 %v0_1115e, -28
  %v2_1115e = inttoptr i32 %v1_1115e to i32*
  %v3_1115e = load i32, i32* %v2_1115e, align 4
  store i32 %v3_1115e, i32* %eax.global-to-local, align 8
  %v1_11161 = add i32 %v3_1115e, 80
  %v2_11161 = inttoptr i32 %v1_11161 to i32*
  %v3_11161 = load i32, i32* %v2_11161, align 4
  store i32 %v3_11161, i32* %eax.global-to-local, align 8
  %v1_11164 = add i32 %v3_11161, 1
  %v3_11167 = load i32, i32* %v2_1115e, align 4
  store i32 %v3_11167, i32* %eax.global-to-local, align 8
  %v2_1116a = add i32 %v3_11167, 80
  %v3_1116a = inttoptr i32 %v2_1116a to i32*
  store i32 %v1_11164, i32* %v3_1116a, align 4
  %v0_11172 = load i32, i32* @ebp, align 4
  %v1_11172 = add i32 %v0_11172, -28
  %v2_11172 = inttoptr i32 %v1_11172 to i32*
  %v3_11172 = load i32, i32* %v2_11172, align 4
  %v0_11175 = load i32, i32* %eax.global-to-local, align 8
  %v2_11175 = add i32 %v3_11172, 76
  %v3_11175 = inttoptr i32 %v2_11175 to i32*
  store i32 %v0_11175, i32* %v3_11175, align 4
  store i32 1, i32* @ebx, align 4
  %v0_1117d = load i32, i32* @ebp, align 4
  %v1_1117d = add i32 %v0_1117d, -20
  store i32 %v1_1117d, i32* @eax, align 8
  %v1_11183 = call i32 @function_21fe8(i32 %v1_1117d)
  %v0_11188 = load i32, i32* @ebx, align 4
  store i32 %v0_11188, i32* @eax, align 8
  %v0_1118a = load i32, i32* @ebp, align 4
  %v1_1118a = add i32 %v0_1118a, -12
  %v2_1118a = inttoptr i32 %v1_1118a to i32*
  %v3_1118a = load i32, i32* %v2_1118a, align 4
  %v1_1118d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1118d = icmp eq i32 %v1_1118d, %v3_1118a
  br i1 %v3_1118d, label %bb, label %dec_label_pc_11196

bb:                                               ; preds = %dec_label_pc_11147
  %v1_11194 = call i32 @function_1119b()
  store i32 %v1_11194, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_11196

dec_label_pc_11196:                               ; preds = %bb, %dec_label_pc_11147
  %v2_11194 = phi i32 [ %v1_11194, %bb ], [ %v0_11188, %dec_label_pc_11147 ]
  ret i32 %v2_11194
}

define i32 @function_1119b() local_unnamed_addr {
dec_label_pc_1119b:
  %v0_111a0 = load i32, i32* @eax, align 8
  ret i32 %v0_111a0
}

define i32 @_ZN5boost9exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_111a2:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_3fbe4.2806 to i32), i32* %arg1, align 4
  %v1_111cb = add i32 %arg2, 4
  %v1_111d1 = add i32 %tmp103, 4
  store i32 %v1_111d1, i32* @eax, align 8
  %v2_111db = call i32 @function_2643e(i32 %v1_111d1, i32 %v1_111cb)
  %v1_111e3 = add i32 %arg2, 8
  %v2_111e3 = inttoptr i32 %v1_111e3 to i32*
  %v3_111e3 = load i32, i32* %v2_111e3, align 4
  %v2_111e9 = add i32 %tmp103, 8
  %v3_111e9 = inttoptr i32 %v2_111e9 to i32*
  store i32 %v3_111e3, i32* %v3_111e9, align 4
  %v1_111ef = add i32 %arg2, 12
  %v2_111ef = inttoptr i32 %v1_111ef to i32*
  %v3_111ef = load i32, i32* %v2_111ef, align 4
  %v2_111f5 = add i32 %tmp103, 12
  %v3_111f5 = inttoptr i32 %v2_111f5 to i32*
  store i32 %v3_111ef, i32* %v3_111f5, align 4
  %v1_111fb = add i32 %arg2, 16
  %v2_111fb = inttoptr i32 %v1_111fb to i32*
  %v3_111fb = load i32, i32* %v2_111fb, align 4
  %v2_11201 = add i32 %tmp103, 16
  %v3_11201 = inttoptr i32 %v2_11201 to i32*
  store i32 %v3_111fb, i32* %v3_11201, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_11210

bb:                                               ; preds = %dec_label_pc_111a2
  %v1_1120e = call i32 @function_11215()
  br label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %bb, %dec_label_pc_111a2
  %v2_1120e = phi i32 [ %v1_1120e, %bb ], [ 0, %dec_label_pc_111a2 ]
  ret i32 %v2_1120e

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_11215() local_unnamed_addr {
dec_label_pc_11215:
  %v0_11216 = load i32, i32* @eax, align 8
  ret i32 %v0_11216
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11218:
  %v1_11232 = add i32 %arg1, 4
  store i32 %v1_11232, i32* @eax, align 8
  %v1_11238 = call i32 @function_215f0(i32 %v1_11232)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_11249

bb:                                               ; preds = %dec_label_pc_11218
  %v1_11247 = call i32 @function_1124e()
  br label %dec_label_pc_11249

dec_label_pc_11249:                               ; preds = %bb, %dec_label_pc_11218
  %v2_11247 = phi i32 [ %v1_11247, %bb ], [ 0, %dec_label_pc_11218 ]
  ret i32 %v2_11247
}

define i32 @function_1124e() local_unnamed_addr {
dec_label_pc_1124e:
  %v0_1124f = load i32, i32* @eax, align 8
  ret i32 %v0_1124f
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11250:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_11270 = inttoptr i32 %arg2 to i32*
  %v2_11270 = load i32, i32* %v1_11270, align 4
  store i32 %v2_11270, i32* %arg1, align 4
  %v1_1127a = add i32 %arg2, 4
  %v1_11280 = add i32 %tmp103, 4
  store i32 %v1_11280, i32* @eax, align 8
  %v2_1128a = call i32 @function_21668(i32 %v1_11280, i32 %v1_1127a)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1129b

bb:                                               ; preds = %dec_label_pc_11250
  %v1_11299 = call i32 @function_112a0()
  br label %dec_label_pc_1129b

dec_label_pc_1129b:                               ; preds = %bb, %dec_label_pc_11250
  %v2_11299 = phi i32 [ %v1_11299, %bb ], [ 0, %dec_label_pc_11250 ]
  ret i32 %v2_11299

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_112a0() local_unnamed_addr {
dec_label_pc_112a0:
  %v0_112a1 = load i32, i32* @eax, align 8
  ret i32 %v0_112a1
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_112a2:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_3fa9c.2811 to i32), i32* %arg1, align 4
  %v1_112c8 = call i32 @function_2172e(i32 %tmp100)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_112f0

bb:                                               ; preds = %dec_label_pc_112a2
  %v1_112ee = call i32 @function_112f5()
  br label %dec_label_pc_112f0

dec_label_pc_112f0:                               ; preds = %bb, %dec_label_pc_112a2
  %v2_112ee = phi i32 [ %v1_112ee, %bb ], [ 0, %dec_label_pc_112a2 ]
  ret i32 %v2_112ee
}

define i32 @function_112f5() local_unnamed_addr {
dec_label_pc_112f5:
  %v0_112f6 = load i32, i32* @eax, align 8
  ret i32 %v0_112f6
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_112f8:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_11315 = call i32 @function_2259a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_11335() local_unnamed_addr {
dec_label_pc_11335:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11335 = load i32, i32* %ecx.global-to-local, align 8
  %v1_11335 = add i32 %v0_11335, -1
  store i32 %v1_11335, i32* %ecx.global-to-local, align 8
  %v0_11337 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11337
}

define i32 @_ZNK5boost6system14error_categoryeqERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11338:
  %v15_11358 = icmp eq i32 %arg1, %arg2
  %v1_1135b = zext i1 %v15_11358 to i32
  %v3_1135b = and i32 %arg1, -256
  %v4_1135b = or i32 %v1_1135b, %v3_1135b
  store i32 %v4_1135b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1136a

bb:                                               ; preds = %dec_label_pc_11338
  %v3_11368 = call i32 @function_1136f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1136a

dec_label_pc_1136a:                               ; preds = %bb, %dec_label_pc_11338
  %v4_11368 = phi i32 [ %v3_11368, %bb ], [ %v4_1135b, %dec_label_pc_11338 ]
  ret i32 %v4_11368

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1136f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1136f:
  %v0_11370 = load i32, i32* @eax, align 8
  ret i32 %v0_11370
}

define i32 @_ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11372:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_113a3 = add i32 %tmp104, 4
  %v3_113a3 = inttoptr i32 %v2_113a3 to i32*
  store i32 %arg3, i32* %v3_113a3, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_113b2

bb:                                               ; preds = %dec_label_pc_11372
  %v4_113b0 = call i32 @function_113b7(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_113b2

dec_label_pc_113b2:                               ; preds = %bb, %dec_label_pc_11372
  %v5_113b0 = phi i32 [ %v4_113b0, %bb ], [ 0, %dec_label_pc_11372 ]
  ret i32 %v5_113b0
}

define i32 @function_113b7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_113b7:
  %v0_113b8 = load i32, i32* @eax, align 8
  ret i32 %v0_113b8
}

define i32 @_ZN5boost6systemeqERKNS0_15error_conditionES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_113b9:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_113d9 = add i32 %tmp102, 4
  %v2_113d9 = inttoptr i32 %v1_113d9 to i32*
  %v3_113d9 = load i32, i32* %v2_113d9, align 4
  %v1_113df = add i32 %arg2, 4
  %v2_113df = inttoptr i32 %v1_113df to i32*
  %v3_113df = load i32, i32* %v2_113df, align 4
  %v12_113e2 = icmp eq i32 %v3_113d9, %v3_113df
  %v1_113e4 = icmp eq i1 %v12_113e2, false
  br i1 %v1_113e4, label %dec_label_pc_113fb, label %dec_label_pc_113e6

dec_label_pc_113e6:                               ; preds = %dec_label_pc_113b9
  %v2_113e9 = load i32, i32* %arg1, align 4
  %v1_113ee = inttoptr i32 %arg2 to i32*
  %v2_113ee = load i32, i32* %v1_113ee, align 4
  %v12_113f0 = icmp eq i32 %v2_113e9, %v2_113ee
  %v1_113f2 = icmp eq i1 %v12_113f0, false
  br i1 %v1_113f2, label %dec_label_pc_113fb, label %dec_label_pc_11400

dec_label_pc_113fb:                               ; preds = %dec_label_pc_113e6, %dec_label_pc_113b9
  br label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %dec_label_pc_113e6, %dec_label_pc_113fb
  %storemerge = phi i32 [ 0, %dec_label_pc_113fb ], [ 1, %dec_label_pc_113e6 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1140c

bb:                                               ; preds = %dec_label_pc_11400
  %v1_1140a = call i32 @function_11411()
  br label %dec_label_pc_1140c

dec_label_pc_1140c:                               ; preds = %bb, %dec_label_pc_11400
  %v2_1140a = phi i32 [ %v1_1140a, %bb ], [ %storemerge, %dec_label_pc_11400 ]
  ret i32 %v2_1140a

; uselistorder directives
  uselistorder label %dec_label_pc_11400, { 1, 0 }
}

define i32 @function_11411() local_unnamed_addr {
dec_label_pc_11411:
  %v0_11412 = load i32, i32* @eax, align 8
  ret i32 %v0_11412
}

define i32 @_ZNK5boost6system10error_code5valueEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11414:
  %ebp.global-to-local = alloca i32, align 4
  %v0_11414 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1142e = load i32, i32* %arg1, align 4
  store i32 %v0_11414, i32* %ebp.global-to-local, align 4
  ret i32 %v2_1142e

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @_ZNK5boost6system10error_code8categoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11444:
  %v1_1145e = add i32 %arg1, 4
  %v2_1145e = inttoptr i32 %v1_1145e to i32*
  %v3_1145e = load i32, i32* %v2_1145e, align 4
  store i32 %v3_1145e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1146d

bb:                                               ; preds = %dec_label_pc_11444
  %v2_1146b = call i32 @function_11472(i32 %arg1)
  br label %dec_label_pc_1146d

dec_label_pc_1146d:                               ; preds = %bb, %dec_label_pc_11444
  %v3_1146b = phi i32 [ %v2_1146b, %bb ], [ %v3_1145e, %dec_label_pc_11444 ]
  ret i32 %v3_1146b
}

define i32 @function_11472(i32 %arg1) local_unnamed_addr {
dec_label_pc_11472:
  %v0_11473 = load i32, i32* @eax, align 8
  ret i32 %v0_11473
}

define i32 @_ZNK5boost6system10error_code7messageEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11474:
  %v1_11495 = add i32 %arg2, 4
  %v2_11495 = inttoptr i32 %v1_11495 to i32*
  %v3_114ad = load i32, i32* %v2_11495, align 4
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_114d2

bb:                                               ; preds = %dec_label_pc_11474
  %v4_114d0 = call i32 @function_114d7(i32 %arg1, i32 %v3_114ad, i32 %arg2)
  br label %dec_label_pc_114d2

dec_label_pc_114d2:                               ; preds = %bb, %dec_label_pc_11474
  %v5_114d0 = phi i32 [ %v4_114d0, %bb ], [ %arg1, %dec_label_pc_11474 ]
  ret i32 %v5_114d0
}

define i32 @function_114d7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_114d7:
  %v0_114db = load i32, i32* @eax, align 8
  ret i32 %v0_114db
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_114de:
  ret i32 %arg1
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11532:
  %stack_var_-24 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v2_1155f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1155f, i32* @eax, align 8
  %v4_11585 = call i32 @function_228eb(i32 %v2_1155f, i32 %arg3, i32 %tmp108, i32 %arg2)
  store i32 %v4_11585, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_11596

bb:                                               ; preds = %dec_label_pc_11532
  %v1_11594 = call i32 @function_1159b()
  br label %dec_label_pc_11596

dec_label_pc_11596:                               ; preds = %bb, %dec_label_pc_11532
  %v2_11594 = phi i32 [ %v1_11594, %bb ], [ %v4_11585, %dec_label_pc_11532 ]
  ret i32 %v2_11594
}

define i32 @function_1159b() local_unnamed_addr {
dec_label_pc_1159b:
  %v0_1159c = load i32, i32* @eax, align 8
  ret i32 %v0_1159c
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1159e:
  store i32 %arg2, i32* @eax, align 8
  %v1_115c7 = call i32 @function_229e2(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_115d6 = call i32 @function_228d6(i32 %arg1, i32 %v1_115c7)
  %v4_115db = trunc i32 %v2_115d6 to i8
  %v5_115db = icmp eq i8 %v4_115db, 0
  br i1 %v5_115db, label %dec_label_pc_115f6, label %dec_label_pc_115df

dec_label_pc_115df:                               ; preds = %dec_label_pc_1159e
  store i32 %arg2, i32* @eax, align 8
  %v1_115e5 = call i32 @function_229b2(i32 %arg2)
  %v15_115ea = icmp eq i32 %v1_115e5, %arg3
  %v1_115ed = icmp eq i1 %v15_115ea, false
  br i1 %v1_115ed, label %dec_label_pc_115f6, label %dec_label_pc_115fb

dec_label_pc_115f6:                               ; preds = %dec_label_pc_115df, %dec_label_pc_1159e
  br label %dec_label_pc_115fb

dec_label_pc_115fb:                               ; preds = %dec_label_pc_115df, %dec_label_pc_115f6
  %storemerge = phi i32 [ 0, %dec_label_pc_115f6 ], [ 1, %dec_label_pc_115df ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_11607

bb:                                               ; preds = %dec_label_pc_115fb
  %v1_11605 = call i32 @function_1160c()
  br label %dec_label_pc_11607

dec_label_pc_11607:                               ; preds = %bb, %dec_label_pc_115fb
  %v2_11605 = phi i32 [ %v1_11605, %bb ], [ %storemerge, %dec_label_pc_115fb ]
  ret i32 %v2_11605

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_115fb, { 1, 0 }
}

define i32 @function_1160c() local_unnamed_addr {
dec_label_pc_1160c:
  %v0_1160d = load i32, i32* @eax, align 8
  ret i32 %v0_1160d
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_1160e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fa7c_type* @global_var_3fa7c.2812 to i32), i32* %arg1, align 4
  %v1_11633 = add i32 %tmp99, 16
  ret i32 %v1_11633
}

define i32 @function_11660() local_unnamed_addr {
dec_label_pc_11660:
  %v0_11660 = call i32 @function_1168a()
  ret i32 %v0_11660
}

define i32 @function_1168a() local_unnamed_addr {
dec_label_pc_1168a:
  %v0_1168a = load i32, i32* @ebp, align 4
  %v1_1168a = add i32 %v0_1168a, -12
  %v2_1168a = inttoptr i32 %v1_1168a to i32*
  %v3_1168a = load i32, i32* %v2_1168a, align 4
  %v1_1168d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1168d = xor i32 %v1_1168d, %v3_1168a
  %v3_1168d = icmp eq i32 %v2_1168d, 0
  store i32 %v2_1168d, i32* @eax, align 8
  br i1 %v3_1168d, label %bb, label %dec_label_pc_11696

bb:                                               ; preds = %dec_label_pc_1168a
  %v1_11694 = call i32 @function_1169b()
  br label %dec_label_pc_11696

dec_label_pc_11696:                               ; preds = %bb, %dec_label_pc_1168a
  %v2_11694 = phi i32 [ %v1_11694, %bb ], [ %v2_1168d, %dec_label_pc_1168a ]
  ret i32 %v2_11694
}

define i32 @function_1169b() local_unnamed_addr {
dec_label_pc_1169b:
  %v0_116a1 = load i32, i32* @eax, align 8
  ret i32 %v0_116a1
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32 %arg1) {
dec_label_pc_116a2:
  ret i32 %arg1
}

define i32 @function_116df() local_unnamed_addr {
dec_label_pc_116df:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_116df = load i32, i32* %ecx.global-to-local, align 8
  %v1_116df = add i32 %v0_116df, -1
  store i32 %v1_116df, i32* %ecx.global-to-local, align 8
  %v0_116e1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_116e1
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_116e2:
  %v1_116fd = add i32 %arg1, 16
  ret i32 %v1_116fd
}

define i32 @function_1171c() local_unnamed_addr {
dec_label_pc_1171c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1171f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1171f
}

define i32 @function_11767() local_unnamed_addr {
dec_label_pc_11767:
  %eax.global-to-local = alloca i32, align 4
  %v0_11767 = load i32, i32* %eax.global-to-local, align 8
  %v11_11767 = and i32 %v0_11767, -24
  store i32 %v11_11767, i32* @eax, align 8
  %v0_11769 = call i32 @function_83011881()
  store i32 %v0_11769, i32* %eax.global-to-local, align 8
  ret i32 %v0_11769
}

define i32 @function_11790() local_unnamed_addr {
dec_label_pc_11790:
  %v0_11790 = load i32, i32* @ebp, align 4
  %v1_11790 = add i32 %v0_11790, -28
  %v2_11790 = inttoptr i32 %v1_11790 to i32*
  %v3_11790 = load i32, i32* %v2_11790, align 4
  %v1_11793 = add i32 %v3_11790, 16
  store i32 %v1_11793, i32* @eax, align 8
  %v1_117a2 = add i32 %v0_11790, -12
  %v2_117a2 = inttoptr i32 %v1_117a2 to i32*
  %v3_117a2 = load i32, i32* %v2_117a2, align 4
  %v1_117a5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_117a5 = icmp eq i32 %v1_117a5, %v3_117a2
  br i1 %v3_117a5, label %bb, label %dec_label_pc_117ae

bb:                                               ; preds = %dec_label_pc_11790
  %v2_117ac = call i32 @function_117f7(i32 %v1_11793)
  store i32 %v2_117ac, i32* @eax, align 8
  br label %dec_label_pc_117ae

dec_label_pc_117ae:                               ; preds = %bb, %dec_label_pc_11790
  %v0_117ae = call i32 @function_117f2()
  ret i32 %v0_117ae
}

define i32 @function_117b1() local_unnamed_addr {
dec_label_pc_117b1:
  %eax.global-to-local = alloca i32, align 4
  %v0_117b1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_117b1
}

define i32 @function_117bd() local_unnamed_addr {
dec_label_pc_117bd:
  %ebx.global-to-local = alloca i32, align 4
  %v0_117bd = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_117bd
}

define i32 @function_117d5() local_unnamed_addr {
dec_label_pc_117d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_117d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_117d5
}

define i32 @function_117db() local_unnamed_addr {
dec_label_pc_117db:
  %eax.global-to-local = alloca i32, align 4
  %v0_117db = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_117db
}

define i32 @function_117f2() local_unnamed_addr {
dec_label_pc_117f2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_117f7(i32 %arg1) local_unnamed_addr {
dec_label_pc_117f7:
  %v0_117fb = load i32, i32* @eax, align 8
  ret i32 %v0_117fb
}

define i32 @_ZN9CFlatDataC1EPvS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_117fc:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_1182d = add i32 %tmp104, 4
  %v3_1182d = inttoptr i32 %v2_1182d to i32*
  store i32 %arg3, i32* %v3_1182d, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1183c

bb:                                               ; preds = %dec_label_pc_117fc
  %v4_1183a = call i32 @function_11841(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1183c

dec_label_pc_1183c:                               ; preds = %bb, %dec_label_pc_117fc
  %v5_1183a = phi i32 [ %v4_1183a, %bb ], [ 0, %dec_label_pc_117fc ]
  ret i32 %v5_1183a
}

define i32 @function_11841(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11841:
  %v0_11842 = load i32, i32* @eax, align 8
  ret i32 %v0_11842
}

define i32 @_ZN11CDataStreamC1Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11844:
  %v1_1186d = call i32 @function_26ff8(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v3_11886 = call i32 @function_231e2(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN11CDataStreamC1ERKSt6vectorIhSaIhEEii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1189e:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v2_118c8 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_118c8, i32* @eax, align 8
  %v1_118ce = call i32 @function_27102(i32 %v2_118c8)
  store i32 0, i32* %stack_var_-24, align 4
  %v2_118da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_118da, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 4
  %v2_118e7 = call i32 @function_271fa(i32 %v2_118da, i32 %arg2)
  %v2_118ef = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_118da, i32* @eax, align 8
  %v2_118fc = call i32 @function_271be(i32 %v2_118da, i32 %v2_118ef)
  store i32 %v2_118fc, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v2_1190a = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1190a, i32* @eax, align 8
  %v2_11917 = call i32 @function_2716e(i32 %v2_1190a, i32 %arg2)
  %v2_1191f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1190a, i32* @eax, align 8
  %v2_1192c = call i32 @function_271be(i32 %v2_1190a, i32 %v2_1191f)
  store i32 %v2_1192c, i32* @eax, align 8
  store i32 %arg1, i32* @edx, align 4
  %v0_1193b = load i32, i32* @ebx, align 4
  %v4_11946 = call i32 @function_2724a(i32 %arg1, i32 %v2_1192c, i32 %v0_1193b, i32 %v2_118c8)
  %v1_11951 = call i32 @function_27138(i32 %v2_118c8)
  store i32 %arg1, i32* @eax, align 8
  %v3_1196a = call i32 @function_2323c(i32 %arg1, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1197b

bb:                                               ; preds = %dec_label_pc_1189e
  %v1_11979 = call i32 @function_11999()
  store i32 %v1_11979, i32* @eax, align 8
  br label %dec_label_pc_1197b

dec_label_pc_1197b:                               ; preds = %bb, %dec_label_pc_1189e
  %v0_1197b = call i32 @function_11994()
  ret i32 %v0_1197b

; uselistorder directives
  uselistorder i32 %v2_118c8, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32)* @function_271be, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
}

define i32 @function_1197e() local_unnamed_addr {
dec_label_pc_1197e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1197e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1197e
}

define i32 @function_11994() local_unnamed_addr {
dec_label_pc_11994:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11999() local_unnamed_addr {
dec_label_pc_11999:
  %v0_1199d = load i32, i32* @eax, align 8
  ret i32 %v0_1199d
}

define i32 @_ZN11CDataStream4InitEii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1199e:
  %v1_119c4 = add i32 %arg1, 12
  %v2_119c4 = inttoptr i32 %v1_119c4 to i32*
  store i32 0, i32* %v2_119c4, align 4
  %v2_119d1 = add i32 %arg1, 20
  %v3_119d1 = inttoptr i32 %v2_119d1 to i32*
  store i32 %arg2, i32* %v3_119d1, align 4
  %v2_119da = add i32 %arg1, 24
  %v3_119da = inttoptr i32 %v2_119da to i32*
  store i32 %arg3, i32* %v3_119da, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_119e0 = add i32 %arg1, 16
  %v2_119e0 = inttoptr i32 %v1_119e0 to i16*
  store i16 0, i16* %v2_119e0, align 2
  %v2_119f5 = call i32 @function_1ff81(i32 1, i32 4)
  %v1_119ff = trunc i32 %v2_119f5 to i16
  %v3_119ff = add i32 %arg1, 18
  %v4_119ff = inttoptr i32 %v3_119ff to i16*
  store i16 %v1_119ff, i16* %v4_119ff, align 2
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN11CDataStreamD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a16:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_11a44

bb:                                               ; preds = %dec_label_pc_11a16
  %v2_11a42 = call i32 @function_11a49(i32 %arg1)
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %bb, %dec_label_pc_11a16
  %v3_11a42 = phi i32 [ %v2_11a42, %bb ], [ 0, %dec_label_pc_11a16 ]
  ret i32 %v3_11a42
}

define i32 @function_11a49(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a49:
  %v0_11a4a = load i32, i32* @eax, align 8
  ret i32 %v0_11a4a
}

define i32 @_ZN11CDataStream5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a4c:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_11a6c = add i32 %arg2, 12
  %v2_11a6c = inttoptr i32 %v1_11a6c to i32*
  %v3_11a6c = load i32, i32* %v2_11a6c, align 4
  store i32 %v3_11a6c, i32* %stack_var_-20, align 4
  %v2_11a75 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_11a75, i32* @eax, align 8
  %v2_11a7f = call i32 @function_274cc(i32 %v2_11a75, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_11a8a = ptrtoint i32* %stack_var_-20 to i32
  %v3_11a9b = call i32 @function_27514(i32 %arg1, i32 %v2_11a75, i32 %v2_11a8a)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_11ab2

bb:                                               ; preds = %dec_label_pc_11a4c
  %v1_11ab0 = call i32 @function_11ab7()
  br label %dec_label_pc_11ab2

dec_label_pc_11ab2:                               ; preds = %bb, %dec_label_pc_11a4c
  %v2_11ab0 = phi i32 [ %v1_11ab0, %bb ], [ %arg1, %dec_label_pc_11a4c ]
  ret i32 %v2_11ab0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
}

define i32 @function_11ab7() local_unnamed_addr {
dec_label_pc_11ab7:
  %v0_11ab8 = load i32, i32* @eax, align 8
  ret i32 %v0_11ab8
}

define i32 @_ZN11CDataStream3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11abc:
  store i32 %arg1, i32* @eax, align 8
  %v2_11ae6 = call i32 @function_274f2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_11afd

bb:                                               ; preds = %dec_label_pc_11abc
  %v1_11afb = call i32 @function_11b02()
  br label %dec_label_pc_11afd

dec_label_pc_11afd:                               ; preds = %bb, %dec_label_pc_11abc
  %v2_11afb = phi i32 [ %v1_11afb, %bb ], [ %arg1, %dec_label_pc_11abc ]
  ret i32 %v2_11afb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_11b02() local_unnamed_addr {
dec_label_pc_11b02:
  %v0_11b03 = load i32, i32* @eax, align 8
  ret i32 %v0_11b03
}

define i32 @_ZN11CDataStream8setstateEsPKc(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b06:
  %stack_var_-17 = alloca i32, align 4
  %v1_11b2f = add i32 %arg1, 16
  %v2_11b2f = inttoptr i32 %v1_11b2f to i16*
  %v3_11b2f = load i16, i16* %v2_11b2f, align 2
  %v6_11b35 = or i16 %v3_11b2f, %arg2
  store i16 %v6_11b35, i16* %v2_11b2f, align 2
  %v1_11b4a = add i32 %arg1, 18
  %v2_11b4a = inttoptr i32 %v1_11b4a to i16*
  %v3_11b4a = load i16, i16* %v2_11b4a, align 2
  %v2_11b4e3 = and i16 %v3_11b4a, %v6_11b35
  %v5_11b50 = icmp eq i16 %v2_11b4e3, 0
  br i1 %v5_11b50, label %bb, label %dec_label_pc_11b59

bb:                                               ; preds = %dec_label_pc_11b06
  %v4_11b0e = sext i16 %arg2 to i32
  %v5_11b53 = call i32 @function_11be8(i32 %arg3, i32 %v4_11b0e, i32 %arg1)
  br label %dec_label_pc_11b59

dec_label_pc_11b59:                               ; preds = %bb, %dec_label_pc_11b06
  %v2_11b67 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_11b67

; uselistorder directives
  uselistorder i16 %arg2, { 1, 0 }
}

define i32 @function_11be8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11be8:
  %v0_11be8 = load i32, i32* @ebp, align 4
  %v1_11be8 = add i32 %v0_11be8, -12
  %v2_11be8 = inttoptr i32 %v1_11be8 to i32*
  %v3_11be8 = load i32, i32* %v2_11be8, align 4
  %v1_11beb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11beb = xor i32 %v1_11beb, %v3_11be8
  %v3_11beb = icmp eq i32 %v2_11beb, 0
  store i32 %v2_11beb, i32* @eax, align 8
  br i1 %v3_11beb, label %bb, label %dec_label_pc_11bf4

bb:                                               ; preds = %dec_label_pc_11be8
  %v1_11bf2 = call i32 @function_11bf9()
  br label %dec_label_pc_11bf4

dec_label_pc_11bf4:                               ; preds = %bb, %dec_label_pc_11be8
  %v2_11bf2 = phi i32 [ %v1_11bf2, %bb ], [ %v2_11beb, %dec_label_pc_11be8 ]
  ret i32 %v2_11bf2
}

define i32 @function_11bf9() local_unnamed_addr {
dec_label_pc_11bf9:
  %v0_11bff = load i32, i32* @eax, align 8
  ret i32 %v0_11bff
}

define i32 @_ZNSt9exceptionC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11c00:
  ret i32 %arg1
}

define i32 @function_11c37() local_unnamed_addr {
dec_label_pc_11c37:
  %eax.global-to-local = alloca i32, align 4
  %v0_11c38 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11c38
}

define i32 @_ZN11CDataStream4readEPci(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11c3a:
  %v11_11c5e = icmp slt i32 %arg3, 0
  %v1_11c62 = icmp eq i1 %v11_11c5e, false
  br i1 %v1_11c62, label %bb, label %dec_label_pc_11c64

bb:                                               ; preds = %dec_label_pc_11c3a
  %v5_11c62 = call i32 @function_11c88(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_11c64

dec_label_pc_11c64:                               ; preds = %bb, %dec_label_pc_11c3a
  %v3_11c7c = phi i32 [ %v5_11c62, %bb ], [ 0, %dec_label_pc_11c3a ]
  ret i32 %v3_11c7c
}

define i32 @function_11c88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11c88:
  %v0_11c88 = load i32, i32* @ebp, align 4
  %v1_11c88 = add i32 %v0_11c88, -28
  %v2_11c88 = inttoptr i32 %v1_11c88 to i32*
  %v3_11c88 = load i32, i32* %v2_11c88, align 4
  %v1_11c8b = add i32 %v3_11c88, 12
  %v2_11c8b = inttoptr i32 %v1_11c8b to i32*
  %v3_11c8b = load i32, i32* %v2_11c8b, align 4
  %v1_11c8e = add i32 %v0_11c88, -36
  %v2_11c8e = inttoptr i32 %v1_11c8e to i32*
  %v3_11c8e = load i32, i32* %v2_11c8e, align 4
  %v2_11c91 = add i32 %v3_11c8e, %v3_11c8b
  %v2_11c93 = add i32 %v0_11c88, -16
  %v3_11c93 = inttoptr i32 %v2_11c93 to i32*
  store i32 %v2_11c91, i32* %v3_11c93, align 4
  %v0_11c96 = load i32, i32* @ebp, align 4
  %v1_11c96 = add i32 %v0_11c96, -28
  %v2_11c96 = inttoptr i32 %v1_11c96 to i32*
  %v3_11c96 = load i32, i32* %v2_11c96, align 4
  store i32 %v3_11c96, i32* @eax, align 8
  %v1_11c9c = call i32 @function_2775e(i32 %v3_11c96)
  %v1_11ca1 = load i32, i32* @ebp, align 4
  %v2_11ca1 = add i32 %v1_11ca1, -16
  %v3_11ca1 = inttoptr i32 %v2_11ca1 to i32*
  %v4_11ca1 = load i32, i32* %v3_11ca1, align 4
  %tmp9 = icmp ule i32 %v1_11c9c, %v4_11ca1
  %v5_11ca7 = icmp eq i1 %tmp9, false
  br i1 %v5_11ca7, label %bb, label %dec_label_pc_11caf

bb:                                               ; preds = %dec_label_pc_11c88
  %v1_11ca9 = call i32 @function_11d54()
  %v0_11caf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_11caf

dec_label_pc_11caf:                               ; preds = %bb, %dec_label_pc_11c88
  %v0_11caf = phi i32 [ %v0_11caf.pre, %bb ], [ %v1_11ca1, %dec_label_pc_11c88 ]
  %v1_11caf = add i32 %v0_11caf, -28
  %v2_11caf = inttoptr i32 %v1_11caf to i32*
  %v3_11caf = load i32, i32* %v2_11caf, align 4
  store i32 %v3_11caf, i32* @eax, align 8
  %v1_11cb5 = call i32 @function_2775e(i32 %v3_11caf)
  %v1_11cba = load i32, i32* @ebp, align 4
  %v2_11cba = add i32 %v1_11cba, -16
  %v3_11cba = inttoptr i32 %v2_11cba to i32*
  %v4_11cba = load i32, i32* %v3_11cba, align 4
  %v10_11cba = icmp ult i32 %v1_11cb5, %v4_11cba
  %v5_11cc0 = icmp eq i1 %v10_11cba, false
  br i1 %v5_11cc0, label %bb10, label %dec_label_pc_11cc4

bb10:                                             ; preds = %dec_label_pc_11caf
  %v1_11cc2 = call i32 @function_11d0f()
  %v0_11cd4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_11cc4

dec_label_pc_11cc4:                               ; preds = %bb10, %dec_label_pc_11caf
  %v0_11cd4 = phi i32 [ %v0_11cd4.pre, %bb10 ], [ %v1_11cba, %dec_label_pc_11caf ]
  %v1_11cd4 = add i32 %v0_11cd4, -28
  %v2_11cd4 = inttoptr i32 %v1_11cd4 to i32*
  %v3_11cd4 = load i32, i32* %v2_11cd4, align 4
  %v4_11cda = call i32 @function_23740(i32 %v3_11cd4, i32 4, i32 ptrtoint ([34 x i8]* @global_var_6550.2816 to i32))
  %v0_11cdf = load i32, i32* @ebp, align 4
  %v1_11cee = add i32 %v0_11cdf, -32
  %v2_11cee = inttoptr i32 %v1_11cee to i32*
  %v3_11cee = load i32, i32* %v2_11cee, align 4
  ret i32 %v3_11cee

; uselistorder directives
  uselistorder i32 (i32)* @function_2775e, { 1, 0 }
}

define i32 @function_11d0f() local_unnamed_addr {
dec_label_pc_11d0f:
  %v0_11d0f = load i32, i32* @ebp, align 4
  %v1_11d12 = add i32 %v0_11d0f, -28
  %v2_11d12 = inttoptr i32 %v1_11d12 to i32*
  %v3_11d12 = load i32, i32* %v2_11d12, align 4
  %v1_11d15 = add i32 %v3_11d12, 12
  %v2_11d15 = inttoptr i32 %v1_11d15 to i32*
  %v3_11d15 = load i32, i32* %v2_11d15, align 4
  store i32 %v3_11d12, i32* @eax, align 8
  %v2_11d22 = call i32 @function_2779c(i32 %v3_11d12, i32 %v3_11d15)
  %v0_11d2f = load i32, i32* @ebp, align 4
  %v1_11d2f = add i32 %v0_11d2f, -32
  %v2_11d2f = inttoptr i32 %v1_11d2f to i32*
  %v3_11d2f = load i32, i32* %v2_11d2f, align 4
  ret i32 %v3_11d2f

; uselistorder directives
  uselistorder i32 %v3_11d12, { 1, 0, 2 }
}

define i32 @function_11d3a() local_unnamed_addr {
dec_label_pc_11d3a:
  %v0_11d3a = load i32, i32* @ebp, align 4
  %v1_11d3a = add i32 %v0_11d3a, -28
  %v2_11d3a = inttoptr i32 %v1_11d3a to i32*
  %v3_11d3a = load i32, i32* %v2_11d3a, align 4
  %v1_11d3d = add i32 %v3_11d3a, 12
  %v2_11d3d = inttoptr i32 %v1_11d3d to i32*
  store i32 0, i32* %v2_11d3d, align 4
  %v0_11d44 = load i32, i32* @ebp, align 4
  %v1_11d44 = add i32 %v0_11d44, -28
  %v2_11d44 = inttoptr i32 %v1_11d44 to i32*
  %v3_11d44 = load i32, i32* %v2_11d44, align 4
  %v1_11d4a = call i32 @function_277d4(i32 %v3_11d44)
  %v0_11d4f = load i32, i32* @ebp, align 4
  %v1_11d4f = add i32 %v0_11d4f, -28
  %v2_11d4f = inttoptr i32 %v1_11d4f to i32*
  %v3_11d4f = load i32, i32* %v2_11d4f, align 4
  store i32 %v3_11d4f, i32* @eax, align 8
  %v0_11d52 = call i32 @function_11d8b()
  ret i32 %v0_11d52
}

define i32 @function_11d54() local_unnamed_addr {
dec_label_pc_11d54:
  %v0_11d54 = load i32, i32* @ebp, align 4
  %v1_11d57 = add i32 %v0_11d54, -28
  %v2_11d57 = inttoptr i32 %v1_11d57 to i32*
  %v3_11d57 = load i32, i32* %v2_11d57, align 4
  %v1_11d5a = add i32 %v3_11d57, 12
  %v2_11d5a = inttoptr i32 %v1_11d5a to i32*
  %v3_11d5a = load i32, i32* %v2_11d5a, align 4
  store i32 %v3_11d57, i32* @eax, align 8
  %v2_11d67 = call i32 @function_2779c(i32 %v3_11d57, i32 %v3_11d5a)
  %v0_11d74 = load i32, i32* @ebp, align 4
  %v1_11d74 = add i32 %v0_11d74, -32
  %v2_11d74 = inttoptr i32 %v1_11d74 to i32*
  %v3_11d74 = load i32, i32* %v2_11d74, align 4
  ret i32 %v3_11d74

; uselistorder directives
  uselistorder i32 %v3_11d57, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_2779c, { 1, 0 }
}

define i32 @function_11d8b() local_unnamed_addr {
dec_label_pc_11d8b:
  %v0_11d8b = load i32, i32* @ebp, align 4
  %v1_11d8b = add i32 %v0_11d8b, -12
  %v2_11d8b = inttoptr i32 %v1_11d8b to i32*
  %v3_11d8b = load i32, i32* %v2_11d8b, align 4
  %v1_11d8e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11d8e = icmp eq i32 %v1_11d8e, %v3_11d8b
  br i1 %v3_11d8e, label %bb, label %dec_label_pc_11d8b.dec_label_pc_11d97_crit_edge

dec_label_pc_11d8b.dec_label_pc_11d97_crit_edge:  ; preds = %dec_label_pc_11d8b
  %v2_11d95.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_11d97

bb:                                               ; preds = %dec_label_pc_11d8b
  %v1_11d95 = call i32 @function_11d9c()
  br label %dec_label_pc_11d97

dec_label_pc_11d97:                               ; preds = %dec_label_pc_11d8b.dec_label_pc_11d97_crit_edge, %bb
  %v2_11d95 = phi i32 [ %v2_11d95.pre, %dec_label_pc_11d8b.dec_label_pc_11d97_crit_edge ], [ %v1_11d95, %bb ]
  ret i32 %v2_11d95

; uselistorder directives
  uselistorder label %dec_label_pc_11d97, { 1, 0 }
}

define i32 @function_11d9c() local_unnamed_addr {
dec_label_pc_11d9c:
  %v0_11da1 = load i32, i32* @eax, align 8
  ret i32 %v0_11da1
}

define i32 @_ZN11CDataStream5writeEPKci(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11da2:
  %v11_11dc6 = icmp slt i32 %arg3, 0
  %v1_11dca = icmp eq i1 %v11_11dc6, false
  br i1 %v1_11dca, label %bb, label %dec_label_pc_11dcc

bb:                                               ; preds = %dec_label_pc_11da2
  %v5_11dca = call i32 @function_11df0(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %bb, %dec_label_pc_11da2
  %v3_11de4 = phi i32 [ %v5_11dca, %bb ], [ 0, %dec_label_pc_11da2 ]
  ret i32 %v3_11de4
}

define i32 @function_11df0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11df0:
  %v0_11df0 = load i32, i32* @ebp, align 4
  %v1_11df0 = add i32 %v0_11df0, -36
  %v2_11df0 = inttoptr i32 %v1_11df0 to i32*
  %v3_11df0 = load i32, i32* %v2_11df0, align 4
  %v2_11df5 = add i32 %v0_11df0, -32
  %v3_11df5 = inttoptr i32 %v2_11df5 to i32*
  %v4_11df5 = load i32, i32* %v3_11df5, align 4
  %v5_11df5 = add i32 %v4_11df5, %v3_11df0
  store i32 %v5_11df5, i32* @ebx, align 4
  %v1_11df8 = add i32 %v0_11df0, -28
  %v2_11df8 = inttoptr i32 %v1_11df8 to i32*
  %v3_11df8 = load i32, i32* %v2_11df8, align 4
  %v1_11dfb = add i32 %v0_11df0, -16
  store i32 %v1_11dfb, i32* @eax, align 8
  %v2_11e05 = call i32 @function_277d8(i32 %v1_11dfb, i32 %v3_11df8)
  %v0_11e0d = load i32, i32* @ebp, align 4
  %v1_11e0d = add i32 %v0_11e0d, -28
  %v2_11e0d = inttoptr i32 %v1_11e0d to i32*
  %v3_11e0d = load i32, i32* %v2_11e0d, align 4
  %v0_11e10 = load i32, i32* @ebx, align 4
  %v1_11e14 = add i32 %v0_11e0d, -32
  %v2_11e14 = inttoptr i32 %v1_11e14 to i32*
  %v3_11e14 = load i32, i32* %v2_11e14, align 4
  %v1_11e1b = add i32 %v0_11e0d, -16
  %v2_11e1b = inttoptr i32 %v1_11e1b to i32*
  %v3_11e1b = load i32, i32* %v2_11e1b, align 4
  %v4_11e25 = call i32 @function_2797a(i32 %v3_11e0d, i32 %v3_11e1b, i32 %v3_11e14, i32 %v0_11e10)
  %v0_11e2a = load i32, i32* @ebp, align 4
  %v1_11e2a = add i32 %v0_11e2a, -28
  %v2_11e2a = inttoptr i32 %v1_11e2a to i32*
  %v3_11e2a = load i32, i32* %v2_11e2a, align 4
  store i32 %v3_11e2a, i32* @eax, align 8
  %v1_11e2d = add i32 %v0_11e2a, -12
  %v2_11e2d = inttoptr i32 %v1_11e2d to i32*
  %v3_11e2d = load i32, i32* %v2_11e2d, align 4
  %v1_11e30 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11e30 = icmp eq i32 %v1_11e30, %v3_11e2d
  br i1 %v3_11e30, label %bb, label %dec_label_pc_11e39

bb:                                               ; preds = %dec_label_pc_11df0
  %v1_11e37 = call i32 @function_11e3e()
  br label %dec_label_pc_11e39

dec_label_pc_11e39:                               ; preds = %bb, %dec_label_pc_11df0
  %v2_11e37 = phi i32 [ %v1_11e37, %bb ], [ %v3_11e2a, %dec_label_pc_11df0 ]
  ret i32 %v2_11e37

; uselistorder directives
  uselistorder i32 %v0_11e0d, { 1, 0, 2 }
  uselistorder i32 %v0_11df0, { 1, 0, 2, 3 }
}

define i32 @function_11e3e() local_unnamed_addr {
dec_label_pc_11e3e:
  %v0_11e42 = load i32, i32* @eax, align 8
  ret i32 %v0_11e42
}

define i32 @_Z8i64tostrx(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11e43:
  ret i32 %arg2
}

define i32 @function_11ea5() local_unnamed_addr {
dec_label_pc_11ea5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11ea5 = load i32, i32* %ecx.global-to-local, align 8
  %v1_11ea5 = add i32 %v0_11ea5, -1
  store i32 %v1_11ea5, i32* %ecx.global-to-local, align 8
  %v0_11ea7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11ea7
}

define i32 @_Z6itostri(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11eaa:
  ret i32 %arg1
}

define i32 @function_11ee8() local_unnamed_addr {
dec_label_pc_11ee8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_11ee8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11ee8 = add i32 %v0_11ee8, 1166738668
  %v2_11ee8 = inttoptr i32 %v1_11ee8 to i32*
  %v3_11ee8 = load i32, i32* %v2_11ee8, align 4
  %v4_11ee8 = add i32 %v3_11ee8, 1
  store i32 %v4_11ee8, i32* %v2_11ee8, align 4
  %v0_11ef2 = load i32, i32* %edx.global-to-local, align 4
  %v1_11ef2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11ef2 = xor i32 %v1_11ef2, %v0_11ef2
  store i32 %v2_11ef2, i32* %edx.global-to-local, align 4
  %v0_11f01 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11f01
}

define i32 @_Z6atoi64PKc(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f04:
  ret i32 %arg1
}

define i32 @function_11f46() local_unnamed_addr {
dec_label_pc_11f46:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11f46 = load i32, i32* %ecx.global-to-local, align 8
  %v1_11f46 = add i32 %v0_11f46, -1
  store i32 %v1_11f46, i32* %ecx.global-to-local, align 8
  %v0_11f48 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11f48
}

define i32 @_Z13GetTimeMillisv() local_unnamed_addr {
dec_label_pc_11f49:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  %v2_11f62 = ptrtoint i32* %stack_var_-18 to i32
  %v2_11f68 = call i32 @function_22701(i32 %v2_11f62, i32 1)
  %v2_11f75 = ptrtoint i32* %stack_var_-20 to i32
  %v2_11f7b = call i32 @function_22945(i32 %v2_11f75, i32 1)
  %v2_11f88 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_11f88, i32* @eax, align 8
  %v2_11f8e = call i32 @function_22823(i32 %v2_11f88, i32 1970)
  %v3_11f93 = load i32, i32* %stack_var_-18, align 4
  %v3_11f9c = load i32, i32* %stack_var_-20, align 4
  %v3_11fa5 = load i32, i32* %stack_var_-22, align 4
  %v4_11fa5 = urem i32 %v3_11fa5, 65536
  %v2_11fae = ptrtoint i32* %stack_var_-28 to i32
  %sext = mul i32 %v3_11f9c, 65536
  %v4_11fb4 = sdiv i32 %sext, 65536
  %sext1 = mul i32 %v3_11f93, 65536
  %v5_11fb4 = sdiv i32 %sext1, 65536
  %v6_11fb4 = call i32 @function_22a4f(i32 %v2_11fae, i32 %v4_11fa5, i32 %v4_11fb4, i32 %v5_11fb4)
  %v3_11fb9 = load i32, i32* %stack_var_-28, align 4
  %v2_11fc0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_11fc0, i32* @eax, align 8
  %v2_11fc6 = call i32 @function_22ca1(i32 %v2_11fc0, i32 %v3_11fb9)
  %v2_11fcb = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_11fcb, i32* @eax, align 8
  %v1_11fd1 = call i32 @function_26bab(i32 %v2_11fcb)
  %v2_11fd9 = ptrtoint i32* %stack_var_-36 to i32
  %v3_11fed = call i32 @function_26bf1(i32 %v2_11fd9, i32 %v2_11fcb, i32 %v2_11fc0)
  %v0_11ff2 = load i32, i32* @esp, align 4
  %v10_11ff2 = icmp eq i32 %v0_11ff2, 4
  store i1 %v10_11ff2, i1* @zf, align 1
  store i32 %v2_11fd9, i32* @eax, align 8
  %v1_11ffb = call i32 @function_26c49(i32 %v2_11fd9)
  store i32 %v1_11ffb, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1200c

bb:                                               ; preds = %dec_label_pc_11f49
  %v1_1200a = call i32 @function_12011()
  br label %dec_label_pc_1200c

dec_label_pc_1200c:                               ; preds = %bb, %dec_label_pc_11f49
  %v2_1200a = phi i32 [ %v1_1200a, %bb ], [ %v1_11ffb, %dec_label_pc_11f49 ]
  ret i32 %v2_1200a
}

define i32 @function_12011() local_unnamed_addr {
dec_label_pc_12011:
  %v0_12012 = load i32, i32* @eax, align 8
  ret i32 %v0_12012
}

define i32 @_Z11ByteReversej(i32 %arg1) local_unnamed_addr {
dec_label_pc_12013:
  %v3_1204a = call i32 @llvm.bswap.i32(i32 %arg1)
  store i32 %v3_1204a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12059

bb:                                               ; preds = %dec_label_pc_12013
  %v1_1202d = udiv i32 %arg1, 256
  %v2_12034 = and i32 %v1_1202d, 16711935
  %v1_1203a = mul i32 %arg1, 256
  %v2_1203f = and i32 %v1_1203a, -16711936
  %v2_12042 = or i32 %v2_12034, %v2_1203f
  %v2_12057 = call i32 @function_1205e(i32 %v2_12042)
  br label %dec_label_pc_12059

dec_label_pc_12059:                               ; preds = %bb, %dec_label_pc_12013
  %v3_12057 = phi i32 [ %v2_12057, %bb ], [ %v3_1204a, %dec_label_pc_12013 ]
  ret i32 %v3_12057

; uselistorder directives
  uselistorder i32 %v3_1204a, { 1, 0 }
}

define i32 @function_1205e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1205e:
  %v0_1205f = load i32, i32* @eax, align 8
  ret i32 %v0_1205f
}

define i32 @_ZNSt13runtime_errorC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12060:
  store i32 %arg1, i32* @eax, align 8
  %v2_1208b = call i32 @function_23c60(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_120b1() local_unnamed_addr {
dec_label_pc_120b1:
  %v0_120b1 = call i32 @function_120ca()
  ret i32 %v0_120b1
}

define i32 @function_120b4() local_unnamed_addr {
dec_label_pc_120b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_120b4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_120b4
}

define i32 @function_120ca() local_unnamed_addr {
dec_label_pc_120ca:
  %v0_120ca = load i32, i32* @ebp, align 4
  %v1_120ca = add i32 %v0_120ca, -12
  %v2_120ca = inttoptr i32 %v1_120ca to i32*
  %v3_120ca = load i32, i32* %v2_120ca, align 4
  %v1_120cd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_120cd = xor i32 %v1_120cd, %v3_120ca
  %v3_120cd = icmp eq i32 %v2_120cd, 0
  store i32 %v2_120cd, i32* @eax, align 8
  br i1 %v3_120cd, label %bb, label %dec_label_pc_120d6

bb:                                               ; preds = %dec_label_pc_120ca
  %v1_120d4 = call i32 @function_120db()
  br label %dec_label_pc_120d6

dec_label_pc_120d6:                               ; preds = %bb, %dec_label_pc_120ca
  %v2_120d4 = phi i32 [ %v1_120d4, %bb ], [ %v2_120cd, %dec_label_pc_120ca ]
  ret i32 %v2_120d4
}

define i32 @function_120db() local_unnamed_addr {
dec_label_pc_120db:
  %v0_120e0 = load i32, i32* @eax, align 8
  ret i32 %v0_120e0
}

define i32 @_ZN9bignum_stC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_120e2:
  ret i32 0
}

define i32 @_ZN7CBigNumC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1210c:
  ret i32 %arg1
}

define i32 @function_12149() local_unnamed_addr {
dec_label_pc_12149:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12149 = load i32, i32* %ecx.global-to-local, align 8
  %v1_12149 = add i32 %v0_12149, -1
  store i32 %v1_12149, i32* %ecx.global-to-local, align 8
  %v0_1214b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1214b
}

define i32 @_ZN7CBigNumD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1214c:
  ret i32 %arg1
}

define i32 @function_1217e() local_unnamed_addr {
dec_label_pc_1217e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1217e = load i32, i32* %ecx.global-to-local, align 8
  %v1_1217e = add i32 %v0_1217e, -1
  store i32 %v1_1217e, i32* %ecx.global-to-local, align 8
  %v0_12180 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12180
}

define i32 @_ZNK7CBigNum10getuint256Ev(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12182:
  ret i32 %arg2
}

define i32 @function_121b2() local_unnamed_addr {
dec_label_pc_121b2:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_121b2 = load i32, i32* %ecx.global-to-local, align 8
  %v1_121b2 = add i32 %v0_121b2, 2105789509
  %v2_121b2 = inttoptr i32 %v1_121b2 to i32*
  %v3_121b2 = load i32, i32* %v2_121b2, align 4
  %v4_121b2 = add i32 %v3_121b2, -1
  store i32 %v4_121b2, i32* %v2_121b2, align 4
  %v0_121b9 = load i32, i32* %esi.global-to-local, align 4
  %v1_121b9 = load i32, i32* %edi.global-to-local, align 4
  %v2_121b9 = add i32 %v1_121b9, 32
  %v3_121b9 = inttoptr i32 %v2_121b9 to i32*
  %v4_121b9 = load i32, i32* %v3_121b9, align 4
  %v5_121b9 = add i32 %v4_121b9, %v0_121b9
  store i32 %v5_121b9, i32* %esi.global-to-local, align 4
  %v0_121cc = load i32, i32* @ebp, align 4
  %v1_121cc = add i32 %v0_121cc, -76
  %v2_121cc = inttoptr i32 %v1_121cc to i32*
  %v3_121cc = load i32, i32* %v2_121cc, align 4
  %v1_121d7 = call i32 @function_1234d(i32 %v3_121cc)
  ret i32 %v1_121d7
}

define i32 @function_12237() local_unnamed_addr {
dec_label_pc_12237:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12237 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12237 = add i32 %v0_12237, 76134469
  %v2_12237 = inttoptr i32 %v1_12237 to i32*
  %v3_12237 = load i32, i32* %v2_12237, align 4
  %v4_12237 = add i32 %v3_12237, -1
  store i32 %v4_12237, i32* %v2_12237, align 4
  %v0_1223d = load i32, i32* %eax.global-to-local, align 8
  %v1_1223d = trunc i32 %v0_1223d to i8
  %v2_1223d = and i8 %v1_1223d, -24
  %v8_1223d = zext i8 %v2_1223d to i32
  %v10_1223d = and i32 %v0_1223d, -256
  %v11_1223d = or i32 %v8_1223d, %v10_1223d
  store i32 %v11_1223d, i32* %eax.global-to-local, align 8
  %v0_12242 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12242 = add i32 %v0_12242, -1760623368
  %v2_12242 = inttoptr i32 %v1_12242 to i8*
  %v3_12242 = load i8, i8* %v2_12242, align 1
  %v6_12242 = add i8 %v3_12242, %v2_1223d
  store i8 %v6_12242, i8* %v2_12242, align 1
  %v0_12248 = load i32, i32* %eax.global-to-local, align 8
  %v2_12248 = mul i32 %v0_12248, 8
  %v3_12248 = add i32 %v0_12248, 1153899380
  %v4_12248 = add i32 %v3_12248, %v2_12248
  %v5_12248 = inttoptr i32 %v4_12248 to i8*
  %v6_12248 = load i8, i8* %v5_12248, align 1
  %v7_12248 = mul i8 %v6_12248, 16
  %v8_12248 = udiv i8 %v6_12248, 16
  %v9_12248 = or i8 %v8_12248, %v7_12248
  store i8 %v9_12248, i8* %v5_12248, align 1
  %v0_12250 = load i32, i32* %eax.global-to-local, align 8
  %v1_12250 = trunc i32 %v0_12250 to i8
  %v2_12250 = add i8 %v1_12250, 4
  %v16_12250 = zext i8 %v2_12250 to i32
  %v18_12250 = and i32 %v0_12250, -256
  %v19_12250 = or i32 %v16_12250, %v18_12250
  store i32 %v19_12250, i32* %eax.global-to-local, align 8
  %v1_12252 = inttoptr i32 %v19_12250 to i8*
  %v2_12252 = load i8, i8* %v1_12252, align 1
  %v5_12252 = add i8 %v2_12252, %v2_12250
  store i8 %v5_12252, i8* %v1_12252, align 1
  %v0_12254 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12254 = add i32 %v0_12254, 76134469
  %v2_12254 = inttoptr i32 %v1_12254 to i8*
  %v3_12254 = load i8, i8* %v2_12254, align 1
  %v4_12254 = load i32, i32* %ecx.global-to-local, align 8
  %v5_12254 = trunc i32 %v4_12254 to i8
  %v6_12254 = add i8 %v5_12254, %v3_12254
  store i8 %v6_12254, i8* %v2_12254, align 1
  %v0_1225a = load i32, i32* %eax.global-to-local, align 8
  %v11_1225a = and i32 %v0_1225a, -24
  store i32 %v11_1225a, i32* %eax.global-to-local, align 8
  store i32 %v11_1225a, i32* @ebp, align 4
  %v1_1225e = inttoptr i32 %v11_1225a to i32*
  %v2_1225e = load i32, i32* %v1_1225e, align 8
  %v4_1225e = add i32 %v2_1225e, %v11_1225a
  store i32 %v4_1225e, i32* %v1_1225e, align 8
  %v0_12260 = load i32, i32* %eax.global-to-local, align 8
  %v1_12260 = inttoptr i32 %v0_12260 to i8*
  %v2_12260 = load i8, i8* %v1_12260, align 1
  %v1_12263 = and i8 %v2_12260, ptrtoint (i8* @global_var_7f.2821 to i8)
  store i8 %v1_12263, i8* %v1_12260, align 1
  %v0_12278 = load i32, i32* @ebp, align 4
  %v1_12283 = add i32 %v0_12278, -60
  %v2_12283 = inttoptr i32 %v1_12283 to i32*
  store i32 0, i32* %v2_12283, align 4
  %v0_1228a = load i32, i32* @ebp, align 4
  %v1_12295 = add i32 %v0_1228a, -73
  store i32 %v1_12295, i32* %eax.global-to-local, align 8
  %v2_12298 = add i32 %v0_1228a, -56
  %v3_12298 = inttoptr i32 %v2_12298 to i32*
  store i32 %v1_12295, i32* %v3_12298, align 4
  br label %dec_label_pc_122c4

dec_label_pc_1229d:                               ; preds = %dec_label_pc_122dc
  %v1_1229d = add i32 %v0_122c4, -44
  store i32 %v1_1229d, i32* %eax.global-to-local, align 8
  store i32 %v1_1229d, i32* %ebx.global-to-local, align 4
  %v4_122a2 = load i32, i32* %v2_122c4, align 4
  %v5_122a2 = add i32 %v4_122a2, %v1_1229d
  store i32 %v5_122a2, i32* %ebx.global-to-local, align 4
  %v1_122ac = add i32 %v0_122c4, -72
  store i32 %v1_122ac, i32* %eax.global-to-local, align 8
  %v1_122b7 = inttoptr i32 %v1_122ac to i8*
  %v2_122b7 = load i8, i8* %v1_122b7, align 1
  %v3_122b7 = zext i8 %v2_122b7 to i32
  store i32 %v3_122b7, i32* %eax.global-to-local, align 8
  %v3_122ba = inttoptr i32 %v5_122a2 to i8*
  store i8 %v2_122b7, i8* %v3_122ba, align 1
  %v0_122bc = load i32, i32* @ebp, align 4
  %v1_122bc = add i32 %v0_122bc, -60
  %v2_122bc = inttoptr i32 %v1_122bc to i32*
  %v3_122bc = load i32, i32* %v2_122bc, align 4
  %v4_122bc = add i32 %v3_122bc, 1
  store i32 %v4_122bc, i32* %v2_122bc, align 4
  %v0_122c0 = load i32, i32* @ebp, align 4
  %v1_122c0 = add i32 %v0_122c0, -56
  %v2_122c0 = inttoptr i32 %v1_122c0 to i32*
  %v3_122c0 = load i32, i32* %v2_122c0, align 4
  %v4_122c0 = add i32 %v3_122c0, -1
  store i32 %v4_122c0, i32* %v2_122c0, align 4
  br label %dec_label_pc_122c4

dec_label_pc_122c4:                               ; preds = %dec_label_pc_1229d, %dec_label_pc_12237
  %v0_122c4 = load i32, i32* @ebp, align 4
  %v1_122c4 = add i32 %v0_122c4, -60
  %v2_122c4 = inttoptr i32 %v1_122c4 to i32*
  %v3_122c4 = load i32, i32* %v2_122c4, align 4
  %tmp108 = icmp ult i32 %v3_122c4, 32
  br i1 %tmp108, label %dec_label_pc_122ca, label %dec_label_pc_122d7

dec_label_pc_122ca:                               ; preds = %dec_label_pc_122c4
  %v1_122ca = add i32 %v0_122c4, -56
  %v2_122ca = inttoptr i32 %v1_122ca to i32*
  %v3_122ca = load i32, i32* %v2_122ca, align 4
  %tmp109 = icmp ult i32 %v3_122ca, 4
  br i1 %tmp109, label %dec_label_pc_122d7, label %dec_label_pc_122dc

dec_label_pc_122d7:                               ; preds = %dec_label_pc_122c4, %dec_label_pc_122ca
  br label %dec_label_pc_122dc

dec_label_pc_122dc:                               ; preds = %dec_label_pc_122ca, %dec_label_pc_122d7
  %storemerge = phi i32 [ 0, %dec_label_pc_122d7 ], [ 1, %dec_label_pc_122ca ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_122dc = icmp eq i32 %storemerge, 0
  %v1_122de = icmp eq i1 %v5_122dc, false
  br i1 %v1_122de, label %dec_label_pc_1229d, label %dec_label_pc_122e0

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122dc
  %v1_122e0 = add i32 %v0_122c4, -76
  %v2_122e0 = inttoptr i32 %v1_122e0 to i32*
  %v3_122e0 = load i32, i32* %v2_122e0, align 4
  store i32 %v3_122e0, i32* %eax.global-to-local, align 8
  %v1_122e3 = add i32 %v0_122c4, -44
  %v2_122e3 = inttoptr i32 %v1_122e3 to i32*
  %v3_122e3 = load i32, i32* %v2_122e3, align 4
  %v2_122e6 = inttoptr i32 %v3_122e0 to i32*
  store i32 %v3_122e3, i32* %v2_122e6, align 4
  %v0_122e8 = load i32, i32* @ebp, align 4
  %v1_122e8 = add i32 %v0_122e8, -40
  %v2_122e8 = inttoptr i32 %v1_122e8 to i32*
  %v3_122e8 = load i32, i32* %v2_122e8, align 4
  %v1_122eb = load i32, i32* %eax.global-to-local, align 8
  %v2_122eb = add i32 %v1_122eb, 4
  %v3_122eb = inttoptr i32 %v2_122eb to i32*
  store i32 %v3_122e8, i32* %v3_122eb, align 4
  %v0_122ee = load i32, i32* @ebp, align 4
  %v1_122ee = add i32 %v0_122ee, -36
  %v2_122ee = inttoptr i32 %v1_122ee to i32*
  %v3_122ee = load i32, i32* %v2_122ee, align 4
  %v1_122f1 = load i32, i32* %eax.global-to-local, align 8
  %v2_122f1 = add i32 %v1_122f1, 8
  %v3_122f1 = inttoptr i32 %v2_122f1 to i32*
  store i32 %v3_122ee, i32* %v3_122f1, align 4
  %v0_122f4 = load i32, i32* @ebp, align 4
  %v1_122f4 = add i32 %v0_122f4, -32
  %v2_122f4 = inttoptr i32 %v1_122f4 to i32*
  %v3_122f4 = load i32, i32* %v2_122f4, align 4
  %v1_122f7 = load i32, i32* %eax.global-to-local, align 8
  %v2_122f7 = add i32 %v1_122f7, 12
  %v3_122f7 = inttoptr i32 %v2_122f7 to i32*
  store i32 %v3_122f4, i32* %v3_122f7, align 4
  %v0_122fa = load i32, i32* @ebp, align 4
  %v1_122fa = add i32 %v0_122fa, -28
  %v2_122fa = inttoptr i32 %v1_122fa to i32*
  %v3_122fa = load i32, i32* %v2_122fa, align 4
  %v1_122fd = load i32, i32* %eax.global-to-local, align 8
  %v2_122fd = add i32 %v1_122fd, 16
  %v3_122fd = inttoptr i32 %v2_122fd to i32*
  store i32 %v3_122fa, i32* %v3_122fd, align 4
  %v0_12300 = load i32, i32* @ebp, align 4
  %v1_12300 = add i32 %v0_12300, -24
  %v2_12300 = inttoptr i32 %v1_12300 to i32*
  %v3_12300 = load i32, i32* %v2_12300, align 4
  %v1_12303 = load i32, i32* %eax.global-to-local, align 8
  %v2_12303 = add i32 %v1_12303, 20
  %v3_12303 = inttoptr i32 %v2_12303 to i32*
  store i32 %v3_12300, i32* %v3_12303, align 4
  %v0_12306 = load i32, i32* @ebp, align 4
  %v1_12306 = add i32 %v0_12306, -20
  %v2_12306 = inttoptr i32 %v1_12306 to i32*
  %v3_12306 = load i32, i32* %v2_12306, align 4
  %v1_12309 = load i32, i32* %eax.global-to-local, align 8
  %v2_12309 = add i32 %v1_12309, 24
  %v3_12309 = inttoptr i32 %v2_12309 to i32*
  store i32 %v3_12306, i32* %v3_12309, align 4
  %v0_1230c = load i32, i32* @ebp, align 4
  %v1_1230c = add i32 %v0_1230c, -16
  %v2_1230c = inttoptr i32 %v1_1230c to i32*
  %v3_1230c = load i32, i32* %v2_1230c, align 4
  %v1_1230f = load i32, i32* %eax.global-to-local, align 8
  %v2_1230f = add i32 %v1_1230f, 28
  %v3_1230f = inttoptr i32 %v2_1230f to i32*
  store i32 %v3_1230c, i32* %v3_1230f, align 4
  %v0_12312 = load i32, i32* @ebp, align 4
  %v1_12312 = add i32 %v0_12312, -72
  store i32 %v1_12312, i32* %eax.global-to-local, align 8
  %v1_1231d = call i32 @function_1234d(i32 %v1_12312)
  store i32 %v1_1231d, i32* %eax.global-to-local, align 8
  ret i32 %v1_1231d

; uselistorder directives
  uselistorder i32* %v2_122c4, { 1, 0 }
  uselistorder i32 %v0_122c4, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v11_1225a, { 0, 3, 2, 1 }
  uselistorder i8 %v6_12248, { 1, 0 }
  uselistorder i32 %v0_12248, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32)* @function_1234d, { 1, 0 }
  uselistorder label %dec_label_pc_122dc, { 1, 0 }
  uselistorder label %dec_label_pc_122d7, { 1, 0 }
}

define i32 @function_12320() local_unnamed_addr {
dec_label_pc_12320:
  %eax.global-to-local = alloca i32, align 4
  %v0_12320 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12320
}

define i32 @function_12337() local_unnamed_addr {
dec_label_pc_12337:
  %eax.global-to-local = alloca i32, align 4
  %v0_12337 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12337
}

define i32 @function_1234d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1234d:
  %v0_1234d = load i32, i32* @ebp, align 4
  %v1_1234d = add i32 %v0_1234d, -76
  %v2_1234d = inttoptr i32 %v1_1234d to i32*
  %v3_1234d = load i32, i32* %v2_1234d, align 4
  store i32 %v3_1234d, i32* @eax, align 8
  %v1_12350 = add i32 %v0_1234d, -12
  %v2_12350 = inttoptr i32 %v1_12350 to i32*
  %v3_12350 = load i32, i32* %v2_12350, align 4
  %v1_12353 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12353 = icmp eq i32 %v1_12353, %v3_12350
  br i1 %v3_12353, label %bb, label %dec_label_pc_1235c

bb:                                               ; preds = %dec_label_pc_1234d
  %v1_1235a = call i32 @function_12361()
  br label %dec_label_pc_1235c

dec_label_pc_1235c:                               ; preds = %bb, %dec_label_pc_1234d
  %v2_1235a = phi i32 [ %v1_1235a, %bb ], [ %v3_1234d, %dec_label_pc_1234d ]
  ret i32 %v2_1235a
}

define i32 @function_12361() local_unnamed_addr {
dec_label_pc_12361:
  %v0_12366 = load i32, i32* @eax, align 8
  ret i32 %v0_12366
}

define i32 @_ZN7CBigNum10SetCompactEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1236a:
  %v2_1238a = udiv i32 %arg2, 16777216
  %v8_123ab = icmp ult i32 %arg2, 50331648
  %tmp111 = and i32 %arg2, -16777216
  %tmp112 = icmp eq i32 %tmp111, 50331648
  %v2_123af = or i1 %v8_123ab, %tmp112
  br i1 %v2_123af, label %dec_label_pc_123b1, label %bb

bb:                                               ; preds = %dec_label_pc_1236a
  %v1_123a3 = urem i32 %arg2, 8388608
  %v0_1237c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v9_1238a = and i32 %arg2, 8388608
  %v2_12393 = icmp eq i32 %v9_1238a, 0
  %v1_1239a = icmp eq i1 %v2_12393, false
  %v10_123af = zext i1 %v1_1239a to i32
  %v11_123af = call i32 @function_123da(i32 %arg2, i32 %arg1, i32 %v2_1238a, i32 %v1_123a3, i32 %v10_123af, i32 %v0_1237c)
  br label %dec_label_pc_123b1

dec_label_pc_123b1:                               ; preds = %dec_label_pc_1236a, %bb
  %v2_123bb = mul nsw i32 %v2_1238a, -8
  %v1_123be = add nsw i32 %v2_123bb, 24
  %v6_123c3 = and i32 %v1_123be, 24
  %v8_123c3 = icmp eq i32 %v6_123c3, 0
  br i1 %v8_123c3, label %bb110, label %bb109

bb109:                                            ; preds = %dec_label_pc_123b1
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_123b1, %bb109
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 8388608, { 1, 0 }
  uselistorder i32 %arg2, { 4, 5, 2, 0, 3, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_123b1, { 1, 0 }
}

define i32 @function_123d8() local_unnamed_addr {
dec_label_pc_123d8:
  %v0_123d8 = call i32 @function_1240f()
  ret i32 %v0_123d8
}

define i32 @function_123da(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_123da:
  %v0_123da = load i32, i32* @ebp, align 4
  %v1_123da = add i32 %v0_123da, -28
  %v2_123da = inttoptr i32 %v1_123da to i32*
  %v3_123da = load i32, i32* %v2_123da, align 4
  ret i32 %v3_123da
}

define i32 @function_1240f() local_unnamed_addr {
dec_label_pc_1240f:
  %v0_1240f = load i32, i32* @ebp, align 4
  %v1_12413 = add i32 %v0_1240f, -28
  %v2_12413 = inttoptr i32 %v1_12413 to i32*
  %v3_12413 = load i32, i32* %v2_12413, align 4
  ret i32 %v3_12413
}

define i32 @function_12435() local_unnamed_addr {
dec_label_pc_12435:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12435 = load i32, i32* %ecx.global-to-local, align 8
  %v1_12435 = add i32 %v0_12435, -1
  store i32 %v1_12435, i32* %ecx.global-to-local, align 8
  %v0_12437 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12437
}

define i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12438:
  store i32 0, i32* @eax, align 8
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_12460

bb:                                               ; preds = %dec_label_pc_12438
  %v2_1245e = call i32 @function_12465(i32 %arg1)
  br label %dec_label_pc_12460

dec_label_pc_12460:                               ; preds = %bb, %dec_label_pc_12438
  %v3_1245e = phi i32 [ %v2_1245e, %bb ], [ 0, %dec_label_pc_12438 ]
  ret i32 %v3_1245e
}

define i32 @function_12465(i32 %arg1) local_unnamed_addr {
dec_label_pc_12465:
  %v0_12466 = load i32, i32* @eax, align 8
  ret i32 %v0_12466
}

define i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %arg1) local_unnamed_addr {
dec_label_pc_12467:
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @edx, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant9copy_intoC1EPv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1249c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_124bf = call i32 @function_283f4(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant14assign_storageC1EPKv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124e0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_12503 = call i32 @function_28438(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZNK5boost7bad_get4whatEv(i32 %arg1) {
dec_label_pc_12524:
  store i32 ptrtoint ([50 x i8]* @global_var_657c.2822 to i32), i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1254c

bb:                                               ; preds = %dec_label_pc_12524
  %v2_1254a = call i32 @function_12551(i32 %arg1)
  br label %dec_label_pc_1254c

dec_label_pc_1254c:                               ; preds = %bb, %dec_label_pc_12524
  %v3_1254a = phi i32 [ %v2_1254a, %bb ], [ ptrtoint ([50 x i8]* @global_var_657c.2822 to i32), %dec_label_pc_12524 ]
  ret i32 %v3_1254a
}

define i32 @function_12551(i32 %arg1) local_unnamed_addr {
dec_label_pc_12551:
  %v0_12552 = load i32, i32* @eax, align 8
  ret i32 %v0_12552
}

define i32 @_ZN7CPubKey10InvalidateEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_12554:
  store i8 -1, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1257d

bb:                                               ; preds = %dec_label_pc_12554
  %v4_1255a = ptrtoint i8* %arg1 to i32
  %v3_1257b = call i32 @function_12582(i32 %v4_1255a)
  br label %dec_label_pc_1257d

dec_label_pc_1257d:                               ; preds = %bb, %dec_label_pc_12554
  %v4_1257b = phi i32 [ %v3_1257b, %bb ], [ 0, %dec_label_pc_12554 ]
  ret i32 %v4_1257b

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_12582(i32 %arg1) local_unnamed_addr {
dec_label_pc_12582:
  %v0_12583 = load i32, i32* @eax, align 8
  ret i32 %v0_12583
}

define i32 @_ZN7CPubKeyC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12584:
  store i32 %arg1, i32* @eax, align 8
  %v1_125a1 = call i32 @function_24ad8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_125b2

bb:                                               ; preds = %dec_label_pc_12584
  %v1_125b0 = call i32 @function_125b7()
  br label %dec_label_pc_125b2

dec_label_pc_125b2:                               ; preds = %bb, %dec_label_pc_12584
  %v2_125b0 = phi i32 [ %v1_125b0, %bb ], [ 0, %dec_label_pc_12584 ]
  ret i32 %v2_125b0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_125b7() local_unnamed_addr {
dec_label_pc_125b7:
  %v0_125b8 = load i32, i32* @eax, align 8
  ret i32 %v0_125b8
}

define i32 @_ZN7CScriptC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_125ba:
  store i32 %arg1, i32* @eax, align 8
  %v1_125d7 = call i32 @function_28468(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_125e8

bb:                                               ; preds = %dec_label_pc_125ba
  %v1_125e6 = call i32 @function_125ed()
  br label %dec_label_pc_125e8

dec_label_pc_125e8:                               ; preds = %bb, %dec_label_pc_125ba
  %v2_125e6 = phi i32 [ %v1_125e6, %bb ], [ 0, %dec_label_pc_125ba ]
  ret i32 %v2_125e6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_125ed() local_unnamed_addr {
dec_label_pc_125ed:
  %v0_125ee = load i32, i32* @eax, align 8
  ret i32 %v0_125ee
}

define i32 @_ZN7CScriptC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125f0:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v2_1260e = ptrtoint i32* %stack_var_-17 to i32
  %v1_12614 = call i32 @function_282ac(i32 %v2_1260e)
  store i32 %arg2, i32* @edx, align 4
  %v2_1261c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1261c, i32* @eax, align 8
  %v2_12626 = call i32 @function_27f4c(i32 %v2_1261c, i32 %arg2)
  %v2_12631 = ptrtoint i32* %stack_var_-28 to i32
  %v2_1263b = call i32 @function_27ec0(i32 %v2_12631, i32 %arg2)
  %v3_1264d = load i32, i32* %stack_var_-24, align 4
  %v3_12654 = load i32, i32* %stack_var_-28, align 4
  %v4_1265e = call i32 @function_28918(i32 %arg1, i32 %v3_12654, i32 %v3_1264d, i32 %v2_1260e)
  store i32 %v2_1260e, i32* @eax, align 8
  %v1_12669 = call i32 @function_282e2(i32 %v2_1260e)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1267a

bb:                                               ; preds = %dec_label_pc_125f0
  %v1_12678 = call i32 @function_12698()
  store i32 %v1_12678, i32* @eax, align 8
  br label %dec_label_pc_1267a

dec_label_pc_1267a:                               ; preds = %bb, %dec_label_pc_125f0
  %v0_1267a = call i32 @function_12693()
  ret i32 %v0_1267a

; uselistorder directives
  uselistorder i32 %v2_1260e, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_1267d() local_unnamed_addr {
dec_label_pc_1267d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1267d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1267d
}

define i32 @function_12693() local_unnamed_addr {
dec_label_pc_12693:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12698() local_unnamed_addr {
dec_label_pc_12698:
  %v0_1269c = load i32, i32* @eax, align 8
  ret i32 %v0_1269c
}

define i32 @_ZN7CScriptD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1269e:
  ret i32 0
}

define i32 @_Z11GetAlgoNamei(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126d3:
  %stack_var_-19 = alloca i32, align 4
  %v1_126f4 = icmp eq i32 %arg2, 0
  br i1 %v1_126f4, label %dec_label_pc_126ff, label %dec_label_pc_126f8

dec_label_pc_126f8:                               ; preds = %dec_label_pc_126d3
  %v10_126f8 = icmp eq i32 %arg2, 1
  br i1 %v10_126f8, label %bb, label %dec_label_pc_126fd

bb:                                               ; preds = %dec_label_pc_126f8
  %v3_126fb = call i32 @function_12734(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_126fd

dec_label_pc_126fd:                               ; preds = %bb, %dec_label_pc_126f8
  %v0_126fd = call i32 @function_12766()
  ret i32 %v0_126fd

dec_label_pc_126ff:                               ; preds = %dec_label_pc_126d3
  %v2_126ff = ptrtoint i32* %stack_var_-19 to i32
  ret i32 %v2_126ff

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_1272f() local_unnamed_addr {
dec_label_pc_1272f:
  %v1_1272f = call i32 @function_127dd(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_1272f
}

define i32 @function_12734(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12734:
  %v0_12734 = load i32, i32* @ebp, align 4
  %v1_12734 = add i32 %v0_12734, -14
  ret i32 %v1_12734
}

define i32 @function_12764() local_unnamed_addr {
dec_label_pc_12764:
  %v1_12764 = call i32 @function_127dd(i32 ptrtoint (i32* @2 to i32))
  ret i32 %v1_12764
}

define i32 @function_12766() local_unnamed_addr {
dec_label_pc_12766:
  %v0_12766 = load i32, i32* @ebp, align 4
  %v1_12766 = add i32 %v0_12766, -13
  ret i32 %v1_12766
}

define i32 @function_1278b() local_unnamed_addr {
dec_label_pc_1278b:
  %v0_1278b = load i32, i32* @ebp, align 4
  %v1_1278b = add i32 %v0_1278b, -13
  %v1_12796 = call i32 @function_127dd(i32 %v1_1278b)
  ret i32 %v1_12796

; uselistorder directives
  uselistorder i32 (i32)* @function_127dd, { 2, 1, 0 }
}

define i32 @function_12799() local_unnamed_addr {
dec_label_pc_12799:
  %eax.global-to-local = alloca i32, align 4
  %v0_12799 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12799
}

define i32 @function_127b0() local_unnamed_addr {
dec_label_pc_127b0:
  %eax.global-to-local = alloca i32, align 4
  %v0_127b0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_127b0
}

define i32 @function_127c7() local_unnamed_addr {
dec_label_pc_127c7:
  %eax.global-to-local = alloca i32, align 4
  %v0_127c7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_127c7
}

define i32 @function_127dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_127dd:
  %v0_127dd = load i32, i32* @ebp, align 4
  %v1_127dd = add i32 %v0_127dd, -28
  %v2_127dd = inttoptr i32 %v1_127dd to i32*
  %v3_127dd = load i32, i32* %v2_127dd, align 4
  ret i32 %v3_127dd
}

define i32 @_ZN9COutPointC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_127fa:
  store i32 %arg1, i32* @eax, align 8
  %v1_12817 = call i32 @function_185b4(i32 %arg1)
  %v1_12822 = call i32 @function_25034(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12833

bb:                                               ; preds = %dec_label_pc_127fa
  %v1_12831 = call i32 @function_12838()
  br label %dec_label_pc_12833

dec_label_pc_12833:                               ; preds = %bb, %dec_label_pc_127fa
  %v2_12831 = phi i32 [ %v1_12831, %bb ], [ 0, %dec_label_pc_127fa ]
  ret i32 %v2_12831

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_12838() local_unnamed_addr {
dec_label_pc_12838:
  %v0_12839 = load i32, i32* @eax, align 8
  ret i32 %v0_12839
}

define i32 @_ZN9COutPoint7SetNullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1283a:
  store i32 %arg1, i32* @eax, align 8
  %v3_12867 = call i32 @function_18734(i32 %arg1, i32 0, i32 0)
  %v1_1286f = add i32 %arg1, 32
  %v2_1286f = inttoptr i32 %v1_1286f to i32*
  store i32 -1, i32* %v2_1286f, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12882

bb:                                               ; preds = %dec_label_pc_1283a
  %v1_12880 = call i32 @function_12887()
  br label %dec_label_pc_12882

dec_label_pc_12882:                               ; preds = %bb, %dec_label_pc_1283a
  %v2_12880 = phi i32 [ %v1_12880, %bb ], [ 0, %dec_label_pc_1283a ]
  ret i32 %v2_12880

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_12887() local_unnamed_addr {
dec_label_pc_12887:
  %v0_12888 = load i32, i32* @eax, align 8
  ret i32 %v0_12888
}

define i32 @_ZNK9COutPoint6IsNullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1288a:
  store i32 %arg1, i32* @eax, align 8
  %v3_128b7 = call i32 @function_187fc(i32 %arg1, i32 0, i32 0)
  %v4_128bc = trunc i32 %v3_128b7 to i8
  %v5_128bc = icmp eq i8 %v4_128bc, 0
  br i1 %v5_128bc, label %dec_label_pc_128d2, label %dec_label_pc_128c0

dec_label_pc_128c0:                               ; preds = %dec_label_pc_1288a
  %v1_128c3 = add i32 %arg1, 32
  %v2_128c3 = inttoptr i32 %v1_128c3 to i32*
  %v3_128c3 = load i32, i32* %v2_128c3, align 4
  %v10_128c6 = icmp eq i32 %v3_128c3, -1
  %v1_128c9 = icmp eq i1 %v10_128c6, false
  br i1 %v1_128c9, label %dec_label_pc_128d2, label %dec_label_pc_128d7

dec_label_pc_128d2:                               ; preds = %dec_label_pc_128c0, %dec_label_pc_1288a
  br label %dec_label_pc_128d7

dec_label_pc_128d7:                               ; preds = %dec_label_pc_128c0, %dec_label_pc_128d2
  %storemerge = phi i32 [ 0, %dec_label_pc_128d2 ], [ 1, %dec_label_pc_128c0 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_128e3

bb:                                               ; preds = %dec_label_pc_128d7
  %v1_128e1 = call i32 @function_128e8()
  br label %dec_label_pc_128e3

dec_label_pc_128e3:                               ; preds = %bb, %dec_label_pc_128d7
  %v2_128e1 = phi i32 [ %v1_128e1, %bb ], [ %storemerge, %dec_label_pc_128d7 ]
  ret i32 %v2_128e1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_128d7, { 1, 0 }
}

define i32 @function_128e8() local_unnamed_addr {
dec_label_pc_128e8:
  %v0_128e9 = load i32, i32* @eax, align 8
  ret i32 %v0_128e9
}

define i32 @_ZN5CTxInC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_128ea:
  %v1_1290f = add i32 %arg1, 36
  store i32 %v1_1290f, i32* @eax, align 8
  %v1_12915 = call i32 @function_24ea4(i32 %v1_1290f)
  %v0_1291a = call i32 @function_22ebe()
  %v2_12922 = add i32 %arg1, ptrtoint (i32* @global_var_30.2823 to i32)
  %v3_12922 = inttoptr i32 %v2_12922 to i32*
  store i32 %v0_1291a, i32* %v3_12922, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12931

bb:                                               ; preds = %dec_label_pc_128ea
  %v1_1292f = call i32 @function_12936()
  br label %dec_label_pc_12931

dec_label_pc_12931:                               ; preds = %bb, %dec_label_pc_128ea
  %v2_1292f = phi i32 [ %v1_1292f, %bb ], [ 0, %dec_label_pc_128ea ]
  ret i32 %v2_1292f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12936() local_unnamed_addr {
dec_label_pc_12936:
  %v0_12937 = load i32, i32* @eax, align 8
  ret i32 %v0_12937
}

define i32 @_ZN6CTxOutC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12938:
  %v1_12953 = add i32 %arg1, 8
  store i32 %v1_12953, i32* @eax, align 8
  %v1_12959 = call i32 @function_24ef2(i32 %v1_12953)
  store i32 %arg1, i32* @eax, align 8
  %v1_12964 = call i32 @function_252d4(i32 %arg1)
  %v0_12969 = call i32 @function_12985()
  ret i32 %v0_12969
}

define i32 @function_1296c() local_unnamed_addr {
dec_label_pc_1296c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1296c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1296c
}

define i32 @function_12985() local_unnamed_addr {
dec_label_pc_12985:
  %v0_12985 = load i32, i32* @ebp, align 4
  %v1_12985 = add i32 %v0_12985, -12
  %v2_12985 = inttoptr i32 %v1_12985 to i32*
  %v3_12985 = load i32, i32* %v2_12985, align 4
  %v1_12988 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12988 = xor i32 %v1_12988, %v3_12985
  %v3_12988 = icmp eq i32 %v2_12988, 0
  store i32 %v2_12988, i32* @eax, align 8
  br i1 %v3_12988, label %bb, label %dec_label_pc_12991

bb:                                               ; preds = %dec_label_pc_12985
  %v1_1298f = call i32 @function_12996()
  br label %dec_label_pc_12991

dec_label_pc_12991:                               ; preds = %bb, %dec_label_pc_12985
  %v2_1298f = phi i32 [ %v1_1298f, %bb ], [ %v2_12988, %dec_label_pc_12985 ]
  ret i32 %v2_1298f
}

define i32 @function_12996() local_unnamed_addr {
dec_label_pc_12996:
  %v0_1299b = load i32, i32* @eax, align 8
  ret i32 %v0_1299b
}

define i32 @_ZN6CTxOut7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1299c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %arg1, align 4
  %v1_129bc = add i32 %tmp100, 4
  %v2_129bc = inttoptr i32 %v1_129bc to i32*
  store i32 -1, i32* %v2_129bc, align 4
  %v1_129c6 = add i32 %tmp100, 8
  %v1_129cc = call i32 @function_28d4e(i32 %v1_129c6)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_129dd

bb:                                               ; preds = %dec_label_pc_1299c
  %v1_129db = call i32 @function_129e2()
  br label %dec_label_pc_129dd

dec_label_pc_129dd:                               ; preds = %bb, %dec_label_pc_1299c
  %v2_129db = phi i32 [ %v1_129db, %bb ], [ 0, %dec_label_pc_1299c ]
  ret i32 %v2_129db

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_129e2() local_unnamed_addr {
dec_label_pc_129e2:
  %v0_129e3 = load i32, i32* @eax, align 8
  ret i32 %v0_129e3
}

define i32 @_ZN12CTransactionC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_129e4:
  %v1_129ff = add i32 %arg1, 4
  store i32 %v1_129ff, i32* @eax, align 8
  %v1_12a05 = call i32 @function_28eea(i32 %v1_129ff)
  %v1_12a0d = add i32 %arg1, 16
  store i32 %v1_12a0d, i32* @eax, align 8
  %v1_12a13 = call i32 @function_28f9a(i32 %v1_12a0d)
  store i32 %arg1, i32* @eax, align 8
  %v1_12a1e = call i32 @function_2544c(i32 %arg1)
  %v0_12a23 = call i32 @function_12a51()
  ret i32 %v0_12a23
}

define i32 @function_12a25() local_unnamed_addr {
dec_label_pc_12a25:
  %eax.global-to-local = alloca i32, align 4
  %v0_12a25 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_12a25, i32* @ebx, align 4
  %v0_12a27 = load i32, i32* @ebp, align 4
  %v1_12a27 = add i32 %v0_12a27, -28
  %v2_12a27 = inttoptr i32 %v1_12a27 to i32*
  %v3_12a27 = load i32, i32* %v2_12a27, align 4
  %v1_12a2a = add i32 %v3_12a27, 16
  store i32 %v1_12a2a, i32* %eax.global-to-local, align 8
  %v1_12a30 = call i32 @_ZNKSt10_Select1stISt4pairIKSsSsEEclERKS2_(i32 %v1_12a2a)
  store i32 %v1_12a30, i32* %eax.global-to-local, align 8
  %v0_12a35 = call i32 @function_12a39()
  store i32 %v0_12a35, i32* %eax.global-to-local, align 8
  ret i32 %v0_12a35
}

define i32 @function_12a37() local_unnamed_addr {
dec_label_pc_12a37:
  %eax.global-to-local = alloca i32, align 4
  %v0_12a37 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12a37
}

define i32 @function_12a39() local_unnamed_addr {
dec_label_pc_12a39:
  %v0_12a47 = load i32, i32* @ebx, align 4
  ret i32 %v0_12a47
}

define i32 @function_12a51() local_unnamed_addr {
dec_label_pc_12a51:
  %v0_12a51 = load i32, i32* @ebp, align 4
  %v1_12a51 = add i32 %v0_12a51, -12
  %v2_12a51 = inttoptr i32 %v1_12a51 to i32*
  %v3_12a51 = load i32, i32* %v2_12a51, align 4
  %v1_12a54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12a54 = xor i32 %v1_12a54, %v3_12a51
  %v3_12a54 = icmp eq i32 %v2_12a54, 0
  store i32 %v2_12a54, i32* @eax, align 8
  br i1 %v3_12a54, label %bb, label %dec_label_pc_12a5d

bb:                                               ; preds = %dec_label_pc_12a51
  %v1_12a5b = call i32 @function_12a62()
  br label %dec_label_pc_12a5d

dec_label_pc_12a5d:                               ; preds = %bb, %dec_label_pc_12a51
  %v2_12a5b = phi i32 [ %v1_12a5b, %bb ], [ %v2_12a54, %dec_label_pc_12a51 ]
  ret i32 %v2_12a5b
}

define i32 @function_12a62() local_unnamed_addr {
dec_label_pc_12a62:
  %v0_12a67 = load i32, i32* @eax, align 8
  ret i32 %v0_12a67
}

define i32 @_ZN12CTransaction7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12a68:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 1, i32* %arg1, align 4
  %v1_12a8b = add i32 %tmp100, 4
  store i32 %v1_12a8b, i32* @eax, align 8
  %v1_12a91 = call i32 @function_290ce(i32 %v1_12a8b)
  %v1_12a99 = add i32 %tmp100, 16
  store i32 %v1_12a99, i32* @eax, align 8
  %v1_12a9f = call i32 @function_2910c(i32 %v1_12a99)
  %v1_12aa7 = add i32 %tmp100, 28
  %v2_12aa7 = inttoptr i32 %v1_12aa7 to i32*
  store i32 0, i32* %v2_12aa7, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12aba

bb:                                               ; preds = %dec_label_pc_12a68
  %v1_12ab8 = call i32 @function_12abf()
  br label %dec_label_pc_12aba

dec_label_pc_12aba:                               ; preds = %bb, %dec_label_pc_12a68
  %v2_12ab8 = phi i32 [ %v1_12ab8, %bb ], [ 0, %dec_label_pc_12a68 ]
  ret i32 %v2_12ab8

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_12abf() local_unnamed_addr {
dec_label_pc_12abf:
  %v0_12ac0 = load i32, i32* @eax, align 8
  ret i32 %v0_12ac0
}

define i32 @_ZNK12CTransaction10IsCoinBaseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ac2:
  %v1_12adc = add i32 %arg1, 4
  store i32 %v1_12adc, i32* @eax, align 8
  %v1_12ae2 = call i32 @function_291a4(i32 %v1_12adc)
  %v10_12ae7 = icmp eq i32 %v1_12ae2, 1
  %v1_12aea = icmp eq i1 %v10_12ae7, false
  br i1 %v1_12aea, label %dec_label_pc_12b15, label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12ac2
  %v5_12adc = icmp ugt i32 %arg1, -5
  store i1 %v5_12adc, i1* @cf, align 1
  %v2_12afd = call i32 @function_291ea(i32 %v1_12adc, i32 0)
  store i32 %v2_12afd, i32* @eax, align 8
  %v1_12b05 = call i32 @function_2534c(i32 %v2_12afd)
  %v4_12b0a = trunc i32 %v1_12b05 to i8
  %v5_12b0a = icmp eq i8 %v4_12b0a, 0
  br i1 %v5_12b0a, label %dec_label_pc_12b15, label %dec_label_pc_12b1a

dec_label_pc_12b15:                               ; preds = %dec_label_pc_12aec, %dec_label_pc_12ac2
  br label %dec_label_pc_12b1a

dec_label_pc_12b1a:                               ; preds = %dec_label_pc_12aec, %dec_label_pc_12b15
  %storemerge = phi i32 [ 0, %dec_label_pc_12b15 ], [ 1, %dec_label_pc_12aec ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12b26

bb:                                               ; preds = %dec_label_pc_12b1a
  %v1_12b24 = call i32 @function_12b2b()
  br label %dec_label_pc_12b26

dec_label_pc_12b26:                               ; preds = %bb, %dec_label_pc_12b1a
  %v2_12b24 = phi i32 [ %v1_12b24, %bb ], [ %storemerge, %dec_label_pc_12b1a ]
  ret i32 %v2_12b24

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12b1a, { 1, 0 }
}

define i32 @function_12b2b() local_unnamed_addr {
dec_label_pc_12b2b:
  %v0_12b2c = load i32, i32* @eax, align 8
  ret i32 %v0_12b2c
}

define i32 @_ZN6CTxOutD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b2e:
  %v1_12b48 = add i32 %arg1, 8
  %v1_12b4e = call i32 @function_251cc(i32 %v1_12b48)
  ret i32 0
}

define i32 @_ZN6CTxOutC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b66:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_12b86 = add i32 %arg2, 4
  %v2_12b86 = inttoptr i32 %v1_12b86 to i32*
  %v3_12b86 = load i32, i32* %v2_12b86, align 4
  %v1_12b89 = inttoptr i32 %arg2 to i32*
  %v2_12b89 = load i32, i32* %v1_12b89, align 4
  store i32 %v2_12b89, i32* %arg1, align 4
  %v2_12b90 = add i32 %tmp103, 4
  %v3_12b90 = inttoptr i32 %v2_12b90 to i32*
  store i32 %v3_12b86, i32* %v3_12b90, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN12CBlockHeaderC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bbe:
  %v1_12bd8 = add i32 %arg1, 4
  %v5_12bd8 = icmp ugt i32 %arg1, -5
  store i1 %v5_12bd8, i1* @cf, align 1
  store i32 %v1_12bd8, i32* @eax, align 8
  %v1_12bde = call i32 @function_18978(i32 %v1_12bd8)
  %v1_12be6 = add i32 %arg1, 36
  %v5_12be6 = icmp ugt i32 %arg1, -37
  store i1 %v5_12be6, i1* @cf, align 1
  store i32 %v1_12be6, i32* @eax, align 8
  %v1_12bec = call i32 @function_18978(i32 %v1_12be6)
  store i32 %arg1, i32* @eax, align 8
  %v1_12bf7 = call i32 @function_257ce(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12c08

bb:                                               ; preds = %dec_label_pc_12bbe
  %v1_12c06 = call i32 @function_12c0d()
  br label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %bb, %dec_label_pc_12bbe
  %v2_12c06 = phi i32 [ %v1_12c06, %bb ], [ 0, %dec_label_pc_12bbe ]
  ret i32 %v2_12c06

; uselistorder directives
  uselistorder i32 (i32)* @function_18978, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_12c0d() local_unnamed_addr {
dec_label_pc_12c0d:
  %v0_12c0e = load i32, i32* @eax, align 8
  ret i32 %v0_12c0e
}

define i32 @_ZN12CBlockHeader7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12c10:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 2, i32* %arg1, align 4
  %v1_12c33 = add i32 %tmp102, 4
  store i32 %v1_12c33, i32* @eax, align 8
  %v3_12c49 = call i32 @function_18b0a(i32 %v1_12c33, i32 0, i32 0)
  %v1_12c51 = add i32 %tmp102, 36
  store i32 %v1_12c51, i32* @eax, align 8
  %v3_12c67 = call i32 @function_18b0a(i32 %v1_12c51, i32 0, i32 0)
  %v1_12c6f = add i32 %tmp102, 68
  %v2_12c6f = inttoptr i32 %v1_12c6f to i32*
  store i32 0, i32* %v2_12c6f, align 4
  %v1_12c79 = add i32 %tmp102, 72
  %v2_12c79 = inttoptr i32 %v1_12c79 to i32*
  store i32 0, i32* %v2_12c79, align 4
  %v1_12c83 = add i32 %tmp102, 76
  %v2_12c83 = inttoptr i32 %v1_12c83 to i32*
  store i32 0, i32* %v2_12c83, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_18b0a, { 1, 0 }
}

define i32 @_ZN6CBlockC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c9e:
  %v1_12cbc = call i32 @function_2585c(i32 %arg1)
  %v1_12cc4 = add i32 %arg1, 80
  store i32 %v1_12cc4, i32* @eax, align 8
  %v1_12cca = call i32 @function_29590(i32 %v1_12cc4)
  %v1_12cd2 = add i32 %arg1, ptrtoint (i32* @global_var_5c.2824 to i32)
  store i32 %v1_12cd2, i32* @eax, align 8
  %v1_12cd8 = call i32 @function_29640(i32 %v1_12cd2)
  store i32 %arg1, i32* @eax, align 8
  %v1_12ce3 = call i32 @function_259cc(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12d22

bb:                                               ; preds = %dec_label_pc_12c9e
  %v1_12d20 = call i32 @function_12d27()
  br label %dec_label_pc_12d22

dec_label_pc_12d22:                               ; preds = %bb, %dec_label_pc_12c9e
  %v2_12d20 = phi i32 [ %v1_12d20, %bb ], [ 0, %dec_label_pc_12c9e ]
  ret i32 %v2_12d20

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_12d27() local_unnamed_addr {
dec_label_pc_12d27:
  %v0_12d2c = load i32, i32* @eax, align 8
  ret i32 %v0_12d2c
}

define i32 @_ZN6CBlock7SetNullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d2e:
  %v1_12d4b = call i32 @function_2593e(i32 %arg1)
  %v1_12d53 = add i32 %arg1, 80
  store i32 %v1_12d53, i32* @eax, align 8
  %v1_12d59 = call i32 @function_29780(i32 %v1_12d53)
  %v1_12d61 = add i32 %arg1, ptrtoint (i32* @global_var_5c.2824 to i32)
  store i32 %v1_12d61, i32* @eax, align 8
  %v1_12d67 = call i32 @function_297be(i32 %v1_12d61)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_Z7TestNetv() local_unnamed_addr {
dec_label_pc_12d7f:
  ret i32 0
}

define i32 @function_12d94() local_unnamed_addr {
dec_label_pc_12d94:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_12d94 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12d94 = add i32 %v0_12d94, 146965264
  %v2_12d94 = inttoptr i32 %v1_12d94 to i32*
  %v3_12d94 = load i32, i32* %v2_12d94, align 4
  %v4_12d94 = add i32 %v3_12d94, -1
  store i32 %v4_12d94, i32* %v2_12d94, align 4
  %v0_12da1 = load i32, i32* %eax.global-to-local, align 8
  %v10_12da1 = icmp eq i32 %v0_12da1, 1
  %v1_12da4 = zext i1 %v10_12da1 to i32
  %v3_12da4 = and i32 %v0_12da1, -256
  %v4_12da4 = or i32 %v1_12da4, %v3_12da4
  store i32 %v4_12da4, i32* %eax.global-to-local, align 8
  ret i32 %v4_12da4

; uselistorder directives
  uselistorder i32 %v0_12da1, { 1, 0 }
}

define i32 @_ZN12CTransactionD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12dba:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_12dfa

bb:                                               ; preds = %dec_label_pc_12dba
  %v1_12de3 = add i32 %arg1, 4
  %v2_12df8 = call i32 @function_12e1b(i32 %v1_12de3)
  store i32 %v2_12df8, i32* @eax, align 8
  br label %dec_label_pc_12dfa

dec_label_pc_12dfa:                               ; preds = %bb, %dec_label_pc_12dba
  %v0_12dfa = call i32 @function_12e16()
  ret i32 %v0_12dfa
}

define i32 @function_12dfd() local_unnamed_addr {
dec_label_pc_12dfd:
  %eax.global-to-local = alloca i32, align 4
  %v0_12dfd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12dfd
}

define i32 @function_12dff() local_unnamed_addr {
dec_label_pc_12dff:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12e02 = load i32, i32* %ecx.global-to-local, align 8
  %v3_12e02 = mul i32 %v0_12e02, 5
  %v4_12e02 = inttoptr i32 %v3_12e02 to i8*
  %v5_12e02 = load i8, i8* %v4_12e02, align 1
  %v6_12e02 = mul i8 %v5_12e02, 16
  %v7_12e02 = udiv i8 %v5_12e02, 16
  %v8_12e02 = or i8 %v7_12e02, %v6_12e02
  store i8 %v8_12e02, i8* %v4_12e02, align 1
  %v0_12e06 = load i32, i32* %eax.global-to-local, align 8
  %v11_12e06 = and i32 %v0_12e06, -24
  store i32 %v11_12e06, i32* @eax, align 8
  %v0_12e08 = call i32 @function_89000164()
  store i32 %v0_12e08, i32* %eax.global-to-local, align 8
  ret i32 %v0_12e08

; uselistorder directives
  uselistorder i8 %v5_12e02, { 1, 0 }
}

define i32 @function_12e16() local_unnamed_addr {
dec_label_pc_12e16:
  %v0_12e16 = load i32, i32* @eax, align 8
  ret i32 %v0_12e16
}

define i32 @function_12e1b(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e1b:
  %v0_12e20 = load i32, i32* @eax, align 8
  ret i32 %v0_12e20
}

define i32 @_ZN12CTransactionC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e22:
  %ebx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v0_12e25 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12e43 = inttoptr i32 %arg2 to i32*
  %v2_12e43 = load i32, i32* %v1_12e43, align 4
  store i32 %v2_12e43, i32* %arg1, align 4
  %v1_12e4d = add i32 %arg2, 4
  %v1_12e53 = add i32 %tmp103, 4
  store i32 %v1_12e53, i32* @eax, align 8
  %v2_12e5d = call i32 @function_29d32(i32 %v1_12e53, i32 %v1_12e4d)
  %v1_12e65 = add i32 %arg2, 16
  %v1_12e6b = add i32 %tmp103, 16
  store i32 %v1_12e6b, i32* @eax, align 8
  %v2_12e75 = call i32 @function_29588(i32 %v1_12e6b, i32 %v1_12e65)
  %v1_12e7d = add i32 %arg2, 28
  %v2_12e7d = inttoptr i32 %v1_12e7d to i32*
  %v3_12e7d = load i32, i32* %v2_12e7d, align 4
  %v2_12e83 = add i32 %tmp103, 28
  %v3_12e83 = inttoptr i32 %v2_12e83 to i32*
  store i32 %v3_12e7d, i32* %v3_12e83, align 4
  store i32 %v0_12e25, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @_ZNK11CBlockIndex12GetBlockTimeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12eba:
  %v1_12ed4 = add i32 %arg1, 104
  %v2_12ed4 = inttoptr i32 %v1_12ed4 to i32*
  %v3_12ed4 = load i32, i32* %v2_12ed4, align 4
  store i32 %v3_12ed4, i32* @eax, align 8
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_12ee8

bb:                                               ; preds = %dec_label_pc_12eba
  %v2_12ee6 = call i32 @function_12eed(i32 %arg1)
  br label %dec_label_pc_12ee8

dec_label_pc_12ee8:                               ; preds = %bb, %dec_label_pc_12eba
  %v3_12ee6 = phi i32 [ %v2_12ee6, %bb ], [ %v3_12ed4, %dec_label_pc_12eba ]
  ret i32 %v3_12ee6
}

define i32 @function_12eed(i32 %arg1) local_unnamed_addr {
dec_label_pc_12eed:
  %v0_12eee = load i32, i32* @eax, align 8
  ret i32 %v0_12eee
}

define i32 @_ZNK11CBlockIndex17GetMedianTimePastEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ef0:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v16_12f0d = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_12f4f

dec_label_pc_12f2b:                               ; preds = %dec_label_pc_12f67
  %v4_12f2b = add i32 %stack_var_-124.0, -8
  store i32 %storemerge2, i32* @eax, align 8
  %v1_12f35 = call i32 @function_25daa(i32 %storemerge2)
  store i32 %v4_12f2b, i32* %ecx.global-to-local, align 8
  %v2_12f3d = inttoptr i32 %v4_12f2b to i32*
  store i32 %v1_12f35, i32* %v2_12f3d, align 4
  %v0_12f3f = load i32, i32* @edx, align 4
  %v1_12f3f = load i32, i32* %ecx.global-to-local, align 8
  %v2_12f3f = add i32 %v1_12f3f, 4
  %v3_12f3f = inttoptr i32 %v2_12f3f to i32*
  store i32 %v0_12f3f, i32* %v3_12f3f, align 4
  %v4_12f42 = add i32 %stack_var_-116.0, 1
  %v1_12f49 = add i32 %storemerge2, 4
  %v2_12f49 = inttoptr i32 %v1_12f49 to i32*
  %v3_12f49 = load i32, i32* %v2_12f49, align 4
  br label %dec_label_pc_12f4f

dec_label_pc_12f4f:                               ; preds = %dec_label_pc_12f2b, %dec_label_pc_12ef0
  %storemerge2 = phi i32 [ %arg1, %dec_label_pc_12ef0 ], [ %v3_12f49, %dec_label_pc_12f2b ]
  %stack_var_-124.0 = phi i32 [ %v16_12f0d, %dec_label_pc_12ef0 ], [ %v4_12f2b, %dec_label_pc_12f2b ]
  %stack_var_-116.0 = phi i32 [ 0, %dec_label_pc_12ef0 ], [ %v4_12f42, %dec_label_pc_12f2b ]
  %v8_12f53 = icmp sgt i32 %stack_var_-116.0, 10
  br i1 %v8_12f53, label %dec_label_pc_12f62, label %dec_label_pc_12f55

dec_label_pc_12f55:                               ; preds = %dec_label_pc_12f4f
  %v10_12f55 = icmp eq i32 %storemerge2, 0
  br i1 %v10_12f55, label %dec_label_pc_12f62, label %dec_label_pc_12f67

dec_label_pc_12f62:                               ; preds = %dec_label_pc_12f55, %dec_label_pc_12f4f
  br label %dec_label_pc_12f67

dec_label_pc_12f67:                               ; preds = %dec_label_pc_12f55, %dec_label_pc_12f62
  %storemerge = phi i1 [ false, %dec_label_pc_12f62 ], [ true, %dec_label_pc_12f55 ]
  br i1 %storemerge, label %dec_label_pc_12f2b, label %dec_label_pc_12f6b

dec_label_pc_12f6b:                               ; preds = %dec_label_pc_12f67
  store i32 %stack_var_-124.0, i32* @eax, align 8
  %v2_12f78 = call i32 @function_29ed9(i32 %stack_var_-124.0, i32 %v16_12f0d)
  %v2_12f85 = sub i32 %v16_12f0d, %stack_var_-124.0
  store i32 %v2_12f85, i32* %ecx.global-to-local, align 8
  %v2_12f89 = sdiv i32 %v2_12f85, 8
  %tmp117 = icmp slt i32 %v2_12f85, -7
  %v2_12f8e = zext i1 %tmp117 to i32
  %v2_12f91 = add nsw i32 %v2_12f8e, %v2_12f89
  %v2_12f93 = sdiv i32 %v2_12f91, 2
  %v2_12f95 = mul i32 %v2_12f93, 8
  %v5_12f98 = add i32 %v2_12f95, %stack_var_-124.0
  %v1_12f9e = inttoptr i32 %v5_12f98 to i32*
  %v2_12f9e = load i32, i32* %v1_12f9e, align 4
  store i32 0, i32* %ecx.global-to-local, align 8
  ret i32 %v2_12f9e

; uselistorder directives
  uselistorder i32 %stack_var_-116.0, { 1, 0 }
  uselistorder i32 %stack_var_-124.0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge2, { 3, 1, 0, 2 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12f67, { 1, 0 }
}

define i32 @_ZN16CValidationStateC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12fb4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_12fd7 = add i32 %tmp100, 4
  %v2_12fd7 = inttoptr i32 %v1_12fd7 to i32*
  store i32 0, i32* %v2_12fd7, align 4
  ret i32 0
}

define i32 @_ZN10CTxMemPool4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ff2:
  %stack_var_-24 = alloca i32, align 4
  %v2_13031 = ptrtoint i32* %stack_var_-24 to i32
  %v8_13037 = call i32 @function_2920c(i32 %v2_13031, i32 %arg1, i32 ptrtoint ([3 x i8]* @global_var_660a.2827 to i32), i32 ptrtoint ([7 x i8]* @global_var_6603.2826 to i32), i32 1143, i32 0)
  %v1_1303f = add i32 %arg1, ptrtoint (i32* @global_var_54.2828 to i32)
  store i32 %v1_1303f, i32* @eax, align 8
  %v1_13045 = call i32 @function_2a054(i32 %v1_1303f)
  %v1_13052 = call i32 @function_292d0(i32 %v2_13031)
  store i32 %v1_13045, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13065

bb:                                               ; preds = %dec_label_pc_12ff2
  %v1_13063 = call i32 @function_13083()
  store i32 %v1_13063, i32* @eax, align 8
  br label %dec_label_pc_13065

dec_label_pc_13065:                               ; preds = %bb, %dec_label_pc_12ff2
  %v0_13065 = call i32 @function_1307e()
  ret i32 %v0_13065

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13068() local_unnamed_addr {
dec_label_pc_13068:
  %eax.global-to-local = alloca i32, align 4
  %v0_13068 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13068
}

define i32 @function_1307e() local_unnamed_addr {
dec_label_pc_1307e:
  %v0_1307e = load i32, i32* @eax, align 8
  ret i32 %v0_1307e
}

define i32 @function_13083() local_unnamed_addr {
dec_label_pc_13083:
  %v0_13088 = load i32, i32* @eax, align 8
  ret i32 %v0_13088
}

define i32 @_ZN11CReserveKeyC1EP7CWallet(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1308a:
  %eax.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v0_1309c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_130aa = add i32 %tmp102, 12
  store i32 %v1_130aa, i32* @eax, align 8
  %v1_130b0 = call i32 @function_2560e(i32 %v1_130aa)
  store i32 %tmp102, i32* %eax.global-to-local, align 8
  %v1_130b8 = add i32 %tmp102, 4
  %v2_130b8 = inttoptr i32 %v1_130b8 to i32*
  store i32 -1, i32* %v2_130b8, align 4
  %v0_130bf = load i32, i32* %eax.global-to-local, align 8
  %v1_130bf = add i32 %v0_130bf, 8
  %v2_130bf = inttoptr i32 %v1_130bf to i32*
  store i32 -1, i32* %v2_130bf, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_1309c, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_130da

bb:                                               ; preds = %dec_label_pc_1308a
  %v1_130d8 = call i32 @function_130df()
  store i32 %v1_130d8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_130da

dec_label_pc_130da:                               ; preds = %bb, %dec_label_pc_1308a
  %v2_130d8 = phi i32 [ %v1_130d8, %bb ], [ 0, %dec_label_pc_1308a ]
  ret i32 %v2_130d8

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_130df() local_unnamed_addr {
dec_label_pc_130df:
  %v0_130e0 = load i32, i32* @eax, align 8
  ret i32 %v0_130e0
}

define i32 @_ZN11CReserveKeyD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_130e2:
  ret i32 %arg1
}

define i32 @function_13114() local_unnamed_addr {
dec_label_pc_13114:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13114 = load i32, i32* %ecx.global-to-local, align 8
  %v1_13114 = add i32 %v0_13114, -1
  store i32 %v1_13114, i32* %ecx.global-to-local, align 8
  %v0_13116 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13116
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14nothing_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13118:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic14nothing_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13142:
  store i32 %arg1, i32* @eax, align 8
  %v1_1315f = call i32 @function_2625a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13170

bb:                                               ; preds = %dec_label_pc_13142
  %v1_1316e = call i32 @function_13175()
  br label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %bb, %dec_label_pc_13142
  %v2_1316e = phi i32 [ %v1_1316e, %bb ], [ 0, %dec_label_pc_13142 ]
  ret i32 %v2_1316e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13175() local_unnamed_addr {
dec_label_pc_13175:
  %v0_13176 = load i32, i32* @eax, align 8
  ret i32 %v0_13176
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14anychar_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13178:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1319b

bb:                                               ; preds = %dec_label_pc_13178
  %v2_13199 = call i32 @function_131a0(i32 %arg1)
  br label %dec_label_pc_1319b

dec_label_pc_1319b:                               ; preds = %bb, %dec_label_pc_13178
  %v3_13199 = phi i32 [ %v2_13199, %bb ], [ 0, %dec_label_pc_13178 ]
  ret i32 %v3_13199
}

define i32 @function_131a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_131a0:
  %v0_131a1 = load i32, i32* @eax, align 8
  ret i32 %v0_131a1
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_14anychar_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_131a2:
  store i32 %arg1, i32* @eax, align 8
  %v1_131bf = call i32 @function_2631a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_131d0

bb:                                               ; preds = %dec_label_pc_131a2
  %v1_131ce = call i32 @function_131d5()
  br label %dec_label_pc_131d0

dec_label_pc_131d0:                               ; preds = %bb, %dec_label_pc_131a2
  %v2_131ce = phi i32 [ %v1_131ce, %bb ], [ 0, %dec_label_pc_131a2 ]
  ret i32 %v2_131ce

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_131d5() local_unnamed_addr {
dec_label_pc_131d5:
  %v0_131d6 = load i32, i32* @eax, align 8
  ret i32 %v0_131d6
}

define i32 @_ZN5boost6spirit7classic14anychar_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_131d8:
  store i32 %arg1, i32* @eax, align 8
  %v1_131f5 = call i32 @function_2637a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12alnum_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1320e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13231

bb:                                               ; preds = %dec_label_pc_1320e
  %v2_1322f = call i32 @function_13236(i32 %arg1)
  br label %dec_label_pc_13231

dec_label_pc_13231:                               ; preds = %bb, %dec_label_pc_1320e
  %v3_1322f = phi i32 [ %v2_1322f, %bb ], [ 0, %dec_label_pc_1320e ]
  ret i32 %v3_1322f
}

define i32 @function_13236(i32 %arg1) local_unnamed_addr {
dec_label_pc_13236:
  %v0_13237 = load i32, i32* @eax, align 8
  ret i32 %v0_13237
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12alnum_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13238:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic12alnum_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1326e:
  %v1_1328b = call i32 @function_264a6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1329c

bb:                                               ; preds = %dec_label_pc_1326e
  %v1_1329a = call i32 @function_132a1()
  br label %dec_label_pc_1329c

dec_label_pc_1329c:                               ; preds = %bb, %dec_label_pc_1326e
  %v2_1329a = phi i32 [ %v1_1329a, %bb ], [ 0, %dec_label_pc_1326e ]
  ret i32 %v2_1329a
}

define i32 @function_132a1() local_unnamed_addr {
dec_label_pc_132a1:
  %v0_132a2 = load i32, i32* @eax, align 8
  ret i32 %v0_132a2
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12alpha_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_132a4:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_132c7

bb:                                               ; preds = %dec_label_pc_132a4
  %v2_132c5 = call i32 @function_132cc(i32 %arg1)
  br label %dec_label_pc_132c7

dec_label_pc_132c7:                               ; preds = %bb, %dec_label_pc_132a4
  %v3_132c5 = phi i32 [ %v2_132c5, %bb ], [ 0, %dec_label_pc_132a4 ]
  ret i32 %v3_132c5
}

define i32 @function_132cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_132cc:
  %v0_132cd = load i32, i32* @eax, align 8
  ret i32 %v0_132cd
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12alpha_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_132ce:
  store i32 %arg1, i32* @eax, align 8
  %v1_132eb = call i32 @function_26572(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_132fc

bb:                                               ; preds = %dec_label_pc_132ce
  %v1_132fa = call i32 @function_13301()
  br label %dec_label_pc_132fc

dec_label_pc_132fc:                               ; preds = %bb, %dec_label_pc_132ce
  %v2_132fa = phi i32 [ %v1_132fa, %bb ], [ 0, %dec_label_pc_132ce ]
  ret i32 %v2_132fa

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13301() local_unnamed_addr {
dec_label_pc_13301:
  %v0_13302 = load i32, i32* @eax, align 8
  ret i32 %v0_13302
}

define i32 @_ZN5boost6spirit7classic12alpha_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13304:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12cntrl_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1333a:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12cntrl_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13364:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic12cntrl_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1339a:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_133c8

bb:                                               ; preds = %dec_label_pc_1339a
  %v2_133c6 = call i32 @function_133cd(i32 %arg1)
  br label %dec_label_pc_133c8

dec_label_pc_133c8:                               ; preds = %bb, %dec_label_pc_1339a
  %v3_133c6 = phi i32 [ %v2_133c6, %bb ], [ 0, %dec_label_pc_1339a ]
  ret i32 %v3_133c6
}

define i32 @function_133cd(i32 %arg1) local_unnamed_addr {
dec_label_pc_133cd:
  %v0_133ce = load i32, i32* @eax, align 8
  ret i32 %v0_133ce
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12digit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_133d0:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12digit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_133fa:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic12digit_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13430:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12graph_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13466:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12graph_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13490:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic12graph_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_134c6:
  %v1_134e3 = call i32 @__stack_chk_fail.763(i32 %arg1)
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12lower_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_134fc:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12lower_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13526:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_13543 = call i32 @function_26a22(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13554

bb:                                               ; preds = %dec_label_pc_13526
  %v1_13552 = call i32 @function_13559()
  br label %dec_label_pc_13554

dec_label_pc_13554:                               ; preds = %bb, %dec_label_pc_13526
  %v2_13552 = phi i32 [ %v1_13552, %bb ], [ 0, %dec_label_pc_13526 ]
  ret i32 %v2_13552

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13559() local_unnamed_addr {
dec_label_pc_13559:
  %v0_1355a = load i32, i32* @eax, align 8
  ret i32 %v0_1355a
}

define i32 @_ZN5boost6spirit7classic12lower_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1355c:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_13579 = call i32 @function_26a82(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12print_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13592:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12print_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_135bc:
  store i32 %arg1, i32* @eax, align 8
  %v1_135d9 = call i32 @function_26b4e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_135ea

bb:                                               ; preds = %dec_label_pc_135bc
  %v1_135e8 = call i32 @function_135ef()
  br label %dec_label_pc_135ea

dec_label_pc_135ea:                               ; preds = %bb, %dec_label_pc_135bc
  %v2_135e8 = phi i32 [ %v1_135e8, %bb ], [ 0, %dec_label_pc_135bc ]
  ret i32 %v2_135e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_135ef() local_unnamed_addr {
dec_label_pc_135ef:
  %v0_135f0 = load i32, i32* @eax, align 8
  ret i32 %v0_135f0
}

define i32 @_ZN5boost6spirit7classic12print_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_135f2:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13620

bb:                                               ; preds = %dec_label_pc_135f2
  %v2_1361e = call i32 @function_13625(i32 %arg1)
  br label %dec_label_pc_13620

dec_label_pc_13620:                               ; preds = %bb, %dec_label_pc_135f2
  %v3_1361e = phi i32 [ %v2_1361e, %bb ], [ 0, %dec_label_pc_135f2 ]
  ret i32 %v3_1361e
}

define i32 @function_13625(i32 %arg1) local_unnamed_addr {
dec_label_pc_13625:
  %v0_13626 = load i32, i32* @eax, align 8
  ret i32 %v0_13626
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12punct_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13628:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12punct_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13652:
  store i32 %arg1, i32* @eax, align 8
  %v1_1366f = call i32 @function_26c7a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13680

bb:                                               ; preds = %dec_label_pc_13652
  %v1_1367e = call i32 @function_13685()
  br label %dec_label_pc_13680

dec_label_pc_13680:                               ; preds = %bb, %dec_label_pc_13652
  %v2_1367e = phi i32 [ %v1_1367e, %bb ], [ 0, %dec_label_pc_13652 ]
  ret i32 %v2_1367e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13685() local_unnamed_addr {
dec_label_pc_13685:
  %v0_13686 = load i32, i32* @eax, align 8
  ret i32 %v0_13686
}

define i32 @_ZN5boost6spirit7classic12punct_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13688:
  store i32 %arg1, i32* @eax, align 8
  %v1_136a5 = call i32 @function_26cda(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12blank_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_136be:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12blank_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_136e8:
  store i32 %arg1, i32* @eax, align 8
  %v1_13705 = call i32 @function_26da6(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic12blank_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1371e:
  store i32 %arg1, i32* @eax, align 8
  %v1_1373b = call i32 @function_26e06(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1374c

bb:                                               ; preds = %dec_label_pc_1371e
  %v1_1374a = call i32 @function_13751()
  br label %dec_label_pc_1374c

dec_label_pc_1374c:                               ; preds = %bb, %dec_label_pc_1371e
  %v2_1374a = phi i32 [ %v1_1374a, %bb ], [ 0, %dec_label_pc_1371e ]
  ret i32 %v2_1374a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13751() local_unnamed_addr {
dec_label_pc_13751:
  %v0_13752 = load i32, i32* @eax, align 8
  ret i32 %v0_13752
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12space_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13754:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12space_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1377e:
  %v1_1379b = call i32 @function_26ed2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_137ac

bb:                                               ; preds = %dec_label_pc_1377e
  %v1_137aa = call i32 @function_137b1()
  br label %dec_label_pc_137ac

dec_label_pc_137ac:                               ; preds = %bb, %dec_label_pc_1377e
  %v2_137aa = phi i32 [ %v1_137aa, %bb ], [ 0, %dec_label_pc_1377e ]
  ret i32 %v2_137aa
}

define i32 @function_137b1() local_unnamed_addr {
dec_label_pc_137b1:
  %v0_137b2 = load i32, i32* @eax, align 8
  ret i32 %v0_137b2
}

define i32 @_ZN5boost6spirit7classic12space_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_137b4:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_137e2

bb:                                               ; preds = %dec_label_pc_137b4
  %v2_137e0 = call i32 @function_137e7(i32 %arg1)
  br label %dec_label_pc_137e2

dec_label_pc_137e2:                               ; preds = %bb, %dec_label_pc_137b4
  %v3_137e0 = phi i32 [ %v2_137e0, %bb ], [ 0, %dec_label_pc_137b4 ]
  ret i32 %v3_137e0
}

define i32 @function_137e7(i32 %arg1) local_unnamed_addr {
dec_label_pc_137e7:
  %v0_137e8 = load i32, i32* @eax, align 8
  ret i32 %v0_137e8
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12upper_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_137ea:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12upper_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13814:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic12upper_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1384a:
  store i32 %arg1, i32* @eax, align 8
  %v1_13867 = call i32 @function_2705e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13878

bb:                                               ; preds = %dec_label_pc_1384a
  %v1_13876 = call i32 @function_1387d()
  br label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %bb, %dec_label_pc_1384a
  %v2_13876 = phi i32 [ %v1_13876, %bb ], [ 0, %dec_label_pc_1384a ]
  ret i32 %v2_13876

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1387d() local_unnamed_addr {
dec_label_pc_1387d:
  %v0_1387e = load i32, i32* @eax, align 8
  ret i32 %v0_1387e
}

define i32 @_ZN5boost6spirit7classic6parserINS1_13xdigit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13880:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_138a3

bb:                                               ; preds = %dec_label_pc_13880
  %v2_138a1 = call i32 @function_138a8(i32 %arg1)
  br label %dec_label_pc_138a3

dec_label_pc_138a3:                               ; preds = %bb, %dec_label_pc_13880
  %v3_138a1 = phi i32 [ %v2_138a1, %bb ], [ 0, %dec_label_pc_13880 ]
  ret i32 %v3_138a1
}

define i32 @function_138a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_138a8:
  %v0_138a9 = load i32, i32* @eax, align 8
  ret i32 %v0_138a9
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_13xdigit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_138aa:
  %v1_138c7 = call i32 @function_2712a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_138d8

bb:                                               ; preds = %dec_label_pc_138aa
  %v1_138d6 = call i32 @function_138dd()
  br label %dec_label_pc_138d8

dec_label_pc_138d8:                               ; preds = %bb, %dec_label_pc_138aa
  %v2_138d6 = phi i32 [ %v1_138d6, %bb ], [ 0, %dec_label_pc_138aa ]
  ret i32 %v2_138d6
}

define i32 @function_138dd() local_unnamed_addr {
dec_label_pc_138dd:
  %v0_138de = load i32, i32* @eax, align 8
  ret i32 %v0_138de
}

define i32 @_ZN5boost6spirit7classic13xdigit_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_138e0:
  store i32 %arg1, i32* @eax, align 8
  %v1_138fd = call i32 @function_2718a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_10eol_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13916:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13939

bb:                                               ; preds = %dec_label_pc_13916
  %v2_13937 = call i32 @function_1393e(i32 %arg1)
  br label %dec_label_pc_13939

dec_label_pc_13939:                               ; preds = %bb, %dec_label_pc_13916
  %v3_13937 = phi i32 [ %v2_13937, %bb ], [ 0, %dec_label_pc_13916 ]
  ret i32 %v3_13937
}

define i32 @function_1393e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1393e:
  %v0_1393f = load i32, i32* @eax, align 8
  ret i32 %v0_1393f
}

define i32 @_ZN5boost6spirit7classic10eol_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13940:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic6parserINS1_10end_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13976:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13999

bb:                                               ; preds = %dec_label_pc_13976
  %v2_13997 = call i32 @function_1399e(i32 %arg1)
  br label %dec_label_pc_13999

dec_label_pc_13999:                               ; preds = %bb, %dec_label_pc_13976
  %v3_13997 = phi i32 [ %v2_13997, %bb ], [ 0, %dec_label_pc_13976 ]
  ret i32 %v3_13997
}

define i32 @function_1399e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1399e:
  %v0_1399f = load i32, i32* @eax, align 8
  ret i32 %v0_1399f
}

define i32 @_ZN5boost6spirit7classic10end_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_139a0:
  store i32 %arg1, i32* @eax, align 8
  %v1_139bd = call i32 @function_27316(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_139ce

bb:                                               ; preds = %dec_label_pc_139a0
  %v1_139cc = call i32 @function_139d3()
  br label %dec_label_pc_139ce

dec_label_pc_139ce:                               ; preds = %bb, %dec_label_pc_139a0
  %v2_139cc = phi i32 [ %v1_139cc, %bb ], [ 0, %dec_label_pc_139a0 ]
  ret i32 %v2_139cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_139d3() local_unnamed_addr {
dec_label_pc_139d3:
  %v0_139d4 = load i32, i32* @eax, align 8
  ret i32 %v0_139d4
}

define i32 @_ZN5boost6spirit7classic28inhibit_case_parser_gen_baseILi0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_139d6:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic23inhibit_case_parser_genC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a00:
  store i32 %arg1, i32* @eax, align 8
  %v1_13a1d = trunc i32 %arg1 to i16
  %v2_13a1d = call i32 @function_273d6(i16 %v1_13a1d)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11sign_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a36:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13a59

bb:                                               ; preds = %dec_label_pc_13a36
  %v2_13a57 = call i32 @function_13a5e(i32 %arg1)
  br label %dec_label_pc_13a59

dec_label_pc_13a59:                               ; preds = %bb, %dec_label_pc_13a36
  %v3_13a57 = phi i32 [ %v2_13a57, %bb ], [ 0, %dec_label_pc_13a36 ]
  ret i32 %v3_13a57
}

define i32 @function_13a5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a5e:
  %v0_13a5f = load i32, i32* @eax, align 8
  ret i32 %v0_13a5f
}

define i32 @_ZN5boost6spirit7classic11sign_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a60:
  store i32 %arg1, i32* @eax, align 8
  %v1_13a7d = call i32 @function_27496(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13a8e

bb:                                               ; preds = %dec_label_pc_13a60
  %v1_13a8c = call i32 @function_13a93()
  br label %dec_label_pc_13a8e

dec_label_pc_13a8e:                               ; preds = %bb, %dec_label_pc_13a60
  %v2_13a8c = phi i32 [ %v1_13a8c, %bb ], [ 0, %dec_label_pc_13a60 ]
  ret i32 %v2_13a8c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13a93() local_unnamed_addr {
dec_label_pc_13a93:
  %v0_13a94 = load i32, i32* @eax, align 8
  ret i32 %v0_13a94
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14epsilon_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a96:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic14epsilon_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ac0:
  store i32 %arg1, i32* @eax, align 8
  %v1_13add = call i32 @function_27556(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13af6:
  %v1_13b10 = add i32 %arg1, 4
  %v10_13b10 = icmp eq i32 %v1_13b10, 0
  store i1 %v10_13b10, i1* @zf, align 1
  store i32 %v1_13b10, i32* @eax, align 8
  %v1_13b16 = call i32 @function_2ae02(i32 %v1_13b10)
  ret i32 0
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b2e:
  %v1_13b49 = add i32 %arg1, 4
  store i32 %v1_13b49, i32* @eax, align 8
  %v1_13b4f = call i32 @function_27624(i32 %v1_13b49)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13b6b

bb:                                               ; preds = %dec_label_pc_13b2e
  %v2_13b69 = call i32 @function_13b89(i32 %arg1)
  store i32 %v2_13b69, i32* @eax, align 8
  br label %dec_label_pc_13b6b

dec_label_pc_13b6b:                               ; preds = %bb, %dec_label_pc_13b2e
  %v0_13b6b = call i32 @function_13b84()
  ret i32 %v0_13b6b
}

define i32 @function_13b6e() local_unnamed_addr {
dec_label_pc_13b6e:
  %eax.global-to-local = alloca i32, align 4
  %v0_13b6e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13b6e
}

define i32 @function_13b84() local_unnamed_addr {
dec_label_pc_13b84:
  %v0_13b84 = load i32, i32* @eax, align 8
  ret i32 %v0_13b84
}

define i32 @function_13b89(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b89:
  %v0_13b8e = load i32, i32* @eax, align 8
  ret i32 %v0_13b8e
}

define i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b90:
  store i32 %arg1, i32* @eax, align 8
  %v1_13bad = call i32 @function_2b73e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN6CBlockD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13bc6:
  %v1_13be1 = add i32 %arg1, ptrtoint (i32* @global_var_5c.2824 to i32)
  store i32 %v1_13be1, i32* @eax, align 8
  %v1_13be7 = call i32 @function_2a59e(i32 %v1_13be1)
  %v1_13bef = add i32 %arg1, 80
  store i32 %v1_13bef, i32* @eax, align 8
  %v1_13bf5 = call i32 @function_2a4ee(i32 %v1_13bef)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13c06

bb:                                               ; preds = %dec_label_pc_13bc6
  %v1_13c04 = call i32 @function_13c27()
  store i32 %v1_13c04, i32* @eax, align 8
  br label %dec_label_pc_13c06

dec_label_pc_13c06:                               ; preds = %bb, %dec_label_pc_13bc6
  %v0_13c06 = call i32 @function_13c22()
  ret i32 %v0_13c06

; uselistorder directives
  uselistorder i32 80, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13c09() local_unnamed_addr {
dec_label_pc_13c09:
  %eax.global-to-local = alloca i32, align 4
  %v0_13c09 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13c09
}

define i32 @function_13c22() local_unnamed_addr {
dec_label_pc_13c22:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13c27() local_unnamed_addr {
dec_label_pc_13c27:
  %v0_13c2c = load i32, i32* @eax, align 8
  ret i32 %v0_13c2c
}

define i32 @_ZN14CBlockTemplateD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c2e:
  %v1_13c49 = add i32 %arg1, 116
  %v1_13c4f = call i32 @function_2bb64(i32 %v1_13c49)
  %v1_13c57 = add i32 %arg1, 104
  %v1_13c5d = call i32 @function_2bb64(i32 %v1_13c57)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13ca4

bb:                                               ; preds = %dec_label_pc_13c2e
  %v2_13c77 = call i32 @function_13ca9(i32 %arg1)
  br label %dec_label_pc_13ca4

dec_label_pc_13ca4:                               ; preds = %dec_label_pc_13c2e, %bb
  %v0_13c79 = phi i32 [ 0, %dec_label_pc_13c2e ], [ %v2_13c77, %bb ]
  ret i32 %v0_13c79

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13ca4, { 1, 0 }
}

define i32 @function_13c7b() local_unnamed_addr {
dec_label_pc_13c7b:
  %eax.global-to-local = alloca i32, align 4
  %v0_13c7b = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_13c7b, i32* @ebx, align 4
  %v0_13c7d = load i32, i32* @ebp, align 4
  %v1_13c7d = add i32 %v0_13c7d, -28
  %v2_13c7d = inttoptr i32 %v1_13c7d to i32*
  %v3_13c7d = load i32, i32* %v2_13c7d, align 4
  %v1_13c80 = add i32 %v3_13c7d, 104
  store i32 %v1_13c80, i32* %eax.global-to-local, align 8
  %v1_13c86 = call i32 @function_2bb64(i32 %v1_13c80)
  store i32 %v1_13c86, i32* %eax.global-to-local, align 8
  %v0_13c8b = call i32 @function_13c8f()
  store i32 %v0_13c8b, i32* %eax.global-to-local, align 8
  ret i32 %v0_13c8b

; uselistorder directives
  uselistorder i32 (i32)* @function_2bb64, { 2, 1, 0 }
}

define i32 @function_13c8d() local_unnamed_addr {
dec_label_pc_13c8d:
  %eax.global-to-local = alloca i32, align 4
  %v0_13c8d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13c8d
}

define i32 @function_13c8f() local_unnamed_addr {
dec_label_pc_13c8f:
  %v0_13c9a = load i32, i32* @ebx, align 4
  ret i32 %v0_13c9a
}

define i32 @function_13ca9(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ca9:
  %v0_13cae = load i32, i32* @eax, align 8
  ret i32 %v0_13cae
}

define i32 @_ZNSt4pairIP6CBlock7CScriptED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13cb0:
  %v1_13cca = add i32 %arg1, 4
  %v1_13cd0 = call i32 @_ZN5boost12range_detail11range_beginISt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %v1_13cca)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13ce1

bb:                                               ; preds = %dec_label_pc_13cb0
  %v1_13cdf = call i32 @function_13ce6()
  br label %dec_label_pc_13ce1

dec_label_pc_13ce1:                               ; preds = %bb, %dec_label_pc_13cb0
  %v2_13cdf = phi i32 [ %v1_13cdf, %bb ], [ 0, %dec_label_pc_13cb0 ]
  ret i32 %v2_13cdf
}

define i32 @function_13ce6() local_unnamed_addr {
dec_label_pc_13ce6:
  %v0_13ce7 = load i32, i32* @eax, align 8
  ret i32 %v0_13ce7
}

define i32 @_ZN7CScriptaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ce8:
  store i32 %arg1, i32* @eax, align 8
  %v2_13d12 = call i32 @function_29ca0(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt4pairIP6CBlock7CScriptEaSERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13d2e:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_13d4e = inttoptr i32 %arg2 to i32*
  %v2_13d4e = load i32, i32* %v1_13d4e, align 4
  store i32 %v2_13d4e, i32* %arg1, align 4
  %v1_13d58 = add i32 %arg2, 4
  %v1_13d5e = add i32 %tmp103, 4
  store i32 %v1_13d5e, i32* @eax, align 8
  %v2_13d68 = call i32 @function_27a16(i32 %v1_13d5e, i32 %v1_13d58)
  ret i32 %tmp103

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d84:
  store i32 %arg1, i32* @eax, align 8
  %v1_13da1 = call i32 @function_2c52e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_13dba:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_13dd4 = add i32 %tmp100, 4
  %v2_13dd4 = inttoptr i32 %v1_13dd4 to i32*
  %v3_13dd4 = load i32, i32* %v2_13dd4, align 4
  %v2_13ddc = load i32, i32* %arg1, align 4
  %v2_13de0 = sub i32 %v3_13dd4, %v2_13ddc
  store i32 %v2_13de0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13df0

bb:                                               ; preds = %dec_label_pc_13dba
  %v2_13dee = call i32 @function_13df5(i32 %tmp100)
  br label %dec_label_pc_13df0

dec_label_pc_13df0:                               ; preds = %bb, %dec_label_pc_13dba
  %v3_13dee = phi i32 [ %v2_13dee, %bb ], [ %v2_13de0, %dec_label_pc_13dba ]
  ret i32 %v3_13dee
}

define i32 @function_13df5(i32 %arg1) local_unnamed_addr {
dec_label_pc_13df5:
  %v0_13df6 = load i32, i32* @eax, align 8
  ret i32 %v0_13df6
}

define i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13df8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_13df8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_13e18 = load i32, i32* %arg1, align 4
  %v5_13e1a = add i32 %v2_13e18, %arg2
  store i32 %v0_13df8, i32* %ebp.global-to-local, align 4
  ret i32 %v5_13e1a
}

define i32 @_ZeqRK9base_uintILj256EEy(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13e30:
  %ebp.global-to-local = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v0_13e30 = load i32, i32* %ebp.global-to-local, align 4
  %v2_13e56 = load i32, i32* %arg1, align 4
  %v12_13e5b = icmp eq i32 %v2_13e56, %arg2
  br i1 %v12_13e5b, label %dec_label_pc_13e66, label %dec_label_pc_13e5f

dec_label_pc_13e5f:                               ; preds = %dec_label_pc_13e30
  br label %dec_label_pc_13eb2

dec_label_pc_13e66:                               ; preds = %dec_label_pc_13e30
  %v1_13e69 = add i32 %tmp109, 4
  %v2_13e69 = inttoptr i32 %v1_13e69 to i32*
  %v3_13e69 = load i32, i32* %v2_13e69, align 4
  %v12_13e76 = icmp eq i32 %v3_13e69, %arg3
  br i1 %v12_13e76, label %dec_label_pc_13ea2.preheader, label %dec_label_pc_13e7a

dec_label_pc_13ea2.preheader:                     ; preds = %dec_label_pc_13e66
  br label %dec_label_pc_13e8a

dec_label_pc_13e7a:                               ; preds = %dec_label_pc_13e66
  br label %dec_label_pc_13eb2

dec_label_pc_13e8a:                               ; preds = %dec_label_pc_13ea2.preheader, %dec_label_pc_13ea2
  %storemerge115 = phi i32 [ 2, %dec_label_pc_13ea2.preheader ], [ %v4_13e9e, %dec_label_pc_13ea2 ]
  %v2_13e90 = mul nuw nsw i32 %storemerge115, 4
  %v3_13e90 = add i32 %v2_13e90, %tmp109
  %v4_13e90 = inttoptr i32 %v3_13e90 to i32*
  %v5_13e90 = load i32, i32* %v4_13e90, align 4
  %v1_13e93 = icmp eq i32 %v5_13e90, 0
  %v4_13e9e = add nuw nsw i32 %storemerge115, 1
  br i1 %v1_13e93, label %dec_label_pc_13ea2, label %dec_label_pc_13e97

dec_label_pc_13e97:                               ; preds = %dec_label_pc_13e8a
  br label %dec_label_pc_13eb2

dec_label_pc_13ea2:                               ; preds = %dec_label_pc_13e8a
  %tmp112 = sub nsw i32 5, %storemerge115
  %v11_13ea2 = and i32 %tmp112, %v4_13e9e
  %v12_13ea2 = icmp slt i32 %v11_13ea2, 0
  %v13_13ea2 = icmp eq i32 %v4_13e9e, 7
  %v14_13ea2 = icmp slt i32 %v4_13e9e, 7
  %v3_13ea6 = icmp ne i1 %v14_13ea2, %v12_13ea2
  %v4_13ea6 = or i1 %v13_13ea2, %v3_13ea6
  %v5_13ea9 = icmp eq i1 %v4_13ea6, false
  %v1_13eab = icmp eq i1 %v5_13ea9, false
  br i1 %v1_13eab, label %dec_label_pc_13e8a, label %dec_label_pc_13ead

dec_label_pc_13ead:                               ; preds = %dec_label_pc_13ea2
  br label %dec_label_pc_13eb2

dec_label_pc_13eb2:                               ; preds = %dec_label_pc_13e97, %dec_label_pc_13ead, %dec_label_pc_13e7a, %dec_label_pc_13e5f
  %v0_13ec4 = phi i32 [ 0, %dec_label_pc_13e97 ], [ 1, %dec_label_pc_13ead ], [ 0, %dec_label_pc_13e7a ], [ 0, %dec_label_pc_13e5f ]
  store i32 %v0_13e30, i32* %ebp.global-to-local, align 4
  ret i32 %v0_13ec4

; uselistorder directives
  uselistorder i32 %storemerge115, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13eb2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13e8a, { 1, 0 }
}

define i32 @_ZN9base_uintILj256EEpLERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ec6:
  br label %dec_label_pc_13efb

dec_label_pc_13efb:                               ; preds = %dec_label_pc_13ec6, %dec_label_pc_13efb
  %storemerge113 = phi i32 [ 0, %dec_label_pc_13ec6 ], [ %v4_13f47, %dec_label_pc_13efb ]
  %stack_var_-36.0112 = phi i32 [ 0, %dec_label_pc_13ec6 ], [ %v5_13f23, %dec_label_pc_13efb ]
  %v2_13f01 = mul nuw nsw i32 %storemerge113, 4
  %v3_13f01 = add i32 %v2_13f01, %arg1
  %v4_13f01 = inttoptr i32 %v3_13f01 to i32*
  %v5_13f01 = load i32, i32* %v4_13f01, align 4
  %v5_13f0d = add i32 %v5_13f01, %stack_var_-36.0112
  %v10_13f0d = icmp ult i32 %v5_13f0d, %v5_13f01
  %v6_13f10 = zext i1 %v10_13f0d to i32
  %v3_13f19 = add i32 %v2_13f01, %arg2
  %v4_13f19 = inttoptr i32 %v3_13f19 to i32*
  %v5_13f19 = load i32, i32* %v4_13f19, align 4
  %v2_13f21 = add i32 %v5_13f19, %v5_13f0d
  %v7_13f21 = icmp ult i32 %v2_13f21, %v5_13f19
  %v3_13f23 = zext i1 %v7_13f21 to i32
  %v5_13f23 = add nuw nsw i32 %v3_13f23, %v6_13f10
  store i32 %v2_13f21, i32* %v4_13f01, align 4
  %v4_13f47 = add nuw nsw i32 %storemerge113, 1
  store i32 %arg1, i32* @eax, align 8
  %exitcond = icmp eq i32 %v4_13f47, 8
  br i1 %exitcond, label %dec_label_pc_13f56, label %dec_label_pc_13efb

dec_label_pc_13f56:                               ; preds = %dec_label_pc_13efb
  br i1 true, label %bb, label %dec_label_pc_13f65

bb:                                               ; preds = %dec_label_pc_13f56
  %v1_13f63 = call i32 @function_13f6a()
  br label %dec_label_pc_13f65

dec_label_pc_13f65:                               ; preds = %bb, %dec_label_pc_13f56
  %v2_13f63 = phi i32 [ %v1_13f63, %bb ], [ %arg1, %dec_label_pc_13f56 ]
  ret i32 %v2_13f63

; uselistorder directives
  uselistorder i32 %v5_13f19, { 1, 0 }
  uselistorder i32 %v5_13f01, { 1, 0 }
  uselistorder i32 %storemerge113, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13efb, { 1, 0 }
}

define i32 @function_13f6a() local_unnamed_addr {
dec_label_pc_13f6a:
  %v0_13f6f = load i32, i32* @eax, align 8
  ret i32 %v0_13f6f
}

define i32 @_ZN9base_uintILj256EEmIERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13f70:
  %stack_var_-48 = alloca i32, align 4
  %v2_13f8d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_13f8d, i32* @eax, align 8
  %v2_13f9a = call i32 @function_2d45e(i32 %v2_13f8d, i32 %arg2)
  %v0_13f9f = load i32, i32* @esp, align 4
  %v5_13f9f = icmp ult i32 %v0_13f9f, 4
  store i1 %v5_13f9f, i1* @cf, align 1
  %v10_13f9f = icmp eq i32 %v0_13f9f, 4
  store i1 %v10_13f9f, i1* @zf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_13faf = call i32 @function_27e36(i32 %arg1, i32 %v2_13f8d)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_13fc3

bb:                                               ; preds = %dec_label_pc_13f70
  %v1_13fc1 = call i32 @function_13fc8()
  br label %dec_label_pc_13fc3

dec_label_pc_13fc3:                               ; preds = %bb, %dec_label_pc_13f70
  %v2_13fc1 = phi i32 [ %v1_13fc1, %bb ], [ %arg1, %dec_label_pc_13f70 ]
  ret i32 %v2_13fc1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_13fc8() local_unnamed_addr {
dec_label_pc_13fc8:
  %v0_13fc9 = load i32, i32* @eax, align 8
  ret i32 %v0_13fc9
}

define i32 @_ZltRK9base_uintILj256EES2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13fca:
  br label %dec_label_pc_13ff0

dec_label_pc_13ff0:                               ; preds = %dec_label_pc_13fca, %dec_label_pc_1402e
  %storemerge121 = phi i32 [ 7, %dec_label_pc_13fca ], [ %v4_1402a, %dec_label_pc_1402e ]
  %v2_13ff6 = mul nuw nsw i32 %storemerge121, 4
  %v3_13ff6 = add i32 %v2_13ff6, %arg1
  %v4_13ff6 = inttoptr i32 %v3_13ff6 to i32*
  %v5_13ff6 = load i32, i32* %v4_13ff6, align 4
  %v3_13fff = add i32 %v2_13ff6, %arg2
  %v4_13fff = inttoptr i32 %v3_13fff to i32*
  %v5_13fff = load i32, i32* %v4_13fff, align 4
  %v7_14002 = icmp ult i32 %v5_13ff6, %v5_13fff
  %v1_14004 = icmp eq i1 %v7_14002, false
  br i1 %v1_14004, label %dec_label_pc_1400d, label %dec_label_pc_14006

dec_label_pc_14006:                               ; preds = %dec_label_pc_13ff0
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_1403f

dec_label_pc_1400d:                               ; preds = %dec_label_pc_13ff0
  %v5_14013 = load i32, i32* %v4_13ff6, align 4
  %v5_1401c = load i32, i32* %v4_13fff, align 4
  %tmp133 = icmp ugt i32 %v5_14013, %v5_1401c
  br i1 %tmp133, label %dec_label_pc_14023, label %dec_label_pc_1402e

dec_label_pc_14023:                               ; preds = %dec_label_pc_1400d
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_1403f

dec_label_pc_1402e:                               ; preds = %dec_label_pc_1400d
  %v4_1402a = add nsw i32 %storemerge121, -1
  %tmp134 = icmp sgt i32 %storemerge121, 0
  %v3_14033 = icmp eq i1 %tmp134, false
  %v1_14038 = icmp eq i1 %v3_14033, false
  br i1 %v1_14038, label %dec_label_pc_13ff0, label %dec_label_pc_1403a

dec_label_pc_1403a:                               ; preds = %dec_label_pc_1402e
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_1403f

dec_label_pc_1403f:                               ; preds = %dec_label_pc_14023, %dec_label_pc_14006, %dec_label_pc_1403a
  %v2_1404911 = phi i32 [ 0, %dec_label_pc_14023 ], [ 1, %dec_label_pc_14006 ], [ 0, %dec_label_pc_1403a ]
  br i1 true, label %bb, label %dec_label_pc_1404b

bb:                                               ; preds = %dec_label_pc_1403f
  %v1_14049 = call i32 @function_14050()
  br label %dec_label_pc_1404b

dec_label_pc_1404b:                               ; preds = %bb, %dec_label_pc_1403f
  %v2_14049 = phi i32 [ %v1_14049, %bb ], [ %v2_1404911, %dec_label_pc_1403f ]
  ret i32 %v2_14049

; uselistorder directives
  uselistorder i32 %storemerge121, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1403f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ff0, { 1, 0 }
}

define i32 @function_14050() local_unnamed_addr {
dec_label_pc_14050:
  %v0_14051 = load i32, i32* @eax, align 8
  ret i32 %v0_14051
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14052:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14052 = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  store i32 %v0_14052, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14086:
  store i32 %arg1, i32* @eax, align 8
  %v1_140a3 = call i32 @function_2d5f4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_140b4

bb:                                               ; preds = %dec_label_pc_14086
  %v1_140b2 = call i32 @function_140b9()
  br label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %bb, %dec_label_pc_14086
  %v2_140b2 = phi i32 [ %v1_140b2, %bb ], [ 0, %dec_label_pc_14086 ]
  ret i32 %v2_140b2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_140b9() local_unnamed_addr {
dec_label_pc_140b9:
  %v0_140ba = load i32, i32* @eax, align 8
  ret i32 %v0_140ba
}

define i32 @_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_140bc:
  %v2_140d6 = load i32, i32* %arg1, align 4
  store i32 %v2_140d6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_140e4

bb:                                               ; preds = %dec_label_pc_140bc
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_140e2 = call i32 @function_140e9(i32 %tmp100)
  br label %dec_label_pc_140e4

dec_label_pc_140e4:                               ; preds = %bb, %dec_label_pc_140bc
  %v3_140e2 = phi i32 [ %v2_140e2, %bb ], [ %v2_140d6, %dec_label_pc_140bc ]
  ret i32 %v3_140e2

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_140e9(i32 %arg1) local_unnamed_addr {
dec_label_pc_140e9:
  %v0_140ea = load i32, i32* @eax, align 8
  ret i32 %v0_140ea
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_140ec:
  %v2_1410c = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_14118 = call i32 @function_2933a(i32 %arg1, i32 %v2_1410c)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1412c

bb:                                               ; preds = %dec_label_pc_140ec
  %v1_1412a = call i32 @function_14131()
  br label %dec_label_pc_1412c

dec_label_pc_1412c:                               ; preds = %bb, %dec_label_pc_140ec
  %v2_1412a = phi i32 [ %v1_1412a, %bb ], [ %arg1, %dec_label_pc_140ec ]
  ret i32 %v2_1412a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_14131() local_unnamed_addr {
dec_label_pc_14131:
  %v0_14132 = load i32, i32* @eax, align 8
  ret i32 %v0_14132
}

define i32 @_ZN5boost16exception_detail10clone_baseC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14134:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14134 = load i32, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_3fbcc.2807 to i32), i32* %arg1, align 4
  store i32 %v0_14134, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1416e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_14199 = call i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %tmp102, i32 %arg2)
  %v1_141a1 = add i32 %arg2, 8
  %v1_141a7 = add i32 %tmp102, 8
  store i32 %v1_141a7, i32* @eax, align 8
  %v2_141b1 = call i32 @function_25310(i32 %v1_141a7, i32 %v1_141a1)
  store i32 ptrtoint (%vtable_3fa3c_type* @global_var_3fa3c.2829 to i32), i32* %arg1, align 4
  %v2_141c2 = inttoptr i32 %v1_141a7 to i32*
  store i32 ptrtoint (i32* @global_var_3fa50.2830 to i32), i32* %v2_141c2, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_141d5

bb:                                               ; preds = %dec_label_pc_1416e
  %v1_141d3 = call i32 @function_141f3()
  store i32 %v1_141d3, i32* @eax, align 8
  br label %dec_label_pc_141d5

dec_label_pc_141d5:                               ; preds = %bb, %dec_label_pc_1416e
  %v0_141d5 = call i32 @function_141ee()
  ret i32 %v0_141d5

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_141d8() local_unnamed_addr {
dec_label_pc_141d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_141d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_141d8
}

define i32 @function_141ee() local_unnamed_addr {
dec_label_pc_141ee:
  %v0_141ee = load i32, i32* @eax, align 8
  ret i32 %v0_141ee
}

define i32 @function_141f3() local_unnamed_addr {
dec_label_pc_141f3:
  %v0_141f8 = load i32, i32* @eax, align 8
  ret i32 %v0_141f8
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_141fa:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_14224 = call i32 @function_28368(i32 %tmp103, i32 %arg2)
  %v1_1422c = add i32 %arg2, 28
  %v1_14232 = add i32 %tmp103, 28
  %v5_14232 = icmp ugt i32* %arg1, inttoptr (i32 -29 to i32*)
  store i1 %v5_14232, i1* @cf, align 1
  store i32 %v1_14232, i32* @eax, align 8
  %v2_1423c = call i32 @function_2832e(i32 %v1_14232, i32 %v1_1422c)
  store i32 ptrtoint (%vtable_3f9dc_type* @global_var_3f9dc.2831 to i32), i32* %arg1, align 4
  %v1_1424d = add i32 %tmp103, 8
  %v2_1424d = inttoptr i32 %v1_1424d to i32*
  store i32 ptrtoint (i32* @global_var_3f9f8.2832 to i32), i32* %v2_1424d, align 4
  %v2_14257 = inttoptr i32 %v1_14232 to i32*
  store i32 ptrtoint (i32* @global_var_3fa08.2833 to i32), i32* %v2_14257, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost15throw_exceptionISt13runtime_errorEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14271:
  store i32 %arg1, i32* @eax, align 8
  %v1_14290 = call i32 @function_24392(i32 %arg1)
  ret i32 %v1_14290
}

define i32 @function_142a0() local_unnamed_addr {
dec_label_pc_142a0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_142a0 = load i32, i32* %ecx.global-to-local, align 8
  %v1_142a0 = add i32 %v0_142a0, -666530365
  %v2_142a0 = inttoptr i32 %v1_142a0 to i32*
  %v3_142a0 = load i32, i32* %v2_142a0, align 4
  %v4_142a0 = add i32 %v3_142a0, -1
  store i32 %v4_142a0, i32* %v2_142a0, align 4
  %v0_142a6 = load i32, i32* @ebp, align 4
  %v1_142a6 = add i32 %v0_142a6, -44
  %v2_142a6 = inttoptr i32 %v1_142a6 to i32*
  %v3_142a6 = load i32, i32* %v2_142a6, align 4
  %v0_142ad = load i32, i32* %eax.global-to-local, align 8
  %v2_142b0 = call i32 @function_2d845(i32 %v0_142ad, i32 %v3_142a6)
  %v0_142b8 = load i32, i32* @ebp, align 4
  %v1_142b8 = add i32 %v0_142b8, -40
  %v0_142bf = load i32, i32* @ebx, align 4
  store i32 %v1_142b8, i32* @eax, align 8
  %v3_142d0 = call i32 @function_2d897(i32 %v1_142b8, i32 %v0_142bf, i32 %v1_142b8)
  store i32 104248, i32* @esi, align 4
  %v0_142f0 = load i32, i32* @ebp, align 4
  %v1_142f0 = add i32 %v0_142f0, -40
  store i32 %v1_142f0, i32* @eax, align 8
  %v3_142f6 = call i32 @function_2d897(i32 %v1_142f0, i32 ptrtoint (i32* @global_var_40134.2834 to i32), i32 104248)
  store i32 %v3_142f6, i32* %eax.global-to-local, align 8
  %v0_142fb = call i32 @function_142ff()
  store i32 %v0_142fb, i32* %eax.global-to-local, align 8
  ret i32 %v0_142fb

; uselistorder directives
  uselistorder i32 %v1_142b8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_2d897, { 1, 0 }
}

define i32 @function_142fd() local_unnamed_addr {
dec_label_pc_142fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_142fd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_142fd
}

define i32 @function_142ff() local_unnamed_addr {
dec_label_pc_142ff:
  %v0_14307 = load i32, i32* @esi, align 4
  ret i32 %v0_14307
}

define i32 @_ZNK5boost9date_time11int_adapterIxE9as_numberEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14312:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14312 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1432f = load i32, i32* %arg1, align 4
  store i32 %v0_14312, i32* %ebp.global-to-local, align 4
  ret i32 %v2_1432f
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEEEEC1Et(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14344:
  %sext = mul i32 %arg2, 65536
  %v4_1434a = sdiv i32 %sext, 65536
  %v4_1434d = ptrtoint i16* %arg1 to i32
  store i32 0, i32* @eax, align 8
  %v4_14362 = call i32 @function_2db42(i32 %v4_1434a, i32 %v4_1434d)
  %v1_1436c = trunc i32 %v4_14362 to i16
  store i16 %v1_1436c, i16* %arg1, align 2
  store i32 %v4_1434d, i32* @eax, align 8
  %v4_1437d = call i32 @function_2db6c(i32 %v4_1434d, i32 %v4_1434a)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1438e

bb:                                               ; preds = %dec_label_pc_14344
  %v1_1438c = call i32 @function_14393()
  br label %dec_label_pc_1438e

dec_label_pc_1438e:                               ; preds = %bb, %dec_label_pc_14344
  %v2_1438c = phi i32 [ %v1_1438c, %bb ], [ 0, %dec_label_pc_14344 ]
  ret i32 %v2_1438c

; uselistorder directives
  uselistorder i32 %v4_1434d, { 1, 0, 2 }
  uselistorder i32 %v4_1434a, { 1, 0 }
}

define i32 @function_14393() local_unnamed_addr {
dec_label_pc_14393:
  %v0_14394 = load i32, i32* @eax, align 8
  ret i32 %v0_14394
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEEEEC1Et(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14396:
  %sext = mul i32 %arg2, 65536
  %v4_1439c = sdiv i32 %sext, 65536
  %v4_1439f = ptrtoint i16* %arg1 to i32
  store i32 0, i32* @eax, align 8
  %v4_143b4 = call i32 @function_2dc6f(i32 %v4_1439c, i32 %v4_1439f)
  %v1_143be = trunc i32 %v4_143b4 to i16
  store i16 %v1_143be, i16* %arg1, align 2
  store i32 %v4_1439f, i32* @eax, align 8
  %v4_143cf = call i32 @function_2dc98(i32 %v4_1439f, i32 %v4_1439c)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_143e0

bb:                                               ; preds = %dec_label_pc_14396
  %v1_143de = call i32 @function_143e5()
  br label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %bb, %dec_label_pc_14396
  %v2_143de = phi i32 [ %v1_143de, %bb ], [ 0, %dec_label_pc_14396 ]
  ret i32 %v2_143de

; uselistorder directives
  uselistorder i32 %v4_1439f, { 1, 0, 2 }
  uselistorder i32 %v4_1439c, { 1, 0 }
}

define i32 @function_143e5() local_unnamed_addr {
dec_label_pc_143e5:
  %v0_143e6 = load i32, i32* @eax, align 8
  ret i32 %v0_143e6
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEEEEC1Et(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_143e8:
  %sext = mul i32 %arg2, 65536
  %v4_143ee = sdiv i32 %sext, 65536
  %v4_143f1 = ptrtoint i16* %arg1 to i32
  store i32 0, i32* @eax, align 8
  %v4_14406 = call i32 @function_2dd9b(i32 %v4_143ee, i32 %v4_143f1)
  %v1_14410 = trunc i32 %v4_14406 to i16
  store i16 %v1_14410, i16* %arg1, align 2
  store i32 %v4_143f1, i32* @eax, align 8
  %v4_14421 = call i32 @function_2ddc4(i32 %v4_143f1, i32 %v4_143ee)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_143f1, { 1, 0, 2 }
  uselistorder i32 %v4_143ee, { 1, 0 }
}

define i32 @_ZN5boost6detail10empty_baseINS_9gregorian4dateEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1443a:
  ret i32 0
}

define i32 @_ZN5boost20equality_comparable1INS_9gregorian4dateENS_6detail10empty_baseIS2_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14464:
  store i32 %arg1, i32* @eax, align 8
  %v1_14481 = call i32 @function_2889e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost19equality_comparableINS_9gregorian4dateES2_NS_6detail10empty_baseIS2_EENS3_7false_tEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1449a:
  store i32 %arg1, i32* @eax, align 8
  %v1_144b7 = call i32 @function_288fe(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_144c8

bb:                                               ; preds = %dec_label_pc_1449a
  %v1_144c6 = call i32 @function_144cd()
  br label %dec_label_pc_144c8

dec_label_pc_144c8:                               ; preds = %bb, %dec_label_pc_1449a
  %v2_144c6 = phi i32 [ %v1_144c6, %bb ], [ 0, %dec_label_pc_1449a ]
  ret i32 %v2_144c6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_144cd() local_unnamed_addr {
dec_label_pc_144cd:
  %v0_144ce = load i32, i32* @eax, align 8
  ret i32 %v0_144ce
}

define i32 @_ZN5boost21less_than_comparable1INS_9gregorian4dateENS_19equality_comparableIS2_S2_NS_6detail10empty_baseIS2_EENS4_7false_tEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_144d0:
  store i32 %arg1, i32* @eax, align 8
  %v1_144ed = call i32 @function_2896a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_144fe

bb:                                               ; preds = %dec_label_pc_144d0
  %v1_144fc = call i32 @function_14503()
  br label %dec_label_pc_144fe

dec_label_pc_144fe:                               ; preds = %bb, %dec_label_pc_144d0
  %v2_144fc = phi i32 [ %v1_144fc, %bb ], [ 0, %dec_label_pc_144d0 ]
  ret i32 %v2_144fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14503() local_unnamed_addr {
dec_label_pc_14503:
  %v0_14504 = load i32, i32* @eax, align 8
  ret i32 %v0_14504
}

define i32 @_ZN5boost20less_than_comparableINS_9gregorian4dateENS_19equality_comparableIS2_S2_NS_6detail10empty_baseIS2_EENS4_7false_tEEES6_NS4_6true_tEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14506:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14534

bb:                                               ; preds = %dec_label_pc_14506
  %v2_14532 = call i32 @function_14539(i32 %arg1)
  br label %dec_label_pc_14534

dec_label_pc_14534:                               ; preds = %bb, %dec_label_pc_14506
  %v3_14532 = phi i32 [ %v2_14532, %bb ], [ 0, %dec_label_pc_14506 ]
  ret i32 %v3_14532
}

define i32 @function_14539(i32 %arg1) local_unnamed_addr {
dec_label_pc_14539:
  %v0_1453a = load i32, i32* @eax, align 8
  ret i32 %v0_1453a
}

define i32 @_ZN5boost9date_time4dateINS_9gregorian4dateENS2_18gregorian_calendarENS2_13date_durationEEC1ENS2_9greg_yearENS2_10greg_monthENS2_8greg_dayE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1453c:
  %stack_var_-22 = alloca i32, align 4
  %tmp112 = ptrtoint i32* %arg1 to i32
  store i32 %tmp112, i32* @eax, align 8
  %v1_14571 = call i32 @function_28a42(i32 %tmp112)
  %v2_14591 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_14591, i32* @eax, align 8
  %sext = mul i32 %arg2, 65536
  %v4_14597 = sdiv i32 %sext, 65536
  %sext1 = mul i32 %arg3, 65536
  %v5_14597 = sdiv i32 %sext1, 65536
  %sext2 = mul i32 %arg4, 65536
  %v6_14597 = sdiv i32 %sext2, 65536
  %v7_14597 = call i32 @function_2e1f6(i32 %v2_14591, i32 %v4_14597, i32 %v5_14597, i32 %v6_14597)
  store i32 %v2_14591, i32* @eax, align 8
  %v1_145a2 = call i32 @function_2e0c6(i32 %v2_14591)
  store i32 %v1_145a2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_145b8

bb:                                               ; preds = %dec_label_pc_1453c
  %v1_145b6 = call i32 @function_145bd()
  br label %dec_label_pc_145b8

dec_label_pc_145b8:                               ; preds = %bb, %dec_label_pc_1453c
  %v2_145b6 = phi i32 [ %v1_145b6, %bb ], [ 0, %dec_label_pc_1453c ]
  ret i32 %v2_145b6

; uselistorder directives
  uselistorder i32 %tmp112, { 1, 0 }
}

define i32 @function_145bd() local_unnamed_addr {
dec_label_pc_145bd:
  %v0_145be = load i32, i32* @eax, align 8
  ret i32 %v0_145be
}

define i32 @_ZN5boost9date_time23gregorian_calendar_baseINS0_19year_month_day_baseINS_9gregorian9greg_yearENS3_10greg_monthENS3_8greg_dayEEEjE16end_of_month_dayES4_S5_(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_145c0:
  %tmp103 = trunc i32 %arg2 to i16
  %stack_var_-32 = alloca i16, align 2
  store i16 %tmp103, i16* %stack_var_-32, align 2
  store i1 false, i1* @cf, align 1
  %v2_145e2 = ptrtoint i16* %stack_var_-32 to i32
  store i32 %v2_145e2, i32* @eax, align 8
  %sext = mul i32 %v2_145e2, 65536
  %v1_145e8 = sdiv i32 %sext, 65536
  %v2_145e8 = call i32 @function_25000(i32 %v1_145e8)
  %v1_145ed = urem i32 %v2_145e8, 65536
  %tmp115 = icmp ult i32 %v1_145ed, 12
  br i1 %tmp115, label %dec_label_pc_145f5, label %dec_label_pc_1463b

dec_label_pc_145f5:                               ; preds = %dec_label_pc_145c0
  %v3_145fe = urem i32 %v2_145e8, 32
  %v5_145fe = icmp eq i32 %v3_145fe, 0
  br i1 %v5_145fe, label %bb113, label %bb

bb:                                               ; preds = %dec_label_pc_145f5
  %v6_145fe = shl i32 1, %v3_145fe
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_145f5, %bb
  %v0_1460e = phi i32 [ 1, %dec_label_pc_145f5 ], [ %v6_145fe, %bb ]
  %v1_14604 = and i32 %v0_1460e, ptrtoint (i32* @global_var_a50.2835 to i32)
  %v2_14604 = icmp eq i32 %v1_14604, 0
  %v1_1460c = icmp eq i1 %v2_14604, false
  br i1 %v1_1460c, label %dec_label_pc_14634, label %dec_label_pc_1460e

dec_label_pc_1460e:                               ; preds = %bb113
  %v1_1460e = and i32 %v0_1460e, 4
  %v2_1460e = icmp eq i32 %v1_1460e, 0
  br i1 %v2_1460e, label %dec_label_pc_1463b, label %dec_label_pc_14615

dec_label_pc_14615:                               ; preds = %dec_label_pc_1460e
  %v4_14615 = zext i16 %arg1 to i32
  store i32 %v4_14615, i32* @eax, align 8
  %v1_1461d = sext i16 %arg1 to i32
  %v2_1461d = call i32 @function_2e2dc(i32 %v1_1461d)
  %v4_14622 = trunc i32 %v2_1461d to i8
  %v5_14622 = icmp eq i8 %v4_14622, 0
  br i1 %v5_14622, label %dec_label_pc_1462d, label %dec_label_pc_14626

dec_label_pc_14626:                               ; preds = %dec_label_pc_14615
  store i32 29, i32* @eax, align 8
  br label %dec_label_pc_14640

dec_label_pc_1462d:                               ; preds = %dec_label_pc_14615
  store i32 28, i32* @eax, align 8
  br label %dec_label_pc_14640

dec_label_pc_14634:                               ; preds = %bb113
  store i32 30, i32* @eax, align 8
  br label %dec_label_pc_14640

dec_label_pc_1463b:                               ; preds = %dec_label_pc_145c0, %dec_label_pc_1460e
  store i32 31, i32* @eax, align 8
  br label %dec_label_pc_14640

dec_label_pc_14640:                               ; preds = %dec_label_pc_1463b, %dec_label_pc_14634, %dec_label_pc_1462d, %dec_label_pc_14626
  %v2_1464a5 = phi i32 [ 31, %dec_label_pc_1463b ], [ 30, %dec_label_pc_14634 ], [ 28, %dec_label_pc_1462d ], [ 29, %dec_label_pc_14626 ]
  br i1 true, label %bb114, label %dec_label_pc_1464c

bb114:                                            ; preds = %dec_label_pc_14640
  %v1_1464a = call i32 @function_14651()
  br label %dec_label_pc_1464c

dec_label_pc_1464c:                               ; preds = %bb114, %dec_label_pc_14640
  %v2_1464a = phi i32 [ %v1_1464a, %bb114 ], [ %v2_1464a5, %dec_label_pc_14640 ]
  ret i32 %v2_1464a

; uselistorder directives
  uselistorder i32 %v3_145fe, { 1, 0 }
  uselistorder i32 30, { 0, 2, 1 }
  uselistorder i16 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1463b, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
}

define i32 @function_14651() local_unnamed_addr {
dec_label_pc_14651:
  %v0_14656 = load i32, i32* @eax, align 8
  ret i32 %v0_14656
}

define i32 @_ZNSt11logic_errorC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14658:
  store i32 %arg1, i32* @eax, align 8
  %v2_14683 = call i32 @function_26258(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_146a9() local_unnamed_addr {
dec_label_pc_146a9:
  %v0_146a9 = call i32 @function_146c2()
  ret i32 %v0_146a9
}

define i32 @function_146ab() local_unnamed_addr {
dec_label_pc_146ab:
  %eax.global-to-local = alloca i32, align 4
  %v0_146ab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_146ab
}

define i32 @function_146c2() local_unnamed_addr {
dec_label_pc_146c2:
  %v0_146c2 = load i32, i32* @ebp, align 4
  %v1_146c2 = add i32 %v0_146c2, -12
  %v2_146c2 = inttoptr i32 %v1_146c2 to i32*
  %v3_146c2 = load i32, i32* %v2_146c2, align 4
  %v1_146c5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_146c5 = xor i32 %v1_146c5, %v3_146c2
  ret i32 %v2_146c5
}

define i32 @_ZNSt12out_of_rangeC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_146da:
  store i32 %arg1, i32* @eax, align 8
  %v2_14704 = call i32 @function_28d32(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14726:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_14750 = call i32 @function_28e00(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_3fb94_type* @global_var_3fb94.2810 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3fb94_type* @global_var_3fb94.2810 to i32), { 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14772:
  %ebx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v0_14775 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %tmp103, i32* @eax, align 8
  %v2_1479d = call i32 @function_28e98(i32 %tmp103, i32 %arg2)
  %v1_147a5 = add i32 %arg2, 8
  %v1_147ab = add i32 %tmp103, 8
  store i32 %v1_147ab, i32* @eax, align 8
  %v2_147b5 = call i32 @function_25914(i32 %v1_147ab, i32 %v1_147a5)
  store i32 ptrtoint (%vtable_3f99c_type* @global_var_3f99c.2836 to i32), i32* %arg1, align 4
  %v2_147c6 = inttoptr i32 %v1_147ab to i32*
  store i32 ptrtoint (i32* @global_var_3f9b0.2837 to i32), i32* %v2_147c6, align 4
  store i32 %v0_14775, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_147fe:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_14828 = call i32 @function_28f70(i32 %tmp103, i32 %arg2)
  %v1_14836 = add i32 %tmp103, 28
  store i32 ptrtoint (%vtable_3f93c_type* @global_var_3f93c.2838 to i32), i32* %arg1, align 4
  %v1_14851 = add i32 %tmp103, 8
  %v2_14851 = inttoptr i32 %v1_14851 to i32*
  store i32 ptrtoint (i32* @global_var_3f958.2839 to i32), i32* %v2_14851, align 4
  %v2_1485b = inttoptr i32 %v1_14836 to i32*
  store i32 ptrtoint (i32* @global_var_3f968.2840 to i32), i32* %v2_1485b, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian16bad_day_of_monthEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14875:
  ret i32 %arg1
}

define i32 @function_148a4() local_unnamed_addr {
dec_label_pc_148a4:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_148a4 = load i32, i32* %ecx.global-to-local, align 8
  %v1_148a4 = add i32 %v0_148a4, -666530365
  %v2_148a4 = inttoptr i32 %v1_148a4 to i32*
  %v3_148a4 = load i32, i32* %v2_148a4, align 4
  %v4_148a4 = add i32 %v3_148a4, -1
  store i32 %v4_148a4, i32* %v2_148a4, align 4
  %v0_148aa = load i32, i32* %ebp.global-to-local, align 4
  %v1_148aa = add i32 %v0_148aa, -44
  %v2_148aa = inttoptr i32 %v1_148aa to i32*
  %v3_148aa = load i32, i32* %v2_148aa, align 4
  %v0_148b1 = load i32, i32* @eax, align 8
  %v2_148b4 = call i32 @function_2e663(i32 %v0_148b1, i32 %v3_148aa)
  %v1_148bc = add i32 %v0_148aa, -40
  %v0_148c3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v1_148bc, i32* @eax, align 8
  %v3_148d4 = call i32 @function_2e6b5(i32 %v1_148bc, i32 %v0_148c3, i32 %v1_148bc)
  %v1_148f4 = add i32 %v0_148aa, -40
  store i32 %v1_148f4, i32* @eax, align 8
  %v3_148fa = call i32 @function_2e6b5(i32 %v1_148f4, i32 ptrtoint (i32* @global_var_40034.2841 to i32), i32 106322)
  store i32 %v3_148fa, i32* @eax, align 8
  %v0_148ff = call i32 @function_14903()
  ret i32 %v0_148ff

; uselistorder directives
  uselistorder i32 %v1_148bc, { 2, 1, 0 }
  uselistorder i32 %v0_148aa, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_2e6b5, { 1, 0 }
}

define i32 @function_14901() local_unnamed_addr {
dec_label_pc_14901:
  %eax.global-to-local = alloca i32, align 4
  %v0_14901 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14901
}

define i32 @function_14903() local_unnamed_addr {
dec_label_pc_14903:
  %v3_14903 = load i32, i32* @eax, align 8
  ret i32 %v3_14903
}

define i32 @_ZN5boost6detail10empty_baseINS_10posix_time13time_durationEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14916:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14939

bb:                                               ; preds = %dec_label_pc_14916
  %v2_14937 = call i32 @function_1493e(i32 %arg1)
  br label %dec_label_pc_14939

dec_label_pc_14939:                               ; preds = %bb, %dec_label_pc_14916
  %v3_14937 = phi i32 [ %v2_14937, %bb ], [ 0, %dec_label_pc_14916 ]
  ret i32 %v3_14937
}

define i32 @function_1493e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1493e:
  %v0_1493f = load i32, i32* @eax, align 8
  ret i32 %v0_1493f
}

define i32 @_ZN5boost20equality_comparable1INS_10posix_time13time_durationENS_6detail10empty_baseIS2_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14940:
  ret i32 0
}

define i32 @_ZN5boost19equality_comparableINS_10posix_time13time_durationES2_NS_6detail10empty_baseIS2_EENS3_7false_tEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14976:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_149a4

bb:                                               ; preds = %dec_label_pc_14976
  %v2_149a2 = call i32 @function_149a9(i32 %arg1)
  br label %dec_label_pc_149a4

dec_label_pc_149a4:                               ; preds = %bb, %dec_label_pc_14976
  %v3_149a2 = phi i32 [ %v2_149a2, %bb ], [ 0, %dec_label_pc_14976 ]
  ret i32 %v3_149a2
}

define i32 @function_149a9(i32 %arg1) local_unnamed_addr {
dec_label_pc_149a9:
  %v0_149aa = load i32, i32* @eax, align 8
  ret i32 %v0_149aa
}

define i32 @_ZN5boost21less_than_comparable1INS_10posix_time13time_durationENS_19equality_comparableIS2_S2_NS_6detail10empty_baseIS2_EENS4_7false_tEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_149ac:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_149da

bb:                                               ; preds = %dec_label_pc_149ac
  %v2_149d8 = call i32 @function_149df(i32 %arg1)
  br label %dec_label_pc_149da

dec_label_pc_149da:                               ; preds = %bb, %dec_label_pc_149ac
  %v3_149d8 = phi i32 [ %v2_149d8, %bb ], [ 0, %dec_label_pc_149ac ]
  ret i32 %v3_149d8
}

define i32 @function_149df(i32 %arg1) local_unnamed_addr {
dec_label_pc_149df:
  %v0_149e0 = load i32, i32* @eax, align 8
  ret i32 %v0_149e0
}

define i32 @_ZN5boost20less_than_comparableINS_10posix_time13time_durationENS_19equality_comparableIS2_S2_NS_6detail10empty_baseIS2_EENS4_7false_tEEES6_NS4_6true_tEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_149e2:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14a10

bb:                                               ; preds = %dec_label_pc_149e2
  %v2_14a0e = call i32 @function_14a15(i32 %arg1)
  br label %dec_label_pc_14a10

dec_label_pc_14a10:                               ; preds = %bb, %dec_label_pc_149e2
  %v3_14a0e = phi i32 [ %v2_14a0e, %bb ], [ 0, %dec_label_pc_149e2 ]
  ret i32 %v3_14a0e
}

define i32 @function_14a15(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a15:
  %v0_14a16 = load i32, i32* @eax, align 8
  ret i32 %v0_14a16
}

define i32 @_ZN5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEEC1Eiiix(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14a18:
  %v1_14a53 = call i32 @function_293fa(i32 %arg1)
  store i32 %arg2, i32* @eax, align 8
  %v5_14a7a = call i32 @function_2ea68(i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v5_14a7a, i32* @eax, align 8
  %v0_14a86 = load i32, i32* @edx, align 4
  %v3_14a8d = call i32 @function_2ec16(i32 %arg1, i32 %v5_14a7a, i32 %v0_14a86)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEEC1ENS0_14special_valuesE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14aa6:
  store i32 %arg1, i32* @eax, align 8
  %v1_14ac9 = call i32 @function_29488(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_14adb = trunc i32 %arg1 to i16
  %v3_14adb = call i32 @function_2ece8(i16 %v2_14adb, i32 %arg2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZN5boost6detail10empty_baseINS_10posix_time5ptimeEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14af6:
  ret i32 0
}

define i32 @_ZN5boost20equality_comparable1INS_10posix_time5ptimeENS_6detail10empty_baseIS2_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b20:
  store i32 %arg1, i32* @eax, align 8
  %v1_14b3d = call i32 @function_29616(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost19equality_comparableINS_10posix_time5ptimeES2_NS_6detail10empty_baseIS2_EENS3_7false_tEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b56:
  store i32 %arg1, i32* @eax, align 8
  %v1_14b73 = call i32 @function_29676(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost21less_than_comparable1INS_10posix_time5ptimeENS_19equality_comparableIS2_S2_NS_6detail10empty_baseIS2_EENS4_7false_tEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b8c:
  %v1_14ba9 = inttoptr i32 %arg1 to i32*
  %v2_14ba9 = call i32 @function_296e2(i32* %v1_14ba9)
  ret i32 0
}

define i32 @_ZN5boost20less_than_comparableINS_10posix_time5ptimeENS_19equality_comparableIS2_S2_NS_6detail10empty_baseIS2_EENS4_7false_tEEES6_NS4_6true_tEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14bc2:
  ret i32 0
}

define i32 @_ZN5boost9date_time9base_timeINS_10posix_time5ptimeENS0_19counted_time_systemINS0_16counted_time_repINS2_33millisec_posix_time_system_configEEEEEEC1ERKNS_9gregorian4dateERKNS2_13time_durationENS0_9dst_flagsE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14bf8:
  %v8_14c47 = call i32 @function_2eef4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14c5b

bb:                                               ; preds = %dec_label_pc_14bf8
  %v1_14c59 = call i32 @function_14c60()
  br label %dec_label_pc_14c5b

dec_label_pc_14c5b:                               ; preds = %bb, %dec_label_pc_14bf8
  %v2_14c59 = phi i32 [ %v1_14c59, %bb ], [ 0, %dec_label_pc_14bf8 ]
  ret i32 %v2_14c59

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14c60() local_unnamed_addr {
dec_label_pc_14c60:
  %v0_14c61 = load i32, i32* @eax, align 8
  ret i32 %v0_14c61
}

define i32 @_ZN5boost9date_time14microsec_clockINS_10posix_time5ptimeEE14universal_timeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c62:
  store i32 %arg1, i32* @eax, align 8
  %v2_14c87 = call i32 @function_2efc3(i32 %arg1, i32 66742)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK5boost9date_time9base_timeINS_10posix_time5ptimeENS0_19counted_time_systemINS0_16counted_time_repINS2_33millisec_posix_time_system_configEEEEEEmiERKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14ca8:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v3_14cdf = call i32 @function_2f17f(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEE18total_millisecondsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d00:
  %ebx.global-to-local = alloca i32, align 4
  store i32 0, i32* @eax, align 8
  %v1_14d1a = call i32 @function_29b62(i32 %arg1)
  %v0_14d24 = load i32, i32* @edx, align 4
  %v2_14d24 = icmp slt i32 %v0_14d24, 0
  br i1 %v2_14d24, label %dec_label_pc_14d38, label %dec_label_pc_14d28

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14d00
  %v1_14d24 = icmp eq i32 %v0_14d24, 0
  %v4_14d2a = icmp eq i1 %v1_14d24, false
  br i1 %v4_14d2a, label %dec_label_pc_14d33, label %dec_label_pc_14d2c

dec_label_pc_14d2c:                               ; preds = %dec_label_pc_14d28
  %tmp110 = icmp ult i32 %v1_14d1a, 1000
  br i1 %tmp110, label %dec_label_pc_14d38, label %dec_label_pc_14d33

dec_label_pc_14d33:                               ; preds = %dec_label_pc_14d2c, %dec_label_pc_14d28
  br label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %dec_label_pc_14d33, %dec_label_pc_14d2c, %dec_label_pc_14d00
  %v0_14d38 = phi i1 [ true, %dec_label_pc_14d33 ], [ false, %dec_label_pc_14d2c ], [ false, %dec_label_pc_14d00 ]
  %v1_14d86 = call i32 @function_2f316(i32 %arg1)
  store i32 %v1_14d86, i32* @eax, align 8
  store i32 %v1_14d86, i32* %ebx.global-to-local, align 4
  %v1_14d8f = call i32 @function_29b62(i32 %arg1)
  br i1 %v0_14d38, label %dec_label_pc_14d80, label %dec_label_pc_14d3c

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14d38
  %v0_14d54 = load i32, i32* @edx, align 4
  %v1_14d73 = load i32, i32* %ebx.global-to-local, align 4
  %v4_14d78 = mul i32 %v1_14d73, %v1_14d8f
  store i32 %v4_14d78, i32* @eax, align 8
  %v4_14d7e = call i32 @function_14dc4(i32 1000, i32 0, i32 %v1_14d8f, i32 %v0_14d54)
  ret i32 %v4_14d7e

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14d38
  ret i32 %v1_14d8f

; uselistorder directives
  uselistorder i32 %v1_14d8f, { 1, 2, 0 }
  uselistorder i32 1000, { 1, 0 }
  uselistorder i32 (i32)* @function_29b62, { 1, 0 }
}

define i32 @function_14dc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14dc4:
  %v0_14ddc = load i32, i32* @eax, align 8
  ret i32 %v0_14ddc
}

define i32 @_ZN5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEEC1ERKS8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14dde:
  %ecx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_14e01 = call i32 @function_297c0(i32 %tmp102)
  store i32 %tmp102, i32* %ecx.global-to-local, align 8
  %v1_14e0c = add i32 %arg2, 4
  %v2_14e0c = inttoptr i32 %v1_14e0c to i32*
  %v3_14e0c = load i32, i32* %v2_14e0c, align 4
  %v1_14e0f = inttoptr i32 %arg2 to i32*
  %v2_14e0f = load i32, i32* %v1_14e0f, align 4
  store i32 %v2_14e0f, i32* %arg1, align 4
  %v1_14e13 = load i32, i32* %ecx.global-to-local, align 8
  %v2_14e13 = add i32 %v1_14e13, 4
  %v3_14e13 = inttoptr i32 %v2_14e13 to i32*
  store i32 %v3_14e0c, i32* %v3_14e13, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14e22

bb:                                               ; preds = %dec_label_pc_14dde
  %v1_14e20 = call i32 @function_14e27()
  br label %dec_label_pc_14e22

dec_label_pc_14e22:                               ; preds = %bb, %dec_label_pc_14dde
  %v2_14e20 = phi i32 [ %v1_14e20, %bb ], [ 0, %dec_label_pc_14dde ]
  ret i32 %v2_14e20

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_14e27() local_unnamed_addr {
dec_label_pc_14e27:
  %v0_14e28 = load i32, i32* @eax, align 8
  ret i32 %v0_14e28
}

define i32 @_ZN5boost9date_time14absolute_valueIiEET_S2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e29:
  %v2_14e45 = ashr i32 %arg1, 31
  %v5_14e4a = xor i32 %v2_14e45, %arg1
  %v2_14e4d = sub i32 %v5_14e4a, %v2_14e45
  store i32 %v2_14e4d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14e5b

bb:                                               ; preds = %dec_label_pc_14e29
  %v2_14e59 = call i32 @function_14e60(i32 %arg1)
  br label %dec_label_pc_14e5b

dec_label_pc_14e5b:                               ; preds = %bb, %dec_label_pc_14e29
  %v3_14e59 = phi i32 [ %v2_14e59, %bb ], [ %v2_14e4d, %dec_label_pc_14e29 ]
  ret i32 %v3_14e59

; uselistorder directives
  uselistorder i32 %v2_14e45, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_14e60(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e60:
  %v0_14e61 = load i32, i32* @eax, align 8
  ret i32 %v0_14e61
}

define i32 @_ZN5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEE16ticks_per_secondEv() local_unnamed_addr {
dec_label_pc_14e62:
  %v0_14e68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  %v1_14e73 = call i32 @function_2f525(i32 %v0_14e68)
  store i32 %v1_14e73, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14e84

bb:                                               ; preds = %dec_label_pc_14e62
  %v1_14e82 = call i32 @function_14e89()
  br label %dec_label_pc_14e84

dec_label_pc_14e84:                               ; preds = %bb, %dec_label_pc_14e62
  %v2_14e82 = phi i32 [ %v1_14e82, %bb ], [ %v1_14e73, %dec_label_pc_14e62 ]
  ret i32 %v2_14e82
}

define i32 @function_14e89() local_unnamed_addr {
dec_label_pc_14e89:
  %v0_14e8a = load i32, i32* @eax, align 8
  ret i32 %v0_14e8a
}

define i32 @_ZN5boost16thread_exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e8c:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp103, i32* %stack_var_-60, align 4
  store i32 ptrtoint (%vtable_3fc0c_type* @global_var_3fc0c.2803 to i32), i32* %arg1, align 4
  %v1_14ec7 = add i32 %arg2, 4
  %v2_14ec7 = inttoptr i32 %v1_14ec7 to i32*
  %v3_14ec7 = load i32, i32* %v2_14ec7, align 4
  %v2_14ecd = add i32 %tmp103, 4
  %v3_14ecd = inttoptr i32 %v2_14ecd to i32*
  store i32 %v3_14ec7, i32* %v3_14ecd, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14edc

bb:                                               ; preds = %dec_label_pc_14e8c
  %v1_14eda = load i32, i32* %stack_var_-60, align 4
  %v3_14eda = call i32 @function_14ee1(i32 %v1_14eda, i32 %arg2)
  br label %dec_label_pc_14edc

dec_label_pc_14edc:                               ; preds = %bb, %dec_label_pc_14e8c
  %v4_14eda = phi i32 [ %v3_14eda, %bb ], [ 0, %dec_label_pc_14e8c ]
  ret i32 %v4_14eda

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3fc0c_type* @global_var_3fc0c.2803 to i32), { 2, 1, 0 }
}

define i32 @function_14ee1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ee1:
  %v0_14ee2 = load i32, i32* @eax, align 8
  ret i32 %v0_14ee2
}

define i32 @_ZN5boost10lock_errorC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ee4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @edx, align 4
  store i32 %tmp103, i32* @eax, align 8
  %v2_14f0e = call i32 @function_29d70(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_3fbf4_type* @global_var_3fbf4.2804 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14f28

bb:                                               ; preds = %dec_label_pc_14ee4
  %v1_14f26 = call i32 @function_14f2d()
  br label %dec_label_pc_14f28

dec_label_pc_14f28:                               ; preds = %bb, %dec_label_pc_14ee4
  %v2_14f26 = phi i32 [ %v1_14f26, %bb ], [ 0, %dec_label_pc_14ee4 ]
  ret i32 %v2_14f26

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3fbf4_type* @global_var_3fbf4.2804 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_14f2d() local_unnamed_addr {
dec_label_pc_14f2d:
  %v0_14f2e = load i32, i32* @eax, align 8
  ret i32 %v0_14f2e
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f30:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_14f5b = call i32 @function_29e14(i32 %tmp102, i32 %arg2)
  %v1_14f63 = add i32 %arg2, 8
  %v1_14f69 = add i32 %tmp102, 8
  store i32 %v1_14f69, i32* @eax, align 8
  %v2_14f73 = call i32 @function_260d2(i32 %v1_14f69, i32 %v1_14f63)
  store i32 ptrtoint (%vtable_3f8fc_type* @global_var_3f8fc.2842 to i32), i32* %arg1, align 4
  %v2_14f84 = inttoptr i32 %v1_14f69 to i32*
  store i32 ptrtoint (i32* @global_var_3f910.2843 to i32), i32* %v2_14f84, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_14f97

bb:                                               ; preds = %dec_label_pc_14f30
  %v1_14f95 = call i32 @function_14fb5()
  store i32 %v1_14f95, i32* @eax, align 8
  br label %dec_label_pc_14f97

dec_label_pc_14f97:                               ; preds = %bb, %dec_label_pc_14f30
  %v0_14f97 = call i32 @function_14fb0()
  ret i32 %v0_14f97

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_14f9a() local_unnamed_addr {
dec_label_pc_14f9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_14f9a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14f9a
}

define i32 @function_14fb0() local_unnamed_addr {
dec_label_pc_14fb0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_14fb5() local_unnamed_addr {
dec_label_pc_14fb5:
  %v0_14fba = load i32, i32* @eax, align 8
  ret i32 %v0_14fba
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14fbc:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_14fe6 = call i32 @function_29eec(i32 %tmp103, i32 %arg2)
  %v1_14fee = add i32 %arg2, 28
  %v1_14ff4 = add i32 %tmp103, 28
  %v2_14ffe = call i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %v1_14ff4, i32 %v1_14fee)
  store i32 ptrtoint (%vtable_3f89c_type* @global_var_3f89c.2844 to i32), i32* %arg1, align 4
  %v1_1500f = add i32 %tmp103, 8
  %v2_1500f = inttoptr i32 %v1_1500f to i32*
  store i32 ptrtoint (i32* @global_var_3f8b8.2845 to i32), i32* %v2_1500f, align 4
  %v2_15019 = inttoptr i32 %v1_14ff4 to i32*
  store i32 ptrtoint (i32* @global_var_3f8c8.2846 to i32), i32* %v2_15019, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1502c

bb:                                               ; preds = %dec_label_pc_14fbc
  %v1_1502a = call i32 @function_15031()
  br label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %bb, %dec_label_pc_14fbc
  %v2_1502a = phi i32 [ %v1_1502a, %bb ], [ 0, %dec_label_pc_14fbc ]
  ret i32 %v2_1502a

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15031() local_unnamed_addr {
dec_label_pc_15031:
  %v0_15032 = load i32, i32* @eax, align 8
  ret i32 %v0_15032
}

define i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15033:
  store i32 %arg1, i32* @eax, align 8
  %v1_15052 = call i32 @function_25154(i32 %arg1)
  ret i32 %v1_15052
}

define i32 @function_15062() local_unnamed_addr {
dec_label_pc_15062:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15062 = load i32, i32* %ecx.global-to-local, align 8
  %v1_15062 = add i32 %v0_15062, -666530365
  %v2_15062 = inttoptr i32 %v1_15062 to i32*
  %v3_15062 = load i32, i32* %v2_15062, align 4
  %v4_15062 = add i32 %v3_15062, -1
  store i32 %v4_15062, i32* %v2_15062, align 4
  %v0_15068 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15068 = add i32 %v0_15068, -44
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  %v3_15068 = load i32, i32* %v2_15068, align 4
  %v1_1507a = add i32 %v0_15068, -40
  store i32 %v1_1507a, i32* @eax, align 8
  %v4_150bd = call i32 @function_150c1(i32 %v1_1507a, i32 ptrtoint (i32* @global_var_3ff14.2847 to i32), i32 108628, i32 %v3_15068)
  ret i32 %v4_150bd

; uselistorder directives
  uselistorder i32 %v1_1507a, { 1, 0 }
}

define i32 @function_150bf() local_unnamed_addr {
dec_label_pc_150bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_150bf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_150bf
}

define i32 @function_150c1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_150c1:
  %v3_150c1 = load i32, i32* @eax, align 8
  ret i32 %v3_150c1
}

define i32 @_ZN5boost3argILi1EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_150d4:
  ret i32 0
}

define i32 @_ZN5boost3argILi2EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_150fe:
  ret i32 0
}

define i32 @_ZN5boost3argILi3EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15128:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1514b

bb:                                               ; preds = %dec_label_pc_15128
  %v2_15149 = call i32 @function_15150(i32 %arg1)
  br label %dec_label_pc_1514b

dec_label_pc_1514b:                               ; preds = %bb, %dec_label_pc_15128
  %v3_15149 = phi i32 [ %v2_15149, %bb ], [ 0, %dec_label_pc_15128 ]
  ret i32 %v3_15149
}

define i32 @function_15150(i32 %arg1) local_unnamed_addr {
dec_label_pc_15150:
  %v0_15151 = load i32, i32* @eax, align 8
  ret i32 %v0_15151
}

define i32 @_ZN5boost3argILi4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15152:
  ret i32 0
}

define i32 @_ZN5boost3argILi5EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1517c:
  ret i32 0
}

define i32 @_ZN5boost3argILi6EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_151a6:
  ret i32 0
}

define i32 @_ZN5boost3argILi7EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_151d0:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_151f3

bb:                                               ; preds = %dec_label_pc_151d0
  %v2_151f1 = call i32 @function_151f8(i32 %arg1)
  br label %dec_label_pc_151f3

dec_label_pc_151f3:                               ; preds = %bb, %dec_label_pc_151d0
  %v3_151f1 = phi i32 [ %v2_151f1, %bb ], [ 0, %dec_label_pc_151d0 ]
  ret i32 %v3_151f1
}

define i32 @function_151f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_151f8:
  %v0_151f9 = load i32, i32* @eax, align 8
  ret i32 %v0_151f9
}

define i32 @_ZN5boost3argILi8EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_151fa:
  ret i32 0
}

define i32 @_ZN5boost3argILi9EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15224:
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1524e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_15271 = call i32 @function_2e7bc(i32 %tmp102)
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 8
  %v1_15284 = call i32 @function_2fb68(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15295

bb:                                               ; preds = %dec_label_pc_1524e
  %v1_15293 = call i32 @function_1529a()
  br label %dec_label_pc_15295

dec_label_pc_15295:                               ; preds = %bb, %dec_label_pc_1524e
  %v2_15293 = phi i32 [ %v1_15293, %bb ], [ 0, %dec_label_pc_1524e ]
  ret i32 %v2_15293

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1529a() local_unnamed_addr {
dec_label_pc_1529a:
  %v0_1529b = load i32, i32* @eax, align 8
  ret i32 %v0_1529b
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1529c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_152bc = inttoptr i32 %arg2 to i32*
  %v2_152bc = load i32, i32* %v1_152bc, align 4
  store i32 %v2_152bc, i32* %arg1, align 4
  %v1_152c9 = call i32 @function_2fbb6(i32 %tmp102)
  ret i32 0
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_152e2:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_152ff = call i32 @function_239a6(i32 %tmp100)
  %v1_15307 = add i32 %tmp100, 20
  %v1_1530d = call i32 @function_1afd0(i32 %v1_15307)
  store i32 ptrtoint (%vtable_3fb3c_type* @global_var_3fb3c.2848 to i32), i32* %arg1, align 4
  %v2_1531e = inttoptr i32 %v1_15307 to i32*
  store i32 ptrtoint (i32* @global_var_3fb4c.2849 to i32), i32* %v2_1531e, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15331

bb:                                               ; preds = %dec_label_pc_152e2
  %v1_1532f = call i32 @function_15336()
  br label %dec_label_pc_15331

dec_label_pc_15331:                               ; preds = %bb, %dec_label_pc_152e2
  %v2_1532f = phi i32 [ %v1_1532f, %bb ], [ 0, %dec_label_pc_152e2 ]
  ret i32 %v2_1532f

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_15336() local_unnamed_addr {
dec_label_pc_15336:
  %v0_15337 = load i32, i32* @eax, align 8
  ret i32 %v0_15337
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15338:
  %eax.global-to-local = alloca i32, align 4
  %v0_1533d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1533d
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_15342:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fb3c_type* @global_var_3fb3c.2848 to i32), i32* %arg1, align 4
  %v1_15365 = add i32 %tmp99, 20
  %v2_15365 = inttoptr i32 %v1_15365 to i32*
  store i32 ptrtoint (i32* @global_var_3fb4c.2849 to i32), i32* %v2_15365, align 4
  ret i32 %v1_15365
}

define i32 @function_153ac() local_unnamed_addr {
dec_label_pc_153ac:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_153ac = load i32, i32* %ecx.global-to-local, align 8
  %v1_153ac = add i32 %v0_153ac, -1
  store i32 %v1_153ac, i32* %ecx.global-to-local, align 8
  %v0_153ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_153ae
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_153b0:
  %v4_153b0 = add i32 %arg1, -20
  %v1_153b5 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %v4_153b0)
  ret i32 %v1_153b5
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) {
dec_label_pc_153b8:
  %v1_153d5 = call i32 @function_2a6f2(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_153e4() local_unnamed_addr {
dec_label_pc_153e4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_153e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_153e4 = add i32 %v0_153e4, 862319685
  %v2_153e4 = inttoptr i32 %v1_153e4 to i32*
  %v3_153e4 = load i32, i32* %v2_153e4, align 4
  %v4_153e4 = add i32 %v3_153e4, -1
  store i32 %v4_153e4, i32* %v2_153e4, align 4
  %v0_153ea = load i32, i32* %eax.global-to-local, align 8
  %v1_153ea = add i32 %v0_153ea, 20
  store i32 %v1_153ea, i32* %eax.global-to-local, align 8
  ret i32 %v1_153ea
}

define i32 @_ZNSt9bad_allocC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_153f8:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_15422 = call i32 @function_26ff8(i32 %tmp103)
  store i32 8, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1543c

bb:                                               ; preds = %dec_label_pc_153f8
  %v1_1543a = call i32 @function_15441()
  br label %dec_label_pc_1543c

dec_label_pc_1543c:                               ; preds = %bb, %dec_label_pc_153f8
  %v2_1543a = phi i32 [ %v1_1543a, %bb ], [ 0, %dec_label_pc_153f8 ]
  ret i32 %v2_1543a

; uselistorder directives
  uselistorder i32 (i32)* @function_26ff8, { 1, 0 }
}

define i32 @function_15441() local_unnamed_addr {
dec_label_pc_15441:
  %v0_15442 = load i32, i32* @eax, align 8
  ret i32 %v0_15442
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15444:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_15476 = add i32 %arg2, 20
  store i32 %v1_15476, i32* @edx, align 4
  %v1_1547c = add i32 %tmp103, 20
  store i32 %v1_1547c, i32* @eax, align 8
  %v2_15486 = call i32 @function_2a83c(i32 %v1_1547c, i32 %v1_15476)
  store i32 ptrtoint (%vtable_3fb3c_type* @global_var_3fb3c.2848 to i32), i32* %arg1, align 4
  %v2_15497 = inttoptr i32 %v1_1547c to i32*
  store i32 ptrtoint (i32* @global_var_3fb4c.2849 to i32), i32* %v2_15497, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3fb3c_type* @global_var_3fb3c.2848 to i32), { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_154b2:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_154dc = call i32 @function_2a8f6(i32 %tmp103, i32 %arg2)
  %v1_154e4 = add i32 %arg2, 24
  %v1_154ea = add i32 %tmp103, 24
  store i32 %v1_154ea, i32* @eax, align 8
  %v2_154f4 = call i32 @function_295e6(i32 %v1_154ea, i32 %v1_154e4)
  store i32 ptrtoint (%vtable_3fadc_type* @global_var_3fadc.2850 to i32), i32* %arg1, align 4
  %v1_15505 = add i32 %tmp103, 20
  %v2_15505 = inttoptr i32 %v1_15505 to i32*
  store i32 ptrtoint (i32* @global_var_3faf4.2851 to i32), i32* %v2_15505, align 4
  %v2_1550f = inttoptr i32 %v1_154ea to i32*
  store i32 ptrtoint (i32* @global_var_3fb08.2852 to i32), i32* %v2_1550f, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15522

bb:                                               ; preds = %dec_label_pc_154b2
  %v1_15520 = call i32 @function_15527()
  br label %dec_label_pc_15522

dec_label_pc_15522:                               ; preds = %bb, %dec_label_pc_154b2
  %v2_15520 = phi i32 [ %v1_15520, %bb ], [ 0, %dec_label_pc_154b2 ]
  ret i32 %v2_15520

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15527() local_unnamed_addr {
dec_label_pc_15527:
  %v0_15528 = load i32, i32* @eax, align 8
  ret i32 %v0_15528
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1552c:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_15546 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_15546, i32* @eax, align 8
  %v1_1554c = call i32 @function_2a80e(i32 %v2_15546)
  %v2_15558 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_15558, i32* @eax, align 8
  %v3_1555e = call i32 @function_2fec4(i32 %v2_15558, i32 %v2_15546)
  %v2_1556b = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1556b, i32* @eax, align 8
  %v3_15571 = call i32 @function_23bb8(i32 %v2_1556b, i32 81)
  %v2_1557e = ptrtoint i32* %stack_var_-40 to i32
  %v3_15584 = call i32 @function_23b80(i32 %v2_1557e, i32 ptrtoint ([54 x i8]* @global_var_70d0.2853 to i32))
  %v2_15591 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15591, i32* @eax, align 8
  %v3_15597 = call i32 @function_23b48(i32 %v2_15591, i32 ptrtoint ([169 x i8]* @global_var_72b4.2854 to i32))
  %v3_155a9 = call i32 @__stack_chk_fail.1168(i32 %v2_15558, i32 %v2_15591)
  %v3_155b8 = call i32 @function_3008c(i32 %v3_155a9, i32 %v2_1557e)
  store i32 %v3_155b8, i32* @eax, align 8
  %v3_155c7 = call i32 @function_300ce(i32 %v3_155b8, i32 %v2_1556b)
  %v2_155d1 = load i8, i8* inttoptr (i32 87340 to i8*), align 4
  %v3_155d1 = zext i8 %v2_155d1 to i32
  ret i32 %v3_155d1
}

define i32 @function_155ff() local_unnamed_addr {
dec_label_pc_155ff:
  %eax.global-to-local = alloca i32, align 4
  %v0_155ff = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_155ff
}

define i32 @function_1568b() local_unnamed_addr {
dec_label_pc_1568b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1568b = load i32, i32* %ecx.global-to-local, align 8
  %v1_1568b = add i32 %v0_1568b, -1996297221
  %v2_1568b = inttoptr i32 %v1_1568b to i32*
  %v3_1568b = load i32, i32* %v2_1568b, align 4
  %v4_1568b = add i32 %v3_1568b, -1
  store i32 %v4_1568b, i32* %v2_1568b, align 4
  %v0_15691 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15691
}

define i32 @function_156a4() local_unnamed_addr {
dec_label_pc_156a4:
  %v0_156a4 = call i32 @function_156a8()
  ret i32 %v0_156a4
}

define i32 @function_156a6() local_unnamed_addr {
dec_label_pc_156a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_156a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_156a6
}

define i32 @function_156a8() local_unnamed_addr {
dec_label_pc_156a8:
  %v0_156a8 = load i32, i32* @ebp, align 4
  %v1_156a8 = add i32 %v0_156a8, -92
  store i32 %v1_156a8, i32* @eax, align 8
  %v1_156ae = call i32 @function_2ff84(i32 %v1_156a8)
  %v0_156b3 = call i32 @function_156b7()
  ret i32 %v0_156b3
}

define i32 @function_156b5() local_unnamed_addr {
dec_label_pc_156b5:
  %eax.global-to-local = alloca i32, align 4
  %v0_156b5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_156b5
}

define i32 @function_156b7() local_unnamed_addr {
dec_label_pc_156b7:
  %v0_156b7 = load i32, i32* @ebp, align 4
  %v1_156b7 = add i32 %v0_156b7, -64
  %v1_156bd = call i32 @function_2a86e(i32 %v1_156b7)
  %v0_156c2 = load i32, i32* @ebx, align 4
  ret i32 %v0_156c2
}

define i32 @function_156cc() local_unnamed_addr {
dec_label_pc_156cc:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_156d1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_156d1:
  %eax.global-to-local = alloca i32, align 4
  %v0_156d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_156d8
}

define i32 @_ZSt4swapIbEvRT_S1_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_156db:
  %tmp106 = inttoptr i32 %arg2 to i8*
  %v2_156fb = load i8, i8* %arg1, align 1
  %v2_15704 = load i8, i8* %tmp106, align 1
  store i8 %v2_15704, i8* %arg1, align 1
  store i8 %v2_156fb, i8* %tmp106, align 1
  ret i32 0
}

define i32 @_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15728:
  ret i32 %arg1
}

define i32 @function_1576a() local_unnamed_addr {
dec_label_pc_1576a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1576a = load i32, i32* %ecx.global-to-local, align 8
  %v1_1576a = add i32 %v0_1576a, -1
  store i32 %v1_1576a, i32* %ecx.global-to-local, align 8
  %v0_1576c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1576c
}

define i32 @_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1576d:
  ret i32 %arg1
}

define i32 @function_1579b() local_unnamed_addr {
dec_label_pc_1579b:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1579b = add i32 %tmp91, -1064038464
  %v2_1579b = inttoptr i32 %v1_1579b to i32*
  %v3_1579b = load i32, i32* %v2_1579b, align 4
  %v4_1579b = add i32 %v3_1579b, 1
  store i32 %v4_1579b, i32* %v2_1579b, align 4
  %v0_157b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_157b3
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_157b4:
  store i32 %arg1, i32* @eax, align 8
  %v1_157d1 = call i32 @function_30444(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_157e2

bb:                                               ; preds = %dec_label_pc_157b4
  %v1_157e0 = call i32 @function_157e7()
  br label %dec_label_pc_157e2

dec_label_pc_157e2:                               ; preds = %bb, %dec_label_pc_157b4
  %v2_157e0 = phi i32 [ %v1_157e0, %bb ], [ 0, %dec_label_pc_157b4 ]
  ret i32 %v2_157e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_157e7() local_unnamed_addr {
dec_label_pc_157e7:
  %v0_157e8 = load i32, i32* @eax, align 8
  ret i32 %v0_157e8
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_157ea:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_15808 = call i32 @function_30530(i32 %tmp101)
  store i32 %v1_15808, i32* @eax, align 8
  %v1_15810 = add i32 %tmp101, 4
  %v2_15810 = inttoptr i32 %v1_15810 to i32*
  %v3_15810 = load i32, i32* %v2_15810, align 4
  store i32 %v3_15810, i32* @ecx, align 8
  %v2_15816 = load i32, i32* %arg1, align 4
  %v3_15823 = call i32 @function_3055d(i32 %v2_15816, i32 %v3_15810, i32 %v1_15808)
  store i32 %tmp101, i32* @eax, align 8
  %v1_1582e = call i32 @function_304b0(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1583f

bb:                                               ; preds = %dec_label_pc_157ea
  %v1_1583d = call i32 @function_1585d()
  store i32 %v1_1583d, i32* @eax, align 8
  br label %dec_label_pc_1583f

dec_label_pc_1583f:                               ; preds = %bb, %dec_label_pc_157ea
  %v0_1583f = call i32 @function_15858()
  ret i32 %v0_1583f

; uselistorder directives
  uselistorder i32 %tmp101, { 3, 2, 1, 0 }
}

define i32 @function_15842() local_unnamed_addr {
dec_label_pc_15842:
  %eax.global-to-local = alloca i32, align 4
  %v0_15842 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15842
}

define i32 @function_15858() local_unnamed_addr {
dec_label_pc_15858:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1585d() local_unnamed_addr {
dec_label_pc_1585d:
  %v0_15862 = load i32, i32* @eax, align 8
  ret i32 %v0_15862
}

define i32 @_ZN25zero_after_free_allocatorIcEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15864:
  ret i32 %arg1
}

define i32 @function_15885() local_unnamed_addr {
dec_label_pc_15885:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15885 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15885 = add i32 %v0_15885, 862319685
  %v2_15885 = inttoptr i32 %v1_15885 to i32*
  %v3_15885 = load i32, i32* %v2_15885, align 4
  %v4_15885 = add i32 %v3_15885, -1
  store i32 %v4_15885, i32* %v2_15885, align 4
  %v0_1588b = load i32, i32* %eax.global-to-local, align 8
  %v1_1588b = add i32 %v0_1588b, 20
  store i32 %v1_1588b, i32* %eax.global-to-local, align 8
  ret i32 %v1_1588b
}

define i32 @_ZN25zero_after_free_allocatorIcED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1589a:
  ret i32 %arg1
}

define i32 @function_158cc() local_unnamed_addr {
dec_label_pc_158cc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_158cc = load i32, i32* %ecx.global-to-local, align 8
  %v1_158cc = add i32 %v0_158cc, -1
  store i32 %v1_158cc, i32* %ecx.global-to-local, align 8
  %v0_158ce = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_158ce
}

define i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_158d0:
  %stack_var_-20 = alloca i32, align 4
  %v2_158f0 = load i32, i32* %arg2, align 4
  store i32 %v2_158f0, i32* %stack_var_-20, align 4
  %v2_158f5 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_15902 = call i32 @function_306e8(i32 %arg1, i32 %v2_158f5)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEixERKi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15920:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15920 = load i32, i32* %ebp.global-to-local, align 4
  %v2_15940 = load i32, i32* %arg1, align 4
  %v1_15945 = inttoptr i32 %arg2 to i32*
  %v2_15945 = load i32, i32* %v1_15945, align 4
  %v2_15947 = add i32 %v2_15945, %v2_15940
  store i32 %v0_15920, i32* %ebp.global-to-local, align 4
  ret i32 %v2_15947
}

define i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1595c:
  %stack_var_-20 = alloca i32, align 4
  %v1_1597c = add i32 %arg2, 4
  %v2_1597c = inttoptr i32 %v1_1597c to i32*
  %v3_1597c = load i32, i32* %v2_1597c, align 4
  store i32 %v3_1597c, i32* %stack_var_-20, align 4
  %v2_15982 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_1598f = call i32 @function_30774(i32 %arg1, i32 %v2_15982)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_159a3

bb:                                               ; preds = %dec_label_pc_1595c
  %v1_159a1 = call i32 @function_159a8()
  br label %dec_label_pc_159a3

dec_label_pc_159a3:                               ; preds = %bb, %dec_label_pc_1595c
  %v2_159a1 = phi i32 [ %v1_159a1, %bb ], [ %arg1, %dec_label_pc_1595c ]
  ret i32 %v2_159a1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_159a8() local_unnamed_addr {
dec_label_pc_159a8:
  %v0_159a9 = load i32, i32* @eax, align 8
  ret i32 %v0_159a9
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1IPcEET_S5_RKS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_159ac:
  %ebx.global-to-local = alloca i32, align 4
  %v0_159af = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %sext = mul i32 %v0_159af, 16777216
  %v8_15a00 = sdiv i32 %sext, 16777216
  %v9_15a00 = call i32 @function_307fe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_15a00, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  %v0_15a05 = call i32 @function_15a1e()
  ret i32 %v0_15a05

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_15a08() local_unnamed_addr {
dec_label_pc_15a08:
  %eax.global-to-local = alloca i32, align 4
  %v0_15a08 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15a08
}

define i32 @function_15a1e() local_unnamed_addr {
dec_label_pc_15a1e:
  %v0_15a1e = load i32, i32* @ebp, align 4
  %v1_15a1e = add i32 %v0_15a1e, -12
  %v2_15a1e = inttoptr i32 %v1_15a1e to i32*
  %v3_15a1e = load i32, i32* %v2_15a1e, align 4
  %v1_15a21 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15a21 = xor i32 %v1_15a21, %v3_15a1e
  %v3_15a21 = icmp eq i32 %v2_15a21, 0
  store i32 %v2_15a21, i32* @eax, align 8
  br i1 %v3_15a21, label %bb, label %dec_label_pc_15a2a

bb:                                               ; preds = %dec_label_pc_15a1e
  %v1_15a28 = call i32 @function_15a2f()
  br label %dec_label_pc_15a2a

dec_label_pc_15a2a:                               ; preds = %bb, %dec_label_pc_15a1e
  %v2_15a28 = phi i32 [ %v1_15a28, %bb ], [ %v2_15a21, %dec_label_pc_15a1e ]
  ret i32 %v2_15a28
}

define i32 @function_15a2f() local_unnamed_addr {
dec_label_pc_15a2f:
  %v0_15a34 = load i32, i32* @eax, align 8
  ret i32 %v0_15a34
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15a36:
  %v1_15a56 = add i32 %arg2, 4
  %v2_15a63 = call i32 @function_308e2(i32 %arg1, i32 %v1_15a56)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15a77

bb:                                               ; preds = %dec_label_pc_15a36
  %v1_15a75 = call i32 @function_15a7c()
  br label %dec_label_pc_15a77

dec_label_pc_15a77:                               ; preds = %bb, %dec_label_pc_15a36
  %v2_15a75 = phi i32 [ %v1_15a75, %bb ], [ %arg1, %dec_label_pc_15a36 ]
  ret i32 %v2_15a75

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_15a7c() local_unnamed_addr {
dec_label_pc_15a7c:
  %v0_15a7d = load i32, i32* @eax, align 8
  ret i32 %v0_15a7d
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15a80:
  store i32 %arg1, i32* @eax, align 8
  %v2_15aaa = call i32 @function_3092c(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15ac8:
  %stack_var_-20 = alloca i32, align 4
  %v2_15aee = load i32, i32* %arg2, align 4
  %v1_15af3 = inttoptr i32 %arg3 to i32*
  %v2_15af3 = load i32, i32* %v1_15af3, align 4
  %v2_15af5 = add i32 %v2_15af3, %v2_15aee
  store i32 %v2_15af5, i32* %stack_var_-20, align 4
  %v2_15afa = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_15b07 = call i32 @function_30974(i32 %arg1, i32 %v2_15afa)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_15b24:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_15b24 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15b3e = add i32 %tmp100, 4
  %v2_15b3e = inttoptr i32 %v1_15b3e to i32*
  %v3_15b3e = load i32, i32* %v2_15b3e, align 4
  %v2_15b46 = load i32, i32* %arg1, align 4
  %v2_15b4a = sub i32 %v3_15b3e, %v2_15b46
  store i32 %v0_15b24, i32* %ebp.global-to-local, align 4
  ret i32 %v2_15b4a
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15b62:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15b62 = load i32, i32* %ebp.global-to-local, align 4
  %v2_15b82 = load i32, i32* %arg1, align 4
  %v5_15b84 = add i32 %v2_15b82, %arg2
  store i32 %v0_15b62, i32* %ebp.global-to-local, align 4
  ret i32 %v5_15b84
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_15b9a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_15bb4 = load i32, i32* %arg1, align 4
  %v2_15bc0 = call i32 @function_30aae(i32 %tmp101, i32 %v2_15bb4)
  ret i32 0
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE6insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15bd8:
  %edx.global-to-local = alloca i32, align 4
  %v0_15c01 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %sext = mul i32 %v0_15c01, 16777216
  %v5_15c20 = sdiv i32 %sext, 16777216
  %v6_15c20 = call i32 @function_30c62(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_15c20)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxxmiIPcSt6vectorIc25zero_after_free_allocatorIcEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15c38:
  store i32 %arg1, i32* @eax, align 8
  %v1_15c5c = call i32 @function_30c94(i32 %arg1)
  %v1_15c61 = inttoptr i32 %v1_15c5c to i32*
  %v2_15c61 = load i32, i32* %v1_15c61, align 4
  store i32 %v2_15c61, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_15c6b = call i32 @function_30c94(i32 %arg2)
  %v1_15c70 = inttoptr i32 %v1_15c6b to i32*
  %v2_15c70 = load i32, i32* %v1_15c70, align 4
  %v0_15c72 = load i32, i32* @ebx, align 4
  %v2_15c74 = sub i32 %v0_15c72, %v2_15c70
  store i32 %v2_15c74, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15c84

bb:                                               ; preds = %dec_label_pc_15c38
  %v1_15c82 = call i32 @function_15c89()
  br label %dec_label_pc_15c84

dec_label_pc_15c84:                               ; preds = %bb, %dec_label_pc_15c38
  %v2_15c82 = phi i32 [ %v1_15c82, %bb ], [ %v2_15c74, %dec_label_pc_15c38 ]
  ret i32 %v2_15c82

; uselistorder directives
  uselistorder i32 (i32)* @function_30c94, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15c89() local_unnamed_addr {
dec_label_pc_15c89:
  %v0_15c8e = load i32, i32* @eax, align 8
  ret i32 %v0_15c8e
}

define i32 @_Z3REFI9CFlatDataERT_RKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c8f:
  ret i32 %arg1
}

define i32 @_ZNSaIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15cbc:
  store i32 %arg1, i32* @eax, align 8
  %v1_15cd9 = call i32 @function_30ede(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15cea

bb:                                               ; preds = %dec_label_pc_15cbc
  %v1_15ce8 = call i32 @function_15cef()
  br label %dec_label_pc_15cea

dec_label_pc_15cea:                               ; preds = %bb, %dec_label_pc_15cbc
  %v2_15ce8 = phi i32 [ %v1_15ce8, %bb ], [ 0, %dec_label_pc_15cbc ]
  ret i32 %v2_15ce8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15cef() local_unnamed_addr {
dec_label_pc_15cef:
  %v0_15cf0 = load i32, i32* @eax, align 8
  ret i32 %v0_15cf0
}

define i32 @_ZNSaIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15cf2:
  store i32 %arg1, i32* @eax, align 8
  %v1_15d0f = call i32 @function_30f3e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15d20

bb:                                               ; preds = %dec_label_pc_15cf2
  %v1_15d1e = call i32 @function_15d25()
  br label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %bb, %dec_label_pc_15cf2
  %v2_15d1e = phi i32 [ %v1_15d1e, %bb ], [ 0, %dec_label_pc_15cf2 ]
  ret i32 %v2_15d1e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15d25() local_unnamed_addr {
dec_label_pc_15d25:
  %v0_15d26 = load i32, i32* @eax, align 8
  ret i32 %v0_15d26
}

define i32 @_ZNSt6vectorIhSaIhEEC1EjRKhRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15d28:
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 4
  %v7_15d66 = call i32 @function_30fd4(i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v3_15d7f = call i32 @function_310ee(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_15d84 = call i32 @function_15d9d()
  ret i32 %v0_15d84

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_15d87() local_unnamed_addr {
dec_label_pc_15d87:
  %eax.global-to-local = alloca i32, align 4
  %v0_15d87 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15d87
}

define i32 @function_15d9d() local_unnamed_addr {
dec_label_pc_15d9d:
  %v0_15d9d = load i32, i32* @ebp, align 4
  %v1_15d9d = add i32 %v0_15d9d, -12
  %v2_15d9d = inttoptr i32 %v1_15d9d to i32*
  %v3_15d9d = load i32, i32* %v2_15d9d, align 4
  %v1_15da0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15da0 = xor i32 %v1_15da0, %v3_15d9d
  ret i32 %v2_15da0
}

define i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15db4:
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* @eax, align 8
  %v1_15dd2 = call i32 @function_311e6(i32 %tmp6)
  store i32 %v1_15dd2, i32* @eax, align 8
  %v1_15dda = add i32 %tmp6, 4
  %v2_15dda = inttoptr i32 %v1_15dda to i32*
  %v3_15dda = load i32, i32* %v2_15dda, align 4
  %v2_15de0 = load i32, i32* %arg1, align 4
  %v3_15ded = call i32 @function_31213(i32 %v2_15de0, i32 %v3_15dda, i32 %v1_15dd2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp6, { 2, 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %arg1) local_unnamed_addr {
dec_label_pc_15e2e:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_15e4e = load i32, i32* %arg1, align 4
  %v5_15e50 = add i32 %v2_15e4e, %tmp3
  ret i32 %v5_15e50
}

define i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15e66:
  store i32 %arg1, i32* @eax, align 8
  %v2_15e90 = call i32 @function_3130e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15ea4

bb:                                               ; preds = %dec_label_pc_15e66
  %v1_15ea2 = call i32 @function_15ea9()
  br label %dec_label_pc_15ea4

dec_label_pc_15ea4:                               ; preds = %bb, %dec_label_pc_15e66
  %v2_15ea2 = phi i32 [ %v1_15ea2, %bb ], [ %arg1, %dec_label_pc_15e66 ]
  ret i32 %v2_15ea2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_15ea9() local_unnamed_addr {
dec_label_pc_15ea9:
  %v0_15eaa = load i32, i32* @eax, align 8
  ret i32 %v0_15eaa
}

define i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15eae:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_15edc

bb:                                               ; preds = %dec_label_pc_15eae
  %v2_15eda = call i32 @function_15ee1(i32 %arg1)
  br label %dec_label_pc_15edc

dec_label_pc_15edc:                               ; preds = %bb, %dec_label_pc_15eae
  %v3_15eda = phi i32 [ %v2_15eda, %bb ], [ 0, %dec_label_pc_15eae ]
  ret i32 %v3_15eda
}

define i32 @function_15ee1(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ee1:
  %v0_15ee2 = load i32, i32* @eax, align 8
  ret i32 %v0_15ee2
}

define i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15ee4:
  %v1_15f04 = add i32 %arg2, 4
  %v5_15f04 = icmp ugt i32 %arg2, -5
  store i1 %v5_15f04, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_15f11 = call i32 @function_3138c(i32 %arg1, i32 %v1_15f04)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost6detail21is_static_visitor_tagC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f2e:
  ret i32 0
}

define i32 @_ZN5boost14static_visitorIvEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f58:
  store i32 %arg1, i32* @eax, align 8
  %v1_15f75 = call i32 @function_2be86(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost14static_visitorIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f8e:
  ret i32 0
}

define i32 @_ZNSt6vectorIhSaIhEEaSERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fb8:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp109 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp122 = ptrtoint i32* %arg1 to i32
  %v15_15fdb = icmp eq i32 %tmp122, %arg2
  br i1 %v15_15fdb, label %dec_label_pc_161fd, label %dec_label_pc_15fe4

dec_label_pc_15fe4:                               ; preds = %dec_label_pc_15fb8
  %v1_15ff8 = call i32 @function_316f0(i32 %tmp122)
  %v10_15ffd = icmp ult i32 %v1_15ff8, %arg2
  %v5_16003 = icmp eq i1 %v10_15ffd, false
  br i1 %v5_16003, label %dec_label_pc_160c8, label %dec_label_pc_1600b

dec_label_pc_1600b:                               ; preds = %dec_label_pc_15fe4
  %v2_1600b = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_1600b, i32* @eax, align 8
  %v2_16018 = call i32 @function_2b914(i32 %v2_1600b, i32 %arg2)
  %v2_16020 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_16020, i32* @eax, align 8
  %v2_1602d = call i32 @function_2b888(i32 %v2_16020, i32 %arg2)
  %v0_16032 = load i32, i32* @esp, align 4
  %v5_16032 = icmp ult i32 %v0_16032, 4
  store i1 %v5_16032, i1* @cf, align 1
  %v3_16035 = load i32, i32* %stack_var_-64, align 4
  %v3_1603c = load i32, i32* %stack_var_-68, align 4
  store i32 %tmp122, i32* @eax, align 8
  %v4_16050 = call i32 @function_3172e(i32 %tmp122, i32 %arg2, i32 %v3_1603c, i32 %v3_16035)
  %v1_16066 = add i32 %tmp122, 4
  %v2_16066 = inttoptr i32 %v1_16066 to i32*
  %v1_16081 = add i32 %tmp122, 8
  %v2_16081 = inttoptr i32 %v1_16081 to i32*
  %v3_16081 = load i32, i32* %v2_16081, align 4
  %v2_16089 = load i32, i32* %arg1, align 4
  %v2_1608d = sub i32 %v3_16081, %v2_16089
  %v3_160a6 = call i32 @function_317e8(i32 %tmp122, i32 %v2_16089, i32 %v2_1608d)
  store i32 %v4_16050, i32* %arg1, align 4
  %v5_160ba = add i32 %v4_16050, %arg2
  store i32 %v5_160ba, i32* %v2_16081, align 4
  br label %dec_label_pc_161ed

dec_label_pc_160c8:                               ; preds = %dec_label_pc_15fe4
  %v10_160d3 = icmp ult i32 %tmp122, %arg2
  %v1_160d6 = icmp eq i1 %v10_160d3, false
  %v5_160d9 = icmp eq i1 %v1_160d6, false
  br i1 %v5_160d9, label %dec_label_pc_1617d, label %dec_label_pc_160e1

dec_label_pc_160e1:                               ; preds = %dec_label_pc_160c8
  store i32 %tmp122, i32* %ebx.global-to-local, align 4
  %v2_16103 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_16103, i32* @eax, align 8
  %v3_16110 = call i32 @function_2be1e(i32 %v2_16103, i32 %tmp122, i32 %tmp122)
  %v2_16118 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16118, i32* @eax, align 8
  %v2_16125 = call i32 @function_2b914(i32 %v2_16118, i32 %arg2)
  %v2_1612d = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_1612d, i32* @eax, align 8
  %v2_1613a = call i32 @function_2b888(i32 %v2_1612d, i32 %arg2)
  %v2_16142 = ptrtoint i32* %stack_var_-48 to i32
  %v3_16145 = load i32, i32* %stack_var_-52, align 4
  %v3_1614c = load i32, i32* %stack_var_-56, align 4
  %v3_16153 = load i32, i32* %stack_var_-60, align 4
  %v4_1615d = call i32 @function_3183d(i32 %v2_16142, i32 %v3_16153, i32 %v3_1614c, i32 %v3_16145)
  %v0_16165 = load i32, i32* %ebx.global-to-local, align 4
  %v3_16170 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_16170, i32* @eax, align 8
  %v3_16176 = call i32 @function_318cb(i32 %v3_16170, i32 %tmp109, i32 %v0_16165)
  %.pre = add i32 %tmp122, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_161ed

dec_label_pc_1617d:                               ; preds = %dec_label_pc_160c8
  %v2_16180 = load i32, i32* %arg1, align 4
  store i32 %v2_16180, i32* @ebx, align 4
  %v1_16185 = inttoptr i32 %arg2 to i32*
  %v2_16185 = load i32, i32* %v1_16185, align 4
  %v3_16192 = add i32 %v2_16185, %tmp122
  store i32 %v2_16185, i32* @eax, align 8
  %v3_161a5 = call i32 @function_31913(i32 %v2_16185, i32 %v3_16192, i32 %v2_16180)
  store i32 %tmp122, i32* @ebx, align 4
  %v1_161ba = add i32 %tmp122, 4
  %v2_161ba = inttoptr i32 %v1_161ba to i32*
  %v3_161ba = load i32, i32* %v2_161ba, align 4
  %v1_161c0 = add i32 %arg2, 4
  %v2_161c0 = inttoptr i32 %v1_161c0 to i32*
  %v3_161c0 = load i32, i32* %v2_161c0, align 4
  %v2_161c6 = load i32, i32* %v1_16185, align 4
  %v5_161d6 = add i32 %v2_161c6, %tmp122
  store i32 %v5_161d6, i32* @eax, align 8
  %v5_161e8 = call i32 @function_31979(i32 %v5_161d6, i32 %v3_161c0, i32 %v3_161ba, i32 %tmp122, i32 %v2_161c6)
  br label %dec_label_pc_161ed

dec_label_pc_161ed:                               ; preds = %dec_label_pc_1617d, %dec_label_pc_160e1, %dec_label_pc_1600b
  %v3_161fa.pre-phi = phi i32* [ %v2_161ba, %dec_label_pc_1617d ], [ %.pre3, %dec_label_pc_160e1 ], [ %v2_16066, %dec_label_pc_1600b ]
  %v2_161f0 = load i32, i32* %arg1, align 4
  %v5_161f4 = add i32 %v2_161f0, %arg2
  store i32 %v5_161f4, i32* %v3_161fa.pre-phi, align 4
  br label %dec_label_pc_161fd

dec_label_pc_161fd:                               ; preds = %dec_label_pc_161ed, %dec_label_pc_15fb8
  store i32 %tmp122, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1620c

bb:                                               ; preds = %dec_label_pc_161fd
  %v1_1620a = call i32 @function_16211()
  br label %dec_label_pc_1620c

dec_label_pc_1620c:                               ; preds = %bb, %dec_label_pc_161fd
  %v2_1620a = phi i32 [ %v1_1620a, %bb ], [ %tmp122, %dec_label_pc_161fd ]
  ret i32 %v2_1620a

; uselistorder directives
  uselistorder i32 %v2_161c6, { 1, 0 }
  uselistorder i32 %v2_16185, { 1, 0, 2 }
  uselistorder i32 %tmp122, { 4, 18, 5, 1, 14, 13, 2, 3, 11, 12, 15, 16, 6, 7, 8, 10, 9, 17, 0 }
  uselistorder i32 (i32, i32)* @function_2b888, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_2b914, { 1, 0 }
  uselistorder i32 %arg2, { 1, 8, 9, 6, 7, 10, 2, 3, 4, 5, 11, 0 }
  uselistorder i32* %arg1, { 1, 0, 2, 3, 4 }
}

define i32 @function_16211() local_unnamed_addr {
dec_label_pc_16211:
  %v0_16218 = load i32, i32* @eax, align 8
  ret i32 %v0_16218
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1621a:
  %sext3 = mul i32 %arg6, 16777216
  %v4_16221 = sdiv i32 %sext3, 16777216
  %v1_16242 = trunc i32 %v4_16221 to i8
  store i32 %arg1, i32* @eax, align 8
  %v0_16253 = load i32, i32* @ecx, align 8
  store i32 %arg2, i32* @edx, align 4
  %sext = mul i32 %v0_16253, 16777216
  %v3_16261 = sdiv i32 %sext, 16777216
  %v4_16261 = call i32 @function_31d26(i32 %arg1, i32 %arg2, i32 %v3_16261)
  %v10_16266 = icmp eq i8 %v1_16242, 0
  %v4_16295 = sext i8 %arg4 to i32
  store i32 %arg1, i32* @eax, align 8
  br i1 %v10_16266, label %dec_label_pc_1628e, label %dec_label_pc_1626c

dec_label_pc_1626c:                               ; preds = %dec_label_pc_1621a
  %v5_16287 = call i32 @function_31db2(i32 %arg1, i32 %arg3, i32 %v4_16295, i32 %arg5)
  br label %dec_label_pc_162c7

dec_label_pc_1628e:                               ; preds = %dec_label_pc_1621a
  %v5_162a9 = call i32 @function_31e4c(i32 %arg1, i32 %arg3, i32 %v4_16295, i32 %arg5)
  br label %dec_label_pc_162c7

dec_label_pc_162c7:                               ; preds = %dec_label_pc_1628e, %dec_label_pc_1626c
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_162d3

bb:                                               ; preds = %dec_label_pc_162c7
  %v1_162d1 = call i32 @function_162d8()
  br label %dec_label_pc_162d3

dec_label_pc_162d3:                               ; preds = %bb, %dec_label_pc_162c7
  %v2_162d1 = phi i32 [ %v1_162d1, %bb ], [ 0, %dec_label_pc_162c7 ]
  ret i32 %v2_162d1

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 2, 1, 0 }
}

define i32 @function_162d8() local_unnamed_addr {
dec_label_pc_162d8:
  %v0_162dd = load i32, i32* @eax, align 8
  ret i32 %v0_162dd
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i8 %arg1) local_unnamed_addr {
dec_label_pc_162de:
  %v4_162e4 = sext i8 %arg1 to i32
  store i32 %v4_162e4, i32* @eax, align 8
  %v5_16300 = icmp eq i8 %arg1, 0
  br i1 %v5_16300, label %dec_label_pc_16309, label %dec_label_pc_16304

dec_label_pc_16304:                               ; preds = %dec_label_pc_162de
  %v2_16304 = call i32 @function_16320(i32 %v4_162e4)
  br label %dec_label_pc_16309

dec_label_pc_16309:                               ; preds = %dec_label_pc_16304, %dec_label_pc_162de
  store i32 %v4_162e4, i32* @eax, align 8
  %v2_1630f = call i32 @function_31e30(i32 %v4_162e4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_162e4, { 2, 1, 0, 3 }
}

define i32 @function_16320(i32 %arg1) local_unnamed_addr {
dec_label_pc_16320:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16325() local_unnamed_addr {
dec_label_pc_16325:
  %eax.global-to-local = alloca i32, align 4
  %v0_16326 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16326
}

define i32 @_ZNSt6vectorIhSaIhEEC1IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16328:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1632b = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1632b, 16777216
  %v8_16381 = sdiv i32 %sext, 16777216
  %v9_16381 = call i32 @function_1639a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_16381, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v9_16381

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16384() local_unnamed_addr {
dec_label_pc_16384:
  %eax.global-to-local = alloca i32, align 4
  %v0_16384 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16384
}

define i32 @function_1639a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1639a:
  %v0_1639a = load i32, i32* @ebp, align 4
  %v1_1639a = add i32 %v0_1639a, -12
  %v2_1639a = inttoptr i32 %v1_1639a to i32*
  %v3_1639a = load i32, i32* %v2_1639a, align 4
  %v1_1639d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1639d = xor i32 %v1_1639d, %v3_1639a
  ret i32 %v2_1639d
}

define i32 @_ZNSt6vectorIhSaIhEE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_163b2:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_163cc = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v2_163d8 = call i32 @function_31a0a(i32 %tmp101, i32 %v2_163cc)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_163e9

bb:                                               ; preds = %dec_label_pc_163b2
  %v1_163e7 = call i32 @function_163ee()
  br label %dec_label_pc_163e9

dec_label_pc_163e9:                               ; preds = %bb, %dec_label_pc_163b2
  %v2_163e7 = phi i32 [ %v1_163e7, %bb ], [ 0, %dec_label_pc_163b2 ]
  ret i32 %v2_163e7

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_163ee() local_unnamed_addr {
dec_label_pc_163ee:
  %v0_163ef = load i32, i32* @eax, align 8
  ret i32 %v0_163ef
}

define i32 @_ZN9__gnu_cxxmiIPKhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_163f0:
  %v2_16419 = load i32, i32* %arg1, align 4
  %v1_16428 = inttoptr i32 %arg2 to i32*
  %v2_16428 = load i32, i32* %v1_16428, align 4
  %v2_1642c = sub i32 %v2_16419, %v2_16428
  store i32 %v2_1642c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1643c

bb:                                               ; preds = %dec_label_pc_163f0
  %v2_1643a = call i32 @function_16441(i32 %arg2)
  br label %dec_label_pc_1643c

dec_label_pc_1643c:                               ; preds = %bb, %dec_label_pc_163f0
  %v3_1643a = phi i32 [ %v2_1643a, %bb ], [ %v2_1642c, %dec_label_pc_163f0 ]
  ret i32 %v3_1643a
}

define i32 @function_16441(i32 %arg1) local_unnamed_addr {
dec_label_pc_16441:
  %v0_16446 = load i32, i32* @eax, align 8
  ret i32 %v0_16446
}

define i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16448:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_1645f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1645f, i32* @eax, align 8
  %v2_1646c = call i32 @function_2bda4(i32 %v2_1645f, i32 %arg1)
  %v2_16474 = ptrtoint i32* %stack_var_-20 to i32
  %v2_16481 = call i32 @function_2bd18(i32 %v2_16474, i32 %arg1)
  store i32 %v2_16474, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_164a7

bb:                                               ; preds = %dec_label_pc_16448
  %v3_164a5 = call i32 @function_164ac(i32 %v2_16474, i32 %v2_1645f)
  br label %dec_label_pc_164a7

dec_label_pc_164a7:                               ; preds = %bb, %dec_label_pc_16448
  %v4_164a5 = phi i32 [ %v3_164a5, %bb ], [ %v2_16474, %dec_label_pc_16448 ]
  ret i32 %v4_164a5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_164ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164ac:
  %v0_164ad = load i32, i32* @eax, align 8
  ret i32 %v0_164ad
}

define i32 @_ZN9__gnu_cxxmiIPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164ae:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_164d2 = call i32 @function_31b64(i32 %arg1)
  %v1_164d7 = inttoptr i32 %v1_164d2 to i32*
  %v2_164d7 = load i32, i32* %v1_164d7, align 4
  store i32 %v2_164d7, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_164e1 = call i32 @function_31b64(i32 %arg2)
  %v1_164e6 = inttoptr i32 %v1_164e1 to i32*
  %v2_164e6 = load i32, i32* %v1_164e6, align 4
  %v0_164e8 = load i32, i32* @ebx, align 4
  %v2_164ea = sub i32 %v0_164e8, %v2_164e6
  ret i32 %v2_164ea

; uselistorder directives
  uselistorder i32 (i32)* @function_31b64, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16506:
  store i32 %arg1, i32* @eax, align 8
  %v1_16523 = call i32 @function_3230c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16534

bb:                                               ; preds = %dec_label_pc_16506
  %v1_16532 = call i32 @function_16539()
  br label %dec_label_pc_16534

dec_label_pc_16534:                               ; preds = %bb, %dec_label_pc_16506
  %v2_16532 = phi i32 [ %v1_16532, %bb ], [ 0, %dec_label_pc_16506 ]
  ret i32 %v2_16532

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16539() local_unnamed_addr {
dec_label_pc_16539:
  %v0_1653a = load i32, i32* @eax, align 8
  ret i32 %v0_1653a
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1653c:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_1653f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp102, i32* @eax, align 8
  %v1_1655a = call i32 @function_32402(i32 %tmp102)
  store i32 %v1_1655a, i32* @eax, align 8
  %v1_16562 = add i32 %tmp102, 4
  %v2_16562 = inttoptr i32 %v1_16562 to i32*
  %v3_16562 = load i32, i32* %v2_16562, align 4
  %v2_16568 = load i32, i32* %arg1, align 4
  %v3_16575 = call i32 @function_3242f(i32 %v2_16568, i32 %v3_16562, i32 %v1_1655a)
  store i32 %tmp102, i32* @eax, align 8
  %v1_16580 = call i32 @function_32378(i32 %tmp102)
  store i32 %v0_1653f, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_165b6:
  store i32 %arg1, i32* @eax, align 8
  %v1_165d3 = call i32 @function_32528(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_165e4

bb:                                               ; preds = %dec_label_pc_165b6
  %v1_165e2 = call i32 @function_165e9()
  br label %dec_label_pc_165e4

dec_label_pc_165e4:                               ; preds = %bb, %dec_label_pc_165b6
  %v2_165e2 = phi i32 [ %v1_165e2, %bb ], [ 0, %dec_label_pc_165b6 ]
  ret i32 %v2_165e2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_165e9() local_unnamed_addr {
dec_label_pc_165e9:
  %v0_165ea = load i32, i32* @eax, align 8
  ret i32 %v0_165ea
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_165ec:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1660a = call i32 @function_3261e(i32 %tmp102)
  store i32 %v1_1660a, i32* @eax, align 8
  %v1_16612 = add i32 %tmp102, 4
  %v2_16612 = inttoptr i32 %v1_16612 to i32*
  %v3_16612 = load i32, i32* %v2_16612, align 4
  store i32 %v3_16612, i32* @ecx, align 8
  %v2_16618 = load i32, i32* %arg1, align 4
  %v3_16625 = call i32 @function_3264b(i32 %v2_16618, i32 %v3_16612, i32 %v1_1660a)
  store i32 %tmp102, i32* @eax, align 8
  %v1_16630 = call i32 @function_32594(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1665a

bb:                                               ; preds = %dec_label_pc_165ec
  %v1_1663f = call i32 @function_1665f()
  br label %dec_label_pc_1665a

dec_label_pc_1665a:                               ; preds = %dec_label_pc_165ec, %bb
  %v0_16641 = phi i32 [ 0, %dec_label_pc_165ec ], [ %v1_1663f, %bb ]
  ret i32 %v0_16641

; uselistorder directives
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1665a, { 1, 0 }
}

define i32 @function_16643() local_unnamed_addr {
dec_label_pc_16643:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_16643 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_16643, i32* %ebx.global-to-local, align 4
  %v0_16645 = load i32, i32* @ebp, align 4
  %v1_16645 = add i32 %v0_16645, -28
  %v2_16645 = inttoptr i32 %v1_16645 to i32*
  %v3_16645 = load i32, i32* %v2_16645, align 4
  store i32 %v3_16645, i32* @eax, align 8
  %v1_1664b = call i32 @function_32594(i32 %v3_16645)
  %v0_16650 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_16650, i32* %eax.global-to-local, align 8
  ret i32 %v0_16650

; uselistorder directives
  uselistorder i32 (i32)* @function_32594, { 1, 0 }
}

define i32 @function_1665f() local_unnamed_addr {
dec_label_pc_1665f:
  %v0_16664 = load i32, i32* @eax, align 8
  ret i32 %v0_16664
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16666:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 8
  %v1_1668c = call i32 @function_3270e(i32 %tmp101)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_166a4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_166be = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v2_166ca = call i32 @function_327aa(i32 %tmp101, i32 %v2_166be)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_166e2:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_166e2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_166fc = add i32 %tmp100, 4
  %v2_166fc = inttoptr i32 %v1_166fc to i32*
  %v3_166fc = load i32, i32* %v2_166fc, align 4
  %v2_16704 = load i32, i32* %arg1, align 4
  %v2_16708 = sub i32 %v3_166fc, %v2_16704
  %v2_1670c = sdiv i32 %v2_16708, 4
  %v3_1670f = mul i32 %v2_1670c, -991146299
  store i32 %v0_166e2, i32* %ebp.global-to-local, align 4
  ret i32 %v3_1670f
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16728:
  %ebp.global-to-local = alloca i32, align 4
  %v0_16728 = load i32, i32* %ebp.global-to-local, align 4
  %v2_16748 = load i32, i32* %arg1, align 4
  %v3_1674d = mul i32 %arg2, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_16750 = add i32 %v2_16748, %v3_1674d
  store i32 %v0_16728, i32* %ebp.global-to-local, align 4
  ret i32 %v2_16750
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16766:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_1678b = call i32 @function_32a0a(i32 %arg2)
  store i32 %v1_1678b, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_16798 = call i32 @function_2d012(i32 %arg2)
  store i32 %v1_16798, i32* @eax, align 8
  store i32 %tmp108, i32* @edx, align 4
  %v0_167a0 = load i32, i32* @ebx, align 4
  %v3_167ab = call i32 @function_32a38(i32 %tmp108, i32 %v1_16798, i32 %v0_167a0)
  store i32 %tmp108, i32* @eax, align 8
  %v1_167b6 = call i32 @function_32798(i32 %tmp108)
  store i32 %v1_167b6, i32* %ebx.global-to-local, align 4
  %v2_167c0 = load i32, i32* %arg1, align 4
  store i32 %v2_167c0, i32* %esi.global-to-local, align 4
  %v2_167c2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_167c2, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 4
  %v2_167cf = call i32 @function_3296a(i32 %v2_167c2, i32 %arg2)
  %v2_167d7 = ptrtoint i32* %stack_var_-24 to i32
  %v2_167e4 = call i32 @function_329ba(i32 %v2_167d7, i32 %arg2)
  %v0_167ec = load i32, i32* %ebx.global-to-local, align 4
  %v0_167f0 = load i32, i32* %esi.global-to-local, align 4
  %v3_167f4 = load i32, i32* %stack_var_-20, align 4
  %v3_167fb = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_167fb, i32* @eax, align 8
  %v4_16801 = call i32 @function_32add(i32 %v3_167fb, i32 %v3_167f4, i32 %v0_167f0, i32 %v0_167ec)
  %v2_1680b = add i32 %tmp108, 4
  %v3_1680b = inttoptr i32 %v2_1680b to i32*
  store i32 %v4_16801, i32* %v3_1680b, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16833

bb:                                               ; preds = %dec_label_pc_16766
  %v1_16818 = call i32 @function_16838()
  br label %dec_label_pc_16833

dec_label_pc_16833:                               ; preds = %dec_label_pc_16766, %bb
  %v0_1681a = phi i32 [ 0, %dec_label_pc_16766 ], [ %v1_16818, %bb ]
  ret i32 %v0_1681a

; uselistorder directives
  uselistorder i32 %tmp108, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16833, { 1, 0 }
}

define i32 @function_1681c() local_unnamed_addr {
dec_label_pc_1681c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1681c = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1681c, i32* %ebx.global-to-local, align 4
  %v0_1681e = load i32, i32* @ebp, align 4
  %v1_1681e = add i32 %v0_1681e, -28
  %v2_1681e = inttoptr i32 %v1_1681e to i32*
  %v3_1681e = load i32, i32* %v2_1681e, align 4
  store i32 %v3_1681e, i32* @eax, align 8
  %v1_16824 = call i32 @function_3270e(i32 %v3_1681e)
  %v0_16829 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_16829, i32* %eax.global-to-local, align 8
  ret i32 %v0_16829

; uselistorder directives
  uselistorder i32 (i32)* @function_3270e, { 1, 0 }
}

define i32 @function_16838() local_unnamed_addr {
dec_label_pc_16838:
  %v0_1683e = load i32, i32* @eax, align 8
  ret i32 %v0_1683e
}

define i32 @_ZNSaI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16840:
  store i32 %arg1, i32* @eax, align 8
  %v1_1685d = call i32 @function_32c0c(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSaI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16876:
  store i32 %arg1, i32* @eax, align 8
  %v1_16893 = call i32 @function_32c6c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_168a4

bb:                                               ; preds = %dec_label_pc_16876
  %v1_168a2 = call i32 @function_168a9()
  br label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %bb, %dec_label_pc_16876
  %v2_168a2 = phi i32 [ %v1_168a2, %bb ], [ 0, %dec_label_pc_16876 ]
  ret i32 %v2_168a2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_168a9() local_unnamed_addr {
dec_label_pc_168a9:
  %v0_168aa = load i32, i32* @eax, align 8
  ret i32 %v0_168aa
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_168ac:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_168ac = load i32, i32* %ebp.global-to-local, align 4
  %v1_168c6 = add i32 %tmp100, 4
  %v2_168c6 = inttoptr i32 %v1_168c6 to i32*
  %v3_168c6 = load i32, i32* %v2_168c6, align 4
  %v2_168ce = load i32, i32* %arg1, align 4
  %v2_168d2 = sub i32 %v3_168c6, %v2_168ce
  %v2_168d6 = sdiv i32 %v2_168d2, 4
  %v3_168d9 = mul i32 %v2_168d6, -858993459
  store i32 %v0_168ac, i32* %ebp.global-to-local, align 4
  ret i32 %v3_168d9
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_168f2:
  store i32 %arg1, i32* @eax, align 8
  %v1_1690f = call i32 @function_32e2c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16920

bb:                                               ; preds = %dec_label_pc_168f2
  %v1_1691e = call i32 @function_16925()
  br label %dec_label_pc_16920

dec_label_pc_16920:                               ; preds = %bb, %dec_label_pc_168f2
  %v2_1691e = phi i32 [ %v1_1691e, %bb ], [ 0, %dec_label_pc_168f2 ]
  ret i32 %v2_1691e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16925() local_unnamed_addr {
dec_label_pc_16925:
  %v0_16926 = load i32, i32* @eax, align 8
  ret i32 %v0_16926
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16928:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 8
  %v1_16946 = call i32 @function_32f1c(i32 %tmp102)
  store i32 %v1_16946, i32* @eax, align 8
  %v1_1694e = add i32 %tmp102, 4
  %v2_1694e = inttoptr i32 %v1_1694e to i32*
  %v3_1694e = load i32, i32* %v2_1694e, align 4
  store i32 %v3_1694e, i32* @ecx, align 8
  %v2_16954 = load i32, i32* %arg1, align 4
  store i32 %v2_16954, i32* @edx, align 4
  %v3_16961 = call i32 @function_32f49(i32 %v2_16954, i32 %v3_1694e, i32 %v1_16946)
  store i32 %tmp102, i32* @eax, align 8
  %v1_1696c = call i32 @function_32e98(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16996

bb:                                               ; preds = %dec_label_pc_16928
  %v1_1697b = call i32 @function_1699b()
  br label %dec_label_pc_16996

dec_label_pc_16996:                               ; preds = %dec_label_pc_16928, %bb
  %v0_1697d = phi i32 [ 0, %dec_label_pc_16928 ], [ %v1_1697b, %bb ]
  ret i32 %v0_1697d

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16996, { 1, 0 }
}

define i32 @function_1697f() local_unnamed_addr {
dec_label_pc_1697f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1697f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1697f, i32* %ebx.global-to-local, align 4
  %v0_16981 = load i32, i32* @ebp, align 4
  %v1_16981 = add i32 %v0_16981, -28
  %v2_16981 = inttoptr i32 %v1_16981 to i32*
  %v3_16981 = load i32, i32* %v2_16981, align 4
  store i32 %v3_16981, i32* @eax, align 8
  %v1_16987 = call i32 @function_32e98(i32 %v3_16981)
  %v0_1698c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1698c, i32* %eax.global-to-local, align 8
  ret i32 %v0_1698c

; uselistorder directives
  uselistorder i32 (i32)* @function_32e98, { 1, 0 }
}

define i32 @function_1699b() local_unnamed_addr {
dec_label_pc_1699b:
  %v0_169a0 = load i32, i32* @eax, align 8
  ret i32 %v0_169a0
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_169a2:
  %v1_169bf = call i32 @function_33042(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_169d0

bb:                                               ; preds = %dec_label_pc_169a2
  %v1_169ce = call i32 @function_169d5()
  br label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %bb, %dec_label_pc_169a2
  %v2_169ce = phi i32 [ %v1_169ce, %bb ], [ 0, %dec_label_pc_169a2 ]
  ret i32 %v2_169ce
}

define i32 @function_169d5() local_unnamed_addr {
dec_label_pc_169d5:
  %v0_169d6 = load i32, i32* @eax, align 8
  ret i32 %v0_169d6
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_169d8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp101, i32* @eax, align 8
  %v1_169f6 = call i32 @function_33132(i32 %tmp101)
  store i32 %v1_169f6, i32* @eax, align 8
  %v1_169fe = add i32 %tmp101, 4
  %v2_169fe = inttoptr i32 %v1_169fe to i32*
  %v3_169fe = load i32, i32* %v2_169fe, align 4
  %v2_16a04 = load i32, i32* %arg1, align 4
  %v3_16a11 = call i32 @function_3315f(i32 %v2_16a04, i32 %v3_169fe, i32 %v1_169f6)
  %v1_16a1c = call i32 @__stack_chk_fail.1238(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16a2d

bb:                                               ; preds = %dec_label_pc_169d8
  %v1_16a2b = call i32 @function_16a4b()
  store i32 %v1_16a2b, i32* @eax, align 8
  br label %dec_label_pc_16a2d

dec_label_pc_16a2d:                               ; preds = %bb, %dec_label_pc_169d8
  %v0_16a2d = call i32 @function_16a46()
  ret i32 %v0_16a2d

; uselistorder directives
  uselistorder i32 %tmp101, { 3, 2, 1, 0 }
}

define i32 @function_16a30() local_unnamed_addr {
dec_label_pc_16a30:
  %eax.global-to-local = alloca i32, align 4
  %v0_16a30 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16a30
}

define i32 @function_16a46() local_unnamed_addr {
dec_label_pc_16a46:
  %v0_16a46 = load i32, i32* @eax, align 8
  ret i32 %v0_16a46
}

define i32 @function_16a4b() local_unnamed_addr {
dec_label_pc_16a4b:
  %v0_16a50 = load i32, i32* @eax, align 8
  ret i32 %v0_16a50
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16a52:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_16a6c = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v2_16a78 = call i32 @function_33222(i32 %tmp101, i32 %v2_16a6c)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16a89

bb:                                               ; preds = %dec_label_pc_16a52
  %v1_16a87 = call i32 @function_16a8e()
  br label %dec_label_pc_16a89

dec_label_pc_16a89:                               ; preds = %bb, %dec_label_pc_16a52
  %v2_16a87 = phi i32 [ %v1_16a87, %bb ], [ 0, %dec_label_pc_16a52 ]
  ret i32 %v2_16a87

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_16a8e() local_unnamed_addr {
dec_label_pc_16a8e:
  %v0_16a8f = load i32, i32* @eax, align 8
  ret i32 %v0_16a8f
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16a90:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_16aaa = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v2_16ab6 = call i32 @function_332be(i32 %tmp101, i32 %v2_16aaa)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16ac7

bb:                                               ; preds = %dec_label_pc_16a90
  %v1_16ac5 = call i32 @function_16acc()
  br label %dec_label_pc_16ac7

dec_label_pc_16ac7:                               ; preds = %bb, %dec_label_pc_16a90
  %v2_16ac5 = phi i32 [ %v1_16ac5, %bb ], [ 0, %dec_label_pc_16a90 ]
  ret i32 %v2_16ac5

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_16acc() local_unnamed_addr {
dec_label_pc_16acc:
  %v0_16acd = load i32, i32* @eax, align 8
  ret i32 %v0_16acd
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16ace:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_16ace = load i32, i32* %ebp.global-to-local, align 4
  %v1_16ae8 = add i32 %tmp100, 4
  %v2_16ae8 = inttoptr i32 %v1_16ae8 to i32*
  %v3_16ae8 = load i32, i32* %v2_16ae8, align 4
  %v2_16af0 = load i32, i32* %arg1, align 4
  %v2_16af4 = sub i32 %v3_16ae8, %v2_16af0
  %v2_16af8 = sdiv i32 %v2_16af4, 32
  store i32 %v0_16ace, i32* %ebp.global-to-local, align 4
  ret i32 %v2_16af8
}

define i32 @_ZNSt6vectorIhSaIhEE6resizeEjh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16b0e:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i8, align 1
  %tmp109 = ptrtoint i32* %arg1 to i32
  %sext = mul i32 %arg3, 16777216
  %v4_16b15 = sdiv i32 %sext, 16777216
  store i32 %arg2, i32* @edx, align 4
  %v1_16b24 = trunc i32 %v4_16b15 to i8
  store i8 %v1_16b24, i8* %stack_var_-40, align 1
  store i32 %tmp109, i32* @eax, align 8
  %v1_16b38 = call i32 @function_2a8c8(i32 %tmp109)
  %v10_16b3d = icmp ult i32 %v1_16b38, %arg2
  %v5_16b43 = icmp eq i1 %v10_16b3d, false
  store i32 %tmp109, i32* @eax, align 8
  %v1_16b93 = call i32 @function_2a8c8(i32 %tmp109)
  br i1 %v5_16b43, label %dec_label_pc_16b8d, label %dec_label_pc_16b47

dec_label_pc_16b47:                               ; preds = %dec_label_pc_16b0e
  %v2_16b57 = sub i32 %arg2, %v1_16b93
  %v2_16b59 = ptrtoint i32* %stack_var_-20 to i32
  %v2_16b66 = call i32 @function_2c9f2(i32 %v2_16b59, i32 %tmp109)
  %v2_16b6e = ptrtoint i8* %stack_var_-40 to i32
  %v3_16b79 = load i32, i32* %stack_var_-20, align 4
  store i32 %tmp109, i32* @eax, align 8
  %v4_16b86 = call i32 @function_3339a(i32 %tmp109, i32 %v3_16b79, i32 %v2_16b57, i32 %v2_16b6e)
  br label %dec_label_pc_16bb9

dec_label_pc_16b8d:                               ; preds = %dec_label_pc_16b0e
  %tmp116 = icmp ule i32 %v1_16b93, %arg2
  %v3_16b9b = icmp ne i1 %tmp116, true
  %v5_16b9e = icmp eq i1 %v3_16b9b, false
  br i1 %v5_16b9e, label %dec_label_pc_16bb9, label %dec_label_pc_16ba2

dec_label_pc_16ba2:                               ; preds = %dec_label_pc_16b8d
  br label %dec_label_pc_16bb9

dec_label_pc_16bb9:                               ; preds = %dec_label_pc_16ba2, %dec_label_pc_16b8d, %dec_label_pc_16b47
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp109, { 1, 0, 2, 4, 3, 6, 5 }
  uselistorder i32 (i32)* @function_2a8c8, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant9copy_intoD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16bd0:
  store i32 %arg1, i32* @eax, align 8
  %v1_16bed = call i32 @function_2cb5e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16bfe

bb:                                               ; preds = %dec_label_pc_16bd0
  %v1_16bfc = call i32 @function_16c03()
  br label %dec_label_pc_16bfe

dec_label_pc_16bfe:                               ; preds = %bb, %dec_label_pc_16bd0
  %v2_16bfc = phi i32 [ %v1_16bfc, %bb ], [ 0, %dec_label_pc_16bd0 ]
  ret i32 %v2_16bfc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16c03() local_unnamed_addr {
dec_label_pc_16c03:
  %v0_16c04 = load i32, i32* @eax, align 8
  ret i32 %v0_16c04
}

define i32 @_ZSt3maxIxERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16c05:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v2_16c26 = load i32, i32* %arg1, align 4
  %v1_16c28 = add i32 %tmp6, 4
  %v2_16c28 = inttoptr i32 %v1_16c28 to i32*
  %v3_16c28 = load i32, i32* %v2_16c28, align 4
  %v1_16c2e = add i32 %arg2, 4
  %v2_16c2e = inttoptr i32 %v1_16c2e to i32*
  %v3_16c2e = load i32, i32* %v2_16c2e, align 4
  %v1_16c31 = inttoptr i32 %arg2 to i32*
  %v2_16c31 = load i32, i32* %v1_16c31, align 4
  %v8_16c35 = icmp sgt i32 %v3_16c28, %v3_16c2e
  br i1 %v8_16c35, label %dec_label_pc_16c44, label %dec_label_pc_16c37

dec_label_pc_16c37:                               ; preds = %dec_label_pc_16c05
  %v5_16c39 = icmp slt i32 %v3_16c28, %v3_16c2e
  br i1 %v5_16c39, label %dec_label_pc_16c47, label %dec_label_pc_16c3b

dec_label_pc_16c3b:                               ; preds = %dec_label_pc_16c37
  %v7_16c3b = icmp ult i32 %v2_16c26, %v2_16c31
  %v1_16c3d = icmp eq i1 %v7_16c3b, false
  br i1 %v1_16c3d, label %dec_label_pc_16c44, label %dec_label_pc_16c47

dec_label_pc_16c44:                               ; preds = %dec_label_pc_16c3b, %dec_label_pc_16c05
  br label %dec_label_pc_16c47

dec_label_pc_16c47:                               ; preds = %dec_label_pc_16c37, %dec_label_pc_16c3b, %dec_label_pc_16c44
  %storemerge = phi i32 [ %tmp6, %dec_label_pc_16c44 ], [ %arg2, %dec_label_pc_16c3b ], [ %arg2, %dec_label_pc_16c37 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_16c47, { 2, 1, 0 }
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c5e:
  %v1_16c7b = call i32 @function_27b96(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16c8c

bb:                                               ; preds = %dec_label_pc_16c5e
  %v1_16c8a = call i32 @function_16c91()
  br label %dec_label_pc_16c8c

dec_label_pc_16c8c:                               ; preds = %bb, %dec_label_pc_16c5e
  %v2_16c8a = phi i32 [ %v1_16c8a, %bb ], [ 0, %dec_label_pc_16c5e ]
  ret i32 %v2_16c8a
}

define i32 @function_16c91() local_unnamed_addr {
dec_label_pc_16c91:
  %v0_16c92 = load i32, i32* @eax, align 8
  ret i32 %v0_16c92
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c94:
  %v1_16cb1 = call i32 @__stack_chk_fail.812(i32 %arg1)
  ret i32 0
}

define i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16cca:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v2_16cea = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16cea, i32* @eax, align 8
  %v2_16cf4 = call i32 @function_335b2(i32 %v2_16cea, i32 %arg1)
  %v2_16cff = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16cff, i32* @eax, align 8
  store i32 %arg2, i32* @ecx, align 8
  %v3_16d10 = call i32 @function_335fc(i32 %v2_16cff, i32 %arg1, i32 %arg2)
  %v2_16d25 = call i32 @function_336e8(i32 %v2_16cff, i32 %v2_16cea)
  %v4_16d2a = trunc i32 %v2_16d25 to i8
  %v5_16d2a = icmp eq i8 %v4_16d2a, 0
  %. = zext i1 %v5_16d2a to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt4pairIKSsSsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d4e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16d8b

bb:                                               ; preds = %dec_label_pc_16d4e
  %v2_16d89 = call i32 @function_16da9(i32 %arg1)
  store i32 %v2_16d89, i32* @eax, align 8
  br label %dec_label_pc_16d8b

dec_label_pc_16d8b:                               ; preds = %bb, %dec_label_pc_16d4e
  %v0_16d8b = call i32 @function_16da4()
  ret i32 %v0_16d8b
}

define i32 @function_16d8e() local_unnamed_addr {
dec_label_pc_16d8e:
  %eax.global-to-local = alloca i32, align 4
  %v0_16d8e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16d8e
}

define i32 @function_16da4() local_unnamed_addr {
dec_label_pc_16da4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16da9(i32 %arg1) local_unnamed_addr {
dec_label_pc_16da9:
  %v0_16dae = load i32, i32* @eax, align 8
  ret i32 %v0_16dae
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16db0:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_16dce = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16dce, i32* @eax, align 8
  %v3_16de2 = call i32 @function_3380e(i32 %v2_16dce, i32 %arg1, i32 %arg2)
  %v2_16dea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16dea, i32* @eax, align 8
  %v2_16df7 = call i32 @function_3392a(i32 %v2_16dea, i32 %arg1)
  store i32 %v2_16dce, i32* @eax, align 8
  %v2_16e0c = call i32 @function_33974(i32 %v2_16dce, i32 %v2_16dea)
  store i32 %v2_16e0c, i32* %eax.global-to-local, align 8
  %v4_16e11 = trunc i32 %v2_16e0c to i8
  %v5_16e11 = icmp eq i8 %v4_16e11, 0
  %v1_16e13 = icmp eq i1 %v5_16e11, false
  br i1 %v1_16e13, label %dec_label_pc_16e5d, label %dec_label_pc_16e15

dec_label_pc_16e15:                               ; preds = %dec_label_pc_16db0
  store i32 %v2_16dce, i32* @eax, align 8
  %v1_16e1b = call i32 @function_338b0(i32 %v2_16dce)
  store i32 %v1_16e1b, i32* @ebx, align 4
  %v2_16e22 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_16e22, i32* @eax, align 8
  %v2_16e2f = call i32 @function_33866(i32 %v2_16e22, i32 %arg1)
  %v0_16e37 = load i32, i32* @ebx, align 4
  %v2_16e42 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_16e42, i32* @eax, align 8
  %v3_16e48 = call i32 @function_338e2(i32 %v2_16e42, i32 %arg2, i32 %v0_16e37)
  store i32 %v3_16e48, i32* %eax.global-to-local, align 8
  %v4_16e4d = trunc i32 %v3_16e48 to i8
  %v5_16e4d = icmp ne i8 %v4_16e4d, 0
  %. = zext i1 %v5_16e4d to i32
  br label %dec_label_pc_16e5d

dec_label_pc_16e5d:                               ; preds = %dec_label_pc_16e15, %dec_label_pc_16db0
  %storemerge = phi i32 [ 1, %dec_label_pc_16db0 ], [ %., %dec_label_pc_16e15 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_16e5d = icmp eq i32 %storemerge, 0
  br i1 %v5_16e5d, label %bb, label %dec_label_pc_16e61

bb:                                               ; preds = %dec_label_pc_16e5d
  %v1_16e5f = call i32 @function_16ec4()
  store i32 %v1_16e5f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16e61

dec_label_pc_16e61:                               ; preds = %bb, %dec_label_pc_16e5d
  %v2_16e61 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16e61, i32* %eax.global-to-local, align 8
  %v1_16e64 = load i32, i32* @esp, align 4
  %v2_16e64 = inttoptr i32 %v1_16e64 to i32*
  store i32 %v2_16e61, i32* %v2_16e64, align 4
  %v4_16e64 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_16e64

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 3, 4, 0, 5, 1, 2 }
}

define x86_fp80 @function_16e74(i16 %arg1) local_unnamed_addr {
dec_label_pc_16e74:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_16e74 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16e74 = add i32 %v0_16e74, 1
  store i32 %v1_16e74, i32* %ebp.global-to-local, align 4
  %v0_16e75 = load i32, i32* %ecx.global-to-local, align 8
  %v1_16e75 = add i32 %v0_16e75, -1929108412
  %v2_16e75 = inttoptr i32 %v1_16e75 to i8*
  %v3_16e75 = load i8, i8* %v2_16e75, align 1
  %v4_16e75 = udiv i8 %v3_16e75, 2
  %v5_16e75 = shl i8 %v3_16e75, 7
  %v6_16e75 = or i8 %v4_16e75, %v5_16e75
  store i8 %v6_16e75, i8* %v2_16e75, align 1
  %v0_16e7b = load i32, i32* %ebp.global-to-local, align 4
  %v1_16e7b = add i32 %v0_16e7b, 1
  store i32 %v1_16e7b, i32* %ebp.global-to-local, align 4
  %v1_16e7c = load i32, i32* %ecx.global-to-local, align 8
  %v2_16e7c = add i32 %v1_16e7c, 803742724
  %v3_16e7c = inttoptr i32 %v2_16e7c to double*
  %v4_16e7c = load double, double* %v3_16e7c, align 4
  %v5_16e7c = fpext double %v4_16e7c to x86_fp80
  %v6_16e7c = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_16e7c = fmul x86_fp80 %v5_16e7c, %v6_16e7c
  store x86_fp80 %v7_16e7c, x86_fp80* %st0.global-to-local, align 4
  ret x86_fp80 %v7_16e7c

; uselistorder directives
  uselistorder i8 %v3_16e75, { 1, 0 }
}

define i32 @function_16ea2(i16 %arg1) local_unnamed_addr {
dec_label_pc_16ea2:
  %eax.global-to-local = alloca i32, align 4
  %v6_16ea2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_16ea2
}

define i32 @function_16ec4() local_unnamed_addr {
dec_label_pc_16ec4:
  %v0_16ec4 = load i32, i32* @ebp, align 4
  %v1_16ec4 = add i32 %v0_16ec4, -28
  store i32 %v1_16ec4, i32* @eax, align 8
  %v1_16eca = call i32 @function_338b0(i32 %v1_16ec4)
  %v1_16ecf = add i32 %v1_16eca, 4
  ret i32 %v1_16ecf

; uselistorder directives
  uselistorder i32 (i32)* @function_338b0, { 1, 0 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16f10:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 8
  %v1_16f35 = call i32 @function_33c06(i32 %arg2)
  store i32 %v1_16f35, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_16f42 = call i32 @function_2d5f2(i32 %arg2)
  store i32 %v1_16f42, i32* @eax, align 8
  %v3_16f55 = call i32 @function_33c34(i32 %tmp107, i32 %v1_16f42, i32 %v1_16f35)
  store i32 %tmp107, i32* @eax, align 8
  %v1_16f60 = call i32 @function_32dd6(i32 %tmp107)
  store i32 %v1_16f60, i32* %ebx.global-to-local, align 4
  %v2_16f6a = load i32, i32* %arg1, align 4
  store i32 %v2_16f6a, i32* %esi.global-to-local, align 4
  %v2_16f6c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16f6c, i32* @eax, align 8
  %v2_16f79 = call i32 @function_33074(i32 %v2_16f6c, i32 %arg2)
  %v0_16f7e = load i32, i32* @esp, align 4
  %v5_16f7e = icmp ult i32 %v0_16f7e, 4
  store i1 %v5_16f7e, i1* @cf, align 1
  %v2_16f81 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16f81, i32* @eax, align 8
  %v2_16f8e = call i32 @function_330c4(i32 %v2_16f81, i32 %arg2)
  %v0_16f96 = load i32, i32* %ebx.global-to-local, align 4
  %v0_16f9a = load i32, i32* %esi.global-to-local, align 4
  %v3_16f9e = load i32, i32* %stack_var_-20, align 4
  %v3_16fa5 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_16fa5, i32* @eax, align 8
  %v4_16fab = call i32 @function_33cd1(i32 %v3_16fa5, i32 %v3_16f9e, i32 %v0_16f9a, i32 %v0_16f96)
  %v2_16fb5 = add i32 %tmp107, 4
  %v3_16fb5 = inttoptr i32 %v2_16fb5 to i32*
  store i32 %v4_16fab, i32* %v3_16fb5, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_16fc4

bb:                                               ; preds = %dec_label_pc_16f10
  %v1_16fc2 = call i32 @function_16fe2()
  store i32 %v1_16fc2, i32* @eax, align 8
  br label %dec_label_pc_16fc4

dec_label_pc_16fc4:                               ; preds = %bb, %dec_label_pc_16f10
  %v0_16fc4 = call i32 @function_16fdd()
  ret i32 %v0_16fc4

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_16fc7() local_unnamed_addr {
dec_label_pc_16fc7:
  %eax.global-to-local = alloca i32, align 4
  %v0_16fc7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16fc7
}

define i32 @function_16fdd() local_unnamed_addr {
dec_label_pc_16fdd:
  %v0_16fdd = load i32, i32* @eax, align 8
  ret i32 %v0_16fdd
}

define i32 @function_16fe2() local_unnamed_addr {
dec_label_pc_16fe2:
  %v0_16fe8 = load i32, i32* @eax, align 8
  ret i32 %v0_16fe8
}

define i32 @_ZSt4sortIPxEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16fe9:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_16fe9 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_16fe9, i32* %stack_var_-4, align 4
  %v4_16fe9 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_16fe9, i32* @ebp, align 4
  %v15_17009 = icmp eq i32 %arg2, %arg1
  br i1 %v15_17009, label %dec_label_pc_1704f, label %dec_label_pc_1700e

dec_label_pc_1700e:                               ; preds = %dec_label_pc_16fe9
  %v2_17016 = sub i32 %arg2, %arg1
  %v2_1701a = sdiv i32 %v2_17016, 8
  %v1_17020 = call i32 @function_1cc98(i32 %v2_1701a)
  %v2_17025 = mul i32 %v1_17020, 2
  %v3_17038 = call i32 @function_33dff(i32 %arg1, i32 %arg2, i32 %v2_17025)
  %v2_1704a = call i32 @function_33ea8(i32 %arg1, i32 %arg2)
  %v2_17060.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1704f

dec_label_pc_1704f:                               ; preds = %dec_label_pc_1700e, %dec_label_pc_16fe9
  %v2_17060 = phi i32 [ %v2_17060.pre, %dec_label_pc_1700e ], [ %v0_16fe9, %dec_label_pc_16fe9 ]
  store i32 %v2_17060, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 2, 3, 0 }
}

define i32 @_ZNKSt3mapI7uint25612CTransactionSt4lessIS0_ESaISt4pairIKS0_S1_EEE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17062:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_1707f = call i32 @function_33ffc(i32 %arg1)
  store i32 %v1_1707f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17090

bb:                                               ; preds = %dec_label_pc_17062
  %v1_1708e = call i32 @function_17095()
  br label %dec_label_pc_17090

dec_label_pc_17090:                               ; preds = %bb, %dec_label_pc_17062
  %v2_1708e = phi i32 [ %v1_1708e, %bb ], [ %v1_1707f, %dec_label_pc_17062 ]
  ret i32 %v2_1708e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17095() local_unnamed_addr {
dec_label_pc_17095:
  %v0_17096 = load i32, i32* @eax, align 8
  ret i32 %v0_17096
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_21ureal_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17098:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_170bb

bb:                                               ; preds = %dec_label_pc_17098
  %v2_170b9 = call i32 @function_170c0(i32 %arg1)
  br label %dec_label_pc_170bb

dec_label_pc_170bb:                               ; preds = %bb, %dec_label_pc_17098
  %v3_170b9 = phi i32 [ %v2_170b9, %bb ], [ 0, %dec_label_pc_17098 ]
  ret i32 %v3_170b9
}

define i32 @function_170c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_170c0:
  %v0_170c1 = load i32, i32* @eax, align 8
  ret i32 %v0_170c1
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_21ureal_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_170c2:
  %v1_170df = call i32 @function_2e15a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_170f0

bb:                                               ; preds = %dec_label_pc_170c2
  %v1_170ee = call i32 @function_170f5()
  br label %dec_label_pc_170f0

dec_label_pc_170f0:                               ; preds = %bb, %dec_label_pc_170c2
  %v2_170ee = phi i32 [ %v1_170ee, %bb ], [ 0, %dec_label_pc_170c2 ]
  ret i32 %v2_170ee
}

define i32 @function_170f5() local_unnamed_addr {
dec_label_pc_170f5:
  %v0_170f6 = load i32, i32* @eax, align 8
  ret i32 %v0_170f6
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_20real_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_170f8:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_20real_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17122:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_1713f = call i32 @function_2e21a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17150

bb:                                               ; preds = %dec_label_pc_17122
  %v1_1714e = call i32 @function_17155()
  br label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %bb, %dec_label_pc_17122
  %v2_1714e = phi i32 [ %v1_1714e, %bb ], [ 0, %dec_label_pc_17122 ]
  ret i32 %v2_1714e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17155() local_unnamed_addr {
dec_label_pc_17155:
  %v0_17156 = load i32, i32* @eax, align 8
  ret i32 %v0_17156
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_28strict_ureal_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17158:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_28strict_ureal_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17182:
  store i32 %arg1, i32* @eax, align 8
  %v1_1719f = call i32 @function_2e2da(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_171b0

bb:                                               ; preds = %dec_label_pc_17182
  %v1_171ae = call i32 @function_171b5()
  br label %dec_label_pc_171b0

dec_label_pc_171b0:                               ; preds = %bb, %dec_label_pc_17182
  %v2_171ae = phi i32 [ %v1_171ae, %bb ], [ 0, %dec_label_pc_17182 ]
  ret i32 %v2_171ae

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_171b5() local_unnamed_addr {
dec_label_pc_171b5:
  %v0_171b6 = load i32, i32* @eax, align 8
  ret i32 %v0_171b6
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_27strict_real_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_171b8:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_27strict_real_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_171e2:
  store i32 %arg1, i32* @eax, align 8
  %v1_171ff = call i32 @function_2e39a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic18refactor_unary_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17218:
  ret i32 0
}

define i32 @_ZN5boost6spirit7classic19refactor_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17248:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17271

bb:                                               ; preds = %dec_label_pc_17248
  %v3_1726f = call i32 @function_17276(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_17271

dec_label_pc_17271:                               ; preds = %bb, %dec_label_pc_17248
  %v4_1726f = phi i32 [ %v3_1726f, %bb ], [ 0, %dec_label_pc_17248 ]
  ret i32 %v4_1726f
}

define i32 @function_17276(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17276:
  %v0_17277 = load i32, i32* @eax, align 8
  ret i32 %v0_17277
}

define i32 @_ZN5boost6spirit7classic17attach_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17278:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_172a1

bb:                                               ; preds = %dec_label_pc_17278
  %v3_1729f = call i32 @function_172a6(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_172a1

dec_label_pc_172a1:                               ; preds = %bb, %dec_label_pc_17278
  %v4_1729f = phi i32 [ %v3_1729f, %bb ], [ 0, %dec_label_pc_17278 ]
  ret i32 %v4_1729f
}

define i32 @function_172a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_172a6:
  %v0_172a7 = load i32, i32* @eax, align 8
  ret i32 %v0_172a7
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_172a8:
  %stack_var_-28 = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  store i32 4, i32* %arg1, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %v1_172df = add i32 %tmp9, 4
  store i32 %v1_172df, i32* @edx, align 4
  %v2_172e2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_172e2, i32* @eax, align 8
  %v2_172ec = call i32 @function_34354(i32 %v1_172df, i32 %v2_172e2)
  %v1_172f4 = add i32 %tmp9, 16
  %v2_172f4 = inttoptr i32 %v1_172f4 to i8*
  store i8 0, i8* %v2_172f4, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17304

bb:                                               ; preds = %dec_label_pc_172a8
  %v1_17302 = call i32 @function_17309()
  br label %dec_label_pc_17304

dec_label_pc_17304:                               ; preds = %bb, %dec_label_pc_172a8
  %v2_17302 = phi i32 [ %v1_17302, %bb ], [ 0, %dec_label_pc_172a8 ]
  ret i32 %v2_17302

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
}

define i32 @function_17309() local_unnamed_addr {
dec_label_pc_17309:
  %v0_1730a = load i32, i32* @eax, align 8
  ret i32 %v0_1730a
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1730c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1730f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1732a = call i32 @function_34436(i32 %arg1)
  %v1_17332 = add i32 %arg1, 4
  store i32 %v1_17332, i32* @eax, align 8
  %v1_17338 = call i32 @function_32d22(i32 %v1_17332)
  store i32 %v0_1730f, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17370:
  %tmp7 = ptrtoint i32* %arg1 to i32
  %v1_17393 = call i32 @function_2f98a(i32 %arg2)
  store i32 %v1_17393, i32* %arg1, align 4
  %v1_173a0 = add i32 %arg2, 4
  store i32 %v1_173a0, i32* @edx, align 4
  %v1_173a6 = add i32 %tmp7, 4
  %v5_173a6 = icmp ugt i32* %arg1, inttoptr (i32 -5 to i32*)
  store i1 %v5_173a6, i1* @cf, align 1
  store i32 %v1_173a6, i32* @eax, align 8
  %v2_173b0 = call i32 @function_3450a(i32 %v1_173a6, i32 %v1_173a0)
  %v1_173b8 = add i32 %arg2, 16
  %v2_173b8 = inttoptr i32 %v1_173b8 to i8*
  %v3_173b8 = load i8, i8* %v2_173b8, align 1
  %v3_173bf = add i32 %tmp7, 16
  %v4_173bf = inttoptr i32 %v3_173bf to i8*
  store i8 %v3_173b8, i8* %v4_173bf, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @_ZSt3minIxERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_173d5:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v1_173f6 = inttoptr i32 %arg2 to i32*
  %v2_173f6 = load i32, i32* %v1_173f6, align 4
  %v1_173f8 = add i32 %arg2, 4
  %v2_173f8 = inttoptr i32 %v1_173f8 to i32*
  %v3_173f8 = load i32, i32* %v2_173f8, align 4
  %v1_173fe = add i32 %tmp6, 4
  %v2_173fe = inttoptr i32 %v1_173fe to i32*
  %v3_173fe = load i32, i32* %v2_173fe, align 4
  %v2_17401 = load i32, i32* %arg1, align 4
  %v8_17405 = icmp sgt i32 %v3_173f8, %v3_173fe
  br i1 %v8_17405, label %dec_label_pc_17414, label %dec_label_pc_17407

dec_label_pc_17407:                               ; preds = %dec_label_pc_173d5
  %v5_17409 = icmp slt i32 %v3_173f8, %v3_173fe
  br i1 %v5_17409, label %dec_label_pc_17417, label %dec_label_pc_1740b

dec_label_pc_1740b:                               ; preds = %dec_label_pc_17407
  %v7_1740b = icmp ult i32 %v2_173f6, %v2_17401
  %v1_1740d = icmp eq i1 %v7_1740b, false
  br i1 %v1_1740d, label %dec_label_pc_17414, label %dec_label_pc_17417

dec_label_pc_17414:                               ; preds = %dec_label_pc_1740b, %dec_label_pc_173d5
  br label %dec_label_pc_17417

dec_label_pc_17417:                               ; preds = %dec_label_pc_17407, %dec_label_pc_1740b, %dec_label_pc_17414
  %storemerge = phi i32 [ %tmp6, %dec_label_pc_17414 ], [ %arg2, %dec_label_pc_1740b ], [ %arg2, %dec_label_pc_17407 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17423

bb:                                               ; preds = %dec_label_pc_17417
  %v1_17421 = call i32 @function_17428()
  br label %dec_label_pc_17423

dec_label_pc_17423:                               ; preds = %bb, %dec_label_pc_17417
  %v2_17421 = phi i32 [ %v1_17421, %bb ], [ %storemerge, %dec_label_pc_17417 ]
  ret i32 %v2_17421

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_17417, { 2, 1, 0 }
}

define i32 @function_17428() local_unnamed_addr {
dec_label_pc_17428:
  %v0_1742d = load i32, i32* @eax, align 8
  ret i32 %v0_1742d
}

define x86_fp80 @_ZNK9base_uintILj256EE9getdoubleEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1742e:
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_17445 = load i3, i3* @fpu_stat_TOP, align 1
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_17458

dec_label_pc_17458:                               ; preds = %dec_label_pc_1742e, %dec_label_pc_17458
  %storemerge20 = phi i32 [ 0, %dec_label_pc_1742e ], [ %v4_17488, %dec_label_pc_17458 ]
  %stack_var_-28.019 = phi double [ 1.000000e+00, %dec_label_pc_1742e ], [ %v4_17485, %dec_label_pc_17458 ]
  %stack_var_-36.018 = phi x86_fp80 [ 0xK00000000000000000000, %dec_label_pc_1742e ], [ %v4_17475, %dec_label_pc_17458 ]
  %v2_1745e = mul nuw nsw i32 %storemerge20, 4
  %v3_1745e = add i32 %v2_1745e, %arg1
  %v4_1745e = inttoptr i32 %v3_1745e to i32*
  %v5_1745e = load i32, i32* %v4_1745e, align 4
  %v6_1746c = sitofp i32 %v5_1745e to x86_fp80
  %v5_1746f = fpext double %stack_var_-28.019 to x86_fp80
  %v7_1746f = fmul x86_fp80 %v5_1746f, %v6_1746c
  %v4_17475 = fadd x86_fp80 %stack_var_-36.018, %v7_1746f
  %v4_17483 = fmul x86_fp80 %v5_1746f, 0xK401F8000000000000000
  store x86_fp80 %v4_17483, x86_fp80* %st0.global-to-local, align 4
  %v4_17485 = fptrunc x86_fp80 %v4_17483 to double
  %v4_17488 = add nuw nsw i32 %storemerge20, 1
  %exitcond = icmp eq i32 %v4_17488, 8
  br i1 %exitcond, label %dec_label_pc_17497, label %dec_label_pc_17458

dec_label_pc_17497:                               ; preds = %dec_label_pc_17458
  %v6_17497 = add i3 %v0_17445, -1
  store x86_fp80 %v4_17475, x86_fp80* %st0.global-to-local, align 4
  store i3 %v6_17497, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_174a6

bb:                                               ; preds = %dec_label_pc_17497
  %v1_174a4 = call i32 @function_174ad()
  %v0_174a6.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v3_174a6.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_174a6

dec_label_pc_174a6:                               ; preds = %bb, %dec_label_pc_17497
  %v3_174a6 = phi x86_fp80 [ %v3_174a6.pre, %bb ], [ %v4_17475, %dec_label_pc_17497 ]
  %v0_174a6 = phi i3 [ %v0_174a6.pre, %bb ], [ %v6_17497, %dec_label_pc_17497 ]
  %v2_174a6 = add i3 %v0_174a6, 1
  store i3 %v2_174a6, i3* @fpu_stat_TOP, align 1
  ret x86_fp80 %v3_174a6

; uselistorder directives
  uselistorder x86_fp80 %v4_17475, { 2, 1, 0 }
  uselistorder i32 %storemerge20, { 1, 0 }
  uselistorder x86_fp80* %st0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17458, { 1, 0 }
}

define i32 @function_174ad() local_unnamed_addr {
dec_label_pc_174ad:
  %v0_174ae = load i32, i32* @eax, align 8
  ret i32 %v0_174ae
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ex(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_174b0:
  %stack_var_-44 = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-44, align 4
  store i32 4, i32* %arg1, align 4
  %v1_174df = add i32 %tmp9, 4
  store i32 %v1_174df, i32* @edx, align 4
  %v2_174e2 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_174e2, i32* @eax, align 8
  %v2_174ec = call i32 @function_3470c(i32 %v1_174df, i32 %v2_174e2)
  %v1_174f4 = add i32 %tmp9, 16
  %v2_174f4 = inttoptr i32 %v1_174f4 to i8*
  store i8 0, i8* %v2_174f4, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17504

bb:                                               ; preds = %dec_label_pc_174b0
  %v1_17502 = call i32 @function_17509()
  br label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %bb, %dec_label_pc_174b0
  %v2_17502 = phi i32 [ %v1_17502, %bb ], [ 0, %dec_label_pc_174b0 ]
  ret i32 %v2_17502

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
}

define i32 @function_17509() local_unnamed_addr {
dec_label_pc_17509:
  %v0_1750a = load i32, i32* @eax, align 8
  ret i32 %v0_1750a
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1750c:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v1_17526 = add i32 %tmp4, 4
  %v2_17526 = inttoptr i32 %v1_17526 to i32*
  %v3_17526 = load i32, i32* %v2_17526, align 4
  %v2_1752e = load i32, i32* %arg1, align 4
  %v2_17532 = sub i32 %v3_17526, %v2_1752e
  store i32 %v2_17532, i32* @ecx, align 8
  %v2_17536 = sdiv i32 %v2_17532, 4
  %v3_17539 = mul i32 %v2_17536, -858993459
  store i32 0, i32* @edx, align 4
  ret i32 %v3_17539
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17552:
  %v2_17572 = load i32, i32* %arg1, align 4
  store i32 %v2_17572, i32* @ecx, align 8
  %v2_1757e = mul i32 %arg2, 20
  %v2_17581 = add i32 %v2_17572, %v2_1757e
  store i32 0, i32* @edx, align 4
  ret i32 %v2_17581
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_intEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17596:
  store i32 %arg1, i32* @eax, align 8
  %v2_175bb = call i32 @function_34870(i32 %arg1, i32 4)
  store i32 %arg1, i32* @eax, align 8
  %v1_175c6 = call i32 @function_349ec(i32 %arg1)
  store i32 %v1_175c6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_175d7

bb:                                               ; preds = %dec_label_pc_17596
  %v1_175d5 = call i32 @function_175dc()
  br label %dec_label_pc_175d7

dec_label_pc_175d7:                               ; preds = %bb, %dec_label_pc_17596
  %v2_175d5 = phi i32 [ %v1_175d5, %bb ], [ %v1_175c6, %dec_label_pc_17596 ]
  ret i32 %v2_175d5

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_175dc() local_unnamed_addr {
dec_label_pc_175dc:
  %v0_175dd = load i32, i32* @eax, align 8
  ret i32 %v0_175dd
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Eb(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_175de:
  %stack_var_-36 = alloca i8, align 1
  %tmp7 = ptrtoint i32* %arg1 to i32
  %tmp10 = trunc i32 %arg2 to i8
  store i8 %tmp10, i8* %stack_var_-36, align 1
  store i32 3, i32* %arg1, align 4
  %v1_17607 = add i32 %tmp7, 4
  store i32 %v1_17607, i32* @edx, align 4
  %v2_1760a = ptrtoint i8* %stack_var_-36 to i32
  store i32 %v2_1760a, i32* @eax, align 8
  %v2_17614 = call i32 @function_34a84(i32 %v1_17607, i32 %v2_1760a)
  %v1_1761c = add i32 %tmp7, 16
  %v2_1761c = inttoptr i32 %v1_1761c to i8*
  store i8 0, i8* %v2_1761c, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE8get_boolEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17634:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_17659 = call i32 @function_3490e(i32 %arg1, i32 3)
  %v1_17661 = add i32 %arg1, 4
  store i32 %v1_17661, i32* @eax, align 8
  %v1_17667 = call i32 @function_34c2c(i32 %v1_17661)
  %v1_1766c = inttoptr i32 %v1_17667 to i8*
  %v2_1766c = load i8, i8* %v1_1766c, align 1
  %v3_1766c = zext i8 %v2_1766c to i32
  ret i32 %v3_1766c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17682:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 6, i32* %arg1, align 4
  %v1_176a5 = add i32 %tmp100, 4
  store i32 %v1_176a5, i32* @eax, align 8
  %v1_176ab = call i32 @function_34cf6(i32 %v1_176a5)
  %v1_176b3 = add i32 %tmp100, 16
  %v2_176b3 = inttoptr i32 %v1_176b3 to i8*
  store i8 0, i8* %v2_176b3, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_176c3

bb:                                               ; preds = %dec_label_pc_17682
  %v1_176c1 = call i32 @function_176c8()
  br label %dec_label_pc_176c3

dec_label_pc_176c3:                               ; preds = %bb, %dec_label_pc_17682
  %v2_176c1 = phi i32 [ %v1_176c1, %bb ], [ 0, %dec_label_pc_17682 ]
  ret i32 %v2_176c1

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_176c8() local_unnamed_addr {
dec_label_pc_176c8:
  %v0_176c9 = load i32, i32* @eax, align 8
  ret i32 %v0_176c9
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_176ca:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_176e7 = call i32 @function_34e24(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_176f8

bb:                                               ; preds = %dec_label_pc_176ca
  %v1_176f6 = call i32 @function_176fd()
  br label %dec_label_pc_176f8

dec_label_pc_176f8:                               ; preds = %bb, %dec_label_pc_176ca
  %v2_176f6 = phi i32 [ %v1_176f6, %bb ], [ 0, %dec_label_pc_176ca ]
  ret i32 %v2_176f6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_176fd() local_unnamed_addr {
dec_label_pc_176fd:
  %v0_176fe = load i32, i32* @eax, align 8
  ret i32 %v0_176fe
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17700:
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* @eax, align 8
  %v1_1771e = call i32 @function_34f1a(i32 %tmp6)
  store i32 %v1_1771e, i32* @eax, align 8
  %v1_17726 = add i32 %tmp6, 4
  %v2_17726 = inttoptr i32 %v1_17726 to i32*
  %v3_17726 = load i32, i32* %v2_17726, align 4
  %v2_1772c = load i32, i32* %arg1, align 4
  store i32 %v2_1772c, i32* @edx, align 4
  %v3_17739 = call i32 @function_34f47(i32 %v2_1772c, i32 %v3_17726, i32 %v1_1771e)
  store i32 %tmp6, i32* @eax, align 8
  %v1_17744 = call i32 @function_34e90(i32 %tmp6)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp6, { 4, 3, 2, 1, 0 }
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEEC1ERKSsRKNS_10Value_implIS2_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1777a:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  store i1 false, i1* @cf, align 1
  %v1_177b3 = add i32 %arg1, 4
  %v2_177c0 = call i32 @function_2eaea(i32 %v1_177b3, i32 %tmp3)
  %v0_177c5 = call i32 @function_177de()
  ret i32 %v0_177c5
}

define i32 @function_177c8() local_unnamed_addr {
dec_label_pc_177c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_177c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_177c8
}

define i32 @function_177de() local_unnamed_addr {
dec_label_pc_177de:
  %v0_177de = load i32, i32* @ebp, align 4
  %v1_177de = add i32 %v0_177de, -12
  %v2_177de = inttoptr i32 %v1_177de to i32*
  %v3_177de = load i32, i32* %v2_177de, align 4
  %v1_177e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_177e1 = xor i32 %v1_177e1, %v3_177de
  ret i32 %v2_177e1
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_177f6:
  %stack_var_-20 = alloca i32, align 4
  %v1_17816 = add i32 %arg1, 4
  %v2_17816 = inttoptr i32 %v1_17816 to i32*
  %v3_17816 = load i32, i32* %v2_17816, align 4
  %v1_1781c = add i32 %arg1, 8
  %v2_1781c = inttoptr i32 %v1_1781c to i32*
  %v3_1781c = load i32, i32* %v2_1781c, align 4
  %v12_1781f = icmp eq i32 %v3_17816, %v3_1781c
  br i1 %v12_1781f, label %dec_label_pc_17850, label %dec_label_pc_17823

dec_label_pc_17823:                               ; preds = %dec_label_pc_177f6
  %v3_17826 = load i32, i32* %v2_17816, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg2, i32* @ecx, align 8
  %v3_1783a = call i32 @function_350fe(i32 %arg1, i32 %v3_17826, i32 %arg2)
  %v3_17842 = load i32, i32* %v2_17816, align 4
  %v1_17845 = add i32 %v3_17842, 24
  store i32 %v1_17845, i32* %v2_17816, align 4
  br label %dec_label_pc_1787e

dec_label_pc_17850:                               ; preds = %dec_label_pc_177f6
  %v2_17850 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17850, i32* @eax, align 8
  store i32 %arg1, i32* @edx, align 4
  %v2_1785d = call i32 @function_354f4(i32 %v2_17850, i32 %arg1)
  %v3_1786c = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_17879 = call i32 @function_35180(i32 %arg1, i32 %v3_1786c, i32 %arg2)
  br label %dec_label_pc_1787e

dec_label_pc_1787e:                               ; preds = %dec_label_pc_17850, %dec_label_pc_17823
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 5, 4, 1, 0, 7, 6 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ey(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17892:
  %stack_var_-28 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 4, i32* %arg1, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %v1_178cd = add i32 %tmp107, 4
  %v2_178d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_178d0, i32* @eax, align 8
  %v2_178da = call i32 @function_3493e(i32 %v1_178cd, i32 %v2_178d0)
  %v1_178e2 = add i32 %tmp107, 16
  %v2_178e2 = inttoptr i32 %v1_178e2 to i8*
  store i8 1, i8* %v2_178e2, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_178f2

bb:                                               ; preds = %dec_label_pc_17892
  %v1_178f0 = call i32 @function_178f7()
  br label %dec_label_pc_178f2

dec_label_pc_178f2:                               ; preds = %bb, %dec_label_pc_17892
  %v2_178f0 = phi i32 [ %v1_178f0, %bb ], [ 0, %dec_label_pc_17892 ]
  ret i32 %v2_178f0

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 0 }
}

define i32 @function_178f7() local_unnamed_addr {
dec_label_pc_178f7:
  %v0_178f8 = load i32, i32* @eax, align 8
  ret i32 %v0_178f8
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSs(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_178fa:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 2, i32* %arg1, align 4
  %v1_17923 = add i32 %tmp103, 4
  store i32 %arg2, i32* @eax, align 8
  %v2_17930 = call i32 @function_35642(i32 %v1_17923, i32 %arg2)
  %v1_17938 = add i32 %tmp103, 16
  %v2_17938 = inttoptr i32 %v1_17938 to i8*
  store i8 0, i8* %v2_17938, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17948

bb:                                               ; preds = %dec_label_pc_178fa
  %v1_17946 = call i32 @function_1794d()
  br label %dec_label_pc_17948

dec_label_pc_17948:                               ; preds = %bb, %dec_label_pc_178fa
  %v2_17946 = phi i32 [ %v1_17946, %bb ], [ 0, %dec_label_pc_178fa ]
  ret i32 %v2_17946

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1794d() local_unnamed_addr {
dec_label_pc_1794d:
  %v0_1794e = load i32, i32* @eax, align 8
  ret i32 %v0_1794e
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1Ed(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17950:
  %stack_var_-44 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-44, align 4
  store i32 5, i32* %arg1, align 4
  %v1_1797f = add i32 %tmp105, 4
  %v2_17982 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17982, i32* @eax, align 8
  %v2_1798c = call i32 @function_35716(i32 %v1_1797f, i32 %v2_17982)
  %v1_17994 = add i32 %tmp105, 16
  %v2_17994 = inttoptr i32 %v1_17994 to i8*
  store i8 0, i8* %v2_17994, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorINS_9Pair_implIS2_EESaIS6_EE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_179ac:
  %tmp7 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_179d5 = add i32 %tmp7, 4
  store i32 %arg2, i32* @eax, align 8
  %v2_179e2 = call i32 @function_357f0(i32 %v1_179d5, i32 %arg2)
  %v1_179ea = add i32 %tmp7, 16
  %v2_179ea = inttoptr i32 %v1_179ea to i8*
  store i8 0, i8* %v2_179ea, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNKSt6vectorIP5CNodeSaIS1_EE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a02:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_17a19 = ptrtoint i32* %stack_var_-24 to i32
  %v2_17a26 = call i32 @function_358c4(i32 %v2_17a19, i32 %arg1)
  %v2_17a2e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17a2e, i32* @eax, align 8
  %v2_17a3b = call i32 @function_35914(i32 %v2_17a2e, i32 %arg1)
  store i32 %v2_17a2e, i32* @eax, align 8
  %v2_17a50 = call i32 @function_35963(i32 %v2_17a2e, i32 %v2_17a19)
  ret i32 %v2_17a50

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a68:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 8
  %v1_17a8d = call i32 @function_35a64(i32 %arg2)
  store i32 %v1_17a8d, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_17a9a = call i32 @function_35a1e(i32 %arg2)
  store i32 %v1_17a9a, i32* @eax, align 8
  %v0_17aa2 = load i32, i32* @ebx, align 4
  %v3_17aad = call i32 @function_35a92(i32 %tmp107, i32 %v1_17a9a, i32 %v0_17aa2)
  store i32 %tmp107, i32* @eax, align 8
  %v1_17ab8 = call i32 @function_35282(i32 %tmp107)
  store i32 %v1_17ab8, i32* @ebx, align 4
  %v2_17ac2 = load i32, i32* %arg1, align 4
  store i32 %v2_17ac2, i32* @esi, align 4
  %v2_17ac4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17ac4, i32* @eax, align 8
  %v2_17ad1 = call i32 @function_35b86(i32 %v2_17ac4, i32 %arg2)
  %v2_17ad9 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_17ad9, i32* @eax, align 8
  %v2_17ae6 = call i32 @function_35b36(i32 %v2_17ad9, i32 %arg2)
  %v0_17aeb = load i32, i32* @esp, align 4
  %v5_17aeb = icmp ult i32 %v0_17aeb, 4
  store i1 %v5_17aeb, i1* @cf, align 1
  %v0_17aee = load i32, i32* @ebx, align 4
  %v0_17af2 = load i32, i32* @esi, align 4
  %v3_17af6 = load i32, i32* %stack_var_-20, align 4
  %v3_17afd = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_17afd, i32* @eax, align 8
  %v4_17b03 = call i32 @function_35bd6(i32 %v3_17afd, i32 %v3_17af6, i32 %v0_17af2, i32 %v0_17aee)
  %v2_17b0d = add i32 %tmp107, 4
  %v3_17b0d = inttoptr i32 %v2_17b0d to i32*
  store i32 %v4_17b03, i32* %v3_17b0d, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17b1c

bb:                                               ; preds = %dec_label_pc_17a68
  %v1_17b1a = call i32 @function_17b3a()
  store i32 %v1_17b1a, i32* @eax, align 8
  br label %dec_label_pc_17b1c

dec_label_pc_17b1c:                               ; preds = %bb, %dec_label_pc_17a68
  %v0_17b1c = call i32 @function_17b35()
  ret i32 %v0_17b1c

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_17b1f() local_unnamed_addr {
dec_label_pc_17b1f:
  %eax.global-to-local = alloca i32, align 4
  %v0_17b1f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17b1f
}

define i32 @function_17b35() local_unnamed_addr {
dec_label_pc_17b35:
  %v0_17b35 = load i32, i32* @eax, align 8
  ret i32 %v0_17b35
}

define i32 @function_17b3a() local_unnamed_addr {
dec_label_pc_17b3a:
  %v0_17b40 = load i32, i32* @eax, align 8
  ret i32 %v0_17b40
}

define i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b42:
  store i32 %arg1, i32* @eax, align 8
  %v1_17b5f = call i32 @function_35d06(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17b70

bb:                                               ; preds = %dec_label_pc_17b42
  %v1_17b6e = call i32 @function_17b75()
  br label %dec_label_pc_17b70

dec_label_pc_17b70:                               ; preds = %bb, %dec_label_pc_17b42
  %v2_17b6e = phi i32 [ %v1_17b6e, %bb ], [ 0, %dec_label_pc_17b42 ]
  ret i32 %v2_17b6e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17b75() local_unnamed_addr {
dec_label_pc_17b75:
  %v0_17b76 = load i32, i32* @eax, align 8
  ret i32 %v0_17b76
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE13_Rb_tree_implISB_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b78:
  store i32 %arg1, i32* @eax, align 8
  %v1_17b95 = call i32 @function_35d72(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17ba6

bb:                                               ; preds = %dec_label_pc_17b78
  %v1_17ba4 = call i32 @function_17bab()
  br label %dec_label_pc_17ba6

dec_label_pc_17ba6:                               ; preds = %bb, %dec_label_pc_17b78
  %v2_17ba4 = phi i32 [ %v1_17ba4, %bb ], [ 0, %dec_label_pc_17b78 ]
  ret i32 %v2_17ba4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17bab() local_unnamed_addr {
dec_label_pc_17bab:
  %v0_17bac = load i32, i32* @eax, align 8
  ret i32 %v0_17bac
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17bae:
  store i32 %arg1, i32* @eax, align 8
  %v1_17bcc = call i32 @function_35e5c(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_17bdb = call i32 @function_35dde(i32 %arg1, i32 %v1_17bcc)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17c10

bb:                                               ; preds = %dec_label_pc_17bae
  %v2_17bf5 = call i32 @function_17c15(i32 %arg1)
  br label %dec_label_pc_17c10

dec_label_pc_17c10:                               ; preds = %dec_label_pc_17bae, %bb
  %v0_17bf7 = phi i32 [ 0, %dec_label_pc_17bae ], [ %v2_17bf5, %bb ]
  ret i32 %v0_17bf7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_17c10, { 1, 0 }
}

define i32 @function_17bf9() local_unnamed_addr {
dec_label_pc_17bf9:
  %eax.global-to-local = alloca i32, align 4
  %v0_17bf9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17bf9
}

define i32 @function_17c15(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c15:
  %v0_17c1a = load i32, i32* @eax, align 8
  ret i32 %v0_17c1a
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c1c:
  store i32 %arg1, i32* @eax, align 8
  %v1_17c39 = call i32 @function_35f30(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17c52:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_17c70 = call i32 @function_36020(i32 %tmp102)
  store i32 %v1_17c70, i32* @eax, align 8
  %v1_17c78 = add i32 %tmp102, 4
  %v2_17c78 = inttoptr i32 %v1_17c78 to i32*
  %v3_17c78 = load i32, i32* %v2_17c78, align 4
  %v2_17c7e = load i32, i32* %arg1, align 4
  %v3_17c8b = call i32 @function_3604d(i32 %v2_17c7e, i32 %v3_17c78, i32 %v1_17c70)
  store i32 %tmp102, i32* @eax, align 8
  %v1_17c96 = call i32 @function_35f9c(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17cc0

bb:                                               ; preds = %dec_label_pc_17c52
  %v1_17ca5 = call i32 @function_17cc5()
  br label %dec_label_pc_17cc0

dec_label_pc_17cc0:                               ; preds = %dec_label_pc_17c52, %bb
  %v0_17ca7 = phi i32 [ 0, %dec_label_pc_17c52 ], [ %v1_17ca5, %bb ]
  ret i32 %v0_17ca7

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17cc0, { 1, 0 }
}

define i32 @function_17ca9() local_unnamed_addr {
dec_label_pc_17ca9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17ca9 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_17ca9, i32* %ebx.global-to-local, align 4
  %v0_17cab = load i32, i32* @ebp, align 4
  %v1_17cab = add i32 %v0_17cab, -28
  %v2_17cab = inttoptr i32 %v1_17cab to i32*
  %v3_17cab = load i32, i32* %v2_17cab, align 4
  store i32 %v3_17cab, i32* @eax, align 8
  %v1_17cb1 = call i32 @function_35f9c(i32 %v3_17cab)
  %v0_17cb6 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_17cb6, i32* %eax.global-to-local, align 8
  ret i32 %v0_17cb6

; uselistorder directives
  uselistorder i32 (i32)* @function_35f9c, { 1, 0 }
}

define i32 @function_17cc5() local_unnamed_addr {
dec_label_pc_17cc5:
  %v0_17cca = load i32, i32* @eax, align 8
  ret i32 %v0_17cca
}

define i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ccc:
  %v1_17ce9 = inttoptr i32 %arg1 to i32*
  %v2_17ce9 = call i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitIKxEEPSC_RT_i(i32* %v1_17ce9)
  ret i32 0
}

define i32 @_ZN5boost15foreach_detail_7containISt6vectorIP14CBlockTemplateSaIS4_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17d01:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_17d2a = call i32 @function_361dd(i32 %arg2)
  store i32 %v1_17d2a, i32* %stack_var_-20, align 4
  %v2_17d32 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_17d3f = call i32 @function_36235(i32 %arg1, i32 %v2_17d32)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17d53

bb:                                               ; preds = %dec_label_pc_17d01
  %v1_17d51 = call i32 @function_17d58()
  br label %dec_label_pc_17d53

dec_label_pc_17d53:                               ; preds = %bb, %dec_label_pc_17d01
  %v2_17d51 = phi i32 [ %v1_17d51, %bb ], [ %arg1, %dec_label_pc_17d01 ]
  ret i32 %v2_17d51

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_17d58() local_unnamed_addr {
dec_label_pc_17d58:
  %v0_17d59 = load i32, i32* @eax, align 8
  ret i32 %v0_17d59
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17d5c:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_17d8b = call i32 @function_362d5(i32 %arg2)
  %v1_17d90 = inttoptr i32 %v1_17d8b to i32*
  %v2_17d90 = load i32, i32* %v1_17d90, align 4
  store i32 %v2_17d90, i32* @eax, align 8
  %v1_17d95 = call i32 @function_36302(i32 %v2_17d90)
  store i32 %v1_17d95, i32* @eax, align 8
  %v2_17d9a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17d9a, i32* @edx, align 4
  %v2_17da4 = call i32 @function_3632f(i32 %v2_17d9a, i32 %v1_17d95)
  store i32 %arg1, i32* @eax, align 8
  %v2_17db9 = call i32 @function_3637a(i32 %arg1, i32 %v2_17d9a)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17dd6:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_17e05 = call i32 @function_3634f(i32 %arg2)
  %v1_17e0a = inttoptr i32 %v1_17e05 to i32*
  %v2_17e0a = load i32, i32* %v1_17e0a, align 4
  %v1_17e0f = call i32 @function_3637c(i32 %v2_17e0a)
  store i32 %v1_17e0f, i32* @eax, align 8
  %v2_17e14 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17e14, i32* @edx, align 4
  %v2_17e1e = call i32 @function_36439(i32 %v2_17e14, i32 %v1_17e0f)
  %v2_17e33 = call i32 @function_363f4(i32 %arg1, i32 %v2_17e14)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17e47

bb:                                               ; preds = %dec_label_pc_17dd6
  %v1_17e45 = call i32 @function_17e4c()
  br label %dec_label_pc_17e47

dec_label_pc_17e47:                               ; preds = %bb, %dec_label_pc_17dd6
  %v2_17e45 = phi i32 [ %v1_17e45, %bb ], [ %arg1, %dec_label_pc_17dd6 ]
  ret i32 %v2_17e45

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17e4c() local_unnamed_addr {
dec_label_pc_17e4c:
  %v0_17e4d = load i32, i32* @eax, align 8
  ret i32 %v0_17e4d
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17e50:
  %v1_17e7a = call i32 @function_364fd(i32 %arg2)
  %v1_17e87 = call i32 @function_364fd(i32 %arg1)
  %v0_17e8c = load i32, i32* @ebx, align 4
  %v2_17e93 = call i32 @function_3652a(i32 %v1_17e87, i32 %v0_17e8c)
  store i32 %v2_17e93, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17ea4

bb:                                               ; preds = %dec_label_pc_17e50
  %v1_17ea2 = call i32 @function_17ea9()
  br label %dec_label_pc_17ea4

dec_label_pc_17ea4:                               ; preds = %bb, %dec_label_pc_17e50
  %v2_17ea2 = phi i32 [ %v1_17ea2, %bb ], [ %v2_17e93, %dec_label_pc_17e50 ]
  ret i32 %v2_17ea2

; uselistorder directives
  uselistorder i32 (i32)* @function_364fd, { 1, 0 }
}

define i32 @function_17ea9() local_unnamed_addr {
dec_label_pc_17ea9:
  %v0_17eae = load i32, i32* @eax, align 8
  ret i32 %v0_17eae
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17eaf:
  store i32 %arg1, i32* @eax, align 8
  %v1_17eda = call i32 @function_365dd(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17ef2:
  store i32 %arg1, i32* @eax, align 8
  %v1_17f15 = call i32 @function_3659f(i32 %arg1)
  store i32 %v1_17f15, i32* @eax, align 8
  %v1_17f1d = call i32 @function_3665a(i32 %v1_17f15)
  ret i32 %v1_17f1d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIxSaIxEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17f36:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_17f54 = call i32 @function_36788(i32 %tmp102)
  store i32 %v1_17f54, i32* @eax, align 8
  %v1_17f5c = add i32 %tmp102, 4
  %v2_17f5c = inttoptr i32 %v1_17f5c to i32*
  %v3_17f5c = load i32, i32* %v2_17f5c, align 4
  %v2_17f62 = load i32, i32* %arg1, align 4
  %v3_17f6f = call i32 @function_367b5(i32 %v2_17f62, i32 %v3_17f5c, i32 %v1_17f54)
  store i32 %tmp102, i32* @eax, align 8
  %v1_17f7a = call i32 @function_36704(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17fa4

bb:                                               ; preds = %dec_label_pc_17f36
  %v1_17f89 = call i32 @function_17fa9()
  br label %dec_label_pc_17fa4

dec_label_pc_17fa4:                               ; preds = %dec_label_pc_17f36, %bb
  %v0_17f8b = phi i32 [ 0, %dec_label_pc_17f36 ], [ %v1_17f89, %bb ]
  ret i32 %v0_17f8b

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17fa4, { 1, 0 }
}

define i32 @function_17f8d() local_unnamed_addr {
dec_label_pc_17f8d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17f8d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_17f8d, i32* %ebx.global-to-local, align 4
  %v0_17f8f = load i32, i32* %ebp.global-to-local, align 4
  %v1_17f8f = add i32 %v0_17f8f, -28
  %v2_17f8f = inttoptr i32 %v1_17f8f to i32*
  %v3_17f8f = load i32, i32* %v2_17f8f, align 4
  store i32 %v3_17f8f, i32* @eax, align 8
  %v1_17f95 = call i32 @function_36704(i32 %v3_17f8f)
  %v0_17f9a = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_17f9a, i32* %eax.global-to-local, align 8
  ret i32 %v0_17f9a

; uselistorder directives
  uselistorder i32 (i32)* @function_36704, { 1, 0 }
}

define i32 @function_17fa9() local_unnamed_addr {
dec_label_pc_17fa9:
  %v0_17fae = load i32, i32* @eax, align 8
  ret i32 %v0_17fae
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17fb0:
  %tmp5 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  %v2_17fca = load i32, i32* %arg1, align 4
  store i32 %tmp5, i32* @eax, align 8
  %v2_17fd6 = call i32 @function_36878(i32 %tmp5, i32 %v2_17fca)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_17fe7

bb:                                               ; preds = %dec_label_pc_17fb0
  %v1_17fe5 = call i32 @function_17fec()
  br label %dec_label_pc_17fe7

dec_label_pc_17fe7:                               ; preds = %bb, %dec_label_pc_17fb0
  %v2_17fe5 = phi i32 [ %v1_17fe5, %bb ], [ 0, %dec_label_pc_17fb0 ]
  ret i32 %v2_17fe5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_17fec() local_unnamed_addr {
dec_label_pc_17fec:
  %v0_17fed = load i32, i32* @eax, align 8
  ret i32 %v0_17fed
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EE9push_backERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17fee:
  %stack_var_-20 = alloca i32, align 4
  %v1_1800e = add i32 %arg1, 4
  %v2_1800e = inttoptr i32 %v1_1800e to i32*
  %v3_1800e = load i32, i32* %v2_1800e, align 4
  %v1_18014 = add i32 %arg1, 8
  %v2_18014 = inttoptr i32 %v1_18014 to i32*
  %v3_18014 = load i32, i32* %v2_18014, align 4
  %v12_18017 = icmp eq i32 %v3_1800e, %v3_18014
  br i1 %v12_18017, label %dec_label_pc_18048, label %dec_label_pc_1801b

dec_label_pc_1801b:                               ; preds = %dec_label_pc_17fee
  %v3_1801e = load i32, i32* %v2_1800e, align 4
  %v3_18032 = call i32 @function_36914(i32 %arg1, i32 %v3_1801e, i32 %arg2)
  %v3_1803a = load i32, i32* %v2_1800e, align 4
  %v1_1803d = add i32 %v3_1803a, 4
  store i32 %v1_1803d, i32* %v2_1800e, align 4
  br label %dec_label_pc_18076

dec_label_pc_18048:                               ; preds = %dec_label_pc_17fee
  %v2_18048 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18048, i32* @eax, align 8
  %v2_18055 = call i32 @function_36c28(i32 %v2_18048, i32 %arg1)
  %v3_18064 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_18071 = call i32 @function_36968(i32 %arg1, i32 %v3_18064, i32 %arg2)
  br label %dec_label_pc_18076

dec_label_pc_18076:                               ; preds = %dec_label_pc_18048, %dec_label_pc_1801b
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18082

bb:                                               ; preds = %dec_label_pc_18076
  %v1_18080 = call i32 @function_18087()
  br label %dec_label_pc_18082

dec_label_pc_18082:                               ; preds = %bb, %dec_label_pc_18076
  %v2_18080 = phi i32 [ %v1_18080, %bb ], [ 0, %dec_label_pc_18076 ]
  ret i32 %v2_18080

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 5, 4 }
}

define i32 @function_18087() local_unnamed_addr {
dec_label_pc_18087:
  %v0_18088 = load i32, i32* @eax, align 8
  ret i32 %v0_18088
}

define i32 @_ZNSt4pairIK7uint256S_IP6CBlock7CScriptEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1808a:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_180bb

bb:                                               ; preds = %dec_label_pc_1808a
  %v1_180a4 = add i32 %arg1, 32
  %v2_180b9 = call i32 @function_180c0(i32 %v1_180a4)
  br label %dec_label_pc_180bb

dec_label_pc_180bb:                               ; preds = %bb, %dec_label_pc_1808a
  %v3_180b9 = phi i32 [ %v2_180b9, %bb ], [ 0, %dec_label_pc_1808a ]
  ret i32 %v3_180b9
}

define i32 @function_180c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_180c0:
  %v0_180c1 = load i32, i32* @eax, align 8
  ret i32 %v0_180c1
}

define i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEEixERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_180c2:
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-65 = alloca i32, align 4
  %stack_var_-101 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v2_180e0 = ptrtoint i32* %stack_var_-76 to i32
  %v3_180f4 = call i32 @function_36d46(i32 %v2_180e0, i32 %arg1, i32 %arg2)
  %v0_180f9 = load i32, i32* @esp, align 4
  %v5_180f9 = icmp ult i32 %v0_180f9, 4
  store i1 %v5_180f9, i1* @cf, align 1
  %v2_180fc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_180fc, i32* @eax, align 8
  store i32 %arg1, i32* @edx, align 4
  %v2_18109 = call i32 @function_36e1a(i32 %v2_180fc, i32 %arg1)
  %v2_1811e = call i32 @function_36e64(i32 %v2_180e0, i32 %v2_180fc)
  %v4_18123 = trunc i32 %v2_1811e to i8
  %v5_18123 = icmp eq i8 %v4_18123, 0
  %v1_18125 = icmp eq i1 %v5_18123, false
  br i1 %v1_18125, label %dec_label_pc_1816f, label %dec_label_pc_18127

dec_label_pc_18127:                               ; preds = %dec_label_pc_180c2
  store i32 %v2_180e0, i32* @eax, align 8
  %v1_1812d = call i32 @function_36de8(i32 %v2_180e0)
  store i32 %v1_1812d, i32* @ebx, align 4
  %v2_18134 = ptrtoint i32* %stack_var_-101 to i32
  store i32 %v2_18134, i32* @eax, align 8
  store i32 %arg1, i32* @edx, align 4
  %v2_18141 = call i32 @function_36d9e(i32 %v2_18134, i32 %arg1)
  %v0_18146 = load i32, i32* @esp, align 4
  %v5_18146 = icmp ult i32 %v0_18146, 4
  store i1 %v5_18146, i1* @cf, align 1
  %v0_18149 = load i32, i32* @ebx, align 4
  %v2_18154 = ptrtoint i32* %stack_var_-65 to i32
  store i32 %v2_18154, i32* @eax, align 8
  %v3_1815a = call i32 @function_3508c(i32 %v2_18154, i32 %arg2, i32 %v0_18149)
  %v4_1815f = trunc i32 %v3_1815a to i8
  %v5_1815f = icmp ne i8 %v4_1815f, 0
  %phitmp29 = icmp eq i1 %v5_1815f, false
  br label %dec_label_pc_1816f

dec_label_pc_1816f:                               ; preds = %dec_label_pc_18127, %dec_label_pc_180c2
  %storemerge = phi i1 [ false, %dec_label_pc_180c2 ], [ %phitmp29, %dec_label_pc_18127 ]
  br i1 %storemerge, label %dec_label_pc_181d6, label %dec_label_pc_18173

dec_label_pc_18173:                               ; preds = %dec_label_pc_1816f
  %v2_18173 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_18173, i32* @eax, align 8
  %v1_18176 = load i32, i32* @esp, align 4
  %v2_18176 = inttoptr i32 %v1_18176 to i32*
  store i32 %v2_18173, i32* %v2_18176, align 4
  %v0_18179 = call i32 @function_36ea4()
  %v1_18181 = load i32, i32* @esp, align 4
  %v2_18181 = add i32 %v1_18181, 8
  %v3_18181 = inttoptr i32 %v2_18181 to i32*
  store i32 %v2_18173, i32* %v3_18181, align 4
  %v1_18188 = load i32, i32* @esp, align 4
  %v2_18188 = add i32 %v1_18188, 4
  %v3_18188 = inttoptr i32 %v2_18188 to i32*
  store i32 %arg2, i32* %v3_18188, align 4
  %v2_1818c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_1818c, i32* @eax, align 8
  %v1_1818f = load i32, i32* @esp, align 4
  %v2_1818f = inttoptr i32 %v1_1818f to i32*
  store i32 %v2_1818c, i32* %v2_1818f, align 4
  %v0_18192 = call i32 @function_36ee6()
  %v2_18197 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_18197, i32* @eax, align 8
  %v1_1819d = load i32, i32* @esp, align 4
  %v2_1819d = add i32 %v1_1819d, 12
  %v3_1819d = inttoptr i32 %v2_1819d to i32*
  store i32 %v2_1818c, i32* %v3_1819d, align 4
  %v3_181a1 = load i32, i32* %stack_var_-76, align 4
  %v1_181a4 = load i32, i32* @esp, align 4
  %v2_181a4 = add i32 %v1_181a4, 8
  %v3_181a4 = inttoptr i32 %v2_181a4 to i32*
  store i32 %v3_181a1, i32* %v3_181a4, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_181ab = load i32, i32* @esp, align 4
  %v2_181ab = add i32 %v1_181ab, 4
  %v3_181ab = inttoptr i32 %v2_181ab to i32*
  store i32 %arg1, i32* %v3_181ab, align 4
  %v1_181af = load i32, i32* @esp, align 4
  %v2_181af = inttoptr i32 %v1_181af to i32*
  store i32 %v2_18197, i32* %v2_181af, align 4
  %v0_181b2 = call i32 @function_36f66()
  %v0_181b7 = load i32, i32* @esp, align 4
  %v1_181b7 = add i32 %v0_181b7, -4
  %v3_181ba = load i32, i32* %stack_var_-108, align 4
  store i32 %v3_181ba, i32* %stack_var_-76, align 4
  store i32 %v2_1818c, i32* @eax, align 8
  %v2_181c3 = inttoptr i32 %v1_181b7 to i32*
  store i32 %v2_1818c, i32* %v2_181c3, align 4
  %v0_181c6 = load i32, i32* %stack_var_-76, align 4
  %v1_181c6 = call i32 @function_3014c(i32 %v0_181c6)
  store i32 %v2_18173, i32* @eax, align 8
  %v1_181ce = load i32, i32* @esp, align 4
  %v2_181ce = inttoptr i32 %v1_181ce to i32*
  store i32 %v2_18173, i32* %v2_181ce, align 4
  %v0_181d1 = load i32, i32* %stack_var_-76, align 4
  %v1_181d1 = call i32 @function_2bd72(i32 %v0_181d1)
  br label %dec_label_pc_181d6

dec_label_pc_181d6:                               ; preds = %dec_label_pc_18173, %dec_label_pc_1816f
  store i32 %v2_180e0, i32* @eax, align 8
  %v1_181d9 = load i32, i32* @esp, align 4
  %v2_181d9 = inttoptr i32 %v1_181d9 to i32*
  store i32 %v2_180e0, i32* %v2_181d9, align 4
  %v0_181dc = load i32, i32* %stack_var_-76, align 4
  %v1_181dc = call i32 @function_36de8(i32 %v0_181dc)
  %v1_181e1 = add i32 %v1_181dc, 32
  store i32 %v1_181e1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18218

bb:                                               ; preds = %dec_label_pc_181d6
  %v1_181ee = call i32 @function_1821d()
  br label %dec_label_pc_18218

dec_label_pc_18218:                               ; preds = %dec_label_pc_181d6, %bb
  %v0_181f0 = phi i32 [ %v1_181e1, %dec_label_pc_181d6 ], [ %v1_181ee, %bb ]
  ret i32 %v0_181f0

; uselistorder directives
  uselistorder i32 %v2_180e0, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32* %stack_var_-76, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @function_36de8, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 0, 5, 4, 6 }
  uselistorder label %dec_label_pc_18218, { 1, 0 }
}

define i32 @function_181f2() local_unnamed_addr {
dec_label_pc_181f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_181f2 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_181f2, i32* @ebx, align 4
  %v0_181f4 = load i32, i32* @ebp, align 4
  %v1_181f4 = add i32 %v0_181f4, -60
  store i32 %v1_181f4, i32* @eax, align 8
  %v1_181fa = call i32 @function_3014c(i32 %v1_181f4)
  store i32 %v1_181fa, i32* %eax.global-to-local, align 8
  %v0_181ff = call i32 @function_18203()
  store i32 %v0_181ff, i32* %eax.global-to-local, align 8
  ret i32 %v0_181ff

; uselistorder directives
  uselistorder i32 (i32)* @function_3014c, { 1, 0 }
}

define i32 @function_18201() local_unnamed_addr {
dec_label_pc_18201:
  %eax.global-to-local = alloca i32, align 4
  %v0_18201 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18201
}

define i32 @function_18203() local_unnamed_addr {
dec_label_pc_18203:
  %v0_18203 = load i32, i32* @ebp, align 4
  %v1_18203 = add i32 %v0_18203, -88
  store i32 %v1_18203, i32* @eax, align 8
  %v1_18209 = call i32 @function_2bd72(i32 %v1_18203)
  %v0_1820e = load i32, i32* @ebx, align 4
  ret i32 %v0_1820e

; uselistorder directives
  uselistorder i32 (i32)* @function_2bd72, { 1, 0 }
}

define i32 @function_1821d() local_unnamed_addr {
dec_label_pc_1821d:
  %v0_18221 = load i32, i32* @eax, align 8
  ret i32 %v0_18221
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18222:
  %v2_18242 = load i32, i32* %arg1, align 4
  %v2_18247 = mul i32 %arg2, 32
  %v2_1824a = add i32 %v2_18242, %v2_18247
  store i32 %v2_1824a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18258

bb:                                               ; preds = %dec_label_pc_18222
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_18256 = call i32 @function_1825d(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_18258

dec_label_pc_18258:                               ; preds = %bb, %dec_label_pc_18222
  %v4_18256 = phi i32 [ %v3_18256, %bb ], [ %v2_1824a, %dec_label_pc_18222 ]
  ret i32 %v4_18256

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1825d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1825d:
  %v0_1825e = load i32, i32* @eax, align 8
  ret i32 %v0_1825e
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18260:
  %v2_18280 = load i32, i32* %arg1, align 4
  %v3_18285 = mul i32 %arg2, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_18288 = add i32 %v2_18280, %v3_18285
  ret i32 %v2_18288
}

define i32 @_ZNSt4pairIP6CBlock7CScriptEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1829e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1829e = load i32, i32* %ebp.global-to-local, align 4
  %v1_182be = inttoptr i32 %arg2 to i32*
  %v2_182be = load i32, i32* %v1_182be, align 4
  store i32 %v2_182be, i32* %arg1, align 4
  store i32 %v0_1829e, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZSt9make_pairIP6CBlock7CScriptESt4pairIT_T0_ES4_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_182f0:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i1 false, i1* @cf, align 1
  %v2_1831a = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* @eax, align 8
  %v3_18327 = call i32 @function_3720a(i32 %arg1, i32 %v2_1831a, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1833b

bb:                                               ; preds = %dec_label_pc_182f0
  %v1_18339 = call i32 @function_18340()
  br label %dec_label_pc_1833b

dec_label_pc_1833b:                               ; preds = %bb, %dec_label_pc_182f0
  %v2_18339 = phi i32 [ %v1_18339, %bb ], [ %arg1, %dec_label_pc_182f0 ]
  ret i32 %v2_18339

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_18340() local_unnamed_addr {
dec_label_pc_18340:
  %v0_18341 = load i32, i32* @eax, align 8
  ret i32 %v0_18341
}

define i32 @_Z6HexStrIPcESsT_S1_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_18344:
  ret i32 %arg1
}

define i32 @function_18378() local_unnamed_addr {
dec_label_pc_18378:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_18378 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18378 = add i32 %v0_18378, 1166793813
  %v2_18378 = inttoptr i32 %v1_18378 to i32*
  %v3_18378 = load i32, i32* %v2_18378, align 4
  %v4_18378 = add i32 %v3_18378, -1
  %v12_18378 = icmp eq i32 %v4_18378, 0
  store i32 %v4_18378, i32* %v2_18378, align 4
  %v0_1837e = load i32, i32* %ecx.global-to-local, align 8
  %v1_1837e = add i32 %v0_1837e, -1
  store i32 %v1_1837e, i32* %ecx.global-to-local, align 8
  %v2_1837e = icmp eq i32 %v1_1837e, 0
  %v4_1837e = or i1 %v12_18378, %v2_1837e
  br i1 %v4_1837e, label %dec_label_pc_18380, label %dec_label_pc_183ad

dec_label_pc_18380:                               ; preds = %dec_label_pc_18378
  %v0_18380 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18380

dec_label_pc_183ad:                               ; preds = %dec_label_pc_18378
  %v3_183a9 = load float, float* bitcast (i32* @eax to float*), align 8
  %v4_183a9 = fpext float %v3_183a9 to x86_fp80
  %v5_183a9 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_183a9 = fadd x86_fp80 %v4_183a9, %v5_183a9
  store x86_fp80 %v6_183a9, x86_fp80* %st0.global-to-local, align 4
  %v0_183ad = load i32, i32* %ebp.global-to-local, align 4
  %v1_183ad = add i32 %v0_183ad, -20
  %v2_183ad = inttoptr i32 %v1_183ad to i32*
  %v3_183ad = load i32, i32* %v2_183ad, align 4
  store i32 %v3_183ad, i32* %eax.global-to-local, align 8
  %v2_183b0 = add i32 %v0_183ad, -32
  %v3_183b0 = inttoptr i32 %v2_183b0 to i32*
  %v4_183b0 = load i32, i32* %v3_183b0, align 4
  %v15_183b0 = icmp eq i32 %v3_183ad, %v4_183b0
  %.pre = add i32 %v0_183ad, -28
  %.pre102 = inttoptr i32 %.pre to i32*
  br i1 %v15_183b0, label %dec_label_pc_183c8, label %dec_label_pc_183b5

dec_label_pc_183b5:                               ; preds = %dec_label_pc_183ad
  %v3_183bd = load i32, i32* %.pre102, align 4
  store i32 %v3_183bd, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_183c8

dec_label_pc_183c8:                               ; preds = %dec_label_pc_183ad, %dec_label_pc_183b5
  %v1_183c8 = add i32 %v0_183ad, -13
  %v2_183c8 = inttoptr i32 %v1_183c8 to i8*
  %v3_183c8 = load i8, i8* %v2_183c8, align 1
  %div = udiv i8 %v3_183c8, 16
  %v2_183cc1 = zext i8 %div to i32
  store i32 %v2_183cc1, i32* %eax.global-to-local, align 8
  %v1_183cf = or i32 %v2_183cc1, ptrtoint ([17 x i8]* @global_var_40b90.2857 to i32)
  %v2_183cf = inttoptr i32 %v1_183cf to i8*
  %v3_183cf = load i8, i8* %v2_183cf, align 1
  %v4_183cf = zext i8 %v3_183cf to i32
  store i32 %v4_183cf, i32* %eax.global-to-local, align 8
  %v3_183dd = load i32, i32* %.pre102, align 4
  store i32 %v3_183dd, i32* %eax.global-to-local, align 8
  ret i32 %v3_183dd

; uselistorder directives
  uselistorder i32 %v0_183ad, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1837e, { 1, 0 }
  uselistorder i32 %v4_18378, { 1, 0 }
  uselistorder label %dec_label_pc_183c8, { 1, 0 }
}

define i32 @function_1840c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1840c:
  %v0_18419 = call i32 @function_18432()
  ret i32 %v0_18419
}

define i32 @function_1841b() local_unnamed_addr {
dec_label_pc_1841b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1841b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1841b
}

define i32 @function_18432() local_unnamed_addr {
dec_label_pc_18432:
  %v0_18432 = load i32, i32* @ebp, align 4
  %v1_18432 = add i32 %v0_18432, -28
  %v2_18432 = inttoptr i32 %v1_18432 to i32*
  %v3_18432 = load i32, i32* %v2_18432, align 4
  store i32 %v3_18432, i32* @eax, align 8
  %v1_18435 = add i32 %v0_18432, -12
  %v2_18435 = inttoptr i32 %v1_18435 to i32*
  %v3_18435 = load i32, i32* %v2_18435, align 4
  %v1_18438 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18438 = icmp eq i32 %v1_18438, %v3_18435
  br i1 %v3_18438, label %bb, label %dec_label_pc_18441

bb:                                               ; preds = %dec_label_pc_18432
  %v1_1843f = call i32 @function_18446()
  br label %dec_label_pc_18441

dec_label_pc_18441:                               ; preds = %bb, %dec_label_pc_18432
  %v2_1843f = phi i32 [ %v1_1843f, %bb ], [ %v3_18432, %dec_label_pc_18432 ]
  ret i32 %v2_1843f
}

define i32 @function_18446() local_unnamed_addr {
dec_label_pc_18446:
  %v0_1844b = load i32, i32* @eax, align 8
  ret i32 %v0_1844b
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_strEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1844e:
  %v2_18473 = call i32 @function_35728(i32 %arg1, i32 2)
  %v1_1847b = add i32 %arg1, 4
  %v5_1847b = icmp ugt i32 %arg1, -5
  store i1 %v5_1847b, i1* @cf, align 1
  store i32 %v1_1847b, i32* @eax, align 8
  %v1_18481 = call i32 @function_373bd(i32 %v1_1847b)
  ret i32 %v1_18481

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNKSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEE5countERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1849a:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_184ba = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_184ba, i32* @eax, align 8
  %v2_184c4 = call i32 @function_37452(i32 %v2_184ba, i32 %arg1)
  %v2_184cf = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_184cf, i32* @eax, align 8
  store i32 %arg2, i32* @ecx, align 8
  %v3_184e0 = call i32 @function_3749c(i32 %v2_184cf, i32 %arg1, i32 %arg2)
  store i32 %v2_184cf, i32* @eax, align 8
  %v2_184f5 = call i32 @function_37588(i32 %v2_184cf, i32 %v2_184ba)
  %v4_184fa = trunc i32 %v2_184f5 to i8
  %v5_184fa = icmp eq i8 %v4_184fa, 0
  %. = zext i1 %v5_184fa to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE7get_objEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1851e:
  store i32 %arg1, i32* @eax, align 8
  %v2_18543 = call i32 @function_357f8(i32 %arg1, i32 0)
  %v1_1854b = add i32 %arg1, 4
  %v1_18551 = call i32 @function_3764b(i32 %v1_1854b)
  ret i32 %v1_18551

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN11json_spirit10find_valueISt6vectorINS_9Pair_implINS_13Config_vectorISsEEEESaIS5_EEA5_cEERKNT_10value_type10Value_typeERKS9_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18569:
  %stack_var_-24 = alloca i32, align 4
  %v2_18586 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_18586, i32* @eax, align 8
  %v2_18593 = call i32 @function_36637(i32 %v2_18586, i32 %arg1)
  ret i32 %v2_18593
}

define i32 @function_185b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_185b4:
  %v2_185b5 = load i32, i32* @eax, align 8
  %v4_185b5 = mul i32 %v2_185b5, 2
  %v21_185b5 = inttoptr i32 %v2_185b5 to i32*
  store i32 %v4_185b5, i32* %v21_185b5, align 4
  %v0_185b7 = load i32, i32* @eax, align 8
  %v4_185b7 = trunc i32 %v0_185b7 to i8
  %v5_185b7 = icmp eq i8 %v4_185b7, 0
  %v0_185cb = load i32, i32* @ebp, align 4
  br i1 %v5_185b7, label %dec_label_pc_185cb, label %dec_label_pc_185bb

dec_label_pc_185bb:                               ; preds = %dec_label_pc_185b4
  %v1_185cb = add i32 %v0_185cb, -20
  %v1_185c1 = call i32 @function_3776d(i32 %v1_185cb)
  %v1_185c6 = add i32 %v1_185c1, 4
  br label %dec_label_pc_18606

dec_label_pc_185cb:                               ; preds = %dec_label_pc_185b4
  %v1_185d6 = add i32 %v0_185cb, -16
  store i32 %v1_185d6, i32* @eax, align 8
  %v1_185d9 = add i32 %v0_185cb, -28
  %v2_185d9 = inttoptr i32 %v1_185d9 to i32*
  %v3_185d9 = load i32, i32* %v2_185d9, align 4
  %v2_185e3 = call i32 @function_36687(i32 %v1_185d6, i32 %v3_185d9)
  %v0_185eb = load i32, i32* @ebp, align 4
  %v1_185eb = add i32 %v0_185eb, -16
  %v1_185f2 = add i32 %v0_185eb, -20
  store i32 %v1_185f2, i32* @eax, align 8
  %v2_185f8 = call i32 @function_376df(i32 %v1_185f2, i32 %v1_185eb)
  br label %dec_label_pc_18606

dec_label_pc_18606:                               ; preds = %dec_label_pc_185cb, %dec_label_pc_185bb
  %storemerge = phi i32 [ %v1_185c6, %dec_label_pc_185bb ], [ ptrtoint (i32* @global_var_404ec.2801 to i32), %dec_label_pc_185cb ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_18606 = load i32, i32* @ebp, align 4
  %v1_18606 = add i32 %v0_18606, -12
  %v2_18606 = inttoptr i32 %v1_18606 to i32*
  %v3_18606 = load i32, i32* %v2_18606, align 4
  %v1_18609 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18609 = icmp eq i32 %v1_18609, %v3_18606
  br i1 %v3_18609, label %bb, label %dec_label_pc_18612

bb:                                               ; preds = %dec_label_pc_18606
  %v1_18610 = call i32 @function_18617()
  br label %dec_label_pc_18612

dec_label_pc_18612:                               ; preds = %bb, %dec_label_pc_18606
  %v2_18610 = phi i32 [ %v1_18610, %bb ], [ %storemerge, %dec_label_pc_18606 ]
  ret i32 %v2_18610

; uselistorder directives
  uselistorder i32 %v2_185b5, { 1, 0 }
}

define i32 @function_18617() local_unnamed_addr {
dec_label_pc_18617:
  %v0_18618 = load i32, i32* @eax, align 8
  ret i32 %v0_18618
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE4typeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1861a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1861a = load i32, i32* %ebp.global-to-local, align 4
  %v2_18634 = load i32, i32* %arg1, align 4
  store i32 %v0_1861a, i32* %ebp.global-to-local, align 4
  ret i32 %v2_18634
}

define i32 @_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18649:
  store i32 %arg1, i32* @eax, align 8
  %v2_18673 = call i32 @function_2ddb6(i32 %arg1, i32 %arg2)
  %v1_18678 = xor i32 %v2_18673, 1
  ret i32 %v1_18678

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1868e:
  %v1_186ab = call i32 @function_378f8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_186bc

bb:                                               ; preds = %dec_label_pc_1868e
  %v1_186ba = call i32 @function_186c1()
  br label %dec_label_pc_186bc

dec_label_pc_186bc:                               ; preds = %bb, %dec_label_pc_1868e
  %v2_186ba = phi i32 [ %v1_186ba, %bb ], [ 0, %dec_label_pc_1868e ]
  ret i32 %v2_186ba
}

define i32 @function_186c1() local_unnamed_addr {
dec_label_pc_186c1:
  %v0_186c2 = load i32, i32* @eax, align 8
  ret i32 %v0_186c2
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_186c4:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v1_186e2 = call i32 @function_379ee(i32 %tmp6)
  store i32 %v1_186e2, i32* @eax, align 8
  %v1_186ea = add i32 %tmp6, 4
  %v2_186ea = inttoptr i32 %v1_186ea to i32*
  %v3_186ea = load i32, i32* %v2_186ea, align 4
  %v2_186f0 = load i32, i32* %arg1, align 4
  %v3_186fd = call i32 @function_37a1b(i32 %v2_186f0, i32 %v3_186ea, i32 %v1_186e2)
  store i32 %tmp6, i32* @eax, align 8
  %v1_18708 = call i32 @function_37964(i32 %tmp6)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18732

bb:                                               ; preds = %dec_label_pc_186c4
  %v1_18717 = call i32 @function_18737()
  br label %dec_label_pc_18732

dec_label_pc_18732:                               ; preds = %dec_label_pc_186c4, %bb
  %v0_18719 = phi i32 [ 0, %dec_label_pc_186c4 ], [ %v1_18717, %bb ]
  ret i32 %v0_18719

; uselistorder directives
  uselistorder i32 %tmp6, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_18732, { 1, 0 }
}

define i32 @function_1871b() local_unnamed_addr {
dec_label_pc_1871b:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1871d = add i32 %tmp91, -28
  %v2_1871d = inttoptr i32 %v1_1871d to i32*
  %v3_1871d = load i32, i32* %v2_1871d, align 4
  store i32 %v3_1871d, i32* @eax, align 8
  %v1_18723 = call i32 @function_37964(i32 %v3_1871d)
  %v0_18728 = load i32, i32* @ebx, align 4
  ret i32 %v0_18728
}

define i32 @function_18734(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18734:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18737() local_unnamed_addr {
dec_label_pc_18737:
  %v0_1873c = load i32, i32* @eax, align 8
  ret i32 %v0_1873c
}

define i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1873e:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_1875b = call i32 @function_37ade(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE13_Rb_tree_implIS7_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18774:
  store i32 %arg1, i32* @eax, align 8
  %v1_18791 = call i32 @function_37b4a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_187aa:
  store i32 %arg1, i32* @eax, align 8
  %v1_187c8 = call i32 @function_37c34(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_187d7 = call i32 @function_37bb6(i32 %arg1, i32 %v1_187c8)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_187f3

bb:                                               ; preds = %dec_label_pc_187aa
  %v2_187f1 = call i32 @function_18811(i32 %arg1)
  store i32 %v2_187f1, i32* @eax, align 8
  br label %dec_label_pc_187f3

dec_label_pc_187f3:                               ; preds = %bb, %dec_label_pc_187aa
  %v0_187f3 = call i32 @function_1880c()
  ret i32 %v0_187f3

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_187f6() local_unnamed_addr {
dec_label_pc_187f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_187f6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_187f6
}

define i32 @function_187fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_187fc:
  %v0_187fc = load i32, i32* @eax, align 8
  %v2_187fc = and i32 %v0_187fc, 232
  %v4_187fe = add nuw nsw i32 %v2_187fc, 121
  %v31_187fe = and i32 %v4_187fe, 249
  %v33_187fe = and i32 %v0_187fc, -256
  %v34_187fe = or i32 %v31_187fe, %v33_187fe
  %v1_18800 = inttoptr i32 %v34_187fe to i32*
  %v2_18800 = load i32, i32* %v1_18800, align 4
  %v4_18800 = add i32 %v34_187fe, %v2_18800
  store i32 %v4_18800, i32* %v1_18800, align 4
  %v0_18802 = load i32, i32* @ebx, align 4
  ret i32 %v0_18802

; uselistorder directives
  uselistorder i32 %v0_187fc, { 1, 0 }
}

define i32 @function_1880c() local_unnamed_addr {
dec_label_pc_1880c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18811(i32 %arg1) local_unnamed_addr {
dec_label_pc_18811:
  %v0_18816 = load i32, i32* @eax, align 8
  ret i32 %v0_18816
}

define i32 @_ZN5boost15foreach_detail_7containISt6vectorI12CTransactionSaIS3_EEEENS0_8auto_anyIPT_EERS7_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18817:
  %stack_var_-20 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 8
  %v1_18840 = call i32 @function_37cd1(i32 %arg2)
  store i32 %v1_18840, i32* %stack_var_-20, align 4
  %v2_18848 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_18855 = call i32 @function_37d29(i32 %arg1, i32 %v2_18848)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18869

bb:                                               ; preds = %dec_label_pc_18817
  %v1_18867 = call i32 @function_1886e()
  br label %dec_label_pc_18869

dec_label_pc_18869:                               ; preds = %bb, %dec_label_pc_18817
  %v2_18867 = phi i32 [ %v1_18867, %bb ], [ %arg1, %dec_label_pc_18817 ]
  ret i32 %v2_18867

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1886e() local_unnamed_addr {
dec_label_pc_1886e:
  %v0_1886f = load i32, i32* @eax, align 8
  ret i32 %v0_1886f
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18872:
  %stack_var_-20 = alloca i32, align 4
  %v1_188a1 = call i32 @unknown_37dc9(i32 %arg2)
  %v1_188a6 = inttoptr i32 %v1_188a1 to i32*
  %v2_188a6 = load i32, i32* %v1_188a6, align 4
  store i32 %v2_188a6, i32* @eax, align 8
  %v1_188ab = call i32 @function_37df6(i32 %v2_188a6)
  store i32 %v1_188ab, i32* @eax, align 8
  %v2_188b0 = ptrtoint i32* %stack_var_-20 to i32
  %v2_188ba = call i32 @function_37e23(i32 %v2_188b0, i32 %v1_188ab)
  store i32 %arg1, i32* @eax, align 8
  %v2_188cf = call i32 @function_37e6e(i32 %arg1, i32 %v2_188b0)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_188ec:
  %stack_var_-4 = alloca i32, align 4
  %v4_188ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_188ec, i32* @ebp, align 4
  ret i32 %arg3
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18966:
  ret i32 %arg2
}

define i32 @function_18978(i32 %arg1) local_unnamed_addr {
dec_label_pc_18978:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_18978 = load i32, i32* @ecx, align 8
  %v1_18978 = add i32 %v0_18978, -1
  store i32 %v1_18978, i32* @ecx, align 8
  %v0_1897a = load i32, i32* @ebp, align 4
  %v1_1897a = add i32 %v0_1897a, 1
  store i32 %v1_1897a, i32* @ebp, align 4
  %v1_1897b = add i32 %v0_18978, -1587159996
  %v2_1897b = inttoptr i32 %v1_1897b to i8*
  %v3_1897b = load i8, i8* %v2_1897b, align 1
  %v5_1897b = trunc i32 %v1_18978 to i8
  %v6_1897b = load i1, i1* @cf, align 1
  %v7_1897b = zext i1 %v6_1897b to i8
  %v8_1897b = add i8 %v3_1897b, %v5_1897b
  %v9_1897b = add i8 %v7_1897b, %v8_1897b
  %v27_1897b = icmp ule i8 %v9_1897b, %v3_1897b
  %v28_1897b = icmp ult i8 %v8_1897b, %v3_1897b
  %v29_1897b = select i1 %v6_1897b, i1 %v27_1897b, i1 %v28_1897b
  store i1 %v29_1897b, i1* %cf.global-to-local, align 1
  store i8 %v9_1897b, i8* %v2_1897b, align 1
  %v0_18981 = load i32, i32* @eax, align 8
  %v1_18981 = trunc i32 %v0_18981 to i8
  %v2_18981 = load i1, i1* %cf.global-to-local, align 1
  %v3_18981 = zext i1 %v2_18981 to i8
  %v4_18981 = add i8 %v3_18981, %v1_18981
  %v19_18981 = icmp ule i8 %v4_18981, %v1_18981
  %v21_18981 = icmp eq i1 %v2_18981, %v19_18981
  store i1 %v21_18981, i1* %cf.global-to-local, align 1
  %v22_18981 = zext i8 %v4_18981 to i32
  %v24_18981 = and i32 %v0_18981, -256
  %v25_18981 = or i32 %v22_18981, %v24_18981
  store i32 %v25_18981, i32* %eax.global-to-local, align 8
  %v1_18983 = inttoptr i32 %v25_18981 to i8*
  %v2_18983 = load i8, i8* %v1_18983, align 1
  %v5_18983 = add i8 %v2_18983, %v4_18981
  store i8 %v5_18983, i8* %v1_18983, align 1
  %v0_18985 = load i32, i32* %eax.global-to-local, align 8
  %v1_18985 = load i32, i32* @ebp, align 4
  %v2_18985 = add i32 %v1_18985, -12
  %v3_18985 = inttoptr i32 %v2_18985 to i32*
  store i32 %v0_18985, i32* %v3_18985, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1898a = load i32, i32* @ebp, align 4
  %v1_1898a = add i32 %v0_1898a, -32
  %v2_1898a = inttoptr i32 %v1_1898a to i32*
  %v3_1898a = load i32, i32* %v2_1898a, align 4
  store i32 %v3_1898a, i32* @eax, align 8
  %v1_18990 = call i32 @function_37ff1(i32 %v3_1898a)
  store i32 %v1_18990, i32* %eax.global-to-local, align 8
  store i32 %v1_18990, i32* @ebx, align 4
  %v0_18997 = load i32, i32* @ebp, align 4
  %v1_18997 = add i32 %v0_18997, -28
  %v2_18997 = inttoptr i32 %v1_18997 to i32*
  %v3_18997 = load i32, i32* %v2_18997, align 4
  store i32 %v3_18997, i32* @eax, align 8
  %v1_1899d = call i32 @function_37ff1(i32 %v3_18997)
  store i32 %v1_1899d, i32* @eax, align 8
  %v0_189a2 = load i32, i32* @ebx, align 4
  %v2_189a9 = call i32 @function_3801e(i32 %v1_1899d, i32 %v0_189a2)
  store i32 %v2_189a9, i32* %eax.global-to-local, align 8
  %v0_189bf = load i32, i32* @esp, align 4
  %v5_189bf = icmp ugt i32 %v0_189bf, -53
  store i1 %v5_189bf, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* @ebx, align 4
  ret i32 %v2_189a9

; uselistorder directives
  uselistorder i8 %v4_18981, { 0, 2, 1 }
  uselistorder i8 %v1_18981, { 1, 0 }
  uselistorder i8 %v9_1897b, { 1, 0 }
  uselistorder i8 %v8_1897b, { 1, 0 }
  uselistorder i8 %v3_1897b, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_37ff1, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_189c5:
  store i32 %arg1, i32* @eax, align 8
  %v1_189e8 = call i32 @function_38050(i32 %arg1)
  %v1_189f0 = call i32 @__stack_chk_fail.1408(i32 %v1_189e8)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18a08:
  store i1 true, i1* @zf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_18a2b = call i32 @function_38093(i32 %arg1)
  store i32 %v1_18a2b, i32* @eax, align 8
  %v1_18a33 = call i32 @function_3814e(i32 %v1_18a2b)
  ret i32 %v1_18a33

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18a4c:
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_18a6a = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_18a6a, i32* @eax, align 8
  %v3_18a7e = call i32 @function_381c2(i32 %v2_18a6a, i32 %arg1, i32 %arg2)
  %v2_18a86 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_18a86, i32* @eax, align 8
  %v2_18a93 = call i32 @function_38296(i32 %v2_18a86, i32 %arg1)
  store i32 %v2_18a6a, i32* @eax, align 8
  %v2_18aa8 = call i32 @function_382e0(i32 %v2_18a6a, i32 %v2_18a86)
  %v4_18aad = trunc i32 %v2_18aa8 to i8
  %v5_18aad = icmp eq i8 %v4_18aad, 0
  %v1_18aaf = icmp eq i1 %v5_18aad, false
  br i1 %v1_18aaf, label %dec_label_pc_18af9, label %dec_label_pc_18ab1

dec_label_pc_18ab1:                               ; preds = %dec_label_pc_18a4c
  store i32 %v2_18a6a, i32* @eax, align 8
  %v1_18ab7 = call i32 @function_38264(i32 %v2_18a6a)
  store i32 %v1_18ab7, i32* @ebx, align 4
  %v2_18abe = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_18abe, i32* @eax, align 8
  %v2_18acb = call i32 @function_3821a(i32 %v2_18abe, i32 %arg1)
  %v0_18ad3 = load i32, i32* @ebx, align 4
  %v2_18ade = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_18ade, i32* @eax, align 8
  %v3_18ae4 = call i32 @function_35a16(i32 %v2_18ade, i32 %arg2, i32 %v0_18ad3)
  %v4_18ae9 = trunc i32 %v3_18ae4 to i8
  %v5_18ae9 = icmp ne i8 %v4_18ae9, 0
  %. = zext i1 %v5_18ae9 to i32
  br label %dec_label_pc_18af9

dec_label_pc_18af9:                               ; preds = %dec_label_pc_18ab1, %dec_label_pc_18a4c
  %storemerge = phi i32 [ 1, %dec_label_pc_18a4c ], [ %., %dec_label_pc_18ab1 ]
  ret i32 %storemerge
}

define i32 @function_18b0a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18b0a:
  %v0_18b0a = load i32, i32* @ebp, align 4
  %v1_18b0a = add i32 %v0_18b0a, 1149876293
  %v2_18b0a = inttoptr i32 %v1_18b0a to i8*
  %v3_18b0a = load i8, i8* %v2_18b0a, align 1
  %v4_18b0a = load i32, i32* @ecx, align 8
  %v5_18b0a = trunc i32 %v4_18b0a to i8
  %v6_18b0a = add i8 %v5_18b0a, %v3_18b0a
  store i8 %v6_18b0a, i8* %v2_18b0a, align 1
  %v0_18b12 = load i32, i32* @ebp, align 4
  %v1_18b12 = add i32 %v0_18b12, -80
  %v2_18b12 = inttoptr i32 %v1_18b12 to i32*
  %v3_18b12 = load i32, i32* %v2_18b12, align 4
  %v1_18b19 = add i32 %v0_18b12, -52
  store i32 %v1_18b19, i32* @eax, align 8
  %v2_18b1f = call i32 @function_38320(i32 %v1_18b19, i32 %v3_18b12)
  %v0_18b24 = load i32, i32* @ebp, align 4
  %v1_18b24 = add i32 %v0_18b24, -88
  store i32 %v1_18b24, i32* @eax, align 8
  %v1_18b27 = add i32 %v0_18b24, -52
  %v1_18b2e = add i32 %v0_18b24, -64
  %v2_18b2e = inttoptr i32 %v1_18b2e to i32*
  %v3_18b2e = load i32, i32* %v2_18b2e, align 4
  %v1_18b35 = add i32 %v0_18b24, -76
  %v2_18b35 = inttoptr i32 %v1_18b35 to i32*
  %v3_18b35 = load i32, i32* %v2_18b35, align 4
  %v4_18b3f = call i32 @function_3839c(i32 %v1_18b24, i32 %v3_18b35, i32 %v3_18b2e, i32 %v1_18b27)
  %v0_18b47 = load i32, i32* @ebp, align 4
  %v1_18b47 = add i32 %v0_18b47, -88
  %v2_18b47 = inttoptr i32 %v1_18b47 to i32*
  %v3_18b47 = load i32, i32* %v2_18b47, align 4
  %v2_18b4a = add i32 %v0_18b47, -64
  %v3_18b4a = inttoptr i32 %v2_18b4a to i32*
  store i32 %v3_18b47, i32* %v3_18b4a, align 4
  %v0_18b4d = load i32, i32* @ebp, align 4
  %v1_18b4d = add i32 %v0_18b4d, -64
  store i32 %v1_18b4d, i32* @eax, align 8
  %v1_18b53 = call i32 @function_38264(i32 %v1_18b4d)
  %v1_18b58 = add i32 %v1_18b53, 32
  store i32 %v1_18b58, i32* @eax, align 8
  %v0_18b5b = load i32, i32* @ebp, align 4
  %v1_18b5b = add i32 %v0_18b5b, -12
  %v2_18b5b = inttoptr i32 %v1_18b5b to i32*
  %v3_18b5b = load i32, i32* %v2_18b5b, align 4
  %v1_18b5e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18b5e = icmp eq i32 %v1_18b5e, %v3_18b5b
  br i1 %v3_18b5e, label %bb, label %dec_label_pc_18b67

bb:                                               ; preds = %dec_label_pc_18b0a
  %v1_18b65 = call i32 @function_18b6c()
  br label %dec_label_pc_18b67

dec_label_pc_18b67:                               ; preds = %bb, %dec_label_pc_18b0a
  %v2_18b65 = phi i32 [ %v1_18b65, %bb ], [ %v1_18b58, %dec_label_pc_18b0a ]
  ret i32 %v2_18b65
}

define i32 @function_18b6c() local_unnamed_addr {
dec_label_pc_18b6c:
  %v0_18b70 = load i32, i32* @eax, align 8
  ret i32 %v0_18b70
}

define i32 @_ZN11CDataStreamlsI12CTransactionEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18b72:
  %v1_18b92 = add i32 %arg1, 24
  %v2_18b92 = inttoptr i32 %v1_18b92 to i32*
  %v3_18b92 = load i32, i32* %v2_18b92, align 4
  %v1_18b98 = add i32 %arg1, 20
  %v2_18b98 = inttoptr i32 %v1_18b98 to i32*
  %v3_18b98 = load i32, i32* %v2_18b98, align 4
  %v4_18bb0 = call i32 @function_38538(i32 %arg1, i32 %arg2, i32 %v3_18b98, i32 %v3_18b92)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18bc4

bb:                                               ; preds = %dec_label_pc_18b72
  %v1_18bc2 = call i32 @function_18bc9()
  br label %dec_label_pc_18bc4

dec_label_pc_18bc4:                               ; preds = %bb, %dec_label_pc_18b72
  %v2_18bc2 = phi i32 [ %v1_18bc2, %bb ], [ %arg1, %dec_label_pc_18b72 ]
  ret i32 %v2_18bc2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_18bc9() local_unnamed_addr {
dec_label_pc_18bc9:
  %v0_18bca = load i32, i32* @eax, align 8
  ret i32 %v0_18bca
}

define i32 @_Z6HexStrIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEESsT_S8_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_18bcb:
  ret i32 %arg1
}

define i32 @function_18c13() local_unnamed_addr {
dec_label_pc_18c13:
  %eax.global-to-local = alloca i32, align 4
  %v0_18c13 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18c13
}

define i32 @function_18c28() local_unnamed_addr {
dec_label_pc_18c28:
  %ebx.global-to-local = alloca i32, align 4
  %v0_18c28 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18c28 = add i32 %v0_18c28, 1166663749
  %v2_18c28 = inttoptr i32 %v1_18c28 to i32*
  %v3_18c28 = load i32, i32* %v2_18c28, align 4
  %v4_18c28 = add i32 %v3_18c28, -1
  store i32 %v4_18c28, i32* %v2_18c28, align 4
  %v0_18c2f = call i32 @function_18ccf()
  ret i32 %v0_18c2f
}

define i32 @function_18c34() local_unnamed_addr {
dec_label_pc_18c34:
  %v0_18c34 = load i32, i32* @ebp, align 4
  %v1_18c34 = add i32 %v0_18c34, -20
  %v1_18c3f = inttoptr i32 %v1_18c34 to i8*
  %v2_18c3f = load i8, i8* %v1_18c3f, align 1
  %v3_18c42 = add i32 %v0_18c34, -13
  %v4_18c42 = inttoptr i32 %v3_18c42 to i8*
  store i8 %v2_18c3f, i8* %v4_18c42, align 1
  %v0_18c45 = load i32, i32* @ebp, align 4
  %v1_18c45 = add i32 %v0_18c45, -40
  %v2_18c45 = inttoptr i32 %v1_18c45 to i8*
  %v3_18c45 = load i8, i8* %v2_18c45, align 1
  %v10_18c45 = icmp eq i8 %v3_18c45, 0
  br i1 %v10_18c45, label %dec_label_pc_18c68, label %dec_label_pc_18c4b

dec_label_pc_18c4b:                               ; preds = %dec_label_pc_18c34
  %v1_18c52 = add i32 %v0_18c45, 236
  %v4_18c5d = trunc i32 %v1_18c52 to i8
  %v5_18c5d = icmp eq i8 %v4_18c5d, 0
  br i1 %v5_18c5d, label %dec_label_pc_18c68, label %dec_label_pc_18c6d

dec_label_pc_18c68:                               ; preds = %dec_label_pc_18c4b, %dec_label_pc_18c34
  br label %dec_label_pc_18c6d

dec_label_pc_18c6d:                               ; preds = %dec_label_pc_18c4b, %dec_label_pc_18c68
  %storemerge = phi i1 [ true, %dec_label_pc_18c68 ], [ false, %dec_label_pc_18c4b ]
  br i1 %storemerge, label %bb, label %dec_label_pc_18c71

bb:                                               ; preds = %dec_label_pc_18c6d
  %v1_18c6f = call i32 @function_18c84()
  %v0_18c79.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_18c71

dec_label_pc_18c71:                               ; preds = %bb, %dec_label_pc_18c6d
  %v0_18c79 = phi i32 [ %v0_18c79.pre, %bb ], [ %v0_18c45, %dec_label_pc_18c6d ]
  %v1_18c79 = add i32 %v0_18c79, -28
  %v2_18c79 = inttoptr i32 %v1_18c79 to i32*
  %v3_18c79 = load i32, i32* %v2_18c79, align 4
  ret i32 %v3_18c79

; uselistorder directives
  uselistorder label %dec_label_pc_18c6d, { 1, 0 }
}

define i32 @function_18c84() local_unnamed_addr {
dec_label_pc_18c84:
  %v0_18c84 = load i32, i32* @ebp, align 4
  %v1_18c84 = add i32 %v0_18c84, -13
  %v2_18c84 = inttoptr i32 %v1_18c84 to i8*
  %v3_18ca4 = load i8, i8* %v2_18c84, align 1
  %tmp3 = urem i8 %v3_18ca4, 16
  %v1_18ca8 = zext i8 %tmp3 to i32
  %v1_18cab = or i32 %v1_18ca8, ptrtoint ([49 x i8]* @global_var_40b70.2858 to i32)
  %v2_18cab = inttoptr i32 %v1_18cab to i8*
  %v3_18cab = load i8, i8* %v2_18cab, align 1
  %v4_18cab = zext i8 %v3_18cab to i32
  %v1_18cc4 = add i32 %v0_18c84, -20
  store i32 %v1_18cc4, i32* @eax, align 8
  %v2_18cca = call i32 @function_38641(i32 %v1_18cc4, i32 %v4_18cab)
  ret i32 %v2_18cca
}

define i32 @function_18ccf() local_unnamed_addr {
dec_label_pc_18ccf:
  %v0_18ccf = load i32, i32* @ebp, align 4
  %v1_18ccf = add i32 %v0_18ccf, -36
  %v1_18cd6 = add i32 %v0_18ccf, -20
  store i32 %v1_18cd6, i32* @eax, align 8
  %v2_18cdc = call i32 @function_385ed(i32 %v1_18cd6, i32 %v1_18ccf)
  %v4_18ce1 = trunc i32 %v2_18cdc to i8
  %v5_18ce1 = icmp eq i8 %v4_18ce1, 0
  %v1_18ce3 = icmp eq i1 %v5_18ce1, false
  br i1 %v1_18ce3, label %bb, label %dec_label_pc_18ce9

bb:                                               ; preds = %dec_label_pc_18ccf
  %v2_18ce3 = call i32 @function_18c34()
  br label %dec_label_pc_18ce9

dec_label_pc_18ce9:                               ; preds = %bb, %dec_label_pc_18ccf
  %v0_18ce9 = call i32 @function_18d02()
  ret i32 %v0_18ce9
}

define i32 @function_18ceb() local_unnamed_addr {
dec_label_pc_18ceb:
  %eax.global-to-local = alloca i32, align 4
  %v0_18ceb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18ceb
}

define i32 @function_18d02() local_unnamed_addr {
dec_label_pc_18d02:
  %v0_18d02 = load i32, i32* @ebp, align 4
  %v1_18d02 = add i32 %v0_18d02, -28
  %v2_18d02 = inttoptr i32 %v1_18d02 to i32*
  %v3_18d02 = load i32, i32* %v2_18d02, align 4
  ret i32 %v3_18d02
}

define i32 @_ZNK9base_uintILj256EE6GetHexEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18d1e:
  %v3_18d43 = call i32 @function_18d7b(i32 %arg2, i32 %arg1, i32 0)
  ret i32 %v3_18d43
}

define i32 @function_18d5f(i16 %arg1) local_unnamed_addr {
dec_label_pc_18d5f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_18d60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18d60 = and i32 %v0_18d60, -256
  %v2_18d60 = or i32 %v1_18d60, 1
  store i32 %v2_18d60, i32* %ebx.global-to-local, align 4
  %v6_18d62 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_18d62
}

define i32 @function_18d7b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18d7b:
  %v0_18d7b = load i32, i32* @ebp, align 4
  %v1_18d91 = add i32 %v0_18d7b, -78
  %v1_18d98 = add i32 %v0_18d7b, -77
  %v1_18d9b = add i32 %v0_18d7b, -13
  %v1_18da9 = add i32 %v0_18d7b, -92
  %v2_18da9 = inttoptr i32 %v1_18da9 to i32*
  %v3_18da9 = load i32, i32* %v2_18da9, align 4
  %v4_18daf = call i32 @__stack_chk_fail.1415(i32 %v3_18da9, i32 %v1_18d98, i32 %v1_18d9b, i32 %v1_18d91)
  %v0_18db4 = load i32, i32* @ebp, align 4
  %v1_18db4 = add i32 %v0_18db4, -78
  ret i32 %v1_18db4

; uselistorder directives
  uselistorder i32 %v0_18d7b, { 0, 2, 3, 1 }
}

define i32 @function_18dbe() local_unnamed_addr {
dec_label_pc_18dbe:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_18dbe = load i32, i32* %ebx.global-to-local, align 4
  %v1_18dbe = add i32 %v0_18dbe, 1435214917
  %v2_18dbe = inttoptr i32 %v1_18dbe to i32*
  %v3_18dbe = load i32, i32* %v2_18dbe, align 4
  %v4_18dbe = add i32 %v3_18dbe, -1
  store i32 %v4_18dbe, i32* %v2_18dbe, align 4
  %v0_18dc5 = load i32, i32* %edx.global-to-local, align 4
  %v1_18dc5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18dc5 = xor i32 %v1_18dc5, %v0_18dc5
  %v3_18dc5 = icmp eq i32 %v2_18dc5, 0
  store i32 %v2_18dc5, i32* %edx.global-to-local, align 4
  br i1 %v3_18dc5, label %bb, label %dec_label_pc_18dce

bb:                                               ; preds = %dec_label_pc_18dbe
  %v1_18dcc = call i32 @function_18dec()
  store i32 %v1_18dcc, i32* @eax, align 8
  br label %dec_label_pc_18dce

dec_label_pc_18dce:                               ; preds = %bb, %dec_label_pc_18dbe
  %v0_18dce = call i32 @function_18de7()
  ret i32 %v0_18dce
}

define i32 @function_18dd1() local_unnamed_addr {
dec_label_pc_18dd1:
  %eax.global-to-local = alloca i32, align 4
  %v0_18dd1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18dd1
}

define i32 @function_18de7() local_unnamed_addr {
dec_label_pc_18de7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_18dec() local_unnamed_addr {
dec_label_pc_18dec:
  %v0_18df1 = load i32, i32* @eax, align 8
  ret i32 %v0_18df1
}

define i32 @_ZN5boost15foreach_detail_7containISt6vectorI5CTxInSaIS3_EEEENS0_8auto_anyIPT_EERS7_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18df4:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_18e1d = call i32 @function_38941(i32 %arg2)
  store i32 %v1_18e1d, i32* %stack_var_-20, align 4
  %v2_18e25 = ptrtoint i32* %stack_var_-20 to i32
  %v2_18e32 = call i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSI_EENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %v2_18e25)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18e4f:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_18e7e = call i32 @function_38a38(i32 %arg2)
  %v1_18e83 = inttoptr i32 %v1_18e7e to i32*
  %v2_18e83 = load i32, i32* %v1_18e83, align 4
  %v1_18e88 = call i32 @function_38a65(i32 %v2_18e83)
  %v2_18e8d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18e8d, i32* @edx, align 4
  %v2_18e97 = call i32 @function_38a92(i32 %v2_18e8d, i32 %v1_18e88)
  %v0_18e9c = load i32, i32* @esp, align 4
  %v5_18e9c = icmp ult i32 %v0_18e9c, 4
  store i1 %v5_18e9c, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_18eac = call i32 @function_38add(i32 %arg1, i32 %v2_18e8d)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18ec0

bb:                                               ; preds = %dec_label_pc_18e4f
  %v1_18ebe = call i32 @function_18ec5()
  br label %dec_label_pc_18ec0

dec_label_pc_18ec0:                               ; preds = %bb, %dec_label_pc_18e4f
  %v2_18ebe = phi i32 [ %v1_18ebe, %bb ], [ %arg1, %dec_label_pc_18e4f ]
  ret i32 %v2_18ebe

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_18ec5() local_unnamed_addr {
dec_label_pc_18ec5:
  %v0_18ec6 = load i32, i32* @eax, align 8
  ret i32 %v0_18ec6
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPS8_(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18ec9:
  %stack_var_-20 = alloca i32, align 4
  %v2_18efd = load i32, i32* %arg2, align 4
  store i32 %v2_18efd, i32* @eax, align 8
  %v2_18f07 = ptrtoint i32* %stack_var_-20 to i32
  %v2_18f11 = call i32 @function_38b9c(i32 %v2_18f07, i32 %v2_18efd)
  store i32 %arg1, i32* @eax, align 8
  %v2_18f26 = call i32 @function_38b57(i32 %arg1, i32 %v2_18f07)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18f43:
  %v0_18f46 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_18f6d = call i32 @function_38c60(i32 %arg2)
  store i32 %v1_18f6d, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_18f7a = call i32 @function_38c60(i32 %arg1)
  store i32 %v1_18f7a, i32* @eax, align 8
  %v0_18f7f = load i32, i32* @ebx, align 4
  %v2_18f86 = call i32 @function_38c8d(i32 %v1_18f7a, i32 %v0_18f7f)
  store i32 %v0_18f46, i32* @ebx, align 4
  ret i32 %v2_18f86

; uselistorder directives
  uselistorder i32 (i32)* @function_38c60, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18fa2:
  store i1 false, i1* @az, align 1
  store i1 false, i1* @cf, align 1
  store i1 false, i1* @of, align 1
  store i1 true, i1* @zf, align 1
  store i1 false, i1* @sf, align 1
  store i1 true, i1* @pf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_18fcd = call i32 @function_38d40(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_18fde

bb:                                               ; preds = %dec_label_pc_18fa2
  %v1_18fdc = call i32 @function_18fe3()
  br label %dec_label_pc_18fde

dec_label_pc_18fde:                               ; preds = %bb, %dec_label_pc_18fa2
  %v2_18fdc = phi i32 [ %v1_18fdc, %bb ], [ 0, %dec_label_pc_18fa2 ]
  ret i32 %v2_18fdc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18fe3() local_unnamed_addr {
dec_label_pc_18fe3:
  %v0_18fe4 = load i32, i32* @eax, align 8
  ret i32 %v0_18fe4
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18fe5:
  %v1_19008 = call i32 @function_38d02(i32 %arg1)
  %v1_19010 = call i32 @function_38dbd(i32 %v1_19008)
  store i32 0, i32* @edx, align 4
  ret i32 %v1_19010
}

define i32 @_ZNKSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEE5countERS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19028:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_19048 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_19048, i32* @eax, align 8
  %v2_19052 = call i32 @function_38e30(i32 %v2_19048, i32 %arg1)
  %v2_1905d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg2, i32* @ecx, align 8
  %v3_1906e = call i32 @function_38e7a(i32 %v2_1905d, i32 %arg1, i32 %arg2)
  store i32 %v2_1905d, i32* @eax, align 8
  %v2_19083 = call i32 @function_38f66(i32 %v2_1905d, i32 %v2_19048)
  %v4_19088 = trunc i32 %v2_19083 to i8
  %v5_19088 = icmp eq i8 %v4_19088, 0
  %. = zext i1 %v5_19088 to i32
  store i32 %., i32* @eax, align 8
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_190a4

bb:                                               ; preds = %dec_label_pc_19028
  %v1_190a2 = call i32 @function_190a9()
  br label %dec_label_pc_190a4

dec_label_pc_190a4:                               ; preds = %bb, %dec_label_pc_19028
  %v2_190a2 = phi i32 [ %v1_190a2, %bb ], [ %., %dec_label_pc_19028 ]
  ret i32 %v2_190a2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_190a9() local_unnamed_addr {
dec_label_pc_190a9:
  %v0_190aa = load i32, i32* @eax, align 8
  ret i32 %v0_190aa
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE9push_backERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_190ac:
  %stack_var_-20 = alloca i32, align 4
  %v1_190cc = add i32 %arg1, 4
  %v2_190cc = inttoptr i32 %v1_190cc to i32*
  %v3_190cc = load i32, i32* %v2_190cc, align 4
  %v1_190d2 = add i32 %arg1, 8
  %v2_190d2 = inttoptr i32 %v1_190d2 to i32*
  %v3_190d2 = load i32, i32* %v2_190d2, align 4
  %v7_190d5 = icmp ult i32 %v3_190cc, %v3_190d2
  store i1 %v7_190d5, i1* @cf, align 1
  %v12_190d5 = icmp eq i32 %v3_190cc, %v3_190d2
  br i1 %v12_190d5, label %dec_label_pc_19106, label %dec_label_pc_190d9

dec_label_pc_190d9:                               ; preds = %dec_label_pc_190ac
  %v3_190dc = load i32, i32* %v2_190cc, align 4
  store i32 %v3_190dc, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg2, i32* @ecx, align 8
  %v3_190f0 = call i32 @function_3902a(i32 %arg1, i32 %v3_190dc, i32 %arg2)
  %v3_190f8 = load i32, i32* %v2_190cc, align 4
  %v1_190fb = add i32 %v3_190f8, 20
  store i32 %v1_190fb, i32* @edx, align 4
  store i32 %v1_190fb, i32* %v2_190cc, align 4
  br label %dec_label_pc_19134

dec_label_pc_19106:                               ; preds = %dec_label_pc_190ac
  %v2_19106 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_19106, i32* @eax, align 8
  %v2_19113 = call i32 @function_393c4(i32 %v2_19106, i32 %arg1)
  %v3_19122 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_1912f = call i32 @function_390ac(i32 %arg1, i32 %v3_19122, i32 %arg2)
  br label %dec_label_pc_19134

dec_label_pc_19134:                               ; preds = %dec_label_pc_19106, %dec_label_pc_190d9
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 4, 1, 0, 6, 5 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1ERKSt6vectorIS3_SaIS3_EE() local_unnamed_addr {
dec_label_pc_19148:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_19168 = inttoptr i32 %tmp6 to i32*
  store i32 1, i32* %v1_19168, align 4
  %v1_19171 = add i32 %tmp6, 4
  %v2_1917e = call i32 @function_394aa(i32 %v1_19171, i32 %tmp4)
  %v1_19186 = add i32 %tmp6, 16
  %v2_19186 = inttoptr i32 %v1_19186 to i8*
  store i8 0, i8* %v2_19186, align 1
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp6, { 2, 1, 0 }
}

define i32 @_ZNSt6vectorIxSaIxEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1919e:
  %v2_191be = load i32, i32* %arg1, align 4
  %v2_191c3 = mul i32 %arg2, 8
  %v2_191c6 = add i32 %v2_191be, %v2_191c3
  store i32 %v2_191c6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_191d4

bb:                                               ; preds = %dec_label_pc_1919e
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_191d2 = call i32 @function_191d9(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_191d4

dec_label_pc_191d4:                               ; preds = %bb, %dec_label_pc_1919e
  %v4_191d2 = phi i32 [ %v3_191d2, %bb ], [ %v2_191c6, %dec_label_pc_1919e ]
  ret i32 %v4_191d2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_191d9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_191d9:
  %v0_191da = load i32, i32* @eax, align 8
  ret i32 %v0_191da
}

define i32 @_Z6HexStrIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEESsT_S7_b(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_191db:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_19213 = ptrtoint i32* %stack_var_-36 to i32
  %v2_19217 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_19217, i32* @eax, align 8
  %v2_1921d = call i32 @function_2f689(i32 %v2_19217, i32 %v4_19213)
  ret i32 %arg1
}

define i32 @function_19238() local_unnamed_addr {
dec_label_pc_19238:
  %ebx.global-to-local = alloca i32, align 4
  %v0_19238 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19238 = add i32 %v0_19238, 1166663749
  %v2_19238 = inttoptr i32 %v1_19238 to i32*
  %v3_19238 = load i32, i32* %v2_19238, align 4
  %v4_19238 = add i32 %v3_19238, -1
  store i32 %v4_19238, i32* %v2_19238, align 4
  %v0_192df104 = load i32, i32* @ebp, align 4
  %v1_192e6105 = add i32 %v0_192df104, -20
  %v4_192f1106 = trunc i32 %v1_192e6105 to i8
  %v5_192f1107 = icmp eq i8 %v4_192f1106, 0
  %v1_192f3112 = icmp eq i1 %v5_192f1107, false
  br i1 %v1_192f3112, label %dec_label_pc_19244, label %dec_label_pc_192f9

dec_label_pc_19244:                               ; preds = %dec_label_pc_19238, %dec_label_pc_19294
  %v1_192e6114 = phi i32 [ %v1_192e6, %dec_label_pc_19294 ], [ %v1_192e6105, %dec_label_pc_19238 ]
  %v0_192df113 = phi i32 [ %v0_192df, %dec_label_pc_19294 ], [ %v0_192df104, %dec_label_pc_19238 ]
  %v1_1924f = inttoptr i32 %v1_192e6114 to i8*
  %v2_1924f = load i8, i8* %v1_1924f, align 1
  %v3_19252 = add i32 %v0_192df113, -13
  %v4_19252 = inttoptr i32 %v3_19252 to i8*
  store i8 %v2_1924f, i8* %v4_19252, align 1
  %v0_19255 = load i32, i32* @ebp, align 4
  %v1_19255 = add i32 %v0_19255, -40
  %v2_19255 = inttoptr i32 %v1_19255 to i8*
  %v3_19255 = load i8, i8* %v2_19255, align 1
  %v10_19255 = icmp eq i8 %v3_19255, 0
  br i1 %v10_19255, label %dec_label_pc_19278, label %dec_label_pc_1925b

dec_label_pc_1925b:                               ; preds = %dec_label_pc_19244
  %v1_19262 = add i32 %v0_19255, 236
  %v4_1926d = trunc i32 %v1_19262 to i8
  %v5_1926d = icmp eq i8 %v4_1926d, 0
  br i1 %v5_1926d, label %dec_label_pc_19278, label %dec_label_pc_1927d

dec_label_pc_19278:                               ; preds = %dec_label_pc_1925b, %dec_label_pc_19244
  br label %dec_label_pc_1927d

dec_label_pc_1927d:                               ; preds = %dec_label_pc_1925b, %dec_label_pc_19278
  %storemerge = phi i1 [ true, %dec_label_pc_19278 ], [ false, %dec_label_pc_1925b ]
  br i1 %storemerge, label %dec_label_pc_19294, label %dec_label_pc_19281

dec_label_pc_19281:                               ; preds = %dec_label_pc_1927d
  br label %dec_label_pc_19294

dec_label_pc_19294:                               ; preds = %dec_label_pc_1927d, %dec_label_pc_19281
  %v1_19294 = add i32 %v0_19255, -13
  %v2_19294 = inttoptr i32 %v1_19294 to i8*
  %v3_192b4 = load i8, i8* %v2_19294, align 1
  %tmp118 = urem i8 %v3_192b4, 16
  %v1_192b8 = zext i8 %tmp118 to i32
  %v1_192bb = or i32 %v1_192b8, ptrtoint ([33 x i8]* @global_var_40b80.2859 to i32)
  %v2_192bb = inttoptr i32 %v1_192bb to i8*
  %v3_192bb = load i8, i8* %v2_192bb, align 1
  %v4_192bb = zext i8 %v3_192bb to i32
  %v1_192d4 = add i32 %v0_19255, -20
  %v2_192da = call i32 @__stack_chk_fail.1289(i32 %v1_192d4, i32 %v4_192bb)
  %v0_192df = load i32, i32* @ebp, align 4
  %v1_192e6 = add i32 %v0_192df, -20
  %v4_192f1 = trunc i32 %v1_192e6 to i8
  %v5_192f1 = icmp eq i8 %v4_192f1, 0
  %v1_192f3 = icmp eq i1 %v5_192f1, false
  br i1 %v1_192f3, label %dec_label_pc_19244, label %dec_label_pc_192f9

dec_label_pc_192f9:                               ; preds = %dec_label_pc_19294, %dec_label_pc_19238
  %v0_192df.lcssa = phi i32 [ %v0_192df104, %dec_label_pc_19238 ], [ %v0_192df, %dec_label_pc_19294 ]
  %v1_192e6.lcssa = phi i32 [ %v1_192e6105, %dec_label_pc_19238 ], [ %v1_192e6, %dec_label_pc_19294 ]
  %v1_192df = add i32 %v0_192df.lcssa, -36
  %v2_192f9 = call i32 @function_19312(i32 %v1_192e6.lcssa, i32 %v1_192df)
  ret i32 %v2_192f9

; uselistorder directives
  uselistorder i32 %v1_192e6, { 0, 2, 1 }
  uselistorder i32 %v0_192df, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19294, { 1, 0 }
  uselistorder label %dec_label_pc_1927d, { 1, 0 }
  uselistorder label %dec_label_pc_19244, { 1, 0 }
}

define i32 @function_192fb() local_unnamed_addr {
dec_label_pc_192fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_192fb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_192fb
}

define i32 @function_19312(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19312:
  %v0_19312 = load i32, i32* @ebp, align 4
  %v1_19312 = add i32 %v0_19312, -28
  %v2_19312 = inttoptr i32 %v1_19312 to i32*
  %v3_19312 = load i32, i32* %v2_19312, align 4
  store i32 %v3_19312, i32* @eax, align 8
  %v1_19315 = add i32 %v0_19312, -12
  %v2_19315 = inttoptr i32 %v1_19315 to i32*
  %v3_19315 = load i32, i32* %v2_19315, align 4
  %v1_19318 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19318 = icmp eq i32 %v1_19318, %v3_19315
  br i1 %v3_19318, label %bb, label %dec_label_pc_19321

bb:                                               ; preds = %dec_label_pc_19312
  %v1_1931f = call i32 @function_19326()
  br label %dec_label_pc_19321

dec_label_pc_19321:                               ; preds = %bb, %dec_label_pc_19312
  %v2_1931f = phi i32 [ %v1_1931f, %bb ], [ %v3_19312, %dec_label_pc_19312 ]
  ret i32 %v2_1931f
}

define i32 @function_19326() local_unnamed_addr {
dec_label_pc_19326:
  %v0_1932b = load i32, i32* @eax, align 8
  ret i32 %v0_1932b
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1932e:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_19345 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_19345, i32* @eax, align 8
  store i32 %arg1, i32* @edx, align 4
  %v2_19352 = call i32 @function_39762(i32 %v2_19345, i32 %arg1)
  %v2_1935a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1935a, i32* @eax, align 8
  %v2_19367 = call i32 @function_397b2(i32 %v2_1935a, i32 %arg1)
  store i32 %v2_1935a, i32* @eax, align 8
  %v2_1937c = call i32 @function_39801(i32 %v2_1935a, i32 %v2_19345)
  ret i32 %v2_1937c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEC1EPKc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19394:
  %stack_var_-24 = alloca i32, align 4
  store i32 2, i32* %arg1, align 4
  %v2_193d4 = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_193d4
}

define i32 @function_193ff() local_unnamed_addr {
dec_label_pc_193ff:
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1940a = add i32 %tmp91, -28
  %v2_1940a = inttoptr i32 %v1_1940a to i32*
  %v3_1940a = load i32, i32* %v2_1940a, align 4
  %v1_1940d = add i32 %v3_1940a, 16
  %v2_1940d = inttoptr i32 %v1_1940d to i8*
  store i8 0, i8* %v2_1940d, align 1
  %v0_19411 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19411 = add i32 %v0_19411, -12
  %v2_19411 = inttoptr i32 %v1_19411 to i32*
  %v3_19411 = load i32, i32* %v2_19411, align 4
  %v1_19414 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19414 = xor i32 %v1_19414, %v3_19411
  %v3_19414 = icmp eq i32 %v2_19414, 0
  store i32 %v2_19414, i32* @eax, align 8
  br i1 %v3_19414, label %bb, label %dec_label_pc_1941d

bb:                                               ; preds = %dec_label_pc_193ff
  %v1_193ff = add i32 %tmp91, -13
  %v2_1941b = call i32 @function_1944a(i32 %v1_193ff)
  store i32 %v2_1941b, i32* @eax, align 8
  br label %dec_label_pc_1941d

dec_label_pc_1941d:                               ; preds = %bb, %dec_label_pc_193ff
  %v0_1941d = call i32 @function_19445()
  ret i32 %v0_1941d
}

define i32 @function_19420() local_unnamed_addr {
dec_label_pc_19420:
  %eax.global-to-local = alloca i32, align 4
  %v0_19420 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19420
}

define i32 @function_1942c() local_unnamed_addr {
dec_label_pc_1942c:
  %v0_1942c = call i32 @function_19430()
  ret i32 %v0_1942c
}

define i32 @function_1942e() local_unnamed_addr {
dec_label_pc_1942e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1942e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1942e
}

define i32 @function_19430() local_unnamed_addr {
dec_label_pc_19430:
  %v0_1943b = load i32, i32* @ebx, align 4
  ret i32 %v0_1943b
}

define i32 @function_19445() local_unnamed_addr {
dec_label_pc_19445:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1944a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1944a:
  %v0_1944f = load i32, i32* @eax, align 8
  ret i32 %v0_1944f
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19450:
  %ebp.global-to-local = alloca i32, align 4
  %v0_19450 = load i32, i32* %ebp.global-to-local, align 4
  %v2_19470 = load i32, i32* %arg1, align 4
  %v2_1947c = mul i32 %arg2, 20
  %v2_1947f = add i32 %v2_19470, %v2_1947c
  store i32 %v0_19450, i32* %ebp.global-to-local, align 4
  ret i32 %v2_1947f
}

define i32 @_ZN11CDataStreamrsI6CBlockEERS_RT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19494:
  %v1_194b4 = add i32 %arg1, 24
  %v2_194b4 = inttoptr i32 %v1_194b4 to i32*
  %v3_194b4 = load i32, i32* %v2_194b4, align 4
  %v1_194ba = add i32 %arg1, 20
  %v2_194ba = inttoptr i32 %v1_194ba to i32*
  %v3_194ba = load i32, i32* %v2_194ba, align 4
  store i32 %arg1, i32* @eax, align 8
  %v4_194d2 = call i32 @function_399bb(i32 %arg1, i32 %arg2, i32 %v3_194ba, i32 %v3_194b4)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_194e6

bb:                                               ; preds = %dec_label_pc_19494
  %v1_194e4 = call i32 @function_194eb()
  br label %dec_label_pc_194e6

dec_label_pc_194e6:                               ; preds = %bb, %dec_label_pc_19494
  %v2_194e4 = phi i32 [ %v1_194e4, %bb ], [ %arg1, %dec_label_pc_19494 ]
  ret i32 %v2_194e4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 5, 4, 3, 2, 1 }
}

define i32 @function_194eb() local_unnamed_addr {
dec_label_pc_194eb:
  %v0_194ec = load i32, i32* @eax, align 8
  ret i32 %v0_194ec
}

define i32 @_ZNK9base_uintILj256EEngEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194ee:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_19514

dec_label_pc_19514:                               ; preds = %dec_label_pc_194ee, %dec_label_pc_19514
  %storemerge113 = phi i32 [ 0, %dec_label_pc_194ee ], [ %v4_1952a, %dec_label_pc_19514 ]
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v2_1951a = mul nuw nsw i32 %storemerge113, 4
  %v3_1951a = add i32 %v2_1951a, %arg2
  %v4_1951a = inttoptr i32 %v3_1951a to i32*
  %v5_1951a = load i32, i32* %v4_1951a, align 4
  %v1_1951f = sub i32 -1, %v5_1951a
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v4_19527 = add i32 %v2_1951a, %arg1
  %v5_19527 = inttoptr i32 %v4_19527 to i32*
  store i32 %v1_1951f, i32* %v5_19527, align 4
  %v4_1952a = add nuw nsw i32 %storemerge113, 1
  %v6_19532.pre = load i32, i32* %eax.global-to-local, align 8
  %tmp112 = sub nsw i32 5, %storemerge113
  %v11_1952e = and i32 %tmp112, %v4_1952a
  %v12_1952e = icmp slt i32 %v11_1952e, 0
  %v13_1952e = icmp eq i32 %v4_1952a, 7
  %v14_1952e = icmp slt i32 %v4_1952a, 7
  %v3_19532 = icmp ne i1 %v14_1952e, %v12_1952e
  %v4_19532 = or i1 %v13_1952e, %v3_19532
  %v5_19532 = zext i1 %v4_19532 to i32
  %v7_19532 = and i32 %v6_19532.pre, -256
  %v8_19532 = or i32 %v5_19532, %v7_19532
  store i32 %v8_19532, i32* %eax.global-to-local, align 8
  %exitcond = icmp eq i32 %v4_1952a, 8
  br i1 %exitcond, label %dec_label_pc_19539, label %dec_label_pc_19514

dec_label_pc_19539:                               ; preds = %dec_label_pc_19514
  %v2_19539 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19539, i32* @eax, align 8
  %v3_1954e = call i32 @function_39a72(i32 %v2_19539, i32 %arg1, i32 0)
  store i32 %arg1, i32* %eax.global-to-local, align 8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %storemerge113, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 4, 5, 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_19514, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1956e:
  %v2_19588 = load i32, i32* %arg1, align 4
  %v1_1958a = icmp eq i32 %v2_19588, 0
  br i1 %v1_1958a, label %dec_label_pc_195af, label %dec_label_pc_1958e

dec_label_pc_1958e:                               ; preds = %dec_label_pc_1956e
  %v2_1959d = load i32, i32* %arg1, align 4
  %v4_195a4 = trunc i32 %v2_1959d to i8
  %v5_195a4 = icmp eq i8 %v4_195a4, 0
  br i1 %v5_195a4, label %dec_label_pc_195af, label %dec_label_pc_195b4

dec_label_pc_195af:                               ; preds = %dec_label_pc_1958e, %dec_label_pc_1956e
  br label %dec_label_pc_195b4

dec_label_pc_195b4:                               ; preds = %dec_label_pc_1958e, %dec_label_pc_195af
  %storemerge = phi i1 [ true, %dec_label_pc_195af ], [ false, %dec_label_pc_1958e ]
  br i1 %storemerge, label %dec_label_pc_195c1, label %dec_label_pc_195b8

dec_label_pc_195b8:                               ; preds = %dec_label_pc_195b4
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_195c1

dec_label_pc_195c1:                               ; preds = %dec_label_pc_195b8, %dec_label_pc_195b4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_195cd

bb:                                               ; preds = %dec_label_pc_195c1
  %v1_195cb = call i32 @function_195d2()
  br label %dec_label_pc_195cd

dec_label_pc_195cd:                               ; preds = %bb, %dec_label_pc_195c1
  %v2_195cb = phi i32 [ %v1_195cb, %bb ], [ 0, %dec_label_pc_195c1 ]
  ret i32 %v2_195cb

; uselistorder directives
  uselistorder label %dec_label_pc_195b4, { 1, 0 }
}

define i32 @function_195d2() local_unnamed_addr {
dec_label_pc_195d2:
  %v0_195d3 = load i32, i32* @eax, align 8
  ret i32 %v0_195d3
}

define i32 @_ZN5boost17enable_error_infoISt13runtime_errorEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_195d4:
  store i32 %arg1, i32* @eax, align 8
  %v2_195fe = call i32 @function_39bd2(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1961b:
  %eax.global-to-local = alloca i32, align 4
  %v0_19620 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19620
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev(i32* %arg1) {
dec_label_pc_19626:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fa3c_type* @global_var_3fa3c.2829 to i32), i32* %arg1, align 4
  %v1_19649 = add i32 %tmp99, 8
  %v2_19649 = inttoptr i32 %v1_19649 to i32*
  store i32 ptrtoint (i32* @global_var_3fa50.2830 to i32), i32* %v2_19649, align 4
  %v5_19653 = icmp ugt i32* %arg1, inttoptr (i32 -9 to i32*)
  store i1 %v5_19653, i1* @cf, align 1
  %v10_19653 = icmp eq i32 %v1_19649, 0
  store i1 %v10_19653, i1* @zf, align 1
  store i32 %v1_19649, i32* @eax, align 8
  %v1_19659 = call i32 @function_27d4a(i32 %v1_19649)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_19649, { 2, 1, 0, 3 }
}

define i32 @function_19690() local_unnamed_addr {
dec_label_pc_19690:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_19690 = load i32, i32* %ecx.global-to-local, align 8
  %v1_19690 = add i32 %v0_19690, -1
  store i32 %v1_19690, i32* %ecx.global-to-local, align 8
  %v0_19692 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19692
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19694:
  %v4_19694 = add i32 %arg1, -8
  %v1_19699 = call i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32 %v4_19694)
  ret i32 %v1_19699
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32 %arg1) {
dec_label_pc_1969c:
  %v1_196b9 = call i32 @function_32cba(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_196c8() local_unnamed_addr {
dec_label_pc_196c8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_196c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_196c8 = add i32 %v0_196c8, 862319685
  %v2_196c8 = inttoptr i32 %v1_196c8 to i32*
  %v3_196c8 = load i32, i32* %v2_196c8, align 4
  %v4_196c8 = add i32 %v3_196c8, -1
  store i32 %v4_196c8, i32* %v2_196c8, align 4
  %v0_196ce = load i32, i32* %eax.global-to-local, align 8
  %v1_196ce = add i32 %v0_196ce, 20
  store i32 %v1_196ce, i32* %eax.global-to-local, align 8
  ret i32 %v1_196ce
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorISt13runtime_errorEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_196dc:
  store i32 %arg1, i32* @eax, align 8
  %v2_19706 = call i32 @function_39d3e(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19723:
  %v4_19723 = add i32 %arg1, -28
  %v1_19728 = call i32 @function_32e5b(i32 %v4_19723)
  ret i32 %v1_19728
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1972d:
  %v4_1972d = add i32 %arg1, -8
  %v1_19732 = call i32 @function_32e5b(i32 %v4_1972d)
  ret i32 %v1_19732

; uselistorder directives
  uselistorder i32 (i32)* @function_32e5b, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32* %arg1) {
dec_label_pc_19738:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f9dc_type* @global_var_3f9dc.2831 to i32), i32* %arg1, align 4
  %v1_1975b = add i32 %tmp100, 8
  %v2_1975b = inttoptr i32 %v1_1975b to i32*
  store i32 ptrtoint (i32* @global_var_3f9f8.2832 to i32), i32* %v2_1975b, align 4
  %v1_19765 = add i32 %tmp100, 28
  %v2_19765 = inttoptr i32 %v1_19765 to i32*
  store i32 ptrtoint (i32* @global_var_3fa08.2833 to i32), i32* %v2_19765, align 4
  %v5_1976f = icmp ugt i32* %arg1, inttoptr (i32 -29 to i32*)
  store i1 %v5_1976f, i1* @cf, align 1
  store i32 %v1_19765, i32* @eax, align 8
  %v1_19775 = call i32 @function_296d4(i32 %v1_19765)
  store i32 %tmp100, i32* @eax, align 8
  %v1_19780 = call i32 @function_32d5e(i32 %tmp100)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_197a8

bb:                                               ; preds = %dec_label_pc_19738
  %v1_197a6 = call i32 @function_197ad()
  br label %dec_label_pc_197a8

dec_label_pc_197a8:                               ; preds = %bb, %dec_label_pc_19738
  %v2_197a6 = phi i32 [ %v1_197a6, %bb ], [ 0, %dec_label_pc_19738 ]
  ret i32 %v2_197a6

; uselistorder directives
  uselistorder i32 %v1_19765, { 1, 0, 2 }
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_197ad() local_unnamed_addr {
dec_label_pc_197ad:
  %v0_197ae = load i32, i32* @eax, align 8
  ret i32 %v0_197ae
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_197b0:
  %v4_197b0 = add i32 %arg1, -28
  %v1_197b5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %v4_197b0)
  ret i32 %v1_197b5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_197b7:
  %v4_197b7 = add i32 %arg1, -8
  %v1_197bc = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %v4_197b7)
  ret i32 %v1_197bc
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %arg1) {
dec_label_pc_197be:
  %v1_197db = call i32 @function_32ee8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_197f7

bb:                                               ; preds = %dec_label_pc_197be
  %v2_197f5 = call i32 @function_197fc(i32 %arg1)
  br label %dec_label_pc_197f7

dec_label_pc_197f7:                               ; preds = %bb, %dec_label_pc_197be
  %v3_197f5 = phi i32 [ %v2_197f5, %bb ], [ 0, %dec_label_pc_197be ]
  ret i32 %v3_197f5
}

define i32 @function_197fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_197fc:
  %v0_197fd = load i32, i32* @eax, align 8
  ret i32 %v0_197fd
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEEEE3minEv() local_unnamed_addr {
dec_label_pc_197fe:
  %v0_19804 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  %v1_1980f = call i32 @function_39f11(i32 %v0_19804)
  store i32 %v1_1980f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_19820

bb:                                               ; preds = %dec_label_pc_197fe
  %v1_1981e = call i32 @function_19825()
  br label %dec_label_pc_19820

dec_label_pc_19820:                               ; preds = %bb, %dec_label_pc_197fe
  %v2_1981e = phi i32 [ %v1_1981e, %bb ], [ %v1_1980f, %dec_label_pc_197fe ]
  ret i32 %v2_1981e
}

define i32 @function_19825() local_unnamed_addr {
dec_label_pc_19825:
  %v0_19826 = load i32, i32* @eax, align 8
  ret i32 %v0_19826
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEEEE6assignEt(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19828:
  %ebx.global-to-local = alloca i32, align 4
  %tmp116 = trunc i32 %arg2 to i16
  %v0_1982b = load i32, i32* %ebx.global-to-local, align 4
  %sext6 = mul i32 %arg2, 65536
  %v4_1982f = sdiv i32 %sext6, 65536
  %v4_19832 = ptrtoint i16* %arg1 to i32
  %v4_19847 = urem i32 %arg2, 65536
  %v1_1984b = add nuw nsw i32 %v4_19847, 1
  store i32 %v1_1984b, i32* @ebx, align 4
  %v4_1984e = call i32 @function_33026(i32 %v4_1982f, i32 %v4_19832)
  %v1_19853 = urem i32 %v4_1984e, 65536
  %v1_19856 = add nuw nsw i32 %v1_19853, 1
  %v0_19859 = load i32, i32* @ebx, align 4
  %v2_19859 = sub i32 %v0_19859, %v1_19856
  %tmp120 = xor i32 %v2_19859, -2147483648
  %v10_19859 = and i32 %tmp120, %v0_19859
  %v11_19859 = icmp slt i32 %v10_19859, 0
  %v13_19859 = icmp slt i32 %v2_19859, 0
  %v2_1985b = icmp ne i1 %v13_19859, %v11_19859
  %v3_1985b = zext i1 %v2_1985b to i32
  %v5_1985b = and i32 %v1_19856, 130816
  %v6_1985b = or i32 %v3_1985b, %v5_1985b
  store i32 %v6_1985b, i32* @eax, align 8
  %v5_1985e = icmp eq i1 %v2_1985b, false
  br i1 %v5_1985e, label %dec_label_pc_19885, label %dec_label_pc_19862

dec_label_pc_19862:                               ; preds = %dec_label_pc_19828
  %v2_19869 = load i16, i16* %arg1, align 2
  %v3_19869 = zext i16 %v2_19869 to i32
  %v4_1987e = call i32 @function_39f64(i32 %v3_19869, i32 %v4_1982f, i32 0)
  br label %dec_label_pc_198c2

dec_label_pc_19885:                               ; preds = %dec_label_pc_19828
  %v0_19885 = call i32 @function_39fb7()
  %v1_1988a = trunc i32 %v0_19885 to i16
  %v11_1988a = icmp ult i16 %v1_1988a, %tmp116
  %v5_19891 = icmp eq i1 %v11_1988a, false
  br i1 %v5_19891, label %dec_label_pc_198b8, label %dec_label_pc_19895

dec_label_pc_19895:                               ; preds = %dec_label_pc_19885
  %v2_1989c = load i16, i16* %arg1, align 2
  %v3_1989c = zext i16 %v2_1989c to i32
  %v4_198b1 = call i32 @function_39f64(i32 %v3_1989c, i32 %v4_1982f, i32 1)
  br label %dec_label_pc_198c2

dec_label_pc_198b8:                               ; preds = %dec_label_pc_19885
  store i16 %tmp116, i16* %arg1, align 2
  br label %dec_label_pc_198c2

dec_label_pc_198c2:                               ; preds = %dec_label_pc_198b8, %dec_label_pc_19895, %dec_label_pc_19862
  store i32 %v0_1982b, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_19859, { 1, 0 }
  uselistorder i32 %v4_1982f, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_39f64, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEEEE3minEv() local_unnamed_addr {
dec_label_pc_198d9:
  %v0_198df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  %v1_198ea = call i32 @function_3a091(i32 %v0_198df)
  ret i32 %v1_198ea
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEEEE6assignEt(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19902:
  %tmp116 = trunc i32 %arg2 to i16
  %sext6 = mul i32 %arg2, 65536
  %v4_19909 = sdiv i32 %sext6, 65536
  %v4_1990c = ptrtoint i16* %arg1 to i32
  %v4_19921 = urem i32 %arg2, 65536
  %v1_19925 = add nuw nsw i32 %v4_19921, 1
  store i32 %v1_19925, i32* @ebx, align 4
  %v4_19928 = call i32 @function_331db(i32 %v4_19909, i32 %v4_1990c)
  %v1_1992d = urem i32 %v4_19928, 65536
  %v1_19930 = add nuw nsw i32 %v1_1992d, 1
  %v0_19933 = load i32, i32* @ebx, align 4
  %v2_19933 = sub i32 %v0_19933, %v1_19930
  %tmp120 = xor i32 %v2_19933, -2147483648
  %v10_19933 = and i32 %tmp120, %v0_19933
  %v11_19933 = icmp slt i32 %v10_19933, 0
  %v13_19933 = icmp slt i32 %v2_19933, 0
  %v2_19935 = icmp ne i1 %v13_19933, %v11_19933
  %v3_19935 = zext i1 %v2_19935 to i32
  %v5_19935 = and i32 %v1_19930, 130816
  %v6_19935 = or i32 %v3_19935, %v5_19935
  store i32 %v6_19935, i32* @eax, align 8
  %v5_19938 = icmp eq i1 %v2_19935, false
  br i1 %v5_19938, label %dec_label_pc_1995f, label %dec_label_pc_1993c

dec_label_pc_1993c:                               ; preds = %dec_label_pc_19902
  store i32 %v4_19921, i32* @edx, align 4
  %v2_19943 = load i16, i16* %arg1, align 2
  %v3_19943 = zext i16 %v2_19943 to i32
  %v4_19958 = call i32 @function_3a17a(i32 %v3_19943, i32 %v4_19909, i32 0)
  br label %dec_label_pc_1999c

dec_label_pc_1995f:                               ; preds = %dec_label_pc_19902
  %v0_1995f = call i32 @function_3a1cd()
  %v1_19964 = trunc i32 %v0_1995f to i16
  %v11_19964 = icmp ult i16 %v1_19964, %tmp116
  %v5_1996b = icmp eq i1 %v11_19964, false
  br i1 %v5_1996b, label %dec_label_pc_19992, label %dec_label_pc_1996f

dec_label_pc_1996f:                               ; preds = %dec_label_pc_1995f
  store i32 %v4_19921, i32* @edx, align 4
  %v2_19976 = load i16, i16* %arg1, align 2
  %v3_19976 = zext i16 %v2_19976 to i32
  %v4_1998b = call i32 @function_3a17a(i32 %v3_19976, i32 %v4_19909, i32 1)
  br label %dec_label_pc_1999c

dec_label_pc_19992:                               ; preds = %dec_label_pc_1995f
  store i16 %tmp116, i16* %arg1, align 2
  br label %dec_label_pc_1999c

dec_label_pc_1999c:                               ; preds = %dec_label_pc_19992, %dec_label_pc_1996f, %dec_label_pc_1993c
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_199a8

bb:                                               ; preds = %dec_label_pc_1999c
  %v1_199a6 = call i32 @function_199ad()
  br label %dec_label_pc_199a8

dec_label_pc_199a8:                               ; preds = %bb, %dec_label_pc_1999c
  %v2_199a6 = phi i32 [ %v1_199a6, %bb ], [ 0, %dec_label_pc_1999c ]
  ret i32 %v2_199a6

; uselistorder directives
  uselistorder i32 %v2_19933, { 1, 0 }
  uselistorder i32 %v4_19921, { 1, 2, 0 }
  uselistorder i32 %v4_19909, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_3a17a, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
}

define i32 @function_199ad() local_unnamed_addr {
dec_label_pc_199ad:
  %v0_199b2 = load i32, i32* @eax, align 8
  ret i32 %v0_199b2
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEEEE3minEv() local_unnamed_addr {
dec_label_pc_199b3:
  %v0_199b9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 8
  %v1_199c4 = call i32 @function_3a2a7(i32 %v0_199b9)
  ret i32 %v1_199c4
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEEEE6assignEt(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_199dc:
  %ebx.global-to-local = alloca i32, align 4
  %tmp116 = trunc i32 %arg2 to i16
  %v0_199df = load i32, i32* %ebx.global-to-local, align 4
  %sext6 = mul i32 %arg2, 65536
  %v4_199e3 = sdiv i32 %sext6, 65536
  %v4_199e6 = ptrtoint i16* %arg1 to i32
  store i1 false, i1* @cf, align 1
  %v4_199fb = urem i32 %arg2, 65536
  store i32 %v4_199fb, i32* @eax, align 8
  %v1_199ff = add nuw nsw i32 %v4_199fb, 1
  store i32 %v1_199ff, i32* %ebx.global-to-local, align 4
  %v4_19a02 = call i32 @function_3338f(i32 %v4_199e3, i32 %v4_199e6)
  %v1_19a07 = urem i32 %v4_19a02, 65536
  %v1_19a0a = add nuw nsw i32 %v1_19a07, 1
  %v13_19a0d = icmp ult i32 %v1_199ff, %v1_19a0a
  %v3_19a0f = zext i1 %v13_19a0d to i32
  %v5_19a0f = and i32 %v1_19a0a, 130816
  %v6_19a0f = or i32 %v3_19a0f, %v5_19a0f
  store i32 %v6_19a0f, i32* @eax, align 8
  %v5_19a12 = icmp eq i1 %v13_19a0d, false
  br i1 %v5_19a12, label %dec_label_pc_19a39, label %dec_label_pc_19a16

dec_label_pc_19a16:                               ; preds = %dec_label_pc_199dc
  %v2_19a1d = load i16, i16* %arg1, align 2
  %v3_19a1d = zext i16 %v2_19a1d to i32
  store i32 %v3_19a1d, i32* @eax, align 8
  %v4_19a32 = call i32 @function_3a390(i32 %v3_19a1d, i32 %v4_199e3, i32 0)
  br label %dec_label_pc_19a76

dec_label_pc_19a39:                               ; preds = %dec_label_pc_199dc
  %v0_19a39 = call i32 @function_3a3e3()
  %v1_19a3e = trunc i32 %v0_19a39 to i16
  %v11_19a3e = icmp ult i16 %v1_19a3e, %tmp116
  %v5_19a45 = icmp eq i1 %v11_19a3e, false
  br i1 %v5_19a45, label %dec_label_pc_19a6c, label %dec_label_pc_19a49

dec_label_pc_19a49:                               ; preds = %dec_label_pc_19a39
  %v2_19a50 = load i16, i16* %arg1, align 2
  %v3_19a50 = zext i16 %v2_19a50 to i32
  store i32 %v3_19a50, i32* @eax, align 8
  %v4_19a65 = call i32 @function_3a390(i32 %v3_19a50, i32 %v4_199e3, i32 1)
  br label %dec_label_pc_19a76

dec_label_pc_19a6c:                               ; preds = %dec_label_pc_19a39
  store i16 %tmp116, i16* %arg1, align 2
  br label %dec_label_pc_19a76

dec_label_pc_19a76:                               ; preds = %dec_label_pc_19a6c, %dec_label_pc_19a49, %dec_label_pc_19a16
  store i32 %v0_199df, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i1 %v13_19a0d, { 1, 0 }
  uselistorder i32 %v1_19a0a, { 1, 0 }
  uselistorder i32 %v4_199e3, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_3a390, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
}

define i32 @_ZN5boost9date_time11int_adapterIjE12not_a_numberEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a8d:
  store i32 0, i32* @eax, align 8
  %v1_19aa4 = call i32 @function_2a061(i32 %arg1)
  %v1_19aa9 = add i32 %v1_19aa4, -1
  store i32 %arg1, i32* @eax, align 8
  %v2_19ab6 = call i32 @function_33aa5(i32 %arg1, i32 %v1_19aa9)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
}

define i32 @_ZN5boost9date_time11int_adapterIjE12neg_infinityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19ad3:
  store i32 0, i32* @eax, align 8
  %v1_19aea = call i32 @function_2a07e(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_19af9 = call i32 @function_33aeb(i32 %arg1, i32 %v1_19aea)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_19b0d

bb:                                               ; preds = %dec_label_pc_19ad3
  %v1_19b0b = call i32 @function_19b12()
  br label %dec_label_pc_19b0d

dec_label_pc_19b0d:                               ; preds = %bb, %dec_label_pc_19ad3
  %v2_19b0b = phi i32 [ %v1_19b0b, %bb ], [ %arg1, %dec_label_pc_19ad3 ]
  ret i32 %v2_19b0b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_19b12() local_unnamed_addr {
dec_label_pc_19b12:
  %v0_19b13 = load i32, i32* @eax, align 8
  ret i32 %v0_19b13
}

define i32 @_ZN5boost9date_time11int_adapterIjE12pos_infinityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b16:
  store i32 0, i32* @eax, align 8
  %v1_19b2d = call i32 @function_2a0ea(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_19b3c = call i32 @function_33b2e(i32 %arg1, i32 %v1_19b2d)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @_ZNK5boost9date_time11int_adapterIjE9as_numberEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_19b5a:
  %v2_19b74 = load i32, i32* %arg1, align 4
  store i32 %v2_19b74, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_19b82

bb:                                               ; preds = %dec_label_pc_19b5a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_19b80 = call i32 @function_19b87(i32 %tmp100)
  br label %dec_label_pc_19b82

dec_label_pc_19b82:                               ; preds = %bb, %dec_label_pc_19b5a
  %v3_19b80 = phi i32 [ %v2_19b80, %bb ], [ %v2_19b74, %dec_label_pc_19b5a ]
  ret i32 %v3_19b80

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_19b87(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b87:
  %v0_19b88 = load i32, i32* @eax, align 8
  ret i32 %v0_19b88
}

define i32 @_ZN5boost9date_time23gregorian_calendar_baseINS0_19year_month_day_baseINS_9gregorian9greg_yearENS3_10greg_monthENS3_8greg_dayEEEjE10day_numberERKS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b8a:
  %v1_19ba5 = add i32 %arg1, 2
  store i32 %v1_19ba5, i32* @eax, align 8
  %v1_19bab = call i32 @function_2a5ca(i32 %v1_19ba5)
  %v1_19bb0 = urem i32 %v1_19bab, 65536
  %v2_19bba = sub nsw i32 14, %v1_19bb0
  %v2_19bce = sdiv i32 %v2_19bba, 12
  %v1_19bd2 = trunc i32 %v2_19bce to i16
  store i32 %arg1, i32* @eax, align 8
  %v1_19bdc = call i32 @function_2a4a8(i32 %arg1)
  %v1_19be1 = trunc i32 %v1_19bdc to i16
  %v6_19be1 = sub i16 %v1_19be1, %v1_19bd2
  %v2_19be5 = add i16 %v6_19be1, 4800
  %v16_19be5 = zext i16 %v2_19be5 to i32
  %v18_19be5 = and i32 %v1_19bdc, -65536
  %v19_19be5 = or i32 %v16_19be5, %v18_19be5
  store i32 %v1_19ba5, i32* @eax, align 8
  %v1_19bf6 = call i32 @function_2a5ca(i32 %v1_19ba5)
  %v4_19bfd = urem i32 %v2_19bce, 65536
  %v2_19c07 = mul nuw nsw i32 %v4_19bfd, 12
  %v2_19c0a = add i32 %v1_19bf6, %v2_19c07
  %v1_19c16 = add i32 %arg1, 4
  store i32 %v1_19c16, i32* @eax, align 8
  %v1_19c1c = call i32 @function_2a386(i32 %v1_19c16)
  %v1_19c21 = urem i32 %v1_19c1c, 65536
  %tmp116 = mul i32 %v2_19c0a, 153
  %v1_19c2e = add i32 %tmp116, -457
  %v2_19c43 = sdiv i32 %v1_19c2e, 5
  %v3_19c4e = mul i32 %v19_19be5, 365
  %v3_19c5a = udiv i16 %v2_19be5, 4
  %v10_19c5a = zext i16 %v3_19c5a to i32
  %v3_19c6e = mul nuw nsw i32 %v10_19c5a, 5243
  %v3_19c773 = udiv i32 %v3_19c6e, 131072
  %v3_19c83 = udiv i16 %v2_19be5, 16
  %v10_19c83 = zext i16 %v3_19c83 to i32
  %v3_19c8a = mul nuw nsw i32 %v10_19c83, 2622
  %v2_19c90 = udiv i32 %v3_19c8a, 65536
  %v3_19c47 = add nsw i32 %v10_19c5a, -32045
  %v2_19c54 = add i32 %v3_19c47, %v3_19c4e
  %v2_19c61 = sub i32 %v2_19c54, %v3_19c773
  %v2_19c7d = add i32 %v2_19c61, %v2_19c90
  %v2_19c96 = add i32 %v2_19c7d, %v2_19c43
  %v1_19c98 = add i32 %v2_19c96, %v1_19c21
  store i32 %v1_19c98, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_19caf

bb:                                               ; preds = %dec_label_pc_19b8a
  %v2_19cad = call i32 @function_19cb4(i32 %v1_19c98)
  br label %dec_label_pc_19caf

dec_label_pc_19caf:                               ; preds = %bb, %dec_label_pc_19b8a
  %v3_19cad = phi i32 [ %v2_19cad, %bb ], [ %v1_19c98, %dec_label_pc_19b8a ]
  ret i32 %v3_19cad

; uselistorder directives
  uselistorder i32 %v1_19ba5, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_2a5ca, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_19cb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_19cb4:
  %v0_19cb9 = load i32, i32* @eax, align 8
  ret i32 %v0_19cb9
}

define i32 @_ZN5boost9date_time19year_month_day_baseINS_9gregorian9greg_yearENS2_10greg_monthENS2_8greg_dayEEC1ES3_S4_S5_(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19cba:
  %tmp97 = trunc i32 %arg4 to i16
  %tmp98 = trunc i32 %arg3 to i16
  %tmp99 = trunc i32 %arg2 to i16
  %v4_19ce9 = ptrtoint i16* %arg1 to i32
  store i16 %tmp99, i16* %arg1, align 2
  %v3_19cfa = add i32 %v4_19ce9, 2
  %v4_19cfa = inttoptr i32 %v3_19cfa to i16*
  store i16 %tmp98, i16* %v4_19cfa, align 2
  %v3_19d05 = add i32 %v4_19ce9, 4
  %v4_19d05 = inttoptr i32 %v3_19d05 to i16*
  store i16 %tmp97, i16* %v4_19d05, align 2
  ret i32 0

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @_ZN5boost9date_time23gregorian_calendar_baseINS0_19year_month_day_baseINS_9gregorian9greg_yearENS3_10greg_monthENS3_8greg_dayEEEjE12is_leap_yearES4_(i16 %arg1) local_unnamed_addr {
dec_label_pc_19d1c:
  %stack_var_-30 = alloca i16, align 2
  store i16 %arg1, i16* %stack_var_-30, align 2
  %v2_19d35 = ptrtoint i16* %stack_var_-30 to i32
  store i32 %v2_19d35, i32* @eax, align 8
  %v1_19d3b = call i32 @function_2a63a(i32 %v2_19d35)
  store i32 %v2_19d35, i32* @eax, align 8
  %v1_19d54 = call i32 @function_2a63a(i32 %v2_19d35)
  store i32 %v2_19d35, i32* @eax, align 8
  %v1_19d95 = call i32 @function_2a63a(i32 %v2_19d35)
  %v1_19d9e = trunc i32 %v1_19d95 to i16
  %v3_19d9e = udiv i16 %v1_19d9e, 16
  %v10_19d9e = zext i16 %v3_19d9e to i32
  %v12_19d9e = and i32 %v1_19d95, -65536
  %v13_19d9e = or i32 %v10_19d9e, %v12_19d9e
  ret i32 %v13_19d9e

; uselistorder directives
  uselistorder i32 (i32)* @function_2a63a, { 2, 1, 0 }
}

define i32 @function_19da2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_19da2:
  %v0_19da2 = load i32, i32* @eax, align 8
  %v1_19da2 = urem i32 %v0_19da2, 65536
  %v3_19da5 = mul nuw nsw i32 %v1_19da2, 2622
  %v2_19dab = udiv i32 %v3_19da5, 65536
  %v2_19dc0 = mul nuw nsw i32 %v2_19dab, 400
  %v0_19dc3 = load i32, i32* @edx, align 4
  %v1_19dc5 = trunc i32 %v0_19dc3 to i16
  %v3_19dc5 = trunc i32 %v2_19dc0 to i16
  %v14_19dc5 = icmp eq i16 %v1_19dc5, %v3_19dc5
  %. = zext i1 %v14_19dc5 to i32
  ret i32 %.
}

define i32 @_ZN5boost17enable_error_infoINS_9gregorian16bad_day_of_monthEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19dee:
  store i32 %arg1, i32* @eax, align 8
  %v2_19e18 = call i32 @function_3a81e(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19e35:
  %v4_19e35 = add i32 %arg1, -8
  %v1_19e3a = call i32 @function_33c75(i32 %v4_19e35)
  ret i32 %v1_19e3a
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev(i32* %arg1) {
dec_label_pc_19e40:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f99c_type* @global_var_3f99c.2836 to i32), i32* %arg1, align 4
  %v1_19e63 = add i32 %tmp100, 8
  %v2_19e63 = inttoptr i32 %v1_19e63 to i32*
  store i32 ptrtoint (i32* @global_var_3f9b0.2837 to i32), i32* %v2_19e63, align 4
  store i32 %v1_19e63, i32* @eax, align 8
  %v2_19e73 = call i32 @function_28564(i32* %v2_19e63)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_19ea6

bb:                                               ; preds = %dec_label_pc_19e40
  %v1_19ea4 = call i32 @function_19eab()
  br label %dec_label_pc_19ea6

dec_label_pc_19ea6:                               ; preds = %bb, %dec_label_pc_19e40
  %v2_19ea4 = phi i32 [ %v1_19ea4, %bb ], [ 0, %dec_label_pc_19e40 ]
  ret i32 %v2_19ea4
}

define i32 @function_19eab() local_unnamed_addr {
dec_label_pc_19eab:
  %v0_19eac = load i32, i32* @eax, align 8
  ret i32 %v0_19eac
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19eae:
  %v4_19eae = add i32 %arg1, -8
  %v1_19eb3 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32 %v4_19eae)
  ret i32 %v1_19eb3
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32 %arg1) {
dec_label_pc_19eb6:
  store i32 %arg1, i32* @eax, align 8
  %v1_19ed3 = call i32 @function_33cee(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_19ee2() local_unnamed_addr {
dec_label_pc_19ee2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_19ee2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19ee2 = add i32 %v0_19ee2, 862319685
  %v2_19ee2 = inttoptr i32 %v1_19ee2 to i32*
  %v3_19ee2 = load i32, i32* %v2_19ee2, align 4
  %v4_19ee2 = add i32 %v3_19ee2, -1
  store i32 %v4_19ee2, i32* %v2_19ee2, align 4
  %v0_19ee8 = load i32, i32* %eax.global-to-local, align 8
  %v1_19ee8 = add i32 %v0_19ee8, 20
  store i32 %v1_19ee8, i32* %eax.global-to-local, align 8
  ret i32 %v1_19ee8
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEEEENS1_10clone_implIT_EERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19ef6:
  store i32 %arg1, i32* @eax, align 8
  %v2_19f20 = call i32 @function_3a98a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_19f34

bb:                                               ; preds = %dec_label_pc_19ef6
  %v1_19f32 = call i32 @function_19f39()
  br label %dec_label_pc_19f34

dec_label_pc_19f34:                               ; preds = %bb, %dec_label_pc_19ef6
  %v2_19f32 = phi i32 [ %v1_19f32, %bb ], [ %arg1, %dec_label_pc_19ef6 ]
  ret i32 %v2_19f32

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_19f39() local_unnamed_addr {
dec_label_pc_19f39:
  %v0_19f3a = load i32, i32* @eax, align 8
  ret i32 %v0_19f3a
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19f3d:
  %eax.global-to-local = alloca i32, align 4
  %v0_19f42 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19f42
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19f47:
  %eax.global-to-local = alloca i32, align 4
  %v0_19f4c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19f4c
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32 %arg1) {
dec_label_pc_19f52:
  ret i32 %arg1
}

define i32 @function_19f63(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19f63:
  %v0_19f63 = load i32, i32* @ecx, align 8
  %v1_19f63 = add i32 %v0_19f63, -1070468027
  %v2_19f63 = inttoptr i32 %v1_19f63 to i8*
  %v3_19f63 = load i8, i8* %v2_19f63, align 1
  %v5_19f63 = trunc i32 %v0_19f63 to i8
  %v6_19f63 = add i8 %v3_19f63, %v5_19f63
  store i8 %v6_19f63, i8* %v2_19f63, align 1
  %v0_19f69 = load i32, i32* @ebp, align 4
  %v1_19f69 = add i32 %v0_19f69, -28
  %v2_19f69 = inttoptr i32 %v1_19f69 to i32*
  %v3_19f69 = load i32, i32* %v2_19f69, align 4
  %v1_19f6c = inttoptr i32 %v3_19f69 to i32*
  store i32 ptrtoint (%vtable_3f93c_type* @global_var_3f93c.2838 to i32), i32* %v1_19f6c, align 4
  %v0_19f72 = load i32, i32* @ebp, align 4
  %v1_19f72 = add i32 %v0_19f72, -28
  %v2_19f72 = inttoptr i32 %v1_19f72 to i32*
  %v3_19f72 = load i32, i32* %v2_19f72, align 4
  %v1_19f75 = add i32 %v3_19f72, 8
  %v2_19f75 = inttoptr i32 %v1_19f75 to i32*
  store i32 ptrtoint (i32* @global_var_3f958.2839 to i32), i32* %v2_19f75, align 4
  %v0_19f7c = load i32, i32* @ebp, align 4
  %v1_19f7c = add i32 %v0_19f7c, -28
  %v2_19f7c = inttoptr i32 %v1_19f7c to i32*
  %v3_19f7c = load i32, i32* %v2_19f7c, align 4
  %v1_19f7f = add i32 %v3_19f7c, 28
  %v2_19f7f = inttoptr i32 %v1_19f7f to i32*
  store i32 ptrtoint (i32* @global_var_3f968.2840 to i32), i32* %v2_19f7f, align 4
  %v0_19f86 = load i32, i32* @ebp, align 4
  %v1_19f86 = add i32 %v0_19f86, -28
  %v2_19f86 = inttoptr i32 %v1_19f86 to i32*
  %v3_19f86 = load i32, i32* %v2_19f86, align 4
  %v1_19f89 = add i32 %v3_19f86, 28
  store i32 %v1_19f89, i32* @eax, align 8
  %v1_19f8f = call i32 @function_29eee(i32 %v1_19f89)
  %v0_19f94 = load i32, i32* @ebp, align 4
  %v1_19f94 = add i32 %v0_19f94, -28
  %v2_19f94 = inttoptr i32 %v1_19f94 to i32*
  %v3_19f94 = load i32, i32* %v2_19f94, align 4
  %v1_19f9a = call i32 @function_33d92(i32 %v3_19f94)
  %v0_19fb6 = load i32, i32* @ebp, align 4
  %v1_19fb6 = add i32 %v0_19fb6, -12
  %v2_19fb6 = inttoptr i32 %v1_19fb6 to i32*
  %v3_19fb6 = load i32, i32* %v2_19fb6, align 4
  %v1_19fb9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19fb9 = xor i32 %v1_19fb9, %v3_19fb6
  ret i32 %v2_19fb9
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19fca:
  %v4_19fca = add i32 %arg1, -28
  %v1_19fcf = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %v4_19fca)
  ret i32 %v1_19fcf
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19fd1:
  %v4_19fd1 = add i32 %arg1, -8
  %v1_19fd6 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %v4_19fd1)
  ret i32 %v1_19fd6
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %arg1) {
dec_label_pc_19fd8:
  store i32 %arg1, i32* @eax, align 8
  %v1_19ff5 = call i32 @function_33f1c(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1a015() local_unnamed_addr {
dec_label_pc_1a015:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a015 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1a015 = add i32 %v0_1a015, -1
  store i32 %v1_1a015, i32* %ecx.global-to-local, align 8
  %v0_1a017 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a017
}

define i32 @_ZN5boost9date_time11int_adapterIjEC1Ej(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a018:
  ret i32 %arg2
}

define i32 @function_1a02b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a02b:
  %v0_1a02b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a030 = load i32, i32* @ebp, align 4
  %v2_1a030 = add i32 %v1_1a030, -12
  %v3_1a030 = inttoptr i32 %v2_1a030 to i32*
  store i32 %v0_1a02b, i32* %v3_1a030, align 4
  %v0_1a035 = load i32, i32* @ebp, align 4
  %v1_1a035 = add i32 %v0_1a035, -28
  %v2_1a035 = inttoptr i32 %v1_1a035 to i32*
  %v3_1a035 = load i32, i32* %v2_1a035, align 4
  %v1_1a038 = add i32 %v0_1a035, -32
  %v2_1a038 = inttoptr i32 %v1_1a038 to i32*
  %v3_1a038 = load i32, i32* %v2_1a038, align 4
  %v2_1a03b = inttoptr i32 %v3_1a035 to i32*
  store i32 %v3_1a038, i32* %v2_1a03b, align 4
  %v0_1a03d = load i32, i32* @ebp, align 4
  %v1_1a03d = add i32 %v0_1a03d, -12
  %v2_1a03d = inttoptr i32 %v1_1a03d to i32*
  %v3_1a03d = load i32, i32* %v2_1a03d, align 4
  %v1_1a040 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a040 = xor i32 %v1_1a040, %v3_1a03d
  %v3_1a040 = icmp eq i32 %v2_1a040, 0
  store i32 %v2_1a040, i32* @eax, align 8
  br i1 %v3_1a040, label %bb, label %dec_label_pc_1a049

bb:                                               ; preds = %dec_label_pc_1a02b
  %v1_1a047 = call i32 @function_1a04e()
  br label %dec_label_pc_1a049

dec_label_pc_1a049:                               ; preds = %bb, %dec_label_pc_1a02b
  %v2_1a047 = phi i32 [ %v1_1a047, %bb ], [ %v2_1a040, %dec_label_pc_1a02b ]
  ret i32 %v2_1a047
}

define i32 @function_1a04e() local_unnamed_addr {
dec_label_pc_1a04e:
  %v0_1a04f = load i32, i32* @eax, align 8
  ret i32 %v0_1a04f
}

define i32 @_ZN5boost9date_time22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiE13to_tick_countEiiix(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a050:
  %v4_1a059 = trunc i64 %arg1 to i32
  %v12_1a082 = icmp slt i32 %v4_1a059, 0
  br i1 %v12_1a082, label %dec_label_pc_1a09e, label %dec_label_pc_1a088

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a050
  %v12_1a088 = icmp slt i32 %arg2, 0
  br i1 %v12_1a088, label %dec_label_pc_1a09e, label %dec_label_pc_1a08e

dec_label_pc_1a08e:                               ; preds = %dec_label_pc_1a088
  %v12_1a08e = icmp slt i32 %arg3, 0
  br i1 %v12_1a08e, label %dec_label_pc_1a09e, label %dec_label_pc_1a094

dec_label_pc_1a094:                               ; preds = %dec_label_pc_1a08e
  %v11_1a094 = icmp slt i32 %arg5, 0
  %v1_1a098 = icmp eq i1 %v11_1a094, false
  br i1 %v1_1a098, label %dec_label_pc_1a165, label %dec_label_pc_1a09e

dec_label_pc_1a09e:                               ; preds = %dec_label_pc_1a094, %dec_label_pc_1a08e, %dec_label_pc_1a088, %dec_label_pc_1a050
  %v2_1a0a4 = call i32 @function_2ee79(i32 %v4_1a059)
  %v2_1a0b2 = call i32 @function_2ee79(i32 %arg2)
  %v2_1a0c0 = call i32 @function_2ee79(i32 %arg3)
  store i32 %arg4, i32* @eax, align 8
  %v3_1a0d5 = call i32 @function_3ad4c(i32 %arg4, i32 %arg5)
  %v5_1a15a = sub i32 0, %v3_1a0d5
  br label %dec_label_pc_1a1e5

dec_label_pc_1a165:                               ; preds = %dec_label_pc_1a094
  br label %dec_label_pc_1a1e5

dec_label_pc_1a1e5:                               ; preds = %dec_label_pc_1a165, %dec_label_pc_1a09e
  %storemerge = phi i32 [ %v5_1a15a, %dec_label_pc_1a09e ], [ %arg4, %dec_label_pc_1a165 ]
  %v2_1a1ef10 = phi i32 [ %v5_1a15a, %dec_label_pc_1a09e ], [ %arg4, %dec_label_pc_1a165 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a1f1

bb:                                               ; preds = %dec_label_pc_1a1e5
  %v1_1a1ef = call i32 @function_1a1f6()
  br label %dec_label_pc_1a1f1

dec_label_pc_1a1f1:                               ; preds = %bb, %dec_label_pc_1a1e5
  %v2_1a1ef = phi i32 [ %v1_1a1ef, %bb ], [ %v2_1a1ef10, %dec_label_pc_1a1e5 ]
  ret i32 %v2_1a1ef

; uselistorder directives
  uselistorder i32 (i32)* @function_2ee79, { 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 3, 2 }
}

define i32 @function_1a1f6() local_unnamed_addr {
dec_label_pc_1a1f6:
  %v0_1a1fd = load i32, i32* @eax, align 8
  ret i32 %v0_1a1fd
}

define i32 @_ZN5boost9date_time11int_adapterIxEC1Ex(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a1fe:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_1a22c = add i32 %tmp103, 4
  %v3_1a22c = inttoptr i32 %v2_1a22c to i32*
  store i32 %arg3, i32* %v3_1a22c, align 4
  ret i32 0
}

define i32 @_ZN5boost9date_time11int_adapterIxE12from_specialENS0_14special_valuesE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a242:
  store i32 %arg2, i32* @1, align 4
  switch i32 %arg2, label %dec_label_pc_1a2c0 [
    i32 0, label %dec_label_pc_1a270
    i32 1, label %dec_label_pc_1a280
    i32 2, label %dec_label_pc_1a290
    i32 3, label %dec_label_pc_1a2b0
    i32 4, label %dec_label_pc_1a2a0
  ]

dec_label_pc_1a270:                               ; preds = %dec_label_pc_1a242
  store i32 %arg1, i32* @eax, align 8
  %v1_1a276 = call i32 @function_3af8e(i32 %arg1)
  br label %dec_label_pc_1a2ce

dec_label_pc_1a280:                               ; preds = %dec_label_pc_1a242
  br label %dec_label_pc_1a2ce

dec_label_pc_1a290:                               ; preds = %dec_label_pc_1a242
  store i32 %arg1, i32* @eax, align 8
  %v1_1a296 = call i32 @function_3b022(i32 %arg1)
  br label %dec_label_pc_1a2ce

dec_label_pc_1a2a0:                               ; preds = %dec_label_pc_1a242
  store i32 %arg1, i32* @eax, align 8
  %v1_1a2a6 = call i32 @function_3b069(i32 %arg1)
  br label %dec_label_pc_1a2ce

dec_label_pc_1a2b0:                               ; preds = %dec_label_pc_1a242
  store i32 %arg1, i32* @eax, align 8
  %v1_1a2b6 = call i32 @function_3b0b6(i32 %arg1)
  br label %dec_label_pc_1a2ce

dec_label_pc_1a2c0:                               ; preds = %dec_label_pc_1a242
  store i32 %arg1, i32* @eax, align 8
  %v1_1a2c6 = call i32 @function_3af8e(i32 %arg1)
  br label %dec_label_pc_1a2ce

dec_label_pc_1a2ce:                               ; preds = %dec_label_pc_1a2b0, %dec_label_pc_1a2a0, %dec_label_pc_1a290, %dec_label_pc_1a280, %dec_label_pc_1a270, %dec_label_pc_1a2c0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 10, 9, 6, 5, 8, 7, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1a2ce, { 5, 0, 1, 2, 3, 4 }
}

define i32 @_ZN5boost9date_time19counted_time_systemINS0_16counted_time_repINS_10posix_time33millisec_posix_time_system_configEEEE12get_time_repERKNS_9gregorian4dateERKNS3_13time_durationENS0_9dst_flagsE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a2fc:
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-44, align 4
  store i1 false, i1* @cf, align 1
  %v2_1a325 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1a325, i32* @eax, align 8
  %v1_1a32b = call i32 @function_3b1bd(i32 %v2_1a325)
  store i32 %arg1, i32* @eax, align 8
  %v3_1a344 = call i32 @function_3b1e8(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a358

bb:                                               ; preds = %dec_label_pc_1a2fc
  %v1_1a356 = call i32 @function_1a35d()
  br label %dec_label_pc_1a358

dec_label_pc_1a358:                               ; preds = %bb, %dec_label_pc_1a2fc
  %v2_1a356 = phi i32 [ %v1_1a356, %bb ], [ %arg1, %dec_label_pc_1a2fc ]
  ret i32 %v2_1a356

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1a35d() local_unnamed_addr {
dec_label_pc_1a35d:
  %v0_1a35e = load i32, i32* @eax, align 8
  ret i32 %v0_1a35e
}

define i32 @_ZN5boost9date_time14microsec_clockINS_10posix_time5ptimeEE11create_timeEPFP2tmPKlS6_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a361:
  %stack_var_-68 = alloca i32, align 4
  %v2_1a38b = ptrtoint i32* %stack_var_-68 to i32
  ret i32 %v2_1a38b
}

define i32 @function_1a4ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a4ca:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a4ca = load i32, i32* %ecx.global-to-local, align 8
  %v1_1a4ca = add i32 %v0_1a4ca, ptrtoint ([126 x i8]* @global_var_a0c4.2862 to i32)
  %v2_1a4ca = inttoptr i32 %v1_1a4ca to i32*
  %v3_1a4ca = load i32, i32* %v2_1a4ca, align 4
  %v4_1a4ca = add i32 %v3_1a4ca, 1
  store i32 %v4_1a4ca, i32* %v2_1a4ca, align 4
  %v0_1a4d0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a4d0 = add i32 %v0_1a4d0, 94
  %v2_1a4d0 = inttoptr i32 %v1_1a4d0 to i8*
  %v3_1a4d0 = load i8, i8* %v2_1a4d0, align 1
  %v5_1a4d0 = trunc i32 %v0_1a4d0 to i8
  %v6_1a4d0 = add i8 %v3_1a4d0, %v5_1a4d0
  store i8 %v6_1a4d0, i8* %v2_1a4d0, align 1
  %v0_1a4d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a4d4
}

define i32 @_ZN5boost9date_time19counted_time_systemINS0_16counted_time_repINS_10posix_time33millisec_posix_time_system_configEEEE14subtract_timesERKS5_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a4d7:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_1a502 = call i32 @function_3b519(i32 %arg2)
  %v4_1a507 = trunc i32 %v1_1a502 to i8
  %v5_1a507 = icmp eq i8 %v4_1a507, 0
  %v1_1a509 = icmp eq i1 %v5_1a507, false
  br i1 %v1_1a509, label %dec_label_pc_1a526, label %dec_label_pc_1a50b

dec_label_pc_1a50b:                               ; preds = %dec_label_pc_1a4d7
  %v1_1a511 = call i32 @function_3b519(i32 %arg3)
  %v4_1a516 = trunc i32 %v1_1a511 to i8
  %v5_1a516 = icmp ne i8 %v4_1a516, 0
  %phitmp131 = icmp eq i1 %v5_1a516, false
  br label %dec_label_pc_1a526

dec_label_pc_1a526:                               ; preds = %dec_label_pc_1a50b, %dec_label_pc_1a4d7
  %storemerge4 = phi i1 [ false, %dec_label_pc_1a4d7 ], [ %phitmp131, %dec_label_pc_1a50b ]
  br i1 %storemerge4, label %dec_label_pc_1a598, label %dec_label_pc_1a52a

dec_label_pc_1a52a:                               ; preds = %dec_label_pc_1a526
  %v2_1a52a = ptrtoint i32* %stack_var_-40 to i32
  %v2_1a537 = call i32 @__stack_chk_fail.1519(i32 %v2_1a52a, i32 %arg3)
  %v2_1a53f = ptrtoint i32* %stack_var_-32 to i32
  %v2_1a54c = call i32 @__stack_chk_fail.1519(i32 %v2_1a53f, i32 %arg2)
  %v2_1a554 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1a554, i32* @eax, align 8
  store i32 %v2_1a53f, i32* @edx, align 4
  %v3_1a568 = call i32 @function_3b71d(i32 %v2_1a554, i32 %v2_1a53f, i32 %v2_1a52a)
  %v1_1a576 = call i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKS9_EEEEPKvEENT_11result_typeEiiRSS_T0_(i32 %v2_1a554)
  store i32 %v1_1a576, i32* @eax, align 8
  %v2_1a582 = call i32 @function_3b690(i32 %v1_1a576, i32 %v2_1a53f)
  %v2_1a591 = call i32 @function_2b195(i32 %arg1, i32 %v2_1a582)
  br label %dec_label_pc_1a5f9

dec_label_pc_1a598:                               ; preds = %dec_label_pc_1a526
  store i32 %arg2, i32* @eax, align 8
  %v1_1a59e = call i32 @function_3b5ef(i32 %arg2)
  %v0_1a5a6 = load i32, i32* @edx, align 4
  store i32 %arg3, i32* @eax, align 8
  %v1_1a5af = call i32 @function_3b5ef(i32 %arg3)
  %v2_1a5ba = sub i32 %v1_1a59e, %v1_1a5af
  %v7_1a5ba = icmp ult i32 %v1_1a59e, %v1_1a5af
  %v1_1a5bc = load i32, i32* @edx, align 4
  %v3_1a5bc = zext i1 %v7_1a5ba to i32
  %v4_1a5bc = sub i32 %v0_1a5a6, %v1_1a5bc
  %v5_1a5bc = add i32 %v4_1a5bc, %v3_1a5bc
  store i32 %v5_1a5bc, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 8
  %v6_1a5f4 = call i32 @function_2b11f(i32 %arg1, i32 0, i32 0, i32 0, i32 %v2_1a5ba, i32 %v5_1a5bc)
  br label %dec_label_pc_1a5f9

dec_label_pc_1a5f9:                               ; preds = %dec_label_pc_1a598, %dec_label_pc_1a52a
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a608

bb:                                               ; preds = %dec_label_pc_1a5f9
  %v1_1a606 = call i32 @function_1a60d()
  br label %dec_label_pc_1a608

dec_label_pc_1a608:                               ; preds = %bb, %dec_label_pc_1a5f9
  %v2_1a606 = phi i32 [ %v1_1a606, %bb ], [ %arg1, %dec_label_pc_1a5f9 ]
  ret i32 %v2_1a606

; uselistorder directives
  uselistorder i32 %v1_1a5af, { 1, 0 }
  uselistorder i32 (i32)* @function_3b5ef, { 1, 0 }
  uselistorder i32 (i32, i32)* @__stack_chk_fail.1519, { 1, 0 }
  uselistorder i32 (i32)* @function_3b519, { 1, 0 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 0, 2, 4, 3, 1 }
}

define i32 @function_1a60d() local_unnamed_addr {
dec_label_pc_1a60d:
  %v0_1a613 = load i32, i32* @eax, align 8
  ret i32 %v0_1a613
}

define i32 @_ZNK5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEE5ticksEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a616:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1a630 = add i32 %tmp101, 4
  %v2_1a630 = inttoptr i32 %v1_1a630 to i32*
  %v3_1a630 = load i32, i32* %v2_1a630, align 4
  %v2_1a633 = load i32, i32* %arg1, align 4
  store i32 %v2_1a633, i32* @eax, align 8
  %v2_1a63c = call i32 @function_3ba4e(i32 %v2_1a633, i32 %v3_1a630)
  store i32 %v2_1a63c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a64d

bb:                                               ; preds = %dec_label_pc_1a616
  %v1_1a64b = call i32 @function_1a652()
  br label %dec_label_pc_1a64d

dec_label_pc_1a64d:                               ; preds = %bb, %dec_label_pc_1a616
  %v2_1a64b = phi i32 [ %v1_1a64b, %bb ], [ %v2_1a63c, %dec_label_pc_1a616 ]
  ret i32 %v2_1a64b
}

define i32 @function_1a652() local_unnamed_addr {
dec_label_pc_1a652:
  %v0_1a653 = load i32, i32* @eax, align 8
  ret i32 %v0_1a653
}

define i32 @_ZNK5boost9date_time4dateINS_9gregorian4dateENS2_18gregorian_calendarENS2_13date_durationEE11is_infinityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a654:
  %v2_1a66e = load i32, i32* %arg1, align 4
  store i32 %v2_1a66e, i32* @eax, align 8
  %v1_1a673 = call i32 @function_3bace(i32 %v2_1a66e)
  store i32 %v1_1a673, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a684

bb:                                               ; preds = %dec_label_pc_1a654
  %v1_1a682 = call i32 @function_1a689()
  br label %dec_label_pc_1a684

dec_label_pc_1a684:                               ; preds = %bb, %dec_label_pc_1a654
  %v2_1a682 = phi i32 [ %v1_1a682, %bb ], [ %v1_1a673, %dec_label_pc_1a654 ]
  ret i32 %v2_1a682
}

define i32 @function_1a689() local_unnamed_addr {
dec_label_pc_1a689:
  %v0_1a68a = load i32, i32* @eax, align 8
  ret i32 %v0_1a68a
}

define i32 @_ZNK5boost9date_time4dateINS_9gregorian4dateENS2_18gregorian_calendarENS2_13date_durationEE13is_not_a_dateEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a68c:
  %v2_1a6a6 = load i32, i32* %arg1, align 4
  store i32 %v2_1a6a6, i32* @eax, align 8
  %v1_1a6ab = call i32 @function_3bb78(i32 %v2_1a6a6)
  store i32 %v1_1a6ab, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a6bc

bb:                                               ; preds = %dec_label_pc_1a68c
  %v1_1a6ba = call i32 @function_1a6c1()
  br label %dec_label_pc_1a6bc

dec_label_pc_1a6bc:                               ; preds = %bb, %dec_label_pc_1a68c
  %v2_1a6ba = phi i32 [ %v1_1a6ba, %bb ], [ %v1_1a6ab, %dec_label_pc_1a68c ]
  ret i32 %v2_1a6ba
}

define i32 @function_1a6c1() local_unnamed_addr {
dec_label_pc_1a6c1:
  %v0_1a6c2 = load i32, i32* @eax, align 8
  ret i32 %v0_1a6c2
}

define i32 @_ZN5boost9date_time22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiE10res_adjustEv() local_unnamed_addr {
dec_label_pc_1a6c3:
  %v0_1a6c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 1000000, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a6ea

bb:                                               ; preds = %dec_label_pc_1a6c3
  %v2_1a6e8 = call i32 @function_1a6ef(i32 %v0_1a6c9)
  br label %dec_label_pc_1a6ea

dec_label_pc_1a6ea:                               ; preds = %bb, %dec_label_pc_1a6c3
  %v3_1a6e8 = phi i32 [ %v2_1a6e8, %bb ], [ 1000000, %dec_label_pc_1a6c3 ]
  ret i32 %v3_1a6e8
}

define i32 @function_1a6ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a6ef:
  %v0_1a6f0 = load i32, i32* @eax, align 8
  ret i32 %v0_1a6f0
}

define i32 @_ZN5boost17enable_error_infoINS_10lock_errorEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a6f1:
  store i32 %arg1, i32* @eax, align 8
  %v2_1a71b = call i32 @function_3bcb3(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a738:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a73d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a73d
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32* %arg1) {
dec_label_pc_1a742:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f8fc_type* @global_var_3f8fc.2842 to i32), i32* %arg1, align 4
  %v1_1a765 = add i32 %tmp100, 8
  %v2_1a765 = inttoptr i32 %v1_1a765 to i32*
  store i32 ptrtoint (i32* @global_var_3f910.2843 to i32), i32* %v2_1a765, align 4
  store i32 %v1_1a765, i32* @eax, align 8
  %v1_1a775 = call i32 @function_28e66(i32 %v1_1a765)
  store i32 %tmp100, i32* @eax, align 8
  %v1_1a780 = call i32 @function_20a20(i32 %tmp100)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a7a8

bb:                                               ; preds = %dec_label_pc_1a742
  %v1_1a7a6 = call i32 @function_1a7ad()
  br label %dec_label_pc_1a7a8

dec_label_pc_1a7a8:                               ; preds = %bb, %dec_label_pc_1a742
  %v2_1a7a6 = phi i32 [ %v1_1a7a6, %bb ], [ 0, %dec_label_pc_1a742 ]
  ret i32 %v2_1a7a6

; uselistorder directives
  uselistorder i32 %v1_1a765, { 1, 0, 2 }
  uselistorder i32 %tmp100, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f8fc_type* @global_var_3f8fc.2842 to i32), { 1, 0 }
}

define i32 @function_1a7ad() local_unnamed_addr {
dec_label_pc_1a7ad:
  %v0_1a7ae = load i32, i32* @eax, align 8
  ret i32 %v0_1a7ae
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a7b0:
  %v4_1a7b0 = add i32 %arg1, -8
  %v1_1a7b5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %v4_1a7b0)
  ret i32 %v1_1a7b5

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) {
dec_label_pc_1a7b8:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_1a7d5 = call i32 @function_34ef2(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_10lock_errorEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a7f8:
  store i32 %arg1, i32* @eax, align 8
  %v2_1a822 = call i32 @function_3be1e(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a83f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a844 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a844
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a849:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a84e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a84e
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_1a854:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f89c_type* @global_var_3f89c.2844 to i32), i32* %arg1, align 4
  %v1_1a877 = add i32 %tmp100, 8
  %v2_1a877 = inttoptr i32 %v1_1a877 to i32*
  store i32 ptrtoint (i32* @global_var_3f8b8.2845 to i32), i32* %v2_1a877, align 4
  %v1_1a881 = add i32 %tmp100, 28
  %v2_1a881 = inttoptr i32 %v1_1a881 to i32*
  store i32 ptrtoint (i32* @global_var_3f8c8.2846 to i32), i32* %v2_1a881, align 4
  store i32 %v1_1a881, i32* @eax, align 8
  %v1_1a891 = call i32 @function_2a7f0(i32 %v1_1a881)
  store i32 %tmp100, i32* @eax, align 8
  %v1_1a89c = call i32 @function_34f96(i32 %tmp100)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a8c4

bb:                                               ; preds = %dec_label_pc_1a854
  %v1_1a8c2 = call i32 @function_1a8c9()
  br label %dec_label_pc_1a8c4

dec_label_pc_1a8c4:                               ; preds = %bb, %dec_label_pc_1a854
  %v2_1a8c2 = phi i32 [ %v1_1a8c2, %bb ], [ 0, %dec_label_pc_1a854 ]
  ret i32 %v2_1a8c2

; uselistorder directives
  uselistorder i32 %v1_1a881, { 1, 0, 2 }
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f89c_type* @global_var_3f89c.2844 to i32), { 1, 0 }
}

define i32 @function_1a8c9() local_unnamed_addr {
dec_label_pc_1a8c9:
  %v0_1a8ca = load i32, i32* @eax, align 8
  ret i32 %v0_1a8ca
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8cc:
  %v4_1a8cc = add i32 %arg1, -28
  %v1_1a8d1 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_1a8cc)
  ret i32 %v1_1a8d1
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8d3:
  %v4_1a8d3 = add i32 %arg1, -8
  %v1_1a8d8 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_1a8d3)
  ret i32 %v1_1a8d8

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) {
dec_label_pc_1a8da:
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a91a:
  %v2_1a934 = load i32, i32* %arg1, align 4
  %v1_1a936 = icmp eq i32 %v2_1a934, 0
  br i1 %v1_1a936, label %dec_label_pc_1a950, label %dec_label_pc_1a93a

dec_label_pc_1a93a:                               ; preds = %dec_label_pc_1a91a
  br label %dec_label_pc_1a950

dec_label_pc_1a950:                               ; preds = %dec_label_pc_1a93a, %dec_label_pc_1a91a
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1a95c

bb:                                               ; preds = %dec_label_pc_1a950
  %v1_1a95a = call i32 @function_1a961()
  br label %dec_label_pc_1a95c

dec_label_pc_1a95c:                               ; preds = %bb, %dec_label_pc_1a950
  %v2_1a95a = phi i32 [ %v1_1a95a, %bb ], [ 0, %dec_label_pc_1a950 ]
  ret i32 %v2_1a95a
}

define i32 @function_1a961() local_unnamed_addr {
dec_label_pc_1a961:
  %v0_1a962 = load i32, i32* @eax, align 8
  ret i32 %v0_1a962
}

define i32 @_ZN5boost16exception_detail10clone_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a964:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1a964 = load i32, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_3fbcc.2807 to i32), i32* %arg1, align 4
  store i32 %v0_1a964, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a998:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @edx, align 4
  %v2_1a9c3 = call i32 @function_2fddc(i32 %tmp104, i32 %arg2)
  %v1_1a9cb = add i32 %tmp104, 24
  store i32 %v1_1a9cb, i32* @eax, align 8
  %v1_1a9d1 = call i32 @function_352fc(i32 %v1_1a9cb)
  store i32 ptrtoint (%vtable_3fadc_type* @global_var_3fadc.2850 to i32), i32* %arg1, align 4
  %v1_1a9e2 = add i32 %tmp104, 20
  %v2_1a9e2 = inttoptr i32 %v1_1a9e2 to i32*
  store i32 ptrtoint (i32* @global_var_3faf4.2851 to i32), i32* %v2_1a9e2, align 4
  %v2_1a9ec = inttoptr i32 %v1_1a9cb to i32*
  store i32 ptrtoint (i32* @global_var_3fb08.2852 to i32), i32* %v2_1a9ec, align 4
  store i32 %tmp104, i32* @eax, align 8
  %v2_1aa00 = call i32 @function_2a9be(i32 %tmp104, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1aa38

bb:                                               ; preds = %dec_label_pc_1a998
  %v1_1aa36 = call i32 @function_1aa3d()
  br label %dec_label_pc_1aa38

dec_label_pc_1aa38:                               ; preds = %bb, %dec_label_pc_1a998
  %v2_1aa36 = phi i32 [ %v1_1aa36, %bb ], [ 0, %dec_label_pc_1a998 ]
  ret i32 %v2_1aa36

; uselistorder directives
  uselistorder i32 %tmp104, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_1aa3d() local_unnamed_addr {
dec_label_pc_1aa3d:
  %v0_1aa42 = load i32, i32* @eax, align 8
  ret i32 %v0_1aa42
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aa43:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa48 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa48
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aa4d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa52
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_1aa58:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fadc_type* @global_var_3fadc.2850 to i32), i32* %arg1, align 4
  %v1_1aa7b = add i32 %tmp100, 20
  %v2_1aa7b = inttoptr i32 %v1_1aa7b to i32*
  store i32 ptrtoint (i32* @global_var_3faf4.2851 to i32), i32* %v2_1aa7b, align 4
  %v1_1aa85 = add i32 %tmp100, 24
  %v2_1aa85 = inttoptr i32 %v1_1aa85 to i32*
  store i32 ptrtoint (i32* @global_var_3fb08.2852 to i32), i32* %v2_1aa85, align 4
  store i32 %v1_1aa85, i32* @eax, align 8
  %v1_1aa95 = call i32 @function_2a9f4(i32 %v1_1aa85)
  store i32 %tmp100, i32* @eax, align 8
  %v1_1aaa0 = call i32 @function_2fd9a(i32 %tmp100)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1aac8

bb:                                               ; preds = %dec_label_pc_1aa58
  %v1_1aac6 = call i32 @function_1aacd()
  br label %dec_label_pc_1aac8

dec_label_pc_1aac8:                               ; preds = %bb, %dec_label_pc_1aa58
  %v2_1aac6 = phi i32 [ %v1_1aac6, %bb ], [ 0, %dec_label_pc_1aa58 ]
  ret i32 %v2_1aac6

; uselistorder directives
  uselistorder i32 %v1_1aa85, { 1, 0, 2 }
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3fadc_type* @global_var_3fadc.2850 to i32), { 2, 1, 0 }
}

define i32 @function_1aacd() local_unnamed_addr {
dec_label_pc_1aacd:
  %v0_1aace = load i32, i32* @eax, align 8
  ret i32 %v0_1aace
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aad0:
  %v4_1aad0 = add i32 %arg1, -24
  %v1_1aad5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_1aad0)
  ret i32 %v1_1aad5
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aad7:
  %v4_1aad7 = add i32 %arg1, -20
  %v1_1aadc = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_1aad7)
  ret i32 %v1_1aadc

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) {
dec_label_pc_1aade:
  store i32 %arg1, i32* @eax, align 8
  %v1_1aafb = call i32 @function_35528(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ab1e:
  %v2_1ab48 = call i32 @function_3c1f5(i32 %arg1, i32 %arg2)
  store i32 %v2_1ab48, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ab59

bb:                                               ; preds = %dec_label_pc_1ab1e
  %v1_1ab57 = call i32 @function_1ab5e()
  br label %dec_label_pc_1ab59

dec_label_pc_1ab59:                               ; preds = %bb, %dec_label_pc_1ab1e
  %v2_1ab57 = phi i32 [ %v1_1ab57, %bb ], [ %v2_1ab48, %dec_label_pc_1ab1e ]
  ret i32 %v2_1ab57
}

define i32 @function_1ab5e() local_unnamed_addr {
dec_label_pc_1ab5e:
  %v0_1ab5f = load i32, i32* @eax, align 8
  ret i32 %v0_1ab5f
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ab60:
  store i32 %arg1, i32* @eax, align 8
  %v2_1ab8a = call i32 @function_3c275(i32 %arg1, i32 %arg2)
  store i32 %v2_1ab8a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ab9b

bb:                                               ; preds = %dec_label_pc_1ab60
  %v1_1ab99 = call i32 @function_1aba0()
  br label %dec_label_pc_1ab9b

dec_label_pc_1ab9b:                               ; preds = %bb, %dec_label_pc_1ab60
  %v2_1ab99 = phi i32 [ %v1_1ab99, %bb ], [ %v2_1ab8a, %dec_label_pc_1ab60 ]
  ret i32 %v2_1ab99

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1aba0() local_unnamed_addr {
dec_label_pc_1aba0:
  %v0_1aba1 = load i32, i32* @eax, align 8
  ret i32 %v0_1aba1
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aba2:
  store i32 %arg1, i32* @eax, align 8
  %v2_1abcc = call i32 @function_3c2f5(i32 %arg1, i32 %arg2)
  store i32 %v2_1abcc, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1abdd

bb:                                               ; preds = %dec_label_pc_1aba2
  %v1_1abdb = call i32 @function_1abe2()
  br label %dec_label_pc_1abdd

dec_label_pc_1abdd:                               ; preds = %bb, %dec_label_pc_1aba2
  %v2_1abdb = phi i32 [ %v1_1abdb, %bb ], [ %v2_1abcc, %dec_label_pc_1aba2 ]
  ret i32 %v2_1abdb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1abe2() local_unnamed_addr {
dec_label_pc_1abe2:
  %v0_1abe3 = load i32, i32* @eax, align 8
  ret i32 %v0_1abe3
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1abe4:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v10_1ac01 = icmp eq i32 %arg2, 0
  br i1 %v10_1ac01, label %dec_label_pc_1ac14, label %dec_label_pc_1ac07

dec_label_pc_1ac07:                               ; preds = %dec_label_pc_1abe4
  %v1_1ac0a = add i32 %arg2, 24
  br label %dec_label_pc_1ac14

dec_label_pc_1ac14:                               ; preds = %dec_label_pc_1abe4, %dec_label_pc_1ac07
  %storemerge = phi i32 [ %v1_1ac0a, %dec_label_pc_1ac07 ], [ 0, %dec_label_pc_1abe4 ]
  store i32 %storemerge, i32* %arg1, align 4
  %v1_1ac1c = add i32 %tmp104, 4
  store i32 %arg2, i32* @eax, align 8
  %v2_1ac29 = call i32 @function_3c376(i32 %v1_1ac1c, i32 %arg2)
  store i32 %tmp104, i32* @eax, align 8
  %v3_1ac42 = call i32 @function_2b04c(i32 %tmp104, i32 %arg2, i32 %arg2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1ac14, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac5a:
  store i32 %arg1, i32* @eax, align 8
  %v1_1ac77 = call i32 @function_304f4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ac88

bb:                                               ; preds = %dec_label_pc_1ac5a
  %v1_1ac86 = call i32 @function_1ac8d()
  br label %dec_label_pc_1ac88

dec_label_pc_1ac88:                               ; preds = %bb, %dec_label_pc_1ac5a
  %v2_1ac86 = phi i32 [ %v1_1ac86, %bb ], [ 0, %dec_label_pc_1ac5a ]
  ret i32 %v2_1ac86

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ac8d() local_unnamed_addr {
dec_label_pc_1ac8d:
  %v0_1ac8e = load i32, i32* @eax, align 8
  ret i32 %v0_1ac8e
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac90:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_1acad = call i32 @function_3c4f4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1acbe

bb:                                               ; preds = %dec_label_pc_1ac90
  %v1_1acbc = call i32 @function_1acc3()
  br label %dec_label_pc_1acbe

dec_label_pc_1acbe:                               ; preds = %bb, %dec_label_pc_1ac90
  %v2_1acbc = phi i32 [ %v1_1acbc, %bb ], [ 0, %dec_label_pc_1ac90 ]
  ret i32 %v2_1acbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1acc3() local_unnamed_addr {
dec_label_pc_1acc3:
  %v0_1acc4 = load i32, i32* @eax, align 8
  ret i32 %v0_1acc4
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1acc6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1ace1 = add i32 %tmp102, 8
  %v2_1ace1 = inttoptr i32 %v1_1ace1 to i32*
  %v3_1ace1 = load i32, i32* %v2_1ace1, align 4
  %v2_1ace9 = load i32, i32* %arg1, align 4
  %v2_1aced = sub i32 %v3_1ace1, %v2_1ace9
  %v7_1aced = icmp ult i32 %v3_1ace1, %v2_1ace9
  store i1 %v7_1aced, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 8
  %v3_1ad06 = call i32 @function_35c76(i32 %tmp102, i32 %v2_1ace9, i32 %v2_1aced)
  store i32 %tmp102, i32* @eax, align 8
  %v1_1ad11 = call i32 @function_35920(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ad3b

bb:                                               ; preds = %dec_label_pc_1acc6
  %v1_1ad20 = call i32 @function_1ad40()
  br label %dec_label_pc_1ad3b

dec_label_pc_1ad3b:                               ; preds = %dec_label_pc_1acc6, %bb
  %v0_1ad22 = phi i32 [ 0, %dec_label_pc_1acc6 ], [ %v1_1ad20, %bb ]
  ret i32 %v0_1ad22

; uselistorder directives
  uselistorder i32 %v2_1ace9, { 0, 2, 1 }
  uselistorder i32 %v3_1ace1, { 1, 0 }
  uselistorder i32 %tmp102, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1ad3b, { 1, 0 }
}

define i32 @function_1ad24() local_unnamed_addr {
dec_label_pc_1ad24:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ad24 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1ad24, i32* %ebx.global-to-local, align 4
  %v0_1ad26 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ad26 = add i32 %v0_1ad26, -28
  %v2_1ad26 = inttoptr i32 %v1_1ad26 to i32*
  %v3_1ad26 = load i32, i32* %v2_1ad26, align 4
  store i32 %v3_1ad26, i32* @eax, align 8
  %v1_1ad2c = call i32 @function_35920(i32 %v3_1ad26)
  %v0_1ad31 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1ad31, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ad31

; uselistorder directives
  uselistorder i32 (i32)* @function_35920, { 1, 0 }
}

define i32 @function_1ad40() local_unnamed_addr {
dec_label_pc_1ad40:
  %v0_1ad45 = load i32, i32* @eax, align 8
  ret i32 %v0_1ad45
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad46:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ad6c

bb:                                               ; preds = %dec_label_pc_1ad46
  %v2_1ad6a = call i32 @function_1ad71(i32 %arg1)
  br label %dec_label_pc_1ad6c

dec_label_pc_1ad6c:                               ; preds = %bb, %dec_label_pc_1ad46
  %v3_1ad6a = phi i32 [ %v2_1ad6a, %bb ], [ %arg1, %dec_label_pc_1ad46 ]
  ret i32 %v3_1ad6a
}

define i32 @function_1ad71(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad71:
  %v0_1ad72 = load i32, i32* @eax, align 8
  ret i32 %v0_1ad72
}

define i32 @_ZSt8_DestroyIPc25zero_after_free_allocatorIcEEvT_S3_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ad73:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_1ad73 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_1ad73, i32* %stack_var_-4, align 4
  %v4_1ad73 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_1ad73, i32* @ebp, align 4
  %v15_1adb9108 = icmp eq i32 %arg1, %arg2
  %v1_1adbc109 = icmp eq i1 %v15_1adb9108, false
  %v5_1adbf113 = icmp eq i1 %v1_1adbc109, false
  %v1_1adc1114 = icmp eq i1 %v5_1adbf113, false
  br i1 %v1_1adc1114, label %dec_label_pc_1ad98, label %dec_label_pc_1adc3

dec_label_pc_1ad98:                               ; preds = %dec_label_pc_1ad73, %dec_label_pc_1ad98
  %stack_var_-32.0115 = phi i32 [ %v4_1adb2, %dec_label_pc_1ad98 ], [ %arg1, %dec_label_pc_1ad73 ]
  store i32 %stack_var_-32.0115, i32* @eax, align 8
  %v1_1ad9e = call i32 @function_3c629(i32 %stack_var_-32.0115)
  %v2_1adad = call i32 @function_35eb9(i32 %arg3, i32 %v1_1ad9e)
  %v4_1adb2 = add i32 %stack_var_-32.0115, 1
  %v15_1adb9 = icmp eq i32 %v4_1adb2, %arg2
  %v1_1adbc = icmp eq i1 %v15_1adb9, false
  %v5_1adbf = icmp eq i1 %v1_1adbc, false
  %v1_1adc1 = icmp eq i1 %v5_1adbf, false
  br i1 %v1_1adc1, label %dec_label_pc_1ad98, label %dec_label_pc_1adb6.dec_label_pc_1adc3_crit_edge

dec_label_pc_1adb6.dec_label_pc_1adc3_crit_edge:  ; preds = %dec_label_pc_1ad98
  %v2_1add4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1adc3

dec_label_pc_1adc3:                               ; preds = %dec_label_pc_1adb6.dec_label_pc_1adc3_crit_edge, %dec_label_pc_1ad73
  %v2_1add4 = phi i32 [ %v2_1add4.pre, %dec_label_pc_1adb6.dec_label_pc_1adc3_crit_edge ], [ %v0_1ad73, %dec_label_pc_1ad73 ]
  store i32 %v2_1add4, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1adb2, { 1, 0 }
  uselistorder i32 %stack_var_-32.0115, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1ad98, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1add6:
  store i32 %arg1, i32* @eax, align 8
  %v2_1ae00 = call i32 @function_3c6ba(i32 %arg1, i32 %arg2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ae18:
  %v1_1ae38 = inttoptr i32 %arg2 to i32*
  %v2_1ae38 = load i32, i32* %v1_1ae38, align 4
  store i32 %v2_1ae38, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ae4b

bb:                                               ; preds = %dec_label_pc_1ae18
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1ae49 = call i32 @function_1ae50(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1ae4b

dec_label_pc_1ae4b:                               ; preds = %bb, %dec_label_pc_1ae18
  %v4_1ae49 = phi i32 [ %v3_1ae49, %bb ], [ 0, %dec_label_pc_1ae18 ]
  ret i32 %v4_1ae49

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1ae50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ae50:
  %v0_1ae51 = load i32, i32* @eax, align 8
  ret i32 %v0_1ae51
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE22_M_initialize_dispatchIPcEEvT_S5_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1ae52:
  %edx.global-to-local = alloca i32, align 4
  %v0_1ae7c = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %sext = mul i32 %v0_1ae7c, 16777216
  %v8_1ae94 = sdiv i32 %sext, 16777216
  %v9_1ae94 = sext i8 %arg4 to i32
  %v10_1ae94 = call i32 @function_3c796(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_1ae94, i32 %v9_1ae94, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1aea5

bb:                                               ; preds = %dec_label_pc_1ae52
  %v1_1aea3 = call i32 @function_1aeaa()
  br label %dec_label_pc_1aea5

dec_label_pc_1aea5:                               ; preds = %bb, %dec_label_pc_1ae52
  %v2_1aea3 = phi i32 [ %v1_1aea3, %bb ], [ 0, %dec_label_pc_1ae52 ]
  ret i32 %v2_1aea3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1aeaa() local_unnamed_addr {
dec_label_pc_1aeaa:
  %v0_1aeab = load i32, i32* @eax, align 8
  ret i32 %v0_1aeab
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aeac:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1aeac = load i32, i32* %ebp.global-to-local, align 4
  %v1_1aecc = inttoptr i32 %arg2 to i32*
  %v2_1aecc = load i32, i32* %v1_1aecc, align 4
  store i32 %v2_1aecc, i32* %arg1, align 4
  store i32 %v0_1aeac, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNKSt12_Vector_baseIc25zero_after_free_allocatorIcEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aee6:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1af0c

bb:                                               ; preds = %dec_label_pc_1aee6
  %v2_1af0a = call i32 @function_1af11(i32 %arg1)
  br label %dec_label_pc_1af0c

dec_label_pc_1af0c:                               ; preds = %bb, %dec_label_pc_1aee6
  %v3_1af0a = phi i32 [ %v2_1af0a, %bb ], [ %arg1, %dec_label_pc_1aee6 ]
  ret i32 %v3_1af0a
}

define i32 @function_1af11(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af11:
  %v0_1af12 = load i32, i32* @eax, align 8
  ret i32 %v0_1af12
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_erase_at_endEPc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1af14:
  store i32 %arg1, i32* @eax, align 8
  %v1_1af37 = call i32 @function_35c5a(i32 %arg1)
  %v1_1af3f = add i32 %arg1, 4
  %v2_1af3f = inttoptr i32 %v1_1af3f to i32*
  %v3_1af3f = load i32, i32* %v2_1af3f, align 4
  store i32 %arg2, i32* @eax, align 8
  %v3_1af50 = call i32 @function_35c87(i32 %arg2, i32 %v3_1af3f, i32 %v1_1af37)
  store i32 %arg2, i32* %v2_1af3f, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1af6a

bb:                                               ; preds = %dec_label_pc_1af14
  %v1_1af68 = call i32 @function_1af6f()
  br label %dec_label_pc_1af6a

dec_label_pc_1af6a:                               ; preds = %bb, %dec_label_pc_1af14
  %v2_1af68 = phi i32 [ %v1_1af68, %bb ], [ 0, %dec_label_pc_1af14 ]
  ret i32 %v2_1af68

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1af6f() local_unnamed_addr {
dec_label_pc_1af6f:
  %v0_1af70 = load i32, i32* @eax, align 8
  ret i32 %v0_1af70
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af72:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_1af8f = call i32 @function_35e58(i32 %arg1)
  store i32 %v1_1af8f, i32* @eax, align 8
  %v1_1af97 = call i32 @function_3c9bc(i32 %v1_1af8f)
  store i32 %v1_1af97, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1afa8

bb:                                               ; preds = %dec_label_pc_1af72
  %v1_1afa6 = call i32 @function_1afad()
  br label %dec_label_pc_1afa8

dec_label_pc_1afa8:                               ; preds = %bb, %dec_label_pc_1af72
  %v2_1afa6 = phi i32 [ %v1_1afa6, %bb ], [ %v1_1af97, %dec_label_pc_1af72 ]
  ret i32 %v2_1afa6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1afad() local_unnamed_addr {
dec_label_pc_1afad:
  %v0_1afae = load i32, i32* @eax, align 8
  ret i32 %v0_1afae
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE13_M_deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1afb0:
  %v0_1afc8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1afc8
}

define i32 @function_1afd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1afd0:
  %v0_1afd3 = load i32, i32* @ebp, align 4
  %v1_1afd3 = add i32 %v0_1afd3, -32
  %v2_1afd3 = inttoptr i32 %v1_1afd3 to i32*
  %v3_1afd3 = load i32, i32* %v2_1afd3, align 4
  %v10_1afd3 = icmp eq i32 %v3_1afd3, 0
  br i1 %v10_1afd3, label %dec_label_pc_1aff2, label %dec_label_pc_1afd9

dec_label_pc_1afd9:                               ; preds = %dec_label_pc_1afd0
  %v1_1afd9 = add i32 %v0_1afd3, -28
  %v2_1afd9 = inttoptr i32 %v1_1afd9 to i32*
  %v3_1afd9 = load i32, i32* %v2_1afd9, align 4
  %v1_1afdc = add i32 %v0_1afd3, -36
  %v2_1afdc = inttoptr i32 %v1_1afdc to i32*
  %v3_1afdc = load i32, i32* %v2_1afdc, align 4
  %v3_1afe3 = load i32, i32* %v2_1afd3, align 4
  %v3_1afed = call i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %v3_1afd9, i32 %v3_1afe3, i32 %v3_1afdc)
  %v0_1aff2.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1aff2

dec_label_pc_1aff2:                               ; preds = %dec_label_pc_1afd9, %dec_label_pc_1afd0
  %v0_1aff2 = phi i32 [ %v0_1aff2.pre, %dec_label_pc_1afd9 ], [ %v0_1afd3, %dec_label_pc_1afd0 ]
  %v1_1aff2 = add i32 %v0_1aff2, -12
  %v2_1aff2 = inttoptr i32 %v1_1aff2 to i32*
  %v3_1aff2 = load i32, i32* %v2_1aff2, align 4
  %v1_1aff5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1aff5 = xor i32 %v1_1aff5, %v3_1aff2
  %v3_1aff5 = icmp eq i32 %v2_1aff5, 0
  store i32 %v2_1aff5, i32* @eax, align 8
  br i1 %v3_1aff5, label %bb, label %dec_label_pc_1affe

bb:                                               ; preds = %dec_label_pc_1aff2
  %v1_1affc = call i32 @function_1b003()
  br label %dec_label_pc_1affe

dec_label_pc_1affe:                               ; preds = %bb, %dec_label_pc_1aff2
  %v2_1affc = phi i32 [ %v1_1affc, %bb ], [ %v2_1aff5, %dec_label_pc_1aff2 ]
  ret i32 %v2_1affc

; uselistorder directives
  uselistorder i32 %v0_1afd3, { 0, 2, 1, 3 }
}

define i32 @function_1b003() local_unnamed_addr {
dec_label_pc_1b003:
  %v0_1b004 = load i32, i32* @eax, align 8
  ret i32 %v0_1b004
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE9constructEPcRKc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_1b006:
  store i32 %arg2, i32* @eax, align 8
  %v2_1b037 = call i32 @function_20d32(i32 1, i32 %arg2)
  %v2_1b03c = icmp eq i32 %v2_1b037, 0
  br i1 %v2_1b03c, label %dec_label_pc_1b048, label %dec_label_pc_1b040

dec_label_pc_1b040:                               ; preds = %dec_label_pc_1b006
  %v3_1b037 = inttoptr i32 %v2_1b037 to i8*
  %v2_1b043 = load i8, i8* %arg3, align 1
  store i8 %v2_1b043, i8* %v3_1b037, align 1
  br label %dec_label_pc_1b048

dec_label_pc_1b048:                               ; preds = %dec_label_pc_1b040, %dec_label_pc_1b006
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b054

bb:                                               ; preds = %dec_label_pc_1b048
  %v1_1b052 = call i32 @function_1b059()
  br label %dec_label_pc_1b054

dec_label_pc_1b054:                               ; preds = %bb, %dec_label_pc_1b048
  %v2_1b052 = phi i32 [ %v1_1b052, %bb ], [ 0, %dec_label_pc_1b048 ]
  ret i32 %v2_1b052

; uselistorder directives
  uselistorder i32 %v2_1b037, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1b059() local_unnamed_addr {
dec_label_pc_1b059:
  %v0_1b05a = load i32, i32* @eax, align 8
  ret i32 %v0_1b05a
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b05c:
  ret i32 %arg1
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE18_M_insert_dispatchIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1b08a:
  %edx.global-to-local = alloca i32, align 4
  %v0_1b0ba = load i32, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b0ea

bb:                                               ; preds = %dec_label_pc_1b08a
  %sext = mul i32 %v0_1b0ba, 16777216
  %v6_1b0e8 = sdiv i32 %sext, 16777216
  %v7_1b0e8 = call i32 @function_1b0ef(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v6_1b0e8)
  br label %dec_label_pc_1b0ea

dec_label_pc_1b0ea:                               ; preds = %bb, %dec_label_pc_1b08a
  %v8_1b0e8 = phi i32 [ %v7_1b0e8, %bb ], [ 0, %dec_label_pc_1b08a ]
  ret i32 %v8_1b0e8
}

define i32 @function_1b0ef(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1b0ef:
  %v0_1b0f0 = load i32, i32* @eax, align 8
  ret i32 %v0_1b0f0
}

define i32 @_ZN9__gnu_cxxneIPcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b0f1:
  %v2_1b11a = load i32, i32* %arg1, align 4
  %v1_1b127 = inttoptr i32 %arg2 to i32*
  %v2_1b127 = load i32, i32* %v1_1b127, align 4
  %v12_1b129 = icmp eq i32 %v2_1b11a, %v2_1b127
  %v1_1b12b = icmp eq i1 %v12_1b129, false
  %v2_1b12b = zext i1 %v1_1b12b to i32
  %v4_1b12b = and i32 %v2_1b127, -256
  %v5_1b12b = or i32 %v2_1b12b, %v4_1b12b
  store i32 %v5_1b12b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b13a

bb:                                               ; preds = %dec_label_pc_1b0f1
  %v2_1b138 = call i32 @function_1b13f(i32 %arg2)
  br label %dec_label_pc_1b13a

dec_label_pc_1b13a:                               ; preds = %bb, %dec_label_pc_1b0f1
  %v3_1b138 = phi i32 [ %v2_1b138, %bb ], [ %v5_1b12b, %dec_label_pc_1b0f1 ]
  ret i32 %v3_1b138

; uselistorder directives
  uselistorder i32 %v2_1b127, { 1, 0 }
}

define i32 @function_1b13f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b13f:
  %v0_1b144 = load i32, i32* @eax, align 8
  ret i32 %v0_1b144
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE7destroyEPc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b146:
  ret i32 0
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_Riii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b176:
  store i32 %arg1, i32* @eax, align 8
  %v7_1b1b4 = call i32 @function_2cdb0(i32 %arg1, i32 %arg2, i32 4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b1c5

bb:                                               ; preds = %dec_label_pc_1b176
  %v1_1b1c3 = call i32 @function_1b1ca()
  br label %dec_label_pc_1b1c5

dec_label_pc_1b1c5:                               ; preds = %bb, %dec_label_pc_1b176
  %v2_1b1c3 = phi i32 [ %v1_1b1c3, %bb ], [ 0, %dec_label_pc_1b176 ]
  ret i32 %v2_1b1c3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1b1ca() local_unnamed_addr {
dec_label_pc_1b1ca:
  %v0_1b1cb = load i32, i32* @eax, align 8
  ret i32 %v0_1b1cb
}

define i32 @_Z9SerializeI11CDataStreamEvRT_iii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b1cc:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_1b1fd = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* @eax, align 8
  %v7_1b20a = call i32 @function_2cf6e(i32 %arg1, i32 %v2_1b1fd, i32 4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b21b

bb:                                               ; preds = %dec_label_pc_1b1cc
  %v1_1b219 = call i32 @function_1b220()
  br label %dec_label_pc_1b21b

dec_label_pc_1b21b:                               ; preds = %bb, %dec_label_pc_1b1cc
  %v2_1b219 = phi i32 [ %v1_1b219, %bb ], [ 0, %dec_label_pc_1b1cc ]
  ret i32 %v2_1b219

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1b220() local_unnamed_addr {
dec_label_pc_1b220:
  %v0_1b221 = load i32, i32* @eax, align 8
  ret i32 %v0_1b221
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b222:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b245

bb:                                               ; preds = %dec_label_pc_1b222
  %v2_1b243 = call i32 @function_1b24a(i32 %arg1)
  br label %dec_label_pc_1b245

dec_label_pc_1b245:                               ; preds = %bb, %dec_label_pc_1b222
  %v3_1b243 = phi i32 [ %v2_1b243, %bb ], [ 0, %dec_label_pc_1b222 ]
  ret i32 %v3_1b243
}

define i32 @function_1b24a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b24a:
  %v0_1b24b = load i32, i32* @eax, align 8
  ret i32 %v0_1b24b
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b24c:
  ret i32 0
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b276:
  store i32 %arg1, i32* @eax, align 8
  %v1_1b293 = call i32 @function_30f68(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b2a4

bb:                                               ; preds = %dec_label_pc_1b276
  %v1_1b2a2 = call i32 @function_1b2a9()
  br label %dec_label_pc_1b2a4

dec_label_pc_1b2a4:                               ; preds = %bb, %dec_label_pc_1b276
  %v2_1b2a2 = phi i32 [ %v1_1b2a2, %bb ], [ 0, %dec_label_pc_1b276 ]
  ret i32 %v2_1b2a2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b2a9() local_unnamed_addr {
dec_label_pc_1b2a9:
  %v0_1b2aa = load i32, i32* @eax, align 8
  ret i32 %v0_1b2aa
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1EjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b2ac:
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp105, i32* @eax, align 8
  %v2_1b2dd = call i32 @function_3d370(i32 %tmp105, i32 %arg3)
  store i32 %tmp105, i32* @eax, align 8
  %v2_1b2ef = call i32 @function_3d3d0(i32 %tmp105, i32 %arg2)
  store i32 %v2_1b2ef, i32* %arg1, align 4
  %v2_1b303 = add i32 %tmp105, 4
  %v3_1b303 = inttoptr i32 %v2_1b303 to i32*
  store i32 %v2_1b2ef, i32* %v3_1b303, align 4
  %v2_1b309 = load i32, i32* %arg1, align 4
  %v5_1b30d = add i32 %v2_1b309, %arg2
  %v2_1b313 = add i32 %tmp105, 8
  %v3_1b313 = inttoptr i32 %v2_1b313 to i32*
  store i32 %v5_1b30d, i32* %v3_1b313, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b33b

bb:                                               ; preds = %dec_label_pc_1b2ac
  %v1_1b320 = call i32 @function_1b340()
  br label %dec_label_pc_1b33b

dec_label_pc_1b33b:                               ; preds = %dec_label_pc_1b2ac, %bb
  %v0_1b322 = phi i32 [ 0, %dec_label_pc_1b2ac ], [ %v1_1b320, %bb ]
  ret i32 %v0_1b322

; uselistorder directives
  uselistorder i32 %tmp105, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b33b, { 1, 0 }
}

define i32 @function_1b324() local_unnamed_addr {
dec_label_pc_1b324:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b324 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b324
}

define i32 @function_1b340() local_unnamed_addr {
dec_label_pc_1b340:
  %v0_1b345 = load i32, i32* @eax, align 8
  ret i32 %v0_1b345
}

define i32 @_ZNSt12_Vector_baseIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b346:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1b361 = add i32 %tmp102, 8
  %v2_1b361 = inttoptr i32 %v1_1b361 to i32*
  %v3_1b361 = load i32, i32* %v2_1b361, align 4
  %v2_1b369 = load i32, i32* %arg1, align 4
  %v2_1b36d = sub i32 %v3_1b361, %v2_1b369
  %v7_1b36d = icmp ult i32 %v3_1b361, %v2_1b369
  store i1 %v7_1b36d, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 8
  %v3_1b386 = call i32 @function_36b76(i32 %tmp102, i32 %v2_1b369, i32 %v2_1b36d)
  store i32 %tmp102, i32* @eax, align 8
  %v1_1b391 = call i32 @function_365bc(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b3bb

bb:                                               ; preds = %dec_label_pc_1b346
  %v1_1b3a0 = call i32 @function_1b3c0()
  br label %dec_label_pc_1b3bb

dec_label_pc_1b3bb:                               ; preds = %dec_label_pc_1b346, %bb
  %v0_1b3a2 = phi i32 [ 0, %dec_label_pc_1b346 ], [ %v1_1b3a0, %bb ]
  ret i32 %v0_1b3a2

; uselistorder directives
  uselistorder i32 %v2_1b369, { 0, 2, 1 }
  uselistorder i32 %v3_1b361, { 1, 0 }
  uselistorder i32 %tmp102, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1b3bb, { 1, 0 }
}

define i32 @function_1b3a4() local_unnamed_addr {
dec_label_pc_1b3a4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1b3a4 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1b3a4, i32* %ebx.global-to-local, align 4
  %v0_1b3a6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b3a6 = add i32 %v0_1b3a6, -28
  %v2_1b3a6 = inttoptr i32 %v1_1b3a6 to i32*
  %v3_1b3a6 = load i32, i32* %v2_1b3a6, align 4
  store i32 %v3_1b3a6, i32* @eax, align 8
  %v1_1b3ac = call i32 @function_365bc(i32 %v3_1b3a6)
  %v0_1b3b1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1b3b1, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b3b1

; uselistorder directives
  uselistorder i32 (i32)* @function_365bc, { 1, 0 }
}

define i32 @function_1b3c0() local_unnamed_addr {
dec_label_pc_1b3c0:
  %v0_1b3c5 = load i32, i32* @eax, align 8
  ret i32 %v0_1b3c5
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_fill_initializeEjRKh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b3c6:
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %tmp107, i32* @eax, align 8
  %v1_1b3ef = call i32 @function_367f8(i32 %tmp107)
  %v2_1b3f7 = load i32, i32* %arg1, align 4
  store i32 %arg2, i32* @eax, align 8
  %v4_1b40e = call i32 @function_3d541(i32 %v2_1b3f7, i32 %arg2, i32 %arg3, i32 %v1_1b3ef)
  %v1_1b416 = add i32 %tmp107, 8
  %v2_1b416 = inttoptr i32 %v1_1b416 to i32*
  %v3_1b416 = load i32, i32* %v2_1b416, align 4
  %v2_1b41c = add i32 %tmp107, 4
  %v3_1b41c = inttoptr i32 %v2_1b41c to i32*
  store i32 %v3_1b416, i32* %v3_1b41c, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b42b

bb:                                               ; preds = %dec_label_pc_1b3c6
  %v1_1b429 = call i32 @function_1b430()
  br label %dec_label_pc_1b42b

dec_label_pc_1b42b:                               ; preds = %bb, %dec_label_pc_1b3c6
  %v2_1b429 = phi i32 [ %v1_1b429, %bb ], [ 0, %dec_label_pc_1b3c6 ]
  ret i32 %v2_1b429

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1b430() local_unnamed_addr {
dec_label_pc_1b430:
  %v0_1b431 = load i32, i32* @eax, align 8
  ret i32 %v0_1b431
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b432:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b458

bb:                                               ; preds = %dec_label_pc_1b432
  %v2_1b456 = call i32 @function_1b45d(i32 %arg1)
  br label %dec_label_pc_1b458

dec_label_pc_1b458:                               ; preds = %bb, %dec_label_pc_1b432
  %v3_1b456 = phi i32 [ %v2_1b456, %bb ], [ %arg1, %dec_label_pc_1b432 ]
  ret i32 %v3_1b456
}

define i32 @function_1b45d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b45d:
  %v0_1b45e = load i32, i32* @eax, align 8
  ret i32 %v0_1b45e
}

define i32 @_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b45f:
  store i32 %arg1, i32* @eax, align 8
  %v2_1b48f = call i32 @function_3d62f(i32 %arg1, i32 %arg2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b4a8:
  %v1_1b4c8 = inttoptr i32 %arg2 to i32*
  %v2_1b4c8 = load i32, i32* %v1_1b4c8, align 4
  store i32 %v2_1b4c8, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b4db

bb:                                               ; preds = %dec_label_pc_1b4a8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1b4d9 = call i32 @function_1b4e0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1b4db

dec_label_pc_1b4db:                               ; preds = %bb, %dec_label_pc_1b4a8
  %v4_1b4d9 = phi i32 [ %v3_1b4d9, %bb ], [ 0, %dec_label_pc_1b4a8 ]
  ret i32 %v4_1b4d9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1b4e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b4e0:
  %v0_1b4e1 = load i32, i32* @eax, align 8
  ret i32 %v0_1b4e1
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b4e2:
  %v2_1b4fc = load i32, i32* %arg1, align 4
  store i32 %v2_1b4fc, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b50a

bb:                                               ; preds = %dec_label_pc_1b4e2
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1b508 = call i32 @function_1b50f(i32 %tmp100)
  br label %dec_label_pc_1b50a

dec_label_pc_1b50a:                               ; preds = %bb, %dec_label_pc_1b4e2
  %v3_1b508 = phi i32 [ %v2_1b508, %bb ], [ %v2_1b4fc, %dec_label_pc_1b4e2 ]
  ret i32 %v3_1b508

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1b50f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b50f:
  %v0_1b510 = load i32, i32* @eax, align 8
  ret i32 %v0_1b510
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b512:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1b52c = load i32, i32* %arg1, align 4
  %v1_1b52e = add i32 %v2_1b52c, 1
  store i32 %v1_1b52e, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b545

bb:                                               ; preds = %dec_label_pc_1b512
  %v2_1b543 = call i32 @function_1b54a(i32 %tmp100)
  br label %dec_label_pc_1b545

dec_label_pc_1b545:                               ; preds = %bb, %dec_label_pc_1b512
  %v3_1b543 = phi i32 [ %v2_1b543, %bb ], [ %tmp100, %dec_label_pc_1b512 ]
  ret i32 %v3_1b543
}

define i32 @function_1b54a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b54a:
  %v0_1b54b = load i32, i32* @eax, align 8
  ret i32 %v0_1b54b
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b54c:
  store i32 %arg1, i32* @eax, align 8
  %v1_1b569 = call i32 @function_3d75e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b57a

bb:                                               ; preds = %dec_label_pc_1b54c
  %v1_1b578 = call i32 @function_1b57f()
  br label %dec_label_pc_1b57a

dec_label_pc_1b57a:                               ; preds = %bb, %dec_label_pc_1b54c
  %v2_1b578 = phi i32 [ %v1_1b578, %bb ], [ 0, %dec_label_pc_1b54c ]
  ret i32 %v2_1b578

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b57f() local_unnamed_addr {
dec_label_pc_1b57f:
  %v0_1b580 = load i32, i32* @eax, align 8
  ret i32 %v0_1b580
}

define i32 @_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b582:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b5a8

bb:                                               ; preds = %dec_label_pc_1b582
  %v2_1b5a6 = call i32 @function_1b5ad(i32 %arg1)
  br label %dec_label_pc_1b5a8

dec_label_pc_1b5a8:                               ; preds = %bb, %dec_label_pc_1b582
  %v3_1b5a6 = phi i32 [ %v2_1b5a6, %bb ], [ %arg1, %dec_label_pc_1b582 ]
  ret i32 %v3_1b5a6
}

define i32 @function_1b5ad(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5ad:
  %v0_1b5ae = load i32, i32* @eax, align 8
  ret i32 %v0_1b5ae
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b5af:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b5fd

bb:                                               ; preds = %dec_label_pc_1b5af
  %v8_1b5fb = call i32 @function_1b602(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1b5fd

dec_label_pc_1b5fd:                               ; preds = %bb, %dec_label_pc_1b5af
  %v9_1b5fb = phi i32 [ %v8_1b5fb, %bb ], [ %arg1, %dec_label_pc_1b5af ]
  ret i32 %v9_1b5fb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
}

define i32 @function_1b602(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1b602:
  %v0_1b603 = load i32, i32* @eax, align 8
  ret i32 %v0_1b603
}

define i32 @_ZN9__gnu_cxxneIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b604:
  store i32 %arg1, i32* @eax, align 8
  %v1_1b628 = call i32 @function_36cba(i32 %arg1)
  %v1_1b62d = inttoptr i32 %v1_1b628 to i32*
  %v2_1b62d = load i32, i32* %v1_1b62d, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1b635 = call i32 @function_36cba(i32 %arg2)
  %v1_1b63a = inttoptr i32 %v1_1b635 to i32*
  %v2_1b63a = load i32, i32* %v1_1b63a, align 4
  %v12_1b63c = icmp eq i32 %v2_1b62d, %v2_1b63a
  %v1_1b63e = icmp eq i1 %v12_1b63c, false
  %v2_1b63e = zext i1 %v1_1b63e to i32
  %v4_1b63e = and i32 %v2_1b63a, -256
  %v5_1b63e = or i32 %v2_1b63e, %v4_1b63e
  store i32 %v5_1b63e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b64d

bb:                                               ; preds = %dec_label_pc_1b604
  %v1_1b64b = call i32 @function_1b652()
  br label %dec_label_pc_1b64d

dec_label_pc_1b64d:                               ; preds = %bb, %dec_label_pc_1b604
  %v2_1b64b = phi i32 [ %v1_1b64b, %bb ], [ %v5_1b63e, %dec_label_pc_1b604 ]
  ret i32 %v2_1b64b

; uselistorder directives
  uselistorder i32 %v2_1b63a, { 1, 0 }
  uselistorder i32 (i32)* @function_36cba, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b652() local_unnamed_addr {
dec_label_pc_1b652:
  %v0_1b657 = load i32, i32* @eax, align 8
  ret i32 %v0_1b657
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b658:
  store i32 %arg1, i32* @eax, align 8
  %v1_1b67b = call i32 @function_36a8a(i32 %arg1)
  %v1_1b683 = add i32 %arg1, 4
  %v2_1b683 = inttoptr i32 %v1_1b683 to i32*
  %v3_1b683 = load i32, i32* %v2_1b683, align 4
  store i32 %arg2, i32* @eax, align 8
  %v3_1b694 = call i32 @function_36ab7(i32 %arg2, i32 %v3_1b683, i32 %v1_1b67b)
  store i32 %arg2, i32* %v2_1b683, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b6ae

bb:                                               ; preds = %dec_label_pc_1b658
  %v1_1b6ac = call i32 @function_1b6b3()
  br label %dec_label_pc_1b6ae

dec_label_pc_1b6ae:                               ; preds = %bb, %dec_label_pc_1b658
  %v2_1b6ac = phi i32 [ %v1_1b6ac, %bb ], [ 0, %dec_label_pc_1b658 ]
  ret i32 %v2_1b6ac

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1b6b3() local_unnamed_addr {
dec_label_pc_1b6b3:
  %v0_1b6b4 = load i32, i32* @eax, align 8
  ret i32 %v0_1b6b4
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b6b6:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b6dc

bb:                                               ; preds = %dec_label_pc_1b6b6
  %v2_1b6da = call i32 @function_1b6e1(i32 %arg1)
  br label %dec_label_pc_1b6dc

dec_label_pc_1b6dc:                               ; preds = %bb, %dec_label_pc_1b6b6
  %v3_1b6da = phi i32 [ %v2_1b6da, %bb ], [ %arg1, %dec_label_pc_1b6b6 ]
  ret i32 %v3_1b6da
}

define i32 @function_1b6e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b6e1:
  %v0_1b6e2 = load i32, i32* @eax, align 8
  ret i32 %v0_1b6e2
}

define i32 @_ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b6e3:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_1b707 = call x86_fp80 @function_37485(i32 %arg1)
  store x86_fp80 %v1_1b707, x86_fp80* @st0, align 4
  %v2_1b707 = fptrunc x86_fp80 %v1_1b707 to float
  %v3_1b707 = bitcast float %v2_1b707 to i32
  %v1_1b70c = inttoptr i32 %v3_1b707 to i32*
  %v2_1b70c = load i32, i32* %v1_1b70c, align 4
  store i32 %v2_1b70c, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1b714 = call x86_fp80 @function_37485(i32 %arg2)
  %v2_1b714 = fptrunc x86_fp80 %v1_1b714 to float
  %v3_1b714 = bitcast float %v2_1b714 to i32
  %v1_1b719 = inttoptr i32 %v3_1b714 to i32*
  %v2_1b719 = load i32, i32* %v1_1b719, align 4
  %v0_1b71b = load i32, i32* %ebx.global-to-local, align 4
  %v12_1b71b = icmp eq i32 %v0_1b71b, %v2_1b719
  %v1_1b71d = zext i1 %v12_1b71b to i32
  %v3_1b71d = and i32 %v2_1b719, -256
  %v4_1b71d = or i32 %v1_1b71d, %v3_1b71d
  store i32 %v4_1b71d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b72c

bb:                                               ; preds = %dec_label_pc_1b6e3
  %v1_1b72a = call i32 @function_1b731()
  br label %dec_label_pc_1b72c

dec_label_pc_1b72c:                               ; preds = %bb, %dec_label_pc_1b6e3
  %v2_1b72a = phi i32 [ %v1_1b72a, %bb ], [ %v4_1b71d, %dec_label_pc_1b6e3 ]
  ret i32 %v2_1b72a

; uselistorder directives
  uselistorder i32 %v2_1b719, { 1, 0 }
  uselistorder x86_fp80 %v1_1b707, { 1, 0 }
  uselistorder x86_fp80 (i32)* @function_37485, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b731() local_unnamed_addr {
dec_label_pc_1b731:
  %v0_1b736 = load i32, i32* @eax, align 8
  ret i32 %v0_1b736
}

define i32 @_ZNKSt6vectorIhSaIhEE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b738:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1b752 = add i32 %tmp100, 8
  %v2_1b752 = inttoptr i32 %v1_1b752 to i32*
  %v3_1b752 = load i32, i32* %v2_1b752, align 4
  %v2_1b75a = load i32, i32* %arg1, align 4
  %v2_1b75e = sub i32 %v3_1b752, %v2_1b75a
  store i32 %v2_1b75e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b76e

bb:                                               ; preds = %dec_label_pc_1b738
  %v2_1b76c = call i32 @function_1b773(i32 %tmp100)
  br label %dec_label_pc_1b76e

dec_label_pc_1b76e:                               ; preds = %bb, %dec_label_pc_1b738
  %v3_1b76c = phi i32 [ %v2_1b76c, %bb ], [ %v2_1b75e, %dec_label_pc_1b738 ]
  ret i32 %v3_1b76c
}

define i32 @function_1b773(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b773:
  %v0_1b774 = load i32, i32* @eax, align 8
  ret i32 %v0_1b774
}

define i32 @_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhjT_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b776:
  %v2_1b7ad = call i32 @function_3d89a(i32 %arg1, i32 %arg2)
  store i32 %arg3, i32* @eax, align 8
  %v4_1b7d8 = call i32 @function_36d25(i32 %arg3, i32 %arg4, i32 %v2_1b7ad, i32 %arg1)
  store i32 %v2_1b7ad, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b7ec

bb:                                               ; preds = %dec_label_pc_1b776
  %v1_1b7ea = call i32 @function_1b82a()
  store i32 %v1_1b7ea, i32* @eax, align 8
  br label %dec_label_pc_1b7ec

dec_label_pc_1b7ec:                               ; preds = %bb, %dec_label_pc_1b776
  %v0_1b7ec = call i32 @function_1b825()
  ret i32 %v0_1b7ec

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b7ef() local_unnamed_addr {
dec_label_pc_1b7ef:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b7ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b7ef
}

define i32 @function_1b825() local_unnamed_addr {
dec_label_pc_1b825:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b82a() local_unnamed_addr {
dec_label_pc_1b82a:
  %v0_1b82f = load i32, i32* @eax, align 8
  ret i32 %v0_1b82f
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b830:
  %v10_1b853 = icmp eq i32 %arg2, 0
  br i1 %v10_1b853, label %dec_label_pc_1b872, label %dec_label_pc_1b859

dec_label_pc_1b859:                               ; preds = %dec_label_pc_1b830
  store i32 %arg1, i32* @eax, align 8
  %v3_1b86d = call i32 @function_3dae4(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_1b872

dec_label_pc_1b872:                               ; preds = %dec_label_pc_1b859, %dec_label_pc_1b830
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b87e

bb:                                               ; preds = %dec_label_pc_1b872
  %v1_1b87c = call i32 @function_1b883()
  br label %dec_label_pc_1b87e

dec_label_pc_1b87e:                               ; preds = %bb, %dec_label_pc_1b872
  %v2_1b87c = phi i32 [ %v1_1b87c, %bb ], [ 0, %dec_label_pc_1b872 ]
  ret i32 %v2_1b87c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b883() local_unnamed_addr {
dec_label_pc_1b883:
  %v0_1b884 = load i32, i32* @eax, align 8
  ret i32 %v0_1b884
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b885:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v2_1b8ae = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1b8ae, i32* @eax, align 8
  %v2_1b8bb = call i32 @function_3db7a(i32 %v2_1b8ae, i32 %arg3)
  %v0_1b8c0 = load i32, i32* @esp, align 4
  %v5_1b8c0 = icmp ult i32 %v0_1b8c0, 4
  store i1 %v5_1b8c0, i1* @cf, align 1
  %v2_1b8c3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1b8c3, i32* @eax, align 8
  %v2_1b8d0 = call i32 @function_3db7a(i32 %v2_1b8c3, i32 %arg2)
  %v3_1b8e2 = load i32, i32* %stack_var_-20, align 4
  %v3_1b8e9 = load i32, i32* %stack_var_-24, align 4
  %v4_1b8f3 = call i32 @function_3dbc4(i32 %arg1, i32 %v3_1b8e9, i32 %v3_1b8e2, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b90a

bb:                                               ; preds = %dec_label_pc_1b885
  %v1_1b908 = call i32 @function_1b90f()
  br label %dec_label_pc_1b90a

dec_label_pc_1b90a:                               ; preds = %bb, %dec_label_pc_1b885
  %v2_1b908 = phi i32 [ %v1_1b908, %bb ], [ %arg1, %dec_label_pc_1b885 ]
  ret i32 %v2_1b908

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_3db7a, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b90f() local_unnamed_addr {
dec_label_pc_1b90f:
  %v0_1b910 = load i32, i32* @eax, align 8
  ret i32 %v0_1b910
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b913:
  store i32 %arg1, i32* @eax, align 8
  %v2_1b943 = call i32 @function_3dce4(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1b954

bb:                                               ; preds = %dec_label_pc_1b913
  %v1_1b952 = call i32 @function_1b959()
  br label %dec_label_pc_1b954

dec_label_pc_1b954:                               ; preds = %bb, %dec_label_pc_1b913
  %v2_1b952 = phi i32 [ %v1_1b952, %bb ], [ 0, %dec_label_pc_1b913 ]
  ret i32 %v2_1b952

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b959() local_unnamed_addr {
dec_label_pc_1b959:
  %v0_1b95a = load i32, i32* @eax, align 8
  ret i32 %v0_1b95a
}

define i32 @_ZSt4copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b95b:
  store i32 %arg2, i32* @eax, align 8
  %v1_1b985 = call x86_fp80 @function_3dd6e(i32 %arg2)
  store x86_fp80 %v1_1b985, x86_fp80* @st0, align 4
  %v2_1b985 = fptrunc x86_fp80 %v1_1b985 to float
  %v3_1b985 = bitcast float %v2_1b985 to i32
  store i32 %v3_1b985, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_1b992 = call x86_fp80 @function_3dd6e(i32 %arg1)
  %v2_1b992 = fptrunc x86_fp80 %v1_1b992 to float
  %v3_1b992 = bitcast float %v2_1b992 to i32
  store i32 %v3_1b992, i32* @eax, align 8
  %v0_1b99e = load i32, i32* @ebx, align 4
  %v3_1b9a5 = call i32 @function_3dda3(i32 %v3_1b992, i32 %v0_1b99e, i32 %arg3)
  ret i32 %v3_1b9a5

; uselistorder directives
  uselistorder x86_fp80 %v1_1b985, { 1, 0 }
  uselistorder x86_fp80 (i32)* @function_3dd6e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b9c1:
  store i32 %arg1, i32* @eax, align 8
  %v7_1b9fe = call i32 @function_3de7b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_1b9fe

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba16:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ba39

bb:                                               ; preds = %dec_label_pc_1ba16
  %v2_1ba37 = call i32 @function_1ba3e(i32 %arg1)
  br label %dec_label_pc_1ba39

dec_label_pc_1ba39:                               ; preds = %bb, %dec_label_pc_1ba16
  %v3_1ba37 = phi i32 [ %v2_1ba37, %bb ], [ 0, %dec_label_pc_1ba16 ]
  ret i32 %v3_1ba37
}

define i32 @function_1ba3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba3e:
  %v0_1ba3f = load i32, i32* @eax, align 8
  ret i32 %v0_1ba3f
}

define i32 @_ZN5boost6detail7variant9destroyerC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba40:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ba6e

bb:                                               ; preds = %dec_label_pc_1ba40
  %v2_1ba6c = call i32 @function_1ba73(i32 %arg1)
  br label %dec_label_pc_1ba6e

dec_label_pc_1ba6e:                               ; preds = %bb, %dec_label_pc_1ba40
  %v3_1ba6c = phi i32 [ %v2_1ba6c, %bb ], [ 0, %dec_label_pc_1ba40 ]
  ret i32 %v3_1ba6c
}

define i32 @function_1ba73(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba73:
  %v0_1ba74 = load i32, i32* @eax, align 8
  ret i32 %v0_1ba74
}

define i32 @_ZN5boost6detail7variant9destroyerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba76:
  store i32 %arg1, i32* @eax, align 8
  %v1_1ba93 = call i32 @function_31a04(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1baa4

bb:                                               ; preds = %dec_label_pc_1ba76
  %v1_1baa2 = call i32 @function_1baa9()
  br label %dec_label_pc_1baa4

dec_label_pc_1baa4:                               ; preds = %bb, %dec_label_pc_1ba76
  %v2_1baa2 = phi i32 [ %v1_1baa2, %bb ], [ 0, %dec_label_pc_1ba76 ]
  ret i32 %v2_1baa2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1baa9() local_unnamed_addr {
dec_label_pc_1baa9:
  %v0_1baaa = load i32, i32* @eax, align 8
  ret i32 %v0_1baaa
}

define i32 @_ZN5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1baac:
  ret i32 0
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bad6:
  store i32 %arg1, i32* @eax, align 8
  %v1_1baf3 = call i32 @function_37582(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bb04

bb:                                               ; preds = %dec_label_pc_1bad6
  %v1_1bb02 = call i32 @function_1bb09()
  br label %dec_label_pc_1bb04

dec_label_pc_1bb04:                               ; preds = %bb, %dec_label_pc_1bad6
  %v2_1bb02 = phi i32 [ %v1_1bb02, %bb ], [ 0, %dec_label_pc_1bad6 ]
  ret i32 %v2_1bb02

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bb09() local_unnamed_addr {
dec_label_pc_1bb09:
  %v0_1bb0a = load i32, i32* @eax, align 8
  ret i32 %v0_1bb0a
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEEC1ERS3_NS_12defer_lock_tE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bb0c:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_1bb3b = add i32 %tmp104, 4
  %v2_1bb3b = inttoptr i32 %v1_1bb3b to i8*
  store i8 0, i8* %v2_1bb3b, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bb4b

bb:                                               ; preds = %dec_label_pc_1bb0c
  %sext = mul i32 %arg3, 16777216
  %v4_1bb49 = sdiv i32 %sext, 16777216
  %v5_1bb49 = call i32 @function_1bb50(i32 %v4_1bb49, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1bb4b

dec_label_pc_1bb4b:                               ; preds = %bb, %dec_label_pc_1bb0c
  %v6_1bb49 = phi i32 [ %v5_1bb49, %bb ], [ 0, %dec_label_pc_1bb0c ]
  ret i32 %v6_1bb49
}

define i32 @function_1bb50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bb50:
  %v0_1bb51 = load i32, i32* @eax, align 8
  ret i32 %v0_1bb51
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bb52:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp101, i32* @eax, align 8
  %v1_1bb6f = call i32 @function_377fc(i32 %tmp101)
  %v4_1bb74 = trunc i32 %v1_1bb6f to i8
  store i1 false, i1* @cf, align 1
  %v5_1bb74 = icmp eq i8 %v4_1bb74, 0
  br i1 %v5_1bb74, label %dec_label_pc_1bb85, label %dec_label_pc_1bb78

dec_label_pc_1bb78:                               ; preds = %dec_label_pc_1bb52
  %v2_1bb7b = load i32, i32* %arg1, align 4
  store i32 %v2_1bb7b, i32* @eax, align 8
  %v1_1bb80 = call i32 @function_327e6(i32 %v2_1bb7b)
  br label %dec_label_pc_1bb85

dec_label_pc_1bb85:                               ; preds = %dec_label_pc_1bb78, %dec_label_pc_1bb52
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE8TryEnterEPKcS6_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1bb98:
  %v1_1bbc7 = call i32 @function_3e0d8(i32 %arg1)
  %v5_1bbec = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE8TryEnterEPKcS6_i(i32 %arg2, i32 %arg3, i32 %arg4, i32 %v1_1bbc7, i32 1)
  store i32 %arg1, i32* @eax, align 8
  %v1_1bbf7 = call i32 @function_3e108(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_1bc02 = call i32 @function_37842(i32 %arg1)
  %v1_1bc07 = xor i32 %v1_1bc02, 1
  %v4_1bc07 = trunc i32 %v1_1bc07 to i8
  %v5_1bc0a = icmp eq i8 %v4_1bc07, 0
  br i1 %v5_1bc0a, label %dec_label_pc_1bc13, label %dec_label_pc_1bc0e

dec_label_pc_1bc0e:                               ; preds = %dec_label_pc_1bc13, %bb, %dec_label_pc_1bb98
  %merge = phi i32 [ %v1_1bc07, %dec_label_pc_1bb98 ], [ %v1_1bc28, %bb ], [ %v1_1bc19, %dec_label_pc_1bc13 ]
  ret i32 %merge

dec_label_pc_1bc13:                               ; preds = %dec_label_pc_1bb98
  store i32 %arg1, i32* @eax, align 8
  %v1_1bc19 = call i32 @function_37842(i32 %arg1)
  store i32 %v1_1bc19, i32* @eax, align 8
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_1bc0e

bb:                                               ; preds = %dec_label_pc_1bc13
  %v1_1bc28 = call i32 @function_1bc2f()
  br label %dec_label_pc_1bc0e

; uselistorder directives
  uselistorder i32 %v1_1bc19, { 1, 0 }
  uselistorder i32 (i32)* @function_37842, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 5, 4, 3, 2, 6 }
  uselistorder label %dec_label_pc_1bc0e, { 1, 0, 2 }
}

define i32 @function_1bc2f() local_unnamed_addr {
dec_label_pc_1bc2f:
  %v0_1bc30 = load i32, i32* @eax, align 8
  ret i32 %v0_1bc30
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE5EnterEPKcS6_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1bc32:
  store i32 %arg1, i32* @eax, align 8
  %v1_1bc61 = call i32 @function_3e172(i32 %arg1)
  %v5_1bc86 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE5EnterEPKcS6_i(i32 %arg2, i32 %arg3, i32 %arg4, i32 %v1_1bc61, i32 0)
  store i32 %arg1, i32* @eax, align 8
  %v1_1bc91 = call i32 @function_3e22a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZNK5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE9owns_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bcaa:
  %v1_1bcc4 = add i32 %arg1, 4
  %v2_1bcc4 = inttoptr i32 %v1_1bcc4 to i8*
  %v3_1bcc4 = load i8, i8* %v2_1bcc4, align 1
  %v4_1bcc4 = zext i8 %v3_1bcc4 to i32
  store i32 %v4_1bcc4, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bcd4

bb:                                               ; preds = %dec_label_pc_1bcaa
  %v2_1bcd2 = call i32 @function_1bcd9(i32 %arg1)
  br label %dec_label_pc_1bcd4

dec_label_pc_1bcd4:                               ; preds = %bb, %dec_label_pc_1bcaa
  %v3_1bcd2 = phi i32 [ %v2_1bcd2, %bb ], [ %v4_1bcc4, %dec_label_pc_1bcaa ]
  ret i32 %v3_1bcd2
}

define i32 @function_1bcd9(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bcd9:
  %v0_1bcda = load i32, i32* @eax, align 8
  ret i32 %v0_1bcda
}

define i32 @_ZN5boost15foreach_detail_13auto_any_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bcdc:
  ret i32 0
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bd06:
  ret i32 0
}

define i32 @_ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1bd48:
  %edx.global-to-local = alloca i32, align 4
  %v0_1bd72 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_1bd72, 16777216
  %v8_1bd8a = sdiv i32 %sext, 16777216
  %v9_1bd8a = sext i8 %arg4 to i32
  %v10_1bd8a = call i32 @function_3e556(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_1bd8a, i32 %v9_1bd8a, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bd9b

bb:                                               ; preds = %dec_label_pc_1bd48
  %v1_1bd99 = call i32 @function_1bda0()
  br label %dec_label_pc_1bd9b

dec_label_pc_1bd9b:                               ; preds = %bb, %dec_label_pc_1bd48
  %v2_1bd99 = phi i32 [ %v1_1bd99, %bb ], [ 0, %dec_label_pc_1bd48 ]
  ret i32 %v2_1bd99

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bda0() local_unnamed_addr {
dec_label_pc_1bda0:
  %v0_1bda1 = load i32, i32* @eax, align 8
  ret i32 %v0_1bda1
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bda2:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bdc8

bb:                                               ; preds = %dec_label_pc_1bda2
  %v2_1bdc6 = call i32 @function_1bdcd(i32 %arg1)
  br label %dec_label_pc_1bdc8

dec_label_pc_1bdc8:                               ; preds = %bb, %dec_label_pc_1bda2
  %v3_1bdc6 = phi i32 [ %v2_1bdc6, %bb ], [ %arg1, %dec_label_pc_1bda2 ]
  ret i32 %v3_1bdc6
}

define i32 @function_1bdcd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bdcd:
  %v0_1bdce = load i32, i32* @eax, align 8
  ret i32 %v0_1bdce
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bdd0:
  store i32 %arg1, i32* @eax, align 8
  %v1_1bded = call i32 @function_3e712(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bdfe

bb:                                               ; preds = %dec_label_pc_1bdd0
  %v1_1bdfc = call i32 @function_1be03()
  br label %dec_label_pc_1bdfe

dec_label_pc_1bdfe:                               ; preds = %bb, %dec_label_pc_1bdd0
  %v2_1bdfc = phi i32 [ %v1_1bdfc, %bb ], [ 0, %dec_label_pc_1bdd0 ]
  ret i32 %v2_1bdfc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1be03() local_unnamed_addr {
dec_label_pc_1be03:
  %v0_1be04 = load i32, i32* @eax, align 8
  ret i32 %v0_1be04
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1be06:
  store i32 %arg1, i32* @eax, align 8
  %v1_1be23 = call i32 @function_3e6f6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1be34

bb:                                               ; preds = %dec_label_pc_1be06
  %v1_1be32 = call i32 @function_1be39()
  br label %dec_label_pc_1be34

dec_label_pc_1be34:                               ; preds = %bb, %dec_label_pc_1be06
  %v2_1be32 = phi i32 [ %v1_1be32, %bb ], [ 0, %dec_label_pc_1be06 ]
  ret i32 %v2_1be32

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1be39() local_unnamed_addr {
dec_label_pc_1be39:
  %v0_1be3a = load i32, i32* @eax, align 8
  ret i32 %v0_1be3a
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1be3c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1be57 = add i32 %tmp101, 8
  %v2_1be57 = inttoptr i32 %v1_1be57 to i32*
  %v3_1be57 = load i32, i32* %v2_1be57, align 4
  %v2_1be5f = load i32, i32* %arg1, align 4
  %v2_1be63 = sub i32 %v3_1be57, %v2_1be5f
  store i32 %v2_1be63, i32* @ecx, align 8
  %v2_1be67 = sdiv i32 %v2_1be63, 4
  %v3_1be6a = mul i32 %v2_1be67, -991146299
  store i32 %v3_1be6a, i32* @edx, align 4
  %v2_1be75 = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v3_1be85 = trunc i32 %tmp101 to i16
  %v4_1be85 = call i32 @function_3e7b4(i16 %v3_1be85, i32 %v2_1be75, i32 %v3_1be6a)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bea1

bb:                                               ; preds = %dec_label_pc_1be3c
  %v2_1be9f = call i32 @function_1bebf(i32 %tmp101)
  store i32 %v2_1be9f, i32* @eax, align 8
  br label %dec_label_pc_1bea1

dec_label_pc_1bea1:                               ; preds = %bb, %dec_label_pc_1be3c
  %v0_1bea1 = call i32 @function_1beba()
  ret i32 %v0_1bea1

; uselistorder directives
  uselistorder i32 %v3_1be6a, { 1, 0 }
  uselistorder i32 %tmp101, { 0, 2, 3, 1 }
}

define i32 @function_1bea4() local_unnamed_addr {
dec_label_pc_1bea4:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bea4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bea4
}

define i32 @function_1beba() local_unnamed_addr {
dec_label_pc_1beba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1bebf(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bebf:
  %v0_1bec4 = load i32, i32* @eax, align 8
  ret i32 %v0_1bec4
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bec6:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1beec

bb:                                               ; preds = %dec_label_pc_1bec6
  %v2_1beea = call i32 @function_1bef1(i32 %arg1)
  br label %dec_label_pc_1beec

dec_label_pc_1beec:                               ; preds = %bb, %dec_label_pc_1bec6
  %v3_1beea = phi i32 [ %v2_1beea, %bb ], [ %arg1, %dec_label_pc_1bec6 ]
  ret i32 %v3_1beea
}

define i32 @function_1bef1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bef1:
  %v0_1bef2 = load i32, i32* @eax, align 8
  ret i32 %v0_1bef2
}

define i32 @_ZSt8_DestroyIP5CTxInS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bef3:
  %v2_1bf23 = call i32 @function_3e8c0(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bf34

bb:                                               ; preds = %dec_label_pc_1bef3
  %v1_1bf32 = call i32 @function_1bf39()
  br label %dec_label_pc_1bf34

dec_label_pc_1bf34:                               ; preds = %bb, %dec_label_pc_1bef3
  %v2_1bf32 = phi i32 [ %v1_1bf32, %bb ], [ 0, %dec_label_pc_1bef3 ]
  ret i32 %v2_1bf32
}

define i32 @function_1bf39() local_unnamed_addr {
dec_label_pc_1bf39:
  %v0_1bf3a = load i32, i32* @eax, align 8
  ret i32 %v0_1bf3a
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bf3c:
  %v1_1bf59 = call i32 @function_327b2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1bf6a

bb:                                               ; preds = %dec_label_pc_1bf3c
  %v1_1bf68 = call i32 @function_1bf6f()
  br label %dec_label_pc_1bf6a

dec_label_pc_1bf6a:                               ; preds = %bb, %dec_label_pc_1bf3c
  %v2_1bf68 = phi i32 [ %v1_1bf68, %bb ], [ 0, %dec_label_pc_1bf3c ]
  ret i32 %v2_1bf68
}

define i32 @function_1bf6f() local_unnamed_addr {
dec_label_pc_1bf6f:
  %v0_1bf70 = load i32, i32* @eax, align 8
  ret i32 %v0_1bf70
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bf72:
  store i32 %arg1, i32* @eax, align 8
  %v1_1bf8f = call i32 @function_3e982(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bfa8:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1bfc3 = add i32 %tmp102, 8
  %v2_1bfc3 = inttoptr i32 %v1_1bfc3 to i32*
  %v3_1bfc3 = load i32, i32* %v2_1bfc3, align 4
  %v2_1bfcb = load i32, i32* %arg1, align 4
  %v2_1bfcf = sub i32 %v3_1bfc3, %v2_1bfcb
  %v2_1bfd3 = sdiv i32 %v2_1bfcf, 4
  %v3_1bfd6 = mul i32 %v2_1bfd3, -858993459
  store i32 %tmp102, i32* @eax, align 8
  %v3_1bff1 = call i32 @function_3ea0a(i32 %tmp102, i32 %v2_1bfcb, i32 %v3_1bfd6)
  store i32 %tmp102, i32* @eax, align 8
  %v1_1bffc = call i32 @function_37ee4(i32 %tmp102)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c026

bb:                                               ; preds = %dec_label_pc_1bfa8
  %v1_1c00b = call i32 @function_1c02b()
  br label %dec_label_pc_1c026

dec_label_pc_1c026:                               ; preds = %dec_label_pc_1bfa8, %bb
  %v0_1c00d = phi i32 [ 0, %dec_label_pc_1bfa8 ], [ %v1_1c00b, %bb ]
  ret i32 %v0_1c00d

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1c026, { 1, 0 }
}

define i32 @function_1c00f() local_unnamed_addr {
dec_label_pc_1c00f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1c00f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1c00f, i32* %ebx.global-to-local, align 4
  %v0_1c011 = load i32, i32* @ebp, align 4
  %v1_1c011 = add i32 %v0_1c011, -28
  %v2_1c011 = inttoptr i32 %v1_1c011 to i32*
  %v3_1c011 = load i32, i32* %v2_1c011, align 4
  store i32 %v3_1c011, i32* @eax, align 8
  %v1_1c017 = call i32 @function_37ee4(i32 %v3_1c011)
  %v0_1c01c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1c01c, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c01c

; uselistorder directives
  uselistorder i32 (i32)* @function_37ee4, { 1, 0 }
}

define i32 @function_1c02b() local_unnamed_addr {
dec_label_pc_1c02b:
  %v0_1c030 = load i32, i32* @eax, align 8
  ret i32 %v0_1c030
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c032:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c058

bb:                                               ; preds = %dec_label_pc_1c032
  %v2_1c056 = call i32 @function_1c05d(i32 %arg1)
  br label %dec_label_pc_1c058

dec_label_pc_1c058:                               ; preds = %bb, %dec_label_pc_1c032
  %v3_1c056 = phi i32 [ %v2_1c056, %bb ], [ %arg1, %dec_label_pc_1c032 ]
  ret i32 %v3_1c056
}

define i32 @function_1c05d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c05d:
  %v0_1c05e = load i32, i32* @eax, align 8
  ret i32 %v0_1c05e
}

define i32 @_ZSt8_DestroyIP6CTxOutS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c05f:
  %v2_1c08f = call i32 @function_3eb16(i32 %arg1, i32 %arg2)
  ret i32 0
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c0a8:
  store i32 %arg1, i32* @eax, align 8
  %v1_1c0cb = call i32 @function_37f6e(i32 %arg1)
  %v1_1c0d3 = add i32 %arg1, 4
  %v2_1c0d3 = inttoptr i32 %v1_1c0d3 to i32*
  %v3_1c0d3 = load i32, i32* %v2_1c0d3, align 4
  store i32 %arg2, i32* @eax, align 8
  %v3_1c0e4 = call i32 @function_37f9b(i32 %arg2, i32 %v3_1c0d3, i32 %v1_1c0cb)
  store i32 %arg2, i32* %v2_1c0d3, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c0fe

bb:                                               ; preds = %dec_label_pc_1c0a8
  %v1_1c0fc = call i32 @function_1c103()
  br label %dec_label_pc_1c0fe

dec_label_pc_1c0fe:                               ; preds = %bb, %dec_label_pc_1c0a8
  %v2_1c0fc = phi i32 [ %v1_1c0fc, %bb ], [ 0, %dec_label_pc_1c0a8 ]
  ret i32 %v2_1c0fc

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1c103() local_unnamed_addr {
dec_label_pc_1c103:
  %v0_1c104 = load i32, i32* @eax, align 8
  ret i32 %v0_1c104
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c106:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v1_1c129 = call i32 @function_38138(i32 %arg1)
  %v1_1c131 = add i32 %arg1, 4
  %v2_1c131 = inttoptr i32 %v1_1c131 to i32*
  %v3_1c131 = load i32, i32* %v2_1c131, align 4
  store i32 %arg2, i32* %stack_var_-60, align 4
  store i32 %arg2, i32* %v2_1c131, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c15c

bb:                                               ; preds = %dec_label_pc_1c106
  %v1_1c15a = load i32, i32* %stack_var_-60, align 4
  %v4_1c15a = call i32 @function_1c161(i32 %v1_1c15a, i32 %v3_1c131, i32 %v1_1c129)
  br label %dec_label_pc_1c15c

dec_label_pc_1c15c:                               ; preds = %bb, %dec_label_pc_1c106
  %v5_1c15a = phi i32 [ %v4_1c15a, %bb ], [ 0, %dec_label_pc_1c106 ]
  ret i32 %v5_1c15a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1c161(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c161:
  %v0_1c162 = load i32, i32* @eax, align 8
  ret i32 %v0_1c162
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c164:
  %stack_var_-20 = alloca i32, align 4
  %v1_1c184 = add i32 %arg2, 4
  %v2_1c184 = inttoptr i32 %v1_1c184 to i32*
  %v3_1c184 = load i32, i32* %v2_1c184, align 4
  store i32 %v3_1c184, i32* %stack_var_-20, align 4
  %v2_1c18a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_1c197 = call i32 @function_3ec5e(i32 %arg1, i32 %v2_1c18a)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c1ab

bb:                                               ; preds = %dec_label_pc_1c164
  %v1_1c1a9 = call i32 @function_1c1b0()
  br label %dec_label_pc_1c1ab

dec_label_pc_1c1ab:                               ; preds = %bb, %dec_label_pc_1c164
  %v2_1c1a9 = phi i32 [ %v1_1c1a9, %bb ], [ %arg1, %dec_label_pc_1c164 ]
  ret i32 %v2_1c1a9

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1c1b0() local_unnamed_addr {
dec_label_pc_1c1b0:
  %v0_1c1b1 = load i32, i32* @eax, align 8
  ret i32 %v0_1c1b1
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1c1b4:
  %stack_var_-20 = alloca i32, align 4
  %v2_1c1d4 = load i32, i32* %arg2, align 4
  store i32 %v2_1c1d4, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c1fa

bb:                                               ; preds = %dec_label_pc_1c1b4
  %v2_1c1d9 = ptrtoint i32* %stack_var_-20 to i32
  %v3_1c1f8 = call i32 @function_1c1ff(i32 %arg1, i32 %v2_1c1d9)
  br label %dec_label_pc_1c1fa

dec_label_pc_1c1fa:                               ; preds = %bb, %dec_label_pc_1c1b4
  %v4_1c1f8 = phi i32 [ %v3_1c1f8, %bb ], [ %arg1, %dec_label_pc_1c1b4 ]
  ret i32 %v4_1c1f8
}

define i32 @function_1c1ff(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c1ff:
  %v0_1c200 = load i32, i32* @eax, align 8
  ret i32 %v0_1c200
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c204:
  %stack_var_-20 = alloca i32, align 4
  %v1_1c224 = add i32 %arg2, 4
  %v2_1c224 = inttoptr i32 %v1_1c224 to i32*
  %v3_1c224 = load i32, i32* %v2_1c224, align 4
  store i32 %v3_1c224, i32* %stack_var_-20, align 4
  %v2_1c22a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_1c237 = call i32 @function_3ed66(i32 %arg1, i32 %v2_1c22a)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c24b

bb:                                               ; preds = %dec_label_pc_1c204
  %v1_1c249 = call i32 @function_1c250()
  br label %dec_label_pc_1c24b

dec_label_pc_1c24b:                               ; preds = %bb, %dec_label_pc_1c204
  %v2_1c249 = phi i32 [ %v1_1c249, %bb ], [ %arg1, %dec_label_pc_1c204 ]
  ret i32 %v2_1c249

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1c250() local_unnamed_addr {
dec_label_pc_1c250:
  %v0_1c251 = load i32, i32* @eax, align 8
  ret i32 %v0_1c251
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1c254:
  %stack_var_-20 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i1 true, i1* @zf, align 1
  %v2_1c274 = load i32, i32* %arg2, align 4
  store i32 %v2_1c274, i32* %stack_var_-20, align 4
  %v2_1c279 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_1c286 = call i32 @function_3edb6(i32 %arg1, i32 %v2_1c279)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c29a

bb:                                               ; preds = %dec_label_pc_1c254
  %v1_1c298 = call i32 @function_1c29f()
  br label %dec_label_pc_1c29a

dec_label_pc_1c29a:                               ; preds = %bb, %dec_label_pc_1c254
  %v2_1c298 = phi i32 [ %v1_1c298, %bb ], [ %arg1, %dec_label_pc_1c254 ]
  ret i32 %v2_1c298

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1c29f() local_unnamed_addr {
dec_label_pc_1c29f:
  %v0_1c2a0 = load i32, i32* @eax, align 8
  ret i32 %v0_1c2a0
}

define i32 @_ZNKSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c2a4:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c2ca

bb:                                               ; preds = %dec_label_pc_1c2a4
  %v2_1c2c8 = call i32 @function_1c2cf(i32 %arg1)
  br label %dec_label_pc_1c2ca

dec_label_pc_1c2ca:                               ; preds = %bb, %dec_label_pc_1c2a4
  %v3_1c2c8 = phi i32 [ %v2_1c2c8, %bb ], [ %arg1, %dec_label_pc_1c2a4 ]
  ret i32 %v3_1c2c8
}

define i32 @function_1c2cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c2cf:
  %v0_1c2d0 = load i32, i32* @eax, align 8
  ret i32 %v0_1c2d0
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c2d2:
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %tmp105, i32* @eax, align 8
  %v2_1c303 = call i32 @function_3ef06(i32 %tmp105, i32 %arg3)
  store i32 %tmp105, i32* @eax, align 8
  %v2_1c315 = call i32 @function_3ef66(i32 %tmp105, i32 %arg2)
  store i32 %v2_1c315, i32* %arg1, align 4
  %v2_1c329 = add i32 %tmp105, 4
  %v3_1c329 = inttoptr i32 %v2_1c329 to i32*
  store i32 %v2_1c315, i32* %v3_1c329, align 4
  %v2_1c32f = load i32, i32* %arg1, align 4
  %v2_1c33b = mul i32 %arg2, 20
  %v3_1c33e = add i32 %v2_1c32f, %v2_1c33b
  %v2_1c344 = add i32 %tmp105, 8
  %v3_1c344 = inttoptr i32 %v2_1c344 to i32*
  store i32 %v3_1c33e, i32* %v3_1c344, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c36c

bb:                                               ; preds = %dec_label_pc_1c2d2
  %v1_1c351 = call i32 @function_1c371()
  br label %dec_label_pc_1c36c

dec_label_pc_1c36c:                               ; preds = %dec_label_pc_1c2d2, %bb
  %v0_1c353 = phi i32 [ 0, %dec_label_pc_1c2d2 ], [ %v1_1c351, %bb ]
  ret i32 %v0_1c353

; uselistorder directives
  uselistorder i32 %tmp105, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1c36c, { 1, 0 }
}

define i32 @function_1c355() local_unnamed_addr {
dec_label_pc_1c355:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1c355 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1c355, i32* %ebx.global-to-local, align 4
  %v0_1c357 = load i32, i32* @ebp, align 4
  %v1_1c357 = add i32 %v0_1c357, -28
  %v2_1c357 = inttoptr i32 %v1_1c357 to i32*
  %v3_1c357 = load i32, i32* %v2_1c357, align 4
  store i32 %v3_1c357, i32* @eax, align 8
  %v1_1c35d = call i32 @function_3820e(i32 %v3_1c357)
  %v0_1c362 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1c362, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c362
}

define i32 @function_1c371() local_unnamed_addr {
dec_label_pc_1c371:
  %v0_1c376 = load i32, i32* @eax, align 8
  ret i32 %v0_1c376
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c377:
  store i32 %arg1, i32* @eax, align 8
  %v7_1c3b4 = call i32 @function_3f062(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1c3b4, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c3c5

bb:                                               ; preds = %dec_label_pc_1c377
  %v1_1c3c3 = call i32 @function_1c3ca()
  br label %dec_label_pc_1c3c5

dec_label_pc_1c3c5:                               ; preds = %bb, %dec_label_pc_1c377
  %v2_1c3c3 = phi i32 [ %v1_1c3c3, %bb ], [ %v7_1c3b4, %dec_label_pc_1c377 ]
  ret i32 %v2_1c3c3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1c3ca() local_unnamed_addr {
dec_label_pc_1c3ca:
  %v0_1c3cb = load i32, i32* @eax, align 8
  ret i32 %v0_1c3cb
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c3cc:
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c3f6:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c419

bb:                                               ; preds = %dec_label_pc_1c3f6
  %v2_1c417 = call i32 @function_1c41e(i32 %arg1)
  br label %dec_label_pc_1c419

dec_label_pc_1c419:                               ; preds = %bb, %dec_label_pc_1c3f6
  %v3_1c417 = phi i32 [ %v2_1c417, %bb ], [ 0, %dec_label_pc_1c3f6 ]
  ret i32 %v3_1c417
}

define i32 @function_1c41e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c41e:
  %v0_1c41f = load i32, i32* @eax, align 8
  ret i32 %v0_1c41f
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c420:
  %v1_1c440 = add i32 %arg2, 4
  %v2_1c44d = call i32 @function_3f1b0(i32 %arg1, i32 %v1_1c440)
  ret i32 %arg1
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c46a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1c46a = load i32, i32* %ebp.global-to-local, align 4
  %v2_1c484 = load i32, i32* %arg1, align 4
  store i32 %v0_1c46a, i32* %ebp.global-to-local, align 4
  ret i32 %v2_1c484
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c49a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1c4b4 = load i32, i32* %arg1, align 4
  %v1_1c4b6 = add i32 %v2_1c4b4, 20
  store i32 %v1_1c4b6, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c4cd

bb:                                               ; preds = %dec_label_pc_1c49a
  %v2_1c4cb = call i32 @function_1c4d2(i32 %tmp100)
  br label %dec_label_pc_1c4cd

dec_label_pc_1c4cd:                               ; preds = %bb, %dec_label_pc_1c49a
  %v3_1c4cb = phi i32 [ %v2_1c4cb, %bb ], [ %tmp100, %dec_label_pc_1c49a ]
  ret i32 %v3_1c4cb
}

define i32 @function_1c4d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c4d2:
  %v0_1c4d3 = load i32, i32* @eax, align 8
  ret i32 %v0_1c4d3
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c4d4:
  %v2_1c4ee = load i32, i32* %arg1, align 4
  store i32 %v2_1c4ee, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c4fc

bb:                                               ; preds = %dec_label_pc_1c4d4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1c4fa = call i32 @function_1c501(i32 %tmp100)
  br label %dec_label_pc_1c4fc

dec_label_pc_1c4fc:                               ; preds = %bb, %dec_label_pc_1c4d4
  %v3_1c4fa = phi i32 [ %v2_1c4fa, %bb ], [ %v2_1c4ee, %dec_label_pc_1c4d4 ]
  ret i32 %v3_1c4fa

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c501(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c501:
  %v0_1c502 = load i32, i32* @eax, align 8
  ret i32 %v0_1c502
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c504:
  store i32 %arg1, i32* @eax, align 8
  %v1_1c521 = call i32 @function_3f320(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c53a:
  store i32 %arg1, i32* @eax, align 8
  %v1_1c557 = call i32 @function_3f304(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c568

bb:                                               ; preds = %dec_label_pc_1c53a
  %v1_1c566 = call i32 @function_1c56d()
  br label %dec_label_pc_1c568

dec_label_pc_1c568:                               ; preds = %bb, %dec_label_pc_1c53a
  %v2_1c566 = phi i32 [ %v1_1c566, %bb ], [ 0, %dec_label_pc_1c53a ]
  ret i32 %v2_1c566

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c56d() local_unnamed_addr {
dec_label_pc_1c56d:
  %v0_1c56e = load i32, i32* @eax, align 8
  ret i32 %v0_1c56e
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c570:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1c58b = add i32 %tmp102, 8
  %v2_1c58b = inttoptr i32 %v1_1c58b to i32*
  %v3_1c58b = load i32, i32* %v2_1c58b, align 4
  %v2_1c593 = load i32, i32* %arg1, align 4
  %v2_1c597 = sub i32 %v3_1c58b, %v2_1c593
  %v2_1c59b = sdiv i32 %v2_1c597, 32
  store i32 %v2_1c59b, i32* @edx, align 4
  %v2_1c5a3 = load i32, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 8
  %v3_1c5b3 = call i32 @function_3f3c2(i32 %tmp102, i32 %v2_1c5a3, i32 %v2_1c59b)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c5e8

bb:                                               ; preds = %dec_label_pc_1c570
  %v2_1c5cd = call i32 @function_1c5ed(i32 %tmp102)
  br label %dec_label_pc_1c5e8

dec_label_pc_1c5e8:                               ; preds = %dec_label_pc_1c570, %bb
  %v0_1c5cf = phi i32 [ 0, %dec_label_pc_1c570 ], [ %v2_1c5cd, %bb ]
  ret i32 %v0_1c5cf

; uselistorder directives
  uselistorder i32 %v2_1c59b, { 1, 0 }
  uselistorder i32 %tmp102, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1c5e8, { 1, 0 }
}

define i32 @function_1c5d1() local_unnamed_addr {
dec_label_pc_1c5d1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c5d1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c5d1
}

define i32 @function_1c5ed(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5ed:
  %v0_1c5f2 = load i32, i32* @eax, align 8
  ret i32 %v0_1c5f2
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5f4:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c61a

bb:                                               ; preds = %dec_label_pc_1c5f4
  %v2_1c618 = call i32 @function_1c61f(i32 %arg1)
  br label %dec_label_pc_1c61a

dec_label_pc_1c61a:                               ; preds = %bb, %dec_label_pc_1c5f4
  %v3_1c618 = phi i32 [ %v2_1c618, %bb ], [ %arg1, %dec_label_pc_1c5f4 ]
  ret i32 %v3_1c618
}

define i32 @function_1c61f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c61f:
  %v0_1c620 = load i32, i32* @eax, align 8
  ret i32 %v0_1c620
}

define i32 @_ZSt8_DestroyIP12CTransactionS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c621:
  store i32 %arg1, i32* @eax, align 8
  %v2_1c651 = call i32 @function_3f4c8(i32 %arg1, i32 %arg2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c66a:
  store i32 %arg1, i32* @eax, align 8
  %v1_1c687 = call i32 @function_3f5a6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c698

bb:                                               ; preds = %dec_label_pc_1c66a
  %v1_1c696 = call i32 @function_1c69d()
  br label %dec_label_pc_1c698

dec_label_pc_1c698:                               ; preds = %bb, %dec_label_pc_1c66a
  %v2_1c696 = phi i32 [ %v1_1c696, %bb ], [ 0, %dec_label_pc_1c66a ]
  ret i32 %v2_1c696

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c69d() local_unnamed_addr {
dec_label_pc_1c69d:
  %v0_1c69e = load i32, i32* @eax, align 8
  ret i32 %v0_1c69e
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c6a0:
  %v1_1c6bd = call i32 @__stack_chk_fail.1659(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c6ce

bb:                                               ; preds = %dec_label_pc_1c6a0
  %v1_1c6cc = call i32 @function_1c6d3()
  br label %dec_label_pc_1c6ce

dec_label_pc_1c6ce:                               ; preds = %bb, %dec_label_pc_1c6a0
  %v2_1c6cc = phi i32 [ %v1_1c6cc, %bb ], [ 0, %dec_label_pc_1c6a0 ]
  ret i32 %v2_1c6cc
}

define i32 @function_1c6d3() local_unnamed_addr {
dec_label_pc_1c6d3:
  %v0_1c6d4 = load i32, i32* @eax, align 8
  ret i32 %v0_1c6d4
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c6d6:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1c6f1 = add i32 %tmp101, 8
  %v2_1c6f1 = inttoptr i32 %v1_1c6f1 to i32*
  %v3_1c6f1 = load i32, i32* %v2_1c6f1, align 4
  %v2_1c6f9 = load i32, i32* %arg1, align 4
  %v2_1c6fd = sub i32 %v3_1c6f1, %v2_1c6f9
  %v2_1c701 = sdiv i32 %v2_1c6fd, 32
  store i32 %v2_1c701, i32* @edx, align 4
  %v2_1c709 = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v3_1c719 = call i32 @function_3961a(i32 %tmp101, i32 %v2_1c709, i32 %v2_1c701)
  store i32 %tmp101, i32* @eax, align 8
  %v1_1c724 = call i32 @function_38d40(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c735

bb:                                               ; preds = %dec_label_pc_1c6d6
  %v1_1c733 = call i32 @function_1c753()
  store i32 %v1_1c733, i32* @eax, align 8
  br label %dec_label_pc_1c735

dec_label_pc_1c735:                               ; preds = %bb, %dec_label_pc_1c6d6
  %v0_1c735 = call i32 @function_1c74e()
  ret i32 %v0_1c735

; uselistorder directives
  uselistorder i32 %v2_1c701, { 1, 0 }
  uselistorder i32 %tmp101, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @function_38d40, { 1, 0 }
}

define i32 @function_1c738() local_unnamed_addr {
dec_label_pc_1c738:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c738 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c738
}

define i32 @function_1c74e() local_unnamed_addr {
dec_label_pc_1c74e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c753() local_unnamed_addr {
dec_label_pc_1c753:
  %v0_1c758 = load i32, i32* @eax, align 8
  ret i32 %v0_1c758
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c75a:
  ret i32 %arg1
}

define i32 @_ZSt8_DestroyIP7uint256S0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c787:
  %v2_1c7b7 = call i32 @unknown_3f6f8(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c7c8

bb:                                               ; preds = %dec_label_pc_1c787
  %v1_1c7c6 = call i32 @function_1c7cd()
  br label %dec_label_pc_1c7c8

dec_label_pc_1c7c8:                               ; preds = %bb, %dec_label_pc_1c787
  %v2_1c7c6 = phi i32 [ %v1_1c7c6, %bb ], [ 0, %dec_label_pc_1c787 ]
  ret i32 %v2_1c7c6
}

define i32 @function_1c7cd() local_unnamed_addr {
dec_label_pc_1c7cd:
  %v0_1c7ce = load i32, i32* @eax, align 8
  ret i32 %v0_1c7ce
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c7d0:
  %v1_1c7fb = add i32 %arg1, 4
  %v2_1c7fb = inttoptr i32 %v1_1c7fb to i32*
  store i32 %arg2, i32* %v2_1c7fb, align 4
  ret i32 0
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c82e:
  %v1_1c859 = add i32 %arg1, 4
  %v2_1c859 = inttoptr i32 %v1_1c859 to i32*
  %v3_1c859 = load i32, i32* %v2_1c859, align 4
  %v3_1c86a = call i32 @function_38fb5(i32 %arg2, i32 %v3_1c859, i32 %arg1)
  store i32 %arg2, i32* %v2_1c859, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c884

bb:                                               ; preds = %dec_label_pc_1c82e
  %v1_1c882 = call i32 @function_1c889()
  br label %dec_label_pc_1c884

dec_label_pc_1c884:                               ; preds = %bb, %dec_label_pc_1c82e
  %v2_1c882 = phi i32 [ %v1_1c882, %bb ], [ 0, %dec_label_pc_1c82e ]
  ret i32 %v2_1c882

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1c889() local_unnamed_addr {
dec_label_pc_1c889:
  %v0_1c88a = load i32, i32* @eax, align 8
  ret i32 %v0_1c88a
}

define i32 @_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c88c:
  store i32 %arg1, i32* @eax, align 8
  %v8_1c8d0 = call i32 @function_3f896(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c8e8:
  %v1_1c908 = add i32 %arg2, 4
  store i32 %arg1, i32* @eax, align 8
  %v2_1c915 = call i32 @function_3fe38(i32 %arg1, i32 %v1_1c908)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1c929

bb:                                               ; preds = %dec_label_pc_1c8e8
  %v1_1c927 = call i32 @function_1c92e()
  br label %dec_label_pc_1c929

dec_label_pc_1c929:                               ; preds = %bb, %dec_label_pc_1c8e8
  %v2_1c927 = phi i32 [ %v1_1c927, %bb ], [ %arg1, %dec_label_pc_1c8e8 ]
  ret i32 %v2_1c927

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1c92e() local_unnamed_addr {
dec_label_pc_1c92e:
  %v0_1c92f = load i32, i32* @eax, align 8
  ret i32 %v0_1c92f
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c932:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_1c935 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1c95c = call i32 @function_3feea(i32 %arg2)
  store i32 %v1_1c95c, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1c969 = call i32 @function_3feba(i32 %arg2)
  %v2_1c96e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg3, i32* @ecx, align 8
  store i32 %arg2, i32* @eax, align 8
  %v5_1c98a = call i32 @function_3ff1a(i32 %v2_1c96e, i32 %arg2, i32 %v1_1c969, i32 %v1_1c95c, i32 %arg3)
  %v2_1c992 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1c992, i32* @eax, align 8
  %v2_1c99f = call i32 @function_3921a(i32 %v2_1c992, i32 %arg2)
  %v2_1c9b4 = call i32 @function_39350(i32 %v2_1c96e, i32 %v2_1c992)
  %v4_1c9b9 = trunc i32 %v2_1c9b4 to i8
  store i1 false, i1* @cf, align 1
  %v5_1c9b9 = icmp eq i8 %v4_1c9b9, 0
  %v1_1c9bb = icmp eq i1 %v5_1c9b9, false
  br i1 %v1_1c9bb, label %dec_label_pc_1c9e4, label %dec_label_pc_1c9bd

dec_label_pc_1c9bd:                               ; preds = %dec_label_pc_1c932
  %v3_1c9bd = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1c9bd, i32* @eax, align 8
  %v1_1c9c3 = call i32 @function_3ffce(i32 %v3_1c9bd)
  store i32 %arg2, i32* @eax, align 8
  %v3_1c9db = call i32 @function_39464(i32 %arg2, i32 %arg3, i32 %v1_1c9c3)
  %v4_1c9e0 = trunc i32 %v3_1c9db to i8
  %v5_1c9e0 = icmp eq i8 %v4_1c9e0, 0
  br i1 %v5_1c9e0, label %dec_label_pc_1c9fb, label %dec_label_pc_1c9e4

dec_label_pc_1c9e4:                               ; preds = %dec_label_pc_1c9bd, %dec_label_pc_1c932
  store i32 %tmp115, i32* @eax, align 8
  %v2_1c9f1 = call i32 @function_3921a(i32 %tmp115, i32 %arg2)
  br label %dec_label_pc_1ca03

dec_label_pc_1c9fb:                               ; preds = %dec_label_pc_1c9bd
  %v3_1c9fe = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1c9fe, i32* %arg1, align 4
  br label %dec_label_pc_1ca03

dec_label_pc_1ca03:                               ; preds = %dec_label_pc_1c9fb, %dec_label_pc_1c9e4
  store i32 %v0_1c935, i32* %ebx.global-to-local, align 4
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %tmp115, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_3921a, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 5, 4, 9, 8, 7, 6 }
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEeqERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ca1e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1ca1e = load i32, i32* %ebp.global-to-local, align 4
  %v2_1ca3e = load i32, i32* %arg1, align 4
  %v1_1ca43 = inttoptr i32 %arg2 to i32*
  %v2_1ca43 = load i32, i32* %v1_1ca43, align 4
  %v12_1ca45 = icmp eq i32 %v2_1ca3e, %v2_1ca43
  %v1_1ca47 = zext i1 %v12_1ca45 to i32
  %v3_1ca47 = and i32 %v2_1ca43, -256
  %v4_1ca47 = or i32 %v1_1ca47, %v3_1ca47
  store i32 %v0_1ca1e, i32* %ebp.global-to-local, align 4
  ret i32 %v4_1ca47

; uselistorder directives
  uselistorder i32 %v2_1ca43, { 1, 0 }
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE11lower_boundERS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ca5e:
  store i32 %arg1, i32* @eax, align 8
  %v3_1ca95 = call i32 @function_4013e(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1caac

bb:                                               ; preds = %dec_label_pc_1ca5e
  %v1_1caaa = call i32 @function_1cab1()
  br label %dec_label_pc_1caac

dec_label_pc_1caac:                               ; preds = %bb, %dec_label_pc_1ca5e
  %v2_1caaa = phi i32 [ %v1_1caaa, %bb ], [ %arg1, %dec_label_pc_1ca5e ]
  ret i32 %v2_1caaa

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1cab1() local_unnamed_addr {
dec_label_pc_1cab1:
  %v0_1cab2 = load i32, i32* @eax, align 8
  ret i32 %v0_1cab2
}

define i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cab6:
  store i32 %arg1, i32* @eax, align 8
  %v2_1cae0 = call i32 @function_40212(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSsEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1cb00:
  %v2_1cb1a = load i32, i32* %arg1, align 4
  %v1_1cb1c = add i32 %v2_1cb1a, 16
  store i32 %v1_1cb1c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1cb2b

bb:                                               ; preds = %dec_label_pc_1cb00
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1cb29 = call i32 @function_1cb30(i32 %tmp100)
  br label %dec_label_pc_1cb2b

dec_label_pc_1cb2b:                               ; preds = %bb, %dec_label_pc_1cb00
  %v3_1cb29 = phi i32 [ %v2_1cb29, %bb ], [ %v1_1cb1c, %dec_label_pc_1cb00 ]
  ret i32 %v3_1cb29

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1cb30(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cb30:
  %v0_1cb31 = load i32, i32* @eax, align 8
  ret i32 %v0_1cb31
}

define i32 @_ZNKSt4lessISsEclERKSsS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cb32:
  ret i32 %arg2
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cb7a:
  store i32 %arg1, i32* @eax, align 8
  %v2_1cba4 = call i32 @function_4030c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1cbbb

bb:                                               ; preds = %dec_label_pc_1cb7a
  %v1_1cbb9 = call i32 @function_1cbc0()
  br label %dec_label_pc_1cbbb

dec_label_pc_1cbbb:                               ; preds = %bb, %dec_label_pc_1cb7a
  %v2_1cbb9 = phi i32 [ %v1_1cbb9, %bb ], [ %arg1, %dec_label_pc_1cb7a ]
  ret i32 %v2_1cbb9

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1cbc0() local_unnamed_addr {
dec_label_pc_1cbc0:
  %v0_1cbc1 = load i32, i32* @eax, align 8
  ret i32 %v0_1cbc1
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSsEEeqERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cbc4:
  %v2_1cbe4 = load i32, i32* %arg1, align 4
  %v1_1cbe9 = inttoptr i32 %arg2 to i32*
  %v2_1cbe9 = load i32, i32* %v1_1cbe9, align 4
  %v12_1cbeb = icmp eq i32 %v2_1cbe4, %v2_1cbe9
  %v1_1cbed = zext i1 %v12_1cbeb to i32
  %v3_1cbed = and i32 %v2_1cbe9, -256
  %v4_1cbed = or i32 %v1_1cbed, %v3_1cbed
  store i32 %v4_1cbed, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1cbfc

bb:                                               ; preds = %dec_label_pc_1cbc4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1cbfa = call i32 @function_1cc01(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1cbfc

dec_label_pc_1cbfc:                               ; preds = %bb, %dec_label_pc_1cbc4
  %v4_1cbfa = phi i32 [ %v3_1cbfa, %bb ], [ %v4_1cbed, %dec_label_pc_1cbc4 ]
  ret i32 %v4_1cbfa

; uselistorder directives
  uselistorder i32 %v2_1cbe9, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1cc01(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cc01:
  %v0_1cc02 = load i32, i32* @eax, align 8
  ret i32 %v0_1cc02
}

define i32 @_ZNSt4pairIKSsSsEC1ERS0_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cc04:
  ret i32 %arg1
}

define i32 @function_1cc4f() local_unnamed_addr {
dec_label_pc_1cc4f:
  %v0_1cc4f = call i32 @function_1cc68()
  ret i32 %v0_1cc4f
}

define i32 @function_1cc52() local_unnamed_addr {
dec_label_pc_1cc52:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cc52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1cc52
}

define i32 @function_1cc68() local_unnamed_addr {
dec_label_pc_1cc68:
  %v0_1cc68 = load i32, i32* @ebp, align 4
  %v1_1cc68 = add i32 %v0_1cc68, -12
  %v2_1cc68 = inttoptr i32 %v1_1cc68 to i32*
  %v3_1cc68 = load i32, i32* %v2_1cc68, align 4
  %v1_1cc6b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1cc6b = xor i32 %v1_1cc6b, %v3_1cc68
  %v3_1cc6b = icmp eq i32 %v2_1cc6b, 0
  store i32 %v2_1cc6b, i32* @eax, align 8
  br i1 %v3_1cc6b, label %bb, label %dec_label_pc_1cc74

bb:                                               ; preds = %dec_label_pc_1cc68
  %v1_1cc72 = call i32 @function_1cc79()
  br label %dec_label_pc_1cc74

dec_label_pc_1cc74:                               ; preds = %bb, %dec_label_pc_1cc68
  %v2_1cc72 = phi i32 [ %v1_1cc72, %bb ], [ %v2_1cc6b, %dec_label_pc_1cc68 ]
  ret i32 %v2_1cc72
}

define i32 @function_1cc79() local_unnamed_addr {
dec_label_pc_1cc79:
  %v0_1cc7e = load i32, i32* @eax, align 8
  ret i32 %v0_1cc7e
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cc80:
  ret i32 %arg3
}

define i32 @function_1cc98(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cc98:
  %v0_1cc98 = load i32, i32* @ebp, align 4
  %v1_1cc98 = add i32 %v0_1cc98, 20
  %v2_1cc98 = inttoptr i32 %v1_1cc98 to i32*
  %v3_1cc98 = load i32, i32* %v2_1cc98, align 4
  %v2_1cc9b = add i32 %v0_1cc98, -40
  %v3_1cc9b = inttoptr i32 %v2_1cc9b to i32*
  store i32 %v3_1cc98, i32* %v3_1cc9b, align 4
  %v0_1cc9e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1cca4 = load i32, i32* @ebp, align 4
  %v2_1cca4 = add i32 %v1_1cca4, -12
  %v3_1cca4 = inttoptr i32 %v2_1cca4 to i32*
  store i32 %v0_1cc9e, i32* %v3_1cca4, align 4
  %v0_1cca9 = load i32, i32* @ebp, align 4
  %v1_1cca9 = add i32 %v0_1cca9, -36
  %v1_1ccb0 = add i32 %v0_1cca9, -16
  store i32 %v1_1ccb0, i32* @eax, align 8
  %v2_1ccb6 = call i32 @function_4045c(i32 %v1_1ccb0, i32 %v1_1cca9)
  %v0_1ccbb = load i32, i32* @ebp, align 4
  %v1_1ccbb = add i32 %v0_1ccbb, -32
  %v2_1ccbb = inttoptr i32 %v1_1ccbb to i32*
  %v3_1ccbb = load i32, i32* %v2_1ccbb, align 4
  %v1_1ccbe = add i32 %v0_1ccbb, -28
  %v2_1ccbe = inttoptr i32 %v1_1ccbe to i32*
  %v3_1ccbe = load i32, i32* %v2_1ccbe, align 4
  store i32 %v3_1ccbe, i32* @eax, align 8
  %v1_1ccc1 = add i32 %v0_1ccbb, -40
  %v2_1ccc1 = inttoptr i32 %v1_1ccc1 to i32*
  %v3_1ccc1 = load i32, i32* %v2_1ccc1, align 4
  %v1_1ccc8 = add i32 %v0_1ccbb, -16
  %v2_1ccc8 = inttoptr i32 %v1_1ccc8 to i32*
  %v3_1ccc8 = load i32, i32* %v2_1ccc8, align 4
  %v4_1ccd6 = call i32 @function_40496(i32 %v3_1ccbe, i32 %v3_1ccbb, i32 %v3_1ccc8, i32 %v3_1ccc1)
  %v0_1ccde = load i32, i32* @ebp, align 4
  %v1_1ccde = add i32 %v0_1ccde, -28
  %v2_1ccde = inttoptr i32 %v1_1ccde to i32*
  %v3_1ccde = load i32, i32* %v2_1ccde, align 4
  store i32 %v3_1ccde, i32* @eax, align 8
  %v1_1cce1 = add i32 %v0_1ccde, -12
  %v2_1cce1 = inttoptr i32 %v1_1cce1 to i32*
  %v3_1cce1 = load i32, i32* %v2_1cce1, align 4
  %v1_1cce4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1cce4 = xor i32 %v1_1cce4, %v3_1cce1
  %v3_1cce4 = icmp eq i32 %v2_1cce4, 0
  store i32 %v2_1cce4, i32* @edx, align 4
  br i1 %v3_1cce4, label %bb, label %dec_label_pc_1cced

bb:                                               ; preds = %dec_label_pc_1cc98
  %v1_1cceb = call i32 @function_1ccf2()
  br label %dec_label_pc_1cced

dec_label_pc_1cced:                               ; preds = %bb, %dec_label_pc_1cc98
  %v2_1cceb = phi i32 [ %v1_1cceb, %bb ], [ %v3_1ccde, %dec_label_pc_1cc98 ]
  ret i32 %v2_1cceb

; uselistorder directives
  uselistorder i32 %v0_1ccbb, { 1, 0, 2, 3 }
}

define i32 @function_1ccf2() local_unnamed_addr {
dec_label_pc_1ccf2:
  %v0_1ccf3 = load i32, i32* @eax, align 8
  ret i32 %v0_1ccf3
}

define i32 @_ZNKSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ccf6:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1cd1c

bb:                                               ; preds = %dec_label_pc_1ccf6
  %v2_1cd1a = call i32 @function_1cd21(i32 %arg1)
  br label %dec_label_pc_1cd1c

dec_label_pc_1cd1c:                               ; preds = %bb, %dec_label_pc_1ccf6
  %v3_1cd1a = phi i32 [ %v2_1cd1a, %bb ], [ %arg1, %dec_label_pc_1ccf6 ]
  ret i32 %v3_1cd1a
}

define i32 @function_1cd21(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cd21:
  %v0_1cd22 = load i32, i32* @eax, align 8
  ret i32 %v0_1cd22
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cd24:
  %ebx.global-to-local = alloca i32, align 4
  %tmp112 = ptrtoint i32* %arg1 to i32
  %v0_1cd27 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp112, i32* @eax, align 8
  %v3_1cd55 = call i32 @function_40956(i32 %tmp112, i32 %arg3)
  store i32 %tmp112, i32* @eax, align 8
  %v3_1cd67 = call i32 @function_409b6(i32 %tmp112, i32 %arg2)
  store i32 %v3_1cd67, i32* %arg1, align 4
  %v2_1cd7b = add i32 %tmp112, 4
  %v3_1cd7b = inttoptr i32 %v2_1cd7b to i32*
  store i32 %v3_1cd67, i32* %v3_1cd7b, align 4
  %v2_1cd81 = load i32, i32* %arg1, align 4
  %v3_1cd86 = mul i32 %arg2, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_1cd89 = add i32 %v2_1cd81, %v3_1cd86
  %v2_1cd8e = add i32 %tmp112, 8
  %v3_1cd8e = inttoptr i32 %v2_1cd8e to i32*
  store i32 %v2_1cd89, i32* %v3_1cd8e, align 4
  store i32 %v0_1cd27, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp112, { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1cdc1:
  store i32 %arg1, i32* @eax, align 8
  %v7_1cdfe = call i32 @function_40aaa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_1cdfe

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZSt16__introsort_loopIPxiEvT_S1_T0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ce16:
  br label %dec_label_pc_1ce94

dec_label_pc_1ce3b:                               ; preds = %dec_label_pc_1ce94
  %v10_1ce3b = icmp eq i32 %stack_var_-40.0, 0
  %v1_1ce3f = icmp eq i1 %v10_1ce3b, false
  br i1 %v1_1ce3f, label %dec_label_pc_1ce5c, label %dec_label_pc_1ce41

dec_label_pc_1ce41:                               ; preds = %dec_label_pc_1ce3b
  store i32 %arg1, i32* @eax, align 8
  %v3_1ce55 = call i32 @function_40b4e(i32 %arg1, i32 %stack_var_-36.0, i32 %stack_var_-36.0)
  br label %dec_label_pc_1ceac

dec_label_pc_1ce5c:                               ; preds = %dec_label_pc_1ce3b
  %v4_1ce5c = add i32 %stack_var_-40.0, -1
  %v2_1ce6d = call i32 @unknown_40baf(i32 %arg1, i32 %stack_var_-36.0)
  store i32 %v2_1ce6d, i32* @eax, align 8
  %v3_1ce89 = call i32 @function_39c2c(i32 %v2_1ce6d, i32 %stack_var_-36.0, i32 %v4_1ce5c)
  br label %dec_label_pc_1ce94

dec_label_pc_1ce94:                               ; preds = %dec_label_pc_1ce5c, %dec_label_pc_1ce16
  %stack_var_-36.0 = phi i32 [ %arg2, %dec_label_pc_1ce16 ], [ %v2_1ce6d, %dec_label_pc_1ce5c ]
  %stack_var_-40.0 = phi i32 [ %arg3, %dec_label_pc_1ce16 ], [ %v4_1ce5c, %dec_label_pc_1ce5c ]
  %v2_1ce9c = sub i32 %stack_var_-36.0, %arg1
  store i32 %v2_1ce9c, i32* @ecx, align 8
  %v1_1cea0 = add i32 %v2_1ce9c, -135
  %tmp112 = sub i32 134, %v2_1ce9c
  %v8_1cea0 = and i32 %tmp112, %v2_1ce9c
  %v9_1cea0 = icmp slt i32 %v8_1cea0, 0
  %v10_1cea0 = icmp eq i32 %v1_1cea0, 0
  %v11_1cea0 = icmp slt i32 %v1_1cea0, 0
  %v3_1cea5 = icmp eq i1 %v11_1cea0, %v9_1cea0
  %v4_1cea5 = icmp eq i1 %v10_1cea0, false
  %v5_1cea5 = icmp eq i1 %v3_1cea5, %v4_1cea5
  %v5_1cea8 = icmp eq i1 %v5_1cea5, false
  %v1_1ceaa = icmp eq i1 %v5_1cea8, false
  br i1 %v1_1ceaa, label %dec_label_pc_1ce3b, label %dec_label_pc_1ceac

dec_label_pc_1ceac:                               ; preds = %dec_label_pc_1ce94, %dec_label_pc_1ce41
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ceb8

bb:                                               ; preds = %dec_label_pc_1ceac
  %v1_1ceb6 = call i32 @function_1cebd()
  br label %dec_label_pc_1ceb8

dec_label_pc_1ceb8:                               ; preds = %bb, %dec_label_pc_1ceac
  %v2_1ceb6 = phi i32 [ %v1_1ceb6, %bb ], [ 0, %dec_label_pc_1ceac ]
  ret i32 %v2_1ceb6

; uselistorder directives
  uselistorder i32 %v1_1cea0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 4, 0, 1, 3, 2 }
  uselistorder i32 %v2_1ce6d, { 0, 2, 1 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1cebd() local_unnamed_addr {
dec_label_pc_1cebd:
  %v0_1cebe = load i32, i32* @eax, align 8
  ret i32 %v0_1cebe
}

define i32 @_ZSt22__final_insertion_sortIPxEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cebf:
  %v2_1cee4 = sub i32 %arg2, %arg1
  %v7_1ceed = icmp sgt i32 %v2_1cee4, 135
  br i1 %v7_1ceed, label %dec_label_pc_1ceef, label %dec_label_pc_1cf1e

dec_label_pc_1ceef:                               ; preds = %dec_label_pc_1cebf
  %v1_1cef2 = add i32 %arg1, 128
  %v2_1ceff = call i32 @unknown_40ce1(i32 %arg1, i32 %v1_1cef2)
  %v2_1cf17 = call i32 @unknown_40d9e(i32 %v1_1cef2, i32 %arg2)
  br label %dec_label_pc_1cf30

dec_label_pc_1cf1e:                               ; preds = %dec_label_pc_1cebf
  %v2_1cf2b = call i32 @unknown_40ce1(i32 %arg1, i32 %arg2)
  br label %dec_label_pc_1cf30

dec_label_pc_1cf30:                               ; preds = %dec_label_pc_1cf1e, %dec_label_pc_1ceef
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1cf3c

bb:                                               ; preds = %dec_label_pc_1cf30
  %v1_1cf3a = call i32 @function_1cf41()
  br label %dec_label_pc_1cf3c

dec_label_pc_1cf3c:                               ; preds = %bb, %dec_label_pc_1cf30
  %v2_1cf3a = phi i32 [ %v1_1cf3a, %bb ], [ 0, %dec_label_pc_1cf30 ]
  ret i32 %v2_1cf3a

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_40ce1, { 1, 0 }
}

define i32 @function_1cf41() local_unnamed_addr {
dec_label_pc_1cf41:
  %v0_1cf42 = load i32, i32* @eax, align 8
  ret i32 %v0_1cf42
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cf44:
  %v10_1cf67 = icmp eq i32 %arg2, 0
  br i1 %v10_1cf67, label %dec_label_pc_1cf86, label %dec_label_pc_1cf6d

dec_label_pc_1cf6d:                               ; preds = %dec_label_pc_1cf44
  %v3_1cf81 = call i32 @unknown_40e78(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_1cf86

dec_label_pc_1cf86:                               ; preds = %dec_label_pc_1cf6d, %dec_label_pc_1cf44
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1cf92

bb:                                               ; preds = %dec_label_pc_1cf86
  %v1_1cf90 = call i32 @function_1cf97()
  br label %dec_label_pc_1cf92

dec_label_pc_1cf92:                               ; preds = %bb, %dec_label_pc_1cf86
  %v2_1cf90 = phi i32 [ %v1_1cf90, %bb ], [ 0, %dec_label_pc_1cf86 ]
  ret i32 %v2_1cf90
}

define i32 @function_1cf97() local_unnamed_addr {
dec_label_pc_1cf97:
  %v0_1cf98 = load i32, i32* @eax, align 8
  ret i32 %v0_1cf98
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_12CTransactionESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf9a:
  %v1_1cfb4 = add i32 %arg1, 20
  %v2_1cfb4 = inttoptr i32 %v1_1cfb4 to i32*
  %v3_1cfb4 = load i32, i32* %v2_1cfb4, align 4
  store i32 %v3_1cfb4, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1cfc3

bb:                                               ; preds = %dec_label_pc_1cf9a
  %v2_1cfc1 = call i32 @function_1cfc8(i32 %arg1)
  br label %dec_label_pc_1cfc3

dec_label_pc_1cfc3:                               ; preds = %bb, %dec_label_pc_1cf9a
  %v3_1cfc1 = phi i32 [ %v2_1cfc1, %bb ], [ %v3_1cfb4, %dec_label_pc_1cf9a ]
  ret i32 %v3_1cfc1
}

define i32 @function_1cfc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cfc8:
  %v0_1cfc9 = load i32, i32* @eax, align 8
  ret i32 %v0_1cfc9
}

define i32 @_ZNKSt4lessI7uint256EclERKS0_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cfca:
  %v2_1cffa = call i32 @function_2302b(i32 %arg2, i32 %arg3)
  store i32 %v2_1cffa, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d00b

bb:                                               ; preds = %dec_label_pc_1cfca
  %v1_1d009 = call i32 @function_1d010()
  br label %dec_label_pc_1d00b

dec_label_pc_1d00b:                               ; preds = %bb, %dec_label_pc_1cfca
  %v2_1d009 = phi i32 [ %v1_1d009, %bb ], [ %v2_1cffa, %dec_label_pc_1cfca ]
  ret i32 %v2_1d009
}

define i32 @function_1d010() local_unnamed_addr {
dec_label_pc_1d010:
  %v0_1d011 = load i32, i32* @eax, align 8
  ret i32 %v0_1d011
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d012:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1d02c = load i32, i32* %arg1, align 4
  %v1_1d02e = add i32 %v2_1d02c, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v1_1d02e, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d045

bb:                                               ; preds = %dec_label_pc_1d012
  %v2_1d043 = call i32 @function_1d04a(i32 %tmp100)
  br label %dec_label_pc_1d045

dec_label_pc_1d045:                               ; preds = %bb, %dec_label_pc_1d012
  %v3_1d043 = phi i32 [ %v2_1d043, %bb ], [ %tmp100, %dec_label_pc_1d012 ]
  ret i32 %v3_1d043
}

define i32 @function_1d04a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d04a:
  %v0_1d04b = load i32, i32* @eax, align 8
  ret i32 %v0_1d04b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d04c:
  %v2_1d066 = load i32, i32* %arg1, align 4
  store i32 %v2_1d066, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d074

bb:                                               ; preds = %dec_label_pc_1d04c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1d072 = call i32 @function_1d079(i32 %tmp100)
  br label %dec_label_pc_1d074

dec_label_pc_1d074:                               ; preds = %bb, %dec_label_pc_1d04c
  %v3_1d072 = phi i32 [ %v2_1d072, %bb ], [ %v2_1d066, %dec_label_pc_1d04c ]
  ret i32 %v3_1d072

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1d079(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d079:
  %v0_1d07a = load i32, i32* @eax, align 8
  ret i32 %v0_1d07a
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d07c:
  %v1_1d096 = add i32 %arg1, 8
  %v2_1d096 = inttoptr i32 %v1_1d096 to i32*
  %v3_1d096 = load i32, i32* %v2_1d096, align 4
  store i32 %v3_1d096, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d0a5

bb:                                               ; preds = %dec_label_pc_1d07c
  %v2_1d0a3 = call i32 @function_1d0aa(i32 %arg1)
  br label %dec_label_pc_1d0a5

dec_label_pc_1d0a5:                               ; preds = %bb, %dec_label_pc_1d07c
  %v3_1d0a3 = phi i32 [ %v2_1d0a3, %bb ], [ %v3_1d096, %dec_label_pc_1d07c ]
  ret i32 %v3_1d0a3
}

define i32 @function_1d0aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d0aa:
  %v0_1d0ab = load i32, i32* @eax, align 8
  ret i32 %v0_1d0ab
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IxEERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d0ac:
  %ebx.global-to-local = alloca i32, align 4
  %v1_1d0cd = add i32 %arg1, 4
  store i32 %v1_1d0cd, i32* @eax, align 8
  %v1_1d0d3 = call i32 @function_38b82(i32 %v1_1d0cd)
  %v0_1d0d8 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1d0d8, 16777216
  %v4_1d0f1 = sdiv i32 %sext, 16777216
  %v5_1d0f1 = call i32 @unknown_41538(i32 %arg1, i32 %arg2, i32 1, i32 %v4_1d0f1)
  %v0_1d0f6 = call i32 @function_1d112()
  ret i32 %v0_1d0f6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d0f9() local_unnamed_addr {
dec_label_pc_1d0f9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d0f9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d0f9
}

define i32 @function_1d112() local_unnamed_addr {
dec_label_pc_1d112:
  %v0_1d112 = load i32, i32* @ebp, align 4
  %v1_1d112 = add i32 %v0_1d112, -12
  %v2_1d112 = inttoptr i32 %v1_1d112 to i32*
  %v3_1d112 = load i32, i32* %v2_1d112, align 4
  %v1_1d115 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d115 = xor i32 %v1_1d115, %v3_1d112
  %v3_1d115 = icmp eq i32 %v2_1d115, 0
  store i32 %v2_1d115, i32* @eax, align 8
  br i1 %v3_1d115, label %bb, label %dec_label_pc_1d11e

bb:                                               ; preds = %dec_label_pc_1d112
  %v1_1d11c = call i32 @function_1d123()
  br label %dec_label_pc_1d11e

dec_label_pc_1d11e:                               ; preds = %bb, %dec_label_pc_1d112
  %v2_1d11c = phi i32 [ %v1_1d11c, %bb ], [ %v2_1d115, %dec_label_pc_1d112 ]
  ret i32 %v2_1d11c
}

define i32 @function_1d123() local_unnamed_addr {
dec_label_pc_1d123:
  %v0_1d128 = load i32, i32* @eax, align 8
  ret i32 %v0_1d128
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E15destroy_contentEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d12a:
  %stack_var_-17 = alloca i32, align 4
  %v2_1d142 = ptrtoint i32* %stack_var_-17 to i32
  %v1_1d148 = call i32 @function_38b6a(i32 %v2_1d142)
  %v2_1d15a = call i32 @unknown_41620(i32 %arg1, i32 %v2_1d142)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d176

bb:                                               ; preds = %dec_label_pc_1d12a
  %v2_1d174 = call i32 @function_1d194(i32 %v2_1d142)
  store i32 %v2_1d174, i32* @eax, align 8
  br label %dec_label_pc_1d176

dec_label_pc_1d176:                               ; preds = %bb, %dec_label_pc_1d12a
  %v0_1d176 = call i32 @function_1d18f()
  ret i32 %v0_1d176
}

define i32 @function_1d179() local_unnamed_addr {
dec_label_pc_1d179:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d179 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d179
}

define i32 @function_1d18f() local_unnamed_addr {
dec_label_pc_1d18f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d194(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d194:
  %v0_1d199 = load i32, i32* @eax, align 8
  ret i32 %v0_1d199
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d19a:
  %stack_var_-20 = alloca i32, align 4
  %v1_1d1bb = add i32 %arg1, 4
  %v10_1d1bb = icmp eq i32 %v1_1d1bb, 0
  store i32 %v1_1d1bb, i32* @eax, align 8
  %v1_1d1c1 = call i32 @function_38c70(i32 %v1_1d1bb)
  store i1 %v10_1d1bb, i1* @zf, align 1
  store i32 %v1_1d1bb, i32* @eax, align 8
  %v1_1d1cf = call i32 @function_3f6a4(i32 %v1_1d1bb)
  %v2_1d1d8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1d1de = call i32 @function_2f636(i32 %v2_1d1d8, i32 %v1_1d1cf)
  %v2_1d1f0 = call i32 @unknown_416fe(i32 %arg2, i32 %v2_1d1d8)
  %v1_1d1fb = call i32 @unknown_417a4(i32 %arg2)
  %v2_1d20a = call i32 @unknown_4176c(i32 %arg1, i32 %v1_1d1fb)
  %v1_1d215 = call i32 @function_33d6a(i32 %v2_1d1d8)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d226

bb:                                               ; preds = %dec_label_pc_1d19a
  %v1_1d224 = call i32 @function_1d256()
  store i32 %v1_1d224, i32* @eax, align 8
  br label %dec_label_pc_1d226

dec_label_pc_1d226:                               ; preds = %bb, %dec_label_pc_1d19a
  %v0_1d226 = call i32 @function_1d251()
  ret i32 %v0_1d226

; uselistorder directives
  uselistorder i32 %v1_1d1bb, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d228() local_unnamed_addr {
dec_label_pc_1d228:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d228 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1d228, i32* @ebx, align 4
  %v0_1d22a = load i32, i32* @ebp, align 4
  %v1_1d22a = add i32 %v0_1d22a, -16
  store i32 %v1_1d22a, i32* %eax.global-to-local, align 8
  %v1_1d230 = call i32 @function_33d6a(i32 %v1_1d22a)
  store i32 %v1_1d230, i32* %eax.global-to-local, align 8
  %v0_1d235 = call i32 @function_1d239()
  store i32 %v0_1d235, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d235

; uselistorder directives
  uselistorder i32 (i32)* @function_33d6a, { 1, 0 }
}

define i32 @function_1d237() local_unnamed_addr {
dec_label_pc_1d237:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d237 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d237
}

define i32 @function_1d239() local_unnamed_addr {
dec_label_pc_1d239:
  %v0_1d247 = load i32, i32* @ebx, align 4
  ret i32 %v0_1d247
}

define i32 @function_1d251() local_unnamed_addr {
dec_label_pc_1d251:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d256() local_unnamed_addr {
dec_label_pc_1d256:
  %v0_1d25b = load i32, i32* @eax, align 8
  ret i32 %v0_1d25b
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IxEERT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d25c:
  %ebx.global-to-local = alloca i32, align 4
  %v1_1d27d = add i32 %arg1, 4
  store i32 %v1_1d27d, i32* @eax, align 8
  %v1_1d283 = call i32 @function_38d32(i32 %v1_1d27d)
  %v0_1d288 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1d288, 16777216
  %v4_1d2a1 = sdiv i32 %sext, 16777216
  %v5_1d2a1 = call i32 @unknown_418ae(i32 %arg1, i32 %arg2, i32 1, i32 %v4_1d2a1)
  %v0_1d2a6 = call i32 @function_1d2c2()
  ret i32 %v0_1d2a6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d2a9() local_unnamed_addr {
dec_label_pc_1d2a9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d2a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d2a9
}

define i32 @function_1d2c2() local_unnamed_addr {
dec_label_pc_1d2c2:
  %v0_1d2c2 = load i32, i32* @ebp, align 4
  %v1_1d2c2 = add i32 %v0_1d2c2, -12
  %v2_1d2c2 = inttoptr i32 %v1_1d2c2 to i32*
  %v3_1d2c2 = load i32, i32* %v2_1d2c2, align 4
  %v1_1d2c5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d2c5 = xor i32 %v1_1d2c5, %v3_1d2c2
  %v3_1d2c5 = icmp eq i32 %v2_1d2c5, 0
  store i32 %v2_1d2c5, i32* @eax, align 8
  br i1 %v3_1d2c5, label %bb, label %dec_label_pc_1d2ce

bb:                                               ; preds = %dec_label_pc_1d2c2
  %v1_1d2cc = call i32 @function_1d2d3()
  br label %dec_label_pc_1d2ce

dec_label_pc_1d2ce:                               ; preds = %bb, %dec_label_pc_1d2c2
  %v2_1d2cc = phi i32 [ %v1_1d2cc, %bb ], [ %v2_1d2c5, %dec_label_pc_1d2c2 ]
  ret i32 %v2_1d2cc
}

define i32 @function_1d2d3() local_unnamed_addr {
dec_label_pc_1d2d3:
  %v0_1d2d8 = load i32, i32* @eax, align 8
  ret i32 %v0_1d2d8
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE10check_typeENS_10Value_typeE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d2da:
  %stack_var_-196 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_1d30b = call i32 @function_358f4(i32 %arg1)
  %v12_1d318 = icmp eq i32 %v1_1d30b, %arg2
  %v1_1d31a = icmp eq i1 %v12_1d318, false
  %v5_1d31d = icmp eq i1 %v1_1d31a, false
  br i1 %v5_1d31d, label %bb, label %dec_label_pc_1d325

bb:                                               ; preds = %dec_label_pc_1d2da
  %v1_1d31f = call i32 @function_1d43d()
  br label %dec_label_pc_1d325

dec_label_pc_1d325:                               ; preds = %bb, %dec_label_pc_1d2da
  %v2_1d32d = ptrtoint i32* %stack_var_-196 to i32
  ret i32 %v2_1d32d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d3ae() local_unnamed_addr {
dec_label_pc_1d3ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d3ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d3ae
}

define i32 @function_1d413() local_unnamed_addr {
dec_label_pc_1d413:
  %v0_1d413 = call i32 @function_1d417()
  ret i32 %v0_1d413
}

define i32 @function_1d415() local_unnamed_addr {
dec_label_pc_1d415:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d415 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d415
}

define i32 @function_1d417() local_unnamed_addr {
dec_label_pc_1d417:
  %v3_1d417 = load i32, i32* @eax, align 8
  ret i32 %v3_1d417
}

define i32 @function_1d41e() local_unnamed_addr {
dec_label_pc_1d41e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d41e = load i32, i32* %ecx.global-to-local, align 8
  %v1_1d41e = add i32 %v0_1d41e, -1996297229
  %v2_1d41e = inttoptr i32 %v1_1d41e to i32*
  %v3_1d41e = load i32, i32* %v2_1d41e, align 4
  %v4_1d41e = add i32 %v3_1d41e, -1
  store i32 %v4_1d41e, i32* %v2_1d41e, align 4
  %v0_1d424 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d424
}

define i32 @function_1d43d() local_unnamed_addr {
dec_label_pc_1d43d:
  %v0_1d43d = load i32, i32* @ebp, align 4
  %v1_1d43d = add i32 %v0_1d43d, -12
  %v2_1d43d = inttoptr i32 %v1_1d43d to i32*
  %v3_1d43d = load i32, i32* %v2_1d43d, align 4
  %v1_1d440 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d440 = xor i32 %v1_1d440, %v3_1d43d
  %v3_1d440 = icmp eq i32 %v2_1d440, 0
  store i32 %v2_1d440, i32* @eax, align 8
  br i1 %v3_1d440, label %bb, label %dec_label_pc_1d449

bb:                                               ; preds = %dec_label_pc_1d43d
  %v1_1d447 = call i32 @function_1d44e()
  br label %dec_label_pc_1d449

dec_label_pc_1d449:                               ; preds = %bb, %dec_label_pc_1d43d
  %v2_1d447 = phi i32 [ %v1_1d447, %bb ], [ %v2_1d440, %dec_label_pc_1d43d ]
  ret i32 %v2_1d447
}

define i32 @function_1d44e() local_unnamed_addr {
dec_label_pc_1d44e:
  %v0_1d454 = load i32, i32* @eax, align 8
  ret i32 %v0_1d454
}

define i32 @_ZNK11json_spirit10Value_implINS_13Config_vectorISsEEE9get_int64Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d456:
  %v2_1d47b = call i32 @function_3a730(i32 %arg1, i32 4)
  %v1_1d483 = add i32 %arg1, 4
  %v1_1d489 = call i32 @unknown_41b11(i32 %v1_1d483)
  %v1_1d491 = inttoptr i32 %v1_1d489 to i32*
  %v2_1d491 = load i32, i32* %v1_1d491, align 4
  store i32 %v2_1d491, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d49f

bb:                                               ; preds = %dec_label_pc_1d456
  %v1_1d49d = call i32 @function_1d4a4()
  br label %dec_label_pc_1d49f

dec_label_pc_1d49f:                               ; preds = %bb, %dec_label_pc_1d456
  %v2_1d49d = phi i32 [ %v1_1d49d, %bb ], [ %v2_1d491, %dec_label_pc_1d456 ]
  ret i32 %v2_1d49d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d4a4() local_unnamed_addr {
dec_label_pc_1d4a4:
  %v0_1d4a5 = load i32, i32* @eax, align 8
  ret i32 %v0_1d4a5
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IbEERT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d4a6:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d4a9 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1d4a9, 16777216
  %v4_1d4eb = sdiv i32 %sext, 16777216
  %v5_1d4eb = call i32 @unknown_41bdc(i32 %arg1, i32 %arg2, i32 1, i32 %v4_1d4eb)
  %v0_1d4f0 = call i32 @function_1d50c()
  ret i32 %v0_1d4f0
}

define i32 @function_1d4f3() local_unnamed_addr {
dec_label_pc_1d4f3:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d4f3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d4f3
}

define i32 @function_1d50c() local_unnamed_addr {
dec_label_pc_1d50c:
  %v0_1d50c = load i32, i32* @ebp, align 4
  %v1_1d50c = add i32 %v0_1d50c, -12
  %v2_1d50c = inttoptr i32 %v1_1d50c to i32*
  %v3_1d50c = load i32, i32* %v2_1d50c, align 4
  %v1_1d50f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d50f = xor i32 %v1_1d50f, %v3_1d50c
  %v3_1d50f = icmp eq i32 %v2_1d50f, 0
  store i32 %v2_1d50f, i32* @eax, align 8
  br i1 %v3_1d50f, label %bb, label %dec_label_pc_1d518

bb:                                               ; preds = %dec_label_pc_1d50c
  %v1_1d516 = call i32 @function_1d51d()
  br label %dec_label_pc_1d518

dec_label_pc_1d518:                               ; preds = %bb, %dec_label_pc_1d50c
  %v2_1d516 = phi i32 [ %v1_1d516, %bb ], [ %v2_1d50f, %dec_label_pc_1d50c ]
  ret i32 %v2_1d516
}

define i32 @function_1d51d() local_unnamed_addr {
dec_label_pc_1d51d:
  %v0_1d522 = load i32, i32* @eax, align 8
  ret i32 %v0_1d522
}

define i32 @_ZN5boost7bad_getC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d524:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_1d541 = call i32 @function_231a0(i32 %tmp100)
  store i32 ptrtoint (%vtable_3fa64_type* @global_var_3fa64.2863 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d55b

bb:                                               ; preds = %dec_label_pc_1d524
  %v1_1d559 = call i32 @function_1d560()
  br label %dec_label_pc_1d55b

dec_label_pc_1d55b:                               ; preds = %bb, %dec_label_pc_1d524
  %v2_1d559 = phi i32 [ %v1_1d559, %bb ], [ 0, %dec_label_pc_1d524 ]
  ret i32 %v2_1d559

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_1d560() local_unnamed_addr {
dec_label_pc_1d560:
  %v0_1d561 = load i32, i32* @eax, align 8
  ret i32 %v0_1d561
}

define i32 @_ZN5boost7bad_getD1Ev(i32* %arg1) {
dec_label_pc_1d562:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fa64_type* @global_var_3fa64.2863 to i32), i32* %arg1, align 4
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_3fa64_type* @global_var_3fa64.2863 to i32), { 1, 0 }
}

define i32 @function_1d5b4() local_unnamed_addr {
dec_label_pc_1d5b4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d5b4 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1d5b4 = add i32 %v0_1d5b4, -1
  store i32 %v1_1d5b4, i32* %ecx.global-to-local, align 8
  %v0_1d5b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d5b6
}

define i32 @_ZN5boost7bad_getD0Ev(i32 %arg1) {
dec_label_pc_1d5b8:
  store i32 %arg1, i32* @eax, align 8
  %v1_1d5d5 = call i32 @function_3ab1a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1d5f5() local_unnamed_addr {
dec_label_pc_1d5f5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d5f5 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1d5f5 = add i32 %v0_1d5f5, -1
  store i32 %v1_1d5f5, i32* %ecx.global-to-local, align 8
  %v0_1d5f7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d5f7
}

define i32 @_ZN5boost3getIbSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_13add_referenceIKT_E4typeERKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d5f8:
  %v1_1d616 = call i32 @unknown_41da2(i32 %arg1)
  %v10_1d61e = icmp eq i32 %v1_1d616, 0
  %v1_1d622 = icmp eq i1 %v10_1d61e, false
  br i1 %v1_1d622, label %bb, label %dec_label_pc_1d624

bb:                                               ; preds = %dec_label_pc_1d5f8
  %v3_1d622 = call i32 @function_1d659(i32 %v1_1d616)
  br label %dec_label_pc_1d624

dec_label_pc_1d624:                               ; preds = %bb, %dec_label_pc_1d5f8
  %v2_1d624 = phi i32 [ %v3_1d622, %bb ], [ %v1_1d616, %dec_label_pc_1d5f8 ]
  ret i32 %v2_1d624
}

define i32 @function_1d631() local_unnamed_addr {
dec_label_pc_1d631:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d631 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d631
}

define i32 @function_1d659(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d659:
  %v0_1d659 = load i32, i32* @ebp, align 4
  %v1_1d659 = add i32 %v0_1d659, -16
  %v2_1d659 = inttoptr i32 %v1_1d659 to i32*
  %v3_1d659 = load i32, i32* %v2_1d659, align 4
  store i32 %v3_1d659, i32* @eax, align 8
  %v1_1d65c = add i32 %v0_1d659, -12
  %v2_1d65c = inttoptr i32 %v1_1d65c to i32*
  %v3_1d65c = load i32, i32* %v2_1d65c, align 4
  %v1_1d65f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1d65f = icmp eq i32 %v1_1d65f, %v3_1d65c
  br i1 %v3_1d65f, label %bb, label %dec_label_pc_1d668

bb:                                               ; preds = %dec_label_pc_1d659
  %v1_1d666 = call i32 @function_1d66d()
  br label %dec_label_pc_1d668

dec_label_pc_1d668:                               ; preds = %bb, %dec_label_pc_1d659
  %v2_1d666 = phi i32 [ %v1_1d666, %bb ], [ %v3_1d659, %dec_label_pc_1d659 ]
  ret i32 %v2_1d666
}

define i32 @function_1d66d() local_unnamed_addr {
dec_label_pc_1d66d:
  %v0_1d672 = load i32, i32* @eax, align 8
  ret i32 %v0_1d672
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d674:
  %v1_1d691 = add i32 %arg1, 4
  %v1_1d697 = call i32 @function_3914a(i32 %v1_1d691)
  store i32 %v1_1d691, i32* @eax, align 8
  %v1_1d6a5 = call i32 @function_3fb7e(i32 %v1_1d691)
  store i32 %v1_1d6a5, i32* @eax, align 8
  %v2_1d6b7 = call i32 @function_233a0(i32 4, i32 %v1_1d6a5)
  %v1_1d6be = icmp eq i32 %v2_1d6b7, 0
  br i1 %v1_1d6be, label %bb, label %dec_label_pc_1d6c2

bb:                                               ; preds = %dec_label_pc_1d674
  %v1_1d6c0 = call i32 @function_1d6ca()
  br label %dec_label_pc_1d6c2

dec_label_pc_1d6c2:                               ; preds = %bb, %dec_label_pc_1d674
  %v3_1d6c2 = phi i32 [ %v1_1d6c0, %bb ], [ %v2_1d6b7, %dec_label_pc_1d674 ]
  ret i32 %v3_1d6c2

; uselistorder directives
  uselistorder i32 %v1_1d691, { 1, 0, 2 }
}

define i32 @function_1d6ca() local_unnamed_addr {
dec_label_pc_1d6ca:
  %v0_1d6d2 = load i32, i32* @ebp, align 4
  %v1_1d6d2 = add i32 %v0_1d6d2, -44
  %v2_1d6d2 = inttoptr i32 %v1_1d6d2 to i32*
  %v3_1d6d2 = load i32, i32* %v2_1d6d2, align 4
  %v2_1d6d8 = call i32 @unknown_41c46(i32 %v3_1d6d2, i32 0)
  %v0_1d6dd = load i32, i32* @ebp, align 4
  %v1_1d6dd = add i32 %v0_1d6dd, -28
  %v2_1d6dd = inttoptr i32 %v1_1d6dd to i32*
  %v3_1d6dd = load i32, i32* %v2_1d6dd, align 4
  %v1_1d6e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d6e0 = xor i32 %v1_1d6e0, %v3_1d6dd
  %v3_1d6e0 = icmp eq i32 %v2_1d6e0, 0
  store i32 %v2_1d6e0, i32* @eax, align 8
  br i1 %v3_1d6e0, label %bb, label %dec_label_pc_1d6e9

bb:                                               ; preds = %dec_label_pc_1d6ca
  %v1_1d6e7 = call i32 @function_1d71c()
  store i32 %v1_1d6e7, i32* @eax, align 8
  br label %dec_label_pc_1d6e9

dec_label_pc_1d6e9:                               ; preds = %bb, %dec_label_pc_1d6ca
  %v0_1d6e9 = call i32 @function_1d717()
  ret i32 %v0_1d6e9
}

define i32 @function_1d6eb() local_unnamed_addr {
dec_label_pc_1d6eb:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1d6eb = load i32, i32* @eax, align 8
  %v0_1d6ed = load i32, i32* %esi.global-to-local, align 4
  %v0_1d6f1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1d6f4 = call i32 @function_233d3(i32 %v0_1d6f1, i32 %v0_1d6ed)
  store i32 %v0_1d6eb, i32* @ebx, align 4
  %v0_1d6fb = call i32 @function_1d6ff()
  ret i32 %v0_1d6fb
}

define i32 @function_1d6fd() local_unnamed_addr {
dec_label_pc_1d6fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d6fd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d6fd
}

define i32 @function_1d6ff() local_unnamed_addr {
dec_label_pc_1d6ff:
  %v0_1d70d = load i32, i32* @ebx, align 4
  ret i32 %v0_1d70d
}

define i32 @function_1d717() local_unnamed_addr {
dec_label_pc_1d717:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d71c() local_unnamed_addr {
dec_label_pc_1d71c:
  %v0_1d723 = load i32, i32* @eax, align 8
  ret i32 %v0_1d723
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d724:
  %v1_1d741 = call i32 @unknown_41f6a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d752

bb:                                               ; preds = %dec_label_pc_1d724
  %v1_1d750 = call i32 @function_1d757()
  br label %dec_label_pc_1d752

dec_label_pc_1d752:                               ; preds = %bb, %dec_label_pc_1d724
  %v2_1d750 = phi i32 [ %v1_1d750, %bb ], [ 0, %dec_label_pc_1d724 ]
  ret i32 %v2_1d750
}

define i32 @function_1d757() local_unnamed_addr {
dec_label_pc_1d757:
  %v0_1d758 = load i32, i32* @eax, align 8
  ret i32 %v0_1d758
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d75a:
  %v1_1d777 = call i32 @unknown_41f4e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d788

bb:                                               ; preds = %dec_label_pc_1d75a
  %v1_1d786 = call i32 @function_1d78d()
  br label %dec_label_pc_1d788

dec_label_pc_1d788:                               ; preds = %bb, %dec_label_pc_1d75a
  %v2_1d786 = phi i32 [ %v1_1d786, %bb ], [ 0, %dec_label_pc_1d75a ]
  ret i32 %v2_1d786
}

define i32 @function_1d78d() local_unnamed_addr {
dec_label_pc_1d78d:
  %v0_1d78e = load i32, i32* @eax, align 8
  ret i32 %v0_1d78e
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d790:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1d7ab = add i32 %tmp101, 8
  %v2_1d7ab = inttoptr i32 %v1_1d7ab to i32*
  %v3_1d7ab = load i32, i32* %v2_1d7ab, align 4
  %v2_1d7b3 = load i32, i32* %arg1, align 4
  %v2_1d7b7 = sub i32 %v3_1d7ab, %v2_1d7b3
  %v2_1d7bb = sdiv i32 %v2_1d7b7, 8
  %v3_1d7be = mul i32 %v2_1d7bb, -1431655765
  %v3_1d7d9 = call i32 @unknown_4200c(i32 %tmp101, i32 %v2_1d7b3, i32 %v3_1d7be)
  store i32 %tmp101, i32* @eax, align 8
  %v1_1d7e4 = call i32 @function_3aeb4(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d7f5

bb:                                               ; preds = %dec_label_pc_1d790
  %v1_1d7f3 = call i32 @function_1d813()
  store i32 %v1_1d7f3, i32* @eax, align 8
  br label %dec_label_pc_1d7f5

dec_label_pc_1d7f5:                               ; preds = %bb, %dec_label_pc_1d790
  %v0_1d7f5 = call i32 @function_1d80e()
  ret i32 %v0_1d7f5

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_1d7f8() local_unnamed_addr {
dec_label_pc_1d7f8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d7f8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d7f8
}

define i32 @function_1d80e() local_unnamed_addr {
dec_label_pc_1d80e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d813() local_unnamed_addr {
dec_label_pc_1d813:
  %v0_1d818 = load i32, i32* @eax, align 8
  ret i32 %v0_1d818
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d81a:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d840

bb:                                               ; preds = %dec_label_pc_1d81a
  %v2_1d83e = call i32 @function_1d845(i32 %arg1)
  br label %dec_label_pc_1d840

dec_label_pc_1d840:                               ; preds = %bb, %dec_label_pc_1d81a
  %v3_1d83e = phi i32 [ %v2_1d83e, %bb ], [ %arg1, %dec_label_pc_1d81a ]
  ret i32 %v3_1d83e
}

define i32 @function_1d845(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d845:
  %v0_1d846 = load i32, i32* @eax, align 8
  ret i32 %v0_1d846
}

define i32 @_ZSt8_DestroyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES4_EvT_S6_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d847:
  %v2_1d877 = call i32 @unknown_42118(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1d888

bb:                                               ; preds = %dec_label_pc_1d847
  %v1_1d886 = call i32 @function_1d88d()
  br label %dec_label_pc_1d888

dec_label_pc_1d888:                               ; preds = %bb, %dec_label_pc_1d847
  %v2_1d886 = phi i32 [ %v1_1d886, %bb ], [ 0, %dec_label_pc_1d847 ]
  ret i32 %v2_1d886
}

define i32 @function_1d88d() local_unnamed_addr {
dec_label_pc_1d88d:
  %v0_1d88e = load i32, i32* @eax, align 8
  ret i32 %v0_1d88e
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d890:
  ret i32 %arg1
}

define i32 @function_1d8bf() local_unnamed_addr {
dec_label_pc_1d8bf:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d8bf = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d8bf = add i32 %v0_1d8bf, 1351475269
  %v2_1d8bf = inttoptr i32 %v1_1d8bf to i32*
  %v3_1d8bf = load i32, i32* %v2_1d8bf, align 4
  %v4_1d8bf = add i32 %v3_1d8bf, -1
  store i32 %v4_1d8bf, i32* %v2_1d8bf, align 4
  %v0_1d8c5 = load i32, i32* %eax.global-to-local, align 8
  %v2_1d8c5 = add i32 %v0_1d8c5, 3
  %v0_1d8c7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1d8c7 = add i32 %v0_1d8c7, 1
  store i32 %v1_1d8c7, i32* @ebp, align 4
  %v2_1d8ce = and i32 %v2_1d8c5, 4
  %v10_1d8ce = and i32 %v0_1d8c5, -256
  %v11_1d8ce = or i32 %v2_1d8ce, %v10_1d8ce
  store i32 %v11_1d8ce, i32* %eax.global-to-local, align 8
  %v1_1d8d8 = call i32 @function_1d8f1(i32 %v11_1d8ce)
  store i32 %v1_1d8d8, i32* %eax.global-to-local, align 8
  ret i32 %v1_1d8d8

; uselistorder directives
  uselistorder i32 %v0_1d8c5, { 1, 0 }
}

define i32 @function_1d8db() local_unnamed_addr {
dec_label_pc_1d8db:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d8db = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d8db
}

define i32 @function_1d8f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d8f1:
  %v0_1d8f1 = load i32, i32* @ebp, align 4
  %v1_1d8f1 = add i32 %v0_1d8f1, -12
  %v2_1d8f1 = inttoptr i32 %v1_1d8f1 to i32*
  %v3_1d8f1 = load i32, i32* %v2_1d8f1, align 4
  %v1_1d8f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d8f4 = xor i32 %v1_1d8f4, %v3_1d8f1
  %v3_1d8f4 = icmp eq i32 %v2_1d8f4, 0
  store i32 %v2_1d8f4, i32* @eax, align 8
  br i1 %v3_1d8f4, label %bb, label %dec_label_pc_1d8fd

bb:                                               ; preds = %dec_label_pc_1d8f1
  %v1_1d8fb = call i32 @function_1d902()
  br label %dec_label_pc_1d8fd

dec_label_pc_1d8fd:                               ; preds = %bb, %dec_label_pc_1d8f1
  %v2_1d8fb = phi i32 [ %v1_1d8fb, %bb ], [ %v2_1d8f4, %dec_label_pc_1d8f1 ]
  ret i32 %v2_1d8fb
}

define i32 @function_1d902() local_unnamed_addr {
dec_label_pc_1d902:
  %v0_1d907 = load i32, i32* @eax, align 8
  ret i32 %v0_1d907
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE9constructEPS5_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d908:
  store i32 0, i32* @eax, align 8
  %v2_1d93c = call i32 @function_23634(i32 24, i32 %arg2)
  %v1_1d943 = icmp eq i32 %v2_1d93c, 0
  br i1 %v1_1d943, label %bb, label %dec_label_pc_1d947

bb:                                               ; preds = %dec_label_pc_1d908
  %v1_1d945 = call i32 @function_1d970()
  br label %dec_label_pc_1d947

dec_label_pc_1d947:                               ; preds = %bb, %dec_label_pc_1d908
  store i32 %arg3, i32* @eax, align 8
  %v2_1d951 = call i32 @function_3b198(i32 %v2_1d93c, i32 %arg3)
  %v0_1d956 = call i32 @function_1d970()
  ret i32 %v0_1d956

; uselistorder directives
  uselistorder i32 ()* @function_1d970, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1d970() local_unnamed_addr {
dec_label_pc_1d970:
  %v0_1d970 = load i32, i32* @ebp, align 4
  %v1_1d970 = add i32 %v0_1d970, -28
  %v2_1d970 = inttoptr i32 %v1_1d970 to i32*
  %v3_1d970 = load i32, i32* %v2_1d970, align 4
  %v1_1d973 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d973 = xor i32 %v1_1d973, %v3_1d970
  %v3_1d973 = icmp eq i32 %v2_1d973, 0
  store i32 %v2_1d973, i32* @eax, align 8
  br i1 %v3_1d973, label %bb, label %dec_label_pc_1d97c

bb:                                               ; preds = %dec_label_pc_1d970
  %v1_1d97a = call i32 @function_1d981()
  br label %dec_label_pc_1d97c

dec_label_pc_1d97c:                               ; preds = %bb, %dec_label_pc_1d970
  %v2_1d97a = phi i32 [ %v1_1d97a, %bb ], [ %v2_1d973, %dec_label_pc_1d970 ]
  ret i32 %v2_1d97a
}

define i32 @function_1d981() local_unnamed_addr {
dec_label_pc_1d981:
  %v0_1d988 = load i32, i32* @eax, align 8
  ret i32 %v0_1d988
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS4_S6_EERKS4_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d98a:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-68, align 4
  %v1_1d9b2 = add i32 %tmp113, 4
  %v2_1d9b2 = inttoptr i32 %v1_1d9b2 to i32*
  %v3_1d9b2 = load i32, i32* %v2_1d9b2, align 4
  %v1_1d9b8 = add i32 %tmp113, 8
  %v2_1d9b8 = inttoptr i32 %v1_1d9b8 to i32*
  %v3_1d9b8 = load i32, i32* %v2_1d9b8, align 4
  %v12_1d9bb = icmp eq i32 %v3_1d9b2, %v3_1d9b8
  br i1 %v12_1d9bb, label %dec_label_pc_1da5f, label %dec_label_pc_1d9c3

dec_label_pc_1d9c3:                               ; preds = %dec_label_pc_1d98a
  %v3_1d9c6 = load i32, i32* %v2_1d9b2, align 4
  %v1_1d9c9 = add i32 %v3_1d9c6, -24
  store i32 %v1_1d9c9, i32* @ecx, align 8
  %v3_1d9cf = load i32, i32* %v2_1d9b2, align 4
  store i32 %tmp113, i32* @eax, align 8
  %v4_1d9e0 = call i32 @function_3b292(i32 %tmp113, i32 %v3_1d9cf, i32 %v1_1d9c9)
  %v3_1d9e8 = load i32, i32* %v2_1d9b2, align 4
  %v1_1d9eb = add i32 %v3_1d9e8, 24
  store i32 %v1_1d9eb, i32* %v2_1d9b2, align 4
  %v2_1d9fb = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_1d9e8, i32* %esi.global-to-local, align 4
  %v3_1da12 = load i32, i32* %v2_1d9b2, align 4
  %v1_1da15 = add i32 %v3_1da12, -48
  %v2_1da18 = ptrtoint i32* %stack_var_-68 to i32
  %v1_1da1e = call i32 @unknown_4229e(i32 %v2_1da18)
  %v1_1da23 = inttoptr i32 %v1_1da1e to i32*
  %v2_1da23 = load i32, i32* %v1_1da23, align 4
  %v0_1da25 = load i32, i32* %esi.global-to-local, align 4
  %v4_1da30 = call i32 @unknown_422cb(i32 %v2_1da23, i32 %v1_1da15, i32 %v0_1da25)
  %v1_1da3b = call i32 @unknown_42332(i32 %v2_1da18)
  store i32 %v2_1d9fb, i32* @edx, align 4
  store i32 %v2_1d9fb, i32* @eax, align 8
  %v2_1da55 = call i32 @function_314b8(i32 %v2_1d9fb, i32 %v2_1d9fb)
  %v0_1da5a = call i32 @function_1dc87()
  ret i32 %v0_1da5a

dec_label_pc_1da5f:                               ; preds = %dec_label_pc_1d98a
  %v4_1da75 = call i32 @unknown_42414(i32 %tmp113, i32 1, i32 ptrtoint ([22 x i8]* @global_var_7126.2864 to i32))
  %v2_1da7d = ptrtoint i32* %stack_var_-60 to i32
  %v2_1da8a = call i32 @unknown_424e6(i32 %v2_1da7d, i32 %tmp113)
  %v2_1da99 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1da9f = call i32 @unknown_4252d(i32 %v2_1da99, i32 %v2_1da7d)
  %v2_1dab4 = call i32 @unknown_4258e(i32 %tmp113, i32 %v4_1da75)
  %v2_1dacb = mul i32 %v2_1da9f, 24
  %v5_1dad0 = add i32 %v2_1dab4, %v2_1dacb
  store i32 %tmp113, i32* @eax, align 8
  %v3_1dae4 = call i32 @function_3b292(i32 %tmp113, i32 %v5_1dad0, i32 %arg3)
  store i32 %tmp113, i32* @eax, align 8
  %v1_1daf6 = call i32 @function_3b1a4(i32 %tmp113)
  %v1_1db03 = call i32 @unknown_4229e(i32 %v2_1da99)
  %v1_1db08 = inttoptr i32 %v1_1db03 to i32*
  %v2_1db08 = load i32, i32* %v1_1db08, align 4
  %v2_1db0d = load i32, i32* %arg1, align 4
  %v5_1db21 = call i32 @unknown_425e5(i32 %v2_1db0d, i32 %v2_1db08, i32 %v2_1dab4, i32 %v1_1daf6)
  %v4_1db29 = add i32 %v5_1db21, 24
  store i32 %tmp113, i32* @eax, align 8
  %v1_1db33 = call i32 @function_3b1a4(i32 %tmp113)
  %v3_1db3d = load i32, i32* %v2_1d9b2, align 4
  store i32 %v3_1db3d, i32* %esi.global-to-local, align 4
  %v1_1db46 = call i32 @unknown_4229e(i32 %v2_1da99)
  %v1_1db4b = inttoptr i32 %v1_1db46 to i32*
  %v2_1db4b = load i32, i32* %v1_1db4b, align 4
  %v5_1db5f = call i32 @unknown_425e5(i32 %v2_1db4b, i32 %v3_1db3d, i32 %v4_1db29, i32 %v1_1db33)
  store i32 %tmp113, i32* @eax, align 8
  %v1_1db6d = call i32 @function_3b1a4(i32 %tmp113)
  store i32 %v1_1db6d, i32* @eax, align 8
  %v3_1db75 = load i32, i32* %v2_1d9b2, align 4
  %v2_1db7b = load i32, i32* %arg1, align 4
  %v3_1db88 = call i32 @function_3b1d1(i32 %v2_1db7b, i32 %v3_1db75, i32 %v1_1db6d)
  %v3_1db90 = load i32, i32* %v2_1d9b8, align 4
  %v2_1db98 = load i32, i32* %arg1, align 4
  %v2_1db9c = sub i32 %v3_1db90, %v2_1db98
  %v2_1dba0 = sdiv i32 %v2_1db9c, 8
  %v3_1dba3 = mul i32 %v2_1dba0, -1431655765
  %v3_1dbbe = call i32 @unknown_42206(i32 %tmp113, i32 %v2_1db98, i32 %v3_1dba3)
  store i32 %v2_1dab4, i32* %arg1, align 4
  store i32 %v5_1db5f, i32* %v2_1d9b2, align 4
  %v2_1dbdd = mul i32 %v4_1da75, 24
  %v5_1dbe2 = add i32 %v2_1dab4, %v2_1dbdd
  store i32 %v5_1dbe2, i32* %v2_1d9b8, align 4
  %v0_1dbeb = call i32 @function_1dc87()
  ret i32 %v0_1dbeb

; uselistorder directives
  uselistorder i32 %v2_1dab4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1d9fb, { 2, 0, 1, 3 }
  uselistorder i32* %v2_1d9b2, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %tmp113, { 2, 4, 3, 6, 5, 8, 7, 10, 9, 11, 12, 13, 1, 0, 15, 14 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_425e5, { 1, 0 }
  uselistorder i32 ()* @function_1dc87, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4229e, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_3b292, { 1, 0 }
}

define i32 @function_1dbf1() local_unnamed_addr {
dec_label_pc_1dbf1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1dbf1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dbf1
}

define i32 @function_1dc08() local_unnamed_addr {
dec_label_pc_1dc08:
  %eax.global-to-local = alloca i32, align 4
  %v0_1dc08 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dc08
}

define i32 @function_1dc1f() local_unnamed_addr {
dec_label_pc_1dc1f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1dc1f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1dc1f = add i32 %v0_1dc1f, 1962986621
  %v2_1dc1f = inttoptr i32 %v1_1dc1f to i32*
  %v3_1dc1f = load i32, i32* %v2_1dc1f, align 4
  %v4_1dc1f = add i32 %v3_1dc1f, 1
  store i32 %v4_1dc1f, i32* %v2_1dc1f, align 4
  %v0_1dc25 = load i32, i32* %ecx.global-to-local, align 8
  %v1_1dc25 = trunc i32 %v0_1dc25 to i8
  %v2_1dc25 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1dc25 = add i32 %v2_1dc25, -796273579
  %v4_1dc25 = inttoptr i32 %v3_1dc25 to i8*
  %v5_1dc25 = load i8, i8* %v4_1dc25, align 1
  %v6_1dc25 = and i8 %v5_1dc25, %v1_1dc25
  %v12_1dc25 = zext i8 %v6_1dc25 to i32
  %v14_1dc25 = and i32 %v0_1dc25, -256
  %v15_1dc25 = or i32 %v12_1dc25, %v14_1dc25
  store i32 %v15_1dc25, i32* %ecx.global-to-local, align 8
  %v0_1dc2b = load i32, i32* %eax.global-to-local, align 8
  %v2_1dc2b = mul i32 %v0_1dc2b, 2
  %v1_1dc2d = load i32, i32* %edx.global-to-local, align 4
  %v2_1dc2d = add i32 %v1_1dc2d, %v2_1dc2b
  %v2_1dc2f = mul i32 %v2_1dc2d, 8
  store i32 %v2_1dc2f, i32* %eax.global-to-local, align 8
  store i32 %v2_1dc2f, i32* %edx.global-to-local, align 4
  %v1_1dc34 = load i32, i32* @ebp, align 4
  %v2_1dc34 = add i32 %v1_1dc34, -40
  %v3_1dc34 = inttoptr i32 %v2_1dc34 to i32*
  %v4_1dc34 = load i32, i32* %v3_1dc34, align 4
  %v5_1dc34 = add i32 %v4_1dc34, %v2_1dc2f
  store i32 %v5_1dc34, i32* %edx.global-to-local, align 4
  %v1_1dc37 = add i32 %v1_1dc34, -60
  %v2_1dc37 = inttoptr i32 %v1_1dc37 to i32*
  %v3_1dc37 = load i32, i32* %v2_1dc37, align 4
  store i32 %v3_1dc37, i32* %eax.global-to-local, align 8
  %v2_1dc41 = call i32 @unknown_42642(i32 %v3_1dc37, i32 %v5_1dc34)
  store i32 %v2_1dc41, i32* %eax.global-to-local, align 8
  %v0_1dc46 = call i32 @function_1dc69()
  store i32 %v0_1dc46, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dc46

; uselistorder directives
  uselistorder i32 %v2_1dc2f, { 2, 1, 0 }
}

define i32 @function_1dc48() local_unnamed_addr {
dec_label_pc_1dc48:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1dc48 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1dc48 = add i32 %v0_1dc48, -60
  %v2_1dc48 = inttoptr i32 %v1_1dc48 to i32*
  %v3_1dc48 = load i32, i32* %v2_1dc48, align 4
  store i32 %v3_1dc48, i32* @eax, align 8
  %v1_1dc4e = call i32 @function_3b1a4(i32 %v3_1dc48)
  %v0_1dc57 = load i32, i32* @ebp, align 4
  %v1_1dc57 = add i32 %v0_1dc57, -52
  %v2_1dc57 = inttoptr i32 %v1_1dc57 to i32*
  %v3_1dc57 = load i32, i32* %v2_1dc57, align 4
  %v1_1dc5e = add i32 %v0_1dc57, -40
  %v2_1dc5e = inttoptr i32 %v1_1dc5e to i32*
  %v3_1dc5e = load i32, i32* %v2_1dc5e, align 4
  store i32 %v3_1dc5e, i32* @eax, align 8
  %v3_1dc64 = call i32 @function_3b1d1(i32 %v3_1dc5e, i32 %v3_1dc57, i32 %v1_1dc4e)
  ret i32 %v3_1dc64

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_3b1d1, { 1, 0 }
  uselistorder i32 (i32)* @function_3b1a4, { 3, 2, 1, 0 }
}

define i32 @function_1dc69() local_unnamed_addr {
dec_label_pc_1dc69:
  %v0_1dc69 = load i32, i32* @ebp, align 4
  %v1_1dc69 = add i32 %v0_1dc69, -60
  %v2_1dc69 = inttoptr i32 %v1_1dc69 to i32*
  %v3_1dc69 = load i32, i32* %v2_1dc69, align 4
  %v1_1dc6c = add i32 %v0_1dc69, -48
  %v2_1dc6c = inttoptr i32 %v1_1dc6c to i32*
  %v3_1dc6c = load i32, i32* %v2_1dc6c, align 4
  %v1_1dc73 = add i32 %v0_1dc69, -40
  %v2_1dc73 = inttoptr i32 %v1_1dc73 to i32*
  %v3_1dc73 = load i32, i32* %v2_1dc73, align 4
  %v3_1dc7d = call i32 @unknown_42206(i32 %v3_1dc69, i32 %v3_1dc73, i32 %v3_1dc6c)
  ret i32 %v3_1dc7d

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_42206, { 1, 0 }
}

define i32 @function_1dc87() local_unnamed_addr {
dec_label_pc_1dc87:
  %v0_1dc87 = load i32, i32* @ebp, align 4
  %v1_1dc87 = add i32 %v0_1dc87, -12
  %v2_1dc87 = inttoptr i32 %v1_1dc87 to i32*
  %v3_1dc87 = load i32, i32* %v2_1dc87, align 4
  %v1_1dc8a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1dc8a = xor i32 %v1_1dc8a, %v3_1dc87
  %v3_1dc8a = icmp eq i32 %v2_1dc8a, 0
  store i32 %v2_1dc8a, i32* @eax, align 8
  br i1 %v3_1dc8a, label %bb, label %dec_label_pc_1dc93

bb:                                               ; preds = %dec_label_pc_1dc87
  %v1_1dc91 = call i32 @function_1dc98()
  br label %dec_label_pc_1dc93

dec_label_pc_1dc93:                               ; preds = %bb, %dec_label_pc_1dc87
  %v2_1dc91 = phi i32 [ %v1_1dc91, %bb ], [ %v2_1dc8a, %dec_label_pc_1dc87 ]
  ret i32 %v2_1dc91
}

define i32 @function_1dc98() local_unnamed_addr {
dec_label_pc_1dc98:
  %v0_1dc9e = load i32, i32* @eax, align 8
  ret i32 %v0_1dc9e
}

define i32 @_ZN11json_spirit9Pair_implINS_13Config_vectorISsEEEaSERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dca0:
  ret i32 %arg1
}

define i32 @function_1dcfa() local_unnamed_addr {
dec_label_pc_1dcfa:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1dcfa = load i32, i32* %ecx.global-to-local, align 8
  %v1_1dcfa = add i32 %v0_1dcfa, -1
  store i32 %v1_1dcfa, i32* %ecx.global-to-local, align 8
  %v0_1dcfc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dcfc
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dcfe:
  %v1_1dd1e = add i32 %arg2, 4
  %v2_1dd2b = call i32 @unknown_429f2(i32 %arg1, i32 %v1_1dd1e)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1dd3f

bb:                                               ; preds = %dec_label_pc_1dcfe
  %v1_1dd3d = call i32 @function_1dd44()
  br label %dec_label_pc_1dd3f

dec_label_pc_1dd3f:                               ; preds = %bb, %dec_label_pc_1dcfe
  %v2_1dd3d = phi i32 [ %v1_1dd3d, %bb ], [ %arg1, %dec_label_pc_1dcfe ]
  ret i32 %v2_1dd3d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1dd44() local_unnamed_addr {
dec_label_pc_1dd44:
  %v0_1dd45 = load i32, i32* @eax, align 8
  ret i32 %v0_1dd45
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ISsEERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dd48:
  %ebx.global-to-local = alloca i32, align 4
  %v1_1dd69 = add i32 %arg1, 4
  %v1_1dd6f = call i32 @function_3981e(i32 %v1_1dd69)
  %v0_1dd74 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1dd74, 16777216
  %v4_1dd8d = sdiv i32 %sext, 16777216
  %v5_1dd8d = call i32 @unknown_42a76(i32 %arg1, i32 %arg2, i32 1, i32 %v4_1dd8d)
  %v0_1dd92 = call i32 @function_1ddae()
  ret i32 %v0_1dd92

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1dd95() local_unnamed_addr {
dec_label_pc_1dd95:
  %eax.global-to-local = alloca i32, align 4
  %v0_1dd95 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dd95
}

define i32 @function_1ddae() local_unnamed_addr {
dec_label_pc_1ddae:
  %v0_1ddae = load i32, i32* @ebp, align 4
  %v1_1ddae = add i32 %v0_1ddae, -12
  %v2_1ddae = inttoptr i32 %v1_1ddae to i32*
  %v3_1ddae = load i32, i32* %v2_1ddae, align 4
  %v1_1ddb1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ddb1 = xor i32 %v1_1ddb1, %v3_1ddae
  %v3_1ddb1 = icmp eq i32 %v2_1ddb1, 0
  store i32 %v2_1ddb1, i32* @eax, align 8
  br i1 %v3_1ddb1, label %bb, label %dec_label_pc_1ddba

bb:                                               ; preds = %dec_label_pc_1ddae
  %v1_1ddb8 = call i32 @function_1ddbf()
  br label %dec_label_pc_1ddba

dec_label_pc_1ddba:                               ; preds = %bb, %dec_label_pc_1ddae
  %v2_1ddb8 = phi i32 [ %v1_1ddb8, %bb ], [ %v2_1ddb1, %dec_label_pc_1ddae ]
  ret i32 %v2_1ddb8
}

define i32 @function_1ddbf() local_unnamed_addr {
dec_label_pc_1ddbf:
  %v0_1ddc4 = load i32, i32* @eax, align 8
  ret i32 %v0_1ddc4
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IdEERT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ddc6:
  %ebx.global-to-local = alloca i32, align 4
  %v1_1dde7 = add i32 %arg1, 4
  store i32 %v1_1dde7, i32* @eax, align 8
  %v1_1dded = call i32 @function_3989c(i32 %v1_1dde7)
  %v0_1ddf2 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1ddf2, 16777216
  %v4_1de0b = sdiv i32 %sext, 16777216
  %v5_1de0b = call i32 @unknown_42b5e(i32 %arg1, i32 %arg2, i32 1, i32 %v4_1de0b)
  %v0_1de10 = call i32 @function_1de2c()
  ret i32 %v0_1de10

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1de13() local_unnamed_addr {
dec_label_pc_1de13:
  %eax.global-to-local = alloca i32, align 4
  %v0_1de13 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1de13
}

define i32 @function_1de2c() local_unnamed_addr {
dec_label_pc_1de2c:
  %v0_1de2c = load i32, i32* @ebp, align 4
  %v1_1de2c = add i32 %v0_1de2c, -12
  %v2_1de2c = inttoptr i32 %v1_1de2c to i32*
  %v3_1de2c = load i32, i32* %v2_1de2c, align 4
  %v1_1de2f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1de2f = xor i32 %v1_1de2f, %v3_1de2c
  %v3_1de2f = icmp eq i32 %v2_1de2f, 0
  store i32 %v2_1de2f, i32* @eax, align 8
  br i1 %v3_1de2f, label %bb, label %dec_label_pc_1de38

bb:                                               ; preds = %dec_label_pc_1de2c
  %v1_1de36 = call i32 @function_1de3d()
  br label %dec_label_pc_1de38

dec_label_pc_1de38:                               ; preds = %bb, %dec_label_pc_1de2c
  %v2_1de36 = phi i32 [ %v1_1de36, %bb ], [ %v2_1de2f, %dec_label_pc_1de2c ]
  ret i32 %v2_1de36
}

define i32 @function_1de3d() local_unnamed_addr {
dec_label_pc_1de3d:
  %v0_1de42 = load i32, i32* @eax, align 8
  ret i32 %v0_1de42
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1IS9_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1de44:
  %ebx.global-to-local = alloca i32, align 4
  %v1_1de65 = add i32 %arg1, 4
  store i32 %v1_1de65, i32* @eax, align 8
  %v1_1de6b = call i32 @function_3991a(i32 %v1_1de65)
  %v0_1de70 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1de70, 16777216
  %v4_1de89 = sdiv i32 %sext, 16777216
  %v5_1de89 = call i32 @unknown_42c46(i32 %arg1, i32 %arg2, i32 1, i32 %v4_1de89)
  %v0_1de8e = call i32 @function_1deaa()
  ret i32 %v0_1de8e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1de91() local_unnamed_addr {
dec_label_pc_1de91:
  %eax.global-to-local = alloca i32, align 4
  %v0_1de91 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1de91
}

define i32 @function_1deaa() local_unnamed_addr {
dec_label_pc_1deaa:
  %v0_1deaa = load i32, i32* @ebp, align 4
  %v1_1deaa = add i32 %v0_1deaa, -12
  %v2_1deaa = inttoptr i32 %v1_1deaa to i32*
  %v3_1deaa = load i32, i32* %v2_1deaa, align 4
  %v1_1dead = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1dead = xor i32 %v1_1dead, %v3_1deaa
  %v3_1dead = icmp eq i32 %v2_1dead, 0
  store i32 %v2_1dead, i32* @eax, align 8
  br i1 %v3_1dead, label %bb, label %dec_label_pc_1deb6

bb:                                               ; preds = %dec_label_pc_1deaa
  %v1_1deb4 = call i32 @function_1debb()
  br label %dec_label_pc_1deb6

dec_label_pc_1deb6:                               ; preds = %bb, %dec_label_pc_1deaa
  %v2_1deb4 = phi i32 [ %v1_1deb4, %bb ], [ %v2_1dead, %dec_label_pc_1deaa ]
  ret i32 %v2_1deb4
}

define i32 @function_1debb() local_unnamed_addr {
dec_label_pc_1debb:
  %v0_1dec0 = load i32, i32* @eax, align 8
  ret i32 %v0_1dec0
}

define i32 @_ZNKSt6vectorIP5CNodeSaIS1_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dec2:
  %stack_var_-20 = alloca i32, align 4
  %v1_1dee2 = add i32 %arg2, 4
  %v2_1dee2 = inttoptr i32 %v1_1dee2 to i32*
  %v3_1dee2 = load i32, i32* %v2_1dee2, align 4
  store i32 %v3_1dee2, i32* %stack_var_-20, align 4
  %v2_1dee8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1def5 = call i32 @unknown_42d2e(i32 %arg1, i32 %v2_1dee8)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1df09

bb:                                               ; preds = %dec_label_pc_1dec2
  %v1_1df07 = call i32 @function_1df0e()
  br label %dec_label_pc_1df09

dec_label_pc_1df09:                               ; preds = %bb, %dec_label_pc_1dec2
  %v2_1df07 = phi i32 [ %v1_1df07, %bb ], [ %arg1, %dec_label_pc_1dec2 ]
  ret i32 %v2_1df07

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1df0e() local_unnamed_addr {
dec_label_pc_1df0e:
  %v0_1df0f = load i32, i32* @eax, align 8
  ret i32 %v0_1df0f
}

define i32 @_ZNKSt6vectorIP5CNodeSaIS1_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1df12:
  %stack_var_-20 = alloca i32, align 4
  %v2_1df32 = load i32, i32* %arg2, align 4
  store i32 %v2_1df32, i32* %stack_var_-20, align 4
  %v2_1df37 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1df44 = call i32 @unknown_42d7e(i32 %arg1, i32 %v2_1df37)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1df58

bb:                                               ; preds = %dec_label_pc_1df12
  %v1_1df56 = call i32 @function_1df5d()
  br label %dec_label_pc_1df58

dec_label_pc_1df58:                               ; preds = %bb, %dec_label_pc_1df12
  %v2_1df56 = phi i32 [ %v1_1df56, %bb ], [ %arg1, %dec_label_pc_1df12 ]
  ret i32 %v2_1df56

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1df5d() local_unnamed_addr {
dec_label_pc_1df5d:
  %v0_1df5e = load i32, i32* @eax, align 8
  ret i32 %v0_1df5e
}

define i32 @_ZN9__gnu_cxxeqIPKP5CNodeSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1df61:
  %v1_1df85 = call i32 @unknown_42e07(i32 %arg1)
  %v1_1df8a = inttoptr i32 %v1_1df85 to i32*
  %v2_1df8a = load i32, i32* %v1_1df8a, align 4
  %v1_1df92 = call i32 @unknown_42e07(i32 %arg2)
  %v1_1df97 = inttoptr i32 %v1_1df92 to i32*
  %v2_1df97 = load i32, i32* %v1_1df97, align 4
  %v12_1df99 = icmp eq i32 %v2_1df8a, %v2_1df97
  %v1_1df9b = zext i1 %v12_1df99 to i32
  %v3_1df9b = and i32 %v2_1df97, -256
  %v4_1df9b = or i32 %v1_1df9b, %v3_1df9b
  store i32 %v4_1df9b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1dfaa

bb:                                               ; preds = %dec_label_pc_1df61
  %v1_1dfa8 = call i32 @function_1dfaf()
  br label %dec_label_pc_1dfaa

dec_label_pc_1dfaa:                               ; preds = %bb, %dec_label_pc_1df61
  %v2_1dfa8 = phi i32 [ %v1_1dfa8, %bb ], [ %v4_1df9b, %dec_label_pc_1df61 ]
  ret i32 %v2_1dfa8

; uselistorder directives
  uselistorder i32 %v2_1df97, { 1, 0 }
  uselistorder i32 (i32)* @unknown_42e07, { 1, 0 }
}

define i32 @function_1dfaf() local_unnamed_addr {
dec_label_pc_1dfaf:
  %v0_1dfb4 = load i32, i32* @eax, align 8
  ret i32 %v0_1dfb4
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1dfb6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1dfd0 = add i32 %tmp100, 4
  %v2_1dfd0 = inttoptr i32 %v1_1dfd0 to i32*
  %v3_1dfd0 = load i32, i32* %v2_1dfd0, align 4
  %v2_1dfd8 = load i32, i32* %arg1, align 4
  %v2_1dfdc = sub i32 %v3_1dfd0, %v2_1dfd8
  %v2_1dfe0 = sdiv i32 %v2_1dfdc, 8
  %v3_1dfe3 = mul i32 %v2_1dfe0, -1431655765
  store i32 %v3_1dfe3, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1dff5

bb:                                               ; preds = %dec_label_pc_1dfb6
  %v2_1dff3 = call i32 @function_1dffa(i32 %tmp100)
  br label %dec_label_pc_1dff5

dec_label_pc_1dff5:                               ; preds = %bb, %dec_label_pc_1dfb6
  %v3_1dff3 = phi i32 [ %v2_1dff3, %bb ], [ %v3_1dfe3, %dec_label_pc_1dfb6 ]
  ret i32 %v3_1dff3
}

define i32 @function_1dffa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dffa:
  %v0_1dffb = load i32, i32* @eax, align 8
  ret i32 %v0_1dffb
}

define i32 @_ZNKSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dffc:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e022

bb:                                               ; preds = %dec_label_pc_1dffc
  %v2_1e020 = call i32 @function_1e027(i32 %arg1)
  br label %dec_label_pc_1e022

dec_label_pc_1e022:                               ; preds = %bb, %dec_label_pc_1dffc
  %v3_1e020 = phi i32 [ %v2_1e020, %bb ], [ %arg1, %dec_label_pc_1dffc ]
  ret i32 %v3_1e020
}

define i32 @function_1e027(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e027:
  %v0_1e028 = load i32, i32* @eax, align 8
  ret i32 %v0_1e028
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEC1EjRKS5_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e02a:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_1e05b = call i32 @unknown_42efe(i32 %tmp104, i32 %arg3)
  %v2_1e06d = call i32 @unknown_42c2e(i32 %tmp104, i32 %arg2)
  store i32 %v2_1e06d, i32* %arg1, align 4
  %v2_1e081 = add i32 %tmp104, 4
  %v3_1e081 = inttoptr i32 %v2_1e081 to i32*
  store i32 %v2_1e06d, i32* %v3_1e081, align 4
  %v2_1e087 = load i32, i32* %arg1, align 4
  %v2_1e092 = mul i32 %arg2, 24
  %v3_1e095 = add i32 %v2_1e087, %v2_1e092
  %v2_1e09b = add i32 %tmp104, 8
  %v3_1e09b = inttoptr i32 %v2_1e09b to i32*
  store i32 %v3_1e095, i32* %v3_1e09b, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e0aa

bb:                                               ; preds = %dec_label_pc_1e02a
  %v1_1e0a8 = call i32 @function_1e0c8()
  store i32 %v1_1e0a8, i32* @eax, align 8
  br label %dec_label_pc_1e0aa

dec_label_pc_1e0aa:                               ; preds = %bb, %dec_label_pc_1e02a
  %v0_1e0aa = call i32 @function_1e0c3()
  ret i32 %v0_1e0aa

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
}

define i32 @function_1e0ad() local_unnamed_addr {
dec_label_pc_1e0ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e0ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e0ad
}

define i32 @function_1e0c3() local_unnamed_addr {
dec_label_pc_1e0c3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e0c8() local_unnamed_addr {
dec_label_pc_1e0c8:
  %v0_1e0cd = load i32, i32* @eax, align 8
  ret i32 %v0_1e0cd
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1e0ce:
  %stack_var_-20 = alloca i32, align 4
  %v2_1e0ee = load i32, i32* %arg2, align 4
  store i32 %v2_1e0ee, i32* %stack_var_-20, align 4
  %v2_1e0f3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1e100 = call i32 @unknown_43002(i32 %arg1, i32 %v2_1e0f3)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e114

bb:                                               ; preds = %dec_label_pc_1e0ce
  %v1_1e112 = call i32 @function_1e119()
  br label %dec_label_pc_1e114

dec_label_pc_1e114:                               ; preds = %bb, %dec_label_pc_1e0ce
  %v2_1e112 = phi i32 [ %v1_1e112, %bb ], [ %arg1, %dec_label_pc_1e0ce ]
  ret i32 %v2_1e112

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e119() local_unnamed_addr {
dec_label_pc_1e119:
  %v0_1e11a = load i32, i32* @eax, align 8
  ret i32 %v0_1e11a
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e11e:
  %stack_var_-20 = alloca i32, align 4
  %v1_1e13e = add i32 %arg2, 4
  %v2_1e13e = inttoptr i32 %v1_1e13e to i32*
  %v3_1e13e = load i32, i32* %v2_1e13e, align 4
  store i32 %v3_1e13e, i32* %stack_var_-20, align 4
  %v2_1e144 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1e151 = call i32 @unknown_43052(i32 %arg1, i32 %v2_1e144)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e165

bb:                                               ; preds = %dec_label_pc_1e11e
  %v1_1e163 = call i32 @function_1e16a()
  br label %dec_label_pc_1e165

dec_label_pc_1e165:                               ; preds = %bb, %dec_label_pc_1e11e
  %v2_1e163 = phi i32 [ %v1_1e163, %bb ], [ %arg1, %dec_label_pc_1e11e ]
  ret i32 %v2_1e163

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e16a() local_unnamed_addr {
dec_label_pc_1e16a:
  %v0_1e16b = load i32, i32* @eax, align 8
  ret i32 %v0_1e16b
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_S6_ET0_T_SF_SE_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e16e:
  %v7_1e1ab = call i32 @unknown_430dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1e1ab, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e1bc

bb:                                               ; preds = %dec_label_pc_1e16e
  %v1_1e1ba = call i32 @function_1e1c1()
  br label %dec_label_pc_1e1bc

dec_label_pc_1e1bc:                               ; preds = %bb, %dec_label_pc_1e16e
  %v2_1e1ba = phi i32 [ %v1_1e1ba, %bb ], [ %v7_1e1ab, %dec_label_pc_1e16e ]
  ret i32 %v2_1e1ba

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e1c1() local_unnamed_addr {
dec_label_pc_1e1c1:
  %v0_1e1c2 = load i32, i32* @eax, align 8
  ret i32 %v0_1e1c2
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e1c4:
  %v1_1e1e1 = call i32 @unknown_43182(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e1f2

bb:                                               ; preds = %dec_label_pc_1e1c4
  %v1_1e1f0 = call i32 @function_1e1f7()
  br label %dec_label_pc_1e1f2

dec_label_pc_1e1f2:                               ; preds = %bb, %dec_label_pc_1e1c4
  %v2_1e1f0 = phi i32 [ %v1_1e1f0, %bb ], [ 0, %dec_label_pc_1e1c4 ]
  ret i32 %v2_1e1f0
}

define i32 @function_1e1f7() local_unnamed_addr {
dec_label_pc_1e1f7:
  %v0_1e1f8 = load i32, i32* @eax, align 8
  ret i32 %v0_1e1f8
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIK7uint256S0_IP6CBlock7CScriptEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e1fa:
  %v1_1e217 = call i32 @unknown_4322a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e228

bb:                                               ; preds = %dec_label_pc_1e1fa
  %v1_1e226 = call i32 @function_1e22d()
  br label %dec_label_pc_1e228

dec_label_pc_1e228:                               ; preds = %bb, %dec_label_pc_1e1fa
  %v2_1e226 = phi i32 [ %v1_1e226, %bb ], [ 0, %dec_label_pc_1e1fa ]
  ret i32 %v2_1e226
}

define i32 @function_1e22d() local_unnamed_addr {
dec_label_pc_1e22d:
  %v0_1e22e = load i32, i32* @eax, align 8
  ret i32 %v0_1e22e
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e230:
  %v10_1e28f106 = icmp eq i32 %arg2, 0
  %v1_1e293107 = icmp eq i1 %v10_1e28f106, false
  %v5_1e296109 = icmp eq i1 %v1_1e293107, false
  %v1_1e298110 = icmp eq i1 %v5_1e296109, false
  br i1 %v1_1e298110, label %dec_label_pc_1e24f, label %dec_label_pc_1e29a

dec_label_pc_1e24f:                               ; preds = %dec_label_pc_1e230, %dec_label_pc_1e24f
  %stack_var_-36.0111 = phi i32 [ %v1_1e26f, %dec_label_pc_1e24f ], [ %arg2, %dec_label_pc_1e230 ]
  %v1_1e255 = call i32 @unknown_4328a(i32 %stack_var_-36.0111)
  store i32 %arg1, i32* @eax, align 8
  %v2_1e264 = call i32 @function_3c460(i32 %arg1, i32 %v1_1e255)
  %v1_1e26f = call i32 @unknown_432ba(i32 %stack_var_-36.0111)
  %v2_1e284 = call i32 @unknown_432ea(i32 %arg1, i32 %stack_var_-36.0111)
  %v10_1e28f = icmp eq i32 %v1_1e26f, 0
  %v1_1e293 = icmp eq i1 %v10_1e28f, false
  %v5_1e296 = icmp eq i1 %v1_1e293, false
  %v1_1e298 = icmp eq i1 %v5_1e296, false
  br i1 %v1_1e298, label %dec_label_pc_1e24f, label %dec_label_pc_1e29a

dec_label_pc_1e29a:                               ; preds = %dec_label_pc_1e24f, %dec_label_pc_1e230
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e2a6

bb:                                               ; preds = %dec_label_pc_1e29a
  %v1_1e2a4 = call i32 @function_1e2ab()
  br label %dec_label_pc_1e2a6

dec_label_pc_1e2a6:                               ; preds = %bb, %dec_label_pc_1e29a
  %v2_1e2a4 = phi i32 [ %v1_1e2a4, %bb ], [ 0, %dec_label_pc_1e29a ]
  ret i32 %v2_1e2a4

; uselistorder directives
  uselistorder i32 %v1_1e26f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0111, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1e24f, { 1, 0 }
}

define i32 @function_1e2ab() local_unnamed_addr {
dec_label_pc_1e2ab:
  %v0_1e2ac = load i32, i32* @eax, align 8
  ret i32 %v0_1e2ac
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e2ae:
  %v1_1e2c8 = add i32 %arg1, 8
  %v2_1e2c8 = inttoptr i32 %v1_1e2c8 to i32*
  %v3_1e2c8 = load i32, i32* %v2_1e2c8, align 4
  store i32 %v3_1e2c8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e2d7

bb:                                               ; preds = %dec_label_pc_1e2ae
  %v2_1e2d5 = call i32 @function_1e2dc(i32 %arg1)
  br label %dec_label_pc_1e2d7

dec_label_pc_1e2d7:                               ; preds = %bb, %dec_label_pc_1e2ae
  %v3_1e2d5 = phi i32 [ %v2_1e2d5, %bb ], [ %v3_1e2c8, %dec_label_pc_1e2ae ]
  ret i32 %v3_1e2d5
}

define i32 @function_1e2dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e2dc:
  %v0_1e2dd = load i32, i32* @eax, align 8
  ret i32 %v0_1e2dd
}

define i32 @_ZNSt12_Vector_baseIP14CBlockTemplateSaIS1_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e2de:
  %v1_1e2fb = call i32 @unknown_43488(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e30c

bb:                                               ; preds = %dec_label_pc_1e2de
  %v1_1e30a = call i32 @function_1e311()
  br label %dec_label_pc_1e30c

dec_label_pc_1e30c:                               ; preds = %bb, %dec_label_pc_1e2de
  %v2_1e30a = phi i32 [ %v1_1e30a, %bb ], [ 0, %dec_label_pc_1e2de ]
  ret i32 %v2_1e30a
}

define i32 @function_1e311() local_unnamed_addr {
dec_label_pc_1e311:
  %v0_1e312 = load i32, i32* @eax, align 8
  ret i32 %v0_1e312
}

define i32 @_ZNSt12_Vector_baseIP14CBlockTemplateSaIS1_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e314:
  %v1_1e331 = call i32 @unknown_4346c(i32 %arg1)
  ret i32 0
}

define i32 @_ZNSt12_Vector_baseIP14CBlockTemplateSaIS1_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e34a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1e365 = add i32 %tmp101, 8
  %v2_1e365 = inttoptr i32 %v1_1e365 to i32*
  %v3_1e365 = load i32, i32* %v2_1e365, align 4
  %v2_1e36d = load i32, i32* %arg1, align 4
  %v2_1e371 = sub i32 %v3_1e365, %v2_1e36d
  %v2_1e375 = sdiv i32 %v2_1e371, 4
  %v3_1e38d = call i32 @unknown_4352a(i32 %tmp101, i32 %v2_1e36d, i32 %v2_1e375)
  store i32 %tmp101, i32* @eax, align 8
  %v1_1e398 = call i32 @function_3c628(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e3a9

bb:                                               ; preds = %dec_label_pc_1e34a
  %v1_1e3a7 = call i32 @function_1e3c7()
  store i32 %v1_1e3a7, i32* @eax, align 8
  br label %dec_label_pc_1e3a9

dec_label_pc_1e3a9:                               ; preds = %bb, %dec_label_pc_1e34a
  %v0_1e3a9 = call i32 @function_1e3c2()
  ret i32 %v0_1e3a9

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_1e3ac() local_unnamed_addr {
dec_label_pc_1e3ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e3ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e3ac
}

define i32 @function_1e3c2() local_unnamed_addr {
dec_label_pc_1e3c2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e3c7() local_unnamed_addr {
dec_label_pc_1e3c7:
  %v0_1e3cc = load i32, i32* @eax, align 8
  ret i32 %v0_1e3cc
}

define i32 @_ZNSt12_Vector_baseIP14CBlockTemplateSaIS1_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e3ce:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e3f4

bb:                                               ; preds = %dec_label_pc_1e3ce
  %v2_1e3f2 = call i32 @function_1e3f9(i32 %arg1)
  br label %dec_label_pc_1e3f4

dec_label_pc_1e3f4:                               ; preds = %bb, %dec_label_pc_1e3ce
  %v3_1e3f2 = phi i32 [ %v2_1e3f2, %bb ], [ %arg1, %dec_label_pc_1e3ce ]
  ret i32 %v3_1e3f2
}

define i32 @function_1e3f9(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e3f9:
  %v0_1e3fa = load i32, i32* @eax, align 8
  ret i32 %v0_1e3fa
}

define i32 @_ZSt8_DestroyIPP14CBlockTemplateS1_EvT_S3_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e3fb:
  %v2_1e42b = call i32 @unknown_43630(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e43c

bb:                                               ; preds = %dec_label_pc_1e3fb
  %v1_1e43a = call i32 @function_1e441()
  br label %dec_label_pc_1e43c

dec_label_pc_1e43c:                               ; preds = %bb, %dec_label_pc_1e3fb
  %v2_1e43a = phi i32 [ %v1_1e43a, %bb ], [ 0, %dec_label_pc_1e3fb ]
  ret i32 %v2_1e43a
}

define i32 @function_1e441() local_unnamed_addr {
dec_label_pc_1e441:
  %v0_1e442 = load i32, i32* @eax, align 8
  ret i32 %v0_1e442
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e444:
  store i32 %arg1, i32* @eax, align 8
  %v1_1e462 = call i32 @function_3c6f2(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_1e471 = call i32 @function_3c674(i32 %arg1, i32 %v1_1e462)
  %v1_1e47c = call i32 @unknown_436ec(i32 %arg1)
  %v1_1e489 = call i32 @unknown_436bc(i32 %arg1)
  %v2_1e48e = inttoptr i32 %v1_1e47c to i32*
  store i32 %v1_1e489, i32* %v2_1e48e, align 4
  %v1_1e496 = call i32 @unknown_4371c(i32 %arg1)
  %v1_1e49b = inttoptr i32 %v1_1e496 to i32*
  store i32 0, i32* %v1_1e49b, align 4
  %v1_1e4a7 = call i32 @unknown_4374c(i32 %arg1)
  %v1_1e4b4 = call i32 @unknown_436bc(i32 %arg1)
  %v2_1e4b9 = inttoptr i32 %v1_1e4a7 to i32*
  store i32 %v1_1e4b4, i32* %v2_1e4b9, align 4
  %v1_1e4be = add i32 %arg1, 20
  %v2_1e4be = inttoptr i32 %v1_1e4be to i32*
  store i32 0, i32* %v2_1e4be, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e4d1

bb:                                               ; preds = %dec_label_pc_1e444
  %v1_1e4cf = call i32 @function_1e4d6()
  br label %dec_label_pc_1e4d1

dec_label_pc_1e4d1:                               ; preds = %bb, %dec_label_pc_1e444
  %v2_1e4cf = phi i32 [ %v1_1e4cf, %bb ], [ 0, %dec_label_pc_1e444 ]
  ret i32 %v2_1e4cf

; uselistorder directives
  uselistorder i32 (i32)* @unknown_436bc, { 1, 0 }
  uselistorder i32 %arg1, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1e4d6() local_unnamed_addr {
dec_label_pc_1e4d6:
  %v0_1e4db = load i32, i32* @eax, align 8
  ret i32 %v0_1e4db
}

define i32 @_ZN5boost9addressofISt6vectorIP14CBlockTemplateSaIS3_EEEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e4dc:
  %stack_var_-20 = alloca i32, align 4
  %v2_1e4fa = ptrtoint i32* %stack_var_-20 to i32
  %v2_1e500 = call i32 @unknown_43814(i32 %v2_1e4fa, i32 %arg1)
  %v1_1e50b = call i32 @unknown_4384c(i32 %v2_1e4fa)
  %v2_1e51b = call i32 @unknown_4387b(i32 %v1_1e50b, i32 0)
  store i32 %v2_1e51b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e52c

bb:                                               ; preds = %dec_label_pc_1e4dc
  %v1_1e52a = call i32 @function_1e531()
  br label %dec_label_pc_1e52c

dec_label_pc_1e52c:                               ; preds = %bb, %dec_label_pc_1e4dc
  %v2_1e52a = phi i32 [ %v1_1e52a, %bb ], [ %v2_1e51b, %dec_label_pc_1e4dc ]
  ret i32 %v2_1e52a
}

define i32 @function_1e531() local_unnamed_addr {
dec_label_pc_1e531:
  %v0_1e532 = load i32, i32* @eax, align 8
  ret i32 %v0_1e532
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt6vectorIP14CBlockTemplateSaIS4_EEEC1ERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e534:
  %v1_1e55f = inttoptr i32 %arg2 to i32*
  %v2_1e55f = load i32, i32* %v1_1e55f, align 4
  store i32 %v2_1e55f, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e572

bb:                                               ; preds = %dec_label_pc_1e534
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1e570 = call i32 @function_1e577(i32 %tmp102)
  br label %dec_label_pc_1e572

dec_label_pc_1e572:                               ; preds = %bb, %dec_label_pc_1e534
  %v3_1e570 = phi i32 [ %v2_1e570, %bb ], [ 0, %dec_label_pc_1e534 ]
  ret i32 %v3_1e570

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1e577(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e577:
  %v0_1e578 = load i32, i32* @eax, align 8
  ret i32 %v0_1e578
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt6vectorIP14CBlockTemplateSaIS4_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SE_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e579:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e59f

bb:                                               ; preds = %dec_label_pc_1e579
  %v2_1e59d = call i32 @function_1e5a4(i32 %arg1)
  br label %dec_label_pc_1e59f

dec_label_pc_1e59f:                               ; preds = %bb, %dec_label_pc_1e579
  %v3_1e59d = phi i32 [ %v2_1e59d, %bb ], [ %arg1, %dec_label_pc_1e579 ]
  ret i32 %v3_1e59d
}

define i32 @function_1e5a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5a4:
  %v0_1e5a5 = load i32, i32* @eax, align 8
  ret i32 %v0_1e5a5
}

define i32 @_ZN5boost15foreach_detail_7derefofISt6vectorIP14CBlockTemplateSaIS4_EEEERT_PS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5a6:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e5cc

bb:                                               ; preds = %dec_label_pc_1e5a6
  %v2_1e5ca = call i32 @function_1e5d1(i32 %arg1)
  br label %dec_label_pc_1e5cc

dec_label_pc_1e5cc:                               ; preds = %bb, %dec_label_pc_1e5a6
  %v3_1e5ca = phi i32 [ %v2_1e5ca, %bb ], [ %arg1, %dec_label_pc_1e5a6 ]
  ret i32 %v3_1e5ca
}

define i32 @function_1e5d1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5d1:
  %v0_1e5d2 = load i32, i32* @eax, align 8
  ret i32 %v0_1e5d2
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorIP14CBlockTemplateSaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e5d3:
  %v2_1e5fd = call i32 @unknown_439a5(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e614

bb:                                               ; preds = %dec_label_pc_1e5d3
  %v1_1e612 = call i32 @function_1e619()
  br label %dec_label_pc_1e614

dec_label_pc_1e614:                               ; preds = %bb, %dec_label_pc_1e5d3
  %v2_1e612 = phi i32 [ %v1_1e612, %bb ], [ %arg1, %dec_label_pc_1e5d3 ]
  ret i32 %v2_1e612

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e619() local_unnamed_addr {
dec_label_pc_1e619:
  %v0_1e61a = load i32, i32* @eax, align 8
  ret i32 %v0_1e61a
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPP14CBlockTemplateSt6vectorIS5_SaIS5_EEEEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e61e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_1e641 = call i32 @function_3a2fa(i32 %tmp102)
  %v1_1e64c = inttoptr i32 %arg2 to i32*
  %v2_1e64c = load i32, i32* %v1_1e64c, align 4
  store i32 %v2_1e64c, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e65c

bb:                                               ; preds = %dec_label_pc_1e61e
  %v1_1e65a = call i32 @function_1e661()
  br label %dec_label_pc_1e65c

dec_label_pc_1e65c:                               ; preds = %bb, %dec_label_pc_1e61e
  %v2_1e65a = phi i32 [ %v1_1e65a, %bb ], [ 0, %dec_label_pc_1e61e ]
  ret i32 %v2_1e65a

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_1e661() local_unnamed_addr {
dec_label_pc_1e661:
  %v0_1e662 = load i32, i32* @eax, align 8
  ret i32 %v0_1e662
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorIP14CBlockTemplateSaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e663:
  ret i32 0
}

define i32 @function_1e680(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e680:
  %v0_1e680 = load i32, i32* @ebp, align 4
  %v1_1e680 = add i32 %v0_1e680, -28
  %v2_1e680 = inttoptr i32 %v1_1e680 to i32*
  %v3_1e680 = load i32, i32* %v2_1e680, align 4
  %v1_1e683 = add i32 %v0_1e680, -32
  %v2_1e683 = inttoptr i32 %v1_1e683 to i32*
  %v3_1e683 = load i32, i32* %v2_1e683, align 4
  %v2_1e68d = call i32 @unknown_43a7f(i32 %v3_1e680, i32 %v3_1e683)
  %v0_1e695 = load i32, i32* @ebp, align 4
  %v1_1e695 = add i32 %v0_1e695, -28
  %v2_1e695 = inttoptr i32 %v1_1e695 to i32*
  %v3_1e695 = load i32, i32* %v2_1e695, align 4
  store i32 %v3_1e695, i32* @eax, align 8
  %v1_1e698 = add i32 %v0_1e695, -12
  %v2_1e698 = inttoptr i32 %v1_1e698 to i32*
  %v3_1e698 = load i32, i32* %v2_1e698, align 4
  %v1_1e69b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e69b = icmp eq i32 %v1_1e69b, %v3_1e698
  br i1 %v3_1e69b, label %bb, label %dec_label_pc_1e6a4

bb:                                               ; preds = %dec_label_pc_1e680
  %v1_1e6a2 = call i32 @function_1e6a9()
  br label %dec_label_pc_1e6a4

dec_label_pc_1e6a4:                               ; preds = %bb, %dec_label_pc_1e680
  %v2_1e6a2 = phi i32 [ %v1_1e6a2, %bb ], [ %v3_1e695, %dec_label_pc_1e680 ]
  ret i32 %v2_1e6a2
}

define i32 @function_1e6a9() local_unnamed_addr {
dec_label_pc_1e6a9:
  %v0_1e6aa = load i32, i32* @eax, align 8
  ret i32 %v0_1e6aa
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPP14CBlockTemplateSt6vectorIS5_SaIS5_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e6ad:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e6d3

bb:                                               ; preds = %dec_label_pc_1e6ad
  %v2_1e6d1 = call i32 @function_1e6d8(i32 %arg1)
  br label %dec_label_pc_1e6d3

dec_label_pc_1e6d3:                               ; preds = %bb, %dec_label_pc_1e6ad
  %v3_1e6d1 = phi i32 [ %v2_1e6d1, %bb ], [ %arg1, %dec_label_pc_1e6ad ]
  ret i32 %v3_1e6d1
}

define i32 @function_1e6d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e6d8:
  %v0_1e6d9 = load i32, i32* @eax, align 8
  ret i32 %v0_1e6d9
}

define i32 @_ZN9__gnu_cxxeqIPP14CBlockTemplateSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e6da:
  %v1_1e6fe = call i32 @unknown_43b40(i32 %arg1)
  %v1_1e703 = inttoptr i32 %v1_1e6fe to i32*
  %v2_1e703 = load i32, i32* %v1_1e703, align 4
  %v1_1e70b = call i32 @unknown_43b40(i32 %arg2)
  %v1_1e710 = inttoptr i32 %v1_1e70b to i32*
  %v2_1e710 = load i32, i32* %v1_1e710, align 4
  %v12_1e712 = icmp eq i32 %v2_1e703, %v2_1e710
  %v1_1e714 = zext i1 %v12_1e712 to i32
  %v3_1e714 = and i32 %v2_1e710, -256
  %v4_1e714 = or i32 %v1_1e714, %v3_1e714
  store i32 %v4_1e714, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e723

bb:                                               ; preds = %dec_label_pc_1e6da
  %v1_1e721 = call i32 @function_1e728()
  br label %dec_label_pc_1e723

dec_label_pc_1e723:                               ; preds = %bb, %dec_label_pc_1e6da
  %v2_1e721 = phi i32 [ %v1_1e721, %bb ], [ %v4_1e714, %dec_label_pc_1e6da ]
  ret i32 %v2_1e721

; uselistorder directives
  uselistorder i32 %v2_1e710, { 1, 0 }
  uselistorder i32 (i32)* @unknown_43b40, { 1, 0 }
}

define i32 @function_1e728() local_unnamed_addr {
dec_label_pc_1e728:
  %v0_1e72d = load i32, i32* @eax, align 8
  ret i32 %v0_1e72d
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPP14CBlockTemplateSt6vectorIS2_SaIS2_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e72e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1e748 = load i32, i32* %arg1, align 4
  %v1_1e74a = add i32 %v2_1e748, 4
  store i32 %v1_1e74a, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e761

bb:                                               ; preds = %dec_label_pc_1e72e
  %v2_1e75f = call i32 @function_1e766(i32 %tmp100)
  br label %dec_label_pc_1e761

dec_label_pc_1e761:                               ; preds = %bb, %dec_label_pc_1e72e
  %v3_1e75f = phi i32 [ %v2_1e75f, %bb ], [ %tmp100, %dec_label_pc_1e72e ]
  ret i32 %v3_1e75f
}

define i32 @function_1e766(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e766:
  %v0_1e767 = load i32, i32* @eax, align 8
  ret i32 %v0_1e767
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPP14CBlockTemplateSt6vectorIS2_SaIS2_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e768:
  %v2_1e782 = load i32, i32* %arg1, align 4
  store i32 %v2_1e782, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e790

bb:                                               ; preds = %dec_label_pc_1e768
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1e78e = call i32 @function_1e795(i32 %tmp100)
  br label %dec_label_pc_1e790

dec_label_pc_1e790:                               ; preds = %bb, %dec_label_pc_1e768
  %v3_1e78e = phi i32 [ %v2_1e78e, %bb ], [ %v2_1e782, %dec_label_pc_1e768 ]
  ret i32 %v3_1e78e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1e795(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e795:
  %v0_1e796 = load i32, i32* @eax, align 8
  ret i32 %v0_1e796
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e798:
  %v1_1e7b5 = call i32 @unknown_43c2c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e7c6

bb:                                               ; preds = %dec_label_pc_1e798
  %v1_1e7c4 = call i32 @function_1e7cb()
  br label %dec_label_pc_1e7c6

dec_label_pc_1e7c6:                               ; preds = %bb, %dec_label_pc_1e798
  %v2_1e7c4 = phi i32 [ %v1_1e7c4, %bb ], [ 0, %dec_label_pc_1e798 ]
  ret i32 %v2_1e7c4
}

define i32 @function_1e7cb() local_unnamed_addr {
dec_label_pc_1e7cb:
  %v0_1e7cc = load i32, i32* @eax, align 8
  ret i32 %v0_1e7cc
}

define i32 @_ZNSt12_Vector_baseIxSaIxEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e7ce:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1e7e9 = add i32 %tmp101, 8
  %v2_1e7e9 = inttoptr i32 %v1_1e7e9 to i32*
  %v3_1e7e9 = load i32, i32* %v2_1e7e9, align 4
  %v2_1e7f1 = load i32, i32* %arg1, align 4
  %v2_1e7f5 = sub i32 %v3_1e7e9, %v2_1e7f1
  %v2_1e7f9 = sdiv i32 %v2_1e7f5, 8
  %v3_1e811 = call i32 @unknown_43c98(i32 %tmp101, i32 %v2_1e7f1, i32 %v2_1e7f9)
  store i32 %tmp101, i32* @eax, align 8
  %v1_1e81c = call i32 @function_3cf66(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e82d

bb:                                               ; preds = %dec_label_pc_1e7ce
  %v1_1e82b = call i32 @function_1e84b()
  store i32 %v1_1e82b, i32* @eax, align 8
  br label %dec_label_pc_1e82d

dec_label_pc_1e82d:                               ; preds = %bb, %dec_label_pc_1e7ce
  %v0_1e82d = call i32 @function_1e846()
  ret i32 %v0_1e82d

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_1e830() local_unnamed_addr {
dec_label_pc_1e830:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e830 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e830
}

define i32 @function_1e846() local_unnamed_addr {
dec_label_pc_1e846:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e84b() local_unnamed_addr {
dec_label_pc_1e84b:
  %v0_1e850 = load i32, i32* @eax, align 8
  ret i32 %v0_1e850
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e852:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e878

bb:                                               ; preds = %dec_label_pc_1e852
  %v2_1e876 = call i32 @function_1e87d(i32 %arg1)
  br label %dec_label_pc_1e878

dec_label_pc_1e878:                               ; preds = %bb, %dec_label_pc_1e852
  %v3_1e876 = phi i32 [ %v2_1e876, %bb ], [ %arg1, %dec_label_pc_1e852 ]
  ret i32 %v3_1e876
}

define i32 @function_1e87d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e87d:
  %v0_1e87e = load i32, i32* @eax, align 8
  ret i32 %v0_1e87e
}

define i32 @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e87f:
  %v2_1e8af = call i32 @unknown_43d9e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e8c0

bb:                                               ; preds = %dec_label_pc_1e87f
  %v1_1e8be = call i32 @function_1e8c5()
  br label %dec_label_pc_1e8c0

dec_label_pc_1e8c0:                               ; preds = %bb, %dec_label_pc_1e87f
  %v2_1e8be = phi i32 [ %v1_1e8be, %bb ], [ 0, %dec_label_pc_1e87f ]
  ret i32 %v2_1e8be
}

define i32 @function_1e8c5() local_unnamed_addr {
dec_label_pc_1e8c5:
  %v0_1e8c6 = load i32, i32* @eax, align 8
  ret i32 %v0_1e8c6
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EE15_M_erase_at_endEPS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e8c8:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v1_1e8eb = call i32 @function_3cc96(i32 %arg1)
  %v1_1e8f3 = add i32 %arg1, 4
  %v2_1e8f3 = inttoptr i32 %v1_1e8f3 to i32*
  %v3_1e8f3 = load i32, i32* %v2_1e8f3, align 4
  store i32 %arg2, i32* %stack_var_-60, align 4
  store i32 %arg2, i32* %v2_1e8f3, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e91e

bb:                                               ; preds = %dec_label_pc_1e8c8
  %v1_1e91c = load i32, i32* %stack_var_-60, align 4
  %v4_1e91c = call i32 @function_1e923(i32 %v1_1e91c, i32 %v3_1e8f3, i32 %v1_1e8eb)
  br label %dec_label_pc_1e91e

dec_label_pc_1e91e:                               ; preds = %bb, %dec_label_pc_1e8c8
  %v5_1e91c = phi i32 [ %v4_1e91c, %bb ], [ 0, %dec_label_pc_1e8c8 ]
  ret i32 %v5_1e91c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1e923(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e923:
  %v0_1e924 = load i32, i32* @eax, align 8
  ret i32 %v0_1e924
}

define i32 @_ZN9__gnu_cxx13new_allocatorIP14CBlockTemplateE9constructEPS2_RKS2_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_1e926:
  %v2_1e957 = call i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIxEEvRT_iN4mpl_5bool_ILb0EEE(i32 4, i32 %arg2)
  %v1_1e95c = icmp eq i32 %v2_1e957, 0
  br i1 %v1_1e95c, label %dec_label_pc_1e967, label %dec_label_pc_1e960

dec_label_pc_1e960:                               ; preds = %dec_label_pc_1e926
  %v2_1e963 = load i32, i32* %arg3, align 4
  %v2_1e965 = inttoptr i32 %v2_1e957 to i32*
  store i32 %v2_1e963, i32* %v2_1e965, align 4
  br label %dec_label_pc_1e967

dec_label_pc_1e967:                               ; preds = %dec_label_pc_1e960, %dec_label_pc_1e926
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1e973

bb:                                               ; preds = %dec_label_pc_1e967
  %v1_1e971 = call i32 @function_1e978()
  br label %dec_label_pc_1e973

dec_label_pc_1e973:                               ; preds = %bb, %dec_label_pc_1e967
  %v2_1e971 = phi i32 [ %v1_1e971, %bb ], [ 0, %dec_label_pc_1e967 ]
  ret i32 %v2_1e971
}

define i32 @function_1e978() local_unnamed_addr {
dec_label_pc_1e978:
  %v0_1e979 = load i32, i32* @eax, align 8
  ret i32 %v0_1e979
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e97a:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_1e9a2 = add i32 %tmp113, 4
  %v2_1e9a2 = inttoptr i32 %v1_1e9a2 to i32*
  %v3_1e9a2 = load i32, i32* %v2_1e9a2, align 4
  %v1_1e9a8 = add i32 %tmp113, 8
  %v2_1e9a8 = inttoptr i32 %v1_1e9a8 to i32*
  %v3_1e9a8 = load i32, i32* %v2_1e9a8, align 4
  %v12_1e9ab = icmp eq i32 %v3_1e9a2, %v3_1e9a8
  br i1 %v12_1e9ab, label %dec_label_pc_1ea2c, label %dec_label_pc_1e9af

dec_label_pc_1e9af:                               ; preds = %dec_label_pc_1e97a
  %v3_1e9b2 = load i32, i32* %v2_1e9a2, align 4
  %v1_1e9b5 = add i32 %v3_1e9b2, -4
  store i32 %v3_1e9b2, i32* @edx, align 4
  store i32 %tmp113, i32* @eax, align 8
  %v4_1e9cc = call i32 @function_3d2a0(i32 %tmp113, i32 %v3_1e9b2, i32 %v1_1e9b5)
  %v3_1e9d4 = load i32, i32* %v2_1e9a2, align 4
  %v1_1e9d7 = add i32 %v3_1e9d4, 4
  store i32 %v1_1e9d7, i32* %v2_1e9a2, align 4
  %v1_1e9e3 = inttoptr i32 %arg3 to i32*
  %v2_1e9e3 = load i32, i32* %v1_1e9e3, align 4
  store i32 %v3_1e9d4, i32* %esi.global-to-local, align 4
  %v3_1e9f4 = load i32, i32* %v2_1e9a2, align 4
  %v1_1e9f7 = add i32 %v3_1e9f4, -8
  %v2_1e9fa = ptrtoint i32* %stack_var_-52 to i32
  %v1_1ea00 = call i32 @unknown_43de0(i32 %v2_1e9fa)
  %v1_1ea05 = inttoptr i32 %v1_1ea00 to i32*
  %v2_1ea05 = load i32, i32* %v1_1ea05, align 4
  %v0_1ea07 = load i32, i32* %esi.global-to-local, align 4
  %v4_1ea12 = call i32 @unknown_43edb(i32 %v2_1ea05, i32 %v1_1e9f7, i32 %v0_1ea07)
  store i32 %v2_1e9fa, i32* @eax, align 8
  %v1_1ea1d = call i32 @function_3d0e2(i32 %v2_1e9fa)
  %v2_1ea25 = inttoptr i32 %v1_1ea1d to i32*
  store i32 %v2_1e9e3, i32* %v2_1ea25, align 4
  %v0_1ea27 = call i32 @function_1ec22()
  ret i32 %v0_1ea27

dec_label_pc_1ea2c:                               ; preds = %dec_label_pc_1e97a
  %v4_1ea42 = call i32 @unknown_43f42(i32 %tmp113, i32 1, i32 ptrtoint ([22 x i8]* @global_var_7126.2864 to i32))
  %v2_1ea4a = ptrtoint i32* %stack_var_-40 to i32
  %v2_1ea57 = call i32 @unknown_44014(i32 %v2_1ea4a, i32 %tmp113)
  %v2_1ea66 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1ea6c = call i32 @unknown_4405b(i32 %v2_1ea66, i32 %v2_1ea4a)
  %v2_1ea81 = call i32 @unknown_440b6(i32 %tmp113, i32 %v4_1ea42)
  %v2_1ea92 = mul i32 %v2_1ea6c, 4
  %v5_1ea97 = add i32 %v2_1ea81, %v2_1ea92
  store i32 %v5_1ea97, i32* @edx, align 4
  store i32 %tmp113, i32* @eax, align 8
  %v3_1eaab = call i32 @function_3d2a0(i32 %tmp113, i32 %v5_1ea97, i32 %arg3)
  store i32 %tmp113, i32* @eax, align 8
  %v1_1eabd = call i32 @function_3cd48(i32 %tmp113)
  %v1_1eaca = call i32 @unknown_43de0(i32 %v2_1ea66)
  %v1_1eacf = inttoptr i32 %v1_1eaca to i32*
  %v2_1eacf = load i32, i32* %v1_1eacf, align 4
  %v2_1ead4 = load i32, i32* %arg1, align 4
  %v5_1eae8 = call i32 @unknown_4410d(i32 %v2_1ead4, i32 %v2_1eacf, i32 %v2_1ea81, i32 %v1_1eabd)
  %v4_1eaf0 = add i32 %v5_1eae8, 4
  store i32 %tmp113, i32* @eax, align 8
  %v1_1eafa = call i32 @function_3cd48(i32 %tmp113)
  %v3_1eb04 = load i32, i32* %v2_1e9a2, align 4
  store i32 %v3_1eb04, i32* %esi.global-to-local, align 4
  %v1_1eb0d = call i32 @unknown_43de0(i32 %v2_1ea66)
  %v1_1eb12 = inttoptr i32 %v1_1eb0d to i32*
  %v2_1eb12 = load i32, i32* %v1_1eb12, align 4
  %v5_1eb26 = call i32 @unknown_4410d(i32 %v2_1eb12, i32 %v3_1eb04, i32 %v4_1eaf0, i32 %v1_1eafa)
  store i32 %tmp113, i32* @eax, align 8
  %v1_1eb34 = call i32 @function_3cd48(i32 %tmp113)
  %v3_1eb57 = load i32, i32* %v2_1e9a8, align 4
  %v2_1eb5f = load i32, i32* %arg1, align 4
  %v2_1eb63 = sub i32 %v3_1eb57, %v2_1eb5f
  %v2_1eb67 = sdiv i32 %v2_1eb63, 4
  %v3_1eb7f = call i32 @unknown_43b5a(i32 %tmp113, i32 %v2_1eb5f, i32 %v2_1eb67)
  store i32 %v2_1ea81, i32* %arg1, align 4
  store i32 %v5_1eb26, i32* %v2_1e9a2, align 4
  %v2_1eb98 = mul i32 %v4_1ea42, 4
  %v5_1eb9d = add i32 %v2_1ea81, %v2_1eb98
  store i32 %v5_1eb9d, i32* %v2_1e9a8, align 4
  %v0_1eba6 = call i32 @function_1ec22()
  ret i32 %v0_1eba6

; uselistorder directives
  uselistorder i32 %v2_1ea81, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1e9b2, { 1, 0, 2 }
  uselistorder i32* %v2_1e9a2, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %tmp113, { 2, 4, 3, 6, 5, 8, 7, 10, 9, 11, 12, 13, 1, 0, 15, 14 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4410d, { 1, 0 }
  uselistorder i32 ()* @function_1ec22, { 1, 0 }
  uselistorder i32 (i32)* @unknown_43de0, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_3d2a0, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1eba9() local_unnamed_addr {
dec_label_pc_1eba9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1eba9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1eba9
}

define i32 @function_1ebc0() local_unnamed_addr {
dec_label_pc_1ebc0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ebc0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ebc0 = add i32 %v0_1ebc0, 1962991741
  %v2_1ebc0 = inttoptr i32 %v1_1ebc0 to i32*
  %v3_1ebc0 = load i32, i32* %v2_1ebc0, align 4
  %v4_1ebc0 = add i32 %v3_1ebc0, 1
  store i32 %v4_1ebc0, i32* %v2_1ebc0, align 4
  %v0_1ebc6 = load i32, i32* %eax.global-to-local, align 8
  %v2_1ebc6 = load i1, i1* %cf.global-to-local, align 1
  %v3_1ebc6 = zext i1 %v2_1ebc6 to i32
  %v4_1ebc6 = add i32 %v0_1ebc6, 117
  %v5_1ebc6 = add i32 %v4_1ebc6, %v3_1ebc6
  %v31_1ebc6 = urem i32 %v5_1ebc6, 256
  %v33_1ebc6 = and i32 %v0_1ebc6, 1073741568
  %v34_1ebc6 = or i32 %v31_1ebc6, %v33_1ebc6
  %v0_1ebc8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ebc8 = add i32 %v0_1ebc8, 1
  store i32 %v1_1ebc8, i32* @ebp, align 4
  %v2_1ebca = mul nuw i32 %v34_1ebc6, 4
  store i32 %v2_1ebca, i32* %eax.global-to-local, align 8
  %v2_1ebcf = add i32 %v0_1ebc8, -15
  %v3_1ebcf = inttoptr i32 %v2_1ebcf to i32*
  %v4_1ebcf = load i32, i32* %v3_1ebcf, align 4
  %v5_1ebcf = add i32 %v4_1ebcf, %v2_1ebca
  %v10_1ebcf = icmp ult i32 %v5_1ebcf, %v2_1ebca
  store i1 %v10_1ebcf, i1* %cf.global-to-local, align 1
  %v1_1ebd2 = add i32 %v0_1ebc8, -43
  %v2_1ebd2 = inttoptr i32 %v1_1ebd2 to i32*
  %v3_1ebd2 = load i32, i32* %v2_1ebd2, align 4
  store i32 %v3_1ebd2, i32* %eax.global-to-local, align 8
  %v2_1ebdc = call i32 @unknown_4416a(i32 %v3_1ebd2, i32 %v5_1ebcf)
  store i32 %v2_1ebdc, i32* %eax.global-to-local, align 8
  %v0_1ebe1 = call i32 @function_1ec04()
  store i32 %v0_1ebe1, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ebe1

; uselistorder directives
  uselistorder i32 %v2_1ebca, { 1, 2, 0 }
  uselistorder i32 %v0_1ebc6, { 1, 0 }
}

define i32 @function_1ebe3() local_unnamed_addr {
dec_label_pc_1ebe3:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1ebe3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ebe3 = add i32 %v0_1ebe3, -44
  %v2_1ebe3 = inttoptr i32 %v1_1ebe3 to i32*
  %v3_1ebe3 = load i32, i32* %v2_1ebe3, align 4
  store i32 %v3_1ebe3, i32* @eax, align 8
  %v1_1ebe9 = call i32 @function_3cd48(i32 %v3_1ebe3)
  %v1_1ebf9 = add i32 %v0_1ebe3, -16
  %v2_1ebf9 = inttoptr i32 %v1_1ebf9 to i32*
  %v3_1ebf9 = load i32, i32* %v2_1ebf9, align 4
  ret i32 %v3_1ebf9

; uselistorder directives
  uselistorder i32 (i32)* @function_3cd48, { 3, 2, 1, 0 }
}

define i32 @function_1ec04() local_unnamed_addr {
dec_label_pc_1ec04:
  %v0_1ec04 = load i32, i32* @ebp, align 4
  %v1_1ec04 = add i32 %v0_1ec04, -44
  %v2_1ec04 = inttoptr i32 %v1_1ec04 to i32*
  %v3_1ec04 = load i32, i32* %v2_1ec04, align 4
  %v1_1ec07 = add i32 %v0_1ec04, -24
  %v2_1ec07 = inttoptr i32 %v1_1ec07 to i32*
  %v3_1ec07 = load i32, i32* %v2_1ec07, align 4
  %v1_1ec0e = add i32 %v0_1ec04, -16
  %v2_1ec0e = inttoptr i32 %v1_1ec0e to i32*
  %v3_1ec0e = load i32, i32* %v2_1ec0e, align 4
  %v3_1ec18 = call i32 @unknown_43b5a(i32 %v3_1ec04, i32 %v3_1ec0e, i32 %v3_1ec07)
  ret i32 %v3_1ec18

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_43b5a, { 1, 0 }
}

define i32 @function_1ec22() local_unnamed_addr {
dec_label_pc_1ec22:
  %v0_1ec22 = load i32, i32* @ebp, align 4
  %v1_1ec22 = add i32 %v0_1ec22, -12
  %v2_1ec22 = inttoptr i32 %v1_1ec22 to i32*
  %v3_1ec22 = load i32, i32* %v2_1ec22, align 4
  %v1_1ec25 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ec25 = xor i32 %v1_1ec25, %v3_1ec22
  %v3_1ec25 = icmp eq i32 %v2_1ec25, 0
  store i32 %v2_1ec25, i32* @eax, align 8
  br i1 %v3_1ec25, label %bb, label %dec_label_pc_1ec2e

bb:                                               ; preds = %dec_label_pc_1ec22
  %v1_1ec2c = call i32 @function_1ec33()
  br label %dec_label_pc_1ec2e

dec_label_pc_1ec2e:                               ; preds = %bb, %dec_label_pc_1ec22
  %v2_1ec2c = phi i32 [ %v1_1ec2c, %bb ], [ %v2_1ec25, %dec_label_pc_1ec22 ]
  ret i32 %v2_1ec2c
}

define i32 @function_1ec33() local_unnamed_addr {
dec_label_pc_1ec33:
  %v0_1ec39 = load i32, i32* @eax, align 8
  ret i32 %v0_1ec39
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ec3a:
  %v1_1ec5a = add i32 %arg2, 4
  %v2_1ec67 = call i32 @unknown_4445a(i32 %arg1, i32 %v1_1ec5a)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ec7b

bb:                                               ; preds = %dec_label_pc_1ec3a
  %v1_1ec79 = call i32 @function_1ec80()
  br label %dec_label_pc_1ec7b

dec_label_pc_1ec7b:                               ; preds = %bb, %dec_label_pc_1ec3a
  %v2_1ec79 = phi i32 [ %v1_1ec79, %bb ], [ %arg1, %dec_label_pc_1ec3a ]
  ret i32 %v2_1ec79

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ec80() local_unnamed_addr {
dec_label_pc_1ec80:
  %v0_1ec81 = load i32, i32* @eax, align 8
  ret i32 %v0_1ec81
}

define i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEE11lower_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ec84:
  %v3_1ecbb = call i32 @unknown_444de(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ecd2

bb:                                               ; preds = %dec_label_pc_1ec84
  %v1_1ecd0 = call i32 @function_1ecd7()
  br label %dec_label_pc_1ecd2

dec_label_pc_1ecd2:                               ; preds = %bb, %dec_label_pc_1ec84
  %v2_1ecd0 = phi i32 [ %v1_1ecd0, %bb ], [ %arg1, %dec_label_pc_1ec84 ]
  ret i32 %v2_1ecd0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ecd7() local_unnamed_addr {
dec_label_pc_1ecd7:
  %v0_1ecd8 = load i32, i32* @eax, align 8
  ret i32 %v0_1ecd8
}

define i32 @_ZNKSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ecdc:
  %v2_1ed06 = call i32 @unknown_445b2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ed1d

bb:                                               ; preds = %dec_label_pc_1ecdc
  %v1_1ed1b = call i32 @function_1ed22()
  br label %dec_label_pc_1ed1d

dec_label_pc_1ed1d:                               ; preds = %bb, %dec_label_pc_1ecdc
  %v2_1ed1b = phi i32 [ %v1_1ed1b, %bb ], [ %arg1, %dec_label_pc_1ecdc ]
  ret i32 %v2_1ed1b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ed22() local_unnamed_addr {
dec_label_pc_1ed22:
  %v0_1ed23 = load i32, i32* @eax, align 8
  ret i32 %v0_1ed23
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ed26:
  %v2_1ed40 = load i32, i32* %arg1, align 4
  %v1_1ed42 = add i32 %v2_1ed40, 16
  store i32 %v1_1ed42, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ed51

bb:                                               ; preds = %dec_label_pc_1ed26
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1ed4f = call i32 @function_1ed56(i32 %tmp100)
  br label %dec_label_pc_1ed51

dec_label_pc_1ed51:                               ; preds = %bb, %dec_label_pc_1ed26
  %v3_1ed4f = phi i32 [ %v2_1ed4f, %bb ], [ %v1_1ed42, %dec_label_pc_1ed26 ]
  ret i32 %v3_1ed4f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1ed56(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed56:
  %v0_1ed57 = load i32, i32* @eax, align 8
  ret i32 %v0_1ed57
}

define i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ed58:
  %v2_1ed82 = call i32 @unknown_44664(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ed99

bb:                                               ; preds = %dec_label_pc_1ed58
  %v1_1ed97 = call i32 @function_1ed9e()
  br label %dec_label_pc_1ed99

dec_label_pc_1ed99:                               ; preds = %bb, %dec_label_pc_1ed58
  %v2_1ed97 = phi i32 [ %v1_1ed97, %bb ], [ %arg1, %dec_label_pc_1ed58 ]
  ret i32 %v2_1ed97

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ed9e() local_unnamed_addr {
dec_label_pc_1ed9e:
  %v0_1ed9f = load i32, i32* @eax, align 8
  ret i32 %v0_1ed9f
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEeqERKS8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1eda2:
  %v2_1edc2 = load i32, i32* %arg1, align 4
  %v1_1edc7 = inttoptr i32 %arg2 to i32*
  %v2_1edc7 = load i32, i32* %v1_1edc7, align 4
  %v12_1edc9 = icmp eq i32 %v2_1edc2, %v2_1edc7
  %v1_1edcb = zext i1 %v12_1edc9 to i32
  %v3_1edcb = and i32 %v2_1edc7, -256
  %v4_1edcb = or i32 %v1_1edcb, %v3_1edcb
  store i32 %v4_1edcb, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1edda

bb:                                               ; preds = %dec_label_pc_1eda2
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1edd8 = call i32 @function_1eddf(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1edda

dec_label_pc_1edda:                               ; preds = %bb, %dec_label_pc_1eda2
  %v4_1edd8 = phi i32 [ %v3_1edd8, %bb ], [ %v4_1edcb, %dec_label_pc_1eda2 ]
  ret i32 %v4_1edd8

; uselistorder directives
  uselistorder i32 %v2_1edc7, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1eddf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1eddf:
  %v0_1ede0 = load i32, i32* @eax, align 8
  ret i32 %v0_1ede0
}

define i32 @_ZNSt4pairIP6CBlock7CScriptEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ede2:
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ee1c

bb:                                               ; preds = %dec_label_pc_1ede2
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1ee05 = add i32 %tmp100, 4
  %v2_1ee1a = call i32 @function_1ee21(i32 %v1_1ee05)
  br label %dec_label_pc_1ee1c

dec_label_pc_1ee1c:                               ; preds = %bb, %dec_label_pc_1ede2
  %v3_1ee1a = phi i32 [ %v2_1ee1a, %bb ], [ 0, %dec_label_pc_1ede2 ]
  ret i32 %v3_1ee1a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1ee21(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee21:
  %v0_1ee22 = load i32, i32* @eax, align 8
  ret i32 %v0_1ee22
}

define i32 @_ZNSt4pairIK7uint256S_IP6CBlock7CScriptEEC1ERS1_RKS5_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ee24:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 8
  %v0_1ee3c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp105, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_1ee4d = inttoptr i32 %arg2 to i32*
  %v2_1ee4d = load i32, i32* %v1_1ee4d, align 4
  store i32 %v2_1ee4d, i32* %arg1, align 4
  %v1_1ee51 = add i32 %arg2, 4
  %v2_1ee51 = inttoptr i32 %v1_1ee51 to i32*
  %v3_1ee51 = load i32, i32* %v2_1ee51, align 4
  %v1_1ee54 = load i32, i32* %eax.global-to-local, align 8
  %v2_1ee54 = add i32 %v1_1ee54, 4
  %v3_1ee54 = inttoptr i32 %v2_1ee54 to i32*
  store i32 %v3_1ee51, i32* %v3_1ee54, align 4
  %v0_1ee57 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ee57 = add i32 %v0_1ee57, 8
  %v2_1ee57 = inttoptr i32 %v1_1ee57 to i32*
  %v3_1ee57 = load i32, i32* %v2_1ee57, align 4
  %v1_1ee5a = load i32, i32* %eax.global-to-local, align 8
  %v2_1ee5a = add i32 %v1_1ee5a, 8
  %v3_1ee5a = inttoptr i32 %v2_1ee5a to i32*
  store i32 %v3_1ee57, i32* %v3_1ee5a, align 4
  %v0_1ee5d = load i32, i32* %edx.global-to-local, align 4
  %v1_1ee5d = add i32 %v0_1ee5d, 12
  %v2_1ee5d = inttoptr i32 %v1_1ee5d to i32*
  %v3_1ee5d = load i32, i32* %v2_1ee5d, align 4
  %v1_1ee60 = load i32, i32* %eax.global-to-local, align 8
  %v2_1ee60 = add i32 %v1_1ee60, 12
  %v3_1ee60 = inttoptr i32 %v2_1ee60 to i32*
  store i32 %v3_1ee5d, i32* %v3_1ee60, align 4
  %v0_1ee63 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ee63 = add i32 %v0_1ee63, 16
  %v2_1ee63 = inttoptr i32 %v1_1ee63 to i32*
  %v3_1ee63 = load i32, i32* %v2_1ee63, align 4
  %v1_1ee66 = load i32, i32* %eax.global-to-local, align 8
  %v2_1ee66 = add i32 %v1_1ee66, 16
  %v3_1ee66 = inttoptr i32 %v2_1ee66 to i32*
  store i32 %v3_1ee63, i32* %v3_1ee66, align 4
  %v0_1ee69 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ee69 = add i32 %v0_1ee69, 20
  %v2_1ee69 = inttoptr i32 %v1_1ee69 to i32*
  %v3_1ee69 = load i32, i32* %v2_1ee69, align 4
  %v1_1ee6c = load i32, i32* %eax.global-to-local, align 8
  %v2_1ee6c = add i32 %v1_1ee6c, 20
  %v3_1ee6c = inttoptr i32 %v2_1ee6c to i32*
  store i32 %v3_1ee69, i32* %v3_1ee6c, align 4
  %v0_1ee6f = load i32, i32* %edx.global-to-local, align 4
  %v1_1ee6f = add i32 %v0_1ee6f, 24
  %v2_1ee6f = inttoptr i32 %v1_1ee6f to i32*
  %v3_1ee6f = load i32, i32* %v2_1ee6f, align 4
  %v1_1ee72 = load i32, i32* %eax.global-to-local, align 8
  %v2_1ee72 = add i32 %v1_1ee72, 24
  %v3_1ee72 = inttoptr i32 %v2_1ee72 to i32*
  store i32 %v3_1ee6f, i32* %v3_1ee72, align 4
  %v0_1ee75 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ee75 = add i32 %v0_1ee75, 28
  %v2_1ee75 = inttoptr i32 %v1_1ee75 to i32*
  %v3_1ee75 = load i32, i32* %v2_1ee75, align 4
  %v1_1ee78 = load i32, i32* %eax.global-to-local, align 8
  %v2_1ee78 = add i32 %v1_1ee78, 28
  %v3_1ee78 = inttoptr i32 %v2_1ee78 to i32*
  store i32 %v3_1ee75, i32* %v3_1ee78, align 4
  %v1_1ee7e = add i32 %tmp105, 32
  store i32 %v1_1ee7e, i32* @edx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 8
  %v2_1ee8b = call i32 @function_370c2(i32 %v1_1ee7e, i32 %arg3)
  store i32 %v0_1ee3c, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ee9c

bb:                                               ; preds = %dec_label_pc_1ee24
  %v1_1ee9a = call i32 @function_1eea1()
  store i32 %v1_1ee9a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1ee9c

dec_label_pc_1ee9c:                               ; preds = %bb, %dec_label_pc_1ee24
  %v2_1ee9a = phi i32 [ %v1_1ee9a, %bb ], [ 0, %dec_label_pc_1ee24 ]
  ret i32 %v2_1ee9a

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_1eea1() local_unnamed_addr {
dec_label_pc_1eea1:
  %v0_1eea2 = load i32, i32* @eax, align 8
  ret i32 %v0_1eea2
}

define i32 @_ZNSt3mapI7uint256St4pairIP6CBlock7CScriptESt4lessIS0_ESaIS1_IKS0_S5_EEE6insertESt17_Rb_tree_iteratorIS9_ERKS9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1eea4:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_1eed0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1eed4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1eeda = call i32 @unknown_447fa(i32 %v2_1eed4, i32 %v4_1eed0)
  %v3_1eeec = load i32, i32* %stack_var_-20, align 4
  %v4_1eefa = call i32 @unknown_44834(i32 %arg1, i32 %arg2, i32 %v3_1eeec, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ef11

bb:                                               ; preds = %dec_label_pc_1eea4
  %v1_1ef0f = call i32 @function_1ef16()
  br label %dec_label_pc_1ef11

dec_label_pc_1ef11:                               ; preds = %bb, %dec_label_pc_1eea4
  %v2_1ef0f = phi i32 [ %v1_1ef0f, %bb ], [ %arg1, %dec_label_pc_1eea4 ]
  ret i32 %v2_1ef0f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ef16() local_unnamed_addr {
dec_label_pc_1ef16:
  %v0_1ef17 = load i32, i32* @eax, align 8
  ret i32 %v0_1ef17
}

define i32 @_ZNSt4pairIP6CBlock7CScriptEC1ERKS1_RKS2_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ef1a:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1ef40 = inttoptr i32 %arg2 to i32*
  %v2_1ef40 = load i32, i32* %v1_1ef40, align 4
  store i32 %v2_1ef40, i32* %arg1, align 4
  %v1_1ef4a = add i32 %tmp105, 4
  store i32 %arg3, i32* @eax, align 8
  %v2_1ef57 = call i32 @function_3150a(i32 %v1_1ef4a, i32 %arg3)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ef68

bb:                                               ; preds = %dec_label_pc_1ef1a
  %v1_1ef66 = call i32 @function_1ef6d()
  br label %dec_label_pc_1ef68

dec_label_pc_1ef68:                               ; preds = %bb, %dec_label_pc_1ef1a
  %v2_1ef66 = phi i32 [ %v1_1ef66, %bb ], [ 0, %dec_label_pc_1ef1a ]
  ret i32 %v2_1ef66

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1ef6d() local_unnamed_addr {
dec_label_pc_1ef6d:
  %v0_1ef6e = load i32, i32* @eax, align 8
  ret i32 %v0_1ef6e
}

define i32 @_ZN5boost3getISsSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef6f:
  %stack_var_-17 = alloca i32, align 4
  %v10_1ef86 = icmp eq i32 %arg1, 0
  %v1_1ef8a = icmp eq i1 %v10_1ef86, false
  br i1 %v1_1ef8a, label %dec_label_pc_1ef93, label %dec_label_pc_1efa5

dec_label_pc_1ef93:                               ; preds = %dec_label_pc_1ef6f
  %v2_1ef93 = ptrtoint i32* %stack_var_-17 to i32
  %v2_1efa0 = call i32 @unknown_44d1b(i32 %arg1, i32 %v2_1ef93)
  br label %dec_label_pc_1efa5

dec_label_pc_1efa5:                               ; preds = %dec_label_pc_1ef6f, %dec_label_pc_1ef93
  %storemerge = phi i32 [ %v2_1efa0, %dec_label_pc_1ef93 ], [ 0, %dec_label_pc_1ef6f ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1efb1

bb:                                               ; preds = %dec_label_pc_1efa5
  %v1_1efaf = call i32 @function_1efb6()
  br label %dec_label_pc_1efb1

dec_label_pc_1efb1:                               ; preds = %bb, %dec_label_pc_1efa5
  %v2_1efaf = phi i32 [ %v1_1efaf, %bb ], [ %storemerge, %dec_label_pc_1efa5 ]
  ret i32 %v2_1efaf

; uselistorder directives
  uselistorder label %dec_label_pc_1efa5, { 1, 0 }
}

define i32 @function_1efb6() local_unnamed_addr {
dec_label_pc_1efb6:
  %v0_1efb7 = load i32, i32* @eax, align 8
  ret i32 %v0_1efb7
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1efb8:
  %v1_1efd8 = add i32 %arg2, 4
  %v2_1efe5 = call i32 @unknown_44db8(i32 %arg1, i32 %v1_1efd8)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1eff9

bb:                                               ; preds = %dec_label_pc_1efb8
  %v1_1eff7 = call i32 @function_1effe()
  br label %dec_label_pc_1eff9

dec_label_pc_1eff9:                               ; preds = %bb, %dec_label_pc_1efb8
  %v2_1eff7 = phi i32 [ %v1_1eff7, %bb ], [ %arg1, %dec_label_pc_1efb8 ]
  ret i32 %v2_1eff7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1effe() local_unnamed_addr {
dec_label_pc_1effe:
  %v0_1efff = load i32, i32* @eax, align 8
  ret i32 %v0_1efff
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE4findERS2_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f002:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v1_1f02c = call i32 @unknown_44e6a(i32 %arg2)
  store i32 %v1_1f02c, i32* @ebx, align 4
  %v1_1f039 = call i32 @unknown_44e3a(i32 %arg2)
  %v2_1f03e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg3, i32* @ecx, align 8
  %v0_1f048 = load i32, i32* @ebx, align 4
  %v5_1f05a = call i32 @unknown_44e9a(i32 %v2_1f03e, i32 %arg2, i32 %v1_1f039, i32 %v0_1f048, i32 %arg3)
  %v2_1f062 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1f062, i32* @eax, align 8
  %v2_1f06f = call i32 @function_3dfba(i32 %v2_1f062, i32 %arg2)
  store i32 %v2_1f03e, i32* @eax, align 8
  %v2_1f084 = call i32 @function_3e0f0(i32 %v2_1f03e, i32 %v2_1f062)
  %v4_1f089 = trunc i32 %v2_1f084 to i8
  %v5_1f089 = icmp eq i8 %v4_1f089, 0
  %v1_1f08b = icmp eq i1 %v5_1f089, false
  br i1 %v1_1f08b, label %dec_label_pc_1f0b4, label %dec_label_pc_1f08d

dec_label_pc_1f08d:                               ; preds = %dec_label_pc_1f002
  %v3_1f08d = load i32, i32* %stack_var_-24, align 4
  %v1_1f093 = call i32 @unknown_44f4e(i32 %v3_1f08d)
  store i32 %arg2, i32* @eax, align 8
  %v3_1f0ab = call i32 @function_3bfcc(i32 %arg2, i32 %arg3, i32 %v1_1f093)
  %v4_1f0b0 = trunc i32 %v3_1f0ab to i8
  %v5_1f0b0 = icmp eq i8 %v4_1f0b0, 0
  br i1 %v5_1f0b0, label %dec_label_pc_1f0cb, label %dec_label_pc_1f0b4

dec_label_pc_1f0b4:                               ; preds = %dec_label_pc_1f08d, %dec_label_pc_1f002
  store i32 %tmp115, i32* @eax, align 8
  %v2_1f0c1 = call i32 @function_3dfba(i32 %tmp115, i32 %arg2)
  br label %dec_label_pc_1f0d3

dec_label_pc_1f0cb:                               ; preds = %dec_label_pc_1f08d
  %v3_1f0ce = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1f0ce, i32* %arg1, align 4
  br label %dec_label_pc_1f0d3

dec_label_pc_1f0d3:                               ; preds = %dec_label_pc_1f0cb, %dec_label_pc_1f0b4
  store i32 %tmp115, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f0e2

bb:                                               ; preds = %dec_label_pc_1f0d3
  %v1_1f0e0 = call i32 @function_1f0e7()
  br label %dec_label_pc_1f0e2

dec_label_pc_1f0e2:                               ; preds = %bb, %dec_label_pc_1f0d3
  %v2_1f0e0 = phi i32 [ %v1_1f0e0, %bb ], [ %tmp115, %dec_label_pc_1f0d3 ]
  ret i32 %v2_1f0e0

; uselistorder directives
  uselistorder i32 %tmp115, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_3dfba, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4, 6, 5 }
}

define i32 @function_1f0e7() local_unnamed_addr {
dec_label_pc_1f0e7:
  %v0_1f0eb = load i32, i32* @eax, align 8
  ret i32 %v0_1f0eb
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEeqERKS8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f0ee:
  %v2_1f10e = load i32, i32* %arg1, align 4
  %v1_1f113 = inttoptr i32 %arg2 to i32*
  %v2_1f113 = load i32, i32* %v1_1f113, align 4
  %v12_1f115 = icmp eq i32 %v2_1f10e, %v2_1f113
  %v1_1f117 = zext i1 %v12_1f115 to i32
  %v3_1f117 = and i32 %v2_1f113, -256
  %v4_1f117 = or i32 %v1_1f117, %v3_1f117
  store i32 %v4_1f117, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f126

bb:                                               ; preds = %dec_label_pc_1f0ee
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1f124 = call i32 @function_1f12b(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1f126

dec_label_pc_1f126:                               ; preds = %bb, %dec_label_pc_1f0ee
  %v4_1f124 = phi i32 [ %v3_1f124, %bb ], [ %v4_1f117, %dec_label_pc_1f0ee ]
  ret i32 %v4_1f124

; uselistorder directives
  uselistorder i32 %v2_1f113, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f12b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f12b:
  %v0_1f12c = load i32, i32* @eax, align 8
  ret i32 %v0_1f12c
}

define i32 @_ZN5boost3getISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EESsNS_17recursive_wrapperIS8_EENS9_IS1_INS2_10Value_implIS5_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f12d:
  %stack_var_-17 = alloca i32, align 4
  %v10_1f144 = icmp eq i32 %arg1, 0
  %v1_1f148 = icmp eq i1 %v10_1f144, false
  br i1 %v1_1f148, label %dec_label_pc_1f151, label %dec_label_pc_1f163

dec_label_pc_1f151:                               ; preds = %dec_label_pc_1f12d
  %v2_1f151 = ptrtoint i32* %stack_var_-17 to i32
  %v2_1f15e = call i32 @unknown_450bd(i32 %arg1, i32 %v2_1f151)
  br label %dec_label_pc_1f163

dec_label_pc_1f163:                               ; preds = %dec_label_pc_1f12d, %dec_label_pc_1f151
  %storemerge = phi i32 [ %v2_1f15e, %dec_label_pc_1f151 ], [ 0, %dec_label_pc_1f12d ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f16f

bb:                                               ; preds = %dec_label_pc_1f163
  %v1_1f16d = call i32 @function_1f174()
  br label %dec_label_pc_1f16f

dec_label_pc_1f16f:                               ; preds = %bb, %dec_label_pc_1f163
  %v2_1f16d = phi i32 [ %v1_1f16d, %bb ], [ %storemerge, %dec_label_pc_1f163 ]
  ret i32 %v2_1f16d

; uselistorder directives
  uselistorder label %dec_label_pc_1f163, { 1, 0 }
}

define i32 @function_1f174() local_unnamed_addr {
dec_label_pc_1f174:
  %v0_1f175 = load i32, i32* @eax, align 8
  ret i32 %v0_1f175
}

define i32 @_ZN9__gnu_cxxneIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f176:
  %v1_1f19a = call i32 @unknown_4515a(i32 %arg1)
  %v1_1f19f = inttoptr i32 %v1_1f19a to i32*
  %v2_1f19f = load i32, i32* %v1_1f19f, align 4
  %v1_1f1a7 = call i32 @unknown_4515a(i32 %arg2)
  %v1_1f1ac = inttoptr i32 %v1_1f1a7 to i32*
  %v2_1f1ac = load i32, i32* %v1_1f1ac, align 4
  %v12_1f1ae = icmp eq i32 %v2_1f19f, %v2_1f1ac
  %v1_1f1b0 = icmp eq i1 %v12_1f1ae, false
  %v2_1f1b0 = zext i1 %v1_1f1b0 to i32
  %v4_1f1b0 = and i32 %v2_1f1ac, -256
  %v5_1f1b0 = or i32 %v2_1f1b0, %v4_1f1b0
  store i32 %v5_1f1b0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f1bf

bb:                                               ; preds = %dec_label_pc_1f176
  %v1_1f1bd = call i32 @function_1f1c4()
  br label %dec_label_pc_1f1bf

dec_label_pc_1f1bf:                               ; preds = %bb, %dec_label_pc_1f176
  %v2_1f1bd = phi i32 [ %v1_1f1bd, %bb ], [ %v5_1f1b0, %dec_label_pc_1f176 ]
  ret i32 %v2_1f1bd

; uselistorder directives
  uselistorder i32 %v2_1f1ac, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4515a, { 1, 0 }
}

define i32 @function_1f1c4() local_unnamed_addr {
dec_label_pc_1f1c4:
  %v0_1f1c9 = load i32, i32* @eax, align 8
  ret i32 %v0_1f1c9
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f1ca:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f1e4 = load i32, i32* %arg1, align 4
  %v1_1f1e6 = add i32 %v2_1f1e4, 24
  store i32 %v1_1f1e6, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f1fd

bb:                                               ; preds = %dec_label_pc_1f1ca
  %v2_1f1fb = call i32 @function_1f202(i32 %tmp100)
  br label %dec_label_pc_1f1fd

dec_label_pc_1f1fd:                               ; preds = %bb, %dec_label_pc_1f1ca
  %v3_1f1fb = phi i32 [ %v2_1f1fb, %bb ], [ %tmp100, %dec_label_pc_1f1ca ]
  ret i32 %v3_1f1fb
}

define i32 @function_1f202(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f202:
  %v0_1f203 = load i32, i32* @eax, align 8
  ret i32 %v0_1f203
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f204:
  %v2_1f21e = load i32, i32* %arg1, align 4
  store i32 %v2_1f21e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f22c

bb:                                               ; preds = %dec_label_pc_1f204
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f22a = call i32 @function_1f231(i32 %tmp100)
  br label %dec_label_pc_1f22c

dec_label_pc_1f22c:                               ; preds = %bb, %dec_label_pc_1f204
  %v3_1f22a = phi i32 [ %v2_1f22a, %bb ], [ %v2_1f21e, %dec_label_pc_1f204 ]
  ret i32 %v3_1f22a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f231(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f231:
  %v0_1f232 = load i32, i32* @eax, align 8
  ret i32 %v0_1f232
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f234:
  %v1_1f251 = call i32 @unknown_45298(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f262

bb:                                               ; preds = %dec_label_pc_1f234
  %v1_1f260 = call i32 @function_1f267()
  br label %dec_label_pc_1f262

dec_label_pc_1f262:                               ; preds = %bb, %dec_label_pc_1f234
  %v2_1f260 = phi i32 [ %v1_1f260, %bb ], [ 0, %dec_label_pc_1f234 ]
  ret i32 %v2_1f260
}

define i32 @function_1f267() local_unnamed_addr {
dec_label_pc_1f267:
  %v0_1f268 = load i32, i32* @eax, align 8
  ret i32 %v0_1f268
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f26a:
  %v1_1f287 = call i32 @unknown_4527c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f298

bb:                                               ; preds = %dec_label_pc_1f26a
  %v1_1f296 = call i32 @function_1f29d()
  br label %dec_label_pc_1f298

dec_label_pc_1f298:                               ; preds = %bb, %dec_label_pc_1f26a
  %v2_1f296 = phi i32 [ %v1_1f296, %bb ], [ 0, %dec_label_pc_1f26a ]
  ret i32 %v2_1f296
}

define i32 @function_1f29d() local_unnamed_addr {
dec_label_pc_1f29d:
  %v0_1f29e = load i32, i32* @eax, align 8
  ret i32 %v0_1f29e
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f2a0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1f2bb = add i32 %tmp101, 8
  %v2_1f2bb = inttoptr i32 %v1_1f2bb to i32*
  %v3_1f2bb = load i32, i32* %v2_1f2bb, align 4
  %v2_1f2c3 = load i32, i32* %arg1, align 4
  %v2_1f2c7 = sub i32 %v3_1f2bb, %v2_1f2c3
  %v2_1f2cb = sdiv i32 %v2_1f2c7, 4
  %v3_1f2ce = mul i32 %v2_1f2cb, -858993459
  %v3_1f2e9 = call i32 @unknown_4533a(i32 %tmp101, i32 %v2_1f2c3, i32 %v3_1f2ce)
  store i32 %tmp101, i32* @eax, align 8
  %v1_1f2f4 = call i32 @function_3e4d4(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f305

bb:                                               ; preds = %dec_label_pc_1f2a0
  %v1_1f303 = call i32 @function_1f323()
  store i32 %v1_1f303, i32* @eax, align 8
  br label %dec_label_pc_1f305

dec_label_pc_1f305:                               ; preds = %bb, %dec_label_pc_1f2a0
  %v0_1f305 = call i32 @function_1f31e()
  ret i32 %v0_1f305

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_1f308() local_unnamed_addr {
dec_label_pc_1f308:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f308 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f308
}

define i32 @function_1f31e() local_unnamed_addr {
dec_label_pc_1f31e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f323() local_unnamed_addr {
dec_label_pc_1f323:
  %v0_1f328 = load i32, i32* @eax, align 8
  ret i32 %v0_1f328
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f32a:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f350

bb:                                               ; preds = %dec_label_pc_1f32a
  %v2_1f34e = call i32 @function_1f355(i32 %arg1)
  br label %dec_label_pc_1f350

dec_label_pc_1f350:                               ; preds = %bb, %dec_label_pc_1f32a
  %v3_1f34e = phi i32 [ %v2_1f34e, %bb ], [ %arg1, %dec_label_pc_1f32a ]
  ret i32 %v3_1f34e
}

define i32 @function_1f355(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f355:
  %v0_1f356 = load i32, i32* @eax, align 8
  ret i32 %v0_1f356
}

define i32 @_ZSt8_DestroyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES4_EvT_S6_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f357:
  %v2_1f387 = call i32 @unknown_45446(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f398

bb:                                               ; preds = %dec_label_pc_1f357
  %v1_1f396 = call i32 @function_1f39d()
  br label %dec_label_pc_1f398

dec_label_pc_1f398:                               ; preds = %bb, %dec_label_pc_1f357
  %v2_1f396 = phi i32 [ %v1_1f396, %bb ], [ 0, %dec_label_pc_1f357 ]
  ret i32 %v2_1f396
}

define i32 @function_1f39d() local_unnamed_addr {
dec_label_pc_1f39d:
  %v0_1f39e = load i32, i32* @eax, align 8
  ret i32 %v0_1f39e
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f3a0:
  %v1_1f3bd = call i32 @unknown_454d2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f3ce

bb:                                               ; preds = %dec_label_pc_1f3a0
  %v1_1f3cc = call i32 @function_1f3d3()
  br label %dec_label_pc_1f3ce

dec_label_pc_1f3ce:                               ; preds = %bb, %dec_label_pc_1f3a0
  %v2_1f3cc = phi i32 [ %v1_1f3cc, %bb ], [ 0, %dec_label_pc_1f3a0 ]
  ret i32 %v2_1f3cc
}

define i32 @function_1f3d3() local_unnamed_addr {
dec_label_pc_1f3d3:
  %v0_1f3d4 = load i32, i32* @eax, align 8
  ret i32 %v0_1f3d4
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIK7uint256xEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f3d6:
  %v1_1f3f3 = call i32 @unknown_4557a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f404

bb:                                               ; preds = %dec_label_pc_1f3d6
  %v1_1f402 = call i32 @function_1f409()
  br label %dec_label_pc_1f404

dec_label_pc_1f404:                               ; preds = %bb, %dec_label_pc_1f3d6
  %v2_1f402 = phi i32 [ %v1_1f402, %bb ], [ 0, %dec_label_pc_1f3d6 ]
  ret i32 %v2_1f402
}

define i32 @function_1f409() local_unnamed_addr {
dec_label_pc_1f409:
  %v0_1f40a = load i32, i32* @eax, align 8
  ret i32 %v0_1f40a
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f40c:
  %v10_1f46b106 = icmp eq i32 %arg2, 0
  %v1_1f46f107 = icmp eq i1 %v10_1f46b106, false
  %v5_1f472109 = icmp eq i1 %v1_1f46f107, false
  %v1_1f474110 = icmp eq i1 %v5_1f472109, false
  br i1 %v1_1f474110, label %dec_label_pc_1f42b, label %dec_label_pc_1f476

dec_label_pc_1f42b:                               ; preds = %dec_label_pc_1f40c, %dec_label_pc_1f42b
  %stack_var_-36.0111 = phi i32 [ %v1_1f44b, %dec_label_pc_1f42b ], [ %arg2, %dec_label_pc_1f40c ]
  %v1_1f431 = call i32 @unknown_455da(i32 %stack_var_-36.0111)
  store i32 %arg1, i32* @eax, align 8
  %v2_1f440 = call i32 @function_3e818(i32 %arg1, i32 %v1_1f431)
  %v1_1f44b = call i32 @unknown_4560a(i32 %stack_var_-36.0111)
  %v2_1f460 = call i32 @unknown_4563a(i32 %arg1, i32 %stack_var_-36.0111)
  %v10_1f46b = icmp eq i32 %v1_1f44b, 0
  %v1_1f46f = icmp eq i1 %v10_1f46b, false
  %v5_1f472 = icmp eq i1 %v1_1f46f, false
  %v1_1f474 = icmp eq i1 %v5_1f472, false
  br i1 %v1_1f474, label %dec_label_pc_1f42b, label %dec_label_pc_1f476

dec_label_pc_1f476:                               ; preds = %dec_label_pc_1f42b, %dec_label_pc_1f40c
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f482

bb:                                               ; preds = %dec_label_pc_1f476
  %v1_1f480 = call i32 @function_1f487()
  br label %dec_label_pc_1f482

dec_label_pc_1f482:                               ; preds = %bb, %dec_label_pc_1f476
  %v2_1f480 = phi i32 [ %v1_1f480, %bb ], [ 0, %dec_label_pc_1f476 ]
  ret i32 %v2_1f480

; uselistorder directives
  uselistorder i32 %v1_1f44b, { 1, 0 }
  uselistorder i32 %stack_var_-36.0111, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1f42b, { 1, 0 }
}

define i32 @function_1f487() local_unnamed_addr {
dec_label_pc_1f487:
  %v0_1f488 = load i32, i32* @eax, align 8
  ret i32 %v0_1f488
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f48a:
  %v1_1f4a4 = add i32 %arg1, 8
  %v2_1f4a4 = inttoptr i32 %v1_1f4a4 to i32*
  %v3_1f4a4 = load i32, i32* %v2_1f4a4, align 4
  store i32 %v3_1f4a4, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f4b3

bb:                                               ; preds = %dec_label_pc_1f48a
  %v2_1f4b1 = call i32 @function_1f4b8(i32 %arg1)
  br label %dec_label_pc_1f4b3

dec_label_pc_1f4b3:                               ; preds = %bb, %dec_label_pc_1f48a
  %v3_1f4b1 = phi i32 [ %v2_1f4b1, %bb ], [ %v3_1f4a4, %dec_label_pc_1f48a ]
  ret i32 %v3_1f4b1
}

define i32 @function_1f4b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4b8:
  %v0_1f4b9 = load i32, i32* @eax, align 8
  ret i32 %v0_1f4b9
}

define i32 @_ZN5boost9addressofISt6vectorI12CTransactionSaIS2_EEEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4ba:
  %stack_var_-20 = alloca i32, align 4
  %v2_1f4d8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1f4de = call i32 @unknown_4576e(i32 %v2_1f4d8, i32 %arg1)
  %v1_1f4e9 = call i32 @unknown_457a6(i32 %v2_1f4d8)
  %v2_1f4f9 = call i32 @unknown_457d5(i32 %v1_1f4e9, i32 0)
  store i32 %v2_1f4f9, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f50a

bb:                                               ; preds = %dec_label_pc_1f4ba
  %v1_1f508 = call i32 @function_1f50f()
  br label %dec_label_pc_1f50a

dec_label_pc_1f50a:                               ; preds = %bb, %dec_label_pc_1f4ba
  %v2_1f508 = phi i32 [ %v1_1f508, %bb ], [ %v2_1f4f9, %dec_label_pc_1f4ba ]
  ret i32 %v2_1f508
}

define i32 @function_1f50f() local_unnamed_addr {
dec_label_pc_1f50f:
  %v0_1f510 = load i32, i32* @eax, align 8
  ret i32 %v0_1f510
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt6vectorI12CTransactionSaIS3_EEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f512:
  %v1_1f53d = inttoptr i32 %arg2 to i32*
  %v2_1f53d = load i32, i32* %v1_1f53d, align 4
  store i32 %v2_1f53d, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f550

bb:                                               ; preds = %dec_label_pc_1f512
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1f54e = call i32 @function_1f555(i32 %tmp102)
  br label %dec_label_pc_1f550

dec_label_pc_1f550:                               ; preds = %bb, %dec_label_pc_1f512
  %v3_1f54e = phi i32 [ %v2_1f54e, %bb ], [ 0, %dec_label_pc_1f512 ]
  ret i32 %v3_1f54e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f555(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f555:
  %v0_1f556 = load i32, i32* @eax, align 8
  ret i32 %v0_1f556
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt6vectorI12CTransactionSaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SD_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f557:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f57d

bb:                                               ; preds = %dec_label_pc_1f557
  %v2_1f57b = call i32 @function_1f582(i32 %arg1)
  br label %dec_label_pc_1f57d

dec_label_pc_1f57d:                               ; preds = %bb, %dec_label_pc_1f557
  %v3_1f57b = phi i32 [ %v2_1f57b, %bb ], [ %arg1, %dec_label_pc_1f557 ]
  ret i32 %v3_1f57b
}

define i32 @function_1f582(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f582:
  %v0_1f583 = load i32, i32* @eax, align 8
  ret i32 %v0_1f583
}

define i32 @_ZN5boost15foreach_detail_7derefofISt6vectorI12CTransactionSaIS3_EEEERT_PS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f584:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f5aa

bb:                                               ; preds = %dec_label_pc_1f584
  %v2_1f5a8 = call i32 @function_1f5af(i32 %arg1)
  br label %dec_label_pc_1f5aa

dec_label_pc_1f5aa:                               ; preds = %bb, %dec_label_pc_1f584
  %v3_1f5a8 = phi i32 [ %v2_1f5a8, %bb ], [ %arg1, %dec_label_pc_1f584 ]
  ret i32 %v3_1f5a8
}

define i32 @function_1f5af(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5af:
  %v0_1f5b0 = load i32, i32* @eax, align 8
  ret i32 %v0_1f5b0
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f5b1:
  %v2_1f5db = call i32 @unknown_458ff(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f5f2

bb:                                               ; preds = %dec_label_pc_1f5b1
  %v1_1f5f0 = call i32 @function_1f5f7()
  br label %dec_label_pc_1f5f2

dec_label_pc_1f5f2:                               ; preds = %bb, %dec_label_pc_1f5b1
  %v2_1f5f0 = phi i32 [ %v1_1f5f0, %bb ], [ %arg1, %dec_label_pc_1f5b1 ]
  ret i32 %v2_1f5f0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f5f7() local_unnamed_addr {
dec_label_pc_1f5f7:
  %v0_1f5f8 = load i32, i32* @eax, align 8
  ret i32 %v0_1f5f8
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS4_SaIS4_EEEEEC1ERKS9_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f5fc:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1f61f = call i32 @__stack_chk_fail.1513(i32 %tmp102)
  %v1_1f62a = inttoptr i32 %arg2 to i32*
  %v2_1f62a = load i32, i32* %v1_1f62a, align 4
  store i32 %v2_1f62a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f63a

bb:                                               ; preds = %dec_label_pc_1f5fc
  %v1_1f638 = call i32 @function_1f63f()
  br label %dec_label_pc_1f63a

dec_label_pc_1f63a:                               ; preds = %bb, %dec_label_pc_1f5fc
  %v2_1f638 = phi i32 [ %v1_1f638, %bb ], [ 0, %dec_label_pc_1f5fc ]
  ret i32 %v2_1f638
}

define i32 @function_1f63f() local_unnamed_addr {
dec_label_pc_1f63f:
  %v0_1f640 = load i32, i32* @eax, align 8
  ret i32 %v0_1f640
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f641:
  %v2_1f66b = call i32 @unknown_459d9(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f682

bb:                                               ; preds = %dec_label_pc_1f641
  %v1_1f680 = call i32 @function_1f687()
  br label %dec_label_pc_1f682

dec_label_pc_1f682:                               ; preds = %bb, %dec_label_pc_1f641
  %v2_1f680 = phi i32 [ %v1_1f680, %bb ], [ %arg1, %dec_label_pc_1f641 ]
  ret i32 %v2_1f680

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f687() local_unnamed_addr {
dec_label_pc_1f687:
  %v0_1f688 = load i32, i32* @eax, align 8
  ret i32 %v0_1f688
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SG_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f68b:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f6b1

bb:                                               ; preds = %dec_label_pc_1f68b
  %v2_1f6af = call i32 @function_1f6b6(i32 %arg1)
  br label %dec_label_pc_1f6b1

dec_label_pc_1f6b1:                               ; preds = %bb, %dec_label_pc_1f68b
  %v3_1f6af = phi i32 [ %v2_1f6af, %bb ], [ %arg1, %dec_label_pc_1f68b ]
  ret i32 %v3_1f6af
}

define i32 @function_1f6b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6b6:
  %v0_1f6b7 = load i32, i32* @eax, align 8
  ret i32 %v0_1f6b7
}

define i32 @_ZN9__gnu_cxxeqIP12CTransactionSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f6b8:
  %v1_1f6dc = call i32 @unknown_45a9a(i32 %arg1)
  %v1_1f6e1 = inttoptr i32 %v1_1f6dc to i32*
  %v2_1f6e1 = load i32, i32* %v1_1f6e1, align 4
  %v1_1f6e9 = call i32 @unknown_45a9a(i32 %arg2)
  %v1_1f6ee = inttoptr i32 %v1_1f6e9 to i32*
  %v2_1f6ee = load i32, i32* %v1_1f6ee, align 4
  %v12_1f6f0 = icmp eq i32 %v2_1f6e1, %v2_1f6ee
  %v1_1f6f2 = zext i1 %v12_1f6f0 to i32
  %v3_1f6f2 = and i32 %v2_1f6ee, -256
  %v4_1f6f2 = or i32 %v1_1f6f2, %v3_1f6f2
  store i32 %v4_1f6f2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f701

bb:                                               ; preds = %dec_label_pc_1f6b8
  %v1_1f6ff = call i32 @function_1f706()
  br label %dec_label_pc_1f701

dec_label_pc_1f701:                               ; preds = %bb, %dec_label_pc_1f6b8
  %v2_1f6ff = phi i32 [ %v1_1f6ff, %bb ], [ %v4_1f6f2, %dec_label_pc_1f6b8 ]
  ret i32 %v2_1f6ff

; uselistorder directives
  uselistorder i32 %v2_1f6ee, { 1, 0 }
  uselistorder i32 (i32)* @unknown_45a9a, { 1, 0 }
}

define i32 @function_1f706() local_unnamed_addr {
dec_label_pc_1f706:
  %v0_1f70b = load i32, i32* @eax, align 8
  ret i32 %v0_1f70b
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f70c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f726 = load i32, i32* %arg1, align 4
  %v1_1f728 = add i32 %v2_1f726, 32
  store i32 %v1_1f728, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f73f

bb:                                               ; preds = %dec_label_pc_1f70c
  %v2_1f73d = call i32 @function_1f744(i32 %tmp100)
  br label %dec_label_pc_1f73f

dec_label_pc_1f73f:                               ; preds = %bb, %dec_label_pc_1f70c
  %v3_1f73d = phi i32 [ %v2_1f73d, %bb ], [ %tmp100, %dec_label_pc_1f70c ]
  ret i32 %v3_1f73d
}

define i32 @function_1f744(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f744:
  %v0_1f745 = load i32, i32* @eax, align 8
  ret i32 %v0_1f745
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f746:
  %v2_1f760 = load i32, i32* %arg1, align 4
  store i32 %v2_1f760, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f76e

bb:                                               ; preds = %dec_label_pc_1f746
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f76c = call i32 @function_1f773(i32 %tmp100)
  br label %dec_label_pc_1f76e

dec_label_pc_1f76e:                               ; preds = %bb, %dec_label_pc_1f746
  %v3_1f76c = phi i32 [ %v2_1f76c, %bb ], [ %v2_1f760, %dec_label_pc_1f746 ]
  ret i32 %v3_1f76c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f773(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f773:
  %v0_1f774 = load i32, i32* @eax, align 8
  ret i32 %v0_1f774
}

define i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEE11lower_boundERS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f776:
  %v3_1f7ad = call i32 @unknown_45b86(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f7c4

bb:                                               ; preds = %dec_label_pc_1f776
  %v1_1f7c2 = call i32 @function_1f7c9()
  br label %dec_label_pc_1f7c4

dec_label_pc_1f7c4:                               ; preds = %bb, %dec_label_pc_1f776
  %v2_1f7c2 = phi i32 [ %v1_1f7c2, %bb ], [ %arg1, %dec_label_pc_1f776 ]
  ret i32 %v2_1f7c2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f7c9() local_unnamed_addr {
dec_label_pc_1f7c9:
  %v0_1f7ca = load i32, i32* @eax, align 8
  ret i32 %v0_1f7ca
}

define i32 @_ZNKSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f7ce:
  %v2_1f7f8 = call i32 @unknown_45c5a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f80f

bb:                                               ; preds = %dec_label_pc_1f7ce
  %v1_1f80d = call i32 @function_1f814()
  br label %dec_label_pc_1f80f

dec_label_pc_1f80f:                               ; preds = %bb, %dec_label_pc_1f7ce
  %v2_1f80d = phi i32 [ %v1_1f80d, %bb ], [ %arg1, %dec_label_pc_1f7ce ]
  ret i32 %v2_1f80d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f814() local_unnamed_addr {
dec_label_pc_1f814:
  %v0_1f815 = load i32, i32* @eax, align 8
  ret i32 %v0_1f815
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256xEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f818:
  %v2_1f832 = load i32, i32* %arg1, align 4
  %v1_1f834 = add i32 %v2_1f832, 16
  store i32 %v1_1f834, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f843

bb:                                               ; preds = %dec_label_pc_1f818
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f841 = call i32 @function_1f848(i32 %tmp100)
  br label %dec_label_pc_1f843

dec_label_pc_1f843:                               ; preds = %bb, %dec_label_pc_1f818
  %v3_1f841 = phi i32 [ %v2_1f841, %bb ], [ %v1_1f834, %dec_label_pc_1f818 ]
  ret i32 %v3_1f841

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f848(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f848:
  %v0_1f849 = load i32, i32* @eax, align 8
  ret i32 %v0_1f849
}

define i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f84a:
  %v2_1f874 = call i32 @unknown_45d0c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f88b

bb:                                               ; preds = %dec_label_pc_1f84a
  %v1_1f889 = call i32 @function_1f890()
  br label %dec_label_pc_1f88b

dec_label_pc_1f88b:                               ; preds = %bb, %dec_label_pc_1f84a
  %v2_1f889 = phi i32 [ %v1_1f889, %bb ], [ %arg1, %dec_label_pc_1f84a ]
  ret i32 %v2_1f889

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f890() local_unnamed_addr {
dec_label_pc_1f890:
  %v0_1f891 = load i32, i32* @eax, align 8
  ret i32 %v0_1f891
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK7uint256xEEeqERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f894:
  %v2_1f8b4 = load i32, i32* %arg1, align 4
  %v1_1f8b9 = inttoptr i32 %arg2 to i32*
  %v2_1f8b9 = load i32, i32* %v1_1f8b9, align 4
  %v12_1f8bb = icmp eq i32 %v2_1f8b4, %v2_1f8b9
  %v1_1f8bd = zext i1 %v12_1f8bb to i32
  %v3_1f8bd = and i32 %v2_1f8b9, -256
  %v4_1f8bd = or i32 %v1_1f8bd, %v3_1f8bd
  store i32 %v4_1f8bd, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f8cc

bb:                                               ; preds = %dec_label_pc_1f894
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1f8ca = call i32 @function_1f8d1(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1f8cc

dec_label_pc_1f8cc:                               ; preds = %bb, %dec_label_pc_1f894
  %v4_1f8ca = phi i32 [ %v3_1f8ca, %bb ], [ %v4_1f8bd, %dec_label_pc_1f894 ]
  ret i32 %v4_1f8ca

; uselistorder directives
  uselistorder i32 %v2_1f8b9, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f8d1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f8d1:
  %v0_1f8d2 = load i32, i32* @eax, align 8
  ret i32 %v0_1f8d2
}

define i32 @_ZNSt4pairIK7uint256xEC1ERS1_RKx(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f8d4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 8
  %v0_1f8ec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_1f8fd = inttoptr i32 %arg2 to i32*
  %v2_1f8fd = load i32, i32* %v1_1f8fd, align 4
  store i32 %v2_1f8fd, i32* %ecx.global-to-local, align 8
  store i32 %v2_1f8fd, i32* %arg1, align 4
  %v1_1f901 = add i32 %arg2, 4
  %v2_1f901 = inttoptr i32 %v1_1f901 to i32*
  %v3_1f901 = load i32, i32* %v2_1f901, align 4
  store i32 %v3_1f901, i32* %ecx.global-to-local, align 8
  %v1_1f904 = load i32, i32* %eax.global-to-local, align 8
  %v2_1f904 = add i32 %v1_1f904, 4
  %v3_1f904 = inttoptr i32 %v2_1f904 to i32*
  store i32 %v3_1f901, i32* %v3_1f904, align 4
  %v0_1f907 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f907 = add i32 %v0_1f907, 8
  %v2_1f907 = inttoptr i32 %v1_1f907 to i32*
  %v3_1f907 = load i32, i32* %v2_1f907, align 4
  store i32 %v3_1f907, i32* %ecx.global-to-local, align 8
  %v1_1f90a = load i32, i32* %eax.global-to-local, align 8
  %v2_1f90a = add i32 %v1_1f90a, 8
  %v3_1f90a = inttoptr i32 %v2_1f90a to i32*
  store i32 %v3_1f907, i32* %v3_1f90a, align 4
  %v0_1f90d = load i32, i32* %edx.global-to-local, align 4
  %v1_1f90d = add i32 %v0_1f90d, 12
  %v2_1f90d = inttoptr i32 %v1_1f90d to i32*
  %v3_1f90d = load i32, i32* %v2_1f90d, align 4
  store i32 %v3_1f90d, i32* %ecx.global-to-local, align 8
  %v1_1f910 = load i32, i32* %eax.global-to-local, align 8
  %v2_1f910 = add i32 %v1_1f910, 12
  %v3_1f910 = inttoptr i32 %v2_1f910 to i32*
  store i32 %v3_1f90d, i32* %v3_1f910, align 4
  %v0_1f913 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f913 = add i32 %v0_1f913, 16
  %v2_1f913 = inttoptr i32 %v1_1f913 to i32*
  %v3_1f913 = load i32, i32* %v2_1f913, align 4
  store i32 %v3_1f913, i32* %ecx.global-to-local, align 8
  %v1_1f916 = load i32, i32* %eax.global-to-local, align 8
  %v2_1f916 = add i32 %v1_1f916, 16
  %v3_1f916 = inttoptr i32 %v2_1f916 to i32*
  store i32 %v3_1f913, i32* %v3_1f916, align 4
  %v0_1f919 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f919 = add i32 %v0_1f919, 20
  %v2_1f919 = inttoptr i32 %v1_1f919 to i32*
  %v3_1f919 = load i32, i32* %v2_1f919, align 4
  store i32 %v3_1f919, i32* %ecx.global-to-local, align 8
  %v1_1f91c = load i32, i32* %eax.global-to-local, align 8
  %v2_1f91c = add i32 %v1_1f91c, 20
  %v3_1f91c = inttoptr i32 %v2_1f91c to i32*
  store i32 %v3_1f919, i32* %v3_1f91c, align 4
  %v0_1f91f = load i32, i32* %edx.global-to-local, align 4
  %v1_1f91f = add i32 %v0_1f91f, 24
  %v2_1f91f = inttoptr i32 %v1_1f91f to i32*
  %v3_1f91f = load i32, i32* %v2_1f91f, align 4
  store i32 %v3_1f91f, i32* %ecx.global-to-local, align 8
  %v1_1f922 = load i32, i32* %eax.global-to-local, align 8
  %v2_1f922 = add i32 %v1_1f922, 24
  %v3_1f922 = inttoptr i32 %v2_1f922 to i32*
  store i32 %v3_1f91f, i32* %v3_1f922, align 4
  %v0_1f925 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f925 = add i32 %v0_1f925, 28
  %v2_1f925 = inttoptr i32 %v1_1f925 to i32*
  %v3_1f925 = load i32, i32* %v2_1f925, align 4
  store i32 %v3_1f925, i32* %edx.global-to-local, align 4
  %v1_1f928 = load i32, i32* %eax.global-to-local, align 8
  %v2_1f928 = add i32 %v1_1f928, 28
  %v3_1f928 = inttoptr i32 %v2_1f928 to i32*
  store i32 %v3_1f925, i32* %v3_1f928, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 8
  %v1_1f92e = add i32 %arg3, 4
  %v2_1f92e = inttoptr i32 %v1_1f92e to i32*
  %v3_1f92e = load i32, i32* %v2_1f92e, align 4
  store i32 %v3_1f92e, i32* %edx.global-to-local, align 4
  %v1_1f931 = inttoptr i32 %arg3 to i32*
  %v2_1f931 = load i32, i32* %v1_1f931, align 4
  store i32 %tmp104, i32* %ecx.global-to-local, align 8
  %v2_1f936 = add i32 %tmp104, 32
  %v3_1f936 = inttoptr i32 %v2_1f936 to i32*
  store i32 %v2_1f931, i32* %v3_1f936, align 4
  %v0_1f939 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f939 = load i32, i32* %ecx.global-to-local, align 8
  %v2_1f939 = add i32 %v1_1f939, 36
  %v3_1f939 = inttoptr i32 %v2_1f939 to i32*
  store i32 %v0_1f939, i32* %v3_1f939, align 4
  store i32 %v0_1f8ec, i32* %eax.global-to-local, align 8
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f948

bb:                                               ; preds = %dec_label_pc_1f8d4
  %v4_1f946 = call i32 @function_1f94d(i32 %arg3, i32 %arg2, i32 %tmp104)
  store i32 %v4_1f946, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f948

dec_label_pc_1f948:                               ; preds = %bb, %dec_label_pc_1f8d4
  %v5_1f946 = phi i32 [ %v4_1f946, %bb ], [ 0, %dec_label_pc_1f8d4 ]
  ret i32 %v5_1f946

; uselistorder directives
  uselistorder i32 %tmp104, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 0, 3, 2, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
}

define i32 @function_1f94d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f94d:
  %v0_1f94e = load i32, i32* @eax, align 8
  ret i32 %v0_1f94e
}

define i32 @_ZNSt3mapI7uint256xSt4lessIS0_ESaISt4pairIKS0_xEEE6insertESt17_Rb_tree_iteratorIS5_ERKS5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f950:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_1f97c = ptrtoint i32* %stack_var_-40 to i32
  %v2_1f980 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1f986 = call i32 @unknown_45e5c(i32 %v2_1f980, i32 %v4_1f97c)
  %v3_1f998 = load i32, i32* %stack_var_-20, align 4
  %v4_1f9a6 = call i32 @unknown_45e96(i32 %arg1, i32 %arg2, i32 %v3_1f998, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1f9bd

bb:                                               ; preds = %dec_label_pc_1f950
  %v1_1f9bb = call i32 @function_1f9c2()
  br label %dec_label_pc_1f9bd

dec_label_pc_1f9bd:                               ; preds = %bb, %dec_label_pc_1f950
  %v2_1f9bb = phi i32 [ %v1_1f9bb, %bb ], [ %arg1, %dec_label_pc_1f950 ]
  ret i32 %v2_1f9bb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f9c2() local_unnamed_addr {
dec_label_pc_1f9c2:
  %v0_1f9c3 = load i32, i32* @eax, align 8
  ret i32 %v0_1f9c3
}

define i32 @_Z9SerializeI11CDataStream12CTransactionEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f9c6:
  %v8_1fa0a = call i32 @unknown_46328(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fa1b

bb:                                               ; preds = %dec_label_pc_1f9c6
  %v1_1fa19 = call i32 @function_1fa20()
  br label %dec_label_pc_1fa1b

dec_label_pc_1fa1b:                               ; preds = %bb, %dec_label_pc_1f9c6
  %v2_1fa19 = phi i32 [ %v1_1fa19, %bb ], [ 0, %dec_label_pc_1f9c6 ]
  ret i32 %v2_1fa19

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1fa20() local_unnamed_addr {
dec_label_pc_1fa20:
  %v0_1fa21 = load i32, i32* @eax, align 8
  ret i32 %v0_1fa21
}

define i32 @_ZN9__gnu_cxxltIPcSt6vectorIc25zero_after_free_allocatorIcEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fa22:
  store i32 %arg1, i32* @eax, align 8
  %v1_1fa46 = call i32 @function_3aa7e(i32 %arg1)
  %v1_1fa4b = inttoptr i32 %v1_1fa46 to i32*
  %v2_1fa4b = load i32, i32* %v1_1fa4b, align 4
  store i32 %v2_1fa4b, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1fa53 = call i32 @function_3aa7e(i32 %arg2)
  %v1_1fa58 = inttoptr i32 %v1_1fa53 to i32*
  %v2_1fa58 = load i32, i32* %v1_1fa58, align 4
  %v0_1fa5a = load i32, i32* @ebx, align 4
  %v7_1fa5a = icmp ult i32 %v0_1fa5a, %v2_1fa58
  %v1_1fa5c = zext i1 %v7_1fa5a to i32
  %v3_1fa5c = and i32 %v2_1fa58, -256
  %v4_1fa5c = or i32 %v1_1fa5c, %v3_1fa5c
  store i32 %v4_1fa5c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fa6b

bb:                                               ; preds = %dec_label_pc_1fa22
  %v1_1fa69 = call i32 @function_1fa70()
  br label %dec_label_pc_1fa6b

dec_label_pc_1fa6b:                               ; preds = %bb, %dec_label_pc_1fa22
  %v2_1fa69 = phi i32 [ %v1_1fa69, %bb ], [ %v4_1fa5c, %dec_label_pc_1fa22 ]
  ret i32 %v2_1fa69

; uselistorder directives
  uselistorder i32 (i32)* @function_3aa7e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1fa70() local_unnamed_addr {
dec_label_pc_1fa70:
  %v0_1fa75 = load i32, i32* @eax, align 8
  ret i32 %v0_1fa75
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fa76:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1fa90 = load i32, i32* %arg1, align 4
  %v1_1fa92 = add i32 %v2_1fa90, 1
  store i32 %v1_1fa92, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1faa9

bb:                                               ; preds = %dec_label_pc_1fa76
  %v2_1faa7 = call i32 @function_1faae(i32 %tmp100)
  br label %dec_label_pc_1faa9

dec_label_pc_1faa9:                               ; preds = %bb, %dec_label_pc_1fa76
  %v3_1faa7 = phi i32 [ %v2_1faa7, %bb ], [ %tmp100, %dec_label_pc_1fa76 ]
  ret i32 %v3_1faa7
}

define i32 @function_1faae(i32 %arg1) local_unnamed_addr {
dec_label_pc_1faae:
  %v0_1faaf = load i32, i32* @eax, align 8
  ret i32 %v0_1faaf
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fab0:
  %v2_1faca = load i32, i32* %arg1, align 4
  store i32 %v2_1faca, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fad8

bb:                                               ; preds = %dec_label_pc_1fab0
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1fad6 = call i32 @function_1fadd(i32 %tmp100)
  br label %dec_label_pc_1fad8

dec_label_pc_1fad8:                               ; preds = %bb, %dec_label_pc_1fab0
  %v3_1fad6 = phi i32 [ %v2_1fad6, %bb ], [ %v2_1faca, %dec_label_pc_1fab0 ]
  ret i32 %v3_1fad6

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1fadd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fadd:
  %v0_1fade = load i32, i32* @eax, align 8
  ret i32 %v0_1fade
}

define i32 @_ZNSsC1IPcEET_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fae0:
  %v7_1fb1d = call i32 @unknown_4654b(i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1fb4a() local_unnamed_addr {
dec_label_pc_1fb4a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1fb4a = load i32, i32* %ecx.global-to-local, align 8
  %v1_1fb4a = add i32 %v0_1fb4a, -1
  store i32 %v1_1fb4a, i32* %ecx.global-to-local, align 8
  %v0_1fb4c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fb4c
}

define i32 @_ZN5boost9addressofISt6vectorI5CTxInSaIS2_EEEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb4d:
  %stack_var_-20 = alloca i32, align 4
  %v2_1fb6b = ptrtoint i32* %stack_var_-20 to i32
  %v2_1fb71 = call i32 @unknown_4660b(i32 %v2_1fb6b, i32 %arg1)
  %v1_1fb7c = call i32 @unknown_46643(i32 %v2_1fb6b)
  %v2_1fb8c = call i32 @unknown_46672(i32 %v1_1fb7c, i32 0)
  store i32 %v2_1fb8c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fb9d

bb:                                               ; preds = %dec_label_pc_1fb4d
  %v1_1fb9b = call i32 @function_1fba2()
  br label %dec_label_pc_1fb9d

dec_label_pc_1fb9d:                               ; preds = %bb, %dec_label_pc_1fb4d
  %v2_1fb9b = phi i32 [ %v1_1fb9b, %bb ], [ %v2_1fb8c, %dec_label_pc_1fb4d ]
  ret i32 %v2_1fb9b
}

define i32 @function_1fba2() local_unnamed_addr {
dec_label_pc_1fba2:
  %v0_1fba3 = load i32, i32* @eax, align 8
  ret i32 %v0_1fba3
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt6vectorI5CTxInSaIS3_EEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fba4:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_1fbc7 = call i32 @function_3b880(i32 %tmp102)
  %v1_1fbcf = inttoptr i32 %arg2 to i32*
  %v2_1fbcf = load i32, i32* %v1_1fbcf, align 4
  store i32 %v2_1fbcf, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fbe2

bb:                                               ; preds = %dec_label_pc_1fba4
  %v1_1fbe0 = call i32 @function_1fbe7()
  br label %dec_label_pc_1fbe2

dec_label_pc_1fbe2:                               ; preds = %bb, %dec_label_pc_1fba4
  %v2_1fbe0 = phi i32 [ %v1_1fbe0, %bb ], [ 0, %dec_label_pc_1fba4 ]
  ret i32 %v2_1fbe0

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_1fbe7() local_unnamed_addr {
dec_label_pc_1fbe7:
  %v0_1fbe8 = load i32, i32* @eax, align 8
  ret i32 %v0_1fbe8
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt6vectorI5CTxInSaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SD_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fbe9:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fc0f

bb:                                               ; preds = %dec_label_pc_1fbe9
  %v2_1fc0d = call i32 @function_1fc14(i32 %arg1)
  br label %dec_label_pc_1fc0f

dec_label_pc_1fc0f:                               ; preds = %bb, %dec_label_pc_1fbe9
  %v3_1fc0d = phi i32 [ %v2_1fc0d, %bb ], [ %arg1, %dec_label_pc_1fbe9 ]
  ret i32 %v3_1fc0d
}

define i32 @function_1fc14(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fc14:
  %v0_1fc15 = load i32, i32* @eax, align 8
  ret i32 %v0_1fc15
}

define i32 @_ZN5boost15foreach_detail_7derefofISt6vectorI5CTxInSaIS3_EEEERT_PS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fc16:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fc3c

bb:                                               ; preds = %dec_label_pc_1fc16
  %v2_1fc3a = call i32 @function_1fc41(i32 %arg1)
  br label %dec_label_pc_1fc3c

dec_label_pc_1fc3c:                               ; preds = %bb, %dec_label_pc_1fc16
  %v3_1fc3a = phi i32 [ %v2_1fc3a, %bb ], [ %arg1, %dec_label_pc_1fc16 ]
  ret i32 %v3_1fc3a
}

define i32 @function_1fc41(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fc41:
  %v0_1fc42 = load i32, i32* @eax, align 8
  ret i32 %v0_1fc42
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorI5CTxInSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc43:
  %v2_1fc6d = call i32 @unknown_4679b(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fc84

bb:                                               ; preds = %dec_label_pc_1fc43
  %v1_1fc82 = call i32 @function_1fc89()
  br label %dec_label_pc_1fc84

dec_label_pc_1fc84:                               ; preds = %bb, %dec_label_pc_1fc43
  %v2_1fc82 = phi i32 [ %v1_1fc82, %bb ], [ %arg1, %dec_label_pc_1fc43 ]
  ret i32 %v2_1fc82

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1fc89() local_unnamed_addr {
dec_label_pc_1fc89:
  %v0_1fc8a = load i32, i32* @eax, align 8
  ret i32 %v0_1fc8a
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS4_SaIS4_EEEEEC1ERKS9_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc8e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1fcb1 = call i32 @function_3b96a(i32 %tmp102)
  %v1_1fcbc = inttoptr i32 %arg2 to i32*
  %v2_1fcbc = load i32, i32* %v1_1fcbc, align 4
  store i32 %v2_1fcbc, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fccc

bb:                                               ; preds = %dec_label_pc_1fc8e
  %v1_1fcca = call i32 @function_1fcd1()
  br label %dec_label_pc_1fccc

dec_label_pc_1fccc:                               ; preds = %bb, %dec_label_pc_1fc8e
  %v2_1fcca = phi i32 [ %v1_1fcca, %bb ], [ 0, %dec_label_pc_1fc8e ]
  ret i32 %v2_1fcca
}

define i32 @function_1fcd1() local_unnamed_addr {
dec_label_pc_1fcd1:
  %v0_1fcd2 = load i32, i32* @eax, align 8
  ret i32 %v0_1fcd2
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorI5CTxInSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fcd3:
  %v2_1fcfd = call i32 @unknown_46875(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fd14

bb:                                               ; preds = %dec_label_pc_1fcd3
  %v1_1fd12 = call i32 @function_1fd19()
  br label %dec_label_pc_1fd14

dec_label_pc_1fd14:                               ; preds = %bb, %dec_label_pc_1fcd3
  %v2_1fd12 = phi i32 [ %v1_1fd12, %bb ], [ %arg1, %dec_label_pc_1fcd3 ]
  ret i32 %v2_1fd12

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1fd19() local_unnamed_addr {
dec_label_pc_1fd19:
  %v0_1fd1a = load i32, i32* @eax, align 8
  ret i32 %v0_1fd1a
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SG_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fd1d:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fd43

bb:                                               ; preds = %dec_label_pc_1fd1d
  %v2_1fd41 = call i32 @function_1fd48(i32 %arg1)
  br label %dec_label_pc_1fd43

dec_label_pc_1fd43:                               ; preds = %bb, %dec_label_pc_1fd1d
  %v3_1fd41 = phi i32 [ %v2_1fd41, %bb ], [ %arg1, %dec_label_pc_1fd1d ]
  ret i32 %v3_1fd41
}

define i32 @function_1fd48(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fd48:
  %v0_1fd49 = load i32, i32* @eax, align 8
  ret i32 %v0_1fd49
}

define i32 @_ZN9__gnu_cxxeqIP5CTxInSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fd4a:
  %v1_1fd6e = call i32 @unknown_46936(i32 %arg1)
  %v1_1fd73 = inttoptr i32 %v1_1fd6e to i32*
  %v2_1fd73 = load i32, i32* %v1_1fd73, align 4
  %v1_1fd7b = call i32 @unknown_46936(i32 %arg2)
  %v1_1fd80 = inttoptr i32 %v1_1fd7b to i32*
  %v2_1fd80 = load i32, i32* %v1_1fd80, align 4
  %v12_1fd82 = icmp eq i32 %v2_1fd73, %v2_1fd80
  %v1_1fd84 = zext i1 %v12_1fd82 to i32
  %v3_1fd84 = and i32 %v2_1fd80, -256
  %v4_1fd84 = or i32 %v1_1fd84, %v3_1fd84
  store i32 %v4_1fd84, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fd93

bb:                                               ; preds = %dec_label_pc_1fd4a
  %v1_1fd91 = call i32 @function_1fd98()
  br label %dec_label_pc_1fd93

dec_label_pc_1fd93:                               ; preds = %bb, %dec_label_pc_1fd4a
  %v2_1fd91 = phi i32 [ %v1_1fd91, %bb ], [ %v4_1fd84, %dec_label_pc_1fd4a ]
  ret i32 %v2_1fd91

; uselistorder directives
  uselistorder i32 %v2_1fd80, { 1, 0 }
  uselistorder i32 (i32)* @unknown_46936, { 1, 0 }
}

define i32 @function_1fd98() local_unnamed_addr {
dec_label_pc_1fd98:
  %v0_1fd9d = load i32, i32* @eax, align 8
  ret i32 %v0_1fd9d
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fd9e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1fdb8 = load i32, i32* %arg1, align 4
  %v1_1fdba = add i32 %v2_1fdb8, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v1_1fdba, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fdd1

bb:                                               ; preds = %dec_label_pc_1fd9e
  %v2_1fdcf = call i32 @function_1fdd6(i32 %tmp100)
  br label %dec_label_pc_1fdd1

dec_label_pc_1fdd1:                               ; preds = %bb, %dec_label_pc_1fd9e
  %v3_1fdcf = phi i32 [ %v2_1fdcf, %bb ], [ %tmp100, %dec_label_pc_1fd9e ]
  ret i32 %v3_1fdcf
}

define i32 @function_1fdd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fdd6:
  %v0_1fdd7 = load i32, i32* @eax, align 8
  ret i32 %v0_1fdd7
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fdd8:
  %v2_1fdf2 = load i32, i32* %arg1, align 4
  store i32 %v2_1fdf2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fe00

bb:                                               ; preds = %dec_label_pc_1fdd8
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1fdfe = call i32 @function_1fe05(i32 %tmp100)
  br label %dec_label_pc_1fe00

dec_label_pc_1fe00:                               ; preds = %bb, %dec_label_pc_1fdd8
  %v3_1fdfe = phi i32 [ %v2_1fdfe, %bb ], [ %v2_1fdf2, %dec_label_pc_1fdd8 ]
  ret i32 %v3_1fdfe

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1fe05(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fe05:
  %v0_1fe06 = load i32, i32* @eax, align 8
  ret i32 %v0_1fe06
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fe08:
  %v1_1fe28 = add i32 %arg2, 4
  %v2_1fe35 = call i32 @unknown_46a22(i32 %arg1, i32 %v1_1fe28)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1fe49

bb:                                               ; preds = %dec_label_pc_1fe08
  %v1_1fe47 = call i32 @function_1fe4e()
  br label %dec_label_pc_1fe49

dec_label_pc_1fe49:                               ; preds = %bb, %dec_label_pc_1fe08
  %v2_1fe47 = phi i32 [ %v1_1fe47, %bb ], [ %arg1, %dec_label_pc_1fe08 ]
  ret i32 %v2_1fe47

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1fe4e() local_unnamed_addr {
dec_label_pc_1fe4e:
  %v0_1fe4f = load i32, i32* @eax, align 8
  ret i32 %v0_1fe4f
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE4findERS2_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fe52:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v1_1fe7c = call i32 @unknown_46ad4(i32 %arg2)
  %v1_1fe89 = call i32 @unknown_46aa4(i32 %arg2)
  %v2_1fe8e = ptrtoint i32* %stack_var_-24 to i32
  %v5_1feaa = call i32 @unknown_46b04(i32 %v2_1fe8e, i32 %arg2, i32 %v1_1fe89, i32 %v1_1fe7c, i32 %arg3)
  %v2_1feb2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1feb2, i32* @eax, align 8
  %v2_1febf = call i32 @function_3fc5a(i32 %v2_1feb2, i32 %arg2)
  %v2_1fed4 = call i32 @unknown_3fd90(i32 %v2_1fe8e, i32 %v2_1feb2)
  %v4_1fed9 = trunc i32 %v2_1fed4 to i8
  %v5_1fed9 = icmp eq i8 %v4_1fed9, 0
  %v1_1fedb = icmp eq i1 %v5_1fed9, false
  br i1 %v1_1fedb, label %dec_label_pc_1ff04, label %dec_label_pc_1fedd

dec_label_pc_1fedd:                               ; preds = %dec_label_pc_1fe52
  %v3_1fedd = load i32, i32* %stack_var_-24, align 4
  %v1_1fee3 = call i32 @unknown_46bb8(i32 %v3_1fedd)
  store i32 %arg2, i32* @eax, align 8
  %v3_1fefb = call i32 @function_3ce1c(i32 %arg2, i32 %arg3, i32 %v1_1fee3)
  %v4_1ff00 = trunc i32 %v3_1fefb to i8
  %v5_1ff00 = icmp eq i8 %v4_1ff00, 0
  br i1 %v5_1ff00, label %dec_label_pc_1ff1b, label %dec_label_pc_1ff04

dec_label_pc_1ff04:                               ; preds = %dec_label_pc_1fedd, %dec_label_pc_1fe52
  store i32 %tmp115, i32* @eax, align 8
  %v2_1ff11 = call i32 @function_3fc5a(i32 %tmp115, i32 %arg2)
  br label %dec_label_pc_1ff23

dec_label_pc_1ff1b:                               ; preds = %dec_label_pc_1fedd
  %v3_1ff1e = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1ff1e, i32* %arg1, align 4
  br label %dec_label_pc_1ff23

dec_label_pc_1ff23:                               ; preds = %dec_label_pc_1ff1b, %dec_label_pc_1ff04
  store i32 %tmp115, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ff32

bb:                                               ; preds = %dec_label_pc_1ff23
  %v1_1ff30 = call i32 @function_1ff37()
  br label %dec_label_pc_1ff32

dec_label_pc_1ff32:                               ; preds = %bb, %dec_label_pc_1ff23
  %v2_1ff30 = phi i32 [ %v1_1ff30, %bb ], [ %tmp115, %dec_label_pc_1ff23 ]
  ret i32 %v2_1ff30

; uselistorder directives
  uselistorder i32 %tmp115, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_3fc5a, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4, 6, 5 }
}

define i32 @function_1ff37() local_unnamed_addr {
dec_label_pc_1ff37:
  %v0_1ff3b = load i32, i32* @eax, align 8
  ret i32 %v0_1ff3b
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint256xEEeqERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ff3e:
  %v2_1ff5e = load i32, i32* %arg1, align 4
  %v1_1ff63 = inttoptr i32 %arg2 to i32*
  %v2_1ff63 = load i32, i32* %v1_1ff63, align 4
  %v12_1ff65 = icmp eq i32 %v2_1ff5e, %v2_1ff63
  %v1_1ff67 = zext i1 %v12_1ff65 to i32
  %v3_1ff67 = and i32 %v2_1ff63, -256
  %v4_1ff67 = or i32 %v1_1ff67, %v3_1ff67
  store i32 %v4_1ff67, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_1ff76

bb:                                               ; preds = %dec_label_pc_1ff3e
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1ff74 = call i32 @function_1ff7b(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1ff76

dec_label_pc_1ff76:                               ; preds = %bb, %dec_label_pc_1ff3e
  %v4_1ff74 = phi i32 [ %v3_1ff74, %bb ], [ %v4_1ff67, %dec_label_pc_1ff3e ]
  ret i32 %v4_1ff74

; uselistorder directives
  uselistorder i32 %v2_1ff63, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1ff7b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ff7b:
  %v0_1ff7c = load i32, i32* @eax, align 8
  ret i32 %v0_1ff7c
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE9constructEPS5_RKS5_() local_unnamed_addr {
dec_label_pc_1ff7e:
  %eax.global-to-local = alloca i32, align 4
  %v2_1ff7f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_1ff7f
}

define i32 @function_1ff81(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ff81:
  %v5_1ff81 = load i32, i32* @eax, align 8
  ret i32 %v5_1ff81
}

define i32 @function_1ff82(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ff82:
  %v0_1ff87 = load i32, i32* @ebp, align 4
  %v1_1ff87 = add i32 %v0_1ff87, 8
  %v2_1ff87 = inttoptr i32 %v1_1ff87 to i32*
  %v3_1ff87 = load i32, i32* %v2_1ff87, align 4
  %v2_1ff8a = add i32 %v0_1ff87, -44
  %v3_1ff8a = inttoptr i32 %v2_1ff8a to i32*
  store i32 %v3_1ff87, i32* %v3_1ff8a, align 4
  %v0_1ff8d = load i32, i32* @ebp, align 4
  %v1_1ff8d = add i32 %v0_1ff8d, 12
  %v2_1ff8d = inttoptr i32 %v1_1ff8d to i32*
  %v3_1ff8d = load i32, i32* %v2_1ff8d, align 4
  %v2_1ff90 = add i32 %v0_1ff8d, -48
  %v3_1ff90 = inttoptr i32 %v2_1ff90 to i32*
  store i32 %v3_1ff8d, i32* %v3_1ff90, align 4
  %v0_1ff93 = load i32, i32* @ebp, align 4
  %v1_1ff93 = add i32 %v0_1ff93, 16
  %v2_1ff93 = inttoptr i32 %v1_1ff93 to i32*
  %v3_1ff93 = load i32, i32* %v2_1ff93, align 4
  %v2_1ff96 = add i32 %v0_1ff93, -52
  %v3_1ff96 = inttoptr i32 %v2_1ff96 to i32*
  store i32 %v3_1ff93, i32* %v3_1ff96, align 4
  %v0_1ff99 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1ff9f = load i32, i32* @ebp, align 4
  %v2_1ff9f = add i32 %v1_1ff9f, -28
  %v3_1ff9f = inttoptr i32 %v2_1ff9f to i32*
  store i32 %v0_1ff99, i32* %v3_1ff9f, align 4
  %v0_1ffa4 = load i32, i32* @ebp, align 4
  %v1_1ffa4 = add i32 %v0_1ffa4, -48
  %v2_1ffa4 = inttoptr i32 %v1_1ffa4 to i32*
  %v3_1ffa4 = load i32, i32* %v2_1ffa4, align 4
  %v3_1ffb2 = call i32 @function_25caa(i8* inttoptr (i32 20 to i8*), i32 %v3_1ffa4)
  %v1_1ffb9 = icmp eq i32 %v3_1ffb2, 0
  br i1 %v1_1ffb9, label %bb, label %dec_label_pc_1ffbd

bb:                                               ; preds = %dec_label_pc_1ff82
  %v1_1ffbb = call i32 @function_1ffe6()
  br label %dec_label_pc_1ffbd

dec_label_pc_1ffbd:                               ; preds = %bb, %dec_label_pc_1ff82
  %v0_1ffbd = load i32, i32* @ebp, align 4
  %v1_1ffbd = add i32 %v0_1ffbd, -52
  %v2_1ffbd = inttoptr i32 %v1_1ffbd to i32*
  %v3_1ffbd = load i32, i32* %v2_1ffbd, align 4
  store i32 %v3_1ffbd, i32* @eax, align 8
  %v2_1ffc7 = call i32 @function_372ee(i32 %v3_1ffb2, i32 %v3_1ffbd)
  %v0_1ffcc = call i32 @function_1ffe6()
  ret i32 %v0_1ffcc

; uselistorder directives
  uselistorder i32 ()* @function_1ffe6, { 1, 0 }
}

define i32 @function_1ffe6() local_unnamed_addr {
dec_label_pc_1ffe6:
  %v0_1ffe6 = load i32, i32* @ebp, align 4
  %v1_1ffe6 = add i32 %v0_1ffe6, -28
  %v2_1ffe6 = inttoptr i32 %v1_1ffe6 to i32*
  %v3_1ffe6 = load i32, i32* %v2_1ffe6, align 4
  %v1_1ffe9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ffe9 = xor i32 %v1_1ffe9, %v3_1ffe6
  %v3_1ffe9 = icmp eq i32 %v2_1ffe9, 0
  store i32 %v2_1ffe9, i32* @eax, align 8
  br i1 %v3_1ffe9, label %bb, label %dec_label_pc_1fff2

bb:                                               ; preds = %dec_label_pc_1ffe6
  %v1_1fff0 = call i32 @function_1fff7()
  br label %dec_label_pc_1fff2

dec_label_pc_1fff2:                               ; preds = %bb, %dec_label_pc_1ffe6
  %v2_1fff0 = phi i32 [ %v1_1fff0, %bb ], [ %v2_1ffe9, %dec_label_pc_1ffe6 ]
  ret i32 %v2_1fff0
}

define i32 @function_1fff7() local_unnamed_addr {
dec_label_pc_1fff7:
  %v0_1fffe = load i32, i32* @eax, align 8
  ret i32 %v0_1fffe
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS4_S6_EERKS4_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20000:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-68, align 4
  %v1_20028 = add i32 %tmp113, 4
  %v2_20028 = inttoptr i32 %v1_20028 to i32*
  %v3_20028 = load i32, i32* %v2_20028, align 4
  %v1_2002e = add i32 %tmp113, 8
  %v2_2002e = inttoptr i32 %v1_2002e to i32*
  %v3_2002e = load i32, i32* %v2_2002e, align 4
  %v12_20031 = icmp eq i32 %v3_20028, %v3_2002e
  br i1 %v12_20031, label %dec_label_pc_200d5, label %dec_label_pc_20039

dec_label_pc_20039:                               ; preds = %dec_label_pc_20000
  %v3_2003c = load i32, i32* %v2_20028, align 4
  %v1_2003f = add i32 %v3_2003c, -20
  %v4_20056 = call i32 @unknown_3ff7e(i32 %tmp113, i32 %v3_2003c, i32 %v1_2003f)
  %v3_2005e = load i32, i32* %v2_20028, align 4
  %v1_20061 = add i32 %v3_2005e, 20
  store i32 %v1_20061, i32* %v2_20028, align 4
  %v2_20071 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_20071, i32* @eax, align 8
  %v2_20077 = call i32 @function_37370(i32 %v2_20071, i32 %arg3)
  %v3_2007f = load i32, i32* %v2_20028, align 4
  %v1_20082 = add i32 %v3_2007f, -20
  store i32 %v1_20082, i32* %esi.global-to-local, align 4
  %v3_20088 = load i32, i32* %v2_20028, align 4
  %v1_2008b = add i32 %v3_20088, -40
  %v2_2008e = ptrtoint i32* %stack_var_-68 to i32
  %v1_20094 = call i32 @unknown_46daa(i32 %v2_2008e)
  %v1_20099 = inttoptr i32 %v1_20094 to i32*
  %v2_20099 = load i32, i32* %v1_20099, align 4
  %v0_2009b = load i32, i32* %esi.global-to-local, align 4
  %v4_200a6 = call i32 @unknown_46dd7(i32 %v2_20099, i32 %v1_2008b, i32 %v0_2009b)
  %v1_200b1 = call i32 @unknown_46e3e(i32 %v2_2008e)
  %v2_200c0 = call i32 @unknown_449d8(i32 %v1_200b1, i32 %v2_20071)
  store i32 %v2_20071, i32* @eax, align 8
  %v1_200cb = call i32 @function_33af6(i32 %v2_20071)
  %v0_200d0 = call i32 @function_20300()
  ret i32 %v0_200d0

dec_label_pc_200d5:                               ; preds = %dec_label_pc_20000
  %v4_200eb = call i32 @unknown_46e6e(i32 %tmp113, i32 1, i32 ptrtoint ([22 x i8]* @global_var_7126.2864 to i32))
  %v2_200f3 = ptrtoint i32* %stack_var_-56 to i32
  %v2_20100 = call i32 @unknown_46f40(i32 %v2_200f3, i32 %tmp113)
  %v2_2010f = ptrtoint i32* %stack_var_-68 to i32
  %v2_20115 = call i32 @unknown_46f87(i32 %v2_2010f, i32 %v2_200f3)
  %v2_2012a = call i32 @unknown_46fe8(i32 %tmp113, i32 %v4_200eb)
  %v2_20142 = mul i32 %v2_20115, 20
  %v5_20147 = add i32 %v2_2012a, %v2_20142
  %v3_2015b = call i32 @unknown_3ff7e(i32 %tmp113, i32 %v5_20147, i32 %arg3)
  %v1_2017a = call i32 @unknown_46daa(i32 %v2_2010f)
  %v1_2017f = inttoptr i32 %v1_2017a to i32*
  %v2_2017f = load i32, i32* %v1_2017f, align 4
  %v2_20184 = load i32, i32* %arg1, align 4
  %v5_20198 = call i32 @unknown_4703f(i32 %v2_20184, i32 %v2_2017f, i32 %v2_2012a, i32 %tmp113)
  %v4_201a0 = add i32 %v5_20198, 20
  %v3_201b4 = load i32, i32* %v2_20028, align 4
  store i32 %v3_201b4, i32* %esi.global-to-local, align 4
  %v1_201bd = call i32 @unknown_46daa(i32 %v2_2010f)
  %v1_201c2 = inttoptr i32 %v1_201bd to i32*
  %v2_201c2 = load i32, i32* %v1_201c2, align 4
  %v5_201d6 = call i32 @unknown_4703f(i32 %v2_201c2, i32 %v3_201b4, i32 %v4_201a0, i32 %tmp113)
  store i32 %tmp113, i32* @eax, align 8
  %v3_201ec = load i32, i32* %v2_20028, align 4
  store i32 %v3_201ec, i32* @ecx, align 8
  %v2_201f2 = load i32, i32* %arg1, align 4
  %v3_201ff = call i32 @function_3f357(i32 %v2_201f2, i32 %v3_201ec, i32 %tmp113)
  %v3_20207 = load i32, i32* %v2_2002e, align 4
  %v2_2020f = load i32, i32* %arg1, align 4
  %v2_20213 = sub i32 %v3_20207, %v2_2020f
  %v2_20217 = sdiv i32 %v2_20213, 4
  %v3_2021a = mul i32 %v2_20217, -858993459
  %v3_20235 = call i32 @unknown_4609a(i32 %tmp113, i32 %v2_2020f, i32 %v3_2021a)
  store i32 %v2_2012a, i32* %arg1, align 4
  store i32 %v5_201d6, i32* %v2_20028, align 4
  %v2_20255 = mul i32 %v4_200eb, 20
  %v5_2025a = add i32 %v2_2012a, %v2_20255
  store i32 %v5_2025a, i32* %v2_2002e, align 4
  %v0_20263 = call i32 @function_20300()
  ret i32 %v0_20263

; uselistorder directives
  uselistorder i32 %v2_2012a, { 0, 2, 3, 1 }
  uselistorder i32* %v2_20028, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %tmp113, { 4, 2, 5, 0, 1, 6, 7, 8, 9, 3, 11, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4703f, { 1, 0 }
  uselistorder i32 ()* @function_20300, { 1, 0 }
  uselistorder i32 (i32)* @unknown_46daa, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3ff7e, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_20269() local_unnamed_addr {
dec_label_pc_20269:
  %eax.global-to-local = alloca i32, align 4
  %v0_20269 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20269
}

define i32 @function_20280() local_unnamed_addr {
dec_label_pc_20280:
  %eax.global-to-local = alloca i32, align 4
  %v0_20280 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20280
}

define i32 @function_20297() local_unnamed_addr {
dec_label_pc_20297:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_20297 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20297 = add i32 %v0_20297, 1962987645
  %v2_20297 = inttoptr i32 %v1_20297 to i32*
  %v3_20297 = load i32, i32* %v2_20297, align 4
  %v4_20297 = add i32 %v3_20297, 1
  store i32 %v4_20297, i32* %v2_20297, align 4
  %v0_2029d = load i32, i32* %ecx.global-to-local, align 8
  %v1_2029d = load i32, i32* %ebx.global-to-local, align 4
  %v2_2029d = add i32 %v1_2029d, -796272555
  %v3_2029d = inttoptr i32 %v2_2029d to i32*
  %v4_2029d = load i32, i32* %v3_2029d, align 4
  %v5_2029d = and i32 %v4_2029d, %v0_2029d
  store i32 %v5_2029d, i32* %ecx.global-to-local, align 8
  %v0_202a3 = load i32, i32* %eax.global-to-local, align 8
  %v2_202a3 = mul i32 %v0_202a3, 4
  %v1_202a6 = load i32, i32* %edx.global-to-local, align 4
  %v2_202a6 = add i32 %v1_202a6, %v2_202a3
  %v2_202a8 = mul i32 %v2_202a6, 4
  store i32 %v2_202a8, i32* %eax.global-to-local, align 8
  store i32 %v2_202a8, i32* %edx.global-to-local, align 4
  %v1_202ad = load i32, i32* @ebp, align 4
  %v2_202ad = add i32 %v1_202ad, -36
  %v3_202ad = inttoptr i32 %v2_202ad to i32*
  %v4_202ad = load i32, i32* %v3_202ad, align 4
  %v5_202ad = add i32 %v4_202ad, %v2_202a8
  store i32 %v5_202ad, i32* %edx.global-to-local, align 4
  %v1_202b0 = add i32 %v1_202ad, -60
  %v2_202b0 = inttoptr i32 %v1_202b0 to i32*
  %v3_202b0 = load i32, i32* %v2_202b0, align 4
  store i32 %v3_202b0, i32* %eax.global-to-local, align 8
  %v2_202ba = call i32 @unknown_4709c(i32 %v3_202b0, i32 %v5_202ad)
  store i32 %v2_202ba, i32* %eax.global-to-local, align 8
  %v0_202bf = call i32 @function_202e2()
  store i32 %v0_202bf, i32* %eax.global-to-local, align 8
  ret i32 %v0_202bf

; uselistorder directives
  uselistorder i32 %v2_202a8, { 2, 1, 0 }
}

define i32 @function_202c1() local_unnamed_addr {
dec_label_pc_202c1:
  %v0_202c1 = load i32, i32* @ebp, align 4
  %v1_202c1 = add i32 %v0_202c1, -60
  %v2_202c1 = inttoptr i32 %v1_202c1 to i32*
  %v3_202c1 = load i32, i32* %v2_202c1, align 4
  %v1_202d0 = add i32 %v0_202c1, -48
  %v2_202d0 = inttoptr i32 %v1_202d0 to i32*
  %v3_202d0 = load i32, i32* %v2_202d0, align 4
  %v1_202d7 = add i32 %v0_202c1, -36
  %v2_202d7 = inttoptr i32 %v1_202d7 to i32*
  %v3_202d7 = load i32, i32* %v2_202d7, align 4
  store i32 %v3_202d7, i32* @eax, align 8
  %v3_202dd = call i32 @function_3f357(i32 %v3_202d7, i32 %v3_202d0, i32 %v3_202c1)
  ret i32 %v3_202dd

; uselistorder directives
  uselistorder i32 %v0_202c1, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_3f357, { 1, 0 }
}

define i32 @function_202e2() local_unnamed_addr {
dec_label_pc_202e2:
  %v0_202e2 = load i32, i32* @ebp, align 4
  %v1_202e2 = add i32 %v0_202e2, -60
  %v2_202e2 = inttoptr i32 %v1_202e2 to i32*
  %v3_202e2 = load i32, i32* %v2_202e2, align 4
  %v1_202e5 = add i32 %v0_202e2, -44
  %v2_202e5 = inttoptr i32 %v1_202e5 to i32*
  %v3_202e5 = load i32, i32* %v2_202e5, align 4
  %v1_202ec = add i32 %v0_202e2, -36
  %v2_202ec = inttoptr i32 %v1_202ec to i32*
  %v3_202ec = load i32, i32* %v2_202ec, align 4
  %v3_202f6 = call i32 @unknown_4609a(i32 %v3_202e2, i32 %v3_202ec, i32 %v3_202e5)
  ret i32 %v3_202f6

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_4609a, { 1, 0 }
}

define i32 @function_20300() local_unnamed_addr {
dec_label_pc_20300:
  %v0_20300 = load i32, i32* @ebp, align 4
  %v1_20300 = add i32 %v0_20300, -12
  %v2_20300 = inttoptr i32 %v1_20300 to i32*
  %v3_20300 = load i32, i32* %v2_20300, align 4
  %v1_20303 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20303 = xor i32 %v1_20303, %v3_20300
  %v3_20303 = icmp eq i32 %v2_20303, 0
  store i32 %v2_20303, i32* @eax, align 8
  br i1 %v3_20303, label %bb, label %dec_label_pc_2030c

bb:                                               ; preds = %dec_label_pc_20300
  %v1_2030a = call i32 @function_20311()
  br label %dec_label_pc_2030c

dec_label_pc_2030c:                               ; preds = %bb, %dec_label_pc_20300
  %v2_2030a = phi i32 [ %v1_2030a, %bb ], [ %v2_20303, %dec_label_pc_20300 ]
  ret i32 %v2_2030a
}

define i32 @function_20311() local_unnamed_addr {
dec_label_pc_20311:
  %v0_20317 = load i32, i32* @eax, align 8
  ret i32 %v0_20317
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20318:
  %v1_20338 = add i32 %arg2, 4
  %v2_20345 = call i32 @unknown_473f0(i32 %arg1, i32 %v1_20338)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20359

bb:                                               ; preds = %dec_label_pc_20318
  %v1_20357 = call i32 @function_2035e()
  br label %dec_label_pc_20359

dec_label_pc_20359:                               ; preds = %bb, %dec_label_pc_20318
  %v2_20357 = phi i32 [ %v1_20357, %bb ], [ %arg1, %dec_label_pc_20318 ]
  ret i32 %v2_20357

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2035e() local_unnamed_addr {
dec_label_pc_2035e:
  %v0_2035f = load i32, i32* @eax, align 8
  ret i32 %v0_2035f
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ISE_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20362:
  %v1_20383 = add i32 %arg1, 4
  store i32 %v1_20383, i32* @eax, align 8
  %v1_20389 = call i32 @function_3be38(i32 %v1_20383)
  %v0_2038e = load i32, i32* @ebx, align 4
  %sext = mul i32 %v0_2038e, 16777216
  %v4_203a7 = sdiv i32 %sext, 16777216
  %v5_203a7 = call i32 @unknown_47474(i32 %arg1, i32 %arg2, i32 1, i32 %v4_203a7)
  %v0_203ac = call i32 @function_203c8()
  ret i32 %v0_203ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_203af() local_unnamed_addr {
dec_label_pc_203af:
  %eax.global-to-local = alloca i32, align 4
  %v0_203af = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_203af
}

define i32 @function_203c8() local_unnamed_addr {
dec_label_pc_203c8:
  %v0_203c8 = load i32, i32* @ebp, align 4
  %v1_203c8 = add i32 %v0_203c8, -12
  %v2_203c8 = inttoptr i32 %v1_203c8 to i32*
  %v3_203c8 = load i32, i32* %v2_203c8, align 4
  %v1_203cb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_203cb = xor i32 %v1_203cb, %v3_203c8
  %v3_203cb = icmp eq i32 %v2_203cb, 0
  store i32 %v2_203cb, i32* @eax, align 8
  br i1 %v3_203cb, label %bb, label %dec_label_pc_203d4

bb:                                               ; preds = %dec_label_pc_203c8
  %v1_203d2 = call i32 @function_203d9()
  br label %dec_label_pc_203d4

dec_label_pc_203d4:                               ; preds = %bb, %dec_label_pc_203c8
  %v2_203d2 = phi i32 [ %v1_203d2, %bb ], [ %v2_203cb, %dec_label_pc_203c8 ]
  ret i32 %v2_203d2
}

define i32 @function_203d9() local_unnamed_addr {
dec_label_pc_203d9:
  %v0_203de = load i32, i32* @eax, align 8
  ret i32 %v0_203de
}

define i32 @_ZN9__gnu_cxxltIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_203df:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_20403 = call i32 @function_3ba95(i32 %arg1)
  %v1_20408 = inttoptr i32 %v1_20403 to i32*
  %v2_20408 = load i32, i32* %v1_20408, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_20410 = call i32 @function_3ba95(i32 %arg2)
  %v1_20415 = inttoptr i32 %v1_20410 to i32*
  %v2_20415 = load i32, i32* %v1_20415, align 4
  %v7_20417 = icmp ult i32 %v2_20408, %v2_20415
  %v1_20419 = zext i1 %v7_20417 to i32
  %v3_20419 = and i32 %v2_20415, -256
  %v4_20419 = or i32 %v1_20419, %v3_20419
  store i32 %v4_20419, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20428

bb:                                               ; preds = %dec_label_pc_203df
  %v1_20426 = call i32 @function_2042d()
  br label %dec_label_pc_20428

dec_label_pc_20428:                               ; preds = %bb, %dec_label_pc_203df
  %v2_20426 = phi i32 [ %v1_20426, %bb ], [ %v4_20419, %dec_label_pc_203df ]
  ret i32 %v2_20426

; uselistorder directives
  uselistorder i32 (i32)* @function_3ba95, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2042d() local_unnamed_addr {
dec_label_pc_2042d:
  %v0_20432 = load i32, i32* @eax, align 8
  ret i32 %v0_20432
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20434:
  %stack_var_-20 = alloca i32, align 4
  %v2_2045a = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_2045a
}

define i32 @function_2045f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2045f:
  %v0_20461 = load i32, i32* @ebp, align 4
  %v1_20461 = add i32 %v0_20461, -28
  %v2_20461 = inttoptr i32 %v1_20461 to i32*
  %v3_20461 = load i32, i32* %v2_20461, align 4
  ret i32 %v3_20461
}

define i32 @function_2046a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2046a:
  %v0_2046c = load i32, i32* @ebp, align 4
  %v1_2046c = add i32 %v0_2046c, -28
  %v2_2046c = inttoptr i32 %v1_2046c to i32*
  %v3_2046c = load i32, i32* %v2_2046c, align 4
  store i32 %v3_2046c, i32* @eax, align 8
  %v1_2046f = add i32 %v0_2046c, -12
  %v2_2046f = inttoptr i32 %v1_2046f to i32*
  %v3_2046f = load i32, i32* %v2_2046f, align 4
  %v1_20472 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20472 = icmp eq i32 %v1_20472, %v3_2046f
  br i1 %v3_20472, label %bb, label %dec_label_pc_2047b

bb:                                               ; preds = %dec_label_pc_2046a
  %v1_20479 = call i32 @function_20480()
  br label %dec_label_pc_2047b

dec_label_pc_2047b:                               ; preds = %bb, %dec_label_pc_2046a
  %v3_20479 = phi i32 [ %v1_20479, %bb ], [ %v3_2046c, %dec_label_pc_2046a ]
  ret i32 %v3_20479
}

define i32 @function_20480() local_unnamed_addr {
dec_label_pc_20480:
  %v0_20481 = load i32, i32* @eax, align 8
  ret i32 %v0_20481
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_20484:
  %stack_var_-20 = alloca i32, align 4
  %v2_204a4 = load i32, i32* %arg2, align 4
  store i32 %v2_204a4, i32* %stack_var_-20, align 4
  %v2_204a9 = ptrtoint i32* %stack_var_-20 to i32
  %v2_204b6 = call i32 @unknown_47600(i32 %arg1, i32 %v2_204a9)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_204c7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_204c7:
  %v0_204c7 = load i32, i32* @ebp, align 4
  %v1_204c7 = load i32, i32* @eax, align 8
  %v3_204c7 = add i32 %v0_204c7, -24
  %v4_204c7 = add i32 %v3_204c7, %v1_204c7
  %v5_204c7 = inttoptr i32 %v4_204c7 to i8*
  %v6_204c7 = load i8, i8* %v5_204c7, align 1
  %v7_204c7 = load i32, i32* @edx, align 4
  %v8_204c7 = udiv i32 %v7_204c7, 256
  %v9_204c7 = trunc i32 %v8_204c7 to i8
  %v10_204c7 = add i8 %v9_204c7, %v6_204c7
  store i8 %v10_204c7, i8* %v5_204c7, align 1
  %v31_204c7 = load i32, i32* @eax, align 8
  ret i32 %v31_204c7
}

define i32 @function_204ce() local_unnamed_addr {
dec_label_pc_204ce:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_204ce = load i32, i32* %ecx.global-to-local, align 8
  %v1_204ce = add i32 %v0_204ce, -1
  store i32 %v1_204ce, i32* %ecx.global-to-local, align 8
  %v0_204d0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_204d0
}

define i32 @_ZN9__gnu_cxxeqIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_204d3:
  %v1_204f7 = call i32 @unknown_47689(i32 %arg1)
  %v1_204fc = inttoptr i32 %v1_204f7 to i32*
  %v2_204fc = load i32, i32* %v1_204fc, align 4
  %v1_20504 = call i32 @unknown_47689(i32 %arg2)
  %v1_20509 = inttoptr i32 %v1_20504 to i32*
  %v2_20509 = load i32, i32* %v1_20509, align 4
  %v12_2050b = icmp eq i32 %v2_204fc, %v2_20509
  %v1_2050d = zext i1 %v12_2050b to i32
  %v3_2050d = and i32 %v2_20509, -256
  %v4_2050d = or i32 %v1_2050d, %v3_2050d
  store i32 %v4_2050d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2051c

bb:                                               ; preds = %dec_label_pc_204d3
  %v1_2051a = call i32 @function_20521()
  br label %dec_label_pc_2051c

dec_label_pc_2051c:                               ; preds = %bb, %dec_label_pc_204d3
  %v2_2051a = phi i32 [ %v1_2051a, %bb ], [ %v4_2050d, %dec_label_pc_204d3 ]
  ret i32 %v2_2051a

; uselistorder directives
  uselistorder i32 %v2_20509, { 1, 0 }
  uselistorder i32 (i32)* @unknown_47689, { 1, 0 }
}

define i32 @function_20521() local_unnamed_addr {
dec_label_pc_20521:
  %v0_20526 = load i32, i32* @eax, align 8
  ret i32 %v0_20526
}

define i32 @_Z11UnserializeI11CDataStream6CBlockEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20527:
  %v8_2056b = call i32 @unknown_4770b(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2057c

bb:                                               ; preds = %dec_label_pc_20527
  %v1_2057a = call i32 @function_20581()
  br label %dec_label_pc_2057c

dec_label_pc_2057c:                               ; preds = %bb, %dec_label_pc_20527
  %v2_2057a = phi i32 [ %v1_2057a, %bb ], [ 0, %dec_label_pc_20527 ]
  ret i32 %v2_2057a

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_20581() local_unnamed_addr {
dec_label_pc_20581:
  %v0_20582 = load i32, i32* @eax, align 8
  ret i32 %v0_20582
}

define i32 @_ZN9base_uintILj256EEppEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20584:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_205ad = inttoptr i32 %arg2 to i32*
  %v2_205ad = load i32, i32* %v1_205ad, align 4
  store i32 %v2_205ad, i32* %arg1, align 4
  %v1_205b1 = add i32 %arg2, 4
  %v2_205b1 = inttoptr i32 %v1_205b1 to i32*
  %v3_205b1 = load i32, i32* %v2_205b1, align 4
  %v1_205b4 = load i32, i32* %eax.global-to-local, align 8
  %v2_205b4 = add i32 %v1_205b4, 4
  %v3_205b4 = inttoptr i32 %v2_205b4 to i32*
  store i32 %v3_205b1, i32* %v3_205b4, align 4
  %v0_205b7 = load i32, i32* %edx.global-to-local, align 4
  %v1_205b7 = add i32 %v0_205b7, 8
  %v2_205b7 = inttoptr i32 %v1_205b7 to i32*
  %v3_205b7 = load i32, i32* %v2_205b7, align 4
  %v1_205ba = load i32, i32* %eax.global-to-local, align 8
  %v2_205ba = add i32 %v1_205ba, 8
  %v3_205ba = inttoptr i32 %v2_205ba to i32*
  store i32 %v3_205b7, i32* %v3_205ba, align 4
  %v0_205bd = load i32, i32* %edx.global-to-local, align 4
  %v1_205bd = add i32 %v0_205bd, 12
  %v2_205bd = inttoptr i32 %v1_205bd to i32*
  %v3_205bd = load i32, i32* %v2_205bd, align 4
  %v1_205c0 = load i32, i32* %eax.global-to-local, align 8
  %v2_205c0 = add i32 %v1_205c0, 12
  %v3_205c0 = inttoptr i32 %v2_205c0 to i32*
  store i32 %v3_205bd, i32* %v3_205c0, align 4
  %v0_205c3 = load i32, i32* %edx.global-to-local, align 4
  %v1_205c3 = add i32 %v0_205c3, 16
  %v2_205c3 = inttoptr i32 %v1_205c3 to i32*
  %v3_205c3 = load i32, i32* %v2_205c3, align 4
  %v1_205c6 = load i32, i32* %eax.global-to-local, align 8
  %v2_205c6 = add i32 %v1_205c6, 16
  %v3_205c6 = inttoptr i32 %v2_205c6 to i32*
  store i32 %v3_205c3, i32* %v3_205c6, align 4
  %v0_205c9 = load i32, i32* %edx.global-to-local, align 4
  %v1_205c9 = add i32 %v0_205c9, 20
  %v2_205c9 = inttoptr i32 %v1_205c9 to i32*
  %v3_205c9 = load i32, i32* %v2_205c9, align 4
  %v1_205cc = load i32, i32* %eax.global-to-local, align 8
  %v2_205cc = add i32 %v1_205cc, 20
  %v3_205cc = inttoptr i32 %v2_205cc to i32*
  store i32 %v3_205c9, i32* %v3_205cc, align 4
  %v0_205cf = load i32, i32* %edx.global-to-local, align 4
  %v1_205cf = add i32 %v0_205cf, 24
  %v2_205cf = inttoptr i32 %v1_205cf to i32*
  %v3_205cf = load i32, i32* %v2_205cf, align 4
  %v1_205d2 = load i32, i32* %eax.global-to-local, align 8
  %v2_205d2 = add i32 %v1_205d2, 24
  %v3_205d2 = inttoptr i32 %v2_205d2 to i32*
  store i32 %v3_205cf, i32* %v3_205d2, align 4
  %v0_205d5 = load i32, i32* %edx.global-to-local, align 4
  %v1_205d5 = add i32 %v0_205d5, 28
  %v2_205d5 = inttoptr i32 %v1_205d5 to i32*
  %v3_205d5 = load i32, i32* %v2_205d5, align 4
  store i32 %v3_205d5, i32* %edx.global-to-local, align 4
  %v1_205d8 = load i32, i32* %eax.global-to-local, align 8
  %v2_205d8 = add i32 %v1_205d8, 28
  %v3_205d8 = inttoptr i32 %v2_205d8 to i32*
  store i32 %v3_205d5, i32* %v3_205d8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_205e1 = call i32 @unknown_4780e(i32 %arg2)
  store i32 %tmp104, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_205f5

bb:                                               ; preds = %dec_label_pc_20584
  %v1_205f3 = call i32 @function_205fa()
  store i32 %v1_205f3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_205f5

dec_label_pc_205f5:                               ; preds = %bb, %dec_label_pc_20584
  %v2_205f3 = phi i32 [ %v1_205f3, %bb ], [ %tmp104, %dec_label_pc_20584 ]
  ret i32 %v2_205f3

; uselistorder directives
  uselistorder i32 %tmp104, { 0, 2, 1 }
  uselistorder i32 %arg2, { 4, 3, 0, 2, 1 }
}

define i32 @function_205fa() local_unnamed_addr {
dec_label_pc_205fa:
  %v0_205fb = load i32, i32* @eax, align 8
  ret i32 %v0_205fb
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_205fe:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_20630 = add i32 %tmp103, 8
  store i32 %v1_20630, i32* @eax, align 8
  %v2_20636 = call i32 @function_2ecc2(i32 %v1_20630, i32 %arg2)
  store i32 ptrtoint (%vtable_3fa3c_type* @global_var_3fa3c.2829 to i32), i32* %arg1, align 4
  %v2_20647 = inttoptr i32 %v1_20630 to i32*
  store i32 ptrtoint (i32* @global_var_3fa50.2830 to i32), i32* %v2_20647, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2065a

bb:                                               ; preds = %dec_label_pc_205fe
  %v1_20658 = call i32 @function_2065f()
  br label %dec_label_pc_2065a

dec_label_pc_2065a:                               ; preds = %bb, %dec_label_pc_205fe
  %v2_20658 = phi i32 [ %v1_20658, %bb ], [ 0, %dec_label_pc_205fe ]
  ret i32 %v2_20658

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3fa3c_type* @global_var_3fa3c.2829 to i32), { 2, 1, 0 }
}

define i32 @function_2065f() local_unnamed_addr {
dec_label_pc_2065f:
  %v0_20660 = load i32, i32* @eax, align 8
  ret i32 %v0_20660
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20662:
  ret i32 %arg1
}

define i32 @function_20690(i32 %arg1) local_unnamed_addr {
dec_label_pc_20690:
  %v2_20690 = load i32, i32* @eax, align 8
  %v4_20690 = mul i32 %v2_20690, 2
  %v21_20690 = inttoptr i32 %v2_20690 to i32*
  store i32 %v4_20690, i32* %v21_20690, align 4
  %v0_20692 = load i32, i32* @ebp, align 4
  %v1_20692 = add i32 %v0_20692, -28
  %v2_20692 = inttoptr i32 %v1_20692 to i32*
  %v3_20692 = load i32, i32* %v2_20692, align 4
  %v1_20695 = add i32 %v3_20692, 28
  store i32 %v1_20695, i32* @eax, align 8
  %v1_2069b = call i32 @function_3afc6(i32 %v1_20695)
  %v0_206a0 = load i32, i32* @ebp, align 4
  %v1_206a0 = add i32 %v0_206a0, -28
  %v2_206a0 = inttoptr i32 %v1_206a0 to i32*
  %v3_206a0 = load i32, i32* %v2_206a0, align 4
  %v1_206a3 = inttoptr i32 %v3_206a0 to i32*
  store i32 ptrtoint (%vtable_3f9dc_type* @global_var_3f9dc.2831 to i32), i32* %v1_206a3, align 4
  %v0_206a9 = load i32, i32* @ebp, align 4
  %v1_206a9 = add i32 %v0_206a9, -28
  %v2_206a9 = inttoptr i32 %v1_206a9 to i32*
  %v3_206a9 = load i32, i32* %v2_206a9, align 4
  %v1_206ac = add i32 %v3_206a9, 8
  %v2_206ac = inttoptr i32 %v1_206ac to i32*
  store i32 ptrtoint (i32* @global_var_3f9f8.2832 to i32), i32* %v2_206ac, align 4
  %v0_206b3 = load i32, i32* @ebp, align 4
  %v1_206b3 = add i32 %v0_206b3, -28
  %v2_206b3 = inttoptr i32 %v1_206b3 to i32*
  %v3_206b3 = load i32, i32* %v2_206b3, align 4
  %v1_206b6 = add i32 %v3_206b3, 28
  %v2_206b6 = inttoptr i32 %v1_206b6 to i32*
  store i32 ptrtoint (i32* @global_var_3fa08.2833 to i32), i32* %v2_206b6, align 4
  %v0_206bd = load i32, i32* @ebp, align 4
  %v1_206bd = add i32 %v0_206bd, -32
  %v2_206bd = inttoptr i32 %v1_206bd to i32*
  %v3_206bd = load i32, i32* %v2_206bd, align 4
  %v1_206c0 = add i32 %v3_206bd, 8
  %v1_206c3 = add i32 %v0_206bd, -28
  %v2_206c3 = inttoptr i32 %v1_206c3 to i32*
  %v3_206c3 = load i32, i32* %v2_206c3, align 4
  %v1_206c6 = add i32 %v3_206c3, 8
  %v2_206d0 = call i32 @function_30688(i32 %v1_206c6, i32 %v1_206c0)
  %v0_206d5 = call i32 @function_206fc()
  ret i32 %v0_206d5

; uselistorder directives
  uselistorder i32 %v2_20690, { 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f9dc_type* @global_var_3f9dc.2831 to i32), { 2, 1, 0 }
}

define i32 @function_206d8() local_unnamed_addr {
dec_label_pc_206d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_206d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_206d8
}

define i32 @function_206ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_206ec:
  %v1_206ee = load i32, i32* @esi, align 4
  %v1_206ef = load i32, i32* @ebp, align 4
  store i32 %v1_206ee, i32* @ebp, align 4
  %v4_206f0 = add i32 %v1_206ef, %v1_206ee
  %v21_206f0 = inttoptr i32 %v1_206ef to i32*
  store i32 %v4_206f0, i32* %v21_206f0, align 4
  %v0_206f2 = load i32, i32* @ebx, align 4
  ret i32 %v0_206f2

; uselistorder directives
  uselistorder i32 %v1_206ef, { 1, 0 }
}

define i32 @function_206fc() local_unnamed_addr {
dec_label_pc_206fc:
  %v0_206fc = load i32, i32* @ebp, align 4
  %v1_206fc = add i32 %v0_206fc, -12
  %v2_206fc = inttoptr i32 %v1_206fc to i32*
  %v3_206fc = load i32, i32* %v2_206fc, align 4
  %v1_206ff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_206ff = xor i32 %v1_206ff, %v3_206fc
  %v3_206ff = icmp eq i32 %v2_206ff, 0
  store i32 %v2_206ff, i32* @eax, align 8
  br i1 %v3_206ff, label %bb, label %dec_label_pc_20708

bb:                                               ; preds = %dec_label_pc_206fc
  %v1_20706 = call i32 @function_2070d()
  br label %dec_label_pc_20708

dec_label_pc_20708:                               ; preds = %bb, %dec_label_pc_206fc
  %v2_20706 = phi i32 [ %v1_20706, %bb ], [ %v2_206ff, %dec_label_pc_206fc ]
  ret i32 %v2_20706
}

define i32 @function_2070d() local_unnamed_addr {
dec_label_pc_2070d:
  %v0_20712 = load i32, i32* @eax, align 8
  ret i32 %v0_20712
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE3minEv() local_unnamed_addr {
dec_label_pc_20713:
  %v0_20719 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20735

bb:                                               ; preds = %dec_label_pc_20713
  %v2_20733 = call i32 @function_2073a(i32 %v0_20719)
  br label %dec_label_pc_20735

dec_label_pc_20735:                               ; preds = %bb, %dec_label_pc_20713
  %v3_20733 = phi i32 [ %v2_20733, %bb ], [ 1, %dec_label_pc_20713 ]
  ret i32 %v3_20733
}

define i32 @function_2073a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2073a:
  %v0_2073b = load i32, i32* @eax, align 8
  ret i32 %v0_2073b
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE8on_errorEttNS0_14violation_enumE(i16 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2073c:
  %stack_var_-24 = alloca i32, align 4
  %v2_20762 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_20762, i32* @eax, align 8
  %v1_20768 = call i32 @function_30dfa(i32 %v2_20762)
  store i32 %v2_20762, i32* @eax, align 8
  %v1_20773 = call i32 @function_34fb1(i32 %v2_20762)
  store i32 %v2_20762, i32* @eax, align 8
  %v1_20780 = call i32 @function_311ac(i32 %v2_20762)
  ret i32 %v1_20773
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEEEE3maxEv() local_unnamed_addr {
dec_label_pc_2078f:
  %v0_20795 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_207a0 = call i32 @unknown_47a8b(i32 %v0_20795)
  store i32 %v1_207a0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_207b1

bb:                                               ; preds = %dec_label_pc_2078f
  %v1_207af = call i32 @function_207b6()
  br label %dec_label_pc_207b1

dec_label_pc_207b1:                               ; preds = %bb, %dec_label_pc_2078f
  %v2_207af = phi i32 [ %v1_207af, %bb ], [ %v1_207a0, %dec_label_pc_2078f ]
  ret i32 %v2_207af
}

define i32 @function_207b6() local_unnamed_addr {
dec_label_pc_207b6:
  %v0_207b7 = load i32, i32* @eax, align 8
  ret i32 %v0_207b7
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE3minEv() local_unnamed_addr {
dec_label_pc_207b8:
  %v0_207be = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 1400, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_207da

bb:                                               ; preds = %dec_label_pc_207b8
  %v2_207d8 = call i32 @function_207df(i32 %v0_207be)
  br label %dec_label_pc_207da

dec_label_pc_207da:                               ; preds = %bb, %dec_label_pc_207b8
  %v3_207d8 = phi i32 [ %v2_207d8, %bb ], [ 1400, %dec_label_pc_207b8 ]
  ret i32 %v3_207d8
}

define i32 @function_207df(i32 %arg1) local_unnamed_addr {
dec_label_pc_207df:
  %v0_207e0 = load i32, i32* @eax, align 8
  ret i32 %v0_207e0
}

define i32 @_ZN5boost9gregorian8bad_yearD1Ev(i32* %arg1) {
dec_label_pc_207e2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fb7c_type* @global_var_3fb7c.2865 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_20834() local_unnamed_addr {
dec_label_pc_20834:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20834 = load i32, i32* %ecx.global-to-local, align 8
  %v1_20834 = add i32 %v0_20834, -1
  store i32 %v1_20834, i32* %ecx.global-to-local, align 8
  %v0_20836 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20836
}

define i32 @_ZN5boost9gregorian8bad_yearD0Ev(i32 %arg1) {
dec_label_pc_20838:
  %v1_20855 = call i32 @unknown_4101a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_20875() local_unnamed_addr {
dec_label_pc_20875:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20875 = load i32, i32* %ecx.global-to-local, align 8
  %v1_20875 = add i32 %v0_20875, -1
  store i32 %v1_20875, i32* %ecx.global-to-local, align 8
  %v0_20877 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20877
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE(i16 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20878:
  %stack_var_-24 = alloca i32, align 4
  %v2_2089e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_2089e, i32* @eax, align 8
  %v1_208a4 = call i32 @function_310a4(i32 %v2_2089e)
  %v1_208af = call i32 @unknown_47ced(i32 %v2_2089e)
  %v1_208bc = call i32 @unknown_4105a(i32 %v2_2089e)
  ret i32 %v1_208af
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEEEE3maxEv() local_unnamed_addr {
dec_label_pc_208cb:
  %v0_208d1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_208dc = call i32 @unknown_47de0(i32 %v0_208d1)
  store i32 %v1_208dc, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_208ed

bb:                                               ; preds = %dec_label_pc_208cb
  %v1_208eb = call i32 @function_208f2()
  br label %dec_label_pc_208ed

dec_label_pc_208ed:                               ; preds = %bb, %dec_label_pc_208cb
  %v2_208eb = phi i32 [ %v1_208eb, %bb ], [ %v1_208dc, %dec_label_pc_208cb ]
  ret i32 %v2_208eb
}

define i32 @function_208f2() local_unnamed_addr {
dec_label_pc_208f2:
  %v0_208f3 = load i32, i32* @eax, align 8
  ret i32 %v0_208f3
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE3minEv() local_unnamed_addr {
dec_label_pc_208f4:
  %v0_208fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20916

bb:                                               ; preds = %dec_label_pc_208f4
  %v2_20914 = call i32 @function_2091b(i32 %v0_208fa)
  br label %dec_label_pc_20916

dec_label_pc_20916:                               ; preds = %bb, %dec_label_pc_208f4
  %v3_20914 = phi i32 [ %v2_20914, %bb ], [ 1, %dec_label_pc_208f4 ]
  ret i32 %v3_20914
}

define i32 @function_2091b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2091b:
  %v0_2091c = load i32, i32* @eax, align 8
  ret i32 %v0_2091c
}

define i32 @_ZN5boost9gregorian9bad_monthD1Ev(i32* %arg1) {
dec_label_pc_2091e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3fb64_type* @global_var_3fb64.2809 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_20970() local_unnamed_addr {
dec_label_pc_20970:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20970 = load i32, i32* %ecx.global-to-local, align 8
  %v1_20970 = add i32 %v0_20970, -1
  store i32 %v1_20970, i32* %ecx.global-to-local, align 8
  %v0_20972 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20972
}

define i32 @_ZN5boost9gregorian9bad_monthD0Ev(i32 %arg1) {
dec_label_pc_20974:
  %v1_20991 = call i32 @unknown_41292(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_209b1() local_unnamed_addr {
dec_label_pc_209b1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_209b1 = load i32, i32* %ecx.global-to-local, align 8
  %v1_209b1 = add i32 %v0_209b1, -1
  store i32 %v1_209b1, i32* %ecx.global-to-local, align 8
  %v0_209b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_209b3
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE8on_errorEttNS0_14violation_enumE(i16 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_209b4:
  %stack_var_-24 = alloca i32, align 4
  %v2_209da = ptrtoint i32* %stack_var_-24 to i32
  %v1_209e0 = call i32 @function_31302(i32 %v2_209da)
  %v1_209eb = call i32 @unknown_48041(i32 %v2_209da)
  %v1_209f8 = call i32 @unknown_412d2(i32 %v2_209da)
  ret i32 %v1_209eb
}

define i32 @_ZN5boost2CV17constrained_valueINS0_23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEEEE3maxEv() local_unnamed_addr {
dec_label_pc_20a07:
  %v0_20a0d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20a18 = call i32 @unknown_48134(i32 %v0_20a0d)
  ret i32 %v1_20a18
}

define i32 @function_20a20(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a20:
  %v0_20a20 = load i32, i32* @edx, align 4
  %v1_20a20 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20a20 = icmp eq i32 %v1_20a20, %v0_20a20
  br i1 %v3_20a20, label %bb, label %dec_label_pc_20a20.dec_label_pc_20a29_crit_edge

dec_label_pc_20a20.dec_label_pc_20a29_crit_edge:  ; preds = %dec_label_pc_20a20
  %v2_20a27.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_20a29

bb:                                               ; preds = %dec_label_pc_20a20
  %v1_20a27 = call i32 @function_20a2e()
  br label %dec_label_pc_20a29

dec_label_pc_20a29:                               ; preds = %dec_label_pc_20a20.dec_label_pc_20a29_crit_edge, %bb
  %v2_20a27 = phi i32 [ %v2_20a27.pre, %dec_label_pc_20a20.dec_label_pc_20a29_crit_edge ], [ %v1_20a27, %bb ]
  ret i32 %v2_20a27

; uselistorder directives
  uselistorder label %dec_label_pc_20a29, { 1, 0 }
}

define i32 @function_20a2e() local_unnamed_addr {
dec_label_pc_20a2e:
  %v0_20a2f = load i32, i32* @eax, align 8
  ret i32 %v0_20a2f
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a30:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp103, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 4
  %v2_20a5a = call i32 @function_35156(i32 %tmp103, i32 %arg2)
  %v1_20a62 = add i32 %tmp103, 8
  %v5_20a62 = icmp ugt i32* %arg1, inttoptr (i32 -9 to i32*)
  store i1 %v5_20a62, i1* @cf, align 1
  store i32 %v1_20a62, i32* @eax, align 8
  %v1_20a68 = call i32 @function_2f0f4(i32 %v1_20a62)
  store i32 ptrtoint (%vtable_3f99c_type* @global_var_3f99c.2836 to i32), i32* %arg1, align 4
  %v2_20a79 = inttoptr i32 %v1_20a62 to i32*
  store i32 ptrtoint (i32* @global_var_3f9b0.2837 to i32), i32* %v2_20a79, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20a8c

bb:                                               ; preds = %dec_label_pc_20a30
  %v1_20a8a = call i32 @function_20a91()
  br label %dec_label_pc_20a8c

dec_label_pc_20a8c:                               ; preds = %bb, %dec_label_pc_20a30
  %v2_20a8a = phi i32 [ %v1_20a8a, %bb ], [ 0, %dec_label_pc_20a30 ]
  ret i32 %v2_20a8a

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f99c_type* @global_var_3f99c.2836 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_20a91() local_unnamed_addr {
dec_label_pc_20a91:
  %v0_20a92 = load i32, i32* @eax, align 8
  ret i32 %v0_20a92
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a94:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_20abf = call i32 @function_35206(i32 %tmp102, i32 %arg2)
  %v1_20ac7 = add i32 %tmp102, 28
  store i32 %v1_20ac7, i32* @eax, align 8
  %v1_20acd = call i32 @function_3b3f8(i32 %v1_20ac7)
  store i32 ptrtoint (%vtable_3f93c_type* @global_var_3f93c.2838 to i32), i32* %arg1, align 4
  %v1_20ade = add i32 %tmp102, 8
  %v2_20ade = inttoptr i32 %v1_20ade to i32*
  store i32 ptrtoint (i32* @global_var_3f958.2839 to i32), i32* %v2_20ade, align 4
  %v2_20ae8 = inttoptr i32 %v1_20ac7 to i32*
  store i32 ptrtoint (i32* @global_var_3f968.2840 to i32), i32* %v2_20ae8, align 4
  %v1_20af2 = add i32 %arg2, 8
  store i32 %v1_20ade, i32* @eax, align 8
  %v2_20b02 = call i32 @function_30aba(i32 %v1_20ade, i32 %v1_20af2)
  %v0_20b07 = call i32 @function_20b2e()
  ret i32 %v0_20b07

; uselistorder directives
  uselistorder i32 %v1_20ade, { 1, 0, 2 }
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f93c_type* @global_var_3f93c.2838 to i32), { 2, 1, 0 }
}

define i32 @function_20b0a() local_unnamed_addr {
dec_label_pc_20b0a:
  %eax.global-to-local = alloca i32, align 4
  %v0_20b0a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20b0a
}

define i32 @function_20b2e() local_unnamed_addr {
dec_label_pc_20b2e:
  %v0_20b2e = load i32, i32* @ebp, align 4
  %v1_20b2e = add i32 %v0_20b2e, -12
  %v2_20b2e = inttoptr i32 %v1_20b2e to i32*
  %v3_20b2e = load i32, i32* %v2_20b2e, align 4
  %v1_20b31 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20b31 = xor i32 %v1_20b31, %v3_20b2e
  %v3_20b31 = icmp eq i32 %v2_20b31, 0
  store i32 %v2_20b31, i32* @eax, align 8
  br i1 %v3_20b31, label %bb, label %dec_label_pc_20b3a

bb:                                               ; preds = %dec_label_pc_20b2e
  %v1_20b38 = call i32 @function_20b3f()
  br label %dec_label_pc_20b3a

dec_label_pc_20b3a:                               ; preds = %bb, %dec_label_pc_20b2e
  %v2_20b38 = phi i32 [ %v1_20b38, %bb ], [ %v2_20b31, %dec_label_pc_20b2e ]
  ret i32 %v2_20b38
}

define i32 @function_20b3f() local_unnamed_addr {
dec_label_pc_20b3f:
  %v0_20b44 = load i32, i32* @eax, align 8
  ret i32 %v0_20b44
}

define i32 @_ZNK5boost9date_time11int_adapterIjE10is_specialEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b46:
  %v1_20b63 = call i32 @unknown_417c4(i32 %arg1)
  %v4_20b68 = trunc i32 %v1_20b63 to i8
  %v5_20b68 = icmp eq i8 %v4_20b68, 0
  %v1_20b6a = icmp eq i1 %v5_20b68, false
  br i1 %v1_20b6a, label %dec_label_pc_20b87, label %dec_label_pc_20b6c

dec_label_pc_20b6c:                               ; preds = %dec_label_pc_20b46
  %v1_20b72 = call i32 @unknown_416e0(i32 %arg1)
  %v4_20b77 = trunc i32 %v1_20b72 to i8
  %v5_20b77 = icmp ne i8 %v4_20b77, 0
  %. = zext i1 %v5_20b77 to i32
  br label %dec_label_pc_20b87

dec_label_pc_20b87:                               ; preds = %dec_label_pc_20b6c, %dec_label_pc_20b46
  %storemerge = phi i32 [ 1, %dec_label_pc_20b46 ], [ %., %dec_label_pc_20b6c ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20b93

bb:                                               ; preds = %dec_label_pc_20b87
  %v1_20b91 = call i32 @function_20b98()
  br label %dec_label_pc_20b93

dec_label_pc_20b93:                               ; preds = %bb, %dec_label_pc_20b87
  %v2_20b91 = phi i32 [ %v1_20b91, %bb ], [ %storemerge, %dec_label_pc_20b87 ]
  ret i32 %v2_20b91
}

define i32 @function_20b98() local_unnamed_addr {
dec_label_pc_20b98:
  %v0_20b99 = load i32, i32* @eax, align 8
  ret i32 %v0_20b99
}

define i32 @_ZNK5boost9date_time11int_adapterIjE6is_nanEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_20b9a:
  %stack_var_-20 = alloca i32, align 4
  %v2_20bb5 = load i32, i32* %arg1, align 4
  %v2_20bb7 = ptrtoint i32* %stack_var_-20 to i32
  %v1_20bbd = call i32 @function_3a627(i32 %v2_20bb7)
  store i32 %v2_20bb7, i32* @eax, align 8
  %v1_20bcb = call i32 @function_3a6f4(i32 %v2_20bb7)
  %v12_20bd0 = icmp eq i32 %v2_20bb5, %v1_20bcb
  %v1_20bd2 = zext i1 %v12_20bd0 to i32
  %v3_20bd2 = and i32 %v1_20bcb, -256
  %v4_20bd2 = or i32 %v1_20bd2, %v3_20bd2
  store i32 %v4_20bd2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20be1

bb:                                               ; preds = %dec_label_pc_20b9a
  %v1_20bdf = call i32 @function_20be6()
  br label %dec_label_pc_20be1

dec_label_pc_20be1:                               ; preds = %bb, %dec_label_pc_20b9a
  %v2_20bdf = phi i32 [ %v1_20bdf, %bb ], [ %v4_20bd2, %dec_label_pc_20b9a ]
  ret i32 %v2_20bdf

; uselistorder directives
  uselistorder i32 %v1_20bcb, { 1, 0 }
}

define i32 @function_20be6() local_unnamed_addr {
dec_label_pc_20be6:
  %v0_20bea = load i32, i32* @eax, align 8
  ret i32 %v0_20bea
}

define i32 @_ZN5boost9date_time11int_adapterIjE10is_neg_infEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_20beb:
  %stack_var_-20 = alloca i32, align 4
  %v2_20c02 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_20c02, i32* @eax, align 8
  %v1_20c08 = call i32 @function_3a6be(i32 %v2_20c02)
  %v15_20c1b = icmp eq i32 %v2_20c02, %arg1
  %v1_20c1e = zext i1 %v15_20c1b to i32
  %v3_20c1e = and i32 %v2_20c02, -256
  %v4_20c1e = or i32 %v1_20c1e, %v3_20c1e
  store i32 %v4_20c1e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20c2d

bb:                                               ; preds = %dec_label_pc_20beb
  %v2_20c2b = call i32 @function_20c32(i32 %v2_20c02)
  br label %dec_label_pc_20c2d

dec_label_pc_20c2d:                               ; preds = %bb, %dec_label_pc_20beb
  %v3_20c2b = phi i32 [ %v2_20c2b, %bb ], [ %v4_20c1e, %dec_label_pc_20beb ]
  ret i32 %v3_20c2b

; uselistorder directives
  uselistorder i32 %v2_20c02, { 1, 2, 0, 3, 4 }
}

define i32 @function_20c32(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c32:
  %v0_20c33 = load i32, i32* @eax, align 8
  ret i32 %v0_20c33
}

define i32 @_ZN5boost9date_time11int_adapterIjE10is_pos_infEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c34:
  %stack_var_-20 = alloca i32, align 4
  %v2_20c4b = ptrtoint i32* %stack_var_-20 to i32
  %v2_20c5f = call i32 @function_3a78e(i32 %v2_20c4b, i32 %v2_20c4b)
  %v15_20c64 = icmp eq i32 %v2_20c5f, %arg1
  %v1_20c67 = zext i1 %v15_20c64 to i32
  %v3_20c67 = and i32 %v2_20c5f, -256
  %v4_20c67 = or i32 %v1_20c67, %v3_20c67
  store i32 %v4_20c67, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20c76

bb:                                               ; preds = %dec_label_pc_20c34
  %v1_20c74 = call i32 @function_20c7b()
  br label %dec_label_pc_20c76

dec_label_pc_20c76:                               ; preds = %bb, %dec_label_pc_20c34
  %v2_20c74 = phi i32 [ %v1_20c74, %bb ], [ %v4_20c67, %dec_label_pc_20c34 ]
  ret i32 %v2_20c74

; uselistorder directives
  uselistorder i32 %v2_20c5f, { 1, 0 }
}

define i32 @function_20c7b() local_unnamed_addr {
dec_label_pc_20c7b:
  %v0_20c7c = load i32, i32* @eax, align 8
  ret i32 %v0_20c7c
}

define i32 @_ZNK5boost9date_time11int_adapterIjE11is_infinityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_20c7e:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_20c99 = load i32, i32* %arg1, align 4
  %v2_20c9b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_20c9b, i32* @eax, align 8
  %v2_20caf = call i32 @function_3a7d8(i32 %v2_20c9b, i32 %v2_20c9b)
  %v12_20cb4 = icmp eq i32 %v2_20c99, %v2_20caf
  br i1 %v12_20cb4, label %dec_label_pc_20ce6, label %dec_label_pc_20cb8

dec_label_pc_20cb8:                               ; preds = %dec_label_pc_20c7e
  %v2_20cbb = load i32, i32* %arg1, align 4
  %v2_20cbd = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_20cbd, i32* @eax, align 8
  %v2_20cd1 = call i32 @function_3a7d8(i32 %v2_20cbd, i32 %v2_20cbd)
  %v12_20cd6 = icmp eq i32 %v2_20cbb, %v2_20cd1
  %. = zext i1 %v12_20cd6 to i32
  br label %dec_label_pc_20ce6

dec_label_pc_20ce6:                               ; preds = %dec_label_pc_20cb8, %dec_label_pc_20c7e
  %storemerge = phi i32 [ 1, %dec_label_pc_20c7e ], [ %., %dec_label_pc_20cb8 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20cf2

bb:                                               ; preds = %dec_label_pc_20ce6
  %v1_20cf0 = call i32 @function_20cf7()
  br label %dec_label_pc_20cf2

dec_label_pc_20cf2:                               ; preds = %bb, %dec_label_pc_20ce6
  %v2_20cf0 = phi i32 [ %v1_20cf0, %bb ], [ %storemerge, %dec_label_pc_20ce6 ]
  ret i32 %v2_20cf0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_3a7d8, { 1, 0 }
}

define i32 @function_20cf7() local_unnamed_addr {
dec_label_pc_20cf7:
  %v0_20cfb = load i32, i32* @eax, align 8
  ret i32 %v0_20cfb
}

define i32 @_ZN5boost9date_time14absolute_valueIxEET_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20cfc:
  %v2_20d22 = ashr i32 %arg2, 31
  %v5_20d29 = xor i32 %v2_20d22, %arg1
  ret i32 %v5_20d29
}

define i32 @function_20d32(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20d32:
  %stack_var_-5 = alloca i32, align 4
  %v15_20d36 = ptrtoint i32* %stack_var_-5 to i32
  store i32 %v15_20d36, i32* @ebp, align 4
  %v0_20d38 = load i32, i32* @ecx, align 8
  %v1_20d38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20d38 = icmp eq i32 %v1_20d38, %v0_20d38
  br i1 %v3_20d38, label %bb, label %dec_label_pc_20d32.dec_label_pc_20d41_crit_edge

dec_label_pc_20d32.dec_label_pc_20d41_crit_edge:  ; preds = %dec_label_pc_20d32
  %v2_20d3f.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_20d41

bb:                                               ; preds = %dec_label_pc_20d32
  %v1_20d3f = call i32 @function_20d46()
  br label %dec_label_pc_20d41

dec_label_pc_20d41:                               ; preds = %dec_label_pc_20d32.dec_label_pc_20d41_crit_edge, %bb
  %v2_20d3f = phi i32 [ %v2_20d3f.pre, %dec_label_pc_20d32.dec_label_pc_20d41_crit_edge ], [ %v1_20d3f, %bb ]
  ret i32 %v2_20d3f

; uselistorder directives
  uselistorder label %dec_label_pc_20d41, { 1, 0 }
}

define i32 @function_20d46() local_unnamed_addr {
dec_label_pc_20d46:
  %v0_20d4b = load i32, i32* @eax, align 8
  ret i32 %v0_20d4b
}

define i32 @_ZN5boost9date_time11int_adapterIxE12not_a_numberEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d4c:
  %edx.global-to-local = alloca i32, align 4
  %v1_20d63 = call i32 @function_31377(i32 %arg1)
  %v1_20d68 = add i32 %v1_20d63, -1
  %v5_20d68 = icmp ne i32 %v1_20d63, 0
  %v0_20d6b = load i32, i32* %edx.global-to-local, align 4
  %v2_20d6b = zext i1 %v5_20d68 to i32
  %v3_20d6b = add i32 %v0_20d6b, -1
  %v4_20d6b = add i32 %v3_20d6b, %v2_20d6b
  store i32 %v4_20d6b, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_20d7c = call i32 @function_3af4a(i32 %arg1, i32 %v1_20d68, i32 %v4_20d6b)
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_20d90

bb:                                               ; preds = %dec_label_pc_20d4c
  %v1_20d8e = call i32 @function_20d95()
  br label %dec_label_pc_20d90

dec_label_pc_20d90:                               ; preds = %bb, %dec_label_pc_20d4c
  %v2_20d8e = phi i32 [ %v1_20d8e, %bb ], [ %arg1, %dec_label_pc_20d4c ]
  ret i32 %v2_20d8e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1, 4 }
}

define i32 @function_20d95() local_unnamed_addr {
dec_label_pc_20d95:
  %v0_20d96 = load i32, i32* @eax, align 8
  ret i32 %v0_20d96
}

define i32 @_ZN5boost9date_time11int_adapterIxE12neg_infinityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d99:
  %edx.global-to-local = alloca i32, align 4
  %v0_20db9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_20dd7

bb:                                               ; preds = %dec_label_pc_20d99
  %v4_20dd5 = call i32 @function_20ddc(i32 %arg1, i32 0, i32 %v0_20db9)
  br label %dec_label_pc_20dd7

dec_label_pc_20dd7:                               ; preds = %bb, %dec_label_pc_20d99
  %v5_20dd5 = phi i32 [ %v4_20dd5, %bb ], [ %arg1, %dec_label_pc_20d99 ]
  ret i32 %v5_20dd5
}

define i32 @function_20ddc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20ddc:
  %v0_20ddd = load i32, i32* @eax, align 8
  ret i32 %v0_20ddd
}

define i32 @_ZN5boost9date_time11int_adapterIxE12pos_infinityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20de0:
  %edx.global-to-local = alloca i32, align 4
  %v0_20e00 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_20e1e

bb:                                               ; preds = %dec_label_pc_20de0
  %v4_20e1c = call i32 @function_20e23(i32 %arg1, i32 0, i32 %v0_20e00)
  br label %dec_label_pc_20e1e

dec_label_pc_20e1e:                               ; preds = %bb, %dec_label_pc_20de0
  %v5_20e1c = phi i32 [ %v4_20e1c, %bb ], [ %arg1, %dec_label_pc_20de0 ]
  ret i32 %v5_20e1c
}

define i32 @function_20e23(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20e23:
  %v0_20e24 = load i32, i32* @eax, align 8
  ret i32 %v0_20e24
}

define i32 @_ZN5boost9date_time11int_adapterIxE3maxEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e27:
  %v1_20e3e = call i32 @function_31452(i32 %arg1)
  %v1_20e43 = add i32 %v1_20e3e, -2
  %v5_20e43 = icmp ugt i32 %v1_20e3e, 1
  %v0_20e46 = load i32, i32* @edx, align 4
  %v2_20e46 = zext i1 %v5_20e43 to i32
  %v3_20e46 = add i32 %v0_20e46, -1
  %v4_20e46 = add i32 %v3_20e46, %v2_20e46
  %v3_20e57 = call i32 @__stack_chk_fail.1507(i32 %arg1, i32 %v1_20e43, i32 %v4_20e46)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20e6b

bb:                                               ; preds = %dec_label_pc_20e27
  %v1_20e69 = call i32 @function_20e70()
  br label %dec_label_pc_20e6b

dec_label_pc_20e6b:                               ; preds = %bb, %dec_label_pc_20e27
  %v2_20e69 = phi i32 [ %v1_20e69, %bb ], [ %arg1, %dec_label_pc_20e27 ]
  ret i32 %v2_20e69

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
}

define i32 @function_20e70() local_unnamed_addr {
dec_label_pc_20e70:
  %v0_20e71 = load i32, i32* @eax, align 8
  ret i32 %v0_20e71
}

define i32 @_ZN5boost9date_time11int_adapterIxE3minEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e74:
  %edx.global-to-local = alloca i32, align 4
  %v0_20e93 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_20eb8

bb:                                               ; preds = %dec_label_pc_20e74
  %v4_20eb6 = call i32 @function_20ebd(i32 %arg1, i32 1, i32 %v0_20e93)
  br label %dec_label_pc_20eb8

dec_label_pc_20eb8:                               ; preds = %bb, %dec_label_pc_20e74
  %v5_20eb6 = phi i32 [ %v4_20eb6, %bb ], [ %arg1, %dec_label_pc_20e74 ]
  ret i32 %v5_20eb6
}

define i32 @function_20ebd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20ebd:
  %v0_20ebe = load i32, i32* @eax, align 8
  ret i32 %v0_20ebe
}

define i32 @_ZN5boost9date_time19counted_time_systemINS0_16counted_time_repINS_10posix_time33millisec_posix_time_system_configEEEE10unused_varINS0_9dst_flagsEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20ec1:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_20ee4

bb:                                               ; preds = %dec_label_pc_20ec1
  %v2_20ee2 = call i32 @function_20ee9(i32 %arg1)
  br label %dec_label_pc_20ee4

dec_label_pc_20ee4:                               ; preds = %bb, %dec_label_pc_20ec1
  %v3_20ee2 = phi i32 [ %v2_20ee2, %bb ], [ 0, %dec_label_pc_20ec1 ]
  ret i32 %v3_20ee2
}

define i32 @function_20ee9(i32 %arg1) local_unnamed_addr {
dec_label_pc_20ee9:
  %v0_20eea = load i32, i32* @eax, align 8
  ret i32 %v0_20eea
}

define i32 @_ZN5boost9date_time16counted_time_repINS_10posix_time33millisec_posix_time_system_configEEC1ERKNS_9gregorian4dateERKNS2_13time_durationE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20eec:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %tmp133 = trunc i32 %arg2 to i8
  %tmp136 = ptrtoint i32* %arg1 to i32
  store i32 %tmp136, i32* @eax, align 8
  %v4_20f28 = call i32 @function_3b0ea(i32 %tmp136, i32 1, i32 0)
  %sext10 = mul i32 %arg2, 16777216
  %v4_20f2d = sdiv i32 %sext10, 16777216
  %v5_20f38 = icmp eq i8 %tmp133, 0
  %v1_20f3a = icmp eq i1 %v5_20f38, false
  br i1 %v1_20f3a, label %dec_label_pc_20f66, label %dec_label_pc_20f3c

dec_label_pc_20f3c:                               ; preds = %dec_label_pc_20eec
  %v1_20f42 = call i32 @function_3b578(i32 %v4_20f2d)
  %v4_20f47 = trunc i32 %v1_20f42 to i8
  %v5_20f47 = icmp eq i8 %v4_20f47, 0
  %v1_20f49 = icmp eq i1 %v5_20f47, false
  br i1 %v1_20f49, label %dec_label_pc_20f66, label %dec_label_pc_20f4b

dec_label_pc_20f4b:                               ; preds = %dec_label_pc_20f3c
  %v1_20f51 = call i32 @unknown_42422(i32 %arg3)
  %v4_20f56 = trunc i32 %v1_20f51 to i8
  %v5_20f56 = icmp ne i8 %v4_20f56, 0
  %phitmp146 = icmp eq i1 %v5_20f56, false
  br label %dec_label_pc_20f66

dec_label_pc_20f66:                               ; preds = %dec_label_pc_20f4b, %dec_label_pc_20eec, %dec_label_pc_20f3c
  %storemerge = phi i1 [ false, %dec_label_pc_20f3c ], [ false, %dec_label_pc_20eec ], [ %phitmp146, %dec_label_pc_20f4b ]
  br i1 %storemerge, label %dec_label_pc_20fc0, label %dec_label_pc_20f6a

dec_label_pc_20f6a:                               ; preds = %dec_label_pc_20f66
  store i32 %v4_20f2d, i32* %edx.global-to-local, align 4
  %v2_20f6d = ptrtoint i32* %stack_var_-36 to i32
  %v3_20f77 = call i32 @unknown_48642(i32 %v2_20f6d, i32 %v4_20f2d)
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v2_20f82 = ptrtoint i32* %stack_var_-52 to i32
  %v2_20f8c = call i32 @unknown_42468(i32 %v2_20f82, i32 %arg3)
  store i32 %tmp136, i32* %ebx.global-to-local, align 4
  %v2_20f97 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_20f82, i32* %edx.global-to-local, align 4
  %v3_20fab = call i32 @unknown_4868c(i32 %v2_20f97, i32 %v2_20f82, i32 %v2_20f6d)
  %v3_20fb3 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_20fb3, i32* @eax, align 8
  %v1_20fb9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_20fb9 = inttoptr i32 %v1_20fb9 to i32*
  store i32 %v3_20fb3, i32* %v2_20fb9, align 4
  %v0_20fbb = load i32, i32* %edx.global-to-local, align 4
  %v1_20fbb = load i32, i32* %ebx.global-to-local, align 4
  %v2_20fbb = add i32 %v1_20fbb, 4
  %v3_20fbb = inttoptr i32 %v2_20fbb to i32*
  store i32 %v0_20fbb, i32* %v3_20fbb, align 4
  br label %dec_label_pc_21029

dec_label_pc_20fc0:                               ; preds = %dec_label_pc_20f66
  store i32 %v4_20f2d, i32* @eax, align 8
  %v1_20fc6 = call i32 @function_31b04(i32 %v4_20f2d)
  store i32 %v1_20fc6, i32* %ebx.global-to-local, align 4
  %v0_20fd2 = call i32 @unknown_41fa9()
  %v4_20fd713 = zext i32 %v0_20fd2 to i64
  %v0_20fda = load i32, i32* @edx, align 4
  %v4_20fe6 = mul i32 %v1_20fc6, %v0_20fda
  %v12_20fe9 = icmp eq i32 %v4_20fe6, 0
  store i1 %v12_20fe9, i1* @zf, align 1
  %v2_20fee = zext i32 %v1_20fc6 to i64
  %v4_20fee = mul nuw i64 %v2_20fee, %v4_20fd713
  %v5_20fee = trunc i64 %v4_20fee to i32
  %v6_20fee = udiv i64 %v4_20fee, 4294967296
  %v7_20fee = trunc i64 %v6_20fee to i32
  store i32 %v7_20fee, i32* %edx.global-to-local, align 4
  store i32 %v5_20fee, i32* %ebx.global-to-local, align 4
  %v3_20ff4 = add i32 %v7_20fee, %v4_20fe6
  store i32 %arg3, i32* @eax, align 8
  %v1_20fff = call i32 @function_3b502(i32 %arg3)
  %v2_21004 = add i32 %v5_20fee, %v1_20fff
  %v7_21004 = icmp ult i32 %v2_21004, %v1_20fff
  %v0_21006 = load i32, i32* %edx.global-to-local, align 4
  %v3_21006 = zext i1 %v7_21004 to i32
  %v4_21006 = add i32 %v3_20ff4, %v0_21006
  %v5_21006 = add i32 %v3_21006, %v4_21006
  store i32 %v5_21006, i32* %edx.global-to-local, align 4
  %v2_21010 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_21010, i32* @eax, align 8
  %sext = mul i32 %v2_21004, 16777216
  %v2_21016 = sdiv i32 %sext, 16777216
  %v4_21016 = call i32 @function_3b0ea(i32 %v2_21010, i32 %v2_21016, i32 %v5_21006)
  %v3_2101e = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_2101e, i32* @eax, align 8
  store i32 %v3_2101e, i32* %arg1, align 4
  %v2_21026 = add i32 %tmp136, 4
  %v3_21026 = inttoptr i32 %v2_21026 to i32*
  br label %dec_label_pc_21029

dec_label_pc_21029:                               ; preds = %dec_label_pc_20fc0, %dec_label_pc_20f6a
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_21029.dec_label_pc_21035_crit_edge

dec_label_pc_21029.dec_label_pc_21035_crit_edge:  ; preds = %dec_label_pc_21029
  br label %dec_label_pc_21035

bb:                                               ; preds = %dec_label_pc_21029
  %v1_21033 = call i32 @function_2103a()
  br label %dec_label_pc_21035

dec_label_pc_21035:                               ; preds = %dec_label_pc_21029.dec_label_pc_21035_crit_edge, %bb
  %v2_21033 = phi i32 [ undef, %dec_label_pc_21029.dec_label_pc_21035_crit_edge ], [ %v1_21033, %bb ]
  ret i32 %v2_21033

; uselistorder directives
  uselistorder i32 %v1_20fff, { 1, 0 }
  uselistorder i32 %v4_20fe6, { 1, 0 }
  uselistorder i32 %v4_20f2d, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp136, { 0, 1, 3, 2 }
  uselistorder i32 %arg3, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_21035, { 1, 0 }
  uselistorder label %dec_label_pc_20f66, { 0, 2, 1 }
}

define i32 @function_2103a() local_unnamed_addr {
dec_label_pc_2103a:
  %v0_21041 = load i32, i32* @eax, align 8
  ret i32 %v0_21041
}

define i32 @_ZNK5boost9date_time16counted_time_repINS_10posix_time33millisec_posix_time_system_configEE10is_specialEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21042:
  %v1_2105f = call i32 @unknown_489b6(i32 %arg1)
  store i32 %v1_2105f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_21070

bb:                                               ; preds = %dec_label_pc_21042
  %v1_2106e = call i32 @function_21075()
  br label %dec_label_pc_21070

dec_label_pc_21070:                               ; preds = %bb, %dec_label_pc_21042
  %v2_2106e = phi i32 [ %v1_2106e, %bb ], [ %v1_2105f, %dec_label_pc_21042 ]
  ret i32 %v2_2106e
}

define i32 @function_21075() local_unnamed_addr {
dec_label_pc_21075:
  %v0_21076 = load i32, i32* @eax, align 8
  ret i32 %v0_21076
}

define i32 @_ZNK5boost9date_time16counted_time_repINS_10posix_time33millisec_posix_time_system_configEE7get_repEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21078:
  %ecx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* %ecx.global-to-local, align 8
  %v1_2109b = add i32 %arg2, 4
  %v2_2109b = inttoptr i32 %v1_2109b to i32*
  %v3_2109b = load i32, i32* %v2_2109b, align 4
  %v1_2109e = inttoptr i32 %arg2 to i32*
  %v2_2109e = load i32, i32* %v1_2109e, align 4
  store i32 %v2_2109e, i32* %arg1, align 4
  %v1_210a2 = load i32, i32* %ecx.global-to-local, align 8
  %v2_210a2 = add i32 %v1_210a2, 4
  %v3_210a2 = inttoptr i32 %v2_210a2 to i32*
  store i32 %v3_2109b, i32* %v3_210a2, align 4
  store i32 %tmp102, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_210b4

bb:                                               ; preds = %dec_label_pc_21078
  %v3_210b2 = call i32 @function_210b9(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_210b4

dec_label_pc_210b4:                               ; preds = %bb, %dec_label_pc_21078
  %v4_210b2 = phi i32 [ %v3_210b2, %bb ], [ %tmp102, %dec_label_pc_21078 ]
  ret i32 %v4_210b2

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_210b9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_210b9:
  %v0_210ba = load i32, i32* @eax, align 8
  ret i32 %v0_210ba
}

define i32 @_ZN5boost9date_time16counted_time_repINS_10posix_time33millisec_posix_time_system_configEE16frac_sec_per_dayEv() local_unnamed_addr {
dec_label_pc_210bd:
  %edx.global-to-local = alloca i32, align 4
  %v0_210c3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_210e4 = load i32, i32* %edx.global-to-local, align 4
  %v7_210f3 = mul i32 %v0_210e4, 86400
  store i32 0, i32* @eax, align 8
  store i32 %v7_210f3, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_21110

bb:                                               ; preds = %dec_label_pc_210bd
  %v8_2110e = call i32 @function_21115(i32 86400, i32 0, i32 0, i32 %v0_210e4, i32 %v0_210c3)
  br label %dec_label_pc_21110

dec_label_pc_21110:                               ; preds = %bb, %dec_label_pc_210bd
  %v9_2110e = phi i32 [ %v8_2110e, %bb ], [ 0, %dec_label_pc_210bd ]
  ret i32 %v9_2110e
}

define i32 @function_21115(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_21115:
  %v0_21116 = load i32, i32* @eax, align 8
  ret i32 %v0_21116
}

define i32 @_ZNK5boost9date_time16counted_time_repINS_10posix_time33millisec_posix_time_system_configEE10time_countEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_21118:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_21132 = add i32 %tmp101, 4
  %v2_21132 = inttoptr i32 %v1_21132 to i32*
  %v3_21132 = load i32, i32* %v2_21132, align 4
  %v2_21135 = load i32, i32* %arg1, align 4
  %v2_2113e = call i32 @unknown_42550(i32 %v2_21135, i32 %v3_21132)
  store i32 %v2_2113e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2114f

bb:                                               ; preds = %dec_label_pc_21118
  %v1_2114d = call i32 @function_21154()
  br label %dec_label_pc_2114f

dec_label_pc_2114f:                               ; preds = %bb, %dec_label_pc_21118
  %v2_2114d = phi i32 [ %v1_2114d, %bb ], [ %v2_2113e, %dec_label_pc_21118 ]
  ret i32 %v2_2114d
}

define i32 @function_21154() local_unnamed_addr {
dec_label_pc_21154:
  %v0_21155 = load i32, i32* @eax, align 8
  ret i32 %v0_21155
}

define i32 @_ZN5boost9date_time11int_adapterIxE10is_pos_infEx(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21156:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_21175 = ptrtoint i32* %stack_var_-24 to i32
  %v1_2117b = call i32 @unknown_41f36(i32 %v2_21175)
  %v5_21190 = xor i32 %v2_21175, %arg1
  %v0_21193 = load i32, i32* %edx.global-to-local, align 4
  %v5_21195 = xor i32 %v0_21193, %arg2
  %v2_2119a = or i32 %v5_21195, %v5_21190
  %v3_2119a = icmp eq i32 %v2_2119a, 0
  %v1_2119e = zext i1 %v3_2119a to i32
  %v3_2119e = and i32 %v2_2119a, -256
  %v4_2119e = or i32 %v1_2119e, %v3_2119e
  store i32 %v4_2119e, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_211ad

bb:                                               ; preds = %dec_label_pc_21156
  %v2_211ab = call i32 @function_211b2(i32 %v2_21175)
  br label %dec_label_pc_211ad

dec_label_pc_211ad:                               ; preds = %bb, %dec_label_pc_21156
  %v3_211ab = phi i32 [ %v2_211ab, %bb ], [ %v4_2119e, %dec_label_pc_21156 ]
  ret i32 %v3_211ab

; uselistorder directives
  uselistorder i32 %v2_21175, { 1, 0, 2 }
}

define i32 @function_211b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_211b2:
  %v0_211b8 = load i32, i32* @eax, align 8
  ret i32 %v0_211b8
}

define i32 @_ZN5boost9date_time11int_adapterIxE10to_specialEx(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_211b9:
  %v2_211e3 = call i32 @unknown_48ce6(i32 %arg1, i32 %arg2)
  %v4_211e8 = trunc i32 %v2_211e3 to i8
  %v5_211e8 = icmp eq i8 %v4_211e8, 0
  br i1 %v5_211e8, label %dec_label_pc_211f3, label %dec_label_pc_211ec

dec_label_pc_211ec:                               ; preds = %dec_label_pc_211b9
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_21232

dec_label_pc_211f3:                               ; preds = %dec_label_pc_211b9
  %v2_21200 = call i32 @unknown_48bec(i32 %arg1, i32 %arg2)
  %v4_21205 = trunc i32 %v2_21200 to i8
  %v5_21205 = icmp eq i8 %v4_21205, 0
  br i1 %v5_21205, label %dec_label_pc_21210, label %dec_label_pc_21209

dec_label_pc_21209:                               ; preds = %dec_label_pc_211f3
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_21232

dec_label_pc_21210:                               ; preds = %dec_label_pc_211f3
  %v2_2121d = call i32 @unknown_4230f(i32 %arg1, i32 %arg2)
  %v4_21222 = trunc i32 %v2_2121d to i8
  %v5_21222 = icmp eq i8 %v4_21222, 0
  br i1 %v5_21222, label %dec_label_pc_2122d, label %dec_label_pc_21226

dec_label_pc_21226:                               ; preds = %dec_label_pc_21210
  store i32 2, i32* @eax, align 8
  br label %dec_label_pc_21232

dec_label_pc_2122d:                               ; preds = %dec_label_pc_21210
  store i32 5, i32* @eax, align 8
  br label %dec_label_pc_21232

dec_label_pc_21232:                               ; preds = %dec_label_pc_2122d, %dec_label_pc_21226, %dec_label_pc_21209, %dec_label_pc_211ec
  %v2_2123c5 = phi i32 [ 5, %dec_label_pc_2122d ], [ 2, %dec_label_pc_21226 ], [ 1, %dec_label_pc_21209 ], [ 0, %dec_label_pc_211ec ]
  br i1 true, label %bb, label %dec_label_pc_2123e

bb:                                               ; preds = %dec_label_pc_21232
  %v1_2123c = call i32 @function_21243()
  br label %dec_label_pc_2123e

dec_label_pc_2123e:                               ; preds = %bb, %dec_label_pc_21232
  %v2_2123c = phi i32 [ %v1_2123c, %bb ], [ %v2_2123c5, %dec_label_pc_21232 ]
  ret i32 %v2_2123c
}

define i32 @function_21243() local_unnamed_addr {
dec_label_pc_21243:
  %v0_21244 = load i32, i32* @eax, align 8
  ret i32 %v0_21244
}

define i32 @_ZNK5boost9date_time11int_adapterIxEmiIxEES2_RKNS1_IT_EE(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21246:
  %tmp112 = ptrtoint i32* %arg2 to i32
  %v1_21271 = call i32 @unknown_48bba(i32 %tmp112)
  %v4_21276 = trunc i32 %v1_21271 to i8
  %v5_21276 = icmp eq i8 %v4_21276, 0
  %v1_21278 = icmp eq i1 %v5_21276, false
  br i1 %v1_21278, label %dec_label_pc_21295, label %dec_label_pc_2127a

dec_label_pc_2127a:                               ; preds = %dec_label_pc_21246
  %v1_21280 = call i32 @unknown_48bba(i32 %arg3)
  br label %dec_label_pc_21295

dec_label_pc_21295:                               ; preds = %dec_label_pc_2127a, %dec_label_pc_21246
  %v1_212a3 = call i32 @unknown_48c0e(i32 %tmp112)
  %v4_212a8 = trunc i32 %v1_212a3 to i8
  %v5_212a8 = icmp eq i8 %v4_212a8, 0
  %v1_212aa = icmp eq i1 %v5_212a8, false
  br i1 %v1_212aa, label %dec_label_pc_212c7, label %dec_label_pc_212ac

dec_label_pc_212ac:                               ; preds = %dec_label_pc_21295
  %v1_212b2 = call i32 @unknown_48c0e(i32 %arg3)
  %v4_212b7 = trunc i32 %v1_212b2 to i8
  %v5_212b7 = icmp ne i8 %v4_212b7, 0
  %phitmp121 = icmp eq i1 %v5_212b7, false
  br label %dec_label_pc_212c7

dec_label_pc_212c7:                               ; preds = %dec_label_pc_212ac, %dec_label_pc_21295
  %storemerge = phi i1 [ false, %dec_label_pc_21295 ], [ %phitmp121, %dec_label_pc_212ac ]
  br i1 %storemerge, label %dec_label_pc_212de, label %dec_label_pc_212cb

dec_label_pc_212cb:                               ; preds = %dec_label_pc_212c7
  %v1_212d1 = call i32 @unknown_41f92(i32 %arg1)
  ret i32 %v1_212d1

dec_label_pc_212de:                               ; preds = %dec_label_pc_212c7
  %v2_212e4 = load i32, i32* %arg2, align 4
  %v1_212ed = call i32 @unknown_4239c(i32 %v2_212e4)
  store i32 %arg3, i32* @eax, align 8
  %v1_212fc = call i32 @function_35558(i32 %arg3)
  ret i32 %v1_212fc

; uselistorder directives
  uselistorder i32 (i32)* @unknown_48c0e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_48bba, { 1, 0 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
}

define i32 @function_21302(i32 %arg1) local_unnamed_addr {
dec_label_pc_21302:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_21304 = load i32, i32* @edx, align 4
  %v1_21308 = call i32 @unknown_4239c(i32 %v0_21304)
  %v4_2130d = trunc i32 %v1_21308 to i8
  %v5_2130d = icmp eq i8 %v4_2130d, 0
  %v1_2130f = icmp eq i1 %v5_2130d, false
  br i1 %v1_2130f, label %dec_label_pc_21350, label %dec_label_pc_21311

dec_label_pc_21311:                               ; preds = %dec_label_pc_21302
  %v0_21311 = load i32, i32* @ebp, align 4
  %v1_21311 = add i32 %v0_21311, -32
  %v2_21311 = inttoptr i32 %v1_21311 to i32*
  %v3_21311 = load i32, i32* %v2_21311, align 4
  %v1_21314 = add i32 %v3_21311, 4
  %v2_21314 = inttoptr i32 %v1_21314 to i32*
  %v3_21314 = load i32, i32* %v2_21314, align 4
  store i32 %v3_21314, i32* @edx, align 4
  %v1_21317 = inttoptr i32 %v3_21311 to i32*
  %v2_21317 = load i32, i32* %v1_21317, align 4
  %v2_21320 = call i32 @unknown_48c79(i32 %v2_21317, i32 %v3_21314)
  %v4_21325 = trunc i32 %v2_21320 to i8
  %v5_21325 = icmp eq i8 %v4_21325, 0
  br i1 %v5_21325, label %dec_label_pc_2134b, label %dec_label_pc_21329

dec_label_pc_21329:                               ; preds = %dec_label_pc_21311
  %v0_21329 = load i32, i32* @ebp, align 4
  %v1_21329 = add i32 %v0_21329, -36
  %v2_21329 = inttoptr i32 %v1_21329 to i32*
  %v3_21329 = load i32, i32* %v2_21329, align 4
  store i32 %v3_21329, i32* @eax, align 8
  %v1_2132f = call i32 @function_35558(i32 %v3_21329)
  %v0_21337 = load i32, i32* @edx, align 4
  %v2_2133b = call i32 @unknown_48c79(i32 %v1_2132f, i32 %v0_21337)
  %v4_21340 = trunc i32 %v2_2133b to i8
  %v5_21340 = icmp eq i8 %v4_21340, 0
  br i1 %v5_21340, label %dec_label_pc_2134b, label %dec_label_pc_21350

dec_label_pc_2134b:                               ; preds = %dec_label_pc_21329, %dec_label_pc_21311
  br label %dec_label_pc_21350

dec_label_pc_21350:                               ; preds = %dec_label_pc_21302, %dec_label_pc_21329, %dec_label_pc_2134b
  %storemerge = phi i1 [ true, %dec_label_pc_2134b ], [ false, %dec_label_pc_21329 ], [ false, %dec_label_pc_21302 ]
  %v0_21367 = load i32, i32* @ebp, align 4
  br i1 %storemerge, label %dec_label_pc_21367, label %dec_label_pc_21354

dec_label_pc_21354:                               ; preds = %dec_label_pc_21350
  %v1_21354 = add i32 %v0_21367, -28
  %v2_21354 = inttoptr i32 %v1_21354 to i32*
  %v3_21354 = load i32, i32* %v2_21354, align 4
  %v1_2135a = call i32 @unknown_41f92(i32 %v3_21354)
  br label %dec_label_pc_2141b

dec_label_pc_21367:                               ; preds = %dec_label_pc_21350
  %v1_21367 = add i32 %v0_21367, -32
  %v2_21367 = inttoptr i32 %v1_21367 to i32*
  %v3_21367 = load i32, i32* %v2_21367, align 4
  %v1_2136d = call i32 @unknown_48cdc(i32 %v3_21367)
  %v4_21372 = trunc i32 %v1_2136d to i8
  %v5_21372 = icmp eq i8 %v4_21372, 0
  %v0_2138b = load i32, i32* @ebp, align 4
  br i1 %v5_21372, label %dec_label_pc_2138b, label %dec_label_pc_21376

dec_label_pc_21376:                               ; preds = %dec_label_pc_21367
  %v1_21376 = add i32 %v0_2138b, -28
  %v2_21376 = inttoptr i32 %v1_21376 to i32*
  %v3_21376 = load i32, i32* %v2_21376, align 4
  store i32 %v3_21376, i32* %ecx.global-to-local, align 8
  %v1_21379 = add i32 %v0_2138b, -32
  %v2_21379 = inttoptr i32 %v1_21379 to i32*
  %v3_21379 = load i32, i32* %v2_21379, align 4
  %v1_2137c = add i32 %v3_21379, 4
  %v2_2137c = inttoptr i32 %v1_2137c to i32*
  %v3_2137c = load i32, i32* %v2_2137c, align 4
  store i32 %v3_2137c, i32* %edx.global-to-local, align 4
  %v1_2137f = inttoptr i32 %v3_21379 to i32*
  %v2_2137f = load i32, i32* %v1_2137f, align 4
  %v2_21381 = inttoptr i32 %v3_21376 to i32*
  store i32 %v2_2137f, i32* %v2_21381, align 4
  %v0_21383 = load i32, i32* %edx.global-to-local, align 4
  %v1_21383 = load i32, i32* %ecx.global-to-local, align 8
  %v2_21383 = add i32 %v1_21383, 4
  %v3_21383 = inttoptr i32 %v2_21383 to i32*
  store i32 %v0_21383, i32* %v3_21383, align 4
  br label %dec_label_pc_2141b

dec_label_pc_2138b:                               ; preds = %dec_label_pc_21367
  %v1_2138b = add i32 %v0_2138b, -36
  %v2_2138b = inttoptr i32 %v1_2138b to i32*
  %v3_2138b = load i32, i32* %v2_2138b, align 4
  store i32 %v3_2138b, i32* @eax, align 8
  %v1_21391 = call i32 @function_35558(i32 %v3_2138b)
  %v1_2139d = call i32 @unknown_4239c(i32 %v1_21391)
  %v4_213a2 = trunc i32 %v1_2139d to i8
  %v5_213a2 = icmp eq i8 %v4_213a2, 0
  %v0_213b6 = load i32, i32* @ebp, align 4
  br i1 %v5_213a2, label %dec_label_pc_213b6, label %dec_label_pc_213a6

dec_label_pc_213a6:                               ; preds = %dec_label_pc_2138b
  %v1_213a6 = add i32 %v0_213b6, -28
  %v2_213a6 = inttoptr i32 %v1_213a6 to i32*
  %v3_213a6 = load i32, i32* %v2_213a6, align 4
  %v1_213ac = call i32 @unknown_41fdf(i32 %v3_213a6)
  br label %dec_label_pc_2141b

dec_label_pc_213b6:                               ; preds = %dec_label_pc_2138b
  %v1_213b6 = add i32 %v0_213b6, -36
  %v2_213b6 = inttoptr i32 %v1_213b6 to i32*
  %v3_213b6 = load i32, i32* %v2_213b6, align 4
  store i32 %v3_213b6, i32* @eax, align 8
  %v1_213bc = call i32 @function_35558(i32 %v3_213b6)
  %v0_213c4 = load i32, i32* @edx, align 4
  %v2_213c8 = call i32 @unknown_48c79(i32 %v1_213bc, i32 %v0_213c4)
  %v4_213cd = trunc i32 %v2_213c8 to i8
  %v5_213cd = icmp eq i8 %v4_213cd, 0
  %v0_213e1 = load i32, i32* @ebp, align 4
  br i1 %v5_213cd, label %dec_label_pc_213e1, label %dec_label_pc_213d1

dec_label_pc_213d1:                               ; preds = %dec_label_pc_213b6
  %v1_213d1 = add i32 %v0_213e1, -28
  %v2_213d1 = inttoptr i32 %v1_213d1 to i32*
  %v3_213d1 = load i32, i32* %v2_213d1, align 4
  %v1_213d7 = call i32 @unknown_42026(i32 %v3_213d1)
  br label %dec_label_pc_2141b

dec_label_pc_213e1:                               ; preds = %dec_label_pc_213b6
  %v1_213e1 = add i32 %v0_213e1, -32
  %v2_213e1 = inttoptr i32 %v1_213e1 to i32*
  %v3_213e1 = load i32, i32* %v2_213e1, align 4
  %v1_213e4 = inttoptr i32 %v3_213e1 to i32*
  %v2_213e4 = load i32, i32* %v1_213e4, align 4
  store i32 %v2_213e4, i32* @ebx, align 4
  %v1_213e6 = add i32 %v3_213e1, 4
  %v2_213e6 = inttoptr i32 %v1_213e6 to i32*
  %v3_213e6 = load i32, i32* %v2_213e6, align 4
  store i32 %v3_213e6, i32* %esi.global-to-local, align 4
  %v2_213e9 = add i32 %v0_213e1, -48
  %v3_213e9 = inttoptr i32 %v2_213e9 to i32*
  store i32 %v2_213e4, i32* %v3_213e9, align 4
  %v0_213ec = load i32, i32* %esi.global-to-local, align 4
  %v1_213ec = load i32, i32* @ebp, align 4
  %v2_213ec = add i32 %v1_213ec, -44
  %v3_213ec = inttoptr i32 %v2_213ec to i32*
  store i32 %v0_213ec, i32* %v3_213ec, align 4
  %v0_213ef = load i32, i32* @ebp, align 4
  %v1_213ef = add i32 %v0_213ef, -36
  %v2_213ef = inttoptr i32 %v1_213ef to i32*
  %v3_213ef = load i32, i32* %v2_213ef, align 4
  store i32 %v3_213ef, i32* @eax, align 8
  %v1_213f5 = call i32 @function_35558(i32 %v3_213ef)
  %v0_213fa = load i32, i32* @ebp, align 4
  %v1_213fa = add i32 %v0_213fa, -48
  %v2_213fa = inttoptr i32 %v1_213fa to i32*
  %v3_213fa = load i32, i32* %v2_213fa, align 4
  %v1_213fd = add i32 %v0_213fa, -44
  %v2_213fd = inttoptr i32 %v1_213fd to i32*
  %v3_213fd = load i32, i32* %v2_213fd, align 4
  %v2_21400 = sub i32 %v3_213fa, %v1_213f5
  %v7_21400 = icmp ult i32 %v3_213fa, %v1_213f5
  store i32 %v2_21400, i32* @ebx, align 4
  %v1_21402 = load i32, i32* @edx, align 4
  %v3_21402 = zext i1 %v7_21400 to i32
  %v4_21402 = sub i32 %v3_213fd, %v1_21402
  %v5_21402 = add i32 %v4_21402, %v3_21402
  store i32 %v5_21402, i32* %esi.global-to-local, align 4
  store i32 %v5_21402, i32* %edx.global-to-local, align 4
  %v1_21410 = add i32 %v0_213fa, -28
  %v2_21410 = inttoptr i32 %v1_21410 to i32*
  %v3_21410 = load i32, i32* %v2_21410, align 4
  %v3_21416 = call i32 @function_3b444(i32 %v3_21410, i32 %v2_21400, i32 %v5_21402)
  br label %dec_label_pc_2141b

dec_label_pc_2141b:                               ; preds = %dec_label_pc_213e1, %dec_label_pc_213d1, %dec_label_pc_213a6, %dec_label_pc_21376, %dec_label_pc_21354
  %v0_2141b = load i32, i32* @ebp, align 4
  %v1_2141b = add i32 %v0_2141b, -28
  %v2_2141b = inttoptr i32 %v1_2141b to i32*
  %v3_2141b = load i32, i32* %v2_2141b, align 4
  store i32 %v3_2141b, i32* @eax, align 8
  %v1_2141e = add i32 %v0_2141b, -12
  %v2_2141e = inttoptr i32 %v1_2141e to i32*
  %v3_2141e = load i32, i32* %v2_2141e, align 4
  store i32 %v3_2141e, i32* %esi.global-to-local, align 4
  %v1_21421 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21421 = xor i32 %v1_21421, %v3_2141e
  %v3_21421 = icmp eq i32 %v2_21421, 0
  store i32 %v2_21421, i32* %esi.global-to-local, align 4
  br i1 %v3_21421, label %bb, label %dec_label_pc_2142a

bb:                                               ; preds = %dec_label_pc_2141b
  %v1_21428 = call i32 @function_2142f()
  br label %dec_label_pc_2142a

dec_label_pc_2142a:                               ; preds = %bb, %dec_label_pc_2141b
  %v2_21428 = phi i32 [ %v1_21428, %bb ], [ %v3_2141b, %dec_label_pc_2141b ]
  ret i32 %v2_21428

; uselistorder directives
  uselistorder i32 %v3_213fa, { 1, 0 }
  uselistorder i32 %v1_213f5, { 1, 0 }
  uselistorder i32 %v0_213e1, { 0, 2, 1 }
  uselistorder i32 %v0_213b6, { 1, 0 }
  uselistorder i32 %v0_2138b, { 2, 1, 0 }
  uselistorder i32 %v0_21367, { 1, 0 }
  uselistorder i32 (i32)* @function_35558, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32)* @unknown_48c79, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_4239c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21350, { 2, 1, 0 }
}

define i32 @function_2142f() local_unnamed_addr {
dec_label_pc_2142f:
  %v0_2142f = load i32, i32* @ebp, align 4
  %v1_2142f = add i32 %v0_2142f, -8
  %v1_21432 = inttoptr i32 %v1_2142f to i32*
  %v2_21432 = load i32, i32* %v1_21432, align 4
  store i32 %v2_21432, i32* @ebx, align 4
  %v1_21434 = inttoptr i32 %v0_2142f to i32*
  %v2_21434 = load i32, i32* %v1_21434, align 4
  store i32 %v2_21434, i32* @ebp, align 4
  %v0_21435 = load i32, i32* @eax, align 8
  ret i32 %v0_21435
}

define i32 @_ZN5boost9date_time22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiE9as_numberENS0_11int_adapterIxEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21438:
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 4
  %v2_21462 = call i32 @function_31a91(i32 %arg1, i32 %arg2)
  store i32 %v2_21462, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_21473

bb:                                               ; preds = %dec_label_pc_21438
  %v1_21471 = call i32 @function_21478()
  br label %dec_label_pc_21473

dec_label_pc_21473:                               ; preds = %bb, %dec_label_pc_21438
  %v2_21471 = phi i32 [ %v1_21471, %bb ], [ %v2_21462, %dec_label_pc_21438 ]
  ret i32 %v2_21471

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21478() local_unnamed_addr {
dec_label_pc_21478:
  %v0_21479 = load i32, i32* @eax, align 8
  ret i32 %v0_21479
}

define i32 @_ZN5boost9date_time11int_adapterIjE6is_infEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_2147a:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_21491 = ptrtoint i32* %stack_var_-20 to i32
  %v15_214aa = icmp eq i32 %v2_21491, %arg1
  br i1 %v15_214aa, label %dec_label_pc_214d9, label %dec_label_pc_214af

dec_label_pc_214af:                               ; preds = %dec_label_pc_2147a
  %v2_214af = ptrtoint i32* %stack_var_-24 to i32
  %v15_214c8 = icmp eq i32 %v2_214af, %arg1
  %. = zext i1 %v15_214c8 to i32
  br label %dec_label_pc_214d9

dec_label_pc_214d9:                               ; preds = %dec_label_pc_214af, %dec_label_pc_2147a
  %storemerge = phi i32 [ 1, %dec_label_pc_2147a ], [ %., %dec_label_pc_214af ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_214e5

bb:                                               ; preds = %dec_label_pc_214d9
  %v1_214e3 = call i32 @function_214ea()
  br label %dec_label_pc_214e5

dec_label_pc_214e5:                               ; preds = %bb, %dec_label_pc_214d9
  %v2_214e3 = phi i32 [ %v1_214e3, %bb ], [ %storemerge, %dec_label_pc_214d9 ]
  ret i32 %v2_214e3
}

define i32 @function_214ea() local_unnamed_addr {
dec_label_pc_214ea:
  %v0_214eb = load i32, i32* @eax, align 8
  ret i32 %v0_214eb
}

define i32 @_ZN5boost9date_time11int_adapterIjE15is_not_a_numberEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_214ec:
  %stack_var_-20 = alloca i32, align 4
  %v2_21503 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_21503, i32* @eax, align 8
  %v1_21509 = call i32 @function_3af79(i32 %v2_21503)
  %v0_2150e = load i32, i32* @esp, align 4
  %v5_2150e = icmp ult i32 %v0_2150e, 4
  store i1 %v5_2150e, i1* @cf, align 1
  store i32 %v2_21503, i32* @eax, align 8
  %v1_21517 = call i32 @function_3b046(i32 %v2_21503)
  %v15_2151c = icmp eq i32 %v1_21517, %arg1
  %v1_2151f = zext i1 %v15_2151c to i32
  %v3_2151f = and i32 %v1_21517, -256
  %v4_2151f = or i32 %v1_2151f, %v3_2151f
  store i32 %v4_2151f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2152e

bb:                                               ; preds = %dec_label_pc_214ec
  %v1_2152c = call i32 @function_21533()
  br label %dec_label_pc_2152e

dec_label_pc_2152e:                               ; preds = %bb, %dec_label_pc_214ec
  %v2_2152c = phi i32 [ %v1_2152c, %bb ], [ %v4_2151f, %dec_label_pc_214ec ]
  ret i32 %v2_2152c

; uselistorder directives
  uselistorder i32 %v1_21517, { 1, 0 }
}

define i32 @function_21533() local_unnamed_addr {
dec_label_pc_21533:
  %v0_21534 = load i32, i32* @eax, align 8
  ret i32 %v0_21534
}

define i32 @_ZNK5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEE10is_specialEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21536:
  %v1_2154d = call i32 @unknown_490c6(i32 %arg1)
  %v4_21552 = trunc i32 %v1_2154d to i8
  %v5_21552 = icmp eq i8 %v4_21552, 0
  br i1 %v5_21552, label %dec_label_pc_21568, label %dec_label_pc_21556

dec_label_pc_21556:                               ; preds = %dec_label_pc_21536
  %v1_2155c = call i32 @unknown_48eaa(i32 %arg1)
  br label %dec_label_pc_21568

dec_label_pc_21568:                               ; preds = %dec_label_pc_21536, %dec_label_pc_21556
  %storemerge = phi i32 [ %v1_2155c, %dec_label_pc_21556 ], [ 0, %dec_label_pc_21536 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_21574

bb:                                               ; preds = %dec_label_pc_21568
  %v1_21572 = call i32 @function_21579()
  br label %dec_label_pc_21574

dec_label_pc_21574:                               ; preds = %bb, %dec_label_pc_21568
  %v2_21572 = phi i32 [ %v1_21572, %bb ], [ %storemerge, %dec_label_pc_21568 ]
  ret i32 %v2_21572

; uselistorder directives
  uselistorder label %dec_label_pc_21568, { 1, 0 }
}

define i32 @function_21576(i32 %arg1) local_unnamed_addr {
dec_label_pc_21576:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21579() local_unnamed_addr {
dec_label_pc_21579:
  %v0_2157a = load i32, i32* @eax, align 8
  ret i32 %v0_2157a
}

define i32 @_ZNK5boost9date_time13time_durationINS_10posix_time13time_durationENS0_22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiEEE7get_repEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2157c:
  %ecx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* %ecx.global-to-local, align 8
  %v1_2159f = add i32 %arg2, 4
  %v2_2159f = inttoptr i32 %v1_2159f to i32*
  %v3_2159f = load i32, i32* %v2_2159f, align 4
  %v1_215a2 = inttoptr i32 %arg2 to i32*
  %v2_215a2 = load i32, i32* %v1_215a2, align 4
  store i32 %v2_215a2, i32* %arg1, align 4
  %v1_215a6 = load i32, i32* %ecx.global-to-local, align 8
  %v2_215a6 = add i32 %v1_215a6, 4
  %v3_215a6 = inttoptr i32 %v2_215a6 to i32*
  store i32 %v3_2159f, i32* %v3_215a6, align 4
  store i32 %tmp102, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_215b8

bb:                                               ; preds = %dec_label_pc_2157c
  %v3_215b6 = call i32 @function_215bd(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_215b8

dec_label_pc_215b8:                               ; preds = %bb, %dec_label_pc_2157c
  %v4_215b6 = phi i32 [ %v3_215b6, %bb ], [ %tmp102, %dec_label_pc_2157c ]
  ret i32 %v4_215b6

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_215bd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_215bd:
  %v0_215be = load i32, i32* @eax, align 8
  ret i32 %v0_215be
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_215c2:
  ret i32 %arg1
}

define i32 @function_215f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_215f0:
  %v0_215f0 = load i32, i32* @ebx, align 4
  %v1_215f0 = add i32 %v0_215f0, -1065098171
  %v2_215f0 = inttoptr i32 %v1_215f0 to i8*
  %v3_215f0 = load i8, i8* %v2_215f0, align 1
  %v4_215f0 = load i32, i32* @ecx, align 8
  %v5_215f0 = trunc i32 %v4_215f0 to i8
  %v6_215f0 = add i8 %v5_215f0, %v3_215f0
  store i8 %v6_215f0, i8* %v2_215f0, align 1
  %v0_215f6 = load i32, i32* @ecx, align 8
  %v1_215f6 = add i32 %v0_215f6, -2014829564
  %v2_215f6 = inttoptr i32 %v1_215f6 to i8*
  %v3_215f6 = load i8, i8* %v2_215f6, align 1
  %v5_215f6 = trunc i32 %v0_215f6 to i8
  %v6_215f6 = or i8 %v3_215f6, %v5_215f6
  store i8 %v6_215f6, i8* %v2_215f6, align 1
  %v0_215fe = load i32, i32* @ebx, align 4
  %v1_215fe = add i32 %v0_215fe, 13100101
  %v2_215fe = inttoptr i32 %v1_215fe to i8*
  %v3_215fe = load i8, i8* %v2_215fe, align 1
  %v4_215fe = load i32, i32* @ecx, align 8
  %v5_215fe = trunc i32 %v4_215fe to i8
  %v6_215fe = add i8 %v5_215fe, %v3_215fe
  store i8 %v6_215fe, i8* %v2_215fe, align 1
  %v0_21608 = load i32, i32* @ebp, align 4
  %v1_21608 = add i32 %v0_21608, -28
  %v2_21608 = inttoptr i32 %v1_21608 to i32*
  %v3_21608 = load i32, i32* %v2_21608, align 4
  %v1_2160b = add i32 %v3_21608, 8
  %v2_2160b = inttoptr i32 %v1_2160b to i32*
  store i32 ptrtoint (i32* @global_var_3f910.2843 to i32), i32* %v2_2160b, align 4
  %v0_21612 = load i32, i32* @ebp, align 4
  %v1_21612 = add i32 %v0_21612, -12
  %v2_21612 = inttoptr i32 %v1_21612 to i32*
  %v3_21612 = load i32, i32* %v2_21612, align 4
  %v1_21615 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21615 = xor i32 %v1_21615, %v3_21612
  %v3_21615 = icmp eq i32 %v2_21615, 0
  store i32 %v2_21615, i32* @eax, align 8
  br i1 %v3_21615, label %bb, label %dec_label_pc_2161e

bb:                                               ; preds = %dec_label_pc_215f0
  %v1_2161c = call i32 @function_21623()
  br label %dec_label_pc_2161e

dec_label_pc_2161e:                               ; preds = %bb, %dec_label_pc_215f0
  %v2_2161c = phi i32 [ %v1_2161c, %bb ], [ %v2_21615, %dec_label_pc_215f0 ]
  ret i32 %v2_2161c
}

define i32 @function_21623() local_unnamed_addr {
dec_label_pc_21623:
  %v0_21624 = load i32, i32* @eax, align 8
  ret i32 %v0_21624
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21626:
  store i32 %arg1, i32* @eax, align 8
  %v2_21651 = call i32 @function_36556(i32 %arg1, i32 %arg2)
  %v1_21659 = add i32 %arg1, 28
  store i32 %v1_21659, i32* @eax, align 8
  %v1_2165f = call i32 @function_3bf8a(i32 %v1_21659)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_21668(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21668:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_21668 = load i32, i32* @eax, align 8
  %v1_21668 = load i32, i32* @edi, align 4
  %v2_21668 = mul i32 %v1_21668, 8
  %v3_21668 = add i32 %v0_21668, 1166737411
  %v4_21668 = add i32 %v3_21668, %v2_21668
  %v5_21668 = inttoptr i32 %v4_21668 to i8*
  %v6_21668 = load i8, i8* %v5_21668, align 1
  %v7_21668 = load i32, i32* @ebx, align 4
  %v8_21668 = trunc i32 %v7_21668 to i8
  %v9_21668 = add i8 %v8_21668, %v6_21668
  %v14_21668 = icmp ult i8 %v9_21668, %v6_21668
  store i1 %v14_21668, i1* %cf.global-to-local, align 1
  store i8 %v9_21668, i8* %v5_21668, align 1
  %v0_21671 = load i32, i32* @eax, align 8
  %v1_21671 = add i32 %v0_21671, 1
  store i32 %v1_21671, i32* %eax.global-to-local, align 8
  %v1_21672 = add i32 %v0_21671, -1962933255
  %v2_21672 = inttoptr i32 %v1_21672 to i8*
  %v3_21672 = load i8, i8* %v2_21672, align 1
  %v4_21672 = load i32, i32* @ebx, align 4
  %v5_21672 = udiv i32 %v4_21672, 256
  %v6_21672 = trunc i32 %v5_21672 to i8
  %v7_21672 = or i8 %v6_21672, %v3_21672
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v7_21672, i8* %v2_21672, align 1
  %v0_21678 = load i32, i32* @ebp, align 4
  %v1_21678 = add i32 %v0_21678, 1
  store i32 %v1_21678, i32* @ebp, align 4
  %v0_2167b = load i32, i32* %eax.global-to-local, align 8
  %v1_2167b = add i32 %v0_2167b, 1
  %v2_2167c = load i1, i1* %cf.global-to-local, align 1
  %v3_2167c = zext i1 %v2_2167c to i32
  %v4_2167c = add i32 %v0_2167b, 57
  %v5_2167c = add i32 %v4_2167c, %v3_2167c
  %v31_2167c = urem i32 %v5_2167c, 256
  %v33_2167c = and i32 %v1_2167b, -256
  %v34_2167c = or i32 %v31_2167c, %v33_2167c
  store i32 %v34_2167c, i32* %eax.global-to-local, align 8
  %v2_2167f = inttoptr i32 %v34_2167c to i32*
  %v3_2167f = load i32, i32* %v2_2167f, align 4
  %v4_2167f = add i32 %v34_2167c, %v3_2167f
  store i32 %v4_2167f, i32* %eax.global-to-local, align 8
  %v1_21681 = add i32 %v0_21678, -31
  %v2_21681 = inttoptr i32 %v1_21681 to i32*
  %v3_21681 = load i32, i32* %v2_21681, align 4
  store i32 %v3_21681, i32* %eax.global-to-local, align 8
  %v1_21684 = add i32 %v3_21681, 8
  %v1_21687 = add i32 %v0_21678, -27
  %v2_21687 = inttoptr i32 %v1_21687 to i32*
  %v3_21687 = load i32, i32* %v2_21687, align 4
  %v1_2168a = add i32 %v3_21687, 8
  %v5_2168a = icmp ugt i32 %v3_21687, -9
  store i1 %v5_2168a, i1* %cf.global-to-local, align 1
  store i32 %v1_2168a, i32* %eax.global-to-local, align 8
  %v2_21694 = call i32 @function_3164c(i32 %v1_2168a, i32 %v1_21684)
  store i32 %v2_21694, i32* %eax.global-to-local, align 8
  %v0_21699 = call i32 @function_216c0()
  store i32 %v0_21699, i32* %eax.global-to-local, align 8
  ret i32 %v0_21699

; uselistorder directives
  uselistorder i8 %v6_21668, { 1, 0 }
}

define i32 @function_2169c() local_unnamed_addr {
dec_label_pc_2169c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2169c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2169c
}

define i32 @function_216c0() local_unnamed_addr {
dec_label_pc_216c0:
  %v0_216c0 = load i32, i32* @ebp, align 4
  %v1_216c0 = add i32 %v0_216c0, -12
  %v2_216c0 = inttoptr i32 %v1_216c0 to i32*
  %v3_216c0 = load i32, i32* %v2_216c0, align 4
  %v1_216c3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_216c3 = xor i32 %v1_216c3, %v3_216c0
  %v3_216c3 = icmp eq i32 %v2_216c3, 0
  store i32 %v2_216c3, i32* @eax, align 8
  br i1 %v3_216c3, label %bb, label %dec_label_pc_216cc

bb:                                               ; preds = %dec_label_pc_216c0
  %v1_216ca = call i32 @function_216d1()
  br label %dec_label_pc_216cc

dec_label_pc_216cc:                               ; preds = %bb, %dec_label_pc_216c0
  %v2_216ca = phi i32 [ %v1_216ca, %bb ], [ %v2_216c3, %dec_label_pc_216c0 ]
  ret i32 %v2_216ca
}

define i32 @function_216d1() local_unnamed_addr {
dec_label_pc_216d1:
  %v0_216d6 = load i32, i32* @eax, align 8
  ret i32 %v0_216d6
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_216d7:
  %v2_216f7 = load i32, i32* %arg2, align 4
  %v2_216fc = add i32 %arg1, 8
  %v3_216fc = inttoptr i32 %v2_216fc to i32*
  store i32 %v2_216f7, i32* %v3_216fc, align 4
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2170e

bb:                                               ; preds = %dec_label_pc_216d7
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_2170c = call i32 @function_21713(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_2170e

dec_label_pc_2170e:                               ; preds = %bb, %dec_label_pc_216d7
  %v4_2170c = phi i32 [ %v3_2170c, %bb ], [ %arg1, %dec_label_pc_216d7 ]
  ret i32 %v4_2170c

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_21713(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21713:
  %v0_21714 = load i32, i32* @eax, align 8
  ret i32 %v0_21714
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21715:
  %v0_21727 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_21727
}

define i32 @function_2172e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2172e:
  %v0_2172e = load i32, i32* @ebp, align 4
  %v1_2172e = add i32 %v0_2172e, 1
  store i32 %v1_2172e, i32* @ebp, align 4
  %v1_21732 = add i32 %v0_2172e, -31
  %v2_21732 = inttoptr i32 %v1_21732 to i32*
  %v3_21732 = load i32, i32* %v2_21732, align 4
  %v1_21735 = inttoptr i32 %v3_21732 to i32*
  %v2_21735 = load i32, i32* %v1_21735, align 4
  %v1_21737 = add i32 %v0_2172e, -27
  %v2_21737 = inttoptr i32 %v1_21737 to i32*
  %v3_21737 = load i32, i32* %v2_21737, align 4
  %v2_2173a = add i32 %v3_21737, 12
  %v3_2173a = inttoptr i32 %v2_2173a to i32*
  store i32 %v2_21735, i32* %v3_2173a, align 4
  %v0_2173d = load i32, i32* @ebp, align 4
  %v1_2173d = add i32 %v0_2173d, -28
  %v2_2173d = inttoptr i32 %v1_2173d to i32*
  %v3_2173d = load i32, i32* %v2_2173d, align 4
  store i32 %v3_2173d, i32* @eax, align 8
  %v1_21740 = add i32 %v0_2173d, -12
  %v2_21740 = inttoptr i32 %v1_21740 to i32*
  %v3_21740 = load i32, i32* %v2_21740, align 4
  %v1_21743 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21743 = icmp eq i32 %v1_21743, %v3_21740
  br i1 %v3_21743, label %bb, label %dec_label_pc_2174c

bb:                                               ; preds = %dec_label_pc_2172e
  %v1_2174a = call i32 @function_21751()
  br label %dec_label_pc_2174c

dec_label_pc_2174c:                               ; preds = %bb, %dec_label_pc_2172e
  %v2_2174a = phi i32 [ %v1_2174a, %bb ], [ %v3_2173d, %dec_label_pc_2172e ]
  ret i32 %v2_2174a
}

define i32 @function_21751() local_unnamed_addr {
dec_label_pc_21751:
  %v0_21752 = load i32, i32* @eax, align 8
  ret i32 %v0_21752
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_21753:
  %v2_21773 = load i32, i32* %arg2, align 4
  %v2_21778 = add i32 %arg1, 16
  %v3_21778 = inttoptr i32 %v2_21778 to i32*
  store i32 %v2_21773, i32* %v3_21778, align 4
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2178a

bb:                                               ; preds = %dec_label_pc_21753
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_21788 = call i32 @function_2178f(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_2178a

dec_label_pc_2178a:                               ; preds = %bb, %dec_label_pc_21753
  %v4_21788 = phi i32 [ %v3_21788, %bb ], [ %arg1, %dec_label_pc_21753 ]
  ret i32 %v4_21788

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_2178f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2178f:
  %v0_21790 = load i32, i32* @eax, align 8
  ret i32 %v0_21790
}

define i32 @_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21792:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_217c4() local_unnamed_addr {
dec_label_pc_217c4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_217c4 = load i32, i32* %ecx.global-to-local, align 8
  %v1_217c4 = add i32 %v0_217c4, -532313149
  %v2_217c4 = inttoptr i32 %v1_217c4 to i32*
  %v3_217c4 = load i32, i32* %v2_217c4, align 4
  %v4_217c4 = add i32 %v3_217c4, -1
  store i32 %v4_217c4, i32* %v2_217c4, align 4
  %v0_217ca = load i32, i32* %eax.global-to-local, align 8
  %v0_217ce = load i32, i32* %ebx.global-to-local, align 4
  %v2_217d1 = call i32 @unknown_4934c(i32 %v0_217ce, i32 %v0_217ca)
  store i32 %v2_217d1, i32* %eax.global-to-local, align 8
  %v0_217d6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_217d6 = add i32 %v0_217d6, -28
  %v2_217d6 = inttoptr i32 %v1_217d6 to i32*
  %v3_217d6 = load i32, i32* %v2_217d6, align 4
  store i32 %v3_217d6, i32* %eax.global-to-local, align 8
  %v0_217d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_217d9 = inttoptr i32 %v3_217d6 to i32*
  store i32 %v0_217d9, i32* %v2_217d9, align 4
  %v0_217db = load i32, i32* %ebp.global-to-local, align 4
  %v1_217db = add i32 %v0_217db, -12
  %v2_217db = inttoptr i32 %v1_217db to i32*
  %v3_217db = load i32, i32* %v2_217db, align 4
  store i32 %v3_217db, i32* %eax.global-to-local, align 8
  %v1_217de = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_217de = xor i32 %v1_217de, %v3_217db
  %v3_217de = icmp eq i32 %v2_217de, 0
  store i32 %v2_217de, i32* @eax, align 8
  br i1 %v3_217de, label %bb, label %dec_label_pc_217e7

bb:                                               ; preds = %dec_label_pc_217c4
  %v1_217e5 = call i32 @function_21817()
  store i32 %v1_217e5, i32* @eax, align 8
  br label %dec_label_pc_217e7

dec_label_pc_217e7:                               ; preds = %bb, %dec_label_pc_217c4
  %v0_217e7 = call i32 @function_21812()
  store i32 %v0_217e7, i32* %eax.global-to-local, align 8
  ret i32 %v0_217e7
}

define i32 @function_217ea() local_unnamed_addr {
dec_label_pc_217ea:
  %eax.global-to-local = alloca i32, align 4
  %v0_217ea = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_217ea
}

define i32 @function_21812() local_unnamed_addr {
dec_label_pc_21812:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21817() local_unnamed_addr {
dec_label_pc_21817:
  %v0_2181c = load i32, i32* @eax, align 8
  ret i32 %v0_2181c
}

define i32 @_ZSt3minIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2181d:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2183d = inttoptr i32 %arg2 to i32*
  %v2_2183d = load i32, i32* %v1_2183d, align 4
  %v2_21842 = load i32, i32* %arg1, align 4
  %v7_21844 = icmp ult i32 %v2_2183d, %v2_21842
  %v1_21846 = icmp eq i1 %v7_21844, false
  %storemerge = select i1 %v1_21846, i32 %tmp102, i32 %arg2
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2185c

bb:                                               ; preds = %dec_label_pc_2181d
  %v1_2185a = call i32 @function_21861()
  br label %dec_label_pc_2185c

dec_label_pc_2185c:                               ; preds = %bb, %dec_label_pc_2181d
  %v2_2185a = phi i32 [ %v1_2185a, %bb ], [ %storemerge, %dec_label_pc_2181d ]
  ret i32 %v2_2185a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_21861() local_unnamed_addr {
dec_label_pc_21861:
  %v0_21862 = load i32, i32* @eax, align 8
  ret i32 %v0_21862
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21864:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp100, i32* %stack_var_-60, align 4
  store i32 0, i32* %arg1, align 4
  %v1_21892 = add i32 %tmp100, 4
  %v2_21892 = inttoptr i32 %v1_21892 to i32*
  store i32 0, i32* %v2_21892, align 4
  %v1_2189c = add i32 %tmp100, 8
  %v2_2189c = inttoptr i32 %v1_2189c to i32*
  store i32 0, i32* %v2_2189c, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_218af

bb:                                               ; preds = %dec_label_pc_21864
  %v1_218ad = load i32, i32* %stack_var_-60, align 4
  %v2_218ad = call i32 @function_218b4(i32 %v1_218ad)
  br label %dec_label_pc_218af

dec_label_pc_218af:                               ; preds = %bb, %dec_label_pc_21864
  %v3_218ad = phi i32 [ %v2_218ad, %bb ], [ 0, %dec_label_pc_21864 ]
  ret i32 %v3_218ad

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_218b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_218b4:
  %v0_218b5 = load i32, i32* @eax, align 8
  ret i32 %v0_218b5
}

define i32 @_ZSt11__addressofIcEPT_RS0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_218b6:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_218dc

bb:                                               ; preds = %dec_label_pc_218b6
  %v2_218da = call i32 @function_218e1(i32 %arg1)
  br label %dec_label_pc_218dc

dec_label_pc_218dc:                               ; preds = %bb, %dec_label_pc_218b6
  %v3_218da = phi i32 [ %v2_218da, %bb ], [ %arg1, %dec_label_pc_218b6 ]
  ret i32 %v3_218da
}

define i32 @function_218e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_218e1:
  %v0_218e2 = load i32, i32* @eax, align 8
  ret i32 %v0_218e2
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_218e4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_2190e = call i32 @unknown_4952e(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_2191f = add i32 %tmp103, 4
  %v2_2191f = inttoptr i32 %v1_2191f to i32*
  store i32 0, i32* %v2_2191f, align 4
  %v1_21929 = add i32 %tmp103, 8
  %v2_21929 = inttoptr i32 %v1_21929 to i32*
  store i32 0, i32* %v2_21929, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2193c

bb:                                               ; preds = %dec_label_pc_218e4
  %v1_2193a = call i32 @function_21941()
  br label %dec_label_pc_2193c

dec_label_pc_2193c:                               ; preds = %bb, %dec_label_pc_218e4
  %v2_2193a = phi i32 [ %v1_2193a, %bb ], [ 0, %dec_label_pc_218e4 ]
  ret i32 %v2_2193a

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_21941() local_unnamed_addr {
dec_label_pc_21941:
  %v0_21942 = load i32, i32* @eax, align 8
  ret i32 %v0_21942
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE19_M_range_initializeIPcEEvT_S5_St20forward_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21944:
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v2_2197b = call i32 @unknown_496ac(i32 %arg2, i32 %arg3)
  %v2_21990 = call i32 @unknown_43336(i32 %tmp107, i32 %v2_2197b)
  store i32 %v2_21990, i32* %arg1, align 4
  ret i32 %tmp107

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 0 }
}

define i32 @function_219a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_219a0:
  %v0_219a0 = load i32, i32* @ecx, align 8
  %v1_219a0 = add i32 %v0_219a0, -262863934
  %v2_219a0 = inttoptr i32 %v1_219a0 to i8*
  %v3_219a0 = load i8, i8* %v2_219a0, align 1
  %v5_219a0 = trunc i32 %v0_219a0 to i8
  %v6_219a0 = add i8 %v3_219a0, %v5_219a0
  store i8 %v6_219a0, i8* %v2_219a0, align 1
  %v0_219a6 = load i32, i32* @ebp, align 4
  %v1_219a6 = add i32 %v0_219a6, -28
  %v2_219a6 = inttoptr i32 %v1_219a6 to i32*
  %v3_219a6 = load i32, i32* %v2_219a6, align 4
  %v0_219a9 = load i32, i32* @edx, align 4
  %v2_219a9 = add i32 %v3_219a6, 8
  %v3_219a9 = inttoptr i32 %v2_219a9 to i32*
  store i32 %v0_219a9, i32* %v3_219a9, align 4
  %v0_219ac = load i32, i32* @ebp, align 4
  %v1_219ac = add i32 %v0_219ac, -28
  %v2_219ac = inttoptr i32 %v1_219ac to i32*
  %v3_219ac = load i32, i32* %v2_219ac, align 4
  store i32 %v3_219ac, i32* @eax, align 8
  %v1_219b2 = call i32 @function_3c68a(i32 %v3_219ac)
  %v0_219b7 = load i32, i32* @ebp, align 4
  %v1_219b7 = add i32 %v0_219b7, -28
  %v2_219b7 = inttoptr i32 %v1_219b7 to i32*
  %v3_219b7 = load i32, i32* %v2_219b7, align 4
  %v1_219ba = inttoptr i32 %v3_219b7 to i32*
  %v2_219ba = load i32, i32* %v1_219ba, align 4
  %v1_219c4 = add i32 %v0_219b7, -36
  %v2_219c4 = inttoptr i32 %v1_219c4 to i32*
  %v3_219c4 = load i32, i32* %v2_219c4, align 4
  %v1_219cb = add i32 %v0_219b7, -32
  %v2_219cb = inttoptr i32 %v1_219cb to i32*
  %v3_219cb = load i32, i32* %v2_219cb, align 4
  %v4_219d1 = call i32 @unknown_433bd(i32 %v3_219cb, i32 %v3_219c4, i32 %v2_219ba, i32 %v1_219b2)
  %v0_219d8 = load i32, i32* @ebp, align 4
  %v1_219d8 = add i32 %v0_219d8, -28
  %v2_219d8 = inttoptr i32 %v1_219d8 to i32*
  %v3_219d8 = load i32, i32* %v2_219d8, align 4
  %v2_219db = add i32 %v3_219d8, 4
  %v3_219db = inttoptr i32 %v2_219db to i32*
  store i32 %v4_219d1, i32* %v3_219db, align 4
  %v0_219de = load i32, i32* @ebp, align 4
  %v1_219de = add i32 %v0_219de, -12
  %v2_219de = inttoptr i32 %v1_219de to i32*
  %v3_219de = load i32, i32* %v2_219de, align 4
  %v1_219e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_219e1 = xor i32 %v1_219e1, %v3_219de
  %v3_219e1 = icmp eq i32 %v2_219e1, 0
  store i32 %v2_219e1, i32* @eax, align 8
  br i1 %v3_219e1, label %bb, label %dec_label_pc_219ea

bb:                                               ; preds = %dec_label_pc_219a0
  %v1_219e8 = call i32 @function_219ef()
  br label %dec_label_pc_219ea

dec_label_pc_219ea:                               ; preds = %bb, %dec_label_pc_219a0
  %v2_219e8 = phi i32 [ %v1_219e8, %bb ], [ %v2_219e1, %dec_label_pc_219a0 ]
  ret i32 %v2_219e8

; uselistorder directives
  uselistorder i32 %v0_219b7, { 1, 0, 2 }
}

define i32 @function_219ef() local_unnamed_addr {
dec_label_pc_219ef:
  %v0_219f0 = load i32, i32* @eax, align 8
  ret i32 %v0_219f0
}

define i32 @_ZNSt12_Vector_baseIc25zero_after_free_allocatorIcEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_219f2:
  %v10_21a0f = icmp eq i32 %arg2, 0
  br i1 %v10_21a0f, label %dec_label_pc_21a36, label %dec_label_pc_21a15

dec_label_pc_21a15:                               ; preds = %dec_label_pc_219f2
  %v3_21a2a = call i32 @unknown_497ba(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_21a36

dec_label_pc_21a36:                               ; preds = %dec_label_pc_219f2, %dec_label_pc_21a15
  %storemerge = phi i32 [ %v3_21a2a, %dec_label_pc_21a15 ], [ 0, %dec_label_pc_219f2 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_21a42

bb:                                               ; preds = %dec_label_pc_21a36
  %v1_21a40 = call i32 @function_21a47()
  br label %dec_label_pc_21a42

dec_label_pc_21a42:                               ; preds = %bb, %dec_label_pc_21a36
  %v2_21a40 = phi i32 [ %v1_21a40, %bb ], [ %storemerge, %dec_label_pc_21a36 ]
  ret i32 %v2_21a40

; uselistorder directives
  uselistorder label %dec_label_pc_21a36, { 1, 0 }
}

define i32 @function_21a47() local_unnamed_addr {
dec_label_pc_21a47:
  %v0_21a48 = load i32, i32* @eax, align 8
  ret i32 %v0_21a48
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21a4a:
  store i32 -1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_21a72

bb:                                               ; preds = %dec_label_pc_21a4a
  %v2_21a70 = call i32 @function_21a77(i32 %arg1)
  br label %dec_label_pc_21a72

dec_label_pc_21a72:                               ; preds = %bb, %dec_label_pc_21a4a
  %v3_21a70 = phi i32 [ %v2_21a70, %bb ], [ -1, %dec_label_pc_21a4a ]
  ret i32 %v3_21a70
}

define i32 @function_21a77(i32 %arg1) local_unnamed_addr {
dec_label_pc_21a77:
  %v0_21a78 = load i32, i32* @eax, align 8
  ret i32 %v0_21a78
}

define i32 @_ZSt22__uninitialized_copy_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21a79:
  %v15_21ad6112 = icmp eq i32 %arg1, %arg2
  %v1_21ad9113 = icmp eq i1 %v15_21ad6112, false
  %v5_21adc114 = icmp eq i1 %v1_21ad9113, false
  %v1_21ade115 = icmp eq i1 %v5_21adc114, false
  store i32 %arg3, i32* @eax, align 8
  br i1 %v1_21ade115, label %dec_label_pc_21aaa, label %dec_label_pc_21ae0

dec_label_pc_21aaa:                               ; preds = %dec_label_pc_21a79, %dec_label_pc_21aaa
  %storemerge117 = phi i32 [ %v4_21acf, %dec_label_pc_21aaa ], [ %arg3, %dec_label_pc_21a79 ]
  %stack_var_-32.0116 = phi i32 [ %v4_21acb, %dec_label_pc_21aaa ], [ %arg1, %dec_label_pc_21a79 ]
  %v1_21ab0 = call i32 @unknown_4332f(i32 %storemerge117)
  %v4_21acb = add i32 %stack_var_-32.0116, 1
  %v4_21acf = add i32 %storemerge117, 1
  %v15_21ad6 = icmp eq i32 %v4_21acb, %arg2
  %v1_21ad9 = icmp eq i1 %v15_21ad6, false
  %v5_21adc = icmp eq i1 %v1_21ad9, false
  %v1_21ade = icmp eq i1 %v5_21adc, false
  store i32 %v4_21acf, i32* @eax, align 8
  br i1 %v1_21ade, label %dec_label_pc_21aaa, label %dec_label_pc_21ae0

dec_label_pc_21ae0:                               ; preds = %dec_label_pc_21aaa, %dec_label_pc_21a79
  %storemerge.lcssa = phi i32 [ %arg3, %dec_label_pc_21a79 ], [ %v4_21acf, %dec_label_pc_21aaa ]
  br i1 true, label %bb, label %dec_label_pc_21aef

bb:                                               ; preds = %dec_label_pc_21ae0
  %v1_21aed = call i32 @function_21af4()
  br label %dec_label_pc_21aef

dec_label_pc_21aef:                               ; preds = %bb, %dec_label_pc_21ae0
  %v2_21aed = phi i32 [ %v1_21aed, %bb ], [ %storemerge.lcssa, %dec_label_pc_21ae0 ]
  ret i32 %v2_21aed

; uselistorder directives
  uselistorder i32 %v4_21acf, { 0, 2, 1 }
  uselistorder i32 %v4_21acb, { 1, 0 }
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_21aaa, { 1, 0 }
}

define i32 @function_21af4() local_unnamed_addr {
dec_label_pc_21af4:
  %v0_21af5 = load i32, i32* @eax, align 8
  ret i32 %v0_21af5
}

define i32 @_ZN25zero_after_free_allocatorIcE10deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21af6:
  %v10_21b19 = icmp eq i32 %arg2, 0
  br i1 %v10_21b19, label %bb, label %dec_label_pc_21b1f

bb:                                               ; preds = %dec_label_pc_21af6
  %v4_21b1d = call i32 @function_21b31(i32 %arg3, i32 0, i32 %arg1)
  br label %dec_label_pc_21b1f

dec_label_pc_21b1f:                               ; preds = %bb, %dec_label_pc_21af6
  ret i32 %arg2
}

define i32 @function_21b31(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21b31:
  %v0_21b31 = load i32, i32* @ebp, align 4
  %v1_21b31 = add i32 %v0_21b31, -36
  %v2_21b31 = inttoptr i32 %v1_21b31 to i32*
  %v3_21b31 = load i32, i32* %v2_21b31, align 4
  %v1_21b38 = add i32 %v0_21b31, -32
  %v2_21b38 = inttoptr i32 %v1_21b38 to i32*
  %v3_21b38 = load i32, i32* %v2_21b38, align 4
  %v1_21b3f = add i32 %v0_21b31, -28
  %v2_21b3f = inttoptr i32 %v1_21b3f to i32*
  %v3_21b3f = load i32, i32* %v2_21b3f, align 4
  %v3_21b45 = call i32 @unknown_45f0c(i32 %v3_21b3f, i32 %v3_21b38, i32 %v3_21b31)
  %v0_21b4a = load i32, i32* @ebp, align 4
  %v1_21b4a = add i32 %v0_21b4a, -12
  %v2_21b4a = inttoptr i32 %v1_21b4a to i32*
  %v3_21b4a = load i32, i32* %v2_21b4a, align 4
  %v1_21b4d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21b4d = xor i32 %v1_21b4d, %v3_21b4a
  %v3_21b4d = icmp eq i32 %v2_21b4d, 0
  store i32 %v2_21b4d, i32* @eax, align 8
  br i1 %v3_21b4d, label %bb, label %dec_label_pc_21b56

bb:                                               ; preds = %dec_label_pc_21b31
  %v1_21b54 = call i32 @function_21b5b()
  br label %dec_label_pc_21b56

dec_label_pc_21b56:                               ; preds = %bb, %dec_label_pc_21b31
  %v2_21b54 = phi i32 [ %v1_21b54, %bb ], [ %v2_21b4d, %dec_label_pc_21b31 ]
  ret i32 %v2_21b54
}

define i32 @function_21b5b() local_unnamed_addr {
dec_label_pc_21b5b:
  %v0_21b5c = load i32, i32* @eax, align 8
  ret i32 %v0_21b5c
}

define i32 @_ZSt13copy_backwardIPcS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21b5d:
  %v1_21b87 = call i32 @unknown_45fb4(i32 %arg2)
  %v1_21b94 = call i32 @unknown_45fb4(i32 %arg1)
  %v3_21ba7 = call i32 @unknown_49980(i32 %v1_21b94, i32 %v1_21b87, i32 %arg3)
  store i32 %v3_21ba7, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_21bb8

bb:                                               ; preds = %dec_label_pc_21b5d
  %v1_21bb6 = call i32 @function_21bbd()
  br label %dec_label_pc_21bb8

dec_label_pc_21bb8:                               ; preds = %bb, %dec_label_pc_21b5d
  %v2_21bb6 = phi i32 [ %v1_21bb6, %bb ], [ %v3_21ba7, %dec_label_pc_21b5d ]
  ret i32 %v2_21bb6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_45fb4, { 1, 0 }
}

define i32 @function_21bbd() local_unnamed_addr {
dec_label_pc_21bbd:
  %v0_21bc2 = load i32, i32* @eax, align 8
  ret i32 %v0_21bc2
}

define i32 @_ZNKSt6vectorIc25zero_after_free_allocatorIcEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21bc4:
  store i32 %arg1, i32* @eax, align 8
  %v1_21bee = call i32 @function_3cb36(i32 %arg1)
  %v1_21bfb = call i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIdEEPS3_RKT_(i32 %arg1)
  %v2_21c02 = sub i32 %v1_21bee, %v1_21bfb
  %v7_21c07 = icmp ult i32 %v2_21c02, %arg2
  %v5_21c0c = icmp eq i1 %v7_21c07, false
  br i1 %v5_21c0c, label %bb, label %dec_label_pc_21c10

bb:                                               ; preds = %dec_label_pc_21bc4
  %v1_21c0e = call i32 @function_21c1b()
  br label %dec_label_pc_21c10

dec_label_pc_21c10:                               ; preds = %bb, %dec_label_pc_21bc4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_21c1b() local_unnamed_addr {
dec_label_pc_21c1b:
  %ebx.global-to-local = alloca i32, align 4
  %v0_21c1b = load i32, i32* @ebp, align 4
  %v1_21c1b = add i32 %v0_21c1b, -28
  %v2_21c1b = inttoptr i32 %v1_21c1b to i32*
  %v3_21c1b = load i32, i32* %v2_21c1b, align 4
  %v1_21c21 = call i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIdEEPS3_RKT_(i32 %v3_21c1b)
  store i32 %v1_21c21, i32* %ebx.global-to-local, align 4
  %v0_21c28 = load i32, i32* @ebp, align 4
  %v1_21c28 = add i32 %v0_21c28, -28
  %v2_21c28 = inttoptr i32 %v1_21c28 to i32*
  %v3_21c28 = load i32, i32* %v2_21c28, align 4
  %v1_21c2e = call i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIdEEPS3_RKT_(i32 %v3_21c28)
  %v1_21c33 = load i32, i32* @ebp, align 4
  %v2_21c33 = add i32 %v1_21c33, -20
  %v3_21c33 = inttoptr i32 %v2_21c33 to i32*
  store i32 %v1_21c2e, i32* %v3_21c33, align 4
  %v0_21c36 = load i32, i32* @ebp, align 4
  %v1_21c36 = add i32 %v0_21c36, -32
  %v1_21c3d = add i32 %v0_21c36, -20
  %v2_21c43 = call i32 @unknown_49a59(i32 %v1_21c3d, i32 %v1_21c36)
  %v1_21c48 = inttoptr i32 %v2_21c43 to i32*
  %v2_21c48 = load i32, i32* %v1_21c48, align 4
  %v1_21c4a = load i32, i32* %ebx.global-to-local, align 4
  %v2_21c4a = add i32 %v1_21c4a, %v2_21c48
  %v1_21c4c = load i32, i32* @ebp, align 4
  %v2_21c4c = add i32 %v1_21c4c, -16
  %v3_21c4c = inttoptr i32 %v2_21c4c to i32*
  store i32 %v2_21c4a, i32* %v3_21c4c, align 4
  %v0_21c4f = load i32, i32* @ebp, align 4
  %v1_21c4f = add i32 %v0_21c4f, -28
  %v2_21c4f = inttoptr i32 %v1_21c4f to i32*
  %v3_21c4f = load i32, i32* %v2_21c4f, align 4
  %v1_21c55 = call i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIdEEPS3_RKT_(i32 %v3_21c4f)
  %v1_21c5a = load i32, i32* @ebp, align 4
  %v2_21c5a = add i32 %v1_21c5a, -16
  %v3_21c5a = inttoptr i32 %v2_21c5a to i32*
  %v4_21c5a = load i32, i32* %v3_21c5a, align 4
  %tmp5 = icmp ugt i32 %v1_21c55, %v4_21c5a
  br i1 %tmp5, label %dec_label_pc_21c6f, label %dec_label_pc_21c5f

dec_label_pc_21c5f:                               ; preds = %dec_label_pc_21c1b
  %v1_21c5f = add i32 %v1_21c5a, -28
  %v2_21c5f = inttoptr i32 %v1_21c5f to i32*
  %v3_21c5f = load i32, i32* %v2_21c5f, align 4
  store i32 %v3_21c5f, i32* @eax, align 8
  %v1_21c65 = call i32 @function_3cb36(i32 %v3_21c5f)
  %v1_21c6a = load i32, i32* @ebp, align 4
  %v2_21c6a = add i32 %v1_21c6a, -16
  %v3_21c6a = inttoptr i32 %v2_21c6a to i32*
  %v4_21c6a = load i32, i32* %v3_21c6a, align 4
  %v10_21c6a = icmp ult i32 %v1_21c65, %v4_21c6a
  %v1_21c6d = icmp eq i1 %v10_21c6a, false
  br i1 %v1_21c6d, label %dec_label_pc_21c7f, label %dec_label_pc_21c6f

dec_label_pc_21c6f:                               ; preds = %dec_label_pc_21c1b, %dec_label_pc_21c5f
  %v0_21c6f = phi i32 [ %v1_21c5a, %dec_label_pc_21c1b ], [ %v1_21c6a, %dec_label_pc_21c5f ]
  %v1_21c6f = add i32 %v0_21c6f, -28
  %v2_21c6f = inttoptr i32 %v1_21c6f to i32*
  %v3_21c6f = load i32, i32* %v2_21c6f, align 4
  store i32 %v3_21c6f, i32* @eax, align 8
  %v1_21c75 = call i32 @function_3cb36(i32 %v3_21c6f)
  %v0_21c7f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_21c7f

dec_label_pc_21c7f:                               ; preds = %dec_label_pc_21c5f, %dec_label_pc_21c6f
  %v0_21c7f = phi i32 [ %v0_21c7f.pre, %dec_label_pc_21c6f ], [ %v1_21c6a, %dec_label_pc_21c5f ]
  %storemerge = phi i32 [ %v1_21c75, %dec_label_pc_21c6f ], [ %v4_21c6a, %dec_label_pc_21c5f ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_21c7f = add i32 %v0_21c7f, -12
  %v2_21c7f = inttoptr i32 %v1_21c7f to i32*
  %v3_21c7f = load i32, i32* %v2_21c7f, align 4
  %v1_21c82 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21c82 = icmp eq i32 %v1_21c82, %v3_21c7f
  br i1 %v3_21c82, label %bb, label %dec_label_pc_21c8b

bb:                                               ; preds = %dec_label_pc_21c7f
  %v1_21c89 = call i32 @function_21c90()
  br label %dec_label_pc_21c8b

dec_label_pc_21c8b:                               ; preds = %bb, %dec_label_pc_21c7f
  %v2_21c89 = phi i32 [ %v1_21c89, %bb ], [ %storemerge, %dec_label_pc_21c7f ]
  ret i32 %v2_21c89

; uselistorder directives
  uselistorder i32 (i32)* @function_3cb36, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost6detail7variant11get_visitorIKSsEclIdEEPS3_RKT_, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_21c7f, { 1, 0 }
  uselistorder label %dec_label_pc_21c6f, { 1, 0 }
}

define i32 @function_21c90() local_unnamed_addr {
dec_label_pc_21c90:
  %v0_21c95 = load i32, i32* @eax, align 8
  ret i32 %v0_21c95
}

define i32 @_ZSt22__uninitialized_move_aIPcS0_25zero_after_free_allocatorIcEET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21c96:
  %v8_21cda = call i32 @unknown_4370f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_21cda, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_21ceb

bb:                                               ; preds = %dec_label_pc_21c96
  %v1_21ce9 = call i32 @function_21cf0()
  br label %dec_label_pc_21ceb

dec_label_pc_21ceb:                               ; preds = %bb, %dec_label_pc_21c96
  %v2_21ce9 = phi i32 [ %v1_21ce9, %bb ], [ %v8_21cda, %dec_label_pc_21c96 ]
  ret i32 %v2_21ce9

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21cf0() local_unnamed_addr {
dec_label_pc_21cf0:
  %v0_21cf1 = load i32, i32* @eax, align 8
  ret i32 %v0_21cf1
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21cf2:
  store i32 %arg3, i32* @eax, align 8
  %v15_21d27 = icmp eq i32 %arg3, %arg4
  br i1 %v15_21d27, label %bb, label %dec_label_pc_21d30

bb:                                               ; preds = %dec_label_pc_21cf2
  %v6_21d2a = sext i8 %arg5 to i32
  %v7_21d2a = call i32 @function_220ab(i32 %v6_21d2a, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_21d30

dec_label_pc_21d30:                               ; preds = %bb, %dec_label_pc_21cf2
  %v2_21d3d = call i32 @unknown_4997e(i32 %arg3, i32 %arg4)
  %v1_21d50 = add i32 %arg1, 4
  %v2_21d50 = inttoptr i32 %v1_21d50 to i32*
  %v3_21d50 = load i32, i32* %v2_21d50, align 4
  ret i32 %v3_21d50

; uselistorder directives
  uselistorder i32 %arg4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 2, 0, 3 }
}

define i32 @function_21d56(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21d56:
  %v0_21d56 = load i32, i32* @ecx, align 8
  %v1_21d56 = add i32 %v0_21d56, -532333624
  %v2_21d56 = inttoptr i32 %v1_21d56 to i32*
  %v3_21d56 = load i32, i32* %v2_21d56, align 4
  %v4_21d56 = udiv i32 %v3_21d56, 32768
  %v5_21d56 = mul i32 %v3_21d56, 131072
  %v6_21d56 = or i32 %v4_21d56, %v5_21d56
  store i32 %v6_21d56, i32* %v2_21d56, align 4
  %v0_21d5d = load i32, i32* @edi, align 4
  %v1_21d5d = add i32 %v0_21d5d, -1929379839
  %v2_21d5d = inttoptr i32 %v1_21d5d to i8*
  %v3_21d5d = load i8, i8* %v2_21d5d, align 1
  %v4_21d5d = and i8 %v3_21d5d, ptrtoint (i8* @global_var_45.2866 to i8)
  store i8 %v4_21d5d, i8* %v2_21d5d, align 1
  %v0_21d65 = load i32, i32* @ebp, align 4
  %v1_21d65 = add i32 %v0_21d65, -60
  %v2_21d65 = inttoptr i32 %v1_21d65 to i32*
  %v3_21d65 = load i32, i32* %v2_21d65, align 4
  %v0_21d6c = load i32, i32* @eax, align 8
  %v2_21d6f = call i32 @function_37728(i32 %v0_21d6c, i32 %v3_21d65)
  %v0_21d77 = load i32, i32* @ebp, align 4
  %v1_21d77 = add i32 %v0_21d77, -64
  %v1_21d7e = add i32 %v0_21d77, -52
  %v2_21d84 = call i32 @function_3792a(i32 %v1_21d7e, i32 %v1_21d77)
  ret i32 %v2_21d84

; uselistorder directives
  uselistorder i8 -125, { 1, 0 }
}

define i32 @function_21d8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_21d8a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_21d8a = load i32, i32* @ebp, align 4
  %v1_21d8d = add i32 %v0_21d8a, 2
  store i32 %v1_21d8d, i32* %ebp.global-to-local, align 4
  %v0_21d8e = load i32, i32* @ebx, align 4
  %v1_21d8e = add i32 %v0_21d8e, 1166607424
  %v2_21d8e = inttoptr i32 %v1_21d8e to i32*
  %v3_21d8e = load i32, i32* %v2_21d8e, align 4
  store i32 %v3_21d8e, i32* %ecx.global-to-local, align 8
  %v0_21d94 = call i32 @unknown_3be66324()
  store i32 %v0_21d94, i32* %eax.global-to-local, align 8
  %v0_21d99 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21d99 = add i32 %v0_21d99, 1
  %v9_21d99 = icmp eq i32 %v1_21d99, 0
  store i32 %v1_21d99, i32* @ebp, align 4
  %v0_21d9a = load i32, i32* %ecx.global-to-local, align 8
  %v1_21d9a = add i32 %v0_21d9a, -1
  store i32 %v1_21d9a, i32* %ecx.global-to-local, align 8
  %v2_21d9a = icmp eq i32 %v1_21d9a, 0
  %v4_21d9a = or i1 %v9_21d99, %v2_21d9a
  %v0_21d9c = load i32, i32* @ebx, align 4
  br i1 %v4_21d9a, label %dec_label_pc_21d9c, label %dec_label_pc_21dab

dec_label_pc_21d9c:                               ; preds = %dec_label_pc_21d8a
  %v1_21d9c = add i32 %v0_21d9c, -1962934272
  %v2_21d9c = inttoptr i32 %v1_21d9c to i8*
  %v5_21d9c = trunc i32 %v0_21d9c to i8
  store i8 %v5_21d9c, i8* %v2_21d9c, align 1
  %v0_21da2 = load i32, i32* @ebp, align 4
  %v1_21da2 = add i32 %v0_21da2, 1
  store i32 %v1_21da2, i32* @ebp, align 4
  %v0_21da3 = load i32, i32* %ecx.global-to-local, align 8
  %v1_21da3 = add i32 %v0_21da3, -1930943484
  %v2_21da3 = inttoptr i32 %v1_21da3 to i32*
  %v3_21da3 = load i32, i32* %v2_21da3, align 4
  store i32 %v3_21da3, i32* %ecx.global-to-local, align 8
  %v2_21da9 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_21da9 = zext i8 %v2_21da9 to i32
  %v4_21da9 = load i32, i32* %eax.global-to-local, align 8
  %v5_21da9 = and i32 %v4_21da9, -256
  %v6_21da9 = or i32 %v5_21da9, %v3_21da9
  store i32 %v6_21da9, i32* %eax.global-to-local, align 8
  ret i32 %v6_21da9

dec_label_pc_21dab:                               ; preds = %dec_label_pc_21d8a
  %v1_21dab = add i32 %v0_21d9c, 1250673749
  %v2_21dab = inttoptr i32 %v1_21dab to i8*
  %v3_21dab = load i8, i8* %v2_21dab, align 1
  %v5_21dab = trunc i32 %v1_21d9a to i8
  %v6_21dab = add i8 %v3_21dab, %v5_21dab
  store i8 %v6_21dab, i8* %v2_21dab, align 1
  %v0_21db1 = load i32, i32* %eax.global-to-local, align 8
  %v2_21db1 = add i32 %v0_21db1, 139
  %v16_21db1 = and i32 %v2_21db1, 255
  %v18_21db1 = and i32 %v0_21db1, -256
  %v19_21db1 = or i32 %v16_21db1, %v18_21db1
  store i32 %v19_21db1, i32* %eax.global-to-local, align 8
  %v0_21db4 = load i32, i32* @ebx, align 4
  %v1_21db4 = add i32 %v0_21db4, 1569391698
  %v2_21db4 = inttoptr i32 %v1_21db4 to i32*
  %v3_21db4 = load i32, i32* %v2_21db4, align 4
  store i32 %v3_21db4, i32* %ecx.global-to-local, align 8
  %v1_21dba = add i32 %v0_21db4, 1972044891
  %v2_21dba = inttoptr i32 %v1_21dba to i32*
  %v3_21dba = load i32, i32* %v2_21dba, align 4
  %v1_21dc0 = add i32 %v3_21dba, -1
  store i32 %v1_21dc0, i32* @ecx, align 8
  %v0_21dcd = load i32, i32* @edx, align 4
  %v4_21dd4 = call i32 @unknown_43988(i32 %v0_21db4, i32 %v0_21dcd, i32 %v1_21dc0, i32 %v19_21db1)
  store i32 %v4_21dd4, i32* %eax.global-to-local, align 8
  %v0_21dd9 = load i32, i32* @ebp, align 4
  %v1_21dd9 = add i32 %v0_21dd9, -60
  %v2_21dd9 = inttoptr i32 %v1_21dd9 to i32*
  %v3_21dd9 = load i32, i32* %v2_21dd9, align 4
  store i32 %v3_21dd9, i32* %eax.global-to-local, align 8
  %v1_21ddc = add i32 %v3_21dd9, 4
  %v2_21ddc = inttoptr i32 %v1_21ddc to i32*
  %v3_21ddc = load i32, i32* %v2_21ddc, align 4
  store i32 %v3_21ddc, i32* %eax.global-to-local, align 8
  %v2_21de1 = add i32 %v0_21dd9, -32
  %v3_21de1 = inttoptr i32 %v2_21de1 to i32*
  %v4_21de1 = load i32, i32* %v3_21de1, align 4
  %v5_21de1 = add i32 %v4_21de1, %v3_21ddc
  %v3_21de4 = load i32, i32* %v2_21dd9, align 4
  store i32 %v3_21de4, i32* %eax.global-to-local, align 8
  %v2_21de7 = add i32 %v3_21de4, 4
  %v3_21de7 = inttoptr i32 %v2_21de7 to i32*
  store i32 %v5_21de1, i32* %v3_21de7, align 4
  %v0_21dea = load i32, i32* @ebp, align 4
  %v1_21dea = add i32 %v0_21dea, -32
  %v2_21dea = inttoptr i32 %v1_21dea to i32*
  %v3_21dea = load i32, i32* %v2_21dea, align 4
  %v1_21ded = sub i32 0, %v3_21dea
  store i32 %v1_21ded, i32* %eax.global-to-local, align 8
  %v2_21df1 = add i32 %v0_21dea, -24
  %v3_21df1 = inttoptr i32 %v2_21df1 to i32*
  %v4_21df1 = load i32, i32* %v3_21df1, align 4
  %v5_21df1 = sub i32 %v4_21df1, %v3_21dea
  %v11_21df1 = xor i32 %v5_21df1, %v1_21ded
  %v12_21df1 = xor i32 %v5_21df1, %v4_21df1
  %v13_21df1 = and i32 %v11_21df1, %v12_21df1
  %v14_21df1 = icmp slt i32 %v13_21df1, 0
  store i1 %v14_21df1, i1* @of, align 1
  store i32 %v5_21df1, i32* @ebx, align 4
  %v1_21df4 = add i32 %v0_21dea, -64
  store i32 %v1_21df4, i32* @eax, align 8
  %v1_21dfa = call i32 @function_3cd4e(i32 %v1_21df4)
  store i32 %v1_21dfa, i32* %eax.global-to-local, align 8
  %v1_21dff = inttoptr i32 %v1_21dfa to i32*
  %v2_21dff = load i32, i32* %v1_21dff, align 4
  store i32 %v2_21dff, i32* %eax.global-to-local, align 8
  %v0_21e01 = load i32, i32* @ebp, align 4
  %v1_21e01 = add i32 %v0_21e01, -24
  %v2_21e01 = inttoptr i32 %v1_21e01 to i32*
  %v3_21e01 = load i32, i32* %v2_21e01, align 4
  %v0_21e08 = load i32, i32* @ebx, align 4
  %v3_21e0f = call i32 @unknown_4384f(i32 %v2_21dff, i32 %v0_21e08, i32 %v3_21e01)
  %v0_21e14 = load i32, i32* @ebp, align 4
  %v1_21e14 = add i32 %v0_21e14, -48
  store i32 %v1_21e14, i32* %eax.global-to-local, align 8
  %v1_21e17 = add i32 %v0_21e14, -64
  %v2_21e17 = inttoptr i32 %v1_21e17 to i32*
  %v3_21e17 = load i32, i32* %v2_21e17, align 4
  %v1_21e1e = add i32 %v0_21e14, -72
  %v2_21e1e = inttoptr i32 %v1_21e1e to i32*
  %v3_21e1e = load i32, i32* %v2_21e1e, align 4
  %v1_21e25 = add i32 %v0_21e14, -68
  %v2_21e25 = inttoptr i32 %v1_21e25 to i32*
  %v3_21e25 = load i32, i32* %v2_21e25, align 4
  %v4_21e2f = call i32 @unknown_49c02(i32 %v1_21e14, i32 %v3_21e25, i32 %v3_21e1e, i32 %v3_21e17)
  store i32 %v4_21e2f, i32* @eax, align 8
  %v5_21e37 = call i32 @function_220ab(i32 %v1_21e14, i32 %v3_21e25, i32 %v3_21e1e, i32 %v3_21e17, i32 ptrtoint (i32* @2 to i32))
  store i32 %v5_21e37, i32* %eax.global-to-local, align 8
  ret i32 %v5_21e37

; uselistorder directives
  uselistorder i32 %v0_21e14, { 1, 0, 2, 3 }
  uselistorder i32 %v5_21df1, { 2, 0, 1 }
  uselistorder i32 %v0_21db1, { 1, 0 }
  uselistorder i32 %v1_21d9a, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13 }
}

define i32 @function_21e30(i32 %arg1) local_unnamed_addr {
dec_label_pc_21e30:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21e6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21e6c:
  %v0_21e6c = load i32, i32* @ecx, align 8
  %v0_21e70 = load i32, i32* @ebp, align 4
  %v1_21e70 = add i32 %v0_21e70, -72
  %v2_21e70 = inttoptr i32 %v1_21e70 to i32*
  %v3_21e70 = load i32, i32* %v2_21e70, align 4
  %v0_21e77 = load i32, i32* @edx, align 4
  %v3_21e7a = call i32 @unknown_499dd(i32 %v0_21e77, i32 %v3_21e70, i32 %v0_21e6c)
  %v0_21e7f = load i32, i32* @ebp, align 4
  %v1_21e7f = add i32 %v0_21e7f, -60
  %v2_21e7f = inttoptr i32 %v1_21e7f to i32*
  %v3_21e7f = load i32, i32* %v2_21e7f, align 4
  %v1_21e82 = add i32 %v3_21e7f, 4
  %v2_21e82 = inttoptr i32 %v1_21e82 to i32*
  %v3_21e82 = load i32, i32* %v2_21e82, align 4
  %v1_21e85 = add i32 %v0_21e7f, -28
  %v2_21e85 = inttoptr i32 %v1_21e85 to i32*
  %v3_21e85 = load i32, i32* %v2_21e85, align 4
  %v1_21e88 = add i32 %v0_21e7f, -32
  %v2_21e88 = inttoptr i32 %v1_21e88 to i32*
  %v3_21e88 = load i32, i32* %v2_21e88, align 4
  store i32 %v3_21e88, i32* @ecx, align 8
  %v2_21e8d = sub i32 %v3_21e88, %v3_21e85
  %v2_21e91 = add i32 %v2_21e8d, %v3_21e82
  %v3_21e93 = load i32, i32* %v2_21e7f, align 4
  %v2_21e96 = add i32 %v3_21e93, 4
  %v3_21e96 = inttoptr i32 %v2_21e96 to i32*
  store i32 %v2_21e91, i32* %v3_21e96, align 4
  %v0_21e99 = load i32, i32* @ebp, align 4
  %v1_21e99 = add i32 %v0_21e99, -60
  %v2_21e99 = inttoptr i32 %v1_21e99 to i32*
  %v3_21e99 = load i32, i32* %v2_21e99, align 4
  store i32 %v3_21e99, i32* @eax, align 8
  %v1_21e9f = call i32 @function_3ca38(i32 %v3_21e99)
  store i32 %v1_21e9f, i32* @ebx, align 4
  %v0_21ea6 = load i32, i32* @ebp, align 4
  %v1_21ea6 = add i32 %v0_21ea6, -60
  %v2_21ea6 = inttoptr i32 %v1_21ea6 to i32*
  %v3_21ea6 = load i32, i32* %v2_21ea6, align 4
  %v1_21ea9 = add i32 %v3_21ea6, 4
  %v2_21ea9 = inttoptr i32 %v1_21ea9 to i32*
  %v3_21ea9 = load i32, i32* %v2_21ea9, align 4
  store i32 %v3_21ea9, i32* @esi, align 4
  %v1_21eac = add i32 %v0_21ea6, -64
  store i32 %v1_21eac, i32* @eax, align 8
  %v1_21eb2 = call i32 @function_3cd4e(i32 %v1_21eac)
  %v1_21eb7 = inttoptr i32 %v1_21eb2 to i32*
  %v2_21eb7 = load i32, i32* %v1_21eb7, align 4
  %v0_21eb9 = load i32, i32* @ebx, align 4
  %v0_21ebd = load i32, i32* @esi, align 4
  %v0_21ec1 = load i32, i32* @ebp, align 4
  %v1_21ec1 = add i32 %v0_21ec1, -24
  %v2_21ec1 = inttoptr i32 %v1_21ec1 to i32*
  %v3_21ec1 = load i32, i32* %v2_21ec1, align 4
  %v4_21ecb = call i32 @unknown_43988(i32 %v2_21eb7, i32 %v3_21ec1, i32 %v0_21ebd, i32 %v0_21eb9)
  %v0_21ed0 = load i32, i32* @ebp, align 4
  %v1_21ed0 = add i32 %v0_21ed0, -60
  %v2_21ed0 = inttoptr i32 %v1_21ed0 to i32*
  %v3_21ed0 = load i32, i32* %v2_21ed0, align 4
  %v1_21ed3 = add i32 %v3_21ed0, 4
  %v2_21ed3 = inttoptr i32 %v1_21ed3 to i32*
  %v3_21ed3 = load i32, i32* %v2_21ed3, align 4
  %v2_21ed8 = add i32 %v0_21ed0, -28
  %v3_21ed8 = inttoptr i32 %v2_21ed8 to i32*
  %v4_21ed8 = load i32, i32* %v3_21ed8, align 4
  %v5_21ed8 = add i32 %v4_21ed8, %v3_21ed3
  %v3_21edb = load i32, i32* %v2_21ed0, align 4
  %v2_21ede = add i32 %v3_21edb, 4
  %v3_21ede = inttoptr i32 %v2_21ede to i32*
  store i32 %v5_21ed8, i32* %v3_21ede, align 4
  %v0_21ee1 = load i32, i32* @ebp, align 4
  %v1_21ee1 = add i32 %v0_21ee1, -44
  %v2_21ee1 = inttoptr i32 %v1_21ee1 to i32*
  %v3_21ee1 = load i32, i32* %v2_21ee1, align 4
  %v1_21ee4 = add i32 %v0_21ee1, -40
  %v1_21ee7 = add i32 %v0_21ee1, -64
  %v2_21ee7 = inttoptr i32 %v1_21ee7 to i32*
  %v3_21ee7 = load i32, i32* %v2_21ee7, align 4
  %v1_21ef2 = add i32 %v0_21ee1, -68
  %v2_21ef2 = inttoptr i32 %v1_21ef2 to i32*
  %v3_21ef2 = load i32, i32* %v2_21ef2, align 4
  %v4_21efc = call i32 @unknown_49c02(i32 %v1_21ee4, i32 %v3_21ef2, i32 %v3_21ee1, i32 %v3_21ee7)
  store i32 %v4_21efc, i32* @eax, align 8
  %v5_21f04 = call i32 @function_220ab(i32 %v1_21ee4, i32 %v3_21ef2, i32 %v3_21ee1, i32 %v3_21ee7, i32 ptrtoint (i32* @2 to i32))
  ret i32 %v5_21f04

; uselistorder directives
  uselistorder i32 %v3_21ee7, { 1, 0 }
  uselistorder i32 %v1_21ee4, { 1, 0 }
  uselistorder i32 %v0_21ee1, { 1, 0, 2, 3 }
  uselistorder i32 %v0_21e7f, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_49c02, { 1, 0 }
}

define i32 @function_21f0e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21f0e:
  %v0_21f10 = load i32, i32* @ebx, align 4
  %v1_21f10 = add i32 %v0_21f10, 1149886533
  %v2_21f10 = inttoptr i32 %v1_21f10 to i8*
  %v3_21f10 = load i8, i8* %v2_21f10, align 1
  %v4_21f10 = load i32, i32* @ecx, align 8
  %v5_21f10 = trunc i32 %v4_21f10 to i8
  %v6_21f10 = add i8 %v5_21f10, %v3_21f10
  store i8 %v6_21f10, i8* %v2_21f10, align 1
  %v0_21f18 = load i32, i32* @ebp, align 4
  %v1_21f18 = add i32 %v0_21f18, -60
  %v2_21f18 = inttoptr i32 %v1_21f18 to i32*
  %v3_21f18 = load i32, i32* %v2_21f18, align 4
  %v1_21f1e = call i32 @unknown_438b6(i32 %v3_21f18)
  %v1_21f23 = load i32, i32* @ebp, align 4
  %v2_21f23 = add i32 %v1_21f23, -20
  %v3_21f23 = inttoptr i32 %v2_21f23 to i32*
  store i32 %v1_21f1e, i32* %v3_21f23, align 4
  %v0_21f26 = load i32, i32* @ebp, align 4
  %v1_21f26 = add i32 %v0_21f26, -60
  %v2_21f26 = inttoptr i32 %v1_21f26 to i32*
  %v3_21f26 = load i32, i32* %v2_21f26, align 4
  %v1_21f29 = add i32 %v0_21f26, -20
  %v2_21f29 = inttoptr i32 %v1_21f29 to i32*
  %v3_21f29 = load i32, i32* %v2_21f29, align 4
  %v2_21f33 = call i32 @unknown_436e4(i32 %v3_21f26, i32 %v3_21f29)
  %v1_21f38 = load i32, i32* @ebp, align 4
  %v2_21f38 = add i32 %v1_21f38, -16
  %v3_21f38 = inttoptr i32 %v2_21f38 to i32*
  store i32 %v2_21f33, i32* %v3_21f38, align 4
  %v0_21f3b = load i32, i32* @ebp, align 4
  %v1_21f3b = add i32 %v0_21f3b, -16
  %v2_21f3b = inttoptr i32 %v1_21f3b to i32*
  %v3_21f3b = load i32, i32* %v2_21f3b, align 4
  %v2_21f3e = add i32 %v0_21f3b, -36
  %v3_21f3e = inttoptr i32 %v2_21f3e to i32*
  store i32 %v3_21f3b, i32* %v3_21f3e, align 4
  %v0_21f41 = load i32, i32* @ebp, align 4
  %v1_21f41 = add i32 %v0_21f41, -60
  %v2_21f41 = inttoptr i32 %v1_21f41 to i32*
  %v3_21f41 = load i32, i32* %v2_21f41, align 4
  store i32 %v3_21f41, i32* @eax, align 8
  %v1_21f47 = call i32 @function_3ca38(i32 %v3_21f41)
  store i32 %v1_21f47, i32* @ebx, align 4
  %v0_21f4e = load i32, i32* @ebp, align 4
  %v1_21f4e = add i32 %v0_21f4e, -64
  store i32 %v1_21f4e, i32* @eax, align 8
  %v1_21f54 = call i32 @function_3cd4e(i32 %v1_21f4e)
  %v1_21f59 = inttoptr i32 %v1_21f54 to i32*
  %v2_21f59 = load i32, i32* %v1_21f59, align 4
  %v0_21f5b = load i32, i32* @ebp, align 4
  %v1_21f5b = add i32 %v0_21f5b, -60
  %v2_21f5b = inttoptr i32 %v1_21f5b to i32*
  %v3_21f5b = load i32, i32* %v2_21f5b, align 4
  %v1_21f5e = inttoptr i32 %v3_21f5b to i32*
  %v2_21f5e = load i32, i32* %v1_21f5e, align 4
  %v0_21f60 = load i32, i32* @ebx, align 4
  %v1_21f64 = add i32 %v0_21f5b, -16
  %v2_21f64 = inttoptr i32 %v1_21f64 to i32*
  %v3_21f64 = load i32, i32* %v2_21f64, align 4
  store i32 %v3_21f64, i32* @ecx, align 8
  %v4_21f72 = call i32 @unknown_43988(i32 %v2_21f5e, i32 %v2_21f59, i32 %v3_21f64, i32 %v0_21f60)
  %v1_21f77 = load i32, i32* @ebp, align 4
  %v2_21f77 = add i32 %v1_21f77, -36
  %v3_21f77 = inttoptr i32 %v2_21f77 to i32*
  store i32 %v4_21f72, i32* %v3_21f77, align 4
  %v0_21f7a = load i32, i32* @ebp, align 4
  %v1_21f7a = add i32 %v0_21f7a, -60
  %v2_21f7a = inttoptr i32 %v1_21f7a to i32*
  %v3_21f7a = load i32, i32* %v2_21f7a, align 4
  store i32 %v3_21f7a, i32* @eax, align 8
  %v1_21f80 = call i32 @function_3ca38(i32 %v3_21f7a)
  %v0_21f89 = load i32, i32* @ebp, align 4
  %v1_21f89 = add i32 %v0_21f89, -36
  %v2_21f89 = inttoptr i32 %v1_21f89 to i32*
  %v3_21f89 = load i32, i32* %v2_21f89, align 4
  %v1_21f90 = add i32 %v0_21f89, -72
  %v2_21f90 = inttoptr i32 %v1_21f90 to i32*
  %v3_21f90 = load i32, i32* %v2_21f90, align 4
  %v1_21f97 = add i32 %v0_21f89, -68
  %v2_21f97 = inttoptr i32 %v1_21f97 to i32*
  %v3_21f97 = load i32, i32* %v2_21f97, align 4
  %v3_21f9d = call i32 @unknown_499dd(i32 %v3_21f97, i32 %v3_21f90, i32 %v3_21f89)
  %v1_21fa2 = load i32, i32* @ebp, align 4
  %v2_21fa2 = add i32 %v1_21fa2, -36
  %v3_21fa2 = inttoptr i32 %v2_21fa2 to i32*
  store i32 %v3_21f9d, i32* %v3_21fa2, align 4
  %v0_21fa5 = load i32, i32* @ebp, align 4
  %v1_21fa5 = add i32 %v0_21fa5, -60
  %v2_21fa5 = inttoptr i32 %v1_21fa5 to i32*
  %v3_21fa5 = load i32, i32* %v2_21fa5, align 4
  store i32 %v3_21fa5, i32* @eax, align 8
  %v1_21fab = call i32 @function_3ca38(i32 %v3_21fa5)
  store i32 %v1_21fab, i32* @ebx, align 4
  %v0_21fb2 = load i32, i32* @ebp, align 4
  %v1_21fb2 = add i32 %v0_21fb2, -60
  %v2_21fb2 = inttoptr i32 %v1_21fb2 to i32*
  %v3_21fb2 = load i32, i32* %v2_21fb2, align 4
  %v1_21fb5 = add i32 %v3_21fb2, 4
  %v2_21fb5 = inttoptr i32 %v1_21fb5 to i32*
  %v3_21fb5 = load i32, i32* %v2_21fb5, align 4
  store i32 %v3_21fb5, i32* @esi, align 4
  %v1_21fb8 = add i32 %v0_21fb2, -64
  store i32 %v1_21fb8, i32* @eax, align 8
  %v1_21fbe = call i32 @function_3cd4e(i32 %v1_21fb8)
  %v1_21fc3 = inttoptr i32 %v1_21fbe to i32*
  %v2_21fc3 = load i32, i32* %v1_21fc3, align 4
  %v0_21fc5 = load i32, i32* @ebx, align 4
  %v0_21fc9 = load i32, i32* @ebp, align 4
  %v1_21fc9 = add i32 %v0_21fc9, -36
  %v2_21fc9 = inttoptr i32 %v1_21fc9 to i32*
  %v3_21fc9 = load i32, i32* %v2_21fc9, align 4
  %v0_21fd0 = load i32, i32* @esi, align 4
  %v4_21fd7 = call i32 @unknown_43988(i32 %v2_21fc3, i32 %v0_21fd0, i32 %v3_21fc9, i32 %v0_21fc5)
  %v1_21fdc = load i32, i32* @ebp, align 4
  %v2_21fdc = add i32 %v1_21fdc, -36
  %v3_21fdc = inttoptr i32 %v2_21fdc to i32*
  store i32 %v4_21fd7, i32* %v3_21fdc, align 4
  %v0_21fdf = load i32, i32* @ebp, align 4
  %v1_21fdf = add i32 %v0_21fdf, -60
  %v2_21fdf = inttoptr i32 %v1_21fdf to i32*
  %v3_21fdf = load i32, i32* %v2_21fdf, align 4
  ret i32 %v3_21fdf

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_499dd, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_43988, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_3cd4e, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_3ca38, { 3, 2, 1, 0 }
}

define i32 @function_21fe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_21fe8:
  %v2_21fe8 = load i32, i32* @eax, align 8
  %v4_21fe8 = mul i32 %v2_21fe8, 2
  %v21_21fe8 = inttoptr i32 %v2_21fe8 to i32*
  store i32 %v4_21fe8, i32* %v21_21fe8, align 4
  %v0_21fea = load i32, i32* @ebp, align 4
  %v1_21fea = add i32 %v0_21fea, -60
  %v2_21fea = inttoptr i32 %v1_21fea to i32*
  %v3_21fea = load i32, i32* %v2_21fea, align 4
  %v1_21fed = add i32 %v3_21fea, 4
  %v2_21fed = inttoptr i32 %v1_21fed to i32*
  %v3_21fed = load i32, i32* %v2_21fed, align 4
  %v1_21ff3 = inttoptr i32 %v3_21fea to i32*
  %v2_21ff3 = load i32, i32* %v1_21ff3, align 4
  %v0_21ff5 = load i32, i32* @eax, align 8
  %v3_22000 = call i32 @function_3ca65(i32 %v2_21ff3, i32 %v3_21fed, i32 %v0_21ff5)
  %v0_22005 = load i32, i32* @ebp, align 4
  %v1_22005 = add i32 %v0_22005, -60
  %v2_22005 = inttoptr i32 %v1_22005 to i32*
  %v3_22005 = load i32, i32* %v2_22005, align 4
  %v1_22008 = add i32 %v3_22005, 8
  %v2_22008 = inttoptr i32 %v1_22008 to i32*
  %v3_22008 = load i32, i32* %v2_22008, align 4
  %v1_22010 = inttoptr i32 %v3_22005 to i32*
  %v2_22010 = load i32, i32* %v1_22010, align 4
  %v2_22014 = sub i32 %v3_22008, %v2_22010
  %v3_2201a = load i32, i32* %v2_22005, align 4
  %v1_2201d = inttoptr i32 %v3_2201a to i32*
  %v2_2201d = load i32, i32* %v1_2201d, align 4
  store i32 %v3_2201a, i32* @eax, align 8
  %v3_2202d = call i32 @function_3cca2(i32 %v3_2201a, i32 %v2_2201d, i32 %v2_22014)
  %v0_22032 = load i32, i32* @ebp, align 4
  %v1_22032 = add i32 %v0_22032, -60
  %v2_22032 = inttoptr i32 %v1_22032 to i32*
  %v3_22032 = load i32, i32* %v2_22032, align 4
  %v1_22035 = add i32 %v0_22032, -16
  %v2_22035 = inttoptr i32 %v1_22035 to i32*
  %v3_22035 = load i32, i32* %v2_22035, align 4
  %v2_22038 = inttoptr i32 %v3_22032 to i32*
  store i32 %v3_22035, i32* %v2_22038, align 4
  %v0_2203a = load i32, i32* @ebp, align 4
  %v1_2203a = add i32 %v0_2203a, -60
  %v2_2203a = inttoptr i32 %v1_2203a to i32*
  %v3_2203a = load i32, i32* %v2_2203a, align 4
  %v1_2203d = add i32 %v0_2203a, -36
  %v2_2203d = inttoptr i32 %v1_2203d to i32*
  %v3_2203d = load i32, i32* %v2_2203d, align 4
  %v2_22040 = add i32 %v3_2203a, 4
  %v3_22040 = inttoptr i32 %v2_22040 to i32*
  store i32 %v3_2203d, i32* %v3_22040, align 4
  %v0_22043 = load i32, i32* @ebp, align 4
  %v1_22043 = add i32 %v0_22043, -20
  %v2_22043 = inttoptr i32 %v1_22043 to i32*
  %v3_22043 = load i32, i32* %v2_22043, align 4
  %v1_22046 = add i32 %v0_22043, -16
  %v2_22046 = inttoptr i32 %v1_22046 to i32*
  %v3_22046 = load i32, i32* %v2_22046, align 4
  %v2_22049 = add i32 %v3_22046, %v3_22043
  %v1_2204b = add i32 %v0_22043, -60
  %v2_2204b = inttoptr i32 %v1_2204b to i32*
  %v3_2204b = load i32, i32* %v2_2204b, align 4
  store i32 %v3_2204b, i32* @eax, align 8
  %v2_2204e = add i32 %v3_2204b, 8
  %v3_2204e = inttoptr i32 %v2_2204e to i32*
  store i32 %v2_22049, i32* %v3_2204e, align 4
  %v5_22051 = call i32 @function_220ab(i32 %v3_2201a, i32 %v2_2201d, i32 %v2_22014, i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  ret i32 %v5_22051

; uselistorder directives
  uselistorder i32 %v2_2201d, { 1, 0 }
  uselistorder i32 %v3_2201a, { 2, 1, 0, 3 }
  uselistorder i32 %v2_22014, { 1, 0 }
  uselistorder i32 %v2_21fe8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_220ab, { 2, 1, 0, 3 }
}

define i32 @function_22054() local_unnamed_addr {
dec_label_pc_22054:
  %eax.global-to-local = alloca i32, align 4
  %v0_22054 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22054
}

define i32 @function_220ab(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_220ab:
  %v0_220ab = load i32, i32* @ebp, align 4
  %v1_220ab = add i32 %v0_220ab, -12
  %v2_220ab = inttoptr i32 %v1_220ab to i32*
  %v3_220ab = load i32, i32* %v2_220ab, align 4
  %v1_220ae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_220ae = xor i32 %v1_220ae, %v3_220ab
  %v3_220ae = icmp eq i32 %v2_220ae, 0
  store i32 %v2_220ae, i32* @ebx, align 4
  br i1 %v3_220ae, label %bb, label %dec_label_pc_220ab.dec_label_pc_220b7_crit_edge

dec_label_pc_220ab.dec_label_pc_220b7_crit_edge:  ; preds = %dec_label_pc_220ab
  %v2_220b5.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_220b7

bb:                                               ; preds = %dec_label_pc_220ab
  %v1_220b5 = call i32 @function_220bc()
  br label %dec_label_pc_220b7

dec_label_pc_220b7:                               ; preds = %dec_label_pc_220ab.dec_label_pc_220b7_crit_edge, %bb
  %v2_220b5 = phi i32 [ %v2_220b5.pre, %dec_label_pc_220ab.dec_label_pc_220b7_crit_edge ], [ %v1_220b5, %bb ]
  ret i32 %v2_220b5

; uselistorder directives
  uselistorder label %dec_label_pc_220b7, { 1, 0 }
}

define i32 @function_220bc() local_unnamed_addr {
dec_label_pc_220bc:
  %v0_220bc = load i32, i32* @ebp, align 4
  %v1_220bc = add i32 %v0_220bc, -8
  %v1_220bf = inttoptr i32 %v1_220bc to i32*
  %v2_220bf = load i32, i32* %v1_220bf, align 4
  store i32 %v2_220bf, i32* @ebx, align 4
  %v1_220c1 = inttoptr i32 %v0_220bc to i32*
  %v2_220c1 = load i32, i32* %v1_220c1, align 4
  store i32 %v2_220c1, i32* @ebp, align 4
  %v0_220c2 = load i32, i32* @eax, align 8
  ret i32 %v0_220c2
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_220c4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_220ee = call i32 @unknown_4a0ea(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_220ff = add i32 %tmp103, 4
  %v2_220ff = inttoptr i32 %v1_220ff to i32*
  store i32 0, i32* %v2_220ff, align 4
  %v1_22109 = add i32 %tmp103, 8
  %v2_22109 = inttoptr i32 %v1_22109 to i32*
  store i32 0, i32* %v2_22109, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2211c

bb:                                               ; preds = %dec_label_pc_220c4
  %v1_2211a = call i32 @function_22121()
  br label %dec_label_pc_2211c

dec_label_pc_2211c:                               ; preds = %bb, %dec_label_pc_220c4
  %v2_2211a = phi i32 [ %v1_2211a, %bb ], [ 0, %dec_label_pc_220c4 ]
  ret i32 %v2_2211a

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_22121() local_unnamed_addr {
dec_label_pc_22121:
  %v0_22122 = load i32, i32* @eax, align 8
  ret i32 %v0_22122
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22124:
  %v10_22141 = icmp eq i32 %arg2, 0
  br i1 %v10_22141, label %dec_label_pc_22168, label %dec_label_pc_22147

dec_label_pc_22147:                               ; preds = %dec_label_pc_22124
  %v3_2215c = call i32 @unknown_4a18c(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_22168

dec_label_pc_22168:                               ; preds = %dec_label_pc_22124, %dec_label_pc_22147
  %storemerge = phi i32 [ %v3_2215c, %dec_label_pc_22147 ], [ 0, %dec_label_pc_22124 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22174

bb:                                               ; preds = %dec_label_pc_22168
  %v1_22172 = call i32 @function_22179()
  br label %dec_label_pc_22174

dec_label_pc_22174:                               ; preds = %bb, %dec_label_pc_22168
  %v2_22172 = phi i32 [ %v1_22172, %bb ], [ %storemerge, %dec_label_pc_22168 ]
  ret i32 %v2_22172

; uselistorder directives
  uselistorder label %dec_label_pc_22168, { 1, 0 }
}

define i32 @function_22179() local_unnamed_addr {
dec_label_pc_22179:
  %v0_2217a = load i32, i32* @eax, align 8
  ret i32 %v0_2217a
}

define i32 @_ZSt24__uninitialized_fill_n_aIPhjhhEvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2217b:
  %v7_221b8 = call i32 @unknown_4a23e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_221c9

bb:                                               ; preds = %dec_label_pc_2217b
  %v1_221c7 = call i32 @function_221ce()
  br label %dec_label_pc_221c9

dec_label_pc_221c9:                               ; preds = %bb, %dec_label_pc_2217b
  %v2_221c7 = phi i32 [ %v1_221c7, %bb ], [ 0, %dec_label_pc_2217b ]
  ret i32 %v2_221c7

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_221ce() local_unnamed_addr {
dec_label_pc_221ce:
  %v0_221cf = load i32, i32* @eax, align 8
  ret i32 %v0_221cf
}

define i32 @_ZSt8_DestroyIPhEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_221d0:
  %v2_221fa = call i32 @unknown_4a2e2(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2220b

bb:                                               ; preds = %dec_label_pc_221d0
  %v1_22209 = call i32 @function_22210()
  br label %dec_label_pc_2220b

dec_label_pc_2220b:                               ; preds = %bb, %dec_label_pc_221d0
  %v2_22209 = phi i32 [ %v1_22209, %bb ], [ 0, %dec_label_pc_221d0 ]
  ret i32 %v2_22209
}

define i32 @function_22210() local_unnamed_addr {
dec_label_pc_22210:
  %v0_22211 = load i32, i32* @eax, align 8
  ret i32 %v0_22211
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_22212:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_2222f = call i32 @function_37ece(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_22240 = add i32 %tmp100, 4
  %v2_22240 = inttoptr i32 %v1_22240 to i32*
  store i32 0, i32* %v2_22240, align 4
  %v1_2224a = add i32 %tmp100, 8
  %v2_2224a = inttoptr i32 %v1_2224a to i32*
  store i32 0, i32* %v2_2224a, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2225d

bb:                                               ; preds = %dec_label_pc_22212
  %v1_2225b = call i32 @function_22262()
  br label %dec_label_pc_2225d

dec_label_pc_2225d:                               ; preds = %bb, %dec_label_pc_22212
  %v2_2225b = phi i32 [ %v1_2225b, %bb ], [ 0, %dec_label_pc_22212 ]
  ret i32 %v2_2225b

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_22262() local_unnamed_addr {
dec_label_pc_22262:
  %v0_22263 = load i32, i32* @eax, align 8
  ret i32 %v0_22263
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22264:
  %v3_2229b = call i32 @unknown_4a3a6(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2229b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_222ac

bb:                                               ; preds = %dec_label_pc_22264
  %v1_222aa = call i32 @function_222b1()
  br label %dec_label_pc_222ac

dec_label_pc_222ac:                               ; preds = %bb, %dec_label_pc_22264
  %v2_222aa = phi i32 [ %v1_222aa, %bb ], [ %v3_2229b, %dec_label_pc_22264 ]
  ret i32 %v2_222aa
}

define i32 @function_222b1() local_unnamed_addr {
dec_label_pc_222b1:
  %v0_222b2 = load i32, i32* @eax, align 8
  ret i32 %v0_222b2
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_222b4:
  ret i32 %arg2
}

define i32 @function_222f2() local_unnamed_addr {
dec_label_pc_222f2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_222f2 = load i32, i32* %ecx.global-to-local, align 8
  %v1_222f2 = add i32 %v0_222f2, -1
  store i32 %v1_222f2, i32* %ecx.global-to-local, align 8
  %v0_222f4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_222f4
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_222f5:
  %v2_2231f = call i32 @unknown_4a50e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22336

bb:                                               ; preds = %dec_label_pc_222f5
  %v1_22334 = call i32 @function_2233b()
  br label %dec_label_pc_22336

dec_label_pc_22336:                               ; preds = %bb, %dec_label_pc_222f5
  %v2_22334 = phi i32 [ %v1_22334, %bb ], [ %arg1, %dec_label_pc_222f5 ]
  ret i32 %v2_22334

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2233b() local_unnamed_addr {
dec_label_pc_2233b:
  %v0_2233c = load i32, i32* @eax, align 8
  ret i32 %v0_2233c
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2233f:
  %stack_var_-20 = alloca i32, align 4
  %v1_22370 = call i32 @unknown_4a4d0(i32 %arg4)
  %v1_2237d = call i32 @unknown_44bfa(i32 %arg3)
  %v1_2238a = call i32 @unknown_44bfa(i32 %arg2)
  %v3_2239a = call i32 @unknown_4a595(i32 %v1_2238a, i32 %v1_2237d, i32 %v1_22370)
  store i32 %v3_2239a, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_223c3

bb:                                               ; preds = %dec_label_pc_2233f
  %v2_223a2 = ptrtoint i32* %stack_var_-20 to i32
  %v3_223c1 = call i32 @function_223c8(i32 %arg1, i32 %v2_223a2)
  br label %dec_label_pc_223c3

dec_label_pc_223c3:                               ; preds = %bb, %dec_label_pc_2233f
  %v4_223c1 = phi i32 [ %v3_223c1, %bb ], [ %arg1, %dec_label_pc_2233f ]
  ret i32 %v4_223c1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_44bfa, { 1, 0 }
}

define i32 @function_223c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_223c8:
  %v0_223ce = load i32, i32* @eax, align 8
  ret i32 %v0_223ce
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_223d1:
  %v2_223fb = call i32 @unknown_4a67a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2240c

bb:                                               ; preds = %dec_label_pc_223d1
  %v1_2240a = call i32 @function_22411()
  br label %dec_label_pc_2240c

dec_label_pc_2240c:                               ; preds = %bb, %dec_label_pc_223d1
  %v2_2240a = phi i32 [ %v1_2240a, %bb ], [ 0, %dec_label_pc_223d1 ]
  ret i32 %v2_2240a
}

define i32 @function_22411() local_unnamed_addr {
dec_label_pc_22411:
  %v0_22412 = load i32, i32* @eax, align 8
  ret i32 %v0_22412
}

define i32 @_ZSt12__miter_baseIPhENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_22413:
  %v1_22430 = call i32 @unknown_4a6ec(i32 %arg1)
  store i32 %v1_22430, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22441

bb:                                               ; preds = %dec_label_pc_22413
  %v1_2243f = call i32 @function_22446()
  br label %dec_label_pc_22441

dec_label_pc_22441:                               ; preds = %bb, %dec_label_pc_22413
  %v2_2243f = phi i32 [ %v1_2243f, %bb ], [ %v1_22430, %dec_label_pc_22413 ]
  ret i32 %v2_2243f
}

define i32 @function_22446() local_unnamed_addr {
dec_label_pc_22446:
  %v0_22447 = load i32, i32* @eax, align 8
  ret i32 %v0_22447
}

define i32 @_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22448:
  %v1_22473 = call i32 @unknown_4a74e(i32 %arg3)
  %v1_22480 = call i32 @unknown_4a74e(i32 %arg2)
  %v1_2248d = call i32 @unknown_4a74e(i32 %arg1)
  %v3_2249d = call i32 @unknown_4a60e(i32 %v1_2248d, i32 %v1_22480, i32 %v1_22473)
  store i32 %v3_2249d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_224ae

bb:                                               ; preds = %dec_label_pc_22448
  %v1_224ac = call i32 @function_224b3()
  br label %dec_label_pc_224ae

dec_label_pc_224ae:                               ; preds = %bb, %dec_label_pc_22448
  %v2_224ac = phi i32 [ %v1_224ac, %bb ], [ %v3_2249d, %dec_label_pc_22448 ]
  ret i32 %v2_224ac

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4a74e, { 2, 1, 0 }
}

define i32 @function_224b3() local_unnamed_addr {
dec_label_pc_224b3:
  %v0_224b9 = load i32, i32* @eax, align 8
  ret i32 %v0_224b9
}

define i32 @_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_224ba:
  %v3_224f1 = call i32 @unknown_4a7f5(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_224f1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22502

bb:                                               ; preds = %dec_label_pc_224ba
  %v1_22500 = call i32 @function_22507()
  br label %dec_label_pc_22502

dec_label_pc_22502:                               ; preds = %bb, %dec_label_pc_224ba
  %v2_22500 = phi i32 [ %v1_22500, %bb ], [ %v3_224f1, %dec_label_pc_224ba ]
  ret i32 %v2_22500
}

define i32 @function_22507() local_unnamed_addr {
dec_label_pc_22507:
  %v0_22508 = load i32, i32* @eax, align 8
  ret i32 %v0_22508
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2250a:
  %v1_22527 = call i32 @unknown_4a8ca(i32 %arg1)
  store i32 %v1_22527, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22538

bb:                                               ; preds = %dec_label_pc_2250a
  %v1_22536 = call i32 @function_2253d()
  br label %dec_label_pc_22538

dec_label_pc_22538:                               ; preds = %bb, %dec_label_pc_2250a
  %v2_22536 = phi i32 [ %v1_22536, %bb ], [ %v1_22527, %dec_label_pc_2250a ]
  ret i32 %v2_22536
}

define i32 @function_2253d() local_unnamed_addr {
dec_label_pc_2253d:
  %v0_2253e = load i32, i32* @eax, align 8
  ret i32 %v0_2253e
}

define i32 @_ZNK5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE5mutexEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22540:
  %v2_2255a = load i32, i32* %arg1, align 4
  store i32 %v2_2255a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22568

bb:                                               ; preds = %dec_label_pc_22540
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_22566 = call i32 @function_2256d(i32 %tmp100)
  br label %dec_label_pc_22568

dec_label_pc_22568:                               ; preds = %bb, %dec_label_pc_22540
  %v3_22566 = phi i32 [ %v2_22566, %bb ], [ %v2_2255a, %dec_label_pc_22540 ]
  ret i32 %v3_22566

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2256d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2256d:
  %v0_2256e = load i32, i32* @eax, align 8
  ret i32 %v0_2256e
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE8try_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22570:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_2258e = call i32 @function_3e21a(i32 %arg1)
  %v2_22597 = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_22597
}

define i32 @function_2259a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2259a:
  %v0_2259a = load i32, i32* @eax, align 8
  %v1_2259d = call i32 @function_28810(i32 %v0_2259a)
  %v0_225a2 = load i32, i32* @ebp, align 4
  %v1_225a2 = add i32 %v0_225a2, -20
  store i32 %v1_225a2, i32* @eax, align 8
  %v1_225a8 = call i32 @function_375a3(i32 %v1_225a2)
  %v0_225ad = load i32, i32* @ebp, align 4
  %v1_225ad = add i32 %v0_225ad, -28
  %v2_225ad = inttoptr i32 %v1_225ad to i32*
  %v3_225ad = load i32, i32* %v2_225ad, align 4
  %v1_225b0 = inttoptr i32 %v3_225ad to i32*
  %v2_225b0 = load i32, i32* %v1_225b0, align 4
  %v1_225b5 = call i32 @unknown_4a994(i32 %v2_225b0)
  %v0_225ba = load i32, i32* @ebp, align 4
  %v1_225ba = add i32 %v0_225ba, -28
  %v2_225ba = inttoptr i32 %v1_225ba to i32*
  %v3_225ba = load i32, i32* %v2_225ba, align 4
  %v1_225bd = trunc i32 %v1_225b5 to i8
  %v3_225bd = add i32 %v3_225ba, 4
  %v4_225bd = inttoptr i32 %v3_225bd to i8*
  store i8 %v1_225bd, i8* %v4_225bd, align 1
  %v0_225c0 = load i32, i32* @ebp, align 4
  %v1_225c0 = add i32 %v0_225c0, -28
  %v2_225c0 = inttoptr i32 %v1_225c0 to i32*
  %v3_225c0 = load i32, i32* %v2_225c0, align 4
  %v1_225c3 = add i32 %v3_225c0, 4
  %v2_225c3 = inttoptr i32 %v1_225c3 to i8*
  %v3_225c3 = load i8, i8* %v2_225c3, align 1
  %v4_225c3 = zext i8 %v3_225c3 to i32
  store i32 %v4_225c3, i32* @eax, align 8
  %v1_225c7 = add i32 %v0_225c0, -12
  %v2_225c7 = inttoptr i32 %v1_225c7 to i32*
  %v3_225c7 = load i32, i32* %v2_225c7, align 4
  %v1_225ca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_225ca = icmp eq i32 %v1_225ca, %v3_225c7
  br i1 %v3_225ca, label %bb, label %dec_label_pc_225d3

bb:                                               ; preds = %dec_label_pc_2259a
  %v1_225d1 = call i32 @function_225f1()
  store i32 %v1_225d1, i32* @eax, align 8
  br label %dec_label_pc_225d3

dec_label_pc_225d3:                               ; preds = %bb, %dec_label_pc_2259a
  %v0_225d3 = call i32 @function_225ec()
  ret i32 %v0_225d3
}

define i32 @function_225d6() local_unnamed_addr {
dec_label_pc_225d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_225d6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_225d6
}

define i32 @function_225ec() local_unnamed_addr {
dec_label_pc_225ec:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_225f1() local_unnamed_addr {
dec_label_pc_225f1:
  %v0_225f6 = load i32, i32* @eax, align 8
  ret i32 %v0_225f6
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_225f8:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp101, i32* @eax, align 8
  %v1_22616 = call i32 @function_3e2a2(i32 %tmp101)
  %v4_2261b = trunc i32 %v1_22616 to i8
  %v5_2261b = icmp eq i8 %v4_2261b, 0
  br i1 %v5_2261b, label %dec_label_pc_22635, label %dec_label_pc_2261f

dec_label_pc_2261f:                               ; preds = %dec_label_pc_225f8
  %v2_2261f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_2261f, i32* @eax, align 8
  %v1_22625 = call i32 @function_28898(i32 %v2_2261f)
  store i32 %v2_2261f, i32* @eax, align 8
  %v1_22630 = call i32 @function_3762b(i32 %v2_2261f)
  br label %dec_label_pc_22635

dec_label_pc_22635:                               ; preds = %dec_label_pc_2261f, %dec_label_pc_225f8
  %v2_22638 = load i32, i32* %arg1, align 4
  store i32 %v2_22638, i32* @eax, align 8
  %v1_2263d = call i32 @function_39256(i32 %v2_22638)
  %v1_22645 = add i32 %tmp101, 4
  %v2_22645 = inttoptr i32 %v1_22645 to i8*
  store i8 1, i8* %v2_22645, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22655

bb:                                               ; preds = %dec_label_pc_22635
  %v1_22653 = call i32 @function_22673()
  store i32 %v1_22653, i32* @eax, align 8
  br label %dec_label_pc_22655

dec_label_pc_22655:                               ; preds = %bb, %dec_label_pc_22635
  %v0_22655 = call i32 @function_2266e()
  ret i32 %v0_22655

; uselistorder directives
  uselistorder i32 %tmp101, { 0, 2, 1 }
}

define i32 @function_22658() local_unnamed_addr {
dec_label_pc_22658:
  %eax.global-to-local = alloca i32, align 4
  %v0_22658 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22658
}

define i32 @function_2266e() local_unnamed_addr {
dec_label_pc_2266e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22673() local_unnamed_addr {
dec_label_pc_22673:
  %v0_22678 = load i32, i32* @eax, align 8
  ret i32 %v0_22678
}

define i32 @_ZSt13copy_backwardIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22679:
  %v1_226a3 = call i32 @unknown_44a8c(i32 %arg2)
  %v1_226b0 = call i32 @unknown_44a8c(i32 %arg1)
  %v1_226c3 = call i32 @unknown_4aad2(i32 %v1_226b0)
  store i32 %v1_226c3, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_226d4

bb:                                               ; preds = %dec_label_pc_22679
  %v1_226d2 = call i32 @function_226d9()
  br label %dec_label_pc_226d4

dec_label_pc_226d4:                               ; preds = %bb, %dec_label_pc_22679
  %v2_226d2 = phi i32 [ %v1_226d2, %bb ], [ %v1_226c3, %dec_label_pc_22679 ]
  ret i32 %v2_226d2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_44a8c, { 1, 0 }
}

define i32 @function_226d9() local_unnamed_addr {
dec_label_pc_226d9:
  %v0_226de = load i32, i32* @eax, align 8
  ret i32 %v0_226de
}

define i32 @_ZNKSt6vectorIhSaIhEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_226e0:
  %v0_226f9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_226f9
}

define i32 @function_22701(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22701:
  %v0_22704 = load i32, i32* @ebp, align 4
  %v1_22704 = add i32 %v0_22704, -28
  %v2_22704 = inttoptr i32 %v1_22704 to i32*
  %v3_22704 = load i32, i32* %v2_22704, align 4
  %v1_2270a = call i32 @unknown_4abac(i32 %v3_22704)
  store i32 %v1_2270a, i32* @ebx, align 4
  %v0_22711 = load i32, i32* @ebp, align 4
  %v1_22711 = add i32 %v0_22711, -28
  %v2_22711 = inttoptr i32 %v1_22711 to i32*
  %v3_22711 = load i32, i32* %v2_22711, align 4
  %v2_2271e = sub i32 %v1_2270a, %v3_22711
  %v1_22720 = add i32 %v0_22711, -32
  %v2_22720 = inttoptr i32 %v1_22720 to i32*
  %v3_22720 = load i32, i32* %v2_22720, align 4
  %v7_22723 = icmp ult i32 %v2_2271e, %v3_22720
  %v5_22728 = icmp eq i1 %v7_22723, false
  br i1 %v5_22728, label %bb, label %dec_label_pc_2272c

bb:                                               ; preds = %dec_label_pc_22701
  %v2_2272a = call i32 @function_22737(i32 %v3_22711)
  %v0_2272c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2272c

dec_label_pc_2272c:                               ; preds = %bb, %dec_label_pc_22701
  %v0_2272c = phi i32 [ %v0_2272c.pre, %bb ], [ %v0_22711, %dec_label_pc_22701 ]
  %v1_2272c = add i32 %v0_2272c, -36
  %v2_2272c = inttoptr i32 %v1_2272c to i32*
  %v3_2272c = load i32, i32* %v2_2272c, align 4
  ret i32 %v3_2272c
}

define i32 @function_22737(i32 %arg1) local_unnamed_addr {
dec_label_pc_22737:
  %v0_22737 = load i32, i32* @ebp, align 4
  %v1_22737 = add i32 %v0_22737, -28
  %v2_22737 = inttoptr i32 %v1_22737 to i32*
  %v3_22737 = load i32, i32* %v2_22737, align 4
  store i32 %v3_22737, i32* @ebx, align 4
  %v3_22744 = load i32, i32* %v2_22737, align 4
  %v2_2274f = add i32 %v0_22737, -20
  %v3_2274f = inttoptr i32 %v2_2274f to i32*
  store i32 %v3_22744, i32* %v3_2274f, align 4
  %v0_22752 = load i32, i32* @ebp, align 4
  %v1_22752 = add i32 %v0_22752, -32
  %v1_22759 = add i32 %v0_22752, -20
  %v2_2275f = call i32 @unknown_4a575(i32 %v1_22759, i32 %v1_22752)
  %v1_22764 = inttoptr i32 %v2_2275f to i32*
  %v2_22764 = load i32, i32* %v1_22764, align 4
  %v1_22766 = load i32, i32* @ebx, align 4
  %v2_22766 = add i32 %v1_22766, %v2_22764
  %v1_22768 = load i32, i32* @ebp, align 4
  %v2_22768 = add i32 %v1_22768, -16
  %v3_22768 = inttoptr i32 %v2_22768 to i32*
  store i32 %v2_22766, i32* %v3_22768, align 4
  %v0_2276b = load i32, i32* @ebp, align 4
  %v1_2276b = add i32 %v0_2276b, -28
  %v2_2276b = inttoptr i32 %v1_2276b to i32*
  %v3_2276b = load i32, i32* %v2_2276b, align 4
  %v2_22776 = add i32 %v0_2276b, -16
  %v3_22776 = inttoptr i32 %v2_22776 to i32*
  %v4_22776 = load i32, i32* %v3_22776, align 4
  %tmp5 = icmp ugt i32 %v3_2276b, %v4_22776
  br i1 %tmp5, label %dec_label_pc_2278b, label %dec_label_pc_2277b

dec_label_pc_2277b:                               ; preds = %dec_label_pc_22737
  %v3_2277b = load i32, i32* %v2_2276b, align 4
  %v1_22781 = call i32 @unknown_4abac(i32 %v3_2277b)
  %v1_22786 = load i32, i32* @ebp, align 4
  %v2_22786 = add i32 %v1_22786, -16
  %v3_22786 = inttoptr i32 %v2_22786 to i32*
  %v4_22786 = load i32, i32* %v3_22786, align 4
  %v10_22786 = icmp ult i32 %v1_22781, %v4_22786
  %v1_22789 = icmp eq i1 %v10_22786, false
  br i1 %v1_22789, label %dec_label_pc_2279b, label %dec_label_pc_2278b

dec_label_pc_2278b:                               ; preds = %dec_label_pc_22737, %dec_label_pc_2277b
  %v0_2278b = phi i32 [ %v0_2276b, %dec_label_pc_22737 ], [ %v1_22786, %dec_label_pc_2277b ]
  %v1_2278b = add i32 %v0_2278b, -28
  %v2_2278b = inttoptr i32 %v1_2278b to i32*
  %v3_2278b = load i32, i32* %v2_2278b, align 4
  %v1_22791 = call i32 @unknown_4abac(i32 %v3_2278b)
  %v0_2279b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2279b

dec_label_pc_2279b:                               ; preds = %dec_label_pc_2277b, %dec_label_pc_2278b
  %v0_2279b = phi i32 [ %v0_2279b.pre, %dec_label_pc_2278b ], [ %v1_22786, %dec_label_pc_2277b ]
  %storemerge = phi i32 [ %v1_22791, %dec_label_pc_2278b ], [ %v4_22786, %dec_label_pc_2277b ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_2279b = add i32 %v0_2279b, -12
  %v2_2279b = inttoptr i32 %v1_2279b to i32*
  %v3_2279b = load i32, i32* %v2_2279b, align 4
  %v1_2279e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2279e = icmp eq i32 %v1_2279e, %v3_2279b
  br i1 %v3_2279e, label %bb, label %dec_label_pc_227a7

bb:                                               ; preds = %dec_label_pc_2279b
  %v1_227a5 = call i32 @function_227ac()
  br label %dec_label_pc_227a7

dec_label_pc_227a7:                               ; preds = %bb, %dec_label_pc_2279b
  %v2_227a5 = phi i32 [ %v1_227a5, %bb ], [ %storemerge, %dec_label_pc_2279b ]
  ret i32 %v2_227a5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4abac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2279b, { 1, 0 }
  uselistorder label %dec_label_pc_2278b, { 1, 0 }
}

define i32 @function_227aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_227aa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_227ac() local_unnamed_addr {
dec_label_pc_227ac:
  %v0_227b1 = load i32, i32* @eax, align 8
  ret i32 %v0_227b1
}

define i32 @_ZSt22__uninitialized_move_aIPhS0_SaIhEET0_T_S3_S2_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_227b2:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22807

bb:                                               ; preds = %dec_label_pc_227b2
  %v9_22805 = call i32 @function_2280c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_22807

dec_label_pc_22807:                               ; preds = %bb, %dec_label_pc_227b2
  %v10_22805 = phi i32 [ %v9_22805, %bb ], [ %arg1, %dec_label_pc_227b2 ]
  ret i32 %v10_22805

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
}

define i32 @function_2280c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2280c:
  %v0_2280d = load i32, i32* @eax, align 8
  ret i32 %v0_2280d
}

define i32 @_ZNSt6vectorIhSaIhEE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2280e:
  ret i32 %arg3
}

define i32 @function_22823(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22823:
  %v0_22823 = load i32, i32* @eax, align 8
  %v1_22823 = load i32, i32* @ebp, align 4
  %v2_22823 = add i32 %v1_22823, -36
  %v3_22823 = inttoptr i32 %v2_22823 to i32*
  store i32 %v0_22823, i32* %v3_22823, align 4
  %v0_22826 = load i32, i32* @ebp, align 4
  %v1_22826 = add i32 %v0_22826, 20
  %v2_22826 = inttoptr i32 %v1_22826 to i8*
  %v3_22826 = load i8, i8* %v2_22826, align 1
  %v3_2282a = add i32 %v0_22826, -37
  %v4_2282a = inttoptr i32 %v3_2282a to i8*
  store i8 %v3_22826, i8* %v4_2282a, align 1
  %v0_2282d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_22833 = load i32, i32* @ebp, align 4
  %v2_22833 = add i32 %v1_22833, -12
  %v3_22833 = inttoptr i32 %v2_22833 to i32*
  store i32 %v0_2282d, i32* %v3_22833, align 4
  %v0_22838 = load i32, i32* @ebp, align 4
  %v1_22838 = add i32 %v0_22838, -36
  %v2_22838 = inttoptr i32 %v1_22838 to i32*
  %v3_22838 = load i32, i32* %v2_22838, align 4
  %v1_2283f = add i32 %v0_22838, -32
  %v2_2283f = inttoptr i32 %v1_2283f to i32*
  %v3_2283f = load i32, i32* %v2_2283f, align 4
  %v2_22845 = call i32 @unknown_4ad17(i32 %v3_2283f, i32 %v3_22838)
  %v1_2284a = load i32, i32* @ebp, align 4
  %v2_2284a = add i32 %v1_2284a, -16
  %v3_2284a = inttoptr i32 %v2_2284a to i32*
  store i32 %v2_22845, i32* %v3_2284a, align 4
  %v0_2284d = load i32, i32* @ebp, align 4
  %v1_2284d = add i32 %v0_2284d, -28
  %v2_2284d = inttoptr i32 %v1_2284d to i32*
  %v3_2284d = load i32, i32* %v2_2284d, align 4
  %v1_22850 = add i32 %v0_2284d, -16
  %v2_22850 = inttoptr i32 %v1_22850 to i32*
  %v3_22850 = load i32, i32* %v2_22850, align 4
  %v2_2285a = call i32 @unknown_44932(i32 %v3_2284d, i32 %v3_22850)
  %v0_22861 = load i32, i32* @ebp, align 4
  %v1_22861 = add i32 %v0_22861, -28
  %v2_22861 = inttoptr i32 %v1_22861 to i32*
  %v3_22861 = load i32, i32* %v2_22861, align 4
  %v2_22864 = inttoptr i32 %v3_22861 to i32*
  store i32 %v2_2285a, i32* %v2_22864, align 4
  %v0_22866 = load i32, i32* @ebp, align 4
  %v1_22866 = add i32 %v0_22866, -28
  %v2_22866 = inttoptr i32 %v1_22866 to i32*
  %v3_22866 = load i32, i32* %v2_22866, align 4
  %v1_22869 = inttoptr i32 %v3_22866 to i32*
  %v2_22869 = load i32, i32* %v1_22869, align 4
  %v2_2286d = add i32 %v0_22866, -16
  %v3_2286d = inttoptr i32 %v2_2286d to i32*
  %v4_2286d = load i32, i32* %v3_2286d, align 4
  %v5_2286d = add i32 %v4_2286d, %v2_22869
  %v3_22870 = load i32, i32* %v2_22866, align 4
  %v2_22873 = add i32 %v3_22870, 8
  %v3_22873 = inttoptr i32 %v2_22873 to i32*
  store i32 %v5_2286d, i32* %v3_22873, align 4
  %v0_22876 = load i32, i32* @ebp, align 4
  %v1_22876 = add i32 %v0_22876, -28
  %v2_22876 = inttoptr i32 %v1_22876 to i32*
  %v3_22876 = load i32, i32* %v2_22876, align 4
  store i32 %v3_22876, i32* @eax, align 8
  %v1_2287c = call i32 @function_3dc40(i32 %v3_22876)
  %v0_22881 = load i32, i32* @ebp, align 4
  %v1_22881 = add i32 %v0_22881, -28
  %v2_22881 = inttoptr i32 %v1_22881 to i32*
  %v3_22881 = load i32, i32* %v2_22881, align 4
  %v1_22884 = inttoptr i32 %v3_22881 to i32*
  %v2_22884 = load i32, i32* %v1_22884, align 4
  %v1_2288e = add i32 %v0_22881, -36
  %v2_2288e = inttoptr i32 %v1_2288e to i32*
  %v3_2288e = load i32, i32* %v2_2288e, align 4
  %v1_22895 = add i32 %v0_22881, -32
  %v2_22895 = inttoptr i32 %v1_22895 to i32*
  %v3_22895 = load i32, i32* %v2_22895, align 4
  store i32 %v3_22895, i32* @eax, align 8
  %v4_2289b = call i32 @function_3ddbd(i32 %v3_22895, i32 %v3_2288e, i32 %v2_22884, i32 %v1_2287c)
  %v0_228a2 = load i32, i32* @ebp, align 4
  %v1_228a2 = add i32 %v0_228a2, -28
  %v2_228a2 = inttoptr i32 %v1_228a2 to i32*
  %v3_228a2 = load i32, i32* %v2_228a2, align 4
  %v2_228a5 = add i32 %v3_228a2, 4
  %v3_228a5 = inttoptr i32 %v2_228a5 to i32*
  store i32 %v4_2289b, i32* %v3_228a5, align 4
  %v0_228a8 = load i32, i32* @ebp, align 4
  %v1_228a8 = add i32 %v0_228a8, -12
  %v2_228a8 = inttoptr i32 %v1_228a8 to i32*
  %v3_228a8 = load i32, i32* %v2_228a8, align 4
  %v1_228ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_228ab = xor i32 %v1_228ab, %v3_228a8
  %v3_228ab = icmp eq i32 %v2_228ab, 0
  store i32 %v2_228ab, i32* @eax, align 8
  br i1 %v3_228ab, label %bb, label %dec_label_pc_228b4

bb:                                               ; preds = %dec_label_pc_22823
  %v1_228b2 = call i32 @function_228b9()
  br label %dec_label_pc_228b4

dec_label_pc_228b4:                               ; preds = %bb, %dec_label_pc_22823
  %v3_228b2 = phi i32 [ %v1_228b2, %bb ], [ %v2_228ab, %dec_label_pc_22823 ]
  ret i32 %v3_228b2

; uselistorder directives
  uselistorder i32 %v0_22881, { 1, 0, 2 }
}

define i32 @function_228b9() local_unnamed_addr {
dec_label_pc_228b9:
  %v0_228ba = load i32, i32* @eax, align 8
  ret i32 %v0_228ba
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_228bb:
  ret i32 %arg1
}

define i32 @function_228d6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_228d6:
  %v0_228d8 = call i32 @unknown_4ae9c()
  store i32 %v0_228d8, i32* @eax, align 8
  %v0_228dd = load i32, i32* @ebp, align 4
  %v1_228dd = add i32 %v0_228dd, -12
  %v2_228dd = inttoptr i32 %v1_228dd to i32*
  %v3_228dd = load i32, i32* %v2_228dd, align 4
  %v1_228e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_228e0 = icmp eq i32 %v1_228e0, %v3_228dd
  br i1 %v3_228e0, label %bb, label %dec_label_pc_228e9

bb:                                               ; preds = %dec_label_pc_228d6
  %v1_228e7 = call i32 @function_228ee()
  br label %dec_label_pc_228e9

dec_label_pc_228e9:                               ; preds = %bb, %dec_label_pc_228d6
  %v2_228e7 = phi i32 [ %v1_228e7, %bb ], [ %v0_228d8, %dec_label_pc_228d6 ]
  ret i32 %v2_228e7
}

define i32 @function_228eb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_228eb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_228ee() local_unnamed_addr {
dec_label_pc_228ee:
  %v0_228ef = load i32, i32* @eax, align 8
  ret i32 %v0_228ef
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_228f0:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_2290d = call i32 @unknown_4af08(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_2291e = add i32 %tmp100, 4
  %v2_2291e = inttoptr i32 %v1_2291e to i32*
  store i32 0, i32* %v2_2291e, align 4
  %v1_22928 = add i32 %tmp100, 8
  %v2_22928 = inttoptr i32 %v1_22928 to i32*
  store i32 0, i32* %v2_22928, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2293b

bb:                                               ; preds = %dec_label_pc_228f0
  %v1_22939 = call i32 @function_22940()
  br label %dec_label_pc_2293b

dec_label_pc_2293b:                               ; preds = %bb, %dec_label_pc_228f0
  %v2_22939 = phi i32 [ %v1_22939, %bb ], [ 0, %dec_label_pc_228f0 ]
  ret i32 %v2_22939

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_22940() local_unnamed_addr {
dec_label_pc_22940:
  %v0_22941 = load i32, i32* @eax, align 8
  ret i32 %v0_22941
}

define i32 @_ZNSaI5CTxInED1Ev() local_unnamed_addr {
dec_label_pc_22942:
  %eax.global-to-local = alloca i32, align 4
  %v2_22943 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_22943
}

define i32 @function_22945(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22945:
  %v0_22948 = load i32, i32* @ebp, align 4
  %v1_22948 = add i32 %v0_22948, 8
  %v2_22948 = inttoptr i32 %v1_22948 to i32*
  %v3_22948 = load i32, i32* %v2_22948, align 4
  %v2_2294b = add i32 %v0_22948, -28
  %v3_2294b = inttoptr i32 %v2_2294b to i32*
  store i32 %v3_22948, i32* %v3_2294b, align 4
  %v0_2294e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_22954 = load i32, i32* @ebp, align 4
  %v2_22954 = add i32 %v1_22954, -12
  %v3_22954 = inttoptr i32 %v2_22954 to i32*
  store i32 %v0_2294e, i32* %v3_22954, align 4
  %v0_22959 = load i32, i32* @ebp, align 4
  %v1_22959 = add i32 %v0_22959, -28
  %v2_22959 = inttoptr i32 %v1_22959 to i32*
  %v3_22959 = load i32, i32* %v2_22959, align 4
  %v1_2295f = call i32 @unknown_4af90(i32 %v3_22959)
  %v0_22964 = load i32, i32* @ebp, align 4
  %v1_22964 = add i32 %v0_22964, -12
  %v2_22964 = inttoptr i32 %v1_22964 to i32*
  %v3_22964 = load i32, i32* %v2_22964, align 4
  %v1_22967 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22967 = xor i32 %v1_22967, %v3_22964
  %v3_22967 = icmp eq i32 %v2_22967, 0
  store i32 %v2_22967, i32* @eax, align 8
  br i1 %v3_22967, label %bb, label %dec_label_pc_22970

bb:                                               ; preds = %dec_label_pc_22945
  %v1_2296e = call i32 @function_22975()
  br label %dec_label_pc_22970

dec_label_pc_22970:                               ; preds = %bb, %dec_label_pc_22945
  %v2_2296e = phi i32 [ %v1_2296e, %bb ], [ %v2_22967, %dec_label_pc_22945 ]
  ret i32 %v2_2296e
}

define i32 @function_22975() local_unnamed_addr {
dec_label_pc_22975:
  %v0_22976 = load i32, i32* @eax, align 8
  ret i32 %v0_22976
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22978:
  ret i32 %arg1
}

define i32 @function_229b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_229b2:
  %v0_229b2 = load i32, i32* @eax, align 8
  %v1_229b5 = call i32 @unknown_4aff0(i32 %v0_229b2)
  %v0_229ba = load i32, i32* @ebp, align 4
  %v1_229ba = add i32 %v0_229ba, -12
  %v2_229ba = inttoptr i32 %v1_229ba to i32*
  %v3_229ba = load i32, i32* %v2_229ba, align 4
  %v1_229bd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_229bd = xor i32 %v1_229bd, %v3_229ba
  %v3_229bd = icmp eq i32 %v2_229bd, 0
  store i32 %v2_229bd, i32* @eax, align 8
  br i1 %v3_229bd, label %bb, label %dec_label_pc_229c6

bb:                                               ; preds = %dec_label_pc_229b2
  %v1_229c4 = call i32 @function_229cb()
  br label %dec_label_pc_229c6

dec_label_pc_229c6:                               ; preds = %bb, %dec_label_pc_229b2
  %v2_229c4 = phi i32 [ %v1_229c4, %bb ], [ %v2_229bd, %dec_label_pc_229b2 ]
  ret i32 %v2_229c4
}

define i32 @function_229cb() local_unnamed_addr {
dec_label_pc_229cb:
  %v0_229cc = load i32, i32* @eax, align 8
  ret i32 %v0_229cc
}

define i32 @_ZSt8_DestroyIP5CTxInEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_229cd:
  ret i32 %arg2
}

define i32 @function_229e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_229e2:
  %v2_229e2 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_229e2 = load i32, i32* @eax, align 8
  %v4_229e2 = trunc i32 %v3_229e2 to i8
  %v5_229e2 = add i8 %v4_229e2, %v2_229e2
  %v21_229e2 = inttoptr i32 %v3_229e2 to i8*
  store i8 %v5_229e2, i8* %v21_229e2, align 1
  %v0_229e4 = load i32, i32* @ecx, align 8
  %v1_229e4 = add i32 %v0_229e4, -1070468027
  %v2_229e4 = inttoptr i32 %v1_229e4 to i8*
  %v3_229e4 = load i8, i8* %v2_229e4, align 1
  %v5_229e4 = trunc i32 %v0_229e4 to i8
  %v6_229e4 = add i8 %v3_229e4, %v5_229e4
  store i8 %v6_229e4, i8* %v2_229e4, align 1
  %v0_229ea = load i32, i32* @ebp, align 4
  %v1_229ea = add i32 %v0_229ea, -32
  %v2_229ea = inttoptr i32 %v1_229ea to i32*
  %v3_229ea = load i32, i32* %v2_229ea, align 4
  %v1_229f1 = add i32 %v0_229ea, -28
  %v2_229f1 = inttoptr i32 %v1_229f1 to i32*
  %v3_229f1 = load i32, i32* %v2_229f1, align 4
  %v2_229f7 = call i32 @unknown_4b086(i32 %v3_229f1, i32 %v3_229ea)
  %v0_229fc = load i32, i32* @ebp, align 4
  %v1_229fc = add i32 %v0_229fc, -12
  %v2_229fc = inttoptr i32 %v1_229fc to i32*
  %v3_229fc = load i32, i32* %v2_229fc, align 4
  %v1_229ff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_229ff = xor i32 %v1_229ff, %v3_229fc
  %v3_229ff = icmp eq i32 %v2_229ff, 0
  store i32 %v2_229ff, i32* @eax, align 8
  br i1 %v3_229ff, label %bb, label %dec_label_pc_22a08

bb:                                               ; preds = %dec_label_pc_229e2
  %v1_22a06 = call i32 @function_22a0d()
  br label %dec_label_pc_22a08

dec_label_pc_22a08:                               ; preds = %bb, %dec_label_pc_229e2
  %v2_22a06 = phi i32 [ %v1_22a06, %bb ], [ %v2_229ff, %dec_label_pc_229e2 ]
  ret i32 %v2_22a06
}

define i32 @function_22a0d() local_unnamed_addr {
dec_label_pc_22a0d:
  %v0_22a0e = load i32, i32* @eax, align 8
  ret i32 %v0_22a0e
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_22a10:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 8
  %v1_22a2d = call i32 @function_39250(i32 %tmp99)
  store i32 0, i32* %arg1, align 4
  %v1_22a3e = add i32 %tmp99, 4
  %v2_22a3e = inttoptr i32 %v1_22a3e to i32*
  store i32 0, i32* %v2_22a3e, align 4
  store i32 %tmp99, i32* %eax.global-to-local, align 8
  %v1_22a48 = add i32 %tmp99, 8
  %v2_22a48 = inttoptr i32 %v1_22a48 to i32*
  store i32 0, i32* %v2_22a48, align 4
  %v3_22a48 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_22a48
}

define i32 @function_22a4f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22a4f:
  %v0_22a4f = load i32, i32* @ebp, align 4
  %v1_22a4f = add i32 %v0_22a4f, -12
  %v2_22a4f = inttoptr i32 %v1_22a4f to i32*
  %v3_22a4f = load i32, i32* %v2_22a4f, align 4
  %v1_22a52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22a52 = xor i32 %v1_22a52, %v3_22a4f
  %v3_22a52 = icmp eq i32 %v2_22a52, 0
  store i32 %v2_22a52, i32* @eax, align 8
  br i1 %v3_22a52, label %bb, label %dec_label_pc_22a5b

bb:                                               ; preds = %dec_label_pc_22a4f
  %v1_22a59 = call i32 @function_22a60()
  br label %dec_label_pc_22a5b

dec_label_pc_22a5b:                               ; preds = %bb, %dec_label_pc_22a4f
  %v2_22a59 = phi i32 [ %v1_22a59, %bb ], [ %v2_22a52, %dec_label_pc_22a4f ]
  ret i32 %v2_22a59
}

define i32 @function_22a60() local_unnamed_addr {
dec_label_pc_22a60:
  %v0_22a61 = load i32, i32* @eax, align 8
  ret i32 %v0_22a61
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22a62:
  %v10_22a85 = icmp eq i32 %arg2, 0
  br i1 %v10_22a85, label %dec_label_pc_22aa4, label %dec_label_pc_22a8b

dec_label_pc_22a8b:                               ; preds = %dec_label_pc_22a62
  %v3_22a9f = call i32 @unknown_4b172(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_22aa4

dec_label_pc_22aa4:                               ; preds = %dec_label_pc_22a8b, %dec_label_pc_22a62
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22ab0

bb:                                               ; preds = %dec_label_pc_22aa4
  %v1_22aae = call i32 @function_22ab5()
  br label %dec_label_pc_22ab0

dec_label_pc_22ab0:                               ; preds = %bb, %dec_label_pc_22aa4
  %v2_22aae = phi i32 [ %v1_22aae, %bb ], [ 0, %dec_label_pc_22aa4 ]
  ret i32 %v2_22aae
}

define i32 @function_22ab5() local_unnamed_addr {
dec_label_pc_22ab5:
  %v0_22ab6 = load i32, i32* @eax, align 8
  ret i32 %v0_22ab6
}

define i32 @_ZSt8_DestroyIP6CTxOutEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22ab7:
  %v2_22ae1 = call i32 @unknown_4b208(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22af2

bb:                                               ; preds = %dec_label_pc_22ab7
  %v1_22af0 = call i32 @function_22af7()
  br label %dec_label_pc_22af2

dec_label_pc_22af2:                               ; preds = %bb, %dec_label_pc_22ab7
  %v2_22af0 = phi i32 [ %v1_22af0, %bb ], [ 0, %dec_label_pc_22ab7 ]
  ret i32 %v2_22af0
}

define i32 @function_22af7() local_unnamed_addr {
dec_label_pc_22af7:
  %v0_22af8 = load i32, i32* @eax, align 8
  ret i32 %v0_22af8
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22afa:
  %v1_22b1a = inttoptr i32 %arg2 to i32*
  %v2_22b1a = load i32, i32* %v1_22b1a, align 4
  store i32 %v2_22b1a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22b2d

bb:                                               ; preds = %dec_label_pc_22afa
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_22b2b = call i32 @function_22b32(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_22b2d

dec_label_pc_22b2d:                               ; preds = %bb, %dec_label_pc_22afa
  %v4_22b2b = phi i32 [ %v3_22b2b, %bb ], [ 0, %dec_label_pc_22afa ]
  ret i32 %v4_22b2b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22b32(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b32:
  %v0_22b33 = load i32, i32* @eax, align 8
  ret i32 %v0_22b33
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b34:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22b5a

bb:                                               ; preds = %dec_label_pc_22b34
  %v2_22b58 = call i32 @function_22b5f(i32 %arg1)
  br label %dec_label_pc_22b5a

dec_label_pc_22b5a:                               ; preds = %bb, %dec_label_pc_22b34
  %v3_22b58 = phi i32 [ %v2_22b58, %bb ], [ %arg1, %dec_label_pc_22b34 ]
  ret i32 %v3_22b58
}

define i32 @function_22b5f(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b5f:
  %v0_22b60 = load i32, i32* @eax, align 8
  ret i32 %v0_22b60
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b62:
  %v1_22b82 = inttoptr i32 %arg2 to i32*
  %v2_22b82 = load i32, i32* %v1_22b82, align 4
  store i32 %v2_22b82, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22b95

bb:                                               ; preds = %dec_label_pc_22b62
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_22b93 = call i32 @function_22b9a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_22b95

dec_label_pc_22b95:                               ; preds = %bb, %dec_label_pc_22b62
  %v4_22b93 = phi i32 [ %v3_22b93, %bb ], [ 0, %dec_label_pc_22b62 ]
  ret i32 %v4_22b93

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22b9a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b9a:
  %v0_22b9b = load i32, i32* @eax, align 8
  ret i32 %v0_22b9b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b9c:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22bc2

bb:                                               ; preds = %dec_label_pc_22b9c
  %v2_22bc0 = call i32 @function_22bc7(i32 %arg1)
  br label %dec_label_pc_22bc2

dec_label_pc_22bc2:                               ; preds = %bb, %dec_label_pc_22b9c
  %v3_22bc0 = phi i32 [ %v2_22bc0, %bb ], [ %arg1, %dec_label_pc_22b9c ]
  ret i32 %v3_22bc0
}

define i32 @function_22bc7(i32 %arg1) local_unnamed_addr {
dec_label_pc_22bc7:
  %v0_22bc8 = load i32, i32* @eax, align 8
  ret i32 %v0_22bc8
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_22bc9:
  %v1_22be6 = call i32 @unknown_4b418(i32 %arg1)
  store i32 %v1_22be6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22bf7

bb:                                               ; preds = %dec_label_pc_22bc9
  %v1_22bf5 = call i32 @function_22bfc()
  br label %dec_label_pc_22bf7

dec_label_pc_22bf7:                               ; preds = %bb, %dec_label_pc_22bc9
  %v2_22bf5 = phi i32 [ %v1_22bf5, %bb ], [ %v1_22be6, %dec_label_pc_22bc9 ]
  ret i32 %v2_22bf5
}

define i32 @function_22bfc() local_unnamed_addr {
dec_label_pc_22bfc:
  %v0_22bfd = load i32, i32* @eax, align 8
  ret i32 %v0_22bfd
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_22bfe:
  %v1_22c1b = call i32 @unknown_4b484(i32 %arg1)
  store i32 %v1_22c1b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22c2c

bb:                                               ; preds = %dec_label_pc_22bfe
  %v1_22c2a = call i32 @function_22c31()
  br label %dec_label_pc_22c2c

dec_label_pc_22c2c:                               ; preds = %bb, %dec_label_pc_22bfe
  %v2_22c2a = phi i32 [ %v1_22c2a, %bb ], [ %v1_22c1b, %dec_label_pc_22bfe ]
  ret i32 %v2_22c2a
}

define i32 @function_22c31() local_unnamed_addr {
dec_label_pc_22c31:
  %v0_22c32 = load i32, i32* @eax, align 8
  ret i32 %v0_22c32
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22c34:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_22c5e = call i32 @unknown_4b4f2(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_22c6f = add i32 %tmp103, 4
  %v2_22c6f = inttoptr i32 %v1_22c6f to i32*
  store i32 0, i32* %v2_22c6f, align 4
  %v1_22c79 = add i32 %tmp103, 8
  %v2_22c79 = inttoptr i32 %v1_22c79 to i32*
  store i32 0, i32* %v2_22c79, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22c8c

bb:                                               ; preds = %dec_label_pc_22c34
  %v1_22c8a = call i32 @function_22c91()
  br label %dec_label_pc_22c8c

dec_label_pc_22c8c:                               ; preds = %bb, %dec_label_pc_22c34
  %v2_22c8a = phi i32 [ %v1_22c8a, %bb ], [ 0, %dec_label_pc_22c34 ]
  ret i32 %v2_22c8a

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_22c91() local_unnamed_addr {
dec_label_pc_22c91:
  %v0_22c92 = load i32, i32* @eax, align 8
  ret i32 %v0_22c92
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c94:
  ret i32 %arg1
}

define i32 @function_22ca1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22ca1:
  %v0_22ca1 = load i32, i32* @ebp, align 4
  %v1_22ca4 = add i32 %v0_22ca1, 2
  store i32 %v1_22ca4, i32* @ebp, align 4
  %v0_22ca5 = load i32, i32* @ecx, align 8
  %v1_22ca5 = add i32 %v0_22ca5, -1
  store i32 %v1_22ca5, i32* @ecx, align 8
  %v0_22ca7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22cac = add i32 %v0_22ca1, -10
  %v3_22cac = inttoptr i32 %v2_22cac to i32*
  store i32 %v0_22ca7, i32* %v3_22cac, align 4
  %v0_22cb1 = load i32, i32* @ebp, align 4
  %v1_22cb1 = add i32 %v0_22cb1, -32
  %v2_22cb1 = inttoptr i32 %v1_22cb1 to i32*
  %v3_22cb1 = load i32, i32* %v2_22cb1, align 4
  %v10_22cb1 = icmp eq i32 %v3_22cb1, 0
  br i1 %v10_22cb1, label %dec_label_pc_22cd8, label %dec_label_pc_22cb7

dec_label_pc_22cb7:                               ; preds = %dec_label_pc_22ca1
  %v1_22cb7 = add i32 %v0_22cb1, -28
  %v2_22cb7 = inttoptr i32 %v1_22cb7 to i32*
  %v3_22cb7 = load i32, i32* %v2_22cb7, align 4
  %v3_22cc2 = load i32, i32* %v2_22cb1, align 4
  %v3_22ccc = call i32 @unknown_4b594(i32 %v3_22cb7, i32 %v3_22cc2, i32 0)
  %v0_22cd8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_22cd8

dec_label_pc_22cd8:                               ; preds = %dec_label_pc_22ca1, %dec_label_pc_22cb7
  %v0_22cd8 = phi i32 [ %v0_22cd8.pre, %dec_label_pc_22cb7 ], [ %v0_22cb1, %dec_label_pc_22ca1 ]
  %storemerge = phi i32 [ %v3_22ccc, %dec_label_pc_22cb7 ], [ 0, %dec_label_pc_22ca1 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_22cd8 = add i32 %v0_22cd8, -12
  %v2_22cd8 = inttoptr i32 %v1_22cd8 to i32*
  %v3_22cd8 = load i32, i32* %v2_22cd8, align 4
  %v1_22cdb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22cdb = icmp eq i32 %v1_22cdb, %v3_22cd8
  br i1 %v3_22cdb, label %bb, label %dec_label_pc_22ce4

bb:                                               ; preds = %dec_label_pc_22cd8
  %v1_22ce2 = call i32 @function_22ce9()
  br label %dec_label_pc_22ce4

dec_label_pc_22ce4:                               ; preds = %bb, %dec_label_pc_22cd8
  %v2_22ce2 = phi i32 [ %v1_22ce2, %bb ], [ %storemerge, %dec_label_pc_22cd8 ]
  ret i32 %v2_22ce2

; uselistorder directives
  uselistorder label %dec_label_pc_22cd8, { 1, 0 }
}

define i32 @function_22ce9() local_unnamed_addr {
dec_label_pc_22ce9:
  %v0_22cea = load i32, i32* @eax, align 8
  ret i32 %v0_22cea
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22ceb:
  %v0_22d03 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_22d03
}

define i32 @function_22d37() local_unnamed_addr {
dec_label_pc_22d37:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22d37 = load i32, i32* %ecx.global-to-local, align 8
  %v1_22d37 = add i32 %v0_22d37, -1
  store i32 %v1_22d37, i32* %ecx.global-to-local, align 8
  %v0_22d39 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22d39
}

define i32 @_ZSt24__uninitialized_fill_n_aIP6CTxOutjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22d3a:
  %v7_22d77 = call i32 @unknown_4b760(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22d88

bb:                                               ; preds = %dec_label_pc_22d3a
  %v1_22d86 = call i32 @function_22d8d()
  br label %dec_label_pc_22d88

dec_label_pc_22d88:                               ; preds = %bb, %dec_label_pc_22d3a
  %v2_22d86 = phi i32 [ %v1_22d86, %bb ], [ 0, %dec_label_pc_22d3a ]
  ret i32 %v2_22d86

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22d8d() local_unnamed_addr {
dec_label_pc_22d8d:
  %v0_22d8e = load i32, i32* @eax, align 8
  ret i32 %v0_22d8e
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22d90:
  %v1_22db0 = inttoptr i32 %arg2 to i32*
  %v2_22db0 = load i32, i32* %v1_22db0, align 4
  store i32 %v2_22db0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22dc3

bb:                                               ; preds = %dec_label_pc_22d90
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_22dc1 = call i32 @function_22dc8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_22dc3

dec_label_pc_22dc3:                               ; preds = %bb, %dec_label_pc_22d90
  %v4_22dc1 = phi i32 [ %v3_22dc1, %bb ], [ 0, %dec_label_pc_22d90 ]
  ret i32 %v4_22dc1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22dc8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22dc8:
  %v0_22dc9 = load i32, i32* @eax, align 8
  ret i32 %v0_22dc9
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_22dca:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_22de7 = call i32 @unknown_4b840(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_22df8 = add i32 %tmp100, 4
  %v2_22df8 = inttoptr i32 %v1_22df8 to i32*
  store i32 0, i32* %v2_22df8, align 4
  %v1_22e02 = add i32 %tmp100, 8
  %v2_22e02 = inttoptr i32 %v1_22e02 to i32*
  store i32 0, i32* %v2_22e02, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22e15

bb:                                               ; preds = %dec_label_pc_22dca
  %v1_22e13 = call i32 @function_22e1a()
  br label %dec_label_pc_22e15

dec_label_pc_22e15:                               ; preds = %bb, %dec_label_pc_22dca
  %v2_22e13 = phi i32 [ %v1_22e13, %bb ], [ 0, %dec_label_pc_22dca ]
  ret i32 %v2_22e13

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_22e1a() local_unnamed_addr {
dec_label_pc_22e1a:
  %v0_22e1b = load i32, i32* @eax, align 8
  ret i32 %v0_22e1b
}

define i32 @_ZNSaI12CTransactionED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22e1c:
  %v1_22e39 = call i32 @unknown_4b8c8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22e4a

bb:                                               ; preds = %dec_label_pc_22e1c
  %v1_22e48 = call i32 @function_22e4f()
  br label %dec_label_pc_22e4a

dec_label_pc_22e4a:                               ; preds = %bb, %dec_label_pc_22e1c
  %v2_22e48 = phi i32 [ %v1_22e48, %bb ], [ 0, %dec_label_pc_22e1c ]
  ret i32 %v2_22e48
}

define i32 @function_22e4f() local_unnamed_addr {
dec_label_pc_22e4f:
  %v0_22e50 = load i32, i32* @eax, align 8
  ret i32 %v0_22e50
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22e52:
  %v10_22e75 = icmp eq i32 %arg2, 0
  br i1 %v10_22e75, label %dec_label_pc_22e94, label %dec_label_pc_22e7b

dec_label_pc_22e7b:                               ; preds = %dec_label_pc_22e52
  %v3_22e8f = call i32 @unknown_4b928(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_22e94

dec_label_pc_22e94:                               ; preds = %dec_label_pc_22e7b, %dec_label_pc_22e52
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22ea0

bb:                                               ; preds = %dec_label_pc_22e94
  %v1_22e9e = call i32 @function_22ea5()
  br label %dec_label_pc_22ea0

dec_label_pc_22ea0:                               ; preds = %bb, %dec_label_pc_22e94
  %v2_22e9e = phi i32 [ %v1_22e9e, %bb ], [ 0, %dec_label_pc_22e94 ]
  ret i32 %v2_22e9e
}

define i32 @function_22ea5() local_unnamed_addr {
dec_label_pc_22ea5:
  %v0_22ea6 = load i32, i32* @eax, align 8
  ret i32 %v0_22ea6
}

define i32 @_ZSt8_DestroyIP12CTransactionEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22ea7:
  ret i32 %arg2
}

define i32 @function_22ebe() local_unnamed_addr {
dec_label_pc_22ebe:
  %v0_22ebe = load i32, i32* @ecx, align 8
  %v1_22ebe = add i32 %v0_22ebe, -1070468027
  %v2_22ebe = inttoptr i32 %v1_22ebe to i8*
  %v3_22ebe = load i8, i8* %v2_22ebe, align 1
  %v5_22ebe = trunc i32 %v0_22ebe to i8
  %v6_22ebe = add i8 %v3_22ebe, %v5_22ebe
  store i8 %v6_22ebe, i8* %v2_22ebe, align 1
  %v0_22ec4 = load i32, i32* @ebp, align 4
  %v1_22ec4 = add i32 %v0_22ec4, -32
  %v2_22ec4 = inttoptr i32 %v1_22ec4 to i32*
  %v3_22ec4 = load i32, i32* %v2_22ec4, align 4
  %v1_22ecb = add i32 %v0_22ec4, -28
  %v2_22ecb = inttoptr i32 %v1_22ecb to i32*
  %v3_22ecb = load i32, i32* %v2_22ecb, align 4
  %v2_22ed1 = call i32 @unknown_4b9be(i32 %v3_22ecb, i32 %v3_22ec4)
  %v0_22ed6 = load i32, i32* @ebp, align 4
  %v1_22ed6 = add i32 %v0_22ed6, -12
  %v2_22ed6 = inttoptr i32 %v1_22ed6 to i32*
  %v3_22ed6 = load i32, i32* %v2_22ed6, align 4
  %v1_22ed9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22ed9 = xor i32 %v1_22ed9, %v3_22ed6
  %v3_22ed9 = icmp eq i32 %v2_22ed9, 0
  store i32 %v2_22ed9, i32* @eax, align 8
  br i1 %v3_22ed9, label %bb, label %dec_label_pc_22ee2

bb:                                               ; preds = %dec_label_pc_22ebe
  %v1_22ee0 = call i32 @function_22ee7()
  br label %dec_label_pc_22ee2

dec_label_pc_22ee2:                               ; preds = %bb, %dec_label_pc_22ebe
  %v2_22ee0 = phi i32 [ %v1_22ee0, %bb ], [ %v2_22ed9, %dec_label_pc_22ebe ]
  ret i32 %v2_22ee0
}

define i32 @function_22ee7() local_unnamed_addr {
dec_label_pc_22ee7:
  %v0_22ee8 = load i32, i32* @eax, align 8
  ret i32 %v0_22ee8
}

define i32 @_ZNSt12_Vector_baseI7uint256SaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_22eea:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_22f07 = call i32 @unknown_4ba58(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_22f18 = add i32 %tmp100, 4
  %v2_22f18 = inttoptr i32 %v1_22f18 to i32*
  store i32 0, i32* %v2_22f18, align 4
  %v1_22f22 = add i32 %tmp100, 8
  %v2_22f22 = inttoptr i32 %v1_22f22 to i32*
  store i32 0, i32* %v2_22f22, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22f35

bb:                                               ; preds = %dec_label_pc_22eea
  %v1_22f33 = call i32 @function_22f3a()
  br label %dec_label_pc_22f35

dec_label_pc_22f35:                               ; preds = %bb, %dec_label_pc_22eea
  %v2_22f33 = phi i32 [ %v1_22f33, %bb ], [ 0, %dec_label_pc_22eea ]
  ret i32 %v2_22f33

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_22f3a() local_unnamed_addr {
dec_label_pc_22f3a:
  %v0_22f3b = load i32, i32* @eax, align 8
  ret i32 %v0_22f3b
}

define i32 @_ZNSaI7uint256ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22f3c:
  %v1_22f59 = call i32 @unknown_4bae0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22f6a

bb:                                               ; preds = %dec_label_pc_22f3c
  %v1_22f68 = call i32 @function_22f6f()
  br label %dec_label_pc_22f6a

dec_label_pc_22f6a:                               ; preds = %bb, %dec_label_pc_22f3c
  %v2_22f68 = phi i32 [ %v1_22f68, %bb ], [ 0, %dec_label_pc_22f3c ]
  ret i32 %v2_22f68
}

define i32 @function_22f6f() local_unnamed_addr {
dec_label_pc_22f6f:
  %v0_22f70 = load i32, i32* @eax, align 8
  ret i32 %v0_22f70
}

define i32 @_ZSt8_DestroyIP7uint256EvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22f71:
  %v2_22f9b = call i32 @unknown_4bb3f(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_22fac

bb:                                               ; preds = %dec_label_pc_22f71
  %v1_22faa = call i32 @function_22fb1()
  br label %dec_label_pc_22fac

dec_label_pc_22fac:                               ; preds = %bb, %dec_label_pc_22f71
  %v2_22faa = phi i32 [ %v1_22faa, %bb ], [ 0, %dec_label_pc_22f71 ]
  ret i32 %v2_22faa
}

define i32 @function_22fb1() local_unnamed_addr {
dec_label_pc_22fb1:
  %v0_22fb2 = load i32, i32* @eax, align 8
  ret i32 %v0_22fb2
}

define i32 @_ZSt6fill_nIPhjhET_S1_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22fb3:
  %v1_22fdc = call i32 @unknown_4b2b9(i32 %arg1)
  %v3_22ff2 = call i32 @unknown_4bc15(i32 %v1_22fdc, i32 %arg2, i32 %arg3)
  store i32 %v3_22ff2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23003

bb:                                               ; preds = %dec_label_pc_22fb3
  %v1_23001 = call i32 @function_23008()
  br label %dec_label_pc_23003

dec_label_pc_23003:                               ; preds = %bb, %dec_label_pc_22fb3
  %v2_23001 = phi i32 [ %v1_23001, %bb ], [ %v3_22ff2, %dec_label_pc_22fb3 ]
  ret i32 %v2_23001
}

define i32 @function_23008() local_unnamed_addr {
dec_label_pc_23008:
  %v0_23009 = load i32, i32* @eax, align 8
  ret i32 %v0_23009
}

define i32 @_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2300a:
  ret i32 %arg4
}

define i32 @function_2302b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2302b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_2302b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_23030 = load i32, i32* @ebp, align 4
  %v2_23030 = add i32 %v1_23030, -12
  %v3_23030 = inttoptr i32 %v2_23030 to i32*
  store i32 %v0_2302b, i32* %v3_23030, align 4
  store i32 0, i32* @eax, align 8
  %v0_23035 = load i32, i32* @ebp, align 4
  %v1_23035 = add i32 %v0_23035, -68
  %v2_23035 = inttoptr i32 %v1_23035 to i32*
  %v3_23035 = load i32, i32* %v2_23035, align 4
  %v10_23035 = icmp eq i32 %v3_23035, 0
  br i1 %v10_23035, label %bb, label %dec_label_pc_2303f

bb:                                               ; preds = %dec_label_pc_2302b
  %v1_23039 = call i32 @function_2341c()
  store i32 %v1_23039, i32* %eax.global-to-local, align 8
  %v0_2303f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2303f

dec_label_pc_2303f:                               ; preds = %bb, %dec_label_pc_2302b
  %v1_23053 = phi i32 [ %v0_2303f.pre, %bb ], [ %v0_23035, %dec_label_pc_2302b ]
  %v1_2303f = add i32 %v1_23053, -60
  %v2_2303f = inttoptr i32 %v1_2303f to i32*
  %v3_2303f = load i32, i32* %v2_2303f, align 4
  store i32 %v3_2303f, i32* %eax.global-to-local, align 8
  %v1_23042 = add i32 %v3_2303f, 8
  %v2_23042 = inttoptr i32 %v1_23042 to i32*
  %v3_23042 = load i32, i32* %v2_23042, align 4
  store i32 %v3_23042, i32* %eax.global-to-local, align 8
  %v3_23047 = load i32, i32* %v2_2303f, align 4
  store i32 %v3_23047, i32* %eax.global-to-local, align 8
  %v1_2304a = add i32 %v3_23047, 4
  %v2_2304a = inttoptr i32 %v1_2304a to i32*
  %v3_2304a = load i32, i32* %v2_2304a, align 4
  %v2_2304f = sub i32 %v3_23042, %v3_2304a
  store i32 %v2_2304f, i32* %eax.global-to-local, align 8
  %v2_23053 = add i32 %v1_23053, -68
  %v3_23053 = inttoptr i32 %v2_23053 to i32*
  %v4_23053 = load i32, i32* %v3_23053, align 4
  %v10_23053 = icmp ult i32 %v2_2304f, %v4_23053
  br i1 %v10_23053, label %bb6, label %dec_label_pc_2305c

bb6:                                              ; preds = %dec_label_pc_2303f
  %v1_23056 = call i32 @function_23208()
  store i32 %v1_23056, i32* %eax.global-to-local, align 8
  %v0_2305c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2305c

dec_label_pc_2305c:                               ; preds = %bb6, %dec_label_pc_2303f
  %v2_23062 = phi i32 [ %v0_2305c.pre, %bb6 ], [ %v1_23053, %dec_label_pc_2303f ]
  %v1_2305c = add i32 %v2_23062, -72
  %v2_2305c = inttoptr i32 %v1_2305c to i32*
  %v3_2305c = load i32, i32* %v2_2305c, align 4
  store i32 %v3_2305c, i32* %eax.global-to-local, align 8
  %v1_2305f = inttoptr i32 %v3_2305c to i8*
  %v2_2305f = load i8, i8* %v1_2305f, align 1
  %v3_23062 = add i32 %v2_23062, -13
  %v4_23062 = inttoptr i32 %v3_23062 to i8*
  store i8 %v2_2305f, i8* %v4_23062, align 1
  %v0_23065 = load i32, i32* @ebp, align 4
  %v1_23065 = add i32 %v0_23065, -48
  store i32 %v1_23065, i32* @eax, align 8
  %v1_23068 = add i32 %v0_23065, -60
  %v2_23068 = inttoptr i32 %v1_23068 to i32*
  %v3_23068 = load i32, i32* %v2_23068, align 4
  store i32 %v3_23068, i32* @edx, align 4
  %v2_23072 = call i32 @function_38eee(i32 %v1_23065, i32 %v3_23068)
  %v0_2307a = load i32, i32* @ebp, align 4
  %v1_23081 = add i32 %v0_2307a, -48
  store i32 %v1_23081, i32* @eax, align 8
  %v1_23087 = call i32 @function_394b8(i32 %v1_23081)
  store i32 %v1_23087, i32* %eax.global-to-local, align 8
  %v1_2308c = load i32, i32* @ebp, align 4
  %v2_2308c = add i32 %v1_2308c, -36
  %v3_2308c = inttoptr i32 %v2_2308c to i32*
  store i32 %v1_23087, i32* %v3_2308c, align 4
  %v0_2308f = load i32, i32* @ebp, align 4
  %v1_2308f = add i32 %v0_2308f, -60
  %v2_2308f = inttoptr i32 %v1_2308f to i32*
  %v3_2308f = load i32, i32* %v2_2308f, align 4
  store i32 %v3_2308f, i32* %eax.global-to-local, align 8
  %v1_23092 = add i32 %v3_2308f, 4
  %v2_23092 = inttoptr i32 %v1_23092 to i32*
  %v3_23092 = load i32, i32* %v2_23092, align 4
  store i32 %v3_23092, i32* %eax.global-to-local, align 8
  %v2_23095 = add i32 %v0_2308f, -32
  %v3_23095 = inttoptr i32 %v2_23095 to i32*
  store i32 %v3_23092, i32* %v3_23095, align 4
  %v0_23098 = load i32, i32* @ebp, align 4
  %v1_23098 = add i32 %v0_23098, -36
  %v2_23098 = inttoptr i32 %v1_23098 to i32*
  %v3_23098 = load i32, i32* %v2_23098, align 4
  store i32 %v3_23098, i32* %eax.global-to-local, align 8
  %v2_2309b = add i32 %v0_23098, -68
  %v3_2309b = inttoptr i32 %v2_2309b to i32*
  %v4_2309b = load i32, i32* %v3_2309b, align 4
  %tmp8 = icmp ugt i32 %v3_23098, %v4_2309b
  %v1_2314e = add i32 %v0_23098, -60
  %v2_2314e = inttoptr i32 %v1_2314e to i32*
  %v3_2314e = load i32, i32* %v2_2314e, align 4
  store i32 %v3_2314e, i32* @eax, align 8
  %v1_23154 = call i32 @function_3e43c(i32 %v3_2314e)
  store i32 %v1_23154, i32* %eax.global-to-local, align 8
  %v0_23159 = load i32, i32* @ebp, align 4
  br i1 %tmp8, label %dec_label_pc_230a4, label %dec_label_pc_2314e

dec_label_pc_230a4:                               ; preds = %dec_label_pc_2305c
  %v1_230af = add i32 %v0_23159, -60
  %v2_230af = inttoptr i32 %v1_230af to i32*
  %v3_230af = load i32, i32* %v2_230af, align 4
  %v1_230b2 = add i32 %v3_230af, 4
  %v2_230b2 = inttoptr i32 %v1_230b2 to i32*
  %v3_230b2 = load i32, i32* %v2_230b2, align 4
  %v1_230b8 = add i32 %v3_230af, 4
  %v2_230b8 = inttoptr i32 %v1_230b8 to i32*
  %v3_230b8 = load i32, i32* %v2_230b8, align 4
  %v3_230bb = load i32, i32* %v2_230af, align 4
  store i32 %v3_230bb, i32* %ebx.global-to-local, align 4
  %v1_230be = add i32 %v3_230bb, 4
  %v2_230be = inttoptr i32 %v1_230be to i32*
  %v3_230be = load i32, i32* %v2_230be, align 4
  store i32 %v3_230be, i32* %ebx.global-to-local, align 4
  %v1_230c1 = add i32 %v0_23159, -68
  %v2_230c1 = inttoptr i32 %v1_230c1 to i32*
  %v3_230c1 = load i32, i32* %v2_230c1, align 4
  %v1_230c4 = sub i32 0, %v3_230c1
  store i32 %v1_230c4, i32* %esi.global-to-local, align 4
  %v2_230c6 = sub i32 %v3_230be, %v3_230c1
  store i32 %v2_230c6, i32* %ebx.global-to-local, align 4
  %v4_230d7 = call i32 @unknown_457bc(i32 %v2_230c6, i32 %v3_230b8, i32 %v3_230b2, i32 %v1_23154)
  store i32 %v4_230d7, i32* %eax.global-to-local, align 8
  %v0_230dc = load i32, i32* @ebp, align 4
  %v1_230dc = add i32 %v0_230dc, -60
  %v2_230dc = inttoptr i32 %v1_230dc to i32*
  %v3_230dc = load i32, i32* %v2_230dc, align 4
  store i32 %v3_230dc, i32* %eax.global-to-local, align 8
  %v1_230df = add i32 %v3_230dc, 4
  %v2_230df = inttoptr i32 %v1_230df to i32*
  %v3_230df = load i32, i32* %v2_230df, align 4
  store i32 %v3_230df, i32* %eax.global-to-local, align 8
  %v2_230e4 = add i32 %v0_230dc, -68
  %v3_230e4 = inttoptr i32 %v2_230e4 to i32*
  %v4_230e4 = load i32, i32* %v3_230e4, align 4
  %v5_230e4 = add i32 %v4_230e4, %v3_230df
  %v3_230e7 = load i32, i32* %v2_230dc, align 4
  store i32 %v3_230e7, i32* %eax.global-to-local, align 8
  %v2_230ea = add i32 %v3_230e7, 4
  %v3_230ea = inttoptr i32 %v2_230ea to i32*
  store i32 %v5_230e4, i32* %v3_230ea, align 4
  %v0_230ed = load i32, i32* @ebp, align 4
  %v1_230ed = add i32 %v0_230ed, -68
  %v2_230ed = inttoptr i32 %v1_230ed to i32*
  %v3_230ed = load i32, i32* %v2_230ed, align 4
  %v1_230f0 = sub i32 0, %v3_230ed
  store i32 %v1_230f0, i32* %eax.global-to-local, align 8
  store i32 %v1_230f0, i32* %ebx.global-to-local, align 4
  %v2_230f4 = add i32 %v0_230ed, -32
  %v3_230f4 = inttoptr i32 %v2_230f4 to i32*
  %v4_230f4 = load i32, i32* %v3_230f4, align 4
  %v5_230f4 = sub i32 %v4_230f4, %v3_230ed
  store i32 %v5_230f4, i32* %ebx.global-to-local, align 4
  %v1_230f7 = add i32 %v0_230ed, -64
  store i32 %v1_230f7, i32* @eax, align 8
  %v1_230fd = call i32 @function_3e6c0(i32 %v1_230f7)
  store i32 %v1_230fd, i32* %eax.global-to-local, align 8
  %v1_23102 = inttoptr i32 %v1_230fd to i32*
  %v2_23102 = load i32, i32* %v1_23102, align 4
  store i32 %v2_23102, i32* %eax.global-to-local, align 8
  %v0_23104 = load i32, i32* @ebp, align 4
  %v1_23104 = add i32 %v0_23104, -32
  %v2_23104 = inttoptr i32 %v1_23104 to i32*
  %v3_23104 = load i32, i32* %v2_23104, align 4
  %v0_2310b = load i32, i32* %ebx.global-to-local, align 4
  %v3_23112 = call i32 @unknown_45683(i32 %v2_23102, i32 %v0_2310b, i32 %v3_23104)
  %v0_23117 = load i32, i32* @ebp, align 4
  %v1_23117 = add i32 %v0_23117, -64
  store i32 %v1_23117, i32* @eax, align 8
  %v1_2311d = call i32 @function_3e6c0(i32 %v1_23117)
  store i32 %v1_2311d, i32* %eax.global-to-local, align 8
  %v1_23122 = inttoptr i32 %v1_2311d to i32*
  %v2_23122 = load i32, i32* %v1_23122, align 4
  store i32 %v2_23122, i32* %eax.global-to-local, align 8
  store i32 %v2_23122, i32* %ebx.global-to-local, align 4
  %v1_23126 = load i32, i32* @ebp, align 4
  %v2_23126 = add i32 %v1_23126, -68
  %v3_23126 = inttoptr i32 %v2_23126 to i32*
  %v4_23126 = load i32, i32* %v3_23126, align 4
  %v5_23126 = add i32 %v4_23126, %v2_23122
  store i32 %v5_23126, i32* %ebx.global-to-local, align 4
  %v1_23129 = add i32 %v1_23126, -64
  store i32 %v1_23129, i32* @eax, align 8
  %v1_2312f = call i32 @function_3e6c0(i32 %v1_23129)
  store i32 %v1_2312f, i32* %eax.global-to-local, align 8
  %v1_23134 = inttoptr i32 %v1_2312f to i32*
  %v2_23134 = load i32, i32* %v1_23134, align 4
  store i32 %v2_23134, i32* %eax.global-to-local, align 8
  %v0_23136 = load i32, i32* @ebp, align 4
  %v1_23136 = add i32 %v0_23136, -13
  %v0_2313d = load i32, i32* %ebx.global-to-local, align 4
  %v3_23144 = call i32 @unknown_4bcc8(i32 %v2_23134, i32 %v0_2313d, i32 %v1_23136)
  store i32 %v3_23144, i32* @eax, align 8
  %v0_23149 = call i32 @function_2341c()
  store i32 %v0_23149, i32* %eax.global-to-local, align 8
  ret i32 %v0_23149

dec_label_pc_2314e:                               ; preds = %dec_label_pc_2305c
  %v1_23159 = add i32 %v0_23159, -36
  %v2_23159 = inttoptr i32 %v1_23159 to i32*
  %v3_23159 = load i32, i32* %v2_23159, align 4
  %v1_2315c = add i32 %v0_23159, -68
  %v2_2315c = inttoptr i32 %v1_2315c to i32*
  %v3_2315c = load i32, i32* %v2_2315c, align 4
  %v2_2315f = sub i32 %v3_2315c, %v3_23159
  %v1_23161 = add i32 %v0_23159, -60
  %v2_23161 = inttoptr i32 %v1_23161 to i32*
  %v3_23161 = load i32, i32* %v2_23161, align 4
  %v1_23164 = add i32 %v3_23161, 4
  %v2_23164 = inttoptr i32 %v1_23164 to i32*
  %v3_23164 = load i32, i32* %v2_23164, align 4
  %v1_2316b = add i32 %v0_23159, -13
  store i32 %v1_2316b, i32* %eax.global-to-local, align 8
  %v4_23179 = call i32 @unknown_45185(i32 %v3_23164, i32 %v2_2315f, i32 %v1_2316b, i32 %v1_23154)
  store i32 %v4_23179, i32* %eax.global-to-local, align 8
  %v0_2317e = load i32, i32* @ebp, align 4
  %v1_2317e = add i32 %v0_2317e, -60
  %v2_2317e = inttoptr i32 %v1_2317e to i32*
  %v3_2317e = load i32, i32* %v2_2317e, align 4
  store i32 %v3_2317e, i32* %eax.global-to-local, align 8
  %v1_23181 = add i32 %v3_2317e, 4
  %v2_23181 = inttoptr i32 %v1_23181 to i32*
  %v3_23181 = load i32, i32* %v2_23181, align 4
  store i32 %v3_23181, i32* %eax.global-to-local, align 8
  %v1_23184 = add i32 %v0_2317e, -36
  %v2_23184 = inttoptr i32 %v1_23184 to i32*
  %v3_23184 = load i32, i32* %v2_23184, align 4
  %v1_23187 = add i32 %v0_2317e, -68
  %v2_23187 = inttoptr i32 %v1_23187 to i32*
  %v3_23187 = load i32, i32* %v2_23187, align 4
  %v2_2318c = sub i32 %v3_23187, %v3_23184
  store i32 %v2_2318c, i32* @ebx, align 4
  %v2_23190 = add i32 %v2_2318c, %v3_23181
  store i32 %v2_23190, i32* @edx, align 4
  %v3_23192 = load i32, i32* %v2_2317e, align 4
  store i32 %v3_23192, i32* %eax.global-to-local, align 8
  %v2_23195 = add i32 %v3_23192, 4
  %v3_23195 = inttoptr i32 %v2_23195 to i32*
  store i32 %v2_23190, i32* %v3_23195, align 4
  %v0_23198 = load i32, i32* @ebp, align 4
  %v1_23198 = add i32 %v0_23198, -60
  %v2_23198 = inttoptr i32 %v1_23198 to i32*
  %v3_23198 = load i32, i32* %v2_23198, align 4
  store i32 %v3_23198, i32* @eax, align 8
  %v1_2319e = call i32 @function_3e43c(i32 %v3_23198)
  store i32 %v1_2319e, i32* %eax.global-to-local, align 8
  store i32 %v1_2319e, i32* %ebx.global-to-local, align 4
  %v0_231a5 = load i32, i32* @ebp, align 4
  %v1_231a5 = add i32 %v0_231a5, -60
  %v2_231a5 = inttoptr i32 %v1_231a5 to i32*
  %v3_231a5 = load i32, i32* %v2_231a5, align 4
  store i32 %v3_231a5, i32* %eax.global-to-local, align 8
  %v1_231a8 = add i32 %v3_231a5, 4
  %v2_231a8 = inttoptr i32 %v1_231a8 to i32*
  %v3_231a8 = load i32, i32* %v2_231a8, align 4
  store i32 %v3_231a8, i32* %esi.global-to-local, align 4
  %v1_231ab = add i32 %v0_231a5, -64
  store i32 %v1_231ab, i32* @eax, align 8
  %v1_231b1 = call i32 @function_3e6c0(i32 %v1_231ab)
  store i32 %v1_231b1, i32* %eax.global-to-local, align 8
  %v1_231b6 = inttoptr i32 %v1_231b1 to i32*
  %v2_231b6 = load i32, i32* %v1_231b6, align 4
  store i32 %v2_231b6, i32* %eax.global-to-local, align 8
  %v0_231b8 = load i32, i32* %ebx.global-to-local, align 4
  %v0_231bc = load i32, i32* %esi.global-to-local, align 4
  %v0_231c0 = load i32, i32* @ebp, align 4
  %v1_231c0 = add i32 %v0_231c0, -32
  %v2_231c0 = inttoptr i32 %v1_231c0 to i32*
  %v3_231c0 = load i32, i32* %v2_231c0, align 4
  %v4_231ca = call i32 @unknown_457bc(i32 %v2_231b6, i32 %v3_231c0, i32 %v0_231bc, i32 %v0_231b8)
  store i32 %v4_231ca, i32* %eax.global-to-local, align 8
  %v0_231cf = load i32, i32* @ebp, align 4
  %v1_231cf = add i32 %v0_231cf, -60
  %v2_231cf = inttoptr i32 %v1_231cf to i32*
  %v3_231cf = load i32, i32* %v2_231cf, align 4
  store i32 %v3_231cf, i32* %eax.global-to-local, align 8
  %v1_231d2 = add i32 %v3_231cf, 4
  %v2_231d2 = inttoptr i32 %v1_231d2 to i32*
  %v3_231d2 = load i32, i32* %v2_231d2, align 4
  store i32 %v3_231d2, i32* %eax.global-to-local, align 8
  %v2_231d7 = add i32 %v0_231cf, -36
  %v3_231d7 = inttoptr i32 %v2_231d7 to i32*
  %v4_231d7 = load i32, i32* %v3_231d7, align 4
  %v5_231d7 = add i32 %v4_231d7, %v3_231d2
  %v3_231da = load i32, i32* %v2_231cf, align 4
  store i32 %v3_231da, i32* %eax.global-to-local, align 8
  %v2_231dd = add i32 %v3_231da, 4
  %v3_231dd = inttoptr i32 %v2_231dd to i32*
  store i32 %v5_231d7, i32* %v3_231dd, align 4
  %v4_231dd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_231dd

; uselistorder directives
  uselistorder i32 %v0_2317e, { 1, 0, 2 }
  uselistorder i32 %v0_23159, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 16, 29, 30, 31, 32, 33, 0, 34, 35, 36, 37, 1 }
}

define i32 @function_231a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_231a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_231e2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_231e2:
  %v2_231e9 = load i32, i32* @eax, align 8
  %v4_231e9 = mul i32 %v2_231e9, 2
  %v21_231e9 = inttoptr i32 %v2_231e9 to i32*
  store i32 %v4_231e9, i32* %v21_231e9, align 4
  %v0_231ed = load i32, i32* @ebp, align 4
  %v1_231ed = add i32 %v0_231ed, -13
  %v1_231f4 = add i32 %v0_231ed, -32
  %v2_231f4 = inttoptr i32 %v1_231f4 to i32*
  %v3_231f4 = load i32, i32* %v2_231f4, align 4
  %v0_231fb = load i32, i32* @eax, align 8
  %v3_231fe = call i32 @unknown_4bcc8(i32 %v0_231fb, i32 %v3_231f4, i32 %v1_231ed)
  store i32 %v3_231fe, i32* @eax, align 8
  %v0_23203 = call i32 @function_2341c()
  ret i32 %v0_23203

; uselistorder directives
  uselistorder i32 %v2_231e9, { 1, 0 }
}

define i32 @function_23208() local_unnamed_addr {
dec_label_pc_23208:
  %v0_23210 = load i32, i32* @ebp, align 4
  %v1_23210 = add i32 %v0_23210, -68
  %v2_23210 = inttoptr i32 %v1_23210 to i32*
  %v3_23210 = load i32, i32* %v2_23210, align 4
  %v1_23217 = add i32 %v0_23210, -60
  %v2_23217 = inttoptr i32 %v1_23217 to i32*
  %v3_23217 = load i32, i32* %v2_23217, align 4
  %v4_2321d = call i32 @unknown_456ea(i32 %v3_23217, i32 %v3_23210, i32 ptrtoint ([23 x i8]* @global_var_7154.2867 to i32))
  %v1_23222 = load i32, i32* @ebp, align 4
  %v2_23222 = add i32 %v1_23222, -28
  %v3_23222 = inttoptr i32 %v2_23222 to i32*
  store i32 %v4_2321d, i32* %v3_23222, align 4
  %v0_23225 = load i32, i32* @ebp, align 4
  %v1_23225 = add i32 %v0_23225, -44
  store i32 %v1_23225, i32* @eax, align 8
  %v1_23228 = add i32 %v0_23225, -60
  %v2_23228 = inttoptr i32 %v1_23228 to i32*
  %v3_23228 = load i32, i32* %v2_23228, align 4
  %v2_23232 = call i32 @function_38e70(i32 %v1_23225, i32 %v3_23228)
  ret i32 %v2_23232
}

define i32 @function_2323c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2323c:
  %esi.global-to-local = alloca i32, align 4
  %v0_23241 = load i32, i32* @ebp, align 4
  %v1_23241 = add i32 %v0_23241, -64
  store i32 %v1_23241, i32* @eax, align 8
  %v1_23247 = call i32 @function_394b8(i32 %v1_23241)
  %v1_2324c = load i32, i32* @ebp, align 4
  %v2_2324c = add i32 %v1_2324c, -24
  %v3_2324c = inttoptr i32 %v2_2324c to i32*
  store i32 %v1_23247, i32* %v3_2324c, align 4
  %v0_2324f = load i32, i32* @ebp, align 4
  %v1_2324f = add i32 %v0_2324f, -60
  %v2_2324f = inttoptr i32 %v1_2324f to i32*
  %v3_2324f = load i32, i32* %v2_2324f, align 4
  %v1_23252 = add i32 %v0_2324f, -28
  %v2_23252 = inttoptr i32 %v1_23252 to i32*
  %v3_23252 = load i32, i32* %v2_23252, align 4
  store i32 %v3_23252, i32* @edx, align 4
  %v2_2325c = call i32 @unknown_4512e(i32 %v3_2324f, i32 %v3_23252)
  %v1_23261 = load i32, i32* @ebp, align 4
  %v2_23261 = add i32 %v1_23261, -20
  %v3_23261 = inttoptr i32 %v2_23261 to i32*
  store i32 %v2_2325c, i32* %v3_23261, align 4
  %v0_23264 = load i32, i32* @ebp, align 4
  %v1_23264 = add i32 %v0_23264, -20
  %v2_23264 = inttoptr i32 %v1_23264 to i32*
  %v3_23264 = load i32, i32* %v2_23264, align 4
  %v2_23267 = add i32 %v0_23264, -40
  %v3_23267 = inttoptr i32 %v2_23267 to i32*
  store i32 %v3_23264, i32* %v3_23267, align 4
  %v0_2326a = load i32, i32* @ebp, align 4
  %v1_2326a = add i32 %v0_2326a, -60
  %v2_2326a = inttoptr i32 %v1_2326a to i32*
  %v3_2326a = load i32, i32* %v2_2326a, align 4
  store i32 %v3_2326a, i32* @eax, align 8
  %v1_23270 = call i32 @function_3e43c(i32 %v3_2326a)
  %v0_23275 = load i32, i32* @ebp, align 4
  %v1_23275 = add i32 %v0_23275, -24
  %v2_23275 = inttoptr i32 %v1_23275 to i32*
  %v3_23275 = load i32, i32* %v2_23275, align 4
  %v1_23278 = add i32 %v0_23275, -20
  %v2_23278 = inttoptr i32 %v1_23278 to i32*
  %v3_23278 = load i32, i32* %v2_23278, align 4
  %v2_2327b = add i32 %v3_23278, %v3_23275
  store i32 %v2_2327b, i32* @edx, align 4
  %v1_23281 = add i32 %v0_23275, -72
  %v2_23281 = inttoptr i32 %v1_23281 to i32*
  %v3_23281 = load i32, i32* %v2_23281, align 4
  %v1_23288 = add i32 %v0_23275, -68
  %v2_23288 = inttoptr i32 %v1_23288 to i32*
  %v3_23288 = load i32, i32* %v2_23288, align 4
  %v4_23292 = call i32 @unknown_45185(i32 %v2_2327b, i32 %v3_23288, i32 %v3_23281, i32 %v1_23270)
  %v0_23297 = load i32, i32* @ebp, align 4
  %v1_23297 = add i32 %v0_23297, -40
  %v2_23297 = inttoptr i32 %v1_23297 to i32*
  store i32 0, i32* %v2_23297, align 4
  %v0_2329e = load i32, i32* @ebp, align 4
  %v1_2329e = add i32 %v0_2329e, -60
  %v2_2329e = inttoptr i32 %v1_2329e to i32*
  %v3_2329e = load i32, i32* %v2_2329e, align 4
  store i32 %v3_2329e, i32* @eax, align 8
  %v1_232a4 = call i32 @function_3e43c(i32 %v3_2329e)
  store i32 %v1_232a4, i32* @ebx, align 4
  %v0_232ab = load i32, i32* @ebp, align 4
  %v1_232ab = add i32 %v0_232ab, -64
  store i32 %v1_232ab, i32* @eax, align 8
  %v1_232b1 = call i32 @function_3e6c0(i32 %v1_232ab)
  %v1_232b6 = inttoptr i32 %v1_232b1 to i32*
  %v2_232b6 = load i32, i32* %v1_232b6, align 4
  store i32 %v2_232b6, i32* @edx, align 4
  %v0_232b8 = load i32, i32* @ebp, align 4
  %v1_232b8 = add i32 %v0_232b8, -60
  %v2_232b8 = inttoptr i32 %v1_232b8 to i32*
  %v3_232b8 = load i32, i32* %v2_232b8, align 4
  %v1_232bb = inttoptr i32 %v3_232b8 to i32*
  %v2_232bb = load i32, i32* %v1_232bb, align 4
  %v0_232bd = load i32, i32* @ebx, align 4
  %v1_232c1 = add i32 %v0_232b8, -20
  %v2_232c1 = inttoptr i32 %v1_232c1 to i32*
  %v3_232c1 = load i32, i32* %v2_232c1, align 4
  %v4_232cf = call i32 @unknown_457bc(i32 %v2_232bb, i32 %v2_232b6, i32 %v3_232c1, i32 %v0_232bd)
  %v1_232d4 = load i32, i32* @ebp, align 4
  %v2_232d4 = add i32 %v1_232d4, -40
  %v3_232d4 = inttoptr i32 %v2_232d4 to i32*
  store i32 %v4_232cf, i32* %v3_232d4, align 4
  %v0_232d7 = load i32, i32* @ebp, align 4
  %v1_232d7 = add i32 %v0_232d7, -68
  %v2_232d7 = inttoptr i32 %v1_232d7 to i32*
  %v3_232d7 = load i32, i32* %v2_232d7, align 4
  %v1_232da = add i32 %v0_232d7, -40
  %v2_232da = inttoptr i32 %v1_232da to i32*
  %v3_232da = load i32, i32* %v2_232da, align 4
  %v5_232da = add i32 %v3_232da, %v3_232d7
  store i32 %v5_232da, i32* %v2_232da, align 4
  %v0_232dd = load i32, i32* @ebp, align 4
  %v1_232dd = add i32 %v0_232dd, -60
  %v2_232dd = inttoptr i32 %v1_232dd to i32*
  %v3_232dd = load i32, i32* %v2_232dd, align 4
  store i32 %v3_232dd, i32* @eax, align 8
  %v1_232e3 = call i32 @function_3e43c(i32 %v3_232dd)
  store i32 %v1_232e3, i32* @ebx, align 4
  %v0_232ea = load i32, i32* @ebp, align 4
  %v1_232ea = add i32 %v0_232ea, -60
  %v2_232ea = inttoptr i32 %v1_232ea to i32*
  %v3_232ea = load i32, i32* %v2_232ea, align 4
  %v1_232ed = add i32 %v3_232ea, 4
  %v2_232ed = inttoptr i32 %v1_232ed to i32*
  %v3_232ed = load i32, i32* %v2_232ed, align 4
  store i32 %v3_232ed, i32* %esi.global-to-local, align 4
  %v1_232f0 = add i32 %v0_232ea, -64
  store i32 %v1_232f0, i32* @eax, align 8
  %v1_232f6 = call i32 @function_3e6c0(i32 %v1_232f0)
  %v1_232fb = inttoptr i32 %v1_232f6 to i32*
  %v2_232fb = load i32, i32* %v1_232fb, align 4
  %v0_232fd = load i32, i32* @ebx, align 4
  %v0_23301 = load i32, i32* @ebp, align 4
  %v1_23301 = add i32 %v0_23301, -40
  %v2_23301 = inttoptr i32 %v1_23301 to i32*
  %v3_23301 = load i32, i32* %v2_23301, align 4
  store i32 %v3_23301, i32* @edx, align 4
  %v0_23308 = load i32, i32* %esi.global-to-local, align 4
  %v4_2330f = call i32 @unknown_457bc(i32 %v2_232fb, i32 %v0_23308, i32 %v3_23301, i32 %v0_232fd)
  %v1_23314 = load i32, i32* @ebp, align 4
  %v2_23314 = add i32 %v1_23314, -40
  %v3_23314 = inttoptr i32 %v2_23314 to i32*
  store i32 %v4_2330f, i32* %v3_23314, align 4
  %v0_23317 = load i32, i32* @ebp, align 4
  %v1_23317 = add i32 %v0_23317, -60
  %v2_23317 = inttoptr i32 %v1_23317 to i32*
  %v3_23317 = load i32, i32* %v2_23317, align 4
  store i32 %v3_23317, i32* @eax, align 8
  %v1_2331d = call i32 @function_3e43c(i32 %v3_23317)
  store i32 %v1_2331d, i32* @eax, align 8
  %v0_23322 = load i32, i32* @ebp, align 4
  %v1_23322 = add i32 %v0_23322, -60
  %v2_23322 = inttoptr i32 %v1_23322 to i32*
  %v3_23328 = load i32, i32* %v2_23322, align 4
  %v1_2332b = inttoptr i32 %v3_23328 to i32*
  %v2_2332b = load i32, i32* %v1_2332b, align 4
  %v1_23338 = call i32 @function_3e469(i32 %v2_2332b)
  %v0_2333d = load i32, i32* @ebp, align 4
  %v1_2333d = add i32 %v0_2333d, -60
  %v2_2333d = inttoptr i32 %v1_2333d to i32*
  %v3_2333d = load i32, i32* %v2_2333d, align 4
  %v1_23340 = add i32 %v3_2333d, 8
  %v2_23340 = inttoptr i32 %v1_23340 to i32*
  %v3_23340 = load i32, i32* %v2_23340, align 4
  %v1_23348 = inttoptr i32 %v3_2333d to i32*
  %v2_23348 = load i32, i32* %v1_23348, align 4
  %v2_2334c = sub i32 %v3_23340, %v2_23348
  %v3_23352 = load i32, i32* %v2_2333d, align 4
  %v1_23355 = inttoptr i32 %v3_23352 to i32*
  %v2_23355 = load i32, i32* %v1_23355, align 4
  store i32 %v3_23352, i32* @eax, align 8
  %v3_23365 = call i32 @function_3e83a(i32 %v3_23352, i32 %v2_23355, i32 %v2_2334c)
  %v0_2336a = load i32, i32* @ebp, align 4
  %v1_2336a = add i32 %v0_2336a, -60
  %v2_2336a = inttoptr i32 %v1_2336a to i32*
  %v3_2336a = load i32, i32* %v2_2336a, align 4
  %v1_2336d = add i32 %v0_2336a, -20
  %v2_2336d = inttoptr i32 %v1_2336d to i32*
  %v3_2336d = load i32, i32* %v2_2336d, align 4
  %v2_23370 = inttoptr i32 %v3_2336a to i32*
  store i32 %v3_2336d, i32* %v2_23370, align 4
  %v0_23372 = load i32, i32* @ebp, align 4
  %v1_23372 = add i32 %v0_23372, -60
  %v2_23372 = inttoptr i32 %v1_23372 to i32*
  %v3_23372 = load i32, i32* %v2_23372, align 4
  %v1_23375 = add i32 %v0_23372, -40
  %v2_23375 = inttoptr i32 %v1_23375 to i32*
  %v3_23375 = load i32, i32* %v2_23375, align 4
  %v2_23378 = add i32 %v3_23372, 4
  %v3_23378 = inttoptr i32 %v2_23378 to i32*
  store i32 %v3_23375, i32* %v3_23378, align 4
  %v0_2337b = load i32, i32* @ebp, align 4
  %v1_2337b = add i32 %v0_2337b, -28
  %v2_2337b = inttoptr i32 %v1_2337b to i32*
  %v3_2337b = load i32, i32* %v2_2337b, align 4
  %v1_2337e = add i32 %v0_2337b, -20
  %v2_2337e = inttoptr i32 %v1_2337e to i32*
  %v3_2337e = load i32, i32* %v2_2337e, align 4
  %v2_23381 = add i32 %v3_2337e, %v3_2337b
  %v1_23383 = add i32 %v0_2337b, -60
  %v2_23383 = inttoptr i32 %v1_23383 to i32*
  %v3_23383 = load i32, i32* %v2_23383, align 4
  store i32 %v3_23383, i32* @eax, align 8
  %v2_23386 = add i32 %v3_23383, 8
  %v3_23386 = inttoptr i32 %v2_23386 to i32*
  store i32 %v2_23381, i32* %v3_23386, align 4
  %v0_23389 = call i32 @function_2341c()
  ret i32 %v0_23389

; uselistorder directives
  uselistorder i32 %v3_23352, { 1, 0, 2 }
  uselistorder i32 %v0_23275, { 1, 0, 2, 3 }
  uselistorder i32 ()* @function_2341c, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_457bc, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @function_3e6c0, { 1, 0, 5, 4, 3, 2 }
}

define i32 @function_2338f() local_unnamed_addr {
dec_label_pc_2338f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2338f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2338f
}

define i32 @function_233a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_233a0:
  %v0_233a0 = load i32, i32* @eax, align 8
  %v2_233a0 = add i32 %v0_233a0, 36
  %v16_233a0 = and i32 %v2_233a0, 255
  %v18_233a0 = and i32 %v0_233a0, -256
  %v19_233a0 = or i32 %v16_233a0, %v18_233a0
  ret i32 %v19_233a0

; uselistorder directives
  uselistorder i32 %v0_233a0, { 1, 0 }
}

define i32 @function_233a6() local_unnamed_addr {
dec_label_pc_233a6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_233a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_233a6 = add i32 %v0_233a6, 1962989693
  %v2_233a6 = inttoptr i32 %v1_233a6 to i32*
  %v3_233a6 = load i32, i32* %v2_233a6, align 4
  %v4_233a6 = add i32 %v3_233a6, 1
  store i32 %v4_233a6, i32* %v2_233a6, align 4
  %v0_233ac = load i32, i32* %ebx.global-to-local, align 4
  %v1_233ac = add i32 %v0_233ac, 76137541
  %v2_233ac = inttoptr i32 %v1_233ac to i8*
  %v3_233ac = load i8, i8* %v2_233ac, align 1
  %v4_233ac = load i32, i32* %ecx.global-to-local, align 8
  %v5_233ac = trunc i32 %v4_233ac to i8
  %v6_233ac = xor i8 %v5_233ac, %v3_233ac
  store i8 %v6_233ac, i8* %v2_233ac, align 1
  %v0_233b2 = load i32, i32* %eax.global-to-local, align 8
  %v11_233b2 = and i32 %v0_233b2, -24
  store i32 %v11_233b2, i32* %eax.global-to-local, align 8
  ret i32 %v11_233b2

; uselistorder directives
  uselistorder i32 %v11_233b2, { 1, 0 }
}

define i32 @function_233d3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_233d3:
  %v0_233d3 = load i32, i32* @ecx, align 8
  %v1_233d6 = call i32 @function_3e469(i32 %v0_233d3)
  %v0_233db = call i32 @function_233fe()
  ret i32 %v0_233db
}

define i32 @function_233dd() local_unnamed_addr {
dec_label_pc_233dd:
  %v0_233dd = load i32, i32* @ebp, align 4
  %v1_233dd = add i32 %v0_233dd, -60
  %v2_233dd = inttoptr i32 %v1_233dd to i32*
  %v3_233dd = load i32, i32* %v2_233dd, align 4
  store i32 %v3_233dd, i32* @eax, align 8
  %v1_233e3 = call i32 @function_3e43c(i32 %v3_233dd)
  %v0_233ec = load i32, i32* @ebp, align 4
  %v1_233f3 = add i32 %v0_233ec, -20
  %v2_233f3 = inttoptr i32 %v1_233f3 to i32*
  %v3_233f3 = load i32, i32* %v2_233f3, align 4
  store i32 %v3_233f3, i32* @eax, align 8
  %v1_233f9 = call i32 @function_3e469(i32 %v3_233f3)
  ret i32 %v1_233f9

; uselistorder directives
  uselistorder i32 (i32)* @function_3e469, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_3e43c, { 6, 3, 2, 1, 0, 5, 4 }
}

define i32 @function_233fe() local_unnamed_addr {
dec_label_pc_233fe:
  %v0_233fe = load i32, i32* @ebp, align 4
  %v1_233fe = add i32 %v0_233fe, -60
  %v2_233fe = inttoptr i32 %v1_233fe to i32*
  %v3_233fe = load i32, i32* %v2_233fe, align 4
  store i32 %v3_233fe, i32* @eax, align 8
  %v1_23401 = add i32 %v0_233fe, -28
  %v2_23401 = inttoptr i32 %v1_23401 to i32*
  %v3_23401 = load i32, i32* %v2_23401, align 4
  %v1_23408 = add i32 %v0_233fe, -20
  %v2_23408 = inttoptr i32 %v1_23408 to i32*
  %v3_23408 = load i32, i32* %v2_23408, align 4
  %v3_23412 = call i32 @function_3e83a(i32 %v3_233fe, i32 %v3_23408, i32 %v3_23401)
  ret i32 %v3_23412

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_3e83a, { 1, 0 }
}

define i32 @function_2341c() local_unnamed_addr {
dec_label_pc_2341c:
  %v0_2341c = load i32, i32* @ebp, align 4
  %v1_2341c = add i32 %v0_2341c, -12
  %v2_2341c = inttoptr i32 %v1_2341c to i32*
  %v3_2341c = load i32, i32* %v2_2341c, align 4
  %v1_2341f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2341f = xor i32 %v1_2341f, %v3_2341c
  %v3_2341f = icmp eq i32 %v2_2341f, 0
  store i32 %v2_2341f, i32* @ebx, align 4
  br i1 %v3_2341f, label %bb, label %dec_label_pc_2341c.dec_label_pc_23428_crit_edge

dec_label_pc_2341c.dec_label_pc_23428_crit_edge:  ; preds = %dec_label_pc_2341c
  %v2_23426.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_23428

bb:                                               ; preds = %dec_label_pc_2341c
  %v1_23426 = call i32 @function_2342d()
  br label %dec_label_pc_23428

dec_label_pc_23428:                               ; preds = %dec_label_pc_2341c.dec_label_pc_23428_crit_edge, %bb
  %v2_23426 = phi i32 [ %v2_23426.pre, %dec_label_pc_2341c.dec_label_pc_23428_crit_edge ], [ %v1_23426, %bb ]
  ret i32 %v2_23426

; uselistorder directives
  uselistorder label %dec_label_pc_23428, { 1, 0 }
}

define i32 @function_2342d() local_unnamed_addr {
dec_label_pc_2342d:
  %v0_2342d = load i32, i32* @ebp, align 4
  %v1_2342d = add i32 %v0_2342d, -8
  %v1_23430 = inttoptr i32 %v1_2342d to i32*
  %v2_23430 = load i32, i32* %v1_23430, align 4
  store i32 %v2_23430, i32* @ebx, align 4
  %v1_23432 = inttoptr i32 %v0_2342d to i32*
  %v2_23432 = load i32, i32* %v1_23432, align 4
  store i32 %v2_23432, i32* @ebp, align 4
  %v0_23433 = load i32, i32* @eax, align 8
  ret i32 %v0_23433
}

define i32 @_Z9SerializeI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23434:
  %stack_var_-17 = alloca i32, align 4
  %v2_2345d = ptrtoint i32* %stack_var_-17 to i32
  %v5_2347f = call i32 @unknown_4c158(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_2345d)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23490

bb:                                               ; preds = %dec_label_pc_23434
  %v1_2348e = call i32 @function_23495()
  br label %dec_label_pc_23490

dec_label_pc_23490:                               ; preds = %bb, %dec_label_pc_23434
  %v2_2348e = phi i32 [ %v1_2348e, %bb ], [ 0, %dec_label_pc_23434 ]
  ret i32 %v2_2348e
}

define i32 @function_23495() local_unnamed_addr {
dec_label_pc_23495:
  %v0_23496 = load i32, i32* @eax, align 8
  ret i32 %v0_23496
}

define i32 @_Z9SerializeI11CDataStreamEvRT_RK7CScriptii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23497:
  %v8_234db = call i32 @unknown_468cb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_234ec

bb:                                               ; preds = %dec_label_pc_23497
  %v1_234ea = call i32 @function_234f1()
  br label %dec_label_pc_234ec

dec_label_pc_234ec:                               ; preds = %bb, %dec_label_pc_23497
  %v2_234ea = phi i32 [ %v1_234ea, %bb ], [ 0, %dec_label_pc_23497 ]
  ret i32 %v2_234ea

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_234f1() local_unnamed_addr {
dec_label_pc_234f1:
  %v0_234f2 = load i32, i32* @eax, align 8
  ret i32 %v0_234f2
}

define i32 @_Z9SerializeI11CDataStreamEvRT_xii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_234f3:
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-44, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23548

bb:                                               ; preds = %dec_label_pc_234f3
  %v2_2352a = ptrtoint i32* %stack_var_-44 to i32
  %v4_23546 = call i32 @function_2354d(i32 %arg1, i32 %v2_2352a, i32 8)
  br label %dec_label_pc_23548

dec_label_pc_23548:                               ; preds = %bb, %dec_label_pc_234f3
  %v5_23546 = phi i32 [ %v4_23546, %bb ], [ 0, %dec_label_pc_234f3 ]
  ret i32 %v5_23546
}

define i32 @function_2354d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2354d:
  %v0_2354e = load i32, i32* @eax, align 8
  ret i32 %v0_2354e
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEC1EPKSt13_Rb_tree_nodeIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23550:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23581

bb:                                               ; preds = %dec_label_pc_23550
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2357f = call i32 @function_23586(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_23581

dec_label_pc_23581:                               ; preds = %bb, %dec_label_pc_23550
  %v4_2357f = phi i32 [ %v3_2357f, %bb ], [ 0, %dec_label_pc_23550 ]
  ret i32 %v4_2357f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23586(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23586:
  %v0_23587 = load i32, i32* @eax, align 8
  ret i32 %v0_23587
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23588:
  %v1_235a2 = add i32 %arg1, 8
  %v2_235a2 = inttoptr i32 %v1_235a2 to i32*
  %v3_235a2 = load i32, i32* %v2_235a2, align 4
  store i32 %v3_235a2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_235b1

bb:                                               ; preds = %dec_label_pc_23588
  %v2_235af = call i32 @function_235b6(i32 %arg1)
  br label %dec_label_pc_235b1

dec_label_pc_235b1:                               ; preds = %bb, %dec_label_pc_23588
  %v3_235af = phi i32 [ %v2_235af, %bb ], [ %v3_235a2, %dec_label_pc_23588 ]
  ret i32 %v3_235af
}

define i32 @function_235b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_235b6:
  %v0_235b7 = load i32, i32* @eax, align 8
  ret i32 %v0_235b7
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_235b8:
  %v1_235d2 = add i32 %arg1, 4
  store i32 %v1_235d2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_235e1

bb:                                               ; preds = %dec_label_pc_235b8
  %v2_235df = call i32 @function_235e6(i32 %arg1)
  br label %dec_label_pc_235e1

dec_label_pc_235e1:                               ; preds = %bb, %dec_label_pc_235b8
  %v3_235df = phi i32 [ %v2_235df, %bb ], [ %v1_235d2, %dec_label_pc_235b8 ]
  ret i32 %v3_235df
}

define i32 @function_235e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_235e6:
  %v0_235e7 = load i32, i32* @eax, align 8
  ret i32 %v0_235e7
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_235e8:
  ret i32 0
}

define i32 @function_2361e() local_unnamed_addr {
dec_label_pc_2361e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2361e = load i32, i32* %eax.global-to-local, align 8
  %v11_2361e = and i32 %v0_2361e, -24
  store i32 %v11_2361e, i32* %eax.global-to-local, align 8
  ret i32 %v11_2361e

; uselistorder directives
  uselistorder i32 %v11_2361e, { 1, 0 }
}

define i32 @function_23634(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23634:
  %eax.global-to-local = alloca i32, align 4
  %v0_23634 = load i32, i32* @eax, align 8
  %v1_23637 = call i32 @function_4011a(i32 %v0_23634)
  %v1_2363c = xor i32 %v1_23637, 1
  %v4_2363c = trunc i32 %v1_2363c to i8
  store i32 %v1_2363c, i32* %eax.global-to-local, align 8
  %v5_2363f = icmp eq i8 %v4_2363c, 0
  %v0_23659 = load i32, i32* @ebp, align 4
  %v1_23659 = add i32 %v0_23659, -36
  %v2_23659 = inttoptr i32 %v1_23659 to i32*
  %v3_23659 = load i32, i32* %v2_23659, align 4
  store i32 %v3_23659, i32* %eax.global-to-local, align 8
  br i1 %v5_2363f, label %dec_label_pc_23659, label %dec_label_pc_23643

dec_label_pc_23643:                               ; preds = %dec_label_pc_23634
  %v2_23646 = add i32 %v0_23659, -40
  %v3_23646 = inttoptr i32 %v2_23646 to i32*
  store i32 %v3_23659, i32* %v3_23646, align 4
  %v0_23649 = load i32, i32* @ebp, align 4
  %v1_23649 = add i32 %v0_23649, -36
  %v2_23649 = inttoptr i32 %v1_23649 to i32*
  %v3_23649 = load i32, i32* %v2_23649, align 4
  store i32 %v3_23649, i32* %eax.global-to-local, align 8
  %v1_2364f = call i32 @unknown_4c527(i32 %v3_23649)
  store i32 %v1_2364f, i32* %eax.global-to-local, align 8
  %v1_23654 = load i32, i32* @ebp, align 4
  %v2_23654 = add i32 %v1_23654, -36
  %v3_23654 = inttoptr i32 %v2_23654 to i32*
  store i32 %v1_2364f, i32* %v3_23654, align 4
  br label %dec_label_pc_23667

dec_label_pc_23659:                               ; preds = %dec_label_pc_23634
  %v1_2365f = call i32 @unknown_4c557(i32 %v3_23659)
  store i32 %v1_2365f, i32* %eax.global-to-local, align 8
  %v1_23664 = load i32, i32* @ebp, align 4
  %v2_23664 = add i32 %v1_23664, -36
  %v3_23664 = inttoptr i32 %v2_23664 to i32*
  store i32 %v1_2365f, i32* %v3_23664, align 4
  br label %dec_label_pc_23667

dec_label_pc_23667:                               ; preds = %dec_label_pc_23659, %dec_label_pc_23643
  %v0_23667 = load i32, i32* @ebp, align 4
  %v1_23667 = add i32 %v0_23667, -36
  %v2_23667 = inttoptr i32 %v1_23667 to i32*
  %v3_23667 = load i32, i32* %v2_23667, align 4
  %v10_23667 = icmp eq i32 %v3_23667, 0
  %v1_2366b = icmp eq i1 %v10_23667, false
  %v2_2366b = zext i1 %v1_2366b to i32
  %v3_2366b = load i32, i32* %eax.global-to-local, align 8
  %v4_2366b = and i32 %v3_2366b, -256
  %v5_2366b = or i32 %v2_2366b, %v4_2366b
  store i32 %v5_2366b, i32* %eax.global-to-local, align 8
  %v1_23672 = add i32 %v0_23667, -40
  %v2_23672 = inttoptr i32 %v1_23672 to i32*
  %v3_23672 = load i32, i32* %v2_23672, align 4
  store i32 %v3_23672, i32* %eax.global-to-local, align 8
  %v1_23679 = add i32 %v0_23667, -28
  %v2_23679 = inttoptr i32 %v1_23679 to i32*
  %v3_23679 = load i32, i32* %v2_23679, align 4
  store i32 %v3_23679, i32* %eax.global-to-local, align 8
  %v2_2367f = call i32 @unknown_46b38(i32 %v3_23679, i32 %v3_23672)
  store i32 %v2_2367f, i32* %eax.global-to-local, align 8
  %v0_23684 = load i32, i32* @ebp, align 4
  %v1_23684 = add i32 %v0_23684, -28
  %v2_23684 = inttoptr i32 %v1_23684 to i32*
  %v3_23684 = load i32, i32* %v2_23684, align 4
  store i32 %v3_23684, i32* @eax, align 8
  %v1_23687 = add i32 %v0_23684, -12
  %v2_23687 = inttoptr i32 %v1_23687 to i32*
  %v3_23687 = load i32, i32* %v2_23687, align 4
  %v1_2368a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2368a = icmp eq i32 %v1_2368a, %v3_23687
  br i1 %v3_2368a, label %bb, label %dec_label_pc_23693

bb:                                               ; preds = %dec_label_pc_23667
  %v1_23691 = call i32 @function_23698()
  store i32 %v1_23691, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23693

dec_label_pc_23693:                               ; preds = %bb, %dec_label_pc_23667
  %v3_23691 = phi i32 [ %v1_23691, %bb ], [ %v3_23684, %dec_label_pc_23667 ]
  ret i32 %v3_23691

; uselistorder directives
  uselistorder i32 %v0_23667, { 1, 0, 2 }
  uselistorder i32 %v3_23659, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 8, 9, 6, 10 }
}

define i32 @function_23698() local_unnamed_addr {
dec_label_pc_23698:
  %v0_23699 = load i32, i32* @eax, align 8
  ret i32 %v0_23699
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2369c:
  %stack_var_-17 = alloca i32, align 4
  %v1_236b9 = call i32 @unknown_4c63b(i32 %arg1)
  %v2_236c2 = ptrtoint i32* %stack_var_-17 to i32
  %v2_236c8 = call i32 @unknown_4c66c(i32 %v2_236c2, i32 %v1_236b9)
  store i32 %v2_236c8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_236d9

bb:                                               ; preds = %dec_label_pc_2369c
  %v1_236d7 = call i32 @function_236de()
  br label %dec_label_pc_236d9

dec_label_pc_236d9:                               ; preds = %bb, %dec_label_pc_2369c
  %v2_236d7 = phi i32 [ %v1_236d7, %bb ], [ %v2_236c8, %dec_label_pc_2369c ]
  ret i32 %v2_236d7
}

define i32 @function_236de() local_unnamed_addr {
dec_label_pc_236de:
  %v0_236df = load i32, i32* @eax, align 8
  ret i32 %v0_236df
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_236e0:
  %v1_2370a = call i32 @unknown_476b6(i32 %arg2)
  store i32 %v1_2370a, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_23717 = call i32 @function_4075c(i32 %arg2)
  %v0_23726 = load i32, i32* @ebx, align 4
  %v5_23738 = call i32 @unknown_4c6e4(i32 %arg1, i32 %arg2, i32 %v1_23717, i32 %v0_23726, i32 %arg3)
  ret i32 %v5_23738

; uselistorder directives
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_23740(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23740:
  %v0_23740 = load i32, i32* @ebp, align 4
  %v1_23740 = add i32 %v0_23740, -28
  %v2_23740 = inttoptr i32 %v1_23740 to i32*
  %v3_23740 = load i32, i32* %v2_23740, align 4
  store i32 %v3_23740, i32* @eax, align 8
  %v1_23743 = add i32 %v0_23740, -12
  %v2_23743 = inttoptr i32 %v1_23743 to i32*
  %v3_23743 = load i32, i32* %v2_23743, align 4
  %v1_23746 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23746 = icmp eq i32 %v1_23746, %v3_23743
  br i1 %v3_23746, label %bb, label %dec_label_pc_2374f

bb:                                               ; preds = %dec_label_pc_23740
  %v1_2374d = call i32 @function_23754()
  br label %dec_label_pc_2374f

dec_label_pc_2374f:                               ; preds = %bb, %dec_label_pc_23740
  %v2_2374d = phi i32 [ %v1_2374d, %bb ], [ %v3_23740, %dec_label_pc_23740 ]
  ret i32 %v2_2374d
}

define i32 @function_23754() local_unnamed_addr {
dec_label_pc_23754:
  %v0_23758 = load i32, i32* @eax, align 8
  ret i32 %v0_23758
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2375c:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23788

bb:                                               ; preds = %dec_label_pc_2375c
  %v3_23786 = call i32 @function_2378d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_23788

dec_label_pc_23788:                               ; preds = %bb, %dec_label_pc_2375c
  %v4_23786 = phi i32 [ %v3_23786, %bb ], [ %arg1, %dec_label_pc_2375c ]
  ret i32 %v4_23786
}

define i32 @function_2378d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2378d:
  %v0_2378e = load i32, i32* @eax, align 8
  ret i32 %v0_2378e
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23792:
  %v1_237b2 = add i32 %arg2, 4
  %v2_237bf = call i32 @unknown_4c84a(i32 %arg1, i32 %v1_237b2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_237d3

bb:                                               ; preds = %dec_label_pc_23792
  %v1_237d1 = call i32 @function_237d8()
  br label %dec_label_pc_237d3

dec_label_pc_237d3:                               ; preds = %bb, %dec_label_pc_23792
  %v2_237d1 = phi i32 [ %v1_237d1, %bb ], [ %arg1, %dec_label_pc_23792 ]
  ret i32 %v2_237d1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_237d8() local_unnamed_addr {
dec_label_pc_237d8:
  %v0_237d9 = load i32, i32* @eax, align 8
  ret i32 %v0_237d9
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEC1ERKSt17_Rb_tree_iteratorIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_237dc:
  %v1_237fc = inttoptr i32 %arg2 to i32*
  %v2_237fc = load i32, i32* %v1_237fc, align 4
  store i32 %v2_237fc, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2380f

bb:                                               ; preds = %dec_label_pc_237dc
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2380d = call i32 @function_23814(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2380f

dec_label_pc_2380f:                               ; preds = %bb, %dec_label_pc_237dc
  %v4_2380d = phi i32 [ %v3_2380d, %bb ], [ 0, %dec_label_pc_237dc ]
  ret i32 %v4_2380d

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23814(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23814:
  %v0_23815 = load i32, i32* @eax, align 8
  ret i32 %v0_23815
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23816:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %tmp120 = ptrtoint i32* %arg1 to i32
  %v1_23849 = call i32 @unknown_477ec(i32 %arg2)
  %v12_2384e = icmp eq i32 %v1_23849, %arg3
  %v5_23853 = icmp eq i1 %v12_2384e, false
  br i1 %v5_23853, label %dec_label_pc_2391f, label %dec_label_pc_2385b

dec_label_pc_2385b:                               ; preds = %dec_label_pc_23816
  %v1_23861 = call i32 @unknown_478bc(i32 %arg2)
  %v1_23866 = icmp eq i32 %v1_23861, 0
  br i1 %v1_23866, label %dec_label_pc_238b3, label %dec_label_pc_2386a

dec_label_pc_2386a:                               ; preds = %dec_label_pc_2385b
  %v2_23871 = ptrtoint i32* %stack_var_-21 to i32
  %v2_23877 = call i32 @unknown_4c7e6(i32 %v2_23871, i32 %arg4)
  %v1_23884 = call i32 @unknown_4784c(i32 %arg2)
  %v1_23889 = inttoptr i32 %v1_23884 to i32*
  %v2_23889 = load i32, i32* %v1_23889, align 4
  %v1_2388e = call i32 @unknown_46eb2(i32 %v2_23889)
  %v3_238a3 = call i32 @unknown_40348(i32 %arg2, i32 %v1_2388e, i32 %v2_23877)
  %v4_238a8 = trunc i32 %v3_238a3 to i8
  %v5_238a8 = icmp eq i8 %v4_238a8, 0
  br i1 %v5_238a8, label %dec_label_pc_238b3, label %dec_label_pc_238b8

dec_label_pc_238b3:                               ; preds = %dec_label_pc_2386a, %dec_label_pc_2385b
  br label %dec_label_pc_238b8

dec_label_pc_238b8:                               ; preds = %dec_label_pc_2386a, %dec_label_pc_238b3
  %storemerge = phi i1 [ true, %dec_label_pc_238b3 ], [ false, %dec_label_pc_2386a ]
  br i1 %storemerge, label %dec_label_pc_238f6, label %dec_label_pc_238bc

dec_label_pc_238bc:                               ; preds = %dec_label_pc_238b8
  %v1_238c2 = call i32 @unknown_4784c(i32 %arg2)
  %v1_238c7 = inttoptr i32 %v1_238c2 to i32*
  %v2_238c7 = load i32, i32* %v1_238c7, align 4
  %v5_238e9 = call i32 @unknown_4c906(i32 %tmp120, i32 %arg2, i32 0, i32 %v2_238c7, i32 %arg4)
  %v0_238f1 = call i32 @function_23c16()
  ret i32 %v0_238f1

dec_label_pc_238f6:                               ; preds = %dec_label_pc_238b8
  %v2_238f6 = ptrtoint i32* %stack_var_-52 to i32
  %v3_2390a = call i32 @unknown_4ca08(i32 %v2_238f6, i32 %arg2, i32 %arg4)
  %v3_23915 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_23915, i32* %arg1, align 4
  %v0_2391a = call i32 @function_23c16()
  ret i32 %v0_2391a

dec_label_pc_2391f:                               ; preds = %dec_label_pc_23816
  %v1_23925 = call i32 @unknown_46eb2(i32 %arg3)
  %v2_23933 = ptrtoint i32* %stack_var_-20 to i32
  %v2_23939 = call i32 @unknown_4c7e6(i32 %v2_23933, i32 %arg4)
  %v3_2394c = call i32 @unknown_40348(i32 %arg2, i32 %v2_23939, i32 %v1_23925)
  %v4_23951 = trunc i32 %v3_2394c to i8
  %v5_23951 = icmp eq i8 %v4_23951, 0
  br i1 %v5_23951, label %bb, label %dec_label_pc_23959

bb:                                               ; preds = %dec_label_pc_2391f
  %v1_23953 = call i32 @function_23a99()
  br label %dec_label_pc_23959

dec_label_pc_23959:                               ; preds = %bb, %dec_label_pc_2391f
  %v1_23968 = call i32 @unknown_4781c(i32 %arg2)
  %v1_2397e = call i32 @unknown_4781c(i32 %arg2)
  %v1_2398b = call i32 @unknown_4781c(i32 %arg2)
  ret i32 %tmp120

; uselistorder directives
  uselistorder i32 %tmp120, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4781c, { 2, 1, 0 }
  uselistorder i32 %arg4, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 6, 7, 8, 9, 4, 2, 3, 0, 1, 5, 10 }
  uselistorder label %dec_label_pc_238b8, { 1, 0 }
}

define i32 @function_239a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_239a6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_239a6 = load i32, i32* @ecx, align 8
  %v1_239a6 = add i32 %v0_239a6, -1996217260
  %v2_239a6 = inttoptr i32 %v1_239a6 to i8*
  %v3_239a6 = load i8, i8* %v2_239a6, align 1
  %v4_239a6 = udiv i8 %v3_239a6, 16
  %v5_239a6 = mul i8 %v3_239a6, 16
  %v6_239a6 = or i8 %v4_239a6, %v5_239a6
  store i8 %v6_239a6, i8* %v2_239a6, align 1
  %v0_239ad = load i32, i32* @eax, align 8
  %v11_239ad = and i32 %v0_239ad, -24
  store i32 %v11_239ad, i32* %eax.global-to-local, align 8
  %v0_239af = load i32, i32* @ebx, align 4
  store i32 %v0_239af, i32* %stack_var_-4, align 4
  %v3_239b0 = load i32, i32* @edx, align 4
  %v4_239b0 = inttoptr i32 %v3_239b0 to i32*
  store i32 %v0_239af, i32* %v4_239b0, align 4
  %v0_239b2 = load i32, i32* @ebx, align 4
  %v1_239b2 = add i32 %v0_239b2, 1541997804
  %v2_239b2 = inttoptr i32 %v1_239b2 to i8*
  %v3_239b2 = load i8, i8* %v2_239b2, align 1
  %v4_239b2 = load i32, i32* %eax.global-to-local, align 8
  %v5_239b2 = trunc i32 %v4_239b2 to i8
  %v6_239b2 = add i8 %v5_239b2, %v3_239b2
  store i8 %v6_239b2, i8* %v2_239b2, align 1
  %v0_239b8 = load i32, i32* %eax.global-to-local, align 8
  %v1_239b8 = trunc i32 %v0_239b8 to i8
  %v3_239b8 = inttoptr i32 %v0_239b8 to i8*
  %v4_239b8 = load i8, i8* %v3_239b8, align 1
  %v5_239b8 = add i8 %v1_239b8, %v4_239b8
  %v20_239b8 = zext i8 %v5_239b8 to i32
  %v22_239b8 = and i32 %v0_239b8, -256
  %v23_239b8 = or i32 %v20_239b8, %v22_239b8
  store i32 %v23_239b8, i32* %eax.global-to-local, align 8
  %v0_239ba = load i32, i32* @ebx, align 4
  %v1_239ba = add i32 %v0_239ba, 1149876293
  %v2_239ba = inttoptr i32 %v1_239ba to i8*
  %v3_239ba = load i8, i8* %v2_239ba, align 1
  %v4_239ba = load i32, i32* @ecx, align 8
  %v5_239ba = trunc i32 %v4_239ba to i8
  %v6_239ba = add i8 %v5_239ba, %v3_239ba
  store i8 %v6_239ba, i8* %v2_239ba, align 1
  %v0_239c2 = load i32, i32* @ebp, align 4
  %v1_239c2 = add i32 %v0_239c2, -15
  store i32 %v1_239c2, i32* %eax.global-to-local, align 8
  %v0_239c8 = load i32, i32* %stack_var_-4, align 4
  %v2_239c8 = call i32 @unknown_4c7e6(i32 %v0_239c8, i32 %v1_239c2)
  store i32 %v2_239c8, i32* %ebx.global-to-local, align 4
  %v0_239cf = load i32, i32* @ebp, align 4
  %v1_239cf = add i32 %v0_239cf, -24
  store i32 %v1_239cf, i32* %eax.global-to-local, align 8
  %v1_239d5 = call i32 @unknown_4cc0c(i32 %v1_239cf)
  store i32 %v1_239d5, i32* %eax.global-to-local, align 8
  %v1_239da = inttoptr i32 %v1_239d5 to i32*
  %v2_239da = load i32, i32* %v1_239da, align 4
  store i32 %v2_239da, i32* %eax.global-to-local, align 8
  %v1_239df = call i32 @unknown_46eb2(i32 %v2_239da)
  store i32 %v1_239df, i32* %eax.global-to-local, align 8
  %v0_239e6 = load i32, i32* @ebp, align 4
  %v1_239e6 = add i32 %v0_239e6, -64
  %v2_239e6 = inttoptr i32 %v1_239e6 to i32*
  %v3_239e6 = load i32, i32* %v2_239e6, align 4
  store i32 %v3_239e6, i32* %eax.global-to-local, align 8
  %v0_239e9 = load i32, i32* %ebx.global-to-local, align 4
  %v3_239f4 = call i32 @unknown_40348(i32 %v3_239e6, i32 %v1_239df, i32 %v0_239e9)
  store i32 %v3_239f4, i32* %eax.global-to-local, align 8
  %v4_239f9 = trunc i32 %v3_239f4 to i8
  %v5_239f9 = icmp eq i8 %v4_239f9, 0
  %v0_23a70 = load i32, i32* @ebp, align 4
  br i1 %v5_239f9, label %dec_label_pc_23a70, label %dec_label_pc_239fd

dec_label_pc_239fd:                               ; preds = %dec_label_pc_239a6
  %v1_239fd = add i32 %v0_23a70, -24
  %v2_239fd = inttoptr i32 %v1_239fd to i32*
  %v3_239fd = load i32, i32* %v2_239fd, align 4
  store i32 %v3_239fd, i32* %eax.global-to-local, align 8
  %v1_23a03 = call i32 @unknown_4c785(i32 %v3_239fd)
  %v1_23a08 = icmp eq i32 %v1_23a03, 0
  %v1_23a0a = zext i1 %v1_23a08 to i32
  %v3_23a0a = and i32 %v1_23a03, -256
  %v4_23a0a = or i32 %v1_23a0a, %v3_23a0a
  store i32 %v4_23a0a, i32* %eax.global-to-local, align 8
  %v5_23a0d = icmp eq i1 %v1_23a08, false
  %v0_23a41 = load i32, i32* @ebp, align 4
  br i1 %v5_23a0d, label %dec_label_pc_23a41, label %dec_label_pc_23a11

dec_label_pc_23a11:                               ; preds = %dec_label_pc_239fd
  %v1_23a11 = add i32 %v0_23a41, -24
  %v2_23a11 = inttoptr i32 %v1_23a11 to i32*
  %v3_23a11 = load i32, i32* %v2_23a11, align 4
  %v1_23a14 = add i32 %v0_23a41, -60
  %v2_23a14 = inttoptr i32 %v1_23a14 to i32*
  %v3_23a14 = load i32, i32* %v2_23a14, align 4
  store i32 %v3_23a14, i32* %eax.global-to-local, align 8
  %v1_23a17 = add i32 %v0_23a41, -72
  %v2_23a17 = inttoptr i32 %v1_23a17 to i32*
  %v3_23a17 = load i32, i32* %v2_23a17, align 4
  %v1_23a2a = add i32 %v0_23a41, -64
  %v2_23a2a = inttoptr i32 %v1_23a2a to i32*
  %v3_23a2a = load i32, i32* %v2_23a2a, align 4
  %v5_23a34 = call i32 @unknown_4c906(i32 %v3_23a14, i32 %v3_23a2a, i32 0, i32 %v3_23a11, i32 %v3_23a17)
  store i32 %v5_23a34, i32* %eax.global-to-local, align 8
  %v0_23a3c = call i32 @function_23c16()
  store i32 %v0_23a3c, i32* %eax.global-to-local, align 8
  ret i32 %v0_23a3c

dec_label_pc_23a41:                               ; preds = %dec_label_pc_239fd
  %v1_23a41 = add i32 %v0_23a41, -68
  %v2_23a41 = inttoptr i32 %v1_23a41 to i32*
  %v3_23a41 = load i32, i32* %v2_23a41, align 4
  %v1_23a47 = add i32 %v0_23a41, -60
  %v2_23a47 = inttoptr i32 %v1_23a47 to i32*
  %v3_23a47 = load i32, i32* %v2_23a47, align 4
  store i32 %v3_23a47, i32* %eax.global-to-local, align 8
  %v1_23a4a = add i32 %v0_23a41, -72
  %v2_23a4a = inttoptr i32 %v1_23a4a to i32*
  %v3_23a4a = load i32, i32* %v2_23a4a, align 4
  store i32 %v3_23a4a, i32* %ebx.global-to-local, align 4
  %v1_23a59 = add i32 %v0_23a41, -64
  %v2_23a59 = inttoptr i32 %v1_23a59 to i32*
  %v3_23a59 = load i32, i32* %v2_23a59, align 4
  %v5_23a63 = call i32 @unknown_4c906(i32 %v3_23a47, i32 %v3_23a59, i32 %v3_23a41, i32 %v3_23a41, i32 %v3_23a4a)
  store i32 %v5_23a63, i32* %eax.global-to-local, align 8
  %v0_23a6b = call i32 @function_23c16()
  store i32 %v0_23a6b, i32* %eax.global-to-local, align 8
  ret i32 %v0_23a6b

dec_label_pc_23a70:                               ; preds = %dec_label_pc_239a6
  %v1_23a70 = add i32 %v0_23a70, -40
  store i32 %v1_23a70, i32* %eax.global-to-local, align 8
  %v1_23a73 = add i32 %v0_23a70, -72
  %v2_23a73 = inttoptr i32 %v1_23a73 to i32*
  %v3_23a73 = load i32, i32* %v2_23a73, align 4
  %v1_23a7a = add i32 %v0_23a70, -64
  %v2_23a7a = inttoptr i32 %v1_23a7a to i32*
  %v3_23a7a = load i32, i32* %v2_23a7a, align 4
  %v3_23a84 = call i32 @unknown_4ca08(i32 %v1_23a70, i32 %v3_23a7a, i32 %v3_23a73)
  store i32 %v3_23a84, i32* %eax.global-to-local, align 8
  %v0_23a8c = load i32, i32* @ebp, align 4
  %v1_23a8c = add i32 %v0_23a8c, -60
  %v2_23a8c = inttoptr i32 %v1_23a8c to i32*
  %v3_23a8c = load i32, i32* %v2_23a8c, align 4
  store i32 %v3_23a8c, i32* %eax.global-to-local, align 8
  %v1_23a8f = add i32 %v0_23a8c, -40
  %v2_23a8f = inttoptr i32 %v1_23a8f to i32*
  %v3_23a8f = load i32, i32* %v2_23a8f, align 4
  %v2_23a92 = inttoptr i32 %v3_23a8c to i32*
  store i32 %v3_23a8f, i32* %v2_23a92, align 4
  %v0_23a94 = call i32 @function_23c16()
  store i32 %v0_23a94, i32* %eax.global-to-local, align 8
  ret i32 %v0_23a94

; uselistorder directives
  uselistorder i32 %v3_23a41, { 1, 0 }
  uselistorder i32 %v0_23a41, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i1 %v1_23a08, { 1, 0 }
  uselistorder i32 %v0_23a70, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 5, 1, 6, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
}

define i32 @function_23a99() local_unnamed_addr {
dec_label_pc_23a99:
  %ebx.global-to-local = alloca i32, align 4
  %v0_23a99 = load i32, i32* @ebp, align 4
  %v1_23a99 = add i32 %v0_23a99, -72
  %v2_23a99 = inttoptr i32 %v1_23a99 to i32*
  %v3_23a99 = load i32, i32* %v2_23a99, align 4
  %v1_23aa0 = add i32 %v0_23a99, -14
  %v2_23aa6 = call i32 @unknown_4c7e6(i32 %v1_23aa0, i32 %v3_23a99)
  store i32 %v2_23aa6, i32* %ebx.global-to-local, align 4
  %v0_23aad = load i32, i32* @ebp, align 4
  %v1_23aad = add i32 %v0_23aad, -68
  %v2_23aad = inttoptr i32 %v1_23aad to i32*
  %v3_23aad = load i32, i32* %v2_23aad, align 4
  %v1_23ab3 = call i32 @unknown_46eb2(i32 %v3_23aad)
  %v0_23aba = load i32, i32* @ebp, align 4
  %v1_23aba = add i32 %v0_23aba, -64
  %v2_23aba = inttoptr i32 %v1_23aba to i32*
  %v3_23aba = load i32, i32* %v2_23aba, align 4
  %v0_23abd = load i32, i32* %ebx.global-to-local, align 4
  %v3_23ac8 = call i32 @unknown_40348(i32 %v3_23aba, i32 %v1_23ab3, i32 %v0_23abd)
  %v4_23acd = trunc i32 %v3_23ac8 to i8
  %v5_23acd = icmp eq i8 %v4_23acd, 0
  br i1 %v5_23acd, label %bb, label %dec_label_pc_23ad5

bb:                                               ; preds = %dec_label_pc_23a99
  %v1_23acf = call i32 @function_23c01()
  br label %dec_label_pc_23ad5

dec_label_pc_23ad5:                               ; preds = %bb, %dec_label_pc_23a99
  %v0_23ad5 = load i32, i32* @ebp, align 4
  %v1_23ad5 = add i32 %v0_23ad5, -68
  %v2_23ad5 = inttoptr i32 %v1_23ad5 to i32*
  %v3_23ad5 = load i32, i32* %v2_23ad5, align 4
  %v2_23ad8 = add i32 %v0_23ad5, -24
  %v3_23ad8 = inttoptr i32 %v2_23ad8 to i32*
  store i32 %v3_23ad5, i32* %v3_23ad8, align 4
  %v0_23adb = load i32, i32* @ebp, align 4
  %v1_23adb = add i32 %v0_23adb, -68
  %v2_23adb = inttoptr i32 %v1_23adb to i32*
  %v3_23adb = load i32, i32* %v2_23adb, align 4
  store i32 %v3_23adb, i32* %ebx.global-to-local, align 4
  %v1_23ade = add i32 %v0_23adb, -64
  %v2_23ade = inttoptr i32 %v1_23ade to i32*
  %v3_23ade = load i32, i32* %v2_23ade, align 4
  %v1_23ae4 = call i32 @unknown_4784c(i32 %v3_23ade)
  %v1_23ae9 = inttoptr i32 %v1_23ae4 to i32*
  %v2_23ae9 = load i32, i32* %v1_23ae9, align 4
  %v0_23aeb = load i32, i32* %ebx.global-to-local, align 4
  %v12_23aeb = icmp eq i32 %v0_23aeb, %v2_23ae9
  %v5_23af0 = icmp eq i1 %v12_23aeb, false
  %v0_23b2e = load i32, i32* @ebp, align 4
  br i1 %v5_23af0, label %dec_label_pc_23b2e, label %dec_label_pc_23af4

dec_label_pc_23af4:                               ; preds = %dec_label_pc_23ad5
  %v1_23af4 = add i32 %v0_23b2e, -64
  %v2_23af4 = inttoptr i32 %v1_23af4 to i32*
  %v3_23af4 = load i32, i32* %v2_23af4, align 4
  %v1_23afa = call i32 @unknown_4784c(i32 %v3_23af4)
  %v1_23aff = inttoptr i32 %v1_23afa to i32*
  %v2_23aff = load i32, i32* %v1_23aff, align 4
  %v0_23b01 = load i32, i32* @ebp, align 4
  %v1_23b01 = add i32 %v0_23b01, -60
  %v2_23b01 = inttoptr i32 %v1_23b01 to i32*
  %v3_23b01 = load i32, i32* %v2_23b01, align 4
  %v1_23b04 = add i32 %v0_23b01, -72
  %v2_23b04 = inttoptr i32 %v1_23b04 to i32*
  %v3_23b04 = load i32, i32* %v2_23b04, align 4
  %v1_23b17 = add i32 %v0_23b01, -64
  %v2_23b17 = inttoptr i32 %v1_23b17 to i32*
  %v3_23b17 = load i32, i32* %v2_23b17, align 4
  %v5_23b21 = call i32 @unknown_4c906(i32 %v3_23b01, i32 %v3_23b17, i32 0, i32 %v2_23aff, i32 %v3_23b04)
  %v0_23b29 = call i32 @function_23c16()
  ret i32 %v0_23b29

dec_label_pc_23b2e:                               ; preds = %dec_label_pc_23ad5
  %v1_23b2e = add i32 %v0_23b2e, -24
  %v1_23b34 = call i32 @unknown_4787c(i32 %v1_23b2e)
  %v1_23b39 = inttoptr i32 %v1_23b34 to i32*
  %v2_23b39 = load i32, i32* %v1_23b39, align 4
  %v1_23b3e = call i32 @unknown_46eb2(i32 %v2_23b39)
  store i32 %v1_23b3e, i32* %ebx.global-to-local, align 4
  %v0_23b45 = load i32, i32* @ebp, align 4
  %v1_23b45 = add i32 %v0_23b45, -72
  %v2_23b45 = inttoptr i32 %v1_23b45 to i32*
  %v3_23b45 = load i32, i32* %v2_23b45, align 4
  ret i32 %v3_23b45

; uselistorder directives
  uselistorder i32 %v0_23b2e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4784c, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_46eb2, { 4, 3, 0, 2, 1 }
}

define i32 @function_23b48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23b48:
  %v0_23b48 = load i32, i32* @eax, align 8
  %v0_23b4c = load i32, i32* @ebp, align 4
  %v1_23b4c = add i32 %v0_23b4c, -13
  %v2_23b52 = call i32 @unknown_4c7e6(i32 %v1_23b4c, i32 %v0_23b48)
  %v0_23b57 = load i32, i32* @ebp, align 4
  %v1_23b57 = add i32 %v0_23b57, -64
  %v2_23b57 = inttoptr i32 %v1_23b57 to i32*
  %v3_23b57 = load i32, i32* %v2_23b57, align 4
  %v0_23b5a = load i32, i32* @ebx, align 4
  %v3_23b65 = call i32 @unknown_40348(i32 %v3_23b57, i32 %v2_23b52, i32 %v0_23b5a)
  %v4_23b6a = trunc i32 %v3_23b65 to i8
  %v5_23b6a = icmp eq i8 %v4_23b6a, 0
  br i1 %v5_23b6a, label %bb, label %dec_label_pc_23b6e

bb:                                               ; preds = %dec_label_pc_23b48
  %v1_23b6c = call i32 @function_23bdb()
  br label %dec_label_pc_23b6e

dec_label_pc_23b6e:                               ; preds = %bb, %dec_label_pc_23b48
  %v0_23b6e = load i32, i32* @ebp, align 4
  %v1_23b6e = add i32 %v0_23b6e, -68
  %v2_23b6e = inttoptr i32 %v1_23b6e to i32*
  %v3_23b6e = load i32, i32* %v2_23b6e, align 4
  %v1_23b74 = call i32 @unknown_4c785(i32 %v3_23b6e)
  %v1_23b79 = icmp eq i32 %v1_23b74, 0
  %v1_23b7b = zext i1 %v1_23b79 to i32
  %v3_23b7b = and i32 %v1_23b74, -256
  %v4_23b7b = or i32 %v1_23b7b, %v3_23b7b
  ret i32 %v4_23b7b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4c785, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_40348, { 1, 4, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @unknown_4c7e6, { 1, 4, 0, 3, 2 }
}

define i32 @function_23b80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23b80:
  %v0_23b80 = load i1, i1* @zf, align 1
  %v0_23baf = load i32, i32* @ebp, align 4
  br i1 %v0_23b80, label %dec_label_pc_23baf, label %dec_label_pc_23b82

dec_label_pc_23b82:                               ; preds = %dec_label_pc_23b80
  %v1_23b82 = add i32 %v0_23baf, -68
  %v2_23b82 = inttoptr i32 %v1_23b82 to i32*
  %v3_23b82 = load i32, i32* %v2_23b82, align 4
  %v1_23b85 = add i32 %v0_23baf, -60
  %v2_23b85 = inttoptr i32 %v1_23b85 to i32*
  %v3_23b85 = load i32, i32* %v2_23b85, align 4
  %v1_23b88 = add i32 %v0_23baf, -72
  %v2_23b88 = inttoptr i32 %v1_23b88 to i32*
  %v3_23b88 = load i32, i32* %v2_23b88, align 4
  store i32 %v3_23b88, i32* @ecx, align 8
  %v1_23b9b = add i32 %v0_23baf, -64
  %v2_23b9b = inttoptr i32 %v1_23b9b to i32*
  %v3_23b9b = load i32, i32* %v2_23b9b, align 4
  %v5_23ba5 = call i32 @unknown_4c906(i32 %v3_23b85, i32 %v3_23b9b, i32 0, i32 %v3_23b82, i32 %v3_23b88)
  %v0_23bad = call i32 @function_23c16()
  ret i32 %v0_23bad

dec_label_pc_23baf:                               ; preds = %dec_label_pc_23b80
  %v1_23baf = add i32 %v0_23baf, -24
  %v2_23baf = inttoptr i32 %v1_23baf to i32*
  %v3_23baf = load i32, i32* %v2_23baf, align 4
  store i32 %v3_23baf, i32* @ecx, align 8
  %v1_23bb5 = add i32 %v0_23baf, -60
  %v2_23bb5 = inttoptr i32 %v1_23bb5 to i32*
  %v3_23bb5 = load i32, i32* %v2_23bb5, align 4
  ret i32 %v3_23bb5

; uselistorder directives
  uselistorder i32 %v0_23baf, { 0, 5, 2, 1, 4, 3 }
}

define i32 @function_23bb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23bb8:
  %v0_23bb8 = load i32, i32* @ebp, align 4
  %v1_23bb8 = add i32 %v0_23bb8, -72
  %v2_23bb8 = inttoptr i32 %v1_23bb8 to i32*
  %v3_23bb8 = load i32, i32* %v2_23bb8, align 4
  store i32 %v3_23bb8, i32* @ebx, align 4
  %v0_23bbf = load i32, i32* @ecx, align 8
  %v0_23bc3 = load i32, i32* @edx, align 4
  %v1_23bc7 = add i32 %v0_23bb8, -64
  %v2_23bc7 = inttoptr i32 %v1_23bc7 to i32*
  %v3_23bc7 = load i32, i32* %v2_23bc7, align 4
  %v0_23bce = load i32, i32* @eax, align 8
  %v5_23bd1 = call i32 @unknown_4c906(i32 %v0_23bce, i32 %v3_23bc7, i32 %v0_23bc3, i32 %v0_23bbf, i32 %v3_23bb8)
  %v0_23bd9 = call i32 @function_23c16()
  ret i32 %v0_23bd9

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_4c906, { 3, 2, 5, 1, 0, 4 }
}

define i32 @function_23bdb() local_unnamed_addr {
dec_label_pc_23bdb:
  %v0_23bdb = load i32, i32* @ebp, align 4
  %v1_23bdb = add i32 %v0_23bdb, -32
  %v1_23bde = add i32 %v0_23bdb, -72
  %v2_23bde = inttoptr i32 %v1_23bde to i32*
  %v3_23bde = load i32, i32* %v2_23bde, align 4
  %v1_23be5 = add i32 %v0_23bdb, -64
  %v2_23be5 = inttoptr i32 %v1_23be5 to i32*
  %v3_23be5 = load i32, i32* %v2_23be5, align 4
  %v3_23bef = call i32 @unknown_4ca08(i32 %v1_23bdb, i32 %v3_23be5, i32 %v3_23bde)
  %v0_23bf7 = load i32, i32* @ebp, align 4
  %v1_23bf7 = add i32 %v0_23bf7, -60
  %v2_23bf7 = inttoptr i32 %v1_23bf7 to i32*
  %v3_23bf7 = load i32, i32* %v2_23bf7, align 4
  %v1_23bfa = add i32 %v0_23bf7, -32
  %v2_23bfa = inttoptr i32 %v1_23bfa to i32*
  %v3_23bfa = load i32, i32* %v2_23bfa, align 4
  %v2_23bfd = inttoptr i32 %v3_23bf7 to i32*
  store i32 %v3_23bfa, i32* %v2_23bfd, align 4
  %v0_23bff = call i32 @function_23c16()
  ret i32 %v0_23bff

; uselistorder directives
  uselistorder i32 ()* @function_23c16, { 3, 5, 4, 8, 2, 1, 0, 7, 6 }
  uselistorder i32 (i32, i32, i32)* @unknown_4ca08, { 1, 0, 2 }
}

define i32 @function_23c01() local_unnamed_addr {
dec_label_pc_23c01:
  %v0_23c01 = load i32, i32* @ebp, align 4
  %v1_23c01 = add i32 %v0_23c01, -60
  %v2_23c01 = inttoptr i32 %v1_23c01 to i32*
  %v3_23c01 = load i32, i32* %v2_23c01, align 4
  %v1_23c04 = add i32 %v0_23c01, -68
  %v2_23c0e = call i32 @unknown_4cc4c(i32 %v3_23c01, i32 %v1_23c04)
  ret i32 %v2_23c0e
}

define i32 @function_23c16() local_unnamed_addr {
dec_label_pc_23c16:
  %v0_23c16 = load i32, i32* @ebp, align 4
  %v1_23c16 = add i32 %v0_23c16, -60
  %v2_23c16 = inttoptr i32 %v1_23c16 to i32*
  %v3_23c16 = load i32, i32* %v2_23c16, align 4
  store i32 %v3_23c16, i32* @eax, align 8
  %v1_23c19 = add i32 %v0_23c16, -12
  %v2_23c19 = inttoptr i32 %v1_23c19 to i32*
  %v3_23c19 = load i32, i32* %v2_23c19, align 4
  %v1_23c1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23c1c = icmp eq i32 %v1_23c1c, %v3_23c19
  store i1 %v3_23c1c, i1* @zf, align 1
  br i1 %v3_23c1c, label %bb, label %dec_label_pc_23c25

bb:                                               ; preds = %dec_label_pc_23c16
  %v1_23c23 = call i32 @function_23c2a()
  br label %dec_label_pc_23c25

dec_label_pc_23c25:                               ; preds = %bb, %dec_label_pc_23c16
  %v2_23c23 = phi i32 [ %v1_23c23, %bb ], [ %v3_23c16, %dec_label_pc_23c16 ]
  ret i32 %v2_23c23

; uselistorder directives
  uselistorder i1 %v3_23c1c, { 1, 0 }
}

define i32 @function_23c2a() local_unnamed_addr {
dec_label_pc_23c2a:
  %v0_23c2a = load i32, i32* @ebp, align 4
  %v1_23c2a = add i32 %v0_23c2a, -4
  %v2_23c2a = inttoptr i32 %v1_23c2a to i32*
  %v3_23c2a = load i32, i32* %v2_23c2a, align 4
  store i32 %v3_23c2a, i32* @ebx, align 4
  %v0_23c2e = load i32, i32* @eax, align 8
  ret i32 %v0_23c2e
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23c32:
  ret i32 %arg1
}

define i32 @function_23c60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23c60:
  %v0_23c60 = load i32, i32* @ebx, align 4
  %v1_23c60 = add i32 %v0_23c60, 13100101
  %v2_23c60 = inttoptr i32 %v1_23c60 to i8*
  %v3_23c60 = load i8, i8* %v2_23c60, align 1
  %v4_23c60 = load i32, i32* @ecx, align 8
  %v5_23c60 = trunc i32 %v4_23c60 to i8
  %v6_23c60 = add i8 %v5_23c60, %v3_23c60
  store i8 %v6_23c60, i8* %v2_23c60, align 1
  %v2_23c66 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_23c66 = load i32, i32* @eax, align 8
  %v4_23c66 = trunc i32 %v3_23c66 to i8
  %v5_23c66 = add i8 %v4_23c66, %v2_23c66
  %v21_23c66 = inttoptr i32 %v3_23c66 to i8*
  store i8 %v5_23c66, i8* %v21_23c66, align 1
  %v2_23c68 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_23c68 = load i32, i32* @eax, align 8
  %v4_23c68 = trunc i32 %v3_23c68 to i8
  %v5_23c68 = add i8 %v4_23c68, %v2_23c68
  %v21_23c68 = inttoptr i32 %v3_23c68 to i8*
  store i8 %v5_23c68, i8* %v21_23c68, align 1
  %v0_23c6a = load i32, i32* @ebp, align 4
  %v1_23c6a = add i32 %v0_23c6a, -28
  %v2_23c6a = inttoptr i32 %v1_23c6a to i32*
  %v3_23c6a = load i32, i32* %v2_23c6a, align 4
  %v1_23c6d = add i32 %v3_23c6a, 4
  %v2_23c6d = inttoptr i32 %v1_23c6d to i32*
  store i32 0, i32* %v2_23c6d, align 4
  %v0_23c74 = load i32, i32* @ebp, align 4
  %v1_23c74 = add i32 %v0_23c74, -28
  %v2_23c74 = inttoptr i32 %v1_23c74 to i32*
  %v3_23c74 = load i32, i32* %v2_23c74, align 4
  %v1_23c77 = add i32 %v3_23c74, 8
  %v2_23c77 = inttoptr i32 %v1_23c77 to i32*
  store i32 0, i32* %v2_23c77, align 4
  %v0_23c7e = load i32, i32* @ebp, align 4
  %v1_23c7e = add i32 %v0_23c7e, -12
  %v2_23c7e = inttoptr i32 %v1_23c7e to i32*
  %v3_23c7e = load i32, i32* %v2_23c7e, align 4
  %v1_23c81 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23c81 = xor i32 %v1_23c81, %v3_23c7e
  %v3_23c81 = icmp eq i32 %v2_23c81, 0
  store i32 %v2_23c81, i32* @eax, align 8
  br i1 %v3_23c81, label %bb, label %dec_label_pc_23c8a

bb:                                               ; preds = %dec_label_pc_23c60
  %v1_23c88 = call i32 @function_23c8f()
  br label %dec_label_pc_23c8a

dec_label_pc_23c8a:                               ; preds = %bb, %dec_label_pc_23c60
  %v2_23c88 = phi i32 [ %v1_23c88, %bb ], [ %v2_23c81, %dec_label_pc_23c60 ]
  ret i32 %v2_23c88

; uselistorder directives
  uselistorder i32 13100101, { 2, 3, 0, 1 }
}

define i32 @function_23c8f() local_unnamed_addr {
dec_label_pc_23c8f:
  %v0_23c90 = load i32, i32* @eax, align 8
  ret i32 %v0_23c90
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23c92:
  %v10_23caf = icmp eq i32 %arg2, 0
  br i1 %v10_23caf, label %dec_label_pc_23cd6, label %dec_label_pc_23cb5

dec_label_pc_23cb5:                               ; preds = %dec_label_pc_23c92
  %v3_23cca = call i32 @unknown_4d154(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_23cd6

dec_label_pc_23cd6:                               ; preds = %dec_label_pc_23c92, %dec_label_pc_23cb5
  %storemerge = phi i32 [ %v3_23cca, %dec_label_pc_23cb5 ], [ 0, %dec_label_pc_23c92 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23ce2

bb:                                               ; preds = %dec_label_pc_23cd6
  %v1_23ce0 = call i32 @function_23ce7()
  br label %dec_label_pc_23ce2

dec_label_pc_23ce2:                               ; preds = %bb, %dec_label_pc_23cd6
  %v2_23ce0 = phi i32 [ %v1_23ce0, %bb ], [ %storemerge, %dec_label_pc_23cd6 ]
  ret i32 %v2_23ce0

; uselistorder directives
  uselistorder label %dec_label_pc_23cd6, { 1, 0 }
}

define i32 @function_23ce7() local_unnamed_addr {
dec_label_pc_23ce7:
  %v0_23ce8 = load i32, i32* @eax, align 8
  ret i32 %v0_23ce8
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23ce9:
  %v3_23d20 = call i32 @unknown_4d209(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_23d20, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23d31

bb:                                               ; preds = %dec_label_pc_23ce9
  %v1_23d2f = call i32 @function_23d36()
  br label %dec_label_pc_23d31

dec_label_pc_23d31:                               ; preds = %bb, %dec_label_pc_23ce9
  %v2_23d2f = phi i32 [ %v1_23d2f, %bb ], [ %v3_23d20, %dec_label_pc_23ce9 ]
  ret i32 %v2_23d2f
}

define i32 @function_23d36() local_unnamed_addr {
dec_label_pc_23d36:
  %v0_23d37 = load i32, i32* @eax, align 8
  ret i32 %v0_23d37
}

define i32 @_ZSt12partial_sortIPxEvT_S1_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23d38:
  %v3_23d6f = call i32 @unknown_4d319(i32 %arg1, i32 %arg2, i32 %arg3)
  %v2_23d81 = call i32 @unknown_4d3b4(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23d92

bb:                                               ; preds = %dec_label_pc_23d38
  %v1_23d90 = call i32 @function_23d97()
  br label %dec_label_pc_23d92

dec_label_pc_23d92:                               ; preds = %bb, %dec_label_pc_23d38
  %v2_23d90 = phi i32 [ %v1_23d90, %bb ], [ 0, %dec_label_pc_23d38 ]
  ret i32 %v2_23d90

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23d97() local_unnamed_addr {
dec_label_pc_23d97:
  %v0_23d98 = load i32, i32* @eax, align 8
  ret i32 %v0_23d98
}

define i32 @_ZSt27__unguarded_partition_pivotIPxET_S1_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23d99:
  %v2_23dbe = sub i32 %arg2, %arg1
  %v2_23dc2 = sdiv i32 %v2_23dbe, 8
  %tmp108 = icmp slt i32 %v2_23dbe, -7
  %v2_23dc7 = zext i1 %tmp108 to i32
  %v2_23dca = add nsw i32 %v2_23dc7, %v2_23dc2
  %v2_23dcc = sdiv i32 %v2_23dca, 2
  %v2_23dce = mul i32 %v2_23dcc, 8
  %v5_23dd1 = add i32 %v2_23dce, %arg1
  %v1_23dda = add i32 %arg2, -8
  %v3_23dee = call i32 @unknown_4d47a(i32 %arg1, i32 %v5_23dd1, i32 %v1_23dda)
  %v1_23df6 = add i32 %arg1, 8
  %v3_23e0a = call i32 @unknown_4d595(i32 %v1_23df6, i32 %arg2, i32 %arg1)
  store i32 %v3_23e0a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23e1b

bb:                                               ; preds = %dec_label_pc_23d99
  %v1_23e19 = call i32 @function_23e20()
  br label %dec_label_pc_23e1b

dec_label_pc_23e1b:                               ; preds = %bb, %dec_label_pc_23d99
  %v2_23e19 = phi i32 [ %v1_23e19, %bb ], [ %v3_23e0a, %dec_label_pc_23d99 ]
  ret i32 %v2_23e19

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
}

define i32 @function_23e20() local_unnamed_addr {
dec_label_pc_23e20:
  %v0_23e21 = load i32, i32* @eax, align 8
  ret i32 %v0_23e21
}

define i32 @_ZSt16__insertion_sortIPxEvT_S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23e22:
  %tmp113 = ptrtoint i32* %arg1 to i32
  %v15_23e43 = icmp eq i32 %tmp113, %arg2
  br i1 %v15_23e43, label %dec_label_pc_23ec8, label %dec_label_pc_23e48

dec_label_pc_23e48:                               ; preds = %dec_label_pc_23e22
  %v1_23e4b = add i32 %tmp113, 8
  %v1_23e5e = add i32 %tmp113, 4
  %v2_23e5e = inttoptr i32 %v1_23e5e to i32*
  %v15_23ebb124 = icmp eq i32 %v1_23e4b, %arg2
  %v1_23ebe125 = icmp eq i1 %v15_23ebb124, false
  %v5_23ec1129 = icmp eq i1 %v1_23ebe125, false
  %v1_23ec3130 = icmp eq i1 %v5_23ec1129, false
  br i1 %v1_23ec3130, label %dec_label_pc_23e53, label %dec_label_pc_23ec8

dec_label_pc_23e53:                               ; preds = %dec_label_pc_23e48, %dec_label_pc_23eb4
  %v6_23ebb133.in = phi i32 [ %v4_23eb4.pre-phi, %dec_label_pc_23eb4 ], [ %v1_23e4b, %dec_label_pc_23e48 ]
  %v1_23e56 = inttoptr i32 %v6_23ebb133.in to i32*
  %v2_23e56 = load i32, i32* %v1_23e56, align 4
  %v1_23e58 = add i32 %v6_23ebb133.in, 4
  %v2_23e58 = inttoptr i32 %v1_23e58 to i32*
  %v3_23e58 = load i32, i32* %v2_23e58, align 4
  %v3_23e5e = load i32, i32* %v2_23e5e, align 4
  %v2_23e61 = load i32, i32* %arg1, align 4
  %v8_23e65 = icmp sgt i32 %v3_23e58, %v3_23e5e
  br i1 %v8_23e65, label %dec_label_pc_23ea9, label %dec_label_pc_23e67

dec_label_pc_23e67:                               ; preds = %dec_label_pc_23e53
  %v5_23e69 = icmp slt i32 %v3_23e58, %v3_23e5e
  br i1 %v5_23e69, label %dec_label_pc_23e6f, label %dec_label_pc_23e6b

dec_label_pc_23e6b:                               ; preds = %dec_label_pc_23e67
  %v7_23e6b = icmp ult i32 %v2_23e56, %v2_23e61
  %v1_23e6d = icmp eq i1 %v7_23e6b, false
  br i1 %v1_23e6d, label %dec_label_pc_23ea9, label %dec_label_pc_23e6f

dec_label_pc_23e6f:                               ; preds = %dec_label_pc_23e6b, %dec_label_pc_23e67
  %v3_23e72 = load i32, i32* %v2_23e58, align 4
  %v2_23e75 = load i32, i32* %v1_23e56, align 4
  %v1_23e80 = add i32 %v6_23ebb133.in, 8
  %v3_23e94 = call i32 @unknown_4d6ec(i32 %tmp113, i32 %v6_23ebb133.in, i32 %v1_23e80)
  store i32 %v2_23e75, i32* %arg1, align 4
  %v2_23ea4 = add i32 %tmp113, 4
  %v3_23ea4 = inttoptr i32 %v2_23ea4 to i32*
  store i32 %v3_23e72, i32* %v3_23ea4, align 4
  br label %dec_label_pc_23eb4

dec_label_pc_23ea9:                               ; preds = %dec_label_pc_23e6b, %dec_label_pc_23e53
  %v1_23eaf = call i32 @unknown_4d752(i32 %v6_23ebb133.in)
  %.pre = add i32 %v6_23ebb133.in, 8
  br label %dec_label_pc_23eb4

dec_label_pc_23eb4:                               ; preds = %dec_label_pc_23ea9, %dec_label_pc_23e6f
  %v4_23eb4.pre-phi = phi i32 [ %.pre, %dec_label_pc_23ea9 ], [ %v1_23e80, %dec_label_pc_23e6f ]
  %v15_23ebb = icmp eq i32 %v4_23eb4.pre-phi, %arg2
  %v1_23ebe = icmp eq i1 %v15_23ebb, false
  %v5_23ec1 = icmp eq i1 %v1_23ebe, false
  %v1_23ec3 = icmp eq i1 %v5_23ec1, false
  br i1 %v1_23ec3, label %dec_label_pc_23e53, label %dec_label_pc_23ec8

dec_label_pc_23ec8:                               ; preds = %dec_label_pc_23e48, %dec_label_pc_23eb4, %dec_label_pc_23e22
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23ed4

bb:                                               ; preds = %dec_label_pc_23ec8
  %v1_23ed2 = call i32 @function_23ed9()
  br label %dec_label_pc_23ed4

dec_label_pc_23ed4:                               ; preds = %bb, %dec_label_pc_23ec8
  %v2_23ed2 = phi i32 [ %v1_23ed2, %bb ], [ 0, %dec_label_pc_23ec8 ]
  ret i32 %v2_23ed2

; uselistorder directives
  uselistorder i32 %v4_23eb4.pre-phi, { 1, 0 }
  uselistorder i32 %v6_23ebb133.in, { 0, 3, 1, 2, 5, 4 }
  uselistorder i32 %tmp113, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_23ec8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_23e53, { 1, 0 }
}

define i32 @function_23ed9() local_unnamed_addr {
dec_label_pc_23ed9:
  %v0_23ede = load i32, i32* @eax, align 8
  ret i32 %v0_23ede
}

define i32 @_ZSt26__unguarded_insertion_sortIPxEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23edf:
  %v15_23f16106 = icmp eq i32 %arg1, %arg2
  %v1_23f19107 = icmp eq i1 %v15_23f16106, false
  %v5_23f1c111 = icmp eq i1 %v1_23f19107, false
  %v1_23f1e112 = icmp eq i1 %v5_23f1c111, false
  br i1 %v1_23f1e112, label %dec_label_pc_23f04, label %dec_label_pc_23f20

dec_label_pc_23f04:                               ; preds = %dec_label_pc_23edf, %dec_label_pc_23f04
  %storemerge113 = phi i32 [ %v4_23f0f, %dec_label_pc_23f04 ], [ %arg1, %dec_label_pc_23edf ]
  %v1_23f0a = call i32 @unknown_4d80f(i32 %storemerge113)
  %v4_23f0f = add i32 %storemerge113, 8
  %v15_23f16 = icmp eq i32 %v4_23f0f, %arg2
  %v1_23f19 = icmp eq i1 %v15_23f16, false
  %v5_23f1c = icmp eq i1 %v1_23f19, false
  %v1_23f1e = icmp eq i1 %v5_23f1c, false
  br i1 %v1_23f1e, label %dec_label_pc_23f04, label %dec_label_pc_23f20

dec_label_pc_23f20:                               ; preds = %dec_label_pc_23f04, %dec_label_pc_23edf
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23f2c

bb:                                               ; preds = %dec_label_pc_23f20
  %v1_23f2a = call i32 @function_23f31()
  br label %dec_label_pc_23f2c

dec_label_pc_23f2c:                               ; preds = %bb, %dec_label_pc_23f20
  %v2_23f2a = phi i32 [ %v1_23f2a, %bb ], [ 0, %dec_label_pc_23f20 ]
  ret i32 %v2_23f2a

; uselistorder directives
  uselistorder i32 %v4_23f0f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_23f04, { 1, 0 }
}

define i32 @function_23f31() local_unnamed_addr {
dec_label_pc_23f31:
  %v0_23f32 = load i32, i32* @eax, align 8
  ret i32 %v0_23f32
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256E10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23f34:
  ret i32 %arg2
}

define i32 @function_23f72() local_unnamed_addr {
dec_label_pc_23f72:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_23f72 = load i32, i32* %ecx.global-to-local, align 8
  %v1_23f72 = add i32 %v0_23f72, -1
  store i32 %v1_23f72, i32* %ecx.global-to-local, align 8
  %v0_23f74 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23f74
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f75:
  %v1_23f8f = add i32 %arg1, 12
  %v2_23f8f = inttoptr i32 %v1_23f8f to i32*
  %v3_23f8f = load i32, i32* %v2_23f8f, align 4
  store i32 %v3_23f8f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23f9e

bb:                                               ; preds = %dec_label_pc_23f75
  %v2_23f9c = call i32 @function_23fa3(i32 %arg1)
  br label %dec_label_pc_23f9e

dec_label_pc_23f9e:                               ; preds = %bb, %dec_label_pc_23f75
  %v3_23f9c = phi i32 [ %v2_23f9c, %bb ], [ %v3_23f8f, %dec_label_pc_23f75 ]
  ret i32 %v3_23f9c
}

define i32 @function_23fa3(i32 %arg1) local_unnamed_addr {
dec_label_pc_23fa3:
  %v0_23fa4 = load i32, i32* @eax, align 8
  ret i32 %v0_23fa4
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_23fa5:
  %v1_23fbf = add i32 %arg1, 8
  %v2_23fbf = inttoptr i32 %v1_23fbf to i32*
  %v3_23fbf = load i32, i32* %v2_23fbf, align 4
  store i32 %v3_23fbf, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23fce

bb:                                               ; preds = %dec_label_pc_23fa5
  %v2_23fcc = call i32 @function_23fd3(i32 %arg1)
  br label %dec_label_pc_23fce

dec_label_pc_23fce:                               ; preds = %bb, %dec_label_pc_23fa5
  %v3_23fcc = phi i32 [ %v2_23fcc, %bb ], [ %v3_23fbf, %dec_label_pc_23fa5 ]
  ret i32 %v3_23fcc
}

define i32 @function_23fd3(i32 %arg1) local_unnamed_addr {
dec_label_pc_23fd3:
  %v0_23fd4 = load i32, i32* @eax, align 8
  ret i32 %v0_23fd4
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23fd6:
  %v1_23ff0 = add i32 %arg1, 4
  store i32 %v1_23ff0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_23fff

bb:                                               ; preds = %dec_label_pc_23fd6
  %v2_23ffd = call i32 @function_24004(i32 %arg1)
  br label %dec_label_pc_23fff

dec_label_pc_23fff:                               ; preds = %bb, %dec_label_pc_23fd6
  %v3_23ffd = phi i32 [ %v2_23ffd, %bb ], [ %v1_23ff0, %dec_label_pc_23fd6 ]
  ret i32 %v3_23ffd
}

define i32 @function_24004(i32 %arg1) local_unnamed_addr {
dec_label_pc_24004:
  %v0_24005 = load i32, i32* @eax, align 8
  ret i32 %v0_24005
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24006:
  %v1_24020 = add i32 %arg1, 12
  store i32 %v1_24020, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2402f

bb:                                               ; preds = %dec_label_pc_24006
  %v2_2402d = call i32 @function_24034(i32 %arg1)
  br label %dec_label_pc_2402f

dec_label_pc_2402f:                               ; preds = %bb, %dec_label_pc_24006
  %v3_2402d = phi i32 [ %v2_2402d, %bb ], [ %v1_24020, %dec_label_pc_24006 ]
  ret i32 %v3_2402d
}

define i32 @function_24034(i32 %arg1) local_unnamed_addr {
dec_label_pc_24034:
  %v0_24035 = load i32, i32* @eax, align 8
  ret i32 %v0_24035
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24036:
  %v1_24050 = add i32 %arg1, 16
  store i32 %v1_24050, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2405f

bb:                                               ; preds = %dec_label_pc_24036
  %v2_2405d = call i32 @function_24064(i32 %arg1)
  br label %dec_label_pc_2405f

dec_label_pc_2405f:                               ; preds = %bb, %dec_label_pc_24036
  %v3_2405d = phi i32 [ %v2_2405d, %bb ], [ %v1_24050, %dec_label_pc_24036 ]
  ret i32 %v3_2405d
}

define i32 @function_24064(i32 %arg1) local_unnamed_addr {
dec_label_pc_24064:
  %v0_24065 = load i32, i32* @eax, align 8
  ret i32 %v0_24065
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24066:
  %v0_24072 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_24072
}

define i32 @function_24078(i32 %arg1) local_unnamed_addr {
dec_label_pc_24078:
  %v0_24078 = load i32, i32* @eax, align 8
  %v1_24078 = load i32, i32* @ebp, align 4
  %v2_24078 = add i32 %v1_24078, -12
  %v3_24078 = inttoptr i32 %v2_24078 to i32*
  store i32 %v0_24078, i32* %v3_24078, align 4
  %v0_2407d = load i32, i32* @ebp, align 4
  %v1_2407d = add i32 %v0_2407d, -28
  %v2_2407d = inttoptr i32 %v1_2407d to i32*
  %v3_2407d = load i32, i32* %v2_2407d, align 4
  %v1_24080 = inttoptr i32 %v3_2407d to i32*
  %v2_24080 = load i32, i32* %v1_24080, align 4
  ret i32 %v2_24080
}

define i32 @function_240a2() local_unnamed_addr {
dec_label_pc_240a2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_240a2 = load i32, i32* %ecx.global-to-local, align 8
  %v1_240a2 = add i32 %v0_240a2, -1
  store i32 %v1_240a2, i32* %ecx.global-to-local, align 8
  %v0_240a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_240a4
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv() local_unnamed_addr {
dec_label_pc_240a6:
  %eax.global-to-local = alloca i32, align 4
  %v17_240a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_240a9
}

define i32 @function_240ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_240ac:
  %v0_240ac = load i32, i32* @ebp, align 4
  %v1_240ac = add i32 %v0_240ac, 8
  %v2_240ac = inttoptr i32 %v1_240ac to i32*
  %v3_240ac = load i32, i32* %v2_240ac, align 4
  %v2_240af = add i32 %v0_240ac, -28
  %v3_240af = inttoptr i32 %v2_240af to i32*
  store i32 %v3_240ac, i32* %v3_240af, align 4
  %v0_240b2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_240b8 = load i32, i32* @ebp, align 4
  %v2_240b8 = add i32 %v1_240b8, -12
  %v3_240b8 = inttoptr i32 %v2_240b8 to i32*
  store i32 %v0_240b2, i32* %v3_240b8, align 4
  %v0_240bd = load i32, i32* @ebp, align 4
  %v1_240bd = add i32 %v0_240bd, -28
  %v2_240bd = inttoptr i32 %v1_240bd to i32*
  %v3_240bd = load i32, i32* %v2_240bd, align 4
  %v1_240c0 = add i32 %v3_240bd, 20
  %v2_240c0 = inttoptr i32 %v1_240c0 to i32*
  %v3_240c0 = load i32, i32* %v2_240c0, align 4
  store i32 %v3_240c0, i32* @eax, align 8
  %v1_240c3 = add i32 %v0_240bd, -12
  %v2_240c3 = inttoptr i32 %v1_240c3 to i32*
  %v3_240c3 = load i32, i32* %v2_240c3, align 4
  %v1_240c6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_240c6 = icmp eq i32 %v1_240c6, %v3_240c3
  br i1 %v3_240c6, label %bb, label %dec_label_pc_240cf

bb:                                               ; preds = %dec_label_pc_240ac
  %v1_240cd = call i32 @function_240d4()
  br label %dec_label_pc_240cf

dec_label_pc_240cf:                               ; preds = %bb, %dec_label_pc_240ac
  %v2_240cd = phi i32 [ %v1_240cd, %bb ], [ %v3_240c0, %dec_label_pc_240ac ]
  ret i32 %v2_240cd
}

define i32 @function_240d4() local_unnamed_addr {
dec_label_pc_240d4:
  %v0_240d5 = load i32, i32* @eax, align 8
  ret i32 %v0_240d5
}

define i32 @_Z16WriteCompactSizeI11CDataStreamEvRT_y(i32 %arg1) local_unnamed_addr {
dec_label_pc_240d6:
  ret i32 %arg1
}

define i32 @function_240e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_240e2:
  %v0_240e2 = load i32, i32* @ebp, align 4
  %v1_240e2 = add i32 %v0_240e2, 12
  %v2_240e2 = inttoptr i32 %v1_240e2 to i32*
  %v3_240e2 = load i32, i32* %v2_240e2, align 4
  %v2_240e5 = add i32 %v0_240e2, -40
  %v3_240e5 = inttoptr i32 %v2_240e5 to i32*
  store i32 %v3_240e2, i32* %v3_240e5, align 4
  %v0_240e8 = load i32, i32* @ebp, align 4
  %v1_240e8 = add i32 %v0_240e8, 16
  %v2_240e8 = inttoptr i32 %v1_240e8 to i32*
  %v3_240e8 = load i32, i32* %v2_240e8, align 4
  %v2_240eb = add i32 %v0_240e8, -36
  %v3_240eb = inttoptr i32 %v2_240eb to i32*
  store i32 %v3_240e8, i32* %v3_240eb, align 4
  %v0_240ee = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_240f4 = load i32, i32* @ebp, align 4
  %v2_240f4 = add i32 %v1_240f4, -12
  %v3_240f4 = inttoptr i32 %v2_240f4 to i32*
  store i32 %v0_240ee, i32* %v3_240f4, align 4
  %v0_240f9 = load i32, i32* @ebp, align 4
  %v1_240f9 = add i32 %v0_240f9, -36
  %v2_240f9 = inttoptr i32 %v1_240f9 to i32*
  %v3_240f9 = load i32, i32* %v2_240f9, align 4
  %v10_240f9 = icmp eq i32 %v3_240f9, 0
  br i1 %v10_240f9, label %dec_label_pc_24105, label %bb

bb:                                               ; preds = %dec_label_pc_240e2
  %v4_240fd = call i32 @function_24133()
  %v0_240ff.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_24105

dec_label_pc_24105:                               ; preds = %bb, %dec_label_pc_240e2
  %v0_24105 = phi i32 [ %v0_240f9, %dec_label_pc_240e2 ], [ %v0_240ff.pre, %bb ]
  %v1_24105 = add i32 %v0_24105, -40
  %v2_24105 = inttoptr i32 %v1_24105 to i32*
  %v3_24105 = load i32, i32* %v2_24105, align 4
  %tmp = icmp ult i32 %v3_24105, 253
  br i1 %tmp, label %dec_label_pc_2410e, label %bb3

bb3:                                              ; preds = %dec_label_pc_24105
  %v4_2410c = call i32 @function_24133()
  %v0_2410e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2410e

dec_label_pc_2410e:                               ; preds = %dec_label_pc_24105, %bb3
  %v0_2410e = phi i32 [ %v0_24105, %dec_label_pc_24105 ], [ %v0_2410e.pre, %bb3 ]
  %v1_2410e = add i32 %v0_2410e, -40
  %v2_2410e = inttoptr i32 %v1_2410e to i32*
  %v3_2410e = load i32, i32* %v2_2410e, align 4
  ret i32 %v3_2410e

; uselistorder directives
  uselistorder i32 ()* @function_24133, { 1, 0 }
  uselistorder label %dec_label_pc_2410e, { 1, 0 }
}

define i32 @function_24112(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24112:
  %v0_24112 = load i32, i32* @ebp, align 4
  %v1_24112 = add i32 %v0_24112, 1
  store i32 %v1_24112, i32* @ebp, align 4
  %v1_2411c = add i32 %v0_24112, -12
  %v1_24123 = add i32 %v0_24112, -27
  %v2_24123 = inttoptr i32 %v1_24123 to i32*
  %v3_24123 = load i32, i32* %v2_24123, align 4
  %v3_24129 = call i32 @function_35e78(i32 %v3_24123, i32 %v1_2411c, i32 1)
  ret i32 %v3_24129
}

define i32 @function_24133() local_unnamed_addr {
dec_label_pc_2414c:
  %edx.global-to-local = alloca i32, align 4
  %v0_24133 = call i32 @function_34658()
  %v1_2413a = urem i32 %v0_24133, 65536
  store i32 %v1_2413a, i32* @eax, align 8
  store i32 0, i32* @edx, align 4
  %v1_24147 = load i32, i32* @ebp, align 4
  %v2_24147 = add i32 %v1_24147, -36
  %v3_24147 = inttoptr i32 %v2_24147 to i32*
  %v4_24147 = load i32, i32* %v3_24147, align 4
  %v10_2414c = icmp eq i32 %v4_24147, 0
  br i1 %v10_2414c, label %dec_label_pc_24151, label %dec_label_pc_241b7

dec_label_pc_24151:                               ; preds = %dec_label_pc_2414c
  %v2_24151 = add i32 %v1_24147, -40
  %v3_24151 = inttoptr i32 %v2_24151 to i32*
  %v4_24151 = load i32, i32* %v3_24151, align 4
  %v10_24151 = icmp ult i32 %v1_2413a, %v4_24151
  %v1_24154 = icmp eq i1 %v10_24151, false
  br i1 %v1_24154, label %dec_label_pc_2415f, label %dec_label_pc_241b7

dec_label_pc_2415f:                               ; preds = %dec_label_pc_24151
  %v1_2415f = add i32 %v1_24147, -13
  %v2_2415f = inttoptr i32 %v1_2415f to i8*
  store i8 -3, i8* %v2_2415f, align 1
  %v0_24163 = load i32, i32* @ebp, align 4
  %v1_24163 = add i32 %v0_24163, -40
  %v2_24163 = inttoptr i32 %v1_24163 to i32*
  %v3_24163 = load i32, i32* %v2_24163, align 4
  %v1_24166 = trunc i32 %v3_24163 to i16
  %v3_24166 = add i32 %v0_24163, -24
  %v4_24166 = inttoptr i32 %v3_24166 to i16*
  store i16 %v1_24166, i16* %v4_24166, align 2
  %v0_24172 = load i32, i32* @ebp, align 4
  %v1_24172 = add i32 %v0_24172, -13
  %v1_24179 = add i32 %v0_24172, -28
  %v2_24179 = inttoptr i32 %v1_24179 to i32*
  %v3_24179 = load i32, i32* %v2_24179, align 4
  %v3_2417f = call i32 @function_35e78(i32 %v3_24179, i32 %v1_24172, i32 1)
  %v0_2418c = load i32, i32* @ebp, align 4
  %v1_2418c = add i32 %v0_2418c, -24
  %v1_24193 = add i32 %v0_2418c, -28
  %v2_24193 = inttoptr i32 %v1_24193 to i32*
  %v3_24193 = load i32, i32* %v2_24193, align 4
  %v3_24199 = call i32 @function_35e78(i32 %v3_24193, i32 %v1_2418c, i32 2)
  br label %dec_label_pc_2424e

dec_label_pc_241b7:                               ; preds = %dec_label_pc_2414c, %dec_label_pc_24151
  store i32 0, i32* @ecx, align 8
  store i1 false, i1* @cf, align 1
  %v0_241a3 = call i32 @function_346aa()
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_241b2 = load i32, i32* @ebp, align 4
  %v2_241b2 = add i32 %v1_241b2, -36
  %v3_241b2 = inttoptr i32 %v2_241b2 to i32*
  %v4_241b2 = load i32, i32* %v3_241b2, align 4
  %v10_241b7 = icmp eq i32 %v4_241b2, 0
  br i1 %v10_241b7, label %dec_label_pc_241bc, label %dec_label_pc_241c1

dec_label_pc_241bc:                               ; preds = %dec_label_pc_241b7
  %v2_241bc = add i32 %v1_241b2, -40
  %v3_241bc = inttoptr i32 %v2_241bc to i32*
  %v4_241bc = load i32, i32* %v3_241bc, align 4
  %v10_241bc = icmp ult i32 %v0_241a3, %v4_241bc
  %v1_241bf = icmp eq i1 %v10_241bc, false
  br i1 %v1_241bf, label %dec_label_pc_241c6, label %dec_label_pc_241c1

dec_label_pc_241c1:                               ; preds = %dec_label_pc_241b7, %dec_label_pc_241bc
  br label %dec_label_pc_241c6

dec_label_pc_241c6:                               ; preds = %dec_label_pc_241c1, %dec_label_pc_241bc
  %v0_241c6 = phi i1 [ true, %dec_label_pc_241c1 ], [ false, %dec_label_pc_241bc ]
  %v1_2420a = add i32 %v1_241b2, -13
  %v2_2420a = inttoptr i32 %v1_2420a to i8*
  br i1 %v0_241c6, label %dec_label_pc_2420a, label %dec_label_pc_241ca

dec_label_pc_241ca:                               ; preds = %dec_label_pc_241c6
  store i8 -2, i8* %v2_2420a, align 1
  %v0_241ce = load i32, i32* @ebp, align 4
  %v1_241ce = add i32 %v0_241ce, -40
  %v2_241ce = inttoptr i32 %v1_241ce to i32*
  %v3_241ce = load i32, i32* %v2_241ce, align 4
  %v2_241d1 = add i32 %v0_241ce, -24
  %v3_241d1 = inttoptr i32 %v2_241d1 to i32*
  store i32 %v3_241ce, i32* %v3_241d1, align 4
  %v0_241dc = load i32, i32* @ebp, align 4
  %v1_241dc = add i32 %v0_241dc, -13
  %v1_241e3 = add i32 %v0_241dc, -28
  %v2_241e3 = inttoptr i32 %v1_241e3 to i32*
  %v3_241e3 = load i32, i32* %v2_241e3, align 4
  %v3_241e9 = call i32 @function_35e78(i32 %v3_241e3, i32 %v1_241dc, i32 1)
  %v0_241f6 = load i32, i32* @ebp, align 4
  %v1_241f6 = add i32 %v0_241f6, -24
  %v1_241fd = add i32 %v0_241f6, -28
  %v2_241fd = inttoptr i32 %v1_241fd to i32*
  %v3_241fd = load i32, i32* %v2_241fd, align 4
  %v3_24203 = call i32 @function_35e78(i32 %v3_241fd, i32 %v1_241f6, i32 4)
  br label %dec_label_pc_2424e

dec_label_pc_2420a:                               ; preds = %dec_label_pc_241c6
  store i8 -1, i8* %v2_2420a, align 1
  %v0_2420e = load i32, i32* @ebp, align 4
  %v1_2420e = add i32 %v0_2420e, -40
  %v2_2420e = inttoptr i32 %v1_2420e to i32*
  %v3_2420e = load i32, i32* %v2_2420e, align 4
  %v1_24211 = add i32 %v0_2420e, -36
  %v2_24211 = inttoptr i32 %v1_24211 to i32*
  %v3_24211 = load i32, i32* %v2_24211, align 4
  store i32 %v3_24211, i32* %edx.global-to-local, align 4
  %v2_24214 = add i32 %v0_2420e, -24
  %v3_24214 = inttoptr i32 %v2_24214 to i32*
  store i32 %v3_2420e, i32* %v3_24214, align 4
  %v0_24217 = load i32, i32* %edx.global-to-local, align 4
  %v1_24217 = load i32, i32* @ebp, align 4
  %v2_24217 = add i32 %v1_24217, -20
  %v3_24217 = inttoptr i32 %v2_24217 to i32*
  store i32 %v0_24217, i32* %v3_24217, align 4
  %v0_24222 = load i32, i32* @ebp, align 4
  %v1_24222 = add i32 %v0_24222, -13
  %v1_24229 = add i32 %v0_24222, -28
  %v2_24229 = inttoptr i32 %v1_24229 to i32*
  %v3_24229 = load i32, i32* %v2_24229, align 4
  %v3_2422f = call i32 @function_35e78(i32 %v3_24229, i32 %v1_24222, i32 1)
  %v0_2423c = load i32, i32* @ebp, align 4
  %v1_2423c = add i32 %v0_2423c, -24
  %v1_24243 = add i32 %v0_2423c, -28
  %v2_24243 = inttoptr i32 %v1_24243 to i32*
  %v3_24243 = load i32, i32* %v2_24243, align 4
  %v3_24249 = call i32 @function_35e78(i32 %v3_24243, i32 %v1_2423c, i32 8)
  br label %dec_label_pc_2424e

dec_label_pc_2424e:                               ; preds = %dec_label_pc_2420a, %dec_label_pc_241ca, %dec_label_pc_2415f
  %v0_2424e = load i32, i32* @ebp, align 4
  %v1_2424e = add i32 %v0_2424e, -12
  %v2_2424e = inttoptr i32 %v1_2424e to i32*
  %v3_2424e = load i32, i32* %v2_2424e, align 4
  %v1_24251 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24251 = xor i32 %v1_24251, %v3_2424e
  %v3_24251 = icmp eq i32 %v2_24251, 0
  store i32 %v2_24251, i32* @eax, align 8
  br i1 %v3_24251, label %bb, label %dec_label_pc_2425a

bb:                                               ; preds = %dec_label_pc_2424e
  %v1_24258 = call i32 @function_2425f()
  br label %dec_label_pc_2425a

dec_label_pc_2425a:                               ; preds = %bb, %dec_label_pc_2424e
  %v2_24258 = phi i32 [ %v1_24258, %bb ], [ %v2_24251, %dec_label_pc_2424e ]
  ret i32 %v2_24258

; uselistorder directives
  uselistorder i8* %v2_2420a, { 1, 0 }
  uselistorder i32 %v1_2413a, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_35e78, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_241c1, { 1, 0 }
  uselistorder label %dec_label_pc_241b7, { 1, 0 }
}

define i32 @function_2425f() local_unnamed_addr {
dec_label_pc_2425f:
  %v0_24260 = load i32, i32* @eax, align 8
  ret i32 %v0_24260
}

define i32 @_Z15ReadCompactSizeI11CDataStreamEyRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_24261:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  %v2_24282 = ptrtoint i32* %stack_var_-18 to i32
  store i32 %arg1, i32* @eax, align 8
  %v3_2428f = call i32 @function_35e9b(i32 %arg1, i32 %v2_24282, i32 1)
  %v3_242a2 = load i32, i32* %stack_var_-18, align 4
  %v4_242a2 = urem i32 %v3_242a2, 256
  %v1_242a6 = trunc i32 %v3_242a2 to i8
  %tmp113 = icmp ult i8 %v1_242a6, -3
  br i1 %tmp113, label %dec_label_pc_24356, label %dec_label_pc_242c0

dec_label_pc_242c0:                               ; preds = %dec_label_pc_24261
  %v11_242c4 = icmp eq i8 %v1_242a6, -3
  %v1_242c6 = icmp eq i1 %v11_242c4, false
  br i1 %v1_242c6, label %dec_label_pc_242f5, label %dec_label_pc_242c8

dec_label_pc_242c8:                               ; preds = %dec_label_pc_242c0
  %v2_242d0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %arg1, i32* @eax, align 8
  %v3_242dd = call i32 @function_35e9b(i32 %arg1, i32 %v2_242d0, i32 2)
  %v3_242e2 = load i32, i32* %stack_var_-44, align 4
  %v1_242e6 = urem i32 %v3_242e2, 65536
  br label %dec_label_pc_24356

dec_label_pc_242f5:                               ; preds = %dec_label_pc_242c0
  %v11_242f9 = icmp eq i8 %v1_242a6, -2
  %v1_242fb = icmp eq i1 %v11_242f9, false
  %v2_2432e = ptrtoint i32* %stack_var_-44 to i32
  store i32 %arg1, i32* @eax, align 8
  br i1 %v1_242fb, label %dec_label_pc_24326, label %dec_label_pc_242fd

dec_label_pc_242fd:                               ; preds = %dec_label_pc_242f5
  %v3_24312 = call i32 @function_35e9b(i32 %arg1, i32 %v2_2432e, i32 4)
  %v3_24317 = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_24356

dec_label_pc_24326:                               ; preds = %dec_label_pc_242f5
  %v3_2433b = call i32 @function_35e9b(i32 %arg1, i32 %v2_2432e, i32 8)
  %v3_24340 = load i32, i32* %stack_var_-44, align 4
  %phitmp = icmp eq i32 %tmp98, 0
  br label %dec_label_pc_24356

dec_label_pc_24356:                               ; preds = %dec_label_pc_242c8, %dec_label_pc_242fd, %dec_label_pc_24326, %dec_label_pc_24261
  %stack_var_-36.0 = phi i32 [ %v3_24340, %dec_label_pc_24326 ], [ %v3_24317, %dec_label_pc_242fd ], [ %v1_242e6, %dec_label_pc_242c8 ], [ %v4_242a2, %dec_label_pc_24261 ]
  %stack_var_-32.0 = phi i1 [ %phitmp, %dec_label_pc_24326 ], [ true, %dec_label_pc_242fd ], [ true, %dec_label_pc_242c8 ], [ true, %dec_label_pc_24261 ]
  br i1 %stack_var_-32.0, label %dec_label_pc_2435c, label %dec_label_pc_24365

dec_label_pc_2435c:                               ; preds = %dec_label_pc_24356
  %tmp114 = icmp ult i32 %stack_var_-36.0, 33554433
  br i1 %tmp114, label %bb, label %dec_label_pc_24365

bb:                                               ; preds = %dec_label_pc_2435c
  %v3_24363 = call i32 @function_243d6()
  br label %dec_label_pc_24365

dec_label_pc_24365:                               ; preds = %dec_label_pc_24356, %bb, %dec_label_pc_2435c
  %v2_24365 = phi i32 [ %stack_var_-36.0, %dec_label_pc_24356 ], [ %v3_24363, %bb ], [ %stack_var_-36.0, %dec_label_pc_2435c ]
  ret i32 %v2_24365

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 2, 1, 0 }
  uselistorder i32 %v2_2432e, { 1, 0 }
  uselistorder i32 %v3_242a2, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_35e9b, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder label %dec_label_pc_24365, { 1, 2, 0 }
  uselistorder label %dec_label_pc_24356, { 2, 1, 0, 3 }
}

define i32 @function_24372() local_unnamed_addr {
dec_label_pc_24372:
  %eax.global-to-local = alloca i32, align 4
  %v0_24372 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24372
}

define i32 @function_24392(i32 %arg1) local_unnamed_addr {
dec_label_pc_24392:
  %v0_24392 = load i32, i32* @eax, align 8
  %v11_24392 = and i32 %v0_24392, -24
  ret i32 %v11_24392
}

define i32 @function_243d6() local_unnamed_addr {
dec_label_pc_243d6:
  %v0_243d6 = load i32, i32* @ebp, align 4
  %v1_243d6 = add i32 %v0_243d6, -32
  %v2_243d6 = inttoptr i32 %v1_243d6 to i32*
  %v3_243d6 = load i32, i32* %v2_243d6, align 4
  store i32 %v3_243d6, i32* @eax, align 8
  %v1_243dc = add i32 %v0_243d6, -12
  %v2_243dc = inttoptr i32 %v1_243dc to i32*
  %v3_243dc = load i32, i32* %v2_243dc, align 4
  %v1_243df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_243df = icmp eq i32 %v1_243df, %v3_243dc
  br i1 %v3_243df, label %bb, label %dec_label_pc_243e8

bb:                                               ; preds = %dec_label_pc_243d6
  %v1_243e6 = call i32 @function_2440e()
  store i32 %v1_243e6, i32* @eax, align 8
  br label %dec_label_pc_243e8

dec_label_pc_243e8:                               ; preds = %bb, %dec_label_pc_243d6
  %v0_243e8 = call i32 @function_24409()
  ret i32 %v0_243e8
}

define i32 @function_24409() local_unnamed_addr {
dec_label_pc_24409:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2440e() local_unnamed_addr {
dec_label_pc_2440e:
  %v0_24414 = load i32, i32* @eax, align 8
  ret i32 %v0_24414
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24416:
  ret i32 %arg2
}

define i32 @function_24454() local_unnamed_addr {
dec_label_pc_24454:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_24454 = load i32, i32* %ecx.global-to-local, align 8
  %v1_24454 = add i32 %v0_24454, -1
  store i32 %v1_24454, i32* %ecx.global-to-local, align 8
  %v0_24456 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24456
}

define i32 @_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_24457:
  %v1_24474 = call i32 @unknown_4dfb2(i32 %arg1)
  store i32 %v1_24474, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24485

bb:                                               ; preds = %dec_label_pc_24457
  %v1_24483 = call i32 @function_2448a()
  br label %dec_label_pc_24485

dec_label_pc_24485:                               ; preds = %bb, %dec_label_pc_24457
  %v2_24483 = phi i32 [ %v1_24483, %bb ], [ %v1_24474, %dec_label_pc_24457 ]
  ret i32 %v2_24483
}

define i32 @function_2448a() local_unnamed_addr {
dec_label_pc_2448a:
  %v0_2448b = load i32, i32* @eax, align 8
  ret i32 %v0_2448b
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKxEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_2448c:
  %v1_244b9 = add i32 %arg1, 4
  %v1_244bf = call i32 @unknown_46996(i32 %v1_244b9)
  %v2_244ce = call i32 @unknown_4e014(i32 %v1_244bf, i32 %arg2)
  %v2_244dd = call i32 @unknown_48a5e(i32 %arg1, i32 %v2_244ce)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_244ee

bb:                                               ; preds = %dec_label_pc_2448c
  %v1_244ec = call i32 @function_244f3()
  br label %dec_label_pc_244ee

dec_label_pc_244ee:                               ; preds = %bb, %dec_label_pc_2448c
  %v2_244ec = phi i32 [ %v1_244ec, %bb ], [ 0, %dec_label_pc_2448c ]
  ret i32 %v2_244ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_244f3() local_unnamed_addr {
dec_label_pc_244f3:
  %v0_244f4 = load i32, i32* @eax, align 8
  ret i32 %v0_244f4
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_9destroyerEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_244f6:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_24517 = add i32 %tmp105, 4
  %v1_2451d = call i32 @unknown_46a00(i32 %v1_24517)
  %v1_2452a = call i32 @unknown_48b00(i32 %tmp105)
  %v2_24534 = load i32, i32* %arg1, align 4
  %v4_24548 = call i32 @unknown_4e0d9(i32 %v2_24534, i32 %v1_2452a, i32 %arg2, i32 %v1_2451d)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24559

bb:                                               ; preds = %dec_label_pc_244f6
  %v1_24557 = call i32 @function_2455e()
  br label %dec_label_pc_24559

dec_label_pc_24559:                               ; preds = %bb, %dec_label_pc_244f6
  %v2_24557 = phi i32 [ %v1_24557, %bb ], [ 0, %dec_label_pc_244f6 ]
  ret i32 %v2_24557

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2455e() local_unnamed_addr {
dec_label_pc_2455e:
  %v0_24563 = load i32, i32* @eax, align 8
  ret i32 %v0_24563
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_9copy_intoEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24564:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_24585 = add i32 %tmp105, 4
  %v1_2458b = call i32 @unknown_4c8ee(i32 %v1_24585)
  %v1_24598 = call i32 @unknown_48b6e(i32 %tmp105)
  %v2_245a2 = load i32, i32* %arg1, align 4
  %v4_245b6 = call i32 @unknown_4e1bb(i32 %v2_245a2, i32 %v1_24598, i32 %arg2, i32 %v1_2458b)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_245c7

bb:                                               ; preds = %dec_label_pc_24564
  %v1_245c5 = call i32 @function_245cc()
  br label %dec_label_pc_245c7

dec_label_pc_245c7:                               ; preds = %bb, %dec_label_pc_24564
  %v2_245c5 = phi i32 [ %v1_245c5, %bb ], [ 0, %dec_label_pc_24564 ]
  ret i32 %v2_245c5

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_245cc() local_unnamed_addr {
dec_label_pc_245cc:
  %v0_245d1 = load i32, i32* @eax, align 8
  ret i32 %v0_245d1
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E14indicate_whichEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_245d2:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24603

bb:                                               ; preds = %dec_label_pc_245d2
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_24601 = call i32 @function_24608(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_24603

dec_label_pc_24603:                               ; preds = %bb, %dec_label_pc_245d2
  %v4_24601 = phi i32 [ %v3_24601, %bb ], [ 0, %dec_label_pc_245d2 ]
  ret i32 %v4_24601

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_24608(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24608:
  %v0_24609 = load i32, i32* @eax, align 8
  ret i32 %v0_24609
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E5whichEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2460a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_24627 = call i32 @unknown_4e2d6(i32 %tmp101)
  %v4_2462c = trunc i32 %v1_24627 to i8
  %v2_2463c = load i32, i32* %arg1, align 4
  %not.v0_2462e = icmp ne i8 %v4_2462c, 0
  %v1_24635 = sext i1 %not.v0_2462e to i32
  %storemerge = xor i32 %v1_24635, %v2_2463c
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2464a

bb:                                               ; preds = %dec_label_pc_2460a
  %v1_24648 = call i32 @function_2464f()
  br label %dec_label_pc_2464a

dec_label_pc_2464a:                               ; preds = %bb, %dec_label_pc_2460a
  %v2_24648 = phi i32 [ %v1_24648, %bb ], [ %storemerge, %dec_label_pc_2460a ]
  ret i32 %v2_24648
}

define i32 @function_2464f() local_unnamed_addr {
dec_label_pc_2464f:
  %v0_24650 = load i32, i32* @eax, align 8
  ret i32 %v0_24650
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIxEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24652:
  %v1_2467f = add i32 %arg1, 4
  %v1_24685 = call i32 @unknown_46b5c(i32 %v1_2467f)
  %v2_24694 = call i32 @unknown_4e1da(i32 %v1_24685, i32 %arg2)
  %v2_246a3 = call i32 @unknown_48c24(i32 %arg1, i32 %v2_24694)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_246b4

bb:                                               ; preds = %dec_label_pc_24652
  %v1_246b2 = call i32 @function_246b9()
  br label %dec_label_pc_246b4

dec_label_pc_246b4:                               ; preds = %bb, %dec_label_pc_24652
  %v2_246b2 = phi i32 [ %v1_246b2, %bb ], [ 0, %dec_label_pc_24652 ]
  ret i32 %v2_246b2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_246b9() local_unnamed_addr {
dec_label_pc_246b9:
  %v0_246ba = load i32, i32* @eax, align 8
  ret i32 %v0_246ba
}

define i32 @_ZN5boost3getIxSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EENS_13add_referenceIKT_E4typeERKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_246bb:
  %v1_246d9 = call i32 @unknown_4e3b9(i32 %arg1)
  %v10_246e1 = icmp eq i32 %v1_246d9, 0
  %v1_246e5 = icmp eq i1 %v10_246e1, false
  br i1 %v1_246e5, label %bb, label %dec_label_pc_246e7

bb:                                               ; preds = %dec_label_pc_246bb
  %v3_246e5 = call i32 @function_2471c(i32 %v1_246d9)
  br label %dec_label_pc_246e7

dec_label_pc_246e7:                               ; preds = %bb, %dec_label_pc_246bb
  %v2_246e7 = phi i32 [ %v3_246e5, %bb ], [ %v1_246d9, %dec_label_pc_246bb ]
  ret i32 %v2_246e7
}

define i32 @function_246f4() local_unnamed_addr {
dec_label_pc_246f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_246f4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_246f4
}

define i32 @function_2471c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2471c:
  %v0_2471c = load i32, i32* @ebp, align 4
  %v1_2471c = add i32 %v0_2471c, -16
  %v2_2471c = inttoptr i32 %v1_2471c to i32*
  %v3_2471c = load i32, i32* %v2_2471c, align 4
  store i32 %v3_2471c, i32* @eax, align 8
  %v1_2471f = add i32 %v0_2471c, -12
  %v2_2471f = inttoptr i32 %v1_2471f to i32*
  %v3_2471f = load i32, i32* %v2_2471f, align 4
  %v1_24722 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24722 = icmp eq i32 %v1_24722, %v3_2471f
  br i1 %v3_24722, label %bb, label %dec_label_pc_2472b

bb:                                               ; preds = %dec_label_pc_2471c
  %v1_24729 = call i32 @function_24730()
  br label %dec_label_pc_2472b

dec_label_pc_2472b:                               ; preds = %bb, %dec_label_pc_2471c
  %v2_24729 = phi i32 [ %v1_24729, %bb ], [ %v3_2471c, %dec_label_pc_2471c ]
  ret i32 %v2_24729
}

define i32 @function_24730() local_unnamed_addr {
dec_label_pc_24730:
  %v0_24735 = load i32, i32* @eax, align 8
  ret i32 %v0_24735
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIbEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24736:
  %v2_24764 = load i8, i8* %arg2, align 1
  %v3_24764 = zext i8 %v2_24764 to i32
  %v1_2476d = add i32 %arg1, 4
  %v1_24773 = call i32 @unknown_46c40(i32 %v1_2476d)
  %v2_2477f = call i32 @unknown_4e47d(i32 %v1_24773, i32 %v3_24764)
  %v2_2478e = call i32 @unknown_48d08(i32 %arg1, i32 %v2_2477f)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2479f

bb:                                               ; preds = %dec_label_pc_24736
  %v1_2479d = call i32 @function_247a4()
  br label %dec_label_pc_2479f

dec_label_pc_2479f:                               ; preds = %bb, %dec_label_pc_24736
  %v2_2479d = phi i32 [ %v1_2479d, %bb ], [ 0, %dec_label_pc_24736 ]
  ret i32 %v2_2479d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_247a4() local_unnamed_addr {
dec_label_pc_247a4:
  %v0_247a9 = load i32, i32* @eax, align 8
  ret i32 %v0_247a9
}

define i32 @_ZN5boost3getIKbSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEENS2_IS3_INS4_10Value_implIS7_EESaISD_EEEEbxdNS_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_247aa:
  %stack_var_-17 = alloca i32, align 4
  %v10_247c1 = icmp eq i32 %arg1, 0
  %v1_247c5 = icmp eq i1 %v10_247c1, false
  br i1 %v1_247c5, label %dec_label_pc_247ce, label %dec_label_pc_247e0

dec_label_pc_247ce:                               ; preds = %dec_label_pc_247aa
  %v2_247ce = ptrtoint i32* %stack_var_-17 to i32
  %v2_247db = call i32 @unknown_4e544(i32 %arg1, i32 %v2_247ce)
  br label %dec_label_pc_247e0

dec_label_pc_247e0:                               ; preds = %dec_label_pc_247aa, %dec_label_pc_247ce
  %storemerge = phi i32 [ %v2_247db, %dec_label_pc_247ce ], [ 0, %dec_label_pc_247aa ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_247ec

bb:                                               ; preds = %dec_label_pc_247e0
  %v1_247ea = call i32 @function_247f1()
  br label %dec_label_pc_247ec

dec_label_pc_247ec:                               ; preds = %bb, %dec_label_pc_247e0
  %v2_247ea = phi i32 [ %v1_247ea, %bb ], [ %storemerge, %dec_label_pc_247e0 ]
  ret i32 %v2_247ea

; uselistorder directives
  uselistorder label %dec_label_pc_247e0, { 1, 0 }
}

define i32 @function_247f1() local_unnamed_addr {
dec_label_pc_247f1:
  %v0_247f2 = load i32, i32* @eax, align 8
  ret i32 %v0_247f2
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_247f4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_24811 = call i32 @unknown_4e5e2(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_24822 = add i32 %tmp100, 4
  %v2_24822 = inttoptr i32 %v1_24822 to i32*
  store i32 0, i32* %v2_24822, align 4
  %v1_2482c = add i32 %tmp100, 8
  %v2_2482c = inttoptr i32 %v1_2482c to i32*
  store i32 0, i32* %v2_2482c, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2483f

bb:                                               ; preds = %dec_label_pc_247f4
  %v1_2483d = call i32 @function_24844()
  br label %dec_label_pc_2483f

dec_label_pc_2483f:                               ; preds = %bb, %dec_label_pc_247f4
  %v2_2483d = phi i32 [ %v1_2483d, %bb ], [ 0, %dec_label_pc_247f4 ]
  ret i32 %v2_2483d

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_24844() local_unnamed_addr {
dec_label_pc_24844:
  %v0_24845 = load i32, i32* @eax, align 8
  ret i32 %v0_24845
}

define i32 @_ZNSaIN11json_spirit9Pair_implINS_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24846:
  %v1_24863 = call i32 @unknown_4e66a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24874

bb:                                               ; preds = %dec_label_pc_24846
  %v1_24872 = call i32 @function_24879()
  br label %dec_label_pc_24874

dec_label_pc_24874:                               ; preds = %bb, %dec_label_pc_24846
  %v2_24872 = phi i32 [ %v1_24872, %bb ], [ 0, %dec_label_pc_24846 ]
  ret i32 %v2_24872
}

define i32 @function_24879() local_unnamed_addr {
dec_label_pc_24879:
  %v0_2487a = load i32, i32* @eax, align 8
  ret i32 %v0_2487a
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_deallocateEPS4_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2487c:
  %v10_2489f = icmp eq i32 %arg2, 0
  br i1 %v10_2489f, label %dec_label_pc_248be, label %dec_label_pc_248a5

dec_label_pc_248a5:                               ; preds = %dec_label_pc_2487c
  %v3_248b9 = call i32 @unknown_4e6ca(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_248be

dec_label_pc_248be:                               ; preds = %dec_label_pc_248a5, %dec_label_pc_2487c
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_248ca

bb:                                               ; preds = %dec_label_pc_248be
  %v1_248c8 = call i32 @function_248cf()
  br label %dec_label_pc_248ca

dec_label_pc_248ca:                               ; preds = %bb, %dec_label_pc_248be
  %v2_248c8 = phi i32 [ %v1_248c8, %bb ], [ 0, %dec_label_pc_248be ]
  ret i32 %v2_248c8
}

define i32 @function_248cf() local_unnamed_addr {
dec_label_pc_248cf:
  %v0_248d0 = load i32, i32* @eax, align 8
  ret i32 %v0_248d0
}

define i32 @_ZSt8_DestroyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEEvT_S6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_248d1:
  %v2_248fb = call i32 @unknown_4e760(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2490c

bb:                                               ; preds = %dec_label_pc_248d1
  %v1_2490a = call i32 @function_24911()
  br label %dec_label_pc_2490c

dec_label_pc_2490c:                               ; preds = %bb, %dec_label_pc_248d1
  %v2_2490a = phi i32 [ %v1_2490a, %bb ], [ 0, %dec_label_pc_248d1 ]
  ret i32 %v2_2490a
}

define i32 @function_24911() local_unnamed_addr {
dec_label_pc_24911:
  %v0_24912 = load i32, i32* @eax, align 8
  ret i32 %v0_24912
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24914:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2493a

bb:                                               ; preds = %dec_label_pc_24914
  %v2_24938 = call i32 @function_2493f(i32 %arg1)
  br label %dec_label_pc_2493a

dec_label_pc_2493a:                               ; preds = %bb, %dec_label_pc_24914
  %v3_24938 = phi i32 [ %v2_24938, %bb ], [ %arg1, %dec_label_pc_24914 ]
  ret i32 %v3_24938
}

define i32 @function_2493f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2493f:
  %v0_24940 = load i32, i32* @eax, align 8
  ret i32 %v0_24940
}

define i32 @_ZSt13copy_backwardIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24941:
  ret i32 %arg2
}

define i32 @function_2496b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2496b:
  %ebx.global-to-local = alloca i32, align 4
  %v1_2496b = call i32 @unknown_4e826(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_2496b, i32* %ebx.global-to-local, align 4
  %v0_24972 = load i32, i32* @ebp, align 4
  %v1_24972 = add i32 %v0_24972, -28
  %v2_24972 = inttoptr i32 %v1_24972 to i32*
  %v3_24972 = load i32, i32* %v2_24972, align 4
  %v1_24978 = call i32 @unknown_4e826(i32 %v3_24972)
  %v0_2497d = load i32, i32* @ebp, align 4
  %v1_2497d = add i32 %v0_2497d, -36
  %v2_2497d = inttoptr i32 %v1_2497d to i32*
  %v3_2497d = load i32, i32* %v2_2497d, align 4
  %v0_24984 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2498b = call i32 @unknown_4e85b(i32 %v1_24978, i32 %v0_24984, i32 %v3_2497d)
  store i32 %v3_2498b, i32* @eax, align 8
  %v0_24990 = load i32, i32* @ebp, align 4
  %v1_24990 = add i32 %v0_24990, -12
  %v2_24990 = inttoptr i32 %v1_24990 to i32*
  %v3_24990 = load i32, i32* %v2_24990, align 4
  %v1_24993 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24993 = icmp eq i32 %v1_24993, %v3_24990
  br i1 %v3_24993, label %bb, label %dec_label_pc_2499c

bb:                                               ; preds = %dec_label_pc_2496b
  %v1_2499a = call i32 @function_249a1()
  br label %dec_label_pc_2499c

dec_label_pc_2499c:                               ; preds = %bb, %dec_label_pc_2496b
  %v3_2499a = phi i32 [ %v1_2499a, %bb ], [ %v3_2498b, %dec_label_pc_2496b ]
  ret i32 %v3_2499a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4e826, { 1, 0 }
}

define i32 @function_249a1() local_unnamed_addr {
dec_label_pc_249a1:
  %v0_249a6 = load i32, i32* @eax, align 8
  ret i32 %v0_249a6
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_249a8:
  %v2_249c2 = load i32, i32* %arg1, align 4
  store i32 %v2_249c2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_249d0

bb:                                               ; preds = %dec_label_pc_249a8
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_249ce = call i32 @function_249d5(i32 %tmp100)
  br label %dec_label_pc_249d0

dec_label_pc_249d0:                               ; preds = %bb, %dec_label_pc_249a8
  %v3_249ce = phi i32 [ %v2_249ce, %bb ], [ %v2_249c2, %dec_label_pc_249a8 ]
  ret i32 %v3_249ce

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_249d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_249d5:
  %v0_249d6 = load i32, i32* @eax, align 8
  ret i32 %v0_249d6
}

define i32 @_ZN11json_spirit10Value_implINS_13Config_vectorISsEEEaSERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_249d8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_249fd = ptrtoint i32* %stack_var_-36 to i32
  %v2_24a03 = call i32 @function_3bd48(i32 %v2_249fd, i32 %arg2)
  %v2_24a15 = call i32 @unknown_4e964(i32 %arg1, i32 %v2_249fd)
  %v1_24a1d = add i32 %arg1, 4
  %v16_24a23 = ptrtoint i32* %stack_var_-32 to i32
  %v2_24a2d = call i32 @unknown_4e9ae(i32 %v1_24a1d, i32 %v16_24a23)
  %v1_24a35 = add i32 %arg1, 16
  store i32 %v1_24a35, i32* @eax, align 8
  %v15_24a3b = ptrtoint i32* %stack_var_-20 to i32
  %v2_24a45 = call i32 @function_3a0b3(i32 %v1_24a35, i32 %v15_24a3b)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_249fd, i32* @eax, align 8
  %v1_24a53 = call i32 @function_384ce(i32 %v2_249fd)
  %v0_24a58 = load i32, i32* @ebx, align 4
  store i32 %v0_24a58, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24a66

bb:                                               ; preds = %dec_label_pc_249d8
  %v1_24a64 = call i32 @function_24a84()
  store i32 %v1_24a64, i32* @eax, align 8
  br label %dec_label_pc_24a66

dec_label_pc_24a66:                               ; preds = %bb, %dec_label_pc_249d8
  %v0_24a66 = call i32 @function_24a7f()
  ret i32 %v0_24a66

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_24a69() local_unnamed_addr {
dec_label_pc_24a69:
  %eax.global-to-local = alloca i32, align 4
  %v0_24a69 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24a69
}

define i32 @function_24a7f() local_unnamed_addr {
dec_label_pc_24a7f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24a84() local_unnamed_addr {
dec_label_pc_24a84:
  %v0_24a89 = load i32, i32* @eax, align 8
  ret i32 %v0_24a89
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24a8a:
  %v1_24ab4 = call i32 @unknown_4eaf0(i32 %arg1)
  %v1_24ac1 = call i32 @unknown_42a40(i32 %arg1)
  %v2_24ac8 = sub i32 %v1_24ab4, %v1_24ac1
  %v7_24acd = icmp ult i32 %v2_24ac8, %arg2
  %v1_24acf = zext i1 %v7_24acd to i32
  %v3_24acf = and i32 %arg2, -256
  %v4_24acf = or i32 %v1_24acf, %v3_24acf
  %v5_24ad2 = icmp eq i1 %v7_24acd, false
  br i1 %v5_24ad2, label %bb, label %dec_label_pc_24ad6

bb:                                               ; preds = %dec_label_pc_24a8a
  %v1_24ad4 = call i32 @function_24ae1()
  br label %dec_label_pc_24ad6

dec_label_pc_24ad6:                               ; preds = %bb, %dec_label_pc_24a8a
  %v2_24ad4 = phi i32 [ %v1_24ad4, %bb ], [ %v4_24acf, %dec_label_pc_24a8a ]
  ret i32 %v2_24ad4

; uselistorder directives
  uselistorder i1 %v7_24acd, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24ad8(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ad8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24ae1() local_unnamed_addr {
dec_label_pc_24ae1:
  %eax.global-to-local = alloca i32, align 4
  %v0_24ae1 = load i32, i32* @ebp, align 4
  %v1_24ae1 = add i32 %v0_24ae1, -28
  %v2_24ae1 = inttoptr i32 %v1_24ae1 to i32*
  %v3_24ae1 = load i32, i32* %v2_24ae1, align 4
  store i32 %v3_24ae1, i32* %eax.global-to-local, align 8
  %v1_24ae7 = call i32 @unknown_42a40(i32 %v3_24ae1)
  store i32 %v1_24ae7, i32* %eax.global-to-local, align 8
  %v0_24aee = load i32, i32* @ebp, align 4
  %v1_24aee = add i32 %v0_24aee, -28
  %v2_24aee = inttoptr i32 %v1_24aee to i32*
  %v3_24aee = load i32, i32* %v2_24aee, align 4
  store i32 %v3_24aee, i32* %eax.global-to-local, align 8
  %v1_24af4 = call i32 @unknown_42a40(i32 %v3_24aee)
  store i32 %v1_24af4, i32* %eax.global-to-local, align 8
  %v1_24af9 = load i32, i32* @ebp, align 4
  %v2_24af9 = add i32 %v1_24af9, -20
  %v3_24af9 = inttoptr i32 %v2_24af9 to i32*
  store i32 %v1_24af4, i32* %v3_24af9, align 4
  %v4_24af9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_24af9
}

define i32 @function_24afc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24afc:
  %v0_24afc = load i32, i32* @ebp, align 4
  %v1_24afc = add i32 %v0_24afc, -32
  %v1_24b03 = add i32 %v0_24afc, -20
  %v2_24b09 = call i32 @unknown_4c91f(i32 %v1_24b03, i32 %v1_24afc)
  %v1_24b0e = inttoptr i32 %v2_24b09 to i32*
  %v2_24b0e = load i32, i32* %v1_24b0e, align 4
  %v1_24b10 = load i32, i32* @ebx, align 4
  %v2_24b10 = add i32 %v1_24b10, %v2_24b0e
  %v1_24b12 = load i32, i32* @ebp, align 4
  %v2_24b12 = add i32 %v1_24b12, -16
  %v3_24b12 = inttoptr i32 %v2_24b12 to i32*
  store i32 %v2_24b10, i32* %v3_24b12, align 4
  %v0_24b15 = load i32, i32* @ebp, align 4
  %v1_24b15 = add i32 %v0_24b15, -28
  %v2_24b15 = inttoptr i32 %v1_24b15 to i32*
  %v3_24b15 = load i32, i32* %v2_24b15, align 4
  %v1_24b1b = call i32 @unknown_42a40(i32 %v3_24b15)
  %v1_24b20 = load i32, i32* @ebp, align 4
  %v2_24b20 = add i32 %v1_24b20, -16
  %v3_24b20 = inttoptr i32 %v2_24b20 to i32*
  %v4_24b20 = load i32, i32* %v3_24b20, align 4
  %tmp5 = icmp ugt i32 %v1_24b1b, %v4_24b20
  br i1 %tmp5, label %dec_label_pc_24b35, label %dec_label_pc_24b25

dec_label_pc_24b25:                               ; preds = %dec_label_pc_24afc
  %v1_24b25 = add i32 %v1_24b20, -28
  %v2_24b25 = inttoptr i32 %v1_24b25 to i32*
  %v3_24b25 = load i32, i32* %v2_24b25, align 4
  %v1_24b2b = call i32 @unknown_4eaf0(i32 %v3_24b25)
  %v1_24b30 = load i32, i32* @ebp, align 4
  %v2_24b30 = add i32 %v1_24b30, -16
  %v3_24b30 = inttoptr i32 %v2_24b30 to i32*
  %v4_24b30 = load i32, i32* %v3_24b30, align 4
  %v10_24b30 = icmp ult i32 %v1_24b2b, %v4_24b30
  %v1_24b33 = icmp eq i1 %v10_24b30, false
  br i1 %v1_24b33, label %dec_label_pc_24b45, label %dec_label_pc_24b35

dec_label_pc_24b35:                               ; preds = %dec_label_pc_24afc, %dec_label_pc_24b25
  %v0_24b35 = phi i32 [ %v1_24b20, %dec_label_pc_24afc ], [ %v1_24b30, %dec_label_pc_24b25 ]
  %v1_24b35 = add i32 %v0_24b35, -28
  %v2_24b35 = inttoptr i32 %v1_24b35 to i32*
  %v3_24b35 = load i32, i32* %v2_24b35, align 4
  %v1_24b3b = call i32 @unknown_4eaf0(i32 %v3_24b35)
  %v0_24b45.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_24b45

dec_label_pc_24b45:                               ; preds = %dec_label_pc_24b25, %dec_label_pc_24b35
  %v0_24b45 = phi i32 [ %v0_24b45.pre, %dec_label_pc_24b35 ], [ %v1_24b30, %dec_label_pc_24b25 ]
  %storemerge = phi i32 [ %v1_24b3b, %dec_label_pc_24b35 ], [ %v4_24b30, %dec_label_pc_24b25 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_24b45 = add i32 %v0_24b45, -12
  %v2_24b45 = inttoptr i32 %v1_24b45 to i32*
  %v3_24b45 = load i32, i32* %v2_24b45, align 4
  %v1_24b48 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24b48 = icmp eq i32 %v1_24b48, %v3_24b45
  br i1 %v3_24b48, label %bb, label %dec_label_pc_24b51

bb:                                               ; preds = %dec_label_pc_24b45
  %v1_24b4f = call i32 @function_24b56()
  br label %dec_label_pc_24b51

dec_label_pc_24b51:                               ; preds = %bb, %dec_label_pc_24b45
  %v2_24b4f = phi i32 [ %v1_24b4f, %bb ], [ %storemerge, %dec_label_pc_24b45 ]
  ret i32 %v2_24b4f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4eaf0, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_42a40, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_24b45, { 1, 0 }
  uselistorder label %dec_label_pc_24b35, { 1, 0 }
}

define i32 @function_24b56() local_unnamed_addr {
dec_label_pc_24b56:
  %v0_24b5b = load i32, i32* @eax, align 8
  ret i32 %v0_24b5b
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24b5c:
  %v2_24b86 = call i32 @unknown_49850(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24b9a

bb:                                               ; preds = %dec_label_pc_24b5c
  %v1_24b98 = call i32 @function_24b9f()
  br label %dec_label_pc_24b9a

dec_label_pc_24b9a:                               ; preds = %bb, %dec_label_pc_24b5c
  %v2_24b98 = phi i32 [ %v1_24b98, %bb ], [ %arg1, %dec_label_pc_24b5c ]
  ret i32 %v2_24b98

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_24b9f() local_unnamed_addr {
dec_label_pc_24b9f:
  %v0_24ba0 = load i32, i32* @eax, align 8
  ret i32 %v0_24ba0
}

define i32 @_ZN9__gnu_cxxmiIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24ba3:
  %v1_24bc7 = call i32 @unknown_494b7(i32 %arg1)
  %v1_24bcc = inttoptr i32 %v1_24bc7 to i32*
  %v2_24bcc = load i32, i32* %v1_24bcc, align 4
  %v1_24bd6 = call i32 @unknown_494b7(i32 %arg2)
  %v1_24bdb = inttoptr i32 %v1_24bd6 to i32*
  %v2_24bdb = load i32, i32* %v1_24bdb, align 4
  %v2_24bdf = sub i32 %v2_24bcc, %v2_24bdb
  %v2_24be3 = sdiv i32 %v2_24bdf, 8
  %v3_24be6 = mul i32 %v2_24be3, -1431655765
  store i32 %v3_24be6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24bf8

bb:                                               ; preds = %dec_label_pc_24ba3
  %v1_24bf6 = call i32 @function_24bfd()
  br label %dec_label_pc_24bf8

dec_label_pc_24bf8:                               ; preds = %bb, %dec_label_pc_24ba3
  %v2_24bf6 = phi i32 [ %v1_24bf6, %bb ], [ %v3_24be6, %dec_label_pc_24ba3 ]
  ret i32 %v2_24bf6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_494b7, { 1, 0 }
}

define i32 @function_24bfd() local_unnamed_addr {
dec_label_pc_24bfd:
  %v0_24c02 = load i32, i32* @eax, align 8
  ret i32 %v0_24c02
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c04:
  %v10_24c21 = icmp eq i32 %arg2, 0
  br i1 %v10_24c21, label %dec_label_pc_24c48, label %dec_label_pc_24c27

dec_label_pc_24c27:                               ; preds = %dec_label_pc_24c04
  %v3_24c3c = call i32 @unknown_4eca8(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_24c48

dec_label_pc_24c48:                               ; preds = %dec_label_pc_24c04, %dec_label_pc_24c27
  %storemerge = phi i32 [ %v3_24c3c, %dec_label_pc_24c27 ], [ 0, %dec_label_pc_24c04 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24c54

bb:                                               ; preds = %dec_label_pc_24c48
  %v1_24c52 = call i32 @function_24c59()
  br label %dec_label_pc_24c54

dec_label_pc_24c54:                               ; preds = %bb, %dec_label_pc_24c48
  %v2_24c52 = phi i32 [ %v1_24c52, %bb ], [ %storemerge, %dec_label_pc_24c48 ]
  ret i32 %v2_24c52

; uselistorder directives
  uselistorder label %dec_label_pc_24c48, { 1, 0 }
}

define i32 @function_24c59() local_unnamed_addr {
dec_label_pc_24c59:
  %v0_24c5a = load i32, i32* @eax, align 8
  ret i32 %v0_24c5a
}

define i32 @_ZSt22__uninitialized_move_aIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_SaIS4_EET0_T_S8_S7_RT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24c5b:
  ret i32 %arg3
}

define i32 @function_24c70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c70:
  %v0_24c70 = load i32, i32* @eax, align 8
  %v1_24c70 = load i32, i32* @ebp, align 4
  %v2_24c70 = add i32 %v1_24c70, -36
  %v3_24c70 = inttoptr i32 %v2_24c70 to i32*
  store i32 %v0_24c70, i32* %v3_24c70, align 4
  %v0_24c73 = load i32, i32* @ebp, align 4
  %v1_24c73 = add i32 %v0_24c73, 20
  %v2_24c73 = inttoptr i32 %v1_24c73 to i32*
  %v3_24c73 = load i32, i32* %v2_24c73, align 4
  %v2_24c76 = add i32 %v0_24c73, -40
  %v3_24c76 = inttoptr i32 %v2_24c76 to i32*
  store i32 %v3_24c73, i32* %v3_24c76, align 4
  %v0_24c79 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_24c7f = load i32, i32* @ebp, align 4
  %v2_24c7f = add i32 %v1_24c7f, -12
  %v3_24c7f = inttoptr i32 %v2_24c7f to i32*
  store i32 %v0_24c79, i32* %v3_24c7f, align 4
  %v0_24c84 = load i32, i32* @ebp, align 4
  %v1_24c84 = add i32 %v0_24c84, -40
  %v2_24c84 = inttoptr i32 %v1_24c84 to i32*
  %v3_24c84 = load i32, i32* %v2_24c84, align 4
  %v1_24c8b = add i32 %v0_24c84, -36
  %v2_24c8b = inttoptr i32 %v1_24c8b to i32*
  %v3_24c8b = load i32, i32* %v2_24c8b, align 4
  %v1_24c92 = add i32 %v0_24c84, -32
  %v2_24c92 = inttoptr i32 %v1_24c92 to i32*
  %v3_24c92 = load i32, i32* %v2_24c92, align 4
  %v1_24c99 = add i32 %v0_24c84, -28
  %v2_24c99 = inttoptr i32 %v1_24c99 to i32*
  %v3_24c99 = load i32, i32* %v2_24c99, align 4
  %v4_24c9f = call i32 @unknown_4ed63(i32 %v3_24c99, i32 %v3_24c92, i32 %v3_24c8b, i32 %v3_24c84)
  store i32 %v4_24c9f, i32* @eax, align 8
  %v0_24ca4 = load i32, i32* @ebp, align 4
  %v1_24ca4 = add i32 %v0_24ca4, -12
  %v2_24ca4 = inttoptr i32 %v1_24ca4 to i32*
  %v3_24ca4 = load i32, i32* %v2_24ca4, align 4
  %v1_24ca7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24ca7 = icmp eq i32 %v1_24ca7, %v3_24ca4
  br i1 %v3_24ca7, label %bb, label %dec_label_pc_24cb0

bb:                                               ; preds = %dec_label_pc_24c70
  %v1_24cae = call i32 @function_24cb5()
  br label %dec_label_pc_24cb0

dec_label_pc_24cb0:                               ; preds = %bb, %dec_label_pc_24c70
  %v2_24cae = phi i32 [ %v1_24cae, %bb ], [ %v4_24c9f, %dec_label_pc_24c70 ]
  ret i32 %v2_24cae

; uselistorder directives
  uselistorder i32 %v0_24c84, { 1, 0, 2, 3 }
}

define i32 @function_24cb5() local_unnamed_addr {
dec_label_pc_24cb5:
  %v0_24cb6 = load i32, i32* @eax, align 8
  ret i32 %v0_24cb6
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE7destroyEPS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24cb8:
  %v1_24cdb = call i32 @function_387e6(i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24cec

bb:                                               ; preds = %dec_label_pc_24cb8
  %v1_24cea = call i32 @function_24cf1()
  br label %dec_label_pc_24cec

dec_label_pc_24cec:                               ; preds = %bb, %dec_label_pc_24cb8
  %v2_24cea = phi i32 [ %v1_24cea, %bb ], [ 0, %dec_label_pc_24cb8 ]
  ret i32 %v2_24cea
}

define i32 @function_24cf1() local_unnamed_addr {
dec_label_pc_24cf1:
  %v0_24cf2 = load i32, i32* @eax, align 8
  ret i32 %v0_24cf2
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24cf4:
  %v1_24d14 = inttoptr i32 %arg2 to i32*
  %v2_24d14 = load i32, i32* %v1_24d14, align 4
  store i32 %v2_24d14, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24d27

bb:                                               ; preds = %dec_label_pc_24cf4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_24d25 = call i32 @function_24d2c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_24d27

dec_label_pc_24d27:                               ; preds = %bb, %dec_label_pc_24cf4
  %v4_24d25 = phi i32 [ %v3_24d25, %bb ], [ 0, %dec_label_pc_24cf4 ]
  ret i32 %v4_24d25

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_24d2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24d2c:
  %v0_24d2d = load i32, i32* @eax, align 8
  ret i32 %v0_24d2d
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKSsEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_24d2e:
  %v1_24d5b = add i32 %arg1, 4
  %v1_24d61 = call i32 @unknown_47238(i32 %v1_24d5b)
  %v2_24d70 = call i32 @unknown_4ee8b(i32 %v1_24d61, i32 %arg2)
  %v2_24d7f = call i32 @unknown_49300(i32 %arg1, i32 %v2_24d70)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24d90

bb:                                               ; preds = %dec_label_pc_24d2e
  %v1_24d8e = call i32 @function_24d95()
  br label %dec_label_pc_24d90

dec_label_pc_24d90:                               ; preds = %bb, %dec_label_pc_24d2e
  %v2_24d8e = phi i32 [ %v1_24d8e, %bb ], [ 0, %dec_label_pc_24d2e ]
  ret i32 %v2_24d8e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24d95() local_unnamed_addr {
dec_label_pc_24d95:
  %v0_24d96 = load i32, i32* @eax, align 8
  ret i32 %v0_24d96
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIdEEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_24d98:
  %v1_24dc5 = add i32 %arg1, 4
  %v1_24dcb = call i32 @unknown_472a2(i32 %v1_24dc5)
  %v2_24dda = call i32 @unknown_4ef75(i32 %v1_24dcb, i32 %arg2)
  ret i32 %v2_24dda
}

define i32 @function_24de4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24de4:
  %v0_24de4 = load i32, i32* @ebp, align 4
  %v1_24de4 = add i32 %v0_24de4, 1
  store i32 %v1_24de4, i32* @ebp, align 4
  %v0_24de9 = call i32 @unknown_4936a()
  %v0_24dee = load i32, i32* @ebp, align 4
  %v1_24dee = add i32 %v0_24dee, -12
  %v2_24dee = inttoptr i32 %v1_24dee to i32*
  %v3_24dee = load i32, i32* %v2_24dee, align 4
  %v1_24df1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24df1 = xor i32 %v1_24df1, %v3_24dee
  %v3_24df1 = icmp eq i32 %v2_24df1, 0
  store i32 %v2_24df1, i32* @eax, align 8
  br i1 %v3_24df1, label %bb, label %dec_label_pc_24dfa

bb:                                               ; preds = %dec_label_pc_24de4
  %v1_24df8 = call i32 @function_24dff()
  br label %dec_label_pc_24dfa

dec_label_pc_24dfa:                               ; preds = %bb, %dec_label_pc_24de4
  %v2_24df8 = phi i32 [ %v1_24df8, %bb ], [ %v2_24df1, %dec_label_pc_24de4 ]
  ret i32 %v2_24df8
}

define i32 @function_24dff() local_unnamed_addr {
dec_label_pc_24dff:
  %v0_24e00 = load i32, i32* @eax, align 8
  ret i32 %v0_24e00
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKS9_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_24e02:
  %v1_24e2f = add i32 %arg1, 4
  %v1_24e35 = call i32 @unknown_4730c(i32 %v1_24e2f)
  %v2_24e44 = call i32 @unknown_4f032(i32 %v1_24e35, i32 %arg2)
  %v2_24e53 = call i32 @unknown_493d4(i32 %arg1, i32 %v2_24e44)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24e64

bb:                                               ; preds = %dec_label_pc_24e02
  %v1_24e62 = call i32 @function_24e69()
  br label %dec_label_pc_24e64

dec_label_pc_24e64:                               ; preds = %bb, %dec_label_pc_24e02
  %v2_24e62 = phi i32 [ %v1_24e62, %bb ], [ 0, %dec_label_pc_24e02 ]
  ret i32 %v2_24e62

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24e69() local_unnamed_addr {
dec_label_pc_24e69:
  %v0_24e6a = load i32, i32* @eax, align 8
  ret i32 %v0_24e6a
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKP5CNodeSt6vectorIS2_SaIS2_EEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24e6c:
  ret i32 %arg2
}

define i32 @function_24ea4(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ea4:
  %v0_24ea5 = load i32, i32* @eax, align 8
  ret i32 %v0_24ea5
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKP5CNodeSt6vectorIS2_SaIS2_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ea6:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24ecc

bb:                                               ; preds = %dec_label_pc_24ea6
  %v2_24eca = call i32 @function_24ed1(i32 %arg1)
  br label %dec_label_pc_24ecc

dec_label_pc_24ecc:                               ; preds = %bb, %dec_label_pc_24ea6
  %v3_24eca = phi i32 [ %v2_24eca, %bb ], [ %arg1, %dec_label_pc_24ea6 ]
  ret i32 %v3_24eca
}

define i32 @function_24ed1(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ed1:
  %v0_24ed2 = load i32, i32* @eax, align 8
  ret i32 %v0_24ed2
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1ERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24ed4:
  ret i32 0
}

define i32 @function_24ef2(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ef2:
  %v0_24ef2 = load i32, i32* @ebp, align 4
  %v1_24ef2 = add i32 %v0_24ef2, 1
  store i32 %v1_24ef2, i32* @ebp, align 4
  %v1_24ef8 = add i32 %v0_24ef2, -27
  %v2_24ef8 = inttoptr i32 %v1_24ef8 to i32*
  %v3_24ef8 = load i32, i32* %v2_24ef8, align 4
  %v1_24efe = call i32 @unknown_4f184(i32 %v3_24ef8)
  %v0_24f03 = load i32, i32* @ebp, align 4
  %v1_24f03 = add i32 %v0_24f03, -28
  %v2_24f03 = inttoptr i32 %v1_24f03 to i32*
  %v3_24f03 = load i32, i32* %v2_24f03, align 4
  %v1_24f06 = inttoptr i32 %v3_24f03 to i32*
  store i32 0, i32* %v1_24f06, align 4
  %v0_24f0c = load i32, i32* @ebp, align 4
  %v1_24f0c = add i32 %v0_24f0c, -28
  %v2_24f0c = inttoptr i32 %v1_24f0c to i32*
  %v3_24f0c = load i32, i32* %v2_24f0c, align 4
  %v1_24f0f = add i32 %v3_24f0c, 4
  %v2_24f0f = inttoptr i32 %v1_24f0f to i32*
  store i32 0, i32* %v2_24f0f, align 4
  %v0_24f16 = load i32, i32* @ebp, align 4
  %v1_24f16 = add i32 %v0_24f16, -28
  %v2_24f16 = inttoptr i32 %v1_24f16 to i32*
  %v3_24f16 = load i32, i32* %v2_24f16, align 4
  %v1_24f19 = add i32 %v3_24f16, 8
  %v2_24f19 = inttoptr i32 %v1_24f19 to i32*
  store i32 0, i32* %v2_24f19, align 4
  %v0_24f20 = load i32, i32* @ebp, align 4
  %v1_24f20 = add i32 %v0_24f20, -12
  %v2_24f20 = inttoptr i32 %v1_24f20 to i32*
  %v3_24f20 = load i32, i32* %v2_24f20, align 4
  %v1_24f23 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24f23 = xor i32 %v1_24f23, %v3_24f20
  %v3_24f23 = icmp eq i32 %v2_24f23, 0
  store i32 %v2_24f23, i32* @eax, align 8
  br i1 %v3_24f23, label %bb, label %dec_label_pc_24f2c

bb:                                               ; preds = %dec_label_pc_24ef2
  %v1_24f2a = call i32 @function_24f31()
  br label %dec_label_pc_24f2c

dec_label_pc_24f2c:                               ; preds = %bb, %dec_label_pc_24ef2
  %v3_24f2a = phi i32 [ %v1_24f2a, %bb ], [ %v2_24f23, %dec_label_pc_24ef2 ]
  ret i32 %v3_24f2a
}

define i32 @function_24f31() local_unnamed_addr {
dec_label_pc_24f31:
  %v0_24f32 = load i32, i32* @eax, align 8
  ret i32 %v0_24f32
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24f34:
  %v1_24f54 = inttoptr i32 %arg2 to i32*
  %v2_24f54 = load i32, i32* %v1_24f54, align 4
  store i32 %v2_24f54, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24f67

bb:                                               ; preds = %dec_label_pc_24f34
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_24f65 = call i32 @function_24f6c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_24f67

dec_label_pc_24f67:                               ; preds = %bb, %dec_label_pc_24f34
  %v4_24f65 = phi i32 [ %v3_24f65, %bb ], [ 0, %dec_label_pc_24f34 ]
  ret i32 %v4_24f65

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_24f6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24f6c:
  %v0_24f6d = load i32, i32* @eax, align 8
  ret i32 %v0_24f6d
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_ET0_T_SF_SE_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24f6e:
  %v3_24fa5 = call i32 @unknown_4f260(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_24fa5, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_24fb6

bb:                                               ; preds = %dec_label_pc_24f6e
  %v1_24fb4 = call i32 @function_24fbb()
  br label %dec_label_pc_24fb6

dec_label_pc_24fb6:                               ; preds = %bb, %dec_label_pc_24f6e
  %v2_24fb4 = phi i32 [ %v1_24fb4, %bb ], [ %v3_24fa5, %dec_label_pc_24f6e ]
  ret i32 %v2_24fb4
}

define i32 @function_24fbb() local_unnamed_addr {
dec_label_pc_24fbb:
  %v0_24fbc = load i32, i32* @eax, align 8
  ret i32 %v0_24fbc
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE13_Rb_tree_implISB_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24fbe:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_24fdb = call i32 @unknown_4f372(i32 %arg1)
  %v1_24fe3 = add i32 %arg1, 4
  %v2_24fe3 = inttoptr i32 %v1_24fe3 to i32*
  store i32 0, i32* %v2_24fe3, align 4
  %v1_24fed = add i32 %arg1, 8
  %v2_24fed = inttoptr i32 %v1_24fed to i32*
  store i32 0, i32* %v2_24fed, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_24ff7 = add i32 %arg1, 12
  %v2_24ff7 = inttoptr i32 %v1_24ff7 to i32*
  store i32 0, i32* %v2_24ff7, align 4
  %v3_24ff7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_24ff7
}

define i32 @function_25000(i32 %arg1) local_unnamed_addr {
dec_label_pc_25000:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_25002 = load i32, i32* @eax, align 8
  %v1_25002 = add i32 %v0_25002, 1
  %v11_25002 = trunc i32 %v1_25002 to i8
  store i32 %v1_25002, i32* %eax.global-to-local, align 8
  %v1_25003 = inttoptr i32 %v1_25002 to i8*
  %v2_25003 = load i8, i8* %v1_25003, align 1
  %v5_25003 = load i1, i1* @cf, align 1
  %v6_25003 = zext i1 %v5_25003 to i8
  %v7_25003 = add i8 %v2_25003, %v11_25002
  %v8_25003 = add i8 %v6_25003, %v7_25003
  %v26_25003 = icmp ule i8 %v8_25003, %v2_25003
  %v27_25003 = icmp ult i8 %v7_25003, %v2_25003
  %v28_25003 = select i1 %v5_25003, i1 %v26_25003, i1 %v27_25003
  store i1 %v28_25003, i1* %cf.global-to-local, align 1
  store i8 %v8_25003, i8* %v1_25003, align 1
  %v0_25005 = load i32, i32* %eax.global-to-local, align 8
  %v1_25005 = inttoptr i32 %v0_25005 to i8*
  %v2_25005 = load i8, i8* %v1_25005, align 1
  %v4_25005 = trunc i32 %v0_25005 to i8
  %v5_25005 = add i8 %v2_25005, %v4_25005
  %v10_25005 = icmp ult i8 %v5_25005, %v2_25005
  store i1 %v10_25005, i1* %cf.global-to-local, align 1
  store i8 %v5_25005, i8* %v1_25005, align 1
  %v0_25007 = load i32, i32* @ebx, align 4
  %v1_25007 = add i32 %v0_25007, 1086841925
  %v2_25007 = inttoptr i32 %v1_25007 to i8*
  %v3_25007 = load i8, i8* %v2_25007, align 1
  %v4_25007 = load i32, i32* @ecx, align 8
  %v5_25007 = trunc i32 %v4_25007 to i8
  %v6_25007 = add i8 %v5_25007, %v3_25007
  %v11_25007 = icmp ult i8 %v6_25007, %v3_25007
  store i1 %v11_25007, i1* %cf.global-to-local, align 1
  store i8 %v6_25007, i8* %v2_25007, align 1
  %v0_2500d = load i32, i32* %eax.global-to-local, align 8
  %v1_2500d = trunc i32 %v0_2500d to i8
  %v2_2500d = load i1, i1* %cf.global-to-local, align 1
  %v3_2500d = zext i1 %v2_2500d to i8
  %v4_2500d = add i8 %v3_2500d, %v1_2500d
  %v19_2500d = icmp ule i8 %v4_2500d, %v1_2500d
  %v21_2500d = icmp eq i1 %v2_2500d, %v19_2500d
  store i1 %v21_2500d, i1* %cf.global-to-local, align 1
  %v22_2500d = zext i8 %v4_2500d to i32
  %v24_2500d = and i32 %v0_2500d, -256
  %v25_2500d = or i32 %v22_2500d, %v24_2500d
  store i32 %v25_2500d, i32* %eax.global-to-local, align 8
  %v1_2500f = inttoptr i32 %v25_2500d to i8*
  %v2_2500f = load i8, i8* %v1_2500f, align 1
  %v5_2500f = add i8 %v2_2500f, %v4_2500d
  %v10_2500f = icmp ult i8 %v5_2500f, %v2_2500f
  store i1 %v10_2500f, i1* %cf.global-to-local, align 1
  store i8 %v5_2500f, i8* %v1_2500f, align 1
  %v0_25011 = load i32, i32* @ebx, align 4
  %v1_25011 = add i32 %v0_25011, 76145733
  %v2_25011 = inttoptr i32 %v1_25011 to i8*
  %v3_25011 = load i8, i8* %v2_25011, align 1
  %v4_25011 = load i32, i32* @ecx, align 8
  %v5_25011 = trunc i32 %v4_25011 to i8
  %v6_25011 = add i8 %v5_25011, %v3_25011
  store i8 %v6_25011, i8* %v2_25011, align 1
  %v0_25017 = load i32, i32* %eax.global-to-local, align 8
  %v11_25017 = and i32 %v0_25017, -24
  store i32 %v11_25017, i32* %eax.global-to-local, align 8
  %v1_25020 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25020 = xor i32 %v1_25020, %v11_25017
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_25020 = icmp eq i32 %v2_25020, 0
  store i32 %v2_25020, i32* @eax, align 8
  br i1 %v3_25020, label %bb, label %dec_label_pc_25029

bb:                                               ; preds = %dec_label_pc_25000
  %v1_25027 = call i32 @function_2502e()
  store i32 %v1_25027, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25029

dec_label_pc_25029:                               ; preds = %bb, %dec_label_pc_25000
  %v2_25027 = phi i32 [ %v1_25027, %bb ], [ %v2_25020, %dec_label_pc_25000 ]
  ret i32 %v2_25027

; uselistorder directives
  uselistorder i8 %v2_2500f, { 1, 0 }
  uselistorder i8 %v4_2500d, { 0, 2, 1 }
  uselistorder i8 %v1_2500d, { 1, 0 }
  uselistorder i8 %v3_25007, { 1, 0 }
  uselistorder i8 %v8_25003, { 1, 0 }
  uselistorder i8 %v7_25003, { 1, 0 }
  uselistorder i8 %v2_25003, { 1, 2, 0 }
}

define i32 @function_2502e() local_unnamed_addr {
dec_label_pc_2502e:
  %v0_2502f = load i32, i32* @eax, align 8
  ret i32 %v0_2502f
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256S2_IP6CBlock7CScriptEEEED1Ev() local_unnamed_addr {
dec_label_pc_25030:
  %eax.global-to-local = alloca i32, align 4
  %v2_25031 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_25031
}

define i32 @function_25034(i32 %arg1) local_unnamed_addr {
dec_label_pc_25034:
  %v0_25035 = load i32, i32* @ebx, align 4
  %v1_25035 = add i32 %v0_25035, 1166608453
  %v2_25035 = inttoptr i32 %v1_25035 to i8*
  %v3_25035 = load i8, i8* %v2_25035, align 1
  %v4_25035 = load i32, i32* @ecx, align 8
  %v5_25035 = trunc i32 %v4_25035 to i8
  %v6_25035 = sub i8 %v3_25035, %v5_25035
  store i8 %v6_25035, i8* %v2_25035, align 1
  %v0_2503d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2503d
}

define i32 @function_25042(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25042:
  %v0_25042 = load i32, i32* @eax, align 8
  %v1_25042 = load i32, i32* @ebp, align 4
  %v2_25042 = add i32 %v1_25042, -12
  %v3_25042 = inttoptr i32 %v2_25042 to i32*
  store i32 %v0_25042, i32* %v3_25042, align 4
  %v0_25047 = load i32, i32* @ebp, align 4
  %v1_25047 = add i32 %v0_25047, -12
  %v2_25047 = inttoptr i32 %v1_25047 to i32*
  %v3_25047 = load i32, i32* %v2_25047, align 4
  %v1_2504a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2504a = xor i32 %v1_2504a, %v3_25047
  %v3_2504a = icmp eq i32 %v2_2504a, 0
  store i32 %v2_2504a, i32* @eax, align 8
  br i1 %v3_2504a, label %bb, label %dec_label_pc_25053

bb:                                               ; preds = %dec_label_pc_25042
  %v1_25051 = call i32 @function_25058()
  br label %dec_label_pc_25053

dec_label_pc_25053:                               ; preds = %bb, %dec_label_pc_25042
  %v2_25051 = phi i32 [ %v1_25051, %bb ], [ %v2_2504a, %dec_label_pc_25042 ]
  ret i32 %v2_25051
}

define i32 @function_25058() local_unnamed_addr {
dec_label_pc_25058:
  %v0_25059 = load i32, i32* @eax, align 8
  ret i32 %v0_25059
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2505a:
  %v1_25074 = add i32 %arg1, 12
  %v2_25074 = inttoptr i32 %v1_25074 to i32*
  %v3_25074 = load i32, i32* %v2_25074, align 4
  store i32 %v3_25074, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25083

bb:                                               ; preds = %dec_label_pc_2505a
  %v2_25081 = call i32 @function_25088(i32 %arg1)
  br label %dec_label_pc_25083

dec_label_pc_25083:                               ; preds = %bb, %dec_label_pc_2505a
  %v3_25081 = phi i32 [ %v2_25081, %bb ], [ %v3_25074, %dec_label_pc_2505a ]
  ret i32 %v3_25081
}

define i32 @function_25088(i32 %arg1) local_unnamed_addr {
dec_label_pc_25088:
  %v0_25089 = load i32, i32* @eax, align 8
  ret i32 %v0_25089
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2508a:
  %v1_250a4 = add i32 %arg1, 8
  %v2_250a4 = inttoptr i32 %v1_250a4 to i32*
  %v3_250a4 = load i32, i32* %v2_250a4, align 4
  store i32 %v3_250a4, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_250b3

bb:                                               ; preds = %dec_label_pc_2508a
  %v2_250b1 = call i32 @function_250b8(i32 %arg1)
  br label %dec_label_pc_250b3

dec_label_pc_250b3:                               ; preds = %bb, %dec_label_pc_2508a
  %v3_250b1 = phi i32 [ %v2_250b1, %bb ], [ %v3_250a4, %dec_label_pc_2508a ]
  ret i32 %v3_250b1
}

define i32 @function_250b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_250b8:
  %v0_250b9 = load i32, i32* @eax, align 8
  ret i32 %v0_250b9
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_250ba:
  ret i32 %arg1
}

define i32 @function_250c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_250c6:
  %ebx.global-to-local = alloca i32, align 4
  %v0_250c8 = load i32, i32* @ebp, align 4
  %v0_250c9 = load i32, i32* @eax, align 8
  %v11_250c9 = or i32 %v0_250c9, 137
  store i32 %v11_250c9, i32* @eax, align 8
  %v1_250cb = add i32 %v0_250c8, 2
  %v9_250cb = icmp eq i32 %v1_250cb, 0
  store i32 %v1_250cb, i32* @ebp, align 4
  %v0_250cc = load i32, i32* @ecx, align 8
  %v2_250cc = icmp eq i32 %v0_250cc, 1
  %v4_250cc = or i1 %v9_250cb, %v2_250cc
  br i1 %v4_250cc, label %dec_label_pc_250ce, label %dec_label_pc_25135

dec_label_pc_250ce:                               ; preds = %dec_label_pc_250c6
  %v0_250ce = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_250d3 = add i32 %v0_250c8, -10
  %v3_250d3 = inttoptr i32 %v2_250d3 to i32*
  store i32 %v0_250ce, i32* %v3_250d3, align 4
  %v0_250d8 = load i32, i32* @ebp, align 4
  %v1_250d8 = add i32 %v0_250d8, -32
  %v2_250d8 = inttoptr i32 %v1_250d8 to i32*
  %v3_250d8 = load i32, i32* %v2_250d8, align 4
  %v1_250db = add i32 %v3_250d8, 16
  %v1_250e1 = call i32 @unknown_4f57f(i32 %v1_250db)
  store i32 %v1_250e1, i32* %ebx.global-to-local, align 4
  %v0_250e8 = load i32, i32* @ebp, align 4
  %v1_250e8 = add i32 %v0_250e8, -13
  %v1_250eb = add i32 %v0_250e8, -28
  %v2_250eb = inttoptr i32 %v1_250eb to i32*
  %v3_250eb = load i32, i32* %v2_250eb, align 4
  store i32 %v3_250eb, i32* @edx, align 4
  %v2_250f5 = call i32 @unknown_4f4fa(i32 %v1_250e8, i32 %v3_250eb)
  %v0_250fd = load i32, i32* %ebx.global-to-local, align 4
  %v0_25101 = load i32, i32* @ebp, align 4
  %v1_25101 = add i32 %v0_25101, -13
  %v2_25107 = call i32 @unknown_4f5ac(i32 %v1_25101, i32 %v0_250fd)
  %v0_2510c = load i32, i32* @ebp, align 4
  %v1_2510c = add i32 %v0_2510c, -13
  %v1_25112 = call i32 @unknown_4f54a(i32 %v1_2510c)
  %v0_25117 = load i32, i32* @ebp, align 4
  %v1_25117 = add i32 %v0_25117, -32
  %v2_25117 = inttoptr i32 %v1_25117 to i32*
  %v3_25117 = load i32, i32* %v2_25117, align 4
  %v1_2511e = add i32 %v0_25117, -28
  %v2_2511e = inttoptr i32 %v1_2511e to i32*
  %v3_2511e = load i32, i32* %v2_2511e, align 4
  %v2_25124 = call i32 @unknown_4f5e8(i32 %v3_2511e, i32 %v3_25117)
  %v0_25129 = load i32, i32* @ebp, align 4
  %v1_25129 = add i32 %v0_25129, -12
  %v2_25129 = inttoptr i32 %v1_25129 to i32*
  %v3_25129 = load i32, i32* %v2_25129, align 4
  %v1_2512c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2512c = xor i32 %v1_2512c, %v3_25129
  %v3_2512c = icmp eq i32 %v2_2512c, 0
  store i32 %v2_2512c, i32* @eax, align 8
  br i1 %v3_2512c, label %bb, label %dec_label_pc_25135

bb:                                               ; preds = %dec_label_pc_250ce
  %v1_25133 = call i32 @function_25153()
  store i32 %v1_25133, i32* @eax, align 8
  br label %dec_label_pc_25135

dec_label_pc_25135:                               ; preds = %dec_label_pc_250c6, %dec_label_pc_250ce, %bb
  %v0_25135 = call i32 @function_2514e()
  ret i32 %v0_25135

; uselistorder directives
  uselistorder label %dec_label_pc_25135, { 2, 1, 0 }
}

define i32 @function_25138() local_unnamed_addr {
dec_label_pc_25138:
  %eax.global-to-local = alloca i32, align 4
  %v0_25138 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25138
}

define i32 @function_2514e() local_unnamed_addr {
dec_label_pc_2514e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25153() local_unnamed_addr {
dec_label_pc_25153:
  %v0_25157 = load i32, i32* @eax, align 8
  ret i32 %v0_25157
}

define i32 @function_25154(i32 %arg1) local_unnamed_addr {
dec_label_pc_25154:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt12_Vector_baseIP14CBlockTemplateSaIS1_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_25158:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_25175 = call i32 @unknown_4f6d0(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_25186 = add i32 %tmp100, 4
  %v2_25186 = inttoptr i32 %v1_25186 to i32*
  store i32 0, i32* %v2_25186, align 4
  %v1_25190 = add i32 %tmp100, 8
  %v2_25190 = inttoptr i32 %v1_25190 to i32*
  store i32 0, i32* %v2_25190, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_251a3

bb:                                               ; preds = %dec_label_pc_25158
  %v1_251a1 = call i32 @function_251a8()
  br label %dec_label_pc_251a3

dec_label_pc_251a3:                               ; preds = %bb, %dec_label_pc_25158
  %v2_251a1 = phi i32 [ %v1_251a1, %bb ], [ 0, %dec_label_pc_25158 ]
  ret i32 %v2_251a1

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_251a8() local_unnamed_addr {
dec_label_pc_251a8:
  %v0_251a9 = load i32, i32* @eax, align 8
  ret i32 %v0_251a9
}

define i32 @_ZNSaIP14CBlockTemplateED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_251aa:
  %v1_251c7 = call i32 @unknown_4f758(i32 %arg1)
  ret i32 %v1_251c7
}

define i32 @function_251cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_251cc:
  %v0_251cc = load i32, i32* @ebp, align 4
  %v1_251cc = add i32 %v0_251cc, -12
  %v2_251cc = inttoptr i32 %v1_251cc to i32*
  %v3_251cc = load i32, i32* %v2_251cc, align 4
  %v1_251cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_251cf = xor i32 %v1_251cf, %v3_251cc
  %v3_251cf = icmp eq i32 %v2_251cf, 0
  store i32 %v2_251cf, i32* @eax, align 8
  br i1 %v3_251cf, label %bb, label %dec_label_pc_251d8

bb:                                               ; preds = %dec_label_pc_251cc
  %v1_251d6 = call i32 @function_251dd()
  br label %dec_label_pc_251d8

dec_label_pc_251d8:                               ; preds = %bb, %dec_label_pc_251cc
  %v2_251d6 = phi i32 [ %v1_251d6, %bb ], [ %v2_251cf, %dec_label_pc_251cc ]
  ret i32 %v2_251d6
}

define i32 @function_251dd() local_unnamed_addr {
dec_label_pc_251dd:
  %v0_251de = load i32, i32* @eax, align 8
  ret i32 %v0_251de
}

define i32 @_ZNSt12_Vector_baseIP14CBlockTemplateSaIS1_EE13_M_deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_251e0:
  %v10_25203 = icmp eq i32 %arg2, 0
  br i1 %v10_25203, label %dec_label_pc_25222, label %dec_label_pc_25209

dec_label_pc_25209:                               ; preds = %dec_label_pc_251e0
  %v3_2521d = call i32 @unknown_4f7b8(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_25222

dec_label_pc_25222:                               ; preds = %dec_label_pc_25209, %dec_label_pc_251e0
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2522e

bb:                                               ; preds = %dec_label_pc_25222
  %v1_2522c = call i32 @function_25233()
  br label %dec_label_pc_2522e

dec_label_pc_2522e:                               ; preds = %bb, %dec_label_pc_25222
  %v2_2522c = phi i32 [ %v1_2522c, %bb ], [ 0, %dec_label_pc_25222 ]
  ret i32 %v2_2522c
}

define i32 @function_25233() local_unnamed_addr {
dec_label_pc_25233:
  %v0_25234 = load i32, i32* @eax, align 8
  ret i32 %v0_25234
}

define i32 @_ZSt8_DestroyIPP14CBlockTemplateEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25235:
  %v2_2525f = call i32 @unknown_4f84e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25270

bb:                                               ; preds = %dec_label_pc_25235
  %v1_2526e = call i32 @function_25275()
  br label %dec_label_pc_25270

dec_label_pc_25270:                               ; preds = %bb, %dec_label_pc_25235
  %v2_2526e = phi i32 [ %v1_2526e, %bb ], [ 0, %dec_label_pc_25235 ]
  ret i32 %v2_2526e
}

define i32 @function_25275() local_unnamed_addr {
dec_label_pc_25275:
  %v0_25276 = load i32, i32* @eax, align 8
  ret i32 %v0_25276
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25278:
  %v1_25292 = add i32 %arg1, 4
  store i32 %v1_25292, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_252a1

bb:                                               ; preds = %dec_label_pc_25278
  %v2_2529f = call i32 @function_252a6(i32 %arg1)
  br label %dec_label_pc_252a1

dec_label_pc_252a1:                               ; preds = %bb, %dec_label_pc_25278
  %v3_2529f = phi i32 [ %v2_2529f, %bb ], [ %v1_25292, %dec_label_pc_25278 ]
  ret i32 %v3_2529f
}

define i32 @function_252a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_252a6:
  %v0_252a7 = load i32, i32* @eax, align 8
  ret i32 %v0_252a7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_252a8:
  %v1_252c2 = add i32 %arg1, 12
  store i32 %v1_252c2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_252d1

bb:                                               ; preds = %dec_label_pc_252a8
  %v2_252cf = call i32 @function_252d6(i32 %arg1)
  br label %dec_label_pc_252d1

dec_label_pc_252d1:                               ; preds = %bb, %dec_label_pc_252a8
  %v3_252cf = phi i32 [ %v2_252cf, %bb ], [ %v1_252c2, %dec_label_pc_252a8 ]
  ret i32 %v3_252cf
}

define i32 @function_252d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_252d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_252d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_252d6:
  %v0_252d7 = load i32, i32* @eax, align 8
  ret i32 %v0_252d7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_252d8:
  %v1_252f2 = add i32 %arg1, 8
  store i32 %v1_252f2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25301

bb:                                               ; preds = %dec_label_pc_252d8
  %v2_252ff = call i32 @function_25306(i32 %arg1)
  br label %dec_label_pc_25301

dec_label_pc_25301:                               ; preds = %bb, %dec_label_pc_252d8
  %v3_252ff = phi i32 [ %v2_252ff, %bb ], [ %v1_252f2, %dec_label_pc_252d8 ]
  ret i32 %v3_252ff
}

define i32 @function_25306(i32 %arg1) local_unnamed_addr {
dec_label_pc_25306:
  %v0_25307 = load i32, i32* @eax, align 8
  ret i32 %v0_25307
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE12_M_rightmostEv() local_unnamed_addr {
dec_label_pc_25308:
  %eax.global-to-local = alloca i32, align 4
  %v17_2530b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2530b
}

define i32 @function_25310(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25310:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_25310 = load i32, i32* @ecx, align 8
  %v1_25310 = add i32 %v0_25310, -1587157947
  %v2_25310 = inttoptr i32 %v1_25310 to i8*
  %v3_25310 = load i8, i8* %v2_25310, align 1
  %v5_25310 = trunc i32 %v0_25310 to i8
  %v6_25310 = or i8 %v3_25310, %v5_25310
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_25310, i8* %v2_25310, align 1
  %v0_25316 = load i32, i32* @eax, align 8
  %v1_25316 = trunc i32 %v0_25316 to i8
  %v2_25316 = load i1, i1* %cf.global-to-local, align 1
  %v3_25316 = zext i1 %v2_25316 to i8
  %v4_25316 = add i8 %v3_25316, %v1_25316
  %v19_25316 = icmp ule i8 %v4_25316, %v1_25316
  %v21_25316 = icmp eq i1 %v2_25316, %v19_25316
  store i1 %v21_25316, i1* %cf.global-to-local, align 1
  %v22_25316 = zext i8 %v4_25316 to i32
  %v24_25316 = and i32 %v0_25316, -256
  %v25_25316 = or i32 %v22_25316, %v24_25316
  store i32 %v25_25316, i32* %eax.global-to-local, align 8
  %v1_25318 = inttoptr i32 %v25_25316 to i8*
  %v2_25318 = load i8, i8* %v1_25318, align 1
  %v5_25318 = add i8 %v2_25318, %v4_25316
  store i8 %v5_25318, i8* %v1_25318, align 1
  %v0_2531a = load i32, i32* %eax.global-to-local, align 8
  %v1_2531a = load i32, i32* @ebp, align 4
  %v2_2531a = add i32 %v1_2531a, -12
  %v3_2531a = inttoptr i32 %v2_2531a to i32*
  store i32 %v0_2531a, i32* %v3_2531a, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2531f = load i32, i32* @ebp, align 4
  %v1_2531f = add i32 %v0_2531f, -28
  %v2_2531f = inttoptr i32 %v1_2531f to i32*
  %v3_2531f = load i32, i32* %v2_2531f, align 4
  %v1_25322 = add i32 %v3_2531f, 16
  store i32 %v1_25322, i32* @eax, align 8
  %v1_25325 = add i32 %v0_2531f, -12
  %v2_25325 = inttoptr i32 %v1_25325 to i32*
  %v3_25325 = load i32, i32* %v2_25325, align 4
  %v1_25328 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_25328 = icmp eq i32 %v1_25328, %v3_25325
  br i1 %v3_25328, label %bb, label %dec_label_pc_25331

bb:                                               ; preds = %dec_label_pc_25310
  %v1_2532f = call i32 @function_25336()
  store i32 %v1_2532f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25331

dec_label_pc_25331:                               ; preds = %bb, %dec_label_pc_25310
  %v2_2532f = phi i32 [ %v1_2532f, %bb ], [ %v1_25322, %dec_label_pc_25310 ]
  ret i32 %v2_2532f

; uselistorder directives
  uselistorder i8 %v4_25316, { 0, 2, 1 }
  uselistorder i8 %v1_25316, { 1, 0 }
}

define i32 @function_25336() local_unnamed_addr {
dec_label_pc_25336:
  %v0_25337 = load i32, i32* @eax, align 8
  ret i32 %v0_25337
}

define i32 @_ZN5boost6detail13addr_impl_refISt6vectorIP14CBlockTemplateSaIS4_EEEC1ERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25338:
  ret i32 %arg2
}

define i32 @function_2534c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2534c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2534c = load i32, i32* @eax, align 8
  %v1_2534c = trunc i32 %v0_2534c to i8
  %v2_2534c = load i1, i1* @cf, align 1
  %v3_2534c = zext i1 %v2_2534c to i8
  %v4_2534c = add i8 %v3_2534c, %v1_2534c
  %v22_2534c = zext i8 %v4_2534c to i32
  %v24_2534c = and i32 %v0_2534c, -256
  %v25_2534c = or i32 %v22_2534c, %v24_2534c
  store i32 %v25_2534c, i32* %eax.global-to-local, align 8
  %v1_2534e = inttoptr i32 %v25_2534c to i8*
  %v2_2534e = load i8, i8* %v1_2534e, align 1
  %v5_2534e = add i8 %v2_2534e, %v4_2534c
  store i8 %v5_2534e, i8* %v1_2534e, align 1
  %v0_25350 = load i32, i32* %eax.global-to-local, align 8
  %v1_25350 = load i32, i32* @ebp, align 4
  %v2_25350 = add i32 %v1_25350, -12
  %v3_25350 = inttoptr i32 %v2_25350 to i32*
  store i32 %v0_25350, i32* %v3_25350, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_25355 = load i32, i32* @ebp, align 4
  %v1_25355 = add i32 %v0_25355, -28
  %v2_25355 = inttoptr i32 %v1_25355 to i32*
  %v3_25355 = load i32, i32* %v2_25355, align 4
  store i32 %v3_25355, i32* %eax.global-to-local, align 8
  %v1_25358 = add i32 %v0_25355, -32
  %v2_25358 = inttoptr i32 %v1_25358 to i32*
  %v3_25358 = load i32, i32* %v2_25358, align 4
  %v2_2535b = inttoptr i32 %v3_25355 to i32*
  store i32 %v3_25358, i32* %v2_2535b, align 4
  %v0_2535d = load i32, i32* @ebp, align 4
  %v1_2535d = add i32 %v0_2535d, -12
  %v2_2535d = inttoptr i32 %v1_2535d to i32*
  %v3_2535d = load i32, i32* %v2_2535d, align 4
  store i32 %v3_2535d, i32* %eax.global-to-local, align 8
  %v1_25360 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25360 = xor i32 %v1_25360, %v3_2535d
  %v3_25360 = icmp eq i32 %v2_25360, 0
  store i32 %v2_25360, i32* @eax, align 8
  br i1 %v3_25360, label %bb, label %dec_label_pc_25369

bb:                                               ; preds = %dec_label_pc_2534c
  %v1_25367 = call i32 @function_2536e()
  store i32 %v1_25367, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25369

dec_label_pc_25369:                               ; preds = %bb, %dec_label_pc_2534c
  %v2_25367 = phi i32 [ %v1_25367, %bb ], [ %v2_25360, %dec_label_pc_2534c ]
  ret i32 %v2_25367
}

define i32 @function_2536e() local_unnamed_addr {
dec_label_pc_2536e:
  %v0_2536f = load i32, i32* @eax, align 8
  ret i32 %v0_2536f
}

define i32 @_ZNK5boost6detail13addr_impl_refISt6vectorIP14CBlockTemplateSaIS4_EEEcvRS6_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_25370:
  %v2_2538a = load i32, i32* %arg1, align 4
  store i32 %v2_2538a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25398

bb:                                               ; preds = %dec_label_pc_25370
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_25396 = call i32 @function_2539d(i32 %tmp100)
  br label %dec_label_pc_25398

dec_label_pc_25398:                               ; preds = %bb, %dec_label_pc_25370
  %v4_25396 = phi i32 [ %v2_25396, %bb ], [ %v2_2538a, %dec_label_pc_25370 ]
  ret i32 %v4_25396

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2539d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2539d:
  %v0_2539e = load i32, i32* @eax, align 8
  ret i32 %v0_2539e
}

define i32 @_ZN5boost6detail14addressof_implISt6vectorIP14CBlockTemplateSaIS4_EEE1fERS6_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2539f:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_253cb

bb:                                               ; preds = %dec_label_pc_2539f
  %v3_253c9 = call i32 @function_253d0(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_253cb

dec_label_pc_253cb:                               ; preds = %bb, %dec_label_pc_2539f
  %v4_253c9 = phi i32 [ %v3_253c9, %bb ], [ %arg1, %dec_label_pc_2539f ]
  ret i32 %v4_253c9
}

define i32 @function_253d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_253d0:
  %v0_253d1 = load i32, i32* @eax, align 8
  ret i32 %v0_253d1
}

define i32 @_ZN5boost12range_detail11range_beginISt6vectorIP14CBlockTemplateSaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_253d2:
  %v2_253fc = call i32 @unknown_4aa6c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25413

bb:                                               ; preds = %dec_label_pc_253d2
  %v1_25411 = call i32 @function_25418()
  br label %dec_label_pc_25413

dec_label_pc_25413:                               ; preds = %bb, %dec_label_pc_253d2
  %v2_25411 = phi i32 [ %v1_25411, %bb ], [ %arg1, %dec_label_pc_253d2 ]
  ret i32 %v2_25411

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_25418() local_unnamed_addr {
dec_label_pc_25418:
  %v0_25419 = load i32, i32* @eax, align 8
  ret i32 %v0_25419
}

define i32 @_ZN5boost12range_detail9range_endISt6vectorIP14CBlockTemplateSaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2541c:
  %v2_25446 = call i32 @unknown_44056(i32 %arg1, i32 %arg2)
  ret i32 %v2_25446
}

define i32 @function_2544c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2544c:
  %v0_2544d = load i32, i32* @eax, align 8
  %v2_2544d = add i32 %v0_2544d, 139
  %v16_2544d = urem i32 %v2_2544d, 256
  %v18_2544d = and i32 %v0_2544d, -256
  %v19_2544d = or i32 %v16_2544d, %v18_2544d
  store i32 %v19_2544d, i32* @eax, align 8
  %v0_2544f = load i32, i32* @ebp, align 4
  %v1_2544f = add i32 %v0_2544f, 1
  store i32 %v1_2544f, i32* @ebp, align 4
  %v0_25454 = load i32, i32* @edx, align 4
  %v1_25454 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25454 = icmp eq i32 %v1_25454, %v0_25454
  br i1 %v3_25454, label %bb, label %dec_label_pc_2545d

bb:                                               ; preds = %dec_label_pc_2544c
  %v1_2545b = call i32 @function_25462()
  br label %dec_label_pc_2545d

dec_label_pc_2545d:                               ; preds = %bb, %dec_label_pc_2544c
  %v2_2545b = phi i32 [ %v1_2545b, %bb ], [ %v19_2544d, %dec_label_pc_2544c ]
  ret i32 %v2_2545b

; uselistorder directives
  uselistorder i32 %v0_2544d, { 1, 0 }
}

define i32 @function_25462() local_unnamed_addr {
dec_label_pc_25462:
  %v0_25463 = load i32, i32* @eax, align 8
  ret i32 %v0_25463
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPP14CBlockTemplateSt6vectorIS2_SaIS2_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25466:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2548c

bb:                                               ; preds = %dec_label_pc_25466
  %v2_2548a = call i32 @function_25491(i32 %arg1)
  br label %dec_label_pc_2548c

dec_label_pc_2548c:                               ; preds = %bb, %dec_label_pc_25466
  %v3_2548a = phi i32 [ %v2_2548a, %bb ], [ %arg1, %dec_label_pc_25466 ]
  ret i32 %v3_2548a
}

define i32 @function_25491(i32 %arg1) local_unnamed_addr {
dec_label_pc_25491:
  %v0_25492 = load i32, i32* @eax, align 8
  ret i32 %v0_25492
}

define i32 @_ZNSaIxED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25494:
  %v1_254b1 = call i32 @unknown_4fade(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_254c2

bb:                                               ; preds = %dec_label_pc_25494
  %v1_254c0 = call i32 @function_254c7()
  br label %dec_label_pc_254c2

dec_label_pc_254c2:                               ; preds = %bb, %dec_label_pc_25494
  %v2_254c0 = phi i32 [ %v1_254c0, %bb ], [ 0, %dec_label_pc_25494 ]
  ret i32 %v2_254c0
}

define i32 @function_254c7() local_unnamed_addr {
dec_label_pc_254c7:
  %v0_254c8 = load i32, i32* @eax, align 8
  ret i32 %v0_254c8
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_254ca:
  %v10_254ed = icmp eq i32 %arg2, 0
  br i1 %v10_254ed, label %dec_label_pc_2550c, label %dec_label_pc_254f3

dec_label_pc_254f3:                               ; preds = %dec_label_pc_254ca
  %v3_25507 = call i32 @unknown_4fb3e(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_2550c

dec_label_pc_2550c:                               ; preds = %dec_label_pc_254f3, %dec_label_pc_254ca
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25518

bb:                                               ; preds = %dec_label_pc_2550c
  %v1_25516 = call i32 @function_2551d()
  br label %dec_label_pc_25518

dec_label_pc_25518:                               ; preds = %bb, %dec_label_pc_2550c
  %v2_25516 = phi i32 [ %v1_25516, %bb ], [ 0, %dec_label_pc_2550c ]
  ret i32 %v2_25516
}

define i32 @function_2551d() local_unnamed_addr {
dec_label_pc_2551d:
  %v0_2551e = load i32, i32* @eax, align 8
  ret i32 %v0_2551e
}

define i32 @_ZSt8_DestroyIPxEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2551f:
  %v2_25549 = call i32 @unknown_4fbd4(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2555a

bb:                                               ; preds = %dec_label_pc_2551f
  %v1_25558 = call i32 @function_2555f()
  br label %dec_label_pc_2555a

dec_label_pc_2555a:                               ; preds = %bb, %dec_label_pc_2551f
  %v2_25558 = phi i32 [ %v1_25558, %bb ], [ 0, %dec_label_pc_2551f ]
  ret i32 %v2_25558
}

define i32 @function_2555f() local_unnamed_addr {
dec_label_pc_2555f:
  %v0_25560 = load i32, i32* @eax, align 8
  ret i32 %v0_25560
}

define i32 @_ZSt13copy_backwardIPP14CBlockTemplateS2_ET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25561:
  %v1_2558b = call i32 @unknown_4fc46(i32 %arg2)
  %v1_25598 = call i32 @unknown_4fc46(i32 %arg1)
  %v3_255ab = call i32 @unknown_4fc7b(i32 %v1_25598, i32 %v1_2558b, i32 %arg3)
  store i32 %v3_255ab, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_255bc

bb:                                               ; preds = %dec_label_pc_25561
  %v1_255ba = call i32 @function_255c1()
  br label %dec_label_pc_255bc

dec_label_pc_255bc:                               ; preds = %bb, %dec_label_pc_25561
  %v2_255ba = phi i32 [ %v1_255ba, %bb ], [ %v3_255ab, %dec_label_pc_25561 ]
  ret i32 %v2_255ba

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4fc46, { 1, 0 }
}

define i32 @function_255c1() local_unnamed_addr {
dec_label_pc_255c1:
  %v0_255c6 = load i32, i32* @eax, align 8
  ret i32 %v0_255c6
}

define i32 @_ZNKSt6vectorIP14CBlockTemplateSaIS1_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_255c8:
  %v1_255f2 = call i32 @unknown_4fd94(i32 %arg1)
  %v1_255ff = call i32 @unknown_4fd54(i32 %arg1)
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2560e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2560e:
  %v1_2560e = load i32, i32* @edx, align 4
  ret i32 %v1_2560e
}

define i32 @function_2562b() local_unnamed_addr {
dec_label_pc_2562b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2562b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2562b
}

define i32 @function_25660(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_25660:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25661() local_unnamed_addr {
dec_label_pc_25661:
  %cf.global-to-local = alloca i1, align 1
  %ebp.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_25661 = load i1, i1* %cf.global-to-local, align 1
  %v1_25661 = load i1, i1* %zf.global-to-local, align 1
  %v2_25661 = or i1 %v0_25661, %v1_25661
  %v0_25663 = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v2_25661, label %dec_label_pc_25663, label %dec_label_pc_25673

dec_label_pc_25663:                               ; preds = %dec_label_pc_25661
  %v1_25663 = add i32 %v0_25663, -28
  %v2_25663 = inttoptr i32 %v1_25663 to i32*
  %v3_25663 = load i32, i32* %v2_25663, align 4
  %v1_25669 = call i32 @unknown_4fd94(i32 %v3_25663)
  %v1_2566e = load i32, i32* %ebp.global-to-local, align 4
  %v2_2566e = add i32 %v1_2566e, -16
  %v3_2566e = inttoptr i32 %v2_2566e to i32*
  %v4_2566e = load i32, i32* %v3_2566e, align 4
  %v10_2566e = icmp ult i32 %v1_25669, %v4_2566e
  store i1 %v10_2566e, i1* %cf.global-to-local, align 1
  %v15_2566e = icmp eq i32 %v1_25669, %v4_2566e
  store i1 %v15_2566e, i1* %zf.global-to-local, align 1
  %v1_25671 = icmp eq i1 %v10_2566e, false
  br i1 %v1_25671, label %dec_label_pc_25683, label %dec_label_pc_25673

dec_label_pc_25673:                               ; preds = %dec_label_pc_25661, %dec_label_pc_25663
  %v0_25673 = phi i32 [ %v1_2566e, %dec_label_pc_25663 ], [ %v0_25663, %dec_label_pc_25661 ]
  %v1_25673 = add i32 %v0_25673, -28
  %v2_25673 = inttoptr i32 %v1_25673 to i32*
  %v3_25673 = load i32, i32* %v2_25673, align 4
  %v1_25679 = call i32 @unknown_4fd94(i32 %v3_25673)
  %v0_25683.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_25683

dec_label_pc_25683:                               ; preds = %dec_label_pc_25663, %dec_label_pc_25673
  %v0_25683 = phi i32 [ %v0_25683.pre, %dec_label_pc_25673 ], [ %v1_2566e, %dec_label_pc_25663 ]
  %storemerge = phi i32 [ %v1_25679, %dec_label_pc_25673 ], [ %v4_2566e, %dec_label_pc_25663 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_25683 = add i32 %v0_25683, -12
  %v2_25683 = inttoptr i32 %v1_25683 to i32*
  %v3_25683 = load i32, i32* %v2_25683, align 4
  %v1_25686 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_25686 = icmp eq i32 %v1_25686, %v3_25683
  store i1 %v3_25686, i1* %zf.global-to-local, align 1
  br i1 %v3_25686, label %bb, label %dec_label_pc_2568f

bb:                                               ; preds = %dec_label_pc_25683
  %v1_2568d = call i32 @function_25694()
  br label %dec_label_pc_2568f

dec_label_pc_2568f:                               ; preds = %bb, %dec_label_pc_25683
  %v2_2568d = phi i32 [ %v1_2568d, %bb ], [ %storemerge, %dec_label_pc_25683 ]
  ret i32 %v2_2568d

; uselistorder directives
  uselistorder i1 %v3_25686, { 1, 0 }
  uselistorder i32 %v4_2566e, { 1, 0, 2 }
  uselistorder i32 %v1_2566e, { 1, 0, 2 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_4fd94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_25683, { 1, 0 }
  uselistorder label %dec_label_pc_25673, { 1, 0 }
}

define i32 @function_25694() local_unnamed_addr {
dec_label_pc_25694:
  %v0_25699 = load i32, i32* @eax, align 8
  ret i32 %v0_25699
}

define i32 @_ZNSt6vectorIP14CBlockTemplateSaIS1_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2569a:
  %v2_256c4 = call i32 @unknown_4aeba(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_256d8

bb:                                               ; preds = %dec_label_pc_2569a
  %v1_256d6 = call i32 @function_256dd()
  br label %dec_label_pc_256d8

dec_label_pc_256d8:                               ; preds = %bb, %dec_label_pc_2569a
  %v2_256d6 = phi i32 [ %v1_256d6, %bb ], [ %arg1, %dec_label_pc_2569a ]
  ret i32 %v2_256d6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_256dd() local_unnamed_addr {
dec_label_pc_256dd:
  %v0_256de = load i32, i32* @eax, align 8
  ret i32 %v0_256de
}

define i32 @_ZN9__gnu_cxxmiIPP14CBlockTemplateSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_256e1:
  %v1_25705 = call i32 @unknown_4ab47(i32 %arg1)
  %v1_2570a = inttoptr i32 %v1_25705 to i32*
  %v2_2570a = load i32, i32* %v1_2570a, align 4
  %v1_25714 = call i32 @unknown_4ab47(i32 %arg2)
  %v1_25719 = inttoptr i32 %v1_25714 to i32*
  %v2_25719 = load i32, i32* %v1_25719, align 4
  %v2_2571d = sub i32 %v2_2570a, %v2_25719
  %v2_25721 = sdiv i32 %v2_2571d, 4
  store i32 %v2_25721, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25730

bb:                                               ; preds = %dec_label_pc_256e1
  %v1_2572e = call i32 @function_25735()
  br label %dec_label_pc_25730

dec_label_pc_25730:                               ; preds = %bb, %dec_label_pc_256e1
  %v2_2572e = phi i32 [ %v1_2572e, %bb ], [ %v2_25721, %dec_label_pc_256e1 ]
  ret i32 %v2_2572e

; uselistorder directives
  uselistorder i32 %v2_25721, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4ab47, { 1, 0 }
}

define i32 @function_25735() local_unnamed_addr {
dec_label_pc_25735:
  %v0_2573a = load i32, i32* @eax, align 8
  ret i32 %v0_2573a
}

define i32 @_ZNSt12_Vector_baseIP14CBlockTemplateSaIS1_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2573c:
  %v10_25759 = icmp eq i32 %arg2, 0
  br i1 %v10_25759, label %bb, label %dec_label_pc_2575f

bb:                                               ; preds = %dec_label_pc_2573c
  %v3_2575d = call i32 @function_2577b(i32 0, i32 %arg1)
  br label %dec_label_pc_2575f

dec_label_pc_2575f:                               ; preds = %bb, %dec_label_pc_2573c
  ret i32 %arg1
}

define i32 @function_25764(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25764:
  %eax.global-to-local = alloca i32, align 4
  %v0_25764 = load i32, i32* @eax, align 8
  %v1_25764 = trunc i32 %v0_25764 to i8
  %v2_25764 = and i8 %v1_25764, 8
  %v8_25764 = zext i8 %v2_25764 to i32
  %v10_25764 = and i32 %v0_25764, -256
  %v11_25764 = or i32 %v8_25764, %v10_25764
  store i32 %v11_25764, i32* %eax.global-to-local, align 8
  %v1_25766 = inttoptr i32 %v11_25764 to i8*
  %v2_25766 = load i8, i8* %v1_25766, align 8
  %v5_25766 = add i8 %v2_25766, %v2_25764
  store i8 %v5_25766, i8* %v1_25766, align 8
  %v0_25768 = load i32, i32* %eax.global-to-local, align 8
  %v1_25768 = inttoptr i32 %v0_25768 to i8*
  %v2_25768 = load i8, i8* %v1_25768, align 1
  %v4_25768 = trunc i32 %v0_25768 to i8
  %v5_25768 = add i8 %v2_25768, %v4_25768
  store i8 %v5_25768, i8* %v1_25768, align 1
  %v0_2576a = load i32, i32* @ebp, align 4
  %v1_2576a = add i32 %v0_2576a, -32
  %v2_2576a = inttoptr i32 %v1_2576a to i32*
  %v3_2576a = load i32, i32* %v2_2576a, align 4
  %v0_25771 = load i32, i32* %eax.global-to-local, align 8
  %v2_25774 = call i32 @unknown_4ff46(i32 %v0_25771, i32 %v3_2576a)
  store i32 %v2_25774, i32* @eax, align 8
  %v0_25779 = call i32 @function_25780()
  store i32 %v0_25779, i32* %eax.global-to-local, align 8
  ret i32 %v0_25779
}

define i32 @function_2577b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2577b:
  ret i32 0
}

define i32 @function_25780() local_unnamed_addr {
dec_label_pc_25780:
  %v0_25780 = load i32, i32* @ebp, align 4
  %v1_25780 = add i32 %v0_25780, -12
  %v2_25780 = inttoptr i32 %v1_25780 to i32*
  %v3_25780 = load i32, i32* %v2_25780, align 4
  %v1_25783 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25783 = icmp eq i32 %v1_25783, %v3_25780
  br i1 %v3_25783, label %bb, label %dec_label_pc_25780.dec_label_pc_2578c_crit_edge

dec_label_pc_25780.dec_label_pc_2578c_crit_edge:  ; preds = %dec_label_pc_25780
  %v2_2578a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2578c

bb:                                               ; preds = %dec_label_pc_25780
  %v1_2578a = call i32 @function_25791()
  br label %dec_label_pc_2578c

dec_label_pc_2578c:                               ; preds = %dec_label_pc_25780.dec_label_pc_2578c_crit_edge, %bb
  %v2_2578a = phi i32 [ %v2_2578a.pre, %dec_label_pc_25780.dec_label_pc_2578c_crit_edge ], [ %v1_2578a, %bb ]
  ret i32 %v2_2578a

; uselistorder directives
  uselistorder label %dec_label_pc_2578c, { 1, 0 }
}

define i32 @function_25791() local_unnamed_addr {
dec_label_pc_25791:
  %v0_25792 = load i32, i32* @eax, align 8
  ret i32 %v0_25792
}

define i32 @_ZSt22__uninitialized_move_aIPP14CBlockTemplateS2_SaIS1_EET0_T_S5_S4_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25793:
  ret i32 %arg2
}

define i32 @function_257ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_257ce:
  %v0_257d1 = load i32, i32* @ebp, align 4
  %v1_257d1 = add i32 %v0_257d1, -28
  %v2_257d1 = inttoptr i32 %v1_257d1 to i32*
  %v3_257d1 = load i32, i32* %v2_257d1, align 4
  %v1_257d7 = call i32 @unknown_4fffb(i32 %v3_257d1)
  store i32 %v1_257d7, i32* @eax, align 8
  %v0_257dc = load i32, i32* @ebp, align 4
  %v1_257dc = add i32 %v0_257dc, -12
  %v2_257dc = inttoptr i32 %v1_257dc to i32*
  %v3_257dc = load i32, i32* %v2_257dc, align 4
  %v1_257df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_257df = icmp eq i32 %v1_257df, %v3_257dc
  br i1 %v3_257df, label %bb, label %dec_label_pc_257e8

bb:                                               ; preds = %dec_label_pc_257ce
  %v1_257e6 = call i32 @function_257ed()
  br label %dec_label_pc_257e8

dec_label_pc_257e8:                               ; preds = %bb, %dec_label_pc_257ce
  %v2_257e6 = phi i32 [ %v1_257e6, %bb ], [ %v1_257d7, %dec_label_pc_257ce ]
  ret i32 %v2_257e6
}

define i32 @function_257ed() local_unnamed_addr {
dec_label_pc_257ed:
  %v0_257ee = load i32, i32* @eax, align 8
  ret i32 %v0_257ee
}

define i32 @_ZN9__gnu_cxx13new_allocatorIP14CBlockTemplateE7destroyEPS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_257f0:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25819

bb:                                               ; preds = %dec_label_pc_257f0
  %v3_25817 = call i32 @function_2581e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_25819

dec_label_pc_25819:                               ; preds = %bb, %dec_label_pc_257f0
  %v4_25817 = phi i32 [ %v3_25817, %bb ], [ 0, %dec_label_pc_257f0 ]
  ret i32 %v4_25817
}

define i32 @function_2581e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2581e:
  %v0_2581f = load i32, i32* @eax, align 8
  ret i32 %v0_2581f
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPP14CBlockTemplateSt6vectorIS2_SaIS2_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25820:
  %v1_25840 = inttoptr i32 %arg2 to i32*
  %v2_25840 = load i32, i32* %v1_25840, align 4
  store i32 %v2_25840, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25853

bb:                                               ; preds = %dec_label_pc_25820
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_25851 = call i32 @function_25858(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_25853

dec_label_pc_25853:                               ; preds = %bb, %dec_label_pc_25820
  %v4_25851 = phi i32 [ %v3_25851, %bb ], [ 0, %dec_label_pc_25820 ]
  ret i32 %v4_25851

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_25858(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25858:
  %v0_25859 = load i32, i32* @eax, align 8
  ret i32 %v0_25859
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE11lower_boundERS2_() local_unnamed_addr {
dec_label_pc_2585a:
  %eax.global-to-local = alloca i32, align 4
  %v5_2585a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2585a
}

define i32 @function_2585c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2585c:
  %v0_25861 = load i32, i32* @ebp, align 4
  %v1_25861 = add i32 %v0_25861, 8
  %v2_25861 = inttoptr i32 %v1_25861 to i32*
  %v3_25861 = load i32, i32* %v2_25861, align 4
  %v2_25864 = add i32 %v0_25861, -28
  %v3_25864 = inttoptr i32 %v2_25864 to i32*
  store i32 %v3_25861, i32* %v3_25864, align 4
  %v0_25867 = load i32, i32* @ebp, align 4
  %v1_25867 = add i32 %v0_25867, 12
  %v2_25867 = inttoptr i32 %v1_25867 to i32*
  %v3_25867 = load i32, i32* %v2_25867, align 4
  %v2_2586a = add i32 %v0_25867, -32
  %v3_2586a = inttoptr i32 %v2_2586a to i32*
  store i32 %v3_25867, i32* %v3_2586a, align 4
  %v0_2586d = load i32, i32* @ebp, align 4
  %v1_2586d = add i32 %v0_2586d, 16
  %v2_2586d = inttoptr i32 %v1_2586d to i32*
  %v3_2586d = load i32, i32* %v2_2586d, align 4
  %v2_25870 = add i32 %v0_2586d, -36
  %v3_25870 = inttoptr i32 %v2_25870 to i32*
  store i32 %v3_2586d, i32* %v3_25870, align 4
  %v0_25873 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_25879 = load i32, i32* @ebp, align 4
  %v2_25879 = add i32 %v1_25879, -12
  %v3_25879 = inttoptr i32 %v2_25879 to i32*
  store i32 %v0_25873, i32* %v3_25879, align 4
  %v0_2587e = load i32, i32* @ebp, align 4
  %v1_2587e = add i32 %v0_2587e, -32
  %v2_2587e = inttoptr i32 %v1_2587e to i32*
  %v3_2587e = load i32, i32* %v2_2587e, align 4
  %v1_25884 = call i32 @unknown_4aad2(i32 %v3_2587e)
  store i32 %v1_25884, i32* @ebx, align 4
  %v0_2588b = load i32, i32* @ebp, align 4
  %v1_2588b = add i32 %v0_2588b, -32
  %v2_2588b = inttoptr i32 %v1_2588b to i32*
  %v3_2588b = load i32, i32* %v2_2588b, align 4
  %v1_25891 = call i32 @unknown_43b08(i32 %v3_2588b)
  %v0_25896 = load i32, i32* @ebp, align 4
  %v1_25896 = add i32 %v0_25896, -28
  %v2_25896 = inttoptr i32 %v1_25896 to i32*
  %v3_25896 = load i32, i32* %v2_25896, align 4
  %v1_25899 = add i32 %v0_25896, -36
  %v2_25899 = inttoptr i32 %v1_25899 to i32*
  %v3_25899 = load i32, i32* %v2_25899, align 4
  store i32 %v3_25899, i32* @ecx, align 8
  %v0_258a0 = load i32, i32* @ebx, align 4
  %v1_258a8 = add i32 %v0_25896, -32
  %v2_258a8 = inttoptr i32 %v1_258a8 to i32*
  %v3_258a8 = load i32, i32* %v2_258a8, align 4
  %v5_258b2 = call i32 @unknown_50118(i32 %v3_25896, i32 %v3_258a8, i32 %v1_25891, i32 %v0_258a0, i32 %v3_25899)
  %v0_258ba = load i32, i32* @ebp, align 4
  %v1_258ba = add i32 %v0_258ba, -28
  %v2_258ba = inttoptr i32 %v1_258ba to i32*
  %v3_258ba = load i32, i32* %v2_258ba, align 4
  store i32 %v3_258ba, i32* @eax, align 8
  %v1_258bd = add i32 %v0_258ba, -12
  %v2_258bd = inttoptr i32 %v1_258bd to i32*
  %v3_258bd = load i32, i32* %v2_258bd, align 4
  %v1_258c0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_258c0 = icmp eq i32 %v1_258c0, %v3_258bd
  br i1 %v3_258c0, label %bb, label %dec_label_pc_258c9

bb:                                               ; preds = %dec_label_pc_2585c
  %v1_258c7 = call i32 @function_258ce()
  br label %dec_label_pc_258c9

dec_label_pc_258c9:                               ; preds = %bb, %dec_label_pc_2585c
  %v2_258c7 = phi i32 [ %v1_258c7, %bb ], [ %v3_258ba, %dec_label_pc_2585c ]
  ret i32 %v2_258c7
}

define i32 @function_258ce() local_unnamed_addr {
dec_label_pc_258ce:
  %v0_258ce = load i32, i32* @ebp, align 4
  %v1_258ce = add i32 %v0_258ce, -4
  %v2_258ce = inttoptr i32 %v1_258ce to i32*
  %v3_258ce = load i32, i32* %v2_258ce, align 4
  store i32 %v3_258ce, i32* @ebx, align 4
  %v0_258d2 = load i32, i32* @eax, align 8
  ret i32 %v0_258d2
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_258d6:
  ret i32 %arg1
}

define i32 @function_258f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_258f8:
  %v0_258f9 = load i32, i32* @edx, align 4
  %v1_258f9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_258f9 = icmp eq i32 %v1_258f9, %v0_258f9
  br i1 %v3_258f9, label %bb, label %dec_label_pc_258f8.dec_label_pc_25902_crit_edge

dec_label_pc_258f8.dec_label_pc_25902_crit_edge:  ; preds = %dec_label_pc_258f8
  %v2_25900.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_25902

bb:                                               ; preds = %dec_label_pc_258f8
  %v1_25900 = call i32 @function_25907()
  br label %dec_label_pc_25902

dec_label_pc_25902:                               ; preds = %dec_label_pc_258f8.dec_label_pc_25902_crit_edge, %bb
  %v2_25900 = phi i32 [ %v2_25900.pre, %dec_label_pc_258f8.dec_label_pc_25902_crit_edge ], [ %v1_25900, %bb ]
  ret i32 %v2_25900

; uselistorder directives
  uselistorder label %dec_label_pc_25902, { 1, 0 }
}

define i32 @function_25907() local_unnamed_addr {
dec_label_pc_25907:
  %v0_25908 = load i32, i32* @eax, align 8
  ret i32 %v0_25908
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE3endEv() local_unnamed_addr {
dec_label_pc_2590c:
  %eax.global-to-local = alloca i32, align 4
  %v17_2590f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2590f
}

define i32 @function_25914(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25914:
  %ebp.global-to-local = alloca i32, align 4
  %v0_25914 = load i32, i32* @ecx, align 8
  %v1_25914 = add i32 %v0_25914, 1166795845
  %v2_25914 = inttoptr i32 %v1_25914 to i8*
  %v3_25914 = load i8, i8* %v2_25914, align 1
  %v5_25914 = trunc i32 %v0_25914 to i8
  %v6_25914 = or i8 %v3_25914, %v5_25914
  store i8 %v6_25914, i8* %v2_25914, align 1
  %v0_2591c = load i32, i32* @ebp, align 4
  %v1_2591c = add i32 %v0_2591c, 1
  store i32 %v1_2591c, i32* %ebp.global-to-local, align 4
  %v0_2591f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25924 = add i32 %v0_2591c, -11
  %v3_25924 = inttoptr i32 %v2_25924 to i32*
  store i32 %v0_2591f, i32* %v3_25924, align 4
  %v0_25929 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25929 = add i32 %v0_25929, -32
  %v2_25929 = inttoptr i32 %v1_25929 to i32*
  %v3_25929 = load i32, i32* %v2_25929, align 4
  %v1_2592c = add i32 %v3_25929, 4
  %v1_25933 = add i32 %v0_25929, -28
  %v2_25933 = inttoptr i32 %v1_25933 to i32*
  %v3_25933 = load i32, i32* %v2_25933, align 4
  %v2_25939 = call i32 @unknown_5027e(i32 %v3_25933, i32 %v1_2592c)
  ret i32 %v2_25939
}

define i32 @function_2593e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2593e:
  %v0_2593e = load i32, i32* @ebp, align 4
  %v1_2593e = add i32 %v0_2593e, -28
  %v2_2593e = inttoptr i32 %v1_2593e to i32*
  %v3_2593e = load i32, i32* %v2_2593e, align 4
  store i32 %v3_2593e, i32* @eax, align 8
  %v1_25941 = add i32 %v0_2593e, -12
  %v2_25941 = inttoptr i32 %v1_25941 to i32*
  %v3_25941 = load i32, i32* %v2_25941, align 4
  %v1_25944 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25944 = icmp eq i32 %v1_25944, %v3_25941
  br i1 %v3_25944, label %bb, label %dec_label_pc_2594d

bb:                                               ; preds = %dec_label_pc_2593e
  %v1_2594b = call i32 @function_25952()
  br label %dec_label_pc_2594d

dec_label_pc_2594d:                               ; preds = %bb, %dec_label_pc_2593e
  %v2_2594b = phi i32 [ %v1_2594b, %bb ], [ %v3_2593e, %dec_label_pc_2593e ]
  ret i32 %v2_2594b
}

define i32 @function_25950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25950:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25952() local_unnamed_addr {
dec_label_pc_25952:
  %v0_25953 = load i32, i32* @eax, align 8
  ret i32 %v0_25953
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEC1ERKSt17_Rb_tree_iteratorIS7_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25956:
  %v0_25968 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_25976 = inttoptr i32 %arg2 to i32*
  %v2_25976 = load i32, i32* %v1_25976, align 4
  store i32 %v2_25976, i32* %arg1, align 4
  ret i32 %v0_25968
}

define i32 @function_2598d() local_unnamed_addr {
dec_label_pc_2598d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2598d = load i32, i32* %ecx.global-to-local, align 8
  %v1_2598d = add i32 %v0_2598d, -1
  store i32 %v1_2598d, i32* %ecx.global-to-local, align 8
  %v0_2598f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2598f
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS7_ERKS7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25990:
  %v1_259c3 = call i32 @unknown_4ac08(i32 %arg2)
  ret i32 %v1_259c3
}

define i32 @function_259cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_259cc:
  %ebx.global-to-local = alloca i32, align 4
  %v0_259d4 = load i32, i32* @ebx, align 4
  %v1_259d4 = add i32 %v0_259d4, 76136517
  %v2_259d4 = inttoptr i32 %v1_259d4 to i8*
  %v3_259d4 = load i8, i8* %v2_259d4, align 1
  %v4_259d4 = load i32, i32* @ecx, align 8
  %v5_259d4 = trunc i32 %v4_259d4 to i8
  %v6_259d4 = add i8 %v5_259d4, %v3_259d4
  store i8 %v6_259d4, i8* %v2_259d4, align 1
  %v0_259da = load i32, i32* @eax, align 8
  %v2_259da = and i32 %v0_259da, 232
  %v3_259da = icmp eq i32 %v2_259da, 0
  br i1 %v3_259da, label %dec_label_pc_25a2d, label %dec_label_pc_259e4

dec_label_pc_259e4:                               ; preds = %dec_label_pc_259cc
  %v0_259e4 = load i32, i32* @ebp, align 4
  %v1_259e4 = add i32 %v0_259e4, -72
  %v2_259e4 = inttoptr i32 %v1_259e4 to i32*
  %v3_259e4 = load i32, i32* %v2_259e4, align 4
  %v1_259eb = add i32 %v0_259e4, -17
  %v2_259f1 = call i32 @unknown_5033a(i32 %v1_259eb, i32 %v3_259e4)
  store i32 %v2_259f1, i32* %ebx.global-to-local, align 4
  %v0_259f8 = load i32, i32* @ebp, align 4
  %v1_259f8 = add i32 %v0_259f8, -64
  %v2_259f8 = inttoptr i32 %v1_259f8 to i32*
  %v3_259f8 = load i32, i32* %v2_259f8, align 4
  %v1_259fe = call i32 @unknown_4ac98(i32 %v3_259f8)
  %v1_25a03 = inttoptr i32 %v1_259fe to i32*
  %v2_25a03 = load i32, i32* %v1_25a03, align 4
  %v1_25a08 = call i32 @unknown_4b8dc(i32 %v2_25a03)
  %v0_25a0f = load i32, i32* @ebp, align 4
  %v1_25a0f = add i32 %v0_25a0f, -64
  %v2_25a0f = inttoptr i32 %v1_25a0f to i32*
  %v3_25a0f = load i32, i32* %v2_25a0f, align 4
  %v0_25a12 = load i32, i32* %ebx.global-to-local, align 4
  %v3_25a1d = call i32 @unknown_4295a(i32 %v3_25a0f, i32 %v1_25a08, i32 %v0_25a12)
  %v4_25a22 = trunc i32 %v3_25a1d to i8
  %v5_25a22 = icmp eq i8 %v4_25a22, 0
  br i1 %v5_25a22, label %dec_label_pc_25a2d, label %dec_label_pc_25a32

dec_label_pc_25a2d:                               ; preds = %dec_label_pc_259e4, %dec_label_pc_259cc
  br label %dec_label_pc_25a32

dec_label_pc_25a32:                               ; preds = %dec_label_pc_259e4, %dec_label_pc_25a2d
  %storemerge = phi i1 [ true, %dec_label_pc_25a2d ], [ false, %dec_label_pc_259e4 ]
  %v0_25a70 = load i32, i32* @ebp, align 4
  br i1 %storemerge, label %dec_label_pc_25a70, label %dec_label_pc_25a36

dec_label_pc_25a36:                               ; preds = %dec_label_pc_25a32
  %v1_25a36 = add i32 %v0_25a70, -64
  %v2_25a36 = inttoptr i32 %v1_25a36 to i32*
  %v3_25a36 = load i32, i32* %v2_25a36, align 4
  %v1_25a3c = call i32 @unknown_4ac98(i32 %v3_25a36)
  %v1_25a41 = inttoptr i32 %v1_25a3c to i32*
  %v2_25a41 = load i32, i32* %v1_25a41, align 4
  %v0_25a43 = load i32, i32* @ebp, align 4
  %v1_25a43 = add i32 %v0_25a43, -60
  %v2_25a43 = inttoptr i32 %v1_25a43 to i32*
  %v3_25a43 = load i32, i32* %v2_25a43, align 4
  %v1_25a46 = add i32 %v0_25a43, -72
  %v2_25a46 = inttoptr i32 %v1_25a46 to i32*
  %v3_25a46 = load i32, i32* %v2_25a46, align 4
  %v1_25a59 = add i32 %v0_25a43, -64
  %v2_25a59 = inttoptr i32 %v1_25a59 to i32*
  %v3_25a59 = load i32, i32* %v2_25a59, align 4
  %v5_25a63 = call i32 @unknown_5039e(i32 %v3_25a43, i32 %v3_25a59, i32 0, i32 %v2_25a41, i32 %v3_25a46)
  %v0_25a6b = call i32 @function_25d90()
  ret i32 %v0_25a6b

dec_label_pc_25a70:                               ; preds = %dec_label_pc_25a32
  %v1_25a70 = add i32 %v0_25a70, -48
  %v1_25a73 = add i32 %v0_25a70, -72
  %v2_25a73 = inttoptr i32 %v1_25a73 to i32*
  %v3_25a73 = load i32, i32* %v2_25a73, align 4
  %v1_25a7a = add i32 %v0_25a70, -64
  %v2_25a7a = inttoptr i32 %v1_25a7a to i32*
  %v3_25a7a = load i32, i32* %v2_25a7a, align 4
  %v3_25a84 = call i32 @unknown_504a0(i32 %v1_25a70, i32 %v3_25a7a, i32 %v3_25a73)
  %v0_25a8c = load i32, i32* @ebp, align 4
  %v1_25a8c = add i32 %v0_25a8c, -60
  %v2_25a8c = inttoptr i32 %v1_25a8c to i32*
  %v3_25a8c = load i32, i32* %v2_25a8c, align 4
  %v1_25a8f = add i32 %v0_25a8c, -48
  %v2_25a8f = inttoptr i32 %v1_25a8f to i32*
  %v3_25a8f = load i32, i32* %v2_25a8f, align 4
  %v2_25a92 = inttoptr i32 %v3_25a8c to i32*
  store i32 %v3_25a8f, i32* %v2_25a92, align 4
  %v0_25a94 = call i32 @function_25d90()
  ret i32 %v0_25a94

; uselistorder directives
  uselistorder i32 %v0_25a70, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_25a32, { 1, 0 }
}

define i32 @function_25a99() local_unnamed_addr {
dec_label_pc_25a99:
  %ebx.global-to-local = alloca i32, align 4
  %v0_25a99 = load i32, i32* @ebp, align 4
  %v1_25a99 = add i32 %v0_25a99, -68
  %v2_25a99 = inttoptr i32 %v1_25a99 to i32*
  %v3_25a99 = load i32, i32* %v2_25a99, align 4
  %v1_25a9f = call i32 @unknown_4b8dc(i32 %v3_25a99)
  store i32 %v1_25a9f, i32* %ebx.global-to-local, align 4
  %v0_25aa6 = load i32, i32* @ebp, align 4
  %v1_25aa6 = add i32 %v0_25aa6, -72
  %v2_25aa6 = inttoptr i32 %v1_25aa6 to i32*
  %v3_25aa6 = load i32, i32* %v2_25aa6, align 4
  %v1_25aad = add i32 %v0_25aa6, -16
  %v2_25ab3 = call i32 @unknown_5033a(i32 %v1_25aad, i32 %v3_25aa6)
  %v0_25ab8 = load i32, i32* @ebp, align 4
  %v1_25ab8 = add i32 %v0_25ab8, -64
  %v2_25ab8 = inttoptr i32 %v1_25ab8 to i32*
  %v3_25ab8 = load i32, i32* %v2_25ab8, align 4
  %v0_25abb = load i32, i32* %ebx.global-to-local, align 4
  %v3_25ac6 = call i32 @unknown_4295a(i32 %v3_25ab8, i32 %v2_25ab3, i32 %v0_25abb)
  %v4_25acb = trunc i32 %v3_25ac6 to i8
  %v5_25acb = icmp eq i8 %v4_25acb, 0
  br i1 %v5_25acb, label %bb, label %dec_label_pc_25ad3

bb:                                               ; preds = %dec_label_pc_25a99
  %v1_25acd = call i32 @function_25c13()
  br label %dec_label_pc_25ad3

dec_label_pc_25ad3:                               ; preds = %bb, %dec_label_pc_25a99
  %v0_25ad3 = load i32, i32* @ebp, align 4
  %v1_25ad3 = add i32 %v0_25ad3, -68
  %v2_25ad3 = inttoptr i32 %v1_25ad3 to i32*
  %v3_25ad3 = load i32, i32* %v2_25ad3, align 4
  %v2_25ad6 = add i32 %v0_25ad3, -24
  %v3_25ad6 = inttoptr i32 %v2_25ad6 to i32*
  store i32 %v3_25ad3, i32* %v3_25ad6, align 4
  %v0_25ad9 = load i32, i32* @ebp, align 4
  %v1_25ad9 = add i32 %v0_25ad9, -68
  %v2_25ad9 = inttoptr i32 %v1_25ad9 to i32*
  %v3_25ad9 = load i32, i32* %v2_25ad9, align 4
  store i32 %v3_25ad9, i32* %ebx.global-to-local, align 4
  %v1_25adc = add i32 %v0_25ad9, -64
  %v2_25adc = inttoptr i32 %v1_25adc to i32*
  %v3_25adc = load i32, i32* %v2_25adc, align 4
  %v1_25ae2 = call i32 @unknown_4ac38(i32 %v3_25adc)
  %v1_25ae7 = inttoptr i32 %v1_25ae2 to i32*
  %v2_25ae7 = load i32, i32* %v1_25ae7, align 4
  %v0_25ae9 = load i32, i32* %ebx.global-to-local, align 4
  %v12_25ae9 = icmp eq i32 %v0_25ae9, %v2_25ae7
  %v5_25aee = icmp eq i1 %v12_25ae9, false
  %v0_25b35 = load i32, i32* @ebp, align 4
  br i1 %v5_25aee, label %dec_label_pc_25b35, label %dec_label_pc_25af2

dec_label_pc_25af2:                               ; preds = %dec_label_pc_25ad3
  %v1_25af2 = add i32 %v0_25b35, -64
  %v2_25af2 = inttoptr i32 %v1_25af2 to i32*
  %v3_25af2 = load i32, i32* %v2_25af2, align 4
  %v1_25af8 = call i32 @unknown_4ac38(i32 %v3_25af2)
  %v1_25afd = inttoptr i32 %v1_25af8 to i32*
  %v2_25afd = load i32, i32* %v1_25afd, align 4
  store i32 %v2_25afd, i32* %ebx.global-to-local, align 4
  %v0_25aff = load i32, i32* @ebp, align 4
  %v1_25aff = add i32 %v0_25aff, -64
  %v2_25aff = inttoptr i32 %v1_25aff to i32*
  %v3_25aff = load i32, i32* %v2_25aff, align 4
  %v1_25b05 = call i32 @unknown_4ac38(i32 %v3_25aff)
  %v1_25b0a = inttoptr i32 %v1_25b05 to i32*
  %v2_25b0a = load i32, i32* %v1_25b0a, align 4
  %v0_25b0c = load i32, i32* @ebp, align 4
  %v1_25b0c = add i32 %v0_25b0c, -60
  %v2_25b0c = inttoptr i32 %v1_25b0c to i32*
  %v3_25b0c = load i32, i32* %v2_25b0c, align 4
  %v1_25b0f = add i32 %v0_25b0c, -72
  %v2_25b0f = inttoptr i32 %v1_25b0f to i32*
  %v3_25b0f = load i32, i32* %v2_25b0f, align 4
  %v0_25b16 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25b1e = add i32 %v0_25b0c, -64
  %v2_25b1e = inttoptr i32 %v1_25b1e to i32*
  %v3_25b1e = load i32, i32* %v2_25b1e, align 4
  %v5_25b28 = call i32 @unknown_5039e(i32 %v3_25b0c, i32 %v3_25b1e, i32 %v2_25b0a, i32 %v0_25b16, i32 %v3_25b0f)
  %v0_25b30 = call i32 @function_25d90()
  ret i32 %v0_25b30

dec_label_pc_25b35:                               ; preds = %dec_label_pc_25ad3
  %v1_25b35 = add i32 %v0_25b35, -72
  %v2_25b35 = inttoptr i32 %v1_25b35 to i32*
  %v3_25b35 = load i32, i32* %v2_25b35, align 4
  %v1_25b3c = add i32 %v0_25b35, -15
  %v2_25b42 = call i32 @unknown_5033a(i32 %v1_25b3c, i32 %v3_25b35)
  store i32 %v2_25b42, i32* %ebx.global-to-local, align 4
  %v0_25b49 = load i32, i32* @ebp, align 4
  %v1_25b49 = add i32 %v0_25b49, -24
  %v1_25b4f = call i32 @unknown_506a4(i32 %v1_25b49)
  %v1_25b54 = inttoptr i32 %v1_25b4f to i32*
  %v2_25b54 = load i32, i32* %v1_25b54, align 4
  %v1_25b59 = call i32 @unknown_4b8dc(i32 %v2_25b54)
  %v0_25b60 = load i32, i32* @ebp, align 4
  %v1_25b60 = add i32 %v0_25b60, -64
  %v2_25b60 = inttoptr i32 %v1_25b60 to i32*
  %v3_25b60 = load i32, i32* %v2_25b60, align 4
  %v0_25b63 = load i32, i32* %ebx.global-to-local, align 4
  %v3_25b6e = call i32 @unknown_4295a(i32 %v3_25b60, i32 %v1_25b59, i32 %v0_25b63)
  %v4_25b73 = trunc i32 %v3_25b6e to i8
  %v5_25b73 = icmp eq i8 %v4_25b73, 0
  br i1 %v5_25b73, label %bb108, label %dec_label_pc_25b77

bb108:                                            ; preds = %dec_label_pc_25b35
  %v1_25b75 = call i32 @function_25bea()
  br label %dec_label_pc_25b77

dec_label_pc_25b77:                               ; preds = %bb108, %dec_label_pc_25b35
  %v0_25b77 = load i32, i32* @ebp, align 4
  %v1_25b77 = add i32 %v0_25b77, -24
  %v2_25b77 = inttoptr i32 %v1_25b77 to i32*
  %v3_25b77 = load i32, i32* %v2_25b77, align 4
  %v1_25b7d = call i32 @unknown_506e3(i32 %v3_25b77)
  %v0_25b8b = load i32, i32* @ebp, align 4
  %v1_25b8b = add i32 %v0_25b8b, -24
  %v2_25b8b = inttoptr i32 %v1_25b8b to i32*
  %v3_25b8b = load i32, i32* %v2_25b8b, align 4
  %v1_25b8e = add i32 %v0_25b8b, -60
  %v2_25b8e = inttoptr i32 %v1_25b8e to i32*
  %v3_25b8e = load i32, i32* %v2_25b8e, align 4
  %v1_25b91 = add i32 %v0_25b8b, -72
  %v2_25b91 = inttoptr i32 %v1_25b91 to i32*
  %v3_25b91 = load i32, i32* %v2_25b91, align 4
  %v1_25ba4 = add i32 %v0_25b8b, -64
  %v2_25ba4 = inttoptr i32 %v1_25ba4 to i32*
  %v3_25ba4 = load i32, i32* %v2_25ba4, align 4
  %v5_25bae = call i32 @unknown_5039e(i32 %v3_25b8e, i32 %v3_25ba4, i32 0, i32 %v3_25b8b, i32 %v3_25b91)
  ret i32 %v5_25bae

; uselistorder directives
  uselistorder i32 %v0_25b8b, { 1, 0, 2, 3 }
  uselistorder i32 %v0_25b35, { 1, 2, 0 }
  uselistorder i32 (i32)* @unknown_4ac38, { 2, 1, 0 }
}

define i32 @function_25bba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25bba:
  %eax.global-to-local = alloca i32, align 4
  %v0_25bba = load i32, i32* @ebx, align 4
  %v1_25bba = add i32 %v0_25bba, 1435221069
  %v2_25bba = inttoptr i32 %v1_25bba to i8*
  %v3_25bba = load i8, i8* %v2_25bba, align 1
  %v4_25bba = load i32, i32* @ecx, align 8
  %v5_25bba = trunc i32 %v4_25bba to i8
  %v6_25bba = add i8 %v5_25bba, %v3_25bba
  store i8 %v6_25bba, i8* %v2_25bba, align 1
  %v2_25bc5 = load i32, i32* inttoptr (i32 -1950071413 to i32*), align 4
  store i32 %v2_25bc5, i32* @ebp, align 4
  store i32 270818441, i32* %eax.global-to-local, align 8
  %v0_25bcb = load i32, i32* @ecx, align 8
  store i32 %v0_25bcb, i32* inttoptr (i32 -1950071397 to i32*), align 4
  %v0_25bcf = load i32, i32* @edx, align 4
  %v1_25bcf = load i32, i32* @esp, align 4
  %v2_25bcf = add i32 %v1_25bcf, 8
  %v3_25bcf = inttoptr i32 %v2_25bcf to i32*
  store i32 %v0_25bcf, i32* %v3_25bcf, align 4
  %v0_25bd3 = load i32, i32* @ebp, align 4
  %v1_25bd3 = add i32 %v0_25bd3, -64
  %v2_25bd3 = inttoptr i32 %v1_25bd3 to i32*
  %v3_25bd3 = load i32, i32* %v2_25bd3, align 4
  %v1_25bd6 = load i32, i32* @esp, align 4
  %v2_25bd6 = add i32 %v1_25bd6, 4
  %v3_25bd6 = inttoptr i32 %v2_25bd6 to i32*
  store i32 %v3_25bd3, i32* %v3_25bd6, align 4
  %v0_25bda = load i32, i32* %eax.global-to-local, align 8
  %v1_25bda = load i32, i32* @esp, align 4
  %v2_25bda = inttoptr i32 %v1_25bda to i32*
  store i32 %v0_25bda, i32* %v2_25bda, align 4
  %v5_25bdd = call i32 @unknown_5039e(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v5_25bdd, i32* %eax.global-to-local, align 8
  %v0_25be5 = call i32 @function_25d90()
  store i32 %v0_25be5, i32* %eax.global-to-local, align 8
  ret i32 %v0_25be5
}

define i32 @function_25bea() local_unnamed_addr {
dec_label_pc_25bea:
  %v0_25bea = load i32, i32* @ebp, align 4
  %v1_25bea = add i32 %v0_25bea, -40
  %v1_25bed = add i32 %v0_25bea, -72
  %v2_25bed = inttoptr i32 %v1_25bed to i32*
  %v3_25bed = load i32, i32* %v2_25bed, align 4
  %v1_25bf4 = add i32 %v0_25bea, -64
  %v2_25bf4 = inttoptr i32 %v1_25bf4 to i32*
  %v3_25bf4 = load i32, i32* %v2_25bf4, align 4
  %v3_25bfe = call i32 @unknown_504a0(i32 %v1_25bea, i32 %v3_25bf4, i32 %v3_25bed)
  %v0_25c06 = load i32, i32* @ebp, align 4
  %v1_25c06 = add i32 %v0_25c06, -60
  %v2_25c06 = inttoptr i32 %v1_25c06 to i32*
  %v3_25c06 = load i32, i32* %v2_25c06, align 4
  %v1_25c09 = add i32 %v0_25c06, -40
  %v2_25c09 = inttoptr i32 %v1_25c09 to i32*
  %v3_25c09 = load i32, i32* %v2_25c09, align 4
  %v2_25c0c = inttoptr i32 %v3_25c06 to i32*
  store i32 %v3_25c09, i32* %v2_25c0c, align 4
  %v0_25c0e = call i32 @function_25d90()
  ret i32 %v0_25c0e
}

define i32 @function_25c13() local_unnamed_addr {
dec_label_pc_25c13:
  %ebx.global-to-local = alloca i32, align 4
  %v0_25c13 = load i32, i32* @ebp, align 4
  %v1_25c13 = add i32 %v0_25c13, -72
  %v2_25c13 = inttoptr i32 %v1_25c13 to i32*
  %v3_25c13 = load i32, i32* %v2_25c13, align 4
  %v1_25c1a = add i32 %v0_25c13, -14
  %v2_25c20 = call i32 @unknown_5033a(i32 %v1_25c1a, i32 %v3_25c13)
  store i32 %v2_25c20, i32* %ebx.global-to-local, align 4
  %v0_25c27 = load i32, i32* @ebp, align 4
  %v1_25c27 = add i32 %v0_25c27, -68
  %v2_25c27 = inttoptr i32 %v1_25c27 to i32*
  %v3_25c27 = load i32, i32* %v2_25c27, align 4
  %v1_25c2d = call i32 @unknown_4b8dc(i32 %v3_25c27)
  %v0_25c34 = load i32, i32* @ebp, align 4
  %v1_25c34 = add i32 %v0_25c34, -64
  %v2_25c34 = inttoptr i32 %v1_25c34 to i32*
  %v3_25c34 = load i32, i32* %v2_25c34, align 4
  %v0_25c37 = load i32, i32* %ebx.global-to-local, align 4
  %v3_25c42 = call i32 @unknown_4295a(i32 %v3_25c34, i32 %v1_25c2d, i32 %v0_25c37)
  %v4_25c47 = trunc i32 %v3_25c42 to i8
  %v5_25c47 = icmp eq i8 %v4_25c47, 0
  br i1 %v5_25c47, label %bb, label %dec_label_pc_25c4f

bb:                                               ; preds = %dec_label_pc_25c13
  %v1_25c49 = call i32 @function_25d7b()
  br label %dec_label_pc_25c4f

dec_label_pc_25c4f:                               ; preds = %bb, %dec_label_pc_25c13
  %v0_25c4f = load i32, i32* @ebp, align 4
  %v1_25c4f = add i32 %v0_25c4f, -68
  %v2_25c4f = inttoptr i32 %v1_25c4f to i32*
  %v3_25c4f = load i32, i32* %v2_25c4f, align 4
  %v2_25c52 = add i32 %v0_25c4f, -24
  %v3_25c52 = inttoptr i32 %v2_25c52 to i32*
  store i32 %v3_25c4f, i32* %v3_25c52, align 4
  %v0_25c55 = load i32, i32* @ebp, align 4
  %v1_25c55 = add i32 %v0_25c55, -68
  %v2_25c55 = inttoptr i32 %v1_25c55 to i32*
  %v3_25c55 = load i32, i32* %v2_25c55, align 4
  store i32 %v3_25c55, i32* %ebx.global-to-local, align 4
  %v1_25c58 = add i32 %v0_25c55, -64
  %v2_25c58 = inttoptr i32 %v1_25c58 to i32*
  %v3_25c58 = load i32, i32* %v2_25c58, align 4
  %v1_25c5e = call i32 @unknown_4ac98(i32 %v3_25c58)
  %v1_25c63 = inttoptr i32 %v1_25c5e to i32*
  %v2_25c63 = load i32, i32* %v1_25c63, align 4
  %v0_25c65 = load i32, i32* %ebx.global-to-local, align 4
  %v12_25c65 = icmp eq i32 %v0_25c65, %v2_25c63
  %v5_25c6a = icmp eq i1 %v12_25c65, false
  br i1 %v5_25c6a, label %dec_label_pc_25ca8, label %dec_label_pc_25c6e

dec_label_pc_25c6e:                               ; preds = %dec_label_pc_25c4f
  %v0_25c6e = load i32, i32* @ebp, align 4
  %v1_25c6e = add i32 %v0_25c6e, -64
  %v2_25c6e = inttoptr i32 %v1_25c6e to i32*
  %v3_25c6e = load i32, i32* %v2_25c6e, align 4
  %v1_25c74 = call i32 @unknown_4ac98(i32 %v3_25c6e)
  %v1_25c79 = inttoptr i32 %v1_25c74 to i32*
  %v2_25c79 = load i32, i32* %v1_25c79, align 4
  %v0_25c7b = load i32, i32* @ebp, align 4
  %v1_25c7b = add i32 %v0_25c7b, -60
  %v2_25c7b = inttoptr i32 %v1_25c7b to i32*
  %v3_25c7b = load i32, i32* %v2_25c7b, align 4
  %v1_25c7e = add i32 %v0_25c7b, -72
  %v2_25c7e = inttoptr i32 %v1_25c7e to i32*
  %v3_25c7e = load i32, i32* %v2_25c7e, align 4
  %v1_25c91 = add i32 %v0_25c7b, -64
  %v2_25c91 = inttoptr i32 %v1_25c91 to i32*
  %v3_25c91 = load i32, i32* %v2_25c91, align 4
  %v5_25c9b = call i32 @unknown_5039e(i32 %v3_25c7b, i32 %v3_25c91, i32 0, i32 %v2_25c79, i32 %v3_25c7e)
  %v0_25ca3 = call i32 @function_25d90()
  ret i32 %v0_25ca3

dec_label_pc_25ca8:                               ; preds = %dec_label_pc_25c4f
  %v1_25c67 = zext i1 %v12_25c65 to i32
  %v3_25c67 = and i32 %v2_25c63, -256
  %v4_25c67 = or i32 %v1_25c67, %v3_25c67
  ret i32 %v4_25c67

; uselistorder directives
  uselistorder i1 %v12_25c65, { 1, 0 }
  uselistorder i32 %v2_25c63, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4ac98, { 3, 2, 1, 0 }
}

define i32 @function_25caa(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25caa:
  %ebx.global-to-local = alloca i32, align 4
  %tmp10 = call i8* @__decompiler_undefined_function_6()
  %v0_25caa = call i32 @unknown_e8266138()
  %v23_25caf = ptrtoint i8* %tmp10 to i32
  %v1_25cb0 = trunc i32 %v23_25caf to i8
  store i8 %v1_25cb0, i8* %arg1, align 1
  %v1_25cb1 = trunc i32 %v23_25caf to i8
  %v4_25cb1 = load i8, i8* %tmp10, align 1
  %v5_25cb1 = add i8 %v1_25cb1, %v4_25cb1
  %v20_25cb1 = zext i8 %v5_25cb1 to i32
  %v22_25cb1 = and i32 %v23_25caf, -256
  %v23_25cb1 = or i32 %v20_25cb1, %v22_25cb1
  %v1_25cb3 = inttoptr i32 %v23_25cb1 to i32*
  %v2_25cb3 = load i32, i32* %v1_25cb3, align 4
  %v1_25cb8 = call i32 @unknown_4b8dc(i32 %v2_25cb3)
  store i32 %v1_25cb8, i32* %ebx.global-to-local, align 4
  %v0_25cbf = load i32, i32* @ebp, align 4
  %v1_25cbf = add i32 %v0_25cbf, -72
  %v2_25cbf = inttoptr i32 %v1_25cbf to i32*
  %v3_25cbf = load i32, i32* %v2_25cbf, align 4
  %v1_25cc6 = add i32 %v0_25cbf, -13
  %v2_25ccc = call i32 @unknown_5033a(i32 %v1_25cc6, i32 %v3_25cbf)
  %v0_25cd1 = load i32, i32* @ebp, align 4
  %v1_25cd1 = add i32 %v0_25cd1, -64
  %v2_25cd1 = inttoptr i32 %v1_25cd1 to i32*
  %v3_25cd1 = load i32, i32* %v2_25cd1, align 4
  %v0_25cd4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_25cdf = call i32 @unknown_4295a(i32 %v3_25cd1, i32 %v2_25ccc, i32 %v0_25cd4)
  %v4_25ce4 = trunc i32 %v3_25cdf to i8
  %v5_25ce4 = icmp eq i8 %v4_25ce4, 0
  %v0_25d55 = load i32, i32* @ebp, align 4
  br i1 %v5_25ce4, label %dec_label_pc_25d55, label %dec_label_pc_25ce8

dec_label_pc_25ce8:                               ; preds = %dec_label_pc_25caa
  %v1_25ce8 = add i32 %v0_25d55, -68
  %v2_25ce8 = inttoptr i32 %v1_25ce8 to i32*
  %v3_25ce8 = load i32, i32* %v2_25ce8, align 4
  %v1_25cee = call i32 @unknown_506e3(i32 %v3_25ce8)
  %v1_25cf3 = icmp eq i32 %v1_25cee, 0
  %v5_25cf8 = icmp eq i1 %v1_25cf3, false
  %v0_25d29 = load i32, i32* @ebp, align 4
  br i1 %v5_25cf8, label %dec_label_pc_25d29, label %dec_label_pc_25cfc

dec_label_pc_25cfc:                               ; preds = %dec_label_pc_25ce8
  %v1_25cfc = add i32 %v0_25d29, -68
  %v2_25cfc = inttoptr i32 %v1_25cfc to i32*
  %v3_25cfc = load i32, i32* %v2_25cfc, align 4
  %v1_25cff = add i32 %v0_25d29, -60
  %v2_25cff = inttoptr i32 %v1_25cff to i32*
  %v3_25cff = load i32, i32* %v2_25cff, align 4
  %v1_25d02 = add i32 %v0_25d29, -72
  %v2_25d02 = inttoptr i32 %v1_25d02 to i32*
  %v3_25d02 = load i32, i32* %v2_25d02, align 4
  %v1_25d15 = add i32 %v0_25d29, -64
  %v2_25d15 = inttoptr i32 %v1_25d15 to i32*
  %v3_25d15 = load i32, i32* %v2_25d15, align 4
  %v5_25d1f = call i32 @unknown_5039e(i32 %v3_25cff, i32 %v3_25d15, i32 0, i32 %v3_25cfc, i32 %v3_25d02)
  %v0_25d27 = call i32 @function_25d90()
  ret i32 %v0_25d27

dec_label_pc_25d29:                               ; preds = %dec_label_pc_25ce8
  %v1_25d29 = add i32 %v0_25d29, -24
  %v2_25d29 = inttoptr i32 %v1_25d29 to i32*
  %v3_25d29 = load i32, i32* %v2_25d29, align 4
  %v1_25d2f = add i32 %v0_25d29, -60
  %v2_25d2f = inttoptr i32 %v1_25d2f to i32*
  %v3_25d2f = load i32, i32* %v2_25d2f, align 4
  %v1_25d32 = add i32 %v0_25d29, -72
  %v2_25d32 = inttoptr i32 %v1_25d32 to i32*
  %v3_25d32 = load i32, i32* %v2_25d32, align 4
  store i32 %v3_25d32, i32* %ebx.global-to-local, align 4
  %v1_25d41 = add i32 %v0_25d29, -64
  %v2_25d41 = inttoptr i32 %v1_25d41 to i32*
  %v3_25d41 = load i32, i32* %v2_25d41, align 4
  %v5_25d4b = call i32 @unknown_5039e(i32 %v3_25d2f, i32 %v3_25d41, i32 %v3_25d29, i32 %v3_25d29, i32 %v3_25d32)
  %v0_25d53 = call i32 @function_25d90()
  ret i32 %v0_25d53

dec_label_pc_25d55:                               ; preds = %dec_label_pc_25caa
  %v1_25d55 = add i32 %v0_25d55, -32
  %v1_25d58 = add i32 %v0_25d55, -72
  %v2_25d58 = inttoptr i32 %v1_25d58 to i32*
  %v3_25d58 = load i32, i32* %v2_25d58, align 4
  %v1_25d5f = add i32 %v0_25d55, -64
  %v2_25d5f = inttoptr i32 %v1_25d5f to i32*
  %v3_25d5f = load i32, i32* %v2_25d5f, align 4
  %v3_25d69 = call i32 @unknown_504a0(i32 %v1_25d55, i32 %v3_25d5f, i32 %v3_25d58)
  %v0_25d71 = load i32, i32* @ebp, align 4
  %v1_25d71 = add i32 %v0_25d71, -60
  %v2_25d71 = inttoptr i32 %v1_25d71 to i32*
  %v3_25d71 = load i32, i32* %v2_25d71, align 4
  %v1_25d74 = add i32 %v0_25d71, -32
  %v2_25d74 = inttoptr i32 %v1_25d74 to i32*
  %v3_25d74 = load i32, i32* %v2_25d74, align 4
  %v2_25d77 = inttoptr i32 %v3_25d71 to i32*
  store i32 %v3_25d74, i32* %v2_25d77, align 4
  %v0_25d79 = call i32 @function_25d90()
  ret i32 %v0_25d79

; uselistorder directives
  uselistorder i32 %v3_25d29, { 1, 0 }
  uselistorder i32 %v0_25d29, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_25d55, { 0, 2, 3, 1 }
  uselistorder i32 %v23_25caf, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_504a0, { 0, 2, 1 }
  uselistorder i32 ()* @function_25d90, { 2, 1, 0, 8, 7, 3, 6, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_5039e, { 1, 0, 6, 2, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @unknown_4295a, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @unknown_5033a, { 0, 4, 3, 2, 1 }
}

define i32 @function_25d7b() local_unnamed_addr {
dec_label_pc_25d7b:
  %v0_25d7b = load i32, i32* @ebp, align 4
  %v1_25d7b = add i32 %v0_25d7b, -60
  %v2_25d7b = inttoptr i32 %v1_25d7b to i32*
  %v3_25d7b = load i32, i32* %v2_25d7b, align 4
  %v1_25d7e = add i32 %v0_25d7b, -68
  %v2_25d88 = call i32 @unknown_50754(i32 %v3_25d7b, i32 %v1_25d7e)
  ret i32 %v2_25d88
}

define i32 @function_25d90() local_unnamed_addr {
dec_label_pc_25d90:
  %v0_25d90 = load i32, i32* @ebp, align 4
  %v1_25d90 = add i32 %v0_25d90, -60
  %v2_25d90 = inttoptr i32 %v1_25d90 to i32*
  %v3_25d90 = load i32, i32* %v2_25d90, align 4
  store i32 %v3_25d90, i32* @eax, align 8
  %v1_25d93 = add i32 %v0_25d90, -12
  %v2_25d93 = inttoptr i32 %v1_25d93 to i32*
  %v3_25d93 = load i32, i32* %v2_25d93, align 4
  %v1_25d96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25d96 = xor i32 %v1_25d96, %v3_25d93
  %v3_25d96 = icmp eq i32 %v2_25d96, 0
  store i32 %v2_25d96, i32* @edx, align 4
  br i1 %v3_25d96, label %bb, label %dec_label_pc_25d9f

bb:                                               ; preds = %dec_label_pc_25d90
  %v1_25d9d = call i32 @function_25da4()
  br label %dec_label_pc_25d9f

dec_label_pc_25d9f:                               ; preds = %bb, %dec_label_pc_25d90
  %v2_25d9d = phi i32 [ %v1_25d9d, %bb ], [ %v3_25d90, %dec_label_pc_25d90 ]
  ret i32 %v2_25d9d
}

define i32 @function_25da4() local_unnamed_addr {
dec_label_pc_25da4:
  %v0_25da8 = load i32, i32* @eax, align 8
  ret i32 %v0_25da8
}

define i32 @function_25daa(i32 %arg1) local_unnamed_addr {
dec_label_pc_25daa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKSsEEEENT_11result_typeERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25dac:
  %stack_var_-20 = alloca i32, align 4
  %v2_25dd0 = ptrtoint i32* %stack_var_-20 to i32
  %v2_25dd6 = call i32 @unknown_50bba(i32 %v2_25dd0, i32 %arg2)
  %v2_25de8 = call i32 @unknown_50bf2(i32 %arg1, i32 %v2_25dd0)
  store i32 %v2_25de8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25df9

bb:                                               ; preds = %dec_label_pc_25dac
  %v1_25df7 = call i32 @function_25dfe()
  br label %dec_label_pc_25df9

dec_label_pc_25df9:                               ; preds = %bb, %dec_label_pc_25dac
  %v2_25df7 = phi i32 [ %v1_25df7, %bb ], [ %v2_25de8, %dec_label_pc_25dac ]
  ret i32 %v2_25df7
}

define i32 @function_25dfe() local_unnamed_addr {
dec_label_pc_25dfe:
  %v0_25dff = load i32, i32* @eax, align 8
  ret i32 %v0_25dff
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEC1EPKSt13_Rb_tree_nodeIS7_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25e00:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25e31

bb:                                               ; preds = %dec_label_pc_25e00
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_25e2f = call i32 @function_25e36(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_25e31

dec_label_pc_25e31:                               ; preds = %bb, %dec_label_pc_25e00
  %v4_25e2f = phi i32 [ %v3_25e2f, %bb ], [ 0, %dec_label_pc_25e00 ]
  ret i32 %v4_25e2f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_25e36(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25e36:
  %v0_25e37 = load i32, i32* @eax, align 8
  ret i32 %v0_25e37
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e38:
  %v1_25e52 = add i32 %arg1, 8
  %v2_25e52 = inttoptr i32 %v1_25e52 to i32*
  %v3_25e52 = load i32, i32* %v2_25e52, align 4
  store i32 %v3_25e52, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25e61

bb:                                               ; preds = %dec_label_pc_25e38
  %v2_25e5f = call i32 @function_25e66(i32 %arg1)
  br label %dec_label_pc_25e61

dec_label_pc_25e61:                               ; preds = %bb, %dec_label_pc_25e38
  %v3_25e5f = phi i32 [ %v2_25e5f, %bb ], [ %v3_25e52, %dec_label_pc_25e38 ]
  ret i32 %v3_25e5f
}

define i32 @function_25e66(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e66:
  %v0_25e67 = load i32, i32* @eax, align 8
  ret i32 %v0_25e67
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e68:
  %v1_25e82 = add i32 %arg1, 4
  store i32 %v1_25e82, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25e91

bb:                                               ; preds = %dec_label_pc_25e68
  %v2_25e8f = call i32 @function_25e96(i32 %arg1)
  br label %dec_label_pc_25e91

dec_label_pc_25e91:                               ; preds = %bb, %dec_label_pc_25e68
  %v3_25e8f = phi i32 [ %v2_25e8f, %bb ], [ %v1_25e82, %dec_label_pc_25e68 ]
  ret i32 %v3_25e8f
}

define i32 @function_25e96(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e96:
  %v0_25e97 = load i32, i32* @eax, align 8
  ret i32 %v0_25e97
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS7_ESH_RS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_25e98:
  %v10_25f17117126 = icmp eq i32 %arg3, 0
  %v1_25f1b118127 = icmp eq i1 %v10_25f17117126, false
  %v5_25f1e122129 = icmp eq i1 %v1_25f1b118127, false
  %v1_25f20123130 = icmp eq i1 %v5_25f1e122129, false
  br i1 %v1_25f20123130, label %dec_label_pc_25ec9.lr.ph, label %dec_label_pc_25f22

dec_label_pc_25ec9.lr.ph:                         ; preds = %dec_label_pc_25e98, %dec_label_pc_25ef3
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_25ef3 ], [ %arg4, %dec_label_pc_25e98 ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_25eff, %dec_label_pc_25ef3 ], [ %arg3, %dec_label_pc_25e98 ]
  br label %dec_label_pc_25ec9

dec_label_pc_25ec9:                               ; preds = %dec_label_pc_25ec9.lr.ph, %dec_label_pc_25f09
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_25ec9.lr.ph ], [ %v1_25f0f, %dec_label_pc_25f09 ]
  %v1_25ecf = call i32 @unknown_50d4c(i32 %stack_var_-40.0124)
  %v3_25ee7 = call i32 @unknown_42e62(i32 %arg2, i32 %v1_25ecf, i32 %arg5)
  %v1_25eec = xor i32 %v3_25ee7, 1
  %v4_25eec = trunc i32 %v1_25eec to i8
  %v5_25eef = icmp eq i8 %v4_25eec, 0
  br i1 %v5_25eef, label %dec_label_pc_25f09, label %dec_label_pc_25ef3

dec_label_pc_25ef3:                               ; preds = %dec_label_pc_25ec9
  %v1_25eff = call i32 @unknown_50d90(i32 %stack_var_-40.0124)
  %v10_25f17117 = icmp eq i32 %v1_25eff, 0
  %v1_25f1b118 = icmp eq i1 %v10_25f17117, false
  %v5_25f1e122 = icmp eq i1 %v1_25f1b118, false
  %v1_25f20123 = icmp eq i1 %v5_25f1e122, false
  br i1 %v1_25f20123, label %dec_label_pc_25ec9.lr.ph, label %dec_label_pc_25f22

dec_label_pc_25f09:                               ; preds = %dec_label_pc_25ec9
  %v1_25f0f = call i32 @unknown_50beb(i32 %stack_var_-40.0124)
  %v10_25f17 = icmp eq i32 %v1_25f0f, 0
  %v1_25f1b = icmp eq i1 %v10_25f17, false
  %v5_25f1e = icmp eq i1 %v1_25f1b, false
  %v1_25f20 = icmp eq i1 %v5_25f1e, false
  br i1 %v1_25f20, label %dec_label_pc_25ec9, label %dec_label_pc_25f22

dec_label_pc_25f22:                               ; preds = %dec_label_pc_25f09, %dec_label_pc_25e98, %dec_label_pc_25ef3
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_25e98 ], [ %stack_var_-40.0124, %dec_label_pc_25ef3 ], [ %stack_var_-44.0.ph132, %dec_label_pc_25f09 ]
  %v2_25f2f = call i32 @unknown_4bc98(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25f43

bb:                                               ; preds = %dec_label_pc_25f22
  %v1_25f41 = call i32 @function_25f48()
  br label %dec_label_pc_25f43

dec_label_pc_25f43:                               ; preds = %bb, %dec_label_pc_25f22
  %v3_25f41 = phi i32 [ %v1_25f41, %bb ], [ %arg1, %dec_label_pc_25f22 ]
  ret i32 %v3_25f41

; uselistorder directives
  uselistorder i32 %v1_25eff, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_25f22, { 0, 2, 1 }
  uselistorder label %dec_label_pc_25ec9, { 1, 0 }
  uselistorder label %dec_label_pc_25ec9.lr.ph, { 1, 0 }
}

define i32 @function_25f48() local_unnamed_addr {
dec_label_pc_25f48:
  %v0_25f49 = load i32, i32* @eax, align 8
  ret i32 %v0_25f49
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f4c:
  %stack_var_-17 = alloca i32, align 4
  %v1_25f69 = call i32 @unknown_50e74(i32 %arg1)
  %v2_25f72 = ptrtoint i32* %stack_var_-17 to i32
  %v2_25f78 = call i32 @unknown_508f6(i32 %v2_25f72, i32 %v1_25f69)
  store i32 %v2_25f78, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25f89

bb:                                               ; preds = %dec_label_pc_25f4c
  %v1_25f87 = call i32 @function_25f8e()
  br label %dec_label_pc_25f89

dec_label_pc_25f89:                               ; preds = %bb, %dec_label_pc_25f4c
  %v2_25f87 = phi i32 [ %v1_25f87, %bb ], [ %v2_25f78, %dec_label_pc_25f4c ]
  ret i32 %v2_25f87
}

define i32 @function_25f8e() local_unnamed_addr {
dec_label_pc_25f8e:
  %v0_25f8f = load i32, i32* @eax, align 8
  ret i32 %v0_25f8f
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKS9_EEEENT_11result_typeERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25f90:
  %stack_var_-20 = alloca i32, align 4
  %v2_25fb4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_25fba = call i32 @unknown_50ee8(i32 %v2_25fb4, i32 %arg2)
  %v2_25fcc = call i32 @unknown_50f20(i32 %arg1, i32 %v2_25fb4)
  store i32 %v2_25fcc, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_25fdd

bb:                                               ; preds = %dec_label_pc_25f90
  %v1_25fdb = call i32 @function_25fe2()
  br label %dec_label_pc_25fdd

dec_label_pc_25fdd:                               ; preds = %bb, %dec_label_pc_25f90
  %v2_25fdb = phi i32 [ %v1_25fdb, %bb ], [ %v2_25fcc, %dec_label_pc_25f90 ]
  ret i32 %v2_25fdb
}

define i32 @function_25fe2() local_unnamed_addr {
dec_label_pc_25fe2:
  %v0_25fe3 = load i32, i32* @eax, align 8
  ret i32 %v0_25fe3
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25fe4:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2600a

bb:                                               ; preds = %dec_label_pc_25fe4
  %v2_26008 = call i32 @function_2600f(i32 %arg1)
  br label %dec_label_pc_2600a

dec_label_pc_2600a:                               ; preds = %bb, %dec_label_pc_25fe4
  %v3_26008 = phi i32 [ %v2_26008, %bb ], [ %arg1, %dec_label_pc_25fe4 ]
  ret i32 %v3_26008
}

define i32 @function_2600f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2600f:
  %v0_26010 = load i32, i32* @eax, align 8
  ret i32 %v0_26010
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_26012:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_2602f = call i32 @unknown_51010(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_26040 = add i32 %tmp100, 4
  %v2_26040 = inttoptr i32 %v1_26040 to i32*
  store i32 0, i32* %v2_26040, align 4
  %v1_2604a = add i32 %tmp100, 8
  %v2_2604a = inttoptr i32 %v1_2604a to i32*
  store i32 0, i32* %v2_2604a, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2605d

bb:                                               ; preds = %dec_label_pc_26012
  %v1_2605b = call i32 @function_26062()
  br label %dec_label_pc_2605d

dec_label_pc_2605d:                               ; preds = %bb, %dec_label_pc_26012
  %v2_2605b = phi i32 [ %v1_2605b, %bb ], [ 0, %dec_label_pc_26012 ]
  ret i32 %v2_2605b

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_26062() local_unnamed_addr {
dec_label_pc_26062:
  %v0_26063 = load i32, i32* @eax, align 8
  ret i32 %v0_26063
}

define i32 @_ZNSaIN11json_spirit10Value_implINS_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26064:
  %v1_26081 = call i32 @unknown_51098(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26092

bb:                                               ; preds = %dec_label_pc_26064
  %v1_26090 = call i32 @function_26097()
  br label %dec_label_pc_26092

dec_label_pc_26092:                               ; preds = %bb, %dec_label_pc_26064
  %v2_26090 = phi i32 [ %v1_26090, %bb ], [ 0, %dec_label_pc_26064 ]
  ret i32 %v2_26090
}

define i32 @function_26097() local_unnamed_addr {
dec_label_pc_26097:
  %v0_26098 = load i32, i32* @eax, align 8
  ret i32 %v0_26098
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE13_M_deallocateEPS4_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2609a:
  ret i32 %arg1
}

define i32 @function_260d2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_260d2:
  %v0_260d2 = load i32, i32* @eax, align 8
  %v11_260d2 = and i32 %v0_260d2, -252
  %v1_260d7 = call i32 @unknown_510f8(i32 %v11_260d2)
  %v0_260dc = load i32, i32* @ebp, align 4
  %v1_260dc = add i32 %v0_260dc, -12
  %v2_260dc = inttoptr i32 %v1_260dc to i32*
  %v3_260dc = load i32, i32* %v2_260dc, align 4
  %v1_260df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_260df = xor i32 %v1_260df, %v3_260dc
  %v3_260df = icmp eq i32 %v2_260df, 0
  store i32 %v2_260df, i32* @eax, align 8
  br i1 %v3_260df, label %bb, label %dec_label_pc_260e8

bb:                                               ; preds = %dec_label_pc_260d2
  %v1_260e6 = call i32 @function_260ed()
  br label %dec_label_pc_260e8

dec_label_pc_260e8:                               ; preds = %bb, %dec_label_pc_260d2
  %v2_260e6 = phi i32 [ %v1_260e6, %bb ], [ %v2_260df, %dec_label_pc_260d2 ]
  ret i32 %v2_260e6
}

define i32 @function_260ed() local_unnamed_addr {
dec_label_pc_260ed:
  %v0_260ee = load i32, i32* @eax, align 8
  ret i32 %v0_260ee
}

define i32 @_ZSt8_DestroyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEEEvT_S6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_260ef:
  %v2_26119 = call i32 @unknown_5118e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2612a

bb:                                               ; preds = %dec_label_pc_260ef
  %v1_26128 = call i32 @function_2612f()
  br label %dec_label_pc_2612a

dec_label_pc_2612a:                               ; preds = %bb, %dec_label_pc_260ef
  %v2_26128 = phi i32 [ %v1_26128, %bb ], [ 0, %dec_label_pc_260ef ]
  ret i32 %v2_26128
}

define i32 @function_2612f() local_unnamed_addr {
dec_label_pc_2612f:
  %v0_26130 = load i32, i32* @eax, align 8
  ret i32 %v0_26130
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE13_Rb_tree_implIS7_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26132:
  %v1_2614f = call i32 @unknown_51228(i32 %arg1)
  %v1_26157 = add i32 %arg1, 4
  %v2_26157 = inttoptr i32 %v1_26157 to i32*
  store i32 0, i32* %v2_26157, align 4
  %v1_26161 = add i32 %arg1, 8
  %v2_26161 = inttoptr i32 %v1_26161 to i32*
  store i32 0, i32* %v2_26161, align 4
  %v1_2616b = add i32 %arg1, 12
  %v2_2616b = inttoptr i32 %v1_2616b to i32*
  store i32 0, i32* %v2_2616b, align 4
  %v1_26175 = add i32 %arg1, 16
  %v2_26175 = inttoptr i32 %v1_26175 to i32*
  store i32 0, i32* %v2_26175, align 4
  %v1_2617f = add i32 %arg1, 20
  %v2_2617f = inttoptr i32 %v1_2617f to i32*
  store i32 0, i32* %v2_2617f, align 4
  %v1_2618c = call i32 @unknown_5125e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2619d

bb:                                               ; preds = %dec_label_pc_26132
  %v1_2619b = call i32 @function_261a2()
  br label %dec_label_pc_2619d

dec_label_pc_2619d:                               ; preds = %bb, %dec_label_pc_26132
  %v2_2619b = phi i32 [ %v1_2619b, %bb ], [ 0, %dec_label_pc_26132 ]
  ret i32 %v2_2619b

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_261a2() local_unnamed_addr {
dec_label_pc_261a2:
  %v0_261a3 = load i32, i32* @eax, align 8
  ret i32 %v0_261a3
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256xEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_261a4:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_261c7

bb:                                               ; preds = %dec_label_pc_261a4
  %v2_261c5 = call i32 @function_261cc(i32 %arg1)
  br label %dec_label_pc_261c7

dec_label_pc_261c7:                               ; preds = %bb, %dec_label_pc_261a4
  %v3_261c5 = phi i32 [ %v2_261c5, %bb ], [ 0, %dec_label_pc_261a4 ]
  ret i32 %v3_261c5
}

define i32 @function_261cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_261cc:
  %v0_261cd = load i32, i32* @eax, align 8
  ret i32 %v0_261cd
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_261ce:
  %v1_261e8 = add i32 %arg1, 12
  %v2_261e8 = inttoptr i32 %v1_261e8 to i32*
  %v3_261e8 = load i32, i32* %v2_261e8, align 4
  store i32 %v3_261e8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_261f7

bb:                                               ; preds = %dec_label_pc_261ce
  %v2_261f5 = call i32 @function_261fc(i32 %arg1)
  br label %dec_label_pc_261f7

dec_label_pc_261f7:                               ; preds = %bb, %dec_label_pc_261ce
  %v3_261f5 = phi i32 [ %v2_261f5, %bb ], [ %v3_261e8, %dec_label_pc_261ce ]
  ret i32 %v3_261f5
}

define i32 @function_261fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_261fc:
  %v0_261fd = load i32, i32* @eax, align 8
  ret i32 %v0_261fd
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_261fe:
  %v1_26218 = add i32 %arg1, 8
  %v2_26218 = inttoptr i32 %v1_26218 to i32*
  %v3_26218 = load i32, i32* %v2_26218, align 4
  store i32 %v3_26218, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26227

bb:                                               ; preds = %dec_label_pc_261fe
  %v2_26225 = call i32 @function_2622c(i32 %arg1)
  br label %dec_label_pc_26227

dec_label_pc_26227:                               ; preds = %bb, %dec_label_pc_261fe
  %v3_26225 = phi i32 [ %v2_26225, %bb ], [ %v3_26218, %dec_label_pc_261fe ]
  ret i32 %v3_26225
}

define i32 @function_2622c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2622c:
  %v0_2622d = load i32, i32* @eax, align 8
  ret i32 %v0_2622d
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2622e:
  %v1_2624f = add i32 %arg2, 16
  ret i32 %v1_2624f
}

define i32 @function_26258(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26258:
  %v0_26258 = load i32, i32* @eax, align 8
  %v5_26258 = mul i32 %v0_26258, 2
  %v20_26258 = and i32 %v5_26258, 254
  %v22_26258 = and i32 %v0_26258, -256
  %v23_26258 = or i32 %v20_26258, %v22_26258
  ret i32 %v23_26258

; uselistorder directives
  uselistorder i32 %v0_26258, { 1, 0 }
}

define i32 @function_2625a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2625a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2625a = load i32, i32* @eax, align 8
  store i32 %v0_2625a, i32* %ebx.global-to-local, align 4
  %v0_2625c = load i32, i32* @ebp, align 4
  %v1_2625c = add i32 %v0_2625c, -13
  %v1_2625f = add i32 %v0_2625c, -28
  %v2_2625f = inttoptr i32 %v1_2625f to i32*
  %v3_2625f = load i32, i32* %v2_2625f, align 4
  %v2_26269 = call i32 @unknown_513b0(i32 %v1_2625c, i32 %v3_2625f)
  %v0_26271 = load i32, i32* %ebx.global-to-local, align 4
  %v0_26275 = load i32, i32* @ebp, align 4
  %v1_26275 = add i32 %v0_26275, -13
  %v2_2627b = call i32 @unknown_5148c(i32 %v1_26275, i32 %v0_26271)
  %v0_26280 = load i32, i32* @ebp, align 4
  %v1_26280 = add i32 %v0_26280, -13
  %v1_26286 = call i32 @unknown_51400(i32 %v1_26280)
  %v0_2628b = load i32, i32* @ebp, align 4
  %v1_2628b = add i32 %v0_2628b, -32
  %v2_2628b = inttoptr i32 %v1_2628b to i32*
  %v3_2628b = load i32, i32* %v2_2628b, align 4
  %v1_26292 = add i32 %v0_2628b, -28
  %v2_26292 = inttoptr i32 %v1_26292 to i32*
  %v3_26292 = load i32, i32* %v2_26292, align 4
  %v2_26298 = call i32 @unknown_514c8(i32 %v3_26292, i32 %v3_2628b)
  %v0_2629d = load i32, i32* @ebp, align 4
  %v1_2629d = add i32 %v0_2629d, -12
  %v2_2629d = inttoptr i32 %v1_2629d to i32*
  %v3_2629d = load i32, i32* %v2_2629d, align 4
  %v1_262a0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_262a0 = xor i32 %v1_262a0, %v3_2629d
  %v3_262a0 = icmp eq i32 %v2_262a0, 0
  store i32 %v2_262a0, i32* @eax, align 8
  br i1 %v3_262a0, label %bb, label %dec_label_pc_262a9

bb:                                               ; preds = %dec_label_pc_2625a
  %v1_262a7 = call i32 @function_262ae()
  br label %dec_label_pc_262a9

dec_label_pc_262a9:                               ; preds = %bb, %dec_label_pc_2625a
  %v2_262a7 = phi i32 [ %v1_262a7, %bb ], [ %v2_262a0, %dec_label_pc_2625a ]
  ret i32 %v2_262a7
}

define i32 @function_262ae() local_unnamed_addr {
dec_label_pc_262ae:
  %v0_262b2 = load i32, i32* @eax, align 8
  ret i32 %v0_262b2
}

define i32 @_ZN5boost6detail13addr_impl_refISt6vectorI12CTransactionSaIS3_EEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_262b4:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_262e5

bb:                                               ; preds = %dec_label_pc_262b4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_262e3 = call i32 @function_262ea(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_262e5

dec_label_pc_262e5:                               ; preds = %bb, %dec_label_pc_262b4
  %v4_262e3 = phi i32 [ %v3_262e3, %bb ], [ 0, %dec_label_pc_262b4 ]
  ret i32 %v4_262e3

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_262ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_262ea:
  %v0_262eb = load i32, i32* @eax, align 8
  ret i32 %v0_262eb
}

define i32 @_ZNK5boost6detail13addr_impl_refISt6vectorI12CTransactionSaIS3_EEEcvRS5_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_262ec:
  %v2_26306 = load i32, i32* %arg1, align 4
  store i32 %v2_26306, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26314

bb:                                               ; preds = %dec_label_pc_262ec
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_26312 = call i32 @function_26319(i32 %tmp100)
  br label %dec_label_pc_26314

dec_label_pc_26314:                               ; preds = %bb, %dec_label_pc_262ec
  %v3_26312 = phi i32 [ %v2_26312, %bb ], [ %v2_26306, %dec_label_pc_262ec ]
  ret i32 %v3_26312

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26319(i32 %arg1) local_unnamed_addr {
dec_label_pc_26319:
  %v4_26319 = load i32, i32* @eax, align 8
  ret i32 %v4_26319
}

define i32 @function_2631a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2631a:
  %v0_2631a = load i32, i32* @eax, align 8
  ret i32 %v0_2631a
}

define i32 @_ZN5boost6detail14addressof_implISt6vectorI12CTransactionSaIS3_EEE1fERS5_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2631b:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26347

bb:                                               ; preds = %dec_label_pc_2631b
  %v3_26345 = call i32 @function_2634c(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_26347

dec_label_pc_26347:                               ; preds = %bb, %dec_label_pc_2631b
  %v4_26345 = phi i32 [ %v3_26345, %bb ], [ %arg1, %dec_label_pc_2631b ]
  ret i32 %v4_26345
}

define i32 @function_2634c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2634c:
  %v0_2634d = load i32, i32* @eax, align 8
  ret i32 %v0_2634d
}

define i32 @_ZN5boost12range_detail11range_beginISt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2634e:
  ret i32 %arg1
}

define i32 @function_2637a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2637a:
  %edx.global-to-local = alloca i32, align 4
  %v0_2637a = load i32, i32* @edx, align 4
  %v1_2637a = and i32 %v0_2637a, -256
  %v2_2637a = or i32 %v1_2637a, 2
  store i32 %v2_2637a, i32* %edx.global-to-local, align 4
  %v0_2637c = load i32, i32* @ebx, align 4
  %v1_2637c = add i32 %v0_2637c, 1166738668
  %v2_2637c = inttoptr i32 %v1_2637c to i8*
  %v3_2637c = load i8, i8* %v2_2637c, align 1
  %v4_2637c = load i32, i32* @eax, align 8
  %v5_2637c = trunc i32 %v4_2637c to i8
  %v6_2637c = add i8 %v5_2637c, %v3_2637c
  store i8 %v6_2637c, i8* %v2_2637c, align 1
  %v0_26386 = load i32, i32* %edx.global-to-local, align 4
  %v1_26386 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26386 = xor i32 %v1_26386, %v0_26386
  %v3_26386 = icmp eq i32 %v2_26386, 0
  store i32 %v2_26386, i32* %edx.global-to-local, align 4
  br i1 %v3_26386, label %bb, label %dec_label_pc_2637a.dec_label_pc_2638f_crit_edge

dec_label_pc_2637a.dec_label_pc_2638f_crit_edge:  ; preds = %dec_label_pc_2637a
  %v2_2638d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2638f

bb:                                               ; preds = %dec_label_pc_2637a
  %v1_2638d = call i32 @function_26394()
  br label %dec_label_pc_2638f

dec_label_pc_2638f:                               ; preds = %dec_label_pc_2637a.dec_label_pc_2638f_crit_edge, %bb
  %v2_2638d = phi i32 [ %v2_2638d.pre, %dec_label_pc_2637a.dec_label_pc_2638f_crit_edge ], [ %v1_2638d, %bb ]
  ret i32 %v2_2638d

; uselistorder directives
  uselistorder label %dec_label_pc_2638f, { 1, 0 }
}

define i32 @function_26394() local_unnamed_addr {
dec_label_pc_26394:
  %v0_26395 = load i32, i32* @eax, align 8
  ret i32 %v0_26395
}

define i32 @_ZN5boost12range_detail9range_endISt6vectorI12CTransactionSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26398:
  %v2_263c2 = call i32 @unknown_516c4(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_263d9

bb:                                               ; preds = %dec_label_pc_26398
  %v1_263d7 = call i32 @function_263de()
  br label %dec_label_pc_263d9

dec_label_pc_263d9:                               ; preds = %bb, %dec_label_pc_26398
  %v2_263d7 = phi i32 [ %v1_263d7, %bb ], [ %arg1, %dec_label_pc_26398 ]
  ret i32 %v2_263d7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_263de() local_unnamed_addr {
dec_label_pc_263de:
  %v0_263df = load i32, i32* @eax, align 8
  ret i32 %v0_263df
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_263e2:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26408

bb:                                               ; preds = %dec_label_pc_263e2
  %v2_26406 = call i32 @function_2640d(i32 %arg1)
  br label %dec_label_pc_26408

dec_label_pc_26408:                               ; preds = %bb, %dec_label_pc_263e2
  %v3_26406 = phi i32 [ %v2_26406, %bb ], [ %arg1, %dec_label_pc_263e2 ]
  ret i32 %v3_26406
}

define i32 @function_2640d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2640d:
  %v0_2640e = load i32, i32* @eax, align 8
  ret i32 %v0_2640e
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE11lower_boundERS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26410:
  ret i32 %arg2
}

define i32 @function_2643e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2643e:
  %v0_2643e = load i32, i32* @ecx, align 8
  %v1_2643e = add i32 %v0_2643e, -532313149
  %v2_2643e = inttoptr i32 %v1_2643e to i8*
  %v3_2643e = load i8, i8* %v2_2643e, align 1
  %v5_2643e = trunc i32 %v0_2643e to i8
  %v6_2643e = add i8 %v3_2643e, %v5_2643e
  store i8 %v6_2643e, i8* %v2_2643e, align 1
  %v0_26444 = load i32, i32* @eax, align 8
  %v1_26447 = call i32 @unknown_4589a(i32 %v0_26444)
  %v0_2644c = load i32, i32* @ebp, align 4
  %v1_2644c = add i32 %v0_2644c, -28
  %v2_2644c = inttoptr i32 %v1_2644c to i32*
  %v3_2644c = load i32, i32* %v2_2644c, align 4
  %v1_2644f = add i32 %v0_2644c, -36
  %v2_2644f = inttoptr i32 %v1_2644f to i32*
  %v3_2644f = load i32, i32* %v2_2644f, align 4
  %v0_26456 = load i32, i32* @ebx, align 4
  %v1_2645e = add i32 %v0_2644c, -32
  %v2_2645e = inttoptr i32 %v1_2645e to i32*
  %v3_2645e = load i32, i32* %v2_2645e, align 4
  %v5_26468 = call i32 @unknown_517b6(i32 %v3_2644c, i32 %v3_2645e, i32 %v1_26447, i32 %v0_26456, i32 %v3_2644f)
  %v0_26470 = load i32, i32* @ebp, align 4
  %v1_26470 = add i32 %v0_26470, -28
  %v2_26470 = inttoptr i32 %v1_26470 to i32*
  %v3_26470 = load i32, i32* %v2_26470, align 4
  store i32 %v3_26470, i32* @eax, align 8
  %v1_26473 = add i32 %v0_26470, -12
  %v2_26473 = inttoptr i32 %v1_26473 to i32*
  %v3_26473 = load i32, i32* %v2_26473, align 4
  %v1_26476 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26476 = icmp eq i32 %v1_26476, %v3_26473
  br i1 %v3_26476, label %bb, label %dec_label_pc_2647f

bb:                                               ; preds = %dec_label_pc_2643e
  %v1_2647d = call i32 @function_26484()
  br label %dec_label_pc_2647f

dec_label_pc_2647f:                               ; preds = %bb, %dec_label_pc_2643e
  %v3_2647d = phi i32 [ %v1_2647d, %bb ], [ %v3_26470, %dec_label_pc_2643e ]
  ret i32 %v3_2647d
}

define i32 @function_26484() local_unnamed_addr {
dec_label_pc_26484:
  %v0_26488 = load i32, i32* @eax, align 8
  ret i32 %v0_26488
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2648c:
  %v0_2649e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2649e
}

define i32 @function_264a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_264a6:
  %v0_264a9 = load i32, i32* @ebp, align 4
  %v1_264a9 = add i32 %v0_264a9, -28
  %v2_264a9 = inttoptr i32 %v1_264a9 to i32*
  %v3_264a9 = load i32, i32* %v2_264a9, align 4
  store i32 %v3_264a9, i32* @eax, align 8
  %v1_264ac = add i32 %v0_264a9, -12
  %v2_264ac = inttoptr i32 %v1_264ac to i32*
  %v3_264ac = load i32, i32* %v2_264ac, align 4
  %v1_264af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_264af = icmp eq i32 %v1_264af, %v3_264ac
  br i1 %v3_264af, label %bb, label %dec_label_pc_264b8

bb:                                               ; preds = %dec_label_pc_264a6
  %v1_264b6 = call i32 @function_264bd()
  br label %dec_label_pc_264b8

dec_label_pc_264b8:                               ; preds = %bb, %dec_label_pc_264a6
  %v2_264b6 = phi i32 [ %v1_264b6, %bb ], [ %v3_264a9, %dec_label_pc_264a6 ]
  ret i32 %v2_264b6
}

define i32 @function_264bd() local_unnamed_addr {
dec_label_pc_264bd:
  %v0_264be = load i32, i32* @eax, align 8
  ret i32 %v0_264be
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_264c2:
  %v1_264e2 = add i32 %arg2, 4
  %v2_264ef = call i32 @unknown_5191c(i32 %arg1, i32 %v1_264e2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26503

bb:                                               ; preds = %dec_label_pc_264c2
  %v1_26501 = call i32 @function_26508()
  br label %dec_label_pc_26503

dec_label_pc_26503:                               ; preds = %bb, %dec_label_pc_264c2
  %v2_26501 = phi i32 [ %v1_26501, %bb ], [ %arg1, %dec_label_pc_264c2 ]
  ret i32 %v2_26501

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_26508() local_unnamed_addr {
dec_label_pc_26508:
  %v0_26509 = load i32, i32* @eax, align 8
  ret i32 %v0_26509
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256xEEC1ERKSt17_Rb_tree_iteratorIS3_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2650c:
  %v1_2652c = inttoptr i32 %arg2 to i32*
  %v2_2652c = load i32, i32* %v1_2652c, align 4
  store i32 %v2_2652c, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2653f

bb:                                               ; preds = %dec_label_pc_2650c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2653d = call i32 @function_26544(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2653f

dec_label_pc_2653f:                               ; preds = %bb, %dec_label_pc_2650c
  %v4_2653d = phi i32 [ %v3_2653d, %bb ], [ 0, %dec_label_pc_2650c ]
  ret i32 %v4_2653d

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26544(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26544:
  %v0_26545 = load i32, i32* @eax, align 8
  ret i32 %v0_26545
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26546:
  ret i32 0
}

define i32 @function_26572(i32 %arg1) local_unnamed_addr {
dec_label_pc_26572:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_26577 = load i32, i32* @eax, align 8
  %v2_26577 = add i32 %v0_26577, 36
  %v16_26577 = and i32 %v2_26577, 255
  %v18_26577 = and i32 %v0_26577, -256
  %v19_26577 = or i32 %v16_26577, %v18_26577
  store i32 %v19_26577, i32* %eax.global-to-local, align 8
  %v0_26579 = call i32 @unknown_518bc()
  %v0_2657e = load i32, i32* @ebx, align 4
  %v12_2657e = icmp eq i32 %v0_2657e, %v0_26579
  %v1_26580 = zext i1 %v12_2657e to i32
  %v3_26580 = and i32 %v0_26579, -256
  %v4_26580 = or i32 %v1_26580, %v3_26580
  store i32 %v4_26580, i32* %eax.global-to-local, align 8
  %v5_26583 = icmp eq i1 %v12_2657e, false
  %v0_2664f = load i32, i32* @ebp, align 4
  br i1 %v5_26583, label %dec_label_pc_2664f, label %dec_label_pc_2658b

dec_label_pc_2658b:                               ; preds = %dec_label_pc_26572
  %v1_2658b = add i32 %v0_2664f, -64
  %v2_2658b = inttoptr i32 %v1_2658b to i32*
  %v3_2658b = load i32, i32* %v2_2658b, align 4
  store i32 %v3_2658b, i32* %eax.global-to-local, align 8
  %v1_2658e = load i32, i32* @esp, align 4
  %v2_2658e = inttoptr i32 %v1_2658e to i32*
  store i32 %v3_2658b, i32* %v2_2658e, align 4
  %v0_26591 = call i32 @unknown_51a3c()
  store i32 %v0_26591, i32* %eax.global-to-local, align 8
  %v1_26596 = icmp eq i32 %v0_26591, 0
  br i1 %v1_26596, label %dec_label_pc_265e3, label %dec_label_pc_2659a

dec_label_pc_2659a:                               ; preds = %dec_label_pc_2658b
  %v0_2659a = load i32, i32* @ebp, align 4
  %v1_2659a = add i32 %v0_2659a, -72
  %v2_2659a = inttoptr i32 %v1_2659a to i32*
  %v3_2659a = load i32, i32* %v2_2659a, align 4
  %v1_2659d = load i32, i32* @esp, align 4
  %v2_2659d = add i32 %v1_2659d, 4
  %v3_2659d = inttoptr i32 %v2_2659d to i32*
  store i32 %v3_2659a, i32* %v3_2659d, align 4
  %v0_265a1 = load i32, i32* @ebp, align 4
  %v1_265a1 = add i32 %v0_265a1, -17
  store i32 %v1_265a1, i32* %eax.global-to-local, align 8
  %v1_265a4 = load i32, i32* @esp, align 4
  %v2_265a4 = inttoptr i32 %v1_265a4 to i32*
  store i32 %v1_265a1, i32* %v2_265a4, align 4
  %v2_265a7 = call i32 @unknown_51a08(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v2_265a7, i32* %eax.global-to-local, align 8
  store i32 %v2_265a7, i32* %ebx.global-to-local, align 4
  %v0_265ae = load i32, i32* @ebp, align 4
  %v1_265ae = add i32 %v0_265ae, -64
  %v2_265ae = inttoptr i32 %v1_265ae to i32*
  %v3_265ae = load i32, i32* %v2_265ae, align 4
  store i32 %v3_265ae, i32* %eax.global-to-local, align 8
  %v1_265b1 = load i32, i32* @esp, align 4
  %v2_265b1 = inttoptr i32 %v1_265b1 to i32*
  store i32 %v3_265ae, i32* %v2_265b1, align 4
  %v1_265b4 = call i32 @unknown_519d8(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_265b4, i32* %eax.global-to-local, align 8
  %v1_265b9 = inttoptr i32 %v1_265b4 to i32*
  %v2_265b9 = load i32, i32* %v1_265b9, align 4
  store i32 %v2_265b9, i32* %eax.global-to-local, align 8
  %v1_265bb = load i32, i32* @esp, align 4
  %v2_265bb = inttoptr i32 %v1_265bb to i32*
  store i32 %v2_265b9, i32* %v2_265bb, align 4
  %v1_265be = call i32 @unknown_4d2ac(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_265be, i32* %eax.global-to-local, align 8
  store i32 %v1_265be, i32* %edx.global-to-local, align 4
  %v0_265c5 = load i32, i32* @ebp, align 4
  %v1_265c5 = add i32 %v0_265c5, -64
  %v2_265c5 = inttoptr i32 %v1_265c5 to i32*
  %v3_265c5 = load i32, i32* %v2_265c5, align 4
  store i32 %v3_265c5, i32* %eax.global-to-local, align 8
  %v0_265c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_265c8 = load i32, i32* @esp, align 4
  %v2_265c8 = add i32 %v1_265c8, 8
  %v3_265c8 = inttoptr i32 %v2_265c8 to i32*
  store i32 %v0_265c8, i32* %v3_265c8, align 4
  %v0_265cc = load i32, i32* %edx.global-to-local, align 4
  %v1_265cc = load i32, i32* @esp, align 4
  %v2_265cc = add i32 %v1_265cc, 4
  %v3_265cc = inttoptr i32 %v2_265cc to i32*
  store i32 %v0_265cc, i32* %v3_265cc, align 4
  %v0_265d0 = load i32, i32* %eax.global-to-local, align 8
  %v1_265d0 = load i32, i32* @esp, align 4
  %v2_265d0 = inttoptr i32 %v1_265d0 to i32*
  store i32 %v0_265d0, i32* %v2_265d0, align 4
  %v3_265d3 = call i32 @unknown_43510(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_265d3, i32* %eax.global-to-local, align 8
  %v4_265d8 = trunc i32 %v3_265d3 to i8
  %v5_265d8 = icmp eq i8 %v4_265d8, 0
  br i1 %v5_265d8, label %dec_label_pc_265e3, label %dec_label_pc_265e8

dec_label_pc_265e3:                               ; preds = %dec_label_pc_2659a, %dec_label_pc_2658b
  br label %dec_label_pc_265e8

dec_label_pc_265e8:                               ; preds = %dec_label_pc_2659a, %dec_label_pc_265e3
  %storemerge = phi i32 [ 0, %dec_label_pc_265e3 ], [ 1, %dec_label_pc_2659a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_265e8 = icmp eq i32 %storemerge, 0
  %v0_26626 = load i32, i32* @ebp, align 4
  br i1 %v5_265e8, label %dec_label_pc_26626, label %dec_label_pc_265ec

dec_label_pc_265ec:                               ; preds = %dec_label_pc_265e8
  %v1_265ec = add i32 %v0_26626, -64
  %v2_265ec = inttoptr i32 %v1_265ec to i32*
  %v3_265ec = load i32, i32* %v2_265ec, align 4
  store i32 %v3_265ec, i32* %eax.global-to-local, align 8
  %v1_265ef = load i32, i32* @esp, align 4
  %v2_265ef = inttoptr i32 %v1_265ef to i32*
  store i32 %v3_265ec, i32* %v2_265ef, align 4
  %v1_265f2 = call i32 @unknown_519d8(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_265f2, i32* %eax.global-to-local, align 8
  %v1_265f7 = inttoptr i32 %v1_265f2 to i32*
  %v2_265f7 = load i32, i32* %v1_265f7, align 4
  store i32 %v2_265f7, i32* %edx.global-to-local, align 4
  %v0_265f9 = load i32, i32* @ebp, align 4
  %v1_265f9 = add i32 %v0_265f9, -60
  %v2_265f9 = inttoptr i32 %v1_265f9 to i32*
  %v3_265f9 = load i32, i32* %v2_265f9, align 4
  store i32 %v3_265f9, i32* %eax.global-to-local, align 8
  %v1_265fc = add i32 %v0_265f9, -72
  %v2_265fc = inttoptr i32 %v1_265fc to i32*
  %v3_265fc = load i32, i32* %v2_265fc, align 4
  %v1_265ff = load i32, i32* @esp, align 4
  %v2_265ff = add i32 %v1_265ff, 16
  %v3_265ff = inttoptr i32 %v2_265ff to i32*
  store i32 %v3_265fc, i32* %v3_265ff, align 4
  %v0_26603 = load i32, i32* %edx.global-to-local, align 4
  %v1_26603 = load i32, i32* @esp, align 4
  %v2_26603 = add i32 %v1_26603, 12
  %v3_26603 = inttoptr i32 %v2_26603 to i32*
  store i32 %v0_26603, i32* %v3_26603, align 4
  %v0_26607 = load i32, i32* @esp, align 4
  %v1_26607 = add i32 %v0_26607, 8
  %v2_26607 = inttoptr i32 %v1_26607 to i32*
  store i32 0, i32* %v2_26607, align 4
  %v0_2660f = load i32, i32* @ebp, align 4
  %v1_2660f = add i32 %v0_2660f, -64
  %v2_2660f = inttoptr i32 %v1_2660f to i32*
  %v3_2660f = load i32, i32* %v2_2660f, align 4
  store i32 %v3_2660f, i32* %edx.global-to-local, align 4
  %v1_26612 = load i32, i32* @esp, align 4
  %v2_26612 = add i32 %v1_26612, 4
  %v3_26612 = inttoptr i32 %v2_26612 to i32*
  store i32 %v3_2660f, i32* %v3_26612, align 4
  %v0_26616 = load i32, i32* %eax.global-to-local, align 8
  %v1_26616 = load i32, i32* @esp, align 4
  %v2_26616 = inttoptr i32 %v1_26616 to i32*
  store i32 %v0_26616, i32* %v2_26616, align 4
  %v4_26619 = call i32 @unknown_51a6c(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v4_26619, i32* %eax.global-to-local, align 8
  %v0_26621 = call i32 @function_26946()
  store i32 %v0_26621, i32* %eax.global-to-local, align 8
  ret i32 %v0_26621

dec_label_pc_26626:                               ; preds = %dec_label_pc_265e8
  %v1_26626 = add i32 %v0_26626, -48
  store i32 %v1_26626, i32* %eax.global-to-local, align 8
  %v1_26629 = add i32 %v0_26626, -72
  %v2_26629 = inttoptr i32 %v1_26629 to i32*
  %v3_26629 = load i32, i32* %v2_26629, align 4
  store i32 %v3_26629, i32* %edx.global-to-local, align 4
  %v1_2662c = load i32, i32* @esp, align 4
  %v2_2662c = add i32 %v1_2662c, 8
  %v3_2662c = inttoptr i32 %v2_2662c to i32*
  store i32 %v3_26629, i32* %v3_2662c, align 4
  %v0_26630 = load i32, i32* @ebp, align 4
  %v1_26630 = add i32 %v0_26630, -64
  %v2_26630 = inttoptr i32 %v1_26630 to i32*
  %v3_26630 = load i32, i32* %v2_26630, align 4
  store i32 %v3_26630, i32* %edx.global-to-local, align 4
  %v1_26633 = load i32, i32* @esp, align 4
  %v2_26633 = add i32 %v1_26633, 4
  %v3_26633 = inttoptr i32 %v2_26633 to i32*
  store i32 %v3_26630, i32* %v3_26633, align 4
  %v0_26637 = load i32, i32* %eax.global-to-local, align 8
  %v1_26637 = load i32, i32* @esp, align 4
  %v2_26637 = inttoptr i32 %v1_26637 to i32*
  store i32 %v0_26637, i32* %v2_26637, align 4
  %v3_2663a = call i32 @unknown_51b6e(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_2663a, i32* %eax.global-to-local, align 8
  %v0_26642 = load i32, i32* @ebp, align 4
  %v1_26642 = add i32 %v0_26642, -60
  %v2_26642 = inttoptr i32 %v1_26642 to i32*
  %v3_26642 = load i32, i32* %v2_26642, align 4
  store i32 %v3_26642, i32* %eax.global-to-local, align 8
  %v1_26645 = add i32 %v0_26642, -48
  %v2_26645 = inttoptr i32 %v1_26645 to i32*
  %v3_26645 = load i32, i32* %v2_26645, align 4
  store i32 %v3_26645, i32* %edx.global-to-local, align 4
  %v2_26648 = inttoptr i32 %v3_26642 to i32*
  store i32 %v3_26645, i32* %v2_26648, align 4
  %v0_2664a = call i32 @function_26946()
  store i32 %v0_2664a, i32* %eax.global-to-local, align 8
  ret i32 %v0_2664a

dec_label_pc_2664f:                               ; preds = %dec_label_pc_26572
  %v1_2664f = add i32 %v0_2664f, -68
  %v2_2664f = inttoptr i32 %v1_2664f to i32*
  %v3_2664f = load i32, i32* %v2_2664f, align 4
  store i32 %v3_2664f, i32* %eax.global-to-local, align 8
  %v1_26652 = load i32, i32* @esp, align 4
  %v2_26652 = inttoptr i32 %v1_26652 to i32*
  store i32 %v3_2664f, i32* %v2_26652, align 4
  %v1_26655 = call i32 @unknown_4d2ac(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_26655, i32* %eax.global-to-local, align 8
  store i32 %v1_26655, i32* %ebx.global-to-local, align 4
  %v0_2665c = load i32, i32* @ebp, align 4
  %v1_2665c = add i32 %v0_2665c, -72
  %v2_2665c = inttoptr i32 %v1_2665c to i32*
  %v3_2665c = load i32, i32* %v2_2665c, align 4
  %v1_2665f = load i32, i32* @esp, align 4
  %v2_2665f = add i32 %v1_2665f, 4
  %v3_2665f = inttoptr i32 %v2_2665f to i32*
  store i32 %v3_2665c, i32* %v3_2665f, align 4
  %v0_26663 = load i32, i32* @ebp, align 4
  %v1_26663 = add i32 %v0_26663, -16
  store i32 %v1_26663, i32* %eax.global-to-local, align 8
  %v1_26666 = load i32, i32* @esp, align 4
  %v2_26666 = inttoptr i32 %v1_26666 to i32*
  store i32 %v1_26663, i32* %v2_26666, align 4
  %v2_26669 = call i32 @unknown_51a08(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v2_26669, i32* %eax.global-to-local, align 8
  %v0_2666e = load i32, i32* @ebp, align 4
  %v1_2666e = add i32 %v0_2666e, -64
  %v2_2666e = inttoptr i32 %v1_2666e to i32*
  %v3_2666e = load i32, i32* %v2_2666e, align 4
  store i32 %v3_2666e, i32* %edx.global-to-local, align 4
  %v0_26671 = load i32, i32* %ebx.global-to-local, align 4
  %v1_26671 = load i32, i32* @esp, align 4
  %v2_26671 = add i32 %v1_26671, 8
  %v3_26671 = inttoptr i32 %v2_26671 to i32*
  store i32 %v0_26671, i32* %v3_26671, align 4
  %v0_26675 = load i32, i32* %eax.global-to-local, align 8
  %v1_26675 = load i32, i32* @esp, align 4
  %v2_26675 = add i32 %v1_26675, 4
  %v3_26675 = inttoptr i32 %v2_26675 to i32*
  store i32 %v0_26675, i32* %v3_26675, align 4
  %v0_26679 = load i32, i32* %edx.global-to-local, align 4
  %v1_26679 = load i32, i32* @esp, align 4
  %v2_26679 = inttoptr i32 %v1_26679 to i32*
  store i32 %v0_26679, i32* %v2_26679, align 4
  %v3_2667c = call i32 @unknown_43510(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_2667c, i32* %eax.global-to-local, align 8
  %v4_26681 = trunc i32 %v3_2667c to i8
  %v5_26681 = icmp eq i8 %v4_26681, 0
  br i1 %v5_26681, label %bb, label %dec_label_pc_26689

bb:                                               ; preds = %dec_label_pc_2664f
  %v1_26683 = call i32 @function_267c9()
  store i32 %v1_26683, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26689

dec_label_pc_26689:                               ; preds = %bb, %dec_label_pc_2664f
  %v0_26689 = load i32, i32* @ebp, align 4
  %v1_26689 = add i32 %v0_26689, -68
  %v2_26689 = inttoptr i32 %v1_26689 to i32*
  %v3_26689 = load i32, i32* %v2_26689, align 4
  store i32 %v3_26689, i32* %eax.global-to-local, align 8
  %v2_2668c = add i32 %v0_26689, -24
  %v3_2668c = inttoptr i32 %v2_2668c to i32*
  store i32 %v3_26689, i32* %v3_2668c, align 4
  %v0_2668f = load i32, i32* @ebp, align 4
  %v1_2668f = add i32 %v0_2668f, -68
  %v2_2668f = inttoptr i32 %v1_2668f to i32*
  %v3_2668f = load i32, i32* %v2_2668f, align 4
  store i32 %v3_2668f, i32* %ebx.global-to-local, align 4
  %v1_26692 = add i32 %v0_2668f, -64
  %v2_26692 = inttoptr i32 %v1_26692 to i32*
  %v3_26692 = load i32, i32* %v2_26692, align 4
  store i32 %v3_26692, i32* %eax.global-to-local, align 8
  %v1_26695 = load i32, i32* @esp, align 4
  %v2_26695 = inttoptr i32 %v1_26695 to i32*
  store i32 %v3_26692, i32* %v2_26695, align 4
  %v0_26698 = call i32 @unknown_51d72()
  store i32 %v0_26698, i32* %eax.global-to-local, align 8
  %v1_2669d = inttoptr i32 %v0_26698 to i32*
  %v2_2669d = load i32, i32* %v1_2669d, align 4
  %v0_2669f = load i32, i32* %ebx.global-to-local, align 4
  %v12_2669f = icmp eq i32 %v0_2669f, %v2_2669d
  %v1_266a1 = zext i1 %v12_2669f to i32
  %v3_266a1 = and i32 %v2_2669d, -256
  %v4_266a1 = or i32 %v1_266a1, %v3_266a1
  store i32 %v4_266a1, i32* %eax.global-to-local, align 8
  %v5_266a4 = icmp eq i1 %v12_2669f, false
  %v0_266eb = load i32, i32* @ebp, align 4
  br i1 %v5_266a4, label %dec_label_pc_266eb, label %dec_label_pc_266a8

dec_label_pc_266a8:                               ; preds = %dec_label_pc_26689
  %v1_266a8 = add i32 %v0_266eb, -64
  %v2_266a8 = inttoptr i32 %v1_266a8 to i32*
  %v3_266a8 = load i32, i32* %v2_266a8, align 4
  store i32 %v3_266a8, i32* %eax.global-to-local, align 8
  %v1_266ab = load i32, i32* @esp, align 4
  %v2_266ab = inttoptr i32 %v1_266ab to i32*
  store i32 %v3_266a8, i32* %v2_266ab, align 4
  %v0_266ae = call i32 @unknown_51d72()
  store i32 %v0_266ae, i32* %eax.global-to-local, align 8
  %v1_266b3 = inttoptr i32 %v0_266ae to i32*
  %v2_266b3 = load i32, i32* %v1_266b3, align 4
  store i32 %v2_266b3, i32* %ebx.global-to-local, align 4
  %v0_266b5 = load i32, i32* @ebp, align 4
  %v1_266b5 = add i32 %v0_266b5, -64
  %v2_266b5 = inttoptr i32 %v1_266b5 to i32*
  %v3_266b5 = load i32, i32* %v2_266b5, align 4
  store i32 %v3_266b5, i32* %eax.global-to-local, align 8
  %v1_266b8 = load i32, i32* @esp, align 4
  %v2_266b8 = inttoptr i32 %v1_266b8 to i32*
  store i32 %v3_266b5, i32* %v2_266b8, align 4
  %v0_266bb = call i32 @unknown_51d72()
  store i32 %v0_266bb, i32* %eax.global-to-local, align 8
  %v1_266c0 = inttoptr i32 %v0_266bb to i32*
  %v2_266c0 = load i32, i32* %v1_266c0, align 4
  store i32 %v2_266c0, i32* %edx.global-to-local, align 4
  %v0_266c2 = load i32, i32* @ebp, align 4
  %v1_266c2 = add i32 %v0_266c2, -60
  %v2_266c2 = inttoptr i32 %v1_266c2 to i32*
  %v3_266c2 = load i32, i32* %v2_266c2, align 4
  store i32 %v3_266c2, i32* %eax.global-to-local, align 8
  %v1_266c5 = add i32 %v0_266c2, -72
  %v2_266c5 = inttoptr i32 %v1_266c5 to i32*
  %v3_266c5 = load i32, i32* %v2_266c5, align 4
  %v1_266c8 = load i32, i32* @esp, align 4
  %v2_266c8 = add i32 %v1_266c8, 16
  %v3_266c8 = inttoptr i32 %v2_266c8 to i32*
  store i32 %v3_266c5, i32* %v3_266c8, align 4
  %v0_266cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_266cc = load i32, i32* @esp, align 4
  %v2_266cc = add i32 %v1_266cc, 12
  %v3_266cc = inttoptr i32 %v2_266cc to i32*
  store i32 %v0_266cc, i32* %v3_266cc, align 4
  %v0_266d0 = load i32, i32* %edx.global-to-local, align 4
  %v1_266d0 = load i32, i32* @esp, align 4
  %v2_266d0 = add i32 %v1_266d0, 8
  %v3_266d0 = inttoptr i32 %v2_266d0 to i32*
  store i32 %v0_266d0, i32* %v3_266d0, align 4
  %v0_266d4 = load i32, i32* @ebp, align 4
  %v1_266d4 = add i32 %v0_266d4, -64
  %v2_266d4 = inttoptr i32 %v1_266d4 to i32*
  %v3_266d4 = load i32, i32* %v2_266d4, align 4
  store i32 %v3_266d4, i32* %edx.global-to-local, align 4
  %v1_266d7 = load i32, i32* @esp, align 4
  %v2_266d7 = add i32 %v1_266d7, 4
  %v3_266d7 = inttoptr i32 %v2_266d7 to i32*
  store i32 %v3_266d4, i32* %v3_266d7, align 4
  %v0_266db = load i32, i32* %eax.global-to-local, align 8
  %v1_266db = load i32, i32* @esp, align 4
  %v2_266db = inttoptr i32 %v1_266db to i32*
  store i32 %v0_266db, i32* %v2_266db, align 4
  %v4_266de = call i32 @unknown_51a6c(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v4_266de, i32* %eax.global-to-local, align 8
  %v0_266e6 = call i32 @function_26946()
  store i32 %v0_266e6, i32* %eax.global-to-local, align 8
  ret i32 %v0_266e6

dec_label_pc_266eb:                               ; preds = %dec_label_pc_26689
  %v1_266eb = add i32 %v0_266eb, -72
  %v2_266eb = inttoptr i32 %v1_266eb to i32*
  %v3_266eb = load i32, i32* %v2_266eb, align 4
  %v1_266ee = load i32, i32* @esp, align 4
  %v2_266ee = add i32 %v1_266ee, 4
  %v3_266ee = inttoptr i32 %v2_266ee to i32*
  store i32 %v3_266eb, i32* %v3_266ee, align 4
  %v0_266f2 = load i32, i32* @ebp, align 4
  %v1_266f2 = add i32 %v0_266f2, -15
  store i32 %v1_266f2, i32* %eax.global-to-local, align 8
  %v1_266f5 = load i32, i32* @esp, align 4
  %v2_266f5 = inttoptr i32 %v1_266f5 to i32*
  store i32 %v1_266f2, i32* %v2_266f5, align 4
  %v2_266f8 = call i32 @unknown_51a08(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v2_266f8, i32* %ebx.global-to-local, align 4
  %v0_266ff = load i32, i32* @ebp, align 4
  %v1_266ff = add i32 %v0_266ff, -24
  store i32 %v1_266ff, i32* %eax.global-to-local, align 8
  %v1_26702 = load i32, i32* @esp, align 4
  %v2_26702 = inttoptr i32 %v1_26702 to i32*
  store i32 %v1_266ff, i32* %v2_26702, align 4
  %v0_26705 = call i32 @unknown_51da2()
  store i32 %v0_26705, i32* %eax.global-to-local, align 8
  %v1_2670a = inttoptr i32 %v0_26705 to i32*
  %v2_2670a = load i32, i32* %v1_2670a, align 4
  store i32 %v2_2670a, i32* %eax.global-to-local, align 8
  %v1_2670c = load i32, i32* @esp, align 4
  %v2_2670c = inttoptr i32 %v1_2670c to i32*
  store i32 %v2_2670a, i32* %v2_2670c, align 4
  %v1_2670f = call i32 @unknown_4d2ac(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_2670f, i32* %eax.global-to-local, align 8
  store i32 %v1_2670f, i32* %edx.global-to-local, align 4
  %v0_26716 = load i32, i32* @ebp, align 4
  %v1_26716 = add i32 %v0_26716, -64
  %v2_26716 = inttoptr i32 %v1_26716 to i32*
  %v3_26716 = load i32, i32* %v2_26716, align 4
  store i32 %v3_26716, i32* %eax.global-to-local, align 8
  %v0_26719 = load i32, i32* %ebx.global-to-local, align 4
  %v1_26719 = load i32, i32* @esp, align 4
  %v2_26719 = add i32 %v1_26719, 8
  %v3_26719 = inttoptr i32 %v2_26719 to i32*
  store i32 %v0_26719, i32* %v3_26719, align 4
  %v0_2671d = load i32, i32* %edx.global-to-local, align 4
  %v1_2671d = load i32, i32* @esp, align 4
  %v2_2671d = add i32 %v1_2671d, 4
  %v3_2671d = inttoptr i32 %v2_2671d to i32*
  store i32 %v0_2671d, i32* %v3_2671d, align 4
  %v0_26721 = load i32, i32* %eax.global-to-local, align 8
  %v1_26721 = load i32, i32* @esp, align 4
  %v2_26721 = inttoptr i32 %v1_26721 to i32*
  store i32 %v0_26721, i32* %v2_26721, align 4
  %v3_26724 = call i32 @unknown_43510(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_26724, i32* %eax.global-to-local, align 8
  %v4_26729 = trunc i32 %v3_26724 to i8
  %v5_26729 = icmp eq i8 %v4_26729, 0
  br i1 %v5_26729, label %bb13, label %dec_label_pc_2672d

bb13:                                             ; preds = %dec_label_pc_266eb
  %v1_2672b = call i32 @function_267a0()
  store i32 %v1_2672b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2672d

dec_label_pc_2672d:                               ; preds = %bb13, %dec_label_pc_266eb
  %v0_2672d = load i32, i32* @ebp, align 4
  %v1_2672d = add i32 %v0_2672d, -24
  %v2_2672d = inttoptr i32 %v1_2672d to i32*
  %v3_2672d = load i32, i32* %v2_2672d, align 4
  store i32 %v3_2672d, i32* %eax.global-to-local, align 8
  %v1_26730 = load i32, i32* @esp, align 4
  %v2_26730 = inttoptr i32 %v1_26730 to i32*
  store i32 %v3_2672d, i32* %v2_26730, align 4
  %v1_26733 = call i32 @unknown_51de1(i32 ptrtoint (i32* @2 to i32))
  %v1_26738 = icmp eq i32 %v1_26733, 0
  %v1_2673a = zext i1 %v1_26738 to i32
  %v3_2673a = and i32 %v1_26733, -256
  %v4_2673a = or i32 %v1_2673a, %v3_2673a
  store i32 %v4_2673a, i32* %eax.global-to-local, align 8
  %v5_2673d = icmp eq i1 %v1_26738, false
  %v0_26771 = load i32, i32* @ebp, align 4
  br i1 %v5_2673d, label %dec_label_pc_26771, label %dec_label_pc_26741

dec_label_pc_26741:                               ; preds = %dec_label_pc_2672d
  %v1_26741 = add i32 %v0_26771, -24
  %v2_26741 = inttoptr i32 %v1_26741 to i32*
  %v3_26741 = load i32, i32* %v2_26741, align 4
  store i32 %v3_26741, i32* %edx.global-to-local, align 4
  %v1_26744 = add i32 %v0_26771, -60
  %v2_26744 = inttoptr i32 %v1_26744 to i32*
  %v3_26744 = load i32, i32* %v2_26744, align 4
  store i32 %v3_26744, i32* %eax.global-to-local, align 8
  %v1_26747 = add i32 %v0_26771, -72
  %v2_26747 = inttoptr i32 %v1_26747 to i32*
  %v3_26747 = load i32, i32* %v2_26747, align 4
  %v1_2674a = load i32, i32* @esp, align 4
  %v2_2674a = add i32 %v1_2674a, 16
  %v3_2674a = inttoptr i32 %v2_2674a to i32*
  store i32 %v3_26747, i32* %v3_2674a, align 4
  %v0_2674e = load i32, i32* %edx.global-to-local, align 4
  %v1_2674e = load i32, i32* @esp, align 4
  %v2_2674e = add i32 %v1_2674e, 12
  %v3_2674e = inttoptr i32 %v2_2674e to i32*
  store i32 %v0_2674e, i32* %v3_2674e, align 4
  %v0_26752 = load i32, i32* @esp, align 4
  %v1_26752 = add i32 %v0_26752, 8
  %v2_26752 = inttoptr i32 %v1_26752 to i32*
  store i32 0, i32* %v2_26752, align 4
  %v0_2675a = load i32, i32* @ebp, align 4
  %v1_2675a = add i32 %v0_2675a, -64
  %v2_2675a = inttoptr i32 %v1_2675a to i32*
  %v3_2675a = load i32, i32* %v2_2675a, align 4
  store i32 %v3_2675a, i32* %edx.global-to-local, align 4
  %v1_2675d = load i32, i32* @esp, align 4
  %v2_2675d = add i32 %v1_2675d, 4
  %v3_2675d = inttoptr i32 %v2_2675d to i32*
  store i32 %v3_2675a, i32* %v3_2675d, align 4
  %v0_26761 = load i32, i32* %eax.global-to-local, align 8
  %v1_26761 = load i32, i32* @esp, align 4
  %v2_26761 = inttoptr i32 %v1_26761 to i32*
  store i32 %v0_26761, i32* %v2_26761, align 4
  %v4_26764 = call i32 @unknown_51a6c(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v4_26764, i32* %eax.global-to-local, align 8
  %v0_2676c = call i32 @function_26946()
  store i32 %v0_2676c, i32* %eax.global-to-local, align 8
  ret i32 %v0_2676c

dec_label_pc_26771:                               ; preds = %dec_label_pc_2672d
  %v1_26771 = add i32 %v0_26771, -68
  %v2_26771 = inttoptr i32 %v1_26771 to i32*
  %v3_26774 = load i32, i32* %v2_26771, align 4
  store i32 %v3_26774, i32* %edx.global-to-local, align 4
  %v1_26777 = add i32 %v0_26771, -60
  %v2_26777 = inttoptr i32 %v1_26777 to i32*
  %v3_26777 = load i32, i32* %v2_26777, align 4
  store i32 %v3_26777, i32* %eax.global-to-local, align 8
  ret i32 %v3_26777

; uselistorder directives
  uselistorder i32 %v0_26771, { 0, 4, 1, 3, 2 }
  uselistorder i1 %v1_26738, { 1, 0 }
  uselistorder i32 %v0_266eb, { 1, 0 }
  uselistorder i32 %v2_2669d, { 1, 0 }
  uselistorder i32 %v0_26626, { 1, 2, 0 }
  uselistorder i32 %v0_2664f, { 1, 0 }
  uselistorder i32 %v0_26579, { 1, 0 }
  uselistorder i32 %v0_26577, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 ()* @unknown_51d72, { 2, 1, 0 }
  uselistorder label %dec_label_pc_265e8, { 1, 0 }
}

define i32 @function_2677c() local_unnamed_addr {
dec_label_pc_2677c:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_26781 = load i32, i32* %ecx.global-to-local, align 8
  %v0_26785 = load i32, i32* %edx.global-to-local, align 4
  %v0_26789 = load i32, i32* @ebp, align 4
  %v1_26789 = add i32 %v0_26789, -64
  %v2_26789 = inttoptr i32 %v1_26789 to i32*
  %v3_26789 = load i32, i32* %v2_26789, align 4
  store i32 %v3_26789, i32* %edx.global-to-local, align 4
  %v4_26793 = call i32 @unknown_51a6c(i32 270818441, i32 %v3_26789, i32 %v0_26785, i32 %v0_26781)
  %v0_2679b = call i32 @function_26946()
  ret i32 %v0_2679b

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
}

define i32 @function_267a0() local_unnamed_addr {
dec_label_pc_267a0:
  %v0_267a0 = load i32, i32* @ebp, align 4
  %v1_267a0 = add i32 %v0_267a0, -40
  %v1_267a3 = add i32 %v0_267a0, -72
  %v2_267a3 = inttoptr i32 %v1_267a3 to i32*
  %v3_267a3 = load i32, i32* %v2_267a3, align 4
  %v1_267aa = add i32 %v0_267a0, -64
  %v2_267aa = inttoptr i32 %v1_267aa to i32*
  %v3_267aa = load i32, i32* %v2_267aa, align 4
  %v3_267b4 = call i32 @unknown_51b6e(i32 %v1_267a0, i32 %v3_267aa, i32 %v3_267a3)
  %v0_267bc = load i32, i32* @ebp, align 4
  %v1_267bc = add i32 %v0_267bc, -60
  %v2_267bc = inttoptr i32 %v1_267bc to i32*
  %v3_267bc = load i32, i32* %v2_267bc, align 4
  %v1_267bf = add i32 %v0_267bc, -40
  %v2_267bf = inttoptr i32 %v1_267bf to i32*
  %v3_267bf = load i32, i32* %v2_267bf, align 4
  %v2_267c2 = inttoptr i32 %v3_267bc to i32*
  store i32 %v3_267bf, i32* %v2_267c2, align 4
  %v0_267c4 = call i32 @function_26946()
  ret i32 %v0_267c4
}

define i32 @function_267c9() local_unnamed_addr {
dec_label_pc_267c9:
  %ebx.global-to-local = alloca i32, align 4
  %v0_267c9 = load i32, i32* @ebp, align 4
  %v1_267c9 = add i32 %v0_267c9, -72
  %v2_267c9 = inttoptr i32 %v1_267c9 to i32*
  %v3_267c9 = load i32, i32* %v2_267c9, align 4
  %v1_267d0 = add i32 %v0_267c9, -14
  %v2_267d6 = call i32 @unknown_51a08(i32 %v1_267d0, i32 %v3_267c9)
  store i32 %v2_267d6, i32* %ebx.global-to-local, align 4
  %v0_267dd = load i32, i32* @ebp, align 4
  %v1_267dd = add i32 %v0_267dd, -68
  %v2_267dd = inttoptr i32 %v1_267dd to i32*
  %v3_267dd = load i32, i32* %v2_267dd, align 4
  %v1_267e3 = call i32 @unknown_4d2ac(i32 %v3_267dd)
  %v0_267ea = load i32, i32* @ebp, align 4
  %v1_267ea = add i32 %v0_267ea, -64
  %v2_267ea = inttoptr i32 %v1_267ea to i32*
  %v3_267ea = load i32, i32* %v2_267ea, align 4
  %v0_267ed = load i32, i32* %ebx.global-to-local, align 4
  %v3_267f8 = call i32 @unknown_43510(i32 %v3_267ea, i32 %v1_267e3, i32 %v0_267ed)
  %v4_267fd = trunc i32 %v3_267f8 to i8
  %v5_267fd = icmp eq i8 %v4_267fd, 0
  %v0_26931 = load i32, i32* @ebp, align 4
  br i1 %v5_267fd, label %dec_label_pc_26931, label %dec_label_pc_26805

dec_label_pc_26805:                               ; preds = %dec_label_pc_267c9
  %v1_26805 = add i32 %v0_26931, -68
  %v2_26805 = inttoptr i32 %v1_26805 to i32*
  %v3_26805 = load i32, i32* %v2_26805, align 4
  %v2_26808 = add i32 %v0_26931, -24
  %v3_26808 = inttoptr i32 %v2_26808 to i32*
  store i32 %v3_26805, i32* %v3_26808, align 4
  %v0_2680b = load i32, i32* @ebp, align 4
  %v1_2680b = add i32 %v0_2680b, -68
  %v2_2680b = inttoptr i32 %v1_2680b to i32*
  %v3_2680b = load i32, i32* %v2_2680b, align 4
  store i32 %v3_2680b, i32* %ebx.global-to-local, align 4
  %v1_2680e = add i32 %v0_2680b, -64
  %v2_2680e = inttoptr i32 %v1_2680e to i32*
  %v3_2680e = load i32, i32* %v2_2680e, align 4
  %v1_26814 = call i32 @unknown_519d8(i32 %v3_2680e)
  %v1_26819 = inttoptr i32 %v1_26814 to i32*
  %v2_26819 = load i32, i32* %v1_26819, align 4
  %v0_2681b = load i32, i32* %ebx.global-to-local, align 4
  %v12_2681b = icmp eq i32 %v0_2681b, %v2_26819
  %v5_26820 = icmp eq i1 %v12_2681b, false
  %v0_2685e = load i32, i32* @ebp, align 4
  br i1 %v5_26820, label %dec_label_pc_2685e, label %dec_label_pc_26824

dec_label_pc_26824:                               ; preds = %dec_label_pc_26805
  %v1_26824 = add i32 %v0_2685e, -64
  %v2_26824 = inttoptr i32 %v1_26824 to i32*
  %v3_26824 = load i32, i32* %v2_26824, align 4
  %v1_2682a = call i32 @unknown_519d8(i32 %v3_26824)
  %v1_2682f = inttoptr i32 %v1_2682a to i32*
  %v2_2682f = load i32, i32* %v1_2682f, align 4
  %v0_26831 = load i32, i32* @ebp, align 4
  %v1_26831 = add i32 %v0_26831, -60
  %v2_26831 = inttoptr i32 %v1_26831 to i32*
  %v3_26831 = load i32, i32* %v2_26831, align 4
  %v1_26847 = add i32 %v0_26831, -64
  %v2_26847 = inttoptr i32 %v1_26847 to i32*
  %v3_26847 = load i32, i32* %v2_26847, align 4
  %v4_26851 = call i32 @unknown_51a6c(i32 %v3_26831, i32 %v3_26847, i32 0, i32 %v2_2682f)
  %v0_26859 = call i32 @function_26946()
  ret i32 %v0_26859

dec_label_pc_2685e:                               ; preds = %dec_label_pc_26805
  %v1_2685e = add i32 %v0_2685e, -24
  %v1_26864 = call i32 @unknown_51e12(i32 %v1_2685e)
  %v1_26869 = inttoptr i32 %v1_26864 to i32*
  %v2_26869 = load i32, i32* %v1_26869, align 4
  %v1_2686e = call i32 @unknown_4d2ac(i32 %v2_26869)
  store i32 %v1_2686e, i32* %ebx.global-to-local, align 4
  %v0_26875 = load i32, i32* @ebp, align 4
  %v1_26875 = add i32 %v0_26875, -72
  %v2_26875 = inttoptr i32 %v1_26875 to i32*
  %v3_26875 = load i32, i32* %v2_26875, align 4
  %v1_2687c = add i32 %v0_26875, -13
  %v2_26882 = call i32 @unknown_51a08(i32 %v1_2687c, i32 %v3_26875)
  %v0_26887 = load i32, i32* @ebp, align 4
  %v1_26887 = add i32 %v0_26887, -64
  %v2_26887 = inttoptr i32 %v1_26887 to i32*
  %v3_26887 = load i32, i32* %v2_26887, align 4
  %v0_2688a = load i32, i32* %ebx.global-to-local, align 4
  %v3_26895 = call i32 @unknown_43510(i32 %v3_26887, i32 %v2_26882, i32 %v0_2688a)
  %v4_2689a = trunc i32 %v3_26895 to i8
  %v5_2689a = icmp eq i8 %v4_2689a, 0
  %v0_2690b = load i32, i32* @ebp, align 4
  br i1 %v5_2689a, label %dec_label_pc_2690b, label %dec_label_pc_2689e

dec_label_pc_2689e:                               ; preds = %dec_label_pc_2685e
  %v1_2689e = add i32 %v0_2690b, -68
  %v2_2689e = inttoptr i32 %v1_2689e to i32*
  %v3_2689e = load i32, i32* %v2_2689e, align 4
  %v1_268a4 = call i32 @unknown_51de1(i32 %v3_2689e)
  %v1_268a9 = icmp eq i32 %v1_268a4, 0
  %v5_268ae = icmp eq i1 %v1_268a9, false
  %v0_268df = load i32, i32* @ebp, align 4
  br i1 %v5_268ae, label %dec_label_pc_268df, label %dec_label_pc_268b2

dec_label_pc_268b2:                               ; preds = %dec_label_pc_2689e
  %v1_268b2 = add i32 %v0_268df, -68
  %v2_268b2 = inttoptr i32 %v1_268b2 to i32*
  %v3_268b2 = load i32, i32* %v2_268b2, align 4
  %v1_268b5 = add i32 %v0_268df, -60
  %v2_268b5 = inttoptr i32 %v1_268b5 to i32*
  %v3_268b5 = load i32, i32* %v2_268b5, align 4
  %v1_268cb = add i32 %v0_268df, -64
  %v2_268cb = inttoptr i32 %v1_268cb to i32*
  %v3_268cb = load i32, i32* %v2_268cb, align 4
  %v4_268d5 = call i32 @unknown_51a6c(i32 %v3_268b5, i32 %v3_268cb, i32 0, i32 %v3_268b2)
  %v0_268dd = call i32 @function_26946()
  ret i32 %v0_268dd

dec_label_pc_268df:                               ; preds = %dec_label_pc_2689e
  %v1_268df = add i32 %v0_268df, -24
  %v2_268df = inttoptr i32 %v1_268df to i32*
  %v3_268df = load i32, i32* %v2_268df, align 4
  %v1_268e5 = add i32 %v0_268df, -60
  %v2_268e5 = inttoptr i32 %v1_268e5 to i32*
  %v3_268e5 = load i32, i32* %v2_268e5, align 4
  %v1_268e8 = add i32 %v0_268df, -72
  %v2_268e8 = inttoptr i32 %v1_268e8 to i32*
  %v3_268e8 = load i32, i32* %v2_268e8, align 4
  store i32 %v3_268e8, i32* %ebx.global-to-local, align 4
  %v1_268f7 = add i32 %v0_268df, -64
  %v2_268f7 = inttoptr i32 %v1_268f7 to i32*
  %v3_268f7 = load i32, i32* %v2_268f7, align 4
  %v4_26901 = call i32 @unknown_51a6c(i32 %v3_268e5, i32 %v3_268f7, i32 %v3_268df, i32 %v3_268df)
  %v0_26909 = call i32 @function_26946()
  ret i32 %v0_26909

dec_label_pc_2690b:                               ; preds = %dec_label_pc_2685e
  %v1_2690b = add i32 %v0_2690b, -32
  %v1_2690e = add i32 %v0_2690b, -72
  %v2_2690e = inttoptr i32 %v1_2690e to i32*
  %v3_2690e = load i32, i32* %v2_2690e, align 4
  %v1_26915 = add i32 %v0_2690b, -64
  %v2_26915 = inttoptr i32 %v1_26915 to i32*
  %v3_26915 = load i32, i32* %v2_26915, align 4
  %v3_2691f = call i32 @unknown_51b6e(i32 %v1_2690b, i32 %v3_26915, i32 %v3_2690e)
  %v0_26927 = load i32, i32* @ebp, align 4
  %v1_26927 = add i32 %v0_26927, -60
  %v2_26927 = inttoptr i32 %v1_26927 to i32*
  %v3_26927 = load i32, i32* %v2_26927, align 4
  %v1_2692a = add i32 %v0_26927, -32
  %v2_2692a = inttoptr i32 %v1_2692a to i32*
  %v3_2692a = load i32, i32* %v2_2692a, align 4
  %v2_2692d = inttoptr i32 %v3_26927 to i32*
  store i32 %v3_2692a, i32* %v2_2692d, align 4
  %v0_2692f = call i32 @function_26946()
  ret i32 %v0_2692f

dec_label_pc_26931:                               ; preds = %dec_label_pc_267c9
  %v1_26931 = add i32 %v0_26931, -60
  %v2_26931 = inttoptr i32 %v1_26931 to i32*
  %v3_26931 = load i32, i32* %v2_26931, align 4
  %v1_26934 = add i32 %v0_26931, -68
  %v2_2693e = call i32 @unknown_51e52(i32 %v3_26931, i32 %v1_26934)
  ret i32 %v2_2693e

; uselistorder directives
  uselistorder i32 %v3_268df, { 1, 0 }
  uselistorder i32 %v0_268df, { 0, 2, 1, 6, 3, 5, 4 }
  uselistorder i32 %v0_2690b, { 0, 2, 3, 1 }
  uselistorder i32 %v0_2685e, { 1, 0 }
  uselistorder i32 %v0_26931, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_51b6e, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_51de1, { 1, 0 }
  uselistorder i32 ()* @function_26946, { 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_51a6c, { 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32)* @unknown_519d8, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_43510, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_4d2ac, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_51a08, { 4, 3, 2, 1, 0 }
}

define i32 @function_26946() local_unnamed_addr {
dec_label_pc_26946:
  %v0_26946 = load i32, i32* @ebp, align 4
  %v1_26946 = add i32 %v0_26946, -60
  %v2_26946 = inttoptr i32 %v1_26946 to i32*
  %v3_26946 = load i32, i32* %v2_26946, align 4
  store i32 %v3_26946, i32* @eax, align 8
  %v1_26949 = add i32 %v0_26946, -12
  %v2_26949 = inttoptr i32 %v1_26949 to i32*
  %v3_26949 = load i32, i32* %v2_26949, align 4
  %v1_2694c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2694c = icmp eq i32 %v1_2694c, %v3_26949
  br i1 %v3_2694c, label %bb, label %dec_label_pc_26955

bb:                                               ; preds = %dec_label_pc_26946
  %v1_26953 = call i32 @function_2695a()
  br label %dec_label_pc_26955

dec_label_pc_26955:                               ; preds = %bb, %dec_label_pc_26946
  %v2_26953 = phi i32 [ %v1_26953, %bb ], [ %v3_26946, %dec_label_pc_26946 ]
  ret i32 %v2_26953
}

declare i32 @__stack_chk_fail.763(i32) local_unnamed_addr

define i32 @function_2695a() local_unnamed_addr {
dec_label_pc_2695a:
  %v0_2695e = load i32, i32* @eax, align 8
  ret i32 %v0_2695e
}

define i32 @_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26962:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  %v0_269a4 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_269a4, 16777216
  %v5_269c0 = sdiv i32 %sext, 16777216
  %v6_269c0 = call i32 @unknown_522b7(i32 %arg2, i32 %tmp114, i32 %arg3, i32 %arg4, i32 %v5_269c0)
  %v2_269cb = load i32, i32* %arg1, align 4
  %v1_269d3 = add i32 %tmp114, 4
  store i32 %v1_269d3, i32* %edx.global-to-local, align 4
  %v0_269d6 = load i32, i32* %edi.global-to-local, align 4
  %sext1 = mul i32 %v0_269d6, 16777216
  %v5_269f4 = sdiv i32 %sext1, 16777216
  %v6_269f4 = call i32 @unknown_52321(i32 %arg2, i32 %v1_269d3, i32 %arg3, i32 %v2_269cb, i32 %v5_269f4)
  %v1_269ff = add i32 %tmp114, 16
  store i32 %v1_269ff, i32* %edx.global-to-local, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %tmp114, { 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_26a22(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a22:
  %v0_26a32 = load i32, i32* @ebp, align 4
  %v1_26a32 = add i32 %v0_26a32, -56
  %v2_26a32 = inttoptr i32 %v1_26a32 to i32*
  %v3_26a32 = load i32, i32* %v2_26a32, align 4
  %v1_26a39 = add i32 %v0_26a32, -52
  %v2_26a39 = inttoptr i32 %v1_26a39 to i32*
  %v3_26a39 = load i32, i32* %v2_26a39, align 4
  %v0_26a40 = load i32, i32* @edx, align 4
  %v1_26a44 = add i32 %v0_26a32, -48
  %v2_26a44 = inttoptr i32 %v1_26a44 to i32*
  %v3_26a44 = load i32, i32* %v2_26a44, align 4
  %v4_26a4a = call i32 @unknown_4f7f3(i32 %v3_26a44, i32 %v0_26a40, i32 %v3_26a39, i32 %v3_26a32)
  %v0_26a4f = load i32, i32* @ebp, align 4
  %v1_26a4f = add i32 %v0_26a4f, -36
  %v2_26a4f = inttoptr i32 %v1_26a4f to i32*
  %v3_26a4f = load i32, i32* %v2_26a4f, align 4
  %v5_26a4f = add i32 %v3_26a4f, %v4_26a4a
  store i32 %v5_26a4f, i32* %v2_26a4f, align 4
  %v0_26a52 = load i32, i32* @ebp, align 4
  %v1_26a52 = add i32 %v0_26a52, -28
  %v2_26a52 = inttoptr i32 %v1_26a52 to i32*
  %v3_26a52 = load i32, i32* %v2_26a52, align 4
  %v1_26a55 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26a55 = xor i32 %v1_26a55, %v3_26a52
  %v3_26a55 = icmp eq i32 %v2_26a55, 0
  store i32 %v2_26a55, i32* @eax, align 8
  br i1 %v3_26a55, label %bb, label %dec_label_pc_26a5e

bb:                                               ; preds = %dec_label_pc_26a22
  %v1_26a5c = call i32 @function_26a63()
  br label %dec_label_pc_26a5e

dec_label_pc_26a5e:                               ; preds = %bb, %dec_label_pc_26a22
  %v2_26a5c = phi i32 [ %v1_26a5c, %bb ], [ %v2_26a55, %dec_label_pc_26a22 ]
  ret i32 %v2_26a5c
}

define i32 @function_26a63() local_unnamed_addr {
dec_label_pc_26a63:
  %v0_26a6a = load i32, i32* @eax, align 8
  ret i32 %v0_26a6a
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26a6b:
  ret i32 %arg3
}

define i32 @function_26a82(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a82:
  %eax.global-to-local = alloca i32, align 4
  %v0_26a85 = load i32, i32* @eax, align 8
  %v1_26a85 = trunc i32 %v0_26a85 to i8
  %v2_26a85 = load i1, i1* @cf, align 1
  %v3_26a85 = zext i1 %v2_26a85 to i8
  %v4_26a85 = add i8 %v3_26a85, %v1_26a85
  %v22_26a85 = zext i8 %v4_26a85 to i32
  %v24_26a85 = and i32 %v0_26a85, -256
  %v25_26a85 = or i32 %v22_26a85, %v24_26a85
  store i32 %v25_26a85, i32* %eax.global-to-local, align 8
  %v1_26a87 = inttoptr i32 %v25_26a85 to i8*
  %v2_26a87 = load i8, i8* %v1_26a87, align 1
  %v5_26a87 = add i8 %v2_26a87, %v4_26a85
  store i8 %v5_26a87, i8* %v1_26a87, align 1
  %v0_26a89 = load i32, i32* %eax.global-to-local, align 8
  %v1_26a89 = load i32, i32* @ebp, align 4
  %v2_26a89 = add i32 %v1_26a89, -12
  %v3_26a89 = inttoptr i32 %v2_26a89 to i32*
  store i32 %v0_26a89, i32* %v3_26a89, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_26a8e = load i32, i32* @edx, align 4
  %v0_26a92 = load i32, i32* @ebp, align 4
  %v1_26a92 = add i32 %v0_26a92, -36
  %v2_26a92 = inttoptr i32 %v1_26a92 to i32*
  %v3_26a92 = load i32, i32* %v2_26a92, align 4
  store i32 %v3_26a92, i32* %eax.global-to-local, align 8
  %v1_26a99 = add i32 %v0_26a92, -32
  %v2_26a99 = inttoptr i32 %v1_26a99 to i32*
  %v3_26a99 = load i32, i32* %v2_26a99, align 4
  store i32 %v3_26a99, i32* %eax.global-to-local, align 8
  %v1_26aa0 = add i32 %v0_26a92, -28
  %v2_26aa0 = inttoptr i32 %v1_26aa0 to i32*
  %v3_26aa0 = load i32, i32* %v2_26aa0, align 4
  store i32 %v3_26aa0, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_26a8e, 16777216
  %v4_26aa6 = sdiv i32 %sext, 16777216
  %v5_26aa6 = call i32 @unknown_524fa(i32 %v3_26aa0, i32 %v3_26a99, i32 %v3_26a92, i32 %v4_26aa6)
  store i32 %v5_26aa6, i32* @eax, align 8
  %v0_26aab = load i32, i32* @ebp, align 4
  %v1_26aab = add i32 %v0_26aab, -12
  %v2_26aab = inttoptr i32 %v1_26aab to i32*
  %v3_26aab = load i32, i32* %v2_26aab, align 4
  %v1_26aae = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26aae = icmp eq i32 %v1_26aae, %v3_26aab
  br i1 %v3_26aae, label %bb, label %dec_label_pc_26ab7

bb:                                               ; preds = %dec_label_pc_26a82
  %v1_26ab5 = call i32 @function_26abc()
  store i32 %v1_26ab5, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26ab7

dec_label_pc_26ab7:                               ; preds = %bb, %dec_label_pc_26a82
  %v2_26ab5 = phi i32 [ %v1_26ab5, %bb ], [ %v5_26aa6, %dec_label_pc_26a82 ]
  ret i32 %v2_26ab5
}

define i32 @function_26abc() local_unnamed_addr {
dec_label_pc_26abc:
  %v0_26abd = load i32, i32* @eax, align 8
  ret i32 %v0_26abd
}

define i32 @_ZN5boost6detail13addr_impl_refISt6vectorI5CTxInSaIS3_EEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26abe:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26aef

bb:                                               ; preds = %dec_label_pc_26abe
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_26aed = call i32 @function_26af4(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_26aef

dec_label_pc_26aef:                               ; preds = %bb, %dec_label_pc_26abe
  %v4_26aed = phi i32 [ %v3_26aed, %bb ], [ 0, %dec_label_pc_26abe ]
  ret i32 %v4_26aed

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26af4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26af4:
  %v0_26af5 = load i32, i32* @eax, align 8
  ret i32 %v0_26af5
}

define i32 @_ZNK5boost6detail13addr_impl_refISt6vectorI5CTxInSaIS3_EEEcvRS5_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_26af6:
  %v2_26b10 = load i32, i32* %arg1, align 4
  store i32 %v2_26b10, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26b1e

bb:                                               ; preds = %dec_label_pc_26af6
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_26b1c = call i32 @function_26b23(i32 %tmp100)
  br label %dec_label_pc_26b1e

dec_label_pc_26b1e:                               ; preds = %bb, %dec_label_pc_26af6
  %v3_26b1c = phi i32 [ %v2_26b1c, %bb ], [ %v2_26b10, %dec_label_pc_26af6 ]
  ret i32 %v3_26b1c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26b23(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b23:
  %v0_26b24 = load i32, i32* @eax, align 8
  ret i32 %v0_26b24
}

define i32 @_ZN5boost6detail14addressof_implISt6vectorI5CTxInSaIS3_EEE1fERS5_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26b25:
  ret i32 %arg1
}

define i32 @function_26b4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b4e:
  %v0_26b4e = load i32, i32* @ebp, align 4
  %v1_26b4e = load i32, i32* @eax, align 8
  %v3_26b4e = add i32 %v0_26b4e, -24
  %v4_26b4e = add i32 %v3_26b4e, %v1_26b4e
  %v5_26b4e = inttoptr i32 %v4_26b4e to i8*
  %v6_26b4e = load i8, i8* %v5_26b4e, align 1
  %v7_26b4e = load i32, i32* @edx, align 4
  %v8_26b4e = udiv i32 %v7_26b4e, 256
  %v9_26b4e = trunc i32 %v8_26b4e to i8
  %v10_26b4e = add i8 %v9_26b4e, %v6_26b4e
  store i8 %v10_26b4e, i8* %v5_26b4e, align 1
  %v31_26b4e = load i32, i32* @eax, align 8
  ret i32 %v31_26b4e
}

define i32 @function_26b55() local_unnamed_addr {
dec_label_pc_26b55:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26b55 = load i32, i32* %ecx.global-to-local, align 8
  %v1_26b55 = add i32 %v0_26b55, -1
  store i32 %v1_26b55, i32* %ecx.global-to-local, align 8
  %v0_26b57 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26b57
}

define i32 @_ZN5boost12range_detail11range_beginISt6vectorI5CTxInSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26b58:
  %v2_26b82 = call i32 @unknown_52642(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26b99

bb:                                               ; preds = %dec_label_pc_26b58
  %v1_26b97 = call i32 @function_26b9e()
  br label %dec_label_pc_26b99

dec_label_pc_26b99:                               ; preds = %bb, %dec_label_pc_26b58
  %v2_26b97 = phi i32 [ %v1_26b97, %bb ], [ %arg1, %dec_label_pc_26b58 ]
  ret i32 %v2_26b97

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_26b9e() local_unnamed_addr {
dec_label_pc_26b9e:
  %v0_26b9f = load i32, i32* @eax, align 8
  ret i32 %v0_26b9f
}

define i32 @_ZN5boost12range_detail9range_endISt6vectorI5CTxInSaIS3_EEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ba2:
  ret i32 %arg1
}

define i32 @function_26bab(i32 %arg1) local_unnamed_addr {
dec_label_pc_26bab:
  %v0_26bab = load i32, i32* @eax, align 8
  %v1_26bab = load i32, i32* @ebp, align 4
  %v2_26bab = add i32 %v1_26bab, -28
  %v3_26bab = inttoptr i32 %v2_26bab to i32*
  store i32 %v0_26bab, i32* %v3_26bab, align 4
  %v0_26bae = load i32, i32* @ebp, align 4
  %v1_26bae = add i32 %v0_26bae, 12
  %v2_26bae = inttoptr i32 %v1_26bae to i32*
  %v3_26bae = load i32, i32* %v2_26bae, align 4
  %v2_26bb1 = add i32 %v0_26bae, -32
  %v3_26bb1 = inttoptr i32 %v2_26bb1 to i32*
  store i32 %v3_26bae, i32* %v3_26bb1, align 4
  %v0_26bb4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_26bba = load i32, i32* @ebp, align 4
  %v2_26bba = add i32 %v1_26bba, -12
  %v3_26bba = inttoptr i32 %v2_26bba to i32*
  store i32 %v0_26bb4, i32* %v3_26bba, align 4
  %v0_26bbf = load i32, i32* @ebp, align 4
  %v1_26bbf = add i32 %v0_26bbf, -28
  %v2_26bbf = inttoptr i32 %v1_26bbf to i32*
  %v3_26bbf = load i32, i32* %v2_26bbf, align 4
  %v1_26bc2 = add i32 %v0_26bbf, -32
  %v2_26bc2 = inttoptr i32 %v1_26bc2 to i32*
  %v3_26bc2 = load i32, i32* %v2_26bc2, align 4
  %v2_26bcc = call i32 @unknown_526d4(i32 %v3_26bbf, i32 %v3_26bc2)
  %v0_26bd4 = load i32, i32* @ebp, align 4
  %v1_26bd4 = add i32 %v0_26bd4, -28
  %v2_26bd4 = inttoptr i32 %v1_26bd4 to i32*
  %v3_26bd4 = load i32, i32* %v2_26bd4, align 4
  store i32 %v3_26bd4, i32* @eax, align 8
  %v1_26bd7 = add i32 %v0_26bd4, -12
  %v2_26bd7 = inttoptr i32 %v1_26bd7 to i32*
  %v3_26bd7 = load i32, i32* %v2_26bd7, align 4
  %v1_26bda = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26bda = icmp eq i32 %v1_26bda, %v3_26bd7
  br i1 %v3_26bda, label %bb, label %dec_label_pc_26be3

bb:                                               ; preds = %dec_label_pc_26bab
  %v1_26be1 = call i32 @function_26be8()
  br label %dec_label_pc_26be3

dec_label_pc_26be3:                               ; preds = %bb, %dec_label_pc_26bab
  %v2_26be1 = phi i32 [ %v1_26be1, %bb ], [ %v3_26bd4, %dec_label_pc_26bab ]
  ret i32 %v2_26be1
}

define i32 @function_26be8() local_unnamed_addr {
dec_label_pc_26be8:
  %v0_26be9 = load i32, i32* @eax, align 8
  ret i32 %v0_26be9
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEE4baseEv() local_unnamed_addr {
dec_label_pc_26bec:
  %eax.global-to-local = alloca i32, align 4
  %v2_26bed = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_26bed
}

define i32 @function_26bf1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26bf1:
  %v0_26bf1 = load i32, i32* @ebx, align 4
  %v1_26bf1 = add i32 %v0_26bf1, 1166608453
  %v2_26bf1 = inttoptr i32 %v1_26bf1 to i8*
  %v3_26bf1 = load i8, i8* %v2_26bf1, align 1
  %v4_26bf1 = load i32, i32* @ecx, align 8
  %v5_26bf1 = trunc i32 %v4_26bf1 to i8
  %v6_26bf1 = sub i8 %v3_26bf1, %v5_26bf1
  store i8 %v6_26bf1, i8* %v2_26bf1, align 1
  %v0_26bf9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_26bfe = load i32, i32* @ebp, align 4
  %v2_26bfe = add i32 %v1_26bfe, -12
  %v3_26bfe = inttoptr i32 %v2_26bfe to i32*
  store i32 %v0_26bf9, i32* %v3_26bfe, align 4
  %v0_26c03 = load i32, i32* @ebp, align 4
  %v1_26c03 = add i32 %v0_26c03, -28
  %v2_26c03 = inttoptr i32 %v1_26c03 to i32*
  %v3_26c03 = load i32, i32* %v2_26c03, align 4
  store i32 %v3_26c03, i32* @eax, align 8
  %v1_26c06 = add i32 %v0_26c03, -12
  %v2_26c06 = inttoptr i32 %v1_26c06 to i32*
  %v3_26c06 = load i32, i32* %v2_26c06, align 4
  %v1_26c09 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26c09 = icmp eq i32 %v1_26c09, %v3_26c06
  br i1 %v3_26c09, label %bb, label %dec_label_pc_26c12

bb:                                               ; preds = %dec_label_pc_26bf1
  %v1_26c10 = call i32 @function_26c17()
  br label %dec_label_pc_26c12

dec_label_pc_26c12:                               ; preds = %bb, %dec_label_pc_26bf1
  %v2_26c10 = phi i32 [ %v1_26c10, %bb ], [ %v3_26c03, %dec_label_pc_26bf1 ]
  ret i32 %v2_26c10
}

define i32 @function_26c17() local_unnamed_addr {
dec_label_pc_26c17:
  %v0_26c18 = load i32, i32* @eax, align 8
  ret i32 %v0_26c18
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256xEEC1EPKSt13_Rb_tree_nodeIS3_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26c1a:
  store i32 %arg2, i32* %arg1, align 4
  ret i32 0
}

define i32 @function_26c49(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c49:
  %v0_26c49 = load i1, i1* @zf, align 1
  br i1 %v0_26c49, label %bb, label %dec_label_pc_26c49.dec_label_pc_26c4b_crit_edge

dec_label_pc_26c49.dec_label_pc_26c4b_crit_edge:  ; preds = %dec_label_pc_26c49
  %v2_26c49.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_26c4b

bb:                                               ; preds = %dec_label_pc_26c49
  %v1_26c49 = call i32 @function_26c50()
  br label %dec_label_pc_26c4b

dec_label_pc_26c4b:                               ; preds = %dec_label_pc_26c49.dec_label_pc_26c4b_crit_edge, %bb
  %v2_26c49 = phi i32 [ %v2_26c49.pre, %dec_label_pc_26c49.dec_label_pc_26c4b_crit_edge ], [ %v1_26c49, %bb ]
  ret i32 %v2_26c49

; uselistorder directives
  uselistorder label %dec_label_pc_26c4b, { 1, 0 }
}

define i32 @function_26c50() local_unnamed_addr {
dec_label_pc_26c50:
  %v0_26c51 = load i32, i32* @eax, align 8
  ret i32 %v0_26c51
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c52:
  %v1_26c6c = add i32 %arg1, 8
  %v2_26c6c = inttoptr i32 %v1_26c6c to i32*
  %v3_26c6c = load i32, i32* %v2_26c6c, align 4
  ret i32 %v3_26c6c
}

define i32 @function_26c7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c7a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26c7f() local_unnamed_addr {
dec_label_pc_26c7f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26c7f = load i32, i32* %ecx.global-to-local, align 8
  %v1_26c7f = add i32 %v0_26c7f, -1
  store i32 %v1_26c7f, i32* %ecx.global-to-local, align 8
  %v0_26c81 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26c81
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c82:
  %v1_26c9c = add i32 %arg1, 4
  store i32 %v1_26c9c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26cab

bb:                                               ; preds = %dec_label_pc_26c82
  %v2_26ca9 = call i32 @function_26cb0(i32 %arg1)
  br label %dec_label_pc_26cab

dec_label_pc_26cab:                               ; preds = %bb, %dec_label_pc_26c82
  %v3_26ca9 = phi i32 [ %v2_26ca9, %bb ], [ %v1_26c9c, %dec_label_pc_26c82 ]
  ret i32 %v3_26ca9
}

define i32 @function_26cb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_26cb0:
  %v0_26cb1 = load i32, i32* @eax, align 8
  ret i32 %v0_26cb1
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_ESD_RS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_26cb2:
  ret i32 %arg5
}

define i32 @function_26cda(i32 %arg1) local_unnamed_addr {
dec_label_pc_26cda:
  %eax.global-to-local = alloca i32, align 4
  %v2_26cda = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_26cda = load i32, i32* @eax, align 8
  %v4_26cda = trunc i32 %v3_26cda to i8
  %v5_26cda = add i8 %v4_26cda, %v2_26cda
  %v21_26cda = inttoptr i32 %v3_26cda to i8*
  store i8 %v5_26cda, i8* %v21_26cda, align 1
  %v0_26cdc = load i32, i32* @eax, align 8
  %v1_26cdc = load i32, i32* @ebp, align 4
  %v2_26cdc = add i32 %v1_26cdc, -12
  %v3_26cdc = inttoptr i32 %v2_26cdc to i32*
  store i32 %v0_26cdc, i32* %v3_26cdc, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26d31

dec_label_pc_26ce3:                               ; preds = %dec_label_pc_26d31
  %v3_26ce3 = load i32, i32* %v2_26d31, align 4
  store i32 %v3_26ce3, i32* %eax.global-to-local, align 8
  %v1_26ce9 = call i32 @unknown_5282e(i32 %v3_26ce3)
  store i32 %v1_26ce9, i32* %eax.global-to-local, align 8
  %v0_26cf0 = load i32, i32* @ebp, align 4
  %v1_26cf0 = add i32 %v0_26cf0, -32
  %v2_26cf0 = inttoptr i32 %v1_26cf0 to i32*
  %v3_26cf0 = load i32, i32* %v2_26cf0, align 4
  store i32 %v3_26cf0, i32* %eax.global-to-local, align 8
  %v1_26cf3 = add i32 %v0_26cf0, -44
  %v2_26cf3 = inttoptr i32 %v1_26cf3 to i32*
  %v3_26cf3 = load i32, i32* %v2_26cf3, align 4
  %v3_26d01 = call i32 @unknown_43c7c(i32 %v3_26cf0, i32 %v1_26ce9, i32 %v3_26cf3)
  %v1_26d06 = xor i32 %v3_26d01, 1
  %v4_26d06 = trunc i32 %v1_26d06 to i8
  store i32 %v1_26d06, i32* %eax.global-to-local, align 8
  %v5_26d09 = icmp eq i8 %v4_26d06, 0
  %v0_26d23 = load i32, i32* @ebp, align 4
  %v1_26d23 = add i32 %v0_26d23, -36
  %v2_26d23 = inttoptr i32 %v1_26d23 to i32*
  %v3_26d23 = load i32, i32* %v2_26d23, align 4
  store i32 %v3_26d23, i32* %eax.global-to-local, align 8
  br i1 %v5_26d09, label %dec_label_pc_26d23, label %dec_label_pc_26d0d

dec_label_pc_26d0d:                               ; preds = %dec_label_pc_26ce3
  %v2_26d10 = add i32 %v0_26d23, -40
  %v3_26d10 = inttoptr i32 %v2_26d10 to i32*
  store i32 %v3_26d23, i32* %v3_26d10, align 4
  %v0_26d13 = load i32, i32* @ebp, align 4
  %v1_26d13 = add i32 %v0_26d13, -36
  %v2_26d13 = inttoptr i32 %v1_26d13 to i32*
  %v3_26d13 = load i32, i32* %v2_26d13, align 4
  store i32 %v3_26d13, i32* %eax.global-to-local, align 8
  %v1_26d19 = call i32 @unknown_52872(i32 %v3_26d13)
  store i32 %v1_26d19, i32* %eax.global-to-local, align 8
  %v1_26d1e = load i32, i32* @ebp, align 4
  %v2_26d1e = add i32 %v1_26d1e, -36
  %v3_26d1e = inttoptr i32 %v2_26d1e to i32*
  store i32 %v1_26d19, i32* %v3_26d1e, align 4
  br label %dec_label_pc_26d31.backedge

dec_label_pc_26d31.backedge:                      ; preds = %dec_label_pc_26d0d, %dec_label_pc_26d23
  %v3_26d35.pre = load i32, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26d31

dec_label_pc_26d23:                               ; preds = %dec_label_pc_26ce3
  %v1_26d29 = call i32 @unknown_5254d(i32 %v3_26d23)
  store i32 %v1_26d29, i32* %eax.global-to-local, align 8
  %v1_26d2e = load i32, i32* @ebp, align 4
  %v2_26d2e = add i32 %v1_26d2e, -36
  %v3_26d2e = inttoptr i32 %v2_26d2e to i32*
  store i32 %v1_26d29, i32* %v3_26d2e, align 4
  br label %dec_label_pc_26d31.backedge

dec_label_pc_26d31:                               ; preds = %dec_label_pc_26d31.backedge, %dec_label_pc_26cda
  %v3_26d35 = phi i32 [ %v3_26d35.pre, %dec_label_pc_26d31.backedge ], [ 0, %dec_label_pc_26cda ]
  %v0_26d31 = load i32, i32* @ebp, align 4
  %v1_26d31 = add i32 %v0_26d31, -36
  %v2_26d31 = inttoptr i32 %v1_26d31 to i32*
  %v3_26d31 = load i32, i32* %v2_26d31, align 4
  %v10_26d31 = icmp eq i32 %v3_26d31, 0
  %v1_26d35 = icmp eq i1 %v10_26d31, false
  %v2_26d35 = zext i1 %v1_26d35 to i32
  %v4_26d35 = and i32 %v3_26d35, -256
  %v5_26d35 = or i32 %v2_26d35, %v4_26d35
  store i32 %v5_26d35, i32* %eax.global-to-local, align 8
  %v5_26d38 = icmp eq i1 %v1_26d35, false
  %v1_26d3a = icmp eq i1 %v5_26d38, false
  br i1 %v1_26d3a, label %dec_label_pc_26ce3, label %dec_label_pc_26d3c

dec_label_pc_26d3c:                               ; preds = %dec_label_pc_26d31
  %v1_26d3c = add i32 %v0_26d31, -40
  %v2_26d3c = inttoptr i32 %v1_26d3c to i32*
  %v3_26d3c = load i32, i32* %v2_26d3c, align 4
  store i32 %v3_26d3c, i32* %eax.global-to-local, align 8
  %v1_26d43 = add i32 %v0_26d31, -28
  %v2_26d43 = inttoptr i32 %v1_26d43 to i32*
  %v3_26d43 = load i32, i32* %v2_26d43, align 4
  store i32 %v3_26d43, i32* %eax.global-to-local, align 8
  %v2_26d49 = call i32 @unknown_4d8cc(i32 %v3_26d43, i32 %v3_26d3c)
  store i32 %v2_26d49, i32* %eax.global-to-local, align 8
  %v0_26d4e = load i32, i32* @ebp, align 4
  %v1_26d4e = add i32 %v0_26d4e, -28
  %v2_26d4e = inttoptr i32 %v1_26d4e to i32*
  %v3_26d4e = load i32, i32* %v2_26d4e, align 4
  store i32 %v3_26d4e, i32* @eax, align 8
  %v1_26d51 = add i32 %v0_26d4e, -12
  %v2_26d51 = inttoptr i32 %v1_26d51 to i32*
  %v3_26d51 = load i32, i32* %v2_26d51, align 4
  %v1_26d54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26d54 = icmp eq i32 %v1_26d54, %v3_26d51
  br i1 %v3_26d54, label %bb, label %dec_label_pc_26d5d

bb:                                               ; preds = %dec_label_pc_26d3c
  %v1_26d5b = call i32 @function_26d62()
  store i32 %v1_26d5b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26d5d

dec_label_pc_26d5d:                               ; preds = %bb, %dec_label_pc_26d3c
  %v2_26d5b = phi i32 [ %v1_26d5b, %bb ], [ %v3_26d4e, %dec_label_pc_26d3c ]
  ret i32 %v2_26d5b

; uselistorder directives
  uselistorder i32* %v2_26d31, { 1, 0 }
  uselistorder i32 %v0_26d31, { 1, 0, 2 }
  uselistorder i32 %v3_26d23, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 10, 11, 12, 13, 1, 3, 4, 5, 2, 6, 7, 8, 9, 14 }
  uselistorder label %dec_label_pc_26d31.backedge, { 1, 0 }
}

define i32 @function_26d62() local_unnamed_addr {
dec_label_pc_26d62:
  %v0_26d63 = load i32, i32* @eax, align 8
  ret i32 %v0_26d63
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d66:
  %stack_var_-17 = alloca i32, align 4
  %v1_26d83 = call i32 @unknown_52956(i32 %arg1)
  %v2_26d8c = ptrtoint i32* %stack_var_-17 to i32
  %v2_26d92 = call i32 @unknown_52228(i32 %v2_26d8c, i32 %v1_26d83)
  store i32 %v2_26d92, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26da3

bb:                                               ; preds = %dec_label_pc_26d66
  %v1_26da1 = call i32 @function_26da8()
  br label %dec_label_pc_26da3

dec_label_pc_26da3:                               ; preds = %bb, %dec_label_pc_26d66
  %v2_26da1 = phi i32 [ %v1_26da1, %bb ], [ %v2_26d92, %dec_label_pc_26d66 ]
  ret i32 %v2_26da1
}

define i32 @function_26da6(i32 %arg1) local_unnamed_addr {
dec_label_pc_26da6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26da8() local_unnamed_addr {
dec_label_pc_26da8:
  %v0_26da9 = load i32, i32* @eax, align 8
  ret i32 %v0_26da9
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26daa:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26dd0

bb:                                               ; preds = %dec_label_pc_26daa
  %v2_26dce = call i32 @function_26dd5(i32 %arg1)
  br label %dec_label_pc_26dd0

dec_label_pc_26dd0:                               ; preds = %bb, %dec_label_pc_26daa
  %v3_26dce = phi i32 [ %v2_26dce, %bb ], [ %arg1, %dec_label_pc_26daa ]
  ret i32 %v3_26dce
}

define i32 @function_26dd5(i32 %arg1) local_unnamed_addr {
dec_label_pc_26dd5:
  %v0_26dd6 = load i32, i32* @eax, align 8
  ret i32 %v0_26dd6
}

define i32 @_ZSt13copy_backwardIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26dd7:
  %v1_26e01 = call i32 @unknown_529f7(i32 %arg2)
  ret i32 %v1_26e01
}

define i32 @function_26e06(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e06:
  %ebx.global-to-local = alloca i32, align 4
  %v0_26e06 = load i32, i32* @eax, align 8
  store i32 %v0_26e06, i32* %ebx.global-to-local, align 4
  %v0_26e08 = load i32, i32* @ebp, align 4
  %v1_26e08 = add i32 %v0_26e08, -28
  %v2_26e08 = inttoptr i32 %v1_26e08 to i32*
  %v3_26e08 = load i32, i32* %v2_26e08, align 4
  %v1_26e0e = call i32 @unknown_529f7(i32 %v3_26e08)
  %v0_26e13 = load i32, i32* @ebp, align 4
  %v1_26e13 = add i32 %v0_26e13, -36
  %v2_26e13 = inttoptr i32 %v1_26e13 to i32*
  %v3_26e13 = load i32, i32* %v2_26e13, align 4
  %v0_26e1a = load i32, i32* %ebx.global-to-local, align 4
  %v3_26e21 = call i32 @unknown_52a2c(i32 %v1_26e0e, i32 %v0_26e1a, i32 %v3_26e13)
  store i32 %v3_26e21, i32* @eax, align 8
  %v0_26e26 = load i32, i32* @ebp, align 4
  %v1_26e26 = add i32 %v0_26e26, -12
  %v2_26e26 = inttoptr i32 %v1_26e26 to i32*
  %v3_26e26 = load i32, i32* %v2_26e26, align 4
  %v1_26e29 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26e29 = icmp eq i32 %v1_26e29, %v3_26e26
  br i1 %v3_26e29, label %bb, label %dec_label_pc_26e32

bb:                                               ; preds = %dec_label_pc_26e06
  %v1_26e30 = call i32 @function_26e37()
  br label %dec_label_pc_26e32

dec_label_pc_26e32:                               ; preds = %bb, %dec_label_pc_26e06
  %v2_26e30 = phi i32 [ %v1_26e30, %bb ], [ %v3_26e21, %dec_label_pc_26e06 ]
  ret i32 %v2_26e30
}

define i32 @function_26e37() local_unnamed_addr {
dec_label_pc_26e37:
  %v0_26e3c = load i32, i32* @eax, align 8
  ret i32 %v0_26e3c
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_26e3e:
  %v2_26e58 = load i32, i32* %arg1, align 4
  store i32 %v2_26e58, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26e66

bb:                                               ; preds = %dec_label_pc_26e3e
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_26e64 = call i32 @function_26e6b(i32 %tmp100)
  br label %dec_label_pc_26e66

dec_label_pc_26e66:                               ; preds = %bb, %dec_label_pc_26e3e
  %v3_26e64 = phi i32 [ %v2_26e64, %bb ], [ %v2_26e58, %dec_label_pc_26e3e ]
  ret i32 %v3_26e64

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26e6b(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e6b:
  %v0_26e6c = load i32, i32* @eax, align 8
  ret i32 %v0_26e6c
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26e6e:
  %v1_26e98 = call i32 @unknown_52b36(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_26ea5 = call i32 @function_3e37a(i32 %arg1)
  %v2_26eac = sub i32 %v1_26e98, %v1_26ea5
  %v7_26eb1 = icmp ult i32 %v2_26eac, %arg2
  %v5_26eb6 = icmp eq i1 %v7_26eb1, false
  br i1 %v5_26eb6, label %bb, label %dec_label_pc_26eba

bb:                                               ; preds = %dec_label_pc_26e6e
  %v1_26eb8 = call i32 @function_26ec5()
  br label %dec_label_pc_26eba

dec_label_pc_26eba:                               ; preds = %bb, %dec_label_pc_26e6e
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_26ec5() local_unnamed_addr {
dec_label_pc_26ec5:
  %v0_26ec5 = load i32, i32* @ebp, align 4
  %v1_26ec5 = add i32 %v0_26ec5, -28
  %v2_26ec5 = inttoptr i32 %v1_26ec5 to i32*
  %v3_26ec5 = load i32, i32* %v2_26ec5, align 4
  store i32 %v3_26ec5, i32* @eax, align 8
  %v1_26ecb = call i32 @function_3e37a(i32 %v3_26ec5)
  ret i32 %v1_26ecb
}

define i32 @function_26ed2(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ed2:
  %v0_26ed2 = load i32, i32* @ebp, align 4
  %v1_26ed2 = add i32 %v0_26ed2, -28
  %v2_26ed2 = inttoptr i32 %v1_26ed2 to i32*
  %v3_26ed2 = load i32, i32* %v2_26ed2, align 4
  store i32 %v3_26ed2, i32* @eax, align 8
  %v1_26ed8 = call i32 @function_3e37a(i32 %v3_26ed2)
  %v1_26edd = load i32, i32* @ebp, align 4
  %v2_26edd = add i32 %v1_26edd, -20
  %v3_26edd = inttoptr i32 %v2_26edd to i32*
  store i32 %v1_26ed8, i32* %v3_26edd, align 4
  %v0_26ee0 = load i32, i32* @ebp, align 4
  %v1_26ee0 = add i32 %v0_26ee0, -32
  %v1_26ee7 = add i32 %v0_26ee0, -20
  %v2_26eed = call i32 @unknown_4ed03(i32 %v1_26ee7, i32 %v1_26ee0)
  %v1_26ef2 = inttoptr i32 %v2_26eed to i32*
  %v2_26ef2 = load i32, i32* %v1_26ef2, align 4
  %v1_26ef4 = load i32, i32* @ebx, align 4
  %v2_26ef4 = add i32 %v1_26ef4, %v2_26ef2
  %v1_26ef6 = load i32, i32* @ebp, align 4
  %v2_26ef6 = add i32 %v1_26ef6, -16
  %v3_26ef6 = inttoptr i32 %v2_26ef6 to i32*
  store i32 %v2_26ef4, i32* %v3_26ef6, align 4
  %v0_26ef9 = load i32, i32* @ebp, align 4
  %v1_26ef9 = add i32 %v0_26ef9, -28
  %v2_26ef9 = inttoptr i32 %v1_26ef9 to i32*
  %v3_26ef9 = load i32, i32* %v2_26ef9, align 4
  store i32 %v3_26ef9, i32* @eax, align 8
  %v1_26eff = call i32 @function_3e37a(i32 %v3_26ef9)
  %v1_26f04 = load i32, i32* @ebp, align 4
  %v2_26f04 = add i32 %v1_26f04, -16
  %v3_26f04 = inttoptr i32 %v2_26f04 to i32*
  %v4_26f04 = load i32, i32* %v3_26f04, align 4
  %tmp5 = icmp ugt i32 %v1_26eff, %v4_26f04
  br i1 %tmp5, label %dec_label_pc_26f19, label %dec_label_pc_26f09

dec_label_pc_26f09:                               ; preds = %dec_label_pc_26ed2
  %v1_26f09 = add i32 %v1_26f04, -28
  %v2_26f09 = inttoptr i32 %v1_26f09 to i32*
  %v3_26f09 = load i32, i32* %v2_26f09, align 4
  %v1_26f0f = call i32 @unknown_52b36(i32 %v3_26f09)
  %v1_26f14 = load i32, i32* @ebp, align 4
  %v2_26f14 = add i32 %v1_26f14, -16
  %v3_26f14 = inttoptr i32 %v2_26f14 to i32*
  %v4_26f14 = load i32, i32* %v3_26f14, align 4
  %v10_26f14 = icmp ult i32 %v1_26f0f, %v4_26f14
  %v1_26f17 = icmp eq i1 %v10_26f14, false
  br i1 %v1_26f17, label %dec_label_pc_26f29, label %dec_label_pc_26f19

dec_label_pc_26f19:                               ; preds = %dec_label_pc_26ed2, %dec_label_pc_26f09
  %v0_26f19 = phi i32 [ %v1_26f04, %dec_label_pc_26ed2 ], [ %v1_26f14, %dec_label_pc_26f09 ]
  %v1_26f19 = add i32 %v0_26f19, -28
  %v2_26f19 = inttoptr i32 %v1_26f19 to i32*
  %v3_26f19 = load i32, i32* %v2_26f19, align 4
  %v1_26f1f = call i32 @unknown_52b36(i32 %v3_26f19)
  %v0_26f29.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_26f29

dec_label_pc_26f29:                               ; preds = %dec_label_pc_26f09, %dec_label_pc_26f19
  %v0_26f29 = phi i32 [ %v0_26f29.pre, %dec_label_pc_26f19 ], [ %v1_26f14, %dec_label_pc_26f09 ]
  %storemerge = phi i32 [ %v1_26f1f, %dec_label_pc_26f19 ], [ %v4_26f14, %dec_label_pc_26f09 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_26f29 = add i32 %v0_26f29, -12
  %v2_26f29 = inttoptr i32 %v1_26f29 to i32*
  %v3_26f29 = load i32, i32* %v2_26f29, align 4
  %v1_26f2c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26f2c = icmp eq i32 %v1_26f2c, %v3_26f29
  br i1 %v3_26f2c, label %bb, label %dec_label_pc_26f35

bb:                                               ; preds = %dec_label_pc_26f29
  %v1_26f33 = call i32 @function_26f3a()
  br label %dec_label_pc_26f35

dec_label_pc_26f35:                               ; preds = %bb, %dec_label_pc_26f29
  %v3_26f33 = phi i32 [ %v1_26f33, %bb ], [ %storemerge, %dec_label_pc_26f29 ]
  ret i32 %v3_26f33

; uselistorder directives
  uselistorder i32 (i32)* @unknown_52b36, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_3e37a, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_26f29, { 1, 0 }
  uselistorder label %dec_label_pc_26f19, { 1, 0 }
}

define i32 @function_26f3a() local_unnamed_addr {
dec_label_pc_26f3a:
  %v0_26f3f = load i32, i32* @eax, align 8
  ret i32 %v0_26f3f
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f40:
  %v2_26f6a = call i32 @unknown_4e018(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26f7e

bb:                                               ; preds = %dec_label_pc_26f40
  %v1_26f7c = call i32 @function_26f83()
  br label %dec_label_pc_26f7e

dec_label_pc_26f7e:                               ; preds = %bb, %dec_label_pc_26f40
  %v2_26f7c = phi i32 [ %v1_26f7c, %bb ], [ %arg1, %dec_label_pc_26f40 ]
  ret i32 %v2_26f7c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_26f83() local_unnamed_addr {
dec_label_pc_26f83:
  %v0_26f84 = load i32, i32* @eax, align 8
  ret i32 %v0_26f84
}

define i32 @_ZN9__gnu_cxxmiIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f87:
  %v1_26fab = call i32 @unknown_4dd31(i32 %arg1)
  %v1_26fb0 = inttoptr i32 %v1_26fab to i32*
  %v2_26fb0 = load i32, i32* %v1_26fb0, align 4
  %v1_26fba = call i32 @unknown_4dd31(i32 %arg2)
  %v1_26fbf = inttoptr i32 %v1_26fba to i32*
  %v2_26fbf = load i32, i32* %v1_26fbf, align 4
  %v2_26fc3 = sub i32 %v2_26fb0, %v2_26fbf
  %v2_26fc7 = sdiv i32 %v2_26fc3, 4
  %v3_26fca = mul i32 %v2_26fc7, -858993459
  store i32 %v3_26fca, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_26fdc

bb:                                               ; preds = %dec_label_pc_26f87
  %v1_26fda = call i32 @function_26fe1()
  br label %dec_label_pc_26fdc

dec_label_pc_26fdc:                               ; preds = %bb, %dec_label_pc_26f87
  %v2_26fda = phi i32 [ %v1_26fda, %bb ], [ %v3_26fca, %dec_label_pc_26f87 ]
  ret i32 %v2_26fda

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4dd31, { 1, 0 }
}

define i32 @function_26fe1() local_unnamed_addr {
dec_label_pc_26fe1:
  %v0_26fe6 = load i32, i32* @eax, align 8
  ret i32 %v0_26fe6
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26fe8:
  ret i32 %arg2
}

define i32 @function_26ff8(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ff8:
  %v0_26ff8 = load i32, i32* @ebp, align 4
  %v1_26ff8 = add i32 %v0_26ff8, 1
  store i32 %v1_26ff8, i32* @ebp, align 4
  %v0_26ffb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27000 = add i32 %v0_26ff8, -11
  %v3_27000 = inttoptr i32 %v2_27000 to i32*
  store i32 %v0_26ffb, i32* %v3_27000, align 4
  %v0_27005 = load i32, i32* @ebp, align 4
  %v1_27005 = add i32 %v0_27005, -32
  %v2_27005 = inttoptr i32 %v1_27005 to i32*
  %v3_27005 = load i32, i32* %v2_27005, align 4
  %v10_27005 = icmp eq i32 %v3_27005, 0
  br i1 %v10_27005, label %dec_label_pc_2702c, label %dec_label_pc_2700b

dec_label_pc_2700b:                               ; preds = %dec_label_pc_26ff8
  %v1_2700b = add i32 %v0_27005, -28
  %v2_2700b = inttoptr i32 %v1_2700b to i32*
  %v3_2700b = load i32, i32* %v2_2700b, align 4
  %v3_27016 = load i32, i32* %v2_27005, align 4
  %v3_27020 = call i32 @unknown_52cee(i32 %v3_2700b, i32 %v3_27016, i32 0)
  %v0_2702c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2702c

dec_label_pc_2702c:                               ; preds = %dec_label_pc_26ff8, %dec_label_pc_2700b
  %v0_2702c = phi i32 [ %v0_2702c.pre, %dec_label_pc_2700b ], [ %v0_27005, %dec_label_pc_26ff8 ]
  %storemerge = phi i32 [ %v3_27020, %dec_label_pc_2700b ], [ 0, %dec_label_pc_26ff8 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_2702c = add i32 %v0_2702c, -12
  %v2_2702c = inttoptr i32 %v1_2702c to i32*
  %v3_2702c = load i32, i32* %v2_2702c, align 4
  %v1_2702f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2702f = icmp eq i32 %v1_2702f, %v3_2702c
  br i1 %v3_2702f, label %bb, label %dec_label_pc_27038

bb:                                               ; preds = %dec_label_pc_2702c
  %v1_27036 = call i32 @function_2703d()
  br label %dec_label_pc_27038

dec_label_pc_27038:                               ; preds = %bb, %dec_label_pc_2702c
  %v2_27036 = phi i32 [ %v1_27036, %bb ], [ %storemerge, %dec_label_pc_2702c ]
  ret i32 %v2_27036

; uselistorder directives
  uselistorder label %dec_label_pc_2702c, { 1, 0 }
}

define i32 @function_2703d() local_unnamed_addr {
dec_label_pc_2703d:
  %v0_2703e = load i32, i32* @eax, align 8
  ret i32 %v0_2703e
}

define i32 @_ZSt22__uninitialized_move_aIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_SaIS4_EET0_T_S8_S7_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2703f:
  ret i32 %arg4
}

define i32 @function_2705e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2705e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27098() local_unnamed_addr {
dec_label_pc_27098:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27098 = load i32, i32* %ecx.global-to-local, align 8
  %v1_27098 = add i32 %v0_27098, -1
  store i32 %v1_27098, i32* %ecx.global-to-local, align 8
  %v0_2709a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2709a
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE7destroyEPS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2709c:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_270d0

bb:                                               ; preds = %dec_label_pc_2709c
  %v2_270ce = call i32 @function_270d5(i32 %arg2)
  br label %dec_label_pc_270d0

dec_label_pc_270d0:                               ; preds = %bb, %dec_label_pc_2709c
  %v3_270ce = phi i32 [ %v2_270ce, %bb ], [ 0, %dec_label_pc_2709c ]
  ret i32 %v3_270ce
}

define i32 @function_270d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_270d5:
  %v0_270d6 = load i32, i32* @eax, align 8
  ret i32 %v0_270d6
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_270d8:
  %v0_270ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_270f8 = inttoptr i32 %arg2 to i32*
  %v2_270f8 = load i32, i32* %v1_270f8, align 4
  store i32 %v2_270f8, i32* %arg1, align 4
  ret i32 %v0_270ea
}

define i32 @function_27102(i32 %arg1) local_unnamed_addr {
dec_label_pc_27102:
  %v0_27102 = load i32, i32* @eax, align 8
  %v1_27102 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27102 = xor i32 %v1_27102, %v0_27102
  %v3_27102 = icmp eq i32 %v2_27102, 0
  store i32 %v2_27102, i32* @eax, align 8
  br i1 %v3_27102, label %bb, label %dec_label_pc_2710b

bb:                                               ; preds = %dec_label_pc_27102
  %v1_27109 = call i32 @function_27110()
  br label %dec_label_pc_2710b

dec_label_pc_2710b:                               ; preds = %bb, %dec_label_pc_27102
  %v2_27109 = phi i32 [ %v1_27109, %bb ], [ %v2_27102, %dec_label_pc_27102 ]
  ret i32 %v2_27109
}

define i32 @function_27110() local_unnamed_addr {
dec_label_pc_27110:
  %v0_27111 = load i32, i32* @eax, align 8
  ret i32 %v0_27111
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructIKSE_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27112:
  ret i32 %arg3
}

define i32 @function_2712a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2712a:
  %v0_2712a = load i32, i32* @ebp, align 4
  %v1_2712a = add i32 %v0_2712a, 20
  %v2_2712a = inttoptr i32 %v1_2712a to i8*
  %v3_2712a = load i8, i8* %v2_2712a, align 1
  %v3_2712e = add i32 %v0_2712a, -37
  %v4_2712e = inttoptr i32 %v3_2712e to i8*
  store i8 %v3_2712a, i8* %v4_2712e, align 1
  %v0_27131 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_27131

; uselistorder directives
  uselistorder i32 -37, { 1, 2, 0 }
}

define i32 @function_27138(i32 %arg1) local_unnamed_addr {
dec_label_pc_27138:
  %v0_27138 = load i32, i32* @ebp, align 4
  %v1_27138 = add i32 %v0_27138, 1
  store i32 %v1_27138, i32* @ebp, align 4
  %v1_2713c = add i32 %v0_27138, -27
  %v2_2713c = inttoptr i32 %v1_2713c to i32*
  %v3_2713c = load i32, i32* %v2_2713c, align 4
  %v1_2713f = add i32 %v3_2713c, 4
  %v1_27145 = call i32 @unknown_4961c(i32 %v1_2713f)
  %v0_2714a = load i32, i32* @ebp, align 4
  %v1_2714a = add i32 %v0_2714a, -32
  %v2_2714a = inttoptr i32 %v1_2714a to i32*
  %v3_2714a = load i32, i32* %v2_2714a, align 4
  %v2_27154 = call i32 @unknown_52ed2(i32 %v1_27145, i32 %v3_2714a)
  %v0_2715d = load i32, i32* @ebp, align 4
  %v1_2715d = add i32 %v0_2715d, -28
  %v2_2715d = inttoptr i32 %v1_2715d to i32*
  %v3_2715d = load i32, i32* %v2_2715d, align 4
  %v2_27163 = call i32 @unknown_4b6e4(i32 %v3_2715d, i32 %v2_27154)
  %v0_27168 = load i32, i32* @ebp, align 4
  %v1_27168 = add i32 %v0_27168, -12
  %v2_27168 = inttoptr i32 %v1_27168 to i32*
  %v3_27168 = load i32, i32* %v2_27168, align 4
  ret i32 %v3_27168
}

define i32 @function_2716e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2716e:
  %zf.global-to-local = alloca i1, align 1
  %v0_2716e = load i32, i32* @eax, align 8
  %v1_2716e = trunc i32 %v0_2716e to i8
  %v2_2716e = load i1, i1* @cf, align 1
  %v3_2716e = zext i1 %v2_2716e to i8
  %v4_2716e = add i8 %v3_2716e, %v1_2716e
  %v13_2716e = icmp eq i8 %v4_2716e, 0
  store i1 %v13_2716e, i1* %zf.global-to-local, align 1
  %v22_2716e = zext i8 %v4_2716e to i32
  %v24_2716e = and i32 %v0_2716e, -256
  %v25_2716e = or i32 %v22_2716e, %v24_2716e
  store i32 %v25_2716e, i32* @eax, align 8
  %v1_27170 = inttoptr i32 %v25_2716e to i8*
  %v2_27170 = load i8, i8* %v1_27170, align 1
  %v5_27170 = add i8 %v2_27170, %v4_2716e
  %v15_27170 = icmp eq i8 %v5_27170, 0
  store i1 %v15_27170, i1* %zf.global-to-local, align 1
  store i8 %v5_27170, i8* %v1_27170, align 1
  %v0_27172 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_27172, label %bb, label %dec_label_pc_2716e.dec_label_pc_27174_crit_edge

dec_label_pc_2716e.dec_label_pc_27174_crit_edge:  ; preds = %dec_label_pc_2716e
  %v2_27172.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27174

bb:                                               ; preds = %dec_label_pc_2716e
  %v1_27172 = call i32 @function_27179()
  br label %dec_label_pc_27174

dec_label_pc_27174:                               ; preds = %dec_label_pc_2716e.dec_label_pc_27174_crit_edge, %bb
  %v2_27172 = phi i32 [ %v2_27172.pre, %dec_label_pc_2716e.dec_label_pc_27174_crit_edge ], [ %v1_27172, %bb ]
  ret i32 %v2_27172

; uselistorder directives
  uselistorder label %dec_label_pc_27174, { 1, 0 }
}

define i32 @function_27179() local_unnamed_addr {
dec_label_pc_27179:
  %v0_2717a = load i32, i32* @eax, align 8
  ret i32 %v0_2717a
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEC1ERKS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2717c:
  ret i32 %arg1
}

define i32 @function_2718a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2718a:
  %v0_2718c = load i32, i32* @ebp, align 4
  %v1_2718c = add i32 %v0_2718c, 1
  store i32 %v1_2718c, i32* @ebp, align 4
  %v0_2718f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27194 = add i32 %v0_2718c, -11
  %v3_27194 = inttoptr i32 %v2_27194 to i32*
  store i32 %v0_2718f, i32* %v3_27194, align 4
  %v0_27199 = load i32, i32* @ebp, align 4
  %v1_27199 = add i32 %v0_27199, -32
  %v2_27199 = inttoptr i32 %v1_27199 to i32*
  %v3_27199 = load i32, i32* %v2_27199, align 4
  %v1_2719c = inttoptr i32 %v3_27199 to i32*
  %v2_2719c = load i32, i32* %v1_2719c, align 4
  %v1_2719e = add i32 %v0_27199, -28
  %v2_2719e = inttoptr i32 %v1_2719e to i32*
  %v3_2719e = load i32, i32* %v2_2719e, align 4
  %v2_271a1 = inttoptr i32 %v3_2719e to i32*
  store i32 %v2_2719c, i32* %v2_271a1, align 4
  %v0_271a3 = load i32, i32* @ebp, align 4
  %v1_271a3 = add i32 %v0_271a3, -12
  %v2_271a3 = inttoptr i32 %v1_271a3 to i32*
  %v3_271a3 = load i32, i32* %v2_271a3, align 4
  %v1_271a6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_271a6 = xor i32 %v1_271a6, %v3_271a3
  %v3_271a6 = icmp eq i32 %v2_271a6, 0
  store i32 %v2_271a6, i32* @eax, align 8
  br i1 %v3_271a6, label %bb, label %dec_label_pc_271af

bb:                                               ; preds = %dec_label_pc_2718a
  %v1_271ad = call i32 @function_271b4()
  br label %dec_label_pc_271af

dec_label_pc_271af:                               ; preds = %bb, %dec_label_pc_2718a
  %v3_271ad = phi i32 [ %v1_271ad, %bb ], [ %v2_271a6, %dec_label_pc_2718a ]
  ret i32 %v3_271ad
}

define i32 @function_271b4() local_unnamed_addr {
dec_label_pc_271b4:
  %v0_271b5 = load i32, i32* @eax, align 8
  ret i32 %v0_271b5
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEE4baseEv() local_unnamed_addr {
dec_label_pc_271b6:
  %eax.global-to-local = alloca i32, align 4
  %v17_271b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_271b9
}

define i32 @function_271be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_271be:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_271be = load i32, i32* @ecx, align 8
  %v1_271be = add i32 %v0_271be, -1587157947
  %v2_271be = inttoptr i32 %v1_271be to i8*
  %v3_271be = load i8, i8* %v2_271be, align 1
  %v5_271be = trunc i32 %v0_271be to i8
  %v6_271be = or i8 %v3_271be, %v5_271be
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_271be, i8* %v2_271be, align 1
  %v0_271c4 = load i32, i32* @eax, align 8
  %v1_271c4 = trunc i32 %v0_271c4 to i8
  %v2_271c4 = load i1, i1* %cf.global-to-local, align 1
  %v3_271c4 = zext i1 %v2_271c4 to i8
  %v4_271c4 = add i8 %v3_271c4, %v1_271c4
  %v19_271c4 = icmp ule i8 %v4_271c4, %v1_271c4
  %v21_271c4 = icmp eq i1 %v2_271c4, %v19_271c4
  store i1 %v21_271c4, i1* %cf.global-to-local, align 1
  %v22_271c4 = zext i8 %v4_271c4 to i32
  %v24_271c4 = and i32 %v0_271c4, -256
  %v25_271c4 = or i32 %v22_271c4, %v24_271c4
  store i32 %v25_271c4, i32* %eax.global-to-local, align 8
  %v1_271c6 = inttoptr i32 %v25_271c4 to i8*
  %v2_271c6 = load i8, i8* %v1_271c6, align 1
  %v5_271c6 = add i8 %v2_271c6, %v4_271c4
  store i8 %v5_271c6, i8* %v1_271c6, align 1
  %v0_271c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_271c8 = load i32, i32* @ebp, align 4
  %v2_271c8 = add i32 %v1_271c8, -12
  %v3_271c8 = inttoptr i32 %v2_271c8 to i32*
  store i32 %v0_271c8, i32* %v3_271c8, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_271cd = load i32, i32* @ebp, align 4
  %v1_271cd = add i32 %v0_271cd, -28
  %v2_271cd = inttoptr i32 %v1_271cd to i32*
  %v3_271cd = load i32, i32* %v2_271cd, align 4
  store i32 %v3_271cd, i32* @eax, align 8
  %v1_271d0 = add i32 %v0_271cd, -12
  %v2_271d0 = inttoptr i32 %v1_271d0 to i32*
  %v3_271d0 = load i32, i32* %v2_271d0, align 4
  %v1_271d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_271d3 = icmp eq i32 %v1_271d3, %v3_271d0
  br i1 %v3_271d3, label %bb, label %dec_label_pc_271dc

bb:                                               ; preds = %dec_label_pc_271be
  %v1_271da = call i32 @function_271e1()
  store i32 %v1_271da, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_271dc

dec_label_pc_271dc:                               ; preds = %bb, %dec_label_pc_271be
  %v2_271da = phi i32 [ %v1_271da, %bb ], [ %v3_271cd, %dec_label_pc_271be ]
  ret i32 %v2_271da

; uselistorder directives
  uselistorder i8 %v4_271c4, { 0, 2, 1 }
  uselistorder i8 %v1_271c4, { 1, 0 }
}

define i32 @function_271e1() local_unnamed_addr {
dec_label_pc_271e1:
  %v0_271e2 = load i32, i32* @eax, align 8
  ret i32 %v0_271e2
}

define i32 @_ZN6CBlock11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_271e4:
  ret i32 %arg2
}

define i32 @function_271fa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_271fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_271fa = load i32, i32* @eax, align 8
  %v1_271fa = load i32, i32* @ebp, align 4
  %v2_271fa = add i32 %v1_271fa, -36
  %v3_271fa = inttoptr i32 %v2_271fa to i32*
  store i32 %v0_271fa, i32* %v3_271fa, align 4
  %v0_271fd = load i32, i32* @ebp, align 4
  %v1_271fd = add i32 %v0_271fd, 20
  %v2_271fd = inttoptr i32 %v1_271fd to i32*
  %v3_271fd = load i32, i32* %v2_271fd, align 4
  store i32 %v3_271fd, i32* %eax.global-to-local, align 8
  %v2_27200 = add i32 %v0_271fd, -40
  %v3_27200 = inttoptr i32 %v2_27200 to i32*
  store i32 %v3_271fd, i32* %v3_27200, align 4
  %v0_27203 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27209 = load i32, i32* @ebp, align 4
  %v2_27209 = add i32 %v1_27209, -12
  %v3_27209 = inttoptr i32 %v2_27209 to i32*
  store i32 %v0_27203, i32* %v3_27209, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2720e = load i32, i32* @ebp, align 4
  %v1_2720e = add i32 %v0_2720e, -15
  %v2_2720e = inttoptr i32 %v1_2720e to i8*
  store i8 0, i8* %v2_2720e, align 1
  %v0_27212 = load i32, i32* @ebp, align 4
  %v1_27212 = add i32 %v0_27212, -14
  %v2_27212 = inttoptr i32 %v1_27212 to i8*
  store i8 0, i8* %v2_27212, align 1
  %v0_27216 = load i32, i32* @ebp, align 4
  %v1_27216 = add i32 %v0_27216, -13
  %v2_27216 = inttoptr i32 %v1_27216 to i8*
  store i8 1, i8* %v2_27216, align 1
  %v0_2721a = load i32, i32* @ebp, align 4
  %v1_2721a = add i32 %v0_2721a, -20
  %v2_2721a = inttoptr i32 %v1_2721a to i32*
  store i32 0, i32* %v2_2721a, align 4
  %v0_27221 = load i32, i32* @ebp, align 4
  %v1_27221 = add i32 %v0_27221, -28
  %v2_27221 = inttoptr i32 %v1_27221 to i32*
  %v3_27221 = load i32, i32* %v2_27221, align 4
  store i32 %v3_27221, i32* %eax.global-to-local, align 8
  %v0_27224 = load i32, i32* @edx, align 4
  %v1_27228 = add i32 %v0_27221, -40
  %v2_27228 = inttoptr i32 %v1_27228 to i32*
  %v3_27228 = load i32, i32* %v2_27228, align 4
  %v1_2722f = add i32 %v0_27221, -36
  %v2_2722f = inttoptr i32 %v1_2722f to i32*
  %v3_2722f = load i32, i32* %v2_2722f, align 4
  %v1_2723a = add i32 %v0_27221, -32
  %v2_2723a = inttoptr i32 %v1_2723a to i32*
  %v3_2723a = load i32, i32* %v2_2723a, align 4
  store i32 %v3_2723a, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_27224, 16777216
  %v5_27240 = sdiv i32 %sext, 16777216
  %v6_27240 = call i32 @unknown_53024(i32 %v3_2723a, i32 %v3_27221, i32 %v3_2722f, i32 %v3_27228, i32 %v5_27240)
  store i32 %v6_27240, i32* %eax.global-to-local, align 8
  %v0_27245 = load i32, i32* @ebp, align 4
  %v1_27245 = add i32 %v0_27245, -20
  %v2_27245 = inttoptr i32 %v1_27245 to i32*
  %v3_27245 = load i32, i32* %v2_27245, align 4
  %v5_27245 = add i32 %v3_27245, %v6_27240
  store i32 %v5_27245, i32* %v2_27245, align 4
  %v24_27245 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v24_27245

; uselistorder directives
  uselistorder i32 %v0_27221, { 0, 2, 1, 3 }
}

define i32 @function_2724a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2724a:
  %v0_2724e = load i32, i32* @ebx, align 4
  %v0_27252 = load i32, i32* @ebp, align 4
  %v1_27252 = add i32 %v0_27252, -40
  %v2_27252 = inttoptr i32 %v1_27252 to i32*
  %v3_27252 = load i32, i32* %v2_27252, align 4
  %v1_27259 = add i32 %v0_27252, -36
  %v2_27259 = inttoptr i32 %v1_27259 to i32*
  %v3_27259 = load i32, i32* %v2_27259, align 4
  %v0_27260 = load i32, i32* @edx, align 4
  %v1_27264 = add i32 %v0_27252, -32
  %v2_27264 = inttoptr i32 %v1_27264 to i32*
  %v3_27264 = load i32, i32* %v2_27264, align 4
  %sext = mul i32 %v0_2724e, 16777216
  %v5_2726a = sdiv i32 %sext, 16777216
  %v6_2726a = call i32 @unknown_5308c(i32 %v3_27264, i32 %v0_27260, i32 %v3_27259, i32 %v3_27252, i32 %v5_2726a)
  %v0_2726f = load i32, i32* @ebp, align 4
  %v1_2726f = add i32 %v0_2726f, -20
  %v2_2726f = inttoptr i32 %v1_2726f to i32*
  %v3_2726f = load i32, i32* %v2_2726f, align 4
  %v5_2726f = add i32 %v3_2726f, %v6_2726a
  store i32 %v5_2726f, i32* %v2_2726f, align 4
  %v0_27272 = load i32, i32* @ebp, align 4
  %v1_27272 = add i32 %v0_27272, -12
  %v2_27272 = inttoptr i32 %v1_27272 to i32*
  %v3_27272 = load i32, i32* %v2_27272, align 4
  %v1_27275 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27275 = xor i32 %v1_27275, %v3_27272
  %v3_27275 = icmp eq i32 %v2_27275, 0
  store i32 %v2_27275, i32* @eax, align 8
  br i1 %v3_27275, label %bb, label %dec_label_pc_2727e

bb:                                               ; preds = %dec_label_pc_2724a
  %v1_2727c = call i32 @function_27283()
  br label %dec_label_pc_2727e

dec_label_pc_2727e:                               ; preds = %bb, %dec_label_pc_2724a
  %v3_2727c = phi i32 [ %v1_2727c, %bb ], [ %v2_27275, %dec_label_pc_2724a ]
  ret i32 %v3_2727c
}

define i32 @function_27283() local_unnamed_addr {
dec_label_pc_27283:
  %v0_27288 = load i32, i32* @eax, align 8
  ret i32 %v0_27288
}

define i32 @_ZN9base_uintILj256EEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2728a:
  br label %dec_label_pc_272ae

dec_label_pc_272aa:                               ; preds = %dec_label_pc_272ae
  %v4_272aa = add nuw nsw i32 %storemerge, 1
  br label %dec_label_pc_272ae

dec_label_pc_272ae:                               ; preds = %dec_label_pc_272aa, %dec_label_pc_2728a
  %storemerge = phi i32 [ %v4_272aa, %dec_label_pc_272aa ], [ 0, %dec_label_pc_2728a ]
  %v2_272b4 = mul nuw nsw i32 %storemerge, 4
  %v3_272b4 = add i32 %v2_272b4, %arg1
  %v4_272b4 = inttoptr i32 %v3_272b4 to i32*
  %v5_272b4 = load i32, i32* %v4_272b4, align 4
  %v1_272b7 = add i32 %v5_272b4, 1
  store i32 %v1_272b7, i32* %v4_272b4, align 4
  %v1_272cc = icmp eq i32 %v1_272b7, 0
  %v1_272ce = icmp eq i1 %v1_272cc, false
  %v8_272d4 = icmp sgt i32 %storemerge, 6
  %or.cond = or i1 %v8_272d4, %v1_272ce
  br i1 %or.cond, label %dec_label_pc_272e6, label %dec_label_pc_272aa

dec_label_pc_272e6:                               ; preds = %dec_label_pc_272ae
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_272f5

bb:                                               ; preds = %dec_label_pc_272e6
  %v1_272f3 = call i32 @function_272fa()
  br label %dec_label_pc_272f5

dec_label_pc_272f5:                               ; preds = %bb, %dec_label_pc_272e6
  %v2_272f3 = phi i32 [ %v1_272f3, %bb ], [ %arg1, %dec_label_pc_272e6 ]
  ret i32 %v2_272f3

; uselistorder directives
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_272fa() local_unnamed_addr {
dec_label_pc_272fa:
  %v0_272fb = load i32, i32* @eax, align 8
  ret i32 %v0_272fb
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE3maxEv() local_unnamed_addr {
dec_label_pc_272fc:
  ret i32 31
}

define i32 @function_27316(i32 %arg1) local_unnamed_addr {
dec_label_pc_27316:
  %v0_27316 = load i32, i32* @edx, align 4
  %v1_27316 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27316 = icmp eq i32 %v1_27316, %v0_27316
  br i1 %v3_27316, label %bb, label %dec_label_pc_27316.dec_label_pc_2731e_crit_edge

dec_label_pc_27316.dec_label_pc_2731e_crit_edge:  ; preds = %dec_label_pc_27316
  %v2_2731c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2731e

bb:                                               ; preds = %dec_label_pc_27316
  %v1_2731c = call i32 @function_27323()
  br label %dec_label_pc_2731e

dec_label_pc_2731e:                               ; preds = %dec_label_pc_27316.dec_label_pc_2731e_crit_edge, %bb
  %v2_2731c = phi i32 [ %v2_2731c.pre, %dec_label_pc_27316.dec_label_pc_2731e_crit_edge ], [ %v1_2731c, %bb ]
  ret i32 %v2_2731c

; uselistorder directives
  uselistorder label %dec_label_pc_2731e, { 1, 0 }
}

define i32 @function_27323() local_unnamed_addr {
dec_label_pc_27323:
  %v0_27324 = load i32, i32* @eax, align 8
  ret i32 %v0_27324
}

define i32 @_ZN5boost9gregorian8bad_yearC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27326:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_27350 = call i32 @function_3ba00(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_3fb7c_type* @global_var_3fb7c.2865 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2736a

bb:                                               ; preds = %dec_label_pc_27326
  %v1_27368 = call i32 @function_2736f()
  br label %dec_label_pc_2736a

dec_label_pc_2736a:                               ; preds = %bb, %dec_label_pc_27326
  %v2_27368 = phi i32 [ %v1_27368, %bb ], [ 0, %dec_label_pc_27326 ]
  ret i32 %v2_27368

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_3fb7c_type* @global_var_3fb7c.2865 to i32), { 1, 0 }
}

define i32 @function_2736f() local_unnamed_addr {
dec_label_pc_2736f:
  %v0_27370 = load i32, i32* @eax, align 8
  ret i32 %v0_27370
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27372:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_27385 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2739d = call i32 @unknown_4e698(i32 %tmp102, i32 %arg2)
  %v1_273a5 = add i32 %arg2, 8
  %v1_273ab = add i32 %tmp102, 8
  store i32 %v1_273ab, i32* @eax, align 8
  %v2_273b5 = call i32 @function_38514(i32 %v1_273ab, i32 %v1_273a5)
  store i32 ptrtoint (%vtable_3f7bc_type* @global_var_3f7bc.2868 to i32), i32* %arg1, align 4
  %v2_273c6 = inttoptr i32 %v1_273ab to i32*
  store i32 ptrtoint (i32* @global_var_3f7d0.2869 to i32), i32* %v2_273c6, align 4
  ret i32 %v0_27385

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_273d6(i16 %arg1) local_unnamed_addr {
dec_label_pc_273d6:
  %v0_273d6 = load i32, i32* @esi, align 4
  %v1_273d6 = load i32, i32* @ebx, align 4
  %v3_273d6 = add i32 %v0_273d6, -21
  %v4_273d6 = add i32 %v3_273d6, %v1_273d6
  %v5_273d6 = inttoptr i32 %v4_273d6 to i8*
  %v6_273d6 = load i8, i8* %v5_273d6, align 1
  %v7_273d6 = load i32, i32* @edx, align 4
  %v8_273d6 = udiv i32 %v7_273d6, 256
  %v9_273d6 = trunc i32 %v8_273d6 to i8
  %v10_273d6 = add i8 %v9_273d6, %v6_273d6
  store i8 %v10_273d6, i8* %v5_273d6, align 1
  %v0_273db = load i32, i32* @eax, align 8
  %v0_273dd = load i32, i32* @ebp, align 4
  %v1_273dd = add i32 %v0_273dd, -28
  %v2_273dd = inttoptr i32 %v1_273dd to i32*
  %v3_273dd = load i32, i32* %v2_273dd, align 4
  %v1_273e3 = call i32 @unknown_47b54(i32 %v3_273dd)
  ret i32 %v0_273db
}

define i32 @function_273f6() local_unnamed_addr {
dec_label_pc_273f6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_273f6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_273f6 = add i32 %v0_273f6, 1566258372
  %v2_273f6 = inttoptr i32 %v1_273f6 to i32*
  %v3_273f6 = load i32, i32* %v2_273f6, align 4
  %v4_273f6 = add i32 %v3_273f6, 1
  store i32 %v4_273f6, i32* %v2_273f6, align 4
  %v0_273fc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_273fc
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_273fe:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp103, i32* %stack_var_-60, align 4
  %v2_27428 = call i32 @unknown_4e770(i32 %tmp103, i32 %arg2)
  %v1_27436 = add i32 %tmp103, 28
  store i32 %v1_27436, i32* %stack_var_-60, align 4
  store i32 ptrtoint (%vtable_3f75c_type* @global_var_3f75c.2870 to i32), i32* %arg1, align 4
  %v1_27451 = add i32 %tmp103, 8
  %v2_27451 = inttoptr i32 %v1_27451 to i32*
  store i32 ptrtoint (i32* @global_var_3f778.2871 to i32), i32* %v2_27451, align 4
  %v2_2745b = inttoptr i32 %v1_27436 to i32*
  store i32 ptrtoint (i32* @global_var_3f788.2872 to i32), i32* %v2_2745b, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2746e

bb:                                               ; preds = %dec_label_pc_273fe
  %v1_27430 = add i32 %arg2, 28
  %v1_2746c = load i32, i32* %stack_var_-60, align 4
  %v3_2746c = call i32 @function_27473(i32 %v1_2746c, i32 %v1_27430)
  br label %dec_label_pc_2746e

dec_label_pc_2746e:                               ; preds = %bb, %dec_label_pc_273fe
  %v4_2746c = phi i32 [ %v3_2746c, %bb ], [ 0, %dec_label_pc_273fe ]
  ret i32 %v4_2746c

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_27473(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27473:
  %v0_27474 = load i32, i32* @eax, align 8
  ret i32 %v0_27474
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian8bad_yearEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27475:
  ret i32 %arg1
}

define i32 @function_27496(i32 %arg1) local_unnamed_addr {
dec_label_pc_27496:
  %eax.global-to-local = alloca i32, align 4
  %v2_27496 = load i8, i8* bitcast (i32* @ecx to i8*), align 8
  %v3_27496 = load i32, i32* @eax, align 8
  %v4_27496 = trunc i32 %v3_27496 to i8
  %v5_27496 = add i8 %v4_27496, %v2_27496
  %v20_27496 = load i32, i32* @ecx, align 8
  %v21_27496 = inttoptr i32 %v20_27496 to i8*
  store i8 %v5_27496, i8* %v21_27496, align 1
  %v3_27498 = load i32, i32* @eax, align 8
  %v4_27498 = trunc i32 %v3_27498 to i8
  %v2_2749a = add i8 %v4_27498, 36
  %v16_2749a = zext i8 %v2_2749a to i32
  %v18_2749a = and i32 %v3_27498, -256
  %v19_2749a = or i32 %v16_2749a, %v18_2749a
  store i32 %v19_2749a, i32* %eax.global-to-local, align 8
  %v1_2749c = inttoptr i32 %v19_2749a to i8*
  %v2_2749c = load i8, i8* %v1_2749c, align 1
  %v5_2749c = and i8 %v2_2749c, %v2_2749a
  store i8 %v5_2749c, i8* %v1_2749c, align 1
  %v0_2749e = load i32, i32* %eax.global-to-local, align 8
  %v1_2749e = inttoptr i32 %v0_2749e to i8*
  %v2_2749e = load i8, i8* %v1_2749e, align 1
  %v4_2749e = trunc i32 %v0_2749e to i8
  %v5_2749e = add i8 %v2_2749e, %v4_2749e
  store i8 %v5_2749e, i8* %v1_2749e, align 1
  %v22_2749e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_2749e
}

define i32 @function_274a6() local_unnamed_addr {
dec_label_pc_274a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_274a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_274a6
}

define i32 @function_274c5() local_unnamed_addr {
dec_label_pc_274c5:
  %eax.global-to-local = alloca i32, align 4
  %v0_274c5 = load i32, i32* %eax.global-to-local, align 8
  %v11_274c5 = and i32 %v0_274c5, -24
  store i32 %v11_274c5, i32* %eax.global-to-local, align 8
  ret i32 %v11_274c5

; uselistorder directives
  uselistorder i32 %v11_274c5, { 1, 0 }
}

define i32 @function_274cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_274cc:
  %v0_274cd = load i32, i32* @eax, align 8
  %v2_274cd = add i32 %v0_274cd, 141
  %v16_274cd = urem i32 %v2_274cd, 256
  %v18_274cd = and i32 %v0_274cd, -256
  %v19_274cd = or i32 %v16_274cd, %v18_274cd
  %v0_274cf = load i32, i32* @ebp, align 4
  %v1_274cf = add i32 %v0_274cf, 1
  store i32 %v1_274cf, i32* @ebp, align 4
  ret i32 %v19_274cd

; uselistorder directives
  uselistorder i32 %v0_274cd, { 1, 0 }
}

define i32 @function_274f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_274f2:
  %v0_274f4 = load i32, i32* @ebp, align 4
  %v1_274f4 = add i32 %v0_274f4, -40
  %v1_274fa = call i32 @unknown_533d7(i32 %v1_274f4)
  store i32 %v1_274fa, i32* @eax, align 8
  %v0_274ff = call i32 @function_27503()
  ret i32 %v0_274ff
}

define i32 @function_27501() local_unnamed_addr {
dec_label_pc_27501:
  %eax.global-to-local = alloca i32, align 4
  %v0_27501 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27501
}

define i32 @function_27503() local_unnamed_addr {
dec_label_pc_27503:
  %v3_27503 = load i32, i32* @eax, align 8
  ret i32 %v3_27503
}

define i32 @function_27514(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27514:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE3maxEv() local_unnamed_addr {
dec_label_pc_27515:
  %v0_2751b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_2710.2874 to i32), i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_27537

bb:                                               ; preds = %dec_label_pc_27515
  %v2_27535 = call i32 @function_2753c(i32 %v0_2751b)
  br label %dec_label_pc_27537

dec_label_pc_27537:                               ; preds = %bb, %dec_label_pc_27515
  %v3_27535 = phi i32 [ %v2_27535, %bb ], [ ptrtoint (i32* @global_var_2710.2874 to i32), %dec_label_pc_27515 ]
  ret i32 %v3_27535
}

define i32 @function_2753c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2753c:
  %v0_2753d = load i32, i32* @eax, align 8
  ret i32 %v0_2753d
}

define i32 @_ZN5boost9gregorian9bad_monthC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2753e:
  %v0_27550 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_27550
}

define i32 @function_27556(i32 %arg1) local_unnamed_addr {
dec_label_pc_27556:
  %v0_27556 = load i32, i32* @eax, align 8
  %v1_27556 = load i32, i32* @ebp, align 4
  %v2_27556 = add i32 %v1_27556, -12
  %v3_27556 = inttoptr i32 %v2_27556 to i32*
  store i32 %v0_27556, i32* %v3_27556, align 4
  %v0_2755b = load i32, i32* @ebp, align 4
  %v1_2755b = add i32 %v0_2755b, -32
  %v2_2755b = inttoptr i32 %v1_2755b to i32*
  %v3_2755b = load i32, i32* %v2_2755b, align 4
  %v1_2755e = add i32 %v0_2755b, -28
  %v2_2755e = inttoptr i32 %v1_2755e to i32*
  %v3_2755e = load i32, i32* %v2_2755e, align 4
  %v2_27568 = call i32 @function_3bc18(i32 %v3_2755e, i32 %v3_2755b)
  %v0_2756d = load i32, i32* @ebp, align 4
  %v1_2756d = add i32 %v0_2756d, -28
  %v2_2756d = inttoptr i32 %v1_2756d to i32*
  %v3_2756d = load i32, i32* %v2_2756d, align 4
  %v1_27570 = inttoptr i32 %v3_2756d to i32*
  store i32 ptrtoint (%vtable_3fb64_type* @global_var_3fb64.2809 to i32), i32* %v1_27570, align 4
  %v0_27576 = load i32, i32* @ebp, align 4
  %v1_27576 = add i32 %v0_27576, -12
  %v2_27576 = inttoptr i32 %v1_27576 to i32*
  %v3_27576 = load i32, i32* %v2_27576, align 4
  %v1_27579 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27579 = xor i32 %v1_27579, %v3_27576
  %v3_27579 = icmp eq i32 %v2_27579, 0
  store i32 %v2_27579, i32* @eax, align 8
  br i1 %v3_27579, label %bb, label %dec_label_pc_27582

bb:                                               ; preds = %dec_label_pc_27556
  %v1_27580 = call i32 @function_27587()
  br label %dec_label_pc_27582

dec_label_pc_27582:                               ; preds = %bb, %dec_label_pc_27556
  %v2_27580 = phi i32 [ %v1_27580, %bb ], [ %v2_27579, %dec_label_pc_27556 ]
  ret i32 %v2_27580

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_3fb64_type* @global_var_3fb64.2809 to i32), { 2, 1, 0 }
}

define i32 @function_27587() local_unnamed_addr {
dec_label_pc_27587:
  %v0_27588 = load i32, i32* @eax, align 8
  ret i32 %v0_27588
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2758a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_275b5 = call i32 @unknown_4eac8(i32 %tmp102, i32 %arg2)
  %v1_275bd = add i32 %arg2, 8
  %v1_275c3 = add i32 %tmp102, 8
  store i32 %v1_275c3, i32* @eax, align 8
  %v2_275cd = call i32 @function_3872c(i32 %v1_275c3, i32 %v1_275bd)
  store i32 ptrtoint (%vtable_3f71c_type* @global_var_3f71c.2875 to i32), i32* %arg1, align 4
  %v2_275de = inttoptr i32 %v1_275c3 to i32*
  store i32 ptrtoint (i32* @global_var_3f730.2876 to i32), i32* %v2_275de, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_275f1

bb:                                               ; preds = %dec_label_pc_2758a
  %v1_275ef = call i32 @function_2760f()
  store i32 %v1_275ef, i32* @eax, align 8
  br label %dec_label_pc_275f1

dec_label_pc_275f1:                               ; preds = %bb, %dec_label_pc_2758a
  %v0_275f1 = call i32 @function_2760a()
  ret i32 %v0_275f1

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_275f4() local_unnamed_addr {
dec_label_pc_275f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_275f4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_275f4
}

define i32 @function_2760a() local_unnamed_addr {
dec_label_pc_2760a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2760f() local_unnamed_addr {
dec_label_pc_2760f:
  %v0_27614 = load i32, i32* @eax, align 8
  ret i32 %v0_27614
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEC1ERKS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27616:
  ret i32 %arg1
}

define i32 @function_27624(i32 %arg1) local_unnamed_addr {
dec_label_pc_27624:
  %v0_27626 = load i32, i32* @ebp, align 4
  %v1_27626 = add i32 %v0_27626, 1
  store i32 %v1_27626, i32* @ebp, align 4
  %v0_27629 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2762e = add i32 %v0_27626, -11
  %v3_2762e = inttoptr i32 %v2_2762e to i32*
  store i32 %v0_27629, i32* %v3_2762e, align 4
  %v0_27633 = load i32, i32* @ebp, align 4
  %v1_27633 = add i32 %v0_27633, -32
  %v2_27633 = inttoptr i32 %v1_27633 to i32*
  %v3_27633 = load i32, i32* %v2_27633, align 4
  %v1_27636 = add i32 %v0_27633, -28
  %v2_27636 = inttoptr i32 %v1_27636 to i32*
  %v3_27636 = load i32, i32* %v2_27636, align 4
  %v2_27640 = call i32 @unknown_4eba0(i32 %v3_27636, i32 %v3_27633)
  %v0_27645 = load i32, i32* @ebp, align 4
  %v1_27645 = add i32 %v0_27645, -32
  %v2_27645 = inttoptr i32 %v1_27645 to i32*
  %v3_27645 = load i32, i32* %v2_27645, align 4
  %v1_27648 = add i32 %v3_27645, 28
  %v1_2764b = add i32 %v0_27645, -28
  %v2_2764b = inttoptr i32 %v1_2764b to i32*
  %v3_2764b = load i32, i32* %v2_2764b, align 4
  %v1_2764e = add i32 %v3_2764b, 28
  store i32 %v1_2764e, i32* @eax, align 8
  %v2_27658 = call i32 @function_3b74a(i32 %v1_2764e, i32 %v1_27648)
  %v0_2765d = load i32, i32* @ebp, align 4
  %v1_2765d = add i32 %v0_2765d, -28
  %v2_2765d = inttoptr i32 %v1_2765d to i32*
  %v3_2765d = load i32, i32* %v2_2765d, align 4
  %v1_27660 = inttoptr i32 %v3_2765d to i32*
  store i32 ptrtoint (%vtable_3f6bc_type* @global_var_3f6bc.2877 to i32), i32* %v1_27660, align 4
  %v0_27666 = load i32, i32* @ebp, align 4
  %v1_27666 = add i32 %v0_27666, -28
  %v2_27666 = inttoptr i32 %v1_27666 to i32*
  %v3_27666 = load i32, i32* %v2_27666, align 4
  %v1_27669 = add i32 %v3_27666, 8
  %v2_27669 = inttoptr i32 %v1_27669 to i32*
  store i32 ptrtoint (i32* @global_var_3f6d8.2878 to i32), i32* %v2_27669, align 4
  %v0_27670 = load i32, i32* @ebp, align 4
  %v1_27670 = add i32 %v0_27670, -28
  %v2_27670 = inttoptr i32 %v1_27670 to i32*
  %v3_27670 = load i32, i32* %v2_27670, align 4
  %v1_27673 = add i32 %v3_27670, 28
  %v2_27673 = inttoptr i32 %v1_27673 to i32*
  store i32 ptrtoint (i32* @global_var_3f6e8.2879 to i32), i32* %v2_27673, align 4
  %v0_2767a = load i32, i32* @ebp, align 4
  %v1_2767a = add i32 %v0_2767a, -12
  %v2_2767a = inttoptr i32 %v1_2767a to i32*
  %v3_2767a = load i32, i32* %v2_2767a, align 4
  %v1_2767d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2767d = xor i32 %v1_2767d, %v3_2767a
  %v3_2767d = icmp eq i32 %v2_2767d, 0
  store i32 %v2_2767d, i32* @eax, align 8
  br i1 %v3_2767d, label %bb, label %dec_label_pc_27686

bb:                                               ; preds = %dec_label_pc_27624
  %v1_27684 = call i32 @function_2768b()
  br label %dec_label_pc_27686

dec_label_pc_27686:                               ; preds = %bb, %dec_label_pc_27624
  %v3_27684 = phi i32 [ %v1_27684, %bb ], [ %v2_2767d, %dec_label_pc_27624 ]
  ret i32 %v3_27684
}

define i32 @function_2768b() local_unnamed_addr {
dec_label_pc_2768b:
  %v0_2768c = load i32, i32* @eax, align 8
  ret i32 %v0_2768c
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian9bad_monthEEEvRKT_() local_unnamed_addr {
dec_label_pc_2768d:
  %eax.global-to-local = alloca i32, align 4
  %v5_2768d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2768d
}

define i32 @function_276be() local_unnamed_addr {
dec_label_pc_276be:
  %eax.global-to-local = alloca i32, align 4
  %v0_276be = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_276be
}

define i32 @function_276f2() local_unnamed_addr {
dec_label_pc_276f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_276f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_276f2
}

define i32 @function_27709() local_unnamed_addr {
dec_label_pc_27709:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27709 = load i32, i32* %ecx.global-to-local, align 8
  %v1_27709 = add i32 %v0_27709, -666530362
  %v2_27709 = inttoptr i32 %v1_27709 to i32*
  %v3_27709 = load i32, i32* %v2_27709, align 4
  %v4_27709 = add i32 %v3_27709, -1
  store i32 %v4_27709, i32* %v2_27709, align 4
  %v0_2770f = load i32, i32* %eax.global-to-local, align 8
  %v1_27712 = call i32 @unknown_53819(i32 %v0_2770f)
  store i32 %v1_27712, i32* @eax, align 8
  %v0_27717 = call i32 @function_2771b()
  store i32 %v0_27717, i32* %eax.global-to-local, align 8
  ret i32 %v0_27717
}

define i32 @function_27719() local_unnamed_addr {
dec_label_pc_27719:
  %eax.global-to-local = alloca i32, align 4
  %v0_27719 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27719
}

define i32 @function_2771b() local_unnamed_addr {
dec_label_pc_2771b:
  %v3_2771b = load i32, i32* @eax, align 8
  ret i32 %v3_2771b
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE3maxEv() local_unnamed_addr {
dec_label_pc_2772d:
  %v0_27733 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 12, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2774f

bb:                                               ; preds = %dec_label_pc_2772d
  %v2_2774d = call i32 @function_27754(i32 %v0_27733)
  br label %dec_label_pc_2774f

dec_label_pc_2774f:                               ; preds = %bb, %dec_label_pc_2772d
  %v3_2774d = phi i32 [ %v2_2774d, %bb ], [ 12, %dec_label_pc_2772d ]
  ret i32 %v3_2774d
}

define i32 @function_27754(i32 %arg1) local_unnamed_addr {
dec_label_pc_27754:
  %v0_27755 = load i32, i32* @eax, align 8
  ret i32 %v0_27755
}

define i32 @_ZNK5boost9date_time4dateINS_9gregorian4dateENS2_18gregorian_calendarENS2_13date_durationEE9day_countEv() local_unnamed_addr {
dec_label_pc_27756:
  %eax.global-to-local = alloca i32, align 4
  %v17_27759 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_27759
}

define i32 @function_2775e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2775e:
  %v0_2775e = load i32, i32* @ecx, align 8
  %v1_2775e = add i32 %v0_2775e, 1166795845
  %v2_2775e = inttoptr i32 %v1_2775e to i8*
  %v3_2775e = load i8, i8* %v2_2775e, align 1
  %v5_2775e = trunc i32 %v0_2775e to i8
  %v6_2775e = or i8 %v3_2775e, %v5_2775e
  store i8 %v6_2775e, i8* %v2_2775e, align 1
  %v0_27766 = load i32, i32* @ebp, align 4
  %v1_27766 = add i32 %v0_27766, 1
  store i32 %v1_27766, i32* @ebp, align 4
  %v0_27767 = load i32, i32* @ecx, align 8
  %v1_27767 = add i32 %v0_27767, -1
  store i32 %v1_27767, i32* @ecx, align 8
  %v0_27769 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2776e = add i32 %v0_27766, -11
  %v3_2776e = inttoptr i32 %v2_2776e to i32*
  store i32 %v0_27769, i32* %v3_2776e, align 4
  %v0_27773 = load i32, i32* @ebp, align 4
  %v1_27773 = add i32 %v0_27773, -32
  %v2_27773 = inttoptr i32 %v1_27773 to i32*
  %v3_27773 = load i32, i32* %v2_27773, align 4
  %v1_27776 = inttoptr i32 %v3_27773 to i32*
  %v2_27776 = load i32, i32* %v1_27776, align 4
  %v1_2777c = add i32 %v0_27773, -28
  %v2_2777c = inttoptr i32 %v1_2777c to i32*
  %v3_2777c = load i32, i32* %v2_2777c, align 4
  %v2_27782 = call i32 @unknown_4176e(i32 %v3_2777c, i32 %v2_27776)
  %v0_27787 = load i32, i32* @ebp, align 4
  %v1_27787 = add i32 %v0_27787, -28
  %v2_27787 = inttoptr i32 %v1_27787 to i32*
  %v3_27787 = load i32, i32* %v2_27787, align 4
  store i32 %v3_27787, i32* @eax, align 8
  %v1_2778a = add i32 %v0_27787, -12
  %v2_2778a = inttoptr i32 %v1_2778a to i32*
  %v3_2778a = load i32, i32* %v2_2778a, align 4
  %v1_2778d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2778d = icmp eq i32 %v1_2778d, %v3_2778a
  br i1 %v3_2778d, label %bb, label %dec_label_pc_27796

bb:                                               ; preds = %dec_label_pc_2775e
  %v1_27794 = call i32 @function_2779b()
  br label %dec_label_pc_27796

dec_label_pc_27796:                               ; preds = %bb, %dec_label_pc_2775e
  %v3_27794 = phi i32 [ %v1_27794, %bb ], [ %v3_27787, %dec_label_pc_2775e ]
  ret i32 %v3_27794
}

define i32 @function_2779b() local_unnamed_addr {
dec_label_pc_2779b:
  %v4_2779b = load i32, i32* @eax, align 8
  ret i32 %v4_2779b
}

define i32 @function_2779c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2779c:
  %v0_2779c = load i32, i32* @eax, align 8
  ret i32 %v0_2779c
}

define i32 @_ZNK5boost9date_time11int_adapterIxEplIjEES2_RKNS1_IT_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_277a0:
  ret i32 %arg2
}

define i32 @function_277d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_277d4:
  %v0_277d4 = load i32, i32* @ebp, align 4
  %v1_277d4 = add i32 %v0_277d4, -36
  %v2_277d4 = inttoptr i32 %v1_277d4 to i32*
  %v3_277d4 = load i32, i32* %v2_277d4, align 4
  ret i32 %v3_277d4
}

define i32 @function_277d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_277d8:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_277da = call i32 @unknown_482e6()
  %v4_277df = trunc i32 %v0_277da to i8
  %v5_277df = icmp ne i8 %v4_277df, 0
  %v5_277ef = icmp eq i1 %v5_277df, false
  br i1 %v5_277ef, label %dec_label_pc_27928, label %dec_label_pc_277f7

dec_label_pc_277f7:                               ; preds = %dec_label_pc_277d8
  %v0_277f7 = load i32, i32* @ebp, align 4
  %v1_277f7 = add i32 %v0_277f7, -32
  %v2_277f7 = inttoptr i32 %v1_277f7 to i32*
  %v3_277f7 = load i32, i32* %v2_277f7, align 4
  %v1_277fd = call i32 @unknown_4f168(i32 %v3_277f7)
  %v4_27802 = trunc i32 %v1_277fd to i8
  %v5_27802 = icmp eq i8 %v4_27802, 0
  %v1_27804 = icmp eq i1 %v5_27802, false
  br i1 %v1_27804, label %dec_label_pc_27821, label %dec_label_pc_27806

dec_label_pc_27806:                               ; preds = %dec_label_pc_277f7
  %v0_27806 = load i32, i32* @ebp, align 4
  %v1_27806 = add i32 %v0_27806, -36
  %v2_27806 = inttoptr i32 %v1_27806 to i32*
  %v3_27806 = load i32, i32* %v2_27806, align 4
  %v1_2780c = call i32 @unknown_4833a(i32 %v3_27806)
  %v4_27811 = trunc i32 %v1_2780c to i8
  %v5_27811 = icmp ne i8 %v4_27811, 0
  %phitmp28 = icmp eq i1 %v5_27811, false
  br label %dec_label_pc_27821

dec_label_pc_27821:                               ; preds = %dec_label_pc_27806, %dec_label_pc_277f7
  %storemerge14 = phi i1 [ false, %dec_label_pc_277f7 ], [ %phitmp28, %dec_label_pc_27806 ]
  %v0_27838 = load i32, i32* @ebp, align 4
  br i1 %storemerge14, label %dec_label_pc_27838, label %dec_label_pc_27825

dec_label_pc_27825:                               ; preds = %dec_label_pc_27821
  %v1_27825 = add i32 %v0_27838, -28
  %v2_27825 = inttoptr i32 %v1_27825 to i32*
  %v3_27825 = load i32, i32* %v2_27825, align 4
  %v1_2782b = call i32 @unknown_484ec(i32 %v3_27825)
  br label %dec_label_pc_27957

dec_label_pc_27838:                               ; preds = %dec_label_pc_27821
  %v1_27838 = add i32 %v0_27838, -32
  %v2_27838 = inttoptr i32 %v1_27838 to i32*
  %v3_27838 = load i32, i32* %v2_27838, align 4
  %v1_2783b = add i32 %v3_27838, 4
  %v2_2783b = inttoptr i32 %v1_2783b to i32*
  %v3_2783b = load i32, i32* %v2_2783b, align 4
  store i32 %v3_2783b, i32* %edx.global-to-local, align 4
  %v1_2783e = inttoptr i32 %v3_27838 to i32*
  %v2_2783e = load i32, i32* %v1_2783e, align 4
  %v2_27847 = call i32 @unknown_488f6(i32 %v2_2783e, i32 %v3_2783b)
  %v4_2784c = trunc i32 %v2_27847 to i8
  %v5_2784c = icmp eq i8 %v4_2784c, 0
  br i1 %v5_2784c, label %dec_label_pc_27867, label %dec_label_pc_27850

dec_label_pc_27850:                               ; preds = %dec_label_pc_27838
  %v0_27850 = load i32, i32* @ebp, align 4
  %v1_27850 = add i32 %v0_27850, -36
  %v2_27850 = inttoptr i32 %v1_27850 to i32*
  %v3_27850 = load i32, i32* %v2_27850, align 4
  %v1_27856 = call i32 @unknown_412fa(i32 %v3_27850)
  %v1_2785e = call i32 @unknown_4838b(i32 %v1_27856)
  %v4_27863 = trunc i32 %v1_2785e to i8
  %v5_27863 = icmp eq i8 %v4_27863, 0
  %v1_27865 = icmp eq i1 %v5_27863, false
  br i1 %v1_27865, label %dec_label_pc_278a2, label %dec_label_pc_27867

dec_label_pc_27867:                               ; preds = %dec_label_pc_27850, %dec_label_pc_27838
  %v0_27867 = load i32, i32* @ebp, align 4
  %v1_27867 = add i32 %v0_27867, -32
  %v2_27867 = inttoptr i32 %v1_27867 to i32*
  %v3_27867 = load i32, i32* %v2_27867, align 4
  %v1_2786a = add i32 %v3_27867, 4
  %v2_2786a = inttoptr i32 %v1_2786a to i32*
  %v3_2786a = load i32, i32* %v2_2786a, align 4
  store i32 %v3_2786a, i32* %edx.global-to-local, align 4
  %v1_2786d = inttoptr i32 %v3_27867 to i32*
  %v2_2786d = load i32, i32* %v1_2786d, align 4
  %v2_27876 = call i32 @unknown_4f1d3(i32 %v2_2786d, i32 %v3_2786a)
  %v4_2787b = trunc i32 %v2_27876 to i8
  %v5_2787b = icmp eq i8 %v4_2787b, 0
  br i1 %v5_2787b, label %dec_label_pc_2789d, label %dec_label_pc_2787f

dec_label_pc_2787f:                               ; preds = %dec_label_pc_27867
  %v0_2787f = load i32, i32* @ebp, align 4
  %v1_2787f = add i32 %v0_2787f, -36
  %v2_2787f = inttoptr i32 %v1_2787f to i32*
  %v3_2787f = load i32, i32* %v2_2787f, align 4
  %v1_27885 = call i32 @unknown_412fa(i32 %v3_2787f)
  %v1_2788d = call i32 @unknown_483d4(i32 %v1_27885)
  %v4_27892 = trunc i32 %v1_2788d to i8
  %v5_27892 = icmp eq i8 %v4_27892, 0
  br i1 %v5_27892, label %dec_label_pc_2789d, label %dec_label_pc_278a2

dec_label_pc_2789d:                               ; preds = %dec_label_pc_2787f, %dec_label_pc_27867
  br label %dec_label_pc_278a2

dec_label_pc_278a2:                               ; preds = %dec_label_pc_27850, %dec_label_pc_2787f, %dec_label_pc_2789d
  %storemerge = phi i1 [ true, %dec_label_pc_2789d ], [ false, %dec_label_pc_2787f ], [ false, %dec_label_pc_27850 ]
  %v0_278b9 = load i32, i32* @ebp, align 4
  br i1 %storemerge, label %dec_label_pc_278b9, label %dec_label_pc_278a6

dec_label_pc_278a6:                               ; preds = %dec_label_pc_278a2
  %v1_278a6 = add i32 %v0_278b9, -28
  %v2_278a6 = inttoptr i32 %v1_278a6 to i32*
  %v3_278a6 = load i32, i32* %v2_278a6, align 4
  %v1_278ac = call i32 @unknown_484ec(i32 %v3_278a6)
  br label %dec_label_pc_27957

dec_label_pc_278b9:                               ; preds = %dec_label_pc_278a2
  %v1_278b9 = add i32 %v0_278b9, -32
  %v2_278b9 = inttoptr i32 %v1_278b9 to i32*
  %v3_278b9 = load i32, i32* %v2_278b9, align 4
  %v1_278bf = call i32 @unknown_4f236(i32 %v3_278b9)
  %v4_278c4 = trunc i32 %v1_278bf to i8
  %v5_278c4 = icmp eq i8 %v4_278c4, 0
  %v0_278da = load i32, i32* @ebp, align 4
  br i1 %v5_278c4, label %dec_label_pc_278da, label %dec_label_pc_278c8

dec_label_pc_278c8:                               ; preds = %dec_label_pc_278b9
  %v1_278c8 = add i32 %v0_278da, -28
  %v2_278c8 = inttoptr i32 %v1_278c8 to i32*
  %v3_278c8 = load i32, i32* %v2_278c8, align 4
  store i32 %v3_278c8, i32* %ecx.global-to-local, align 8
  %v1_278cb = add i32 %v0_278da, -32
  %v2_278cb = inttoptr i32 %v1_278cb to i32*
  %v3_278cb = load i32, i32* %v2_278cb, align 4
  %v1_278ce = add i32 %v3_278cb, 4
  %v2_278ce = inttoptr i32 %v1_278ce to i32*
  %v3_278ce = load i32, i32* %v2_278ce, align 4
  store i32 %v3_278ce, i32* %edx.global-to-local, align 4
  %v1_278d1 = inttoptr i32 %v3_278cb to i32*
  %v2_278d1 = load i32, i32* %v1_278d1, align 4
  %v2_278d3 = inttoptr i32 %v3_278c8 to i32*
  store i32 %v2_278d1, i32* %v2_278d3, align 4
  %v0_278d5 = load i32, i32* %edx.global-to-local, align 4
  %v1_278d5 = load i32, i32* %ecx.global-to-local, align 8
  %v2_278d5 = add i32 %v1_278d5, 4
  %v3_278d5 = inttoptr i32 %v2_278d5 to i32*
  store i32 %v0_278d5, i32* %v3_278d5, align 4
  br label %dec_label_pc_27957

dec_label_pc_278da:                               ; preds = %dec_label_pc_278b9
  %v1_278da = add i32 %v0_278da, -36
  %v2_278da = inttoptr i32 %v1_278da to i32*
  %v3_278da = load i32, i32* %v2_278da, align 4
  %v1_278e0 = call i32 @unknown_412fa(i32 %v3_278da)
  %v1_278e8 = call i32 @unknown_483d4(i32 %v1_278e0)
  %v4_278ed = trunc i32 %v1_278e8 to i8
  %v5_278ed = icmp eq i8 %v4_278ed, 0
  %v0_27901 = load i32, i32* @ebp, align 4
  br i1 %v5_278ed, label %dec_label_pc_27901, label %dec_label_pc_278f1

dec_label_pc_278f1:                               ; preds = %dec_label_pc_278da
  %v1_278f1 = add i32 %v0_27901, -28
  %v2_278f1 = inttoptr i32 %v1_278f1 to i32*
  %v3_278f1 = load i32, i32* %v2_278f1, align 4
  %v1_278f7 = call i32 @unknown_48580(i32 %v3_278f1)
  br label %dec_label_pc_27957

dec_label_pc_27901:                               ; preds = %dec_label_pc_278da
  %v1_27901 = add i32 %v0_27901, -36
  %v2_27901 = inttoptr i32 %v1_27901 to i32*
  %v3_27901 = load i32, i32* %v2_27901, align 4
  %v1_27907 = call i32 @unknown_412fa(i32 %v3_27901)
  %v1_2790f = call i32 @unknown_4838b(i32 %v1_27907)
  %v4_27914 = trunc i32 %v1_2790f to i8
  %v5_27914 = icmp eq i8 %v4_27914, 0
  br i1 %v5_27914, label %dec_label_pc_27928, label %dec_label_pc_27918

dec_label_pc_27918:                               ; preds = %dec_label_pc_27901
  %v0_27918 = load i32, i32* @ebp, align 4
  %v1_27918 = add i32 %v0_27918, -28
  %v2_27918 = inttoptr i32 %v1_27918 to i32*
  %v3_27918 = load i32, i32* %v2_27918, align 4
  %v1_2791e = call i32 @unknown_48539(i32 %v3_27918)
  br label %dec_label_pc_27957

dec_label_pc_27928:                               ; preds = %dec_label_pc_27901, %dec_label_pc_277d8
  %v0_27928 = load i32, i32* @ebp, align 4
  %v1_27928 = add i32 %v0_27928, -32
  %v2_27928 = inttoptr i32 %v1_27928 to i32*
  %v3_27928 = load i32, i32* %v2_27928, align 4
  %v1_2792b = inttoptr i32 %v3_27928 to i32*
  %v2_2792b = load i32, i32* %v1_2792b, align 4
  store i32 %v2_2792b, i32* @ebx, align 4
  %v1_2792d = add i32 %v3_27928, 4
  %v2_2792d = inttoptr i32 %v1_2792d to i32*
  %v3_2792d = load i32, i32* %v2_2792d, align 4
  store i32 %v3_2792d, i32* %esi.global-to-local, align 4
  %v1_27930 = add i32 %v0_27928, -36
  %v2_27930 = inttoptr i32 %v1_27930 to i32*
  %v3_27930 = load i32, i32* %v2_27930, align 4
  %v1_27936 = call i32 @unknown_412fa(i32 %v3_27930)
  %v1_27940 = load i32, i32* @ebx, align 4
  %v2_27940 = add i32 %v1_27940, %v1_27936
  %v7_27940 = icmp ult i32 %v2_27940, %v1_27936
  %v1_27942 = load i32, i32* %esi.global-to-local, align 4
  %v3_27942 = zext i1 %v7_27940 to i32
  %v5_27942 = add i32 %v3_27942, %v1_27942
  store i32 %v5_27942, i32* %edx.global-to-local, align 4
  %v0_2794c = load i32, i32* @ebp, align 4
  %v1_2794c = add i32 %v0_2794c, -28
  %v2_2794c = inttoptr i32 %v1_2794c to i32*
  %v3_2794c = load i32, i32* %v2_2794c, align 4
  %v3_27952 = call i32 @unknown_4199e(i32 %v3_2794c, i32 %v2_27940, i32 %v5_27942)
  br label %dec_label_pc_27957

dec_label_pc_27957:                               ; preds = %dec_label_pc_27928, %dec_label_pc_27918, %dec_label_pc_278f1, %dec_label_pc_278c8, %dec_label_pc_278a6, %dec_label_pc_27825
  %v0_27957 = load i32, i32* @ebp, align 4
  %v1_27957 = add i32 %v0_27957, -28
  %v2_27957 = inttoptr i32 %v1_27957 to i32*
  %v3_27957 = load i32, i32* %v2_27957, align 4
  store i32 %v3_27957, i32* @eax, align 8
  %v1_2795a = add i32 %v0_27957, -12
  %v2_2795a = inttoptr i32 %v1_2795a to i32*
  %v3_2795a = load i32, i32* %v2_2795a, align 4
  store i32 %v3_2795a, i32* %edx.global-to-local, align 4
  %v1_2795d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2795d = xor i32 %v1_2795d, %v3_2795a
  %v3_2795d = icmp eq i32 %v2_2795d, 0
  store i32 %v2_2795d, i32* %edx.global-to-local, align 4
  br i1 %v3_2795d, label %bb, label %dec_label_pc_27966

bb:                                               ; preds = %dec_label_pc_27957
  %v1_27964 = call i32 @function_2796b()
  br label %dec_label_pc_27966

dec_label_pc_27966:                               ; preds = %bb, %dec_label_pc_27957
  %v2_27964 = phi i32 [ %v1_27964, %bb ], [ %v3_27957, %dec_label_pc_27957 ]
  ret i32 %v2_27964

; uselistorder directives
  uselistorder i32 %v1_27936, { 1, 0 }
  uselistorder i32 %v0_27901, { 1, 0 }
  uselistorder i32 %v0_278da, { 2, 1, 0 }
  uselistorder i32 %v0_278b9, { 1, 0 }
  uselistorder i32 %v0_27838, { 1, 0 }
  uselistorder i32 (i32)* @unknown_483d4, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4838b, { 1, 0 }
  uselistorder i32 (i32)* @unknown_412fa, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_484ec, { 1, 0 }
  uselistorder label %dec_label_pc_278a2, { 2, 1, 0 }
}

define i32 @function_2796b() local_unnamed_addr {
dec_label_pc_2796b:
  %v0_2796b = load i32, i32* @ebp, align 4
  %v1_2796b = add i32 %v0_2796b, -8
  %v1_2796e = inttoptr i32 %v1_2796b to i32*
  %v2_2796e = load i32, i32* %v1_2796e, align 4
  store i32 %v2_2796e, i32* @ebx, align 4
  %v1_27970 = inttoptr i32 %v0_2796b to i32*
  %v2_27970 = load i32, i32* %v1_27970, align 4
  store i32 %v2_27970, i32* @ebp, align 4
  %v0_27971 = load i32, i32* @eax, align 8
  ret i32 %v0_27971
}

define i32 @_ZNK5boost9date_time11int_adapterIxE10is_specialEv() local_unnamed_addr {
dec_label_pc_27974:
  %eax.global-to-local = alloca i32, align 4
  %v17_27977 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_27977
}

define i32 @function_2797a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2797a:
  %v0_2797a = load i32, i32* @ebp, align 4
  %v1_2797a = add i32 %v0_2797a, 8
  %v2_2797a = inttoptr i32 %v1_2797a to i32*
  %v3_2797a = load i32, i32* %v2_2797a, align 4
  %v2_2797d = add i32 %v0_2797a, -28
  %v3_2797d = inttoptr i32 %v2_2797d to i32*
  store i32 %v3_2797a, i32* %v3_2797d, align 4
  %v0_27980 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27986 = load i32, i32* @ebp, align 4
  %v2_27986 = add i32 %v1_27986, -12
  %v3_27986 = inttoptr i32 %v2_27986 to i32*
  store i32 %v0_27980, i32* %v3_27986, align 4
  %v0_2798b = load i32, i32* @ebp, align 4
  %v1_2798b = add i32 %v0_2798b, -28
  %v2_2798b = inttoptr i32 %v1_2798b to i32*
  %v3_2798b = load i32, i32* %v2_2798b, align 4
  %v1_27991 = call i32 @unknown_4f40a(i32 %v3_2798b)
  %v4_27996 = trunc i32 %v1_27991 to i8
  %v5_27996 = icmp eq i8 %v4_27996, 0
  %v1_27998 = icmp eq i1 %v5_27996, false
  br i1 %v1_27998, label %dec_label_pc_279b5, label %dec_label_pc_2799a

dec_label_pc_2799a:                               ; preds = %dec_label_pc_2797a
  %v0_2799a = load i32, i32* @ebp, align 4
  %v1_2799a = add i32 %v0_2799a, -28
  %v2_2799a = inttoptr i32 %v1_2799a to i32*
  %v3_2799a = load i32, i32* %v2_2799a, align 4
  %v1_279a0 = call i32 @unknown_4f33c(i32 %v3_2799a)
  %v4_279a5 = trunc i32 %v1_279a0 to i8
  %v5_279a5 = icmp ne i8 %v4_279a5, 0
  %. = zext i1 %v5_279a5 to i32
  br label %dec_label_pc_279b5

dec_label_pc_279b5:                               ; preds = %dec_label_pc_2799a, %dec_label_pc_2797a
  %storemerge = phi i32 [ 1, %dec_label_pc_2797a ], [ %., %dec_label_pc_2799a ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_279b5 = load i32, i32* @ebp, align 4
  %v1_279b5 = add i32 %v0_279b5, -12
  %v2_279b5 = inttoptr i32 %v1_279b5 to i32*
  %v3_279b5 = load i32, i32* %v2_279b5, align 4
  %v1_279b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_279b8 = icmp eq i32 %v1_279b8, %v3_279b5
  br i1 %v3_279b8, label %bb, label %dec_label_pc_279c1

bb:                                               ; preds = %dec_label_pc_279b5
  %v1_279bf = call i32 @function_279c6()
  br label %dec_label_pc_279c1

dec_label_pc_279c1:                               ; preds = %bb, %dec_label_pc_279b5
  %v2_279bf = phi i32 [ %v1_279bf, %bb ], [ %storemerge, %dec_label_pc_279b5 ]
  ret i32 %v2_279bf
}

define i32 @function_279c6() local_unnamed_addr {
dec_label_pc_279c6:
  %v0_279c7 = load i32, i32* @eax, align 8
  ret i32 %v0_279c7
}

define i32 @_ZNK5boost9date_time11int_adapterIxE6is_nanEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_279c8:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_279e4 = load i32, i32* %arg1, align 4
  %v1_279e6 = add i32 %tmp103, 4
  %v2_279e6 = inttoptr i32 %v1_279e6 to i32*
  %v3_279e6 = load i32, i32* %v2_279e6, align 4
  %v2_279e9 = ptrtoint i32* %stack_var_-24 to i32
  %v1_279ef = call i32 @unknown_48714(i32 %v2_279e9)
  %v2_27a04 = xor i32 %v2_279e4, %v2_279e9
  %v1_27a0b = load i32, i32* %edx.global-to-local, align 4
  %v2_27a0b = xor i32 %v1_27a0b, %v3_279e6
  %v5_27a13 = or i32 %v2_27a0b, %v2_27a04
  ret i32 %v5_27a13
}

define i32 @function_27a16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a16:
  %v0_27a16 = load i32, i32* @eax, align 8
  %v1_27a16 = icmp eq i32 %v0_27a16, 0
  %v1_27a18 = zext i1 %v1_27a16 to i32
  %v3_27a18 = and i32 %v0_27a16, -256
  %v4_27a18 = or i32 %v1_27a18, %v3_27a18
  store i32 %v4_27a18, i32* @eax, align 8
  %v0_27a1b = load i32, i32* @ebp, align 4
  %v1_27a1b = add i32 %v0_27a1b, -12
  %v2_27a1b = inttoptr i32 %v1_27a1b to i32*
  %v3_27a1b = load i32, i32* %v2_27a1b, align 4
  %v1_27a1e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27a1e = icmp eq i32 %v1_27a1e, %v3_27a1b
  br i1 %v3_27a1e, label %bb, label %dec_label_pc_27a27

bb:                                               ; preds = %dec_label_pc_27a16
  %v1_27a25 = call i32 @function_27a2c()
  br label %dec_label_pc_27a27

dec_label_pc_27a27:                               ; preds = %bb, %dec_label_pc_27a16
  %v2_27a25 = phi i32 [ %v1_27a25, %bb ], [ %v4_27a18, %dec_label_pc_27a16 ]
  ret i32 %v2_27a25
}

define i32 @function_27a2c() local_unnamed_addr {
dec_label_pc_27a2c:
  %v0_27a32 = load i32, i32* @eax, align 8
  ret i32 %v0_27a32
}

define i32 @_ZN5boost9date_time11int_adapterIxE10is_neg_infEx(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a33:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_27a52 = ptrtoint i32* %stack_var_-24 to i32
  %v1_27a58 = call i32 @unknown_487cc(i32 %v2_27a52)
  store i32 %v2_27a52, i32* @eax, align 8
  %v1_27a66 = call i32 @function_3bd45(i32 %v2_27a52)
  %v5_27a6d = xor i32 %v1_27a66, %arg1
  %v0_27a70 = load i32, i32* %edx.global-to-local, align 4
  %v5_27a72 = xor i32 %v0_27a70, %arg2
  %v2_27a77 = or i32 %v5_27a72, %v5_27a6d
  %v3_27a77 = icmp eq i32 %v2_27a77, 0
  %v1_27a7b = zext i1 %v3_27a77 to i32
  %v3_27a7b = and i32 %v2_27a77, -256
  %v4_27a7b = or i32 %v1_27a7b, %v3_27a7b
  store i32 %v4_27a7b, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_27a8a

bb:                                               ; preds = %dec_label_pc_27a33
  %v1_27a88 = call i32 @function_27a8f()
  br label %dec_label_pc_27a8a

dec_label_pc_27a8a:                               ; preds = %bb, %dec_label_pc_27a33
  %v2_27a88 = phi i32 [ %v1_27a88, %bb ], [ %v4_27a7b, %dec_label_pc_27a33 ]
  ret i32 %v2_27a88
}

define i32 @function_27a8f() local_unnamed_addr {
dec_label_pc_27a8f:
  %v0_27a95 = load i32, i32* @eax, align 8
  ret i32 %v0_27a95
}

define i32 @_ZNK5boost9date_time11int_adapterIxE11is_infinityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_27a96:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v2_27ab2 = load i32, i32* %arg1, align 4
  store i32 %v2_27ab2, i32* %ebx.global-to-local, align 4
  %v1_27ab4 = add i32 %tmp106, 4
  %v2_27ab4 = inttoptr i32 %v1_27ab4 to i32*
  %v3_27ab4 = load i32, i32* %v2_27ab4, align 4
  %v2_27ab7 = ptrtoint i32* %stack_var_-24 to i32
  %v1_27abd = call i32 @unknown_4882f(i32 %v2_27ab7)
  %v1_27acb = call i32 @function_3bda8(i32 %v2_27ab7)
  %v1_27ad2 = load i32, i32* %edx.global-to-local, align 4
  %v2_27ad2 = xor i32 %v1_27ad2, %v3_27ab4
  %v1_27ad4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_27ad4 = xor i32 %v1_27ad4, %v1_27acb
  %v2_27ad6 = or i32 %v2_27ad4, %v2_27ad2
  %v3_27ad6 = icmp eq i32 %v2_27ad6, 0
  br i1 %v3_27ad6, label %dec_label_pc_27b15, label %dec_label_pc_27adc

dec_label_pc_27adc:                               ; preds = %dec_label_pc_27a96
  %v2_27adf = load i32, i32* %arg1, align 4
  store i32 %v2_27adf, i32* %ebx.global-to-local, align 4
  %v3_27ae1 = load i32, i32* %v2_27ab4, align 4
  %v2_27ae4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_27aea = call i32 @unknown_48876(i32 %v2_27ae4)
  %v1_27af8 = call i32 @function_3bda8(i32 %v2_27ae4)
  %v1_27aff = load i32, i32* %edx.global-to-local, align 4
  %v2_27aff = xor i32 %v1_27aff, %v3_27ae1
  %v1_27b01 = load i32, i32* %ebx.global-to-local, align 4
  %v2_27b01 = xor i32 %v1_27b01, %v1_27af8
  %v2_27b03 = or i32 %v2_27b01, %v2_27aff
  %v3_27b03 = icmp eq i32 %v2_27b03, 0
  %. = zext i1 %v3_27b03 to i32
  br label %dec_label_pc_27b15

dec_label_pc_27b15:                               ; preds = %dec_label_pc_27adc, %dec_label_pc_27a96
  %storemerge = phi i32 [ 1, %dec_label_pc_27a96 ], [ %., %dec_label_pc_27adc ]
  store i32 %storemerge, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_27b21

bb:                                               ; preds = %dec_label_pc_27b15
  %v1_27b1f = call i32 @function_27b26()
  br label %dec_label_pc_27b21

dec_label_pc_27b21:                               ; preds = %bb, %dec_label_pc_27b15
  %v2_27b1f = phi i32 [ %v1_27b1f, %bb ], [ %storemerge, %dec_label_pc_27b15 ]
  ret i32 %v2_27b1f

; uselistorder directives
  uselistorder i32 (i32)* @function_3bda8, { 1, 0 }
}

define i32 @function_27b26() local_unnamed_addr {
dec_label_pc_27b26:
  %v0_27b2c = load i32, i32* @eax, align 8
  ret i32 %v0_27b2c
}

define i32 @_ZN5boost9date_time11int_adapterIxE15is_not_a_numberEx(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27b2d:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_27b4c = ptrtoint i32* %stack_var_-24 to i32
  %v1_27b52 = call i32 @unknown_48879(i32 %v2_27b4c)
  %v5_27b67 = xor i32 %v2_27b4c, %arg1
  %v0_27b6a = load i32, i32* %edx.global-to-local, align 4
  %v5_27b6c = xor i32 %v0_27b6a, %arg2
  %v2_27b71 = or i32 %v5_27b6c, %v5_27b67
  %v3_27b71 = icmp eq i32 %v2_27b71, 0
  %v1_27b75 = zext i1 %v3_27b71 to i32
  %v3_27b75 = and i32 %v2_27b71, -256
  %v4_27b75 = or i32 %v1_27b75, %v3_27b75
  store i32 %v4_27b75, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_27b84

bb:                                               ; preds = %dec_label_pc_27b2d
  %v2_27b82 = call i32 @function_27b89(i32 %v2_27b4c)
  br label %dec_label_pc_27b84

dec_label_pc_27b84:                               ; preds = %bb, %dec_label_pc_27b2d
  %v3_27b82 = phi i32 [ %v2_27b82, %bb ], [ %v4_27b75, %dec_label_pc_27b2d ]
  ret i32 %v3_27b82

; uselistorder directives
  uselistorder i32 %v2_27b4c, { 1, 0, 2 }
}

define i32 @function_27b89(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b89:
  %v0_27b8f = load i32, i32* @eax, align 8
  ret i32 %v0_27b8f
}

define i32 @_ZN5boost9date_time22time_resolution_traitsINS0_37time_resolution_traits_adapted64_implELNS0_16time_resolutionsE5ELx1000000ELt6EiE10is_adaptedEv() local_unnamed_addr {
dec_label_pc_27b90:
  %eax.global-to-local = alloca i32, align 4
  %v17_27b93 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_27b93
}

define i32 @function_27b96(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b96:
  %v0_27b96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27b9c = load i32, i32* @ebp, align 4
  %v2_27b9c = add i32 %v1_27b9c, -12
  %v3_27b9c = inttoptr i32 %v2_27b9c to i32*
  store i32 %v0_27b96, i32* %v3_27b9c, align 4
  store i32 0, i32* @eax, align 8
  %v0_27ba1 = call i32 @function_38224()
  store i32 %v0_27ba1, i32* @eax, align 8
  %v0_27ba6 = load i32, i32* @ebp, align 4
  %v1_27ba6 = add i32 %v0_27ba6, -12
  %v2_27ba6 = inttoptr i32 %v1_27ba6 to i32*
  %v3_27ba6 = load i32, i32* %v2_27ba6, align 4
  %v1_27ba9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27ba9 = icmp eq i32 %v1_27ba9, %v3_27ba6
  br i1 %v3_27ba9, label %bb, label %dec_label_pc_27bb2

bb:                                               ; preds = %dec_label_pc_27b96
  %v1_27bb0 = call i32 @function_27bb7()
  br label %dec_label_pc_27bb2

dec_label_pc_27bb2:                               ; preds = %bb, %dec_label_pc_27b96
  %v2_27bb0 = phi i32 [ %v1_27bb0, %bb ], [ %v0_27ba1, %dec_label_pc_27b96 ]
  ret i32 %v2_27bb0
}

define i32 @function_27bb7() local_unnamed_addr {
dec_label_pc_27bb7:
  %v0_27bb8 = load i32, i32* @eax, align 8
  ret i32 %v0_27bb8
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27bba:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_27bdd = trunc i32 %tmp102 to i16
  %v2_27bdd = call i32 @function_37d82(i16 %v1_27bdd)
  store i32 ptrtoint (%vtable_3f7e4_type* @global_var_3f7e4.2880 to i32), i32* %arg1, align 4
  %v2_27bf1 = add i32 %tmp102, 12
  %v3_27bf1 = inttoptr i32 %v2_27bf1 to i32*
  store i32 %arg2, i32* %v3_27bf1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_27c00

bb:                                               ; preds = %dec_label_pc_27bba
  %v1_27bfe = call i32 @function_27c05()
  br label %dec_label_pc_27c00

dec_label_pc_27c00:                               ; preds = %bb, %dec_label_pc_27bba
  %v2_27bfe = phi i32 [ %v1_27bfe, %bb ], [ 0, %dec_label_pc_27bba ]
  ret i32 %v2_27bfe

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_27c05() local_unnamed_addr {
dec_label_pc_27c05:
  %v0_27c06 = load i32, i32* @eax, align 8
  ret i32 %v0_27c06
}

define i32 @_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_27c07:
  %v10_27c1e = icmp eq i32* %arg1, null
  br i1 %v10_27c1e, label %dec_label_pc_27c36, label %dec_label_pc_27c24

dec_label_pc_27c24:                               ; preds = %dec_label_pc_27c07
  br label %dec_label_pc_27c36

dec_label_pc_27c36:                               ; preds = %dec_label_pc_27c24, %dec_label_pc_27c07
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_27c42

bb:                                               ; preds = %dec_label_pc_27c36
  %v1_27c40 = call i32 @function_27c47()
  br label %dec_label_pc_27c42

dec_label_pc_27c42:                               ; preds = %bb, %dec_label_pc_27c36
  %v2_27c40 = phi i32 [ %v1_27c40, %bb ], [ 0, %dec_label_pc_27c36 ]
  ret i32 %v2_27c40
}

define i32 @function_27c47() local_unnamed_addr {
dec_label_pc_27c47:
  %v0_27c48 = load i32, i32* @eax, align 8
  ret i32 %v0_27c48
}

define i32 @_ZN25zero_after_free_allocatorIcEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27c4a:
  ret i32 %arg1
}

define i32 @function_27c89() local_unnamed_addr {
dec_label_pc_27c89:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27c89 = load i32, i32* %ecx.global-to-local, align 8
  %v1_27c89 = add i32 %v0_27c89, -1
  store i32 %v1_27c89, i32* %ecx.global-to-local, align 8
  %v0_27c8b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27c8b
}

define i32 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27c8c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_27caa = ptrtoint i32* %stack_var_-37 to i32
  %v2_27cad = ptrtoint i32* %stack_var_-32 to i32
  %v2_27cb7 = call i32 @unknown_53ff0(i32 %v2_27caa, i32 %v2_27cad)
  %v3_27cbf = load i32, i32* %stack_var_-32, align 4
  %v0_27cc2 = load i32, i32* %ebx.global-to-local, align 4
  %v3_27cd0 = call i32 @unknown_54025(i32 %v3_27cbf, i32 %arg2, i32 %v0_27cc2)
  store i32 %v3_27cd0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_27ce1

bb:                                               ; preds = %dec_label_pc_27c8c
  %v1_27cdf = call i32 @function_27ce6()
  br label %dec_label_pc_27ce1

dec_label_pc_27ce1:                               ; preds = %bb, %dec_label_pc_27c8c
  %v2_27cdf = phi i32 [ %v1_27cdf, %bb ], [ %v3_27cd0, %dec_label_pc_27c8c ]
  ret i32 %v2_27cdf
}

declare i32 @__stack_chk_fail.812(i32) local_unnamed_addr

define i32 @function_27ce6() local_unnamed_addr {
dec_label_pc_27ce6:
  %v0_27cea = load i32, i32* @eax, align 8
  ret i32 %v0_27cea
}

define i32 @_ZSt22__uninitialized_copy_aIPKcPc25zero_after_free_allocatorIcEET0_T_S6_S5_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27ceb:
  ret i32 %arg1
}

define i32 @function_27d4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d4a:
  %zf.global-to-local = alloca i1, align 1
  %v0_27d4a = load i32, i32* @ecx, align 8
  %v2_27d4a = icmp eq i32 %v0_27d4a, 1
  %v3_27d4a = load i1, i1* @zf, align 1
  %v4_27d4a = or i1 %v2_27d4a, %v3_27d4a
  %v0_27d4c = load i32, i32* @eax, align 8
  br i1 %v4_27d4a, label %dec_label_pc_27d4c, label %dec_label_pc_27d5b

dec_label_pc_27d4c:                               ; preds = %dec_label_pc_27d4a
  %v1_27d4c = load i32, i32* @ebp, align 4
  ret i32 %v1_27d4c

dec_label_pc_27d5b:                               ; preds = %dec_label_pc_27d4a
  %v1_27d5b = trunc i32 %v0_27d4c to i8
  %v2_27d5b = load i1, i1* @cf, align 1
  %v3_27d5b = zext i1 %v2_27d5b to i8
  %v4_27d5b = add i8 %v3_27d5b, %v1_27d5b
  %v13_27d5b = icmp eq i8 %v4_27d5b, 0
  store i1 %v13_27d5b, i1* %zf.global-to-local, align 1
  %v22_27d5b = zext i8 %v4_27d5b to i32
  %v24_27d5b = and i32 %v0_27d4c, -256
  %v25_27d5b = or i32 %v22_27d5b, %v24_27d5b
  store i32 %v25_27d5b, i32* @eax, align 8
  %v1_27d5d = inttoptr i32 %v25_27d5b to i8*
  %v2_27d5d = load i8, i8* %v1_27d5d, align 1
  %v5_27d5d = add i8 %v2_27d5d, %v4_27d5b
  %v15_27d5d = icmp eq i8 %v5_27d5d, 0
  store i1 %v15_27d5d, i1* %zf.global-to-local, align 1
  store i8 %v5_27d5d, i8* %v1_27d5d, align 1
  %v0_27d5f = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_27d5f, label %bb, label %dec_label_pc_27d5b.dec_label_pc_27d61_crit_edge

dec_label_pc_27d5b.dec_label_pc_27d61_crit_edge:  ; preds = %dec_label_pc_27d5b
  %v2_27d5f.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27d61

bb:                                               ; preds = %dec_label_pc_27d5b
  %v1_27d5f = call i32 @function_27d66()
  br label %dec_label_pc_27d61

dec_label_pc_27d61:                               ; preds = %dec_label_pc_27d5b.dec_label_pc_27d61_crit_edge, %bb
  %v2_27d5f = phi i32 [ %v2_27d5f.pre, %dec_label_pc_27d5b.dec_label_pc_27d61_crit_edge ], [ %v1_27d5f, %bb ]
  ret i32 %v2_27d5f

; uselistorder directives
  uselistorder label %dec_label_pc_27d61, { 1, 0 }
}

define i32 @function_27d66() local_unnamed_addr {
dec_label_pc_27d66:
  %v0_27d67 = load i32, i32* @eax, align 8
  ret i32 %v0_27d67
}

define i32 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27d68:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_27d86 = ptrtoint i32* %stack_var_-37 to i32
  %v2_27d89 = ptrtoint i32* %stack_var_-32 to i32
  %v2_27d93 = call i32 @unknown_54144(i32 %v2_27d86, i32 %v2_27d89)
  %v3_27d9b = load i32, i32* %stack_var_-32, align 4
  %v0_27d9e = load i32, i32* %ebx.global-to-local, align 4
  %v3_27dac = call i32 @unknown_54179(i32 %v3_27d9b, i32 %arg2, i32 %v0_27d9e)
  store i32 %v3_27dac, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_27dbd

bb:                                               ; preds = %dec_label_pc_27d68
  %v1_27dbb = call i32 @function_27dc2()
  br label %dec_label_pc_27dbd

dec_label_pc_27dbd:                               ; preds = %bb, %dec_label_pc_27d68
  %v2_27dbb = phi i32 [ %v1_27dbb, %bb ], [ %v3_27dac, %dec_label_pc_27d68 ]
  ret i32 %v2_27dbb
}

define i32 @function_27dc2() local_unnamed_addr {
dec_label_pc_27dc2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27dc3() local_unnamed_addr {
dec_label_pc_27dc3:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_27dc5 = inttoptr i32 %tmp1 to i32*
  %v2_27dc5 = load i32, i32* %v1_27dc5, align 4
  store i32 %v2_27dc5, i32* @ebp, align 4
  %v0_27dc6 = load i32, i32* @eax, align 8
  ret i32 %v0_27dc6
}

define i32 @_ZN9__gnu_cxx13new_allocatorIcE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27dc8:
  %v1_27df1 = call i32 @unknown_49812(i32 %arg1)
  %v10_27df6 = icmp ult i32 %v1_27df1, %arg2
  %v1_27df9 = zext i1 %v10_27df6 to i32
  %v3_27df9 = and i32 %v1_27df1, -256
  %v4_27df9 = or i32 %v1_27df9, %v3_27df9
  %v5_27dfc = icmp eq i1 %v10_27df6, false
  br i1 %v5_27dfc, label %bb, label %dec_label_pc_27e00

bb:                                               ; preds = %dec_label_pc_27dc8
  %v1_27dfe = call i32 @function_27e05()
  br label %dec_label_pc_27e00

dec_label_pc_27e00:                               ; preds = %bb, %dec_label_pc_27dc8
  %v2_27dfe = phi i32 [ %v1_27dfe, %bb ], [ %v4_27df9, %dec_label_pc_27dc8 ]
  ret i32 %v2_27dfe

; uselistorder directives
  uselistorder i1 %v10_27df6, { 1, 0 }
}

define i32 @function_27e05() local_unnamed_addr {
dec_label_pc_27e05:
  %v0_27e05 = load i32, i32* @ebp, align 4
  %v1_27e05 = add i32 %v0_27e05, -32
  %v2_27e05 = inttoptr i32 %v1_27e05 to i32*
  %v3_27e05 = load i32, i32* %v2_27e05, align 4
  ret i32 %v3_27e05
}

define i32 @function_27e20() local_unnamed_addr {
dec_label_pc_27e20:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27e20 = load i32, i32* %ecx.global-to-local, align 8
  %v1_27e20 = add i32 %v0_27e20, -1
  store i32 %v1_27e20, i32* %ecx.global-to-local, align 8
  %v0_27e22 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27e22
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPcS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27e23:
  ret i32 %arg2
}

define i32 @function_27e36(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27e36:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_27e36 = load i32, i32* @ecx, align 8
  %v1_27e36 = add i32 %v0_27e36, -1
  store i32 %v1_27e36, i32* %ecx.global-to-local, align 8
  %v2_27e36 = icmp eq i32 %v1_27e36, 0
  %v3_27e36 = load i1, i1* @zf, align 1
  %v4_27e36 = or i1 %v2_27e36, %v3_27e36
  br i1 %v4_27e36, label %dec_label_pc_27e38, label %bb

bb:                                               ; preds = %dec_label_pc_27e36
  %v6_27e36 = call i32 @function_27dc3()
  store i32 %v6_27e36, i32* @eax, align 8
  %v0_27e39.pre = load i32, i32* %ecx.global-to-local, align 8
  br label %dec_label_pc_27e38

dec_label_pc_27e38:                               ; preds = %dec_label_pc_27e36, %bb
  %v30_27e39 = phi i32 [ %v1_27e36, %dec_label_pc_27e36 ], [ %v0_27e39.pre, %bb ]
  %v0_27e38 = load i32, i32* @ebp, align 4
  %v1_27e38 = add i32 %v0_27e38, 1
  store i32 %v1_27e38, i32* @ebp, align 4
  %v1_27e39 = add i32 %v30_27e39, -1587159995
  %v2_27e39 = inttoptr i32 %v1_27e39 to i8*
  %v3_27e39 = load i8, i8* %v2_27e39, align 1
  %v5_27e39 = trunc i32 %v30_27e39 to i8
  %v6_27e39 = load i1, i1* @cf, align 1
  %v7_27e39 = zext i1 %v6_27e39 to i8
  %v8_27e39 = add i8 %v3_27e39, %v5_27e39
  %v9_27e39 = add i8 %v7_27e39, %v8_27e39
  %v27_27e39 = icmp ule i8 %v9_27e39, %v3_27e39
  %v28_27e39 = icmp ult i8 %v8_27e39, %v3_27e39
  %v29_27e39 = select i1 %v6_27e39, i1 %v27_27e39, i1 %v28_27e39
  store i1 %v29_27e39, i1* %cf.global-to-local, align 1
  store i8 %v9_27e39, i8* %v2_27e39, align 1
  %v0_27e3f = load i32, i32* @eax, align 8
  %v1_27e3f = trunc i32 %v0_27e3f to i8
  %v2_27e3f = load i1, i1* %cf.global-to-local, align 1
  %v3_27e3f = zext i1 %v2_27e3f to i8
  %v4_27e3f = add i8 %v3_27e3f, %v1_27e3f
  %v19_27e3f = icmp ule i8 %v4_27e3f, %v1_27e3f
  %v21_27e3f = icmp eq i1 %v2_27e3f, %v19_27e3f
  store i1 %v21_27e3f, i1* %cf.global-to-local, align 1
  %v22_27e3f = zext i8 %v4_27e3f to i32
  %v24_27e3f = and i32 %v0_27e3f, -256
  %v25_27e3f = or i32 %v22_27e3f, %v24_27e3f
  store i32 %v25_27e3f, i32* %eax.global-to-local, align 8
  %v1_27e41 = inttoptr i32 %v25_27e3f to i8*
  %v2_27e41 = load i8, i8* %v1_27e41, align 1
  %v5_27e41 = add i8 %v2_27e41, %v4_27e3f
  store i8 %v5_27e41, i8* %v1_27e41, align 1
  %v0_27e43 = load i32, i32* %eax.global-to-local, align 8
  %v1_27e43 = load i32, i32* @ebp, align 4
  %v2_27e43 = add i32 %v1_27e43, -12
  %v3_27e43 = inttoptr i32 %v2_27e43 to i32*
  store i32 %v0_27e43, i32* %v3_27e43, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_27e48 = load i32, i32* @ebp, align 4
  %v1_27e48 = add i32 %v0_27e48, -36
  %v2_27e48 = inttoptr i32 %v1_27e48 to i32*
  %v3_27e48 = load i32, i32* %v2_27e48, align 4
  store i32 %v3_27e48, i32* %eax.global-to-local, align 8
  %v1_27e4e = call i32 @unknown_4fcfe(i32 %v3_27e48)
  store i32 %v1_27e4e, i32* %eax.global-to-local, align 8
  store i32 %v1_27e4e, i32* %esi.global-to-local, align 4
  %v0_27e55 = load i32, i32* @ebp, align 4
  %v1_27e55 = add i32 %v0_27e55, -32
  %v2_27e55 = inttoptr i32 %v1_27e55 to i32*
  %v3_27e55 = load i32, i32* %v2_27e55, align 4
  store i32 %v3_27e55, i32* %eax.global-to-local, align 8
  %v1_27e5b = call i32 @unknown_4fcfe(i32 %v3_27e55)
  store i32 %v1_27e5b, i32* %eax.global-to-local, align 8
  store i32 %v1_27e5b, i32* %ebx.global-to-local, align 4
  %v0_27e62 = load i32, i32* @ebp, align 4
  %v1_27e62 = add i32 %v0_27e62, -28
  %v2_27e62 = inttoptr i32 %v1_27e62 to i32*
  %v3_27e62 = load i32, i32* %v2_27e62, align 4
  store i32 %v3_27e62, i32* %eax.global-to-local, align 8
  %v1_27e68 = call i32 @unknown_4fcfe(i32 %v3_27e62)
  store i32 %v1_27e68, i32* %eax.global-to-local, align 8
  %v0_27e6d = load i32, i32* %esi.global-to-local, align 4
  %v0_27e71 = load i32, i32* %ebx.global-to-local, align 4
  %v3_27e78 = call i32 @unknown_542ac(i32 %v1_27e68, i32 %v0_27e71, i32 %v0_27e6d)
  store i32 %v3_27e78, i32* @eax, align 8
  %v0_27e7d = load i32, i32* @ebp, align 4
  %v1_27e7d = add i32 %v0_27e7d, -12
  %v2_27e7d = inttoptr i32 %v1_27e7d to i32*
  %v3_27e7d = load i32, i32* %v2_27e7d, align 4
  %v1_27e80 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_27e80 = icmp eq i32 %v1_27e80, %v3_27e7d
  br i1 %v3_27e80, label %bb7, label %dec_label_pc_27e89

bb7:                                              ; preds = %dec_label_pc_27e38
  %v1_27e87 = call i32 @function_27e8e()
  store i32 %v1_27e87, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_27e89

dec_label_pc_27e89:                               ; preds = %bb7, %dec_label_pc_27e38
  %v2_27e87 = phi i32 [ %v1_27e87, %bb7 ], [ %v3_27e78, %dec_label_pc_27e38 ]
  ret i32 %v2_27e87

; uselistorder directives
  uselistorder i8 %v4_27e3f, { 0, 2, 1 }
  uselistorder i8 %v1_27e3f, { 1, 0 }
  uselistorder i8 %v9_27e39, { 1, 0 }
  uselistorder i8 %v8_27e39, { 1, 0 }
  uselistorder i8 %v3_27e39, { 1, 2, 0 }
  uselistorder i32 %v30_27e39, { 1, 0 }
  uselistorder i32 %v1_27e36, { 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_4fcfe, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27e38, { 1, 0 }
}

define i32 @function_27e8e() local_unnamed_addr {
dec_label_pc_27e8e:
  %v0_27e94 = load i32, i32* @eax, align 8
  ret i32 %v0_27e94
}

define i32 @_ZSt3maxIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27e95:
  %v1_27eba = inttoptr i32 %arg2 to i32*
  %v2_27eba = load i32, i32* %v1_27eba, align 4
  ret i32 %v2_27eba
}

define i32 @function_27ec0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27ec0:
  %v0_27ec0 = load i32, i32* @ebp, align 4
  %v1_27ec0 = add i32 %v0_27ec0, -32
  %v2_27ec0 = inttoptr i32 %v1_27ec0 to i32*
  %v3_27ec0 = load i32, i32* %v2_27ec0, align 4
  store i32 %v3_27ec0, i32* @eax, align 8
  %v0_27ec3 = call i32 @function_27ec8()
  ret i32 %v0_27ec3
}

define i32 @function_27ec5() local_unnamed_addr {
dec_label_pc_27ec5:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_27ec8() local_unnamed_addr {
dec_label_pc_27ec8:
  %v0_27ec8 = load i32, i32* @ebp, align 4
  %v1_27ec8 = add i32 %v0_27ec8, -12
  %v2_27ec8 = inttoptr i32 %v1_27ec8 to i32*
  %v3_27ec8 = load i32, i32* %v2_27ec8, align 4
  %v1_27ecb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27ecb = icmp eq i32 %v1_27ecb, %v3_27ec8
  br i1 %v3_27ecb, label %bb, label %dec_label_pc_27ec8.dec_label_pc_27ed4_crit_edge

dec_label_pc_27ec8.dec_label_pc_27ed4_crit_edge:  ; preds = %dec_label_pc_27ec8
  %v2_27ed2.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27ed4

bb:                                               ; preds = %dec_label_pc_27ec8
  %v1_27ed2 = call i32 @function_27ed9()
  br label %dec_label_pc_27ed4

dec_label_pc_27ed4:                               ; preds = %dec_label_pc_27ec8.dec_label_pc_27ed4_crit_edge, %bb
  %v2_27ed2 = phi i32 [ %v2_27ed2.pre, %dec_label_pc_27ec8.dec_label_pc_27ed4_crit_edge ], [ %v1_27ed2, %bb ]
  ret i32 %v2_27ed2

; uselistorder directives
  uselistorder label %dec_label_pc_27ed4, { 1, 0 }
}

define i32 @function_27ed9() local_unnamed_addr {
dec_label_pc_27ed9:
  %v0_27eda = load i32, i32* @eax, align 8
  ret i32 %v0_27eda
}

define i32 @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27edb:
  %v1_27ef8 = call i32 @unknown_51a36(i32 %arg1)
  store i32 %v1_27ef8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_27f09

bb:                                               ; preds = %dec_label_pc_27edb
  %v1_27f07 = call i32 @function_27f0e()
  br label %dec_label_pc_27f09

dec_label_pc_27f09:                               ; preds = %bb, %dec_label_pc_27edb
  %v2_27f07 = phi i32 [ %v1_27f07, %bb ], [ %v1_27ef8, %dec_label_pc_27edb ]
  ret i32 %v2_27f07
}

define i32 @function_27f0e() local_unnamed_addr {
dec_label_pc_27f0e:
  %v0_27f0f = load i32, i32* @eax, align 8
  ret i32 %v0_27f0f
}

define i32 @_ZSt4copyIPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27f10:
  %v1_27f40 = call i32 @unknown_543ec(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_27f4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27f4c:
  %v0_27f4e = load i16, i16* @cs, align 2
  %v5_27f4e = sext i16 %v0_27f4e to i32
  %v6_27f4e = call i32 @unknown_890002c4(i32 %v5_27f4e)
  %v11_27f60 = and i32 %v6_27f4e, -248
  %v0_27f62 = load i32, i32* @edx, align 4
  %v2_27f69 = call i32 @unknown_54421(i32 %v11_27f60, i32 %v0_27f62)
  %v0_27f71 = load i32, i32* @ebp, align 4
  %v1_27f71 = add i32 %v0_27f71, -28
  %v2_27f71 = inttoptr i32 %v1_27f71 to i32*
  %v3_27f71 = load i32, i32* %v2_27f71, align 4
  store i32 %v3_27f71, i32* @eax, align 8
  %v1_27f74 = add i32 %v0_27f71, -12
  %v2_27f74 = inttoptr i32 %v1_27f74 to i32*
  %v3_27f74 = load i32, i32* %v2_27f74, align 4
  %v1_27f77 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27f77 = icmp eq i32 %v1_27f77, %v3_27f74
  br i1 %v3_27f77, label %bb, label %dec_label_pc_27f80

bb:                                               ; preds = %dec_label_pc_27f4c
  %v1_27f7e = call i32 @function_27f85()
  br label %dec_label_pc_27f80

dec_label_pc_27f80:                               ; preds = %bb, %dec_label_pc_27f4c
  %v2_27f7e = phi i32 [ %v1_27f7e, %bb ], [ %v3_27f71, %dec_label_pc_27f4c ]
  ret i32 %v2_27f7e
}

define i32 @function_27f85() local_unnamed_addr {
dec_label_pc_27f85:
  %v0_27f89 = load i32, i32* @eax, align 8
  ret i32 %v0_27f89
}

define i32 @_ZSt7advanceIPKcjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27f8c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %v2_27fb0 = ptrtoint i32* %stack_var_-37 to i32
  %v2_27fbd = call i32 @unknown_542f0(i32 %v2_27fb0, i32 %arg1)
  %v0_27fc5 = load i32, i32* %ebx.global-to-local, align 4
  %v3_27fd6 = call i32 @unknown_5452f(i32 %arg1, i32 %arg2, i32 %v0_27fc5)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_27fe7

bb:                                               ; preds = %dec_label_pc_27f8c
  %v1_27fe5 = call i32 @function_27fec()
  br label %dec_label_pc_27fe7

dec_label_pc_27fe7:                               ; preds = %bb, %dec_label_pc_27f8c
  %v2_27fe5 = phi i32 [ %v1_27fe5, %bb ], [ 0, %dec_label_pc_27f8c ]
  ret i32 %v2_27fe5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_27fec() local_unnamed_addr {
dec_label_pc_27fec:
  %v0_27ff0 = load i32, i32* @eax, align 8
  ret i32 %v0_27ff0
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27ff1:
  %v1_2800e = call i32 @unknown_545da(i32 %arg1)
  store i32 %v1_2800e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2801f

bb:                                               ; preds = %dec_label_pc_27ff1
  %v1_2801d = call i32 @function_28024()
  br label %dec_label_pc_2801f

dec_label_pc_2801f:                               ; preds = %bb, %dec_label_pc_27ff1
  %v2_2801d = phi i32 [ %v1_2801d, %bb ], [ %v1_2800e, %dec_label_pc_27ff1 ]
  ret i32 %v2_2801d
}

define i32 @function_28024() local_unnamed_addr {
dec_label_pc_28024:
  %v0_28025 = load i32, i32* @eax, align 8
  ret i32 %v0_28025
}

define i32 @_ZNSaIhEC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28026:
  %v2_28050 = call i32 @unknown_546b0(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28061

bb:                                               ; preds = %dec_label_pc_28026
  %v1_2805f = call i32 @function_28066()
  br label %dec_label_pc_28061

dec_label_pc_28061:                               ; preds = %bb, %dec_label_pc_28026
  %v2_2805f = phi i32 [ %v1_2805f, %bb ], [ 0, %dec_label_pc_28026 ]
  ret i32 %v2_2805f
}

define i32 @function_28066() local_unnamed_addr {
dec_label_pc_28066:
  %v0_28067 = load i32, i32* @eax, align 8
  ret i32 %v0_28067
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28068:
  %v1_28091 = call i32 @unknown_54722(i32 %arg1)
  %v10_28096 = icmp ult i32 %v1_28091, %arg2
  %v1_28099 = zext i1 %v10_28096 to i32
  %v3_28099 = and i32 %v1_28091, -256
  %v4_28099 = or i32 %v1_28099, %v3_28099
  %v5_2809c = icmp eq i1 %v10_28096, false
  br i1 %v5_2809c, label %bb, label %dec_label_pc_280a0

bb:                                               ; preds = %dec_label_pc_28068
  %v1_2809e = call i32 @function_280a5()
  br label %dec_label_pc_280a0

dec_label_pc_280a0:                               ; preds = %bb, %dec_label_pc_28068
  %v2_2809e = phi i32 [ %v1_2809e, %bb ], [ %v4_28099, %dec_label_pc_28068 ]
  ret i32 %v2_2809e

; uselistorder directives
  uselistorder i1 %v10_28096, { 1, 0 }
}

define i32 @function_280a5() local_unnamed_addr {
dec_label_pc_280a5:
  %v0_280a5 = load i32, i32* @ebp, align 4
  %v1_280a5 = add i32 %v0_280a5, -32
  %v2_280a5 = inttoptr i32 %v1_280a5 to i32*
  %v3_280a5 = load i32, i32* %v2_280a5, align 4
  ret i32 %v3_280a5
}

define i32 @function_280c0() local_unnamed_addr {
dec_label_pc_280c0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_280c0 = load i32, i32* %ecx.global-to-local, align 8
  %v1_280c0 = add i32 %v0_280c0, -1
  store i32 %v1_280c0, i32* %ecx.global-to-local, align 8
  %v0_280c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_280c2
}

define i32 @_ZSt20uninitialized_fill_nIPhjhEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_280c3:
  %v3_280fa = call i32 @unknown_547ac(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2810b

bb:                                               ; preds = %dec_label_pc_280c3
  %v1_28109 = call i32 @function_28110()
  br label %dec_label_pc_2810b

dec_label_pc_2810b:                               ; preds = %bb, %dec_label_pc_280c3
  %v2_28109 = phi i32 [ %v1_28109, %bb ], [ 0, %dec_label_pc_280c3 ]
  ret i32 %v2_28109
}

define i32 @function_28110() local_unnamed_addr {
dec_label_pc_28110:
  %v0_28111 = load i32, i32* @eax, align 8
  ret i32 %v0_28111
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28112:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2813b

bb:                                               ; preds = %dec_label_pc_28112
  %v3_28139 = call i32 @function_28140(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2813b

dec_label_pc_2813b:                               ; preds = %bb, %dec_label_pc_28112
  %v4_28139 = phi i32 [ %v3_28139, %bb ], [ 0, %dec_label_pc_28112 ]
  ret i32 %v4_28139
}

define i32 @function_28140(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28140:
  %v0_28141 = load i32, i32* @eax, align 8
  ret i32 %v0_28141
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28142:
  %v3_28179 = call i32 @unknown_506aa(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_28179, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2818a

bb:                                               ; preds = %dec_label_pc_28142
  %v1_28188 = call i32 @function_2818f()
  br label %dec_label_pc_2818a

dec_label_pc_2818a:                               ; preds = %bb, %dec_label_pc_28142
  %v2_28188 = phi i32 [ %v1_28188, %bb ], [ %v3_28179, %dec_label_pc_28142 ]
  ret i32 %v2_28188
}

define i32 @function_2818f() local_unnamed_addr {
dec_label_pc_2818f:
  %v0_28190 = load i32, i32* @eax, align 8
  ret i32 %v0_28190
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28191:
  %v1_281ae = call i32 @unknown_548c9(i32 %arg1)
  store i32 %v1_281ae, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_281bf

bb:                                               ; preds = %dec_label_pc_28191
  %v1_281bd = call i32 @function_281c4()
  br label %dec_label_pc_281bf

dec_label_pc_281bf:                               ; preds = %bb, %dec_label_pc_28191
  %v2_281bd = phi i32 [ %v1_281bd, %bb ], [ %v1_281ae, %dec_label_pc_28191 ]
  ret i32 %v2_281bd
}

define i32 @function_281c4() local_unnamed_addr {
dec_label_pc_281c4:
  %v0_281c5 = load i32, i32* @eax, align 8
  ret i32 %v0_281c5
}

define i32 @_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_281c6:
  %v3_28201 = call i32 @unknown_54935(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_28201, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28212

bb:                                               ; preds = %dec_label_pc_281c6
  %v1_28210 = call i32 @function_28217()
  br label %dec_label_pc_28212

dec_label_pc_28212:                               ; preds = %bb, %dec_label_pc_281c6
  %v2_28210 = phi i32 [ %v1_28210, %bb ], [ %v3_28201, %dec_label_pc_281c6 ]
  ret i32 %v2_28210
}

define i32 @function_28217() local_unnamed_addr {
dec_label_pc_28217:
  %v0_28218 = load i32, i32* @eax, align 8
  ret i32 %v0_28218
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb0EE7_S_baseES7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28219:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2824d

bb:                                               ; preds = %dec_label_pc_28219
  %v3_2824b = call i32 @function_28252(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2824d

dec_label_pc_2824d:                               ; preds = %bb, %dec_label_pc_28219
  %v4_2824b = phi i32 [ %v3_2824b, %bb ], [ %tmp102, %dec_label_pc_28219 ]
  ret i32 %v4_2824b
}

define i32 @function_28252(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28252:
  %v0_28253 = load i32, i32* @eax, align 8
  ret i32 %v0_28253
}

define i32 @_ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28256:
  %v3_28291 = call i32 @unknown_549c5(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_28291, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_282a2

bb:                                               ; preds = %dec_label_pc_28256
  %v1_282a0 = call i32 @function_282a7()
  br label %dec_label_pc_282a2

dec_label_pc_282a2:                               ; preds = %bb, %dec_label_pc_28256
  %v2_282a0 = phi i32 [ %v1_282a0, %bb ], [ %v3_28291, %dec_label_pc_28256 ]
  ret i32 %v2_282a0
}

define i32 @function_282a7() local_unnamed_addr {
dec_label_pc_282a7:
  %v0_282a8 = load i32, i32* @eax, align 8
  ret i32 %v0_282a8
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_() local_unnamed_addr {
dec_label_pc_282a9:
  %eax.global-to-local = alloca i32, align 4
  %v2_282aa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_282aa
}

define i32 @function_282ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_282ac:
  %v0_282af = load i32, i32* @ebp, align 4
  %v1_282af = add i32 %v0_282af, 8
  %v2_282af = inttoptr i32 %v1_282af to i32*
  %v3_282af = load i32, i32* %v2_282af, align 4
  %v2_282b2 = add i32 %v0_282af, -28
  %v3_282b2 = inttoptr i32 %v2_282b2 to i32*
  store i32 %v3_282af, i32* %v3_282b2, align 4
  %v0_282b5 = load i32, i32* @ebp, align 4
  %v1_282b5 = add i32 %v0_282b5, 12
  %v2_282b5 = inttoptr i32 %v1_282b5 to i32*
  %v3_282b5 = load i32, i32* %v2_282b5, align 4
  %v2_282b8 = add i32 %v0_282b5, -32
  %v3_282b8 = inttoptr i32 %v2_282b8 to i32*
  store i32 %v3_282b5, i32* %v3_282b8, align 4
  %v0_282bb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_282c1 = load i32, i32* @ebp, align 4
  %v2_282c1 = add i32 %v1_282c1, -12
  %v3_282c1 = inttoptr i32 %v2_282c1 to i32*
  store i32 %v0_282bb, i32* %v3_282c1, align 4
  %v0_282c6 = load i32, i32* @ebp, align 4
  %v1_282c6 = add i32 %v0_282c6, -12
  %v2_282c6 = inttoptr i32 %v1_282c6 to i32*
  %v3_282c6 = load i32, i32* %v2_282c6, align 4
  %v1_282c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_282c9 = xor i32 %v1_282c9, %v3_282c6
  %v3_282c9 = icmp eq i32 %v2_282c9, 0
  store i32 %v2_282c9, i32* @eax, align 8
  br i1 %v3_282c9, label %bb, label %dec_label_pc_282d2

bb:                                               ; preds = %dec_label_pc_282ac
  %v1_282d0 = call i32 @function_282d7()
  br label %dec_label_pc_282d2

dec_label_pc_282d2:                               ; preds = %bb, %dec_label_pc_282ac
  %v2_282d0 = phi i32 [ %v1_282d0, %bb ], [ %v2_282c9, %dec_label_pc_282ac ]
  ret i32 %v2_282d0
}

define i32 @function_282d7() local_unnamed_addr {
dec_label_pc_282d7:
  %v0_282d8 = load i32, i32* @eax, align 8
  ret i32 %v0_282d8
}

define i32 @_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_282d9:
  ret i32 %arg1
}

define i32 @function_282e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_282e2:
  %v0_282e2 = load i32, i32* @eax, align 8
  %v1_282e2 = load i32, i32* @ebp, align 4
  %v2_282e2 = add i32 %v1_282e2, -28
  %v3_282e2 = inttoptr i32 %v2_282e2 to i32*
  store i32 %v0_282e2, i32* %v3_282e2, align 4
  %v0_282e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_282eb = load i32, i32* @ebp, align 4
  %v2_282eb = add i32 %v1_282eb, -12
  %v3_282eb = inttoptr i32 %v2_282eb to i32*
  store i32 %v0_282e5, i32* %v3_282eb, align 4
  %v0_282f0 = load i32, i32* @ebp, align 4
  %v1_282f0 = add i32 %v0_282f0, -28
  %v2_282f0 = inttoptr i32 %v1_282f0 to i32*
  %v3_282f0 = load i32, i32* %v2_282f0, align 4
  store i32 %v3_282f0, i32* @eax, align 8
  %v1_282f3 = add i32 %v0_282f0, -12
  %v2_282f3 = inttoptr i32 %v1_282f3 to i32*
  %v3_282f3 = load i32, i32* %v2_282f3, align 4
  %v1_282f6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_282f6 = icmp eq i32 %v1_282f6, %v3_282f3
  br i1 %v3_282f6, label %bb, label %dec_label_pc_282ff

bb:                                               ; preds = %dec_label_pc_282e2
  %v1_282fd = call i32 @function_28304()
  br label %dec_label_pc_282ff

dec_label_pc_282ff:                               ; preds = %bb, %dec_label_pc_282e2
  %v2_282fd = phi i32 [ %v1_282fd, %bb ], [ %v3_282f0, %dec_label_pc_282e2 ]
  ret i32 %v2_282fd
}

define i32 @function_28304() local_unnamed_addr {
dec_label_pc_28304:
  %v0_28305 = load i32, i32* @eax, align 8
  ret i32 %v0_28305
}

define i32 @_ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28306:
  %v1_28323 = call i32 @unknown_505df(i32 %arg1)
  ret i32 %v1_28323
}

define i32 @function_2832e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2832e:
  %zf.global-to-local = alloca i1, align 1
  %v0_2832e = load i32, i32* @eax, align 8
  %v1_2832e = trunc i32 %v0_2832e to i8
  %v2_2832e = load i1, i1* @cf, align 1
  %v3_2832e = zext i1 %v2_2832e to i8
  %v4_2832e = add i8 %v3_2832e, %v1_2832e
  %v13_2832e = icmp eq i8 %v4_2832e, 0
  store i1 %v13_2832e, i1* %zf.global-to-local, align 1
  %v22_2832e = zext i8 %v4_2832e to i32
  %v24_2832e = and i32 %v0_2832e, -256
  %v25_2832e = or i32 %v22_2832e, %v24_2832e
  store i32 %v25_2832e, i32* @eax, align 8
  %v1_28330 = inttoptr i32 %v25_2832e to i8*
  %v2_28330 = load i8, i8* %v1_28330, align 1
  %v5_28330 = add i8 %v2_28330, %v4_2832e
  %v15_28330 = icmp eq i8 %v5_28330, 0
  store i1 %v15_28330, i1* %zf.global-to-local, align 1
  store i8 %v5_28330, i8* %v1_28330, align 1
  %v0_28332 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_28332, label %bb, label %dec_label_pc_2832e.dec_label_pc_28334_crit_edge

dec_label_pc_2832e.dec_label_pc_28334_crit_edge:  ; preds = %dec_label_pc_2832e
  %v2_28332.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_28334

bb:                                               ; preds = %dec_label_pc_2832e
  %v1_28332 = call i32 @function_28339()
  br label %dec_label_pc_28334

dec_label_pc_28334:                               ; preds = %dec_label_pc_2832e.dec_label_pc_28334_crit_edge, %bb
  %v2_28332 = phi i32 [ %v2_28332.pre, %dec_label_pc_2832e.dec_label_pc_28334_crit_edge ], [ %v1_28332, %bb ]
  ret i32 %v2_28332

; uselistorder directives
  uselistorder label %dec_label_pc_28334, { 1, 0 }
}

define i32 @function_28339() local_unnamed_addr {
dec_label_pc_28339:
  %v0_2833a = load i32, i32* @eax, align 8
  ret i32 %v0_2833a
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2833b:
  ret i32 %arg2
}

define i32 @function_28368(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28368:
  %v0_28368 = load i32, i32* @eax, align 8
  %v0_2836c = load i32, i32* @ebp, align 4
  %v1_2836c = add i32 %v0_2836c, -28
  %v2_2836c = inttoptr i32 %v1_2836c to i32*
  %v3_2836c = load i32, i32* %v2_2836c, align 4
  %v2_28372 = call i32 @unknown_43c96(i32 %v3_2836c, i32 %v0_28368)
  store i32 %v2_28372, i32* @eax, align 8
  %v0_28377 = load i32, i32* @ebp, align 4
  %v1_28377 = add i32 %v0_28377, -12
  %v2_28377 = inttoptr i32 %v1_28377 to i32*
  %v3_28377 = load i32, i32* %v2_28377, align 4
  %v1_2837a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2837a = icmp eq i32 %v1_2837a, %v3_28377
  br i1 %v3_2837a, label %bb, label %dec_label_pc_28383

bb:                                               ; preds = %dec_label_pc_28368
  %v1_28381 = call i32 @function_28388()
  br label %dec_label_pc_28383

dec_label_pc_28383:                               ; preds = %bb, %dec_label_pc_28368
  %v2_28381 = phi i32 [ %v1_28381, %bb ], [ %v2_28372, %dec_label_pc_28368 ]
  ret i32 %v2_28381
}

define i32 @function_28388() local_unnamed_addr {
dec_label_pc_28388:
  %v0_28389 = load i32, i32* @eax, align 8
  ret i32 %v0_28389
}

define i32 @_ZNK5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2838a:
  %v1_283a7 = call i32 @unknown_5074a(i32 %arg1)
  store i32 %v1_283a7, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_283b8

bb:                                               ; preds = %dec_label_pc_2838a
  %v1_283b6 = call i32 @function_283bd()
  br label %dec_label_pc_283b8

dec_label_pc_283b8:                               ; preds = %bb, %dec_label_pc_2838a
  %v2_283b6 = phi i32 [ %v1_283b6, %bb ], [ %v1_283a7, %dec_label_pc_2838a ]
  ret i32 %v2_283b6
}

define i32 @function_283bd() local_unnamed_addr {
dec_label_pc_283bd:
  %v0_283be = load i32, i32* @eax, align 8
  ret i32 %v0_283be
}

define i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_283c0:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_283e6

bb:                                               ; preds = %dec_label_pc_283c0
  %v2_283e4 = call i32 @function_283eb(i32 %arg1)
  br label %dec_label_pc_283e6

dec_label_pc_283e6:                               ; preds = %bb, %dec_label_pc_283c0
  %v3_283e4 = phi i32 [ %v2_283e4, %bb ], [ %arg1, %dec_label_pc_283c0 ]
  ret i32 %v3_283e4
}

define i32 @function_283eb(i32 %arg1) local_unnamed_addr {
dec_label_pc_283eb:
  %v0_283ec = load i32, i32* @eax, align 8
  ret i32 %v0_283ec
}

define i32 @_ZN5boost6detail7variant14assign_storageD1Ev() local_unnamed_addr {
dec_label_pc_283ee:
  %eax.global-to-local = alloca i32, align 4
  %v17_283f1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_283f1
}

define i32 @function_283f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_283f4:
  %v0_283f4 = load i32, i32* @ebp, align 4
  %v1_283f4 = add i32 %v0_283f4, 8
  %v2_283f4 = inttoptr i32 %v1_283f4 to i32*
  %v3_283f4 = load i32, i32* %v2_283f4, align 4
  %v2_283f7 = add i32 %v0_283f4, -28
  %v3_283f7 = inttoptr i32 %v2_283f7 to i32*
  store i32 %v3_283f4, i32* %v3_283f7, align 4
  %v0_283fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_28400 = load i32, i32* @ebp, align 4
  %v2_28400 = add i32 %v1_28400, -12
  %v3_28400 = inttoptr i32 %v2_28400 to i32*
  store i32 %v0_283fa, i32* %v3_28400, align 4
  %v0_28405 = load i32, i32* @ebp, align 4
  %v1_28405 = add i32 %v0_28405, -28
  %v2_28405 = inttoptr i32 %v1_28405 to i32*
  %v3_28405 = load i32, i32* %v2_28405, align 4
  %v1_2840b = call i32 @function_3e37c(i32 %v3_28405)
  %v0_28410 = load i32, i32* @ebp, align 4
  %v1_28410 = add i32 %v0_28410, -12
  %v2_28410 = inttoptr i32 %v1_28410 to i32*
  %v3_28410 = load i32, i32* %v2_28410, align 4
  %v1_28413 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28413 = xor i32 %v1_28413, %v3_28410
  %v3_28413 = icmp eq i32 %v2_28413, 0
  store i32 %v2_28413, i32* @eax, align 8
  br i1 %v3_28413, label %bb, label %dec_label_pc_2841c

bb:                                               ; preds = %dec_label_pc_283f4
  %v1_2841a = call i32 @function_28421()
  br label %dec_label_pc_2841c

dec_label_pc_2841c:                               ; preds = %bb, %dec_label_pc_283f4
  %v2_2841a = phi i32 [ %v1_2841a, %bb ], [ %v2_28413, %dec_label_pc_283f4 ]
  ret i32 %v2_2841a
}

define i32 @function_28421() local_unnamed_addr {
dec_label_pc_28421:
  %v0_28422 = load i32, i32* @eax, align 8
  ret i32 %v0_28422
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE8try_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_28424:
  %v0_28430 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_28430
}

define i32 @function_28438(i32 %arg1) local_unnamed_addr {
dec_label_pc_28438:
  %v0_2843b = load i32, i32* @ebp, align 4
  %v1_2843b = add i32 %v0_2843b, -28
  %v2_2843b = inttoptr i32 %v1_2843b to i32*
  %v3_2843b = load i32, i32* %v2_2843b, align 4
  store i32 %v3_2843b, i32* @eax, align 8
  %v1_28441 = call i32 @function_39514(i32 %v3_2843b)
  store i32 %v1_28441, i32* @eax, align 8
  %v0_28446 = load i32, i32* @ebp, align 4
  %v1_28446 = add i32 %v0_28446, -12
  %v2_28446 = inttoptr i32 %v1_28446 to i32*
  %v3_28446 = load i32, i32* %v2_28446, align 4
  %v1_28449 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28449 = icmp eq i32 %v1_28449, %v3_28446
  br i1 %v3_28449, label %bb, label %dec_label_pc_28452

bb:                                               ; preds = %dec_label_pc_28438
  %v1_28450 = call i32 @function_28457()
  br label %dec_label_pc_28452

dec_label_pc_28452:                               ; preds = %bb, %dec_label_pc_28438
  %v2_28450 = phi i32 [ %v1_28450, %bb ], [ %v1_28441, %dec_label_pc_28438 ]
  ret i32 %v2_28450
}

define i32 @function_28457() local_unnamed_addr {
dec_label_pc_28457:
  %v0_28458 = load i32, i32* @eax, align 8
  ret i32 %v0_28458
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28459:
  ret i32 %arg1
}

define i32 @function_28468(i32 %arg1) local_unnamed_addr {
dec_label_pc_28468:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_28468 = load i32, i32* @ebp, align 4
  %v0_28469 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_28469 = or i32 %v0_28469, 137
  store i32 %v11_28469, i32* %eax.global-to-local, align 8
  %v0_2846c = load i32, i32* @ecx, align 8
  %v1_2846c = add i32 %v0_2846c, 255
  %v1_2846e = add i32 %v0_28468, 3
  store i32 %v1_2846e, i32* @ebp, align 4
  %v1_2846f = add i32 %v0_2846c, -1587159996
  %v2_2846f = inttoptr i32 %v1_2846f to i8*
  %v3_2846f = load i8, i8* %v2_2846f, align 1
  %v5_2846f = trunc i32 %v1_2846c to i8
  %v8_2846f = add i8 %v3_2846f, %v5_2846f
  %v28_2846f = icmp ult i8 %v8_2846f, %v3_2846f
  store i1 %v28_2846f, i1* %cf.global-to-local, align 1
  store i8 %v8_2846f, i8* %v2_2846f, align 1
  %v0_28475 = load i32, i32* %eax.global-to-local, align 8
  %v1_28475 = trunc i32 %v0_28475 to i8
  %v2_28475 = load i1, i1* %cf.global-to-local, align 1
  %v3_28475 = zext i1 %v2_28475 to i8
  %v4_28475 = add i8 %v3_28475, %v1_28475
  %v19_28475 = icmp ule i8 %v4_28475, %v1_28475
  %v21_28475 = icmp eq i1 %v2_28475, %v19_28475
  store i1 %v21_28475, i1* %cf.global-to-local, align 1
  %v22_28475 = zext i8 %v4_28475 to i32
  %v24_28475 = and i32 %v0_28475, -256
  %v25_28475 = or i32 %v22_28475, %v24_28475
  store i32 %v25_28475, i32* %eax.global-to-local, align 8
  %v1_28477 = inttoptr i32 %v25_28475 to i8*
  %v2_28477 = load i8, i8* %v1_28477, align 1
  %v5_28477 = add i8 %v2_28477, %v4_28475
  store i8 %v5_28477, i8* %v1_28477, align 1
  %v0_28479 = load i32, i32* %eax.global-to-local, align 8
  %v1_28479 = load i32, i32* @ebp, align 4
  %v2_28479 = add i32 %v1_28479, -12
  %v3_28479 = inttoptr i32 %v2_28479 to i32*
  store i32 %v0_28479, i32* %v3_28479, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2847e = load i32, i32* @ebp, align 4
  %v1_2847e = add i32 %v0_2847e, -36
  %v2_2847e = inttoptr i32 %v1_2847e to i32*
  %v3_2847e = load i32, i32* %v2_2847e, align 4
  store i32 %v3_2847e, i32* %eax.global-to-local, align 8
  %v1_28484 = call i32 @unknown_5075f(i32 %v3_2847e)
  store i32 %v1_28484, i32* %eax.global-to-local, align 8
  store i32 %v1_28484, i32* %esi.global-to-local, align 4
  %v0_2848b = load i32, i32* @ebp, align 4
  %v1_2848b = add i32 %v0_2848b, -32
  %v2_2848b = inttoptr i32 %v1_2848b to i32*
  %v3_2848b = load i32, i32* %v2_2848b, align 4
  store i32 %v3_2848b, i32* %eax.global-to-local, align 8
  %v1_28491 = call i32 @unknown_5075f(i32 %v3_2848b)
  store i32 %v1_28491, i32* %eax.global-to-local, align 8
  store i32 %v1_28491, i32* %ebx.global-to-local, align 4
  %v0_28498 = load i32, i32* @ebp, align 4
  %v1_28498 = add i32 %v0_28498, -28
  %v2_28498 = inttoptr i32 %v1_28498 to i32*
  %v3_28498 = load i32, i32* %v2_28498, align 4
  store i32 %v3_28498, i32* %eax.global-to-local, align 8
  %v1_2849e = call i32 @unknown_5075f(i32 %v3_28498)
  store i32 %v1_2849e, i32* %eax.global-to-local, align 8
  %v0_284a3 = load i32, i32* %esi.global-to-local, align 4
  %v0_284a7 = load i32, i32* %ebx.global-to-local, align 4
  %v3_284ae = call i32 @unknown_54c32(i32 %v1_2849e, i32 %v0_284a7, i32 %v0_284a3)
  store i32 %v3_284ae, i32* @eax, align 8
  %v0_284b3 = load i32, i32* @ebp, align 4
  %v1_284b3 = add i32 %v0_284b3, -12
  %v2_284b3 = inttoptr i32 %v1_284b3 to i32*
  %v3_284b3 = load i32, i32* %v2_284b3, align 4
  %v1_284b6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_284b6 = icmp eq i32 %v1_284b6, %v3_284b3
  br i1 %v3_284b6, label %bb, label %dec_label_pc_284bf

bb:                                               ; preds = %dec_label_pc_28468
  %v1_284bd = call i32 @function_284c4()
  store i32 %v1_284bd, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_284bf

dec_label_pc_284bf:                               ; preds = %bb, %dec_label_pc_28468
  %v3_284bd = phi i32 [ %v1_284bd, %bb ], [ %v3_284ae, %dec_label_pc_28468 ]
  ret i32 %v3_284bd

; uselistorder directives
  uselistorder i8 %v4_28475, { 0, 2, 1 }
  uselistorder i8 %v1_28475, { 1, 0 }
  uselistorder i8 %v3_2846f, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5075f, { 2, 1, 0 }
}

define i32 @function_284c4() local_unnamed_addr {
dec_label_pc_284c4:
  %v0_284ca = load i32, i32* @eax, align 8
  ret i32 %v0_284ca
}

define i32 @_ZNKSt6vectorIhSaIhEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_284cc:
  %v1_284e9 = call i32 @unknown_43a4e(i32 %arg1)
  %v1_284f1 = call i32 @unknown_54b86(i32 %v1_284e9)
  store i32 %v1_284f1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28502

bb:                                               ; preds = %dec_label_pc_284cc
  %v1_28500 = call i32 @function_28507()
  br label %dec_label_pc_28502

dec_label_pc_28502:                               ; preds = %bb, %dec_label_pc_284cc
  %v2_28500 = phi i32 [ %v1_28500, %bb ], [ %v1_284f1, %dec_label_pc_284cc ]
  ret i32 %v2_28500
}

define i32 @function_28507() local_unnamed_addr {
dec_label_pc_28507:
  %v0_28508 = load i32, i32* @eax, align 8
  ret i32 %v0_28508
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28509:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_28527 = ptrtoint i32* %stack_var_-37 to i32
  %v2_2852a = ptrtoint i32* %stack_var_-32 to i32
  %v2_28534 = call i32 @unknown_54d35(i32 %v2_28527, i32 %v2_2852a)
  %v0_2853c = load i32, i32* %ebx.global-to-local, align 4
  %v3_28547 = load i32, i32* %stack_var_-32, align 4
  %v3_2854d = call i32 @unknown_54d6a(i32 %v3_28547, i32 %arg2, i32 %v0_2853c)
  store i32 %v3_2854d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2855e

bb:                                               ; preds = %dec_label_pc_28509
  %v1_2855c = call i32 @function_28563()
  br label %dec_label_pc_2855e

dec_label_pc_2855e:                               ; preds = %bb, %dec_label_pc_28509
  %v2_2855c = phi i32 [ %v1_2855c, %bb ], [ %v3_2854d, %dec_label_pc_28509 ]
  ret i32 %v2_2855c
}

define i32 @function_28563() local_unnamed_addr {
dec_label_pc_28563:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28564(i32* %arg1) local_unnamed_addr {
dec_label_pc_28564:
  %v2_28566 = load i32, i32* %arg1, align 4
  store i32 %v2_28566, i32* @ebp, align 4
  %v0_28567 = load i32, i32* @eax, align 8
  ret i32 %v0_28567
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28568:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_2858b = ptrtoint i32* %stack_var_-20 to i32
  %v2_28598 = call i32 @unknown_4a85d(i32 %v2_2858b, i32 %arg2)
  %v2_285a0 = ptrtoint i32* %stack_var_-24 to i32
  %v2_285ad = call i32 @unknown_4a85d(i32 %v2_285a0, i32 %arg1)
  %v3_285bc = load i32, i32* %stack_var_-20, align 4
  %v3_285c3 = load i32, i32* %stack_var_-24, align 4
  %v3_285c9 = call i32 @unknown_54e12(i32 %v3_285c3, i32 %v3_285bc, i32 %arg3)
  store i32 %v3_285c9, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_285da

bb:                                               ; preds = %dec_label_pc_28568
  %v1_285d8 = call i32 @function_285df()
  br label %dec_label_pc_285da

dec_label_pc_285da:                               ; preds = %bb, %dec_label_pc_28568
  %v2_285d8 = phi i32 [ %v1_285d8, %bb ], [ %v3_285c9, %dec_label_pc_28568 ]
  ret i32 %v2_285d8

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4a85d, { 1, 0 }
}

define i32 @function_285df() local_unnamed_addr {
dec_label_pc_285df:
  %v0_285e0 = load i32, i32* @eax, align 8
  ret i32 %v0_285e0
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_285e1:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_285f8 = ptrtoint i32* %stack_var_-32 to i32
  %v1_285fe = call i32 @unknown_44383(i32 %v2_285f8)
  %v1_28603 = inttoptr i32 %v1_285fe to i32*
  %v2_28603 = load i32, i32* %v1_28603, align 4
  store i32 %v2_28603, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28611

bb:                                               ; preds = %dec_label_pc_285e1
  %v1_2860f = call i32 @function_28616()
  br label %dec_label_pc_28611

dec_label_pc_28611:                               ; preds = %bb, %dec_label_pc_285e1
  %v2_2860f = phi i32 [ %v1_2860f, %bb ], [ %v2_28603, %dec_label_pc_285e1 ]
  ret i32 %v2_2860f
}

define i32 @function_28616() local_unnamed_addr {
dec_label_pc_28616:
  %v0_28617 = load i32, i32* @eax, align 8
  ret i32 %v0_28617
}

define i32 @_ZNSaI5CTxInEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28618:
  %v1_28635 = call i32 @unknown_54f34(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28646

bb:                                               ; preds = %dec_label_pc_28618
  %v1_28644 = call i32 @function_2864b()
  br label %dec_label_pc_28646

dec_label_pc_28646:                               ; preds = %bb, %dec_label_pc_28618
  %v2_28644 = phi i32 [ %v1_28644, %bb ], [ 0, %dec_label_pc_28618 ]
  ret i32 %v2_28644
}

define i32 @function_2864b() local_unnamed_addr {
dec_label_pc_2864b:
  %v0_2864c = load i32, i32* @eax, align 8
  ret i32 %v0_2864c
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2864e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28671

bb:                                               ; preds = %dec_label_pc_2864e
  %v2_2866f = call i32 @function_28676(i32 %arg1)
  br label %dec_label_pc_28671

dec_label_pc_28671:                               ; preds = %bb, %dec_label_pc_2864e
  %v3_2866f = phi i32 [ %v2_2866f, %bb ], [ 0, %dec_label_pc_2864e ]
  ret i32 %v3_2866f
}

define i32 @function_28676(i32 %arg1) local_unnamed_addr {
dec_label_pc_28676:
  %v0_28677 = load i32, i32* @eax, align 8
  ret i32 %v0_28677
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28678:
  ret i32 %arg2
}

define i32 @function_286b6() local_unnamed_addr {
dec_label_pc_286b6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_286b6 = load i32, i32* %ecx.global-to-local, align 8
  %v1_286b6 = add i32 %v0_286b6, -1
  store i32 %v1_286b6, i32* %ecx.global-to-local, align 8
  %v0_286b8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_286b8
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP5CTxInEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_286b9:
  %v15_286f2109 = icmp eq i32 %arg1, %arg2
  %v1_286f5110 = icmp eq i1 %v15_286f2109, false
  %v5_286f8114 = icmp eq i1 %v1_286f5110, false
  %v1_286fa115 = icmp eq i1 %v5_286f8114, false
  br i1 %v1_286fa115, label %dec_label_pc_286d8, label %dec_label_pc_286fc

dec_label_pc_286d8:                               ; preds = %dec_label_pc_286b9, %dec_label_pc_286d8
  %stack_var_-32.0.in116 = phi i32 [ %v5_286eb, %dec_label_pc_286d8 ], [ %arg1, %dec_label_pc_286b9 ]
  %v2_286de = call i32 @unknown_54fff(i32 %stack_var_-32.0.in116)
  %v2_286e6 = call i32 @unknown_55065(i32 %v2_286de)
  %v5_286eb = add i32 %stack_var_-32.0.in116, ptrtoint (i64* @global_var_34.2855 to i32)
  %v15_286f2 = icmp eq i32 %v5_286eb, %arg2
  %v1_286f5 = icmp eq i1 %v15_286f2, false
  %v5_286f8 = icmp eq i1 %v1_286f5, false
  %v1_286fa = icmp eq i1 %v5_286f8, false
  br i1 %v1_286fa, label %dec_label_pc_286d8, label %dec_label_pc_286fc

dec_label_pc_286fc:                               ; preds = %dec_label_pc_286d8, %dec_label_pc_286b9
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28708

bb:                                               ; preds = %dec_label_pc_286fc
  %v1_28706 = call i32 @function_2870d()
  br label %dec_label_pc_28708

dec_label_pc_28708:                               ; preds = %bb, %dec_label_pc_286fc
  %v2_28706 = phi i32 [ %v1_28706, %bb ], [ 0, %dec_label_pc_286fc ]
  ret i32 %v2_28706

; uselistorder directives
  uselistorder i32 %v5_286eb, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.in116, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_286d8, { 1, 0 }
}

define i32 @function_2870d() local_unnamed_addr {
dec_label_pc_2870d:
  %v0_2870e = load i32, i32* @eax, align 8
  ret i32 %v0_2870e
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28710:
  ret i32 %arg2
}

define i32 @function_2874e() local_unnamed_addr {
dec_label_pc_2874e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2874e = load i32, i32* %ecx.global-to-local, align 8
  %v1_2874e = add i32 %v0_2874e, -1
  store i32 %v1_2874e, i32* %ecx.global-to-local, align 8
  %v0_28750 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28750
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28751:
  %v15_2878a105 = icmp eq i32 %arg1, %arg2
  %v1_2878d106 = icmp eq i1 %v15_2878a105, false
  %v5_28790110 = icmp eq i1 %v1_2878d106, false
  %v1_28792111 = icmp eq i1 %v5_28790110, false
  br i1 %v1_28792111, label %dec_label_pc_28770, label %dec_label_pc_28794

dec_label_pc_28770:                               ; preds = %dec_label_pc_28751, %dec_label_pc_28770
  %stack_var_-32.0112 = phi i32 [ %v4_28783, %dec_label_pc_28770 ], [ %arg1, %dec_label_pc_28751 ]
  %v1_28776 = call i32 @unknown_55132(i32 %stack_var_-32.0112)
  %v1_2877e = call i32 @unknown_5515f(i32 %v1_28776)
  %v4_28783 = add i32 %stack_var_-32.0112, 20
  %v15_2878a = icmp eq i32 %v4_28783, %arg2
  %v1_2878d = icmp eq i1 %v15_2878a, false
  %v5_28790 = icmp eq i1 %v1_2878d, false
  %v1_28792 = icmp eq i1 %v5_28790, false
  br i1 %v1_28792, label %dec_label_pc_28770, label %dec_label_pc_28794

dec_label_pc_28794:                               ; preds = %dec_label_pc_28770, %dec_label_pc_28751
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_287a0

bb:                                               ; preds = %dec_label_pc_28794
  %v1_2879e = call i32 @function_287a5()
  br label %dec_label_pc_287a0

dec_label_pc_287a0:                               ; preds = %bb, %dec_label_pc_28794
  %v2_2879e = phi i32 [ %v1_2879e, %bb ], [ 0, %dec_label_pc_28794 ]
  ret i32 %v2_2879e

; uselistorder directives
  uselistorder i32 %v4_28783, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_28770, { 1, 0 }
}

define i32 @function_287a5() local_unnamed_addr {
dec_label_pc_287a5:
  %v0_287a6 = load i32, i32* @eax, align 8
  ret i32 %v0_287a6
}

define i32 @_ZN9__gnu_cxxneIPK5CTxInSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_287a7:
  %v1_287cb = call i32 @unknown_4b2db(i32 %arg1)
  %v1_287d0 = inttoptr i32 %v1_287cb to i32*
  %v2_287d0 = load i32, i32* %v1_287d0, align 4
  %v1_287d8 = call i32 @unknown_4b2db(i32 %arg2)
  %v1_287dd = inttoptr i32 %v1_287d8 to i32*
  %v2_287dd = load i32, i32* %v1_287dd, align 4
  %v12_287df = icmp eq i32 %v2_287d0, %v2_287dd
  %v1_287e1 = icmp eq i1 %v12_287df, false
  %v2_287e1 = zext i1 %v1_287e1 to i32
  %v4_287e1 = and i32 %v2_287dd, -256
  %v5_287e1 = or i32 %v2_287e1, %v4_287e1
  store i32 %v5_287e1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_287f0

bb:                                               ; preds = %dec_label_pc_287a7
  %v1_287ee = call i32 @function_287f5()
  br label %dec_label_pc_287f0

dec_label_pc_287f0:                               ; preds = %bb, %dec_label_pc_287a7
  %v2_287ee = phi i32 [ %v1_287ee, %bb ], [ %v5_287e1, %dec_label_pc_287a7 ]
  ret i32 %v2_287ee

; uselistorder directives
  uselistorder i32 %v2_287dd, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4b2db, { 1, 0 }
}

define i32 @function_287f5() local_unnamed_addr {
dec_label_pc_287f5:
  %v0_287fa = load i32, i32* @eax, align 8
  ret i32 %v0_287fa
}

define i32 @_ZN9__gnu_cxxneIPK6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_287fb:
  ret i32 %arg2
}

define i32 @function_28810(i32 %arg1) local_unnamed_addr {
dec_label_pc_28810:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_28810 = load i32, i32* @eax, align 8
  %v1_28810 = trunc i32 %v0_28810 to i8
  %v2_28810 = load i1, i1* @cf, align 1
  %v3_28810 = zext i1 %v2_28810 to i8
  %v4_28810 = add i8 %v3_28810, %v1_28810
  %v22_28810 = zext i8 %v4_28810 to i32
  %v24_28810 = and i32 %v0_28810, -256
  %v25_28810 = or i32 %v22_28810, %v24_28810
  store i32 %v25_28810, i32* %eax.global-to-local, align 8
  %v1_28812 = inttoptr i32 %v25_28810 to i8*
  %v2_28812 = load i8, i8* %v1_28812, align 1
  %v5_28812 = add i8 %v2_28812, %v4_28810
  store i8 %v5_28812, i8* %v1_28812, align 1
  %v0_28814 = load i32, i32* %eax.global-to-local, align 8
  %v1_28814 = load i32, i32* @ebp, align 4
  %v2_28814 = add i32 %v1_28814, -12
  %v3_28814 = inttoptr i32 %v2_28814 to i32*
  store i32 %v0_28814, i32* %v3_28814, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_28819 = load i32, i32* @ebp, align 4
  %v1_28819 = add i32 %v0_28819, -28
  %v2_28819 = inttoptr i32 %v1_28819 to i32*
  %v3_28819 = load i32, i32* %v2_28819, align 4
  store i32 %v3_28819, i32* %eax.global-to-local, align 8
  %v1_2881f = call i32 @unknown_4b397(i32 %v3_28819)
  store i32 %v1_2881f, i32* %eax.global-to-local, align 8
  %v1_28824 = inttoptr i32 %v1_2881f to i32*
  %v2_28824 = load i32, i32* %v1_28824, align 4
  store i32 %v2_28824, i32* %ebx.global-to-local, align 4
  %v0_28826 = load i32, i32* @ebp, align 4
  %v1_28826 = add i32 %v0_28826, -32
  %v2_28826 = inttoptr i32 %v1_28826 to i32*
  %v3_28826 = load i32, i32* %v2_28826, align 4
  store i32 %v3_28826, i32* %eax.global-to-local, align 8
  %v1_2882c = call i32 @unknown_4b397(i32 %v3_28826)
  store i32 %v1_2882c, i32* %eax.global-to-local, align 8
  %v1_28831 = inttoptr i32 %v1_2882c to i32*
  %v2_28831 = load i32, i32* %v1_28831, align 4
  %v0_28833 = load i32, i32* %ebx.global-to-local, align 4
  %v12_28833 = icmp eq i32 %v0_28833, %v2_28831
  %v1_28835 = icmp eq i1 %v12_28833, false
  %v2_28835 = zext i1 %v1_28835 to i32
  %v4_28835 = and i32 %v2_28831, -256
  %v5_28835 = or i32 %v2_28835, %v4_28835
  store i32 %v5_28835, i32* @eax, align 8
  %v0_28838 = load i32, i32* @ebp, align 4
  %v1_28838 = add i32 %v0_28838, -12
  %v2_28838 = inttoptr i32 %v1_28838 to i32*
  %v3_28838 = load i32, i32* %v2_28838, align 4
  %v1_2883b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2883b = icmp eq i32 %v1_2883b, %v3_28838
  store i1 %v3_2883b, i1* @zf, align 1
  br i1 %v3_2883b, label %bb, label %dec_label_pc_28844

bb:                                               ; preds = %dec_label_pc_28810
  %v1_28842 = call i32 @function_28849()
  store i32 %v1_28842, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_28844

dec_label_pc_28844:                               ; preds = %bb, %dec_label_pc_28810
  %v2_28842 = phi i32 [ %v1_28842, %bb ], [ %v5_28835, %dec_label_pc_28810 ]
  ret i32 %v2_28842

; uselistorder directives
  uselistorder i1 %v3_2883b, { 1, 0 }
  uselistorder i32 %v2_28831, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4b397, { 1, 0 }
}

define i32 @function_28849() local_unnamed_addr {
dec_label_pc_28849:
  %v0_28849 = load i32, i32* @esp, align 4
  %v10_28849 = icmp eq i32 %v0_28849, -52
  store i1 %v10_28849, i1* @zf, align 1
  %v0_2884e = load i32, i32* @eax, align 8
  ret i32 %v0_2884e
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2884f:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_28866 = ptrtoint i32* %stack_var_-32 to i32
  %v1_2886c = call i32 @unknown_4b383(i32 %v2_28866)
  %v1_28871 = inttoptr i32 %v1_2886c to i32*
  %v2_28871 = load i32, i32* %v1_28871, align 4
  store i32 %v2_28871, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2887f

bb:                                               ; preds = %dec_label_pc_2884f
  %v1_2887d = call i32 @function_28884()
  br label %dec_label_pc_2887f

dec_label_pc_2887f:                               ; preds = %bb, %dec_label_pc_2884f
  %v2_2887d = phi i32 [ %v1_2887d, %bb ], [ %v2_28871, %dec_label_pc_2884f ]
  ret i32 %v2_2887d
}

define i32 @function_28884() local_unnamed_addr {
dec_label_pc_28884:
  %v0_28885 = load i32, i32* @eax, align 8
  ret i32 %v0_28885
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28886:
  %v0_28892 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_28892
}

define i32 @function_28898(i32 %arg1) local_unnamed_addr {
dec_label_pc_28898:
  %v0_28898 = load i32, i32* @eax, align 8
  %v1_28898 = load i32, i32* @ebp, align 4
  %v2_28898 = add i32 %v1_28898, -12
  %v3_28898 = inttoptr i32 %v2_28898 to i32*
  store i32 %v0_28898, i32* %v3_28898, align 4
  ret i32 0
}

define i32 @function_2889e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2889e:
  %v0_2889e = load i32, i32* @ebp, align 4
  %v1_2889e = add i32 %v0_2889e, 1
  store i32 %v1_2889e, i32* @ebp, align 4
  %v0_288a3 = call i32 @unknown_4b422()
  %v1_288a8 = inttoptr i32 %v0_288a3 to i32*
  %v2_288a8 = load i32, i32* %v1_288a8, align 4
  store i32 %v2_288a8, i32* @eax, align 8
  %v0_288aa = load i32, i32* @ebp, align 4
  %v1_288aa = add i32 %v0_288aa, -12
  %v2_288aa = inttoptr i32 %v1_288aa to i32*
  %v3_288aa = load i32, i32* %v2_288aa, align 4
  %v1_288ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_288ad = icmp eq i32 %v1_288ad, %v3_288aa
  br i1 %v3_288ad, label %bb, label %dec_label_pc_288b6

bb:                                               ; preds = %dec_label_pc_2889e
  %v1_288b4 = call i32 @function_288bb()
  br label %dec_label_pc_288b6

dec_label_pc_288b6:                               ; preds = %bb, %dec_label_pc_2889e
  %v2_288b4 = phi i32 [ %v1_288b4, %bb ], [ %v2_288a8, %dec_label_pc_2889e ]
  ret i32 %v2_288b4
}

define i32 @function_288bb() local_unnamed_addr {
dec_label_pc_288bb:
  %v0_288bc = load i32, i32* @eax, align 8
  ret i32 %v0_288bc
}

define i32 @_ZNSaI6CTxOutEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288be:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v2_288e8 = call i32 @unknown_55302(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_288f9

bb:                                               ; preds = %dec_label_pc_288be
  %v1_288f7 = load i32, i32* %stack_var_-60, align 4
  %v2_288f7 = call i32 @function_288fe(i32 %v1_288f7)
  br label %dec_label_pc_288f9

dec_label_pc_288f9:                               ; preds = %bb, %dec_label_pc_288be
  %v3_288f7 = phi i32 [ %v2_288f7, %bb ], [ 0, %dec_label_pc_288be ]
  ret i32 %v3_288f7

; uselistorder directives
  uselistorder i32 (i32)* @function_288fe, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_288fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_288fe:
  %v0_288ff = load i32, i32* @eax, align 8
  ret i32 %v0_288ff
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_28900:
  %eax.global-to-local = alloca i32, align 4
  %v2_28901 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_28901
}

define i32 @function_28918(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28918:
  %v0_28918 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2891e = load i32, i32* @ebp, align 4
  %v2_2891e = add i32 %v1_2891e, -12
  %v3_2891e = inttoptr i32 %v2_2891e to i32*
  store i32 %v0_28918, i32* %v3_2891e, align 4
  %v0_28923 = load i32, i32* @ebp, align 4
  %v1_28923 = add i32 %v0_28923, -28
  %v2_28923 = inttoptr i32 %v1_28923 to i32*
  %v3_28923 = load i32, i32* %v2_28923, align 4
  %v1_28929 = call i32 @unknown_55374(i32 %v3_28923)
  %v1_2892e = load i32, i32* @ebp, align 4
  %v2_2892e = add i32 %v1_2892e, -32
  %v3_2892e = inttoptr i32 %v2_2892e to i32*
  %v4_2892e = load i32, i32* %v3_2892e, align 4
  %v10_2892e = icmp ult i32 %v1_28929, %v4_2892e
  %v1_28931 = zext i1 %v10_2892e to i32
  %v3_28931 = and i32 %v1_28929, -256
  %v4_28931 = or i32 %v1_28931, %v3_28931
  %v5_28934 = icmp eq i1 %v10_2892e, false
  br i1 %v5_28934, label %bb, label %dec_label_pc_28938

bb:                                               ; preds = %dec_label_pc_28918
  %v1_28936 = call i32 @function_2893d()
  br label %dec_label_pc_28938

dec_label_pc_28938:                               ; preds = %bb, %dec_label_pc_28918
  %v3_28936 = phi i32 [ %v1_28936, %bb ], [ %v4_28931, %dec_label_pc_28918 ]
  ret i32 %v3_28936

; uselistorder directives
  uselistorder i1 %v10_2892e, { 1, 0 }
}

define i32 @function_2893d() local_unnamed_addr {
dec_label_pc_2893d:
  %v0_2893d = load i32, i32* @ebp, align 4
  %v1_2893d = add i32 %v0_2893d, -32
  %v2_2893d = inttoptr i32 %v1_2893d to i32*
  %v3_2893d = load i32, i32* %v2_2893d, align 4
  %v2_28947 = mul i32 %v3_2893d, 20
  ret i32 %v2_28947
}

define i32 @function_28962() local_unnamed_addr {
dec_label_pc_28962:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_28962 = load i32, i32* %ecx.global-to-local, align 8
  %v1_28962 = add i32 %v0_28962, -1
  store i32 %v1_28962, i32* %ecx.global-to-local, align 8
  %v0_28964 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28964
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_() local_unnamed_addr {
dec_label_pc_28965:
  %eax.global-to-local = alloca i32, align 4
  %v5_28968 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_28968
}

define i32 @function_2896a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2896a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2896b = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2896b = xor i32 %v0_2896b, 139
  store i32 %v11_2896b, i32* %eax.global-to-local, align 8
  %v0_2896d = load i32, i32* @ebp, align 4
  %v1_2896d = add i32 %v0_2896d, 1
  store i32 %v1_2896d, i32* %ebp.global-to-local, align 4
  %v0_2896e = load i32, i32* @ecx, align 8
  %v1_2896e = add i32 %v0_2896e, 1166795845
  %v2_2896e = inttoptr i32 %v1_2896e to i8*
  %v3_2896e = load i8, i8* %v2_2896e, align 1
  %v5_2896e = trunc i32 %v0_2896e to i8
  %v6_2896e = or i8 %v3_2896e, %v5_2896e
  store i8 %v6_2896e, i8* %v2_2896e, align 1
  %v0_28974 = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_28974 = or i32 %v0_28974, 137
  store i32 %v11_28974, i32* %eax.global-to-local, align 8
  %v0_28976 = load i32, i32* %ebp.global-to-local, align 4
  %v0_28977 = load i32, i32* @ecx, align 8
  %v1_28977 = add i32 %v0_28977, 255
  %v1_28979 = add i32 %v0_28976, 2
  store i32 %v1_28979, i32* @ebp, align 4
  %v1_2897a = add i32 %v0_28977, -1587159996
  %v2_2897a = inttoptr i32 %v1_2897a to i8*
  %v3_2897a = load i8, i8* %v2_2897a, align 1
  %v5_2897a = trunc i32 %v1_28977 to i8
  %v8_2897a = add i8 %v3_2897a, %v5_2897a
  %v28_2897a = icmp ult i8 %v8_2897a, %v3_2897a
  store i1 %v28_2897a, i1* %cf.global-to-local, align 1
  store i8 %v8_2897a, i8* %v2_2897a, align 1
  %v0_28980 = load i32, i32* %eax.global-to-local, align 8
  %v1_28980 = trunc i32 %v0_28980 to i8
  %v2_28980 = load i1, i1* %cf.global-to-local, align 1
  %v3_28980 = zext i1 %v2_28980 to i8
  %v4_28980 = add i8 %v3_28980, %v1_28980
  %v19_28980 = icmp ule i8 %v4_28980, %v1_28980
  %v21_28980 = icmp eq i1 %v2_28980, %v19_28980
  store i1 %v21_28980, i1* %cf.global-to-local, align 1
  %v22_28980 = zext i8 %v4_28980 to i32
  %v24_28980 = and i32 %v0_28980, -256
  %v25_28980 = or i32 %v22_28980, %v24_28980
  store i32 %v25_28980, i32* %eax.global-to-local, align 8
  %v1_28982 = inttoptr i32 %v25_28980 to i8*
  %v2_28982 = load i8, i8* %v1_28982, align 1
  %v5_28982 = add i8 %v2_28982, %v4_28980
  store i8 %v5_28982, i8* %v1_28982, align 1
  %v0_28984 = load i32, i32* %eax.global-to-local, align 8
  %v1_28984 = load i32, i32* @ebp, align 4
  %v2_28984 = add i32 %v1_28984, -12
  %v3_28984 = inttoptr i32 %v2_28984 to i32*
  store i32 %v0_28984, i32* %v3_28984, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_28989 = load i32, i32* @ebp, align 4
  %v1_28989 = add i32 %v0_28989, -36
  %v2_28989 = inttoptr i32 %v1_28989 to i32*
  %v3_28989 = load i32, i32* %v2_28989, align 4
  store i32 %v3_28989, i32* %eax.global-to-local, align 8
  %v2_2898c = add i32 %v0_28989, -16
  %v3_2898c = inttoptr i32 %v2_2898c to i32*
  store i32 %v3_28989, i32* %v3_2898c, align 4
  br label %dec_label_pc_289c4

dec_label_pc_28991:                               ; preds = %dec_label_pc_289c4
  %v1_28991 = add i32 %v0_28991, -28
  store i32 %v1_28991, i32* %eax.global-to-local, align 8
  %v1_28997 = call i32 @unknown_44e39(i32 %v1_28991)
  store i32 %v1_28997, i32* %eax.global-to-local, align 8
  store i32 %v1_28997, i32* %ebx.global-to-local, align 4
  %v0_2899e = load i32, i32* @ebp, align 4
  %v1_2899e = add i32 %v0_2899e, -16
  %v2_2899e = inttoptr i32 %v1_2899e to i32*
  %v3_2899e = load i32, i32* %v2_2899e, align 4
  store i32 %v3_2899e, i32* %eax.global-to-local, align 8
  %v1_289a4 = call i32 @unknown_55346(i32 %v3_2899e)
  store i32 %v1_289a4, i32* %eax.global-to-local, align 8
  %v0_289a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_289b0 = call i32 @unknown_55408(i32 %v1_289a4, i32 %v0_289a9)
  %v0_289b5 = load i32, i32* @ebp, align 4
  %v1_289b5 = add i32 %v0_289b5, -28
  store i32 %v1_289b5, i32* %eax.global-to-local, align 8
  %v1_289bb = call i32 @unknown_44dff(i32 %v1_289b5)
  store i32 %v1_289bb, i32* %eax.global-to-local, align 8
  %v0_289c0 = load i32, i32* @ebp, align 4
  %v1_289c0 = add i32 %v0_289c0, -16
  %v2_289c0 = inttoptr i32 %v1_289c0 to i32*
  %v3_289c0 = load i32, i32* %v2_289c0, align 4
  %v4_289c0 = add i32 %v3_289c0, 20
  %v8_289c0 = icmp ugt i32 %v3_289c0, -21
  store i1 %v8_289c0, i1* %cf.global-to-local, align 1
  store i32 %v4_289c0, i32* %v2_289c0, align 4
  br label %dec_label_pc_289c4

dec_label_pc_289c4:                               ; preds = %dec_label_pc_28991, %dec_label_pc_2896a
  %v0_289c4 = load i32, i32* @ebp, align 4
  %v1_289c4 = add i32 %v0_289c4, -32
  %v1_289cb = add i32 %v0_289c4, -28
  store i32 %v1_289cb, i32* %eax.global-to-local, align 8
  %v2_289d1 = call i32 @unknown_51160(i32 %v1_289cb, i32 %v1_289c4)
  store i32 %v2_289d1, i32* %eax.global-to-local, align 8
  %v4_289d6 = trunc i32 %v2_289d1 to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_289d6 = icmp eq i8 %v4_289d6, 0
  %v1_289d8 = icmp eq i1 %v5_289d6, false
  %v0_28991 = load i32, i32* @ebp, align 4
  br i1 %v1_289d8, label %dec_label_pc_28991, label %dec_label_pc_289da

dec_label_pc_289da:                               ; preds = %dec_label_pc_289c4
  %v1_289da = add i32 %v0_28991, -16
  %v2_289da = inttoptr i32 %v1_289da to i32*
  %v3_289da = load i32, i32* %v2_289da, align 4
  store i32 %v3_289da, i32* @eax, align 8
  %v1_289dd = add i32 %v0_28991, -12
  %v2_289dd = inttoptr i32 %v1_289dd to i32*
  %v3_289dd = load i32, i32* %v2_289dd, align 4
  %v1_289e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_289e0 = icmp eq i32 %v1_289e0, %v3_289dd
  br i1 %v3_289e0, label %bb, label %dec_label_pc_289e9

bb:                                               ; preds = %dec_label_pc_289da
  %v1_289e7 = call i32 @function_28a20()
  store i32 %v1_289e7, i32* @eax, align 8
  br label %dec_label_pc_289e9

dec_label_pc_289e9:                               ; preds = %bb, %dec_label_pc_289da
  %v0_289e9 = call i32 @function_28a1b()
  store i32 %v0_289e9, i32* %eax.global-to-local, align 8
  ret i32 %v0_289e9

; uselistorder directives
  uselistorder i32 %v0_28991, { 1, 0, 2 }
  uselistorder i8 %v4_28980, { 0, 2, 1 }
  uselistorder i8 %v1_28980, { 1, 0 }
  uselistorder i8 %v3_2897a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
}

define i32 @function_289ec() local_unnamed_addr {
dec_label_pc_289ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_289ec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_289ec
}

define i32 @function_28a1b() local_unnamed_addr {
dec_label_pc_28a1b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28a20() local_unnamed_addr {
dec_label_pc_28a20:
  %v0_28a25 = load i32, i32* @eax, align 8
  ret i32 %v0_28a25
}

define i32 @_ZSt20uninitialized_fill_nIP6CTxOutjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28a26:
  ret i32 %arg3
}

define i32 @function_28a42(i32 %arg1) local_unnamed_addr {
dec_label_pc_28a42:
  %v2_28a42 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_28a42 = load i32, i32* @eax, align 8
  %v4_28a42 = trunc i32 %v3_28a42 to i8
  %v5_28a42 = add i8 %v4_28a42, %v2_28a42
  %v21_28a42 = inttoptr i32 %v3_28a42 to i8*
  store i8 %v5_28a42, i8* %v21_28a42, align 1
  %v0_28a44 = load i32, i32* @eax, align 8
  %v1_28a44 = load i32, i32* @ebp, align 4
  %v2_28a44 = add i32 %v1_28a44, -12
  %v3_28a44 = inttoptr i32 %v2_28a44 to i32*
  store i32 %v0_28a44, i32* %v3_28a44, align 4
  %v0_28a49 = load i32, i32* @ebp, align 4
  %v1_28a49 = add i32 %v0_28a49, -36
  %v2_28a49 = inttoptr i32 %v1_28a49 to i32*
  %v3_28a49 = load i32, i32* %v2_28a49, align 4
  %v1_28a50 = add i32 %v0_28a49, -32
  %v2_28a50 = inttoptr i32 %v1_28a50 to i32*
  %v3_28a50 = load i32, i32* %v2_28a50, align 4
  %v1_28a57 = add i32 %v0_28a49, -28
  %v2_28a57 = inttoptr i32 %v1_28a57 to i32*
  %v3_28a57 = load i32, i32* %v2_28a57, align 4
  %v3_28a5d = call i32 @unknown_55544(i32 %v3_28a57, i32 %v3_28a50, i32 %v3_28a49)
  %v0_28a62 = load i32, i32* @ebp, align 4
  %v1_28a62 = add i32 %v0_28a62, -12
  %v2_28a62 = inttoptr i32 %v1_28a62 to i32*
  %v3_28a62 = load i32, i32* %v2_28a62, align 4
  %v1_28a65 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28a65 = xor i32 %v1_28a65, %v3_28a62
  %v3_28a65 = icmp eq i32 %v2_28a65, 0
  store i32 %v2_28a65, i32* @eax, align 8
  br i1 %v3_28a65, label %bb, label %dec_label_pc_28a6e

bb:                                               ; preds = %dec_label_pc_28a42
  %v1_28a6c = call i32 @function_28a73()
  br label %dec_label_pc_28a6e

dec_label_pc_28a6e:                               ; preds = %bb, %dec_label_pc_28a42
  %v2_28a6c = phi i32 [ %v1_28a6c, %bb ], [ %v2_28a65, %dec_label_pc_28a42 ]
  ret i32 %v2_28a6c
}

define i32 @function_28a73() local_unnamed_addr {
dec_label_pc_28a73:
  %v0_28a74 = load i32, i32* @eax, align 8
  ret i32 %v0_28a74
}

define i32 @_ZNSaI12CTransactionEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28a76:
  %v1_28a93 = call i32 @unknown_55636(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28aa4

bb:                                               ; preds = %dec_label_pc_28a76
  %v1_28aa2 = call i32 @function_28aa9()
  br label %dec_label_pc_28aa4

dec_label_pc_28aa4:                               ; preds = %bb, %dec_label_pc_28a76
  %v2_28aa2 = phi i32 [ %v1_28aa2, %bb ], [ 0, %dec_label_pc_28a76 ]
  ret i32 %v2_28aa2
}

define i32 @function_28aa9() local_unnamed_addr {
dec_label_pc_28aa9:
  %v0_28aaa = load i32, i32* @eax, align 8
  ret i32 %v0_28aaa
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28aac:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28acf

bb:                                               ; preds = %dec_label_pc_28aac
  %v2_28acd = call i32 @function_28ad4(i32 %arg1)
  br label %dec_label_pc_28acf

dec_label_pc_28acf:                               ; preds = %bb, %dec_label_pc_28aac
  %v3_28acd = phi i32 [ %v2_28acd, %bb ], [ 0, %dec_label_pc_28aac ]
  ret i32 %v3_28acd
}

define i32 @function_28ad4(i32 %arg1) local_unnamed_addr {
dec_label_pc_28ad4:
  %v0_28ad5 = load i32, i32* @eax, align 8
  ret i32 %v0_28ad5
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28ad6:
  ret i32 %arg2
}

define i32 @function_28b14() local_unnamed_addr {
dec_label_pc_28b14:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_28b14 = load i32, i32* %ecx.global-to-local, align 8
  %v1_28b14 = add i32 %v0_28b14, -1
  store i32 %v1_28b14, i32* %ecx.global-to-local, align 8
  %v0_28b16 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28b16
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP12CTransactionEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28b17:
  %v15_28b50105 = icmp eq i32 %arg1, %arg2
  %v1_28b53106 = icmp eq i1 %v15_28b50105, false
  %v5_28b56110 = icmp eq i1 %v1_28b53106, false
  %v1_28b58111 = icmp eq i1 %v5_28b56110, false
  br i1 %v1_28b58111, label %dec_label_pc_28b36, label %dec_label_pc_28b5a

dec_label_pc_28b36:                               ; preds = %dec_label_pc_28b17, %dec_label_pc_28b36
  %stack_var_-32.0112 = phi i32 [ %v4_28b49, %dec_label_pc_28b36 ], [ %arg1, %dec_label_pc_28b17 ]
  %v1_28b3c = call i32 @unknown_55701(i32 %stack_var_-32.0112)
  %v1_28b44 = call i32 @unknown_5572e(i32 %v1_28b3c)
  %v4_28b49 = add i32 %stack_var_-32.0112, 32
  %v15_28b50 = icmp eq i32 %v4_28b49, %arg2
  %v1_28b53 = icmp eq i1 %v15_28b50, false
  %v5_28b56 = icmp eq i1 %v1_28b53, false
  %v1_28b58 = icmp eq i1 %v5_28b56, false
  br i1 %v1_28b58, label %dec_label_pc_28b36, label %dec_label_pc_28b5a

dec_label_pc_28b5a:                               ; preds = %dec_label_pc_28b36, %dec_label_pc_28b17
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28b66

bb:                                               ; preds = %dec_label_pc_28b5a
  %v1_28b64 = call i32 @function_28b6b()
  br label %dec_label_pc_28b66

dec_label_pc_28b66:                               ; preds = %bb, %dec_label_pc_28b5a
  %v2_28b64 = phi i32 [ %v1_28b64, %bb ], [ 0, %dec_label_pc_28b5a ]
  ret i32 %v2_28b64

; uselistorder directives
  uselistorder i32 %v4_28b49, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_28b36, { 1, 0 }
}

define i32 @function_28b6b() local_unnamed_addr {
dec_label_pc_28b6b:
  %v0_28b6c = load i32, i32* @eax, align 8
  ret i32 %v0_28b6c
}

define i32 @_ZNSaI7uint256EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28b6e:
  %v1_28b8b = call i32 @unknown_557ba(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28b9c

bb:                                               ; preds = %dec_label_pc_28b6e
  %v1_28b9a = call i32 @function_28ba1()
  br label %dec_label_pc_28b9c

dec_label_pc_28b9c:                               ; preds = %bb, %dec_label_pc_28b6e
  %v2_28b9a = phi i32 [ %v1_28b9a, %bb ], [ 0, %dec_label_pc_28b6e ]
  ret i32 %v2_28b9a
}

define i32 @function_28ba1() local_unnamed_addr {
dec_label_pc_28ba1:
  %v0_28ba2 = load i32, i32* @eax, align 8
  ret i32 %v0_28ba2
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28ba4:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28bc7

bb:                                               ; preds = %dec_label_pc_28ba4
  %v2_28bc5 = call i32 @function_28bcc(i32 %arg1)
  br label %dec_label_pc_28bc7

dec_label_pc_28bc7:                               ; preds = %bb, %dec_label_pc_28ba4
  %v3_28bc5 = phi i32 [ %v2_28bc5, %bb ], [ 0, %dec_label_pc_28ba4 ]
  ret i32 %v3_28bc5
}

define i32 @function_28bcc(i32 %arg1) local_unnamed_addr {
dec_label_pc_28bcc:
  %v0_28bcd = load i32, i32* @eax, align 8
  ret i32 %v0_28bcd
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIP7uint256EEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28bce:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28bf7

bb:                                               ; preds = %dec_label_pc_28bce
  %v3_28bf5 = call i32 @function_28bfc(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_28bf7

dec_label_pc_28bf7:                               ; preds = %bb, %dec_label_pc_28bce
  %v4_28bf5 = phi i32 [ %v3_28bf5, %bb ], [ 0, %dec_label_pc_28bce ]
  ret i32 %v4_28bf5
}

define i32 @function_28bfc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28bfc:
  %v0_28bfd = load i32, i32* @eax, align 8
  ret i32 %v0_28bfd
}

define i32 @_ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_28bfe:
  ret i32 %arg1
}

define i32 @function_28c5f() local_unnamed_addr {
dec_label_pc_28c5f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_28c5f = load i32, i32* %ecx.global-to-local, align 8
  %v1_28c5f = add i32 %v0_28c5f, -1
  store i32 %v1_28c5f, i32* %ecx.global-to-local, align 8
  %v0_28c61 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28c61
}

define i32 @_ZSt10__fill_n_aIjhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT0_E7__valueEPS3_E6__typeES5_T_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28c62:
  %v2_28c8b = add i32 %arg2, %arg1
  %v3_28c9e = call i32 @unknown_51860(i32 %arg1, i32 %v2_28c8b, i32 %arg3)
  store i32 %v2_28c8b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28cb7

bb:                                               ; preds = %dec_label_pc_28c62
  %v1_28cb5 = call i32 @function_28cbc()
  br label %dec_label_pc_28cb7

dec_label_pc_28cb7:                               ; preds = %bb, %dec_label_pc_28c62
  %v2_28cb5 = phi i32 [ %v1_28cb5, %bb ], [ %v2_28c8b, %dec_label_pc_28c62 ]
  ret i32 %v2_28cb5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_28cbc() local_unnamed_addr {
dec_label_pc_28cbc:
  %v0_28cbd = load i32, i32* @eax, align 8
  ret i32 %v0_28cbd
}

define i32 @_ZSt4fillIPhhEvT_S1_RKT0_() local_unnamed_addr {
dec_label_pc_28cbe:
  %eax.global-to-local = alloca i32, align 4
  %v5_28cc1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_28cc1
}

define i32 @function_28cee() local_unnamed_addr {
dec_label_pc_28cee:
  %eax.global-to-local = alloca i32, align 4
  %v0_28cee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28cee
}

define i32 @function_28cf4(i16 %arg1) local_unnamed_addr {
dec_label_pc_28cf4:
  %eax.global-to-local = alloca i32, align 4
  %v0_28cf4 = load i32, i32* %eax.global-to-local, align 8
  %v11_28cf4 = and i32 %v0_28cf4, -24
  store i32 %v11_28cf4, i32* %eax.global-to-local, align 8
  ret i32 %v11_28cf4

; uselistorder directives
  uselistorder i32 %v11_28cf4, { 1, 0 }
}

define i32 @function_28d1d() local_unnamed_addr {
dec_label_pc_28d1d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_28d1d = load i32, i32* %ebx.global-to-local, align 4
  %v1_28d1d = add i32 %v0_28d1d, 1566258372
  %v2_28d1d = inttoptr i32 %v1_28d1d to i32*
  %v3_28d1d = load i32, i32* %v2_28d1d, align 4
  %v4_28d1d = add i32 %v3_28d1d, 1
  store i32 %v4_28d1d, i32* %v2_28d1d, align 4
  %v0_28d23 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28d23
}

define i32 @_Z14Serialize_implI11CDataStreamhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_28d24:
  ret i32 %arg1
}

define i32 @function_28d32(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28d32:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_28d32 = load i32, i32* @ebp, align 4
  %v0_28d33 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_28d33 = or i32 %v0_28d33, 137
  store i32 %v11_28d33, i32* %eax.global-to-local, align 8
  %v0_28d36 = load i32, i32* @ecx, align 8
  %v1_28d36 = add i32 %v0_28d36, 255
  %v1_28d38 = add i32 %v0_28d32, 3
  store i32 %v1_28d38, i32* %ebp.global-to-local, align 4
  %v1_28d39 = add i32 %v0_28d36, 1166793796
  %v2_28d39 = inttoptr i32 %v1_28d39 to i8*
  %v3_28d39 = load i8, i8* %v2_28d39, align 1
  %v5_28d39 = trunc i32 %v1_28d36 to i8
  %v8_28d39 = add i8 %v3_28d39, %v5_28d39
  %v28_28d39 = icmp ult i8 %v8_28d39, %v3_28d39
  store i1 %v28_28d39, i1* %cf.global-to-local, align 1
  store i8 %v8_28d39, i8* %v2_28d39, align 1
  %v0_28d3f = load i32, i32* %eax.global-to-local, align 8
  %v1_28d3f = trunc i32 %v0_28d3f to i8
  %v2_28d3f = load i1, i1* %cf.global-to-local, align 1
  %v3_28d3f = zext i1 %v2_28d3f to i8
  %v4_28d3f = add i8 %v1_28d3f, -119
  %v5_28d3f = add i8 %v4_28d3f, %v3_28d3f
  %v22_28d3f = icmp ule i8 %v5_28d3f, %v1_28d3f
  %v23_28d3f = icmp ugt i8 %v1_28d3f, 118
  %v24_28d3f = select i1 %v2_28d3f, i1 %v22_28d3f, i1 %v23_28d3f
  store i1 %v24_28d3f, i1* %cf.global-to-local, align 1
  %v25_28d3f = zext i8 %v5_28d3f to i32
  %v27_28d3f = and i32 %v0_28d3f, -256
  %v28_28d3f = or i32 %v25_28d3f, %v27_28d3f
  store i32 %v28_28d3f, i32* %eax.global-to-local, align 8
  %v0_28d41 = load i32, i32* %ebp.global-to-local, align 4
  %v1_28d41 = add i32 %v0_28d41, 1
  store i32 %v1_28d41, i32* %ebp.global-to-local, align 4
  %v2_28d48 = udiv i8 %v5_28d3f, 101
  %v3_28d48 = urem i8 %v5_28d3f, 101
  %v4_28d48 = zext i8 %v3_28d48 to i32
  %v6_28d48 = and i32 %v0_28d3f, -65536
  %v8_28d48 = zext i8 %v2_28d48 to i32
  %v10_28d48 = mul nuw nsw i32 %v8_28d48, 256
  %v11_28d48 = or i32 %v4_28d48, %v6_28d48
  %v12_28d48 = or i32 %v11_28d48, %v10_28d48
  store i32 %v12_28d48, i32* %eax.global-to-local, align 8
  ret i32 %v12_28d48

; uselistorder directives
  uselistorder i8 %v5_28d3f, { 0, 1, 3, 2 }
  uselistorder i8 %v3_28d39, { 1, 0 }
}

define i32 @function_28d4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_28d4e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_28d4e = load i32, i32* @ecx, align 8
  %v1_28d4e = add i32 %v0_28d4e, -1070468027
  %v2_28d4e = inttoptr i32 %v1_28d4e to i8*
  %v3_28d4e = load i8, i8* %v2_28d4e, align 1
  %v5_28d4e = trunc i32 %v0_28d4e to i8
  %v6_28d4e = add i8 %v3_28d4e, %v5_28d4e
  store i8 %v6_28d4e, i8* %v2_28d4e, align 1
  %v0_28d54 = load i32, i32* @ebp, align 4
  %v1_28d54 = add i32 %v0_28d54, -32
  %v2_28d54 = inttoptr i32 %v1_28d54 to i32*
  %v3_28d54 = load i32, i32* %v2_28d54, align 4
  store i32 %v3_28d54, i32* @eax, align 8
  %v1_28d5a = call i32 @function_3cade(i32 %v3_28d54)
  %v0_28d6c = load i32, i32* @ebp, align 4
  %v1_28d6c = add i32 %v0_28d6c, -28
  %v2_28d6c = inttoptr i32 %v1_28d6c to i32*
  %v3_28d6c = load i32, i32* %v2_28d6c, align 4
  %v3_28d72 = call i32 @unknown_4cdfa(i32 %v3_28d6c, i32 %v1_28d5a, i32 0)
  %v0_28d77 = load i32, i32* @ebp, align 4
  %v1_28d77 = add i32 %v0_28d77, -32
  %v2_28d77 = inttoptr i32 %v1_28d77 to i32*
  %v3_28d77 = load i32, i32* %v2_28d77, align 4
  store i32 %v3_28d77, i32* @eax, align 8
  %v1_28d7d = call i32 @function_3f16c(i32 %v3_28d77)
  %v1_28d82 = xor i32 %v1_28d7d, 1
  %v4_28d82 = trunc i32 %v1_28d82 to i8
  %v5_28d85 = icmp eq i8 %v4_28d82, 0
  br i1 %v5_28d85, label %dec_label_pc_28dbc, label %dec_label_pc_28d89

dec_label_pc_28d89:                               ; preds = %dec_label_pc_28d4e
  %v0_28d89 = load i32, i32* @ebp, align 4
  %v1_28d89 = add i32 %v0_28d89, -32
  %v2_28d89 = inttoptr i32 %v1_28d89 to i32*
  %v3_28d89 = load i32, i32* %v2_28d89, align 4
  store i32 %v3_28d89, i32* @eax, align 8
  %v1_28d8f = call i32 @function_3cade(i32 %v3_28d89)
  store i32 %v1_28d8f, i32* %ebx.global-to-local, align 4
  %v0_28d9e = load i32, i32* @ebp, align 4
  %v1_28d9e = add i32 %v0_28d9e, -32
  %v2_28d9e = inttoptr i32 %v1_28d9e to i32*
  %v3_28d9e = load i32, i32* %v2_28d9e, align 4
  store i32 %v3_28d9e, i32* @eax, align 8
  %v2_28da4 = call i32 @function_3cb1c(i32 %v3_28d9e, i32 0)
  %v0_28da9 = load i32, i32* %ebx.global-to-local, align 4
  %v0_28db1 = load i32, i32* @ebp, align 4
  %v1_28db1 = add i32 %v0_28db1, -28
  %v2_28db1 = inttoptr i32 %v1_28db1 to i32*
  %v3_28db1 = load i32, i32* %v2_28db1, align 4
  store i32 %v3_28db1, i32* @eax, align 8
  %v3_28db7 = call i32 @function_3aac6(i32 %v3_28db1, i32 %v2_28da4, i32 %v0_28da9)
  br label %dec_label_pc_28dbc

dec_label_pc_28dbc:                               ; preds = %dec_label_pc_28d89, %dec_label_pc_28d4e
  %v0_28dbc = load i32, i32* @ebp, align 4
  %v1_28dbc = add i32 %v0_28dbc, -12
  %v2_28dbc = inttoptr i32 %v1_28dbc to i32*
  %v3_28dbc = load i32, i32* %v2_28dbc, align 4
  %v1_28dbf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28dbf = xor i32 %v1_28dbf, %v3_28dbc
  %v3_28dbf = icmp eq i32 %v2_28dbf, 0
  store i32 %v2_28dbf, i32* @eax, align 8
  br i1 %v3_28dbf, label %bb, label %dec_label_pc_28dc8

bb:                                               ; preds = %dec_label_pc_28dbc
  %v1_28dc6 = call i32 @function_28dcd()
  br label %dec_label_pc_28dc8

dec_label_pc_28dc8:                               ; preds = %bb, %dec_label_pc_28dbc
  %v2_28dc6 = phi i32 [ %v1_28dc6, %bb ], [ %v2_28dbf, %dec_label_pc_28dbc ]
  ret i32 %v2_28dc6

; uselistorder directives
  uselistorder i32 (i32)* @function_3cade, { 1, 0 }
}

define i32 @function_28dcd() local_unnamed_addr {
dec_label_pc_28dcd:
  %v0_28dd2 = load i32, i32* @eax, align 8
  ret i32 %v0_28dd2
}

define i32 @_Z9SerializeI11CDataStreamEvRT_jii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28dd3:
  ret i32 0
}

define i32 @function_28e00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28e00:
  %v0_28e00 = load i32, i32* @eax, align 8
  %v1_28e00 = trunc i32 %v0_28e00 to i8
  %v1_28e02 = inttoptr i32 %v0_28e00 to i8*
  %v2_28e02 = load i8, i8* %v1_28e02, align 1
  %v5_28e02 = add i8 %v2_28e02, %v1_28e00
  %v17_28e02 = call i8 @llvm.ctpop.i8(i8 %v5_28e02)
  %v18_28e02 = urem i8 %v17_28e02, 2
  %v19_28e02 = icmp eq i8 %v18_28e02, 0
  store i1 %v19_28e02, i1* @pf, align 1
  store i8 %v5_28e02, i8* %v1_28e02, align 1
  %v0_28e04 = load i32, i32* @ebp, align 4
  %v1_28e04 = add i32 %v0_28e04, -32
  %v1_28e0b = add i32 %v0_28e04, -28
  %v2_28e0b = inttoptr i32 %v1_28e0b to i32*
  %v3_28e0b = load i32, i32* %v2_28e0b, align 4
  store i32 %v3_28e0b, i32* @eax, align 8
  %v2_28e11 = call i32 @function_3ab75(i32 %v3_28e0b, i32 %v1_28e04)
  %v0_28e16 = load i32, i32* @ebp, align 4
  %v1_28e16 = add i32 %v0_28e16, -12
  %v2_28e16 = inttoptr i32 %v1_28e16 to i32*
  %v3_28e16 = load i32, i32* %v2_28e16, align 4
  %v1_28e19 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28e19 = xor i32 %v1_28e19, %v3_28e16
  %v3_28e19 = icmp eq i32 %v2_28e19, 0
  store i32 %v2_28e19, i32* @eax, align 8
  br i1 %v3_28e19, label %bb, label %dec_label_pc_28e22

bb:                                               ; preds = %dec_label_pc_28e00
  %v1_28e20 = call i32 @function_28e27()
  br label %dec_label_pc_28e22

dec_label_pc_28e22:                               ; preds = %bb, %dec_label_pc_28e00
  %v2_28e20 = phi i32 [ %v1_28e20, %bb ], [ %v2_28e19, %dec_label_pc_28e00 ]
  ret i32 %v2_28e20
}

define i32 @function_28e27() local_unnamed_addr {
dec_label_pc_28e27:
  %v0_28e28 = load i32, i32* @eax, align 8
  ret i32 %v0_28e28
}

define i32 @_Z12SerReadWriteI11CDataStream9CFlatDataEjRT_RKT0_ii19CSerActionSerialize() local_unnamed_addr {
dec_label_pc_28e29:
  %eax.global-to-local = alloca i32, align 4
  %v17_28e2c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_28e2c
}

define i32 @function_28e66(i32 %arg1) local_unnamed_addr {
dec_label_pc_28e66:
  %v0_28e66 = load i32, i32* @ebx, align 4
  %v1_28e66 = add i32 %v0_28e66, 1149886533
  %v2_28e66 = inttoptr i32 %v1_28e66 to i8*
  %v3_28e66 = load i8, i8* %v2_28e66, align 1
  %v4_28e66 = load i32, i32* @ecx, align 8
  %v5_28e66 = trunc i32 %v4_28e66 to i8
  %v6_28e66 = or i8 %v5_28e66, %v3_28e66
  store i8 %v6_28e66, i8* %v2_28e66, align 1
  %v0_28e6e = load i32, i32* @ebp, align 4
  %v1_28e6e = add i32 %v0_28e6e, -28
  %v2_28e6e = inttoptr i32 %v1_28e6e to i32*
  %v3_28e6e = load i32, i32* %v2_28e6e, align 4
  %v1_28e74 = call i32 @unknown_55be0(i32 %v3_28e6e)
  store i32 0, i32* @eax, align 8
  %v0_28e7e = load i32, i32* @ebp, align 4
  %v1_28e7e = add i32 %v0_28e7e, -12
  %v2_28e7e = inttoptr i32 %v1_28e7e to i32*
  %v3_28e7e = load i32, i32* %v2_28e7e, align 4
  %v1_28e81 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28e81 = xor i32 %v1_28e81, %v3_28e7e
  %v3_28e81 = icmp eq i32 %v2_28e81, 0
  store i32 %v2_28e81, i32* @edx, align 4
  br i1 %v3_28e81, label %bb, label %dec_label_pc_28e8a

bb:                                               ; preds = %dec_label_pc_28e66
  %v1_28e88 = call i32 @function_28e8f()
  br label %dec_label_pc_28e8a

dec_label_pc_28e8a:                               ; preds = %bb, %dec_label_pc_28e66
  %v2_28e88 = phi i32 [ %v1_28e88, %bb ], [ 0, %dec_label_pc_28e66 ]
  ret i32 %v2_28e88
}

define i32 @function_28e8f() local_unnamed_addr {
dec_label_pc_28e8f:
  %v0_28e90 = load i32, i32* @eax, align 8
  ret i32 %v0_28e90
}

define i32 @_Z12SerReadWriteI11CDataStreamjEjRT_RKT0_ii19CSerActionSerialize() local_unnamed_addr {
dec_label_pc_28e91:
  %eax.global-to-local = alloca i32, align 4
  %v17_28e94 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_28e94
}

define i32 @function_28e98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28e98:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_28e98 = load i32, i32* @ebp, align 4
  %v1_28e98 = add i32 %v0_28e98, 1
  store i32 %v1_28e98, i32* %ebp.global-to-local, align 4
  %v0_28e99 = load i32, i32* @ecx, align 8
  %v1_28e99 = add i32 %v0_28e99, 1166795845
  %v2_28e99 = inttoptr i32 %v1_28e99 to i8*
  %v3_28e99 = load i8, i8* %v2_28e99, align 1
  %v5_28e99 = trunc i32 %v0_28e99 to i8
  %v6_28e99 = or i8 %v3_28e99, %v5_28e99
  store i8 %v6_28e99, i8* %v2_28e99, align 1
  %v0_28e9f = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_28e9f = or i32 %v0_28e9f, 137
  store i32 %v11_28e9f, i32* %eax.global-to-local, align 8
  %v0_28ea1 = load i32, i32* %ebp.global-to-local, align 4
  %v0_28ea2 = load i32, i32* @ecx, align 8
  %v1_28ea2 = add i32 %v0_28ea2, -1
  store i32 %v1_28ea2, i32* @ecx, align 8
  %v1_28ea4 = add i32 %v0_28ea1, 2
  store i32 %v1_28ea4, i32* %ebp.global-to-local, align 4
  %v1_28ea5 = add i32 %v0_28ea2, 1166793796
  %v2_28ea5 = inttoptr i32 %v1_28ea5 to i8*
  %v3_28ea5 = load i8, i8* %v2_28ea5, align 1
  %v5_28ea5 = trunc i32 %v1_28ea2 to i8
  %v8_28ea5 = add i8 %v3_28ea5, %v5_28ea5
  %v28_28ea5 = icmp ult i8 %v8_28ea5, %v3_28ea5
  store i1 %v28_28ea5, i1* %cf.global-to-local, align 1
  store i8 %v8_28ea5, i8* %v2_28ea5, align 1
  %v0_28eab = load i32, i32* %eax.global-to-local, align 8
  %v1_28eab = trunc i32 %v0_28eab to i8
  %v2_28eab = load i1, i1* %cf.global-to-local, align 1
  %v3_28eab = zext i1 %v2_28eab to i8
  %v4_28eab = add i8 %v1_28eab, -119
  %v5_28eab = add i8 %v4_28eab, %v3_28eab
  %v22_28eab = icmp ule i8 %v5_28eab, %v1_28eab
  %v23_28eab = icmp ugt i8 %v1_28eab, 118
  %v24_28eab = select i1 %v2_28eab, i1 %v22_28eab, i1 %v23_28eab
  store i1 %v24_28eab, i1* %cf.global-to-local, align 1
  %v25_28eab = zext i8 %v5_28eab to i32
  %v27_28eab = and i32 %v0_28eab, -256
  %v28_28eab = or i32 %v25_28eab, %v27_28eab
  store i32 %v28_28eab, i32* %eax.global-to-local, align 8
  %v0_28ead = load i32, i32* %ebp.global-to-local, align 4
  %v1_28ead = add i32 %v0_28ead, 1
  store i32 %v1_28ead, i32* @ebp, align 4
  %v1_28eb2 = add i32 %v28_28eab, -1587161275
  %v2_28eb2 = inttoptr i32 %v1_28eb2 to i8*
  %v3_28eb2 = load i8, i8* %v2_28eb2, align 1
  %v4_28eb2 = load i32, i32* @ecx, align 8
  %v5_28eb2 = trunc i32 %v4_28eb2 to i8
  %v7_28eb2 = zext i1 %v24_28eab to i8
  %v8_28eb2 = sub i8 %v3_28eb2, %v5_28eb2
  %v9_28eb2 = add i8 %v8_28eb2, %v7_28eb2
  %v19_28eb2 = sub i8 %v8_28eb2, %v7_28eb2
  %v20_28eb2 = icmp ult i8 %v3_28eb2, %v19_28eb2
  %v21_28eb2 = icmp ne i8 %v5_28eb2, -1
  %v22_28eb2 = or i1 %v21_28eb2, %v20_28eb2
  %v23_28eb2 = icmp ult i8 %v3_28eb2, %v5_28eb2
  %v24_28eb2 = select i1 %v24_28eab, i1 %v22_28eb2, i1 %v23_28eb2
  store i1 %v24_28eb2, i1* %cf.global-to-local, align 1
  store i8 %v9_28eb2, i8* %v2_28eb2, align 1
  %v0_28eb8 = load i32, i32* %eax.global-to-local, align 8
  %v1_28eb8 = trunc i32 %v0_28eb8 to i8
  %v2_28eb8 = load i1, i1* %cf.global-to-local, align 1
  %v3_28eb8 = zext i1 %v2_28eb8 to i8
  %v4_28eb8 = add i8 %v3_28eb8, %v1_28eb8
  %v19_28eb8 = icmp ule i8 %v4_28eb8, %v1_28eb8
  %v21_28eb8 = icmp eq i1 %v2_28eb8, %v19_28eb8
  store i1 %v21_28eb8, i1* %cf.global-to-local, align 1
  %v22_28eb8 = zext i8 %v4_28eb8 to i32
  %v24_28eb8 = and i32 %v0_28eb8, -256
  %v25_28eb8 = or i32 %v22_28eb8, %v24_28eb8
  store i32 %v25_28eb8, i32* %eax.global-to-local, align 8
  %v1_28eba = inttoptr i32 %v25_28eb8 to i8*
  %v2_28eba = load i8, i8* %v1_28eba, align 1
  %v5_28eba = add i8 %v2_28eba, %v4_28eb8
  store i8 %v5_28eba, i8* %v1_28eba, align 1
  %v0_28ebc = load i32, i32* %eax.global-to-local, align 8
  %v1_28ebc = load i32, i32* @ebp, align 4
  %v2_28ebc = add i32 %v1_28ebc, -12
  %v3_28ebc = inttoptr i32 %v2_28ebc to i32*
  store i32 %v0_28ebc, i32* %v3_28ebc, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_28ec1 = load i32, i32* @ebp, align 4
  %v1_28ec1 = add i32 %v0_28ec1, -32
  %v2_28ec1 = inttoptr i32 %v1_28ec1 to i32*
  %v3_28ec1 = load i32, i32* %v2_28ec1, align 4
  store i32 %v3_28ec1, i32* %eax.global-to-local, align 8
  %v1_28ec4 = inttoptr i32 %v3_28ec1 to i32*
  %v2_28ec4 = load i32, i32* %v1_28ec4, align 4
  store i32 %v2_28ec4, i32* %eax.global-to-local, align 8
  %v1_28ec6 = add i32 %v0_28ec1, -40
  %v2_28ec6 = inttoptr i32 %v1_28ec6 to i32*
  %v3_28ec6 = load i32, i32* %v2_28ec6, align 4
  %v1_28ecd = add i32 %v0_28ec1, -36
  %v2_28ecd = inttoptr i32 %v1_28ecd to i32*
  %v3_28ecd = load i32, i32* %v2_28ecd, align 4
  %v1_28ed8 = add i32 %v0_28ec1, -28
  %v2_28ed8 = inttoptr i32 %v1_28ed8 to i32*
  %v3_28ed8 = load i32, i32* %v2_28ed8, align 4
  store i32 %v3_28ed8, i32* %eax.global-to-local, align 8
  %v4_28ede = call i32 @unknown_51c64(i32 %v3_28ed8, i32 %v2_28ec4, i32 %v3_28ecd, i32 %v3_28ec6)
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_28ec1, { 0, 2, 1, 3 }
  uselistorder i8 %v4_28eb8, { 0, 2, 1 }
  uselistorder i8 %v1_28eb8, { 1, 0 }
  uselistorder i8 %v8_28eb2, { 1, 0 }
  uselistorder i8 %v7_28eb2, { 1, 0 }
  uselistorder i8 %v5_28eb2, { 1, 0, 2 }
  uselistorder i1 %v24_28eab, { 1, 0, 2 }
  uselistorder i8 %v5_28eab, { 1, 0 }
  uselistorder i8 %v3_28ea5, { 1, 0 }
}

define i32 @function_28eea(i32 %arg1) local_unnamed_addr {
dec_label_pc_28eea:
  %v0_28eeb = load i32, i32* @edx, align 4
  %v1_28eeb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28eeb = xor i32 %v1_28eeb, %v0_28eeb
  %v3_28eeb = icmp eq i32 %v2_28eeb, 0
  store i32 %v2_28eeb, i32* @edx, align 4
  br i1 %v3_28eeb, label %bb, label %dec_label_pc_28eea.dec_label_pc_28ef4_crit_edge

dec_label_pc_28eea.dec_label_pc_28ef4_crit_edge:  ; preds = %dec_label_pc_28eea
  %v2_28ef2.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_28ef4

bb:                                               ; preds = %dec_label_pc_28eea
  %v1_28ef2 = call i32 @function_28ef9()
  br label %dec_label_pc_28ef4

dec_label_pc_28ef4:                               ; preds = %dec_label_pc_28eea.dec_label_pc_28ef4_crit_edge, %bb
  %v2_28ef2 = phi i32 [ %v2_28ef2.pre, %dec_label_pc_28eea.dec_label_pc_28ef4_crit_edge ], [ %v1_28ef2, %bb ]
  ret i32 %v2_28ef2

; uselistorder directives
  uselistorder label %dec_label_pc_28ef4, { 1, 0 }
}

define i32 @function_28ef9() local_unnamed_addr {
dec_label_pc_28ef9:
  %v0_28efa = load i32, i32* @eax, align 8
  ret i32 %v0_28efa
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_28efb:
  %stack_var_-17 = alloca i32, align 4
  %v1_28f18 = call i32 @unknown_55d0e(i32 %arg1)
  %v2_28f21 = ptrtoint i32* %stack_var_-17 to i32
  %v2_28f27 = call i32 @unknown_51ecb(i32 %v2_28f21, i32 %v1_28f18)
  store i32 %v2_28f27, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28f38

bb:                                               ; preds = %dec_label_pc_28efb
  %v1_28f36 = call i32 @function_28f3d()
  br label %dec_label_pc_28f38

dec_label_pc_28f38:                               ; preds = %bb, %dec_label_pc_28efb
  %v3_28f36 = phi i32 [ %v1_28f36, %bb ], [ %v2_28f27, %dec_label_pc_28efb ]
  ret i32 %v3_28f36
}

define i32 @function_28f3d() local_unnamed_addr {
dec_label_pc_28f3d:
  %v0_28f3e = load i32, i32* @eax, align 8
  ret i32 %v0_28f3e
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f3f:
  %v1_28f59 = add i32 %arg1, 8
  %v2_28f59 = inttoptr i32 %v1_28f59 to i32*
  %v3_28f59 = load i32, i32* %v2_28f59, align 4
  store i32 %v3_28f59, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28f68

bb:                                               ; preds = %dec_label_pc_28f3f
  %v2_28f66 = call i32 @function_28f6d(i32 %arg1)
  br label %dec_label_pc_28f68

dec_label_pc_28f68:                               ; preds = %bb, %dec_label_pc_28f3f
  %v3_28f66 = phi i32 [ %v2_28f66, %bb ], [ %v3_28f59, %dec_label_pc_28f3f ]
  ret i32 %v3_28f66
}

define i32 @function_28f6d(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f6d:
  %v0_28f6e = load i32, i32* @eax, align 8
  ret i32 %v0_28f6e
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base() local_unnamed_addr {
dec_label_pc_28f6f:
  %eax.global-to-local = alloca i32, align 4
  %v5_28f6f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_28f6f
}

define i32 @function_28f70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28f70:
  %stack_var_0 = alloca i32, align 4
  %v1_28f70 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_28f70, i32* @ebp, align 4
  %v1_28f89 = add i32 %arg1, 12
  %v2_28f89 = inttoptr i32 %v1_28f89 to i32*
  %v3_28f89 = load i32, i32* %v2_28f89, align 4
  store i32 %v3_28f89, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28f98

bb:                                               ; preds = %dec_label_pc_28f70
  %v2_28f96 = call i32 @function_28f9d(i32 %arg1)
  br label %dec_label_pc_28f98

dec_label_pc_28f98:                               ; preds = %bb, %dec_label_pc_28f70
  %v3_28f96 = phi i32 [ %v2_28f96, %bb ], [ %v3_28f89, %dec_label_pc_28f70 ]
  ret i32 %v3_28f96
}

define i32 @function_28f9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f9a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28f9d(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f9d:
  %v0_28f9e = load i32, i32* @eax, align 8
  ret i32 %v0_28f9e
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f9f:
  %v1_28fb9 = add i32 %arg1, 16
  store i32 %v1_28fb9, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_28fc8

bb:                                               ; preds = %dec_label_pc_28f9f
  %v2_28fc6 = call i32 @function_28fcd(i32 %arg1)
  br label %dec_label_pc_28fc8

dec_label_pc_28fc8:                               ; preds = %bb, %dec_label_pc_28f9f
  %v3_28fc6 = phi i32 [ %v2_28fc6, %bb ], [ %v1_28fb9, %dec_label_pc_28f9f ]
  ret i32 %v3_28fc6
}

define i32 @function_28fcd(i32 %arg1) local_unnamed_addr {
dec_label_pc_28fcd:
  %v0_28fce = load i32, i32* @eax, align 8
  ret i32 %v0_28fce
}

define i32 @_ZNKSt10_Select1stISt4pairIKSsSsEEclERKS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28fd0:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  br i1 true, label %bb, label %dec_label_pc_28ffc

bb:                                               ; preds = %dec_label_pc_28fd0
  %v3_28ffa = call i32 @function_29001(i32 %tmp3, i32 %arg1)
  br label %dec_label_pc_28ffc

dec_label_pc_28ffc:                               ; preds = %bb, %dec_label_pc_28fd0
  %v4_28ffa = phi i32 [ %v3_28ffa, %bb ], [ %tmp3, %dec_label_pc_28fd0 ]
  ret i32 %v4_28ffa
}

define i32 @function_29001(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29001:
  %v0_29002 = load i32, i32* @eax, align 8
  ret i32 %v0_29002
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_29004:
  %v10_29083117126 = icmp eq i32 %arg3, 0
  %v1_29087118127 = icmp eq i1 %v10_29083117126, false
  %v5_2908a122129 = icmp eq i1 %v1_29087118127, false
  %v1_2908c123130 = icmp eq i1 %v5_2908a122129, false
  br i1 %v1_2908c123130, label %dec_label_pc_29035.lr.ph, label %dec_label_pc_2908e

dec_label_pc_29035.lr.ph:                         ; preds = %dec_label_pc_29004, %dec_label_pc_2905f
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_2905f ], [ %arg4, %dec_label_pc_29004 ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_2906b, %dec_label_pc_2905f ], [ %arg3, %dec_label_pc_29004 ]
  br label %dec_label_pc_29035

dec_label_pc_29035:                               ; preds = %dec_label_pc_29035.lr.ph, %dec_label_pc_29075
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_29035.lr.ph ], [ %v1_2907b, %dec_label_pc_29075 ]
  %v1_2903b = call i32 @unknown_51eff(i32 %stack_var_-40.0124)
  %v3_29053 = call i32 @unknown_45b36(i32 %arg2, i32 %v1_2903b, i32 %arg5)
  %v1_29058 = xor i32 %v3_29053, 1
  %v4_29058 = trunc i32 %v1_29058 to i8
  %v5_2905b = icmp eq i8 %v4_29058, 0
  br i1 %v5_2905b, label %dec_label_pc_29075, label %dec_label_pc_2905f

dec_label_pc_2905f:                               ; preds = %dec_label_pc_29035
  %v1_2906b = call i32 @unknown_4cfa9(i32 %stack_var_-40.0124)
  %v10_29083117 = icmp eq i32 %v1_2906b, 0
  %v1_29087118 = icmp eq i1 %v10_29083117, false
  %v5_2908a122 = icmp eq i1 %v1_29087118, false
  %v1_2908c123 = icmp eq i1 %v5_2908a122, false
  br i1 %v1_2908c123, label %dec_label_pc_29035.lr.ph, label %dec_label_pc_2908e

dec_label_pc_29075:                               ; preds = %dec_label_pc_29035
  %v1_2907b = call i32 @unknown_4cf79(i32 %stack_var_-40.0124)
  %v10_29083 = icmp eq i32 %v1_2907b, 0
  %v1_29087 = icmp eq i1 %v10_29083, false
  %v5_2908a = icmp eq i1 %v1_29087, false
  %v1_2908c = icmp eq i1 %v5_2908a, false
  br i1 %v1_2908c, label %dec_label_pc_29035, label %dec_label_pc_2908e

dec_label_pc_2908e:                               ; preds = %dec_label_pc_29075, %dec_label_pc_29004, %dec_label_pc_2905f
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_29004 ], [ %stack_var_-40.0124, %dec_label_pc_2905f ], [ %stack_var_-44.0.ph132, %dec_label_pc_29075 ]
  %v2_2909b = call i32 @unknown_520bc(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_290af

bb:                                               ; preds = %dec_label_pc_2908e
  %v1_290ad = call i32 @function_290b4()
  br label %dec_label_pc_290af

dec_label_pc_290af:                               ; preds = %bb, %dec_label_pc_2908e
  %v2_290ad = phi i32 [ %v1_290ad, %bb ], [ %arg1, %dec_label_pc_2908e ]
  ret i32 %v2_290ad

; uselistorder directives
  uselistorder i32 %v1_2906b, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2908e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_29035, { 1, 0 }
  uselistorder label %dec_label_pc_29035.lr.ph, { 1, 0 }
}

define i32 @function_290b4() local_unnamed_addr {
dec_label_pc_290b4:
  %v0_290b5 = load i32, i32* @eax, align 8
  ret i32 %v0_290b5
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSsEEC1EPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_290b8:
  ret i32 %arg2
}

define i32 @function_290ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_290ce:
  %v2_290ce = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_290ce = load i32, i32* @eax, align 8
  %v4_290ce = trunc i32 %v3_290ce to i8
  %v5_290ce = add i8 %v4_290ce, %v2_290ce
  %v21_290ce = inttoptr i32 %v3_290ce to i8*
  store i8 %v5_290ce, i8* %v21_290ce, align 1
  %v0_290d0 = load i32, i32* @eax, align 8
  %v1_290d0 = load i32, i32* @ebp, align 4
  %v2_290d0 = add i32 %v1_290d0, -12
  %v3_290d0 = inttoptr i32 %v2_290d0 to i32*
  store i32 %v0_290d0, i32* %v3_290d0, align 4
  %v0_290d5 = load i32, i32* @ebp, align 4
  %v1_290d5 = add i32 %v0_290d5, -28
  %v2_290d5 = inttoptr i32 %v1_290d5 to i32*
  %v3_290d5 = load i32, i32* %v2_290d5, align 4
  %v1_290d8 = add i32 %v0_290d5, -32
  %v2_290d8 = inttoptr i32 %v1_290d8 to i32*
  %v3_290d8 = load i32, i32* %v2_290d8, align 4
  %v2_290db = inttoptr i32 %v3_290d5 to i32*
  store i32 %v3_290d8, i32* %v2_290db, align 4
  %v0_290dd = load i32, i32* @ebp, align 4
  %v1_290dd = add i32 %v0_290dd, -12
  %v2_290dd = inttoptr i32 %v1_290dd to i32*
  %v3_290dd = load i32, i32* %v2_290dd, align 4
  %v1_290e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_290e0 = xor i32 %v1_290e0, %v3_290dd
  %v3_290e0 = icmp eq i32 %v2_290e0, 0
  store i32 %v2_290e0, i32* @eax, align 8
  br i1 %v3_290e0, label %bb, label %dec_label_pc_290e9

bb:                                               ; preds = %dec_label_pc_290ce
  %v1_290e7 = call i32 @function_290ee()
  br label %dec_label_pc_290e9

dec_label_pc_290e9:                               ; preds = %bb, %dec_label_pc_290ce
  %v2_290e7 = phi i32 [ %v1_290e7, %bb ], [ %v2_290e0, %dec_label_pc_290ce ]
  ret i32 %v2_290e7
}

define i32 @function_290ee() local_unnamed_addr {
dec_label_pc_290ee:
  %v0_290ef = load i32, i32* @eax, align 8
  ret i32 %v0_290ef
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_290f0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_2910c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2910c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2910c = load i32, i32* @eax, align 8
  %v1_2910c = load i32, i32* @ebp, align 4
  %v2_2910c = add i32 %v1_2910c, -40
  %v3_2910c = inttoptr i32 %v2_2910c to i32*
  store i32 %v0_2910c, i32* %v3_2910c, align 4
  %v0_2910f = load i32, i32* @ebp, align 4
  %v1_2910f = add i32 %v0_2910f, 24
  %v2_2910f = inttoptr i32 %v1_2910f to i32*
  %v3_2910f = load i32, i32* %v2_2910f, align 4
  %v2_29112 = add i32 %v0_2910f, -44
  %v3_29112 = inttoptr i32 %v2_29112 to i32*
  store i32 %v3_2910f, i32* %v3_29112, align 4
  %v0_29115 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2911b = load i32, i32* @ebp, align 4
  %v2_2911b = add i32 %v1_2911b, -12
  %v3_2911b = inttoptr i32 %v2_2911b to i32*
  store i32 %v0_29115, i32* %v3_2911b, align 4
  %v0_29120 = load i32, i32* @ebp, align 4
  %v1_29120 = add i32 %v0_29120, -36
  %v2_29120 = inttoptr i32 %v1_29120 to i32*
  %v3_29120 = load i32, i32* %v2_29120, align 4
  %v10_29120 = icmp eq i32 %v3_29120, 0
  %v1_29124 = icmp eq i1 %v10_29120, false
  br i1 %v1_29124, label %dec_label_pc_29178, label %dec_label_pc_29126

dec_label_pc_29126:                               ; preds = %dec_label_pc_2910c
  %v1_29126 = add i32 %v0_29120, -32
  %v2_29126 = inttoptr i32 %v1_29126 to i32*
  %v3_29126 = load i32, i32* %v2_29126, align 4
  %v1_2912c = call i32 @unknown_4d0c6(i32 %v3_29126)
  %v1_29131 = load i32, i32* @ebp, align 4
  %v2_29131 = add i32 %v1_29131, -40
  %v3_29131 = inttoptr i32 %v2_29131 to i32*
  %v4_29131 = load i32, i32* %v3_29131, align 4
  %v15_29131 = icmp eq i32 %v1_2912c, %v4_29131
  br i1 %v15_29131, label %dec_label_pc_29178, label %dec_label_pc_29136

dec_label_pc_29136:                               ; preds = %dec_label_pc_29126
  %v1_2913c = call i32 @unknown_4c78c(i32 %v4_29131)
  store i32 %v1_2913c, i32* %ebx.global-to-local, align 4
  %v0_29143 = load i32, i32* @ebp, align 4
  %v1_29143 = add i32 %v0_29143, -44
  %v2_29143 = inttoptr i32 %v1_29143 to i32*
  %v3_29143 = load i32, i32* %v2_29143, align 4
  %v1_2914a = add i32 %v0_29143, -14
  %v2_29150 = call i32 @unknown_520c0(i32 %v1_2914a, i32 %v3_29143)
  %v0_29155 = load i32, i32* @ebp, align 4
  %v1_29155 = add i32 %v0_29155, -32
  %v2_29155 = inttoptr i32 %v1_29155 to i32*
  %v3_29155 = load i32, i32* %v2_29155, align 4
  %v0_29158 = load i32, i32* %ebx.global-to-local, align 4
  %v3_29163 = call i32 @unknown_45c22(i32 %v3_29155, i32 %v2_29150, i32 %v0_29158)
  %v4_29168 = trunc i32 %v3_29163 to i8
  %v5_29168 = icmp ne i8 %v4_29168, 0
  %v2_29178.pre = load i32, i32* @ebp, align 4
  %phitmp = zext i1 %v5_29168 to i8
  br label %dec_label_pc_29178

dec_label_pc_29178:                               ; preds = %dec_label_pc_29136, %dec_label_pc_2910c, %dec_label_pc_29126
  %v2_29178 = phi i32 [ %v1_29131, %dec_label_pc_29126 ], [ %v0_29120, %dec_label_pc_2910c ], [ %v2_29178.pre, %dec_label_pc_29136 ]
  %storemerge = phi i8 [ 1, %dec_label_pc_29126 ], [ 1, %dec_label_pc_2910c ], [ %phitmp, %dec_label_pc_29136 ]
  %v3_29178 = add i32 %v2_29178, -13
  %v4_29178 = inttoptr i32 %v3_29178 to i8*
  store i8 %storemerge, i8* %v4_29178, align 1
  %v0_2917b = load i32, i32* @ebp, align 4
  %v1_2917b = add i32 %v0_2917b, -44
  %v2_2917b = inttoptr i32 %v1_2917b to i32*
  %v3_2917b = load i32, i32* %v2_2917b, align 4
  %v1_29182 = add i32 %v0_2917b, -32
  %v2_29182 = inttoptr i32 %v1_29182 to i32*
  %v3_29182 = load i32, i32* %v2_29182, align 4
  %v2_29188 = call i32 @unknown_55f34(i32 %v3_29182, i32 %v3_2917b)
  %v1_2918d = load i32, i32* @ebp, align 4
  %v2_2918d = add i32 %v1_2918d, -20
  %v3_2918d = inttoptr i32 %v2_2918d to i32*
  store i32 %v2_29188, i32* %v3_2918d, align 4
  %v0_29190 = load i32, i32* @ebp, align 4
  %v1_29196 = add i32 %v0_29190, -13
  %v2_29196 = inttoptr i32 %v1_29196 to i8*
  %v3_29196 = load i8, i8* %v2_29196, align 1
  %v4_29196 = zext i8 %v3_29196 to i32
  ret i32 %v4_29196

; uselistorder directives
  uselistorder i32 %v4_29131, { 1, 0 }
  uselistorder label %dec_label_pc_29178, { 0, 2, 1 }
}

define i32 @function_291a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_291a4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_291ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_291ea:
  %v0_291ea = load i32, i32* @ebx, align 4
  %v2_291ea = mul i32 %v0_291ea, 2
  %v3_291ea = add i32 %v0_291ea, ptrtoint (i32* @global_var_5d.2881 to i32)
  %v4_291ea = add i32 %v3_291ea, %v2_291ea
  %v5_291ea = inttoptr i32 %v4_291ea to i32*
  %v6_291ea = load i32, i32* %v5_291ea, align 4
  ret i32 %v6_291ea

; uselistorder directives
  uselistorder i32 %v0_291ea, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_291f2:
  ret i32 %arg3
}

define i32 @function_2920c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2920c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2920c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29211 = load i32, i32* @ebp, align 4
  %v2_29211 = add i32 %v1_29211, -12
  %v3_29211 = inttoptr i32 %v2_29211 to i32*
  store i32 %v0_2920c, i32* %v3_29211, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_29216 = load i32, i32* @ebp, align 4
  %v1_29216 = add i32 %v0_29216, -64
  %v2_29216 = inttoptr i32 %v1_29216 to i32*
  %v3_29216 = load i32, i32* %v2_29216, align 4
  store i32 %v3_29216, i32* %eax.global-to-local, align 8
  %v1_2921c = call i32 @unknown_4626e(i32 %v3_29216)
  store i32 %v1_2921c, i32* %eax.global-to-local, align 8
  %v1_29221 = load i32, i32* @ebp, align 4
  %v2_29221 = add i32 %v1_29221, -28
  %v3_29221 = inttoptr i32 %v2_29221 to i32*
  store i32 %v1_2921c, i32* %v3_29221, align 4
  %v0_29224 = load i32, i32* @ebp, align 4
  %v1_29224 = add i32 %v0_29224, -64
  %v2_29224 = inttoptr i32 %v1_29224 to i32*
  %v3_29224 = load i32, i32* %v2_29224, align 4
  store i32 %v3_29224, i32* %eax.global-to-local, align 8
  %v1_2922a = call i32 @unknown_4d1c8(i32 %v3_29224)
  store i32 %v1_2922a, i32* %eax.global-to-local, align 8
  %v1_2922f = load i32, i32* @ebp, align 4
  %v2_2922f = add i32 %v1_2922f, -24
  %v3_2922f = inttoptr i32 %v2_2922f to i32*
  store i32 %v1_2922a, i32* %v3_2922f, align 4
  %v0_29232 = load i32, i32* @ebp, align 4
  %v1_29232 = add i32 %v0_29232, -13
  %v2_29232 = inttoptr i32 %v1_29232 to i8*
  store i8 1, i8* %v2_29232, align 1
  br label %dec_label_pc_29294

dec_label_pc_29238:                               ; preds = %dec_label_pc_29294
  %v3_29238 = load i32, i32* %v2_29294, align 4
  store i32 %v3_29238, i32* %eax.global-to-local, align 8
  %v2_2923b = add i32 %v0_29294, -24
  %v3_2923b = inttoptr i32 %v2_2923b to i32*
  store i32 %v3_29238, i32* %v3_2923b, align 4
  %v0_2923e = load i32, i32* @ebp, align 4
  %v1_2923e = add i32 %v0_2923e, -28
  %v2_2923e = inttoptr i32 %v1_2923e to i32*
  %v3_2923e = load i32, i32* %v2_2923e, align 4
  store i32 %v3_2923e, i32* %eax.global-to-local, align 8
  %v1_29244 = call i32 @unknown_520ed(i32 %v3_2923e)
  store i32 %v1_29244, i32* %eax.global-to-local, align 8
  store i32 %v1_29244, i32* %ebx.global-to-local, align 4
  %v0_2924b = load i32, i32* @ebp, align 4
  %v1_2924b = add i32 %v0_2924b, -68
  %v2_2924b = inttoptr i32 %v1_2924b to i32*
  %v3_2924b = load i32, i32* %v2_2924b, align 4
  %v1_29252 = add i32 %v0_2924b, -18
  store i32 %v1_29252, i32* %eax.global-to-local, align 8
  %v2_29258 = call i32 @unknown_521c2(i32 %v1_29252, i32 %v3_2924b)
  store i32 %v2_29258, i32* %eax.global-to-local, align 8
  %v0_2925d = load i32, i32* @ebp, align 4
  %v1_2925d = add i32 %v0_2925d, -64
  %v2_2925d = inttoptr i32 %v1_2925d to i32*
  %v3_2925d = load i32, i32* %v2_2925d, align 4
  %v0_29260 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2926b = call i32 @unknown_45d24(i32 %v3_2925d, i32 %v2_29258, i32 %v0_29260)
  store i32 %v3_2926b, i32* %eax.global-to-local, align 8
  %v1_29270 = trunc i32 %v3_2926b to i8
  %v2_29270 = load i32, i32* @ebp, align 4
  %v3_29270 = add i32 %v2_29270, -13
  %v4_29270 = inttoptr i32 %v3_29270 to i8*
  store i8 %v1_29270, i8* %v4_29270, align 1
  %v0_29273 = load i32, i32* @ebp, align 4
  %v1_29273 = add i32 %v0_29273, -13
  %v2_29273 = inttoptr i32 %v1_29273 to i8*
  %v3_29273 = load i8, i8* %v2_29273, align 1
  %v10_29273 = icmp eq i8 %v3_29273, 0
  %v1_29286 = add i32 %v0_29273, -28
  %v2_29286 = inttoptr i32 %v1_29286 to i32*
  %v3_29286 = load i32, i32* %v2_29286, align 4
  store i32 %v3_29286, i32* %eax.global-to-local, align 8
  br i1 %v10_29273, label %dec_label_pc_29286, label %dec_label_pc_29279

dec_label_pc_29279:                               ; preds = %dec_label_pc_29238
  %v1_2927f = call i32 @unknown_4d197(i32 %v3_29286)
  br label %dec_label_pc_29291

dec_label_pc_29286:                               ; preds = %dec_label_pc_29238
  %v1_2928c = call i32 @unknown_4d167(i32 %v3_29286)
  br label %dec_label_pc_29291

dec_label_pc_29291:                               ; preds = %dec_label_pc_29286, %dec_label_pc_29279
  %storemerge = phi i32 [ %v1_2928c, %dec_label_pc_29286 ], [ %v1_2927f, %dec_label_pc_29279 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v1_29291 = load i32, i32* @ebp, align 4
  %v2_29291 = add i32 %v1_29291, -28
  %v3_29291 = inttoptr i32 %v2_29291 to i32*
  store i32 %storemerge, i32* %v3_29291, align 4
  br label %dec_label_pc_29294

dec_label_pc_29294:                               ; preds = %dec_label_pc_29291, %dec_label_pc_2920c
  %v0_29294 = load i32, i32* @ebp, align 4
  %v1_29294 = add i32 %v0_29294, -28
  %v2_29294 = inttoptr i32 %v1_29294 to i32*
  %v3_29294 = load i32, i32* %v2_29294, align 4
  %v10_29294 = icmp eq i32 %v3_29294, 0
  %v1_29298 = icmp eq i1 %v10_29294, false
  %v2_29298 = zext i1 %v1_29298 to i32
  %v3_29298 = load i32, i32* %eax.global-to-local, align 8
  %v4_29298 = and i32 %v3_29298, -256
  %v5_29298 = or i32 %v2_29298, %v4_29298
  store i32 %v5_29298, i32* %eax.global-to-local, align 8
  %v5_2929b = icmp eq i1 %v1_29298, false
  %v1_2929d = icmp eq i1 %v5_2929b, false
  br i1 %v1_2929d, label %dec_label_pc_29238, label %dec_label_pc_2929f

dec_label_pc_2929f:                               ; preds = %dec_label_pc_29294
  %v1_2929f = add i32 %v0_29294, -24
  %v2_2929f = inttoptr i32 %v1_2929f to i32*
  %v3_2929f = load i32, i32* %v2_2929f, align 4
  %v1_292a6 = add i32 %v0_29294, -44
  store i32 %v1_292a6, i32* %eax.global-to-local, align 8
  %v2_292ac = call i32 @unknown_522aa(i32 %v1_292a6, i32 %v3_2929f)
  store i32 %v2_292ac, i32* %eax.global-to-local, align 8
  %v0_292b1 = load i32, i32* @ebp, align 4
  %v1_292b1 = add i32 %v0_292b1, -13
  %v2_292b1 = inttoptr i32 %v1_292b1 to i8*
  %v3_292b1 = load i8, i8* %v2_292b1, align 1
  %v10_292b1 = icmp eq i8 %v3_292b1, 0
  br i1 %v10_292b1, label %bb, label %dec_label_pc_292bb

bb:                                               ; preds = %dec_label_pc_2929f
  %v1_292b5 = call i32 @function_2933d()
  store i32 %v1_292b5, i32* %eax.global-to-local, align 8
  %v0_292bb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_292bb

dec_label_pc_292bb:                               ; preds = %bb, %dec_label_pc_2929f
  %v0_292bb = phi i32 [ %v0_292bb.pre, %bb ], [ %v0_292b1, %dec_label_pc_2929f ]
  %v1_292bb = add i32 %v0_292bb, -40
  store i32 %v1_292bb, i32* %eax.global-to-local, align 8
  %v1_292be = add i32 %v0_292bb, -64
  %v2_292be = inttoptr i32 %v1_292be to i32*
  %v3_292be = load i32, i32* %v2_292be, align 4
  %v2_292c8 = call i32 @unknown_52cb0(i32 %v1_292bb, i32 %v3_292be)
  store i32 %v2_292c8, i32* %eax.global-to-local, align 8
  ret i32 %v2_292c8

; uselistorder directives
  uselistorder i32 %v0_292bb, { 1, 0 }
  uselistorder i32* %v2_29294, { 1, 0 }
  uselistorder i32 %v0_29294, { 1, 0, 3, 2 }
  uselistorder i32 %v3_29286, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 9, 10, 0, 11, 12, 13, 14, 8, 1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19 }
}

define i32 @function_292d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_292d0:
  %v0_292d0 = load i32, i32* @ebp, align 4
  %v1_292d0 = add i32 %v0_292d0, -40
  %v1_292d7 = add i32 %v0_292d0, -44
  %v2_292dd = call i32 @unknown_45db6(i32 %v1_292d7, i32 %v1_292d0)
  %v4_292e2 = trunc i32 %v2_292dd to i8
  %v5_292e2 = icmp eq i8 %v4_292e2, 0
  %v0_29332 = load i32, i32* @ebp, align 4
  br i1 %v5_292e2, label %dec_label_pc_29332, label %dec_label_pc_292e6

dec_label_pc_292e6:                               ; preds = %dec_label_pc_292d0
  %v1_292e6 = add i32 %v0_29332, -17
  %v2_292e6 = inttoptr i32 %v1_292e6 to i8*
  store i8 1, i8* %v2_292e6, align 1
  %v0_292ea = load i32, i32* @ebp, align 4
  %v1_292ea = add i32 %v0_292ea, -36
  %v1_292ed = add i32 %v0_292ea, -68
  %v2_292ed = inttoptr i32 %v1_292ed to i32*
  %v3_292ed = load i32, i32* %v2_292ed, align 4
  %v1_292f4 = add i32 %v0_292ea, -24
  %v2_292f4 = inttoptr i32 %v1_292f4 to i32*
  %v3_292f4 = load i32, i32* %v2_292f4, align 4
  %v1_292fb = add i32 %v0_292ea, -28
  %v2_292fb = inttoptr i32 %v1_292fb to i32*
  %v3_292fb = load i32, i32* %v2_292fb, align 4
  %v1_29302 = add i32 %v0_292ea, -64
  %v2_29302 = inttoptr i32 %v1_29302 to i32*
  %v3_29302 = load i32, i32* %v2_29302, align 4
  %v5_2930c = call i32 @unknown_522e2(i32 %v1_292ea, i32 %v3_29302, i32 %v3_292fb, i32 %v3_292f4, i32 %v3_292ed)
  %v0_29314 = load i32, i32* @ebp, align 4
  %v1_29314 = add i32 %v0_29314, -17
  %v1_2931b = add i32 %v0_29314, -36
  %v1_29322 = add i32 %v0_29314, -60
  %v2_29322 = inttoptr i32 %v1_29322 to i32*
  %v3_29322 = load i32, i32* %v2_29322, align 4
  %v3_29328 = call i32 @unknown_56102(i32 %v3_29322, i32 %v1_2931b, i32 %v1_29314)
  ret i32 %v3_29328

dec_label_pc_29332:                               ; preds = %dec_label_pc_292d0
  %v1_29332 = add i32 %v0_29332, -44
  %v1_29338 = call i32 @unknown_5614e(i32 %v1_29332)
  ret i32 %v1_29338

; uselistorder directives
  uselistorder i32 %v0_292ea, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_29332, { 1, 0 }
}

define i32 @function_2933a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2933a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2933d() local_unnamed_addr {
dec_label_pc_2933d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2933d = load i32, i32* @ebp, align 4
  %v1_2933d = add i32 %v0_2933d, -68
  %v2_2933d = inttoptr i32 %v1_2933d to i32*
  %v3_2933d = load i32, i32* %v2_2933d, align 4
  %v1_29344 = add i32 %v0_2933d, -16
  %v2_2934a = call i32 @unknown_521c2(i32 %v1_29344, i32 %v3_2933d)
  store i32 %v2_2934a, i32* %ebx.global-to-local, align 4
  %v0_29351 = load i32, i32* @ebp, align 4
  %v1_29351 = add i32 %v0_29351, -44
  %v2_29351 = inttoptr i32 %v1_29351 to i32*
  %v3_29351 = load i32, i32* %v2_29351, align 4
  %v1_29357 = call i32 @unknown_4c88e(i32 %v3_29351)
  %v0_2935e = load i32, i32* @ebp, align 4
  %v1_2935e = add i32 %v0_2935e, -64
  %v2_2935e = inttoptr i32 %v1_2935e to i32*
  %v3_2935e = load i32, i32* %v2_2935e, align 4
  %v0_29361 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2936c = call i32 @unknown_45d24(i32 %v3_2935e, i32 %v1_29357, i32 %v0_29361)
  %v4_29371 = trunc i32 %v3_2936c to i8
  %v5_29371 = icmp eq i8 %v4_29371, 0
  %v0_293be = load i32, i32* @ebp, align 4
  br i1 %v5_29371, label %dec_label_pc_293be, label %dec_label_pc_29375

dec_label_pc_29375:                               ; preds = %dec_label_pc_2933d
  %v1_29375 = add i32 %v0_293be, -15
  %v2_29375 = inttoptr i32 %v1_29375 to i8*
  store i8 1, i8* %v2_29375, align 1
  %v0_29379 = load i32, i32* @ebp, align 4
  %v1_29379 = add i32 %v0_29379, -32
  %v1_2937c = add i32 %v0_29379, -68
  %v2_2937c = inttoptr i32 %v1_2937c to i32*
  %v3_2937c = load i32, i32* %v2_2937c, align 4
  %v1_29383 = add i32 %v0_29379, -24
  %v2_29383 = inttoptr i32 %v1_29383 to i32*
  %v3_29383 = load i32, i32* %v2_29383, align 4
  %v1_2938a = add i32 %v0_29379, -28
  %v2_2938a = inttoptr i32 %v1_2938a to i32*
  %v3_2938a = load i32, i32* %v2_2938a, align 4
  %v1_29391 = add i32 %v0_29379, -64
  %v2_29391 = inttoptr i32 %v1_29391 to i32*
  %v3_29391 = load i32, i32* %v2_29391, align 4
  %v5_2939b = call i32 @unknown_522e2(i32 %v1_29379, i32 %v3_29391, i32 %v3_2938a, i32 %v3_29383, i32 %v3_2937c)
  %v0_293a3 = load i32, i32* @ebp, align 4
  %v1_293a3 = add i32 %v0_293a3, -15
  %v1_293aa = add i32 %v0_293a3, -32
  %v1_293b1 = add i32 %v0_293a3, -60
  %v2_293b1 = inttoptr i32 %v1_293b1 to i32*
  %v3_293b1 = load i32, i32* %v2_293b1, align 4
  %v3_293b7 = call i32 @unknown_56102(i32 %v3_293b1, i32 %v1_293aa, i32 %v1_293a3)
  br label %dec_label_pc_293db

dec_label_pc_293be:                               ; preds = %dec_label_pc_2933d
  %v1_293be = add i32 %v0_293be, -14
  %v2_293be = inttoptr i32 %v1_293be to i8*
  store i8 0, i8* %v2_293be, align 1
  %v0_293c2 = load i32, i32* @ebp, align 4
  %v1_293c2 = add i32 %v0_293c2, -14
  %v1_293c9 = add i32 %v0_293c2, -44
  %v1_293d0 = add i32 %v0_293c2, -60
  %v2_293d0 = inttoptr i32 %v1_293d0 to i32*
  %v3_293d0 = load i32, i32* %v2_293d0, align 4
  %v3_293d6 = call i32 @unknown_56102(i32 %v3_293d0, i32 %v1_293c9, i32 %v1_293c2)
  br label %dec_label_pc_293db

dec_label_pc_293db:                               ; preds = %dec_label_pc_293be, %dec_label_pc_29375
  %v0_293db = load i32, i32* @ebp, align 4
  %v1_293db = add i32 %v0_293db, -60
  %v2_293db = inttoptr i32 %v1_293db to i32*
  %v3_293db = load i32, i32* %v2_293db, align 4
  store i32 %v3_293db, i32* @eax, align 8
  %v1_293de = add i32 %v0_293db, -12
  %v2_293de = inttoptr i32 %v1_293de to i32*
  %v3_293de = load i32, i32* %v2_293de, align 4
  %v1_293e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_293e1 = icmp eq i32 %v1_293e1, %v3_293de
  br i1 %v3_293e1, label %bb, label %dec_label_pc_293ea

bb:                                               ; preds = %dec_label_pc_293db
  %v1_293e8 = call i32 @function_293ef()
  br label %dec_label_pc_293ea

dec_label_pc_293ea:                               ; preds = %bb, %dec_label_pc_293db
  %v2_293e8 = phi i32 [ %v1_293e8, %bb ], [ %v3_293db, %dec_label_pc_293db ]
  ret i32 %v2_293e8

; uselistorder directives
  uselistorder i32 %v0_29379, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_293be, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_56102, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_45d24, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_521c2, { 1, 0 }
}

define i32 @function_293ef() local_unnamed_addr {
dec_label_pc_293ef:
  %v0_293f3 = load i32, i32* @eax, align 8
  ret i32 %v0_293f3
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEmmEv() local_unnamed_addr {
dec_label_pc_293f6:
  %eax.global-to-local = alloca i32, align 4
  %v2_293f7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_293f7
}

define i32 @function_293fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_293fa:
  %v0_29403 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29408 = load i32, i32* @ebp, align 4
  %v2_29408 = add i32 %v1_29408, -12
  %v3_29408 = inttoptr i32 %v2_29408 to i32*
  store i32 %v0_29403, i32* %v3_29408, align 4
  %v0_2940d = load i32, i32* @ebp, align 4
  %v1_2940d = add i32 %v0_2940d, -28
  %v2_2940d = inttoptr i32 %v1_2940d to i32*
  %v3_2940d = load i32, i32* %v2_2940d, align 4
  %v1_29410 = inttoptr i32 %v3_2940d to i32*
  %v2_29410 = load i32, i32* %v1_29410, align 4
  ret i32 %v2_29410
}

define i32 @function_29432() local_unnamed_addr {
dec_label_pc_29432:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29432 = load i32, i32* %ecx.global-to-local, align 8
  %v1_29432 = add i32 %v0_29432, -1
  store i32 %v1_29432, i32* %ecx.global-to-local, align 8
  %v0_29434 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29434
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsSsEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_29436:
  %v2_29456 = load i32, i32* %arg2, align 4
  %v2_29462 = call i32 @unknown_524ee(i32 %arg1, i32 %v2_29456)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29476

bb:                                               ; preds = %dec_label_pc_29436
  %v1_29474 = call i32 @function_2947b()
  br label %dec_label_pc_29476

dec_label_pc_29476:                               ; preds = %bb, %dec_label_pc_29436
  %v2_29474 = phi i32 [ %v1_29474, %bb ], [ %arg1, %dec_label_pc_29436 ]
  ret i32 %v2_29474

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2947b() local_unnamed_addr {
dec_label_pc_2947b:
  %v0_2947c = load i32, i32* @eax, align 8
  ret i32 %v0_2947c
}

define i32 @_ZNSaI5CTxInEC1ERKS0_() local_unnamed_addr {
dec_label_pc_29480:
  %eax.global-to-local = alloca i32, align 4
  %v17_29483 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_29483
}

define i32 @function_29488(i32 %arg1) local_unnamed_addr {
dec_label_pc_29488:
  %v0_29488 = load i32, i32* @ecx, align 8
  %v1_29488 = add i32 %v0_29488, 1166795845
  %v2_29488 = inttoptr i32 %v1_29488 to i8*
  %v3_29488 = load i8, i8* %v2_29488, align 1
  %v5_29488 = trunc i32 %v0_29488 to i8
  %v6_29488 = or i8 %v3_29488, %v5_29488
  store i8 %v6_29488, i8* %v2_29488, align 1
  %v0_29490 = load i32, i32* @ebp, align 4
  %v1_29490 = add i32 %v0_29490, 1
  store i32 %v1_29490, i32* @ebp, align 4
  %v0_29491 = load i32, i32* @ecx, align 8
  %v1_29491 = add i32 %v0_29491, -1
  store i32 %v1_29491, i32* @ecx, align 8
  %v0_29493 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29498 = add i32 %v0_29490, -11
  %v3_29498 = inttoptr i32 %v2_29498 to i32*
  store i32 %v0_29493, i32* %v3_29498, align 4
  %v0_2949d = load i32, i32* @ebp, align 4
  %v1_2949d = add i32 %v0_2949d, -32
  %v2_2949d = inttoptr i32 %v1_2949d to i32*
  %v3_2949d = load i32, i32* %v2_2949d, align 4
  %v1_294a4 = add i32 %v0_2949d, -28
  %v2_294a4 = inttoptr i32 %v1_294a4 to i32*
  %v3_294a4 = load i32, i32* %v2_294a4, align 4
  %v2_294aa = call i32 @unknown_5641c(i32 %v3_294a4, i32 %v3_2949d)
  %v0_294af = load i32, i32* @ebp, align 4
  %v1_294af = add i32 %v0_294af, -12
  %v2_294af = inttoptr i32 %v1_294af to i32*
  %v3_294af = load i32, i32* %v2_294af, align 4
  %v1_294b2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_294b2 = xor i32 %v1_294b2, %v3_294af
  store i1 false, i1* @cf, align 1
  %v3_294b2 = icmp eq i32 %v2_294b2, 0
  store i32 %v2_294b2, i32* @eax, align 8
  br i1 %v3_294b2, label %bb, label %dec_label_pc_294bb

bb:                                               ; preds = %dec_label_pc_29488
  %v1_294b9 = call i32 @function_294c0()
  br label %dec_label_pc_294bb

dec_label_pc_294bb:                               ; preds = %bb, %dec_label_pc_29488
  %v3_294b9 = phi i32 [ %v1_294b9, %bb ], [ %v2_294b2, %dec_label_pc_29488 ]
  ret i32 %v3_294b9
}

define i32 @function_294c0() local_unnamed_addr {
dec_label_pc_294c0:
  %v0_294c1 = load i32, i32* @eax, align 8
  ret i32 %v0_294c1
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_294c2:
  %v1_294eb = call i32 @unknown_5648e(i32 %arg1)
  %v10_294f0 = icmp ult i32 %v1_294eb, %arg2
  %v1_294f3 = zext i1 %v10_294f0 to i32
  %v3_294f3 = and i32 %v1_294eb, -256
  %v4_294f3 = or i32 %v1_294f3, %v3_294f3
  ret i32 %v4_294f3
}

define i32 @function_2951d() local_unnamed_addr {
dec_label_pc_2951d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2951d = load i32, i32* %ecx.global-to-local, align 8
  %v1_2951d = add i32 %v0_2951d, -1
  store i32 %v1_2951d, i32* %ecx.global-to-local, align 8
  %v0_2951f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2951f
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29520:
  ret i32 %arg3
}

define i32 @function_2954c() local_unnamed_addr {
dec_label_pc_2954c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2954c = load i32, i32* %ebp.global-to-local, align 4
  %v1_2954c = add i32 %v0_2954c, -28
  store i32 %v1_2954c, i32* %eax.global-to-local, align 8
  %v1_29552 = call i32 @unknown_4656c(i32 %v1_2954c)
  store i32 %v1_29552, i32* %eax.global-to-local, align 8
  store i32 %v1_29552, i32* %ebx.global-to-local, align 4
  %v1_29559 = add i32 %v0_2954c, -16
  %v2_29559 = inttoptr i32 %v1_29559 to i32*
  %v3_29559 = load i32, i32* %v2_29559, align 4
  store i32 %v3_29559, i32* %eax.global-to-local, align 8
  %v1_2955f = call i32 @unknown_55e66(i32 %v3_29559)
  store i32 %v1_2955f, i32* %eax.global-to-local, align 8
  %v0_29564 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2956b = call i32 @unknown_565aa(i32 %v1_2955f, i32 %v0_29564)
  %v0_29570 = load i32, i32* %ebp.global-to-local, align 4
  %v1_29570 = add i32 %v0_29570, -28
  store i32 %v1_29570, i32* %eax.global-to-local, align 8
  %v1_29576 = call i32 @unknown_46532(i32 %v1_29570)
  store i32 %v1_29576, i32* %eax.global-to-local, align 8
  %v1_2957b = add i32 %v0_29570, -16
  %v2_2957b = inttoptr i32 %v1_2957b to i32*
  %v3_2957b = load i32, i32* %v2_2957b, align 4
  %v4_2957b = add i32 %v3_2957b, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v4_2957b, i32* %v2_2957b, align 4
  %v22_2957b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_2957b
}

define i32 @function_29588(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29588:
  %v0_2958a = load i32, i32* @eax, align 8
  %v2_2958a = add i32 %v0_2958a, 36
  %v16_2958a = and i32 %v2_2958a, 255
  %v18_2958a = and i32 %v0_2958a, -256
  %v19_2958a = or i32 %v16_2958a, %v18_2958a
  ret i32 %v19_2958a

; uselistorder directives
  uselistorder i32 %v0_2958a, { 1, 0 }
}

define i32 @function_29590(i32 %arg1) local_unnamed_addr {
dec_label_pc_29590:
  %v0_29590 = load i32, i32* @eax, align 8
  %v2_29590 = mul i32 %v0_29590, 8
  %v3_29590 = add i32 %v0_29590, 1166784373
  %v4_29590 = add i32 %v3_29590, %v2_29590
  %v5_29590 = inttoptr i32 %v4_29590 to i8*
  %v6_29590 = load i8, i8* %v5_29590, align 1
  %v8_29590 = trunc i32 %v0_29590 to i8
  %v9_29590 = add i8 %v6_29590, %v8_29590
  store i8 %v9_29590, i8* %v5_29590, align 1
  %v30_29590 = load i32, i32* @eax, align 8
  ret i32 %v30_29590

; uselistorder directives
  uselistorder i32 %v0_29590, { 0, 2, 1 }
}

define i32 @function_29598() local_unnamed_addr {
dec_label_pc_29598:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_29598 = add i32 %tmp91, -12
  %v2_29598 = inttoptr i32 %v1_29598 to i32*
  %v3_29598 = load i32, i32* %v2_29598, align 4
  %v1_2959b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2959b = icmp eq i32 %v1_2959b, %v3_29598
  br i1 %v3_2959b, label %bb, label %dec_label_pc_295a4

bb:                                               ; preds = %dec_label_pc_29598
  %v1_295a2 = call i32 @function_295db()
  store i32 %v1_295a2, i32* @eax, align 8
  br label %dec_label_pc_295a4

dec_label_pc_295a4:                               ; preds = %bb, %dec_label_pc_29598
  %v0_295a4 = call i32 @function_295d6()
  ret i32 %v0_295a4
}

define i32 @function_295a7() local_unnamed_addr {
dec_label_pc_295a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_295a7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_295a7
}

define i32 @function_295c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_295c6:
  %v0_295c6 = load i32, i32* @ebp, align 4
  %v1_295c6 = add i32 %v0_295c6, -36
  %v2_295c6 = inttoptr i32 %v1_295c6 to i32*
  %v3_295c6 = load i32, i32* %v2_295c6, align 4
  %v1_295cc = call i32 @unknown_4beed(i32 %v3_295c6)
  ret i32 %v1_295cc
}

define i32 @function_295d6() local_unnamed_addr {
dec_label_pc_295d6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_295db() local_unnamed_addr {
dec_label_pc_295db:
  %v0_295e0 = load i32, i32* @eax, align 8
  ret i32 %v0_295e0
}

define i32 @_ZSt13__heap_selectIPxEvT_S1_S1_() local_unnamed_addr {
dec_label_pc_295e1:
  %eax.global-to-local = alloca i32, align 4
  %v5_295e4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_295e4
}

define i32 @function_295e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_295e6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_295e7 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_295e7 = xor i32 %v0_295e7, 139
  store i32 %v11_295e7, i32* %eax.global-to-local, align 8
  %v0_295e9 = load i32, i32* @ebp, align 4
  %v1_295e9 = add i32 %v0_295e9, 1
  store i32 %v1_295e9, i32* %ebp.global-to-local, align 4
  %v0_295ea = load i32, i32* @ecx, align 8
  %v1_295ea = add i32 %v0_295ea, 1166795845
  %v2_295ea = inttoptr i32 %v1_295ea to i8*
  %v3_295ea = load i8, i8* %v2_295ea, align 1
  %v5_295ea = trunc i32 %v0_295ea to i8
  %v6_295ea = or i8 %v3_295ea, %v5_295ea
  store i8 %v6_295ea, i8* %v2_295ea, align 1
  %v0_295f0 = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_295f0 = or i32 %v0_295f0, 137
  store i32 %v11_295f0, i32* %eax.global-to-local, align 8
  %v0_295f2 = load i32, i32* %ebp.global-to-local, align 4
  %v0_295f3 = load i32, i32* @ecx, align 8
  %v1_295f3 = add i32 %v0_295f3, 255
  %v1_295f5 = add i32 %v0_295f2, 2
  store i32 %v1_295f5, i32* @ebp, align 4
  %v1_295f6 = add i32 %v0_295f3, -1587159996
  %v2_295f6 = inttoptr i32 %v1_295f6 to i8*
  %v3_295f6 = load i8, i8* %v2_295f6, align 1
  %v5_295f6 = trunc i32 %v1_295f3 to i8
  %v8_295f6 = add i8 %v3_295f6, %v5_295f6
  %v28_295f6 = icmp ult i8 %v8_295f6, %v3_295f6
  store i1 %v28_295f6, i1* %cf.global-to-local, align 1
  store i8 %v8_295f6, i8* %v2_295f6, align 1
  %v0_295fc = load i32, i32* %eax.global-to-local, align 8
  %v1_295fc = trunc i32 %v0_295fc to i8
  %v2_295fc = load i1, i1* %cf.global-to-local, align 1
  %v3_295fc = zext i1 %v2_295fc to i8
  %v4_295fc = add i8 %v3_295fc, %v1_295fc
  %v19_295fc = icmp ule i8 %v4_295fc, %v1_295fc
  %v21_295fc = icmp eq i1 %v2_295fc, %v19_295fc
  store i1 %v21_295fc, i1* %cf.global-to-local, align 1
  %v22_295fc = zext i8 %v4_295fc to i32
  %v24_295fc = and i32 %v0_295fc, -256
  %v25_295fc = or i32 %v22_295fc, %v24_295fc
  store i32 %v25_295fc, i32* %eax.global-to-local, align 8
  %v1_295fe = inttoptr i32 %v25_295fc to i8*
  %v2_295fe = load i8, i8* %v1_295fe, align 1
  %v5_295fe = add i8 %v2_295fe, %v4_295fc
  store i8 %v5_295fe, i8* %v1_295fe, align 1
  %v0_29600 = load i32, i32* %eax.global-to-local, align 8
  %v1_29600 = load i32, i32* @ebp, align 4
  %v2_29600 = add i32 %v1_29600, -12
  %v3_29600 = inttoptr i32 %v2_29600 to i32*
  store i32 %v0_29600, i32* %v3_29600, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_29605 = load i32, i32* @ebp, align 4
  %v1_29605 = add i32 %v0_29605, -32
  %v2_29605 = inttoptr i32 %v1_29605 to i32*
  %v3_29605 = load i32, i32* %v2_29605, align 4
  store i32 %v3_29605, i32* %eax.global-to-local, align 8
  %v1_2960c = add i32 %v0_29605, -28
  %v2_2960c = inttoptr i32 %v1_2960c to i32*
  %v3_2960c = load i32, i32* %v2_2960c, align 4
  store i32 %v3_2960c, i32* %eax.global-to-local, align 8
  ret i32 %v3_2960c

; uselistorder directives
  uselistorder i8 %v4_295fc, { 0, 2, 1 }
  uselistorder i8 %v1_295fc, { 1, 0 }
  uselistorder i8 %v3_295f6, { 1, 0 }
}

define i32 @function_29616(i32 %arg1) local_unnamed_addr {
dec_label_pc_29616:
  %v0_29616 = load i32, i32* @ebx, align 4
  %v1_29616 = add i32 %v0_29616, 1166663749
  %v2_29616 = inttoptr i32 %v1_29616 to i8*
  %v3_29616 = load i8, i8* %v2_29616, align 1
  %v4_29616 = load i32, i32* @ecx, align 8
  %v5_29616 = trunc i32 %v4_29616 to i8
  %v6_29616 = add i8 %v5_29616, %v3_29616
  store i8 %v6_29616, i8* %v2_29616, align 1
  %v24_29616 = load i32, i32* @eax, align 8
  ret i32 %v24_29616

; uselistorder directives
  uselistorder i32 1166663749, { 2, 0, 1 }
}

define i32 @function_2961d() local_unnamed_addr {
dec_label_pc_2961d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2961d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2961d
}

define i32 @function_29640(i32 %arg1) local_unnamed_addr {
dec_label_pc_29640:
  %v0_29642 = load i32, i32* @ebp, align 4
  %v1_29642 = add i32 %v0_29642, -32
  %v2_29642 = inttoptr i32 %v1_29642 to i32*
  %v3_29642 = load i32, i32* %v2_29642, align 4
  %v1_29649 = add i32 %v0_29642, -28
  %v2_29649 = inttoptr i32 %v1_29649 to i32*
  %v3_29649 = load i32, i32* %v2_29649, align 4
  %v2_2964f = call i32 @unknown_56796(i32 %v3_29649, i32 %v3_29642)
  %v0_29654 = load i32, i32* @ebp, align 4
  %v1_29654 = add i32 %v0_29654, -16
  %v2_29654 = inttoptr i32 %v1_29654 to i32*
  %v3_29654 = load i32, i32* %v2_29654, align 4
  %v4_29654 = add i32 %v3_29654, 8
  store i32 %v4_29654, i32* %v2_29654, align 4
  %v0_29658 = load i32, i32* @ebp, align 4
  %v1_29665 = add i32 %v0_29658, -12
  %v2_29665 = inttoptr i32 %v1_29665 to i32*
  %v3_29665 = load i32, i32* %v2_29665, align 4
  %v1_29668 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29668 = xor i32 %v1_29668, %v3_29665
  %v3_29668 = icmp eq i32 %v2_29668, 0
  store i32 %v2_29668, i32* @eax, align 8
  br i1 %v3_29668, label %bb, label %dec_label_pc_29671

bb:                                               ; preds = %dec_label_pc_29640
  %v2_2966f = call i32 @function_29676(i32 %v3_29649)
  br label %dec_label_pc_29671

dec_label_pc_29671:                               ; preds = %bb, %dec_label_pc_29640
  %v4_2966f = phi i32 [ %v2_2966f, %bb ], [ %v2_29668, %dec_label_pc_29640 ]
  ret i32 %v4_2966f
}

define i32 @function_29676(i32 %arg1) local_unnamed_addr {
dec_label_pc_29676:
  store i32 %arg1, i32* @ebx, align 4
  %v0_2967b = load i32, i32* @eax, align 8
  ret i32 %v0_2967b
}

define i32 @_ZSt9sort_heapIPxEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2967c:
  %v0_2968e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  br label %dec_label_pc_296b8

dec_label_pc_2969b:                               ; preds = %dec_label_pc_296b8
  %v4_2969b = add i32 %stack_var_-36.0, -8
  %v3_296b3 = call i32 @unknown_56831(i32 %arg1, i32 %v4_2969b, i32 %v4_2969b)
  br label %dec_label_pc_296b8

dec_label_pc_296b8:                               ; preds = %dec_label_pc_2969b, %dec_label_pc_2967c
  %stack_var_-36.0 = phi i32 [ %arg2, %dec_label_pc_2967c ], [ %v4_2969b, %dec_label_pc_2969b ]
  %v2_296c0 = sub i32 %stack_var_-36.0, %arg1
  %v1_296c4 = add i32 %v2_296c0, -15
  %tmp106 = sub i32 14, %v2_296c0
  %v8_296c4 = and i32 %tmp106, %v2_296c0
  %v9_296c4 = icmp slt i32 %v8_296c4, 0
  %v10_296c4 = icmp eq i32 %v1_296c4, 0
  %v11_296c4 = icmp slt i32 %v1_296c4, 0
  %v3_296c7 = icmp eq i1 %v11_296c4, %v9_296c4
  %v4_296c7 = icmp eq i1 %v10_296c4, false
  %v5_296c7 = icmp eq i1 %v3_296c7, %v4_296c7
  %v5_296ca = icmp eq i1 %v5_296c7, false
  %v1_296cc = icmp eq i1 %v5_296ca, false
  br i1 %v1_296cc, label %dec_label_pc_2969b, label %dec_label_pc_296ce

dec_label_pc_296ce:                               ; preds = %dec_label_pc_296b8
  ret i32 %v0_2968e

; uselistorder directives
  uselistorder i32 %v1_296c4, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_296d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_296d4:
  %zf.global-to-local = alloca i1, align 1
  %v0_296d4 = load i32, i32* @eax, align 8
  %v1_296d4 = trunc i32 %v0_296d4 to i8
  %v2_296d4 = load i1, i1* @cf, align 1
  %v3_296d4 = zext i1 %v2_296d4 to i8
  %v4_296d4 = add i8 %v3_296d4, %v1_296d4
  %v13_296d4 = icmp eq i8 %v4_296d4, 0
  store i1 %v13_296d4, i1* %zf.global-to-local, align 1
  %v22_296d4 = zext i8 %v4_296d4 to i32
  %v24_296d4 = and i32 %v0_296d4, -256
  %v25_296d4 = or i32 %v22_296d4, %v24_296d4
  store i32 %v25_296d4, i32* @eax, align 8
  %v1_296d6 = inttoptr i32 %v25_296d4 to i8*
  %v2_296d6 = load i8, i8* %v1_296d6, align 1
  %v5_296d6 = add i8 %v2_296d6, %v4_296d4
  %v15_296d6 = icmp eq i8 %v5_296d6, 0
  store i1 %v15_296d6, i1* %zf.global-to-local, align 1
  store i8 %v5_296d6, i8* %v1_296d6, align 1
  %v0_296d8 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_296d8, label %bb, label %dec_label_pc_296d4.dec_label_pc_296da_crit_edge

dec_label_pc_296d4.dec_label_pc_296da_crit_edge:  ; preds = %dec_label_pc_296d4
  %v2_296d8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_296da

bb:                                               ; preds = %dec_label_pc_296d4
  %v1_296d8 = call i32 @function_296df()
  br label %dec_label_pc_296da

dec_label_pc_296da:                               ; preds = %dec_label_pc_296d4.dec_label_pc_296da_crit_edge, %bb
  %v2_296d8 = phi i32 [ %v2_296d8.pre, %dec_label_pc_296d4.dec_label_pc_296da_crit_edge ], [ %v1_296d8, %bb ]
  ret i32 %v2_296d8

; uselistorder directives
  uselistorder label %dec_label_pc_296da, { 1, 0 }
}

define i32 @function_296df() local_unnamed_addr {
dec_label_pc_296df:
  %v0_296e0 = load i32, i32* @eax, align 8
  ret i32 %v0_296e0
}

define i32 @_ZSt19__move_median_firstIPxEvT_S1_S1_() local_unnamed_addr {
dec_label_pc_296e1:
  %eax.global-to-local = alloca i32, align 4
  %v5_296e1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_296e1
}

define i32 @function_296e2(i32* %arg1) local_unnamed_addr {
dec_label_pc_296e2:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_296e2 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_296e2, i32* @ebp, align 4
  %v0_296fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29708 = load i32, i32* %arg1, align 4
  store i32 %v2_29708, i32* @ecx, align 8
  %v1_2970a = add i32 %tmp14, 4
  %v2_2970a = inttoptr i32 %v1_2970a to i32*
  %v3_2970a = load i32, i32* %v2_2970a, align 4
  %v1_29710 = add i32 %tmp11, 4
  %v2_29710 = inttoptr i32 %v1_29710 to i32*
  %v3_29710 = load i32, i32* %v2_29710, align 4
  store i32 %v3_29710, i32* %edx.global-to-local, align 4
  %v1_29713 = inttoptr i32 %tmp11 to i32*
  %v2_29713 = load i32, i32* %v1_29713, align 4
  %v8_29717 = icmp sgt i32 %v3_2970a, %v3_29710
  br i1 %v8_29717, label %bb, label %dec_label_pc_29719

bb:                                               ; preds = %dec_label_pc_296e2
  %v12_29717 = call i32 @function_29784(i32 %tmp9, i32 %tmp11, i32 %tmp14)
  %v0_29719.pre = load i32, i32* @ebx, align 4
  %v1_29719.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_29719

dec_label_pc_29719:                               ; preds = %bb, %dec_label_pc_296e2
  %v1_2971d = phi i32 [ %v12_29717, %bb ], [ %v2_29713, %dec_label_pc_296e2 ]
  %v1_29719 = phi i32 [ %v1_29719.pre, %bb ], [ %v3_29710, %dec_label_pc_296e2 ]
  %v0_29719 = phi i32 [ %v0_29719.pre, %bb ], [ %v3_2970a, %dec_label_pc_296e2 ]
  %v5_2971b = icmp slt i32 %v0_29719, %v1_29719
  br i1 %v5_2971b, label %dec_label_pc_29721, label %dec_label_pc_2971d

dec_label_pc_2971d:                               ; preds = %dec_label_pc_29719
  %v0_2971d = load i32, i32* @ecx, align 8
  %v7_2971d = icmp ult i32 %v0_2971d, %v1_2971d
  %v1_2971f = icmp eq i1 %v7_2971d, false
  br i1 %v1_2971f, label %bb30, label %dec_label_pc_29721

bb30:                                             ; preds = %dec_label_pc_2971d
  %v5_2971f = call i32 @function_29784(i32 %v0_296fa, i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_29721

dec_label_pc_29721:                               ; preds = %bb30, %dec_label_pc_2971d, %dec_label_pc_29719
  %v2_29724 = load i32, i32* %v1_29713, align 4
  store i32 %v2_29724, i32* %ecx.global-to-local, align 8
  %v3_29726 = load i32, i32* %v2_29710, align 4
  %v1_2972c = add i32 %tmp9, 4
  %v2_2972c = inttoptr i32 %v1_2972c to i32*
  %v3_2972c = load i32, i32* %v2_2972c, align 4
  store i32 %v3_2972c, i32* %edx.global-to-local, align 4
  %v1_2972f = inttoptr i32 %tmp9 to i32*
  %v2_2972f = load i32, i32* %v1_2972f, align 4
  %v8_29733 = icmp sgt i32 %v3_29726, %v3_2972c
  br i1 %v8_29733, label %dec_label_pc_29754, label %dec_label_pc_29735

dec_label_pc_29735:                               ; preds = %dec_label_pc_29721
  %v5_29737 = icmp slt i32 %v3_29726, %v3_2972c
  br i1 %v5_29737, label %dec_label_pc_2973d, label %dec_label_pc_29739

dec_label_pc_29739:                               ; preds = %dec_label_pc_29735
  %v7_29739 = icmp ult i32 %v2_29724, %v2_2972f
  %v1_2973b = icmp eq i1 %v7_29739, false
  br i1 %v1_2973b, label %dec_label_pc_29754, label %dec_label_pc_2973d

dec_label_pc_2973d:                               ; preds = %dec_label_pc_29739, %dec_label_pc_29735
  %v2_2974a = call i32 @unknown_56920(i32 %tmp14, i32 %tmp11)
  %v0_2974f = call i32 @function_297e5()
  ret i32 %v0_2974f

dec_label_pc_29754:                               ; preds = %dec_label_pc_29739, %dec_label_pc_29721
  %v2_29757 = load i32, i32* %arg1, align 4
  store i32 %v2_29757, i32* %ecx.global-to-local, align 8
  %v3_29759 = load i32, i32* %v2_2970a, align 4
  store i32 %v3_29759, i32* @ebx, align 4
  %v3_2975f = load i32, i32* %v2_2972c, align 4
  store i32 %v3_2975f, i32* %edx.global-to-local, align 4
  %v2_29762 = load i32, i32* %v1_2972f, align 4
  %v8_29766 = icmp sgt i32 %v3_29759, %v3_2975f
  br i1 %v8_29766, label %bb31, label %dec_label_pc_29768

bb31:                                             ; preds = %dec_label_pc_29754
  %v9_29766 = call i32 @function_297e5()
  %v0_29768.pre = load i32, i32* @ebx, align 4
  %v1_29768.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_29768

dec_label_pc_29768:                               ; preds = %bb31, %dec_label_pc_29754
  %v1_2976c = phi i32 [ %v9_29766, %bb31 ], [ %v2_29762, %dec_label_pc_29754 ]
  %v1_29768 = phi i32 [ %v1_29768.pre, %bb31 ], [ %v3_2975f, %dec_label_pc_29754 ]
  %v0_29768 = phi i32 [ %v0_29768.pre, %bb31 ], [ %v3_29759, %dec_label_pc_29754 ]
  %v5_2976a = icmp slt i32 %v0_29768, %v1_29768
  br i1 %v5_2976a, label %dec_label_pc_29770, label %dec_label_pc_2976c

dec_label_pc_2976c:                               ; preds = %dec_label_pc_29768
  %v0_2976c = load i32, i32* %ecx.global-to-local, align 8
  %v7_2976c = icmp ult i32 %v0_2976c, %v1_2976c
  %v1_2976e = icmp eq i1 %v7_2976c, false
  br i1 %v1_2976e, label %bb32, label %dec_label_pc_29770

bb32:                                             ; preds = %dec_label_pc_2976c
  %v2_2976e = call i32 @function_297e5()
  br label %dec_label_pc_29770

dec_label_pc_29770:                               ; preds = %bb32, %dec_label_pc_2976c, %dec_label_pc_29768
  ret i32 %tmp14

; uselistorder directives
  uselistorder i32 %tmp14, { 1, 0, 2, 3 }
  uselistorder i32 %tmp11, { 0, 1, 3, 2 }
  uselistorder i32 %tmp9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_29784, { 1, 0 }
}

define i32 @function_29780(i32 %arg1) local_unnamed_addr {
dec_label_pc_29780:
  %v0_29782 = call i32 @function_297e5()
  ret i32 %v0_29782
}

define i32 @function_29784(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29784:
  %ecx.global-to-local = alloca i32, align 4
  %v0_29784 = load i32, i32* @ebp, align 4
  %v1_29784 = add i32 %v0_29784, -28
  %v2_29784 = inttoptr i32 %v1_29784 to i32*
  %v3_29784 = load i32, i32* %v2_29784, align 4
  %v1_29787 = inttoptr i32 %v3_29784 to i32*
  %v2_29787 = load i32, i32* %v1_29787, align 4
  store i32 %v2_29787, i32* %ecx.global-to-local, align 8
  %v1_29789 = add i32 %v3_29784, 4
  %v2_29789 = inttoptr i32 %v1_29789 to i32*
  %v3_29789 = load i32, i32* %v2_29789, align 4
  %v1_2978c = add i32 %v0_29784, -36
  %v2_2978c = inttoptr i32 %v1_2978c to i32*
  %v3_2978c = load i32, i32* %v2_2978c, align 4
  %v1_2978f = add i32 %v3_2978c, 4
  %v2_2978f = inttoptr i32 %v1_2978f to i32*
  %v3_2978f = load i32, i32* %v2_2978f, align 4
  %v1_29792 = inttoptr i32 %v3_2978c to i32*
  %v2_29792 = load i32, i32* %v1_29792, align 4
  store i32 %v2_29792, i32* @eax, align 8
  %v8_29796 = icmp sgt i32 %v3_29789, %v3_2978f
  br i1 %v8_29796, label %dec_label_pc_297a0, label %dec_label_pc_29798

dec_label_pc_29798:                               ; preds = %dec_label_pc_29784
  %v5_2979a = icmp slt i32 %v3_29789, %v3_2978f
  br i1 %v5_2979a, label %bb, label %dec_label_pc_2979c

bb:                                               ; preds = %dec_label_pc_29798
  %v6_2979a = call i32 @function_297e4()
  store i32 %v6_2979a, i32* @eax, align 8
  %v0_2979c.pre = load i32, i32* %ecx.global-to-local, align 8
  br label %dec_label_pc_2979c

dec_label_pc_2979c:                               ; preds = %bb, %dec_label_pc_29798
  %v1_2979c = phi i32 [ %v6_2979a, %bb ], [ %v2_29792, %dec_label_pc_29798 ]
  %v0_2979c = phi i32 [ %v0_2979c.pre, %bb ], [ %v2_29787, %dec_label_pc_29798 ]
  %v7_2979c = icmp ult i32 %v0_2979c, %v1_2979c
  br i1 %v7_2979c, label %bb14, label %dec_label_pc_297a0

bb14:                                             ; preds = %dec_label_pc_2979c
  %v1_2979e = call i32 @function_297e4()
  br label %dec_label_pc_297a0

dec_label_pc_297a0:                               ; preds = %bb14, %dec_label_pc_2979c, %dec_label_pc_29784
  %v0_297a0 = load i32, i32* @ebp, align 4
  %v1_297a0 = add i32 %v0_297a0, -32
  %v2_297a0 = inttoptr i32 %v1_297a0 to i32*
  %v3_297a0 = load i32, i32* %v2_297a0, align 4
  %v1_297a3 = inttoptr i32 %v3_297a0 to i32*
  %v2_297a3 = load i32, i32* %v1_297a3, align 4
  store i32 %v2_297a3, i32* @ecx, align 8
  %v1_297a5 = add i32 %v3_297a0, 4
  %v2_297a5 = inttoptr i32 %v1_297a5 to i32*
  %v3_297a5 = load i32, i32* %v2_297a5, align 4
  store i32 %v3_297a5, i32* @ebx, align 4
  %v1_297a8 = add i32 %v0_297a0, -36
  %v2_297a8 = inttoptr i32 %v1_297a8 to i32*
  %v3_297a8 = load i32, i32* %v2_297a8, align 4
  %v1_297ab = add i32 %v3_297a8, 4
  %v2_297ab = inttoptr i32 %v1_297ab to i32*
  %v3_297ab = load i32, i32* %v2_297ab, align 4
  store i32 %v3_297ab, i32* @edx, align 4
  %v1_297ae = inttoptr i32 %v3_297a8 to i32*
  %v2_297ae = load i32, i32* %v1_297ae, align 4
  %v8_297b2 = icmp sgt i32 %v3_297a5, %v3_297ab
  br i1 %v8_297b2, label %bb15, label %dec_label_pc_297b4

bb15:                                             ; preds = %dec_label_pc_297a0
  %v9_297b2 = call i32 @function_297d0()
  %v0_297b4.pre = load i32, i32* @ebx, align 4
  %v1_297b4.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_297b4

dec_label_pc_297b4:                               ; preds = %bb15, %dec_label_pc_297a0
  %v1_297b8 = phi i32 [ %v9_297b2, %bb15 ], [ %v2_297ae, %dec_label_pc_297a0 ]
  %v1_297b4 = phi i32 [ %v1_297b4.pre, %bb15 ], [ %v3_297ab, %dec_label_pc_297a0 ]
  %v0_297b4 = phi i32 [ %v0_297b4.pre, %bb15 ], [ %v3_297a5, %dec_label_pc_297a0 ]
  %v5_297b6 = icmp slt i32 %v0_297b4, %v1_297b4
  br i1 %v5_297b6, label %dec_label_pc_297bc, label %dec_label_pc_297b8

dec_label_pc_297b8:                               ; preds = %dec_label_pc_297b4
  %v0_297b8 = load i32, i32* @ecx, align 8
  %v7_297b8 = icmp ult i32 %v0_297b8, %v1_297b8
  %v1_297ba = icmp eq i1 %v7_297b8, false
  br i1 %v1_297ba, label %bb16, label %dec_label_pc_297bc

bb16:                                             ; preds = %dec_label_pc_297b8
  %v2_297ba = call i32 @function_297d0()
  br label %dec_label_pc_297bc

dec_label_pc_297bc:                               ; preds = %bb16, %dec_label_pc_297b8, %dec_label_pc_297b4
  %v3_297ba = phi i32 [ %v2_297ba, %bb16 ], [ %v1_297b8, %dec_label_pc_297b8 ], [ %v1_297b8, %dec_label_pc_297b4 ]
  ret i32 %v3_297ba

; uselistorder directives
  uselistorder i32 ()* @function_297d0, { 1, 0 }
  uselistorder i32 ()* @function_297e4, { 1, 0 }
}

define i32 @function_297be(i32 %arg1) local_unnamed_addr {
dec_label_pc_297be:
  %v0_297c4 = load i32, i32* @ebp, align 4
  %v1_297c4 = add i32 %v0_297c4, 1
  store i32 %v1_297c4, i32* @ebp, align 4
  %v2_297c9 = call i32 @unknown_56920(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  %v0_297ce = call i32 @function_297e5()
  ret i32 %v0_297ce
}

define i32 @function_297c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_297c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_297d0() local_unnamed_addr {
dec_label_pc_297d0:
  %v0_297d0 = load i32, i32* @ebp, align 4
  %v1_297d0 = add i32 %v0_297d0, -32
  %v2_297d0 = inttoptr i32 %v1_297d0 to i32*
  %v3_297d0 = load i32, i32* %v2_297d0, align 4
  %v1_297d7 = add i32 %v0_297d0, -28
  %v2_297d7 = inttoptr i32 %v1_297d7 to i32*
  %v3_297d7 = load i32, i32* %v2_297d7, align 4
  %v2_297dd = call i32 @unknown_56920(i32 %v3_297d7, i32 %v3_297d0)
  %v0_297e2 = call i32 @function_297e5()
  ret i32 %v0_297e2

; uselistorder directives
  uselistorder i32 ()* @function_297e5, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @unknown_56920, { 2, 0, 1 }
}

define i32 @function_297e4() local_unnamed_addr {
dec_label_pc_297e4:
  %v0_297e4 = load i32, i32* @eax, align 8
  ret i32 %v0_297e4
}

define i32 @function_297e5() local_unnamed_addr {
dec_label_pc_297e5:
  %v0_297e5 = load i32, i32* @ebp, align 4
  %v1_297e5 = add i32 %v0_297e5, -12
  %v2_297e5 = inttoptr i32 %v1_297e5 to i32*
  %v3_297e5 = load i32, i32* %v2_297e5, align 4
  %v1_297e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_297e8 = xor i32 %v1_297e8, %v3_297e5
  %v3_297e8 = icmp eq i32 %v2_297e8, 0
  store i32 %v2_297e8, i32* @eax, align 8
  br i1 %v3_297e8, label %bb, label %dec_label_pc_297f1

bb:                                               ; preds = %dec_label_pc_297e5
  %v1_297ef = call i32 @function_297f6()
  br label %dec_label_pc_297f1

dec_label_pc_297f1:                               ; preds = %bb, %dec_label_pc_297e5
  %v2_297ef = phi i32 [ %v1_297ef, %bb ], [ %v2_297e8, %dec_label_pc_297e5 ]
  ret i32 %v2_297ef
}

define i32 @function_297f6() local_unnamed_addr {
dec_label_pc_297f6:
  %v0_297fb = load i32, i32* @eax, align 8
  ret i32 %v0_297fb
}

define i32 @_ZSt21__unguarded_partitionIPxxET_S1_S1_RKT0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_297fc:
  %tmp116 = ptrtoint i32* %arg1 to i32
  %v1_29832 = add i32 %arg3, 4
  %v2_29832 = inttoptr i32 %v1_29832 to i32*
  %v1_29835 = inttoptr i32 %arg3 to i32*
  br label %dec_label_pc_29827.outer

dec_label_pc_29827.outer:                         ; preds = %dec_label_pc_298a2, %dec_label_pc_297fc
  %stack_var_-32.0.ph = phi i32 [ %v4_298b4, %dec_label_pc_298a2 ], [ %tmp116, %dec_label_pc_297fc ]
  %stack_var_-36.0.ph = phi i32 [ %storemerge5.in, %dec_label_pc_298a2 ], [ %arg2, %dec_label_pc_297fc ]
  br label %dec_label_pc_29827

dec_label_pc_29823:                               ; preds = %dec_label_pc_29827, %dec_label_pc_29840
  %v4_29823 = add i32 %stack_var_-32.0, 8
  br label %dec_label_pc_29827

dec_label_pc_29827:                               ; preds = %dec_label_pc_29827.outer, %dec_label_pc_29823
  %stack_var_-32.0 = phi i32 [ %v4_29823, %dec_label_pc_29823 ], [ %stack_var_-32.0.ph, %dec_label_pc_29827.outer ]
  %v1_2982c = add i32 %stack_var_-32.0, 4
  %v2_2982c = inttoptr i32 %v1_2982c to i32*
  %v3_2982c = load i32, i32* %v2_2982c, align 4
  %v3_29832 = load i32, i32* %v2_29832, align 4
  %v5_2983e = icmp slt i32 %v3_2982c, %v3_29832
  br i1 %v5_2983e, label %dec_label_pc_29823, label %dec_label_pc_29840

dec_label_pc_29840:                               ; preds = %dec_label_pc_29827
  %v2_29835 = load i32, i32* %v1_29835, align 4
  %v1_2982a = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_2982a = load i32, i32* %v1_2982a, align 4
  %v8_29842 = icmp sle i32 %v3_2982c, %v3_29832
  %v7_29844 = icmp ult i32 %v2_2982a, %v2_29835
  %or.cond = icmp eq i1 %v8_29842, %v7_29844
  br i1 %or.cond, label %dec_label_pc_29823, label %dec_label_pc_29853

dec_label_pc_29853:                               ; preds = %dec_label_pc_29840
  br label %dec_label_pc_2985d

dec_label_pc_2985d:                               ; preds = %dec_label_pc_29883.thread, %dec_label_pc_29853
  %storemerge8.in.in.in = phi i32 [ %stack_var_-36.0.ph, %dec_label_pc_29853 ], [ %storemerge5.in, %dec_label_pc_29883.thread ]
  %storemerge5.in = add i32 %storemerge8.in.in.in, -8
  %v3_29862 = load i32, i32* %v2_29832, align 4
  %v1_29868 = add i32 %storemerge8.in.in.in, -4
  %v2_29868 = inttoptr i32 %v1_29868 to i32*
  %v3_29868 = load i32, i32* %v2_29868, align 4
  %v5_29874 = icmp slt i32 %v3_29862, %v3_29868
  br i1 %v5_29874, label %dec_label_pc_29883.thread, label %dec_label_pc_29876

dec_label_pc_29876:                               ; preds = %dec_label_pc_2985d
  %v1_2986b = inttoptr i32 %storemerge5.in to i32*
  %v2_2986b = load i32, i32* %v1_2986b, align 4
  %v2_29860 = load i32, i32* %v1_29835, align 4
  %v8_29878 = icmp sle i32 %v3_29862, %v3_29868
  %v7_2987a = icmp ult i32 %v2_29860, %v2_2986b
  %or.cond12 = icmp eq i1 %v8_29878, %v7_2987a
  br i1 %or.cond12, label %dec_label_pc_29883.thread, label %dec_label_pc_29889

dec_label_pc_29883.thread:                        ; preds = %dec_label_pc_2985d, %dec_label_pc_29876
  br label %dec_label_pc_2985d

dec_label_pc_29889:                               ; preds = %dec_label_pc_29876
  %v10_2988c = icmp ult i32 %stack_var_-32.0, %storemerge5.in
  store i32 %stack_var_-32.0, i32* @eax, align 8
  br i1 %v10_2988c, label %dec_label_pc_298a2, label %dec_label_pc_29891

dec_label_pc_29891:                               ; preds = %dec_label_pc_29889
  br i1 true, label %bb, label %dec_label_pc_298be

bb:                                               ; preds = %dec_label_pc_29891
  %v1_2989e = call i32 @function_298c3()
  br label %dec_label_pc_298be

dec_label_pc_298a2:                               ; preds = %dec_label_pc_29889
  %v2_298af = call i32 @unknown_56a3b(i32 %stack_var_-32.0, i32 %storemerge5.in)
  %v4_298b4 = add i32 %stack_var_-32.0, 8
  br label %dec_label_pc_29827.outer

dec_label_pc_298be:                               ; preds = %dec_label_pc_29891, %bb
  %v0_298b9 = phi i32 [ %stack_var_-32.0, %dec_label_pc_29891 ], [ %v1_2989e, %bb ]
  ret i32 %v0_298b9

; uselistorder directives
  uselistorder i32 %storemerge5.in, { 1, 2, 4, 0, 3 }
  uselistorder i32 %storemerge8.in.in.in, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 0, 3, 2, 1, 4, 6, 7, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_298be, { 1, 0 }
  uselistorder label %dec_label_pc_29883.thread, { 1, 0 }
  uselistorder label %dec_label_pc_29827, { 1, 0 }
  uselistorder label %dec_label_pc_29823, { 1, 0 }
}

define i32 @function_298c3() local_unnamed_addr {
dec_label_pc_298c3:
  %v0_298c9 = load i32, i32* @eax, align 8
  ret i32 %v0_298c9
}

define i32 @_ZSt13copy_backwardIPxS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_298ca:
  %v1_298f4 = call i32 @unknown_56b4b(i32 %arg2)
  %v1_29901 = call i32 @unknown_56b4b(i32 %arg1)
  %v3_29914 = call i32 @unknown_56b80(i32 %v1_29901, i32 %v1_298f4, i32 %arg3)
  store i32 %v3_29914, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29925

bb:                                               ; preds = %dec_label_pc_298ca
  %v1_29923 = call i32 @function_2992a()
  br label %dec_label_pc_29925

dec_label_pc_29925:                               ; preds = %bb, %dec_label_pc_298ca
  %v2_29923 = phi i32 [ %v1_29923, %bb ], [ %v3_29914, %dec_label_pc_298ca ]
  ret i32 %v2_29923

; uselistorder directives
  uselistorder i32 (i32)* @unknown_56b4b, { 1, 0 }
}

define i32 @function_2992a() local_unnamed_addr {
dec_label_pc_2992a:
  %v0_2992f = load i32, i32* @eax, align 8
  ret i32 %v0_2992f
}

define i32 @_ZSt25__unguarded_linear_insertIPxEvT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_29930:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp112 = ptrtoint i32* %arg1 to i32
  %v1_2994a = add i32 %tmp112, 4
  %v2_2994a = inttoptr i32 %v1_2994a to i32*
  %v3_2994a = load i32, i32* %v2_2994a, align 4
  store i32 %v3_2994a, i32* %edx.global-to-local, align 4
  %v2_2994d = load i32, i32* %arg1, align 4
  br label %dec_label_pc_2997b

dec_label_pc_29961:                               ; preds = %dec_label_pc_2998d, %dec_label_pc_2997b
  %v3_29964 = load i32, i32* %v2_2997e, align 4
  store i32 %v3_29964, i32* %edx.global-to-local, align 4
  %v2_29967 = load i32, i32* %v1_29981, align 4
  store i32 %storemerge7.in.in.in, i32* %ecx.global-to-local, align 8
  %v2_2996c = inttoptr i32 %storemerge7.in.in.in to i32*
  store i32 %v2_29967, i32* %v2_2996c, align 4
  %v0_2996e = load i32, i32* %edx.global-to-local, align 4
  %v1_2996e = load i32, i32* %ecx.global-to-local, align 8
  %v2_2996e = add i32 %v1_2996e, 4
  %v3_2996e = inttoptr i32 %v2_2996e to i32*
  store i32 %v0_2996e, i32* %v3_2996e, align 4
  br label %dec_label_pc_2997b

dec_label_pc_2997b:                               ; preds = %dec_label_pc_29961, %dec_label_pc_29930
  %storemerge7.in.in.in = phi i32 [ %tmp112, %dec_label_pc_29930 ], [ %storemerge4.in, %dec_label_pc_29961 ]
  %storemerge4.in = add i32 %storemerge7.in.in.in, -8
  %v1_2997e = add i32 %storemerge7.in.in.in, -4
  %v2_2997e = inttoptr i32 %v1_2997e to i32*
  %v3_2997e = load i32, i32* %v2_2997e, align 4
  store i32 %v3_2997e, i32* %edx.global-to-local, align 4
  %v1_29981 = inttoptr i32 %storemerge4.in to i32*
  %v2_29981 = load i32, i32* %v1_29981, align 4
  store i32 1, i32* %ecx.global-to-local, align 8
  %v8_2998b = icmp sgt i32 %v3_2997e, %v3_2994a
  br i1 %v8_2998b, label %dec_label_pc_29961, label %dec_label_pc_2998d

dec_label_pc_2998d:                               ; preds = %dec_label_pc_2997b
  %v5_29990 = icmp sge i32 %v3_2997e, %v3_2994a
  %tmp119 = icmp ugt i32 %v2_29981, %v2_2994d
  %or.cond = icmp eq i1 %v5_29990, %tmp119
  br i1 %or.cond, label %dec_label_pc_29961, label %dec_label_pc_299a0

dec_label_pc_299a0:                               ; preds = %dec_label_pc_2998d
  store i32 %storemerge7.in.in.in, i32* %ecx.global-to-local, align 8
  store i32 %v3_2994a, i32* %edx.global-to-local, align 4
  %v2_299a9 = inttoptr i32 %storemerge7.in.in.in to i32*
  store i32 %v2_2994d, i32* %v2_299a9, align 4
  %v0_299ab = load i32, i32* %edx.global-to-local, align 4
  %v1_299ab = load i32, i32* %ecx.global-to-local, align 8
  %v2_299ab = add i32 %v1_299ab, 4
  %v3_299ab = inttoptr i32 %v2_299ab to i32*
  store i32 %v0_299ab, i32* %v3_299ab, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_299ba

bb:                                               ; preds = %dec_label_pc_299a0
  %v1_299b8 = call i32 @function_299bf()
  br label %dec_label_pc_299ba

dec_label_pc_299ba:                               ; preds = %bb, %dec_label_pc_299a0
  %v2_299b8 = phi i32 [ %v1_299b8, %bb ], [ 0, %dec_label_pc_299a0 ]
  ret i32 %v2_299b8

; uselistorder directives
  uselistorder i32* %v1_29981, { 1, 0 }
  uselistorder i32* %v2_2997e, { 1, 0 }
  uselistorder i32 %storemerge4.in, { 1, 0 }
  uselistorder i32 %storemerge7.in.in.in, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v2_2994d, { 1, 0 }
  uselistorder i32 %v3_2994a, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 0, 1 }
}

define i32 @function_299bf() local_unnamed_addr {
dec_label_pc_299bf:
  %v0_299c0 = load i32, i32* @eax, align 8
  ret i32 %v0_299c0
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_299c2:
  %v1_299e5 = call i32 @unknown_56cea(i32 %arg2)
  %v2_299f4 = call i32 @unknown_56d18(i32 %arg1, i32 %v1_299e5)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29a08

bb:                                               ; preds = %dec_label_pc_299c2
  %v1_29a06 = call i32 @function_29a0d()
  br label %dec_label_pc_29a08

dec_label_pc_29a08:                               ; preds = %bb, %dec_label_pc_299c2
  %v2_29a06 = phi i32 [ %v1_29a06, %bb ], [ %arg1, %dec_label_pc_299c2 ]
  ret i32 %v2_29a06

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_29a0d() local_unnamed_addr {
dec_label_pc_29a0d:
  %v0_29a0e = load i32, i32* @eax, align 8
  ret i32 %v0_29a0e
}

define i32 @_ZNSaISt4pairIKSsSsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a12:
  %v1_29a2f = call i32 @unknown_56da4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29a40

bb:                                               ; preds = %dec_label_pc_29a12
  %v1_29a3e = call i32 @function_29a45()
  br label %dec_label_pc_29a40

dec_label_pc_29a40:                               ; preds = %bb, %dec_label_pc_29a12
  %v2_29a3e = phi i32 [ %v1_29a3e, %bb ], [ 0, %dec_label_pc_29a12 ]
  ret i32 %v2_29a3e
}

define i32 @function_29a45() local_unnamed_addr {
dec_label_pc_29a45:
  %v0_29a46 = load i32, i32* @eax, align 8
  ret i32 %v0_29a46
}

define i32 @_ZSt11__addressofISt4pairIKSsSsEEPT_RS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a47:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29a6d

bb:                                               ; preds = %dec_label_pc_29a47
  %v2_29a6b = call i32 @function_29a72(i32 %arg1)
  br label %dec_label_pc_29a6d

dec_label_pc_29a6d:                               ; preds = %bb, %dec_label_pc_29a47
  %v3_29a6b = phi i32 [ %v2_29a6b, %bb ], [ %arg1, %dec_label_pc_29a47 ]
  ret i32 %v3_29a6b
}

define i32 @function_29a72(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a72:
  %v0_29a73 = load i32, i32* @eax, align 8
  ret i32 %v0_29a73
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29a74:
  %v3_29aa6 = call i32 @unknown_56e30(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29ab7

bb:                                               ; preds = %dec_label_pc_29a74
  %v1_29ab5 = call i32 @function_29abc()
  br label %dec_label_pc_29ab7

dec_label_pc_29ab7:                               ; preds = %bb, %dec_label_pc_29a74
  %v2_29ab5 = phi i32 [ %v1_29ab5, %bb ], [ 0, %dec_label_pc_29a74 ]
  ret i32 %v2_29ab5
}

define i32 @function_29abc() local_unnamed_addr {
dec_label_pc_29abc:
  %v0_29abd = load i32, i32* @eax, align 8
  ret i32 %v0_29abd
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29abe:
  %v1_29ade = add i32 %arg2, 12
  %v2_29ade = inttoptr i32 %v1_29ade to i32*
  %v3_29ade = load i32, i32* %v2_29ade, align 4
  %v2_29aeb = call i32 @unknown_52b76(i32 %arg1, i32 %v3_29ade)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29aff

bb:                                               ; preds = %dec_label_pc_29abe
  %v1_29afd = call i32 @function_29b04()
  br label %dec_label_pc_29aff

dec_label_pc_29aff:                               ; preds = %bb, %dec_label_pc_29abe
  %v2_29afd = phi i32 [ %v1_29afd, %bb ], [ %arg1, %dec_label_pc_29abe ]
  ret i32 %v2_29afd

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_29b04() local_unnamed_addr {
dec_label_pc_29b04:
  %v0_29b05 = load i32, i32* @eax, align 8
  ret i32 %v0_29b05
}

define i32 @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29b08:
  %v3_29b43 = call i32 @unknown_56128(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_29b43, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29b54

bb:                                               ; preds = %dec_label_pc_29b08
  %v1_29b52 = call i32 @function_29b59()
  br label %dec_label_pc_29b54

dec_label_pc_29b54:                               ; preds = %bb, %dec_label_pc_29b08
  %v2_29b52 = phi i32 [ %v1_29b52, %bb ], [ %v3_29b43, %dec_label_pc_29b08 ]
  ret i32 %v2_29b52
}

define i32 @function_29b59() local_unnamed_addr {
dec_label_pc_29b59:
  %v0_29b5a = load i32, i32* @eax, align 8
  ret i32 %v0_29b5a
}

define i32 @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_() local_unnamed_addr {
dec_label_pc_29b5b:
  %eax.global-to-local = alloca i32, align 4
  %v17_29b5e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_29b5e
}

define i32 @function_29b62(i32 %arg1) local_unnamed_addr {
dec_label_pc_29b62:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_29b62 = load i32, i32* @ebp, align 4
  %v1_29b62 = add i32 %v0_29b62, 1
  store i32 %v1_29b62, i32* @ebp, align 4
  %v0_29b63 = load i32, i32* @ecx, align 8
  %v1_29b63 = add i32 %v0_29b63, -1587157947
  %v2_29b63 = inttoptr i32 %v1_29b63 to i8*
  %v3_29b63 = load i8, i8* %v2_29b63, align 1
  %v5_29b63 = trunc i32 %v0_29b63 to i8
  %v6_29b63 = or i8 %v3_29b63, %v5_29b63
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_29b63, i8* %v2_29b63, align 1
  %v0_29b69 = load i32, i32* @eax, align 8
  %v1_29b69 = trunc i32 %v0_29b69 to i8
  %v2_29b69 = load i1, i1* %cf.global-to-local, align 1
  %v3_29b69 = zext i1 %v2_29b69 to i8
  %v4_29b69 = add i8 %v3_29b69, %v1_29b69
  %v19_29b69 = icmp ule i8 %v4_29b69, %v1_29b69
  %v21_29b69 = icmp eq i1 %v2_29b69, %v19_29b69
  store i1 %v21_29b69, i1* %cf.global-to-local, align 1
  %v22_29b69 = zext i8 %v4_29b69 to i32
  %v24_29b69 = and i32 %v0_29b69, -256
  %v25_29b69 = or i32 %v22_29b69, %v24_29b69
  store i32 %v25_29b69, i32* %eax.global-to-local, align 8
  %v1_29b6b = inttoptr i32 %v25_29b69 to i8*
  %v2_29b6b = load i8, i8* %v1_29b6b, align 1
  %v5_29b6b = add i8 %v2_29b6b, %v4_29b69
  store i8 %v5_29b6b, i8* %v1_29b6b, align 1
  %v0_29b6d = load i32, i32* %eax.global-to-local, align 8
  %v1_29b6d = load i32, i32* @ebp, align 4
  %v2_29b6d = add i32 %v1_29b6d, -12
  %v3_29b6d = inttoptr i32 %v2_29b6d to i32*
  store i32 %v0_29b6d, i32* %v3_29b6d, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_29b72 = load i32, i32* @ebp, align 4
  %v1_29b72 = add i32 %v0_29b72, -28
  %v2_29b72 = inttoptr i32 %v1_29b72 to i32*
  %v3_29b72 = load i32, i32* %v2_29b72, align 4
  store i32 %v3_29b72, i32* @eax, align 8
  %v1_29b75 = add i32 %v0_29b72, -12
  %v2_29b75 = inttoptr i32 %v1_29b75 to i32*
  %v3_29b75 = load i32, i32* %v2_29b75, align 4
  %v1_29b78 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29b78 = xor i32 %v1_29b78, %v3_29b75
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_29b78 = icmp eq i32 %v2_29b78, 0
  store i32 %v2_29b78, i32* @edx, align 4
  br i1 %v3_29b78, label %bb, label %dec_label_pc_29b81

bb:                                               ; preds = %dec_label_pc_29b62
  %v1_29b7f = call i32 @function_29b86()
  store i32 %v1_29b7f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_29b81

dec_label_pc_29b81:                               ; preds = %bb, %dec_label_pc_29b62
  %v2_29b7f = phi i32 [ %v1_29b7f, %bb ], [ %v3_29b72, %dec_label_pc_29b62 ]
  ret i32 %v2_29b7f

; uselistorder directives
  uselistorder i8 %v4_29b69, { 0, 2, 1 }
  uselistorder i8 %v1_29b69, { 1, 0 }
}

define i32 @function_29b86() local_unnamed_addr {
dec_label_pc_29b86:
  %v0_29b87 = load i32, i32* @eax, align 8
  ret i32 %v0_29b87
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_nodeENS8_ILi3EEEEENSB_INS4_5list3IbxdEEEEE16initializer_nodeENS8_ILi4EEEEENSB_INS4_5list2IxdEEEEE16initializer_node10initializeEPvRKx(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_29b88:
  %edx.global-to-local = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_29bb3 = call i32 @function_2f8b4(i32 8, i32 %arg1)
  %v1_29bba = icmp eq i32 %v2_29bb3, 0
  br i1 %v1_29bba, label %dec_label_pc_29bcb, label %dec_label_pc_29bbe

dec_label_pc_29bbe:                               ; preds = %dec_label_pc_29b88
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v1_29bc1 = add i32 %tmp102, 4
  %v2_29bc1 = inttoptr i32 %v1_29bc1 to i32*
  %v3_29bc1 = load i32, i32* %v2_29bc1, align 4
  store i32 %v3_29bc1, i32* %edx.global-to-local, align 4
  %v2_29bc4 = load i32, i32* %arg2, align 4
  %v2_29bc6 = inttoptr i32 %v2_29bb3 to i32*
  store i32 %v2_29bc4, i32* %v2_29bc6, align 4
  %v0_29bc8 = load i32, i32* %edx.global-to-local, align 4
  %v2_29bc8 = add i32 %v2_29bb3, 4
  %v3_29bc8 = inttoptr i32 %v2_29bc8 to i32*
  store i32 %v0_29bc8, i32* %v3_29bc8, align 4
  br label %dec_label_pc_29bcb

dec_label_pc_29bcb:                               ; preds = %dec_label_pc_29bbe, %dec_label_pc_29b88
  store i32 4, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_29bdc

bb:                                               ; preds = %dec_label_pc_29bcb
  %v1_29bda = call i32 @function_29be1()
  br label %dec_label_pc_29bdc

dec_label_pc_29bdc:                               ; preds = %bb, %dec_label_pc_29bcb
  %v2_29bda = phi i32 [ %v1_29bda, %bb ], [ 4, %dec_label_pc_29bcb ]
  ret i32 %v2_29bda

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29be1() local_unnamed_addr {
dec_label_pc_29be1:
  %v0_29be2 = load i32, i32* @eax, align 8
  ret i32 %v0_29be2
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_9destroyerEPvEENT_11result_typeEiiRSN_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29be3:
  ret i32 %arg3
}

define i32 @function_29c54() local_unnamed_addr {
dec_label_pc_29c54:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29c54 = load i32, i32* %ecx.global-to-local, align 8
  %v1_29c54 = add i32 %v0_29c54, -1
  store i32 %v1_29c54, i32* %ecx.global-to-local, align 8
  %v0_29c56 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29c56
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_9copy_intoEPKvEENT_11result_typeEiiRSO_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29c57:
  ret i32 %arg4
}

define i32 @function_29ca0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29ca0:
  %v0_29ca0 = load i32, i32* @ebp, align 4
  %v1_29ca7 = add i32 %v0_29ca0, 2
  store i32 %v1_29ca7, i32* @ebp, align 4
  %v1_29cad = add i32 %v0_29ca0, -26
  %v2_29cad = inttoptr i32 %v1_29cad to i32*
  %v3_29cad = load i32, i32* %v2_29cad, align 4
  %v1_29cb3 = call i32 @unknown_5757f(i32 %v3_29cad)
  %v0_29cb8 = load i32, i32* @ebp, align 4
  %v1_29cb8 = add i32 %v0_29cb8, -12
  %v2_29cb8 = inttoptr i32 %v1_29cb8 to i32*
  %v3_29cb8 = load i32, i32* %v2_29cb8, align 4
  %v1_29cbb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29cbb = xor i32 %v1_29cbb, %v3_29cb8
  %v3_29cbb = icmp eq i32 %v2_29cbb, 0
  store i32 %v2_29cbb, i32* @eax, align 8
  br i1 %v3_29cbb, label %bb, label %dec_label_pc_29cc4

bb:                                               ; preds = %dec_label_pc_29ca0
  %v1_29cc2 = call i32 @function_29cc9()
  br label %dec_label_pc_29cc4

dec_label_pc_29cc4:                               ; preds = %bb, %dec_label_pc_29ca0
  %v3_29cc2 = phi i32 [ %v1_29cc2, %bb ], [ %v2_29cbb, %dec_label_pc_29ca0 ]
  ret i32 %v3_29cc2
}

define i32 @function_29cc9() local_unnamed_addr {
dec_label_pc_29cc9:
  %v0_29cca = load i32, i32* @eax, align 8
  ret i32 %v0_29cca
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E12using_backupEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_29ccc:
  %v2_29ce6 = load i32, i32* %arg1, align 4
  %tmp103 = icmp slt i32 %v2_29ce6, 0
  %v2_29ce8 = zext i1 %tmp103 to i32
  store i32 %v2_29ce8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29cf7

bb:                                               ; preds = %dec_label_pc_29ccc
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_29cf5 = call i32 @function_29cfc(i32 %tmp100)
  br label %dec_label_pc_29cf7

dec_label_pc_29cf7:                               ; preds = %bb, %dec_label_pc_29ccc
  %v3_29cf5 = phi i32 [ %v2_29cf5, %bb ], [ %v2_29ce8, %dec_label_pc_29ccc ]
  ret i32 %v3_29cf5

; uselistorder directives
  uselistorder i32 %v2_29ce8, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_29cfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_29cfc:
  %v0_29cfd = load i32, i32* @eax, align 8
  ret i32 %v0_29cfd
}

define i32 @_ZN5boost3getIKxSsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEENS2_IS3_INS4_10Value_implIS7_EESaISD_EEEEbxdNS_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EENS_11add_pointerIKT_E4typeEPKNS_7variantIT0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_T19_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_29cfe:
  %v10_29d15 = icmp eq i32 %arg1, 0
  %v1_29d19 = icmp eq i1 %v10_29d15, false
  br i1 %v1_29d19, label %dec_label_pc_29d22, label %dec_label_pc_29d1b

dec_label_pc_29d1b:                               ; preds = %dec_label_pc_29cfe
  ret i32 0

dec_label_pc_29d22:                               ; preds = %dec_label_pc_29cfe
  ret i32 %arg1
}

define i32 @function_29d32(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29d32:
  %v0_29d32 = load i32, i32* @eax, align 8
  %v5_29d32 = mul i32 %v0_29d32, 2
  %v20_29d32 = and i32 %v5_29d32, 254
  %v22_29d32 = and i32 %v0_29d32, -256
  %v23_29d32 = or i32 %v20_29d32, %v22_29d32
  store i32 %v23_29d32, i32* @eax, align 8
  %v0_29d34 = load i32, i32* @ebp, align 4
  %v1_29d34 = add i32 %v0_29d34, -12
  %v2_29d34 = inttoptr i32 %v1_29d34 to i32*
  %v3_29d34 = load i32, i32* %v2_29d34, align 4
  %v1_29d37 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29d37 = icmp eq i32 %v1_29d37, %v3_29d34
  br i1 %v3_29d37, label %bb, label %dec_label_pc_29d40

bb:                                               ; preds = %dec_label_pc_29d32
  %v1_29d3e = call i32 @function_29d45()
  br label %dec_label_pc_29d40

dec_label_pc_29d40:                               ; preds = %bb, %dec_label_pc_29d32
  %v2_29d3e = phi i32 [ %v1_29d3e, %bb ], [ %v23_29d32, %dec_label_pc_29d32 ]
  ret i32 %v2_29d3e

; uselistorder directives
  uselistorder i32 %v0_29d32, { 1, 0 }
}

define i32 @function_29d45() local_unnamed_addr {
dec_label_pc_29d45:
  %v0_29d46 = load i32, i32* @eax, align 8
  ret i32 %v0_29d46
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_nodeENS8_ILi3EEEEENSB_INS4_5list3IbxdEEEEE16initializer_node10initializeEPvb(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_29d47:
  ret i32 %arg1
}

define i32 @function_29d70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29d70:
  %v2_29d70 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_29d70 = load i32, i32* @eax, align 8
  %v4_29d70 = trunc i32 %v3_29d70 to i8
  %v5_29d70 = add i8 %v4_29d70, %v2_29d70
  %v10_29d70 = icmp ult i8 %v5_29d70, %v2_29d70
  store i1 %v10_29d70, i1* @cf, align 1
  %v21_29d70 = inttoptr i32 %v3_29d70 to i8*
  store i8 %v5_29d70, i8* %v21_29d70, align 1
  %v0_29d72 = call i32 @function_2fa73()
  %v2_29d77 = icmp eq i32 %v0_29d72, 0
  br i1 %v2_29d77, label %dec_label_pc_29d81, label %dec_label_pc_29d7b

dec_label_pc_29d7b:                               ; preds = %dec_label_pc_29d70
  %v1_29d72 = inttoptr i32 %v0_29d72 to i8*
  %v0_29d7b = load i32, i32* @ebp, align 4
  %v1_29d7b = add i32 %v0_29d7b, -32
  %v2_29d7b = inttoptr i32 %v1_29d7b to i8*
  %v3_29d7b = load i8, i8* %v2_29d7b, align 1
  store i8 %v3_29d7b, i8* %v1_29d72, align 1
  br label %dec_label_pc_29d81

dec_label_pc_29d81:                               ; preds = %dec_label_pc_29d7b, %dec_label_pc_29d70
  store i32 3, i32* @eax, align 8
  %v0_29d86 = load i32, i32* @ebp, align 4
  %v1_29d86 = add i32 %v0_29d86, -12
  %v2_29d86 = inttoptr i32 %v1_29d86 to i32*
  %v3_29d86 = load i32, i32* %v2_29d86, align 4
  %v1_29d89 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29d89 = icmp eq i32 %v1_29d89, %v3_29d86
  br i1 %v3_29d89, label %bb, label %dec_label_pc_29d92

bb:                                               ; preds = %dec_label_pc_29d81
  %v1_29d90 = call i32 @function_29d97()
  br label %dec_label_pc_29d92

dec_label_pc_29d92:                               ; preds = %bb, %dec_label_pc_29d81
  %v2_29d90 = phi i32 [ %v1_29d90, %bb ], [ 3, %dec_label_pc_29d81 ]
  ret i32 %v2_29d90

; uselistorder directives
  uselistorder i32 %v0_29d72, { 1, 0 }
  uselistorder i8 %v2_29d70, { 1, 0 }
}

define i32 @function_29d97() local_unnamed_addr {
dec_label_pc_29d97:
  %v0_29d98 = load i32, i32* @eax, align 8
  ret i32 %v0_29d98
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKbEEEENT_11result_typeERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29d9a:
  %stack_var_-20 = alloca i32, align 4
  %v2_29dbe = ptrtoint i32* %stack_var_-20 to i32
  %v2_29dc4 = call i32 @unknown_57c42(i32 %v2_29dbe, i32 %arg2)
  %v2_29dd6 = call i32 @unknown_57c7a(i32 %arg1, i32 %v2_29dbe)
  store i32 %v2_29dd6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29de7

bb:                                               ; preds = %dec_label_pc_29d9a
  %v1_29de5 = call i32 @function_29dec()
  br label %dec_label_pc_29de7

dec_label_pc_29de7:                               ; preds = %bb, %dec_label_pc_29d9a
  %v2_29de5 = phi i32 [ %v1_29de5, %bb ], [ %v2_29dd6, %dec_label_pc_29d9a ]
  ret i32 %v2_29de5
}

define i32 @function_29dec() local_unnamed_addr {
dec_label_pc_29dec:
  %v0_29ded = load i32, i32* @eax, align 8
  ret i32 %v0_29ded
}

define i32 @_ZNSaIN11json_spirit9Pair_implINS_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29dee:
  %v0_29dfa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29e0b = call i32 @unknown_57d3c(i32 %arg1)
  ret i32 %v0_29dfa
}

define i32 @function_29e14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29e14:
  %v0_29e14 = load i32, i32* @eax, align 8
  %v1_29e14 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29e14 = xor i32 %v1_29e14, %v0_29e14
  %v3_29e14 = icmp eq i32 %v2_29e14, 0
  store i32 %v2_29e14, i32* @eax, align 8
  br i1 %v3_29e14, label %bb, label %dec_label_pc_29e1c

bb:                                               ; preds = %dec_label_pc_29e14
  %v1_29e1a = call i32 @function_29e21()
  br label %dec_label_pc_29e1c

dec_label_pc_29e1c:                               ; preds = %bb, %dec_label_pc_29e14
  %v2_29e1a = phi i32 [ %v1_29e1a, %bb ], [ %v2_29e14, %dec_label_pc_29e14 ]
  ret i32 %v2_29e1a
}

define i32 @function_29e21() local_unnamed_addr {
dec_label_pc_29e21:
  %v0_29e22 = load i32, i32* @eax, align 8
  ret i32 %v0_29e22
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e24:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29e47

bb:                                               ; preds = %dec_label_pc_29e24
  %v2_29e45 = call i32 @function_29e4c(i32 %arg1)
  br label %dec_label_pc_29e47

dec_label_pc_29e47:                               ; preds = %bb, %dec_label_pc_29e24
  %v3_29e45 = phi i32 [ %v2_29e45, %bb ], [ 0, %dec_label_pc_29e24 ]
  ret i32 %v3_29e45
}

define i32 @function_29e4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e4c:
  %v0_29e4d = load i32, i32* @eax, align 8
  ret i32 %v0_29e4d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29e4e:
  ret i32 %arg2
}

define i32 @function_29e8c() local_unnamed_addr {
dec_label_pc_29e8c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29e8c = load i32, i32* %ecx.global-to-local, align 8
  %v1_29e8c = add i32 %v0_29e8c, -1
  store i32 %v1_29e8c, i32* %ecx.global-to-local, align 8
  %v0_29e8e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29e8e
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEEEEvT_S8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29e8f:
  %v0_29ea1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v15_29ec8104 = icmp eq i32 %arg1, %arg2
  %v1_29ecb105 = icmp eq i1 %v15_29ec8104, false
  %v5_29ece109 = icmp eq i1 %v1_29ecb105, false
  %v1_29ed0110 = icmp eq i1 %v5_29ece109, false
  br i1 %v1_29ed0110, label %dec_label_pc_29eae, label %dec_label_pc_29ed2

dec_label_pc_29eae:                               ; preds = %dec_label_pc_29e8f, %dec_label_pc_29eae
  %stack_var_-32.0111 = phi i32 [ %v4_29ec1, %dec_label_pc_29eae ], [ %arg1, %dec_label_pc_29e8f ]
  %v1_29eb4 = call i32 @unknown_57e07(i32 %stack_var_-32.0111)
  %v1_29ebc = call i32 @unknown_57e34(i32 %v1_29eb4)
  %v4_29ec1 = add i32 %stack_var_-32.0111, 24
  %v15_29ec8 = icmp eq i32 %v4_29ec1, %arg2
  %v1_29ecb = icmp eq i1 %v15_29ec8, false
  %v5_29ece = icmp eq i1 %v1_29ecb, false
  %v1_29ed0 = icmp eq i1 %v5_29ece, false
  br i1 %v1_29ed0, label %dec_label_pc_29eae, label %dec_label_pc_29ed2

dec_label_pc_29ed2:                               ; preds = %dec_label_pc_29eae, %dec_label_pc_29e8f
  ret i32 %v0_29ea1

; uselistorder directives
  uselistorder i32 %v4_29ec1, { 1, 0 }
  uselistorder i32 %stack_var_-32.0111, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_29eae, { 1, 0 }
}

define i32 @function_29ed9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29ed9:
  %v2_29ed9 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_29ed9 = load i32, i32* @eax, align 8
  %v4_29ed9 = trunc i32 %v3_29ed9 to i8
  %v5_29ed9 = add i8 %v4_29ed9, %v2_29ed9
  %v21_29ed9 = inttoptr i32 %v3_29ed9 to i8*
  store i8 %v5_29ed9, i8* %v21_29ed9, align 1
  %v0_29edb = load i32, i32* @ebp, align 4
  %v1_29edb = load i32, i32* @eax, align 8
  %v3_29edb = add i32 %v0_29edb, -24
  %v4_29edb = add i32 %v3_29edb, %v1_29edb
  %v5_29edb = inttoptr i32 %v4_29edb to i8*
  %v6_29edb = load i8, i8* %v5_29edb, align 1
  %v7_29edb = load i32, i32* @edx, align 4
  %v8_29edb = udiv i32 %v7_29edb, 256
  %v9_29edb = trunc i32 %v8_29edb to i8
  %v10_29edb = add i8 %v9_29edb, %v6_29edb
  store i8 %v10_29edb, i8* %v5_29edb, align 1
  %v31_29edb = load i32, i32* @eax, align 8
  ret i32 %v31_29edb
}

define i32 @function_29ee2() local_unnamed_addr {
dec_label_pc_29ee2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29ee2 = load i32, i32* %ecx.global-to-local, align 8
  %v1_29ee2 = add i32 %v0_29ee2, -1
  store i32 %v1_29ee2, i32* %ecx.global-to-local, align 8
  %v0_29ee4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29ee4
}

define i32 @_ZSt12__miter_baseIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEENSt11_Miter_baseIT_E13iterator_typeES7_() local_unnamed_addr {
dec_label_pc_29ee5:
  %eax.global-to-local = alloca i32, align 4
  %v17_29ee8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_29ee8
}

define i32 @function_29eec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29eec:
  %v0_29eec = load i32, i32* @ebp, align 4
  %v1_29eec = add i32 %v0_29eec, 1
  store i32 %v1_29eec, i32* @ebp, align 4
  %v15_29eec = load i32, i32* @eax, align 8
  ret i32 %v15_29eec
}

define i32 @function_29eee(i32 %arg1) local_unnamed_addr {
dec_label_pc_29eee:
  %v0_29eee = load i32, i32* @eax, align 8
  %v1_29eee = load i32, i32* @ebp, align 4
  %v2_29eee = add i32 %v1_29eee, -28
  %v3_29eee = inttoptr i32 %v2_29eee to i32*
  store i32 %v0_29eee, i32* %v3_29eee, align 4
  %v0_29ef1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29ef7 = load i32, i32* @ebp, align 4
  %v2_29ef7 = add i32 %v1_29ef7, -12
  %v3_29ef7 = inttoptr i32 %v2_29ef7 to i32*
  store i32 %v0_29ef1, i32* %v3_29ef7, align 4
  %v0_29efc = load i32, i32* @ebp, align 4
  %v1_29efc = add i32 %v0_29efc, -28
  %v2_29efc = inttoptr i32 %v1_29efc to i32*
  %v3_29efc = load i32, i32* %v2_29efc, align 4
  %v1_29f02 = call i32 @unknown_57ebf(i32 %v3_29efc)
  store i32 %v1_29f02, i32* @eax, align 8
  %v0_29f07 = load i32, i32* @ebp, align 4
  %v1_29f07 = add i32 %v0_29f07, -12
  %v2_29f07 = inttoptr i32 %v1_29f07 to i32*
  %v3_29f07 = load i32, i32* %v2_29f07, align 4
  %v1_29f0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29f0a = xor i32 %v1_29f0a, %v3_29f07
  %v3_29f0a = icmp eq i32 %v2_29f0a, 0
  store i32 %v2_29f0a, i32* @edx, align 4
  br i1 %v3_29f0a, label %bb, label %dec_label_pc_29f13

bb:                                               ; preds = %dec_label_pc_29eee
  %v1_29f11 = call i32 @function_29f18()
  br label %dec_label_pc_29f13

dec_label_pc_29f13:                               ; preds = %bb, %dec_label_pc_29eee
  %v2_29f11 = phi i32 [ %v1_29f11, %bb ], [ %v1_29f02, %dec_label_pc_29eee ]
  ret i32 %v2_29f11
}

define i32 @function_29f18() local_unnamed_addr {
dec_label_pc_29f18:
  %v0_29f19 = load i32, i32* @eax, align 8
  ret i32 %v0_29f19
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29f1a:
  %v1_29f45 = call i32 @unknown_57f21(i32 %arg3)
  %v1_29f52 = call i32 @unknown_57f21(i32 %arg2)
  %v1_29f5f = call i32 @unknown_57f21(i32 %arg1)
  %v3_29f6f = call i32 @unknown_57f56(i32 %v1_29f5f, i32 %v1_29f52, i32 %v1_29f45)
  store i32 %v3_29f6f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29f80

bb:                                               ; preds = %dec_label_pc_29f1a
  %v1_29f7e = call i32 @function_29f85()
  br label %dec_label_pc_29f80

dec_label_pc_29f80:                               ; preds = %bb, %dec_label_pc_29f1a
  %v2_29f7e = phi i32 [ %v1_29f7e, %bb ], [ %v3_29f6f, %dec_label_pc_29f1a ]
  ret i32 %v2_29f7e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_57f21, { 2, 1, 0 }
}

define i32 @function_29f85() local_unnamed_addr {
dec_label_pc_29f85:
  %v0_29f8b = load i32, i32* @eax, align 8
  ret i32 %v0_29f8b
}

define i32 @_ZSt4swapIN11json_spirit10Value_typeEEvRT_S3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29f8c:
  %v2_29fac = load i32, i32* %arg1, align 4
  %v1_29fb4 = inttoptr i32 %arg2 to i32*
  %v2_29fb4 = load i32, i32* %v1_29fb4, align 4
  store i32 %v2_29fb4, i32* %arg1, align 4
  store i32 %v2_29fac, i32* %v1_29fb4, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_29fcf

bb:                                               ; preds = %dec_label_pc_29f8c
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_29fcd = call i32 @function_29fd4(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_29fcf

dec_label_pc_29fcf:                               ; preds = %bb, %dec_label_pc_29f8c
  %v4_29fcd = phi i32 [ %v3_29fcd, %bb ], [ 0, %dec_label_pc_29f8c ]
  ret i32 %v4_29fcd

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_29fd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29fd4:
  %v0_29fd5 = load i32, i32* @eax, align 8
  ret i32 %v0_29fd5
}

define i32 @_ZSt4swapIN5boost7variantISsNS0_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEENS2_IS3_INS4_10Value_implIS7_EESaISD_EEEEbxdNS0_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EEEvRT_SM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29fd6:
  %stack_var_-28 = alloca i32, align 4
  %v2_29ffb = ptrtoint i32* %stack_var_-28 to i32
  %v2_2a001 = call i32 @unknown_58066(i32 %v2_29ffb, i32 %arg1)
  %v2_2a013 = call i32 @unknown_580e0(i32 %arg1, i32 %arg2)
  %v2_2a025 = call i32 @unknown_580e0(i32 %arg2, i32 %v2_29ffb)
  %v1_2a030 = call i32 @unknown_412e2(i32 %v2_29ffb)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a041

bb:                                               ; preds = %dec_label_pc_29fd6
  %v1_2a03f = call i32 @function_2a05f()
  store i32 %v1_2a03f, i32* @eax, align 8
  br label %dec_label_pc_2a041

dec_label_pc_2a041:                               ; preds = %bb, %dec_label_pc_29fd6
  %v0_2a041 = call i32 @function_2a05a()
  ret i32 %v0_2a041

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_580e0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a044() local_unnamed_addr {
dec_label_pc_2a044:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a044 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a044
}

define i32 @function_2a054(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a054:
  %v0_2a054 = load i32, i32* @eax, align 8
  %v11_2a054 = and i32 %v0_2a054, -24
  ret i32 %v11_2a054
}

define i32 @function_2a05a() local_unnamed_addr {
dec_label_pc_2a05a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a05f() local_unnamed_addr {
dec_label_pc_2a05f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a061(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a061:
  %v0_2a061 = load i32, i32* @eax, align 8
  %v11_2a061 = xor i32 %v0_2a061, 91
  store i32 %arg1, i32* @ebp, align 4
  ret i32 %v11_2a061
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a066:
  ret i32 0
}

define i32 @function_2a07e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a07e:
  %v0_2a07e = load i32, i32* @ebp, align 4
  %v1_2a07e = add i32 %v0_2a07e, 1
  store i32 %v1_2a07e, i32* @ebp, align 4
  %v0_2a083 = call i32 @unknown_48062()
  %v1_2a08b = call i32 @unknown_581b6(i32 %v0_2a083)
  store i32 %v1_2a08b, i32* @eax, align 8
  %v0_2a090 = load i32, i32* @ebp, align 4
  %v1_2a090 = add i32 %v0_2a090, -12
  %v2_2a090 = inttoptr i32 %v1_2a090 to i32*
  %v3_2a090 = load i32, i32* %v2_2a090, align 4
  %v1_2a093 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a093 = icmp eq i32 %v1_2a093, %v3_2a090
  br i1 %v3_2a093, label %bb, label %dec_label_pc_2a09c

bb:                                               ; preds = %dec_label_pc_2a07e
  %v1_2a09a = call i32 @function_2a0a1()
  br label %dec_label_pc_2a09c

dec_label_pc_2a09c:                               ; preds = %bb, %dec_label_pc_2a07e
  %v2_2a09a = phi i32 [ %v1_2a09a, %bb ], [ %v1_2a08b, %dec_label_pc_2a07e ]
  ret i32 %v2_2a09a
}

define i32 @function_2a0a1() local_unnamed_addr {
dec_label_pc_2a0a1:
  %v0_2a0a2 = load i32, i32* @eax, align 8
  ret i32 %v0_2a0a2
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a0a4:
  %v1_2a0cd = call i32 @unknown_581f4(i32 %arg1)
  %v10_2a0d2 = icmp ult i32 %v1_2a0cd, %arg2
  %v1_2a0d5 = zext i1 %v10_2a0d2 to i32
  %v3_2a0d5 = and i32 %v1_2a0cd, -256
  %v4_2a0d5 = or i32 %v1_2a0d5, %v3_2a0d5
  %v5_2a0d8 = icmp eq i1 %v10_2a0d2, false
  br i1 %v5_2a0d8, label %bb, label %dec_label_pc_2a0dc

bb:                                               ; preds = %dec_label_pc_2a0a4
  %v1_2a0da = call i32 @function_2a0e1()
  br label %dec_label_pc_2a0dc

dec_label_pc_2a0dc:                               ; preds = %bb, %dec_label_pc_2a0a4
  %v2_2a0da = phi i32 [ %v1_2a0da, %bb ], [ %v4_2a0d5, %dec_label_pc_2a0a4 ]
  ret i32 %v2_2a0da

; uselistorder directives
  uselistorder i1 %v10_2a0d2, { 1, 0 }
}

define i32 @function_2a0e1() local_unnamed_addr {
dec_label_pc_2a0e1:
  %v0_2a0e1 = load i32, i32* @ebp, align 4
  %v1_2a0e1 = add i32 %v0_2a0e1, -32
  %v2_2a0e1 = inttoptr i32 %v1_2a0e1 to i32*
  %v3_2a0e1 = load i32, i32* %v2_2a0e1, align 4
  %v2_2a0e8 = mul i32 %v3_2a0e1, 3
  ret i32 %v2_2a0e8
}

define i32 @function_2a0ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a0ea:
  %v0_2a0ea = load i32, i32* @eax, align 8
  %v2_2a0ea = mul i32 %v0_2a0ea, 8
  ret i32 %v2_2a0ea
}

define i32 @function_2a105() local_unnamed_addr {
dec_label_pc_2a105:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a105 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2a105 = add i32 %v0_2a105, -1
  store i32 %v1_2a105, i32* %ecx.global-to-local, align 8
  %v0_2a107 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a107
}

define i32 @_ZSt22__uninitialized_copy_aIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_S4_ET0_T_S7_S6_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2a108:
  %v7_2a145 = call i32 @unknown_58287(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_2a145, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a156

bb:                                               ; preds = %dec_label_pc_2a108
  %v1_2a154 = call i32 @function_2a15b()
  br label %dec_label_pc_2a156

dec_label_pc_2a156:                               ; preds = %bb, %dec_label_pc_2a108
  %v2_2a154 = phi i32 [ %v1_2a154, %bb ], [ %v7_2a145, %dec_label_pc_2a108 ]
  ret i32 %v2_2a154

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a15b() local_unnamed_addr {
dec_label_pc_2a15b:
  %v0_2a15c = load i32, i32* @eax, align 8
  ret i32 %v0_2a15c
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_node10initializeEPvRKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a15d:
  store i1 false, i1* @cf, align 1
  store i32 0, i32* @eax, align 8
  %v2_2a18b = call i32 @function_2fe89(i32 4, i32 %arg1)
  %v1_2a192 = icmp eq i32 %v2_2a18b, 0
  br i1 %v1_2a192, label %bb, label %dec_label_pc_2a196

bb:                                               ; preds = %dec_label_pc_2a15d
  %v1_2a194 = call i32 @function_2a1a5()
  br label %dec_label_pc_2a196

dec_label_pc_2a196:                               ; preds = %bb, %dec_label_pc_2a15d
  ret i32 %arg2
}

define i32 @function_2a1a5() local_unnamed_addr {
dec_label_pc_2a1a5:
  store i32 0, i32* @eax, align 8
  %v0_2a1aa = load i32, i32* @ebp, align 4
  %v1_2a1aa = add i32 %v0_2a1aa, -28
  %v2_2a1aa = inttoptr i32 %v1_2a1aa to i32*
  %v3_2a1aa = load i32, i32* %v2_2a1aa, align 4
  %v1_2a1ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a1ad = icmp eq i32 %v1_2a1ad, %v3_2a1aa
  br i1 %v3_2a1ad, label %bb, label %dec_label_pc_2a1b6

bb:                                               ; preds = %dec_label_pc_2a1a5
  %v1_2a1b4 = call i32 @function_2a1d5()
  store i32 %v1_2a1b4, i32* @eax, align 8
  br label %dec_label_pc_2a1b6

dec_label_pc_2a1b6:                               ; preds = %bb, %dec_label_pc_2a1a5
  %v0_2a1b6 = call i32 @function_2a1d0()
  ret i32 %v0_2a1b6
}

define i32 @function_2a1d0() local_unnamed_addr {
dec_label_pc_2a1d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a1d5() local_unnamed_addr {
dec_label_pc_2a1d5:
  %v0_2a1dc = load i32, i32* @eax, align 8
  ret i32 %v0_2a1dc
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS3_INS5_INS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_nodeENS8_ILi3EEEEENSB_INS4_5list3IbxdEEEEE16initializer_nodeENS8_ILi4EEEEENSB_INS4_5list2IxdEEEEE16initializer_nodeENS8_ILi5EEEEENSB_INS4_5list1IdEEEEE16initializer_node10initializeEPvRKd(i32 %arg1, double* %arg2) local_unnamed_addr {
dec_label_pc_2a1dd:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_2a208 = call i32 @function_2ff09(i32 8, i32 %arg1)
  %v2_2a20d = icmp eq i32 %v2_2a208, 0
  br i1 %v2_2a20d, label %dec_label_pc_2a218, label %dec_label_pc_2a211

dec_label_pc_2a211:                               ; preds = %dec_label_pc_2a1dd
  %v3_2a208 = inttoptr i32 %v2_2a208 to double*
  %v2_2a214 = load double, double* %arg2, align 4
  store double %v2_2a214, double* %v3_2a208, align 4
  br label %dec_label_pc_2a218

dec_label_pc_2a218:                               ; preds = %dec_label_pc_2a211, %dec_label_pc_2a1dd
  store i32 5, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a229

bb:                                               ; preds = %dec_label_pc_2a218
  %v1_2a227 = call i32 @function_2a22e()
  br label %dec_label_pc_2a229

dec_label_pc_2a229:                               ; preds = %bb, %dec_label_pc_2a218
  %v2_2a227 = phi i32 [ %v1_2a227, %bb ], [ 5, %dec_label_pc_2a218 ]
  ret i32 %v2_2a227

; uselistorder directives
  uselistorder i32 %v2_2a208, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a22e() local_unnamed_addr {
dec_label_pc_2a22e:
  %v0_2a22f = load i32, i32* @eax, align 8
  ret i32 %v0_2a22f
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_node10initializeEPvRKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a230:
  store i32 0, i32* @eax, align 8
  %v2_2a25e = call i32 @function_2ff5c(i32 4, i32 %arg1)
  %v1_2a265 = icmp eq i32 %v2_2a25e, 0
  br i1 %v1_2a265, label %dec_label_pc_2a278, label %dec_label_pc_2a269

dec_label_pc_2a269:                               ; preds = %dec_label_pc_2a230
  %v2_2a273 = call i32 @unknown_583fe(i32 %v2_2a25e, i32 %arg2)
  br label %dec_label_pc_2a278

dec_label_pc_2a278:                               ; preds = %dec_label_pc_2a269, %dec_label_pc_2a230
  store i32 1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a289

bb:                                               ; preds = %dec_label_pc_2a278
  %v1_2a287 = call i32 @function_2a2a8()
  store i32 %v1_2a287, i32* @eax, align 8
  br label %dec_label_pc_2a289

dec_label_pc_2a289:                               ; preds = %bb, %dec_label_pc_2a278
  %v0_2a289 = call i32 @function_2a2a3()
  ret i32 %v0_2a289
}

define i32 @function_2a2a3() local_unnamed_addr {
dec_label_pc_2a2a3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a2a8() local_unnamed_addr {
dec_label_pc_2a2a8:
  %v0_2a2af = load i32, i32* @eax, align 8
  ret i32 %v0_2a2af
}

define i32 @_ZNSaIN11json_spirit9Pair_implINS_13Config_vectorISsEEEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a2b0:
  %v2_2a2da = call i32 @unknown_584ee(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a2eb

bb:                                               ; preds = %dec_label_pc_2a2b0
  %v1_2a2e9 = call i32 @function_2a2f0()
  br label %dec_label_pc_2a2eb

dec_label_pc_2a2eb:                               ; preds = %bb, %dec_label_pc_2a2b0
  %v2_2a2e9 = phi i32 [ %v1_2a2e9, %bb ], [ 0, %dec_label_pc_2a2b0 ]
  ret i32 %v2_2a2e9
}

define i32 @function_2a2f0() local_unnamed_addr {
dec_label_pc_2a2f0:
  %v0_2a2f1 = load i32, i32* @eax, align 8
  ret i32 %v0_2a2f1
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEPS8_EET0_T_SH_SG_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a2f2:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2a354 = ptrtoint i32* %stack_var_-36 to i32
  %v2_2a358 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_2a351

dec_label_pc_2a31e:                               ; preds = %dec_label_pc_2a351
  %v1_2a324 = call i32 @unknown_58560(i32 %v2_2a358)
  %v1_2a331 = call i32 @unknown_5826a(i32 %storemerge)
  %v2_2a33d = call i32 @unknown_5858f(i32 %v1_2a331, i32 %v1_2a324)
  %v1_2a348 = call i32 @unknown_494bc(i32 %v2_2a358)
  %v4_2a34d = add i32 %storemerge, 24
  br label %dec_label_pc_2a351

dec_label_pc_2a351:                               ; preds = %dec_label_pc_2a31e, %dec_label_pc_2a2f2
  %storemerge = phi i32 [ %v4_2a34d, %dec_label_pc_2a31e ], [ %arg3, %dec_label_pc_2a2f2 ]
  %v2_2a35e = call i32 @unknown_49468(i32 %v2_2a358, i32 %v4_2a354)
  %v4_2a363 = trunc i32 %v2_2a35e to i8
  %v5_2a363 = icmp eq i8 %v4_2a363, 0
  %v1_2a365 = icmp eq i1 %v5_2a363, false
  br i1 %v1_2a365, label %dec_label_pc_2a31e, label %dec_label_pc_2a367

dec_label_pc_2a367:                               ; preds = %dec_label_pc_2a351
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a376

bb:                                               ; preds = %dec_label_pc_2a367
  %v1_2a374 = call i32 @function_2a3ad()
  store i32 %v1_2a374, i32* @eax, align 8
  br label %dec_label_pc_2a376

dec_label_pc_2a376:                               ; preds = %bb, %dec_label_pc_2a367
  %v0_2a376 = call i32 @function_2a3a8()
  ret i32 %v0_2a376

; uselistorder directives
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v2_2a358, { 2, 0, 1 }
}

define i32 @function_2a379() local_unnamed_addr {
dec_label_pc_2a379:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a379 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a379
}

define i32 @function_2a386(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a386:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a3a8() local_unnamed_addr {
dec_label_pc_2a3a8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a3ad() local_unnamed_addr {
dec_label_pc_2a3ad:
  %v0_2a3b2 = load i32, i32* @eax, align 8
  ret i32 %v0_2a3b2
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIK7uint256S0_IP6CBlock7CScriptEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a3b4:
  %v1_2a3d1 = call i32 @unknown_586cc(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a3e2

bb:                                               ; preds = %dec_label_pc_2a3b4
  %v1_2a3e0 = call i32 @function_2a3e7()
  br label %dec_label_pc_2a3e2

dec_label_pc_2a3e2:                               ; preds = %bb, %dec_label_pc_2a3b4
  %v2_2a3e0 = phi i32 [ %v1_2a3e0, %bb ], [ 0, %dec_label_pc_2a3b4 ]
  ret i32 %v2_2a3e0
}

define i32 @function_2a3e7() local_unnamed_addr {
dec_label_pc_2a3e7:
  %v0_2a3e8 = load i32, i32* @eax, align 8
  ret i32 %v0_2a3e8
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE13_Rb_tree_implISB_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a3ea:
  %v1_2a404 = add i32 %arg1, 4
  %v2_2a404 = inttoptr i32 %v1_2a404 to i32*
  store i32 0, i32* %v2_2a404, align 4
  %v1_2a40e = add i32 %arg1, 8
  %v2_2a40e = inttoptr i32 %v1_2a40e to i32*
  store i32 0, i32* %v2_2a40e, align 4
  %v2_2a41e = add i32 %arg1, 12
  %v3_2a41e = inttoptr i32 %v2_2a41e to i32*
  store i32 %v1_2a404, i32* %v3_2a41e, align 4
  %v2_2a42a = add i32 %arg1, 16
  %v3_2a42a = inttoptr i32 %v2_2a42a to i32*
  store i32 %v1_2a404, i32* %v3_2a42a, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a439

bb:                                               ; preds = %dec_label_pc_2a3ea
  %v2_2a437 = call i32 @function_2a43e(i32 %arg1)
  br label %dec_label_pc_2a439

dec_label_pc_2a439:                               ; preds = %bb, %dec_label_pc_2a3ea
  %v3_2a437 = phi i32 [ %v2_2a437, %bb ], [ 0, %dec_label_pc_2a3ea ]
  ret i32 %v3_2a437
}

define i32 @function_2a43e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a43e:
  %v0_2a43f = load i32, i32* @eax, align 8
  ret i32 %v0_2a43f
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a440:
  %v1_2a463 = call i32 @unknown_58782(i32 %arg2)
  %v2_2a472 = call i32 @unknown_587b0(i32 %arg1, i32 %v1_2a463)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a486

bb:                                               ; preds = %dec_label_pc_2a440
  %v1_2a484 = call i32 @function_2a48b()
  br label %dec_label_pc_2a486

dec_label_pc_2a486:                               ; preds = %bb, %dec_label_pc_2a440
  %v2_2a484 = phi i32 [ %v1_2a484, %bb ], [ %arg1, %dec_label_pc_2a440 ]
  ret i32 %v2_2a484

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2a48b() local_unnamed_addr {
dec_label_pc_2a48b:
  %v0_2a48c = load i32, i32* @eax, align 8
  ret i32 %v0_2a48c
}

define i32 @_ZNSaISt4pairIK7uint256S_IP6CBlock7CScriptEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a490:
  ret i32 0
}

define i32 @function_2a4a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4a8:
  %v0_2a4a8 = load i32, i32* @ebp, align 4
  %v1_2a4a8 = add i32 %v0_2a4a8, 1
  store i32 %v1_2a4a8, i32* @ebp, align 4
  %v0_2a4ad = call i32 @unknown_5883c()
  %v0_2a4b2 = load i32, i32* @ebp, align 4
  %v1_2a4b2 = add i32 %v0_2a4b2, -12
  %v2_2a4b2 = inttoptr i32 %v1_2a4b2 to i32*
  %v3_2a4b2 = load i32, i32* %v2_2a4b2, align 4
  %v1_2a4b5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a4b5 = xor i32 %v1_2a4b5, %v3_2a4b2
  %v3_2a4b5 = icmp eq i32 %v2_2a4b5, 0
  store i32 %v2_2a4b5, i32* @eax, align 8
  br i1 %v3_2a4b5, label %bb, label %dec_label_pc_2a4be

bb:                                               ; preds = %dec_label_pc_2a4a8
  %v1_2a4bc = call i32 @function_2a4c3()
  br label %dec_label_pc_2a4be

dec_label_pc_2a4be:                               ; preds = %bb, %dec_label_pc_2a4a8
  %v2_2a4bc = phi i32 [ %v1_2a4bc, %bb ], [ %v2_2a4b5, %dec_label_pc_2a4a8 ]
  ret i32 %v2_2a4bc
}

define i32 @function_2a4c3() local_unnamed_addr {
dec_label_pc_2a4c3:
  %v0_2a4c4 = load i32, i32* @eax, align 8
  ret i32 %v0_2a4c4
}

define i32 @_ZSt11__addressofISt4pairIK7uint256S0_IP6CBlock7CScriptEEEPT_RS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4c5:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a4eb

bb:                                               ; preds = %dec_label_pc_2a4c5
  %v2_2a4e9 = call i32 @function_2a4f0(i32 %arg1)
  br label %dec_label_pc_2a4eb

dec_label_pc_2a4eb:                               ; preds = %bb, %dec_label_pc_2a4c5
  %v3_2a4e9 = phi i32 [ %v2_2a4e9, %bb ], [ %arg1, %dec_label_pc_2a4c5 ]
  ret i32 %v3_2a4e9
}

define i32 @function_2a4ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4ee:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a4f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4f0:
  %v0_2a4f1 = load i32, i32* @eax, align 8
  ret i32 %v0_2a4f1
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256S1_IP6CBlock7CScriptEEE7destroyEPS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a4f2:
  %v1_2a515 = call i32 @unknown_4257c(i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a526

bb:                                               ; preds = %dec_label_pc_2a4f2
  %v1_2a524 = call i32 @function_2a52b()
  br label %dec_label_pc_2a526

dec_label_pc_2a526:                               ; preds = %bb, %dec_label_pc_2a4f2
  %v2_2a524 = phi i32 [ %v1_2a524, %bb ], [ 0, %dec_label_pc_2a4f2 ]
  ret i32 %v2_2a524
}

define i32 @function_2a52b() local_unnamed_addr {
dec_label_pc_2a52b:
  %v0_2a52c = load i32, i32* @eax, align 8
  ret i32 %v0_2a52c
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a52e:
  %v3_2a560 = call i32 @unknown_58904(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a571

bb:                                               ; preds = %dec_label_pc_2a52e
  %v1_2a56f = call i32 @function_2a576()
  br label %dec_label_pc_2a571

dec_label_pc_2a571:                               ; preds = %bb, %dec_label_pc_2a52e
  %v2_2a56f = phi i32 [ %v1_2a56f, %bb ], [ 0, %dec_label_pc_2a52e ]
  ret i32 %v2_2a56f
}

define i32 @function_2a576() local_unnamed_addr {
dec_label_pc_2a576:
  %v0_2a577 = load i32, i32* @eax, align 8
  ret i32 %v0_2a577
}

define i32 @_ZNSaIP14CBlockTemplateEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a578:
  %v0_2a584 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a595 = call i32 @unknown_58990(i32 %arg1)
  ret i32 %v0_2a584
}

define i32 @function_2a59e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a59e:
  %v0_2a59e = load i32, i32* @eax, align 8
  %v1_2a59e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a59e = xor i32 %v1_2a59e, %v0_2a59e
  %v3_2a59e = icmp eq i32 %v2_2a59e, 0
  store i32 %v2_2a59e, i32* @eax, align 8
  br i1 %v3_2a59e, label %bb, label %dec_label_pc_2a5a6

bb:                                               ; preds = %dec_label_pc_2a59e
  %v1_2a5a4 = call i32 @function_2a5ab()
  br label %dec_label_pc_2a5a6

dec_label_pc_2a5a6:                               ; preds = %bb, %dec_label_pc_2a59e
  %v2_2a5a4 = phi i32 [ %v1_2a5a4, %bb ], [ %v2_2a59e, %dec_label_pc_2a59e ]
  ret i32 %v2_2a5a4
}

define i32 @function_2a5ab() local_unnamed_addr {
dec_label_pc_2a5ab:
  %v0_2a5ac = load i32, i32* @eax, align 8
  ret i32 %v0_2a5ac
}

define i32 @_ZN9__gnu_cxx13new_allocatorIP14CBlockTemplateED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a5ae:
  %v0_2a5ba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2a5ba
}

define i32 @function_2a5ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a5ca:
  %v0_2a5ca = load i32, i32* @eax, align 8
  %v1_2a5ca = add i32 %v0_2a5ca, 20
  %v10_2a5ca = icmp eq i32 %v1_2a5ca, 0
  store i32 %v1_2a5ca, i32* @eax, align 8
  br i1 %v10_2a5ca, label %bb, label %dec_label_pc_2a5d1

bb:                                               ; preds = %dec_label_pc_2a5ca
  %v1_2a5cf = call i32 @function_2a5d6()
  br label %dec_label_pc_2a5d1

dec_label_pc_2a5d1:                               ; preds = %bb, %dec_label_pc_2a5ca
  %v2_2a5cf = phi i32 [ %v1_2a5cf, %bb ], [ %v1_2a5ca, %dec_label_pc_2a5ca ]
  ret i32 %v2_2a5cf
}

define i32 @function_2a5d6() local_unnamed_addr {
dec_label_pc_2a5d6:
  %v0_2a5d7 = load i32, i32* @eax, align 8
  ret i32 %v0_2a5d7
}

define i32 @_ZN9__gnu_cxx13new_allocatorIP14CBlockTemplateE10deallocateEPS2_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a5d8:
  ret i32 %arg2
}

define i32 @function_2a616() local_unnamed_addr {
dec_label_pc_2a616:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a616 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2a616 = add i32 %v0_2a616, -1
  store i32 %v1_2a616, i32* %ecx.global-to-local, align 8
  %v0_2a618 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a618
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CBlockTemplateEEvT_S5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a619:
  %v0_2a62b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2a62b
}

define i32 @function_2a63a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a63a:
  %v0_2a63a = load i32, i32* @eax, align 8
  %v1_2a63a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a63a = xor i32 %v1_2a63a, %v0_2a63a
  %v3_2a63a = icmp eq i32 %v2_2a63a, 0
  store i32 %v2_2a63a, i32* @eax, align 8
  br i1 %v3_2a63a, label %bb, label %dec_label_pc_2a642

bb:                                               ; preds = %dec_label_pc_2a63a
  %v1_2a640 = call i32 @function_2a647()
  br label %dec_label_pc_2a642

dec_label_pc_2a642:                               ; preds = %bb, %dec_label_pc_2a63a
  %v2_2a640 = phi i32 [ %v1_2a640, %bb ], [ %v2_2a63a, %dec_label_pc_2a63a ]
  ret i32 %v2_2a640
}

define i32 @function_2a647() local_unnamed_addr {
dec_label_pc_2a647:
  %v0_2a648 = load i32, i32* @eax, align 8
  ret i32 %v0_2a648
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a64a:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a66d

bb:                                               ; preds = %dec_label_pc_2a64a
  %v2_2a66b = call i32 @function_2a672(i32 %arg1)
  br label %dec_label_pc_2a66d

dec_label_pc_2a66d:                               ; preds = %bb, %dec_label_pc_2a64a
  %v3_2a66b = phi i32 [ %v2_2a66b, %bb ], [ 0, %dec_label_pc_2a64a ]
  ret i32 %v3_2a66b
}

define i32 @function_2a672(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a672:
  %v0_2a673 = load i32, i32* @eax, align 8
  ret i32 %v0_2a673
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a674:
  ret i32 %arg2
}

define i32 @function_2a6b2() local_unnamed_addr {
dec_label_pc_2a6b2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a6b2 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2a6b2 = add i32 %v0_2a6b2, -1
  store i32 %v1_2a6b2, i32* %ecx.global-to-local, align 8
  %v0_2a6b4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a6b4
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a6b5:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a6de

bb:                                               ; preds = %dec_label_pc_2a6b5
  %v3_2a6dc = call i32 @function_2a6e3(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2a6de

dec_label_pc_2a6de:                               ; preds = %bb, %dec_label_pc_2a6b5
  %v4_2a6dc = phi i32 [ %v3_2a6dc, %bb ], [ 0, %dec_label_pc_2a6b5 ]
  ret i32 %v4_2a6dc
}

define i32 @function_2a6e3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a6e3:
  %v0_2a6e4 = load i32, i32* @eax, align 8
  ret i32 %v0_2a6e4
}

define i32 @_ZSt12__miter_baseIPP14CBlockTemplateENSt11_Miter_baseIT_E13iterator_typeES4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a6e5:
  ret i32 %arg1
}

define i32 @function_2a6f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a6f2:
  %v0_2a6f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a6f7 = load i32, i32* @ebp, align 4
  %v2_2a6f7 = add i32 %v1_2a6f7, -12
  %v3_2a6f7 = inttoptr i32 %v2_2a6f7 to i32*
  store i32 %v0_2a6f2, i32* %v3_2a6f7, align 4
  %v0_2a6fc = load i32, i32* @ebp, align 4
  %v1_2a6fc = add i32 %v0_2a6fc, -28
  %v2_2a6fc = inttoptr i32 %v1_2a6fc to i32*
  %v3_2a6fc = load i32, i32* %v2_2a6fc, align 4
  %v1_2a702 = call i32 @unknown_58b27(i32 %v3_2a6fc)
  store i32 %v1_2a702, i32* @eax, align 8
  %v0_2a707 = load i32, i32* @ebp, align 4
  %v1_2a707 = add i32 %v0_2a707, -12
  %v2_2a707 = inttoptr i32 %v1_2a707 to i32*
  %v3_2a707 = load i32, i32* %v2_2a707, align 4
  %v1_2a70a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a70a = icmp eq i32 %v1_2a70a, %v3_2a707
  br i1 %v3_2a70a, label %bb, label %dec_label_pc_2a713

bb:                                               ; preds = %dec_label_pc_2a6f2
  %v1_2a711 = call i32 @function_2a718()
  br label %dec_label_pc_2a713

dec_label_pc_2a713:                               ; preds = %bb, %dec_label_pc_2a6f2
  %v2_2a711 = phi i32 [ %v1_2a711, %bb ], [ %v1_2a702, %dec_label_pc_2a6f2 ]
  ret i32 %v2_2a711
}

define i32 @function_2a718() local_unnamed_addr {
dec_label_pc_2a718:
  %v0_2a719 = load i32, i32* @eax, align 8
  ret i32 %v0_2a719
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPP14CBlockTemplateS2_ET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a71a:
  %v1_2a745 = call i32 @unknown_58b89(i32 %arg3)
  %v1_2a752 = call i32 @unknown_58b89(i32 %arg2)
  %v1_2a75f = call i32 @unknown_58b89(i32 %arg1)
  %v3_2a76f = call i32 @unknown_58bbe(i32 %v1_2a75f, i32 %v1_2a752, i32 %v1_2a745)
  store i32 %v3_2a76f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a780

bb:                                               ; preds = %dec_label_pc_2a71a
  %v1_2a77e = call i32 @function_2a785()
  br label %dec_label_pc_2a780

dec_label_pc_2a780:                               ; preds = %bb, %dec_label_pc_2a71a
  %v2_2a77e = phi i32 [ %v1_2a77e, %bb ], [ %v3_2a76f, %dec_label_pc_2a71a ]
  ret i32 %v2_2a77e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_58b89, { 2, 1, 0 }
}

define i32 @function_2a785() local_unnamed_addr {
dec_label_pc_2a785:
  %v0_2a78b = load i32, i32* @eax, align 8
  ret i32 %v0_2a78b
}

define i32 @_ZNKSt6vectorIP14CBlockTemplateSaIS1_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a78c:
  ret i32 %arg1
}

define i32 @function_2a7a7() local_unnamed_addr {
dec_label_pc_2a7a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a7a7 = load i32, i32* %eax.global-to-local, align 8
  %v1_2a7a7 = add i32 %v0_2a7a7, 1
  store i32 %v1_2a7a7, i32* %eax.global-to-local, align 8
  ret i32 %v1_2a7a7
}

define i32 @function_2a7c9() local_unnamed_addr {
dec_label_pc_2a7c9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a7c9 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2a7c9 = add i32 %v0_2a7c9, -1
  store i32 %v1_2a7c9, i32* %ecx.global-to-local, align 8
  %v0_2a7cb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a7cb
}

define i32 @_ZNKSt6vectorIP14CBlockTemplateSaIS1_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a7cc:
  %v1_2a7e9 = call i32 @unknown_58cc4(i32 %arg1)
  ret i32 %v1_2a7e9
}

define i32 @function_2a7f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a7f0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2a7f0 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2a7f0 = and i32 %v0_2a7f0, -24
  store i32 %v11_2a7f0, i32* %eax.global-to-local, align 8
  %v0_2a7f5 = load i32, i32* @ebx, align 4
  %v1_2a7f5 = add i32 %v0_2a7f5, 862319701
  %v2_2a7f5 = inttoptr i32 %v1_2a7f5 to i8*
  %v3_2a7f5 = load i8, i8* %v2_2a7f5, align 1
  %v4_2a7f5 = load i32, i32* @ecx, align 8
  %v5_2a7f5 = trunc i32 %v4_2a7f5 to i8
  %v6_2a7f5 = add i8 %v5_2a7f5, %v3_2a7f5
  %v11_2a7f5 = icmp ult i8 %v6_2a7f5, %v3_2a7f5
  store i1 %v11_2a7f5, i1* %cf.global-to-local, align 1
  store i8 %v6_2a7f5, i8* %v2_2a7f5, align 1
  %v0_2a7fb = load i32, i32* %eax.global-to-local, align 8
  %v1_2a7fb = load i1, i1* %cf.global-to-local, align 1
  %v2_2a7fb = zext i1 %v1_2a7fb to i32
  %v3_2a7fb = add i32 %v0_2a7fb, 20
  %v4_2a7fb = add i32 %v3_2a7fb, %v2_2a7fb
  %v14_2a7fb = icmp eq i32 %v4_2a7fb, 0
  %v22_2a7fb = icmp ule i32 %v4_2a7fb, %v0_2a7fb
  %v23_2a7fb = icmp ugt i32 %v0_2a7fb, -21
  %v24_2a7fb = select i1 %v1_2a7fb, i1 %v22_2a7fb, i1 %v23_2a7fb
  store i1 %v24_2a7fb, i1* %cf.global-to-local, align 1
  store i32 %v4_2a7fb, i32* @eax, align 8
  br i1 %v14_2a7fb, label %bb, label %dec_label_pc_2a802

bb:                                               ; preds = %dec_label_pc_2a7f0
  %v1_2a800 = call i32 @function_2a807()
  store i32 %v1_2a800, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2a802

dec_label_pc_2a802:                               ; preds = %bb, %dec_label_pc_2a7f0
  %v2_2a800 = phi i32 [ %v1_2a800, %bb ], [ %v4_2a7fb, %dec_label_pc_2a7f0 ]
  ret i32 %v2_2a800

; uselistorder directives
  uselistorder i32 %v4_2a7fb, { 0, 2, 1, 3 }
  uselistorder i8 %v3_2a7f5, { 1, 0 }
}

define i32 @function_2a807() local_unnamed_addr {
dec_label_pc_2a807:
  %v0_2a808 = load i32, i32* @eax, align 8
  ret i32 %v0_2a808
}

define i32 @_ZN9__gnu_cxx13new_allocatorIP14CBlockTemplateE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_2a80a:
  %eax.global-to-local = alloca i32, align 4
  %v2_2a80b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2a80b
}

define i32 @function_2a80e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a80e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_2a80f = load i32, i32* @ecx, align 8
  %v0_2a817 = load i32, i32* @ebp, align 4
  %v0_2a818 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2a818 = or i32 %v0_2a818, 137
  store i32 %v11_2a818, i32* %eax.global-to-local, align 8
  %v1_2a81b = add i32 %v4_2a80f, -1
  store i32 %v1_2a81b, i32* @ecx, align 8
  %v1_2a81d = add i32 %v0_2a817, 3
  store i32 %v1_2a81d, i32* @ebp, align 4
  %v1_2a81e = add i32 %v4_2a80f, -1587159996
  %v2_2a81e = inttoptr i32 %v1_2a81e to i8*
  %v3_2a81e = load i8, i8* %v2_2a81e, align 1
  %v5_2a81e = trunc i32 %v1_2a81b to i8
  %v8_2a81e = add i8 %v3_2a81e, %v5_2a81e
  %v28_2a81e = icmp ult i8 %v8_2a81e, %v3_2a81e
  store i1 %v28_2a81e, i1* %cf.global-to-local, align 1
  store i8 %v8_2a81e, i8* %v2_2a81e, align 1
  %v0_2a824 = load i32, i32* %eax.global-to-local, align 8
  %v1_2a824 = trunc i32 %v0_2a824 to i8
  %v2_2a824 = load i1, i1* %cf.global-to-local, align 1
  %v3_2a824 = zext i1 %v2_2a824 to i8
  %v4_2a824 = add i8 %v3_2a824, %v1_2a824
  %v19_2a824 = icmp ule i8 %v4_2a824, %v1_2a824
  %v21_2a824 = icmp eq i1 %v2_2a824, %v19_2a824
  store i1 %v21_2a824, i1* %cf.global-to-local, align 1
  %v22_2a824 = zext i8 %v4_2a824 to i32
  %v24_2a824 = and i32 %v0_2a824, -256
  %v25_2a824 = or i32 %v22_2a824, %v24_2a824
  store i32 %v25_2a824, i32* %eax.global-to-local, align 8
  %v1_2a826 = inttoptr i32 %v25_2a824 to i8*
  %v2_2a826 = load i8, i8* %v1_2a826, align 1
  %v5_2a826 = add i8 %v2_2a826, %v4_2a824
  store i8 %v5_2a826, i8* %v1_2a826, align 1
  %v0_2a828 = load i32, i32* %eax.global-to-local, align 8
  %v1_2a828 = load i32, i32* @ebp, align 4
  %v2_2a828 = add i32 %v1_2a828, -12
  %v3_2a828 = inttoptr i32 %v2_2a828 to i32*
  store i32 %v0_2a828, i32* %v3_2a828, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2a82d = load i32, i32* @ebp, align 4
  %v1_2a82d = add i32 %v0_2a82d, -28
  %v2_2a82d = inttoptr i32 %v1_2a82d to i32*
  %v3_2a82d = load i32, i32* %v2_2a82d, align 4
  store i32 %v3_2a82d, i32* %eax.global-to-local, align 8
  %v1_2a833 = call i32 @unknown_58d30(i32 %v3_2a82d)
  store i32 %v1_2a833, i32* %eax.global-to-local, align 8
  %v1_2a838 = load i32, i32* @ebp, align 4
  %v2_2a838 = add i32 %v1_2a838, -32
  %v3_2a838 = inttoptr i32 %v2_2a838 to i32*
  %v4_2a838 = load i32, i32* %v3_2a838, align 4
  %v10_2a838 = icmp ult i32 %v1_2a833, %v4_2a838
  store i1 %v10_2a838, i1* %cf.global-to-local, align 1
  ret i32 %v1_2a833

; uselistorder directives
  uselistorder i8 %v4_2a824, { 0, 2, 1 }
  uselistorder i8 %v1_2a824, { 1, 0 }
  uselistorder i8 %v3_2a81e, { 1, 0 }
}

define i32 @function_2a83c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a83c:
  %v1_2a83c = load i32, i32* @edx, align 4
  ret i32 %v1_2a83c
}

define i32 @function_2a85c() local_unnamed_addr {
dec_label_pc_2a85c:
  %v2_2a85c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2a85c = load i32, i32* @eax, align 8
  %v4_2a85c = trunc i32 %v3_2a85c to i8
  %v5_2a85c = add i8 %v4_2a85c, %v2_2a85c
  %v21_2a85c = inttoptr i32 %v3_2a85c to i8*
  store i8 %v5_2a85c, i8* %v21_2a85c, align 1
  %v0_2a85e = load i32, i32* @ebp, align 4
  %v1_2a85e = load i32, i32* @eax, align 8
  %v3_2a85e = add i32 %v0_2a85e, -24
  %v4_2a85e = add i32 %v3_2a85e, %v1_2a85e
  %v5_2a85e = inttoptr i32 %v4_2a85e to i8*
  %v6_2a85e = load i8, i8* %v5_2a85e, align 1
  %v7_2a85e = load i32, i32* @edx, align 4
  %v8_2a85e = udiv i32 %v7_2a85e, 256
  %v9_2a85e = trunc i32 %v8_2a85e to i8
  %v10_2a85e = add i8 %v9_2a85e, %v6_2a85e
  %v15_2a85e = icmp ult i8 %v10_2a85e, %v6_2a85e
  store i1 %v15_2a85e, i1* @cf, align 1
  store i8 %v10_2a85e, i8* %v5_2a85e, align 1
  %v31_2a85e = load i32, i32* @eax, align 8
  ret i32 %v31_2a85e

; uselistorder directives
  uselistorder i8 %v6_2a85e, { 1, 0 }
}

define i32 @function_2a865() local_unnamed_addr {
dec_label_pc_2a865:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a865 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2a865 = add i32 %v0_2a865, -1
  store i32 %v1_2a865, i32* %ecx.global-to-local, align 8
  %v0_2a867 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a867
}

define i32 @_ZSt22__uninitialized_copy_aIPP14CBlockTemplateS2_S1_ET0_T_S4_S3_RSaIT1_E() local_unnamed_addr {
dec_label_pc_2a868:
  %eax.global-to-local = alloca i32, align 4
  %v17_2a86b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2a86b
}

define i32 @function_2a86e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a86e:
  %v0_2a86e = load i32, i32* @ebp, align 4
  %v1_2a86e = add i32 %v0_2a86e, 8
  %v2_2a86e = inttoptr i32 %v1_2a86e to i32*
  %v3_2a86e = load i32, i32* %v2_2a86e, align 4
  %v2_2a871 = add i32 %v0_2a86e, -28
  %v3_2a871 = inttoptr i32 %v2_2a871 to i32*
  store i32 %v3_2a86e, i32* %v3_2a871, align 4
  %v0_2a874 = load i32, i32* @ebp, align 4
  %v1_2a874 = add i32 %v0_2a874, 12
  %v2_2a874 = inttoptr i32 %v1_2a874 to i32*
  %v3_2a874 = load i32, i32* %v2_2a874, align 4
  %v2_2a877 = add i32 %v0_2a874, -32
  %v3_2a877 = inttoptr i32 %v2_2a877 to i32*
  store i32 %v3_2a874, i32* %v3_2a877, align 4
  %v0_2a87a = load i32, i32* @ebp, align 4
  %v1_2a87a = add i32 %v0_2a87a, 16
  %v2_2a87a = inttoptr i32 %v1_2a87a to i32*
  %v3_2a87a = load i32, i32* %v2_2a87a, align 4
  %v2_2a87d = add i32 %v0_2a87a, -36
  %v3_2a87d = inttoptr i32 %v2_2a87d to i32*
  store i32 %v3_2a87a, i32* %v3_2a87d, align 4
  %v0_2a880 = load i32, i32* @ebp, align 4
  %v1_2a880 = add i32 %v0_2a880, 20
  %v2_2a880 = inttoptr i32 %v1_2a880 to i32*
  %v3_2a880 = load i32, i32* %v2_2a880, align 4
  %v2_2a883 = add i32 %v0_2a880, -40
  %v3_2a883 = inttoptr i32 %v2_2a883 to i32*
  store i32 %v3_2a880, i32* %v3_2a883, align 4
  %v0_2a886 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a88c = load i32, i32* @ebp, align 4
  %v2_2a88c = add i32 %v1_2a88c, -12
  %v3_2a88c = inttoptr i32 %v2_2a88c to i32*
  store i32 %v0_2a886, i32* %v3_2a88c, align 4
  %v0_2a891 = load i32, i32* @ebp, align 4
  %v1_2a891 = add i32 %v0_2a891, -36
  %v2_2a891 = inttoptr i32 %v1_2a891 to i32*
  %v3_2a891 = load i32, i32* %v2_2a891, align 4
  %v1_2a898 = add i32 %v0_2a891, -32
  %v2_2a898 = inttoptr i32 %v1_2a898 to i32*
  %v3_2a898 = load i32, i32* %v2_2a898, align 4
  %v1_2a89f = add i32 %v0_2a891, -28
  %v2_2a89f = inttoptr i32 %v1_2a89f to i32*
  %v3_2a89f = load i32, i32* %v2_2a89f, align 4
  %v3_2a8a5 = call i32 @unknown_58dbd(i32 %v3_2a89f, i32 %v3_2a898, i32 %v3_2a891)
  store i32 %v3_2a8a5, i32* @eax, align 8
  %v0_2a8aa = load i32, i32* @ebp, align 4
  %v1_2a8aa = add i32 %v0_2a8aa, -12
  %v2_2a8aa = inttoptr i32 %v1_2a8aa to i32*
  %v3_2a8aa = load i32, i32* %v2_2a8aa, align 4
  %v1_2a8ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a8ad = icmp eq i32 %v1_2a8ad, %v3_2a8aa
  br i1 %v3_2a8ad, label %bb, label %dec_label_pc_2a8b6

bb:                                               ; preds = %dec_label_pc_2a86e
  %v1_2a8b4 = call i32 @function_2a8bb()
  br label %dec_label_pc_2a8b6

dec_label_pc_2a8b6:                               ; preds = %bb, %dec_label_pc_2a86e
  %v4_2a8b4 = phi i32 [ %v1_2a8b4, %bb ], [ %v3_2a8a5, %dec_label_pc_2a86e ]
  ret i32 %v4_2a8b4
}

define i32 @function_2a8bb() local_unnamed_addr {
dec_label_pc_2a8bb:
  %v0_2a8bc = load i32, i32* @eax, align 8
  ret i32 %v0_2a8bc
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS7_ESG_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8be:
  ret i32 %arg1
}

define i32 @function_2a8c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8c8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_2a8c8 = load i32, i32* @ebp, align 4
  %v0_2a8cc = load i32, i32* @eax, align 8
  %v11_2a8cc = or i32 %v0_2a8cc, 137
  store i32 %v11_2a8cc, i32* @eax, align 8
  %v1_2a8ce = add i32 %v0_2a8c8, 3
  %v9_2a8ce = icmp eq i32 %v1_2a8ce, 0
  store i32 %v1_2a8ce, i32* @ebp, align 4
  %v0_2a8cf = load i32, i32* @ecx, align 8
  %v1_2a8cf = add i32 %v0_2a8cf, -1
  store i32 %v1_2a8cf, i32* @ecx, align 8
  %v2_2a8cf = icmp eq i32 %v1_2a8cf, 0
  %v4_2a8cf = or i1 %v9_2a8ce, %v2_2a8cf
  br i1 %v4_2a8cf, label %dec_label_pc_2a8d1, label %bb

bb:                                               ; preds = %dec_label_pc_2a8c8
  %v6_2a8cf = call i32 @function_2a85c()
  store i32 %v6_2a8cf, i32* @eax, align 8
  %v0_2a8d1.pre = load i32, i32* @ebp, align 4
  %v0_2a8d2.pre = load i32, i32* @ecx, align 8
  %v6_2a8d2.pre = load i1, i1* @cf, align 1
  br label %dec_label_pc_2a8d1

dec_label_pc_2a8d1:                               ; preds = %dec_label_pc_2a8c8, %bb
  %v6_2a8d2 = phi i1 [ false, %dec_label_pc_2a8c8 ], [ %v6_2a8d2.pre, %bb ]
  %v30_2a8d2 = phi i32 [ %v1_2a8cf, %dec_label_pc_2a8c8 ], [ %v0_2a8d2.pre, %bb ]
  %v0_2a8d1 = phi i32 [ %v1_2a8ce, %dec_label_pc_2a8c8 ], [ %v0_2a8d1.pre, %bb ]
  %v1_2a8d1 = add i32 %v0_2a8d1, 1
  store i32 %v1_2a8d1, i32* %ebp.global-to-local, align 4
  %v1_2a8d2 = add i32 %v30_2a8d2, 1166793797
  %v2_2a8d2 = inttoptr i32 %v1_2a8d2 to i8*
  %v3_2a8d2 = load i8, i8* %v2_2a8d2, align 1
  %v5_2a8d2 = trunc i32 %v30_2a8d2 to i8
  %v7_2a8d2 = zext i1 %v6_2a8d2 to i8
  %v8_2a8d2 = add i8 %v3_2a8d2, %v5_2a8d2
  %v9_2a8d2 = add i8 %v8_2a8d2, %v7_2a8d2
  store i8 %v9_2a8d2, i8* %v2_2a8d2, align 1
  %v0_2a8da = load i32, i32* %ebp.global-to-local, align 4
  %v1_2a8da = add i32 %v0_2a8da, 1
  store i32 %v1_2a8da, i32* @ebp, align 4
  %v1_2a8db = load i32, i32* @ebx, align 4
  %v2_2a8db = add i32 %v1_2a8db, 1166612549
  %v3_2a8db = inttoptr i32 %v2_2a8db to float*
  %v4_2a8db = load float, float* %v3_2a8db, align 4
  %v5_2a8db = fpext float %v4_2a8db to x86_fp80
  %v6_2a8db = load x86_fp80, x86_fp80* @st0, align 4
  %v7_2a8db = fmul x86_fp80 %v5_2a8db, %v6_2a8db
  store x86_fp80 %v7_2a8db, x86_fp80* @st0, align 4
  %v0_2a8e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a8e8 = add i32 %v0_2a8da, -11
  %v3_2a8e8 = inttoptr i32 %v2_2a8e8 to i32*
  store i32 %v0_2a8e3, i32* %v3_2a8e8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v30_2a8d2, { 1, 0 }
  uselistorder i32 %v1_2a8cf, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2a8d1, { 1, 0 }
}

define i32 @function_2a8f6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a8f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a8f8 = load i32, i32* @eax, align 8
  %v5_2a8f8 = mul i32 %v0_2a8f8, 2
  %v20_2a8f8 = and i32 %v5_2a8f8, 254
  %v22_2a8f8 = and i32 %v0_2a8f8, -256
  %v23_2a8f8 = or i32 %v20_2a8f8, %v22_2a8f8
  store i32 %v23_2a8f8, i32* %eax.global-to-local, align 8
  %v0_2a8fc = load i32, i32* @ebp, align 4
  %v1_2a8fc = add i32 %v0_2a8fc, -32
  %v2_2a8fc = inttoptr i32 %v1_2a8fc to i32*
  %v3_2a8fc = load i32, i32* %v2_2a8fc, align 4
  store i32 %v3_2a8fc, i32* %eax.global-to-local, align 8
  %v1_2a8ff = add i32 %v0_2a8fc, -44
  %v2_2a8ff = inttoptr i32 %v1_2a8ff to i32*
  %v3_2a8ff = load i32, i32* %v2_2a8ff, align 4
  store i32 %v3_2a8ff, i32* @ecx, align 8
  %v3_2a90d = call i32 @unknown_47888(i32 %v3_2a8fc, i32 %v23_2a8f8, i32 %v3_2a8ff)
  %v1_2a912 = xor i32 %v3_2a90d, 1
  %v4_2a912 = trunc i32 %v1_2a912 to i8
  store i32 %v1_2a912, i32* %eax.global-to-local, align 8
  %v5_2a915 = icmp eq i8 %v4_2a912, 0
  %v0_2a92f = load i32, i32* @ebp, align 4
  %v1_2a92f = add i32 %v0_2a92f, -36
  %v2_2a92f = inttoptr i32 %v1_2a92f to i32*
  %v3_2a92f = load i32, i32* %v2_2a92f, align 4
  store i32 %v3_2a92f, i32* %eax.global-to-local, align 8
  br i1 %v5_2a915, label %dec_label_pc_2a92f, label %dec_label_pc_2a919

dec_label_pc_2a919:                               ; preds = %dec_label_pc_2a8f6
  %v2_2a91c = add i32 %v0_2a92f, -40
  %v3_2a91c = inttoptr i32 %v2_2a91c to i32*
  store i32 %v3_2a92f, i32* %v3_2a91c, align 4
  %v0_2a91f = load i32, i32* @ebp, align 4
  %v1_2a91f = add i32 %v0_2a91f, -36
  %v2_2a91f = inttoptr i32 %v1_2a91f to i32*
  %v3_2a91f = load i32, i32* %v2_2a91f, align 4
  store i32 %v3_2a91f, i32* %eax.global-to-local, align 8
  %v1_2a925 = call i32 @unknown_4f948(i32 %v3_2a91f)
  store i32 %v1_2a925, i32* %eax.global-to-local, align 8
  %v1_2a92a = load i32, i32* @ebp, align 4
  %v2_2a92a = add i32 %v1_2a92a, -36
  %v3_2a92a = inttoptr i32 %v2_2a92a to i32*
  store i32 %v1_2a925, i32* %v3_2a92a, align 4
  br label %dec_label_pc_2a93d

dec_label_pc_2a92f:                               ; preds = %dec_label_pc_2a8f6
  %v1_2a935 = call i32 @unknown_4f918(i32 %v3_2a92f)
  store i32 %v1_2a935, i32* %eax.global-to-local, align 8
  %v1_2a93a = load i32, i32* @ebp, align 4
  %v2_2a93a = add i32 %v1_2a93a, -36
  %v3_2a93a = inttoptr i32 %v2_2a93a to i32*
  store i32 %v1_2a935, i32* %v3_2a93a, align 4
  br label %dec_label_pc_2a93d

dec_label_pc_2a93d:                               ; preds = %dec_label_pc_2a92f, %dec_label_pc_2a919
  %v0_2a93d = load i32, i32* @ebp, align 4
  %v1_2a93d = add i32 %v0_2a93d, -36
  %v2_2a93d = inttoptr i32 %v1_2a93d to i32*
  %v3_2a93d = load i32, i32* %v2_2a93d, align 4
  %v10_2a93d = icmp eq i32 %v3_2a93d, 0
  %v1_2a941 = icmp eq i1 %v10_2a93d, false
  %v2_2a941 = zext i1 %v1_2a941 to i32
  %v3_2a941 = load i32, i32* %eax.global-to-local, align 8
  %v4_2a941 = and i32 %v3_2a941, -256
  %v5_2a941 = or i32 %v2_2a941, %v4_2a941
  store i32 %v5_2a941, i32* %eax.global-to-local, align 8
  %v1_2a948 = add i32 %v0_2a93d, -40
  %v2_2a948 = inttoptr i32 %v1_2a948 to i32*
  %v3_2a948 = load i32, i32* %v2_2a948, align 4
  store i32 %v3_2a948, i32* %eax.global-to-local, align 8
  %v1_2a94f = add i32 %v0_2a93d, -28
  %v2_2a94f = inttoptr i32 %v1_2a94f to i32*
  %v3_2a94f = load i32, i32* %v2_2a94f, align 4
  store i32 %v3_2a94f, i32* %eax.global-to-local, align 8
  %v2_2a955 = call i32 @unknown_55230(i32 %v3_2a94f, i32 %v3_2a948)
  store i32 %v2_2a955, i32* %eax.global-to-local, align 8
  %v0_2a95a = load i32, i32* @ebp, align 4
  %v1_2a95a = add i32 %v0_2a95a, -28
  %v2_2a95a = inttoptr i32 %v1_2a95a to i32*
  %v3_2a95a = load i32, i32* %v2_2a95a, align 4
  store i32 %v3_2a95a, i32* @eax, align 8
  %v1_2a95d = add i32 %v0_2a95a, -12
  %v2_2a95d = inttoptr i32 %v1_2a95d to i32*
  %v3_2a95d = load i32, i32* %v2_2a95d, align 4
  %v1_2a960 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a960 = icmp eq i32 %v1_2a960, %v3_2a95d
  br i1 %v3_2a960, label %bb, label %dec_label_pc_2a969

bb:                                               ; preds = %dec_label_pc_2a93d
  %v1_2a967 = call i32 @function_2a96e()
  store i32 %v1_2a967, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2a969

dec_label_pc_2a969:                               ; preds = %bb, %dec_label_pc_2a93d
  %v3_2a967 = phi i32 [ %v1_2a967, %bb ], [ %v3_2a95a, %dec_label_pc_2a93d ]
  ret i32 %v3_2a967

; uselistorder directives
  uselistorder i32 %v0_2a93d, { 1, 0, 2 }
  uselistorder i32 %v3_2a92f, { 1, 0, 2 }
  uselistorder i32 %v0_2a8f8, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 8, 9, 6, 10, 11, 12 }
}

define i32 @function_2a96e() local_unnamed_addr {
dec_label_pc_2a96e:
  %v0_2a96f = load i32, i32* @eax, align 8
  ret i32 %v0_2a96f
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEC1EPSt13_Rb_tree_nodeIS7_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a972:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2a9a3

bb:                                               ; preds = %dec_label_pc_2a972
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2a9a1 = call i32 @function_2a9a8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2a9a3

dec_label_pc_2a9a3:                               ; preds = %bb, %dec_label_pc_2a972
  %v4_2a9a1 = phi i32 [ %v3_2a9a1, %bb ], [ 0, %dec_label_pc_2a972 ]
  ret i32 %v4_2a9a1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2a9a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a9a8:
  %v0_2a9a9 = load i32, i32* @eax, align 8
  ret i32 %v0_2a9a9
}

define i32 @_ZNKSt10_Select1stISt4pairIK7uint256S0_IP6CBlock7CScriptEEEclERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a9aa:
  ret i32 %arg2
}

define i32 @function_2a9be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a9be:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a9be = load i32, i32* @eax, align 8
  %v1_2a9be = trunc i32 %v0_2a9be to i8
  %v2_2a9be = load i1, i1* @cf, align 1
  %v3_2a9be = zext i1 %v2_2a9be to i8
  %v4_2a9be = add i8 %v3_2a9be, %v1_2a9be
  %v22_2a9be = zext i8 %v4_2a9be to i32
  %v24_2a9be = and i32 %v0_2a9be, -256
  %v25_2a9be = or i32 %v22_2a9be, %v24_2a9be
  store i32 %v25_2a9be, i32* %eax.global-to-local, align 8
  %v1_2a9c0 = inttoptr i32 %v25_2a9be to i8*
  %v2_2a9c0 = load i8, i8* %v1_2a9c0, align 1
  %v5_2a9c0 = add i8 %v2_2a9c0, %v4_2a9be
  store i8 %v5_2a9c0, i8* %v1_2a9c0, align 1
  %v0_2a9c2 = load i32, i32* %eax.global-to-local, align 8
  %v1_2a9c2 = load i32, i32* @ebp, align 4
  %v2_2a9c2 = add i32 %v1_2a9c2, -12
  %v3_2a9c2 = inttoptr i32 %v2_2a9c2 to i32*
  store i32 %v0_2a9c2, i32* %v3_2a9c2, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2a9c7 = load i32, i32* @ebp, align 4
  %v1_2a9c7 = add i32 %v0_2a9c7, -32
  %v2_2a9c7 = inttoptr i32 %v1_2a9c7 to i32*
  %v3_2a9c7 = load i32, i32* %v2_2a9c7, align 4
  store i32 %v3_2a9c7, i32* @eax, align 8
  %v1_2a9ca = add i32 %v0_2a9c7, -12
  %v2_2a9ca = inttoptr i32 %v1_2a9ca to i32*
  %v3_2a9ca = load i32, i32* %v2_2a9ca, align 4
  %v1_2a9cd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a9cd = icmp eq i32 %v1_2a9cd, %v3_2a9ca
  br i1 %v3_2a9cd, label %bb, label %dec_label_pc_2a9d6

bb:                                               ; preds = %dec_label_pc_2a9be
  %v1_2a9d4 = call i32 @function_2a9db()
  store i32 %v1_2a9d4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2a9d6

dec_label_pc_2a9d6:                               ; preds = %bb, %dec_label_pc_2a9be
  %v2_2a9d4 = phi i32 [ %v1_2a9d4, %bb ], [ %v3_2a9c7, %dec_label_pc_2a9be ]
  ret i32 %v2_2a9d4
}

define i32 @function_2a9db() local_unnamed_addr {
dec_label_pc_2a9db:
  %v0_2a9dc = load i32, i32* @eax, align 8
  ret i32 %v0_2a9dc
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9de:
  %v0_2a9ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2a9ea
}

define i32 @function_2a9f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9f4:
  %v0_2a9fb = load i32, i32* @ebp, align 4
  %v1_2a9fb = add i32 %v0_2a9fb, -12
  %v2_2a9fb = inttoptr i32 %v1_2a9fb to i32*
  %v3_2a9fb = load i32, i32* %v2_2a9fb, align 4
  %v1_2a9fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a9fe = icmp eq i32 %v1_2a9fe, %v3_2a9fb
  br i1 %v3_2a9fe, label %bb, label %dec_label_pc_2a9f4.dec_label_pc_2aa07_crit_edge

dec_label_pc_2a9f4.dec_label_pc_2aa07_crit_edge:  ; preds = %dec_label_pc_2a9f4
  %v2_2aa05.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2aa07

bb:                                               ; preds = %dec_label_pc_2a9f4
  %v1_2aa05 = call i32 @function_2aa0c()
  br label %dec_label_pc_2aa07

dec_label_pc_2aa07:                               ; preds = %dec_label_pc_2a9f4.dec_label_pc_2aa07_crit_edge, %bb
  %v2_2aa05 = phi i32 [ %v2_2aa05.pre, %dec_label_pc_2a9f4.dec_label_pc_2aa07_crit_edge ], [ %v1_2aa05, %bb ]
  ret i32 %v2_2aa05

; uselistorder directives
  uselistorder label %dec_label_pc_2aa07, { 1, 0 }
}

define i32 @function_2aa0c() local_unnamed_addr {
dec_label_pc_2aa0c:
  %v0_2aa0d = load i32, i32* @eax, align 8
  ret i32 %v0_2aa0d
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE10_M_insert_EPKSt18_Rb_tree_node_baseSG_RKS7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2aa0e:
  %stack_var_-18 = alloca i32, align 4
  %v10_2aa3e = icmp eq i32 %arg3, 0
  %v1_2aa42 = icmp eq i1 %v10_2aa3e, false
  br i1 %v1_2aa42, label %dec_label_pc_2aa96, label %dec_label_pc_2aa44

dec_label_pc_2aa44:                               ; preds = %dec_label_pc_2aa0e
  %v1_2aa4a = call i32 @unknown_4fc86(i32 %arg2)
  %v15_2aa4f = icmp eq i32 %v1_2aa4a, %arg4
  br i1 %v15_2aa4f, label %dec_label_pc_2aa96, label %dec_label_pc_2aa54

dec_label_pc_2aa54:                               ; preds = %dec_label_pc_2aa44
  %v1_2aa5a = call i32 @unknown_5095a(i32 %arg4)
  %v2_2aa68 = ptrtoint i32* %stack_var_-18 to i32
  %v2_2aa6e = call i32 @unknown_553b8(i32 %v2_2aa68, i32 %arg5)
  %v3_2aa81 = call i32 @unknown_479d8(i32 %arg2, i32 %v2_2aa6e, i32 %v1_2aa5a)
  %v4_2aa86 = trunc i32 %v3_2aa81 to i8
  %v5_2aa86 = icmp ne i8 %v4_2aa86, 0
  %phitmp = zext i1 %v5_2aa86 to i32
  br label %dec_label_pc_2aa96

dec_label_pc_2aa96:                               ; preds = %dec_label_pc_2aa54, %dec_label_pc_2aa0e, %dec_label_pc_2aa44
  %storemerge = phi i32 [ 1, %dec_label_pc_2aa44 ], [ 1, %dec_label_pc_2aa0e ], [ %phitmp, %dec_label_pc_2aa54 ]
  %v2_2aaa6 = call i32 @unknown_58fb2(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2aa96, { 0, 2, 1 }
}

define i32 @function_2ab06() local_unnamed_addr {
dec_label_pc_2ab06:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2ab06 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2ab06 = add i32 %v0_2ab06, 1566262468
  %v2_2ab06 = inttoptr i32 %v1_2ab06 to i32*
  %v3_2ab06 = load i32, i32* %v2_2ab06, align 4
  %v4_2ab06 = add i32 %v3_2ab06, 1
  store i32 %v4_2ab06, i32* %v2_2ab06, align 4
  %v0_2ab0c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ab0c
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE16_M_insert_uniqueERKS7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ab10:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_2ab3a = call i32 @unknown_48dbe(i32 %arg2)
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_2ab48 = call i32 @unknown_4fd88(i32 %arg2)
  %v2_2ab70 = ptrtoint i32* %stack_var_-22 to i32
  %v10_2abb2130 = icmp eq i32 %v1_2ab3a, 0
  %v1_2abb6131 = icmp eq i1 %v10_2abb2130, false
  %v2_2abb6132 = zext i1 %v1_2abb6131 to i32
  %v4_2abb6133 = and i32 %v1_2ab48, -256
  %v5_2abb6134 = or i32 %v2_2abb6132, %v4_2abb6133
  store i32 %v5_2abb6134, i32* %eax.global-to-local, align 8
  %v5_2abb9135 = icmp eq i1 %v1_2abb6131, false
  %v1_2abbb136 = icmp eq i1 %v5_2abb9135, false
  br i1 %v1_2abbb136, label %dec_label_pc_2ab56, label %dec_label_pc_2abbd

dec_label_pc_2ab56:                               ; preds = %dec_label_pc_2ab10, %dec_label_pc_2abb2.backedge
  %stack_var_-32.0137 = phi i32 [ %storemerge3.be, %dec_label_pc_2abb2.backedge ], [ %v1_2ab3a, %dec_label_pc_2ab10 ]
  store i32 %stack_var_-32.0137, i32* %eax.global-to-local, align 8
  store i32 %stack_var_-32.0137, i32* %stack_var_-108, align 4
  %v1_2ab62 = call i32 @unknown_559c4(i32 %stack_var_-32.0137)
  store i32 %v1_2ab62, i32* %ebx.global-to-local, align 4
  store i32 %v2_2ab70, i32* %eax.global-to-local, align 8
  store i32 %v2_2ab70, i32* %stack_var_-108, align 4
  %v2_2ab76 = call i32 @unknown_554ba(i32 %v2_2ab70, i32 %arg3)
  store i32 %v2_2ab76, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v3_2ab89 = call i32 @unknown_47ada(i32 %arg2, i32 %v2_2ab76, i32 %v1_2ab62)
  %v1_2ab8e = trunc i32 %v3_2ab89 to i8
  %v10_2ab91 = icmp eq i8 %v1_2ab8e, 0
  store i32 %stack_var_-32.0137, i32* %eax.global-to-local, align 8
  store i32 %stack_var_-32.0137, i32* %stack_var_-108, align 4
  br i1 %v10_2ab91, label %dec_label_pc_2aba4, label %dec_label_pc_2ab97

dec_label_pc_2ab97:                               ; preds = %dec_label_pc_2ab56
  %v1_2ab9d = call i32 @unknown_4fb9a(i32 %stack_var_-32.0137)
  br label %dec_label_pc_2abb2.backedge

dec_label_pc_2aba4:                               ; preds = %dec_label_pc_2ab56
  %v1_2abaa = call i32 @unknown_4fb6a(i32 %stack_var_-32.0137)
  br label %dec_label_pc_2abb2.backedge

dec_label_pc_2abb2.backedge:                      ; preds = %dec_label_pc_2aba4, %dec_label_pc_2ab97
  %storemerge3.be = phi i32 [ %v1_2abaa, %dec_label_pc_2aba4 ], [ %v1_2ab9d, %dec_label_pc_2ab97 ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_2aba4 ], [ %v1_2ab8e, %dec_label_pc_2ab97 ]
  %v10_2abb2 = icmp eq i32 %storemerge3.be, 0
  %v1_2abb6 = icmp eq i1 %v10_2abb2, false
  %v2_2abb6 = zext i1 %v1_2abb6 to i32
  %v4_2abb6 = and i32 %storemerge3.be, -256
  %v5_2abb6 = or i32 %v2_2abb6, %v4_2abb6
  store i32 %v5_2abb6, i32* %eax.global-to-local, align 8
  %v5_2abb9 = icmp eq i1 %v1_2abb6, false
  %v1_2abbb = icmp eq i1 %v5_2abb9, false
  br i1 %v1_2abbb, label %dec_label_pc_2ab56, label %dec_label_pc_2abbd

dec_label_pc_2abbd:                               ; preds = %dec_label_pc_2abb2.backedge, %dec_label_pc_2ab10
  %stack_var_-32.0.lcssa = phi i32 [ %v1_2ab3a, %dec_label_pc_2ab10 ], [ %storemerge3.be, %dec_label_pc_2abb2.backedge ]
  %stack_var_-28.0.lcssa = phi i32 [ %v1_2ab48, %dec_label_pc_2ab10 ], [ %stack_var_-32.0137, %dec_label_pc_2abb2.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_2ab10 ], [ %stack_var_-17.0.be, %dec_label_pc_2abb2.backedge ]
  %v2_2abc4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_2abc4, i32* %eax.global-to-local, align 8
  store i32 %v2_2abc4, i32* %stack_var_-108, align 4
  %v2_2abca = call i32 @unknown_55482(i32 %v2_2abc4, i32 %stack_var_-28.0.lcssa)
  store i32 %v2_2abca, i32* %eax.global-to-local, align 8
  %v10_2abcf = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_2abcf, label %dec_label_pc_2ac5b, label %dec_label_pc_2abd9

dec_label_pc_2abd9:                               ; preds = %dec_label_pc_2abbd
  %v2_2abd9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_2abd9, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v2_2abd9, i32* %stack_var_-108, align 4
  %v2_2abe6 = call i32 @unknown_59180(i32 %v2_2abd9, i32 %arg2)
  store i32 %v2_2abd9, i32* %stack_var_-108, align 4
  store i32 %v2_2abc4, i32* %eax.global-to-local, align 8
  store i32 %v2_2abc4, i32* %stack_var_-112, align 4
  %v2_2abfb = call i32 @unknown_498b2(i32 %v2_2abc4, i32 %v2_2abd9)
  store i32 %v2_2abfb, i32* %eax.global-to-local, align 8
  %v4_2ac00 = trunc i32 %v2_2abfb to i8
  %v5_2ac00 = icmp eq i8 %v4_2ac00, 0
  br i1 %v5_2ac00, label %dec_label_pc_2ac50, label %dec_label_pc_2ac04

dec_label_pc_2ac04:                               ; preds = %dec_label_pc_2abd9
  store i8 1, i8* %stack_var_-21, align 1
  %v2_2ac08 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_2ac08, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  store i32 %v2_2ac08, i32* %stack_var_-112, align 4
  %v1_2ac2a = call i32 @unknown_5551e(i32 %v2_2ac08)
  %v2_2ac32 = ptrtoint i8* %stack_var_-21 to i32
  store i32 %v2_2ac32, i32* %stack_var_-108, align 4
  store i32 %v2_2ac08, i32* %stack_var_-112, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_2ac46 = call i32 @unknown_591ca(i32 %arg1)
  store i32 %v1_2ac46, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2acf9

dec_label_pc_2ac50:                               ; preds = %dec_label_pc_2abd9
  store i32 %v2_2abc4, i32* %eax.global-to-local, align 8
  store i32 %v2_2abc4, i32* %stack_var_-112, align 4
  %v1_2ac56 = call i32 @unknown_59216(i32 %v2_2abc4)
  store i32 %v1_2ac56, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2ac5b

dec_label_pc_2ac5b:                               ; preds = %dec_label_pc_2ac50, %dec_label_pc_2abbd
  %stack_var_-104.0 = phi i32 [ %stack_var_-28.0.lcssa, %dec_label_pc_2abbd ], [ %arg2, %dec_label_pc_2ac50 ]
  %v1_2ac5e = load i32, i32* @esp, align 4
  %v2_2ac5e = add i32 %v1_2ac5e, 4
  %v3_2ac5e = inttoptr i32 %v2_2ac5e to i32*
  store i32 %arg3, i32* %v3_2ac5e, align 4
  %v2_2ac62 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_2ac62, i32* %eax.global-to-local, align 8
  %v1_2ac65 = load i32, i32* @esp, align 4
  %v2_2ac65 = inttoptr i32 %v1_2ac65 to i32*
  store i32 %v2_2ac62, i32* %v2_2ac65, align 4
  %v0_2ac68 = load i32, i32* %stack_var_-112, align 4
  %v1_2ac68 = load i32, i32* %stack_var_-108, align 4
  %v2_2ac68 = call i32 @unknown_554ba(i32 %v0_2ac68, i32 %v1_2ac68)
  store i32 %v2_2ac68, i32* %ebx.global-to-local, align 4
  %v3_2ac6f = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_2ac6f, i32* %eax.global-to-local, align 8
  %v1_2ac72 = load i32, i32* @esp, align 4
  %v2_2ac72 = inttoptr i32 %v1_2ac72 to i32*
  store i32 %v3_2ac6f, i32* %v2_2ac72, align 4
  %v0_2ac75 = call i32 @unknown_50a5c()
  store i32 %v0_2ac75, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v0_2ac7f = load i32, i32* %ebx.global-to-local, align 4
  %v1_2ac7f = load i32, i32* @esp, align 4
  %v2_2ac7f = add i32 %v1_2ac7f, 8
  %v3_2ac7f = inttoptr i32 %v2_2ac7f to i32*
  store i32 %v0_2ac7f, i32* %v3_2ac7f, align 4
  %v0_2ac83 = load i32, i32* %edx.global-to-local, align 4
  %v1_2ac83 = load i32, i32* @esp, align 4
  %v2_2ac83 = add i32 %v1_2ac83, 4
  %v3_2ac83 = inttoptr i32 %v2_2ac83 to i32*
  store i32 %v0_2ac83, i32* %v3_2ac83, align 4
  %v0_2ac87 = load i32, i32* %eax.global-to-local, align 8
  %v1_2ac87 = load i32, i32* @esp, align 4
  %v2_2ac87 = inttoptr i32 %v1_2ac87 to i32*
  store i32 %v0_2ac87, i32* %v2_2ac87, align 4
  %v0_2ac8a = load i32, i32* %stack_var_-112, align 4
  %v1_2ac8a = load i32, i32* %stack_var_-108, align 4
  %v3_2ac8a = call i32 @unknown_47ada(i32 %v0_2ac8a, i32 %v1_2ac8a, i32 %stack_var_-104.0)
  store i32 %v3_2ac8a, i32* %eax.global-to-local, align 8
  %v4_2ac8f = trunc i32 %v3_2ac8a to i8
  %v5_2ac8f = icmp eq i8 %v4_2ac8f, 0
  br i1 %v5_2ac8f, label %dec_label_pc_2acdc, label %dec_label_pc_2ac93

dec_label_pc_2ac93:                               ; preds = %dec_label_pc_2ac5b
  store i8 1, i8* %stack_var_-19, align 1
  %v2_2ac97 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_2ac97, i32* %eax.global-to-local, align 8
  %v1_2ac9d = load i32, i32* @esp, align 4
  %v2_2ac9d = add i32 %v1_2ac9d, 16
  %v3_2ac9d = inttoptr i32 %v2_2ac9d to i32*
  store i32 %arg3, i32* %v3_2ac9d, align 4
  %v1_2aca4 = load i32, i32* @esp, align 4
  %v2_2aca4 = add i32 %v1_2aca4, 12
  %v3_2aca4 = inttoptr i32 %v2_2aca4 to i32*
  store i32 %stack_var_-28.0.lcssa, i32* %v3_2aca4, align 4
  %v1_2acab = load i32, i32* @esp, align 4
  %v2_2acab = add i32 %v1_2acab, 8
  %v3_2acab = inttoptr i32 %v2_2acab to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v3_2acab, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_2acb2 = load i32, i32* @esp, align 4
  %v2_2acb2 = add i32 %v1_2acb2, 4
  %v3_2acb2 = inttoptr i32 %v2_2acb2 to i32*
  store i32 %arg2, i32* %v3_2acb2, align 4
  %v1_2acb6 = load i32, i32* @esp, align 4
  %v2_2acb6 = inttoptr i32 %v1_2acb6 to i32*
  store i32 %v2_2ac97, i32* %v2_2acb6, align 4
  %v2_2acb9 = call i32 @unknown_5551e(i32 1)
  %v0_2acbe = load i32, i32* @esp, align 4
  %v2_2acc1 = ptrtoint i8* %stack_var_-19 to i32
  %v2_2acc4 = add i32 %v0_2acbe, 4
  %v3_2acc4 = inttoptr i32 %v2_2acc4 to i32*
  store i32 %v2_2acc1, i32* %v3_2acc4, align 4
  %v1_2accb = load i32, i32* @esp, align 4
  %v2_2accb = add i32 %v1_2accb, 4
  %v3_2accb = inttoptr i32 %v2_2accb to i32*
  store i32 %v2_2ac97, i32* %v3_2accb, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_2acd2 = load i32, i32* @esp, align 4
  %v2_2acd2 = inttoptr i32 %v1_2acd2 to i32*
  store i32 %arg1, i32* %v2_2acd2, align 4
  %v2_2acd5 = call i32 @unknown_591ca(i32 1)
  store i32 %v2_2acd5, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2acf9

dec_label_pc_2acdc:                               ; preds = %dec_label_pc_2ac5b
  store i8 0, i8* %stack_var_-18, align 1
  %v2_2ace0 = ptrtoint i8* %stack_var_-18 to i32
  %v1_2ace3 = load i32, i32* @esp, align 4
  %v2_2ace3 = add i32 %v1_2ace3, 8
  %v3_2ace3 = inttoptr i32 %v2_2ace3 to i32*
  store i32 %v2_2ace0, i32* %v3_2ace3, align 4
  %v1_2acea = load i32, i32* @esp, align 4
  %v2_2acea = add i32 %v1_2acea, 4
  %v3_2acea = inttoptr i32 %v2_2acea to i32*
  store i32 %v2_2abc4, i32* %v3_2acea, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_2acf1 = load i32, i32* @esp, align 4
  %v2_2acf1 = inttoptr i32 %v1_2acf1 to i32*
  store i32 %arg1, i32* %v2_2acf1, align 4
  %v2_2acf4 = call i32 @unknown_591ca(i32 0)
  store i32 %v2_2acf4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2acf9

dec_label_pc_2acf9:                               ; preds = %dec_label_pc_2acdc, %dec_label_pc_2ac93, %dec_label_pc_2ac04
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_2ad08

bb:                                               ; preds = %dec_label_pc_2acf9
  %v1_2ad06 = call i32 @function_2ad0d()
  store i32 %v1_2ad06, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2ad08

dec_label_pc_2ad08:                               ; preds = %bb, %dec_label_pc_2acf9
  %v2_2ad06 = phi i32 [ %v1_2ad06, %bb ], [ %arg1, %dec_label_pc_2acf9 ]
  ret i32 %v2_2ad06

; uselistorder directives
  uselistorder i32 %v2_2ac08, { 0, 2, 1, 3 }
  uselistorder i32 %v2_2abd9, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_2abc4, { 6, 1, 0, 2, 4, 3, 5, 8, 7, 9 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 2, 1, 0 }
  uselistorder i32 %storemerge3.be, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0137, { 0, 5, 4, 6, 7, 1, 2, 3 }
  uselistorder i32 %v2_2ab70, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 13, 14, 15, 16, 28, 26, 27 }
  uselistorder i32 (i32)* @unknown_5551e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_47ada, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_554ba, { 1, 0 }
  uselistorder i32 %arg2, { 6, 5, 7, 2, 1, 0, 4, 3, 10, 9, 8, 16, 15, 14, 13, 12, 11 }
  uselistorder i32 %arg1, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_2ab56, { 1, 0 }
}

define i32 @function_2ad0d() local_unnamed_addr {
dec_label_pc_2ad0d:
  %v0_2ad11 = load i32, i32* @eax, align 8
  ret i32 %v0_2ad11
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ad14:
  %v2_2ad2e = load i32, i32* %arg1, align 4
  ret i32 %v2_2ad2e
}

define i32 @function_2ad50() local_unnamed_addr {
dec_label_pc_2ad50:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ad50 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2ad50 = add i32 %v0_2ad50, -1
  store i32 %v1_2ad50, i32* %ecx.global-to-local, align 8
  %v0_2ad52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ad52
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad53:
  %v1_2ad6d = add i32 %arg1, 12
  %v2_2ad6d = inttoptr i32 %v1_2ad6d to i32*
  %v3_2ad6d = load i32, i32* %v2_2ad6d, align 4
  store i32 %v3_2ad6d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ad7c

bb:                                               ; preds = %dec_label_pc_2ad53
  %v2_2ad7a = call i32 @function_2ad81(i32 %arg1)
  br label %dec_label_pc_2ad7c

dec_label_pc_2ad7c:                               ; preds = %bb, %dec_label_pc_2ad53
  %v3_2ad7a = phi i32 [ %v2_2ad7a, %bb ], [ %v3_2ad6d, %dec_label_pc_2ad53 ]
  ret i32 %v3_2ad7a
}

define i32 @function_2ad81(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad81:
  %v0_2ad82 = load i32, i32* @eax, align 8
  ret i32 %v0_2ad82
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ad84:
  %v2_2ad9e = load i32, i32* %arg1, align 4
  ret i32 %v2_2ad9e
}

define i32 @function_2adc0() local_unnamed_addr {
dec_label_pc_2adc0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2adc0 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2adc0 = add i32 %v0_2adc0, -1
  store i32 %v1_2adc0, i32* %ecx.global-to-local, align 8
  %v0_2adc2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2adc2
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2adc4:
  %v2_2ade4 = load i32, i32* %arg2, align 4
  %v2_2adf0 = call i32 @unknown_55736(i32 %arg1, i32 %v2_2ade4)
  ret i32 %arg1
}

define i32 @function_2ae02(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ae02:
  %v0_2ae02 = load i1, i1* @zf, align 1
  br i1 %v0_2ae02, label %bb, label %dec_label_pc_2ae02.dec_label_pc_2ae04_crit_edge

dec_label_pc_2ae02.dec_label_pc_2ae04_crit_edge:  ; preds = %dec_label_pc_2ae02
  %v2_2ae02.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2ae04

bb:                                               ; preds = %dec_label_pc_2ae02
  %v1_2ae02 = call i32 @function_2ae09()
  br label %dec_label_pc_2ae04

dec_label_pc_2ae04:                               ; preds = %dec_label_pc_2ae02.dec_label_pc_2ae04_crit_edge, %bb
  %v2_2ae02 = phi i32 [ %v2_2ae02.pre, %dec_label_pc_2ae02.dec_label_pc_2ae04_crit_edge ], [ %v1_2ae02, %bb ]
  ret i32 %v2_2ae02

; uselistorder directives
  uselistorder label %dec_label_pc_2ae04, { 1, 0 }
}

define i32 @function_2ae09() local_unnamed_addr {
dec_label_pc_2ae09:
  %v0_2ae0a = load i32, i32* @eax, align 8
  ret i32 %v0_2ae0a
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ae0e:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ae3f

bb:                                               ; preds = %dec_label_pc_2ae0e
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2ae3d = call i32 @function_2ae44(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2ae3f

dec_label_pc_2ae3f:                               ; preds = %bb, %dec_label_pc_2ae0e
  %v4_2ae3d = phi i32 [ %v3_2ae3d, %bb ], [ 0, %dec_label_pc_2ae0e ]
  ret i32 %v4_2ae3d

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2ae44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ae44:
  %v0_2ae45 = load i32, i32* @eax, align 8
  ret i32 %v0_2ae45
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKSsEEEEEENT_11result_typeERSQ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ae46:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2ae67 = add i32 %tmp105, 4
  %v1_2ae6d = call i32 @unknown_531d0(i32 %v1_2ae67)
  %v1_2ae7a = call i32 @unknown_4f450(i32 %tmp105)
  %v2_2ae84 = load i32, i32* %arg1, align 4
  %v4_2ae98 = call i32 @unknown_5958b(i32 %v2_2ae84, i32 %v1_2ae7a, i32 %arg2, i32 %v1_2ae6d)
  store i32 %v4_2ae98, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2aea9

bb:                                               ; preds = %dec_label_pc_2ae46
  %v1_2aea7 = call i32 @function_2aeae()
  br label %dec_label_pc_2aea9

dec_label_pc_2aea9:                               ; preds = %bb, %dec_label_pc_2ae46
  %v2_2aea7 = phi i32 [ %v1_2aea7, %bb ], [ %v4_2ae98, %dec_label_pc_2ae46 ]
  ret i32 %v2_2aea7

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2aeae() local_unnamed_addr {
dec_label_pc_2aeae:
  %v0_2aeb3 = load i32, i32* @eax, align 8
  ret i32 %v0_2aeb3
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aeb4:
  %stack_var_-17 = alloca i32, align 4
  %v1_2aed1 = call i32 @unknown_5966d(i32 %arg1)
  %v2_2aeda = ptrtoint i32* %stack_var_-17 to i32
  %v2_2aee0 = call i32 @unknown_5585e(i32 %v2_2aeda, i32 %v1_2aed1)
  store i32 %v2_2aee0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2aef1

bb:                                               ; preds = %dec_label_pc_2aeb4
  %v1_2aeef = call i32 @function_2aef6()
  br label %dec_label_pc_2aef1

dec_label_pc_2aef1:                               ; preds = %bb, %dec_label_pc_2aeb4
  %v2_2aeef = phi i32 [ %v1_2aeef, %bb ], [ %v2_2aee0, %dec_label_pc_2aeb4 ]
  ret i32 %v2_2aeef
}

define i32 @function_2aef6() local_unnamed_addr {
dec_label_pc_2aef6:
  %v0_2aef7 = load i32, i32* @eax, align 8
  ret i32 %v0_2aef7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aef8:
  %v1_2af12 = add i32 %arg1, 8
  %v2_2af12 = inttoptr i32 %v1_2af12 to i32*
  %v3_2af12 = load i32, i32* %v2_2af12, align 4
  store i32 %v3_2af12, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2af21

bb:                                               ; preds = %dec_label_pc_2aef8
  %v2_2af1f = call i32 @function_2af26(i32 %arg1)
  br label %dec_label_pc_2af21

dec_label_pc_2af21:                               ; preds = %bb, %dec_label_pc_2aef8
  %v3_2af1f = phi i32 [ %v2_2af1f, %bb ], [ %v3_2af12, %dec_label_pc_2aef8 ]
  ret i32 %v3_2af1f
}

define i32 @function_2af26(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af26:
  %v0_2af27 = load i32, i32* @eax, align 8
  ret i32 %v0_2af27
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af28:
  %v1_2af42 = add i32 %arg1, 16
  store i32 %v1_2af42, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2af51

bb:                                               ; preds = %dec_label_pc_2af28
  %v2_2af4f = call i32 @function_2af56(i32 %arg1)
  br label %dec_label_pc_2af51

dec_label_pc_2af51:                               ; preds = %bb, %dec_label_pc_2af28
  %v3_2af4f = phi i32 [ %v2_2af4f, %bb ], [ %v1_2af42, %dec_label_pc_2af28 ]
  ret i32 %v3_2af4f
}

define i32 @function_2af56(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af56:
  %v0_2af57 = load i32, i32* @eax, align 8
  ret i32 %v0_2af57
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEEC1ERSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2af58:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2af89

bb:                                               ; preds = %dec_label_pc_2af58
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2af87 = call i32 @function_2af8e(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2af89

dec_label_pc_2af89:                               ; preds = %bb, %dec_label_pc_2af58
  %v4_2af87 = phi i32 [ %v3_2af87, %bb ], [ 0, %dec_label_pc_2af58 ]
  ret i32 %v4_2af87

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2af8e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2af8e:
  %v0_2af8f = load i32, i32* @eax, align 8
  ret i32 %v0_2af8f
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKS9_EEEEEENT_11result_typeERSQ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2af90:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2afb1 = add i32 %tmp105, 4
  %v1_2afb7 = call i32 @unknown_5331a(i32 %v1_2afb1)
  %v1_2afc4 = call i32 @unknown_4f59a(i32 %tmp105)
  %v2_2afce = load i32, i32* %arg1, align 4
  %v4_2afe2 = call i32 @unknown_59779(i32 %v2_2afce, i32 %v1_2afc4, i32 %arg2, i32 %v1_2afb7)
  store i32 %v4_2afe2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2aff3

bb:                                               ; preds = %dec_label_pc_2af90
  %v1_2aff1 = call i32 @function_2aff8()
  br label %dec_label_pc_2aff3

dec_label_pc_2aff3:                               ; preds = %bb, %dec_label_pc_2af90
  %v2_2aff1 = phi i32 [ %v1_2aff1, %bb ], [ %v4_2afe2, %dec_label_pc_2af90 ]
  ret i32 %v2_2aff1

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2aff8() local_unnamed_addr {
dec_label_pc_2aff8:
  %v0_2affd = load i32, i32* @eax, align 8
  ret i32 %v0_2affd
}

define i32 @_ZNSaIN11json_spirit10Value_implINS_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2affe:
  %v1_2b01b = call i32 @unknown_5985c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b02c

bb:                                               ; preds = %dec_label_pc_2affe
  %v1_2b02a = call i32 @function_2b031()
  br label %dec_label_pc_2b02c

dec_label_pc_2b02c:                               ; preds = %bb, %dec_label_pc_2affe
  %v2_2b02a = phi i32 [ %v1_2b02a, %bb ], [ 0, %dec_label_pc_2affe ]
  ret i32 %v2_2b02a
}

define i32 @function_2b031() local_unnamed_addr {
dec_label_pc_2b031:
  %v0_2b032 = load i32, i32* @eax, align 8
  ret i32 %v0_2b032
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b034:
  ret i32 0
}

define i32 @function_2b04c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b04c:
  %v0_2b04c = load i32, i32* @ebp, align 4
  %v1_2b04c = add i32 %v0_2b04c, 1
  store i32 %v1_2b04c, i32* @ebp, align 4
  %v0_2b04e = load i32, i32* @eax, align 8
  %v1_2b04e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b04e = xor i32 %v1_2b04e, %v0_2b04e
  %v3_2b04e = icmp eq i32 %v2_2b04e, 0
  store i32 %v2_2b04e, i32* @eax, align 8
  br i1 %v3_2b04e, label %bb, label %dec_label_pc_2b057

bb:                                               ; preds = %dec_label_pc_2b04c
  %v1_2b055 = call i32 @function_2b05c()
  br label %dec_label_pc_2b057

dec_label_pc_2b057:                               ; preds = %bb, %dec_label_pc_2b04c
  %v2_2b055 = phi i32 [ %v1_2b055, %bb ], [ %v2_2b04e, %dec_label_pc_2b04c ]
  ret i32 %v2_2b055
}

define i32 @function_2b05c() local_unnamed_addr {
dec_label_pc_2b05c:
  %v0_2b05d = load i32, i32* @eax, align 8
  ret i32 %v0_2b05d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b05e:
  ret i32 %arg2
}

define i32 @function_2b09c() local_unnamed_addr {
dec_label_pc_2b09c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b09c = load i32, i32* %ecx.global-to-local, align 8
  %v1_2b09c = add i32 %v0_2b09c, -1
  store i32 %v1_2b09c, i32* %ecx.global-to-local, align 8
  %v0_2b09e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b09e
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEEEEvT_S8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b09f:
  %v15_2b0d8105 = icmp eq i32 %arg1, %arg2
  %v1_2b0db106 = icmp eq i1 %v15_2b0d8105, false
  %v5_2b0de110 = icmp eq i1 %v1_2b0db106, false
  %v1_2b0e0111 = icmp eq i1 %v5_2b0de110, false
  br i1 %v1_2b0e0111, label %dec_label_pc_2b0be, label %dec_label_pc_2b0e2

dec_label_pc_2b0be:                               ; preds = %dec_label_pc_2b09f, %dec_label_pc_2b0be
  %stack_var_-32.0112 = phi i32 [ %v4_2b0d1, %dec_label_pc_2b0be ], [ %arg1, %dec_label_pc_2b09f ]
  %v1_2b0c4 = call i32 @unknown_59927(i32 %stack_var_-32.0112)
  %v1_2b0cc = call i32 @unknown_59954(i32 %v1_2b0c4)
  %v4_2b0d1 = add i32 %stack_var_-32.0112, 20
  %v15_2b0d8 = icmp eq i32 %v4_2b0d1, %arg2
  %v1_2b0db = icmp eq i1 %v15_2b0d8, false
  %v5_2b0de = icmp eq i1 %v1_2b0db, false
  %v1_2b0e0 = icmp eq i1 %v5_2b0de, false
  br i1 %v1_2b0e0, label %dec_label_pc_2b0be, label %dec_label_pc_2b0e2

dec_label_pc_2b0e2:                               ; preds = %dec_label_pc_2b0be, %dec_label_pc_2b09f
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b0ee

bb:                                               ; preds = %dec_label_pc_2b0e2
  %v1_2b0ec = call i32 @function_2b0f3()
  br label %dec_label_pc_2b0ee

dec_label_pc_2b0ee:                               ; preds = %bb, %dec_label_pc_2b0e2
  %v2_2b0ec = phi i32 [ %v1_2b0ec, %bb ], [ 0, %dec_label_pc_2b0e2 ]
  ret i32 %v2_2b0ec

; uselistorder directives
  uselistorder i32 %v4_2b0d1, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_2b0be, { 1, 0 }
}

define i32 @function_2b0f3() local_unnamed_addr {
dec_label_pc_2b0f3:
  %v0_2b0f4 = load i32, i32* @eax, align 8
  ret i32 %v0_2b0f4
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIK7uint256xEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b0f6:
  %v0_2b102 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2b113 = call i32 @unknown_599e0(i32 %arg1)
  ret i32 %v0_2b102
}

define i32 @function_2b11f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2b11f:
  %v2_2b11f = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2b11f = load i32, i32* @eax, align 8
  %v4_2b11f = trunc i32 %v3_2b11f to i8
  %v5_2b11f = add i8 %v4_2b11f, %v2_2b11f
  %v21_2b11f = inttoptr i32 %v3_2b11f to i8*
  store i8 %v5_2b11f, i8* %v21_2b11f, align 1
  %v0_2b121 = load i32, i32* @ebp, align 4
  %v1_2b121 = load i32, i32* @eax, align 8
  %v3_2b121 = add i32 %v0_2b121, -24
  %v4_2b121 = add i32 %v3_2b121, %v1_2b121
  %v5_2b121 = inttoptr i32 %v4_2b121 to i8*
  %v6_2b121 = load i8, i8* %v5_2b121, align 1
  %v7_2b121 = load i32, i32* @edx, align 4
  %v8_2b121 = udiv i32 %v7_2b121, 256
  %v9_2b121 = trunc i32 %v8_2b121 to i8
  %v10_2b121 = add i8 %v9_2b121, %v6_2b121
  store i8 %v10_2b121, i8* %v5_2b121, align 1
  %v31_2b121 = load i32, i32* @eax, align 8
  ret i32 %v31_2b121
}

define i32 @function_2b128() local_unnamed_addr {
dec_label_pc_2b128:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b128 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2b128 = add i32 %v0_2b128, -1
  store i32 %v1_2b128, i32* %ecx.global-to-local, align 8
  %v0_2b12a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b12a
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE13_Rb_tree_implIS7_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b12c:
  %v1_2b146 = add i32 %arg1, 4
  %v2_2b146 = inttoptr i32 %v1_2b146 to i32*
  store i32 0, i32* %v2_2b146, align 4
  %v1_2b150 = add i32 %arg1, 8
  %v2_2b150 = inttoptr i32 %v1_2b150 to i32*
  store i32 0, i32* %v2_2b150, align 4
  %v2_2b160 = add i32 %arg1, 12
  %v3_2b160 = inttoptr i32 %v2_2b160 to i32*
  store i32 %v1_2b146, i32* %v3_2b160, align 4
  %v2_2b16c = add i32 %arg1, 16
  %v3_2b16c = inttoptr i32 %v2_2b16c to i32*
  store i32 %v1_2b146, i32* %v3_2b16c, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b17b

bb:                                               ; preds = %dec_label_pc_2b12c
  %v2_2b179 = call i32 @function_2b180(i32 %arg1)
  br label %dec_label_pc_2b17b

dec_label_pc_2b17b:                               ; preds = %bb, %dec_label_pc_2b12c
  %v3_2b179 = phi i32 [ %v2_2b179, %bb ], [ 0, %dec_label_pc_2b12c ]
  ret i32 %v3_2b179
}

define i32 @function_2b180(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b180:
  %v0_2b181 = load i32, i32* @eax, align 8
  ret i32 %v0_2b181
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b182:
  ret i32 %arg2
}

define i32 @function_2b195(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b195:
  %v0_2b195 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2b19a = load i32, i32* @ebp, align 4
  %v2_2b19a = add i32 %v1_2b19a, -12
  %v3_2b19a = inttoptr i32 %v2_2b19a to i32*
  store i32 %v0_2b195, i32* %v3_2b19a, align 4
  %v0_2b19f = load i32, i32* @ebp, align 4
  %v1_2b19f = add i32 %v0_2b19f, -32
  %v2_2b19f = inttoptr i32 %v1_2b19f to i32*
  %v3_2b19f = load i32, i32* %v2_2b19f, align 4
  %v1_2b1a5 = call i32 @unknown_59a96(i32 %v3_2b19f)
  %v0_2b1ae = load i32, i32* @ebp, align 4
  %v1_2b1ae = add i32 %v0_2b1ae, -28
  %v2_2b1ae = inttoptr i32 %v1_2b1ae to i32*
  %v3_2b1ae = load i32, i32* %v2_2b1ae, align 4
  %v2_2b1b4 = call i32 @unknown_59ac4(i32 %v3_2b1ae, i32 %v1_2b1a5)
  %v0_2b1b9 = load i32, i32* @ebp, align 4
  %v1_2b1b9 = add i32 %v0_2b1b9, -28
  %v2_2b1b9 = inttoptr i32 %v1_2b1b9 to i32*
  %v3_2b1b9 = load i32, i32* %v2_2b1b9, align 4
  store i32 %v3_2b1b9, i32* @eax, align 8
  %v1_2b1bc = add i32 %v0_2b1b9, -12
  %v2_2b1bc = inttoptr i32 %v1_2b1bc to i32*
  %v3_2b1bc = load i32, i32* %v2_2b1bc, align 4
  %v1_2b1bf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b1bf = icmp eq i32 %v1_2b1bf, %v3_2b1bc
  br i1 %v3_2b1bf, label %bb, label %dec_label_pc_2b1c8

bb:                                               ; preds = %dec_label_pc_2b195
  %v1_2b1c6 = call i32 @function_2b1cd()
  br label %dec_label_pc_2b1c8

dec_label_pc_2b1c8:                               ; preds = %bb, %dec_label_pc_2b195
  %v2_2b1c6 = phi i32 [ %v1_2b1c6, %bb ], [ %v3_2b1b9, %dec_label_pc_2b195 ]
  ret i32 %v2_2b1c6
}

define i32 @function_2b1cd() local_unnamed_addr {
dec_label_pc_2b1cd:
  %v0_2b1ce = load i32, i32* @eax, align 8
  ret i32 %v0_2b1ce
}

define i32 @_ZNSaISt4pairIK7uint256xEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b1d2:
  %v1_2b1ef = call i32 @unknown_59b50(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b200

bb:                                               ; preds = %dec_label_pc_2b1d2
  %v1_2b1fe = call i32 @function_2b205()
  br label %dec_label_pc_2b200

dec_label_pc_2b200:                               ; preds = %bb, %dec_label_pc_2b1d2
  %v2_2b1fe = phi i32 [ %v1_2b1fe, %bb ], [ 0, %dec_label_pc_2b1d2 ]
  ret i32 %v2_2b1fe
}

define i32 @function_2b205() local_unnamed_addr {
dec_label_pc_2b205:
  %v0_2b206 = load i32, i32* @eax, align 8
  ret i32 %v0_2b206
}

define i32 @_ZSt11__addressofISt4pairIK7uint256xEEPT_RS4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b207:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b22d

bb:                                               ; preds = %dec_label_pc_2b207
  %v2_2b22b = call i32 @function_2b232(i32 %arg1)
  br label %dec_label_pc_2b22d

dec_label_pc_2b22d:                               ; preds = %bb, %dec_label_pc_2b207
  %v3_2b22b = phi i32 [ %v2_2b22b, %bb ], [ %arg1, %dec_label_pc_2b207 ]
  ret i32 %v3_2b22b
}

define i32 @function_2b232(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b232:
  %v0_2b233 = load i32, i32* @eax, align 8
  ret i32 %v0_2b233
}

define i32 @_ZNSt4pairIK7uint256xED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b234:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b257

bb:                                               ; preds = %dec_label_pc_2b234
  %v2_2b255 = call i32 @function_2b25c(i32 %arg1)
  br label %dec_label_pc_2b257

dec_label_pc_2b257:                               ; preds = %bb, %dec_label_pc_2b234
  %v3_2b255 = phi i32 [ %v2_2b255, %bb ], [ 0, %dec_label_pc_2b234 ]
  ret i32 %v3_2b255
}

define i32 @function_2b25c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b25c:
  %v0_2b25d = load i32, i32* @eax, align 8
  ret i32 %v0_2b25d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256xEE7destroyEPS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b25e:
  %v1_2b281 = call i32 @unknown_56492(i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b292

bb:                                               ; preds = %dec_label_pc_2b25e
  %v1_2b290 = call i32 @function_2b297()
  br label %dec_label_pc_2b292

dec_label_pc_2b292:                               ; preds = %bb, %dec_label_pc_2b25e
  %v2_2b290 = phi i32 [ %v1_2b290, %bb ], [ 0, %dec_label_pc_2b25e ]
  ret i32 %v2_2b290
}

define i32 @function_2b297() local_unnamed_addr {
dec_label_pc_2b297:
  %v0_2b298 = load i32, i32* @eax, align 8
  ret i32 %v0_2b298
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b29a:
  %v3_2b2cc = call i32 @unknown_59c42(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b2dd

bb:                                               ; preds = %dec_label_pc_2b29a
  %v1_2b2db = call i32 @function_2b2e2()
  br label %dec_label_pc_2b2dd

dec_label_pc_2b2dd:                               ; preds = %bb, %dec_label_pc_2b29a
  %v2_2b2db = phi i32 [ %v1_2b2db, %bb ], [ 0, %dec_label_pc_2b29a ]
  ret i32 %v2_2b2db
}

define i32 @function_2b2e2() local_unnamed_addr {
dec_label_pc_2b2e2:
  %v0_2b2e3 = load i32, i32* @eax, align 8
  ret i32 %v0_2b2e3
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b2e4:
  %v2_2b30e = call i32 @unknown_59cce(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b322

bb:                                               ; preds = %dec_label_pc_2b2e4
  %v1_2b320 = call i32 @function_2b327()
  br label %dec_label_pc_2b322

dec_label_pc_2b322:                               ; preds = %bb, %dec_label_pc_2b2e4
  %v2_2b320 = phi i32 [ %v1_2b320, %bb ], [ %arg1, %dec_label_pc_2b2e4 ]
  ret i32 %v2_2b320

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2b327() local_unnamed_addr {
dec_label_pc_2b327:
  %v0_2b328 = load i32, i32* @eax, align 8
  ret i32 %v0_2b328
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b32c:
  %v1_2b34c = add i32 %arg2, 4
  %v2_2b359 = call i32 @unknown_59d16(i32 %arg1, i32 %v1_2b34c)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b36d

bb:                                               ; preds = %dec_label_pc_2b32c
  %v1_2b36b = call i32 @function_2b372()
  br label %dec_label_pc_2b36d

dec_label_pc_2b36d:                               ; preds = %bb, %dec_label_pc_2b32c
  %v2_2b36b = phi i32 [ %v1_2b36b, %bb ], [ %arg1, %dec_label_pc_2b32c ]
  ret i32 %v2_2b36b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2b372() local_unnamed_addr {
dec_label_pc_2b372:
  %v0_2b373 = load i32, i32* @eax, align 8
  ret i32 %v0_2b373
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b376:
  %v1_2b390 = add i32 %arg1, 4
  store i32 %v1_2b390, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b39f

bb:                                               ; preds = %dec_label_pc_2b376
  %v2_2b39d = call i32 @function_2b3a4(i32 %arg1)
  br label %dec_label_pc_2b39f

dec_label_pc_2b39f:                               ; preds = %bb, %dec_label_pc_2b376
  %v3_2b39d = phi i32 [ %v2_2b39d, %bb ], [ %v1_2b390, %dec_label_pc_2b376 ]
  ret i32 %v3_2b39d
}

define i32 @function_2b3a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b3a4:
  %v0_2b3a5 = load i32, i32* @eax, align 8
  ret i32 %v0_2b3a5
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS3_ESC_RS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2b3a6:
  %v10_2b425117126 = icmp eq i32 %arg3, 0
  %v1_2b429118127 = icmp eq i1 %v10_2b425117126, false
  %v5_2b42c122129 = icmp eq i1 %v1_2b429118127, false
  %v1_2b42e123130 = icmp eq i1 %v5_2b42c122129, false
  br i1 %v1_2b42e123130, label %dec_label_pc_2b3d7.lr.ph, label %dec_label_pc_2b430

dec_label_pc_2b3d7.lr.ph:                         ; preds = %dec_label_pc_2b3a6, %dec_label_pc_2b401
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_2b401 ], [ %arg4, %dec_label_pc_2b3a6 ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_2b40d, %dec_label_pc_2b401 ], [ %arg3, %dec_label_pc_2b3a6 ]
  br label %dec_label_pc_2b3d7

dec_label_pc_2b3d7:                               ; preds = %dec_label_pc_2b3d7.lr.ph, %dec_label_pc_2b417
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_2b3d7.lr.ph ], [ %v1_2b41d, %dec_label_pc_2b417 ]
  %v1_2b3dd = call i32 @unknown_56f22(i32 %stack_var_-40.0124)
  %v3_2b3f5 = call i32 @unknown_48370(i32 %arg2, i32 %v1_2b3dd, i32 %arg5)
  %v1_2b3fa = xor i32 %v3_2b3f5, 1
  %v4_2b3fa = trunc i32 %v1_2b3fa to i8
  %v5_2b3fd = icmp eq i8 %v4_2b3fa, 0
  br i1 %v5_2b3fd, label %dec_label_pc_2b417, label %dec_label_pc_2b401

dec_label_pc_2b401:                               ; preds = %dec_label_pc_2b3d7
  %v1_2b40d = call i32 @unknown_515a4(i32 %stack_var_-40.0124)
  %v10_2b425117 = icmp eq i32 %v1_2b40d, 0
  %v1_2b429118 = icmp eq i1 %v10_2b425117, false
  %v5_2b42c122 = icmp eq i1 %v1_2b429118, false
  %v1_2b42e123 = icmp eq i1 %v5_2b42c122, false
  br i1 %v1_2b42e123, label %dec_label_pc_2b3d7.lr.ph, label %dec_label_pc_2b430

dec_label_pc_2b417:                               ; preds = %dec_label_pc_2b3d7
  %v1_2b41d = call i32 @unknown_51574(i32 %stack_var_-40.0124)
  %v10_2b425 = icmp eq i32 %v1_2b41d, 0
  %v1_2b429 = icmp eq i1 %v10_2b425, false
  %v5_2b42c = icmp eq i1 %v1_2b429, false
  %v1_2b42e = icmp eq i1 %v5_2b42c, false
  br i1 %v1_2b42e, label %dec_label_pc_2b3d7, label %dec_label_pc_2b430

dec_label_pc_2b430:                               ; preds = %dec_label_pc_2b417, %dec_label_pc_2b3a6, %dec_label_pc_2b401
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_2b3a6 ], [ %stack_var_-40.0124, %dec_label_pc_2b401 ], [ %stack_var_-44.0.ph132, %dec_label_pc_2b417 ]
  %v2_2b43d = call i32 @unknown_56800(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b451

bb:                                               ; preds = %dec_label_pc_2b430
  %v1_2b44f = call i32 @function_2b456()
  br label %dec_label_pc_2b451

dec_label_pc_2b451:                               ; preds = %bb, %dec_label_pc_2b430
  %v2_2b44f = phi i32 [ %v1_2b44f, %bb ], [ %arg1, %dec_label_pc_2b430 ]
  ret i32 %v2_2b44f

; uselistorder directives
  uselistorder i32 %v1_2b40d, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2b430, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2b3d7, { 1, 0 }
  uselistorder label %dec_label_pc_2b3d7.lr.ph, { 1, 0 }
}

define i32 @function_2b456() local_unnamed_addr {
dec_label_pc_2b456:
  %v0_2b457 = load i32, i32* @eax, align 8
  ret i32 %v0_2b457
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK7uint256xEEC1EPSt13_Rb_tree_nodeIS3_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b45a:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b48b

bb:                                               ; preds = %dec_label_pc_2b45a
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2b489 = call i32 @function_2b490(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2b48b

dec_label_pc_2b48b:                               ; preds = %bb, %dec_label_pc_2b45a
  %v4_2b489 = phi i32 [ %v3_2b489, %bb ], [ 0, %dec_label_pc_2b45a ]
  ret i32 %v4_2b489

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2b490(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b490:
  %v0_2b491 = load i32, i32* @eax, align 8
  ret i32 %v0_2b491
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b492:
  %v1_2b4ac = add i32 %arg1, 16
  store i32 %v1_2b4ac, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b4bb

bb:                                               ; preds = %dec_label_pc_2b492
  %v2_2b4b9 = call i32 @function_2b4c0(i32 %arg1)
  br label %dec_label_pc_2b4bb

dec_label_pc_2b4bb:                               ; preds = %bb, %dec_label_pc_2b492
  %v3_2b4b9 = phi i32 [ %v2_2b4b9, %bb ], [ %v1_2b4ac, %dec_label_pc_2b492 ]
  ret i32 %v3_2b4b9
}

define i32 @function_2b4c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b4c0:
  %v0_2b4c1 = load i32, i32* @eax, align 8
  ret i32 %v0_2b4c1
}

define i32 @_ZNKSt10_Select1stISt4pairIK7uint256xEEclERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b4c2:
  store i32 %arg2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b4ee

bb:                                               ; preds = %dec_label_pc_2b4c2
  %v3_2b4ec = call i32 @function_2b4f3(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2b4ee

dec_label_pc_2b4ee:                               ; preds = %bb, %dec_label_pc_2b4c2
  %v4_2b4ec = phi i32 [ %v3_2b4ec, %bb ], [ %arg2, %dec_label_pc_2b4c2 ]
  ret i32 %v4_2b4ec
}

define i32 @function_2b4f3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b4f3:
  %v0_2b4f4 = load i32, i32* @eax, align 8
  ret i32 %v0_2b4f4
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b4f6:
  %v1_2b510 = add i32 %arg1, 20
  %v2_2b510 = inttoptr i32 %v1_2b510 to i32*
  %v3_2b510 = load i32, i32* %v2_2b510, align 4
  store i32 %v3_2b510, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b51f

bb:                                               ; preds = %dec_label_pc_2b4f6
  %v2_2b51d = call i32 @function_2b524(i32 %arg1)
  br label %dec_label_pc_2b51f

dec_label_pc_2b51f:                               ; preds = %bb, %dec_label_pc_2b4f6
  %v3_2b51d = phi i32 [ %v2_2b51d, %bb ], [ %v3_2b510, %dec_label_pc_2b4f6 ]
  ret i32 %v3_2b51d
}

define i32 @function_2b524(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b524:
  %v0_2b525 = load i32, i32* @eax, align 8
  ret i32 %v0_2b525
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2b526:
  %stack_var_-18 = alloca i32, align 4
  %v10_2b556 = icmp eq i32 %arg3, 0
  %v1_2b55a = icmp eq i1 %v10_2b556, false
  br i1 %v1_2b55a, label %dec_label_pc_2b5ae, label %dec_label_pc_2b55c

dec_label_pc_2b55c:                               ; preds = %dec_label_pc_2b526
  %v1_2b562 = call i32 @unknown_5689c(i32 %arg2)
  %v15_2b567 = icmp eq i32 %v1_2b562, %arg4
  br i1 %v15_2b567, label %dec_label_pc_2b5ae, label %dec_label_pc_2b56c

dec_label_pc_2b56c:                               ; preds = %dec_label_pc_2b55c
  %v1_2b572 = call i32 @unknown_5228c(i32 %arg4)
  %v2_2b580 = ptrtoint i32* %stack_var_-18 to i32
  %v2_2b586 = call i32 @unknown_569e8(i32 %v2_2b580, i32 %arg5)
  %v3_2b599 = call i32 @unknown_484f0(i32 %arg2, i32 %v2_2b586, i32 %v1_2b572)
  %v4_2b59e = trunc i32 %v3_2b599 to i8
  %v5_2b59e = icmp ne i8 %v4_2b59e, 0
  %phitmp = zext i1 %v5_2b59e to i32
  br label %dec_label_pc_2b5ae

dec_label_pc_2b5ae:                               ; preds = %dec_label_pc_2b56c, %dec_label_pc_2b526, %dec_label_pc_2b55c
  %storemerge = phi i32 [ 1, %dec_label_pc_2b55c ], [ 1, %dec_label_pc_2b526 ], [ %phitmp, %dec_label_pc_2b56c ]
  %v2_2b5be = call i32 @unknown_59f4a(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2b5ae, { 0, 2, 1 }
}

define i32 @function_2b61e() local_unnamed_addr {
dec_label_pc_2b61e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2b61e = load i32, i32* %ebx.global-to-local, align 4
  %v1_2b61e = add i32 %v0_2b61e, 1566262468
  %v2_2b61e = inttoptr i32 %v1_2b61e to i32*
  %v3_2b61e = load i32, i32* %v2_2b61e, align 4
  %v4_2b61e = add i32 %v3_2b61e, 1
  store i32 %v4_2b61e, i32* %v2_2b61e, align 4
  %v0_2b624 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b624
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b628:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %v1_2b652 = call i32 @unknown_4aab2(i32 %arg2)
  %v1_2b660 = call i32 @unknown_5699e(i32 %arg2)
  %v2_2b688 = ptrtoint i32* %stack_var_-22 to i32
  %v10_2b6ca122 = icmp eq i32 %v1_2b652, 0
  %v1_2b6ce123 = icmp eq i1 %v10_2b6ca122, false
  %v5_2b6d1127 = icmp eq i1 %v1_2b6ce123, false
  %v1_2b6d3128 = icmp eq i1 %v5_2b6d1127, false
  br i1 %v1_2b6d3128, label %dec_label_pc_2b66e, label %dec_label_pc_2b6d5

dec_label_pc_2b66e:                               ; preds = %dec_label_pc_2b628, %dec_label_pc_2b6ca.backedge
  %stack_var_-32.0129 = phi i32 [ %storemerge2.be, %dec_label_pc_2b6ca.backedge ], [ %v1_2b652, %dec_label_pc_2b628 ]
  %v1_2b67a = call i32 @unknown_571a4(i32 %stack_var_-32.0129)
  %v2_2b68e = call i32 @unknown_56aea(i32 %v2_2b688, i32 %arg3)
  %v3_2b6a1 = call i32 @unknown_485f2(i32 %arg2, i32 %v2_2b68e, i32 %v1_2b67a)
  %v1_2b6a6 = trunc i32 %v3_2b6a1 to i8
  %v10_2b6a9 = icmp eq i8 %v1_2b6a6, 0
  br i1 %v10_2b6a9, label %dec_label_pc_2b6bc, label %dec_label_pc_2b6af

dec_label_pc_2b6af:                               ; preds = %dec_label_pc_2b66e
  %v1_2b6b5 = call i32 @unknown_51826(i32 %stack_var_-32.0129)
  br label %dec_label_pc_2b6ca.backedge

dec_label_pc_2b6bc:                               ; preds = %dec_label_pc_2b66e
  %v1_2b6c2 = call i32 @unknown_517f6(i32 %stack_var_-32.0129)
  br label %dec_label_pc_2b6ca.backedge

dec_label_pc_2b6ca.backedge:                      ; preds = %dec_label_pc_2b6bc, %dec_label_pc_2b6af
  %storemerge2.be = phi i32 [ %v1_2b6c2, %dec_label_pc_2b6bc ], [ %v1_2b6b5, %dec_label_pc_2b6af ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_2b6bc ], [ %v1_2b6a6, %dec_label_pc_2b6af ]
  %v10_2b6ca = icmp eq i32 %storemerge2.be, 0
  %v1_2b6ce = icmp eq i1 %v10_2b6ca, false
  %v5_2b6d1 = icmp eq i1 %v1_2b6ce, false
  %v1_2b6d3 = icmp eq i1 %v5_2b6d1, false
  br i1 %v1_2b6d3, label %dec_label_pc_2b66e, label %dec_label_pc_2b6d5

dec_label_pc_2b6d5:                               ; preds = %dec_label_pc_2b6ca.backedge, %dec_label_pc_2b628
  %stack_var_-28.0.lcssa = phi i32 [ %v1_2b660, %dec_label_pc_2b628 ], [ %stack_var_-32.0129, %dec_label_pc_2b6ca.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_2b628 ], [ %stack_var_-17.0.be, %dec_label_pc_2b6ca.backedge ]
  %v2_2b6dc = ptrtoint i32* %stack_var_-48 to i32
  %v2_2b6e2 = call i32 @unknown_56a82(i32 %v2_2b6dc, i32 %stack_var_-28.0.lcssa)
  %v10_2b6e7 = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_2b6e7, label %bb, label %dec_label_pc_2b6f1

bb:                                               ; preds = %dec_label_pc_2b6d5
  %v1_2b6eb = call i32 @function_2b773()
  br label %dec_label_pc_2b6f1

dec_label_pc_2b6f1:                               ; preds = %bb, %dec_label_pc_2b6d5
  %v2_2b6f1 = ptrtoint i32* %stack_var_-44 to i32
  %v2_2b6fe = call i32 @unknown_5a0d8(i32 %v2_2b6f1, i32 %arg2)
  %v2_2b713 = call i32 @unknown_4aebc(i32 %v2_2b6dc, i32 %v2_2b6f1)
  %v4_2b718 = trunc i32 %v2_2b713 to i8
  %v5_2b718 = icmp eq i8 %v4_2b718, 0
  br i1 %v5_2b718, label %bb121, label %dec_label_pc_2b71c

bb121:                                            ; preds = %dec_label_pc_2b6f1
  %v1_2b71a = call i32 @function_2b768()
  br label %dec_label_pc_2b71c

dec_label_pc_2b71c:                               ; preds = %bb121, %dec_label_pc_2b6f1
  %v2_2b720 = ptrtoint i32* %stack_var_-40 to i32
  ret i32 %v2_2b720

; uselistorder directives
  uselistorder i32 %stack_var_-32.0129, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_2b66e, { 1, 0 }
}

define i32 @function_2b73e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b73e:
  %v5_2b742 = call i32 @unknown_56b4e(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  %v0_2b74a = load i32, i32* @ebp, align 4
  %v1_2b74a = add i32 %v0_2b74a, -17
  %v1_2b751 = add i32 %v0_2b74a, -36
  %v1_2b758 = add i32 %v0_2b74a, -60
  %v2_2b758 = inttoptr i32 %v1_2b758 to i32*
  %v3_2b758 = load i32, i32* %v2_2b758, align 4
  %v3_2b75e = call i32 @unknown_5a122(i32 %v3_2b758, i32 %v1_2b751, i32 %v1_2b74a)
  %v0_2b763 = call i32 @function_2b811()
  ret i32 %v0_2b763

; uselistorder directives
  uselistorder i32 -17, { 0, 3, 4, 1, 2 }
}

define i32 @function_2b768() local_unnamed_addr {
dec_label_pc_2b768:
  %v0_2b768 = load i32, i32* @ebp, align 4
  %v1_2b768 = add i32 %v0_2b768, -44
  %v1_2b76e = call i32 @unknown_5a16e(i32 %v1_2b768)
  ret i32 %v1_2b76e
}

define i32 @function_2b773() local_unnamed_addr {
dec_label_pc_2b773:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2b773 = load i32, i32* @ebp, align 4
  %v1_2b773 = add i32 %v0_2b773, -68
  %v2_2b773 = inttoptr i32 %v1_2b773 to i32*
  %v3_2b773 = load i32, i32* %v2_2b773, align 4
  %v1_2b77a = add i32 %v0_2b773, -16
  %v2_2b780 = call i32 @unknown_56aea(i32 %v1_2b77a, i32 %v3_2b773)
  store i32 %v2_2b780, i32* %ebx.global-to-local, align 4
  %v0_2b787 = load i32, i32* @ebp, align 4
  %v1_2b787 = add i32 %v0_2b787, -44
  %v2_2b787 = inttoptr i32 %v1_2b787 to i32*
  %v3_2b787 = load i32, i32* %v2_2b787, align 4
  %v1_2b78d = call i32 @unknown_5238e(i32 %v3_2b787)
  %v0_2b794 = load i32, i32* @ebp, align 4
  %v1_2b794 = add i32 %v0_2b794, -64
  %v2_2b794 = inttoptr i32 %v1_2b794 to i32*
  %v3_2b794 = load i32, i32* %v2_2b794, align 4
  %v0_2b797 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2b7a2 = call i32 @unknown_485f2(i32 %v3_2b794, i32 %v1_2b78d, i32 %v0_2b797)
  %v4_2b7a7 = trunc i32 %v3_2b7a2 to i8
  %v5_2b7a7 = icmp eq i8 %v4_2b7a7, 0
  %v0_2b7f4 = load i32, i32* @ebp, align 4
  br i1 %v5_2b7a7, label %dec_label_pc_2b7f4, label %dec_label_pc_2b7ab

dec_label_pc_2b7ab:                               ; preds = %dec_label_pc_2b773
  %v1_2b7ab = add i32 %v0_2b7f4, -15
  %v2_2b7ab = inttoptr i32 %v1_2b7ab to i8*
  store i8 1, i8* %v2_2b7ab, align 1
  %v0_2b7af = load i32, i32* @ebp, align 4
  %v1_2b7af = add i32 %v0_2b7af, -32
  %v1_2b7b2 = add i32 %v0_2b7af, -68
  %v2_2b7b2 = inttoptr i32 %v1_2b7b2 to i32*
  %v3_2b7b2 = load i32, i32* %v2_2b7b2, align 4
  %v1_2b7b9 = add i32 %v0_2b7af, -24
  %v2_2b7b9 = inttoptr i32 %v1_2b7b9 to i32*
  %v3_2b7b9 = load i32, i32* %v2_2b7b9, align 4
  %v1_2b7c0 = add i32 %v0_2b7af, -28
  %v2_2b7c0 = inttoptr i32 %v1_2b7c0 to i32*
  %v3_2b7c0 = load i32, i32* %v2_2b7c0, align 4
  %v1_2b7c7 = add i32 %v0_2b7af, -64
  %v2_2b7c7 = inttoptr i32 %v1_2b7c7 to i32*
  %v3_2b7c7 = load i32, i32* %v2_2b7c7, align 4
  %v5_2b7d1 = call i32 @unknown_56b4e(i32 %v1_2b7af, i32 %v3_2b7c7, i32 %v3_2b7c0, i32 %v3_2b7b9, i32 %v3_2b7b2)
  %v0_2b7d9 = load i32, i32* @ebp, align 4
  %v1_2b7d9 = add i32 %v0_2b7d9, -15
  %v1_2b7e0 = add i32 %v0_2b7d9, -32
  %v1_2b7e7 = add i32 %v0_2b7d9, -60
  %v2_2b7e7 = inttoptr i32 %v1_2b7e7 to i32*
  %v3_2b7e7 = load i32, i32* %v2_2b7e7, align 4
  %v3_2b7ed = call i32 @unknown_5a122(i32 %v3_2b7e7, i32 %v1_2b7e0, i32 %v1_2b7d9)
  %v0_2b7f2 = call i32 @function_2b811()
  ret i32 %v0_2b7f2

dec_label_pc_2b7f4:                               ; preds = %dec_label_pc_2b773
  %v1_2b7f4 = add i32 %v0_2b7f4, -14
  %v2_2b7f4 = inttoptr i32 %v1_2b7f4 to i8*
  store i8 0, i8* %v2_2b7f4, align 1
  %v0_2b7f8 = load i32, i32* @ebp, align 4
  %v1_2b7f8 = add i32 %v0_2b7f8, -14
  %v1_2b7ff = add i32 %v0_2b7f8, -44
  %v1_2b806 = add i32 %v0_2b7f8, -60
  %v2_2b806 = inttoptr i32 %v1_2b806 to i32*
  %v3_2b806 = load i32, i32* %v2_2b806, align 4
  %v3_2b80c = call i32 @unknown_5a122(i32 %v3_2b806, i32 %v1_2b7ff, i32 %v1_2b7f8)
  ret i32 %v3_2b80c

; uselistorder directives
  uselistorder i32 %v0_2b7af, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_2b7f4, { 1, 0 }
  uselistorder i32 -14, { 4, 5, 11, 12, 8, 9, 7, 0, 6, 13, 1, 10, 2, 3 }
  uselistorder i32 ()* @function_2b811, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_5a122, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_56b4e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_485f2, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_56aea, { 1, 0 }
}

define i32 @function_2b811() local_unnamed_addr {
dec_label_pc_2b811:
  %v0_2b811 = load i32, i32* @ebp, align 4
  %v1_2b811 = add i32 %v0_2b811, -60
  %v2_2b811 = inttoptr i32 %v1_2b811 to i32*
  %v3_2b811 = load i32, i32* %v2_2b811, align 4
  store i32 %v3_2b811, i32* @eax, align 8
  %v1_2b814 = add i32 %v0_2b811, -12
  %v2_2b814 = inttoptr i32 %v1_2b814 to i32*
  %v3_2b814 = load i32, i32* %v2_2b814, align 4
  %v1_2b817 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b817 = icmp eq i32 %v1_2b817, %v3_2b814
  br i1 %v3_2b817, label %bb, label %dec_label_pc_2b820

bb:                                               ; preds = %dec_label_pc_2b811
  %v1_2b81e = call i32 @function_2b825()
  br label %dec_label_pc_2b820

dec_label_pc_2b820:                               ; preds = %bb, %dec_label_pc_2b811
  %v2_2b81e = phi i32 [ %v1_2b81e, %bb ], [ %v3_2b811, %dec_label_pc_2b811 ]
  ret i32 %v2_2b81e
}

define i32 @function_2b825() local_unnamed_addr {
dec_label_pc_2b825:
  %v0_2b829 = load i32, i32* @eax, align 8
  ret i32 %v0_2b829
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b82c:
  %v1_2b846 = add i32 %arg1, 12
  store i32 %v1_2b846, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b855

bb:                                               ; preds = %dec_label_pc_2b82c
  %v2_2b853 = call i32 @function_2b85a(i32 %arg1)
  br label %dec_label_pc_2b855

dec_label_pc_2b855:                               ; preds = %bb, %dec_label_pc_2b82c
  %v3_2b853 = phi i32 [ %v2_2b853, %bb ], [ %v1_2b846, %dec_label_pc_2b82c ]
  ret i32 %v3_2b853
}

define i32 @function_2b85a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b85a:
  %v0_2b85b = load i32, i32* @eax, align 8
  ret i32 %v0_2b85b
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256xEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b85c:
  %v2_2b876 = load i32, i32* %arg1, align 4
  ret i32 %v2_2b876
}

define i32 @function_2b888(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b888:
  %v0_2b888 = load i32, i32* @ebp, align 4
  %v1_2b888 = add i32 %v0_2b888, -12
  %v2_2b888 = inttoptr i32 %v1_2b888 to i32*
  %v3_2b888 = load i32, i32* %v2_2b888, align 4
  %v1_2b88b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b88b = icmp eq i32 %v1_2b88b, %v3_2b888
  br i1 %v3_2b88b, label %bb, label %dec_label_pc_2b888.dec_label_pc_2b894_crit_edge

dec_label_pc_2b888.dec_label_pc_2b894_crit_edge:  ; preds = %dec_label_pc_2b888
  %v2_2b892.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2b894

bb:                                               ; preds = %dec_label_pc_2b888
  %v1_2b892 = call i32 @function_2b899()
  br label %dec_label_pc_2b894

dec_label_pc_2b894:                               ; preds = %dec_label_pc_2b888.dec_label_pc_2b894_crit_edge, %bb
  %v2_2b892 = phi i32 [ %v2_2b892.pre, %dec_label_pc_2b888.dec_label_pc_2b894_crit_edge ], [ %v1_2b892, %bb ]
  ret i32 %v2_2b892

; uselistorder directives
  uselistorder label %dec_label_pc_2b894, { 1, 0 }
}

define i32 @function_2b899() local_unnamed_addr {
dec_label_pc_2b899:
  %v0_2b89a = load i32, i32* @eax, align 8
  ret i32 %v0_2b89a
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b89b:
  %v1_2b8b5 = add i32 %arg1, 12
  %v2_2b8b5 = inttoptr i32 %v1_2b8b5 to i32*
  %v3_2b8b5 = load i32, i32* %v2_2b8b5, align 4
  store i32 %v3_2b8b5, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2b8c4

bb:                                               ; preds = %dec_label_pc_2b89b
  %v2_2b8c2 = call i32 @function_2b8c9(i32 %arg1)
  br label %dec_label_pc_2b8c4

dec_label_pc_2b8c4:                               ; preds = %bb, %dec_label_pc_2b89b
  %v3_2b8c2 = phi i32 [ %v2_2b8c2, %bb ], [ %v3_2b8b5, %dec_label_pc_2b89b ]
  ret i32 %v3_2b8c2
}

define i32 @function_2b8c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b8c9:
  %v0_2b8ca = load i32, i32* @eax, align 8
  ret i32 %v0_2b8ca
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIK7uint256xEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b8cc:
  %v2_2b8e6 = load i32, i32* %arg1, align 4
  ret i32 %v2_2b8e6
}

define i32 @function_2b908() local_unnamed_addr {
dec_label_pc_2b908:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b908 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2b908 = add i32 %v0_2b908, -1
  store i32 %v1_2b908, i32* %ecx.global-to-local, align 8
  %v0_2b90a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b90a
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIK7uint256xEE13_M_const_castEv() local_unnamed_addr {
dec_label_pc_2b90c:
  %eax.global-to-local = alloca i32, align 4
  %v17_2b90f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2b90f
}

define i32 @function_2b914(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b914:
  %v0_2b914 = load i32, i32* @ecx, align 8
  %v1_2b914 = add i32 %v0_2b914, 1166795845
  %v2_2b914 = inttoptr i32 %v1_2b914 to i8*
  %v3_2b914 = load i8, i8* %v2_2b914, align 1
  %v5_2b914 = trunc i32 %v0_2b914 to i8
  %v6_2b914 = or i8 %v3_2b914, %v5_2b914
  store i8 %v6_2b914, i8* %v2_2b914, align 1
  %v0_2b91c = load i32, i32* @ebp, align 4
  %v1_2b91c = add i32 %v0_2b91c, 1
  store i32 %v1_2b91c, i32* @ebp, align 4
  %v0_2b91f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b924 = add i32 %v0_2b91c, -11
  %v3_2b924 = inttoptr i32 %v2_2b924 to i32*
  store i32 %v0_2b91f, i32* %v3_2b924, align 4
  %v0_2b929 = load i32, i32* @ebp, align 4
  %v1_2b929 = add i32 %v0_2b929, -32
  %v2_2b929 = inttoptr i32 %v1_2b929 to i32*
  %v3_2b929 = load i32, i32* %v2_2b929, align 4
  %v1_2b92c = inttoptr i32 %v3_2b929 to i32*
  %v2_2b92c = load i32, i32* %v1_2b92c, align 4
  %v1_2b932 = add i32 %v0_2b929, -28
  %v2_2b932 = inttoptr i32 %v1_2b932 to i32*
  %v3_2b932 = load i32, i32* %v2_2b932, align 4
  %v2_2b938 = call i32 @unknown_56d66(i32 %v3_2b932, i32 %v2_2b92c)
  %v0_2b93d = load i32, i32* @ebp, align 4
  %v1_2b93d = add i32 %v0_2b93d, -28
  %v2_2b93d = inttoptr i32 %v1_2b93d to i32*
  %v3_2b93d = load i32, i32* %v2_2b93d, align 4
  store i32 %v3_2b93d, i32* @eax, align 8
  %v1_2b940 = add i32 %v0_2b93d, -12
  %v2_2b940 = inttoptr i32 %v1_2b940 to i32*
  %v3_2b940 = load i32, i32* %v2_2b940, align 4
  %v1_2b943 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b943 = icmp eq i32 %v1_2b943, %v3_2b940
  br i1 %v3_2b943, label %bb, label %dec_label_pc_2b94c

bb:                                               ; preds = %dec_label_pc_2b914
  %v1_2b94a = call i32 @function_2b951()
  br label %dec_label_pc_2b94c

dec_label_pc_2b94c:                               ; preds = %bb, %dec_label_pc_2b914
  %v3_2b94a = phi i32 [ %v1_2b94a, %bb ], [ %v3_2b93d, %dec_label_pc_2b914 ]
  ret i32 %v3_2b94a
}

define i32 @function_2b951() local_unnamed_addr {
dec_label_pc_2b951:
  %v0_2b952 = load i32, i32* @eax, align 8
  ret i32 %v0_2b952
}

define i32 @_Z12SerReadWriteI11CDataStreamiEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2b955:
  %v0_2b97a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2b97a
}

define i32 @function_2b9bc() local_unnamed_addr {
dec_label_pc_2b9bc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b9bc = load i32, i32* %ecx.global-to-local, align 8
  %v1_2b9bc = add i32 %v0_2b9bc, -1
  store i32 %v1_2b9bc, i32* %ecx.global-to-local, align 8
  %v0_2b9be = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b9be
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI5CTxInSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2b9bf:
  %v4_2ba0a = call i32 @unknown_5a544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ba20

bb:                                               ; preds = %dec_label_pc_2b9bf
  %v1_2ba1e = call i32 @function_2ba25()
  br label %dec_label_pc_2ba20

dec_label_pc_2ba20:                               ; preds = %bb, %dec_label_pc_2b9bf
  %v2_2ba1e = phi i32 [ %v1_2ba1e, %bb ], [ 0, %dec_label_pc_2b9bf ]
  ret i32 %v2_2ba1e
}

define i32 @function_2ba25() local_unnamed_addr {
dec_label_pc_2ba25:
  %v0_2ba26 = load i32, i32* @eax, align 8
  ret i32 %v0_2ba26
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI6CTxOutSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2ba27:
  %v4_2ba72 = call i32 @unknown_5a60f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ba88

bb:                                               ; preds = %dec_label_pc_2ba27
  %v1_2ba86 = call i32 @function_2ba8d()
  br label %dec_label_pc_2ba88

dec_label_pc_2ba88:                               ; preds = %bb, %dec_label_pc_2ba27
  %v2_2ba86 = phi i32 [ %v1_2ba86, %bb ], [ 0, %dec_label_pc_2ba27 ]
  ret i32 %v2_2ba86
}

define i32 @function_2ba8d() local_unnamed_addr {
dec_label_pc_2ba8d:
  %v0_2ba8e = load i32, i32* @eax, align 8
  ret i32 %v0_2ba8e
}

define i32 @_ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_2ba8f:
  %edx.global-to-local = alloca i32, align 4
  %v0_2bab9 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2bab9, 16777216
  %v8_2bad1 = sdiv i32 %sext, 16777216
  %v9_2bad1 = sext i8 %arg4 to i32
  %v10_2bad1 = call i32 @unknown_5a6db(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_2bad1, i32 %v9_2bad1, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v10_2bad1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_2bae2

bb:                                               ; preds = %dec_label_pc_2ba8f
  %v1_2bae0 = call i32 @function_2bae7()
  br label %dec_label_pc_2bae2

dec_label_pc_2bae2:                               ; preds = %bb, %dec_label_pc_2ba8f
  %v2_2bae0 = phi i32 [ %v1_2bae0, %bb ], [ %v10_2bad1, %dec_label_pc_2ba8f ]
  ret i32 %v2_2bae0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2bae7() local_unnamed_addr {
dec_label_pc_2bae7:
  %v0_2bae8 = load i32, i32* @eax, align 8
  ret i32 %v0_2bae8
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2baea:
  %v2_2bb14 = call i32 @unknown_5a8b8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bb28

bb:                                               ; preds = %dec_label_pc_2baea
  %v1_2bb26 = call i32 @function_2bb2d()
  br label %dec_label_pc_2bb28

dec_label_pc_2bb28:                               ; preds = %bb, %dec_label_pc_2baea
  %v2_2bb26 = phi i32 [ %v1_2bb26, %bb ], [ %arg1, %dec_label_pc_2baea ]
  ret i32 %v2_2bb26

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2bb2d() local_unnamed_addr {
dec_label_pc_2bb2d:
  %v0_2bb2e = load i32, i32* @eax, align 8
  ret i32 %v0_2bb2e
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bb32:
  %v1_2bb52 = add i32 %arg2, 4
  %v2_2bb5f = call i32 @unknown_5a900(i32 %arg1, i32 %v1_2bb52)
  ret i32 %v2_2bb5f
}

define i32 @function_2bb64(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb64:
  %v0_2bb64 = load i32, i32* @ebp, align 4
  %v1_2bb64 = add i32 %v0_2bb64, -28
  %v2_2bb64 = inttoptr i32 %v1_2bb64 to i32*
  %v3_2bb64 = load i32, i32* %v2_2bb64, align 4
  store i32 %v3_2bb64, i32* @eax, align 8
  %v1_2bb67 = add i32 %v0_2bb64, -12
  %v2_2bb67 = inttoptr i32 %v1_2bb67 to i32*
  %v3_2bb67 = load i32, i32* %v2_2bb67, align 4
  %v1_2bb6a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2bb6a = icmp eq i32 %v1_2bb6a, %v3_2bb67
  br i1 %v3_2bb6a, label %bb, label %dec_label_pc_2bb73

bb:                                               ; preds = %dec_label_pc_2bb64
  %v1_2bb71 = call i32 @function_2bb78()
  br label %dec_label_pc_2bb73

dec_label_pc_2bb73:                               ; preds = %bb, %dec_label_pc_2bb64
  %v2_2bb71 = phi i32 [ %v1_2bb71, %bb ], [ %v3_2bb64, %dec_label_pc_2bb64 ]
  ret i32 %v2_2bb71
}

define i32 @function_2bb78() local_unnamed_addr {
dec_label_pc_2bb78:
  %v0_2bb79 = load i32, i32* @eax, align 8
  ret i32 %v0_2bb79
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb7c:
  %stack_var_-17 = alloca i32, align 4
  %v1_2bb99 = call i32 @unknown_5a984(i32 %arg1)
  %v2_2bba2 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2bba8 = call i32 @unknown_5703e(i32 %v2_2bba2, i32 %v1_2bb99)
  store i32 %v2_2bba8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bbb9

bb:                                               ; preds = %dec_label_pc_2bb7c
  %v1_2bbb7 = call i32 @function_2bbbe()
  br label %dec_label_pc_2bbb9

dec_label_pc_2bbb9:                               ; preds = %bb, %dec_label_pc_2bb7c
  %v2_2bbb7 = phi i32 [ %v1_2bbb7, %bb ], [ %v2_2bba8, %dec_label_pc_2bb7c ]
  ret i32 %v2_2bbb7
}

define i32 @function_2bbbe() local_unnamed_addr {
dec_label_pc_2bbbe:
  %v0_2bbbf = load i32, i32* @eax, align 8
  ret i32 %v0_2bbbf
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbc0:
  %v1_2bbda = add i32 %arg1, 8
  %v2_2bbda = inttoptr i32 %v1_2bbda to i32*
  %v3_2bbda = load i32, i32* %v2_2bbda, align 4
  store i32 %v3_2bbda, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bbe9

bb:                                               ; preds = %dec_label_pc_2bbc0
  %v2_2bbe7 = call i32 @function_2bbee(i32 %arg1)
  br label %dec_label_pc_2bbe9

dec_label_pc_2bbe9:                               ; preds = %bb, %dec_label_pc_2bbc0
  %v3_2bbe7 = phi i32 [ %v2_2bbe7, %bb ], [ %v3_2bbda, %dec_label_pc_2bbc0 ]
  ret i32 %v3_2bbe7
}

define i32 @function_2bbee(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbee:
  %v0_2bbef = load i32, i32* @eax, align 8
  ret i32 %v0_2bbef
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbf0:
  %v1_2bc0a = add i32 %arg1, 16
  store i32 %v1_2bc0a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bc19

bb:                                               ; preds = %dec_label_pc_2bbf0
  %v2_2bc17 = call i32 @function_2bc1e(i32 %arg1)
  br label %dec_label_pc_2bc19

dec_label_pc_2bc19:                               ; preds = %bb, %dec_label_pc_2bbf0
  %v3_2bc17 = phi i32 [ %v2_2bc17, %bb ], [ %v1_2bc0a, %dec_label_pc_2bbf0 ]
  ret i32 %v3_2bc17
}

define i32 @function_2bc1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bc1e:
  %v0_2bc1f = load i32, i32* @eax, align 8
  ret i32 %v0_2bc1f
}

define i32 @_ZSt12__miter_baseIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEEENSt11_Miter_baseIT_E13iterator_typeES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bc20:
  %v1_2bc3d = call i32 @unknown_5aa58(i32 %arg1)
  store i32 %v1_2bc3d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bc4e

bb:                                               ; preds = %dec_label_pc_2bc20
  %v1_2bc4c = call i32 @function_2bc53()
  br label %dec_label_pc_2bc4e

dec_label_pc_2bc4e:                               ; preds = %bb, %dec_label_pc_2bc20
  %v2_2bc4c = phi i32 [ %v1_2bc4c, %bb ], [ %v1_2bc3d, %dec_label_pc_2bc20 ]
  ret i32 %v2_2bc4c
}

define i32 @function_2bc53() local_unnamed_addr {
dec_label_pc_2bc53:
  %v0_2bc54 = load i32, i32* @eax, align 8
  ret i32 %v0_2bc54
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2bc55:
  %v1_2bc80 = call i32 @unknown_5aaba(i32 %arg3)
  %v1_2bc8d = call i32 @unknown_5aaba(i32 %arg2)
  %v1_2bc9a = call i32 @unknown_5aaba(i32 %arg1)
  %v3_2bcaa = call i32 @unknown_5aaef(i32 %v1_2bc9a, i32 %v1_2bc8d, i32 %v1_2bc80)
  store i32 %v3_2bcaa, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bcbb

bb:                                               ; preds = %dec_label_pc_2bc55
  %v1_2bcb9 = call i32 @function_2bcc0()
  br label %dec_label_pc_2bcbb

dec_label_pc_2bcbb:                               ; preds = %bb, %dec_label_pc_2bc55
  %v2_2bcb9 = phi i32 [ %v1_2bcb9, %bb ], [ %v3_2bcaa, %dec_label_pc_2bc55 ]
  ret i32 %v2_2bcb9

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5aaba, { 2, 1, 0 }
}

define i32 @function_2bcc0() local_unnamed_addr {
dec_label_pc_2bcc0:
  %v0_2bcc6 = load i32, i32* @eax, align 8
  ret i32 %v0_2bcc6
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bcc8:
  %v1_2bce5 = call i32 @unknown_5abb6(i32 %arg1)
  %v1_2bced = call i32 @unknown_5abe4(i32 %v1_2bce5)
  store i32 %v1_2bced, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bcfe

bb:                                               ; preds = %dec_label_pc_2bcc8
  %v1_2bcfc = call i32 @function_2bd03()
  br label %dec_label_pc_2bcfe

dec_label_pc_2bcfe:                               ; preds = %bb, %dec_label_pc_2bcc8
  %v2_2bcfc = phi i32 [ %v1_2bcfc, %bb ], [ %v1_2bced, %dec_label_pc_2bcc8 ]
  ret i32 %v2_2bcfc
}

define i32 @function_2bd03() local_unnamed_addr {
dec_label_pc_2bd03:
  %v0_2bd04 = load i32, i32* @eax, align 8
  ret i32 %v0_2bd04
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_2bd06:
  %eax.global-to-local = alloca i32, align 4
  %v2_2bd07 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2bd07
}

define i32 @function_2bd18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bd18:
  %v0_2bd18 = load i32, i32* @ebp, align 4
  %v1_2bd18 = add i32 %v0_2bd18, 16
  %v2_2bd18 = inttoptr i32 %v1_2bd18 to i32*
  %v3_2bd18 = load i32, i32* %v2_2bd18, align 4
  %v2_2bd1b = add i32 %v0_2bd18, -36
  %v3_2bd1b = inttoptr i32 %v2_2bd1b to i32*
  store i32 %v3_2bd18, i32* %v3_2bd1b, align 4
  %v0_2bd1e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2bd24 = load i32, i32* @ebp, align 4
  %v2_2bd24 = add i32 %v1_2bd24, -12
  %v3_2bd24 = inttoptr i32 %v2_2bd24 to i32*
  store i32 %v0_2bd1e, i32* %v3_2bd24, align 4
  %v0_2bd29 = load i32, i32* @ebp, align 4
  %v1_2bd29 = add i32 %v0_2bd29, -28
  %v2_2bd29 = inttoptr i32 %v1_2bd29 to i32*
  %v3_2bd29 = load i32, i32* %v2_2bd29, align 4
  %v1_2bd2f = call i32 @unknown_5ac22(i32 %v3_2bd29)
  %v1_2bd34 = load i32, i32* @ebp, align 4
  %v2_2bd34 = add i32 %v1_2bd34, -32
  %v3_2bd34 = inttoptr i32 %v2_2bd34 to i32*
  %v4_2bd34 = load i32, i32* %v3_2bd34, align 4
  %v10_2bd34 = icmp ult i32 %v1_2bd2f, %v4_2bd34
  %v1_2bd37 = zext i1 %v10_2bd34 to i32
  %v3_2bd37 = and i32 %v1_2bd2f, -256
  %v4_2bd37 = or i32 %v1_2bd37, %v3_2bd37
  %v5_2bd3a = icmp eq i1 %v10_2bd34, false
  br i1 %v5_2bd3a, label %bb, label %dec_label_pc_2bd3e

bb:                                               ; preds = %dec_label_pc_2bd18
  %v1_2bd3c = call i32 @function_2bd43()
  br label %dec_label_pc_2bd3e

dec_label_pc_2bd3e:                               ; preds = %bb, %dec_label_pc_2bd18
  %v2_2bd3c = phi i32 [ %v1_2bd3c, %bb ], [ %v4_2bd37, %dec_label_pc_2bd18 ]
  ret i32 %v2_2bd3c

; uselistorder directives
  uselistorder i1 %v10_2bd34, { 1, 0 }
}

define i32 @function_2bd43() local_unnamed_addr {
dec_label_pc_2bd43:
  %v0_2bd43 = load i32, i32* @ebp, align 4
  %v1_2bd43 = add i32 %v0_2bd43, -32
  %v2_2bd43 = inttoptr i32 %v1_2bd43 to i32*
  %v3_2bd43 = load i32, i32* %v2_2bd43, align 4
  %v2_2bd4d = mul i32 %v3_2bd43, 20
  ret i32 %v2_2bd4d
}

define i32 @function_2bd68() local_unnamed_addr {
dec_label_pc_2bd68:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bd68 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2bd68 = add i32 %v0_2bd68, -1
  store i32 %v1_2bd68, i32* %ecx.global-to-local, align 8
  %v0_2bd6a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bd6a
}

define i32 @_ZSt22__uninitialized_copy_aIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_S4_ET0_T_S7_S6_RSaIT1_E() local_unnamed_addr {
dec_label_pc_2bd6b:
  %eax.global-to-local = alloca i32, align 4
  %v17_2bd6e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2bd6e
}

define i32 @function_2bd72(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd72:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2bd72 = load i32, i32* @ebp, align 4
  %v1_2bd72 = add i32 %v0_2bd72, 1
  store i32 %v1_2bd72, i32* %ebp.global-to-local, align 4
  %v0_2bd73 = load i32, i32* @ecx, align 8
  %v1_2bd73 = add i32 %v0_2bd73, 1166795845
  %v2_2bd73 = inttoptr i32 %v1_2bd73 to i8*
  %v3_2bd73 = load i8, i8* %v2_2bd73, align 1
  %v5_2bd73 = trunc i32 %v0_2bd73 to i8
  %v6_2bd73 = or i8 %v3_2bd73, %v5_2bd73
  store i8 %v6_2bd73, i8* %v2_2bd73, align 1
  %v0_2bd79 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2bd79 = or i32 %v0_2bd79, 137
  store i32 %v11_2bd79, i32* %eax.global-to-local, align 8
  %v0_2bd7b = load i32, i32* %ebp.global-to-local, align 4
  %v0_2bd7c = load i32, i32* @ecx, align 8
  %v1_2bd7c = add i32 %v0_2bd7c, -1
  store i32 %v1_2bd7c, i32* @ecx, align 8
  %v1_2bd7e = add i32 %v0_2bd7b, 2
  store i32 %v1_2bd7e, i32* %ebp.global-to-local, align 4
  %v1_2bd7f = add i32 %v0_2bd7c, 1166793796
  %v2_2bd7f = inttoptr i32 %v1_2bd7f to i8*
  %v3_2bd7f = load i8, i8* %v2_2bd7f, align 1
  %v5_2bd7f = trunc i32 %v1_2bd7c to i8
  %v8_2bd7f = add i8 %v3_2bd7f, %v5_2bd7f
  %v28_2bd7f = icmp ult i8 %v8_2bd7f, %v3_2bd7f
  store i1 %v28_2bd7f, i1* %cf.global-to-local, align 1
  store i8 %v8_2bd7f, i8* %v2_2bd7f, align 1
  %v0_2bd85 = load i32, i32* %eax.global-to-local, align 8
  %v1_2bd85 = trunc i32 %v0_2bd85 to i8
  %v2_2bd85 = load i1, i1* %cf.global-to-local, align 1
  %v3_2bd85 = zext i1 %v2_2bd85 to i8
  %v4_2bd85 = add i8 %v1_2bd85, -119
  %v5_2bd85 = add i8 %v4_2bd85, %v3_2bd85
  %v22_2bd85 = icmp ule i8 %v5_2bd85, %v1_2bd85
  %v23_2bd85 = icmp ugt i8 %v1_2bd85, 118
  %v24_2bd85 = select i1 %v2_2bd85, i1 %v22_2bd85, i1 %v23_2bd85
  %v25_2bd85 = zext i8 %v5_2bd85 to i32
  %v27_2bd85 = and i32 %v0_2bd85, -256
  %v28_2bd85 = or i32 %v25_2bd85, %v27_2bd85
  store i32 %v28_2bd85, i32* %eax.global-to-local, align 8
  %v0_2bd87 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2bd87 = add i32 %v0_2bd87, 1
  store i32 %v1_2bd87, i32* @ebp, align 4
  %v2_2bd88 = add i32 %v0_2bd87, -94
  %v3_2bd88 = inttoptr i32 %v2_2bd88 to float*
  %v4_2bd88 = load float, float* %v3_2bd88, align 4
  %v5_2bd88 = fpext float %v4_2bd88 to x86_fp80
  %v6_2bd88 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_2bd88 = fsub x86_fp80 %v5_2bd88, %v6_2bd88
  store x86_fp80 %v7_2bd88, x86_fp80* @st0, align 4
  %v3_2bd8b = zext i1 %v24_2bd85 to i8
  %v4_2bd8b = add i8 %v3_2bd8b, %v5_2bd85
  %v19_2bd8b = icmp ule i8 %v4_2bd8b, %v5_2bd85
  %v21_2bd8b = icmp eq i1 %v24_2bd85, %v19_2bd8b
  store i1 %v21_2bd8b, i1* %cf.global-to-local, align 1
  %v22_2bd8b = zext i8 %v4_2bd8b to i32
  %v25_2bd8b = or i32 %v22_2bd8b, %v27_2bd85
  store i32 %v25_2bd8b, i32* %eax.global-to-local, align 8
  %v1_2bd8d = inttoptr i32 %v25_2bd8b to i8*
  %v2_2bd8d = load i8, i8* %v1_2bd8d, align 1
  %v5_2bd8d = add i8 %v2_2bd8d, %v4_2bd8b
  store i8 %v5_2bd8d, i8* %v1_2bd8d, align 1
  %v0_2bd8f = load i32, i32* %eax.global-to-local, align 8
  %v1_2bd8f = load i32, i32* @ebp, align 4
  %v2_2bd8f = add i32 %v1_2bd8f, -12
  %v3_2bd8f = inttoptr i32 %v2_2bd8f to i32*
  store i32 %v0_2bd8f, i32* %v3_2bd8f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2bd94 = load i32, i32* @ebp, align 4
  %v1_2bd94 = add i32 %v0_2bd94, -36
  %v2_2bd94 = inttoptr i32 %v1_2bd94 to i32*
  %v3_2bd94 = load i32, i32* %v2_2bd94, align 4
  store i32 %v3_2bd94, i32* %eax.global-to-local, align 8
  %v1_2bd9b = add i32 %v0_2bd94, -32
  %v2_2bd9b = inttoptr i32 %v1_2bd9b to i32*
  %v3_2bd9b = load i32, i32* %v2_2bd9b, align 4
  store i32 %v3_2bd9b, i32* %eax.global-to-local, align 8
  ret i32 %v3_2bd9b

; uselistorder directives
  uselistorder i8 %v4_2bd8b, { 0, 2, 1 }
  uselistorder i8 %v5_2bd85, { 1, 0, 3, 2 }
  uselistorder i8 %v3_2bd7f, { 1, 0 }
}

define i32 @function_2bda4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bda4:
  %v0_2bda8 = call i32 @unknown_5acb6()
  store i32 %v0_2bda8, i32* @eax, align 8
  %v0_2bdad = load i32, i32* @ebp, align 4
  %v1_2bdad = add i32 %v0_2bdad, -12
  %v2_2bdad = inttoptr i32 %v1_2bdad to i32*
  %v3_2bdad = load i32, i32* %v2_2bdad, align 4
  %v1_2bdb0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2bdb0 = icmp eq i32 %v1_2bdb0, %v3_2bdad
  br i1 %v3_2bdb0, label %bb, label %dec_label_pc_2bdb9

bb:                                               ; preds = %dec_label_pc_2bda4
  %v1_2bdb7 = call i32 @function_2bdbe()
  br label %dec_label_pc_2bdb9

dec_label_pc_2bdb9:                               ; preds = %bb, %dec_label_pc_2bda4
  %v2_2bdb7 = phi i32 [ %v1_2bdb7, %bb ], [ %v0_2bda8, %dec_label_pc_2bda4 ]
  ret i32 %v2_2bdb7
}

define i32 @function_2bdbe() local_unnamed_addr {
dec_label_pc_2bdbe:
  %v0_2bdbf = load i32, i32* @eax, align 8
  ret i32 %v0_2bdbf
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list6ISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list5ISM_SR_bxdEEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list4ISR_bxdEEEEE16initializer_node10initializeEPvRKSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bdc0:
  %v2_2bdee = call i32 @function_31aec(i32 4, i32 %arg1)
  %v1_2bdf5 = icmp eq i32 %v2_2bdee, 0
  br i1 %v1_2bdf5, label %dec_label_pc_2be08, label %dec_label_pc_2bdf9

dec_label_pc_2bdf9:                               ; preds = %dec_label_pc_2bdc0
  %v2_2be03 = call i32 @unknown_5ad5a(i32 %v2_2bdee, i32 %arg2)
  br label %dec_label_pc_2be08

dec_label_pc_2be08:                               ; preds = %dec_label_pc_2bdf9, %dec_label_pc_2bdc0
  store i32 2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2be19

bb:                                               ; preds = %dec_label_pc_2be08
  %v1_2be17 = call i32 @function_2be38()
  store i32 %v1_2be17, i32* @eax, align 8
  br label %dec_label_pc_2be19

dec_label_pc_2be19:                               ; preds = %bb, %dec_label_pc_2be08
  %v0_2be19 = call i32 @function_2be33()
  ret i32 %v0_2be19
}

define i32 @function_2be1e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2be1e:
  %v0_2be24 = call i32 @function_31b1f()
  %v0_2be29 = load i32, i32* @edi, align 4
  ret i32 %v0_2be29
}

define i32 @function_2be33() local_unnamed_addr {
dec_label_pc_2be33:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2be38() local_unnamed_addr {
dec_label_pc_2be38:
  %v0_2be3f = load i32, i32* @eax, align 8
  ret i32 %v0_2be3f
}

define i32 @_Z12SerReadWriteI11CDataStream12CBlockHeaderEjRT_RT0_ii21CSerActionUnserialize() local_unnamed_addr {
dec_label_pc_2be40:
  %eax.global-to-local = alloca i32, align 4
  %v2_2be41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2be41
}

define i32 @function_2be86(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be86:
  %v0_2be86 = load i32, i32* @ebp, align 4
  %v1_2be86 = add i32 %v0_2be86, 1
  store i32 %v1_2be86, i32* @ebp, align 4
  %v0_2be8b = call i32 @unknown_5ae49()
  store i32 0, i32* @eax, align 8
  %v0_2be95 = load i32, i32* @ebp, align 4
  %v1_2be95 = add i32 %v0_2be95, -12
  %v2_2be95 = inttoptr i32 %v1_2be95 to i32*
  %v3_2be95 = load i32, i32* %v2_2be95, align 4
  %v1_2be98 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2be98 = icmp eq i32 %v1_2be98, %v3_2be95
  br i1 %v3_2be98, label %bb, label %dec_label_pc_2bea1

bb:                                               ; preds = %dec_label_pc_2be86
  %v1_2be9f = call i32 @function_2bea6()
  br label %dec_label_pc_2bea1

dec_label_pc_2bea1:                               ; preds = %bb, %dec_label_pc_2be86
  %v3_2be9f = phi i32 [ %v1_2be9f, %bb ], [ 0, %dec_label_pc_2be86 ]
  ret i32 %v3_2be9f
}

define i32 @function_2bea6() local_unnamed_addr {
dec_label_pc_2bea6:
  %v0_2bea7 = load i32, i32* @eax, align 8
  ret i32 %v0_2bea7
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI12CTransactionSaIS2_EEEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2bea8:
  %v4_2bef3 = call i32 @unknown_5af0d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bf09

bb:                                               ; preds = %dec_label_pc_2bea8
  %v1_2bf07 = call i32 @function_2bf0e()
  br label %dec_label_pc_2bf09

dec_label_pc_2bf09:                               ; preds = %bb, %dec_label_pc_2bea8
  %v2_2bf07 = phi i32 [ %v1_2bf07, %bb ], [ 0, %dec_label_pc_2bea8 ]
  ret i32 %v2_2bf07
}

define i32 @function_2bf0e() local_unnamed_addr {
dec_label_pc_2bf0e:
  %v0_2bf0f = load i32, i32* @eax, align 8
  ret i32 %v0_2bf0f
}

define i32 @_ZN5boost17enable_error_infoINS_9gregorian8bad_yearEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bf10:
  %v2_2bf3a = call i32 @unknown_5afd8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2bf4e

bb:                                               ; preds = %dec_label_pc_2bf10
  %v1_2bf4c = call i32 @function_2bf53()
  br label %dec_label_pc_2bf4e

dec_label_pc_2bf4e:                               ; preds = %bb, %dec_label_pc_2bf10
  %v2_2bf4c = phi i32 [ %v1_2bf4c, %bb ], [ %arg1, %dec_label_pc_2bf10 ]
  ret i32 %v2_2bf4c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2bf53() local_unnamed_addr {
dec_label_pc_2bf53:
  %v0_2bf54 = load i32, i32* @eax, align 8
  ret i32 %v0_2bf54
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bf57:
  %v4_2bf57 = add i32 %arg1, -8
  %v1_2bf5c = call i32 @function_57eb9(i32 %v4_2bf57)
  ret i32 %v1_2bf5c
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev(i32* %arg1) {
dec_label_pc_2bf62:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f7bc_type* @global_var_3f7bc.2868 to i32), i32* %arg1, align 4
  %v1_2bf85 = add i32 %tmp99, 8
  %v2_2bf85 = inttoptr i32 %v1_2bf85 to i32*
  store i32 ptrtoint (i32* @global_var_3f7d0.2869 to i32), i32* %v2_2bf85, align 4
  store i32 %v1_2bf85, i32* @eax, align 8
  %v1_2bf95 = call i32 @function_3a686(i32 %v1_2bf85)
  %v1_2bfa0 = call i32 @unknown_4c744(i32 %tmp99)
  %v1_2bfaf = call i32 @function_2bfbc()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_2bf85, { 1, 0, 2 }
}

define i32 @function_2bfbc() local_unnamed_addr {
dec_label_pc_2bfbc:
  %v0_2bfbc = load i32, i32* @ebp, align 4
  %v1_2bfbc = add i32 %v0_2bfbc, -12
  %v2_2bfbc = inttoptr i32 %v1_2bfbc to i32*
  %v3_2bfbc = load i32, i32* %v2_2bfbc, align 4
  %v1_2bfbf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2bfbf = xor i32 %v1_2bfbf, %v3_2bfbc
  %v3_2bfbf = icmp eq i32 %v2_2bfbf, 0
  store i32 %v2_2bfbf, i32* @eax, align 8
  br i1 %v3_2bfbf, label %bb, label %dec_label_pc_2bfc8

bb:                                               ; preds = %dec_label_pc_2bfbc
  %v1_2bfc6 = call i32 @function_2bfcd()
  br label %dec_label_pc_2bfc8

dec_label_pc_2bfc8:                               ; preds = %bb, %dec_label_pc_2bfbc
  %v2_2bfc6 = phi i32 [ %v1_2bfc6, %bb ], [ %v2_2bfbf, %dec_label_pc_2bfbc ]
  ret i32 %v2_2bfc6
}

define i32 @function_2bfcd() local_unnamed_addr {
dec_label_pc_2bfcd:
  %v0_2bfce = load i32, i32* @eax, align 8
  ret i32 %v0_2bfce
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bfd0:
  %v4_2bfd0 = add i32 %arg1, -8
  %v1_2bfd5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32 %v4_2bfd0)
  ret i32 %v1_2bfd5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32 %arg1) {
dec_label_pc_2bfd8:
  %v1_2bff5 = call i32 @unknown_57f32(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2c015() local_unnamed_addr {
dec_label_pc_2c015:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2c015 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2c015 = add i32 %v0_2c015, -1
  store i32 %v1_2c015, i32* %ecx.global-to-local, align 8
  %v0_2c017 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c017
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEEEENS1_10clone_implIT_EERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c018:
  %v2_2c042 = call i32 @unknown_5b144(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c056

bb:                                               ; preds = %dec_label_pc_2c018
  %v1_2c054 = call i32 @function_2c05b()
  br label %dec_label_pc_2c056

dec_label_pc_2c056:                               ; preds = %bb, %dec_label_pc_2c018
  %v2_2c054 = phi i32 [ %v1_2c054, %bb ], [ %arg1, %dec_label_pc_2c018 ]
  ret i32 %v2_2c054

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2c05b() local_unnamed_addr {
dec_label_pc_2c05b:
  %v0_2c05c = load i32, i32* @eax, align 8
  ret i32 %v0_2c05c
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c05f:
  %v4_2c05f = add i32 %arg1, -28
  %v1_2c064 = call i32 @function_580d3(i32 %v4_2c05f)
  ret i32 %v1_2c064
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c069:
  %v4_2c069 = add i32 %arg1, -8
  %v1_2c06e = call i32 @function_580d3(i32 %v4_2c069)
  ret i32 %v1_2c06e

; uselistorder directives
  uselistorder i32 (i32)* @function_580d3, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32* %arg1) {
dec_label_pc_2c074:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f75c_type* @global_var_3f75c.2870 to i32), i32* %arg1, align 4
  %v1_2c097 = add i32 %tmp99, 8
  %v2_2c097 = inttoptr i32 %v1_2c097 to i32*
  store i32 ptrtoint (i32* @global_var_3f778.2871 to i32), i32* %v2_2c097, align 4
  %v1_2c0a1 = add i32 %tmp99, 28
  %v2_2c0a1 = inttoptr i32 %v1_2c0a1 to i32*
  store i32 ptrtoint (i32* @global_var_3f788.2872 to i32), i32* %v2_2c0a1, align 4
  %v5_2c0ab = icmp ugt i32* %arg1, inttoptr (i32 -29 to i32*)
  store i1 %v5_2c0ab, i1* @cf, align 1
  store i32 %v1_2c0a1, i32* @eax, align 8
  %v1_2c0b1 = call i32 @function_3c010(i32 %v1_2c0a1)
  %v1_2c0bc = call i32 @unknown_57fd6(i32 %tmp99)
  %v1_2c0cb = call i32 @function_2c0d8()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_2c0a1, { 1, 0, 2 }
}

define i32 @function_2c0d8() local_unnamed_addr {
dec_label_pc_2c0d8:
  %v0_2c0d8 = load i32, i32* @ebp, align 4
  %v1_2c0d8 = add i32 %v0_2c0d8, -12
  %v2_2c0d8 = inttoptr i32 %v1_2c0d8 to i32*
  %v3_2c0d8 = load i32, i32* %v2_2c0d8, align 4
  %v1_2c0db = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2c0db = xor i32 %v1_2c0db, %v3_2c0d8
  %v3_2c0db = icmp eq i32 %v2_2c0db, 0
  store i32 %v2_2c0db, i32* @eax, align 8
  br i1 %v3_2c0db, label %bb, label %dec_label_pc_2c0e4

bb:                                               ; preds = %dec_label_pc_2c0d8
  %v1_2c0e2 = call i32 @function_2c0e9()
  br label %dec_label_pc_2c0e4

dec_label_pc_2c0e4:                               ; preds = %bb, %dec_label_pc_2c0d8
  %v2_2c0e2 = phi i32 [ %v1_2c0e2, %bb ], [ %v2_2c0db, %dec_label_pc_2c0d8 ]
  ret i32 %v2_2c0e2
}

define i32 @function_2c0e9() local_unnamed_addr {
dec_label_pc_2c0e9:
  %v0_2c0ea = load i32, i32* @eax, align 8
  ret i32 %v0_2c0ea
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c0ec:
  %v4_2c0ec = add i32 %arg1, -28
  %v1_2c0f1 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %v4_2c0ec)
  ret i32 %v1_2c0f1
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c0f3:
  %v4_2c0f3 = add i32 %arg1, -8
  %v1_2c0f8 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %v4_2c0f3)
  ret i32 %v1_2c0f8
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %arg1) {
dec_label_pc_2c0fa:
  %v1_2c117 = call i32 @unknown_58160(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2c137() local_unnamed_addr {
dec_label_pc_2c137:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2c137 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2c137 = add i32 %v0_2c137, -1
  store i32 %v1_2c137, i32* %ecx.global-to-local, align 8
  %v0_2c139 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c139
}

define i32 @_ZN5boost17enable_error_infoINS_9gregorian9bad_monthEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c13a:
  %v2_2c164 = call i32 @unknown_5b318(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c178

bb:                                               ; preds = %dec_label_pc_2c13a
  %v1_2c176 = call i32 @function_2c17d()
  br label %dec_label_pc_2c178

dec_label_pc_2c178:                               ; preds = %bb, %dec_label_pc_2c13a
  %v2_2c176 = phi i32 [ %v1_2c176, %bb ], [ %arg1, %dec_label_pc_2c13a ]
  ret i32 %v2_2c176

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2c17d() local_unnamed_addr {
dec_label_pc_2c17d:
  %v0_2c17e = load i32, i32* @eax, align 8
  ret i32 %v0_2c17e
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c181:
  %v4_2c181 = add i32 %arg1, -8
  %v1_2c186 = call i32 @function_5830d(i32 %v4_2c181)
  ret i32 %v1_2c186
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev(i32* %arg1) {
dec_label_pc_2c18c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f71c_type* @global_var_3f71c.2875 to i32), i32* %arg1, align 4
  %v1_2c1af = add i32 %tmp99, 8
  %v2_2c1af = inttoptr i32 %v1_2c1af to i32*
  store i32 ptrtoint (i32* @global_var_3f730.2876 to i32), i32* %v2_2c1af, align 4
  %v1_2c1bf = call i32 @function_3a8b0(i32 %v1_2c1af)
  %v1_2c1ca = call i32 @unknown_4caaa(i32 %tmp99)
  %v1_2c1d9 = call i32 @function_2c1e6()
  ret i32 %tmp99
}

define i32 @function_2c1e6() local_unnamed_addr {
dec_label_pc_2c1e6:
  %v0_2c1e6 = load i32, i32* @ebp, align 4
  %v1_2c1e6 = add i32 %v0_2c1e6, -12
  %v2_2c1e6 = inttoptr i32 %v1_2c1e6 to i32*
  %v3_2c1e6 = load i32, i32* %v2_2c1e6, align 4
  %v1_2c1e9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2c1e9 = xor i32 %v1_2c1e9, %v3_2c1e6
  %v3_2c1e9 = icmp eq i32 %v2_2c1e9, 0
  store i32 %v2_2c1e9, i32* @eax, align 8
  br i1 %v3_2c1e9, label %bb, label %dec_label_pc_2c1f2

bb:                                               ; preds = %dec_label_pc_2c1e6
  %v1_2c1f0 = call i32 @function_2c1f7()
  br label %dec_label_pc_2c1f2

dec_label_pc_2c1f2:                               ; preds = %bb, %dec_label_pc_2c1e6
  %v2_2c1f0 = phi i32 [ %v1_2c1f0, %bb ], [ %v2_2c1e9, %dec_label_pc_2c1e6 ]
  ret i32 %v2_2c1f0
}

define i32 @function_2c1f7() local_unnamed_addr {
dec_label_pc_2c1f7:
  %v0_2c1f8 = load i32, i32* @eax, align 8
  ret i32 %v0_2c1f8
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c1fa:
  %v4_2c1fa = add i32 %arg1, -8
  %v1_2c1ff = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32 %v4_2c1fa)
  ret i32 %v1_2c1ff
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32 %arg1) {
dec_label_pc_2c202:
  %v1_2c21f = call i32 @unknown_58386(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2c23f() local_unnamed_addr {
dec_label_pc_2c23f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2c23f = load i32, i32* %ecx.global-to-local, align 8
  %v1_2c23f = add i32 %v0_2c23f, -1
  store i32 %v1_2c23f, i32* %ecx.global-to-local, align 8
  %v0_2c241 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c241
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEEEENS1_10clone_implIT_EERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c242:
  %v2_2c26c = call i32 @unknown_5b484(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c280

bb:                                               ; preds = %dec_label_pc_2c242
  %v1_2c27e = call i32 @function_2c285()
  br label %dec_label_pc_2c280

dec_label_pc_2c280:                               ; preds = %bb, %dec_label_pc_2c242
  %v2_2c27e = phi i32 [ %v1_2c27e, %bb ], [ %arg1, %dec_label_pc_2c242 ]
  ret i32 %v2_2c27e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2c285() local_unnamed_addr {
dec_label_pc_2c285:
  %v0_2c286 = load i32, i32* @eax, align 8
  ret i32 %v0_2c286
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c289:
  %v4_2c289 = add i32 %arg1, -28
  %v1_2c28e = call i32 @function_58527(i32 %v4_2c289)
  ret i32 %v1_2c28e
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c293:
  %v4_2c293 = add i32 %arg1, -8
  %v1_2c298 = call i32 @function_58527(i32 %v4_2c293)
  ret i32 %v1_2c298

; uselistorder directives
  uselistorder i32 (i32)* @function_58527, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32* %arg1) {
dec_label_pc_2c29e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f6bc_type* @global_var_3f6bc.2877 to i32), i32* %arg1, align 4
  %v1_2c2c1 = add i32 %tmp99, 8
  %v2_2c2c1 = inttoptr i32 %v1_2c2c1 to i32*
  store i32 ptrtoint (i32* @global_var_3f6d8.2878 to i32), i32* %v2_2c2c1, align 4
  %v1_2c2cb = add i32 %tmp99, 28
  %v2_2c2cb = inttoptr i32 %v1_2c2cb to i32*
  store i32 ptrtoint (i32* @global_var_3f6e8.2879 to i32), i32* %v2_2c2cb, align 4
  %v1_2c2e6 = call i32 @unknown_5842a(i32 %tmp99)
  %v1_2c2f5 = call i32 @function_2c302()
  ret i32 %tmp99
}

define i32 @function_2c302() local_unnamed_addr {
dec_label_pc_2c302:
  %v0_2c302 = load i32, i32* @ebp, align 4
  %v1_2c302 = add i32 %v0_2c302, -12
  %v2_2c302 = inttoptr i32 %v1_2c302 to i32*
  %v3_2c302 = load i32, i32* %v2_2c302, align 4
  %v1_2c305 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2c305 = xor i32 %v1_2c305, %v3_2c302
  %v3_2c305 = icmp eq i32 %v2_2c305, 0
  store i32 %v2_2c305, i32* @eax, align 8
  br i1 %v3_2c305, label %bb, label %dec_label_pc_2c30e

bb:                                               ; preds = %dec_label_pc_2c302
  %v1_2c30c = call i32 @function_2c313()
  br label %dec_label_pc_2c30e

dec_label_pc_2c30e:                               ; preds = %bb, %dec_label_pc_2c302
  %v2_2c30c = phi i32 [ %v1_2c30c, %bb ], [ %v2_2c305, %dec_label_pc_2c302 ]
  ret i32 %v2_2c30c
}

define i32 @function_2c313() local_unnamed_addr {
dec_label_pc_2c313:
  %v0_2c314 = load i32, i32* @eax, align 8
  ret i32 %v0_2c314
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c316:
  %v4_2c316 = add i32 %arg1, -28
  %v1_2c31b = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %v4_2c316)
  ret i32 %v1_2c31b
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c31d:
  %v4_2c31d = add i32 %arg1, -8
  %v1_2c322 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %v4_2c31d)
  ret i32 %v1_2c322
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %arg1) {
dec_label_pc_2c324:
  %v1_2c341 = call i32 @unknown_585b4(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2c361() local_unnamed_addr {
dec_label_pc_2c361:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2c361 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2c361 = add i32 %v0_2c361, -1
  store i32 %v1_2c361, i32* %ecx.global-to-local, align 8
  %v0_2c363 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c363
}

define i32 @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c364:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c390

bb:                                               ; preds = %dec_label_pc_2c364
  %v3_2c38e = call i32 @function_2c395(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c390

dec_label_pc_2c390:                               ; preds = %bb, %dec_label_pc_2c364
  %v4_2c38e = phi i32 [ %v3_2c38e, %bb ], [ %arg1, %dec_label_pc_2c364 ]
  ret i32 %v4_2c38e
}

define i32 @function_2c395(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c395:
  %v0_2c396 = load i32, i32* @eax, align 8
  ret i32 %v0_2c396
}

define i32 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2c399:
  %v2_2c3c5 = sub i32 %arg2, %arg1
  store i32 %v2_2c3c5, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c3d5

bb:                                               ; preds = %dec_label_pc_2c399
  %v4_2c3d3 = sext i8 %arg3 to i32
  %v5_2c3d3 = call i32 @function_2c3da(i32 %v4_2c3d3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c3d5

dec_label_pc_2c3d5:                               ; preds = %bb, %dec_label_pc_2c399
  %v6_2c3d3 = phi i32 [ %v5_2c3d3, %bb ], [ %v2_2c3c5, %dec_label_pc_2c399 ]
  ret i32 %v6_2c3d3
}

define i32 @function_2c3da(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c3da:
  %v0_2c3db = load i32, i32* @eax, align 8
  ret i32 %v0_2c3db
}

define i32 @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c3dc:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c408

bb:                                               ; preds = %dec_label_pc_2c3dc
  %v3_2c406 = call i32 @function_2c40d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c408

dec_label_pc_2c408:                               ; preds = %bb, %dec_label_pc_2c3dc
  %v4_2c406 = phi i32 [ %v3_2c406, %bb ], [ %arg1, %dec_label_pc_2c3dc ]
  ret i32 %v4_2c406
}

define i32 @function_2c40d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c40d:
  %v0_2c40e = load i32, i32* @eax, align 8
  ret i32 %v0_2c40e
}

define i32 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2c411:
  %v2_2c43d = sub i32 %arg2, %arg1
  store i32 %v2_2c43d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c44d

bb:                                               ; preds = %dec_label_pc_2c411
  %v4_2c44b = sext i8 %arg3 to i32
  %v5_2c44b = call i32 @function_2c452(i32 %v4_2c44b, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c44d

dec_label_pc_2c44d:                               ; preds = %bb, %dec_label_pc_2c411
  %v6_2c44b = phi i32 [ %v5_2c44b, %bb ], [ %v2_2c43d, %dec_label_pc_2c411 ]
  ret i32 %v6_2c44b
}

define i32 @function_2c452(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c452:
  %v0_2c453 = load i32, i32* @eax, align 8
  ret i32 %v0_2c453
}

define i32 @_ZSteqIcEbRKSaIT_ES3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c454:
  store i32 1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c482

bb:                                               ; preds = %dec_label_pc_2c454
  %v3_2c480 = call i32 @function_2c487(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c482

dec_label_pc_2c482:                               ; preds = %bb, %dec_label_pc_2c454
  %v4_2c480 = phi i32 [ %v3_2c480, %bb ], [ 1, %dec_label_pc_2c454 ]
  ret i32 %v4_2c480
}

define i32 @function_2c487(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c487:
  %v0_2c488 = load i32, i32* @eax, align 8
  ret i32 %v0_2c488
}

define i32 @_ZSt22__copy_move_backward_aILb0EPcS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c489:
  %v3_2c4c4 = call i32 @unknown_5b77c(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2c4c4, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c4d5

bb:                                               ; preds = %dec_label_pc_2c489
  %v1_2c4d3 = call i32 @function_2c4da()
  br label %dec_label_pc_2c4d5

dec_label_pc_2c4d5:                               ; preds = %bb, %dec_label_pc_2c489
  %v2_2c4d3 = phi i32 [ %v1_2c4d3, %bb ], [ %v3_2c4c4, %dec_label_pc_2c489 ]
  ret i32 %v2_2c4d3
}

define i32 @function_2c4da() local_unnamed_addr {
dec_label_pc_2c4da:
  %v0_2c4db = load i32, i32* @eax, align 8
  ret i32 %v0_2c4db
}

define i32 @_ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c4dc:
  %v1_2c4f9 = call i32 @unknown_5b840(i32 %arg1)
  store i32 %v1_2c4f9, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c50a

bb:                                               ; preds = %dec_label_pc_2c4dc
  %v1_2c508 = call i32 @function_2c50f()
  br label %dec_label_pc_2c50a

dec_label_pc_2c50a:                               ; preds = %bb, %dec_label_pc_2c4dc
  %v2_2c508 = phi i32 [ %v1_2c508, %bb ], [ %v1_2c4f9, %dec_label_pc_2c4dc ]
  ret i32 %v2_2c508
}

define i32 @function_2c50f() local_unnamed_addr {
dec_label_pc_2c50f:
  %v0_2c510 = load i32, i32* @eax, align 8
  ret i32 %v0_2c510
}

define i32 @_ZSt14__copy_move_a2ILb0EPKcN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEEET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2c511:
  ret i32 %arg4
}

define i32 @function_2c52e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c52e:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_2c52e = load i32, i32* @eax, align 8
  %v1_2c52e = load i32, i32* @ebp, align 4
  %v2_2c52e = add i32 %v1_2c52e, -40
  %v3_2c52e = inttoptr i32 %v2_2c52e to i32*
  store i32 %v0_2c52e, i32* %v3_2c52e, align 4
  %v0_2c531 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2c537 = load i32, i32* @ebp, align 4
  %v2_2c537 = add i32 %v1_2c537, -12
  %v3_2c537 = inttoptr i32 %v2_2c537 to i32*
  store i32 %v0_2c531, i32* %v3_2c537, align 4
  %v0_2c53c = load i32, i32* @ebp, align 4
  %v1_2c53c = add i32 %v0_2c53c, -40
  %v2_2c53c = inttoptr i32 %v1_2c53c to i32*
  %v3_2c53c = load i32, i32* %v2_2c53c, align 4
  %v1_2c542 = call i32 @unknown_54502(i32 %v3_2c53c)
  store i32 %v1_2c542, i32* %esi.global-to-local, align 4
  %v0_2c549 = load i32, i32* @ebp, align 4
  %v1_2c549 = add i32 %v0_2c549, -36
  %v2_2c549 = inttoptr i32 %v1_2c549 to i32*
  %v3_2c549 = load i32, i32* %v2_2c549, align 4
  %v1_2c54f = call i32 @unknown_5b8a2(i32 %v3_2c549)
  store i32 %v1_2c54f, i32* %ebx.global-to-local, align 4
  %v0_2c556 = load i32, i32* @ebp, align 4
  %v1_2c556 = add i32 %v0_2c556, -32
  %v2_2c556 = inttoptr i32 %v1_2c556 to i32*
  %v3_2c556 = load i32, i32* %v2_2c556, align 4
  %v1_2c55c = call i32 @unknown_5b8a2(i32 %v3_2c556)
  %v0_2c561 = load i32, i32* %esi.global-to-local, align 4
  %v0_2c565 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2c56c = call i32 @unknown_56019(i32 %v1_2c55c, i32 %v0_2c565, i32 %v0_2c561)
  %v1_2c571 = load i32, i32* @ebp, align 4
  %v2_2c571 = add i32 %v1_2c571, -16
  %v3_2c571 = inttoptr i32 %v2_2c571 to i32*
  store i32 %v3_2c56c, i32* %v3_2c571, align 4
  %v0_2c574 = load i32, i32* @ebp, align 4
  %v1_2c574 = add i32 %v0_2c574, -16
  %v1_2c57b = add i32 %v0_2c574, -28
  %v2_2c57b = inttoptr i32 %v1_2c57b to i32*
  %v3_2c57b = load i32, i32* %v2_2c57b, align 4
  %v2_2c581 = call i32 @unknown_473bd(i32 %v3_2c57b, i32 %v1_2c574)
  %v0_2c586 = load i32, i32* @ebp, align 4
  %v1_2c586 = add i32 %v0_2c586, -28
  %v2_2c586 = inttoptr i32 %v1_2c586 to i32*
  %v3_2c586 = load i32, i32* %v2_2c586, align 4
  store i32 %v3_2c586, i32* @eax, align 8
  %v1_2c589 = add i32 %v0_2c586, -12
  %v2_2c589 = inttoptr i32 %v1_2c589 to i32*
  %v3_2c589 = load i32, i32* %v2_2c589, align 4
  %v1_2c58c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2c58c = icmp eq i32 %v1_2c58c, %v3_2c589
  br i1 %v3_2c58c, label %bb, label %dec_label_pc_2c595

bb:                                               ; preds = %dec_label_pc_2c52e
  %v1_2c593 = call i32 @function_2c59a()
  br label %dec_label_pc_2c595

dec_label_pc_2c595:                               ; preds = %bb, %dec_label_pc_2c52e
  %v2_2c593 = phi i32 [ %v1_2c593, %bb ], [ %v3_2c586, %dec_label_pc_2c52e ]
  ret i32 %v2_2c593

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5b8a2, { 1, 0 }
}

define i32 @function_2c59a() local_unnamed_addr {
dec_label_pc_2c59a:
  %v0_2c5a0 = load i32, i32* @eax, align 8
  ret i32 %v0_2c5a0
}

define i32 @_ZSt9__advanceIPKciEvRT_T0_St26random_access_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c5a3:
  %v2_2c5ca = load i32, i32* %arg1, align 4
  %v2_2c5cf = add i32 %v2_2c5ca, %arg2
  store i32 %v2_2c5cf, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c5e2

bb:                                               ; preds = %dec_label_pc_2c5a3
  %tmp104 = ptrtoint i32* %arg1 to i32
  %sext = mul i32 %arg3, 16777216
  %v4_2c5e0 = sdiv i32 %sext, 16777216
  %v5_2c5e0 = call i32 @function_2c5e7(i32 %v4_2c5e0, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2c5e2

dec_label_pc_2c5e2:                               ; preds = %bb, %dec_label_pc_2c5a3
  %v6_2c5e0 = phi i32 [ %v5_2c5e0, %bb ], [ 0, %dec_label_pc_2c5a3 ]
  ret i32 %v6_2c5e0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_2c5e7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c5e7:
  %v0_2c5e8 = load i32, i32* @eax, align 8
  ret i32 %v0_2c5e8
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIc25zero_after_free_allocatorIcEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c5e9:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2c600 = ptrtoint i32* %stack_var_-32 to i32
  %v1_2c606 = call i32 @unknown_47645(i32 %v2_2c600)
  %v1_2c60b = inttoptr i32 %v1_2c606 to i32*
  %v2_2c60b = load i32, i32* %v1_2c60b, align 4
  store i32 %v2_2c60b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c619

bb:                                               ; preds = %dec_label_pc_2c5e9
  %v1_2c617 = call i32 @function_2c61e()
  br label %dec_label_pc_2c619

dec_label_pc_2c619:                               ; preds = %bb, %dec_label_pc_2c5e9
  %v2_2c617 = phi i32 [ %v1_2c617, %bb ], [ %v2_2c60b, %dec_label_pc_2c5e9 ]
  ret i32 %v2_2c617
}

define i32 @function_2c61e() local_unnamed_addr {
dec_label_pc_2c61e:
  %v0_2c61f = load i32, i32* @eax, align 8
  ret i32 %v0_2c61f
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c620:
  %v12_2c64b = icmp eq i32 %arg2, %arg1
  br i1 %v12_2c64b, label %bb, label %dec_label_pc_2c658

bb:                                               ; preds = %dec_label_pc_2c620
  %v4_2c656 = call i32 @function_2c671(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c658

dec_label_pc_2c658:                               ; preds = %bb, %dec_label_pc_2c620
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c671(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c671:
  %v0_2c671 = load i32, i32* @ebp, align 4
  %v1_2c671 = add i32 %v0_2c671, -16
  %v2_2c671 = inttoptr i32 %v1_2c671 to i32*
  %v3_2c671 = load i32, i32* %v2_2c671, align 4
  %v2_2c674 = add i32 %v0_2c671, -36
  %v3_2c674 = inttoptr i32 %v2_2c674 to i32*
  %v4_2c674 = load i32, i32* %v3_2c674, align 4
  %v5_2c674 = add i32 %v4_2c674, %v3_2c671
  store i32 %v5_2c674, i32* @eax, align 8
  %v1_2c677 = add i32 %v0_2c671, -12
  %v2_2c677 = inttoptr i32 %v1_2c677 to i32*
  %v3_2c677 = load i32, i32* %v2_2c677, align 4
  %v1_2c67a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2c67a = icmp eq i32 %v1_2c67a, %v3_2c677
  br i1 %v3_2c67a, label %bb, label %dec_label_pc_2c683

bb:                                               ; preds = %dec_label_pc_2c671
  %v1_2c681 = call i32 @function_2c688()
  br label %dec_label_pc_2c683

dec_label_pc_2c683:                               ; preds = %bb, %dec_label_pc_2c671
  %v2_2c681 = phi i32 [ %v1_2c681, %bb ], [ %v5_2c674, %dec_label_pc_2c671 ]
  ret i32 %v2_2c681
}

define i32 @function_2c688() local_unnamed_addr {
dec_label_pc_2c688:
  %v0_2c689 = load i32, i32* @eax, align 8
  ret i32 %v0_2c689
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c68a:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c6b3

bb:                                               ; preds = %dec_label_pc_2c68a
  %v3_2c6b1 = call i32 @function_2c6b8(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c6b3

dec_label_pc_2c6b3:                               ; preds = %bb, %dec_label_pc_2c68a
  %v4_2c6b1 = phi i32 [ %v3_2c6b1, %bb ], [ 0, %dec_label_pc_2c68a ]
  ret i32 %v4_2c6b1
}

define i32 @function_2c6b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c6b8:
  %v0_2c6b9 = load i32, i32* @eax, align 8
  ret i32 %v0_2c6b9
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c6ba:
  store i32 -1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c6e2

bb:                                               ; preds = %dec_label_pc_2c6ba
  %v2_2c6e0 = call i32 @function_2c6e7(i32 %arg1)
  br label %dec_label_pc_2c6e2

dec_label_pc_2c6e2:                               ; preds = %bb, %dec_label_pc_2c6ba
  %v3_2c6e0 = phi i32 [ %v2_2c6e0, %bb ], [ -1, %dec_label_pc_2c6ba ]
  ret i32 %v3_2c6e0
}

define i32 @function_2c6e7(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c6e7:
  %v0_2c6e8 = load i32, i32* @eax, align 8
  ret i32 %v0_2c6e8
}

define i32 @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPhjhEEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c6e9:
  %v3_2c720 = call i32 @unknown_4f69c(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c731

bb:                                               ; preds = %dec_label_pc_2c6e9
  %v1_2c72f = call i32 @function_2c736()
  br label %dec_label_pc_2c731

dec_label_pc_2c731:                               ; preds = %bb, %dec_label_pc_2c6e9
  %v2_2c72f = phi i32 [ %v1_2c72f, %bb ], [ 0, %dec_label_pc_2c6e9 ]
  ret i32 %v2_2c72f
}

define i32 @function_2c736() local_unnamed_addr {
dec_label_pc_2c736:
  %v0_2c737 = load i32, i32* @eax, align 8
  ret i32 %v0_2c737
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb1EE7_S_baseES6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c738:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2c74f = ptrtoint i32* %stack_var_-32 to i32
  %v1_2c755 = call i32 @unknown_47dee(i32 %v2_2c74f)
  %v1_2c75a = inttoptr i32 %v1_2c755 to i32*
  %v2_2c75a = load i32, i32* %v1_2c75a, align 4
  store i32 %v2_2c75a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c768

bb:                                               ; preds = %dec_label_pc_2c738
  %v1_2c766 = call i32 @function_2c76d()
  br label %dec_label_pc_2c768

dec_label_pc_2c768:                               ; preds = %bb, %dec_label_pc_2c738
  %v2_2c766 = phi i32 [ %v1_2c766, %bb ], [ %v2_2c75a, %dec_label_pc_2c738 ]
  ret i32 %v2_2c766
}

define i32 @function_2c76d() local_unnamed_addr {
dec_label_pc_2c76d:
  %v0_2c76e = load i32, i32* @eax, align 8
  ret i32 %v0_2c76e
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c76f:
  %v12_2c79a = icmp eq i32 %arg2, %arg1
  br i1 %v12_2c79a, label %bb, label %dec_label_pc_2c7a7

bb:                                               ; preds = %dec_label_pc_2c76f
  %v4_2c7a5 = call i32 @function_2c7c0(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c7a7

dec_label_pc_2c7a7:                               ; preds = %bb, %dec_label_pc_2c76f
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c7c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c7c0:
  %v0_2c7c0 = load i32, i32* @ebp, align 4
  %v1_2c7c0 = add i32 %v0_2c7c0, -16
  %v2_2c7c0 = inttoptr i32 %v1_2c7c0 to i32*
  %v3_2c7c0 = load i32, i32* %v2_2c7c0, align 4
  %v2_2c7c3 = add i32 %v0_2c7c0, -36
  %v3_2c7c3 = inttoptr i32 %v2_2c7c3 to i32*
  %v4_2c7c3 = load i32, i32* %v3_2c7c3, align 4
  %v5_2c7c3 = add i32 %v4_2c7c3, %v3_2c7c0
  store i32 %v5_2c7c3, i32* @eax, align 8
  %v1_2c7c6 = add i32 %v0_2c7c0, -12
  %v2_2c7c6 = inttoptr i32 %v1_2c7c6 to i32*
  %v3_2c7c6 = load i32, i32* %v2_2c7c6, align 4
  %v1_2c7c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2c7c9 = icmp eq i32 %v1_2c7c9, %v3_2c7c6
  br i1 %v3_2c7c9, label %bb, label %dec_label_pc_2c7d2

bb:                                               ; preds = %dec_label_pc_2c7c0
  %v1_2c7d0 = call i32 @function_2c7d7()
  br label %dec_label_pc_2c7d2

dec_label_pc_2c7d2:                               ; preds = %bb, %dec_label_pc_2c7c0
  %v2_2c7d0 = phi i32 [ %v1_2c7d0, %bb ], [ %v5_2c7c3, %dec_label_pc_2c7c0 ]
  ret i32 %v2_2c7d0
}

define i32 @function_2c7d7() local_unnamed_addr {
dec_label_pc_2c7d7:
  %v0_2c7d8 = load i32, i32* @eax, align 8
  ret i32 %v0_2c7d8
}

define i32 @_ZSt22__copy_move_backward_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c7d9:
  %v3_2c814 = call i32 @unknown_5bb9f(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2c814, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c825

bb:                                               ; preds = %dec_label_pc_2c7d9
  %v1_2c823 = call i32 @function_2c82a()
  br label %dec_label_pc_2c825

dec_label_pc_2c825:                               ; preds = %bb, %dec_label_pc_2c7d9
  %v2_2c823 = phi i32 [ %v1_2c823, %bb ], [ %v3_2c814, %dec_label_pc_2c7d9 ]
  ret i32 %v2_2c823
}

define i32 @function_2c82a() local_unnamed_addr {
dec_label_pc_2c82a:
  %v0_2c82b = load i32, i32* @eax, align 8
  ret i32 %v0_2c82b
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c82c:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c858

bb:                                               ; preds = %dec_label_pc_2c82c
  %v3_2c856 = call i32 @function_2c85d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c858

dec_label_pc_2c858:                               ; preds = %bb, %dec_label_pc_2c82c
  %v4_2c856 = phi i32 [ %v3_2c856, %bb ], [ %arg1, %dec_label_pc_2c82c ]
  ret i32 %v4_2c856
}

define i32 @function_2c85d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c85d:
  %v0_2c85e = load i32, i32* @eax, align 8
  ret i32 %v0_2c85e
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2c861:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2c888 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2c88c = ptrtoint i32* %stack_var_-36 to i32
  %v2_2c892 = call i32 @unknown_42c51(i32 %v2_2c88c, i32 %v4_2c888)
  store i32 %v2_2c892, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c8a3

bb:                                               ; preds = %dec_label_pc_2c861
  %v1_2c8a1 = call i32 @function_2c8a8()
  br label %dec_label_pc_2c8a3

dec_label_pc_2c8a3:                               ; preds = %bb, %dec_label_pc_2c861
  %v2_2c8a1 = phi i32 [ %v1_2c8a1, %bb ], [ %v2_2c892, %dec_label_pc_2c861 ]
  ret i32 %v2_2c8a1
}

define i32 @function_2c8a8() local_unnamed_addr {
dec_label_pc_2c8a8:
  %v0_2c8a9 = load i32, i32* @eax, align 8
  ret i32 %v0_2c8a9
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c8aa:
  %v1_2c8d5 = call i32 @unknown_54bb0(i32 %arg3)
  %v1_2c8e2 = call i32 @unknown_4f165(i32 %arg2)
  %v1_2c8ef = call i32 @unknown_4f165(i32 %arg1)
  %v3_2c8ff = call i32 @unknown_54b00(i32 %v1_2c8ef, i32 %v1_2c8e2, i32 %v1_2c8d5)
  store i32 %v3_2c8ff, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c910

bb:                                               ; preds = %dec_label_pc_2c8aa
  %v1_2c90e = call i32 @function_2c915()
  br label %dec_label_pc_2c910

dec_label_pc_2c910:                               ; preds = %bb, %dec_label_pc_2c8aa
  %v2_2c90e = phi i32 [ %v1_2c90e, %bb ], [ %v3_2c8ff, %dec_label_pc_2c8aa ]
  ret i32 %v2_2c90e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4f165, { 1, 0 }
}

define i32 @function_2c915() local_unnamed_addr {
dec_label_pc_2c915:
  %v0_2c91b = load i32, i32* @eax, align 8
  ret i32 %v0_2c91b
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c91c:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c93f

bb:                                               ; preds = %dec_label_pc_2c91c
  %v2_2c93d = call i32 @function_2c944(i32 %arg1)
  br label %dec_label_pc_2c93f

dec_label_pc_2c93f:                               ; preds = %bb, %dec_label_pc_2c91c
  %v3_2c93d = phi i32 [ %v2_2c93d, %bb ], [ 0, %dec_label_pc_2c91c ]
  ret i32 %v3_2c93d
}

define i32 @function_2c944(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c944:
  %v0_2c945 = load i32, i32* @eax, align 8
  ret i32 %v0_2c945
}

define i32 @_ZSt11__addressofI5CTxInEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c946:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c96c

bb:                                               ; preds = %dec_label_pc_2c946
  %v2_2c96a = call i32 @function_2c971(i32 %arg1)
  br label %dec_label_pc_2c96c

dec_label_pc_2c96c:                               ; preds = %bb, %dec_label_pc_2c946
  %v3_2c96a = phi i32 [ %v2_2c96a, %bb ], [ %arg1, %dec_label_pc_2c946 ]
  ret i32 %v3_2c96a
}

define i32 @function_2c971(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c971:
  %v0_2c972 = load i32, i32* @eax, align 8
  ret i32 %v0_2c972
}

define i32 @_ZN5CTxInD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c974:
  %v1_2c98e = add i32 %arg1, 36
  %v1_2c994 = call i32 @function_3f012(i32 %v1_2c98e)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c9a5

bb:                                               ; preds = %dec_label_pc_2c974
  %v1_2c9a3 = call i32 @function_2c9aa()
  br label %dec_label_pc_2c9a5

dec_label_pc_2c9a5:                               ; preds = %bb, %dec_label_pc_2c974
  %v2_2c9a3 = phi i32 [ %v1_2c9a3, %bb ], [ 0, %dec_label_pc_2c974 ]
  ret i32 %v2_2c9a3
}

define i32 @function_2c9aa() local_unnamed_addr {
dec_label_pc_2c9aa:
  %v0_2c9ab = load i32, i32* @eax, align 8
  ret i32 %v0_2c9ab
}

define i32 @_ZSt8_DestroyI5CTxInEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c9ac:
  %v1_2c9c9 = call i32 @unknown_59320(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2c9da

bb:                                               ; preds = %dec_label_pc_2c9ac
  %v1_2c9d8 = call i32 @function_2c9df()
  br label %dec_label_pc_2c9da

dec_label_pc_2c9da:                               ; preds = %bb, %dec_label_pc_2c9ac
  %v2_2c9d8 = phi i32 [ %v1_2c9d8, %bb ], [ 0, %dec_label_pc_2c9ac ]
  ret i32 %v2_2c9d8
}

define i32 @function_2c9df() local_unnamed_addr {
dec_label_pc_2c9df:
  %v0_2c9e0 = load i32, i32* @eax, align 8
  ret i32 %v0_2c9e0
}

define i32 @_ZSt11__addressofI6CTxOutEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c9e1:
  ret i32 %arg1
}

define i32 @function_2c9f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c9f2:
  %v0_2c9f2 = load i32, i32* @ecx, align 8
  %v1_2c9f2 = add i32 %v0_2c9f2, -1070468027
  %v2_2c9f2 = inttoptr i32 %v1_2c9f2 to i8*
  %v3_2c9f2 = load i8, i8* %v2_2c9f2, align 1
  %v5_2c9f2 = trunc i32 %v0_2c9f2 to i8
  %v6_2c9f2 = add i8 %v3_2c9f2, %v5_2c9f2
  store i8 %v6_2c9f2, i8* %v2_2c9f2, align 1
  %v0_2c9f8 = load i32, i32* @ebp, align 4
  %v1_2c9f8 = add i32 %v0_2c9f8, -28
  %v2_2c9f8 = inttoptr i32 %v1_2c9f8 to i32*
  %v3_2c9f8 = load i32, i32* %v2_2c9f8, align 4
  store i32 %v3_2c9f8, i32* @eax, align 8
  %v1_2c9fb = add i32 %v0_2c9f8, -12
  %v2_2c9fb = inttoptr i32 %v1_2c9fb to i32*
  %v3_2c9fb = load i32, i32* %v2_2c9fb, align 4
  %v1_2c9fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2c9fe = icmp eq i32 %v1_2c9fe, %v3_2c9fb
  br i1 %v3_2c9fe, label %bb, label %dec_label_pc_2ca07

bb:                                               ; preds = %dec_label_pc_2c9f2
  %v1_2ca05 = call i32 @function_2ca0c()
  br label %dec_label_pc_2ca07

dec_label_pc_2ca07:                               ; preds = %bb, %dec_label_pc_2c9f2
  %v2_2ca05 = phi i32 [ %v1_2ca05, %bb ], [ %v3_2c9f8, %dec_label_pc_2c9f2 ]
  ret i32 %v2_2ca05
}

define i32 @function_2ca0c() local_unnamed_addr {
dec_label_pc_2ca0c:
  %v0_2ca0d = load i32, i32* @eax, align 8
  ret i32 %v0_2ca0d
}

define i32 @_ZSt8_DestroyI6CTxOutEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ca0e:
  store i32 %arg1, i32* @eax, align 8
  %v1_2ca2b = call i32 @function_3f53c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ca3c

bb:                                               ; preds = %dec_label_pc_2ca0e
  %v1_2ca3a = call i32 @function_2ca41()
  br label %dec_label_pc_2ca3c

dec_label_pc_2ca3c:                               ; preds = %bb, %dec_label_pc_2ca0e
  %v2_2ca3a = phi i32 [ %v1_2ca3a, %bb ], [ 0, %dec_label_pc_2ca0e ]
  ret i32 %v2_2ca3a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ca41() local_unnamed_addr {
dec_label_pc_2ca41:
  %v0_2ca42 = load i32, i32* @eax, align 8
  ret i32 %v0_2ca42
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ca44:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ca6d

bb:                                               ; preds = %dec_label_pc_2ca44
  %v3_2ca6b = call i32 @function_2ca72(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2ca6d

dec_label_pc_2ca6d:                               ; preds = %bb, %dec_label_pc_2ca44
  %v4_2ca6b = phi i32 [ %v3_2ca6b, %bb ], [ 0, %dec_label_pc_2ca44 ]
  ret i32 %v4_2ca6b
}

define i32 @function_2ca72(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ca72:
  %v0_2ca73 = load i32, i32* @eax, align 8
  ret i32 %v0_2ca73
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI6CTxOutE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ca74:
  store i32 214748364, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ca9c

bb:                                               ; preds = %dec_label_pc_2ca74
  %v2_2ca9a = call i32 @function_2caa1(i32 %arg1)
  br label %dec_label_pc_2ca9c

dec_label_pc_2ca9c:                               ; preds = %bb, %dec_label_pc_2ca74
  %v3_2ca9a = phi i32 [ %v2_2ca9a, %bb ], [ 214748364, %dec_label_pc_2ca74 ]
  ret i32 %v3_2ca9a
}

define i32 @function_2caa1(i32 %arg1) local_unnamed_addr {
dec_label_pc_2caa1:
  %v0_2caa2 = load i32, i32* @eax, align 8
  ret i32 %v0_2caa2
}

define i32 @_ZSt10_ConstructI6CTxOutS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2caa3:
  %v3_2cada = call i32 @function_2cb05(i32 20, i32 %arg1)
  %v2_2caeb = call i32 @function_2cb05(i32 0, i32 %arg2)
  ret i32 %v2_2caeb

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_2cb05, { 1, 0 }
}

define i32 @function_2cb05(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cb05:
  %v0_2cb05 = load i32, i32* @ebp, align 4
  %v1_2cb05 = add i32 %v0_2cb05, -28
  %v2_2cb05 = inttoptr i32 %v1_2cb05 to i32*
  %v3_2cb05 = load i32, i32* %v2_2cb05, align 4
  %v1_2cb08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2cb08 = xor i32 %v1_2cb08, %v3_2cb05
  %v3_2cb08 = icmp eq i32 %v2_2cb08, 0
  store i32 %v2_2cb08, i32* @eax, align 8
  br i1 %v3_2cb08, label %bb, label %dec_label_pc_2cb11

bb:                                               ; preds = %dec_label_pc_2cb05
  %v1_2cb0f = call i32 @function_2cb16()
  br label %dec_label_pc_2cb11

dec_label_pc_2cb11:                               ; preds = %bb, %dec_label_pc_2cb05
  %v2_2cb0f = phi i32 [ %v1_2cb0f, %bb ], [ %v2_2cb08, %dec_label_pc_2cb05 ]
  ret i32 %v2_2cb0f
}

define i32 @function_2cb16() local_unnamed_addr {
dec_label_pc_2cb16:
  %v0_2cb1d = load i32, i32* @eax, align 8
  ret i32 %v0_2cb1d
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cb1e:
  store i32 %arg1, i32* @eax, align 8
  %v3_2cb48 = call i32 @function_2cb6c(i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v3_2cb48

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2cb5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cb5e:
  %v0_2cb5e = load i32, i32* @eax, align 8
  %v11_2cb5e = and i32 %v0_2cb5e, -24
  store i32 %arg1, i32* @ebp, align 4
  ret i32 %v11_2cb5e
}

define i32 @function_2cb6c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cb6c:
  %v0_2cb77 = call i32 @function_2cba9()
  ret i32 %v0_2cb77
}

define i32 @function_2cb7a() local_unnamed_addr {
dec_label_pc_2cb7a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cb7a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cb7a
}

define i32 @function_2cba9() local_unnamed_addr {
dec_label_pc_2cba9:
  %v0_2cba9 = load i32, i32* @ebp, align 4
  %v1_2cba9 = add i32 %v0_2cba9, -12
  %v2_2cba9 = inttoptr i32 %v1_2cba9 to i32*
  %v3_2cba9 = load i32, i32* %v2_2cba9, align 4
  %v1_2cbac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2cbac = xor i32 %v1_2cbac, %v3_2cba9
  %v3_2cbac = icmp eq i32 %v2_2cbac, 0
  store i32 %v2_2cbac, i32* @eax, align 8
  br i1 %v3_2cbac, label %bb, label %dec_label_pc_2cbb5

bb:                                               ; preds = %dec_label_pc_2cba9
  %v1_2cbb3 = call i32 @function_2cbba()
  br label %dec_label_pc_2cbb5

dec_label_pc_2cbb5:                               ; preds = %bb, %dec_label_pc_2cba9
  %v2_2cbb3 = phi i32 [ %v1_2cbb3, %bb ], [ %v2_2cbac, %dec_label_pc_2cba9 ]
  ret i32 %v2_2cbb3
}

define i32 @function_2cbba() local_unnamed_addr {
dec_label_pc_2cbba:
  %v0_2cbbf = load i32, i32* @eax, align 8
  ret i32 %v0_2cbbf
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cbc0:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cbe3

bb:                                               ; preds = %dec_label_pc_2cbc0
  %v2_2cbe1 = call i32 @function_2cbe8(i32 %arg1)
  br label %dec_label_pc_2cbe3

dec_label_pc_2cbe3:                               ; preds = %bb, %dec_label_pc_2cbc0
  %v3_2cbe1 = phi i32 [ %v2_2cbe1, %bb ], [ 0, %dec_label_pc_2cbc0 ]
  ret i32 %v3_2cbe1
}

define i32 @function_2cbe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cbe8:
  %v0_2cbe9 = load i32, i32* @eax, align 8
  ret i32 %v0_2cbe9
}

define i32 @_ZSt11__addressofI12CTransactionEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cbea:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cc10

bb:                                               ; preds = %dec_label_pc_2cbea
  %v2_2cc0e = call i32 @function_2cc15(i32 %arg1)
  br label %dec_label_pc_2cc10

dec_label_pc_2cc10:                               ; preds = %bb, %dec_label_pc_2cbea
  %v3_2cc0e = phi i32 [ %v2_2cc0e, %bb ], [ %arg1, %dec_label_pc_2cbea ]
  ret i32 %v3_2cc0e
}

define i32 @function_2cc15(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cc15:
  %v0_2cc16 = load i32, i32* @eax, align 8
  ret i32 %v0_2cc16
}

define i32 @_ZSt8_DestroyI12CTransactionEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cc17:
  %v1_2cc34 = call i32 @unknown_3f9d1(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cc45

bb:                                               ; preds = %dec_label_pc_2cc17
  %v1_2cc43 = call i32 @function_2cc4a()
  br label %dec_label_pc_2cc45

dec_label_pc_2cc45:                               ; preds = %bb, %dec_label_pc_2cc17
  %v2_2cc43 = phi i32 [ %v1_2cc43, %bb ], [ 0, %dec_label_pc_2cc17 ]
  ret i32 %v2_2cc43
}

define i32 @function_2cc4a() local_unnamed_addr {
dec_label_pc_2cc4a:
  %v0_2cc4b = load i32, i32* @eax, align 8
  ret i32 %v0_2cc4b
}

define i32 @_ZN9__gnu_cxx13new_allocatorI7uint256EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cc4c:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cc6f

bb:                                               ; preds = %dec_label_pc_2cc4c
  %v2_2cc6d = call i32 @function_2cc74(i32 %arg1)
  br label %dec_label_pc_2cc6f

dec_label_pc_2cc6f:                               ; preds = %bb, %dec_label_pc_2cc4c
  %v3_2cc6d = phi i32 [ %v2_2cc6d, %bb ], [ 0, %dec_label_pc_2cc4c ]
  ret i32 %v3_2cc6d
}

define i32 @function_2cc74(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cc74:
  %v0_2cc75 = load i32, i32* @eax, align 8
  ret i32 %v0_2cc75
}

define i32 @_Z12SerReadWriteI11CDataStreamxEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2cc76:
  %tmp110 = ptrtoint i32* %arg2 to i32
  %v1_2cca9 = add i32 %tmp110, 4
  %v2_2cca9 = inttoptr i32 %v1_2cca9 to i32*
  %v3_2cca9 = load i32, i32* %v2_2cca9, align 4
  %v2_2ccac = load i32, i32* %arg2, align 4
  %v5_2ccca = call i32 @unknown_50169(i32 %arg1, i32 %v2_2ccac, i32 %v3_2cca9, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cce0

bb:                                               ; preds = %dec_label_pc_2cc76
  %v1_2ccde = call i32 @function_2cce5()
  br label %dec_label_pc_2cce0

dec_label_pc_2cce0:                               ; preds = %bb, %dec_label_pc_2cc76
  %v2_2ccde = phi i32 [ %v1_2ccde, %bb ], [ 0, %dec_label_pc_2cc76 ]
  ret i32 %v2_2ccde
}

define i32 @function_2cce5() local_unnamed_addr {
dec_label_pc_2cce5:
  %v0_2cce6 = load i32, i32* @eax, align 8
  ret i32 %v0_2cce6
}

define i32 @_Z12SerReadWriteI11CDataStreamiEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2cce7:
  %v4_2cd32 = call i32 @unknown_47e5d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cd48

bb:                                               ; preds = %dec_label_pc_2cce7
  %v1_2cd46 = call i32 @function_2cd4d()
  br label %dec_label_pc_2cd48

dec_label_pc_2cd48:                               ; preds = %bb, %dec_label_pc_2cce7
  %v2_2cd46 = phi i32 [ %v1_2cd46, %bb ], [ 0, %dec_label_pc_2cce7 ]
  ret i32 %v2_2cd46
}

define i32 @function_2cd4d() local_unnamed_addr {
dec_label_pc_2cd4d:
  %v0_2cd4e = load i32, i32* @eax, align 8
  ret i32 %v0_2cd4e
}

define i32 @_Z12SerReadWriteI11CDataStreamxEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2cd4f:
  %v4_2cd9a = call i32 @unknown_5c186(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 0
}

define i32 @function_2cdb0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2cdb0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cdb5() local_unnamed_addr {
dec_label_pc_2cdb5:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cdb6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cdb6
}

define i32 @_Z9SerializeI11CDataStream9CFlatDataEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2cdb7:
  %v8_2cdfb = call i32 @unknown_5c245(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ce0c

bb:                                               ; preds = %dec_label_pc_2cdb7
  %v1_2ce0a = call i32 @function_2ce11()
  br label %dec_label_pc_2ce0c

dec_label_pc_2ce0c:                               ; preds = %bb, %dec_label_pc_2cdb7
  %v2_2ce0a = phi i32 [ %v1_2ce0a, %bb ], [ 0, %dec_label_pc_2cdb7 ]
  ret i32 %v2_2ce0a

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ce11() local_unnamed_addr {
dec_label_pc_2ce11:
  %v0_2ce12 = load i32, i32* @eax, align 8
  ret i32 %v0_2ce12
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce13:
  %v1_2ce2d = add i32 %arg1, 16
  store i32 %v1_2ce2d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ce3c

bb:                                               ; preds = %dec_label_pc_2ce13
  %v2_2ce3a = call i32 @function_2ce41(i32 %arg1)
  br label %dec_label_pc_2ce3c

dec_label_pc_2ce3c:                               ; preds = %bb, %dec_label_pc_2ce13
  %v3_2ce3a = phi i32 [ %v2_2ce3a, %bb ], [ %v1_2ce2d, %dec_label_pc_2ce13 ]
  ret i32 %v3_2ce3a
}

define i32 @function_2ce41(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce41:
  %v0_2ce42 = load i32, i32* @eax, align 8
  ret i32 %v0_2ce42
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ce44:
  %stack_var_-17 = alloca i32, align 4
  %v1_2ce68 = call i32 @unknown_5c336(i32 %arg1)
  %v1_2ce73 = add i32 %v1_2ce68, 16
  %v1_2ce79 = call i32 @unknown_5688b(i32 %v1_2ce73)
  %v2_2ce80 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2ce8d = call i32 @unknown_56806(i32 %v2_2ce80, i32 %arg1)
  %v3_2cea6 = call i32 @unknown_5c3f4(i32 %v2_2ce80, i32 %v1_2ce79, i32 %arg2)
  %v1_2ceb1 = call i32 @unknown_56856(i32 %v2_2ce80)
  store i32 %v1_2ce68, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cec5

bb:                                               ; preds = %dec_label_pc_2ce44
  %v1_2cec3 = call i32 @function_2cf0b()
  store i32 %v1_2cec3, i32* @eax, align 8
  br label %dec_label_pc_2cec5

dec_label_pc_2cec5:                               ; preds = %bb, %dec_label_pc_2ce44
  %v0_2cec5 = call i32 @function_2cf06()
  ret i32 %v0_2cec5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2cec8() local_unnamed_addr {
dec_label_pc_2cec8:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cec8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cec8
}

define i32 @function_2cef6() local_unnamed_addr {
dec_label_pc_2cef6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cef6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cef6
}

define i32 @function_2cf06() local_unnamed_addr {
dec_label_pc_2cf06:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cf0b() local_unnamed_addr {
dec_label_pc_2cf0b:
  %v0_2cf0f = load i32, i32* @eax, align 8
  ret i32 %v0_2cf0f
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKSsSsEEbEC1ERKS3_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cf10:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_2cf39 = inttoptr i32 %arg2 to i32*
  %v2_2cf39 = load i32, i32* %v1_2cf39, align 4
  store i32 %v2_2cf39, i32* %arg1, align 4
  %v2_2cf40 = load i8, i8* %tmp104, align 1
  %v3_2cf46 = add i32 %tmp109, 4
  %v4_2cf46 = inttoptr i32 %v3_2cf46 to i8*
  store i8 %v2_2cf40, i8* %v4_2cf46, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cf55

bb:                                               ; preds = %dec_label_pc_2cf10
  %v5_2cf53 = call i32 @function_2cf5a(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_2cf55

dec_label_pc_2cf55:                               ; preds = %bb, %dec_label_pc_2cf10
  %v6_2cf53 = phi i32 [ %v5_2cf53, %bb ], [ 0, %dec_label_pc_2cf10 ]
  ret i32 %v6_2cf53
}

define i32 @function_2cf5a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cf5a:
  %v0_2cf5b = load i32, i32* @eax, align 8
  ret i32 %v0_2cf5b
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSsEEmmEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cf5c:
  %v0_2cf68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2cf68
}

define i32 @function_2cf6e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2cf6e:
  %v0_2cf6e = load i32, i32* @eax, align 8
  %v1_2cf6e = load i32, i32* @ebp, align 4
  %v2_2cf6e = add i32 %v1_2cf6e, -12
  %v3_2cf6e = inttoptr i32 %v2_2cf6e to i32*
  store i32 %v0_2cf6e, i32* %v3_2cf6e, align 4
  %v0_2cf73 = load i32, i32* @ebp, align 4
  %v1_2cf73 = add i32 %v0_2cf73, -28
  %v2_2cf73 = inttoptr i32 %v1_2cf73 to i32*
  %v3_2cf73 = load i32, i32* %v2_2cf73, align 4
  %v1_2cf76 = inttoptr i32 %v3_2cf73 to i32*
  %v2_2cf76 = load i32, i32* %v1_2cf76, align 4
  ret i32 %v2_2cf76
}

define i32 @function_2cf98() local_unnamed_addr {
dec_label_pc_2cf98:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2cf98 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2cf98 = add i32 %v0_2cf98, -1
  store i32 %v1_2cf98, i32* %ecx.global-to-local, align 8
  %v0_2cf9a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cf9a
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cf9c:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cfc5

bb:                                               ; preds = %dec_label_pc_2cf9c
  %v3_2cfc3 = call i32 @function_2cfca(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2cfc5

dec_label_pc_2cfc5:                               ; preds = %bb, %dec_label_pc_2cf9c
  %v4_2cfc3 = phi i32 [ %v3_2cfc3, %bb ], [ 0, %dec_label_pc_2cf9c ]
  ret i32 %v4_2cfc3
}

define i32 @function_2cfca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cfca:
  %v0_2cfcb = load i32, i32* @eax, align 8
  ret i32 %v0_2cfcb
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI5CTxInE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cfcc:
  store i32 82595524, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2cff4

bb:                                               ; preds = %dec_label_pc_2cfcc
  %v2_2cff2 = call i32 @function_2cff9(i32 %arg1)
  br label %dec_label_pc_2cff4

dec_label_pc_2cff4:                               ; preds = %bb, %dec_label_pc_2cfcc
  %v3_2cff2 = phi i32 [ %v2_2cff2, %bb ], [ 82595524, %dec_label_pc_2cfcc ]
  ret i32 %v3_2cff2
}

define i32 @function_2cff9(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cff9:
  %v0_2cffa = load i32, i32* @eax, align 8
  ret i32 %v0_2cffa
}

define i32 @_ZN5CTxInC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cffc:
  ret i32 %arg2
}

define i32 @function_2d012(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d012:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_2d012 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2d012 = load i32, i32* @eax, align 8
  %v4_2d012 = trunc i32 %v3_2d012 to i8
  %v5_2d012 = add i8 %v4_2d012, %v2_2d012
  %v21_2d012 = inttoptr i32 %v3_2d012 to i8*
  store i8 %v5_2d012, i8* %v21_2d012, align 1
  %v0_2d014 = load i32, i32* @eax, align 8
  %v1_2d014 = load i32, i32* @ebp, align 4
  %v2_2d014 = add i32 %v1_2d014, -12
  %v3_2d014 = inttoptr i32 %v2_2d014 to i32*
  store i32 %v0_2d014, i32* %v3_2d014, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2d019 = load i32, i32* @ebp, align 4
  %v1_2d019 = add i32 %v0_2d019, -28
  %v2_2d019 = inttoptr i32 %v1_2d019 to i32*
  %v3_2d019 = load i32, i32* %v2_2d019, align 4
  store i32 %v3_2d019, i32* %eax.global-to-local, align 8
  %v1_2d01c = add i32 %v0_2d019, -32
  %v2_2d01c = inttoptr i32 %v1_2d01c to i32*
  %v3_2d01c = load i32, i32* %v2_2d01c, align 4
  store i32 %v3_2d01c, i32* %edx.global-to-local, align 4
  %v1_2d01f = inttoptr i32 %v3_2d01c to i32*
  %v2_2d01f = load i32, i32* %v1_2d01f, align 4
  %v2_2d021 = inttoptr i32 %v3_2d019 to i32*
  store i32 %v2_2d01f, i32* %v2_2d021, align 4
  %v0_2d023 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d023 = add i32 %v0_2d023, 4
  %v2_2d023 = inttoptr i32 %v1_2d023 to i32*
  %v3_2d023 = load i32, i32* %v2_2d023, align 4
  %v1_2d026 = load i32, i32* %eax.global-to-local, align 8
  %v2_2d026 = add i32 %v1_2d026, 4
  %v3_2d026 = inttoptr i32 %v2_2d026 to i32*
  store i32 %v3_2d023, i32* %v3_2d026, align 4
  %v0_2d029 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d029 = add i32 %v0_2d029, 8
  %v2_2d029 = inttoptr i32 %v1_2d029 to i32*
  %v3_2d029 = load i32, i32* %v2_2d029, align 4
  %v1_2d02c = load i32, i32* %eax.global-to-local, align 8
  %v2_2d02c = add i32 %v1_2d02c, 8
  %v3_2d02c = inttoptr i32 %v2_2d02c to i32*
  store i32 %v3_2d029, i32* %v3_2d02c, align 4
  %v0_2d02f = load i32, i32* %edx.global-to-local, align 4
  %v1_2d02f = add i32 %v0_2d02f, 12
  %v2_2d02f = inttoptr i32 %v1_2d02f to i32*
  %v3_2d02f = load i32, i32* %v2_2d02f, align 4
  %v1_2d032 = load i32, i32* %eax.global-to-local, align 8
  %v2_2d032 = add i32 %v1_2d032, 12
  %v3_2d032 = inttoptr i32 %v2_2d032 to i32*
  store i32 %v3_2d02f, i32* %v3_2d032, align 4
  %v0_2d035 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d035 = add i32 %v0_2d035, 16
  %v2_2d035 = inttoptr i32 %v1_2d035 to i32*
  %v3_2d035 = load i32, i32* %v2_2d035, align 4
  %v1_2d038 = load i32, i32* %eax.global-to-local, align 8
  %v2_2d038 = add i32 %v1_2d038, 16
  %v3_2d038 = inttoptr i32 %v2_2d038 to i32*
  store i32 %v3_2d035, i32* %v3_2d038, align 4
  %v0_2d03b = load i32, i32* %edx.global-to-local, align 4
  %v1_2d03b = add i32 %v0_2d03b, 20
  %v2_2d03b = inttoptr i32 %v1_2d03b to i32*
  %v3_2d03b = load i32, i32* %v2_2d03b, align 4
  %v1_2d03e = load i32, i32* %eax.global-to-local, align 8
  %v2_2d03e = add i32 %v1_2d03e, 20
  %v3_2d03e = inttoptr i32 %v2_2d03e to i32*
  store i32 %v3_2d03b, i32* %v3_2d03e, align 4
  %v0_2d041 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d041 = add i32 %v0_2d041, 24
  %v2_2d041 = inttoptr i32 %v1_2d041 to i32*
  %v3_2d041 = load i32, i32* %v2_2d041, align 4
  %v1_2d044 = load i32, i32* %eax.global-to-local, align 8
  %v2_2d044 = add i32 %v1_2d044, 24
  %v3_2d044 = inttoptr i32 %v2_2d044 to i32*
  store i32 %v3_2d041, i32* %v3_2d044, align 4
  %v0_2d047 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d047 = add i32 %v0_2d047, 28
  %v2_2d047 = inttoptr i32 %v1_2d047 to i32*
  %v3_2d047 = load i32, i32* %v2_2d047, align 4
  %v1_2d04a = load i32, i32* %eax.global-to-local, align 8
  %v2_2d04a = add i32 %v1_2d04a, 28
  %v3_2d04a = inttoptr i32 %v2_2d04a to i32*
  store i32 %v3_2d047, i32* %v3_2d04a, align 4
  %v0_2d04d = load i32, i32* %edx.global-to-local, align 4
  %v1_2d04d = add i32 %v0_2d04d, 32
  %v2_2d04d = inttoptr i32 %v1_2d04d to i32*
  %v3_2d04d = load i32, i32* %v2_2d04d, align 4
  store i32 %v3_2d04d, i32* %edx.global-to-local, align 4
  %v1_2d050 = load i32, i32* %eax.global-to-local, align 8
  %v2_2d050 = add i32 %v1_2d050, 32
  %v3_2d050 = inttoptr i32 %v2_2d050 to i32*
  store i32 %v3_2d04d, i32* %v3_2d050, align 4
  %v0_2d053 = load i32, i32* @ebp, align 4
  %v1_2d053 = add i32 %v0_2d053, -32
  %v2_2d053 = inttoptr i32 %v1_2d053 to i32*
  %v3_2d053 = load i32, i32* %v2_2d053, align 4
  store i32 %v3_2d053, i32* %eax.global-to-local, align 8
  %v1_2d056 = add i32 %v3_2d053, 36
  store i32 %v1_2d056, i32* %edx.global-to-local, align 4
  %v1_2d059 = add i32 %v0_2d053, -28
  %v2_2d059 = inttoptr i32 %v1_2d059 to i32*
  %v3_2d059 = load i32, i32* %v2_2d059, align 4
  %v1_2d05c = add i32 %v3_2d059, 36
  store i32 %v1_2d05c, i32* @eax, align 8
  %v2_2d066 = call i32 @function_3f5ec(i32 %v1_2d05c, i32 %v1_2d056)
  store i32 %v2_2d066, i32* %eax.global-to-local, align 8
  %v0_2d06b = load i32, i32* @ebp, align 4
  %v1_2d06b = add i32 %v0_2d06b, -32
  %v2_2d06b = inttoptr i32 %v1_2d06b to i32*
  %v3_2d06b = load i32, i32* %v2_2d06b, align 4
  store i32 %v3_2d06b, i32* %eax.global-to-local, align 8
  %v1_2d06e = add i32 %v3_2d06b, ptrtoint (i32* @global_var_30.2823 to i32)
  %v2_2d06e = inttoptr i32 %v1_2d06e to i32*
  %v3_2d06e = load i32, i32* %v2_2d06e, align 4
  store i32 %v3_2d06e, i32* %edx.global-to-local, align 4
  %v1_2d071 = add i32 %v0_2d06b, -28
  %v2_2d071 = inttoptr i32 %v1_2d071 to i32*
  %v3_2d071 = load i32, i32* %v2_2d071, align 4
  store i32 %v3_2d071, i32* %eax.global-to-local, align 8
  %v2_2d074 = add i32 %v3_2d071, ptrtoint (i32* @global_var_30.2823 to i32)
  %v3_2d074 = inttoptr i32 %v2_2d074 to i32*
  store i32 %v3_2d06e, i32* %v3_2d074, align 4
  %v0_2d077 = load i32, i32* @ebp, align 4
  %v1_2d077 = add i32 %v0_2d077, -12
  %v2_2d077 = inttoptr i32 %v1_2d077 to i32*
  %v3_2d077 = load i32, i32* %v2_2d077, align 4
  store i32 %v3_2d077, i32* %eax.global-to-local, align 8
  %v1_2d07a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2d07a = xor i32 %v1_2d07a, %v3_2d077
  store i1 false, i1* @cf, align 1
  %v3_2d07a = icmp eq i32 %v2_2d07a, 0
  store i32 %v2_2d07a, i32* @eax, align 8
  br i1 %v3_2d07a, label %bb, label %dec_label_pc_2d083

bb:                                               ; preds = %dec_label_pc_2d012
  %v1_2d081 = call i32 @function_2d088()
  store i32 %v1_2d081, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2d083

dec_label_pc_2d083:                               ; preds = %bb, %dec_label_pc_2d012
  %v2_2d081 = phi i32 [ %v1_2d081, %bb ], [ %v2_2d07a, %dec_label_pc_2d012 ]
  ret i32 %v2_2d081
}

define i32 @function_2d088() local_unnamed_addr {
dec_label_pc_2d088:
  %v0_2d089 = load i32, i32* @eax, align 8
  ret i32 %v0_2d089
}

define i32 @_ZSt10_ConstructI5CTxInS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d08a:
  store i32 0, i32* @eax, align 8
  %v3_2d0b8 = call i32 @function_32db6(i32 ptrtoint (i64* @global_var_34.2855 to i32), i32 %arg1)
  %v1_2d0bf = icmp eq i32 %v3_2d0b8, 0
  br i1 %v1_2d0bf, label %bb, label %dec_label_pc_2d0c3

bb:                                               ; preds = %dec_label_pc_2d08a
  %v1_2d0c1 = call i32 @function_2d0ec()
  br label %dec_label_pc_2d0c3

dec_label_pc_2d0c3:                               ; preds = %bb, %dec_label_pc_2d08a
  %v3_2d0cd = call i32 @unknown_5a086(i32 %v3_2d0b8, i32 %arg2)
  %v0_2d0d2 = call i32 @function_2d0ec()
  ret i32 %v0_2d0d2

; uselistorder directives
  uselistorder i32 ()* @function_2d0ec, { 1, 0 }
}

define i32 @function_2d0ec() local_unnamed_addr {
dec_label_pc_2d0ec:
  %v0_2d0ec = load i32, i32* @ebp, align 4
  %v1_2d0ec = add i32 %v0_2d0ec, -28
  %v2_2d0ec = inttoptr i32 %v1_2d0ec to i32*
  %v3_2d0ec = load i32, i32* %v2_2d0ec, align 4
  %v1_2d0ef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2d0ef = xor i32 %v1_2d0ef, %v3_2d0ec
  %v3_2d0ef = icmp eq i32 %v2_2d0ef, 0
  store i32 %v2_2d0ef, i32* @eax, align 8
  br i1 %v3_2d0ef, label %bb, label %dec_label_pc_2d0f8

bb:                                               ; preds = %dec_label_pc_2d0ec
  %v1_2d0f6 = call i32 @function_2d0fd()
  br label %dec_label_pc_2d0f8

dec_label_pc_2d0f8:                               ; preds = %bb, %dec_label_pc_2d0ec
  %v2_2d0f6 = phi i32 [ %v1_2d0f6, %bb ], [ %v2_2d0ef, %dec_label_pc_2d0ec ]
  ret i32 %v2_2d0f6
}

define i32 @function_2d0fd() local_unnamed_addr {
dec_label_pc_2d0fd:
  %v0_2d104 = load i32, i32* @eax, align 8
  ret i32 %v0_2d104
}

define i32 @_ZSt9make_heapIPxEvT_S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d105:
  %tmp111 = ptrtoint i32* %arg1 to i32
  %v2_2d12a = sub i32 %arg2, %tmp111
  %v7_2d131 = icmp sgt i32 %v2_2d12a, 15
  br i1 %v7_2d131, label %dec_label_pc_2d133, label %dec_label_pc_2d1a2

dec_label_pc_2d133:                               ; preds = %dec_label_pc_2d105
  %v2_2d13f = sdiv i32 %v2_2d12a, 8
  %v2_2d150 = add nsw i32 %v2_2d13f, -2
  %v2_2d152 = sdiv i32 %v2_2d150, 2
  br label %dec_label_pc_2d157

dec_label_pc_2d157:                               ; preds = %dec_label_pc_2d198, %dec_label_pc_2d133
  %storemerge = phi i32 [ %v4_2d198, %dec_label_pc_2d198 ], [ %v2_2d152, %dec_label_pc_2d133 ]
  %v2_2d15a = mul i32 %storemerge, 8
  %v5_2d15d = add i32 %v2_2d15a, %tmp111
  %v1_2d160 = add i32 %v5_2d15d, 4
  %v2_2d160 = inttoptr i32 %v1_2d160 to i32*
  %v3_2d160 = load i32, i32* %v2_2d160, align 4
  %v1_2d163 = inttoptr i32 %v5_2d15d to i32*
  %v2_2d163 = load i32, i32* %v1_2d163, align 4
  %v5_2d18d = call i32 @unknown_5c736(i32 %tmp111, i32 %storemerge, i32 %v2_2d13f, i32 %v2_2d163, i32 %v3_2d160)
  %v10_2d192 = icmp eq i32 %storemerge, 0
  br i1 %v10_2d192, label %dec_label_pc_2d1a2, label %dec_label_pc_2d198

dec_label_pc_2d198:                               ; preds = %dec_label_pc_2d157
  %v4_2d198 = add i32 %storemerge, -1
  br label %dec_label_pc_2d157

dec_label_pc_2d1a2:                               ; preds = %dec_label_pc_2d157, %dec_label_pc_2d105
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d1ae

bb:                                               ; preds = %dec_label_pc_2d1a2
  %v1_2d1ac = call i32 @function_2d1b3()
  br label %dec_label_pc_2d1ae

dec_label_pc_2d1ae:                               ; preds = %bb, %dec_label_pc_2d1a2
  %v2_2d1ac = phi i32 [ %v1_2d1ac, %bb ], [ 0, %dec_label_pc_2d1a2 ]
  ret i32 %v2_2d1ac

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 3, 0 }
  uselistorder i32 %v2_2d13f, { 1, 0 }
  uselistorder i32 %tmp111, { 1, 0, 2 }
}

define i32 @function_2d1b3() local_unnamed_addr {
dec_label_pc_2d1b3:
  %v0_2d1b4 = load i32, i32* @eax, align 8
  ret i32 %v0_2d1b4
}

define i32 @_ZSt10__pop_heapIPxEvT_S1_S1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d1b5:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v1_2d1db = add i32 %arg3, 4
  %v2_2d1db = inttoptr i32 %v1_2d1db to i32*
  %v3_2d1db = load i32, i32* %v2_2d1db, align 4
  store i32 %v3_2d1db, i32* %edx.global-to-local, align 4
  %v1_2d1de = inttoptr i32 %arg3 to i32*
  %v2_2d1de = load i32, i32* %v1_2d1de, align 4
  %v1_2d1e9 = add i32 %tmp110, 4
  %v2_2d1e9 = inttoptr i32 %v1_2d1e9 to i32*
  %v3_2d1e9 = load i32, i32* %v2_2d1e9, align 4
  store i32 %v3_2d1e9, i32* %edx.global-to-local, align 4
  %v2_2d1ec = load i32, i32* %arg1, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 8
  store i32 %v2_2d1ec, i32* %v1_2d1de, align 4
  %v0_2d1f3 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d1f3 = load i32, i32* %ecx.global-to-local, align 8
  %v2_2d1f3 = add i32 %v1_2d1f3, 4
  %v3_2d1f3 = inttoptr i32 %v2_2d1f3 to i32*
  store i32 %v0_2d1f3, i32* %v3_2d1f3, align 4
  %v2_2d1fe = sub i32 %arg2, %tmp110
  %v2_2d202 = sdiv i32 %v2_2d1fe, 8
  store i32 %v2_2d202, i32* %ecx.global-to-local, align 8
  store i32 %v3_2d1db, i32* %edx.global-to-local, align 4
  %v5_2d227 = call i32 @unknown_5c7e6(i32 %tmp110, i32 0, i32 %v2_2d202, i32 %v2_2d1de, i32 %v3_2d1db)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d238

bb:                                               ; preds = %dec_label_pc_2d1b5
  %v1_2d236 = call i32 @function_2d23d()
  br label %dec_label_pc_2d238

dec_label_pc_2d238:                               ; preds = %bb, %dec_label_pc_2d1b5
  %v2_2d236 = phi i32 [ %v1_2d236, %bb ], [ 0, %dec_label_pc_2d1b5 ]
  ret i32 %v2_2d236

; uselistorder directives
  uselistorder i32 %v2_2d202, { 1, 0 }
  uselistorder i32 %v3_2d1db, { 1, 0, 2 }
  uselistorder i32 %tmp110, { 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
}

define i32 @function_2d23d() local_unnamed_addr {
dec_label_pc_2d23d:
  %v0_2d23e = load i32, i32* @eax, align 8
  ret i32 %v0_2d23e
}

define i32 @_ZSt9iter_swapIPxS0_EvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d23f:
  %v2_2d269 = call i32 @unknown_5c9b6(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d27a

bb:                                               ; preds = %dec_label_pc_2d23f
  %v1_2d278 = call i32 @function_2d27f()
  br label %dec_label_pc_2d27a

dec_label_pc_2d27a:                               ; preds = %bb, %dec_label_pc_2d23f
  %v2_2d278 = phi i32 [ %v1_2d278, %bb ], [ 0, %dec_label_pc_2d23f ]
  ret i32 %v2_2d278
}

define i32 @function_2d27f() local_unnamed_addr {
dec_label_pc_2d27f:
  %v0_2d280 = load i32, i32* @eax, align 8
  ret i32 %v0_2d280
}

define i32 @_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d281:
  %v1_2d29e = call i32 @unknown_5ca3a(i32 %arg1)
  store i32 %v1_2d29e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d2af

bb:                                               ; preds = %dec_label_pc_2d281
  %v1_2d2ad = call i32 @function_2d2b4()
  br label %dec_label_pc_2d2af

dec_label_pc_2d2af:                               ; preds = %bb, %dec_label_pc_2d281
  %v2_2d2ad = phi i32 [ %v1_2d2ad, %bb ], [ %v1_2d29e, %dec_label_pc_2d281 ]
  ret i32 %v2_2d2ad
}

define i32 @function_2d2b4() local_unnamed_addr {
dec_label_pc_2d2b4:
  %v0_2d2b5 = load i32, i32* @eax, align 8
  ret i32 %v0_2d2b5
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPxS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d2b6:
  %v1_2d2e1 = call i32 @unknown_5ca9c(i32 %arg3)
  %v1_2d2ee = call i32 @unknown_5ca9c(i32 %arg2)
  %v1_2d2fb = call i32 @unknown_5ca9c(i32 %arg1)
  %v3_2d30b = call i32 @unknown_5cad1(i32 %v1_2d2fb, i32 %v1_2d2ee, i32 %v1_2d2e1)
  store i32 %v3_2d30b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d31c

bb:                                               ; preds = %dec_label_pc_2d2b6
  %v1_2d31a = call i32 @function_2d321()
  br label %dec_label_pc_2d31c

dec_label_pc_2d31c:                               ; preds = %bb, %dec_label_pc_2d2b6
  %v2_2d31a = phi i32 [ %v1_2d31a, %bb ], [ %v3_2d30b, %dec_label_pc_2d2b6 ]
  ret i32 %v2_2d31a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5ca9c, { 2, 1, 0 }
}

define i32 @function_2d321() local_unnamed_addr {
dec_label_pc_2d321:
  %v0_2d327 = load i32, i32* @eax, align 8
  ret i32 %v0_2d327
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d328:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d34e

bb:                                               ; preds = %dec_label_pc_2d328
  %v2_2d34c = call i32 @function_2d353(i32 %arg1)
  br label %dec_label_pc_2d34e

dec_label_pc_2d34e:                               ; preds = %bb, %dec_label_pc_2d328
  %v3_2d34c = phi i32 [ %v2_2d34c, %bb ], [ %arg1, %dec_label_pc_2d328 ]
  ret i32 %v3_2d34c
}

define i32 @function_2d353(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d353:
  %v0_2d354 = load i32, i32* @eax, align 8
  ret i32 %v0_2d354
}

define i32 @_ZNSaISt4pairIKSsSsEEC1ISt13_Rb_tree_nodeIS1_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d356:
  %v1_2d379 = call i32 @unknown_5cbc4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d38a

bb:                                               ; preds = %dec_label_pc_2d356
  %v1_2d388 = call i32 @function_2d38f()
  br label %dec_label_pc_2d38a

dec_label_pc_2d38a:                               ; preds = %bb, %dec_label_pc_2d356
  %v2_2d388 = phi i32 [ %v1_2d388, %bb ], [ 0, %dec_label_pc_2d356 ]
  ret i32 %v2_2d388
}

define i32 @function_2d38f() local_unnamed_addr {
dec_label_pc_2d38f:
  %v0_2d390 = load i32, i32* @eax, align 8
  ret i32 %v0_2d390
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d392:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2d3b5

bb:                                               ; preds = %dec_label_pc_2d392
  %v2_2d3b3 = call i32 @function_2d3ba(i32 %arg1)
  br label %dec_label_pc_2d3b5

dec_label_pc_2d3b5:                               ; preds = %bb, %dec_label_pc_2d392
  %v3_2d3b3 = phi i32 [ %v2_2d3b3, %bb ], [ 0, %dec_label_pc_2d392 ]
  ret i32 %v3_2d3b3
}

define i32 @function_2d3ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d3ba:
  %v0_2d3bb = load i32, i32* @eax, align 8
  ret i32 %v0_2d3bb
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d3bc:
  ret i32 %arg2
}

define i32 @function_2d3fa() local_unnamed_addr {
dec_label_pc_2d3fa:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2d3fa = load i32, i32* %ecx.global-to-local, align 8
  %v1_2d3fa = add i32 %v0_2d3fa, -1
  store i32 %v1_2d3fa, i32* %ecx.global-to-local, align 8
  %v0_2d3fc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d3fc
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_9destroyerEPvNS_7variantISsSM_SS_bxdNS1_5void_ES19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_E18has_fallback_type_EEENT1_11result_typeEiiRS1C_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2d3fd:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_2d44d, label %bb

bb:                                               ; preds = %dec_label_pc_2d3fd
  %sext = mul i32 %arg6, 16777216
  %v12_2d447 = sdiv i32 %sext, 16777216
  %v13_2d447 = sext i8 %arg5 to i32
  %v14_2d447 = call i32 @function_2d886(i32 %arg8, i32 %arg7, i32 %v12_2d447, i32 %v13_2d447, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2d44d

dec_label_pc_2d44d:                               ; preds = %dec_label_pc_2d3fd, %bb
  %v2_2d450 = mul i32 %arg2, 4
  %v1_2d453 = add i32 %v2_2d450, ptrtoint (i32* @global_var_2d8d8.2882 to i32)
  %v1_2d458 = inttoptr i32 %v1_2d453 to i32*
  %v2_2d458 = load i32, i32* %v1_2d458, align 4
  ret i32 %v2_2d458

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2d44d, { 1, 0 }
}

define i32 @function_2d45e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d45e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d45e = load i32, i32* @eax, align 8
  %v11_2d45e = and i32 %v0_2d45e, -236
  store i32 %v11_2d45e, i32* %eax.global-to-local, align 8
  %v1_2d460 = inttoptr i32 %v11_2d45e to i32*
  %v2_2d460 = load i32, i32* %v1_2d460, align 4
  %v4_2d460 = add i32 %v2_2d460, %v11_2d45e
  store i32 %v4_2d460, i32* %v1_2d460, align 4
  %v0_2d462 = load i32, i32* %eax.global-to-local, align 8
  %v1_2d462 = inttoptr i32 %v0_2d462 to i8*
  %v2_2d462 = load i8, i8* %v1_2d462, align 1
  %v4_2d462 = trunc i32 %v0_2d462 to i8
  %v5_2d462 = add i8 %v2_2d462, %v4_2d462
  store i8 %v5_2d462, i8* %v1_2d462, align 1
  %v0_2d464 = load i32, i32* @ebp, align 4
  %v1_2d464 = add i32 %v0_2d464, -83
  %v2_2d464 = inttoptr i32 %v1_2d464 to i8*
  %v3_2d464 = load i8, i8* %v2_2d464, align 1
  %v4_2d464 = zext i8 %v3_2d464 to i32
  store i32 %v4_2d464, i32* %eax.global-to-local, align 8
  %v1_2d474 = add i32 %v0_2d464, -56
  %v2_2d474 = inttoptr i32 %v1_2d474 to i32*
  %v3_2d474 = load i32, i32* %v2_2d474, align 4
  store i32 %v3_2d474, i32* %eax.global-to-local, align 8
  %v1_2d47b = add i32 %v0_2d464, -52
  %v2_2d47b = inttoptr i32 %v1_2d47b to i32*
  %v3_2d47b = load i32, i32* %v2_2d47b, align 4
  store i32 %v3_2d47b, i32* %eax.global-to-local, align 8
  %v1_2d482 = add i32 %v0_2d464, -44
  %v2_2d482 = inttoptr i32 %v1_2d482 to i32*
  %v3_2d482 = load i32, i32* %v2_2d482, align 4
  store i32 %v3_2d482, i32* %eax.global-to-local, align 8
  %v5_2d488 = sext i8 %v3_2d464 to i32
  %v6_2d488 = call i32 @unknown_5cc95(i32 %v3_2d482, i32 %v3_2d47b, i32 %v3_2d474, i32 0, i32 %v5_2d488)
  store i32 %v6_2d488, i32* %eax.global-to-local, align 8
  %v0_2d48d = call i32 @function_2d8be()
  store i32 %v0_2d48d, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d48d

; uselistorder directives
  uselistorder i32 %v0_2d464, { 0, 2, 1, 3 }
  uselistorder i32 %v11_2d45e, { 0, 2, 1 }
}

define i32 @function_2d492() local_unnamed_addr {
dec_label_pc_2d492:
  %v0_2d49a = load i32, i32* @ebp, align 4
  %v1_2d49a = add i32 %v0_2d49a, -82
  %v2_2d49a = inttoptr i32 %v1_2d49a to i8*
  %v3_2d49a = load i8, i8* %v2_2d49a, align 1
  %v1_2d4aa = add i32 %v0_2d49a, -56
  %v2_2d4aa = inttoptr i32 %v1_2d4aa to i32*
  %v3_2d4aa = load i32, i32* %v2_2d4aa, align 4
  %v1_2d4b1 = add i32 %v0_2d49a, -52
  %v2_2d4b1 = inttoptr i32 %v1_2d4b1 to i32*
  %v3_2d4b1 = load i32, i32* %v2_2d4b1, align 4
  %v1_2d4b8 = add i32 %v0_2d49a, -44
  %v2_2d4b8 = inttoptr i32 %v1_2d4b8 to i32*
  %v3_2d4b8 = load i32, i32* %v2_2d4b8, align 4
  %v6_2d4be = sext i8 %v3_2d49a to i32
  %v7_2d4be = call i32 @unknown_5cd02(i32 %v3_2d4b8, i32 %v3_2d4b1, i32 %v3_2d4aa, i32 0, i32 %v6_2d4be, i32 1)
  %v0_2d4c3 = call i32 @function_2d8be()
  ret i32 %v0_2d4c3

; uselistorder directives
  uselistorder i32 %v0_2d49a, { 0, 2, 1, 3 }
}

define i32 @function_2d4c8() local_unnamed_addr {
dec_label_pc_2d4c8:
  %v0_2d4d0 = load i32, i32* @ebp, align 4
  %v1_2d4d0 = add i32 %v0_2d4d0, -81
  %v2_2d4d0 = inttoptr i32 %v1_2d4d0 to i8*
  %v3_2d4d0 = load i8, i8* %v2_2d4d0, align 1
  %v1_2d4e0 = add i32 %v0_2d4d0, -56
  %v2_2d4e0 = inttoptr i32 %v1_2d4e0 to i32*
  %v3_2d4e0 = load i32, i32* %v2_2d4e0, align 4
  %v1_2d4e7 = add i32 %v0_2d4d0, -52
  %v2_2d4e7 = inttoptr i32 %v1_2d4e7 to i32*
  %v3_2d4e7 = load i32, i32* %v2_2d4e7, align 4
  %v1_2d4ee = add i32 %v0_2d4d0, -44
  %v2_2d4ee = inttoptr i32 %v1_2d4ee to i32*
  %v3_2d4ee = load i32, i32* %v2_2d4ee, align 4
  %v6_2d4f4 = sext i8 %v3_2d4d0 to i32
  %v7_2d4f4 = call i32 @unknown_5cd6f(i32 %v3_2d4ee, i32 %v3_2d4e7, i32 %v3_2d4e0, i32 0, i32 %v6_2d4f4, i32 1)
  %v0_2d4f9 = call i32 @function_2d8be()
  ret i32 %v0_2d4f9

; uselistorder directives
  uselistorder i32 %v0_2d4d0, { 0, 2, 1, 3 }
}

define i32 @function_2d4fe() local_unnamed_addr {
dec_label_pc_2d4fe:
  %v0_2d506 = load i32, i32* @ebp, align 4
  %v1_2d506 = add i32 %v0_2d506, -80
  %v2_2d506 = inttoptr i32 %v1_2d506 to i8*
  %v3_2d506 = load i8, i8* %v2_2d506, align 1
  %v1_2d516 = add i32 %v0_2d506, -56
  %v2_2d516 = inttoptr i32 %v1_2d516 to i32*
  %v3_2d516 = load i32, i32* %v2_2d516, align 4
  %v1_2d51d = add i32 %v0_2d506, -52
  %v2_2d51d = inttoptr i32 %v1_2d51d to i32*
  %v3_2d51d = load i32, i32* %v2_2d51d, align 4
  %v1_2d524 = add i32 %v0_2d506, -44
  %v2_2d524 = inttoptr i32 %v1_2d524 to i32*
  %v3_2d524 = load i32, i32* %v2_2d524, align 4
  %v6_2d52a = sext i8 %v3_2d506 to i32
  %v7_2d52a = call i32 @unknown_5cddc(i32 %v3_2d524, i32 %v3_2d51d, i32 %v3_2d516, i32 0, i32 %v6_2d52a, i32 1)
  %v0_2d52f = call i32 @function_2d8be()
  ret i32 %v0_2d52f

; uselistorder directives
  uselistorder i32 %v0_2d506, { 0, 2, 1, 3 }
}

define i32 @function_2d534() local_unnamed_addr {
dec_label_pc_2d534:
  %v0_2d53c = load i32, i32* @ebp, align 4
  %v1_2d53c = add i32 %v0_2d53c, -79
  %v2_2d53c = inttoptr i32 %v1_2d53c to i8*
  %v3_2d53c = load i8, i8* %v2_2d53c, align 1
  %v1_2d54c = add i32 %v0_2d53c, -56
  %v2_2d54c = inttoptr i32 %v1_2d54c to i32*
  %v3_2d54c = load i32, i32* %v2_2d54c, align 4
  %v1_2d553 = add i32 %v0_2d53c, -52
  %v2_2d553 = inttoptr i32 %v1_2d553 to i32*
  %v3_2d553 = load i32, i32* %v2_2d553, align 4
  %v1_2d55a = add i32 %v0_2d53c, -44
  %v2_2d55a = inttoptr i32 %v1_2d55a to i32*
  %v3_2d55a = load i32, i32* %v2_2d55a, align 4
  %v6_2d560 = sext i8 %v3_2d53c to i32
  %v7_2d560 = call i32 @unknown_5ce49(i32 %v3_2d55a, i32 %v3_2d553, i32 %v3_2d54c, i32 0, i32 %v6_2d560, i32 1)
  %v0_2d565 = call i32 @function_2d8be()
  ret i32 %v0_2d565

; uselistorder directives
  uselistorder i32 %v0_2d53c, { 0, 2, 1, 3 }
}

define i32 @function_2d56a() local_unnamed_addr {
dec_label_pc_2d56a:
  %v0_2d572 = load i32, i32* @ebp, align 4
  %v1_2d572 = add i32 %v0_2d572, -78
  %v2_2d572 = inttoptr i32 %v1_2d572 to i8*
  %v3_2d572 = load i8, i8* %v2_2d572, align 1
  %v1_2d582 = add i32 %v0_2d572, -56
  %v2_2d582 = inttoptr i32 %v1_2d582 to i32*
  %v3_2d582 = load i32, i32* %v2_2d582, align 4
  %v1_2d589 = add i32 %v0_2d572, -52
  %v2_2d589 = inttoptr i32 %v1_2d589 to i32*
  %v3_2d589 = load i32, i32* %v2_2d589, align 4
  %v1_2d590 = add i32 %v0_2d572, -44
  %v2_2d590 = inttoptr i32 %v1_2d590 to i32*
  %v3_2d590 = load i32, i32* %v2_2d590, align 4
  %v6_2d596 = sext i8 %v3_2d572 to i32
  %v7_2d596 = call i32 @unknown_5ceb6(i32 %v3_2d590, i32 %v3_2d589, i32 %v3_2d582, i32 0, i32 %v6_2d596, i32 1)
  %v0_2d59b = call i32 @function_2d8be()
  ret i32 %v0_2d59b

; uselistorder directives
  uselistorder i32 %v0_2d572, { 0, 2, 1, 3 }
}

define i32 @function_2d5a0() local_unnamed_addr {
dec_label_pc_2d5a0:
  %v0_2d5a8 = load i32, i32* @ebp, align 4
  %v1_2d5c6 = add i32 %v0_2d5a8, -44
  %v2_2d5c6 = inttoptr i32 %v1_2d5c6 to i32*
  %v3_2d5c6 = load i32, i32* %v2_2d5c6, align 4
  %v1_2d5cc = call i32 @unknown_5cf23(i32 %v3_2d5c6)
  %v0_2d5d1 = call i32 @function_2d8be()
  ret i32 %v0_2d5d1
}

define i32 @function_2d5f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d5f2:
  %v16_2d5f2 = load i32, i32* @eax, align 8
  ret i32 %v16_2d5f2
}

define i32 @function_2d5f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d5f4:
  %v0_2d5f4 = load i32, i32* @ebx, align 4
  %v1_2d5f4 = add i32 %v0_2d5f4, 1149881413
  %v2_2d5f4 = inttoptr i32 %v1_2d5f4 to i8*
  %v3_2d5f4 = load i8, i8* %v2_2d5f4, align 1
  %v4_2d5f4 = load i32, i32* @ecx, align 8
  %v5_2d5f4 = trunc i32 %v4_2d5f4 to i8
  %v6_2d5f4 = or i8 %v5_2d5f4, %v3_2d5f4
  store i8 %v6_2d5f4, i8* %v2_2d5f4, align 1
  %v0_2d5fc = load i32, i32* @ebp, align 4
  %v1_2d5fc = add i32 %v0_2d5fc, -44
  %v2_2d5fc = inttoptr i32 %v1_2d5fc to i32*
  %v3_2d5fc = load i32, i32* %v2_2d5fc, align 4
  %v1_2d602 = call i32 @unknown_5cf23(i32 %v3_2d5fc)
  %v0_2d607 = call i32 @function_2d8be()
  ret i32 %v0_2d607
}

define i32 @function_2d60c() local_unnamed_addr {
dec_label_pc_2d60c:
  %v0_2d614 = load i32, i32* @ebp, align 4
  %v1_2d632 = add i32 %v0_2d614, -44
  %v2_2d632 = inttoptr i32 %v1_2d632 to i32*
  %v3_2d632 = load i32, i32* %v2_2d632, align 4
  %v1_2d638 = call i32 @unknown_5cf23(i32 %v3_2d632)
  %v0_2d63d = call i32 @function_2d8be()
  ret i32 %v0_2d63d
}

define i32 @function_2d642() local_unnamed_addr {
dec_label_pc_2d642:
  %v0_2d64a = load i32, i32* @ebp, align 4
  %v1_2d668 = add i32 %v0_2d64a, -44
  %v2_2d668 = inttoptr i32 %v1_2d668 to i32*
  %v3_2d668 = load i32, i32* %v2_2d668, align 4
  %v1_2d66e = call i32 @unknown_5cf23(i32 %v3_2d668)
  %v0_2d673 = call i32 @function_2d8be()
  ret i32 %v0_2d673
}

define i32 @function_2d678() local_unnamed_addr {
dec_label_pc_2d678:
  %v0_2d680 = load i32, i32* @ebp, align 4
  %v1_2d69e = add i32 %v0_2d680, -44
  %v2_2d69e = inttoptr i32 %v1_2d69e to i32*
  %v3_2d69e = load i32, i32* %v2_2d69e, align 4
  %v1_2d6a4 = call i32 @unknown_5cf23(i32 %v3_2d69e)
  %v0_2d6a9 = call i32 @function_2d8be()
  ret i32 %v0_2d6a9
}

define i32 @function_2d6ae() local_unnamed_addr {
dec_label_pc_2d6ae:
  %v0_2d6b6 = load i32, i32* @ebp, align 4
  %v1_2d6d4 = add i32 %v0_2d6b6, -44
  %v2_2d6d4 = inttoptr i32 %v1_2d6d4 to i32*
  %v3_2d6d4 = load i32, i32* %v2_2d6d4, align 4
  %v1_2d6da = call i32 @unknown_5cf23(i32 %v3_2d6d4)
  %v0_2d6df = call i32 @function_2d8be()
  ret i32 %v0_2d6df
}

define i32 @function_2d6e4() local_unnamed_addr {
dec_label_pc_2d6e4:
  %v0_2d6ec = load i32, i32* @ebp, align 4
  %v1_2d70a = add i32 %v0_2d6ec, -44
  %v2_2d70a = inttoptr i32 %v1_2d70a to i32*
  %v3_2d70a = load i32, i32* %v2_2d70a, align 4
  %v1_2d710 = call i32 @unknown_5cf23(i32 %v3_2d70a)
  %v0_2d715 = call i32 @function_2d8be()
  ret i32 %v0_2d715
}

define i32 @function_2d71a() local_unnamed_addr {
dec_label_pc_2d71a:
  %v0_2d722 = load i32, i32* @ebp, align 4
  %v1_2d740 = add i32 %v0_2d722, -44
  %v2_2d740 = inttoptr i32 %v1_2d740 to i32*
  %v3_2d740 = load i32, i32* %v2_2d740, align 4
  %v1_2d746 = call i32 @unknown_5cf23(i32 %v3_2d740)
  %v0_2d74b = call i32 @function_2d8be()
  ret i32 %v0_2d74b
}

define i32 @function_2d750() local_unnamed_addr {
dec_label_pc_2d750:
  %v0_2d758 = load i32, i32* @ebp, align 4
  %v1_2d776 = add i32 %v0_2d758, -44
  %v2_2d776 = inttoptr i32 %v1_2d776 to i32*
  %v3_2d776 = load i32, i32* %v2_2d776, align 4
  %v1_2d77c = call i32 @unknown_5cf23(i32 %v3_2d776)
  %v0_2d781 = call i32 @function_2d8be()
  ret i32 %v0_2d781
}

define i32 @function_2d786() local_unnamed_addr {
dec_label_pc_2d786:
  %v0_2d78e = load i32, i32* @ebp, align 4
  %v1_2d7ac = add i32 %v0_2d78e, -44
  %v2_2d7ac = inttoptr i32 %v1_2d7ac to i32*
  %v3_2d7ac = load i32, i32* %v2_2d7ac, align 4
  %v1_2d7b2 = call i32 @unknown_5cf23(i32 %v3_2d7ac)
  %v0_2d7b7 = call i32 @function_2d8be()
  ret i32 %v0_2d7b7
}

define i32 @function_2d7bc() local_unnamed_addr {
dec_label_pc_2d7bc:
  %v0_2d7c4 = load i32, i32* @ebp, align 4
  %v1_2d7e2 = add i32 %v0_2d7c4, -44
  %v2_2d7e2 = inttoptr i32 %v1_2d7e2 to i32*
  %v3_2d7e2 = load i32, i32* %v2_2d7e2, align 4
  %v1_2d7e8 = call i32 @unknown_5cf23(i32 %v3_2d7e2)
  %v0_2d7ed = call i32 @function_2d8be()
  ret i32 %v0_2d7ed
}

define i32 @function_2d7f2() local_unnamed_addr {
dec_label_pc_2d7f2:
  %v0_2d808 = load i32, i32* @ebp, align 4
  %v1_2d816 = add i32 %v0_2d808, -44
  %v2_2d816 = inttoptr i32 %v1_2d816 to i32*
  %v3_2d816 = load i32, i32* %v2_2d816, align 4
  %v1_2d81c = call i32 @unknown_5cf23(i32 %v3_2d816)
  %v0_2d821 = call i32 @function_2d8be()
  ret i32 %v0_2d821
}

define i32 @function_2d845(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d845:
  %v0_2d84a = load i32, i32* @ebp, align 4
  %v1_2d84a = add i32 %v0_2d84a, -44
  %v2_2d84a = inttoptr i32 %v1_2d84a to i32*
  %v3_2d84a = load i32, i32* %v2_2d84a, align 4
  %v1_2d850 = call i32 @unknown_5cf23(i32 %v3_2d84a)
  %v0_2d855 = call i32 @function_2d8be()
  ret i32 %v0_2d855
}

define i32 @function_2d857() local_unnamed_addr {
dec_label_pc_2d857:
  %v0_2d86b = load i32, i32* @ebp, align 4
  %v1_2d879 = add i32 %v0_2d86b, -44
  %v2_2d879 = inttoptr i32 %v1_2d879 to i32*
  %v3_2d879 = load i32, i32* %v2_2d879, align 4
  %v1_2d87f = call i32 @unknown_5cf23(i32 %v3_2d879)
  %v0_2d884 = call i32 @function_2d8be()
  ret i32 %v0_2d884

; uselistorder directives
  uselistorder i32 ()* @function_2d8be, { 19, 2, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @unknown_5cf23, { 13, 1, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2 }
}

define i32 @function_2d886(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2d886:
  %v0_2d896 = load i32, i32* @ecx, align 8
  %v0_2d89a = load i32, i32* @edx, align 4
  %v0_2d89e = load i32, i32* @ebp, align 4
  %v1_2d89e = add i32 %v0_2d89e, -56
  %v2_2d89e = inttoptr i32 %v1_2d89e to i32*
  %v3_2d89e = load i32, i32* %v2_2d89e, align 4
  %v1_2d8a5 = add i32 %v0_2d89e, -52
  %v2_2d8a5 = inttoptr i32 %v1_2d8a5 to i32*
  %v3_2d8a5 = load i32, i32* %v2_2d8a5, align 4
  %v1_2d8ac = add i32 %v0_2d89e, -48
  %v2_2d8ac = inttoptr i32 %v1_2d8ac to i32*
  %v3_2d8ac = load i32, i32* %v2_2d8ac, align 4
  %v1_2d8b3 = add i32 %v0_2d89e, -44
  %v2_2d8b3 = inttoptr i32 %v1_2d8b3 to i32*
  %v3_2d8b3 = load i32, i32* %v2_2d8b3, align 4
  %sext = mul i32 %v0_2d89a, 16777216
  %v8_2d8b9 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2d896, 16777216
  %v9_2d8b9 = sdiv i32 %sext1, 16777216
  %v10_2d8b9 = call i32 @unknown_5cf7d(i32 %v3_2d8b3, i32 %v3_2d8ac, i32 %v3_2d8a5, i32 %v3_2d89e, i32 %v8_2d8b9, i32 %v9_2d8b9, i32 0, i32 0)
  ret i32 %v10_2d8b9

; uselistorder directives
  uselistorder i32 %v0_2d89e, { 1, 0, 2, 3 }
}

define i32 @function_2d897(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d897:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d8be() local_unnamed_addr {
dec_label_pc_2d8be:
  %v0_2d8be = load i32, i32* @ebp, align 4
  %v1_2d8be = add i32 %v0_2d8be, -28
  %v2_2d8be = inttoptr i32 %v1_2d8be to i32*
  %v3_2d8be = load i32, i32* %v2_2d8be, align 4
  %v1_2d8c1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2d8c1 = xor i32 %v1_2d8c1, %v3_2d8be
  %v3_2d8c1 = icmp eq i32 %v2_2d8c1, 0
  store i32 %v2_2d8c1, i32* @eax, align 8
  br i1 %v3_2d8c1, label %bb, label %dec_label_pc_2d8ca

bb:                                               ; preds = %dec_label_pc_2d8be
  %v1_2d8c8 = call i32 @function_2d8cf()
  br label %dec_label_pc_2d8ca

dec_label_pc_2d8ca:                               ; preds = %bb, %dec_label_pc_2d8be
  %v2_2d8c8 = phi i32 [ %v1_2d8c8, %bb ], [ %v2_2d8c1, %dec_label_pc_2d8be ]
  ret i32 %v2_2d8c8
}

define i32 @function_2d8cf() local_unnamed_addr {
dec_label_pc_2d8cf:
  %v0_2d8d6 = load i32, i32* @eax, align 8
  ret i32 %v0_2d8d6
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_9copy_intoEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_S1A_E18has_fallback_type_EEENT1_11result_typeEiiRS1D_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2d928:
  store i32 0, i32* @eax, align 8
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_2d978, label %bb

bb:                                               ; preds = %dec_label_pc_2d928
  %sext = mul i32 %arg6, 16777216
  %v12_2d972 = sdiv i32 %sext, 16777216
  %v13_2d972 = sext i8 %arg5 to i32
  %v14_2d972 = call i32 @function_2ddb1(i32 %arg8, i32 %arg7, i32 %v12_2d972, i32 %v13_2d972, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2d978

dec_label_pc_2d978:                               ; preds = %dec_label_pc_2d928, %bb
  %v2_2d97b = mul i32 %arg2, 4
  %v1_2d97e = add i32 %v2_2d97b, ptrtoint (i32* @global_var_2de04.2883 to i32)
  %v1_2d983 = inttoptr i32 %v1_2d97e to i32*
  %v2_2d983 = load i32, i32* %v1_2d983, align 4
  ret i32 %v2_2d983

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2d978, { 1, 0 }
}

define i32 @function_2d987() local_unnamed_addr {
dec_label_pc_2d987:
  %v0_2d98f = load i32, i32* @ebp, align 4
  %v1_2d98f = add i32 %v0_2d98f, -83
  %v2_2d98f = inttoptr i32 %v1_2d98f to i8*
  %v3_2d98f = load i8, i8* %v2_2d98f, align 1
  %v1_2d99f = add i32 %v0_2d98f, -56
  %v2_2d99f = inttoptr i32 %v1_2d99f to i32*
  %v3_2d99f = load i32, i32* %v2_2d99f, align 4
  %v1_2d9a6 = add i32 %v0_2d98f, -52
  %v2_2d9a6 = inttoptr i32 %v1_2d9a6 to i32*
  %v3_2d9a6 = load i32, i32* %v2_2d9a6, align 4
  %v1_2d9ad = add i32 %v0_2d98f, -44
  %v2_2d9ad = inttoptr i32 %v1_2d9ad to i32*
  %v3_2d9ad = load i32, i32* %v2_2d9ad, align 4
  %v6_2d9b3 = sext i8 %v3_2d98f to i32
  %v7_2d9b3 = call i32 @unknown_5d50f(i32 %v3_2d9ad, i32 %v3_2d9a6, i32 %v3_2d99f, i32 0, i32 %v6_2d9b3, i32 1)
  %v0_2d9b8 = call i32 @function_2dde9()
  ret i32 %v0_2d9b8

; uselistorder directives
  uselistorder i32 %v0_2d98f, { 0, 2, 1, 3 }
}

define i32 @function_2d9bd() local_unnamed_addr {
dec_label_pc_2d9bd:
  %v0_2d9c5 = load i32, i32* @ebp, align 4
  %v1_2d9c5 = add i32 %v0_2d9c5, -82
  %v2_2d9c5 = inttoptr i32 %v1_2d9c5 to i8*
  %v3_2d9c5 = load i8, i8* %v2_2d9c5, align 1
  %v1_2d9d5 = add i32 %v0_2d9c5, -56
  %v2_2d9d5 = inttoptr i32 %v1_2d9d5 to i32*
  %v3_2d9d5 = load i32, i32* %v2_2d9d5, align 4
  %v1_2d9dc = add i32 %v0_2d9c5, -52
  %v2_2d9dc = inttoptr i32 %v1_2d9dc to i32*
  %v3_2d9dc = load i32, i32* %v2_2d9dc, align 4
  %v1_2d9e3 = add i32 %v0_2d9c5, -44
  %v2_2d9e3 = inttoptr i32 %v1_2d9e3 to i32*
  %v3_2d9e3 = load i32, i32* %v2_2d9e3, align 4
  %v6_2d9e9 = sext i8 %v3_2d9c5 to i32
  %v7_2d9e9 = call i32 @unknown_5d57c(i32 %v3_2d9e3, i32 %v3_2d9dc, i32 %v3_2d9d5, i32 0, i32 %v6_2d9e9, i32 1)
  %v0_2d9ee = call i32 @function_2dde9()
  ret i32 %v0_2d9ee

; uselistorder directives
  uselistorder i32 %v0_2d9c5, { 0, 2, 1, 3 }
}

define i32 @function_2d9f3() local_unnamed_addr {
dec_label_pc_2d9f3:
  %v0_2d9fb = load i32, i32* @ebp, align 4
  %v1_2d9fb = add i32 %v0_2d9fb, -81
  %v2_2d9fb = inttoptr i32 %v1_2d9fb to i8*
  %v3_2d9fb = load i8, i8* %v2_2d9fb, align 1
  %v1_2da0b = add i32 %v0_2d9fb, -56
  %v2_2da0b = inttoptr i32 %v1_2da0b to i32*
  %v3_2da0b = load i32, i32* %v2_2da0b, align 4
  %v1_2da12 = add i32 %v0_2d9fb, -52
  %v2_2da12 = inttoptr i32 %v1_2da12 to i32*
  %v3_2da12 = load i32, i32* %v2_2da12, align 4
  %v1_2da19 = add i32 %v0_2d9fb, -44
  %v2_2da19 = inttoptr i32 %v1_2da19 to i32*
  %v3_2da19 = load i32, i32* %v2_2da19, align 4
  %v6_2da1f = sext i8 %v3_2d9fb to i32
  %v7_2da1f = call i32 @unknown_5d5e9(i32 %v3_2da19, i32 %v3_2da12, i32 %v3_2da0b, i32 0, i32 %v6_2da1f, i32 1)
  %v0_2da24 = call i32 @function_2dde9()
  ret i32 %v0_2da24

; uselistorder directives
  uselistorder i32 %v0_2d9fb, { 0, 2, 1, 3 }
}

define i32 @function_2da29() local_unnamed_addr {
dec_label_pc_2da29:
  %v0_2da31 = load i32, i32* @ebp, align 4
  %v1_2da31 = add i32 %v0_2da31, -80
  %v2_2da31 = inttoptr i32 %v1_2da31 to i8*
  %v3_2da31 = load i8, i8* %v2_2da31, align 1
  %v1_2da41 = add i32 %v0_2da31, -56
  %v2_2da41 = inttoptr i32 %v1_2da41 to i32*
  %v3_2da41 = load i32, i32* %v2_2da41, align 4
  %v1_2da48 = add i32 %v0_2da31, -52
  %v2_2da48 = inttoptr i32 %v1_2da48 to i32*
  %v3_2da48 = load i32, i32* %v2_2da48, align 4
  %v1_2da4f = add i32 %v0_2da31, -44
  %v2_2da4f = inttoptr i32 %v1_2da4f to i32*
  %v3_2da4f = load i32, i32* %v2_2da4f, align 4
  %v6_2da55 = sext i8 %v3_2da31 to i32
  %v7_2da55 = call i32 @unknown_5d656(i32 %v3_2da4f, i32 %v3_2da48, i32 %v3_2da41, i32 0, i32 %v6_2da55, i32 1)
  %v0_2da5a = call i32 @function_2dde9()
  ret i32 %v0_2da5a

; uselistorder directives
  uselistorder i32 %v0_2da31, { 0, 2, 1, 3 }
}

define i32 @function_2da5f() local_unnamed_addr {
dec_label_pc_2da5f:
  %v0_2da67 = load i32, i32* @ebp, align 4
  %v1_2da67 = add i32 %v0_2da67, -79
  %v2_2da67 = inttoptr i32 %v1_2da67 to i8*
  %v3_2da67 = load i8, i8* %v2_2da67, align 1
  %v1_2da77 = add i32 %v0_2da67, -56
  %v2_2da77 = inttoptr i32 %v1_2da77 to i32*
  %v3_2da77 = load i32, i32* %v2_2da77, align 4
  %v1_2da7e = add i32 %v0_2da67, -52
  %v2_2da7e = inttoptr i32 %v1_2da7e to i32*
  %v3_2da7e = load i32, i32* %v2_2da7e, align 4
  %v1_2da85 = add i32 %v0_2da67, -44
  %v2_2da85 = inttoptr i32 %v1_2da85 to i32*
  %v3_2da85 = load i32, i32* %v2_2da85, align 4
  %v6_2da8b = sext i8 %v3_2da67 to i32
  %v7_2da8b = call i32 @unknown_5d6c3(i32 %v3_2da85, i32 %v3_2da7e, i32 %v3_2da77, i32 0, i32 %v6_2da8b, i32 1)
  %v0_2da90 = call i32 @function_2dde9()
  ret i32 %v0_2da90

; uselistorder directives
  uselistorder i32 %v0_2da67, { 0, 2, 1, 3 }
}

define i32 @function_2da95() local_unnamed_addr {
dec_label_pc_2da95:
  %v0_2da9d = load i32, i32* @ebp, align 4
  %v1_2da9d = add i32 %v0_2da9d, -78
  %v2_2da9d = inttoptr i32 %v1_2da9d to i8*
  %v3_2da9d = load i8, i8* %v2_2da9d, align 1
  %v1_2daad = add i32 %v0_2da9d, -56
  %v2_2daad = inttoptr i32 %v1_2daad to i32*
  %v3_2daad = load i32, i32* %v2_2daad, align 4
  %v1_2dab4 = add i32 %v0_2da9d, -52
  %v2_2dab4 = inttoptr i32 %v1_2dab4 to i32*
  %v3_2dab4 = load i32, i32* %v2_2dab4, align 4
  %v1_2dabb = add i32 %v0_2da9d, -44
  %v2_2dabb = inttoptr i32 %v1_2dabb to i32*
  %v3_2dabb = load i32, i32* %v2_2dabb, align 4
  %v6_2dac1 = sext i8 %v3_2da9d to i32
  %v7_2dac1 = call i32 @unknown_5d730(i32 %v3_2dabb, i32 %v3_2dab4, i32 %v3_2daad, i32 0, i32 %v6_2dac1, i32 1)
  %v0_2dac6 = call i32 @function_2dde9()
  ret i32 %v0_2dac6

; uselistorder directives
  uselistorder i32 %v0_2da9d, { 0, 2, 1, 3 }
}

define i32 @function_2dafe(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dafe:
  %eax.global-to-local = alloca i32, align 4
  %v0_2dafe = load i32, i32* @eax, align 8
  %v5_2dafe = mul i32 %v0_2dafe, 2
  %v2_2db03 = and i32 %v5_2dafe, 20
  %v10_2db03 = and i32 %v0_2dafe, -256
  %v11_2db03 = or i32 %v2_2db03, %v10_2db03
  store i32 %v11_2db03, i32* %eax.global-to-local, align 8
  %v1_2db05 = inttoptr i32 %v11_2db03 to i32*
  %v2_2db05 = load i32, i32* %v1_2db05, align 4
  %v4_2db05 = add i32 %v2_2db05, %v11_2db03
  store i32 %v4_2db05, i32* %v1_2db05, align 4
  %v0_2db07 = load i32, i32* %eax.global-to-local, align 8
  %v1_2db07 = inttoptr i32 %v0_2db07 to i8*
  %v2_2db07 = load i8, i8* %v1_2db07, align 1
  %v4_2db07 = trunc i32 %v0_2db07 to i8
  %v5_2db07 = add i8 %v2_2db07, %v4_2db07
  store i8 %v5_2db07, i8* %v1_2db07, align 1
  %v0_2db09 = load i32, i32* @ebp, align 4
  %v1_2db09 = add i32 %v0_2db09, -76
  %v2_2db09 = inttoptr i32 %v1_2db09 to i8*
  %v3_2db09 = load i8, i8* %v2_2db09, align 1
  %v4_2db09 = zext i8 %v3_2db09 to i32
  store i32 %v4_2db09, i32* %eax.global-to-local, align 8
  %v1_2db19 = add i32 %v0_2db09, -56
  %v2_2db19 = inttoptr i32 %v1_2db19 to i32*
  %v3_2db19 = load i32, i32* %v2_2db19, align 4
  store i32 %v3_2db19, i32* %eax.global-to-local, align 8
  %v1_2db20 = add i32 %v0_2db09, -52
  %v2_2db20 = inttoptr i32 %v1_2db20 to i32*
  %v3_2db20 = load i32, i32* %v2_2db20, align 4
  store i32 %v3_2db20, i32* %eax.global-to-local, align 8
  %v1_2db27 = add i32 %v0_2db09, -44
  %v2_2db27 = inttoptr i32 %v1_2db27 to i32*
  %v3_2db27 = load i32, i32* %v2_2db27, align 4
  store i32 %v3_2db27, i32* %eax.global-to-local, align 8
  %v2_2db2d = call i32 @unknown_5d79d(i32 %v3_2db27, i32 %v3_2db20)
  store i32 %v2_2db2d, i32* %eax.global-to-local, align 8
  %v0_2db32 = call i32 @function_2dde9()
  store i32 %v0_2db32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2db32

; uselistorder directives
  uselistorder i32 %v0_2db09, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2dafe, { 1, 0 }
}

define i32 @function_2db42(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2db42:
  %v0_2db4f = load i32, i32* @ebp, align 4
  %v1_2db56 = add i32 %v0_2db4f, -52
  %v2_2db56 = inttoptr i32 %v1_2db56 to i32*
  %v3_2db56 = load i32, i32* %v2_2db56, align 4
  %v1_2db5d = add i32 %v0_2db4f, -44
  %v2_2db5d = inttoptr i32 %v1_2db5d to i32*
  %v3_2db5d = load i32, i32* %v2_2db5d, align 4
  %v2_2db63 = call i32 @unknown_5d79d(i32 %v3_2db5d, i32 %v3_2db56)
  ret i32 %v2_2db63
}

define i32 @function_2db6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2db6c:
  %eax.global-to-local = alloca i32, align 4
  %v3_2db6c = load i32, i32* @eax, align 8
  %v11_2db6f = and i32 %v3_2db6c, -236
  store i32 %v11_2db6f, i32* %eax.global-to-local, align 8
  %v1_2db71 = inttoptr i32 %v11_2db6f to i32*
  %v2_2db71 = load i32, i32* %v1_2db71, align 4
  %v4_2db71 = add i32 %v2_2db71, %v11_2db6f
  store i32 %v4_2db71, i32* %v1_2db71, align 4
  %v0_2db73 = load i32, i32* %eax.global-to-local, align 8
  %v1_2db73 = inttoptr i32 %v0_2db73 to i8*
  %v2_2db73 = load i8, i8* %v1_2db73, align 1
  %v4_2db73 = trunc i32 %v0_2db73 to i8
  %v5_2db73 = add i8 %v2_2db73, %v4_2db73
  store i8 %v5_2db73, i8* %v1_2db73, align 1
  %v0_2db75 = load i32, i32* @ebp, align 4
  %v1_2db75 = add i32 %v0_2db75, -74
  %v2_2db75 = inttoptr i32 %v1_2db75 to i8*
  %v3_2db75 = load i8, i8* %v2_2db75, align 1
  %v4_2db75 = zext i8 %v3_2db75 to i32
  store i32 %v4_2db75, i32* %eax.global-to-local, align 8
  %v1_2db85 = add i32 %v0_2db75, -56
  %v2_2db85 = inttoptr i32 %v1_2db85 to i32*
  %v3_2db85 = load i32, i32* %v2_2db85, align 4
  store i32 %v3_2db85, i32* %eax.global-to-local, align 8
  %v1_2db8c = add i32 %v0_2db75, -52
  %v2_2db8c = inttoptr i32 %v1_2db8c to i32*
  %v3_2db8c = load i32, i32* %v2_2db8c, align 4
  store i32 %v3_2db8c, i32* %eax.global-to-local, align 8
  %v1_2db93 = add i32 %v0_2db75, -44
  %v2_2db93 = inttoptr i32 %v1_2db93 to i32*
  %v3_2db93 = load i32, i32* %v2_2db93, align 4
  store i32 %v3_2db93, i32* %eax.global-to-local, align 8
  %v2_2db99 = call i32 @unknown_5d79d(i32 %v3_2db93, i32 %v3_2db8c)
  store i32 %v2_2db99, i32* %eax.global-to-local, align 8
  %v0_2db9e = call i32 @function_2dde9()
  store i32 %v0_2db9e, i32* %eax.global-to-local, align 8
  ret i32 %v0_2db9e

; uselistorder directives
  uselistorder i32 %v0_2db75, { 1, 0, 2, 3 }
  uselistorder i32 %v11_2db6f, { 0, 2, 1 }
}

define i32 @function_2dba3() local_unnamed_addr {
dec_label_pc_2dba3:
  %v0_2dbab = load i32, i32* @ebp, align 4
  %v1_2dbc2 = add i32 %v0_2dbab, -52
  %v2_2dbc2 = inttoptr i32 %v1_2dbc2 to i32*
  %v3_2dbc2 = load i32, i32* %v2_2dbc2, align 4
  %v1_2dbc9 = add i32 %v0_2dbab, -44
  %v2_2dbc9 = inttoptr i32 %v1_2dbc9 to i32*
  %v3_2dbc9 = load i32, i32* %v2_2dbc9, align 4
  %v2_2dbcf = call i32 @unknown_5d79d(i32 %v3_2dbc9, i32 %v3_2dbc2)
  %v0_2dbd4 = call i32 @function_2dde9()
  ret i32 %v0_2dbd4

; uselistorder directives
  uselistorder i32 %v0_2dbab, { 1, 0 }
}

define i32 @function_2dbd9() local_unnamed_addr {
dec_label_pc_2dbd9:
  %v0_2dbe1 = load i32, i32* @ebp, align 4
  %v1_2dbf8 = add i32 %v0_2dbe1, -52
  %v2_2dbf8 = inttoptr i32 %v1_2dbf8 to i32*
  %v3_2dbf8 = load i32, i32* %v2_2dbf8, align 4
  %v1_2dbff = add i32 %v0_2dbe1, -44
  %v2_2dbff = inttoptr i32 %v1_2dbff to i32*
  %v3_2dbff = load i32, i32* %v2_2dbff, align 4
  %v2_2dc05 = call i32 @unknown_5d79d(i32 %v3_2dbff, i32 %v3_2dbf8)
  %v0_2dc0a = call i32 @function_2dde9()
  ret i32 %v0_2dc0a

; uselistorder directives
  uselistorder i32 %v0_2dbe1, { 1, 0 }
}

define i32 @function_2dc0f() local_unnamed_addr {
dec_label_pc_2dc0f:
  %v0_2dc17 = load i32, i32* @ebp, align 4
  %v1_2dc2e = add i32 %v0_2dc17, -52
  %v2_2dc2e = inttoptr i32 %v1_2dc2e to i32*
  %v3_2dc2e = load i32, i32* %v2_2dc2e, align 4
  %v1_2dc35 = add i32 %v0_2dc17, -44
  %v2_2dc35 = inttoptr i32 %v1_2dc35 to i32*
  %v3_2dc35 = load i32, i32* %v2_2dc35, align 4
  %v2_2dc3b = call i32 @unknown_5d79d(i32 %v3_2dc35, i32 %v3_2dc2e)
  %v0_2dc40 = call i32 @function_2dde9()
  ret i32 %v0_2dc40

; uselistorder directives
  uselistorder i32 %v0_2dc17, { 1, 0 }
}

define i32 @function_2dc6f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dc6f:
  %v2_2dc71 = call i32 @unknown_5d79d(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  %v0_2dc76 = call i32 @function_2dde9()
  ret i32 %v0_2dc76
}

define i32 @function_2dc98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dc98:
  %v0_2dc9a = load i32, i32* @ebp, align 4
  %v1_2dc9a = add i32 %v0_2dc9a, -52
  %v2_2dc9a = inttoptr i32 %v1_2dc9a to i32*
  %v3_2dc9a = load i32, i32* %v2_2dc9a, align 4
  %v1_2dca1 = add i32 %v0_2dc9a, -44
  %v2_2dca1 = inttoptr i32 %v1_2dca1 to i32*
  %v3_2dca1 = load i32, i32* %v2_2dca1, align 4
  %v2_2dca7 = call i32 @unknown_5d79d(i32 %v3_2dca1, i32 %v3_2dc9a)
  %v0_2dcac = call i32 @function_2dde9()
  ret i32 %v0_2dcac
}

define i32 @function_2dcb1() local_unnamed_addr {
dec_label_pc_2dcb1:
  %v0_2dcb9 = load i32, i32* @ebp, align 4
  %v1_2dcd0 = add i32 %v0_2dcb9, -52
  %v2_2dcd0 = inttoptr i32 %v1_2dcd0 to i32*
  %v3_2dcd0 = load i32, i32* %v2_2dcd0, align 4
  %v1_2dcd7 = add i32 %v0_2dcb9, -44
  %v2_2dcd7 = inttoptr i32 %v1_2dcd7 to i32*
  %v3_2dcd7 = load i32, i32* %v2_2dcd7, align 4
  %v2_2dcdd = call i32 @unknown_5d79d(i32 %v3_2dcd7, i32 %v3_2dcd0)
  %v0_2dce2 = call i32 @function_2dde9()
  ret i32 %v0_2dce2

; uselistorder directives
  uselistorder i32 %v0_2dcb9, { 1, 0 }
}

define i32 @function_2dce7() local_unnamed_addr {
dec_label_pc_2dce7:
  %v0_2dcef = load i32, i32* @ebp, align 4
  %v1_2dd06 = add i32 %v0_2dcef, -52
  %v2_2dd06 = inttoptr i32 %v1_2dd06 to i32*
  %v3_2dd06 = load i32, i32* %v2_2dd06, align 4
  %v1_2dd0d = add i32 %v0_2dcef, -44
  %v2_2dd0d = inttoptr i32 %v1_2dd0d to i32*
  %v3_2dd0d = load i32, i32* %v2_2dd0d, align 4
  %v2_2dd13 = call i32 @unknown_5d79d(i32 %v3_2dd0d, i32 %v3_2dd06)
  %v0_2dd18 = call i32 @function_2dde9()
  ret i32 %v0_2dd18

; uselistorder directives
  uselistorder i32 %v0_2dcef, { 1, 0 }
}

define i32 @function_2dd1d() local_unnamed_addr {
dec_label_pc_2dd1d:
  %v0_2dd33 = load i32, i32* @ebp, align 4
  %v1_2dd3a = add i32 %v0_2dd33, -52
  %v2_2dd3a = inttoptr i32 %v1_2dd3a to i32*
  %v3_2dd3a = load i32, i32* %v2_2dd3a, align 4
  %v1_2dd41 = add i32 %v0_2dd33, -44
  %v2_2dd41 = inttoptr i32 %v1_2dd41 to i32*
  %v3_2dd41 = load i32, i32* %v2_2dd41, align 4
  %v2_2dd47 = call i32 @unknown_5d79d(i32 %v3_2dd41, i32 %v3_2dd3a)
  %v0_2dd4c = call i32 @function_2dde9()
  ret i32 %v0_2dd4c
}

define i32 @function_2dd51() local_unnamed_addr {
dec_label_pc_2dd51:
  %v0_2dd67 = load i32, i32* @ebp, align 4
  %v1_2dd6e = add i32 %v0_2dd67, -52
  %v2_2dd6e = inttoptr i32 %v1_2dd6e to i32*
  %v3_2dd6e = load i32, i32* %v2_2dd6e, align 4
  %v1_2dd75 = add i32 %v0_2dd67, -44
  %v2_2dd75 = inttoptr i32 %v1_2dd75 to i32*
  %v3_2dd75 = load i32, i32* %v2_2dd75, align 4
  %v2_2dd7b = call i32 @unknown_5d79d(i32 %v3_2dd75, i32 %v3_2dd6e)
  %v0_2dd80 = call i32 @function_2dde9()
  ret i32 %v0_2dd80
}

define i32 @function_2dd9b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dd9b:
  %v0_2dd9d = load i32, i32* @ebp, align 4
  %v1_2dd9d = add i32 %v0_2dd9d, -52
  %v2_2dd9d = inttoptr i32 %v1_2dd9d to i32*
  %v3_2dd9d = load i32, i32* %v2_2dd9d, align 4
  %v1_2dda4 = add i32 %v0_2dd9d, -44
  %v2_2dda4 = inttoptr i32 %v1_2dda4 to i32*
  %v3_2dda4 = load i32, i32* %v2_2dda4, align 4
  %v2_2ddaa = call i32 @unknown_5d79d(i32 %v3_2dda4, i32 %v3_2dd9d)
  %v0_2ddaf = call i32 @function_2dde9()
  ret i32 %v0_2ddaf

; uselistorder directives
  uselistorder i32 ()* @function_2dde9, { 3, 17, 16, 15, 14, 2, 1, 13, 12, 11, 0, 4, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32, i32)* @unknown_5d79d, { 4, 12, 11, 10, 9, 3, 2, 8, 7, 6, 1, 0, 5 }
}

define i32 @function_2ddb1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2ddb1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ddb6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ddb6:
  %eax.global-to-local = alloca i32, align 4
  %v2_2ddb6 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2ddb6 = load i32, i32* @eax, align 8
  %v4_2ddb6 = trunc i32 %v3_2ddb6 to i8
  %v5_2ddb6 = add i8 %v4_2ddb6, %v2_2ddb6
  %v21_2ddb6 = inttoptr i32 %v3_2ddb6 to i8*
  store i8 %v5_2ddb6, i8* %v21_2ddb6, align 1
  %v3_2ddb8 = load i32, i32* @eax, align 8
  %v4_2ddb8 = trunc i32 %v3_2ddb8 to i8
  %v2_2ddbb = and i8 %v4_2ddb8, 24
  %v8_2ddbb = zext i8 %v2_2ddbb to i32
  %v10_2ddbb = and i32 %v3_2ddb8, -256
  %v11_2ddbb = or i32 %v8_2ddbb, %v10_2ddbb
  store i32 %v11_2ddbb, i32* %eax.global-to-local, align 8
  %v1_2ddbd = inttoptr i32 %v11_2ddbb to i8*
  %v2_2ddbd = load i8, i8* %v1_2ddbd, align 8
  %v5_2ddbd = add i8 %v2_2ddbd, %v2_2ddbb
  store i8 %v5_2ddbd, i8* %v1_2ddbd, align 8
  %v0_2ddbf = load i32, i32* %eax.global-to-local, align 8
  %v1_2ddbf = inttoptr i32 %v0_2ddbf to i8*
  %v2_2ddbf = load i8, i8* %v1_2ddbf, align 1
  %v4_2ddbf = trunc i32 %v0_2ddbf to i8
  %v5_2ddbf = add i8 %v2_2ddbf, %v4_2ddbf
  store i8 %v5_2ddbf, i8* %v1_2ddbf, align 1
  %v22_2ddbf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_2ddbf
}

define i32 @function_2ddc4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ddc4:
  %v0_2ddc9 = load i32, i32* @ebp, align 4
  %v1_2ddc9 = add i32 %v0_2ddc9, -56
  %v2_2ddc9 = inttoptr i32 %v1_2ddc9 to i32*
  %v3_2ddc9 = load i32, i32* %v2_2ddc9, align 4
  %v1_2ddd0 = add i32 %v0_2ddc9, -52
  %v2_2ddd0 = inttoptr i32 %v1_2ddd0 to i32*
  %v3_2ddd0 = load i32, i32* %v2_2ddd0, align 4
  %v1_2ddd7 = add i32 %v0_2ddc9, -48
  %v2_2ddd7 = inttoptr i32 %v1_2ddd7 to i32*
  %v3_2ddd7 = load i32, i32* %v2_2ddd7, align 4
  %v1_2ddde = add i32 %v0_2ddc9, -44
  %v2_2ddde = inttoptr i32 %v1_2ddde to i32*
  %v3_2ddde = load i32, i32* %v2_2ddde, align 4
  %v4_2dde4 = call i32 @unknown_5d7f7(i32 %v3_2ddde, i32 %v3_2ddd7, i32 %v3_2ddd0, i32 %v3_2ddc9)
  ret i32 %v4_2dde4

; uselistorder directives
  uselistorder i32 %v0_2ddc9, { 1, 0, 2, 3 }
}

define i32 @function_2dde9() local_unnamed_addr {
dec_label_pc_2dde9:
  %v0_2dde9 = load i32, i32* @ebp, align 4
  %v1_2dde9 = add i32 %v0_2dde9, -28
  %v2_2dde9 = inttoptr i32 %v1_2dde9 to i32*
  %v3_2dde9 = load i32, i32* %v2_2dde9, align 4
  %v1_2ddec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ddec = xor i32 %v1_2ddec, %v3_2dde9
  store i1 false, i1* @cf, align 1
  %v3_2ddec = icmp eq i32 %v2_2ddec, 0
  store i32 %v2_2ddec, i32* @eax, align 8
  br i1 %v3_2ddec, label %bb, label %dec_label_pc_2ddf5

bb:                                               ; preds = %dec_label_pc_2dde9
  %v1_2ddf3 = call i32 @function_2ddfa()
  br label %dec_label_pc_2ddf5

dec_label_pc_2ddf5:                               ; preds = %bb, %dec_label_pc_2dde9
  %v2_2ddf3 = phi i32 [ %v1_2ddf3, %bb ], [ %v2_2ddec, %dec_label_pc_2dde9 ]
  ret i32 %v2_2ddf3
}

define i32 @function_2ddfa() local_unnamed_addr {
dec_label_pc_2ddfa:
  %v0_2ddfa = load i32, i32* @esp, align 4
  %v5_2ddfa = icmp ugt i32 %v0_2ddfa, -109
  store i1 %v5_2ddfa, i1* @cf, align 1
  %v0_2de01 = load i32, i32* @eax, align 8
  ret i32 %v0_2de01
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E13apply_visitorINSH_11get_visitorIKxEEEENT_11result_typeERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2de54:
  %stack_var_-20 = alloca i32, align 4
  %v2_2de78 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2de7e = call i32 @unknown_5dd8a(i32 %v2_2de78, i32 %arg2)
  %v2_2de90 = call i32 @unknown_5ddc2(i32 %arg1, i32 %v2_2de78)
  store i32 %v2_2de90, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2dea1

bb:                                               ; preds = %dec_label_pc_2de54
  %v1_2de9f = call i32 @function_2dea6()
  br label %dec_label_pc_2dea1

dec_label_pc_2dea1:                               ; preds = %bb, %dec_label_pc_2de54
  %v2_2de9f = phi i32 [ %v1_2de9f, %bb ], [ %v2_2de90, %dec_label_pc_2de54 ]
  ret i32 %v2_2de9f
}

define i32 @function_2dea6() local_unnamed_addr {
dec_label_pc_2dea6:
  %v0_2dea7 = load i32, i32* @eax, align 8
  ret i32 %v0_2dea7
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dea8:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ded9

bb:                                               ; preds = %dec_label_pc_2dea8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2ded7 = call i32 @function_2dede(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2ded9

dec_label_pc_2ded9:                               ; preds = %bb, %dec_label_pc_2dea8
  %v4_2ded7 = phi i32 [ %v3_2ded7, %bb ], [ 0, %dec_label_pc_2dea8 ]
  ret i32 %v4_2ded7

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2dede(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dede:
  %v0_2dedf = load i32, i32* @eax, align 8
  ret i32 %v0_2dedf
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKbEEEEEENT_11result_typeERSQ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dee0:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2df01 = add i32 %tmp105, 4
  %v1_2df07 = call i32 @unknown_5626a(i32 %v1_2df01)
  %v1_2df14 = call i32 @unknown_524ea(i32 %tmp105)
  %v2_2df1e = load i32, i32* %arg1, align 4
  %v4_2df32 = call i32 @unknown_5debc(i32 %v2_2df1e, i32 %v1_2df14, i32 %arg2, i32 %v1_2df07)
  store i32 %v4_2df32, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2df43

bb:                                               ; preds = %dec_label_pc_2dee0
  %v1_2df41 = call i32 @function_2df48()
  br label %dec_label_pc_2df43

dec_label_pc_2df43:                               ; preds = %bb, %dec_label_pc_2dee0
  %v2_2df41 = phi i32 [ %v1_2df41, %bb ], [ %v4_2df32, %dec_label_pc_2dee0 ]
  ret i32 %v2_2df41

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2df48() local_unnamed_addr {
dec_label_pc_2df48:
  %v0_2df4d = load i32, i32* @eax, align 8
  ret i32 %v0_2df4d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df4e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2df71

bb:                                               ; preds = %dec_label_pc_2df4e
  %v2_2df6f = call i32 @function_2df76(i32 %arg1)
  br label %dec_label_pc_2df71

dec_label_pc_2df71:                               ; preds = %bb, %dec_label_pc_2df4e
  %v3_2df6f = phi i32 [ %v2_2df6f, %bb ], [ 0, %dec_label_pc_2df4e ]
  ret i32 %v3_2df6f
}

define i32 @function_2df76(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df76:
  %v0_2df77 = load i32, i32* @eax, align 8
  ret i32 %v0_2df77
}

define i32 @_ZSt11__addressofIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df78:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2df9e

bb:                                               ; preds = %dec_label_pc_2df78
  %v2_2df9c = call i32 @function_2dfa3(i32 %arg1)
  br label %dec_label_pc_2df9e

dec_label_pc_2df9e:                               ; preds = %bb, %dec_label_pc_2df78
  %v3_2df9c = phi i32 [ %v2_2df9c, %bb ], [ %arg1, %dec_label_pc_2df78 ]
  ret i32 %v3_2df9c
}

define i32 @function_2dfa3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfa3:
  %v0_2dfa4 = load i32, i32* @eax, align 8
  ret i32 %v0_2dfa4
}

define i32 @_ZSt8_DestroyIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfa5:
  %v1_2dfc2 = call i32 @unknown_41ad3(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2dfd3

bb:                                               ; preds = %dec_label_pc_2dfa5
  %v1_2dfd1 = call i32 @function_2dfd8()
  br label %dec_label_pc_2dfd3

dec_label_pc_2dfd3:                               ; preds = %bb, %dec_label_pc_2dfa5
  %v2_2dfd1 = phi i32 [ %v1_2dfd1, %bb ], [ 0, %dec_label_pc_2dfa5 ]
  ret i32 %v2_2dfd1
}

define i32 @function_2dfd8() local_unnamed_addr {
dec_label_pc_2dfd8:
  %v0_2dfd9 = load i32, i32* @eax, align 8
  ret i32 %v0_2dfd9
}

define i32 @_ZNSt10_Iter_baseIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEELb0EE7_S_baseES5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfda:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e000

bb:                                               ; preds = %dec_label_pc_2dfda
  %v2_2dffe = call i32 @function_2e005(i32 %arg1)
  br label %dec_label_pc_2e000

dec_label_pc_2e000:                               ; preds = %bb, %dec_label_pc_2dfda
  %v3_2dffe = phi i32 [ %v2_2dffe, %bb ], [ %arg1, %dec_label_pc_2dfda ]
  ret i32 %v3_2dffe
}

define i32 @function_2e005(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e005:
  %v0_2e006 = load i32, i32* @eax, align 8
  ret i32 %v0_2e006
}

define i32 @_ZSt12__niter_baseIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEENSt11_Niter_baseIT_E13iterator_typeES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e007:
  %v1_2e024 = call i32 @unknown_5bfe1(i32 %arg1)
  store i32 %v1_2e024, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e035

bb:                                               ; preds = %dec_label_pc_2e007
  %v1_2e033 = call i32 @function_2e03a()
  br label %dec_label_pc_2e035

dec_label_pc_2e035:                               ; preds = %bb, %dec_label_pc_2e007
  %v2_2e033 = phi i32 [ %v1_2e033, %bb ], [ %v1_2e024, %dec_label_pc_2e007 ]
  ret i32 %v2_2e033
}

define i32 @function_2e03a() local_unnamed_addr {
dec_label_pc_2e03a:
  %v0_2e03b = load i32, i32* @eax, align 8
  ret i32 %v0_2e03b
}

define i32 @_ZSt22__copy_move_backward_aILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e03c:
  ret i32 %arg3
}

define i32 @function_2e08c() local_unnamed_addr {
dec_label_pc_2e08c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e08c = load i32, i32* %ecx.global-to-local, align 8
  %v1_2e08c = add i32 %v0_2e08c, -1
  store i32 %v1_2e08c, i32* %ecx.global-to-local, align 8
  %v0_2e08e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e08e
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EC1ISJ_EERT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e090:
  %v1_2e0b1 = add i32 %arg1, 4
  %v1_2e0b7 = call i32 @unknown_49b66(i32 %v1_2e0b1)
  ret i32 %v1_2e0b7
}

define i32 @function_2e0c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e0c6:
  %v0_2e0cb = load i32, i32* @ebp, align 4
  %v1_2e0cb = add i32 %v0_2e0cb, -28
  %v2_2e0cb = inttoptr i32 %v1_2e0cb to i32*
  %v3_2e0cb = load i32, i32* %v2_2e0cb, align 4
  %v1_2e0d1 = call i32 @unknown_5e15c(i32 %v3_2e0cb)
  %v0_2e0d6 = call i32 @function_2e0f2()
  ret i32 %v0_2e0d6
}

define i32 @function_2e0d9() local_unnamed_addr {
dec_label_pc_2e0d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e0d9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e0d9
}

define i32 @function_2e0f2() local_unnamed_addr {
dec_label_pc_2e0f2:
  %v0_2e0f2 = load i32, i32* @ebp, align 4
  %v1_2e0f2 = add i32 %v0_2e0f2, -12
  %v2_2e0f2 = inttoptr i32 %v1_2e0f2 to i32*
  %v3_2e0f2 = load i32, i32* %v2_2e0f2, align 4
  %v1_2e0f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e0f5 = xor i32 %v1_2e0f5, %v3_2e0f2
  %v3_2e0f5 = icmp eq i32 %v2_2e0f5, 0
  store i32 %v2_2e0f5, i32* @eax, align 8
  br i1 %v3_2e0f5, label %bb, label %dec_label_pc_2e0fe

bb:                                               ; preds = %dec_label_pc_2e0f2
  %v1_2e0fc = call i32 @function_2e103()
  br label %dec_label_pc_2e0fe

dec_label_pc_2e0fe:                               ; preds = %bb, %dec_label_pc_2e0f2
  %v2_2e0fc = phi i32 [ %v1_2e0fc, %bb ], [ %v2_2e0f5, %dec_label_pc_2e0f2 ]
  ret i32 %v2_2e0fc
}

define i32 @function_2e103() local_unnamed_addr {
dec_label_pc_2e103:
  %v0_2e108 = load i32, i32* @eax, align 8
  ret i32 %v0_2e108
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EaSERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e10a:
  %v2_2e134 = call i32 @unknown_5e21e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e148

bb:                                               ; preds = %dec_label_pc_2e10a
  %v1_2e146 = call i32 @function_2e14d()
  br label %dec_label_pc_2e148

dec_label_pc_2e148:                               ; preds = %bb, %dec_label_pc_2e10a
  %v2_2e146 = phi i32 [ %v1_2e146, %bb ], [ %arg1, %dec_label_pc_2e10a ]
  ret i32 %v2_2e146

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2e14d() local_unnamed_addr {
dec_label_pc_2e14d:
  %v0_2e14e = load i32, i32* @eax, align 8
  ret i32 %v0_2e14e
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e150:
  ret i32 %arg1
}

define i32 @function_2e15a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e15a:
  %v0_2e15a = load i32, i32* @ebp, align 4
  %v1_2e15a = add i32 %v0_2e15a, 1
  store i32 %v1_2e15a, i32* @ebp, align 4
  %v0_2e15d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e162 = add i32 %v0_2e15a, -11
  %v3_2e162 = inttoptr i32 %v2_2e162 to i32*
  store i32 %v0_2e15d, i32* %v3_2e162, align 4
  store i32 178956970, i32* @eax, align 8
  %v0_2e16c = load i32, i32* @ebp, align 4
  %v1_2e16c = add i32 %v0_2e16c, -12
  %v2_2e16c = inttoptr i32 %v1_2e16c to i32*
  %v3_2e16c = load i32, i32* %v2_2e16c, align 4
  %v1_2e16f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2e16f = icmp eq i32 %v1_2e16f, %v3_2e16c
  br i1 %v3_2e16f, label %bb, label %dec_label_pc_2e178

bb:                                               ; preds = %dec_label_pc_2e15a
  %v1_2e176 = call i32 @function_2e17d()
  br label %dec_label_pc_2e178

dec_label_pc_2e178:                               ; preds = %bb, %dec_label_pc_2e15a
  %v2_2e176 = phi i32 [ %v1_2e176, %bb ], [ 178956970, %dec_label_pc_2e15a ]
  ret i32 %v2_2e176
}

define i32 @function_2e17d() local_unnamed_addr {
dec_label_pc_2e17d:
  %v0_2e17e = load i32, i32* @eax, align 8
  ret i32 %v0_2e17e
}

define i32 @_ZSt18uninitialized_copyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e17f:
  %v3_2e1b6 = call i32 @unknown_5e3b6(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2e1b6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e1c7

bb:                                               ; preds = %dec_label_pc_2e17f
  %v1_2e1c5 = call i32 @function_2e1cc()
  br label %dec_label_pc_2e1c7

dec_label_pc_2e1c7:                               ; preds = %bb, %dec_label_pc_2e17f
  %v2_2e1c5 = phi i32 [ %v1_2e1c5, %bb ], [ %v3_2e1b6, %dec_label_pc_2e17f ]
  ret i32 %v2_2e1c5
}

define i32 @function_2e1cc() local_unnamed_addr {
dec_label_pc_2e1cc:
  %v0_2e1cd = load i32, i32* @eax, align 8
  ret i32 %v0_2e1cd
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e1ce:
  ret i32 0
}

define i32 @function_2e1f6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2e1f6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e1fa() local_unnamed_addr {
dec_label_pc_2e1fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e1fa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e1fa
}

define i32 @function_2e21a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e21a:
  %v0_2e21a = load i32, i32* @ebp, align 4
  %v1_2e21a = load i32, i32* @ebx, align 4
  %v2_2e21a = load i1, i1* @cf, align 1
  %v3_2e21a = zext i1 %v2_2e21a to i32
  %v4_2e21a = sub i32 %v0_2e21a, %v1_2e21a
  %v5_2e21a = add i32 %v3_2e21a, %v4_2e21a
  %v15_2e21a = sub i32 %v4_2e21a, %v3_2e21a
  %v16_2e21a = icmp ult i32 %v0_2e21a, %v15_2e21a
  %v17_2e21a = icmp ne i32 %v1_2e21a, -1
  %v18_2e21a = or i1 %v17_2e21a, %v16_2e21a
  %v19_2e21a = icmp ult i32 %v0_2e21a, %v1_2e21a
  %v20_2e21a = select i1 %v2_2e21a, i1 %v18_2e21a, i1 %v19_2e21a
  store i32 %v5_2e21a, i32* @ebp, align 4
  %v0_2e21c = load i32, i32* @eax, align 8
  %v3_2e21c = zext i1 %v20_2e21a to i32
  %v4_2e21c = add i32 %v0_2e21c, 137
  %v5_2e21c = add i32 %v4_2e21c, %v3_2e21c
  %v25_2e21c = and i32 %v5_2e21c, 255
  %v27_2e21c = and i32 %v0_2e21c, -256
  %v28_2e21c = or i32 %v25_2e21c, %v27_2e21c
  ret i32 %v28_2e21c

; uselistorder directives
  uselistorder i32 %v0_2e21c, { 1, 0 }
  uselistorder i32 %v4_2e21a, { 1, 0 }
  uselistorder i32 %v3_2e21a, { 1, 0 }
  uselistorder i32 %v1_2e21a, { 1, 0, 2 }
}

define i32 @function_2e235(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e235:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2e235 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2e235 = add i32 %v0_2e235, 1583034564
  %v2_2e235 = inttoptr i32 %v1_2e235 to i32*
  %v3_2e235 = load i32, i32* %v2_2e235, align 4
  %v4_2e235 = add i32 %v3_2e235, 1
  store i32 %v4_2e235, i32* %v2_2e235, align 4
  %v0_2e23c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e23c
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit9Pair_implINS1_13Config_vectorISsEEEEEC1ERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e23e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e267

bb:                                               ; preds = %dec_label_pc_2e23e
  %v3_2e265 = call i32 @function_2e26c(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2e267

dec_label_pc_2e267:                               ; preds = %bb, %dec_label_pc_2e23e
  %v4_2e265 = phi i32 [ %v3_2e265, %bb ], [ 0, %dec_label_pc_2e23e ]
  ret i32 %v4_2e265
}

define i32 @function_2e26c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e26c:
  %v0_2e26d = load i32, i32* @eax, align 8
  ret i32 %v0_2e26d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2e26e:
  %v2_2e288 = load i32, i32* %arg1, align 4
  store i32 %v2_2e288, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e296

bb:                                               ; preds = %dec_label_pc_2e26e
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2e294 = call i32 @function_2e29b(i32 %tmp100)
  br label %dec_label_pc_2e296

dec_label_pc_2e296:                               ; preds = %bb, %dec_label_pc_2e26e
  %v3_2e294 = phi i32 [ %v2_2e294, %bb ], [ %v2_2e288, %dec_label_pc_2e26e ]
  ret i32 %v3_2e294

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2e29b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e29b:
  %v0_2e29c = load i32, i32* @eax, align 8
  ret i32 %v0_2e29c
}

define i32 @_ZSt10_ConstructIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES4_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e29d:
  store i32 0, i32* @eax, align 8
  %v2_2e2cb = call i32 @function_33fc9(i32 24, i32 %arg1)
  %v1_2e2d2 = icmp eq i32 %v2_2e2cb, 0
  br i1 %v1_2e2d2, label %bb, label %dec_label_pc_2e2d6

bb:                                               ; preds = %dec_label_pc_2e29d
  %v1_2e2d4 = call i32 @function_2e2ff()
  br label %dec_label_pc_2e2d6

dec_label_pc_2e2d6:                               ; preds = %bb, %dec_label_pc_2e29d
  ret i32 %arg2
}

define i32 @function_2e2da(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2da:
  %v16_2e2da = load i32, i32* @eax, align 8
  ret i32 %v16_2e2da
}

define i32 @function_2e2dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2dc:
  %v0_2e2e0 = call i32 @unknown_4bb2d()
  %v0_2e2e5 = call i32 @function_2e2ff()
  ret i32 %v0_2e2e5
}

define i32 @function_2e2ff() local_unnamed_addr {
dec_label_pc_2e2ff:
  %v0_2e2ff = load i32, i32* @ebp, align 4
  %v1_2e2ff = add i32 %v0_2e2ff, -28
  %v2_2e2ff = inttoptr i32 %v1_2e2ff to i32*
  %v3_2e2ff = load i32, i32* %v2_2e2ff, align 4
  %v1_2e302 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e302 = xor i32 %v1_2e302, %v3_2e2ff
  %v3_2e302 = icmp eq i32 %v2_2e302, 0
  store i32 %v2_2e302, i32* @eax, align 8
  br i1 %v3_2e302, label %bb, label %dec_label_pc_2e30b

bb:                                               ; preds = %dec_label_pc_2e2ff
  %v1_2e309 = call i32 @function_2e310()
  br label %dec_label_pc_2e30b

dec_label_pc_2e30b:                               ; preds = %bb, %dec_label_pc_2e2ff
  %v2_2e309 = phi i32 [ %v1_2e309, %bb ], [ %v2_2e302, %dec_label_pc_2e2ff ]
  ret i32 %v2_2e309
}

define i32 @function_2e310() local_unnamed_addr {
dec_label_pc_2e310:
  %v0_2e317 = load i32, i32* @eax, align 8
  ret i32 %v0_2e317
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256S2_IP6CBlock7CScriptEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e318:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e33b

bb:                                               ; preds = %dec_label_pc_2e318
  %v2_2e339 = call i32 @function_2e340(i32 %arg1)
  br label %dec_label_pc_2e33b

dec_label_pc_2e33b:                               ; preds = %bb, %dec_label_pc_2e318
  %v3_2e339 = phi i32 [ %v2_2e339, %bb ], [ 0, %dec_label_pc_2e318 ]
  ret i32 %v3_2e339
}

define i32 @function_2e340(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e340:
  %v0_2e341 = load i32, i32* @eax, align 8
  ret i32 %v0_2e341
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e342:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e368

bb:                                               ; preds = %dec_label_pc_2e342
  %v2_2e366 = call i32 @function_2e36d(i32 %arg1)
  br label %dec_label_pc_2e368

dec_label_pc_2e368:                               ; preds = %bb, %dec_label_pc_2e342
  %v3_2e366 = phi i32 [ %v2_2e366, %bb ], [ %arg1, %dec_label_pc_2e342 ]
  ret i32 %v3_2e366
}

define i32 @function_2e36d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e36d:
  %v0_2e36e = load i32, i32* @eax, align 8
  ret i32 %v0_2e36e
}

define i32 @_ZNSaISt4pairIK7uint256S_IP6CBlock7CScriptEEEC1ISt13_Rb_tree_nodeIS6_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e370:
  %v1_2e393 = call i32 @unknown_5e64e(i32 %arg1)
  ret i32 %v1_2e393
}

define i32 @function_2e39a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e39a:
  %v0_2e39b = load i32, i32* @eax, align 8
  %v1_2e39b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e39b = xor i32 %v1_2e39b, %v0_2e39b
  %v3_2e39b = icmp eq i32 %v2_2e39b, 0
  store i32 %v2_2e39b, i32* @eax, align 8
  br i1 %v3_2e39b, label %bb, label %dec_label_pc_2e3a4

bb:                                               ; preds = %dec_label_pc_2e39a
  %v1_2e3a2 = call i32 @function_2e3a9()
  br label %dec_label_pc_2e3a4

dec_label_pc_2e3a4:                               ; preds = %bb, %dec_label_pc_2e39a
  %v2_2e3a2 = phi i32 [ %v1_2e3a2, %bb ], [ %v2_2e39b, %dec_label_pc_2e39a ]
  ret i32 %v2_2e3a2
}

define i32 @function_2e3a9() local_unnamed_addr {
dec_label_pc_2e3a9:
  %v0_2e3aa = load i32, i32* @eax, align 8
  ret i32 %v0_2e3aa
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256S1_IP6CBlock7CScriptEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e3ac:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e3cf

bb:                                               ; preds = %dec_label_pc_2e3ac
  %v2_2e3cd = call i32 @function_2e3d4(i32 %arg1)
  br label %dec_label_pc_2e3cf

dec_label_pc_2e3cf:                               ; preds = %bb, %dec_label_pc_2e3ac
  %v3_2e3cd = phi i32 [ %v2_2e3cd, %bb ], [ 0, %dec_label_pc_2e3ac ]
  ret i32 %v3_2e3cd
}

define i32 @function_2e3d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e3d4:
  %v0_2e3d5 = load i32, i32* @eax, align 8
  ret i32 %v0_2e3d5
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256S2_IP6CBlock7CScriptEEEE10deallocateEPSA_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e3d6:
  ret i32 %arg2
}

define i32 @function_2e414() local_unnamed_addr {
dec_label_pc_2e414:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e414 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2e414 = add i32 %v0_2e414, -1
  store i32 %v1_2e414, i32* %ecx.global-to-local, align 8
  %v0_2e416 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e416
}

define i32 @_ZN9__gnu_cxx13new_allocatorIP14CBlockTemplateEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e418:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e43b

bb:                                               ; preds = %dec_label_pc_2e418
  %v2_2e439 = call i32 @function_2e440(i32 %arg1)
  br label %dec_label_pc_2e43b

dec_label_pc_2e43b:                               ; preds = %bb, %dec_label_pc_2e418
  %v3_2e439 = phi i32 [ %v2_2e439, %bb ], [ 0, %dec_label_pc_2e418 ]
  ret i32 %v3_2e439
}

define i32 @function_2e440(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e440:
  %v0_2e441 = load i32, i32* @eax, align 8
  ret i32 %v0_2e441
}

define i32 @_ZNSt10_Iter_baseIPP14CBlockTemplateLb0EE7_S_baseES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e442:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e468

bb:                                               ; preds = %dec_label_pc_2e442
  %v2_2e466 = call i32 @function_2e46d(i32 %arg1)
  br label %dec_label_pc_2e468

dec_label_pc_2e468:                               ; preds = %bb, %dec_label_pc_2e442
  %v3_2e466 = phi i32 [ %v2_2e466, %bb ], [ %arg1, %dec_label_pc_2e442 ]
  ret i32 %v3_2e466
}

define i32 @function_2e46d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e46d:
  %v0_2e46e = load i32, i32* @eax, align 8
  ret i32 %v0_2e46e
}

define i32 @_ZSt12__niter_baseIPP14CBlockTemplateENSt11_Niter_baseIT_E13iterator_typeES4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e46f:
  %v1_2e48c = call i32 @unknown_5c8b1(i32 %arg1)
  store i32 %v1_2e48c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e49d

bb:                                               ; preds = %dec_label_pc_2e46f
  %v1_2e49b = call i32 @function_2e4a2()
  br label %dec_label_pc_2e49d

dec_label_pc_2e49d:                               ; preds = %bb, %dec_label_pc_2e46f
  %v2_2e49b = phi i32 [ %v1_2e49b, %bb ], [ %v1_2e48c, %dec_label_pc_2e46f ]
  ret i32 %v2_2e49b
}

define i32 @function_2e4a2() local_unnamed_addr {
dec_label_pc_2e4a2:
  %v0_2e4a3 = load i32, i32* @eax, align 8
  ret i32 %v0_2e4a3
}

define i32 @_ZSt22__copy_move_backward_aILb0EPP14CBlockTemplateS2_ET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e4a4:
  %v3_2e4df = call i32 @unknown_5e7ac(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2e4df, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e4f0

bb:                                               ; preds = %dec_label_pc_2e4a4
  %v1_2e4ee = call i32 @function_2e4f5()
  br label %dec_label_pc_2e4f0

dec_label_pc_2e4f0:                               ; preds = %bb, %dec_label_pc_2e4a4
  %v2_2e4ee = phi i32 [ %v1_2e4ee, %bb ], [ %v3_2e4df, %dec_label_pc_2e4a4 ]
  ret i32 %v2_2e4ee
}

define i32 @function_2e4f5() local_unnamed_addr {
dec_label_pc_2e4f5:
  %v0_2e4f6 = load i32, i32* @eax, align 8
  ret i32 %v0_2e4f6
}

define i32 @_ZNKSt12_Vector_baseIP14CBlockTemplateSaIS1_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4f8:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e51e

bb:                                               ; preds = %dec_label_pc_2e4f8
  %v2_2e51c = call i32 @function_2e523(i32 %arg1)
  br label %dec_label_pc_2e51e

dec_label_pc_2e51e:                               ; preds = %bb, %dec_label_pc_2e4f8
  %v3_2e51c = phi i32 [ %v2_2e51c, %bb ], [ %arg1, %dec_label_pc_2e4f8 ]
  ret i32 %v3_2e51c
}

define i32 @function_2e523(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e523:
  %v0_2e524 = load i32, i32* @eax, align 8
  ret i32 %v0_2e524
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIP14CBlockTemplateE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e526:
  store i32 1073741823, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e54e

bb:                                               ; preds = %dec_label_pc_2e526
  %v2_2e54c = call i32 @function_2e553(i32 %arg1)
  br label %dec_label_pc_2e54e

dec_label_pc_2e54e:                               ; preds = %bb, %dec_label_pc_2e526
  %v3_2e54c = phi i32 [ %v2_2e54c, %bb ], [ 1073741823, %dec_label_pc_2e526 ]
  ret i32 %v3_2e54c
}

define i32 @function_2e553(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e553:
  %v0_2e554 = load i32, i32* @eax, align 8
  ret i32 %v0_2e554
}

define i32 @_ZSt18uninitialized_copyIPP14CBlockTemplateS2_ET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e555:
  %v3_2e58c = call i32 @unknown_5e8de(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2e58c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e59d

bb:                                               ; preds = %dec_label_pc_2e555
  %v1_2e59b = call i32 @function_2e5a2()
  br label %dec_label_pc_2e59d

dec_label_pc_2e59d:                               ; preds = %bb, %dec_label_pc_2e555
  %v2_2e59b = phi i32 [ %v1_2e59b, %bb ], [ %v3_2e58c, %dec_label_pc_2e555 ]
  ret i32 %v2_2e59b
}

define i32 @function_2e5a2() local_unnamed_addr {
dec_label_pc_2e5a2:
  %v0_2e5a3 = load i32, i32* @eax, align 8
  ret i32 %v0_2e5a3
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE14_M_create_nodeERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e5a4:
  %stack_var_-17 = alloca i32, align 4
  %v1_2e5c8 = call i32 @unknown_5e97c(i32 %arg1)
  %v1_2e5d3 = add i32 %v1_2e5c8, 16
  %v1_2e5d9 = call i32 @unknown_58a69(i32 %v1_2e5d3)
  %v2_2e5e0 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2e5ed = call i32 @unknown_589e4(i32 %v2_2e5e0, i32 %arg1)
  %v3_2e606 = call i32 @unknown_5ea3e(i32 %v2_2e5e0, i32 %v1_2e5d9, i32 %arg2)
  %v1_2e611 = call i32 @unknown_58a34(i32 %v2_2e5e0)
  store i32 %v1_2e5c8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e625

bb:                                               ; preds = %dec_label_pc_2e5a4
  %v1_2e623 = call i32 @function_2e66b()
  store i32 %v1_2e623, i32* @eax, align 8
  br label %dec_label_pc_2e625

dec_label_pc_2e625:                               ; preds = %bb, %dec_label_pc_2e5a4
  %v0_2e625 = call i32 @function_2e666()
  ret i32 %v0_2e625

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e628() local_unnamed_addr {
dec_label_pc_2e628:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e628 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e628
}

define i32 @function_2e656() local_unnamed_addr {
dec_label_pc_2e656:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e656 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e656
}

define i32 @function_2e663(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e663:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e666() local_unnamed_addr {
dec_label_pc_2e666:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e66b() local_unnamed_addr {
dec_label_pc_2e66b:
  %v0_2e66f = load i32, i32* @eax, align 8
  ret i32 %v0_2e66f
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e670:
  %v1_2e690 = add i32 %arg2, 12
  %v2_2e690 = inttoptr i32 %v1_2e690 to i32*
  %v3_2e690 = load i32, i32* %v2_2e690, align 4
  %v2_2e69d = call i32 @unknown_58fe2(i32 %arg1, i32 %v3_2e690)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e6b1

bb:                                               ; preds = %dec_label_pc_2e670
  %v1_2e6af = call i32 @function_2e6b6()
  br label %dec_label_pc_2e6b1

dec_label_pc_2e6b1:                               ; preds = %bb, %dec_label_pc_2e670
  %v2_2e6af = phi i32 [ %v1_2e6af, %bb ], [ %arg1, %dec_label_pc_2e670 ]
  ret i32 %v2_2e6af

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2e6b5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e6b5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e6b6() local_unnamed_addr {
dec_label_pc_2e6b6:
  %v0_2e6b7 = load i32, i32* @eax, align 8
  ret i32 %v0_2e6b7
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IK7uint256S_IP6CBlock7CScriptEEEbEC1ERKS8_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e6ba:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_2e6e3 = inttoptr i32 %arg2 to i32*
  %v2_2e6e3 = load i32, i32* %v1_2e6e3, align 4
  store i32 %v2_2e6e3, i32* %arg1, align 4
  %v2_2e6ea = load i8, i8* %tmp104, align 1
  %v3_2e6f0 = add i32 %tmp109, 4
  %v4_2e6f0 = inttoptr i32 %v3_2e6f0 to i8*
  store i8 %v2_2e6ea, i8* %v4_2e6f0, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e6ff

bb:                                               ; preds = %dec_label_pc_2e6ba
  %v5_2e6fd = call i32 @function_2e704(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_2e6ff

dec_label_pc_2e6ff:                               ; preds = %bb, %dec_label_pc_2e6ba
  %v6_2e6fd = phi i32 [ %v5_2e6fd, %bb ], [ 0, %dec_label_pc_2e6ba ]
  ret i32 %v6_2e6fd
}

define i32 @function_2e704(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e704:
  %v0_2e705 = load i32, i32* @eax, align 8
  ret i32 %v0_2e705
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK7uint256S0_IP6CBlock7CScriptEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2e706:
  %v2_2e720 = load i32, i32* %arg1, align 4
  ret i32 %v2_2e720
}

define i32 @function_2e742() local_unnamed_addr {
dec_label_pc_2e742:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e742 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2e742 = add i32 %v0_2e742, -1
  store i32 %v1_2e742, i32* %ecx.global-to-local, align 8
  %v0_2e744 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e744
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKSsEEEEPKvEENT_11result_typeEiiRSS_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2e745:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2e77e = load i32, i32* %ecx.global-to-local, align 8
  %v0_2e782 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2e782, 16777216
  %v12_2e7a1 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2e77e, 16777216
  %v13_2e7a1 = sdiv i32 %sext1, 16777216
  %v14_2e7a1 = call i32 @unknown_5ec60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_2e7a1, i32 %v13_2e7a1, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v14_2e7a1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_2e7b2

bb:                                               ; preds = %dec_label_pc_2e745
  %v1_2e7b0 = call i32 @function_2e7b7()
  br label %dec_label_pc_2e7b2

dec_label_pc_2e7b2:                               ; preds = %bb, %dec_label_pc_2e745
  %v3_2e7b0 = phi i32 [ %v1_2e7b0, %bb ], [ %v14_2e7a1, %dec_label_pc_2e745 ]
  ret i32 %v3_2e7b0

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e7b7() local_unnamed_addr {
dec_label_pc_2e7b7:
  %v0_2e7b8 = load i32, i32* @eax, align 8
  ret i32 %v0_2e7b8
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E() local_unnamed_addr {
dec_label_pc_2e7b9:
  %eax.global-to-local = alloca i32, align 4
  %v2_2e7ba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2e7ba
}

define i32 @function_2e7bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e7bc:
  %v0_2e7bf = load i32, i32* @ebp, align 4
  %v1_2e7bf = add i32 %v0_2e7bf, 8
  %v2_2e7bf = inttoptr i32 %v1_2e7bf to i32*
  %v3_2e7bf = load i32, i32* %v2_2e7bf, align 4
  %v2_2e7c2 = add i32 %v0_2e7bf, -28
  %v3_2e7c2 = inttoptr i32 %v2_2e7c2 to i32*
  store i32 %v3_2e7bf, i32* %v3_2e7c2, align 4
  %v0_2e7c5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2e7cb = load i32, i32* @ebp, align 4
  %v2_2e7cb = add i32 %v1_2e7cb, -12
  %v3_2e7cb = inttoptr i32 %v2_2e7cb to i32*
  store i32 %v0_2e7c5, i32* %v3_2e7cb, align 4
  %v0_2e7d0 = load i32, i32* @ebp, align 4
  %v1_2e7d0 = add i32 %v0_2e7d0, -28
  %v2_2e7d0 = inttoptr i32 %v1_2e7d0 to i32*
  %v3_2e7d0 = load i32, i32* %v2_2e7d0, align 4
  %v1_2e7d3 = add i32 %v3_2e7d0, 16
  store i32 %v1_2e7d3, i32* @eax, align 8
  %v1_2e7d6 = add i32 %v0_2e7d0, -12
  %v2_2e7d6 = inttoptr i32 %v1_2e7d6 to i32*
  %v3_2e7d6 = load i32, i32* %v2_2e7d6, align 4
  %v1_2e7d9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2e7d9 = icmp eq i32 %v1_2e7d9, %v3_2e7d6
  br i1 %v3_2e7d9, label %bb, label %dec_label_pc_2e7e2

bb:                                               ; preds = %dec_label_pc_2e7bc
  %v1_2e7e0 = call i32 @function_2e7e7()
  br label %dec_label_pc_2e7e2

dec_label_pc_2e7e2:                               ; preds = %bb, %dec_label_pc_2e7bc
  %v2_2e7e0 = phi i32 [ %v1_2e7e0, %bb ], [ %v1_2e7d3, %dec_label_pc_2e7bc ]
  ret i32 %v2_2e7e0
}

define i32 @function_2e7e7() local_unnamed_addr {
dec_label_pc_2e7e7:
  %v0_2e7e8 = load i32, i32* @eax, align 8
  ret i32 %v0_2e7e8
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKS9_EEEEPKvEENT_11result_typeEiiRSS_T0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e7e9:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %v0_2e822 = load i32, i32* @ecx, align 8
  %v0_2e826 = load i32, i32* @edx, align 4
  %sext = mul i32 %v0_2e826, 16777216
  %v12_2e845 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2e822, 16777216
  %v13_2e845 = sdiv i32 %sext1, 16777216
  %v14_2e845 = call i32 @unknown_5f231(i32 %arg1, i32 %tmp15, i32 %tmp13, i32 %tmp11, i32 %v12_2e845, i32 %v13_2e845, i32 0, i32 0, i32 %tmp11, i32 %tmp13, i32 %tmp15, i32 %arg1)
  store i32 %v14_2e845, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e856

bb:                                               ; preds = %dec_label_pc_2e7e9
  %v1_2e854 = call i32 @function_2e85b()
  br label %dec_label_pc_2e856

dec_label_pc_2e856:                               ; preds = %bb, %dec_label_pc_2e7e9
  %v2_2e854 = phi i32 [ %v1_2e854, %bb ], [ %v14_2e845, %dec_label_pc_2e7e9 ]
  ret i32 %v2_2e854

; uselistorder directives
  uselistorder i32 %tmp15, { 1, 0 }
  uselistorder i32 %tmp13, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e85b() local_unnamed_addr {
dec_label_pc_2e85b:
  %v0_2e85c = load i32, i32* @eax, align 8
  ret i32 %v0_2e85c
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e85e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e881

bb:                                               ; preds = %dec_label_pc_2e85e
  %v2_2e87f = call i32 @function_2e886(i32 %arg1)
  br label %dec_label_pc_2e881

dec_label_pc_2e881:                               ; preds = %bb, %dec_label_pc_2e85e
  %v3_2e87f = phi i32 [ %v2_2e87f, %bb ], [ 0, %dec_label_pc_2e85e ]
  ret i32 %v3_2e87f
}

define i32 @function_2e886(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e886:
  %v0_2e887 = load i32, i32* @eax, align 8
  ret i32 %v0_2e887
}

define i32 @_ZSt11__addressofIN11json_spirit10Value_implINS0_13Config_vectorISsEEEEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e888:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e8ae

bb:                                               ; preds = %dec_label_pc_2e888
  %v2_2e8ac = call i32 @function_2e8b3(i32 %arg1)
  br label %dec_label_pc_2e8ae

dec_label_pc_2e8ae:                               ; preds = %bb, %dec_label_pc_2e888
  %v3_2e8ac = phi i32 [ %v2_2e8ac, %bb ], [ %arg1, %dec_label_pc_2e888 ]
  ret i32 %v3_2e8ac
}

define i32 @function_2e8b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8b3:
  %v0_2e8b4 = load i32, i32* @eax, align 8
  ret i32 %v0_2e8b4
}

define i32 @_ZSt8_DestroyIN11json_spirit10Value_implINS0_13Config_vectorISsEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8b5:
  %v1_2e8d2 = call i32 @unknown_423ab(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e8e3

bb:                                               ; preds = %dec_label_pc_2e8b5
  %v1_2e8e1 = call i32 @function_2e8e8()
  br label %dec_label_pc_2e8e3

dec_label_pc_2e8e3:                               ; preds = %bb, %dec_label_pc_2e8b5
  %v2_2e8e1 = phi i32 [ %v1_2e8e1, %bb ], [ 0, %dec_label_pc_2e8b5 ]
  ret i32 %v2_2e8e1
}

define i32 @function_2e8e8() local_unnamed_addr {
dec_label_pc_2e8e8:
  %v0_2e8e9 = load i32, i32* @eax, align 8
  ret i32 %v0_2e8e9
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256xEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8ea:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e90d

bb:                                               ; preds = %dec_label_pc_2e8ea
  %v2_2e90b = call i32 @function_2e912(i32 %arg1)
  br label %dec_label_pc_2e90d

dec_label_pc_2e90d:                               ; preds = %bb, %dec_label_pc_2e8ea
  %v3_2e90b = phi i32 [ %v2_2e90b, %bb ], [ 0, %dec_label_pc_2e8ea ]
  ret i32 %v3_2e90b
}

define i32 @function_2e912(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e912:
  %v0_2e913 = load i32, i32* @eax, align 8
  ret i32 %v0_2e913
}

define i32 @_ZNKSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e914:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e93a

bb:                                               ; preds = %dec_label_pc_2e914
  %v2_2e938 = call i32 @function_2e93f(i32 %arg1)
  br label %dec_label_pc_2e93a

dec_label_pc_2e93a:                               ; preds = %bb, %dec_label_pc_2e914
  %v3_2e938 = phi i32 [ %v2_2e938, %bb ], [ %arg1, %dec_label_pc_2e914 ]
  ret i32 %v3_2e938
}

define i32 @function_2e93f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e93f:
  %v0_2e940 = load i32, i32* @eax, align 8
  ret i32 %v0_2e940
}

define i32 @_ZNSaISt4pairIK7uint256xEEC1ISt13_Rb_tree_nodeIS2_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e942:
  %v1_2e965 = call i32 @unknown_5f8b6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e976

bb:                                               ; preds = %dec_label_pc_2e942
  %v1_2e974 = call i32 @function_2e97b()
  br label %dec_label_pc_2e976

dec_label_pc_2e976:                               ; preds = %bb, %dec_label_pc_2e942
  %v2_2e974 = phi i32 [ %v1_2e974, %bb ], [ 0, %dec_label_pc_2e942 ]
  ret i32 %v2_2e974
}

define i32 @function_2e97b() local_unnamed_addr {
dec_label_pc_2e97b:
  %v0_2e97c = load i32, i32* @eax, align 8
  ret i32 %v0_2e97c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256xEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e97e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2e9a1

bb:                                               ; preds = %dec_label_pc_2e97e
  %v2_2e99f = call i32 @function_2e9a6(i32 %arg1)
  br label %dec_label_pc_2e9a1

dec_label_pc_2e9a1:                               ; preds = %bb, %dec_label_pc_2e97e
  %v3_2e99f = phi i32 [ %v2_2e99f, %bb ], [ 0, %dec_label_pc_2e97e ]
  ret i32 %v3_2e99f
}

define i32 @function_2e9a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e9a6:
  %v0_2e9a7 = load i32, i32* @eax, align 8
  ret i32 %v0_2e9a7
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256xEEE10deallocateEPS6_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e9a8:
  ret i32 %arg2
}

define i32 @function_2e9e6() local_unnamed_addr {
dec_label_pc_2e9e6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e9e6 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2e9e6 = add i32 %v0_2e9e6, -1
  store i32 %v1_2e9e6, i32* %ecx.global-to-local, align 8
  %v0_2e9e8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e9e8
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP12CTransactionSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e9ea:
  %v1_2ea0a = inttoptr i32 %arg2 to i32*
  %v2_2ea0a = load i32, i32* %v1_2ea0a, align 4
  store i32 %v2_2ea0a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ea1d

bb:                                               ; preds = %dec_label_pc_2e9ea
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2ea1b = call i32 @function_2ea22(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2ea1d

dec_label_pc_2ea1d:                               ; preds = %bb, %dec_label_pc_2e9ea
  %v4_2ea1b = phi i32 [ %v3_2ea1b, %bb ], [ 0, %dec_label_pc_2e9ea ]
  ret i32 %v4_2ea1b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2ea22(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ea22:
  %v0_2ea23 = load i32, i32* @eax, align 8
  ret i32 %v0_2ea23
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE14_M_create_nodeERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ea24:
  %stack_var_-17 = alloca i32, align 4
  %v1_2ea48 = call i32 @unknown_5f9c2(i32 %arg1)
  %v1_2ea53 = add i32 %v1_2ea48, 16
  %v1_2ea59 = call i32 @unknown_59c2b(i32 %v1_2ea53)
  %v2_2ea60 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_2ea60
}

define i32 @function_2ea68(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2ea68:
  %v0_2ea68 = load i32, i32* @eax, align 8
  %v11_2ea68 = and i32 %v0_2ea68, -252
  %v1_2ea6d = call i32 @unknown_59ba6(i32 %v11_2ea68)
  %v0_2ea75 = load i32, i32* @ebp, align 4
  %v1_2ea75 = add i32 %v0_2ea75, -32
  %v2_2ea75 = inttoptr i32 %v1_2ea75 to i32*
  %v3_2ea75 = load i32, i32* %v2_2ea75, align 4
  %v0_2ea7c = load i32, i32* @ebx, align 4
  %v1_2ea80 = add i32 %v0_2ea75, -13
  %v3_2ea86 = call i32 @unknown_5fa08(i32 %v1_2ea80, i32 %v0_2ea7c, i32 %v3_2ea75)
  %v0_2ea8b = load i32, i32* @ebp, align 4
  %v1_2ea8b = add i32 %v0_2ea8b, -13
  %v1_2ea91 = call i32 @unknown_59bf6(i32 %v1_2ea8b)
  %v0_2ea96 = load i32, i32* @ebp, align 4
  %v1_2ea96 = add i32 %v0_2ea96, -20
  %v2_2ea96 = inttoptr i32 %v1_2ea96 to i32*
  %v3_2ea96 = load i32, i32* %v2_2ea96, align 4
  store i32 %v3_2ea96, i32* @eax, align 8
  %v1_2ea99 = add i32 %v0_2ea96, -12
  %v2_2ea99 = inttoptr i32 %v1_2ea99 to i32*
  %v3_2ea99 = load i32, i32* %v2_2ea99, align 4
  %v1_2ea9c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ea9c = xor i32 %v1_2ea9c, %v3_2ea99
  %v3_2ea9c = icmp eq i32 %v2_2ea9c, 0
  store i32 %v2_2ea9c, i32* @edx, align 4
  br i1 %v3_2ea9c, label %bb, label %dec_label_pc_2eaa5

bb:                                               ; preds = %dec_label_pc_2ea68
  %v1_2eaa3 = call i32 @function_2eaaa()
  br label %dec_label_pc_2eaa5

dec_label_pc_2eaa5:                               ; preds = %bb, %dec_label_pc_2ea68
  %v2_2eaa3 = phi i32 [ %v1_2eaa3, %bb ], [ %v3_2ea96, %dec_label_pc_2ea68 ]
  ret i32 %v2_2eaa3
}

define i32 @function_2eaaa() local_unnamed_addr {
dec_label_pc_2eaaa:
  %v0_2eaae = load i32, i32* @eax, align 8
  ret i32 %v0_2eaae
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eab0:
  %v1_2ead0 = add i32 %arg2, 12
  %v2_2ead0 = inttoptr i32 %v1_2ead0 to i32*
  %v3_2ead0 = load i32, i32* %v2_2ead0, align 4
  %v2_2eadd = call i32 @unknown_59f0a(i32 %arg1, i32 %v3_2ead0)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2eaea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eaea:
  %v0_2eaea = load i32, i32* @eax, align 8
  %v1_2eaea = load i1, i1* @cf, align 1
  %v2_2eaea = zext i1 %v1_2eaea to i32
  %v3_2eaea = add i32 %v0_2eaea, 20
  %v4_2eaea = add i32 %v3_2eaea, %v2_2eaea
  %v14_2eaea = icmp eq i32 %v4_2eaea, 0
  store i32 %v4_2eaea, i32* @eax, align 8
  br i1 %v14_2eaea, label %bb, label %dec_label_pc_2eaf1

bb:                                               ; preds = %dec_label_pc_2eaea
  %v1_2eaef = call i32 @function_2eaf6()
  br label %dec_label_pc_2eaf1

dec_label_pc_2eaf1:                               ; preds = %bb, %dec_label_pc_2eaea
  %v2_2eaef = phi i32 [ %v1_2eaef, %bb ], [ %v4_2eaea, %dec_label_pc_2eaea ]
  ret i32 %v2_2eaef
}

define i32 @function_2eaf6() local_unnamed_addr {
dec_label_pc_2eaf6:
  %v0_2eaf7 = load i32, i32* @eax, align 8
  ret i32 %v0_2eaf7
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IK7uint256xEEbEC1ERKS4_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2eafa:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_2eb23 = inttoptr i32 %arg2 to i32*
  %v2_2eb23 = load i32, i32* %v1_2eb23, align 4
  store i32 %v2_2eb23, i32* %arg1, align 4
  %v2_2eb2a = load i8, i8* %tmp104, align 1
  %v3_2eb30 = add i32 %tmp109, 4
  %v4_2eb30 = inttoptr i32 %v3_2eb30 to i8*
  store i8 %v2_2eb2a, i8* %v4_2eb30, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2eb3f

bb:                                               ; preds = %dec_label_pc_2eafa
  %v5_2eb3d = call i32 @function_2eb44(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_2eb3f

dec_label_pc_2eb3f:                               ; preds = %bb, %dec_label_pc_2eafa
  %v6_2eb3d = phi i32 [ %v5_2eb3d, %bb ], [ 0, %dec_label_pc_2eafa ]
  ret i32 %v6_2eb3d
}

define i32 @function_2eb44(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2eb44:
  %v0_2eb45 = load i32, i32* @eax, align 8
  ret i32 %v0_2eb45
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK7uint256xEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2eb46:
  %v2_2eb60 = load i32, i32* %arg1, align 4
  ret i32 %v2_2eb60
}

define i32 @function_2eb82() local_unnamed_addr {
dec_label_pc_2eb82:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2eb82 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2eb82 = add i32 %v0_2eb82, -1
  store i32 %v1_2eb82, i32* %ecx.global-to-local, align 8
  %v0_2eb84 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2eb84
}

define i32 @_Z9SerializeI11CDataStream5CTxInSaIS1_EEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2eb85:
  %stack_var_-17 = alloca i32, align 4
  %v2_2ebae = ptrtoint i32* %stack_var_-17 to i32
  %v5_2ebd0 = call i32 @unknown_5fbf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_2ebae)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ebe1

bb:                                               ; preds = %dec_label_pc_2eb85
  %v1_2ebdf = call i32 @function_2ebe6()
  br label %dec_label_pc_2ebe1

dec_label_pc_2ebe1:                               ; preds = %bb, %dec_label_pc_2eb85
  %v2_2ebdf = phi i32 [ %v1_2ebdf, %bb ], [ 0, %dec_label_pc_2eb85 ]
  ret i32 %v2_2ebdf
}

define i32 @function_2ebe6() local_unnamed_addr {
dec_label_pc_2ebe6:
  %v0_2ebe7 = load i32, i32* @eax, align 8
  ret i32 %v0_2ebe7
}

define i32 @_Z9SerializeI11CDataStream6CTxOutSaIS1_EEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ebe8:
  %stack_var_-17 = alloca i32, align 4
  %v2_2ec11 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_2ec11
}

define i32 @function_2ec16(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ec16:
  %v0_2ec18 = load i32, i32* @ebp, align 4
  %v1_2ec18 = add i32 %v0_2ec18, -40
  %v2_2ec18 = inttoptr i32 %v1_2ec18 to i32*
  %v3_2ec18 = load i32, i32* %v2_2ec18, align 4
  %v1_2ec1f = add i32 %v0_2ec18, -36
  %v2_2ec1f = inttoptr i32 %v1_2ec1f to i32*
  %v3_2ec1f = load i32, i32* %v2_2ec1f, align 4
  %v1_2ec26 = add i32 %v0_2ec18, -32
  %v2_2ec26 = inttoptr i32 %v1_2ec26 to i32*
  %v3_2ec26 = load i32, i32* %v2_2ec26, align 4
  %v1_2ec2d = add i32 %v0_2ec18, -28
  %v2_2ec2d = inttoptr i32 %v1_2ec2d to i32*
  %v3_2ec2d = load i32, i32* %v2_2ec2d, align 4
  %v4_2ec33 = call i32 @unknown_5fd30(i32 %v3_2ec2d, i32 %v3_2ec26, i32 %v3_2ec1f, i32 %v3_2ec18)
  %v0_2ec38 = load i32, i32* @ebp, align 4
  %v1_2ec38 = add i32 %v0_2ec38, -12
  %v2_2ec38 = inttoptr i32 %v1_2ec38 to i32*
  %v3_2ec38 = load i32, i32* %v2_2ec38, align 4
  %v1_2ec3b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ec3b = xor i32 %v1_2ec3b, %v3_2ec38
  %v3_2ec3b = icmp eq i32 %v2_2ec3b, 0
  store i32 %v2_2ec3b, i32* @eax, align 8
  br i1 %v3_2ec3b, label %bb, label %dec_label_pc_2ec44

bb:                                               ; preds = %dec_label_pc_2ec16
  %v1_2ec42 = call i32 @function_2ec49()
  br label %dec_label_pc_2ec44

dec_label_pc_2ec44:                               ; preds = %bb, %dec_label_pc_2ec16
  %v2_2ec42 = phi i32 [ %v1_2ec42, %bb ], [ %v2_2ec3b, %dec_label_pc_2ec16 ]
  ret i32 %v2_2ec42

; uselistorder directives
  uselistorder i32 %v0_2ec18, { 1, 0, 2, 3 }
}

define i32 @function_2ec49() local_unnamed_addr {
dec_label_pc_2ec49:
  %v0_2ec4a = load i32, i32* @eax, align 8
  ret i32 %v0_2ec4a
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_2ec4c:
  %stack_var_-17 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  %v15_2ec80 = icmp eq i32 %arg1, %arg2
  %v1_2ec83 = icmp eq i1 %v15_2ec80, false
  br i1 %v1_2ec83, label %bb, label %dec_label_pc_2ec85

bb:                                               ; preds = %dec_label_pc_2ec4c
  %v6_2ec83 = sext i8 %arg4 to i32
  %v7_2ec83 = call i32 @function_2ecb2(i32 %v6_2ec83, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2ec85

dec_label_pc_2ec85:                               ; preds = %bb, %dec_label_pc_2ec4c
  %v2_2ec85 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_2ec85

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ec90() local_unnamed_addr {
dec_label_pc_2ec90:
  store i32 1, i32* @ebx, align 4
  %v0_2ec95 = load i32, i32* @ebp, align 4
  %v1_2ec95 = add i32 %v0_2ec95, -13
  %v1_2ec9c = add i32 %v0_2ec95, -36
  %v2_2ec9c = inttoptr i32 %v1_2ec9c to i32*
  %v3_2ec9c = load i32, i32* %v2_2ec9c, align 4
  %v2_2eca2 = call i32 @unknown_5b0a0(i32 %v3_2ec9c, i32 %v1_2ec95)
  %v4_2eca7 = trunc i32 %v2_2eca2 to i8
  %v5_2eca7 = icmp eq i8 %v4_2eca7, 0
  br i1 %v5_2eca7, label %bb, label %dec_label_pc_2ecab

bb:                                               ; preds = %dec_label_pc_2ec90
  %v5_2eca9 = call i32 @function_2ecb2(i32 %v3_2ec9c, i32 %v1_2ec95, i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_2ecab

dec_label_pc_2ecab:                               ; preds = %bb, %dec_label_pc_2ec90
  ret i32 1

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_2ecb2, { 1, 0 }
}

define i32 @function_2ecb2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ecb2:
  store i32 0, i32* @eax, align 8
  store i32 0, i32* @esi, align 4
  %v0_2ecb9 = load i32, i32* @ebx, align 4
  %v4_2ecb9 = trunc i32 %v0_2ecb9 to i8
  %v5_2ecb9 = icmp eq i8 %v4_2ecb9, 0
  br i1 %v5_2ecb9, label %bb, label %dec_label_pc_2ecbd

bb:                                               ; preds = %dec_label_pc_2ecb2
  %v1_2ecbb = call i32 @function_2ecc8()
  br label %dec_label_pc_2ecbd

dec_label_pc_2ecbd:                               ; preds = %bb, %dec_label_pc_2ecb2
  %v0_2ecbd = load i32, i32* @ebp, align 4
  %v1_2ecbd = add i32 %v0_2ecbd, -13
  ret i32 %v1_2ecbd
}

define i32 @function_2ecc2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ecc2:
  %v0_2ecc2 = load i32, i32* @eax, align 8
  %v11_2ecc2 = and i32 %v0_2ecc2, -24
  ret i32 %v11_2ecc2
}

define i32 @function_2ecc8() local_unnamed_addr {
dec_label_pc_2ecc8:
  %v0_2ecc8 = load i32, i32* @esi, align 4
  %v4_2ecca = trunc i32 %v0_2ecc8 to i8
  %v5_2ecca = icmp eq i8 %v4_2ecca, 0
  br i1 %v5_2ecca, label %bb, label %dec_label_pc_2ecc8.dec_label_pc_2ecce_crit_edge

dec_label_pc_2ecc8.dec_label_pc_2ecce_crit_edge:  ; preds = %dec_label_pc_2ecc8
  %v2_2eccc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2ecce

bb:                                               ; preds = %dec_label_pc_2ecc8
  %v1_2eccc = call i32 @function_2ece0()
  br label %dec_label_pc_2ecce

dec_label_pc_2ecce:                               ; preds = %dec_label_pc_2ecc8.dec_label_pc_2ecce_crit_edge, %bb
  %v2_2eccc = phi i32 [ %v2_2eccc.pre, %dec_label_pc_2ecc8.dec_label_pc_2ecce_crit_edge ], [ %v1_2eccc, %bb ]
  ret i32 %v2_2eccc

; uselistorder directives
  uselistorder label %dec_label_pc_2ecce, { 1, 0 }
}

define i32 @function_2ecdb() local_unnamed_addr {
dec_label_pc_2ecdb:
  %v0_2ecdb = call i32 @function_2ed83()
  ret i32 %v0_2ecdb
}

define i32 @function_2ece0() local_unnamed_addr {
dec_label_pc_2ece0:
  %v0_2ece0 = load i32, i32* @ebp, align 4
  %v1_2ece0 = add i32 %v0_2ece0, -28
  %v2_2ece0 = inttoptr i32 %v1_2ece0 to i32*
  %v3_2ece0 = load i32, i32* %v2_2ece0, align 4
  ret i32 %v3_2ece0
}

define i32 @function_2ece8(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ece8:
  %v2_2ece8 = load i32, i32* @ebx, align 4
  %v3_2ece8 = load i32, i32* @eax, align 8
  %v4_2ece8 = load i1, i1* @cf, align 1
  %v5_2ece8 = zext i1 %v4_2ece8 to i32
  %v6_2ece8 = add i32 %v3_2ece8, %v2_2ece8
  %v7_2ece8 = add i32 %v5_2ece8, %v6_2ece8
  %v30_2ece8 = inttoptr i32 %v2_2ece8 to i32*
  store i32 %v7_2ece8, i32* %v30_2ece8, align 4
  %v0_2ecea = load i32, i32* @eax, align 8
  %v2_2ecea = mul i32 %v0_2ecea, 8
  %v3_2ecea = add i32 %v0_2ecea, 1166741364
  %v4_2ecea = add i32 %v3_2ecea, %v2_2ecea
  %v5_2ecea = inttoptr i32 %v4_2ecea to i8*
  %v6_2ecea = load i8, i8* %v5_2ecea, align 1
  %v8_2ecea = trunc i32 %v0_2ecea to i8
  %v9_2ecea = add i8 %v6_2ecea, %v8_2ecea
  store i8 %v9_2ecea, i8* %v5_2ecea, align 1
  %v0_2ecf3 = load i32, i32* @ebp, align 4
  %v1_2ecf3 = add i32 %v0_2ecf3, 1
  %v9_2ecf3 = icmp eq i32 %v1_2ecf3, 0
  store i32 %v1_2ecf3, i32* @ebp, align 4
  %v0_2ecf4 = load i32, i32* @ecx, align 8
  %v2_2ecf4 = icmp eq i32 %v0_2ecf4, 1
  %v4_2ecf4 = or i1 %v9_2ecf3, %v2_2ecf4
  br i1 %v4_2ecf4, label %dec_label_pc_2ecf6, label %bb

bb:                                               ; preds = %dec_label_pc_2ece8
  %v6_2ecf4 = call i32 @function_2ed6a()
  br label %dec_label_pc_2ecf6

dec_label_pc_2ecf6:                               ; preds = %dec_label_pc_2ece8, %bb
  store i32 1, i32* @eax, align 8
  %v0_2ecfc = call i32 @function_2ed03()
  ret i32 %v0_2ecfc

; uselistorder directives
  uselistorder i32 %v0_2ecea, { 0, 2, 1 }
  uselistorder i32 %v2_2ece8, { 1, 0 }
  uselistorder label %dec_label_pc_2ecf6, { 1, 0 }
}

define i32 @function_2ecfe() local_unnamed_addr {
dec_label_pc_2ecfe:
  ret i32 0
}

define i32 @function_2ed03() local_unnamed_addr {
dec_label_pc_2ed03:
  %v0_2ed03 = load i32, i32* @eax, align 8
  %v4_2ed03 = trunc i32 %v0_2ed03 to i8
  %v5_2ed03 = icmp eq i8 %v4_2ed03, 0
  br i1 %v5_2ed03, label %bb, label %dec_label_pc_2ed07

bb:                                               ; preds = %dec_label_pc_2ed03
  %v1_2ed05 = call i32 @function_2ed13()
  br label %dec_label_pc_2ed07

dec_label_pc_2ed07:                               ; preds = %bb, %dec_label_pc_2ed03
  %v3_2ed07 = phi i32 [ %v1_2ed05, %bb ], [ %v0_2ed03, %dec_label_pc_2ed03 ]
  ret i32 %v3_2ed07
}

define i32 @function_2ed13() local_unnamed_addr {
dec_label_pc_2ed13:
  %v0_2ed13 = load i32, i32* @ebp, align 4
  %v1_2ed13 = add i32 %v0_2ed13, -32
  %v2_2ed13 = inttoptr i32 %v1_2ed13 to i32*
  %v3_2ed13 = load i32, i32* %v2_2ed13, align 4
  %v1_2ed1a = add i32 %v0_2ed13, -28
  %v2_2ed1a = inttoptr i32 %v1_2ed1a to i32*
  %v3_2ed1a = load i32, i32* %v2_2ed1a, align 4
  %v2_2ed20 = call i32 @unknown_569b4(i32 %v3_2ed1a, i32 %v3_2ed13)
  %v1_2ed25 = load i32, i32* @ebp, align 4
  %v2_2ed25 = add i32 %v1_2ed25, -24
  %v3_2ed25 = inttoptr i32 %v2_2ed25 to i32*
  store i32 %v2_2ed20, i32* %v3_2ed25, align 4
  %v0_2ed28 = load i32, i32* @ebp, align 4
  %v1_2ed37 = add i32 %v0_2ed28, -24
  %v2_2ed37 = inttoptr i32 %v1_2ed37 to i32*
  %v3_2ed37 = load i32, i32* %v2_2ed37, align 4
  ret i32 %v3_2ed37
}

define i32 @function_2ed6a() local_unnamed_addr {
dec_label_pc_2ed6a:
  %v0_2ed6d = load i32, i32* @ebp, align 4
  %v1_2ed6d = add i32 %v0_2ed6d, -20
  %v2_2ed6d = inttoptr i32 %v1_2ed6d to i32*
  %v3_2ed6d = load i32, i32* %v2_2ed6d, align 4
  ret i32 %v3_2ed6d
}

define i32 @function_2ed83() local_unnamed_addr {
dec_label_pc_2ed83:
  %v0_2ed83 = load i32, i32* @ebp, align 4
  %v1_2ed83 = add i32 %v0_2ed83, -12
  %v2_2ed83 = inttoptr i32 %v1_2ed83 to i32*
  %v3_2ed83 = load i32, i32* %v2_2ed83, align 4
  %v1_2ed86 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ed86 = icmp eq i32 %v1_2ed86, %v3_2ed83
  br i1 %v3_2ed86, label %bb, label %dec_label_pc_2ed8f

bb:                                               ; preds = %dec_label_pc_2ed83
  %v1_2ed8d = call i32 @function_2edc6()
  store i32 %v1_2ed8d, i32* @eax, align 8
  br label %dec_label_pc_2ed8f

dec_label_pc_2ed8f:                               ; preds = %bb, %dec_label_pc_2ed83
  %v0_2ed8f = call i32 @function_2edc1()
  ret i32 %v0_2ed8f
}

define i32 @function_2ed92() local_unnamed_addr {
dec_label_pc_2ed92:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ed92 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ed92
}

define i32 @function_2edc1() local_unnamed_addr {
dec_label_pc_2edc1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2edc6() local_unnamed_addr {
dec_label_pc_2edc6:
  %v0_2edcc = load i32, i32* @eax, align 8
  ret i32 %v0_2edcc
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2edce:
  %v1_2edee = inttoptr i32 %arg2 to i32*
  %v2_2edee = load i32, i32* %v1_2edee, align 4
  store i32 %v2_2edee, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ee01

bb:                                               ; preds = %dec_label_pc_2edce
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2edff = call i32 @function_2ee06(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2ee01

dec_label_pc_2ee01:                               ; preds = %bb, %dec_label_pc_2edce
  %v4_2edff = phi i32 [ %v3_2edff, %bb ], [ 0, %dec_label_pc_2edce ]
  ret i32 %v4_2edff

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2ee06(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ee06:
  %v0_2ee07 = load i32, i32* @eax, align 8
  ret i32 %v0_2ee07
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_S_valueEPKSt13_Rb_tree_nodeIS3_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee08:
  %v1_2ee22 = add i32 %arg1, 16
  store i32 %v1_2ee22, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ee31

bb:                                               ; preds = %dec_label_pc_2ee08
  %v2_2ee2f = call i32 @function_2ee36(i32 %arg1)
  br label %dec_label_pc_2ee31

dec_label_pc_2ee31:                               ; preds = %bb, %dec_label_pc_2ee08
  %v3_2ee2f = phi i32 [ %v2_2ee2f, %bb ], [ %v1_2ee22, %dec_label_pc_2ee08 ]
  ret i32 %v3_2ee2f
}

define i32 @function_2ee36(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee36:
  %v0_2ee37 = load i32, i32* @eax, align 8
  ret i32 %v0_2ee37
}

define i32 @_ZNSt10_Iter_baseIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEELb0EE7_S_baseES5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee38:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ee5e

bb:                                               ; preds = %dec_label_pc_2ee38
  %v2_2ee5c = call i32 @function_2ee63(i32 %arg1)
  br label %dec_label_pc_2ee5e

dec_label_pc_2ee5e:                               ; preds = %bb, %dec_label_pc_2ee38
  %v3_2ee5c = phi i32 [ %v2_2ee5c, %bb ], [ %arg1, %dec_label_pc_2ee38 ]
  ret i32 %v3_2ee5c
}

define i32 @function_2ee63(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee63:
  %v0_2ee64 = load i32, i32* @eax, align 8
  ret i32 %v0_2ee64
}

define i32 @_ZSt12__niter_baseIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEEENSt11_Niter_baseIT_E13iterator_typeES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee65:
  %v0_2ee71 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2ee71
}

define i32 @function_2ee79(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee79:
  %v0_2ee7c = load i32, i32* @ebp, align 4
  %v1_2ee7c = add i32 %v0_2ee7c, -28
  %v2_2ee7c = inttoptr i32 %v1_2ee7c to i32*
  %v3_2ee7c = load i32, i32* %v2_2ee7c, align 4
  %v1_2ee82 = call i32 @unknown_5dc9d(i32 %v3_2ee7c)
  store i32 %v1_2ee82, i32* @eax, align 8
  %v0_2ee87 = load i32, i32* @ebp, align 4
  %v1_2ee87 = add i32 %v0_2ee87, -12
  %v2_2ee87 = inttoptr i32 %v1_2ee87 to i32*
  %v3_2ee87 = load i32, i32* %v2_2ee87, align 4
  %v1_2ee8a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ee8a = icmp eq i32 %v1_2ee8a, %v3_2ee87
  br i1 %v3_2ee8a, label %bb, label %dec_label_pc_2ee93

bb:                                               ; preds = %dec_label_pc_2ee79
  %v1_2ee91 = call i32 @function_2ee98()
  br label %dec_label_pc_2ee93

dec_label_pc_2ee93:                               ; preds = %bb, %dec_label_pc_2ee79
  %v2_2ee91 = phi i32 [ %v1_2ee91, %bb ], [ %v1_2ee82, %dec_label_pc_2ee79 ]
  ret i32 %v2_2ee91
}

define i32 @function_2ee98() local_unnamed_addr {
dec_label_pc_2ee98:
  %v0_2ee99 = load i32, i32* @eax, align 8
  ret i32 %v0_2ee99
}

define i32 @_ZSt22__copy_move_backward_aILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ee9a:
  %v3_2eed5 = call i32 @unknown_600ed(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2eed5, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2eee6

bb:                                               ; preds = %dec_label_pc_2ee9a
  %v1_2eee4 = call i32 @function_2eeeb()
  br label %dec_label_pc_2eee6

dec_label_pc_2eee6:                               ; preds = %bb, %dec_label_pc_2ee9a
  %v2_2eee4 = phi i32 [ %v1_2eee4, %bb ], [ %v3_2eed5, %dec_label_pc_2ee9a ]
  ret i32 %v2_2eee4
}

define i32 @function_2eeeb() local_unnamed_addr {
dec_label_pc_2eeeb:
  %v0_2eeec = load i32, i32* @eax, align 8
  ret i32 %v0_2eeec
}

define i32 @_ZNKSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE19_M_get_Tp_allocatorEv() local_unnamed_addr {
dec_label_pc_2eeee:
  %eax.global-to-local = alloca i32, align 4
  %v17_2eef1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2eef1
}

define i32 @function_2eef4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2eef4:
  %v0_2eef4 = load i32, i32* @ebp, align 4
  %v1_2eef4 = add i32 %v0_2eef4, 8
  %v2_2eef4 = inttoptr i32 %v1_2eef4 to i32*
  %v3_2eef4 = load i32, i32* %v2_2eef4, align 4
  %v2_2eef7 = add i32 %v0_2eef4, -28
  %v3_2eef7 = inttoptr i32 %v2_2eef7 to i32*
  store i32 %v3_2eef4, i32* %v3_2eef7, align 4
  %v0_2eefa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2ef00 = load i32, i32* @ebp, align 4
  %v2_2ef00 = add i32 %v1_2ef00, -12
  %v3_2ef00 = inttoptr i32 %v2_2ef00 to i32*
  store i32 %v0_2eefa, i32* %v3_2ef00, align 4
  %v0_2ef05 = load i32, i32* @ebp, align 4
  %v1_2ef05 = add i32 %v0_2ef05, -28
  %v2_2ef05 = inttoptr i32 %v1_2ef05 to i32*
  %v3_2ef05 = load i32, i32* %v2_2ef05, align 4
  store i32 %v3_2ef05, i32* @eax, align 8
  %v1_2ef08 = add i32 %v0_2ef05, -12
  %v2_2ef08 = inttoptr i32 %v1_2ef08 to i32*
  %v3_2ef08 = load i32, i32* %v2_2ef08, align 4
  %v1_2ef0b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ef0b = icmp eq i32 %v1_2ef0b, %v3_2ef08
  br i1 %v3_2ef0b, label %bb, label %dec_label_pc_2ef14

bb:                                               ; preds = %dec_label_pc_2eef4
  %v1_2ef12 = call i32 @function_2ef19()
  br label %dec_label_pc_2ef14

dec_label_pc_2ef14:                               ; preds = %bb, %dec_label_pc_2eef4
  %v2_2ef12 = phi i32 [ %v1_2ef12, %bb ], [ %v3_2ef05, %dec_label_pc_2eef4 ]
  ret i32 %v2_2ef12
}

define i32 @function_2ef19() local_unnamed_addr {
dec_label_pc_2ef19:
  %v0_2ef1a = load i32, i32* @eax, align 8
  ret i32 %v0_2ef1a
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef1c:
  store i32 214748364, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ef44

bb:                                               ; preds = %dec_label_pc_2ef1c
  %v2_2ef42 = call i32 @function_2ef49(i32 %arg1)
  br label %dec_label_pc_2ef44

dec_label_pc_2ef44:                               ; preds = %bb, %dec_label_pc_2ef1c
  %v3_2ef42 = phi i32 [ %v2_2ef42, %bb ], [ 214748364, %dec_label_pc_2ef1c ]
  ret i32 %v3_2ef42

; uselistorder directives
  uselistorder i32 214748364, { 0, 2, 1, 3 }
}

define i32 @function_2ef49(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef49:
  %v0_2ef4a = load i32, i32* @eax, align 8
  ret i32 %v0_2ef4a
}

define i32 @_ZSt18uninitialized_copyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ef4b:
  %v3_2ef82 = call i32 @unknown_6021a(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2ef82, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2ef93

bb:                                               ; preds = %dec_label_pc_2ef4b
  %v1_2ef91 = call i32 @function_2ef98()
  br label %dec_label_pc_2ef93

dec_label_pc_2ef93:                               ; preds = %bb, %dec_label_pc_2ef4b
  %v2_2ef91 = phi i32 [ %v1_2ef91, %bb ], [ %v3_2ef82, %dec_label_pc_2ef4b ]
  ret i32 %v2_2ef91
}

define i32 @function_2ef98() local_unnamed_addr {
dec_label_pc_2ef98:
  %v0_2ef99 = load i32, i32* @eax, align 8
  ret i32 %v0_2ef99
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ef9a:
  ret i32 0
}

define i32 @function_2efc3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2efc3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2efc4() local_unnamed_addr {
dec_label_pc_2efc4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2efc4 = load i32, i32* %ecx.global-to-local, align 8
  %v1_2efc4 = add i32 %v0_2efc4, -532313149
  %v2_2efc4 = inttoptr i32 %v1_2efc4 to i32*
  %v3_2efc4 = load i32, i32* %v2_2efc4, align 4
  %v4_2efc4 = add i32 %v3_2efc4, -1
  store i32 %v4_2efc4, i32* %v2_2efc4, align 4
  %v0_2efca = load i32, i32* %eax.global-to-local, align 8
  %v0_2efce = load i32, i32* %ebx.global-to-local, align 4
  %v2_2efd1 = call i32 @unknown_60310(i32 %v0_2efce, i32 %v0_2efca)
  store i32 %v2_2efd1, i32* %eax.global-to-local, align 8
  %v0_2efd6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2efd6 = add i32 %v0_2efd6, -28
  %v2_2efd6 = inttoptr i32 %v1_2efd6 to i32*
  %v3_2efd6 = load i32, i32* %v2_2efd6, align 4
  store i32 %v3_2efd6, i32* %eax.global-to-local, align 8
  %v0_2efd9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2efd9 = inttoptr i32 %v3_2efd6 to i32*
  store i32 %v0_2efd9, i32* %v2_2efd9, align 4
  %v0_2efdb = load i32, i32* %ebp.global-to-local, align 4
  %v1_2efdb = add i32 %v0_2efdb, -12
  %v2_2efdb = inttoptr i32 %v1_2efdb to i32*
  %v3_2efdb = load i32, i32* %v2_2efdb, align 4
  store i32 %v3_2efdb, i32* %eax.global-to-local, align 8
  %v1_2efde = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2efde = xor i32 %v1_2efde, %v3_2efdb
  %v3_2efde = icmp eq i32 %v2_2efde, 0
  store i32 %v2_2efde, i32* @eax, align 8
  br i1 %v3_2efde, label %bb, label %dec_label_pc_2efe7

bb:                                               ; preds = %dec_label_pc_2efc4
  %v1_2efe5 = call i32 @function_2f002()
  store i32 %v1_2efe5, i32* @eax, align 8
  br label %dec_label_pc_2efe7

dec_label_pc_2efe7:                               ; preds = %bb, %dec_label_pc_2efc4
  %v0_2efe7 = call i32 @function_2effd()
  store i32 %v0_2efe7, i32* %eax.global-to-local, align 8
  ret i32 %v0_2efe7

; uselistorder directives
  uselistorder i32 -532313149, { 0, 2, 1 }
}

define i32 @function_2effd() local_unnamed_addr {
dec_label_pc_2effd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f002() local_unnamed_addr {
dec_label_pc_2f002:
  %v0_2f008 = load i32, i32* @eax, align 8
  ret i32 %v0_2f008
}

define i32 @_Z11UnserializeI11CDataStream12CBlockHeaderEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f009:
  %v8_2f04d = call i32 @unknown_60459(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f05e

bb:                                               ; preds = %dec_label_pc_2f009
  %v1_2f05c = call i32 @function_2f063()
  br label %dec_label_pc_2f05e

dec_label_pc_2f05e:                               ; preds = %bb, %dec_label_pc_2f009
  %v2_2f05c = phi i32 [ %v1_2f05c, %bb ], [ 0, %dec_label_pc_2f009 ]
  ret i32 %v2_2f05c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f063() local_unnamed_addr {
dec_label_pc_2f063:
  %v0_2f064 = load i32, i32* @eax, align 8
  ret i32 %v0_2f064
}

define i32 @_Z11UnserializeI11CDataStream12CTransactionSaIS1_EEvRT_RSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f065:
  %stack_var_-17 = alloca i32, align 4
  %v2_2f08e = ptrtoint i32* %stack_var_-17 to i32
  %v5_2f0b0 = call i32 @unknown_6061a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_2f08e)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f0c1

bb:                                               ; preds = %dec_label_pc_2f065
  %v1_2f0bf = call i32 @function_2f0c6()
  br label %dec_label_pc_2f0c1

dec_label_pc_2f0c1:                               ; preds = %bb, %dec_label_pc_2f065
  %v2_2f0bf = phi i32 [ %v1_2f0bf, %bb ], [ 0, %dec_label_pc_2f065 ]
  ret i32 %v2_2f0bf
}

define i32 @function_2f0c6() local_unnamed_addr {
dec_label_pc_2f0c6:
  %v0_2f0c7 = load i32, i32* @eax, align 8
  ret i32 %v0_2f0c7
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f0c8:
  ret i32 %arg1
}

define i32 @function_2f0f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f0f4:
  %v0_2f0f4 = load i1, i1* @cf, align 1
  br i1 %v0_2f0f4, label %dec_label_pc_2f0f8, label %dec_label_pc_2f0f6

dec_label_pc_2f0f6:                               ; preds = %dec_label_pc_2f0f4
  %v1_2f0f4 = load i32, i32* @eax, align 8
  ret i32 %v1_2f0f4

dec_label_pc_2f0f8:                               ; preds = %dec_label_pc_2f0f4
  %v0_2f0f8 = load i32, i32* @ebp, align 4
  %v1_2f0f8 = add i32 %v0_2f0f8, 1
  store i32 %v1_2f0f8, i32* @ebp, align 4
  %v1_2f105 = add i32 %v0_2f0f8, -27
  %v2_2f105 = inttoptr i32 %v1_2f105 to i32*
  %v3_2f105 = load i32, i32* %v2_2f105, align 4
  %v1_2f108 = inttoptr i32 %v3_2f105 to i32*
  store i32 ptrtoint (%vtable_3f7bc_type* @global_var_3f7bc.2868 to i32), i32* %v1_2f108, align 4
  %v0_2f10e = load i32, i32* @ebp, align 4
  %v1_2f10e = add i32 %v0_2f10e, -28
  %v2_2f10e = inttoptr i32 %v1_2f10e to i32*
  %v3_2f10e = load i32, i32* %v2_2f10e, align 4
  %v1_2f111 = add i32 %v3_2f10e, 8
  %v2_2f111 = inttoptr i32 %v1_2f111 to i32*
  store i32 ptrtoint (i32* @global_var_3f7d0.2869 to i32), i32* %v2_2f111, align 4
  %v0_2f118 = load i32, i32* @ebp, align 4
  %v1_2f118 = add i32 %v0_2f118, -12
  %v2_2f118 = inttoptr i32 %v1_2f118 to i32*
  %v3_2f118 = load i32, i32* %v2_2f118, align 4
  %v1_2f11b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f11b = xor i32 %v1_2f11b, %v3_2f118
  %v3_2f11b = icmp eq i32 %v2_2f11b, 0
  store i32 %v2_2f11b, i32* @eax, align 8
  br i1 %v3_2f11b, label %bb, label %dec_label_pc_2f124

bb:                                               ; preds = %dec_label_pc_2f0f8
  %v1_2f122 = call i32 @function_2f129()
  br label %dec_label_pc_2f124

dec_label_pc_2f124:                               ; preds = %bb, %dec_label_pc_2f0f8
  %v2_2f122 = phi i32 [ %v1_2f122, %bb ], [ %v2_2f11b, %dec_label_pc_2f0f8 ]
  ret i32 %v2_2f122

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f7bc_type* @global_var_3f7bc.2868 to i32), { 2, 1, 0 }
}

define i32 @function_2f129() local_unnamed_addr {
dec_label_pc_2f129:
  %v0_2f12a = load i32, i32* @eax, align 8
  ret i32 %v0_2f12a
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f12c:
  %eax.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* %eax.global-to-local, align 8
  %v2_2f157 = call i32 @unknown_5649e(i32 %tmp102, i32 %arg2)
  %v1_2f15f = add i32 %tmp102, 28
  store i32 %v1_2f15f, i32* %eax.global-to-local, align 8
  %v1_2f165 = call i32 @unknown_49a90(i32 %v1_2f15f)
  store i32 ptrtoint (%vtable_3f75c_type* @global_var_3f75c.2870 to i32), i32* %arg1, align 4
  store i32 %tmp102, i32* %eax.global-to-local, align 8
  %v1_2f176 = add i32 %tmp102, 8
  %v2_2f176 = inttoptr i32 %v1_2f176 to i32*
  store i32 ptrtoint (i32* @global_var_3f778.2871 to i32), i32* %v2_2f176, align 4
  %v3_2f176 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_2f176

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f75c_type* @global_var_3f75c.2870 to i32), { 2, 1, 0 }
}

define i32 @function_2f17f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f17f:
  %v0_2f181 = load i32, i32* @eax, align 8
  %v1_2f181 = add i32 %v0_2f181, 1
  %v2_2f182 = load i1, i1* @cf, align 1
  %v3_2f182 = zext i1 %v2_2f182 to i32
  %v4_2f182 = add i32 %v0_2f181, 121
  %v5_2f182 = add i32 %v4_2f182, %v3_2f182
  %v31_2f182 = urem i32 %v5_2f182, 256
  %v33_2f182 = and i32 %v1_2f181, -256
  %v34_2f182 = or i32 %v31_2f182, %v33_2f182
  %v1_2f18a = add i32 %v34_2f182, 8
  %v0_2f18d = load i32, i32* @ebp, align 4
  %v1_2f18d = add i32 %v0_2f18d, -28
  %v2_2f18d = inttoptr i32 %v1_2f18d to i32*
  %v3_2f18d = load i32, i32* %v2_2f18d, align 4
  %v1_2f190 = add i32 %v3_2f18d, 8
  %v2_2f19a = call i32 @function_3f152(i32 %v1_2f190, i32 %v1_2f18a)
  %v0_2f19f = call i32 @function_2f1c6()
  ret i32 %v0_2f19f
}

define i32 @function_2f1a2() local_unnamed_addr {
dec_label_pc_2f1a2:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f1a2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f1a2
}

define i32 @function_2f1c6() local_unnamed_addr {
dec_label_pc_2f1c6:
  %v0_2f1c6 = load i32, i32* @ebp, align 4
  %v1_2f1c6 = add i32 %v0_2f1c6, -12
  %v2_2f1c6 = inttoptr i32 %v1_2f1c6 to i32*
  %v3_2f1c6 = load i32, i32* %v2_2f1c6, align 4
  %v1_2f1c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f1c9 = xor i32 %v1_2f1c9, %v3_2f1c6
  %v3_2f1c9 = icmp eq i32 %v2_2f1c9, 0
  store i32 %v2_2f1c9, i32* @eax, align 8
  br i1 %v3_2f1c9, label %bb, label %dec_label_pc_2f1d2

bb:                                               ; preds = %dec_label_pc_2f1c6
  %v1_2f1d0 = call i32 @function_2f1d7()
  br label %dec_label_pc_2f1d2

dec_label_pc_2f1d2:                               ; preds = %bb, %dec_label_pc_2f1c6
  %v2_2f1d0 = phi i32 [ %v1_2f1d0, %bb ], [ %v2_2f1c9, %dec_label_pc_2f1c6 ]
  ret i32 %v2_2f1d0
}

define i32 @function_2f1d7() local_unnamed_addr {
dec_label_pc_2f1d7:
  %v0_2f1dc = load i32, i32* @eax, align 8
  ret i32 %v0_2f1dc
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f1de:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp103, i32* %stack_var_-60, align 4
  %v2_2f208 = call i32 @unknown_5671c(i32 %tmp103, i32 %arg2)
  %v1_2f210 = add i32 %tmp103, 8
  store i32 %v1_2f210, i32* %stack_var_-60, align 4
  store i32 ptrtoint (%vtable_3f71c_type* @global_var_3f71c.2875 to i32), i32* %arg1, align 4
  %v2_2f227 = inttoptr i32 %v1_2f210 to i32*
  store i32 ptrtoint (i32* @global_var_3f730.2876 to i32), i32* %v2_2f227, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f23a

bb:                                               ; preds = %dec_label_pc_2f1de
  %v1_2f238 = load i32, i32* %stack_var_-60, align 4
  %v2_2f238 = call i32 @function_2f23f(i32 %v1_2f238)
  br label %dec_label_pc_2f23a

dec_label_pc_2f23a:                               ; preds = %bb, %dec_label_pc_2f1de
  %v3_2f238 = phi i32 [ %v2_2f238, %bb ], [ 0, %dec_label_pc_2f1de ]
  ret i32 %v3_2f238

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f71c_type* @global_var_3f71c.2875 to i32), { 2, 1, 0 }
}

define i32 @function_2f23f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f23f:
  %v0_2f240 = load i32, i32* @eax, align 8
  ret i32 %v0_2f240
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f242:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_2f26d = call i32 @unknown_567cc(i32 %tmp102, i32 %arg2)
  %v1_2f275 = add i32 %tmp102, 28
  %v1_2f27b = call i32 @unknown_49ba6(i32 %v1_2f275)
  store i32 ptrtoint (%vtable_3f6bc_type* @global_var_3f6bc.2877 to i32), i32* %arg1, align 4
  %v1_2f28c = add i32 %tmp102, 8
  %v2_2f28c = inttoptr i32 %v1_2f28c to i32*
  store i32 ptrtoint (i32* @global_var_3f6d8.2878 to i32), i32* %v2_2f28c, align 4
  %v2_2f296 = inttoptr i32 %v1_2f275 to i32*
  store i32 ptrtoint (i32* @global_var_3f6e8.2879 to i32), i32* %v2_2f296, align 4
  %v1_2f2a0 = add i32 %arg2, 8
  store i32 %v1_2f28c, i32* @eax, align 8
  %v2_2f2b0 = call i32 @function_3f268(i32 %v1_2f28c, i32 %v1_2f2a0)
  %v0_2f2b5 = call i32 @function_2f2dc()
  ret i32 %v0_2f2b5

; uselistorder directives
  uselistorder i32 %v1_2f28c, { 1, 0, 2 }
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_3f6bc_type* @global_var_3f6bc.2877 to i32), { 2, 1, 0 }
}

define i32 @function_2f2b8() local_unnamed_addr {
dec_label_pc_2f2b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f2b8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f2b8
}

define i32 @function_2f2dc() local_unnamed_addr {
dec_label_pc_2f2dc:
  %v0_2f2dc = load i32, i32* @ebp, align 4
  %v1_2f2dc = add i32 %v0_2f2dc, -12
  %v2_2f2dc = inttoptr i32 %v1_2f2dc to i32*
  %v3_2f2dc = load i32, i32* %v2_2f2dc, align 4
  %v1_2f2df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f2df = xor i32 %v1_2f2df, %v3_2f2dc
  %v3_2f2df = icmp eq i32 %v2_2f2df, 0
  store i32 %v2_2f2df, i32* @eax, align 8
  br i1 %v3_2f2df, label %bb, label %dec_label_pc_2f2e8

bb:                                               ; preds = %dec_label_pc_2f2dc
  %v1_2f2e6 = call i32 @function_2f2ed()
  br label %dec_label_pc_2f2e8

dec_label_pc_2f2e8:                               ; preds = %bb, %dec_label_pc_2f2dc
  %v2_2f2e6 = phi i32 [ %v1_2f2e6, %bb ], [ %v2_2f2df, %dec_label_pc_2f2dc ]
  ret i32 %v2_2f2e6
}

define i32 @function_2f2ed() local_unnamed_addr {
dec_label_pc_2f2ed:
  %v0_2f2f2 = load i32, i32* @eax, align 8
  ret i32 %v0_2f2f2
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f2f3:
  ret i32 0
}

define i32 @function_2f316(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f316:
  %v0_2f316 = load i32, i32* @ebp, align 4
  %v1_2f316 = add i32 %v0_2f316, -32
  %v2_2f316 = inttoptr i32 %v1_2f316 to i32*
  %v3_2f316 = load i32, i32* %v2_2f316, align 4
  %v1_2f319 = add i32 %v0_2f316, -28
  %v2_2f319 = inttoptr i32 %v1_2f319 to i32*
  %v3_2f319 = load i32, i32* %v2_2f319, align 4
  %v2_2f31e = sub i32 %v3_2f316, %v3_2f319
  store i32 %v2_2f31e, i32* @ecx, align 8
  %v2_2f322 = add i32 %v0_2f316, -16
  %v3_2f322 = inttoptr i32 %v2_2f322 to i32*
  store i32 %v2_2f31e, i32* %v3_2f322, align 4
  %v0_2f325 = load i32, i32* @ebp, align 4
  %v1_2f325 = add i32 %v0_2f325, -16
  %v2_2f325 = inttoptr i32 %v1_2f325 to i32*
  %v3_2f325 = load i32, i32* %v2_2f325, align 4
  %v10_2f325 = icmp eq i32 %v3_2f325, 0
  br i1 %v10_2f325, label %bb, label %dec_label_pc_2f32b

bb:                                               ; preds = %dec_label_pc_2f316
  %v1_2f329 = call i32 @function_2f349()
  %v0_2f32b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2f32b

dec_label_pc_2f32b:                               ; preds = %bb, %dec_label_pc_2f316
  %v0_2f33a = phi i32 [ %v0_2f32b.pre, %bb ], [ %v0_2f325, %dec_label_pc_2f316 ]
  %v1_2f32b = add i32 %v0_2f33a, -16
  %v2_2f32b = inttoptr i32 %v1_2f32b to i32*
  %v3_2f32e = load i32, i32* %v2_2f32b, align 4
  %v2_2f333 = add i32 %v0_2f33a, -36
  %v3_2f333 = inttoptr i32 %v2_2f333 to i32*
  %v4_2f333 = load i32, i32* %v3_2f333, align 4
  %v5_2f333 = sub i32 %v4_2f333, %v3_2f32e
  %v1_2f33a = add i32 %v0_2f33a, -28
  %v2_2f33a = inttoptr i32 %v1_2f33a to i32*
  %v3_2f33a = load i32, i32* %v2_2f33a, align 4
  store i32 %v3_2f33a, i32* @edx, align 4
  ret i32 %v5_2f333
}

define i32 @function_2f349() local_unnamed_addr {
dec_label_pc_2f349:
  %v0_2f349 = load i32, i32* @ebp, align 4
  %v1_2f349 = add i32 %v0_2f349, -16
  %v2_2f349 = inttoptr i32 %v1_2f349 to i32*
  %v3_2f349 = load i32, i32* %v2_2f349, align 4
  %v2_2f34e = add i32 %v0_2f349, -36
  %v3_2f34e = inttoptr i32 %v2_2f34e to i32*
  %v4_2f34e = load i32, i32* %v3_2f34e, align 4
  %v5_2f34e = sub i32 %v4_2f34e, %v3_2f349
  store i32 %v5_2f34e, i32* @eax, align 8
  %v1_2f351 = add i32 %v0_2f349, -12
  %v2_2f351 = inttoptr i32 %v1_2f351 to i32*
  %v3_2f351 = load i32, i32* %v2_2f351, align 4
  %v1_2f354 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2f354 = icmp eq i32 %v1_2f354, %v3_2f351
  br i1 %v3_2f354, label %bb, label %dec_label_pc_2f35d

bb:                                               ; preds = %dec_label_pc_2f349
  %v1_2f35b = call i32 @function_2f362()
  br label %dec_label_pc_2f35d

dec_label_pc_2f35d:                               ; preds = %bb, %dec_label_pc_2f349
  %v2_2f35b = phi i32 [ %v1_2f35b, %bb ], [ %v5_2f34e, %dec_label_pc_2f349 ]
  ret i32 %v2_2f35b
}

define i32 @function_2f362() local_unnamed_addr {
dec_label_pc_2f362:
  %v0_2f363 = load i32, i32* @eax, align 8
  ret i32 %v0_2f363
}

define i32 @_ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f364:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f38a

bb:                                               ; preds = %dec_label_pc_2f364
  %v2_2f388 = call i32 @function_2f38f(i32 %arg1)
  br label %dec_label_pc_2f38a

dec_label_pc_2f38a:                               ; preds = %bb, %dec_label_pc_2f364
  %v3_2f388 = phi i32 [ %v2_2f388, %bb ], [ %arg1, %dec_label_pc_2f364 ]
  ret i32 %v3_2f388
}

define i32 @function_2f38f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f38f:
  %v0_2f390 = load i32, i32* @eax, align 8
  ret i32 %v0_2f390
}

define i32 @_ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f391:
  %v1_2f3ae = call i32 @unknown_5e6f5(i32 %arg1)
  store i32 %v1_2f3ae, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f3bf

bb:                                               ; preds = %dec_label_pc_2f391
  %v1_2f3bd = call i32 @function_2f3c4()
  br label %dec_label_pc_2f3bf

dec_label_pc_2f3bf:                               ; preds = %bb, %dec_label_pc_2f391
  %v2_2f3bd = phi i32 [ %v1_2f3bd, %bb ], [ %v1_2f3ae, %dec_label_pc_2f391 ]
  ret i32 %v2_2f3bd
}

define i32 @function_2f3c4() local_unnamed_addr {
dec_label_pc_2f3c4:
  %v0_2f3c5 = load i32, i32* @eax, align 8
  ret i32 %v0_2f3c5
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f3c6:
  %v2_2f3f1 = sub i32 %arg2, %arg1
  %v12_2f3f1 = icmp eq i32 %v2_2f3f1, 0
  br i1 %v12_2f3f1, label %bb, label %dec_label_pc_2f3fe

bb:                                               ; preds = %dec_label_pc_2f3c6
  %v4_2f3fc = call i32 @function_2f41c(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2f3fe

dec_label_pc_2f3fe:                               ; preds = %bb, %dec_label_pc_2f3c6
  %v5_2f406 = sub i32 %arg3, %v2_2f3f1
  ret i32 %v5_2f406
}

define i32 @function_2f41c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f41c:
  %v0_2f41c = load i32, i32* @ebp, align 4
  %v1_2f41c = add i32 %v0_2f41c, -16
  %v2_2f41c = inttoptr i32 %v1_2f41c to i32*
  %v3_2f41c = load i32, i32* %v2_2f41c, align 4
  %v2_2f421 = add i32 %v0_2f41c, -36
  %v3_2f421 = inttoptr i32 %v2_2f421 to i32*
  %v4_2f421 = load i32, i32* %v3_2f421, align 4
  %v5_2f421 = sub i32 %v4_2f421, %v3_2f41c
  store i32 %v5_2f421, i32* @eax, align 8
  %v1_2f424 = add i32 %v0_2f41c, -12
  %v2_2f424 = inttoptr i32 %v1_2f424 to i32*
  %v3_2f424 = load i32, i32* %v2_2f424, align 4
  %v1_2f427 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2f427 = icmp eq i32 %v1_2f427, %v3_2f424
  br i1 %v3_2f427, label %bb, label %dec_label_pc_2f430

bb:                                               ; preds = %dec_label_pc_2f41c
  %v1_2f42e = call i32 @function_2f435()
  br label %dec_label_pc_2f430

dec_label_pc_2f430:                               ; preds = %bb, %dec_label_pc_2f41c
  %v2_2f42e = phi i32 [ %v1_2f42e, %bb ], [ %v5_2f421, %dec_label_pc_2f41c ]
  ret i32 %v2_2f42e
}

define i32 @function_2f435() local_unnamed_addr {
dec_label_pc_2f435:
  %v0_2f436 = load i32, i32* @eax, align 8
  ret i32 %v0_2f436
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_Rxii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f437:
  %v7_2f475 = call i32 @unknown_41071(i32 %arg1, i32 %arg2, i32 8, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f486

bb:                                               ; preds = %dec_label_pc_2f437
  %v1_2f484 = call i32 @function_2f48b()
  br label %dec_label_pc_2f486

dec_label_pc_2f486:                               ; preds = %bb, %dec_label_pc_2f437
  %v2_2f484 = phi i32 [ %v1_2f484, %bb ], [ 0, %dec_label_pc_2f437 ]
  ret i32 %v2_2f484

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f48b() local_unnamed_addr {
dec_label_pc_2f48b:
  %v0_2f48c = load i32, i32* @eax, align 8
  ret i32 %v0_2f48c
}

define i32 @_ZNK9CFlatData9SerializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f48e:
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_2f4ba = add i32 %tmp108, 4
  %v2_2f4ba = inttoptr i32 %v1_2f4ba to i32*
  %v3_2f4ba = load i32, i32* %v2_2f4ba, align 4
  %v2_2f4c2 = load i32, i32* %arg1, align 4
  %v2_2f4c4 = sub i32 %v3_2f4ba, %v2_2f4c2
  %v7_2f4d9 = call i32 @unknown_41230(i32 %arg2, i32 %v2_2f4c2, i32 %v2_2f4c4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %tmp108)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f4ea

bb:                                               ; preds = %dec_label_pc_2f48e
  %v1_2f4e8 = call i32 @function_2f4ef()
  br label %dec_label_pc_2f4ea

dec_label_pc_2f4ea:                               ; preds = %bb, %dec_label_pc_2f48e
  %v2_2f4e8 = phi i32 [ %v1_2f4e8, %bb ], [ 0, %dec_label_pc_2f48e ]
  ret i32 %v2_2f4e8

; uselistorder directives
  uselistorder i32 %tmp108, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2f4ef() local_unnamed_addr {
dec_label_pc_2f4ef:
  %v0_2f4f0 = load i32, i32* @eax, align 8
  ret i32 %v0_2f4f0
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f4f2:
  %v3_2f51f = call i32 @unknown_60bca(i32 %arg1, i32 1, i32 0)
  ret i32 %v3_2f51f
}

define i32 @function_2f525(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f525:
  %v0_2f527 = load i32, i32* @edx, align 4
  %v1_2f527 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2f527 = icmp eq i32 %v1_2f527, %v0_2f527
  br i1 %v3_2f527, label %bb, label %dec_label_pc_2f525.dec_label_pc_2f530_crit_edge

dec_label_pc_2f525.dec_label_pc_2f530_crit_edge:  ; preds = %dec_label_pc_2f525
  %v2_2f52e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2f530

bb:                                               ; preds = %dec_label_pc_2f525
  %v1_2f52e = call i32 @function_2f535()
  br label %dec_label_pc_2f530

dec_label_pc_2f530:                               ; preds = %dec_label_pc_2f525.dec_label_pc_2f530_crit_edge, %bb
  %v2_2f52e = phi i32 [ %v2_2f52e.pre, %dec_label_pc_2f525.dec_label_pc_2f530_crit_edge ], [ %v1_2f52e, %bb ]
  ret i32 %v2_2f52e

; uselistorder directives
  uselistorder label %dec_label_pc_2f530, { 1, 0 }
}

define i32 @function_2f535() local_unnamed_addr {
dec_label_pc_2f535:
  %v0_2f536 = load i32, i32* @eax, align 8
  ret i32 %v0_2f536
}

define i32 @_ZNSt4pairIKSsSsEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f538:
  ret i32 %arg1
}

define i32 @function_2f580() local_unnamed_addr {
dec_label_pc_2f580:
  %v0_2f580 = call i32 @function_2f599()
  ret i32 %v0_2f580
}

define i32 @function_2f583() local_unnamed_addr {
dec_label_pc_2f583:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f583 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f583
}

define i32 @function_2f599() local_unnamed_addr {
dec_label_pc_2f599:
  %v0_2f599 = load i32, i32* @ebp, align 4
  %v1_2f599 = add i32 %v0_2f599, -12
  %v2_2f599 = inttoptr i32 %v1_2f599 to i32*
  %v3_2f599 = load i32, i32* %v2_2f599, align 4
  %v1_2f59c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f59c = xor i32 %v1_2f59c, %v3_2f599
  %v3_2f59c = icmp eq i32 %v2_2f59c, 0
  store i32 %v2_2f59c, i32* @eax, align 8
  br i1 %v3_2f59c, label %bb, label %dec_label_pc_2f5a5

bb:                                               ; preds = %dec_label_pc_2f599
  %v1_2f5a3 = call i32 @function_2f5aa()
  br label %dec_label_pc_2f5a5

dec_label_pc_2f5a5:                               ; preds = %bb, %dec_label_pc_2f599
  %v2_2f5a3 = phi i32 [ %v1_2f5a3, %bb ], [ %v2_2f59c, %dec_label_pc_2f599 ]
  ret i32 %v2_2f5a3
}

define i32 @function_2f5aa() local_unnamed_addr {
dec_label_pc_2f5aa:
  %v0_2f5af = load i32, i32* @eax, align 8
  ret i32 %v0_2f5af
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEE9constructEPS3_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f5b0:
  %v2_2f5e4 = call i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSJ_17convert_copy_intoEEENT_11result_typeERSM_(i32 8, i32 %arg2)
  %v1_2f5eb = icmp eq i32 %v2_2f5e4, 0
  br i1 %v1_2f5eb, label %bb, label %dec_label_pc_2f5ef

bb:                                               ; preds = %dec_label_pc_2f5b0
  %v1_2f5ed = call i32 @function_2f618()
  br label %dec_label_pc_2f5ef

dec_label_pc_2f5ef:                               ; preds = %bb, %dec_label_pc_2f5b0
  %v2_2f5f9 = call i32 @unknown_5eae8(i32 %v2_2f5e4, i32 %arg3)
  %v0_2f5fe = call i32 @function_2f618()
  ret i32 %v0_2f5fe

; uselistorder directives
  uselistorder i32 ()* @function_2f618, { 1, 0 }
}

define i32 @function_2f618() local_unnamed_addr {
dec_label_pc_2f618:
  %v0_2f618 = load i32, i32* @ebp, align 4
  %v1_2f618 = add i32 %v0_2f618, -28
  %v2_2f618 = inttoptr i32 %v1_2f618 to i32*
  %v3_2f618 = load i32, i32* %v2_2f618, align 4
  %v1_2f61b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f61b = xor i32 %v1_2f61b, %v3_2f618
  %v3_2f61b = icmp eq i32 %v2_2f61b, 0
  store i32 %v2_2f61b, i32* @eax, align 8
  br i1 %v3_2f61b, label %bb, label %dec_label_pc_2f624

bb:                                               ; preds = %dec_label_pc_2f618
  %v1_2f622 = call i32 @function_2f629()
  br label %dec_label_pc_2f624

dec_label_pc_2f624:                               ; preds = %bb, %dec_label_pc_2f618
  %v2_2f622 = phi i32 [ %v1_2f622, %bb ], [ %v2_2f61b, %dec_label_pc_2f618 ]
  ret i32 %v2_2f622
}

define i32 @function_2f629() local_unnamed_addr {
dec_label_pc_2f629:
  %v0_2f630 = load i32, i32* @eax, align 8
  ret i32 %v0_2f630
}

define i32 @_ZSt13__adjust_heapIPxixEvT_T0_S2_T1_() local_unnamed_addr {
dec_label_pc_2f631:
  %eax.global-to-local = alloca i32, align 4
  %v5_2f634 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2f634
}

define i32 @function_2f636(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f636:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f638 = load i32, i32* @ebp, align 4
  %v1_2f638 = add i32 %v0_2f638, 8
  %v2_2f638 = inttoptr i32 %v1_2f638 to i32*
  %v3_2f638 = load i32, i32* %v2_2f638, align 4
  store i32 %v3_2f638, i32* %eax.global-to-local, align 8
  %v2_2f63b = add i32 %v0_2f638, -28
  %v3_2f63b = inttoptr i32 %v2_2f63b to i32*
  store i32 %v3_2f638, i32* %v3_2f63b, align 4
  %v0_2f63e = load i32, i32* @ebp, align 4
  %v1_2f63e = add i32 %v0_2f63e, 12
  %v2_2f63e = inttoptr i32 %v1_2f63e to i32*
  %v3_2f63e = load i32, i32* %v2_2f63e, align 4
  store i32 %v3_2f63e, i32* %eax.global-to-local, align 8
  %v2_2f641 = add i32 %v0_2f63e, -32
  %v3_2f641 = inttoptr i32 %v2_2f641 to i32*
  store i32 %v3_2f63e, i32* %v3_2f641, align 4
  %v0_2f644 = load i32, i32* @ebp, align 4
  %v1_2f644 = add i32 %v0_2f644, 16
  %v2_2f644 = inttoptr i32 %v1_2f644 to i32*
  %v3_2f644 = load i32, i32* %v2_2f644, align 4
  store i32 %v3_2f644, i32* %eax.global-to-local, align 8
  %v2_2f647 = add i32 %v0_2f644, -36
  %v3_2f647 = inttoptr i32 %v2_2f647 to i32*
  store i32 %v3_2f644, i32* %v3_2f647, align 4
  %v0_2f64a = load i32, i32* @ebp, align 4
  %v1_2f64a = add i32 %v0_2f64a, 20
  %v2_2f64a = inttoptr i32 %v1_2f64a to i32*
  %v3_2f64a = load i32, i32* %v2_2f64a, align 4
  store i32 %v3_2f64a, i32* %eax.global-to-local, align 8
  %v2_2f64d = add i32 %v0_2f64a, -48
  %v3_2f64d = inttoptr i32 %v2_2f64d to i32*
  store i32 %v3_2f64a, i32* %v3_2f64d, align 4
  %v0_2f650 = load i32, i32* @ebp, align 4
  %v1_2f650 = add i32 %v0_2f650, 24
  %v2_2f650 = inttoptr i32 %v1_2f650 to i32*
  %v3_2f650 = load i32, i32* %v2_2f650, align 4
  store i32 %v3_2f650, i32* %eax.global-to-local, align 8
  %v2_2f653 = add i32 %v0_2f650, -44
  %v3_2f653 = inttoptr i32 %v2_2f653 to i32*
  store i32 %v3_2f650, i32* %v3_2f653, align 4
  %v0_2f656 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2f65c = load i32, i32* @ebp, align 4
  %v2_2f65c = add i32 %v1_2f65c, -12
  %v3_2f65c = inttoptr i32 %v2_2f65c to i32*
  store i32 %v0_2f656, i32* %v3_2f65c, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2f661 = load i32, i32* @ebp, align 4
  %v1_2f661 = add i32 %v0_2f661, -32
  %v2_2f661 = inttoptr i32 %v1_2f661 to i32*
  %v3_2f661 = load i32, i32* %v2_2f661, align 4
  store i32 %v3_2f661, i32* %eax.global-to-local, align 8
  %v2_2f664 = add i32 %v0_2f661, -16
  %v3_2f664 = inttoptr i32 %v2_2f664 to i32*
  store i32 %v3_2f661, i32* %v3_2f664, align 4
  %v0_2f667 = load i32, i32* @ebp, align 4
  %v1_2f667 = add i32 %v0_2f667, -32
  %v2_2f667 = inttoptr i32 %v1_2f667 to i32*
  %v3_2f667 = load i32, i32* %v2_2f667, align 4
  store i32 %v3_2f667, i32* %eax.global-to-local, align 8
  %v2_2f66a = add i32 %v0_2f667, -20
  %v3_2f66a = inttoptr i32 %v2_2f66a to i32*
  store i32 %v3_2f667, i32* %v3_2f66a, align 4
  %v0_2f66d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f66d
}

define i32 @function_2f689(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f689:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2f689 = load i32, i32* @ebp, align 4
  %v1_2f689 = add i32 %v0_2f689, 1
  store i32 %v1_2f689, i32* %ebp.global-to-local, align 4
  %v0_2f68b = load i32, i32* @eax, align 8
  %v1_2f68b = mul i32 %v0_2f68b, 8
  %v2_2f68e = add i32 %v1_2f68b, -8
  %v2_2f691 = add i32 %v0_2f689, -27
  %v3_2f691 = inttoptr i32 %v2_2f691 to i32*
  %v4_2f691 = load i32, i32* %v3_2f691, align 4
  %v5_2f691 = add i32 %v4_2f691, %v2_2f68e
  %v1_2f694 = add i32 %v5_2f691, 4
  %v2_2f694 = inttoptr i32 %v1_2f694 to i32*
  %v3_2f694 = load i32, i32* %v2_2f694, align 4
  store i32 %v3_2f694, i32* %edx.global-to-local, align 4
  %v1_2f697 = inttoptr i32 %v5_2f691 to i32*
  %v2_2f697 = load i32, i32* %v1_2f697, align 4
  %v0_2f699 = load i32, i32* @ebx, align 4
  %v8_2f69b = icmp sgt i32 %v0_2f699, %v3_2f694
  br i1 %v8_2f69b, label %dec_label_pc_2f6a9, label %dec_label_pc_2f69d

dec_label_pc_2f69d:                               ; preds = %dec_label_pc_2f689
  %v5_2f69f = icmp slt i32 %v0_2f699, %v3_2f694
  br i1 %v5_2f69f, label %dec_label_pc_2f6a5, label %dec_label_pc_2f6a1

dec_label_pc_2f6a1:                               ; preds = %dec_label_pc_2f69d
  %v0_2f6a1 = load i32, i32* @ecx, align 8
  %v7_2f6a1 = icmp ult i32 %v0_2f6a1, %v2_2f697
  %v1_2f6a3 = icmp eq i1 %v7_2f6a1, false
  br i1 %v1_2f6a3, label %dec_label_pc_2f6a9, label %dec_label_pc_2f6a5

dec_label_pc_2f6a5:                               ; preds = %dec_label_pc_2f6a1, %dec_label_pc_2f69d
  %v1_2f6a5 = add i32 %v0_2f689, -19
  %v2_2f6a5 = inttoptr i32 %v1_2f6a5 to i32*
  %v3_2f6a5 = load i32, i32* %v2_2f6a5, align 4
  %v4_2f6a5 = add i32 %v3_2f6a5, -1
  store i32 %v4_2f6a5, i32* %v2_2f6a5, align 4
  %v0_2f6a9.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2f6a9

dec_label_pc_2f6a9:                               ; preds = %dec_label_pc_2f6a5, %dec_label_pc_2f6a1, %dec_label_pc_2f689
  %v1_2f6ba = phi i32 [ %v0_2f6a9.pre, %dec_label_pc_2f6a5 ], [ %v1_2f689, %dec_label_pc_2f6a1 ], [ %v1_2f689, %dec_label_pc_2f689 ]
  %v1_2f6a9 = add i32 %v1_2f6ba, -32
  %v2_2f6a9 = inttoptr i32 %v1_2f6a9 to i32*
  %v3_2f6a9 = load i32, i32* %v2_2f6a9, align 4
  %v2_2f6ac = mul i32 %v3_2f6a9, 8
  store i32 %v2_2f6ac, i32* %ecx.global-to-local, align 8
  %v2_2f6b1 = add i32 %v1_2f6ba, -28
  %v3_2f6b1 = inttoptr i32 %v2_2f6b1 to i32*
  %v4_2f6b1 = load i32, i32* %v3_2f6b1, align 4
  %v5_2f6b1 = add i32 %v4_2f6b1, %v2_2f6ac
  store i32 %v5_2f6b1, i32* %ecx.global-to-local, align 8
  %v1_2f6b4 = add i32 %v1_2f6ba, -20
  %v2_2f6b4 = inttoptr i32 %v1_2f6b4 to i32*
  %v3_2f6b4 = load i32, i32* %v2_2f6b4, align 4
  %v2_2f6b7 = mul i32 %v3_2f6b4, 8
  %v4_2f6ba = load i32, i32* %v3_2f6b1, align 4
  %v5_2f6ba = add i32 %v4_2f6ba, %v2_2f6b7
  %v1_2f6bd = add i32 %v5_2f6ba, 4
  %v2_2f6bd = inttoptr i32 %v1_2f6bd to i32*
  %v3_2f6bd = load i32, i32* %v2_2f6bd, align 4
  store i32 %v3_2f6bd, i32* %edx.global-to-local, align 4
  %v1_2f6c0 = inttoptr i32 %v5_2f6ba to i32*
  %v2_2f6c0 = load i32, i32* %v1_2f6c0, align 4
  %v2_2f6c2 = inttoptr i32 %v5_2f6b1 to i32*
  store i32 %v2_2f6c0, i32* %v2_2f6c2, align 4
  %v0_2f6c4 = load i32, i32* %edx.global-to-local, align 4
  %v1_2f6c4 = load i32, i32* %ecx.global-to-local, align 8
  %v2_2f6c4 = add i32 %v1_2f6c4, 4
  %v3_2f6c4 = inttoptr i32 %v2_2f6c4 to i32*
  store i32 %v0_2f6c4, i32* %v3_2f6c4, align 4
  %v0_2f6c7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2f6c7 = add i32 %v0_2f6c7, -20
  %v2_2f6c7 = inttoptr i32 %v1_2f6c7 to i32*
  %v3_2f6c7 = load i32, i32* %v2_2f6c7, align 4
  %v2_2f6ca = add i32 %v0_2f6c7, -32
  %v3_2f6ca = inttoptr i32 %v2_2f6ca to i32*
  store i32 %v3_2f6c7, i32* %v3_2f6ca, align 4
  %v0_2f6cd = load i32, i32* %ebp.global-to-local, align 4
  %v1_2f6cd = add i32 %v0_2f6cd, -36
  %v2_2f6cd = inttoptr i32 %v1_2f6cd to i32*
  %v3_2f6cd = load i32, i32* %v2_2f6cd, align 4
  %v1_2f6d0 = add i32 %v3_2f6cd, -1
  %tmp16 = icmp slt i32 %v1_2f6d0, 0
  %v2_2f6d5 = zext i1 %tmp16 to i32
  store i32 %v2_2f6d5, i32* %edx.global-to-local, align 4
  %v2_2f6dc = add i32 %v0_2f6cd, -20
  %v3_2f6dc = inttoptr i32 %v2_2f6dc to i32*
  %v3_2f6e6 = load i32, i32* %v2_2f6cd, align 4
  %v1_2f6e9 = urem i32 %v3_2f6e6, 2
  %v2_2f6e9 = icmp eq i32 %v1_2f6e9, 0
  %v1_2f6ee = icmp eq i1 %v2_2f6e9, false
  br i1 %v1_2f6ee, label %dec_label_pc_2f739, label %dec_label_pc_2f6f0

dec_label_pc_2f6f0:                               ; preds = %dec_label_pc_2f6a9
  %v3_2f6f0 = load i32, i32* %v2_2f6cd, align 4
  %v1_2f6f3 = add i32 %v3_2f6f0, -2
  %tmp17 = icmp slt i32 %v1_2f6f3, 0
  %v2_2f6f8 = zext i1 %tmp17 to i32
  store i32 %v2_2f6f8, i32* %edx.global-to-local, align 4
  %v2_2f6fb = add i32 %v2_2f6f8, %v1_2f6f3
  %v2_2f6fd = sdiv i32 %v2_2f6fb, 2
  %v4_2f6ff = load i32, i32* %v3_2f6dc, align 4
  %v15_2f6ff = icmp eq i32 %v2_2f6fd, %v4_2f6ff
  %v1_2f702 = icmp eq i1 %v15_2f6ff, false
  br i1 %v1_2f702, label %dec_label_pc_2f739, label %dec_label_pc_2f704

dec_label_pc_2f704:                               ; preds = %dec_label_pc_2f6f0
  %v1_2f707 = mul i32 %v4_2f6ff, 2
  %v2_2f70a = add i32 %v1_2f707, 2
  store i32 %v2_2f70a, i32* %v3_2f6dc, align 4
  %v0_2f70f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2f70f = add i32 %v0_2f70f, -32
  %v2_2f70f = inttoptr i32 %v1_2f70f to i32*
  %v3_2f70f = load i32, i32* %v2_2f70f, align 4
  %v2_2f712 = mul i32 %v3_2f70f, 8
  store i32 %v2_2f712, i32* %ecx.global-to-local, align 8
  %v2_2f717 = add i32 %v0_2f70f, -28
  %v3_2f717 = inttoptr i32 %v2_2f717 to i32*
  %v4_2f717 = load i32, i32* %v3_2f717, align 4
  %v5_2f717 = add i32 %v4_2f717, %v2_2f712
  store i32 %v5_2f717, i32* %ecx.global-to-local, align 8
  %v1_2f71a = add i32 %v0_2f70f, -20
  %v2_2f71a = inttoptr i32 %v1_2f71a to i32*
  %v3_2f71a = load i32, i32* %v2_2f71a, align 4
  %v1_2f71d = mul i32 %v3_2f71a, 8
  %v2_2f720 = add i32 %v1_2f71d, -8
  %v4_2f723 = load i32, i32* %v3_2f717, align 4
  %v5_2f723 = add i32 %v4_2f723, %v2_2f720
  %v1_2f726 = add i32 %v5_2f723, 4
  %v2_2f726 = inttoptr i32 %v1_2f726 to i32*
  %v3_2f726 = load i32, i32* %v2_2f726, align 4
  store i32 %v3_2f726, i32* %edx.global-to-local, align 4
  %v1_2f729 = inttoptr i32 %v5_2f723 to i32*
  %v2_2f729 = load i32, i32* %v1_2f729, align 4
  %v2_2f72b = inttoptr i32 %v5_2f717 to i32*
  store i32 %v2_2f729, i32* %v2_2f72b, align 4
  %v0_2f72d = load i32, i32* %edx.global-to-local, align 4
  %v1_2f72d = load i32, i32* %ecx.global-to-local, align 8
  %v2_2f72d = add i32 %v1_2f72d, 4
  %v3_2f72d = inttoptr i32 %v2_2f72d to i32*
  store i32 %v0_2f72d, i32* %v3_2f72d, align 4
  %v0_2f730 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2f730 = add i32 %v0_2f730, -20
  %v2_2f730 = inttoptr i32 %v1_2f730 to i32*
  %v3_2f730 = load i32, i32* %v2_2f730, align 4
  %v1_2f733 = add i32 %v3_2f730, -1
  %v2_2f736 = add i32 %v0_2f730, -32
  %v3_2f736 = inttoptr i32 %v2_2f736 to i32*
  store i32 %v1_2f733, i32* %v3_2f736, align 4
  %v0_2f739.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2f739

dec_label_pc_2f739:                               ; preds = %dec_label_pc_2f704, %dec_label_pc_2f6f0, %dec_label_pc_2f6a9
  %v0_2f755 = phi i32 [ %v0_2f739.pre, %dec_label_pc_2f704 ], [ %v0_2f6cd, %dec_label_pc_2f6f0 ], [ %v0_2f6cd, %dec_label_pc_2f6a9 ]
  %v1_2f739 = add i32 %v0_2f755, -48
  %v2_2f739 = inttoptr i32 %v1_2f739 to i32*
  %v3_2f739 = load i32, i32* %v2_2f739, align 4
  %v1_2f73c = add i32 %v0_2f755, -44
  %v2_2f73c = inttoptr i32 %v1_2f73c to i32*
  %v3_2f73c = load i32, i32* %v2_2f73c, align 4
  store i32 %v3_2f73c, i32* %edx.global-to-local, align 4
  %v1_2f747 = add i32 %v0_2f755, -16
  %v2_2f747 = inttoptr i32 %v1_2f747 to i32*
  %v3_2f747 = load i32, i32* %v2_2f747, align 4
  %v1_2f74e = add i32 %v0_2f755, -32
  %v2_2f74e = inttoptr i32 %v1_2f74e to i32*
  %v3_2f74e = load i32, i32* %v2_2f74e, align 4
  %v1_2f755 = add i32 %v0_2f755, -28
  %v2_2f755 = inttoptr i32 %v1_2f755 to i32*
  %v3_2f755 = load i32, i32* %v2_2f755, align 4
  %v5_2f75b = call i32 @unknown_60d6d(i32 %v3_2f755, i32 %v3_2f74e, i32 %v3_2f747, i32 %v3_2f739, i32 %v3_2f73c)
  %v0_2f760 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2f760 = add i32 %v0_2f760, -12
  %v2_2f760 = inttoptr i32 %v1_2f760 to i32*
  %v3_2f760 = load i32, i32* %v2_2f760, align 4
  %v1_2f763 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f763 = xor i32 %v1_2f763, %v3_2f760
  %v3_2f763 = icmp eq i32 %v2_2f763, 0
  store i32 %v2_2f763, i32* @eax, align 8
  br i1 %v3_2f763, label %bb, label %dec_label_pc_2f76c

bb:                                               ; preds = %dec_label_pc_2f739
  %v1_2f76a = call i32 @function_2f771()
  br label %dec_label_pc_2f76c

dec_label_pc_2f76c:                               ; preds = %bb, %dec_label_pc_2f739
  %v2_2f76a = phi i32 [ %v1_2f76a, %bb ], [ %v2_2f763, %dec_label_pc_2f739 ]
  ret i32 %v2_2f76a

; uselistorder directives
  uselistorder i32 %v0_2f755, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_2f712, { 1, 0 }
  uselistorder i32 %v4_2f6ff, { 1, 0 }
  uselistorder i32 %v2_2f6f8, { 1, 0 }
  uselistorder i32 %v1_2f6f3, { 1, 0 }
  uselistorder i32* %v3_2f6dc, { 1, 0 }
  uselistorder i32* %v2_2f6cd, { 1, 0, 2 }
  uselistorder i32 %v0_2f6cd, { 1, 0, 2, 3 }
  uselistorder i32 %v2_2f6ac, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 6, 2, 3, 4, 5, 0, 7 }
  uselistorder i32 -2, { 1, 0, 2 }
}

define i32 @function_2f771() local_unnamed_addr {
dec_label_pc_2f771:
  %v0_2f776 = load i32, i32* @eax, align 8
  ret i32 %v0_2f776
}

define i32 @_ZNSt11__iter_swapILb1EE9iter_swapIPxS2_EEvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f777:
  %v2_2f7a1 = call i32 @unknown_60f8a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f7b2

bb:                                               ; preds = %dec_label_pc_2f777
  %v1_2f7b0 = call i32 @function_2f7b7()
  br label %dec_label_pc_2f7b2

dec_label_pc_2f7b2:                               ; preds = %bb, %dec_label_pc_2f777
  %v2_2f7b0 = phi i32 [ %v1_2f7b0, %bb ], [ 0, %dec_label_pc_2f777 ]
  ret i32 %v2_2f7b0
}

define i32 @function_2f7b7() local_unnamed_addr {
dec_label_pc_2f7b7:
  %v0_2f7b8 = load i32, i32* @eax, align 8
  ret i32 %v0_2f7b8
}

define i32 @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f7b9:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f7df

bb:                                               ; preds = %dec_label_pc_2f7b9
  %v2_2f7dd = call i32 @function_2f7e4(i32 %arg1)
  br label %dec_label_pc_2f7df

dec_label_pc_2f7df:                               ; preds = %bb, %dec_label_pc_2f7b9
  %v3_2f7dd = phi i32 [ %v2_2f7dd, %bb ], [ %arg1, %dec_label_pc_2f7b9 ]
  ret i32 %v3_2f7dd
}

define i32 @function_2f7e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f7e4:
  %v0_2f7e5 = load i32, i32* @eax, align 8
  ret i32 %v0_2f7e5
}

define i32 @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f7e6:
  %v1_2f803 = call i32 @unknown_5ef9f(i32 %arg1)
  store i32 %v1_2f803, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f814

bb:                                               ; preds = %dec_label_pc_2f7e6
  %v1_2f812 = call i32 @function_2f819()
  br label %dec_label_pc_2f814

dec_label_pc_2f814:                               ; preds = %bb, %dec_label_pc_2f7e6
  %v2_2f812 = phi i32 [ %v1_2f812, %bb ], [ %v1_2f803, %dec_label_pc_2f7e6 ]
  ret i32 %v2_2f812
}

define i32 @function_2f819() local_unnamed_addr {
dec_label_pc_2f819:
  %v0_2f81a = load i32, i32* @eax, align 8
  ret i32 %v0_2f81a
}

define i32 @_ZSt22__copy_move_backward_aILb0EPxS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f81b:
  %v3_2f856 = call i32 @unknown_6108a(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2f856, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f867

bb:                                               ; preds = %dec_label_pc_2f81b
  %v1_2f865 = call i32 @function_2f86c()
  br label %dec_label_pc_2f867

dec_label_pc_2f867:                               ; preds = %bb, %dec_label_pc_2f81b
  %v3_2f865 = phi i32 [ %v1_2f865, %bb ], [ %v3_2f856, %dec_label_pc_2f81b ]
  ret i32 %v3_2f865
}

define i32 @function_2f86c() local_unnamed_addr {
dec_label_pc_2f86c:
  %v0_2f86d = load i32, i32* @eax, align 8
  ret i32 %v0_2f86d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f86e:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f891

bb:                                               ; preds = %dec_label_pc_2f86e
  %v2_2f88f = call i32 @function_2f896(i32 %arg1)
  br label %dec_label_pc_2f891

dec_label_pc_2f891:                               ; preds = %bb, %dec_label_pc_2f86e
  %v3_2f88f = phi i32 [ %v2_2f88f, %bb ], [ 0, %dec_label_pc_2f86e ]
  ret i32 %v3_2f88f
}

define i32 @function_2f896(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f896:
  %v0_2f897 = load i32, i32* @eax, align 8
  ret i32 %v0_2f897
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f898:
  ret i32 %arg4
}

define i32 @function_2f8b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f8b4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2f8b4 = load i32, i32* @ebp, align 4
  %v1_2f8b4 = add i32 %v0_2f8b4, 1
  store i32 %v1_2f8b4, i32* %ebp.global-to-local, align 4
  %v0_2f8b7 = load i32, i32* @edx, align 4
  %v1_2f8b7 = and i32 %v0_2f8b7, -65281
  %v2_2f8b7 = or i32 %v1_2f8b7, 17664
  store i32 %v2_2f8b7, i32* %edx.global-to-local, align 4
  %v0_2f8b9 = load i32, i32* @eax, align 8
  %v1_2f8b9 = add i32 %v0_2f8b9, 1166792517
  %v2_2f8b9 = inttoptr i32 %v1_2f8b9 to i8*
  %v3_2f8b9 = load i8, i8* %v2_2f8b9, align 1
  %v4_2f8b9 = load i32, i32* @ecx, align 8
  %v5_2f8b9 = trunc i32 %v4_2f8b9 to i8
  %v6_2f8b9 = load i1, i1* @cf, align 1
  %v7_2f8b9 = zext i1 %v6_2f8b9 to i8
  %v8_2f8b9 = sub i8 %v3_2f8b9, %v5_2f8b9
  %v9_2f8b9 = add i8 %v8_2f8b9, %v7_2f8b9
  %v19_2f8b9 = sub i8 %v8_2f8b9, %v7_2f8b9
  %v20_2f8b9 = icmp ult i8 %v3_2f8b9, %v19_2f8b9
  %v21_2f8b9 = icmp ne i8 %v5_2f8b9, -1
  %v22_2f8b9 = or i1 %v21_2f8b9, %v20_2f8b9
  %v23_2f8b9 = icmp ult i8 %v3_2f8b9, %v5_2f8b9
  %v24_2f8b9 = select i1 %v6_2f8b9, i1 %v22_2f8b9, i1 %v23_2f8b9
  store i1 %v24_2f8b9, i1* %cf.global-to-local, align 1
  store i8 %v9_2f8b9, i8* %v2_2f8b9, align 1
  %v0_2f8bf = load i32, i32* @eax, align 8
  %v1_2f8bf = trunc i32 %v0_2f8bf to i8
  %v2_2f8bf = load i1, i1* %cf.global-to-local, align 1
  %v3_2f8bf = zext i1 %v2_2f8bf to i32
  %v4_2f8bf = add i32 %v0_2f8bf, 119
  %v5_2f8bf = add i32 %v4_2f8bf, %v3_2f8bf
  %v17_2f8bf = icmp ult i8 %v1_2f8bf, -119
  %v18_2f8bf = or i1 %v2_2f8bf, %v17_2f8bf
  store i1 %v18_2f8bf, i1* %cf.global-to-local, align 1
  %v31_2f8bf = urem i32 %v5_2f8bf, 256
  %v33_2f8bf = and i32 %v0_2f8bf, -256
  %v34_2f8bf = or i32 %v31_2f8bf, %v33_2f8bf
  store i32 %v34_2f8bf, i32* %eax.global-to-local, align 8
  %v0_2f8c1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2f8c1 = add i32 %v0_2f8c1, 1
  store i32 %v1_2f8c1, i32* @ebp, align 4
  %v1_2f8c2 = add i32 %v0_2f8c1, -94
  %v2_2f8c2 = inttoptr i32 %v1_2f8c2 to i8*
  %v3_2f8c2 = load i8, i8* %v2_2f8c2, align 1
  %v5_2f8c2 = mul i8 %v3_2f8c2, 2
  store i8 %v5_2f8c2, i8* %v2_2f8c2, align 1
  %v16_2f8c2 = icmp slt i8 %v3_2f8c2, 0
  %v0_2f8c5 = load i32, i32* %eax.global-to-local, align 8
  %v1_2f8c5 = trunc i32 %v0_2f8c5 to i8
  %v3_2f8c5 = zext i1 %v16_2f8c2 to i8
  %v4_2f8c5 = add i8 %v1_2f8c5, %v3_2f8c5
  %v19_2f8c5 = icmp ule i8 %v4_2f8c5, %v1_2f8c5
  %v21_2f8c5 = icmp eq i1 %v16_2f8c2, %v19_2f8c5
  store i1 %v21_2f8c5, i1* %cf.global-to-local, align 1
  %v22_2f8c5 = zext i8 %v4_2f8c5 to i32
  %v24_2f8c5 = and i32 %v0_2f8c5, -256
  %v25_2f8c5 = or i32 %v22_2f8c5, %v24_2f8c5
  store i32 %v25_2f8c5, i32* %eax.global-to-local, align 8
  %v1_2f8c7 = inttoptr i32 %v25_2f8c5 to i8*
  %v2_2f8c7 = load i8, i8* %v1_2f8c7, align 1
  %v5_2f8c7 = add i8 %v2_2f8c7, %v4_2f8c5
  store i8 %v5_2f8c7, i8* %v1_2f8c7, align 1
  %v0_2f8c9 = load i32, i32* %eax.global-to-local, align 8
  %v1_2f8c9 = load i32, i32* @ebp, align 4
  %v2_2f8c9 = add i32 %v1_2f8c9, -12
  %v3_2f8c9 = inttoptr i32 %v2_2f8c9 to i32*
  store i32 %v0_2f8c9, i32* %v3_2f8c9, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2f8ce = load i32, i32* %edx.global-to-local, align 4
  %v0_2f8d2 = load i32, i32* @ebp, align 4
  %v1_2f8d2 = add i32 %v0_2f8d2, -40
  %v2_2f8d2 = inttoptr i32 %v1_2f8d2 to i32*
  %v3_2f8d2 = load i32, i32* %v2_2f8d2, align 4
  store i32 %v3_2f8d2, i32* %eax.global-to-local, align 8
  %v1_2f8d9 = add i32 %v0_2f8d2, -36
  %v2_2f8d9 = inttoptr i32 %v1_2f8d9 to i32*
  %v3_2f8d9 = load i32, i32* %v2_2f8d9, align 4
  store i32 %v3_2f8d9, i32* %eax.global-to-local, align 8
  %v1_2f8e0 = add i32 %v0_2f8d2, -32
  %v2_2f8e0 = inttoptr i32 %v1_2f8e0 to i32*
  %v3_2f8e0 = load i32, i32* %v2_2f8e0, align 4
  store i32 %v3_2f8e0, i32* %eax.global-to-local, align 8
  %v1_2f8e7 = add i32 %v0_2f8d2, -28
  %v2_2f8e7 = inttoptr i32 %v1_2f8e7 to i32*
  %v3_2f8e7 = load i32, i32* %v2_2f8e7, align 4
  store i32 %v3_2f8e7, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_2f8ce, 16777216
  %v5_2f8ed = sdiv i32 %sext, 16777216
  %v6_2f8ed = call i32 @unknown_61188(i32 %v3_2f8e7, i32 %v3_2f8e0, i32 %v3_2f8d9, i32 %v3_2f8d2, i32 %v5_2f8ed)
  store i32 %v6_2f8ed, i32* %eax.global-to-local, align 8
  %v0_2f8f2 = load i32, i32* @ebp, align 4
  %v1_2f8f2 = add i32 %v0_2f8f2, -12
  %v2_2f8f2 = inttoptr i32 %v1_2f8f2 to i32*
  %v3_2f8f2 = load i32, i32* %v2_2f8f2, align 4
  store i32 %v3_2f8f2, i32* %eax.global-to-local, align 8
  %v1_2f8f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f8f5 = xor i32 %v1_2f8f5, %v3_2f8f2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2f8f5 = icmp eq i32 %v2_2f8f5, 0
  store i32 %v2_2f8f5, i32* @eax, align 8
  br i1 %v3_2f8f5, label %bb, label %dec_label_pc_2f8fe

bb:                                               ; preds = %dec_label_pc_2f8b4
  %v1_2f8fc = call i32 @function_2f903()
  store i32 %v1_2f8fc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2f8fe

dec_label_pc_2f8fe:                               ; preds = %bb, %dec_label_pc_2f8b4
  %v2_2f8fc = phi i32 [ %v1_2f8fc, %bb ], [ %v2_2f8f5, %dec_label_pc_2f8b4 ]
  ret i32 %v2_2f8fc

; uselistorder directives
  uselistorder i32 %v0_2f8d2, { 1, 0, 2, 3 }
  uselistorder i8 %v4_2f8c5, { 0, 2, 1 }
  uselistorder i8 %v1_2f8c5, { 1, 0 }
  uselistorder i8 %v3_2f8c2, { 1, 0 }
  uselistorder i1 %v2_2f8bf, { 1, 0 }
  uselistorder i32 %v0_2f8bf, { 1, 0, 2 }
  uselistorder i8 %v5_2f8b9, { 1, 0, 2 }
}

define i32 @function_2f903() local_unnamed_addr {
dec_label_pc_2f903:
  %v0_2f904 = load i32, i32* @eax, align 8
  ret i32 %v0_2f904
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsSE_NS5_IS6_INS7_10Value_implISA_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2f905:
  %edx.global-to-local = alloca i32, align 4
  %v0_2f93b = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2f93b, 16777216
  %v5_2f95a = sdiv i32 %sext, 16777216
  %v6_2f95a = call i32 @unknown_6125a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2f95a)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2f96b

bb:                                               ; preds = %dec_label_pc_2f905
  %v1_2f969 = call i32 @function_2f970()
  br label %dec_label_pc_2f96b

dec_label_pc_2f96b:                               ; preds = %bb, %dec_label_pc_2f905
  %v2_2f969 = phi i32 [ %v1_2f969, %bb ], [ 0, %dec_label_pc_2f905 ]
  ret i32 %v2_2f969
}

define i32 @function_2f970() local_unnamed_addr {
dec_label_pc_2f970:
  %v0_2f971 = load i32, i32* @eax, align 8
  ret i32 %v0_2f971
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsNS5_IS6_INS7_9Pair_implISA_EESaISH_EEEESE_bxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f972:
  ret i32 %arg3
}

define i32 @function_2f98a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f98a:
  %v0_2f98a = load i32, i32* @ebp, align 4
  %v1_2f98a = add i32 %v0_2f98a, 20
  %v2_2f98a = inttoptr i32 %v1_2f98a to i32*
  %v3_2f98a = load i32, i32* %v2_2f98a, align 4
  %v2_2f98d = add i32 %v0_2f98a, -40
  %v3_2f98d = inttoptr i32 %v2_2f98d to i32*
  store i32 %v3_2f98a, i32* %v3_2f98d, align 4
  %v0_2f990 = load i32, i32* @ebp, align 4
  %v1_2f990 = add i32 %v0_2f990, 24
  %v2_2f990 = inttoptr i32 %v1_2f990 to i8*
  %v3_2f990 = load i8, i8* %v2_2f990, align 1
  %v3_2f994 = add i32 %v0_2f990, -41
  %v4_2f994 = inttoptr i32 %v3_2f994 to i8*
  store i8 %v3_2f990, i8* %v4_2f994, align 1
  %v0_2f997 = load i32, i32* @ebp, align 4
  %v1_2f997 = add i32 %v0_2f997, 28
  %v2_2f997 = inttoptr i32 %v1_2f997 to i32*
  %v3_2f997 = load i32, i32* %v2_2f997, align 4
  %v2_2f99a = add i32 %v0_2f997, -48
  %v3_2f99a = inttoptr i32 %v2_2f99a to i32*
  store i32 %v3_2f997, i32* %v3_2f99a, align 4
  %v0_2f99d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2f9a3 = load i32, i32* @ebp, align 4
  %v2_2f9a3 = add i32 %v1_2f9a3, -12
  %v3_2f9a3 = inttoptr i32 %v2_2f9a3 to i32*
  store i32 %v0_2f99d, i32* %v3_2f9a3, align 4
  %v0_2f9a8 = load i32, i32* @edx, align 4
  %v0_2f9ac = load i32, i32* @ebp, align 4
  %v1_2f9ac = add i32 %v0_2f9ac, -40
  %v2_2f9ac = inttoptr i32 %v1_2f9ac to i32*
  %v3_2f9ac = load i32, i32* %v2_2f9ac, align 4
  %v1_2f9b3 = add i32 %v0_2f9ac, -36
  %v2_2f9b3 = inttoptr i32 %v1_2f9b3 to i32*
  %v3_2f9b3 = load i32, i32* %v2_2f9b3, align 4
  %v1_2f9ba = add i32 %v0_2f9ac, -32
  %v2_2f9ba = inttoptr i32 %v1_2f9ba to i32*
  %v3_2f9ba = load i32, i32* %v2_2f9ba, align 4
  %v1_2f9c1 = add i32 %v0_2f9ac, -28
  %v2_2f9c1 = inttoptr i32 %v1_2f9c1 to i32*
  %v3_2f9c1 = load i32, i32* %v2_2f9c1, align 4
  %sext = mul i32 %v0_2f9a8, 16777216
  %v5_2f9c7 = sdiv i32 %sext, 16777216
  %v6_2f9c7 = call i32 @unknown_6132c(i32 %v3_2f9c1, i32 %v3_2f9ba, i32 %v3_2f9b3, i32 %v3_2f9ac, i32 %v5_2f9c7)
  %v0_2f9cc = load i32, i32* @ebp, align 4
  %v1_2f9cc = add i32 %v0_2f9cc, -12
  %v2_2f9cc = inttoptr i32 %v1_2f9cc to i32*
  %v3_2f9cc = load i32, i32* %v2_2f9cc, align 4
  %v1_2f9cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f9cf = xor i32 %v1_2f9cf, %v3_2f9cc
  %v3_2f9cf = icmp eq i32 %v2_2f9cf, 0
  store i32 %v2_2f9cf, i32* @eax, align 8
  br i1 %v3_2f9cf, label %bb, label %dec_label_pc_2f9d8

bb:                                               ; preds = %dec_label_pc_2f98a
  %v1_2f9d6 = call i32 @function_2f9dd()
  br label %dec_label_pc_2f9d8

dec_label_pc_2f9d8:                               ; preds = %bb, %dec_label_pc_2f98a
  %v2_2f9d6 = phi i32 [ %v1_2f9d6, %bb ], [ %v2_2f9cf, %dec_label_pc_2f98a ]
  ret i32 %v2_2f9d6

; uselistorder directives
  uselistorder i32 %v0_2f9ac, { 1, 0, 2, 3 }
}

define i32 @function_2f9dd() local_unnamed_addr {
dec_label_pc_2f9dd:
  %v0_2f9de = load i32, i32* @eax, align 8
  ret i32 %v0_2f9de
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2f9df:
  %edx.global-to-local = alloca i32, align 4
  %v0_2fa15 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2fa15, 16777216
  %v5_2fa34 = sdiv i32 %sext, 16777216
  %v6_2fa34 = call i32 @unknown_613fe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2fa34)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2fa45

bb:                                               ; preds = %dec_label_pc_2f9df
  %v1_2fa43 = call i32 @function_2fa4a()
  br label %dec_label_pc_2fa45

dec_label_pc_2fa45:                               ; preds = %bb, %dec_label_pc_2f9df
  %v2_2fa43 = phi i32 [ %v1_2fa43, %bb ], [ 0, %dec_label_pc_2f9df ]
  ret i32 %v2_2fa43
}

define i32 @function_2fa4a() local_unnamed_addr {
dec_label_pc_2fa4a:
  %v0_2fa4b = load i32, i32* @eax, align 8
  ret i32 %v0_2fa4b
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2fa4c:
  %v4_2fa6a = zext i8 %arg5 to i32
  ret i32 %v4_2fa6a
}

define i32 @function_2fa73() local_unnamed_addr {
dec_label_pc_2fa73:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fa73 = load i32, i32* @eax, align 8
  %v2_2fa73 = load i1, i1* @cf, align 1
  %v3_2fa73 = zext i1 %v2_2fa73 to i32
  %v4_2fa73 = add i32 %v0_2fa73, 119
  %v5_2fa73 = add i32 %v4_2fa73, %v3_2fa73
  %v31_2fa73 = urem i32 %v5_2fa73, 256
  %v33_2fa73 = and i32 %v0_2fa73, -256
  %v34_2fa73 = or i32 %v31_2fa73, %v33_2fa73
  store i32 %v34_2fa73, i32* %eax.global-to-local, align 8
  %v0_2fa75 = load i32, i32* @ebp, align 4
  %v1_2fa75 = add i32 %v0_2fa75, 1
  store i32 %v1_2fa75, i32* @ebp, align 4
  %v1_2fa76 = add i32 %v0_2fa75, -94
  %v2_2fa76 = inttoptr i32 %v1_2fa76 to i8*
  %v3_2fa76 = load i8, i8* %v2_2fa76, align 1
  %v5_2fa76 = mul i8 %v3_2fa76, 2
  store i8 %v5_2fa76, i8* %v2_2fa76, align 1
  %v16_2fa76 = icmp slt i8 %v3_2fa76, 0
  %v0_2fa79 = load i32, i32* %eax.global-to-local, align 8
  %v1_2fa79 = trunc i32 %v0_2fa79 to i8
  %v3_2fa79 = zext i1 %v16_2fa76 to i8
  %v4_2fa79 = add i8 %v1_2fa79, %v3_2fa79
  %v22_2fa79 = zext i8 %v4_2fa79 to i32
  %v24_2fa79 = and i32 %v0_2fa79, -256
  %v25_2fa79 = or i32 %v22_2fa79, %v24_2fa79
  store i32 %v25_2fa79, i32* %eax.global-to-local, align 8
  %v1_2fa7b = inttoptr i32 %v25_2fa79 to i8*
  %v2_2fa7b = load i8, i8* %v1_2fa7b, align 1
  %v5_2fa7b = add i8 %v2_2fa7b, %v4_2fa79
  store i8 %v5_2fa7b, i8* %v1_2fa7b, align 1
  %v0_2fa7d = load i32, i32* %eax.global-to-local, align 8
  %v1_2fa7d = load i32, i32* @ebp, align 4
  %v2_2fa7d = add i32 %v1_2fa7d, -12
  %v3_2fa7d = inttoptr i32 %v2_2fa7d to i32*
  store i32 %v0_2fa7d, i32* %v3_2fa7d, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2fa82 = load i32, i32* @edx, align 4
  %v0_2fa86 = load i32, i32* @ebp, align 4
  %v1_2fa86 = add i32 %v0_2fa86, -40
  %v2_2fa86 = inttoptr i32 %v1_2fa86 to i32*
  %v3_2fa86 = load i32, i32* %v2_2fa86, align 4
  store i32 %v3_2fa86, i32* %eax.global-to-local, align 8
  %v1_2fa8d = add i32 %v0_2fa86, -36
  %v2_2fa8d = inttoptr i32 %v1_2fa8d to i32*
  %v3_2fa8d = load i32, i32* %v2_2fa8d, align 4
  store i32 %v3_2fa8d, i32* %eax.global-to-local, align 8
  %v1_2fa94 = add i32 %v0_2fa86, -32
  %v2_2fa94 = inttoptr i32 %v1_2fa94 to i32*
  %v3_2fa94 = load i32, i32* %v2_2fa94, align 4
  store i32 %v3_2fa94, i32* %eax.global-to-local, align 8
  %v1_2fa9b = add i32 %v0_2fa86, -28
  %v2_2fa9b = inttoptr i32 %v1_2fa9b to i32*
  %v3_2fa9b = load i32, i32* %v2_2fa9b, align 4
  store i32 %v3_2fa9b, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_2fa82, 16777216
  %v5_2faa1 = sdiv i32 %sext, 16777216
  %v6_2faa1 = call i32 @unknown_614d0(i32 %v3_2fa9b, i32 %v3_2fa94, i32 %v3_2fa8d, i32 %v3_2fa86, i32 %v5_2faa1)
  store i32 %v6_2faa1, i32* %eax.global-to-local, align 8
  %v0_2faa6 = load i32, i32* @ebp, align 4
  %v1_2faa6 = add i32 %v0_2faa6, -12
  %v2_2faa6 = inttoptr i32 %v1_2faa6 to i32*
  %v3_2faa6 = load i32, i32* %v2_2faa6, align 4
  store i32 %v3_2faa6, i32* %eax.global-to-local, align 8
  %v1_2faa9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2faa9 = xor i32 %v1_2faa9, %v3_2faa6
  %v3_2faa9 = icmp eq i32 %v2_2faa9, 0
  store i32 %v2_2faa9, i32* @eax, align 8
  br i1 %v3_2faa9, label %bb, label %dec_label_pc_2fab2

bb:                                               ; preds = %dec_label_pc_2fa73
  %v1_2fab0 = call i32 @function_2fab7()
  store i32 %v1_2fab0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2fab2

dec_label_pc_2fab2:                               ; preds = %bb, %dec_label_pc_2fa73
  %v2_2fab0 = phi i32 [ %v1_2fab0, %bb ], [ %v2_2faa9, %dec_label_pc_2fa73 ]
  ret i32 %v2_2fab0

; uselistorder directives
  uselistorder i32 %v0_2fa86, { 1, 0, 2, 3 }
  uselistorder i8 %v3_2fa76, { 1, 0 }
  uselistorder i32 %v0_2fa73, { 1, 0 }
}

define i32 @function_2fab7() local_unnamed_addr {
dec_label_pc_2fab7:
  %v0_2fab8 = load i32, i32* @eax, align 8
  ret i32 %v0_2fab8
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fab9:
  %edx.global-to-local = alloca i32, align 4
  %v0_2faef = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2faef, 16777216
  %v5_2fb0e = sdiv i32 %sext, 16777216
  %v6_2fb0e = call i32 @unknown_615a2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2fb0e)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2fb1f

bb:                                               ; preds = %dec_label_pc_2fab9
  %v1_2fb1d = call i32 @function_2fb24()
  br label %dec_label_pc_2fb1f

dec_label_pc_2fb1f:                               ; preds = %bb, %dec_label_pc_2fab9
  %v2_2fb1d = phi i32 [ %v1_2fb1d, %bb ], [ 0, %dec_label_pc_2fab9 ]
  ret i32 %v2_2fb1d
}

define i32 @function_2fb24() local_unnamed_addr {
dec_label_pc_2fb24:
  %v0_2fb25 = load i32, i32* @eax, align 8
  ret i32 %v0_2fb25
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fb26:
  ret i32 0
}

define i32 @function_2fb68(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fb68:
  %v2_2fb6a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2fb6a = load i32, i32* @eax, align 8
  %v4_2fb6a = trunc i32 %v3_2fb6a to i8
  %v5_2fb6a = add i8 %v4_2fb6a, %v2_2fb6a
  %v21_2fb6a = inttoptr i32 %v3_2fb6a to i8*
  store i8 %v5_2fb6a, i8* %v21_2fb6a, align 1
  %v3_2fb74 = load i32, i32* @eax, align 8
  ret i32 %v3_2fb74
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9destroyerEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSH_13Config_vectorISsEEEESaISL_EEEENSF_ISG_INSH_10Value_implISK_EESaISQ_EEEEbxdNS1_5void_ESU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_E18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2fb80:
  ret i32 %arg8
}

define i32 @function_2fbb6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fbb6:
  %v0_2fbb6 = load i32, i32* @ebp, align 4
  %v0_2fbb8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2fbbe = add i32 %v0_2fbb6, -11
  %v3_2fbbe = inttoptr i32 %v2_2fbbe to i32*
  store i32 %v0_2fbb8, i32* %v3_2fbbe, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fbe7:
  %edx.global-to-local = alloca i32, align 4
  %v0_2fc1d = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2fc1d, 16777216
  %v5_2fc3c = sdiv i32 %sext, 16777216
  %v6_2fc3c = call i32 @unknown_61735(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2fc3c)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2fc4d

bb:                                               ; preds = %dec_label_pc_2fbe7
  %v1_2fc4b = call i32 @function_2fc52()
  br label %dec_label_pc_2fc4d

dec_label_pc_2fc4d:                               ; preds = %bb, %dec_label_pc_2fbe7
  %v2_2fc4b = phi i32 [ %v1_2fc4b, %bb ], [ 0, %dec_label_pc_2fbe7 ]
  ret i32 %v2_2fc4b
}

define i32 @function_2fc52() local_unnamed_addr {
dec_label_pc_2fc52:
  %v0_2fc53 = load i32, i32* @eax, align 8
  ret i32 %v0_2fc53
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS_7variantISsSF_NS6_IS7_INS8_10Value_implISB_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fc54:
  %edx.global-to-local = alloca i32, align 4
  %v0_2fc8a = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2fc8a, 16777216
  %v5_2fca9 = sdiv i32 %sext, 16777216
  %v6_2fca9 = call i32 @unknown_61807(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2fca9)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2fcba

bb:                                               ; preds = %dec_label_pc_2fc54
  %v1_2fcb8 = call i32 @function_2fcbf()
  br label %dec_label_pc_2fcba

dec_label_pc_2fcba:                               ; preds = %bb, %dec_label_pc_2fc54
  %v2_2fcb8 = phi i32 [ %v1_2fcb8, %bb ], [ 0, %dec_label_pc_2fc54 ]
  ret i32 %v2_2fcb8
}

define i32 @function_2fcbf() local_unnamed_addr {
dec_label_pc_2fcbf:
  %v0_2fcc0 = load i32, i32* @eax, align 8
  ret i32 %v0_2fcc0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS8_13Config_vectorISsEEEESaISC_EEEENS_7variantISsNS6_IS7_INS8_9Pair_implISB_EESaISI_EEEESF_bxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fcc1:
  %edx.global-to-local = alloca i32, align 4
  %v0_2fcf7 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2fcf7, 16777216
  %v5_2fd16 = sdiv i32 %sext, 16777216
  %v6_2fd16 = call i32 @unknown_618d9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2fd16)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2fd27

bb:                                               ; preds = %dec_label_pc_2fcc1
  %v1_2fd25 = call i32 @function_2fd2c()
  br label %dec_label_pc_2fd27

dec_label_pc_2fd27:                               ; preds = %bb, %dec_label_pc_2fcc1
  %v3_2fd25 = phi i32 [ %v1_2fd25, %bb ], [ 0, %dec_label_pc_2fcc1 ]
  ret i32 %v3_2fd25
}

define i32 @function_2fd2c() local_unnamed_addr {
dec_label_pc_2fd2c:
  %v0_2fd2d = load i32, i32* @eax, align 8
  ret i32 %v0_2fd2d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fd2e:
  %edx.global-to-local = alloca i32, align 4
  %v0_2fd64 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2fd64, 16777216
  %v5_2fd83 = sdiv i32 %sext, 16777216
  %v6_2fd83 = call i32 @unknown_619ab(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2fd83)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2fd94

bb:                                               ; preds = %dec_label_pc_2fd2e
  %v1_2fd92 = call i32 @function_2fd99()
  br label %dec_label_pc_2fd94

dec_label_pc_2fd94:                               ; preds = %bb, %dec_label_pc_2fd2e
  %v2_2fd92 = phi i32 [ %v1_2fd92, %bb ], [ 0, %dec_label_pc_2fd2e ]
  ret i32 %v2_2fd92
}

define i32 @function_2fd99() local_unnamed_addr {
dec_label_pc_2fd99:
  %v4_2fd99 = load i32, i32* @eax, align 8
  ret i32 %v4_2fd99
}

define i32 @function_2fd9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fd9a:
  %v0_2fd9a = load i32, i32* @eax, align 8
  ret i32 %v0_2fd9a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fd9b:
  ret i32 %arg4
}

define i32 @function_2fddc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fddc:
  %v0_2fddc = load i32, i32* @ebp, align 4
  %v1_2fddc = add i32 %v0_2fddc, -36
  %v2_2fddc = inttoptr i32 %v1_2fddc to i32*
  %v3_2fddc = load i32, i32* %v2_2fddc, align 4
  %v1_2fde3 = add i32 %v0_2fddc, -32
  %v2_2fde3 = inttoptr i32 %v1_2fde3 to i32*
  %v3_2fde3 = load i32, i32* %v2_2fde3, align 4
  %v1_2fdea = add i32 %v0_2fddc, -28
  %v2_2fdea = inttoptr i32 %v1_2fdea to i32*
  %v3_2fdea = load i32, i32* %v2_2fdea, align 4
  %v3_2fdf0 = call i32 @unknown_61a7d(i32 %v3_2fdea, i32 %v3_2fde3, i32 %v3_2fddc)
  %v0_2fdf5 = load i32, i32* @ebp, align 4
  %v1_2fdf5 = add i32 %v0_2fdf5, -12
  %v2_2fdf5 = inttoptr i32 %v1_2fdf5 to i32*
  %v3_2fdf5 = load i32, i32* %v2_2fdf5, align 4
  %v1_2fdf8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2fdf8 = xor i32 %v1_2fdf8, %v3_2fdf5
  %v3_2fdf8 = icmp eq i32 %v2_2fdf8, 0
  store i32 %v2_2fdf8, i32* @eax, align 8
  br i1 %v3_2fdf8, label %bb, label %dec_label_pc_2fe01

bb:                                               ; preds = %dec_label_pc_2fddc
  %v1_2fdff = call i32 @function_2fe06()
  br label %dec_label_pc_2fe01

dec_label_pc_2fe01:                               ; preds = %bb, %dec_label_pc_2fddc
  %v2_2fdff = phi i32 [ %v1_2fdff, %bb ], [ %v2_2fdf8, %dec_label_pc_2fddc ]
  ret i32 %v2_2fdff
}

define i32 @function_2fe06() local_unnamed_addr {
dec_label_pc_2fe06:
  %v0_2fe07 = load i32, i32* @eax, align 8
  ret i32 %v0_2fe07
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2fe08:
  %edx.global-to-local = alloca i32, align 4
  %v0_2fe3e = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2fe3e, 16777216
  %v5_2fe5d = sdiv i32 %sext, 16777216
  %v6_2fe5d = call i32 @unknown_61b4f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2fe5d)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_2fe6e

bb:                                               ; preds = %dec_label_pc_2fe08
  %v1_2fe6c = call i32 @function_2fe73()
  br label %dec_label_pc_2fe6e

dec_label_pc_2fe6e:                               ; preds = %bb, %dec_label_pc_2fe08
  %v2_2fe6c = phi i32 [ %v1_2fe6c, %bb ], [ 0, %dec_label_pc_2fe08 ]
  ret i32 %v2_2fe6c
}

define i32 @function_2fe73() local_unnamed_addr {
dec_label_pc_2fe73:
  %v0_2fe74 = load i32, i32* @eax, align 8
  ret i32 %v0_2fe74
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEENS7_IS8_INS9_10Value_implISC_EESaISI_EEEEbxdNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT_11result_typeEiRSP_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe75:
  ret i32 %arg2
}

define i32 @function_2fe89(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe89:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2fe89 = load i32, i32* @ecx, align 8
  %v1_2fe89 = add i32 %v0_2fe89, 1166793797
  %v2_2fe89 = inttoptr i32 %v1_2fe89 to i8*
  %v3_2fe89 = load i8, i8* %v2_2fe89, align 1
  %v5_2fe89 = trunc i32 %v0_2fe89 to i8
  %v6_2fe89 = load i1, i1* @cf, align 1
  %v7_2fe89 = zext i1 %v6_2fe89 to i8
  %v8_2fe89 = add i8 %v3_2fe89, %v5_2fe89
  %v9_2fe89 = add i8 %v7_2fe89, %v8_2fe89
  %v27_2fe89 = icmp ule i8 %v9_2fe89, %v3_2fe89
  %v28_2fe89 = icmp ult i8 %v8_2fe89, %v3_2fe89
  %v29_2fe89 = select i1 %v6_2fe89, i1 %v27_2fe89, i1 %v28_2fe89
  store i1 %v29_2fe89, i1* %cf.global-to-local, align 1
  store i8 %v9_2fe89, i8* %v2_2fe89, align 1
  %v0_2fe8f = load i32, i32* @eax, align 8
  %v1_2fe8f = trunc i32 %v0_2fe8f to i8
  %v2_2fe8f = load i1, i1* %cf.global-to-local, align 1
  %v3_2fe8f = zext i1 %v2_2fe8f to i8
  %v4_2fe8f = add i8 %v1_2fe8f, -119
  %v5_2fe8f = add i8 %v4_2fe8f, %v3_2fe8f
  %v22_2fe8f = icmp ule i8 %v5_2fe8f, %v1_2fe8f
  %v23_2fe8f = icmp ugt i8 %v1_2fe8f, 118
  %v24_2fe8f = select i1 %v2_2fe8f, i1 %v22_2fe8f, i1 %v23_2fe8f
  store i1 %v24_2fe8f, i1* %cf.global-to-local, align 1
  %v25_2fe8f = zext i8 %v5_2fe8f to i32
  %v27_2fe8f = and i32 %v0_2fe8f, -256
  %v28_2fe8f = or i32 %v25_2fe8f, %v27_2fe8f
  store i32 %v28_2fe8f, i32* %eax.global-to-local, align 8
  %v0_2fe91 = load i32, i32* @ebp, align 4
  %v1_2fe91 = add i32 %v0_2fe91, 1
  store i32 %v1_2fe91, i32* %ebp.global-to-local, align 4
  %v1_2fe96 = add i32 %v28_2fe8f, 1166792517
  %v2_2fe96 = inttoptr i32 %v1_2fe96 to i8*
  %v3_2fe96 = load i8, i8* %v2_2fe96, align 1
  %v4_2fe96 = load i32, i32* @ecx, align 8
  %v5_2fe96 = trunc i32 %v4_2fe96 to i8
  %v7_2fe96 = zext i1 %v24_2fe8f to i8
  %v8_2fe96 = sub i8 %v3_2fe96, %v5_2fe96
  %v9_2fe96 = add i8 %v8_2fe96, %v7_2fe96
  %v19_2fe96 = sub i8 %v8_2fe96, %v7_2fe96
  %v20_2fe96 = icmp ult i8 %v3_2fe96, %v19_2fe96
  %v21_2fe96 = icmp ne i8 %v5_2fe96, -1
  %v22_2fe96 = or i1 %v21_2fe96, %v20_2fe96
  %v23_2fe96 = icmp ult i8 %v3_2fe96, %v5_2fe96
  %v24_2fe96 = select i1 %v24_2fe8f, i1 %v22_2fe96, i1 %v23_2fe96
  store i1 %v24_2fe96, i1* %cf.global-to-local, align 1
  store i8 %v9_2fe96, i8* %v2_2fe96, align 1
  %v0_2fe9c = load i32, i32* %eax.global-to-local, align 8
  %v1_2fe9c = trunc i32 %v0_2fe9c to i8
  %v2_2fe9c = load i1, i1* %cf.global-to-local, align 1
  %v3_2fe9c = zext i1 %v2_2fe9c to i32
  %v4_2fe9c = add i32 %v0_2fe9c, 119
  %v5_2fe9c = add i32 %v4_2fe9c, %v3_2fe9c
  %v17_2fe9c = icmp ult i8 %v1_2fe9c, -119
  %v18_2fe9c = or i1 %v2_2fe9c, %v17_2fe9c
  store i1 %v18_2fe9c, i1* %cf.global-to-local, align 1
  %v31_2fe9c = urem i32 %v5_2fe9c, 256
  %v33_2fe9c = and i32 %v0_2fe9c, -256
  %v34_2fe9c = or i32 %v31_2fe9c, %v33_2fe9c
  store i32 %v34_2fe9c, i32* %eax.global-to-local, align 8
  %v0_2fe9e = load i32, i32* %ebp.global-to-local, align 4
  %v1_2fe9e = add i32 %v0_2fe9e, 1
  store i32 %v1_2fe9e, i32* @ebp, align 4
  %v1_2fe9f = add i32 %v0_2fe9e, -94
  %v2_2fe9f = inttoptr i32 %v1_2fe9f to i8*
  %v3_2fe9f = load i8, i8* %v2_2fe9f, align 1
  %v5_2fe9f = mul i8 %v3_2fe9f, 2
  store i8 %v5_2fe9f, i8* %v2_2fe9f, align 1
  %v16_2fe9f = icmp slt i8 %v3_2fe9f, 0
  %v0_2fea2 = load i32, i32* %eax.global-to-local, align 8
  %v1_2fea2 = trunc i32 %v0_2fea2 to i8
  %v3_2fea2 = zext i1 %v16_2fe9f to i8
  %v4_2fea2 = add i8 %v1_2fea2, %v3_2fea2
  %v19_2fea2 = icmp ule i8 %v4_2fea2, %v1_2fea2
  %v21_2fea2 = icmp eq i1 %v16_2fe9f, %v19_2fea2
  store i1 %v21_2fea2, i1* %cf.global-to-local, align 1
  %v22_2fea2 = zext i8 %v4_2fea2 to i32
  %v24_2fea2 = and i32 %v0_2fea2, -256
  %v25_2fea2 = or i32 %v22_2fea2, %v24_2fea2
  store i32 %v25_2fea2, i32* %eax.global-to-local, align 8
  %v1_2fea4 = inttoptr i32 %v25_2fea2 to i8*
  %v2_2fea4 = load i8, i8* %v1_2fea4, align 1
  %v5_2fea4 = add i8 %v2_2fea4, %v4_2fea2
  store i8 %v5_2fea4, i8* %v1_2fea4, align 1
  %v0_2fea6 = load i32, i32* %eax.global-to-local, align 8
  %v1_2fea6 = load i32, i32* @ebp, align 4
  %v2_2fea6 = add i32 %v1_2fea6, -12
  %v3_2fea6 = inttoptr i32 %v2_2fea6 to i32*
  store i32 %v0_2fea6, i32* %v3_2fea6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_2fea2, { 0, 2, 1 }
  uselistorder i8 %v1_2fea2, { 1, 0 }
  uselistorder i8 %v3_2fe9f, { 1, 0 }
  uselistorder i1 %v2_2fe9c, { 1, 0 }
  uselistorder i32 %v0_2fe9c, { 1, 0, 2 }
  uselistorder i8 %v8_2fe96, { 1, 0 }
  uselistorder i8 %v7_2fe96, { 1, 0 }
  uselistorder i8 %v5_2fe96, { 1, 0, 2 }
  uselistorder i1 %v24_2fe8f, { 1, 0, 2 }
  uselistorder i8 %v5_2fe8f, { 1, 0 }
  uselistorder i8 %v9_2fe89, { 1, 0 }
  uselistorder i8 %v8_2fe89, { 1, 0 }
}

define i32 @function_2fec4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fec4:
  %v0_2fec4 = load i32, i32* @eax, align 8
  %v2_2fec4 = add i32 %v0_2fec4, 36
  %v2_2fec9 = load i32, i32* @ecx, align 8
  %v3_2fec9 = udiv i32 %v2_2fec9, 256
  %v5_2fec9 = add i32 %v3_2fec9, %v2_2fec4
  %v20_2fec9 = and i32 %v5_2fec9, 255
  %v22_2fec9 = and i32 %v0_2fec4, -256
  %v23_2fec9 = or i32 %v20_2fec9, %v22_2fec9
  ret i32 %v23_2fec9

; uselistorder directives
  uselistorder i32 %v0_2fec4, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9copy_intoEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSI_13Config_vectorISsEEEESaISM_EEEENSG_ISH_INSI_10Value_implISL_EESaISR_EEEEbxdNS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2fecf:
  ret i32 %arg8
}

define i32 @function_2ff09(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff09:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ff09 = load i32, i32* @eax, align 8
  %v1_2ff09 = trunc i32 %v0_2ff09 to i8
  %v2_2ff09 = load i1, i1* @cf, align 1
  %v3_2ff09 = zext i1 %v2_2ff09 to i8
  %v4_2ff09 = add i8 %v3_2ff09, %v1_2ff09
  %v22_2ff09 = zext i8 %v4_2ff09 to i32
  %v24_2ff09 = and i32 %v0_2ff09, -256
  %v25_2ff09 = or i32 %v22_2ff09, %v24_2ff09
  store i32 %v25_2ff09, i32* %eax.global-to-local, align 8
  %v1_2ff0b = inttoptr i32 %v25_2ff09 to i8*
  %v2_2ff0b = load i8, i8* %v1_2ff0b, align 1
  %v5_2ff0b = add i8 %v2_2ff0b, %v4_2ff09
  store i8 %v5_2ff0b, i8* %v1_2ff0b, align 1
  %v0_2ff0d = load i32, i32* %eax.global-to-local, align 8
  %v1_2ff0d = load i32, i32* @ebp, align 4
  %v2_2ff0d = add i32 %v1_2ff0d, -12
  %v3_2ff0d = inttoptr i32 %v2_2ff0d to i32*
  store i32 %v0_2ff0d, i32* %v3_2ff0d, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff36:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2ff5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff5c:
  %v0_2ff5c = load i32, i32* @ebp, align 4
  %v1_2ff5c = add i32 %v0_2ff5c, 1
  store i32 %v1_2ff5c, i32* @ebp, align 4
  %v0_2ff5e = load i32, i32* @eax, align 8
  %v1_2ff5e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ff5e = xor i32 %v1_2ff5e, %v0_2ff5e
  %v3_2ff5e = icmp eq i32 %v2_2ff5e, 0
  store i32 %v2_2ff5e, i32* @eax, align 8
  br i1 %v3_2ff5e, label %bb, label %dec_label_pc_2ff67

bb:                                               ; preds = %dec_label_pc_2ff5c
  %v1_2ff65 = call i32 @function_2ff6c()
  br label %dec_label_pc_2ff67

dec_label_pc_2ff67:                               ; preds = %bb, %dec_label_pc_2ff5c
  %v2_2ff65 = phi i32 [ %v1_2ff65, %bb ], [ %v2_2ff5e, %dec_label_pc_2ff5c ]
  ret i32 %v2_2ff65
}

define i32 @function_2ff6c() local_unnamed_addr {
dec_label_pc_2ff6c:
  %v0_2ff6d = load i32, i32* @eax, align 8
  ret i32 %v0_2ff6d
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14invoke_visitorINSH_11get_visitorIKxEEEEEENT_11result_typeERSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff6e:
  ret i32 %arg2
}

define i32 @function_2ff84(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ff84:
  %v2_2ff84 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2ff84 = load i32, i32* @eax, align 8
  %v4_2ff84 = trunc i32 %v3_2ff84 to i8
  %v5_2ff84 = add i8 %v4_2ff84, %v2_2ff84
  %v21_2ff84 = inttoptr i32 %v3_2ff84 to i8*
  store i8 %v5_2ff84, i8* %v21_2ff84, align 1
  %v0_2ff86 = load i32, i32* @ecx, align 8
  %v1_2ff86 = add i32 %v0_2ff86, -1070468027
  %v2_2ff86 = inttoptr i32 %v1_2ff86 to i8*
  %v3_2ff86 = load i8, i8* %v2_2ff86, align 1
  %v5_2ff86 = trunc i32 %v0_2ff86 to i8
  %v6_2ff86 = add i8 %v3_2ff86, %v5_2ff86
  store i8 %v6_2ff86, i8* %v2_2ff86, align 1
  %v0_2ff8c = load i32, i32* @ebp, align 4
  %v1_2ff8c = add i32 %v0_2ff8c, -28
  %v2_2ff8c = inttoptr i32 %v1_2ff8c to i32*
  %v3_2ff8c = load i32, i32* %v2_2ff8c, align 4
  %v1_2ff8f = add i32 %v3_2ff8c, 4
  %v1_2ff95 = call i32 @unknown_582f8(i32 %v1_2ff8f)
  store i32 %v1_2ff95, i32* @ebx, align 4
  %v0_2ff9c = load i32, i32* @ebp, align 4
  %v1_2ff9c = add i32 %v0_2ff9c, -28
  %v2_2ff9c = inttoptr i32 %v1_2ff9c to i32*
  %v3_2ff9c = load i32, i32* %v2_2ff9c, align 4
  %v1_2ffa2 = call i32 @unknown_54578(i32 %v3_2ff9c)
  %v0_2ffa9 = load i32, i32* @ebp, align 4
  %v1_2ffa9 = add i32 %v0_2ffa9, -28
  %v2_2ffa9 = inttoptr i32 %v1_2ffa9 to i32*
  %v3_2ffa9 = load i32, i32* %v2_2ffa9, align 4
  %v1_2ffac = inttoptr i32 %v3_2ffa9 to i32*
  %v2_2ffac = load i32, i32* %v1_2ffac, align 4
  %v0_2ffae = load i32, i32* @ebx, align 4
  %v1_2ffb2 = add i32 %v0_2ffa9, -32
  %v2_2ffb2 = inttoptr i32 %v1_2ffb2 to i32*
  %v3_2ffb2 = load i32, i32* %v2_2ffb2, align 4
  %v4_2ffc0 = call i32 @unknown_61d1a(i32 %v2_2ffac, i32 %v1_2ffa2, i32 %v3_2ffb2, i32 %v0_2ffae)
  store i32 %v4_2ffc0, i32* @eax, align 8
  %v0_2ffc5 = load i32, i32* @ebp, align 4
  %v1_2ffc5 = add i32 %v0_2ffc5, -12
  %v2_2ffc5 = inttoptr i32 %v1_2ffc5 to i32*
  %v3_2ffc5 = load i32, i32* %v2_2ffc5, align 4
  %v1_2ffc8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ffc8 = icmp eq i32 %v1_2ffc8, %v3_2ffc5
  br i1 %v3_2ffc8, label %bb, label %dec_label_pc_2ffd1

bb:                                               ; preds = %dec_label_pc_2ff84
  %v1_2ffcf = call i32 @function_2ffd6()
  br label %dec_label_pc_2ffd1

dec_label_pc_2ffd1:                               ; preds = %bb, %dec_label_pc_2ff84
  %v2_2ffcf = phi i32 [ %v1_2ffcf, %bb ], [ %v4_2ffc0, %dec_label_pc_2ff84 ]
  ret i32 %v2_2ffcf
}

define i32 @function_2ffd6() local_unnamed_addr {
dec_label_pc_2ffd6:
  %v0_2ffdb = load i32, i32* @eax, align 8
  ret i32 %v0_2ffdb
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKbEEEEPKvEENT_11result_typeEiiRSS_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ffdc:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_30015 = load i32, i32* %ecx.global-to-local, align 8
  %v0_30019 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_30019, 16777216
  %v12_30038 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_30015, 16777216
  %v13_30038 = sdiv i32 %sext1, 16777216
  %v14_30038 = call i32 @unknown_61dfc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_30038, i32 %v13_30038, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v14_30038, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_30049

bb:                                               ; preds = %dec_label_pc_2ffdc
  %v1_30047 = call i32 @function_3004e()
  br label %dec_label_pc_30049

dec_label_pc_30049:                               ; preds = %bb, %dec_label_pc_2ffdc
  %v2_30047 = phi i32 [ %v1_30047, %bb ], [ %v14_30038, %dec_label_pc_2ffdc ]
  ret i32 %v2_30047

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

declare i32 @__stack_chk_fail.1168(i32, i32) local_unnamed_addr

define i32 @function_3004e() local_unnamed_addr {
dec_label_pc_3004e:
  %v0_3004f = load i32, i32* @eax, align 8
  ret i32 %v0_3004f
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN11json_spirit9Pair_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30050:
  ret i32 %arg3
}

define i32 @function_3008c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3008c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3008d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3008d

dec_label_pc_3008d:                               ; preds = %dec_label_pc_3008d, %dec_label_pc_3008c
  %v19_3008d = phi i32 [ %v0_300ab, %dec_label_pc_3008d ], [ %v0_3008d.pre, %dec_label_pc_3008c ]
  %v1_3008d = add i32 %v19_3008d, -32
  %v2_3008d = inttoptr i32 %v1_3008d to i32*
  %v3_3008d = load i32, i32* %v2_3008d, align 4
  %v4_3008d = add i32 %v3_3008d, -24
  store i32 %v4_3008d, i32* %v2_3008d, align 4
  %v0_30091 = load i32, i32* @ebp, align 4
  %v1_30091 = add i32 %v0_30091, -36
  %v2_30091 = inttoptr i32 %v1_30091 to i32*
  %v3_30091 = load i32, i32* %v2_30091, align 4
  %v4_30091 = add i32 %v3_30091, -24
  store i32 %v4_30091, i32* %v2_30091, align 4
  %v0_30095 = load i32, i32* @ebp, align 4
  %v1_30095 = add i32 %v0_30095, -32
  %v2_30095 = inttoptr i32 %v1_30095 to i32*
  %v3_30095 = load i32, i32* %v2_30095, align 4
  store i32 %v3_30095, i32* %eax.global-to-local, align 8
  %v1_3009c = add i32 %v0_30095, -36
  %v2_3009c = inttoptr i32 %v1_3009c to i32*
  %v3_3009c = load i32, i32* %v2_3009c, align 4
  store i32 %v3_3009c, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v3_3009c, 65536
  %v2_300a2 = sdiv i32 %sext, 65536
  %v3_300a2 = call i32 @unknown_4dcf0(i32 %v2_300a2, i32 %v3_30095)
  store i32 %v3_300a2, i32* %eax.global-to-local, align 8
  %v0_300a7 = load i32, i32* @ebp, align 4
  %v1_300a7 = add i32 %v0_300a7, -16
  %v2_300a7 = inttoptr i32 %v1_300a7 to i32*
  %v3_300a7 = load i32, i32* %v2_300a7, align 4
  %v4_300a7 = add i32 %v3_300a7, -1
  store i32 %v4_300a7, i32* %v2_300a7, align 4
  %v0_300ab = load i32, i32* @ebp, align 4
  %v1_300ab = add i32 %v0_300ab, -16
  %v2_300ab = inttoptr i32 %v1_300ab to i32*
  %v3_300ab = load i32, i32* %v2_300ab, align 4
  %v10_300ab = icmp eq i32 %v3_300ab, 0
  %v11_300ab = icmp slt i32 %v3_300ab, 0
  %v3_300af = icmp eq i1 %v11_300ab, false
  %v4_300af = icmp eq i1 %v10_300ab, false
  %v5_300af = icmp eq i1 %v3_300af, %v4_300af
  %v6_300af = zext i1 %v5_300af to i32
  %v7_300af = load i32, i32* %eax.global-to-local, align 8
  %v8_300af = and i32 %v7_300af, -256
  %v9_300af = or i32 %v6_300af, %v8_300af
  store i32 %v9_300af, i32* %eax.global-to-local, align 8
  %v5_300b2 = icmp eq i1 %v5_300af, false
  %v1_300b4 = icmp eq i1 %v5_300b2, false
  br i1 %v1_300b4, label %dec_label_pc_3008d, label %dec_label_pc_300b6

dec_label_pc_300b6:                               ; preds = %dec_label_pc_3008d
  %v1_300b6 = add i32 %v0_300ab, -36
  %v2_300b6 = inttoptr i32 %v1_300b6 to i32*
  %v3_300b6 = load i32, i32* %v2_300b6, align 4
  store i32 %v3_300b6, i32* @eax, align 8
  %v1_300b9 = add i32 %v0_300ab, -12
  %v2_300b9 = inttoptr i32 %v1_300b9 to i32*
  %v3_300b9 = load i32, i32* %v2_300b9, align 4
  %v1_300bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_300bc = icmp eq i32 %v1_300bc, %v3_300b9
  br i1 %v3_300bc, label %bb, label %dec_label_pc_300c5

bb:                                               ; preds = %dec_label_pc_300b6
  %v1_300c3 = call i32 @function_300ca()
  store i32 %v1_300c3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_300c5

dec_label_pc_300c5:                               ; preds = %bb, %dec_label_pc_300b6
  %v2_300c3 = phi i32 [ %v1_300c3, %bb ], [ %v3_300b6, %dec_label_pc_300b6 ]
  ret i32 %v2_300c3

; uselistorder directives
  uselistorder i32 %v3_300ab, { 1, 0 }
  uselistorder i32 %v0_300ab, { 1, 0, 3, 2 }
}

define i32 @function_300ca() local_unnamed_addr {
dec_label_pc_300ca:
  %v0_300cb = load i32, i32* @eax, align 8
  ret i32 %v0_300cb
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructISsSA_SF_bxdSI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EEvRNS0_IT_T0_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_T11_T12_T13_T14_T15_T16_T17_T18_EEl() local_unnamed_addr {
dec_label_pc_300cc:
  %eax.global-to-local = alloca i32, align 4
  %v5_300cc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_300cc
}

define i32 @function_300ce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_300ce:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_300d1 = load i32, i32* @ecx, align 8
  %v0_300d9 = load i32, i32* @ebp, align 4
  %v0_300da = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_300da = or i32 %v0_300da, 137
  store i32 %v11_300da, i32* %eax.global-to-local, align 8
  %v1_300dd = add i32 %v4_300d1, 255
  %v1_300df = add i32 %v0_300d9, 3
  store i32 %v1_300df, i32* @ebp, align 4
  %v1_300e0 = add i32 %v4_300d1, -1587159996
  %v2_300e0 = inttoptr i32 %v1_300e0 to i8*
  %v3_300e0 = load i8, i8* %v2_300e0, align 1
  %v5_300e0 = trunc i32 %v1_300dd to i8
  %v8_300e0 = add i8 %v3_300e0, %v5_300e0
  %v28_300e0 = icmp ult i8 %v8_300e0, %v3_300e0
  store i1 %v28_300e0, i1* %cf.global-to-local, align 1
  store i8 %v8_300e0, i8* %v2_300e0, align 1
  %v0_300e6 = load i32, i32* %eax.global-to-local, align 8
  %v1_300e6 = trunc i32 %v0_300e6 to i8
  %v2_300e6 = load i1, i1* %cf.global-to-local, align 1
  %v3_300e6 = zext i1 %v2_300e6 to i8
  %v4_300e6 = add i8 %v3_300e6, %v1_300e6
  %v19_300e6 = icmp ule i8 %v4_300e6, %v1_300e6
  %v21_300e6 = icmp eq i1 %v2_300e6, %v19_300e6
  store i1 %v21_300e6, i1* %cf.global-to-local, align 1
  %v22_300e6 = zext i8 %v4_300e6 to i32
  %v24_300e6 = and i32 %v0_300e6, -256
  %v25_300e6 = or i32 %v22_300e6, %v24_300e6
  store i32 %v25_300e6, i32* %eax.global-to-local, align 8
  %v1_300e8 = inttoptr i32 %v25_300e6 to i8*
  %v2_300e8 = load i8, i8* %v1_300e8, align 1
  %v5_300e8 = add i8 %v2_300e8, %v4_300e6
  store i8 %v5_300e8, i8* %v1_300e8, align 1
  %v0_300ea = load i32, i32* %eax.global-to-local, align 8
  %v1_300ea = load i32, i32* @ebp, align 4
  %v2_300ea = add i32 %v1_300ea, -12
  %v3_300ea = inttoptr i32 %v2_300ea to i32*
  store i32 %v0_300ea, i32* %v3_300ea, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_300ef = load i32, i32* @ebp, align 4
  %v1_300ef = add i32 %v0_300ef, -32
  %v2_300ef = inttoptr i32 %v1_300ef to i32*
  %v3_300ef = load i32, i32* %v2_300ef, align 4
  store i32 %v3_300ef, i32* %eax.global-to-local, align 8
  %v1_300f6 = add i32 %v0_300ef, -28
  %v2_300f6 = inttoptr i32 %v1_300f6 to i32*
  %v3_300f6 = load i32, i32* %v2_300f6, align 4
  store i32 %v3_300f6, i32* %eax.global-to-local, align 8
  %v2_300fc = call i32 @unknown_62418(i32 %v3_300f6, i32 %v3_300ef)
  store i32 %v2_300fc, i32* %eax.global-to-local, align 8
  %v0_30101 = load i32, i32* @ebp, align 4
  %v1_30101 = add i32 %v0_30101, -12
  %v2_30101 = inttoptr i32 %v1_30101 to i32*
  %v3_30101 = load i32, i32* %v2_30101, align 4
  store i32 %v3_30101, i32* %eax.global-to-local, align 8
  %v1_30104 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_30104 = xor i32 %v1_30104, %v3_30101
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_30104 = icmp eq i32 %v2_30104, 0
  store i32 %v2_30104, i32* @eax, align 8
  br i1 %v3_30104, label %bb, label %dec_label_pc_3010d

bb:                                               ; preds = %dec_label_pc_300ce
  %v1_3010b = call i32 @function_30112()
  store i32 %v1_3010b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3010d

dec_label_pc_3010d:                               ; preds = %bb, %dec_label_pc_300ce
  %v3_3010b = phi i32 [ %v1_3010b, %bb ], [ %v2_30104, %dec_label_pc_300ce ]
  ret i32 %v3_3010b

; uselistorder directives
  uselistorder i8 %v4_300e6, { 0, 2, 1 }
  uselistorder i8 %v1_300e6, { 1, 0 }
  uselistorder i8 %v3_300e0, { 1, 0 }
}

define i32 @function_30112() local_unnamed_addr {
dec_label_pc_30112:
  %v0_30113 = load i32, i32* @eax, align 8
  ret i32 %v0_30113
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E14variant_assignERKSJ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30114:
  %v2_30135 = load i32, i32* %arg1, align 4
  %v1_3013a = inttoptr i32 %arg2 to i32*
  %v2_3013a = load i32, i32* %v1_3013a, align 4
  %v12_3013c = icmp eq i32 %v2_30135, %v2_3013a
  %v1_3013e = icmp eq i1 %v12_3013c, false
  br i1 %v1_3013e, label %bb, label %dec_label_pc_30140

bb:                                               ; preds = %dec_label_pc_30114
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v4_3013e = call i32 @function_3017c(i32 %arg2, i32 %tmp101)
  br label %dec_label_pc_30140

dec_label_pc_30140:                               ; preds = %bb, %dec_label_pc_30114
  %v1_30143 = add i32 %arg2, 4
  ret i32 %v1_30143

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3014c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3014c:
  %v0_3014c = load i32, i32* @eax, align 8
  %v5_3014c = mul i32 %v0_3014c, 2
  %v20_3014c = and i32 %v5_3014c, 254
  %v22_3014c = and i32 %v0_3014c, -256
  %v23_3014c = or i32 %v20_3014c, %v22_3014c
  %v0_30152 = load i32, i32* @ebp, align 4
  %v1_30152 = add i32 %v0_30152, -20
  %v2_30158 = call i32 @unknown_425f4(i32 %v1_30152, i32 %v23_3014c)
  %v0_3015d = load i32, i32* @ebp, align 4
  %v1_3015d = add i32 %v0_3015d, -20
  %v1_30164 = add i32 %v0_3015d, -28
  %v2_30164 = inttoptr i32 %v1_30164 to i32*
  %v3_30164 = load i32, i32* %v2_30164, align 4
  %v2_3016a = call i32 @unknown_624ae(i32 %v3_30164, i32 %v1_3015d)
  %v0_3016f = load i32, i32* @ebp, align 4
  %v1_3016f = add i32 %v0_3016f, -20
  %v1_30175 = call i32 @unknown_58502(i32 %v1_3016f)
  %v0_3017a = call i32 @function_301ea()
  ret i32 %v0_3017a

; uselistorder directives
  uselistorder i32 %v0_3014c, { 1, 0 }
}

define i32 @function_3017c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3017c:
  %v0_3017c = load i32, i32* @ebp, align 4
  %v1_3017c = add i32 %v0_3017c, -32
  %v2_3017c = inttoptr i32 %v1_3017c to i32*
  %v3_3017c = load i32, i32* %v2_3017c, align 4
  %v1_30182 = call i32 @unknown_5471e(i32 %v3_3017c)
  %v0_3018b = load i32, i32* @ebp, align 4
  %v1_3018b = add i32 %v0_3018b, -28
  %v2_3018b = inttoptr i32 %v1_3018b to i32*
  %v3_3018b = load i32, i32* %v2_3018b, align 4
  %v1_30192 = add i32 %v0_3018b, -20
  %v3_30198 = call i32 @unknown_6251c(i32 %v1_30192, i32 %v3_3018b, i32 %v1_30182)
  %v0_3019d = load i32, i32* @ebp, align 4
  %v1_3019d = add i32 %v0_3019d, -20
  %v1_301a4 = add i32 %v0_3019d, -32
  %v2_301a4 = inttoptr i32 %v1_301a4 to i32*
  %v3_301a4 = load i32, i32* %v2_301a4, align 4
  %v2_301aa = call i32 @unknown_6256e(i32 %v3_301a4, i32 %v1_3019d)
  %v0_301af = load i32, i32* @ebp, align 4
  %v1_301af = add i32 %v0_301af, -20
  %v1_301b5 = call i32 @unknown_60316(i32 %v1_301af)
  %v0_301ba = call i32 @function_301ea()
  ret i32 %v0_301ba

; uselistorder directives
  uselistorder i32 ()* @function_301ea, { 1, 0 }
}

define i32 @function_301bd() local_unnamed_addr {
dec_label_pc_301bd:
  %eax.global-to-local = alloca i32, align 4
  %v0_301bd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_301bd
}

define i32 @function_301d4() local_unnamed_addr {
dec_label_pc_301d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_301d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_301d4
}

define i32 @function_301ea() local_unnamed_addr {
dec_label_pc_301ea:
  %v0_301ea = load i32, i32* @ebp, align 4
  %v1_301ea = add i32 %v0_301ea, -12
  %v2_301ea = inttoptr i32 %v1_301ea to i32*
  %v3_301ea = load i32, i32* %v2_301ea, align 4
  %v1_301ed = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_301ed = xor i32 %v1_301ed, %v3_301ea
  %v3_301ed = icmp eq i32 %v2_301ed, 0
  store i32 %v2_301ed, i32* @eax, align 8
  br i1 %v3_301ed, label %bb, label %dec_label_pc_301f6

bb:                                               ; preds = %dec_label_pc_301ea
  %v1_301f4 = call i32 @function_301fb()
  br label %dec_label_pc_301f6

dec_label_pc_301f6:                               ; preds = %bb, %dec_label_pc_301ea
  %v2_301f4 = phi i32 [ %v1_301f4, %bb ], [ %v2_301ed, %dec_label_pc_301ea ]
  ret i32 %v2_301f4
}

define i32 @function_301fb() local_unnamed_addr {
dec_label_pc_301fb:
  %v0_30200 = load i32, i32* @eax, align 8
  ret i32 %v0_30200
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assignerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30202:
  %v1_3021f = call i32 @unknown_46190(i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_30230

bb:                                               ; preds = %dec_label_pc_30202
  %v1_3022e = call i32 @function_30235()
  br label %dec_label_pc_30230

dec_label_pc_30230:                               ; preds = %bb, %dec_label_pc_30202
  %v2_3022e = phi i32 [ %v1_3022e, %bb ], [ 0, %dec_label_pc_30202 ]
  ret i32 %v2_3022e
}

define i32 @function_30235() local_unnamed_addr {
dec_label_pc_30235:
  %v0_30236 = load i32, i32* @eax, align 8
  ret i32 %v0_30236
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEES7_EET0_T_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30237:
  %v15_30288109 = icmp eq i32 %arg1, %arg2
  %v1_3028b110 = icmp eq i1 %v15_30288109, false
  %v5_3028e111 = icmp eq i1 %v1_3028b110, false
  %v1_30290112 = icmp eq i1 %v5_3028e111, false
  store i32 %arg3, i32* @eax, align 8
  br i1 %v1_30290112, label %dec_label_pc_30263, label %dec_label_pc_30292

dec_label_pc_30263:                               ; preds = %dec_label_pc_30237, %dec_label_pc_30263
  %storemerge114 = phi i32 [ %v4_30281, %dec_label_pc_30263 ], [ %arg3, %dec_label_pc_30237 ]
  %stack_var_-32.0113 = phi i32 [ %v4_3027d, %dec_label_pc_30263 ], [ %arg1, %dec_label_pc_30237 ]
  %v1_30269 = call i32 @unknown_5e1af(i32 %storemerge114)
  %v2_30278 = call i32 @unknown_5e4d4(i32 %v1_30269, i32 %stack_var_-32.0113)
  %v4_3027d = add i32 %stack_var_-32.0113, 24
  %v4_30281 = add i32 %storemerge114, 24
  %v15_30288 = icmp eq i32 %v4_3027d, %arg2
  %v1_3028b = icmp eq i1 %v15_30288, false
  %v5_3028e = icmp eq i1 %v1_3028b, false
  %v1_30290 = icmp eq i1 %v5_3028e, false
  store i32 %v4_30281, i32* @eax, align 8
  br i1 %v1_30290, label %dec_label_pc_30263, label %dec_label_pc_30292

dec_label_pc_30292:                               ; preds = %dec_label_pc_30263, %dec_label_pc_30237
  br i1 true, label %bb, label %dec_label_pc_302a1

bb:                                               ; preds = %dec_label_pc_30292
  %v1_3029f = call i32 @function_302d8()
  store i32 %v1_3029f, i32* @eax, align 8
  br label %dec_label_pc_302a1

dec_label_pc_302a1:                               ; preds = %bb, %dec_label_pc_30292
  %v0_302a1 = call i32 @function_302d3()
  ret i32 %v0_302a1

; uselistorder directives
  uselistorder i32 %v4_30281, { 1, 0 }
  uselistorder i32 %v4_3027d, { 1, 0 }
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_30263, { 1, 0 }
}

define i32 @function_302a4() local_unnamed_addr {
dec_label_pc_302a4:
  %eax.global-to-local = alloca i32, align 4
  %v0_302a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_302a4
}

define i32 @function_302d3() local_unnamed_addr {
dec_label_pc_302d3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_302d8() local_unnamed_addr {
dec_label_pc_302d8:
  %v0_302dd = load i32, i32* @eax, align 8
  ret i32 %v0_302dd
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256S1_IP6CBlock7CScriptEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_302de:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_30301

bb:                                               ; preds = %dec_label_pc_302de
  %v2_302ff = call i32 @function_30306(i32 %arg1)
  br label %dec_label_pc_30301

dec_label_pc_30301:                               ; preds = %bb, %dec_label_pc_302de
  %v3_302ff = phi i32 [ %v2_302ff, %bb ], [ 0, %dec_label_pc_302de ]
  ret i32 %v3_302ff
}

define i32 @function_30306(i32 %arg1) local_unnamed_addr {
dec_label_pc_30306:
  %v0_30307 = load i32, i32* @eax, align 8
  ret i32 %v0_30307
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP14CBlockTemplateEEPT_PKS5_S8_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30308:
  %v2_30333 = sub i32 %arg2, %arg1
  %v2_30333.off = add i32 %v2_30333, 3
  %tmp110 = icmp ult i32 %v2_30333.off, 7
  br i1 %tmp110, label %bb, label %dec_label_pc_30343

bb:                                               ; preds = %dec_label_pc_30308
  %v4_30341 = call i32 @function_3036b(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_30343

dec_label_pc_30343:                               ; preds = %bb, %dec_label_pc_30308
  %v2_30337 = srem i32 %v2_30333, 4
  %v2_30350109 = sub i32 %v2_30337, %v2_30333
  %v5_30355 = add i32 %v2_30350109, %arg3
  ret i32 %v5_30355
}

define i32 @function_3036b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3036b:
  %v0_3036b = load i32, i32* @ebp, align 4
  %v1_3036b = add i32 %v0_3036b, -16
  %v2_3036b = inttoptr i32 %v1_3036b to i32*
  %v3_3036b = load i32, i32* %v2_3036b, align 4
  %v2_30373 = add i32 %v0_3036b, -36
  %v3_30373 = inttoptr i32 %v2_30373 to i32*
  %v4_30373 = load i32, i32* %v3_30373, align 4
  %tmp = mul i32 %v3_3036b, -4
  %v5_30373 = add i32 %v4_30373, %tmp
  store i32 %v5_30373, i32* @eax, align 8
  %v1_30376 = add i32 %v0_3036b, -12
  %v2_30376 = inttoptr i32 %v1_30376 to i32*
  %v3_30376 = load i32, i32* %v2_30376, align 4
  %v1_30379 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_30379 = icmp eq i32 %v1_30379, %v3_30376
  br i1 %v3_30379, label %bb, label %dec_label_pc_30382

bb:                                               ; preds = %dec_label_pc_3036b
  %v1_30380 = call i32 @function_30387()
  br label %dec_label_pc_30382

dec_label_pc_30382:                               ; preds = %bb, %dec_label_pc_3036b
  %v2_30380 = phi i32 [ %v1_30380, %bb ], [ %v5_30373, %dec_label_pc_3036b ]
  ret i32 %v2_30380

; uselistorder directives
  uselistorder i32 %v5_30373, { 1, 0 }
}

define i32 @function_30387() local_unnamed_addr {
dec_label_pc_30387:
  %v0_30388 = load i32, i32* @eax, align 8
  ret i32 %v0_30388
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPP14CBlockTemplateS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30389:
  %v3_303c0 = call i32 @unknown_62851(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_303c0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_303d1

bb:                                               ; preds = %dec_label_pc_30389
  %v1_303cf = call i32 @function_303d6()
  br label %dec_label_pc_303d1

dec_label_pc_303d1:                               ; preds = %bb, %dec_label_pc_30389
  %v2_303cf = phi i32 [ %v1_303cf, %bb ], [ %v3_303c0, %dec_label_pc_30389 ]
  ret i32 %v2_303cf
}

define i32 @function_303d6() local_unnamed_addr {
dec_label_pc_303d6:
  %v0_303d7 = load i32, i32* @eax, align 8
  ret i32 %v0_303d7
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_S1_IP6CBlock7CScriptEESt10_Select1stIS7_ESt4lessIS0_ESaIS7_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_303d8:
  ret i32 %arg1
}

define i32 @function_303fb() local_unnamed_addr {
dec_label_pc_303fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_303fc = load i32, i32* %eax.global-to-local, align 8
  %v11_303fc = and i32 %v0_303fc, -252
  store i32 %v11_303fc, i32* %eax.global-to-local, align 8
  %v1_303fe = inttoptr i32 %v11_303fc to i32*
  %v2_303fe = load i32, i32* %v1_303fe, align 4
  %v4_303fe = add i32 %v2_303fe, %v11_303fc
  store i32 %v4_303fe, i32* %v1_303fe, align 4
  %v22_303fe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_303fe

; uselistorder directives
  uselistorder i32 %v11_303fc, { 0, 2, 1 }
}

define i32 @function_3041a() local_unnamed_addr {
dec_label_pc_3041a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3041a = load i32, i32* %ecx.global-to-local, align 8
  %v1_3041a = add i32 %v0_3041a, -1
  store i32 %v1_3041a, i32* %ecx.global-to-local, align 8
  %v0_3041c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3041c
}

define i32 @_ZNSt4pairIK7uint256S_IP6CBlock7CScriptEEC1ERKS6_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_3041e:
  ret i32 %arg1
}

define i32 @function_30444(i32 %arg1) local_unnamed_addr {
dec_label_pc_30444:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_30444 = load i32, i32* @ebx, align 4
  %v1_30444 = add i32 %v0_30444, 1216939082
  %v2_30444 = inttoptr i32 %v1_30444 to i8*
  %v3_30444 = load i8, i8* %v2_30444, align 1
  %v4_30444 = load i32, i32* @ecx, align 8
  %v5_30444 = trunc i32 %v4_30444 to i8
  %v6_30444 = or i8 %v5_30444, %v3_30444
  store i8 %v6_30444, i8* %v2_30444, align 1
  %v0_3044a = load i32, i32* @eax, align 8
  %v1_3044a = trunc i32 %v0_3044a to i8
  %v2_3044a = add i32 %v0_3044a, 139
  %v6_3044a = icmp ugt i8 %v1_3044a, 116
  store i1 %v6_3044a, i1* %cf.global-to-local, align 1
  %v16_3044a = urem i32 %v2_3044a, 256
  %v18_3044a = and i32 %v0_3044a, -256
  %v19_3044a = or i32 %v16_3044a, %v18_3044a
  store i32 %v19_3044a, i32* %eax.global-to-local, align 8
  %v0_3044c = load i32, i32* @edx, align 4
  %v1_3044c = add i32 %v0_3044c, -1
  store i32 %v1_3044c, i32* %edx.global-to-local, align 4
  %v0_3044d = load i32, i32* @ecx, align 8
  %v1_3044d = add i32 %v0_3044d, 1250625608
  %v2_3044d = inttoptr i32 %v1_3044d to i8*
  %v3_3044d = load i8, i8* %v2_3044d, align 1
  %v5_3044d = trunc i32 %v0_3044d to i8
  %v6_3044d = or i8 %v3_3044d, %v5_3044d
  store i8 %v6_3044d, i8* %v2_3044d, align 1
  %v0_30453 = load i32, i32* %eax.global-to-local, align 8
  %v11_30453 = or i32 %v0_30453, 137
  %v1_30455 = add i32 %v11_30453, -1
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_30456 = or i32 %v1_30455, 139
  store i32 %v11_30456, i32* %eax.global-to-local, align 8
  %v0_30458 = load i32, i32* %edx.global-to-local, align 4
  %v1_30458 = add i32 %v0_30458, -1
  store i32 %v1_30458, i32* %edx.global-to-local, align 4
  %v0_30459 = load i32, i32* @ecx, align 8
  %v1_30459 = add i32 %v0_30459, 1250627656
  %v2_30459 = inttoptr i32 %v1_30459 to i8*
  %v3_30459 = load i8, i8* %v2_30459, align 1
  %v5_30459 = trunc i32 %v0_30459 to i8
  %v8_30459 = add i8 %v3_30459, %v5_30459
  %v28_30459 = icmp ult i8 %v8_30459, %v3_30459
  store i1 %v28_30459, i1* %cf.global-to-local, align 1
  store i8 %v8_30459, i8* %v2_30459, align 1
  %v0_3045f = load i32, i32* %eax.global-to-local, align 8
  %v1_3045f = trunc i32 %v0_3045f to i8
  %v2_3045f = load i1, i1* %cf.global-to-local, align 1
  %v3_3045f = zext i1 %v2_3045f to i8
  %v4_3045f = add i8 %v1_3045f, -119
  %v5_3045f = add i8 %v4_3045f, %v3_3045f
  %v22_3045f = icmp ule i8 %v5_3045f, %v1_3045f
  %v23_3045f = icmp ugt i8 %v1_3045f, 118
  %v24_3045f = select i1 %v2_3045f, i1 %v22_3045f, i1 %v23_3045f
  %v25_3045f = zext i8 %v5_3045f to i32
  %v27_3045f = and i32 %v0_3045f, -256
  %v28_3045f = or i32 %v25_3045f, %v27_3045f
  %v1_30461 = add i32 %v28_3045f, -1
  %v11_30461 = trunc i32 %v1_30461 to i8
  %v4_30462 = select i1 %v24_3045f, i8 -116, i8 -117
  %v5_30462 = add i8 %v4_30462, %v11_30461
  %v22_30462 = icmp ule i8 %v5_30462, %v11_30461
  %v23_30462 = icmp ugt i8 %v11_30461, 116
  %v24_30462 = select i1 %v24_3045f, i1 %v22_30462, i1 %v23_30462
  store i1 %v24_30462, i1* %cf.global-to-local, align 1
  %v25_30462 = zext i8 %v5_30462 to i32
  %v27_30462 = and i32 %v1_30461, -256
  %v28_30462 = or i32 %v25_30462, %v27_30462
  store i32 %v28_30462, i32* %eax.global-to-local, align 8
  %v0_30464 = load i32, i32* %edx.global-to-local, align 4
  %v1_30464 = add i32 %v0_30464, -1
  store i32 %v1_30464, i32* %edx.global-to-local, align 4
  %v0_30465 = load i32, i32* @ecx, align 8
  %v1_30465 = add i32 %v0_30465, 1384847432
  %v2_30465 = inttoptr i32 %v1_30465 to i8*
  %v3_30465 = load i8, i8* %v2_30465, align 1
  %v5_30465 = trunc i32 %v0_30465 to i8
  %v7_30465 = zext i1 %v24_30462 to i8
  %v8_30465 = sub i8 %v3_30465, %v5_30465
  %v9_30465 = add i8 %v8_30465, %v7_30465
  %v19_30465 = sub i8 %v8_30465, %v7_30465
  %v20_30465 = icmp ult i8 %v3_30465, %v19_30465
  %v21_30465 = icmp ne i8 %v5_30465, -1
  %v22_30465 = or i1 %v21_30465, %v20_30465
  %v23_30465 = icmp ult i8 %v3_30465, %v5_30465
  %v24_30465 = select i1 %v24_30462, i1 %v22_30465, i1 %v23_30465
  store i1 %v24_30465, i1* %cf.global-to-local, align 1
  store i8 %v9_30465, i8* %v2_30465, align 1
  %v0_3046b = load i32, i32* %eax.global-to-local, align 8
  %v1_3046b = trunc i32 %v0_3046b to i8
  %v2_3046b = load i1, i1* %cf.global-to-local, align 1
  %v3_3046b = zext i1 %v2_3046b to i8
  %v4_3046b = add i8 %v1_3046b, 119
  %v5_3046b = add i8 %v4_3046b, %v3_3046b
  %v17_3046b = icmp ult i8 %v1_3046b, -119
  %v18_3046b = or i1 %v2_3046b, %v17_3046b
  %v31_3046b = zext i8 %v5_3046b to i32
  %v33_3046b = and i32 %v0_3046b, -256
  %v34_3046b = or i32 %v31_3046b, %v33_3046b
  %v3_3046e = zext i1 %v18_3046b to i8
  %v4_3046e = add i8 %v5_3046b, 117
  %v5_3046e = add i8 %v4_3046e, %v3_3046e
  %v17_3046e = icmp ult i8 %v5_3046b, -117
  %v18_3046e = or i1 %v18_3046b, %v17_3046e
  store i1 %v18_3046e, i1* %cf.global-to-local, align 1
  %v31_3046e = zext i8 %v5_3046e to i32
  %v34_3046e = or i32 %v31_3046e, %v33_3046b
  store i32 %v34_3046e, i32* %eax.global-to-local, align 8
  %v0_30470 = load i32, i32* @ebp, align 4
  %v1_30470 = add i32 %v0_30470, 1
  store i32 %v1_30470, i32* @ebp, align 4
  %v0_30471 = load i32, i32* @ecx, align 8
  %v1_30471 = add i32 %v0_30471, -1
  store i32 %v1_30471, i32* %ecx.global-to-local, align 8
  store i32 %v34_3046e, i32* %stack_var_-8, align 4
  %v0_30474 = load i32, i32* @ebx, align 4
  %v1_30474 = add i32 %v0_30474, -1065098171
  %v2_30474 = inttoptr i32 %v1_30474 to i8*
  %v3_30474 = load i8, i8* %v2_30474, align 1
  %v5_30474 = trunc i32 %v1_30471 to i8
  %v6_30474 = and i8 %v3_30474, %v5_30474
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_30474, i8* %v2_30474, align 1
  %v0_3047a = load i32, i32* %ecx.global-to-local, align 8
  %v1_3047a = add i32 %v0_3047a, -1996217260
  %v2_3047a = inttoptr i32 %v1_3047a to i8*
  %v3_3047a = load i8, i8* %v2_3047a, align 1
  %v5_3047a = trunc i32 %v0_3047a to i8
  %v6_3047a = and i8 %v3_3047a, %v5_3047a
  store i8 %v6_3047a, i8* %v2_3047a, align 1
  %v0_30480 = load i32, i32* %eax.global-to-local, align 8
  %v1_30480 = trunc i32 %v0_30480 to i8
  %v2_30480 = add i32 %v0_30480, 36
  %v6_30480 = icmp ugt i8 %v1_30480, -37
  store i1 %v6_30480, i1* %cf.global-to-local, align 1
  %v16_30480 = and i32 %v2_30480, 255
  %v18_30480 = and i32 %v0_30480, -256
  %v19_30480 = or i32 %v16_30480, %v18_30480
  store i32 %v19_30480, i32* %eax.global-to-local, align 8
  %v0_30482 = load i32, i32* %stack_var_-8, align 4
  %v2_30482 = call i32 @unknown_486bc(i32 %v0_30482, i32 %v34_3046b)
  store i32 %v2_30482, i32* %eax.global-to-local, align 8
  %v0_30487 = load i32, i32* @ebp, align 4
  %v1_30487 = add i32 %v0_30487, -12
  %v2_30487 = inttoptr i32 %v1_30487 to i32*
  %v3_30487 = load i32, i32* %v2_30487, align 4
  store i32 %v3_30487, i32* %eax.global-to-local, align 8
  %v1_3048a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3048a = xor i32 %v1_3048a, %v3_30487
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3048a = icmp eq i32 %v2_3048a, 0
  store i32 %v2_3048a, i32* @eax, align 8
  br i1 %v3_3048a, label %bb, label %dec_label_pc_30493

bb:                                               ; preds = %dec_label_pc_30444
  %v1_30491 = call i32 @function_30498()
  store i32 %v1_30491, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_30493

dec_label_pc_30493:                               ; preds = %bb, %dec_label_pc_30444
  %v3_30491 = phi i32 [ %v1_30491, %bb ], [ %v2_3048a, %dec_label_pc_30444 ]
  ret i32 %v3_30491

; uselistorder directives
  uselistorder i32 %v0_30480, { 1, 0, 2 }
  uselistorder i8 %v5_3046b, { 1, 0, 2 }
  uselistorder i8 %v1_3046b, { 1, 0 }
  uselistorder i8 %v8_30465, { 1, 0 }
  uselistorder i8 %v7_30465, { 1, 0 }
  uselistorder i8 %v5_30465, { 1, 0, 2 }
  uselistorder i1 %v24_30462, { 1, 0, 2 }
  uselistorder i8 %v5_30462, { 1, 0 }
  uselistorder i8 %v11_30461, { 2, 1, 0 }
  uselistorder i1 %v24_3045f, { 1, 0 }
  uselistorder i8 %v5_3045f, { 1, 0 }
  uselistorder i32 %v0_3044a, { 1, 0, 2 }
}

define i32 @function_30498() local_unnamed_addr {
dec_label_pc_30498:
  %v0_30499 = load i32, i32* @eax, align 8
  ret i32 %v0_30499
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256S1_IP6CBlock7CScriptEEE9constructEPS8_RKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3049a:
  ret i32 %arg2
}

define i32 @function_304b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_304b0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_304b0 = load i32, i32* @ebp, align 4
  %v1_304b0 = add i32 %v0_304b0, 1
  store i32 %v1_304b0, i32* @ebp, align 4
  %v0_304b1 = load i32, i32* @ecx, align 8
  %v1_304b1 = add i32 %v0_304b1, -1587164091
  %v2_304b1 = inttoptr i32 %v1_304b1 to i8*
  %v3_304b1 = load i8, i8* %v2_304b1, align 1
  %v5_304b1 = trunc i32 %v0_304b1 to i8
  %v6_304b1 = load i1, i1* @cf, align 1
  %v7_304b1 = zext i1 %v6_304b1 to i8
  %v8_304b1 = add i8 %v3_304b1, %v5_304b1
  %v9_304b1 = add i8 %v7_304b1, %v8_304b1
  %v27_304b1 = icmp ule i8 %v9_304b1, %v3_304b1
  %v28_304b1 = icmp ult i8 %v8_304b1, %v3_304b1
  %v29_304b1 = select i1 %v6_304b1, i1 %v27_304b1, i1 %v28_304b1
  store i1 %v29_304b1, i1* %cf.global-to-local, align 1
  store i8 %v9_304b1, i8* %v2_304b1, align 1
  %v0_304b7 = load i32, i32* @eax, align 8
  %v1_304b7 = trunc i32 %v0_304b7 to i8
  %v2_304b7 = load i1, i1* %cf.global-to-local, align 1
  %v3_304b7 = zext i1 %v2_304b7 to i8
  %v4_304b7 = add i8 %v3_304b7, %v1_304b7
  %v19_304b7 = icmp ule i8 %v4_304b7, %v1_304b7
  %v21_304b7 = icmp eq i1 %v2_304b7, %v19_304b7
  store i1 %v21_304b7, i1* %cf.global-to-local, align 1
  %v22_304b7 = zext i8 %v4_304b7 to i32
  %v24_304b7 = and i32 %v0_304b7, -256
  %v25_304b7 = or i32 %v22_304b7, %v24_304b7
  store i32 %v25_304b7, i32* %eax.global-to-local, align 8
  %v1_304b9 = inttoptr i32 %v25_304b7 to i8*
  %v2_304b9 = load i8, i8* %v1_304b9, align 1
  %v5_304b9 = add i8 %v2_304b9, %v4_304b7
  store i8 %v5_304b9, i8* %v1_304b9, align 1
  %v0_304bb = load i32, i32* %eax.global-to-local, align 8
  %v1_304bb = load i32, i32* @ebp, align 4
  %v2_304bb = add i32 %v1_304bb, -28
  %v3_304bb = inttoptr i32 %v2_304bb to i32*
  store i32 %v0_304bb, i32* %v3_304bb, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* @eax, align 8
  %v0_304c0 = load i32, i32* @ebp, align 4
  %v1_304c0 = add i32 %v0_304c0, -48
  %v2_304c0 = inttoptr i32 %v1_304c0 to i32*
  %v3_304c0 = load i32, i32* %v2_304c0, align 4
  %v2_304ce = call i32 @function_361c6(i32 ptrtoint (i32* @global_var_30.2823 to i32), i32 %v3_304c0)
  store i32 %v2_304ce, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_304d5 = icmp eq i32 %v2_304ce, 0
  br i1 %v1_304d5, label %bb, label %dec_label_pc_304d9

bb:                                               ; preds = %dec_label_pc_304b0
  %v1_304d7 = call i32 @function_30502()
  store i32 %v1_304d7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_304d9

dec_label_pc_304d9:                               ; preds = %bb, %dec_label_pc_304b0
  %v0_304d9 = load i32, i32* @ebp, align 4
  %v1_304d9 = add i32 %v0_304d9, -52
  %v2_304d9 = inttoptr i32 %v1_304d9 to i32*
  %v3_304d9 = load i32, i32* %v2_304d9, align 4
  store i32 %v3_304d9, i32* %eax.global-to-local, align 8
  %v2_304e3 = call i32 @unknown_608b8(i32 %v2_304ce, i32 %v3_304d9)
  store i32 %v2_304e3, i32* %eax.global-to-local, align 8
  %v0_304e8 = call i32 @function_30502()
  store i32 %v0_304e8, i32* %eax.global-to-local, align 8
  ret i32 %v0_304e8

; uselistorder directives
  uselistorder i8 %v4_304b7, { 0, 2, 1 }
  uselistorder i8 %v1_304b7, { 1, 0 }
  uselistorder i8 %v9_304b1, { 1, 0 }
  uselistorder i8 %v8_304b1, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @function_30502, { 1, 0 }
}

define i32 @function_304f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_304f4:
  %v2_304f4 = load i32, i32* @ebp, align 4
  %v3_304f4 = load i32, i32* @ebx, align 4
  %v4_304f4 = add i32 %v3_304f4, %v2_304f4
  %v21_304f4 = inttoptr i32 %v2_304f4 to i32*
  store i32 %v4_304f4, i32* %v21_304f4, align 4
  %v0_304f7 = load i32, i32* @ecx, align 8
  %v1_304f7 = add i32 %v0_304f7, 604277240
  %v2_304f7 = inttoptr i32 %v1_304f7 to i8*
  %v3_304f7 = load i8, i8* %v2_304f7, align 1
  %v5_304f7 = trunc i32 %v0_304f7 to i8
  %v6_304f7 = add i8 %v3_304f7, %v5_304f7
  store i8 %v6_304f7, i8* %v2_304f7, align 1
  %v24_304f7 = load i32, i32* @eax, align 8
  ret i32 %v24_304f7

; uselistorder directives
  uselistorder i32 %v2_304f4, { 1, 0 }
}

define i32 @function_30502() local_unnamed_addr {
dec_label_pc_30502:
  %v0_30502 = load i32, i32* @ebp, align 4
  %v1_30502 = add i32 %v0_30502, -28
  %v2_30502 = inttoptr i32 %v1_30502 to i32*
  %v3_30502 = load i32, i32* %v2_30502, align 4
  %v1_30505 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_30505 = xor i32 %v1_30505, %v3_30502
  %v3_30505 = icmp eq i32 %v2_30505, 0
  store i32 %v2_30505, i32* @eax, align 8
  br i1 %v3_30505, label %bb, label %dec_label_pc_3050e

bb:                                               ; preds = %dec_label_pc_30502
  %v1_3050c = call i32 @function_30513()
  br label %dec_label_pc_3050e

dec_label_pc_3050e:                               ; preds = %bb, %dec_label_pc_30502
  %v2_3050c = phi i32 [ %v1_3050c, %bb ], [ %v2_30505, %dec_label_pc_30502 ]
  ret i32 %v2_3050c
}

define i32 @function_30513() local_unnamed_addr {
dec_label_pc_30513:
  %v0_3051a = load i32, i32* @eax, align 8
  ret i32 %v0_3051a
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3051b:
  ret i32 %arg2
}

define i32 @function_30530(i32 %arg1) local_unnamed_addr {
dec_label_pc_30530:
  %v0_30530 = load i32, i32* @ebp, align 4
  %v1_30530 = add i32 %v0_30530, 16
  %v2_30530 = inttoptr i32 %v1_30530 to i32*
  %v3_30530 = load i32, i32* %v2_30530, align 4
  %v2_30533 = add i32 %v0_30530, -52
  %v3_30533 = inttoptr i32 %v2_30533 to i32*
  store i32 %v3_30530, i32* %v3_30533, align 4
  %v0_30536 = load i32, i32* @ebp, align 4
  %v1_30536 = add i32 %v0_30536, 20
  %v2_30536 = inttoptr i32 %v1_30536 to i32*
  %v3_30536 = load i32, i32* %v2_30536, align 4
  %v2_30539 = add i32 %v0_30536, -56
  %v3_30539 = inttoptr i32 %v2_30539 to i32*
  store i32 %v3_30536, i32* %v3_30539, align 4
  %v0_3053c = load i32, i32* @ebp, align 4
  %v1_3053c = add i32 %v0_3053c, 24
  %v2_3053c = inttoptr i32 %v1_3053c to i8*
  %v3_3053c = load i8, i8* %v2_3053c, align 1
  %v3_30540 = add i32 %v0_3053c, -57
  %v4_30540 = inttoptr i32 %v3_30540 to i8*
  store i8 %v3_3053c, i8* %v4_30540, align 1
  %v0_30543 = load i32, i32* @ebp, align 4
  %v1_30543 = add i32 %v0_30543, 28
  %v2_30543 = inttoptr i32 %v1_30543 to i8*
  %v3_30543 = load i8, i8* %v2_30543, align 1
  %v3_30547 = add i32 %v0_30543, -58
  %v4_30547 = inttoptr i32 %v3_30547 to i8*
  store i8 %v3_30543, i8* %v4_30547, align 1
  %v0_3054a = load i32, i32* @ebp, align 4
  %v1_3054a = add i32 %v0_3054a, 32
  %v2_3054a = inttoptr i32 %v1_3054a to i32*
  %v3_3054a = load i32, i32* %v2_3054a, align 4
  %v2_3054d = add i32 %v0_3054a, -64
  %v3_3054d = inttoptr i32 %v2_3054d to i32*
  store i32 %v3_3054a, i32* %v3_3054d, align 4
  %v0_30550 = load i32, i32* @ebp, align 4
  %v1_30550 = add i32 %v0_30550, 36
  %v2_30550 = inttoptr i32 %v1_30550 to i32*
  %v3_30550 = load i32, i32* %v2_30550, align 4
  %v2_30553 = add i32 %v0_30550, -68
  %v3_30553 = inttoptr i32 %v2_30553 to i32*
  store i32 %v3_30550, i32* %v3_30553, align 4
  %v0_30556 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_30556
}

define i32 @function_3055d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3055d:
  %v0_3055d = load i32, i32* @ebp, align 4
  %v1_3055d = add i32 %v0_3055d, 1
  store i32 %v1_3055d, i32* @ebp, align 4
  %v0_30560 = load i32, i32* @ebx, align 4
  %v1_30560 = add i32 %v0_30560, 252956797
  %v2_30560 = inttoptr i32 %v1_30560 to i8*
  %v3_30560 = load i8, i8* %v2_30560, align 1
  %v4_30560 = shl i8 %v3_30560, 7
  %v5_30560 = udiv i8 %v3_30560, 2
  %v6_30560 = or i8 %v5_30560, %v4_30560
  store i8 %v6_30560, i8* %v2_30560, align 1
  %v0_3056a = load i32, i32* @ebx, align 4
  %v1_3056a = add i32 %v0_3056a, -524169147
  %v2_3056a = inttoptr i32 %v1_3056a to i8*
  %v3_3056a = load i8, i8* %v2_3056a, align 1
  %v4_3056a = load i32, i32* @ecx, align 8
  %v5_3056a = trunc i32 %v4_3056a to i8
  %v6_3056a = add i8 %v5_3056a, %v3_3056a
  store i8 %v6_3056a, i8* %v2_3056a, align 1
  %v0_30570 = load i32, i32* @eax, align 8
  %v1_30570 = trunc i32 %v0_30570 to i8
  %v3_30570 = add i32 %v0_30570, 122
  %v8_30570 = icmp ugt i8 %v1_30570, -123
  store i1 %v8_30570, i1* @cf, align 1
  %v18_30570 = and i32 %v3_30570, 255
  %v20_30570 = and i32 %v0_30570, -256
  %v21_30570 = or i32 %v18_30570, %v20_30570
  %v1_30576 = inttoptr i32 %v21_30570 to i32*
  %v2_30576 = load i32, i32* %v1_30576, align 4
  ret i32 %v2_30576

; uselistorder directives
  uselistorder i32 %v0_30570, { 1, 0, 2 }
}

define i32 @function_3057a() local_unnamed_addr {
dec_label_pc_3057a:
  %v0_30582 = load i32, i32* @ebp, align 4
  %v1_30582 = add i32 %v0_30582, -83
  %v2_30582 = inttoptr i32 %v1_30582 to i8*
  %v3_30582 = load i8, i8* %v2_30582, align 1
  %v1_30592 = add i32 %v0_30582, -56
  %v2_30592 = inttoptr i32 %v1_30592 to i32*
  %v3_30592 = load i32, i32* %v2_30592, align 4
  %v1_30599 = add i32 %v0_30582, -52
  %v2_30599 = inttoptr i32 %v1_30599 to i32*
  %v3_30599 = load i32, i32* %v2_30599, align 4
  %v1_305a0 = add i32 %v0_30582, -44
  %v2_305a0 = inttoptr i32 %v1_305a0 to i32*
  %v3_305a0 = load i32, i32* %v2_305a0, align 4
  %v6_305a6 = sext i8 %v3_30582 to i32
  %v7_305a6 = call i32 @unknown_62aa7(i32 %v3_305a0, i32 %v3_30599, i32 %v3_30592, i32 0, i32 %v6_305a6, i32 1)
  store i32 %v7_305a6, i32* @eax, align 8
  %v0_305ab = call i32 @function_309dc()
  ret i32 %v0_305ab

; uselistorder directives
  uselistorder i32 %v0_30582, { 0, 2, 1, 3 }
}

define i32 @function_305b0() local_unnamed_addr {
dec_label_pc_305b0:
  %v0_305b8 = load i32, i32* @ebp, align 4
  %v1_305b8 = add i32 %v0_305b8, -82
  %v2_305b8 = inttoptr i32 %v1_305b8 to i8*
  %v3_305b8 = load i8, i8* %v2_305b8, align 1
  %v1_305c8 = add i32 %v0_305b8, -56
  %v2_305c8 = inttoptr i32 %v1_305c8 to i32*
  %v3_305c8 = load i32, i32* %v2_305c8, align 4
  %v1_305cf = add i32 %v0_305b8, -52
  %v2_305cf = inttoptr i32 %v1_305cf to i32*
  %v3_305cf = load i32, i32* %v2_305cf, align 4
  %v1_305d6 = add i32 %v0_305b8, -44
  %v2_305d6 = inttoptr i32 %v1_305d6 to i32*
  %v3_305d6 = load i32, i32* %v2_305d6, align 4
  %v6_305dc = sext i8 %v3_305b8 to i32
  %v7_305dc = call i32 @unknown_62b14(i32 %v3_305d6, i32 %v3_305cf, i32 %v3_305c8, i32 0, i32 %v6_305dc, i32 1)
  store i32 %v7_305dc, i32* @eax, align 8
  %v0_305e1 = call i32 @function_309dc()
  ret i32 %v0_305e1

; uselistorder directives
  uselistorder i32 %v0_305b8, { 0, 2, 1, 3 }
}

define i32 @function_305e6() local_unnamed_addr {
dec_label_pc_305e6:
  %v0_305ee = load i32, i32* @ebp, align 4
  %v1_305ee = add i32 %v0_305ee, -81
  %v2_305ee = inttoptr i32 %v1_305ee to i8*
  %v3_305ee = load i8, i8* %v2_305ee, align 1
  %v1_305fe = add i32 %v0_305ee, -56
  %v2_305fe = inttoptr i32 %v1_305fe to i32*
  %v3_305fe = load i32, i32* %v2_305fe, align 4
  %v1_30605 = add i32 %v0_305ee, -52
  %v2_30605 = inttoptr i32 %v1_30605 to i32*
  %v3_30605 = load i32, i32* %v2_30605, align 4
  %v1_3060c = add i32 %v0_305ee, -44
  %v2_3060c = inttoptr i32 %v1_3060c to i32*
  %v3_3060c = load i32, i32* %v2_3060c, align 4
  %v6_30612 = sext i8 %v3_305ee to i32
  %v7_30612 = call i32 @unknown_62b81(i32 %v3_3060c, i32 %v3_30605, i32 %v3_305fe, i32 0, i32 %v6_30612, i32 1)
  store i32 %v7_30612, i32* @eax, align 8
  %v0_30617 = call i32 @function_309dc()
  ret i32 %v0_30617

; uselistorder directives
  uselistorder i32 %v0_305ee, { 0, 2, 1, 3 }
}

define i32 @function_3061c() local_unnamed_addr {
dec_label_pc_3061c:
  %v0_30624 = load i32, i32* @ebp, align 4
  %v1_30624 = add i32 %v0_30624, -80
  %v2_30624 = inttoptr i32 %v1_30624 to i8*
  %v3_30624 = load i8, i8* %v2_30624, align 1
  %v1_30634 = add i32 %v0_30624, -56
  %v2_30634 = inttoptr i32 %v1_30634 to i32*
  %v3_30634 = load i32, i32* %v2_30634, align 4
  %v1_3063b = add i32 %v0_30624, -52
  %v2_3063b = inttoptr i32 %v1_3063b to i32*
  %v3_3063b = load i32, i32* %v2_3063b, align 4
  %v1_30642 = add i32 %v0_30624, -44
  %v2_30642 = inttoptr i32 %v1_30642 to i32*
  %v3_30642 = load i32, i32* %v2_30642, align 4
  %v6_30648 = sext i8 %v3_30624 to i32
  %v7_30648 = call i32 @unknown_62bee(i32 %v3_30642, i32 %v3_3063b, i32 %v3_30634, i32 0, i32 %v6_30648, i32 1)
  store i32 %v7_30648, i32* @eax, align 8
  %v0_3064d = call i32 @function_309dc()
  ret i32 %v0_3064d

; uselistorder directives
  uselistorder i32 %v0_30624, { 0, 2, 1, 3 }
}

define i32 @function_30652() local_unnamed_addr {
dec_label_pc_30652:
  %v0_3065a = load i32, i32* @ebp, align 4
  %v1_3065a = add i32 %v0_3065a, -79
  %v2_3065a = inttoptr i32 %v1_3065a to i8*
  %v3_3065a = load i8, i8* %v2_3065a, align 1
  %v1_3066a = add i32 %v0_3065a, -56
  %v2_3066a = inttoptr i32 %v1_3066a to i32*
  %v3_3066a = load i32, i32* %v2_3066a, align 4
  %v1_30671 = add i32 %v0_3065a, -52
  %v2_30671 = inttoptr i32 %v1_30671 to i32*
  %v3_30671 = load i32, i32* %v2_30671, align 4
  %v1_30678 = add i32 %v0_3065a, -44
  %v2_30678 = inttoptr i32 %v1_30678 to i32*
  %v3_30678 = load i32, i32* %v2_30678, align 4
  %v6_3067e = sext i8 %v3_3065a to i32
  %v7_3067e = call i32 @unknown_62c5b(i32 %v3_30678, i32 %v3_30671, i32 %v3_3066a, i32 0, i32 %v6_3067e, i32 1)
  store i32 %v7_3067e, i32* @eax, align 8
  %v0_30683 = call i32 @function_309dc()
  ret i32 %v0_30683

; uselistorder directives
  uselistorder i32 %v0_3065a, { 0, 2, 1, 3 }
}

define i32 @function_30688(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30688:
  %v0_30690 = load i32, i32* @ebp, align 4
  %v1_30690 = add i32 %v0_30690, -78
  %v2_30690 = inttoptr i32 %v1_30690 to i8*
  %v3_30690 = load i8, i8* %v2_30690, align 1
  %v1_306a0 = add i32 %v0_30690, -56
  %v2_306a0 = inttoptr i32 %v1_306a0 to i32*
  %v3_306a0 = load i32, i32* %v2_306a0, align 4
  %v1_306a7 = add i32 %v0_30690, -52
  %v2_306a7 = inttoptr i32 %v1_306a7 to i32*
  %v3_306a7 = load i32, i32* %v2_306a7, align 4
  %v1_306ae = add i32 %v0_30690, -44
  %v2_306ae = inttoptr i32 %v1_306ae to i32*
  %v3_306ae = load i32, i32* %v2_306ae, align 4
  %v6_306b4 = sext i8 %v3_30690 to i32
  %v7_306b4 = call i32 @unknown_62cc8(i32 %v3_306ae, i32 %v3_306a7, i32 %v3_306a0, i32 0, i32 %v6_306b4, i32 1)
  store i32 %v7_306b4, i32* @eax, align 8
  %v0_306b9 = call i32 @function_309dc()
  ret i32 %v0_306b9

; uselistorder directives
  uselistorder i32 %v0_30690, { 0, 2, 1, 3 }
}

define i32 @function_306e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_306e8:
  %v1_306ea = call i32 @unknown_62d35(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_306ea, i32* @eax, align 8
  %v0_306ef = call i32 @function_309dc()
  ret i32 %v0_306ef
}

define i32 @function_306f4() local_unnamed_addr {
dec_label_pc_306f4:
  %v0_306fc = load i32, i32* @ebp, align 4
  %v1_3071a = add i32 %v0_306fc, -44
  %v2_3071a = inttoptr i32 %v1_3071a to i32*
  %v3_3071a = load i32, i32* %v2_3071a, align 4
  %v1_30720 = call i32 @unknown_62d35(i32 %v3_3071a)
  store i32 %v1_30720, i32* @eax, align 8
  %v0_30725 = call i32 @function_309dc()
  ret i32 %v0_30725
}

define i32 @function_3072a() local_unnamed_addr {
dec_label_pc_3072a:
  %v0_30732 = load i32, i32* @ebp, align 4
  %v1_30750 = add i32 %v0_30732, -44
  %v2_30750 = inttoptr i32 %v1_30750 to i32*
  %v3_30750 = load i32, i32* %v2_30750, align 4
  %v1_30756 = call i32 @unknown_62d35(i32 %v3_30750)
  store i32 %v1_30756, i32* @eax, align 8
  %v0_3075b = call i32 @function_309dc()
  ret i32 %v0_3075b
}

define i32 @function_30774(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30774:
  %v2_30774 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30774 = load i32, i32* @eax, align 8
  %v4_30774 = trunc i32 %v3_30774 to i8
  %v5_30774 = add i8 %v4_30774, %v2_30774
  %v21_30774 = inttoptr i32 %v3_30774 to i8*
  store i8 %v5_30774, i8* %v21_30774, align 1
  %v2_30776 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30776 = load i32, i32* @eax, align 8
  %v4_30776 = trunc i32 %v3_30776 to i8
  %v5_30776 = add i8 %v4_30776, %v2_30776
  %v21_30776 = inttoptr i32 %v3_30776 to i8*
  store i8 %v5_30776, i8* %v21_30776, align 1
  %v0_30778 = load i32, i32* @ebp, align 4
  %v1_30786 = add i32 %v0_30778, -44
  %v2_30786 = inttoptr i32 %v1_30786 to i32*
  %v3_30786 = load i32, i32* %v2_30786, align 4
  %v1_3078c = call i32 @unknown_62d35(i32 %v3_30786)
  store i32 %v1_3078c, i32* @eax, align 8
  %v0_30791 = call i32 @function_309dc()
  ret i32 %v0_30791
}

define i32 @function_30796() local_unnamed_addr {
dec_label_pc_30796:
  %v0_3079e = load i32, i32* @ebp, align 4
  %v1_307bc = add i32 %v0_3079e, -44
  %v2_307bc = inttoptr i32 %v1_307bc to i32*
  %v3_307bc = load i32, i32* %v2_307bc, align 4
  %v1_307c2 = call i32 @unknown_62d35(i32 %v3_307bc)
  store i32 %v1_307c2, i32* @eax, align 8
  %v0_307c7 = call i32 @function_309dc()
  ret i32 %v0_307c7
}

define i32 @function_307fe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_307fe:
  %v2_30800 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30800 = load i32, i32* @eax, align 8
  %v4_30800 = trunc i32 %v3_30800 to i8
  %v5_30800 = add i8 %v4_30800, %v2_30800
  %v21_30800 = inttoptr i32 %v3_30800 to i8*
  store i8 %v5_30800, i8* %v21_30800, align 1
  %v0_3080a = load i32, i32* @ebp, align 4
  %v1_30828 = add i32 %v0_3080a, -44
  %v2_30828 = inttoptr i32 %v1_30828 to i32*
  %v3_30828 = load i32, i32* %v2_30828, align 4
  %v1_3082e = call i32 @unknown_62d35(i32 %v3_30828)
  store i32 %v1_3082e, i32* @eax, align 8
  %v0_30833 = call i32 @function_309dc()
  ret i32 %v0_30833
}

define i32 @function_30838() local_unnamed_addr {
dec_label_pc_30838:
  %v0_30840 = load i32, i32* @ebp, align 4
  %v1_3085e = add i32 %v0_30840, -44
  %v2_3085e = inttoptr i32 %v1_3085e to i32*
  %v3_3085e = load i32, i32* %v2_3085e, align 4
  %v1_30864 = call i32 @unknown_62d35(i32 %v3_3085e)
  store i32 %v1_30864, i32* @eax, align 8
  %v0_30869 = call i32 @function_309dc()
  ret i32 %v0_30869
}

define i32 @function_3086e() local_unnamed_addr {
dec_label_pc_3086e:
  %v0_30876 = load i32, i32* @ebp, align 4
  %v1_30894 = add i32 %v0_30876, -44
  %v2_30894 = inttoptr i32 %v1_30894 to i32*
  %v3_30894 = load i32, i32* %v2_30894, align 4
  %v1_3089a = call i32 @unknown_62d35(i32 %v3_30894)
  store i32 %v1_3089a, i32* @eax, align 8
  %v0_3089f = call i32 @function_309dc()
  ret i32 %v0_3089f
}

define i32 @function_308a4() local_unnamed_addr {
dec_label_pc_308a4:
  %v0_308ac = load i32, i32* @ebp, align 4
  %v1_308ca = add i32 %v0_308ac, -44
  %v2_308ca = inttoptr i32 %v1_308ca to i32*
  %v3_308ca = load i32, i32* %v2_308ca, align 4
  %v1_308d0 = call i32 @unknown_62d35(i32 %v3_308ca)
  store i32 %v1_308d0, i32* @eax, align 8
  %v0_308d5 = call i32 @function_309dc()
  ret i32 %v0_308d5
}

define i32 @function_308e2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_308e2:
  %v0_308e2 = load i32, i32* @ebp, align 4
  %v1_30900 = add i32 %v0_308e2, -44
  %v2_30900 = inttoptr i32 %v1_30900 to i32*
  %v3_30900 = load i32, i32* %v2_30900, align 4
  %v1_30906 = call i32 @unknown_62d35(i32 %v3_30900)
  store i32 %v1_30906, i32* @eax, align 8
  %v0_3090b = call i32 @function_309dc()
  ret i32 %v0_3090b
}

define i32 @function_3092c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3092c:
  %v0_3092c = load i32, i32* @ebx, align 4
  %v1_3092c = add i32 %v0_3092c, 1149881413
  %v2_3092c = inttoptr i32 %v1_3092c to i8*
  %v3_3092c = load i8, i8* %v2_3092c, align 1
  %v4_3092c = load i32, i32* @ecx, align 8
  %v5_3092c = trunc i32 %v4_3092c to i8
  %v6_3092c = or i8 %v5_3092c, %v3_3092c
  store i8 %v6_3092c, i8* %v2_3092c, align 1
  %v0_30934 = load i32, i32* @ebp, align 4
  %v1_30934 = add i32 %v0_30934, -44
  %v2_30934 = inttoptr i32 %v1_30934 to i32*
  %v3_30934 = load i32, i32* %v2_30934, align 4
  %v1_3093a = call i32 @unknown_62d35(i32 %v3_30934)
  store i32 %v1_3093a, i32* @eax, align 8
  %v0_3093f = call i32 @function_309dc()
  ret i32 %v0_3093f
}

define i32 @function_3096d() local_unnamed_addr {
dec_label_pc_3096d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3096d = load i32, i32* %eax.global-to-local, align 8
  %v11_3096d = and i32 %v0_3096d, -24
  store i32 %v11_3096d, i32* %eax.global-to-local, align 8
  ret i32 %v11_3096d

; uselistorder directives
  uselistorder i32 %v11_3096d, { 1, 0 }
}

define i32 @function_30974(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30974:
  %eax.global-to-local = alloca i32, align 4
  %v0_30974 = load i32, i32* @esi, align 4
  %v2_30974 = add i32 %v0_30974, 36
  %tmp3 = urem i32 %v2_30974, 65536
  %v3_30974 = inttoptr i32 %tmp3 to i32*
  store i32 276, i32* %v3_30974, align 4
  %v0_3097c = load i32, i32* @eax, align 8
  %v1_3097c = add i32 %v0_3097c, -955243428
  %v2_3097c = inttoptr i32 %v1_3097c to i8*
  %v3_3097c = load i8, i8* %v2_3097c, align 1
  %v4_3097c = load i32, i32* @ecx, align 8
  %v5_3097c = trunc i32 %v4_3097c to i8
  %v6_3097c = add i8 %v5_3097c, %v3_3097c
  store i8 %v6_3097c, i8* %v2_3097c, align 1
  %v0_30983 = load i32, i32* @eax, align 8
  %v1_30983 = trunc i32 %v0_30983 to i8
  %v2_30983 = and i8 %v1_30983, 12
  %v8_30983 = zext i8 %v2_30983 to i32
  %v10_30983 = and i32 %v0_30983, -256
  %v11_30983 = or i32 %v8_30983, %v10_30983
  store i32 %v11_30983, i32* %eax.global-to-local, align 8
  %v1_30985 = inttoptr i32 %v11_30983 to i8*
  %v2_30985 = load i8, i8* %v1_30985, align 4
  %v5_30985 = add i8 %v2_30985, %v2_30983
  store i8 %v5_30985, i8* %v1_30985, align 4
  %v0_30987 = load i32, i32* %eax.global-to-local, align 8
  %v1_30987 = inttoptr i32 %v0_30987 to i8*
  %v2_30987 = load i8, i8* %v1_30987, align 1
  %v4_30987 = trunc i32 %v0_30987 to i8
  %v5_30987 = add i8 %v2_30987, %v4_30987
  store i8 %v5_30987, i8* %v1_30987, align 1
  %v0_30989 = load i32, i32* @ebp, align 4
  %v1_30989 = add i32 %v0_30989, -56
  %v2_30989 = inttoptr i32 %v1_30989 to i32*
  %v3_30989 = load i32, i32* %v2_30989, align 4
  store i32 %v3_30989, i32* %eax.global-to-local, align 8
  %v1_30990 = add i32 %v0_30989, -52
  %v2_30990 = inttoptr i32 %v1_30990 to i32*
  %v3_30990 = load i32, i32* %v2_30990, align 4
  store i32 %v3_30990, i32* %eax.global-to-local, align 8
  %v1_30997 = add i32 %v0_30989, -44
  %v2_30997 = inttoptr i32 %v1_30997 to i32*
  %v3_30997 = load i32, i32* %v2_30997, align 4
  store i32 %v3_30997, i32* %eax.global-to-local, align 8
  %v1_3099d = call i32 @unknown_62d35(i32 %v3_30997)
  store i32 %v1_3099d, i32* @eax, align 8
  %v0_309a2 = call i32 @function_309dc()
  store i32 %v0_309a2, i32* %eax.global-to-local, align 8
  ret i32 %v0_309a2

; uselistorder directives
  uselistorder i32 ()* @function_309dc, { 6, 5, 4, 17, 16, 15, 3, 14, 2, 13, 12, 1, 0, 11, 10, 9, 8, 7 }
  uselistorder i32 (i32)* @unknown_62d35, { 5, 4, 3, 11, 10, 9, 2, 8, 1, 7, 6, 0 }
  uselistorder i32 65536, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 12, 11, 17, 18, 16, 15, 21, 22, 20, 19, 25, 24, 23, 29, 26, 30, 27, 31, 28, 33, 32, 35, 34, 37, 36, 40, 38, 41, 39, 42, 45, 43, 46, 44 }
}

define i32 @function_309dc() local_unnamed_addr {
dec_label_pc_309dc:
  %v0_309dc = load i32, i32* @ebp, align 4
  %v1_309dc = add i32 %v0_309dc, -28
  %v2_309dc = inttoptr i32 %v1_309dc to i32*
  %v3_309dc = load i32, i32* %v2_309dc, align 4
  %v1_309df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_309df = icmp eq i32 %v1_309df, %v3_309dc
  br i1 %v3_309df, label %bb, label %dec_label_pc_309dc.dec_label_pc_309e8_crit_edge

dec_label_pc_309dc.dec_label_pc_309e8_crit_edge:  ; preds = %dec_label_pc_309dc
  %v2_309e6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_309e8

bb:                                               ; preds = %dec_label_pc_309dc
  %v1_309e6 = call i32 @function_309ed()
  br label %dec_label_pc_309e8

dec_label_pc_309e8:                               ; preds = %dec_label_pc_309dc.dec_label_pc_309e8_crit_edge, %bb
  %v2_309e6 = phi i32 [ %v2_309e6.pre, %dec_label_pc_309dc.dec_label_pc_309e8_crit_edge ], [ %v1_309e6, %bb ]
  ret i32 %v2_309e6

; uselistorder directives
  uselistorder label %dec_label_pc_309e8, { 1, 0 }
}

define i32 @function_309ed() local_unnamed_addr {
dec_label_pc_309ed:
  %v0_309f4 = load i32, i32* @eax, align 8
  ret i32 %v0_309f4
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKSL_EEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_30a48:
  store i32 0, i32* @eax, align 8
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_30a98, label %bb

bb:                                               ; preds = %dec_label_pc_30a48
  %sext = mul i32 %arg6, 16777216
  %v12_30a92 = sdiv i32 %sext, 16777216
  %v13_30a92 = sext i8 %arg5 to i32
  %v14_30a92 = call i32 @function_30ed1(i32 %arg8, i32 %arg7, i32 %v12_30a92, i32 %v13_30a92, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_30a98

dec_label_pc_30a98:                               ; preds = %dec_label_pc_30a48, %bb
  %v2_30a9b = mul i32 %arg2, 4
  %v1_30a9e = add i32 %v2_30a9b, ptrtoint (i32* @global_var_30f24.2893 to i32)
  %v1_30aa3 = inttoptr i32 %v1_30a9e to i32*
  %v2_30aa3 = load i32, i32* %v1_30aa3, align 4
  ret i32 %v2_30aa3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_30a98, { 1, 0 }
}

define i32 @function_30aae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30aae:
  %v2_30aae = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_30aae = load i32, i32* @ecx, align 8
  %v4_30aae = trunc i32 %v3_30aae to i8
  %v5_30aae = add i8 %v4_30aae, %v2_30aae
  %v20_30aae = load i32, i32* @edi, align 4
  %v21_30aae = inttoptr i32 %v20_30aae to i8*
  store i8 %v5_30aae, i8* %v21_30aae, align 1
  %v0_30ab0 = load i32, i32* @edx, align 4
  %v0_30abf = load i32, i32* @ebp, align 4
  %v1_30abf = add i32 %v0_30abf, -56
  %v2_30abf = inttoptr i32 %v1_30abf to i32*
  %v3_30abf = load i32, i32* %v2_30abf, align 4
  %v1_30ac6 = add i32 %v0_30abf, -52
  %v2_30ac6 = inttoptr i32 %v1_30ac6 to i32*
  %v3_30ac6 = load i32, i32* %v2_30ac6, align 4
  %v1_30acd = add i32 %v0_30abf, -44
  %v2_30acd = inttoptr i32 %v1_30acd to i32*
  %v3_30acd = load i32, i32* %v2_30acd, align 4
  %sext = mul i32 %v0_30ab0, 16777216
  %v5_30ad3 = sdiv i32 %sext, 16777216
  %v6_30ad3 = call i32 @unknown_63323(i32 %v3_30acd, i32 %v3_30ac6, i32 %v3_30abf, i32 0, i32 %v5_30ad3)
  store i32 %v6_30ad3, i32* @eax, align 8
  %v0_30ad8 = call i32 @function_30f09()
  ret i32 %v0_30ad8
}

define i32 @function_30aba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30aba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30add() local_unnamed_addr {
dec_label_pc_30add:
  %v0_30ae5 = load i32, i32* @ebp, align 4
  %v1_30ae5 = add i32 %v0_30ae5, -82
  %v2_30ae5 = inttoptr i32 %v1_30ae5 to i8*
  %v3_30ae5 = load i8, i8* %v2_30ae5, align 1
  %v1_30af5 = add i32 %v0_30ae5, -56
  %v2_30af5 = inttoptr i32 %v1_30af5 to i32*
  %v3_30af5 = load i32, i32* %v2_30af5, align 4
  %v1_30afc = add i32 %v0_30ae5, -52
  %v2_30afc = inttoptr i32 %v1_30afc to i32*
  %v3_30afc = load i32, i32* %v2_30afc, align 4
  %v1_30b03 = add i32 %v0_30ae5, -44
  %v2_30b03 = inttoptr i32 %v1_30b03 to i32*
  %v3_30b03 = load i32, i32* %v2_30b03, align 4
  %v6_30b09 = sext i8 %v3_30ae5 to i32
  %v7_30b09 = call i32 @unknown_63390(i32 %v3_30b03, i32 %v3_30afc, i32 %v3_30af5, i32 0, i32 %v6_30b09, i32 1)
  store i32 %v7_30b09, i32* @eax, align 8
  %v0_30b0e = call i32 @function_30f09()
  ret i32 %v0_30b0e

; uselistorder directives
  uselistorder i32 %v0_30ae5, { 0, 2, 1, 3 }
}

define i32 @function_30b13() local_unnamed_addr {
dec_label_pc_30b13:
  %v0_30b1b = load i32, i32* @ebp, align 4
  %v1_30b1b = add i32 %v0_30b1b, -81
  %v2_30b1b = inttoptr i32 %v1_30b1b to i8*
  %v3_30b1b = load i8, i8* %v2_30b1b, align 1
  %v1_30b2b = add i32 %v0_30b1b, -56
  %v2_30b2b = inttoptr i32 %v1_30b2b to i32*
  %v3_30b2b = load i32, i32* %v2_30b2b, align 4
  %v1_30b32 = add i32 %v0_30b1b, -52
  %v2_30b32 = inttoptr i32 %v1_30b32 to i32*
  %v3_30b32 = load i32, i32* %v2_30b32, align 4
  %v1_30b39 = add i32 %v0_30b1b, -44
  %v2_30b39 = inttoptr i32 %v1_30b39 to i32*
  %v3_30b39 = load i32, i32* %v2_30b39, align 4
  %v6_30b3f = sext i8 %v3_30b1b to i32
  %v7_30b3f = call i32 @unknown_633fd(i32 %v3_30b39, i32 %v3_30b32, i32 %v3_30b2b, i32 0, i32 %v6_30b3f, i32 1)
  store i32 %v7_30b3f, i32* @eax, align 8
  %v0_30b44 = call i32 @function_30f09()
  ret i32 %v0_30b44

; uselistorder directives
  uselistorder i32 %v0_30b1b, { 0, 2, 1, 3 }
}

define i32 @function_30b49() local_unnamed_addr {
dec_label_pc_30b49:
  %v0_30b51 = load i32, i32* @ebp, align 4
  %v1_30b51 = add i32 %v0_30b51, -80
  %v2_30b51 = inttoptr i32 %v1_30b51 to i8*
  %v3_30b51 = load i8, i8* %v2_30b51, align 1
  %v1_30b61 = add i32 %v0_30b51, -56
  %v2_30b61 = inttoptr i32 %v1_30b61 to i32*
  %v3_30b61 = load i32, i32* %v2_30b61, align 4
  %v1_30b68 = add i32 %v0_30b51, -52
  %v2_30b68 = inttoptr i32 %v1_30b68 to i32*
  %v3_30b68 = load i32, i32* %v2_30b68, align 4
  %v1_30b6f = add i32 %v0_30b51, -44
  %v2_30b6f = inttoptr i32 %v1_30b6f to i32*
  %v3_30b6f = load i32, i32* %v2_30b6f, align 4
  %v6_30b75 = sext i8 %v3_30b51 to i32
  %v7_30b75 = call i32 @unknown_6346a(i32 %v3_30b6f, i32 %v3_30b68, i32 %v3_30b61, i32 0, i32 %v6_30b75, i32 1)
  store i32 %v7_30b75, i32* @eax, align 8
  %v0_30b7a = call i32 @function_30f09()
  ret i32 %v0_30b7a

; uselistorder directives
  uselistorder i32 %v0_30b51, { 0, 2, 1, 3 }
}

define i32 @function_30b7f() local_unnamed_addr {
dec_label_pc_30b7f:
  %v0_30b87 = load i32, i32* @ebp, align 4
  %v1_30b87 = add i32 %v0_30b87, -79
  %v2_30b87 = inttoptr i32 %v1_30b87 to i8*
  %v3_30b87 = load i8, i8* %v2_30b87, align 1
  %v1_30b97 = add i32 %v0_30b87, -56
  %v2_30b97 = inttoptr i32 %v1_30b97 to i32*
  %v3_30b97 = load i32, i32* %v2_30b97, align 4
  %v1_30b9e = add i32 %v0_30b87, -52
  %v2_30b9e = inttoptr i32 %v1_30b9e to i32*
  %v3_30b9e = load i32, i32* %v2_30b9e, align 4
  %v1_30ba5 = add i32 %v0_30b87, -44
  %v2_30ba5 = inttoptr i32 %v1_30ba5 to i32*
  %v3_30ba5 = load i32, i32* %v2_30ba5, align 4
  %v6_30bab = sext i8 %v3_30b87 to i32
  %v7_30bab = call i32 @unknown_634d7(i32 %v3_30ba5, i32 %v3_30b9e, i32 %v3_30b97, i32 0, i32 %v6_30bab, i32 1)
  store i32 %v7_30bab, i32* @eax, align 8
  %v0_30bb0 = call i32 @function_30f09()
  ret i32 %v0_30bb0

; uselistorder directives
  uselistorder i32 %v0_30b87, { 0, 2, 1, 3 }
}

define i32 @function_30bb5() local_unnamed_addr {
dec_label_pc_30bb5:
  %v0_30bbd = load i32, i32* @ebp, align 4
  %v1_30bbd = add i32 %v0_30bbd, -78
  %v2_30bbd = inttoptr i32 %v1_30bbd to i8*
  %v3_30bbd = load i8, i8* %v2_30bbd, align 1
  %v1_30bcd = add i32 %v0_30bbd, -56
  %v2_30bcd = inttoptr i32 %v1_30bcd to i32*
  %v3_30bcd = load i32, i32* %v2_30bcd, align 4
  %v1_30bd4 = add i32 %v0_30bbd, -52
  %v2_30bd4 = inttoptr i32 %v1_30bd4 to i32*
  %v3_30bd4 = load i32, i32* %v2_30bd4, align 4
  %v1_30bdb = add i32 %v0_30bbd, -44
  %v2_30bdb = inttoptr i32 %v1_30bdb to i32*
  %v3_30bdb = load i32, i32* %v2_30bdb, align 4
  %v6_30be1 = sext i8 %v3_30bbd to i32
  %v7_30be1 = call i32 @unknown_63544(i32 %v3_30bdb, i32 %v3_30bd4, i32 %v3_30bcd, i32 0, i32 %v6_30be1, i32 1)
  store i32 %v7_30be1, i32* @eax, align 8
  %v0_30be6 = call i32 @function_30f09()
  ret i32 %v0_30be6

; uselistorder directives
  uselistorder i32 %v0_30bbd, { 0, 2, 1, 3 }
}

define i32 @function_30beb() local_unnamed_addr {
dec_label_pc_30beb:
  %v0_30bf3 = load i32, i32* @ebp, align 4
  %v1_30c11 = add i32 %v0_30bf3, -44
  %v2_30c11 = inttoptr i32 %v1_30c11 to i32*
  %v3_30c11 = load i32, i32* %v2_30c11, align 4
  %v1_30c17 = call i32 @unknown_635b1(i32 %v3_30c11)
  store i32 %v1_30c17, i32* @eax, align 8
  %v0_30c1c = call i32 @function_30f09()
  ret i32 %v0_30c1c
}

define i32 @function_30c21() local_unnamed_addr {
dec_label_pc_30c21:
  %v0_30c29 = load i32, i32* @ebp, align 4
  %v1_30c47 = add i32 %v0_30c29, -44
  %v2_30c47 = inttoptr i32 %v1_30c47 to i32*
  %v3_30c47 = load i32, i32* %v2_30c47, align 4
  %v1_30c4d = call i32 @unknown_635b1(i32 %v3_30c47)
  store i32 %v1_30c4d, i32* @eax, align 8
  %v0_30c52 = call i32 @function_30f09()
  ret i32 %v0_30c52
}

define i32 @function_30c62(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_30c62:
  %v0_30c6f = load i32, i32* @ebp, align 4
  %v1_30c7d = add i32 %v0_30c6f, -44
  %v2_30c7d = inttoptr i32 %v1_30c7d to i32*
  %v3_30c7d = load i32, i32* %v2_30c7d, align 4
  %v1_30c83 = call i32 @unknown_635b1(i32 %v3_30c7d)
  store i32 %v1_30c83, i32* @eax, align 8
  %v0_30c88 = call i32 @function_30f09()
  ret i32 %v0_30c88
}

define i32 @function_30c94(i32 %arg1) local_unnamed_addr {
dec_label_pc_30c94:
  %v2_30c94 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_30c94 = load i32, i32* @ecx, align 8
  %v4_30c94 = trunc i32 %v3_30c94 to i8
  %v5_30c94 = add i8 %v4_30c94, %v2_30c94
  %v20_30c94 = load i32, i32* @edi, align 4
  %v21_30c94 = inttoptr i32 %v20_30c94 to i8*
  store i8 %v5_30c94, i8* %v21_30c94, align 1
  %v0_30ca5 = load i32, i32* @ebp, align 4
  %v1_30cb3 = add i32 %v0_30ca5, -44
  %v2_30cb3 = inttoptr i32 %v1_30cb3 to i32*
  %v3_30cb3 = load i32, i32* %v2_30cb3, align 4
  %v1_30cb9 = call i32 @unknown_635b1(i32 %v3_30cb3)
  store i32 %v1_30cb9, i32* @eax, align 8
  %v0_30cbe = call i32 @function_30f09()
  ret i32 %v0_30cbe
}

define i32 @function_30cc3() local_unnamed_addr {
dec_label_pc_30cc3:
  %v0_30ccb = load i32, i32* @ebp, align 4
  %v1_30ce9 = add i32 %v0_30ccb, -44
  %v2_30ce9 = inttoptr i32 %v1_30ce9 to i32*
  %v3_30ce9 = load i32, i32* %v2_30ce9, align 4
  %v1_30cef = call i32 @unknown_635b1(i32 %v3_30ce9)
  store i32 %v1_30cef, i32* @eax, align 8
  %v0_30cf4 = call i32 @function_30f09()
  ret i32 %v0_30cf4
}

define i32 @function_30cf9() local_unnamed_addr {
dec_label_pc_30cf9:
  %v0_30d01 = load i32, i32* @ebp, align 4
  %v1_30d1f = add i32 %v0_30d01, -44
  %v2_30d1f = inttoptr i32 %v1_30d1f to i32*
  %v3_30d1f = load i32, i32* %v2_30d1f, align 4
  %v1_30d25 = call i32 @unknown_635b1(i32 %v3_30d1f)
  store i32 %v1_30d25, i32* @eax, align 8
  %v0_30d2a = call i32 @function_30f09()
  ret i32 %v0_30d2a
}

define i32 @function_30d2f() local_unnamed_addr {
dec_label_pc_30d2f:
  %v0_30d37 = load i32, i32* @ebp, align 4
  %v1_30d55 = add i32 %v0_30d37, -44
  %v2_30d55 = inttoptr i32 %v1_30d55 to i32*
  %v3_30d55 = load i32, i32* %v2_30d55, align 4
  %v1_30d5b = call i32 @unknown_635b1(i32 %v3_30d55)
  store i32 %v1_30d5b, i32* @eax, align 8
  %v0_30d60 = call i32 @function_30f09()
  ret i32 %v0_30d60
}

define i32 @function_30d65() local_unnamed_addr {
dec_label_pc_30d65:
  %v0_30d6d = load i32, i32* @ebp, align 4
  %v1_30d8b = add i32 %v0_30d6d, -44
  %v2_30d8b = inttoptr i32 %v1_30d8b to i32*
  %v3_30d8b = load i32, i32* %v2_30d8b, align 4
  %v1_30d91 = call i32 @unknown_635b1(i32 %v3_30d8b)
  store i32 %v1_30d91, i32* @eax, align 8
  %v0_30d96 = call i32 @function_30f09()
  ret i32 %v0_30d96
}

define i32 @function_30d9b() local_unnamed_addr {
dec_label_pc_30d9b:
  %v0_30da3 = load i32, i32* @ebp, align 4
  %v1_30dc1 = add i32 %v0_30da3, -44
  %v2_30dc1 = inttoptr i32 %v1_30dc1 to i32*
  %v3_30dc1 = load i32, i32* %v2_30dc1, align 4
  %v1_30dc7 = call i32 @unknown_635b1(i32 %v3_30dc1)
  store i32 %v1_30dc7, i32* @eax, align 8
  %v0_30dcc = call i32 @function_30f09()
  ret i32 %v0_30dcc
}

define i32 @function_30dfa(i32 %arg1) local_unnamed_addr {
dec_label_pc_30dfa:
  %v0_30dfa = load i32, i32* @eax, align 8
  %v1_30dfd = call i32 @unknown_635b1(i32 %v0_30dfa)
  store i32 %v1_30dfd, i32* @eax, align 8
  %v0_30e02 = call i32 @function_30f09()
  ret i32 %v0_30e02
}

define i32 @function_30e07() local_unnamed_addr {
dec_label_pc_30e07:
  %v0_30e0f = load i32, i32* @ebp, align 4
  %v1_30e2d = add i32 %v0_30e0f, -44
  %v2_30e2d = inttoptr i32 %v1_30e2d to i32*
  %v3_30e2d = load i32, i32* %v2_30e2d, align 4
  %v1_30e33 = call i32 @unknown_635b1(i32 %v3_30e2d)
  store i32 %v1_30e33, i32* @eax, align 8
  %v0_30e38 = call i32 @function_30f09()
  ret i32 %v0_30e38
}

define i32 @function_30e3d() local_unnamed_addr {
dec_label_pc_30e3d:
  %v0_30e53 = load i32, i32* @ebp, align 4
  %v1_30e61 = add i32 %v0_30e53, -44
  %v2_30e61 = inttoptr i32 %v1_30e61 to i32*
  %v3_30e61 = load i32, i32* %v2_30e61, align 4
  %v1_30e67 = call i32 @unknown_635b1(i32 %v3_30e61)
  store i32 %v1_30e67, i32* @eax, align 8
  %v0_30e6c = call i32 @function_30f09()
  ret i32 %v0_30e6c
}

define i32 @function_30e71() local_unnamed_addr {
dec_label_pc_30e71:
  %v0_30e87 = load i32, i32* @ebp, align 4
  %v1_30e95 = add i32 %v0_30e87, -44
  %v2_30e95 = inttoptr i32 %v1_30e95 to i32*
  %v3_30e95 = load i32, i32* %v2_30e95, align 4
  %v1_30e9b = call i32 @unknown_635b1(i32 %v3_30e95)
  store i32 %v1_30e9b, i32* @eax, align 8
  %v0_30ea0 = call i32 @function_30f09()
  ret i32 %v0_30ea0
}

define i32 @function_30ea2() local_unnamed_addr {
dec_label_pc_30ea2:
  %v0_30eb6 = load i32, i32* @ebp, align 4
  %v1_30ec4 = add i32 %v0_30eb6, -44
  %v2_30ec4 = inttoptr i32 %v1_30ec4 to i32*
  %v3_30ec4 = load i32, i32* %v2_30ec4, align 4
  %v1_30eca = call i32 @unknown_635b1(i32 %v3_30ec4)
  store i32 %v1_30eca, i32* @eax, align 8
  %v0_30ecf = call i32 @function_30f09()
  ret i32 %v0_30ecf

; uselistorder directives
  uselistorder i32 ()* @function_30f09, { 19, 18, 17, 16, 3, 15, 14, 13, 12, 11, 2, 1, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 (i32)* @unknown_635b1, { 13, 12, 11, 10, 2, 9, 8, 7, 6, 5, 1, 0, 4, 3 }
}

define i32 @function_30ed1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_30ed1:
  %v3_30ed1 = load i32, i32* @eax, align 8
  ret i32 %v3_30ed1
}

define i32 @function_30ede(i32 %arg1) local_unnamed_addr {
dec_label_pc_30ede:
  %v2_30ede = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30ede = load i32, i32* @eax, align 8
  %v4_30ede = trunc i32 %v3_30ede to i8
  %v5_30ede = add i8 %v4_30ede, %v2_30ede
  %v21_30ede = inttoptr i32 %v3_30ede to i8*
  store i8 %v5_30ede, i8* %v21_30ede, align 1
  %v0_30ee0 = load i32, i32* @eax, align 8
  %v1_30ee0 = add i32 %v0_30ee0, -2011945908
  %v2_30ee0 = inttoptr i32 %v1_30ee0 to i8*
  %v3_30ee0 = load i8, i8* %v2_30ee0, align 1
  %v4_30ee0 = load i32, i32* @ecx, align 8
  %v5_30ee0 = trunc i32 %v4_30ee0 to i8
  %v6_30ee0 = add i8 %v5_30ee0, %v3_30ee0
  store i8 %v6_30ee0, i8* %v2_30ee0, align 1
  %v0_30ee9 = load i32, i32* @ebp, align 4
  %v1_30ee9 = add i32 %v0_30ee9, -56
  %v2_30ee9 = inttoptr i32 %v1_30ee9 to i32*
  %v3_30ee9 = load i32, i32* %v2_30ee9, align 4
  %v1_30ef0 = add i32 %v0_30ee9, -52
  %v2_30ef0 = inttoptr i32 %v1_30ef0 to i32*
  %v3_30ef0 = load i32, i32* %v2_30ef0, align 4
  %v1_30ef7 = add i32 %v0_30ee9, -48
  %v2_30ef7 = inttoptr i32 %v1_30ef7 to i32*
  %v3_30ef7 = load i32, i32* %v2_30ef7, align 4
  %v1_30efe = add i32 %v0_30ee9, -44
  %v2_30efe = inttoptr i32 %v1_30efe to i32*
  %v3_30efe = load i32, i32* %v2_30efe, align 4
  %v4_30f04 = call i32 @unknown_6360b(i32 %v3_30efe, i32 %v3_30ef7, i32 %v3_30ef0, i32 %v3_30ee9)
  ret i32 %v4_30f04

; uselistorder directives
  uselistorder i32 %v0_30ee9, { 1, 0, 2, 3 }
}

define i32 @function_30f09() local_unnamed_addr {
dec_label_pc_30f09:
  %v0_30f09 = load i32, i32* @ebp, align 4
  %v1_30f09 = add i32 %v0_30f09, -28
  %v2_30f09 = inttoptr i32 %v1_30f09 to i32*
  %v3_30f09 = load i32, i32* %v2_30f09, align 4
  %v1_30f0c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_30f0c = xor i32 %v1_30f0c, %v3_30f09
  %v3_30f0c = icmp eq i32 %v2_30f0c, 0
  store i32 %v2_30f0c, i32* @edx, align 4
  br i1 %v3_30f0c, label %bb, label %dec_label_pc_30f09.dec_label_pc_30f15_crit_edge

dec_label_pc_30f09.dec_label_pc_30f15_crit_edge:  ; preds = %dec_label_pc_30f09
  %v2_30f13.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30f15

bb:                                               ; preds = %dec_label_pc_30f09
  %v1_30f13 = call i32 @function_30f1a()
  br label %dec_label_pc_30f15

dec_label_pc_30f15:                               ; preds = %dec_label_pc_30f09.dec_label_pc_30f15_crit_edge, %bb
  %v2_30f13 = phi i32 [ %v2_30f13.pre, %dec_label_pc_30f09.dec_label_pc_30f15_crit_edge ], [ %v1_30f13, %bb ]
  ret i32 %v2_30f13

; uselistorder directives
  uselistorder label %dec_label_pc_30f15, { 1, 0 }
}

define i32 @function_30f1a() local_unnamed_addr {
dec_label_pc_30f1a:
  %v0_30f21 = load i32, i32* @eax, align 8
  ret i32 %v0_30f21
}

define i32 @function_30f3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f3e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30f68(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f68:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256xEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f74:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_30f97

bb:                                               ; preds = %dec_label_pc_30f74
  %v2_30f95 = call i32 @function_30f9c(i32 %arg1)
  br label %dec_label_pc_30f97

dec_label_pc_30f97:                               ; preds = %bb, %dec_label_pc_30f74
  %v3_30f95 = phi i32 [ %v2_30f95, %bb ], [ 0, %dec_label_pc_30f74 ]
  ret i32 %v3_30f95
}

define i32 @function_30f9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f9c:
  %v0_30f9d = load i32, i32* @eax, align 8
  ret i32 %v0_30f9d
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f9e:
  %v3_30fcb = call i32 @unknown_63bc8(i32 %arg1, i32 1, i32 0)
  ret i32 %v3_30fcb
}

define i32 @function_30fd4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_30fd4:
  %v0_30fd4 = load i32, i32* @edx, align 4
  %v1_30fd4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_30fd4 = icmp eq i32 %v1_30fd4, %v0_30fd4
  br i1 %v3_30fd4, label %bb, label %dec_label_pc_30fd4.dec_label_pc_30fdc_crit_edge

dec_label_pc_30fd4.dec_label_pc_30fdc_crit_edge:  ; preds = %dec_label_pc_30fd4
  %v2_30fda.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30fdc

bb:                                               ; preds = %dec_label_pc_30fd4
  %v1_30fda = call i32 @function_30fe1()
  br label %dec_label_pc_30fdc

dec_label_pc_30fdc:                               ; preds = %dec_label_pc_30fd4.dec_label_pc_30fdc_crit_edge, %bb
  %v2_30fda = phi i32 [ %v2_30fda.pre, %dec_label_pc_30fd4.dec_label_pc_30fdc_crit_edge ], [ %v1_30fda, %bb ]
  ret i32 %v2_30fda

; uselistorder directives
  uselistorder label %dec_label_pc_30fdc, { 1, 0 }
}

define i32 @function_30fe1() local_unnamed_addr {
dec_label_pc_30fe1:
  %v0_30fe2 = load i32, i32* @eax, align 8
  ret i32 %v0_30fe2
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK7uint256xEE9constructEPS4_RKS4_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_30fe4:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v2_31015 = call i32 @function_36d10(i32 40, i32 %arg2)
  %v1_3101a = icmp eq i32 %v2_31015, 0
  br i1 %v1_3101a, label %dec_label_pc_3105b, label %dec_label_pc_3101e

dec_label_pc_3101e:                               ; preds = %dec_label_pc_30fe4
  %tmp102 = ptrtoint i32* %arg3 to i32
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_31021 = load i32, i32* %arg3, align 4
  %v2_31023 = inttoptr i32 %v2_31015 to i32*
  store i32 %v2_31021, i32* %v2_31023, align 4
  %v0_31025 = load i32, i32* %edx.global-to-local, align 4
  %v1_31025 = add i32 %v0_31025, 4
  %v2_31025 = inttoptr i32 %v1_31025 to i32*
  %v3_31025 = load i32, i32* %v2_31025, align 4
  %v2_31028 = add i32 %v2_31015, 4
  %v3_31028 = inttoptr i32 %v2_31028 to i32*
  store i32 %v3_31025, i32* %v3_31028, align 4
  %v0_3102b = load i32, i32* %edx.global-to-local, align 4
  %v1_3102b = add i32 %v0_3102b, 8
  %v2_3102b = inttoptr i32 %v1_3102b to i32*
  %v3_3102b = load i32, i32* %v2_3102b, align 4
  %v2_3102e = add i32 %v2_31015, 8
  %v3_3102e = inttoptr i32 %v2_3102e to i32*
  store i32 %v3_3102b, i32* %v3_3102e, align 4
  %v0_31031 = load i32, i32* %edx.global-to-local, align 4
  %v1_31031 = add i32 %v0_31031, 12
  %v2_31031 = inttoptr i32 %v1_31031 to i32*
  %v3_31031 = load i32, i32* %v2_31031, align 4
  %v2_31034 = add i32 %v2_31015, 12
  %v3_31034 = inttoptr i32 %v2_31034 to i32*
  store i32 %v3_31031, i32* %v3_31034, align 4
  %v0_31037 = load i32, i32* %edx.global-to-local, align 4
  %v1_31037 = add i32 %v0_31037, 16
  %v2_31037 = inttoptr i32 %v1_31037 to i32*
  %v3_31037 = load i32, i32* %v2_31037, align 4
  %v2_3103a = add i32 %v2_31015, 16
  %v3_3103a = inttoptr i32 %v2_3103a to i32*
  store i32 %v3_31037, i32* %v3_3103a, align 4
  %v0_3103d = load i32, i32* %edx.global-to-local, align 4
  %v1_3103d = add i32 %v0_3103d, 20
  %v2_3103d = inttoptr i32 %v1_3103d to i32*
  %v3_3103d = load i32, i32* %v2_3103d, align 4
  %v2_31040 = add i32 %v2_31015, 20
  %v3_31040 = inttoptr i32 %v2_31040 to i32*
  store i32 %v3_3103d, i32* %v3_31040, align 4
  %v0_31043 = load i32, i32* %edx.global-to-local, align 4
  %v1_31043 = add i32 %v0_31043, 24
  %v2_31043 = inttoptr i32 %v1_31043 to i32*
  %v3_31043 = load i32, i32* %v2_31043, align 4
  %v2_31046 = add i32 %v2_31015, 24
  %v3_31046 = inttoptr i32 %v2_31046 to i32*
  store i32 %v3_31043, i32* %v3_31046, align 4
  %v0_31049 = load i32, i32* %edx.global-to-local, align 4
  %v1_31049 = add i32 %v0_31049, 28
  %v2_31049 = inttoptr i32 %v1_31049 to i32*
  %v3_31049 = load i32, i32* %v2_31049, align 4
  %v2_3104c = add i32 %v2_31015, 28
  %v3_3104c = inttoptr i32 %v2_3104c to i32*
  store i32 %v3_31049, i32* %v3_3104c, align 4
  %v0_3104f = load i32, i32* %edx.global-to-local, align 4
  %v1_3104f = add i32 %v0_3104f, 32
  %v2_3104f = inttoptr i32 %v1_3104f to i32*
  %v3_3104f = load i32, i32* %v2_3104f, align 4
  %v2_31052 = add i32 %v2_31015, 32
  %v3_31052 = inttoptr i32 %v2_31052 to i32*
  store i32 %v3_3104f, i32* %v3_31052, align 4
  %v0_31055 = load i32, i32* %edx.global-to-local, align 4
  %v1_31055 = add i32 %v0_31055, 36
  %v2_31055 = inttoptr i32 %v1_31055 to i32*
  %v3_31055 = load i32, i32* %v2_31055, align 4
  store i32 %v3_31055, i32* %edx.global-to-local, align 4
  %v2_31058 = add i32 %v2_31015, 36
  %v3_31058 = inttoptr i32 %v2_31058 to i32*
  store i32 %v3_31055, i32* %v3_31058, align 4
  br label %dec_label_pc_3105b

dec_label_pc_3105b:                               ; preds = %dec_label_pc_3101e, %dec_label_pc_30fe4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_31067

bb:                                               ; preds = %dec_label_pc_3105b
  %v1_31065 = call i32 @function_3106c()
  br label %dec_label_pc_31067

dec_label_pc_31067:                               ; preds = %bb, %dec_label_pc_3105b
  %v2_31065 = phi i32 [ %v1_31065, %bb ], [ 0, %dec_label_pc_3105b ]
  ret i32 %v2_31065

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_3106c() local_unnamed_addr {
dec_label_pc_3106c:
  %v0_3106d = load i32, i32* @eax, align 8
  ret i32 %v0_3106d
}

define i32 @_Z14Serialize_implI11CDataStream5CTxInSaIS1_EEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3106e:
  ret i32 %arg2
}

define i32 @function_310a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_310a4:
  %v0_310a4 = load i32, i32* @eax, align 8
  %v4_310a6 = mul i32 %v0_310a4, 2
  %v21_310a6 = inttoptr i32 %v0_310a4 to i32*
  store i32 %v4_310a6, i32* %v21_310a6, align 4
  %v0_310ad = load i32, i32* @eax, align 8
  %v0_310b5 = load i32, i32* @ebp, align 4
  %v1_310b5 = add i32 %v0_310b5, -28
  %v2_310b5 = inttoptr i32 %v1_310b5 to i32*
  %v3_310b5 = load i32, i32* %v2_310b5, align 4
  %v3_310bb = call i32 @unknown_55144(i32 %v3_310b5, i32 %v0_310ad, i32 0)
  %v0_310c0 = load i32, i32* @ebp, align 4
  %v1_310c0 = add i32 %v0_310c0, -20
  %v1_310c3 = add i32 %v0_310c0, -32
  %v2_310c3 = inttoptr i32 %v1_310c3 to i32*
  %v3_310c3 = load i32, i32* %v2_310c3, align 4
  %v2_310cd = call i32 @unknown_4d222(i32 %v1_310c0, i32 %v3_310c3)
  ret i32 %v2_310cd

; uselistorder directives
  uselistorder i32 %v0_310a4, { 1, 0 }
}

define i32 @function_310ee(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_310ee:
  %v0_310ee = load i32, i32* @eax, align 8
  %v11_310ee = and i32 %v0_310ee, -248
  %v0_310f4 = load i32, i32* @ebp, align 4
  %v1_310f4 = add i32 %v0_310f4, -28
  %v2_310f4 = inttoptr i32 %v1_310f4 to i32*
  %v3_310f4 = load i32, i32* %v2_310f4, align 4
  %v2_310fa = call i32 @unknown_63d03(i32 %v3_310f4, i32 %v11_310ee)
  %v0_310ff = load i32, i32* @ebp, align 4
  %v1_310ff = add i32 %v0_310ff, -20
  %v1_31105 = call i32 @unknown_4e080(i32 %v1_310ff)
  %v0_3110a = load i32, i32* @ebp, align 4
  %v1_3110a = add i32 %v0_3110a, -16
  %v1_3110d = add i32 %v0_3110a, -32
  %v2_3110d = inttoptr i32 %v1_3110d to i32*
  %v3_3110d = load i32, i32* %v2_3110d, align 4
  %v2_31117 = call i32 @unknown_4d1d2(i32 %v1_3110a, i32 %v3_3110d)
  %v0_3111f = load i32, i32* @ebp, align 4
  %v1_3111f = add i32 %v0_3111f, -16
  %v1_31126 = add i32 %v0_3111f, -20
  %v2_3112c = call i32 @unknown_59815(i32 %v1_31126, i32 %v1_3111f)
  %v0_31135 = load i32, i32* @ebp, align 4
  %v1_31135 = add i32 %v0_31135, -12
  %v2_31135 = inttoptr i32 %v1_31135 to i32*
  %v3_31135 = load i32, i32* %v2_31135, align 4
  %v1_31138 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31138 = xor i32 %v1_31138, %v3_31135
  %v3_31138 = icmp eq i32 %v2_31138, 0
  store i32 %v2_31138, i32* @eax, align 8
  br i1 %v3_31138, label %bb, label %dec_label_pc_31141

bb:                                               ; preds = %dec_label_pc_310ee
  %v1_3113f = call i32 @function_31146()
  br label %dec_label_pc_31141

dec_label_pc_31141:                               ; preds = %bb, %dec_label_pc_310ee
  %v3_3113f = phi i32 [ %v1_3113f, %bb ], [ %v2_31138, %dec_label_pc_310ee ]
  ret i32 %v3_3113f
}

define i32 @function_31146() local_unnamed_addr {
dec_label_pc_31146:
  %v0_31147 = load i32, i32* @eax, align 8
  ret i32 %v0_31147
}

define i32 @_Z14Serialize_implI11CDataStream6CTxOutSaIS1_EEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_31148:
  %stack_var_-24 = alloca i32, align 4
  %v1_3117d = call i32 @unknown_479f4(i32 %arg2)
  %v3_31195 = call i32 @unknown_5521e(i32 %arg1, i32 %v1_3117d, i32 0)
  %v2_3119a = ptrtoint i32* %stack_var_-24 to i32
  %v2_311a7 = call i32 @unknown_4d39c(i32 %v2_3119a, i32 %arg2)
  ret i32 %v2_311a7

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_311ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_311ac:
  %v0_311af = load i32, i32* @eax, align 8
  ret i32 %v0_311af
}

define i32 @function_311b1() local_unnamed_addr {
dec_label_pc_311b1:
  %ebp.global-to-local = alloca i32, align 4
  %v0_311b1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_311b1 = add i32 %v0_311b1, -20
  %v1_311b7 = call i32 @unknown_4d61c(i32 %v1_311b1)
  %v1_311bc = add i32 %v0_311b1, -40
  %v2_311bc = inttoptr i32 %v1_311bc to i32*
  %v3_311bc = load i32, i32* %v2_311bc, align 4
  %v1_311c3 = add i32 %v0_311b1, -36
  %v2_311c3 = inttoptr i32 %v1_311c3 to i32*
  %v3_311c3 = load i32, i32* %v2_311c3, align 4
  %v1_311ce = add i32 %v0_311b1, -28
  %v2_311ce = inttoptr i32 %v1_311ce to i32*
  %v3_311ce = load i32, i32* %v2_311ce, align 4
  %v4_311d4 = call i32 @unknown_63e39(i32 %v3_311ce, i32 %v1_311b7, i32 %v3_311c3, i32 %v3_311bc)
  %v0_311d9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_311d9 = add i32 %v0_311d9, -20
  %v1_311df = call i32 @unknown_4d5e2(i32 %v1_311d9)
  ret i32 %v1_311df

; uselistorder directives
  uselistorder i32 %v0_311b1, { 2, 1, 0, 3 }
}

define i32 @function_311e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_311e6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31213(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31213:
  %v0_31213 = load i32, i32* @eax, align 8
  %v1_31213 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31213 = xor i32 %v1_31213, %v0_31213
  %v3_31213 = icmp eq i32 %v2_31213, 0
  store i32 %v2_31213, i32* @eax, align 8
  br i1 %v3_31213, label %bb, label %dec_label_pc_3121b

bb:                                               ; preds = %dec_label_pc_31213
  %v1_31219 = call i32 @function_31220()
  br label %dec_label_pc_3121b

dec_label_pc_3121b:                               ; preds = %bb, %dec_label_pc_31213
  %v2_31219 = phi i32 [ %v1_31219, %bb ], [ %v2_31213, %dec_label_pc_31213 ]
  ret i32 %v2_31219
}

define i32 @function_31220() local_unnamed_addr {
dec_label_pc_31220:
  %v0_31221 = load i32, i32* @eax, align 8
  ret i32 %v0_31221
}

define i32 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_31222:
  %v10_31239 = icmp eq i32 %arg1, 0
  %v1_3123d = zext i1 %v10_31239 to i32
  store i32 %v1_3123d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3124c

bb:                                               ; preds = %dec_label_pc_31222
  %v2_3124a = call i32 @function_31251(i32 %arg1)
  br label %dec_label_pc_3124c

dec_label_pc_3124c:                               ; preds = %bb, %dec_label_pc_31222
  %v3_3124a = phi i32 [ %v2_3124a, %bb ], [ %v1_3123d, %dec_label_pc_31222 ]
  ret i32 %v3_3124a
}

define i32 @function_31251(i32 %arg1) local_unnamed_addr {
dec_label_pc_31251:
  %v0_31252 = load i32, i32* @eax, align 8
  ret i32 %v0_31252
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN11json_spirit10Value_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31253:
  %v2_3127e = sub i32 %arg2, %arg1
  %v2_31282 = sdiv i32 %v2_3127e, 4
  %v3_31285 = mul i32 %v2_31282, -858993459
  br label %dec_label_pc_312ae

dec_label_pc_31290:                               ; preds = %dec_label_pc_312ae
  %v4_31290 = add i32 %stack_var_-36.0, -20
  %v4_31294 = add i32 %stack_var_-40.0, -20
  %v2_312a5 = call i32 @unknown_55c2b(i32 %v4_31294, i32 %v4_31290)
  %v4_312aa = add i32 %storemerge, -1
  br label %dec_label_pc_312ae

dec_label_pc_312ae:                               ; preds = %dec_label_pc_31290, %dec_label_pc_31253
  %stack_var_-36.0 = phi i32 [ %arg2, %dec_label_pc_31253 ], [ %v4_31290, %dec_label_pc_31290 ]
  %stack_var_-40.0 = phi i32 [ %arg3, %dec_label_pc_31253 ], [ %v4_31294, %dec_label_pc_31290 ]
  %storemerge = phi i32 [ %v3_31285, %dec_label_pc_31253 ], [ %v4_312aa, %dec_label_pc_31290 ]
  %v10_312ae = icmp eq i32 %storemerge, 0
  %v11_312ae = icmp slt i32 %storemerge, 0
  %v3_312b2 = icmp eq i1 %v11_312ae, false
  %v4_312b2 = icmp eq i1 %v10_312ae, false
  %v5_312b2 = icmp eq i1 %v3_312b2, %v4_312b2
  %v5_312b5 = icmp eq i1 %v5_312b2, false
  %v1_312b7 = icmp eq i1 %v5_312b5, false
  br i1 %v1_312b7, label %dec_label_pc_31290, label %dec_label_pc_312b9

dec_label_pc_312b9:                               ; preds = %dec_label_pc_312ae
  store i32 %stack_var_-40.0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_312c8

bb:                                               ; preds = %dec_label_pc_312b9
  %v1_312c6 = call i32 @function_312cd()
  br label %dec_label_pc_312c8

dec_label_pc_312c8:                               ; preds = %bb, %dec_label_pc_312b9
  %v2_312c6 = phi i32 [ %v1_312c6, %bb ], [ %stack_var_-40.0, %dec_label_pc_312b9 ]
  ret i32 %v2_312c6

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 1, 0 }
}

define i32 @function_312cd() local_unnamed_addr {
dec_label_pc_312cd:
  %v0_312ce = load i32, i32* @eax, align 8
  ret i32 %v0_312ce
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEES7_EET0_T_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_312cf:
  ret i32 %arg3
}

define i32 @function_31302(i32 %arg1) local_unnamed_addr {
dec_label_pc_31302:
  %v0_31302 = load i32, i32* @ecx, align 8
  %v1_31303 = call i32 @unknown_558e130a(i32 %v0_31302)
  %v11_3130b = and i32 %v1_31303, -252
  ret i32 %v11_3130b
}

define i32 @function_3130e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3130e:
  %v0_31310 = call i32 @unknown_6401c()
  %v0_31315 = load i32, i32* @ebp, align 4
  %v1_31315 = add i32 %v0_31315, -28
  %v2_31315 = inttoptr i32 %v1_31315 to i32*
  %v3_31315 = load i32, i32* %v2_31315, align 4
  %v4_31315 = add i32 %v3_31315, 20
  store i32 %v4_31315, i32* %v2_31315, align 4
  %v0_31319 = load i32, i32* @ebp, align 4
  %v1_31319 = add i32 %v0_31319, -16
  %v2_31319 = inttoptr i32 %v1_31319 to i32*
  %v3_31319 = load i32, i32* %v2_31319, align 4
  %v4_31319 = add i32 %v3_31319, 20
  store i32 %v4_31319, i32* %v2_31319, align 4
  %v0_3131d = load i32, i32* @ebp, align 4
  %v1_3132a = add i32 %v0_3131d, -16
  %v2_3132a = inttoptr i32 %v1_3132a to i32*
  %v3_3132a = load i32, i32* %v2_3132a, align 4
  store i32 %v3_3132a, i32* @eax, align 8
  %v1_3132d = add i32 %v0_3131d, -12
  %v2_3132d = inttoptr i32 %v1_3132d to i32*
  %v3_3132d = load i32, i32* %v2_3132d, align 4
  %v1_31330 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_31330 = icmp eq i32 %v1_31330, %v3_3132d
  br i1 %v3_31330, label %bb, label %dec_label_pc_31339

bb:                                               ; preds = %dec_label_pc_3130e
  %v1_31337 = call i32 @function_31370()
  store i32 %v1_31337, i32* @eax, align 8
  br label %dec_label_pc_31339

dec_label_pc_31339:                               ; preds = %bb, %dec_label_pc_3130e
  %v0_31339 = call i32 @function_3136b()
  ret i32 %v0_31339

; uselistorder directives
  uselistorder i32 %v0_3131d, { 1, 0 }
}

define i32 @function_3133c() local_unnamed_addr {
dec_label_pc_3133c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3133c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3133c
}

define i32 @function_3136b() local_unnamed_addr {
dec_label_pc_3136b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31370() local_unnamed_addr {
dec_label_pc_31370:
  %v0_31375 = load i32, i32* @eax, align 8
  ret i32 %v0_31375
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1ERKS6_() local_unnamed_addr {
dec_label_pc_31376:
  %eax.global-to-local = alloca i32, align 4
  %v5_31376 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_31376
}

define i32 @function_31377(i32 %arg1) local_unnamed_addr {
dec_label_pc_31377:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_3138c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3138c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3138c = load i32, i32* @eax, align 8
  %v1_3138c = trunc i32 %v0_3138c to i8
  %v2_3138c = load i1, i1* @cf, align 1
  %v3_3138c = zext i1 %v2_3138c to i8
  %v4_3138c = add i8 %v3_3138c, %v1_3138c
  %v22_3138c = zext i8 %v4_3138c to i32
  %v24_3138c = and i32 %v0_3138c, -256
  %v25_3138c = or i32 %v22_3138c, %v24_3138c
  store i32 %v25_3138c, i32* %eax.global-to-local, align 8
  %v1_3138e = inttoptr i32 %v25_3138c to i8*
  %v2_3138e = load i8, i8* %v1_3138e, align 1
  %v5_3138e = add i8 %v2_3138e, %v4_3138c
  store i8 %v5_3138e, i8* %v1_3138e, align 1
  %v0_31390 = load i32, i32* %eax.global-to-local, align 8
  %v1_31390 = load i32, i32* @ebp, align 4
  %v2_31390 = add i32 %v1_31390, -12
  %v3_31390 = inttoptr i32 %v2_31390 to i32*
  store i32 %v0_31390, i32* %v3_31390, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_31395 = load i32, i32* @ebp, align 4
  %v1_31395 = add i32 %v0_31395, -32
  %v2_31395 = inttoptr i32 %v1_31395 to i32*
  %v3_31395 = load i32, i32* %v2_31395, align 4
  store i32 %v3_31395, i32* %eax.global-to-local, align 8
  %v1_3139b = call i32 @unknown_60264(i32 %v3_31395)
  store i32 %v1_3139b, i32* %eax.global-to-local, align 8
  store i32 %v1_3139b, i32* %ebx.global-to-local, align 4
  %v0_313a2 = load i32, i32* @ebp, align 4
  %v1_313a2 = add i32 %v0_313a2, -32
  %v2_313a2 = inttoptr i32 %v1_313a2 to i32*
  %v3_313a2 = load i32, i32* %v2_313a2, align 4
  store i32 %v3_313a2, i32* %eax.global-to-local, align 8
  %v1_313a8 = call i32 @unknown_48882(i32 %v3_313a2)
  store i32 %v1_313a8, i32* %eax.global-to-local, align 8
  %v0_313ad = load i32, i32* @ebp, align 4
  %v1_313ad = add i32 %v0_313ad, -28
  %v2_313ad = inttoptr i32 %v1_313ad to i32*
  %v3_313ad = load i32, i32* %v2_313ad, align 4
  %v0_313b0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_313bb = call i32 @unknown_6413e(i32 %v3_313ad, i32 %v1_313a8, i32 %v0_313b0)
  store i32 %v3_313bb, i32* %eax.global-to-local, align 8
  %v0_313c0 = load i32, i32* @ebp, align 4
  %v1_313c0 = add i32 %v0_313c0, -28
  %v2_313c0 = inttoptr i32 %v1_313c0 to i32*
  %v3_313c0 = load i32, i32* %v2_313c0, align 4
  store i32 %v3_313c0, i32* %eax.global-to-local, align 8
  %v1_313c6 = call i32 @unknown_506a0(i32 %v3_313c0)
  store i32 %v1_313c6, i32* %eax.global-to-local, align 8
  store i32 %v1_313c6, i32* %ebx.global-to-local, align 4
  %v0_313cd = load i32, i32* @ebp, align 4
  %v1_313cd = add i32 %v0_313cd, -28
  %v2_313cd = inttoptr i32 %v1_313cd to i32*
  %v3_313cd = load i32, i32* %v2_313cd, align 4
  store i32 %v3_313cd, i32* %eax.global-to-local, align 8
  %v1_313d0 = inttoptr i32 %v3_313cd to i32*
  %v2_313d0 = load i32, i32* %v1_313d0, align 4
  store i32 %v2_313d0, i32* %esi.global-to-local, align 4
  %v1_313d2 = add i32 %v0_313cd, -16
  store i32 %v1_313d2, i32* %eax.global-to-local, align 8
  %v1_313d5 = add i32 %v0_313cd, -32
  %v2_313d5 = inttoptr i32 %v1_313d5 to i32*
  %v3_313d5 = load i32, i32* %v2_313d5, align 4
  %v2_313df = call i32 @unknown_517aa(i32 %v1_313d2, i32 %v3_313d5)
  %v0_313e7 = load i32, i32* @ebp, align 4
  %v1_313e7 = add i32 %v0_313e7, -20
  store i32 %v1_313e7, i32* %eax.global-to-local, align 8
  %v1_313ea = add i32 %v0_313e7, -32
  %v2_313ea = inttoptr i32 %v1_313ea to i32*
  %v3_313ea = load i32, i32* %v2_313ea, align 4
  %v2_313f4 = call i32 @unknown_517fa(i32 %v1_313e7, i32 %v3_313ea)
  store i32 %v2_313f4, i32* %eax.global-to-local, align 8
  %v0_313fc = load i32, i32* %ebx.global-to-local, align 4
  %v0_31400 = load i32, i32* %esi.global-to-local, align 4
  %v0_31404 = load i32, i32* @ebp, align 4
  %v1_31404 = add i32 %v0_31404, -16
  %v2_31404 = inttoptr i32 %v1_31404 to i32*
  %v3_31404 = load i32, i32* %v2_31404, align 4
  store i32 %v3_31404, i32* %eax.global-to-local, align 8
  %v1_3140b = add i32 %v0_31404, -20
  %v2_3140b = inttoptr i32 %v1_3140b to i32*
  %v3_3140b = load i32, i32* %v2_3140b, align 4
  store i32 %v3_3140b, i32* %eax.global-to-local, align 8
  %v4_31411 = call i32 @unknown_641e3(i32 %v3_3140b, i32 %v3_31404, i32 %v0_31400, i32 %v0_313fc)
  store i32 %v4_31411, i32* %eax.global-to-local, align 8
  %v0_31418 = load i32, i32* @ebp, align 4
  %v1_31418 = add i32 %v0_31418, -28
  %v2_31418 = inttoptr i32 %v1_31418 to i32*
  %v3_31418 = load i32, i32* %v2_31418, align 4
  store i32 %v3_31418, i32* %eax.global-to-local, align 8
  %v2_3141b = add i32 %v3_31418, 4
  %v3_3141b = inttoptr i32 %v2_3141b to i32*
  store i32 %v4_31411, i32* %v3_3141b, align 4
  %v0_3141e = load i32, i32* @ebp, align 4
  %v1_3141e = add i32 %v0_3141e, -12
  %v2_3141e = inttoptr i32 %v1_3141e to i32*
  %v3_3141e = load i32, i32* %v2_3141e, align 4
  store i32 %v3_3141e, i32* %eax.global-to-local, align 8
  %v1_31421 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31421 = xor i32 %v1_31421, %v3_3141e
  %v3_31421 = icmp eq i32 %v2_31421, 0
  store i32 %v2_31421, i32* @eax, align 8
  br i1 %v3_31421, label %bb, label %dec_label_pc_3142a

bb:                                               ; preds = %dec_label_pc_3138c
  %v1_31428 = call i32 @function_31448()
  store i32 %v1_31428, i32* @eax, align 8
  br label %dec_label_pc_3142a

dec_label_pc_3142a:                               ; preds = %bb, %dec_label_pc_3138c
  %v0_3142a = call i32 @function_31443()
  store i32 %v0_3142a, i32* %eax.global-to-local, align 8
  ret i32 %v0_3142a

; uselistorder directives
  uselistorder i32 %v0_313cd, { 1, 0, 2 }
}

define i32 @function_3142d() local_unnamed_addr {
dec_label_pc_3142d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3142d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3142d
}

define i32 @function_31443() local_unnamed_addr {
dec_label_pc_31443:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31448() local_unnamed_addr {
dec_label_pc_31448:
  %v0_3144e = load i32, i32* @eax, align 8
  ret i32 %v0_3144e
}

define i32 @_ZN12CBlockHeader11UnserializeI11CDataStreamEEvRT_ii() local_unnamed_addr {
dec_label_pc_31450:
  %eax.global-to-local = alloca i32, align 4
  %v5_31450 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_31450
}

define i32 @function_31452(i32 %arg1) local_unnamed_addr {
dec_label_pc_31452:
  %eax.global-to-local = alloca i32, align 4
  %v0_31459 = load i32, i32* @ebp, align 4
  %v1_31459 = add i32 %v0_31459, 8
  %v2_31459 = inttoptr i32 %v1_31459 to i32*
  %v3_31459 = load i32, i32* %v2_31459, align 4
  store i32 %v3_31459, i32* %eax.global-to-local, align 8
  %v2_3145c = add i32 %v0_31459, -44
  %v3_3145c = inttoptr i32 %v2_3145c to i32*
  store i32 %v3_31459, i32* %v3_3145c, align 4
  %v0_3145f = load i32, i32* @ebp, align 4
  %v1_3145f = add i32 %v0_3145f, 12
  %v2_3145f = inttoptr i32 %v1_3145f to i32*
  %v3_3145f = load i32, i32* %v2_3145f, align 4
  store i32 %v3_3145f, i32* %eax.global-to-local, align 8
  %v2_31462 = add i32 %v0_3145f, -48
  %v3_31462 = inttoptr i32 %v2_31462 to i32*
  store i32 %v3_3145f, i32* %v3_31462, align 4
  %v0_31465 = load i32, i32* @ebp, align 4
  %v1_31465 = add i32 %v0_31465, 16
  %v2_31465 = inttoptr i32 %v1_31465 to i32*
  %v3_31465 = load i32, i32* %v2_31465, align 4
  store i32 %v3_31465, i32* %eax.global-to-local, align 8
  %v2_31468 = add i32 %v0_31465, -52
  %v3_31468 = inttoptr i32 %v2_31468 to i32*
  store i32 %v3_31465, i32* %v3_31468, align 4
  %v0_3146b = load i32, i32* @ebp, align 4
  %v1_3146b = add i32 %v0_3146b, 20
  %v2_3146b = inttoptr i32 %v1_3146b to i32*
  %v3_3146b = load i32, i32* %v2_3146b, align 4
  store i32 %v3_3146b, i32* %eax.global-to-local, align 8
  %v2_3146e = add i32 %v0_3146b, -56
  %v3_3146e = inttoptr i32 %v2_3146e to i32*
  store i32 %v3_3146b, i32* %v3_3146e, align 4
  %v0_31471 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_31477 = load i32, i32* @ebp, align 4
  %v2_31477 = add i32 %v1_31477, -28
  %v3_31477 = inttoptr i32 %v2_31477 to i32*
  store i32 %v0_31471, i32* %v3_31477, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3147c = load i32, i32* @ebp, align 4
  %v1_3147c = add i32 %v0_3147c, -31
  %v2_3147c = inttoptr i32 %v1_3147c to i8*
  store i8 0, i8* %v2_3147c, align 1
  %v0_31480 = load i32, i32* @ebp, align 4
  %v1_31480 = add i32 %v0_31480, -30
  %v2_31480 = inttoptr i32 %v1_31480 to i8*
  store i8 0, i8* %v2_31480, align 1
  %v0_31484 = load i32, i32* @ebp, align 4
  %v1_31484 = add i32 %v0_31484, -29
  %v2_31484 = inttoptr i32 %v1_31484 to i8*
  store i8 1, i8* %v2_31484, align 1
  %v0_31488 = load i32, i32* @ebp, align 4
  %v1_31488 = add i32 %v0_31488, -36
  %v2_31488 = inttoptr i32 %v1_31488 to i32*
  store i32 0, i32* %v2_31488, align 4
  %v0_3148f = load i32, i32* @ebp, align 4
  %v1_3148f = add i32 %v0_3148f, -44
  %v2_3148f = inttoptr i32 %v1_3148f to i32*
  %v3_3148f = load i32, i32* %v2_3148f, align 4
  store i32 %v3_3148f, i32* @edx, align 4
  %v0_31492 = load i32, i32* @ecx, align 8
  %v1_31496 = add i32 %v0_3148f, -56
  %v2_31496 = inttoptr i32 %v1_31496 to i32*
  %v3_31496 = load i32, i32* %v2_31496, align 4
  store i32 %v3_31496, i32* %eax.global-to-local, align 8
  %v1_3149d = add i32 %v0_3148f, -52
  %v2_3149d = inttoptr i32 %v1_3149d to i32*
  %v3_3149d = load i32, i32* %v2_3149d, align 4
  store i32 %v3_3149d, i32* %eax.global-to-local, align 8
  %v1_314a8 = add i32 %v0_3148f, -48
  %v2_314a8 = inttoptr i32 %v1_314a8 to i32*
  %v3_314a8 = load i32, i32* %v2_314a8, align 4
  store i32 %v3_314a8, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_31492, 16777216
  %v5_314ae = sdiv i32 %sext, 16777216
  %v6_314ae = call i32 @unknown_5e137(i32 %v3_314a8, i32 %v3_3148f, i32 %v3_3149d, i32 %v3_31496, i32 %v5_314ae)
  store i32 %v6_314ae, i32* %eax.global-to-local, align 8
  %v0_314b3 = load i32, i32* @ebp, align 4
  %v1_314b3 = add i32 %v0_314b3, -36
  %v2_314b3 = inttoptr i32 %v1_314b3 to i32*
  %v3_314b3 = load i32, i32* %v2_314b3, align 4
  %v5_314b3 = add i32 %v3_314b3, %v6_314ae
  store i32 %v5_314b3, i32* %v2_314b3, align 4
  %v24_314b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v24_314b3

; uselistorder directives
  uselistorder i32 %v0_3148f, { 0, 2, 1, 3 }
  uselistorder i8 1, { 12, 10, 0, 4, 5, 1, 19, 18, 20, 2, 3, 13, 11, 21, 14, 15, 16, 6, 7, 8, 9, 17 }
  uselistorder i32 -29, { 1, 0 }
}

define i32 @function_314b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_314b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_314b8 = load i32, i32* @eax, align 8
  %v1_314b8 = trunc i32 %v0_314b8 to i8
  %not. = icmp ugt i8 %v1_314b8, -118
  %v3_314b8 = urem i8 %v1_314b8, -117
  %v4_314b8 = zext i8 %v3_314b8 to i32
  %v6_314b8 = and i32 %v0_314b8, -65536
  %v10_314b8 = select i1 %not., i32 256, i32 0
  %v11_314b8 = or i32 %v4_314b8, %v6_314b8
  %v12_314b8 = or i32 %v11_314b8, %v10_314b8
  store i32 %v12_314b8, i32* %eax.global-to-local, align 8
  %v0_314ba = load i32, i32* @ecx, align 8
  %v1_314ba = add i32 %v0_314ba, 1166788677
  %v2_314ba = inttoptr i32 %v1_314ba to i8*
  %v3_314ba = load i8, i8* %v2_314ba, align 1
  %v5_314ba = trunc i32 %v0_314ba to i8
  %v6_314ba = add i8 %v3_314ba, %v5_314ba
  store i8 %v6_314ba, i8* %v2_314ba, align 1
  %v0_314c0 = load i32, i32* %eax.global-to-local, align 8
  %v1_314c0 = trunc i32 %v0_314c0 to i8
  %not.1 = icmp ugt i8 %v1_314c0, -116
  %v3_314c0 = urem i8 %v1_314c0, -115
  %v6_314c0 = and i32 %v0_314c0, -65536
  %v10_314c0 = select i1 %not.1, i32 256, i32 0
  %v12_314c0 = or i32 %v10_314c0, %v6_314c0
  %v2_314c3 = add i8 %v3_314c0, 15
  %v16_314c3 = zext i8 %v2_314c3 to i32
  %v19_314c3 = or i32 %v12_314c0, %v16_314c3
  store i32 %v19_314c3, i32* %eax.global-to-local, align 8
  ret i32 %v19_314c3

; uselistorder directives
  uselistorder i8 %v1_314c0, { 1, 0 }
  uselistorder i8 %v1_314b8, { 1, 0 }
  uselistorder i8 -116, { 1, 0 }
}

define i32 @function_3150a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3150a:
  %v0_3150c = load i32, i32* @ebp, align 4
  %v1_3150c = add i32 %v0_3150c, -48
  %v2_3150c = inttoptr i32 %v1_3150c to i32*
  %v3_3150c = load i32, i32* %v2_3150c, align 4
  %v1_31512 = call i32 @unknown_64312(i32 %v3_3150c)
  %v0_31517 = load i32, i32* @ebp, align 4
  %v1_31517 = add i32 %v0_31517, -36
  %v2_31517 = inttoptr i32 %v1_31517 to i32*
  %v3_31517 = load i32, i32* %v2_31517, align 4
  %v5_31517 = add i32 %v3_31517, %v1_31512
  store i32 %v5_31517, i32* %v2_31517, align 4
  %v0_3151a = load i32, i32* @ebp, align 4
  %v1_3151a = add i32 %v0_3151a, -44
  %v2_3151a = inttoptr i32 %v1_3151a to i32*
  %v3_3151a = load i32, i32* %v2_3151a, align 4
  %v1_3151d = add i32 %v3_3151a, 68
  %v0_31520 = load i32, i32* @edi, align 4
  %v1_31526 = add i32 %v0_3151a, -56
  %v2_31526 = inttoptr i32 %v1_31526 to i32*
  %v3_31526 = load i32, i32* %v2_31526, align 4
  %v1_3152d = add i32 %v0_3151a, -52
  %v2_3152d = inttoptr i32 %v1_3152d to i32*
  %v3_3152d = load i32, i32* %v2_3152d, align 4
  %v1_31538 = add i32 %v0_3151a, -48
  %v2_31538 = inttoptr i32 %v1_31538 to i32*
  %v3_31538 = load i32, i32* %v2_31538, align 4
  %sext = mul i32 %v0_31520, 16777216
  %v5_3153e = sdiv i32 %sext, 16777216
  %v6_3153e = call i32 @unknown_6437a(i32 %v3_31538, i32 %v1_3151d, i32 %v3_3152d, i32 %v3_31526, i32 %v5_3153e)
  %v0_31543 = load i32, i32* @ebp, align 4
  %v1_31543 = add i32 %v0_31543, -36
  %v2_31543 = inttoptr i32 %v1_31543 to i32*
  %v3_31543 = load i32, i32* %v2_31543, align 4
  %v5_31543 = add i32 %v3_31543, %v6_3153e
  store i32 %v5_31543, i32* %v2_31543, align 4
  %v0_31546 = load i32, i32* @ebp, align 4
  %v1_31546 = add i32 %v0_31546, -44
  %v2_31546 = inttoptr i32 %v1_31546 to i32*
  %v3_31546 = load i32, i32* %v2_31546, align 4
  %v1_31549 = add i32 %v3_31546, 72
  %v0_3154c = load i32, i32* @esi, align 4
  %v1_31552 = add i32 %v0_31546, -56
  %v2_31552 = inttoptr i32 %v1_31552 to i32*
  %v3_31552 = load i32, i32* %v2_31552, align 4
  %v1_31559 = add i32 %v0_31546, -52
  %v2_31559 = inttoptr i32 %v1_31559 to i32*
  %v3_31559 = load i32, i32* %v2_31559, align 4
  %v1_31564 = add i32 %v0_31546, -48
  %v2_31564 = inttoptr i32 %v1_31564 to i32*
  %v3_31564 = load i32, i32* %v2_31564, align 4
  %sext1 = mul i32 %v0_3154c, 16777216
  %v5_3156a = sdiv i32 %sext1, 16777216
  %v6_3156a = call i32 @unknown_6437a(i32 %v3_31564, i32 %v1_31549, i32 %v3_31559, i32 %v3_31552, i32 %v5_3156a)
  %v0_3156f = load i32, i32* @ebp, align 4
  %v1_3156f = add i32 %v0_3156f, -36
  %v2_3156f = inttoptr i32 %v1_3156f to i32*
  %v3_3156f = load i32, i32* %v2_3156f, align 4
  %v5_3156f = add i32 %v3_3156f, %v6_3156a
  store i32 %v5_3156f, i32* %v2_3156f, align 4
  %v0_31572 = load i32, i32* @ebp, align 4
  %v1_31572 = add i32 %v0_31572, -44
  %v2_31572 = inttoptr i32 %v1_31572 to i32*
  %v3_31572 = load i32, i32* %v2_31572, align 4
  %v1_31575 = add i32 %v3_31572, 76
  %v0_31578 = load i32, i32* @ebx, align 4
  %v1_3157c = add i32 %v0_31572, -56
  %v2_3157c = inttoptr i32 %v1_3157c to i32*
  %v3_3157c = load i32, i32* %v2_3157c, align 4
  %v1_31583 = add i32 %v0_31572, -52
  %v2_31583 = inttoptr i32 %v1_31583 to i32*
  %v3_31583 = load i32, i32* %v2_31583, align 4
  %v1_3158e = add i32 %v0_31572, -48
  %v2_3158e = inttoptr i32 %v1_3158e to i32*
  %v3_3158e = load i32, i32* %v2_3158e, align 4
  %sext2 = mul i32 %v0_31578, 16777216
  %v5_31594 = sdiv i32 %sext2, 16777216
  %v6_31594 = call i32 @unknown_6437a(i32 %v3_3158e, i32 %v1_31575, i32 %v3_31583, i32 %v3_3157c, i32 %v5_31594)
  %v0_31599 = load i32, i32* @ebp, align 4
  %v1_31599 = add i32 %v0_31599, -36
  %v2_31599 = inttoptr i32 %v1_31599 to i32*
  %v3_31599 = load i32, i32* %v2_31599, align 4
  %v5_31599 = add i32 %v3_31599, %v6_31594
  store i32 %v5_31599, i32* %v2_31599, align 4
  %v0_3159c = load i32, i32* @ebp, align 4
  %v1_3159c = add i32 %v0_3159c, -28
  %v2_3159c = inttoptr i32 %v1_3159c to i32*
  %v3_3159c = load i32, i32* %v2_3159c, align 4
  %v1_3159f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3159f = xor i32 %v1_3159f, %v3_3159c
  %v3_3159f = icmp eq i32 %v2_3159f, 0
  store i32 %v2_3159f, i32* @eax, align 8
  br i1 %v3_3159f, label %bb, label %dec_label_pc_315a8

bb:                                               ; preds = %dec_label_pc_3150a
  %v1_315a6 = call i32 @function_315ad()
  br label %dec_label_pc_315a8

dec_label_pc_315a8:                               ; preds = %bb, %dec_label_pc_3150a
  %v2_315a6 = phi i32 [ %v1_315a6, %bb ], [ %v2_3159f, %dec_label_pc_3150a ]
  ret i32 %v2_315a6

; uselistorder directives
  uselistorder i32 %v0_31572, { 0, 2, 1, 3 }
  uselistorder i32 %v0_31546, { 0, 2, 1, 3 }
  uselistorder i32 %v0_3151a, { 0, 2, 1, 3 }
  uselistorder i32 76, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_6437a, { 2, 1, 0 }
  uselistorder i32 68, { 2, 3, 0, 1 }
}

define i32 @function_315ad() local_unnamed_addr {
dec_label_pc_315ad:
  %v0_315b4 = load i32, i32* @eax, align 8
  ret i32 %v0_315b4
}

define i32 @_Z16Unserialize_implI11CDataStream12CTransactionSaIS1_EEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_315b5:
  %v1_315eb = call i32 @unknown_48007(i32 %arg2)
  %v1_315f6 = call i32 @unknown_55816(i32 %arg1)
  ret i32 %v1_315f6
}

define i32 @function_3164c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3164c:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v0_31650 = call i32 @unknown_4436f()
  %v10_3168d15 = icmp ult i32 %tmp11, %tmp3
  %v5_3169319 = icmp eq i1 %v10_3168d15, false
  %v1_3169520 = icmp eq i1 %v5_3169319, false
  br i1 %v1_3169520, label %dec_label_pc_31657, label %dec_label_pc_31697

dec_label_pc_31657:                               ; preds = %dec_label_pc_3164c, %dec_label_pc_31657
  %stack_var_-28.021 = phi i32 [ %v4_31686, %dec_label_pc_31657 ], [ %tmp11, %dec_label_pc_3164c ]
  %v2_31664 = call i32 @unknown_497d7(i32 %tmp9, i32 %stack_var_-28.021)
  %v4_31681 = call i32 @unknown_6460d(i32 %tmp4, i32 %v2_31664, i32 %tmp6, i32 %tmp8)
  %v4_31686 = add i32 %stack_var_-28.021, 1
  %v10_3168d = icmp ult i32 %v4_31686, %tmp3
  %v5_31693 = icmp eq i1 %v10_3168d, false
  %v1_31695 = icmp eq i1 %v5_31693, false
  br i1 %v1_31695, label %dec_label_pc_31657, label %dec_label_pc_31697

dec_label_pc_31697:                               ; preds = %dec_label_pc_31657, %dec_label_pc_3164c
  %v0_316a8 = call i32 @function_316c1()
  ret i32 %v0_316a8

; uselistorder directives
  uselistorder i32 %v4_31686, { 1, 0 }
  uselistorder i32 %stack_var_-28.021, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_31657, { 1, 0 }
}

define i32 @function_316ab() local_unnamed_addr {
dec_label_pc_316ab:
  %eax.global-to-local = alloca i32, align 4
  %v0_316ab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_316ab
}

define i32 @function_316c1() local_unnamed_addr {
dec_label_pc_316c1:
  %v0_316c1 = load i32, i32* @ebp, align 4
  %v1_316c1 = add i32 %v0_316c1, -12
  %v2_316c1 = inttoptr i32 %v1_316c1 to i32*
  %v3_316c1 = load i32, i32* %v2_316c1, align 4
  %v1_316c4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_316c4 = xor i32 %v1_316c4, %v3_316c1
  %v3_316c4 = icmp eq i32 %v2_316c4, 0
  store i32 %v2_316c4, i32* @eax, align 8
  br i1 %v3_316c4, label %bb, label %dec_label_pc_316cd

bb:                                               ; preds = %dec_label_pc_316c1
  %v1_316cb = call i32 @function_316d2()
  br label %dec_label_pc_316cd

dec_label_pc_316cd:                               ; preds = %bb, %dec_label_pc_316c1
  %v2_316cb = phi i32 [ %v1_316cb, %bb ], [ %v2_316c4, %dec_label_pc_316c1 ]
  ret i32 %v2_316cb
}

define i32 @function_316d2() local_unnamed_addr {
dec_label_pc_316d2:
  %v0_316d7 = load i32, i32* @eax, align 8
  ret i32 %v0_316d7
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_316d8:
  ret i32 %arg3
}

define i32 @function_316f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_316f0:
  %v0_316f0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_316f6 = load i32, i32* @ebp, align 4
  %v2_316f6 = add i32 %v1_316f6, -12
  %v3_316f6 = inttoptr i32 %v2_316f6 to i32*
  store i32 %v0_316f0, i32* %v3_316f6, align 4
  %v0_316fb = load i32, i32* @ebp, align 4
  %v1_316fb = add i32 %v0_316fb, -28
  %v2_316fb = inttoptr i32 %v1_316fb to i32*
  %v3_316fb = load i32, i32* %v2_316fb, align 4
  %v1_31701 = call i32 @unknown_647e8(i32 %v3_316fb)
  %v1_31706 = load i32, i32* @ebp, align 4
  %v2_31706 = add i32 %v1_31706, -32
  %v3_31706 = inttoptr i32 %v2_31706 to i32*
  %v4_31706 = load i32, i32* %v3_31706, align 4
  %v10_31706 = icmp ult i32 %v1_31701, %v4_31706
  %v1_31709 = zext i1 %v10_31706 to i32
  %v3_31709 = and i32 %v1_31701, -256
  %v4_31709 = or i32 %v1_31709, %v3_31709
  %v5_3170c = icmp eq i1 %v10_31706, false
  br i1 %v5_3170c, label %bb, label %dec_label_pc_31710

bb:                                               ; preds = %dec_label_pc_316f0
  %v1_3170e = call i32 @function_31715()
  br label %dec_label_pc_31710

dec_label_pc_31710:                               ; preds = %bb, %dec_label_pc_316f0
  %v2_3170e = phi i32 [ %v1_3170e, %bb ], [ %v4_31709, %dec_label_pc_316f0 ]
  ret i32 %v2_3170e

; uselistorder directives
  uselistorder i1 %v10_31706, { 1, 0 }
}

define i32 @function_31715() local_unnamed_addr {
dec_label_pc_31715:
  %v0_31715 = load i32, i32* @ebp, align 4
  %v1_31715 = add i32 %v0_31715, -32
  %v2_31715 = inttoptr i32 %v1_31715 to i32*
  %v3_31715 = load i32, i32* %v2_31715, align 4
  %v2_3171e = mul i32 %v3_31715, 24
  ret i32 %v2_3171e
}

define i32 @function_3172e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3172e:
  %v0_3172e = load i32, i32* @eax, align 8
  %v1_3172e = load i1, i1* @cf, align 1
  %v2_3172e = zext i1 %v1_3172e to i32
  %v3_3172e = add i32 %v0_3172e, 20
  %v4_3172e = add i32 %v3_3172e, %v2_3172e
  %v14_3172e = icmp eq i32 %v4_3172e, 0
  store i32 %v4_3172e, i32* @eax, align 8
  br i1 %v14_3172e, label %bb, label %dec_label_pc_31735

bb:                                               ; preds = %dec_label_pc_3172e
  %v1_31733 = call i32 @function_3173a()
  br label %dec_label_pc_31735

dec_label_pc_31735:                               ; preds = %bb, %dec_label_pc_3172e
  %v2_31733 = phi i32 [ %v1_31733, %bb ], [ %v4_3172e, %dec_label_pc_3172e ]
  ret i32 %v2_31733
}

define i32 @function_3173a() local_unnamed_addr {
dec_label_pc_3173a:
  %v0_3173b = load i32, i32* @eax, align 8
  ret i32 %v0_3173b
}

define i32 @_ZSt11__push_heapIPxixEvT_T0_S2_T1_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3173c:
  %v1_3176e = add i32 %arg2, -1
  %v7_317bb = icmp sgt i32 %arg2, %arg3
  br i1 %v7_317bb, label %dec_label_pc_317bd, label %dec_label_pc_317e1

dec_label_pc_317bd:                               ; preds = %dec_label_pc_3173c
  %tmp119 = icmp slt i32 %v1_3176e, 0
  %v2_31773 = zext i1 %tmp119 to i32
  %v2_31776 = add i32 %v2_31773, %v1_3176e
  %v2_317782 = udiv i32 %v2_31776, 2
  %tmp118 = ptrtoint i32* %arg1 to i32
  %v2_317c0 = mul i32 %v2_317782, 8
  %v5_317c3 = add i32 %v2_317c0, %tmp118
  %v1_317c6 = add i32 %v5_317c3, 4
  %v2_317c6 = inttoptr i32 %v1_317c6 to i32*
  %v3_317c6 = load i32, i32* %v2_317c6, align 4
  %v1_317c9 = inttoptr i32 %v5_317c3 to i32*
  %v2_317c9 = load i32, i32* %v1_317c9, align 4
  %v8_317ce = icmp sgt i32 %v3_317c6, %arg5
  br i1 %v8_317ce, label %dec_label_pc_317e1, label %dec_label_pc_317d0

dec_label_pc_317d0:                               ; preds = %dec_label_pc_317bd
  %v5_317d3 = icmp slt i32 %v3_317c6, %arg5
  br i1 %v5_317d3, label %dec_label_pc_317e6, label %dec_label_pc_317d5

dec_label_pc_317d5:                               ; preds = %dec_label_pc_317d0
  %v10_317d5 = icmp ult i32 %v2_317c9, %arg4
  %v1_317d8 = icmp eq i1 %v10_317d5, false
  br i1 %v1_317d8, label %dec_label_pc_317e1, label %dec_label_pc_317e6

dec_label_pc_317e1:                               ; preds = %dec_label_pc_3173c, %dec_label_pc_317d5, %dec_label_pc_317bd
  br label %dec_label_pc_317e6

dec_label_pc_317e6:                               ; preds = %dec_label_pc_317d0, %dec_label_pc_317d5, %dec_label_pc_317e1
  %storemerge = phi i32 [ 0, %dec_label_pc_317e1 ], [ 1, %dec_label_pc_317d5 ], [ 1, %dec_label_pc_317d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_3176e, { 1, 0 }
  uselistorder label %dec_label_pc_317e6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_317e1, { 1, 2, 0 }
}

define i32 @function_317e8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_317e8:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_317ea = load i32, i32* @ebp, align 4
  %v1_317ea = add i32 %v0_317ea, -32
  %v2_317ea = inttoptr i32 %v1_317ea to i32*
  %v3_317ea = load i32, i32* %v2_317ea, align 4
  %v2_317ed = mul i32 %v3_317ea, 8
  store i32 %v2_317ed, i32* %ecx.global-to-local, align 8
  %v2_317f2 = add i32 %v0_317ea, -28
  %v3_317f2 = inttoptr i32 %v2_317f2 to i32*
  %v4_317f2 = load i32, i32* %v3_317f2, align 4
  %v5_317f2 = add i32 %v4_317f2, %v2_317ed
  store i32 %v5_317f2, i32* %ecx.global-to-local, align 8
  %v1_317f5 = add i32 %v0_317ea, -48
  %v2_317f5 = inttoptr i32 %v1_317f5 to i32*
  %v3_317f5 = load i32, i32* %v2_317f5, align 4
  %v1_317f8 = add i32 %v0_317ea, -44
  %v2_317f8 = inttoptr i32 %v1_317f8 to i32*
  %v3_317f8 = load i32, i32* %v2_317f8, align 4
  store i32 %v3_317f8, i32* %edx.global-to-local, align 4
  %v2_317fb = inttoptr i32 %v5_317f2 to i32*
  store i32 %v3_317f5, i32* %v2_317fb, align 4
  %v0_317fd = load i32, i32* %edx.global-to-local, align 4
  %v1_317fd = load i32, i32* %ecx.global-to-local, align 8
  %v2_317fd = add i32 %v1_317fd, 4
  %v3_317fd = inttoptr i32 %v2_317fd to i32*
  store i32 %v0_317fd, i32* %v3_317fd, align 4
  %v0_31800 = load i32, i32* @ebp, align 4
  %v1_31800 = add i32 %v0_31800, -12
  %v2_31800 = inttoptr i32 %v1_31800 to i32*
  %v3_31800 = load i32, i32* %v2_31800, align 4
  %v1_31803 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31803 = xor i32 %v1_31803, %v3_31800
  %v3_31803 = icmp eq i32 %v2_31803, 0
  store i32 %v2_31803, i32* @eax, align 8
  br i1 %v3_31803, label %bb, label %dec_label_pc_3180c

bb:                                               ; preds = %dec_label_pc_317e8
  %v1_3180a = call i32 @function_31811()
  br label %dec_label_pc_3180c

dec_label_pc_3180c:                               ; preds = %bb, %dec_label_pc_317e8
  %v3_3180a = phi i32 [ %v1_3180a, %bb ], [ %v2_31803, %dec_label_pc_317e8 ]
  ret i32 %v3_3180a

; uselistorder directives
  uselistorder i32 %v2_317ed, { 1, 0 }
  uselistorder i32 %v0_317ea, { 1, 0, 2, 3 }
}

define i32 @function_31811() local_unnamed_addr {
dec_label_pc_31811:
  %v0_31812 = load i32, i32* @eax, align 8
  ret i32 %v0_31812
}

define i32 @_ZSt4swapIxEvRT_S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31813:
  %v2_31836 = load i32, i32* %arg1, align 4
  ret i32 %v2_31836
}

define i32 @function_3183d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3183d:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3183e = load i32, i32* @ebp, align 4
  %v1_3183e = add i32 %v0_3183e, -32
  %v2_3183e = inttoptr i32 %v1_3183e to i32*
  %v3_3183e = load i32, i32* %v2_3183e, align 4
  %v1_31841 = add i32 %v3_3183e, 4
  %v2_31841 = inttoptr i32 %v1_31841 to i32*
  %v3_31841 = load i32, i32* %v2_31841, align 4
  store i32 %v3_31841, i32* %edx.global-to-local, align 4
  %v1_31844 = inttoptr i32 %v3_3183e to i32*
  %v2_31844 = load i32, i32* %v1_31844, align 4
  %v1_31846 = add i32 %v0_3183e, -28
  %v2_31846 = inttoptr i32 %v1_31846 to i32*
  %v3_31846 = load i32, i32* %v2_31846, align 4
  store i32 %v3_31846, i32* %ecx.global-to-local, align 8
  %v2_31849 = inttoptr i32 %v3_31846 to i32*
  store i32 %v2_31844, i32* %v2_31849, align 4
  %v0_3184b = load i32, i32* %edx.global-to-local, align 4
  %v1_3184b = load i32, i32* %ecx.global-to-local, align 8
  %v2_3184b = add i32 %v1_3184b, 4
  %v3_3184b = inttoptr i32 %v2_3184b to i32*
  store i32 %v0_3184b, i32* %v3_3184b, align 4
  %v0_3184e = load i32, i32* @ebp, align 4
  %v1_3184e = add i32 %v0_3184e, -32
  %v2_3184e = inttoptr i32 %v1_3184e to i32*
  %v3_3184e = load i32, i32* %v2_3184e, align 4
  store i32 %v3_3184e, i32* %ecx.global-to-local, align 8
  %v1_31851 = add i32 %v0_3184e, -24
  %v2_31851 = inttoptr i32 %v1_31851 to i32*
  %v3_31851 = load i32, i32* %v2_31851, align 4
  %v1_31854 = add i32 %v0_3184e, -20
  %v2_31854 = inttoptr i32 %v1_31854 to i32*
  %v3_31854 = load i32, i32* %v2_31854, align 4
  store i32 %v3_31854, i32* %edx.global-to-local, align 4
  %v2_31857 = inttoptr i32 %v3_3184e to i32*
  store i32 %v3_31851, i32* %v2_31857, align 4
  %v0_31859 = load i32, i32* %edx.global-to-local, align 4
  %v1_31859 = load i32, i32* %ecx.global-to-local, align 8
  %v2_31859 = add i32 %v1_31859, 4
  %v3_31859 = inttoptr i32 %v2_31859 to i32*
  store i32 %v0_31859, i32* %v3_31859, align 4
  %v0_3185c = load i32, i32* @ebp, align 4
  %v1_3185c = add i32 %v0_3185c, -12
  %v2_3185c = inttoptr i32 %v1_3185c to i32*
  %v3_3185c = load i32, i32* %v2_3185c, align 4
  %v1_3185f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3185f = xor i32 %v1_3185f, %v3_3185c
  %v3_3185f = icmp eq i32 %v2_3185f, 0
  store i32 %v2_3185f, i32* @eax, align 8
  br i1 %v3_3185f, label %bb, label %dec_label_pc_31868

bb:                                               ; preds = %dec_label_pc_3183d
  %v1_31866 = call i32 @function_3186d()
  br label %dec_label_pc_31868

dec_label_pc_31868:                               ; preds = %bb, %dec_label_pc_3183d
  %v2_31866 = phi i32 [ %v1_31866, %bb ], [ %v2_3185f, %dec_label_pc_3183d ]
  ret i32 %v2_31866
}

define i32 @function_3186d() local_unnamed_addr {
dec_label_pc_3186d:
  %v0_3186e = load i32, i32* @eax, align 8
  ret i32 %v0_3186e
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIxEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3186f:
  %v2_3189a = sub i32 %arg2, %arg1
  %v2_3189a.off = add i32 %v2_3189a, 7
  %tmp110 = icmp ult i32 %v2_3189a.off, 15
  br i1 %tmp110, label %bb, label %dec_label_pc_318aa

bb:                                               ; preds = %dec_label_pc_3186f
  %v4_318a8 = call i32 @function_318d2(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_318aa

dec_label_pc_318aa:                               ; preds = %bb, %dec_label_pc_3186f
  %v2_3189e = srem i32 %v2_3189a, 8
  %v2_318b7109 = sub i32 %v2_3189e, %v2_3189a
  %v5_318bc = add i32 %v2_318b7109, %arg3
  ret i32 %v5_318bc
}

define i32 @function_318cb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_318cb:
  %v0_318cb = load i32, i32* @eax, align 8
  %v2_318cb = add i32 %v0_318cb, 36
  %v16_318cb = and i32 %v2_318cb, 255
  %v18_318cb = and i32 %v0_318cb, -256
  %v19_318cb = or i32 %v16_318cb, %v18_318cb
  ret i32 %v19_318cb

; uselistorder directives
  uselistorder i32 %v0_318cb, { 1, 0 }
}

define i32 @function_318d2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_318d2:
  %v0_318d2 = load i32, i32* @ebp, align 4
  %v1_318d2 = add i32 %v0_318d2, -16
  %v2_318d2 = inttoptr i32 %v1_318d2 to i32*
  %v3_318d2 = load i32, i32* %v2_318d2, align 4
  %v2_318da = add i32 %v0_318d2, -36
  %v3_318da = inttoptr i32 %v2_318da to i32*
  %v4_318da = load i32, i32* %v3_318da, align 4
  %tmp = mul i32 %v3_318d2, -8
  %v5_318da = add i32 %v4_318da, %tmp
  store i32 %v5_318da, i32* @eax, align 8
  %v1_318dd = add i32 %v0_318d2, -12
  %v2_318dd = inttoptr i32 %v1_318dd to i32*
  %v3_318dd = load i32, i32* %v2_318dd, align 4
  %v1_318e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_318e0 = icmp eq i32 %v1_318e0, %v3_318dd
  br i1 %v3_318e0, label %bb, label %dec_label_pc_318e9

bb:                                               ; preds = %dec_label_pc_318d2
  %v1_318e7 = call i32 @function_318ee()
  br label %dec_label_pc_318e9

dec_label_pc_318e9:                               ; preds = %bb, %dec_label_pc_318d2
  %v2_318e7 = phi i32 [ %v1_318e7, %bb ], [ %v5_318da, %dec_label_pc_318d2 ]
  ret i32 %v2_318e7

; uselistorder directives
  uselistorder i32 %v5_318da, { 1, 0 }
}

define i32 @function_318ee() local_unnamed_addr {
dec_label_pc_318ee:
  %v0_318ef = load i32, i32* @eax, align 8
  ret i32 %v0_318ef
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvSsEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_318f0:
  %v4_3190e = zext i8 %arg5 to i32
  ret i32 %v4_3190e
}

define i32 @function_31913(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31913:
  %v0_31913 = load i32, i32* @ebp, align 4
  %v1_31913 = add i32 %v0_31913, 1
  store i32 %v1_31913, i32* @ebp, align 4
  %v0_31915 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3191b = add i32 %v0_31913, -11
  %v3_3191b = inttoptr i32 %v2_3191b to i32*
  store i32 %v0_31915, i32* %v3_3191b, align 4
  %v0_31920 = load i32, i32* @ebp, align 4
  %v1_31920 = add i32 %v0_31920, -36
  %v2_31920 = inttoptr i32 %v1_31920 to i32*
  %v3_31920 = load i32, i32* %v2_31920, align 4
  %v1_31926 = call i32 @unknown_64a2f(i32 %v3_31920)
  %v0_31937 = load i32, i32* @ebp, align 4
  %v1_31937 = add i32 %v0_31937, -32
  %v2_31937 = inttoptr i32 %v1_31937 to i32*
  %v3_31937 = load i32, i32* %v2_31937, align 4
  %v3_3193d = call i32 @unknown_64a5c(i32 %v3_31937, i32 %v1_31926, i32 1)
  %v0_31942 = load i32, i32* @ebp, align 4
  %v1_31942 = add i32 %v0_31942, -12
  %v2_31942 = inttoptr i32 %v1_31942 to i32*
  %v3_31942 = load i32, i32* %v2_31942, align 4
  %v1_31945 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31945 = xor i32 %v1_31945, %v3_31942
  %v3_31945 = icmp eq i32 %v2_31945, 0
  store i32 %v2_31945, i32* @eax, align 8
  br i1 %v3_31945, label %bb, label %dec_label_pc_3194e

bb:                                               ; preds = %dec_label_pc_31913
  %v1_3194c = call i32 @function_31953()
  br label %dec_label_pc_3194e

dec_label_pc_3194e:                               ; preds = %bb, %dec_label_pc_31913
  %v2_3194c = phi i32 [ %v1_3194c, %bb ], [ %v2_31945, %dec_label_pc_31913 ]
  ret i32 %v2_3194c
}

define i32 @function_31953() local_unnamed_addr {
dec_label_pc_31953:
  %v0_31954 = load i32, i32* @eax, align 8
  ret i32 %v0_31954
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_31955:
  %v4_31973 = zext i8 %arg5 to i32
  ret i32 %v4_31973
}

define i32 @function_31979(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_31979:
  %v0_3197a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_31980 = load i32, i32* @ebp, align 4
  %v2_31980 = add i32 %v1_31980, -12
  %v3_31980 = inttoptr i32 %v2_31980 to i32*
  store i32 %v0_3197a, i32* %v3_31980, align 4
  %v0_31985 = load i32, i32* @ebp, align 4
  %v1_31985 = add i32 %v0_31985, -36
  %v2_31985 = inttoptr i32 %v1_31985 to i32*
  %v3_31985 = load i32, i32* %v2_31985, align 4
  %v1_3198b = call i32 @unknown_64b02(i32 %v3_31985)
  %v0_3199c = load i32, i32* @ebp, align 4
  %v1_3199c = add i32 %v0_3199c, -32
  %v2_3199c = inttoptr i32 %v1_3199c to i32*
  %v3_3199c = load i32, i32* %v2_3199c, align 4
  %v3_319a2 = call i32 @unknown_64b2f(i32 %v3_3199c, i32 %v1_3198b, i32 1)
  %v0_319a7 = load i32, i32* @ebp, align 4
  %v1_319a7 = add i32 %v0_319a7, -12
  %v2_319a7 = inttoptr i32 %v1_319a7 to i32*
  %v3_319a7 = load i32, i32* %v2_319a7, align 4
  %v1_319aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_319aa = xor i32 %v1_319aa, %v3_319a7
  %v3_319aa = icmp eq i32 %v2_319aa, 0
  store i32 %v2_319aa, i32* @eax, align 8
  br i1 %v3_319aa, label %bb, label %dec_label_pc_319b3

bb:                                               ; preds = %dec_label_pc_31979
  %v1_319b1 = call i32 @function_319b8()
  br label %dec_label_pc_319b3

dec_label_pc_319b3:                               ; preds = %bb, %dec_label_pc_31979
  %v2_319b1 = phi i32 [ %v1_319b1, %bb ], [ %v2_319aa, %dec_label_pc_31979 ]
  ret i32 %v2_319b1
}

define i32 @function_319b8() local_unnamed_addr {
dec_label_pc_319b8:
  %v0_319b9 = load i32, i32* @eax, align 8
  ret i32 %v0_319b9
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_319ba:
  %v1_319f0 = call i32 @unknown_64bd5(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_31a04(i32 %arg1) local_unnamed_addr {
dec_label_pc_31a04:
  %v3_31a04 = load i32, i32* @eax, align 8
  ret i32 %v3_31a04
}

define i32 @function_31a0a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31a0a:
  %v0_31a0c = load i32, i32* @ebp, align 4
  %v1_31a0c = add i32 %v0_31a0c, -12
  %v2_31a0c = inttoptr i32 %v1_31a0c to i32*
  %v3_31a0c = load i32, i32* %v2_31a0c, align 4
  %v1_31a0f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31a0f = xor i32 %v1_31a0f, %v3_31a0c
  %v3_31a0f = icmp eq i32 %v2_31a0f, 0
  store i32 %v2_31a0f, i32* @eax, align 8
  br i1 %v3_31a0f, label %bb, label %dec_label_pc_31a18

bb:                                               ; preds = %dec_label_pc_31a0a
  %v1_31a16 = call i32 @function_31a1d()
  br label %dec_label_pc_31a18

dec_label_pc_31a18:                               ; preds = %bb, %dec_label_pc_31a0a
  %v2_31a16 = phi i32 [ %v1_31a16, %bb ], [ %v2_31a0f, %dec_label_pc_31a0a ]
  ret i32 %v2_31a16
}

define i32 @function_31a1d() local_unnamed_addr {
dec_label_pc_31a1d:
  %v0_31a1e = load i32, i32* @eax, align 8
  ret i32 %v0_31a1e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvbEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_31a1f:
  %eax.global-to-local = alloca i32, align 4
  %v2_31a20 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_31a20
}

define i32 @function_31a81() local_unnamed_addr {
dec_label_pc_31a81:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_31a81 = load i32, i32* %ecx.global-to-local, align 8
  %v1_31a81 = add i32 %v0_31a81, -1
  store i32 %v1_31a81, i32* %ecx.global-to-local, align 8
  %v0_31a83 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31a83
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvxEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_31a84:
  ret i32 %arg1
}

define i32 @function_31a91(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31a91:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_31a91 = load i32, i32* @ebp, align 4
  %v0_31a92 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_31a92 = or i32 %v0_31a92, 137
  store i32 %v11_31a92, i32* %eax.global-to-local, align 8
  %v0_31a95 = load i32, i32* @ecx, align 8
  %v1_31a95 = add i32 %v0_31a95, -1
  store i32 %v1_31a95, i32* %ecx.global-to-local, align 8
  %v1_31a97 = add i32 %v0_31a91, 3
  store i32 %v1_31a97, i32* %ebp.global-to-local, align 4
  %v1_31a98 = add i32 %v0_31a95, 1166793796
  %v2_31a98 = inttoptr i32 %v1_31a98 to i8*
  %v3_31a98 = load i8, i8* %v2_31a98, align 1
  %v5_31a98 = trunc i32 %v1_31a95 to i8
  %v8_31a98 = add i8 %v3_31a98, %v5_31a98
  %v28_31a98 = icmp ult i8 %v8_31a98, %v3_31a98
  store i1 %v28_31a98, i1* %cf.global-to-local, align 1
  store i8 %v8_31a98, i8* %v2_31a98, align 1
  %v0_31a9e = load i32, i32* %eax.global-to-local, align 8
  %v1_31a9e = trunc i32 %v0_31a9e to i8
  %v2_31a9e = load i1, i1* %cf.global-to-local, align 1
  %v3_31a9e = zext i1 %v2_31a9e to i8
  %v4_31a9e = add i8 %v1_31a9e, -119
  %v5_31a9e = add i8 %v4_31a9e, %v3_31a9e
  %v22_31a9e = icmp ule i8 %v5_31a9e, %v1_31a9e
  %v23_31a9e = icmp ugt i8 %v1_31a9e, 118
  %v24_31a9e = select i1 %v2_31a9e, i1 %v22_31a9e, i1 %v23_31a9e
  store i1 %v24_31a9e, i1* %cf.global-to-local, align 1
  %v25_31a9e = zext i8 %v5_31a9e to i32
  %v27_31a9e = and i32 %v0_31a9e, -256
  %v28_31a9e = or i32 %v25_31a9e, %v27_31a9e
  store i32 %v28_31a9e, i32* %eax.global-to-local, align 8
  %v0_31aa0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_31aa0 = add i32 %v0_31aa0, 1
  store i32 %v1_31aa0, i32* @ebp, align 4
  %v1_31aa5 = add i32 %v28_31a9e, -1587161275
  %v2_31aa5 = inttoptr i32 %v1_31aa5 to i8*
  %v3_31aa5 = load i8, i8* %v2_31aa5, align 1
  %v4_31aa5 = load i32, i32* %ecx.global-to-local, align 8
  %v5_31aa5 = trunc i32 %v4_31aa5 to i8
  %v7_31aa5 = zext i1 %v24_31a9e to i8
  %v8_31aa5 = sub i8 %v3_31aa5, %v5_31aa5
  %v9_31aa5 = add i8 %v8_31aa5, %v7_31aa5
  %v19_31aa5 = sub i8 %v8_31aa5, %v7_31aa5
  %v20_31aa5 = icmp ult i8 %v3_31aa5, %v19_31aa5
  %v21_31aa5 = icmp ne i8 %v5_31aa5, -1
  %v22_31aa5 = or i1 %v21_31aa5, %v20_31aa5
  %v23_31aa5 = icmp ult i8 %v3_31aa5, %v5_31aa5
  %v24_31aa5 = select i1 %v24_31a9e, i1 %v22_31aa5, i1 %v23_31aa5
  store i1 %v24_31aa5, i1* %cf.global-to-local, align 1
  store i8 %v9_31aa5, i8* %v2_31aa5, align 1
  %v0_31aab = load i32, i32* %eax.global-to-local, align 8
  %v1_31aab = trunc i32 %v0_31aab to i8
  %v2_31aab = load i1, i1* %cf.global-to-local, align 1
  %v3_31aab = zext i1 %v2_31aab to i8
  %v4_31aab = add i8 %v3_31aab, %v1_31aab
  %v19_31aab = icmp ule i8 %v4_31aab, %v1_31aab
  %v21_31aab = icmp eq i1 %v2_31aab, %v19_31aab
  store i1 %v21_31aab, i1* %cf.global-to-local, align 1
  %v22_31aab = zext i8 %v4_31aab to i32
  %v24_31aab = and i32 %v0_31aab, -256
  %v25_31aab = or i32 %v22_31aab, %v24_31aab
  store i32 %v25_31aab, i32* %eax.global-to-local, align 8
  %v1_31aad = inttoptr i32 %v25_31aab to i8*
  %v2_31aad = load i8, i8* %v1_31aad, align 1
  %v5_31aad = add i8 %v2_31aad, %v4_31aab
  store i8 %v5_31aad, i8* %v1_31aad, align 1
  %v0_31aaf = load i32, i32* %eax.global-to-local, align 8
  %v1_31aaf = load i32, i32* @ebp, align 4
  %v2_31aaf = add i32 %v1_31aaf, -12
  %v3_31aaf = inttoptr i32 %v2_31aaf to i32*
  store i32 %v0_31aaf, i32* %v3_31aaf, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_31ab4 = load i32, i32* @ebp, align 4
  %v1_31ab4 = add i32 %v0_31ab4, -36
  %v2_31ab4 = inttoptr i32 %v1_31ab4 to i32*
  %v3_31ab4 = load i32, i32* %v2_31ab4, align 4
  store i32 %v3_31ab4, i32* %eax.global-to-local, align 8
  %v1_31aba = call i32 @unknown_64d70(i32 %v3_31ab4)
  store i32 %v1_31aba, i32* %eax.global-to-local, align 8
  %v0_31acb = load i32, i32* @ebp, align 4
  %v1_31acb = add i32 %v0_31acb, -32
  %v2_31acb = inttoptr i32 %v1_31acb to i32*
  %v3_31acb = load i32, i32* %v2_31acb, align 4
  store i32 %v3_31acb, i32* %eax.global-to-local, align 8
  %v3_31ad1 = call i32 @unknown_64d9e(i32 %v3_31acb, i32 %v1_31aba, i32 1)
  store i32 %v3_31ad1, i32* %eax.global-to-local, align 8
  %v0_31ad6 = load i32, i32* @ebp, align 4
  %v1_31ad6 = add i32 %v0_31ad6, -12
  %v2_31ad6 = inttoptr i32 %v1_31ad6 to i32*
  %v3_31ad6 = load i32, i32* %v2_31ad6, align 4
  store i32 %v3_31ad6, i32* %eax.global-to-local, align 8
  %v1_31ad9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31ad9 = xor i32 %v1_31ad9, %v3_31ad6
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_31ad9 = icmp eq i32 %v2_31ad9, 0
  store i32 %v2_31ad9, i32* @eax, align 8
  br i1 %v3_31ad9, label %bb, label %dec_label_pc_31ae2

bb:                                               ; preds = %dec_label_pc_31a91
  %v1_31ae0 = call i32 @function_31ae7()
  store i32 %v1_31ae0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_31ae2

dec_label_pc_31ae2:                               ; preds = %bb, %dec_label_pc_31a91
  %v3_31ae0 = phi i32 [ %v1_31ae0, %bb ], [ %v2_31ad9, %dec_label_pc_31a91 ]
  ret i32 %v3_31ae0

; uselistorder directives
  uselistorder i8 %v4_31aab, { 0, 2, 1 }
  uselistorder i8 %v1_31aab, { 1, 0 }
  uselistorder i8 %v8_31aa5, { 1, 0 }
  uselistorder i8 %v7_31aa5, { 1, 0 }
  uselistorder i8 %v5_31aa5, { 1, 0, 2 }
  uselistorder i1 %v24_31a9e, { 1, 0, 2 }
  uselistorder i8 %v5_31a9e, { 1, 0 }
  uselistorder i8 %v3_31a98, { 1, 0 }
}

define i32 @function_31ae7() local_unnamed_addr {
dec_label_pc_31ae7:
  %v0_31ae8 = load i32, i32* @eax, align 8
  ret i32 %v0_31ae8
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvdEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_31ae9:
  %eax.global-to-local = alloca i32, align 4
  %v2_31aea = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_31aea
}

define i32 @function_31aec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31aec:
  %v0_31aef = load i32, i32* @ebp, align 4
  %v1_31aef = add i32 %v0_31aef, 8
  %v2_31aef = inttoptr i32 %v1_31aef to i32*
  %v3_31aef = load i32, i32* %v2_31aef, align 4
  %v2_31af2 = add i32 %v0_31aef, -28
  %v3_31af2 = inttoptr i32 %v2_31af2 to i32*
  store i32 %v3_31aef, i32* %v3_31af2, align 4
  %v0_31af5 = load i32, i32* @ebp, align 4
  %v1_31af5 = add i32 %v0_31af5, 12
  %v2_31af5 = inttoptr i32 %v1_31af5 to i32*
  %v3_31af5 = load i32, i32* %v2_31af5, align 4
  %v2_31af8 = add i32 %v0_31af5, -32
  %v3_31af8 = inttoptr i32 %v2_31af8 to i32*
  store i32 %v3_31af5, i32* %v3_31af8, align 4
  %v0_31afb = load i32, i32* @ebp, align 4
  %v1_31afb = add i32 %v0_31afb, 16
  %v2_31afb = inttoptr i32 %v1_31afb to i32*
  %v3_31afb = load i32, i32* %v2_31afb, align 4
  %v2_31afe = add i32 %v0_31afb, -36
  %v3_31afe = inttoptr i32 %v2_31afe to i32*
  store i32 %v3_31afb, i32* %v3_31afe, align 4
  %v0_31b01 = load i32, i32* @ebp, align 4
  %v1_31b01 = add i32 %v0_31b01, 20
  %v2_31b01 = inttoptr i32 %v1_31b01 to i32*
  %v3_31b01 = load i32, i32* %v2_31b01, align 4
  ret i32 %v3_31b01
}

define i32 @function_31b04(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b04:
  %v0_31b04 = load i32, i32* @eax, align 8
  %v1_31b04 = load i32, i32* @ebp, align 4
  %v2_31b04 = add i32 %v1_31b04, -40
  %v3_31b04 = inttoptr i32 %v2_31b04 to i32*
  store i32 %v0_31b04, i32* %v3_31b04, align 4
  %v0_31b07 = load i32, i32* @ebp, align 4
  %v1_31b07 = add i32 %v0_31b07, 24
  %v2_31b07 = inttoptr i32 %v1_31b07 to i8*
  %v3_31b07 = load i8, i8* %v2_31b07, align 1
  %v3_31b0b = add i32 %v0_31b07, -41
  %v4_31b0b = inttoptr i32 %v3_31b0b to i8*
  store i8 %v3_31b07, i8* %v4_31b0b, align 1
  %v0_31b0e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_31b14 = load i32, i32* @ebp, align 4
  %v2_31b14 = add i32 %v1_31b14, -12
  %v3_31b14 = inttoptr i32 %v2_31b14 to i32*
  store i32 %v0_31b0e, i32* %v3_31b14, align 4
  %v0_31b19 = load i32, i32* @ebp, align 4
  %v1_31b19 = add i32 %v0_31b19, -36
  %v2_31b19 = inttoptr i32 %v1_31b19 to i32*
  %v3_31b19 = load i32, i32* %v2_31b19, align 4
  ret i32 %v3_31b19
}

define i32 @function_31b1f() local_unnamed_addr {
dec_label_pc_31b1f:
  %v0_31b1f = call i32 @unknown_64e39()
  %v0_31b30 = load i32, i32* @ebp, align 4
  %v1_31b30 = add i32 %v0_31b30, -32
  %v2_31b30 = inttoptr i32 %v1_31b30 to i32*
  %v3_31b30 = load i32, i32* %v2_31b30, align 4
  %v3_31b36 = call i32 @unknown_64e67(i32 %v3_31b30, i32 %v0_31b1f, i32 1)
  %v0_31b3b = load i32, i32* @ebp, align 4
  %v1_31b3b = add i32 %v0_31b3b, -12
  %v2_31b3b = inttoptr i32 %v1_31b3b to i32*
  %v3_31b3b = load i32, i32* %v2_31b3b, align 4
  %v1_31b3e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31b3e = xor i32 %v1_31b3e, %v3_31b3b
  %v3_31b3e = icmp eq i32 %v2_31b3e, 0
  store i32 %v2_31b3e, i32* @eax, align 8
  br i1 %v3_31b3e, label %bb, label %dec_label_pc_31b47

bb:                                               ; preds = %dec_label_pc_31b1f
  %v1_31b45 = call i32 @function_31b4c()
  br label %dec_label_pc_31b47

dec_label_pc_31b47:                               ; preds = %bb, %dec_label_pc_31b1f
  %v3_31b45 = phi i32 [ %v1_31b45, %bb ], [ %v2_31b3e, %dec_label_pc_31b1f ]
  ret i32 %v3_31b45
}

define i32 @function_31b4c() local_unnamed_addr {
dec_label_pc_31b4c:
  %v0_31b4d = load i32, i32* @eax, align 8
  ret i32 %v0_31b4d
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvSsEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31b4e:
  ret i32 %arg3
}

define i32 @function_31b64(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b64:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_31b64 = load i32, i32* @ebp, align 4
  %v1_31b64 = add i32 %v0_31b64, 1
  store i32 %v1_31b64, i32* @ebp, align 4
  %v1_31b65 = load i32, i32* @ebx, align 4
  %v2_31b65 = add i32 %v1_31b65, 1166611525
  %v3_31b65 = inttoptr i32 %v2_31b65 to double*
  %v4_31b65 = load double, double* %v3_31b65, align 4
  %v5_31b65 = fpext double %v4_31b65 to x86_fp80
  %v6_31b65 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_31b65 = fmul x86_fp80 %v5_31b65, %v6_31b65
  %v3_31b6b = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_31b6b = fpext float %v3_31b6b to x86_fp80
  %v6_31b6b = fmul x86_fp80 %v7_31b65, %v4_31b6b
  store x86_fp80 %v6_31b6b, x86_fp80* @st0, align 4
  %v0_31b6d = load i32, i32* @edx, align 4
  %v1_31b6d = and i32 %v0_31b6d, -65281
  %v2_31b6d = or i32 %v1_31b6d, 17664
  store i32 %v2_31b6d, i32* @edx, align 4
  %v0_31b6f = load i32, i32* @eax, align 8
  %v1_31b6f = add i32 %v0_31b6f, -1587161275
  %v2_31b6f = inttoptr i32 %v1_31b6f to i8*
  %v3_31b6f = load i8, i8* %v2_31b6f, align 1
  %v4_31b6f = load i32, i32* @ecx, align 8
  %v5_31b6f = trunc i32 %v4_31b6f to i8
  %v6_31b6f = load i1, i1* @cf, align 1
  %v7_31b6f = zext i1 %v6_31b6f to i8
  %v8_31b6f = sub i8 %v3_31b6f, %v5_31b6f
  %v9_31b6f = add i8 %v8_31b6f, %v7_31b6f
  %v19_31b6f = sub i8 %v8_31b6f, %v7_31b6f
  %v20_31b6f = icmp ult i8 %v3_31b6f, %v19_31b6f
  %v21_31b6f = icmp ne i8 %v5_31b6f, -1
  %v22_31b6f = or i1 %v21_31b6f, %v20_31b6f
  %v23_31b6f = icmp ult i8 %v3_31b6f, %v5_31b6f
  %v24_31b6f = select i1 %v6_31b6f, i1 %v22_31b6f, i1 %v23_31b6f
  store i1 %v24_31b6f, i1* %cf.global-to-local, align 1
  store i8 %v9_31b6f, i8* %v2_31b6f, align 1
  %v0_31b75 = load i32, i32* @eax, align 8
  %v1_31b75 = trunc i32 %v0_31b75 to i8
  %v2_31b75 = load i1, i1* %cf.global-to-local, align 1
  %v3_31b75 = zext i1 %v2_31b75 to i8
  %v4_31b75 = add i8 %v3_31b75, %v1_31b75
  %v19_31b75 = icmp ule i8 %v4_31b75, %v1_31b75
  %v21_31b75 = icmp eq i1 %v2_31b75, %v19_31b75
  store i1 %v21_31b75, i1* %cf.global-to-local, align 1
  %v22_31b75 = zext i8 %v4_31b75 to i32
  %v24_31b75 = and i32 %v0_31b75, -256
  %v25_31b75 = or i32 %v22_31b75, %v24_31b75
  store i32 %v25_31b75, i32* %eax.global-to-local, align 8
  %v1_31b77 = inttoptr i32 %v25_31b75 to i8*
  %v2_31b77 = load i8, i8* %v1_31b77, align 1
  %v5_31b77 = add i8 %v2_31b77, %v4_31b75
  store i8 %v5_31b77, i8* %v1_31b77, align 1
  %v0_31b79 = load i32, i32* %eax.global-to-local, align 8
  %v1_31b79 = load i32, i32* @ebp, align 4
  %v2_31b79 = add i32 %v1_31b79, -12
  %v3_31b79 = inttoptr i32 %v2_31b79 to i32*
  store i32 %v0_31b79, i32* %v3_31b79, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_31b7e = load i32, i32* @ebp, align 4
  %v1_31b7e = add i32 %v0_31b7e, -36
  %v2_31b7e = inttoptr i32 %v1_31b7e to i32*
  %v3_31b7e = load i32, i32* %v2_31b7e, align 4
  store i32 %v3_31b7e, i32* %eax.global-to-local, align 8
  %v1_31b84 = call i32 @unknown_64f02(i32 %v3_31b7e)
  store i32 %v1_31b84, i32* %eax.global-to-local, align 8
  %v0_31b95 = load i32, i32* @ebp, align 4
  %v1_31b95 = add i32 %v0_31b95, -32
  %v2_31b95 = inttoptr i32 %v1_31b95 to i32*
  %v3_31b95 = load i32, i32* %v2_31b95, align 4
  store i32 %v3_31b95, i32* %eax.global-to-local, align 8
  %v3_31b9b = call i32 @unknown_64f30(i32 %v3_31b95, i32 %v1_31b84, i32 1)
  store i32 %v3_31b9b, i32* %eax.global-to-local, align 8
  %v0_31ba0 = load i32, i32* @ebp, align 4
  %v1_31ba0 = add i32 %v0_31ba0, -12
  %v2_31ba0 = inttoptr i32 %v1_31ba0 to i32*
  %v3_31ba0 = load i32, i32* %v2_31ba0, align 4
  store i32 %v3_31ba0, i32* %eax.global-to-local, align 8
  %v1_31ba3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31ba3 = xor i32 %v1_31ba3, %v3_31ba0
  store i1 false, i1* @cf, align 1
  %v3_31ba3 = icmp eq i32 %v2_31ba3, 0
  store i32 %v2_31ba3, i32* @eax, align 8
  br i1 %v3_31ba3, label %bb, label %dec_label_pc_31bac

bb:                                               ; preds = %dec_label_pc_31b64
  %v1_31baa = call i32 @function_31bb1()
  store i32 %v1_31baa, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_31bac

dec_label_pc_31bac:                               ; preds = %bb, %dec_label_pc_31b64
  %v2_31baa = phi i32 [ %v1_31baa, %bb ], [ %v2_31ba3, %dec_label_pc_31b64 ]
  ret i32 %v2_31baa

; uselistorder directives
  uselistorder i8 %v4_31b75, { 0, 2, 1 }
  uselistorder i8 %v1_31b75, { 1, 0 }
  uselistorder i8 %v5_31b6f, { 1, 0, 2 }
}

define i32 @function_31bb1() local_unnamed_addr {
dec_label_pc_31bb1:
  %v0_31bb2 = load i32, i32* @eax, align 8
  ret i32 %v0_31bb2
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEEEENT_11result_typeEiRSG_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_31bb3:
  %v1_31be9 = call i32 @unknown_65018(i32 %arg3)
  %v3_31c00 = call i32 @unknown_65045(i32 %arg2, i32 %v1_31be9, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_31c11

bb:                                               ; preds = %dec_label_pc_31bb3
  %v1_31c0f = call i32 @function_31c16()
  br label %dec_label_pc_31c11

dec_label_pc_31c11:                               ; preds = %bb, %dec_label_pc_31bb3
  %v2_31c0f = phi i32 [ %v1_31c0f, %bb ], [ 0, %dec_label_pc_31bb3 ]
  ret i32 %v2_31c0f
}

define i32 @function_31c16() local_unnamed_addr {
dec_label_pc_31c16:
  %v0_31c17 = load i32, i32* @eax, align 8
  ret i32 %v0_31c17
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS8_13Config_vectorISsEEEESaISC_EEEEEENT_11result_typeEiRSG_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_31c18:
  %v1_31c4e = call i32 @unknown_6512d(i32 %arg3)
  %v3_31c65 = call i32 @unknown_6515a(i32 %arg2, i32 %v1_31c4e, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_31c76

bb:                                               ; preds = %dec_label_pc_31c18
  %v1_31c74 = call i32 @function_31c7b()
  br label %dec_label_pc_31c76

dec_label_pc_31c76:                               ; preds = %bb, %dec_label_pc_31c18
  %v2_31c74 = phi i32 [ %v1_31c74, %bb ], [ 0, %dec_label_pc_31c18 ]
  ret i32 %v2_31c74
}

define i32 @function_31c7b() local_unnamed_addr {
dec_label_pc_31c7b:
  %v0_31c7c = load i32, i32* @eax, align 8
  ret i32 %v0_31c7c
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvbEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_31c7d:
  %v1_31cb3 = call i32 @unknown_65242(i32 %arg3)
  %v3_31cca = call i32 @unknown_6526f(i32 %arg2, i32 %v1_31cb3, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_31cdb

bb:                                               ; preds = %dec_label_pc_31c7d
  %v1_31cd9 = call i32 @function_31ce0()
  br label %dec_label_pc_31cdb

dec_label_pc_31cdb:                               ; preds = %bb, %dec_label_pc_31c7d
  %v2_31cd9 = phi i32 [ %v1_31cd9, %bb ], [ 0, %dec_label_pc_31c7d ]
  ret i32 %v2_31cd9
}

define i32 @function_31ce0() local_unnamed_addr {
dec_label_pc_31ce0:
  %v0_31ce1 = load i32, i32* @eax, align 8
  ret i32 %v0_31ce1
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvxEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_31ce2:
  %v1_31d18 = call i32 @unknown_6532b(i32 %arg3)
  ret i32 %v1_31d18
}

define i32 @function_31d26(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31d26:
  %v0_31d29 = load i32, i32* @ebp, align 4
  %v1_31d29 = add i32 %v0_31d29, -32
  %v2_31d29 = inttoptr i32 %v1_31d29 to i32*
  %v3_31d29 = load i32, i32* %v2_31d29, align 4
  %v1_31d2f = call i32 @unknown_65358(i32 %v3_31d29)
  %v0_31d34 = load i32, i32* @ebp, align 4
  %v1_31d34 = add i32 %v0_31d34, -12
  %v2_31d34 = inttoptr i32 %v1_31d34 to i32*
  %v3_31d34 = load i32, i32* %v2_31d34, align 4
  %v1_31d37 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31d37 = xor i32 %v1_31d37, %v3_31d34
  %v3_31d37 = icmp eq i32 %v2_31d37, 0
  store i32 %v2_31d37, i32* @eax, align 8
  br i1 %v3_31d37, label %bb, label %dec_label_pc_31d40

bb:                                               ; preds = %dec_label_pc_31d26
  %v1_31d3e = call i32 @function_31d45()
  br label %dec_label_pc_31d40

dec_label_pc_31d40:                               ; preds = %bb, %dec_label_pc_31d26
  %v2_31d3e = phi i32 [ %v1_31d3e, %bb ], [ %v2_31d37, %dec_label_pc_31d26 ]
  ret i32 %v2_31d3e
}

define i32 @function_31d45() local_unnamed_addr {
dec_label_pc_31d45:
  %v0_31d46 = load i32, i32* @eax, align 8
  ret i32 %v0_31d46
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvdEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_31d47:
  %v1_31d7d = call i32 @unknown_6541b(i32 %arg3)
  %v3_31d94 = call i32 @unknown_65449(i32 %arg2, i32 %v1_31d7d, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_31da5

bb:                                               ; preds = %dec_label_pc_31d47
  %v1_31da3 = call i32 @function_31daa()
  br label %dec_label_pc_31da5

dec_label_pc_31da5:                               ; preds = %bb, %dec_label_pc_31d47
  %v2_31da3 = phi i32 [ %v1_31da3, %bb ], [ 0, %dec_label_pc_31d47 ]
  ret i32 %v2_31da3
}

define i32 @function_31daa() local_unnamed_addr {
dec_label_pc_31daa:
  %v0_31dab = load i32, i32* @eax, align 8
  ret i32 %v0_31dab
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14invoke_visitorINSH_11get_visitorIKxEEEEPKvEENT_11result_typeEiiRSS_T0_() local_unnamed_addr {
dec_label_pc_31dac:
  %eax.global-to-local = alloca i32, align 4
  %v17_31daf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_31daf
}

define i32 @function_31db2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_31db2:
  %v0_31db2 = load i32, i32* @ebp, align 4
  %v1_31db2 = add i32 %v0_31db2, 8
  %v2_31db2 = inttoptr i32 %v1_31db2 to i32*
  %v3_31db2 = load i32, i32* %v2_31db2, align 4
  %v2_31db5 = add i32 %v0_31db2, -28
  %v3_31db5 = inttoptr i32 %v2_31db5 to i32*
  store i32 %v3_31db2, i32* %v3_31db5, align 4
  %v0_31db8 = load i32, i32* @ebp, align 4
  %v1_31db8 = add i32 %v0_31db8, 12
  %v2_31db8 = inttoptr i32 %v1_31db8 to i32*
  %v3_31db8 = load i32, i32* %v2_31db8, align 4
  %v2_31dbb = add i32 %v0_31db8, -32
  %v3_31dbb = inttoptr i32 %v2_31dbb to i32*
  store i32 %v3_31db8, i32* %v3_31dbb, align 4
  %v0_31dbe = load i32, i32* @ebp, align 4
  %v1_31dbe = add i32 %v0_31dbe, 16
  %v2_31dbe = inttoptr i32 %v1_31dbe to i32*
  %v3_31dbe = load i32, i32* %v2_31dbe, align 4
  %v2_31dc1 = add i32 %v0_31dbe, -36
  %v3_31dc1 = inttoptr i32 %v2_31dc1 to i32*
  store i32 %v3_31dbe, i32* %v3_31dc1, align 4
  %v0_31dc4 = load i32, i32* @ebp, align 4
  %v1_31dc4 = add i32 %v0_31dc4, 20
  %v2_31dc4 = inttoptr i32 %v1_31dc4 to i32*
  %v3_31dc4 = load i32, i32* %v2_31dc4, align 4
  %v2_31dc7 = add i32 %v0_31dc4, -40
  %v3_31dc7 = inttoptr i32 %v2_31dc7 to i32*
  store i32 %v3_31dc4, i32* %v3_31dc7, align 4
  %v0_31dca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_31dd0 = load i32, i32* @ebp, align 4
  %v2_31dd0 = add i32 %v1_31dd0, -12
  %v3_31dd0 = inttoptr i32 %v2_31dd0 to i32*
  store i32 %v0_31dca, i32* %v3_31dd0, align 4
  %v0_31de5 = load i32, i32* @ecx, align 8
  %v0_31de9 = load i32, i32* @edx, align 4
  %v0_31ded = load i32, i32* @ebp, align 4
  %v1_31ded = add i32 %v0_31ded, -40
  %v2_31ded = inttoptr i32 %v1_31ded to i32*
  %v3_31ded = load i32, i32* %v2_31ded, align 4
  %v1_31df4 = add i32 %v0_31ded, -36
  %v2_31df4 = inttoptr i32 %v1_31df4 to i32*
  %v3_31df4 = load i32, i32* %v2_31df4, align 4
  %v1_31dfb = add i32 %v0_31ded, -32
  %v2_31dfb = inttoptr i32 %v1_31dfb to i32*
  %v3_31dfb = load i32, i32* %v2_31dfb, align 4
  %v1_31e02 = add i32 %v0_31ded, -28
  %v2_31e02 = inttoptr i32 %v1_31e02 to i32*
  %v3_31e02 = load i32, i32* %v2_31e02, align 4
  %sext = mul i32 %v0_31de9, 16777216
  %v8_31e08 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_31de5, 16777216
  %v9_31e08 = sdiv i32 %sext1, 16777216
  %v10_31e08 = call i32 @unknown_65504(i32 %v3_31e02, i32 %v3_31dfb, i32 %v3_31df4, i32 %v3_31ded, i32 %v8_31e08, i32 %v9_31e08, i32 0, i32 0)
  store i32 %v10_31e08, i32* @eax, align 8
  %v0_31e0d = load i32, i32* @ebp, align 4
  %v1_31e0d = add i32 %v0_31e0d, -12
  %v2_31e0d = inttoptr i32 %v1_31e0d to i32*
  %v3_31e0d = load i32, i32* %v2_31e0d, align 4
  %v1_31e10 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_31e10 = icmp eq i32 %v1_31e10, %v3_31e0d
  br i1 %v3_31e10, label %bb, label %dec_label_pc_31e19

bb:                                               ; preds = %dec_label_pc_31db2
  %v1_31e17 = call i32 @function_31e1e()
  br label %dec_label_pc_31e19

dec_label_pc_31e19:                               ; preds = %bb, %dec_label_pc_31db2
  %v2_31e17 = phi i32 [ %v1_31e17, %bb ], [ %v10_31e08, %dec_label_pc_31db2 ]
  ret i32 %v2_31e17

; uselistorder directives
  uselistorder i32 %v0_31ded, { 1, 0, 2, 3 }
}

define i32 @function_31e1e() local_unnamed_addr {
dec_label_pc_31e1e:
  %v0_31e1f = load i32, i32* @eax, align 8
  ret i32 %v0_31e1f
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e20:
  ret i32 %arg1
}

define i32 @function_31e30(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e30:
  %ebp.global-to-local = alloca i32, align 4
  %v0_31e30 = load i32, i32* @ebp, align 4
  %v1_31e33 = add i32 %v0_31e30, 2
  store i32 %v1_31e33, i32* %ebp.global-to-local, align 4
  %v0_31e34 = load i32, i32* @ebx, align 4
  %v1_31e34 = add i32 %v0_31e34, 1166610501
  %v2_31e34 = inttoptr i32 %v1_31e34 to i8*
  %v3_31e34 = load i8, i8* %v2_31e34, align 1
  %v4_31e34 = udiv i8 %v3_31e34, 2
  %v5_31e34 = shl i8 %v3_31e34, 7
  %v6_31e34 = or i8 %v4_31e34, %v5_31e34
  store i8 %v6_31e34, i8* %v2_31e34, align 1
  %v0_31e3b = load i32, i32* %ebp.global-to-local, align 4
  %v1_31e3b = add i32 %v0_31e3b, 20
  %v2_31e3b = inttoptr i32 %v1_31e3b to i32*
  %v3_31e3b = load i32, i32* %v2_31e3b, align 4
  %v2_31e3e = add i32 %v0_31e3b, -56
  %v3_31e3e = inttoptr i32 %v2_31e3e to i32*
  store i32 %v3_31e3b, i32* %v3_31e3e, align 4
  %v0_31e41 = load i32, i32* %ebp.global-to-local, align 4
  %v1_31e41 = add i32 %v0_31e41, 24
  %v2_31e41 = inttoptr i32 %v1_31e41 to i8*
  %v3_31e41 = load i8, i8* %v2_31e41, align 1
  %v3_31e45 = add i32 %v0_31e41, -57
  %v4_31e45 = inttoptr i32 %v3_31e45 to i8*
  store i8 %v3_31e41, i8* %v4_31e45, align 1
  %v0_31e48 = load i32, i32* %ebp.global-to-local, align 4
  %v1_31e48 = add i32 %v0_31e48, 28
  %v2_31e48 = inttoptr i32 %v1_31e48 to i8*
  %v3_31e48 = load i8, i8* %v2_31e48, align 1
  %v4_31e48 = zext i8 %v3_31e48 to i32
  ret i32 %v4_31e48

; uselistorder directives
  uselistorder i8 %v3_31e34, { 1, 0 }
}

define i32 @function_31e4c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_31e4c:
  %v0_31e4c = load i32, i32* @eax, align 8
  %v1_31e4c = trunc i32 %v0_31e4c to i8
  %v2_31e4c = load i32, i32* @ebp, align 4
  %v3_31e4c = add i32 %v2_31e4c, -58
  %v4_31e4c = inttoptr i32 %v3_31e4c to i8*
  store i8 %v1_31e4c, i8* %v4_31e4c, align 1
  %v0_31e4f = load i32, i32* @ebp, align 4
  %v1_31e4f = add i32 %v0_31e4f, 32
  %v2_31e4f = inttoptr i32 %v1_31e4f to i32*
  %v3_31e4f = load i32, i32* %v2_31e4f, align 4
  %v2_31e52 = add i32 %v0_31e4f, -64
  %v3_31e52 = inttoptr i32 %v2_31e52 to i32*
  store i32 %v3_31e4f, i32* %v3_31e52, align 4
  %v0_31e55 = load i32, i32* @ebp, align 4
  %v1_31e55 = add i32 %v0_31e55, 36
  %v2_31e55 = inttoptr i32 %v1_31e55 to i32*
  %v3_31e55 = load i32, i32* %v2_31e55, align 4
  %v2_31e58 = add i32 %v0_31e55, -68
  %v3_31e58 = inttoptr i32 %v2_31e58 to i32*
  store i32 %v3_31e55, i32* %v3_31e58, align 4
  %v0_31e5b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_31e61 = load i32, i32* @ebp, align 4
  %v2_31e61 = add i32 %v1_31e61, -28
  %v3_31e61 = inttoptr i32 %v2_31e61 to i32*
  store i32 %v0_31e5b, i32* %v3_31e61, align 4
  %v0_31e66 = load i32, i32* @ebp, align 4
  %v1_31e66 = add i32 %v0_31e66, -48
  %v2_31e66 = inttoptr i32 %v1_31e66 to i32*
  %v3_31e66 = load i32, i32* %v2_31e66, align 4
  store i32 %v3_31e66, i32* @0, align 4
  switch i32 %v3_31e66, label %dec_label_pc_322a9 [
    i32 0, label %dec_label_pc_31e7f
    i32 1, label %dec_label_pc_31eb5
    i32 2, label %dec_label_pc_31eeb
    i32 3, label %dec_label_pc_31f21
    i32 4, label %dec_label_pc_31f57
    i32 5, label %dec_label_pc_31f8d
    i32 6, label %dec_label_pc_31fc3
    i32 7, label %dec_label_pc_31ff9
    i32 8, label %dec_label_pc_3202f
    i32 9, label %dec_label_pc_32065
    i32 10, label %dec_label_pc_3209b
    i32 11, label %dec_label_pc_320d1
    i32 12, label %dec_label_pc_32107
    i32 13, label %dec_label_pc_3213d
    i32 14, label %dec_label_pc_32173
    i32 15, label %dec_label_pc_321a9
    i32 16, label %dec_label_pc_321df
    i32 17, label %dec_label_pc_32215
    i32 18, label %dec_label_pc_32249
    i32 19, label %dec_label_pc_3227a
  ]

dec_label_pc_31e7f:                               ; preds = %dec_label_pc_31e4c
  %v1_31e87 = add i32 %v0_31e66, -83
  %v2_31e87 = inttoptr i32 %v1_31e87 to i8*
  %v3_31e87 = load i8, i8* %v2_31e87, align 1
  %v1_31e97 = add i32 %v0_31e66, -56
  %v2_31e97 = inttoptr i32 %v1_31e97 to i32*
  %v3_31e97 = load i32, i32* %v2_31e97, align 4
  %v1_31e9e = add i32 %v0_31e66, -52
  %v2_31e9e = inttoptr i32 %v1_31e9e to i32*
  %v3_31e9e = load i32, i32* %v2_31e9e, align 4
  %v1_31ea5 = add i32 %v0_31e66, -44
  %v2_31ea5 = inttoptr i32 %v1_31ea5 to i32*
  %v3_31ea5 = load i32, i32* %v2_31ea5, align 4
  %v6_31eab = sext i8 %v3_31e87 to i32
  %v7_31eab = call i32 @unknown_65aa4(i32 %v3_31ea5, i32 %v3_31e9e, i32 %v3_31e97, i32 0, i32 %v6_31eab, i32 1)
  store i32 %v7_31eab, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_31eb5:                               ; preds = %dec_label_pc_31e4c
  %v1_31ebd = add i32 %v0_31e66, -82
  %v2_31ebd = inttoptr i32 %v1_31ebd to i8*
  %v3_31ebd = load i8, i8* %v2_31ebd, align 1
  %v1_31ecd = add i32 %v0_31e66, -56
  %v2_31ecd = inttoptr i32 %v1_31ecd to i32*
  %v3_31ecd = load i32, i32* %v2_31ecd, align 4
  %v1_31ed4 = add i32 %v0_31e66, -52
  %v2_31ed4 = inttoptr i32 %v1_31ed4 to i32*
  %v3_31ed4 = load i32, i32* %v2_31ed4, align 4
  %v1_31edb = add i32 %v0_31e66, -44
  %v2_31edb = inttoptr i32 %v1_31edb to i32*
  %v3_31edb = load i32, i32* %v2_31edb, align 4
  %v6_31ee1 = sext i8 %v3_31ebd to i32
  %v7_31ee1 = call i32 @unknown_65b11(i32 %v3_31edb, i32 %v3_31ed4, i32 %v3_31ecd, i32 0, i32 %v6_31ee1, i32 1)
  store i32 %v7_31ee1, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_31eeb:                               ; preds = %dec_label_pc_31e4c
  %v1_31ef3 = add i32 %v0_31e66, -81
  %v2_31ef3 = inttoptr i32 %v1_31ef3 to i8*
  %v3_31ef3 = load i8, i8* %v2_31ef3, align 1
  %v1_31f03 = add i32 %v0_31e66, -56
  %v2_31f03 = inttoptr i32 %v1_31f03 to i32*
  %v3_31f03 = load i32, i32* %v2_31f03, align 4
  %v1_31f0a = add i32 %v0_31e66, -52
  %v2_31f0a = inttoptr i32 %v1_31f0a to i32*
  %v3_31f0a = load i32, i32* %v2_31f0a, align 4
  %v1_31f11 = add i32 %v0_31e66, -44
  %v2_31f11 = inttoptr i32 %v1_31f11 to i32*
  %v3_31f11 = load i32, i32* %v2_31f11, align 4
  %v6_31f17 = sext i8 %v3_31ef3 to i32
  %v7_31f17 = call i32 @unknown_65b7e(i32 %v3_31f11, i32 %v3_31f0a, i32 %v3_31f03, i32 0, i32 %v6_31f17, i32 1)
  store i32 %v7_31f17, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_31f21:                               ; preds = %dec_label_pc_31e4c
  %v1_31f29 = add i32 %v0_31e66, -80
  %v2_31f29 = inttoptr i32 %v1_31f29 to i8*
  %v3_31f29 = load i8, i8* %v2_31f29, align 1
  %v1_31f39 = add i32 %v0_31e66, -56
  %v2_31f39 = inttoptr i32 %v1_31f39 to i32*
  %v3_31f39 = load i32, i32* %v2_31f39, align 4
  %v1_31f40 = add i32 %v0_31e66, -52
  %v2_31f40 = inttoptr i32 %v1_31f40 to i32*
  %v3_31f40 = load i32, i32* %v2_31f40, align 4
  %v1_31f47 = add i32 %v0_31e66, -44
  %v2_31f47 = inttoptr i32 %v1_31f47 to i32*
  %v3_31f47 = load i32, i32* %v2_31f47, align 4
  %v6_31f4d = sext i8 %v3_31f29 to i32
  %v7_31f4d = call i32 @unknown_65beb(i32 %v3_31f47, i32 %v3_31f40, i32 %v3_31f39, i32 0, i32 %v6_31f4d, i32 1)
  store i32 %v7_31f4d, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_31f57:                               ; preds = %dec_label_pc_31e4c
  %v1_31f5f = add i32 %v0_31e66, -79
  %v2_31f5f = inttoptr i32 %v1_31f5f to i8*
  %v3_31f5f = load i8, i8* %v2_31f5f, align 1
  %v1_31f6f = add i32 %v0_31e66, -56
  %v2_31f6f = inttoptr i32 %v1_31f6f to i32*
  %v3_31f6f = load i32, i32* %v2_31f6f, align 4
  %v1_31f76 = add i32 %v0_31e66, -52
  %v2_31f76 = inttoptr i32 %v1_31f76 to i32*
  %v3_31f76 = load i32, i32* %v2_31f76, align 4
  %v1_31f7d = add i32 %v0_31e66, -44
  %v2_31f7d = inttoptr i32 %v1_31f7d to i32*
  %v3_31f7d = load i32, i32* %v2_31f7d, align 4
  %v6_31f83 = sext i8 %v3_31f5f to i32
  %v7_31f83 = call i32 @unknown_65c58(i32 %v3_31f7d, i32 %v3_31f76, i32 %v3_31f6f, i32 0, i32 %v6_31f83, i32 1)
  store i32 %v7_31f83, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_31f8d:                               ; preds = %dec_label_pc_31e4c
  %v1_31f95 = add i32 %v0_31e66, -78
  %v2_31f95 = inttoptr i32 %v1_31f95 to i8*
  %v3_31f95 = load i8, i8* %v2_31f95, align 1
  %v1_31fa5 = add i32 %v0_31e66, -56
  %v2_31fa5 = inttoptr i32 %v1_31fa5 to i32*
  %v3_31fa5 = load i32, i32* %v2_31fa5, align 4
  %v1_31fac = add i32 %v0_31e66, -52
  %v2_31fac = inttoptr i32 %v1_31fac to i32*
  %v3_31fac = load i32, i32* %v2_31fac, align 4
  %v1_31fb3 = add i32 %v0_31e66, -44
  %v2_31fb3 = inttoptr i32 %v1_31fb3 to i32*
  %v3_31fb3 = load i32, i32* %v2_31fb3, align 4
  %v6_31fb9 = sext i8 %v3_31f95 to i32
  %v7_31fb9 = call i32 @unknown_65cc5(i32 %v3_31fb3, i32 %v3_31fac, i32 %v3_31fa5, i32 0, i32 %v6_31fb9, i32 1)
  store i32 %v7_31fb9, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_31fc3:                               ; preds = %dec_label_pc_31e4c
  %v1_31fcb = add i32 %v0_31e66, -77
  %v2_31fcb = inttoptr i32 %v1_31fcb to i8*
  %v3_31fcb = load i8, i8* %v2_31fcb, align 1
  %v1_31fdb = add i32 %v0_31e66, -56
  %v2_31fdb = inttoptr i32 %v1_31fdb to i32*
  %v3_31fdb = load i32, i32* %v2_31fdb, align 4
  %v1_31fe2 = add i32 %v0_31e66, -52
  %v2_31fe2 = inttoptr i32 %v1_31fe2 to i32*
  %v3_31fe2 = load i32, i32* %v2_31fe2, align 4
  %v1_31fe9 = add i32 %v0_31e66, -44
  %v2_31fe9 = inttoptr i32 %v1_31fe9 to i32*
  %v3_31fe9 = load i32, i32* %v2_31fe9, align 4
  %v6_31fef = sext i8 %v3_31fcb to i32
  %v7_31fef = call i32 @unknown_65d32(i32 %v3_31fe9, i32 %v3_31fe2, i32 %v3_31fdb, i32 0, i32 %v6_31fef, i32 1)
  store i32 %v7_31fef, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_31ff9:                               ; preds = %dec_label_pc_31e4c
  %v1_32001 = add i32 %v0_31e66, -76
  %v2_32001 = inttoptr i32 %v1_32001 to i8*
  %v3_32001 = load i8, i8* %v2_32001, align 1
  %v1_32011 = add i32 %v0_31e66, -56
  %v2_32011 = inttoptr i32 %v1_32011 to i32*
  %v3_32011 = load i32, i32* %v2_32011, align 4
  %v1_32018 = add i32 %v0_31e66, -52
  %v2_32018 = inttoptr i32 %v1_32018 to i32*
  %v3_32018 = load i32, i32* %v2_32018, align 4
  %v1_3201f = add i32 %v0_31e66, -44
  %v2_3201f = inttoptr i32 %v1_3201f to i32*
  %v3_3201f = load i32, i32* %v2_3201f, align 4
  %v6_32025 = sext i8 %v3_32001 to i32
  %v7_32025 = call i32 @unknown_65d32(i32 %v3_3201f, i32 %v3_32018, i32 %v3_32011, i32 0, i32 %v6_32025, i32 1)
  store i32 %v7_32025, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_3202f:                               ; preds = %dec_label_pc_31e4c
  %v1_32037 = add i32 %v0_31e66, -75
  %v2_32037 = inttoptr i32 %v1_32037 to i8*
  %v3_32037 = load i8, i8* %v2_32037, align 1
  %v1_32047 = add i32 %v0_31e66, -56
  %v2_32047 = inttoptr i32 %v1_32047 to i32*
  %v3_32047 = load i32, i32* %v2_32047, align 4
  %v1_3204e = add i32 %v0_31e66, -52
  %v2_3204e = inttoptr i32 %v1_3204e to i32*
  %v3_3204e = load i32, i32* %v2_3204e, align 4
  %v1_32055 = add i32 %v0_31e66, -44
  %v2_32055 = inttoptr i32 %v1_32055 to i32*
  %v3_32055 = load i32, i32* %v2_32055, align 4
  %v6_3205b = sext i8 %v3_32037 to i32
  %v7_3205b = call i32 @unknown_65d32(i32 %v3_32055, i32 %v3_3204e, i32 %v3_32047, i32 0, i32 %v6_3205b, i32 1)
  store i32 %v7_3205b, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_32065:                               ; preds = %dec_label_pc_31e4c
  %v1_3206d = add i32 %v0_31e66, -74
  %v2_3206d = inttoptr i32 %v1_3206d to i8*
  %v3_3206d = load i8, i8* %v2_3206d, align 1
  %v1_3207d = add i32 %v0_31e66, -56
  %v2_3207d = inttoptr i32 %v1_3207d to i32*
  %v3_3207d = load i32, i32* %v2_3207d, align 4
  %v1_32084 = add i32 %v0_31e66, -52
  %v2_32084 = inttoptr i32 %v1_32084 to i32*
  %v3_32084 = load i32, i32* %v2_32084, align 4
  %v1_3208b = add i32 %v0_31e66, -44
  %v2_3208b = inttoptr i32 %v1_3208b to i32*
  %v3_3208b = load i32, i32* %v2_3208b, align 4
  %v6_32091 = sext i8 %v3_3206d to i32
  %v7_32091 = call i32 @unknown_65d32(i32 %v3_3208b, i32 %v3_32084, i32 %v3_3207d, i32 0, i32 %v6_32091, i32 1)
  store i32 %v7_32091, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_3209b:                               ; preds = %dec_label_pc_31e4c
  %v1_320a3 = add i32 %v0_31e66, -73
  %v2_320a3 = inttoptr i32 %v1_320a3 to i8*
  %v3_320a3 = load i8, i8* %v2_320a3, align 1
  %v1_320b3 = add i32 %v0_31e66, -56
  %v2_320b3 = inttoptr i32 %v1_320b3 to i32*
  %v3_320b3 = load i32, i32* %v2_320b3, align 4
  %v1_320ba = add i32 %v0_31e66, -52
  %v2_320ba = inttoptr i32 %v1_320ba to i32*
  %v3_320ba = load i32, i32* %v2_320ba, align 4
  %v1_320c1 = add i32 %v0_31e66, -44
  %v2_320c1 = inttoptr i32 %v1_320c1 to i32*
  %v3_320c1 = load i32, i32* %v2_320c1, align 4
  %v6_320c7 = sext i8 %v3_320a3 to i32
  %v7_320c7 = call i32 @unknown_65d32(i32 %v3_320c1, i32 %v3_320ba, i32 %v3_320b3, i32 0, i32 %v6_320c7, i32 1)
  store i32 %v7_320c7, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_320d1:                               ; preds = %dec_label_pc_31e4c
  %v1_320d9 = add i32 %v0_31e66, -72
  %v2_320d9 = inttoptr i32 %v1_320d9 to i8*
  %v3_320d9 = load i8, i8* %v2_320d9, align 1
  %v1_320e9 = add i32 %v0_31e66, -56
  %v2_320e9 = inttoptr i32 %v1_320e9 to i32*
  %v3_320e9 = load i32, i32* %v2_320e9, align 4
  %v1_320f0 = add i32 %v0_31e66, -52
  %v2_320f0 = inttoptr i32 %v1_320f0 to i32*
  %v3_320f0 = load i32, i32* %v2_320f0, align 4
  %v1_320f7 = add i32 %v0_31e66, -44
  %v2_320f7 = inttoptr i32 %v1_320f7 to i32*
  %v3_320f7 = load i32, i32* %v2_320f7, align 4
  %v6_320fd = sext i8 %v3_320d9 to i32
  %v7_320fd = call i32 @unknown_65d32(i32 %v3_320f7, i32 %v3_320f0, i32 %v3_320e9, i32 0, i32 %v6_320fd, i32 1)
  store i32 %v7_320fd, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_32107:                               ; preds = %dec_label_pc_31e4c
  %v1_3210f = add i32 %v0_31e66, -71
  %v2_3210f = inttoptr i32 %v1_3210f to i8*
  %v3_3210f = load i8, i8* %v2_3210f, align 1
  %v1_3211f = add i32 %v0_31e66, -56
  %v2_3211f = inttoptr i32 %v1_3211f to i32*
  %v3_3211f = load i32, i32* %v2_3211f, align 4
  %v1_32126 = add i32 %v0_31e66, -52
  %v2_32126 = inttoptr i32 %v1_32126 to i32*
  %v3_32126 = load i32, i32* %v2_32126, align 4
  %v1_3212d = add i32 %v0_31e66, -44
  %v2_3212d = inttoptr i32 %v1_3212d to i32*
  %v3_3212d = load i32, i32* %v2_3212d, align 4
  %v6_32133 = sext i8 %v3_3210f to i32
  %v7_32133 = call i32 @unknown_65d32(i32 %v3_3212d, i32 %v3_32126, i32 %v3_3211f, i32 0, i32 %v6_32133, i32 1)
  store i32 %v7_32133, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_3213d:                               ; preds = %dec_label_pc_31e4c
  %v1_32145 = add i32 %v0_31e66, -70
  %v2_32145 = inttoptr i32 %v1_32145 to i8*
  %v3_32145 = load i8, i8* %v2_32145, align 1
  %v1_32155 = add i32 %v0_31e66, -56
  %v2_32155 = inttoptr i32 %v1_32155 to i32*
  %v3_32155 = load i32, i32* %v2_32155, align 4
  %v1_3215c = add i32 %v0_31e66, -52
  %v2_3215c = inttoptr i32 %v1_3215c to i32*
  %v3_3215c = load i32, i32* %v2_3215c, align 4
  %v1_32163 = add i32 %v0_31e66, -44
  %v2_32163 = inttoptr i32 %v1_32163 to i32*
  %v3_32163 = load i32, i32* %v2_32163, align 4
  %v6_32169 = sext i8 %v3_32145 to i32
  %v7_32169 = call i32 @unknown_65d32(i32 %v3_32163, i32 %v3_3215c, i32 %v3_32155, i32 0, i32 %v6_32169, i32 1)
  store i32 %v7_32169, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_32173:                               ; preds = %dec_label_pc_31e4c
  %v1_3217b = add i32 %v0_31e66, -69
  %v2_3217b = inttoptr i32 %v1_3217b to i8*
  %v3_3217b = load i8, i8* %v2_3217b, align 1
  %v1_3218b = add i32 %v0_31e66, -56
  %v2_3218b = inttoptr i32 %v1_3218b to i32*
  %v3_3218b = load i32, i32* %v2_3218b, align 4
  %v1_32192 = add i32 %v0_31e66, -52
  %v2_32192 = inttoptr i32 %v1_32192 to i32*
  %v3_32192 = load i32, i32* %v2_32192, align 4
  %v1_32199 = add i32 %v0_31e66, -44
  %v2_32199 = inttoptr i32 %v1_32199 to i32*
  %v3_32199 = load i32, i32* %v2_32199, align 4
  %v6_3219f = sext i8 %v3_3217b to i32
  %v7_3219f = call i32 @unknown_65d32(i32 %v3_32199, i32 %v3_32192, i32 %v3_3218b, i32 0, i32 %v6_3219f, i32 1)
  store i32 %v7_3219f, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_321a9:                               ; preds = %dec_label_pc_31e4c
  %v1_321b1 = add i32 %v0_31e66, -60
  %v2_321b1 = inttoptr i32 %v1_321b1 to i8*
  %v3_321b1 = load i8, i8* %v2_321b1, align 1
  %v1_321c1 = add i32 %v0_31e66, -56
  %v2_321c1 = inttoptr i32 %v1_321c1 to i32*
  %v3_321c1 = load i32, i32* %v2_321c1, align 4
  %v1_321c8 = add i32 %v0_31e66, -52
  %v2_321c8 = inttoptr i32 %v1_321c8 to i32*
  %v3_321c8 = load i32, i32* %v2_321c8, align 4
  %v1_321cf = add i32 %v0_31e66, -44
  %v2_321cf = inttoptr i32 %v1_321cf to i32*
  %v3_321cf = load i32, i32* %v2_321cf, align 4
  %v6_321d5 = sext i8 %v3_321b1 to i32
  %v7_321d5 = call i32 @unknown_65d32(i32 %v3_321cf, i32 %v3_321c8, i32 %v3_321c1, i32 0, i32 %v6_321d5, i32 1)
  store i32 %v7_321d5, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_321df:                               ; preds = %dec_label_pc_31e4c
  %v1_321e7 = add i32 %v0_31e66, -59
  %v2_321e7 = inttoptr i32 %v1_321e7 to i8*
  %v3_321e7 = load i8, i8* %v2_321e7, align 1
  %v1_321f7 = add i32 %v0_31e66, -56
  %v2_321f7 = inttoptr i32 %v1_321f7 to i32*
  %v3_321f7 = load i32, i32* %v2_321f7, align 4
  %v1_321fe = add i32 %v0_31e66, -52
  %v2_321fe = inttoptr i32 %v1_321fe to i32*
  %v3_321fe = load i32, i32* %v2_321fe, align 4
  %v1_32205 = add i32 %v0_31e66, -44
  %v2_32205 = inttoptr i32 %v1_32205 to i32*
  %v3_32205 = load i32, i32* %v2_32205, align 4
  %v6_3220b = sext i8 %v3_321e7 to i32
  %v7_3220b = call i32 @unknown_65d32(i32 %v3_32205, i32 %v3_321fe, i32 %v3_321f7, i32 0, i32 %v6_3220b, i32 1)
  store i32 %v7_3220b, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_32215:                               ; preds = %dec_label_pc_31e4c
  %v0_3221d = load i32, i32* @edi, align 4
  %v1_3222b = add i32 %v0_31e66, -56
  %v2_3222b = inttoptr i32 %v1_3222b to i32*
  %v3_3222b = load i32, i32* %v2_3222b, align 4
  %v1_32232 = add i32 %v0_31e66, -52
  %v2_32232 = inttoptr i32 %v1_32232 to i32*
  %v3_32232 = load i32, i32* %v2_32232, align 4
  %v1_32239 = add i32 %v0_31e66, -44
  %v2_32239 = inttoptr i32 %v1_32239 to i32*
  %v3_32239 = load i32, i32* %v2_32239, align 4
  %sext2 = mul i32 %v0_3221d, 16777216
  %v6_3223f = sdiv i32 %sext2, 16777216
  %v7_3223f = call i32 @unknown_65d32(i32 %v3_32239, i32 %v3_32232, i32 %v3_3222b, i32 0, i32 %v6_3223f, i32 1)
  store i32 %v7_3223f, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_32249:                               ; preds = %dec_label_pc_31e4c
  %v0_32251 = load i32, i32* @esi, align 4
  %v1_3225f = add i32 %v0_31e66, -56
  %v2_3225f = inttoptr i32 %v1_3225f to i32*
  %v3_3225f = load i32, i32* %v2_3225f, align 4
  %v1_32266 = add i32 %v0_31e66, -52
  %v2_32266 = inttoptr i32 %v1_32266 to i32*
  %v3_32266 = load i32, i32* %v2_32266, align 4
  %v1_3226d = add i32 %v0_31e66, -44
  %v2_3226d = inttoptr i32 %v1_3226d to i32*
  %v3_3226d = load i32, i32* %v2_3226d, align 4
  %sext1 = mul i32 %v0_32251, 16777216
  %v6_32273 = sdiv i32 %sext1, 16777216
  %v7_32273 = call i32 @unknown_65d32(i32 %v3_3226d, i32 %v3_32266, i32 %v3_3225f, i32 0, i32 %v6_32273, i32 1)
  store i32 %v7_32273, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_3227a:                               ; preds = %dec_label_pc_31e4c
  %v0_32282 = load i32, i32* @ebx, align 4
  %v1_3228e = add i32 %v0_31e66, -56
  %v2_3228e = inttoptr i32 %v1_3228e to i32*
  %v3_3228e = load i32, i32* %v2_3228e, align 4
  %v1_32295 = add i32 %v0_31e66, -52
  %v2_32295 = inttoptr i32 %v1_32295 to i32*
  %v3_32295 = load i32, i32* %v2_32295, align 4
  %v1_3229c = add i32 %v0_31e66, -44
  %v2_3229c = inttoptr i32 %v1_3229c to i32*
  %v3_3229c = load i32, i32* %v2_3229c, align 4
  %sext = mul i32 %v0_32282, 16777216
  %v6_322a2 = sdiv i32 %sext, 16777216
  %v7_322a2 = call i32 @unknown_65d32(i32 %v3_3229c, i32 %v3_32295, i32 %v3_3228e, i32 0, i32 %v6_322a2, i32 1)
  store i32 %v7_322a2, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_322a9:                               ; preds = %dec_label_pc_31e4c
  %v0_322b9 = load i32, i32* @ecx, align 8
  %v0_322bd = load i32, i32* @edx, align 4
  %v1_322c1 = add i32 %v0_31e66, -56
  %v2_322c1 = inttoptr i32 %v1_322c1 to i32*
  %v3_322c1 = load i32, i32* %v2_322c1, align 4
  %v1_322c8 = add i32 %v0_31e66, -52
  %v2_322c8 = inttoptr i32 %v1_322c8 to i32*
  %v3_322c8 = load i32, i32* %v2_322c8, align 4
  %v3_322cf = load i32, i32* %v2_31e66, align 4
  %v1_322d6 = add i32 %v0_31e66, -44
  %v2_322d6 = inttoptr i32 %v1_322d6 to i32*
  %v3_322d6 = load i32, i32* %v2_322d6, align 4
  %sext3 = mul i32 %v0_322bd, 16777216
  %v8_322dc = sdiv i32 %sext3, 16777216
  %v9_322dc = call i32 @unknown_65d8c(i32 %v3_322d6, i32 %v3_322cf, i32 %v3_322c8, i32 %v3_322c1, i32 %v8_322dc, i32 %v0_322b9, i32 0, i32 0)
  store i32 %v9_322dc, i32* @eax, align 8
  br label %dec_label_pc_322e1

dec_label_pc_322e1:                               ; preds = %dec_label_pc_3227a, %dec_label_pc_32249, %dec_label_pc_32215, %dec_label_pc_321df, %dec_label_pc_321a9, %dec_label_pc_32173, %dec_label_pc_3213d, %dec_label_pc_32107, %dec_label_pc_320d1, %dec_label_pc_3209b, %dec_label_pc_32065, %dec_label_pc_3202f, %dec_label_pc_31ff9, %dec_label_pc_31fc3, %dec_label_pc_31f8d, %dec_label_pc_31f57, %dec_label_pc_31f21, %dec_label_pc_31eeb, %dec_label_pc_31eb5, %dec_label_pc_31e7f, %dec_label_pc_322a9
  %v2_322eb5 = phi i32 [ %v7_322a2, %dec_label_pc_3227a ], [ %v7_32273, %dec_label_pc_32249 ], [ %v7_3223f, %dec_label_pc_32215 ], [ %v7_3220b, %dec_label_pc_321df ], [ %v7_321d5, %dec_label_pc_321a9 ], [ %v7_3219f, %dec_label_pc_32173 ], [ %v7_32169, %dec_label_pc_3213d ], [ %v7_32133, %dec_label_pc_32107 ], [ %v7_320fd, %dec_label_pc_320d1 ], [ %v7_320c7, %dec_label_pc_3209b ], [ %v7_32091, %dec_label_pc_32065 ], [ %v7_3205b, %dec_label_pc_3202f ], [ %v7_32025, %dec_label_pc_31ff9 ], [ %v7_31fef, %dec_label_pc_31fc3 ], [ %v7_31fb9, %dec_label_pc_31f8d ], [ %v7_31f83, %dec_label_pc_31f57 ], [ %v7_31f4d, %dec_label_pc_31f21 ], [ %v7_31f17, %dec_label_pc_31eeb ], [ %v7_31ee1, %dec_label_pc_31eb5 ], [ %v7_31eab, %dec_label_pc_31e7f ], [ %v9_322dc, %dec_label_pc_322a9 ]
  %v0_322e1 = load i32, i32* @ebp, align 4
  %v1_322e1 = add i32 %v0_322e1, -28
  %v2_322e1 = inttoptr i32 %v1_322e1 to i32*
  %v3_322e1 = load i32, i32* %v2_322e1, align 4
  %v1_322e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_322e4 = icmp eq i32 %v1_322e4, %v3_322e1
  br i1 %v3_322e4, label %bb, label %dec_label_pc_322ed

bb:                                               ; preds = %dec_label_pc_322e1
  %v1_322eb = call i32 @function_322f2()
  br label %dec_label_pc_322ed

dec_label_pc_322ed:                               ; preds = %bb, %dec_label_pc_322e1
  %v2_322eb = phi i32 [ %v1_322eb, %bb ], [ %v2_322eb5, %dec_label_pc_322e1 ]
  ret i32 %v2_322eb

; uselistorder directives
  uselistorder i32 %v0_31e66, { 0, 2, 1, 77, 79, 78, 74, 76, 75, 71, 73, 72, 67, 69, 70, 68, 63, 65, 66, 64, 59, 61, 62, 60, 55, 57, 58, 56, 51, 53, 54, 52, 47, 49, 50, 48, 43, 45, 46, 44, 39, 41, 42, 40, 35, 37, 38, 36, 31, 33, 34, 32, 27, 29, 30, 28, 23, 25, 26, 24, 19, 21, 22, 20, 15, 17, 18, 16, 11, 13, 14, 12, 7, 9, 10, 8, 3, 5, 6, 4, 80 }
  uselistorder i32 -73, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @unknown_65d32, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -77, { 1, 0 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 10, { 1, 0 }
  uselistorder i32 6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_322e1, { 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
}

define i32 @function_322f2() local_unnamed_addr {
dec_label_pc_322f2:
  %v0_322f9 = load i32, i32* @eax, align 8
  ret i32 %v0_322f9
}

define i32 @function_3230c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3230c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E25convert_construct_variantISJ_EEvRT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3234c:
  ret i32 %arg2
}

define i32 @function_32378(i32 %arg1) local_unnamed_addr {
dec_label_pc_32378:
  %v0_32378 = load i32, i32* @eax, align 8
  %v0_3237c = load i32, i32* @ebp, align 4
  %v1_3237c = add i32 %v0_3237c, -28
  %v2_3237c = inttoptr i32 %v1_3237c to i32*
  %v3_3237c = load i32, i32* %v2_3237c, align 4
  %v2_32382 = call i32 @unknown_66356(i32 %v3_3237c, i32 %v0_32378)
  %v0_32387 = load i32, i32* @ebp, align 4
  %v1_32387 = add i32 %v0_32387, -12
  %v2_32387 = inttoptr i32 %v1_32387 to i32*
  %v3_32387 = load i32, i32* %v2_32387, align 4
  %v1_3238a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3238a = xor i32 %v1_3238a, %v3_32387
  %v3_3238a = icmp eq i32 %v2_3238a, 0
  store i32 %v2_3238a, i32* @eax, align 8
  br i1 %v3_3238a, label %bb, label %dec_label_pc_32393

bb:                                               ; preds = %dec_label_pc_32378
  %v1_32391 = call i32 @function_32398()
  br label %dec_label_pc_32393

dec_label_pc_32393:                               ; preds = %bb, %dec_label_pc_32378
  %v2_32391 = phi i32 [ %v1_32391, %bb ], [ %v2_3238a, %dec_label_pc_32378 ]
  ret i32 %v2_32391
}

define i32 @function_32398() local_unnamed_addr {
dec_label_pc_32398:
  %v0_32399 = load i32, i32* @eax, align 8
  ret i32 %v0_32399
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSH_14assign_storageEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3239a:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v1_323bb = add i32 %tmp105, 4
  store i32 %v1_323bb, i32* %stack_var_-60, align 4
  %v1_323c1 = call i32 @unknown_548a4(i32 %v1_323bb)
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_323ce = call i32 @unknown_569a4(i32 %tmp105)
  %v2_323d8 = load i32, i32* %arg1, align 4
  store i32 %v2_323d8, i32* %stack_var_-60, align 4
  %v4_323ec = call i32 @unknown_66448(i32 %v2_323d8, i32 %v1_323ce, i32 %arg2, i32 %v1_323c1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_323fd

bb:                                               ; preds = %dec_label_pc_3239a
  %v1_323fb = load i32, i32* %stack_var_-60, align 4
  %v2_323fb = call i32 @function_32402(i32 %v1_323fb)
  br label %dec_label_pc_323fd

dec_label_pc_323fd:                               ; preds = %bb, %dec_label_pc_3239a
  %v3_323fb = phi i32 [ %v2_323fb, %bb ], [ 0, %dec_label_pc_3239a ]
  ret i32 %v3_323fb

; uselistorder directives
  uselistorder i32 %v2_323d8, { 1, 0 }
  uselistorder i32 %tmp105, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_32402, { 1, 0 }
}

define i32 @function_32402(i32 %arg1) local_unnamed_addr {
dec_label_pc_32402:
  %v0_32407 = load i32, i32* @eax, align 8
  ret i32 %v0_32407
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assignerC1ERSJ_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32408:
  ret i32 %arg1
}

define i32 @function_3242f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3242f:
  %v0_32431 = call i32 @unknown_48360()
  %v0_32436 = load i32, i32* @ebp, align 4
  %v1_32436 = add i32 %v0_32436, -28
  %v2_32436 = inttoptr i32 %v1_32436 to i32*
  %v3_32436 = load i32, i32* %v2_32436, align 4
  %v1_32439 = add i32 %v0_32436, -32
  %v2_32439 = inttoptr i32 %v1_32439 to i32*
  %v3_32439 = load i32, i32* %v2_32439, align 4
  %v2_3243c = inttoptr i32 %v3_32436 to i32*
  store i32 %v3_32439, i32* %v2_3243c, align 4
  %v0_3243e = load i32, i32* @ebp, align 4
  %v1_3243e = add i32 %v0_3243e, -28
  %v2_3243e = inttoptr i32 %v1_3243e to i32*
  %v3_3243e = load i32, i32* %v2_3243e, align 4
  %v1_32441 = add i32 %v0_3243e, -36
  %v2_32441 = inttoptr i32 %v1_32441 to i32*
  %v3_32441 = load i32, i32* %v2_32441, align 4
  %v2_32444 = add i32 %v3_3243e, 4
  %v3_32444 = inttoptr i32 %v2_32444 to i32*
  store i32 %v3_32441, i32* %v3_32444, align 4
  %v0_32447 = load i32, i32* @ebp, align 4
  %v1_32447 = add i32 %v0_32447, -12
  %v2_32447 = inttoptr i32 %v1_32447 to i32*
  %v3_32447 = load i32, i32* %v2_32447, align 4
  %v1_3244a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3244a = xor i32 %v1_3244a, %v3_32447
  %v3_3244a = icmp eq i32 %v2_3244a, 0
  store i32 %v2_3244a, i32* @eax, align 8
  br i1 %v3_3244a, label %bb, label %dec_label_pc_32453

bb:                                               ; preds = %dec_label_pc_3242f
  %v1_32451 = call i32 @function_32458()
  br label %dec_label_pc_32453

dec_label_pc_32453:                               ; preds = %bb, %dec_label_pc_3242f
  %v2_32451 = phi i32 [ %v1_32451, %bb ], [ %v2_3244a, %dec_label_pc_3242f ]
  ret i32 %v2_32451
}

define i32 @function_32458() local_unnamed_addr {
dec_label_pc_32458:
  %v0_32459 = load i32, i32* @eax, align 8
  ret i32 %v0_32459
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSJ_8assignerEEENT_11result_typeERSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3245a:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_3247b = add i32 %tmp105, 4
  %v1_32481 = call i32 @unknown_5a7e4(i32 %v1_3247b)
  %v1_3248e = call i32 @unknown_56a64(i32 %tmp105)
  %v2_32498 = load i32, i32* %arg1, align 4
  %v4_324ac = call i32 @unknown_6657c(i32 %v2_32498, i32 %v1_3248e, i32 %arg2, i32 %v1_32481)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_324bd

bb:                                               ; preds = %dec_label_pc_3245a
  %v1_324bb = call i32 @function_324c2()
  br label %dec_label_pc_324bd

dec_label_pc_324bd:                               ; preds = %bb, %dec_label_pc_3245a
  %v2_324bb = phi i32 [ %v1_324bb, %bb ], [ 0, %dec_label_pc_3245a ]
  ret i32 %v2_324bb

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_324c2() local_unnamed_addr {
dec_label_pc_324c2:
  %v0_324c7 = load i32, i32* @eax, align 8
  ret i32 %v0_324c7
}

define i32 @_ZSt4copyIPP14CBlockTemplateS2_ET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_324c8:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_324f2 = call i32 @unknown_5cbad(i32 %arg2)
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v1_324ff = call i32 @unknown_5cbad(i32 %arg1)
  store i32 %v1_324ff, i32* %stack_var_-60, align 4
  %v3_32512 = call i32 @unknown_6665e(i32 %v1_324ff, i32 %v1_324f2, i32 %arg3)
  store i32 %v3_32512, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_32523

bb:                                               ; preds = %dec_label_pc_324c8
  %v1_32521 = load i32, i32* %stack_var_-60, align 4
  %v2_32521 = call i32 @function_32528(i32 %v1_32521)
  br label %dec_label_pc_32523

dec_label_pc_32523:                               ; preds = %bb, %dec_label_pc_324c8
  %v3_32521 = phi i32 [ %v2_32521, %bb ], [ %v3_32512, %dec_label_pc_324c8 ]
  ret i32 %v3_32521

; uselistorder directives
  uselistorder i32 (i32)* @function_32528, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5cbad, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_32528(i32 %arg1) local_unnamed_addr {
dec_label_pc_32528:
  %v0_3252d = load i32, i32* @eax, align 8
  ret i32 %v0_3252d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256S2_IP6CBlock7CScriptEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3252e:
  %v1_32557 = call i32 @unknown_66736(i32 %arg1)
  %v10_3255c = icmp ult i32 %v1_32557, %arg2
  %v1_3255f = zext i1 %v10_3255c to i32
  %v3_3255f = and i32 %v1_32557, -256
  %v4_3255f = or i32 %v1_3255f, %v3_3255f
  %v5_32562 = icmp eq i1 %v10_3255c, false
  br i1 %v5_32562, label %bb, label %dec_label_pc_32566

bb:                                               ; preds = %dec_label_pc_3252e
  %v1_32564 = call i32 @function_3256b()
  br label %dec_label_pc_32566

dec_label_pc_32566:                               ; preds = %bb, %dec_label_pc_3252e
  %v2_32564 = phi i32 [ %v1_32564, %bb ], [ %v4_3255f, %dec_label_pc_3252e ]
  ret i32 %v2_32564

; uselistorder directives
  uselistorder i1 %v10_3255c, { 1, 0 }
}

define i32 @function_3256b() local_unnamed_addr {
dec_label_pc_3256b:
  %v0_3256b = load i32, i32* @ebp, align 4
  %v1_3256b = add i32 %v0_3256b, -32
  %v2_3256b = inttoptr i32 %v1_3256b to i32*
  %v3_3256b = load i32, i32* %v2_3256b, align 4
  %v2_3256e = mul i32 %v3_3256b, 64
  ret i32 %v2_3256e
}

define i32 @function_32589() local_unnamed_addr {
dec_label_pc_32589:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32589 = load i32, i32* %ecx.global-to-local, align 8
  %v1_32589 = add i32 %v0_32589, -1
  store i32 %v1_32589, i32* %ecx.global-to-local, align 8
  %v0_3258b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3258b
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_3258c:
  %eax.global-to-local = alloca i32, align 4
  %v17_3258f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3258f
}

define i32 @function_32594(i32 %arg1) local_unnamed_addr {
dec_label_pc_32594:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_32594 = load i32, i32* @ecx, align 8
  %v1_32594 = add i32 %v0_32594, 1166795845
  %v2_32594 = inttoptr i32 %v1_32594 to i8*
  %v3_32594 = load i8, i8* %v2_32594, align 1
  %v5_32594 = trunc i32 %v0_32594 to i8
  %v6_32594 = or i8 %v3_32594, %v5_32594
  store i8 %v6_32594, i8* %v2_32594, align 1
  %v0_3259a = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3259a = or i32 %v0_3259a, 137
  store i32 %v11_3259a, i32* %eax.global-to-local, align 8
  %v0_3259c = load i32, i32* @ebp, align 4
  %v0_3259d = load i32, i32* @ecx, align 8
  %v1_3259d = add i32 %v0_3259d, -1
  store i32 %v1_3259d, i32* %ecx.global-to-local, align 8
  %v1_3259f = add i32 %v0_3259c, 2
  store i32 %v1_3259f, i32* %ebp.global-to-local, align 4
  %v1_325a0 = add i32 %v0_3259d, 1166793796
  %v2_325a0 = inttoptr i32 %v1_325a0 to i8*
  %v3_325a0 = load i8, i8* %v2_325a0, align 1
  %v5_325a0 = trunc i32 %v1_3259d to i8
  %v8_325a0 = add i8 %v3_325a0, %v5_325a0
  %v28_325a0 = icmp ult i8 %v8_325a0, %v3_325a0
  store i1 %v28_325a0, i1* %cf.global-to-local, align 1
  store i8 %v8_325a0, i8* %v2_325a0, align 1
  %v0_325a6 = load i32, i32* %eax.global-to-local, align 8
  %v1_325a6 = trunc i32 %v0_325a6 to i8
  %v2_325a6 = load i1, i1* %cf.global-to-local, align 1
  %v3_325a6 = zext i1 %v2_325a6 to i8
  %v4_325a6 = add i8 %v1_325a6, -119
  %v5_325a6 = add i8 %v4_325a6, %v3_325a6
  %v22_325a6 = icmp ule i8 %v5_325a6, %v1_325a6
  %v23_325a6 = icmp ugt i8 %v1_325a6, 118
  %v24_325a6 = select i1 %v2_325a6, i1 %v22_325a6, i1 %v23_325a6
  store i1 %v24_325a6, i1* %cf.global-to-local, align 1
  %v25_325a6 = zext i8 %v5_325a6 to i32
  %v27_325a6 = and i32 %v0_325a6, -256
  %v28_325a6 = or i32 %v25_325a6, %v27_325a6
  store i32 %v28_325a6, i32* %eax.global-to-local, align 8
  %v0_325a8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_325a8 = add i32 %v0_325a8, 1
  store i32 %v1_325a8, i32* %ebp.global-to-local, align 4
  %v0_325ab = load i32, i32* @edx, align 4
  %v1_325ab = and i32 %v0_325ab, -65281
  %v2_325ab = or i32 %v1_325ab, 17664
  store i32 %v2_325ab, i32* %edx.global-to-local, align 4
  %v1_325ad = add i32 %v28_325a6, 1166792517
  %v2_325ad = inttoptr i32 %v1_325ad to i8*
  %v3_325ad = load i8, i8* %v2_325ad, align 1
  %v4_325ad = load i32, i32* %ecx.global-to-local, align 8
  %v5_325ad = trunc i32 %v4_325ad to i8
  %v7_325ad = zext i1 %v24_325a6 to i8
  %v8_325ad = sub i8 %v3_325ad, %v5_325ad
  %v9_325ad = add i8 %v8_325ad, %v7_325ad
  %v19_325ad = sub i8 %v8_325ad, %v7_325ad
  %v20_325ad = icmp ult i8 %v3_325ad, %v19_325ad
  %v21_325ad = icmp ne i8 %v5_325ad, -1
  %v22_325ad = or i1 %v21_325ad, %v20_325ad
  %v23_325ad = icmp ult i8 %v3_325ad, %v5_325ad
  %v24_325ad = select i1 %v24_325a6, i1 %v22_325ad, i1 %v23_325ad
  store i1 %v24_325ad, i1* %cf.global-to-local, align 1
  store i8 %v9_325ad, i8* %v2_325ad, align 1
  %v0_325b3 = load i32, i32* %eax.global-to-local, align 8
  %v1_325b3 = trunc i32 %v0_325b3 to i8
  %v2_325b3 = load i1, i1* %cf.global-to-local, align 1
  %v3_325b3 = zext i1 %v2_325b3 to i32
  %v4_325b3 = add i32 %v0_325b3, 119
  %v5_325b3 = add i32 %v4_325b3, %v3_325b3
  %v17_325b3 = icmp ult i8 %v1_325b3, -119
  %v18_325b3 = or i1 %v2_325b3, %v17_325b3
  store i1 %v18_325b3, i1* %cf.global-to-local, align 1
  %v31_325b3 = urem i32 %v5_325b3, 256
  %v33_325b3 = and i32 %v0_325b3, -256
  %v34_325b3 = or i32 %v31_325b3, %v33_325b3
  store i32 %v34_325b3, i32* %eax.global-to-local, align 8
  %v0_325b5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_325b5 = add i32 %v0_325b5, 1
  store i32 %v1_325b5, i32* @ebp, align 4
  %v1_325b6 = add i32 %v0_325b5, -94
  %v2_325b6 = inttoptr i32 %v1_325b6 to i8*
  %v3_325b6 = load i8, i8* %v2_325b6, align 1
  %v5_325b6 = mul i8 %v3_325b6, 2
  store i8 %v5_325b6, i8* %v2_325b6, align 1
  %v16_325b6 = icmp slt i8 %v3_325b6, 0
  %v0_325b9 = load i32, i32* %eax.global-to-local, align 8
  %v1_325b9 = trunc i32 %v0_325b9 to i8
  %v3_325b9 = zext i1 %v16_325b6 to i8
  %v4_325b9 = add i8 %v1_325b9, %v3_325b9
  %v19_325b9 = icmp ule i8 %v4_325b9, %v1_325b9
  %v21_325b9 = icmp eq i1 %v16_325b6, %v19_325b9
  store i1 %v21_325b9, i1* %cf.global-to-local, align 1
  %v22_325b9 = zext i8 %v4_325b9 to i32
  %v24_325b9 = and i32 %v0_325b9, -256
  %v25_325b9 = or i32 %v22_325b9, %v24_325b9
  store i32 %v25_325b9, i32* %eax.global-to-local, align 8
  %v1_325bb = inttoptr i32 %v25_325b9 to i8*
  %v2_325bb = load i8, i8* %v1_325bb, align 1
  %v5_325bb = add i8 %v2_325bb, %v4_325b9
  store i8 %v5_325bb, i8* %v1_325bb, align 1
  %v0_325bd = load i32, i32* %eax.global-to-local, align 8
  %v1_325bd = load i32, i32* @ebp, align 4
  %v2_325bd = add i32 %v1_325bd, -12
  %v3_325bd = inttoptr i32 %v2_325bd to i32*
  store i32 %v0_325bd, i32* %v3_325bd, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_325c2 = load i32, i32* %edx.global-to-local, align 4
  %v0_325c6 = load i32, i32* @ebp, align 4
  %v1_325c6 = add i32 %v0_325c6, -40
  %v2_325c6 = inttoptr i32 %v1_325c6 to i32*
  %v3_325c6 = load i32, i32* %v2_325c6, align 4
  store i32 %v3_325c6, i32* %eax.global-to-local, align 8
  %v1_325cd = add i32 %v0_325c6, -36
  %v2_325cd = inttoptr i32 %v1_325cd to i32*
  %v3_325cd = load i32, i32* %v2_325cd, align 4
  store i32 %v3_325cd, i32* %eax.global-to-local, align 8
  %v1_325d4 = add i32 %v0_325c6, -32
  %v2_325d4 = inttoptr i32 %v1_325d4 to i32*
  %v3_325d4 = load i32, i32* %v2_325d4, align 4
  store i32 %v3_325d4, i32* %eax.global-to-local, align 8
  %v1_325db = add i32 %v0_325c6, -28
  %v2_325db = inttoptr i32 %v1_325db to i32*
  %v3_325db = load i32, i32* %v2_325db, align 4
  store i32 %v3_325db, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_325c2, 16777216
  %v5_325e1 = sdiv i32 %sext, 16777216
  %v6_325e1 = call i32 @unknown_667c3(i32 %v3_325db, i32 %v3_325d4, i32 %v3_325cd, i32 %v3_325c6, i32 %v5_325e1)
  store i32 %v6_325e1, i32* @eax, align 8
  %v0_325e6 = load i32, i32* @ebp, align 4
  %v1_325e6 = add i32 %v0_325e6, -12
  %v2_325e6 = inttoptr i32 %v1_325e6 to i32*
  %v3_325e6 = load i32, i32* %v2_325e6, align 4
  store i32 %v3_325e6, i32* %edx.global-to-local, align 4
  %v1_325e9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_325e9 = xor i32 %v1_325e9, %v3_325e6
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_325e9 = icmp eq i32 %v2_325e9, 0
  store i32 %v2_325e9, i32* %edx.global-to-local, align 4
  br i1 %v3_325e9, label %bb, label %dec_label_pc_325f2

bb:                                               ; preds = %dec_label_pc_32594
  %v1_325f0 = call i32 @function_325f7()
  store i32 %v1_325f0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_325f2

dec_label_pc_325f2:                               ; preds = %bb, %dec_label_pc_32594
  %v3_325f0 = phi i32 [ %v1_325f0, %bb ], [ %v6_325e1, %dec_label_pc_32594 ]
  ret i32 %v3_325f0

; uselistorder directives
  uselistorder i32 %v0_325c6, { 1, 0, 2, 3 }
  uselistorder i8 %v4_325b9, { 0, 2, 1 }
  uselistorder i8 %v1_325b9, { 1, 0 }
  uselistorder i8 %v3_325b6, { 1, 0 }
  uselistorder i1 %v2_325b3, { 1, 0 }
  uselistorder i32 %v0_325b3, { 1, 0, 2 }
  uselistorder i8 %v8_325ad, { 1, 0 }
  uselistorder i8 %v7_325ad, { 1, 0 }
  uselistorder i8 %v5_325ad, { 1, 0, 2 }
  uselistorder i1 %v24_325a6, { 1, 0, 2 }
  uselistorder i8 %v5_325a6, { 1, 0 }
  uselistorder i8 %v3_325a0, { 1, 0 }
}

define i32 @function_325f7() local_unnamed_addr {
dec_label_pc_325f7:
  %v0_325f8 = load i32, i32* @eax, align 8
  ret i32 %v0_325f8
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsSJ_NSA_ISB_INSC_10Value_implISF_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_325f9:
  %v4_32617 = zext i8 %arg5 to i32
  ret i32 %v4_32617
}

define i32 @function_3261e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3261e:
  %v0_3261e = load i32, i32* @ebp, align 4
  %v1_3261e = add i32 %v0_3261e, 28
  %v2_3261e = inttoptr i32 %v1_3261e to i32*
  %v3_3261e = load i32, i32* %v2_3261e, align 4
  %v2_32621 = add i32 %v0_3261e, -48
  %v3_32621 = inttoptr i32 %v2_32621 to i32*
  store i32 %v3_3261e, i32* %v3_32621, align 4
  %v0_32624 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3262a = load i32, i32* @ebp, align 4
  %v2_3262a = add i32 %v1_3262a, -12
  %v3_3262a = inttoptr i32 %v2_3262a to i32*
  store i32 %v0_32624, i32* %v3_3262a, align 4
  %v0_32633 = load i32, i32* @ebp, align 4
  %v1_32648 = add i32 %v0_32633, -28
  %v2_32648 = inttoptr i32 %v1_32648 to i32*
  %v3_32648 = load i32, i32* %v2_32648, align 4
  ret i32 %v3_32648
}

define i32 @function_3264b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3264b:
  %v0_3264b = load i32, i32* @eax, align 8
  %v1_3264e = call i32 @unknown_66895(i32 %v0_3264b)
  store i32 %v1_3264e, i32* @eax, align 8
  %v0_32653 = load i32, i32* @ebp, align 4
  %v1_32653 = add i32 %v0_32653, -12
  %v2_32653 = inttoptr i32 %v1_32653 to i32*
  %v3_32653 = load i32, i32* %v2_32653, align 4
  %v1_32656 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32656 = xor i32 %v1_32656, %v3_32653
  %v3_32656 = icmp eq i32 %v2_32656, 0
  store i32 %v2_32656, i32* @edx, align 4
  br i1 %v3_32656, label %bb, label %dec_label_pc_3265f

bb:                                               ; preds = %dec_label_pc_3264b
  %v1_3265d = call i32 @function_32664()
  br label %dec_label_pc_3265f

dec_label_pc_3265f:                               ; preds = %bb, %dec_label_pc_3264b
  %v3_3265d = phi i32 [ %v1_3265d, %bb ], [ %v1_3264e, %dec_label_pc_3264b ]
  ret i32 %v3_3265d
}

define i32 @function_32664() local_unnamed_addr {
dec_label_pc_32664:
  %v0_32665 = load i32, i32* @eax, align 8
  ret i32 %v0_32665
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsNSA_ISB_INSC_9Pair_implISF_EESaISM_EEEESJ_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32666:
  ret i32 %arg4
}

define i32 @function_326d0() local_unnamed_addr {
dec_label_pc_326d0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_326d0 = load i32, i32* %ecx.global-to-local, align 8
  %v1_326d0 = add i32 %v0_326d0, -1
  store i32 %v1_326d0, i32* %ecx.global-to-local, align 8
  %v0_326d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_326d2
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_326d3:
  ret i32 0
}

define i32 @function_3270e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3270e:
  %v0_3270e = load i32, i32* @ebp, align 4
  %v1_3271c = add i32 %v0_3270e, 3
  store i32 %v1_3271c, i32* @ebp, align 4
  %v1_32722 = add i32 %v0_3270e, -25
  %v2_32722 = inttoptr i32 %v1_32722 to i32*
  %v3_32722 = load i32, i32* %v2_32722, align 4
  %v1_32728 = call i32 @unknown_66a39(i32 %v3_32722)
  store i32 %v1_32728, i32* @eax, align 8
  %v0_3272d = load i32, i32* @ebp, align 4
  %v1_3272d = add i32 %v0_3272d, -12
  %v2_3272d = inttoptr i32 %v1_3272d to i32*
  %v3_3272d = load i32, i32* %v2_3272d, align 4
  %v1_32730 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_32730 = icmp eq i32 %v1_32730, %v3_3272d
  br i1 %v3_32730, label %bb, label %dec_label_pc_32739

bb:                                               ; preds = %dec_label_pc_3270e
  %v1_32737 = call i32 @function_3273e()
  br label %dec_label_pc_32739

dec_label_pc_32739:                               ; preds = %bb, %dec_label_pc_3270e
  %v3_32737 = phi i32 [ %v1_32737, %bb ], [ %v1_32728, %dec_label_pc_3270e ]
  ret i32 %v3_32737
}

define i32 @function_3273e() local_unnamed_addr {
dec_label_pc_3273e:
  %v0_3273f = load i32, i32* @eax, align 8
  ret i32 %v0_3273f
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32740:
  ret i32 %arg1
}

define i32 @function_32798(i32 %arg1) local_unnamed_addr {
dec_label_pc_32798:
  %v0_32798 = load i32, i32* @eax, align 8
  %v4_32798 = mul i32 %v0_32798, 2
  ret i32 %v4_32798
}

define i32 @function_327aa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_327aa:
  %v0_327ac = load i32, i32* @eax, align 8
  ret i32 %v0_327ac
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_327ad:
  %eax.global-to-local = alloca i32, align 4
  %v2_327ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_327ae
}

define i32 @function_327b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_327b2:
  %v0_327b3 = load i32, i32* @ebp, align 4
  %v1_327b3 = add i32 %v0_327b3, 8
  %v2_327b3 = inttoptr i32 %v1_327b3 to i32*
  %v3_327b3 = load i32, i32* %v2_327b3, align 4
  %v2_327b6 = add i32 %v0_327b3, -28
  %v3_327b6 = inttoptr i32 %v2_327b6 to i32*
  store i32 %v3_327b3, i32* %v3_327b6, align 4
  %v0_327b9 = load i32, i32* @ebp, align 4
  %v1_327b9 = add i32 %v0_327b9, 12
  %v2_327b9 = inttoptr i32 %v1_327b9 to i32*
  %v3_327b9 = load i32, i32* %v2_327b9, align 4
  %v2_327bc = add i32 %v0_327b9, -32
  %v3_327bc = inttoptr i32 %v2_327bc to i32*
  store i32 %v3_327b9, i32* %v3_327bc, align 4
  %v0_327bf = load i32, i32* @ebp, align 4
  %v1_327bf = add i32 %v0_327bf, 16
  %v2_327bf = inttoptr i32 %v1_327bf to i32*
  %v3_327bf = load i32, i32* %v2_327bf, align 4
  %v2_327c2 = add i32 %v0_327bf, -36
  %v3_327c2 = inttoptr i32 %v2_327c2 to i32*
  store i32 %v3_327bf, i32* %v3_327c2, align 4
  %v0_327c5 = load i32, i32* @ebp, align 4
  %v1_327c5 = add i32 %v0_327c5, 20
  %v2_327c5 = inttoptr i32 %v1_327c5 to i32*
  %v3_327c5 = load i32, i32* %v2_327c5, align 4
  %v2_327c8 = add i32 %v0_327c5, -40
  %v3_327c8 = inttoptr i32 %v2_327c8 to i32*
  store i32 %v3_327c5, i32* %v3_327c8, align 4
  %v0_327cb = load i32, i32* @ebp, align 4
  %v1_327cb = add i32 %v0_327cb, 24
  %v2_327cb = inttoptr i32 %v1_327cb to i8*
  %v3_327cb = load i8, i8* %v2_327cb, align 1
  %v3_327cf = add i32 %v0_327cb, -41
  %v4_327cf = inttoptr i32 %v3_327cf to i8*
  store i8 %v3_327cb, i8* %v4_327cf, align 1
  %v0_327d2 = load i32, i32* @ebp, align 4
  %v1_327d2 = add i32 %v0_327d2, 28
  %v2_327d2 = inttoptr i32 %v1_327d2 to i32*
  %v3_327d2 = load i32, i32* %v2_327d2, align 4
  %v2_327d5 = add i32 %v0_327d2, -48
  %v3_327d5 = inttoptr i32 %v2_327d5 to i32*
  store i32 %v3_327d2, i32* %v3_327d5, align 4
  %v0_327d8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_327de = load i32, i32* @ebp, align 4
  %v2_327de = add i32 %v1_327de, -12
  %v3_327de = inttoptr i32 %v2_327de to i32*
  store i32 %v0_327d8, i32* %v3_327de, align 4
  ret i32 0
}

define i32 @function_327e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_327e6:
  %v0_327e6 = load i32, i32* @ebx, align 4
  %v1_327e6 = add i32 %v0_327e6, 1149884485
  %v2_327e6 = inttoptr i32 %v1_327e6 to i8*
  %v3_327e6 = load i8, i8* %v2_327e6, align 1
  %v4_327e6 = load i32, i32* @ecx, align 8
  %v5_327e6 = trunc i32 %v4_327e6 to i8
  %v6_327e6 = load i1, i1* @cf, align 1
  %v7_327e6 = zext i1 %v6_327e6 to i8
  %v8_327e6 = add i8 %v5_327e6, %v3_327e6
  %v9_327e6 = add i8 %v8_327e6, %v7_327e6
  store i8 %v9_327e6, i8* %v2_327e6, align 1
  %v0_327ee = load i32, i32* @ebp, align 4
  %v1_327ee = add i32 %v0_327ee, -36
  %v2_327ee = inttoptr i32 %v1_327ee to i32*
  %v3_327ee = load i32, i32* %v2_327ee, align 4
  %v1_327f5 = add i32 %v0_327ee, -32
  %v2_327f5 = inttoptr i32 %v1_327f5 to i32*
  %v3_327f5 = load i32, i32* %v2_327f5, align 4
  %v1_327fc = add i32 %v0_327ee, -28
  %v2_327fc = inttoptr i32 %v1_327fc to i32*
  %v3_327fc = load i32, i32* %v2_327fc, align 4
  %v3_32802 = call i32 @unknown_66bdd(i32 %v3_327fc, i32 %v3_327f5, i32 %v3_327ee)
  store i32 %v3_32802, i32* @eax, align 8
  %v0_32807 = load i32, i32* @ebp, align 4
  %v1_32807 = add i32 %v0_32807, -12
  %v2_32807 = inttoptr i32 %v1_32807 to i32*
  %v3_32807 = load i32, i32* %v2_32807, align 4
  %v1_3280a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3280a = icmp eq i32 %v1_3280a, %v3_32807
  br i1 %v3_3280a, label %bb, label %dec_label_pc_32813

bb:                                               ; preds = %dec_label_pc_327e6
  %v1_32811 = call i32 @function_32818()
  br label %dec_label_pc_32813

dec_label_pc_32813:                               ; preds = %bb, %dec_label_pc_327e6
  %v2_32811 = phi i32 [ %v1_32811, %bb ], [ %v3_32802, %dec_label_pc_327e6 ]
  ret i32 %v2_32811
}

define i32 @function_32818() local_unnamed_addr {
dec_label_pc_32818:
  %v0_32819 = load i32, i32* @eax, align 8
  ret i32 %v0_32819
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_3281a:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSM_13Config_vectorISsEEEESaISQ_EEEENSK_ISL_INSM_10Value_implISP_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_32874:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISC_EENSJ_IS5_INS6_10Value_implIS9_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_328db:
  %edx.global-to-local = alloca i32, align 4
  %v0_32911 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_32911, 16777216
  %v5_32930 = sdiv i32 %sext, 16777216
  %v6_32930 = call i32 @unknown_66d70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_32930)
  store i32 %v6_32930, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_32941

bb:                                               ; preds = %dec_label_pc_328db
  %v1_3293f = call i32 @function_32946()
  br label %dec_label_pc_32941

dec_label_pc_32941:                               ; preds = %bb, %dec_label_pc_328db
  %v2_3293f = phi i32 [ %v1_3293f, %bb ], [ %v6_32930, %dec_label_pc_328db ]
  ret i32 %v2_3293f
}

define i32 @function_32946() local_unnamed_addr {
dec_label_pc_32946:
  %v0_32947 = load i32, i32* @eax, align 8
  ret i32 %v0_32947
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvNS_17recursive_wrapperISC_EENS_7variantISsSJ_NSI_IS5_INS6_10Value_implIS9_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_32948:
  %v4_32966 = zext i8 %arg5 to i32
  ret i32 %v4_32966
}

define i32 @function_3296a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3296a:
  %v0_3296a = load i32, i32* @eax, align 8
  %v1_3296a = trunc i32 %v0_3296a to i8
  %v2_3296a = load i32, i32* @ebp, align 4
  %v3_3296a = add i32 %v2_3296a, -41
  %v4_3296a = inttoptr i32 %v3_3296a to i8*
  store i8 %v1_3296a, i8* %v4_3296a, align 1
  %v0_3296d = load i32, i32* @ebp, align 4
  %v1_3296d = add i32 %v0_3296d, 28
  %v2_3296d = inttoptr i32 %v1_3296d to i32*
  %v3_3296d = load i32, i32* %v2_3296d, align 4
  %v2_32970 = add i32 %v0_3296d, -48
  %v3_32970 = inttoptr i32 %v2_32970 to i32*
  store i32 %v3_3296d, i32* %v3_32970, align 4
  %v0_32973 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_32979 = load i32, i32* @ebp, align 4
  %v2_32979 = add i32 %v1_32979, -12
  %v3_32979 = inttoptr i32 %v2_32979 to i32*
  store i32 %v0_32973, i32* %v3_32979, align 4
  %v0_3297e = load i32, i32* @edx, align 4
  %v0_32982 = load i32, i32* @ebp, align 4
  %v1_32982 = add i32 %v0_32982, -40
  %v2_32982 = inttoptr i32 %v1_32982 to i32*
  %v3_32982 = load i32, i32* %v2_32982, align 4
  %v1_32989 = add i32 %v0_32982, -36
  %v2_32989 = inttoptr i32 %v1_32989 to i32*
  %v3_32989 = load i32, i32* %v2_32989, align 4
  %v1_32990 = add i32 %v0_32982, -32
  %v2_32990 = inttoptr i32 %v1_32990 to i32*
  %v3_32990 = load i32, i32* %v2_32990, align 4
  %v1_32997 = add i32 %v0_32982, -28
  %v2_32997 = inttoptr i32 %v1_32997 to i32*
  %v3_32997 = load i32, i32* %v2_32997, align 4
  %sext = mul i32 %v0_3297e, 16777216
  %v5_3299d = sdiv i32 %sext, 16777216
  %v6_3299d = call i32 @unknown_66e42(i32 %v3_32997, i32 %v3_32990, i32 %v3_32989, i32 %v3_32982, i32 %v5_3299d)
  store i32 %v6_3299d, i32* @eax, align 8
  %v0_329a2 = load i32, i32* @ebp, align 4
  %v1_329a2 = add i32 %v0_329a2, -12
  %v2_329a2 = inttoptr i32 %v1_329a2 to i32*
  %v3_329a2 = load i32, i32* %v2_329a2, align 4
  %v1_329a5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_329a5 = icmp eq i32 %v1_329a5, %v3_329a2
  br i1 %v3_329a5, label %bb, label %dec_label_pc_329ae

bb:                                               ; preds = %dec_label_pc_3296a
  %v1_329ac = call i32 @function_329b3()
  br label %dec_label_pc_329ae

dec_label_pc_329ae:                               ; preds = %bb, %dec_label_pc_3296a
  %v2_329ac = phi i32 [ %v1_329ac, %bb ], [ %v6_3299d, %dec_label_pc_3296a ]
  ret i32 %v2_329ac

; uselistorder directives
  uselistorder i32 %v0_32982, { 1, 0, 2, 3 }
}

define i32 @function_329b3() local_unnamed_addr {
dec_label_pc_329b3:
  %v0_329b4 = load i32, i32* @eax, align 8
  ret i32 %v0_329b4
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvNS_17recursive_wrapperIS5_INS6_10Value_implIS9_EESaISK_EEEENS_7variantISsNSI_ISC_EESN_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_329b5:
  %eax.global-to-local = alloca i32, align 4
  %v2_329b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_329b6
}

define i32 @function_329ba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_329ba:
  %v0_329bb = load i32, i32* @ebp, align 4
  %v1_329bb = add i32 %v0_329bb, 8
  %v2_329bb = inttoptr i32 %v1_329bb to i32*
  %v3_329bb = load i32, i32* %v2_329bb, align 4
  %v2_329be = add i32 %v0_329bb, -28
  %v3_329be = inttoptr i32 %v2_329be to i32*
  store i32 %v3_329bb, i32* %v3_329be, align 4
  %v0_329c1 = load i32, i32* @ebp, align 4
  %v1_329c1 = add i32 %v0_329c1, 12
  %v2_329c1 = inttoptr i32 %v1_329c1 to i32*
  %v3_329c1 = load i32, i32* %v2_329c1, align 4
  %v2_329c4 = add i32 %v0_329c1, -32
  %v3_329c4 = inttoptr i32 %v2_329c4 to i32*
  store i32 %v3_329c1, i32* %v3_329c4, align 4
  %v0_329c7 = load i32, i32* @ebp, align 4
  %v1_329c7 = add i32 %v0_329c7, 16
  %v2_329c7 = inttoptr i32 %v1_329c7 to i32*
  %v3_329c7 = load i32, i32* %v2_329c7, align 4
  %v2_329ca = add i32 %v0_329c7, -36
  %v3_329ca = inttoptr i32 %v2_329ca to i32*
  store i32 %v3_329c7, i32* %v3_329ca, align 4
  %v0_329cd = load i32, i32* @ebp, align 4
  %v1_329cd = add i32 %v0_329cd, 20
  %v2_329cd = inttoptr i32 %v1_329cd to i32*
  %v3_329cd = load i32, i32* %v2_329cd, align 4
  %v2_329d0 = add i32 %v0_329cd, -40
  %v3_329d0 = inttoptr i32 %v2_329d0 to i32*
  store i32 %v3_329cd, i32* %v3_329d0, align 4
  %v0_329d3 = load i32, i32* @ebp, align 4
  %v1_329d3 = add i32 %v0_329d3, 24
  %v2_329d3 = inttoptr i32 %v1_329d3 to i8*
  %v3_329d3 = load i8, i8* %v2_329d3, align 1
  %v3_329d7 = add i32 %v0_329d3, -41
  %v4_329d7 = inttoptr i32 %v3_329d7 to i8*
  store i8 %v3_329d3, i8* %v4_329d7, align 1
  %v0_329da = load i32, i32* @ebp, align 4
  %v1_329da = add i32 %v0_329da, 28
  %v2_329da = inttoptr i32 %v1_329da to i32*
  %v3_329da = load i32, i32* %v2_329da, align 4
  %v2_329dd = add i32 %v0_329da, -48
  %v3_329dd = inttoptr i32 %v2_329dd to i32*
  store i32 %v3_329da, i32* %v3_329dd, align 4
  %v0_329e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_329e6 = load i32, i32* @ebp, align 4
  %v2_329e6 = add i32 %v1_329e6, -12
  %v3_329e6 = inttoptr i32 %v2_329e6 to i32*
  store i32 %v0_329e0, i32* %v3_329e6, align 4
  %v0_329ef = load i32, i32* @ebp, align 4
  %v1_32a04 = add i32 %v0_329ef, -28
  %v2_32a04 = inttoptr i32 %v1_32a04 to i32*
  %v3_32a04 = load i32, i32* %v2_32a04, align 4
  ret i32 %v3_32a04
}

define i32 @function_32a0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_32a0a:
  %v0_32a0a = call i32 @unknown_66f14()
  store i32 %v0_32a0a, i32* @eax, align 8
  %v0_32a0f = load i32, i32* @ebp, align 4
  %v1_32a0f = add i32 %v0_32a0f, -12
  %v2_32a0f = inttoptr i32 %v1_32a0f to i32*
  %v3_32a0f = load i32, i32* %v2_32a0f, align 4
  %v1_32a12 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_32a12 = icmp eq i32 %v1_32a12, %v3_32a0f
  br i1 %v3_32a12, label %bb, label %dec_label_pc_32a1b

bb:                                               ; preds = %dec_label_pc_32a0a
  %v1_32a19 = call i32 @function_32a20()
  br label %dec_label_pc_32a1b

dec_label_pc_32a1b:                               ; preds = %bb, %dec_label_pc_32a0a
  %v2_32a19 = phi i32 [ %v1_32a19, %bb ], [ %v0_32a0a, %dec_label_pc_32a0a ]
  ret i32 %v2_32a19
}

define i32 @function_32a20() local_unnamed_addr {
dec_label_pc_32a20:
  %v0_32a21 = load i32, i32* @eax, align 8
  ret i32 %v0_32a21
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvbNS_7variantISsNS_17recursive_wrapperISC_EENSJ_IS5_INS6_10Value_implIS9_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32a22:
  ret i32 %arg3
}

define i32 @function_32a38(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32a38:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_32a38 = load i32, i32* @ebp, align 4
  %v1_32a38 = add i32 %v0_32a38, 1
  store i32 %v1_32a38, i32* %ebp.global-to-local, align 4
  %v0_32a41 = load i32, i32* @edx, align 4
  %v1_32a41 = and i32 %v0_32a41, -65281
  %v2_32a41 = or i32 %v1_32a41, 17664
  store i32 %v2_32a41, i32* %edx.global-to-local, align 4
  %v0_32a43 = load i32, i32* @eax, align 8
  %v1_32a43 = add i32 %v0_32a43, 1166792517
  %v2_32a43 = inttoptr i32 %v1_32a43 to i8*
  %v3_32a43 = load i8, i8* %v2_32a43, align 1
  %v4_32a43 = load i32, i32* @ecx, align 8
  %v5_32a43 = trunc i32 %v4_32a43 to i8
  %v6_32a43 = load i1, i1* @cf, align 1
  %v7_32a43 = zext i1 %v6_32a43 to i8
  %v8_32a43 = sub i8 %v3_32a43, %v5_32a43
  %v9_32a43 = add i8 %v8_32a43, %v7_32a43
  %v19_32a43 = sub i8 %v8_32a43, %v7_32a43
  %v20_32a43 = icmp ult i8 %v3_32a43, %v19_32a43
  %v21_32a43 = icmp ne i8 %v5_32a43, -1
  %v22_32a43 = or i1 %v21_32a43, %v20_32a43
  %v23_32a43 = icmp ult i8 %v3_32a43, %v5_32a43
  %v24_32a43 = select i1 %v6_32a43, i1 %v22_32a43, i1 %v23_32a43
  store i1 %v24_32a43, i1* %cf.global-to-local, align 1
  store i8 %v9_32a43, i8* %v2_32a43, align 1
  %v0_32a49 = load i32, i32* @eax, align 8
  %v1_32a49 = trunc i32 %v0_32a49 to i8
  %v2_32a49 = load i1, i1* %cf.global-to-local, align 1
  %v3_32a49 = zext i1 %v2_32a49 to i32
  %v4_32a49 = add i32 %v0_32a49, 119
  %v5_32a49 = add i32 %v4_32a49, %v3_32a49
  %v17_32a49 = icmp ult i8 %v1_32a49, -119
  %v18_32a49 = or i1 %v2_32a49, %v17_32a49
  store i1 %v18_32a49, i1* %cf.global-to-local, align 1
  %v31_32a49 = urem i32 %v5_32a49, 256
  %v33_32a49 = and i32 %v0_32a49, -256
  %v34_32a49 = or i32 %v31_32a49, %v33_32a49
  store i32 %v34_32a49, i32* %eax.global-to-local, align 8
  %v0_32a4b = load i32, i32* %ebp.global-to-local, align 4
  %v1_32a4b = add i32 %v0_32a4b, 1
  store i32 %v1_32a4b, i32* @ebp, align 4
  %v1_32a4c = add i32 %v0_32a4b, -94
  %v2_32a4c = inttoptr i32 %v1_32a4c to i8*
  %v3_32a4c = load i8, i8* %v2_32a4c, align 1
  %v5_32a4c = mul i8 %v3_32a4c, 2
  store i8 %v5_32a4c, i8* %v2_32a4c, align 1
  %v16_32a4c = icmp slt i8 %v3_32a4c, 0
  %v0_32a4f = load i32, i32* %eax.global-to-local, align 8
  %v1_32a4f = trunc i32 %v0_32a4f to i8
  %v3_32a4f = zext i1 %v16_32a4c to i8
  %v4_32a4f = add i8 %v1_32a4f, %v3_32a4f
  %v19_32a4f = icmp ule i8 %v4_32a4f, %v1_32a4f
  %v21_32a4f = icmp eq i1 %v16_32a4c, %v19_32a4f
  store i1 %v21_32a4f, i1* %cf.global-to-local, align 1
  %v22_32a4f = zext i8 %v4_32a4f to i32
  %v24_32a4f = and i32 %v0_32a4f, -256
  %v25_32a4f = or i32 %v22_32a4f, %v24_32a4f
  store i32 %v25_32a4f, i32* %eax.global-to-local, align 8
  %v1_32a51 = inttoptr i32 %v25_32a4f to i8*
  %v2_32a51 = load i8, i8* %v1_32a51, align 1
  %v5_32a51 = add i8 %v2_32a51, %v4_32a4f
  store i8 %v5_32a51, i8* %v1_32a51, align 1
  %v0_32a53 = load i32, i32* %eax.global-to-local, align 8
  %v1_32a53 = load i32, i32* @ebp, align 4
  %v2_32a53 = add i32 %v1_32a53, -12
  %v3_32a53 = inttoptr i32 %v2_32a53 to i32*
  store i32 %v0_32a53, i32* %v3_32a53, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_32a58 = load i32, i32* %edx.global-to-local, align 4
  %v0_32a5c = load i32, i32* @ebp, align 4
  %v1_32a5c = add i32 %v0_32a5c, -40
  %v2_32a5c = inttoptr i32 %v1_32a5c to i32*
  %v3_32a5c = load i32, i32* %v2_32a5c, align 4
  store i32 %v3_32a5c, i32* %eax.global-to-local, align 8
  %v1_32a63 = add i32 %v0_32a5c, -36
  %v2_32a63 = inttoptr i32 %v1_32a63 to i32*
  %v3_32a63 = load i32, i32* %v2_32a63, align 4
  store i32 %v3_32a63, i32* %eax.global-to-local, align 8
  %v1_32a6a = add i32 %v0_32a5c, -32
  %v2_32a6a = inttoptr i32 %v1_32a6a to i32*
  %v3_32a6a = load i32, i32* %v2_32a6a, align 4
  store i32 %v3_32a6a, i32* %eax.global-to-local, align 8
  %v1_32a71 = add i32 %v0_32a5c, -28
  %v2_32a71 = inttoptr i32 %v1_32a71 to i32*
  %v3_32a71 = load i32, i32* %v2_32a71, align 4
  store i32 %v3_32a71, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_32a58, 16777216
  %v5_32a77 = sdiv i32 %sext, 16777216
  %v6_32a77 = call i32 @unknown_66fe6(i32 %v3_32a71, i32 %v3_32a6a, i32 %v3_32a63, i32 %v3_32a5c, i32 %v5_32a77)
  store i32 %v6_32a77, i32* @eax, align 8
  %v0_32a7c = load i32, i32* @ebp, align 4
  %v1_32a7c = add i32 %v0_32a7c, -12
  %v2_32a7c = inttoptr i32 %v1_32a7c to i32*
  %v3_32a7c = load i32, i32* %v2_32a7c, align 4
  store i32 %v3_32a7c, i32* %edx.global-to-local, align 4
  %v1_32a7f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32a7f = xor i32 %v1_32a7f, %v3_32a7c
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_32a7f = icmp eq i32 %v2_32a7f, 0
  store i32 %v2_32a7f, i32* %edx.global-to-local, align 4
  br i1 %v3_32a7f, label %bb, label %dec_label_pc_32a88

bb:                                               ; preds = %dec_label_pc_32a38
  %v1_32a86 = call i32 @function_32a8d()
  store i32 %v1_32a86, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_32a88

dec_label_pc_32a88:                               ; preds = %bb, %dec_label_pc_32a38
  %v2_32a86 = phi i32 [ %v1_32a86, %bb ], [ %v6_32a77, %dec_label_pc_32a38 ]
  ret i32 %v2_32a86

; uselistorder directives
  uselistorder i32 %v0_32a5c, { 1, 0, 2, 3 }
  uselistorder i8 %v4_32a4f, { 0, 2, 1 }
  uselistorder i8 %v1_32a4f, { 1, 0 }
  uselistorder i8 %v3_32a4c, { 1, 0 }
  uselistorder i1 %v2_32a49, { 1, 0 }
  uselistorder i32 %v0_32a49, { 1, 0, 2 }
  uselistorder i8 %v5_32a43, { 1, 0, 2 }
}

define i32 @function_32a8d() local_unnamed_addr {
dec_label_pc_32a8d:
  %v0_32a8e = load i32, i32* @eax, align 8
  ret i32 %v0_32a8e
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvxNS_7variantISsNS_17recursive_wrapperISC_EENSJ_IS5_INS6_10Value_implIS9_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32a8f:
  ret i32 %arg2
}

define i32 @function_32add(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_32add:
  %v0_32adf = load i32, i32* @ebp, align 4
  %v1_32adf = add i32 %v0_32adf, 1
  store i32 %v1_32adf, i32* @ebp, align 4
  %v0_32ae4 = call i32 @unknown_670b8()
  store i32 %v0_32ae4, i32* @eax, align 8
  %v0_32ae9 = load i32, i32* @ebp, align 4
  %v1_32ae9 = add i32 %v0_32ae9, -12
  %v2_32ae9 = inttoptr i32 %v1_32ae9 to i32*
  %v3_32ae9 = load i32, i32* %v2_32ae9, align 4
  %v1_32aec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_32aec = icmp eq i32 %v1_32aec, %v3_32ae9
  br i1 %v3_32aec, label %bb, label %dec_label_pc_32af5

bb:                                               ; preds = %dec_label_pc_32add
  %v1_32af3 = call i32 @function_32afa()
  br label %dec_label_pc_32af5

dec_label_pc_32af5:                               ; preds = %bb, %dec_label_pc_32add
  %v2_32af3 = phi i32 [ %v1_32af3, %bb ], [ %v0_32ae4, %dec_label_pc_32add ]
  ret i32 %v2_32af3
}

define i32 @function_32afa() local_unnamed_addr {
dec_label_pc_32afa:
  %v0_32afb = load i32, i32* @eax, align 8
  ret i32 %v0_32afb
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvdNS_7variantISsNS_17recursive_wrapperISC_EENSJ_IS5_INS6_10Value_implIS9_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32afc:
  %edx.global-to-local = alloca i32, align 4
  %v0_32b32 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_32b32, 16777216
  %v5_32b51 = sdiv i32 %sext, 16777216
  %v6_32b51 = call i32 @unknown_6718a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_32b51)
  store i32 %v6_32b51, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_32b62

bb:                                               ; preds = %dec_label_pc_32afc
  %v1_32b60 = call i32 @function_32b67()
  br label %dec_label_pc_32b62

dec_label_pc_32b62:                               ; preds = %bb, %dec_label_pc_32afc
  %v2_32b60 = phi i32 [ %v1_32b60, %bb ], [ %v6_32b51, %dec_label_pc_32afc ]
  ret i32 %v2_32b60
}

define i32 @function_32b67() local_unnamed_addr {
dec_label_pc_32b67:
  %v0_32b68 = load i32, i32* @eax, align 8
  ret i32 %v0_32b68
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvNS_7variantISsNS_17recursive_wrapperISC_EENSJ_IS5_INS6_10Value_implIS9_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32b69:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEEEEPKvNS_7variantISsNS_17recursive_wrapperISL_EENSS_ISE_INSF_10Value_implISI_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_32bc3:
  ret i32 0
}

define i32 @function_32c0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_32c0c:
  %v2_32c0c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32c0c = load i32, i32* @eax, align 8
  %v4_32c0c = trunc i32 %v3_32c0c to i8
  %v5_32c0c = add i8 %v4_32c0c, %v2_32c0c
  %v21_32c0c = inttoptr i32 %v3_32c0c to i8*
  store i8 %v5_32c0c, i8* %v21_32c0c, align 1
  %v3_32c1e = load i32, i32* @eax, align 8
  ret i32 %v3_32c1e
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256xEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32c2a:
  ret i32 %arg3
}

define i32 @function_32c67() local_unnamed_addr {
dec_label_pc_32c67:
  %v0_32c67 = load i32, i32* @ebp, align 4
  %v1_32c67 = add i32 %v0_32c67, -32
  %v2_32c67 = inttoptr i32 %v1_32c67 to i32*
  %v3_32c67 = load i32, i32* %v2_32c67, align 4
  ret i32 %v3_32c67
}

define i32 @function_32c6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_32c6c:
  %v2_32c72 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32c72 = load i32, i32* @eax, align 8
  %v4_32c72 = trunc i32 %v3_32c72 to i8
  %v5_32c72 = add i8 %v4_32c72, %v2_32c72
  %v21_32c72 = inttoptr i32 %v3_32c72 to i8*
  store i8 %v5_32c72, i8* %v21_32c72, align 1
  %v0_32c74 = load i32, i32* @edx, align 4
  %v1_32c76 = load i32, i32* @eax, align 8
  %v2_32c76 = sub i32 %v0_32c74, %v1_32c76
  ret i32 %v2_32c76
}

define i32 @function_32c92() local_unnamed_addr {
dec_label_pc_32c92:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32c92 = load i32, i32* %ecx.global-to-local, align 8
  %v1_32c92 = add i32 %v0_32c92, -1
  store i32 %v1_32c92, i32* %ecx.global-to-local, align 8
  %v0_32c94 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32c94
}

define i32 @_Z9SerializeI11CDataStream5CTxInEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_32c95:
  %v0_32cb3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_32cb3
}

define i32 @function_32cba(i32 %arg1) local_unnamed_addr {
dec_label_pc_32cba:
  %v0_32cba = load i32, i32* @ebp, align 4
  %v1_32cba = add i32 %v0_32cba, 1
  store i32 %v1_32cba, i32* @ebp, align 4
  %v1_32cbe = add i32 %v0_32cba, -39
  %v2_32cbe = inttoptr i32 %v1_32cbe to i32*
  %v3_32cbe = load i32, i32* %v2_32cbe, align 4
  %v1_32cc5 = add i32 %v0_32cba, -35
  %v2_32cc5 = inttoptr i32 %v1_32cc5 to i32*
  %v3_32cc5 = load i32, i32* %v2_32cc5, align 4
  %v1_32ccc = add i32 %v0_32cba, -27
  %v2_32ccc = inttoptr i32 %v1_32ccc to i32*
  %v3_32ccc = load i32, i32* %v2_32ccc, align 4
  %v1_32cd3 = add i32 %v0_32cba, -31
  %v2_32cd3 = inttoptr i32 %v1_32cd3 to i32*
  %v3_32cd3 = load i32, i32* %v2_32cd3, align 4
  %v4_32cd9 = call i32 @unknown_673b9(i32 %v3_32cd3, i32 %v3_32ccc, i32 %v3_32cc5, i32 %v3_32cbe)
  %v0_32cde = load i32, i32* @ebp, align 4
  %v1_32cde = add i32 %v0_32cde, -12
  %v2_32cde = inttoptr i32 %v1_32cde to i32*
  %v3_32cde = load i32, i32* %v2_32cde, align 4
  %v1_32ce1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32ce1 = xor i32 %v1_32ce1, %v3_32cde
  %v3_32ce1 = icmp eq i32 %v2_32ce1, 0
  store i32 %v2_32ce1, i32* @eax, align 8
  br i1 %v3_32ce1, label %bb, label %dec_label_pc_32cea

bb:                                               ; preds = %dec_label_pc_32cba
  %v1_32ce8 = call i32 @function_32cef()
  br label %dec_label_pc_32cea

dec_label_pc_32cea:                               ; preds = %bb, %dec_label_pc_32cba
  %v2_32ce8 = phi i32 [ %v1_32ce8, %bb ], [ %v2_32ce1, %dec_label_pc_32cba ]
  ret i32 %v2_32ce8

; uselistorder directives
  uselistorder i32 -31, { 0, 4, 1, 2, 3 }
}

define i32 @function_32cef() local_unnamed_addr {
dec_label_pc_32cef:
  %v0_32cf0 = load i32, i32* @eax, align 8
  ret i32 %v0_32cf0
}

define i32 @_Z9SerializeI11CDataStream6CTxOutEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_32cf1:
  ret i32 %arg4
}

define i32 @function_32d22(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d22:
  %v0_32d22 = load i32, i32* @ebp, align 4
  %v1_32d29 = add i32 %v0_32d22, 2
  store i32 %v1_32d29, i32* @ebp, align 4
  %v1_32d2f = add i32 %v0_32d22, -30
  %v2_32d2f = inttoptr i32 %v1_32d2f to i32*
  %v3_32d2f = load i32, i32* %v2_32d2f, align 4
  %v1_32d35 = call i32 @unknown_674e9(i32 %v3_32d2f)
  %v0_32d3a = load i32, i32* @ebp, align 4
  %v1_32d3a = add i32 %v0_32d3a, -12
  %v2_32d3a = inttoptr i32 %v1_32d3a to i32*
  %v3_32d3a = load i32, i32* %v2_32d3a, align 4
  %v1_32d3d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32d3d = xor i32 %v1_32d3d, %v3_32d3a
  %v3_32d3d = icmp eq i32 %v2_32d3d, 0
  store i32 %v2_32d3d, i32* @eax, align 8
  br i1 %v3_32d3d, label %bb, label %dec_label_pc_32d46

bb:                                               ; preds = %dec_label_pc_32d22
  %v1_32d44 = call i32 @function_32d4b()
  br label %dec_label_pc_32d46

dec_label_pc_32d46:                               ; preds = %bb, %dec_label_pc_32d22
  %v2_32d44 = phi i32 [ %v1_32d44, %bb ], [ %v2_32d3d, %dec_label_pc_32d22 ]
  ret i32 %v2_32d44
}

define i32 @function_32d4b() local_unnamed_addr {
dec_label_pc_32d4b:
  %v0_32d4c = load i32, i32* @eax, align 8
  ret i32 %v0_32d4c
}

define i32 @_ZSt10_ConstructIN11json_spirit10Value_implINS0_13Config_vectorISsEEEES4_EvPT_RKT0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d4d:
  ret i32 %arg1
}

define i32 @function_32d5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d5e:
  %eax.global-to-local = alloca i32, align 4
  %v0_32d5e = load i32, i32* @eax, align 8
  %v11_32d5e = or i32 %v0_32d5e, 137
  store i32 %v11_32d5e, i32* %eax.global-to-local, align 8
  %v0_32d60 = load i32, i32* @ebp, align 4
  %v1_32d60 = add i32 %v0_32d60, 1
  store i32 %v1_32d60, i32* @ebp, align 4
  %v1_32d61 = add i32 %v0_32d60, -94
  %v2_32d61 = inttoptr i32 %v1_32d61 to i8*
  %v3_32d61 = load i8, i8* %v2_32d61, align 1
  %v5_32d61 = mul i8 %v3_32d61, 2
  store i8 %v5_32d61, i8* %v2_32d61, align 1
  %v16_32d61 = icmp slt i8 %v3_32d61, 0
  %v0_32d64 = load i32, i32* %eax.global-to-local, align 8
  %v3_32d64 = zext i1 %v16_32d61 to i32
  %v4_32d64 = add i32 %v0_32d64, %v3_32d64
  %v22_32d64 = and i32 %v4_32d64, 255
  %v24_32d64 = and i32 %v0_32d64, -256
  %v25_32d64 = or i32 %v22_32d64, %v24_32d64
  store i32 %v25_32d64, i32* %eax.global-to-local, align 8
  ret i32 %v25_32d64

; uselistorder directives
  uselistorder i32 %v0_32d64, { 1, 0 }
  uselistorder i8 %v3_32d61, { 1, 0 }
}

define i32 @function_32daf() local_unnamed_addr {
dec_label_pc_32daf:
  %v0_32daf = load i32, i32* @ebp, align 4
  %v1_32daf = add i32 %v0_32daf, -28
  %v2_32daf = inttoptr i32 %v1_32daf to i32*
  %v3_32daf = load i32, i32* %v2_32daf, align 4
  ret i32 %v3_32daf
}

define i32 @function_32db6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32db6:
  %v2_32db6 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32db6 = load i32, i32* @eax, align 8
  %v4_32db6 = trunc i32 %v3_32db6 to i8
  %v5_32db6 = add i8 %v4_32db6, %v2_32db6
  %v21_32db6 = inttoptr i32 %v3_32db6 to i8*
  store i8 %v5_32db6, i8* %v21_32db6, align 1
  %v0_32db8 = load i32, i32* @ebp, align 4
  %v1_32db8 = load i32, i32* @eax, align 8
  %v3_32db8 = add i32 %v0_32db8, -24
  %v4_32db8 = add i32 %v3_32db8, %v1_32db8
  %v5_32db8 = inttoptr i32 %v4_32db8 to i8*
  %v6_32db8 = load i8, i8* %v5_32db8, align 1
  %v7_32db8 = load i32, i32* @edx, align 4
  %v8_32db8 = udiv i32 %v7_32db8, 256
  %v9_32db8 = trunc i32 %v8_32db8 to i8
  %v10_32db8 = add i8 %v9_32db8, %v6_32db8
  store i8 %v10_32db8, i8* %v5_32db8, align 1
  %v31_32db8 = load i32, i32* @eax, align 8
  ret i32 %v31_32db8
}

define i32 @function_32dbf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32dbf:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_32dbf = load i32, i32* %ebx.global-to-local, align 4
  %v1_32dbf = add i32 %v0_32dbf, 1583037636
  %v2_32dbf = inttoptr i32 %v1_32dbf to i32*
  %v3_32dbf = load i32, i32* %v2_32dbf, align 4
  %v4_32dbf = add i32 %v3_32dbf, 1
  store i32 %v4_32dbf, i32* %v2_32dbf, align 4
  %v0_32dc7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32dc7
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEC1EjRKS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32dc8:
  ret i32 %arg1
}

define i32 @function_32dd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_32dd6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_32dd6 = load i32, i32* @ebp, align 4
  %v0_32dd7 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_32dd7 = or i32 %v0_32dd7, 137
  store i32 %v11_32dd7, i32* %eax.global-to-local, align 8
  %v0_32dda = load i32, i32* @ecx, align 8
  %v1_32dda = add i32 %v0_32dda, 255
  %v1_32ddc = add i32 %v0_32dd6, 3
  store i32 %v1_32ddc, i32* @ebp, align 4
  %v1_32ddd = add i32 %v0_32dda, -1587159996
  %v2_32ddd = inttoptr i32 %v1_32ddd to i8*
  %v3_32ddd = load i8, i8* %v2_32ddd, align 1
  %v5_32ddd = trunc i32 %v1_32dda to i8
  %v8_32ddd = add i8 %v3_32ddd, %v5_32ddd
  %v28_32ddd = icmp ult i8 %v8_32ddd, %v3_32ddd
  store i1 %v28_32ddd, i1* %cf.global-to-local, align 1
  store i8 %v8_32ddd, i8* %v2_32ddd, align 1
  %v0_32de3 = load i32, i32* %eax.global-to-local, align 8
  %v1_32de3 = trunc i32 %v0_32de3 to i8
  %v2_32de3 = load i1, i1* %cf.global-to-local, align 1
  %v3_32de3 = zext i1 %v2_32de3 to i8
  %v4_32de3 = add i8 %v3_32de3, %v1_32de3
  %v19_32de3 = icmp ule i8 %v4_32de3, %v1_32de3
  %v21_32de3 = icmp eq i1 %v2_32de3, %v19_32de3
  store i1 %v21_32de3, i1* %cf.global-to-local, align 1
  %v22_32de3 = zext i8 %v4_32de3 to i32
  %v24_32de3 = and i32 %v0_32de3, -256
  %v25_32de3 = or i32 %v22_32de3, %v24_32de3
  store i32 %v25_32de3, i32* %eax.global-to-local, align 8
  %v1_32de5 = inttoptr i32 %v25_32de3 to i8*
  %v2_32de5 = load i8, i8* %v1_32de5, align 1
  %v5_32de5 = add i8 %v2_32de5, %v4_32de3
  store i8 %v5_32de5, i8* %v1_32de5, align 1
  %v0_32de7 = load i32, i32* %eax.global-to-local, align 8
  %v1_32de7 = load i32, i32* @ebp, align 4
  %v2_32de7 = add i32 %v1_32de7, -12
  %v3_32de7 = inttoptr i32 %v2_32de7 to i32*
  store i32 %v0_32de7, i32* %v3_32de7, align 4
  store i1 false, i1* @cf, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_32dec = load i32, i32* @ebp, align 4
  %v1_32dec = add i32 %v0_32dec, -28
  %v2_32dec = inttoptr i32 %v1_32dec to i32*
  %v3_32dec = load i32, i32* %v2_32dec, align 4
  store i32 %v3_32dec, i32* %eax.global-to-local, align 8
  %v1_32def = add i32 %v0_32dec, -36
  %v2_32def = inttoptr i32 %v1_32def to i32*
  %v3_32def = load i32, i32* %v2_32def, align 4
  %v2_32df9 = call i32 @unknown_67666(i32 %v3_32dec, i32 %v3_32def)
  store i32 %v2_32df9, i32* %eax.global-to-local, align 8
  %v0_32dfe = load i32, i32* @ebp, align 4
  %v1_32dfe = add i32 %v0_32dfe, -32
  %v2_32dfe = inttoptr i32 %v1_32dfe to i32*
  %v3_32dfe = load i32, i32* %v2_32dfe, align 4
  store i32 %v3_32dfe, i32* %eax.global-to-local, align 8
  %v1_32e05 = add i32 %v0_32dfe, -28
  %v2_32e05 = inttoptr i32 %v1_32e05 to i32*
  %v3_32e05 = load i32, i32* %v2_32e05, align 4
  store i32 %v3_32e05, i32* %eax.global-to-local, align 8
  %v2_32e0b = call i32 @unknown_59db0(i32 %v3_32e05, i32 %v3_32dfe)
  store i32 %v2_32e0b, i32* %eax.global-to-local, align 8
  %v0_32e12 = load i32, i32* @ebp, align 4
  %v1_32e12 = add i32 %v0_32e12, -28
  %v2_32e12 = inttoptr i32 %v1_32e12 to i32*
  %v3_32e12 = load i32, i32* %v2_32e12, align 4
  store i32 %v3_32e12, i32* %eax.global-to-local, align 8
  %v2_32e15 = inttoptr i32 %v3_32e12 to i32*
  store i32 %v2_32e0b, i32* %v2_32e15, align 4
  %v0_32e17 = load i32, i32* @ebp, align 4
  %v1_32e17 = add i32 %v0_32e17, -28
  %v2_32e17 = inttoptr i32 %v1_32e17 to i32*
  %v3_32e17 = load i32, i32* %v2_32e17, align 4
  store i32 %v3_32e17, i32* %eax.global-to-local, align 8
  %v1_32e1a = inttoptr i32 %v3_32e17 to i32*
  %v2_32e1a = load i32, i32* %v1_32e1a, align 4
  %v3_32e1c = load i32, i32* %v2_32e17, align 4
  store i32 %v3_32e1c, i32* %eax.global-to-local, align 8
  %v2_32e1f = add i32 %v3_32e1c, 4
  %v3_32e1f = inttoptr i32 %v2_32e1f to i32*
  store i32 %v2_32e1a, i32* %v3_32e1f, align 4
  %v0_32e22 = load i32, i32* @ebp, align 4
  %v1_32e22 = add i32 %v0_32e22, -28
  %v2_32e22 = inttoptr i32 %v1_32e22 to i32*
  %v3_32e22 = load i32, i32* %v2_32e22, align 4
  store i32 %v3_32e22, i32* %eax.global-to-local, align 8
  %v1_32e25 = inttoptr i32 %v3_32e22 to i32*
  %v2_32e25 = load i32, i32* %v1_32e25, align 4
  store i32 %v2_32e25, i32* @ecx, align 8
  ret i32 %v3_32e22

; uselistorder directives
  uselistorder i8 %v4_32de3, { 0, 2, 1 }
  uselistorder i8 %v1_32de3, { 1, 0 }
  uselistorder i8 %v3_32ddd, { 1, 0 }
}

define i32 @function_32e2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e2c:
  %v0_32e2c = load i32, i32* @eax, align 8
  %v2_32e2c = mul i32 %v0_32e2c, 4
  %v1_32e2f = load i32, i32* @edx, align 4
  %v2_32e2f = add i32 %v1_32e2f, %v2_32e2c
  %v2_32e31 = mul i32 %v2_32e2f, 4
  %v0_32e34 = load i32, i32* @ecx, align 8
  %v3_32e34 = add i32 %v0_32e34, %v2_32e31
  %v0_32e37 = load i32, i32* @ebp, align 4
  %v1_32e37 = add i32 %v0_32e37, -28
  %v2_32e37 = inttoptr i32 %v1_32e37 to i32*
  %v3_32e37 = load i32, i32* %v2_32e37, align 4
  %v2_32e3a = add i32 %v3_32e37, 8
  %v3_32e3a = inttoptr i32 %v2_32e3a to i32*
  store i32 %v3_32e34, i32* %v3_32e3a, align 4
  %v0_32e3d = load i32, i32* @ebp, align 4
  %v1_32e3d = add i32 %v0_32e3d, -12
  %v2_32e3d = inttoptr i32 %v1_32e3d to i32*
  %v3_32e3d = load i32, i32* %v2_32e3d, align 4
  %v1_32e40 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32e40 = xor i32 %v1_32e40, %v3_32e3d
  %v3_32e40 = icmp eq i32 %v2_32e40, 0
  store i32 %v2_32e40, i32* @eax, align 8
  br i1 %v3_32e40, label %bb, label %dec_label_pc_32e49

bb:                                               ; preds = %dec_label_pc_32e2c
  %v1_32e47 = call i32 @function_32e67()
  store i32 %v1_32e47, i32* @eax, align 8
  br label %dec_label_pc_32e49

dec_label_pc_32e49:                               ; preds = %bb, %dec_label_pc_32e2c
  %v0_32e49 = call i32 @function_32e62()
  ret i32 %v0_32e49
}

define i32 @function_32e4c() local_unnamed_addr {
dec_label_pc_32e4c:
  %eax.global-to-local = alloca i32, align 4
  %v0_32e4c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32e4c
}

define i32 @function_32e5b(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e5b:
  %v0_32e5b = load i32, i32* @eax, align 8
  %v2_32e5b = add i32 %v0_32e5b, 36
  %v16_32e5b = and i32 %v2_32e5b, 255
  %v18_32e5b = and i32 %v0_32e5b, -256
  %v19_32e5b = or i32 %v16_32e5b, %v18_32e5b
  ret i32 %v19_32e5b

; uselistorder directives
  uselistorder i32 %v0_32e5b, { 1, 0 }
}

define i32 @function_32e62() local_unnamed_addr {
dec_label_pc_32e62:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32e67() local_unnamed_addr {
dec_label_pc_32e67:
  %v0_32e6c = load i32, i32* @eax, align 8
  ret i32 %v0_32e6c
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_S6_ET0_T_SF_SE_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_32e6d:
  ret i32 0
}

define i32 @function_32e98(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e98:
  %v0_32e9e = load i32, i32* @ebp, align 4
  %v1_32e9e = add i32 %v0_32e9e, 1
  store i32 %v1_32e9e, i32* @ebp, align 4
  %v1_32ea4 = add i32 %v0_32e9e, -27
  %v2_32ea4 = inttoptr i32 %v1_32ea4 to i32*
  %v3_32ea4 = load i32, i32* %v2_32ea4, align 4
  %v1_32eaa = call i32 @unknown_6776a(i32 %v3_32ea4)
  store i32 %v1_32eaa, i32* @eax, align 8
  %v0_32eaf = load i32, i32* @ebp, align 4
  %v1_32eaf = add i32 %v0_32eaf, -12
  %v2_32eaf = inttoptr i32 %v1_32eaf to i32*
  %v3_32eaf = load i32, i32* %v2_32eaf, align 4
  %v1_32eb2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_32eb2 = icmp eq i32 %v1_32eb2, %v3_32eaf
  br i1 %v3_32eb2, label %bb, label %dec_label_pc_32ebb

bb:                                               ; preds = %dec_label_pc_32e98
  %v1_32eb9 = call i32 @function_32ec0()
  br label %dec_label_pc_32ebb

dec_label_pc_32ebb:                               ; preds = %bb, %dec_label_pc_32e98
  %v3_32eb9 = phi i32 [ %v1_32eb9, %bb ], [ %v1_32eaa, %dec_label_pc_32e98 ]
  ret i32 %v3_32eb9
}

define i32 @function_32ec0() local_unnamed_addr {
dec_label_pc_32ec0:
  %v0_32ec1 = load i32, i32* @eax, align 8
  ret i32 %v0_32ec1
}

define i32 @_Z12SerReadWriteI11CDataStream7uint256EjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_32ec2:
  %v4_32ee0 = zext i8 %arg5 to i32
  ret i32 %v4_32ee0
}

define i32 @function_32ee8(i32 %arg1) local_unnamed_addr {
dec_label_pc_32ee8:
  %v0_32ee8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_32eed = load i32, i32* @ebp, align 4
  %v2_32eed = add i32 %v1_32eed, -12
  %v3_32eed = inttoptr i32 %v2_32eed to i32*
  store i32 %v0_32ee8, i32* %v3_32eed, align 4
  %v0_32ef2 = load i32, i32* @ebp, align 4
  %v1_32ef2 = add i32 %v0_32ef2, -40
  %v2_32ef2 = inttoptr i32 %v1_32ef2 to i32*
  %v3_32ef2 = load i32, i32* %v2_32ef2, align 4
  %v1_32ef9 = add i32 %v0_32ef2, -36
  %v2_32ef9 = inttoptr i32 %v1_32ef9 to i32*
  %v3_32ef9 = load i32, i32* %v2_32ef9, align 4
  %v1_32f00 = add i32 %v0_32ef2, -32
  %v2_32f00 = inttoptr i32 %v1_32f00 to i32*
  %v3_32f00 = load i32, i32* %v2_32f00, align 4
  %v1_32f07 = add i32 %v0_32ef2, -28
  %v2_32f07 = inttoptr i32 %v1_32f07 to i32*
  %v3_32f07 = load i32, i32* %v2_32f07, align 4
  %v4_32f0d = call i32 @unknown_65f76(i32 %v3_32f07, i32 %v3_32f00, i32 %v3_32ef9, i32 %v3_32ef2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_32ef2, { 1, 0, 2, 3 }
}

define i32 @function_32f1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f1c:
  %v0_32f1c = load i32, i32* @eax, align 8
  %v1_32f1c = load i1, i1* @cf, align 1
  %v2_32f1c = zext i1 %v1_32f1c to i32
  %v3_32f1c = add i32 %v0_32f1c, 20
  %v4_32f1c = add i32 %v3_32f1c, %v2_32f1c
  %v14_32f1c = icmp eq i32 %v4_32f1c, 0
  %v22_32f1c = icmp ule i32 %v4_32f1c, %v0_32f1c
  %v23_32f1c = icmp ugt i32 %v0_32f1c, -21
  %v24_32f1c = select i1 %v1_32f1c, i1 %v22_32f1c, i1 %v23_32f1c
  store i1 %v24_32f1c, i1* @cf, align 1
  store i32 %v4_32f1c, i32* @eax, align 8
  br i1 %v14_32f1c, label %bb, label %dec_label_pc_32f23

bb:                                               ; preds = %dec_label_pc_32f1c
  %v1_32f21 = call i32 @function_32f28()
  br label %dec_label_pc_32f23

dec_label_pc_32f23:                               ; preds = %bb, %dec_label_pc_32f1c
  %v2_32f21 = phi i32 [ %v1_32f21, %bb ], [ %v4_32f1c, %dec_label_pc_32f1c ]
  ret i32 %v2_32f21

; uselistorder directives
  uselistorder i32 %v4_32f1c, { 0, 2, 1, 3 }
}

define i32 @function_32f28() local_unnamed_addr {
dec_label_pc_32f28:
  %v0_32f29 = load i32, i32* @eax, align 8
  ret i32 %v0_32f29
}

define i32 @_Z12SerReadWriteI11CDataStreamjEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_32f2a:
  ret i32 %arg4
}

define i32 @function_32f49(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32f49:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_32f4b = load i32, i32* @eax, align 8
  %v1_32f4b = add i32 %v0_32f4b, -1587161275
  %v2_32f4b = inttoptr i32 %v1_32f4b to i8*
  %v3_32f4b = load i8, i8* %v2_32f4b, align 1
  %v4_32f4b = load i32, i32* @ecx, align 8
  %v5_32f4b = trunc i32 %v4_32f4b to i8
  %v6_32f4b = load i1, i1* @cf, align 1
  %v7_32f4b = zext i1 %v6_32f4b to i8
  %v8_32f4b = sub i8 %v3_32f4b, %v5_32f4b
  %v9_32f4b = add i8 %v8_32f4b, %v7_32f4b
  %v19_32f4b = sub i8 %v8_32f4b, %v7_32f4b
  %v20_32f4b = icmp ult i8 %v3_32f4b, %v19_32f4b
  %v21_32f4b = icmp ne i8 %v5_32f4b, -1
  %v22_32f4b = or i1 %v21_32f4b, %v20_32f4b
  %v23_32f4b = icmp ult i8 %v3_32f4b, %v5_32f4b
  %v24_32f4b = select i1 %v6_32f4b, i1 %v22_32f4b, i1 %v23_32f4b
  store i1 %v24_32f4b, i1* %cf.global-to-local, align 1
  store i8 %v9_32f4b, i8* %v2_32f4b, align 1
  %v0_32f51 = load i32, i32* @eax, align 8
  %v1_32f51 = trunc i32 %v0_32f51 to i8
  %v2_32f51 = load i1, i1* %cf.global-to-local, align 1
  %v3_32f51 = zext i1 %v2_32f51 to i8
  %v4_32f51 = add i8 %v3_32f51, %v1_32f51
  %v19_32f51 = icmp ule i8 %v4_32f51, %v1_32f51
  %v21_32f51 = icmp eq i1 %v2_32f51, %v19_32f51
  store i1 %v21_32f51, i1* %cf.global-to-local, align 1
  %v22_32f51 = zext i8 %v4_32f51 to i32
  %v24_32f51 = and i32 %v0_32f51, -256
  %v25_32f51 = or i32 %v22_32f51, %v24_32f51
  store i32 %v25_32f51, i32* %eax.global-to-local, align 8
  %v1_32f53 = inttoptr i32 %v25_32f51 to i8*
  %v2_32f53 = load i8, i8* %v1_32f53, align 1
  %v5_32f53 = add i8 %v2_32f53, %v4_32f51
  store i8 %v5_32f53, i8* %v1_32f53, align 1
  %v0_32f55 = load i32, i32* %eax.global-to-local, align 8
  %v1_32f55 = load i32, i32* @ebp, align 4
  %v2_32f55 = add i32 %v1_32f55, -12
  %v3_32f55 = inttoptr i32 %v2_32f55 to i32*
  store i32 %v0_32f55, i32* %v3_32f55, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_32f5a = load i32, i32* @ebp, align 4
  %v1_32f5a = add i32 %v0_32f5a, -40
  %v2_32f5a = inttoptr i32 %v1_32f5a to i32*
  %v3_32f5a = load i32, i32* %v2_32f5a, align 4
  store i32 %v3_32f5a, i32* %eax.global-to-local, align 8
  %v1_32f61 = add i32 %v0_32f5a, -36
  %v2_32f61 = inttoptr i32 %v1_32f61 to i32*
  %v3_32f61 = load i32, i32* %v2_32f61, align 4
  store i32 %v3_32f61, i32* %eax.global-to-local, align 8
  %v1_32f68 = add i32 %v0_32f5a, -32
  %v2_32f68 = inttoptr i32 %v1_32f68 to i32*
  %v3_32f68 = load i32, i32* %v2_32f68, align 4
  store i32 %v3_32f68, i32* %eax.global-to-local, align 8
  %v1_32f6f = add i32 %v0_32f5a, -28
  %v2_32f6f = inttoptr i32 %v1_32f6f to i32*
  %v3_32f6f = load i32, i32* %v2_32f6f, align 4
  store i32 %v3_32f6f, i32* %eax.global-to-local, align 8
  %v4_32f75 = call i32 @unknown_67876(i32 %v3_32f6f, i32 %v3_32f68, i32 %v3_32f61, i32 %v3_32f5a)
  store i32 0, i32* @eax, align 8
  %v0_32f7f = load i32, i32* @ebp, align 4
  %v1_32f7f = add i32 %v0_32f7f, -12
  %v2_32f7f = inttoptr i32 %v1_32f7f to i32*
  %v3_32f7f = load i32, i32* %v2_32f7f, align 4
  %v1_32f82 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_32f82 = icmp eq i32 %v1_32f82, %v3_32f7f
  br i1 %v3_32f82, label %bb, label %dec_label_pc_32f8b

bb:                                               ; preds = %dec_label_pc_32f49
  %v1_32f89 = call i32 @function_32f90()
  store i32 %v1_32f89, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_32f8b

dec_label_pc_32f8b:                               ; preds = %bb, %dec_label_pc_32f49
  %v2_32f89 = phi i32 [ %v1_32f89, %bb ], [ 0, %dec_label_pc_32f49 ]
  ret i32 %v2_32f89

; uselistorder directives
  uselistorder i32 %v0_32f5a, { 1, 0, 2, 3 }
  uselistorder i8 %v4_32f51, { 0, 2, 1 }
  uselistorder i8 %v1_32f51, { 1, 0 }
  uselistorder i8 %v5_32f4b, { 1, 0, 2 }
}

define i32 @function_32f90() local_unnamed_addr {
dec_label_pc_32f90:
  %v0_32f91 = load i32, i32* @eax, align 8
  ret i32 %v0_32f91
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE6resizeEjS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32f92:
  %stack_var_-20 = alloca i32, align 4
  %v1_32fbc = call i32 @unknown_49a60(i32 %arg1)
  %v10_32fc1 = icmp ult i32 %v1_32fbc, %arg2
  %v5_32fc7 = icmp eq i1 %v10_32fc1, false
  %v1_33017 = call i32 @unknown_49a60(i32 %arg1)
  br i1 %v5_32fc7, label %dec_label_pc_33011, label %dec_label_pc_32fcb

dec_label_pc_32fcb:                               ; preds = %dec_label_pc_32f92
  %v2_32fdb = sub i32 %arg2, %v1_33017
  %v2_32fdd = ptrtoint i32* %stack_var_-20 to i32
  %v2_32fea = call i32 @unknown_5e2be(i32 %v2_32fdd, i32 %arg1)
  %v3_32ffd = load i32, i32* %stack_var_-20, align 4
  %v4_3300a = call i32 @unknown_67934(i32 %arg1, i32 %v3_32ffd, i32 %v2_32fdb, i32 %arg3)
  %v1_3300f = call i32 @function_33042(i32 %arg1)
  ret i32 %v1_3300f

dec_label_pc_33011:                               ; preds = %dec_label_pc_32f92
  %tmp112 = icmp ule i32 %v1_33017, %arg2
  %v3_3301f = icmp ne i1 %tmp112, true
  %v4_3301f = zext i1 %v3_3301f to i32
  %v6_3301f = and i32 %v1_33017, -256
  %v7_3301f = or i32 %v4_3301f, %v6_3301f
  ret i32 %v7_3301f

; uselistorder directives
  uselistorder i32 %v1_33017, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_33042, { 1, 0 }
  uselistorder i32 (i32)* @unknown_49a60, { 1, 0 }
}

define i32 @function_33026(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33026:
  %v0_33026 = load i32, i32* @ebp, align 4
  %v1_33026 = add i32 %v0_33026, -28
  %v2_33026 = inttoptr i32 %v1_33026 to i32*
  %v3_33026 = load i32, i32* %v2_33026, align 4
  %v1_33029 = inttoptr i32 %v3_33026 to i32*
  %v2_33029 = load i32, i32* %v1_33029, align 4
  %v1_3302b = add i32 %v0_33026, -32
  %v2_3302b = inttoptr i32 %v1_3302b to i32*
  %v3_3302b = load i32, i32* %v2_3302b, align 4
  %v2_3302e = mul i32 %v3_3302b, 32
  %v2_33031 = add i32 %v2_3302e, %v2_33029
  %v3_33037 = load i32, i32* %v2_33026, align 4
  %v2_3303d = call i32 @unknown_4f762(i32 %v3_33037, i32 %v2_33031)
  ret i32 %v2_3303d
}

define i32 @function_33042(i32 %arg1) local_unnamed_addr {
dec_label_pc_33042:
  %v0_33042 = load i32, i32* @ebp, align 4
  %v1_33042 = add i32 %v0_33042, -12
  %v2_33042 = inttoptr i32 %v1_33042 to i32*
  %v3_33042 = load i32, i32* %v2_33042, align 4
  %v1_33045 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_33045 = xor i32 %v1_33045, %v3_33042
  %v3_33045 = icmp eq i32 %v2_33045, 0
  store i32 %v2_33045, i32* @eax, align 8
  br i1 %v3_33045, label %bb, label %dec_label_pc_3304e

bb:                                               ; preds = %dec_label_pc_33042
  %v1_3304c = call i32 @function_33053()
  br label %dec_label_pc_3304e

dec_label_pc_3304e:                               ; preds = %bb, %dec_label_pc_33042
  %v2_3304c = phi i32 [ %v1_3304c, %bb ], [ %v2_33045, %dec_label_pc_33042 ]
  ret i32 %v2_3304c
}

define i32 @function_33052() local_unnamed_addr {
dec_label_pc_33052:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33053() local_unnamed_addr {
dec_label_pc_33053:
  %v0_33057 = load i32, i32* @eax, align 8
  ret i32 %v0_33057
}

define i32 @_Z11UnserializeI11CDataStream12CTransactionEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_33058:
  ret i32 %arg4
}

define i32 @function_33074(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33074:
  %eax.global-to-local = alloca i32, align 4
  %v0_33074 = load i32, i32* @ebp, align 4
  %v1_33074 = add i32 %v0_33074, 1
  store i32 %v1_33074, i32* @ebp, align 4
  %v2_33075 = add i32 %v0_33074, -94
  %v3_33075 = inttoptr i32 %v2_33075 to float*
  %v4_33075 = load float, float* %v3_33075, align 4
  %v5_33075 = fpext float %v4_33075 to x86_fp80
  %v6_33075 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_33075 = fsub x86_fp80 %v5_33075, %v6_33075
  store x86_fp80 %v7_33075, x86_fp80* @st0, align 4
  %v0_33078 = load i32, i32* @eax, align 8
  %v1_33078 = trunc i32 %v0_33078 to i8
  %v2_33078 = load i1, i1* @cf, align 1
  %v3_33078 = zext i1 %v2_33078 to i8
  %v4_33078 = add i8 %v3_33078, %v1_33078
  %v22_33078 = zext i8 %v4_33078 to i32
  %v24_33078 = and i32 %v0_33078, -256
  %v25_33078 = or i32 %v22_33078, %v24_33078
  store i32 %v25_33078, i32* %eax.global-to-local, align 8
  %v1_3307a = inttoptr i32 %v25_33078 to i8*
  %v2_3307a = load i8, i8* %v1_3307a, align 1
  %v5_3307a = add i8 %v2_3307a, %v4_33078
  store i8 %v5_3307a, i8* %v1_3307a, align 1
  %v0_3307c = load i32, i32* %eax.global-to-local, align 8
  %v1_3307c = load i32, i32* @ebp, align 4
  %v2_3307c = add i32 %v1_3307c, -12
  %v3_3307c = inttoptr i32 %v2_3307c to i32*
  store i32 %v0_3307c, i32* %v3_3307c, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_33081 = load i32, i32* @ebp, align 4
  %v1_33081 = add i32 %v0_33081, -40
  %v2_33081 = inttoptr i32 %v1_33081 to i32*
  %v3_33081 = load i32, i32* %v2_33081, align 4
  store i32 %v3_33081, i32* %eax.global-to-local, align 8
  %v1_33088 = add i32 %v0_33081, -36
  %v2_33088 = inttoptr i32 %v1_33088 to i32*
  %v3_33088 = load i32, i32* %v2_33088, align 4
  store i32 %v3_33088, i32* %eax.global-to-local, align 8
  %v1_3308f = add i32 %v0_33081, -28
  %v2_3308f = inttoptr i32 %v1_3308f to i32*
  %v3_3308f = load i32, i32* %v2_3308f, align 4
  store i32 %v3_3308f, i32* %eax.global-to-local, align 8
  %v1_33096 = add i32 %v0_33081, -32
  %v2_33096 = inttoptr i32 %v1_33096 to i32*
  %v3_33096 = load i32, i32* %v2_33096, align 4
  store i32 %v3_33096, i32* %eax.global-to-local, align 8
  %v4_3309c = call i32 @unknown_67a56(i32 %v3_33096, i32 %v3_3308f, i32 %v3_33088, i32 %v3_33081)
  store i32 %v4_3309c, i32* %eax.global-to-local, align 8
  %v0_330a1 = load i32, i32* @ebp, align 4
  %v1_330a1 = add i32 %v0_330a1, -12
  %v2_330a1 = inttoptr i32 %v1_330a1 to i32*
  %v3_330a1 = load i32, i32* %v2_330a1, align 4
  store i32 %v3_330a1, i32* %eax.global-to-local, align 8
  %v1_330a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_330a4 = xor i32 %v1_330a4, %v3_330a1
  %v3_330a4 = icmp eq i32 %v2_330a4, 0
  store i32 %v2_330a4, i32* @eax, align 8
  br i1 %v3_330a4, label %bb, label %dec_label_pc_330ad

bb:                                               ; preds = %dec_label_pc_33074
  %v1_330ab = call i32 @function_330b2()
  store i32 %v1_330ab, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_330ad

dec_label_pc_330ad:                               ; preds = %bb, %dec_label_pc_33074
  %v2_330ab = phi i32 [ %v1_330ab, %bb ], [ %v2_330a4, %dec_label_pc_33074 ]
  ret i32 %v2_330ab

; uselistorder directives
  uselistorder i32 %v0_33081, { 1, 0, 2, 3 }
}

declare i32 @__stack_chk_fail.1238(i32) local_unnamed_addr

define i32 @function_330b2() local_unnamed_addr {
dec_label_pc_330b2:
  %v0_330b3 = load i32, i32* @eax, align 8
  ret i32 %v0_330b3
}

define i32 @_Z11UnserializeI11CDataStream7uint256EvRT_RT0_li(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_330b4:
  ret i32 %arg2
}

define i32 @function_330c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_330c4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_330c4 = load i32, i32* @ebp, align 4
  %v1_330c4 = add i32 %v0_330c4, 1
  %v9_330c4 = icmp eq i32 %v1_330c4, 0
  store i32 %v1_330c4, i32* %ebp.global-to-local, align 4
  %v0_330c5 = load i32, i32* @ecx, align 8
  %v1_330c5 = add i32 %v0_330c5, -1
  store i32 %v1_330c5, i32* %ecx.global-to-local, align 8
  %v2_330c5 = icmp eq i32 %v1_330c5, 0
  %v4_330c5 = or i1 %v9_330c4, %v2_330c5
  br i1 %v4_330c5, label %dec_label_pc_330c7, label %bb

bb:                                               ; preds = %dec_label_pc_330c4
  %v6_330c5 = call i32 @function_33052()
  store i32 %v6_330c5, i32* @eax, align 8
  %v0_330c7.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_330c8.pre = load i32, i32* %ecx.global-to-local, align 8
  br label %dec_label_pc_330c7

dec_label_pc_330c7:                               ; preds = %dec_label_pc_330c4, %bb
  %v30_330c8 = phi i32 [ %v1_330c5, %dec_label_pc_330c4 ], [ %v0_330c8.pre, %bb ]
  %v0_330c7 = phi i32 [ %v1_330c4, %dec_label_pc_330c4 ], [ %v0_330c7.pre, %bb ]
  %v1_330c7 = add i32 %v0_330c7, 1
  store i32 %v1_330c7, i32* %ebp.global-to-local, align 4
  %v1_330c8 = add i32 %v30_330c8, 1166793797
  %v2_330c8 = inttoptr i32 %v1_330c8 to i8*
  %v3_330c8 = load i8, i8* %v2_330c8, align 1
  %v5_330c8 = trunc i32 %v30_330c8 to i8
  %v6_330c8 = load i1, i1* @cf, align 1
  %v7_330c8 = zext i1 %v6_330c8 to i8
  %v8_330c8 = add i8 %v3_330c8, %v5_330c8
  %v9_330c8 = add i8 %v7_330c8, %v8_330c8
  %v27_330c8 = icmp ule i8 %v9_330c8, %v3_330c8
  %v28_330c8 = icmp ult i8 %v8_330c8, %v3_330c8
  %v29_330c8 = select i1 %v6_330c8, i1 %v27_330c8, i1 %v28_330c8
  store i1 %v29_330c8, i1* %cf.global-to-local, align 1
  store i8 %v9_330c8, i8* %v2_330c8, align 1
  %v0_330ce = load i32, i32* @eax, align 8
  %v1_330ce = trunc i32 %v0_330ce to i8
  %v2_330ce = load i1, i1* %cf.global-to-local, align 1
  %v3_330ce = zext i1 %v2_330ce to i8
  %v4_330ce = add i8 %v1_330ce, -119
  %v5_330ce = add i8 %v4_330ce, %v3_330ce
  %v22_330ce = icmp ule i8 %v5_330ce, %v1_330ce
  %v23_330ce = icmp ugt i8 %v1_330ce, 118
  %v24_330ce = select i1 %v2_330ce, i1 %v22_330ce, i1 %v23_330ce
  %v25_330ce = zext i8 %v5_330ce to i32
  %v27_330ce = and i32 %v0_330ce, -256
  %v28_330ce = or i32 %v25_330ce, %v27_330ce
  store i32 %v28_330ce, i32* %eax.global-to-local, align 8
  %v0_330d0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_330d0 = add i32 %v0_330d0, 1
  store i32 %v1_330d0, i32* @ebp, align 4
  %v3_330d4 = zext i1 %v24_330ce to i8
  %v4_330d4 = add i8 %v3_330d4, %v5_330ce
  %v19_330d4 = icmp ule i8 %v4_330d4, %v5_330ce
  %v21_330d4 = icmp eq i1 %v24_330ce, %v19_330d4
  store i1 %v21_330d4, i1* %cf.global-to-local, align 1
  %v22_330d4 = zext i8 %v4_330d4 to i32
  %v25_330d4 = or i32 %v22_330d4, %v27_330ce
  store i32 %v25_330d4, i32* %eax.global-to-local, align 8
  %v1_330d6 = inttoptr i32 %v25_330d4 to i8*
  %v2_330d6 = load i8, i8* %v1_330d6, align 1
  %v5_330d6 = add i8 %v2_330d6, %v4_330d4
  store i8 %v5_330d6, i8* %v1_330d6, align 1
  %v0_330d8 = load i32, i32* %eax.global-to-local, align 8
  %v1_330d8 = load i32, i32* @ebp, align 4
  %v2_330d8 = add i32 %v1_330d8, -12
  %v3_330d8 = inttoptr i32 %v2_330d8 to i32*
  store i32 %v0_330d8, i32* %v3_330d8, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_330dd = load i32, i32* @ebp, align 4
  %v1_330dd = add i32 %v0_330dd, -32
  %v2_330dd = inttoptr i32 %v1_330dd to i32*
  %v3_330dd = load i32, i32* %v2_330dd, align 4
  store i32 %v3_330dd, i32* %eax.global-to-local, align 8
  %v1_330e0 = add i32 %v0_330dd, -40
  %v2_330e0 = inttoptr i32 %v1_330e0 to i32*
  %v3_330e0 = load i32, i32* %v2_330e0, align 4
  %v1_330e7 = add i32 %v0_330dd, -36
  %v2_330e7 = inttoptr i32 %v1_330e7 to i32*
  %v3_330e7 = load i32, i32* %v2_330e7, align 4
  %v1_330ee = add i32 %v0_330dd, -28
  %v2_330ee = inttoptr i32 %v1_330ee to i32*
  %v3_330ee = load i32, i32* %v2_330ee, align 4
  %v4_330f8 = call i32 @unknown_67bbc(i32 %v3_330dd, i32 %v3_330ee, i32 %v3_330e7, i32 %v3_330e0)
  store i32 %v4_330f8, i32* %eax.global-to-local, align 8
  %v0_330fd = load i32, i32* @ebp, align 4
  %v1_330fd = add i32 %v0_330fd, -12
  %v2_330fd = inttoptr i32 %v1_330fd to i32*
  %v3_330fd = load i32, i32* %v2_330fd, align 4
  store i32 %v3_330fd, i32* %eax.global-to-local, align 8
  %v1_33100 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_33100 = xor i32 %v1_33100, %v3_330fd
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_33100 = icmp eq i32 %v2_33100, 0
  store i32 %v2_33100, i32* @eax, align 8
  br i1 %v3_33100, label %bb10, label %dec_label_pc_33109

bb10:                                             ; preds = %dec_label_pc_330c7
  %v1_33107 = call i32 @function_3310e()
  store i32 %v1_33107, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_33109

dec_label_pc_33109:                               ; preds = %bb10, %dec_label_pc_330c7
  %v2_33107 = phi i32 [ %v1_33107, %bb10 ], [ %v2_33100, %dec_label_pc_330c7 ]
  ret i32 %v2_33107

; uselistorder directives
  uselistorder i32 %v0_330dd, { 1, 0, 2, 3 }
  uselistorder i8 %v4_330d4, { 0, 2, 1 }
  uselistorder i8 %v5_330ce, { 1, 0, 3, 2 }
  uselistorder i8 %v9_330c8, { 1, 0 }
  uselistorder i8 %v8_330c8, { 1, 0 }
  uselistorder i8 %v3_330c8, { 1, 2, 0 }
  uselistorder i32 %v30_330c8, { 1, 0 }
  uselistorder i32 %v1_330c5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_330c7, { 1, 0 }
}

define i32 @function_3310e() local_unnamed_addr {
dec_label_pc_3310e:
  %v0_3310f = load i32, i32* @eax, align 8
  ret i32 %v0_3310f
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33110:
  ret i32 178956970
}

define i32 @function_33132(i32 %arg1) local_unnamed_addr {
dec_label_pc_33132:
  %zf.global-to-local = alloca i1, align 1
  %v0_33132 = load i32, i32* @eax, align 8
  %v1_33132 = trunc i32 %v0_33132 to i8
  %v2_33132 = load i1, i1* @cf, align 1
  %v3_33132 = zext i1 %v2_33132 to i8
  %v4_33132 = add i8 %v3_33132, %v1_33132
  %v13_33132 = icmp eq i8 %v4_33132, 0
  store i1 %v13_33132, i1* %zf.global-to-local, align 1
  %v22_33132 = zext i8 %v4_33132 to i32
  %v24_33132 = and i32 %v0_33132, -256
  %v25_33132 = or i32 %v22_33132, %v24_33132
  store i32 %v25_33132, i32* @eax, align 8
  %v1_33134 = inttoptr i32 %v25_33132 to i8*
  %v2_33134 = load i8, i8* %v1_33134, align 1
  %v5_33134 = add i8 %v2_33134, %v4_33132
  %v10_33134 = icmp ult i8 %v5_33134, %v2_33134
  store i1 %v10_33134, i1* @cf, align 1
  %v15_33134 = icmp eq i8 %v5_33134, 0
  store i1 %v15_33134, i1* %zf.global-to-local, align 1
  store i8 %v5_33134, i8* %v1_33134, align 1
  %v0_33136 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_33136, label %bb, label %dec_label_pc_33132.dec_label_pc_33138_crit_edge

dec_label_pc_33132.dec_label_pc_33138_crit_edge:  ; preds = %dec_label_pc_33132
  %v2_33136.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_33138

bb:                                               ; preds = %dec_label_pc_33132
  %v1_33136 = call i32 @function_3313d()
  br label %dec_label_pc_33138

dec_label_pc_33138:                               ; preds = %dec_label_pc_33132.dec_label_pc_33138_crit_edge, %bb
  %v2_33136 = phi i32 [ %v2_33136.pre, %dec_label_pc_33132.dec_label_pc_33138_crit_edge ], [ %v1_33136, %bb ]
  ret i32 %v2_33136

; uselistorder directives
  uselistorder i8 %v2_33134, { 1, 0 }
  uselistorder label %dec_label_pc_33138, { 1, 0 }
}

define i32 @function_3313d() local_unnamed_addr {
dec_label_pc_3313d:
  %v0_3313e = load i32, i32* @eax, align 8
  ret i32 %v0_3313e
}

define i32 @_ZN5boost6detail7variant12cast_storageISsEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3313f:
  ret i32 %arg1
}

define i32 @function_3315f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3315f:
  %zf.global-to-local = alloca i1, align 1
  %v0_3315f = load i32, i32* @eax, align 8
  %v1_3315f = trunc i32 %v0_3315f to i8
  %v2_3315f = load i1, i1* @cf, align 1
  %v3_3315f = zext i1 %v2_3315f to i8
  %v4_3315f = add i8 %v3_3315f, %v1_3315f
  %v13_3315f = icmp eq i8 %v4_3315f, 0
  store i1 %v13_3315f, i1* %zf.global-to-local, align 1
  %v22_3315f = zext i8 %v4_3315f to i32
  %v24_3315f = and i32 %v0_3315f, -256
  %v25_3315f = or i32 %v22_3315f, %v24_3315f
  store i32 %v25_3315f, i32* @eax, align 8
  %v1_33161 = inttoptr i32 %v25_3315f to i8*
  %v2_33161 = load i8, i8* %v1_33161, align 1
  %v5_33161 = add i8 %v2_33161, %v4_3315f
  %v15_33161 = icmp eq i8 %v5_33161, 0
  store i1 %v15_33161, i1* %zf.global-to-local, align 1
  store i8 %v5_33161, i8* %v1_33161, align 1
  %v0_33163 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_33163, label %bb, label %dec_label_pc_3315f.dec_label_pc_33165_crit_edge

dec_label_pc_3315f.dec_label_pc_33165_crit_edge:  ; preds = %dec_label_pc_3315f
  %v2_33163.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_33165

bb:                                               ; preds = %dec_label_pc_3315f
  %v1_33163 = call i32 @function_3316a()
  br label %dec_label_pc_33165

dec_label_pc_33165:                               ; preds = %dec_label_pc_3315f.dec_label_pc_33165_crit_edge, %bb
  %v2_33163 = phi i32 [ %v2_33163.pre, %dec_label_pc_3315f.dec_label_pc_33165_crit_edge ], [ %v1_33163, %bb ]
  ret i32 %v2_33163

; uselistorder directives
  uselistorder label %dec_label_pc_33165, { 1, 0 }
}

define i32 @function_3316a() local_unnamed_addr {
dec_label_pc_3316a:
  %v0_3316b = load i32, i32* @eax, align 8
  ret i32 %v0_3316b
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitISsEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3316c:
  ret i32 %arg2
}

define i32 @function_331aa() local_unnamed_addr {
dec_label_pc_331aa:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_331aa = load i32, i32* %ecx.global-to-local, align 8
  %v1_331aa = add i32 %v0_331aa, -1
  store i32 %v1_331aa, i32* %ecx.global-to-local, align 8
  %v0_331ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_331ac
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_331ad:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_331d3

bb:                                               ; preds = %dec_label_pc_331ad
  %v2_331d1 = call i32 @function_331d8(i32 %arg1)
  br label %dec_label_pc_331d3

dec_label_pc_331d3:                               ; preds = %bb, %dec_label_pc_331ad
  %v3_331d1 = phi i32 [ %v2_331d1, %bb ], [ %arg1, %dec_label_pc_331ad ]
  ret i32 %v3_331d1
}

define i32 @function_331d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_331d8:
  %v0_331d9 = load i32, i32* @eax, align 8
  ret i32 %v0_331d9
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i() local_unnamed_addr {
dec_label_pc_331da:
  %eax.global-to-local = alloca i32, align 4
  %v5_331da = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_331da
}

define i32 @function_331db(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_331db:
  %stack_var_0 = alloca i32, align 4
  %v1_331db = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_331db, i32* @ebp, align 4
  %v1_33203 = call i32 @unknown_67d38(i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_33214

bb:                                               ; preds = %dec_label_pc_331db
  %v1_33212 = call i32 @function_33219()
  br label %dec_label_pc_33214

dec_label_pc_33214:                               ; preds = %bb, %dec_label_pc_331db
  %v2_33212 = phi i32 [ %v1_33212, %bb ], [ 0, %dec_label_pc_331db ]
  ret i32 %v2_33212
}

define i32 @function_33219() local_unnamed_addr {
dec_label_pc_33219:
  %v0_3321a = load i32, i32* @eax, align 8
  ret i32 %v0_3321a
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERT_Pv() local_unnamed_addr {
dec_label_pc_3321b:
  %eax.global-to-local = alloca i32, align 4
  %v17_3321e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3321e
}

define i32 @function_33222(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33222:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_33222 = load i32, i32* @ebp, align 4
  %v1_33222 = add i32 %v0_33222, 1
  store i32 %v1_33222, i32* @ebp, align 4
  %v0_33223 = load i32, i32* @ecx, align 8
  %v1_33223 = add i32 %v0_33223, -1587157947
  %v2_33223 = inttoptr i32 %v1_33223 to i8*
  %v3_33223 = load i8, i8* %v2_33223, align 1
  %v5_33223 = trunc i32 %v0_33223 to i8
  %v6_33223 = or i8 %v3_33223, %v5_33223
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_33223, i8* %v2_33223, align 1
  %v0_33229 = load i32, i32* @eax, align 8
  %v1_33229 = trunc i32 %v0_33229 to i8
  %v2_33229 = load i1, i1* %cf.global-to-local, align 1
  %v3_33229 = zext i1 %v2_33229 to i8
  %v4_33229 = add i8 %v3_33229, %v1_33229
  %v19_33229 = icmp ule i8 %v4_33229, %v1_33229
  %v21_33229 = icmp eq i1 %v2_33229, %v19_33229
  store i1 %v21_33229, i1* %cf.global-to-local, align 1
  %v22_33229 = zext i8 %v4_33229 to i32
  %v24_33229 = and i32 %v0_33229, -256
  %v25_33229 = or i32 %v22_33229, %v24_33229
  store i32 %v25_33229, i32* %eax.global-to-local, align 8
  %v1_3322b = inttoptr i32 %v25_33229 to i8*
  %v2_3322b = load i8, i8* %v1_3322b, align 1
  %v5_3322b = add i8 %v2_3322b, %v4_33229
  store i8 %v5_3322b, i8* %v1_3322b, align 1
  %v0_3322d = load i32, i32* %eax.global-to-local, align 8
  %v1_3322d = load i32, i32* @ebp, align 4
  %v2_3322d = add i32 %v1_3322d, -12
  %v3_3322d = inttoptr i32 %v2_3322d to i32*
  store i32 %v0_3322d, i32* %v3_3322d, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_33232 = load i32, i32* @ebp, align 4
  %v1_33232 = add i32 %v0_33232, -28
  %v2_33232 = inttoptr i32 %v1_33232 to i32*
  %v3_33232 = load i32, i32* %v2_33232, align 4
  store i32 %v3_33232, i32* @eax, align 8
  %v1_33235 = add i32 %v0_33232, -12
  %v2_33235 = inttoptr i32 %v1_33235 to i32*
  %v3_33235 = load i32, i32* %v2_33235, align 4
  %v1_33238 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_33238 = icmp eq i32 %v1_33238, %v3_33235
  br i1 %v3_33238, label %bb, label %dec_label_pc_33241

bb:                                               ; preds = %dec_label_pc_33222
  %v1_3323f = call i32 @function_33246()
  store i32 %v1_3323f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_33241

dec_label_pc_33241:                               ; preds = %bb, %dec_label_pc_33222
  %v2_3323f = phi i32 [ %v1_3323f, %bb ], [ %v3_33232, %dec_label_pc_33222 ]
  ret i32 %v2_3323f

; uselistorder directives
  uselistorder i8 %v4_33229, { 0, 2, 1 }
  uselistorder i8 %v1_33229, { 1, 0 }
}

define i32 @function_33246() local_unnamed_addr {
dec_label_pc_33246:
  %v0_33247 = load i32, i32* @eax, align 8
  ret i32 %v0_33247
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_33248:
  ret i32 %arg1
}

define i32 @function_33286() local_unnamed_addr {
dec_label_pc_33286:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_33286 = load i32, i32* %ecx.global-to-local, align 8
  %v1_33286 = add i32 %v0_33286, -1
  store i32 %v1_33286, i32* %ecx.global-to-local, align 8
  %v0_33288 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33288
}

define i32 @_ZN5boost6detail7variant12cast_storageIbEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33289:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_332af

bb:                                               ; preds = %dec_label_pc_33289
  %v2_332ad = call i32 @function_332b4(i32 %arg1)
  br label %dec_label_pc_332af

dec_label_pc_332af:                               ; preds = %bb, %dec_label_pc_33289
  %v3_332ad = phi i32 [ %v2_332ad, %bb ], [ %arg1, %dec_label_pc_33289 ]
  ret i32 %v3_332ad
}

define i32 @function_332b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_332b4:
  %v0_332b5 = load i32, i32* @eax, align 8
  ret i32 %v0_332b5
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitIbEEvRT_i() local_unnamed_addr {
dec_label_pc_332b6:
  %eax.global-to-local = alloca i32, align 4
  %v17_332b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_332b9
}

define i32 @function_332be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_332be:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_332be = load i32, i32* @ecx, align 8
  %v1_332be = add i32 %v0_332be, 1166795845
  %v2_332be = inttoptr i32 %v1_332be to i8*
  %v3_332be = load i8, i8* %v2_332be, align 1
  %v5_332be = trunc i32 %v0_332be to i8
  %v6_332be = or i8 %v3_332be, %v5_332be
  store i8 %v6_332be, i8* %v2_332be, align 1
  %v0_332c4 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_332c4 = or i32 %v0_332c4, 137
  store i32 %v11_332c4, i32* %eax.global-to-local, align 8
  %v0_332c6 = load i32, i32* @ebp, align 4
  %v0_332c7 = load i32, i32* @ecx, align 8
  %v1_332c7 = add i32 %v0_332c7, 255
  %v1_332c9 = add i32 %v0_332c6, 2
  store i32 %v1_332c9, i32* @ebp, align 4
  %v1_332ca = add i32 %v0_332c7, -1587159996
  %v2_332ca = inttoptr i32 %v1_332ca to i8*
  %v3_332ca = load i8, i8* %v2_332ca, align 1
  %v5_332ca = trunc i32 %v1_332c7 to i8
  %v8_332ca = add i8 %v3_332ca, %v5_332ca
  %v28_332ca = icmp ult i8 %v8_332ca, %v3_332ca
  store i1 %v28_332ca, i1* %cf.global-to-local, align 1
  store i8 %v8_332ca, i8* %v2_332ca, align 1
  %v0_332d0 = load i32, i32* %eax.global-to-local, align 8
  %v1_332d0 = trunc i32 %v0_332d0 to i8
  %v2_332d0 = load i1, i1* %cf.global-to-local, align 1
  %v3_332d0 = zext i1 %v2_332d0 to i8
  %v4_332d0 = add i8 %v3_332d0, %v1_332d0
  %v19_332d0 = icmp ule i8 %v4_332d0, %v1_332d0
  %v21_332d0 = icmp eq i1 %v2_332d0, %v19_332d0
  store i1 %v21_332d0, i1* %cf.global-to-local, align 1
  %v22_332d0 = zext i8 %v4_332d0 to i32
  %v24_332d0 = and i32 %v0_332d0, -256
  %v25_332d0 = or i32 %v22_332d0, %v24_332d0
  store i32 %v25_332d0, i32* %eax.global-to-local, align 8
  %v1_332d2 = inttoptr i32 %v25_332d0 to i8*
  %v2_332d2 = load i8, i8* %v1_332d2, align 1
  %v5_332d2 = add i8 %v2_332d2, %v4_332d0
  store i8 %v5_332d2, i8* %v1_332d2, align 1
  %v0_332d4 = load i32, i32* %eax.global-to-local, align 8
  %v1_332d4 = load i32, i32* @ebp, align 4
  %v2_332d4 = add i32 %v1_332d4, -12
  %v3_332d4 = inttoptr i32 %v2_332d4 to i32*
  store i32 %v0_332d4, i32* %v3_332d4, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_332d9 = load i32, i32* @ebp, align 4
  %v1_332d9 = add i32 %v0_332d9, -12
  %v2_332d9 = inttoptr i32 %v1_332d9 to i32*
  %v3_332d9 = load i32, i32* %v2_332d9, align 4
  store i32 %v3_332d9, i32* %eax.global-to-local, align 8
  %v1_332dc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_332dc = xor i32 %v1_332dc, %v3_332d9
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_332dc = icmp eq i32 %v2_332dc, 0
  store i32 %v2_332dc, i32* @eax, align 8
  br i1 %v3_332dc, label %bb, label %dec_label_pc_332e5

bb:                                               ; preds = %dec_label_pc_332be
  %v1_332e3 = call i32 @function_332ea()
  store i32 %v1_332e3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_332e5

dec_label_pc_332e5:                               ; preds = %bb, %dec_label_pc_332be
  %v3_332e3 = phi i32 [ %v1_332e3, %bb ], [ %v2_332dc, %dec_label_pc_332be ]
  ret i32 %v3_332e3

; uselistorder directives
  uselistorder i8 %v4_332d0, { 0, 2, 1 }
  uselistorder i8 %v1_332d0, { 1, 0 }
  uselistorder i8 %v3_332ca, { 1, 0 }
}

define i32 @function_332ea() local_unnamed_addr {
dec_label_pc_332ea:
  %v0_332eb = load i32, i32* @eax, align 8
  ret i32 %v0_332eb
}

define i32 @_ZN5boost6detail7variant12cast_storageIxEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_332ec:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_33312

bb:                                               ; preds = %dec_label_pc_332ec
  %v2_33310 = call i32 @function_33317(i32 %arg1)
  br label %dec_label_pc_33312

dec_label_pc_33312:                               ; preds = %bb, %dec_label_pc_332ec
  %v3_33310 = phi i32 [ %v2_33310, %bb ], [ %arg1, %dec_label_pc_332ec ]
  ret i32 %v3_33310
}

define i32 @function_33317(i32 %arg1) local_unnamed_addr {
dec_label_pc_33317:
  %v0_33318 = load i32, i32* @eax, align 8
  ret i32 %v0_33318
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitIxEEvRT_i() local_unnamed_addr {
dec_label_pc_3331a:
  %eax.global-to-local = alloca i32, align 4
  %v5_3331a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3331a
}

define i32 @function_3334d() local_unnamed_addr {
dec_label_pc_3334d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3334d = load i32, i32* %ecx.global-to-local, align 8
  %v1_3334d = add i32 %v0_3334d, -1
  store i32 %v1_3334d, i32* %ecx.global-to-local, align 8
  %v0_3334f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3334f
}

define i32 @_ZN5boost6detail7variant12cast_storageIdEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33350:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_33376

bb:                                               ; preds = %dec_label_pc_33350
  %v2_33374 = call i32 @function_3337b(i32 %arg1)
  br label %dec_label_pc_33376

dec_label_pc_33376:                               ; preds = %bb, %dec_label_pc_33350
  %v3_33374 = phi i32 [ %v2_33374, %bb ], [ %arg1, %dec_label_pc_33350 ]
  ret i32 %v3_33374
}

define i32 @function_3337b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3337b:
  %v0_3337c = load i32, i32* @eax, align 8
  ret i32 %v0_3337c
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitIdEEvRT_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3337e:
  ret i32 %arg2
}

define i32 @function_3338f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3338f:
  %cf.global-to-local = alloca i1, align 1
  %v0_3338f = load i32, i32* @ecx, align 8
  %v1_3338f = add i32 %v0_3338f, 255
  %v0_33391 = load i32, i32* @ebp, align 4
  %v1_33391 = add i32 %v0_33391, 1
  store i32 %v1_33391, i32* @ebp, align 4
  %v1_33392 = add i32 %v0_3338f, -1587159996
  %v2_33392 = inttoptr i32 %v1_33392 to i8*
  %v3_33392 = load i8, i8* %v2_33392, align 1
  %v5_33392 = trunc i32 %v1_3338f to i8
  %v6_33392 = load i1, i1* @cf, align 1
  %v7_33392 = zext i1 %v6_33392 to i8
  %v8_33392 = add i8 %v3_33392, %v5_33392
  %v9_33392 = add i8 %v7_33392, %v8_33392
  %v27_33392 = icmp ule i8 %v9_33392, %v3_33392
  %v28_33392 = icmp ult i8 %v8_33392, %v3_33392
  %v29_33392 = select i1 %v6_33392, i1 %v27_33392, i1 %v28_33392
  store i1 %v29_33392, i1* %cf.global-to-local, align 1
  store i8 %v9_33392, i8* %v2_33392, align 1
  %v0_33398 = load i32, i32* @eax, align 8
  %v1_33398 = trunc i32 %v0_33398 to i8
  %v2_33398 = load i1, i1* %cf.global-to-local, align 1
  %v3_33398 = zext i1 %v2_33398 to i8
  %v4_33398 = add i8 %v3_33398, %v1_33398
  %v19_33398 = icmp ule i8 %v4_33398, %v1_33398
  %v21_33398 = icmp eq i1 %v2_33398, %v19_33398
  store i1 %v21_33398, i1* %cf.global-to-local, align 1
  %v22_33398 = zext i8 %v4_33398 to i32
  %v24_33398 = and i32 %v0_33398, -256
  %v25_33398 = or i32 %v22_33398, %v24_33398
  ret i32 %v25_33398

; uselistorder directives
  uselistorder i8 %v4_33398, { 1, 0 }
  uselistorder i8 %v1_33398, { 1, 0 }
  uselistorder i8 %v9_33392, { 1, 0 }
  uselistorder i8 %v8_33392, { 1, 0 }
  uselistorder i8 %v3_33392, { 1, 2, 0 }
}

define i32 @function_3339a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3339a:
  %v2_3339a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3339a = load i32, i32* @eax, align 8
  %v4_3339a = trunc i32 %v3_3339a to i8
  %v5_3339a = add i8 %v4_3339a, %v2_3339a
  %v21_3339a = inttoptr i32 %v3_3339a to i8*
  store i8 %v5_3339a, i8* %v21_3339a, align 1
  %v0_3339c = load i32, i32* @eax, align 8
  %v1_3339c = load i32, i32* @ebp, align 4
  %v2_3339c = add i32 %v1_3339c, -12
  %v3_3339c = inttoptr i32 %v2_3339c to i32*
  store i32 %v0_3339c, i32* %v3_3339c, align 4
  %v0_333a1 = load i32, i32* @ebp, align 4
  %v1_333a1 = add i32 %v0_333a1, -12
  %v2_333a1 = inttoptr i32 %v1_333a1 to i32*
  %v3_333a1 = load i32, i32* %v2_333a1, align 4
  %v1_333a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_333a4 = xor i32 %v1_333a4, %v3_333a1
  %v3_333a4 = icmp eq i32 %v2_333a4, 0
  store i32 %v2_333a4, i32* @eax, align 8
  br i1 %v3_333a4, label %bb, label %dec_label_pc_333ad

bb:                                               ; preds = %dec_label_pc_3339a
  %v1_333ab = call i32 @function_333b2()
  br label %dec_label_pc_333ad

dec_label_pc_333ad:                               ; preds = %bb, %dec_label_pc_3339a
  %v2_333ab = phi i32 [ %v1_333ab, %bb ], [ %v2_333a4, %dec_label_pc_3339a ]
  ret i32 %v2_333ab
}

define i32 @function_333b2() local_unnamed_addr {
dec_label_pc_333b2:
  %v0_333b3 = load i32, i32* @eax, align 8
  ret i32 %v0_333b3
}

define i32 @_ZN5boost6detail7variant12cast_storageISsEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_333b4:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_333da

bb:                                               ; preds = %dec_label_pc_333b4
  %v2_333d8 = call i32 @function_333df(i32 %arg1)
  br label %dec_label_pc_333da

dec_label_pc_333da:                               ; preds = %bb, %dec_label_pc_333b4
  %v3_333d8 = phi i32 [ %v2_333d8, %bb ], [ %arg1, %dec_label_pc_333b4 ]
  ret i32 %v3_333d8
}

define i32 @function_333df(i32 %arg1) local_unnamed_addr {
dec_label_pc_333df:
  %v0_333e0 = load i32, i32* @eax, align 8
  ret i32 %v0_333e0
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitISsEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_333e2:
  %v2_3340b = load i32, i32* %arg1, align 4
  %v2_33418 = call i32 @__stack_chk_fail.1439(i32 4, i32 %v2_3340b)
  %v1_3341f = icmp eq i32 %v2_33418, 0
  br i1 %v1_3341f, label %bb, label %dec_label_pc_33423

bb:                                               ; preds = %dec_label_pc_333e2
  %v1_33421 = call i32 @function_3344c()
  br label %dec_label_pc_33423

dec_label_pc_33423:                               ; preds = %bb, %dec_label_pc_333e2
  ret i32 %arg2
}

define i32 @function_33432() local_unnamed_addr {
dec_label_pc_33432:
  %v0_33432 = call i32 @function_3344c()
  ret i32 %v0_33432

; uselistorder directives
  uselistorder i32 ()* @function_3344c, { 1, 0 }
}

define i32 @function_3344c() local_unnamed_addr {
dec_label_pc_3344c:
  %v0_3344c = load i32, i32* @ebp, align 4
  %v1_3344c = add i32 %v0_3344c, -28
  %v2_3344c = inttoptr i32 %v1_3344c to i32*
  %v3_3344c = load i32, i32* %v2_3344c, align 4
  %v1_3344f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3344f = xor i32 %v1_3344f, %v3_3344c
  %v3_3344f = icmp eq i32 %v2_3344f, 0
  store i32 %v2_3344f, i32* @eax, align 8
  br i1 %v3_3344f, label %bb, label %dec_label_pc_33458

bb:                                               ; preds = %dec_label_pc_3344c
  %v1_33456 = call i32 @function_3345d()
  br label %dec_label_pc_33458

dec_label_pc_33458:                               ; preds = %bb, %dec_label_pc_3344c
  %v2_33456 = phi i32 [ %v1_33456, %bb ], [ %v2_3344f, %dec_label_pc_3344c ]
  ret i32 %v2_33456
}

define i32 @function_3345d() local_unnamed_addr {
dec_label_pc_3345d:
  %v0_33464 = load i32, i32* @eax, align 8
  ret i32 %v0_33464
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33465:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3348b

bb:                                               ; preds = %dec_label_pc_33465
  %v2_33489 = call i32 @function_33490(i32 %arg1)
  br label %dec_label_pc_3348b

dec_label_pc_3348b:                               ; preds = %bb, %dec_label_pc_33465
  %v3_33489 = phi i32 [ %v2_33489, %bb ], [ %arg1, %dec_label_pc_33465 ]
  ret i32 %v3_33489
}

define i32 @function_33490(i32 %arg1) local_unnamed_addr {
dec_label_pc_33490:
  %v0_33491 = load i32, i32* @eax, align 8
  ret i32 %v0_33491
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33492:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_334cf = icmp eq i32* %arg1, null
  br i1 %v1_334cf, label %bb, label %dec_label_pc_334d3

bb:                                               ; preds = %dec_label_pc_33492
  %v2_334bb = load i32, i32* %arg1, align 4
  %v3_334d1 = call i32 @function_334fc(i32 4, i32 %v2_334bb)
  br label %dec_label_pc_334d3

dec_label_pc_334d3:                               ; preds = %bb, %dec_label_pc_33492
  %v2_334dd = call i32 @unknown_68060(i32 %tmp105, i32 %arg2)
  %v2_334e2 = call i32 @function_334fc(i32 %tmp105, i32 %arg2)
  ret i32 %v2_334e2

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_334fc, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0, 2 }
}

define i32 @function_334fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_334fc:
  %v0_334fc = load i32, i32* @ebp, align 4
  %v1_334fc = add i32 %v0_334fc, -28
  %v2_334fc = inttoptr i32 %v1_334fc to i32*
  %v3_334fc = load i32, i32* %v2_334fc, align 4
  %v1_334ff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_334ff = xor i32 %v1_334ff, %v3_334fc
  %v3_334ff = icmp eq i32 %v2_334ff, 0
  store i32 %v2_334ff, i32* @eax, align 8
  br i1 %v3_334ff, label %bb, label %dec_label_pc_33508

bb:                                               ; preds = %dec_label_pc_334fc
  %v1_33506 = call i32 @function_3350d()
  br label %dec_label_pc_33508

dec_label_pc_33508:                               ; preds = %bb, %dec_label_pc_334fc
  %v2_33506 = phi i32 [ %v1_33506, %bb ], [ %v2_334ff, %dec_label_pc_334fc ]
  ret i32 %v2_33506
}

define i32 @function_3350d() local_unnamed_addr {
dec_label_pc_3350d:
  %v0_33514 = load i32, i32* @eax, align 8
  ret i32 %v0_33514
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS5_13Config_vectorISsEEEESaIS9_EEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33515:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3353b

bb:                                               ; preds = %dec_label_pc_33515
  %v2_33539 = call i32 @function_33540(i32 %arg1)
  br label %dec_label_pc_3353b

dec_label_pc_3353b:                               ; preds = %bb, %dec_label_pc_33515
  %v3_33539 = phi i32 [ %v2_33539, %bb ], [ %arg1, %dec_label_pc_33515 ]
  ret i32 %v3_33539
}

define i32 @function_33540(i32 %arg1) local_unnamed_addr {
dec_label_pc_33540:
  %v0_33541 = load i32, i32* @eax, align 8
  ret i32 %v0_33541
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33542:
  %tmp105 = ptrtoint i32* %arg1 to i32
  store i32 %tmp105, i32* @eax, align 8
  %v2_3356b = load i32, i32* %arg1, align 4
  %v2_33578 = call i32 @function_3926e(i32 4, i32 %v2_3356b)
  %v1_3357f = icmp eq i32 %v2_33578, 0
  br i1 %v1_3357f, label %bb, label %dec_label_pc_33583

bb:                                               ; preds = %dec_label_pc_33542
  %v1_33581 = call i32 @function_335ac()
  br label %dec_label_pc_33583

dec_label_pc_33583:                               ; preds = %bb, %dec_label_pc_33542
  ret i32 %arg2
}

define i32 @function_3358e() local_unnamed_addr {
dec_label_pc_3358e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3358f = load i32, i32* %ebx.global-to-local, align 4
  %v1_3358f = add i32 %v0_3358f, -1
  store i32 %v1_3358f, i32* %ebx.global-to-local, align 4
  %v15_3358f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_3358f
}

define i32 @function_335ac() local_unnamed_addr {
dec_label_pc_335ac:
  %v0_335ac = load i32, i32* @ebp, align 4
  %v1_335ac = add i32 %v0_335ac, -28
  %v2_335ac = inttoptr i32 %v1_335ac to i32*
  %v3_335ac = load i32, i32* %v2_335ac, align 4
  ret i32 %v3_335ac
}

define i32 @function_335b2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_335b2:
  %zf.global-to-local = alloca i1, align 1
  %v0_335b2 = load i32, i32* @eax, align 8
  %v1_335b2 = trunc i32 %v0_335b2 to i8
  %v2_335b2 = load i1, i1* @cf, align 1
  %v3_335b2 = zext i1 %v2_335b2 to i8
  %v4_335b2 = add i8 %v3_335b2, %v1_335b2
  %v13_335b2 = icmp eq i8 %v4_335b2, 0
  store i1 %v13_335b2, i1* %zf.global-to-local, align 1
  %v22_335b2 = zext i8 %v4_335b2 to i32
  %v24_335b2 = and i32 %v0_335b2, -256
  %v25_335b2 = or i32 %v22_335b2, %v24_335b2
  store i32 %v25_335b2, i32* @eax, align 8
  %v1_335b4 = inttoptr i32 %v25_335b2 to i8*
  %v2_335b4 = load i8, i8* %v1_335b4, align 1
  %v5_335b4 = add i8 %v2_335b4, %v4_335b2
  %v15_335b4 = icmp eq i8 %v5_335b4, 0
  store i1 %v15_335b4, i1* %zf.global-to-local, align 1
  store i8 %v5_335b4, i8* %v1_335b4, align 1
  %v0_335b6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_335b6, label %bb, label %dec_label_pc_335b2.dec_label_pc_335b8_crit_edge

dec_label_pc_335b2.dec_label_pc_335b8_crit_edge:  ; preds = %dec_label_pc_335b2
  %v2_335b6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_335b8

bb:                                               ; preds = %dec_label_pc_335b2
  %v1_335b6 = call i32 @function_335bd()
  br label %dec_label_pc_335b8

dec_label_pc_335b8:                               ; preds = %dec_label_pc_335b2.dec_label_pc_335b8_crit_edge, %bb
  %v2_335b6 = phi i32 [ %v2_335b6.pre, %dec_label_pc_335b2.dec_label_pc_335b8_crit_edge ], [ %v1_335b6, %bb ]
  ret i32 %v2_335b6

; uselistorder directives
  uselistorder label %dec_label_pc_335b8, { 1, 0 }
}

define i32 @function_335bd() local_unnamed_addr {
dec_label_pc_335bd:
  %v0_335c4 = load i32, i32* @eax, align 8
  ret i32 %v0_335c4
}

define i32 @_ZN5boost6detail7variant12cast_storageIbEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_335c5:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_335eb

bb:                                               ; preds = %dec_label_pc_335c5
  %v2_335e9 = call i32 @function_335f0(i32 %arg1)
  br label %dec_label_pc_335eb

dec_label_pc_335eb:                               ; preds = %bb, %dec_label_pc_335c5
  %v3_335e9 = phi i32 [ %v2_335e9, %bb ], [ %arg1, %dec_label_pc_335c5 ]
  ret i32 %v3_335e9
}

define i32 @function_335f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_335f0:
  %v0_335f1 = load i32, i32* @eax, align 8
  ret i32 %v0_335f1
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitIbEEvRKT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_335f2:
  ret i32 %arg1
}

define i32 @function_335fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_335fc:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_335fc = load i32, i32* @ebp, align 4
  %v0_33600 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_33600 = or i32 %v0_33600, 137
  store i32 %v11_33600, i32* %eax.global-to-local, align 8
  %v0_33603 = load i32, i32* @ecx, align 8
  %v1_33603 = add i32 %v0_33603, 255
  %v1_33605 = add i32 %v0_335fc, 4
  store i32 %v1_33605, i32* @ebp, align 4
  %v1_33606 = add i32 %v0_33603, -1587159996
  %v2_33606 = inttoptr i32 %v1_33606 to i8*
  %v3_33606 = load i8, i8* %v2_33606, align 1
  %v5_33606 = trunc i32 %v1_33603 to i8
  %v8_33606 = add i8 %v3_33606, %v5_33606
  %v28_33606 = icmp ult i8 %v8_33606, %v3_33606
  store i1 %v28_33606, i1* %cf.global-to-local, align 1
  store i8 %v8_33606, i8* %v2_33606, align 1
  %v0_3360c = load i32, i32* %eax.global-to-local, align 8
  %v1_3360c = trunc i32 %v0_3360c to i8
  %v2_3360c = load i1, i1* %cf.global-to-local, align 1
  %v3_3360c = zext i1 %v2_3360c to i8
  %v4_3360c = add i8 %v3_3360c, %v1_3360c
  %v19_3360c = icmp ule i8 %v4_3360c, %v1_3360c
  %v21_3360c = icmp eq i1 %v2_3360c, %v19_3360c
  store i1 %v21_3360c, i1* %cf.global-to-local, align 1
  %v22_3360c = zext i8 %v4_3360c to i32
  %v24_3360c = and i32 %v0_3360c, -256
  %v25_3360c = or i32 %v22_3360c, %v24_3360c
  store i32 %v25_3360c, i32* %eax.global-to-local, align 8
  %v1_3360e = inttoptr i32 %v25_3360c to i8*
  %v2_3360e = load i8, i8* %v1_3360e, align 1
  %v5_3360e = add i8 %v2_3360e, %v4_3360c
  store i8 %v5_3360e, i8* %v1_3360e, align 1
  %v0_33610 = load i32, i32* %eax.global-to-local, align 8
  %v1_33610 = load i32, i32* @ebp, align 4
  %v2_33610 = add i32 %v1_33610, -12
  %v3_33610 = inttoptr i32 %v2_33610 to i32*
  store i32 %v0_33610, i32* %v3_33610, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_33615 = load i32, i32* @ebp, align 4
  %v1_33615 = add i32 %v0_33615, -28
  %v2_33615 = inttoptr i32 %v1_33615 to i32*
  %v3_33615 = load i32, i32* %v2_33615, align 4
  store i32 %v3_33615, i32* %eax.global-to-local, align 8
  %v1_33618 = inttoptr i32 %v3_33615 to i32*
  %v2_33618 = load i32, i32* %v1_33618, align 4
  store i32 %v2_33618, i32* @eax, align 8
  %v2_33625 = call i32 @function_3931e(i32 1, i32 %v2_33618)
  store i32 %v2_33625, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_3362a = icmp eq i32 %v2_33625, 0
  br i1 %v2_3362a, label %dec_label_pc_33636, label %dec_label_pc_3362e

dec_label_pc_3362e:                               ; preds = %dec_label_pc_335fc
  %v3_33625 = inttoptr i32 %v2_33625 to i8*
  %v0_3362e = load i32, i32* @ebp, align 4
  %v1_3362e = add i32 %v0_3362e, -32
  %v2_3362e = inttoptr i32 %v1_3362e to i32*
  %v3_3362e = load i32, i32* %v2_3362e, align 4
  %v1_33631 = inttoptr i32 %v3_3362e to i8*
  %v2_33631 = load i8, i8* %v1_33631, align 1
  store i8 %v2_33631, i8* %v3_33625, align 1
  br label %dec_label_pc_33636

dec_label_pc_33636:                               ; preds = %dec_label_pc_3362e, %dec_label_pc_335fc
  %v0_33636 = load i32, i32* @ebp, align 4
  %v1_33636 = add i32 %v0_33636, -12
  %v2_33636 = inttoptr i32 %v1_33636 to i32*
  %v3_33636 = load i32, i32* %v2_33636, align 4
  store i32 %v3_33636, i32* %eax.global-to-local, align 8
  %v1_33639 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_33639 = xor i32 %v1_33639, %v3_33636
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_33639 = icmp eq i32 %v2_33639, 0
  store i32 %v2_33639, i32* @eax, align 8
  br i1 %v3_33639, label %bb, label %dec_label_pc_33642

bb:                                               ; preds = %dec_label_pc_33636
  %v1_33640 = call i32 @function_33647()
  store i32 %v1_33640, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_33642

dec_label_pc_33642:                               ; preds = %bb, %dec_label_pc_33636
  %v2_33640 = phi i32 [ %v1_33640, %bb ], [ %v2_33639, %dec_label_pc_33636 ]
  ret i32 %v2_33640

; uselistorder directives
  uselistorder i32 %v2_33625, { 1, 0, 2 }
  uselistorder i8 %v4_3360c, { 0, 2, 1 }
  uselistorder i8 %v1_3360c, { 1, 0 }
  uselistorder i8 %v3_33606, { 1, 0 }
}

define i32 @function_33647() local_unnamed_addr {
dec_label_pc_33647:
  %v0_33648 = load i32, i32* @eax, align 8
  ret i32 %v0_33648
}

define i32 @_ZN5boost6detail7variant12cast_storageIxEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33649:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3366f

bb:                                               ; preds = %dec_label_pc_33649
  %v2_3366d = call i32 @function_33674(i32 %arg1)
  br label %dec_label_pc_3366f

dec_label_pc_3366f:                               ; preds = %bb, %dec_label_pc_33649
  %v3_3366d = phi i32 [ %v2_3366d, %bb ], [ %arg1, %dec_label_pc_33649 ]
  ret i32 %v3_3366d
}

define i32 @function_33674(i32 %arg1) local_unnamed_addr {
dec_label_pc_33674:
  %v0_33675 = load i32, i32* @eax, align 8
  ret i32 %v0_33675
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitIxEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33676:
  %edx.global-to-local = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v2_3369c = load i32, i32* %arg1, align 4
  store i32 %v2_3369c, i32* @eax, align 8
  %v2_336a9 = call i32 @function_393a2(i32 8, i32 %v2_3369c)
  %v1_336b0 = icmp eq i32 %v2_336a9, 0
  br i1 %v1_336b0, label %dec_label_pc_336c1, label %dec_label_pc_336b4

dec_label_pc_336b4:                               ; preds = %dec_label_pc_33676
  %v1_336b7 = add i32 %arg2, 4
  %v2_336b7 = inttoptr i32 %v1_336b7 to i32*
  %v3_336b7 = load i32, i32* %v2_336b7, align 4
  store i32 %v3_336b7, i32* %edx.global-to-local, align 4
  %v1_336ba = inttoptr i32 %arg2 to i32*
  %v2_336ba = load i32, i32* %v1_336ba, align 4
  %v2_336bc = inttoptr i32 %v2_336a9 to i32*
  store i32 %v2_336ba, i32* %v2_336bc, align 4
  %v0_336be = load i32, i32* %edx.global-to-local, align 4
  %v2_336be = add i32 %v2_336a9, 4
  %v3_336be = inttoptr i32 %v2_336be to i32*
  store i32 %v0_336be, i32* %v3_336be, align 4
  br label %dec_label_pc_336c1

dec_label_pc_336c1:                               ; preds = %dec_label_pc_336b4, %dec_label_pc_33676
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_336cd

bb:                                               ; preds = %dec_label_pc_336c1
  %v1_336cb = call i32 @function_336d2()
  br label %dec_label_pc_336cd

dec_label_pc_336cd:                               ; preds = %bb, %dec_label_pc_336c1
  %v2_336cb = phi i32 [ %v1_336cb, %bb ], [ 0, %dec_label_pc_336c1 ]
  ret i32 %v2_336cb

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_336d2() local_unnamed_addr {
dec_label_pc_336d2:
  %v0_336d3 = load i32, i32* @eax, align 8
  ret i32 %v0_336d3
}

define i32 @_ZN5boost6detail7variant12cast_storageIdEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_336d4:
  %v0_336e0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_336e0
}

define i32 @function_336e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_336e8:
  %v0_336eb = load i32, i32* @ebp, align 4
  %v1_336eb = add i32 %v0_336eb, -28
  %v2_336eb = inttoptr i32 %v1_336eb to i32*
  %v3_336eb = load i32, i32* %v2_336eb, align 4
  store i32 %v3_336eb, i32* @eax, align 8
  %v1_336ee = add i32 %v0_336eb, -12
  %v2_336ee = inttoptr i32 %v1_336ee to i32*
  %v3_336ee = load i32, i32* %v2_336ee, align 4
  %v1_336f1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_336f1 = icmp eq i32 %v1_336f1, %v3_336ee
  br i1 %v3_336f1, label %bb, label %dec_label_pc_336fa

bb:                                               ; preds = %dec_label_pc_336e8
  %v1_336f8 = call i32 @function_336ff()
  br label %dec_label_pc_336fa

dec_label_pc_336fa:                               ; preds = %bb, %dec_label_pc_336e8
  %v2_336f8 = phi i32 [ %v1_336f8, %bb ], [ %v3_336eb, %dec_label_pc_336e8 ]
  ret i32 %v2_336f8
}

define i32 @function_336ff() local_unnamed_addr {
dec_label_pc_336ff:
  %v0_33700 = load i32, i32* @eax, align 8
  ret i32 %v0_33700
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitIdEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33702:
  %v2_33728 = load i32, i32* %arg1, align 4
  %v2_33735 = call i32 @function_3942e(i32 8, i32 %v2_33728)
  %v2_3373a = icmp eq i32 %v2_33735, 0
  br i1 %v2_3373a, label %dec_label_pc_33745, label %dec_label_pc_3373e

dec_label_pc_3373e:                               ; preds = %dec_label_pc_33702
  %tmp114 = inttoptr i32 %arg2 to double*
  %v3_33735 = inttoptr i32 %v2_33735 to double*
  %v2_33741 = load double, double* %tmp114, align 4
  store double %v2_33741, double* %v3_33735, align 4
  br label %dec_label_pc_33745

dec_label_pc_33745:                               ; preds = %dec_label_pc_3373e, %dec_label_pc_33702
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_33751

bb:                                               ; preds = %dec_label_pc_33745
  %v1_3374f = call i32 @function_33756()
  br label %dec_label_pc_33751

dec_label_pc_33751:                               ; preds = %bb, %dec_label_pc_33745
  %v2_3374f = phi i32 [ %v1_3374f, %bb ], [ 0, %dec_label_pc_33745 ]
  ret i32 %v2_3374f

; uselistorder directives
  uselistorder i32 %v2_33735, { 1, 0 }
}

define i32 @function_33756() local_unnamed_addr {
dec_label_pc_33756:
  %v0_33757 = load i32, i32* @eax, align 8
  ret i32 %v0_33757
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_7variantISsSM_SS_bxdNS1_5void_ES1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_S1E_E18has_fallback_type_EEENT1_11result_typeEiiRS1H_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_33758:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_337a8, label %bb

bb:                                               ; preds = %dec_label_pc_33758
  %sext = mul i32 %arg6, 16777216
  %v12_337a2 = sdiv i32 %sext, 16777216
  %v13_337a2 = sext i8 %arg5 to i32
  %v14_337a2 = call i32 @function_33be1(i32 %arg8, i32 %arg7, i32 %v12_337a2, i32 %v13_337a2, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_337a8

dec_label_pc_337a8:                               ; preds = %dec_label_pc_33758, %bb
  %v2_337ab = mul i32 %arg2, 4
  %v1_337ae = add i32 %v2_337ab, ptrtoint (i32* @global_var_33c34.2899 to i32)
  %v1_337b3 = inttoptr i32 %v1_337ae to i32*
  %v2_337b3 = load i32, i32* %v1_337b3, align 4
  ret i32 %v2_337b3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_337a8, { 1, 0 }
}

define i32 @function_337b7() local_unnamed_addr {
dec_label_pc_337b7:
  %v0_337bf = load i32, i32* @ebp, align 4
  %v1_337bf = add i32 %v0_337bf, -83
  %v2_337bf = inttoptr i32 %v1_337bf to i8*
  %v3_337bf = load i8, i8* %v2_337bf, align 1
  %v1_337cf = add i32 %v0_337bf, -56
  %v2_337cf = inttoptr i32 %v1_337cf to i32*
  %v3_337cf = load i32, i32* %v2_337cf, align 4
  %v1_337d6 = add i32 %v0_337bf, -52
  %v2_337d6 = inttoptr i32 %v1_337d6 to i32*
  %v3_337d6 = load i32, i32* %v2_337d6, align 4
  %v1_337dd = add i32 %v0_337bf, -44
  %v2_337dd = inttoptr i32 %v1_337dd to i32*
  %v3_337dd = load i32, i32* %v2_337dd, align 4
  %v6_337e3 = sext i8 %v3_337bf to i32
  %v7_337e3 = call i32 @unknown_68419(i32 %v3_337dd, i32 %v3_337d6, i32 %v3_337cf, i32 0, i32 %v6_337e3, i32 1)
  store i32 %v7_337e3, i32* @eax, align 8
  %v0_337e8 = call i32 @function_33c19()
  ret i32 %v0_337e8

; uselistorder directives
  uselistorder i32 %v0_337bf, { 0, 2, 1, 3 }
  uselistorder i32 -83, { 0, 3, 1, 2, 4 }
}

define i32 @function_3380e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3380e:
  %v0_3380f = load i32, i32* @eax, align 8
  %v0_33813 = load i32, i32* @ebp, align 4
  %v1_33813 = add i32 %v0_33813, -44
  %v2_33813 = inttoptr i32 %v1_33813 to i32*
  %v3_33813 = load i32, i32* %v2_33813, align 4
  %v2_33819 = call i32 @unknown_68486(i32 %v3_33813, i32 %v0_3380f)
  store i32 %v2_33819, i32* @eax, align 8
  %v0_3381e = call i32 @function_33c19()
  ret i32 %v0_3381e
}

define i32 @function_33823() local_unnamed_addr {
dec_label_pc_33823:
  %v0_3382b = load i32, i32* @ebp, align 4
  %v1_3382b = add i32 %v0_3382b, -81
  %v2_3382b = inttoptr i32 %v1_3382b to i8*
  %v3_3382b = load i8, i8* %v2_3382b, align 1
  %v1_3383b = add i32 %v0_3382b, -56
  %v2_3383b = inttoptr i32 %v1_3383b to i32*
  %v3_3383b = load i32, i32* %v2_3383b, align 4
  %v1_33842 = add i32 %v0_3382b, -52
  %v2_33842 = inttoptr i32 %v1_33842 to i32*
  %v3_33842 = load i32, i32* %v2_33842, align 4
  %v1_33849 = add i32 %v0_3382b, -44
  %v2_33849 = inttoptr i32 %v1_33849 to i32*
  %v3_33849 = load i32, i32* %v2_33849, align 4
  %v6_3384f = sext i8 %v3_3382b to i32
  %v7_3384f = call i32 @unknown_684f3(i32 %v3_33849, i32 %v3_33842, i32 %v3_3383b, i32 0, i32 %v6_3384f, i32 1)
  store i32 %v7_3384f, i32* @eax, align 8
  %v0_33854 = call i32 @function_33c19()
  ret i32 %v0_33854

; uselistorder directives
  uselistorder i32 %v0_3382b, { 0, 2, 1, 3 }
  uselistorder i32 -81, { 0, 5, 1, 2, 3, 4 }
}

define i32 @function_33866(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33866:
  %v0_33871 = load i32, i32* @ebp, align 4
  %v1_33871 = add i32 %v0_33871, -56
  %v2_33871 = inttoptr i32 %v1_33871 to i32*
  %v3_33871 = load i32, i32* %v2_33871, align 4
  %v1_33878 = add i32 %v0_33871, -52
  %v2_33878 = inttoptr i32 %v1_33878 to i32*
  %v3_33878 = load i32, i32* %v2_33878, align 4
  %v1_3387f = add i32 %v0_33871, -44
  %v2_3387f = inttoptr i32 %v1_3387f to i32*
  %v3_3387f = load i32, i32* %v2_3387f, align 4
  %v4_33885 = call i32 @unknown_68560(i32 %v3_3387f, i32 %v3_33878, i32 %v3_33871, i32 0)
  store i32 %v4_33885, i32* @eax, align 8
  %v0_3388a = call i32 @function_33c19()
  ret i32 %v0_3388a
}

define i32 @function_338b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_338b0:
  %v0_338b1 = load i32, i32* @eax, align 8
  %v0_338b5 = load i32, i32* @ebp, align 4
  %v1_338b5 = add i32 %v0_338b5, -44
  %v2_338b5 = inttoptr i32 %v1_338b5 to i32*
  %v3_338b5 = load i32, i32* %v2_338b5, align 4
  %v2_338bb = call i32 @unknown_685cd(i32 %v3_338b5, i32 %v0_338b1)
  store i32 %v2_338bb, i32* @eax, align 8
  %v0_338c0 = call i32 @function_33c19()
  ret i32 %v0_338c0
}

define i32 @function_338e2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_338e2:
  %v0_338e4 = load i32, i32* @ebp, align 4
  %v1_338e4 = add i32 %v0_338e4, -52
  %v2_338e4 = inttoptr i32 %v1_338e4 to i32*
  %v3_338e4 = load i32, i32* %v2_338e4, align 4
  %v1_338eb = add i32 %v0_338e4, -44
  %v2_338eb = inttoptr i32 %v1_338eb to i32*
  %v3_338eb = load i32, i32* %v2_338eb, align 4
  %v2_338f1 = call i32 @unknown_6863a(i32 %v3_338eb, i32 %v3_338e4)
  store i32 %v2_338f1, i32* @eax, align 8
  %v0_338f6 = call i32 @function_33c19()
  ret i32 %v0_338f6
}

define i32 @function_3392a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3392a:
  %v0_3392a = load i32, i32* @eax, align 8
  %v4_3392a = mul i32 %v0_3392a, 2
  store i32 %v4_3392a, i32* @eax, align 8
  %v0_3392c = call i32 @function_33c19()
  ret i32 %v0_3392c
}

define i32 @function_33931() local_unnamed_addr {
dec_label_pc_33931:
  %v0_33939 = load i32, i32* @ebp, align 4
  %v1_33950 = add i32 %v0_33939, -52
  %v2_33950 = inttoptr i32 %v1_33950 to i32*
  %v3_33950 = load i32, i32* %v2_33950, align 4
  %v1_33957 = add i32 %v0_33939, -44
  %v2_33957 = inttoptr i32 %v1_33957 to i32*
  %v3_33957 = load i32, i32* %v2_33957, align 4
  %v2_3395d = call i32 @unknown_686a7(i32 %v3_33957, i32 %v3_33950)
  store i32 %v2_3395d, i32* @eax, align 8
  %v0_33962 = call i32 @function_33c19()
  ret i32 %v0_33962

; uselistorder directives
  uselistorder i32 %v0_33939, { 1, 0 }
}

define i32 @function_33974(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33974:
  %v0_3397f = load i32, i32* @ebp, align 4
  %v1_33986 = add i32 %v0_3397f, -52
  %v2_33986 = inttoptr i32 %v1_33986 to i32*
  %v3_33986 = load i32, i32* %v2_33986, align 4
  %v1_3398d = add i32 %v0_3397f, -44
  %v2_3398d = inttoptr i32 %v1_3398d to i32*
  %v3_3398d = load i32, i32* %v2_3398d, align 4
  %v2_33993 = call i32 @unknown_686a7(i32 %v3_3398d, i32 %v3_33986)
  store i32 %v2_33993, i32* @eax, align 8
  %v0_33998 = call i32 @function_33c19()
  ret i32 %v0_33998
}

define i32 @function_3399d() local_unnamed_addr {
dec_label_pc_3399d:
  %v0_339a5 = load i32, i32* @ebp, align 4
  %v1_339bc = add i32 %v0_339a5, -52
  %v2_339bc = inttoptr i32 %v1_339bc to i32*
  %v3_339bc = load i32, i32* %v2_339bc, align 4
  %v1_339c3 = add i32 %v0_339a5, -44
  %v2_339c3 = inttoptr i32 %v1_339c3 to i32*
  %v3_339c3 = load i32, i32* %v2_339c3, align 4
  %v2_339c9 = call i32 @unknown_686a7(i32 %v3_339c3, i32 %v3_339bc)
  store i32 %v2_339c9, i32* @eax, align 8
  %v0_339ce = call i32 @function_33c19()
  ret i32 %v0_339ce

; uselistorder directives
  uselistorder i32 %v0_339a5, { 1, 0 }
}

define i32 @function_339d3() local_unnamed_addr {
dec_label_pc_339d3:
  %v0_339db = load i32, i32* @ebp, align 4
  %v1_339f2 = add i32 %v0_339db, -52
  %v2_339f2 = inttoptr i32 %v1_339f2 to i32*
  %v3_339f2 = load i32, i32* %v2_339f2, align 4
  %v1_339f9 = add i32 %v0_339db, -44
  %v2_339f9 = inttoptr i32 %v1_339f9 to i32*
  %v3_339f9 = load i32, i32* %v2_339f9, align 4
  %v2_339ff = call i32 @unknown_686a7(i32 %v3_339f9, i32 %v3_339f2)
  store i32 %v2_339ff, i32* @eax, align 8
  %v0_33a04 = call i32 @function_33c19()
  ret i32 %v0_33a04

; uselistorder directives
  uselistorder i32 %v0_339db, { 1, 0 }
}

define i32 @function_33a09() local_unnamed_addr {
dec_label_pc_33a09:
  %v0_33a11 = load i32, i32* @ebp, align 4
  %v1_33a28 = add i32 %v0_33a11, -52
  %v2_33a28 = inttoptr i32 %v1_33a28 to i32*
  %v3_33a28 = load i32, i32* %v2_33a28, align 4
  %v1_33a2f = add i32 %v0_33a11, -44
  %v2_33a2f = inttoptr i32 %v1_33a2f to i32*
  %v3_33a2f = load i32, i32* %v2_33a2f, align 4
  %v2_33a35 = call i32 @unknown_686a7(i32 %v3_33a2f, i32 %v3_33a28)
  store i32 %v2_33a35, i32* @eax, align 8
  %v0_33a3a = call i32 @function_33c19()
  ret i32 %v0_33a3a

; uselistorder directives
  uselistorder i32 %v0_33a11, { 1, 0 }
}

define i32 @function_33a3f() local_unnamed_addr {
dec_label_pc_33a3f:
  %v0_33a47 = load i32, i32* @ebp, align 4
  %v1_33a5e = add i32 %v0_33a47, -52
  %v2_33a5e = inttoptr i32 %v1_33a5e to i32*
  %v3_33a5e = load i32, i32* %v2_33a5e, align 4
  %v1_33a65 = add i32 %v0_33a47, -44
  %v2_33a65 = inttoptr i32 %v1_33a65 to i32*
  %v3_33a65 = load i32, i32* %v2_33a65, align 4
  %v2_33a6b = call i32 @unknown_686a7(i32 %v3_33a65, i32 %v3_33a5e)
  store i32 %v2_33a6b, i32* @eax, align 8
  %v0_33a70 = call i32 @function_33c19()
  ret i32 %v0_33a70

; uselistorder directives
  uselistorder i32 %v0_33a47, { 1, 0 }
}

define i32 @function_33aa5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33aa5:
  %eax.global-to-local = alloca i32, align 4
  %v0_33aa7 = load i32, i32* @edx, align 4
  %v1_33aa7 = trunc i32 %v0_33aa7 to i16
  %v4_33aa7 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_33aa7, i8 %v4_33aa7)
  %v2_33aa8 = load i32, i32* @eax, align 8
  %v4_33aa8 = mul i32 %v2_33aa8, 2
  %v21_33aa8 = inttoptr i32 %v2_33aa8 to i32*
  store i32 %v4_33aa8, i32* %v21_33aa8, align 4
  %v3_33aaa = load i32, i32* @eax, align 8
  %v11_33aad = and i32 %v3_33aaa, -236
  store i32 %v11_33aad, i32* %eax.global-to-local, align 8
  %v1_33aaf = inttoptr i32 %v11_33aad to i32*
  %v2_33aaf = load i32, i32* %v1_33aaf, align 4
  %v4_33aaf = add i32 %v2_33aaf, %v11_33aad
  store i32 %v4_33aaf, i32* %v1_33aaf, align 4
  %v0_33ab1 = load i32, i32* %eax.global-to-local, align 8
  %v1_33ab1 = inttoptr i32 %v0_33ab1 to i8*
  %v2_33ab1 = load i8, i8* %v1_33ab1, align 1
  %v4_33ab1 = trunc i32 %v0_33ab1 to i8
  %v5_33ab1 = add i8 %v2_33ab1, %v4_33ab1
  store i8 %v5_33ab1, i8* %v1_33ab1, align 1
  %v0_33ab3 = load i32, i32* @ebp, align 4
  %v1_33ac3 = add i32 %v0_33ab3, -56
  %v2_33ac3 = inttoptr i32 %v1_33ac3 to i32*
  %v3_33ac3 = load i32, i32* %v2_33ac3, align 4
  store i32 %v3_33ac3, i32* %eax.global-to-local, align 8
  %v1_33aca = add i32 %v0_33ab3, -52
  %v2_33aca = inttoptr i32 %v1_33aca to i32*
  %v3_33aca = load i32, i32* %v2_33aca, align 4
  store i32 %v3_33aca, i32* %eax.global-to-local, align 8
  %v1_33ad1 = add i32 %v0_33ab3, -44
  %v2_33ad1 = inttoptr i32 %v1_33ad1 to i32*
  %v3_33ad1 = load i32, i32* %v2_33ad1, align 4
  store i32 %v3_33ad1, i32* %eax.global-to-local, align 8
  %v2_33ad7 = call i32 @unknown_686a7(i32 %v3_33ad1, i32 %v3_33aca)
  store i32 %v2_33ad7, i32* @eax, align 8
  %v0_33adc = call i32 @function_33c19()
  store i32 %v0_33adc, i32* %eax.global-to-local, align 8
  ret i32 %v0_33adc

; uselistorder directives
  uselistorder i32 %v0_33ab3, { 1, 0, 2 }
  uselistorder i32 %v11_33aad, { 0, 2, 1 }
  uselistorder i32 %v2_33aa8, { 1, 0 }
}

define i32 @function_33aeb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33aeb:
  %eax.global-to-local = alloca i32, align 4
  %v0_33aeb = load i32, i32* @ebp, align 4
  %v1_33aeb = add i32 %v0_33aeb, 1
  store i32 %v1_33aeb, i32* @ebp, align 4
  %v0_33aec = load i32, i32* @eax, align 8
  %v1_33af3 = trunc i32 %v0_33aec to i8
  %v2_33af3 = and i8 %v1_33af3, 12
  %v8_33af3 = zext i8 %v2_33af3 to i32
  %v10_33af3 = and i32 %v0_33aec, -256
  %v11_33af3 = or i32 %v8_33af3, %v10_33af3
  store i32 %v11_33af3, i32* %eax.global-to-local, align 8
  %v1_33af5 = inttoptr i32 %v11_33af3 to i8*
  %v2_33af5 = load i8, i8* %v1_33af5, align 4
  %v5_33af5 = add i8 %v2_33af5, %v2_33af3
  store i8 %v5_33af5, i8* %v1_33af5, align 4
  %v0_33af7 = load i32, i32* %eax.global-to-local, align 8
  %v1_33af7 = inttoptr i32 %v0_33af7 to i8*
  %v2_33af7 = load i8, i8* %v1_33af7, align 1
  %v4_33af7 = trunc i32 %v0_33af7 to i8
  %v5_33af7 = add i8 %v2_33af7, %v4_33af7
  store i8 %v5_33af7, i8* %v1_33af7, align 1
  %v0_33af9 = load i32, i32* @ebp, align 4
  %v1_33af9 = add i32 %v0_33af9, -56
  %v2_33af9 = inttoptr i32 %v1_33af9 to i32*
  %v3_33af9 = load i32, i32* %v2_33af9, align 4
  store i32 %v3_33af9, i32* %eax.global-to-local, align 8
  %v1_33b00 = add i32 %v0_33af9, -52
  %v2_33b00 = inttoptr i32 %v1_33b00 to i32*
  %v3_33b00 = load i32, i32* %v2_33b00, align 4
  store i32 %v3_33b00, i32* %eax.global-to-local, align 8
  %v1_33b07 = add i32 %v0_33af9, -44
  %v2_33b07 = inttoptr i32 %v1_33b07 to i32*
  %v3_33b07 = load i32, i32* %v2_33b07, align 4
  store i32 %v3_33b07, i32* %eax.global-to-local, align 8
  %v2_33b0d = call i32 @unknown_686a7(i32 %v3_33b07, i32 %v3_33b00)
  store i32 %v2_33b0d, i32* @eax, align 8
  %v0_33b12 = call i32 @function_33c19()
  store i32 %v0_33b12, i32* %eax.global-to-local, align 8
  ret i32 %v0_33b12
}

define i32 @function_33af6(i32 %arg1) local_unnamed_addr {
dec_label_pc_33af6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33b2e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33b2e:
  %v0_33b2e = load i32, i32* @ebx, align 4
  %v1_33b2e = add i32 %v0_33b2e, 1149880389
  %v2_33b2e = inttoptr i32 %v1_33b2e to i8*
  %v3_33b2e = load i8, i8* %v2_33b2e, align 1
  %v4_33b2e = load i32, i32* @ecx, align 8
  %v5_33b2e = trunc i32 %v4_33b2e to i8
  %v6_33b2e = add i8 %v5_33b2e, %v3_33b2e
  store i8 %v6_33b2e, i8* %v2_33b2e, align 1
  %v0_33b36 = load i32, i32* @ebp, align 4
  %v1_33b36 = add i32 %v0_33b36, -52
  %v2_33b36 = inttoptr i32 %v1_33b36 to i32*
  %v3_33b36 = load i32, i32* %v2_33b36, align 4
  %v1_33b3d = add i32 %v0_33b36, -44
  %v2_33b3d = inttoptr i32 %v1_33b3d to i32*
  %v3_33b3d = load i32, i32* %v2_33b3d, align 4
  %v2_33b43 = call i32 @unknown_686a7(i32 %v3_33b3d, i32 %v3_33b36)
  store i32 %v2_33b43, i32* @eax, align 8
  %v0_33b48 = call i32 @function_33c19()
  ret i32 %v0_33b48
}

define i32 @function_33b4d() local_unnamed_addr {
dec_label_pc_33b4d:
  %v0_33b63 = load i32, i32* @ebp, align 4
  %v1_33b6a = add i32 %v0_33b63, -52
  %v2_33b6a = inttoptr i32 %v1_33b6a to i32*
  %v3_33b6a = load i32, i32* %v2_33b6a, align 4
  %v1_33b71 = add i32 %v0_33b63, -44
  %v2_33b71 = inttoptr i32 %v1_33b71 to i32*
  %v3_33b71 = load i32, i32* %v2_33b71, align 4
  %v2_33b77 = call i32 @unknown_686a7(i32 %v3_33b71, i32 %v3_33b6a)
  store i32 %v2_33b77, i32* @eax, align 8
  %v0_33b7c = call i32 @function_33c19()
  ret i32 %v0_33b7c
}

define i32 @function_33b81() local_unnamed_addr {
dec_label_pc_33b81:
  %v0_33b97 = load i32, i32* @ebp, align 4
  %v1_33b9e = add i32 %v0_33b97, -52
  %v2_33b9e = inttoptr i32 %v1_33b9e to i32*
  %v3_33b9e = load i32, i32* %v2_33b9e, align 4
  %v1_33ba5 = add i32 %v0_33b97, -44
  %v2_33ba5 = inttoptr i32 %v1_33ba5 to i32*
  %v3_33ba5 = load i32, i32* %v2_33ba5, align 4
  %v2_33bab = call i32 @unknown_686a7(i32 %v3_33ba5, i32 %v3_33b9e)
  store i32 %v2_33bab, i32* @eax, align 8
  %v0_33bb0 = call i32 @function_33c19()
  ret i32 %v0_33bb0
}

define i32 @function_33bb2() local_unnamed_addr {
dec_label_pc_33bb2:
  %v0_33bc6 = load i32, i32* @ebp, align 4
  %v1_33bcd = add i32 %v0_33bc6, -52
  %v2_33bcd = inttoptr i32 %v1_33bcd to i32*
  %v3_33bcd = load i32, i32* %v2_33bcd, align 4
  %v1_33bd4 = add i32 %v0_33bc6, -44
  %v2_33bd4 = inttoptr i32 %v1_33bd4 to i32*
  %v3_33bd4 = load i32, i32* %v2_33bd4, align 4
  %v2_33bda = call i32 @unknown_686a7(i32 %v3_33bd4, i32 %v3_33bcd)
  store i32 %v2_33bda, i32* @eax, align 8
  %v0_33bdf = call i32 @function_33c19()
  ret i32 %v0_33bdf

; uselistorder directives
  uselistorder i32 ()* @function_33c19, { 18, 17, 16, 8, 7, 6, 15, 14, 13, 12, 5, 11, 4, 3, 2, 1, 10, 0, 9 }
  uselistorder i32 (i32, i32)* @unknown_686a7, { 11, 10, 9, 3, 2, 1, 8, 7, 6, 5, 0, 4 }
}

define i32 @function_33be1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_33be1:
  %v0_33bf9 = load i32, i32* @ebp, align 4
  %v1_33c00 = add i32 %v0_33bf9, -52
  %v2_33c00 = inttoptr i32 %v1_33c00 to i32*
  %v3_33c00 = load i32, i32* %v2_33c00, align 4
  ret i32 %v3_33c00
}

define i32 @function_33c06(i32 %arg1) local_unnamed_addr {
dec_label_pc_33c06:
  %v0_33c06 = load i32, i32* @ebx, align 4
  %v1_33c06 = add i32 %v0_33c06, 1149882437
  %v2_33c06 = inttoptr i32 %v1_33c06 to i8*
  %v3_33c06 = load i8, i8* %v2_33c06, align 1
  %v4_33c06 = load i32, i32* @ecx, align 8
  %v5_33c06 = trunc i32 %v4_33c06 to i8
  %v6_33c06 = or i8 %v5_33c06, %v3_33c06
  store i8 %v6_33c06, i8* %v2_33c06, align 1
  %v0_33c0e = load i32, i32* @ebp, align 4
  %v1_33c0e = add i32 %v0_33c0e, -44
  %v2_33c0e = inttoptr i32 %v1_33c0e to i32*
  %v3_33c0e = load i32, i32* %v2_33c0e, align 4
  %v1_33c14 = call i32 @unknown_68701(i32 %v3_33c0e)
  ret i32 %v1_33c14
}

define i32 @function_33c19() local_unnamed_addr {
dec_label_pc_33c19:
  %v0_33c19 = load i32, i32* @ebp, align 4
  %v1_33c19 = add i32 %v0_33c19, -28
  %v2_33c19 = inttoptr i32 %v1_33c19 to i32*
  %v3_33c19 = load i32, i32* %v2_33c19, align 4
  %v1_33c1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_33c1c = icmp eq i32 %v1_33c1c, %v3_33c19
  br i1 %v3_33c1c, label %bb, label %dec_label_pc_33c19.dec_label_pc_33c25_crit_edge

dec_label_pc_33c19.dec_label_pc_33c25_crit_edge:  ; preds = %dec_label_pc_33c19
  %v2_33c23.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_33c25

bb:                                               ; preds = %dec_label_pc_33c19
  %v1_33c23 = call i32 @function_33c2a()
  br label %dec_label_pc_33c25

dec_label_pc_33c25:                               ; preds = %dec_label_pc_33c19.dec_label_pc_33c25_crit_edge, %bb
  %v2_33c23 = phi i32 [ %v2_33c23.pre, %dec_label_pc_33c19.dec_label_pc_33c25_crit_edge ], [ %v1_33c23, %bb ]
  ret i32 %v2_33c23

; uselistorder directives
  uselistorder label %dec_label_pc_33c25, { 1, 0 }
}

define i32 @function_33c2a() local_unnamed_addr {
dec_label_pc_33c2a:
  %v0_33c31 = load i32, i32* @eax, align 8
  ret i32 %v0_33c31
}

define i32 @function_33c34(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33c34:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33c75(i32 %arg1) local_unnamed_addr {
dec_label_pc_33c75:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_33c84:
  ret i32 %arg2
}

define i32 @function_33cd1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_33cd1:
  %v0_33cd3 = load i32, i32* @ebp, align 4
  %v1_33cd3 = add i32 %v0_33cd3, -28
  %v2_33cd3 = inttoptr i32 %v1_33cd3 to i32*
  %v3_33cd3 = load i32, i32* %v2_33cd3, align 4
  %v1_33cd9 = call i32 @unknown_68c94(i32 %v3_33cd3)
  store i32 %v1_33cd9, i32* @eax, align 8
  %v0_33cde = load i32, i32* @ebp, align 4
  %v1_33cde = add i32 %v0_33cde, -12
  %v2_33cde = inttoptr i32 %v1_33cde to i32*
  %v3_33cde = load i32, i32* %v2_33cde, align 4
  %v1_33ce1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_33ce1 = icmp eq i32 %v1_33ce1, %v3_33cde
  br i1 %v3_33ce1, label %bb, label %dec_label_pc_33cea

bb:                                               ; preds = %dec_label_pc_33cd1
  %v1_33ce8 = call i32 @function_33cef()
  br label %dec_label_pc_33cea

dec_label_pc_33cea:                               ; preds = %bb, %dec_label_pc_33cd1
  %v2_33ce8 = phi i32 [ %v1_33ce8, %bb ], [ %v1_33cd9, %dec_label_pc_33cd1 ]
  ret i32 %v2_33ce8
}

define i32 @function_33cee(i32 %arg1) local_unnamed_addr {
dec_label_pc_33cee:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33cef() local_unnamed_addr {
dec_label_pc_33cef:
  %v0_33cf0 = load i32, i32* @eax, align 8
  ret i32 %v0_33cf0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsSJ_NSA_ISB_INSC_10Value_implISF_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_33cf1:
  %edx.global-to-local = alloca i32, align 4
  %v0_33d27 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_33d27, 16777216
  %v5_33d46 = sdiv i32 %sext, 16777216
  %v6_33d46 = call i32 @unknown_68d66(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_33d46)
  store i32 %v6_33d46, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_33d57

bb:                                               ; preds = %dec_label_pc_33cf1
  %v1_33d55 = call i32 @function_33d5c()
  br label %dec_label_pc_33d57

dec_label_pc_33d57:                               ; preds = %bb, %dec_label_pc_33cf1
  %v2_33d55 = phi i32 [ %v1_33d55, %bb ], [ %v6_33d46, %dec_label_pc_33cf1 ]
  ret i32 %v2_33d55
}

define i32 @function_33d5c() local_unnamed_addr {
dec_label_pc_33d5c:
  %v0_33d5d = load i32, i32* @eax, align 8
  ret i32 %v0_33d5d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsNSA_ISB_INSC_9Pair_implISF_EESaISM_EEEESJ_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d5e:
  ret i32 %arg1
}

define i32 @function_33d6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d6a:
  %eax.global-to-local = alloca i32, align 4
  %v0_33d6a = load i32, i32* @ebp, align 4
  %v1_33d6a = add i32 %v0_33d6a, 12
  %v2_33d6a = inttoptr i32 %v1_33d6a to i32*
  %v3_33d6a = load i32, i32* %v2_33d6a, align 4
  store i32 %v3_33d6a, i32* %eax.global-to-local, align 8
  %v2_33d6d = add i32 %v0_33d6a, -32
  %v3_33d6d = inttoptr i32 %v2_33d6d to i32*
  store i32 %v3_33d6a, i32* %v3_33d6d, align 4
  %v0_33d70 = load i32, i32* @ebp, align 4
  %v1_33d70 = add i32 %v0_33d70, 16
  %v2_33d70 = inttoptr i32 %v1_33d70 to i32*
  %v3_33d70 = load i32, i32* %v2_33d70, align 4
  store i32 %v3_33d70, i32* %eax.global-to-local, align 8
  %v2_33d73 = add i32 %v0_33d70, -36
  %v3_33d73 = inttoptr i32 %v2_33d73 to i32*
  store i32 %v3_33d70, i32* %v3_33d73, align 4
  %v0_33d76 = load i32, i32* @ebp, align 4
  %v1_33d76 = add i32 %v0_33d76, 20
  %v2_33d76 = inttoptr i32 %v1_33d76 to i32*
  %v3_33d76 = load i32, i32* %v2_33d76, align 4
  store i32 %v3_33d76, i32* %eax.global-to-local, align 8
  %v2_33d79 = add i32 %v0_33d76, -40
  %v3_33d79 = inttoptr i32 %v2_33d79 to i32*
  store i32 %v3_33d76, i32* %v3_33d79, align 4
  %v0_33d7c = load i32, i32* @ebp, align 4
  %v1_33d7c = add i32 %v0_33d7c, 24
  %v2_33d7c = inttoptr i32 %v1_33d7c to i8*
  %v3_33d7c = load i8, i8* %v2_33d7c, align 1
  %v4_33d7c = zext i8 %v3_33d7c to i32
  store i32 %v4_33d7c, i32* %eax.global-to-local, align 8
  %v3_33d80 = add i32 %v0_33d7c, -41
  %v4_33d80 = inttoptr i32 %v3_33d80 to i8*
  store i8 %v3_33d7c, i8* %v4_33d80, align 1
  %v0_33d83 = load i32, i32* @ebp, align 4
  %v1_33d83 = add i32 %v0_33d83, 28
  %v2_33d83 = inttoptr i32 %v1_33d83 to i32*
  %v3_33d83 = load i32, i32* %v2_33d83, align 4
  store i32 %v3_33d83, i32* %eax.global-to-local, align 8
  %v2_33d86 = add i32 %v0_33d83, -48
  %v3_33d86 = inttoptr i32 %v2_33d86 to i32*
  store i32 %v3_33d83, i32* %v3_33d86, align 4
  %v0_33d89 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_33d89, i32* %eax.global-to-local, align 8
  %v1_33d8f = load i32, i32* @ebp, align 4
  %v2_33d8f = add i32 %v1_33d8f, -12
  %v3_33d8f = inttoptr i32 %v2_33d8f to i32*
  store i32 %v0_33d89, i32* %v3_33d8f, align 4
  %v4_33d8f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_33d8f
}

define i32 @function_33d92(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d92:
  %v0_33d94 = load i32, i32* @edx, align 4
  %v0_33d98 = load i32, i32* @ebp, align 4
  %v1_33d98 = add i32 %v0_33d98, -40
  %v2_33d98 = inttoptr i32 %v1_33d98 to i32*
  %v3_33d98 = load i32, i32* %v2_33d98, align 4
  %v1_33d9f = add i32 %v0_33d98, -36
  %v2_33d9f = inttoptr i32 %v1_33d9f to i32*
  %v3_33d9f = load i32, i32* %v2_33d9f, align 4
  %v1_33da6 = add i32 %v0_33d98, -32
  %v2_33da6 = inttoptr i32 %v1_33da6 to i32*
  %v3_33da6 = load i32, i32* %v2_33da6, align 4
  %v1_33dad = add i32 %v0_33d98, -28
  %v2_33dad = inttoptr i32 %v1_33dad to i32*
  %v3_33dad = load i32, i32* %v2_33dad, align 4
  %sext = mul i32 %v0_33d94, 16777216
  %v5_33db3 = sdiv i32 %sext, 16777216
  %v6_33db3 = call i32 @unknown_68e38(i32 %v3_33dad, i32 %v3_33da6, i32 %v3_33d9f, i32 %v3_33d98, i32 %v5_33db3)
  store i32 %v6_33db3, i32* @eax, align 8
  %v0_33db8 = load i32, i32* @ebp, align 4
  %v1_33db8 = add i32 %v0_33db8, -12
  %v2_33db8 = inttoptr i32 %v1_33db8 to i32*
  %v3_33db8 = load i32, i32* %v2_33db8, align 4
  %v1_33dbb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_33dbb = icmp eq i32 %v1_33dbb, %v3_33db8
  br i1 %v3_33dbb, label %bb, label %dec_label_pc_33dc4

bb:                                               ; preds = %dec_label_pc_33d92
  %v1_33dc2 = call i32 @function_33dc9()
  br label %dec_label_pc_33dc4

dec_label_pc_33dc4:                               ; preds = %bb, %dec_label_pc_33d92
  %v2_33dc2 = phi i32 [ %v1_33dc2, %bb ], [ %v6_33db3, %dec_label_pc_33d92 ]
  ret i32 %v2_33dc2

; uselistorder directives
  uselistorder i32 %v0_33d98, { 1, 0, 2, 3 }
}

define i32 @function_33dc9() local_unnamed_addr {
dec_label_pc_33dc9:
  %v0_33dca = load i32, i32* @eax, align 8
  ret i32 %v0_33dca
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_33dcb:
  %v0_33df6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_33df6
}

define i32 @function_33dff(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33dff:
  %v0_33e01 = load i32, i32* @edx, align 4
  %v0_33e05 = load i32, i32* @ebp, align 4
  %v1_33e05 = add i32 %v0_33e05, -40
  %v2_33e05 = inttoptr i32 %v1_33e05 to i32*
  %v3_33e05 = load i32, i32* %v2_33e05, align 4
  %v1_33e0c = add i32 %v0_33e05, -36
  %v2_33e0c = inttoptr i32 %v1_33e0c to i32*
  %v3_33e0c = load i32, i32* %v2_33e0c, align 4
  %v1_33e13 = add i32 %v0_33e05, -32
  %v2_33e13 = inttoptr i32 %v1_33e13 to i32*
  %v3_33e13 = load i32, i32* %v2_33e13, align 4
  %v1_33e1a = add i32 %v0_33e05, -28
  %v2_33e1a = inttoptr i32 %v1_33e1a to i32*
  %v3_33e1a = load i32, i32* %v2_33e1a, align 4
  %sext = mul i32 %v0_33e01, 16777216
  %v5_33e20 = sdiv i32 %sext, 16777216
  %v6_33e20 = call i32 @unknown_68f0a(i32 %v3_33e1a, i32 %v3_33e13, i32 %v3_33e0c, i32 %v3_33e05, i32 %v5_33e20)
  store i32 %v6_33e20, i32* @eax, align 8
  %v0_33e25 = load i32, i32* @ebp, align 4
  %v1_33e25 = add i32 %v0_33e25, -12
  %v2_33e25 = inttoptr i32 %v1_33e25 to i32*
  %v3_33e25 = load i32, i32* %v2_33e25, align 4
  %v1_33e28 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_33e28 = xor i32 %v1_33e28, %v3_33e25
  %v3_33e28 = icmp eq i32 %v2_33e28, 0
  store i32 %v2_33e28, i32* @edx, align 4
  br i1 %v3_33e28, label %bb, label %dec_label_pc_33e31

bb:                                               ; preds = %dec_label_pc_33dff
  %v1_33e2f = call i32 @function_33e36()
  br label %dec_label_pc_33e31

dec_label_pc_33e31:                               ; preds = %bb, %dec_label_pc_33dff
  %v2_33e2f = phi i32 [ %v1_33e2f, %bb ], [ %v6_33e20, %dec_label_pc_33dff ]
  ret i32 %v2_33e2f

; uselistorder directives
  uselistorder i32 %v0_33e05, { 1, 0, 2, 3 }
}

define i32 @function_33e36() local_unnamed_addr {
dec_label_pc_33e36:
  %v0_33e37 = load i32, i32* @eax, align 8
  ret i32 %v0_33e37
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_33e38:
  ret i32 %arg1
}

define i32 @function_33ea3(i32 %arg1) local_unnamed_addr {
dec_label_pc_33ea3:
  %v0_33ea4 = load i32, i32* @eax, align 8
  ret i32 %v0_33ea4
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_33ea5:
  %eax.global-to-local = alloca i32, align 4
  %v2_33ea6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_33ea6
}

define i32 @function_33ea8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33ea8:
  %v0_33eab = load i32, i32* @ebp, align 4
  %v1_33eab = add i32 %v0_33eab, 8
  %v2_33eab = inttoptr i32 %v1_33eab to i32*
  %v3_33eab = load i32, i32* %v2_33eab, align 4
  %v2_33eae = add i32 %v0_33eab, -28
  %v3_33eae = inttoptr i32 %v2_33eae to i32*
  store i32 %v3_33eab, i32* %v3_33eae, align 4
  %v0_33eb1 = load i32, i32* @ebp, align 4
  %v1_33eb1 = add i32 %v0_33eb1, 12
  %v2_33eb1 = inttoptr i32 %v1_33eb1 to i32*
  %v3_33eb1 = load i32, i32* %v2_33eb1, align 4
  %v2_33eb4 = add i32 %v0_33eb1, -32
  %v3_33eb4 = inttoptr i32 %v2_33eb4 to i32*
  store i32 %v3_33eb1, i32* %v3_33eb4, align 4
  %v0_33eb7 = load i32, i32* @ebp, align 4
  %v1_33eb7 = add i32 %v0_33eb7, 16
  %v2_33eb7 = inttoptr i32 %v1_33eb7 to i32*
  %v3_33eb7 = load i32, i32* %v2_33eb7, align 4
  %v2_33eba = add i32 %v0_33eb7, -36
  %v3_33eba = inttoptr i32 %v2_33eba to i32*
  store i32 %v3_33eb7, i32* %v3_33eba, align 4
  %v0_33ebd = load i32, i32* @ebp, align 4
  %v1_33ebd = add i32 %v0_33ebd, 20
  %v2_33ebd = inttoptr i32 %v1_33ebd to i32*
  %v3_33ebd = load i32, i32* %v2_33ebd, align 4
  %v2_33ec0 = add i32 %v0_33ebd, -40
  %v3_33ec0 = inttoptr i32 %v2_33ec0 to i32*
  store i32 %v3_33ebd, i32* %v3_33ec0, align 4
  %v0_33ec3 = load i32, i32* @ebp, align 4
  %v1_33ec3 = add i32 %v0_33ec3, 24
  %v2_33ec3 = inttoptr i32 %v1_33ec3 to i8*
  %v3_33ec3 = load i8, i8* %v2_33ec3, align 1
  %v3_33ec7 = add i32 %v0_33ec3, -41
  %v4_33ec7 = inttoptr i32 %v3_33ec7 to i8*
  store i8 %v3_33ec3, i8* %v4_33ec7, align 1
  %v0_33eca = load i32, i32* @ebp, align 4
  %v1_33eca = add i32 %v0_33eca, 28
  %v2_33eca = inttoptr i32 %v1_33eca to i32*
  %v3_33eca = load i32, i32* %v2_33eca, align 4
  %v2_33ecd = add i32 %v0_33eca, -48
  %v3_33ecd = inttoptr i32 %v2_33ecd to i32*
  store i32 %v3_33eca, i32* %v3_33ecd, align 4
  %v0_33ed0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_33ed6 = load i32, i32* @ebp, align 4
  %v2_33ed6 = add i32 %v1_33ed6, -12
  %v3_33ed6 = inttoptr i32 %v2_33ed6 to i32*
  store i32 %v0_33ed0, i32* %v3_33ed6, align 4
  %v0_33edb = load i32, i32* @edx, align 4
  %v0_33edf = load i32, i32* @ebp, align 4
  %v1_33edf = add i32 %v0_33edf, -40
  %v2_33edf = inttoptr i32 %v1_33edf to i32*
  %v3_33edf = load i32, i32* %v2_33edf, align 4
  %v1_33ee6 = add i32 %v0_33edf, -36
  %v2_33ee6 = inttoptr i32 %v1_33ee6 to i32*
  %v3_33ee6 = load i32, i32* %v2_33ee6, align 4
  %v1_33eed = add i32 %v0_33edf, -32
  %v2_33eed = inttoptr i32 %v1_33eed to i32*
  %v3_33eed = load i32, i32* %v2_33eed, align 4
  %v1_33ef4 = add i32 %v0_33edf, -28
  %v2_33ef4 = inttoptr i32 %v1_33ef4 to i32*
  %v3_33ef4 = load i32, i32* %v2_33ef4, align 4
  %sext = mul i32 %v0_33edb, 16777216
  %v5_33efa = sdiv i32 %sext, 16777216
  %v6_33efa = call i32 @unknown_690ae(i32 %v3_33ef4, i32 %v3_33eed, i32 %v3_33ee6, i32 %v3_33edf, i32 %v5_33efa)
  store i32 %v6_33efa, i32* @eax, align 8
  %v0_33eff = load i32, i32* @ebp, align 4
  %v1_33eff = add i32 %v0_33eff, -12
  %v2_33eff = inttoptr i32 %v1_33eff to i32*
  %v3_33eff = load i32, i32* %v2_33eff, align 4
  %v1_33f02 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_33f02 = icmp eq i32 %v1_33f02, %v3_33eff
  br i1 %v3_33f02, label %bb, label %dec_label_pc_33f0b

bb:                                               ; preds = %dec_label_pc_33ea8
  %v1_33f09 = call i32 @function_33f10()
  br label %dec_label_pc_33f0b

dec_label_pc_33f0b:                               ; preds = %bb, %dec_label_pc_33ea8
  %v2_33f09 = phi i32 [ %v1_33f09, %bb ], [ %v6_33efa, %dec_label_pc_33ea8 ]
  ret i32 %v2_33f09

; uselistorder directives
  uselistorder i32 %v0_33edf, { 1, 0, 2, 3 }
}

define i32 @function_33f10() local_unnamed_addr {
dec_label_pc_33f10:
  %v0_33f11 = load i32, i32* @eax, align 8
  ret i32 %v0_33f11
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1) local_unnamed_addr {
dec_label_pc_33f12:
  ret i32 %arg1
}

define i32 @function_33f1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_33f1c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_33f1c = load i32, i32* @ebp, align 4
  %v0_33f20 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_33f20 = or i32 %v0_33f20, 137
  store i32 %v11_33f20, i32* %eax.global-to-local, align 8
  %v0_33f23 = load i32, i32* @ecx, align 8
  %v1_33f23 = add i32 %v0_33f23, -1
  store i32 %v1_33f23, i32* %ecx.global-to-local, align 8
  %v1_33f25 = add i32 %v0_33f1c, 4
  store i32 %v1_33f25, i32* %ebp.global-to-local, align 4
  %v1_33f26 = add i32 %v0_33f23, 1166793796
  %v2_33f26 = inttoptr i32 %v1_33f26 to i8*
  %v3_33f26 = load i8, i8* %v2_33f26, align 1
  %v5_33f26 = trunc i32 %v1_33f23 to i8
  %v8_33f26 = add i8 %v3_33f26, %v5_33f26
  %v28_33f26 = icmp ult i8 %v8_33f26, %v3_33f26
  store i1 %v28_33f26, i1* %cf.global-to-local, align 1
  store i8 %v8_33f26, i8* %v2_33f26, align 1
  %v0_33f2c = load i32, i32* %eax.global-to-local, align 8
  %v1_33f2c = trunc i32 %v0_33f2c to i8
  %v2_33f2c = load i1, i1* %cf.global-to-local, align 1
  %v3_33f2c = zext i1 %v2_33f2c to i8
  %v4_33f2c = add i8 %v1_33f2c, -119
  %v5_33f2c = add i8 %v4_33f2c, %v3_33f2c
  %v22_33f2c = icmp ule i8 %v5_33f2c, %v1_33f2c
  %v23_33f2c = icmp ugt i8 %v1_33f2c, 118
  %v24_33f2c = select i1 %v2_33f2c, i1 %v22_33f2c, i1 %v23_33f2c
  store i1 %v24_33f2c, i1* %cf.global-to-local, align 1
  %v25_33f2c = zext i8 %v5_33f2c to i32
  %v27_33f2c = and i32 %v0_33f2c, -256
  %v28_33f2c = or i32 %v25_33f2c, %v27_33f2c
  store i32 %v28_33f2c, i32* %eax.global-to-local, align 8
  %v0_33f2e = load i32, i32* %ebp.global-to-local, align 4
  %v1_33f2e = add i32 %v0_33f2e, 1
  store i32 %v1_33f2e, i32* %ebp.global-to-local, align 4
  %v1_33f33 = add i32 %v28_33f2c, 1166792517
  %v2_33f33 = inttoptr i32 %v1_33f33 to i8*
  %v3_33f33 = load i8, i8* %v2_33f33, align 1
  %v4_33f33 = load i32, i32* %ecx.global-to-local, align 8
  %v5_33f33 = trunc i32 %v4_33f33 to i8
  %v7_33f33 = zext i1 %v24_33f2c to i8
  %v8_33f33 = sub i8 %v3_33f33, %v5_33f33
  %v9_33f33 = add i8 %v8_33f33, %v7_33f33
  %v19_33f33 = sub i8 %v8_33f33, %v7_33f33
  %v20_33f33 = icmp ult i8 %v3_33f33, %v19_33f33
  %v21_33f33 = icmp ne i8 %v5_33f33, -1
  %v22_33f33 = or i1 %v21_33f33, %v20_33f33
  %v23_33f33 = icmp ult i8 %v3_33f33, %v5_33f33
  %v24_33f33 = select i1 %v24_33f2c, i1 %v22_33f33, i1 %v23_33f33
  store i1 %v24_33f33, i1* %cf.global-to-local, align 1
  store i8 %v9_33f33, i8* %v2_33f33, align 1
  %v0_33f39 = load i32, i32* %eax.global-to-local, align 8
  %v1_33f39 = trunc i32 %v0_33f39 to i8
  %v2_33f39 = load i1, i1* %cf.global-to-local, align 1
  %v3_33f39 = zext i1 %v2_33f39 to i32
  %v4_33f39 = add i32 %v0_33f39, 119
  %v5_33f39 = add i32 %v4_33f39, %v3_33f39
  %v17_33f39 = icmp ult i8 %v1_33f39, -119
  %v18_33f39 = or i1 %v2_33f39, %v17_33f39
  store i1 %v18_33f39, i1* %cf.global-to-local, align 1
  %v31_33f39 = urem i32 %v5_33f39, 256
  %v33_33f39 = and i32 %v0_33f39, -256
  %v34_33f39 = or i32 %v31_33f39, %v33_33f39
  store i32 %v34_33f39, i32* %eax.global-to-local, align 8
  %v0_33f3b = load i32, i32* %ebp.global-to-local, align 4
  %v1_33f3b = add i32 %v0_33f3b, 1
  store i32 %v1_33f3b, i32* %ebp.global-to-local, align 4
  %v1_33f3c = add i32 %v0_33f3b, -94
  %v2_33f3c = inttoptr i32 %v1_33f3c to i8*
  %v3_33f3c = load i8, i8* %v2_33f3c, align 1
  %v5_33f3c = mul i8 %v3_33f3c, 2
  store i8 %v5_33f3c, i8* %v2_33f3c, align 1
  %v16_33f3c = icmp slt i8 %v3_33f3c, 0
  %v0_33f3f = load i32, i32* %eax.global-to-local, align 8
  %v1_33f3f = trunc i32 %v0_33f3f to i8
  %v3_33f3f = zext i1 %v16_33f3c to i8
  %v4_33f3f = add i8 %v1_33f3f, %v3_33f3f
  %v19_33f3f = icmp ule i8 %v4_33f3f, %v1_33f3f
  %v21_33f3f = icmp eq i1 %v16_33f3c, %v19_33f3f
  store i1 %v21_33f3f, i1* %cf.global-to-local, align 1
  %v22_33f3f = zext i8 %v4_33f3f to i32
  %v24_33f3f = and i32 %v0_33f3f, -256
  %v25_33f3f = or i32 %v22_33f3f, %v24_33f3f
  store i32 %v25_33f3f, i32* %eax.global-to-local, align 8
  %v1_33f41 = inttoptr i32 %v25_33f3f to i8*
  %v2_33f41 = load i8, i8* %v1_33f41, align 1
  %v5_33f41 = add i8 %v2_33f41, %v4_33f3f
  store i8 %v5_33f41, i8* %v1_33f41, align 1
  %v0_33f43 = load i32, i32* %eax.global-to-local, align 8
  %v1_33f43 = load i32, i32* %ebp.global-to-local, align 4
  %v2_33f43 = add i32 %v1_33f43, -12
  %v3_33f43 = inttoptr i32 %v2_33f43 to i32*
  store i32 %v0_33f43, i32* %v3_33f43, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_33f3f, { 0, 2, 1 }
  uselistorder i8 %v1_33f3f, { 1, 0 }
  uselistorder i8 %v3_33f3c, { 1, 0 }
  uselistorder i1 %v2_33f39, { 1, 0 }
  uselistorder i32 %v0_33f39, { 1, 0, 2 }
  uselistorder i8 %v8_33f33, { 1, 0 }
  uselistorder i8 %v7_33f33, { 1, 0 }
  uselistorder i8 %v5_33f33, { 1, 0, 2 }
  uselistorder i1 %v24_33f2c, { 1, 0, 2 }
  uselistorder i8 %v5_33f2c, { 1, 0 }
  uselistorder i8 %v3_33f26, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSM_13Config_vectorISsEEEESaISQ_EEEENSK_ISL_INSM_10Value_implISP_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_33f6c:
  ret i32 0
}

define i32 @function_33fc9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33fc9:
  %v0_33fc9 = load i32, i32* @eax, align 8
  %v2_33fc9 = and i32 %v0_33fc9, 242
  %v2_33fcd = load i32, i32* @ecx, align 8
  %v3_33fcd = udiv i32 %v2_33fcd, 256
  %v5_33fcd = add nuw nsw i32 %v3_33fcd, %v2_33fc9
  %v20_33fcd = and i32 %v5_33fcd, 255
  %v22_33fcd = and i32 %v0_33fc9, -256
  %v23_33fcd = or i32 %v20_33fcd, %v22_33fcd
  ret i32 %v23_33fcd

; uselistorder directives
  uselistorder i32 %v0_33fc9, { 1, 0 }
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_intoD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_33fd4:
  %v0_33fe0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_33ff1 = call i32 @unknown_69286(i32 %arg1)
  ret i32 %v0_33fe0
}

define i32 @function_33ffc(i32 %arg1) local_unnamed_addr {
dec_label_pc_33ffc:
  %zf.global-to-local = alloca i1, align 1
  %v0_33ffc = load i32, i32* @eax, align 8
  %v1_33ffc = trunc i32 %v0_33ffc to i8
  %v2_33ffc = load i1, i1* @cf, align 1
  %v3_33ffc = zext i1 %v2_33ffc to i8
  %v4_33ffc = add i8 %v3_33ffc, %v1_33ffc
  %v13_33ffc = icmp eq i8 %v4_33ffc, 0
  store i1 %v13_33ffc, i1* %zf.global-to-local, align 1
  %v22_33ffc = zext i8 %v4_33ffc to i32
  %v24_33ffc = and i32 %v0_33ffc, -256
  %v25_33ffc = or i32 %v22_33ffc, %v24_33ffc
  store i32 %v25_33ffc, i32* @eax, align 8
  %v1_33ffe = inttoptr i32 %v25_33ffc to i8*
  %v2_33ffe = load i8, i8* %v1_33ffe, align 1
  %v5_33ffe = add i8 %v2_33ffe, %v4_33ffc
  %v15_33ffe = icmp eq i8 %v5_33ffe, 0
  store i1 %v15_33ffe, i1* %zf.global-to-local, align 1
  store i8 %v5_33ffe, i8* %v1_33ffe, align 1
  %v0_34000 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_34000, label %bb, label %dec_label_pc_33ffc.dec_label_pc_34002_crit_edge

dec_label_pc_33ffc.dec_label_pc_34002_crit_edge:  ; preds = %dec_label_pc_33ffc
  %v2_34000.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_34002

bb:                                               ; preds = %dec_label_pc_33ffc
  %v1_34000 = call i32 @function_34007()
  br label %dec_label_pc_34002

dec_label_pc_34002:                               ; preds = %dec_label_pc_33ffc.dec_label_pc_34002_crit_edge, %bb
  %v2_34000 = phi i32 [ %v2_34000.pre, %dec_label_pc_33ffc.dec_label_pc_34002_crit_edge ], [ %v1_34000, %bb ]
  ret i32 %v2_34000

; uselistorder directives
  uselistorder label %dec_label_pc_34002, { 1, 0 }
}

define i32 @function_34007() local_unnamed_addr {
dec_label_pc_34007:
  %v0_34008 = load i32, i32* @eax, align 8
  ret i32 %v0_34008
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_constructISJ_EEvRT_lN4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_3400a:
  %stack_var_-20 = alloca i32, align 4
  %v1_34038 = add i32 %arg1, 4
  %v1_3403e = call i32 @unknown_56514(i32 %v1_34038)
  %v2_34047 = ptrtoint i32* %stack_var_-20 to i32
  %v2_3404d = call i32 @unknown_69278(i32 %v2_34047, i32 %v1_3403e)
  %v2_3405f = call i32 @unknown_692e6(i32 %arg2, i32 %v2_34047)
  %v2_3406e = call i32 @unknown_585dc(i32 %arg1, i32 %v2_3405f)
  %v1_34079 = call i32 @unknown_67fde(i32 %v2_34047)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3408a

bb:                                               ; preds = %dec_label_pc_3400a
  %v1_34088 = call i32 @function_340a8()
  store i32 %v1_34088, i32* @eax, align 8
  br label %dec_label_pc_3408a

dec_label_pc_3408a:                               ; preds = %bb, %dec_label_pc_3400a
  %v0_3408a = call i32 @function_340a3()
  ret i32 %v0_3408a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3408d() local_unnamed_addr {
dec_label_pc_3408d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3408d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3408d
}

define i32 @function_340a3() local_unnamed_addr {
dec_label_pc_340a3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_340a8() local_unnamed_addr {
dec_label_pc_340a8:
  %v0_340ad = load i32, i32* @eax, align 8
  ret i32 %v0_340ad
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSH_14assign_storageEPvEENT_11result_typeEiiRSN_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_340ae:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_340e7 = load i32, i32* %ecx.global-to-local, align 8
  %v0_340eb = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_340eb, 16777216
  %v12_3410a = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_340e7, 16777216
  %v13_3410a = sdiv i32 %sext1, 16777216
  %v14_3410a = call i32 @unknown_693f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_3410a, i32 %v13_3410a, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3411b

bb:                                               ; preds = %dec_label_pc_340ae
  %v1_34119 = call i32 @function_34120()
  br label %dec_label_pc_3411b

dec_label_pc_3411b:                               ; preds = %bb, %dec_label_pc_340ae
  %v2_34119 = phi i32 [ %v1_34119, %bb ], [ 0, %dec_label_pc_340ae ]
  ret i32 %v2_34119

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34120() local_unnamed_addr {
dec_label_pc_34120:
  %v0_34121 = load i32, i32* @eax, align 8
  ret i32 %v0_34121
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSJ_8assignerEPKvEENT_11result_typeEiiRSO_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34122:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3415b = load i32, i32* %ecx.global-to-local, align 8
  %v0_3415f = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_3415f, 16777216
  %v12_3417e = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_3415b, 16777216
  %v13_3417e = sdiv i32 %sext1, 16777216
  %v14_3417e = call i32 @unknown_69996(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_3417e, i32 %v13_3417e, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3418f

bb:                                               ; preds = %dec_label_pc_34122
  %v1_3418d = call i32 @function_34194()
  br label %dec_label_pc_3418f

dec_label_pc_3418f:                               ; preds = %bb, %dec_label_pc_34122
  %v2_3418d = phi i32 [ %v1_3418d, %bb ], [ 0, %dec_label_pc_34122 ]
  ret i32 %v2_3418d

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34194() local_unnamed_addr {
dec_label_pc_34194:
  %v0_34195 = load i32, i32* @eax, align 8
  ret i32 %v0_34195
}

define i32 @_ZSt14__copy_move_a2ILb0EPP14CBlockTemplateS2_ET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34196:
  %v1_341c1 = call i32 @unknown_62605(i32 %arg3)
  %v1_341ce = call i32 @unknown_62605(i32 %arg2)
  %v1_341db = call i32 @unknown_62605(i32 %arg1)
  %v3_341eb = call i32 @unknown_69f36(i32 %v1_341db, i32 %v1_341ce, i32 %v1_341c1)
  store i32 %v3_341eb, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_341fc

bb:                                               ; preds = %dec_label_pc_34196
  %v1_341fa = call i32 @function_34201()
  br label %dec_label_pc_341fc

dec_label_pc_341fc:                               ; preds = %bb, %dec_label_pc_34196
  %v2_341fa = phi i32 [ %v1_341fa, %bb ], [ %v3_341eb, %dec_label_pc_34196 ]
  ret i32 %v2_341fa

; uselistorder directives
  uselistorder i32 (i32)* @unknown_62605, { 2, 1, 0 }
}

define i32 @function_34201() local_unnamed_addr {
dec_label_pc_34201:
  %v0_34207 = load i32, i32* @eax, align 8
  ret i32 %v0_34207
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256S2_IP6CBlock7CScriptEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_34208:
  store i32 67108863, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_34230

bb:                                               ; preds = %dec_label_pc_34208
  %v2_3422e = call i32 @function_34235(i32 %arg1)
  br label %dec_label_pc_34230

dec_label_pc_34230:                               ; preds = %bb, %dec_label_pc_34208
  %v3_3422e = phi i32 [ %v2_3422e, %bb ], [ 67108863, %dec_label_pc_34208 ]
  ret i32 %v3_3422e
}

define i32 @function_34235(i32 %arg1) local_unnamed_addr {
dec_label_pc_34235:
  %v0_34236 = load i32, i32* @eax, align 8
  ret i32 %v0_34236
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvSsEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34237:
  %v1_3426d = call i32 @unknown_675eb(i32 %arg3)
  %v3_34284 = call i32 @unknown_6a02b(i32 %arg2, i32 %v1_3426d, i32 1)
  store i32 %v3_34284, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_34295

bb:                                               ; preds = %dec_label_pc_34237
  %v1_34293 = call i32 @function_3429a()
  br label %dec_label_pc_34295

dec_label_pc_34295:                               ; preds = %bb, %dec_label_pc_34237
  %v2_34293 = phi i32 [ %v1_34293, %bb ], [ %v3_34284, %dec_label_pc_34237 ]
  ret i32 %v2_34293
}

define i32 @function_3429a() local_unnamed_addr {
dec_label_pc_3429a:
  %v0_3429b = load i32, i32* @eax, align 8
  ret i32 %v0_3429b
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3429c:
  %v1_342d2 = call i32 @unknown_67701(i32 %arg3)
  %v3_342e9 = call i32 @unknown_6a0da(i32 %arg2, i32 %v1_342d2, i32 1)
  store i32 %v3_342e9, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_342fa

bb:                                               ; preds = %dec_label_pc_3429c
  %v1_342f8 = call i32 @function_342ff()
  br label %dec_label_pc_342fa

dec_label_pc_342fa:                               ; preds = %bb, %dec_label_pc_3429c
  %v2_342f8 = phi i32 [ %v1_342f8, %bb ], [ %v3_342e9, %dec_label_pc_3429c ]
  ret i32 %v2_342f8
}

define i32 @function_342ff() local_unnamed_addr {
dec_label_pc_342ff:
  %v0_34300 = load i32, i32* @eax, align 8
  ret i32 %v0_34300
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34301:
  %v1_34337 = call i32 @unknown_67816(i32 %arg3)
  %v3_3434e = call i32 @unknown_6a197(i32 %arg2, i32 %v1_34337, i32 1)
  ret i32 %v3_3434e
}

define i32 @function_34354(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34354:
  %v0_34356 = load i32, i32* @edx, align 4
  %v1_34356 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34356 = icmp eq i32 %v1_34356, %v0_34356
  br i1 %v3_34356, label %bb, label %dec_label_pc_34354.dec_label_pc_3435f_crit_edge

dec_label_pc_34354.dec_label_pc_3435f_crit_edge:  ; preds = %dec_label_pc_34354
  %v2_3435d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3435f

bb:                                               ; preds = %dec_label_pc_34354
  %v1_3435d = call i32 @function_34364()
  br label %dec_label_pc_3435f

dec_label_pc_3435f:                               ; preds = %dec_label_pc_34354.dec_label_pc_3435f_crit_edge, %bb
  %v2_3435d = phi i32 [ %v2_3435d.pre, %dec_label_pc_34354.dec_label_pc_3435f_crit_edge ], [ %v1_3435d, %bb ]
  ret i32 %v2_3435d

; uselistorder directives
  uselistorder label %dec_label_pc_3435f, { 1, 0 }
}

define i32 @function_34364() local_unnamed_addr {
dec_label_pc_34364:
  %v0_34365 = load i32, i32* @eax, align 8
  ret i32 %v0_34365
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvbEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34366:
  %v1_3439c = call i32 @unknown_6792b(i32 %arg3)
  %v3_343b3 = call i32 @unknown_6a254(i32 %arg2, i32 %v1_3439c, i32 1)
  store i32 %v3_343b3, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_343c4

bb:                                               ; preds = %dec_label_pc_34366
  %v1_343c2 = call i32 @function_343c9()
  br label %dec_label_pc_343c4

dec_label_pc_343c4:                               ; preds = %bb, %dec_label_pc_34366
  %v2_343c2 = phi i32 [ %v1_343c2, %bb ], [ %v3_343b3, %dec_label_pc_34366 ]
  ret i32 %v2_343c2
}

define i32 @function_343c9() local_unnamed_addr {
dec_label_pc_343c9:
  %v0_343ca = load i32, i32* @eax, align 8
  ret i32 %v0_343ca
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvxEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_343cb:
  %v1_34401 = call i32 @unknown_67a14(i32 %arg3)
  %v3_34418 = call i32 @unknown_6a303(i32 %arg2, i32 %v1_34401, i32 1)
  store i32 %v3_34418, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_34429

bb:                                               ; preds = %dec_label_pc_343cb
  %v1_34427 = call i32 @function_3442e()
  br label %dec_label_pc_34429

dec_label_pc_34429:                               ; preds = %bb, %dec_label_pc_343cb
  %v2_34427 = phi i32 [ %v1_34427, %bb ], [ %v3_34418, %dec_label_pc_343cb ]
  ret i32 %v2_34427
}

define i32 @function_3442e() local_unnamed_addr {
dec_label_pc_3442e:
  %v0_3442f = load i32, i32* @eax, align 8
  ret i32 %v0_3442f
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSsEEEEPKvdEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_34430:
  %eax.global-to-local = alloca i32, align 4
  %v17_34433 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_34433
}

define i32 @function_34436(i32 %arg1) local_unnamed_addr {
dec_label_pc_34436:
  %v0_34436 = load i32, i32* @ebp, align 4
  %v1_34436 = add i32 %v0_34436, 8
  %v2_34436 = inttoptr i32 %v1_34436 to i32*
  %v3_34436 = load i32, i32* %v2_34436, align 4
  %v2_34439 = add i32 %v0_34436, -28
  %v3_34439 = inttoptr i32 %v2_34439 to i32*
  store i32 %v3_34436, i32* %v3_34439, align 4
  %v0_3443c = load i32, i32* @ebp, align 4
  %v1_3443c = add i32 %v0_3443c, 12
  %v2_3443c = inttoptr i32 %v1_3443c to i32*
  %v3_3443c = load i32, i32* %v2_3443c, align 4
  %v2_3443f = add i32 %v0_3443c, -32
  %v3_3443f = inttoptr i32 %v2_3443f to i32*
  store i32 %v3_3443c, i32* %v3_3443f, align 4
  %v0_34442 = load i32, i32* @ebp, align 4
  %v1_34442 = add i32 %v0_34442, 16
  %v2_34442 = inttoptr i32 %v1_34442 to i32*
  %v3_34442 = load i32, i32* %v2_34442, align 4
  %v2_34445 = add i32 %v0_34442, -36
  %v3_34445 = inttoptr i32 %v2_34445 to i32*
  store i32 %v3_34442, i32* %v3_34445, align 4
  %v0_34448 = load i32, i32* @ebp, align 4
  %v1_34448 = add i32 %v0_34448, 20
  %v2_34448 = inttoptr i32 %v1_34448 to i32*
  %v3_34448 = load i32, i32* %v2_34448, align 4
  %v2_3444b = add i32 %v0_34448, -40
  %v3_3444b = inttoptr i32 %v2_3444b to i32*
  store i32 %v3_34448, i32* %v3_3444b, align 4
  %v0_3444e = load i32, i32* @ebp, align 4
  %v1_3444e = add i32 %v0_3444e, 24
  %v2_3444e = inttoptr i32 %v1_3444e to i8*
  %v3_3444e = load i8, i8* %v2_3444e, align 1
  %v3_34452 = add i32 %v0_3444e, -41
  %v4_34452 = inttoptr i32 %v3_34452 to i8*
  store i8 %v3_3444e, i8* %v4_34452, align 1
  %v0_34455 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3445b = load i32, i32* @ebp, align 4
  %v2_3445b = add i32 %v1_3445b, -12
  %v3_3445b = inttoptr i32 %v2_3445b to i32*
  store i32 %v0_34455, i32* %v3_3445b, align 4
  %v0_34460 = load i32, i32* @ebp, align 4
  %v1_34460 = add i32 %v0_34460, -36
  %v2_34460 = inttoptr i32 %v1_34460 to i32*
  %v3_34460 = load i32, i32* %v2_34460, align 4
  %v1_34466 = call i32 @unknown_67b04(i32 %v3_34460)
  %v0_34477 = load i32, i32* @ebp, align 4
  %v1_34477 = add i32 %v0_34477, -32
  %v2_34477 = inttoptr i32 %v1_34477 to i32*
  %v3_34477 = load i32, i32* %v2_34477, align 4
  %v3_3447d = call i32 @unknown_6a3b2(i32 %v3_34477, i32 %v1_34466, i32 1)
  store i32 %v3_3447d, i32* @eax, align 8
  %v0_34482 = load i32, i32* @ebp, align 4
  %v1_34482 = add i32 %v0_34482, -12
  %v2_34482 = inttoptr i32 %v1_34482 to i32*
  %v3_34482 = load i32, i32* %v2_34482, align 4
  %v1_34485 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34485 = icmp eq i32 %v1_34485, %v3_34482
  br i1 %v3_34485, label %bb, label %dec_label_pc_3448e

bb:                                               ; preds = %dec_label_pc_34436
  %v1_3448c = call i32 @function_34493()
  br label %dec_label_pc_3448e

dec_label_pc_3448e:                               ; preds = %bb, %dec_label_pc_34436
  %v2_3448c = phi i32 [ %v1_3448c, %bb ], [ %v3_3447d, %dec_label_pc_34436 ]
  ret i32 %v2_3448c
}

define i32 @function_34493() local_unnamed_addr {
dec_label_pc_34493:
  %v0_34494 = load i32, i32* @eax, align 8
  ret i32 %v0_34494
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvSsEENT_11result_typeEiRSI_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_34495:
  %eax.global-to-local = alloca i32, align 4
  %v2_34496 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_34496
}

define i32 @function_344f7() local_unnamed_addr {
dec_label_pc_344f7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_344f7 = load i32, i32* %ecx.global-to-local, align 8
  %v1_344f7 = add i32 %v0_344f7, -1
  store i32 %v1_344f7, i32* %ecx.global-to-local, align 8
  %v0_344f9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_344f9
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvNS_17recursive_wrapperISC_EEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_344fa:
  ret i32 %arg2
}

define i32 @function_3450a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3450a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3450a = load i32, i32* @ebp, align 4
  %v0_3450b = load i32, i32* @ecx, align 8
  %v1_3450b = add i32 %v0_3450b, -1
  store i32 %v1_3450b, i32* %ecx.global-to-local, align 8
  %v1_3450d = add i32 %v0_3450a, 2
  store i32 %v1_3450d, i32* %ebp.global-to-local, align 4
  %v1_3450e = add i32 %v0_3450b, 1166793796
  %v2_3450e = inttoptr i32 %v1_3450e to i8*
  %v3_3450e = load i8, i8* %v2_3450e, align 1
  %v5_3450e = trunc i32 %v1_3450b to i8
  %v6_3450e = load i1, i1* @cf, align 1
  %v7_3450e = zext i1 %v6_3450e to i8
  %v8_3450e = add i8 %v3_3450e, %v5_3450e
  %v9_3450e = add i8 %v7_3450e, %v8_3450e
  %v27_3450e = icmp ule i8 %v9_3450e, %v3_3450e
  %v28_3450e = icmp ult i8 %v8_3450e, %v3_3450e
  %v29_3450e = select i1 %v6_3450e, i1 %v27_3450e, i1 %v28_3450e
  store i1 %v29_3450e, i1* %cf.global-to-local, align 1
  store i8 %v9_3450e, i8* %v2_3450e, align 1
  %v0_34514 = load i32, i32* @eax, align 8
  %v1_34514 = trunc i32 %v0_34514 to i8
  %v2_34514 = load i1, i1* %cf.global-to-local, align 1
  %v3_34514 = zext i1 %v2_34514 to i8
  %v4_34514 = add i8 %v1_34514, -119
  %v5_34514 = add i8 %v4_34514, %v3_34514
  %v22_34514 = icmp ule i8 %v5_34514, %v1_34514
  %v23_34514 = icmp ugt i8 %v1_34514, 118
  %v24_34514 = select i1 %v2_34514, i1 %v22_34514, i1 %v23_34514
  store i1 %v24_34514, i1* %cf.global-to-local, align 1
  %v25_34514 = zext i8 %v5_34514 to i32
  %v27_34514 = and i32 %v0_34514, -256
  %v28_34514 = or i32 %v25_34514, %v27_34514
  store i32 %v28_34514, i32* %eax.global-to-local, align 8
  %v0_34516 = load i32, i32* %ebp.global-to-local, align 4
  %v1_34516 = add i32 %v0_34516, 1
  store i32 %v1_34516, i32* @ebp, align 4
  %v1_3451b = add i32 %v28_34514, -1587161275
  %v2_3451b = inttoptr i32 %v1_3451b to i8*
  %v3_3451b = load i8, i8* %v2_3451b, align 1
  %v4_3451b = load i32, i32* %ecx.global-to-local, align 8
  %v5_3451b = trunc i32 %v4_3451b to i8
  %v7_3451b = zext i1 %v24_34514 to i8
  %v8_3451b = sub i8 %v3_3451b, %v5_3451b
  %v9_3451b = add i8 %v8_3451b, %v7_3451b
  %v19_3451b = sub i8 %v8_3451b, %v7_3451b
  %v20_3451b = icmp ult i8 %v3_3451b, %v19_3451b
  %v21_3451b = icmp ne i8 %v5_3451b, -1
  %v22_3451b = or i1 %v21_3451b, %v20_3451b
  %v23_3451b = icmp ult i8 %v3_3451b, %v5_3451b
  %v24_3451b = select i1 %v24_34514, i1 %v22_3451b, i1 %v23_3451b
  store i1 %v24_3451b, i1* %cf.global-to-local, align 1
  store i8 %v9_3451b, i8* %v2_3451b, align 1
  %v0_34521 = load i32, i32* %eax.global-to-local, align 8
  %v1_34521 = trunc i32 %v0_34521 to i8
  %v2_34521 = load i1, i1* %cf.global-to-local, align 1
  %v3_34521 = zext i1 %v2_34521 to i8
  %v4_34521 = add i8 %v3_34521, %v1_34521
  %v19_34521 = icmp ule i8 %v4_34521, %v1_34521
  %v21_34521 = icmp eq i1 %v2_34521, %v19_34521
  store i1 %v21_34521, i1* %cf.global-to-local, align 1
  %v22_34521 = zext i8 %v4_34521 to i32
  %v24_34521 = and i32 %v0_34521, -256
  %v25_34521 = or i32 %v22_34521, %v24_34521
  store i32 %v25_34521, i32* %eax.global-to-local, align 8
  %v1_34523 = inttoptr i32 %v25_34521 to i8*
  %v2_34523 = load i8, i8* %v1_34523, align 1
  %v5_34523 = add i8 %v2_34523, %v4_34521
  store i8 %v5_34523, i8* %v1_34523, align 1
  %v0_34525 = load i32, i32* %eax.global-to-local, align 8
  %v1_34525 = load i32, i32* @ebp, align 4
  %v2_34525 = add i32 %v1_34525, -12
  %v3_34525 = inttoptr i32 %v2_34525 to i32*
  store i32 %v0_34525, i32* %v3_34525, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3452a = load i32, i32* @ebp, align 4
  %v1_3452a = add i32 %v0_3452a, -36
  %v2_3452a = inttoptr i32 %v1_3452a to i32*
  %v3_3452a = load i32, i32* %v2_3452a, align 4
  store i32 %v3_3452a, i32* %eax.global-to-local, align 8
  %v1_34530 = call i32 @unknown_6795f(i32 %v3_3452a)
  store i32 %v1_34530, i32* %eax.global-to-local, align 8
  %v0_34541 = load i32, i32* @ebp, align 4
  %v1_34541 = add i32 %v0_34541, -32
  %v2_34541 = inttoptr i32 %v1_34541 to i32*
  %v3_34541 = load i32, i32* %v2_34541, align 4
  store i32 %v3_34541, i32* %eax.global-to-local, align 8
  %v3_34547 = call i32 @unknown_6a510(i32 %v3_34541, i32 %v1_34530, i32 1)
  store i32 %v3_34547, i32* @eax, align 8
  %v0_3454c = load i32, i32* @ebp, align 4
  %v1_3454c = add i32 %v0_3454c, -12
  %v2_3454c = inttoptr i32 %v1_3454c to i32*
  %v3_3454c = load i32, i32* %v2_3454c, align 4
  %v1_3454f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3454f = icmp eq i32 %v1_3454f, %v3_3454c
  br i1 %v3_3454f, label %bb, label %dec_label_pc_34558

bb:                                               ; preds = %dec_label_pc_3450a
  %v1_34556 = call i32 @function_3455d()
  store i32 %v1_34556, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_34558

dec_label_pc_34558:                               ; preds = %bb, %dec_label_pc_3450a
  %v3_34556 = phi i32 [ %v1_34556, %bb ], [ %v3_34547, %dec_label_pc_3450a ]
  ret i32 %v3_34556

; uselistorder directives
  uselistorder i8 %v4_34521, { 0, 2, 1 }
  uselistorder i8 %v1_34521, { 1, 0 }
  uselistorder i8 %v8_3451b, { 1, 0 }
  uselistorder i8 %v7_3451b, { 1, 0 }
  uselistorder i8 %v5_3451b, { 1, 0, 2 }
  uselistorder i1 %v24_34514, { 1, 0, 2 }
  uselistorder i8 %v5_34514, { 1, 0 }
  uselistorder i8 %v9_3450e, { 1, 0 }
  uselistorder i8 %v8_3450e, { 1, 0 }
  uselistorder i8 %v3_3450e, { 1, 2, 0 }
}

define i32 @function_3455d() local_unnamed_addr {
dec_label_pc_3455d:
  %v0_3455e = load i32, i32* @eax, align 8
  ret i32 %v0_3455e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvNS_17recursive_wrapperIS5_INS6_10Value_implIS9_EESaISK_EEEEEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3455f:
  %v1_34595 = call i32 @unknown_67a74(i32 %arg3)
  %v3_345ac = call i32 @unknown_6a5cd(i32 %arg2, i32 %v1_34595, i32 1)
  store i32 %v3_345ac, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_345bd

bb:                                               ; preds = %dec_label_pc_3455f
  %v1_345bb = call i32 @function_345c2()
  br label %dec_label_pc_345bd

dec_label_pc_345bd:                               ; preds = %bb, %dec_label_pc_3455f
  %v2_345bb = phi i32 [ %v1_345bb, %bb ], [ %v3_345ac, %dec_label_pc_3455f ]
  ret i32 %v2_345bb
}

define i32 @function_345c2() local_unnamed_addr {
dec_label_pc_345c2:
  %v0_345c3 = load i32, i32* @eax, align 8
  ret i32 %v0_345c3
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvbEENT_11result_typeEiRSI_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_345c4:
  %v1_345fa = call i32 @unknown_67b89(i32 %arg3)
  %v3_34611 = call i32 @unknown_6a68a(i32 %arg2, i32 %v1_345fa, i32 1)
  store i32 %v3_34611, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_34622

bb:                                               ; preds = %dec_label_pc_345c4
  %v1_34620 = call i32 @function_34627()
  br label %dec_label_pc_34622

dec_label_pc_34622:                               ; preds = %bb, %dec_label_pc_345c4
  %v2_34620 = phi i32 [ %v1_34620, %bb ], [ %v3_34611, %dec_label_pc_345c4 ]
  ret i32 %v2_34620
}

define i32 @function_34627() local_unnamed_addr {
dec_label_pc_34627:
  %v0_34628 = load i32, i32* @eax, align 8
  ret i32 %v0_34628
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvxEENT_11result_typeEiRSI_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34629:
  %v0_3464e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3464e
}

define i32 @function_34658() local_unnamed_addr {
dec_label_pc_34658:
  %v0_34658 = load i32, i32* @ebx, align 4
  %v1_34658 = add i32 %v0_34658, 76143685
  %v2_34658 = inttoptr i32 %v1_34658 to i8*
  %v3_34658 = load i8, i8* %v2_34658, align 1
  %v4_34658 = udiv i8 %v3_34658, 16
  %v5_34658 = mul i8 %v3_34658, 16
  %v6_34658 = or i8 %v4_34658, %v5_34658
  store i8 %v6_34658, i8* %v2_34658, align 1
  %v0_3465f = call i32 @unknown_67c72()
  %v0_34670 = load i32, i32* @ebp, align 4
  %v1_34670 = add i32 %v0_34670, -32
  %v2_34670 = inttoptr i32 %v1_34670 to i32*
  %v3_34670 = load i32, i32* %v2_34670, align 4
  %v3_34676 = call i32 @unknown_6a739(i32 %v3_34670, i32 %v0_3465f, i32 1)
  store i32 %v3_34676, i32* @eax, align 8
  %v0_3467b = load i32, i32* @ebp, align 4
  %v1_3467b = add i32 %v0_3467b, -12
  %v2_3467b = inttoptr i32 %v1_3467b to i32*
  %v3_3467b = load i32, i32* %v2_3467b, align 4
  %v1_3467e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3467e = icmp eq i32 %v1_3467e, %v3_3467b
  br i1 %v3_3467e, label %bb, label %dec_label_pc_34687

bb:                                               ; preds = %dec_label_pc_34658
  %v1_34685 = call i32 @function_3468c()
  br label %dec_label_pc_34687

dec_label_pc_34687:                               ; preds = %bb, %dec_label_pc_34658
  %v2_34685 = phi i32 [ %v1_34685, %bb ], [ %v3_34676, %dec_label_pc_34658 ]
  ret i32 %v2_34685
}

define i32 @function_3468c() local_unnamed_addr {
dec_label_pc_3468c:
  %v0_3468d = load i32, i32* @eax, align 8
  ret i32 %v0_3468d
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEPKvdEENT_11result_typeEiRSI_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3468e:
  ret i32 %arg4
}

define i32 @function_346aa() local_unnamed_addr {
dec_label_pc_346aa:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_346aa = load i32, i32* @ebp, align 4
  %v1_346aa = add i32 %v0_346aa, 1
  store i32 %v1_346aa, i32* @ebp, align 4
  %v3_346ab = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_346ab = fpext float %v3_346ab to x86_fp80
  %v5_346ab = load x86_fp80, x86_fp80* @st0, align 4
  %v6_346ab = fmul x86_fp80 %v4_346ab, %v5_346ab
  store x86_fp80 %v6_346ab, x86_fp80* @st0, align 4
  %v0_346af = load i32, i32* @eax, align 8
  %v1_346af = add i32 %v0_346af, -1587161275
  %v2_346af = inttoptr i32 %v1_346af to i8*
  %v3_346af = load i8, i8* %v2_346af, align 1
  %v4_346af = load i32, i32* @ecx, align 8
  %v5_346af = trunc i32 %v4_346af to i8
  %v6_346af = load i1, i1* @cf, align 1
  %v7_346af = zext i1 %v6_346af to i8
  %v8_346af = sub i8 %v3_346af, %v5_346af
  %v9_346af = add i8 %v8_346af, %v7_346af
  %v19_346af = sub i8 %v8_346af, %v7_346af
  %v20_346af = icmp ult i8 %v3_346af, %v19_346af
  %v21_346af = icmp ne i8 %v5_346af, -1
  %v22_346af = or i1 %v21_346af, %v20_346af
  %v23_346af = icmp ult i8 %v3_346af, %v5_346af
  %v24_346af = select i1 %v6_346af, i1 %v22_346af, i1 %v23_346af
  store i1 %v24_346af, i1* %cf.global-to-local, align 1
  store i8 %v9_346af, i8* %v2_346af, align 1
  %v0_346b5 = load i32, i32* @eax, align 8
  %v1_346b5 = trunc i32 %v0_346b5 to i8
  %v2_346b5 = load i1, i1* %cf.global-to-local, align 1
  %v3_346b5 = zext i1 %v2_346b5 to i8
  %v4_346b5 = add i8 %v3_346b5, %v1_346b5
  %v19_346b5 = icmp ule i8 %v4_346b5, %v1_346b5
  %v21_346b5 = icmp eq i1 %v2_346b5, %v19_346b5
  store i1 %v21_346b5, i1* %cf.global-to-local, align 1
  %v22_346b5 = zext i8 %v4_346b5 to i32
  %v24_346b5 = and i32 %v0_346b5, -256
  %v25_346b5 = or i32 %v22_346b5, %v24_346b5
  store i32 %v25_346b5, i32* %eax.global-to-local, align 8
  %v1_346b7 = inttoptr i32 %v25_346b5 to i8*
  %v2_346b7 = load i8, i8* %v1_346b7, align 1
  %v5_346b7 = add i8 %v2_346b7, %v4_346b5
  store i8 %v5_346b7, i8* %v1_346b7, align 1
  %v0_346b9 = load i32, i32* %eax.global-to-local, align 8
  %v1_346b9 = load i32, i32* @ebp, align 4
  %v2_346b9 = add i32 %v1_346b9, -12
  %v3_346b9 = inttoptr i32 %v2_346b9 to i32*
  store i32 %v0_346b9, i32* %v3_346b9, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_346be = load i32, i32* @ebp, align 4
  %v1_346be = add i32 %v0_346be, -36
  %v2_346be = inttoptr i32 %v1_346be to i32*
  %v3_346be = load i32, i32* %v2_346be, align 4
  store i32 %v3_346be, i32* %eax.global-to-local, align 8
  %v1_346c4 = call i32 @unknown_67d62(i32 %v3_346be)
  store i32 %v1_346c4, i32* %eax.global-to-local, align 8
  %v0_346d5 = load i32, i32* @ebp, align 4
  %v1_346d5 = add i32 %v0_346d5, -32
  %v2_346d5 = inttoptr i32 %v1_346d5 to i32*
  %v3_346d5 = load i32, i32* %v2_346d5, align 4
  store i32 %v3_346d5, i32* %eax.global-to-local, align 8
  %v3_346db = call i32 @unknown_6a7e8(i32 %v3_346d5, i32 %v1_346c4, i32 1)
  store i32 %v3_346db, i32* @eax, align 8
  %v0_346e0 = load i32, i32* @ebp, align 4
  %v1_346e0 = add i32 %v0_346e0, -12
  %v2_346e0 = inttoptr i32 %v1_346e0 to i32*
  %v3_346e0 = load i32, i32* %v2_346e0, align 4
  %v1_346e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_346e3 = icmp eq i32 %v1_346e3, %v3_346e0
  br i1 %v3_346e3, label %bb, label %dec_label_pc_346ec

bb:                                               ; preds = %dec_label_pc_346aa
  %v1_346ea = call i32 @function_346f1()
  store i32 %v1_346ea, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_346ec

dec_label_pc_346ec:                               ; preds = %bb, %dec_label_pc_346aa
  %v3_346ea = phi i32 [ %v1_346ea, %bb ], [ %v3_346db, %dec_label_pc_346aa ]
  ret i32 %v3_346ea

; uselistorder directives
  uselistorder i8 %v4_346b5, { 0, 2, 1 }
  uselistorder i8 %v1_346b5, { 1, 0 }
  uselistorder i8 %v5_346af, { 1, 0, 2 }
}

declare i32 @__stack_chk_fail.1289(i32, i32) local_unnamed_addr

define i32 @function_346f1() local_unnamed_addr {
dec_label_pc_346f1:
  %v0_346f2 = load i32, i32* @eax, align 8
  ret i32 %v0_346f2
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK7uint256xEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_346f4:
  ret i32 0
}

define i32 @function_3470c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3470c:
  %v0_3470c = load i32, i32* @eax, align 8
  %v11_3470c = and i32 %v0_3470c, or (i32 zext (i8 ptrtoint (i8* @global_var_49.2902 to i8) to i32), i32 -256)
  %v1_3470e = load i32, i32* @edx, align 4
  %v2_3470f = add i32 %v1_3470e, 139
  %v16_3470f = urem i32 %v2_3470f, 256
  %v18_3470f = and i32 %v1_3470e, -256
  %v19_3470f = or i32 %v16_3470f, %v18_3470f
  store i32 %v19_3470f, i32* @eax, align 8
  %v1_34713 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34713 = icmp eq i32 %v1_34713, %v11_3470c
  br i1 %v3_34713, label %bb, label %dec_label_pc_3471c

bb:                                               ; preds = %dec_label_pc_3470c
  %v1_3471a = call i32 @function_34721()
  br label %dec_label_pc_3471c

dec_label_pc_3471c:                               ; preds = %bb, %dec_label_pc_3470c
  %v2_3471a = phi i32 [ %v1_3471a, %bb ], [ %v19_3470f, %dec_label_pc_3470c ]
  ret i32 %v2_3471a

; uselistorder directives
  uselistorder i32 %v1_3470e, { 1, 0 }
}

define i32 @function_34721() local_unnamed_addr {
dec_label_pc_34721:
  %v0_34722 = load i32, i32* @eax, align 8
  ret i32 %v0_34722
}

define i32 @_ZNK5CTxIn9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34724:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_34765 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_34765, 16777216
  %v5_34781 = sdiv i32 %sext, 16777216
  %v6_34781 = call i32 @unknown_6a8c8(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %v5_34781)
  %v1_3478c = add i32 %arg1, 36
  store i32 %v1_3478c, i32* %edx.global-to-local, align 4
  %v0_3478f = load i32, i32* %esi.global-to-local, align 4
  %sext1 = mul i32 %v0_3478f, 16777216
  %v5_347ad = sdiv i32 %sext1, 16777216
  %v6_347ad = call i32 @unknown_6a930(i32 %arg2, i32 %v1_3478c, i32 %arg3, i32 %arg4, i32 %v5_347ad)
  %v1_347b8 = add i32 %arg1, ptrtoint (i32* @global_var_30.2823 to i32)
  store i32 %v1_347b8, i32* %edx.global-to-local, align 4
  %v0_347bb = load i32, i32* %ebx.global-to-local, align 4
  %sext2 = mul i32 %v0_347bb, 16777216
  %v5_347d7 = sdiv i32 %sext2, 16777216
  %v6_347d7 = call i32 @unknown_5d5b5(i32 %arg2, i32 %v1_347b8, i32 %arg3, i32 %arg4, i32 %v5_347d7)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_347eb

bb:                                               ; preds = %dec_label_pc_34724
  %v5_347b2 = add i32 %v6_347ad, %v6_34781
  %v5_347dc = add i32 %v6_347d7, %v5_347b2
  %v2_347e9 = call i32 @function_347f0(i32 %v5_347dc)
  br label %dec_label_pc_347eb

dec_label_pc_347eb:                               ; preds = %bb, %dec_label_pc_34724
  %v3_347e9 = phi i32 [ %v2_347e9, %bb ], [ 0, %dec_label_pc_34724 ]
  ret i32 %v3_347e9

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_347f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_347f0:
  %v0_347f6 = load i32, i32* @eax, align 8
  ret i32 %v0_347f6
}

define i32 @_ZNK6CTxOut9SerializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_347f8:
  %edx.global-to-local = alloca i32, align 4
  %v0_34838 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_34838, 16777216
  %v5_34854 = sdiv i32 %sext, 16777216
  %v6_34854 = call i32 @unknown_6146e(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %v5_34854)
  %v1_3485f = add i32 %arg1, 8
  store i32 %v1_3485f, i32* %edx.global-to-local, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34870(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34870:
  %v0_34870 = load i32, i32* @eax, align 8
  %v0_34874 = load i32, i32* @edx, align 4
  %v0_34878 = load i32, i32* @ebp, align 4
  %v1_34878 = add i32 %v0_34878, -32
  %v2_34878 = inttoptr i32 %v1_34878 to i32*
  %v3_34878 = load i32, i32* %v2_34878, align 4
  %v3_3487e = call i32 @unknown_6aa04(i32 %v3_34878, i32 %v0_34874, i32 %v0_34870)
  %v0_34883 = load i32, i32* @ebp, align 4
  %v1_34883 = add i32 %v0_34883, -20
  %v2_34883 = inttoptr i32 %v1_34883 to i32*
  %v3_34883 = load i32, i32* %v2_34883, align 4
  %v5_34883 = add i32 %v3_34883, %v3_3487e
  store i32 %v5_34883, i32* %v2_34883, align 4
  %v0_34886 = load i32, i32* @ebp, align 4
  %v1_34886 = add i32 %v0_34886, -12
  %v2_34886 = inttoptr i32 %v1_34886 to i32*
  %v3_34886 = load i32, i32* %v2_34886, align 4
  %v1_34889 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_34889 = xor i32 %v1_34889, %v3_34886
  %v3_34889 = icmp eq i32 %v2_34889, 0
  store i32 %v2_34889, i32* @eax, align 8
  br i1 %v3_34889, label %bb, label %dec_label_pc_34892

bb:                                               ; preds = %dec_label_pc_34870
  %v1_34890 = call i32 @function_34897()
  br label %dec_label_pc_34892

dec_label_pc_34892:                               ; preds = %bb, %dec_label_pc_34870
  %v2_34890 = phi i32 [ %v1_34890, %bb ], [ %v2_34889, %dec_label_pc_34870 ]
  ret i32 %v2_34890
}

define i32 @function_34897() local_unnamed_addr {
dec_label_pc_34897:
  %v0_3489c = load i32, i32* @eax, align 8
  ret i32 %v0_3489c
}

define i32 @_ZNSt12_Vector_baseIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE12_Vector_implC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3489e:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_348c8 = call i32 @unknown_6ab12(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_348d9 = add i32 %tmp103, 4
  %v2_348d9 = inttoptr i32 %v1_348d9 to i32*
  store i32 0, i32* %v2_348d9, align 4
  %v1_348e3 = add i32 %tmp103, 8
  %v2_348e3 = inttoptr i32 %v1_348e3 to i32*
  store i32 0, i32* %v2_348e3, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_348f6

bb:                                               ; preds = %dec_label_pc_3489e
  %v1_348f4 = call i32 @function_348fb()
  br label %dec_label_pc_348f6

dec_label_pc_348f6:                               ; preds = %bb, %dec_label_pc_3489e
  %v2_348f4 = phi i32 [ %v1_348f4, %bb ], [ 0, %dec_label_pc_3489e ]
  ret i32 %v2_348f4

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_348fb() local_unnamed_addr {
dec_label_pc_348fb:
  %v0_348fc = load i32, i32* @eax, align 8
  ret i32 %v0_348fc
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEPS6_ET0_T_SF_SE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_348fd:
  ret i32 %arg2
}

define i32 @function_3490e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3490e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_3490e = load i32, i32* @ecx, align 8
  %v1_3490e = add i32 %v0_3490e, 255
  %v0_34910 = load i32, i32* @ebp, align 4
  %v1_34910 = add i32 %v0_34910, 1
  store i32 %v1_34910, i32* @ebp, align 4
  %v1_34911 = add i32 %v0_3490e, -1587159996
  %v2_34911 = inttoptr i32 %v1_34911 to i8*
  %v3_34911 = load i8, i8* %v2_34911, align 1
  %v5_34911 = trunc i32 %v1_3490e to i8
  %v6_34911 = load i1, i1* @cf, align 1
  %v7_34911 = zext i1 %v6_34911 to i8
  %v8_34911 = add i8 %v3_34911, %v5_34911
  %v9_34911 = add i8 %v7_34911, %v8_34911
  %v27_34911 = icmp ule i8 %v9_34911, %v3_34911
  %v28_34911 = icmp ult i8 %v8_34911, %v3_34911
  %v29_34911 = select i1 %v6_34911, i1 %v27_34911, i1 %v28_34911
  store i1 %v29_34911, i1* %cf.global-to-local, align 1
  store i8 %v9_34911, i8* %v2_34911, align 1
  %v0_34917 = load i32, i32* @eax, align 8
  %v1_34917 = trunc i32 %v0_34917 to i8
  %v2_34917 = load i1, i1* %cf.global-to-local, align 1
  %v3_34917 = zext i1 %v2_34917 to i8
  %v4_34917 = add i8 %v3_34917, %v1_34917
  %v19_34917 = icmp ule i8 %v4_34917, %v1_34917
  %v21_34917 = icmp eq i1 %v2_34917, %v19_34917
  store i1 %v21_34917, i1* %cf.global-to-local, align 1
  %v22_34917 = zext i8 %v4_34917 to i32
  %v24_34917 = and i32 %v0_34917, -256
  %v25_34917 = or i32 %v22_34917, %v24_34917
  store i32 %v25_34917, i32* %eax.global-to-local, align 8
  %v1_34919 = inttoptr i32 %v25_34917 to i8*
  %v2_34919 = load i8, i8* %v1_34919, align 1
  %v5_34919 = add i8 %v2_34919, %v4_34917
  store i8 %v5_34919, i8* %v1_34919, align 1
  %v0_3491b = load i32, i32* %eax.global-to-local, align 8
  %v1_3491b = load i32, i32* @ebp, align 4
  %v2_3491b = add i32 %v1_3491b, -12
  %v3_3491b = inttoptr i32 %v2_3491b to i32*
  store i32 %v0_3491b, i32* %v3_3491b, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_34920 = load i32, i32* @ebp, align 4
  %v1_34920 = add i32 %v0_34920, -36
  %v2_34920 = inttoptr i32 %v1_34920 to i32*
  %v3_34920 = load i32, i32* %v2_34920, align 4
  store i32 %v3_34920, i32* %eax.global-to-local, align 8
  %v1_34927 = add i32 %v0_34920, -32
  %v2_34927 = inttoptr i32 %v1_34927 to i32*
  %v3_34927 = load i32, i32* %v2_34927, align 4
  store i32 %v3_34927, i32* %eax.global-to-local, align 8
  %v1_3492e = add i32 %v0_34920, -28
  %v2_3492e = inttoptr i32 %v1_3492e to i32*
  %v3_3492e = load i32, i32* %v2_3492e, align 4
  store i32 %v3_3492e, i32* %eax.global-to-local, align 8
  %v3_34934 = call i32 @unknown_6abb3(i32 %v3_3492e, i32 %v3_34927, i32 %v3_34920)
  store i32 %v3_34934, i32* %eax.global-to-local, align 8
  ret i32 %v3_34934

; uselistorder directives
  uselistorder i8 %v4_34917, { 0, 2, 1 }
  uselistorder i8 %v1_34917, { 1, 0 }
  uselistorder i8 %v9_34911, { 1, 0 }
  uselistorder i8 %v8_34911, { 1, 0 }
  uselistorder i8 %v3_34911, { 1, 2, 0 }
}

define i32 @function_3493e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3493e:
  %v0_3493e = load i32, i32* @eax, align 8
  %v1_3493e = load i1, i1* @cf, align 1
  %v2_3493e = zext i1 %v1_3493e to i32
  %v3_3493e = add i32 %v0_3493e, 20
  %v4_3493e = add i32 %v3_3493e, %v2_3493e
  %v14_3493e = icmp eq i32 %v4_3493e, 0
  store i32 %v4_3493e, i32* @eax, align 8
  br i1 %v14_3493e, label %bb, label %dec_label_pc_34945

bb:                                               ; preds = %dec_label_pc_3493e
  %v1_34943 = call i32 @function_3494a()
  br label %dec_label_pc_34945

dec_label_pc_34945:                               ; preds = %bb, %dec_label_pc_3493e
  %v2_34943 = phi i32 [ %v1_34943, %bb ], [ %v4_3493e, %dec_label_pc_3493e ]
  ret i32 %v2_34943
}

define i32 @function_3494a() local_unnamed_addr {
dec_label_pc_3494a:
  %v0_3494b = load i32, i32* @eax, align 8
  ret i32 %v0_3494b
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_Rjii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3494c:
  %v7_3498a = call i32 @unknown_46586(i32 %arg1, i32 %arg2, i32 4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3499b

bb:                                               ; preds = %dec_label_pc_3494c
  %v1_34999 = call i32 @function_349a0()
  br label %dec_label_pc_3499b

dec_label_pc_3499b:                               ; preds = %bb, %dec_label_pc_3494c
  %v2_34999 = phi i32 [ %v1_34999, %bb ], [ 0, %dec_label_pc_3494c ]
  ret i32 %v2_34999

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_349a0() local_unnamed_addr {
dec_label_pc_349a0:
  %v0_349a1 = load i32, i32* @eax, align 8
  ret i32 %v0_349a1
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_349a2:
  %v8_349e6 = call i32 @unknown_6ad1a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v8_349e6

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_349ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_349ec:
  %v0_349ec = load i32, i32* @ebp, align 4
  %v1_349ec = add i32 %v0_349ec, 1
  store i32 %v1_349ec, i32* @ebp, align 4
  %v0_349ee = load i32, i32* @eax, align 8
  %v1_349ee = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_349ee = xor i32 %v1_349ee, %v0_349ee
  %v3_349ee = icmp eq i32 %v2_349ee, 0
  store i32 %v2_349ee, i32* @eax, align 8
  br i1 %v3_349ee, label %bb, label %dec_label_pc_349f7

bb:                                               ; preds = %dec_label_pc_349ec
  %v1_349f5 = call i32 @function_349fc()
  br label %dec_label_pc_349f7

dec_label_pc_349f7:                               ; preds = %bb, %dec_label_pc_349ec
  %v2_349f5 = phi i32 [ %v1_349f5, %bb ], [ %v2_349ee, %dec_label_pc_349ec ]
  ret i32 %v2_349f5
}

define i32 @function_349fc() local_unnamed_addr {
dec_label_pc_349fc:
  %v0_349fd = load i32, i32* @eax, align 8
  ret i32 %v0_349fd
}

define i32 @_ZN12CTransaction11UnserializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_349fe:
  %edx.global-to-local = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  %v0_34a40 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_34a40, 16777216
  %v5_34a5c = sdiv i32 %sext, 16777216
  %v6_34a5c = call i32 @unknown_616e5(i32 %arg2, i32 %tmp113, i32 %arg3, i32 %arg4, i32 %v5_34a5c)
  %v1_34a6f = add i32 %tmp113, 4
  store i32 %v1_34a6f, i32* %edx.global-to-local, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %tmp113, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
}

define i32 @function_34a84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34a84:
  %v0_34a86 = load i32, i32* @edx, align 4
  %v0_34a8a = load i32, i32* @ebp, align 4
  %v1_34a8a = add i32 %v0_34a8a, -48
  %v2_34a8a = inttoptr i32 %v1_34a8a to i32*
  %v3_34a8a = load i32, i32* %v2_34a8a, align 4
  %v2_34a90 = call i32 @unknown_6b1f1(i32 %v3_34a8a, i32 %v0_34a86)
  %v0_34a95 = load i32, i32* @ebp, align 4
  %v1_34a95 = add i32 %v0_34a95, -36
  %v2_34a95 = inttoptr i32 %v1_34a95 to i32*
  %v3_34a95 = load i32, i32* %v2_34a95, align 4
  %v5_34a95 = add i32 %v3_34a95, %v2_34a90
  store i32 %v5_34a95, i32* %v2_34a95, align 4
  %v0_34a98 = load i32, i32* @ebp, align 4
  %v1_34a98 = add i32 %v0_34a98, -44
  %v2_34a98 = inttoptr i32 %v1_34a98 to i32*
  %v3_34a98 = load i32, i32* %v2_34a98, align 4
  %v1_34a9b = add i32 %v3_34a98, 16
  %v0_34a9e = load i32, i32* @esi, align 4
  %v1_34aa4 = add i32 %v0_34a98, -56
  %v2_34aa4 = inttoptr i32 %v1_34aa4 to i32*
  %v3_34aa4 = load i32, i32* %v2_34aa4, align 4
  %v1_34aab = add i32 %v0_34a98, -52
  %v2_34aab = inttoptr i32 %v1_34aab to i32*
  %v3_34aab = load i32, i32* %v2_34aab, align 4
  %v1_34ab6 = add i32 %v0_34a98, -48
  %v2_34ab6 = inttoptr i32 %v1_34ab6 to i32*
  %v3_34ab6 = load i32, i32* %v2_34ab6, align 4
  %sext = mul i32 %v0_34a9e, 16777216
  %v5_34abc = sdiv i32 %sext, 16777216
  %v6_34abc = call i32 @unknown_6b259(i32 %v3_34ab6, i32 %v1_34a9b, i32 %v3_34aab, i32 %v3_34aa4, i32 %v5_34abc)
  %v0_34ac1 = load i32, i32* @ebp, align 4
  %v1_34ac1 = add i32 %v0_34ac1, -36
  %v2_34ac1 = inttoptr i32 %v1_34ac1 to i32*
  %v3_34ac1 = load i32, i32* %v2_34ac1, align 4
  %v5_34ac1 = add i32 %v3_34ac1, %v6_34abc
  store i32 %v5_34ac1, i32* %v2_34ac1, align 4
  %v0_34ac4 = load i32, i32* @ebp, align 4
  %v1_34ac4 = add i32 %v0_34ac4, -44
  %v2_34ac4 = inttoptr i32 %v1_34ac4 to i32*
  %v3_34ac4 = load i32, i32* %v2_34ac4, align 4
  %v1_34ac7 = add i32 %v3_34ac4, 28
  %v0_34aca = load i32, i32* @ebx, align 4
  %v1_34ace = add i32 %v0_34ac4, -56
  %v2_34ace = inttoptr i32 %v1_34ace to i32*
  %v3_34ace = load i32, i32* %v2_34ace, align 4
  %v1_34ad5 = add i32 %v0_34ac4, -52
  %v2_34ad5 = inttoptr i32 %v1_34ad5 to i32*
  %v3_34ad5 = load i32, i32* %v2_34ad5, align 4
  %v1_34ae0 = add i32 %v0_34ac4, -48
  %v2_34ae0 = inttoptr i32 %v1_34ae0 to i32*
  %v3_34ae0 = load i32, i32* %v2_34ae0, align 4
  %sext1 = mul i32 %v0_34aca, 16777216
  %v5_34ae6 = sdiv i32 %sext1, 16777216
  %v6_34ae6 = call i32 @unknown_67928(i32 %v3_34ae0, i32 %v1_34ac7, i32 %v3_34ad5, i32 %v3_34ace, i32 %v5_34ae6)
  %v0_34aeb = load i32, i32* @ebp, align 4
  %v1_34aeb = add i32 %v0_34aeb, -36
  %v2_34aeb = inttoptr i32 %v1_34aeb to i32*
  %v3_34aeb = load i32, i32* %v2_34aeb, align 4
  %v5_34aeb = add i32 %v3_34aeb, %v6_34ae6
  store i32 %v5_34aeb, i32* %v2_34aeb, align 4
  %v0_34aee = load i32, i32* @ebp, align 4
  %v1_34aee = add i32 %v0_34aee, -28
  %v2_34aee = inttoptr i32 %v1_34aee to i32*
  %v3_34aee = load i32, i32* %v2_34aee, align 4
  %v1_34af1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_34af1 = xor i32 %v1_34af1, %v3_34aee
  %v3_34af1 = icmp eq i32 %v2_34af1, 0
  store i32 %v2_34af1, i32* @eax, align 8
  br i1 %v3_34af1, label %bb, label %dec_label_pc_34afa

bb:                                               ; preds = %dec_label_pc_34a84
  %v1_34af8 = call i32 @function_34aff()
  br label %dec_label_pc_34afa

dec_label_pc_34afa:                               ; preds = %bb, %dec_label_pc_34a84
  %v2_34af8 = phi i32 [ %v1_34af8, %bb ], [ %v2_34af1, %dec_label_pc_34a84 ]
  ret i32 %v2_34af8

; uselistorder directives
  uselistorder i32 %v0_34ac4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_34a98, { 0, 2, 1, 3 }
}

define i32 @function_34aff() local_unnamed_addr {
dec_label_pc_34aff:
  %v0_34b06 = load i32, i32* @eax, align 8
  ret i32 %v0_34b06
}

define i32 @_ZN9base_uintILj256EE11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34b08:
  %v7_34b46 = call i32 @unknown_46742(i32 %arg2, i32 %arg1, i32 32, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_34b57

bb:                                               ; preds = %dec_label_pc_34b08
  %v1_34b55 = call i32 @function_34b5c()
  br label %dec_label_pc_34b57

dec_label_pc_34b57:                               ; preds = %bb, %dec_label_pc_34b08
  %v2_34b55 = phi i32 [ %v1_34b55, %bb ], [ 0, %dec_label_pc_34b08 ]
  ret i32 %v2_34b55

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34b5c() local_unnamed_addr {
dec_label_pc_34b5c:
  %v0_34b5d = load i32, i32* @eax, align 8
  ret i32 %v0_34b5d
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_34b5e:
  %v2_34b78 = load i32, i32* %arg1, align 4
  %v1_34b7d = call i32 @unknown_6b421(i32 %v2_34b78)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_34b8e

bb:                                               ; preds = %dec_label_pc_34b5e
  %v1_34b8c = call i32 @function_34b93()
  br label %dec_label_pc_34b8e

dec_label_pc_34b8e:                               ; preds = %bb, %dec_label_pc_34b5e
  %v2_34b8c = phi i32 [ %v1_34b8c, %bb ], [ 0, %dec_label_pc_34b5e ]
  ret i32 %v2_34b8c
}

define i32 @function_34b93() local_unnamed_addr {
dec_label_pc_34b93:
  %v0_34b94 = load i32, i32* @eax, align 8
  ret i32 %v0_34b94
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_34b96:
  %v2_34bb0 = load i32, i32* %arg1, align 4
  %v1_34bb5 = call i32 @unknown_6b49f(i32 %v2_34bb0)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_34bc6

bb:                                               ; preds = %dec_label_pc_34b96
  %v1_34bc4 = call i32 @function_34bcb()
  br label %dec_label_pc_34bc6

dec_label_pc_34bc6:                               ; preds = %bb, %dec_label_pc_34b96
  %v2_34bc4 = phi i32 [ %v1_34bc4, %bb ], [ 0, %dec_label_pc_34b96 ]
  ret i32 %v2_34bc4
}

define i32 @function_34bcb() local_unnamed_addr {
dec_label_pc_34bcb:
  %v0_34bcc = load i32, i32* @eax, align 8
  ret i32 %v0_34bcc
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34bce:
  %v1_34bf3 = call i32 @unknown_6b51e(i32 %arg2)
  ret i32 %v1_34bf3
}

define i32 @function_34c05() local_unnamed_addr {
dec_label_pc_34c05:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34c05 = load i32, i32* %ecx.global-to-local, align 8
  %v1_34c05 = add i32 %v0_34c05, 611617219
  %v2_34c05 = inttoptr i32 %v1_34c05 to i32*
  %v3_34c05 = load i32, i32* %v2_34c05, align 4
  %v4_34c05 = add i32 %v3_34c05, -1
  store i32 %v4_34c05, i32* %v2_34c05, align 4
  %v0_34c0b = load i32, i32* %eax.global-to-local, align 8
  %v1_34c0b = trunc i32 %v0_34c0b to i8
  %v6_34c0b = icmp ugt i8 %v1_34c0b, 118
  %v3_34c0d = zext i1 %v6_34c0b to i32
  %v4_34c0d = add i32 %v0_34c0b, 101
  %v5_34c0d = add i32 %v3_34c0d, %v4_34c0d
  %v31_34c0d = and i32 %v5_34c0d, 255
  %v33_34c0d = and i32 %v0_34c0b, -256
  %v34_34c0d = or i32 %v31_34c0d, %v33_34c0d
  store i32 %v34_34c0d, i32* %eax.global-to-local, align 8
  %v0_34c0f = call i32 @unknown_4c636()
  store i32 %v0_34c0f, i32* %eax.global-to-local, align 8
  %v0_34c14 = load i32, i32* %ebp.global-to-local, align 4
  %v1_34c14 = add i32 %v0_34c14, -28
  %v2_34c14 = inttoptr i32 %v1_34c14 to i32*
  %v3_34c14 = load i32, i32* %v2_34c14, align 4
  store i32 %v3_34c14, i32* %eax.global-to-local, align 8
  %v0_34c17 = load i32, i32* %ebx.global-to-local, align 4
  %v2_34c17 = inttoptr i32 %v3_34c14 to i32*
  store i32 %v0_34c17, i32* %v2_34c17, align 4
  %v0_34c19 = load i32, i32* %ebp.global-to-local, align 4
  %v1_34c19 = add i32 %v0_34c19, -12
  %v2_34c19 = inttoptr i32 %v1_34c19 to i32*
  %v3_34c19 = load i32, i32* %v2_34c19, align 4
  store i32 %v3_34c19, i32* %eax.global-to-local, align 8
  %v1_34c1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_34c1c = xor i32 %v1_34c1c, %v3_34c19
  %v3_34c1c = icmp eq i32 %v2_34c1c, 0
  store i32 %v2_34c1c, i32* @eax, align 8
  br i1 %v3_34c1c, label %bb, label %dec_label_pc_34c25

bb:                                               ; preds = %dec_label_pc_34c05
  %v1_34c23 = call i32 @function_34c40()
  store i32 %v1_34c23, i32* @eax, align 8
  br label %dec_label_pc_34c25

dec_label_pc_34c25:                               ; preds = %bb, %dec_label_pc_34c05
  %v0_34c25 = call i32 @function_34c3b()
  store i32 %v0_34c25, i32* %eax.global-to-local, align 8
  ret i32 %v0_34c25

; uselistorder directives
  uselistorder i32 %v0_34c0b, { 1, 0, 2 }
}

define i32 @function_34c2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_34c2c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34c3b() local_unnamed_addr {
dec_label_pc_34c3b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34c40() local_unnamed_addr {
dec_label_pc_34c40:
  %v0_34c46 = load i32, i32* @eax, align 8
  ret i32 %v0_34c46
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEC1ERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34c48:
  %v1_34c6d = call i32 @unknown_6b5ce(i32 %arg2)
  ret i32 %v1_34c6d
}

define i32 @function_34c81() local_unnamed_addr {
dec_label_pc_34c81:
  %eax.global-to-local = alloca i32, align 4
  %v0_34c81 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34c81
}

define i32 @function_34c96() local_unnamed_addr {
dec_label_pc_34c96:
  %v0_34c96 = load i32, i32* @eax, align 8
  %v1_34c96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_34c96 = xor i32 %v1_34c96, %v0_34c96
  %v3_34c96 = icmp eq i32 %v2_34c96, 0
  store i32 %v2_34c96, i32* @eax, align 8
  br i1 %v3_34c96, label %bb, label %dec_label_pc_34c9f

bb:                                               ; preds = %dec_label_pc_34c96
  %v1_34c9d = call i32 @function_34cba()
  store i32 %v1_34c9d, i32* @eax, align 8
  br label %dec_label_pc_34c9f

dec_label_pc_34c9f:                               ; preds = %bb, %dec_label_pc_34c96
  %v0_34c9f = call i32 @function_34cb5()
  ret i32 %v0_34c9f
}

define i32 @function_34cb5() local_unnamed_addr {
dec_label_pc_34cb5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34cba() local_unnamed_addr {
dec_label_pc_34cba:
  %v0_34cc0 = load i32, i32* @eax, align 8
  ret i32 %v0_34cc0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34cc1:
  %v0_34cec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_34cec
}

define i32 @function_34cf6(i32 %arg1) local_unnamed_addr {
dec_label_pc_34cf6:
  %v0_34cf6 = load i32, i32* @eax, align 8
  %v1_34cf6 = add i32 %v0_34cf6, -1961876396
  %v2_34cf6 = inttoptr i32 %v1_34cf6 to i8*
  %v3_34cf6 = load i8, i8* %v2_34cf6, align 1
  %v4_34cf6 = udiv i8 %v3_34cf6, 32
  %v5_34cf6 = mul i8 %v3_34cf6, 8
  %v6_34cf6 = or i8 %v4_34cf6, %v5_34cf6
  store i8 %v6_34cf6, i8* %v2_34cf6, align 1
  %v1_34cfd = load i32, i32* @ecx, align 8
  %v0_34d03 = load i32, i32* @ebp, align 4
  %v1_34d0a = add i32 %v0_34d03, 2
  %v9_34d0a = icmp eq i32 %v1_34d0a, 0
  store i32 %v1_34d0a, i32* @ebp, align 4
  %v2_34d0b = icmp eq i32 %v1_34cfd, 1
  %v4_34d0b = or i1 %v2_34d0b, %v9_34d0a
  br i1 %v4_34d0b, label %dec_label_pc_34cf6.dec_label_pc_34d0d_crit_edge, label %bb

dec_label_pc_34cf6.dec_label_pc_34d0d_crit_edge:  ; preds = %dec_label_pc_34cf6
  br label %dec_label_pc_34d0d

bb:                                               ; preds = %dec_label_pc_34cf6
  %v6_34d0b = call i32 @function_34c96()
  %v0_34d10.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_34d0d

dec_label_pc_34d0d:                               ; preds = %dec_label_pc_34cf6.dec_label_pc_34d0d_crit_edge, %bb
  %v0_34d10 = phi i32 [ %v1_34d0a, %dec_label_pc_34cf6.dec_label_pc_34d0d_crit_edge ], [ %v0_34d10.pre, %bb ]
  %v1_34d10 = add i32 %v0_34d10, -28
  %v2_34d10 = inttoptr i32 %v1_34d10 to i32*
  %v3_34d10 = load i32, i32* %v2_34d10, align 4
  %v1_34d16 = call i32 @unknown_6b67c(i32 %v3_34d10)
  store i32 %v1_34d16, i32* @eax, align 8
  %v0_34d1b = load i32, i32* @ebp, align 4
  %v1_34d1b = add i32 %v0_34d1b, -12
  %v2_34d1b = inttoptr i32 %v1_34d1b to i32*
  %v3_34d1b = load i32, i32* %v2_34d1b, align 4
  %v1_34d1e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34d1e = icmp eq i32 %v1_34d1e, %v3_34d1b
  br i1 %v3_34d1e, label %bb5, label %dec_label_pc_34d27

bb5:                                              ; preds = %dec_label_pc_34d0d
  %v1_34d25 = call i32 @function_34d2c()
  br label %dec_label_pc_34d27

dec_label_pc_34d27:                               ; preds = %bb5, %dec_label_pc_34d0d
  %v2_34d25 = phi i32 [ %v1_34d25, %bb5 ], [ %v1_34d16, %dec_label_pc_34d0d ]
  ret i32 %v2_34d25

; uselistorder directives
  uselistorder label %dec_label_pc_34d0d, { 1, 0 }
}

define i32 @function_34d2c() local_unnamed_addr {
dec_label_pc_34d2c:
  %v0_34d2d = load i32, i32* @eax, align 8
  ret i32 %v0_34d2d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsSJ_NSA_ISB_INSC_10Value_implISF_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34d2e:
  %edx.global-to-local = alloca i32, align 4
  %v0_34d64 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_34d64, 16777216
  %v5_34d83 = sdiv i32 %sext, 16777216
  %v6_34d83 = call i32 @unknown_6b74e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_34d83)
  store i32 %v6_34d83, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_34d94

bb:                                               ; preds = %dec_label_pc_34d2e
  %v1_34d92 = call i32 @function_34d99()
  br label %dec_label_pc_34d94

dec_label_pc_34d94:                               ; preds = %bb, %dec_label_pc_34d2e
  %v2_34d92 = phi i32 [ %v1_34d92, %bb ], [ %v6_34d83, %dec_label_pc_34d2e ]
  ret i32 %v2_34d92
}

define i32 @function_34d99() local_unnamed_addr {
dec_label_pc_34d99:
  %v0_34d9a = load i32, i32* @eax, align 8
  ret i32 %v0_34d9a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEENS_7variantISsNSA_ISB_INSC_9Pair_implISF_EESaISM_EEEESJ_bxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34d9b:
  %edx.global-to-local = alloca i32, align 4
  %v0_34dd1 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_34dd1, 16777216
  %v5_34df0 = sdiv i32 %sext, 16777216
  %v6_34df0 = call i32 @unknown_6b820(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_34df0)
  store i32 %v6_34df0, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_34e01

bb:                                               ; preds = %dec_label_pc_34d9b
  %v1_34dff = call i32 @function_34e06()
  br label %dec_label_pc_34e01

dec_label_pc_34e01:                               ; preds = %bb, %dec_label_pc_34d9b
  %v2_34dff = phi i32 [ %v1_34dff, %bb ], [ %v6_34df0, %dec_label_pc_34d9b ]
  ret i32 %v2_34dff
}

define i32 @function_34e06() local_unnamed_addr {
dec_label_pc_34e06:
  %v0_34e07 = load i32, i32* @eax, align 8
  ret i32 %v0_34e07
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34e08:
  ret i32 %arg4
}

define i32 @function_34e24(i32 %arg1) local_unnamed_addr {
dec_label_pc_34e24:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_34e24 = load i32, i32* @ebp, align 4
  %v1_34e24 = add i32 %v0_34e24, 1
  store i32 %v1_34e24, i32* %ebp.global-to-local, align 4
  %v3_34e25 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_34e25 = fpext float %v3_34e25 to x86_fp80
  %v5_34e25 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_34e25 = fmul x86_fp80 %v4_34e25, %v5_34e25
  store x86_fp80 %v6_34e25, x86_fp80* @st0, align 4
  %v0_34e27 = load i32, i32* @edx, align 4
  %v1_34e27 = and i32 %v0_34e27, -65281
  %v2_34e27 = or i32 %v1_34e27, 17664
  store i32 %v2_34e27, i32* %edx.global-to-local, align 4
  %v0_34e29 = load i32, i32* @eax, align 8
  %v1_34e29 = add i32 %v0_34e29, 1166792517
  %v2_34e29 = inttoptr i32 %v1_34e29 to i8*
  %v3_34e29 = load i8, i8* %v2_34e29, align 1
  %v4_34e29 = load i32, i32* @ecx, align 8
  %v5_34e29 = trunc i32 %v4_34e29 to i8
  %v6_34e29 = load i1, i1* @cf, align 1
  %v7_34e29 = zext i1 %v6_34e29 to i8
  %v8_34e29 = sub i8 %v3_34e29, %v5_34e29
  %v9_34e29 = add i8 %v8_34e29, %v7_34e29
  %v19_34e29 = sub i8 %v8_34e29, %v7_34e29
  %v20_34e29 = icmp ult i8 %v3_34e29, %v19_34e29
  %v21_34e29 = icmp ne i8 %v5_34e29, -1
  %v22_34e29 = or i1 %v21_34e29, %v20_34e29
  %v23_34e29 = icmp ult i8 %v3_34e29, %v5_34e29
  %v24_34e29 = select i1 %v6_34e29, i1 %v22_34e29, i1 %v23_34e29
  store i1 %v24_34e29, i1* %cf.global-to-local, align 1
  store i8 %v9_34e29, i8* %v2_34e29, align 1
  %v0_34e2f = load i32, i32* @eax, align 8
  %v1_34e2f = trunc i32 %v0_34e2f to i8
  %v2_34e2f = load i1, i1* %cf.global-to-local, align 1
  %v3_34e2f = zext i1 %v2_34e2f to i32
  %v4_34e2f = add i32 %v0_34e2f, 119
  %v5_34e2f = add i32 %v4_34e2f, %v3_34e2f
  %v17_34e2f = icmp ult i8 %v1_34e2f, -119
  %v18_34e2f = or i1 %v2_34e2f, %v17_34e2f
  store i1 %v18_34e2f, i1* %cf.global-to-local, align 1
  %v31_34e2f = urem i32 %v5_34e2f, 256
  %v33_34e2f = and i32 %v0_34e2f, -256
  %v34_34e2f = or i32 %v31_34e2f, %v33_34e2f
  store i32 %v34_34e2f, i32* %eax.global-to-local, align 8
  %v0_34e31 = load i32, i32* %ebp.global-to-local, align 4
  %v1_34e31 = add i32 %v0_34e31, 1
  store i32 %v1_34e31, i32* @ebp, align 4
  %v1_34e32 = add i32 %v0_34e31, -94
  %v2_34e32 = inttoptr i32 %v1_34e32 to i8*
  %v3_34e32 = load i8, i8* %v2_34e32, align 1
  %v5_34e32 = mul i8 %v3_34e32, 2
  store i8 %v5_34e32, i8* %v2_34e32, align 1
  %v16_34e32 = icmp slt i8 %v3_34e32, 0
  %v0_34e35 = load i32, i32* %eax.global-to-local, align 8
  %v1_34e35 = trunc i32 %v0_34e35 to i8
  %v3_34e35 = zext i1 %v16_34e32 to i8
  %v4_34e35 = add i8 %v1_34e35, %v3_34e35
  %v19_34e35 = icmp ule i8 %v4_34e35, %v1_34e35
  %v21_34e35 = icmp eq i1 %v16_34e32, %v19_34e35
  store i1 %v21_34e35, i1* %cf.global-to-local, align 1
  %v22_34e35 = zext i8 %v4_34e35 to i32
  %v24_34e35 = and i32 %v0_34e35, -256
  %v25_34e35 = or i32 %v22_34e35, %v24_34e35
  store i32 %v25_34e35, i32* %eax.global-to-local, align 8
  %v1_34e37 = inttoptr i32 %v25_34e35 to i8*
  %v2_34e37 = load i8, i8* %v1_34e37, align 1
  %v5_34e37 = add i8 %v2_34e37, %v4_34e35
  store i8 %v5_34e37, i8* %v1_34e37, align 1
  %v0_34e39 = load i32, i32* %eax.global-to-local, align 8
  %v1_34e39 = load i32, i32* @ebp, align 4
  %v2_34e39 = add i32 %v1_34e39, -12
  %v3_34e39 = inttoptr i32 %v2_34e39 to i32*
  store i32 %v0_34e39, i32* %v3_34e39, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_34e3e = load i32, i32* %edx.global-to-local, align 4
  %v0_34e42 = load i32, i32* @ebp, align 4
  %v1_34e42 = add i32 %v0_34e42, -40
  %v2_34e42 = inttoptr i32 %v1_34e42 to i32*
  %v3_34e42 = load i32, i32* %v2_34e42, align 4
  store i32 %v3_34e42, i32* %eax.global-to-local, align 8
  %v1_34e49 = add i32 %v0_34e42, -36
  %v2_34e49 = inttoptr i32 %v1_34e49 to i32*
  %v3_34e49 = load i32, i32* %v2_34e49, align 4
  store i32 %v3_34e49, i32* %eax.global-to-local, align 8
  %v1_34e50 = add i32 %v0_34e42, -32
  %v2_34e50 = inttoptr i32 %v1_34e50 to i32*
  %v3_34e50 = load i32, i32* %v2_34e50, align 4
  store i32 %v3_34e50, i32* %eax.global-to-local, align 8
  %v1_34e57 = add i32 %v0_34e42, -28
  %v2_34e57 = inttoptr i32 %v1_34e57 to i32*
  %v3_34e57 = load i32, i32* %v2_34e57, align 4
  store i32 %v3_34e57, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_34e3e, 16777216
  %v5_34e5d = sdiv i32 %sext, 16777216
  %v6_34e5d = call i32 @unknown_6b8f2(i32 %v3_34e57, i32 %v3_34e50, i32 %v3_34e49, i32 %v3_34e42, i32 %v5_34e5d)
  store i32 %v6_34e5d, i32* @eax, align 8
  %v0_34e62 = load i32, i32* @ebp, align 4
  %v1_34e62 = add i32 %v0_34e62, -12
  %v2_34e62 = inttoptr i32 %v1_34e62 to i32*
  %v3_34e62 = load i32, i32* %v2_34e62, align 4
  store i32 %v3_34e62, i32* %edx.global-to-local, align 4
  %v1_34e65 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_34e65 = xor i32 %v1_34e65, %v3_34e62
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_34e65 = icmp eq i32 %v2_34e65, 0
  store i32 %v2_34e65, i32* %edx.global-to-local, align 4
  br i1 %v3_34e65, label %bb, label %dec_label_pc_34e6e

bb:                                               ; preds = %dec_label_pc_34e24
  %v1_34e6c = call i32 @function_34e73()
  store i32 %v1_34e6c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_34e6e

dec_label_pc_34e6e:                               ; preds = %bb, %dec_label_pc_34e24
  %v2_34e6c = phi i32 [ %v1_34e6c, %bb ], [ %v6_34e5d, %dec_label_pc_34e24 ]
  ret i32 %v2_34e6c

; uselistorder directives
  uselistorder i32 %v0_34e42, { 1, 0, 2, 3 }
  uselistorder i8 %v4_34e35, { 0, 2, 1 }
  uselistorder i8 %v1_34e35, { 1, 0 }
  uselistorder i8 %v3_34e32, { 1, 0 }
  uselistorder i1 %v2_34e2f, { 1, 0 }
  uselistorder i32 %v0_34e2f, { 1, 0, 2 }
  uselistorder i8 %v5_34e29, { 1, 0, 2 }
}

define i32 @function_34e73() local_unnamed_addr {
dec_label_pc_34e73:
  %v0_34e74 = load i32, i32* @eax, align 8
  ret i32 %v0_34e74
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_34e75:
  %eax.global-to-local = alloca i32, align 4
  %v2_34e76 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_34e76
}

define i32 @function_34e90(i32 %arg1) local_unnamed_addr {
dec_label_pc_34e90:
  %v0_34e90 = load i32, i32* @eax, align 8
  %v1_34e90 = load i32, i32* @ebp, align 4
  %v2_34e90 = add i32 %v1_34e90, -40
  %v3_34e90 = inttoptr i32 %v2_34e90 to i32*
  store i32 %v0_34e90, i32* %v3_34e90, align 4
  %v0_34e93 = load i32, i32* @ebp, align 4
  %v1_34e93 = add i32 %v0_34e93, 24
  %v2_34e93 = inttoptr i32 %v1_34e93 to i8*
  %v3_34e93 = load i8, i8* %v2_34e93, align 1
  %v3_34e97 = add i32 %v0_34e93, -41
  %v4_34e97 = inttoptr i32 %v3_34e97 to i8*
  store i8 %v3_34e93, i8* %v4_34e97, align 1
  %v0_34e9a = load i32, i32* @ebp, align 4
  %v1_34e9a = add i32 %v0_34e9a, 28
  %v2_34e9a = inttoptr i32 %v1_34e9a to i32*
  %v3_34e9a = load i32, i32* %v2_34e9a, align 4
  %v2_34e9d = add i32 %v0_34e9a, -48
  %v3_34e9d = inttoptr i32 %v2_34e9d to i32*
  store i32 %v3_34e9a, i32* %v3_34e9d, align 4
  %v0_34ea0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_34ea6 = load i32, i32* @ebp, align 4
  %v2_34ea6 = add i32 %v1_34ea6, -12
  %v3_34ea6 = inttoptr i32 %v2_34ea6 to i32*
  store i32 %v0_34ea0, i32* %v3_34ea6, align 4
  %v0_34eab = load i32, i32* @edx, align 4
  %v0_34eaf = load i32, i32* @ebp, align 4
  %v1_34eaf = add i32 %v0_34eaf, -40
  %v2_34eaf = inttoptr i32 %v1_34eaf to i32*
  %v3_34eaf = load i32, i32* %v2_34eaf, align 4
  %v1_34eb6 = add i32 %v0_34eaf, -36
  %v2_34eb6 = inttoptr i32 %v1_34eb6 to i32*
  %v3_34eb6 = load i32, i32* %v2_34eb6, align 4
  %v1_34ebd = add i32 %v0_34eaf, -32
  %v2_34ebd = inttoptr i32 %v1_34ebd to i32*
  %v3_34ebd = load i32, i32* %v2_34ebd, align 4
  %v1_34ec4 = add i32 %v0_34eaf, -28
  %v2_34ec4 = inttoptr i32 %v1_34ec4 to i32*
  %v3_34ec4 = load i32, i32* %v2_34ec4, align 4
  %sext = mul i32 %v0_34eab, 16777216
  %v5_34eca = sdiv i32 %sext, 16777216
  %v6_34eca = call i32 @unknown_6b9c4(i32 %v3_34ec4, i32 %v3_34ebd, i32 %v3_34eb6, i32 %v3_34eaf, i32 %v5_34eca)
  store i32 %v6_34eca, i32* @eax, align 8
  %v0_34ecf = load i32, i32* @ebp, align 4
  %v1_34ecf = add i32 %v0_34ecf, -12
  %v2_34ecf = inttoptr i32 %v1_34ecf to i32*
  %v3_34ecf = load i32, i32* %v2_34ecf, align 4
  %v1_34ed2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34ed2 = icmp eq i32 %v1_34ed2, %v3_34ecf
  br i1 %v3_34ed2, label %bb, label %dec_label_pc_34edb

bb:                                               ; preds = %dec_label_pc_34e90
  %v1_34ed9 = call i32 @function_34ee0()
  br label %dec_label_pc_34edb

dec_label_pc_34edb:                               ; preds = %bb, %dec_label_pc_34e90
  %v2_34ed9 = phi i32 [ %v1_34ed9, %bb ], [ %v6_34eca, %dec_label_pc_34e90 ]
  ret i32 %v2_34ed9

; uselistorder directives
  uselistorder i32 %v0_34eaf, { 1, 0, 2, 3 }
}

define i32 @function_34ee0() local_unnamed_addr {
dec_label_pc_34ee0:
  %v0_34ee1 = load i32, i32* @eax, align 8
  ret i32 %v0_34ee1
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PT1_T2_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34ee2:
  ret i32 %arg2
}

define i32 @function_34ef2(i32 %arg1) local_unnamed_addr {
dec_label_pc_34ef2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34ef2 = load i32, i32* @ebp, align 4
  %v0_34ef3 = load i32, i32* @ecx, align 8
  %v1_34ef3 = add i32 %v0_34ef3, -1
  store i32 %v1_34ef3, i32* %ecx.global-to-local, align 8
  %v1_34ef5 = add i32 %v0_34ef2, 2
  store i32 %v1_34ef5, i32* %ebp.global-to-local, align 4
  %v1_34ef6 = add i32 %v0_34ef3, 1166793796
  %v2_34ef6 = inttoptr i32 %v1_34ef6 to i8*
  %v3_34ef6 = load i8, i8* %v2_34ef6, align 1
  %v5_34ef6 = trunc i32 %v1_34ef3 to i8
  %v6_34ef6 = load i1, i1* @cf, align 1
  %v7_34ef6 = zext i1 %v6_34ef6 to i8
  %v8_34ef6 = add i8 %v3_34ef6, %v5_34ef6
  %v9_34ef6 = add i8 %v7_34ef6, %v8_34ef6
  %v27_34ef6 = icmp ule i8 %v9_34ef6, %v3_34ef6
  %v28_34ef6 = icmp ult i8 %v8_34ef6, %v3_34ef6
  %v29_34ef6 = select i1 %v6_34ef6, i1 %v27_34ef6, i1 %v28_34ef6
  store i1 %v29_34ef6, i1* %cf.global-to-local, align 1
  store i8 %v9_34ef6, i8* %v2_34ef6, align 1
  %v0_34efc = load i32, i32* @eax, align 8
  %v1_34efc = trunc i32 %v0_34efc to i8
  %v2_34efc = load i1, i1* %cf.global-to-local, align 1
  %v3_34efc = zext i1 %v2_34efc to i8
  %v4_34efc = add i8 %v1_34efc, -119
  %v5_34efc = add i8 %v4_34efc, %v3_34efc
  %v22_34efc = icmp ule i8 %v5_34efc, %v1_34efc
  %v23_34efc = icmp ugt i8 %v1_34efc, 118
  %v24_34efc = select i1 %v2_34efc, i1 %v22_34efc, i1 %v23_34efc
  store i1 %v24_34efc, i1* %cf.global-to-local, align 1
  %v25_34efc = zext i8 %v5_34efc to i32
  %v27_34efc = and i32 %v0_34efc, -256
  %v28_34efc = or i32 %v25_34efc, %v27_34efc
  store i32 %v28_34efc, i32* %eax.global-to-local, align 8
  %v0_34efe = load i32, i32* %ebp.global-to-local, align 4
  %v1_34efe = add i32 %v0_34efe, 1
  store i32 %v1_34efe, i32* %ebp.global-to-local, align 4
  %v1_34f03 = add i32 %v28_34efc, 1166792517
  %v2_34f03 = inttoptr i32 %v1_34f03 to i8*
  %v3_34f03 = load i8, i8* %v2_34f03, align 1
  %v4_34f03 = load i32, i32* %ecx.global-to-local, align 8
  %v5_34f03 = trunc i32 %v4_34f03 to i8
  %v7_34f03 = zext i1 %v24_34efc to i8
  %v8_34f03 = sub i8 %v3_34f03, %v5_34f03
  %v9_34f03 = add i8 %v8_34f03, %v7_34f03
  %v19_34f03 = sub i8 %v8_34f03, %v7_34f03
  %v20_34f03 = icmp ult i8 %v3_34f03, %v19_34f03
  %v21_34f03 = icmp ne i8 %v5_34f03, -1
  %v22_34f03 = or i1 %v21_34f03, %v20_34f03
  %v23_34f03 = icmp ult i8 %v3_34f03, %v5_34f03
  %v24_34f03 = select i1 %v24_34efc, i1 %v22_34f03, i1 %v23_34f03
  store i1 %v24_34f03, i1* %cf.global-to-local, align 1
  store i8 %v9_34f03, i8* %v2_34f03, align 1
  %v0_34f09 = load i32, i32* %eax.global-to-local, align 8
  %v1_34f09 = trunc i32 %v0_34f09 to i8
  %v2_34f09 = load i1, i1* %cf.global-to-local, align 1
  %v3_34f09 = zext i1 %v2_34f09 to i32
  %v4_34f09 = add i32 %v0_34f09, 119
  %v5_34f09 = add i32 %v4_34f09, %v3_34f09
  %v17_34f09 = icmp ult i8 %v1_34f09, -119
  %v18_34f09 = or i1 %v2_34f09, %v17_34f09
  store i1 %v18_34f09, i1* %cf.global-to-local, align 1
  %v31_34f09 = urem i32 %v5_34f09, 256
  %v33_34f09 = and i32 %v0_34f09, -256
  %v34_34f09 = or i32 %v31_34f09, %v33_34f09
  store i32 %v34_34f09, i32* %eax.global-to-local, align 8
  %v0_34f0b = load i32, i32* %ebp.global-to-local, align 4
  %v1_34f0b = add i32 %v0_34f0b, 1
  store i32 %v1_34f0b, i32* %ebp.global-to-local, align 4
  %v1_34f0c = add i32 %v0_34f0b, -94
  %v2_34f0c = inttoptr i32 %v1_34f0c to i8*
  %v3_34f0c = load i8, i8* %v2_34f0c, align 1
  %v5_34f0c = mul i8 %v3_34f0c, 2
  store i8 %v5_34f0c, i8* %v2_34f0c, align 1
  %v16_34f0c = icmp slt i8 %v3_34f0c, 0
  %v0_34f0f = load i32, i32* %eax.global-to-local, align 8
  %v1_34f0f = trunc i32 %v0_34f0f to i8
  %v3_34f0f = zext i1 %v16_34f0c to i8
  %v4_34f0f = add i8 %v1_34f0f, %v3_34f0f
  %v19_34f0f = icmp ule i8 %v4_34f0f, %v1_34f0f
  %v21_34f0f = icmp eq i1 %v16_34f0c, %v19_34f0f
  store i1 %v21_34f0f, i1* %cf.global-to-local, align 1
  %v22_34f0f = zext i8 %v4_34f0f to i32
  %v24_34f0f = and i32 %v0_34f0f, -256
  %v25_34f0f = or i32 %v22_34f0f, %v24_34f0f
  store i32 %v25_34f0f, i32* %eax.global-to-local, align 8
  %v1_34f11 = inttoptr i32 %v25_34f0f to i8*
  %v2_34f11 = load i8, i8* %v1_34f11, align 1
  %v5_34f11 = add i8 %v2_34f11, %v4_34f0f
  store i8 %v5_34f11, i8* %v1_34f11, align 1
  %v0_34f13 = load i32, i32* %eax.global-to-local, align 8
  %v1_34f13 = load i32, i32* %ebp.global-to-local, align 4
  %v2_34f13 = add i32 %v1_34f13, -12
  %v3_34f13 = inttoptr i32 %v2_34f13 to i32*
  store i32 %v0_34f13, i32* %v3_34f13, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_34f0f, { 0, 2, 1 }
  uselistorder i8 %v1_34f0f, { 1, 0 }
  uselistorder i8 %v3_34f0c, { 1, 0 }
  uselistorder i1 %v2_34f09, { 1, 0 }
  uselistorder i32 %v0_34f09, { 1, 0, 2 }
  uselistorder i8 %v8_34f03, { 1, 0 }
  uselistorder i8 %v7_34f03, { 1, 0 }
  uselistorder i8 %v5_34f03, { 1, 0, 2 }
  uselistorder i1 %v24_34efc, { 1, 0, 2 }
  uselistorder i8 %v5_34efc, { 1, 0 }
  uselistorder i8 %v9_34ef6, { 1, 0 }
  uselistorder i8 %v8_34ef6, { 1, 0 }
  uselistorder i8 %v3_34ef6, { 1, 2, 0 }
}

define i32 @function_34f1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_34f1a:
  %v0_34f1c = load i32, i32* @ebp, align 4
  %v1_34f1c = add i32 %v0_34f1c, -40
  %v2_34f1c = inttoptr i32 %v1_34f1c to i32*
  %v3_34f1c = load i32, i32* %v2_34f1c, align 4
  %v1_34f23 = add i32 %v0_34f1c, -36
  %v2_34f23 = inttoptr i32 %v1_34f23 to i32*
  %v3_34f23 = load i32, i32* %v2_34f23, align 4
  %v1_34f2a = add i32 %v0_34f1c, -32
  %v2_34f2a = inttoptr i32 %v1_34f2a to i32*
  %v3_34f2a = load i32, i32* %v2_34f2a, align 4
  %v1_34f31 = add i32 %v0_34f1c, -28
  %v2_34f31 = inttoptr i32 %v1_34f31 to i32*
  %v3_34f31 = load i32, i32* %v2_34f31, align 4
  %v4_34f37 = call i32 @unknown_6ba96(i32 %v3_34f31, i32 %v3_34f2a, i32 %v3_34f23, i32 %v3_34f1c)
  ret i32 %v4_34f37

; uselistorder directives
  uselistorder i32 %v0_34f1c, { 1, 0, 2, 3 }
}

define i32 @function_34f47(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34f47:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34f4c() local_unnamed_addr {
dec_label_pc_34f4c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34f4c = load i32, i32* %ecx.global-to-local, align 8
  %v1_34f4c = add i32 %v0_34f4c, -1
  store i32 %v1_34f4c, i32* %ecx.global-to-local, align 8
  %v0_34f4e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34f4e
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSD_13Config_vectorISsEEEESaISH_EEEENSB_ISC_INSD_10Value_implISG_EESaISM_EEEEbxdNS1_5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_E18has_fallback_type_EEENT_11result_typeEiRST_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34f4f:
  ret i32 0
}

define i32 @function_34f96(i32 %arg1) local_unnamed_addr {
dec_label_pc_34f96:
  %v0_34f97 = load i32, i32* @eax, align 8
  %v2_34f97 = and i32 %v0_34f97, 4
  %v2_34f9e = add nuw nsw i32 %v2_34f97, 36
  %v2_34fa3 = load i32, i32* @ecx, align 8
  %v3_34fa3 = udiv i32 %v2_34fa3, 256
  %v5_34fa3 = add nuw nsw i32 %v3_34fa3, %v2_34f9e
  %v20_34fa3 = and i32 %v5_34fa3, 255
  %v22_34fa3 = and i32 %v0_34f97, -256
  %v23_34fa3 = or i32 %v20_34fa3, %v22_34fa3
  ret i32 %v23_34fa3

; uselistorder directives
  uselistorder i32 %v0_34f97, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSM_13Config_vectorISsEEEESaISQ_EEEENSK_ISL_INSM_10Value_implISP_EESaISV_EEEEbxdNS1_5void_ESZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_SZ_E18has_fallback_type_EEENT1_11result_typeEiiRS12_T2_NS3_5bool_ILb1EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_34fa9:
  %eax.global-to-local = alloca i32, align 4
  %v17_34fac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_34fac
}

define i32 @function_34fb1(i32 %arg1) local_unnamed_addr {
dec_label_pc_34fb1:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34fb1 = load i32, i32* @ecx, align 8
  %v1_34fb1 = add i32 %v0_34fb1, 1166795845
  %v2_34fb1 = inttoptr i32 %v1_34fb1 to i8*
  %v3_34fb1 = load i8, i8* %v2_34fb1, align 1
  %v5_34fb1 = trunc i32 %v0_34fb1 to i8
  %v6_34fb1 = or i8 %v3_34fb1, %v5_34fb1
  store i8 %v6_34fb1, i8* %v2_34fb1, align 1
  %v0_34fb7 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_34fb7 = or i32 %v0_34fb7, 137
  store i32 %v11_34fb7, i32* @eax, align 8
  %v0_34fb9 = load i32, i32* @ebp, align 4
  %v1_34fb9 = add i32 %v0_34fb9, 1
  %v9_34fb9 = icmp eq i32 %v1_34fb9, 0
  store i32 %v1_34fb9, i32* %ebp.global-to-local, align 4
  %v0_34fba = load i32, i32* @ecx, align 8
  %v1_34fba = add i32 %v0_34fba, -1
  store i32 %v1_34fba, i32* %ecx.global-to-local, align 8
  %v2_34fba = icmp eq i32 %v1_34fba, 0
  %v4_34fba = or i1 %v9_34fb9, %v2_34fba
  br i1 %v4_34fba, label %dec_label_pc_34fbc, label %bb

bb:                                               ; preds = %dec_label_pc_34fb1
  %v9_34fba = call i32 @function_34f47(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v9_34fba, i32* @eax, align 8
  %v0_34fbc.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_34fbd.pre = load i32, i32* %ecx.global-to-local, align 8
  %v6_34fbd.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_34fbc

dec_label_pc_34fbc:                               ; preds = %dec_label_pc_34fb1, %bb
  %v6_34fbd = phi i1 [ false, %dec_label_pc_34fb1 ], [ %v6_34fbd.pre, %bb ]
  %v30_34fbd = phi i32 [ %v1_34fba, %dec_label_pc_34fb1 ], [ %v0_34fbd.pre, %bb ]
  %v0_34fbc = phi i32 [ %v1_34fb9, %dec_label_pc_34fb1 ], [ %v0_34fbc.pre, %bb ]
  %v1_34fbc = add i32 %v0_34fbc, 1
  store i32 %v1_34fbc, i32* %ebp.global-to-local, align 4
  %v1_34fbd = add i32 %v30_34fbd, 1166793797
  %v2_34fbd = inttoptr i32 %v1_34fbd to i8*
  %v3_34fbd = load i8, i8* %v2_34fbd, align 1
  %v5_34fbd = trunc i32 %v30_34fbd to i8
  %v7_34fbd = zext i1 %v6_34fbd to i8
  %v8_34fbd = add i8 %v3_34fbd, %v5_34fbd
  %v9_34fbd = add i8 %v8_34fbd, %v7_34fbd
  %v27_34fbd = icmp ule i8 %v9_34fbd, %v3_34fbd
  %v28_34fbd = icmp ult i8 %v8_34fbd, %v3_34fbd
  %v29_34fbd = select i1 %v6_34fbd, i1 %v27_34fbd, i1 %v28_34fbd
  store i1 %v29_34fbd, i1* %cf.global-to-local, align 1
  store i8 %v9_34fbd, i8* %v2_34fbd, align 1
  %v0_34fc3 = load i32, i32* @eax, align 8
  %v1_34fc3 = trunc i32 %v0_34fc3 to i8
  %v2_34fc3 = load i1, i1* %cf.global-to-local, align 1
  %v3_34fc3 = zext i1 %v2_34fc3 to i8
  %v4_34fc3 = add i8 %v1_34fc3, -119
  %v5_34fc3 = add i8 %v4_34fc3, %v3_34fc3
  %v22_34fc3 = icmp ule i8 %v5_34fc3, %v1_34fc3
  %v23_34fc3 = icmp ugt i8 %v1_34fc3, 118
  %v24_34fc3 = select i1 %v2_34fc3, i1 %v22_34fc3, i1 %v23_34fc3
  store i1 %v24_34fc3, i1* %cf.global-to-local, align 1
  %v25_34fc3 = zext i8 %v5_34fc3 to i32
  %v27_34fc3 = and i32 %v0_34fc3, -256
  %v28_34fc3 = or i32 %v25_34fc3, %v27_34fc3
  store i32 %v28_34fc3, i32* %eax.global-to-local, align 8
  %v0_34fc5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_34fc5 = add i32 %v0_34fc5, 1
  store i32 %v1_34fc5, i32* %ebp.global-to-local, align 4
  %v1_34fca = add i32 %v28_34fc3, -1240475835
  %v2_34fca = inttoptr i32 %v1_34fca to i8*
  %v3_34fca = load i8, i8* %v2_34fca, align 1
  %v4_34fca = load i32, i32* %ecx.global-to-local, align 8
  %v5_34fca = trunc i32 %v4_34fca to i8
  %v7_34fca = zext i1 %v24_34fc3 to i8
  %v8_34fca = sub i8 %v3_34fca, %v5_34fca
  %v9_34fca = add i8 %v8_34fca, %v7_34fca
  %v19_34fca = sub i8 %v8_34fca, %v7_34fca
  %v20_34fca = icmp ult i8 %v3_34fca, %v19_34fca
  %v21_34fca = icmp ne i8 %v5_34fca, -1
  %v22_34fca = or i1 %v21_34fca, %v20_34fca
  %v23_34fca = icmp ult i8 %v3_34fca, %v5_34fca
  %v24_34fca = select i1 %v24_34fc3, i1 %v22_34fca, i1 %v23_34fca
  store i1 %v24_34fca, i1* %cf.global-to-local, align 1
  store i8 %v9_34fca, i8* %v2_34fca, align 1
  %v0_34fd0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_34fd1 = load i32, i32* %eax.global-to-local, align 8
  %v1_34fd1 = trunc i32 %v0_34fd1 to i8
  %v2_34fd1 = load i1, i1* %cf.global-to-local, align 1
  %v17_34fd1 = icmp ult i8 %v1_34fd1, -120
  %v18_34fd1 = or i1 %v2_34fd1, %v17_34fd1
  %v1_34fd3 = add i32 %v0_34fd0, 2
  store i32 %v1_34fd3, i32* %ebp.global-to-local, align 4
  %v3_34fd4 = select i1 %v18_34fd1, i32 255, i32 0
  %v5_34fd4 = and i32 %v0_34fd1, -256
  %v6_34fd4 = or i32 %v3_34fd4, %v5_34fd4
  store i32 %v6_34fd4, i32* %eax.global-to-local, align 8
  %v1_34fd5 = add i32 %v0_34fd0, 34
  %v2_34fd5 = inttoptr i32 %v1_34fd5 to i32*
  %v3_34fd5 = load i32, i32* %v2_34fd5, align 4
  store i32 %v3_34fd5, i32* %eax.global-to-local, align 8
  %v2_34fd8 = add i32 %v0_34fd0, -46
  %v3_34fd8 = inttoptr i32 %v2_34fd8 to i32*
  store i32 %v3_34fd5, i32* %v3_34fd8, align 4
  %v0_34fdb = load i32, i32* %ebp.global-to-local, align 4
  %v1_34fdb = add i32 %v0_34fdb, 36
  %v2_34fdb = inttoptr i32 %v1_34fdb to i32*
  %v3_34fdb = load i32, i32* %v2_34fdb, align 4
  store i32 %v3_34fdb, i32* %eax.global-to-local, align 8
  %v2_34fde = add i32 %v0_34fdb, -52
  %v3_34fde = inttoptr i32 %v2_34fde to i32*
  store i32 %v3_34fdb, i32* %v3_34fde, align 4
  %v0_34fe1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_34fe7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_34fe7 = add i32 %v1_34fe7, -12
  %v3_34fe7 = inttoptr i32 %v2_34fe7 to i32*
  store i32 %v0_34fe1, i32* %v3_34fe7, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v8_34fca, { 1, 0 }
  uselistorder i8 %v7_34fca, { 1, 0 }
  uselistorder i8 %v5_34fca, { 1, 0, 2 }
  uselistorder i1 %v24_34fc3, { 1, 0, 2 }
  uselistorder i8 %v5_34fc3, { 1, 0 }
  uselistorder i8 %v9_34fbd, { 1, 0 }
  uselistorder i8 %v8_34fbd, { 1, 0 }
  uselistorder i8 %v3_34fbd, { 1, 2, 0 }
  uselistorder i32 %v30_34fbd, { 1, 0 }
  uselistorder i1 %v6_34fbd, { 1, 0 }
  uselistorder i32 %v1_34fba, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_34f47, { 1, 0 }
  uselistorder label %dec_label_pc_34fbc, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvSsEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_35010:
  %v1_35046 = call i32 @unknown_683c4(i32 %arg3)
  %v3_3505d = call i32 @unknown_6bc2a(i32 %arg2, i32 %v1_35046, i32 1)
  store i32 %v3_3505d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3506e

bb:                                               ; preds = %dec_label_pc_35010
  %v1_3506c = call i32 @function_35073()
  br label %dec_label_pc_3506e

dec_label_pc_3506e:                               ; preds = %bb, %dec_label_pc_35010
  %v2_3506c = phi i32 [ %v1_3506c, %bb ], [ %v3_3505d, %dec_label_pc_35010 ]
  ret i32 %v2_3506c
}

define i32 @function_35073() local_unnamed_addr {
dec_label_pc_35073:
  %v0_35074 = load i32, i32* @eax, align 8
  ret i32 %v0_35074
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35075:
  ret i32 %arg3
}

define i32 @function_3508c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3508c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v1_3508c = load i32, i32* @ebx, align 4
  %v2_3508c = add i32 %v1_3508c, 1166611525
  %v3_3508c = inttoptr i32 %v2_3508c to double*
  %v4_3508c = load double, double* %v3_3508c, align 4
  %v5_3508c = fpext double %v4_3508c to x86_fp80
  %v6_3508c = load x86_fp80, x86_fp80* @st0, align 4
  %v7_3508c = fmul x86_fp80 %v5_3508c, %v6_3508c
  %v3_35092 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_35092 = fpext float %v3_35092 to x86_fp80
  %v6_35092 = fmul x86_fp80 %v7_3508c, %v4_35092
  store x86_fp80 %v6_35092, x86_fp80* @st0, align 4
  %v0_35096 = load i32, i32* @eax, align 8
  %v1_35096 = add i32 %v0_35096, -1587161275
  %v2_35096 = inttoptr i32 %v1_35096 to i8*
  %v3_35096 = load i8, i8* %v2_35096, align 1
  %v4_35096 = load i32, i32* @ecx, align 8
  %v5_35096 = trunc i32 %v4_35096 to i8
  %v6_35096 = load i1, i1* @cf, align 1
  %v7_35096 = zext i1 %v6_35096 to i8
  %v8_35096 = sub i8 %v3_35096, %v5_35096
  %v9_35096 = add i8 %v8_35096, %v7_35096
  %v19_35096 = sub i8 %v8_35096, %v7_35096
  %v20_35096 = icmp ult i8 %v3_35096, %v19_35096
  %v21_35096 = icmp ne i8 %v5_35096, -1
  %v22_35096 = or i1 %v21_35096, %v20_35096
  %v23_35096 = icmp ult i8 %v3_35096, %v5_35096
  %v24_35096 = select i1 %v6_35096, i1 %v22_35096, i1 %v23_35096
  store i1 %v24_35096, i1* %cf.global-to-local, align 1
  store i8 %v9_35096, i8* %v2_35096, align 1
  %v0_3509c = load i32, i32* @eax, align 8
  %v1_3509c = trunc i32 %v0_3509c to i8
  %v2_3509c = load i1, i1* %cf.global-to-local, align 1
  %v3_3509c = zext i1 %v2_3509c to i8
  %v4_3509c = add i8 %v3_3509c, %v1_3509c
  %v19_3509c = icmp ule i8 %v4_3509c, %v1_3509c
  %v21_3509c = icmp eq i1 %v2_3509c, %v19_3509c
  store i1 %v21_3509c, i1* %cf.global-to-local, align 1
  %v22_3509c = zext i8 %v4_3509c to i32
  %v24_3509c = and i32 %v0_3509c, -256
  %v25_3509c = or i32 %v22_3509c, %v24_3509c
  store i32 %v25_3509c, i32* %eax.global-to-local, align 8
  %v1_3509e = inttoptr i32 %v25_3509c to i8*
  %v2_3509e = load i8, i8* %v1_3509e, align 1
  %v5_3509e = add i8 %v2_3509e, %v4_3509c
  store i8 %v5_3509e, i8* %v1_3509e, align 1
  %v0_350a0 = load i32, i32* %eax.global-to-local, align 8
  %v1_350a0 = load i32, i32* @ebp, align 4
  %v2_350a0 = add i32 %v1_350a0, -12
  %v3_350a0 = inttoptr i32 %v2_350a0 to i32*
  store i32 %v0_350a0, i32* %v3_350a0, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_350a5 = load i32, i32* @ebp, align 4
  %v1_350a5 = add i32 %v0_350a5, -36
  %v2_350a5 = inttoptr i32 %v1_350a5 to i32*
  %v3_350a5 = load i32, i32* %v2_350a5, align 4
  store i32 %v3_350a5, i32* %eax.global-to-local, align 8
  %v1_350ab = call i32 @unknown_684da(i32 %v3_350a5)
  store i32 %v1_350ab, i32* %eax.global-to-local, align 8
  %v0_350bc = load i32, i32* @ebp, align 4
  %v1_350bc = add i32 %v0_350bc, -32
  %v2_350bc = inttoptr i32 %v1_350bc to i32*
  %v3_350bc = load i32, i32* %v2_350bc, align 4
  store i32 %v3_350bc, i32* %eax.global-to-local, align 8
  %v3_350c2 = call i32 @unknown_6bcd9(i32 %v3_350bc, i32 %v1_350ab, i32 1)
  store i32 %v3_350c2, i32* @eax, align 8
  %v0_350c7 = load i32, i32* @ebp, align 4
  %v1_350c7 = add i32 %v0_350c7, -12
  %v2_350c7 = inttoptr i32 %v1_350c7 to i32*
  %v3_350c7 = load i32, i32* %v2_350c7, align 4
  %v1_350ca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_350ca = xor i32 %v1_350ca, %v3_350c7
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_350ca = icmp eq i32 %v2_350ca, 0
  store i32 %v2_350ca, i32* @edx, align 4
  br i1 %v3_350ca, label %bb, label %dec_label_pc_350d3

bb:                                               ; preds = %dec_label_pc_3508c
  %v1_350d1 = call i32 @function_350d8()
  store i32 %v1_350d1, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_350d3

dec_label_pc_350d3:                               ; preds = %bb, %dec_label_pc_3508c
  %v2_350d1 = phi i32 [ %v1_350d1, %bb ], [ %v3_350c2, %dec_label_pc_3508c ]
  ret i32 %v2_350d1

; uselistorder directives
  uselistorder i8 %v4_3509c, { 0, 2, 1 }
  uselistorder i8 %v1_3509c, { 1, 0 }
  uselistorder i8 %v5_35096, { 1, 0, 2 }
}

define i32 @function_350d8() local_unnamed_addr {
dec_label_pc_350d8:
  %v0_350d9 = load i32, i32* @eax, align 8
  ret i32 %v0_350d9
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_350da:
  %v4_350f8 = zext i8 %arg5 to i32
  ret i32 %v4_350f8
}

define i32 @function_350fe(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_350fe:
  %v0_350ff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_35105 = load i32, i32* @ebp, align 4
  %v2_35105 = add i32 %v1_35105, -12
  %v3_35105 = inttoptr i32 %v2_35105 to i32*
  store i32 %v0_350ff, i32* %v3_35105, align 4
  %v0_3510a = load i32, i32* @ebp, align 4
  %v1_3510a = add i32 %v0_3510a, -36
  %v2_3510a = inttoptr i32 %v1_3510a to i32*
  %v3_3510a = load i32, i32* %v2_3510a, align 4
  %v1_35110 = call i32 @unknown_685ef(i32 %v3_3510a)
  %v0_35121 = load i32, i32* @ebp, align 4
  %v1_35121 = add i32 %v0_35121, -32
  %v2_35121 = inttoptr i32 %v1_35121 to i32*
  %v3_35121 = load i32, i32* %v2_35121, align 4
  %v3_35127 = call i32 @unknown_6bd96(i32 %v3_35121, i32 %v1_35110, i32 1)
  store i32 %v3_35127, i32* @eax, align 8
  %v0_3512c = load i32, i32* @ebp, align 4
  %v1_3512c = add i32 %v0_3512c, -12
  %v2_3512c = inttoptr i32 %v1_3512c to i32*
  %v3_3512c = load i32, i32* %v2_3512c, align 4
  %v1_3512f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3512f = icmp eq i32 %v1_3512f, %v3_3512c
  br i1 %v3_3512f, label %bb, label %dec_label_pc_35138

bb:                                               ; preds = %dec_label_pc_350fe
  %v1_35136 = call i32 @function_3513d()
  br label %dec_label_pc_35138

dec_label_pc_35138:                               ; preds = %bb, %dec_label_pc_350fe
  %v3_35136 = phi i32 [ %v1_35136, %bb ], [ %v3_35127, %dec_label_pc_350fe ]
  ret i32 %v3_35136
}

define i32 @function_3513d() local_unnamed_addr {
dec_label_pc_3513d:
  %v0_3513e = load i32, i32* @eax, align 8
  ret i32 %v0_3513e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvbEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3513f:
  ret i32 %arg3
}

define i32 @function_35156(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35156:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_35160 = load i32, i32* @eax, align 8
  %v1_35160 = add i32 %v0_35160, -1587161275
  %v2_35160 = inttoptr i32 %v1_35160 to i8*
  %v3_35160 = load i8, i8* %v2_35160, align 1
  %v4_35160 = load i32, i32* @ecx, align 8
  %v5_35160 = trunc i32 %v4_35160 to i8
  %v6_35160 = load i1, i1* @cf, align 1
  %v7_35160 = zext i1 %v6_35160 to i8
  %v8_35160 = sub i8 %v3_35160, %v5_35160
  %v9_35160 = add i8 %v8_35160, %v7_35160
  %v19_35160 = sub i8 %v8_35160, %v7_35160
  %v20_35160 = icmp ult i8 %v3_35160, %v19_35160
  %v21_35160 = icmp ne i8 %v5_35160, -1
  %v22_35160 = or i1 %v21_35160, %v20_35160
  %v23_35160 = icmp ult i8 %v3_35160, %v5_35160
  %v24_35160 = select i1 %v6_35160, i1 %v22_35160, i1 %v23_35160
  store i1 %v24_35160, i1* %cf.global-to-local, align 1
  store i8 %v9_35160, i8* %v2_35160, align 1
  %v0_35166 = load i32, i32* @eax, align 8
  %v1_35166 = trunc i32 %v0_35166 to i8
  %v2_35166 = load i1, i1* %cf.global-to-local, align 1
  %v3_35166 = zext i1 %v2_35166 to i8
  %v4_35166 = add i8 %v3_35166, %v1_35166
  %v19_35166 = icmp ule i8 %v4_35166, %v1_35166
  %v21_35166 = icmp eq i1 %v2_35166, %v19_35166
  store i1 %v21_35166, i1* %cf.global-to-local, align 1
  %v22_35166 = zext i8 %v4_35166 to i32
  %v24_35166 = and i32 %v0_35166, -256
  %v25_35166 = or i32 %v22_35166, %v24_35166
  store i32 %v25_35166, i32* %eax.global-to-local, align 8
  %v1_35168 = inttoptr i32 %v25_35166 to i8*
  %v2_35168 = load i8, i8* %v1_35168, align 1
  %v5_35168 = add i8 %v2_35168, %v4_35166
  store i8 %v5_35168, i8* %v1_35168, align 1
  %v0_3516a = load i32, i32* %eax.global-to-local, align 8
  %v1_3516a = load i32, i32* @ebp, align 4
  %v2_3516a = add i32 %v1_3516a, -12
  %v3_3516a = inttoptr i32 %v2_3516a to i32*
  store i32 %v0_3516a, i32* %v3_3516a, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3516f = load i32, i32* @ebp, align 4
  %v1_3516f = add i32 %v0_3516f, -36
  %v2_3516f = inttoptr i32 %v1_3516f to i32*
  %v3_3516f = load i32, i32* %v2_3516f, align 4
  store i32 %v3_3516f, i32* %eax.global-to-local, align 8
  %v1_35175 = call i32 @unknown_68704(i32 %v3_3516f)
  store i32 %v1_35175, i32* %eax.global-to-local, align 8
  ret i32 %v1_35175

; uselistorder directives
  uselistorder i8 %v4_35166, { 0, 2, 1 }
  uselistorder i8 %v1_35166, { 1, 0 }
  uselistorder i8 %v5_35160, { 1, 0, 2 }
}

define i32 @function_35180(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35180:
  %v2_35180 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_35180 = load i32, i32* @eax, align 8
  %v4_35180 = trunc i32 %v3_35180 to i8
  %v5_35180 = add i8 %v4_35180, %v2_35180
  %v21_35180 = inttoptr i32 %v3_35180 to i8*
  store i8 %v5_35180, i8* %v21_35180, align 1
  %v0_35182 = load i32, i32* @eax, align 8
  %v0_35186 = load i32, i32* @ebp, align 4
  %v1_35186 = add i32 %v0_35186, -32
  %v2_35186 = inttoptr i32 %v1_35186 to i32*
  %v3_35186 = load i32, i32* %v2_35186, align 4
  %v2_3518c = call i32 @unknown_6be53(i32 %v3_35186, i32 %v0_35182)
  store i32 %v2_3518c, i32* @eax, align 8
  %v0_35191 = load i32, i32* @ebp, align 4
  %v1_35191 = add i32 %v0_35191, -12
  %v2_35191 = inttoptr i32 %v1_35191 to i32*
  %v3_35191 = load i32, i32* %v2_35191, align 4
  %v1_35194 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35194 = icmp eq i32 %v1_35194, %v3_35191
  br i1 %v3_35194, label %bb, label %dec_label_pc_3519d

bb:                                               ; preds = %dec_label_pc_35180
  %v1_3519b = call i32 @function_351a2()
  br label %dec_label_pc_3519d

dec_label_pc_3519d:                               ; preds = %bb, %dec_label_pc_35180
  %v2_3519b = phi i32 [ %v1_3519b, %bb ], [ %v2_3518c, %dec_label_pc_35180 ]
  ret i32 %v2_3519b
}

define i32 @function_351a2() local_unnamed_addr {
dec_label_pc_351a2:
  %v0_351a3 = load i32, i32* @eax, align 8
  ret i32 %v0_351a3
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvxEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_351a4:
  %v1_351da = call i32 @unknown_687ed(i32 %arg3)
  %v3_351f1 = call i32 @unknown_6bf02(i32 %arg2, i32 %v1_351da, i32 1)
  ret i32 %v3_351f1
}

define i32 @function_35206(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35206:
  %v0_35208 = load i32, i32* @eax, align 8
  ret i32 %v0_35208
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKbEEEEPKvdEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_35209:
  %v1_3523f = call i32 @unknown_688dd(i32 %arg3)
  %v3_35256 = call i32 @unknown_6bfb1(i32 %arg2, i32 %v1_3523f, i32 1)
  store i32 %v3_35256, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_35267

bb:                                               ; preds = %dec_label_pc_35209
  %v1_35265 = call i32 @function_3526c()
  br label %dec_label_pc_35267

dec_label_pc_35267:                               ; preds = %bb, %dec_label_pc_35209
  %v2_35265 = phi i32 [ %v1_35265, %bb ], [ %v3_35256, %dec_label_pc_35209 ]
  ret i32 %v2_35265
}

define i32 @function_3526c() local_unnamed_addr {
dec_label_pc_3526c:
  %v0_3526d = load i32, i32* @eax, align 8
  ret i32 %v0_3526d
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_intoC1EPv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3526e:
  ret i32 %arg2
}

define i32 @function_35282(i32 %arg1) local_unnamed_addr {
dec_label_pc_35282:
  %eax.global-to-local = alloca i32, align 4
  %v0_35282 = load i32, i32* @eax, align 8
  %v1_35282 = trunc i32 %v0_35282 to i8
  %v2_35282 = load i1, i1* @cf, align 1
  %v3_35282 = zext i1 %v2_35282 to i8
  %v4_35282 = add i8 %v3_35282, %v1_35282
  %v22_35282 = zext i8 %v4_35282 to i32
  %v24_35282 = and i32 %v0_35282, -256
  %v25_35282 = or i32 %v22_35282, %v24_35282
  store i32 %v25_35282, i32* %eax.global-to-local, align 8
  %v1_35284 = inttoptr i32 %v25_35282 to i8*
  %v2_35284 = load i8, i8* %v1_35284, align 1
  %v5_35284 = add i8 %v2_35284, %v4_35282
  store i8 %v5_35284, i8* %v1_35284, align 1
  %v0_35286 = load i32, i32* %eax.global-to-local, align 8
  %v1_35286 = load i32, i32* @ebp, align 4
  %v2_35286 = add i32 %v1_35286, -12
  %v3_35286 = inttoptr i32 %v2_35286 to i32*
  store i32 %v0_35286, i32* %v3_35286, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3528b = load i32, i32* @ebp, align 4
  %v1_3528b = add i32 %v0_3528b, -28
  %v2_3528b = inttoptr i32 %v1_3528b to i32*
  %v3_3528b = load i32, i32* %v2_3528b, align 4
  store i32 %v3_3528b, i32* %eax.global-to-local, align 8
  %v1_35291 = call i32 @unknown_6c060(i32 %v3_3528b)
  store i32 %v1_35291, i32* %eax.global-to-local, align 8
  %v0_35296 = load i32, i32* @ebp, align 4
  %v1_35296 = add i32 %v0_35296, -28
  %v2_35296 = inttoptr i32 %v1_35296 to i32*
  %v3_35296 = load i32, i32* %v2_35296, align 4
  store i32 %v3_35296, i32* %eax.global-to-local, align 8
  %v1_35299 = add i32 %v0_35296, -32
  %v2_35299 = inttoptr i32 %v1_35299 to i32*
  %v3_35299 = load i32, i32* %v2_35299, align 4
  %v2_3529c = inttoptr i32 %v3_35296 to i32*
  store i32 %v3_35299, i32* %v2_3529c, align 4
  %v0_3529e = load i32, i32* @ebp, align 4
  %v1_3529e = add i32 %v0_3529e, -12
  %v2_3529e = inttoptr i32 %v1_3529e to i32*
  %v3_3529e = load i32, i32* %v2_3529e, align 4
  store i32 %v3_3529e, i32* %eax.global-to-local, align 8
  %v1_352a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_352a1 = xor i32 %v1_352a1, %v3_3529e
  %v3_352a1 = icmp eq i32 %v2_352a1, 0
  store i32 %v2_352a1, i32* @eax, align 8
  br i1 %v3_352a1, label %bb, label %dec_label_pc_352aa

bb:                                               ; preds = %dec_label_pc_35282
  %v1_352a8 = call i32 @function_352af()
  store i32 %v1_352a8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_352aa

dec_label_pc_352aa:                               ; preds = %bb, %dec_label_pc_35282
  %v3_352a8 = phi i32 [ %v1_352a8, %bb ], [ %v2_352a1, %dec_label_pc_35282 ]
  ret i32 %v3_352a8
}

define i32 @function_352af() local_unnamed_addr {
dec_label_pc_352af:
  %v0_352b0 = load i32, i32* @eax, align 8
  ret i32 %v0_352b0
}

define i32 @_ZN5boost14static_visitorIiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_352b2:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_352d5

bb:                                               ; preds = %dec_label_pc_352b2
  %v2_352d3 = call i32 @function_352da(i32 %arg1)
  br label %dec_label_pc_352d5

dec_label_pc_352d5:                               ; preds = %bb, %dec_label_pc_352b2
  %v3_352d3 = phi i32 [ %v2_352d3, %bb ], [ 0, %dec_label_pc_352b2 ]
  ret i32 %v3_352d3
}

define i32 @function_352da(i32 %arg1) local_unnamed_addr {
dec_label_pc_352da:
  %v0_352db = load i32, i32* @eax, align 8
  ret i32 %v0_352db
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E22internal_apply_visitorINSJ_17convert_copy_intoEEENT_11result_typeERSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_352dc:
  ret i32 0
}

define i32 @function_352fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_352fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_352fe = load i32, i32* @ecx, align 8
  %v3_352fe = mul i32 %v0_352fe, 5
  %v4_352fe = inttoptr i32 %v3_352fe to i8*
  %v5_352fe = load i8, i8* %v4_352fe, align 1
  %v6_352fe = mul i8 %v5_352fe, 16
  %v7_352fe = udiv i8 %v5_352fe, 16
  %v8_352fe = or i8 %v7_352fe, %v6_352fe
  store i8 %v8_352fe, i8* %v4_352fe, align 1
  %v0_35302 = load i32, i32* @eax, align 8
  %v11_35302 = and i32 %v0_35302, -24
  store i32 %v11_35302, i32* %eax.global-to-local, align 8
  %v0_35307 = load i32, i32* @ecx, align 8
  %v1_35307 = add i32 %v0_35307, -465204285
  %v2_35307 = inttoptr i32 %v1_35307 to i8*
  %v3_35307 = load i8, i8* %v2_35307, align 1
  %v5_35307 = trunc i32 %v0_35307 to i8
  %v6_35307 = add i8 %v3_35307, %v5_35307
  store i8 %v6_35307, i8* %v2_35307, align 1
  %v0_3530d = load i32, i32* %eax.global-to-local, align 8
  %v1_35310 = call i32 @unknown_598e6(i32 %v0_3530d)
  store i32 %v1_35310, i32* %eax.global-to-local, align 8
  %v0_35317 = load i32, i32* @ebp, align 4
  %v1_35317 = add i32 %v0_35317, -28
  %v2_35317 = inttoptr i32 %v1_35317 to i32*
  %v3_35317 = load i32, i32* %v2_35317, align 4
  store i32 %v3_35317, i32* %eax.global-to-local, align 8
  %v1_3531a = inttoptr i32 %v3_35317 to i32*
  %v2_3531a = load i32, i32* %v1_3531a, align 4
  store i32 %v2_3531a, i32* %eax.global-to-local, align 8
  %v0_3531c = load i32, i32* @ebx, align 4
  %v1_35320 = add i32 %v0_35317, -32
  %v2_35320 = inttoptr i32 %v1_35320 to i32*
  %v3_35320 = load i32, i32* %v2_35320, align 4
  %v4_3532e = call i32 @unknown_6c103(i32 %v2_3531a, i32 %v1_35310, i32 %v3_35320, i32 %v0_3531c)
  store i32 %v4_3532e, i32* @eax, align 8
  %v0_35333 = load i32, i32* @ebp, align 4
  %v1_35333 = add i32 %v0_35333, -12
  %v2_35333 = inttoptr i32 %v1_35333 to i32*
  %v3_35333 = load i32, i32* %v2_35333, align 4
  %v1_35336 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_35336 = icmp eq i32 %v1_35336, %v3_35333
  br i1 %v3_35336, label %bb, label %dec_label_pc_3533f

bb:                                               ; preds = %dec_label_pc_352fc
  %v1_3533d = call i32 @function_35344()
  store i32 %v1_3533d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3533f

dec_label_pc_3533f:                               ; preds = %bb, %dec_label_pc_352fc
  %v2_3533d = phi i32 [ %v1_3533d, %bb ], [ %v4_3532e, %dec_label_pc_352fc ]
  ret i32 %v2_3533d

; uselistorder directives
  uselistorder i8 %v5_352fe, { 1, 0 }
  uselistorder i32 5, { 8, 13, 6, 10, 7, 11, 0, 1, 12, 2, 9, 3, 4, 5 }
}

define i32 @function_35344() local_unnamed_addr {
dec_label_pc_35344:
  %v0_35344 = load i32, i32* @esp, align 4
  %v5_35344 = icmp ugt i32 %v0_35344, -53
  store i1 %v5_35344, i1* @cf, align 1
  %v0_35349 = load i32, i32* @eax, align 8
  ret i32 %v0_35349
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS1_14assign_storageEPvNS_7variantISsSM_SS_bxdNS1_5void_ES19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_S19_E18has_fallback_type_EEENT1_11result_typeEiiRS1C_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3534a:
  %tmp123 = icmp ult i32 %arg2, 20
  br i1 %tmp123, label %dec_label_pc_3539a, label %bb

bb:                                               ; preds = %dec_label_pc_3534a
  %sext = mul i32 %arg6, 16777216
  %v12_35394 = sdiv i32 %sext, 16777216
  %v13_35394 = sext i8 %arg5 to i32
  %v14_35394 = call i32 @function_357d3(i32 %arg8, i32 %arg7, i32 %v12_35394, i32 %v13_35394, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_3539a

dec_label_pc_3539a:                               ; preds = %dec_label_pc_3534a, %bb
  %v2_3539d = mul i32 %arg2, 4
  %v1_353a0 = add i32 %v2_3539d, ptrtoint (i32* @global_var_35824.2905 to i32)
  %v1_353a5 = inttoptr i32 %v1_353a0 to i32*
  %v2_353a5 = load i32, i32* %v1_353a5, align 4
  ret i32 %v2_353a5

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_3539a, { 1, 0 }
}

define i32 @function_354b7() local_unnamed_addr {
dec_label_pc_354b7:
  %v0_354bf = load i32, i32* @ebp, align 4
  %v1_354bf = add i32 %v0_354bf, -78
  %v2_354bf = inttoptr i32 %v1_354bf to i8*
  %v3_354bf = load i8, i8* %v2_354bf, align 1
  %v1_354cf = add i32 %v0_354bf, -56
  %v2_354cf = inttoptr i32 %v1_354cf to i32*
  %v3_354cf = load i32, i32* %v2_354cf, align 4
  %v1_354d6 = add i32 %v0_354bf, -52
  %v2_354d6 = inttoptr i32 %v1_354d6 to i32*
  %v3_354d6 = load i32, i32* %v2_354d6, align 4
  %v1_354dd = add i32 %v0_354bf, -44
  %v2_354dd = inttoptr i32 %v1_354dd to i32*
  %v3_354dd = load i32, i32* %v2_354dd, align 4
  %v6_354e3 = sext i8 %v3_354bf to i32
  %v7_354e3 = call i32 @unknown_6c406(i32 %v3_354dd, i32 %v3_354d6, i32 %v3_354cf, i32 0, i32 %v6_354e3, i32 1)
  %v0_354e8 = call i32 @function_3580b()
  ret i32 %v0_354e8

; uselistorder directives
  uselistorder i32 %v0_354bf, { 0, 2, 1, 3 }
  uselistorder i32 -78, { 0, 6, 1, 7, 2, 3, 4, 5 }
}

define i32 @function_354f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_354f4:
  %v2_354f4 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_354f4 = load i32, i32* @ecx, align 8
  %v4_354f4 = trunc i32 %v3_354f4 to i8
  %v5_354f4 = add i8 %v4_354f4, %v2_354f4
  %v20_354f4 = load i32, i32* @edi, align 4
  %v21_354f4 = inttoptr i32 %v20_354f4 to i8*
  store i8 %v5_354f4, i8* %v21_354f4, align 1
  %v0_354f8 = load i32, i32* @ebx, align 4
  %v1_354f8 = and i32 %v0_354f8, -256
  %v2_354f8 = or i32 %v1_354f8, 136
  store i32 %v2_354f8, i32* @ebx, align 4
  %v0_35505 = load i32, i32* @ebp, align 4
  %v1_3550c = add i32 %v0_35505, -52
  %v2_3550c = inttoptr i32 %v1_3550c to i32*
  %v3_3550c = load i32, i32* %v2_3550c, align 4
  %v1_35513 = add i32 %v0_35505, -44
  %v2_35513 = inttoptr i32 %v1_35513 to i32*
  %v3_35513 = load i32, i32* %v2_35513, align 4
  %v2_35519 = call i32 @unknown_6c473(i32 %v3_35513, i32 %v3_3550c)
  %v0_3551e = call i32 @function_3580b()
  ret i32 %v0_3551e
}

define i32 @function_35528(i32 %arg1) local_unnamed_addr {
dec_label_pc_35528:
  %v2_35528 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_35528 = load i32, i32* @eax, align 8
  %v4_35528 = trunc i32 %v3_35528 to i8
  %v5_35528 = add i8 %v4_35528, %v2_35528
  %v21_35528 = inttoptr i32 %v3_35528 to i8*
  store i8 %v5_35528, i8* %v21_35528, align 1
  %v2_3552a = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_3552a = load i32, i32* @ecx, align 8
  %v4_3552a = trunc i32 %v3_3552a to i8
  %v5_3552a = add i8 %v4_3552a, %v2_3552a
  %v20_3552a = load i32, i32* @edi, align 4
  %v21_3552a = inttoptr i32 %v20_3552a to i8*
  store i8 %v5_3552a, i8* %v21_3552a, align 1
  %v0_3553b = load i32, i32* @ebp, align 4
  %v1_35542 = add i32 %v0_3553b, -52
  %v2_35542 = inttoptr i32 %v1_35542 to i32*
  %v3_35542 = load i32, i32* %v2_35542, align 4
  %v1_35549 = add i32 %v0_3553b, -44
  %v2_35549 = inttoptr i32 %v1_35549 to i32*
  %v3_35549 = load i32, i32* %v2_35549, align 4
  %v2_3554f = call i32 @unknown_6c473(i32 %v3_35549, i32 %v3_35542)
  ret i32 %v2_3554f
}

define i32 @function_35558(i32 %arg1) local_unnamed_addr {
dec_label_pc_35558:
  %eax.global-to-local = alloca i32, align 4
  %v0_35558 = load i32, i32* @ebx, align 4
  %v3_35558 = load i32, i32* @eax, align 8
  %v5_355581 = mul i32 %v3_35558, 256
  %v1_355582 = add i32 %v5_355581, %v0_35558
  %v22_35558 = and i32 %v1_355582, 65280
  %v23_35558 = and i32 %v0_35558, -65281
  %v24_35558 = or i32 %v22_35558, %v23_35558
  store i32 %v24_35558, i32* @ebx, align 4
  %v11_3555b = and i32 %v3_35558, -236
  store i32 %v11_3555b, i32* %eax.global-to-local, align 8
  %v1_3555d = inttoptr i32 %v11_3555b to i32*
  %v2_3555d = load i32, i32* %v1_3555d, align 4
  %v4_3555d = add i32 %v2_3555d, %v11_3555b
  store i32 %v4_3555d, i32* %v1_3555d, align 4
  %v0_3555f = load i32, i32* %eax.global-to-local, align 8
  %v1_3555f = inttoptr i32 %v0_3555f to i8*
  %v2_3555f = load i8, i8* %v1_3555f, align 1
  %v4_3555f = trunc i32 %v0_3555f to i8
  %v5_3555f = add i8 %v2_3555f, %v4_3555f
  store i8 %v5_3555f, i8* %v1_3555f, align 1
  %v0_35561 = load i32, i32* @ebp, align 4
  %v1_35561 = add i32 %v0_35561, -75
  %v2_35561 = inttoptr i32 %v1_35561 to i8*
  %v3_35561 = load i8, i8* %v2_35561, align 1
  %v4_35561 = zext i8 %v3_35561 to i32
  store i32 %v4_35561, i32* %eax.global-to-local, align 8
  %v1_35571 = add i32 %v0_35561, -56
  %v2_35571 = inttoptr i32 %v1_35571 to i32*
  %v3_35571 = load i32, i32* %v2_35571, align 4
  store i32 %v3_35571, i32* %eax.global-to-local, align 8
  %v1_35578 = add i32 %v0_35561, -52
  %v2_35578 = inttoptr i32 %v1_35578 to i32*
  %v3_35578 = load i32, i32* %v2_35578, align 4
  store i32 %v3_35578, i32* %eax.global-to-local, align 8
  %v1_3557f = add i32 %v0_35561, -44
  %v2_3557f = inttoptr i32 %v1_3557f to i32*
  %v3_3557f = load i32, i32* %v2_3557f, align 4
  store i32 %v3_3557f, i32* %eax.global-to-local, align 8
  %v2_35585 = call i32 @unknown_6c473(i32 %v3_3557f, i32 %v3_35578)
  store i32 %v2_35585, i32* %eax.global-to-local, align 8
  %v0_3558a = call i32 @function_3580b()
  store i32 %v0_3558a, i32* %eax.global-to-local, align 8
  ret i32 %v0_3558a

; uselistorder directives
  uselistorder i32 %v0_35561, { 1, 0, 2, 3 }
  uselistorder i32 %v11_3555b, { 0, 2, 1 }
  uselistorder i32 %v3_35558, { 1, 0 }
  uselistorder i32 %v0_35558, { 1, 0 }
  uselistorder i32 -75, { 1, 0 }
}

define i32 @function_3558f() local_unnamed_addr {
dec_label_pc_3558f:
  %v0_35597 = load i32, i32* @ebp, align 4
  %v1_355ae = add i32 %v0_35597, -52
  %v2_355ae = inttoptr i32 %v1_355ae to i32*
  %v3_355ae = load i32, i32* %v2_355ae, align 4
  %v1_355b5 = add i32 %v0_35597, -44
  %v2_355b5 = inttoptr i32 %v1_355b5 to i32*
  %v3_355b5 = load i32, i32* %v2_355b5, align 4
  %v2_355bb = call i32 @unknown_6c473(i32 %v3_355b5, i32 %v3_355ae)
  %v0_355c0 = call i32 @function_3580b()
  ret i32 %v0_355c0

; uselistorder directives
  uselistorder i32 %v0_35597, { 1, 0 }
}

define i32 @function_355c5() local_unnamed_addr {
dec_label_pc_355c5:
  %v0_355cd = load i32, i32* @ebp, align 4
  %v1_355e4 = add i32 %v0_355cd, -52
  %v2_355e4 = inttoptr i32 %v1_355e4 to i32*
  %v3_355e4 = load i32, i32* %v2_355e4, align 4
  %v1_355eb = add i32 %v0_355cd, -44
  %v2_355eb = inttoptr i32 %v1_355eb to i32*
  %v3_355eb = load i32, i32* %v2_355eb, align 4
  %v2_355f1 = call i32 @unknown_6c473(i32 %v3_355eb, i32 %v3_355e4)
  %v0_355f6 = call i32 @function_3580b()
  ret i32 %v0_355f6

; uselistorder directives
  uselistorder i32 %v0_355cd, { 1, 0 }
}

define i32 @function_355fb() local_unnamed_addr {
dec_label_pc_355fb:
  %v0_35603 = load i32, i32* @ebp, align 4
  %v1_3561a = add i32 %v0_35603, -52
  %v2_3561a = inttoptr i32 %v1_3561a to i32*
  %v3_3561a = load i32, i32* %v2_3561a, align 4
  %v1_35621 = add i32 %v0_35603, -44
  %v2_35621 = inttoptr i32 %v1_35621 to i32*
  %v3_35621 = load i32, i32* %v2_35621, align 4
  %v2_35627 = call i32 @unknown_6c473(i32 %v3_35621, i32 %v3_3561a)
  %v0_3562c = call i32 @function_3580b()
  ret i32 %v0_3562c

; uselistorder directives
  uselistorder i32 %v0_35603, { 1, 0 }
}

define i32 @function_35642(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35642:
  %eax.global-to-local = alloca i32, align 4
  %v0_35643 = load i32, i32* @eax, align 8
  %v1_35643 = trunc i32 %v0_35643 to i8
  %v2_35643 = and i8 %v1_35643, 12
  %v8_35643 = zext i8 %v2_35643 to i32
  %v10_35643 = and i32 %v0_35643, -256
  %v11_35643 = or i32 %v8_35643, %v10_35643
  store i32 %v11_35643, i32* %eax.global-to-local, align 8
  %v1_35645 = inttoptr i32 %v11_35643 to i8*
  %v2_35645 = load i8, i8* %v1_35645, align 4
  %v5_35645 = add i8 %v2_35645, %v2_35643
  store i8 %v5_35645, i8* %v1_35645, align 4
  %v0_35647 = load i32, i32* %eax.global-to-local, align 8
  %v1_35647 = inttoptr i32 %v0_35647 to i8*
  %v2_35647 = load i8, i8* %v1_35647, align 1
  %v4_35647 = trunc i32 %v0_35647 to i8
  %v5_35647 = add i8 %v2_35647, %v4_35647
  store i8 %v5_35647, i8* %v1_35647, align 1
  %v0_35649 = load i32, i32* @ebp, align 4
  %v1_35649 = add i32 %v0_35649, -56
  %v2_35649 = inttoptr i32 %v1_35649 to i32*
  %v3_35649 = load i32, i32* %v2_35649, align 4
  store i32 %v3_35649, i32* %eax.global-to-local, align 8
  %v1_35650 = add i32 %v0_35649, -52
  %v2_35650 = inttoptr i32 %v1_35650 to i32*
  %v3_35650 = load i32, i32* %v2_35650, align 4
  store i32 %v3_35650, i32* %eax.global-to-local, align 8
  %v1_35657 = add i32 %v0_35649, -44
  %v2_35657 = inttoptr i32 %v1_35657 to i32*
  %v3_35657 = load i32, i32* %v2_35657, align 4
  store i32 %v3_35657, i32* %eax.global-to-local, align 8
  %v2_3565d = call i32 @unknown_6c473(i32 %v3_35657, i32 %v3_35650)
  store i32 %v2_3565d, i32* %eax.global-to-local, align 8
  %v0_35662 = call i32 @function_3580b()
  store i32 %v0_35662, i32* %eax.global-to-local, align 8
  ret i32 %v0_35662
}

define i32 @function_35667() local_unnamed_addr {
dec_label_pc_35667:
  %v0_3566f = load i32, i32* @ebp, align 4
  %v1_35686 = add i32 %v0_3566f, -52
  %v2_35686 = inttoptr i32 %v1_35686 to i32*
  %v3_35686 = load i32, i32* %v2_35686, align 4
  %v1_3568d = add i32 %v0_3566f, -44
  %v2_3568d = inttoptr i32 %v1_3568d to i32*
  %v3_3568d = load i32, i32* %v2_3568d, align 4
  %v2_35693 = call i32 @unknown_6c473(i32 %v3_3568d, i32 %v3_35686)
  %v0_35698 = call i32 @function_3580b()
  ret i32 %v0_35698

; uselistorder directives
  uselistorder i32 %v0_3566f, { 1, 0 }
}

define i32 @function_3569d() local_unnamed_addr {
dec_label_pc_3569d:
  %v0_356a5 = load i32, i32* @ebp, align 4
  %v1_356bc = add i32 %v0_356a5, -52
  %v2_356bc = inttoptr i32 %v1_356bc to i32*
  %v3_356bc = load i32, i32* %v2_356bc, align 4
  %v1_356c3 = add i32 %v0_356a5, -44
  %v2_356c3 = inttoptr i32 %v1_356c3 to i32*
  %v3_356c3 = load i32, i32* %v2_356c3, align 4
  %v2_356c9 = call i32 @unknown_6c473(i32 %v3_356c3, i32 %v3_356bc)
  %v0_356ce = call i32 @function_3580b()
  ret i32 %v0_356ce

; uselistorder directives
  uselistorder i32 %v0_356a5, { 1, 0 }
}

define i32 @function_356d3() local_unnamed_addr {
dec_label_pc_356d3:
  %v0_356db = load i32, i32* @ebp, align 4
  %v1_356f2 = add i32 %v0_356db, -52
  %v2_356f2 = inttoptr i32 %v1_356f2 to i32*
  %v3_356f2 = load i32, i32* %v2_356f2, align 4
  %v1_356f9 = add i32 %v0_356db, -44
  %v2_356f9 = inttoptr i32 %v1_356f9 to i32*
  %v3_356f9 = load i32, i32* %v2_356f9, align 4
  %v2_356ff = call i32 @unknown_6c473(i32 %v3_356f9, i32 %v3_356f2)
  %v0_35704 = call i32 @function_3580b()
  ret i32 %v0_35704

; uselistorder directives
  uselistorder i32 %v0_356db, { 1, 0 }
}

define i32 @function_35716(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35716:
  %v0_35721 = load i32, i32* @ebp, align 4
  %v1_35721 = add i32 %v0_35721, -56
  %v2_35721 = inttoptr i32 %v1_35721 to i32*
  %v3_35721 = load i32, i32* %v2_35721, align 4
  ret i32 %v3_35721
}

define i32 @function_35728(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35728:
  %v0_35728 = load i32, i32* @ebp, align 4
  %v1_35728 = add i32 %v0_35728, -52
  %v2_35728 = inttoptr i32 %v1_35728 to i32*
  %v3_35728 = load i32, i32* %v2_35728, align 4
  %v1_3572f = add i32 %v0_35728, -44
  %v2_3572f = inttoptr i32 %v1_3572f to i32*
  %v3_3572f = load i32, i32* %v2_3572f, align 4
  %v2_35735 = call i32 @unknown_6c473(i32 %v3_3572f, i32 %v3_35728)
  %v0_3573a = call i32 @function_3580b()
  ret i32 %v0_3573a
}

define i32 @function_3573f() local_unnamed_addr {
dec_label_pc_3573f:
  %v0_35755 = load i32, i32* @ebp, align 4
  %v1_3575c = add i32 %v0_35755, -52
  %v2_3575c = inttoptr i32 %v1_3575c to i32*
  %v3_3575c = load i32, i32* %v2_3575c, align 4
  %v1_35763 = add i32 %v0_35755, -44
  %v2_35763 = inttoptr i32 %v1_35763 to i32*
  %v3_35763 = load i32, i32* %v2_35763, align 4
  %v2_35769 = call i32 @unknown_6c473(i32 %v3_35763, i32 %v3_3575c)
  %v0_3576e = call i32 @function_3580b()
  ret i32 %v0_3576e
}

define i32 @function_35773() local_unnamed_addr {
dec_label_pc_35773:
  %v0_35789 = load i32, i32* @ebp, align 4
  %v1_35790 = add i32 %v0_35789, -52
  %v2_35790 = inttoptr i32 %v1_35790 to i32*
  %v3_35790 = load i32, i32* %v2_35790, align 4
  %v1_35797 = add i32 %v0_35789, -44
  %v2_35797 = inttoptr i32 %v1_35797 to i32*
  %v3_35797 = load i32, i32* %v2_35797, align 4
  %v2_3579d = call i32 @unknown_6c473(i32 %v3_35797, i32 %v3_35790)
  %v0_357a2 = call i32 @function_3580b()
  ret i32 %v0_357a2
}

define i32 @function_357a4() local_unnamed_addr {
dec_label_pc_357a4:
  %v0_357b8 = load i32, i32* @ebp, align 4
  %v1_357bf = add i32 %v0_357b8, -52
  %v2_357bf = inttoptr i32 %v1_357bf to i32*
  %v3_357bf = load i32, i32* %v2_357bf, align 4
  %v1_357c6 = add i32 %v0_357b8, -44
  %v2_357c6 = inttoptr i32 %v1_357c6 to i32*
  %v3_357c6 = load i32, i32* %v2_357c6, align 4
  %v2_357cc = call i32 @unknown_6c473(i32 %v3_357c6, i32 %v3_357bf)
  %v0_357d1 = call i32 @function_3580b()
  ret i32 %v0_357d1

; uselistorder directives
  uselistorder i32 ()* @function_3580b, { 13, 12, 11, 1, 10, 9, 8, 0, 7, 6, 5, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @unknown_6c473, { 13, 12, 11, 1, 10, 9, 8, 0, 7, 6, 5, 2, 4, 3 }
}

define i32 @function_357d3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_357d3:
  %v0_357eb = load i32, i32* @ebp, align 4
  %v1_357eb = add i32 %v0_357eb, -56
  %v2_357eb = inttoptr i32 %v1_357eb to i32*
  %v3_357eb = load i32, i32* %v2_357eb, align 4
  ret i32 %v3_357eb
}

define i32 @function_357f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_357f0:
  %v0_357f2 = load i32, i32* @ebp, align 4
  %v1_357f2 = add i32 %v0_357f2, -52
  %v2_357f2 = inttoptr i32 %v1_357f2 to i32*
  %v3_357f2 = load i32, i32* %v2_357f2, align 4
  %v1_357f9 = add i32 %v0_357f2, -48
  %v2_357f9 = inttoptr i32 %v1_357f9 to i32*
  %v3_357f9 = load i32, i32* %v2_357f9, align 4
  %v1_35800 = add i32 %v0_357f2, -44
  %v2_35800 = inttoptr i32 %v1_35800 to i32*
  %v3_35800 = load i32, i32* %v2_35800, align 4
  %v3_35806 = call i32 @unknown_6c4cd(i32 %v3_35800, i32 %v3_357f9, i32 %v3_357f2)
  ret i32 %v3_35806
}

define i32 @function_357f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_357f8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3580b() local_unnamed_addr {
dec_label_pc_3580b:
  %v0_3580b = load i32, i32* @ebp, align 4
  %v1_3580b = add i32 %v0_3580b, -28
  %v2_3580b = inttoptr i32 %v1_3580b to i32*
  %v3_3580b = load i32, i32* %v2_3580b, align 4
  %v1_3580e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3580e = xor i32 %v1_3580e, %v3_3580b
  %v3_3580e = icmp eq i32 %v2_3580e, 0
  store i32 %v2_3580e, i32* @eax, align 8
  br i1 %v3_3580e, label %bb, label %dec_label_pc_35817

bb:                                               ; preds = %dec_label_pc_3580b
  %v1_35815 = call i32 @function_3581c()
  br label %dec_label_pc_35817

dec_label_pc_35817:                               ; preds = %bb, %dec_label_pc_3580b
  %v2_35815 = phi i32 [ %v1_35815, %bb ], [ %v2_3580e, %dec_label_pc_3580b ]
  ret i32 %v2_35815
}

define i32 @function_3581c() local_unnamed_addr {
dec_label_pc_3581c:
  %v0_35823 = load i32, i32* @eax, align 8
  ret i32 %v0_35823
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS_7variantISsSM_SS_bxdNS1_5void_ES17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_E8assignerEPKvNS18_18has_fallback_type_EEENT1_11result_typeEiiRS1D_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_35874:
  ret i32 0
}

define i32 @function_358c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_358c4:
  %v0_358c4 = load i32, i32* @ebp, align 4
  %v1_358c4 = add i32 %v0_358c4, -48
  %v2_358c4 = inttoptr i32 %v1_358c4 to i32*
  %v3_358c4 = load i32, i32* %v2_358c4, align 4
  %v2_358c7 = mul i32 %v3_358c4, 4
  %v1_358ca = add i32 %v2_358c7, ptrtoint (i32* @global_var_35d50.2906 to i32)
  %v1_358cf = inttoptr i32 %v1_358ca to i32*
  %v2_358cf = load i32, i32* %v1_358cf, align 4
  ret i32 %v2_358cf
}

define i32 @function_358f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_358f4:
  %v0_358f5 = load i32, i32* @eax, align 8
  %v0_358f9 = load i32, i32* @ebp, align 4
  %v1_358f9 = add i32 %v0_358f9, -44
  %v2_358f9 = inttoptr i32 %v1_358f9 to i32*
  %v3_358f9 = load i32, i32* %v2_358f9, align 4
  %v2_358ff = call i32 @unknown_6ca5e(i32 %v3_358f9, i32 %v0_358f5)
  %v0_35904 = call i32 @function_35d35()
  ret i32 %v0_35904
}

define i32 @function_35914(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35914:
  %v0_35914 = load i32, i32* @eax, align 8
  %v0_35921 = load i32, i32* @ebp, align 4
  %v1_35921 = add i32 %v0_35921, -56
  %v2_35921 = inttoptr i32 %v1_35921 to i32*
  %v3_35921 = load i32, i32* %v2_35921, align 4
  %v1_35928 = add i32 %v0_35921, -52
  %v2_35928 = inttoptr i32 %v1_35928 to i32*
  %v3_35928 = load i32, i32* %v2_35928, align 4
  %v1_3592f = add i32 %v0_35921, -44
  %v2_3592f = inttoptr i32 %v1_3592f to i32*
  %v3_3592f = load i32, i32* %v2_3592f, align 4
  %sext = mul i32 %v0_35914, 16777216
  %v5_35935 = sdiv i32 %sext, 16777216
  %v6_35935 = call i32 @unknown_6cacb(i32 %v3_3592f, i32 %v3_35928, i32 %v3_35921, i32 0, i32 %v5_35935)
  %v0_3593a = call i32 @function_35d35()
  ret i32 %v0_3593a
}

define i32 @function_35920(i32 %arg1) local_unnamed_addr {
dec_label_pc_35920:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35963(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35963:
  %v0_35965 = load i32, i32* @ebp, align 4
  %v1_35965 = add i32 %v0_35965, -44
  %v2_35965 = inttoptr i32 %v1_35965 to i32*
  %v3_35965 = load i32, i32* %v2_35965, align 4
  %v1_3596b = call i32 @unknown_6cb38(i32 %v3_35965)
  %v0_35970 = call i32 @function_35d35()
  ret i32 %v0_35970
}

define i32 @function_35975() local_unnamed_addr {
dec_label_pc_35975:
  %v0_3597d = load i32, i32* @ebp, align 4
  %v1_3597d = add i32 %v0_3597d, -80
  %v2_3597d = inttoptr i32 %v1_3597d to i8*
  %v3_3597d = load i8, i8* %v2_3597d, align 1
  %v1_3598d = add i32 %v0_3597d, -56
  %v2_3598d = inttoptr i32 %v1_3598d to i32*
  %v3_3598d = load i32, i32* %v2_3598d, align 4
  %v1_35994 = add i32 %v0_3597d, -52
  %v2_35994 = inttoptr i32 %v1_35994 to i32*
  %v3_35994 = load i32, i32* %v2_35994, align 4
  %v1_3599b = add i32 %v0_3597d, -44
  %v2_3599b = inttoptr i32 %v1_3599b to i32*
  %v3_3599b = load i32, i32* %v2_3599b, align 4
  %v6_359a1 = sext i8 %v3_3597d to i32
  %v7_359a1 = call i32 @unknown_6cba5(i32 %v3_3599b, i32 %v3_35994, i32 %v3_3598d, i32 0, i32 %v6_359a1, i32 1)
  %v0_359a6 = call i32 @function_35d35()
  ret i32 %v0_359a6

; uselistorder directives
  uselistorder i32 %v0_3597d, { 0, 2, 1, 3 }
}

define i32 @function_359ab() local_unnamed_addr {
dec_label_pc_359ab:
  %v0_359b3 = load i32, i32* @ebp, align 4
  %v1_359b3 = add i32 %v0_359b3, -79
  %v2_359b3 = inttoptr i32 %v1_359b3 to i8*
  %v3_359b3 = load i8, i8* %v2_359b3, align 1
  %v1_359c3 = add i32 %v0_359b3, -56
  %v2_359c3 = inttoptr i32 %v1_359c3 to i32*
  %v3_359c3 = load i32, i32* %v2_359c3, align 4
  %v1_359ca = add i32 %v0_359b3, -52
  %v2_359ca = inttoptr i32 %v1_359ca to i32*
  %v3_359ca = load i32, i32* %v2_359ca, align 4
  %v1_359d1 = add i32 %v0_359b3, -44
  %v2_359d1 = inttoptr i32 %v1_359d1 to i32*
  %v3_359d1 = load i32, i32* %v2_359d1, align 4
  %v6_359d7 = sext i8 %v3_359b3 to i32
  %v7_359d7 = call i32 @unknown_6cc12(i32 %v3_359d1, i32 %v3_359ca, i32 %v3_359c3, i32 0, i32 %v6_359d7, i32 1)
  %v0_359dc = call i32 @function_35d35()
  ret i32 %v0_359dc

; uselistorder directives
  uselistorder i32 %v0_359b3, { 0, 2, 1, 3 }
  uselistorder i32 -79, { 0, 5, 1, 2, 3, 4 }
}

define i32 @function_35a16(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35a16:
  %eax.global-to-local = alloca i32, align 4
  %v0_35a16 = load i32, i32* @ebx, align 4
  %v3_35a16 = load i32, i32* @eax, align 8
  %v5_35a161 = mul i32 %v3_35a16, 256
  %v1_35a162 = add i32 %v5_35a161, %v0_35a16
  %v22_35a16 = and i32 %v1_35a162, 65280
  %v23_35a16 = and i32 %v0_35a16, -65281
  %v24_35a16 = or i32 %v22_35a16, %v23_35a16
  store i32 %v24_35a16, i32* @ebx, align 4
  %v11_35a19 = and i32 %v3_35a16, -236
  store i32 %v11_35a19, i32* %eax.global-to-local, align 8
  %v1_35a1b = inttoptr i32 %v11_35a19 to i32*
  %v2_35a1b = load i32, i32* %v1_35a1b, align 4
  %v4_35a1b = add i32 %v2_35a1b, %v11_35a19
  store i32 %v4_35a1b, i32* %v1_35a1b, align 4
  %v22_35a1b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_35a1b

; uselistorder directives
  uselistorder i32 %v11_35a19, { 0, 2, 1 }
  uselistorder i32 %v3_35a16, { 1, 0 }
  uselistorder i32 %v0_35a16, { 1, 0 }
}

define i32 @function_35a1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_35a1e:
  %v2_35a1e = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_35a1e = load i32, i32* @ecx, align 8
  %v4_35a1e = trunc i32 %v3_35a1e to i8
  %v5_35a1e = add i8 %v4_35a1e, %v2_35a1e
  %v20_35a1e = load i32, i32* @edi, align 4
  %v21_35a1e = inttoptr i32 %v20_35a1e to i8*
  store i8 %v5_35a1e, i8* %v21_35a1e, align 1
  %v0_35a22 = load i32, i32* @ebx, align 4
  %v1_35a22 = and i32 %v0_35a22, -256
  %v2_35a22 = or i32 %v1_35a22, 136
  store i32 %v2_35a22, i32* @ebx, align 4
  %v0_35a2f = load i32, i32* @ebp, align 4
  %v1_35a36 = add i32 %v0_35a2f, -52
  %v2_35a36 = inttoptr i32 %v1_35a36 to i32*
  %v3_35a36 = load i32, i32* %v2_35a36, align 4
  %v1_35a3d = add i32 %v0_35a2f, -44
  %v2_35a3d = inttoptr i32 %v1_35a3d to i32*
  %v3_35a3d = load i32, i32* %v2_35a3d, align 4
  %v2_35a43 = call i32 @unknown_6ccec(i32 %v3_35a3d, i32 %v3_35a36)
  %v0_35a48 = call i32 @function_35d35()
  ret i32 %v0_35a48
}

define i32 @function_35a64(i32 %arg1) local_unnamed_addr {
dec_label_pc_35a64:
  %v0_35a64 = load i32, i32* @ebx, align 4
  %v1_35a64 = add i32 %v0_35a64, 1149880389
  %v2_35a64 = inttoptr i32 %v1_35a64 to i8*
  %v3_35a64 = load i8, i8* %v2_35a64, align 1
  %v4_35a64 = load i32, i32* @ecx, align 8
  %v5_35a64 = trunc i32 %v4_35a64 to i8
  %v6_35a64 = add i8 %v5_35a64, %v3_35a64
  store i8 %v6_35a64, i8* %v2_35a64, align 1
  %v0_35a6c = load i32, i32* @ebp, align 4
  %v1_35a6c = add i32 %v0_35a6c, -52
  %v2_35a6c = inttoptr i32 %v1_35a6c to i32*
  %v3_35a6c = load i32, i32* %v2_35a6c, align 4
  %v1_35a73 = add i32 %v0_35a6c, -44
  %v2_35a73 = inttoptr i32 %v1_35a73 to i32*
  %v3_35a73 = load i32, i32* %v2_35a73, align 4
  %v2_35a79 = call i32 @unknown_6ccec(i32 %v3_35a73, i32 %v3_35a6c)
  %v0_35a7e = call i32 @function_35d35()
  ret i32 %v0_35a7e

; uselistorder directives
  uselistorder i32 1149880389, { 1, 0 }
}

define i32 @function_35a92(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35a92:
  %eax.global-to-local = alloca i32, align 4
  %v3_35a92 = load i32, i32* @eax, align 8
  %v4_35a92 = trunc i32 %v3_35a92 to i8
  %v2_35a95 = and i8 %v4_35a92, 12
  %v8_35a95 = zext i8 %v2_35a95 to i32
  %v10_35a95 = and i32 %v3_35a92, -256
  %v11_35a95 = or i32 %v8_35a95, %v10_35a95
  store i32 %v11_35a95, i32* %eax.global-to-local, align 8
  %v1_35a97 = inttoptr i32 %v11_35a95 to i8*
  %v2_35a97 = load i8, i8* %v1_35a97, align 4
  %v5_35a97 = add i8 %v2_35a97, %v2_35a95
  store i8 %v5_35a97, i8* %v1_35a97, align 4
  %v0_35a99 = load i32, i32* %eax.global-to-local, align 8
  %v1_35a99 = inttoptr i32 %v0_35a99 to i8*
  %v2_35a99 = load i8, i8* %v1_35a99, align 1
  %v4_35a99 = trunc i32 %v0_35a99 to i8
  %v5_35a99 = add i8 %v2_35a99, %v4_35a99
  store i8 %v5_35a99, i8* %v1_35a99, align 1
  %v0_35a9b = load i32, i32* @ebp, align 4
  %v1_35a9b = add i32 %v0_35a9b, -56
  %v2_35a9b = inttoptr i32 %v1_35a9b to i32*
  %v3_35a9b = load i32, i32* %v2_35a9b, align 4
  store i32 %v3_35a9b, i32* %eax.global-to-local, align 8
  %v1_35aa2 = add i32 %v0_35a9b, -52
  %v2_35aa2 = inttoptr i32 %v1_35aa2 to i32*
  %v3_35aa2 = load i32, i32* %v2_35aa2, align 4
  store i32 %v3_35aa2, i32* %eax.global-to-local, align 8
  %v1_35aa9 = add i32 %v0_35a9b, -44
  %v2_35aa9 = inttoptr i32 %v1_35aa9 to i32*
  %v3_35aa9 = load i32, i32* %v2_35aa9, align 4
  store i32 %v3_35aa9, i32* %eax.global-to-local, align 8
  %v2_35aaf = call i32 @unknown_6ccec(i32 %v3_35aa9, i32 %v3_35aa2)
  store i32 %v2_35aaf, i32* %eax.global-to-local, align 8
  %v0_35ab4 = call i32 @function_35d35()
  store i32 %v0_35ab4, i32* %eax.global-to-local, align 8
  ret i32 %v0_35ab4
}

define i32 @function_35ab9() local_unnamed_addr {
dec_label_pc_35ab9:
  %v0_35ac1 = load i32, i32* @ebp, align 4
  %v1_35ad8 = add i32 %v0_35ac1, -52
  %v2_35ad8 = inttoptr i32 %v1_35ad8 to i32*
  %v3_35ad8 = load i32, i32* %v2_35ad8, align 4
  %v1_35adf = add i32 %v0_35ac1, -44
  %v2_35adf = inttoptr i32 %v1_35adf to i32*
  %v3_35adf = load i32, i32* %v2_35adf, align 4
  %v2_35ae5 = call i32 @unknown_6ccec(i32 %v3_35adf, i32 %v3_35ad8)
  %v0_35aea = call i32 @function_35d35()
  ret i32 %v0_35aea

; uselistorder directives
  uselistorder i32 %v0_35ac1, { 1, 0 }
}

define i32 @function_35aef() local_unnamed_addr {
dec_label_pc_35aef:
  %v0_35af7 = load i32, i32* @ebp, align 4
  %v1_35b0e = add i32 %v0_35af7, -52
  %v2_35b0e = inttoptr i32 %v1_35b0e to i32*
  %v3_35b0e = load i32, i32* %v2_35b0e, align 4
  %v1_35b15 = add i32 %v0_35af7, -44
  %v2_35b15 = inttoptr i32 %v1_35b15 to i32*
  %v3_35b15 = load i32, i32* %v2_35b15, align 4
  %v2_35b1b = call i32 @unknown_6ccec(i32 %v3_35b15, i32 %v3_35b0e)
  %v0_35b20 = call i32 @function_35d35()
  ret i32 %v0_35b20

; uselistorder directives
  uselistorder i32 %v0_35af7, { 1, 0 }
}

define i32 @function_35b36(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35b36:
  %eax.global-to-local = alloca i32, align 4
  %v0_35b37 = load i32, i32* @eax, align 8
  %v1_35b37 = trunc i32 %v0_35b37 to i8
  %v2_35b37 = and i8 %v1_35b37, 12
  %v8_35b37 = zext i8 %v2_35b37 to i32
  %v10_35b37 = and i32 %v0_35b37, -256
  %v11_35b37 = or i32 %v8_35b37, %v10_35b37
  store i32 %v11_35b37, i32* %eax.global-to-local, align 8
  %v1_35b39 = inttoptr i32 %v11_35b37 to i8*
  %v2_35b39 = load i8, i8* %v1_35b39, align 4
  %v5_35b39 = add i8 %v2_35b39, %v2_35b37
  store i8 %v5_35b39, i8* %v1_35b39, align 4
  %v0_35b3b = load i32, i32* %eax.global-to-local, align 8
  %v1_35b3b = inttoptr i32 %v0_35b3b to i8*
  %v2_35b3b = load i8, i8* %v1_35b3b, align 1
  %v4_35b3b = trunc i32 %v0_35b3b to i8
  %v5_35b3b = add i8 %v2_35b3b, %v4_35b3b
  store i8 %v5_35b3b, i8* %v1_35b3b, align 1
  %v0_35b3d = load i32, i32* @ebp, align 4
  %v1_35b3d = add i32 %v0_35b3d, -56
  %v2_35b3d = inttoptr i32 %v1_35b3d to i32*
  %v3_35b3d = load i32, i32* %v2_35b3d, align 4
  store i32 %v3_35b3d, i32* %eax.global-to-local, align 8
  %v1_35b44 = add i32 %v0_35b3d, -52
  %v2_35b44 = inttoptr i32 %v1_35b44 to i32*
  %v3_35b44 = load i32, i32* %v2_35b44, align 4
  store i32 %v3_35b44, i32* %eax.global-to-local, align 8
  %v1_35b4b = add i32 %v0_35b3d, -44
  %v2_35b4b = inttoptr i32 %v1_35b4b to i32*
  %v3_35b4b = load i32, i32* %v2_35b4b, align 4
  store i32 %v3_35b4b, i32* %eax.global-to-local, align 8
  %v2_35b51 = call i32 @unknown_6ccec(i32 %v3_35b4b, i32 %v3_35b44)
  store i32 %v2_35b51, i32* %eax.global-to-local, align 8
  %v0_35b56 = call i32 @function_35d35()
  store i32 %v0_35b56, i32* %eax.global-to-local, align 8
  ret i32 %v0_35b56
}

define i32 @function_35b86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35b8e:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_35b86 = load i32, i32* @eax, align 8
  %v11_35b86 = and i32 %v0_35b86, -24
  store i32 %v11_35b86, i32* %eax.global-to-local, align 8
  %v0_35b88 = load i32, i32* @esp, align 4
  %v8_35b88 = add i32 %v0_35b88, -32
  %v23_35b88 = inttoptr i32 %v8_35b88 to i32*
  %v24_35b88 = load i32, i32* @edi, align 4
  store i32 %v24_35b88, i32* %v23_35b88, align 4
  %v0_35b8e.pre = load i32, i32* %eax.global-to-local, align 8
  %v1_35b8e = inttoptr i32 %v0_35b8e.pre to i32*
  %v2_35b8e = load i32, i32* %v1_35b8e, align 4
  %v4_35b8e = add i32 %v2_35b8e, %v0_35b8e.pre
  store i32 %v4_35b8e, i32* %v1_35b8e, align 4
  %v0_35b90 = load i32, i32* @ebx, align 4
  %v3_35b90 = load i32, i32* %eax.global-to-local, align 8
  %v5_35b902 = mul i32 %v3_35b90, 256
  %v1_35b903 = add i32 %v5_35b902, %v0_35b90
  %v22_35b90 = and i32 %v1_35b903, 65280
  %v23_35b90 = and i32 %v0_35b90, -65281
  %v24_35b90 = or i32 %v22_35b90, %v23_35b90
  store i32 %v24_35b90, i32* @ebx, align 4
  %v11_35b93 = and i32 %v3_35b90, -236
  store i32 %v11_35b93, i32* %eax.global-to-local, align 8
  %v1_35b95 = inttoptr i32 %v11_35b93 to i32*
  %v2_35b95 = load i32, i32* %v1_35b95, align 4
  %v4_35b95 = add i32 %v2_35b95, %v11_35b93
  store i32 %v4_35b95, i32* %v1_35b95, align 4
  %v0_35b97 = load i32, i32* %eax.global-to-local, align 8
  %v1_35b97 = inttoptr i32 %v0_35b97 to i8*
  %v2_35b97 = load i8, i8* %v1_35b97, align 1
  %v4_35b97 = trunc i32 %v0_35b97 to i8
  %v5_35b97 = add i8 %v2_35b97, %v4_35b97
  store i8 %v5_35b97, i8* %v1_35b97, align 1
  %v0_35b99 = load i32, i32* @ebp, align 4
  %v1_35b99 = add i32 %v0_35b99, -70
  %v2_35b99 = inttoptr i32 %v1_35b99 to i8*
  %v3_35b99 = load i8, i8* %v2_35b99, align 1
  %v4_35b99 = zext i8 %v3_35b99 to i32
  store i32 %v4_35b99, i32* %eax.global-to-local, align 8
  %v2_35b9d = load i32, i32* @esp, align 4
  %v3_35b9d = add i32 %v2_35b9d, 16
  %v4_35b9d = inttoptr i32 %v3_35b9d to i8*
  store i8 %v3_35b99, i8* %v4_35b9d, align 1
  %v0_35ba1 = load i32, i32* @esp, align 4
  %v1_35ba1 = add i32 %v0_35ba1, 12
  %v2_35ba1 = inttoptr i32 %v1_35ba1 to i32*
  store i32 0, i32* %v2_35ba1, align 4
  %v0_35ba9 = load i32, i32* @ebp, align 4
  %v1_35ba9 = add i32 %v0_35ba9, -56
  %v2_35ba9 = inttoptr i32 %v1_35ba9 to i32*
  %v3_35ba9 = load i32, i32* %v2_35ba9, align 4
  store i32 %v3_35ba9, i32* %eax.global-to-local, align 8
  %v1_35bac = load i32, i32* @esp, align 4
  %v2_35bac = add i32 %v1_35bac, 8
  %v3_35bac = inttoptr i32 %v2_35bac to i32*
  store i32 %v3_35ba9, i32* %v3_35bac, align 4
  %v0_35bb0 = load i32, i32* @ebp, align 4
  %v1_35bb0 = add i32 %v0_35bb0, -52
  %v2_35bb0 = inttoptr i32 %v1_35bb0 to i32*
  %v3_35bb0 = load i32, i32* %v2_35bb0, align 4
  store i32 %v3_35bb0, i32* %eax.global-to-local, align 8
  %v1_35bb3 = load i32, i32* @esp, align 4
  %v2_35bb3 = add i32 %v1_35bb3, 4
  %v3_35bb3 = inttoptr i32 %v2_35bb3 to i32*
  store i32 %v3_35bb0, i32* %v3_35bb3, align 4
  %v0_35bb7 = load i32, i32* @ebp, align 4
  %v1_35bb7 = add i32 %v0_35bb7, -44
  %v2_35bb7 = inttoptr i32 %v1_35bb7 to i32*
  %v3_35bb7 = load i32, i32* %v2_35bb7, align 4
  store i32 %v3_35bb7, i32* %eax.global-to-local, align 8
  %v1_35bba = load i32, i32* @esp, align 4
  %v2_35bba = inttoptr i32 %v1_35bba to i32*
  store i32 %v3_35bb7, i32* %v2_35bba, align 4
  %v2_35bbd = call i32 @unknown_6ccec(i32 %v11_35b86, i32 %tmp6)
  store i32 %v2_35bbd, i32* %eax.global-to-local, align 8
  %v0_35bc2 = call i32 @function_35d35()
  store i32 %v0_35bc2, i32* %eax.global-to-local, align 8
  ret i32 %v0_35bc2

; uselistorder directives
  uselistorder i32 %v11_35b93, { 0, 2, 1 }
  uselistorder i32 %v3_35b90, { 1, 0 }
  uselistorder i32 %v0_35b90, { 1, 0 }
  uselistorder i32 %v11_35b86, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
}

define i32 @function_35bd6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_35bd6:
  %eax.global-to-local = alloca i32, align 4
  %v3_35bd6 = load i32, i32* @eax, align 8
  %v4_35bd6 = trunc i32 %v3_35bd6 to i8
  %v2_35bd9 = and i8 %v4_35bd6, 12
  %v8_35bd9 = zext i8 %v2_35bd9 to i32
  %v10_35bd9 = and i32 %v3_35bd6, -256
  %v11_35bd9 = or i32 %v8_35bd9, %v10_35bd9
  store i32 %v11_35bd9, i32* %eax.global-to-local, align 8
  %v1_35bdb = inttoptr i32 %v11_35bd9 to i8*
  %v2_35bdb = load i8, i8* %v1_35bdb, align 4
  %v5_35bdb = add i8 %v2_35bdb, %v2_35bd9
  store i8 %v5_35bdb, i8* %v1_35bdb, align 4
  %v0_35bdd = load i32, i32* %eax.global-to-local, align 8
  %v1_35bdd = inttoptr i32 %v0_35bdd to i8*
  %v2_35bdd = load i8, i8* %v1_35bdd, align 1
  %v4_35bdd = trunc i32 %v0_35bdd to i8
  %v5_35bdd = add i8 %v2_35bdd, %v4_35bdd
  store i8 %v5_35bdd, i8* %v1_35bdd, align 1
  %v0_35bdf = load i32, i32* @ebp, align 4
  %v1_35bdf = add i32 %v0_35bdf, -56
  %v2_35bdf = inttoptr i32 %v1_35bdf to i32*
  %v3_35bdf = load i32, i32* %v2_35bdf, align 4
  store i32 %v3_35bdf, i32* %eax.global-to-local, align 8
  %v1_35be6 = add i32 %v0_35bdf, -52
  %v2_35be6 = inttoptr i32 %v1_35be6 to i32*
  %v3_35be6 = load i32, i32* %v2_35be6, align 4
  store i32 %v3_35be6, i32* %eax.global-to-local, align 8
  %v1_35bed = add i32 %v0_35bdf, -44
  %v2_35bed = inttoptr i32 %v1_35bed to i32*
  %v3_35bed = load i32, i32* %v2_35bed, align 4
  store i32 %v3_35bed, i32* %eax.global-to-local, align 8
  %v2_35bf3 = call i32 @unknown_6ccec(i32 %v3_35bed, i32 %v3_35be6)
  store i32 %v2_35bf3, i32* %eax.global-to-local, align 8
  %v0_35bf8 = call i32 @function_35d35()
  store i32 %v0_35bf8, i32* %eax.global-to-local, align 8
  ret i32 %v0_35bf8
}

define i32 @function_35bfd() local_unnamed_addr {
dec_label_pc_35bfd:
  %v0_35c05 = load i32, i32* @ebp, align 4
  %v1_35c1c = add i32 %v0_35c05, -52
  %v2_35c1c = inttoptr i32 %v1_35c1c to i32*
  %v3_35c1c = load i32, i32* %v2_35c1c, align 4
  %v1_35c23 = add i32 %v0_35c05, -44
  %v2_35c23 = inttoptr i32 %v1_35c23 to i32*
  %v3_35c23 = load i32, i32* %v2_35c23, align 4
  %v2_35c29 = call i32 @unknown_6ccec(i32 %v3_35c23, i32 %v3_35c1c)
  %v0_35c2e = call i32 @function_35d35()
  ret i32 %v0_35c2e

; uselistorder directives
  uselistorder i32 %v0_35c05, { 1, 0 }
}

define i32 @function_35c5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_35c5a:
  %v0_35c5a = load i32, i32* @ebp, align 4
  %v1_35c5a = add i32 %v0_35c5a, 1
  store i32 %v1_35c5a, i32* @ebp, align 4
  %v2_35c5f = call i32 @unknown_6ccec(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  %v0_35c64 = call i32 @function_35d35()
  ret i32 %v0_35c64
}

define i32 @function_35c76(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35c76:
  %eax.global-to-local = alloca i32, align 4
  %v3_35c76 = load i32, i32* @eax, align 8
  %v4_35c76 = trunc i32 %v3_35c76 to i8
  %v2_35c79 = and i8 %v4_35c76, 12
  %v8_35c79 = zext i8 %v2_35c79 to i32
  %v10_35c79 = and i32 %v3_35c76, -256
  %v11_35c79 = or i32 %v8_35c79, %v10_35c79
  store i32 %v11_35c79, i32* %eax.global-to-local, align 8
  %v1_35c7b = inttoptr i32 %v11_35c79 to i8*
  %v2_35c7b = load i8, i8* %v1_35c7b, align 4
  %v5_35c7b = add i8 %v2_35c7b, %v2_35c79
  store i8 %v5_35c7b, i8* %v1_35c7b, align 4
  %v0_35c7d = load i32, i32* %eax.global-to-local, align 8
  %v1_35c7d = inttoptr i32 %v0_35c7d to i8*
  %v2_35c7d = load i8, i8* %v1_35c7d, align 1
  %v4_35c7d = trunc i32 %v0_35c7d to i8
  %v5_35c7d = add i8 %v2_35c7d, %v4_35c7d
  store i8 %v5_35c7d, i8* %v1_35c7d, align 1
  %v0_35c7f = load i32, i32* @ebp, align 4
  %v1_35c7f = add i32 %v0_35c7f, -56
  %v2_35c7f = inttoptr i32 %v1_35c7f to i32*
  %v3_35c7f = load i32, i32* %v2_35c7f, align 4
  store i32 %v3_35c7f, i32* %eax.global-to-local, align 8
  %v1_35c86 = add i32 %v0_35c7f, -52
  %v2_35c86 = inttoptr i32 %v1_35c86 to i32*
  %v3_35c86 = load i32, i32* %v2_35c86, align 4
  store i32 %v3_35c86, i32* %eax.global-to-local, align 8
  %v1_35c8d = add i32 %v0_35c7f, -44
  %v2_35c8d = inttoptr i32 %v1_35c8d to i32*
  %v3_35c8d = load i32, i32* %v2_35c8d, align 4
  store i32 %v3_35c8d, i32* %eax.global-to-local, align 8
  %v2_35c93 = call i32 @unknown_6ccec(i32 %v3_35c8d, i32 %v3_35c86)
  store i32 %v2_35c93, i32* %eax.global-to-local, align 8
  %v0_35c98 = call i32 @function_35d35()
  store i32 %v0_35c98, i32* %eax.global-to-local, align 8
  ret i32 %v0_35c98
}

define i32 @function_35c87(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35c87:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35c9d() local_unnamed_addr {
dec_label_pc_35c9d:
  %v0_35cb3 = load i32, i32* @ebp, align 4
  %v1_35cba = add i32 %v0_35cb3, -52
  %v2_35cba = inttoptr i32 %v1_35cba to i32*
  %v3_35cba = load i32, i32* %v2_35cba, align 4
  %v1_35cc1 = add i32 %v0_35cb3, -44
  %v2_35cc1 = inttoptr i32 %v1_35cc1 to i32*
  %v3_35cc1 = load i32, i32* %v2_35cc1, align 4
  %v2_35cc7 = call i32 @unknown_6ccec(i32 %v3_35cc1, i32 %v3_35cba)
  %v0_35ccc = call i32 @function_35d35()
  ret i32 %v0_35ccc
}

define i32 @function_35cce() local_unnamed_addr {
dec_label_pc_35cce:
  %v0_35ce2 = load i32, i32* @ebp, align 4
  %v1_35ce9 = add i32 %v0_35ce2, -52
  %v2_35ce9 = inttoptr i32 %v1_35ce9 to i32*
  %v3_35ce9 = load i32, i32* %v2_35ce9, align 4
  %v1_35cf0 = add i32 %v0_35ce2, -44
  %v2_35cf0 = inttoptr i32 %v1_35cf0 to i32*
  %v3_35cf0 = load i32, i32* %v2_35cf0, align 4
  %v2_35cf6 = call i32 @unknown_6ccec(i32 %v3_35cf0, i32 %v3_35ce9)
  %v0_35cfb = call i32 @function_35d35()
  ret i32 %v0_35cfb

; uselistorder directives
  uselistorder i32 ()* @function_35d35, { 17, 16, 8, 9, 15, 7, 6, 5, 14, 13, 4, 3, 2, 12, 11, 1, 0, 10 }
  uselistorder i32 (i32, i32)* @unknown_6ccec, { 12, 11, 6, 7, 10, 5, 4, 3, 9, 8, 2, 1, 0 }
}

define i32 @function_35cfd() local_unnamed_addr {
dec_label_pc_35cfd:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_35d06(i32 %arg1) local_unnamed_addr {
dec_label_pc_35d06:
  %eax.global-to-local = alloca i32, align 4
  %v0_35d07 = load i32, i32* @eax, align 8
  %v1_35d07 = trunc i32 %v0_35d07 to i8
  %v2_35d07 = and i8 %v1_35d07, 24
  %v8_35d07 = zext i8 %v2_35d07 to i32
  %v10_35d07 = and i32 %v0_35d07, -256
  %v11_35d07 = or i32 %v8_35d07, %v10_35d07
  store i32 %v11_35d07, i32* %eax.global-to-local, align 8
  %v1_35d09 = inttoptr i32 %v11_35d07 to i8*
  %v2_35d09 = load i8, i8* %v1_35d09, align 8
  %v5_35d09 = add i8 %v2_35d09, %v2_35d07
  store i8 %v5_35d09, i8* %v1_35d09, align 8
  %v0_35d0b = load i32, i32* %eax.global-to-local, align 8
  %v1_35d0b = inttoptr i32 %v0_35d0b to i8*
  %v2_35d0b = load i8, i8* %v1_35d0b, align 1
  %v4_35d0b = trunc i32 %v0_35d0b to i8
  %v5_35d0b = add i8 %v2_35d0b, %v4_35d0b
  store i8 %v5_35d0b, i8* %v1_35d0b, align 1
  %v0_35d0d = load i32, i32* @ecx, align 8
  %v0_35d11 = load i32, i32* @edx, align 4
  %v0_35d15 = load i32, i32* @ebp, align 4
  %v1_35d15 = add i32 %v0_35d15, -56
  %v2_35d15 = inttoptr i32 %v1_35d15 to i32*
  %v3_35d15 = load i32, i32* %v2_35d15, align 4
  store i32 %v3_35d15, i32* %eax.global-to-local, align 8
  %v1_35d1c = add i32 %v0_35d15, -52
  %v2_35d1c = inttoptr i32 %v1_35d1c to i32*
  %v3_35d1c = load i32, i32* %v2_35d1c, align 4
  store i32 %v3_35d1c, i32* %eax.global-to-local, align 8
  %v1_35d23 = add i32 %v0_35d15, -48
  %v2_35d23 = inttoptr i32 %v1_35d23 to i32*
  %v3_35d23 = load i32, i32* %v2_35d23, align 4
  store i32 %v3_35d23, i32* %eax.global-to-local, align 8
  %v1_35d2a = add i32 %v0_35d15, -44
  %v2_35d2a = inttoptr i32 %v1_35d2a to i32*
  %v3_35d2a = load i32, i32* %v2_35d2a, align 4
  store i32 %v3_35d2a, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_35d11, 16777216
  %v6_35d30 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_35d0d, 16777216
  %v7_35d30 = sdiv i32 %sext1, 16777216
  %v8_35d30 = call i32 @unknown_6cd46(i32 %v3_35d2a, i32 %v3_35d23, i32 %v3_35d1c, i32 %v3_35d15, i32 %v6_35d30, i32 %v7_35d30)
  store i32 %v8_35d30, i32* %eax.global-to-local, align 8
  ret i32 %v8_35d30

; uselistorder directives
  uselistorder i32 %v0_35d15, { 1, 0, 2, 3 }
  uselistorder i8 24, { 1, 0 }
}

define i32 @function_35d35() local_unnamed_addr {
dec_label_pc_35d35:
  %v0_35d35 = load i32, i32* @ebp, align 4
  %v1_35d35 = add i32 %v0_35d35, -28
  %v2_35d35 = inttoptr i32 %v1_35d35 to i32*
  %v3_35d35 = load i32, i32* %v2_35d35, align 4
  %v1_35d38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_35d38 = xor i32 %v1_35d38, %v3_35d35
  store i1 false, i1* @cf, align 1
  %v3_35d38 = icmp eq i32 %v2_35d38, 0
  store i32 %v2_35d38, i32* @eax, align 8
  br i1 %v3_35d38, label %bb, label %dec_label_pc_35d41

bb:                                               ; preds = %dec_label_pc_35d35
  %v1_35d3f = call i32 @function_35d46()
  br label %dec_label_pc_35d41

dec_label_pc_35d41:                               ; preds = %bb, %dec_label_pc_35d35
  %v2_35d3f = phi i32 [ %v1_35d3f, %bb ], [ %v2_35d38, %dec_label_pc_35d35 ]
  ret i32 %v2_35d3f
}

define i32 @function_35d46() local_unnamed_addr {
dec_label_pc_35d46:
  %v0_35d46 = load i32, i32* @esp, align 4
  %v5_35d46 = icmp ugt i32 %v0_35d46, -109
  store i1 %v5_35d46, i1* @cf, align 1
  %v0_35d4d = load i32, i32* @eax, align 8
  ret i32 %v0_35d4d
}

define i32 @function_35d72(i32 %arg1) local_unnamed_addr {
dec_label_pc_35d72:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZSt13__copy_move_aILb0EPP14CBlockTemplateS2_ET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35da0:
  ret i32 %arg1
}

define i32 @function_35dde(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35dde:
  %v0_35dde = load i32, i32* @eax, align 8
  %v4_35dde = mul i32 %v0_35dde, 2
  store i32 %v4_35dde, i32* @eax, align 8
  %v0_35de0 = load i32, i32* @ebp, align 4
  %v1_35de0 = add i32 %v0_35de0, -12
  %v2_35de0 = inttoptr i32 %v1_35de0 to i32*
  %v3_35de0 = load i32, i32* %v2_35de0, align 4
  %v1_35de3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35de3 = icmp eq i32 %v1_35de3, %v3_35de0
  br i1 %v3_35de3, label %bb, label %dec_label_pc_35dec

bb:                                               ; preds = %dec_label_pc_35dde
  %v1_35dea = call i32 @function_35df1()
  br label %dec_label_pc_35dec

dec_label_pc_35dec:                               ; preds = %bb, %dec_label_pc_35dde
  %v2_35dea = phi i32 [ %v1_35dea, %bb ], [ %v4_35dde, %dec_label_pc_35dde ]
  ret i32 %v2_35dea

; uselistorder directives
  uselistorder i32 %v4_35dde, { 1, 0 }
}

define i32 @function_35df1() local_unnamed_addr {
dec_label_pc_35df1:
  %v0_35df2 = load i32, i32* @eax, align 8
  ret i32 %v0_35df2
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIS4_EEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35df4:
  %v2_35e1a = load i32, i32* %arg1, align 4
  %v2_35e26 = call i32 @unknown_6d3a0(i32 %v2_35e1a, i32 %arg2)
  ret i32 %v2_35e26
}

define i32 @function_35e32() local_unnamed_addr {
dec_label_pc_35e32:
  %eax.global-to-local = alloca i32, align 4
  %v2_35e32 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_35e32 = load i32, i32* %eax.global-to-local, align 8
  %v4_35e32 = trunc i32 %v3_35e32 to i8
  %v5_35e32 = add i8 %v4_35e32, %v2_35e32
  %v21_35e32 = inttoptr i32 %v3_35e32 to i8*
  store i8 %v5_35e32, i8* %v21_35e32, align 1
  %v22_35e32 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_35e32
}

define i32 @function_35e3b() local_unnamed_addr {
dec_label_pc_35e3b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35e3b = load i32, i32* %ecx.global-to-local, align 8
  %v1_35e3b = add i32 %v0_35e3b, -1
  store i32 %v1_35e3b, i32* %ecx.global-to-local, align 8
  %v0_35e3d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35e3d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35e3e:
  ret i32 %arg3
}

define i32 @function_35e58(i32 %arg1) local_unnamed_addr {
dec_label_pc_35e58:
  %eax.global-to-local = alloca i32, align 4
  %v0_35e58 = load i32, i32* @eax, align 8
  %v1_35e58 = trunc i32 %v0_35e58 to i8
  %v2_35e58 = load i1, i1* @cf, align 1
  %v3_35e58 = zext i1 %v2_35e58 to i8
  %v4_35e58 = add i8 %v3_35e58, %v1_35e58
  %v22_35e58 = zext i8 %v4_35e58 to i32
  %v24_35e58 = and i32 %v0_35e58, -256
  %v25_35e58 = or i32 %v22_35e58, %v24_35e58
  store i32 %v25_35e58, i32* %eax.global-to-local, align 8
  %v1_35e5a = inttoptr i32 %v25_35e58 to i8*
  %v2_35e5a = load i8, i8* %v1_35e5a, align 1
  %v5_35e5a = add i8 %v2_35e5a, %v4_35e58
  store i8 %v5_35e5a, i8* %v1_35e5a, align 1
  %v22_35e5a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_35e5a
}

define i32 @function_35e5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_35e5c:
  %v0_35e5c = load i32, i32* @eax, align 8
  %v1_35e5c = load i32, i32* @ebp, align 4
  %v2_35e5c = add i32 %v1_35e5c, -12
  %v3_35e5c = inttoptr i32 %v2_35e5c to i32*
  store i32 %v0_35e5c, i32* %v3_35e5c, align 4
  %v0_35e61 = load i32, i32* @ebp, align 4
  %v1_35e61 = add i32 %v0_35e61, -32
  %v2_35e61 = inttoptr i32 %v1_35e61 to i32*
  %v3_35e61 = load i32, i32* %v2_35e61, align 4
  %v1_35e67 = call i32 @unknown_6c78e(i32 %v3_35e61)
  ret i32 %v1_35e67
}

define i32 @function_35e78(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35e78:
  %v0_35e78 = load i32, i32* @ebp, align 4
  %v1_35e78 = add i32 %v0_35e78, -28
  %v2_35e78 = inttoptr i32 %v1_35e78 to i32*
  %v3_35e78 = load i32, i32* %v2_35e78, align 4
  %v1_35e7e = call i32 @unknown_6d426(i32 %v3_35e78)
  store i32 %v1_35e7e, i32* @eax, align 8
  %v0_35e83 = load i32, i32* @ebp, align 4
  %v1_35e83 = add i32 %v0_35e83, -12
  %v2_35e83 = inttoptr i32 %v1_35e83 to i32*
  %v3_35e83 = load i32, i32* %v2_35e83, align 4
  %v1_35e86 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35e86 = icmp eq i32 %v1_35e86, %v3_35e83
  br i1 %v3_35e86, label %bb, label %dec_label_pc_35e8f

bb:                                               ; preds = %dec_label_pc_35e78
  %v1_35e8d = call i32 @function_35e94()
  br label %dec_label_pc_35e8f

dec_label_pc_35e8f:                               ; preds = %bb, %dec_label_pc_35e78
  %v2_35e8d = phi i32 [ %v1_35e8d, %bb ], [ %v1_35e7e, %dec_label_pc_35e78 ]
  ret i32 %v2_35e8d
}

define i32 @function_35e94() local_unnamed_addr {
dec_label_pc_35e94:
  %v0_35e95 = load i32, i32* @eax, align 8
  ret i32 %v0_35e95
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitISt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl() local_unnamed_addr {
dec_label_pc_35e96:
  %eax.global-to-local = alloca i32, align 4
  %v2_35e97 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_35e97
}

define i32 @function_35e9b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35e9b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_35e9b = load i32, i32* @ecx, align 8
  %v0_35ea3 = load i32, i32* @ebp, align 4
  %v0_35ea4 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_35ea4 = or i32 %v0_35ea4, 137
  store i32 %v11_35ea4, i32* %eax.global-to-local, align 8
  %v1_35ea7 = add i32 %v4_35e9b, -1
  store i32 %v1_35ea7, i32* @ecx, align 8
  %v1_35ea9 = add i32 %v0_35ea3, 3
  store i32 %v1_35ea9, i32* @ebp, align 4
  %v1_35eaa = add i32 %v4_35e9b, -1587159996
  %v2_35eaa = inttoptr i32 %v1_35eaa to i8*
  %v3_35eaa = load i8, i8* %v2_35eaa, align 1
  %v5_35eaa = trunc i32 %v1_35ea7 to i8
  %v8_35eaa = add i8 %v3_35eaa, %v5_35eaa
  %v28_35eaa = icmp ult i8 %v8_35eaa, %v3_35eaa
  store i1 %v28_35eaa, i1* %cf.global-to-local, align 1
  store i8 %v8_35eaa, i8* %v2_35eaa, align 1
  %v0_35eb0 = load i32, i32* %eax.global-to-local, align 8
  %v1_35eb0 = trunc i32 %v0_35eb0 to i8
  %v2_35eb0 = load i1, i1* %cf.global-to-local, align 1
  %v3_35eb0 = zext i1 %v2_35eb0 to i8
  %v4_35eb0 = add i8 %v3_35eb0, %v1_35eb0
  %v19_35eb0 = icmp ule i8 %v4_35eb0, %v1_35eb0
  %v21_35eb0 = icmp eq i1 %v2_35eb0, %v19_35eb0
  store i1 %v21_35eb0, i1* %cf.global-to-local, align 1
  %v22_35eb0 = zext i8 %v4_35eb0 to i32
  %v24_35eb0 = and i32 %v0_35eb0, -256
  %v25_35eb0 = or i32 %v22_35eb0, %v24_35eb0
  store i32 %v25_35eb0, i32* %eax.global-to-local, align 8
  %v1_35eb2 = inttoptr i32 %v25_35eb0 to i8*
  %v2_35eb2 = load i8, i8* %v1_35eb2, align 1
  %v5_35eb2 = add i8 %v2_35eb2, %v4_35eb0
  store i8 %v5_35eb2, i8* %v1_35eb2, align 1
  %v0_35eb4 = load i32, i32* %eax.global-to-local, align 8
  %v1_35eb4 = load i32, i32* @ebp, align 4
  %v2_35eb4 = add i32 %v1_35eb4, -12
  %v3_35eb4 = inttoptr i32 %v2_35eb4 to i32*
  store i32 %v0_35eb4, i32* %v3_35eb4, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_35eb0, { 0, 2, 1 }
  uselistorder i8 %v1_35eb0, { 1, 0 }
  uselistorder i8 %v3_35eaa, { 1, 0 }
}

define i32 @function_35eb9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35eb9:
  %v0_35eb9 = load i32, i32* @ebp, align 4
  %v1_35eb9 = add i32 %v0_35eb9, -32
  %v2_35eb9 = inttoptr i32 %v1_35eb9 to i32*
  %v3_35eb9 = load i32, i32* %v2_35eb9, align 4
  %v1_35ebf = call i32 @unknown_6c81c(i32 %v3_35eb9)
  %v0_35ed0 = load i32, i32* @ebp, align 4
  %v1_35ed0 = add i32 %v0_35ed0, -28
  %v2_35ed0 = inttoptr i32 %v1_35ed0 to i32*
  %v3_35ed0 = load i32, i32* %v2_35ed0, align 4
  %v3_35ed6 = call i32 @unknown_6d4c8(i32 %v3_35ed0, i32 %v1_35ebf, i32 1)
  store i32 %v3_35ed6, i32* @eax, align 8
  %v0_35edb = load i32, i32* @ebp, align 4
  %v1_35edb = add i32 %v0_35edb, -12
  %v2_35edb = inttoptr i32 %v1_35edb to i32*
  %v3_35edb = load i32, i32* %v2_35edb, align 4
  %v1_35ede = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35ede = icmp eq i32 %v1_35ede, %v3_35edb
  br i1 %v3_35ede, label %bb, label %dec_label_pc_35ee7

bb:                                               ; preds = %dec_label_pc_35eb9
  %v1_35ee5 = call i32 @function_35eec()
  br label %dec_label_pc_35ee7

dec_label_pc_35ee7:                               ; preds = %bb, %dec_label_pc_35eb9
  %v2_35ee5 = phi i32 [ %v1_35ee5, %bb ], [ %v3_35ed6, %dec_label_pc_35eb9 ]
  ret i32 %v2_35ee5
}

define i32 @function_35eec() local_unnamed_addr {
dec_label_pc_35eec:
  %v0_35eed = load i32, i32* @eax, align 8
  ret i32 %v0_35eed
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKbEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35eee:
  %v2_35f14 = load i32, i32* %arg1, align 4
  %v2_35f20 = call i32 @unknown_6d56a(i32 %v2_35f14, i32 %arg2)
  ret i32 %v2_35f20
}

define i32 @function_35f30(i32 %arg1) local_unnamed_addr {
dec_label_pc_35f30:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35f35() local_unnamed_addr {
dec_label_pc_35f35:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35f35 = load i32, i32* %ecx.global-to-local, align 8
  %v1_35f35 = add i32 %v0_35f35, -1
  store i32 %v1_35f35, i32* %ecx.global-to-local, align 8
  %v0_35f37 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35f37
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKxEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35f38:
  %v2_35f5e = load i32, i32* %arg1, align 4
  %v2_35f6a = call i32 @unknown_6d5ea(i32 %v2_35f5e, i32 %arg2)
  store i32 %v2_35f6a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_35f7b

bb:                                               ; preds = %dec_label_pc_35f38
  %v1_35f79 = call i32 @function_35f80()
  br label %dec_label_pc_35f7b

dec_label_pc_35f7b:                               ; preds = %bb, %dec_label_pc_35f38
  %v2_35f79 = phi i32 [ %v1_35f79, %bb ], [ %v2_35f6a, %dec_label_pc_35f38 ]
  ret i32 %v2_35f79
}

define i32 @function_35f80() local_unnamed_addr {
dec_label_pc_35f80:
  %v0_35f81 = load i32, i32* @eax, align 8
  ret i32 %v0_35f81
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKdEEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35f82:
  ret i32 %arg3
}

define i32 @function_35f9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_35f9c:
  %eax.global-to-local = alloca i32, align 4
  %v0_35f9c = load i32, i32* @eax, align 8
  %v1_35f9c = trunc i32 %v0_35f9c to i8
  %v2_35f9c = load i1, i1* @cf, align 1
  %v3_35f9c = zext i1 %v2_35f9c to i8
  %v4_35f9c = add i8 %v3_35f9c, %v1_35f9c
  %v22_35f9c = zext i8 %v4_35f9c to i32
  %v24_35f9c = and i32 %v0_35f9c, -256
  %v25_35f9c = or i32 %v22_35f9c, %v24_35f9c
  store i32 %v25_35f9c, i32* %eax.global-to-local, align 8
  %v1_35f9e = inttoptr i32 %v25_35f9c to i8*
  %v2_35f9e = load i8, i8* %v1_35f9e, align 1
  %v5_35f9e = add i8 %v2_35f9e, %v4_35f9c
  store i8 %v5_35f9e, i8* %v1_35f9e, align 1
  %v0_35fa0 = load i32, i32* %eax.global-to-local, align 8
  %v1_35fa0 = load i32, i32* @ebp, align 4
  %v2_35fa0 = add i32 %v1_35fa0, -12
  %v3_35fa0 = inttoptr i32 %v2_35fa0 to i32*
  store i32 %v0_35fa0, i32* %v3_35fa0, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_35fa5 = load i32, i32* @ebp, align 4
  %v1_35fa5 = add i32 %v0_35fa5, -28
  %v2_35fa5 = inttoptr i32 %v1_35fa5 to i32*
  %v3_35fa5 = load i32, i32* %v2_35fa5, align 4
  store i32 %v3_35fa5, i32* %eax.global-to-local, align 8
  %v1_35fa8 = inttoptr i32 %v3_35fa5 to i32*
  %v2_35fa8 = load i32, i32* %v1_35fa8, align 4
  store i32 %v2_35fa8, i32* %eax.global-to-local, align 8
  %v1_35faa = add i32 %v0_35fa5, -32
  %v2_35faa = inttoptr i32 %v1_35faa to i32*
  %v3_35faa = load i32, i32* %v2_35faa, align 4
  %v2_35fb4 = call i32 @unknown_6d66a(i32 %v2_35fa8, i32 %v3_35faa)
  store i32 %v2_35fb4, i32* @eax, align 8
  %v0_35fb9 = load i32, i32* @ebp, align 4
  %v1_35fb9 = add i32 %v0_35fb9, -12
  %v2_35fb9 = inttoptr i32 %v1_35fb9 to i32*
  %v3_35fb9 = load i32, i32* %v2_35fb9, align 4
  %v1_35fbc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35fbc = icmp eq i32 %v1_35fbc, %v3_35fb9
  br i1 %v3_35fbc, label %bb, label %dec_label_pc_35fc5

bb:                                               ; preds = %dec_label_pc_35f9c
  %v1_35fc3 = call i32 @function_35fca()
  store i32 %v1_35fc3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_35fc5

dec_label_pc_35fc5:                               ; preds = %bb, %dec_label_pc_35f9c
  %v2_35fc3 = phi i32 [ %v1_35fc3, %bb ], [ %v2_35fb4, %dec_label_pc_35f9c ]
  ret i32 %v2_35fc3
}

define i32 @function_35fca() local_unnamed_addr {
dec_label_pc_35fca:
  %v0_35fcb = load i32, i32* @eax, align 8
  ret i32 %v0_35fcb
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitIKSsEEPSC_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35fcc:
  %v2_35ff2 = load i32, i32* %arg1, align 4
  %v2_35ffe = call i32 @unknown_6d6ea(i32 %v2_35ff2, i32 %arg2)
  store i32 %v2_35ffe, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3600f

bb:                                               ; preds = %dec_label_pc_35fcc
  %v1_3600d = call i32 @function_36014()
  br label %dec_label_pc_3600f

dec_label_pc_3600f:                               ; preds = %bb, %dec_label_pc_35fcc
  %v2_3600d = phi i32 [ %v1_3600d, %bb ], [ %v2_35ffe, %dec_label_pc_35fcc ]
  ret i32 %v2_3600d
}

define i32 @function_36014() local_unnamed_addr {
dec_label_pc_36014:
  %v0_36015 = load i32, i32* @eax, align 8
  ret i32 %v0_36015
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitISB_EEPSC_RKNS_17recursive_wrapperIT_EEl(i32 %arg1) local_unnamed_addr {
dec_label_pc_36016:
  ret i32 %arg1
}

define i32 @function_36020(i32 %arg1) local_unnamed_addr {
dec_label_pc_36020:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_36020 = load i32, i32* @ebp, align 4
  %v0_36024 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_36024 = or i32 %v0_36024, 137
  store i32 %v11_36024, i32* %eax.global-to-local, align 8
  %v0_36027 = load i32, i32* @ecx, align 8
  %v1_36027 = add i32 %v0_36027, 255
  %v1_36029 = add i32 %v0_36020, 4
  store i32 %v1_36029, i32* @ebp, align 4
  %v1_3602a = add i32 %v0_36027, -1587159996
  %v2_3602a = inttoptr i32 %v1_3602a to i8*
  %v3_3602a = load i8, i8* %v2_3602a, align 1
  %v5_3602a = trunc i32 %v1_36027 to i8
  %v8_3602a = add i8 %v3_3602a, %v5_3602a
  %v28_3602a = icmp ult i8 %v8_3602a, %v3_3602a
  store i1 %v28_3602a, i1* %cf.global-to-local, align 1
  store i8 %v8_3602a, i8* %v2_3602a, align 1
  %v0_36030 = load i32, i32* %eax.global-to-local, align 8
  %v1_36030 = trunc i32 %v0_36030 to i8
  %v2_36030 = load i1, i1* %cf.global-to-local, align 1
  %v3_36030 = zext i1 %v2_36030 to i8
  %v4_36030 = add i8 %v3_36030, %v1_36030
  %v19_36030 = icmp ule i8 %v4_36030, %v1_36030
  %v21_36030 = icmp eq i1 %v2_36030, %v19_36030
  store i1 %v21_36030, i1* %cf.global-to-local, align 1
  %v22_36030 = zext i8 %v4_36030 to i32
  %v24_36030 = and i32 %v0_36030, -256
  %v25_36030 = or i32 %v22_36030, %v24_36030
  store i32 %v25_36030, i32* %eax.global-to-local, align 8
  %v1_36032 = inttoptr i32 %v25_36030 to i8*
  %v2_36032 = load i8, i8* %v1_36032, align 1
  %v5_36032 = add i8 %v2_36032, %v4_36030
  store i8 %v5_36032, i8* %v1_36032, align 1
  %v0_36034 = load i32, i32* %eax.global-to-local, align 8
  %v1_36034 = load i32, i32* @ebp, align 4
  %v2_36034 = add i32 %v1_36034, -12
  %v3_36034 = inttoptr i32 %v2_36034 to i32*
  store i32 %v0_36034, i32* %v3_36034, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_36039 = load i32, i32* @ebp, align 4
  %v1_36039 = add i32 %v0_36039, -32
  %v2_36039 = inttoptr i32 %v1_36039 to i32*
  %v3_36039 = load i32, i32* %v2_36039, align 4
  store i32 %v3_36039, i32* %eax.global-to-local, align 8
  %v1_3603f = call i32 @unknown_6c966(i32 %v3_36039)
  store i32 %v1_3603f, i32* %eax.global-to-local, align 8
  ret i32 %v1_3603f

; uselistorder directives
  uselistorder i8 %v4_36030, { 0, 2, 1 }
  uselistorder i8 %v1_36030, { 1, 0 }
  uselistorder i8 %v3_3602a, { 1, 0 }
}

define i32 @function_3604d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3604d:
  %v0_36050 = load i32, i32* @ebp, align 4
  %v1_36050 = add i32 %v0_36050, -28
  %v2_36050 = inttoptr i32 %v1_36050 to i32*
  %v3_36050 = load i32, i32* %v2_36050, align 4
  %v1_36056 = call i32 @unknown_6d76a(i32 %v3_36050)
  store i32 %v1_36056, i32* @eax, align 8
  %v0_3605b = load i32, i32* @ebp, align 4
  %v1_3605b = add i32 %v0_3605b, -12
  %v2_3605b = inttoptr i32 %v1_3605b to i32*
  %v3_3605b = load i32, i32* %v2_3605b, align 4
  %v1_3605e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_3605e = icmp eq i32 %v1_3605e, %v3_3605b
  br i1 %v3_3605e, label %bb, label %dec_label_pc_36067

bb:                                               ; preds = %dec_label_pc_3604d
  %v1_36065 = call i32 @function_3606c()
  br label %dec_label_pc_36067

dec_label_pc_36067:                               ; preds = %bb, %dec_label_pc_3604d
  %v2_36065 = phi i32 [ %v1_36065, %bb ], [ %v1_36056, %dec_label_pc_3604d ]
  ret i32 %v2_36065
}

define i32 @function_3606c() local_unnamed_addr {
dec_label_pc_3606c:
  %v0_3606d = load i32, i32* @eax, align 8
  ret i32 %v0_3606d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitIS4_INS5_10Value_implIS8_EESaISH_EEEEPSC_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3606e:
  %v1_36097 = call i32 @unknown_6c9f4(i32 %arg2)
  %v3_360ae = call i32 @unknown_6d80c(i32 %arg1, i32 %v1_36097, i32 1)
  store i32 %v3_360ae, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_360bf

bb:                                               ; preds = %dec_label_pc_3606e
  %v1_360bd = call i32 @function_360c4()
  br label %dec_label_pc_360bf

dec_label_pc_360bf:                               ; preds = %bb, %dec_label_pc_3606e
  %v2_360bd = phi i32 [ %v1_360bd, %bb ], [ %v3_360ae, %dec_label_pc_3606e ]
  ret i32 %v2_360bd
}

define i32 @function_360c4() local_unnamed_addr {
dec_label_pc_360c4:
  %v0_360c5 = load i32, i32* @eax, align 8
  ret i32 %v0_360c5
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitIKbEEPSC_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_360c6:
  %v2_360ec = load i32, i32* %arg1, align 4
  %v2_360f8 = call i32 @unknown_6d8ae(i32 %v2_360ec, i32 %arg2)
  store i32 %v2_360f8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_36109

bb:                                               ; preds = %dec_label_pc_360c6
  %v1_36107 = call i32 @function_3610e()
  br label %dec_label_pc_36109

dec_label_pc_36109:                               ; preds = %bb, %dec_label_pc_360c6
  %v2_36107 = phi i32 [ %v1_36107, %bb ], [ %v2_360f8, %dec_label_pc_360c6 ]
  ret i32 %v2_36107
}

define i32 @function_3610e() local_unnamed_addr {
dec_label_pc_3610e:
  %v0_3610f = load i32, i32* @eax, align 8
  ret i32 %v0_3610f
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitIKxEEPSC_RT_i(i32* %arg1) local_unnamed_addr {
dec_label_pc_36110:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_36136 = load i32, i32* %arg1, align 4
  %v2_36142 = call i32 @unknown_6d92e(i32 %v2_36136, i32 %tmp6)
  store i32 %v2_36142, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_36153

bb:                                               ; preds = %dec_label_pc_36110
  %v1_36151 = call i32 @function_36158()
  br label %dec_label_pc_36153

dec_label_pc_36153:                               ; preds = %bb, %dec_label_pc_36110
  %v3_36151 = phi i32 [ %v1_36151, %bb ], [ %v2_36142, %dec_label_pc_36110 ]
  ret i32 %v3_36151
}

define i32 @function_36158() local_unnamed_addr {
dec_label_pc_36158:
  %v0_36159 = load i32, i32* @eax, align 8
  ret i32 %v0_36159
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitIKdEEPSC_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3615a:
  ret i32 %arg3
}

define i32 @function_361a1() local_unnamed_addr {
dec_label_pc_361a1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_361a1 = load i32, i32* %ecx.global-to-local, align 8
  %v1_361a1 = add i32 %v0_361a1, -1
  store i32 %v1_361a1, i32* %ecx.global-to-local, align 8
  %v0_361a3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_361a3
}

define i32 @_Z12SerReadWriteI11CDataStream9COutPointEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_361a4:
  %v4_361c2 = zext i8 %arg5 to i32
  ret i32 %v4_361c2
}

define i32 @function_361c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_361c6:
  %v0_361c6 = load i32, i32* @eax, align 8
  %v1_361c6 = trunc i32 %v0_361c6 to i8
  %v2_361c6 = load i32, i32* @ebp, align 4
  %v3_361c6 = add i32 %v2_361c6, -41
  %v4_361c6 = inttoptr i32 %v3_361c6 to i8*
  store i8 %v1_361c6, i8* %v4_361c6, align 1
  %v0_361c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_361cf = load i32, i32* @ebp, align 4
  %v2_361cf = add i32 %v1_361cf, -12
  %v3_361cf = inttoptr i32 %v2_361cf to i32*
  store i32 %v0_361c9, i32* %v3_361cf, align 4
  %v0_361d4 = load i32, i32* @ebp, align 4
  %v1_361d4 = add i32 %v0_361d4, -40
  %v2_361d4 = inttoptr i32 %v1_361d4 to i32*
  %v3_361d4 = load i32, i32* %v2_361d4, align 4
  ret i32 %v3_361d4
}

define i32 @function_361dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_361dd:
  %v0_361e3 = load i32, i32* @ebp, align 4
  %v1_361e3 = add i32 %v0_361e3, 1
  store i32 %v1_361e3, i32* @ebp, align 4
  %v1_361e9 = add i32 %v0_361e3, -27
  %v2_361e9 = inttoptr i32 %v1_361e9 to i32*
  %v3_361e9 = load i32, i32* %v2_361e9, align 4
  %v1_361ef = call i32 @unknown_6da2d(i32 %v3_361e9)
  store i32 0, i32* @eax, align 8
  %v0_361f9 = load i32, i32* @ebp, align 4
  %v1_361f9 = add i32 %v0_361f9, -12
  %v2_361f9 = inttoptr i32 %v1_361f9 to i32*
  %v3_361f9 = load i32, i32* %v2_361f9, align 4
  %v1_361fc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_361fc = icmp eq i32 %v1_361fc, %v3_361f9
  br i1 %v3_361fc, label %bb, label %dec_label_pc_36205

bb:                                               ; preds = %dec_label_pc_361dd
  %v1_36203 = call i32 @function_3620a()
  br label %dec_label_pc_36205

dec_label_pc_36205:                               ; preds = %bb, %dec_label_pc_361dd
  %v3_36203 = phi i32 [ %v1_36203, %bb ], [ 0, %dec_label_pc_361dd ]
  ret i32 %v3_36203
}

define i32 @function_3620a() local_unnamed_addr {
dec_label_pc_3620a:
  %v0_3620b = load i32, i32* @eax, align 8
  ret i32 %v0_3620b
}

define i32 @_Z12SerReadWriteI11CDataStream7CScriptEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3620c:
  %v4_3622a = zext i8 %arg5 to i32
  ret i32 %v4_3622a
}

define i32 @function_36235(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36235:
  %v2_36235 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_36235 = load i32, i32* @eax, align 8
  %v4_36235 = trunc i32 %v3_36235 to i8
  %v5_36235 = add i8 %v4_36235, %v2_36235
  %v21_36235 = inttoptr i32 %v3_36235 to i8*
  store i8 %v5_36235, i8* %v21_36235, align 1
  %v0_36237 = load i32, i32* @eax, align 8
  %v1_36237 = load i32, i32* @ebp, align 4
  %v2_36237 = add i32 %v1_36237, -12
  %v3_36237 = inttoptr i32 %v2_36237 to i32*
  store i32 %v0_36237, i32* %v3_36237, align 4
  %v0_3623c = load i32, i32* @ebp, align 4
  %v1_3623c = add i32 %v0_3623c, -40
  %v2_3623c = inttoptr i32 %v1_3623c to i32*
  %v3_3623c = load i32, i32* %v2_3623c, align 4
  %v1_36243 = add i32 %v0_3623c, -36
  %v2_36243 = inttoptr i32 %v1_36243 to i32*
  %v3_36243 = load i32, i32* %v2_36243, align 4
  %v1_3624a = add i32 %v0_3623c, -32
  %v2_3624a = inttoptr i32 %v1_3624a to i32*
  %v3_3624a = load i32, i32* %v2_3624a, align 4
  %v1_36251 = add i32 %v0_3623c, -28
  %v2_36251 = inttoptr i32 %v1_36251 to i32*
  %v3_36251 = load i32, i32* %v2_36251, align 4
  %v4_36257 = call i32 @unknown_596a3(i32 %v3_36251, i32 %v3_3624a, i32 %v3_36243, i32 %v3_3623c)
  store i32 0, i32* @eax, align 8
  %v0_36261 = load i32, i32* @ebp, align 4
  %v1_36261 = add i32 %v0_36261, -12
  %v2_36261 = inttoptr i32 %v1_36261 to i32*
  %v3_36261 = load i32, i32* %v2_36261, align 4
  %v1_36264 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36264 = icmp eq i32 %v1_36264, %v3_36261
  br i1 %v3_36264, label %bb, label %dec_label_pc_3626d

bb:                                               ; preds = %dec_label_pc_36235
  %v1_3626b = call i32 @function_36272()
  br label %dec_label_pc_3626d

dec_label_pc_3626d:                               ; preds = %bb, %dec_label_pc_36235
  %v2_3626b = phi i32 [ %v1_3626b, %bb ], [ 0, %dec_label_pc_36235 ]
  ret i32 %v2_3626b

; uselistorder directives
  uselistorder i32 %v0_3623c, { 1, 0, 2, 3 }
}

define i32 @function_36272() local_unnamed_addr {
dec_label_pc_36272:
  %v0_36273 = load i32, i32* @eax, align 8
  ret i32 %v0_36273
}

define i32 @_ZNSaIN11json_spirit10Value_implINS_13Config_vectorISsEEEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36274:
  %v2_3629e = call i32 @unknown_6db5a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_362af

bb:                                               ; preds = %dec_label_pc_36274
  %v1_362ad = call i32 @function_362b4()
  br label %dec_label_pc_362af

dec_label_pc_362af:                               ; preds = %bb, %dec_label_pc_36274
  %v2_362ad = phi i32 [ %v1_362ad, %bb ], [ 0, %dec_label_pc_36274 ]
  ret i32 %v2_362ad
}

define i32 @function_362b4() local_unnamed_addr {
dec_label_pc_362b4:
  %v0_362b5 = load i32, i32* @eax, align 8
  ret i32 %v0_362b5
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEPS8_EET0_T_SH_SG_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_362b6:
  %v0_362cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_362cf
}

define i32 @function_362d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_362d5:
  %v0_362d5 = load i32, i32* @eax, align 8
  %v1_362d5 = load i32, i32* @ebp, align 4
  %v2_362d5 = add i32 %v1_362d5, -12
  %v3_362d5 = inttoptr i32 %v2_362d5 to i32*
  store i32 %v0_362d5, i32* %v3_362d5, align 4
  %v0_362da = load i32, i32* @ebp, align 4
  %v1_362da = add i32 %v0_362da, -36
  %v2_362da = inttoptr i32 %v1_362da to i32*
  %v3_362da = load i32, i32* %v2_362da, align 4
  %v2_362dd = add i32 %v0_362da, -16
  %v3_362dd = inttoptr i32 %v2_362dd to i32*
  store i32 %v3_362da, i32* %v3_362dd, align 4
  %v0_362e0 = call i32 @function_36315()
  ret i32 %v0_362e0
}

define i32 @function_362e2() local_unnamed_addr {
dec_label_pc_362e2:
  %v0_362e2 = load i32, i32* @ebp, align 4
  %v1_362e2 = add i32 %v0_362e2, -28
  %v1_362e8 = call i32 @unknown_6dc5a(i32 %v1_362e2)
  %v0_362ef = load i32, i32* @ebp, align 4
  %v1_362ef = add i32 %v0_362ef, -16
  %v2_362ef = inttoptr i32 %v1_362ef to i32*
  %v3_362ef = load i32, i32* %v2_362ef, align 4
  %v1_362f5 = call i32 @unknown_64b3e(i32 %v3_362ef)
  ret i32 %v1_362f5
}

define i32 @function_36302(i32 %arg1) local_unnamed_addr {
dec_label_pc_36302:
  %eax.global-to-local = alloca i32, align 4
  %v0_36303 = load i32, i32* @eax, align 8
  %v2_36303 = add i32 %v0_36303, 253
  %v16_36303 = and i32 %v2_36303, 255
  %v18_36303 = and i32 %v0_36303, -256
  %v19_36303 = or i32 %v16_36303, %v18_36303
  store i32 %v19_36303, i32* %eax.global-to-local, align 8
  %v0_36305 = load i32, i32* @ebp, align 4
  %v1_36305 = add i32 %v0_36305, 76145733
  %v2_36305 = inttoptr i32 %v1_36305 to i8*
  %v3_36305 = load i8, i8* %v2_36305, align 1
  %v4_36305 = load i32, i32* @ecx, align 8
  %v5_36305 = trunc i32 %v4_36305 to i8
  %v6_36305 = add i8 %v5_36305, %v3_36305
  store i8 %v6_36305, i8* %v2_36305, align 1
  %v0_3630b = load i32, i32* %eax.global-to-local, align 8
  %v11_3630b = and i32 %v0_3630b, -24
  store i32 %v11_3630b, i32* %eax.global-to-local, align 8
  ret i32 %v11_3630b

; uselistorder directives
  uselistorder i32 %v11_3630b, { 1, 0 }
  uselistorder i32 %v0_36303, { 1, 0 }
  uselistorder i32 76145733, { 2, 1, 0 }
}

define i32 @function_36315() local_unnamed_addr {
dec_label_pc_36315:
  %v0_36315 = load i32, i32* @ebp, align 4
  %v1_36315 = add i32 %v0_36315, -32
  %v1_3631c = add i32 %v0_36315, -28
  %v2_36322 = call i32 @unknown_6dbcc(i32 %v1_3631c, i32 %v1_36315)
  %v4_36327 = trunc i32 %v2_36322 to i8
  %v5_36327 = icmp eq i8 %v4_36327, 0
  %v1_36329 = icmp eq i1 %v5_36327, false
  br i1 %v1_36329, label %bb, label %dec_label_pc_3632b

bb:                                               ; preds = %dec_label_pc_36315
  %v2_36329 = call i32 @function_362e2()
  br label %dec_label_pc_3632b

dec_label_pc_3632b:                               ; preds = %bb, %dec_label_pc_36315
  %v0_3632b = load i32, i32* @ebp, align 4
  %v1_3632b = add i32 %v0_3632b, -16
  %v2_3632b = inttoptr i32 %v1_3632b to i32*
  %v3_3632b = load i32, i32* %v2_3632b, align 4
  ret i32 %v3_3632b
}

define i32 @function_3632f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3632f:
  %v0_36331 = load i32, i32* @edx, align 4
  %v1_36331 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36331 = icmp eq i32 %v1_36331, %v0_36331
  br i1 %v3_36331, label %bb, label %dec_label_pc_3633a

bb:                                               ; preds = %dec_label_pc_3632f
  %v1_36338 = call i32 @function_36371()
  store i32 %v1_36338, i32* @eax, align 8
  br label %dec_label_pc_3633a

dec_label_pc_3633a:                               ; preds = %bb, %dec_label_pc_3632f
  %v0_3633a = call i32 @function_3636c()
  ret i32 %v0_3633a
}

define i32 @function_3633d() local_unnamed_addr {
dec_label_pc_3633d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3633d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3633d
}

define i32 @function_3634f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3634f:
  %v0_3634f = load i32, i32* @eax, align 8
  %v11_3634f = and i32 %v0_3634f, -24
  ret i32 %v11_3634f
}

define i32 @function_3636c() local_unnamed_addr {
dec_label_pc_3636c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36371() local_unnamed_addr {
dec_label_pc_36371:
  %v0_36376 = load i32, i32* @eax, align 8
  ret i32 %v0_36376
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_() local_unnamed_addr {
dec_label_pc_36378:
  %eax.global-to-local = alloca i32, align 4
  %v5_36378 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_36378
}

define i32 @function_3637a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3637a:
  %v0_3637a = load i32, i32* @eax, align 8
  ret i32 %v0_3637a
}

define i32 @function_3637c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3637c:
  %v0_3637c = load i32, i32* @ebx, align 4
  %v0_36380 = load i32, i32* @ebp, align 4
  %v1_36380 = add i32 %v0_36380, 8
  %v2_36380 = inttoptr i32 %v1_36380 to i32*
  %v3_36380 = load i32, i32* %v2_36380, align 4
  %v2_36383 = add i32 %v0_36380, -92
  %v3_36383 = inttoptr i32 %v2_36383 to i32*
  store i32 %v3_36380, i32* %v3_36383, align 4
  %v0_36386 = load i32, i32* @ebp, align 4
  %v1_36386 = add i32 %v0_36386, 12
  %v2_36386 = inttoptr i32 %v1_36386 to i32*
  %v3_36386 = load i32, i32* %v2_36386, align 4
  %v2_36389 = add i32 %v0_36386, -96
  %v3_36389 = inttoptr i32 %v2_36389 to i32*
  store i32 %v3_36386, i32* %v3_36389, align 4
  %v0_3638c = load i32, i32* @ebp, align 4
  %v1_3638c = add i32 %v0_3638c, 16
  %v2_3638c = inttoptr i32 %v1_3638c to i32*
  %v3_3638c = load i32, i32* %v2_3638c, align 4
  %v2_3638f = add i32 %v0_3638c, -100
  %v3_3638f = inttoptr i32 %v2_3638f to i32*
  store i32 %v3_3638c, i32* %v3_3638f, align 4
  %v0_36392 = load i32, i32* @ebp, align 4
  %v1_36392 = add i32 %v0_36392, 20
  %v2_36392 = inttoptr i32 %v1_36392 to i32*
  %v3_36392 = load i32, i32* %v2_36392, align 4
  %v2_36395 = add i32 %v0_36392, -104
  %v3_36395 = inttoptr i32 %v2_36395 to i32*
  store i32 %v3_36392, i32* %v3_36395, align 4
  %v0_36398 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3639e = load i32, i32* @ebp, align 4
  %v2_3639e = add i32 %v1_3639e, -12
  %v3_3639e = inttoptr i32 %v2_3639e to i32*
  store i32 %v0_36398, i32* %v3_3639e, align 4
  store i32 0, i32* @eax, align 8
  %v0_363a3 = load i32, i32* @ebp, align 4
  %v1_363a3 = add i32 %v0_363a3, -100
  %v2_363a3 = inttoptr i32 %v1_363a3 to i32*
  %v3_363a3 = load i32, i32* %v2_363a3, align 4
  %v10_363a3 = icmp eq i32 %v3_363a3, 0
  br i1 %v10_363a3, label %bb, label %dec_label_pc_363ad

bb:                                               ; preds = %dec_label_pc_3637c
  %v2_363a7 = call i32 @function_367db(i32 %v0_3637c)
  %v0_363ad.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_363ad

dec_label_pc_363ad:                               ; preds = %bb, %dec_label_pc_3637c
  %v1_363c4 = phi i32 [ %v0_363ad.pre, %bb ], [ %v0_363a3, %dec_label_pc_3637c ]
  %v1_363ad = add i32 %v1_363c4, -92
  %v2_363ad = inttoptr i32 %v1_363ad to i32*
  %v3_363ad = load i32, i32* %v2_363ad, align 4
  %v1_363b0 = add i32 %v3_363ad, 8
  %v2_363b0 = inttoptr i32 %v1_363b0 to i32*
  %v3_363b0 = load i32, i32* %v2_363b0, align 4
  %v1_363b8 = add i32 %v3_363ad, 4
  %v2_363b8 = inttoptr i32 %v1_363b8 to i32*
  %v3_363b8 = load i32, i32* %v2_363b8, align 4
  %v2_363bd = sub i32 %v3_363b0, %v3_363b8
  store i32 %v2_363bd, i32* @ecx, align 8
  %v2_363c1 = sdiv i32 %v2_363bd, 32
  %v2_363c4 = add i32 %v1_363c4, -100
  %v3_363c4 = inttoptr i32 %v2_363c4 to i32*
  %v4_363c4 = load i32, i32* %v3_363c4, align 4
  %v10_363c4 = icmp ult i32 %v2_363c1, %v4_363c4
  br i1 %v10_363c4, label %bb6, label %dec_label_pc_363cd

bb6:                                              ; preds = %dec_label_pc_363ad
  %v1_363c7 = call i32 @function_365a0()
  %v0_363cd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_363cd

dec_label_pc_363cd:                               ; preds = %bb6, %dec_label_pc_363ad
  %v0_363cd = phi i32 [ %v0_363cd.pre, %bb6 ], [ %v1_363c4, %dec_label_pc_363ad ]
  %v1_363cd = add i32 %v0_363cd, -104
  %v2_363cd = inttoptr i32 %v1_363cd to i32*
  %v3_363cd = load i32, i32* %v2_363cd, align 4
  %v1_363d4 = add i32 %v0_363cd, -76
  %v2_363da = call i32 @unknown_4919a(i32 %v1_363d4, i32 %v3_363cd)
  %v0_363df = load i32, i32* @ebp, align 4
  %v1_363df = add i32 %v0_363df, -44
  %v1_363e2 = add i32 %v0_363df, -92
  %v2_363e2 = inttoptr i32 %v1_363e2 to i32*
  %v3_363e2 = load i32, i32* %v2_363e2, align 4
  %v2_363ec = call i32 @unknown_616a4(i32 %v1_363df, i32 %v3_363e2)
  ret i32 %v2_363ec

; uselistorder directives
  uselistorder i32 %v0_363cd, { 1, 0 }
}

define i32 @function_363f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_363f4:
  %v0_363f4 = load i32, i32* @ebp, align 4
  %v1_363f4 = add i32 %v0_363f4, -96
  %v1_363fb = add i32 %v0_363f4, -44
  %v2_36401 = call i32 @unknown_6dd4b(i32 %v1_363fb, i32 %v1_363f4)
  %v1_36406 = load i32, i32* @ebp, align 4
  %v2_36406 = add i32 %v1_36406, -32
  %v3_36406 = inttoptr i32 %v2_36406 to i32*
  store i32 %v2_36401, i32* %v3_36406, align 4
  %v0_36409 = load i32, i32* @ebp, align 4
  %v1_36409 = add i32 %v0_36409, -92
  %v2_36409 = inttoptr i32 %v1_36409 to i32*
  %v3_36409 = load i32, i32* %v2_36409, align 4
  %v1_3640c = add i32 %v3_36409, 4
  %v2_3640c = inttoptr i32 %v1_3640c to i32*
  %v3_3640c = load i32, i32* %v2_3640c, align 4
  %v2_3640f = add i32 %v0_36409, -28
  %v3_3640f = inttoptr i32 %v2_3640f to i32*
  store i32 %v3_3640c, i32* %v3_3640f, align 4
  %v0_36412 = load i32, i32* @ebp, align 4
  %v1_36412 = add i32 %v0_36412, -32
  %v2_36412 = inttoptr i32 %v1_36412 to i32*
  %v3_36412 = load i32, i32* %v2_36412, align 4
  %v2_36415 = add i32 %v0_36412, -100
  %v3_36415 = inttoptr i32 %v2_36415 to i32*
  %v4_36415 = load i32, i32* %v3_36415, align 4
  %tmp3 = icmp ugt i32 %v3_36412, %v4_36415
  br i1 %tmp3, label %dec_label_pc_3641e, label %bb

bb:                                               ; preds = %dec_label_pc_363f4
  %v3_36418 = call i32 @function_364d5()
  %v0_3641e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3641e

dec_label_pc_3641e:                               ; preds = %dec_label_pc_363f4, %bb
  %v0_3641e = phi i32 [ %v0_3641e.pre, %bb ], [ %v0_36412, %dec_label_pc_363f4 ]
  %v1_3641e = add i32 %v0_3641e, -92
  %v2_3641e = inttoptr i32 %v1_3641e to i32*
  %v3_3641e = load i32, i32* %v2_3641e, align 4
  %v1_36424 = call i32 @unknown_5296c(i32 %v3_3641e)
  ret i32 %v1_36424

; uselistorder directives
  uselistorder label %dec_label_pc_3641e, { 1, 0 }
}

define i32 @function_36439(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36439:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3643a = load i32, i32* @eax, align 8
  %v2_3643a = add i32 %v0_3643a, 139
  %v16_3643a = urem i32 %v2_3643a, 256
  %v18_3643a = and i32 %v0_3643a, -256
  %v19_3643a = or i32 %v16_3643a, %v18_3643a
  %v0_3643e = load i32, i32* @esi, align 4
  %tmp6 = mul i32 %v0_3643e, -32
  %v2_36443 = add i32 %tmp6, %arg1
  store i32 %v2_36443, i32* %ebx.global-to-local, align 4
  %v0_36449 = load i32, i32* @ecx, align 8
  %v0_3644d = load i32, i32* @edx, align 4
  %v4_36454 = call i32 @unknown_6dda5(i32 %v2_36443, i32 %v0_3644d, i32 %v0_36449, i32 %v19_3643a)
  %v0_36459 = load i32, i32* @ebp, align 4
  %v1_36459 = add i32 %v0_36459, -92
  %v2_36459 = inttoptr i32 %v1_36459 to i32*
  %v3_36459 = load i32, i32* %v2_36459, align 4
  %v1_3645c = add i32 %v3_36459, 4
  %v2_3645c = inttoptr i32 %v1_3645c to i32*
  %v3_3645c = load i32, i32* %v2_3645c, align 4
  %v1_3645f = add i32 %v0_36459, -100
  %v2_3645f = inttoptr i32 %v1_3645f to i32*
  %v3_3645f = load i32, i32* %v2_3645f, align 4
  %v2_36462 = mul i32 %v3_3645f, 32
  %v2_36465 = add i32 %v2_36462, %v3_3645c
  %v3_36467 = load i32, i32* %v2_36459, align 4
  %v2_3646a = add i32 %v3_36467, 4
  %v3_3646a = inttoptr i32 %v2_3646a to i32*
  store i32 %v2_36465, i32* %v3_3646a, align 4
  %v0_3646d = load i32, i32* @ebp, align 4
  %v1_3646d = add i32 %v0_3646d, -100
  %v2_3646d = inttoptr i32 %v1_3646d to i32*
  %v3_3646d = load i32, i32* %v2_3646d, align 4
  %v2_36470 = mul i32 %v3_3646d, 32
  %v1_36473 = sub i32 0, %v2_36470
  store i32 %v1_36473, i32* %ebx.global-to-local, align 4
  %v2_36477 = add i32 %v0_3646d, -28
  %v3_36477 = inttoptr i32 %v2_36477 to i32*
  %v4_36477 = load i32, i32* %v3_36477, align 4
  %v5_36477 = sub i32 %v4_36477, %v2_36470
  store i32 %v5_36477, i32* %ebx.global-to-local, align 4
  %v1_3647a = add i32 %v0_3646d, -96
  %v1_36480 = call i32 @unknown_5c75a(i32 %v1_3647a)
  %v1_36485 = inttoptr i32 %v1_36480 to i32*
  %v2_36485 = load i32, i32* %v1_36485, align 4
  %v0_36487 = load i32, i32* @ebp, align 4
  %v1_36487 = add i32 %v0_36487, -28
  %v2_36487 = inttoptr i32 %v1_36487 to i32*
  %v3_36487 = load i32, i32* %v2_36487, align 4
  %v0_3648e = load i32, i32* %ebx.global-to-local, align 4
  %v3_36495 = call i32 @unknown_6de01(i32 %v2_36485, i32 %v0_3648e, i32 %v3_36487)
  %v0_3649a = load i32, i32* @ebp, align 4
  %v1_3649a = add i32 %v0_3649a, -96
  %v1_364a0 = call i32 @unknown_5c75a(i32 %v1_3649a)
  %v1_364a5 = inttoptr i32 %v1_364a0 to i32*
  %v2_364a5 = load i32, i32* %v1_364a5, align 4
  %v0_364a7 = load i32, i32* @ebp, align 4
  %v1_364a7 = add i32 %v0_364a7, -100
  %v2_364a7 = inttoptr i32 %v1_364a7 to i32*
  %v3_364a7 = load i32, i32* %v2_364a7, align 4
  %v2_364aa = mul i32 %v3_364a7, 32
  %v3_364ad = add i32 %v2_364aa, %v2_364a5
  store i32 %v3_364ad, i32* %ebx.global-to-local, align 4
  %v1_364b0 = add i32 %v0_364a7, -96
  %v1_364b6 = call i32 @unknown_5c75a(i32 %v1_364b0)
  %v1_364bb = inttoptr i32 %v1_364b6 to i32*
  %v2_364bb = load i32, i32* %v1_364bb, align 4
  %v0_364bd = load i32, i32* @ebp, align 4
  %v1_364bd = add i32 %v0_364bd, -76
  %v0_364c4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_364cb = call i32 @unknown_6de67(i32 %v2_364bb, i32 %v0_364c4, i32 %v1_364bd)
  %v0_364d0 = call i32 @function_36590()
  ret i32 %v0_364d0

; uselistorder directives
  uselistorder i32 %v2_36443, { 1, 0 }
  uselistorder i32 %v0_3643a, { 1, 0 }
}

define i32 @function_364d5() local_unnamed_addr {
dec_label_pc_364d5:
  %v0_364d5 = load i32, i32* @ebp, align 4
  %v1_364d5 = add i32 %v0_364d5, -92
  %v2_364d5 = inttoptr i32 %v1_364d5 to i32*
  %v3_364d5 = load i32, i32* %v2_364d5, align 4
  %v1_364db = call i32 @unknown_5296c(i32 %v3_364d5)
  %v0_364e0 = load i32, i32* @ebp, align 4
  %v1_364f2 = add i32 %v0_364e0, -76
  ret i32 %v1_364f2
}

define i32 @function_364fd(i32 %arg1) local_unnamed_addr {
dec_label_pc_364fd:
  %v0_364fd = load i32, i32* @edx, align 4
  %v1_36500 = call i32 @unknown_6decd(i32 %v0_364fd)
  %v0_36505 = load i32, i32* @ebp, align 4
  %v1_36505 = add i32 %v0_36505, -92
  %v2_36505 = inttoptr i32 %v1_36505 to i32*
  %v3_36505 = load i32, i32* %v2_36505, align 4
  %v1_36508 = add i32 %v3_36505, 4
  %v2_36508 = inttoptr i32 %v1_36508 to i32*
  %v3_36508 = load i32, i32* %v2_36508, align 4
  %v1_3650b = add i32 %v0_36505, -32
  %v2_3650b = inttoptr i32 %v1_3650b to i32*
  %v3_3650b = load i32, i32* %v2_3650b, align 4
  %v1_3650e = add i32 %v0_36505, -100
  %v2_3650e = inttoptr i32 %v1_3650e to i32*
  %v3_3650e = load i32, i32* %v2_3650e, align 4
  store i32 %v3_3650e, i32* @ecx, align 8
  %v2_36513 = sub i32 %v3_3650e, %v3_3650b
  store i32 %v2_36513, i32* @ebx, align 4
  %v2_36517 = mul i32 %v2_36513, 32
  %v2_3651a = add i32 %v2_36517, %v3_36508
  store i32 %v2_3651a, i32* @edx, align 4
  %v3_3651c = load i32, i32* %v2_36505, align 4
  %v2_3651f = add i32 %v3_3651c, 4
  %v3_3651f = inttoptr i32 %v2_3651f to i32*
  store i32 %v2_3651a, i32* %v3_3651f, align 4
  %v0_36522 = load i32, i32* @ebp, align 4
  %v1_36522 = add i32 %v0_36522, -92
  %v2_36522 = inttoptr i32 %v1_36522 to i32*
  %v3_36522 = load i32, i32* %v2_36522, align 4
  ret i32 %v3_36522

; uselistorder directives
  uselistorder i32 %v0_36505, { 1, 0, 2 }
}

define i32 @function_3652a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3652a:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3652a = load i32, i32* @ecx, align 8
  store i32 %v0_3652a, i32* %eax.global-to-local, align 8
  %v1_3652c = add i32 %v0_3652a, -1538946109
  %v2_3652c = inttoptr i32 %v1_3652c to i8*
  %v3_3652c = load i8, i8* %v2_3652c, align 1
  %v5_3652c = trunc i32 %v0_3652a to i8
  %v6_3652c = add i8 %v3_3652c, %v5_3652c
  store i8 %v6_3652c, i8* %v2_3652c, align 1
  %v0_36532 = load i32, i32* %eax.global-to-local, align 8
  %v1_36532 = add i32 %v0_36532, 4
  %v2_36532 = inttoptr i32 %v1_36532 to i32*
  %v3_36532 = load i32, i32* %v2_36532, align 4
  store i32 %v3_36532, i32* %esi.global-to-local, align 4
  %v0_36535 = load i32, i32* @ebp, align 4
  %v1_36535 = add i32 %v0_36535, -96
  store i32 %v1_36535, i32* %eax.global-to-local, align 8
  %v1_3653b = call i32 @unknown_5c75a(i32 %v1_36535)
  store i32 %v1_3653b, i32* %eax.global-to-local, align 8
  %v1_36540 = inttoptr i32 %v1_3653b to i32*
  %v2_36540 = load i32, i32* %v1_36540, align 4
  store i32 %v2_36540, i32* %eax.global-to-local, align 8
  %v0_36542 = load i32, i32* @ebx, align 4
  %v0_36546 = load i32, i32* %esi.global-to-local, align 4
  %v0_3654a = load i32, i32* @ebp, align 4
  %v1_3654a = add i32 %v0_3654a, -28
  %v2_3654a = inttoptr i32 %v1_3654a to i32*
  %v3_3654a = load i32, i32* %v2_3654a, align 4
  %v4_36554 = call i32 @unknown_6dda5(i32 %v2_36540, i32 %v3_3654a, i32 %v0_36546, i32 %v0_36542)
  store i32 %v4_36554, i32* %eax.global-to-local, align 8
  %v0_36559 = load i32, i32* @ebp, align 4
  %v1_36559 = add i32 %v0_36559, -92
  %v2_36559 = inttoptr i32 %v1_36559 to i32*
  %v3_36559 = load i32, i32* %v2_36559, align 4
  store i32 %v3_36559, i32* %eax.global-to-local, align 8
  %v1_3655c = add i32 %v3_36559, 4
  %v2_3655c = inttoptr i32 %v1_3655c to i32*
  %v3_3655c = load i32, i32* %v2_3655c, align 4
  store i32 %v3_3655c, i32* %eax.global-to-local, align 8
  %v1_3655f = add i32 %v0_36559, -32
  %v2_3655f = inttoptr i32 %v1_3655f to i32*
  %v3_3655f = load i32, i32* %v2_3655f, align 4
  %v2_36562 = mul i32 %v3_3655f, 32
  %v2_36565 = add i32 %v2_36562, %v3_3655c
  %v3_36567 = load i32, i32* %v2_36559, align 4
  %v2_3656a = add i32 %v3_36567, 4
  %v3_3656a = inttoptr i32 %v2_3656a to i32*
  store i32 %v2_36565, i32* %v3_3656a, align 4
  %v0_3656d = load i32, i32* @ebp, align 4
  %v1_3656d = add i32 %v0_3656d, -96
  store i32 %v1_3656d, i32* %eax.global-to-local, align 8
  %v1_36573 = call i32 @unknown_5c75a(i32 %v1_3656d)
  store i32 %v1_36573, i32* %eax.global-to-local, align 8
  %v1_36578 = inttoptr i32 %v1_36573 to i32*
  %v2_36578 = load i32, i32* %v1_36578, align 4
  store i32 %v2_36578, i32* %eax.global-to-local, align 8
  %v0_3657a = load i32, i32* @ebp, align 4
  %v1_3657a = add i32 %v0_3657a, -76
  %v1_36581 = add i32 %v0_3657a, -28
  %v2_36581 = inttoptr i32 %v1_36581 to i32*
  %v3_36581 = load i32, i32* %v2_36581, align 4
  %v3_3658b = call i32 @unknown_6de67(i32 %v2_36578, i32 %v3_36581, i32 %v1_3657a)
  store i32 %v3_3658b, i32* %eax.global-to-local, align 8
  ret i32 %v3_3658b

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_6de67, { 1, 0 }
}

define i32 @function_36556(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36556:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36590() local_unnamed_addr {
dec_label_pc_36590:
  %v0_36590 = load i32, i32* @ebp, align 4
  %v1_36590 = add i32 %v0_36590, -76
  %v1_36596 = call i32 @unknown_49132(i32 %v1_36590)
  store i32 %v1_36596, i32* @eax, align 8
  %v1_3659b = call i32 @function_367db(i32 %v1_36590)
  ret i32 %v1_3659b
}

define i32 @function_3659f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3659f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_365a0() local_unnamed_addr {
dec_label_pc_365a0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_365a8 = load i32, i32* @ebp, align 4
  %v1_365a8 = add i32 %v0_365a8, -100
  %v2_365a8 = inttoptr i32 %v1_365a8 to i32*
  %v3_365a8 = load i32, i32* %v2_365a8, align 4
  %v1_365af = add i32 %v0_365a8, -92
  %v2_365af = inttoptr i32 %v1_365af to i32*
  %v3_365af = load i32, i32* %v2_365af, align 4
  %v4_365b5 = call i32 @unknown_6df22(i32 %v3_365af, i32 %v3_365a8, i32 ptrtoint ([23 x i8]* @global_var_7154.2867 to i32))
  %v1_365ba = load i32, i32* @ebp, align 4
  %v2_365ba = add i32 %v1_365ba, -24
  %v3_365ba = inttoptr i32 %v2_365ba to i32*
  store i32 %v4_365b5, i32* %v3_365ba, align 4
  %v0_365bd = load i32, i32* @ebp, align 4
  %v1_365bd = add i32 %v0_365bd, -40
  %v1_365c0 = add i32 %v0_365bd, -92
  %v2_365c0 = inttoptr i32 %v1_365c0 to i32*
  %v3_365c0 = load i32, i32* %v2_365c0, align 4
  %v2_365ca = call i32 @unknown_6165c(i32 %v1_365bd, i32 %v3_365c0)
  %v0_365d2 = load i32, i32* @ebp, align 4
  %v1_365d2 = add i32 %v0_365d2, -40
  %v1_365d9 = add i32 %v0_365d2, -96
  store i32 %v1_365d9, i32* %stack_var_-4, align 4
  %v2_365df = call i32 @unknown_6dd4b(i32 %v1_365d9, i32 %v1_365d2)
  %v1_365e4 = load i32, i32* @ebp, align 4
  %v2_365e4 = add i32 %v1_365e4, -20
  %v3_365e4 = inttoptr i32 %v2_365e4 to i32*
  store i32 %v2_365df, i32* %v3_365e4, align 4
  %v0_365e7 = load i32, i32* @ebp, align 4
  %v1_365e7 = add i32 %v0_365e7, -92
  %v2_365e7 = inttoptr i32 %v1_365e7 to i32*
  %v3_365e7 = load i32, i32* %v2_365e7, align 4
  %v1_365ea = add i32 %v0_365e7, -24
  %v2_365ea = inttoptr i32 %v1_365ea to i32*
  %v3_365ea = load i32, i32* %v2_365ea, align 4
  store i32 %v3_365e7, i32* %stack_var_-4, align 4
  %v2_365f4 = call i32 @unknown_6dff4(i32 %v3_365e7, i32 %v3_365ea)
  %v1_365f9 = load i32, i32* @ebp, align 4
  %v2_365f9 = add i32 %v1_365f9, -16
  %v3_365f9 = inttoptr i32 %v2_365f9 to i32*
  store i32 %v2_365f4, i32* %v3_365f9, align 4
  %v0_365fc = load i32, i32* @ebp, align 4
  %v1_365fc = add i32 %v0_365fc, -16
  %v2_365fc = inttoptr i32 %v1_365fc to i32*
  %v3_365fc = load i32, i32* %v2_365fc, align 4
  %v2_365ff = add i32 %v0_365fc, -36
  %v3_365ff = inttoptr i32 %v2_365ff to i32*
  store i32 %v3_365fc, i32* %v3_365ff, align 4
  %v0_36602 = load i32, i32* @ebp, align 4
  %v1_36602 = add i32 %v0_36602, -92
  %v2_36602 = inttoptr i32 %v1_36602 to i32*
  %v3_36602 = load i32, i32* %v2_36602, align 4
  store i32 %v3_36602, i32* %stack_var_-4, align 4
  %v1_36608 = call i32 @unknown_5296c(i32 %v3_36602)
  %v0_3660d = load i32, i32* @ebp, align 4
  %v1_3660d = add i32 %v0_3660d, -20
  %v2_3660d = inttoptr i32 %v1_3660d to i32*
  %v3_3660d = load i32, i32* %v2_3660d, align 4
  %v2_36610 = mul i32 %v3_3660d, 32
  %v2_36613 = add i32 %v0_3660d, -16
  %v3_36613 = inttoptr i32 %v2_36613 to i32*
  %v4_36613 = load i32, i32* %v3_36613, align 4
  %v5_36613 = add i32 %v4_36613, %v2_36610
  store i32 %v5_36613, i32* %stack_var_-4, align 4
  %v1_3662b = call i32 @unknown_6decd(i32 %v5_36613)
  %v0_36630 = load i32, i32* @ebp, align 4
  %v1_36630 = add i32 %v0_36630, -36
  %v2_36630 = inttoptr i32 %v1_36630 to i32*
  store i32 0, i32* %v2_36630, align 4
  %v0_36637 = load i32, i32* @ebp, align 4
  %v1_36637 = add i32 %v0_36637, -92
  %v2_36637 = inttoptr i32 %v1_36637 to i32*
  %v3_36637 = load i32, i32* %v2_36637, align 4
  store i32 %v3_36637, i32* %stack_var_-4, align 4
  %v1_3663d = call i32 @unknown_5296c(i32 %v3_36637)
  store i32 %v1_3663d, i32* %ebx.global-to-local, align 4
  %v0_36644 = load i32, i32* @ebp, align 4
  %v1_36644 = add i32 %v0_36644, -96
  store i32 %v1_36644, i32* %stack_var_-4, align 4
  %v1_3664a = call i32 @unknown_5c75a(i32 %v1_36644)
  %v1_3664f = inttoptr i32 %v1_3664a to i32*
  %v2_3664f = load i32, i32* %v1_3664f, align 4
  %v0_36651 = load i32, i32* @ebp, align 4
  %v1_36651 = add i32 %v0_36651, -92
  %v2_36651 = inttoptr i32 %v1_36651 to i32*
  %v3_36651 = load i32, i32* %v2_36651, align 4
  %v1_36654 = inttoptr i32 %v3_36651 to i32*
  %v2_36654 = load i32, i32* %v1_36654, align 4
  %v0_36656 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3665a = add i32 %v0_36651, -16
  %v2_3665a = inttoptr i32 %v1_3665a to i32*
  %v3_3665a = load i32, i32* %v2_3665a, align 4
  store i32 %v2_36654, i32* %stack_var_-4, align 4
  %v5_36668 = call i32 @unknown_6dda5(i32 %v2_36654, i32 %v2_3664f, i32 %v3_3665a, i32 %v0_36656)
  %v1_3666d = load i32, i32* @ebp, align 4
  %v2_3666d = add i32 %v1_3666d, -36
  %v3_3666d = inttoptr i32 %v2_3666d to i32*
  store i32 %v5_36668, i32* %v3_3666d, align 4
  %v0_36670 = load i32, i32* @ebp, align 4
  %v1_36670 = add i32 %v0_36670, -100
  %v2_36670 = inttoptr i32 %v1_36670 to i32*
  %v3_36670 = load i32, i32* %v2_36670, align 4
  %v2_36673 = mul i32 %v3_36670, 32
  %v1_36676 = add i32 %v0_36670, -36
  %v2_36676 = inttoptr i32 %v1_36676 to i32*
  %v3_36676 = load i32, i32* %v2_36676, align 4
  %v5_36676 = add i32 %v3_36676, %v2_36673
  store i32 %v5_36676, i32* %v2_36676, align 4
  %v0_36679 = load i32, i32* @ebp, align 4
  %v1_36679 = add i32 %v0_36679, -92
  %v2_36679 = inttoptr i32 %v1_36679 to i32*
  %v3_36679 = load i32, i32* %v2_36679, align 4
  store i32 %v3_36679, i32* %stack_var_-4, align 4
  %v1_3667f = call i32 @unknown_5296c(i32 %v3_36679)
  store i32 %v1_3667f, i32* %ebx.global-to-local, align 4
  %v0_36686 = load i32, i32* @ebp, align 4
  %v1_36686 = add i32 %v0_36686, -92
  %v2_36686 = inttoptr i32 %v1_36686 to i32*
  %v3_36686 = load i32, i32* %v2_36686, align 4
  %v1_36689 = add i32 %v3_36686, 4
  %v2_36689 = inttoptr i32 %v1_36689 to i32*
  %v3_36689 = load i32, i32* %v2_36689, align 4
  store i32 %v3_36689, i32* @esi, align 4
  %v1_3668c = add i32 %v0_36686, -96
  store i32 %v1_3668c, i32* %stack_var_-4, align 4
  %v1_36692 = call i32 @unknown_5c75a(i32 %v1_3668c)
  %v1_36697 = inttoptr i32 %v1_36692 to i32*
  %v2_36697 = load i32, i32* %v1_36697, align 4
  %v0_36699 = load i32, i32* %ebx.global-to-local, align 4
  %v0_3669d = load i32, i32* @ebp, align 4
  %v1_3669d = add i32 %v0_3669d, -36
  %v2_3669d = inttoptr i32 %v1_3669d to i32*
  %v3_3669d = load i32, i32* %v2_3669d, align 4
  %v0_366a4 = load i32, i32* @esi, align 4
  store i32 %v2_36697, i32* %stack_var_-4, align 4
  %v5_366ab = call i32 @unknown_6dda5(i32 %v2_36697, i32 %v0_366a4, i32 %v3_3669d, i32 %v0_36699)
  %v1_366b0 = load i32, i32* @ebp, align 4
  %v2_366b0 = add i32 %v1_366b0, -36
  %v3_366b0 = inttoptr i32 %v2_366b0 to i32*
  store i32 %v5_366ab, i32* %v3_366b0, align 4
  %v0_366b3 = load i32, i32* @ebp, align 4
  %v1_366b3 = add i32 %v0_366b3, -92
  %v2_366b3 = inttoptr i32 %v1_366b3 to i32*
  %v3_366b3 = load i32, i32* %v2_366b3, align 4
  store i32 %v3_366b3, i32* %stack_var_-4, align 4
  %v1_366b9 = call i32 @unknown_5296c(i32 %v3_366b3)
  %v0_366be = load i32, i32* @ebp, align 4
  %v1_366be = add i32 %v0_366be, -92
  %v2_366be = inttoptr i32 %v1_366be to i32*
  %v3_366c4 = load i32, i32* %v2_366be, align 4
  %v1_366c7 = inttoptr i32 %v3_366c4 to i32*
  %v2_366c7 = load i32, i32* %v1_366c7, align 4
  store i32 %v2_366c7, i32* %stack_var_-4, align 4
  %v1_366d4 = call i32 @unknown_52999(i32 %v2_366c7)
  %v0_366d9 = load i32, i32* @ebp, align 4
  %v1_366d9 = add i32 %v0_366d9, -92
  %v2_366d9 = inttoptr i32 %v1_366d9 to i32*
  %v3_366d9 = load i32, i32* %v2_366d9, align 4
  %v1_366dc = add i32 %v3_366d9, 8
  %v2_366dc = inttoptr i32 %v1_366dc to i32*
  %v3_366dc = load i32, i32* %v2_366dc, align 4
  %v1_366e4 = inttoptr i32 %v3_366d9 to i32*
  %v2_366e4 = load i32, i32* %v1_366e4, align 4
  %v2_366e8 = sub i32 %v3_366dc, %v2_366e4
  %v2_366ec = sdiv i32 %v2_366e8, 32
  store i32 %v2_366ec, i32* @ecx, align 8
  %v3_366f6 = load i32, i32* %v2_366d9, align 4
  store i32 %v3_366f6, i32* %stack_var_-4, align 4
  %v1_36704 = call i32 @unknown_591ca(i32 %v3_366f6)
  %v0_36709 = load i32, i32* @ebp, align 4
  %v1_36709 = add i32 %v0_36709, -92
  %v2_36709 = inttoptr i32 %v1_36709 to i32*
  %v3_36709 = load i32, i32* %v2_36709, align 4
  %v1_3670c = add i32 %v0_36709, -16
  %v2_3670c = inttoptr i32 %v1_3670c to i32*
  %v3_3670c = load i32, i32* %v2_3670c, align 4
  %v2_3670f = inttoptr i32 %v3_36709 to i32*
  store i32 %v3_3670c, i32* %v2_3670f, align 4
  %v0_36711 = load i32, i32* @ebp, align 4
  %v1_36711 = add i32 %v0_36711, -92
  %v2_36711 = inttoptr i32 %v1_36711 to i32*
  %v3_36711 = load i32, i32* %v2_36711, align 4
  %v1_36714 = add i32 %v0_36711, -36
  %v2_36714 = inttoptr i32 %v1_36714 to i32*
  %v3_36714 = load i32, i32* %v2_36714, align 4
  %v2_36717 = add i32 %v3_36711, 4
  %v3_36717 = inttoptr i32 %v2_36717 to i32*
  store i32 %v3_36714, i32* %v3_36717, align 4
  %v0_3671a = load i32, i32* @ebp, align 4
  %v1_3671a = add i32 %v0_3671a, -24
  %v2_3671a = inttoptr i32 %v1_3671a to i32*
  %v3_3671a = load i32, i32* %v2_3671a, align 4
  %v2_3671d = mul i32 %v3_3671a, 32
  %v2_36722 = add i32 %v0_3671a, -16
  %v3_36722 = inttoptr i32 %v2_36722 to i32*
  %v4_36722 = load i32, i32* %v3_36722, align 4
  %v5_36722 = add i32 %v4_36722, %v2_3671d
  %v1_36725 = add i32 %v0_3671a, -92
  %v2_36725 = inttoptr i32 %v1_36725 to i32*
  %v3_36725 = load i32, i32* %v2_36725, align 4
  store i32 %v3_36725, i32* @eax, align 8
  %v2_36728 = add i32 %v3_36725, 8
  %v3_36728 = inttoptr i32 %v2_36728 to i32*
  store i32 %v5_36722, i32* %v3_36728, align 4
  %v0_3672b = load i32, i32* %stack_var_-4, align 4
  %v1_3672b = call i32 @function_367db(i32 %v0_3672b)
  ret i32 %v1_3672b

; uselistorder directives
  uselistorder i32 %v2_36697, { 1, 0 }
  uselistorder i32 %v2_36654, { 1, 0 }
  uselistorder i32 %v5_36613, { 1, 0 }
  uselistorder i32 (i32)* @function_367db, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_6dda5, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @unknown_5c75a, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @unknown_5296c, { 3, 2, 1, 0, 5, 4 }
}

define i32 @function_365bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_365bc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_365dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_365dd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36637(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36637:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3665a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3665a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36687(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36687:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36704(i32 %arg1) local_unnamed_addr {
dec_label_pc_36704:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36731() local_unnamed_addr {
dec_label_pc_36731:
  %eax.global-to-local = alloca i32, align 4
  %v0_36731 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36731
}

define i32 @function_36748() local_unnamed_addr {
dec_label_pc_36748:
  %eax.global-to-local = alloca i32, align 4
  %v0_36748 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36748
}

define i32 @function_36778(i16 %arg1) local_unnamed_addr {
dec_label_pc_36778:
  %eax.global-to-local = alloca i32, align 4
  %v6_36778 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_36778
}

define i32 @function_36788(i32 %arg1) local_unnamed_addr {
dec_label_pc_36788:
  %v5_36788 = load i32, i32* @eax, align 8
  ret i32 %v5_36788
}

define i32 @function_3678a() local_unnamed_addr {
dec_label_pc_3678a:
  %edx.global-to-local = alloca i32, align 4
  %v0_36792 = load i32, i32* %edx.global-to-local, align 4
  %v1_36795 = call i32 @unknown_52999(i32 %v0_36792)
  ret i32 %v1_36795
}

define i32 @function_367b5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_367b5:
  %v0_367b5 = load i32, i32* @eax, align 8
  %v1_367b8 = call i32 @unknown_52999(i32 %v0_367b5)
  %v0_367bd = load i32, i32* @ebp, align 4
  %v1_367bd = add i32 %v0_367bd, -92
  %v2_367bd = inttoptr i32 %v1_367bd to i32*
  %v3_367bd = load i32, i32* %v2_367bd, align 4
  %v1_367d1 = call i32 @unknown_591ca(i32 %v3_367bd)
  ret i32 %v1_367d1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_591ca, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @unknown_52999, { 1, 2, 0 }
}

define i32 @function_367db(i32 %arg1) local_unnamed_addr {
dec_label_pc_367db:
  %v0_367db = load i32, i32* @ebp, align 4
  %v1_367db = add i32 %v0_367db, -12
  %v2_367db = inttoptr i32 %v1_367db to i32*
  %v3_367db = load i32, i32* %v2_367db, align 4
  %v1_367de = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_367de = icmp eq i32 %v1_367de, %v3_367db
  br i1 %v3_367de, label %bb, label %dec_label_pc_367db.dec_label_pc_367e7_crit_edge

dec_label_pc_367db.dec_label_pc_367e7_crit_edge:  ; preds = %dec_label_pc_367db
  %v2_367e5.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_367e7

bb:                                               ; preds = %dec_label_pc_367db
  %v1_367e5 = call i32 @function_367ec()
  br label %dec_label_pc_367e7

dec_label_pc_367e7:                               ; preds = %dec_label_pc_367db.dec_label_pc_367e7_crit_edge, %bb
  %v2_367e5 = phi i32 [ %v2_367e5.pre, %dec_label_pc_367db.dec_label_pc_367e7_crit_edge ], [ %v1_367e5, %bb ]
  ret i32 %v2_367e5

; uselistorder directives
  uselistorder label %dec_label_pc_367e7, { 1, 0 }
}

define i32 @function_367ec() local_unnamed_addr {
dec_label_pc_367ec:
  %v0_367ec = load i32, i32* @ebp, align 4
  %v3_367ef = add i32 %v0_367ec, -4
  %v1_367f0 = inttoptr i32 %v3_367ef to i32*
  %v2_367f0 = load i32, i32* %v1_367f0, align 4
  store i32 %v2_367f0, i32* @esi, align 4
  %v1_367f1 = inttoptr i32 %v0_367ec to i32*
  %v2_367f1 = load i32, i32* %v1_367f1, align 4
  store i32 %v2_367f1, i32* @ebp, align 4
  %v0_367f2 = load i32, i32* @eax, align 8
  ret i32 %v0_367f2
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI5CTxInSaIS2_EEEjRT_RT0_ii21CSerActionUnserialize() local_unnamed_addr {
dec_label_pc_367f3:
  %eax.global-to-local = alloca i32, align 4
  %v2_367f4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_367f4
}

define i32 @function_367f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_367f8:
  %v0_367f9 = load i32, i32* @ebp, align 4
  %v1_367f9 = add i32 %v0_367f9, 8
  %v2_367f9 = inttoptr i32 %v1_367f9 to i32*
  %v3_367f9 = load i32, i32* %v2_367f9, align 4
  %v2_367fc = add i32 %v0_367f9, -28
  %v3_367fc = inttoptr i32 %v2_367fc to i32*
  store i32 %v3_367f9, i32* %v3_367fc, align 4
  %v0_367ff = load i32, i32* @ebp, align 4
  %v1_367ff = add i32 %v0_367ff, 12
  %v2_367ff = inttoptr i32 %v1_367ff to i32*
  %v3_367ff = load i32, i32* %v2_367ff, align 4
  %v2_36802 = add i32 %v0_367ff, -32
  %v3_36802 = inttoptr i32 %v2_36802 to i32*
  store i32 %v3_367ff, i32* %v3_36802, align 4
  %v0_36805 = load i32, i32* @ebp, align 4
  %v1_36805 = add i32 %v0_36805, 16
  %v2_36805 = inttoptr i32 %v1_36805 to i32*
  %v3_36805 = load i32, i32* %v2_36805, align 4
  %v2_36808 = add i32 %v0_36805, -36
  %v3_36808 = inttoptr i32 %v2_36808 to i32*
  store i32 %v3_36805, i32* %v3_36808, align 4
  %v0_3680b = load i32, i32* @ebp, align 4
  %v1_3680b = add i32 %v0_3680b, 20
  %v2_3680b = inttoptr i32 %v1_3680b to i32*
  %v3_3680b = load i32, i32* %v2_3680b, align 4
  %v2_3680e = add i32 %v0_3680b, -40
  %v3_3680e = inttoptr i32 %v2_3680e to i32*
  store i32 %v3_3680b, i32* %v3_3680e, align 4
  %v0_36811 = load i32, i32* @ebp, align 4
  %v1_36811 = add i32 %v0_36811, 24
  %v2_36811 = inttoptr i32 %v1_36811 to i8*
  %v3_36811 = load i8, i8* %v2_36811, align 1
  %v3_36815 = add i32 %v0_36811, -41
  %v4_36815 = inttoptr i32 %v3_36815 to i8*
  store i8 %v3_36811, i8* %v4_36815, align 1
  %v0_36818 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3681e = load i32, i32* @ebp, align 4
  %v2_3681e = add i32 %v1_3681e, -12
  %v3_3681e = inttoptr i32 %v2_3681e to i32*
  store i32 %v0_36818, i32* %v3_3681e, align 4
  %v0_36823 = load i32, i32* @ebp, align 4
  %v1_36823 = add i32 %v0_36823, -40
  %v2_36823 = inttoptr i32 %v1_36823 to i32*
  %v3_36823 = load i32, i32* %v2_36823, align 4
  %v1_3682a = add i32 %v0_36823, -36
  %v2_3682a = inttoptr i32 %v1_3682a to i32*
  %v3_3682a = load i32, i32* %v2_3682a, align 4
  %v1_36831 = add i32 %v0_36823, -32
  %v2_36831 = inttoptr i32 %v1_36831 to i32*
  %v3_36831 = load i32, i32* %v2_36831, align 4
  %v1_36838 = add i32 %v0_36823, -28
  %v2_36838 = inttoptr i32 %v1_36838 to i32*
  %v3_36838 = load i32, i32* %v2_36838, align 4
  %v4_3683e = call i32 @unknown_6e4c6(i32 %v3_36838, i32 %v3_36831, i32 %v3_3682a, i32 %v3_36823)
  store i32 0, i32* @eax, align 8
  %v0_36848 = load i32, i32* @ebp, align 4
  %v1_36848 = add i32 %v0_36848, -12
  %v2_36848 = inttoptr i32 %v1_36848 to i32*
  %v3_36848 = load i32, i32* %v2_36848, align 4
  %v1_3684b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3684b = icmp eq i32 %v1_3684b, %v3_36848
  br i1 %v3_3684b, label %bb, label %dec_label_pc_36854

bb:                                               ; preds = %dec_label_pc_367f8
  %v1_36852 = call i32 @function_36859()
  br label %dec_label_pc_36854

dec_label_pc_36854:                               ; preds = %bb, %dec_label_pc_367f8
  %v2_36852 = phi i32 [ %v1_36852, %bb ], [ 0, %dec_label_pc_367f8 ]
  ret i32 %v2_36852

; uselistorder directives
  uselistorder i32 %v0_36823, { 1, 0, 2, 3 }
}

define i32 @function_36859() local_unnamed_addr {
dec_label_pc_36859:
  %v0_3685a = load i32, i32* @eax, align 8
  ret i32 %v0_3685a
}

define i32 @_Z12SerReadWriteI11CDataStreamSt6vectorI6CTxOutSaIS2_EEEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3685b:
  ret i32 %arg4
}

define i32 @function_36878(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36878:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_3687c = load i32, i32* @eax, align 8
  %v1_3687c = add i32 %v0_3687c, -1587161275
  %v2_3687c = inttoptr i32 %v1_3687c to i8*
  %v3_3687c = load i8, i8* %v2_3687c, align 1
  %v4_3687c = load i32, i32* @ecx, align 8
  %v5_3687c = trunc i32 %v4_3687c to i8
  %v6_3687c = load i1, i1* @cf, align 1
  %v7_3687c = zext i1 %v6_3687c to i8
  %v8_3687c = sub i8 %v3_3687c, %v5_3687c
  %v9_3687c = add i8 %v8_3687c, %v7_3687c
  %v19_3687c = sub i8 %v8_3687c, %v7_3687c
  %v20_3687c = icmp ult i8 %v3_3687c, %v19_3687c
  %v21_3687c = icmp ne i8 %v5_3687c, -1
  %v22_3687c = or i1 %v21_3687c, %v20_3687c
  %v23_3687c = icmp ult i8 %v3_3687c, %v5_3687c
  %v24_3687c = select i1 %v6_3687c, i1 %v22_3687c, i1 %v23_3687c
  store i1 %v24_3687c, i1* %cf.global-to-local, align 1
  store i8 %v9_3687c, i8* %v2_3687c, align 1
  %v0_36882 = load i32, i32* @eax, align 8
  %v1_36882 = trunc i32 %v0_36882 to i8
  %v2_36882 = load i1, i1* %cf.global-to-local, align 1
  %v3_36882 = zext i1 %v2_36882 to i8
  %v4_36882 = add i8 %v3_36882, %v1_36882
  %v19_36882 = icmp ule i8 %v4_36882, %v1_36882
  %v21_36882 = icmp eq i1 %v2_36882, %v19_36882
  store i1 %v21_36882, i1* %cf.global-to-local, align 1
  %v22_36882 = zext i8 %v4_36882 to i32
  %v24_36882 = and i32 %v0_36882, -256
  %v25_36882 = or i32 %v22_36882, %v24_36882
  store i32 %v25_36882, i32* %eax.global-to-local, align 8
  %v1_36884 = inttoptr i32 %v25_36882 to i8*
  %v2_36884 = load i8, i8* %v1_36884, align 1
  %v5_36884 = add i8 %v2_36884, %v4_36882
  store i8 %v5_36884, i8* %v1_36884, align 1
  %v0_36886 = load i32, i32* %eax.global-to-local, align 8
  %v1_36886 = load i32, i32* @ebp, align 4
  %v2_36886 = add i32 %v1_36886, -12
  %v3_36886 = inttoptr i32 %v2_36886 to i32*
  store i32 %v0_36886, i32* %v3_36886, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3688b = load i32, i32* @ebp, align 4
  %v1_3688b = add i32 %v0_3688b, -40
  %v2_3688b = inttoptr i32 %v1_3688b to i32*
  %v3_3688b = load i32, i32* %v2_3688b, align 4
  store i32 %v3_3688b, i32* %eax.global-to-local, align 8
  %v1_36892 = add i32 %v0_3688b, -36
  %v2_36892 = inttoptr i32 %v1_36892 to i32*
  %v3_36892 = load i32, i32* %v2_36892, align 4
  store i32 %v3_36892, i32* %eax.global-to-local, align 8
  %v1_36899 = add i32 %v0_3688b, -32
  %v2_36899 = inttoptr i32 %v1_36899 to i32*
  %v3_36899 = load i32, i32* %v2_36899, align 4
  store i32 %v3_36899, i32* %eax.global-to-local, align 8
  %v1_368a0 = add i32 %v0_3688b, -28
  %v2_368a0 = inttoptr i32 %v1_368a0 to i32*
  %v3_368a0 = load i32, i32* %v2_368a0, align 4
  store i32 %v3_368a0, i32* %eax.global-to-local, align 8
  %v4_368a6 = call i32 @unknown_6e591(i32 %v3_368a0, i32 %v3_36899, i32 %v3_36892, i32 %v3_3688b)
  store i32 0, i32* @eax, align 8
  %v0_368b0 = load i32, i32* @ebp, align 4
  %v1_368b0 = add i32 %v0_368b0, -12
  %v2_368b0 = inttoptr i32 %v1_368b0 to i32*
  %v3_368b0 = load i32, i32* %v2_368b0, align 4
  %v1_368b3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_368b3 = icmp eq i32 %v1_368b3, %v3_368b0
  br i1 %v3_368b3, label %bb, label %dec_label_pc_368bc

bb:                                               ; preds = %dec_label_pc_36878
  %v1_368ba = call i32 @function_368c1()
  store i32 %v1_368ba, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_368bc

dec_label_pc_368bc:                               ; preds = %bb, %dec_label_pc_36878
  %v2_368ba = phi i32 [ %v1_368ba, %bb ], [ 0, %dec_label_pc_36878 ]
  ret i32 %v2_368ba

; uselistorder directives
  uselistorder i32 %v0_3688b, { 1, 0, 2, 3 }
  uselistorder i8 %v4_36882, { 0, 2, 1 }
  uselistorder i8 %v1_36882, { 1, 0 }
  uselistorder i8 %v5_3687c, { 1, 0, 2 }
}

define i32 @function_368c1() local_unnamed_addr {
dec_label_pc_368c1:
  %v0_368c2 = load i32, i32* @eax, align 8
  ret i32 %v0_368c2
}

define i32 @_ZN5boost14checked_deleteISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_368c3:
  %v1_368de = icmp eq i32 %arg1, 0
  br i1 %v1_368de, label %bb, label %dec_label_pc_368e2

bb:                                               ; preds = %dec_label_pc_368c3
  %v2_368e0 = call i32 @function_368f2(i32 0)
  br label %dec_label_pc_368e2

dec_label_pc_368e2:                               ; preds = %bb, %dec_label_pc_368c3
  %v1_368e5 = call i32 @unknown_4dfc3(i32 %arg1)
  ret i32 %v1_368e5
}

define i32 @function_368f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_368f2:
  %v0_368f2 = load i32, i32* @ebp, align 4
  %v1_368f2 = add i32 %v0_368f2, -12
  %v2_368f2 = inttoptr i32 %v1_368f2 to i32*
  %v3_368f2 = load i32, i32* %v2_368f2, align 4
  %v1_368f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_368f5 = xor i32 %v1_368f5, %v3_368f2
  %v3_368f5 = icmp eq i32 %v2_368f5, 0
  store i32 %v2_368f5, i32* @eax, align 8
  br i1 %v3_368f5, label %bb, label %dec_label_pc_368fe

bb:                                               ; preds = %dec_label_pc_368f2
  %v1_368fc = call i32 @function_36903()
  br label %dec_label_pc_368fe

dec_label_pc_368fe:                               ; preds = %bb, %dec_label_pc_368f2
  %v2_368fc = phi i32 [ %v1_368fc, %bb ], [ %v2_368f5, %dec_label_pc_368f2 ]
  ret i32 %v2_368fc
}

define i32 @function_36903() local_unnamed_addr {
dec_label_pc_36903:
  %v0_36908 = load i32, i32* @eax, align 8
  ret i32 %v0_36908
}

define i32 @_ZN5boost14checked_deleteISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_36909:
  ret i32 %arg1
}

define i32 @function_36914(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36914:
  %v0_36914 = load i32, i32* @ebp, align 4
  %v1_36914 = add i32 %v0_36914, 1
  store i32 %v1_36914, i32* @ebp, align 4
  %v0_36917 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3691c = add i32 %v0_36914, -11
  %v3_3691c = inttoptr i32 %v2_3691c to i32*
  store i32 %v0_36917, i32* %v3_3691c, align 4
  %v0_36921 = load i32, i32* @ebp, align 4
  %v1_36921 = add i32 %v0_36921, -28
  %v2_36921 = inttoptr i32 %v1_36921 to i32*
  %v3_36921 = load i32, i32* %v2_36921, align 4
  %v1_36924 = icmp eq i32 %v3_36921, 0
  br i1 %v1_36924, label %bb, label %dec_label_pc_36928

bb:                                               ; preds = %dec_label_pc_36914
  %v1_36926 = call i32 @function_36938()
  br label %dec_label_pc_36928

dec_label_pc_36928:                               ; preds = %bb, %dec_label_pc_36914
  %v1_3692b = call i32 @unknown_4efcd(i32 %v3_36921)
  ret i32 %v1_3692b

; uselistorder directives
  uselistorder i32 -11, { 2, 0, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11 }
}

define i32 @function_36938() local_unnamed_addr {
dec_label_pc_36938:
  %v0_36938 = load i32, i32* @ebp, align 4
  %v1_36938 = add i32 %v0_36938, -12
  %v2_36938 = inttoptr i32 %v1_36938 to i32*
  %v3_36938 = load i32, i32* %v2_36938, align 4
  %v1_3693b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3693b = xor i32 %v1_3693b, %v3_36938
  %v3_3693b = icmp eq i32 %v2_3693b, 0
  store i32 %v2_3693b, i32* @eax, align 8
  br i1 %v3_3693b, label %bb, label %dec_label_pc_36944

bb:                                               ; preds = %dec_label_pc_36938
  %v1_36942 = call i32 @function_36949()
  br label %dec_label_pc_36944

dec_label_pc_36944:                               ; preds = %bb, %dec_label_pc_36938
  %v2_36942 = phi i32 [ %v1_36942, %bb ], [ %v2_3693b, %dec_label_pc_36938 ]
  ret i32 %v2_36942
}

define i32 @function_36949() local_unnamed_addr {
dec_label_pc_36949:
  %v0_3694e = load i32, i32* @eax, align 8
  ret i32 %v0_3694e
}

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_36950:
  ret i32 0
}

define i32 @function_36968(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36968:
  %v0_36968 = load i32, i32* @ebp, align 4
  %v1_36968 = add i32 %v0_36968, 1
  store i32 %v1_36968, i32* @ebp, align 4
  %v0_3696d = call i32 @unknown_6e6ea()
  store i32 %v0_3696d, i32* @eax, align 8
  %v0_36972 = load i32, i32* @ebp, align 4
  %v1_36972 = add i32 %v0_36972, -12
  %v2_36972 = inttoptr i32 %v1_36972 to i32*
  %v3_36972 = load i32, i32* %v2_36972, align 4
  %v1_36975 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36975 = icmp eq i32 %v1_36975, %v3_36972
  br i1 %v3_36975, label %bb, label %dec_label_pc_3697e

bb:                                               ; preds = %dec_label_pc_36968
  %v1_3697c = call i32 @function_36983()
  br label %dec_label_pc_3697e

dec_label_pc_3697e:                               ; preds = %bb, %dec_label_pc_36968
  %v2_3697c = phi i32 [ %v1_3697c, %bb ], [ %v0_3696d, %dec_label_pc_36968 ]
  ret i32 %v2_3697c
}

define i32 @function_36983() local_unnamed_addr {
dec_label_pc_36983:
  %v0_36984 = load i32, i32* @eax, align 8
  ret i32 %v0_36984
}

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_36986:
  %v1_369a3 = call i32 @unknown_6e750(i32 %arg1)
  store i32 %v1_369a3, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_369b4

bb:                                               ; preds = %dec_label_pc_36986
  %v1_369b2 = call i32 @function_369b9()
  br label %dec_label_pc_369b4

dec_label_pc_369b4:                               ; preds = %bb, %dec_label_pc_36986
  %v2_369b2 = phi i32 [ %v1_369b2, %bb ], [ %v1_369a3, %dec_label_pc_36986 ]
  ret i32 %v2_369b2
}

define i32 @function_369b9() local_unnamed_addr {
dec_label_pc_369b9:
  %v0_369ba = load i32, i32* @eax, align 8
  ret i32 %v0_369ba
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvSsEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_369bb:
  %v1_369f1 = call i32 @unknown_69d6f(i32 %arg3)
  %v3_36a08 = call i32 @unknown_6e7b5(i32 %arg2, i32 %v1_369f1, i32 1)
  store i32 %v3_36a08, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_36a19

bb:                                               ; preds = %dec_label_pc_369bb
  %v1_36a17 = call i32 @function_36a1e()
  br label %dec_label_pc_36a19

dec_label_pc_36a19:                               ; preds = %bb, %dec_label_pc_369bb
  %v2_36a17 = phi i32 [ %v1_36a17, %bb ], [ %v3_36a08, %dec_label_pc_369bb ]
  ret i32 %v2_36a17
}

define i32 @function_36a1e() local_unnamed_addr {
dec_label_pc_36a1e:
  %v0_36a1f = load i32, i32* @eax, align 8
  ret i32 %v0_36a1f
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36a20:
  %v1_36a56 = call i32 @unknown_69e85(i32 %arg3)
  %v3_36a6d = call i32 @unknown_6e864(i32 %arg2, i32 %v1_36a56, i32 1)
  store i32 %v3_36a6d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_36a7e

bb:                                               ; preds = %dec_label_pc_36a20
  %v1_36a7c = call i32 @function_36a83()
  br label %dec_label_pc_36a7e

dec_label_pc_36a7e:                               ; preds = %bb, %dec_label_pc_36a20
  %v2_36a7c = phi i32 [ %v1_36a7c, %bb ], [ %v3_36a6d, %dec_label_pc_36a20 ]
  ret i32 %v2_36a7c
}

define i32 @function_36a83() local_unnamed_addr {
dec_label_pc_36a83:
  %v0_36a84 = load i32, i32* @eax, align 8
  ret i32 %v0_36a84
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINSC_13Config_vectorISsEEEESaISG_EEEEEENT_11result_typeEiRSK_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_36a85:
  %eax.global-to-local = alloca i32, align 4
  %v2_36a86 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_36a86
}

define i32 @function_36a8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_36a8a:
  %v0_36a8b = load i32, i32* @ebp, align 4
  %v1_36a8b = add i32 %v0_36a8b, 8
  %v2_36a8b = inttoptr i32 %v1_36a8b to i32*
  %v3_36a8b = load i32, i32* %v2_36a8b, align 4
  %v2_36a8e = add i32 %v0_36a8b, -28
  %v3_36a8e = inttoptr i32 %v2_36a8e to i32*
  store i32 %v3_36a8b, i32* %v3_36a8e, align 4
  %v0_36a91 = load i32, i32* @ebp, align 4
  %v1_36a91 = add i32 %v0_36a91, 12
  %v2_36a91 = inttoptr i32 %v1_36a91 to i32*
  %v3_36a91 = load i32, i32* %v2_36a91, align 4
  %v2_36a94 = add i32 %v0_36a91, -32
  %v3_36a94 = inttoptr i32 %v2_36a94 to i32*
  store i32 %v3_36a91, i32* %v3_36a94, align 4
  %v0_36a97 = load i32, i32* @ebp, align 4
  %v1_36a97 = add i32 %v0_36a97, 16
  %v2_36a97 = inttoptr i32 %v1_36a97 to i32*
  %v3_36a97 = load i32, i32* %v2_36a97, align 4
  %v2_36a9a = add i32 %v0_36a97, -36
  %v3_36a9a = inttoptr i32 %v2_36a9a to i32*
  store i32 %v3_36a97, i32* %v3_36a9a, align 4
  %v0_36a9d = load i32, i32* @ebp, align 4
  %v1_36a9d = add i32 %v0_36a9d, 20
  %v2_36a9d = inttoptr i32 %v1_36a9d to i32*
  %v3_36a9d = load i32, i32* %v2_36a9d, align 4
  %v2_36aa0 = add i32 %v0_36a9d, -40
  %v3_36aa0 = inttoptr i32 %v2_36aa0 to i32*
  store i32 %v3_36a9d, i32* %v3_36aa0, align 4
  %v0_36aa3 = load i32, i32* @ebp, align 4
  %v1_36aa3 = add i32 %v0_36aa3, 24
  %v2_36aa3 = inttoptr i32 %v1_36aa3 to i8*
  %v3_36aa3 = load i8, i8* %v2_36aa3, align 1
  %v3_36aa7 = add i32 %v0_36aa3, -41
  %v4_36aa7 = inttoptr i32 %v3_36aa7 to i8*
  store i8 %v3_36aa3, i8* %v4_36aa7, align 1
  %v0_36aaa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36ab0 = load i32, i32* @ebp, align 4
  %v2_36ab0 = add i32 %v1_36ab0, -12
  %v3_36ab0 = inttoptr i32 %v2_36ab0 to i32*
  store i32 %v0_36aaa, i32* %v3_36ab0, align 4
  ret i32 0
}

define i32 @function_36ab7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36ab7:
  %eax.global-to-local = alloca i32, align 4
  %v0_36abd = load i32, i32* @eax, align 8
  %v11_36ac2 = and i32 %v0_36abd, -248
  store i32 %v11_36ac2, i32* %eax.global-to-local, align 8
  %v1_36ac4 = inttoptr i32 %v11_36ac2 to i32*
  %v2_36ac4 = load i32, i32* %v1_36ac4, align 8
  %v4_36ac4 = add i32 %v2_36ac4, %v11_36ac2
  store i32 %v4_36ac4, i32* %v1_36ac4, align 8
  %v0_36ac6 = load i32, i32* %eax.global-to-local, align 8
  %v1_36ac6 = inttoptr i32 %v0_36ac6 to i8*
  %v2_36ac6 = load i8, i8* %v1_36ac6, align 1
  %v4_36ac6 = trunc i32 %v0_36ac6 to i8
  %v5_36ac6 = add i8 %v2_36ac6, %v4_36ac6
  store i8 %v5_36ac6, i8* %v1_36ac6, align 1
  %v0_36ac8 = load i32, i32* %eax.global-to-local, align 8
  %v0_36acc = load i32, i32* @ebp, align 4
  %v1_36acc = add i32 %v0_36acc, -32
  %v2_36acc = inttoptr i32 %v1_36acc to i32*
  %v3_36acc = load i32, i32* %v2_36acc, align 4
  store i32 %v3_36acc, i32* %eax.global-to-local, align 8
  %v2_36ad2 = call i32 @unknown_6e921(i32 %v3_36acc, i32 %v0_36ac8)
  store i32 %v2_36ad2, i32* @eax, align 8
  %v0_36ad7 = load i32, i32* @ebp, align 4
  %v1_36ad7 = add i32 %v0_36ad7, -12
  %v2_36ad7 = inttoptr i32 %v1_36ad7 to i32*
  %v3_36ad7 = load i32, i32* %v2_36ad7, align 4
  %v1_36ada = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36ada = icmp eq i32 %v1_36ada, %v3_36ad7
  br i1 %v3_36ada, label %bb, label %dec_label_pc_36ae3

bb:                                               ; preds = %dec_label_pc_36ab7
  %v1_36ae1 = call i32 @function_36ae8()
  store i32 %v1_36ae1, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_36ae3

dec_label_pc_36ae3:                               ; preds = %bb, %dec_label_pc_36ab7
  %v2_36ae1 = phi i32 [ %v1_36ae1, %bb ], [ %v2_36ad2, %dec_label_pc_36ab7 ]
  ret i32 %v2_36ae1

; uselistorder directives
  uselistorder i32 %v11_36ac2, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
}

define i32 @function_36ae8() local_unnamed_addr {
dec_label_pc_36ae8:
  %v0_36ae9 = load i32, i32* @eax, align 8
  ret i32 %v0_36ae9
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvbEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36aea:
  %v1_36b20 = call i32 @unknown_6a0af(i32 %arg3)
  %v3_36b37 = call i32 @unknown_6e9de(i32 %arg2, i32 %v1_36b20, i32 1)
  store i32 %v3_36b37, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_36b48

bb:                                               ; preds = %dec_label_pc_36aea
  %v1_36b46 = call i32 @function_36b4d()
  br label %dec_label_pc_36b48

dec_label_pc_36b48:                               ; preds = %bb, %dec_label_pc_36aea
  %v2_36b46 = phi i32 [ %v1_36b46, %bb ], [ %v3_36b37, %dec_label_pc_36aea ]
  ret i32 %v2_36b46
}

define i32 @function_36b4d() local_unnamed_addr {
dec_label_pc_36b4d:
  %v0_36b4e = load i32, i32* @eax, align 8
  ret i32 %v0_36b4e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvxEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36b4f:
  %v4_36b6d = zext i8 %arg5 to i32
  ret i32 %v4_36b6d
}

define i32 @function_36b76(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36b76:
  %eax.global-to-local = alloca i32, align 4
  %v0_36b76 = load i32, i32* @eax, align 8
  %v1_36b76 = trunc i32 %v0_36b76 to i8
  %v2_36b76 = load i1, i1* @cf, align 1
  %v3_36b76 = zext i1 %v2_36b76 to i8
  %v4_36b76 = add i8 %v3_36b76, %v1_36b76
  %v22_36b76 = zext i8 %v4_36b76 to i32
  %v24_36b76 = and i32 %v0_36b76, -256
  %v25_36b76 = or i32 %v22_36b76, %v24_36b76
  store i32 %v25_36b76, i32* %eax.global-to-local, align 8
  %v1_36b78 = inttoptr i32 %v25_36b76 to i8*
  %v2_36b78 = load i8, i8* %v1_36b78, align 1
  %v5_36b78 = add i8 %v2_36b78, %v4_36b76
  store i8 %v5_36b78, i8* %v1_36b78, align 1
  %v0_36b7a = load i32, i32* %eax.global-to-local, align 8
  %v1_36b7a = load i32, i32* @ebp, align 4
  %v2_36b7a = add i32 %v1_36b7a, -12
  %v3_36b7a = inttoptr i32 %v2_36b7a to i32*
  store i32 %v0_36b7a, i32* %v3_36b7a, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_36b7f = load i32, i32* @ebp, align 4
  %v1_36b7f = add i32 %v0_36b7f, -36
  %v2_36b7f = inttoptr i32 %v1_36b7f to i32*
  %v3_36b7f = load i32, i32* %v2_36b7f, align 4
  store i32 %v3_36b7f, i32* %eax.global-to-local, align 8
  %v1_36b85 = call i32 @unknown_6a198(i32 %v3_36b7f)
  store i32 %v1_36b85, i32* %eax.global-to-local, align 8
  %v0_36b96 = load i32, i32* @ebp, align 4
  %v1_36b96 = add i32 %v0_36b96, -32
  %v2_36b96 = inttoptr i32 %v1_36b96 to i32*
  %v3_36b96 = load i32, i32* %v2_36b96, align 4
  store i32 %v3_36b96, i32* %eax.global-to-local, align 8
  %v3_36b9c = call i32 @unknown_6ea8d(i32 %v3_36b96, i32 %v1_36b85, i32 1)
  store i32 %v3_36b9c, i32* @eax, align 8
  %v0_36ba1 = load i32, i32* @ebp, align 4
  %v1_36ba1 = add i32 %v0_36ba1, -12
  %v2_36ba1 = inttoptr i32 %v1_36ba1 to i32*
  %v3_36ba1 = load i32, i32* %v2_36ba1, align 4
  %v1_36ba4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36ba4 = icmp eq i32 %v1_36ba4, %v3_36ba1
  br i1 %v3_36ba4, label %bb, label %dec_label_pc_36bad

bb:                                               ; preds = %dec_label_pc_36b76
  %v1_36bab = call i32 @function_36bb2()
  store i32 %v1_36bab, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_36bad

dec_label_pc_36bad:                               ; preds = %bb, %dec_label_pc_36b76
  %v3_36bab = phi i32 [ %v1_36bab, %bb ], [ %v3_36b9c, %dec_label_pc_36b76 ]
  ret i32 %v3_36bab
}

define i32 @function_36bb2() local_unnamed_addr {
dec_label_pc_36bb2:
  %v0_36bb3 = load i32, i32* @eax, align 8
  ret i32 %v0_36bb3
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_11get_visitorIKxEEEEPKvdEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_36bb4:
  %eax.global-to-local = alloca i32, align 4
  %v2_36bb5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_36bb5
}

define i32 @function_36c16() local_unnamed_addr {
dec_label_pc_36c16:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36c16 = load i32, i32* %ecx.global-to-local, align 8
  %v1_36c16 = add i32 %v0_36c16, -1
  store i32 %v1_36c16, i32* %ecx.global-to-local, align 8
  %v0_36c18 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36c18
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKSsEEPS4_RT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_36c1a:
  ret i32 %arg1
}

define i32 @function_36c28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36c28:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_36c28 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_36c28 = or i32 %v0_36c28, 137
  store i32 %v11_36c28, i32* %eax.global-to-local, align 8
  %v0_36c2a = load i32, i32* @ebp, align 4
  %v0_36c2b = load i32, i32* @ecx, align 8
  %v1_36c2b = add i32 %v0_36c2b, 255
  %v1_36c2d = add i32 %v0_36c2a, 2
  store i32 %v1_36c2d, i32* @ebp, align 4
  %v1_36c2e = add i32 %v0_36c2b, -1587159996
  %v2_36c2e = inttoptr i32 %v1_36c2e to i8*
  %v3_36c2e = load i8, i8* %v2_36c2e, align 1
  %v5_36c2e = trunc i32 %v1_36c2b to i8
  %v8_36c2e = add i8 %v3_36c2e, %v5_36c2e
  %v28_36c2e = icmp ult i8 %v8_36c2e, %v3_36c2e
  store i1 %v28_36c2e, i1* %cf.global-to-local, align 1
  store i8 %v8_36c2e, i8* %v2_36c2e, align 1
  %v0_36c34 = load i32, i32* %eax.global-to-local, align 8
  %v1_36c34 = trunc i32 %v0_36c34 to i8
  %v2_36c34 = load i1, i1* %cf.global-to-local, align 1
  %v3_36c34 = zext i1 %v2_36c34 to i8
  %v4_36c34 = add i8 %v3_36c34, %v1_36c34
  %v19_36c34 = icmp ule i8 %v4_36c34, %v1_36c34
  %v21_36c34 = icmp eq i1 %v2_36c34, %v19_36c34
  store i1 %v21_36c34, i1* %cf.global-to-local, align 1
  %v22_36c34 = zext i8 %v4_36c34 to i32
  %v24_36c34 = and i32 %v0_36c34, -256
  %v25_36c34 = or i32 %v22_36c34, %v24_36c34
  store i32 %v25_36c34, i32* %eax.global-to-local, align 8
  %v1_36c36 = inttoptr i32 %v25_36c34 to i8*
  %v2_36c36 = load i8, i8* %v1_36c36, align 1
  %v5_36c36 = add i8 %v2_36c36, %v4_36c34
  store i8 %v5_36c36, i8* %v1_36c36, align 1
  %v0_36c38 = load i32, i32* %eax.global-to-local, align 8
  %v1_36c38 = load i32, i32* @ebp, align 4
  %v2_36c38 = add i32 %v1_36c38, -12
  %v3_36c38 = inttoptr i32 %v2_36c38 to i32*
  store i32 %v0_36c38, i32* %v3_36c38, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_36c3d = load i32, i32* @ebp, align 4
  %v1_36c3d = add i32 %v0_36c3d, -28
  %v2_36c3d = inttoptr i32 %v1_36c3d to i32*
  %v3_36c3d = load i32, i32* %v2_36c3d, align 4
  store i32 %v3_36c3d, i32* %eax.global-to-local, align 8
  %v1_36c40 = inttoptr i32 %v3_36c3d to i32*
  %v2_36c40 = load i32, i32* %v1_36c40, align 4
  store i32 %v2_36c40, i32* %eax.global-to-local, align 8
  %v1_36c42 = add i32 %v0_36c3d, -32
  %v2_36c42 = inttoptr i32 %v1_36c42 to i32*
  %v3_36c42 = load i32, i32* %v2_36c42, align 4
  %v2_36c4c = call i32 @unknown_6ebec(i32 %v2_36c40, i32 %v3_36c42)
  store i32 %v2_36c4c, i32* @eax, align 8
  %v0_36c51 = load i32, i32* @ebp, align 4
  %v1_36c51 = add i32 %v0_36c51, -12
  %v2_36c51 = inttoptr i32 %v1_36c51 to i32*
  %v3_36c51 = load i32, i32* %v2_36c51, align 4
  %v1_36c54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_36c54 = icmp eq i32 %v1_36c54, %v3_36c51
  br i1 %v3_36c54, label %bb, label %dec_label_pc_36c5d

bb:                                               ; preds = %dec_label_pc_36c28
  %v1_36c5b = call i32 @function_36c62()
  store i32 %v1_36c5b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_36c5d

dec_label_pc_36c5d:                               ; preds = %bb, %dec_label_pc_36c28
  %v3_36c5b = phi i32 [ %v1_36c5b, %bb ], [ %v2_36c4c, %dec_label_pc_36c28 ]
  ret i32 %v3_36c5b

; uselistorder directives
  uselistorder i8 %v4_36c34, { 0, 2, 1 }
  uselistorder i8 %v1_36c34, { 1, 0 }
  uselistorder i8 %v3_36c2e, { 1, 0 }
}

define i32 @function_36c62() local_unnamed_addr {
dec_label_pc_36c62:
  %v0_36c63 = load i32, i32* @eax, align 8
  ret i32 %v0_36c63
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36c64:
  %v1_36c8d = call i32 @unknown_6d5b4(i32 %arg2)
  %v3_36ca4 = call i32 @unknown_6ec6c(i32 %arg1, i32 %v1_36c8d, i32 1)
  ret i32 %v3_36ca4
}

define i32 @function_36cb0() local_unnamed_addr {
dec_label_pc_36cb0:
  %eax.global-to-local = alloca i32, align 4
  %v2_36cb0 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_36cb0 = load i32, i32* %eax.global-to-local, align 8
  %v4_36cb0 = trunc i32 %v3_36cb0 to i8
  %v5_36cb0 = add i8 %v4_36cb0, %v2_36cb0
  %v21_36cb0 = inttoptr i32 %v3_36cb0 to i8*
  store i8 %v5_36cb0, i8* %v21_36cb0, align 1
  %v22_36cb0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_36cb0
}

define i32 @function_36cba(i32 %arg1) local_unnamed_addr {
dec_label_pc_36cba:
  %v0_36cbb = load i32, i32* @eax, align 8
  ret i32 %v0_36cbb
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitISt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36cbc:
  %v1_36ce5 = call i32 @unknown_6d642(i32 %arg2)
  %v3_36cfc = call i32 @unknown_6ed0e(i32 %arg1, i32 %v1_36ce5, i32 1)
  store i32 %v3_36cfc, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_36d0d

bb:                                               ; preds = %dec_label_pc_36cbc
  %v1_36d0b = call i32 @function_36d12()
  br label %dec_label_pc_36d0d

dec_label_pc_36d0d:                               ; preds = %bb, %dec_label_pc_36cbc
  %v2_36d0b = phi i32 [ %v1_36d0b, %bb ], [ %v3_36cfc, %dec_label_pc_36cbc ]
  ret i32 %v2_36d0b
}

define i32 @function_36d10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36d10:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36d12() local_unnamed_addr {
dec_label_pc_36d12:
  %v0_36d13 = load i32, i32* @eax, align 8
  ret i32 %v0_36d13
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIS4_EEPS4_RT_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36d14:
  ret i32 %arg2
}

define i32 @function_36d25(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36d25:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_36d25 = load i32, i32* @ecx, align 8
  %v1_36d25 = add i32 %v0_36d25, 255
  %v0_36d27 = load i32, i32* @ebp, align 4
  %v1_36d27 = add i32 %v0_36d27, 1
  store i32 %v1_36d27, i32* %ebp.global-to-local, align 4
  %v1_36d28 = add i32 %v0_36d25, -1587159996
  %v2_36d28 = inttoptr i32 %v1_36d28 to i8*
  %v3_36d28 = load i8, i8* %v2_36d28, align 1
  %v5_36d28 = trunc i32 %v1_36d25 to i8
  %v6_36d28 = load i1, i1* @cf, align 1
  %v7_36d28 = zext i1 %v6_36d28 to i8
  %v8_36d28 = add i8 %v3_36d28, %v5_36d28
  %v9_36d28 = add i8 %v7_36d28, %v8_36d28
  %v27_36d28 = icmp ule i8 %v9_36d28, %v3_36d28
  %v28_36d28 = icmp ult i8 %v8_36d28, %v3_36d28
  %v29_36d28 = select i1 %v6_36d28, i1 %v27_36d28, i1 %v28_36d28
  store i1 %v29_36d28, i1* %cf.global-to-local, align 1
  store i8 %v9_36d28, i8* %v2_36d28, align 1
  %v0_36d2e = load i32, i32* @eax, align 8
  %v1_36d2e = trunc i32 %v0_36d2e to i8
  %v2_36d2e = load i1, i1* %cf.global-to-local, align 1
  %v3_36d2e = zext i1 %v2_36d2e to i8
  %v4_36d2e = add i8 %v3_36d2e, %v1_36d2e
  %v19_36d2e = icmp ule i8 %v4_36d2e, %v1_36d2e
  %v21_36d2e = icmp eq i1 %v2_36d2e, %v19_36d2e
  store i1 %v21_36d2e, i1* %cf.global-to-local, align 1
  %v22_36d2e = zext i8 %v4_36d2e to i32
  %v24_36d2e = and i32 %v0_36d2e, -256
  %v25_36d2e = or i32 %v22_36d2e, %v24_36d2e
  store i32 %v25_36d2e, i32* %eax.global-to-local, align 8
  %v1_36d30 = inttoptr i32 %v25_36d2e to i8*
  %v2_36d30 = load i8, i8* %v1_36d30, align 1
  %v5_36d30 = add i8 %v2_36d30, %v4_36d2e
  store i8 %v5_36d30, i8* %v1_36d30, align 1
  %v0_36d32 = load i32, i32* %eax.global-to-local, align 8
  %v1_36d32 = load i32, i32* %ebp.global-to-local, align 4
  %v2_36d32 = add i32 %v1_36d32, -12
  %v3_36d32 = inttoptr i32 %v2_36d32 to i32*
  store i32 %v0_36d32, i32* %v3_36d32, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_36d37 = load i32, i32* %ebp.global-to-local, align 4
  %v1_36d37 = add i32 %v0_36d37, -28
  %v2_36d37 = inttoptr i32 %v1_36d37 to i32*
  %v3_36d37 = load i32, i32* %v2_36d37, align 4
  store i32 %v3_36d37, i32* %eax.global-to-local, align 8
  %v1_36d3a = inttoptr i32 %v3_36d37 to i32*
  %v2_36d3a = load i32, i32* %v1_36d3a, align 4
  store i32 %v2_36d3a, i32* %eax.global-to-local, align 8
  ret i32 %v2_36d3a

; uselistorder directives
  uselistorder i8 %v4_36d2e, { 0, 2, 1 }
  uselistorder i8 %v1_36d2e, { 1, 0 }
  uselistorder i8 %v9_36d28, { 1, 0 }
  uselistorder i8 %v8_36d28, { 1, 0 }
  uselistorder i8 %v3_36d28, { 1, 2, 0 }
}

define i32 @function_36d46(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36d46:
  %v0_36d46 = call i32 @unknown_6edb0()
  store i32 %v0_36d46, i32* @eax, align 8
  %v0_36d4b = load i32, i32* @ebp, align 4
  %v1_36d4b = add i32 %v0_36d4b, -12
  %v2_36d4b = inttoptr i32 %v1_36d4b to i32*
  %v3_36d4b = load i32, i32* %v2_36d4b, align 4
  %v1_36d4e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36d4e = icmp eq i32 %v1_36d4e, %v3_36d4b
  br i1 %v3_36d4e, label %bb, label %dec_label_pc_36d57

bb:                                               ; preds = %dec_label_pc_36d46
  %v1_36d55 = call i32 @function_36d5c()
  br label %dec_label_pc_36d57

dec_label_pc_36d57:                               ; preds = %bb, %dec_label_pc_36d46
  %v2_36d55 = phi i32 [ %v1_36d55, %bb ], [ %v0_36d46, %dec_label_pc_36d46 ]
  ret i32 %v2_36d55
}

define i32 @function_36d5c() local_unnamed_addr {
dec_label_pc_36d5c:
  %v0_36d5d = load i32, i32* @eax, align 8
  ret i32 %v0_36d5d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKxEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36d5e:
  %v2_36d84 = load i32, i32* %arg1, align 4
  %v2_36d90 = call i32 @unknown_6ee36(i32 %v2_36d84, i32 %arg2)
  ret i32 %v2_36d90
}

define i32 @function_36d9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36d9e:
  %v0_36d9e = load i32, i32* @ebp, align 4
  %v1_36d9e = load i32, i32* @eax, align 8
  %v3_36d9e = add i32 %v0_36d9e, -24
  %v4_36d9e = add i32 %v3_36d9e, %v1_36d9e
  %v5_36d9e = inttoptr i32 %v4_36d9e to i8*
  %v6_36d9e = load i8, i8* %v5_36d9e, align 1
  %v7_36d9e = load i32, i32* @edx, align 4
  %v8_36d9e = udiv i32 %v7_36d9e, 256
  %v9_36d9e = trunc i32 %v8_36d9e to i8
  %v10_36d9e = add i8 %v9_36d9e, %v6_36d9e
  store i8 %v10_36d9e, i8* %v5_36d9e, align 1
  %v31_36d9e = load i32, i32* @eax, align 8
  ret i32 %v31_36d9e
}

define i32 @function_36da5() local_unnamed_addr {
dec_label_pc_36da5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36da5 = load i32, i32* %ecx.global-to-local, align 8
  %v1_36da5 = add i32 %v0_36da5, -1
  store i32 %v1_36da5, i32* %ecx.global-to-local, align 8
  %v0_36da7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36da7
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKdEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36da8:
  %v2_36dce = load i32, i32* %arg1, align 4
  %v2_36dda = call i32 @unknown_6eeb6(i32 %v2_36dce, i32 %arg2)
  ret i32 %v2_36dda
}

define i32 @function_36de8(i32 %arg1) local_unnamed_addr {
dec_label_pc_36de8:
  %v0_36de8 = load i32, i32* @ebp, align 4
  %v1_36de8 = load i32, i32* @eax, align 8
  %v3_36de8 = add i32 %v0_36de8, -24
  %v4_36de8 = add i32 %v3_36de8, %v1_36de8
  %v5_36de8 = inttoptr i32 %v4_36de8 to i8*
  %v6_36de8 = load i8, i8* %v5_36de8, align 1
  %v7_36de8 = load i32, i32* @edx, align 4
  %v8_36de8 = udiv i32 %v7_36de8, 256
  %v9_36de8 = trunc i32 %v8_36de8 to i8
  %v10_36de8 = add i8 %v9_36de8, %v6_36de8
  store i8 %v10_36de8, i8* %v5_36de8, align 1
  %v31_36de8 = load i32, i32* @eax, align 8
  ret i32 %v31_36de8
}

define i32 @function_36def() local_unnamed_addr {
dec_label_pc_36def:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36def = load i32, i32* %ecx.global-to-local, align 8
  %v1_36def = add i32 %v0_36def, -1
  store i32 %v1_36def, i32* %ecx.global-to-local, align 8
  %v0_36df1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36df1
}

define i32 @_ZN5boost14static_visitorIiEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_36df2:
  %v0_36dfe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36e0f = call i32 @unknown_4cd20(i32 %arg1)
  ret i32 %v0_36dfe
}

define i32 @function_36e1a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36e1a:
  %zf.global-to-local = alloca i1, align 1
  %v0_36e1a = load i32, i32* @eax, align 8
  %v1_36e1a = trunc i32 %v0_36e1a to i8
  %v2_36e1a = load i1, i1* @cf, align 1
  %v3_36e1a = zext i1 %v2_36e1a to i8
  %v4_36e1a = add i8 %v3_36e1a, %v1_36e1a
  %v13_36e1a = icmp eq i8 %v4_36e1a, 0
  store i1 %v13_36e1a, i1* %zf.global-to-local, align 1
  %v22_36e1a = zext i8 %v4_36e1a to i32
  %v24_36e1a = and i32 %v0_36e1a, -256
  %v25_36e1a = or i32 %v22_36e1a, %v24_36e1a
  store i32 %v25_36e1a, i32* @eax, align 8
  %v1_36e1c = inttoptr i32 %v25_36e1a to i8*
  %v2_36e1c = load i8, i8* %v1_36e1c, align 1
  %v5_36e1c = add i8 %v2_36e1c, %v4_36e1a
  %v15_36e1c = icmp eq i8 %v5_36e1c, 0
  store i1 %v15_36e1c, i1* %zf.global-to-local, align 1
  store i8 %v5_36e1c, i8* %v1_36e1c, align 1
  %v0_36e1e = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_36e1e, label %bb, label %dec_label_pc_36e1a.dec_label_pc_36e20_crit_edge

dec_label_pc_36e1a.dec_label_pc_36e20_crit_edge:  ; preds = %dec_label_pc_36e1a
  %v2_36e1e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_36e20

bb:                                               ; preds = %dec_label_pc_36e1a
  %v1_36e1e = call i32 @function_36e25()
  br label %dec_label_pc_36e20

dec_label_pc_36e20:                               ; preds = %dec_label_pc_36e1a.dec_label_pc_36e20_crit_edge, %bb
  %v2_36e1e = phi i32 [ %v2_36e1e.pre, %dec_label_pc_36e1a.dec_label_pc_36e20_crit_edge ], [ %v1_36e1e, %bb ]
  ret i32 %v2_36e1e

; uselistorder directives
  uselistorder label %dec_label_pc_36e20, { 1, 0 }
}

define i32 @function_36e25() local_unnamed_addr {
dec_label_pc_36e25:
  %v0_36e26 = load i32, i32* @eax, align 8
  ret i32 %v0_36e26
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E27internal_apply_visitor_implINSJ_17convert_copy_intoEPvEENT_11result_typeEiiRSN_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36e27:
  ret i32 0
}

define i32 @function_36e64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36e64:
  %v0_36e64 = load i32, i32* @edx, align 4
  %v0_36e68 = load i32, i32* @ebp, align 4
  %v1_36e68 = add i32 %v0_36e68, -40
  %v2_36e68 = inttoptr i32 %v1_36e68 to i32*
  %v3_36e68 = load i32, i32* %v2_36e68, align 4
  %v1_36e6f = add i32 %v0_36e68, -36
  %v2_36e6f = inttoptr i32 %v1_36e6f to i32*
  %v3_36e6f = load i32, i32* %v2_36e6f, align 4
  %v1_36e76 = add i32 %v0_36e68, -32
  %v2_36e76 = inttoptr i32 %v1_36e76 to i32*
  %v3_36e76 = load i32, i32* %v2_36e76, align 4
  %v1_36e7d = add i32 %v0_36e68, -28
  %v2_36e7d = inttoptr i32 %v1_36e7d to i32*
  %v3_36e7d = load i32, i32* %v2_36e7d, align 4
  %sext = mul i32 %v0_36e64, 16777216
  %v5_36e83 = sdiv i32 %sext, 16777216
  %v6_36e83 = call i32 @unknown_6ef6a(i32 %v3_36e7d, i32 %v3_36e76, i32 %v3_36e6f, i32 %v3_36e68, i32 %v5_36e83)
  store i32 %v6_36e83, i32* @eax, align 8
  %v0_36e88 = load i32, i32* @ebp, align 4
  %v1_36e88 = add i32 %v0_36e88, -12
  %v2_36e88 = inttoptr i32 %v1_36e88 to i32*
  %v3_36e88 = load i32, i32* %v2_36e88, align 4
  %v1_36e8b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36e8b = xor i32 %v1_36e8b, %v3_36e88
  %v3_36e8b = icmp eq i32 %v2_36e8b, 0
  store i32 %v2_36e8b, i32* @edx, align 4
  br i1 %v3_36e8b, label %bb, label %dec_label_pc_36e94

bb:                                               ; preds = %dec_label_pc_36e64
  %v1_36e92 = call i32 @function_36e99()
  br label %dec_label_pc_36e94

dec_label_pc_36e94:                               ; preds = %bb, %dec_label_pc_36e64
  %v2_36e92 = phi i32 [ %v1_36e92, %bb ], [ %v6_36e83, %dec_label_pc_36e64 ]
  ret i32 %v2_36e92

; uselistorder directives
  uselistorder i32 %v0_36e68, { 1, 0, 2, 3 }
}

define i32 @function_36e99() local_unnamed_addr {
dec_label_pc_36e99:
  %v0_36e9a = load i32, i32* @eax, align 8
  ret i32 %v0_36e9a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvSsNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_36e9b:
  ret i32 %arg1
}

define i32 @function_36ea4() local_unnamed_addr {
dec_label_pc_36ea4:
  %v0_36ea4 = load i32, i32* @eax, align 8
  %v1_36ea4 = load i32, i32* @ebp, align 4
  %v2_36ea4 = add i32 %v1_36ea4, -28
  %v3_36ea4 = inttoptr i32 %v2_36ea4 to i32*
  store i32 %v0_36ea4, i32* %v3_36ea4, align 4
  %v0_36ea7 = load i32, i32* @ebp, align 4
  %v1_36ea7 = add i32 %v0_36ea7, 12
  %v2_36ea7 = inttoptr i32 %v1_36ea7 to i32*
  %v3_36ea7 = load i32, i32* %v2_36ea7, align 4
  %v2_36eaa = add i32 %v0_36ea7, -32
  %v3_36eaa = inttoptr i32 %v2_36eaa to i32*
  store i32 %v3_36ea7, i32* %v3_36eaa, align 4
  %v0_36ead = load i32, i32* @ebp, align 4
  %v1_36ead = add i32 %v0_36ead, 16
  %v2_36ead = inttoptr i32 %v1_36ead to i32*
  %v3_36ead = load i32, i32* %v2_36ead, align 4
  %v2_36eb0 = add i32 %v0_36ead, -36
  %v3_36eb0 = inttoptr i32 %v2_36eb0 to i32*
  store i32 %v3_36ead, i32* %v3_36eb0, align 4
  %v0_36eb3 = load i32, i32* @ebp, align 4
  %v1_36eb3 = add i32 %v0_36eb3, 20
  %v2_36eb3 = inttoptr i32 %v1_36eb3 to i32*
  %v3_36eb3 = load i32, i32* %v2_36eb3, align 4
  %v2_36eb6 = add i32 %v0_36eb3, -40
  %v3_36eb6 = inttoptr i32 %v2_36eb6 to i32*
  store i32 %v3_36eb3, i32* %v3_36eb6, align 4
  %v0_36eb9 = load i32, i32* @ebp, align 4
  %v1_36eb9 = add i32 %v0_36eb9, 24
  %v2_36eb9 = inttoptr i32 %v1_36eb9 to i8*
  %v3_36eb9 = load i8, i8* %v2_36eb9, align 1
  %v3_36ebd = add i32 %v0_36eb9, -41
  %v4_36ebd = inttoptr i32 %v3_36ebd to i8*
  store i8 %v3_36eb9, i8* %v4_36ebd, align 1
  %v0_36ec0 = load i32, i32* @ebp, align 4
  %v1_36ec0 = add i32 %v0_36ec0, 28
  %v2_36ec0 = inttoptr i32 %v1_36ec0 to i32*
  %v3_36ec0 = load i32, i32* %v2_36ec0, align 4
  %v2_36ec3 = add i32 %v0_36ec0, -48
  %v3_36ec3 = inttoptr i32 %v2_36ec3 to i32*
  store i32 %v3_36ec0, i32* %v3_36ec3, align 4
  %v0_36ec6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36ecc = load i32, i32* @ebp, align 4
  %v2_36ecc = add i32 %v1_36ecc, -12
  %v3_36ecc = inttoptr i32 %v2_36ecc to i32*
  store i32 %v0_36ec6, i32* %v3_36ecc, align 4
  %v0_36ed5 = load i32, i32* @ebp, align 4
  %v1_36ee3 = add i32 %v0_36ed5, -32
  %v2_36ee3 = inttoptr i32 %v1_36ee3 to i32*
  %v3_36ee3 = load i32, i32* %v2_36ee3, align 4
  ret i32 %v3_36ee3
}

define i32 @function_36ee6() local_unnamed_addr {
dec_label_pc_36ee6:
  %v0_36ee6 = load i32, i32* @eax, align 8
  %v0_36eea = load i32, i32* @ebp, align 4
  %v1_36eea = add i32 %v0_36eea, -28
  %v2_36eea = inttoptr i32 %v1_36eea to i32*
  %v3_36eea = load i32, i32* %v2_36eea, align 4
  %v2_36ef0 = call i32 @unknown_6f50b(i32 %v3_36eea, i32 %v0_36ee6)
  %v0_36ef5 = load i32, i32* @ebp, align 4
  %v1_36ef5 = add i32 %v0_36ef5, -12
  %v2_36ef5 = inttoptr i32 %v1_36ef5 to i32*
  %v3_36ef5 = load i32, i32* %v2_36ef5, align 4
  %v1_36ef8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36ef8 = xor i32 %v1_36ef8, %v3_36ef5
  %v3_36ef8 = icmp eq i32 %v2_36ef8, 0
  store i32 %v2_36ef8, i32* @eax, align 8
  br i1 %v3_36ef8, label %bb, label %dec_label_pc_36f01

bb:                                               ; preds = %dec_label_pc_36ee6
  %v1_36eff = call i32 @function_36f06()
  br label %dec_label_pc_36f01

dec_label_pc_36f01:                               ; preds = %bb, %dec_label_pc_36ee6
  %v2_36eff = phi i32 [ %v1_36eff, %bb ], [ %v2_36ef8, %dec_label_pc_36ee6 ]
  ret i32 %v2_36eff
}

define i32 @function_36f06() local_unnamed_addr {
dec_label_pc_36f06:
  %v0_36f07 = load i32, i32* @eax, align 8
  ret i32 %v0_36f07
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsSE_NS5_IS6_INS7_10Value_implISA_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_36f08:
  %edx.global-to-local = alloca i32, align 4
  %v0_36f33 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_36f3e = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_36f3e, 16777216
  %v5_36f5d = sdiv i32 %sext, 16777216
  %v6_36f5d = call i32 @unknown_6f5dd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_36f5d)
  ret i32 %v0_36f33
}

define i32 @function_36f66() local_unnamed_addr {
dec_label_pc_36f66:
  %v0_36f66 = load i32, i32* @eax, align 8
  %v1_36f66 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36f66 = xor i32 %v1_36f66, %v0_36f66
  %v3_36f66 = icmp eq i32 %v2_36f66, 0
  store i32 %v2_36f66, i32* @eax, align 8
  br i1 %v3_36f66, label %bb, label %dec_label_pc_36f6e

bb:                                               ; preds = %dec_label_pc_36f66
  %v1_36f6c = call i32 @function_36f73()
  br label %dec_label_pc_36f6e

dec_label_pc_36f6e:                               ; preds = %bb, %dec_label_pc_36f66
  %v2_36f6c = phi i32 [ %v1_36f6c, %bb ], [ %v2_36f66, %dec_label_pc_36f66 ]
  ret i32 %v2_36f6c
}

define i32 @function_36f73() local_unnamed_addr {
dec_label_pc_36f73:
  %v0_36f74 = load i32, i32* @eax, align 8
  ret i32 %v0_36f74
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEENS_7variantISsNS5_IS6_INS7_9Pair_implISA_EESaISH_EEEESE_bxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_36f75:
  %edx.global-to-local = alloca i32, align 4
  %v0_36fab = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_36fab, 16777216
  %v5_36fca = sdiv i32 %sext, 16777216
  %v6_36fca = call i32 @unknown_6f6af(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_36fca)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_36fdb

bb:                                               ; preds = %dec_label_pc_36f75
  %v1_36fd9 = call i32 @function_36fe0()
  br label %dec_label_pc_36fdb

dec_label_pc_36fdb:                               ; preds = %bb, %dec_label_pc_36f75
  %v2_36fd9 = phi i32 [ %v1_36fd9, %bb ], [ 0, %dec_label_pc_36f75 ]
  ret i32 %v2_36fd9
}

define i32 @function_36fe0() local_unnamed_addr {
dec_label_pc_36fe0:
  %v0_36fe1 = load i32, i32* @eax, align 8
  ret i32 %v0_36fe1
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvbNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_36fe2:
  %edx.global-to-local = alloca i32, align 4
  %v0_37018 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_37018, 16777216
  %v5_37037 = sdiv i32 %sext, 16777216
  %v6_37037 = call i32 @unknown_6f781(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_37037)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_37048

bb:                                               ; preds = %dec_label_pc_36fe2
  %v1_37046 = call i32 @function_3704d()
  br label %dec_label_pc_37048

dec_label_pc_37048:                               ; preds = %bb, %dec_label_pc_36fe2
  %v2_37046 = phi i32 [ %v1_37046, %bb ], [ 0, %dec_label_pc_36fe2 ]
  ret i32 %v2_37046
}

define i32 @function_3704d() local_unnamed_addr {
dec_label_pc_3704d:
  %v0_3704e = load i32, i32* @eax, align 8
  ret i32 %v0_3704e
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvxNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_3704f:
  %edx.global-to-local = alloca i32, align 4
  %v0_37085 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_37085, 16777216
  %v5_370a4 = sdiv i32 %sext, 16777216
  %v6_370a4 = call i32 @unknown_6f853(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_370a4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_370b5

bb:                                               ; preds = %dec_label_pc_3704f
  %v1_370b3 = call i32 @function_370ba()
  br label %dec_label_pc_370b5

dec_label_pc_370b5:                               ; preds = %bb, %dec_label_pc_3704f
  %v2_370b3 = phi i32 [ %v1_370b3, %bb ], [ 0, %dec_label_pc_3704f ]
  ret i32 %v2_370b3
}

define i32 @function_370ba() local_unnamed_addr {
dec_label_pc_370ba:
  %v0_370bb = load i32, i32* @eax, align 8
  ret i32 %v0_370bb
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvdNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_370bc:
  %eax.global-to-local = alloca i32, align 4
  %v17_370bf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_370bf
}

define i32 @function_370c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_370c2:
  %v0_370c2 = load i32, i32* @ebp, align 4
  %v1_370c2 = add i32 %v0_370c2, 8
  %v2_370c2 = inttoptr i32 %v1_370c2 to i32*
  %v3_370c2 = load i32, i32* %v2_370c2, align 4
  %v2_370c5 = add i32 %v0_370c2, -28
  %v3_370c5 = inttoptr i32 %v2_370c5 to i32*
  store i32 %v3_370c2, i32* %v3_370c5, align 4
  %v0_370c8 = load i32, i32* @ebp, align 4
  %v1_370c8 = add i32 %v0_370c8, 12
  %v2_370c8 = inttoptr i32 %v1_370c8 to i32*
  %v3_370c8 = load i32, i32* %v2_370c8, align 4
  %v2_370cb = add i32 %v0_370c8, -32
  %v3_370cb = inttoptr i32 %v2_370cb to i32*
  store i32 %v3_370c8, i32* %v3_370cb, align 4
  %v0_370ce = load i32, i32* @ebp, align 4
  %v1_370ce = add i32 %v0_370ce, 16
  %v2_370ce = inttoptr i32 %v1_370ce to i32*
  %v3_370ce = load i32, i32* %v2_370ce, align 4
  %v2_370d1 = add i32 %v0_370ce, -36
  %v3_370d1 = inttoptr i32 %v2_370d1 to i32*
  store i32 %v3_370ce, i32* %v3_370d1, align 4
  %v0_370d4 = load i32, i32* @ebp, align 4
  %v1_370d4 = add i32 %v0_370d4, 20
  %v2_370d4 = inttoptr i32 %v1_370d4 to i32*
  %v3_370d4 = load i32, i32* %v2_370d4, align 4
  %v2_370d7 = add i32 %v0_370d4, -40
  %v3_370d7 = inttoptr i32 %v2_370d7 to i32*
  store i32 %v3_370d4, i32* %v3_370d7, align 4
  %v0_370da = load i32, i32* @ebp, align 4
  %v1_370da = add i32 %v0_370da, 24
  %v2_370da = inttoptr i32 %v1_370da to i8*
  %v3_370da = load i8, i8* %v2_370da, align 1
  %v3_370de = add i32 %v0_370da, -41
  %v4_370de = inttoptr i32 %v3_370de to i8*
  store i8 %v3_370da, i8* %v4_370de, align 1
  %v0_370e1 = load i32, i32* @ebp, align 4
  %v1_370e1 = add i32 %v0_370e1, 28
  %v2_370e1 = inttoptr i32 %v1_370e1 to i32*
  %v3_370e1 = load i32, i32* %v2_370e1, align 4
  %v2_370e4 = add i32 %v0_370e1, -48
  %v3_370e4 = inttoptr i32 %v2_370e4 to i32*
  store i32 %v3_370e1, i32* %v3_370e4, align 4
  %v0_370e7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_370ed = load i32, i32* @ebp, align 4
  %v2_370ed = add i32 %v1_370ed, -12
  %v3_370ed = inttoptr i32 %v2_370ed to i32*
  store i32 %v0_370e7, i32* %v3_370ed, align 4
  %v0_370f2 = load i32, i32* @edx, align 4
  %v0_370f6 = load i32, i32* @ebp, align 4
  %v1_370f6 = add i32 %v0_370f6, -40
  %v2_370f6 = inttoptr i32 %v1_370f6 to i32*
  %v3_370f6 = load i32, i32* %v2_370f6, align 4
  %v1_370fd = add i32 %v0_370f6, -36
  %v2_370fd = inttoptr i32 %v1_370fd to i32*
  %v3_370fd = load i32, i32* %v2_370fd, align 4
  %v1_37104 = add i32 %v0_370f6, -32
  %v2_37104 = inttoptr i32 %v1_37104 to i32*
  %v3_37104 = load i32, i32* %v2_37104, align 4
  %v1_3710b = add i32 %v0_370f6, -28
  %v2_3710b = inttoptr i32 %v1_3710b to i32*
  %v3_3710b = load i32, i32* %v2_3710b, align 4
  %sext = mul i32 %v0_370f2, 16777216
  %v5_37111 = sdiv i32 %sext, 16777216
  %v6_37111 = call i32 @unknown_6f925(i32 %v3_3710b, i32 %v3_37104, i32 %v3_370fd, i32 %v3_370f6, i32 %v5_37111)
  %v0_37116 = load i32, i32* @ebp, align 4
  %v1_37116 = add i32 %v0_37116, -12
  %v2_37116 = inttoptr i32 %v1_37116 to i32*
  %v3_37116 = load i32, i32* %v2_37116, align 4
  %v1_37119 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37119 = xor i32 %v1_37119, %v3_37116
  %v3_37119 = icmp eq i32 %v2_37119, 0
  store i32 %v2_37119, i32* @eax, align 8
  br i1 %v3_37119, label %bb, label %dec_label_pc_37122

bb:                                               ; preds = %dec_label_pc_370c2
  %v1_37120 = call i32 @function_37127()
  br label %dec_label_pc_37122

dec_label_pc_37122:                               ; preds = %bb, %dec_label_pc_370c2
  %v2_37120 = phi i32 [ %v1_37120, %bb ], [ %v2_37119, %dec_label_pc_370c2 ]
  ret i32 %v2_37120

; uselistorder directives
  uselistorder i32 %v0_370f6, { 1, 0, 2, 3 }
}

define i32 @function_37127() local_unnamed_addr {
dec_label_pc_37127:
  %v0_37128 = load i32, i32* @eax, align 8
  ret i32 %v0_37128
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS8_13Config_vectorISsEEEESaISC_EEEENS6_IS7_INS8_10Value_implISB_EESaISH_EEEEbxdNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT_11result_typeEiRSO_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_37129:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14assign_storageEPvNS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSH_13Config_vectorISsEEEESaISL_EEEENSF_ISG_INSH_10Value_implISK_EESaISQ_EEEEbxdNS1_5void_ESU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_E18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_37183:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSsNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_371ea:
  ret i32 %arg4
}

define i32 @function_3720a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3720a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3720a = load i32, i32* @ebp, align 4
  %v1_3720a = add i32 %v0_3720a, 1
  store i32 %v1_3720a, i32* %ebp.global-to-local, align 4
  %v0_3720b = load i32, i32* @eax, align 8
  %v1_3720b = add i32 %v0_3720b, 1166792517
  %v2_3720b = inttoptr i32 %v1_3720b to i8*
  %v3_3720b = load i8, i8* %v2_3720b, align 1
  %v4_3720b = load i32, i32* @ecx, align 8
  %v5_3720b = trunc i32 %v4_3720b to i8
  %v6_3720b = load i1, i1* @cf, align 1
  %v7_3720b = zext i1 %v6_3720b to i8
  %v8_3720b = sub i8 %v3_3720b, %v5_3720b
  %v9_3720b = add i8 %v8_3720b, %v7_3720b
  %v19_3720b = sub i8 %v8_3720b, %v7_3720b
  %v20_3720b = icmp ult i8 %v3_3720b, %v19_3720b
  %v21_3720b = icmp ne i8 %v5_3720b, -1
  %v22_3720b = or i1 %v21_3720b, %v20_3720b
  %v23_3720b = icmp ult i8 %v3_3720b, %v5_3720b
  %v24_3720b = select i1 %v6_3720b, i1 %v22_3720b, i1 %v23_3720b
  store i1 %v24_3720b, i1* %cf.global-to-local, align 1
  store i8 %v9_3720b, i8* %v2_3720b, align 1
  %v0_37211 = load i32, i32* @eax, align 8
  %v1_37211 = trunc i32 %v0_37211 to i8
  %v2_37211 = load i1, i1* %cf.global-to-local, align 1
  %v3_37211 = zext i1 %v2_37211 to i32
  %v4_37211 = add i32 %v0_37211, 119
  %v5_37211 = add i32 %v4_37211, %v3_37211
  %v17_37211 = icmp ult i8 %v1_37211, -119
  %v18_37211 = or i1 %v2_37211, %v17_37211
  store i1 %v18_37211, i1* %cf.global-to-local, align 1
  %v31_37211 = urem i32 %v5_37211, 256
  %v33_37211 = and i32 %v0_37211, -256
  %v34_37211 = or i32 %v31_37211, %v33_37211
  store i32 %v34_37211, i32* %eax.global-to-local, align 8
  %v0_37213 = load i32, i32* %ebp.global-to-local, align 4
  %v1_37213 = add i32 %v0_37213, 1
  store i32 %v1_37213, i32* @ebp, align 4
  %v1_37214 = add i32 %v0_37213, -94
  %v2_37214 = inttoptr i32 %v1_37214 to i8*
  %v3_37214 = load i8, i8* %v2_37214, align 1
  %v5_37214 = mul i8 %v3_37214, 2
  store i8 %v5_37214, i8* %v2_37214, align 1
  %v16_37214 = icmp slt i8 %v3_37214, 0
  %v0_37217 = load i32, i32* %eax.global-to-local, align 8
  %v1_37217 = trunc i32 %v0_37217 to i8
  %v3_37217 = zext i1 %v16_37214 to i8
  %v4_37217 = add i8 %v1_37217, %v3_37217
  %v19_37217 = icmp ule i8 %v4_37217, %v1_37217
  %v21_37217 = icmp eq i1 %v16_37214, %v19_37217
  store i1 %v21_37217, i1* %cf.global-to-local, align 1
  %v22_37217 = zext i8 %v4_37217 to i32
  %v24_37217 = and i32 %v0_37217, -256
  %v25_37217 = or i32 %v22_37217, %v24_37217
  store i32 %v25_37217, i32* %eax.global-to-local, align 8
  %v1_37219 = inttoptr i32 %v25_37217 to i8*
  %v2_37219 = load i8, i8* %v1_37219, align 1
  %v5_37219 = add i8 %v2_37219, %v4_37217
  store i8 %v5_37219, i8* %v1_37219, align 1
  %v0_3721b = load i32, i32* %eax.global-to-local, align 8
  %v1_3721b = load i32, i32* @ebp, align 4
  %v2_3721b = add i32 %v1_3721b, -12
  %v3_3721b = inttoptr i32 %v2_3721b to i32*
  store i32 %v0_3721b, i32* %v3_3721b, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_37220 = load i32, i32* @edx, align 4
  %v0_37224 = load i32, i32* @ebp, align 4
  %v1_37224 = add i32 %v0_37224, -40
  %v2_37224 = inttoptr i32 %v1_37224 to i32*
  %v3_37224 = load i32, i32* %v2_37224, align 4
  store i32 %v3_37224, i32* %eax.global-to-local, align 8
  %v1_3722b = add i32 %v0_37224, -36
  %v2_3722b = inttoptr i32 %v1_3722b to i32*
  %v3_3722b = load i32, i32* %v2_3722b, align 4
  store i32 %v3_3722b, i32* %eax.global-to-local, align 8
  %v1_37232 = add i32 %v0_37224, -32
  %v2_37232 = inttoptr i32 %v1_37232 to i32*
  %v3_37232 = load i32, i32* %v2_37232, align 4
  store i32 %v3_37232, i32* %eax.global-to-local, align 8
  %v1_37239 = add i32 %v0_37224, -28
  %v2_37239 = inttoptr i32 %v1_37239 to i32*
  %v3_37239 = load i32, i32* %v2_37239, align 4
  store i32 %v3_37239, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_37220, 16777216
  %v5_3723f = sdiv i32 %sext, 16777216
  %v6_3723f = call i32 @unknown_6fab8(i32 %v3_37239, i32 %v3_37232, i32 %v3_3722b, i32 %v3_37224, i32 %v5_3723f)
  store i32 %v6_3723f, i32* %eax.global-to-local, align 8
  %v0_37244 = load i32, i32* @ebp, align 4
  %v1_37244 = add i32 %v0_37244, -12
  %v2_37244 = inttoptr i32 %v1_37244 to i32*
  %v3_37244 = load i32, i32* %v2_37244, align 4
  store i32 %v3_37244, i32* %eax.global-to-local, align 8
  %v1_37247 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37247 = xor i32 %v1_37247, %v3_37244
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_37247 = icmp eq i32 %v2_37247, 0
  store i32 %v2_37247, i32* @eax, align 8
  br i1 %v3_37247, label %bb, label %dec_label_pc_37250

bb:                                               ; preds = %dec_label_pc_3720a
  %v1_3724e = call i32 @function_37255()
  store i32 %v1_3724e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_37250

dec_label_pc_37250:                               ; preds = %bb, %dec_label_pc_3720a
  %v2_3724e = phi i32 [ %v1_3724e, %bb ], [ %v2_37247, %dec_label_pc_3720a ]
  ret i32 %v2_3724e

; uselistorder directives
  uselistorder i32 %v0_37224, { 1, 0, 2, 3 }
  uselistorder i8 %v4_37217, { 0, 2, 1 }
  uselistorder i8 %v1_37217, { 1, 0 }
  uselistorder i8 %v3_37214, { 1, 0 }
  uselistorder i1 %v2_37211, { 1, 0 }
  uselistorder i32 %v0_37211, { 1, 0, 2 }
  uselistorder i8 %v5_3720b, { 1, 0, 2 }
}

define i32 @function_37255() local_unnamed_addr {
dec_label_pc_37255:
  %v0_37256 = load i32, i32* @eax, align 8
  ret i32 %v0_37256
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSD_NSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_37257:
  %edx.global-to-local = alloca i32, align 4
  %v0_3728d = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_3728d, 16777216
  %v5_372ac = sdiv i32 %sext, 16777216
  %v6_372ac = call i32 @unknown_6fb8a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_372ac)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_372bd

bb:                                               ; preds = %dec_label_pc_37257
  %v1_372bb = call i32 @function_372c2()
  br label %dec_label_pc_372bd

dec_label_pc_372bd:                               ; preds = %bb, %dec_label_pc_37257
  %v2_372bb = phi i32 [ %v1_372bb, %bb ], [ 0, %dec_label_pc_37257 ]
  ret i32 %v2_372bb
}

define i32 @function_372c2() local_unnamed_addr {
dec_label_pc_372c2:
  %v0_372c3 = load i32, i32* @eax, align 8
  ret i32 %v0_372c3
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSI_NSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_372c4:
  ret i32 %arg6
}

define i32 @function_372ee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_372ee:
  %eax.global-to-local = alloca i32, align 4
  %v0_372ee = load i32, i32* @ebp, align 4
  %v1_372ee = add i32 %v0_372ee, -95
  %v2_372ee = inttoptr i32 %v1_372ee to i8*
  %v3_372ee = load i8, i8* %v2_372ee, align 1
  %v5_372ee = mul i8 %v3_372ee, 2
  store i8 %v5_372ee, i8* %v2_372ee, align 1
  %v16_372ee = icmp slt i8 %v3_372ee, 0
  %v0_372f1 = load i32, i32* @eax, align 8
  %v1_372f1 = trunc i32 %v0_372f1 to i8
  %v3_372f1 = zext i1 %v16_372ee to i8
  %v4_372f1 = add i8 %v1_372f1, %v3_372f1
  %v22_372f1 = zext i8 %v4_372f1 to i32
  %v24_372f1 = and i32 %v0_372f1, -256
  %v25_372f1 = or i32 %v22_372f1, %v24_372f1
  store i32 %v25_372f1, i32* %eax.global-to-local, align 8
  %v1_372f3 = inttoptr i32 %v25_372f1 to i8*
  %v2_372f3 = load i8, i8* %v1_372f3, align 1
  %v5_372f3 = add i8 %v2_372f3, %v4_372f1
  store i8 %v5_372f3, i8* %v1_372f3, align 1
  %v0_372f5 = load i32, i32* %eax.global-to-local, align 8
  %v1_372f5 = load i32, i32* @ebp, align 4
  %v2_372f5 = add i32 %v1_372f5, -12
  %v3_372f5 = inttoptr i32 %v2_372f5 to i32*
  store i32 %v0_372f5, i32* %v3_372f5, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_372fa = load i32, i32* @edx, align 4
  %v0_372fe = load i32, i32* @ebp, align 4
  %v1_372fe = add i32 %v0_372fe, -40
  %v2_372fe = inttoptr i32 %v1_372fe to i32*
  %v3_372fe = load i32, i32* %v2_372fe, align 4
  store i32 %v3_372fe, i32* %eax.global-to-local, align 8
  %v1_37305 = add i32 %v0_372fe, -36
  %v2_37305 = inttoptr i32 %v1_37305 to i32*
  %v3_37305 = load i32, i32* %v2_37305, align 4
  store i32 %v3_37305, i32* %eax.global-to-local, align 8
  %v1_3730c = add i32 %v0_372fe, -32
  %v2_3730c = inttoptr i32 %v1_3730c to i32*
  %v3_3730c = load i32, i32* %v2_3730c, align 4
  store i32 %v3_3730c, i32* %eax.global-to-local, align 8
  %v1_37313 = add i32 %v0_372fe, -28
  %v2_37313 = inttoptr i32 %v1_37313 to i32*
  %v3_37313 = load i32, i32* %v2_37313, align 4
  store i32 %v3_37313, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_372fa, 16777216
  %v5_37319 = sdiv i32 %sext, 16777216
  %v6_37319 = call i32 @unknown_6fc5c(i32 %v3_37313, i32 %v3_3730c, i32 %v3_37305, i32 %v3_372fe, i32 %v5_37319)
  store i32 %v6_37319, i32* %eax.global-to-local, align 8
  %v0_3731e = load i32, i32* @ebp, align 4
  %v1_3731e = add i32 %v0_3731e, -12
  %v2_3731e = inttoptr i32 %v1_3731e to i32*
  %v3_3731e = load i32, i32* %v2_3731e, align 4
  store i32 %v3_3731e, i32* %eax.global-to-local, align 8
  %v1_37321 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37321 = xor i32 %v1_37321, %v3_3731e
  %v3_37321 = icmp eq i32 %v2_37321, 0
  store i32 %v2_37321, i32* @eax, align 8
  br i1 %v3_37321, label %bb, label %dec_label_pc_3732a

bb:                                               ; preds = %dec_label_pc_372ee
  %v1_37328 = call i32 @function_3732f()
  store i32 %v1_37328, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3732a

dec_label_pc_3732a:                               ; preds = %bb, %dec_label_pc_372ee
  %v2_37328 = phi i32 [ %v1_37328, %bb ], [ %v2_37321, %dec_label_pc_372ee ]
  ret i32 %v2_37328

; uselistorder directives
  uselistorder i32 %v0_372fe, { 1, 0, 2, 3 }
  uselistorder i8 %v3_372ee, { 1, 0 }
}

define i32 @function_3732f() local_unnamed_addr {
dec_label_pc_3732f:
  %v0_37330 = load i32, i32* @eax, align 8
  ret i32 %v0_37330
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvbNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_37331:
  ret i32 %arg4
}

define i32 @function_37370(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37370:
  %v0_37372 = load i32, i32* @ebp, align 4
  %v1_37372 = add i32 %v0_37372, -36
  %v2_37372 = inttoptr i32 %v1_37372 to i32*
  %v3_37372 = load i32, i32* %v2_37372, align 4
  %v1_37379 = add i32 %v0_37372, -32
  %v2_37379 = inttoptr i32 %v1_37379 to i32*
  %v3_37379 = load i32, i32* %v2_37379, align 4
  %v1_37380 = add i32 %v0_37372, -28
  %v2_37380 = inttoptr i32 %v1_37380 to i32*
  %v3_37380 = load i32, i32* %v2_37380, align 4
  %v3_37386 = call i32 @unknown_6fd2e(i32 %v3_37380, i32 %v3_37379, i32 %v3_37372)
  %v0_3738b = load i32, i32* @ebp, align 4
  %v1_3738b = add i32 %v0_3738b, -12
  %v2_3738b = inttoptr i32 %v1_3738b to i32*
  %v3_3738b = load i32, i32* %v2_3738b, align 4
  %v1_3738e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3738e = xor i32 %v1_3738e, %v3_3738b
  %v3_3738e = icmp eq i32 %v2_3738e, 0
  store i32 %v2_3738e, i32* @eax, align 8
  br i1 %v3_3738e, label %bb, label %dec_label_pc_37397

bb:                                               ; preds = %dec_label_pc_37370
  %v1_37395 = call i32 @function_3739c()
  br label %dec_label_pc_37397

dec_label_pc_37397:                               ; preds = %bb, %dec_label_pc_37370
  %v2_37395 = phi i32 [ %v1_37395, %bb ], [ %v2_3738e, %dec_label_pc_37370 ]
  ret i32 %v2_37395
}

define i32 @function_3739c() local_unnamed_addr {
dec_label_pc_3739c:
  %v0_3739d = load i32, i32* @eax, align 8
  ret i32 %v0_3739d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvxNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3739e:
  ret i32 %arg4
}

define i32 @function_373bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_373bd:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_373bd = load i32, i32* @edx, align 4
  %v1_373bd = and i32 %v0_373bd, -65281
  %v2_373bd = or i32 %v1_373bd, 17664
  store i32 %v2_373bd, i32* %edx.global-to-local, align 4
  %v0_373bf = load i32, i32* @eax, align 8
  %v1_373bf = add i32 %v0_373bf, 1166792517
  %v2_373bf = inttoptr i32 %v1_373bf to i8*
  %v3_373bf = load i8, i8* %v2_373bf, align 1
  %v4_373bf = load i32, i32* @ecx, align 8
  %v5_373bf = trunc i32 %v4_373bf to i8
  %v6_373bf = load i1, i1* @cf, align 1
  %v7_373bf = zext i1 %v6_373bf to i8
  %v8_373bf = sub i8 %v3_373bf, %v5_373bf
  %v9_373bf = add i8 %v8_373bf, %v7_373bf
  %v19_373bf = sub i8 %v8_373bf, %v7_373bf
  %v20_373bf = icmp ult i8 %v3_373bf, %v19_373bf
  %v21_373bf = icmp ne i8 %v5_373bf, -1
  %v22_373bf = or i1 %v21_373bf, %v20_373bf
  %v23_373bf = icmp ult i8 %v3_373bf, %v5_373bf
  %v24_373bf = select i1 %v6_373bf, i1 %v22_373bf, i1 %v23_373bf
  store i1 %v24_373bf, i1* %cf.global-to-local, align 1
  store i8 %v9_373bf, i8* %v2_373bf, align 1
  %v0_373c5 = load i32, i32* @eax, align 8
  %v1_373c5 = trunc i32 %v0_373c5 to i8
  %v2_373c5 = load i1, i1* %cf.global-to-local, align 1
  %v3_373c5 = zext i1 %v2_373c5 to i32
  %v4_373c5 = add i32 %v0_373c5, 119
  %v5_373c5 = add i32 %v4_373c5, %v3_373c5
  %v17_373c5 = icmp ult i8 %v1_373c5, -119
  %v18_373c5 = or i1 %v2_373c5, %v17_373c5
  store i1 %v18_373c5, i1* %cf.global-to-local, align 1
  %v31_373c5 = urem i32 %v5_373c5, 256
  %v33_373c5 = and i32 %v0_373c5, -256
  %v34_373c5 = or i32 %v31_373c5, %v33_373c5
  store i32 %v34_373c5, i32* %eax.global-to-local, align 8
  %v0_373c7 = load i32, i32* @ebp, align 4
  %v1_373c7 = add i32 %v0_373c7, 1
  store i32 %v1_373c7, i32* @ebp, align 4
  %v1_373c8 = add i32 %v0_373c7, -94
  %v2_373c8 = inttoptr i32 %v1_373c8 to i8*
  %v3_373c8 = load i8, i8* %v2_373c8, align 1
  %v5_373c8 = mul i8 %v3_373c8, 2
  store i8 %v5_373c8, i8* %v2_373c8, align 1
  %v16_373c8 = icmp slt i8 %v3_373c8, 0
  %v0_373cb = load i32, i32* %eax.global-to-local, align 8
  %v1_373cb = trunc i32 %v0_373cb to i8
  %v3_373cb = zext i1 %v16_373c8 to i8
  %v4_373cb = add i8 %v1_373cb, %v3_373cb
  %v19_373cb = icmp ule i8 %v4_373cb, %v1_373cb
  %v21_373cb = icmp eq i1 %v16_373c8, %v19_373cb
  store i1 %v21_373cb, i1* %cf.global-to-local, align 1
  %v22_373cb = zext i8 %v4_373cb to i32
  %v24_373cb = and i32 %v0_373cb, -256
  %v25_373cb = or i32 %v22_373cb, %v24_373cb
  store i32 %v25_373cb, i32* %eax.global-to-local, align 8
  %v1_373cd = inttoptr i32 %v25_373cb to i8*
  %v2_373cd = load i8, i8* %v1_373cd, align 1
  %v5_373cd = add i8 %v2_373cd, %v4_373cb
  store i8 %v5_373cd, i8* %v1_373cd, align 1
  %v0_373cf = load i32, i32* %eax.global-to-local, align 8
  %v1_373cf = load i32, i32* @ebp, align 4
  %v2_373cf = add i32 %v1_373cf, -12
  %v3_373cf = inttoptr i32 %v2_373cf to i32*
  store i32 %v0_373cf, i32* %v3_373cf, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_373d4 = load i32, i32* %edx.global-to-local, align 4
  %v0_373d8 = load i32, i32* @ebp, align 4
  %v1_373d8 = add i32 %v0_373d8, -40
  %v2_373d8 = inttoptr i32 %v1_373d8 to i32*
  %v3_373d8 = load i32, i32* %v2_373d8, align 4
  store i32 %v3_373d8, i32* %eax.global-to-local, align 8
  %v1_373df = add i32 %v0_373d8, -36
  %v2_373df = inttoptr i32 %v1_373df to i32*
  %v3_373df = load i32, i32* %v2_373df, align 4
  store i32 %v3_373df, i32* %eax.global-to-local, align 8
  %v1_373e6 = add i32 %v0_373d8, -32
  %v2_373e6 = inttoptr i32 %v1_373e6 to i32*
  %v3_373e6 = load i32, i32* %v2_373e6, align 4
  store i32 %v3_373e6, i32* %eax.global-to-local, align 8
  %v1_373ed = add i32 %v0_373d8, -28
  %v2_373ed = inttoptr i32 %v1_373ed to i32*
  %v3_373ed = load i32, i32* %v2_373ed, align 4
  store i32 %v3_373ed, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_373d4, 16777216
  %v5_373f3 = sdiv i32 %sext, 16777216
  %v6_373f3 = call i32 @unknown_6fe00(i32 %v3_373ed, i32 %v3_373e6, i32 %v3_373df, i32 %v3_373d8, i32 %v5_373f3)
  store i32 %v6_373f3, i32* %eax.global-to-local, align 8
  %v0_373f8 = load i32, i32* @ebp, align 4
  %v1_373f8 = add i32 %v0_373f8, -12
  %v2_373f8 = inttoptr i32 %v1_373f8 to i32*
  %v3_373f8 = load i32, i32* %v2_373f8, align 4
  store i32 %v3_373f8, i32* %eax.global-to-local, align 8
  %v1_373fb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_373fb = xor i32 %v1_373fb, %v3_373f8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_373fb = icmp eq i32 %v2_373fb, 0
  store i32 %v2_373fb, i32* @eax, align 8
  br i1 %v3_373fb, label %bb, label %dec_label_pc_37404

bb:                                               ; preds = %dec_label_pc_373bd
  %v1_37402 = call i32 @function_37409()
  store i32 %v1_37402, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_37404

dec_label_pc_37404:                               ; preds = %bb, %dec_label_pc_373bd
  %v2_37402 = phi i32 [ %v1_37402, %bb ], [ %v2_373fb, %dec_label_pc_373bd ]
  ret i32 %v2_37402

; uselistorder directives
  uselistorder i32 %v0_373d8, { 1, 0, 2, 3 }
  uselistorder i8 %v4_373cb, { 0, 2, 1 }
  uselistorder i8 %v1_373cb, { 1, 0 }
  uselistorder i8 %v3_373c8, { 1, 0 }
  uselistorder i1 %v2_373c5, { 1, 0 }
  uselistorder i32 %v0_373c5, { 1, 0, 2 }
  uselistorder i8 %v5_373bf, { 1, 0, 2 }
  uselistorder i32 1166792517, { 8, 4, 2, 7, 3, 5, 6, 0, 1 }
}

define i32 @function_37409() local_unnamed_addr {
dec_label_pc_37409:
  %v0_3740a = load i32, i32* @eax, align 8
  ret i32 %v0_3740a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvdNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PT1_T2_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_3740b:
  ret i32 %arg1
}

define i32 @function_37415() local_unnamed_addr {
dec_label_pc_37415:
  %eax.global-to-local = alloca i32, align 4
  %v15_37415 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_37415
}

define i32 @function_37452(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37452:
  %v0_37452 = load i32, i32* @ebx, align 4
  %v1_37452 = add i32 %v0_37452, 1149886533
  %v2_37452 = inttoptr i32 %v1_37452 to i8*
  %v3_37452 = load i8, i8* %v2_37452, align 1
  %v4_37452 = load i32, i32* @ecx, align 8
  %v5_37452 = trunc i32 %v4_37452 to i8
  %v6_37452 = or i8 %v5_37452, %v3_37452
  store i8 %v6_37452, i8* %v2_37452, align 1
  %v0_3745a = load i32, i32* @ebp, align 4
  %v1_3745a = add i32 %v0_3745a, -28
  %v2_3745a = inttoptr i32 %v1_3745a to i32*
  %v3_3745a = load i32, i32* %v2_3745a, align 4
  %v1_37460 = call i32 @unknown_6fed2(i32 %v3_3745a)
  %v0_37465 = load i32, i32* @ebp, align 4
  %v1_37465 = add i32 %v0_37465, -12
  %v2_37465 = inttoptr i32 %v1_37465 to i32*
  %v3_37465 = load i32, i32* %v2_37465, align 4
  %v1_37468 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37468 = xor i32 %v1_37468, %v3_37465
  %v3_37468 = icmp eq i32 %v2_37468, 0
  store i32 %v2_37468, i32* @eax, align 8
  br i1 %v3_37468, label %bb, label %dec_label_pc_37471

bb:                                               ; preds = %dec_label_pc_37452
  %v1_3746f = call i32 @function_37476()
  br label %dec_label_pc_37471

dec_label_pc_37471:                               ; preds = %bb, %dec_label_pc_37452
  %v2_3746f = phi i32 [ %v1_3746f, %bb ], [ %v2_37468, %dec_label_pc_37452 ]
  ret i32 %v2_3746f
}

define i32 @function_37476() local_unnamed_addr {
dec_label_pc_37476:
  %v0_37477 = load i32, i32* @eax, align 8
  ret i32 %v0_37477
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvNSK_18has_fallback_type_EEENT_11result_typeEiRSP_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1) local_unnamed_addr {
dec_label_pc_37478:
  ret i32 %arg1
}

define x86_fp80 @function_37485(i32 %arg1) local_unnamed_addr {
dec_label_pc_37485:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_37485 = load i32, i32* @ebp, align 4
  %v0_37486 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_37486 = or i32 %v0_37486, 137
  store i32 %v11_37486, i32* %eax.global-to-local, align 8
  %v0_37489 = load i32, i32* @ecx, align 8
  %v1_37489 = add i32 %v0_37489, -1
  store i32 %v1_37489, i32* @ecx, align 8
  %v1_3748b = add i32 %v0_37485, 3
  store i32 %v1_3748b, i32* %ebp.global-to-local, align 4
  %v1_3748c = add i32 %v0_37489, 1166793796
  %v2_3748c = inttoptr i32 %v1_3748c to i8*
  %v3_3748c = load i8, i8* %v2_3748c, align 1
  %v5_3748c = trunc i32 %v1_37489 to i8
  %v8_3748c = add i8 %v3_3748c, %v5_3748c
  %v28_3748c = icmp ult i8 %v8_3748c, %v3_3748c
  store i1 %v28_3748c, i1* %cf.global-to-local, align 1
  store i8 %v8_3748c, i8* %v2_3748c, align 1
  %v0_37492 = load i32, i32* %eax.global-to-local, align 8
  %v1_37492 = trunc i32 %v0_37492 to i8
  %v2_37492 = load i1, i1* %cf.global-to-local, align 1
  %v3_37492 = zext i1 %v2_37492 to i8
  %v4_37492 = add i8 %v1_37492, -119
  %v5_37492 = add i8 %v4_37492, %v3_37492
  %v22_37492 = icmp ule i8 %v5_37492, %v1_37492
  %v23_37492 = icmp ugt i8 %v1_37492, 118
  %v24_37492 = select i1 %v2_37492, i1 %v22_37492, i1 %v23_37492
  store i1 %v24_37492, i1* %cf.global-to-local, align 1
  %v25_37492 = zext i8 %v5_37492 to i32
  %v27_37492 = and i32 %v0_37492, -256
  %v28_37492 = or i32 %v25_37492, %v27_37492
  store i32 %v28_37492, i32* %eax.global-to-local, align 8
  %v0_37494 = load i32, i32* %ebp.global-to-local, align 4
  %v1_37494 = add i32 %v0_37494, 1
  store i32 %v1_37494, i32* @ebp, align 4
  %v3_37495 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_37495 = fpext float %v3_37495 to x86_fp80
  %v5_37495 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_37495 = fmul x86_fp80 %v4_37495, %v5_37495
  %v0_37497 = load i32, i32* @edx, align 4
  %v1_37497 = and i32 %v0_37497, -65281
  %v2_37497 = or i32 %v1_37497, 17664
  store i32 %v2_37497, i32* @edx, align 4
  ret x86_fp80 %v6_37495

; uselistorder directives
  uselistorder i8 %v5_37492, { 1, 0 }
  uselistorder i8 %v3_3748c, { 1, 0 }
}

define i32 @function_3749c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3749c:
  %v0_3749d = load i32, i32* @ebp, align 4
  %v1_3749d = add i32 %v0_3749d, 28
  %v2_3749d = inttoptr i32 %v1_3749d to i32*
  %v3_3749d = load i32, i32* %v2_3749d, align 4
  %v2_374a0 = add i32 %v0_3749d, -48
  %v3_374a0 = inttoptr i32 %v2_374a0 to i32*
  store i32 %v3_3749d, i32* %v3_374a0, align 4
  %v0_374a3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_374a9 = load i32, i32* @ebp, align 4
  %v2_374a9 = add i32 %v1_374a9, -12
  %v3_374a9 = inttoptr i32 %v2_374a9 to i32*
  store i32 %v0_374a3, i32* %v3_374a9, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdNS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E8assignerEPKvNST_18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_374d2:
  ret i32 0
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP14CBlockTemplateEEPT_PKS5_S8_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37539:
  %v2_37564 = sub i32 %arg2, %arg1
  %v2_37564.off = add i32 %v2_37564, 3
  %tmp109 = icmp ult i32 %v2_37564.off, 7
  br i1 %tmp109, label %bb, label %dec_label_pc_37574

bb:                                               ; preds = %dec_label_pc_37539
  %v4_37572 = call i32 @function_37590(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_37574

dec_label_pc_37574:                               ; preds = %bb, %dec_label_pc_37539
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 7, { 0, 14, 1, 2, 5, 4, 3, 7, 6, 9, 8, 11, 10, 13, 12 }
}

define i32 @function_37582(i32 %arg1) local_unnamed_addr {
dec_label_pc_37582:
  %v0_37585 = load i32, i32* @ebp, align 4
  %v1_37585 = add i32 %v0_37585, -36
  %v2_37585 = inttoptr i32 %v1_37585 to i32*
  %v3_37585 = load i32, i32* %v2_37585, align 4
  ret i32 %v3_37585
}

define i32 @function_37588(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37588:
  %v3_37588 = load i32, i32* @eax, align 8
  ret i32 %v3_37588
}

define i32 @function_37590(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37590:
  %v0_37590 = load i32, i32* @ebp, align 4
  %v1_37590 = add i32 %v0_37590, -16
  %v2_37590 = inttoptr i32 %v1_37590 to i32*
  %v3_37590 = load i32, i32* %v2_37590, align 4
  %v2_37593 = mul i32 %v3_37590, 4
  %v2_37596 = add i32 %v0_37590, -36
  %v3_37596 = inttoptr i32 %v2_37596 to i32*
  %v4_37596 = load i32, i32* %v3_37596, align 4
  %v5_37596 = add i32 %v4_37596, %v2_37593
  store i1 false, i1* @of, align 1
  ret i32 %v5_37596
}

define i32 @function_375a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_375a3:
  %v0_375a3 = load i1, i1* @zf, align 1
  br i1 %v0_375a3, label %bb, label %dec_label_pc_375a3.dec_label_pc_375a5_crit_edge

dec_label_pc_375a3.dec_label_pc_375a5_crit_edge:  ; preds = %dec_label_pc_375a3
  %v2_375a3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_375a5

bb:                                               ; preds = %dec_label_pc_375a3
  %v1_375a3 = call i32 @function_375aa()
  br label %dec_label_pc_375a5

dec_label_pc_375a5:                               ; preds = %dec_label_pc_375a3.dec_label_pc_375a5_crit_edge, %bb
  %v2_375a3 = phi i32 [ %v2_375a3.pre, %dec_label_pc_375a3.dec_label_pc_375a5_crit_edge ], [ %v1_375a3, %bb ]
  ret i32 %v2_375a3

; uselistorder directives
  uselistorder label %dec_label_pc_375a5, { 1, 0 }
}

define i32 @function_375aa() local_unnamed_addr {
dec_label_pc_375aa:
  %v0_375ab = load i32, i32* @eax, align 8
  ret i32 %v0_375ab
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_375ac:
  %v1_375cf = call i32 @unknown_700d8(i32 %arg2)
  store i32 %v1_375cf, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_375e0

bb:                                               ; preds = %dec_label_pc_375ac
  %v1_375de = call i32 @function_375e5()
  br label %dec_label_pc_375e0

dec_label_pc_375e0:                               ; preds = %bb, %dec_label_pc_375ac
  %v2_375de = phi i32 [ %v1_375de, %bb ], [ %v1_375cf, %dec_label_pc_375ac ]
  ret i32 %v2_375de
}

define i32 @function_375e5() local_unnamed_addr {
dec_label_pc_375e5:
  %v0_375e6 = load i32, i32* @eax, align 8
  ret i32 %v0_375e6
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKSt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_375e8:
  %v2_3760e = load i32, i32* %arg1, align 4
  %v2_3761a = call i32 @unknown_7016c(i32 %v2_3760e, i32 %arg2)
  ret i32 %v2_3761a
}

define i32 @function_3762b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3762b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37630() local_unnamed_addr {
dec_label_pc_37630:
  %eax.global-to-local = alloca i32, align 4
  %v0_37631 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37631
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSsEEE14internal_visitIKSt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37632:
  ret i32 %arg3
}

define i32 @function_3764b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3764b:
  %v0_3764b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_37650 = load i32, i32* @ebp, align 4
  %v2_37650 = add i32 %v1_37650, -12
  %v3_37650 = inttoptr i32 %v2_37650 to i32*
  store i32 %v0_3764b, i32* %v3_37650, align 4
  %v0_37655 = load i32, i32* @ebp, align 4
  %v1_37655 = add i32 %v0_37655, -28
  %v2_37655 = inttoptr i32 %v1_37655 to i32*
  %v3_37655 = load i32, i32* %v2_37655, align 4
  %v1_37658 = inttoptr i32 %v3_37655 to i32*
  %v2_37658 = load i32, i32* %v1_37658, align 4
  %v1_3765a = add i32 %v0_37655, -32
  %v2_3765a = inttoptr i32 %v1_3765a to i32*
  %v3_3765a = load i32, i32* %v2_3765a, align 4
  %v2_37664 = call i32 @unknown_701ec(i32 %v2_37658, i32 %v3_3765a)
  store i32 %v2_37664, i32* @eax, align 8
  %v0_37669 = load i32, i32* @ebp, align 4
  %v1_37669 = add i32 %v0_37669, -12
  %v2_37669 = inttoptr i32 %v1_37669 to i32*
  %v3_37669 = load i32, i32* %v2_37669, align 4
  %v1_3766c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3766c = icmp eq i32 %v1_3766c, %v3_37669
  br i1 %v3_3766c, label %bb, label %dec_label_pc_37675

bb:                                               ; preds = %dec_label_pc_3764b
  %v1_37673 = call i32 @function_3767a()
  br label %dec_label_pc_37675

dec_label_pc_37675:                               ; preds = %bb, %dec_label_pc_3764b
  %v2_37673 = phi i32 [ %v1_37673, %bb ], [ %v2_37664, %dec_label_pc_3764b ]
  ret i32 %v2_37673
}

define i32 @function_3767a() local_unnamed_addr {
dec_label_pc_3767a:
  %v0_3767b = load i32, i32* @eax, align 8
  ret i32 %v0_3767b
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIbEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3767c:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_376aa

bb:                                               ; preds = %dec_label_pc_3767c
  %v3_376a8 = call i32 @function_376af(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_376aa

dec_label_pc_376aa:                               ; preds = %bb, %dec_label_pc_3767c
  %v4_376a8 = phi i32 [ %v3_376a8, %bb ], [ 0, %dec_label_pc_3767c ]
  ret i32 %v4_376a8
}

define i32 @function_376af(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_376af:
  %v0_376b0 = load i32, i32* @eax, align 8
  ret i32 %v0_376b0
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIxEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_376b2:
  ret i32 0
}

define i32 @function_376df(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_376df:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_376e4() local_unnamed_addr {
dec_label_pc_376e4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_376e4 = load i32, i32* %ecx.global-to-local, align 8
  %v1_376e4 = add i32 %v0_376e4, -1
  store i32 %v1_376e4, i32* %ecx.global-to-local, align 8
  %v0_376e6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_376e6
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclIdEEPS3_RKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_376e8:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_37716

bb:                                               ; preds = %dec_label_pc_376e8
  %v3_37714 = call i32 @function_3771b(i32 %tmp3, i32 %arg1)
  br label %dec_label_pc_37716

dec_label_pc_37716:                               ; preds = %bb, %dec_label_pc_376e8
  %v4_37714 = phi i32 [ %v3_37714, %bb ], [ 0, %dec_label_pc_376e8 ]
  ret i32 %v4_37714
}

define i32 @function_3771b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3771b:
  %v0_3771c = load i32, i32* @eax, align 8
  ret i32 %v0_3771c
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEclISsEEPSB_RKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3771e:
  ret i32 %arg1
}

define i32 @function_37728(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37728:
  %v0_37728 = load i32, i32* @ebp, align 4
  %v1_3772e = add i32 %v0_37728, 3
  store i32 %v1_3772e, i32* @ebp, align 4
  %v0_37731 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37736 = add i32 %v0_37728, -9
  %v3_37736 = inttoptr i32 %v2_37736 to i32*
  store i32 %v0_37731, i32* %v3_37736, align 4
  store i32 0, i32* @eax, align 8
  %v0_37740 = load i32, i32* @ebp, align 4
  %v1_37740 = add i32 %v0_37740, -12
  %v2_37740 = inttoptr i32 %v1_37740 to i32*
  %v3_37740 = load i32, i32* %v2_37740, align 4
  %v1_37743 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37743 = icmp eq i32 %v1_37743, %v3_37740
  br i1 %v3_37743, label %bb, label %dec_label_pc_3774c

bb:                                               ; preds = %dec_label_pc_37728
  %v1_3774a = call i32 @function_37751()
  br label %dec_label_pc_3774c

dec_label_pc_3774c:                               ; preds = %bb, %dec_label_pc_37728
  %v4_3774a = phi i32 [ %v1_3774a, %bb ], [ 0, %dec_label_pc_37728 ]
  ret i32 %v4_3774a

; uselistorder directives
  uselistorder i32 -9, { 0, 2, 1 }
}

define i32 @function_37751() local_unnamed_addr {
dec_label_pc_37751:
  %v0_37752 = load i32, i32* @eax, align 8
  ret i32 %v0_37752
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitISC_EEPSC_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37754:
  ret i32 %arg3
}

define i32 @function_3776d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3776d:
  %v0_3776d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_37772 = load i32, i32* @ebp, align 4
  %v2_37772 = add i32 %v1_37772, -12
  %v3_37772 = inttoptr i32 %v2_37772 to i32*
  store i32 %v0_3776d, i32* %v3_37772, align 4
  %v0_37777 = load i32, i32* @ebp, align 4
  %v1_37777 = add i32 %v0_37777, -28
  %v2_37777 = inttoptr i32 %v1_37777 to i32*
  %v3_37777 = load i32, i32* %v2_37777, align 4
  %v1_3777a = inttoptr i32 %v3_37777 to i32*
  %v2_3777a = load i32, i32* %v1_3777a, align 4
  %v1_3777c = add i32 %v0_37777, -32
  %v2_3777c = inttoptr i32 %v1_3777c to i32*
  %v3_3777c = load i32, i32* %v2_3777c, align 4
  %v2_37786 = call i32 @unknown_70344(i32 %v2_3777a, i32 %v3_3777c)
  ret i32 %v2_37786
}

define i32 @function_3779b() local_unnamed_addr {
dec_label_pc_3779b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3779b = load i32, i32* %ecx.global-to-local, align 8
  %v1_3779b = add i32 %v0_3779b, -1
  store i32 %v1_3779b, i32* %ecx.global-to-local, align 8
  %v0_3779d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3779d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS5_13Config_vectorISsEEEESaIS9_EEEEE14internal_visitIKS4_INS5_10Value_implIS8_EESaISH_EEEEPSC_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3779e:
  %v2_377c4 = load i32, i32* %arg1, align 4
  %v2_377d0 = call i32 @unknown_703ca(i32 %v2_377c4, i32 %arg2)
  store i32 %v2_377d0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_377e1

bb:                                               ; preds = %dec_label_pc_3779e
  %v1_377df = call i32 @function_377e6()
  br label %dec_label_pc_377e1

dec_label_pc_377e1:                               ; preds = %bb, %dec_label_pc_3779e
  %v2_377df = phi i32 [ %v1_377df, %bb ], [ %v2_377d0, %dec_label_pc_3779e ]
  ret i32 %v2_377df
}

define i32 @function_377e6() local_unnamed_addr {
dec_label_pc_377e6:
  %v0_377e7 = load i32, i32* @eax, align 8
  ret i32 %v0_377e7
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEclIbEEPSB_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_377e8:
  ret i32 %arg2
}

define i32 @function_377fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_377fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_377fc = load i32, i32* @eax, align 8
  %v1_377fc = trunc i32 %v0_377fc to i8
  %v2_377fc = load i1, i1* @cf, align 1
  %v3_377fc = zext i1 %v2_377fc to i8
  %v4_377fc = add i8 %v3_377fc, %v1_377fc
  %v22_377fc = zext i8 %v4_377fc to i32
  %v24_377fc = and i32 %v0_377fc, -256
  %v25_377fc = or i32 %v22_377fc, %v24_377fc
  store i32 %v25_377fc, i32* %eax.global-to-local, align 8
  %v1_377fe = inttoptr i32 %v25_377fc to i8*
  %v2_377fe = load i8, i8* %v1_377fe, align 1
  %v5_377fe = add i8 %v2_377fe, %v4_377fc
  store i8 %v5_377fe, i8* %v1_377fe, align 1
  %v0_37800 = load i32, i32* %eax.global-to-local, align 8
  %v1_37800 = load i32, i32* @ebp, align 4
  %v2_37800 = add i32 %v1_37800, -12
  %v3_37800 = inttoptr i32 %v2_37800 to i32*
  store i32 %v0_37800, i32* %v3_37800, align 4
  store i32 0, i32* @eax, align 8
  %v0_3780a = load i32, i32* @ebp, align 4
  %v1_3780a = add i32 %v0_3780a, -12
  %v2_3780a = inttoptr i32 %v1_3780a to i32*
  %v3_3780a = load i32, i32* %v2_3780a, align 4
  %v1_3780d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3780d = icmp eq i32 %v1_3780d, %v3_3780a
  br i1 %v3_3780d, label %bb, label %dec_label_pc_37816

bb:                                               ; preds = %dec_label_pc_377fc
  %v1_37814 = call i32 @function_3781b()
  store i32 %v1_37814, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_37816

dec_label_pc_37816:                               ; preds = %bb, %dec_label_pc_377fc
  %v2_37814 = phi i32 [ %v1_37814, %bb ], [ 0, %dec_label_pc_377fc ]
  ret i32 %v2_37814
}

define i32 @function_3781b() local_unnamed_addr {
dec_label_pc_3781b:
  %v0_3781c = load i32, i32* @eax, align 8
  ret i32 %v0_3781c
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEclIxEEPSB_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3781e:
  ret i32 0
}

define i32 @function_37842(i32 %arg1) local_unnamed_addr {
dec_label_pc_37842:
  %v0_37843 = load i32, i32* @edx, align 4
  %v1_37843 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37843 = xor i32 %v1_37843, %v0_37843
  %v3_37843 = icmp eq i32 %v2_37843, 0
  store i32 %v2_37843, i32* @edx, align 4
  br i1 %v3_37843, label %bb, label %dec_label_pc_37842.dec_label_pc_3784c_crit_edge

dec_label_pc_37842.dec_label_pc_3784c_crit_edge:  ; preds = %dec_label_pc_37842
  %v2_3784a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3784c

bb:                                               ; preds = %dec_label_pc_37842
  %v1_3784a = call i32 @function_37851()
  br label %dec_label_pc_3784c

dec_label_pc_3784c:                               ; preds = %dec_label_pc_37842.dec_label_pc_3784c_crit_edge, %bb
  %v2_3784a = phi i32 [ %v2_3784a.pre, %dec_label_pc_37842.dec_label_pc_3784c_crit_edge ], [ %v1_3784a, %bb ]
  ret i32 %v2_3784a

; uselistorder directives
  uselistorder label %dec_label_pc_3784c, { 1, 0 }
}

define i32 @function_37851() local_unnamed_addr {
dec_label_pc_37851:
  %v0_37852 = load i32, i32* @eax, align 8
  ret i32 %v0_37852
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEclIdEEPSB_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37854:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_37882

bb:                                               ; preds = %dec_label_pc_37854
  %v3_37880 = call i32 @function_37887(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_37882

dec_label_pc_37882:                               ; preds = %bb, %dec_label_pc_37854
  %v4_37880 = phi i32 [ %v3_37880, %bb ], [ 0, %dec_label_pc_37854 ]
  ret i32 %v4_37880
}

define i32 @function_37887(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37887:
  %v0_37888 = load i32, i32* @eax, align 8
  ret i32 %v0_37888
}

define i32 @_Z9SerializeI11CDataStream9COutPointEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37889:
  %v8_378cd = call i32 @unknown_704eb(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_378de

bb:                                               ; preds = %dec_label_pc_37889
  %v1_378dc = call i32 @function_378e3()
  br label %dec_label_pc_378de

dec_label_pc_378de:                               ; preds = %bb, %dec_label_pc_37889
  %v2_378dc = phi i32 [ %v1_378dc, %bb ], [ 0, %dec_label_pc_37889 ]
  ret i32 %v2_378dc

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_378e3() local_unnamed_addr {
dec_label_pc_378e3:
  %v0_378e4 = load i32, i32* @eax, align 8
  ret i32 %v0_378e4
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN11json_spirit10Value_implINS1_13Config_vectorISsEEEEEC1ERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_378e6:
  ret i32 %arg2
}

define i32 @function_378f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_378f8:
  %v0_378f8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_378fe = load i32, i32* @ebp, align 4
  %v2_378fe = add i32 %v1_378fe, -12
  %v3_378fe = inttoptr i32 %v2_378fe to i32*
  store i32 %v0_378f8, i32* %v3_378fe, align 4
  %v0_37903 = load i32, i32* @ebp, align 4
  %v1_37903 = add i32 %v0_37903, -12
  %v2_37903 = inttoptr i32 %v1_37903 to i32*
  %v3_37903 = load i32, i32* %v2_37903, align 4
  %v1_37906 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37906 = xor i32 %v1_37906, %v3_37903
  %v3_37906 = icmp eq i32 %v2_37906, 0
  store i32 %v2_37906, i32* @eax, align 8
  br i1 %v3_37906, label %bb, label %dec_label_pc_3790f

bb:                                               ; preds = %dec_label_pc_378f8
  %v1_3790d = call i32 @function_37914()
  br label %dec_label_pc_3790f

dec_label_pc_3790f:                               ; preds = %bb, %dec_label_pc_378f8
  %v2_3790d = phi i32 [ %v1_3790d, %bb ], [ %v2_37906, %dec_label_pc_378f8 ]
  ret i32 %v2_3790d
}

define i32 @function_37914() local_unnamed_addr {
dec_label_pc_37914:
  %v0_37915 = load i32, i32* @eax, align 8
  ret i32 %v0_37915
}

define i32 @_ZN9__gnu_cxxneIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37916:
  ret i32 %arg2
}

define i32 @function_3792a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3792a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3792a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3792f = load i32, i32* @ebp, align 4
  %v2_3792f = add i32 %v1_3792f, -12
  %v3_3792f = inttoptr i32 %v2_3792f to i32*
  store i32 %v0_3792a, i32* %v3_3792f, align 4
  %v0_37934 = load i32, i32* @ebp, align 4
  %v1_37934 = add i32 %v0_37934, -28
  %v2_37934 = inttoptr i32 %v1_37934 to i32*
  %v3_37934 = load i32, i32* %v2_37934, align 4
  %v1_3793a = call i32 @unknown_5eacc(i32 %v3_37934)
  %v1_3793f = inttoptr i32 %v1_3793a to i32*
  %v2_3793f = load i32, i32* %v1_3793f, align 4
  store i32 %v2_3793f, i32* %ebx.global-to-local, align 4
  %v0_37941 = load i32, i32* @ebp, align 4
  %v1_37941 = add i32 %v0_37941, -32
  %v2_37941 = inttoptr i32 %v1_37941 to i32*
  %v3_37941 = load i32, i32* %v2_37941, align 4
  %v1_37947 = call i32 @unknown_5eacc(i32 %v3_37941)
  %v1_3794c = inttoptr i32 %v1_37947 to i32*
  %v2_3794c = load i32, i32* %v1_3794c, align 4
  %v0_3794e = load i32, i32* %ebx.global-to-local, align 4
  %v12_3794e = icmp eq i32 %v0_3794e, %v2_3794c
  %v1_37950 = icmp eq i1 %v12_3794e, false
  %v2_37950 = zext i1 %v1_37950 to i32
  %v4_37950 = and i32 %v2_3794c, -256
  %v5_37950 = or i32 %v2_37950, %v4_37950
  store i32 %v5_37950, i32* @eax, align 8
  %v0_37953 = load i32, i32* @ebp, align 4
  %v1_37953 = add i32 %v0_37953, -12
  %v2_37953 = inttoptr i32 %v1_37953 to i32*
  %v3_37953 = load i32, i32* %v2_37953, align 4
  %v1_37956 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37956 = icmp eq i32 %v1_37956, %v3_37953
  br i1 %v3_37956, label %bb, label %dec_label_pc_3795f

bb:                                               ; preds = %dec_label_pc_3792a
  %v2_3795d = call i32 @function_37964(i32 %v3_37941)
  br label %dec_label_pc_3795f

dec_label_pc_3795f:                               ; preds = %bb, %dec_label_pc_3792a
  %v3_3795d = phi i32 [ %v2_3795d, %bb ], [ %v5_37950, %dec_label_pc_3792a ]
  ret i32 %v3_3795d

; uselistorder directives
  uselistorder i32 %v2_3794c, { 1, 0 }
  uselistorder i32 (i32)* @function_37964, { 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_5eacc, { 1, 0 }
}

define i32 @function_37964(i32 %arg1) local_unnamed_addr {
dec_label_pc_37964:
  store i32 %arg1, i32* @ebx, align 4
  %v0_37969 = load i32, i32* @eax, align 8
  ret i32 %v0_37969
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3796a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_37984 = load i32, i32* %arg1, align 4
  %v1_37986 = add i32 %v2_37984, 20
  store i32 %v1_37986, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3799d

bb:                                               ; preds = %dec_label_pc_3796a
  %v2_3799b = call i32 @function_379a2(i32 %tmp100)
  br label %dec_label_pc_3799d

dec_label_pc_3799d:                               ; preds = %bb, %dec_label_pc_3796a
  %v3_3799b = phi i32 [ %v2_3799b, %bb ], [ %tmp100, %dec_label_pc_3796a ]
  ret i32 %v3_3799b
}

define i32 @function_379a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_379a2:
  %v0_379a3 = load i32, i32* @eax, align 8
  ret i32 %v0_379a3
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_379a4:
  %v2_379be = load i32, i32* %arg1, align 4
  store i32 %v2_379be, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_379cc

bb:                                               ; preds = %dec_label_pc_379a4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_379ca = call i32 @function_379d1(i32 %tmp100)
  br label %dec_label_pc_379cc

dec_label_pc_379cc:                               ; preds = %bb, %dec_label_pc_379a4
  %v3_379ca = phi i32 [ %v2_379ca, %bb ], [ %v2_379be, %dec_label_pc_379a4 ]
  ret i32 %v3_379ca

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_379d1(i32 %arg1) local_unnamed_addr {
dec_label_pc_379d1:
  %v0_379d2 = load i32, i32* @eax, align 8
  ret i32 %v0_379d2
}

define i32 @_ZN9__gnu_cxxmiIP12CTransactionSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_379d3:
  %v0_379e6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_379e6
}

define i32 @function_379ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_379ee:
  %ebx.global-to-local = alloca i32, align 4
  %v0_379f1 = load i32, i32* @ebp, align 4
  %v1_379f1 = add i32 %v0_379f1, -28
  %v2_379f1 = inttoptr i32 %v1_379f1 to i32*
  %v3_379f1 = load i32, i32* %v2_379f1, align 4
  %v1_379f7 = call i32 @unknown_5ddb5(i32 %v3_379f1)
  %v1_379fc = inttoptr i32 %v1_379f7 to i32*
  %v2_379fc = load i32, i32* %v1_379fc, align 4
  store i32 %v2_379fc, i32* %ebx.global-to-local, align 4
  %v0_37a00 = load i32, i32* @ebp, align 4
  %v1_37a00 = add i32 %v0_37a00, -32
  %v2_37a00 = inttoptr i32 %v1_37a00 to i32*
  %v3_37a00 = load i32, i32* %v2_37a00, align 4
  %v1_37a06 = call i32 @unknown_5ddb5(i32 %v3_37a00)
  %v1_37a0b = inttoptr i32 %v1_37a06 to i32*
  %v2_37a0b = load i32, i32* %v1_37a0b, align 4
  %v0_37a0d = load i32, i32* %ebx.global-to-local, align 4
  %v2_37a0f = sub i32 %v0_37a0d, %v2_37a0b
  %v2_37a13 = sdiv i32 %v2_37a0f, 32
  %v9_37a13 = and i32 %v2_37a0f, 16
  %v10_37a13 = icmp ne i32 %v9_37a13, 0
  store i1 %v10_37a13, i1* @cf, align 1
  ret i32 %v2_37a13

; uselistorder directives
  uselistorder i32 %v2_37a0f, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5ddb5, { 1, 0 }
}

define i32 @function_37a1b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37a1b:
  %v0_37a1b = load i32, i32* @eax, align 8
  %v1_37a1b = load i1, i1* @cf, align 1
  %v2_37a1b = zext i1 %v1_37a1b to i32
  %v3_37a1b = add i32 %v0_37a1b, 20
  %v4_37a1b = add i32 %v3_37a1b, %v2_37a1b
  %v14_37a1b = icmp eq i32 %v4_37a1b, 0
  store i32 %v4_37a1b, i32* @eax, align 8
  br i1 %v14_37a1b, label %bb, label %dec_label_pc_37a22

bb:                                               ; preds = %dec_label_pc_37a1b
  %v1_37a20 = call i32 @function_37a27()
  br label %dec_label_pc_37a22

dec_label_pc_37a22:                               ; preds = %bb, %dec_label_pc_37a1b
  %v2_37a20 = phi i32 [ %v1_37a20, %bb ], [ %v4_37a1b, %dec_label_pc_37a1b ]
  ret i32 %v2_37a20
}

define i32 @function_37a27() local_unnamed_addr {
dec_label_pc_37a27:
  %v0_37a2c = load i32, i32* @eax, align 8
  ret i32 %v0_37a2c
}

define i32 @_ZSt22__uninitialized_move_aIP12CTransactionS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37a2d:
  %v8_37a71 = call i32 @unknown_7072e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_37a71, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_37a82

bb:                                               ; preds = %dec_label_pc_37a2d
  %v1_37a80 = call i32 @function_37a87()
  br label %dec_label_pc_37a82

dec_label_pc_37a82:                               ; preds = %bb, %dec_label_pc_37a2d
  %v2_37a80 = phi i32 [ %v1_37a80, %bb ], [ %v8_37a71, %dec_label_pc_37a2d ]
  ret i32 %v2_37a80

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37a87() local_unnamed_addr {
dec_label_pc_37a87:
  %v0_37a88 = load i32, i32* @eax, align 8
  ret i32 %v0_37a88
}

define i32 @_ZSt13copy_backwardIP12CTransactionS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37a89:
  %v1_37ab3 = call i32 @unknown_707df(i32 %arg2)
  %v1_37ac0 = call i32 @unknown_707df(i32 %arg1)
  %v3_37ad3 = call i32 @unknown_70814(i32 %v1_37ac0, i32 %v1_37ab3, i32 %arg3)
  ret i32 %v3_37ad3

; uselistorder directives
  uselistorder i32 (i32)* @unknown_707df, { 1, 0 }
}

define i32 @function_37ade(i32 %arg1) local_unnamed_addr {
dec_label_pc_37ade:
  %zf.global-to-local = alloca i1, align 1
  %v0_37ade = load i32, i32* @eax, align 8
  %v1_37ade = trunc i32 %v0_37ade to i8
  %v2_37ade = load i1, i1* @cf, align 1
  %v3_37ade = zext i1 %v2_37ade to i8
  %v4_37ade = add i8 %v3_37ade, %v1_37ade
  %v13_37ade = icmp eq i8 %v4_37ade, 0
  store i1 %v13_37ade, i1* %zf.global-to-local, align 1
  %v22_37ade = zext i8 %v4_37ade to i32
  %v24_37ade = and i32 %v0_37ade, -256
  %v25_37ade = or i32 %v22_37ade, %v24_37ade
  store i32 %v25_37ade, i32* @eax, align 8
  %v1_37ae0 = inttoptr i32 %v25_37ade to i8*
  %v2_37ae0 = load i8, i8* %v1_37ae0, align 1
  %v5_37ae0 = add i8 %v2_37ae0, %v4_37ade
  %v15_37ae0 = icmp eq i8 %v5_37ae0, 0
  store i1 %v15_37ae0, i1* %zf.global-to-local, align 1
  store i8 %v5_37ae0, i8* %v1_37ae0, align 1
  %v0_37ae2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_37ae2, label %bb, label %dec_label_pc_37ade.dec_label_pc_37ae4_crit_edge

dec_label_pc_37ade.dec_label_pc_37ae4_crit_edge:  ; preds = %dec_label_pc_37ade
  %v2_37ae2.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_37ae4

bb:                                               ; preds = %dec_label_pc_37ade
  %v1_37ae2 = call i32 @function_37ae9()
  br label %dec_label_pc_37ae4

dec_label_pc_37ae4:                               ; preds = %dec_label_pc_37ade.dec_label_pc_37ae4_crit_edge, %bb
  %v2_37ae2 = phi i32 [ %v2_37ae2.pre, %dec_label_pc_37ade.dec_label_pc_37ae4_crit_edge ], [ %v1_37ae2, %bb ]
  ret i32 %v2_37ae2

; uselistorder directives
  uselistorder label %dec_label_pc_37ae4, { 1, 0 }
}

define i32 @function_37ae9() local_unnamed_addr {
dec_label_pc_37ae9:
  %v0_37aee = load i32, i32* @eax, align 8
  ret i32 %v0_37aee
}

define i32 @_ZSt4fillIP12CTransactionS0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37aef:
  %v1_37b19 = call i32 @unknown_708ec(i32 %arg2)
  %v1_37b26 = call i32 @unknown_708ec(i32 %arg1)
  %v3_37b39 = call i32 @unknown_70921(i32 %v1_37b26, i32 %v1_37b19, i32 %arg3)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @unknown_708ec, { 1, 0 }
}

define i32 @function_37b4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_37b4a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37b4e() local_unnamed_addr {
dec_label_pc_37b4e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_37b4e = load i32, i32* %ebx.global-to-local, align 4
  %v1_37b4e = add i32 %v0_37b4e, 1566258372
  %v2_37b4e = inttoptr i32 %v1_37b4e to i32*
  %v3_37b4e = load i32, i32* %v2_37b4e, align 4
  %v4_37b4e = add i32 %v3_37b4e, 1
  store i32 %v4_37b4e, i32* %v2_37b4e, align 4
  %v0_37b54 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37b54
}

define i32 @_ZSt24__uninitialized_fill_n_aIP12CTransactionjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37b55:
  %v7_37b92 = call i32 @unknown_70a5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_37ba3

bb:                                               ; preds = %dec_label_pc_37b55
  %v1_37ba1 = call i32 @function_37ba8()
  br label %dec_label_pc_37ba3

dec_label_pc_37ba3:                               ; preds = %bb, %dec_label_pc_37b55
  %v2_37ba1 = phi i32 [ %v1_37ba1, %bb ], [ 0, %dec_label_pc_37b55 ]
  ret i32 %v2_37ba1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37ba8() local_unnamed_addr {
dec_label_pc_37ba8:
  %v0_37ba9 = load i32, i32* @eax, align 8
  ret i32 %v0_37ba9
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE12_M_check_lenEjPKc(i32 %arg1) local_unnamed_addr {
dec_label_pc_37baa:
  ret i32 %arg1
}

define i32 @function_37bb6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37bb6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_37bb8 = load i32, i32* @ebp, align 4
  %v0_37bb9 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_37bb9 = or i32 %v0_37bb9, 137
  store i32 %v11_37bb9, i32* %eax.global-to-local, align 8
  %v0_37bbc = load i32, i32* @ecx, align 8
  %v1_37bbc = add i32 %v0_37bbc, 255
  %v1_37bbe = add i32 %v0_37bb8, 3
  store i32 %v1_37bbe, i32* @ebp, align 4
  %v1_37bbf = add i32 %v0_37bbc, -1587159996
  %v2_37bbf = inttoptr i32 %v1_37bbf to i8*
  %v3_37bbf = load i8, i8* %v2_37bbf, align 1
  %v5_37bbf = trunc i32 %v1_37bbc to i8
  %v8_37bbf = add i8 %v3_37bbf, %v5_37bbf
  %v28_37bbf = icmp ult i8 %v8_37bbf, %v3_37bbf
  store i1 %v28_37bbf, i1* %cf.global-to-local, align 1
  store i8 %v8_37bbf, i8* %v2_37bbf, align 1
  %v0_37bc5 = load i32, i32* %eax.global-to-local, align 8
  %v1_37bc5 = trunc i32 %v0_37bc5 to i8
  %v2_37bc5 = load i1, i1* %cf.global-to-local, align 1
  %v3_37bc5 = zext i1 %v2_37bc5 to i8
  %v4_37bc5 = add i8 %v3_37bc5, %v1_37bc5
  %v19_37bc5 = icmp ule i8 %v4_37bc5, %v1_37bc5
  %v21_37bc5 = icmp eq i1 %v2_37bc5, %v19_37bc5
  store i1 %v21_37bc5, i1* %cf.global-to-local, align 1
  %v22_37bc5 = zext i8 %v4_37bc5 to i32
  %v24_37bc5 = and i32 %v0_37bc5, -256
  %v25_37bc5 = or i32 %v22_37bc5, %v24_37bc5
  store i32 %v25_37bc5, i32* %eax.global-to-local, align 8
  %v1_37bc7 = inttoptr i32 %v25_37bc5 to i8*
  %v2_37bc7 = load i8, i8* %v1_37bc7, align 1
  %v5_37bc7 = add i8 %v2_37bc7, %v4_37bc5
  store i8 %v5_37bc7, i8* %v1_37bc7, align 1
  %v0_37bc9 = load i32, i32* %eax.global-to-local, align 8
  %v1_37bc9 = load i32, i32* @ebp, align 4
  %v2_37bc9 = add i32 %v1_37bc9, -12
  %v3_37bc9 = inttoptr i32 %v2_37bc9 to i32*
  store i32 %v0_37bc9, i32* %v3_37bc9, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_37bce = load i32, i32* @ebp, align 4
  %v1_37bce = add i32 %v0_37bce, -28
  %v2_37bce = inttoptr i32 %v1_37bce to i32*
  %v3_37bce = load i32, i32* %v2_37bce, align 4
  store i32 %v3_37bce, i32* %eax.global-to-local, align 8
  %v1_37bd4 = call i32 @unknown_70b00(i32 %v3_37bce)
  store i32 %v1_37bd4, i32* %eax.global-to-local, align 8
  store i32 %v1_37bd4, i32* %ebx.global-to-local, align 4
  %v0_37bdb = load i32, i32* @ebp, align 4
  %v1_37bdb = add i32 %v0_37bdb, -28
  %v2_37bdb = inttoptr i32 %v1_37bdb to i32*
  %v3_37bdb = load i32, i32* %v2_37bdb, align 4
  store i32 %v3_37bdb, i32* %eax.global-to-local, align 8
  %v1_37be1 = call i32 @unknown_4e678(i32 %v3_37bdb)
  store i32 %v1_37be1, i32* %eax.global-to-local, align 8
  %v0_37be6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_37be8 = sub i32 %v0_37be6, %v1_37be1
  %v0_37bea = load i32, i32* @ebp, align 4
  %v1_37bea = add i32 %v0_37bea, -32
  %v2_37bea = inttoptr i32 %v1_37bea to i32*
  %v3_37bea = load i32, i32* %v2_37bea, align 4
  %v7_37bed = icmp ult i32 %v2_37be8, %v3_37bea
  %v1_37bef = zext i1 %v7_37bed to i32
  %v3_37bef = and i32 %v3_37bea, -256
  %v4_37bef = or i32 %v1_37bef, %v3_37bef
  store i32 %v4_37bef, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_37bf2 = icmp eq i1 %v7_37bed, false
  br i1 %v5_37bf2, label %bb, label %dec_label_pc_37bf6

bb:                                               ; preds = %dec_label_pc_37bb6
  %v1_37bf4 = call i32 @function_37c01()
  store i32 %v1_37bf4, i32* %eax.global-to-local, align 8
  %v0_37bf6.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_37bf6

dec_label_pc_37bf6:                               ; preds = %bb, %dec_label_pc_37bb6
  %v0_37bf6 = phi i32 [ %v0_37bf6.pre, %bb ], [ %v0_37bea, %dec_label_pc_37bb6 ]
  %v1_37bf6 = add i32 %v0_37bf6, -36
  %v2_37bf6 = inttoptr i32 %v1_37bf6 to i32*
  %v3_37bf6 = load i32, i32* %v2_37bf6, align 4
  store i32 %v3_37bf6, i32* %eax.global-to-local, align 8
  ret i32 %v3_37bf6

; uselistorder directives
  uselistorder i1 %v7_37bed, { 1, 0 }
  uselistorder i8 %v4_37bc5, { 0, 2, 1 }
  uselistorder i8 %v1_37bc5, { 1, 0 }
  uselistorder i8 %v3_37bbf, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
}

define i32 @function_37c01() local_unnamed_addr {
dec_label_pc_37c01:
  %ebx.global-to-local = alloca i32, align 4
  %v0_37c01 = load i32, i32* @ebp, align 4
  %v1_37c01 = add i32 %v0_37c01, -28
  %v2_37c01 = inttoptr i32 %v1_37c01 to i32*
  %v3_37c01 = load i32, i32* %v2_37c01, align 4
  %v1_37c07 = call i32 @unknown_4e678(i32 %v3_37c01)
  store i32 %v1_37c07, i32* %ebx.global-to-local, align 4
  %v0_37c0e = load i32, i32* @ebp, align 4
  %v1_37c0e = add i32 %v0_37c0e, -28
  %v2_37c0e = inttoptr i32 %v1_37c0e to i32*
  %v3_37c0e = load i32, i32* %v2_37c0e, align 4
  %v1_37c14 = call i32 @unknown_4e678(i32 %v3_37c0e)
  %v1_37c19 = load i32, i32* @ebp, align 4
  %v2_37c19 = add i32 %v1_37c19, -20
  %v3_37c19 = inttoptr i32 %v2_37c19 to i32*
  store i32 %v1_37c14, i32* %v3_37c19, align 4
  %v0_37c1c = load i32, i32* @ebp, align 4
  %v1_37c1c = add i32 %v0_37c1c, -32
  %v1_37c23 = add i32 %v0_37c1c, -20
  %v2_37c29 = call i32 @unknown_5fa3f(i32 %v1_37c23, i32 %v1_37c1c)
  %v1_37c2e = inttoptr i32 %v2_37c29 to i32*
  %v2_37c2e = load i32, i32* %v1_37c2e, align 4
  %v1_37c30 = load i32, i32* %ebx.global-to-local, align 4
  %v2_37c30 = add i32 %v1_37c30, %v2_37c2e
  ret i32 %v2_37c30
}

define i32 @function_37c34(i32 %arg1) local_unnamed_addr {
dec_label_pc_37c34:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37c35() local_unnamed_addr {
dec_label_pc_37c35:
  %ebp.global-to-local = alloca i32, align 4
  %tmp94 = call i32 @__decompiler_undefined_function_0()
  %v1_37c35 = add i32 %tmp94, -28
  %v2_37c35 = inttoptr i32 %v1_37c35 to i32*
  %v3_37c35 = load i32, i32* %v2_37c35, align 4
  %v1_37c3b = call i32 @unknown_4e678(i32 %v3_37c35)
  %v1_37c40 = load i32, i32* %ebp.global-to-local, align 4
  %v2_37c40 = add i32 %v1_37c40, -16
  %v3_37c40 = inttoptr i32 %v2_37c40 to i32*
  %v4_37c40 = load i32, i32* %v3_37c40, align 4
  %tmp100 = icmp ugt i32 %v1_37c3b, %v4_37c40
  br i1 %tmp100, label %dec_label_pc_37c55, label %dec_label_pc_37c45

dec_label_pc_37c45:                               ; preds = %dec_label_pc_37c35
  %v1_37c45 = add i32 %v1_37c40, -28
  %v2_37c45 = inttoptr i32 %v1_37c45 to i32*
  %v3_37c45 = load i32, i32* %v2_37c45, align 4
  %v1_37c4b = call i32 @unknown_70b00(i32 %v3_37c45)
  %v1_37c50 = load i32, i32* %ebp.global-to-local, align 4
  %v2_37c50 = add i32 %v1_37c50, -16
  %v3_37c50 = inttoptr i32 %v2_37c50 to i32*
  %v4_37c50 = load i32, i32* %v3_37c50, align 4
  %v10_37c50 = icmp ult i32 %v1_37c4b, %v4_37c50
  %v1_37c53 = icmp eq i1 %v10_37c50, false
  br i1 %v1_37c53, label %dec_label_pc_37c65, label %dec_label_pc_37c55

dec_label_pc_37c55:                               ; preds = %dec_label_pc_37c35, %dec_label_pc_37c45
  %v0_37c55 = phi i32 [ %v1_37c40, %dec_label_pc_37c35 ], [ %v1_37c50, %dec_label_pc_37c45 ]
  %v1_37c55 = add i32 %v0_37c55, -28
  %v2_37c55 = inttoptr i32 %v1_37c55 to i32*
  %v3_37c55 = load i32, i32* %v2_37c55, align 4
  %v1_37c5b = call i32 @unknown_70b00(i32 %v3_37c55)
  %v0_37c65.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_37c65

dec_label_pc_37c65:                               ; preds = %dec_label_pc_37c45, %dec_label_pc_37c55
  %v0_37c65 = phi i32 [ %v0_37c65.pre, %dec_label_pc_37c55 ], [ %v1_37c50, %dec_label_pc_37c45 ]
  %storemerge = phi i32 [ %v1_37c5b, %dec_label_pc_37c55 ], [ %v4_37c50, %dec_label_pc_37c45 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_37c65 = add i32 %v0_37c65, -12
  %v2_37c65 = inttoptr i32 %v1_37c65 to i32*
  %v3_37c65 = load i32, i32* %v2_37c65, align 4
  %v1_37c68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37c68 = icmp eq i32 %v1_37c68, %v3_37c65
  br i1 %v3_37c68, label %bb, label %dec_label_pc_37c71

bb:                                               ; preds = %dec_label_pc_37c65
  %v1_37c6f = call i32 @function_37c76()
  br label %dec_label_pc_37c71

dec_label_pc_37c71:                               ; preds = %bb, %dec_label_pc_37c65
  %v2_37c6f = phi i32 [ %v1_37c6f, %bb ], [ %storemerge, %dec_label_pc_37c65 ]
  ret i32 %v2_37c6f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_70b00, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_4e678, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_37c65, { 1, 0 }
  uselistorder label %dec_label_pc_37c55, { 1, 0 }
}

define i32 @function_37c76() local_unnamed_addr {
dec_label_pc_37c76:
  %v0_37c7b = load i32, i32* @eax, align 8
  ret i32 %v0_37c7b
}

define i32 @_ZNSt12_Vector_baseI12CTransactionSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37c7c:
  %stack_var_-60 = alloca i32, align 4
  %v10_37c99 = icmp eq i32 %arg2, 0
  br i1 %v10_37c99, label %dec_label_pc_37cc0, label %dec_label_pc_37c9f

dec_label_pc_37c9f:                               ; preds = %dec_label_pc_37c7c
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v3_37cb4 = call i32 @unknown_70c10(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_37cc0

dec_label_pc_37cc0:                               ; preds = %dec_label_pc_37c7c, %dec_label_pc_37c9f
  %storemerge = phi i32 [ %v3_37cb4, %dec_label_pc_37c9f ], [ 0, %dec_label_pc_37c7c ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_37ccc

bb:                                               ; preds = %dec_label_pc_37cc0
  %v1_37cca = load i32, i32* %stack_var_-60, align 4
  %v2_37cca = call i32 @function_37cd1(i32 %v1_37cca)
  br label %dec_label_pc_37ccc

dec_label_pc_37ccc:                               ; preds = %bb, %dec_label_pc_37cc0
  %v3_37cca = phi i32 [ %v2_37cca, %bb ], [ %storemerge, %dec_label_pc_37cc0 ]
  ret i32 %v3_37cca

; uselistorder directives
  uselistorder i32 (i32)* @function_37cd1, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_37cc0, { 1, 0 }
}

define i32 @function_37cd1(i32 %arg1) local_unnamed_addr {
dec_label_pc_37cd1:
  %v0_37cd2 = load i32, i32* @eax, align 8
  ret i32 %v0_37cd2
}

define i32 @_Z11UnserializeI11CDataStream5CTxInSaIS1_EEvRT_RSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37cd3:
  %stack_var_-17 = alloca i32, align 4
  %v0_37cf1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37cfc = ptrtoint i32* %stack_var_-17 to i32
  %v5_37d1e = call i32 @unknown_70cc5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_37cfc)
  ret i32 %v0_37cf1
}

define i32 @function_37d29(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37d29:
  %zf.global-to-local = alloca i1, align 1
  %v0_37d29 = load i32, i32* @eax, align 8
  %v1_37d29 = trunc i32 %v0_37d29 to i8
  %v2_37d29 = load i1, i1* @cf, align 1
  %v3_37d29 = zext i1 %v2_37d29 to i8
  %v4_37d29 = add i8 %v3_37d29, %v1_37d29
  %v13_37d29 = icmp eq i8 %v4_37d29, 0
  store i1 %v13_37d29, i1* %zf.global-to-local, align 1
  %v22_37d29 = zext i8 %v4_37d29 to i32
  %v24_37d29 = and i32 %v0_37d29, -256
  %v25_37d29 = or i32 %v22_37d29, %v24_37d29
  store i32 %v25_37d29, i32* @eax, align 8
  %v1_37d2b = inttoptr i32 %v25_37d29 to i8*
  %v2_37d2b = load i8, i8* %v1_37d2b, align 1
  %v5_37d2b = add i8 %v2_37d2b, %v4_37d29
  %v15_37d2b = icmp eq i8 %v5_37d2b, 0
  store i1 %v15_37d2b, i1* %zf.global-to-local, align 1
  store i8 %v5_37d2b, i8* %v1_37d2b, align 1
  %v0_37d2d = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_37d2d, label %bb, label %dec_label_pc_37d29.dec_label_pc_37d2f_crit_edge

dec_label_pc_37d29.dec_label_pc_37d2f_crit_edge:  ; preds = %dec_label_pc_37d29
  %v2_37d2d.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_37d2f

bb:                                               ; preds = %dec_label_pc_37d29
  %v1_37d2d = call i32 @function_37d34()
  br label %dec_label_pc_37d2f

dec_label_pc_37d2f:                               ; preds = %dec_label_pc_37d29.dec_label_pc_37d2f_crit_edge, %bb
  %v2_37d2d = phi i32 [ %v2_37d2d.pre, %dec_label_pc_37d29.dec_label_pc_37d2f_crit_edge ], [ %v1_37d2d, %bb ]
  ret i32 %v2_37d2d

; uselistorder directives
  uselistorder label %dec_label_pc_37d2f, { 1, 0 }
}

define i32 @function_37d34() local_unnamed_addr {
dec_label_pc_37d34:
  %v0_37d35 = load i32, i32* @eax, align 8
  ret i32 %v0_37d35
}

define i32 @_Z11UnserializeI11CDataStream6CTxOutSaIS1_EEvRT_RSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37d36:
  ret i32 %arg1
}

define i32 @function_37d82(i16 %arg1) local_unnamed_addr {
dec_label_pc_37d82:
  %v6_37d82 = load i32, i32* @eax, align 8
  ret i32 %v6_37d82
}

define i32 @function_37d96() local_unnamed_addr {
dec_label_pc_37d96:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37d96 = load i32, i32* %ecx.global-to-local, align 8
  %v1_37d96 = add i32 %v0_37d96, -1
  store i32 %v1_37d96, i32* %ecx.global-to-local, align 8
  %v0_37d98 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37d98
}

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_37d9a:
  %v0_37da6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_37da6
}

define i32 @function_37dc6() local_unnamed_addr {
dec_label_pc_37dc6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37dc6 = load i32, i32* %ecx.global-to-local, align 8
  %v1_37dc6 = add i32 %v0_37dc6, -1
  store i32 %v1_37dc6, i32* %ecx.global-to-local, align 8
  %v0_37dc8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37dc8
}

declare i32 @unknown_37dc9(i32) local_unnamed_addr

define i32 @_ZNK5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_37dca:
  %v2_37de4 = load i32, i32* %arg1, align 4
  ret i32 %v2_37de4
}

define i32 @function_37df6(i32 %arg1) local_unnamed_addr {
dec_label_pc_37df6:
  %v0_37df6 = load i32, i32* @ecx, align 8
  %v1_37df6 = add i32 %v0_37df6, -1
  store i32 %v1_37df6, i32* @ecx, align 8
  %v0_37df8 = load i32, i32* @eax, align 8
  ret i32 %v0_37df8
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKSsEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37dfa:
  %v2_37e20 = load i32, i32* %arg1, align 4
  ret i32 %v2_37e20
}

define i32 @function_37e23(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37e23:
  %v0_37e24 = load i32, i32* @ecx, align 8
  %v1_37e24 = add i32 %v0_37e24, -1
  store i32 %v1_37e24, i32* @ecx, align 8
  %v0_37e27 = load i32, i32* @eax, align 8
  %v11_37e27 = and i32 %v0_37e27, -252
  %v1_37e2c = call i32 @unknown_71038(i32 %v11_37e27)
  store i32 %v1_37e2c, i32* @eax, align 8
  %v0_37e31 = load i32, i32* @ebp, align 4
  %v1_37e31 = add i32 %v0_37e31, -12
  %v2_37e31 = inttoptr i32 %v1_37e31 to i32*
  %v3_37e31 = load i32, i32* %v2_37e31, align 4
  %v1_37e34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37e34 = icmp eq i32 %v1_37e34, %v3_37e31
  br i1 %v3_37e34, label %bb, label %dec_label_pc_37e3d

bb:                                               ; preds = %dec_label_pc_37e23
  %v1_37e3b = call i32 @function_37e42()
  br label %dec_label_pc_37e3d

dec_label_pc_37e3d:                               ; preds = %bb, %dec_label_pc_37e23
  %v3_37e3b = phi i32 [ %v1_37e3b, %bb ], [ %v1_37e2c, %dec_label_pc_37e23 ]
  ret i32 %v3_37e3b
}

define i32 @function_37e42() local_unnamed_addr {
dec_label_pc_37e42:
  %v0_37e43 = load i32, i32* @eax, align 8
  ret i32 %v0_37e43
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitISt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37e44:
  ret i32 %arg2
}

define i32 @function_37e6e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37e6e:
  %eax.global-to-local = alloca i32, align 4
  %v0_37e6e = load i32, i32* @ecx, align 8
  %v1_37e6e = udiv i32 %v0_37e6e, 256
  %v2_37e6e = trunc i32 %v1_37e6e to i8
  %v4_37e6e = add i32 %v0_37e6e, 3
  %v5_37e6e = inttoptr i32 %v4_37e6e to i8*
  %v6_37e6e = load i8, i8* %v5_37e6e, align 1
  %v7_37e6e = and i8 %v2_37e6e, %v6_37e6e
  %v13_37e6e = zext i8 %v7_37e6e to i32
  %v15_37e6e = mul nuw nsw i32 %v13_37e6e, 256
  %v16_37e6e = and i32 %v0_37e6e, -65281
  %v17_37e6e = or i32 %v15_37e6e, %v16_37e6e
  store i32 %v17_37e6e, i32* @ecx, align 8
  %v3_37e71 = load i32, i32* @eax, align 8
  %v11_37e74 = and i32 %v3_37e71, -248
  store i32 %v11_37e74, i32* %eax.global-to-local, align 8
  %v1_37e76 = inttoptr i32 %v11_37e74 to i32*
  %v2_37e76 = load i32, i32* %v1_37e76, align 8
  %v4_37e76 = add i32 %v2_37e76, %v11_37e74
  store i32 %v4_37e76, i32* %v1_37e76, align 8
  %v0_37e78 = load i32, i32* %eax.global-to-local, align 8
  %v1_37e78 = inttoptr i32 %v0_37e78 to i8*
  %v2_37e78 = load i8, i8* %v1_37e78, align 1
  %v4_37e78 = trunc i32 %v0_37e78 to i8
  %v5_37e78 = add i8 %v2_37e78, %v4_37e78
  store i8 %v5_37e78, i8* %v1_37e78, align 1
  %v0_37e7a = load i32, i32* %eax.global-to-local, align 8
  %v0_37e7e = load i32, i32* @ebp, align 4
  %v1_37e7e = add i32 %v0_37e7e, -28
  %v2_37e7e = inttoptr i32 %v1_37e7e to i32*
  %v3_37e7e = load i32, i32* %v2_37e7e, align 4
  store i32 %v3_37e7e, i32* %eax.global-to-local, align 8
  %v2_37e84 = call i32 @unknown_710b8(i32 %v3_37e7e, i32 %v0_37e7a)
  store i32 %v2_37e84, i32* @eax, align 8
  %v0_37e89 = load i32, i32* @ebp, align 4
  %v1_37e89 = add i32 %v0_37e89, -12
  %v2_37e89 = inttoptr i32 %v1_37e89 to i32*
  %v3_37e89 = load i32, i32* %v2_37e89, align 4
  %v1_37e8c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37e8c = icmp eq i32 %v1_37e8c, %v3_37e89
  br i1 %v3_37e8c, label %bb, label %dec_label_pc_37e95

bb:                                               ; preds = %dec_label_pc_37e6e
  %v1_37e93 = call i32 @function_37e9a()
  store i32 %v1_37e93, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_37e95

dec_label_pc_37e95:                               ; preds = %bb, %dec_label_pc_37e6e
  %v3_37e93 = phi i32 [ %v1_37e93, %bb ], [ %v2_37e84, %dec_label_pc_37e6e ]
  ret i32 %v3_37e93

; uselistorder directives
  uselistorder i32 %v11_37e74, { 0, 2, 1 }
  uselistorder i32 %v0_37e6e, { 1, 2, 0 }
}

define i32 @function_37e9a() local_unnamed_addr {
dec_label_pc_37e9a:
  %v0_37e9b = load i32, i32* @eax, align 8
  ret i32 %v0_37e9b
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitISt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RKNS_17recursive_wrapperIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37e9c:
  %v1_37ec5 = call i32 @unknown_6e822(i32 %arg2)
  ret i32 %v1_37ec5
}

define i32 @function_37ece(i32 %arg1) local_unnamed_addr {
dec_label_pc_37ece:
  %v2_37ece = load i32, i32* @eax, align 8
  %v4_37ece = mul i32 %v2_37ece, 2
  %v21_37ece = inttoptr i32 %v2_37ece to i32*
  store i32 %v4_37ece, i32* %v21_37ece, align 4
  %v2_37ed0 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_37ed0 = load i32, i32* @eax, align 8
  %v4_37ed0 = trunc i32 %v3_37ed0 to i8
  %v5_37ed0 = add i8 %v4_37ed0, %v2_37ed0
  %v21_37ed0 = inttoptr i32 %v3_37ed0 to i8*
  store i8 %v5_37ed0, i8* %v21_37ed0, align 1
  %v0_37ed2 = load i32, i32* @eax, align 8
  %v0_37ed6 = load i32, i32* @ebp, align 4
  %v1_37ed6 = add i32 %v0_37ed6, -28
  %v2_37ed6 = inttoptr i32 %v1_37ed6 to i32*
  %v3_37ed6 = load i32, i32* %v2_37ed6, align 4
  %v2_37edc = call i32 @unknown_7115a(i32 %v3_37ed6, i32 %v0_37ed2)
  ret i32 %v2_37edc

; uselistorder directives
  uselistorder i32 %v2_37ece, { 1, 0 }
}

define i32 @function_37ee4(i32 %arg1) local_unnamed_addr {
dec_label_pc_37ee4:
  %v0_37ee4 = load i32, i32* @edx, align 4
  %v1_37ee4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37ee4 = icmp eq i32 %v1_37ee4, %v0_37ee4
  br i1 %v3_37ee4, label %bb, label %dec_label_pc_37ee4.dec_label_pc_37eed_crit_edge

dec_label_pc_37ee4.dec_label_pc_37eed_crit_edge:  ; preds = %dec_label_pc_37ee4
  %v3_37eeb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_37eed

bb:                                               ; preds = %dec_label_pc_37ee4
  %v1_37eeb = call i32 @function_37ef2()
  br label %dec_label_pc_37eed

dec_label_pc_37eed:                               ; preds = %dec_label_pc_37ee4.dec_label_pc_37eed_crit_edge, %bb
  %v3_37eeb = phi i32 [ %v3_37eeb.pre, %dec_label_pc_37ee4.dec_label_pc_37eed_crit_edge ], [ %v1_37eeb, %bb ]
  ret i32 %v3_37eeb

; uselistorder directives
  uselistorder label %dec_label_pc_37eed, { 1, 0 }
}

define i32 @function_37ef2() local_unnamed_addr {
dec_label_pc_37ef2:
  %v0_37ef3 = load i32, i32* @eax, align 8
  ret i32 %v0_37ef3
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKbEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37ef4:
  %v2_37f1a = load i32, i32* %arg1, align 4
  %v2_37f26 = call i32 @unknown_711fc(i32 %v2_37f1a, i32 %arg2)
  store i32 %v2_37f26, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_37f37

bb:                                               ; preds = %dec_label_pc_37ef4
  %v1_37f35 = call i32 @function_37f3c()
  br label %dec_label_pc_37f37

dec_label_pc_37f37:                               ; preds = %bb, %dec_label_pc_37ef4
  %v3_37f35 = phi i32 [ %v1_37f35, %bb ], [ %v2_37f26, %dec_label_pc_37ef4 ]
  ret i32 %v3_37f35
}

define i32 @function_37f3c() local_unnamed_addr {
dec_label_pc_37f3c:
  %v0_37f3d = load i32, i32* @eax, align 8
  ret i32 %v0_37f3d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIS4_EEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37f3e:
  %v2_37f64 = load i32, i32* %arg1, align 4
  ret i32 %v2_37f64
}

define i32 @function_37f6e(i32 %arg1) local_unnamed_addr {
dec_label_pc_37f6e:
  %v0_37f70 = call i32 @unknown_7127c()
  store i32 %v0_37f70, i32* @eax, align 8
  %v0_37f75 = load i32, i32* @ebp, align 4
  %v1_37f75 = add i32 %v0_37f75, -12
  %v2_37f75 = inttoptr i32 %v1_37f75 to i32*
  %v3_37f75 = load i32, i32* %v2_37f75, align 4
  %v1_37f78 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_37f78 = icmp eq i32 %v1_37f78, %v3_37f75
  br i1 %v3_37f78, label %bb, label %dec_label_pc_37f81

bb:                                               ; preds = %dec_label_pc_37f6e
  %v1_37f7f = call i32 @function_37f86()
  br label %dec_label_pc_37f81

dec_label_pc_37f81:                               ; preds = %bb, %dec_label_pc_37f6e
  %v2_37f7f = phi i32 [ %v1_37f7f, %bb ], [ %v0_37f70, %dec_label_pc_37f6e ]
  ret i32 %v2_37f7f
}

define i32 @function_37f86() local_unnamed_addr {
dec_label_pc_37f86:
  %v0_37f87 = load i32, i32* @eax, align 8
  ret i32 %v0_37f87
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKdEEPS4_RT_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37f88:
  ret i32 %arg2
}

define i32 @function_37f9b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37f9b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_37f9b = load i32, i32* @ebp, align 4
  %v1_37f9b = add i32 %v0_37f9b, 1
  store i32 %v1_37f9b, i32* @ebp, align 4
  %v0_37f9c = load i32, i32* @ecx, align 8
  %v1_37f9c = add i32 %v0_37f9c, -1587159995
  %v2_37f9c = inttoptr i32 %v1_37f9c to i8*
  %v3_37f9c = load i8, i8* %v2_37f9c, align 1
  %v5_37f9c = trunc i32 %v0_37f9c to i8
  %v6_37f9c = load i1, i1* @cf, align 1
  %v7_37f9c = zext i1 %v6_37f9c to i8
  %v8_37f9c = add i8 %v3_37f9c, %v5_37f9c
  %v9_37f9c = add i8 %v7_37f9c, %v8_37f9c
  %v27_37f9c = icmp ule i8 %v9_37f9c, %v3_37f9c
  %v28_37f9c = icmp ult i8 %v8_37f9c, %v3_37f9c
  %v29_37f9c = select i1 %v6_37f9c, i1 %v27_37f9c, i1 %v28_37f9c
  store i1 %v29_37f9c, i1* %cf.global-to-local, align 1
  store i8 %v9_37f9c, i8* %v2_37f9c, align 1
  %v0_37fa2 = load i32, i32* @eax, align 8
  %v1_37fa2 = trunc i32 %v0_37fa2 to i8
  %v2_37fa2 = load i1, i1* %cf.global-to-local, align 1
  %v3_37fa2 = zext i1 %v2_37fa2 to i8
  %v4_37fa2 = add i8 %v3_37fa2, %v1_37fa2
  %v19_37fa2 = icmp ule i8 %v4_37fa2, %v1_37fa2
  %v21_37fa2 = icmp eq i1 %v2_37fa2, %v19_37fa2
  store i1 %v21_37fa2, i1* %cf.global-to-local, align 1
  %v22_37fa2 = zext i8 %v4_37fa2 to i32
  %v24_37fa2 = and i32 %v0_37fa2, -256
  %v25_37fa2 = or i32 %v22_37fa2, %v24_37fa2
  store i32 %v25_37fa2, i32* %eax.global-to-local, align 8
  %v1_37fa4 = inttoptr i32 %v25_37fa2 to i8*
  %v2_37fa4 = load i8, i8* %v1_37fa4, align 1
  %v5_37fa4 = add i8 %v2_37fa4, %v4_37fa2
  store i8 %v5_37fa4, i8* %v1_37fa4, align 1
  %v0_37fa6 = load i32, i32* %eax.global-to-local, align 8
  %v1_37fa6 = load i32, i32* @ebp, align 4
  %v2_37fa6 = add i32 %v1_37fa6, -12
  %v3_37fa6 = inttoptr i32 %v2_37fa6 to i32*
  store i32 %v0_37fa6, i32* %v3_37fa6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_37fab = load i32, i32* @ebp, align 4
  %v1_37fab = add i32 %v0_37fab, -28
  %v2_37fab = inttoptr i32 %v1_37fab to i32*
  %v3_37fab = load i32, i32* %v2_37fab, align 4
  store i32 %v3_37fab, i32* %eax.global-to-local, align 8
  %v1_37fae = inttoptr i32 %v3_37fab to i32*
  %v2_37fae = load i32, i32* %v1_37fae, align 4
  store i32 %v2_37fae, i32* %eax.global-to-local, align 8
  %v1_37fb0 = add i32 %v0_37fab, -32
  %v2_37fb0 = inttoptr i32 %v1_37fb0 to i32*
  %v3_37fb0 = load i32, i32* %v2_37fb0, align 4
  %v2_37fba = call i32 @unknown_71302(i32 %v2_37fae, i32 %v3_37fb0)
  store i32 %v2_37fba, i32* @eax, align 8
  %v0_37fbf = load i32, i32* @ebp, align 4
  %v1_37fbf = add i32 %v0_37fbf, -12
  %v2_37fbf = inttoptr i32 %v1_37fbf to i32*
  %v3_37fbf = load i32, i32* %v2_37fbf, align 4
  %v1_37fc2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_37fc2 = icmp eq i32 %v1_37fc2, %v3_37fbf
  br i1 %v3_37fc2, label %bb, label %dec_label_pc_37fcb

bb:                                               ; preds = %dec_label_pc_37f9b
  %v1_37fc9 = call i32 @function_37fd0()
  store i32 %v1_37fc9, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_37fcb

dec_label_pc_37fcb:                               ; preds = %bb, %dec_label_pc_37f9b
  %v2_37fc9 = phi i32 [ %v1_37fc9, %bb ], [ %v2_37fba, %dec_label_pc_37f9b ]
  ret i32 %v2_37fc9

; uselistorder directives
  uselistorder i8 %v4_37fa2, { 0, 2, 1 }
  uselistorder i8 %v1_37fa2, { 1, 0 }
  uselistorder i8 %v9_37f9c, { 1, 0 }
  uselistorder i8 %v8_37f9c, { 1, 0 }
}

define i32 @function_37fd0() local_unnamed_addr {
dec_label_pc_37fd0:
  %v0_37fd1 = load i32, i32* @eax, align 8
  ret i32 %v0_37fd1
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclISsEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37fd2:
  ret i32 0
}

define i32 @function_37ff1(i32 %arg1) local_unnamed_addr {
dec_label_pc_37ff1:
  %cf.global-to-local = alloca i1, align 1
  %v2_37ff1 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_37ff1 = load i32, i32* @eax, align 8
  %v4_37ff1 = trunc i32 %v3_37ff1 to i8
  %v5_37ff1 = add i8 %v4_37ff1, %v2_37ff1
  %v10_37ff1 = icmp ult i8 %v5_37ff1, %v2_37ff1
  store i1 %v10_37ff1, i1* %cf.global-to-local, align 1
  %v21_37ff1 = inttoptr i32 %v3_37ff1 to i8*
  store i8 %v5_37ff1, i8* %v21_37ff1, align 1
  %v0_37ff3 = load i32, i32* @ebx, align 4
  %v1_37ff3 = add i32 %v0_37ff3, 862319701
  %v2_37ff3 = inttoptr i32 %v1_37ff3 to i8*
  %v3_37ff3 = load i8, i8* %v2_37ff3, align 1
  %v4_37ff3 = load i32, i32* @ecx, align 8
  %v5_37ff3 = trunc i32 %v4_37ff3 to i8
  %v6_37ff3 = add i8 %v5_37ff3, %v3_37ff3
  %v11_37ff3 = icmp ult i8 %v6_37ff3, %v3_37ff3
  store i1 %v11_37ff3, i1* %cf.global-to-local, align 1
  store i8 %v6_37ff3, i8* %v2_37ff3, align 1
  %v0_37ff9 = load i32, i32* @eax, align 8
  %v1_37ff9 = load i1, i1* %cf.global-to-local, align 1
  %v2_37ff9 = zext i1 %v1_37ff9 to i32
  %v3_37ff9 = add i32 %v0_37ff9, 20
  %v4_37ff9 = add i32 %v3_37ff9, %v2_37ff9
  %v14_37ff9 = icmp eq i32 %v4_37ff9, 0
  %v22_37ff9 = icmp ule i32 %v4_37ff9, %v0_37ff9
  %v23_37ff9 = icmp ugt i32 %v0_37ff9, -21
  %v24_37ff9 = select i1 %v1_37ff9, i1 %v22_37ff9, i1 %v23_37ff9
  store i1 %v24_37ff9, i1* @cf, align 1
  store i32 %v4_37ff9, i32* @eax, align 8
  br i1 %v14_37ff9, label %bb, label %dec_label_pc_38000

bb:                                               ; preds = %dec_label_pc_37ff1
  %v1_37ffe = call i32 @function_38005()
  br label %dec_label_pc_38000

dec_label_pc_38000:                               ; preds = %bb, %dec_label_pc_37ff1
  %v2_37ffe = phi i32 [ %v1_37ffe, %bb ], [ %v4_37ff9, %dec_label_pc_37ff1 ]
  ret i32 %v2_37ffe

; uselistorder directives
  uselistorder i32 %v4_37ff9, { 0, 2, 1, 3 }
  uselistorder i8 %v3_37ff3, { 1, 0 }
  uselistorder i8 %v2_37ff1, { 1, 0 }
}

define i32 @function_38005() local_unnamed_addr {
dec_label_pc_38005:
  %v0_38006 = load i32, i32* @eax, align 8
  ret i32 %v0_38006
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKSt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38008:
  ret i32 %arg3
}

define i32 @function_3801e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3801e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3801e = load i32, i32* @ebp, align 4
  %v1_3801e = add i32 %v0_3801e, 1
  store i32 %v1_3801e, i32* @ebp, align 4
  %v2_3801f = add i32 %v0_3801e, -94
  %v3_3801f = inttoptr i32 %v2_3801f to double*
  %v4_3801f = load double, double* %v3_3801f, align 4
  %v5_3801f = fpext double %v4_3801f to x86_fp80
  %v6_3801f = load x86_fp80, x86_fp80* @st0, align 4
  %v7_3801f = fsub x86_fp80 %v5_3801f, %v6_3801f
  store x86_fp80 %v7_3801f, x86_fp80* @st0, align 4
  %v0_38022 = load i32, i32* @eax, align 8
  %v1_38022 = trunc i32 %v0_38022 to i8
  %v2_38022 = load i1, i1* @cf, align 1
  %v3_38022 = zext i1 %v2_38022 to i8
  %v4_38022 = add i8 %v3_38022, %v1_38022
  %v22_38022 = zext i8 %v4_38022 to i32
  %v24_38022 = and i32 %v0_38022, -256
  %v25_38022 = or i32 %v22_38022, %v24_38022
  store i32 %v25_38022, i32* %eax.global-to-local, align 8
  %v1_38024 = inttoptr i32 %v25_38022 to i8*
  %v2_38024 = load i8, i8* %v1_38024, align 1
  %v5_38024 = add i8 %v2_38024, %v4_38022
  store i8 %v5_38024, i8* %v1_38024, align 1
  %v0_38026 = load i32, i32* %eax.global-to-local, align 8
  %v1_38026 = load i32, i32* @ebp, align 4
  %v2_38026 = add i32 %v1_38026, -12
  %v3_38026 = inttoptr i32 %v2_38026 to i32*
  store i32 %v0_38026, i32* %v3_38026, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3802b = load i32, i32* @ebp, align 4
  %v1_3802b = add i32 %v0_3802b, -28
  %v2_3802b = inttoptr i32 %v1_3802b to i32*
  %v3_3802b = load i32, i32* %v2_3802b, align 4
  store i32 %v3_3802b, i32* %eax.global-to-local, align 8
  %v1_3802e = inttoptr i32 %v3_3802b to i32*
  %v2_3802e = load i32, i32* %v1_3802e, align 4
  store i32 %v2_3802e, i32* %eax.global-to-local, align 8
  %v1_38030 = add i32 %v0_3802b, -32
  %v2_38030 = inttoptr i32 %v1_38030 to i32*
  %v3_38030 = load i32, i32* %v2_38030, align 4
  %v2_3803a = call i32 @unknown_713b8(i32 %v2_3802e, i32 %v3_38030)
  store i32 %v2_3803a, i32* @eax, align 8
  %v0_3803f = load i32, i32* @ebp, align 4
  %v1_3803f = add i32 %v0_3803f, -12
  %v2_3803f = inttoptr i32 %v1_3803f to i32*
  %v3_3803f = load i32, i32* %v2_3803f, align 4
  %v1_38042 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38042 = icmp eq i32 %v1_38042, %v3_3803f
  br i1 %v3_38042, label %bb, label %dec_label_pc_3804b

bb:                                               ; preds = %dec_label_pc_3801e
  %v2_38049 = call i32 @function_38050(i32 %v2_3802e)
  store i32 %v2_38049, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3804b

dec_label_pc_3804b:                               ; preds = %bb, %dec_label_pc_3801e
  %v3_38049 = phi i32 [ %v2_38049, %bb ], [ %v2_3803a, %dec_label_pc_3801e ]
  ret i32 %v3_38049
}

define i32 @function_38050(i32 %arg1) local_unnamed_addr {
dec_label_pc_38050:
  %v0_38051 = load i32, i32* @eax, align 8
  ret i32 %v0_38051
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKbEEE14internal_visitIKSt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38052:
  %v2_38078 = load i32, i32* %arg1, align 4
  %v2_38084 = call i32 @unknown_71438(i32 %v2_38078, i32 %arg2)
  ret i32 %v2_38084
}

define i32 @function_38093(i32 %arg1) local_unnamed_addr {
dec_label_pc_38093:
  %v0_38093 = load i1, i1* @zf, align 1
  br i1 %v0_38093, label %bb, label %dec_label_pc_38093.dec_label_pc_38095_crit_edge

dec_label_pc_38093.dec_label_pc_38095_crit_edge:  ; preds = %dec_label_pc_38093
  %v2_38093.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_38095

bb:                                               ; preds = %dec_label_pc_38093
  %v1_38093 = call i32 @function_3809a()
  br label %dec_label_pc_38095

dec_label_pc_38095:                               ; preds = %dec_label_pc_38093.dec_label_pc_38095_crit_edge, %bb
  %v2_38093 = phi i32 [ %v2_38093.pre, %dec_label_pc_38093.dec_label_pc_38095_crit_edge ], [ %v1_38093, %bb ]
  ret i32 %v2_38093

; uselistorder directives
  uselistorder label %dec_label_pc_38095, { 1, 0 }
}

define i32 @function_3809a() local_unnamed_addr {
dec_label_pc_3809a:
  %v0_3809b = load i32, i32* @eax, align 8
  ret i32 %v0_3809b
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3809c:
  %v1_380bf = call i32 @unknown_714b7(i32 %arg2)
  store i32 %v1_380bf, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_380d0

bb:                                               ; preds = %dec_label_pc_3809c
  %v1_380ce = call i32 @function_380d5()
  br label %dec_label_pc_380d0

dec_label_pc_380d0:                               ; preds = %bb, %dec_label_pc_3809c
  %v2_380ce = phi i32 [ %v1_380ce, %bb ], [ %v1_380bf, %dec_label_pc_3809c ]
  ret i32 %v2_380ce
}

declare i32 @__stack_chk_fail.1408(i32) local_unnamed_addr

define i32 @function_380d5() local_unnamed_addr {
dec_label_pc_380d5:
  %v0_380d6 = load i32, i32* @eax, align 8
  ret i32 %v0_380d6
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclIxEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_380d8:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38106

bb:                                               ; preds = %dec_label_pc_380d8
  %v3_38104 = call i32 @function_3810b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_38106

dec_label_pc_38106:                               ; preds = %bb, %dec_label_pc_380d8
  %v4_38104 = phi i32 [ %v3_38104, %bb ], [ 0, %dec_label_pc_380d8 ]
  ret i32 %v4_38104
}

define i32 @function_3810b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3810b:
  %v0_3810c = load i32, i32* @eax, align 8
  ret i32 %v0_3810c
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclIdEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3810e:
  ret i32 0
}

define i32 @function_38138(i32 %arg1) local_unnamed_addr {
dec_label_pc_38138:
  %zf.global-to-local = alloca i1, align 1
  %v2_38138 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_38138 = load i32, i32* @eax, align 8
  %v4_38138 = trunc i32 %v3_38138 to i8
  %v5_38138 = add i8 %v4_38138, %v2_38138
  %v15_38138 = icmp eq i8 %v5_38138, 0
  store i1 %v15_38138, i1* %zf.global-to-local, align 1
  %v21_38138 = inttoptr i32 %v3_38138 to i8*
  store i8 %v5_38138, i8* %v21_38138, align 1
  %v0_3813a = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_3813a, label %bb, label %dec_label_pc_38138.dec_label_pc_3813c_crit_edge

dec_label_pc_38138.dec_label_pc_3813c_crit_edge:  ; preds = %dec_label_pc_38138
  %v2_3813a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3813c

bb:                                               ; preds = %dec_label_pc_38138
  %v1_3813a = call i32 @function_38141()
  br label %dec_label_pc_3813c

dec_label_pc_3813c:                               ; preds = %dec_label_pc_38138.dec_label_pc_3813c_crit_edge, %bb
  %v2_3813a = phi i32 [ %v2_3813a.pre, %dec_label_pc_38138.dec_label_pc_3813c_crit_edge ], [ %v1_3813a, %bb ]
  ret i32 %v2_3813a

; uselistorder directives
  uselistorder label %dec_label_pc_3813c, { 1, 0 }
}

define i32 @function_38141() local_unnamed_addr {
dec_label_pc_38141:
  %v0_38142 = load i32, i32* @eax, align 8
  ret i32 %v0_38142
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl6EEESsNS9_INSA_ILl5EEENS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENS9_INSA_ILl4EEENSD_ISE_INSF_10Value_implISI_EESaISP_EEEENS9_INSA_ILl3EEEbNS9_INSA_ILl2EEExNS9_INSA_ILl1EEEdNS7_5l_endEEEEEEEEEEEEEEENS8_ISW_EEEENS_7variantISsSM_SS_bxdNS1_5void_ES17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_S17_E17convert_copy_intoEPvNS18_18has_fallback_type_EEENT1_11result_typeEiiRS1C_T2_NS3_5bool_ILb0EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_38143:
  %eax.global-to-local = alloca i32, align 4
  %v17_38149 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_38149
}

define i32 @function_3814e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3814e:
  %v0_3814e = load i32, i32* @ecx, align 8
  %v1_3814e = add i32 %v0_3814e, 1166791749
  %v2_3814e = inttoptr i32 %v1_3814e to i8*
  %v3_3814e = load i8, i8* %v2_3814e, align 1
  %v5_3814e = trunc i32 %v0_3814e to i8
  %v6_3814e = or i8 %v3_3814e, %v5_3814e
  store i8 %v6_3814e, i8* %v2_3814e, align 1
  %v0_38156 = load i32, i32* @ebp, align 4
  %v1_38156 = add i32 %v0_38156, 1
  store i32 %v1_38156, i32* @ebp, align 4
  %v0_38157 = load i32, i32* @ebx, align 4
  %v1_38157 = add i32 %v0_38157, 1166610501
  %v2_38157 = inttoptr i32 %v1_38157 to i8*
  %v3_38157 = load i8, i8* %v2_38157, align 1
  %v4_38157 = udiv i8 %v3_38157, 2
  %v5_38157 = shl i8 %v3_38157, 7
  %v6_38157 = or i8 %v4_38157, %v5_38157
  store i8 %v6_38157, i8* %v2_38157, align 1
  %v0_3815e = load i32, i32* @ebp, align 4
  %v1_3815e = add i32 %v0_3815e, 20
  %v2_3815e = inttoptr i32 %v1_3815e to i32*
  %v3_3815e = load i32, i32* %v2_3815e, align 4
  %v2_38161 = add i32 %v0_3815e, -56
  %v3_38161 = inttoptr i32 %v2_38161 to i32*
  store i32 %v3_3815e, i32* %v3_38161, align 4
  %v0_38164 = load i32, i32* @ebp, align 4
  %v1_38164 = add i32 %v0_38164, 24
  %v2_38164 = inttoptr i32 %v1_38164 to i8*
  %v3_38164 = load i8, i8* %v2_38164, align 1
  %v3_38168 = add i32 %v0_38164, -57
  %v4_38168 = inttoptr i32 %v3_38168 to i8*
  store i8 %v3_38164, i8* %v4_38168, align 1
  %v0_3816b = load i32, i32* @ebp, align 4
  %v1_3816b = add i32 %v0_3816b, 28
  %v2_3816b = inttoptr i32 %v1_3816b to i8*
  %v3_3816b = load i8, i8* %v2_3816b, align 1
  %v3_3816f = add i32 %v0_3816b, -58
  %v4_3816f = inttoptr i32 %v3_3816f to i8*
  store i8 %v3_3816b, i8* %v4_3816f, align 1
  %v0_38172 = load i32, i32* @ebp, align 4
  %v1_38172 = add i32 %v0_38172, 32
  %v2_38172 = inttoptr i32 %v1_38172 to i32*
  %v3_38172 = load i32, i32* %v2_38172, align 4
  %v2_38175 = add i32 %v0_38172, -64
  %v3_38175 = inttoptr i32 %v2_38175 to i32*
  store i32 %v3_38172, i32* %v3_38175, align 4
  %v0_38178 = load i32, i32* @ebp, align 4
  %v1_38178 = add i32 %v0_38178, 36
  %v2_38178 = inttoptr i32 %v1_38178 to i32*
  %v3_38178 = load i32, i32* %v2_38178, align 4
  %v2_3817b = add i32 %v0_38178, -68
  %v3_3817b = inttoptr i32 %v2_3817b to i32*
  store i32 %v3_38178, i32* %v3_3817b, align 4
  %v0_3817e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_38184 = load i32, i32* @ebp, align 4
  %v2_38184 = add i32 %v1_38184, -28
  %v3_38184 = inttoptr i32 %v2_38184 to i32*
  store i32 %v0_3817e, i32* %v3_38184, align 4
  %v0_38189 = load i32, i32* @ebp, align 4
  %v1_38189 = add i32 %v0_38189, -48
  %v2_38189 = inttoptr i32 %v1_38189 to i32*
  %v3_38189 = load i32, i32* %v2_38189, align 4
  %tmp = icmp ult i32 %v3_38189, 20
  br i1 %tmp, label %dec_label_pc_38193, label %bb

bb:                                               ; preds = %dec_label_pc_3814e
  %v4_3818d = call i32 @function_385cc()
  %v0_38193.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_38193

dec_label_pc_38193:                               ; preds = %dec_label_pc_3814e, %bb
  %v0_38193 = phi i32 [ %v0_38189, %dec_label_pc_3814e ], [ %v0_38193.pre, %bb ]
  %v1_38193 = add i32 %v0_38193, -48
  %v2_38193 = inttoptr i32 %v1_38193 to i32*
  %v3_38193 = load i32, i32* %v2_38193, align 4
  %v2_38196 = mul i32 %v3_38193, 4
  %v1_38199 = add i32 %v2_38196, ptrtoint (i32* @global_var_38620.2913 to i32)
  %v1_3819e = inttoptr i32 %v1_38199 to i32*
  %v2_3819e = load i32, i32* %v1_3819e, align 4
  ret i32 %v2_3819e

; uselistorder directives
  uselistorder i8 %v3_38157, { 1, 0 }
  uselistorder label %dec_label_pc_38193, { 1, 0 }
}

define i32 @function_381c2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_381c2:
  %v0_381c2 = load i32, i32* @ebp, align 4
  %v1_381c2 = add i32 %v0_381c2, 1
  store i32 %v1_381c2, i32* @ebp, align 4
  %v0_381c4 = load i32, i32* @eax, align 8
  %v1_381c8 = add i32 %v0_381c2, -43
  %v2_381c8 = inttoptr i32 %v1_381c8 to i32*
  %v3_381c8 = load i32, i32* %v2_381c8, align 4
  %v2_381ce = call i32 @unknown_715b5(i32 %v3_381c8, i32 %v0_381c4)
  store i32 %v2_381ce, i32* @eax, align 8
  %v0_381d3 = call i32 @function_38604()
  ret i32 %v0_381d3
}

define i32 @function_381d8() local_unnamed_addr {
dec_label_pc_381d8:
  %v0_381e0 = load i32, i32* @ebp, align 4
  %v1_381e0 = add i32 %v0_381e0, -82
  %v2_381e0 = inttoptr i32 %v1_381e0 to i8*
  %v3_381e0 = load i8, i8* %v2_381e0, align 1
  %v1_381f0 = add i32 %v0_381e0, -56
  %v2_381f0 = inttoptr i32 %v1_381f0 to i32*
  %v3_381f0 = load i32, i32* %v2_381f0, align 4
  %v1_381f7 = add i32 %v0_381e0, -52
  %v2_381f7 = inttoptr i32 %v1_381f7 to i32*
  %v3_381f7 = load i32, i32* %v2_381f7, align 4
  %v1_381fe = add i32 %v0_381e0, -44
  %v2_381fe = inttoptr i32 %v1_381fe to i32*
  %v3_381fe = load i32, i32* %v2_381fe, align 4
  %v6_38204 = sext i8 %v3_381e0 to i32
  %v7_38204 = call i32 @unknown_71622(i32 %v3_381fe, i32 %v3_381f7, i32 %v3_381f0, i32 0, i32 %v6_38204, i32 1)
  store i32 %v7_38204, i32* @eax, align 8
  %v0_38209 = call i32 @function_38604()
  ret i32 %v0_38209

; uselistorder directives
  uselistorder i32 %v0_381e0, { 0, 2, 1, 3 }
  uselistorder i32 -82, { 0, 5, 1, 2, 3, 4 }
}

define i32 @function_3820e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3820e:
  %v5_38216 = load i32, i32* @eax, align 8
  ret i32 %v5_38216
}

define i32 @function_3821a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3821a:
  %v5_3821a = load i32, i32* @eax, align 8
  ret i32 %v5_3821a
}

define i32 @function_38224() local_unnamed_addr {
dec_label_pc_38224:
  %v2_38224 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_38224 = load i32, i32* @eax, align 8
  %v4_38224 = trunc i32 %v3_38224 to i8
  %v5_38224 = add i8 %v4_38224, %v2_38224
  %v21_38224 = inttoptr i32 %v3_38224 to i8*
  store i8 %v5_38224, i8* %v21_38224, align 1
  %v0_38226 = load i32, i32* @ebp, align 4
  %v1_38226 = add i32 %v0_38226, -56
  %v2_38226 = inttoptr i32 %v1_38226 to i32*
  %v3_38226 = load i32, i32* %v2_38226, align 4
  %v1_3822d = add i32 %v0_38226, -52
  %v2_3822d = inttoptr i32 %v1_3822d to i32*
  %v3_3822d = load i32, i32* %v2_3822d, align 4
  %v1_38234 = add i32 %v0_38226, -44
  %v2_38234 = inttoptr i32 %v1_38234 to i32*
  %v3_38234 = load i32, i32* %v2_38234, align 4
  %v3_3823a = call i32 @unknown_7168f(i32 %v3_38234, i32 %v3_3822d, i32 %v3_38226)
  store i32 %v3_3823a, i32* @eax, align 8
  %v0_3823f = call i32 @function_38604()
  ret i32 %v0_3823f
}

define i32 @function_38264(i32 %arg1) local_unnamed_addr {
dec_label_pc_38264:
  %v0_38264 = load i32, i32* @ebp, align 4
  %v1_38264 = add i32 %v0_38264, 1
  store i32 %v1_38264, i32* @ebp, align 4
  %v0_38266 = load i32, i32* @eax, align 8
  %v1_3826a = add i32 %v0_38264, -43
  %v2_3826a = inttoptr i32 %v1_3826a to i32*
  %v3_3826a = load i32, i32* %v2_3826a, align 4
  %v2_38270 = call i32 @unknown_716fc(i32 %v3_3826a, i32 %v0_38266)
  store i32 %v2_38270, i32* @eax, align 8
  %v0_38275 = call i32 @function_38604()
  ret i32 %v0_38275

; uselistorder directives
  uselistorder i32 -43, { 1, 2, 0 }
}

define i32 @function_38296(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38296:
  %v0_38299 = load i32, i32* @ebp, align 4
  %v1_38299 = add i32 %v0_38299, -52
  %v2_38299 = inttoptr i32 %v1_38299 to i32*
  %v3_38299 = load i32, i32* %v2_38299, align 4
  %v1_382a0 = add i32 %v0_38299, -44
  %v2_382a0 = inttoptr i32 %v1_382a0 to i32*
  %v3_382a0 = load i32, i32* %v2_382a0, align 4
  %v2_382a6 = call i32 @unknown_71769(i32 %v3_382a0, i32 %v3_38299)
  store i32 %v2_382a6, i32* @eax, align 8
  %v0_382ab = call i32 @function_38604()
  ret i32 %v0_382ab
}

define i32 @function_382e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_382e0:
  %eax.global-to-local = alloca i32, align 4
  %v0_382e2 = load i16, i16* @ds, align 2
  %v0_382e3 = load i32, i32* @eax, align 8
  %v4_382e3 = mul i32 %v0_382e3, 2
  %v0_382e5 = load i32, i32* @ebx, align 4
  %v5_382e51 = mul i32 %v0_382e3, 512
  %v1_382e52 = add i32 %v0_382e5, %v5_382e51
  %v22_382e5 = and i32 %v1_382e52, 65280
  %v23_382e5 = and i32 %v0_382e5, -65281
  %v24_382e5 = or i32 %v22_382e5, %v23_382e5
  store i32 %v24_382e5, i32* @ebx, align 4
  %v11_382e8 = and i32 %v4_382e3, -236
  store i32 %v11_382e8, i32* %eax.global-to-local, align 8
  %v1_382ea = inttoptr i32 %v11_382e8 to i32*
  %v2_382ea = load i32, i32* %v1_382ea, align 4
  %v4_382ea = add i32 %v2_382ea, %v11_382e8
  store i32 %v4_382ea, i32* %v1_382ea, align 4
  %v0_382ec = load i32, i32* %eax.global-to-local, align 8
  %v1_382ec = inttoptr i32 %v0_382ec to i8*
  %v2_382ec = load i8, i8* %v1_382ec, align 1
  %v4_382ec = trunc i32 %v0_382ec to i8
  %v5_382ec = add i8 %v2_382ec, %v4_382ec
  store i8 %v5_382ec, i8* %v1_382ec, align 1
  %v0_382ee = load i32, i32* @ebp, align 4
  %v1_382fe = add i32 %v0_382ee, -56
  %v2_382fe = inttoptr i32 %v1_382fe to i32*
  %v3_382fe = load i32, i32* %v2_382fe, align 4
  store i32 %v3_382fe, i32* %eax.global-to-local, align 8
  %v1_38305 = add i32 %v0_382ee, -52
  %v2_38305 = inttoptr i32 %v1_38305 to i32*
  %v3_38305 = load i32, i32* %v2_38305, align 4
  store i32 %v3_38305, i32* %eax.global-to-local, align 8
  %v1_3830c = add i32 %v0_382ee, -44
  %v2_3830c = inttoptr i32 %v1_3830c to i32*
  %v3_3830c = load i32, i32* %v2_3830c, align 4
  store i32 %v3_3830c, i32* %eax.global-to-local, align 8
  %v3_38312 = sext i16 %v0_382e2 to i32
  %v4_38312 = call i32 @unknown_71843(i32 %v3_38312, i32 %v3_3830c, i32 %v3_38305)
  store i32 %v4_38312, i32* @eax, align 8
  %v0_38317 = call i32 @function_38604()
  store i32 %v0_38317, i32* %eax.global-to-local, align 8
  ret i32 %v0_38317

; uselistorder directives
  uselistorder i32 %v0_382ee, { 1, 0, 2 }
  uselistorder i32 %v11_382e8, { 0, 2, 1 }
  uselistorder i32 %v0_382e5, { 1, 0 }
  uselistorder i32 %v0_382e3, { 1, 0 }
}

define i32 @function_38320(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38320:
  %v2_38320 = load i32, i32* @eax, align 8
  %v4_38320 = mul i32 %v2_38320, 2
  %v21_38320 = inttoptr i32 %v2_38320 to i32*
  store i32 %v4_38320, i32* %v21_38320, align 4
  %v2_38322 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_38322 = load i32, i32* @eax, align 8
  %v4_38322 = trunc i32 %v3_38322 to i8
  %v5_38322 = add i8 %v4_38322, %v2_38322
  %v21_38322 = inttoptr i32 %v3_38322 to i8*
  store i8 %v5_38322, i8* %v21_38322, align 1
  %v0_38324 = load i32, i32* @ebp, align 4
  %v1_38334 = add i32 %v0_38324, -56
  %v2_38334 = inttoptr i32 %v1_38334 to i32*
  %v3_38334 = load i32, i32* %v2_38334, align 4
  %v1_3833b = add i32 %v0_38324, -52
  %v2_3833b = inttoptr i32 %v1_3833b to i32*
  %v3_3833b = load i32, i32* %v2_3833b, align 4
  %v1_38342 = add i32 %v0_38324, -44
  %v2_38342 = inttoptr i32 %v1_38342 to i32*
  %v3_38342 = load i32, i32* %v2_38342, align 4
  %v3_38348 = call i32 @unknown_71843(i32 %v3_38342, i32 %v3_3833b, i32 %v3_38334)
  store i32 %v3_38348, i32* @eax, align 8
  %v0_3834d = call i32 @function_38604()
  ret i32 %v0_3834d

; uselistorder directives
  uselistorder i32 %v0_38324, { 1, 0, 2 }
  uselistorder i32 %v2_38320, { 1, 0 }
}

define i32 @function_38352() local_unnamed_addr {
dec_label_pc_38352:
  %v0_3835a = load i32, i32* @ebp, align 4
  %v1_3836a = add i32 %v0_3835a, -56
  %v2_3836a = inttoptr i32 %v1_3836a to i32*
  %v3_3836a = load i32, i32* %v2_3836a, align 4
  %v1_38371 = add i32 %v0_3835a, -52
  %v2_38371 = inttoptr i32 %v1_38371 to i32*
  %v3_38371 = load i32, i32* %v2_38371, align 4
  %v1_38378 = add i32 %v0_3835a, -44
  %v2_38378 = inttoptr i32 %v1_38378 to i32*
  %v3_38378 = load i32, i32* %v2_38378, align 4
  %v3_3837e = call i32 @unknown_71843(i32 %v3_38378, i32 %v3_38371, i32 %v3_3836a)
  store i32 %v3_3837e, i32* @eax, align 8
  %v0_38383 = call i32 @function_38604()
  ret i32 %v0_38383

; uselistorder directives
  uselistorder i32 %v0_3835a, { 1, 0, 2 }
}

define i32 @function_3839c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3839c:
  %v2_3839c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3839c = load i32, i32* @eax, align 8
  %v4_3839c = trunc i32 %v3_3839c to i8
  %v5_3839c = add i8 %v4_3839c, %v2_3839c
  %v21_3839c = inttoptr i32 %v3_3839c to i8*
  store i8 %v5_3839c, i8* %v21_3839c, align 1
  %v2_3839e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3839e = load i32, i32* @eax, align 8
  %v4_3839e = trunc i32 %v3_3839e to i8
  %v5_3839e = add i8 %v4_3839e, %v2_3839e
  %v21_3839e = inttoptr i32 %v3_3839e to i8*
  store i8 %v5_3839e, i8* %v21_3839e, align 1
  %v0_383a0 = load i32, i32* @ebp, align 4
  %v1_383a0 = add i32 %v0_383a0, -56
  %v2_383a0 = inttoptr i32 %v1_383a0 to i32*
  %v3_383a0 = load i32, i32* %v2_383a0, align 4
  %v1_383a7 = add i32 %v0_383a0, -52
  %v2_383a7 = inttoptr i32 %v1_383a7 to i32*
  %v3_383a7 = load i32, i32* %v2_383a7, align 4
  %v1_383ae = add i32 %v0_383a0, -44
  %v2_383ae = inttoptr i32 %v1_383ae to i32*
  %v3_383ae = load i32, i32* %v2_383ae, align 4
  %v3_383b4 = call i32 @unknown_71843(i32 %v3_383ae, i32 %v3_383a7, i32 %v3_383a0)
  store i32 %v3_383b4, i32* @eax, align 8
  %v0_383b9 = call i32 @function_38604()
  ret i32 %v0_383b9
}

define i32 @function_383be() local_unnamed_addr {
dec_label_pc_383be:
  %v0_383c6 = load i32, i32* @ebp, align 4
  %v1_383d6 = add i32 %v0_383c6, -56
  %v2_383d6 = inttoptr i32 %v1_383d6 to i32*
  %v3_383d6 = load i32, i32* %v2_383d6, align 4
  %v1_383dd = add i32 %v0_383c6, -52
  %v2_383dd = inttoptr i32 %v1_383dd to i32*
  %v3_383dd = load i32, i32* %v2_383dd, align 4
  %v1_383e4 = add i32 %v0_383c6, -44
  %v2_383e4 = inttoptr i32 %v1_383e4 to i32*
  %v3_383e4 = load i32, i32* %v2_383e4, align 4
  %v3_383ea = call i32 @unknown_71843(i32 %v3_383e4, i32 %v3_383dd, i32 %v3_383d6)
  store i32 %v3_383ea, i32* @eax, align 8
  %v0_383ef = call i32 @function_38604()
  ret i32 %v0_383ef

; uselistorder directives
  uselistorder i32 %v0_383c6, { 1, 0, 2 }
}

define i32 @function_383f4() local_unnamed_addr {
dec_label_pc_383f4:
  %v0_383fc = load i32, i32* @ebp, align 4
  %v1_3840c = add i32 %v0_383fc, -56
  %v2_3840c = inttoptr i32 %v1_3840c to i32*
  %v3_3840c = load i32, i32* %v2_3840c, align 4
  %v1_38413 = add i32 %v0_383fc, -52
  %v2_38413 = inttoptr i32 %v1_38413 to i32*
  %v3_38413 = load i32, i32* %v2_38413, align 4
  %v1_3841a = add i32 %v0_383fc, -44
  %v2_3841a = inttoptr i32 %v1_3841a to i32*
  %v3_3841a = load i32, i32* %v2_3841a, align 4
  %v3_38420 = call i32 @unknown_71843(i32 %v3_3841a, i32 %v3_38413, i32 %v3_3840c)
  store i32 %v3_38420, i32* @eax, align 8
  %v0_38425 = call i32 @function_38604()
  ret i32 %v0_38425

; uselistorder directives
  uselistorder i32 %v0_383fc, { 1, 0, 2 }
}

define i32 @function_3842a() local_unnamed_addr {
dec_label_pc_3842a:
  %v0_38432 = load i32, i32* @ebp, align 4
  %v1_38442 = add i32 %v0_38432, -56
  %v2_38442 = inttoptr i32 %v1_38442 to i32*
  %v3_38442 = load i32, i32* %v2_38442, align 4
  %v1_38449 = add i32 %v0_38432, -52
  %v2_38449 = inttoptr i32 %v1_38449 to i32*
  %v3_38449 = load i32, i32* %v2_38449, align 4
  %v1_38450 = add i32 %v0_38432, -44
  %v2_38450 = inttoptr i32 %v1_38450 to i32*
  %v3_38450 = load i32, i32* %v2_38450, align 4
  %v3_38456 = call i32 @unknown_71843(i32 %v3_38450, i32 %v3_38449, i32 %v3_38442)
  store i32 %v3_38456, i32* @eax, align 8
  %v0_3845b = call i32 @function_38604()
  ret i32 %v0_3845b

; uselistorder directives
  uselistorder i32 %v0_38432, { 1, 0, 2 }
}

define i32 @function_38460() local_unnamed_addr {
dec_label_pc_38460:
  %v0_38468 = load i32, i32* @ebp, align 4
  %v1_38478 = add i32 %v0_38468, -56
  %v2_38478 = inttoptr i32 %v1_38478 to i32*
  %v3_38478 = load i32, i32* %v2_38478, align 4
  %v1_3847f = add i32 %v0_38468, -52
  %v2_3847f = inttoptr i32 %v1_3847f to i32*
  %v3_3847f = load i32, i32* %v2_3847f, align 4
  %v1_38486 = add i32 %v0_38468, -44
  %v2_38486 = inttoptr i32 %v1_38486 to i32*
  %v3_38486 = load i32, i32* %v2_38486, align 4
  %v3_3848c = call i32 @unknown_71843(i32 %v3_38486, i32 %v3_3847f, i32 %v3_38478)
  store i32 %v3_3848c, i32* @eax, align 8
  %v0_38491 = call i32 @function_38604()
  ret i32 %v0_38491

; uselistorder directives
  uselistorder i32 %v0_38468, { 1, 0, 2 }
}

define i32 @function_38496() local_unnamed_addr {
dec_label_pc_38496:
  %v0_3849e = load i32, i32* @ebp, align 4
  %v1_384ae = add i32 %v0_3849e, -56
  %v2_384ae = inttoptr i32 %v1_384ae to i32*
  %v3_384ae = load i32, i32* %v2_384ae, align 4
  %v1_384b5 = add i32 %v0_3849e, -52
  %v2_384b5 = inttoptr i32 %v1_384b5 to i32*
  %v3_384b5 = load i32, i32* %v2_384b5, align 4
  %v1_384bc = add i32 %v0_3849e, -44
  %v2_384bc = inttoptr i32 %v1_384bc to i32*
  %v3_384bc = load i32, i32* %v2_384bc, align 4
  %v3_384c2 = call i32 @unknown_71843(i32 %v3_384bc, i32 %v3_384b5, i32 %v3_384ae)
  store i32 %v3_384c2, i32* @eax, align 8
  %v0_384c7 = call i32 @function_38604()
  ret i32 %v0_384c7

; uselistorder directives
  uselistorder i32 %v0_3849e, { 1, 0, 2 }
}

define i32 @function_384ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_384ce:
  %eax.global-to-local = alloca i32, align 4
  %v0_384ce = load i32, i32* @eax, align 8
  %v11_384ce = and i32 %v0_384ce, -236
  store i32 %v11_384ce, i32* %eax.global-to-local, align 8
  %v1_384d0 = inttoptr i32 %v11_384ce to i32*
  %v2_384d0 = load i32, i32* %v1_384d0, align 4
  %v4_384d0 = add i32 %v2_384d0, %v11_384ce
  store i32 %v4_384d0, i32* %v1_384d0, align 4
  %v0_384d2 = load i32, i32* %eax.global-to-local, align 8
  %v1_384d2 = inttoptr i32 %v0_384d2 to i8*
  %v2_384d2 = load i8, i8* %v1_384d2, align 1
  %v4_384d2 = trunc i32 %v0_384d2 to i8
  %v5_384d2 = add i8 %v2_384d2, %v4_384d2
  store i8 %v5_384d2, i8* %v1_384d2, align 1
  %v0_384d4 = load i32, i32* @ebp, align 4
  %v1_384d4 = add i32 %v0_384d4, -60
  %v2_384d4 = inttoptr i32 %v1_384d4 to i8*
  %v3_384d4 = load i8, i8* %v2_384d4, align 1
  %v4_384d4 = zext i8 %v3_384d4 to i32
  store i32 %v4_384d4, i32* %eax.global-to-local, align 8
  %v1_384e4 = add i32 %v0_384d4, -56
  %v2_384e4 = inttoptr i32 %v1_384e4 to i32*
  %v3_384e4 = load i32, i32* %v2_384e4, align 4
  store i32 %v3_384e4, i32* %eax.global-to-local, align 8
  %v1_384eb = add i32 %v0_384d4, -52
  %v2_384eb = inttoptr i32 %v1_384eb to i32*
  %v3_384eb = load i32, i32* %v2_384eb, align 4
  store i32 %v3_384eb, i32* %eax.global-to-local, align 8
  %v1_384f2 = add i32 %v0_384d4, -44
  %v2_384f2 = inttoptr i32 %v1_384f2 to i32*
  %v3_384f2 = load i32, i32* %v2_384f2, align 4
  store i32 %v3_384f2, i32* %eax.global-to-local, align 8
  %v3_384f8 = call i32 @unknown_71843(i32 %v3_384f2, i32 %v3_384eb, i32 %v3_384e4)
  store i32 %v3_384f8, i32* @eax, align 8
  %v0_384fd = call i32 @function_38604()
  store i32 %v0_384fd, i32* %eax.global-to-local, align 8
  ret i32 %v0_384fd

; uselistorder directives
  uselistorder i32 %v0_384d4, { 1, 0, 2, 3 }
  uselistorder i32 %v11_384ce, { 0, 2, 1 }
}

define i32 @function_38514(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38514:
  %eax.global-to-local = alloca i32, align 4
  %v0_38514 = load i32, i32* @eax, align 8
  %v1_38514 = trunc i32 %v0_38514 to i8
  %v2_38514 = and i8 %v1_38514, 12
  %v8_38514 = zext i8 %v2_38514 to i32
  %v10_38514 = and i32 %v0_38514, -256
  %v11_38514 = or i32 %v8_38514, %v10_38514
  store i32 %v11_38514, i32* %eax.global-to-local, align 8
  %v1_38516 = inttoptr i32 %v11_38514 to i8*
  %v2_38516 = load i8, i8* %v1_38516, align 4
  %v5_38516 = add i8 %v2_38516, %v2_38514
  store i8 %v5_38516, i8* %v1_38516, align 4
  %v0_38518 = load i32, i32* %eax.global-to-local, align 8
  %v1_38518 = inttoptr i32 %v0_38518 to i8*
  %v2_38518 = load i8, i8* %v1_38518, align 1
  %v4_38518 = trunc i32 %v0_38518 to i8
  %v5_38518 = add i8 %v2_38518, %v4_38518
  store i8 %v5_38518, i8* %v1_38518, align 1
  %v0_3851a = load i32, i32* @ebp, align 4
  %v1_3851a = add i32 %v0_3851a, -56
  %v2_3851a = inttoptr i32 %v1_3851a to i32*
  %v3_3851a = load i32, i32* %v2_3851a, align 4
  store i32 %v3_3851a, i32* %eax.global-to-local, align 8
  %v1_38521 = add i32 %v0_3851a, -52
  %v2_38521 = inttoptr i32 %v1_38521 to i32*
  %v3_38521 = load i32, i32* %v2_38521, align 4
  store i32 %v3_38521, i32* %eax.global-to-local, align 8
  %v1_38528 = add i32 %v0_3851a, -44
  %v2_38528 = inttoptr i32 %v1_38528 to i32*
  %v3_38528 = load i32, i32* %v2_38528, align 4
  store i32 %v3_38528, i32* %eax.global-to-local, align 8
  %v3_3852e = call i32 @unknown_71843(i32 %v3_38528, i32 %v3_38521, i32 %v3_3851a)
  store i32 %v3_3852e, i32* @eax, align 8
  %v0_38533 = call i32 @function_38604()
  store i32 %v0_38533, i32* %eax.global-to-local, align 8
  ret i32 %v0_38533

; uselistorder directives
  uselistorder i8 12, { 0, 1, 3, 4, 5, 7, 2, 6 }
}

define i32 @function_38538(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_38538:
  %v0_3854e = load i32, i32* @ebp, align 4
  %v1_3854e = add i32 %v0_3854e, -56
  %v2_3854e = inttoptr i32 %v1_3854e to i32*
  %v3_3854e = load i32, i32* %v2_3854e, align 4
  %v1_38555 = add i32 %v0_3854e, -52
  %v2_38555 = inttoptr i32 %v1_38555 to i32*
  %v3_38555 = load i32, i32* %v2_38555, align 4
  %v1_3855c = add i32 %v0_3854e, -44
  %v2_3855c = inttoptr i32 %v1_3855c to i32*
  %v3_3855c = load i32, i32* %v2_3855c, align 4
  %v3_38562 = call i32 @unknown_71843(i32 %v3_3855c, i32 %v3_38555, i32 %v3_3854e)
  store i32 %v3_38562, i32* @eax, align 8
  %v0_38567 = call i32 @function_38604()
  ret i32 %v0_38567
}

define i32 @function_3856c() local_unnamed_addr {
dec_label_pc_3856c:
  %v0_38582 = load i32, i32* @ebp, align 4
  %v1_38582 = add i32 %v0_38582, -56
  %v2_38582 = inttoptr i32 %v1_38582 to i32*
  %v3_38582 = load i32, i32* %v2_38582, align 4
  %v1_38589 = add i32 %v0_38582, -52
  %v2_38589 = inttoptr i32 %v1_38589 to i32*
  %v3_38589 = load i32, i32* %v2_38589, align 4
  %v1_38590 = add i32 %v0_38582, -44
  %v2_38590 = inttoptr i32 %v1_38590 to i32*
  %v3_38590 = load i32, i32* %v2_38590, align 4
  %v3_38596 = call i32 @unknown_71843(i32 %v3_38590, i32 %v3_38589, i32 %v3_38582)
  store i32 %v3_38596, i32* @eax, align 8
  %v0_3859b = call i32 @function_38604()
  ret i32 %v0_3859b
}

define i32 @function_3859d() local_unnamed_addr {
dec_label_pc_3859d:
  %v0_385b1 = load i32, i32* @ebp, align 4
  %v1_385b1 = add i32 %v0_385b1, -56
  %v2_385b1 = inttoptr i32 %v1_385b1 to i32*
  %v3_385b1 = load i32, i32* %v2_385b1, align 4
  %v1_385b8 = add i32 %v0_385b1, -52
  %v2_385b8 = inttoptr i32 %v1_385b8 to i32*
  %v3_385b8 = load i32, i32* %v2_385b8, align 4
  %v1_385bf = add i32 %v0_385b1, -44
  %v2_385bf = inttoptr i32 %v1_385bf to i32*
  %v3_385bf = load i32, i32* %v2_385bf, align 4
  %v3_385c5 = call i32 @unknown_71843(i32 %v3_385bf, i32 %v3_385b8, i32 %v3_385b1)
  store i32 %v3_385c5, i32* @eax, align 8
  %v0_385ca = call i32 @function_38604()
  ret i32 %v0_385ca

; uselistorder directives
  uselistorder i32 ()* @function_38604, { 18, 17, 7, 9, 8, 16, 15, 14, 13, 12, 2, 11, 1, 6, 5, 0, 3, 10, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_71843, { 13, 12, 3, 5, 4, 11, 10, 9, 8, 7, 1, 6, 0, 2 }
}

define i32 @function_385cc() local_unnamed_addr {
dec_label_pc_385cc:
  %v0_385dc = load i32, i32* @ecx, align 8
  %v0_385e0 = load i32, i32* @edx, align 4
  %v0_385e4 = load i32, i32* @ebp, align 4
  %v1_385e4 = add i32 %v0_385e4, -56
  %v2_385e4 = inttoptr i32 %v1_385e4 to i32*
  %v3_385e4 = load i32, i32* %v2_385e4, align 4
  %v1_385eb = add i32 %v0_385e4, -52
  %v2_385eb = inttoptr i32 %v1_385eb to i32*
  %v3_385eb = load i32, i32* %v2_385eb, align 4
  %v1_385f2 = add i32 %v0_385e4, -48
  %v2_385f2 = inttoptr i32 %v1_385f2 to i32*
  %v3_385f2 = load i32, i32* %v2_385f2, align 4
  %v1_385f9 = add i32 %v0_385e4, -44
  %v2_385f9 = inttoptr i32 %v1_385f9 to i32*
  %v3_385f9 = load i32, i32* %v2_385f9, align 4
  %sext = mul i32 %v0_385e0, 16777216
  %v8_385ff = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_385dc, 16777216
  %v9_385ff = sdiv i32 %sext1, 16777216
  %v10_385ff = call i32 @unknown_7189d(i32 %v3_385f9, i32 %v3_385f2, i32 %v3_385eb, i32 %v3_385e4, i32 %v8_385ff, i32 %v9_385ff, i32 0, i32 0)
  ret i32 %v10_385ff

; uselistorder directives
  uselistorder i32 %v0_385e4, { 1, 0, 2, 3 }
}

define i32 @function_385ed(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_385ed:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38604() local_unnamed_addr {
dec_label_pc_38604:
  %v0_38604 = load i32, i32* @ebp, align 4
  %v1_38604 = add i32 %v0_38604, -28
  %v2_38604 = inttoptr i32 %v1_38604 to i32*
  %v3_38604 = load i32, i32* %v2_38604, align 4
  %v1_38607 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38607 = icmp eq i32 %v1_38607, %v3_38604
  br i1 %v3_38607, label %bb, label %dec_label_pc_38604.dec_label_pc_38610_crit_edge

dec_label_pc_38604.dec_label_pc_38610_crit_edge:  ; preds = %dec_label_pc_38604
  %v2_3860e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_38610

bb:                                               ; preds = %dec_label_pc_38604
  %v1_3860e = call i32 @function_38615()
  br label %dec_label_pc_38610

dec_label_pc_38610:                               ; preds = %dec_label_pc_38604.dec_label_pc_38610_crit_edge, %bb
  %v2_3860e = phi i32 [ %v2_3860e.pre, %dec_label_pc_38604.dec_label_pc_38610_crit_edge ], [ %v1_3860e, %bb ]
  ret i32 %v2_3860e

; uselistorder directives
  uselistorder label %dec_label_pc_38610, { 1, 0 }
}

define i32 @function_38615() local_unnamed_addr {
dec_label_pc_38615:
  %v0_3861c = load i32, i32* @eax, align 8
  ret i32 %v0_3861c
}

define i32 @function_38641(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38641:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvSsEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_38670:
  %v1_386a6 = call i32 @unknown_6b7af(i32 %arg3)
  %v3_386bd = call i32 @unknown_71e32(i32 %arg2, i32 %v1_386a6, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_386ce

bb:                                               ; preds = %dec_label_pc_38670
  %v1_386cc = call i32 @function_386d3()
  br label %dec_label_pc_386ce

dec_label_pc_386ce:                               ; preds = %bb, %dec_label_pc_38670
  %v3_386cc = phi i32 [ %v1_386cc, %bb ], [ 0, %dec_label_pc_38670 ]
  ret i32 %v3_386cc
}

define i32 @function_386d3() local_unnamed_addr {
dec_label_pc_386d3:
  %v0_386d4 = load i32, i32* @eax, align 8
  ret i32 %v0_386d4
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_386d5:
  %v0_386fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3870b = call i32 @unknown_6b882(i32 %arg3)
  %v3_38722 = call i32 @unknown_71ee1(i32 %arg2, i32 %v1_3870b, i32 1)
  ret i32 %v0_386fa
}

define i32 @function_3872c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3872c:
  %v0_3872c = load i32, i32* @eax, align 8
  %v1_3872c = add i32 %v0_3872c, 20
  %v10_3872c = icmp eq i32 %v1_3872c, 0
  store i32 %v1_3872c, i32* @eax, align 8
  br i1 %v10_3872c, label %bb, label %dec_label_pc_38733

bb:                                               ; preds = %dec_label_pc_3872c
  %v1_38731 = call i32 @function_38738()
  br label %dec_label_pc_38733

dec_label_pc_38733:                               ; preds = %bb, %dec_label_pc_3872c
  %v2_38731 = phi i32 [ %v1_38731, %bb ], [ %v1_3872c, %dec_label_pc_3872c ]
  ret i32 %v2_38731
}

define i32 @function_38738() local_unnamed_addr {
dec_label_pc_38738:
  %v0_38739 = load i32, i32* @eax, align 8
  ret i32 %v0_38739
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvNS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEEENT_11result_typeEiRSF_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3873a:
  %v1_38770 = call i32 @unknown_6b955(i32 %arg3)
  %v3_38787 = call i32 @unknown_71f90(i32 %arg2, i32 %v1_38770, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38798

bb:                                               ; preds = %dec_label_pc_3873a
  %v1_38796 = call i32 @function_3879d()
  br label %dec_label_pc_38798

dec_label_pc_38798:                               ; preds = %bb, %dec_label_pc_3873a
  %v2_38796 = phi i32 [ %v1_38796, %bb ], [ 0, %dec_label_pc_3873a ]
  ret i32 %v2_38796
}

define i32 @function_3879d() local_unnamed_addr {
dec_label_pc_3879d:
  %v0_3879e = load i32, i32* @eax, align 8
  ret i32 %v0_3879e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvbEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3879f:
  %v1_387d5 = call i32 @unknown_6ba28(i32 %arg3)
  ret i32 %v1_387d5
}

define i32 @function_387e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_387e6:
  %v0_387e6 = load i32, i32* @ebp, align 4
  %v1_387e6 = add i32 %v0_387e6, -32
  %v2_387e6 = inttoptr i32 %v1_387e6 to i32*
  %v3_387e6 = load i32, i32* %v2_387e6, align 4
  %v1_387ec = call i32 @unknown_7203f(i32 %v3_387e6)
  %v0_387f1 = load i32, i32* @ebp, align 4
  %v1_387f1 = add i32 %v0_387f1, -12
  %v2_387f1 = inttoptr i32 %v1_387f1 to i32*
  %v3_387f1 = load i32, i32* %v2_387f1, align 4
  %v1_387f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_387f4 = xor i32 %v1_387f4, %v3_387f1
  %v3_387f4 = icmp eq i32 %v2_387f4, 0
  store i32 %v2_387f4, i32* @eax, align 8
  br i1 %v3_387f4, label %bb, label %dec_label_pc_387fd

bb:                                               ; preds = %dec_label_pc_387e6
  %v1_387fb = call i32 @function_38802()
  br label %dec_label_pc_387fd

dec_label_pc_387fd:                               ; preds = %bb, %dec_label_pc_387e6
  %v2_387fb = phi i32 [ %v1_387fb, %bb ], [ %v2_387f4, %dec_label_pc_387e6 ]
  ret i32 %v2_387fb
}

declare i32 @__stack_chk_fail.1415(i32, i32, i32, i32) local_unnamed_addr

define i32 @function_38802() local_unnamed_addr {
dec_label_pc_38802:
  %v0_38803 = load i32, i32* @eax, align 8
  ret i32 %v0_38803
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvxEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_38804:
  %v1_3883a = call i32 @unknown_6baf0(i32 %arg3)
  %v3_38851 = call i32 @unknown_720e8(i32 %arg2, i32 %v1_3883a, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38862

bb:                                               ; preds = %dec_label_pc_38804
  %v1_38860 = call i32 @function_38867()
  br label %dec_label_pc_38862

dec_label_pc_38862:                               ; preds = %bb, %dec_label_pc_38804
  %v2_38860 = phi i32 [ %v1_38860, %bb ], [ 0, %dec_label_pc_38804 ]
  ret i32 %v2_38860
}

define i32 @function_38867() local_unnamed_addr {
dec_label_pc_38867:
  %v0_38868 = load i32, i32* @eax, align 8
  ret i32 %v0_38868
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPvdEENT_11result_typeEiRS5_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_38869:
  %v1_3889f = call i32 @unknown_6bbb9(i32 %arg3)
  %v3_388b6 = call i32 @unknown_72195(i32 %arg2, i32 %v1_3889f, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_388c7

bb:                                               ; preds = %dec_label_pc_38869
  %v1_388c5 = call i32 @function_388cc()
  br label %dec_label_pc_388c7

dec_label_pc_388c7:                               ; preds = %bb, %dec_label_pc_38869
  %v2_388c5 = phi i32 [ %v1_388c5, %bb ], [ 0, %dec_label_pc_38869 ]
  ret i32 %v2_388c5
}

define i32 @function_388cc() local_unnamed_addr {
dec_label_pc_388cc:
  %v0_388cd = load i32, i32* @eax, align 8
  ret i32 %v0_388cd
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSsEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_388ce:
  %eax.global-to-local = alloca i32, align 4
  %v2_388cf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_388cf
}

define i32 @function_38930() local_unnamed_addr {
dec_label_pc_38930:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38930 = load i32, i32* %ecx.global-to-local, align 8
  %v1_38930 = add i32 %v0_38930, -1
  store i32 %v1_38930, i32* %ecx.global-to-local, align 8
  %v0_38932 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38932
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSD_EENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_38933:
  ret i32 %arg1
}

define i32 @function_38941(i32 %arg1) local_unnamed_addr {
dec_label_pc_38941:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_38941 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_38941 = or i32 %v0_38941, 137
  store i32 %v11_38941, i32* %eax.global-to-local, align 8
  %v0_38943 = load i32, i32* @ebp, align 4
  %v0_38944 = load i32, i32* @ecx, align 8
  %v1_38944 = add i32 %v0_38944, -1
  store i32 %v1_38944, i32* @ecx, align 8
  %v1_38946 = add i32 %v0_38943, 2
  store i32 %v1_38946, i32* %ebp.global-to-local, align 4
  %v1_38947 = add i32 %v0_38944, 1166793796
  %v2_38947 = inttoptr i32 %v1_38947 to i8*
  %v3_38947 = load i8, i8* %v2_38947, align 1
  %v5_38947 = trunc i32 %v1_38944 to i8
  %v8_38947 = add i8 %v3_38947, %v5_38947
  %v28_38947 = icmp ult i8 %v8_38947, %v3_38947
  store i1 %v28_38947, i1* %cf.global-to-local, align 1
  store i8 %v8_38947, i8* %v2_38947, align 1
  %v0_3894d = load i32, i32* %eax.global-to-local, align 8
  %v1_3894d = trunc i32 %v0_3894d to i8
  %v2_3894d = load i1, i1* %cf.global-to-local, align 1
  %v3_3894d = zext i1 %v2_3894d to i8
  %v4_3894d = add i8 %v1_3894d, -119
  %v5_3894d = add i8 %v4_3894d, %v3_3894d
  %v22_3894d = icmp ule i8 %v5_3894d, %v1_3894d
  %v23_3894d = icmp ugt i8 %v1_3894d, 118
  %v24_3894d = select i1 %v2_3894d, i1 %v22_3894d, i1 %v23_3894d
  store i1 %v24_3894d, i1* %cf.global-to-local, align 1
  %v25_3894d = zext i8 %v5_3894d to i32
  %v27_3894d = and i32 %v0_3894d, -256
  %v28_3894d = or i32 %v25_3894d, %v27_3894d
  store i32 %v28_3894d, i32* %eax.global-to-local, align 8
  %v0_3894f = load i32, i32* %ebp.global-to-local, align 4
  %v1_3894f = add i32 %v0_3894f, 1
  store i32 %v1_3894f, i32* @ebp, align 4
  %v3_38950 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_38950 = fpext float %v3_38950 to x86_fp80
  %v5_38950 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_38950 = fmul x86_fp80 %v4_38950, %v5_38950
  store x86_fp80 %v6_38950, x86_fp80* @st0, align 4
  %v1_38954 = add i32 %v28_3894d, -1587161275
  %v2_38954 = inttoptr i32 %v1_38954 to i8*
  %v3_38954 = load i8, i8* %v2_38954, align 1
  %v4_38954 = load i32, i32* @ecx, align 8
  %v5_38954 = trunc i32 %v4_38954 to i8
  %v7_38954 = zext i1 %v24_3894d to i8
  %v8_38954 = sub i8 %v3_38954, %v5_38954
  %v9_38954 = add i8 %v8_38954, %v7_38954
  %v19_38954 = sub i8 %v8_38954, %v7_38954
  %v20_38954 = icmp ult i8 %v3_38954, %v19_38954
  %v21_38954 = icmp ne i8 %v5_38954, -1
  %v22_38954 = or i1 %v21_38954, %v20_38954
  %v23_38954 = icmp ult i8 %v3_38954, %v5_38954
  %v24_38954 = select i1 %v24_3894d, i1 %v22_38954, i1 %v23_38954
  store i1 %v24_38954, i1* %cf.global-to-local, align 1
  store i8 %v9_38954, i8* %v2_38954, align 1
  %v0_3895a = load i32, i32* %eax.global-to-local, align 8
  %v1_3895a = trunc i32 %v0_3895a to i8
  %v2_3895a = load i1, i1* %cf.global-to-local, align 1
  %v3_3895a = zext i1 %v2_3895a to i8
  %v4_3895a = add i8 %v3_3895a, %v1_3895a
  %v19_3895a = icmp ule i8 %v4_3895a, %v1_3895a
  %v21_3895a = icmp eq i1 %v2_3895a, %v19_3895a
  store i1 %v21_3895a, i1* %cf.global-to-local, align 1
  %v22_3895a = zext i8 %v4_3895a to i32
  %v24_3895a = and i32 %v0_3895a, -256
  %v25_3895a = or i32 %v22_3895a, %v24_3895a
  store i32 %v25_3895a, i32* %eax.global-to-local, align 8
  %v1_3895c = inttoptr i32 %v25_3895a to i8*
  %v2_3895c = load i8, i8* %v1_3895c, align 1
  %v5_3895c = add i8 %v2_3895c, %v4_3895a
  store i8 %v5_3895c, i8* %v1_3895c, align 1
  %v0_3895e = load i32, i32* %eax.global-to-local, align 8
  %v1_3895e = load i32, i32* @ebp, align 4
  %v2_3895e = add i32 %v1_3895e, -12
  %v3_3895e = inttoptr i32 %v2_3895e to i32*
  store i32 %v0_3895e, i32* %v3_3895e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_38963 = load i32, i32* @ebp, align 4
  %v1_38963 = add i32 %v0_38963, -36
  %v2_38963 = inttoptr i32 %v1_38963 to i32*
  %v3_38963 = load i32, i32* %v2_38963, align 4
  store i32 %v3_38963, i32* %eax.global-to-local, align 8
  %v1_38969 = call i32 @unknown_6bd98(i32 %v3_38963)
  store i32 %v1_38969, i32* %eax.global-to-local, align 8
  %v0_3897a = load i32, i32* @ebp, align 4
  %v1_3897a = add i32 %v0_3897a, -32
  %v2_3897a = inttoptr i32 %v1_3897a to i32*
  %v3_3897a = load i32, i32* %v2_3897a, align 4
  store i32 %v3_3897a, i32* %eax.global-to-local, align 8
  %v3_38980 = call i32 @unknown_722fb(i32 %v3_3897a, i32 %v1_38969, i32 1)
  store i32 %v3_38980, i32* %eax.global-to-local, align 8
  %v0_38985 = load i32, i32* @ebp, align 4
  %v1_38985 = add i32 %v0_38985, -12
  %v2_38985 = inttoptr i32 %v1_38985 to i32*
  %v3_38985 = load i32, i32* %v2_38985, align 4
  store i32 %v3_38985, i32* %eax.global-to-local, align 8
  %v1_38988 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38988 = xor i32 %v1_38988, %v3_38985
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_38988 = icmp eq i32 %v2_38988, 0
  store i32 %v2_38988, i32* @eax, align 8
  br i1 %v3_38988, label %bb, label %dec_label_pc_38991

bb:                                               ; preds = %dec_label_pc_38941
  %v1_3898f = call i32 @function_38996()
  store i32 %v1_3898f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_38991

dec_label_pc_38991:                               ; preds = %bb, %dec_label_pc_38941
  %v3_3898f = phi i32 [ %v1_3898f, %bb ], [ %v2_38988, %dec_label_pc_38941 ]
  ret i32 %v3_3898f

; uselistorder directives
  uselistorder i8 %v4_3895a, { 0, 2, 1 }
  uselistorder i8 %v1_3895a, { 1, 0 }
  uselistorder i8 %v8_38954, { 1, 0 }
  uselistorder i8 %v7_38954, { 1, 0 }
  uselistorder i8 %v5_38954, { 1, 0, 2 }
  uselistorder i1 %v24_3894d, { 1, 0, 2 }
  uselistorder i8 %v5_3894d, { 1, 0 }
  uselistorder i8 %v3_38947, { 1, 0 }
}

define i32 @function_38996() local_unnamed_addr {
dec_label_pc_38996:
  %v0_38997 = load i32, i32* @eax, align 8
  ret i32 %v0_38997
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvSI_EENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38998:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_389ce = call i32 @unknown_6bead(i32 %tmp9)
  %v3_389e5 = call i32 @unknown_723ba(i32 %arg2, i32 %v1_389ce, i32 1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_389f6

bb:                                               ; preds = %dec_label_pc_38998
  %v1_389f4 = call i32 @function_389fb()
  br label %dec_label_pc_389f6

dec_label_pc_389f6:                               ; preds = %bb, %dec_label_pc_38998
  %v2_389f4 = phi i32 [ %v1_389f4, %bb ], [ 0, %dec_label_pc_38998 ]
  ret i32 %v2_389f4

; uselistorder directives
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 35, 36, 37, 38, 2, 39, 40, 3, 41, 42, 43, 4, 5, 6, 7, 8, 44, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
}

define i32 @function_389fb() local_unnamed_addr {
dec_label_pc_389fb:
  %v0_389fc = load i32, i32* @eax, align 8
  ret i32 %v0_389fc
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvbEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_389fd:
  %v1_38a33 = call i32 @unknown_6bfc2(i32 %arg3)
  ret i32 %v1_38a33
}

define i32 @function_38a38(i32 %arg1) local_unnamed_addr {
dec_label_pc_38a38:
  %v0_38a40 = load i32, i32* @eax, align 8
  %v0_38a44 = load i32, i32* @ebp, align 4
  %v1_38a44 = add i32 %v0_38a44, -32
  %v2_38a44 = inttoptr i32 %v1_38a44 to i32*
  %v3_38a44 = load i32, i32* %v2_38a44, align 4
  %v3_38a4a = call i32 @unknown_72479(i32 %v3_38a44, i32 %v0_38a40, i32 1)
  %v0_38a4f = load i32, i32* @ebp, align 4
  %v1_38a4f = add i32 %v0_38a4f, -12
  %v2_38a4f = inttoptr i32 %v1_38a4f to i32*
  %v3_38a4f = load i32, i32* %v2_38a4f, align 4
  %v1_38a52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38a52 = xor i32 %v1_38a52, %v3_38a4f
  %v3_38a52 = icmp eq i32 %v2_38a52, 0
  store i32 %v2_38a52, i32* @eax, align 8
  br i1 %v3_38a52, label %bb, label %dec_label_pc_38a5b

bb:                                               ; preds = %dec_label_pc_38a38
  %v1_38a59 = call i32 @function_38a60()
  br label %dec_label_pc_38a5b

dec_label_pc_38a5b:                               ; preds = %bb, %dec_label_pc_38a38
  %v2_38a59 = phi i32 [ %v1_38a59, %bb ], [ %v2_38a52, %dec_label_pc_38a38 ]
  ret i32 %v2_38a59
}

define i32 @function_38a60() local_unnamed_addr {
dec_label_pc_38a60:
  %v0_38a61 = load i32, i32* @eax, align 8
  ret i32 %v0_38a61
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvxEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_38a62:
  %eax.global-to-local = alloca i32, align 4
  %v2_38a63 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_38a63
}

define i32 @function_38a65(i32 %arg1) local_unnamed_addr {
dec_label_pc_38a65:
  %v0_38a68 = load i32, i32* @ebp, align 4
  %v1_38a68 = add i32 %v0_38a68, 8
  %v2_38a68 = inttoptr i32 %v1_38a68 to i32*
  %v3_38a68 = load i32, i32* %v2_38a68, align 4
  %v2_38a6b = add i32 %v0_38a68, -28
  %v3_38a6b = inttoptr i32 %v2_38a6b to i32*
  store i32 %v3_38a68, i32* %v3_38a6b, align 4
  %v0_38a6e = load i32, i32* @ebp, align 4
  %v1_38a6e = add i32 %v0_38a6e, 12
  %v2_38a6e = inttoptr i32 %v1_38a6e to i32*
  %v3_38a6e = load i32, i32* %v2_38a6e, align 4
  %v2_38a71 = add i32 %v0_38a6e, -32
  %v3_38a71 = inttoptr i32 %v2_38a71 to i32*
  store i32 %v3_38a6e, i32* %v3_38a71, align 4
  %v0_38a74 = load i32, i32* @ebp, align 4
  %v1_38a74 = add i32 %v0_38a74, 16
  %v2_38a74 = inttoptr i32 %v1_38a74 to i32*
  %v3_38a74 = load i32, i32* %v2_38a74, align 4
  %v2_38a77 = add i32 %v0_38a74, -36
  %v3_38a77 = inttoptr i32 %v2_38a77 to i32*
  store i32 %v3_38a74, i32* %v3_38a77, align 4
  %v0_38a7a = load i32, i32* @ebp, align 4
  %v1_38a7a = add i32 %v0_38a7a, 20
  %v2_38a7a = inttoptr i32 %v1_38a7a to i32*
  %v3_38a7a = load i32, i32* %v2_38a7a, align 4
  %v2_38a7d = add i32 %v0_38a7a, -40
  %v3_38a7d = inttoptr i32 %v2_38a7d to i32*
  store i32 %v3_38a7a, i32* %v3_38a7d, align 4
  %v0_38a80 = load i32, i32* @ebp, align 4
  %v1_38a80 = add i32 %v0_38a80, 24
  %v2_38a80 = inttoptr i32 %v1_38a80 to i8*
  %v3_38a80 = load i8, i8* %v2_38a80, align 1
  %v3_38a84 = add i32 %v0_38a80, -41
  %v4_38a84 = inttoptr i32 %v3_38a84 to i8*
  store i8 %v3_38a80, i8* %v4_38a84, align 1
  %v0_38a87 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_38a8d = load i32, i32* @ebp, align 4
  %v2_38a8d = add i32 %v1_38a8d, -12
  %v3_38a8d = inttoptr i32 %v2_38a8d to i32*
  store i32 %v0_38a87, i32* %v3_38a8d, align 4
  ret i32 0
}

define i32 @function_38a79(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38a79:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38a92(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38a92:
  %v0_38a92 = load i32, i32* @ebp, align 4
  %v1_38a92 = add i32 %v0_38a92, -36
  %v2_38a92 = inttoptr i32 %v1_38a92 to i32*
  %v3_38a92 = load i32, i32* %v2_38a92, align 4
  %v1_38a98 = call i32 @unknown_6c0ab(i32 %v3_38a92)
  %v0_38aa9 = load i32, i32* @ebp, align 4
  %v1_38aa9 = add i32 %v0_38aa9, -32
  %v2_38aa9 = inttoptr i32 %v1_38aa9 to i32*
  %v3_38aa9 = load i32, i32* %v2_38aa9, align 4
  %v3_38aaf = call i32 @unknown_72538(i32 %v3_38aa9, i32 %v1_38a98, i32 1)
  %v0_38ab4 = load i32, i32* @ebp, align 4
  %v1_38ab4 = add i32 %v0_38ab4, -12
  %v2_38ab4 = inttoptr i32 %v1_38ab4 to i32*
  %v3_38ab4 = load i32, i32* %v2_38ab4, align 4
  %v1_38ab7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38ab7 = xor i32 %v1_38ab7, %v3_38ab4
  %v3_38ab7 = icmp eq i32 %v2_38ab7, 0
  store i32 %v2_38ab7, i32* @eax, align 8
  br i1 %v3_38ab7, label %bb, label %dec_label_pc_38ac0

bb:                                               ; preds = %dec_label_pc_38a92
  %v1_38abe = call i32 @function_38ac5()
  br label %dec_label_pc_38ac0

dec_label_pc_38ac0:                               ; preds = %bb, %dec_label_pc_38a92
  %v3_38abe = phi i32 [ %v1_38abe, %bb ], [ %v2_38ab7, %dec_label_pc_38a92 ]
  ret i32 %v3_38abe
}

define i32 @function_38ac5() local_unnamed_addr {
dec_label_pc_38ac5:
  %v0_38ac6 = load i32, i32* @eax, align 8
  ret i32 %v0_38ac6
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E8assignerEPKvdEENT_11result_typeEiRSO_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38ac7:
  ret i32 %arg3
}

define i32 @function_38add(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38add:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_38add = load i32, i32* @ebp, align 4
  %v1_38add = add i32 %v0_38add, 1
  store i32 %v1_38add, i32* @ebp, align 4
  %v0_38ae8 = load i32, i32* @eax, align 8
  %v1_38ae8 = add i32 %v0_38ae8, -1587161275
  %v2_38ae8 = inttoptr i32 %v1_38ae8 to i8*
  %v3_38ae8 = load i8, i8* %v2_38ae8, align 1
  %v4_38ae8 = load i32, i32* @ecx, align 8
  %v5_38ae8 = trunc i32 %v4_38ae8 to i8
  %v6_38ae8 = load i1, i1* @cf, align 1
  %v7_38ae8 = zext i1 %v6_38ae8 to i8
  %v8_38ae8 = sub i8 %v3_38ae8, %v5_38ae8
  %v9_38ae8 = add i8 %v8_38ae8, %v7_38ae8
  %v19_38ae8 = sub i8 %v8_38ae8, %v7_38ae8
  %v20_38ae8 = icmp ult i8 %v3_38ae8, %v19_38ae8
  %v21_38ae8 = icmp ne i8 %v5_38ae8, -1
  %v22_38ae8 = or i1 %v21_38ae8, %v20_38ae8
  %v23_38ae8 = icmp ult i8 %v3_38ae8, %v5_38ae8
  %v24_38ae8 = select i1 %v6_38ae8, i1 %v22_38ae8, i1 %v23_38ae8
  store i1 %v24_38ae8, i1* %cf.global-to-local, align 1
  store i8 %v9_38ae8, i8* %v2_38ae8, align 1
  %v0_38aee = load i32, i32* @eax, align 8
  %v1_38aee = trunc i32 %v0_38aee to i8
  %v2_38aee = load i1, i1* %cf.global-to-local, align 1
  %v3_38aee = zext i1 %v2_38aee to i8
  %v4_38aee = add i8 %v3_38aee, %v1_38aee
  %v19_38aee = icmp ule i8 %v4_38aee, %v1_38aee
  %v21_38aee = icmp eq i1 %v2_38aee, %v19_38aee
  store i1 %v21_38aee, i1* %cf.global-to-local, align 1
  %v22_38aee = zext i8 %v4_38aee to i32
  %v24_38aee = and i32 %v0_38aee, -256
  %v25_38aee = or i32 %v22_38aee, %v24_38aee
  store i32 %v25_38aee, i32* %eax.global-to-local, align 8
  %v1_38af0 = inttoptr i32 %v25_38aee to i8*
  %v2_38af0 = load i8, i8* %v1_38af0, align 1
  %v5_38af0 = add i8 %v2_38af0, %v4_38aee
  store i8 %v5_38af0, i8* %v1_38af0, align 1
  %v0_38af2 = load i32, i32* %eax.global-to-local, align 8
  %v1_38af2 = load i32, i32* @ebp, align 4
  %v2_38af2 = add i32 %v1_38af2, -12
  %v3_38af2 = inttoptr i32 %v2_38af2 to i32*
  store i32 %v0_38af2, i32* %v3_38af2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_38af7 = load i32, i32* @ebp, align 4
  %v1_38af7 = add i32 %v0_38af7, -36
  %v2_38af7 = inttoptr i32 %v1_38af7 to i32*
  %v3_38af7 = load i32, i32* %v2_38af7, align 4
  store i32 %v3_38af7, i32* %eax.global-to-local, align 8
  %v1_38afd = call i32 @unknown_6c19b(i32 %v3_38af7)
  store i32 %v1_38afd, i32* %eax.global-to-local, align 8
  %v0_38b0e = load i32, i32* @ebp, align 4
  %v1_38b0e = add i32 %v0_38b0e, -32
  %v2_38b0e = inttoptr i32 %v1_38b0e to i32*
  %v3_38b0e = load i32, i32* %v2_38b0e, align 4
  store i32 %v3_38b0e, i32* %eax.global-to-local, align 8
  %v3_38b14 = call i32 @unknown_725f7(i32 %v3_38b0e, i32 %v1_38afd, i32 1)
  store i32 %v3_38b14, i32* %eax.global-to-local, align 8
  %v0_38b19 = load i32, i32* @ebp, align 4
  %v1_38b19 = add i32 %v0_38b19, -12
  %v2_38b19 = inttoptr i32 %v1_38b19 to i32*
  %v3_38b19 = load i32, i32* %v2_38b19, align 4
  store i32 %v3_38b19, i32* %eax.global-to-local, align 8
  %v1_38b1c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38b1c = xor i32 %v1_38b1c, %v3_38b19
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_38b1c = icmp eq i32 %v2_38b1c, 0
  store i32 %v2_38b1c, i32* @eax, align 8
  br i1 %v3_38b1c, label %bb, label %dec_label_pc_38b25

bb:                                               ; preds = %dec_label_pc_38add
  %v1_38b23 = call i32 @function_38b2a()
  store i32 %v1_38b23, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_38b25

dec_label_pc_38b25:                               ; preds = %bb, %dec_label_pc_38add
  %v4_38b23 = phi i32 [ %v1_38b23, %bb ], [ %v2_38b1c, %dec_label_pc_38add ]
  ret i32 %v4_38b23

; uselistorder directives
  uselistorder i8 %v4_38aee, { 0, 2, 1 }
  uselistorder i8 %v1_38aee, { 1, 0 }
  uselistorder i8 %v5_38ae8, { 1, 0, 2 }
}

define i32 @function_38b2a() local_unnamed_addr {
dec_label_pc_38b2a:
  %v0_38b2b = load i32, i32* @eax, align 8
  ret i32 %v0_38b2b
}

define i32 @_ZN5boost9addressofIKSsEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b2c:
  %stack_var_-20 = alloca i32, align 4
  %v2_38b4a = ptrtoint i32* %stack_var_-20 to i32
  %v2_38b50 = call i32 @unknown_726b6(i32 %v2_38b4a, i32 %arg1)
  ret i32 %v2_38b50
}

define i32 @function_38b57(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38b57:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38b6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b6a:
  %v2_38b6c = load i32, i32* @esi, align 4
  %v4_38b6c = load i1, i1* @df, align 1
  %v5_38b6c = select i1 %v4_38b6c, i32 -4, i32 4
  %v6_38b6c = add i32 %v5_38b6c, %v2_38b6c
  %v4_38b6e = add i32 %v6_38b6c, %v2_38b6c
  store i32 %v4_38b6e, i32* @eax, align 8
  %v0_38b70 = load i32, i32* @ebp, align 4
  %v1_38b70 = add i32 %v0_38b70, -12
  %v2_38b70 = inttoptr i32 %v1_38b70 to i32*
  %v3_38b70 = load i32, i32* %v2_38b70, align 4
  %v1_38b73 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38b73 = icmp eq i32 %v1_38b73, %v3_38b70
  br i1 %v3_38b73, label %bb, label %dec_label_pc_38b7c

bb:                                               ; preds = %dec_label_pc_38b6a
  %v1_38b7a = call i32 @function_38b81()
  br label %dec_label_pc_38b7c

dec_label_pc_38b7c:                               ; preds = %bb, %dec_label_pc_38b6a
  %v2_38b7a = phi i32 [ %v1_38b7a, %bb ], [ %v4_38b6e, %dec_label_pc_38b6a ]
  ret i32 %v2_38b7a
}

define i32 @function_38b81() local_unnamed_addr {
dec_label_pc_38b81:
  %v4_38b81 = load i32, i32* @eax, align 8
  ret i32 %v4_38b81
}

define i32 @function_38b82(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b82:
  %v0_38b82 = load i32, i32* @eax, align 8
  ret i32 %v0_38b82
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38b84:
  %v0_38b96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_38b96
}

define i32 @function_38b9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38b9c:
  %v0_38b9c = load i32, i32* @eax, align 8
  %v1_38b9c = load i32, i32* @ebp, align 4
  %v2_38b9c = add i32 %v1_38b9c, -12
  %v3_38b9c = inttoptr i32 %v2_38b9c to i32*
  store i32 %v0_38b9c, i32* %v3_38b9c, align 4
  store i32 0, i32* @eax, align 8
  %v0_38ba6 = load i32, i32* @ebp, align 4
  %v1_38ba6 = add i32 %v0_38ba6, -12
  %v2_38ba6 = inttoptr i32 %v1_38ba6 to i32*
  %v3_38ba6 = load i32, i32* %v2_38ba6, align 4
  %v1_38ba9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38ba9 = icmp eq i32 %v1_38ba9, %v3_38ba6
  br i1 %v3_38ba9, label %bb, label %dec_label_pc_38bb2

bb:                                               ; preds = %dec_label_pc_38b9c
  %v1_38bb0 = call i32 @function_38bb7()
  br label %dec_label_pc_38bb2

dec_label_pc_38bb2:                               ; preds = %bb, %dec_label_pc_38b9c
  %v3_38bb0 = phi i32 [ %v1_38bb0, %bb ], [ 0, %dec_label_pc_38b9c ]
  ret i32 %v3_38bb0
}

define i32 @function_38bb7() local_unnamed_addr {
dec_label_pc_38bb7:
  %v0_38bb8 = load i32, i32* @eax, align 8
  ret i32 %v0_38bb8
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSsEclISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38bba:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38be8

bb:                                               ; preds = %dec_label_pc_38bba
  %v3_38be6 = call i32 @function_38bed(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_38be8

dec_label_pc_38be8:                               ; preds = %bb, %dec_label_pc_38bba
  %v4_38be6 = phi i32 [ %v3_38be6, %bb ], [ 0, %dec_label_pc_38bba ]
  ret i32 %v4_38be6
}

define i32 @function_38bed(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38bed:
  %v0_38bee = load i32, i32* @eax, align 8
  ret i32 %v0_38bee
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEclERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38bf0:
  %v1_38c13 = call i32 @unknown_72814(i32 %arg2)
  store i32 %v1_38c13, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38c24

bb:                                               ; preds = %dec_label_pc_38bf0
  %v1_38c22 = call i32 @function_38c29()
  br label %dec_label_pc_38c24

dec_label_pc_38c24:                               ; preds = %bb, %dec_label_pc_38bf0
  %v2_38c22 = phi i32 [ %v1_38c22, %bb ], [ %v1_38c13, %dec_label_pc_38bf0 ]
  ret i32 %v2_38c22
}

define i32 @function_38c29() local_unnamed_addr {
dec_label_pc_38c29:
  %v0_38c2a = load i32, i32* @eax, align 8
  ret i32 %v0_38c2a
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKSt6vectorIN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESaIS8_EEEclIS3_INS4_10Value_implIS7_EESaISF_EEEEPSB_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38c2c:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38c5a

bb:                                               ; preds = %dec_label_pc_38c2c
  %v3_38c58 = call i32 @function_38c5f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_38c5a

dec_label_pc_38c5a:                               ; preds = %bb, %dec_label_pc_38c2c
  %v4_38c58 = phi i32 [ %v3_38c58, %bb ], [ 0, %dec_label_pc_38c2c ]
  ret i32 %v4_38c58
}

define i32 @function_38c5f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38c5f:
  %v4_38c5f = load i32, i32* @eax, align 8
  ret i32 %v4_38c5f
}

define i32 @function_38c60(i32 %arg1) local_unnamed_addr {
dec_label_pc_38c60:
  %v0_38c60 = load i32, i32* @eax, align 8
  ret i32 %v0_38c60
}

define i32 @_ZNK9COutPoint9SerializeI11CDataStreamEEvRT_ii(i32 %arg1) local_unnamed_addr {
dec_label_pc_38c62:
  ret i32 %arg1
}

define i32 @function_38c70(i32 %arg1) local_unnamed_addr {
dec_label_pc_38c70:
  %v0_38c70 = load i32, i32* @ebp, align 4
  %v1_38c73 = add i32 %v0_38c70, 2
  store i32 %v1_38c73, i32* @ebp, align 4
  %v0_38c74 = load i32, i32* @ebx, align 4
  %v1_38c74 = add i32 %v0_38c74, 1166610501
  %v2_38c74 = inttoptr i32 %v1_38c74 to i8*
  %v3_38c74 = load i8, i8* %v2_38c74, align 1
  %v4_38c74 = udiv i8 %v3_38c74, 2
  %v5_38c74 = shl i8 %v3_38c74, 7
  %v6_38c74 = or i8 %v4_38c74, %v5_38c74
  store i8 %v6_38c74, i8* %v2_38c74, align 1
  %v0_38c7b = load i32, i32* @ebp, align 4
  %v1_38c7b = add i32 %v0_38c7b, 20
  %v2_38c7b = inttoptr i32 %v1_38c7b to i32*
  %v3_38c7b = load i32, i32* %v2_38c7b, align 4
  %v2_38c7e = add i32 %v0_38c7b, -56
  %v3_38c7e = inttoptr i32 %v2_38c7e to i32*
  store i32 %v3_38c7b, i32* %v3_38c7e, align 4
  %v0_38c81 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_38c87 = load i32, i32* @ebp, align 4
  %v2_38c87 = add i32 %v1_38c87, -12
  %v3_38c87 = inttoptr i32 %v2_38c87 to i32*
  store i32 %v0_38c81, i32* %v3_38c87, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v3_38c74, { 1, 0 }
}

define i32 @function_38c8d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38c8d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_38c8d = load i32, i32* @ebp, align 4
  %v3_38c8f = load i32, i32* @eax, align 8
  %v5_38c8f2 = mul i32 %v3_38c8f, 256
  %v0_38c92 = load i32, i32* @esi, align 4
  %v2_38c92 = add i32 %v0_38c92, %v3_38c8f
  store i32 %v2_38c92, i32* @esi, align 4
  %v0_38c96 = load i32, i32* @ebx, align 4
  %v1_38c965 = add i32 %v0_38c96, %v5_38c8f2
  %v22_38c96 = and i32 %v1_38c965, 65280
  %v23_38c96 = and i32 %v0_38c96, -65281
  %v24_38c96 = or i32 %v22_38c96, %v23_38c96
  store i32 %v24_38c96, i32* %ebx.global-to-local, align 4
  %v1_38c99 = add i32 %v0_38c8d, 4
  store i32 %v1_38c99, i32* @ebp, align 4
  %tmp11 = trunc i32 %v3_38c8f to i8
  %v5_38c9b = mul i8 %tmp11, 2
  %v21_38c9b = inttoptr i32 %v3_38c8f to i8*
  store i8 %v5_38c9b, i8* %v21_38c9b, align 1
  %v2_38c9d = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_38c9d = load i32, i32* @eax, align 8
  %v4_38c9d = trunc i32 %v3_38c9d to i8
  %v5_38c9d = add i8 %v4_38c9d, %v2_38c9d
  %v21_38c9d = inttoptr i32 %v3_38c9d to i8*
  store i8 %v5_38c9d, i8* %v21_38c9d, align 1
  %v0_38c9f = load i32, i32* @ebp, align 4
  %v1_38c9f = add i32 %v0_38c9f, -44
  %v2_38c9f = inttoptr i32 %v1_38c9f to i32*
  %v3_38c9f = load i32, i32* %v2_38c9f, align 4
  %v1_38ca2 = add i32 %v3_38c9f, 36
  %v1_38cb0 = add i32 %v0_38c9f, -28
  %v3_38cb6 = call i32 @unknown_4a45e(i32 %v1_38cb0, i32 %v3_38c9f, i32 %v1_38ca2)
  %v0_38cbb = load i32, i32* @ebp, align 4
  %v1_38cbb = add i32 %v0_38cbb, -28
  %v1_38cc1 = call i32 @unknown_4e8f1(i32 %v1_38cbb)
  %v0_38cc6 = load i32, i32* %ebx.global-to-local, align 4
  %v0_38cca = load i32, i32* @ebp, align 4
  %v1_38cca = add i32 %v0_38cca, -56
  %v2_38cca = inttoptr i32 %v1_38cca to i32*
  %v3_38cca = load i32, i32* %v2_38cca, align 4
  %v1_38cd1 = add i32 %v0_38cca, -52
  %v2_38cd1 = inttoptr i32 %v1_38cd1 to i32*
  %v3_38cd1 = load i32, i32* %v2_38cd1, align 4
  %v1_38cdc = add i32 %v0_38cca, -48
  %v2_38cdc = inttoptr i32 %v1_38cdc to i32*
  %v3_38cdc = load i32, i32* %v2_38cdc, align 4
  %sext = mul i32 %v0_38cc6, 16777216
  %v5_38ce2 = sdiv i32 %sext, 16777216
  %v6_38ce2 = call i32 @unknown_61a8b(i32 %v3_38cdc, i32 %v1_38cc1, i32 %v3_38cd1, i32 %v3_38cca, i32 %v5_38ce2)
  %v0_38ce7 = load i32, i32* @ebp, align 4
  %v1_38ce7 = add i32 %v0_38ce7, -20
  %v2_38ce7 = inttoptr i32 %v1_38ce7 to i32*
  %v3_38ce7 = load i32, i32* %v2_38ce7, align 4
  %v5_38ce7 = add i32 %v3_38ce7, %v6_38ce2
  store i32 %v5_38ce7, i32* %v2_38ce7, align 4
  %v0_38cea = load i32, i32* @ebp, align 4
  %v1_38cea = add i32 %v0_38cea, -12
  %v2_38cea = inttoptr i32 %v1_38cea to i32*
  %v3_38cea = load i32, i32* %v2_38cea, align 4
  %v1_38ced = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38ced = xor i32 %v1_38ced, %v3_38cea
  %v3_38ced = icmp eq i32 %v2_38ced, 0
  store i32 %v2_38ced, i32* @eax, align 8
  br i1 %v3_38ced, label %bb, label %dec_label_pc_38cf6

bb:                                               ; preds = %dec_label_pc_38c8d
  %v1_38cf4 = call i32 @function_38cfb()
  br label %dec_label_pc_38cf6

dec_label_pc_38cf6:                               ; preds = %bb, %dec_label_pc_38c8d
  %v3_38cf4 = phi i32 [ %v1_38cf4, %bb ], [ %v2_38ced, %dec_label_pc_38c8d ]
  ret i32 %v3_38cf4

; uselistorder directives
  uselistorder i32 %v0_38c96, { 1, 0 }
  uselistorder i32 %v3_38c8f, { 1, 2, 3, 0 }
}

define i32 @function_38cfb() local_unnamed_addr {
dec_label_pc_38cfb:
  %v0_38d00 = load i32, i32* @eax, align 8
  ret i32 %v0_38d00
}

define i32 @_ZSt22__uninitialized_copy_aIP12CTransactionS1_S0_ET0_T_S3_S2_RSaIT1_E() local_unnamed_addr {
dec_label_pc_38d01:
  %eax.global-to-local = alloca i32, align 4
  %v5_38d01 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_38d01
}

define i32 @function_38d02(i32 %arg1) local_unnamed_addr {
dec_label_pc_38d02:
  ret i32 %arg1
}

define i32 @function_38d32(i32 %arg1) local_unnamed_addr {
dec_label_pc_38d32:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_38d40:
  %v0_38d40 = load i1, i1* @cf, align 1
  %v2_38d40 = load i1, i1* @pf, align 1
  %v5_38d40 = load i1, i1* @az, align 1
  %v8_38d40 = load i1, i1* @zf, align 1
  %v11_38d40 = load i1, i1* @sf, align 1
  %v14_38d40 = load i1, i1* @tf, align 1
  %v17_38d40 = load i1, i1* @if, align 1
  %v20_38d40 = load i1, i1* @df, align 1
  %v23_38d40 = load i1, i1* @of, align 1
  %v26_38d40 = load i1, i1* @nt, align 1
  %v0_38d41 = load i32, i32* @eax, align 8
  %v4_38d41 = mul i32 %v0_38d41, 2
  store i32 %v4_38d41, i32* @eax, align 8
  %v0_38d43 = load i32, i32* @ebp, align 4
  %v1_38d43 = add i32 %v0_38d43, -12
  %v2_38d43 = inttoptr i32 %v1_38d43 to i32*
  %v3_38d43 = load i32, i32* %v2_38d43, align 4
  %v1_38d46 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38d46 = xor i32 %v1_38d46, %v3_38d43
  %v3_38d46 = icmp eq i32 %v2_38d46, 0
  store i32 %v2_38d46, i32* @edx, align 4
  br i1 %v3_38d46, label %bb, label %dec_label_pc_38d4f

bb:                                               ; preds = %dec_label_pc_38d40
  %v1_38d40 = zext i1 %v0_38d40 to i32
  %v4_38d40 = select i1 %v2_38d40, i32 4, i32 0
  %v29_38d40 = or i32 %v1_38d40, %v4_38d40
  %v7_38d40 = select i1 %v5_38d40, i32 16, i32 0
  %v30_38d40 = or i32 %v29_38d40, %v7_38d40
  %v10_38d40 = select i1 %v8_38d40, i32 64, i32 0
  %v31_38d40 = or i32 %v30_38d40, %v10_38d40
  %v13_38d40 = select i1 %v11_38d40, i32 128, i32 0
  %v32_38d40 = or i32 %v31_38d40, %v13_38d40
  %v16_38d40 = select i1 %v14_38d40, i32 256, i32 0
  %v33_38d40 = or i32 %v32_38d40, %v16_38d40
  %v19_38d40 = select i1 %v17_38d40, i32 512, i32 0
  %v34_38d40 = or i32 %v33_38d40, %v19_38d40
  %v22_38d40 = select i1 %v20_38d40, i32 1024, i32 0
  %v35_38d40 = or i32 %v34_38d40, %v22_38d40
  %v25_38d40 = select i1 %v23_38d40, i32 2048, i32 0
  %v36_38d40 = or i32 %v35_38d40, %v25_38d40
  %v28_38d40 = select i1 %v26_38d40, i32 16384, i32 0
  %v37_38d40 = or i32 %v36_38d40, %v28_38d40
  %v38_38d40 = or i32 %v37_38d40, 2
  %v2_38d4d = call i32 @function_38d54(i32 %v38_38d40)
  br label %dec_label_pc_38d4f

dec_label_pc_38d4f:                               ; preds = %bb, %dec_label_pc_38d40
  %v3_38d4d = phi i32 [ %v2_38d4d, %bb ], [ %v4_38d41, %dec_label_pc_38d40 ]
  ret i32 %v3_38d4d

; uselistorder directives
  uselistorder i32 %v4_38d41, { 1, 0 }
}

define i32 @function_38d54(i32 %arg1) local_unnamed_addr {
dec_label_pc_38d54:
  %v0_38d55 = load i32, i32* @eax, align 8
  ret i32 %v0_38d55
}

define i32 @_ZSt12__miter_baseIP12CTransactionENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_38d56:
  %v1_38d73 = call i32 @unknown_72a20(i32 %arg1)
  store i32 %v1_38d73, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38d84

bb:                                               ; preds = %dec_label_pc_38d56
  %v1_38d82 = call i32 @function_38d89()
  br label %dec_label_pc_38d84

dec_label_pc_38d84:                               ; preds = %bb, %dec_label_pc_38d56
  %v2_38d82 = phi i32 [ %v1_38d82, %bb ], [ %v1_38d73, %dec_label_pc_38d56 ]
  ret i32 %v2_38d82
}

define i32 @function_38d89() local_unnamed_addr {
dec_label_pc_38d89:
  %v0_38d8a = load i32, i32* @eax, align 8
  ret i32 %v0_38d8a
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP12CTransactionS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38d8b:
  %v1_38db6 = call i32 @unknown_71b88(i32 %arg3)
  ret i32 %v1_38db6
}

define i32 @function_38dbd(i32 %arg1) local_unnamed_addr {
dec_label_pc_38dbd:
  %v0_38dbd = load i32, i32* @ebp, align 4
  %v1_38dbd = add i32 %v0_38dbd, -32
  %v2_38dbd = inttoptr i32 %v1_38dbd to i32*
  %v3_38dbd = load i32, i32* %v2_38dbd, align 4
  %v1_38dc3 = call i32 @unknown_71b88(i32 %v3_38dbd)
  store i32 %v1_38dc3, i32* @ebx, align 4
  %v0_38dca = load i32, i32* @ebp, align 4
  %v1_38dca = add i32 %v0_38dca, -28
  %v2_38dca = inttoptr i32 %v1_38dca to i32*
  %v3_38dca = load i32, i32* %v2_38dca, align 4
  %v1_38dd0 = call i32 @unknown_71b88(i32 %v3_38dca)
  %v0_38dd5 = load i32, i32* @esi, align 4
  %v0_38dd9 = load i32, i32* @ebx, align 4
  %v3_38de0 = call i32 @unknown_72a82(i32 %v1_38dd0, i32 %v0_38dd9, i32 %v0_38dd5)
  store i32 %v3_38de0, i32* @eax, align 8
  %v0_38de5 = load i32, i32* @ebp, align 4
  %v1_38de5 = add i32 %v0_38de5, -12
  %v2_38de5 = inttoptr i32 %v1_38de5 to i32*
  %v3_38de5 = load i32, i32* %v2_38de5, align 4
  %v1_38de8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38de8 = icmp eq i32 %v1_38de8, %v3_38de5
  br i1 %v3_38de8, label %bb, label %dec_label_pc_38df1

bb:                                               ; preds = %dec_label_pc_38dbd
  %v1_38def = call i32 @function_38df6()
  br label %dec_label_pc_38df1

dec_label_pc_38df1:                               ; preds = %bb, %dec_label_pc_38dbd
  %v3_38def = phi i32 [ %v1_38def, %bb ], [ %v3_38de0, %dec_label_pc_38dbd ]
  ret i32 %v3_38def

; uselistorder directives
  uselistorder i32 (i32)* @unknown_71b88, { 1, 0, 2 }
}

define i32 @function_38df6() local_unnamed_addr {
dec_label_pc_38df6:
  %v0_38dfc = load i32, i32* @eax, align 8
  ret i32 %v0_38dfc
}

define i32 @_ZSt12__niter_baseIP12CTransactionENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_38dfd:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v1_38e1a = call i32 @unknown_72ac7(i32 %arg1)
  store i32 %v1_38e1a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38e2b

bb:                                               ; preds = %dec_label_pc_38dfd
  %v1_38e29 = load i32, i32* %stack_var_-60, align 4
  %v3_38e29 = call i32 @function_38e30(i32 %v1_38e29, i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_38e2b

dec_label_pc_38e2b:                               ; preds = %bb, %dec_label_pc_38dfd
  %v4_38e29 = phi i32 [ %v3_38e29, %bb ], [ %v1_38e1a, %dec_label_pc_38dfd ]
  ret i32 %v4_38e29

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_38e30, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_38e30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38e30:
  %v0_38e31 = load i32, i32* @eax, align 8
  ret i32 %v0_38e31
}

define i32 @_ZSt8__fill_aIP12CTransactionS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38e32:
  ret i32 %arg1
}

define i32 @function_38e70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38e70:
  %v0_38e70 = load i32, i32* @eax, align 8
  %v1_38e70 = load i32, i32* @ebp, align 4
  %v2_38e70 = add i32 %v1_38e70, -32
  %v3_38e70 = inttoptr i32 %v2_38e70 to i32*
  %v4_38e70 = load i32, i32* %v3_38e70, align 4
  %v15_38e70 = icmp eq i32 %v0_38e70, %v4_38e70
  %v1_38e73 = icmp eq i1 %v15_38e70, false
  %v2_38e73 = zext i1 %v1_38e73 to i32
  %v4_38e73 = and i32 %v0_38e70, -256
  %v5_38e73 = or i32 %v2_38e73, %v4_38e73
  ret i32 %v5_38e73

; uselistorder directives
  uselistorder i32 %v0_38e70, { 1, 0 }
}

define i32 @function_38e7a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38e7a:
  %v0_38e7a = load i32, i32* @ebp, align 4
  %v1_38e7a = add i32 %v0_38e7a, -12
  %v2_38e7a = inttoptr i32 %v1_38e7a to i32*
  %v3_38e7a = load i32, i32* %v2_38e7a, align 4
  %v1_38e7d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38e7d = xor i32 %v1_38e7d, %v3_38e7a
  %v3_38e7d = icmp eq i32 %v2_38e7d, 0
  store i32 %v2_38e7d, i32* @eax, align 8
  br i1 %v3_38e7d, label %bb, label %dec_label_pc_38e86

bb:                                               ; preds = %dec_label_pc_38e7a
  %v1_38e84 = call i32 @function_38e8b()
  br label %dec_label_pc_38e86

dec_label_pc_38e86:                               ; preds = %bb, %dec_label_pc_38e7a
  %v2_38e84 = phi i32 [ %v1_38e84, %bb ], [ %v2_38e7d, %dec_label_pc_38e7a ]
  ret i32 %v2_38e84
}

define i32 @function_38e8b() local_unnamed_addr {
dec_label_pc_38e8b:
  %v0_38e8c = load i32, i32* @eax, align 8
  ret i32 %v0_38e8c
}

define i32 @_ZN12CTransactionaSERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38e8e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_38eae = inttoptr i32 %arg2 to i32*
  %v2_38eae = load i32, i32* %v1_38eae, align 4
  store i32 %v2_38eae, i32* %arg1, align 4
  %v1_38eb8 = add i32 %arg2, 4
  %v1_38ebe = add i32 %tmp102, 4
  %v2_38ec8 = call i32 @unknown_72bd8(i32 %v1_38ebe, i32 %v1_38eb8)
  %v1_38ed0 = add i32 %arg2, 16
  %v1_38ed6 = add i32 %tmp102, 16
  %v2_38ee0 = call i32 @unknown_72e4e(i32 %v1_38ed6, i32 %v1_38ed0)
  ret i32 %tmp102

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_38eee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38eee:
  %v0_38eee = load i32, i32* @edx, align 4
  %v1_38eee = load i32, i32* @eax, align 8
  %v2_38eee = add i32 %v1_38eee, 28
  %v3_38eee = inttoptr i32 %v2_38eee to i32*
  store i32 %v0_38eee, i32* %v3_38eee, align 4
  %v0_38ef1 = load i32, i32* @ebp, align 4
  %v1_38ef1 = add i32 %v0_38ef1, -28
  %v2_38ef1 = inttoptr i32 %v1_38ef1 to i32*
  %v3_38ef1 = load i32, i32* %v2_38ef1, align 4
  store i32 %v3_38ef1, i32* @eax, align 8
  %v1_38ef4 = add i32 %v0_38ef1, -12
  %v2_38ef4 = inttoptr i32 %v1_38ef4 to i32*
  %v3_38ef4 = load i32, i32* %v2_38ef4, align 4
  %v1_38ef7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38ef7 = icmp eq i32 %v1_38ef7, %v3_38ef4
  br i1 %v3_38ef7, label %bb, label %dec_label_pc_38f00

bb:                                               ; preds = %dec_label_pc_38eee
  %v1_38efe = call i32 @function_38f05()
  br label %dec_label_pc_38f00

dec_label_pc_38f00:                               ; preds = %bb, %dec_label_pc_38eee
  %v2_38efe = phi i32 [ %v1_38efe, %bb ], [ %v3_38ef1, %dec_label_pc_38eee ]
  ret i32 %v2_38efe
}

define i32 @function_38f05() local_unnamed_addr {
dec_label_pc_38f05:
  %v0_38f06 = load i32, i32* @eax, align 8
  ret i32 %v0_38f06
}

define i32 @_ZSt20uninitialized_fill_nIP12CTransactionjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38f07:
  %v3_38f3e = call i32 @unknown_73162(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_38f4f

bb:                                               ; preds = %dec_label_pc_38f07
  %v1_38f4d = call i32 @function_38f54()
  br label %dec_label_pc_38f4f

dec_label_pc_38f4f:                               ; preds = %bb, %dec_label_pc_38f07
  %v2_38f4d = phi i32 [ %v1_38f4d, %bb ], [ 0, %dec_label_pc_38f07 ]
  ret i32 %v2_38f4d
}

define i32 @function_38f54() local_unnamed_addr {
dec_label_pc_38f54:
  %v0_38f55 = load i32, i32* @eax, align 8
  ret i32 %v0_38f55
}

define i32 @_ZNKSt6vectorI12CTransactionSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_38f56:
  ret i32 %arg1
}

define i32 @function_38f66(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38f66:
  %v2_38f66 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_38f66 = load i32, i32* @eax, align 8
  %v4_38f66 = trunc i32 %v3_38f66 to i8
  %v5_38f66 = add i8 %v4_38f66, %v2_38f66
  %v21_38f66 = inttoptr i32 %v3_38f66 to i8*
  store i8 %v5_38f66, i8* %v21_38f66, align 1
  %v0_38f68 = load i32, i32* @eax, align 8
  %v1_38f68 = load i32, i32* @ebp, align 4
  %v2_38f68 = add i32 %v1_38f68, -12
  %v3_38f68 = inttoptr i32 %v2_38f68 to i32*
  store i32 %v0_38f68, i32* %v3_38f68, align 4
  %v0_38f6d = load i32, i32* @ebp, align 4
  %v1_38f6d = add i32 %v0_38f6d, -28
  %v2_38f6d = inttoptr i32 %v1_38f6d to i32*
  %v3_38f6d = load i32, i32* %v2_38f6d, align 4
  %v1_38f73 = call i32 @unknown_73254(i32 %v3_38f6d)
  %v1_38f7b = call i32 @unknown_73282(i32 %v1_38f73)
  store i32 %v1_38f7b, i32* @eax, align 8
  %v0_38f80 = load i32, i32* @ebp, align 4
  %v1_38f80 = add i32 %v0_38f80, -12
  %v2_38f80 = inttoptr i32 %v1_38f80 to i32*
  %v3_38f80 = load i32, i32* %v2_38f80, align 4
  %v1_38f83 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38f83 = icmp eq i32 %v1_38f83, %v3_38f80
  br i1 %v3_38f83, label %bb, label %dec_label_pc_38f8c

bb:                                               ; preds = %dec_label_pc_38f66
  %v1_38f8a = call i32 @function_38f91()
  br label %dec_label_pc_38f8c

dec_label_pc_38f8c:                               ; preds = %bb, %dec_label_pc_38f66
  %v4_38f8a = phi i32 [ %v1_38f8a, %bb ], [ %v1_38f7b, %dec_label_pc_38f66 ]
  ret i32 %v4_38f8a
}

define i32 @function_38f91() local_unnamed_addr {
dec_label_pc_38f91:
  %v0_38f92 = load i32, i32* @eax, align 8
  ret i32 %v0_38f92
}

define i32 @_ZN9__gnu_cxx13new_allocatorI12CTransactionE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38f94:
  %v0_38fac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_38fac
}

define i32 @function_38fb5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38fb5:
  %v0_38fb7 = load i32, i32* @ebp, align 4
  %v1_38fb7 = add i32 %v0_38fb7, -28
  %v2_38fb7 = inttoptr i32 %v1_38fb7 to i32*
  %v3_38fb7 = load i32, i32* %v2_38fb7, align 4
  %v1_38fbd = call i32 @unknown_732c0(i32 %v3_38fb7)
  %v1_38fc2 = load i32, i32* @ebp, align 4
  %v2_38fc2 = add i32 %v1_38fc2, -32
  %v3_38fc2 = inttoptr i32 %v2_38fc2 to i32*
  %v4_38fc2 = load i32, i32* %v3_38fc2, align 4
  %v10_38fc2 = icmp ult i32 %v1_38fbd, %v4_38fc2
  %v1_38fc5 = zext i1 %v10_38fc2 to i32
  %v3_38fc5 = and i32 %v1_38fbd, -256
  %v4_38fc5 = or i32 %v1_38fc5, %v3_38fc5
  %v5_38fc8 = icmp eq i1 %v10_38fc2, false
  br i1 %v5_38fc8, label %bb, label %dec_label_pc_38fcc

bb:                                               ; preds = %dec_label_pc_38fb5
  %v1_38fca = call i32 @function_38fd1()
  br label %dec_label_pc_38fcc

dec_label_pc_38fcc:                               ; preds = %bb, %dec_label_pc_38fb5
  %v2_38fca = phi i32 [ %v1_38fca, %bb ], [ %v4_38fc5, %dec_label_pc_38fb5 ]
  ret i32 %v2_38fca

; uselistorder directives
  uselistorder i1 %v10_38fc2, { 1, 0 }
}

define i32 @function_38fd1() local_unnamed_addr {
dec_label_pc_38fd1:
  %v0_38fd1 = load i32, i32* @ebp, align 4
  %v1_38fd1 = add i32 %v0_38fd1, -32
  %v2_38fd1 = inttoptr i32 %v1_38fd1 to i32*
  %v3_38fd1 = load i32, i32* %v2_38fd1, align 4
  %v2_38fd4 = mul i32 %v3_38fd1, 32
  ret i32 %v2_38fd4
}

define i32 @function_38fef() local_unnamed_addr {
dec_label_pc_38fef:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38fef = load i32, i32* %ecx.global-to-local, align 8
  %v1_38fef = add i32 %v0_38fef, -1
  store i32 %v1_38fef, i32* %ecx.global-to-local, align 8
  %v0_38ff1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38ff1
}

define i32 @_Z16Unserialize_implI11CDataStream5CTxInSaIS1_EEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_38ff2:
  ret i32 %arg2
}

define i32 @function_3902a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3902a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3902a = load i32, i32* @eax, align 8
  %v11_3902a = and i32 %v0_3902a, -24
  store i32 %v11_3902a, i32* %eax.global-to-local, align 8
  %v0_3902c = load i32, i32* @esi, align 4
  %v1_3902c = add i32 %v0_3902c, 1
  %v2_3902c = inttoptr i32 %v1_3902c to i8*
  %v3_3902c = load i8, i8* %v2_3902c, align 1
  %v5_3902c = udiv i32 %v0_3902a, 256
  %v6_3902c = trunc i32 %v5_3902c to i8
  %v7_3902c = sub i8 %v3_3902c, %v6_3902c
  store i8 %v7_3902c, i8* %v2_3902c, align 1
  %v0_3902f = load i32, i32* @ebx, align 4
  %v1_3902f = add i32 %v0_3902f, 76129349
  %v2_3902f = inttoptr i32 %v1_3902f to i8*
  %v3_3902f = load i8, i8* %v2_3902f, align 1
  %v4_3902f = load i32, i32* @ecx, align 8
  %v5_3902f = trunc i32 %v4_3902f to i8
  %v6_3902f = add i8 %v5_3902f, %v3_3902f
  store i8 %v6_3902f, i8* %v2_3902f, align 1
  %v0_39035 = load i32, i32* %eax.global-to-local, align 8
  %v1_39035 = trunc i32 %v0_39035 to i8
  %v2_39035 = and i8 %v1_39035, -24
  %v8_39035 = zext i8 %v2_39035 to i32
  %v10_39035 = and i32 %v0_39035, -256
  %v11_39035 = or i32 %v8_39035, %v10_39035
  store i32 %v11_39035, i32* %eax.global-to-local, align 8
  %v0_39037 = load i32, i32* @edx, align 4
  %v1_39037 = add i32 %v0_39037, 2
  %v2_39037 = inttoptr i32 %v1_39037 to i8*
  %v3_39037 = load i8, i8* %v2_39037, align 1
  %v8_39037 = sub i8 %v3_39037, %v2_39035
  store i8 %v8_39037, i8* %v2_39037, align 1
  %v0_3903a = load i32, i32* @ecx, align 8
  %v1_3903a = add i32 %v0_3903a, 1170717765
  %v2_3903a = inttoptr i32 %v1_3903a to i8*
  %v3_3903a = load i8, i8* %v2_3903a, align 1
  %v5_3903a = trunc i32 %v0_3903a to i8
  %v6_3903a = add i8 %v3_3903a, %v5_3903a
  store i8 %v6_3903a, i8* %v2_3903a, align 1
  %v0_39040 = load i32, i32* %eax.global-to-local, align 8
  %v1_39040 = and i32 %v0_39040, -65281
  store i32 %v1_39040, i32* %eax.global-to-local, align 8
  %v1_39042 = inttoptr i32 %v1_39040 to i8*
  %v2_39042 = load i8, i8* %v1_39042, align 1
  %v4_39042 = trunc i32 %v0_39040 to i8
  %v5_39042 = add i8 %v2_39042, %v4_39042
  store i8 %v5_39042, i8* %v1_39042, align 1
  %v0_39044 = load i32, i32* @ebx, align 4
  %v1_39044 = udiv i32 %v0_39044, 256
  %v3_39044 = load i32, i32* %eax.global-to-local, align 8
  %v5_39044 = add i32 %v1_39044, %v3_39044
  %v20_39044 = and i32 %v5_39044, 255
  %v22_39044 = mul nuw nsw i32 %v20_39044, 256
  %v23_39044 = and i32 %v0_39044, -65281
  %v24_39044 = or i32 %v22_39044, %v23_39044
  store i32 %v24_39044, i32* @ebx, align 4
  %v0_39046 = load i32, i32* @ebp, align 4
  %v1_39046 = add i32 %v0_39046, 1
  store i32 %v1_39046, i32* @ebp, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3904c = call i32 @function_390d7()
  store i32 %v0_3904c, i32* %eax.global-to-local, align 8
  ret i32 %v0_3904c

; uselistorder directives
  uselistorder i32 %v0_39044, { 1, 0 }
  uselistorder i32 %v0_3902a, { 1, 0 }
  uselistorder i8 -24, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 76129349, { 2, 0, 1 }
}

define i32 @function_39051() local_unnamed_addr {
dec_label_pc_39051:
  %v0_39051 = load i32, i32* @ebp, align 4
  %v1_39051 = add i32 %v0_39051, -72
  %v2_39051 = inttoptr i32 %v1_39051 to i32*
  %v3_39051 = load i32, i32* %v2_39051, align 4
  %v4_39051 = add i32 %v3_39051, ptrtoint (i32* @global_var_17799.2914 to i32)
  store i32 %v4_39051, i32* %v2_39051, align 4
  %v0_39058 = load i32, i32* @ebp, align 4
  %v1_39058 = add i32 %v0_39058, -72
  %v2_39058 = inttoptr i32 %v1_39058 to i32*
  %v3_39058 = load i32, i32* %v2_39058, align 4
  %v2_3905b = add i32 %v0_39058, -68
  %v3_3905b = inttoptr i32 %v2_3905b to i32*
  %v4_3905b = load i32, i32* %v3_3905b, align 4
  %tmp4 = icmp ugt i32 %v3_39058, %v4_3905b
  br i1 %tmp4, label %dec_label_pc_39060, label %dec_label_pc_39066

dec_label_pc_39060:                               ; preds = %dec_label_pc_39051
  store i32 %v4_3905b, i32* %v2_39058, align 4
  %v0_39066.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_39066

dec_label_pc_39066:                               ; preds = %dec_label_pc_39051, %dec_label_pc_39060
  %v0_39066 = phi i32 [ %v0_39066.pre, %dec_label_pc_39060 ], [ %v0_39058, %dec_label_pc_39051 ]
  %v1_39066 = add i32 %v0_39066, -64
  %v1_3906c = call i32 @unknown_4b8dc(i32 %v1_39066)
  %v0_39071 = load i32, i32* @ebp, align 4
  %v1_39071 = add i32 %v0_39071, -64
  %v1_39078 = add i32 %v0_39071, -72
  %v2_39078 = inttoptr i32 %v1_39078 to i32*
  %v3_39078 = load i32, i32* %v2_39078, align 4
  %v1_3907f = add i32 %v0_39071, -96
  %v2_3907f = inttoptr i32 %v1_3907f to i32*
  %v3_3907f = load i32, i32* %v2_3907f, align 4
  %v3_39085 = call i32 @unknown_7334e(i32 %v3_3907f, i32 %v3_39078, i32 %v1_39071)
  %v0_3908a = load i32, i32* @ebp, align 4
  %v1_3908a = add i32 %v0_3908a, -64
  %v1_39090 = call i32 @unknown_65966(i32 %v1_3908a)
  %v0_39095 = call i32 @function_390ca()
  ret i32 %v0_39095

; uselistorder directives
  uselistorder i32 %v4_3905b, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4b8dc, { 2, 0, 5, 4, 3, 1 }
  uselistorder label %dec_label_pc_39066, { 1, 0 }
}

define i32 @function_39097() local_unnamed_addr {
dec_label_pc_39097:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_390ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_390ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_390ac = load i32, i32* @edx, align 4
  %v0_390b0 = load i32, i32* @ebp, align 4
  %v1_390b0 = add i32 %v0_390b0, -100
  %v2_390b0 = inttoptr i32 %v1_390b0 to i32*
  %v3_390b0 = load i32, i32* %v2_390b0, align 4
  store i32 %v3_390b0, i32* @edx, align 4
  %v0_390b7 = load i32, i32* @eax, align 8
  %v1_390bb = add i32 %v0_390b0, -92
  %v2_390bb = inttoptr i32 %v1_390bb to i32*
  %v3_390bb = load i32, i32* %v2_390bb, align 4
  store i32 %v3_390bb, i32* %eax.global-to-local, align 8
  %v4_390c1 = call i32 @unknown_73414(i32 %v3_390bb, i32 %v0_390b7, i32 %v3_390b0, i32 %v0_390ac)
  store i32 %v4_390c1, i32* %eax.global-to-local, align 8
  %v0_390c6 = load i32, i32* @ebp, align 4
  %v1_390c6 = add i32 %v0_390c6, -76
  %v2_390c6 = inttoptr i32 %v1_390c6 to i32*
  %v3_390c6 = load i32, i32* %v2_390c6, align 4
  %v4_390c6 = add i32 %v3_390c6, 1
  store i32 %v4_390c6, i32* %v2_390c6, align 4
  %v22_390c6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_390c6
}

define i32 @function_390ca() local_unnamed_addr {
dec_label_pc_390ca:
  %v0_390ca = load i32, i32* @ebp, align 4
  %v1_390ca = add i32 %v0_390ca, -76
  %v2_390ca = inttoptr i32 %v1_390ca to i32*
  %v3_390ca = load i32, i32* %v2_390ca, align 4
  %v2_390cd = add i32 %v0_390ca, -72
  %v3_390cd = inttoptr i32 %v2_390cd to i32*
  %v4_390cd = load i32, i32* %v3_390cd, align 4
  %v10_390cd = icmp ult i32 %v3_390ca, %v4_390cd
  %v1_390d0 = zext i1 %v10_390cd to i32
  %v3_390d0 = and i32 %v3_390ca, -256
  %v4_390d0 = or i32 %v1_390d0, %v3_390d0
  ret i32 %v4_390d0
}

define i32 @function_390d7() local_unnamed_addr {
dec_label_pc_390d7:
  %v0_390d7 = load i32, i32* @ebp, align 4
  %v1_390d7 = add i32 %v0_390d7, -72
  %v2_390d7 = inttoptr i32 %v1_390d7 to i32*
  %v3_390d7 = load i32, i32* %v2_390d7, align 4
  %v2_390da = add i32 %v0_390d7, -68
  %v3_390da = inttoptr i32 %v2_390da to i32*
  %v4_390da = load i32, i32* %v3_390da, align 4
  %v10_390da = icmp ult i32 %v3_390d7, %v4_390da
  %v5_390e0 = icmp eq i1 %v10_390da, false
  %v1_390e2 = icmp eq i1 %v5_390e0, false
  br i1 %v1_390e2, label %bb, label %dec_label_pc_390e8

bb:                                               ; preds = %dec_label_pc_390d7
  %v2_390e2 = call i32 @function_39051()
  br label %dec_label_pc_390e8

dec_label_pc_390e8:                               ; preds = %bb, %dec_label_pc_390d7
  %v0_390e8 = call i32 @function_39101()
  ret i32 %v0_390e8
}

define i32 @function_390eb() local_unnamed_addr {
dec_label_pc_390eb:
  %eax.global-to-local = alloca i32, align 4
  %v0_390eb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_390eb
}

define i32 @function_39101() local_unnamed_addr {
dec_label_pc_39101:
  %v0_39101 = load i32, i32* @ebp, align 4
  %v1_39101 = add i32 %v0_39101, -12
  %v2_39101 = inttoptr i32 %v1_39101 to i32*
  %v3_39101 = load i32, i32* %v2_39101, align 4
  %v1_39104 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_39104 = xor i32 %v1_39104, %v3_39101
  %v3_39104 = icmp eq i32 %v2_39104, 0
  store i32 %v2_39104, i32* @eax, align 8
  br i1 %v3_39104, label %bb, label %dec_label_pc_3910d

bb:                                               ; preds = %dec_label_pc_39101
  %v1_3910b = call i32 @function_39112()
  br label %dec_label_pc_3910d

dec_label_pc_3910d:                               ; preds = %bb, %dec_label_pc_39101
  %v2_3910b = phi i32 [ %v1_3910b, %bb ], [ %v2_39104, %dec_label_pc_39101 ]
  ret i32 %v2_3910b
}

declare i32 @__stack_chk_fail.1439(i32, i32) local_unnamed_addr

define i32 @function_39112() local_unnamed_addr {
dec_label_pc_39112:
  %v0_3911a = load i32, i32* @eax, align 8
  ret i32 %v0_3911a
}

define i32 @_Z16Unserialize_implI11CDataStream6CTxOutSaIS1_EEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3911b:
  %v0_39140 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_39140
}

define i32 @function_3914a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3914a:
  %v0_3914a = load i32, i32* @ebx, align 4
  %v1_3914a = add i32 %v0_3914a, 76136517
  %v2_3914a = inttoptr i32 %v1_3914a to i8*
  %v3_3914a = load i8, i8* %v2_3914a, align 1
  %v4_3914a = udiv i8 %v3_3914a, 16
  %v5_3914a = mul i8 %v3_3914a, 16
  %v6_3914a = or i8 %v4_3914a, %v5_3914a
  store i8 %v6_3914a, i8* %v2_3914a, align 1
  %v0_39151 = call i32 @unknown_4f7bf()
  %v0_39156 = load i32, i32* @ebp, align 4
  %v1_39156 = add i32 %v0_39156, -60
  %v2_39156 = inttoptr i32 %v1_39156 to i32*
  %v3_39156 = load i32, i32* %v2_39156, align 4
  %v1_3915c = call i32 @unknown_5d37c(i32 %v3_39156)
  %v1_39161 = load i32, i32* @ebp, align 4
  %v2_39161 = add i32 %v1_39161, -16
  %v3_39161 = inttoptr i32 %v2_39161 to i32*
  store i32 %v1_3915c, i32* %v3_39161, align 4
  %v0_39164 = load i32, i32* @ebp, align 4
  %v1_39164 = add i32 %v0_39164, -24
  %v2_39164 = inttoptr i32 %v1_39164 to i32*
  store i32 0, i32* %v2_39164, align 4
  %v0_3916b = load i32, i32* @ebp, align 4
  %v1_3916b = add i32 %v0_3916b, -20
  %v2_3916b = inttoptr i32 %v1_3916b to i32*
  store i32 0, i32* %v2_3916b, align 4
  %v0_391fd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_391fd

dec_label_pc_39177:                               ; preds = %dec_label_pc_391fd
  %v3_39177 = load i32, i32* %v2_391fd, align 4
  %v4_39177 = add i32 %v3_39177, 250000
  store i32 %v4_39177, i32* %v2_391fd, align 4
  %v0_3917e = load i32, i32* @ebp, align 4
  %v1_3917e = add i32 %v0_3917e, -20
  %v2_3917e = inttoptr i32 %v1_3917e to i32*
  %v3_3917e = load i32, i32* %v2_3917e, align 4
  %v2_39181 = add i32 %v0_3917e, -16
  %v3_39181 = inttoptr i32 %v2_39181 to i32*
  %v4_39181 = load i32, i32* %v3_39181, align 4
  %tmp9 = icmp ugt i32 %v3_3917e, %v4_39181
  br i1 %tmp9, label %dec_label_pc_39186, label %dec_label_pc_3918c

dec_label_pc_39186:                               ; preds = %dec_label_pc_39177
  store i32 %v4_39181, i32* %v2_3917e, align 4
  %v0_3918c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3918c

dec_label_pc_3918c:                               ; preds = %dec_label_pc_39177, %dec_label_pc_39186
  %v0_3918c = phi i32 [ %v0_3918c.pre, %dec_label_pc_39186 ], [ %v0_3917e, %dec_label_pc_39177 ]
  %v1_3918c = add i32 %v0_3918c, -44
  %v1_39192 = call i32 @unknown_4ba53(i32 %v1_3918c)
  %v0_39197 = load i32, i32* @ebp, align 4
  %v1_39197 = add i32 %v0_39197, -44
  %v1_3919e = add i32 %v0_39197, -20
  %v2_3919e = inttoptr i32 %v1_3919e to i32*
  %v3_3919e = load i32, i32* %v2_3919e, align 4
  %v1_391a5 = add i32 %v0_39197, -64
  %v2_391a5 = inttoptr i32 %v1_391a5 to i32*
  %v3_391a5 = load i32, i32* %v2_391a5, align 4
  %v3_391ab = call i32 @unknown_73599(i32 %v3_391a5, i32 %v3_3919e, i32 %v1_39197)
  %v0_391b0 = load i32, i32* @ebp, align 4
  %v1_391b0 = add i32 %v0_391b0, -44
  %v1_391b6 = call i32 @unknown_4bc49(i32 %v1_391b0)
  br label %dec_label_pc_391f0

dec_label_pc_391bd:                               ; preds = %dec_label_pc_391f0
  %v3_391bd = load i32, i32* %v2_391f0, align 4
  %v1_391c4 = add i32 %v0_391f0, -64
  %v2_391c4 = inttoptr i32 %v1_391c4 to i32*
  %v3_391c4 = load i32, i32* %v2_391c4, align 4
  %v2_391ca = call i32 @unknown_5256b(i32 %v3_391c4, i32 %v3_391bd)
  %v0_391cf = load i32, i32* @ebp, align 4
  %v1_391cf = add i32 %v0_391cf, -72
  %v2_391cf = inttoptr i32 %v1_391cf to i32*
  %v3_391cf = load i32, i32* %v2_391cf, align 4
  %v1_391d6 = add i32 %v0_391cf, -68
  %v2_391d6 = inttoptr i32 %v1_391d6 to i32*
  %v3_391d6 = load i32, i32* %v2_391d6, align 4
  %v1_391e1 = add i32 %v0_391cf, -60
  %v2_391e1 = inttoptr i32 %v1_391e1 to i32*
  %v3_391e1 = load i32, i32* %v2_391e1, align 4
  %v4_391e7 = call i32 @unknown_73666(i32 %v3_391e1, i32 %v2_391ca, i32 %v3_391d6, i32 %v3_391cf)
  %v0_391ec = load i32, i32* @ebp, align 4
  %v1_391ec = add i32 %v0_391ec, -24
  %v2_391ec = inttoptr i32 %v1_391ec to i32*
  %v3_391ec = load i32, i32* %v2_391ec, align 4
  %v4_391ec = add i32 %v3_391ec, 1
  store i32 %v4_391ec, i32* %v2_391ec, align 4
  br label %dec_label_pc_391f0

dec_label_pc_391f0:                               ; preds = %dec_label_pc_391bd, %dec_label_pc_3918c
  %v0_391f0 = load i32, i32* @ebp, align 4
  %v1_391f0 = add i32 %v0_391f0, -24
  %v2_391f0 = inttoptr i32 %v1_391f0 to i32*
  %v3_391f0 = load i32, i32* %v2_391f0, align 4
  %v2_391f3 = add i32 %v0_391f0, -20
  %v3_391f3 = inttoptr i32 %v2_391f3 to i32*
  %v4_391f3 = load i32, i32* %v3_391f3, align 4
  %v10_391f3 = icmp ult i32 %v3_391f0, %v4_391f3
  %v5_391f9 = icmp eq i1 %v10_391f3, false
  %v1_391fb = icmp eq i1 %v5_391f9, false
  br i1 %v1_391fb, label %dec_label_pc_391bd, label %dec_label_pc_391fd

dec_label_pc_391fd:                               ; preds = %dec_label_pc_391f0, %dec_label_pc_3914a
  %v18_39177 = phi i32 [ %v0_391fd.pre, %dec_label_pc_3914a ], [ %v0_391f0, %dec_label_pc_391f0 ]
  %v1_391fd = add i32 %v18_39177, -20
  %v2_391fd = inttoptr i32 %v1_391fd to i32*
  %v3_391fd = load i32, i32* %v2_391fd, align 4
  %v2_39200 = add i32 %v18_39177, -16
  %v3_39200 = inttoptr i32 %v2_39200 to i32*
  %v4_39200 = load i32, i32* %v3_39200, align 4
  %v10_39200 = icmp ult i32 %v3_391fd, %v4_39200
  %v5_39206 = icmp eq i1 %v10_39200, false
  %v1_39208 = icmp eq i1 %v5_39206, false
  br i1 %v1_39208, label %dec_label_pc_39177, label %dec_label_pc_3920e

dec_label_pc_3920e:                               ; preds = %dec_label_pc_391fd
  %v0_3920e = call i32 @function_39227()
  ret i32 %v0_3920e

; uselistorder directives
  uselistorder i32* %v2_391fd, { 2, 1, 0 }
  uselistorder i32 %v18_39177, { 1, 0 }
  uselistorder i32* %v2_391f0, { 1, 0 }
  uselistorder i32 %v0_391f0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_39181, { 1, 0 }
  uselistorder label %dec_label_pc_3918c, { 1, 0 }
}

define i32 @function_39211() local_unnamed_addr {
dec_label_pc_39211:
  %eax.global-to-local = alloca i32, align 4
  %v0_39211 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_39211
}

define i32 @function_3921a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3921a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3921a = load i32, i32* @eax, align 8
  %v1_3921a = trunc i32 %v0_3921a to i8
  %v4_3921a = load i8, i8* bitcast (i32* @ecx to i8*), align 8
  %v5_3921a = sub i8 %v1_3921a, %v4_3921a
  %v20_3921a = zext i8 %v5_3921a to i32
  %v22_3921a = and i32 %v0_3921a, -256
  %v23_3921a = or i32 %v20_3921a, %v22_3921a
  store i32 %v23_3921a, i32* %eax.global-to-local, align 8
  %v0_3921c = load i32, i32* @ecx, align 8
  %v1_3921c = add i32 %v0_3921c, 604277208
  %v2_3921c = inttoptr i32 %v1_3921c to i8*
  %v3_3921c = load i8, i8* %v2_3921c, align 1
  %v5_3921c = trunc i32 %v0_3921c to i8
  %v6_3921c = add i8 %v3_3921c, %v5_3921c
  store i8 %v6_3921c, i8* %v2_3921c, align 1
  %v24_3921c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v24_3921c
}

define i32 @function_39227() local_unnamed_addr {
dec_label_pc_39227:
  %v0_39227 = load i32, i32* @ebp, align 4
  %v1_39227 = add i32 %v0_39227, -12
  %v2_39227 = inttoptr i32 %v1_39227 to i32*
  %v3_39227 = load i32, i32* %v2_39227, align 4
  %v1_3922a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3922a = xor i32 %v1_3922a, %v3_39227
  %v3_3922a = icmp eq i32 %v2_3922a, 0
  store i32 %v2_3922a, i32* @eax, align 8
  br i1 %v3_3922a, label %bb, label %dec_label_pc_39233

bb:                                               ; preds = %dec_label_pc_39227
  %v1_39231 = call i32 @function_39238()
  br label %dec_label_pc_39233

dec_label_pc_39233:                               ; preds = %bb, %dec_label_pc_39227
  %v2_39231 = phi i32 [ %v1_39231, %bb ], [ %v2_3922a, %dec_label_pc_39227 ]
  ret i32 %v2_39231
}

define i32 @function_39238() local_unnamed_addr {
dec_label_pc_39238:
  %v0_3923d = load i32, i32* @eax, align 8
  ret i32 %v0_3923d
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclISsEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3923e:
  ret i32 %arg2
}

define i32 @function_39250(i32 %arg1) local_unnamed_addr {
dec_label_pc_39250:
  %v0_39250 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_39250
}

define i32 @function_39256(i32 %arg1) local_unnamed_addr {
dec_label_pc_39256:
  %v0_39256 = load i32, i32* @eax, align 8
  %v1_39256 = load i32, i32* @ebp, align 4
  %v2_39256 = add i32 %v1_39256, -12
  %v3_39256 = inttoptr i32 %v2_39256 to i32*
  store i32 %v0_39256, i32* %v3_39256, align 4
  store i32 0, i32* @eax, align 8
  %v0_39260 = load i32, i32* @ebp, align 4
  %v1_39260 = add i32 %v0_39260, -12
  %v2_39260 = inttoptr i32 %v1_39260 to i32*
  %v3_39260 = load i32, i32* %v2_39260, align 4
  %v1_39263 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_39263 = icmp eq i32 %v1_39263, %v3_39260
  br i1 %v3_39263, label %bb, label %dec_label_pc_3926c

bb:                                               ; preds = %dec_label_pc_39256
  %v1_3926a = call i32 @function_39271()
  br label %dec_label_pc_3926c

dec_label_pc_3926c:                               ; preds = %bb, %dec_label_pc_39256
  %v2_3926a = phi i32 [ %v1_3926a, %bb ], [ 0, %dec_label_pc_39256 ]
  ret i32 %v2_3926a
}

define i32 @function_3926e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3926e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39271() local_unnamed_addr {
dec_label_pc_39271:
  %v0_39272 = load i32, i32* @eax, align 8
  ret i32 %v0_39272
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKSt6vectorIN11json_spirit9Pair_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39274:
  %v2_3929a = load i32, i32* %arg1, align 4
  %v2_392a6 = call i32 @unknown_7381c(i32 %v2_3929a, i32 %arg2)
  store i32 %v2_392a6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_392b7

bb:                                               ; preds = %dec_label_pc_39274
  %v1_392b5 = call i32 @function_392bc()
  br label %dec_label_pc_392b7

dec_label_pc_392b7:                               ; preds = %bb, %dec_label_pc_39274
  %v2_392b5 = phi i32 [ %v1_392b5, %bb ], [ %v2_392a6, %dec_label_pc_39274 ]
  ret i32 %v2_392b5
}

define i32 @function_392bc() local_unnamed_addr {
dec_label_pc_392bc:
  %v0_392bd = load i32, i32* @eax, align 8
  ret i32 %v0_392bd
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_11get_visitorIKxEEE14internal_visitIKSt6vectorIN11json_spirit10Value_implINS9_13Config_vectorISsEEEESaISD_EEEEPS4_RT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_392be:
  %v2_392e4 = load i32, i32* %arg1, align 4
  %v2_392f0 = call i32 @unknown_7389c(i32 %v2_392e4, i32 %arg2)
  store i32 %v2_392f0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39301

bb:                                               ; preds = %dec_label_pc_392be
  %v1_392ff = call i32 @function_39306()
  br label %dec_label_pc_39301

dec_label_pc_39301:                               ; preds = %bb, %dec_label_pc_392be
  %v2_392ff = phi i32 [ %v1_392ff, %bb ], [ %v2_392f0, %dec_label_pc_392be ]
  ret i32 %v2_392ff
}

define i32 @function_39306() local_unnamed_addr {
dec_label_pc_39306:
  %v0_39307 = load i32, i32* @eax, align 8
  ret i32 %v0_39307
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclIbEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39308:
  ret i32 %arg2
}

define i32 @function_3931e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3931e:
  %v2_3931e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3931e = load i32, i32* @eax, align 8
  %v4_3931e = trunc i32 %v3_3931e to i8
  %v5_3931e = add i8 %v4_3931e, %v2_3931e
  %v21_3931e = inttoptr i32 %v3_3931e to i8*
  store i8 %v5_3931e, i8* %v21_3931e, align 1
  %v0_39320 = load i32, i32* @eax, align 8
  %v1_39320 = load i32, i32* @ebp, align 4
  %v2_39320 = add i32 %v1_39320, -12
  %v3_39320 = inttoptr i32 %v2_39320 to i32*
  store i32 %v0_39320, i32* %v3_39320, align 4
  store i32 0, i32* @eax, align 8
  %v0_3932a = load i32, i32* @ebp, align 4
  %v1_3932a = add i32 %v0_3932a, -12
  %v2_3932a = inttoptr i32 %v1_3932a to i32*
  %v3_3932a = load i32, i32* %v2_3932a, align 4
  %v1_3932d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3932d = icmp eq i32 %v1_3932d, %v3_3932a
  br i1 %v3_3932d, label %bb, label %dec_label_pc_39336

bb:                                               ; preds = %dec_label_pc_3931e
  %v1_39334 = call i32 @function_3933b()
  br label %dec_label_pc_39336

dec_label_pc_39336:                               ; preds = %bb, %dec_label_pc_3931e
  %v2_39334 = phi i32 [ %v1_39334, %bb ], [ 0, %dec_label_pc_3931e ]
  ret i32 %v2_39334
}

define i32 @function_3933b() local_unnamed_addr {
dec_label_pc_3933b:
  %v0_3933c = load i32, i32* @eax, align 8
  ret i32 %v0_3933c
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3933e:
  ret i32 %arg2
}

define i32 @function_39350(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39350:
  %v0_39350 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_39356 = load i32, i32* @ebp, align 4
  %v2_39356 = add i32 %v1_39356, -12
  %v3_39356 = inttoptr i32 %v2_39356 to i32*
  store i32 %v0_39350, i32* %v3_39356, align 4
  %v0_3935b = load i32, i32* @ebp, align 4
  %v1_3935b = add i32 %v0_3935b, -32
  %v2_3935b = inttoptr i32 %v1_3935b to i32*
  %v3_3935b = load i32, i32* %v2_3935b, align 4
  %v1_39361 = call i32 @unknown_73951(i32 %v3_3935b)
  store i32 %v1_39361, i32* @eax, align 8
  %v0_39366 = load i32, i32* @ebp, align 4
  %v1_39366 = add i32 %v0_39366, -12
  %v2_39366 = inttoptr i32 %v1_39366 to i32*
  %v3_39366 = load i32, i32* %v2_39366, align 4
  %v1_39369 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_39369 = icmp eq i32 %v1_39369, %v3_39366
  br i1 %v3_39369, label %bb, label %dec_label_pc_39372

bb:                                               ; preds = %dec_label_pc_39350
  %v1_39370 = call i32 @function_39377()
  br label %dec_label_pc_39372

dec_label_pc_39372:                               ; preds = %bb, %dec_label_pc_39350
  %v2_39370 = phi i32 [ %v1_39370, %bb ], [ %v1_39361, %dec_label_pc_39350 ]
  ret i32 %v2_39370
}

define i32 @function_39377() local_unnamed_addr {
dec_label_pc_39377:
  %v0_39378 = load i32, i32* @eax, align 8
  ret i32 %v0_39378
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclIdEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3937a:
  ret i32 0
}

define i32 @function_393a2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_393a2:
  %zf.global-to-local = alloca i1, align 1
  %v0_393a2 = load i32, i32* @eax, align 8
  %v1_393a2 = trunc i32 %v0_393a2 to i8
  %v2_393a2 = load i1, i1* @cf, align 1
  %v3_393a2 = zext i1 %v2_393a2 to i8
  %v4_393a2 = add i8 %v3_393a2, %v1_393a2
  %v13_393a2 = icmp eq i8 %v4_393a2, 0
  store i1 %v13_393a2, i1* %zf.global-to-local, align 1
  %v22_393a2 = zext i8 %v4_393a2 to i32
  %v24_393a2 = and i32 %v0_393a2, -256
  %v25_393a2 = or i32 %v22_393a2, %v24_393a2
  store i32 %v25_393a2, i32* @eax, align 8
  %v1_393a4 = inttoptr i32 %v25_393a2 to i8*
  %v2_393a4 = load i8, i8* %v1_393a4, align 1
  %v5_393a4 = add i8 %v2_393a4, %v4_393a2
  %v15_393a4 = icmp eq i8 %v5_393a4, 0
  store i1 %v15_393a4, i1* %zf.global-to-local, align 1
  store i8 %v5_393a4, i8* %v1_393a4, align 1
  %v0_393a6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_393a6, label %bb, label %dec_label_pc_393a2.dec_label_pc_393a8_crit_edge

dec_label_pc_393a2.dec_label_pc_393a8_crit_edge:  ; preds = %dec_label_pc_393a2
  %v2_393a6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_393a8

bb:                                               ; preds = %dec_label_pc_393a2
  %v1_393a6 = call i32 @function_393ad()
  br label %dec_label_pc_393a8

dec_label_pc_393a8:                               ; preds = %dec_label_pc_393a2.dec_label_pc_393a8_crit_edge, %bb
  %v2_393a6 = phi i32 [ %v2_393a6.pre, %dec_label_pc_393a2.dec_label_pc_393a8_crit_edge ], [ %v1_393a6, %bb ]
  ret i32 %v2_393a6

; uselistorder directives
  uselistorder label %dec_label_pc_393a8, { 1, 0 }
}

define i32 @function_393ad() local_unnamed_addr {
dec_label_pc_393ad:
  %v0_393ae = load i32, i32* @eax, align 8
  ret i32 %v0_393ae
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_393b0:
  ret i32 %arg2
}

define i32 @function_393c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_393c4:
  %eax.global-to-local = alloca i32, align 4
  %v0_393c4 = load i32, i32* @eax, align 8
  %v1_393c4 = trunc i32 %v0_393c4 to i8
  %v2_393c4 = load i1, i1* @cf, align 1
  %v3_393c4 = zext i1 %v2_393c4 to i8
  %v4_393c4 = add i8 %v3_393c4, %v1_393c4
  %v22_393c4 = zext i8 %v4_393c4 to i32
  %v24_393c4 = and i32 %v0_393c4, -256
  %v25_393c4 = or i32 %v22_393c4, %v24_393c4
  store i32 %v25_393c4, i32* %eax.global-to-local, align 8
  %v1_393c6 = inttoptr i32 %v25_393c4 to i8*
  %v2_393c6 = load i8, i8* %v1_393c6, align 1
  %v5_393c6 = add i8 %v2_393c6, %v4_393c4
  store i8 %v5_393c6, i8* %v1_393c6, align 1
  %v0_393c8 = load i32, i32* %eax.global-to-local, align 8
  %v1_393c8 = load i32, i32* @ebp, align 4
  %v2_393c8 = add i32 %v1_393c8, -12
  %v3_393c8 = inttoptr i32 %v2_393c8 to i32*
  store i32 %v0_393c8, i32* %v3_393c8, align 4
  store i32 0, i32* @eax, align 8
  %v0_393d2 = load i32, i32* @ebp, align 4
  %v1_393d2 = add i32 %v0_393d2, -12
  %v2_393d2 = inttoptr i32 %v1_393d2 to i32*
  %v3_393d2 = load i32, i32* %v2_393d2, align 4
  %v1_393d5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_393d5 = xor i32 %v1_393d5, %v3_393d2
  %v3_393d5 = icmp eq i32 %v2_393d5, 0
  store i32 %v2_393d5, i32* @edx, align 4
  br i1 %v3_393d5, label %bb, label %dec_label_pc_393de

bb:                                               ; preds = %dec_label_pc_393c4
  %v1_393dc = call i32 @function_393e3()
  store i32 %v1_393dc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_393de

dec_label_pc_393de:                               ; preds = %bb, %dec_label_pc_393c4
  %v2_393dc = phi i32 [ %v1_393dc, %bb ], [ 0, %dec_label_pc_393c4 ]
  ret i32 %v2_393dc
}

define i32 @function_393e3() local_unnamed_addr {
dec_label_pc_393e3:
  %v0_393e4 = load i32, i32* @eax, align 8
  ret i32 %v0_393e4
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKbEclISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_393e6:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39414

bb:                                               ; preds = %dec_label_pc_393e6
  %v3_39412 = call i32 @function_39419(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_39414

dec_label_pc_39414:                               ; preds = %bb, %dec_label_pc_393e6
  %v4_39412 = phi i32 [ %v3_39412, %bb ], [ 0, %dec_label_pc_393e6 ]
  ret i32 %v4_39412
}

define i32 @function_39419(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39419:
  %v0_3941a = load i32, i32* @eax, align 8
  ret i32 %v0_3941a
}

define i32 @_ZN5boost9addressofIKbEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3941b:
  %v0_39427 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_39427
}

define i32 @function_3942e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3942e:
  %v0_3942e = load i32, i32* @ebp, align 4
  %v1_3942e = add i32 %v0_3942e, 1
  store i32 %v1_3942e, i32* @ebp, align 4
  %v1_39432 = add i32 %v0_3942e, -27
  %v2_39432 = inttoptr i32 %v1_39432 to i32*
  %v3_39432 = load i32, i32* %v2_39432, align 4
  %v1_39439 = add i32 %v0_3942e, -15
  %v2_3943f = call i32 @unknown_73a85(i32 %v1_39439, i32 %v3_39432)
  %v0_39444 = load i32, i32* @ebp, align 4
  %v1_39444 = add i32 %v0_39444, -16
  %v1_3944a = call i32 @unknown_73abd(i32 %v1_39444)
  %v2_3945a = call i32 @unknown_73aec(i32 %v1_3944a, i32 0)
  ret i32 %v2_3945a

; uselistorder directives
  uselistorder i32 -15, { 0, 5, 6, 2, 11, 12, 9, 8, 3, 7, 1, 4, 10 }
}

define i32 @function_39464(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39464:
  %v0_39464 = load i32, i32* @eax, align 8
  %v1_39464 = load i1, i1* @cf, align 1
  %v2_39464 = zext i1 %v1_39464 to i32
  %v3_39464 = add i32 %v0_39464, 20
  %v4_39464 = add i32 %v3_39464, %v2_39464
  %v14_39464 = icmp eq i32 %v4_39464, 0
  store i32 %v4_39464, i32* @eax, align 8
  br i1 %v14_39464, label %bb, label %dec_label_pc_3946b

bb:                                               ; preds = %dec_label_pc_39464
  %v1_39469 = call i32 @function_39470()
  br label %dec_label_pc_3946b

dec_label_pc_3946b:                               ; preds = %bb, %dec_label_pc_39464
  %v2_39469 = phi i32 [ %v1_39469, %bb ], [ %v4_39464, %dec_label_pc_39464 ]
  ret i32 %v2_39469
}

define i32 @function_39470() local_unnamed_addr {
dec_label_pc_39470:
  %v0_39471 = load i32, i32* @eax, align 8
  ret i32 %v0_39471
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSsNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_39472:
  ret i32 0
}

define i32 @function_394aa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_394aa:
  %v0_394ac = load i32, i32* @ebp, align 4
  %v1_394ac = add i32 %v0_394ac, -40
  %v2_394ac = inttoptr i32 %v1_394ac to i32*
  %v3_394ac = load i32, i32* %v2_394ac, align 4
  ret i32 %v3_394ac
}

define i32 @function_394b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_394b8:
  %v0_394ba = load i32, i32* @ebp, align 4
  %v1_394ba = add i32 %v0_394ba, -32
  %v2_394ba = inttoptr i32 %v1_394ba to i32*
  %v3_394ba = load i32, i32* %v2_394ba, align 4
  %v1_394c1 = add i32 %v0_394ba, -28
  %v2_394c1 = inttoptr i32 %v1_394c1 to i32*
  %v3_394c1 = load i32, i32* %v2_394c1, align 4
  %v2_394c7 = call i32 @unknown_73b76(i32 %v3_394c1, i32 %v3_394ba)
  store i32 %v2_394c7, i32* @eax, align 8
  %v0_394cc = load i32, i32* @ebp, align 4
  %v1_394cc = add i32 %v0_394cc, -12
  %v2_394cc = inttoptr i32 %v1_394cc to i32*
  %v3_394cc = load i32, i32* %v2_394cc, align 4
  %v1_394cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_394cf = xor i32 %v1_394cf, %v3_394cc
  %v3_394cf = icmp eq i32 %v2_394cf, 0
  store i32 %v2_394cf, i32* @edx, align 4
  br i1 %v3_394cf, label %bb, label %dec_label_pc_394d8

bb:                                               ; preds = %dec_label_pc_394b8
  %v1_394d6 = call i32 @function_394dd()
  br label %dec_label_pc_394d8

dec_label_pc_394d8:                               ; preds = %bb, %dec_label_pc_394b8
  %v2_394d6 = phi i32 [ %v1_394d6, %bb ], [ %v2_394c7, %dec_label_pc_394b8 ]
  ret i32 %v2_394d6
}

define i32 @function_394dd() local_unnamed_addr {
dec_label_pc_394dd:
  %v0_394de = load i32, i32* @eax, align 8
  ret i32 %v0_394de
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSD_NSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_394df:
  %v0_3950a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3950a
}

define i32 @function_39514(i32 %arg1) local_unnamed_addr {
dec_label_pc_39514:
  %v0_39514 = load i32, i32* @eax, align 8
  %v1_39514 = add i32 %v0_39514, -1961876396
  %v2_39514 = inttoptr i32 %v1_39514 to i8*
  %v3_39514 = load i8, i8* %v2_39514, align 1
  %v4_39514 = udiv i8 %v3_39514, 32
  %v5_39514 = mul i8 %v3_39514, 8
  %v6_39514 = or i8 %v4_39514, %v5_39514
  store i8 %v6_39514, i8* %v2_39514, align 1
  %v0_39521 = load i32, i32* @ebp, align 4
  %v1_39528 = add i32 %v0_39521, 2
  store i32 %v1_39528, i32* @ebp, align 4
  %v1_3952e = add i32 %v0_39521, -26
  %v2_3952e = inttoptr i32 %v1_3952e to i32*
  %v3_3952e = load i32, i32* %v2_3952e, align 4
  %v1_39534 = call i32 @unknown_73c48(i32 %v3_3952e)
  store i32 %v1_39534, i32* @eax, align 8
  %v0_39539 = load i32, i32* @ebp, align 4
  %v1_39539 = add i32 %v0_39539, -12
  %v2_39539 = inttoptr i32 %v1_39539 to i32*
  %v3_39539 = load i32, i32* %v2_39539, align 4
  %v1_3953c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3953c = icmp eq i32 %v1_3953c, %v3_39539
  br i1 %v3_3953c, label %bb, label %dec_label_pc_39545

bb:                                               ; preds = %dec_label_pc_39514
  %v1_39543 = call i32 @function_3954a()
  br label %dec_label_pc_39545

dec_label_pc_39545:                               ; preds = %bb, %dec_label_pc_39514
  %v3_39543 = phi i32 [ %v1_39543, %bb ], [ %v1_39534, %dec_label_pc_39514 ]
  ret i32 %v3_39543

; uselistorder directives
  uselistorder i32 -1961876396, { 1, 0 }
}

define i32 @function_3954a() local_unnamed_addr {
dec_label_pc_3954a:
  %v0_3954b = load i32, i32* @eax, align 8
  ret i32 %v0_3954b
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSI_NSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_3954c:
  %edx.global-to-local = alloca i32, align 4
  %v0_39582 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_39582, 16777216
  %v5_395a1 = sdiv i32 %sext, 16777216
  %v6_395a1 = call i32 @unknown_73d1a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_395a1)
  store i32 %v6_395a1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_395b2

bb:                                               ; preds = %dec_label_pc_3954c
  %v1_395b0 = call i32 @function_395b7()
  br label %dec_label_pc_395b2

dec_label_pc_395b2:                               ; preds = %bb, %dec_label_pc_3954c
  %v2_395b0 = phi i32 [ %v1_395b0, %bb ], [ %v6_395a1, %dec_label_pc_3954c ]
  ret i32 %v2_395b0
}

define i32 @function_395b7() local_unnamed_addr {
dec_label_pc_395b7:
  %v0_395b8 = load i32, i32* @eax, align 8
  ret i32 %v0_395b8
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvbNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_395b9:
  %edx.global-to-local = alloca i32, align 4
  %v0_395e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_395ef = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_395ef, 16777216
  %v5_3960e = sdiv i32 %sext, 16777216
  %v6_3960e = call i32 @unknown_73dec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_3960e)
  store i32 %v0_395e4, i32* %edx.global-to-local, align 4
  ret i32 %v6_3960e
}

define i32 @function_3961a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3961a:
  %v2_3961a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3961a = load i32, i32* @eax, align 8
  %v4_3961a = trunc i32 %v3_3961a to i8
  %v5_3961a = add i8 %v4_3961a, %v2_3961a
  %v21_3961a = inttoptr i32 %v3_3961a to i8*
  store i8 %v5_3961a, i8* %v21_3961a, align 1
  %v0_3961c = load i32, i32* @ebp, align 4
  %v1_3961c = load i32, i32* @eax, align 8
  %v3_3961c = add i32 %v0_3961c, -24
  %v4_3961c = add i32 %v3_3961c, %v1_3961c
  %v5_3961c = inttoptr i32 %v4_3961c to i8*
  %v6_3961c = load i8, i8* %v5_3961c, align 1
  %v7_3961c = load i32, i32* @edx, align 4
  %v8_3961c = udiv i32 %v7_3961c, 256
  %v9_3961c = trunc i32 %v8_3961c to i8
  %v10_3961c = add i8 %v9_3961c, %v6_3961c
  %v11_3961c = urem i8 %v6_3961c, 16
  %v12_3961c = urem i8 %v9_3961c, 16
  %v13_3961c = add nuw nsw i8 %v12_3961c, %v11_3961c
  %v14_3961c = icmp ugt i8 %v13_3961c, 15
  %v15_3961c = icmp ult i8 %v10_3961c, %v6_3961c
  %v16_3961c = xor i8 %v10_3961c, %v6_3961c
  %v17_3961c = xor i8 %v10_3961c, %v9_3961c
  %v18_3961c = and i8 %v16_3961c, %v17_3961c
  %v19_3961c = icmp slt i8 %v18_3961c, 0
  store i1 %v14_3961c, i1* @az, align 1
  store i1 %v15_3961c, i1* @cf, align 1
  store i1 %v19_3961c, i1* @of, align 1
  %v20_3961c = icmp eq i8 %v10_3961c, 0
  store i1 %v20_3961c, i1* @zf, align 1
  %v21_3961c = icmp slt i8 %v10_3961c, 0
  store i1 %v21_3961c, i1* @sf, align 1
  %v22_3961c = call i8 @llvm.ctpop.i8(i8 %v10_3961c)
  %v23_3961c = urem i8 %v22_3961c, 2
  %v24_3961c = icmp eq i8 %v23_3961c, 0
  store i1 %v24_3961c, i1* @pf, align 1
  store i8 %v10_3961c, i8* %v5_3961c, align 1
  %v31_3961c = load i32, i32* @eax, align 8
  ret i32 %v31_3961c

; uselistorder directives
  uselistorder i8 %v10_3961c, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i8 %v9_3961c, { 1, 0, 2 }
  uselistorder i8 %v6_3961c, { 1, 3, 0, 2 }
  uselistorder i8 15, { 1, 0 }
}

define i32 @function_39623() local_unnamed_addr {
dec_label_pc_39623:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_39623 = load i32, i32* %ecx.global-to-local, align 8
  %v1_39623 = add i32 %v0_39623, -1
  store i32 %v1_39623, i32* %ecx.global-to-local, align 8
  %v0_39625 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_39625
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvxNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_39626:
  %edx.global-to-local = alloca i32, align 4
  %v0_3965c = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_3965c, 16777216
  %v5_3967b = sdiv i32 %sext, 16777216
  %v6_3967b = call i32 @unknown_73ebe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_3967b)
  store i32 %v6_3967b, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_3968c

bb:                                               ; preds = %dec_label_pc_39626
  %v1_3968a = call i32 @function_39691()
  br label %dec_label_pc_3968c

dec_label_pc_3968c:                               ; preds = %bb, %dec_label_pc_39626
  %v2_3968a = phi i32 [ %v1_3968a, %bb ], [ %v6_3967b, %dec_label_pc_39626 ]
  ret i32 %v2_3968a
}

define i32 @function_39691() local_unnamed_addr {
dec_label_pc_39691:
  %v0_39692 = load i32, i32* @eax, align 8
  ret i32 %v0_39692
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvdNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_39693:
  %edx.global-to-local = alloca i32, align 4
  %v0_396c9 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_396c9, 16777216
  %v5_396e8 = sdiv i32 %sext, 16777216
  %v6_396e8 = call i32 @unknown_73f90(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_396e8)
  store i32 0, i32* %edx.global-to-local, align 4
  ret i32 %v6_396e8
}

define i32 @function_396fd() local_unnamed_addr {
dec_label_pc_396fd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_396fd = load i32, i32* %ecx.global-to-local, align 8
  %v1_396fd = add i32 %v0_396fd, -1
  store i32 %v1_396fd, i32* %ecx.global-to-local, align 8
  %v0_396ff = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_396ff
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvNSK_18has_fallback_type_EEENT_11result_typeEiRSO_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_39700:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINSF_13Config_vectorISsEEEESaISJ_EEEENSD_ISE_INSF_10Value_implISI_EESaISO_EEEEbxdNS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E17convert_copy_intoEPvNST_18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb1EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_3975a:
  %eax.global-to-local = alloca i32, align 4
  %v17_3975d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3975d
}

define i32 @function_39762(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39762:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_39762 = load i32, i32* @ecx, align 8
  %v1_39762 = add i32 %v0_39762, 1166795845
  %v2_39762 = inttoptr i32 %v1_39762 to i8*
  %v3_39762 = load i8, i8* %v2_39762, align 1
  %v5_39762 = trunc i32 %v0_39762 to i8
  %v6_39762 = or i8 %v3_39762, %v5_39762
  store i8 %v6_39762, i8* %v2_39762, align 1
  %v0_39768 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_39768 = or i32 %v0_39768, 137
  store i32 %v11_39768, i32* %eax.global-to-local, align 8
  %v0_3976a = load i32, i32* @ebp, align 4
  %v0_3976b = load i32, i32* @ecx, align 8
  %v1_3976b = add i32 %v0_3976b, -1
  store i32 %v1_3976b, i32* @ecx, align 8
  %v1_3976d = add i32 %v0_3976a, 2
  store i32 %v1_3976d, i32* %ebp.global-to-local, align 4
  %v1_3976e = add i32 %v0_3976b, 1166793796
  %v2_3976e = inttoptr i32 %v1_3976e to i8*
  %v3_3976e = load i8, i8* %v2_3976e, align 1
  %v5_3976e = trunc i32 %v1_3976b to i8
  %v8_3976e = add i8 %v3_3976e, %v5_3976e
  %v28_3976e = icmp ult i8 %v8_3976e, %v3_3976e
  store i1 %v28_3976e, i1* %cf.global-to-local, align 1
  store i8 %v8_3976e, i8* %v2_3976e, align 1
  %v0_39774 = load i32, i32* %eax.global-to-local, align 8
  %v1_39774 = trunc i32 %v0_39774 to i8
  %v2_39774 = load i1, i1* %cf.global-to-local, align 1
  %v3_39774 = zext i1 %v2_39774 to i8
  %v4_39774 = add i8 %v1_39774, -119
  %v5_39774 = add i8 %v4_39774, %v3_39774
  %v22_39774 = icmp ule i8 %v5_39774, %v1_39774
  %v23_39774 = icmp ugt i8 %v1_39774, 118
  %v24_39774 = select i1 %v2_39774, i1 %v22_39774, i1 %v23_39774
  store i1 %v24_39774, i1* %cf.global-to-local, align 1
  %v25_39774 = zext i8 %v5_39774 to i32
  %v27_39774 = and i32 %v0_39774, -256
  %v28_39774 = or i32 %v25_39774, %v27_39774
  store i32 %v28_39774, i32* %eax.global-to-local, align 8
  %v0_39776 = load i32, i32* %ebp.global-to-local, align 4
  %v1_39776 = add i32 %v0_39776, 1
  store i32 %v1_39776, i32* %ebp.global-to-local, align 4
  %v1_3977b = add i32 %v28_39774, -1240475835
  %v2_3977b = inttoptr i32 %v1_3977b to i8*
  %v3_3977b = load i8, i8* %v2_3977b, align 1
  %v4_3977b = load i32, i32* @ecx, align 8
  %v5_3977b = trunc i32 %v4_3977b to i8
  %v7_3977b = zext i1 %v24_39774 to i8
  %v8_3977b = sub i8 %v3_3977b, %v5_3977b
  %v9_3977b = add i8 %v8_3977b, %v7_3977b
  %v19_3977b = sub i8 %v8_3977b, %v7_3977b
  %v20_3977b = icmp ult i8 %v3_3977b, %v19_3977b
  %v21_3977b = icmp ne i8 %v5_3977b, -1
  %v22_3977b = or i1 %v21_3977b, %v20_3977b
  %v23_3977b = icmp ult i8 %v3_3977b, %v5_3977b
  %v24_3977b = select i1 %v24_39774, i1 %v22_3977b, i1 %v23_3977b
  store i1 %v24_3977b, i1* %cf.global-to-local, align 1
  store i8 %v9_3977b, i8* %v2_3977b, align 1
  %v0_39781 = load i32, i32* %ebp.global-to-local, align 4
  %v0_39782 = load i32, i32* %eax.global-to-local, align 8
  %v1_39782 = trunc i32 %v0_39782 to i8
  %v2_39782 = load i1, i1* %cf.global-to-local, align 1
  %v17_39782 = icmp ult i8 %v1_39782, -120
  %v18_39782 = or i1 %v2_39782, %v17_39782
  %v1_39784 = add i32 %v0_39781, 2
  store i32 %v1_39784, i32* @ebp, align 4
  %v3_39785 = select i1 %v18_39782, i32 255, i32 0
  %v5_39785 = and i32 %v0_39782, -256
  %v6_39785 = or i32 %v3_39785, %v5_39785
  store i32 %v6_39785, i32* %eax.global-to-local, align 8
  %v1_39786 = add i32 %v0_39781, 34
  %v2_39786 = inttoptr i32 %v1_39786 to i32*
  %v3_39786 = load i32, i32* %v2_39786, align 4
  store i32 %v3_39786, i32* %eax.global-to-local, align 8
  %v2_39789 = add i32 %v0_39781, -46
  %v3_39789 = inttoptr i32 %v2_39789 to i32*
  store i32 %v3_39786, i32* %v3_39789, align 4
  %v0_3978c = load i32, i32* @ebp, align 4
  %v1_3978c = add i32 %v0_3978c, 36
  %v2_3978c = inttoptr i32 %v1_3978c to i32*
  %v3_3978c = load i32, i32* %v2_3978c, align 4
  store i32 %v3_3978c, i32* %eax.global-to-local, align 8
  %v2_3978f = add i32 %v0_3978c, -52
  %v3_3978f = inttoptr i32 %v2_3978f to i32*
  store i32 %v3_3978c, i32* %v3_3978f, align 4
  %v0_39792 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_39798 = load i32, i32* @ebp, align 4
  %v2_39798 = add i32 %v1_39798, -12
  %v3_39798 = inttoptr i32 %v2_39798 to i32*
  store i32 %v0_39792, i32* %v3_39798, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v8_3977b, { 1, 0 }
  uselistorder i8 %v7_3977b, { 1, 0 }
  uselistorder i8 %v5_3977b, { 1, 0, 2 }
  uselistorder i1 %v24_39774, { 1, 0, 2 }
  uselistorder i8 %v5_39774, { 1, 0 }
  uselistorder i8 %v3_3976e, { 1, 0 }
  uselistorder i32 -1240475835, { 1, 0 }
}

define i32 @function_397b2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_397b2:
  %v3_397b4 = load i32, i32* @eax, align 8
  %v2_397b6 = add i32 %v3_397b4, 36
  %v2_397bb = load i32, i32* @ecx, align 8
  %v3_397bb = udiv i32 %v2_397bb, 256
  %v5_397bb = add i32 %v3_397bb, %v2_397b6
  %v20_397bb = and i32 %v5_397bb, 255
  %v22_397bb = and i32 %v3_397b4, -256
  %v23_397bb = or i32 %v20_397bb, %v22_397bb
  ret i32 %v23_397bb

; uselistorder directives
  uselistorder i32 %v3_397b4, { 1, 0 }
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitISsEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_397c2:
  ret i32 %arg2
}

define i32 @function_39801(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39801:
  %zf.global-to-local = alloca i1, align 1
  %v2_39801 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_39801 = load i32, i32* @eax, align 8
  %v4_39801 = trunc i32 %v3_39801 to i8
  %v5_39801 = add i8 %v4_39801, %v2_39801
  %v15_39801 = icmp eq i8 %v5_39801, 0
  store i1 %v15_39801, i1* %zf.global-to-local, align 1
  %v21_39801 = inttoptr i32 %v3_39801 to i8*
  store i8 %v5_39801, i8* %v21_39801, align 1
  %v0_39803 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_39803, label %bb, label %dec_label_pc_39801.dec_label_pc_39805_crit_edge

dec_label_pc_39801.dec_label_pc_39805_crit_edge:  ; preds = %dec_label_pc_39801
  %v2_39803.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_39805

bb:                                               ; preds = %dec_label_pc_39801
  %v1_39803 = call i32 @function_3980a()
  br label %dec_label_pc_39805

dec_label_pc_39805:                               ; preds = %dec_label_pc_39801.dec_label_pc_39805_crit_edge, %bb
  %v2_39803 = phi i32 [ %v2_39803.pre, %dec_label_pc_39801.dec_label_pc_39805_crit_edge ], [ %v1_39803, %bb ]
  ret i32 %v2_39803

; uselistorder directives
  uselistorder label %dec_label_pc_39805, { 1, 0 }
}

define i32 @function_3980a() local_unnamed_addr {
dec_label_pc_3980a:
  %v0_3980b = load i32, i32* @eax, align 8
  ret i32 %v0_3980b
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3980c:
  ret i32 %arg2
}

define i32 @function_3981e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3981e:
  %v0_3981e = load i32, i32* @ebp, align 4
  %v1_3981e = add i32 %v0_3981e, 16
  %v2_3981e = inttoptr i32 %v1_3981e to i32*
  %v3_3981e = load i32, i32* %v2_3981e, align 4
  %v2_39821 = add i32 %v0_3981e, -36
  %v3_39821 = inttoptr i32 %v2_39821 to i32*
  store i32 %v3_3981e, i32* %v3_39821, align 4
  %v0_39824 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3982a = load i32, i32* @ebp, align 4
  %v2_3982a = add i32 %v1_3982a, -12
  %v3_3982a = inttoptr i32 %v2_3982a to i32*
  store i32 %v0_39824, i32* %v3_3982a, align 4
  %v0_3982f = load i32, i32* @ebp, align 4
  %v1_3982f = add i32 %v0_3982f, -28
  %v2_3982f = inttoptr i32 %v1_3982f to i32*
  %v3_3982f = load i32, i32* %v2_3982f, align 4
  %v1_39832 = inttoptr i32 %v3_3982f to i32*
  %v2_39832 = load i32, i32* %v1_39832, align 4
  %v1_39838 = add i32 %v0_3982f, -32
  %v2_39838 = inttoptr i32 %v1_39838 to i32*
  %v3_39838 = load i32, i32* %v2_39838, align 4
  %v2_3983e = call i32 @unknown_7416e(i32 %v3_39838, i32 %v2_39832)
  %v0_39843 = load i32, i32* @ebp, align 4
  %v1_39843 = add i32 %v0_39843, -12
  %v2_39843 = inttoptr i32 %v1_39843 to i32*
  %v3_39843 = load i32, i32* %v2_39843, align 4
  %v1_39846 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_39846 = xor i32 %v1_39846, %v3_39843
  %v3_39846 = icmp eq i32 %v2_39846, 0
  store i32 %v2_39846, i32* @eax, align 8
  br i1 %v3_39846, label %bb, label %dec_label_pc_3984f

bb:                                               ; preds = %dec_label_pc_3981e
  %v1_3984d = call i32 @function_39854()
  br label %dec_label_pc_3984f

dec_label_pc_3984f:                               ; preds = %bb, %dec_label_pc_3981e
  %v2_3984d = phi i32 [ %v1_3984d, %bb ], [ %v2_39846, %dec_label_pc_3981e ]
  ret i32 %v2_3984d
}

define i32 @function_39854() local_unnamed_addr {
dec_label_pc_39854:
  %v0_39855 = load i32, i32* @eax, align 8
  ret i32 %v0_39855
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitINS_17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS6_13Config_vectorISsEEEESaISA_EEEEEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39856:
  %v2_3987c = load i32, i32* %arg1, align 4
  %v2_39888 = call i32 @unknown_74206(i32 %arg2, i32 %v2_3987c)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39899

bb:                                               ; preds = %dec_label_pc_39856
  %v1_39897 = call i32 @function_3989e()
  br label %dec_label_pc_39899

dec_label_pc_39899:                               ; preds = %bb, %dec_label_pc_39856
  %v2_39897 = phi i32 [ %v1_39897, %bb ], [ 0, %dec_label_pc_39856 ]
  ret i32 %v2_39897
}

define i32 @function_3989c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3989c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3989e() local_unnamed_addr {
dec_label_pc_3989e:
  %v0_3989f = load i32, i32* @eax, align 8
  ret i32 %v0_3989f
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitIbEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_398a0:
  %tmp106 = inttoptr i32 %arg2 to i8*
  %v2_398c6 = load i32, i32* %arg1, align 4
  %v1_398c8 = inttoptr i32 %v2_398c6 to i8*
  %v2_398c8 = load i8, i8* %v1_398c8, align 1
  store i8 %v2_398c8, i8* %tmp106, align 1
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_398dc

bb:                                               ; preds = %dec_label_pc_398a0
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v5_398da = call i32 @function_398e1(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_398dc

dec_label_pc_398dc:                               ; preds = %bb, %dec_label_pc_398a0
  %v6_398da = phi i32 [ %v5_398da, %bb ], [ 0, %dec_label_pc_398a0 ]
  ret i32 %v6_398da

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_398e1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_398e1:
  %v0_398e2 = load i32, i32* @eax, align 8
  ret i32 %v0_398e2
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitIxEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_398e4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* %eax.global-to-local, align 8
  %v2_3990a = load i32, i32* %arg1, align 4
  store i32 %v2_3990a, i32* %eax.global-to-local, align 8
  %v1_3990c = add i32 %v2_3990a, 4
  %v2_3990c = inttoptr i32 %v1_3990c to i32*
  %v3_3990c = load i32, i32* %v2_3990c, align 4
  store i32 %v3_3990c, i32* %edx.global-to-local, align 4
  %v1_3990f = inttoptr i32 %v2_3990a to i32*
  %v2_3990f = load i32, i32* %v1_3990f, align 4
  store i32 %v2_3990f, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %ecx.global-to-local, align 8
  %v2_39914 = inttoptr i32 %arg2 to i32*
  store i32 %v2_3990f, i32* %v2_39914, align 4
  %v0_39916 = load i32, i32* %edx.global-to-local, align 4
  %v1_39916 = load i32, i32* %ecx.global-to-local, align 8
  %v2_39916 = add i32 %v1_39916, 4
  %v3_39916 = inttoptr i32 %v2_39916 to i32*
  store i32 %v0_39916, i32* %v3_39916, align 4
  %v4_39916 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_39916

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_3991a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3991a:
  %v0_3991a = load i32, i32* @ebp, align 4
  %v1_3991a = add i32 %v0_3991a, 1
  store i32 %v1_3991a, i32* @ebp, align 4
  %v0_3991c = load i32, i32* @eax, align 8
  %v1_3991c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3991c = xor i32 %v1_3991c, %v0_3991c
  %v3_3991c = icmp eq i32 %v2_3991c, 0
  store i32 %v2_3991c, i32* @eax, align 8
  br i1 %v3_3991c, label %bb, label %dec_label_pc_39925

bb:                                               ; preds = %dec_label_pc_3991a
  %v1_39923 = call i32 @function_3992a()
  br label %dec_label_pc_39925

dec_label_pc_39925:                               ; preds = %bb, %dec_label_pc_3991a
  %v2_39923 = phi i32 [ %v1_39923, %bb ], [ %v2_3991c, %dec_label_pc_3991a ]
  ret i32 %v2_39923
}

define i32 @function_3992a() local_unnamed_addr {
dec_label_pc_3992a:
  %v0_3992b = load i32, i32* @eax, align 8
  ret i32 %v0_3992b
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitIdEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3992c:
  %tmp106 = inttoptr i32 %arg2 to double*
  %v2_39952 = load i32, i32* %arg1, align 4
  %v1_39954 = inttoptr i32 %v2_39952 to double*
  %v2_39954 = load double, double* %v1_39954, align 4
  store double %v2_39954, double* %tmp106, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39967

bb:                                               ; preds = %dec_label_pc_3992c
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v5_39965 = call i32 @function_3996c(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_39967

dec_label_pc_39967:                               ; preds = %bb, %dec_label_pc_3992c
  %v6_39965 = phi i32 [ %v5_39965, %bb ], [ 0, %dec_label_pc_3992c ]
  ret i32 %v6_39965

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3996c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3996c:
  %v0_3996d = load i32, i32* @eax, align 8
  ret i32 %v0_3996d
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitISsEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3996e:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_39971 = load i32, i32* %ebx.global-to-local, align 4
  %v0_39996 = load i32, i32* %ecx.global-to-local, align 8
  %v0_3999a = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_3999a, 16777216
  %v5_399ab = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_39996, 16777216
  %v6_399ab = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_39971, 16777216
  %v7_399ab = sdiv i32 %sext2, 16777216
  %v8_399ab = call i32 @unknown_7436c(i32 %arg1, i32 %arg2, i32 %v5_399ab, i32 %v6_399ab, i32 %v7_399ab)
  ret i32 0
}

define i32 @function_399bb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_399bb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_399c0() local_unnamed_addr {
dec_label_pc_399c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_399c0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_399c0 = add i32 %v0_399c0, 1566262468
  %v2_399c0 = inttoptr i32 %v1_399c0 to i32*
  %v3_399c0 = load i32, i32* %v2_399c0, align 4
  %v4_399c0 = add i32 %v3_399c0, 1
  store i32 %v4_399c0, i32* %v2_399c0, align 4
  %v0_399c6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_399c6
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitISA_EEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_399c8:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_399cb = load i32, i32* %ebx.global-to-local, align 4
  %v0_399f0 = load i32, i32* %ecx.global-to-local, align 8
  %v0_399f4 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_399f4, 16777216
  %v5_39a05 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_399f0, 16777216
  %v6_39a05 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_399cb, 16777216
  %v7_39a05 = sdiv i32 %sext2, 16777216
  %v8_39a05 = call i32 @unknown_744d4(i32 %arg1, i32 %arg2, i32 %v5_39a05, i32 %v6_39a05, i32 %v7_39a05)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39a16

bb:                                               ; preds = %dec_label_pc_399c8
  %v1_39a14 = call i32 @function_39a1b()
  br label %dec_label_pc_39a16

dec_label_pc_39a16:                               ; preds = %bb, %dec_label_pc_399c8
  %v2_39a14 = phi i32 [ %v1_39a14, %bb ], [ 0, %dec_label_pc_399c8 ]
  ret i32 %v2_39a14
}

define i32 @function_39a1b() local_unnamed_addr {
dec_label_pc_39a1b:
  %v0_39a20 = load i32, i32* @eax, align 8
  ret i32 %v0_39a20
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitISF_EEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39a22:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_39a25 = load i32, i32* %ebx.global-to-local, align 4
  %v0_39a4a = load i32, i32* %ecx.global-to-local, align 8
  %v0_39a4e = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_39a4e, 16777216
  %v5_39a5f = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_39a4a, 16777216
  %v6_39a5f = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_39a25, 16777216
  %v7_39a5f = sdiv i32 %sext2, 16777216
  %v8_39a5f = call i32 @unknown_7463c(i32 %arg1, i32 %arg2, i32 %v5_39a5f, i32 %v6_39a5f, i32 %v7_39a5f)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39a70

bb:                                               ; preds = %dec_label_pc_39a22
  %v1_39a6e = call i32 @function_39a75()
  br label %dec_label_pc_39a70

dec_label_pc_39a70:                               ; preds = %bb, %dec_label_pc_39a22
  %v2_39a6e = phi i32 [ %v1_39a6e, %bb ], [ 0, %dec_label_pc_39a22 ]
  ret i32 %v2_39a6e
}

define i32 @function_39a72(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39a72:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39a75() local_unnamed_addr {
dec_label_pc_39a75:
  %v0_39a7a = load i32, i32* @eax, align 8
  ret i32 %v0_39a7a
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitIbEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39a7c:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_39a7f = load i32, i32* %ebx.global-to-local, align 4
  %v0_39aa4 = load i32, i32* %ecx.global-to-local, align 8
  %v0_39aa8 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_39aa8, 16777216
  %v5_39ab9 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_39aa4, 16777216
  %v6_39ab9 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_39a7f, 16777216
  %v7_39ab9 = sdiv i32 %sext2, 16777216
  %v8_39ab9 = call i32 @unknown_747a4(i32 %arg1, i32 %arg2, i32 %v5_39ab9, i32 %v6_39ab9, i32 %v7_39ab9)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39aca

bb:                                               ; preds = %dec_label_pc_39a7c
  %v1_39ac8 = call i32 @function_39acf()
  br label %dec_label_pc_39aca

dec_label_pc_39aca:                               ; preds = %bb, %dec_label_pc_39a7c
  %v2_39ac8 = phi i32 [ %v1_39ac8, %bb ], [ 0, %dec_label_pc_39a7c ]
  ret i32 %v2_39ac8
}

define i32 @function_39acf() local_unnamed_addr {
dec_label_pc_39acf:
  %v0_39ad4 = load i32, i32* @eax, align 8
  ret i32 %v0_39ad4
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitIxEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39ad6:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_39ad9 = load i32, i32* %ebx.global-to-local, align 4
  %v0_39afe = load i32, i32* %ecx.global-to-local, align 8
  %v0_39b02 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_39b02, 16777216
  %v5_39b13 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_39afe, 16777216
  %v6_39b13 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_39ad9, 16777216
  %v7_39b13 = sdiv i32 %sext2, 16777216
  %v8_39b13 = call i32 @unknown_74894(i32 %arg1, i32 %arg2, i32 %v5_39b13, i32 %v6_39b13, i32 %v7_39b13)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39b24

bb:                                               ; preds = %dec_label_pc_39ad6
  %v1_39b22 = call i32 @function_39b29()
  br label %dec_label_pc_39b24

dec_label_pc_39b24:                               ; preds = %bb, %dec_label_pc_39ad6
  %v2_39b22 = phi i32 [ %v1_39b22, %bb ], [ 0, %dec_label_pc_39ad6 ]
  ret i32 %v2_39b22
}

define i32 @function_39b29() local_unnamed_addr {
dec_label_pc_39b29:
  %v0_39b2e = load i32, i32* @eax, align 8
  ret i32 %v0_39b2e
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner14internal_visitIdEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39b30:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_39b33 = load i32, i32* %ebx.global-to-local, align 4
  %v0_39b58 = load i32, i32* %ecx.global-to-local, align 8
  %v0_39b5c = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_39b5c, 16777216
  %v5_39b6d = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_39b58, 16777216
  %v6_39b6d = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_39b33, 16777216
  %v7_39b6d = sdiv i32 %sext2, 16777216
  %v8_39b6d = call i32 @unknown_7498a(i32 %arg1, i32 %arg2, i32 %v5_39b6d, i32 %v6_39b6d, i32 %v7_39b6d)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39b7e

bb:                                               ; preds = %dec_label_pc_39b30
  %v1_39b7c = call i32 @function_39b83()
  br label %dec_label_pc_39b7e

dec_label_pc_39b7e:                               ; preds = %bb, %dec_label_pc_39b30
  %v2_39b7c = phi i32 [ %v1_39b7c, %bb ], [ 0, %dec_label_pc_39b30 ]
  ret i32 %v2_39b7c
}

define i32 @function_39b83() local_unnamed_addr {
dec_label_pc_39b83:
  %v0_39b88 = load i32, i32* @eax, align 8
  ret i32 %v0_39b88
}

define i32 @_ZN5boost6detail13addr_impl_refIKSsEC1ERS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39b8a:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39bbb

bb:                                               ; preds = %dec_label_pc_39b8a
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_39bb9 = call i32 @function_39bc0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_39bbb

dec_label_pc_39bbb:                               ; preds = %bb, %dec_label_pc_39b8a
  %v4_39bb9 = phi i32 [ %v3_39bb9, %bb ], [ 0, %dec_label_pc_39b8a ]
  ret i32 %v4_39bb9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_39bc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39bc0:
  %v0_39bc1 = load i32, i32* @eax, align 8
  ret i32 %v0_39bc1
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSsEcvRS2_Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_39bc2:
  ret i32 %arg1
}

define i32 @function_39bd2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39bd2:
  %v2_39bd2 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_39bd2 = load i32, i32* @eax, align 8
  %v4_39bd2 = trunc i32 %v3_39bd2 to i8
  %v5_39bd2 = add i8 %v4_39bd2, %v2_39bd2
  %v21_39bd2 = inttoptr i32 %v3_39bd2 to i8*
  store i8 %v5_39bd2, i8* %v21_39bd2, align 1
  %v0_39bd4 = load i32, i32* @eax, align 8
  %v1_39bd4 = load i32, i32* @ebp, align 4
  %v2_39bd4 = add i32 %v1_39bd4, -12
  %v3_39bd4 = inttoptr i32 %v2_39bd4 to i32*
  store i32 %v0_39bd4, i32* %v3_39bd4, align 4
  %v0_39bd9 = load i32, i32* @ebp, align 4
  %v1_39bd9 = add i32 %v0_39bd9, -28
  %v2_39bd9 = inttoptr i32 %v1_39bd9 to i32*
  %v3_39bd9 = load i32, i32* %v2_39bd9, align 4
  %v1_39bdc = inttoptr i32 %v3_39bd9 to i32*
  %v2_39bdc = load i32, i32* %v1_39bdc, align 4
  store i32 %v2_39bdc, i32* @eax, align 8
  %v1_39bde = add i32 %v0_39bd9, -12
  %v2_39bde = inttoptr i32 %v1_39bde to i32*
  %v3_39bde = load i32, i32* %v2_39bde, align 4
  %v1_39be1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_39be1 = icmp eq i32 %v1_39be1, %v3_39bde
  br i1 %v3_39be1, label %bb, label %dec_label_pc_39bea

bb:                                               ; preds = %dec_label_pc_39bd2
  %v1_39be8 = call i32 @function_39bef()
  br label %dec_label_pc_39bea

dec_label_pc_39bea:                               ; preds = %bb, %dec_label_pc_39bd2
  %v2_39be8 = phi i32 [ %v1_39be8, %bb ], [ %v2_39bdc, %dec_label_pc_39bd2 ]
  ret i32 %v2_39be8
}

define i32 @function_39bef() local_unnamed_addr {
dec_label_pc_39bef:
  %v0_39bf0 = load i32, i32* @eax, align 8
  ret i32 %v0_39bf0
}

define i32 @_ZN5boost6detail14addressof_implIKSsE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39bf1:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39c1d

bb:                                               ; preds = %dec_label_pc_39bf1
  %v3_39c1b = call i32 @function_39c22(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_39c1d

dec_label_pc_39c1d:                               ; preds = %bb, %dec_label_pc_39bf1
  %v4_39c1b = phi i32 [ %v3_39c1b, %bb ], [ %arg1, %dec_label_pc_39bf1 ]
  ret i32 %v4_39c1b
}

define i32 @function_39c22(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39c22:
  %v0_39c23 = load i32, i32* @eax, align 8
  ret i32 %v0_39c23
}

define i32 @_ZN5boost9addressofIKSt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEEPT_RSA_() local_unnamed_addr {
dec_label_pc_39c24:
  %eax.global-to-local = alloca i32, align 4
  %v17_39c27 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_39c27
}

define i32 @function_39c2c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39c2c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_39c2c = load i32, i32* @ecx, align 8
  %v1_39c2c = add i32 %v0_39c2c, -1587157947
  %v2_39c2c = inttoptr i32 %v1_39c2c to i8*
  %v3_39c2c = load i8, i8* %v2_39c2c, align 1
  %v5_39c2c = trunc i32 %v0_39c2c to i8
  %v6_39c2c = or i8 %v3_39c2c, %v5_39c2c
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_39c2c, i8* %v2_39c2c, align 1
  %v0_39c32 = load i32, i32* @eax, align 8
  %v1_39c32 = trunc i32 %v0_39c32 to i8
  %v2_39c32 = load i1, i1* %cf.global-to-local, align 1
  %v3_39c32 = zext i1 %v2_39c32 to i8
  %v4_39c32 = add i8 %v3_39c32, %v1_39c32
  %v19_39c32 = icmp ule i8 %v4_39c32, %v1_39c32
  %v21_39c32 = icmp eq i1 %v2_39c32, %v19_39c32
  store i1 %v21_39c32, i1* %cf.global-to-local, align 1
  %v22_39c32 = zext i8 %v4_39c32 to i32
  %v24_39c32 = and i32 %v0_39c32, -256
  %v25_39c32 = or i32 %v22_39c32, %v24_39c32
  store i32 %v25_39c32, i32* %eax.global-to-local, align 8
  %v1_39c34 = inttoptr i32 %v25_39c32 to i8*
  %v2_39c34 = load i8, i8* %v1_39c34, align 1
  %v5_39c34 = add i8 %v2_39c34, %v4_39c32
  store i8 %v5_39c34, i8* %v1_39c34, align 1
  %v0_39c36 = load i32, i32* %eax.global-to-local, align 8
  %v1_39c36 = load i32, i32* @ebp, align 4
  %v2_39c36 = add i32 %v1_39c36, -12
  %v3_39c36 = inttoptr i32 %v2_39c36 to i32*
  store i32 %v0_39c36, i32* %v3_39c36, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_39c3b = load i32, i32* @ebp, align 4
  %v1_39c3b = add i32 %v0_39c3b, -28
  %v2_39c3b = inttoptr i32 %v1_39c3b to i32*
  %v3_39c3b = load i32, i32* %v2_39c3b, align 4
  %v1_39c42 = add i32 %v0_39c3b, -16
  store i32 %v1_39c42, i32* %eax.global-to-local, align 8
  %v2_39c48 = call i32 @unknown_74b12(i32 %v1_39c42, i32 %v3_39c3b)
  %v0_39c4d = load i32, i32* @ebp, align 4
  %v1_39c4d = add i32 %v0_39c4d, -16
  store i32 %v1_39c4d, i32* %eax.global-to-local, align 8
  %v1_39c53 = call i32 @unknown_74b4a(i32 %v1_39c4d)
  store i32 %v1_39c53, i32* %eax.global-to-local, align 8
  %v2_39c63 = call i32 @unknown_74b79(i32 %v1_39c53, i32 0)
  store i32 %v2_39c63, i32* @eax, align 8
  %v0_39c68 = load i32, i32* @ebp, align 4
  %v1_39c68 = add i32 %v0_39c68, -12
  %v2_39c68 = inttoptr i32 %v1_39c68 to i32*
  %v3_39c68 = load i32, i32* %v2_39c68, align 4
  %v1_39c6b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_39c6b = icmp eq i32 %v1_39c6b, %v3_39c68
  br i1 %v3_39c6b, label %bb, label %dec_label_pc_39c74

bb:                                               ; preds = %dec_label_pc_39c2c
  %v1_39c72 = call i32 @function_39c79()
  store i32 %v1_39c72, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_39c74

dec_label_pc_39c74:                               ; preds = %bb, %dec_label_pc_39c2c
  %v2_39c72 = phi i32 [ %v1_39c72, %bb ], [ %v2_39c63, %dec_label_pc_39c2c ]
  ret i32 %v2_39c72

; uselistorder directives
  uselistorder i8 %v4_39c32, { 0, 2, 1 }
  uselistorder i8 %v1_39c32, { 1, 0 }
}

define i32 @function_39c79() local_unnamed_addr {
dec_label_pc_39c79:
  %v0_39c7a = load i32, i32* @eax, align 8
  ret i32 %v0_39c7a
}

define i32 @_ZSt18uninitialized_copyIP12CTransactionS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39c7b:
  %v3_39cb2 = call i32 @unknown_74c03(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_39cb2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39cc3

bb:                                               ; preds = %dec_label_pc_39c7b
  %v1_39cc1 = call i32 @function_39cc8()
  br label %dec_label_pc_39cc3

dec_label_pc_39cc3:                               ; preds = %bb, %dec_label_pc_39c7b
  %v2_39cc1 = phi i32 [ %v1_39cc1, %bb ], [ %v3_39cb2, %dec_label_pc_39c7b ]
  ret i32 %v2_39cc1
}

define i32 @function_39cc8() local_unnamed_addr {
dec_label_pc_39cc8:
  %v0_39cc9 = load i32, i32* @eax, align 8
  ret i32 %v0_39cc9
}

define i32 @_ZNSt10_Iter_baseIP12CTransactionLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_39cca:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_39cf0

bb:                                               ; preds = %dec_label_pc_39cca
  %v2_39cee = call i32 @function_39cf5(i32 %arg1)
  br label %dec_label_pc_39cf0

dec_label_pc_39cf0:                               ; preds = %bb, %dec_label_pc_39cca
  %v3_39cee = phi i32 [ %v2_39cee, %bb ], [ %arg1, %dec_label_pc_39cca ]
  ret i32 %v3_39cee
}

define i32 @function_39cf5(i32 %arg1) local_unnamed_addr {
dec_label_pc_39cf5:
  %v0_39cf6 = load i32, i32* @eax, align 8
  ret i32 %v0_39cf6
}

define i32 @_ZSt22__copy_move_backward_aILb0EP12CTransactionS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39cf7:
  %v3_39d32 = call i32 @unknown_74d26(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_39d32
}

define i32 @function_39d3e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39d3e:
  %v2_39d3e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_39d3e = load i32, i32* @eax, align 8
  %v4_39d3e = trunc i32 %v3_39d3e to i8
  %v5_39d3e = add i8 %v4_39d3e, %v2_39d3e
  %v21_39d3e = inttoptr i32 %v3_39d3e to i8*
  store i8 %v5_39d3e, i8* %v21_39d3e, align 1
  %v0_39d40 = load i32, i32* @ebp, align 4
  %v1_39d40 = load i32, i32* @eax, align 8
  %v3_39d40 = add i32 %v0_39d40, -24
  %v4_39d40 = add i32 %v3_39d40, %v1_39d40
  %v5_39d40 = inttoptr i32 %v4_39d40 to i8*
  %v6_39d40 = load i8, i8* %v5_39d40, align 1
  %v7_39d40 = load i32, i32* @edx, align 4
  %v8_39d40 = udiv i32 %v7_39d40, 256
  %v9_39d40 = trunc i32 %v8_39d40 to i8
  %v10_39d40 = add i8 %v9_39d40, %v6_39d40
  store i8 %v10_39d40, i8* %v5_39d40, align 1
  %v31_39d40 = load i32, i32* @eax, align 8
  ret i32 %v31_39d40
}

define i32 @function_39d47() local_unnamed_addr {
dec_label_pc_39d47:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_39d47 = load i32, i32* %ecx.global-to-local, align 8
  %v1_39d47 = add i32 %v0_39d47, -1
  store i32 %v1_39d47, i32* %ecx.global-to-local, align 8
  %v0_39d49 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_39d49
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEaSERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39d4a:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg1 to i32
  %v1_39d7c = call i32 @unknown_5042c(i32 %arg2)
  %v1_39d8a = call i32 @unknown_74df0(i32 %tmp119)
  %v11_39d8f = icmp ult i32 %v1_39d8a, %v1_39d7c
  %v5_39d95 = icmp eq i1 %v11_39d8f, false
  br i1 %v5_39d95, label %dec_label_pc_39e66, label %dec_label_pc_39d9d

dec_label_pc_39d9d:                               ; preds = %dec_label_pc_39d4a
  %v2_39d9d = ptrtoint i32* %stack_var_-64 to i32
  %v2_39daa = call i32 @unknown_55eae(i32 %v2_39d9d, i32 %arg2)
  %v2_39db2 = ptrtoint i32* %stack_var_-68 to i32
  %v2_39dbf = call i32 @unknown_55efe(i32 %v2_39db2, i32 %arg2)
  %v3_39dc7 = load i32, i32* %stack_var_-64, align 4
  %v3_39dce = load i32, i32* %stack_var_-68, align 4
  %v4_39de2 = call i32 @unknown_74e36(i32 %tmp119, i32 %v1_39d7c, i32 %v3_39dce, i32 %v3_39dc7)
  %v1_39df0 = call i32 @unknown_55c10(i32 %tmp119)
  %v1_39df8 = add i32 %tmp119, 4
  %v2_39df8 = inttoptr i32 %v1_39df8 to i32*
  %v3_39df8 = load i32, i32* %v2_39df8, align 4
  %v2_39dfe = load i32, i32* %arg1, align 4
  %v3_39e0b = call i32 @unknown_55c3d(i32 %v2_39dfe, i32 %v3_39df8, i32 %v1_39df0)
  %v1_39e13 = add i32 %tmp119, 8
  %v2_39e13 = inttoptr i32 %v1_39e13 to i32*
  %v3_39e13 = load i32, i32* %v2_39e13, align 4
  %v2_39e1b = load i32, i32* %arg1, align 4
  %v2_39e1f = sub i32 %v3_39e13, %v2_39e1b
  %v2_39e23 = sdiv i32 %v2_39e1f, 4
  %v3_39e26 = mul i32 %v2_39e23, -991146299
  %v3_39e41 = call i32 @unknown_5c6c2(i32 %tmp119, i32 %v2_39e1b, i32 %v3_39e26)
  store i32 %v4_39de2, i32* %arg1, align 4
  %v3_39e56 = mul i32 %v1_39d7c, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_39e59 = add i32 %v4_39de2, %v3_39e56
  store i32 %v2_39e59, i32* %v2_39e13, align 4
  %v0_39e61 = call i32 @function_39f91()
  ret i32 %v0_39e61

dec_label_pc_39e66:                               ; preds = %dec_label_pc_39d4a
  %v1_39e6c = call i32 @unknown_5042c(i32 %tmp119)
  %v11_39e71 = icmp ult i32 %v1_39e6c, %v1_39d7c
  %v1_39e74 = icmp eq i1 %v11_39e71, false
  %v5_39e77 = icmp eq i1 %v1_39e74, false
  br i1 %v5_39e77, label %bb, label %dec_label_pc_39e7f

bb:                                               ; preds = %dec_label_pc_39e66
  %v1_39e79 = call i32 @function_39f1b()
  br label %dec_label_pc_39e7f

dec_label_pc_39e7f:                               ; preds = %bb, %dec_label_pc_39e66
  %v1_39e85 = call i32 @unknown_55c10(i32 %tmp119)
  %v2_39e8c = ptrtoint i32* %stack_var_-44 to i32
  %v2_39e99 = call i32 @unknown_6587c(i32 %v2_39e8c, i32 %tmp119)
  %v2_39ea1 = ptrtoint i32* %stack_var_-52 to i32
  %v2_39eae = call i32 @unknown_65834(i32 %v2_39ea1, i32 %tmp119)
  %v2_39eb6 = ptrtoint i32* %stack_var_-56 to i32
  %v2_39ec3 = call i32 @unknown_55eae(i32 %v2_39eb6, i32 %arg2)
  %v2_39ecb = ptrtoint i32* %stack_var_-60 to i32
  %v2_39ed8 = call i32 @unknown_55efe(i32 %v2_39ecb, i32 %arg2)
  %v2_39ee0 = ptrtoint i32* %stack_var_-48 to i32
  %v3_39ee3 = load i32, i32* %stack_var_-52, align 4
  %v3_39eea = load i32, i32* %stack_var_-56, align 4
  %v3_39ef1 = load i32, i32* %stack_var_-60, align 4
  %v4_39efb = call i32 @unknown_74ef0(i32 %v2_39ee0, i32 %v3_39ef1, i32 %v3_39eea, i32 %v3_39ee3)
  %v3_39f0e = load i32, i32* %stack_var_-48, align 4
  ret i32 %v3_39f0e

; uselistorder directives
  uselistorder i32 %tmp119, { 5, 6, 7, 8, 0, 1, 3, 2, 4, 9 }
  uselistorder i32 (i32, i32)* @unknown_55efe, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_55eae, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
}

define i32 @function_39f11(i32 %arg1) local_unnamed_addr {
dec_label_pc_39f11:
  %v0_39f11 = load i32, i32* @eax, align 8
  %v1_39f14 = call i32 @unknown_74f7e(i32 %v0_39f11)
  %v0_39f19 = call i32 @function_39f91()
  ret i32 %v0_39f19
}

define i32 @function_39f1b() local_unnamed_addr {
dec_label_pc_39f1b:
  %ebx.global-to-local = alloca i32, align 4
  %v0_39f1b = load i32, i32* @ebp, align 4
  %v1_39f1b = add i32 %v0_39f1b, -76
  %v2_39f1b = inttoptr i32 %v1_39f1b to i32*
  %v3_39f1b = load i32, i32* %v2_39f1b, align 4
  %v1_39f1e = inttoptr i32 %v3_39f1b to i32*
  %v2_39f1e = load i32, i32* %v1_39f1e, align 4
  store i32 %v2_39f1e, i32* %ebx.global-to-local, align 4
  %v1_39f20 = add i32 %v0_39f1b, -80
  %v2_39f20 = inttoptr i32 %v1_39f20 to i32*
  %v3_39f20 = load i32, i32* %v2_39f20, align 4
  %v1_39f23 = inttoptr i32 %v3_39f20 to i32*
  %v2_39f23 = load i32, i32* %v1_39f23, align 4
  %v3_39f25 = load i32, i32* %v2_39f1b, align 4
  %v1_39f2b = call i32 @unknown_5042c(i32 %v3_39f25)
  %v3_39f30 = mul i32 %v1_39f2b, ptrtoint (i64* @global_var_34.2855 to i32)
  %v3_39f33 = add i32 %v2_39f23, %v3_39f30
  %v0_39f36 = load i32, i32* @ebp, align 4
  %v1_39f36 = add i32 %v0_39f36, -80
  %v2_39f36 = inttoptr i32 %v1_39f36 to i32*
  %v3_39f36 = load i32, i32* %v2_39f36, align 4
  %v1_39f39 = inttoptr i32 %v3_39f36 to i32*
  %v2_39f39 = load i32, i32* %v1_39f39, align 4
  %v0_39f3b = load i32, i32* %ebx.global-to-local, align 4
  %v3_39f46 = call i32 @unknown_74fc6(i32 %v2_39f39, i32 %v3_39f33, i32 %v0_39f3b)
  %v0_39f4b = load i32, i32* @ebp, align 4
  %v1_39f4b = add i32 %v0_39f4b, -76
  %v2_39f4b = inttoptr i32 %v1_39f4b to i32*
  %v3_39f4b = load i32, i32* %v2_39f4b, align 4
  %v1_39f51 = call i32 @unknown_55c10(i32 %v3_39f4b)
  store i32 %v1_39f51, i32* %ebx.global-to-local, align 4
  %v0_39f58 = load i32, i32* @ebp, align 4
  %v1_39f5e = add i32 %v0_39f58, -80
  %v2_39f5e = inttoptr i32 %v1_39f5e to i32*
  %v3_39f5e = load i32, i32* %v2_39f5e, align 4
  ret i32 %v3_39f5e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_55c10, { 2, 1, 0 }
}

define i32 @function_39f64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39f64:
  %v0_39f64 = load i32, i32* @ebp, align 4
  %v1_39f64 = add i32 %v0_39f64, -80
  %v2_39f64 = inttoptr i32 %v1_39f64 to i32*
  %v3_39f64 = load i32, i32* %v2_39f64, align 4
  %v1_39f67 = inttoptr i32 %v3_39f64 to i32*
  %v2_39f67 = load i32, i32* %v1_39f67, align 4
  %v2_39f69 = add i32 %v0_39f64, -84
  %v3_39f69 = inttoptr i32 %v2_39f69 to i32*
  store i32 %v2_39f67, i32* %v3_39f69, align 4
  %v0_39f6c = load i32, i32* @ebp, align 4
  %v1_39f6c = add i32 %v0_39f6c, -76
  %v2_39f6c = inttoptr i32 %v1_39f6c to i32*
  %v3_39f6c = load i32, i32* %v2_39f6c, align 4
  %v2_39f72 = call i32 @unknown_5042c(i32 %v3_39f6c)
  %v3_39f77 = mul i32 %v2_39f72, ptrtoint (i64* @global_var_34.2855 to i32)
  %v1_39f7a = load i32, i32* @ebp, align 4
  %v2_39f7a = add i32 %v1_39f7a, -84
  %v3_39f7a = inttoptr i32 %v2_39f7a to i32*
  %v4_39f7a = load i32, i32* %v3_39f7a, align 4
  %v5_39f7a = add i32 %v4_39f7a, %v3_39f77
  %v0_39f7d = load i32, i32* @ebx, align 4
  %v0_39f81 = load i32, i32* @edi, align 4
  %v0_39f85 = load i32, i32* @esi, align 4
  %v5_39f8c = call i32 @unknown_7502c(i32 %v5_39f7a, i32 %v0_39f85, i32 %v0_39f81, i32 %v0_39f7d)
  ret i32 %v5_39f8c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5042c, { 0, 3, 2, 1 }
}

define i32 @function_39f91() local_unnamed_addr {
dec_label_pc_39f91:
  %v0_39f91 = load i32, i32* @ebp, align 4
  %v1_39f91 = add i32 %v0_39f91, -76
  %v2_39f91 = inttoptr i32 %v1_39f91 to i32*
  %v3_39f91 = load i32, i32* %v2_39f91, align 4
  %v1_39f94 = inttoptr i32 %v3_39f91 to i32*
  %v2_39f94 = load i32, i32* %v1_39f94, align 4
  %v1_39f96 = add i32 %v0_39f91, -36
  %v2_39f96 = inttoptr i32 %v1_39f96 to i32*
  %v3_39f96 = load i32, i32* %v2_39f96, align 4
  %v3_39f99 = mul i32 %v3_39f96, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_39f9c = add i32 %v3_39f99, %v2_39f94
  %v3_39f9e = load i32, i32* %v2_39f91, align 4
  %v2_39fa1 = add i32 %v3_39f9e, 4
  %v3_39fa1 = inttoptr i32 %v2_39fa1 to i32*
  store i32 %v2_39f9c, i32* %v3_39fa1, align 4
  %v0_39fa4 = load i32, i32* @ebp, align 4
  %v1_39fa4 = add i32 %v0_39fa4, -76
  %v2_39fa4 = inttoptr i32 %v1_39fa4 to i32*
  %v3_39fa4 = load i32, i32* %v2_39fa4, align 4
  store i32 %v3_39fa4, i32* @eax, align 8
  %v1_39fa7 = add i32 %v0_39fa4, -28
  %v2_39fa7 = inttoptr i32 %v1_39fa7 to i32*
  %v3_39fa7 = load i32, i32* %v2_39fa7, align 4
  %v1_39faa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_39faa = icmp eq i32 %v1_39faa, %v3_39fa7
  br i1 %v3_39faa, label %bb, label %dec_label_pc_39fb3

bb:                                               ; preds = %dec_label_pc_39f91
  %v1_39fb1 = call i32 @function_39fb8()
  br label %dec_label_pc_39fb3

dec_label_pc_39fb3:                               ; preds = %bb, %dec_label_pc_39f91
  %v2_39fb1 = phi i32 [ %v1_39fb1, %bb ], [ %v3_39fa4, %dec_label_pc_39f91 ]
  ret i32 %v2_39fb1
}

define i32 @function_39fb7() local_unnamed_addr {
dec_label_pc_39fb7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39fb8() local_unnamed_addr {
dec_label_pc_39fb8:
  %v0_39fb8 = load i32, i32* @ebp, align 4
  %v1_39fbe = inttoptr i32 %v0_39fb8 to i32*
  %v2_39fbe = load i32, i32* %v1_39fbe, align 4
  store i32 %v2_39fbe, i32* @ebp, align 4
  %v0_39fbf = load i32, i32* @eax, align 8
  ret i32 %v0_39fbf
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEaSERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39fc0:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_39ff2 = call i32 @unknown_5086c(i32 %arg2)
  %v1_3a000 = call i32 @unknown_752f8(i32 %tmp109)
  %v10_3a005 = icmp ult i32 %v1_3a000, %v1_39ff2
  %v5_3a00b = icmp eq i1 %v10_3a005, false
  br i1 %v5_3a00b, label %bb, label %dec_label_pc_3a013

bb:                                               ; preds = %dec_label_pc_39fc0
  %v1_3a00d = call i32 @function_3a0e4()
  br label %dec_label_pc_3a013

dec_label_pc_3a013:                               ; preds = %bb, %dec_label_pc_39fc0
  %v2_3a013 = ptrtoint i32* %stack_var_-64 to i32
  %v2_3a020 = call i32 @unknown_561c4(i32 %v2_3a013, i32 %arg2)
  %v2_3a028 = ptrtoint i32* %stack_var_-68 to i32
  %v2_3a035 = call i32 @unknown_56214(i32 %v2_3a028, i32 %arg2)
  %v3_3a03d = load i32, i32* %stack_var_-64, align 4
  %v3_3a044 = load i32, i32* %stack_var_-68, align 4
  %v4_3a058 = call i32 @unknown_7533e(i32 %tmp109, i32 %v1_39ff2, i32 %v3_3a044, i32 %v3_3a03d)
  %v1_3a066 = call i32 @unknown_55ff2(i32 %tmp109)
  %v1_3a06e = add i32 %tmp109, 4
  %v2_3a06e = inttoptr i32 %v1_3a06e to i32*
  %v3_3a06e = load i32, i32* %v2_3a06e, align 4
  %v2_3a074 = load i32, i32* %arg1, align 4
  %v3_3a081 = call i32 @unknown_5601f(i32 %v2_3a074, i32 %v3_3a06e, i32 %v1_3a066)
  ret i32 %tmp109

; uselistorder directives
  uselistorder i32 %tmp109, { 0, 2, 1, 3, 4 }
}

define i32 @function_3a091(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a091:
  %v0_3a093 = load i32, i32* @edx, align 4
  %v1_3a095 = load i32, i32* @eax, align 8
  %v2_3a095 = sub i32 %v0_3a093, %v1_3a095
  %v2_3a099 = sdiv i32 %v2_3a095, 4
  %v3_3a09c = mul i32 %v2_3a099, -858993459
  %v0_3a0a4 = load i32, i32* @ebp, align 4
  %v1_3a0a4 = add i32 %v0_3a0a4, -76
  %v2_3a0a4 = inttoptr i32 %v1_3a0a4 to i32*
  %v3_3a0a4 = load i32, i32* %v2_3a0a4, align 4
  %v1_3a0a7 = inttoptr i32 %v3_3a0a4 to i32*
  %v2_3a0a7 = load i32, i32* %v1_3a0a7, align 4
  %v3_3a0b7 = call i32 @unknown_5ca22(i32 %v3_3a0a4, i32 %v2_3a0a7, i32 %v3_3a09c)
  %v0_3a0bc = load i32, i32* @ebp, align 4
  %v1_3a0bc = add i32 %v0_3a0bc, -76
  %v2_3a0bc = inttoptr i32 %v1_3a0bc to i32*
  %v3_3a0bc = load i32, i32* %v2_3a0bc, align 4
  %v1_3a0bf = add i32 %v0_3a0bc, -32
  %v2_3a0bf = inttoptr i32 %v1_3a0bf to i32*
  %v3_3a0bf = load i32, i32* %v2_3a0bf, align 4
  %v2_3a0c2 = inttoptr i32 %v3_3a0bc to i32*
  store i32 %v3_3a0bf, i32* %v2_3a0c2, align 4
  %v0_3a0c4 = load i32, i32* @ebp, align 4
  %v1_3a0c4 = add i32 %v0_3a0c4, -76
  %v2_3a0c4 = inttoptr i32 %v1_3a0c4 to i32*
  %v3_3a0c4 = load i32, i32* %v2_3a0c4, align 4
  %v1_3a0c7 = inttoptr i32 %v3_3a0c4 to i32*
  %v2_3a0c7 = load i32, i32* %v1_3a0c7, align 4
  %v1_3a0c9 = add i32 %v0_3a0c4, -36
  %v2_3a0c9 = inttoptr i32 %v1_3a0c9 to i32*
  %v3_3a0c9 = load i32, i32* %v2_3a0c9, align 4
  %v2_3a0d3 = mul i32 %v3_3a0c9, 20
  %v3_3a0d6 = add i32 %v2_3a0d3, %v2_3a0c7
  %v3_3a0d9 = load i32, i32* %v2_3a0c4, align 4
  %v2_3a0dc = add i32 %v3_3a0d9, 8
  %v3_3a0dc = inttoptr i32 %v2_3a0dc to i32*
  store i32 %v3_3a0d6, i32* %v3_3a0dc, align 4
  %v0_3a0df = call i32 @function_3a224()
  ret i32 %v0_3a0df
}

define i32 @function_3a0b3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a0b3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a0e4() local_unnamed_addr {
dec_label_pc_3a0e4:
  %v0_3a0e4 = load i32, i32* @ebp, align 4
  %v1_3a0e4 = add i32 %v0_3a0e4, -76
  %v2_3a0e4 = inttoptr i32 %v1_3a0e4 to i32*
  %v3_3a0e4 = load i32, i32* %v2_3a0e4, align 4
  %v1_3a0ea = call i32 @unknown_5086c(i32 %v3_3a0e4)
  %v1_3a0ef = load i32, i32* @ebp, align 4
  %v2_3a0ef = add i32 %v1_3a0ef, -36
  %v3_3a0ef = inttoptr i32 %v2_3a0ef to i32*
  %v4_3a0ef = load i32, i32* %v3_3a0ef, align 4
  %v10_3a0ef = icmp ult i32 %v1_3a0ea, %v4_3a0ef
  %v1_3a0f2 = icmp eq i1 %v10_3a0ef, false
  %v5_3a0f5 = icmp eq i1 %v1_3a0f2, false
  br i1 %v5_3a0f5, label %bb, label %dec_label_pc_3a0fd

bb:                                               ; preds = %dec_label_pc_3a0e4
  %v1_3a0f7 = call i32 @function_3a19c()
  %v0_3a0fd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3a0fd

dec_label_pc_3a0fd:                               ; preds = %bb, %dec_label_pc_3a0e4
  %v0_3a0fd = phi i32 [ %v0_3a0fd.pre, %bb ], [ %v1_3a0ef, %dec_label_pc_3a0e4 ]
  %v1_3a0fd = add i32 %v0_3a0fd, -76
  %v2_3a0fd = inttoptr i32 %v1_3a0fd to i32*
  %v3_3a0fd = load i32, i32* %v2_3a0fd, align 4
  %v1_3a103 = call i32 @unknown_55ff2(i32 %v3_3a0fd)
  %v0_3a10a = load i32, i32* @ebp, align 4
  %v1_3a10a = add i32 %v0_3a10a, -40
  %v1_3a10d = add i32 %v0_3a10a, -76
  %v2_3a10d = inttoptr i32 %v1_3a10d to i32*
  %v3_3a10d = load i32, i32* %v2_3a10d, align 4
  %v2_3a117 = call i32 @unknown_563e0(i32 %v1_3a10a, i32 %v3_3a10d)
  %v0_3a11f = load i32, i32* @ebp, align 4
  %v1_3a11f = add i32 %v0_3a11f, -48
  %v1_3a122 = add i32 %v0_3a11f, -76
  %v2_3a122 = inttoptr i32 %v1_3a122 to i32*
  %v3_3a122 = load i32, i32* %v2_3a122, align 4
  %v2_3a12c = call i32 @unknown_753f8(i32 %v1_3a11f, i32 %v3_3a122)
  %v0_3a134 = load i32, i32* @ebp, align 4
  %v1_3a134 = add i32 %v0_3a134, -52
  %v1_3a137 = add i32 %v0_3a134, -80
  %v2_3a137 = inttoptr i32 %v1_3a137 to i32*
  %v3_3a137 = load i32, i32* %v2_3a137, align 4
  %v2_3a141 = call i32 @unknown_561c4(i32 %v1_3a134, i32 %v3_3a137)
  %v0_3a149 = load i32, i32* @ebp, align 4
  %v1_3a149 = add i32 %v0_3a149, -56
  %v1_3a14c = add i32 %v0_3a149, -80
  %v2_3a14c = inttoptr i32 %v1_3a14c to i32*
  %v3_3a14c = load i32, i32* %v2_3a14c, align 4
  %v2_3a156 = call i32 @unknown_56214(i32 %v1_3a149, i32 %v3_3a14c)
  %v0_3a15e = load i32, i32* @ebp, align 4
  %v1_3a15e = add i32 %v0_3a15e, -44
  ret i32 %v1_3a15e

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_56214, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_561c4, { 1, 0 }
}

define i32 @function_3a17a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a17a:
  %v0_3a17a = load i32, i32* @edx, align 4
  %v1_3a17a = add i32 %v0_3a17a, -326959101
  %v2_3a17a = inttoptr i32 %v1_3a17a to i32*
  %v3_3a17a = load i32, i32* %v2_3a17a, align 4
  %v5_3a17a = mul i32 %v3_3a17a, 16
  store i32 %v5_3a17a, i32* %v2_3a17a, align 4
  %v0_3a181 = load i32, i32* @ebx, align 4
  %v0_3a185 = load i32, i32* @ebp, align 4
  %v1_3a185 = add i32 %v0_3a185, -40
  %v2_3a185 = inttoptr i32 %v1_3a185 to i32*
  %v3_3a185 = load i32, i32* %v2_3a185, align 4
  %v1_3a18c = add i32 %v0_3a185, -44
  %v2_3a18c = inttoptr i32 %v1_3a18c to i32*
  %v3_3a18c = load i32, i32* %v2_3a18c, align 4
  %v3_3a192 = call i32 @unknown_754cd(i32 %v3_3a18c, i32 %v3_3a185, i32 %v0_3a181)
  %v0_3a197 = call i32 @function_3a224()
  ret i32 %v0_3a197

; uselistorder directives
  uselistorder i32 ()* @function_3a224, { 1, 0 }
}

define i32 @function_3a19c() local_unnamed_addr {
dec_label_pc_3a19c:
  %v0_3a19c = load i32, i32* @ebp, align 4
  %v1_3a19c = add i32 %v0_3a19c, -76
  %v2_3a19c = inttoptr i32 %v1_3a19c to i32*
  %v3_3a1a6 = load i32, i32* %v2_3a19c, align 4
  %v1_3a1ac = call i32 @unknown_5086c(i32 %v3_3a1a6)
  %v0_3a1c0 = load i32, i32* @ebp, align 4
  %v1_3a1c0 = add i32 %v0_3a1c0, -80
  %v2_3a1c0 = inttoptr i32 %v1_3a1c0 to i32*
  %v3_3a1c0 = load i32, i32* %v2_3a1c0, align 4
  %v1_3a1c3 = inttoptr i32 %v3_3a1c0 to i32*
  %v2_3a1c3 = load i32, i32* %v1_3a1c3, align 4
  ret i32 %v2_3a1c3
}

define i32 @function_3a1cd() local_unnamed_addr {
dec_label_pc_3a1cd:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3a1cd = load i32, i32* @eax, align 8
  %v1_3a1d0 = call i32 @unknown_75515(i32 %v0_3a1cd)
  %v0_3a1d5 = load i32, i32* @ebp, align 4
  %v1_3a1d5 = add i32 %v0_3a1d5, -76
  %v2_3a1d5 = inttoptr i32 %v1_3a1d5 to i32*
  %v3_3a1d5 = load i32, i32* %v2_3a1d5, align 4
  %v1_3a1db = call i32 @unknown_55ff2(i32 %v3_3a1d5)
  store i32 %v1_3a1db, i32* @ebx, align 4
  %v0_3a1e2 = load i32, i32* @ebp, align 4
  %v1_3a1e2 = add i32 %v0_3a1e2, -76
  %v2_3a1e2 = inttoptr i32 %v1_3a1e2 to i32*
  %v3_3a1e2 = load i32, i32* %v2_3a1e2, align 4
  %v1_3a1e5 = add i32 %v3_3a1e2, 4
  %v2_3a1e5 = inttoptr i32 %v1_3a1e5 to i32*
  %v3_3a1e5 = load i32, i32* %v2_3a1e5, align 4
  store i32 %v3_3a1e5, i32* %edi.global-to-local, align 4
  %v1_3a1e8 = add i32 %v0_3a1e2, -80
  %v2_3a1e8 = inttoptr i32 %v1_3a1e8 to i32*
  %v3_3a1e8 = load i32, i32* %v2_3a1e8, align 4
  %v1_3a1eb = add i32 %v3_3a1e8, 4
  %v2_3a1eb = inttoptr i32 %v1_3a1eb to i32*
  %v3_3a1eb = load i32, i32* %v2_3a1eb, align 4
  store i32 %v3_3a1eb, i32* %esi.global-to-local, align 4
  %v3_3a1ee = load i32, i32* %v2_3a1e8, align 4
  %v1_3a1f1 = inttoptr i32 %v3_3a1ee to i32*
  %v2_3a1f1 = load i32, i32* %v1_3a1f1, align 4
  %v2_3a1f3 = add i32 %v0_3a1e2, -84
  %v3_3a1f3 = inttoptr i32 %v2_3a1f3 to i32*
  store i32 %v2_3a1f1, i32* %v3_3a1f3, align 4
  %v0_3a1f6 = load i32, i32* @ebp, align 4
  %v1_3a1f6 = add i32 %v0_3a1f6, -76
  %v2_3a1f6 = inttoptr i32 %v1_3a1f6 to i32*
  %v3_3a1f6 = load i32, i32* %v2_3a1f6, align 4
  %v1_3a1fc = call i32 @unknown_5086c(i32 %v3_3a1f6)
  %v2_3a20a = mul i32 %v1_3a1fc, 20
  %v1_3a20d = load i32, i32* @ebp, align 4
  %v2_3a20d = add i32 %v1_3a20d, -84
  %v3_3a20d = inttoptr i32 %v2_3a20d to i32*
  %v4_3a20d = load i32, i32* %v3_3a20d, align 4
  %v5_3a20d = add i32 %v4_3a20d, %v2_3a20a
  %v0_3a210 = load i32, i32* @ebx, align 4
  %v0_3a214 = load i32, i32* %edi.global-to-local, align 4
  %v0_3a218 = load i32, i32* %esi.global-to-local, align 4
  %v4_3a21f = call i32 @unknown_7557b(i32 %v5_3a20d, i32 %v0_3a218, i32 %v0_3a214, i32 %v0_3a210)
  ret i32 %v4_3a21f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5086c, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @unknown_55ff2, { 0, 2, 1 }
}

define i32 @function_3a224() local_unnamed_addr {
dec_label_pc_3a224:
  %v0_3a224 = load i32, i32* @ebp, align 4
  %v1_3a224 = add i32 %v0_3a224, -76
  %v2_3a224 = inttoptr i32 %v1_3a224 to i32*
  %v3_3a224 = load i32, i32* %v2_3a224, align 4
  %v1_3a227 = inttoptr i32 %v3_3a224 to i32*
  %v2_3a227 = load i32, i32* %v1_3a227, align 4
  %v1_3a229 = add i32 %v0_3a224, -36
  %v2_3a229 = inttoptr i32 %v1_3a229 to i32*
  %v3_3a229 = load i32, i32* %v2_3a229, align 4
  %v2_3a233 = mul i32 %v3_3a229, 20
  %v3_3a236 = add i32 %v2_3a233, %v2_3a227
  %v3_3a239 = load i32, i32* %v2_3a224, align 4
  %v2_3a23c = add i32 %v3_3a239, 4
  %v3_3a23c = inttoptr i32 %v2_3a23c to i32*
  store i32 %v3_3a236, i32* %v3_3a23c, align 4
  %v0_3a23f = load i32, i32* @ebp, align 4
  %v1_3a23f = add i32 %v0_3a23f, -76
  %v2_3a23f = inttoptr i32 %v1_3a23f to i32*
  %v3_3a23f = load i32, i32* %v2_3a23f, align 4
  store i32 %v3_3a23f, i32* @eax, align 8
  %v1_3a242 = add i32 %v0_3a23f, -28
  %v2_3a242 = inttoptr i32 %v1_3a242 to i32*
  %v3_3a242 = load i32, i32* %v2_3a242, align 4
  %v1_3a245 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a245 = icmp eq i32 %v1_3a245, %v3_3a242
  br i1 %v3_3a245, label %bb, label %dec_label_pc_3a24e

bb:                                               ; preds = %dec_label_pc_3a224
  %v1_3a24c = call i32 @function_3a253()
  br label %dec_label_pc_3a24e

dec_label_pc_3a24e:                               ; preds = %bb, %dec_label_pc_3a224
  %v2_3a24c = phi i32 [ %v1_3a24c, %bb ], [ %v3_3a23f, %dec_label_pc_3a224 ]
  ret i32 %v2_3a24c
}

define i32 @function_3a253() local_unnamed_addr {
dec_label_pc_3a253:
  %v0_3a25a = load i32, i32* @eax, align 8
  ret i32 %v0_3a25a
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP12CTransactionjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a25b:
  ret i32 %arg1
}

define i32 @function_3a28f(i16 %arg1) local_unnamed_addr {
dec_label_pc_3a28f:
  %eax.global-to-local = alloca i32, align 4
  %v6_3a28f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_3a28f
}

define i32 @function_3a29b(i16 %arg1) local_unnamed_addr {
dec_label_pc_3a29b:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a29b = load i32, i32* %eax.global-to-local, align 8
  %v11_3a29b = and i32 %v0_3a29b, -24
  store i32 %v11_3a29b, i32* %eax.global-to-local, align 8
  ret i32 %v11_3a29b

; uselistorder directives
  uselistorder i32 %v11_3a29b, { 1, 0 }
}

define i32 @function_3a2a7(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a2a7:
  %v0_3a2a7 = load i32, i32* @ebx, align 4
  %v1_3a2a7 = add i32 %v0_3a2a7, 251715709
  %v2_3a2a7 = inttoptr i32 %v1_3a2a7 to i8*
  %v3_3a2a7 = load i8, i8* %v2_3a2a7, align 1
  %v4_3a2a7 = load i32, i32* @eax, align 8
  %v5_3a2a7 = trunc i32 %v4_3a2a7 to i8
  %v6_3a2a7 = and i8 %v5_3a2a7, %v3_3a2a7
  store i8 %v6_3a2a7, i8* %v2_3a2a7, align 1
  %v1_3a2ae = load i32, i32* @ebp, align 4
  ret i32 %v1_3a2ae
}

define i32 @function_3a2fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a2fa:
  %v0_3a2fc = load i32, i32* @eax, align 8
  ret i32 %v0_3a2fc
}

define i32 @_ZNKSt12_Vector_baseI12CTransactionSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a2fe:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a324

bb:                                               ; preds = %dec_label_pc_3a2fe
  %v2_3a322 = call i32 @function_3a329(i32 %arg1)
  br label %dec_label_pc_3a324

dec_label_pc_3a324:                               ; preds = %bb, %dec_label_pc_3a2fe
  %v3_3a322 = phi i32 [ %v2_3a322, %bb ], [ %arg1, %dec_label_pc_3a2fe ]
  ret i32 %v3_3a322
}

define i32 @function_3a329(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a329:
  %v0_3a32a = load i32, i32* @eax, align 8
  ret i32 %v0_3a32a
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI12CTransactionE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a32c:
  store i32 134217727, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a354

bb:                                               ; preds = %dec_label_pc_3a32c
  %v2_3a352 = call i32 @function_3a359(i32 %arg1)
  br label %dec_label_pc_3a354

dec_label_pc_3a354:                               ; preds = %bb, %dec_label_pc_3a32c
  %v3_3a352 = phi i32 [ %v2_3a352, %bb ], [ 134217727, %dec_label_pc_3a32c ]
  ret i32 %v3_3a352
}

define i32 @function_3a359(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a359:
  %v0_3a35a = load i32, i32* @eax, align 8
  ret i32 %v0_3a35a
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE6resizeEjS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a35c:
  %v1_3a386 = call i32 @unknown_50a3e(i32 %arg1)
  ret i32 %v1_3a386
}

define i32 @function_3a390(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a390:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3a390 = load i32, i32* @eax, align 8
  %v2_3a390 = mul i32 %v0_3a390, 8
  %v3_3a390 = add i32 %v0_3a390, 1166755444
  %v4_3a390 = add i32 %v3_3a390, %v2_3a390
  %v5_3a390 = inttoptr i32 %v4_3a390 to i8*
  %v6_3a390 = load i8, i8* %v5_3a390, align 1
  %v7_3a390 = mul i8 %v6_3a390, 16
  %v8_3a390 = udiv i8 %v6_3a390, 16
  %v9_3a390 = or i8 %v8_3a390, %v7_3a390
  store i8 %v9_3a390, i8* %v5_3a390, align 1
  %v0_3a398 = load i32, i32* @eax, align 8
  %v1_3a39b = call i32 @unknown_50a3e(i32 %v0_3a398)
  %v0_3a3a0 = load i32, i32* @ebp, align 4
  %v1_3a3a0 = add i32 %v0_3a3a0, -32
  %v2_3a3a0 = inttoptr i32 %v1_3a3a0 to i32*
  %v3_3a3a0 = load i32, i32* %v2_3a3a0, align 4
  %v2_3a3a5 = sub i32 %v3_3a3a0, %v1_3a39b
  store i32 %v2_3a3a5, i32* %ebx.global-to-local, align 4
  %v1_3a3a7 = add i32 %v0_3a3a0, -16
  %v1_3a3aa = add i32 %v0_3a3a0, -28
  %v2_3a3aa = inttoptr i32 %v1_3a3aa to i32*
  %v3_3a3aa = load i32, i32* %v2_3a3aa, align 4
  %v2_3a3b4 = call i32 @unknown_65e8e(i32 %v1_3a3a7, i32 %v3_3a3aa)
  %v0_3a3bc = load i32, i32* @ebp, align 4
  %v1_3a3bc = add i32 %v0_3a3bc, -36
  %v2_3a3bc = inttoptr i32 %v1_3a3bc to i32*
  %v3_3a3bc = load i32, i32* %v2_3a3bc, align 4
  %v0_3a3c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3a3c7 = add i32 %v0_3a3bc, -16
  %v2_3a3c7 = inttoptr i32 %v1_3a3c7 to i32*
  %v3_3a3c7 = load i32, i32* %v2_3a3c7, align 4
  %v1_3a3ce = add i32 %v0_3a3bc, -28
  %v2_3a3ce = inttoptr i32 %v1_3a3ce to i32*
  %v3_3a3ce = load i32, i32* %v2_3a3ce, align 4
  %v4_3a3d4 = call i32 @unknown_759e8(i32 %v3_3a3ce, i32 %v3_3a3c7, i32 %v0_3a3c3, i32 %v3_3a3bc)
  %v0_3a3d9 = call i32 @function_3a40c()
  ret i32 %v0_3a3d9

; uselistorder directives
  uselistorder i32 %v0_3a3bc, { 1, 0, 2 }
  uselistorder i32 %v0_3a3a0, { 1, 0, 2 }
  uselistorder i8 %v6_3a390, { 1, 0 }
  uselistorder i32 %v0_3a390, { 1, 0 }
}

define i32 @function_3a3e3() local_unnamed_addr {
dec_label_pc_3a3e3:
  %v2_3a3e3 = load i16, i16* bitcast (i32* @eax to i16*), align 8
  %v3_3a3e3 = load i32, i32* @eax, align 8
  %v4_3a3e3 = trunc i32 %v3_3a3e3 to i16
  %v5_3a3e3 = add i16 %v4_3a3e3, %v2_3a3e3
  %v22_3a3e3 = inttoptr i32 %v3_3a3e3 to i16*
  store i16 %v5_3a3e3, i16* %v22_3a3e3, align 2
  %v0_3a3e6 = load i32, i32* @eax, align 8
  %v1_3a3e6 = load i32, i32* @ebp, align 4
  %v2_3a3e6 = add i32 %v1_3a3e6, -32
  %v3_3a3e6 = inttoptr i32 %v2_3a3e6 to i32*
  %v4_3a3e6 = load i32, i32* %v3_3a3e6, align 4
  %tmp5 = icmp ule i32 %v0_3a3e6, %v4_3a3e6
  %v3_3a3e9 = icmp ne i1 %tmp5, true
  %v5_3a3ec = icmp eq i1 %v3_3a3e9, false
  br i1 %v5_3a3ec, label %bb, label %dec_label_pc_3a3f0

bb:                                               ; preds = %dec_label_pc_3a3e3
  %v1_3a3ee = call i32 @function_3a40c()
  %v0_3a3f0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3a3f0

dec_label_pc_3a3f0:                               ; preds = %bb, %dec_label_pc_3a3e3
  %v0_3a401 = phi i32 [ %v0_3a3f0.pre, %bb ], [ %v1_3a3e6, %dec_label_pc_3a3e3 ]
  %v1_3a3f0 = add i32 %v0_3a401, -28
  %v2_3a3f0 = inttoptr i32 %v1_3a3f0 to i32*
  %v3_3a3f0 = load i32, i32* %v2_3a3f0, align 4
  %v1_3a3f3 = inttoptr i32 %v3_3a3f0 to i32*
  %v2_3a3f3 = load i32, i32* %v1_3a3f3, align 4
  %v1_3a3f5 = add i32 %v0_3a401, -32
  %v2_3a3f5 = inttoptr i32 %v1_3a3f5 to i32*
  %v3_3a3f5 = load i32, i32* %v2_3a3f5, align 4
  %v3_3a3f8 = mul i32 %v3_3a3f5, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_3a3fb = add i32 %v3_3a3f8, %v2_3a3f3
  %v3_3a401 = load i32, i32* %v2_3a3f0, align 4
  %v3_3a407 = call i32 @unknown_56404(i32 %v3_3a401, i32 %v2_3a3fb)
  ret i32 %v3_3a407

; uselistorder directives
  uselistorder i32 ()* @function_3a40c, { 1, 0 }
}

define i32 @function_3a40c() local_unnamed_addr {
dec_label_pc_3a40c:
  %v0_3a40c = load i32, i32* @ebp, align 4
  %v1_3a40c = add i32 %v0_3a40c, -12
  %v2_3a40c = inttoptr i32 %v1_3a40c to i32*
  %v3_3a40c = load i32, i32* %v2_3a40c, align 4
  %v1_3a40f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3a40f = xor i32 %v1_3a40f, %v3_3a40c
  %v3_3a40f = icmp eq i32 %v2_3a40f, 0
  store i32 %v2_3a40f, i32* @eax, align 8
  br i1 %v3_3a40f, label %bb, label %dec_label_pc_3a418

bb:                                               ; preds = %dec_label_pc_3a40c
  %v1_3a416 = call i32 @function_3a41d()
  br label %dec_label_pc_3a418

dec_label_pc_3a418:                               ; preds = %bb, %dec_label_pc_3a40c
  %v2_3a416 = phi i32 [ %v1_3a416, %bb ], [ %v2_3a40f, %dec_label_pc_3a40c ]
  ret i32 %v2_3a416
}

define i32 @function_3a41d() local_unnamed_addr {
dec_label_pc_3a41d:
  %v0_3a421 = load i32, i32* @eax, align 8
  ret i32 %v0_3a421
}

define i32 @_Z11UnserializeI11CDataStream5CTxInEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3a422:
  %v8_3a466 = call i32 @unknown_75b0a(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a477

bb:                                               ; preds = %dec_label_pc_3a422
  %v1_3a475 = call i32 @function_3a47c()
  br label %dec_label_pc_3a477

dec_label_pc_3a477:                               ; preds = %bb, %dec_label_pc_3a422
  %v2_3a475 = phi i32 [ %v1_3a475, %bb ], [ 0, %dec_label_pc_3a422 ]
  ret i32 %v2_3a475

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3a47c() local_unnamed_addr {
dec_label_pc_3a47c:
  %v0_3a47d = load i32, i32* @eax, align 8
  ret i32 %v0_3a47d
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6resizeEjS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a47e:
  %stack_var_-20 = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_3a4a8 = call i32 @unknown_50d2a(i32 %tmp109)
  %v10_3a4ad = icmp ult i32 %v1_3a4a8, %arg2
  %v5_3a4b3 = icmp eq i1 %v10_3a4ad, false
  %v1_3a503 = call i32 @unknown_50d2a(i32 %tmp109)
  br i1 %v5_3a4b3, label %dec_label_pc_3a4fd, label %dec_label_pc_3a4b7

dec_label_pc_3a4b7:                               ; preds = %dec_label_pc_3a47e
  %v2_3a4c7 = sub i32 %arg2, %v1_3a503
  %v2_3a4c9 = ptrtoint i32* %stack_var_-20 to i32
  %v2_3a4d6 = call i32 @unknown_5689e(i32 %v2_3a4c9, i32 %tmp109)
  %v3_3a4e9 = load i32, i32* %stack_var_-20, align 4
  %v4_3a4f6 = call i32 @unknown_75c3a(i32 %tmp109, i32 %v3_3a4e9, i32 %v2_3a4c7, i32 %arg3)
  br label %dec_label_pc_3a535

dec_label_pc_3a4fd:                               ; preds = %dec_label_pc_3a47e
  %tmp114 = icmp ule i32 %v1_3a503, %arg2
  %v3_3a50b = icmp ne i1 %tmp114, true
  %v5_3a50e = icmp eq i1 %v3_3a50b, false
  br i1 %v5_3a50e, label %dec_label_pc_3a535, label %dec_label_pc_3a512

dec_label_pc_3a512:                               ; preds = %dec_label_pc_3a4fd
  %v2_3a515 = load i32, i32* %arg1, align 4
  %v2_3a521 = mul i32 %arg2, 20
  %v2_3a524 = add i32 %v2_3a515, %v2_3a521
  %v2_3a530 = call i32 @unknown_56584(i32 %tmp109, i32 %v2_3a524)
  br label %dec_label_pc_3a535

dec_label_pc_3a535:                               ; preds = %dec_label_pc_3a512, %dec_label_pc_3a4fd, %dec_label_pc_3a4b7
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a541

bb:                                               ; preds = %dec_label_pc_3a535
  %v1_3a53f = call i32 @function_3a546()
  br label %dec_label_pc_3a541

dec_label_pc_3a541:                               ; preds = %bb, %dec_label_pc_3a535
  %v2_3a53f = phi i32 [ %v1_3a53f, %bb ], [ 0, %dec_label_pc_3a535 ]
  ret i32 %v2_3a53f

; uselistorder directives
  uselistorder i32 %tmp109, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @unknown_50d2a, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_3a546() local_unnamed_addr {
dec_label_pc_3a546:
  %v0_3a54a = load i32, i32* @eax, align 8
  ret i32 %v0_3a54a
}

define i32 @_Z11UnserializeI11CDataStream6CTxOutEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3a54b:
  %v8_3a58f = call i32 @unknown_75d63(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a5a0

bb:                                               ; preds = %dec_label_pc_3a54b
  %v1_3a59e = call i32 @function_3a5a5()
  br label %dec_label_pc_3a5a0

dec_label_pc_3a5a0:                               ; preds = %bb, %dec_label_pc_3a54b
  %v2_3a59e = phi i32 [ %v1_3a59e, %bb ], [ 0, %dec_label_pc_3a54b ]
  ret i32 %v2_3a59e

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3a5a5() local_unnamed_addr {
dec_label_pc_3a5a5:
  %v0_3a5a6 = load i32, i32* @eax, align 8
  ret i32 %v0_3a5a6
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclISt6vectorIN11json_spirit9Pair_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a5a8:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a5d6

bb:                                               ; preds = %dec_label_pc_3a5a8
  %v3_3a5d4 = call i32 @function_3a5db(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_3a5d6

dec_label_pc_3a5d6:                               ; preds = %bb, %dec_label_pc_3a5a8
  %v4_3a5d4 = phi i32 [ %v3_3a5d4, %bb ], [ 0, %dec_label_pc_3a5a8 ]
  ret i32 %v4_3a5d4
}

define i32 @function_3a5db(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a5db:
  %v0_3a5dc = load i32, i32* @eax, align 8
  ret i32 %v0_3a5dc
}

define i32 @_ZNK5boost6detail7variant11get_visitorIKxEclISt6vectorIN11json_spirit10Value_implINS7_13Config_vectorISsEEEESaISB_EEEEPS3_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a5de:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a60c

bb:                                               ; preds = %dec_label_pc_3a5de
  %v3_3a60a = call i32 @function_3a611(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_3a60c

dec_label_pc_3a60c:                               ; preds = %bb, %dec_label_pc_3a5de
  %v4_3a60a = phi i32 [ %v3_3a60a, %bb ], [ 0, %dec_label_pc_3a5de ]
  ret i32 %v4_3a60a
}

define i32 @function_3a611(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a611:
  %v0_3a612 = load i32, i32* @eax, align 8
  ret i32 %v0_3a612
}

define i32 @_ZN5boost9addressofIKxEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a613:
  %v0_3a61f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3a61f
}

define i32 @function_3a627(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a627:
  %v0_3a62a = load i32, i32* @ebp, align 4
  %v1_3a62a = add i32 %v0_3a62a, -28
  %v2_3a62a = inttoptr i32 %v1_3a62a to i32*
  %v3_3a62a = load i32, i32* %v2_3a62a, align 4
  %v1_3a631 = add i32 %v0_3a62a, -16
  %v2_3a637 = call i32 @unknown_75ed1(i32 %v1_3a631, i32 %v3_3a62a)
  %v0_3a63c = load i32, i32* @ebp, align 4
  %v1_3a63c = add i32 %v0_3a63c, -16
  %v1_3a642 = call i32 @unknown_75f09(i32 %v1_3a63c)
  %v2_3a652 = call i32 @unknown_75f38(i32 %v1_3a642, i32 0)
  store i32 %v2_3a652, i32* @eax, align 8
  %v0_3a657 = load i32, i32* @ebp, align 4
  %v1_3a657 = add i32 %v0_3a657, -12
  %v2_3a657 = inttoptr i32 %v1_3a657 to i32*
  %v3_3a657 = load i32, i32* %v2_3a657, align 4
  %v1_3a65a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3a65a = xor i32 %v1_3a65a, %v3_3a657
  %v3_3a65a = icmp eq i32 %v2_3a65a, 0
  store i32 %v2_3a65a, i32* @edx, align 4
  br i1 %v3_3a65a, label %bb, label %dec_label_pc_3a663

bb:                                               ; preds = %dec_label_pc_3a627
  %v1_3a661 = call i32 @function_3a668()
  br label %dec_label_pc_3a663

dec_label_pc_3a663:                               ; preds = %bb, %dec_label_pc_3a627
  %v2_3a661 = phi i32 [ %v1_3a661, %bb ], [ %v2_3a652, %dec_label_pc_3a627 ]
  ret i32 %v2_3a661
}

define i32 @function_3a668() local_unnamed_addr {
dec_label_pc_3a668:
  %v0_3a669 = load i32, i32* @eax, align 8
  ret i32 %v0_3a669
}

define i32 @_ZN5boost6detail13addr_impl_refIKbEC1ERS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a66a:
  %v0_3a67c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3a67c
}

define i32 @function_3a686(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a686:
  %v0_3a68d = load i32, i32* @edx, align 4
  %v1_3a68d = load i32, i32* @eax, align 8
  %v2_3a68d = inttoptr i32 %v1_3a68d to i32*
  store i32 %v0_3a68d, i32* %v2_3a68d, align 4
  %v0_3a68f = load i32, i32* @ebp, align 4
  %v1_3a68f = add i32 %v0_3a68f, -12
  %v2_3a68f = inttoptr i32 %v1_3a68f to i32*
  %v3_3a68f = load i32, i32* %v2_3a68f, align 4
  %v1_3a692 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3a692 = xor i32 %v1_3a692, %v3_3a68f
  %v3_3a692 = icmp eq i32 %v2_3a692, 0
  store i32 %v2_3a692, i32* @eax, align 8
  br i1 %v3_3a692, label %bb, label %dec_label_pc_3a69b

bb:                                               ; preds = %dec_label_pc_3a686
  %v1_3a699 = call i32 @function_3a6a0()
  br label %dec_label_pc_3a69b

dec_label_pc_3a69b:                               ; preds = %bb, %dec_label_pc_3a686
  %v2_3a699 = phi i32 [ %v1_3a699, %bb ], [ %v2_3a692, %dec_label_pc_3a686 ]
  ret i32 %v2_3a699
}

define i32 @function_3a6a0() local_unnamed_addr {
dec_label_pc_3a6a0:
  %v0_3a6a1 = load i32, i32* @eax, align 8
  ret i32 %v0_3a6a1
}

define i32 @_ZNK5boost6detail13addr_impl_refIKbEcvRS2_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3a6a2:
  %v2_3a6bc = load i32, i32* %arg1, align 4
  ret i32 %v2_3a6bc
}

define i32 @function_3a6be(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a6be:
  %v0_3a6be = load i32, i32* @ebp, align 4
  %v1_3a6be = add i32 %v0_3a6be, -12
  %v2_3a6be = inttoptr i32 %v1_3a6be to i32*
  %v3_3a6be = load i32, i32* %v2_3a6be, align 4
  %v1_3a6c1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a6c1 = icmp eq i32 %v1_3a6c1, %v3_3a6be
  br i1 %v3_3a6c1, label %bb, label %dec_label_pc_3a6be.dec_label_pc_3a6ca_crit_edge

dec_label_pc_3a6be.dec_label_pc_3a6ca_crit_edge:  ; preds = %dec_label_pc_3a6be
  %v2_3a6c8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3a6ca

bb:                                               ; preds = %dec_label_pc_3a6be
  %v1_3a6c8 = call i32 @function_3a6cf()
  br label %dec_label_pc_3a6ca

dec_label_pc_3a6ca:                               ; preds = %dec_label_pc_3a6be.dec_label_pc_3a6ca_crit_edge, %bb
  %v2_3a6c8 = phi i32 [ %v2_3a6c8.pre, %dec_label_pc_3a6be.dec_label_pc_3a6ca_crit_edge ], [ %v1_3a6c8, %bb ]
  ret i32 %v2_3a6c8

; uselistorder directives
  uselistorder label %dec_label_pc_3a6ca, { 1, 0 }
}

define i32 @function_3a6cf() local_unnamed_addr {
dec_label_pc_3a6cf:
  %v0_3a6d0 = load i32, i32* @eax, align 8
  ret i32 %v0_3a6d0
}

define i32 @_ZN5boost6detail14addressof_implIKbE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a6d1:
  ret i32 %arg1
}

define i32 @function_3a6f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a6f4:
  %v0_3a6f4 = load i32, i32* @edx, align 4
  %v1_3a6f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a6f4 = icmp eq i32 %v1_3a6f4, %v0_3a6f4
  br i1 %v3_3a6f4, label %bb, label %dec_label_pc_3a6f4.dec_label_pc_3a6fd_crit_edge

dec_label_pc_3a6f4.dec_label_pc_3a6fd_crit_edge:  ; preds = %dec_label_pc_3a6f4
  %v2_3a6fb.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3a6fd

bb:                                               ; preds = %dec_label_pc_3a6f4
  %v1_3a6fb = call i32 @function_3a702()
  br label %dec_label_pc_3a6fd

dec_label_pc_3a6fd:                               ; preds = %dec_label_pc_3a6f4.dec_label_pc_3a6fd_crit_edge, %bb
  %v2_3a6fb = phi i32 [ %v2_3a6fb.pre, %dec_label_pc_3a6f4.dec_label_pc_3a6fd_crit_edge ], [ %v1_3a6fb, %bb ]
  ret i32 %v2_3a6fb

; uselistorder directives
  uselistorder label %dec_label_pc_3a6fd, { 1, 0 }
}

define i32 @function_3a702() local_unnamed_addr {
dec_label_pc_3a702:
  %v0_3a703 = load i32, i32* @eax, align 8
  ret i32 %v0_3a703
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSsEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3a704:
  %v0_3a729 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3a729
}

define i32 @function_3a730(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a730:
  %v0_3a730 = load i32, i32* @ebp, align 4
  %v1_3a730 = add i32 %v0_3a730, 1
  store i32 %v1_3a730, i32* @ebp, align 4
  %v1_3a734 = add i32 %v0_3a730, -35
  %v2_3a734 = inttoptr i32 %v1_3a734 to i32*
  %v3_3a734 = load i32, i32* %v2_3a734, align 4
  %v1_3a73a = call i32 @unknown_6d843(i32 %v3_3a734)
  %v0_3a74b = load i32, i32* @ebp, align 4
  %v1_3a74b = add i32 %v0_3a74b, -32
  %v2_3a74b = inttoptr i32 %v1_3a74b to i32*
  %v3_3a74b = load i32, i32* %v2_3a74b, align 4
  %v3_3a751 = call i32 @unknown_7605c(i32 %v3_3a74b, i32 %v1_3a73a, i32 1)
  store i32 %v3_3a751, i32* @eax, align 8
  %v0_3a756 = load i32, i32* @ebp, align 4
  %v1_3a756 = add i32 %v0_3a756, -12
  %v2_3a756 = inttoptr i32 %v1_3a756 to i32*
  %v3_3a756 = load i32, i32* %v2_3a756, align 4
  %v1_3a759 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a759 = icmp eq i32 %v1_3a759, %v3_3a756
  br i1 %v3_3a759, label %bb, label %dec_label_pc_3a762

bb:                                               ; preds = %dec_label_pc_3a730
  %v1_3a760 = call i32 @function_3a767()
  br label %dec_label_pc_3a762

dec_label_pc_3a762:                               ; preds = %bb, %dec_label_pc_3a730
  %v4_3a760 = phi i32 [ %v1_3a760, %bb ], [ %v3_3a751, %dec_label_pc_3a730 ]
  ret i32 %v4_3a760
}

define i32 @function_3a767() local_unnamed_addr {
dec_label_pc_3a767:
  %v0_3a768 = load i32, i32* @eax, align 8
  ret i32 %v0_3a768
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSD_EENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_3a769:
  %eax.global-to-local = alloca i32, align 4
  %v2_3a76a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_3a76a
}

define i32 @function_3a78e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a78e:
  %v0_3a78e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3a794 = load i32, i32* @ebp, align 4
  %v2_3a794 = add i32 %v1_3a794, -12
  %v3_3a794 = inttoptr i32 %v2_3a794 to i32*
  store i32 %v0_3a78e, i32* %v3_3a794, align 4
  %v0_3a799 = load i32, i32* @ebp, align 4
  %v1_3a799 = add i32 %v0_3a799, -36
  %v2_3a799 = inttoptr i32 %v1_3a799 to i32*
  %v3_3a799 = load i32, i32* %v2_3a799, align 4
  %v1_3a79f = call i32 @unknown_6d916(i32 %v3_3a799)
  %v0_3a7b0 = load i32, i32* @ebp, align 4
  %v1_3a7b0 = add i32 %v0_3a7b0, -32
  %v2_3a7b0 = inttoptr i32 %v1_3a7b0 to i32*
  %v3_3a7b0 = load i32, i32* %v2_3a7b0, align 4
  %v3_3a7b6 = call i32 @unknown_7610b(i32 %v3_3a7b0, i32 %v1_3a79f, i32 1)
  store i32 %v3_3a7b6, i32* @eax, align 8
  %v0_3a7bb = load i32, i32* @ebp, align 4
  %v1_3a7bb = add i32 %v0_3a7bb, -12
  %v2_3a7bb = inttoptr i32 %v1_3a7bb to i32*
  %v3_3a7bb = load i32, i32* %v2_3a7bb, align 4
  %v1_3a7be = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a7be = icmp eq i32 %v1_3a7be, %v3_3a7bb
  br i1 %v3_3a7be, label %bb, label %dec_label_pc_3a7c7

bb:                                               ; preds = %dec_label_pc_3a78e
  %v1_3a7c5 = call i32 @function_3a7cc()
  br label %dec_label_pc_3a7c7

dec_label_pc_3a7c7:                               ; preds = %bb, %dec_label_pc_3a78e
  %v2_3a7c5 = phi i32 [ %v1_3a7c5, %bb ], [ %v3_3a7b6, %dec_label_pc_3a78e ]
  ret i32 %v2_3a7c5
}

define i32 @function_3a7cc() local_unnamed_addr {
dec_label_pc_3a7cc:
  %v0_3a7cd = load i32, i32* @eax, align 8
  ret i32 %v0_3a7cd
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvSI_EENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a7ce:
  ret i32 %arg1
}

define i32 @function_3a7d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a7d8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3a7d8 = load i32, i32* @ebp, align 4
  %v0_3a7dc = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3a7dc = or i32 %v0_3a7dc, 137
  store i32 %v11_3a7dc, i32* %eax.global-to-local, align 8
  %v0_3a7df = load i32, i32* @ecx, align 8
  %v1_3a7df = add i32 %v0_3a7df, -1
  store i32 %v1_3a7df, i32* @ecx, align 8
  %v1_3a7e1 = add i32 %v0_3a7d8, 4
  store i32 %v1_3a7e1, i32* %ebp.global-to-local, align 4
  %v1_3a7e2 = add i32 %v0_3a7df, 1166793796
  %v2_3a7e2 = inttoptr i32 %v1_3a7e2 to i8*
  %v3_3a7e2 = load i8, i8* %v2_3a7e2, align 1
  %v5_3a7e2 = trunc i32 %v1_3a7df to i8
  %v8_3a7e2 = add i8 %v3_3a7e2, %v5_3a7e2
  %v28_3a7e2 = icmp ult i8 %v8_3a7e2, %v3_3a7e2
  store i1 %v28_3a7e2, i1* %cf.global-to-local, align 1
  store i8 %v8_3a7e2, i8* %v2_3a7e2, align 1
  %v0_3a7e8 = load i32, i32* %eax.global-to-local, align 8
  %v1_3a7e8 = trunc i32 %v0_3a7e8 to i8
  %v2_3a7e8 = load i1, i1* %cf.global-to-local, align 1
  %v3_3a7e8 = zext i1 %v2_3a7e8 to i8
  %v4_3a7e8 = add i8 %v1_3a7e8, -119
  %v5_3a7e8 = add i8 %v4_3a7e8, %v3_3a7e8
  %v22_3a7e8 = icmp ule i8 %v5_3a7e8, %v1_3a7e8
  %v23_3a7e8 = icmp ugt i8 %v1_3a7e8, 118
  %v24_3a7e8 = select i1 %v2_3a7e8, i1 %v22_3a7e8, i1 %v23_3a7e8
  store i1 %v24_3a7e8, i1* %cf.global-to-local, align 1
  %v25_3a7e8 = zext i8 %v5_3a7e8 to i32
  %v27_3a7e8 = and i32 %v0_3a7e8, -256
  %v28_3a7e8 = or i32 %v25_3a7e8, %v27_3a7e8
  store i32 %v28_3a7e8, i32* %eax.global-to-local, align 8
  %v0_3a7ea = load i32, i32* %ebp.global-to-local, align 4
  %v1_3a7ea = add i32 %v0_3a7ea, 1
  store i32 %v1_3a7ea, i32* @ebp, align 4
  %v3_3a7eb = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_3a7eb = fpext float %v3_3a7eb to x86_fp80
  %v5_3a7eb = load x86_fp80, x86_fp80* @st0, align 4
  %v6_3a7eb = fmul x86_fp80 %v4_3a7eb, %v5_3a7eb
  store x86_fp80 %v6_3a7eb, x86_fp80* @st0, align 4
  %v0_3a7ed = load i32, i32* @edx, align 4
  %v1_3a7ed = and i32 %v0_3a7ed, -65281
  %v2_3a7ed = or i32 %v1_3a7ed, 17664
  store i32 %v2_3a7ed, i32* @edx, align 4
  %v1_3a7ef = add i32 %v28_3a7e8, -1587161275
  %v2_3a7ef = inttoptr i32 %v1_3a7ef to i8*
  %v3_3a7ef = load i8, i8* %v2_3a7ef, align 1
  %v4_3a7ef = load i32, i32* @ecx, align 8
  %v5_3a7ef = trunc i32 %v4_3a7ef to i8
  %v7_3a7ef = zext i1 %v24_3a7e8 to i8
  %v8_3a7ef = sub i8 %v3_3a7ef, %v5_3a7ef
  %v9_3a7ef = add i8 %v8_3a7ef, %v7_3a7ef
  %v19_3a7ef = sub i8 %v8_3a7ef, %v7_3a7ef
  %v20_3a7ef = icmp ult i8 %v3_3a7ef, %v19_3a7ef
  %v21_3a7ef = icmp ne i8 %v5_3a7ef, -1
  %v22_3a7ef = or i1 %v21_3a7ef, %v20_3a7ef
  %v23_3a7ef = icmp ult i8 %v3_3a7ef, %v5_3a7ef
  %v24_3a7ef = select i1 %v24_3a7e8, i1 %v22_3a7ef, i1 %v23_3a7ef
  store i1 %v24_3a7ef, i1* %cf.global-to-local, align 1
  store i8 %v9_3a7ef, i8* %v2_3a7ef, align 1
  %v0_3a7f5 = load i32, i32* %eax.global-to-local, align 8
  %v1_3a7f5 = trunc i32 %v0_3a7f5 to i8
  %v2_3a7f5 = load i1, i1* %cf.global-to-local, align 1
  %v3_3a7f5 = zext i1 %v2_3a7f5 to i8
  %v4_3a7f5 = add i8 %v3_3a7f5, %v1_3a7f5
  %v19_3a7f5 = icmp ule i8 %v4_3a7f5, %v1_3a7f5
  %v21_3a7f5 = icmp eq i1 %v2_3a7f5, %v19_3a7f5
  store i1 %v21_3a7f5, i1* %cf.global-to-local, align 1
  %v22_3a7f5 = zext i8 %v4_3a7f5 to i32
  %v24_3a7f5 = and i32 %v0_3a7f5, -256
  %v25_3a7f5 = or i32 %v22_3a7f5, %v24_3a7f5
  store i32 %v25_3a7f5, i32* %eax.global-to-local, align 8
  %v1_3a7f7 = inttoptr i32 %v25_3a7f5 to i8*
  %v2_3a7f7 = load i8, i8* %v1_3a7f7, align 1
  %v5_3a7f7 = add i8 %v2_3a7f7, %v4_3a7f5
  store i8 %v5_3a7f7, i8* %v1_3a7f7, align 1
  %v0_3a7f9 = load i32, i32* %eax.global-to-local, align 8
  %v1_3a7f9 = load i32, i32* @ebp, align 4
  %v2_3a7f9 = add i32 %v1_3a7f9, -12
  %v3_3a7f9 = inttoptr i32 %v2_3a7f9 to i32*
  store i32 %v0_3a7f9, i32* %v3_3a7f9, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3a7fe = load i32, i32* @ebp, align 4
  %v1_3a7fe = add i32 %v0_3a7fe, -36
  %v2_3a7fe = inttoptr i32 %v1_3a7fe to i32*
  %v3_3a7fe = load i32, i32* %v2_3a7fe, align 4
  store i32 %v3_3a7fe, i32* %eax.global-to-local, align 8
  %v1_3a804 = call i32 @unknown_6d9e9(i32 %v3_3a7fe)
  store i32 %v1_3a804, i32* %eax.global-to-local, align 8
  %v0_3a815 = load i32, i32* @ebp, align 4
  %v1_3a815 = add i32 %v0_3a815, -32
  %v2_3a815 = inttoptr i32 %v1_3a815 to i32*
  %v3_3a815 = load i32, i32* %v2_3a815, align 4
  store i32 %v3_3a815, i32* %eax.global-to-local, align 8
  ret i32 %v3_3a815

; uselistorder directives
  uselistorder i8 %v4_3a7f5, { 0, 2, 1 }
  uselistorder i8 %v1_3a7f5, { 1, 0 }
  uselistorder i8 %v8_3a7ef, { 1, 0 }
  uselistorder i8 %v7_3a7ef, { 1, 0 }
  uselistorder i8 %v5_3a7ef, { 1, 0, 2 }
  uselistorder i1 %v24_3a7e8, { 1, 0, 2 }
  uselistorder i8 %v5_3a7e8, { 1, 0 }
  uselistorder i8 %v3_3a7e2, { 1, 0 }
  uselistorder i32 17664, { 1, 2, 7, 6, 3, 4, 5, 0 }
}

define i32 @function_3a81e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a81e:
  %v0_3a81e = load i32, i32* @eax, align 8
  %v4_3a81e = mul i32 %v0_3a81e, 2
  store i32 %v4_3a81e, i32* @eax, align 8
  %v0_3a820 = load i32, i32* @ebp, align 4
  %v1_3a820 = add i32 %v0_3a820, -12
  %v2_3a820 = inttoptr i32 %v1_3a820 to i32*
  %v3_3a820 = load i32, i32* %v2_3a820, align 4
  %v1_3a823 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a823 = icmp eq i32 %v1_3a823, %v3_3a820
  br i1 %v3_3a823, label %bb, label %dec_label_pc_3a82c

bb:                                               ; preds = %dec_label_pc_3a81e
  %v1_3a82a = call i32 @function_3a831()
  br label %dec_label_pc_3a82c

dec_label_pc_3a82c:                               ; preds = %bb, %dec_label_pc_3a81e
  %v2_3a82a = phi i32 [ %v1_3a82a, %bb ], [ %v4_3a81e, %dec_label_pc_3a81e ]
  ret i32 %v2_3a82a

; uselistorder directives
  uselistorder i32 %v4_3a81e, { 1, 0 }
}

define i32 @function_3a831() local_unnamed_addr {
dec_label_pc_3a831:
  %v0_3a832 = load i32, i32* @eax, align 8
  ret i32 %v0_3a832
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvbEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3a833:
  %v1_3a869 = call i32 @unknown_6dabc(i32 %arg3)
  %v3_3a880 = call i32 @unknown_76285(i32 %arg2, i32 %v1_3a869, i32 1)
  store i32 %v3_3a880, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a891

bb:                                               ; preds = %dec_label_pc_3a833
  %v1_3a88f = call i32 @function_3a896()
  br label %dec_label_pc_3a891

dec_label_pc_3a891:                               ; preds = %bb, %dec_label_pc_3a833
  %v2_3a88f = phi i32 [ %v1_3a88f, %bb ], [ %v3_3a880, %dec_label_pc_3a833 ]
  ret i32 %v2_3a88f
}

define i32 @function_3a896() local_unnamed_addr {
dec_label_pc_3a896:
  %v0_3a897 = load i32, i32* @eax, align 8
  ret i32 %v0_3a897
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvxEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a898:
  ret i32 %arg3
}

define i32 @function_3a8b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a8b0:
  %v0_3a8b0 = load i32, i32* @ebp, align 4
  %v1_3a8b0 = add i32 %v0_3a8b0, 20
  %v2_3a8b0 = inttoptr i32 %v1_3a8b0 to i32*
  %v3_3a8b0 = load i32, i32* %v2_3a8b0, align 4
  %v2_3a8b3 = add i32 %v0_3a8b0, -40
  %v3_3a8b3 = inttoptr i32 %v2_3a8b3 to i32*
  store i32 %v3_3a8b0, i32* %v3_3a8b3, align 4
  %v0_3a8b6 = load i32, i32* @ebp, align 4
  %v1_3a8b6 = add i32 %v0_3a8b6, 24
  %v2_3a8b6 = inttoptr i32 %v1_3a8b6 to i8*
  %v3_3a8b6 = load i8, i8* %v2_3a8b6, align 1
  %v3_3a8ba = add i32 %v0_3a8b6, -41
  %v4_3a8ba = inttoptr i32 %v3_3a8ba to i8*
  store i8 %v3_3a8b6, i8* %v4_3a8ba, align 1
  %v0_3a8bd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3a8c3 = load i32, i32* @ebp, align 4
  %v2_3a8c3 = add i32 %v1_3a8c3, -12
  %v3_3a8c3 = inttoptr i32 %v2_3a8c3 to i32*
  store i32 %v0_3a8bd, i32* %v3_3a8c3, align 4
  %v0_3a8c8 = load i32, i32* @ebp, align 4
  %v1_3a8c8 = add i32 %v0_3a8c8, -36
  %v2_3a8c8 = inttoptr i32 %v1_3a8c8 to i32*
  %v3_3a8c8 = load i32, i32* %v2_3a8c8, align 4
  %v1_3a8ce = call i32 @unknown_6db84(i32 %v3_3a8c8)
  %v0_3a8df = load i32, i32* @ebp, align 4
  %v1_3a8df = add i32 %v0_3a8df, -32
  %v2_3a8df = inttoptr i32 %v1_3a8df to i32*
  %v3_3a8df = load i32, i32* %v2_3a8df, align 4
  %v3_3a8e5 = call i32 @unknown_7633a(i32 %v3_3a8df, i32 %v1_3a8ce, i32 1)
  store i32 %v3_3a8e5, i32* @eax, align 8
  %v0_3a8ea = load i32, i32* @ebp, align 4
  %v1_3a8ea = add i32 %v0_3a8ea, -12
  %v2_3a8ea = inttoptr i32 %v1_3a8ea to i32*
  %v3_3a8ea = load i32, i32* %v2_3a8ea, align 4
  %v1_3a8ed = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a8ed = icmp eq i32 %v1_3a8ed, %v3_3a8ea
  br i1 %v3_3a8ed, label %bb, label %dec_label_pc_3a8f6

bb:                                               ; preds = %dec_label_pc_3a8b0
  %v1_3a8f4 = call i32 @function_3a8fb()
  br label %dec_label_pc_3a8f6

dec_label_pc_3a8f6:                               ; preds = %bb, %dec_label_pc_3a8b0
  %v2_3a8f4 = phi i32 [ %v1_3a8f4, %bb ], [ %v3_3a8e5, %dec_label_pc_3a8b0 ]
  ret i32 %v2_3a8f4

; uselistorder directives
  uselistorder i32 -41, { 0, 7, 2, 8, 5, 6, 15, 9, 11, 12, 3, 13, 14, 4, 1, 10 }
}

define i32 @function_3a8fb() local_unnamed_addr {
dec_label_pc_3a8fb:
  %v0_3a8fc = load i32, i32* @eax, align 8
  ret i32 %v0_3a8fc
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS6_13Config_vectorISsEEEESaISA_EEEENS4_IS5_INS6_10Value_implIS9_EESaISF_EEEEbxdNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E17convert_copy_intoEPvdEENT_11result_typeEiRSN_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3a8fd:
  %v1_3a933 = call i32 @unknown_6dc4d(i32 %arg3)
  %v3_3a94a = call i32 @unknown_763e9(i32 %arg2, i32 %v1_3a933, i32 1)
  store i32 %v3_3a94a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a95b

bb:                                               ; preds = %dec_label_pc_3a8fd
  %v1_3a959 = call i32 @function_3a960()
  br label %dec_label_pc_3a95b

dec_label_pc_3a95b:                               ; preds = %bb, %dec_label_pc_3a8fd
  %v2_3a959 = phi i32 [ %v1_3a959, %bb ], [ %v3_3a94a, %dec_label_pc_3a8fd ]
  ret i32 %v2_3a959
}

define i32 @function_3a960() local_unnamed_addr {
dec_label_pc_3a960:
  %v0_3a961 = load i32, i32* @eax, align 8
  ret i32 %v0_3a961
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEEaSERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a962:
  %v1_3a985 = call i32 @unknown_712b2(i32 %arg2)
  ret i32 %v1_3a985
}

define i32 @function_3a98a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a98a:
  %v0_3a98a = load i32, i32* @eax, align 8
  %v0_3a98e = load i32, i32* @ebp, align 4
  %v1_3a98e = add i32 %v0_3a98e, -28
  %v2_3a98e = inttoptr i32 %v1_3a98e to i32*
  %v3_3a98e = load i32, i32* %v2_3a98e, align 4
  %v2_3a994 = call i32 @unknown_76498(i32 %v3_3a98e, i32 %v0_3a98a)
  %v0_3a999 = load i32, i32* @ebp, align 4
  %v1_3a999 = add i32 %v0_3a999, -28
  %v2_3a999 = inttoptr i32 %v1_3a999 to i32*
  %v3_3a999 = load i32, i32* %v2_3a999, align 4
  store i32 %v3_3a999, i32* @eax, align 8
  %v1_3a99c = add i32 %v0_3a999, -12
  %v2_3a99c = inttoptr i32 %v1_3a99c to i32*
  %v3_3a99c = load i32, i32* %v2_3a99c, align 4
  %v1_3a99f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3a99f = icmp eq i32 %v1_3a99f, %v3_3a99c
  br i1 %v3_3a99f, label %bb, label %dec_label_pc_3a9a8

bb:                                               ; preds = %dec_label_pc_3a98a
  %v1_3a9a6 = call i32 @function_3a9ad()
  br label %dec_label_pc_3a9a8

dec_label_pc_3a9a8:                               ; preds = %bb, %dec_label_pc_3a98a
  %v2_3a9a6 = phi i32 [ %v1_3a9a6, %bb ], [ %v3_3a999, %dec_label_pc_3a98a ]
  ret i32 %v2_3a9a6
}

define i32 @function_3a9ad() local_unnamed_addr {
dec_label_pc_3a9ad:
  %v0_3a9ae = load i32, i32* @eax, align 8
  ret i32 %v0_3a9ae
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEEaSERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a9b0:
  %v1_3a9d3 = call i32 @unknown_71336(i32 %arg2)
  %v2_3a9e2 = call i32 @unknown_76530(i32 %arg1, i32 %v1_3a9d3)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3a9f6

bb:                                               ; preds = %dec_label_pc_3a9b0
  %v1_3a9f4 = call i32 @function_3a9fb()
  br label %dec_label_pc_3a9f6

dec_label_pc_3a9f6:                               ; preds = %bb, %dec_label_pc_3a9b0
  %v2_3a9f4 = phi i32 [ %v1_3a9f4, %bb ], [ %arg1, %dec_label_pc_3a9b0 ]
  ret i32 %v2_3a9f4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_3a9fb() local_unnamed_addr {
dec_label_pc_3a9fb:
  %v0_3a9fc = load i32, i32* @eax, align 8
  ret i32 %v0_3a9fc
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implISsEEvRKT_N4mpl_5bool_ILb0EEESR_NSQ_ILb1EEE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3a9fe:
  %v2_3aa36 = load i32, i32* %arg1, align 4
  %v1_3aa3b = call i32 @unknown_57b28(i32 %v2_3aa36)
  %v2_3aa43 = load i32, i32* %arg1, align 4
  %v1_3aa45 = add i32 %v2_3aa43, 4
  %v1_3aa4b = call i32 @unknown_5cf08(i32 %v1_3aa45)
  %v1_3aa5d = call i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 4)
  %v1_3aa64 = icmp eq i32 %v1_3aa5d, 0
  br i1 %v1_3aa64, label %bb, label %dec_label_pc_3aa68

bb:                                               ; preds = %dec_label_pc_3a9fe
  %v1_3aa66 = call i32 @function_3aa77()
  br label %dec_label_pc_3aa68

dec_label_pc_3aa68:                               ; preds = %bb, %dec_label_pc_3a9fe
  ret i32 %arg2
}

define i32 @function_3aa77() local_unnamed_addr {
dec_label_pc_3aa77:
  %v0_3aa77 = load i32, i32* @ebp, align 4
  %v1_3aa77 = add i32 %v0_3aa77, -44
  %v2_3aa77 = inttoptr i32 %v1_3aa77 to i32*
  %v3_3aa77 = load i32, i32* %v2_3aa77, align 4
  ret i32 %v3_3aa77
}

define i32 @function_3aa7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3aa7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3aa7e = load i32, i32* @ebp, align 4
  %v1_3aa7e = add i32 %v0_3aa7e, 1
  store i32 %v1_3aa7e, i32* @ebp, align 4
  %v0_3aa7f = load i32, i32* @eax, align 8
  %v1_3aa7f = trunc i32 %v0_3aa7f to i8
  %not. = icmp ugt i8 %v1_3aa7f, -118
  %v3_3aa7f = urem i8 %v1_3aa7f, -117
  %v4_3aa7f = zext i8 %v3_3aa7f to i32
  %v6_3aa7f = and i32 %v0_3aa7f, -65536
  %v10_3aa7f = select i1 %not., i32 256, i32 0
  %v11_3aa7f = or i32 %v4_3aa7f, %v6_3aa7f
  %v12_3aa7f = or i32 %v11_3aa7f, %v10_3aa7f
  store i32 %v12_3aa7f, i32* %eax.global-to-local, align 8
  %v0_3aa81 = load i32, i32* @ecx, align 8
  %v1_3aa81 = add i32 %v0_3aa81, -1996217260
  %v2_3aa81 = inttoptr i32 %v1_3aa81 to i8*
  %v3_3aa81 = load i8, i8* %v2_3aa81, align 1
  %v5_3aa81 = trunc i32 %v0_3aa81 to i8
  %v6_3aa81 = add i8 %v3_3aa81, %v5_3aa81
  store i8 %v6_3aa81, i8* %v2_3aa81, align 1
  %v0_3aa87 = load i32, i32* %eax.global-to-local, align 8
  %v2_3aa87 = add i32 %v0_3aa87, 36
  %v16_3aa87 = and i32 %v2_3aa87, 255
  %v18_3aa87 = and i32 %v0_3aa87, -256
  %v19_3aa87 = or i32 %v16_3aa87, %v18_3aa87
  store i32 %v19_3aa87, i32* %eax.global-to-local, align 8
  %v2_3aa89 = call i32 @unknown_5efd0(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v2_3aa89, i32* %eax.global-to-local, align 8
  %v0_3aa8e = load i32, i32* @ebp, align 4
  %v1_3aa8e = add i32 %v0_3aa8e, -28
  %v2_3aa8e = inttoptr i32 %v1_3aa8e to i32*
  %v3_3aa8e = load i32, i32* %v2_3aa8e, align 4
  store i32 %v3_3aa8e, i32* %eax.global-to-local, align 8
  %v1_3aa91 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3aa91 = xor i32 %v1_3aa91, %v3_3aa8e
  %v3_3aa91 = icmp eq i32 %v2_3aa91, 0
  store i32 %v2_3aa91, i32* @eax, align 8
  br i1 %v3_3aa91, label %bb, label %dec_label_pc_3aa9a

bb:                                               ; preds = %dec_label_pc_3aa7e
  %v1_3aa98 = call i32 @function_3ab04()
  store i32 %v1_3aa98, i32* @eax, align 8
  br label %dec_label_pc_3aa9a

dec_label_pc_3aa9a:                               ; preds = %bb, %dec_label_pc_3aa7e
  %v0_3aa9a = call i32 @function_3aaff()
  store i32 %v0_3aa9a, i32* %eax.global-to-local, align 8
  ret i32 %v0_3aa9a

; uselistorder directives
  uselistorder i32 %v0_3aa87, { 1, 0 }
  uselistorder i8 %v1_3aa7f, { 1, 0 }
}

define i32 @function_3aac6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3aac6:
  %v1_3aacf = call i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 1)
  %v0_3aad4 = load i32, i32* @ebp, align 4
  %v1_3aad4 = add i32 %v0_3aad4, -44
  %v2_3aad4 = inttoptr i32 %v1_3aad4 to i32*
  %v3_3aad4 = load i32, i32* %v2_3aad4, align 4
  %v1_3aad7 = inttoptr i32 %v3_3aad4 to i32*
  %v2_3aad7 = load i32, i32* %v1_3aad7, align 4
  %v2_3aae4 = call i32 @unknown_5efd0(i32 %v2_3aad7, i32 3)
  ret i32 %v2_3aae4
}

define i32 @function_3aaef() local_unnamed_addr {
dec_label_pc_3aaef:
  %eax.global-to-local = alloca i32, align 4
  %v0_3aaef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3aaef
}

define i32 @function_3aaff() local_unnamed_addr {
dec_label_pc_3aaff:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3ab04() local_unnamed_addr {
dec_label_pc_3ab04:
  %v0_3ab0b = load i32, i32* @eax, align 8
  ret i32 %v0_3ab0b
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implISA_EEvRKT_N4mpl_5bool_ILb0EEESR_NSQ_ILb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ab0c:
  ret i32 %arg1
}

define i32 @function_3ab1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ab1a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3ab1a = load i32, i32* @eax, align 8
  %v1_3ab1a = trunc i32 %v0_3ab1a to i8
  %not. = icmp ugt i8 %v1_3ab1a, -118
  %v3_3ab1a = urem i8 %v1_3ab1a, -117
  %v6_3ab1a = and i32 %v0_3ab1a, -65536
  %v10_3ab1a = select i1 %not., i32 256, i32 0
  %v12_3ab1a = or i32 %v10_3ab1a, %v6_3ab1a
  %v0_3ab1c = load i32, i32* @ebp, align 4
  %v2_3ab1d = or i8 %v3_3ab1a, -119
  %v8_3ab1d = zext i8 %v2_3ab1d to i32
  %v11_3ab1d = or i32 %v12_3ab1a, %v8_3ab1d
  store i32 %v11_3ab1d, i32* %eax.global-to-local, align 8
  %v1_3ab1f = add i32 %v0_3ab1c, 2
  store i32 %v1_3ab1f, i32* %ebp.global-to-local, align 4
  %v2_3ab20 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_3ab20 = udiv i8 %v2_3ab20, 2
  %v4_3ab20 = shl i8 %v2_3ab20, 7
  %v5_3ab20 = or i8 %v3_3ab20, %v4_3ab20
  %v6_3ab20 = load i32, i32* @edi, align 4
  %v7_3ab20 = inttoptr i32 %v6_3ab20 to i8*
  store i8 %v5_3ab20, i8* %v7_3ab20, align 1
  %v8_3ab20 = urem i8 %v2_3ab20, 2
  %v9_3ab20 = icmp ne i8 %v8_3ab20, 0
  store i1 %v9_3ab20, i1* %cf.global-to-local, align 1
  %v0_3ab24 = load i32, i32* %eax.global-to-local, align 8
  %v1_3ab24 = add i32 %v0_3ab24, -1240477883
  %v2_3ab24 = inttoptr i32 %v1_3ab24 to i8*
  %v3_3ab24 = load i8, i8* %v2_3ab24, align 1
  %v4_3ab24 = load i32, i32* @ecx, align 8
  %v5_3ab24 = trunc i32 %v4_3ab24 to i8
  %v7_3ab24 = zext i1 %v9_3ab20 to i8
  %v8_3ab24 = add i8 %v5_3ab24, %v3_3ab24
  %v9_3ab24 = add i8 %v8_3ab24, %v7_3ab24
  %v27_3ab24 = icmp ule i8 %v9_3ab24, %v3_3ab24
  %v28_3ab24 = icmp ult i8 %v8_3ab24, %v3_3ab24
  %v29_3ab24 = select i1 %v9_3ab20, i1 %v27_3ab24, i1 %v28_3ab24
  store i1 %v29_3ab24, i1* %cf.global-to-local, align 1
  store i8 %v9_3ab24, i8* %v2_3ab24, align 1
  %v0_3ab2a = load i32, i32* %ebp.global-to-local, align 4
  %v0_3ab2b = load i32, i32* %eax.global-to-local, align 8
  %v1_3ab2b = trunc i32 %v0_3ab2b to i8
  %v2_3ab2b = load i1, i1* %cf.global-to-local, align 1
  %v3_3ab2b = zext i1 %v2_3ab2b to i8
  %v4_3ab2b = add i8 %v1_3ab2b, -120
  %v5_3ab2b = add i8 %v4_3ab2b, %v3_3ab2b
  %v22_3ab2b = icmp ule i8 %v5_3ab2b, %v1_3ab2b
  %v23_3ab2b = icmp ugt i8 %v1_3ab2b, 119
  %v24_3ab2b = select i1 %v2_3ab2b, i1 %v22_3ab2b, i1 %v23_3ab2b
  store i1 %v24_3ab2b, i1* %cf.global-to-local, align 1
  %v25_3ab2b = zext i8 %v5_3ab2b to i32
  %v27_3ab2b = and i32 %v0_3ab2b, -256
  %v28_3ab2b = or i32 %v25_3ab2b, %v27_3ab2b
  store i32 %v28_3ab2b, i32* %eax.global-to-local, align 8
  %v1_3ab2d = add i32 %v0_3ab2a, 2
  store i32 %v1_3ab2d, i32* %ebp.global-to-local, align 4
  %v1_3ab2f = add i32 %v0_3ab2a, 26
  %v2_3ab2f = inttoptr i32 %v1_3ab2f to i8*
  %v3_3ab2f = load i8, i8* %v2_3ab2f, align 1
  %v4_3ab2f = zext i8 %v3_3ab2f to i32
  store i32 %v4_3ab2f, i32* %eax.global-to-local, align 8
  %v3_3ab33 = add i32 %v0_3ab2a, -49
  %v4_3ab33 = inttoptr i32 %v3_3ab33 to i8*
  store i8 %v3_3ab2f, i8* %v4_3ab33, align 1
  %v0_3ab36 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3ab3c = load i32, i32* %ebp.global-to-local, align 4
  %v2_3ab3c = add i32 %v1_3ab3c, -28
  %v3_3ab3c = inttoptr i32 %v2_3ab3c to i32*
  store i32 %v0_3ab36, i32* %v3_3ab3c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3ab41 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3ab41 = add i32 %v0_3ab41, -44
  %v2_3ab41 = inttoptr i32 %v1_3ab41 to i32*
  %v3_3ab41 = load i32, i32* %v2_3ab41, align 4
  store i32 %v3_3ab41, i32* %eax.global-to-local, align 8
  %v1_3ab44 = inttoptr i32 %v3_3ab41 to i32*
  %v2_3ab44 = load i32, i32* %v1_3ab44, align 4
  store i32 %v2_3ab44, i32* %eax.global-to-local, align 8
  %v1_3ab49 = call i32 @unknown_57c36(i32 %v2_3ab44)
  store i32 %v1_3ab49, i32* %eax.global-to-local, align 8
  %v0_3ab4e = load i32, i32* %ebp.global-to-local, align 4
  %v1_3ab4e = add i32 %v0_3ab4e, -44
  %v2_3ab4e = inttoptr i32 %v1_3ab4e to i32*
  %v3_3ab4e = load i32, i32* %v2_3ab4e, align 4
  store i32 %v3_3ab4e, i32* %eax.global-to-local, align 8
  %v1_3ab51 = inttoptr i32 %v3_3ab4e to i32*
  %v2_3ab51 = load i32, i32* %v1_3ab51, align 4
  %v1_3ab53 = add i32 %v2_3ab51, 4
  %v5_3ab53 = icmp ugt i32 %v2_3ab51, -5
  store i1 %v5_3ab53, i1* %cf.global-to-local, align 1
  store i32 %v1_3ab53, i32* %eax.global-to-local, align 8
  %v1_3ab59 = call i32 @unknown_5d016(i32 %v1_3ab53)
  store i32 %v1_3ab59, i32* @eax, align 8
  %v2_3ab6b = call i32 @function_40838(i32 4, i32 %v1_3ab59)
  store i32 %v2_3ab6b, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  ret i32 %v2_3ab6b

; uselistorder directives
  uselistorder i8 %v5_3ab2b, { 1, 0 }
  uselistorder i8 %v9_3ab24, { 1, 0 }
  uselistorder i8 %v8_3ab24, { 1, 0 }
  uselistorder i8 %v3_3ab24, { 1, 2, 0 }
  uselistorder i1 %v9_3ab20, { 1, 0, 2 }
  uselistorder i8 %v2_3ab20, { 1, 2, 0 }
  uselistorder i8 %v1_3ab1a, { 1, 0 }
  uselistorder i32 -5, { 0, 2, 1, 3, 4, 5 }
  uselistorder i8 -120, { 1, 2, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 5, 0, 8, 1, 6, 7 }
  uselistorder i8 -117, { 3, 1, 2, 4, 0 }
}

define i32 @function_3ab75(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ab75:
  %v0_3ab75 = load i1, i1* @pf, align 1
  %v1_3ab75 = icmp eq i1 %v0_3ab75, false
  br i1 %v1_3ab75, label %bb, label %dec_label_pc_3ab75.dec_label_pc_3ab7b_crit_edge

dec_label_pc_3ab75.dec_label_pc_3ab7b_crit_edge:  ; preds = %dec_label_pc_3ab75
  br label %dec_label_pc_3ab7b

bb:                                               ; preds = %dec_label_pc_3ab75
  %v2_3ab75 = call i32 @function_448d7bc0()
  br label %dec_label_pc_3ab7b

dec_label_pc_3ab7b:                               ; preds = %dec_label_pc_3ab75.dec_label_pc_3ab7b_crit_edge, %bb
  %v0_3ab7d = load i32, i32* @ebx, align 4
  %v1_3ab80 = call i32 @unknown_6f6da(i32 %v0_3ab7d)
  %v0_3ab85 = load i32, i32* @ebp, align 4
  %v1_3ab85 = add i32 %v0_3ab85, -44
  %v2_3ab85 = inttoptr i32 %v1_3ab85 to i32*
  %v3_3ab85 = load i32, i32* %v2_3ab85, align 4
  %v1_3ab88 = add i32 %v3_3ab85, 4
  %v2_3ab88 = inttoptr i32 %v1_3ab88 to i32*
  %v3_3ab88 = load i32, i32* %v2_3ab88, align 4
  %v1_3ab8e = inttoptr i32 %v3_3ab85 to i32*
  %v2_3ab8e = load i32, i32* %v1_3ab8e, align 4
  %v2_3ab97 = call i32 @unknown_5f0de(i32 %v2_3ab8e, i32 %v3_3ab88)
  %v0_3ab9c = load i32, i32* @ebp, align 4
  %v1_3ab9c = add i32 %v0_3ab9c, -28
  %v2_3ab9c = inttoptr i32 %v1_3ab9c to i32*
  %v3_3ab9c = load i32, i32* %v2_3ab9c, align 4
  %v1_3ab9f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3ab9f = xor i32 %v1_3ab9f, %v3_3ab9c
  %v3_3ab9f = icmp eq i32 %v2_3ab9f, 0
  store i32 %v2_3ab9f, i32* @eax, align 8
  br i1 %v3_3ab9f, label %bb3, label %dec_label_pc_3aba8

bb3:                                              ; preds = %dec_label_pc_3ab7b
  %v1_3aba6 = call i32 @function_3ac12()
  store i32 %v1_3aba6, i32* @eax, align 8
  br label %dec_label_pc_3aba8

dec_label_pc_3aba8:                               ; preds = %bb3, %dec_label_pc_3ab7b
  %v0_3aba8 = call i32 @function_3ac0d()
  ret i32 %v0_3aba8

; uselistorder directives
  uselistorder i1* @pf, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_3ab7b, { 1, 0 }
}

define i32 @function_3abfd() local_unnamed_addr {
dec_label_pc_3abfd:
  %eax.global-to-local = alloca i32, align 4
  %v0_3abfd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3abfd
}

define i32 @function_3ac0d() local_unnamed_addr {
dec_label_pc_3ac0d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3ac12() local_unnamed_addr {
dec_label_pc_3ac12:
  %v0_3ac19 = load i32, i32* @eax, align 8
  ret i32 %v0_3ac19
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implISF_EEvRKT_N4mpl_5bool_ILb0EEESR_NSQ_ILb1EEE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3ac1a:
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v2_3ac52 = load i32, i32* %arg1, align 4
  %v1_3ac57 = call i32 @unknown_57d44(i32 %v2_3ac52)
  %v2_3ac5f = load i32, i32* %arg1, align 4
  %v1_3ac61 = add i32 %v2_3ac5f, 4
  %v1_3ac67 = call i32 @unknown_5d124(i32 %v1_3ac61)
  store i32 %v1_3ac67, i32* @eax, align 8
  %v2_3ac79 = call i32 @function_40946(i32 4, i32 %v1_3ac67)
  %v1_3ac80 = icmp eq i32 %v2_3ac79, 0
  br i1 %v1_3ac80, label %dec_label_pc_3ac93, label %dec_label_pc_3ac84

dec_label_pc_3ac84:                               ; preds = %dec_label_pc_3ac1a
  %v2_3ac8e = call i32 @unknown_6f862(i32 %v2_3ac79, i32 %arg2)
  br label %dec_label_pc_3ac93

dec_label_pc_3ac93:                               ; preds = %dec_label_pc_3ac84, %dec_label_pc_3ac1a
  %v1_3ac96 = add i32 %tmp109, 4
  %v2_3ac96 = inttoptr i32 %v1_3ac96 to i32*
  %v3_3ac96 = load i32, i32* %v2_3ac96, align 4
  %v2_3ac9c = load i32, i32* %arg1, align 4
  %v2_3aca5 = call i32 @unknown_5f1ec(i32 %v2_3ac9c, i32 %v3_3ac96)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3acb6

bb:                                               ; preds = %dec_label_pc_3ac93
  %v1_3acb4 = call i32 @function_3ad20()
  store i32 %v1_3acb4, i32* @eax, align 8
  br label %dec_label_pc_3acb6

dec_label_pc_3acb6:                               ; preds = %bb, %dec_label_pc_3ac93
  %v0_3acb6 = call i32 @function_3ad1b()
  ret i32 %v0_3acb6
}

define i32 @function_3ad0b() local_unnamed_addr {
dec_label_pc_3ad0b:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ad0b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3ad0b
}

define i32 @function_3ad1b() local_unnamed_addr {
dec_label_pc_3ad1b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3ad20() local_unnamed_addr {
dec_label_pc_3ad20:
  %v0_3ad27 = load i32, i32* @eax, align 8
  ret i32 %v0_3ad27
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implIbN4mpl_5bool_ILb1EEENSJ_18has_fallback_type_EEEvRKT_SO_T0_T1_(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3ad28:
  %v4_3ad48 = urem i32 %arg5, 256
  ret i32 %v4_3ad48
}

define i32 @function_3ad4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ad4c:
  %v0_3ad4c = load i32, i32* @eax, align 8
  %v1_3ad4c = trunc i32 %v0_3ad4c to i8
  %v2_3ad4c = load i32, i32* @ebp, align 4
  %v3_3ad4c = add i32 %v2_3ad4c, -35
  %v4_3ad4c = inttoptr i32 %v3_3ad4c to i8*
  store i8 %v1_3ad4c, i8* %v4_3ad4c, align 1
  %v0_3ad4f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3ad55 = load i32, i32* @ebp, align 4
  %v2_3ad55 = add i32 %v1_3ad55, -12
  %v3_3ad55 = inttoptr i32 %v2_3ad55 to i32*
  store i32 %v0_3ad4f, i32* %v3_3ad55, align 4
  %v0_3ad5a = load i32, i32* @ebp, align 4
  %v1_3ad5a = add i32 %v0_3ad5a, -28
  %v2_3ad5a = inttoptr i32 %v1_3ad5a to i32*
  %v3_3ad5a = load i32, i32* %v2_3ad5a, align 4
  %v1_3ad5d = inttoptr i32 %v3_3ad5a to i32*
  %v2_3ad5d = load i32, i32* %v1_3ad5d, align 4
  %v1_3ad62 = call i32 @unknown_57e52(i32 %v2_3ad5d)
  %v0_3ad67 = load i32, i32* @ebp, align 4
  %v1_3ad67 = add i32 %v0_3ad67, -28
  %v2_3ad67 = inttoptr i32 %v1_3ad67 to i32*
  %v3_3ad67 = load i32, i32* %v2_3ad67, align 4
  %v1_3ad6a = inttoptr i32 %v3_3ad67 to i32*
  %v2_3ad6a = load i32, i32* %v1_3ad6a, align 4
  %v1_3ad6c = add i32 %v2_3ad6a, 4
  %v1_3ad72 = call i32 @unknown_5d232(i32 %v1_3ad6c)
  store i32 %v1_3ad72, i32* @eax, align 8
  %v2_3ad82 = call i32 @function_40a54(i32 1, i32 %v1_3ad72)
  %v2_3ad87 = icmp eq i32 %v2_3ad82, 0
  br i1 %v2_3ad87, label %dec_label_pc_3ad93, label %dec_label_pc_3ad8b

dec_label_pc_3ad8b:                               ; preds = %dec_label_pc_3ad4c
  %v3_3ad82 = inttoptr i32 %v2_3ad82 to i8*
  %v0_3ad8b = load i32, i32* @ebp, align 4
  %v1_3ad8b = add i32 %v0_3ad8b, -32
  %v2_3ad8b = inttoptr i32 %v1_3ad8b to i32*
  %v3_3ad8b = load i32, i32* %v2_3ad8b, align 4
  %v1_3ad8e = inttoptr i32 %v3_3ad8b to i8*
  %v2_3ad8e = load i8, i8* %v1_3ad8e, align 1
  store i8 %v2_3ad8e, i8* %v3_3ad82, align 1
  br label %dec_label_pc_3ad93

dec_label_pc_3ad93:                               ; preds = %dec_label_pc_3ad8b, %dec_label_pc_3ad4c
  %v0_3ad93 = load i32, i32* @ebp, align 4
  %v1_3ad93 = add i32 %v0_3ad93, -28
  %v2_3ad93 = inttoptr i32 %v1_3ad93 to i32*
  %v3_3ad93 = load i32, i32* %v2_3ad93, align 4
  %v1_3ad96 = add i32 %v3_3ad93, 4
  %v2_3ad96 = inttoptr i32 %v1_3ad96 to i32*
  %v3_3ad96 = load i32, i32* %v2_3ad96, align 4
  store i32 %v3_3ad96, i32* @edx, align 4
  %v3_3ad99 = load i32, i32* %v2_3ad93, align 4
  %v1_3ad9c = inttoptr i32 %v3_3ad99 to i32*
  %v2_3ad9c = load i32, i32* %v1_3ad9c, align 4
  %v2_3ada5 = call i32 @unknown_5f2fa(i32 %v2_3ad9c, i32 %v3_3ad96)
  %v0_3adaa = load i32, i32* @ebp, align 4
  %v1_3adaa = add i32 %v0_3adaa, -12
  %v2_3adaa = inttoptr i32 %v1_3adaa to i32*
  %v3_3adaa = load i32, i32* %v2_3adaa, align 4
  %v1_3adad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3adad = xor i32 %v1_3adad, %v3_3adaa
  %v3_3adad = icmp eq i32 %v2_3adad, 0
  store i32 %v2_3adad, i32* @eax, align 8
  br i1 %v3_3adad, label %bb, label %dec_label_pc_3adb6

bb:                                               ; preds = %dec_label_pc_3ad93
  %v1_3adb4 = call i32 @function_3adbb()
  br label %dec_label_pc_3adb6

dec_label_pc_3adb6:                               ; preds = %bb, %dec_label_pc_3ad93
  %v2_3adb4 = phi i32 [ %v1_3adb4, %bb ], [ %v2_3adad, %dec_label_pc_3ad93 ]
  ret i32 %v2_3adb4

; uselistorder directives
  uselistorder i32 %v2_3ad82, { 1, 0 }
  uselistorder i32 -35, { 2, 0, 1 }
}

define i32 @function_3adbb() local_unnamed_addr {
dec_label_pc_3adbb:
  %v0_3adbc = load i32, i32* @eax, align 8
  ret i32 %v0_3adbc
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implIxN4mpl_5bool_ILb1EEENSJ_18has_fallback_type_EEEvRKT_SO_T0_T1_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3adbe:
  %edx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v2_3adf3 = load i32, i32* %arg1, align 4
  %v1_3adf8 = call i32 @unknown_57ee8(i32 %v2_3adf3)
  %v2_3ae00 = load i32, i32* %arg1, align 4
  %v1_3ae02 = add i32 %v2_3ae00, 4
  %v1_3ae08 = call i32 @unknown_5d2c8(i32 %v1_3ae02)
  store i32 %v1_3ae08, i32* @eax, align 8
  %v2_3ae18 = call i32 @function_40aea(i32 8, i32 %v1_3ae08)
  %v1_3ae1f = icmp eq i32 %v2_3ae18, 0
  br i1 %v1_3ae1f, label %dec_label_pc_3ae30, label %dec_label_pc_3ae23

dec_label_pc_3ae23:                               ; preds = %dec_label_pc_3adbe
  %v1_3ae26 = add i32 %arg2, 4
  %v2_3ae26 = inttoptr i32 %v1_3ae26 to i32*
  %v3_3ae26 = load i32, i32* %v2_3ae26, align 4
  store i32 %v3_3ae26, i32* %edx.global-to-local, align 4
  %v1_3ae29 = inttoptr i32 %arg2 to i32*
  %v2_3ae29 = load i32, i32* %v1_3ae29, align 4
  %v2_3ae2b = inttoptr i32 %v2_3ae18 to i32*
  store i32 %v2_3ae29, i32* %v2_3ae2b, align 4
  %v0_3ae2d = load i32, i32* %edx.global-to-local, align 4
  %v2_3ae2d = add i32 %v2_3ae18, 4
  %v3_3ae2d = inttoptr i32 %v2_3ae2d to i32*
  store i32 %v0_3ae2d, i32* %v3_3ae2d, align 4
  br label %dec_label_pc_3ae30

dec_label_pc_3ae30:                               ; preds = %dec_label_pc_3ae23, %dec_label_pc_3adbe
  %v1_3ae33 = add i32 %tmp110, 4
  %v2_3ae33 = inttoptr i32 %v1_3ae33 to i32*
  %v3_3ae33 = load i32, i32* %v2_3ae33, align 4
  store i32 %v3_3ae33, i32* %edx.global-to-local, align 4
  %v2_3ae39 = load i32, i32* %arg1, align 4
  %v2_3ae42 = call i32 @unknown_5f390(i32 %v2_3ae39, i32 %v3_3ae33)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3ae53

bb:                                               ; preds = %dec_label_pc_3ae30
  %v1_3ae51 = call i32 @function_3ae58()
  br label %dec_label_pc_3ae53

dec_label_pc_3ae53:                               ; preds = %bb, %dec_label_pc_3ae30
  %v2_3ae51 = phi i32 [ %v1_3ae51, %bb ], [ 0, %dec_label_pc_3ae30 ]
  ret i32 %v2_3ae51

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_3ae58() local_unnamed_addr {
dec_label_pc_3ae58:
  %v0_3ae59 = load i32, i32* @eax, align 8
  ret i32 %v0_3ae59
}

define i32 @_ZN5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E8assigner11assign_implIdN4mpl_5bool_ILb1EEENSJ_18has_fallback_type_EEEvRKT_SO_T0_T1_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3ae5a:
  %v2_3ae8f = load i32, i32* %arg1, align 4
  %v1_3ae94 = call i32 @unknown_57f84(i32 %v2_3ae8f)
  %v2_3ae9c = load i32, i32* %arg1, align 4
  %v1_3ae9e = add i32 %v2_3ae9c, 4
  %v1_3aea4 = call i32 @unknown_5d364(i32 %v1_3ae9e)
  ret i32 %v1_3aea4
}

define i32 @function_3aeb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_3aeb4:
  %v0_3aeb4 = call i32 @function_40b86()
  %v2_3aeb9 = icmp eq i32 %v0_3aeb4, 0
  br i1 %v2_3aeb9, label %dec_label_pc_3aeb4.dec_label_pc_3aec4_crit_edge, label %dec_label_pc_3aebd

dec_label_pc_3aeb4.dec_label_pc_3aec4_crit_edge:  ; preds = %dec_label_pc_3aeb4
  %v0_3aec4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3aec4

dec_label_pc_3aebd:                               ; preds = %dec_label_pc_3aeb4
  %v1_3aeb4 = inttoptr i32 %v0_3aeb4 to double*
  %v0_3aebd = load i32, i32* @ebp, align 4
  %v1_3aebd = add i32 %v0_3aebd, -32
  %v2_3aebd = inttoptr i32 %v1_3aebd to i32*
  %v3_3aebd = load i32, i32* %v2_3aebd, align 4
  %v1_3aec0 = inttoptr i32 %v3_3aebd to double*
  %v2_3aec0 = load double, double* %v1_3aec0, align 4
  store double %v2_3aec0, double* %v1_3aeb4, align 4
  br label %dec_label_pc_3aec4

dec_label_pc_3aec4:                               ; preds = %dec_label_pc_3aeb4.dec_label_pc_3aec4_crit_edge, %dec_label_pc_3aebd
  %v0_3aeca = phi i32 [ %v0_3aec4.pre, %dec_label_pc_3aeb4.dec_label_pc_3aec4_crit_edge ], [ %v0_3aebd, %dec_label_pc_3aebd ]
  %v1_3aec4 = add i32 %v0_3aeca, -28
  %v2_3aec4 = inttoptr i32 %v1_3aec4 to i32*
  %v3_3aec4 = load i32, i32* %v2_3aec4, align 4
  %v1_3aec7 = add i32 %v3_3aec4, 4
  %v2_3aec7 = inttoptr i32 %v1_3aec7 to i32*
  %v3_3aec7 = load i32, i32* %v2_3aec7, align 4
  %v1_3aecd = inttoptr i32 %v3_3aec4 to i32*
  %v2_3aecd = load i32, i32* %v1_3aecd, align 4
  %v2_3aed6 = call i32 @unknown_5f42c(i32 %v2_3aecd, i32 %v3_3aec7)
  %v0_3aedb = load i32, i32* @ebp, align 4
  %v1_3aedb = add i32 %v0_3aedb, -12
  %v2_3aedb = inttoptr i32 %v1_3aedb to i32*
  %v3_3aedb = load i32, i32* %v2_3aedb, align 4
  %v1_3aede = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3aede = xor i32 %v1_3aede, %v3_3aedb
  %v3_3aede = icmp eq i32 %v2_3aede, 0
  store i32 %v2_3aede, i32* @eax, align 8
  br i1 %v3_3aede, label %bb, label %dec_label_pc_3aee7

bb:                                               ; preds = %dec_label_pc_3aec4
  %v1_3aee5 = call i32 @function_3aeec()
  br label %dec_label_pc_3aee7

dec_label_pc_3aee7:                               ; preds = %bb, %dec_label_pc_3aec4
  %v2_3aee5 = phi i32 [ %v1_3aee5, %bb ], [ %v2_3aede, %dec_label_pc_3aec4 ]
  ret i32 %v2_3aee5

; uselistorder directives
  uselistorder i32 %v0_3aeb4, { 1, 0 }
  uselistorder label %dec_label_pc_3aec4, { 1, 0 }
}

define i32 @function_3aeec() local_unnamed_addr {
dec_label_pc_3aeec:
  %v0_3aeed = load i32, i32* @eax, align 8
  ret i32 %v0_3aeed
}

define i32 @_ZN5boost6detail13addr_impl_refIKSt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEC1ERSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3aeee:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3af1f

bb:                                               ; preds = %dec_label_pc_3aeee
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_3af1d = call i32 @function_3af24(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_3af1f

dec_label_pc_3af1f:                               ; preds = %bb, %dec_label_pc_3aeee
  %v4_3af1d = phi i32 [ %v3_3af1d, %bb ], [ 0, %dec_label_pc_3aeee ]
  ret i32 %v4_3af1d

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3af24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3af24:
  %v0_3af25 = load i32, i32* @eax, align 8
  ret i32 %v0_3af25
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEcvRSA_Ev() local_unnamed_addr {
dec_label_pc_3af26:
  %eax.global-to-local = alloca i32, align 4
  %v5_3af26 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3af26
}

define i32 @function_3af4a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3af4a:
  %zf.global-to-local = alloca i1, align 1
  %v2_3af4a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3af4a = load i32, i32* @eax, align 8
  %v4_3af4a = trunc i32 %v3_3af4a to i8
  %v5_3af4a = add i8 %v4_3af4a, %v2_3af4a
  %v15_3af4a = icmp eq i8 %v5_3af4a, 0
  store i1 %v15_3af4a, i1* %zf.global-to-local, align 1
  %v21_3af4a = inttoptr i32 %v3_3af4a to i8*
  store i8 %v5_3af4a, i8* %v21_3af4a, align 1
  %v0_3af4c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_3af4c, label %bb, label %dec_label_pc_3af4a.dec_label_pc_3af4e_crit_edge

dec_label_pc_3af4a.dec_label_pc_3af4e_crit_edge:  ; preds = %dec_label_pc_3af4a
  %v3_3af4c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3af4e

bb:                                               ; preds = %dec_label_pc_3af4a
  %v1_3af4c = call i32 @function_3af53()
  br label %dec_label_pc_3af4e

dec_label_pc_3af4e:                               ; preds = %dec_label_pc_3af4a.dec_label_pc_3af4e_crit_edge, %bb
  %v3_3af4c = phi i32 [ %v3_3af4c.pre, %dec_label_pc_3af4a.dec_label_pc_3af4e_crit_edge ], [ %v1_3af4c, %bb ]
  ret i32 %v3_3af4c

; uselistorder directives
  uselistorder label %dec_label_pc_3af4e, { 1, 0 }
}

define i32 @function_3af53() local_unnamed_addr {
dec_label_pc_3af53:
  %v0_3af54 = load i32, i32* @eax, align 8
  ret i32 %v0_3af54
}

define i32 @_ZN5boost6detail14addressof_implIKSt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEE1fERSA_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3af55:
  ret i32 %arg1
}

define i32 @function_3af79(i32 %arg1) local_unnamed_addr {
dec_label_pc_3af79:
  %v0_3af79 = load i32, i32* @edx, align 4
  %v1_3af79 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3af79 = icmp eq i32 %v1_3af79, %v0_3af79
  br i1 %v3_3af79, label %bb, label %dec_label_pc_3af79.dec_label_pc_3af81_crit_edge

dec_label_pc_3af79.dec_label_pc_3af81_crit_edge:  ; preds = %dec_label_pc_3af79
  %v2_3af7f.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3af81

bb:                                               ; preds = %dec_label_pc_3af79
  %v1_3af7f = call i32 @function_3af86()
  br label %dec_label_pc_3af81

dec_label_pc_3af81:                               ; preds = %dec_label_pc_3af79.dec_label_pc_3af81_crit_edge, %bb
  %v2_3af7f = phi i32 [ %v2_3af7f.pre, %dec_label_pc_3af79.dec_label_pc_3af81_crit_edge ], [ %v1_3af7f, %bb ]
  ret i32 %v2_3af7f

; uselistorder directives
  uselistorder label %dec_label_pc_3af81, { 1, 0 }
}

define i32 @function_3af86() local_unnamed_addr {
dec_label_pc_3af86:
  %v0_3af87 = load i32, i32* @eax, align 8
  ret i32 %v0_3af87
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP12CTransactionS3_EET0_T_S5_S4_() local_unnamed_addr {
dec_label_pc_3af88:
  %eax.global-to-local = alloca i32, align 4
  %v5_3af8b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3af8b
}

define i32 @function_3af8e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3af8e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3af8e = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3af8e = xor i32 %v0_3af8e, 139
  store i32 %v11_3af8e, i32* %eax.global-to-local, align 8
  %v0_3af90 = load i32, i32* @ebp, align 4
  %v1_3af90 = add i32 %v0_3af90, 1
  store i32 %v1_3af90, i32* %ebp.global-to-local, align 4
  %v0_3af91 = load i32, i32* @ecx, align 8
  %v1_3af91 = add i32 %v0_3af91, 1166795845
  %v2_3af91 = inttoptr i32 %v1_3af91 to i8*
  %v3_3af91 = load i8, i8* %v2_3af91, align 1
  %v5_3af91 = trunc i32 %v0_3af91 to i8
  %v6_3af91 = or i8 %v3_3af91, %v5_3af91
  store i8 %v6_3af91, i8* %v2_3af91, align 1
  %v0_3af97 = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3af97 = or i32 %v0_3af97, 137
  store i32 %v11_3af97, i32* %eax.global-to-local, align 8
  %v0_3af99 = load i32, i32* %ebp.global-to-local, align 4
  %v0_3af9a = load i32, i32* @ecx, align 8
  %v1_3af9a = add i32 %v0_3af9a, 255
  %v1_3af9c = add i32 %v0_3af99, 2
  store i32 %v1_3af9c, i32* %ebp.global-to-local, align 4
  %v1_3af9d = add i32 %v0_3af9a, -1587159996
  %v2_3af9d = inttoptr i32 %v1_3af9d to i8*
  %v3_3af9d = load i8, i8* %v2_3af9d, align 1
  %v5_3af9d = trunc i32 %v1_3af9a to i8
  %v8_3af9d = add i8 %v3_3af9d, %v5_3af9d
  %v28_3af9d = icmp ult i8 %v8_3af9d, %v3_3af9d
  store i1 %v28_3af9d, i1* %cf.global-to-local, align 1
  store i8 %v8_3af9d, i8* %v2_3af9d, align 1
  %v0_3afa3 = load i32, i32* %eax.global-to-local, align 8
  %v1_3afa3 = trunc i32 %v0_3afa3 to i8
  %v2_3afa3 = load i1, i1* %cf.global-to-local, align 1
  %v3_3afa3 = zext i1 %v2_3afa3 to i8
  %v4_3afa3 = add i8 %v3_3afa3, %v1_3afa3
  %v19_3afa3 = icmp ule i8 %v4_3afa3, %v1_3afa3
  %v21_3afa3 = icmp eq i1 %v2_3afa3, %v19_3afa3
  store i1 %v21_3afa3, i1* %cf.global-to-local, align 1
  %v22_3afa3 = zext i8 %v4_3afa3 to i32
  %v24_3afa3 = and i32 %v0_3afa3, -256
  %v25_3afa3 = or i32 %v22_3afa3, %v24_3afa3
  store i32 %v25_3afa3, i32* %eax.global-to-local, align 8
  %v1_3afa5 = inttoptr i32 %v25_3afa3 to i8*
  %v2_3afa5 = load i8, i8* %v1_3afa5, align 1
  %v5_3afa5 = add i8 %v2_3afa5, %v4_3afa3
  store i8 %v5_3afa5, i8* %v1_3afa5, align 1
  %v0_3afa7 = load i32, i32* %eax.global-to-local, align 8
  %v1_3afa7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_3afa7 = add i32 %v1_3afa7, -12
  %v3_3afa7 = inttoptr i32 %v2_3afa7 to i32*
  store i32 %v0_3afa7, i32* %v3_3afa7, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3afac = load i32, i32* %ebp.global-to-local, align 4
  %v1_3afac = add i32 %v0_3afac, -36
  %v2_3afac = inttoptr i32 %v1_3afac to i32*
  %v3_3afac = load i32, i32* %v2_3afac, align 4
  store i32 %v3_3afac, i32* %eax.global-to-local, align 8
  %v2_3afaf = add i32 %v0_3afac, -16
  %v3_3afaf = inttoptr i32 %v2_3afaf to i32*
  store i32 %v3_3afac, i32* %v3_3afaf, align 4
  %v0_3afb2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3afb2

; uselistorder directives
  uselistorder i8 %v4_3afa3, { 0, 2, 1 }
  uselistorder i8 %v1_3afa3, { 1, 0 }
  uselistorder i8 %v3_3af9d, { 1, 0 }
}

define i32 @function_3afbc(i16 %arg1) local_unnamed_addr {
dec_label_pc_3afbc:
  %eax.global-to-local = alloca i32, align 4
  %v6_3afbc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_3afbc
}

define i32 @function_3afc6(i32 %arg1) local_unnamed_addr {
dec_label_pc_3afc6:
  %v0_3afc6 = load i32, i32* @eax, align 8
  %v1_3afc9 = call i32 @unknown_76598(i32 %v0_3afc6)
  %v0_3afce = load i32, i32* @ebp, align 4
  %v1_3afce = add i32 %v0_3afce, -28
  %v2_3afce = inttoptr i32 %v1_3afce to i32*
  %v3_3afce = load i32, i32* %v2_3afce, align 4
  %v4_3afce = add i32 %v3_3afce, 32
  store i32 %v4_3afce, i32* %v2_3afce, align 4
  %v0_3afd2 = load i32, i32* @ebp, align 4
  %v1_3afd2 = add i32 %v0_3afd2, -16
  %v2_3afd2 = inttoptr i32 %v1_3afd2 to i32*
  %v3_3afd2 = load i32, i32* %v2_3afd2, align 4
  %v4_3afd2 = add i32 %v3_3afd2, 32
  store i32 %v4_3afd2, i32* %v2_3afd2, align 4
  %v0_3afd6 = load i32, i32* @ebp, align 4
  %v1_3afe3 = add i32 %v0_3afd6, -16
  %v2_3afe3 = inttoptr i32 %v1_3afe3 to i32*
  %v3_3afe3 = load i32, i32* %v2_3afe3, align 4
  store i32 %v3_3afe3, i32* @eax, align 8
  %v1_3afe6 = add i32 %v0_3afd6, -12
  %v2_3afe6 = inttoptr i32 %v1_3afe6 to i32*
  %v3_3afe6 = load i32, i32* %v2_3afe6, align 4
  %v1_3afe9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3afe9 = icmp eq i32 %v1_3afe9, %v3_3afe6
  br i1 %v3_3afe9, label %bb, label %dec_label_pc_3aff2

bb:                                               ; preds = %dec_label_pc_3afc6
  %v1_3aff0 = call i32 @function_3b029()
  store i32 %v1_3aff0, i32* @eax, align 8
  br label %dec_label_pc_3aff2

dec_label_pc_3aff2:                               ; preds = %bb, %dec_label_pc_3afc6
  %v0_3aff2 = call i32 @function_3b024()
  ret i32 %v0_3aff2

; uselistorder directives
  uselistorder i32 %v0_3afd6, { 1, 0 }
}

define i32 @function_3aff5() local_unnamed_addr {
dec_label_pc_3aff5:
  %eax.global-to-local = alloca i32, align 4
  %v0_3aff5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3aff5
}

define i32 @function_3affb() local_unnamed_addr {
dec_label_pc_3affb:
  %v0_3affb = load i32, i32* @ebx, align 4
  ret i32 %v0_3affb
}

define i32 @function_3b022(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b022:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b024() local_unnamed_addr {
dec_label_pc_3b024:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @__stack_chk_fail.1507(i32, i32, i32) local_unnamed_addr

define i32 @function_3b029() local_unnamed_addr {
dec_label_pc_3b029:
  %v0_3b02e = load i32, i32* @eax, align 8
  ret i32 %v0_3b02e
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP12CTransactionS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b02f:
  ret i32 %arg3
}

define i32 @function_3b046(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b046:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b049 = load i32, i32* @eax, align 8
  %v1_3b049 = trunc i32 %v0_3b049 to i8
  %v2_3b049 = load i1, i1* @cf, align 1
  %v3_3b049 = zext i1 %v2_3b049 to i8
  %v4_3b049 = add i8 %v3_3b049, %v1_3b049
  %v22_3b049 = zext i8 %v4_3b049 to i32
  %v24_3b049 = and i32 %v0_3b049, -256
  %v25_3b049 = or i32 %v22_3b049, %v24_3b049
  store i32 %v25_3b049, i32* %eax.global-to-local, align 8
  %v1_3b04b = inttoptr i32 %v25_3b049 to i8*
  %v2_3b04b = load i8, i8* %v1_3b04b, align 1
  %v5_3b04b = add i8 %v2_3b04b, %v4_3b049
  store i8 %v5_3b04b, i8* %v1_3b04b, align 1
  %v0_3b04d = load i32, i32* %eax.global-to-local, align 8
  %v1_3b04d = load i32, i32* @ebp, align 4
  %v2_3b04d = add i32 %v1_3b04d, -12
  %v3_3b04d = inttoptr i32 %v2_3b04d to i32*
  store i32 %v0_3b04d, i32* %v3_3b04d, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3b052 = load i32, i32* @ebp, align 4
  %v1_3b052 = add i32 %v0_3b052, -32
  %v2_3b052 = inttoptr i32 %v1_3b052 to i32*
  %v3_3b052 = load i32, i32* %v2_3b052, align 4
  %v1_3b055 = add i32 %v0_3b052, -28
  %v2_3b055 = inttoptr i32 %v1_3b055 to i32*
  %v3_3b055 = load i32, i32* %v2_3b055, align 4
  %v2_3b05a = sub i32 %v3_3b052, %v3_3b055
  %v2_3b05e = sdiv i32 %v2_3b05a, 32
  store i32 %v2_3b05e, i32* %eax.global-to-local, align 8
  %v2_3b061 = add i32 %v0_3b052, -16
  %v3_3b061 = inttoptr i32 %v2_3b061 to i32*
  store i32 %v2_3b05e, i32* %v3_3b061, align 4
  %v0_3b064 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b064

; uselistorder directives
  uselistorder i32 %v2_3b05e, { 1, 0 }
}

define i32 @function_3b069(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b069:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b069 = load i32, i32* @ebx, align 4
  %v1_3b069 = add i32 %v0_3b069, -1960780691
  %v2_3b069 = inttoptr i32 %v1_3b069 to i8*
  %v3_3b069 = load i8, i8* %v2_3b069, align 1
  %v4_3b069 = load i32, i32* @eax, align 8
  %v5_3b069 = trunc i32 %v4_3b069 to i8
  %v6_3b069 = and i8 %v5_3b069, %v3_3b069
  store i8 %v6_3b069, i8* %v2_3b069, align 1
  %v0_3b06f = load i32, i32* @ebp, align 4
  %v1_3b06f = add i32 %v0_3b06f, 1
  %v9_3b06f = icmp eq i32 %v1_3b06f, 0
  store i32 %v1_3b06f, i32* @ebp, align 4
  %v0_3b070 = load i32, i32* @ecx, align 8
  %v2_3b070 = icmp eq i32 %v0_3b070, 1
  %v4_3b070 = or i1 %v9_3b06f, %v2_3b070
  br i1 %v4_3b070, label %dec_label_pc_3b069.dec_label_pc_3b072_crit_edge, label %bb

dec_label_pc_3b069.dec_label_pc_3b072_crit_edge:  ; preds = %dec_label_pc_3b069
  %v0_3b073.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3b072

bb:                                               ; preds = %dec_label_pc_3b069
  %v6_3b070 = call i32 @function_3affb()
  store i32 %v6_3b070, i32* %eax.global-to-local, align 8
  %v0_3b075.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3b072

dec_label_pc_3b072:                               ; preds = %dec_label_pc_3b069.dec_label_pc_3b072_crit_edge, %bb
  %v0_3b075 = phi i32 [ %v1_3b06f, %dec_label_pc_3b069.dec_label_pc_3b072_crit_edge ], [ %v0_3b075.pre, %bb ]
  %v9_3b073 = phi i32 [ %v0_3b073.pre, %dec_label_pc_3b069.dec_label_pc_3b072_crit_edge ], [ %v6_3b070, %bb ]
  %v11_3b073 = and i32 %v9_3b073, -252
  store i32 %v11_3b073, i32* %eax.global-to-local, align 8
  %v1_3b075 = add i32 %v0_3b075, -36
  %v2_3b075 = inttoptr i32 %v1_3b075 to i32*
  %v3_3b075 = load i32, i32* %v2_3b075, align 4
  store i32 %v3_3b075, i32* %eax.global-to-local, align 8
  %v1_3b07b = call i32 @unknown_73ebd(i32 %v3_3b075)
  store i32 %v1_3b07b, i32* %eax.global-to-local, align 8
  %v0_3b080 = load i32, i32* @ebp, align 4
  %v1_3b080 = add i32 %v0_3b080, -16
  %v2_3b080 = inttoptr i32 %v1_3b080 to i32*
  %v3_3b080 = load i32, i32* %v2_3b080, align 4
  %v4_3b080 = add i32 %v3_3b080, -1
  store i32 %v4_3b080, i32* %v2_3b080, align 4
  %v0_3b084 = load i32, i32* @ebp, align 4
  %v1_3b084 = add i32 %v0_3b084, -16
  %v2_3b084 = inttoptr i32 %v1_3b084 to i32*
  %v3_3b084 = load i32, i32* %v2_3b084, align 4
  %v10_3b084 = icmp eq i32 %v3_3b084, 0
  %v11_3b084 = icmp slt i32 %v3_3b084, 0
  %v3_3b088 = icmp eq i1 %v11_3b084, false
  %v4_3b088 = icmp eq i1 %v10_3b084, false
  %v5_3b088 = icmp eq i1 %v3_3b088, %v4_3b088
  %v6_3b088 = zext i1 %v5_3b088 to i32
  %v7_3b088 = load i32, i32* %eax.global-to-local, align 8
  %v8_3b088 = and i32 %v7_3b088, -256
  %v9_3b088 = or i32 %v6_3b088, %v8_3b088
  store i32 %v9_3b088, i32* %eax.global-to-local, align 8
  %v1_3b08f = add i32 %v0_3b084, -36
  %v2_3b08f = inttoptr i32 %v1_3b08f to i32*
  %v3_3b08f = load i32, i32* %v2_3b08f, align 4
  store i32 %v3_3b08f, i32* @eax, align 8
  %v1_3b092 = add i32 %v0_3b084, -12
  %v2_3b092 = inttoptr i32 %v1_3b092 to i32*
  %v3_3b092 = load i32, i32* %v2_3b092, align 4
  %v1_3b095 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3b095 = icmp eq i32 %v1_3b095, %v3_3b092
  br i1 %v3_3b095, label %bb5, label %dec_label_pc_3b09e

bb5:                                              ; preds = %dec_label_pc_3b072
  %v1_3b09c = call i32 @function_3b0a3()
  store i32 %v1_3b09c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3b09e

dec_label_pc_3b09e:                               ; preds = %bb5, %dec_label_pc_3b072
  %v3_3b09c = phi i32 [ %v1_3b09c, %bb5 ], [ %v3_3b08f, %dec_label_pc_3b072 ]
  ret i32 %v3_3b09c

; uselistorder directives
  uselistorder i32 %v3_3b084, { 1, 0 }
  uselistorder i32 %v0_3b084, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_3b072, { 1, 0 }
}

define i32 @function_3b0a3() local_unnamed_addr {
dec_label_pc_3b0a3:
  %v0_3b0a4 = load i32, i32* @eax, align 8
  ret i32 %v0_3b0a4
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE8capacityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b0a6:
  ret i32 %arg1
}

define i32 @function_3b0b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b0b6:
  %v2_3b0b6 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3b0b6 = load i32, i32* @eax, align 8
  %v4_3b0b6 = trunc i32 %v3_3b0b6 to i8
  %v5_3b0b6 = add i8 %v4_3b0b6, %v2_3b0b6
  %v21_3b0b6 = inttoptr i32 %v3_3b0b6 to i8*
  store i8 %v5_3b0b6, i8* %v21_3b0b6, align 1
  %v0_3b0b8 = load i32, i32* @eax, align 8
  %v1_3b0b8 = load i32, i32* @ebp, align 4
  %v2_3b0b8 = add i32 %v1_3b0b8, -12
  %v3_3b0b8 = inttoptr i32 %v2_3b0b8 to i32*
  store i32 %v0_3b0b8, i32* %v3_3b0b8, align 4
  %v0_3b0bd = load i32, i32* @ebp, align 4
  %v1_3b0bd = add i32 %v0_3b0bd, -28
  %v2_3b0bd = inttoptr i32 %v1_3b0bd to i32*
  %v3_3b0bd = load i32, i32* %v2_3b0bd, align 4
  %v1_3b0c0 = add i32 %v3_3b0bd, 8
  %v2_3b0c0 = inttoptr i32 %v1_3b0c0 to i32*
  %v3_3b0c0 = load i32, i32* %v2_3b0c0, align 4
  %v1_3b0c8 = inttoptr i32 %v3_3b0bd to i32*
  %v2_3b0c8 = load i32, i32* %v1_3b0c8, align 4
  %v2_3b0cc = sub i32 %v3_3b0c0, %v2_3b0c8
  %v2_3b0d0 = sdiv i32 %v2_3b0cc, 4
  %v3_3b0d3 = mul i32 %v2_3b0d0, -991146299
  store i32 %v3_3b0d3, i32* @eax, align 8
  %v1_3b0d9 = add i32 %v0_3b0bd, -12
  %v2_3b0d9 = inttoptr i32 %v1_3b0d9 to i32*
  %v3_3b0d9 = load i32, i32* %v2_3b0d9, align 4
  %v1_3b0dc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3b0dc = icmp eq i32 %v1_3b0dc, %v3_3b0d9
  br i1 %v3_3b0dc, label %bb, label %dec_label_pc_3b0e5

bb:                                               ; preds = %dec_label_pc_3b0b6
  %v4_3b0e3 = call i32 @function_3b0ea(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_3b0e5

dec_label_pc_3b0e5:                               ; preds = %bb, %dec_label_pc_3b0b6
  %v5_3b0e3 = phi i32 [ %v4_3b0e3, %bb ], [ %v3_3b0d3, %dec_label_pc_3b0b6 ]
  ret i32 %v5_3b0e3

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_3b0ea, { 0, 2, 1 }
}

define i32 @function_3b0ea(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b0ea:
  %v0_3b0eb = load i32, i32* @eax, align 8
  ret i32 %v0_3b0eb
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b0ec:
  %v2_3b123 = call i32 @unknown_5ed7e(i32 %arg1, i32 %arg2)
  %v1_3b131 = call i32 @unknown_56fb2(i32 %arg1)
  %v4_3b14e = call i32 @unknown_57ead(i32 %arg3, i32 %arg4, i32 %v2_3b123, i32 %v1_3b131)
  store i32 %v2_3b123, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b162

bb:                                               ; preds = %dec_label_pc_3b0ec
  %v1_3b160 = call i32 @function_3b1a0()
  store i32 %v1_3b160, i32* @eax, align 8
  br label %dec_label_pc_3b162

dec_label_pc_3b162:                               ; preds = %bb, %dec_label_pc_3b0ec
  %v0_3b162 = call i32 @function_3b19b()
  ret i32 %v0_3b162

; uselistorder directives
  uselistorder i32 %v2_3b123, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3b165() local_unnamed_addr {
dec_label_pc_3b165:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b165 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b165
}

define i32 @function_3b174() local_unnamed_addr {
dec_label_pc_3b174:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b198(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b198:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b19b() local_unnamed_addr {
dec_label_pc_3b19b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b1a0() local_unnamed_addr {
dec_label_pc_3b1a0:
  %v5_3b1a3 = load i32, i32* @eax, align 8
  ret i32 %v5_3b1a3
}

define i32 @function_3b1a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b1a4:
  store i32 %arg1, i32* @ebp, align 4
  %v0_3b1a5 = load i32, i32* @eax, align 8
  ret i32 %v0_3b1a5
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b1a6:
  ret i32 %arg3
}

define i32 @function_3b1bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b1bd:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b1c6 = load i32, i32* @eax, align 8
  %v1_3b1c6 = trunc i32 %v0_3b1c6 to i8
  %v2_3b1c6 = load i1, i1* @cf, align 1
  %v3_3b1c6 = zext i1 %v2_3b1c6 to i8
  %v4_3b1c6 = add i8 %v3_3b1c6, %v1_3b1c6
  %v22_3b1c6 = zext i8 %v4_3b1c6 to i32
  %v24_3b1c6 = and i32 %v0_3b1c6, -256
  %v25_3b1c6 = or i32 %v22_3b1c6, %v24_3b1c6
  store i32 %v25_3b1c6, i32* %eax.global-to-local, align 8
  %v1_3b1c8 = inttoptr i32 %v25_3b1c6 to i8*
  %v2_3b1c8 = load i8, i8* %v1_3b1c8, align 1
  %v5_3b1c8 = add i8 %v2_3b1c8, %v4_3b1c6
  store i8 %v5_3b1c8, i8* %v1_3b1c8, align 1
  %v0_3b1ca = load i32, i32* %eax.global-to-local, align 8
  %v1_3b1ca = load i32, i32* @ebp, align 4
  %v2_3b1ca = add i32 %v1_3b1ca, -12
  %v3_3b1ca = inttoptr i32 %v2_3b1ca to i32*
  store i32 %v0_3b1ca, i32* %v3_3b1ca, align 4
  %v0_3b1cf = load i32, i32* @ebp, align 4
  %v1_3b1cf = add i32 %v0_3b1cf, -16
  store i32 %v1_3b1cf, i32* %eax.global-to-local, align 8
  %v1_3b1dc = call i32 @unknown_76d70(i32 %v1_3b1cf)
  %v0_3b1e1 = load i32, i32* @esp, align 4
  %v10_3b1e1 = icmp eq i32 %v0_3b1e1, 4
  store i1 %v10_3b1e1, i1* @zf, align 1
  %v0_3b1e4 = load i32, i32* @ebp, align 4
  %v1_3b1e4 = add i32 %v0_3b1e4, -20
  store i32 %v1_3b1e4, i32* %eax.global-to-local, align 8
  ret i32 %v1_3b1e4
}

define i32 @function_3b1d1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b1d1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b1e8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b1e8:
  %v0_3b1e9 = load i32, i32* @ecx, align 8
  %v2_3b1e9 = icmp eq i32 %v0_3b1e9, 1
  %v3_3b1e9 = load i1, i1* @zf, align 1
  %v4_3b1e9 = or i1 %v2_3b1e9, %v3_3b1e9
  br i1 %v4_3b1e9, label %dec_label_pc_3b1e8.dec_label_pc_3b1eb_crit_edge, label %bb

dec_label_pc_3b1e8.dec_label_pc_3b1eb_crit_edge:  ; preds = %dec_label_pc_3b1e8
  %v0_3b1ec.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3b1eb

bb:                                               ; preds = %dec_label_pc_3b1e8
  %v6_3b1e9 = call i32 @function_3b174()
  br label %dec_label_pc_3b1eb

dec_label_pc_3b1eb:                               ; preds = %dec_label_pc_3b1e8.dec_label_pc_3b1eb_crit_edge, %bb
  %v9_3b1ec = phi i32 [ %v0_3b1ec.pre, %dec_label_pc_3b1e8.dec_label_pc_3b1eb_crit_edge ], [ %v6_3b1e9, %bb ]
  %v11_3b1ec = and i32 %v9_3b1ec, -252
  %v1_3b1f1 = call i32 @unknown_76d70(i32 %v11_3b1ec)
  %v0_3b1f9 = load i32, i32* @ebp, align 4
  %v1_3b1f9 = add i32 %v0_3b1f9, -28
  %v2_3b1f9 = inttoptr i32 %v1_3b1f9 to i32*
  %v3_3b1f9 = load i32, i32* %v2_3b1f9, align 4
  %v1_3b1fc = add i32 %v0_3b1f9, -40
  %v2_3b1fc = inttoptr i32 %v1_3b1fc to i32*
  %v3_3b1fc = load i32, i32* %v2_3b1fc, align 4
  %v1_3b203 = add i32 %v0_3b1f9, -16
  %v2_3b203 = inttoptr i32 %v1_3b203 to i32*
  %v3_3b203 = load i32, i32* %v2_3b203, align 4
  %v1_3b20a = add i32 %v0_3b1f9, -20
  %v2_3b20a = inttoptr i32 %v1_3b20a to i32*
  %v3_3b20a = load i32, i32* %v2_3b20a, align 4
  %v4_3b214 = call i32 @unknown_76dba(i32 %v3_3b1f9, i32 %v3_3b20a, i32 %v3_3b203, i32 %v3_3b1fc)
  %v0_3b21c = load i32, i32* @ebp, align 4
  %v1_3b21c = add i32 %v0_3b21c, -28
  %v2_3b21c = inttoptr i32 %v1_3b21c to i32*
  %v3_3b21c = load i32, i32* %v2_3b21c, align 4
  store i32 %v3_3b21c, i32* @eax, align 8
  %v1_3b21f = add i32 %v0_3b21c, -12
  %v2_3b21f = inttoptr i32 %v1_3b21f to i32*
  %v3_3b21f = load i32, i32* %v2_3b21f, align 4
  %v1_3b222 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3b222 = icmp eq i32 %v1_3b222, %v3_3b21f
  br i1 %v3_3b222, label %bb8, label %dec_label_pc_3b22b

bb8:                                              ; preds = %dec_label_pc_3b1eb
  %v1_3b229 = call i32 @function_3b230()
  br label %dec_label_pc_3b22b

dec_label_pc_3b22b:                               ; preds = %bb8, %dec_label_pc_3b1eb
  %v3_3b229 = phi i32 [ %v1_3b229, %bb8 ], [ %v3_3b21c, %dec_label_pc_3b1eb ]
  ret i32 %v3_3b229

; uselistorder directives
  uselistorder i32 %v0_3b1f9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @unknown_76d70, { 1, 0 }
  uselistorder label %dec_label_pc_3b1eb, { 1, 0 }
}

define i32 @function_3b230() local_unnamed_addr {
dec_label_pc_3b230:
  %v0_3b231 = load i32, i32* @eax, align 8
  ret i32 %v0_3b231
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b234:
  %v2_3b264 = call i32 @unknown_76eda(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b275

bb:                                               ; preds = %dec_label_pc_3b234
  %v1_3b273 = call i32 @function_3b27a()
  br label %dec_label_pc_3b275

dec_label_pc_3b275:                               ; preds = %bb, %dec_label_pc_3b234
  %v2_3b273 = phi i32 [ %v1_3b273, %bb ], [ 0, %dec_label_pc_3b234 ]
  ret i32 %v2_3b273
}

define i32 @function_3b27a() local_unnamed_addr {
dec_label_pc_3b27a:
  %v0_3b27b = load i32, i32* @eax, align 8
  ret i32 %v0_3b27b
}

define i32 @_ZSt4copyIP5CTxInS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b27c:
  ret i32 %arg3
}

define i32 @function_3b292(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b292:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3b292 = load i32, i32* @eax, align 8
  %v1_3b292 = load i32, i32* @ebp, align 4
  %v2_3b292 = add i32 %v1_3b292, -36
  %v3_3b292 = inttoptr i32 %v2_3b292 to i32*
  store i32 %v0_3b292, i32* %v3_3b292, align 4
  %v0_3b295 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3b29b = load i32, i32* @ebp, align 4
  %v2_3b29b = add i32 %v1_3b29b, -12
  %v3_3b29b = inttoptr i32 %v2_3b29b to i32*
  store i32 %v0_3b295, i32* %v3_3b29b, align 4
  %v0_3b2a0 = load i32, i32* @ebp, align 4
  %v1_3b2a0 = add i32 %v0_3b2a0, -32
  %v2_3b2a0 = inttoptr i32 %v1_3b2a0 to i32*
  %v3_3b2a0 = load i32, i32* %v2_3b2a0, align 4
  %v1_3b2a6 = call i32 @unknown_76f64(i32 %v3_3b2a0)
  store i32 %v1_3b2a6, i32* %ebx.global-to-local, align 4
  %v0_3b2ad = load i32, i32* @ebp, align 4
  %v1_3b2ad = add i32 %v0_3b2ad, -28
  %v2_3b2ad = inttoptr i32 %v1_3b2ad to i32*
  %v3_3b2ad = load i32, i32* %v2_3b2ad, align 4
  %v1_3b2b3 = call i32 @unknown_76f64(i32 %v3_3b2ad)
  %v0_3b2b8 = load i32, i32* @ebp, align 4
  %v1_3b2b8 = add i32 %v0_3b2b8, -36
  %v2_3b2b8 = inttoptr i32 %v1_3b2b8 to i32*
  %v3_3b2b8 = load i32, i32* %v2_3b2b8, align 4
  %v0_3b2bf = load i32, i32* %ebx.global-to-local, align 4
  %v3_3b2c6 = call i32 @unknown_76f99(i32 %v1_3b2b3, i32 %v0_3b2bf, i32 %v3_3b2b8)
  store i32 %v3_3b2c6, i32* @eax, align 8
  %v0_3b2cb = load i32, i32* @ebp, align 4
  %v1_3b2cb = add i32 %v0_3b2cb, -12
  %v2_3b2cb = inttoptr i32 %v1_3b2cb to i32*
  %v3_3b2cb = load i32, i32* %v2_3b2cb, align 4
  %v1_3b2ce = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3b2ce = icmp eq i32 %v1_3b2ce, %v3_3b2cb
  br i1 %v3_3b2ce, label %bb, label %dec_label_pc_3b2d7

bb:                                               ; preds = %dec_label_pc_3b292
  %v1_3b2d5 = call i32 @function_3b2dc()
  br label %dec_label_pc_3b2d7

dec_label_pc_3b2d7:                               ; preds = %bb, %dec_label_pc_3b292
  %v2_3b2d5 = phi i32 [ %v1_3b2d5, %bb ], [ %v3_3b2c6, %dec_label_pc_3b292 ]
  ret i32 %v2_3b2d5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_76f64, { 1, 0 }
}

declare i32 @__stack_chk_fail.1513(i32) local_unnamed_addr

define i32 @function_3b2dc() local_unnamed_addr {
dec_label_pc_3b2dc:
  %v0_3b2e1 = load i32, i32* @eax, align 8
  ret i32 %v0_3b2e1
}

define i32 @_ZSt22__uninitialized_copy_aIP5CTxInS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b2e2:
  %v7_3b31f = call i32 @unknown_77071(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_3b31f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b330

bb:                                               ; preds = %dec_label_pc_3b2e2
  %v1_3b32e = call i32 @function_3b335()
  br label %dec_label_pc_3b330

dec_label_pc_3b330:                               ; preds = %bb, %dec_label_pc_3b2e2
  %v2_3b32e = phi i32 [ %v1_3b32e, %bb ], [ %v7_3b31f, %dec_label_pc_3b2e2 ]
  ret i32 %v2_3b32e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3b335() local_unnamed_addr {
dec_label_pc_3b335:
  %v0_3b336 = load i32, i32* @eax, align 8
  ret i32 %v0_3b336
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3b338:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_3b352 = add i32 %tmp100, 8
  %v2_3b352 = inttoptr i32 %v1_3b352 to i32*
  %v3_3b352 = load i32, i32* %v2_3b352, align 4
  %v2_3b35a = load i32, i32* %arg1, align 4
  %v2_3b35e = sub i32 %v3_3b352, %v2_3b35a
  %v2_3b362 = sdiv i32 %v2_3b35e, 4
  %v3_3b365 = mul i32 %v2_3b362, -858993459
  store i32 %v3_3b365, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b377

bb:                                               ; preds = %dec_label_pc_3b338
  %v2_3b375 = call i32 @function_3b37c(i32 %tmp100)
  br label %dec_label_pc_3b377

dec_label_pc_3b377:                               ; preds = %bb, %dec_label_pc_3b338
  %v3_3b375 = phi i32 [ %v2_3b375, %bb ], [ %v3_3b365, %dec_label_pc_3b338 ]
  ret i32 %v3_3b375
}

define i32 @function_3b37c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b37c:
  %v0_3b37d = load i32, i32* @eax, align 8
  ret i32 %v0_3b37d
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b37e:
  %v2_3b3b5 = call i32 @unknown_5e012(i32 %arg1, i32 %arg2)
  %v1_3b3c3 = call i32 @unknown_573b0(i32 %arg1)
  %v4_3b3e0 = call i32 @unknown_576f5(i32 %arg3, i32 %arg4, i32 %v2_3b3b5, i32 %v1_3b3c3)
  store i32 %v2_3b3b5, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b3f4

bb:                                               ; preds = %dec_label_pc_3b37e
  %v1_3b3f2 = call i32 @function_3b432()
  store i32 %v1_3b3f2, i32* @eax, align 8
  br label %dec_label_pc_3b3f4

dec_label_pc_3b3f4:                               ; preds = %bb, %dec_label_pc_3b37e
  %v0_3b3f4 = call i32 @function_3b42d()
  ret i32 %v0_3b3f4

; uselistorder directives
  uselistorder i32 %v2_3b3b5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3b3f7() local_unnamed_addr {
dec_label_pc_3b3f7:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b3f7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b3f7
}

define i32 @function_3b3f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b3f8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b42d() local_unnamed_addr {
dec_label_pc_3b42d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3b432() local_unnamed_addr {
dec_label_pc_3b432:
  %v0_3b437 = load i32, i32* @eax, align 8
  ret i32 %v0_3b437
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b438:
  ret i32 %arg1
}

define i32 @function_3b444(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b444:
  %v0_3b444 = load i32, i32* @ebp, align 4
  %v1_3b444 = add i32 %v0_3b444, 12
  %v2_3b444 = inttoptr i32 %v1_3b444 to i32*
  %v3_3b444 = load i32, i32* %v2_3b444, align 4
  %v2_3b447 = add i32 %v0_3b444, -32
  %v3_3b447 = inttoptr i32 %v2_3b447 to i32*
  store i32 %v3_3b444, i32* %v3_3b447, align 4
  %v0_3b44a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3b450 = load i32, i32* @ebp, align 4
  %v2_3b450 = add i32 %v1_3b450, -12
  %v3_3b450 = inttoptr i32 %v2_3b450 to i32*
  store i32 %v0_3b44a, i32* %v3_3b450, align 4
  %v0_3b455 = load i32, i32* @ebp, align 4
  %v1_3b455 = add i32 %v0_3b455, -32
  %v2_3b455 = inttoptr i32 %v1_3b455 to i32*
  %v3_3b455 = load i32, i32* %v2_3b455, align 4
  %v1_3b45c = add i32 %v0_3b455, -28
  %v2_3b45c = inttoptr i32 %v1_3b45c to i32*
  %v3_3b45c = load i32, i32* %v2_3b45c, align 4
  %v2_3b462 = call i32 @unknown_5e1c8(i32 %v3_3b45c, i32 %v3_3b455)
  %v0_3b467 = load i32, i32* @ebp, align 4
  %v1_3b467 = add i32 %v0_3b467, -28
  %v2_3b467 = inttoptr i32 %v1_3b467 to i32*
  %v3_3b467 = load i32, i32* %v2_3b467, align 4
  store i32 %v3_3b467, i32* @eax, align 8
  %v1_3b46a = add i32 %v0_3b467, -12
  %v2_3b46a = inttoptr i32 %v1_3b46a to i32*
  %v3_3b46a = load i32, i32* %v2_3b46a, align 4
  %v1_3b46d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3b46d = icmp eq i32 %v1_3b46d, %v3_3b46a
  br i1 %v3_3b46d, label %bb, label %dec_label_pc_3b476

bb:                                               ; preds = %dec_label_pc_3b444
  %v1_3b474 = call i32 @function_3b47b()
  br label %dec_label_pc_3b476

dec_label_pc_3b476:                               ; preds = %bb, %dec_label_pc_3b444
  %v2_3b474 = phi i32 [ %v1_3b474, %bb ], [ %v3_3b467, %dec_label_pc_3b444 ]
  ret i32 %v2_3b474
}

define i32 @function_3b47b() local_unnamed_addr {
dec_label_pc_3b47b:
  %v0_3b47c = load i32, i32* @eax, align 8
  ret i32 %v0_3b47c
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b47f:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_3b4a8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_3b4b5 = call i32 @unknown_7725d(i32 %v2_3b4a8, i32 %arg3)
  %v2_3b4bd = ptrtoint i32* %stack_var_-24 to i32
  %v2_3b4ca = call i32 @unknown_7725d(i32 %v2_3b4bd, i32 %arg2)
  %v3_3b4dc = load i32, i32* %stack_var_-20, align 4
  %v3_3b4e3 = load i32, i32* %stack_var_-24, align 4
  %v4_3b4ed = call i32 @unknown_772a7(i32 %arg1, i32 %v3_3b4e3, i32 %v3_3b4dc, i32 %arg4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_7725d, { 1, 0 }
}

define i32 @function_3b502(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b502:
  %v0_3b502 = load i1, i1* @zf, align 1
  br i1 %v0_3b502, label %bb, label %dec_label_pc_3b502.dec_label_pc_3b504_crit_edge

dec_label_pc_3b502.dec_label_pc_3b504_crit_edge:  ; preds = %dec_label_pc_3b502
  %v2_3b502.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3b504

bb:                                               ; preds = %dec_label_pc_3b502
  %v1_3b502 = call i32 @function_3b509()
  br label %dec_label_pc_3b504

dec_label_pc_3b504:                               ; preds = %dec_label_pc_3b502.dec_label_pc_3b504_crit_edge, %bb
  %v2_3b502 = phi i32 [ %v2_3b502.pre, %dec_label_pc_3b502.dec_label_pc_3b504_crit_edge ], [ %v1_3b502, %bb ]
  ret i32 %v2_3b502

; uselistorder directives
  uselistorder label %dec_label_pc_3b504, { 1, 0 }
}

define i32 @function_3b509() local_unnamed_addr {
dec_label_pc_3b509:
  %v0_3b50a = load i32, i32* @eax, align 8
  ret i32 %v0_3b50a
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b50d:
  ret i32 %arg1
}

define i32 @function_3b519(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b519:
  %v0_3b519 = load i32, i32* @ebp, align 4
  %v1_3b519 = add i32 %v0_3b519, 12
  %v2_3b519 = inttoptr i32 %v1_3b519 to i32*
  %v3_3b519 = load i32, i32* %v2_3b519, align 4
  %v2_3b51c = add i32 %v0_3b519, -32
  %v3_3b51c = inttoptr i32 %v2_3b51c to i32*
  store i32 %v3_3b519, i32* %v3_3b51c, align 4
  %v0_3b51f = load i32, i32* @ebp, align 4
  %v1_3b51f = add i32 %v0_3b51f, 16
  %v2_3b51f = inttoptr i32 %v1_3b51f to i32*
  %v3_3b51f = load i32, i32* %v2_3b51f, align 4
  %v2_3b522 = add i32 %v0_3b51f, -36
  %v3_3b522 = inttoptr i32 %v2_3b522 to i32*
  store i32 %v3_3b51f, i32* %v3_3b522, align 4
  %v0_3b525 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3b52b = load i32, i32* @ebp, align 4
  %v2_3b52b = add i32 %v1_3b52b, -12
  %v3_3b52b = inttoptr i32 %v2_3b52b to i32*
  store i32 %v0_3b525, i32* %v3_3b52b, align 4
  %v0_3b530 = load i32, i32* @ebp, align 4
  %v1_3b530 = add i32 %v0_3b530, -32
  %v2_3b530 = inttoptr i32 %v1_3b530 to i32*
  %v3_3b530 = load i32, i32* %v2_3b530, align 4
  %v1_3b537 = add i32 %v0_3b530, -28
  %v2_3b537 = inttoptr i32 %v1_3b537 to i32*
  %v3_3b537 = load i32, i32* %v2_3b537, align 4
  %v2_3b53d = call i32 @unknown_773c7(i32 %v3_3b537, i32 %v3_3b530)
  %v0_3b542 = load i32, i32* @ebp, align 4
  %v1_3b542 = add i32 %v0_3b542, -12
  %v2_3b542 = inttoptr i32 %v1_3b542 to i32*
  %v3_3b542 = load i32, i32* %v2_3b542, align 4
  %v1_3b545 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b545 = xor i32 %v1_3b545, %v3_3b542
  %v3_3b545 = icmp eq i32 %v2_3b545, 0
  store i32 %v2_3b545, i32* @eax, align 8
  br i1 %v3_3b545, label %bb, label %dec_label_pc_3b54e

bb:                                               ; preds = %dec_label_pc_3b519
  %v1_3b54c = call i32 @function_3b553()
  br label %dec_label_pc_3b54e

dec_label_pc_3b54e:                               ; preds = %bb, %dec_label_pc_3b519
  %v4_3b54c = phi i32 [ %v1_3b54c, %bb ], [ %v2_3b545, %dec_label_pc_3b519 ]
  ret i32 %v4_3b54c
}

declare i32 @__stack_chk_fail.1519(i32, i32) local_unnamed_addr

define i32 @function_3b553() local_unnamed_addr {
dec_label_pc_3b553:
  %v0_3b554 = load i32, i32* @eax, align 8
  ret i32 %v0_3b554
}

define i32 @_ZSt4copyIP6CTxOutS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b555:
  %v0_3b56e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3b56e
}

define i32 @function_3b578(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b578:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3b578 = load i32, i32* @ebx, align 4
  %v1_3b578 = add i32 %v0_3b578, 76144709
  %v2_3b578 = inttoptr i32 %v1_3b578 to i8*
  %v3_3b578 = load i8, i8* %v2_3b578, align 1
  %v4_3b578 = udiv i8 %v3_3b578, 16
  %v5_3b578 = mul i8 %v3_3b578, 16
  %v6_3b578 = or i8 %v4_3b578, %v5_3b578
  store i8 %v6_3b578, i8* %v2_3b578, align 1
  %v1_3b57f = call i32 @unknown_77451(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_3b57f, i32* %ebx.global-to-local, align 4
  %v0_3b586 = load i32, i32* @ebp, align 4
  %v1_3b586 = add i32 %v0_3b586, -28
  %v2_3b586 = inttoptr i32 %v1_3b586 to i32*
  %v3_3b586 = load i32, i32* %v2_3b586, align 4
  %v1_3b58c = call i32 @unknown_77451(i32 %v3_3b586)
  %v0_3b591 = load i32, i32* @ebp, align 4
  %v1_3b591 = add i32 %v0_3b591, -36
  %v2_3b591 = inttoptr i32 %v1_3b591 to i32*
  %v3_3b591 = load i32, i32* %v2_3b591, align 4
  %v0_3b598 = load i32, i32* %ebx.global-to-local, align 4
  %v3_3b59f = call i32 @unknown_77486(i32 %v1_3b58c, i32 %v0_3b598, i32 %v3_3b591)
  store i32 %v3_3b59f, i32* @eax, align 8
  %v0_3b5a4 = load i32, i32* @ebp, align 4
  %v1_3b5a4 = add i32 %v0_3b5a4, -12
  %v2_3b5a4 = inttoptr i32 %v1_3b5a4 to i32*
  %v3_3b5a4 = load i32, i32* %v2_3b5a4, align 4
  %v1_3b5a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b5a7 = xor i32 %v1_3b5a7, %v3_3b5a4
  %v3_3b5a7 = icmp eq i32 %v2_3b5a7, 0
  store i32 %v2_3b5a7, i32* @edx, align 4
  br i1 %v3_3b5a7, label %bb, label %dec_label_pc_3b5b0

bb:                                               ; preds = %dec_label_pc_3b578
  %v1_3b5ae = call i32 @function_3b5b5()
  br label %dec_label_pc_3b5b0

dec_label_pc_3b5b0:                               ; preds = %bb, %dec_label_pc_3b578
  %v2_3b5ae = phi i32 [ %v1_3b5ae, %bb ], [ %v3_3b59f, %dec_label_pc_3b578 ]
  ret i32 %v2_3b5ae

; uselistorder directives
  uselistorder i32 (i32)* @unknown_77451, { 1, 0 }
  uselistorder i8 16, { 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 0, 1, 2, 18, 17, 20, 19 }
  uselistorder i32 76144709, { 1, 0 }
}

define i32 @function_3b5b5() local_unnamed_addr {
dec_label_pc_3b5b5:
  %v0_3b5ba = load i32, i32* @eax, align 8
  ret i32 %v0_3b5ba
}

define i32 @_ZSt22__uninitialized_copy_aIP6CTxOutS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b5bb:
  ret i32 %arg2
}

define i32 @function_3b5ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b5ef:
  %v0_3b5f2 = load i32, i32* @ebp, align 4
  %v1_3b5f2 = add i32 %v0_3b5f2, -28
  %v2_3b5f2 = inttoptr i32 %v1_3b5f2 to i32*
  %v3_3b5f2 = load i32, i32* %v2_3b5f2, align 4
  %v1_3b5f8 = call i32 @unknown_7755e(i32 %v3_3b5f2)
  store i32 %v1_3b5f8, i32* @eax, align 8
  %v0_3b5fd = load i32, i32* @ebp, align 4
  %v1_3b5fd = add i32 %v0_3b5fd, -12
  %v2_3b5fd = inttoptr i32 %v1_3b5fd to i32*
  %v3_3b5fd = load i32, i32* %v2_3b5fd, align 4
  %v1_3b600 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b600 = xor i32 %v1_3b600, %v3_3b5fd
  %v3_3b600 = icmp eq i32 %v2_3b600, 0
  store i32 %v2_3b600, i32* @edx, align 4
  br i1 %v3_3b600, label %bb, label %dec_label_pc_3b609

bb:                                               ; preds = %dec_label_pc_3b5ef
  %v1_3b607 = call i32 @function_3b60e()
  br label %dec_label_pc_3b609

dec_label_pc_3b609:                               ; preds = %bb, %dec_label_pc_3b5ef
  %v2_3b607 = phi i32 [ %v1_3b607, %bb ], [ %v1_3b5f8, %dec_label_pc_3b5ef ]
  ret i32 %v2_3b607
}

define i32 @function_3b60e() local_unnamed_addr {
dec_label_pc_3b60e:
  %v0_3b60f = load i32, i32* @eax, align 8
  ret i32 %v0_3b60f
}

define i32 @_ZSt10_ConstructI12CTransactionS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b610:
  ret i32 %arg2
}

define i32 @function_3b628() local_unnamed_addr {
dec_label_pc_3b628:
  %eax.global-to-local = alloca i32, align 4
  %v2_3b628 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3b628 = load i32, i32* %eax.global-to-local, align 8
  %v4_3b628 = trunc i32 %v3_3b628 to i8
  %v5_3b628 = add i8 %v4_3b628, %v2_3b628
  %v21_3b628 = inttoptr i32 %v3_3b628 to i8*
  store i8 %v5_3b628, i8* %v21_3b628, align 1
  %v22_3b628 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_3b628
}

define i32 @function_3b672() local_unnamed_addr {
dec_label_pc_3b672:
  %v0_3b672 = load i32, i32* @ebp, align 4
  %v1_3b672 = add i32 %v0_3b672, -28
  %v2_3b672 = inttoptr i32 %v1_3b672 to i32*
  %v3_3b672 = load i32, i32* %v2_3b672, align 4
  %v1_3b675 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b675 = xor i32 %v1_3b675, %v3_3b672
  %v3_3b675 = icmp eq i32 %v2_3b675, 0
  store i32 %v2_3b675, i32* @eax, align 8
  br i1 %v3_3b675, label %bb, label %dec_label_pc_3b67e

bb:                                               ; preds = %dec_label_pc_3b672
  %v1_3b67c = call i32 @function_3b683()
  br label %dec_label_pc_3b67e

dec_label_pc_3b67e:                               ; preds = %bb, %dec_label_pc_3b672
  %v2_3b67c = phi i32 [ %v1_3b67c, %bb ], [ %v2_3b675, %dec_label_pc_3b672 ]
  ret i32 %v2_3b67c
}

define i32 @function_3b683() local_unnamed_addr {
dec_label_pc_3b683:
  %v0_3b68a = load i32, i32* @eax, align 8
  ret i32 %v0_3b68a
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_() local_unnamed_addr {
dec_label_pc_3b68c:
  %eax.global-to-local = alloca i32, align 4
  %v2_3b68d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_3b68d
}

define i32 @function_3b690(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b690:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v4_3b691 = load i32, i32* @ecx, align 8
  %v0_3b699 = load i32, i32* @ebp, align 4
  %v0_3b69a = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3b69a = or i32 %v0_3b69a, 137
  store i32 %v11_3b69a, i32* %eax.global-to-local, align 8
  %v1_3b69d = add i32 %v4_3b691, 255
  %v1_3b69f = add i32 %v0_3b699, 3
  store i32 %v1_3b69f, i32* %ebp.global-to-local, align 4
  %v1_3b6a0 = add i32 %v4_3b691, 1166793796
  %v2_3b6a0 = inttoptr i32 %v1_3b6a0 to i8*
  %v3_3b6a0 = load i8, i8* %v2_3b6a0, align 1
  %v5_3b6a0 = trunc i32 %v1_3b69d to i8
  %v8_3b6a0 = add i8 %v3_3b6a0, %v5_3b6a0
  %v28_3b6a0 = icmp ult i8 %v8_3b6a0, %v3_3b6a0
  store i1 %v28_3b6a0, i1* %cf.global-to-local, align 1
  store i8 %v8_3b6a0, i8* %v2_3b6a0, align 1
  %v0_3b6a6 = load i32, i32* %eax.global-to-local, align 8
  %v1_3b6a6 = trunc i32 %v0_3b6a6 to i8
  %v2_3b6a6 = load i1, i1* %cf.global-to-local, align 1
  %v3_3b6a6 = zext i1 %v2_3b6a6 to i8
  %v4_3b6a6 = add i8 %v1_3b6a6, -119
  %v5_3b6a6 = add i8 %v4_3b6a6, %v3_3b6a6
  %v22_3b6a6 = icmp ule i8 %v5_3b6a6, %v1_3b6a6
  %v23_3b6a6 = icmp ugt i8 %v1_3b6a6, 118
  %v24_3b6a6 = select i1 %v2_3b6a6, i1 %v22_3b6a6, i1 %v23_3b6a6
  %v25_3b6a6 = zext i8 %v5_3b6a6 to i32
  %v27_3b6a6 = and i32 %v0_3b6a6, -256
  %v28_3b6a6 = or i32 %v25_3b6a6, %v27_3b6a6
  store i32 %v28_3b6a6, i32* %eax.global-to-local, align 8
  %v0_3b6a8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3b6a8 = add i32 %v0_3b6a8, 1
  store i32 %v1_3b6a8, i32* @ebp, align 4
  %v3_3b6ac = zext i1 %v24_3b6a6 to i8
  %v4_3b6ac = add i8 %v3_3b6ac, %v5_3b6a6
  %v19_3b6ac = icmp ule i8 %v4_3b6ac, %v5_3b6a6
  %v21_3b6ac = icmp eq i1 %v24_3b6a6, %v19_3b6ac
  store i1 %v21_3b6ac, i1* %cf.global-to-local, align 1
  %v22_3b6ac = zext i8 %v4_3b6ac to i32
  %v25_3b6ac = or i32 %v22_3b6ac, %v27_3b6a6
  store i32 %v25_3b6ac, i32* %eax.global-to-local, align 8
  %v1_3b6ae = inttoptr i32 %v25_3b6ac to i8*
  %v2_3b6ae = load i8, i8* %v1_3b6ae, align 1
  %v5_3b6ae = add i8 %v2_3b6ae, %v4_3b6ac
  store i8 %v5_3b6ae, i8* %v1_3b6ae, align 1
  %v0_3b6b0 = load i32, i32* %eax.global-to-local, align 8
  %v1_3b6b0 = load i32, i32* @ebp, align 4
  %v2_3b6b0 = add i32 %v1_3b6b0, -12
  %v3_3b6b0 = inttoptr i32 %v2_3b6b0 to i32*
  store i32 %v0_3b6b0, i32* %v3_3b6b0, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3b6b5 = load i32, i32* @ebp, align 4
  %v1_3b6b5 = add i32 %v0_3b6b5, -40
  %v2_3b6b5 = inttoptr i32 %v1_3b6b5 to i32*
  %v3_3b6b5 = load i32, i32* %v2_3b6b5, align 4
  store i32 %v3_3b6b5, i32* %eax.global-to-local, align 8
  %v1_3b6bc = add i32 %v0_3b6b5, -36
  %v2_3b6bc = inttoptr i32 %v1_3b6bc to i32*
  %v3_3b6bc = load i32, i32* %v2_3b6bc, align 4
  store i32 %v3_3b6bc, i32* %eax.global-to-local, align 8
  %v1_3b6c3 = add i32 %v0_3b6b5, -32
  %v2_3b6c3 = inttoptr i32 %v1_3b6c3 to i32*
  %v3_3b6c3 = load i32, i32* %v2_3b6c3, align 4
  store i32 %v3_3b6c3, i32* %eax.global-to-local, align 8
  %v1_3b6ca = add i32 %v0_3b6b5, -28
  %v2_3b6ca = inttoptr i32 %v1_3b6ca to i32*
  %v3_3b6ca = load i32, i32* %v2_3b6ca, align 4
  store i32 %v3_3b6ca, i32* %eax.global-to-local, align 8
  %v4_3b6d0 = call i32 @unknown_7767e(i32 %v3_3b6ca, i32 %v3_3b6c3, i32 %v3_3b6bc, i32 %v3_3b6b5)
  store i32 %v4_3b6d0, i32* %eax.global-to-local, align 8
  %v0_3b6d5 = load i32, i32* @ebp, align 4
  %v1_3b6d5 = add i32 %v0_3b6d5, -12
  %v2_3b6d5 = inttoptr i32 %v1_3b6d5 to i32*
  %v3_3b6d5 = load i32, i32* %v2_3b6d5, align 4
  store i32 %v3_3b6d5, i32* %eax.global-to-local, align 8
  %v1_3b6d8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b6d8 = xor i32 %v1_3b6d8, %v3_3b6d5
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3b6d8 = icmp eq i32 %v2_3b6d8, 0
  store i32 %v2_3b6d8, i32* @eax, align 8
  br i1 %v3_3b6d8, label %bb, label %dec_label_pc_3b6e1

bb:                                               ; preds = %dec_label_pc_3b690
  %v1_3b6df = call i32 @function_3b6e6()
  store i32 %v1_3b6df, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3b6e1

dec_label_pc_3b6e1:                               ; preds = %bb, %dec_label_pc_3b690
  %v3_3b6df = phi i32 [ %v1_3b6df, %bb ], [ %v2_3b6d8, %dec_label_pc_3b690 ]
  ret i32 %v3_3b6df

; uselistorder directives
  uselistorder i32 %v0_3b6b5, { 1, 0, 2, 3 }
  uselistorder i8 %v4_3b6ac, { 0, 2, 1 }
  uselistorder i8 %v5_3b6a6, { 1, 0, 3, 2 }
  uselistorder i8 %v3_3b6a0, { 1, 0 }
}

define i32 @function_3b6e6() local_unnamed_addr {
dec_label_pc_3b6e6:
  %v0_3b6e7 = load i32, i32* @eax, align 8
  ret i32 %v0_3b6e7
}

define i32 @_ZN5CTxIn11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b6e8:
  ret i32 0
}

define i32 @function_3b71d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b71d:
  %v1_3b71d = load i32, i32* @eax, align 8
  %v0_3b720 = load i32, i32* @ebp, align 4
  %v1_3b720 = add i32 %v0_3b720, 1
  store i32 %v1_3b720, i32* @ebp, align 4
  %tmp5 = trunc i32 %v1_3b71d to i8
  %v5_3b722 = mul i8 %tmp5, 2
  %v21_3b722 = inttoptr i32 %v1_3b71d to i8*
  store i8 %v5_3b722, i8* %v21_3b722, align 1
  %v2_3b724 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3b724 = load i32, i32* @eax, align 8
  %v4_3b724 = trunc i32 %v3_3b724 to i8
  %v5_3b724 = add i8 %v4_3b724, %v2_3b724
  %v21_3b724 = inttoptr i32 %v3_3b724 to i8*
  store i8 %v5_3b724, i8* %v21_3b724, align 1
  %v0_3b726 = load i32, i32* @ebp, align 4
  %v1_3b726 = add i32 %v0_3b726, -28
  %v2_3b726 = inttoptr i32 %v1_3b726 to i32*
  %v3_3b726 = load i32, i32* %v2_3b726, align 4
  %v0_3b729 = load i32, i32* @edx, align 4
  %v1_3b72d = add i32 %v0_3b726, -40
  %v2_3b72d = inttoptr i32 %v1_3b72d to i32*
  %v3_3b72d = load i32, i32* %v2_3b72d, align 4
  %v1_3b734 = add i32 %v0_3b726, -36
  %v2_3b734 = inttoptr i32 %v1_3b734 to i32*
  %v3_3b734 = load i32, i32* %v2_3b734, align 4
  store i32 %v3_3b734, i32* @edx, align 4
  %v1_3b73f = add i32 %v0_3b726, -32
  %v2_3b73f = inttoptr i32 %v1_3b73f to i32*
  %v3_3b73f = load i32, i32* %v2_3b73f, align 4
  %sext = mul i32 %v0_3b729, 16777216
  %v5_3b745 = sdiv i32 %sext, 16777216
  %v6_3b745 = call i32 @unknown_77b61(i32 %v3_3b73f, i32 %v3_3b726, i32 %v3_3b734, i32 %v3_3b72d, i32 %v5_3b745)
  ret i32 %v6_3b745

; uselistorder directives
  uselistorder i32 %v0_3b726, { 0, 2, 1, 3 }
}

define i32 @function_3b74a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b74a:
  %v0_3b74a = load i32, i32* @ebp, align 4
  %v1_3b74a = add i32 %v0_3b74a, -20
  %v2_3b74a = inttoptr i32 %v1_3b74a to i32*
  %v3_3b74a = load i32, i32* %v2_3b74a, align 4
  %v4_3b74a = load i32, i32* @eax, align 8
  %v5_3b74a = add i32 %v4_3b74a, %v3_3b74a
  store i32 %v5_3b74a, i32* %v2_3b74a, align 4
  %v0_3b74d = load i32, i32* @ebp, align 4
  %v1_3b74d = add i32 %v0_3b74d, -28
  %v2_3b74d = inttoptr i32 %v1_3b74d to i32*
  %v3_3b74d = load i32, i32* %v2_3b74d, align 4
  %v1_3b750 = add i32 %v3_3b74d, 36
  %v0_3b753 = load i32, i32* @esi, align 4
  %v1_3b759 = add i32 %v0_3b74d, -40
  %v2_3b759 = inttoptr i32 %v1_3b759 to i32*
  %v3_3b759 = load i32, i32* %v2_3b759, align 4
  %v1_3b760 = add i32 %v0_3b74d, -36
  %v2_3b760 = inttoptr i32 %v1_3b760 to i32*
  %v3_3b760 = load i32, i32* %v2_3b760, align 4
  %v1_3b76b = add i32 %v0_3b74d, -32
  %v2_3b76b = inttoptr i32 %v1_3b76b to i32*
  %v3_3b76b = load i32, i32* %v2_3b76b, align 4
  %sext = mul i32 %v0_3b753, 16777216
  %v5_3b771 = sdiv i32 %sext, 16777216
  %v6_3b771 = call i32 @unknown_77bc9(i32 %v3_3b76b, i32 %v1_3b750, i32 %v3_3b760, i32 %v3_3b759, i32 %v5_3b771)
  %v0_3b776 = load i32, i32* @ebp, align 4
  %v1_3b776 = add i32 %v0_3b776, -20
  %v2_3b776 = inttoptr i32 %v1_3b776 to i32*
  %v3_3b776 = load i32, i32* %v2_3b776, align 4
  %v5_3b776 = add i32 %v3_3b776, %v6_3b771
  store i32 %v5_3b776, i32* %v2_3b776, align 4
  %v0_3b779 = load i32, i32* @ebp, align 4
  %v1_3b779 = add i32 %v0_3b779, -28
  %v2_3b779 = inttoptr i32 %v1_3b779 to i32*
  %v3_3b779 = load i32, i32* %v2_3b779, align 4
  %v1_3b77c = add i32 %v3_3b779, ptrtoint (i32* @global_var_30.2823 to i32)
  %v0_3b77f = load i32, i32* @ebx, align 4
  %v1_3b783 = add i32 %v0_3b779, -40
  %v2_3b783 = inttoptr i32 %v1_3b783 to i32*
  %v3_3b783 = load i32, i32* %v2_3b783, align 4
  %v1_3b78a = add i32 %v0_3b779, -36
  %v2_3b78a = inttoptr i32 %v1_3b78a to i32*
  %v3_3b78a = load i32, i32* %v2_3b78a, align 4
  %v1_3b795 = add i32 %v0_3b779, -32
  %v2_3b795 = inttoptr i32 %v1_3b795 to i32*
  %v3_3b795 = load i32, i32* %v2_3b795, align 4
  %sext1 = mul i32 %v0_3b77f, 16777216
  %v5_3b79b = sdiv i32 %sext1, 16777216
  %v6_3b79b = call i32 @unknown_6e612(i32 %v3_3b795, i32 %v1_3b77c, i32 %v3_3b78a, i32 %v3_3b783, i32 %v5_3b79b)
  %v0_3b7a0 = load i32, i32* @ebp, align 4
  %v1_3b7a0 = add i32 %v0_3b7a0, -20
  %v2_3b7a0 = inttoptr i32 %v1_3b7a0 to i32*
  %v3_3b7a0 = load i32, i32* %v2_3b7a0, align 4
  %v5_3b7a0 = add i32 %v3_3b7a0, %v6_3b79b
  store i32 %v5_3b7a0, i32* %v2_3b7a0, align 4
  %v0_3b7a3 = load i32, i32* @ebp, align 4
  %v1_3b7a3 = add i32 %v0_3b7a3, -12
  %v2_3b7a3 = inttoptr i32 %v1_3b7a3 to i32*
  %v3_3b7a3 = load i32, i32* %v2_3b7a3, align 4
  %v1_3b7a6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b7a6 = xor i32 %v1_3b7a6, %v3_3b7a3
  %v3_3b7a6 = icmp eq i32 %v2_3b7a6, 0
  store i32 %v2_3b7a6, i32* @eax, align 8
  br i1 %v3_3b7a6, label %bb, label %dec_label_pc_3b7af

bb:                                               ; preds = %dec_label_pc_3b74a
  %v1_3b7ad = call i32 @function_3b7b4()
  br label %dec_label_pc_3b7af

dec_label_pc_3b7af:                               ; preds = %bb, %dec_label_pc_3b74a
  %v3_3b7ad = phi i32 [ %v1_3b7ad, %bb ], [ %v2_3b7a6, %dec_label_pc_3b74a ]
  ret i32 %v3_3b7ad

; uselistorder directives
  uselistorder i32 %v0_3b779, { 0, 2, 1, 3 }
  uselistorder i32 %v0_3b74d, { 0, 2, 1, 3 }
}

define i32 @function_3b7b4() local_unnamed_addr {
dec_label_pc_3b7b4:
  %v0_3b7ba = load i32, i32* @eax, align 8
  ret i32 %v0_3b7ba
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b7bc:
  %v8_3b800 = call i32 @unknown_77d06(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b811

bb:                                               ; preds = %dec_label_pc_3b7bc
  %v1_3b80f = call i32 @function_3b816()
  br label %dec_label_pc_3b811

dec_label_pc_3b811:                               ; preds = %bb, %dec_label_pc_3b7bc
  %v2_3b80f = phi i32 [ %v1_3b80f, %bb ], [ 0, %dec_label_pc_3b7bc ]
  ret i32 %v2_3b80f

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3b816() local_unnamed_addr {
dec_label_pc_3b816:
  %v0_3b817 = load i32, i32* @eax, align 8
  ret i32 %v0_3b817
}

define i32 @_ZN6CTxOut11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3b818:
  %edx.global-to-local = alloca i32, align 4
  %v0_3b858 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_3b858, 16777216
  %v5_3b874 = sdiv i32 %sext, 16777216
  %v6_3b874 = call i32 @unknown_68567(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %v5_3b874)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3b880(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b880:
  %stack_var_-4 = alloca i32, align 4
  %v0_3b880 = load i32, i32* @eax, align 8
  store i32 %v0_3b880, i32* %stack_var_-4, align 4
  %v1_3b881 = add i32 %v0_3b880, -1961876388
  %v2_3b881 = inttoptr i32 %v1_3b881 to i8*
  %v3_3b881 = load i8, i8* %v2_3b881, align 1
  %v4_3b881 = load i32, i32* @ecx, align 8
  %v5_3b881 = trunc i32 %v4_3b881 to i8
  %v6_3b881 = or i8 %v5_3b881, %v3_3b881
  store i8 %v6_3b881, i8* %v2_3b881, align 1
  %v0_3b887 = load i32, i32* @ebp, align 4
  %v1_3b88e = add i32 %v0_3b887, 2
  store i32 %v1_3b88e, i32* @ebp, align 4
  %v1_3b898 = add i32 %v0_3b887, -30
  %v2_3b898 = inttoptr i32 %v1_3b898 to i32*
  %v3_3b898 = load i32, i32* %v2_3b898, align 4
  %v1_3b89e = load i32, i32* %stack_var_-4, align 4
  %v2_3b89e = call i32 @unknown_77cf9(i32 %v3_3b898, i32 %v1_3b89e)
  %v0_3b8a3 = load i32, i32* @ebp, align 4
  %v1_3b8a3 = add i32 %v0_3b8a3, -20
  %v2_3b8a3 = inttoptr i32 %v1_3b8a3 to i32*
  %v3_3b8a3 = load i32, i32* %v2_3b8a3, align 4
  %v5_3b8a3 = add i32 %v3_3b8a3, %v2_3b89e
  store i32 %v5_3b8a3, i32* %v2_3b8a3, align 4
  %v0_3b8a6 = load i32, i32* @ebp, align 4
  %v1_3b8a6 = add i32 %v0_3b8a6, -12
  %v2_3b8a6 = inttoptr i32 %v1_3b8a6 to i32*
  %v3_3b8a6 = load i32, i32* %v2_3b8a6, align 4
  %v1_3b8a9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3b8a9 = xor i32 %v1_3b8a9, %v3_3b8a6
  %v3_3b8a9 = icmp eq i32 %v2_3b8a9, 0
  store i32 %v2_3b8a9, i32* @eax, align 8
  br i1 %v3_3b8a9, label %bb, label %dec_label_pc_3b8b2

bb:                                               ; preds = %dec_label_pc_3b880
  %v1_3b8b0 = call i32 @function_3b8b7()
  br label %dec_label_pc_3b8b2

dec_label_pc_3b8b2:                               ; preds = %bb, %dec_label_pc_3b880
  %v2_3b8b0 = phi i32 [ %v1_3b8b0, %bb ], [ %v2_3b8a9, %dec_label_pc_3b880 ]
  ret i32 %v2_3b8b0
}

define i32 @function_3b8b7() local_unnamed_addr {
dec_label_pc_3b8b7:
  %v0_3b8bc = load i32, i32* @eax, align 8
  ret i32 %v0_3b8bc
}

define i32 @_ZN5boost6detail13addr_impl_refIKxEC1ERS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b8be:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b8ef

bb:                                               ; preds = %dec_label_pc_3b8be
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_3b8ed = call i32 @function_3b8f4(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_3b8ef

dec_label_pc_3b8ef:                               ; preds = %bb, %dec_label_pc_3b8be
  %v4_3b8ed = phi i32 [ %v3_3b8ed, %bb ], [ 0, %dec_label_pc_3b8be ]
  ret i32 %v4_3b8ed

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3b8f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b8f4:
  %v0_3b8f5 = load i32, i32* @eax, align 8
  ret i32 %v0_3b8f5
}

define i32 @_ZNK5boost6detail13addr_impl_refIKxEcvRS2_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3b8f6:
  %v2_3b910 = load i32, i32* %arg1, align 4
  store i32 %v2_3b910, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b91e

bb:                                               ; preds = %dec_label_pc_3b8f6
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_3b91c = call i32 @function_3b923(i32 %tmp100)
  br label %dec_label_pc_3b91e

dec_label_pc_3b91e:                               ; preds = %bb, %dec_label_pc_3b8f6
  %v3_3b91c = phi i32 [ %v2_3b91c, %bb ], [ %v2_3b910, %dec_label_pc_3b8f6 ]
  ret i32 %v3_3b91c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3b923(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b923:
  %v0_3b924 = load i32, i32* @eax, align 8
  ret i32 %v0_3b924
}

define i32 @_ZN5boost6detail14addressof_implIKxE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b925:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b951

bb:                                               ; preds = %dec_label_pc_3b925
  %v3_3b94f = call i32 @function_3b956(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_3b951

dec_label_pc_3b951:                               ; preds = %bb, %dec_label_pc_3b925
  %v4_3b94f = phi i32 [ %v3_3b94f, %bb ], [ %arg1, %dec_label_pc_3b925 ]
  ret i32 %v4_3b94f
}

define i32 @function_3b956(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b956:
  %v0_3b957 = load i32, i32* @eax, align 8
  ret i32 %v0_3b957
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitISsEEiRT_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b958:
  ret i32 %arg2
}

define i32 @function_3b96a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b96a:
  %v0_3b96a = load i32, i32* @ebp, align 4
  %v1_3b96a = add i32 %v0_3b96a, 16
  %v2_3b96a = inttoptr i32 %v1_3b96a to i32*
  %v3_3b96a = load i32, i32* %v2_3b96a, align 4
  %v2_3b96d = add i32 %v0_3b96a, -36
  %v3_3b96d = inttoptr i32 %v2_3b96d to i32*
  store i32 %v3_3b96a, i32* %v3_3b96d, align 4
  %v0_3b970 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3b976 = load i32, i32* @ebp, align 4
  %v2_3b976 = add i32 %v1_3b976, -12
  %v3_3b976 = inttoptr i32 %v2_3b976 to i32*
  store i32 %v0_3b970, i32* %v3_3b976, align 4
  %v0_3b97b = load i32, i32* @ebp, align 4
  %v1_3b97b = add i32 %v0_3b97b, -28
  %v2_3b97b = inttoptr i32 %v1_3b97b to i32*
  %v3_3b97b = load i32, i32* %v2_3b97b, align 4
  %v1_3b97e = inttoptr i32 %v3_3b97b to i32*
  %v2_3b97e = load i32, i32* %v1_3b97e, align 4
  %v1_3b980 = add i32 %v0_3b97b, -32
  %v2_3b980 = inttoptr i32 %v1_3b980 to i32*
  %v3_3b980 = load i32, i32* %v2_3b980, align 4
  %v2_3b98a = call i32 @unknown_65ab5(i32 %v2_3b97e, i32 %v3_3b980)
  store i32 %v2_3b98a, i32* @eax, align 8
  %v0_3b98f = load i32, i32* @ebp, align 4
  %v1_3b98f = add i32 %v0_3b98f, -12
  %v2_3b98f = inttoptr i32 %v1_3b98f to i32*
  %v3_3b98f = load i32, i32* %v2_3b98f, align 4
  %v1_3b992 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3b992 = icmp eq i32 %v1_3b992, %v3_3b98f
  br i1 %v3_3b992, label %bb, label %dec_label_pc_3b99b

bb:                                               ; preds = %dec_label_pc_3b96a
  %v1_3b999 = call i32 @function_3b9a0()
  br label %dec_label_pc_3b99b

dec_label_pc_3b99b:                               ; preds = %bb, %dec_label_pc_3b96a
  %v2_3b999 = phi i32 [ %v1_3b999, %bb ], [ %v2_3b98a, %dec_label_pc_3b96a ]
  ret i32 %v2_3b999
}

define i32 @function_3b9a0() local_unnamed_addr {
dec_label_pc_3b9a0:
  %v0_3b9a1 = load i32, i32* @eax, align 8
  ret i32 %v0_3b9a1
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIS9_EEiRNS1_IT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3b9a2:
  %v1_3b9cb = call i32 @unknown_783c8(i32 %arg2)
  %v3_3b9e2 = call i32 @unknown_783fe(i32 %arg1, i32 %v1_3b9cb, i32 1)
  store i32 %v3_3b9e2, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3b9f3

bb:                                               ; preds = %dec_label_pc_3b9a2
  %v1_3b9f1 = call i32 @function_3b9f8()
  br label %dec_label_pc_3b9f3

dec_label_pc_3b9f3:                               ; preds = %bb, %dec_label_pc_3b9a2
  %v2_3b9f1 = phi i32 [ %v1_3b9f1, %bb ], [ %v3_3b9e2, %dec_label_pc_3b9a2 ]
  ret i32 %v2_3b9f1
}

define i32 @function_3b9f8() local_unnamed_addr {
dec_label_pc_3b9f8:
  %v0_3b9f9 = load i32, i32* @eax, align 8
  ret i32 %v0_3b9f9
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitISE_EEiRNS1_IT_EEl() local_unnamed_addr {
dec_label_pc_3b9fa:
  %eax.global-to-local = alloca i32, align 4
  %v17_3b9fd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3b9fd
}

define i32 @function_3ba00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ba00:
  %v0_3ba00 = load i32, i32* @ebp, align 4
  %v1_3ba00 = add i32 %v0_3ba00, 8
  %v2_3ba00 = inttoptr i32 %v1_3ba00 to i32*
  %v3_3ba00 = load i32, i32* %v2_3ba00, align 4
  %v2_3ba03 = add i32 %v0_3ba00, -28
  %v3_3ba03 = inttoptr i32 %v2_3ba03 to i32*
  store i32 %v3_3ba00, i32* %v3_3ba03, align 4
  %v0_3ba06 = load i32, i32* @ebp, align 4
  %v1_3ba06 = add i32 %v0_3ba06, 12
  %v2_3ba06 = inttoptr i32 %v1_3ba06 to i32*
  %v3_3ba06 = load i32, i32* %v2_3ba06, align 4
  %v2_3ba09 = add i32 %v0_3ba06, -32
  %v3_3ba09 = inttoptr i32 %v2_3ba09 to i32*
  store i32 %v3_3ba06, i32* %v3_3ba09, align 4
  %v0_3ba0c = load i32, i32* @ebp, align 4
  %v1_3ba0c = add i32 %v0_3ba0c, 16
  %v2_3ba0c = inttoptr i32 %v1_3ba0c to i32*
  %v3_3ba0c = load i32, i32* %v2_3ba0c, align 4
  %v2_3ba0f = add i32 %v0_3ba0c, -36
  %v3_3ba0f = inttoptr i32 %v2_3ba0f to i32*
  store i32 %v3_3ba0c, i32* %v3_3ba0f, align 4
  %v0_3ba12 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3ba18 = load i32, i32* @ebp, align 4
  %v2_3ba18 = add i32 %v1_3ba18, -12
  %v3_3ba18 = inttoptr i32 %v2_3ba18 to i32*
  store i32 %v0_3ba12, i32* %v3_3ba18, align 4
  %v0_3ba1d = load i32, i32* @ebp, align 4
  %v1_3ba1d = add i32 %v0_3ba1d, -32
  %v2_3ba1d = inttoptr i32 %v1_3ba1d to i32*
  %v3_3ba1d = load i32, i32* %v2_3ba1d, align 4
  %v1_3ba23 = call i32 @unknown_784a0(i32 %v3_3ba1d)
  %v0_3ba34 = load i32, i32* @ebp, align 4
  %v1_3ba34 = add i32 %v0_3ba34, -28
  %v2_3ba34 = inttoptr i32 %v1_3ba34 to i32*
  %v3_3ba34 = load i32, i32* %v2_3ba34, align 4
  %v3_3ba3a = call i32 @unknown_784d6(i32 %v3_3ba34, i32 %v1_3ba23, i32 1)
  store i32 %v3_3ba3a, i32* @eax, align 8
  %v0_3ba3f = load i32, i32* @ebp, align 4
  %v1_3ba3f = add i32 %v0_3ba3f, -12
  %v2_3ba3f = inttoptr i32 %v1_3ba3f to i32*
  %v3_3ba3f = load i32, i32* %v2_3ba3f, align 4
  %v1_3ba42 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3ba42 = icmp eq i32 %v1_3ba42, %v3_3ba3f
  br i1 %v3_3ba42, label %bb, label %dec_label_pc_3ba4b

bb:                                               ; preds = %dec_label_pc_3ba00
  %v1_3ba49 = call i32 @function_3ba50()
  br label %dec_label_pc_3ba4b

dec_label_pc_3ba4b:                               ; preds = %bb, %dec_label_pc_3ba00
  %v2_3ba49 = phi i32 [ %v1_3ba49, %bb ], [ %v3_3ba3a, %dec_label_pc_3ba00 ]
  ret i32 %v2_3ba49
}

define i32 @function_3ba4e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ba4e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3ba50() local_unnamed_addr {
dec_label_pc_3ba50:
  %v0_3ba51 = load i32, i32* @eax, align 8
  ret i32 %v0_3ba51
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIbEEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ba52:
  %tmp106 = inttoptr i32 %arg2 to i8*
  %v2_3ba78 = load i8, i8* %tmp106, align 1
  %v3_3ba78 = zext i8 %v2_3ba78 to i32
  %v2_3ba81 = load i32, i32* %arg1, align 4
  %v2_3ba8a = call i32 @unknown_65799(i32 %v2_3ba81, i32 %v3_3ba78)
  ret i32 %v2_3ba8a
}

define i32 @function_3ba95(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ba95:
  %zf.global-to-local = alloca i1, align 1
  %v0_3ba95 = load i32, i32* @eax, align 8
  %v1_3ba95 = trunc i32 %v0_3ba95 to i8
  %v2_3ba95 = load i1, i1* @cf, align 1
  %v3_3ba95 = zext i1 %v2_3ba95 to i8
  %v4_3ba95 = add i8 %v3_3ba95, %v1_3ba95
  %v13_3ba95 = icmp eq i8 %v4_3ba95, 0
  store i1 %v13_3ba95, i1* %zf.global-to-local, align 1
  %v22_3ba95 = zext i8 %v4_3ba95 to i32
  %v24_3ba95 = and i32 %v0_3ba95, -256
  %v25_3ba95 = or i32 %v22_3ba95, %v24_3ba95
  store i32 %v25_3ba95, i32* @eax, align 8
  %v1_3ba97 = inttoptr i32 %v25_3ba95 to i8*
  %v2_3ba97 = load i8, i8* %v1_3ba97, align 1
  %v5_3ba97 = add i8 %v2_3ba97, %v4_3ba95
  %v10_3ba97 = icmp ult i8 %v5_3ba97, %v2_3ba97
  store i1 %v10_3ba97, i1* @cf, align 1
  %v15_3ba97 = icmp eq i8 %v5_3ba97, 0
  store i1 %v15_3ba97, i1* %zf.global-to-local, align 1
  store i8 %v5_3ba97, i8* %v1_3ba97, align 1
  %v0_3ba99 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_3ba99, label %bb, label %dec_label_pc_3ba95.dec_label_pc_3ba9b_crit_edge

dec_label_pc_3ba95.dec_label_pc_3ba9b_crit_edge:  ; preds = %dec_label_pc_3ba95
  %v2_3ba99.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3ba9b

bb:                                               ; preds = %dec_label_pc_3ba95
  %v1_3ba99 = call i32 @function_3baa0()
  br label %dec_label_pc_3ba9b

dec_label_pc_3ba9b:                               ; preds = %dec_label_pc_3ba95.dec_label_pc_3ba9b_crit_edge, %bb
  %v2_3ba99 = phi i32 [ %v2_3ba99.pre, %dec_label_pc_3ba95.dec_label_pc_3ba9b_crit_edge ], [ %v1_3ba99, %bb ]
  ret i32 %v2_3ba99

; uselistorder directives
  uselistorder i8 %v2_3ba97, { 1, 0 }
  uselistorder label %dec_label_pc_3ba9b, { 1, 0 }
}

define i32 @function_3baa0() local_unnamed_addr {
dec_label_pc_3baa0:
  %v0_3baa1 = load i32, i32* @eax, align 8
  ret i32 %v0_3baa1
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIxEEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3baa2:
  %v2_3bac8 = load i32, i32* %arg1, align 4
  ret i32 %v2_3bac8
}

define i32 @function_3bace(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bace:
  %v0_3bacf = load i32, i32* @eax, align 8
  %v11_3bacf = and i32 %v0_3bacf, -252
  %v1_3bad4 = call i32 @unknown_6562a(i32 %v11_3bacf)
  store i32 %v1_3bad4, i32* @eax, align 8
  %v0_3bad9 = load i32, i32* @ebp, align 4
  %v1_3bad9 = add i32 %v0_3bad9, -12
  %v2_3bad9 = inttoptr i32 %v1_3bad9 to i32*
  %v3_3bad9 = load i32, i32* %v2_3bad9, align 4
  %v1_3badc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3badc = icmp eq i32 %v1_3badc, %v3_3bad9
  br i1 %v3_3badc, label %bb, label %dec_label_pc_3bae5

bb:                                               ; preds = %dec_label_pc_3bace
  %v1_3bae3 = call i32 @function_3baea()
  br label %dec_label_pc_3bae5

dec_label_pc_3bae5:                               ; preds = %bb, %dec_label_pc_3bace
  %v2_3bae3 = phi i32 [ %v1_3bae3, %bb ], [ %v1_3bad4, %dec_label_pc_3bace ]
  ret i32 %v2_3bae3
}

define i32 @function_3baea() local_unnamed_addr {
dec_label_pc_3baea:
  %v0_3baeb = load i32, i32* @eax, align 8
  ret i32 %v0_3baeb
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIdEEiRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3baec:
  %v2_3bb12 = load i32, i32* %arg1, align 4
  %v2_3bb1e = call i32 @unknown_65cc9(i32 %v2_3bb12, i32 %arg2)
  store i32 %v2_3bb1e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3bb2f

bb:                                               ; preds = %dec_label_pc_3baec
  %v1_3bb2d = call i32 @function_3bb34()
  br label %dec_label_pc_3bb2f

dec_label_pc_3bb2f:                               ; preds = %bb, %dec_label_pc_3baec
  %v2_3bb2d = phi i32 [ %v1_3bb2d, %bb ], [ %v2_3bb1e, %dec_label_pc_3baec ]
  ret i32 %v2_3bb2d
}

define i32 @function_3bb34() local_unnamed_addr {
dec_label_pc_3bb34:
  %v0_3bb35 = load i32, i32* @eax, align 8
  ret i32 %v0_3bb35
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE6assignERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3bb36:
  %v1_3bb59 = call i32 @unknown_7855c(i32 %arg1)
  %v2_3bb68 = call i32 @unknown_7865c(i32 %v1_3bb59, i32 %arg2)
  ret i32 0
}

define i32 @function_3bb78(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bb78:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3bb7d() local_unnamed_addr {
dec_label_pc_3bb7d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3bb7d = load i32, i32* %ecx.global-to-local, align 8
  %v1_3bb7d = add i32 %v0_3bb7d, -1
  store i32 %v1_3bb7d, i32* %ecx.global-to-local, align 8
  %v0_3bb7f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3bb7f
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE6assignERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3bb80:
  %v1_3bba3 = call i32 @unknown_78626(i32 %arg1)
  %v2_3bbb2 = call i32 @unknown_7893e(i32 %v1_3bba3, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3bbc3

bb:                                               ; preds = %dec_label_pc_3bb80
  %v1_3bbc1 = call i32 @function_3bbc8()
  br label %dec_label_pc_3bbc3

dec_label_pc_3bbc3:                               ; preds = %bb, %dec_label_pc_3bb80
  %v2_3bbc1 = phi i32 [ %v1_3bbc1, %bb ], [ 0, %dec_label_pc_3bb80 ]
  ret i32 %v2_3bbc1
}

define i32 @function_3bbc8() local_unnamed_addr {
dec_label_pc_3bbc8:
  %v0_3bbc9 = load i32, i32* @eax, align 8
  ret i32 %v0_3bbc9
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3bbca:
  %v2_3bbf4 = call i32 @unknown_78c23(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3bc0b

bb:                                               ; preds = %dec_label_pc_3bbca
  %v1_3bc09 = call i32 @function_3bc10()
  br label %dec_label_pc_3bc0b

dec_label_pc_3bc0b:                               ; preds = %bb, %dec_label_pc_3bbca
  %v2_3bc09 = phi i32 [ %v1_3bc09, %bb ], [ %arg1, %dec_label_pc_3bbca ]
  ret i32 %v2_3bc09

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_3bc10() local_unnamed_addr {
dec_label_pc_3bc10:
  %v0_3bc11 = load i32, i32* @eax, align 8
  ret i32 %v0_3bc11
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_() local_unnamed_addr {
dec_label_pc_3bc14:
  %eax.global-to-local = alloca i32, align 4
  %v5_3bc17 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3bc17
}

define i32 @function_3bc18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3bc18:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3bc1c = load i32, i32* @ebp, align 4
  %v1_3bc1c = add i32 %v0_3bc1c, 8
  %v2_3bc1c = inttoptr i32 %v1_3bc1c to i32*
  %v3_3bc1c = load i32, i32* %v2_3bc1c, align 4
  %v2_3bc1f = add i32 %v0_3bc1c, -28
  %v3_3bc1f = inttoptr i32 %v2_3bc1f to i32*
  store i32 %v3_3bc1c, i32* %v3_3bc1f, align 4
  %v0_3bc22 = load i32, i32* @ebp, align 4
  %v1_3bc22 = add i32 %v0_3bc22, 12
  %v2_3bc22 = inttoptr i32 %v1_3bc22 to i32*
  %v3_3bc22 = load i32, i32* %v2_3bc22, align 4
  %v2_3bc25 = add i32 %v0_3bc22, -32
  %v3_3bc25 = inttoptr i32 %v2_3bc25 to i32*
  store i32 %v3_3bc22, i32* %v3_3bc25, align 4
  %v0_3bc28 = load i32, i32* @ebp, align 4
  %v1_3bc28 = add i32 %v0_3bc28, 16
  %v2_3bc28 = inttoptr i32 %v1_3bc28 to i32*
  %v3_3bc28 = load i32, i32* %v2_3bc28, align 4
  %v2_3bc2b = add i32 %v0_3bc28, -36
  %v3_3bc2b = inttoptr i32 %v2_3bc2b to i32*
  store i32 %v3_3bc28, i32* %v3_3bc2b, align 4
  %v0_3bc2e = load i32, i32* @ebp, align 4
  %v1_3bc2e = add i32 %v0_3bc2e, 20
  %v2_3bc2e = inttoptr i32 %v1_3bc2e to i32*
  %v3_3bc2e = load i32, i32* %v2_3bc2e, align 4
  %v2_3bc31 = add i32 %v0_3bc2e, -40
  %v3_3bc31 = inttoptr i32 %v2_3bc31 to i32*
  store i32 %v3_3bc2e, i32* %v3_3bc31, align 4
  %v0_3bc34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3bc3a = load i32, i32* @ebp, align 4
  %v2_3bc3a = add i32 %v1_3bc3a, -12
  %v3_3bc3a = inttoptr i32 %v2_3bc3a to i32*
  store i32 %v0_3bc34, i32* %v3_3bc3a, align 4
  %v0_3bc3f = load i32, i32* @ebp, align 4
  %v1_3bc3f = add i32 %v0_3bc3f, -40
  %v2_3bc3f = inttoptr i32 %v1_3bc3f to i32*
  %v3_3bc3f = load i32, i32* %v2_3bc3f, align 4
  %v1_3bc45 = call i32 @unknown_78caa(i32 %v3_3bc3f)
  store i32 %v1_3bc45, i32* %esi.global-to-local, align 4
  %v0_3bc4c = load i32, i32* @ebp, align 4
  %v1_3bc4c = add i32 %v0_3bc4c, -36
  %v2_3bc4c = inttoptr i32 %v1_3bc4c to i32*
  %v3_3bc4c = load i32, i32* %v2_3bc4c, align 4
  %v1_3bc52 = call i32 @unknown_5e7dd(i32 %v3_3bc4c)
  store i32 %v1_3bc52, i32* %ebx.global-to-local, align 4
  %v0_3bc59 = load i32, i32* @ebp, align 4
  %v1_3bc59 = add i32 %v0_3bc59, -32
  %v2_3bc59 = inttoptr i32 %v1_3bc59 to i32*
  %v3_3bc59 = load i32, i32* %v2_3bc59, align 4
  %v1_3bc5f = call i32 @unknown_5e7dd(i32 %v3_3bc59)
  %v0_3bc64 = load i32, i32* %esi.global-to-local, align 4
  %v0_3bc68 = load i32, i32* %ebx.global-to-local, align 4
  %v3_3bc6f = call i32 @unknown_78cdf(i32 %v1_3bc5f, i32 %v0_3bc68, i32 %v0_3bc64)
  %v1_3bc74 = load i32, i32* @ebp, align 4
  %v2_3bc74 = add i32 %v1_3bc74, -16
  %v3_3bc74 = inttoptr i32 %v2_3bc74 to i32*
  store i32 %v3_3bc6f, i32* %v3_3bc74, align 4
  %v0_3bc77 = load i32, i32* @ebp, align 4
  %v1_3bc77 = add i32 %v0_3bc77, -16
  %v1_3bc7e = add i32 %v0_3bc77, -28
  %v2_3bc7e = inttoptr i32 %v1_3bc7e to i32*
  %v3_3bc7e = load i32, i32* %v2_3bc7e, align 4
  %v2_3bc84 = call i32 @unknown_6a9e2(i32 %v3_3bc7e, i32 %v1_3bc77)
  %v0_3bc89 = load i32, i32* @ebp, align 4
  %v1_3bc89 = add i32 %v0_3bc89, -28
  %v2_3bc89 = inttoptr i32 %v1_3bc89 to i32*
  %v3_3bc89 = load i32, i32* %v2_3bc89, align 4
  store i32 %v3_3bc89, i32* @eax, align 8
  %v1_3bc8c = add i32 %v0_3bc89, -12
  %v2_3bc8c = inttoptr i32 %v1_3bc8c to i32*
  %v3_3bc8c = load i32, i32* %v2_3bc8c, align 4
  %v1_3bc8f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3bc8f = icmp eq i32 %v1_3bc8f, %v3_3bc8c
  br i1 %v3_3bc8f, label %bb, label %dec_label_pc_3bc98

bb:                                               ; preds = %dec_label_pc_3bc18
  %v1_3bc96 = call i32 @function_3bc9d()
  br label %dec_label_pc_3bc98

dec_label_pc_3bc98:                               ; preds = %bb, %dec_label_pc_3bc18
  %v2_3bc96 = phi i32 [ %v1_3bc96, %bb ], [ %v3_3bc89, %dec_label_pc_3bc18 ]
  ret i32 %v2_3bc96

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5e7dd, { 1, 0 }
}

define i32 @function_3bc9d() local_unnamed_addr {
dec_label_pc_3bc9d:
  %v0_3bca3 = load i32, i32* @eax, align 8
  ret i32 %v0_3bca3
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEEEvT_S8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bca6:
  ret i32 %arg1
}

define i32 @function_3bcb3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3bcb3:
  %v0_3bcb3 = load i32, i32* @ebp, align 4
  %v1_3bcb6 = add i32 %v0_3bcb3, 2
  store i32 %v1_3bcb6, i32* @ebp, align 4
  %v0_3bcb9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3bcbe = add i32 %v0_3bcb3, -10
  %v3_3bcbe = inttoptr i32 %v2_3bcbe to i32*
  store i32 %v0_3bcb9, i32* %v3_3bcbe, align 4
  %v0_3bcc3 = load i32, i32* @ebp, align 4
  %v1_3bcc3 = add i32 %v0_3bcc3, -32
  %v2_3bcc3 = inttoptr i32 %v1_3bcc3 to i32*
  %v3_3bcc3 = load i32, i32* %v2_3bcc3, align 4
  %v1_3bcca = add i32 %v0_3bcc3, -28
  %v2_3bcca = inttoptr i32 %v1_3bcca to i32*
  %v3_3bcca = load i32, i32* %v2_3bcca, align 4
  %v2_3bcd0 = call i32 @unknown_78dc4(i32 %v3_3bcca, i32 %v3_3bcc3)
  %v0_3bcd5 = load i32, i32* @ebp, align 4
  %v1_3bcd5 = add i32 %v0_3bcd5, -12
  %v2_3bcd5 = inttoptr i32 %v1_3bcd5 to i32*
  %v3_3bcd5 = load i32, i32* %v2_3bcd5, align 4
  %v1_3bcd8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3bcd8 = xor i32 %v1_3bcd8, %v3_3bcd5
  %v3_3bcd8 = icmp eq i32 %v2_3bcd8, 0
  store i32 %v2_3bcd8, i32* @eax, align 8
  br i1 %v3_3bcd8, label %bb, label %dec_label_pc_3bce1

bb:                                               ; preds = %dec_label_pc_3bcb3
  %v1_3bcdf = call i32 @function_3bce6()
  br label %dec_label_pc_3bce1

dec_label_pc_3bce1:                               ; preds = %bb, %dec_label_pc_3bcb3
  %v4_3bcdf = phi i32 [ %v1_3bcdf, %bb ], [ %v2_3bcd8, %dec_label_pc_3bcb3 ]
  ret i32 %v4_3bcdf
}

define i32 @function_3bce6() local_unnamed_addr {
dec_label_pc_3bce6:
  %v0_3bce7 = load i32, i32* @eax, align 8
  ret i32 %v0_3bce7
}

define i32 @_ZSt12__miter_baseIP5CTxInENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bce8:
  %v1_3bd05 = call i32 @unknown_78e74(i32 %arg1)
  store i32 %v1_3bd05, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3bd16

bb:                                               ; preds = %dec_label_pc_3bce8
  %v1_3bd14 = call i32 @function_3bd1b()
  br label %dec_label_pc_3bd16

dec_label_pc_3bd16:                               ; preds = %bb, %dec_label_pc_3bce8
  %v2_3bd14 = phi i32 [ %v1_3bd14, %bb ], [ %v1_3bd05, %dec_label_pc_3bce8 ]
  ret i32 %v2_3bd14
}

define i32 @function_3bd1b() local_unnamed_addr {
dec_label_pc_3bd1b:
  %v0_3bd1c = load i32, i32* @eax, align 8
  ret i32 %v0_3bd1c
}

define i32 @_ZSt14__copy_move_a2ILb0EP5CTxInS1_ET1_T0_S3_S2_() local_unnamed_addr {
dec_label_pc_3bd1d:
  %eax.global-to-local = alloca i32, align 4
  %v5_3bd1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3bd1d
}

define i32 @function_3bd45(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bd45:
  %v3_3bd45 = load i32, i32* @eax, align 8
  ret i32 %v3_3bd45
}

define i32 @function_3bd48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3bd48:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v1_3bd48 = call i32 @unknown_78ed6(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_3bd48, i32* %esi.global-to-local, align 4
  %v0_3bd4f = load i32, i32* @ebp, align 4
  %v1_3bd4f = add i32 %v0_3bd4f, -32
  %v2_3bd4f = inttoptr i32 %v1_3bd4f to i32*
  %v3_3bd4f = load i32, i32* %v2_3bd4f, align 4
  %v1_3bd55 = call i32 @unknown_78ed6(i32 %v3_3bd4f)
  store i32 %v1_3bd55, i32* %ebx.global-to-local, align 4
  %v0_3bd5c = load i32, i32* @ebp, align 4
  %v1_3bd5c = add i32 %v0_3bd5c, -28
  %v2_3bd5c = inttoptr i32 %v1_3bd5c to i32*
  %v3_3bd5c = load i32, i32* %v2_3bd5c, align 4
  %v1_3bd62 = call i32 @unknown_78ed6(i32 %v3_3bd5c)
  %v0_3bd67 = load i32, i32* %esi.global-to-local, align 4
  %v0_3bd6b = load i32, i32* %ebx.global-to-local, align 4
  %v3_3bd72 = call i32 @unknown_78f0b(i32 %v1_3bd62, i32 %v0_3bd6b, i32 %v0_3bd67)
  store i32 %v3_3bd72, i32* @eax, align 8
  %v0_3bd77 = load i32, i32* @ebp, align 4
  %v1_3bd77 = add i32 %v0_3bd77, -12
  %v2_3bd77 = inttoptr i32 %v1_3bd77 to i32*
  %v3_3bd77 = load i32, i32* %v2_3bd77, align 4
  %v1_3bd7a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3bd7a = icmp eq i32 %v1_3bd7a, %v3_3bd77
  br i1 %v3_3bd7a, label %bb, label %dec_label_pc_3bd83

bb:                                               ; preds = %dec_label_pc_3bd48
  %v1_3bd81 = call i32 @function_3bd88()
  br label %dec_label_pc_3bd83

dec_label_pc_3bd83:                               ; preds = %bb, %dec_label_pc_3bd48
  %v2_3bd81 = phi i32 [ %v1_3bd81, %bb ], [ %v3_3bd72, %dec_label_pc_3bd48 ]
  ret i32 %v2_3bd81

; uselistorder directives
  uselistorder i32 (i32)* @unknown_78ed6, { 2, 1, 0 }
}

define i32 @function_3bd88() local_unnamed_addr {
dec_label_pc_3bd88:
  %v0_3bd8e = load i32, i32* @eax, align 8
  ret i32 %v0_3bd8e
}

define i32 @_ZSt18uninitialized_copyIP5CTxInS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3bd8f:
  ret i32 %arg3
}

define i32 @function_3bda8(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bda8:
  %v0_3bda8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3bdad = load i32, i32* @ebp, align 4
  %v2_3bdad = add i32 %v1_3bdad, -12
  %v3_3bdad = inttoptr i32 %v2_3bdad to i32*
  store i32 %v0_3bda8, i32* %v3_3bdad, align 4
  %v0_3bdb2 = load i32, i32* @ebp, align 4
  %v1_3bdc0 = add i32 %v0_3bdb2, -28
  %v2_3bdc0 = inttoptr i32 %v1_3bdc0 to i32*
  %v3_3bdc0 = load i32, i32* %v2_3bdc0, align 4
  ret i32 %v3_3bdc0
}

define i32 @function_3bddb() local_unnamed_addr {
dec_label_pc_3bddb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3bddb = load i32, i32* %ecx.global-to-local, align 8
  %v1_3bddb = add i32 %v0_3bddb, -1
  store i32 %v1_3bddb, i32* %ecx.global-to-local, align 8
  %v0_3bddd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3bddd
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3bdde:
  %v2_3be08 = call i32 @unknown_790c6(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @function_3be1e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3be1e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3be23() local_unnamed_addr {
dec_label_pc_3be23:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3be23 = load i32, i32* %ecx.global-to-local, align 8
  %v1_3be23 = add i32 %v0_3be23, -1
  store i32 %v1_3be23, i32* %ecx.global-to-local, align 8
  %v0_3be25 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3be25
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3be28:
  ret i32 %arg1
}

define i32 @function_3be38(i32 %arg1) local_unnamed_addr {
dec_label_pc_3be38:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3be38 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3be38 = or i32 %v0_3be38, 137
  store i32 %v11_3be38, i32* %eax.global-to-local, align 8
  %v0_3be3a = load i32, i32* @ebp, align 4
  %v0_3be3b = load i32, i32* @ecx, align 8
  %v1_3be3b = add i32 %v0_3be3b, 255
  %v1_3be3d = add i32 %v0_3be3a, 2
  store i32 %v1_3be3d, i32* %ebp.global-to-local, align 4
  %v1_3be3e = add i32 %v0_3be3b, 1166793796
  %v2_3be3e = inttoptr i32 %v1_3be3e to i8*
  %v3_3be3e = load i8, i8* %v2_3be3e, align 1
  %v5_3be3e = trunc i32 %v1_3be3b to i8
  %v8_3be3e = add i8 %v3_3be3e, %v5_3be3e
  %v28_3be3e = icmp ult i8 %v8_3be3e, %v3_3be3e
  store i1 %v28_3be3e, i1* %cf.global-to-local, align 1
  store i8 %v8_3be3e, i8* %v2_3be3e, align 1
  %v0_3be44 = load i32, i32* %eax.global-to-local, align 8
  %v1_3be44 = trunc i32 %v0_3be44 to i8
  %v2_3be44 = load i1, i1* %cf.global-to-local, align 1
  %v3_3be44 = zext i1 %v2_3be44 to i8
  %v4_3be44 = add i8 %v1_3be44, -119
  %v5_3be44 = add i8 %v4_3be44, %v3_3be44
  %v22_3be44 = icmp ule i8 %v5_3be44, %v1_3be44
  %v23_3be44 = icmp ugt i8 %v1_3be44, 118
  %v24_3be44 = select i1 %v2_3be44, i1 %v22_3be44, i1 %v23_3be44
  %v25_3be44 = zext i8 %v5_3be44 to i32
  %v27_3be44 = and i32 %v0_3be44, -256
  %v28_3be44 = or i32 %v25_3be44, %v27_3be44
  store i32 %v28_3be44, i32* %eax.global-to-local, align 8
  %v0_3be46 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3be46 = add i32 %v0_3be46, 1
  store i32 %v1_3be46, i32* @ebp, align 4
  %v3_3be4a = zext i1 %v24_3be44 to i8
  %v4_3be4a = add i8 %v3_3be4a, %v5_3be44
  %v19_3be4a = icmp ule i8 %v4_3be4a, %v5_3be44
  %v21_3be4a = icmp eq i1 %v24_3be44, %v19_3be4a
  store i1 %v21_3be4a, i1* %cf.global-to-local, align 1
  %v22_3be4a = zext i8 %v4_3be4a to i32
  %v25_3be4a = or i32 %v22_3be4a, %v27_3be44
  store i32 %v25_3be4a, i32* %eax.global-to-local, align 8
  %v1_3be4c = inttoptr i32 %v25_3be4a to i8*
  %v2_3be4c = load i8, i8* %v1_3be4c, align 1
  %v5_3be4c = add i8 %v2_3be4c, %v4_3be4a
  store i8 %v5_3be4c, i8* %v1_3be4c, align 1
  %v0_3be4e = load i32, i32* %eax.global-to-local, align 8
  %v1_3be4e = load i32, i32* @ebp, align 4
  %v2_3be4e = add i32 %v1_3be4e, -12
  %v3_3be4e = inttoptr i32 %v2_3be4e to i32*
  store i32 %v0_3be4e, i32* %v3_3be4e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3be53 = load i32, i32* @ebp, align 4
  %v1_3be53 = add i32 %v0_3be53, -40
  %v2_3be53 = inttoptr i32 %v1_3be53 to i32*
  %v3_3be53 = load i32, i32* %v2_3be53, align 4
  store i32 %v3_3be53, i32* %eax.global-to-local, align 8
  %v1_3be59 = call i32 @unknown_7914d(i32 %v3_3be53)
  store i32 %v1_3be59, i32* %eax.global-to-local, align 8
  store i32 %v1_3be59, i32* %esi.global-to-local, align 4
  %v0_3be60 = load i32, i32* @ebp, align 4
  %v1_3be60 = add i32 %v0_3be60, -36
  %v2_3be60 = inttoptr i32 %v1_3be60 to i32*
  %v3_3be60 = load i32, i32* %v2_3be60, align 4
  store i32 %v3_3be60, i32* %eax.global-to-local, align 8
  %v1_3be66 = call i32 @unknown_5ea26(i32 %v3_3be60)
  store i32 %v1_3be66, i32* %eax.global-to-local, align 8
  store i32 %v1_3be66, i32* @ebx, align 4
  %v0_3be6d = load i32, i32* @ebp, align 4
  %v1_3be6d = add i32 %v0_3be6d, -32
  %v2_3be6d = inttoptr i32 %v1_3be6d to i32*
  %v3_3be6d = load i32, i32* %v2_3be6d, align 4
  store i32 %v3_3be6d, i32* %eax.global-to-local, align 8
  %v1_3be73 = call i32 @unknown_5ea26(i32 %v3_3be6d)
  store i32 %v1_3be73, i32* %eax.global-to-local, align 8
  %v0_3be78 = load i32, i32* %esi.global-to-local, align 4
  %v0_3be7c = load i32, i32* @ebx, align 4
  %v3_3be83 = call i32 @unknown_79182(i32 %v1_3be73, i32 %v0_3be7c, i32 %v0_3be78)
  %v1_3be88 = load i32, i32* @ebp, align 4
  %v2_3be88 = add i32 %v1_3be88, -16
  %v3_3be88 = inttoptr i32 %v2_3be88 to i32*
  store i32 %v3_3be83, i32* %v3_3be88, align 4
  %v0_3be8b = load i32, i32* @ebp, align 4
  %v1_3be8b = add i32 %v0_3be8b, -16
  store i32 %v1_3be8b, i32* %eax.global-to-local, align 8
  %v1_3be92 = add i32 %v0_3be8b, -28
  %v2_3be92 = inttoptr i32 %v1_3be92 to i32*
  %v3_3be92 = load i32, i32* %v2_3be92, align 4
  store i32 %v3_3be92, i32* %eax.global-to-local, align 8
  %v2_3be98 = call i32 @unknown_5ebb8(i32 %v3_3be92, i32 %v1_3be8b)
  store i32 %v2_3be98, i32* %eax.global-to-local, align 8
  %v0_3be9d = load i32, i32* @ebp, align 4
  %v1_3be9d = add i32 %v0_3be9d, -28
  %v2_3be9d = inttoptr i32 %v1_3be9d to i32*
  %v3_3be9d = load i32, i32* %v2_3be9d, align 4
  store i32 %v3_3be9d, i32* @eax, align 8
  %v1_3bea0 = add i32 %v0_3be9d, -12
  %v2_3bea0 = inttoptr i32 %v1_3bea0 to i32*
  %v3_3bea0 = load i32, i32* %v2_3bea0, align 4
  %v1_3bea3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3bea3 = icmp eq i32 %v1_3bea3, %v3_3bea0
  br i1 %v3_3bea3, label %bb, label %dec_label_pc_3beac

bb:                                               ; preds = %dec_label_pc_3be38
  %v1_3beaa = call i32 @function_3beb1()
  store i32 %v1_3beaa, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3beac

dec_label_pc_3beac:                               ; preds = %bb, %dec_label_pc_3be38
  %v4_3beaa = phi i32 [ %v1_3beaa, %bb ], [ %v3_3be9d, %dec_label_pc_3be38 ]
  ret i32 %v4_3beaa

; uselistorder directives
  uselistorder i8 %v4_3be4a, { 0, 2, 1 }
  uselistorder i8 %v5_3be44, { 1, 0, 3, 2 }
  uselistorder i8 %v3_3be3e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5ea26, { 1, 0 }
}

define i32 @function_3beb1() local_unnamed_addr {
dec_label_pc_3beb1:
  %v0_3beb7 = load i32, i32* @eax, align 8
  ret i32 %v0_3beb7
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEEEvT_S8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3beba:
  %v2_3bee4 = call i32 @unknown_79267(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3bef5

bb:                                               ; preds = %dec_label_pc_3beba
  %v1_3bef3 = call i32 @function_3befa()
  br label %dec_label_pc_3bef5

dec_label_pc_3bef5:                               ; preds = %bb, %dec_label_pc_3beba
  %v2_3bef3 = phi i32 [ %v1_3bef3, %bb ], [ 0, %dec_label_pc_3beba ]
  ret i32 %v2_3bef3
}

define i32 @function_3befa() local_unnamed_addr {
dec_label_pc_3befa:
  %v0_3befb = load i32, i32* @eax, align 8
  ret i32 %v0_3befb
}

define i32 @_ZSt12__miter_baseIP6CTxOutENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3befc:
  %v1_3bf19 = call i32 @unknown_79317(i32 %arg1)
  store i32 %v1_3bf19, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3bf2a

bb:                                               ; preds = %dec_label_pc_3befc
  %v1_3bf28 = call i32 @function_3bf2f()
  br label %dec_label_pc_3bf2a

dec_label_pc_3bf2a:                               ; preds = %bb, %dec_label_pc_3befc
  %v2_3bf28 = phi i32 [ %v1_3bf28, %bb ], [ %v1_3bf19, %dec_label_pc_3befc ]
  ret i32 %v2_3bf28
}

define i32 @function_3bf2f() local_unnamed_addr {
dec_label_pc_3bf2f:
  %v0_3bf30 = load i32, i32* @eax, align 8
  ret i32 %v0_3bf30
}

define i32 @_ZSt14__copy_move_a2ILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3bf31:
  %v1_3bf5c = call i32 @unknown_79379(i32 %arg3)
  %v1_3bf69 = call i32 @unknown_79379(i32 %arg2)
  %v1_3bf76 = call i32 @unknown_79379(i32 %arg1)
  ret i32 %v1_3bf76

; uselistorder directives
  uselistorder i32 (i32)* @unknown_79379, { 2, 1, 0 }
}

define i32 @function_3bf8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bf8a:
  %cf.global-to-local = alloca i1, align 1
  %v0_3bf8a = load i32, i32* @ebx, align 4
  %v1_3bf8a = add i32 %v0_3bf8a, 862319701
  %v2_3bf8a = inttoptr i32 %v1_3bf8a to i8*
  %v3_3bf8a = load i8, i8* %v2_3bf8a, align 1
  %v4_3bf8a = load i32, i32* @ecx, align 8
  %v5_3bf8a = trunc i32 %v4_3bf8a to i8
  %v6_3bf8a = add i8 %v5_3bf8a, %v3_3bf8a
  %v11_3bf8a = icmp ult i8 %v6_3bf8a, %v3_3bf8a
  store i1 %v11_3bf8a, i1* %cf.global-to-local, align 1
  store i8 %v6_3bf8a, i8* %v2_3bf8a, align 1
  %v0_3bf90 = load i32, i32* @eax, align 8
  %v1_3bf90 = load i1, i1* %cf.global-to-local, align 1
  %v2_3bf90 = zext i1 %v1_3bf90 to i32
  %v3_3bf90 = add i32 %v0_3bf90, 20
  %v4_3bf90 = add i32 %v3_3bf90, %v2_3bf90
  %v14_3bf90 = icmp eq i32 %v4_3bf90, 0
  %v22_3bf90 = icmp ule i32 %v4_3bf90, %v0_3bf90
  %v23_3bf90 = icmp ugt i32 %v0_3bf90, -21
  %v24_3bf90 = select i1 %v1_3bf90, i1 %v22_3bf90, i1 %v23_3bf90
  store i1 %v24_3bf90, i1* %cf.global-to-local, align 1
  store i32 %v4_3bf90, i32* @eax, align 8
  br i1 %v14_3bf90, label %bb, label %dec_label_pc_3bf97

bb:                                               ; preds = %dec_label_pc_3bf8a
  %v1_3bf95 = call i32 @function_3bf9c()
  br label %dec_label_pc_3bf97

dec_label_pc_3bf97:                               ; preds = %bb, %dec_label_pc_3bf8a
  %v2_3bf95 = phi i32 [ %v1_3bf95, %bb ], [ %v4_3bf90, %dec_label_pc_3bf8a ]
  ret i32 %v2_3bf95

; uselistorder directives
  uselistorder i32 %v4_3bf90, { 0, 2, 1, 3 }
  uselistorder i8 %v3_3bf8a, { 1, 0 }
  uselistorder i32 -21, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 862319701, { 1, 3, 2, 0 }
}

define i32 @function_3bf9c() local_unnamed_addr {
dec_label_pc_3bf9c:
  %v0_3bfa2 = load i32, i32* @eax, align 8
  ret i32 %v0_3bfa2
}

define i32 @_ZSt18uninitialized_copyIP6CTxOutS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3bfa3:
  ret i32 %arg3
}

define i32 @function_3bfcc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3bfcc:
  %v0_3bfcc = load i32, i32* @ebx, align 4
  %v1_3bfcc = add i32 %v0_3bfcc, 1149886533
  %v2_3bfcc = inttoptr i32 %v1_3bfcc to i8*
  %v3_3bfcc = load i8, i8* %v2_3bfcc, align 1
  %v4_3bfcc = load i32, i32* @ecx, align 8
  %v5_3bfcc = trunc i32 %v4_3bfcc to i8
  %v6_3bfcc = or i8 %v5_3bfcc, %v3_3bfcc
  store i8 %v6_3bfcc, i8* %v2_3bfcc, align 1
  %v0_3bfd4 = load i32, i32* @ebp, align 4
  %v1_3bfd4 = add i32 %v0_3bfd4, -28
  %v2_3bfd4 = inttoptr i32 %v1_3bfd4 to i32*
  %v3_3bfd4 = load i32, i32* %v2_3bfd4, align 4
  %v1_3bfda = call i32 @unknown_79473(i32 %v3_3bfd4)
  store i32 %v1_3bfda, i32* @eax, align 8
  %v0_3bfdf = load i32, i32* @ebp, align 4
  %v1_3bfdf = add i32 %v0_3bfdf, -12
  %v2_3bfdf = inttoptr i32 %v1_3bfdf to i32*
  %v3_3bfdf = load i32, i32* %v2_3bfdf, align 4
  %v1_3bfe2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3bfe2 = icmp eq i32 %v1_3bfe2, %v3_3bfdf
  br i1 %v3_3bfe2, label %bb, label %dec_label_pc_3bfeb

bb:                                               ; preds = %dec_label_pc_3bfcc
  %v1_3bfe9 = call i32 @function_3bff0()
  br label %dec_label_pc_3bfeb

dec_label_pc_3bfeb:                               ; preds = %bb, %dec_label_pc_3bfcc
  %v2_3bfe9 = phi i32 [ %v1_3bfe9, %bb ], [ %v1_3bfda, %dec_label_pc_3bfcc ]
  ret i32 %v2_3bfe9

; uselistorder directives
  uselistorder i32 1149886533, { 0, 2, 1, 3 }
}

define i32 @function_3bff0() local_unnamed_addr {
dec_label_pc_3bff0:
  %v0_3bff1 = load i32, i32* @eax, align 8
  ret i32 %v0_3bff1
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3bff2:
  ret i32 %arg4
}

define i32 @function_3c010(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c010:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3c010 = load i32, i32* @ebp, align 4
  %v1_3c010 = add i32 %v0_3c010, 1
  store i32 %v1_3c010, i32* @ebp, align 4
  %v0_3c011 = load i32, i32* @eax, align 8
  %v1_3c011 = udiv i32 %v0_3c011, 256
  %v2_3c011 = trunc i32 %v1_3c011 to i8
  %v4_3c011 = add i32 %v0_3c010, -94
  %v5_3c011 = inttoptr i32 %v4_3c011 to i8*
  store i8 %v2_3c011, i8* %v5_3c011, align 1
  %v0_3c014 = load i32, i32* @eax, align 8
  %v1_3c014 = trunc i32 %v0_3c014 to i8
  %v2_3c014 = load i1, i1* @cf, align 1
  %v3_3c014 = zext i1 %v2_3c014 to i8
  %v4_3c014 = add i8 %v3_3c014, %v1_3c014
  %v22_3c014 = zext i8 %v4_3c014 to i32
  %v24_3c014 = and i32 %v0_3c014, -256
  %v25_3c014 = or i32 %v22_3c014, %v24_3c014
  store i32 %v25_3c014, i32* %eax.global-to-local, align 8
  %v1_3c016 = inttoptr i32 %v25_3c014 to i8*
  %v2_3c016 = load i8, i8* %v1_3c016, align 1
  %v5_3c016 = add i8 %v2_3c016, %v4_3c014
  store i8 %v5_3c016, i8* %v1_3c016, align 1
  %v0_3c018 = load i32, i32* %eax.global-to-local, align 8
  %v1_3c018 = load i32, i32* @ebp, align 4
  %v2_3c018 = add i32 %v1_3c018, -12
  %v3_3c018 = inttoptr i32 %v2_3c018 to i32*
  store i32 %v0_3c018, i32* %v3_3c018, align 4
  store i32 0, i32* @eax, align 8
  %v0_3c01d = load i32, i32* @ebp, align 4
  %v1_3c01d = add i32 %v0_3c01d, -116
  %v2_3c01d = inttoptr i32 %v1_3c01d to i32*
  %v3_3c01d = load i32, i32* %v2_3c01d, align 4
  %v10_3c01d = icmp eq i32 %v3_3c01d, 0
  br i1 %v10_3c01d, label %bb, label %dec_label_pc_3c027

bb:                                               ; preds = %dec_label_pc_3c010
  %v1_3c021 = call i32 @function_3c461()
  store i32 %v1_3c021, i32* %eax.global-to-local, align 8
  %v0_3c027.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3c027

dec_label_pc_3c027:                               ; preds = %bb, %dec_label_pc_3c010
  %v1_3c044 = phi i32 [ %v0_3c027.pre, %bb ], [ %v0_3c01d, %dec_label_pc_3c010 ]
  %v1_3c027 = add i32 %v1_3c044, -108
  %v2_3c027 = inttoptr i32 %v1_3c027 to i32*
  %v3_3c027 = load i32, i32* %v2_3c027, align 4
  store i32 %v3_3c027, i32* %eax.global-to-local, align 8
  %v1_3c02a = add i32 %v3_3c027, 8
  %v2_3c02a = inttoptr i32 %v1_3c02a to i32*
  %v3_3c02a = load i32, i32* %v2_3c02a, align 4
  store i32 %v3_3c02a, i32* %eax.global-to-local, align 8
  %v3_3c02f = load i32, i32* %v2_3c027, align 4
  store i32 %v3_3c02f, i32* %eax.global-to-local, align 8
  %v1_3c032 = add i32 %v3_3c02f, 4
  %v2_3c032 = inttoptr i32 %v1_3c032 to i32*
  %v3_3c032 = load i32, i32* %v2_3c032, align 4
  %v2_3c037 = sub i32 %v3_3c02a, %v3_3c032
  %v2_3c03b = sdiv i32 %v2_3c037, 4
  %v3_3c03e = mul i32 %v2_3c03b, -991146299
  store i32 %v3_3c03e, i32* %eax.global-to-local, align 8
  %v2_3c044 = add i32 %v1_3c044, -116
  %v3_3c044 = inttoptr i32 %v2_3c044 to i32*
  %v4_3c044 = load i32, i32* %v3_3c044, align 4
  %v10_3c044 = icmp ult i32 %v3_3c03e, %v4_3c044
  br i1 %v10_3c044, label %bb7, label %dec_label_pc_3c04d

bb7:                                              ; preds = %dec_label_pc_3c027
  %v1_3c047 = call i32 @function_3c220()
  store i32 %v1_3c047, i32* %eax.global-to-local, align 8
  %v0_3c04d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3c04d

dec_label_pc_3c04d:                               ; preds = %bb7, %dec_label_pc_3c027
  %v0_3c04d = phi i32 [ %v0_3c04d.pre, %bb7 ], [ %v1_3c044, %dec_label_pc_3c027 ]
  %v1_3c04d = add i32 %v0_3c04d, -120
  %v2_3c04d = inttoptr i32 %v1_3c04d to i32*
  %v3_3c04d = load i32, i32* %v2_3c04d, align 4
  %v1_3c054 = add i32 %v0_3c04d, -64
  store i32 %v1_3c054, i32* %eax.global-to-local, align 8
  %v2_3c05a = call i32 @unknown_68fee(i32 %v1_3c054, i32 %v3_3c04d)
  %v0_3c05f = load i32, i32* @ebp, align 4
  %v1_3c05f = add i32 %v0_3c05f, -96
  store i32 %v1_3c05f, i32* %eax.global-to-local, align 8
  %v1_3c062 = add i32 %v0_3c05f, -108
  %v2_3c062 = inttoptr i32 %v1_3c062 to i32*
  %v3_3c062 = load i32, i32* %v2_3c062, align 4
  %v2_3c06c = call i32 @unknown_67b24(i32 %v1_3c05f, i32 %v3_3c062)
  %v0_3c074 = load i32, i32* @ebp, align 4
  %v1_3c074 = add i32 %v0_3c074, -112
  %v1_3c07b = add i32 %v0_3c074, -96
  store i32 %v1_3c07b, i32* %eax.global-to-local, align 8
  %v2_3c081 = call i32 @unknown_79569(i32 %v1_3c07b, i32 %v1_3c074)
  store i32 %v2_3c081, i32* %eax.global-to-local, align 8
  %v1_3c086 = load i32, i32* @ebp, align 4
  %v2_3c086 = add i32 %v1_3c086, -84
  %v3_3c086 = inttoptr i32 %v2_3c086 to i32*
  store i32 %v2_3c081, i32* %v3_3c086, align 4
  %v0_3c089 = load i32, i32* @ebp, align 4
  %v1_3c089 = add i32 %v0_3c089, -108
  %v2_3c089 = inttoptr i32 %v1_3c089 to i32*
  %v3_3c089 = load i32, i32* %v2_3c089, align 4
  store i32 %v3_3c089, i32* %eax.global-to-local, align 8
  %v1_3c08c = add i32 %v3_3c089, 4
  %v2_3c08c = inttoptr i32 %v1_3c08c to i32*
  %v3_3c08c = load i32, i32* %v2_3c08c, align 4
  store i32 %v3_3c08c, i32* %eax.global-to-local, align 8
  %v2_3c08f = add i32 %v0_3c089, -80
  %v3_3c08f = inttoptr i32 %v2_3c08f to i32*
  store i32 %v3_3c08c, i32* %v3_3c08f, align 4
  %v0_3c092 = load i32, i32* @ebp, align 4
  %v1_3c092 = add i32 %v0_3c092, -84
  %v2_3c092 = inttoptr i32 %v1_3c092 to i32*
  %v3_3c092 = load i32, i32* %v2_3c092, align 4
  store i32 %v3_3c092, i32* %eax.global-to-local, align 8
  %v2_3c095 = add i32 %v0_3c092, -116
  %v3_3c095 = inttoptr i32 %v2_3c095 to i32*
  %v4_3c095 = load i32, i32* %v3_3c095, align 4
  %tmp9 = icmp ugt i32 %v3_3c092, %v4_3c095
  %v1_3c155 = add i32 %v0_3c092, -108
  %v2_3c155 = inttoptr i32 %v1_3c155 to i32*
  %v3_3c155 = load i32, i32* %v2_3c155, align 4
  store i32 %v3_3c155, i32* %eax.global-to-local, align 8
  %v1_3c15b = call i32 @unknown_57eb8(i32 %v3_3c155)
  store i32 %v1_3c15b, i32* %eax.global-to-local, align 8
  %v0_3c160 = load i32, i32* @ebp, align 4
  br i1 %tmp9, label %dec_label_pc_3c09e, label %dec_label_pc_3c155

dec_label_pc_3c09e:                               ; preds = %dec_label_pc_3c04d
  %v1_3c0a9 = add i32 %v0_3c160, -108
  %v2_3c0a9 = inttoptr i32 %v1_3c0a9 to i32*
  %v3_3c0a9 = load i32, i32* %v2_3c0a9, align 4
  %v1_3c0ac = add i32 %v3_3c0a9, 4
  %v2_3c0ac = inttoptr i32 %v1_3c0ac to i32*
  %v3_3c0ac = load i32, i32* %v2_3c0ac, align 4
  %v1_3c0b2 = add i32 %v3_3c0a9, 4
  %v2_3c0b2 = inttoptr i32 %v1_3c0b2 to i32*
  %v3_3c0b2 = load i32, i32* %v2_3c0b2, align 4
  %v3_3c0b5 = load i32, i32* %v2_3c0a9, align 4
  store i32 %v3_3c0b5, i32* %ebx.global-to-local, align 4
  %v1_3c0b8 = add i32 %v3_3c0b5, 4
  %v2_3c0b8 = inttoptr i32 %v1_3c0b8 to i32*
  %v3_3c0b8 = load i32, i32* %v2_3c0b8, align 4
  store i32 %v3_3c0b8, i32* %ebx.global-to-local, align 4
  %v1_3c0bb = add i32 %v0_3c160, -116
  %v2_3c0bb = inttoptr i32 %v1_3c0bb to i32*
  %v3_3c0bb = load i32, i32* %v2_3c0bb, align 4
  %v3_3c0be = mul i32 %v3_3c0bb, ptrtoint (i64* @global_var_34.2855 to i32)
  %v1_3c0c1 = sub i32 0, %v3_3c0be
  store i32 %v1_3c0c1, i32* %esi.global-to-local, align 4
  %v2_3c0c3 = sub i32 %v3_3c0b8, %v3_3c0be
  store i32 %v2_3c0c3, i32* %ebx.global-to-local, align 4
  %v4_3c0d4 = call i32 @unknown_795c9(i32 %v2_3c0c3, i32 %v3_3c0b2, i32 %v3_3c0ac, i32 %v1_3c15b)
  store i32 %v4_3c0d4, i32* %eax.global-to-local, align 8
  %v0_3c0d9 = load i32, i32* @ebp, align 4
  %v1_3c0d9 = add i32 %v0_3c0d9, -108
  %v2_3c0d9 = inttoptr i32 %v1_3c0d9 to i32*
  %v3_3c0d9 = load i32, i32* %v2_3c0d9, align 4
  store i32 %v3_3c0d9, i32* %eax.global-to-local, align 8
  %v1_3c0dc = add i32 %v3_3c0d9, 4
  %v2_3c0dc = inttoptr i32 %v1_3c0dc to i32*
  %v3_3c0dc = load i32, i32* %v2_3c0dc, align 4
  %v1_3c0df = add i32 %v0_3c0d9, -116
  %v2_3c0df = inttoptr i32 %v1_3c0df to i32*
  %v3_3c0df = load i32, i32* %v2_3c0df, align 4
  %v3_3c0e2 = mul i32 %v3_3c0df, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v3_3c0e2, i32* %eax.global-to-local, align 8
  %v2_3c0e5 = add i32 %v3_3c0e2, %v3_3c0dc
  %v3_3c0e7 = load i32, i32* %v2_3c0d9, align 4
  store i32 %v3_3c0e7, i32* %eax.global-to-local, align 8
  %v2_3c0ea = add i32 %v3_3c0e7, 4
  %v3_3c0ea = inttoptr i32 %v2_3c0ea to i32*
  store i32 %v2_3c0e5, i32* %v3_3c0ea, align 4
  %v0_3c0ed = load i32, i32* @ebp, align 4
  %v1_3c0ed = add i32 %v0_3c0ed, -116
  %v2_3c0ed = inttoptr i32 %v1_3c0ed to i32*
  %v3_3c0ed = load i32, i32* %v2_3c0ed, align 4
  %v3_3c0f0 = mul i32 %v3_3c0ed, ptrtoint (i64* @global_var_34.2855 to i32)
  %v1_3c0f3 = sub i32 0, %v3_3c0f0
  store i32 %v1_3c0f3, i32* %eax.global-to-local, align 8
  store i32 %v1_3c0f3, i32* %ebx.global-to-local, align 4
  %v2_3c0f7 = add i32 %v0_3c0ed, -80
  %v3_3c0f7 = inttoptr i32 %v2_3c0f7 to i32*
  %v4_3c0f7 = load i32, i32* %v3_3c0f7, align 4
  %v5_3c0f7 = sub i32 %v4_3c0f7, %v3_3c0f0
  store i32 %v5_3c0f7, i32* %ebx.global-to-local, align 4
  %v1_3c0fa = add i32 %v0_3c0ed, -112
  store i32 %v1_3c0fa, i32* %eax.global-to-local, align 8
  %v1_3c100 = call i32 @unknown_62bde(i32 %v1_3c0fa)
  store i32 %v1_3c100, i32* %eax.global-to-local, align 8
  %v1_3c105 = inttoptr i32 %v1_3c100 to i32*
  %v2_3c105 = load i32, i32* %v1_3c105, align 4
  store i32 %v2_3c105, i32* %eax.global-to-local, align 8
  %v0_3c107 = load i32, i32* @ebp, align 4
  %v1_3c107 = add i32 %v0_3c107, -80
  %v2_3c107 = inttoptr i32 %v1_3c107 to i32*
  %v3_3c107 = load i32, i32* %v2_3c107, align 4
  %v0_3c10e = load i32, i32* %ebx.global-to-local, align 4
  %v3_3c115 = call i32 @unknown_79625(i32 %v2_3c105, i32 %v0_3c10e, i32 %v3_3c107)
  %v0_3c11a = load i32, i32* @ebp, align 4
  %v1_3c11a = add i32 %v0_3c11a, -112
  store i32 %v1_3c11a, i32* %eax.global-to-local, align 8
  %v1_3c120 = call i32 @unknown_62bde(i32 %v1_3c11a)
  store i32 %v1_3c120, i32* %eax.global-to-local, align 8
  %v1_3c125 = inttoptr i32 %v1_3c120 to i32*
  %v2_3c125 = load i32, i32* %v1_3c125, align 4
  %v0_3c127 = load i32, i32* @ebp, align 4
  %v1_3c127 = add i32 %v0_3c127, -116
  %v2_3c127 = inttoptr i32 %v1_3c127 to i32*
  %v3_3c127 = load i32, i32* %v2_3c127, align 4
  %v3_3c12a = mul i32 %v3_3c127, ptrtoint (i64* @global_var_34.2855 to i32)
  %v3_3c12d = add i32 %v3_3c12a, %v2_3c125
  store i32 %v3_3c12d, i32* %ebx.global-to-local, align 4
  %v1_3c130 = add i32 %v0_3c127, -112
  store i32 %v1_3c130, i32* %eax.global-to-local, align 8
  %v1_3c136 = call i32 @unknown_62bde(i32 %v1_3c130)
  store i32 %v1_3c136, i32* %eax.global-to-local, align 8
  %v1_3c13b = inttoptr i32 %v1_3c136 to i32*
  %v2_3c13b = load i32, i32* %v1_3c13b, align 4
  store i32 %v2_3c13b, i32* %eax.global-to-local, align 8
  %v1_3c14b = call i32 @unknown_7968b(i32 %v2_3c13b)
  store i32 %v1_3c14b, i32* %eax.global-to-local, align 8
  ret i32 %v1_3c14b

dec_label_pc_3c155:                               ; preds = %dec_label_pc_3c04d
  %v1_3c160 = add i32 %v0_3c160, -84
  %v2_3c160 = inttoptr i32 %v1_3c160 to i32*
  %v3_3c160 = load i32, i32* %v2_3c160, align 4
  %v1_3c163 = add i32 %v0_3c160, -116
  %v2_3c163 = inttoptr i32 %v1_3c163 to i32*
  %v3_3c163 = load i32, i32* %v2_3c163, align 4
  %v2_3c166 = sub i32 %v3_3c163, %v3_3c160
  %v1_3c168 = add i32 %v0_3c160, -108
  %v2_3c168 = inttoptr i32 %v1_3c168 to i32*
  %v3_3c168 = load i32, i32* %v2_3c168, align 4
  %v1_3c16b = add i32 %v3_3c168, 4
  %v2_3c16b = inttoptr i32 %v1_3c16b to i32*
  %v3_3c16b = load i32, i32* %v2_3c16b, align 4
  %v1_3c172 = add i32 %v0_3c160, -64
  store i32 %v1_3c172, i32* %eax.global-to-local, align 8
  %v4_3c180 = call i32 @unknown_796f1(i32 %v3_3c16b, i32 %v2_3c166, i32 %v1_3c172, i32 %v1_3c15b)
  store i32 %v4_3c180, i32* %eax.global-to-local, align 8
  %v0_3c185 = load i32, i32* @ebp, align 4
  %v1_3c185 = add i32 %v0_3c185, -108
  %v2_3c185 = inttoptr i32 %v1_3c185 to i32*
  %v3_3c185 = load i32, i32* %v2_3c185, align 4
  store i32 %v3_3c185, i32* %eax.global-to-local, align 8
  %v1_3c188 = add i32 %v3_3c185, 4
  %v2_3c188 = inttoptr i32 %v1_3c188 to i32*
  %v3_3c188 = load i32, i32* %v2_3c188, align 4
  %v1_3c18b = add i32 %v0_3c185, -84
  %v2_3c18b = inttoptr i32 %v1_3c18b to i32*
  %v3_3c18b = load i32, i32* %v2_3c18b, align 4
  store i32 %v3_3c18b, i32* %eax.global-to-local, align 8
  %v1_3c18e = add i32 %v0_3c185, -116
  %v2_3c18e = inttoptr i32 %v1_3c18e to i32*
  %v3_3c18e = load i32, i32* %v2_3c18e, align 4
  %v2_3c193 = sub i32 %v3_3c18e, %v3_3c18b
  store i32 %v2_3c193, i32* %ebx.global-to-local, align 4
  %v3_3c197 = mul i32 %v2_3c193, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v3_3c197, i32* %eax.global-to-local, align 8
  %v2_3c19a = add i32 %v3_3c197, %v3_3c188
  %v3_3c19c = load i32, i32* %v2_3c185, align 4
  store i32 %v3_3c19c, i32* %eax.global-to-local, align 8
  %v2_3c19f = add i32 %v3_3c19c, 4
  %v3_3c19f = inttoptr i32 %v2_3c19f to i32*
  store i32 %v2_3c19a, i32* %v3_3c19f, align 4
  %v0_3c1a2 = load i32, i32* @ebp, align 4
  %v1_3c1a2 = add i32 %v0_3c1a2, -108
  %v2_3c1a2 = inttoptr i32 %v1_3c1a2 to i32*
  %v3_3c1a2 = load i32, i32* %v2_3c1a2, align 4
  store i32 %v3_3c1a2, i32* %eax.global-to-local, align 8
  %v1_3c1a8 = call i32 @unknown_57eb8(i32 %v3_3c1a2)
  store i32 %v1_3c1a8, i32* %eax.global-to-local, align 8
  store i32 %v1_3c1a8, i32* %ebx.global-to-local, align 4
  %v0_3c1af = load i32, i32* @ebp, align 4
  %v1_3c1af = add i32 %v0_3c1af, -108
  %v2_3c1af = inttoptr i32 %v1_3c1af to i32*
  %v3_3c1af = load i32, i32* %v2_3c1af, align 4
  store i32 %v3_3c1af, i32* %eax.global-to-local, align 8
  %v1_3c1b2 = add i32 %v3_3c1af, 4
  %v2_3c1b2 = inttoptr i32 %v1_3c1b2 to i32*
  %v3_3c1b2 = load i32, i32* %v2_3c1b2, align 4
  store i32 %v3_3c1b2, i32* %esi.global-to-local, align 4
  %v1_3c1b5 = add i32 %v0_3c1af, -112
  store i32 %v1_3c1b5, i32* %eax.global-to-local, align 8
  %v1_3c1bb = call i32 @unknown_62bde(i32 %v1_3c1b5)
  store i32 %v1_3c1bb, i32* %eax.global-to-local, align 8
  %v1_3c1c0 = inttoptr i32 %v1_3c1bb to i32*
  %v2_3c1c0 = load i32, i32* %v1_3c1c0, align 4
  store i32 %v2_3c1c0, i32* %eax.global-to-local, align 8
  %v0_3c1c2 = load i32, i32* %ebx.global-to-local, align 4
  %v0_3c1c6 = load i32, i32* %esi.global-to-local, align 4
  %v0_3c1ca = load i32, i32* @ebp, align 4
  %v1_3c1ca = add i32 %v0_3c1ca, -80
  %v2_3c1ca = inttoptr i32 %v1_3c1ca to i32*
  %v3_3c1ca = load i32, i32* %v2_3c1ca, align 4
  %v4_3c1d4 = call i32 @unknown_795c9(i32 %v2_3c1c0, i32 %v3_3c1ca, i32 %v0_3c1c6, i32 %v0_3c1c2)
  store i32 %v4_3c1d4, i32* %eax.global-to-local, align 8
  %v0_3c1d9 = load i32, i32* @ebp, align 4
  %v1_3c1d9 = add i32 %v0_3c1d9, -108
  %v2_3c1d9 = inttoptr i32 %v1_3c1d9 to i32*
  %v3_3c1d9 = load i32, i32* %v2_3c1d9, align 4
  store i32 %v3_3c1d9, i32* %eax.global-to-local, align 8
  %v1_3c1dc = add i32 %v3_3c1d9, 4
  %v2_3c1dc = inttoptr i32 %v1_3c1dc to i32*
  %v3_3c1dc = load i32, i32* %v2_3c1dc, align 4
  %v1_3c1df = add i32 %v0_3c1d9, -84
  %v2_3c1df = inttoptr i32 %v1_3c1df to i32*
  %v3_3c1df = load i32, i32* %v2_3c1df, align 4
  %v3_3c1e2 = mul i32 %v3_3c1df, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v3_3c1e2, i32* %eax.global-to-local, align 8
  %v2_3c1e5 = add i32 %v3_3c1e2, %v3_3c1dc
  %v3_3c1e7 = load i32, i32* %v2_3c1d9, align 4
  %v2_3c1ea = add i32 %v3_3c1e7, 4
  %v3_3c1ea = inttoptr i32 %v2_3c1ea to i32*
  store i32 %v2_3c1e5, i32* %v3_3c1ea, align 4
  %v0_3c1ed = load i32, i32* @ebp, align 4
  %v1_3c1ed = add i32 %v0_3c1ed, -112
  store i32 %v1_3c1ed, i32* %eax.global-to-local, align 8
  ret i32 %v1_3c1ed

; uselistorder directives
  uselistorder i32 %v0_3c185, { 1, 0, 2 }
  uselistorder i32 %v3_3c0f0, { 1, 0 }
  uselistorder i32 %v3_3c0be, { 1, 0 }
  uselistorder i32 %v0_3c160, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_3c04d, { 1, 0 }
  uselistorder i32 %v3_3c03e, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 18, 19, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 43, 44, 1, 45, 46 }
}

define i32 @function_3c1f5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c1f5:
  %v3_3c1f5 = load i32, i32* @edx, align 4
  %v5_3c1f5 = mul i32 %v3_3c1f5, -1929344256
  %v1_3c20b = call i32 @unknown_7968b(i32 %v5_3c1f5)
  %v0_3c210 = load i32, i32* @ebp, align 4
  %v1_3c210 = add i32 %v0_3c210, -64
  %v1_3c216 = call i32 @unknown_68966(i32 %v1_3c210)
  store i32 %v1_3c216, i32* @eax, align 8
  %v0_3c21b = call i32 @function_3c461()
  ret i32 %v0_3c21b
}

define i32 @function_3c220() local_unnamed_addr {
dec_label_pc_3c220:
  %v0_3c228 = load i32, i32* @ebp, align 4
  %v1_3c228 = add i32 %v0_3c228, -116
  %v2_3c228 = inttoptr i32 %v1_3c228 to i32*
  %v3_3c228 = load i32, i32* %v2_3c228, align 4
  %v1_3c22f = add i32 %v0_3c228, -108
  %v2_3c22f = inttoptr i32 %v1_3c22f to i32*
  %v3_3c22f = load i32, i32* %v2_3c22f, align 4
  %v4_3c235 = call i32 @unknown_79746(i32 %v3_3c22f, i32 %v3_3c228, i32 ptrtoint ([23 x i8]* @global_var_7154.2867 to i32))
  %v1_3c23a = load i32, i32* @ebp, align 4
  %v2_3c23a = add i32 %v1_3c23a, -76
  %v3_3c23a = inttoptr i32 %v2_3c23a to i32*
  store i32 %v4_3c235, i32* %v3_3c23a, align 4
  %v0_3c23d = load i32, i32* @ebp, align 4
  %v1_3c23d = add i32 %v0_3c23d, -92
  %v1_3c240 = add i32 %v0_3c23d, -108
  %v2_3c240 = inttoptr i32 %v1_3c240 to i32*
  %v3_3c240 = load i32, i32* %v2_3c240, align 4
  %v2_3c24a = call i32 @unknown_67adc(i32 %v1_3c23d, i32 %v3_3c240)
  %v0_3c252 = load i32, i32* @ebp, align 4
  %v1_3c252 = add i32 %v0_3c252, -92
  %v1_3c259 = add i32 %v0_3c252, -112
  %v2_3c25f = call i32 @unknown_79569(i32 %v1_3c259, i32 %v1_3c252)
  %v1_3c264 = load i32, i32* @ebp, align 4
  %v2_3c264 = add i32 %v1_3c264, -72
  %v3_3c264 = inttoptr i32 %v2_3c264 to i32*
  store i32 %v2_3c25f, i32* %v3_3c264, align 4
  %v0_3c267 = load i32, i32* @ebp, align 4
  %v1_3c267 = add i32 %v0_3c267, -108
  %v2_3c267 = inttoptr i32 %v1_3c267 to i32*
  %v3_3c267 = load i32, i32* %v2_3c267, align 4
  ret i32 %v3_3c267

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_79569, { 1, 0 }
}

define i32 @function_3c275(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c275:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3c277 = load i32, i32* @eax, align 8
  %v5_3c277 = mul i32 %v0_3c277, 2
  %v20_3c277 = and i32 %v5_3c277, 254
  %v22_3c277 = and i32 %v0_3c277, -256
  %v23_3c277 = or i32 %v20_3c277, %v22_3c277
  %v1_3c279 = load i32, i32* @ebp, align 4
  %v2_3c279 = add i32 %v1_3c279, -68
  %v3_3c279 = inttoptr i32 %v2_3c279 to i32*
  store i32 %v23_3c277, i32* %v3_3c279, align 4
  %v0_3c27c = load i32, i32* @ebp, align 4
  %v1_3c27c = add i32 %v0_3c27c, -68
  %v2_3c27c = inttoptr i32 %v1_3c27c to i32*
  %v3_3c27c = load i32, i32* %v2_3c27c, align 4
  %v2_3c27f = add i32 %v0_3c27c, -88
  %v3_3c27f = inttoptr i32 %v2_3c27f to i32*
  store i32 %v3_3c27c, i32* %v3_3c27f, align 4
  %v0_3c282 = load i32, i32* @ebp, align 4
  %v1_3c282 = add i32 %v0_3c282, -108
  %v2_3c282 = inttoptr i32 %v1_3c282 to i32*
  %v3_3c282 = load i32, i32* %v2_3c282, align 4
  %v2_3c288 = call i32 @unknown_57eb8(i32 %v3_3c282)
  %v0_3c28d = load i32, i32* @ebp, align 4
  %v1_3c28d = add i32 %v0_3c28d, -72
  %v2_3c28d = inttoptr i32 %v1_3c28d to i32*
  %v3_3c28d = load i32, i32* %v2_3c28d, align 4
  %v3_3c290 = mul i32 %v3_3c28d, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_3c293 = add i32 %v0_3c28d, -68
  %v3_3c293 = inttoptr i32 %v2_3c293 to i32*
  %v4_3c293 = load i32, i32* %v3_3c293, align 4
  %v5_3c293 = add i32 %v4_3c293, %v3_3c290
  %v1_3c29a = add i32 %v0_3c28d, -120
  %v2_3c29a = inttoptr i32 %v1_3c29a to i32*
  %v3_3c29a = load i32, i32* %v2_3c29a, align 4
  %v1_3c2a1 = add i32 %v0_3c28d, -116
  %v2_3c2a1 = inttoptr i32 %v1_3c2a1 to i32*
  %v3_3c2a1 = load i32, i32* %v2_3c2a1, align 4
  %v5_3c2ab = call i32 @unknown_796f1(i32 %v5_3c293, i32 %v3_3c2a1, i32 %v3_3c29a, i32 %v2_3c288)
  %v0_3c2b0 = load i32, i32* @ebp, align 4
  %v1_3c2b0 = add i32 %v0_3c2b0, -88
  %v2_3c2b0 = inttoptr i32 %v1_3c2b0 to i32*
  store i32 0, i32* %v2_3c2b0, align 4
  %v0_3c2b7 = load i32, i32* @ebp, align 4
  %v1_3c2b7 = add i32 %v0_3c2b7, -108
  %v2_3c2b7 = inttoptr i32 %v1_3c2b7 to i32*
  %v3_3c2b7 = load i32, i32* %v2_3c2b7, align 4
  %v2_3c2bd = call i32 @unknown_57eb8(i32 %v3_3c2b7)
  store i32 %v2_3c2bd, i32* %ebx.global-to-local, align 4
  %v0_3c2c4 = load i32, i32* @ebp, align 4
  %v1_3c2c4 = add i32 %v0_3c2c4, -112
  %v2_3c2ca = call i32 @unknown_62bde(i32 %v1_3c2c4)
  %v1_3c2cf = inttoptr i32 %v2_3c2ca to i32*
  %v2_3c2cf = load i32, i32* %v1_3c2cf, align 4
  %v0_3c2d1 = load i32, i32* @ebp, align 4
  %v1_3c2d1 = add i32 %v0_3c2d1, -108
  %v2_3c2d1 = inttoptr i32 %v1_3c2d1 to i32*
  %v3_3c2d1 = load i32, i32* %v2_3c2d1, align 4
  %v1_3c2d4 = inttoptr i32 %v3_3c2d1 to i32*
  %v2_3c2d4 = load i32, i32* %v1_3c2d4, align 4
  %v0_3c2d6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3c2da = add i32 %v0_3c2d1, -68
  %v2_3c2da = inttoptr i32 %v1_3c2da to i32*
  %v3_3c2da = load i32, i32* %v2_3c2da, align 4
  %v5_3c2e8 = call i32 @unknown_795c9(i32 %v2_3c2d4, i32 %v2_3c2cf, i32 %v3_3c2da, i32 %v0_3c2d6)
  %v1_3c2ed = load i32, i32* @ebp, align 4
  %v2_3c2ed = add i32 %v1_3c2ed, -88
  %v3_3c2ed = inttoptr i32 %v2_3c2ed to i32*
  store i32 %v5_3c2e8, i32* %v3_3c2ed, align 4
  %v0_3c2f0 = load i32, i32* @ebp, align 4
  %v1_3c2f0 = add i32 %v0_3c2f0, -116
  %v2_3c2f0 = inttoptr i32 %v1_3c2f0 to i32*
  %v3_3c2f0 = load i32, i32* %v2_3c2f0, align 4
  %v3_3c2f3 = mul i32 %v3_3c2f0, ptrtoint (i64* @global_var_34.2855 to i32)
  %v1_3c2f6 = add i32 %v0_3c2f0, -88
  %v2_3c2f6 = inttoptr i32 %v1_3c2f6 to i32*
  %v3_3c2f6 = load i32, i32* %v2_3c2f6, align 4
  %v5_3c2f6 = add i32 %v3_3c2f6, %v3_3c2f3
  store i32 %v5_3c2f6, i32* %v2_3c2f6, align 4
  %v0_3c2f9 = load i32, i32* @ebp, align 4
  %v1_3c2f9 = add i32 %v0_3c2f9, -108
  %v2_3c2f9 = inttoptr i32 %v1_3c2f9 to i32*
  %v3_3c2f9 = load i32, i32* %v2_3c2f9, align 4
  %v2_3c2ff = call i32 @unknown_57eb8(i32 %v3_3c2f9)
  store i32 %v2_3c2ff, i32* %ebx.global-to-local, align 4
  %v0_3c306 = load i32, i32* @ebp, align 4
  %v1_3c306 = add i32 %v0_3c306, -108
  %v2_3c306 = inttoptr i32 %v1_3c306 to i32*
  %v3_3c306 = load i32, i32* %v2_3c306, align 4
  %v1_3c309 = add i32 %v3_3c306, 4
  %v2_3c309 = inttoptr i32 %v1_3c309 to i32*
  %v3_3c309 = load i32, i32* %v2_3c309, align 4
  store i32 %v3_3c309, i32* %esi.global-to-local, align 4
  %v1_3c30c = add i32 %v0_3c306, -112
  %v2_3c312 = call i32 @unknown_62bde(i32 %v1_3c30c)
  %v1_3c317 = inttoptr i32 %v2_3c312 to i32*
  %v2_3c317 = load i32, i32* %v1_3c317, align 4
  %v0_3c319 = load i32, i32* %ebx.global-to-local, align 4
  %v0_3c31d = load i32, i32* @ebp, align 4
  %v1_3c31d = add i32 %v0_3c31d, -88
  %v2_3c31d = inttoptr i32 %v1_3c31d to i32*
  %v3_3c31d = load i32, i32* %v2_3c31d, align 4
  %v0_3c324 = load i32, i32* %esi.global-to-local, align 4
  %v5_3c32b = call i32 @unknown_795c9(i32 %v2_3c317, i32 %v0_3c324, i32 %v3_3c31d, i32 %v0_3c319)
  %v1_3c330 = load i32, i32* @ebp, align 4
  %v2_3c330 = add i32 %v1_3c330, -88
  %v3_3c330 = inttoptr i32 %v2_3c330 to i32*
  store i32 %v5_3c32b, i32* %v3_3c330, align 4
  %v0_3c333 = load i32, i32* @ebp, align 4
  %v1_3c333 = add i32 %v0_3c333, -108
  %v2_3c333 = inttoptr i32 %v1_3c333 to i32*
  %v3_3c333 = load i32, i32* %v2_3c333, align 4
  %v2_3c339 = call i32 @unknown_57eb8(i32 %v3_3c333)
  %v0_3c33e = load i32, i32* @ebp, align 4
  %v1_3c33e = add i32 %v0_3c33e, -108
  %v2_3c33e = inttoptr i32 %v1_3c33e to i32*
  %v3_3c33e = load i32, i32* %v2_3c33e, align 4
  %v1_3c341 = add i32 %v3_3c33e, 4
  %v2_3c341 = inttoptr i32 %v1_3c341 to i32*
  %v3_3c341 = load i32, i32* %v2_3c341, align 4
  %v1_3c347 = inttoptr i32 %v3_3c33e to i32*
  %v2_3c347 = load i32, i32* %v1_3c347, align 4
  %v4_3c354 = call i32 @unknown_57ee5(i32 %v2_3c347, i32 %v3_3c341, i32 %v2_3c339)
  %v0_3c359 = load i32, i32* @ebp, align 4
  %v1_3c359 = add i32 %v0_3c359, -108
  %v2_3c359 = inttoptr i32 %v1_3c359 to i32*
  %v3_3c359 = load i32, i32* %v2_3c359, align 4
  %v1_3c35c = add i32 %v3_3c359, 8
  %v2_3c35c = inttoptr i32 %v1_3c35c to i32*
  %v3_3c35c = load i32, i32* %v2_3c35c, align 4
  %v1_3c364 = inttoptr i32 %v3_3c359 to i32*
  %v2_3c364 = load i32, i32* %v1_3c364, align 4
  %v2_3c368 = sub i32 %v3_3c35c, %v2_3c364
  %v2_3c36c = sdiv i32 %v2_3c368, 4
  %v3_3c36f = mul i32 %v2_3c36c, -991146299
  %v3_3c377 = load i32, i32* %v2_3c359, align 4
  %v1_3c37a = inttoptr i32 %v3_3c377 to i32*
  %v2_3c37a = load i32, i32* %v1_3c37a, align 4
  %v4_3c38a = call i32 @unknown_5e96a(i32 %v3_3c377, i32 %v2_3c37a, i32 %v3_3c36f)
  %v0_3c38f = load i32, i32* @ebp, align 4
  %v1_3c38f = add i32 %v0_3c38f, -108
  %v2_3c38f = inttoptr i32 %v1_3c38f to i32*
  %v3_3c38f = load i32, i32* %v2_3c38f, align 4
  %v1_3c392 = add i32 %v0_3c38f, -68
  %v2_3c392 = inttoptr i32 %v1_3c392 to i32*
  %v3_3c392 = load i32, i32* %v2_3c392, align 4
  %v2_3c395 = inttoptr i32 %v3_3c38f to i32*
  store i32 %v3_3c392, i32* %v2_3c395, align 4
  %v0_3c397 = load i32, i32* @ebp, align 4
  %v1_3c397 = add i32 %v0_3c397, -108
  %v2_3c397 = inttoptr i32 %v1_3c397 to i32*
  %v3_3c397 = load i32, i32* %v2_3c397, align 4
  %v1_3c39a = add i32 %v0_3c397, -88
  %v2_3c39a = inttoptr i32 %v1_3c39a to i32*
  %v3_3c39a = load i32, i32* %v2_3c39a, align 4
  %v2_3c39d = add i32 %v3_3c397, 4
  %v3_3c39d = inttoptr i32 %v2_3c39d to i32*
  store i32 %v3_3c39a, i32* %v3_3c39d, align 4
  %v0_3c3a0 = load i32, i32* @ebp, align 4
  %v1_3c3a0 = add i32 %v0_3c3a0, -76
  %v2_3c3a0 = inttoptr i32 %v1_3c3a0 to i32*
  %v3_3c3a0 = load i32, i32* %v2_3c3a0, align 4
  %v3_3c3a3 = mul i32 %v3_3c3a0, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_3c3a8 = add i32 %v0_3c3a0, -68
  %v3_3c3a8 = inttoptr i32 %v2_3c3a8 to i32*
  %v4_3c3a8 = load i32, i32* %v3_3c3a8, align 4
  %v5_3c3a8 = add i32 %v4_3c3a8, %v3_3c3a3
  %v1_3c3ab = add i32 %v0_3c3a0, -108
  %v2_3c3ab = inttoptr i32 %v1_3c3ab to i32*
  %v3_3c3ab = load i32, i32* %v2_3c3ab, align 4
  store i32 %v3_3c3ab, i32* @eax, align 8
  %v2_3c3ae = add i32 %v3_3c3ab, 8
  %v3_3c3ae = inttoptr i32 %v2_3c3ae to i32*
  store i32 %v5_3c3a8, i32* %v3_3c3ae, align 4
  %v0_3c3b1 = call i32 @function_3c461()
  ret i32 %v0_3c3b1

; uselistorder directives
  uselistorder i32 %v0_3c28d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_3c277, { 1, 0 }
  uselistorder i32 ()* @function_3c461, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_795c9, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @unknown_62bde, { 1, 0, 5, 4, 3, 2 }
  uselistorder i32 -112, { 8, 9, 1, 2, 3, 4, 5, 6, 7, 0, 10 }
  uselistorder i32 -120, { 1, 0 }
  uselistorder i32 254, { 0, 1, 2, 4, 3 }
}

define i32 @function_3c2f5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c2f5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3c376(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c376:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3c3b7() local_unnamed_addr {
dec_label_pc_3c3b7:
  %eax.global-to-local = alloca i32, align 4
  %v0_3c3b7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3c3b7
}

define i32 @function_3c3ce() local_unnamed_addr {
dec_label_pc_3c3ce:
  %eax.global-to-local = alloca i32, align 4
  %v0_3c3ce = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3c3ce
}

define i32 @function_3c3e5() local_unnamed_addr {
dec_label_pc_3c3e5:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3c3e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3c3e5 = add i32 %v0_3c3e5, 1962977405
  %v2_3c3e5 = inttoptr i32 %v1_3c3e5 to i32*
  %v3_3c3e5 = load i32, i32* %v2_3c3e5, align 4
  %v4_3c3e5 = add i32 %v3_3c3e5, 1
  store i32 %v4_3c3e5, i32* %v2_3c3e5, align 4
  %v0_3c3eb = load i32, i32* @ebp, align 4
  %v1_3c3eb = add i32 %v0_3c3eb, -108
  %v2_3c3eb = inttoptr i32 %v1_3c3eb to i32*
  %v3_3c3eb = load i32, i32* %v2_3c3eb, align 4
  %v2_3c3f2 = call i32 @unknown_57eb8(i32 %v3_3c3eb)
  %v0_3c3f7 = load i32, i32* @ebp, align 4
  %v1_3c3f7 = add i32 %v0_3c3f7, -116
  %v2_3c3f7 = inttoptr i32 %v1_3c3f7 to i32*
  %v3_3c3f7 = load i32, i32* %v2_3c3f7, align 4
  %v1_3c3fa = add i32 %v0_3c3f7, -72
  %v2_3c3fa = inttoptr i32 %v1_3c3fa to i32*
  %v3_3c3fa = load i32, i32* %v2_3c3fa, align 4
  %v2_3c3fd = add i32 %v3_3c3fa, %v3_3c3f7
  %v3_3c3ff = mul i32 %v2_3c3fd, ptrtoint (i64* @global_var_34.2855 to i32)
  %v2_3c404 = add i32 %v0_3c3f7, -68
  %v3_3c404 = inttoptr i32 %v2_3c404 to i32*
  %v4_3c404 = load i32, i32* %v3_3c404, align 4
  %v5_3c404 = add i32 %v4_3c404, %v3_3c3ff
  %v3_3c407 = load i32, i32* %v2_3c3fa, align 4
  %v3_3c40a = mul i32 %v3_3c407, ptrtoint (i64* @global_var_34.2855 to i32)
  %v5_3c40d = add i32 %v4_3c404, %v3_3c40a
  %v5_3c41b = call i32 @unknown_57ee5(i32 %v5_3c40d, i32 %v5_3c404, i32 %v2_3c3f2)
  %v0_3c420 = call i32 @function_3c443()
  ret i32 %v0_3c420

; uselistorder directives
  uselistorder i32 -72, { 0, 17, 11, 15, 22, 18, 19, 20, 21, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 52, 1, 2, 3, 4, 5, 6, 7, 42, 43, 44, 26, 24, 25, 12, 13, 14, 27, 28, 29, 45, 16, 46, 47, 48, 9, 8, 10, 53, 54, 55 }
  uselistorder i32 -116, { 0, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2 }
}

define i32 @function_3c422() local_unnamed_addr {
dec_label_pc_3c422:
  %ebp.global-to-local = alloca i32, align 4
  %v0_3c422 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3c422 = add i32 %v0_3c422, -108
  %v2_3c422 = inttoptr i32 %v1_3c422 to i32*
  %v3_3c422 = load i32, i32* %v2_3c422, align 4
  %v1_3c428 = call i32 @unknown_57eb8(i32 %v3_3c422)
  %v1_3c431 = add i32 %v0_3c422, -88
  %v2_3c431 = inttoptr i32 %v1_3c431 to i32*
  %v3_3c431 = load i32, i32* %v2_3c431, align 4
  %v1_3c438 = add i32 %v0_3c422, -68
  %v2_3c438 = inttoptr i32 %v1_3c438 to i32*
  %v3_3c438 = load i32, i32* %v2_3c438, align 4
  %v3_3c43e = call i32 @unknown_57ee5(i32 %v3_3c438, i32 %v3_3c431, i32 %v1_3c428)
  ret i32 %v3_3c43e

; uselistorder directives
  uselistorder i32 %v0_3c422, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_57ee5, { 2, 1, 0 }
  uselistorder i32 -88, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 14, 12, 13, 15, 16 }
  uselistorder i32 (i32)* @unknown_57eb8, { 7, 6, 3, 2, 1, 0, 5, 4 }
}

define i32 @function_3c443() local_unnamed_addr {
dec_label_pc_3c443:
  %v0_3c443 = load i32, i32* @ebp, align 4
  %v1_3c443 = add i32 %v0_3c443, -108
  %v2_3c443 = inttoptr i32 %v1_3c443 to i32*
  %v3_3c443 = load i32, i32* %v2_3c443, align 4
  %v1_3c446 = add i32 %v0_3c443, -76
  %v2_3c446 = inttoptr i32 %v1_3c446 to i32*
  %v3_3c446 = load i32, i32* %v2_3c446, align 4
  %v1_3c44d = add i32 %v0_3c443, -68
  %v2_3c44d = inttoptr i32 %v1_3c44d to i32*
  %v3_3c44d = load i32, i32* %v2_3c44d, align 4
  %v3_3c457 = call i32 @unknown_5e96a(i32 %v3_3c443, i32 %v3_3c44d, i32 %v3_3c446)
  ret i32 %v3_3c457

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_5e96a, { 1, 0 }
  uselistorder i32 -68, { 1, 0, 2, 27, 28, 29, 30, 31, 32, 16, 34, 33, 35, 36, 37, 10, 11, 59, 60, 58, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 3, 56, 57, 4, 5, 6, 7, 8, 9, 12, 38, 39, 13, 14, 15, 40, 51, 52, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 53, 54, 55, 62 }
  uselistorder i32 -108, { 1, 0, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 28 }
}

define i32 @function_3c460(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c460:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3c461() local_unnamed_addr {
dec_label_pc_3c461:
  %v0_3c461 = load i32, i32* @ebp, align 4
  %v1_3c461 = add i32 %v0_3c461, -12
  %v2_3c461 = inttoptr i32 %v1_3c461 to i32*
  %v3_3c461 = load i32, i32* %v2_3c461, align 4
  %v1_3c464 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3c464 = icmp eq i32 %v1_3c464, %v3_3c461
  br i1 %v3_3c464, label %bb, label %dec_label_pc_3c461.dec_label_pc_3c46d_crit_edge

dec_label_pc_3c461.dec_label_pc_3c46d_crit_edge:  ; preds = %dec_label_pc_3c461
  %v2_3c46b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3c46d

bb:                                               ; preds = %dec_label_pc_3c461
  %v1_3c46b = call i32 @function_3c472()
  br label %dec_label_pc_3c46d

dec_label_pc_3c46d:                               ; preds = %dec_label_pc_3c461.dec_label_pc_3c46d_crit_edge, %bb
  %v2_3c46b = phi i32 [ %v2_3c46b.pre, %dec_label_pc_3c461.dec_label_pc_3c46d_crit_edge ], [ %v1_3c46b, %bb ]
  ret i32 %v2_3c46b

; uselistorder directives
  uselistorder label %dec_label_pc_3c46d, { 1, 0 }
}

define i32 @function_3c472() local_unnamed_addr {
dec_label_pc_3c472:
  %v0_3c472 = load i32, i32* @ebp, align 4
  %v1_3c477 = inttoptr i32 %v0_3c472 to i32*
  %v2_3c477 = load i32, i32* %v1_3c477, align 4
  store i32 %v2_3c477, i32* @ebp, align 4
  %v0_3c478 = load i32, i32* @eax, align 8
  ret i32 %v0_3c478
}

define i32 @_Z12SerReadWriteI11CDataStream9COutPointEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3c479:
  %v4_3c4c4 = call i32 @unknown_79c9f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3c4da

bb:                                               ; preds = %dec_label_pc_3c479
  %v1_3c4d8 = call i32 @function_3c4df()
  br label %dec_label_pc_3c4da

dec_label_pc_3c4da:                               ; preds = %bb, %dec_label_pc_3c479
  %v2_3c4d8 = phi i32 [ %v1_3c4d8, %bb ], [ 0, %dec_label_pc_3c479 ]
  ret i32 %v2_3c4d8
}

define i32 @function_3c4df() local_unnamed_addr {
dec_label_pc_3c4df:
  %v0_3c4e0 = load i32, i32* @eax, align 8
  ret i32 %v0_3c4e0
}

define i32 @_Z12SerReadWriteI11CDataStream7CScriptEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c4e1:
  ret i32 %arg2
}

define i32 @function_3c4f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c4f4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3c4f4 = load i32, i32* @ebp, align 4
  %v1_3c4f4 = add i32 %v0_3c4f4, 1
  store i32 %v1_3c4f4, i32* %ebp.global-to-local, align 4
  %v0_3c4f5 = load i32, i32* @ecx, align 8
  %v1_3c4f5 = add i32 %v0_3c4f5, 1166793797
  %v2_3c4f5 = inttoptr i32 %v1_3c4f5 to i8*
  %v3_3c4f5 = load i8, i8* %v2_3c4f5, align 1
  %v5_3c4f5 = trunc i32 %v0_3c4f5 to i8
  %v6_3c4f5 = load i1, i1* @cf, align 1
  %v7_3c4f5 = zext i1 %v6_3c4f5 to i8
  %v8_3c4f5 = add i8 %v3_3c4f5, %v5_3c4f5
  %v9_3c4f5 = add i8 %v7_3c4f5, %v8_3c4f5
  %v27_3c4f5 = icmp ule i8 %v9_3c4f5, %v3_3c4f5
  %v28_3c4f5 = icmp ult i8 %v8_3c4f5, %v3_3c4f5
  %v29_3c4f5 = select i1 %v6_3c4f5, i1 %v27_3c4f5, i1 %v28_3c4f5
  store i1 %v29_3c4f5, i1* %cf.global-to-local, align 1
  store i8 %v9_3c4f5, i8* %v2_3c4f5, align 1
  %v0_3c4fb = load i32, i32* @eax, align 8
  %v1_3c4fb = trunc i32 %v0_3c4fb to i8
  %v2_3c4fb = load i1, i1* %cf.global-to-local, align 1
  %v3_3c4fb = zext i1 %v2_3c4fb to i8
  %v4_3c4fb = add i8 %v1_3c4fb, -119
  %v5_3c4fb = add i8 %v4_3c4fb, %v3_3c4fb
  %v22_3c4fb = icmp ule i8 %v5_3c4fb, %v1_3c4fb
  %v23_3c4fb = icmp ugt i8 %v1_3c4fb, 118
  %v24_3c4fb = select i1 %v2_3c4fb, i1 %v22_3c4fb, i1 %v23_3c4fb
  store i1 %v24_3c4fb, i1* %cf.global-to-local, align 1
  %v25_3c4fb = zext i8 %v5_3c4fb to i32
  %v27_3c4fb = and i32 %v0_3c4fb, -256
  %v28_3c4fb = or i32 %v25_3c4fb, %v27_3c4fb
  store i32 %v28_3c4fb, i32* %eax.global-to-local, align 8
  %v0_3c4fd = load i32, i32* %ebp.global-to-local, align 4
  %v1_3c4fd = add i32 %v0_3c4fd, 1
  store i32 %v1_3c4fd, i32* @ebp, align 4
  %v1_3c502 = add i32 %v28_3c4fb, -1587161275
  %v2_3c502 = inttoptr i32 %v1_3c502 to i8*
  %v3_3c502 = load i8, i8* %v2_3c502, align 1
  %v4_3c502 = load i32, i32* @ecx, align 8
  %v5_3c502 = trunc i32 %v4_3c502 to i8
  %v7_3c502 = zext i1 %v24_3c4fb to i8
  %v8_3c502 = sub i8 %v3_3c502, %v5_3c502
  %v9_3c502 = add i8 %v8_3c502, %v7_3c502
  %v19_3c502 = sub i8 %v8_3c502, %v7_3c502
  %v20_3c502 = icmp ult i8 %v3_3c502, %v19_3c502
  %v21_3c502 = icmp ne i8 %v5_3c502, -1
  %v22_3c502 = or i1 %v21_3c502, %v20_3c502
  %v23_3c502 = icmp ult i8 %v3_3c502, %v5_3c502
  %v24_3c502 = select i1 %v24_3c4fb, i1 %v22_3c502, i1 %v23_3c502
  store i1 %v24_3c502, i1* %cf.global-to-local, align 1
  store i8 %v9_3c502, i8* %v2_3c502, align 1
  %v0_3c508 = load i32, i32* %eax.global-to-local, align 8
  %v1_3c508 = trunc i32 %v0_3c508 to i8
  %v2_3c508 = load i1, i1* %cf.global-to-local, align 1
  %v3_3c508 = zext i1 %v2_3c508 to i8
  %v4_3c508 = add i8 %v3_3c508, %v1_3c508
  %v19_3c508 = icmp ule i8 %v4_3c508, %v1_3c508
  %v21_3c508 = icmp eq i1 %v2_3c508, %v19_3c508
  store i1 %v21_3c508, i1* %cf.global-to-local, align 1
  %v22_3c508 = zext i8 %v4_3c508 to i32
  %v24_3c508 = and i32 %v0_3c508, -256
  %v25_3c508 = or i32 %v22_3c508, %v24_3c508
  store i32 %v25_3c508, i32* %eax.global-to-local, align 8
  %v1_3c50a = inttoptr i32 %v25_3c508 to i8*
  %v2_3c50a = load i8, i8* %v1_3c50a, align 1
  %v5_3c50a = add i8 %v2_3c50a, %v4_3c508
  store i8 %v5_3c50a, i8* %v1_3c50a, align 1
  %v0_3c50c = load i32, i32* %eax.global-to-local, align 8
  %v1_3c50c = load i32, i32* @ebp, align 4
  %v2_3c50c = add i32 %v1_3c50c, -12
  %v3_3c50c = inttoptr i32 %v2_3c50c to i32*
  store i32 %v0_3c50c, i32* %v3_3c50c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3c511 = load i32, i32* @ebp, align 4
  %v1_3c511 = add i32 %v0_3c511, -40
  %v2_3c511 = inttoptr i32 %v1_3c511 to i32*
  %v3_3c511 = load i32, i32* %v2_3c511, align 4
  store i32 %v3_3c511, i32* %eax.global-to-local, align 8
  %v1_3c518 = add i32 %v0_3c511, -36
  %v2_3c518 = inttoptr i32 %v1_3c518 to i32*
  %v3_3c518 = load i32, i32* %v2_3c518, align 4
  store i32 %v3_3c518, i32* %eax.global-to-local, align 8
  %v1_3c51f = add i32 %v0_3c511, -32
  %v2_3c51f = inttoptr i32 %v1_3c51f to i32*
  %v3_3c51f = load i32, i32* %v2_3c51f, align 4
  store i32 %v3_3c51f, i32* %eax.global-to-local, align 8
  %v1_3c526 = add i32 %v0_3c511, -28
  %v2_3c526 = inttoptr i32 %v1_3c526 to i32*
  %v3_3c526 = load i32, i32* %v2_3c526, align 4
  store i32 %v3_3c526, i32* %eax.global-to-local, align 8
  %v4_3c52c = call i32 @unknown_79d63(i32 %v3_3c526, i32 %v3_3c51f, i32 %v3_3c518, i32 %v3_3c511)
  store i32 0, i32* @eax, align 8
  %v0_3c536 = load i32, i32* @ebp, align 4
  %v1_3c536 = add i32 %v0_3c536, -12
  %v2_3c536 = inttoptr i32 %v1_3c536 to i32*
  %v3_3c536 = load i32, i32* %v2_3c536, align 4
  %v1_3c539 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3c539 = icmp eq i32 %v1_3c539, %v3_3c536
  br i1 %v3_3c539, label %bb, label %dec_label_pc_3c542

bb:                                               ; preds = %dec_label_pc_3c4f4
  %v1_3c540 = call i32 @function_3c547()
  store i32 %v1_3c540, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3c542

dec_label_pc_3c542:                               ; preds = %bb, %dec_label_pc_3c4f4
  %v2_3c540 = phi i32 [ %v1_3c540, %bb ], [ 0, %dec_label_pc_3c4f4 ]
  ret i32 %v2_3c540

; uselistorder directives
  uselistorder i32 %v0_3c511, { 1, 0, 2, 3 }
  uselistorder i8 %v4_3c508, { 0, 2, 1 }
  uselistorder i8 %v1_3c508, { 1, 0 }
  uselistorder i8 %v8_3c502, { 1, 0 }
  uselistorder i8 %v7_3c502, { 1, 0 }
  uselistorder i8 %v5_3c502, { 1, 0, 2 }
  uselistorder i1 %v24_3c4fb, { 1, 0, 2 }
  uselistorder i8 %v5_3c4fb, { 1, 0 }
  uselistorder i8 %v9_3c4f5, { 1, 0 }
  uselistorder i8 %v8_3c4f5, { 1, 0 }
  uselistorder i8 -1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 -1587161275, { 3, 1, 4, 5, 12, 2, 6, 11, 7, 8, 9, 0, 10 }
  uselistorder i8 -119, { 10, 7, 13, 8, 5, 16, 17, 9, 30, 18, 6, 11, 12, 29, 20, 14, 15, 21, 22, 23, 24, 4, 25, 26, 1, 2, 3, 19, 27, 28, 0 }
  uselistorder i32 1166793797, { 2, 1, 3, 0, 4 }
}

define i32 @function_3c547() local_unnamed_addr {
dec_label_pc_3c547:
  %v0_3c548 = load i32, i32* @eax, align 8
  ret i32 %v0_3c548
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3c54a:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-100, align 4
  %v10_3c576 = icmp eq i32 %arg3, 0
  br i1 %v10_3c576, label %bb, label %dec_label_pc_3c580

bb:                                               ; preds = %dec_label_pc_3c54a
  %v5_3c57a = call i32 @function_3ca0c(i32 %arg4, i32 0, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_3c580

dec_label_pc_3c580:                               ; preds = %bb, %dec_label_pc_3c54a
  %v1_3c583 = add i32 %arg1, 8
  %v2_3c583 = inttoptr i32 %v1_3c583 to i32*
  %v3_3c583 = load i32, i32* %v2_3c583, align 4
  %v1_3c58b = add i32 %arg1, 4
  %v2_3c58b = inttoptr i32 %v1_3c58b to i32*
  %v3_3c58b = load i32, i32* %v2_3c58b, align 4
  %v2_3c590 = sub i32 %v3_3c583, %v3_3c58b
  %v2_3c594 = sdiv i32 %v2_3c590, 4
  %v3_3c597 = mul i32 %v2_3c594, -858993459
  %v10_3c59d = icmp ult i32 %v3_3c597, %arg3
  br i1 %v10_3c59d, label %bb116, label %dec_label_pc_3c5a6

bb116:                                            ; preds = %dec_label_pc_3c580
  %v1_3c5a0 = call i32 @function_3c7a4()
  br label %dec_label_pc_3c5a6

dec_label_pc_3c5a6:                               ; preds = %bb116, %dec_label_pc_3c580
  %v2_3c5ad = ptrtoint i32* %stack_var_-84 to i32
  %v2_3c5b3 = call i32 @unknown_4f0b0(i32 %v2_3c5ad, i32 %arg4)
  %v2_3c5b8 = ptrtoint i32* %stack_var_-64 to i32
  %v2_3c5c5 = call i32 @unknown_5896a(i32 %v2_3c5b8, i32 %arg1)
  %v2_3c5cd = ptrtoint i32* %stack_var_-100 to i32
  %v2_3c5da = call i32 @unknown_79e28(i32 %v2_3c5b8, i32 %v2_3c5cd)
  %tmp119 = icmp ugt i32 %v2_3c5da, %arg3
  br i1 %tmp119, label %dec_label_pc_3c5f7, label %bb118

bb118:                                            ; preds = %dec_label_pc_3c5a6
  %v3_3c5e5 = load i32, i32* %v2_3c58b, align 4
  %v5_3c5f1 = call i32 @function_3c6cd(i32 %v2_3c5da, i32 %v3_3c5e5)
  br label %dec_label_pc_3c5f7

dec_label_pc_3c5f7:                               ; preds = %dec_label_pc_3c5a6, %bb118
  %v1_3c5fd = call i32 @unknown_5857c(i32 %arg1)
  %v3_3c613 = load i32, i32* %v2_3c58b, align 4
  %tmp120 = mul i32 %arg3, -20
  %v2_3c625 = add i32 %v3_3c613, %tmp120
  ret i32 %v2_3c625

; uselistorder directives
  uselistorder i32 %v2_3c5da, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_3c5f7, { 1, 0 }
}

define i32 @function_3c628(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c628:
  %v16_3c628 = load i32, i32* @eax, align 8
  ret i32 %v16_3c628
}

define i32 @function_3c629(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c629:
  %v0_3c629 = load i32, i32* @eax, align 8
  %v11_3c629 = and i32 %v0_3c629, -244
  %v0_3c62b = load i32, i32* @esi, align 4
  %v0_3c62f = load i32, i32* @ebx, align 4
  %v3_3c636 = call i32 @unknown_79e88(i32 %v11_3c629, i32 %v0_3c62f, i32 %v0_3c62b)
  %v0_3c63b = load i32, i32* @ebp, align 4
  %v1_3c63b = add i32 %v0_3c63b, -92
  %v2_3c63b = inttoptr i32 %v1_3c63b to i32*
  %v3_3c63b = load i32, i32* %v2_3c63b, align 4
  %v1_3c63e = add i32 %v3_3c63b, 4
  %v2_3c63e = inttoptr i32 %v1_3c63e to i32*
  %v3_3c63e = load i32, i32* %v2_3c63e, align 4
  %v1_3c641 = add i32 %v0_3c63b, -100
  %v2_3c641 = inttoptr i32 %v1_3c641 to i32*
  %v3_3c641 = load i32, i32* %v2_3c641, align 4
  %v2_3c64b = mul i32 %v3_3c641, 20
  %v3_3c64e = add i32 %v2_3c64b, %v3_3c63e
  %v3_3c651 = load i32, i32* %v2_3c63b, align 4
  %v2_3c654 = add i32 %v3_3c651, 4
  %v3_3c654 = inttoptr i32 %v2_3c654 to i32*
  store i32 %v3_3c64e, i32* %v3_3c654, align 4
  %v0_3c657 = load i32, i32* @ebp, align 4
  %v1_3c657 = add i32 %v0_3c657, -100
  %v2_3c657 = inttoptr i32 %v1_3c657 to i32*
  %v3_3c657 = load i32, i32* %v2_3c657, align 4
  %v2_3c668 = add i32 %v0_3c657, -44
  %v3_3c668 = inttoptr i32 %v2_3c668 to i32*
  %v4_3c668 = load i32, i32* %v3_3c668, align 4
  %tmp3 = mul i32 %v3_3c657, -20
  %v5_3c668 = add i32 %v4_3c668, %tmp3
  store i32 %v5_3c668, i32* @ebx, align 4
  %v1_3c66b = add i32 %v0_3c657, -96
  %v1_3c671 = call i32 @unknown_79ee4(i32 %v1_3c66b)
  %v1_3c676 = inttoptr i32 %v1_3c671 to i32*
  %v2_3c676 = load i32, i32* %v1_3c676, align 4
  ret i32 %v2_3c676
}

define i32 @function_3c674(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c674:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3c68a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c68a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3c68a = load i32, i32* @ebp, align 4
  %v1_3c68a = add i32 %v0_3c68a, 76128325
  %v2_3c68a = inttoptr i32 %v1_3c68a to i8*
  %v3_3c68a = load i8, i8* %v2_3c68a, align 1
  %v4_3c68a = load i32, i32* @ecx, align 8
  %v5_3c68a = trunc i32 %v4_3c68a to i8
  %v6_3c68a = add i8 %v5_3c68a, %v3_3c68a
  store i8 %v6_3c68a, i8* %v2_3c68a, align 1
  %v3_3c693 = load float, float* bitcast (i32* @ebx to float*), align 4
  %v0_3c695.cast = bitcast float %v3_3c693 to i32
  %v1_3c695 = add i32 %v0_3c695.cast, -1672115448
  %v2_3c695 = inttoptr i32 %v1_3c695 to i8*
  %v3_3c695 = load i8, i8* %v2_3c695, align 1
  %v4_3c695 = load i32, i32* @ecx, align 8
  %v5_3c695 = trunc i32 %v4_3c695 to i8
  %v6_3c695 = add i8 %v5_3c695, %v3_3c695
  store i8 %v6_3c695, i8* %v2_3c695, align 1
  %v0_3c69b = load i32, i32* @edx, align 4
  %v2_3c6a2 = mul i32 %v0_3c69b, 20
  %v0_3c6a5 = load i32, i32* @ecx, align 8
  %v3_3c6a5 = add i32 %v0_3c6a5, %v2_3c6a2
  store i32 %v3_3c6a5, i32* %ebx.global-to-local, align 4
  %v0_3c6a8 = load i32, i32* @ebp, align 4
  %v1_3c6a8 = add i32 %v0_3c6a8, -96
  %v1_3c6ae = call i32 @unknown_79ee4(i32 %v1_3c6a8)
  %v1_3c6b3 = inttoptr i32 %v1_3c6ae to i32*
  %v2_3c6b3 = load i32, i32* %v1_3c6b3, align 4
  %v0_3c6b5 = load i32, i32* @ebp, align 4
  %v1_3c6b5 = add i32 %v0_3c6b5, -80
  %v0_3c6bc = load i32, i32* %ebx.global-to-local, align 4
  %v3_3c6c3 = call i32 @unknown_79f77(i32 %v2_3c6b3, i32 %v0_3c6bc, i32 %v1_3c6b5)
  %v0_3c6c8 = call i32 @function_3c794()
  ret i32 %v0_3c6c8
}

define i32 @function_3c6ba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c6ba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3c6cd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3c6cd:
  %v0_3c6cd = load i32, i32* @ebp, align 4
  %v1_3c6cd = add i32 %v0_3c6cd, -92
  %v2_3c6cd = inttoptr i32 %v1_3c6cd to i32*
  %v3_3c6cd = load i32, i32* %v2_3c6cd, align 4
  %v1_3c6d3 = call i32 @unknown_5857c(i32 %v3_3c6cd)
  %v0_3c6d8 = load i32, i32* @ebp, align 4
  %v1_3c6ea = add i32 %v0_3c6d8, -80
  ret i32 %v1_3c6ea
}

define i32 @function_3c6f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c6f2:
  %v0_3c6f5 = load i32, i32* @edx, align 4
  %v1_3c6f8 = call i32 @unknown_5f284(i32 %v0_3c6f5)
  %v0_3c6fd = load i32, i32* @ebp, align 4
  %v1_3c6fd = add i32 %v0_3c6fd, -92
  %v2_3c6fd = inttoptr i32 %v1_3c6fd to i32*
  %v3_3c6fd = load i32, i32* %v2_3c6fd, align 4
  %v1_3c700 = add i32 %v3_3c6fd, 4
  %v2_3c700 = inttoptr i32 %v1_3c700 to i32*
  %v3_3c700 = load i32, i32* %v2_3c700, align 4
  %v1_3c703 = add i32 %v0_3c6fd, -48
  %v2_3c703 = inttoptr i32 %v1_3c703 to i32*
  %v3_3c703 = load i32, i32* %v2_3c703, align 4
  %v1_3c706 = add i32 %v0_3c6fd, -100
  %v2_3c706 = inttoptr i32 %v1_3c706 to i32*
  %v3_3c706 = load i32, i32* %v2_3c706, align 4
  %v2_3c709 = sub i32 %v3_3c706, %v3_3c703
  %v2_3c712 = mul i32 %v2_3c709, 20
  %v3_3c715 = add i32 %v2_3c712, %v3_3c700
  %v3_3c718 = load i32, i32* %v2_3c6fd, align 4
  %v2_3c71b = add i32 %v3_3c718, 4
  %v3_3c71b = inttoptr i32 %v2_3c71b to i32*
  store i32 %v3_3c715, i32* %v3_3c71b, align 4
  %v0_3c71e = load i32, i32* @ebp, align 4
  %v1_3c71e = add i32 %v0_3c71e, -92
  %v2_3c71e = inttoptr i32 %v1_3c71e to i32*
  %v3_3c71e = load i32, i32* %v2_3c71e, align 4
  %v1_3c724 = call i32 @unknown_5857c(i32 %v3_3c71e)
  %v0_3c72b = load i32, i32* @ebp, align 4
  %v1_3c72b = add i32 %v0_3c72b, -92
  %v2_3c72b = inttoptr i32 %v1_3c72b to i32*
  %v3_3c72b = load i32, i32* %v2_3c72b, align 4
  %v1_3c72e = add i32 %v3_3c72b, 4
  %v2_3c72e = inttoptr i32 %v1_3c72e to i32*
  %v3_3c72e = load i32, i32* %v2_3c72e, align 4
  %v1_3c731 = add i32 %v0_3c72b, -96
  %v1_3c737 = call i32 @unknown_79ee4(i32 %v1_3c731)
  %v1_3c73c = inttoptr i32 %v1_3c737 to i32*
  %v2_3c73c = load i32, i32* %v1_3c73c, align 4
  %v0_3c746 = load i32, i32* @ebp, align 4
  %v1_3c746 = add i32 %v0_3c746, -44
  %v2_3c746 = inttoptr i32 %v1_3c746 to i32*
  %v3_3c746 = load i32, i32* %v2_3c746, align 4
  %v3_3c750 = call i32 @unknown_79e88(i32 %v2_3c73c, i32 %v3_3c746, i32 %v3_3c72e)
  %v0_3c755 = load i32, i32* @ebp, align 4
  %v1_3c755 = add i32 %v0_3c755, -92
  %v2_3c755 = inttoptr i32 %v1_3c755 to i32*
  %v3_3c755 = load i32, i32* %v2_3c755, align 4
  %v1_3c758 = add i32 %v3_3c755, 4
  %v2_3c758 = inttoptr i32 %v1_3c758 to i32*
  %v3_3c758 = load i32, i32* %v2_3c758, align 4
  %v1_3c75b = add i32 %v0_3c755, -48
  %v2_3c75b = inttoptr i32 %v1_3c75b to i32*
  %v3_3c75b = load i32, i32* %v2_3c75b, align 4
  %v2_3c765 = mul i32 %v3_3c75b, 20
  %v3_3c768 = add i32 %v2_3c765, %v3_3c758
  %v3_3c76b = load i32, i32* %v2_3c755, align 4
  %v2_3c76e = add i32 %v3_3c76b, 4
  %v3_3c76e = inttoptr i32 %v2_3c76e to i32*
  store i32 %v3_3c768, i32* %v3_3c76e, align 4
  %v0_3c771 = load i32, i32* @ebp, align 4
  %v1_3c771 = add i32 %v0_3c771, -96
  %v1_3c777 = call i32 @unknown_79ee4(i32 %v1_3c771)
  %v1_3c77c = inttoptr i32 %v1_3c777 to i32*
  %v2_3c77c = load i32, i32* %v1_3c77c, align 4
  %v0_3c77e = load i32, i32* @ebp, align 4
  %v1_3c77e = add i32 %v0_3c77e, -80
  %v1_3c785 = add i32 %v0_3c77e, -44
  %v2_3c785 = inttoptr i32 %v1_3c785 to i32*
  %v3_3c785 = load i32, i32* %v2_3c785, align 4
  %v3_3c78f = call i32 @unknown_79f77(i32 %v2_3c77c, i32 %v3_3c785, i32 %v1_3c77e)
  ret i32 %v3_3c78f

; uselistorder directives
  uselistorder i32 %v0_3c6fd, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_79f77, { 1, 0 }
}

define i32 @function_3c794() local_unnamed_addr {
dec_label_pc_3c794:
  %v0_3c794 = load i32, i32* @ebp, align 4
  %v1_3c794 = add i32 %v0_3c794, -80
  %v1_3c79a = call i32 @unknown_4f078(i32 %v1_3c794)
  %v4_3c79f = call i32 @function_3ca0c(i32 %v1_3c794, i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  ret i32 %v4_3c79f
}

define i32 @function_3c796(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3c796:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3c7a4() local_unnamed_addr {
dec_label_pc_3c7a4:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_3c7ac = load i32, i32* @ebp, align 4
  %v1_3c7ac = add i32 %v0_3c7ac, -100
  %v2_3c7ac = inttoptr i32 %v1_3c7ac to i32*
  %v3_3c7ac = load i32, i32* %v2_3c7ac, align 4
  %v1_3c7b3 = add i32 %v0_3c7ac, -92
  %v2_3c7b3 = inttoptr i32 %v1_3c7b3 to i32*
  %v3_3c7b3 = load i32, i32* %v2_3c7b3, align 4
  %v4_3c7b9 = call i32 @unknown_79fde(i32 %v3_3c7b3, i32 %v3_3c7ac, i32 ptrtoint ([23 x i8]* @global_var_7154.2867 to i32))
  %v1_3c7be = load i32, i32* @ebp, align 4
  %v2_3c7be = add i32 %v1_3c7be, -40
  %v3_3c7be = inttoptr i32 %v2_3c7be to i32*
  store i32 %v4_3c7b9, i32* %v3_3c7be, align 4
  %v0_3c7c1 = load i32, i32* @ebp, align 4
  %v1_3c7c1 = add i32 %v0_3c7c1, -56
  %v1_3c7c4 = add i32 %v0_3c7c1, -92
  %v2_3c7c4 = inttoptr i32 %v1_3c7c4 to i32*
  %v3_3c7c4 = load i32, i32* %v2_3c7c4, align 4
  %v2_3c7ce = call i32 @unknown_77982(i32 %v1_3c7c1, i32 %v3_3c7c4)
  %v0_3c7d6 = load i32, i32* @ebp, align 4
  %v1_3c7d6 = add i32 %v0_3c7d6, -56
  %v1_3c7dd = add i32 %v0_3c7d6, -96
  store i32 %v1_3c7dd, i32* %stack_var_-4, align 4
  %v2_3c7e3 = call i32 @unknown_79e28(i32 %v1_3c7dd, i32 %v1_3c7d6)
  %v1_3c7e8 = load i32, i32* @ebp, align 4
  %v2_3c7e8 = add i32 %v1_3c7e8, -36
  %v3_3c7e8 = inttoptr i32 %v2_3c7e8 to i32*
  store i32 %v2_3c7e3, i32* %v3_3c7e8, align 4
  %v0_3c7eb = load i32, i32* @ebp, align 4
  %v1_3c7eb = add i32 %v0_3c7eb, -92
  %v2_3c7eb = inttoptr i32 %v1_3c7eb to i32*
  %v3_3c7eb = load i32, i32* %v2_3c7eb, align 4
  %v1_3c7ee = add i32 %v0_3c7eb, -40
  %v2_3c7ee = inttoptr i32 %v1_3c7ee to i32*
  %v3_3c7ee = load i32, i32* %v2_3c7ee, align 4
  store i32 %v3_3c7eb, i32* %stack_var_-4, align 4
  %v2_3c7f8 = call i32 @unknown_5f1de(i32 %v3_3c7eb, i32 %v3_3c7ee)
  %v1_3c7fd = load i32, i32* @ebp, align 4
  %v2_3c7fd = add i32 %v1_3c7fd, -32
  %v3_3c7fd = inttoptr i32 %v2_3c7fd to i32*
  store i32 %v2_3c7f8, i32* %v3_3c7fd, align 4
  %v0_3c800 = load i32, i32* @ebp, align 4
  %v1_3c800 = add i32 %v0_3c800, -32
  %v2_3c800 = inttoptr i32 %v1_3c800 to i32*
  %v3_3c800 = load i32, i32* %v2_3c800, align 4
  %v2_3c803 = add i32 %v0_3c800, -52
  %v3_3c803 = inttoptr i32 %v2_3c803 to i32*
  store i32 %v3_3c800, i32* %v3_3c803, align 4
  %v0_3c806 = load i32, i32* @ebp, align 4
  %v1_3c806 = add i32 %v0_3c806, -92
  %v2_3c806 = inttoptr i32 %v1_3c806 to i32*
  %v3_3c806 = load i32, i32* %v2_3c806, align 4
  store i32 %v3_3c806, i32* %stack_var_-4, align 4
  %v1_3c80c = call i32 @unknown_5857c(i32 %v3_3c806)
  %v0_3c813 = load i32, i32* @ebp, align 4
  %v1_3c813 = add i32 %v0_3c813, -36
  %v2_3c813 = inttoptr i32 %v1_3c813 to i32*
  %v3_3c813 = load i32, i32* %v2_3c813, align 4
  %v2_3c81d = mul i32 %v3_3c813, 20
  %v2_3c820 = add i32 %v0_3c813, -32
  %v3_3c820 = inttoptr i32 %v2_3c820 to i32*
  %v4_3c820 = load i32, i32* %v3_3c820, align 4
  %v5_3c820 = add i32 %v4_3c820, %v2_3c81d
  store i32 %v5_3c820, i32* %stack_var_-4, align 4
  %v1_3c838 = call i32 @unknown_5f284(i32 %v5_3c820)
  %v0_3c83d = load i32, i32* @ebp, align 4
  %v1_3c83d = add i32 %v0_3c83d, -52
  %v2_3c83d = inttoptr i32 %v1_3c83d to i32*
  store i32 0, i32* %v2_3c83d, align 4
  %v0_3c844 = load i32, i32* @ebp, align 4
  %v1_3c844 = add i32 %v0_3c844, -92
  %v2_3c844 = inttoptr i32 %v1_3c844 to i32*
  %v3_3c844 = load i32, i32* %v2_3c844, align 4
  store i32 %v3_3c844, i32* %stack_var_-4, align 4
  %v1_3c84a = call i32 @unknown_5857c(i32 %v3_3c844)
  store i32 %v1_3c84a, i32* %ebx.global-to-local, align 4
  %v0_3c851 = load i32, i32* @ebp, align 4
  %v1_3c851 = add i32 %v0_3c851, -96
  store i32 %v1_3c851, i32* %stack_var_-4, align 4
  %v1_3c857 = call i32 @unknown_79ee4(i32 %v1_3c851)
  %v1_3c85c = inttoptr i32 %v1_3c857 to i32*
  %v2_3c85c = load i32, i32* %v1_3c85c, align 4
  %v0_3c85e = load i32, i32* @ebp, align 4
  %v1_3c85e = add i32 %v0_3c85e, -92
  %v2_3c85e = inttoptr i32 %v1_3c85e to i32*
  %v3_3c85e = load i32, i32* %v2_3c85e, align 4
  %v1_3c861 = inttoptr i32 %v3_3c85e to i32*
  %v2_3c861 = load i32, i32* %v1_3c861, align 4
  %v1_3c867 = add i32 %v0_3c85e, -32
  %v2_3c867 = inttoptr i32 %v1_3c867 to i32*
  %v3_3c867 = load i32, i32* %v2_3c867, align 4
  store i32 %v2_3c861, i32* %stack_var_-4, align 4
  %v3_3c875 = call i32 @unknown_79e88(i32 %v2_3c861, i32 %v2_3c85c, i32 %v3_3c867)
  %v1_3c87a = load i32, i32* @ebp, align 4
  %v2_3c87a = add i32 %v1_3c87a, -52
  %v3_3c87a = inttoptr i32 %v2_3c87a to i32*
  store i32 %v3_3c875, i32* %v3_3c87a, align 4
  %v0_3c87d = load i32, i32* @ebp, align 4
  %v1_3c87d = add i32 %v0_3c87d, -100
  %v2_3c87d = inttoptr i32 %v1_3c87d to i32*
  %v3_3c87d = load i32, i32* %v2_3c87d, align 4
  %v2_3c887 = mul i32 %v3_3c87d, 20
  %v1_3c88a = add i32 %v0_3c87d, -52
  %v2_3c88a = inttoptr i32 %v1_3c88a to i32*
  %v3_3c88a = load i32, i32* %v2_3c88a, align 4
  %v5_3c88a = add i32 %v3_3c88a, %v2_3c887
  store i32 %v5_3c88a, i32* %v2_3c88a, align 4
  %v0_3c88d = load i32, i32* @ebp, align 4
  %v1_3c88d = add i32 %v0_3c88d, -92
  %v2_3c88d = inttoptr i32 %v1_3c88d to i32*
  %v3_3c88d = load i32, i32* %v2_3c88d, align 4
  store i32 %v3_3c88d, i32* %stack_var_-4, align 4
  %v1_3c893 = call i32 @unknown_5857c(i32 %v3_3c88d)
  store i32 %v1_3c893, i32* %ebx.global-to-local, align 4
  %v0_3c89a = load i32, i32* @ebp, align 4
  %v1_3c89a = add i32 %v0_3c89a, -92
  %v2_3c89a = inttoptr i32 %v1_3c89a to i32*
  %v3_3c89a = load i32, i32* %v2_3c89a, align 4
  %v1_3c89d = add i32 %v3_3c89a, 4
  %v2_3c89d = inttoptr i32 %v1_3c89d to i32*
  %v3_3c89d = load i32, i32* %v2_3c89d, align 4
  store i32 %v3_3c89d, i32* %esi.global-to-local, align 4
  %v1_3c8a0 = add i32 %v0_3c89a, -96
  store i32 %v1_3c8a0, i32* %stack_var_-4, align 4
  %v1_3c8a6 = call i32 @unknown_79ee4(i32 %v1_3c8a0)
  %v1_3c8ab = inttoptr i32 %v1_3c8a6 to i32*
  %v2_3c8ab = load i32, i32* %v1_3c8ab, align 4
  %v0_3c8ad = load i32, i32* %ebx.global-to-local, align 4
  %v0_3c8b1 = load i32, i32* @ebp, align 4
  %v1_3c8b1 = add i32 %v0_3c8b1, -52
  %v2_3c8b1 = inttoptr i32 %v1_3c8b1 to i32*
  %v3_3c8b1 = load i32, i32* %v2_3c8b1, align 4
  %v0_3c8b8 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_3c8ab, i32* %stack_var_-4, align 4
  %v3_3c8bf = call i32 @unknown_79e88(i32 %v2_3c8ab, i32 %v0_3c8b8, i32 %v3_3c8b1)
  %v1_3c8c4 = load i32, i32* @ebp, align 4
  %v2_3c8c4 = add i32 %v1_3c8c4, -52
  %v3_3c8c4 = inttoptr i32 %v2_3c8c4 to i32*
  store i32 %v3_3c8bf, i32* %v3_3c8c4, align 4
  %v0_3c8c7 = load i32, i32* @ebp, align 4
  %v1_3c8c7 = add i32 %v0_3c8c7, -92
  %v2_3c8c7 = inttoptr i32 %v1_3c8c7 to i32*
  %v3_3c8c7 = load i32, i32* %v2_3c8c7, align 4
  store i32 %v3_3c8c7, i32* %stack_var_-4, align 4
  %v1_3c8cd = call i32 @unknown_5857c(i32 %v3_3c8c7)
  %v0_3c8d2 = load i32, i32* @ebp, align 4
  %v1_3c8d2 = add i32 %v0_3c8d2, -92
  %v2_3c8d2 = inttoptr i32 %v1_3c8d2 to i32*
  %v3_3c8d2 = load i32, i32* %v2_3c8d2, align 4
  %v1_3c8d5 = add i32 %v3_3c8d2, 4
  %v2_3c8d5 = inttoptr i32 %v1_3c8d5 to i32*
  %v3_3c8d5 = load i32, i32* %v2_3c8d5, align 4
  %v1_3c8db = inttoptr i32 %v3_3c8d2 to i32*
  %v2_3c8db = load i32, i32* %v1_3c8db, align 4
  store i32 %v2_3c8db, i32* %stack_var_-4, align 4
  %v2_3c8e8 = call i32 @unknown_585a9(i32 %v2_3c8db, i32 %v3_3c8d5)
  %v0_3c8ed = load i32, i32* @ebp, align 4
  %v1_3c8ed = add i32 %v0_3c8ed, -92
  %v2_3c8ed = inttoptr i32 %v1_3c8ed to i32*
  %v3_3c8ed = load i32, i32* %v2_3c8ed, align 4
  %v1_3c8f0 = add i32 %v3_3c8ed, 8
  %v2_3c8f0 = inttoptr i32 %v1_3c8f0 to i32*
  %v3_3c8f0 = load i32, i32* %v2_3c8f0, align 4
  %v1_3c8f8 = inttoptr i32 %v3_3c8ed to i32*
  %v2_3c8f8 = load i32, i32* %v1_3c8f8, align 4
  %v2_3c8fc = sub i32 %v3_3c8f0, %v2_3c8f8
  %v2_3c900 = sdiv i32 %v2_3c8fc, 4
  %v3_3c903 = mul i32 %v2_3c900, -858993459
  %v3_3c90b = load i32, i32* %v2_3c8ed, align 4
  %v1_3c90e = inttoptr i32 %v3_3c90b to i32*
  %v2_3c90e = load i32, i32* %v1_3c90e, align 4
  store i32 %v3_3c90b, i32* %stack_var_-4, align 4
  %v3_3c91e = call i32 @unknown_5efac(i32 %v3_3c90b, i32 %v2_3c90e, i32 %v3_3c903)
  %v0_3c923 = load i32, i32* @ebp, align 4
  %v1_3c923 = add i32 %v0_3c923, -92
  %v2_3c923 = inttoptr i32 %v1_3c923 to i32*
  %v3_3c923 = load i32, i32* %v2_3c923, align 4
  %v1_3c926 = add i32 %v0_3c923, -32
  %v2_3c926 = inttoptr i32 %v1_3c926 to i32*
  %v3_3c926 = load i32, i32* %v2_3c926, align 4
  %v2_3c929 = inttoptr i32 %v3_3c923 to i32*
  store i32 %v3_3c926, i32* %v2_3c929, align 4
  %v0_3c92b = load i32, i32* @ebp, align 4
  %v1_3c92b = add i32 %v0_3c92b, -92
  %v2_3c92b = inttoptr i32 %v1_3c92b to i32*
  %v3_3c92b = load i32, i32* %v2_3c92b, align 4
  %v1_3c92e = add i32 %v0_3c92b, -52
  %v2_3c92e = inttoptr i32 %v1_3c92e to i32*
  %v3_3c92e = load i32, i32* %v2_3c92e, align 4
  %v2_3c931 = add i32 %v3_3c92b, 4
  %v3_3c931 = inttoptr i32 %v2_3c931 to i32*
  store i32 %v3_3c92e, i32* %v3_3c931, align 4
  %v0_3c934 = load i32, i32* @ebp, align 4
  %v1_3c934 = add i32 %v0_3c934, -40
  %v2_3c934 = inttoptr i32 %v1_3c934 to i32*
  %v3_3c934 = load i32, i32* %v2_3c934, align 4
  %v2_3c93e = mul i32 %v3_3c934, 20
  %v2_3c943 = add i32 %v0_3c934, -32
  %v3_3c943 = inttoptr i32 %v2_3c943 to i32*
  %v4_3c943 = load i32, i32* %v3_3c943, align 4
  %v5_3c943 = add i32 %v4_3c943, %v2_3c93e
  %v1_3c946 = add i32 %v0_3c934, -92
  %v2_3c946 = inttoptr i32 %v1_3c946 to i32*
  %v3_3c946 = load i32, i32* %v2_3c946, align 4
  %v2_3c949 = add i32 %v3_3c946, 8
  %v3_3c949 = inttoptr i32 %v2_3c949 to i32*
  store i32 %v5_3c943, i32* %v3_3c949, align 4
  %v0_3c94c = load i32, i32* %stack_var_-4, align 4
  %v5_3c94c = call i32 @function_3ca0c(i32 %v0_3c94c, i32 %v2_3c90e, i32 %v3_3c903, i32 %v0_3c8ad)
  ret i32 %v5_3c94c

; uselistorder directives
  uselistorder i32 %v2_3c90e, { 1, 0 }
  uselistorder i32 %v3_3c90b, { 1, 0, 2 }
  uselistorder i32 %v3_3c903, { 1, 0 }
  uselistorder i32 %v2_3c8ab, { 1, 0 }
  uselistorder i32 %v2_3c861, { 1, 0 }
  uselistorder i32 %v5_3c820, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_3ca0c, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @unknown_79e88, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_79ee4, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_5f284, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_79e28, { 1, 0 }
  uselistorder i32 -96, { 0, 1, 2, 5, 6, 9, 7, 3, 4, 8, 16, 17, 18, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22 }
  uselistorder i32 -100, { 0, 1, 2, 3, 4, 5, 11, 12, 6, 7, 8, 9, 10, 13, 14, 15 }
}

define i32 @function_3c952() local_unnamed_addr {
dec_label_pc_3c952:
  %eax.global-to-local = alloca i32, align 4
  %v0_3c952 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3c952
}

define i32 @function_3c969() local_unnamed_addr {
dec_label_pc_3c969:
  %eax.global-to-local = alloca i32, align 4
  %v0_3c969 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3c969
}

define i32 @function_3c98c() local_unnamed_addr {
dec_label_pc_3c98c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3c98c = load i32, i32* %eax.global-to-local, align 8
  %v11_3c98c = and i32 %v0_3c98c, -24
  store i32 %v11_3c98c, i32* @eax, align 8
  %v0_3c98e = call i32 @function_890001bb()
  store i32 %v0_3c98e, i32* %eax.global-to-local, align 8
  ret i32 %v0_3c98e
}

define x86_fp80 @function_3c998() local_unnamed_addr {
dec_label_pc_3c998:
  %st0.global-to-local = alloca x86_fp80, align 4
  %v3_3c999 = load double, double* bitcast (i32* @ecx to double*), align 8
  %v4_3c999 = fpext double %v3_3c999 to x86_fp80
  %v5_3c999 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_3c999 = fadd x86_fp80 %v4_3c999, %v5_3c999
  store x86_fp80 %v6_3c999, x86_fp80* %st0.global-to-local, align 4
  ret x86_fp80 %v6_3c999

; uselistorder directives
  uselistorder x86_fp80* %st0.global-to-local, { 1, 0 }
}

define i32 @function_3c9a7() local_unnamed_addr {
dec_label_pc_3c9a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_3c9a7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3c9a7
}

define i32 @function_3c9bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c9bc:
  %v0_3c9bd = load i32, i32* @eax, align 8
  %v11_3c9bd = and i32 %v0_3c9bd, -248
  %v0_3c9bf = load i32, i32* @ebx, align 4
  %v2_3c9c6 = call i32 @unknown_585a9(i32 %v11_3c9bd, i32 %v0_3c9bf)
  %v0_3c9cb = call i32 @function_3c9ee()
  ret i32 %v0_3c9cb

; uselistorder directives
  uselistorder i32 -248, { 0, 3, 4, 1, 2 }
}

define i32 @function_3c9cd() local_unnamed_addr {
dec_label_pc_3c9cd:
  %ebp.global-to-local = alloca i32, align 4
  %v0_3c9cd = load i32, i32* %ebp.global-to-local, align 4
  %v1_3c9cd = add i32 %v0_3c9cd, -92
  %v2_3c9cd = inttoptr i32 %v1_3c9cd to i32*
  %v3_3c9cd = load i32, i32* %v2_3c9cd, align 4
  %v1_3c9d3 = call i32 @unknown_5857c(i32 %v3_3c9cd)
  %v1_3c9dc = add i32 %v0_3c9cd, -52
  %v2_3c9dc = inttoptr i32 %v1_3c9dc to i32*
  %v3_3c9dc = load i32, i32* %v2_3c9dc, align 4
  %v1_3c9e3 = add i32 %v0_3c9cd, -32
  %v2_3c9e3 = inttoptr i32 %v1_3c9e3 to i32*
  %v3_3c9e3 = load i32, i32* %v2_3c9e3, align 4
  %v2_3c9e9 = call i32 @unknown_585a9(i32 %v3_3c9e3, i32 %v3_3c9dc)
  ret i32 %v2_3c9e9

; uselistorder directives
  uselistorder i32 %v0_3c9cd, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @unknown_585a9, { 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_5857c, { 7, 6, 5, 4, 3, 0, 2, 1 }
}

define i32 @function_3c9ee() local_unnamed_addr {
dec_label_pc_3c9ee:
  %v0_3c9ee = load i32, i32* @ebp, align 4
  %v1_3c9ee = add i32 %v0_3c9ee, -92
  %v2_3c9ee = inttoptr i32 %v1_3c9ee to i32*
  %v3_3c9ee = load i32, i32* %v2_3c9ee, align 4
  %v1_3c9f1 = add i32 %v0_3c9ee, -40
  %v2_3c9f1 = inttoptr i32 %v1_3c9f1 to i32*
  %v3_3c9f1 = load i32, i32* %v2_3c9f1, align 4
  %v1_3c9f8 = add i32 %v0_3c9ee, -32
  %v2_3c9f8 = inttoptr i32 %v1_3c9f8 to i32*
  %v3_3c9f8 = load i32, i32* %v2_3c9f8, align 4
  %v3_3ca02 = call i32 @unknown_5efac(i32 %v3_3c9ee, i32 %v3_3c9f8, i32 %v3_3c9f1)
  ret i32 %v3_3ca02

; uselistorder directives
  uselistorder i32 -92, { 23, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 16, 24, 17, 18, 25, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 28, 29, 30, 32, 31, 33, 34, 49, 50, 51, 26, 1, 52, 53, 54, 55 }
}

define i32 @function_3ca0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3ca0c:
  %v0_3ca0c = load i32, i32* @ebp, align 4
  %v1_3ca0c = add i32 %v0_3ca0c, -28
  %v2_3ca0c = inttoptr i32 %v1_3ca0c to i32*
  %v3_3ca0c = load i32, i32* %v2_3ca0c, align 4
  %v1_3ca0f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3ca0f = xor i32 %v1_3ca0f, %v3_3ca0c
  %v3_3ca0f = icmp eq i32 %v2_3ca0f, 0
  store i32 %v2_3ca0f, i32* @eax, align 8
  br i1 %v3_3ca0f, label %bb, label %dec_label_pc_3ca18

bb:                                               ; preds = %dec_label_pc_3ca0c
  %v1_3ca16 = call i32 @function_3ca1d()
  br label %dec_label_pc_3ca18

dec_label_pc_3ca18:                               ; preds = %bb, %dec_label_pc_3ca0c
  %v2_3ca16 = phi i32 [ %v1_3ca16, %bb ], [ %v2_3ca0f, %dec_label_pc_3ca0c ]
  ret i32 %v2_3ca16
}

define i32 @function_3ca1d() local_unnamed_addr {
dec_label_pc_3ca1d:
  %v0_3ca1d = load i32, i32* @ebp, align 4
  %v1_3ca23 = inttoptr i32 %v0_3ca1d to i32*
  %v2_3ca23 = load i32, i32* %v1_3ca23, align 4
  store i32 %v2_3ca23, i32* @ebp, align 4
  %v0_3ca24 = load i32, i32* @eax, align 8
  ret i32 %v0_3ca24
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ca26:
  %v0_3ca32 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3ca32
}

define i32 @function_3ca38(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ca38:
  %v0_3ca38 = load i32, i32* @eax, align 8
  %v1_3ca38 = load i32, i32* @ebp, align 4
  %v2_3ca38 = add i32 %v1_3ca38, -12
  %v3_3ca38 = inttoptr i32 %v2_3ca38 to i32*
  store i32 %v0_3ca38, i32* %v3_3ca38, align 4
  %v0_3ca3d = load i32, i32* @ebp, align 4
  %v1_3ca3d = add i32 %v0_3ca3d, -28
  %v2_3ca3d = inttoptr i32 %v1_3ca3d to i32*
  %v3_3ca3d = load i32, i32* %v2_3ca3d, align 4
  %v1_3ca43 = call i32 @unknown_7a5e8(i32 %v3_3ca3d)
  store i32 %v1_3ca43, i32* @eax, align 8
  %v0_3ca48 = load i32, i32* @ebp, align 4
  %v1_3ca48 = add i32 %v0_3ca48, -12
  %v2_3ca48 = inttoptr i32 %v1_3ca48 to i32*
  %v3_3ca48 = load i32, i32* %v2_3ca48, align 4
  %v1_3ca4b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @of, align 1
  %v3_3ca4b = icmp eq i32 %v1_3ca4b, %v3_3ca48
  br i1 %v3_3ca4b, label %bb, label %dec_label_pc_3ca54

bb:                                               ; preds = %dec_label_pc_3ca38
  %v1_3ca52 = call i32 @function_3ca59()
  br label %dec_label_pc_3ca54

dec_label_pc_3ca54:                               ; preds = %bb, %dec_label_pc_3ca38
  %v2_3ca52 = phi i32 [ %v1_3ca52, %bb ], [ %v1_3ca43, %dec_label_pc_3ca38 ]
  ret i32 %v2_3ca52
}

define i32 @function_3ca59() local_unnamed_addr {
dec_label_pc_3ca59:
  %v0_3ca5a = load i32, i32* @eax, align 8
  ret i32 %v0_3ca5a
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitIS9_EEiRT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ca5c:
  ret i32 %arg1
}

define i32 @function_3ca65(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ca65:
  %v0_3ca65 = load i32, i32* @eax, align 8
  %v1_3ca65 = load i32, i32* @ebp, align 4
  %v2_3ca65 = add i32 %v1_3ca65, -28
  %v3_3ca65 = inttoptr i32 %v2_3ca65 to i32*
  store i32 %v0_3ca65, i32* %v3_3ca65, align 4
  %v0_3ca68 = load i32, i32* @ebp, align 4
  %v1_3ca68 = add i32 %v0_3ca68, 12
  %v2_3ca68 = inttoptr i32 %v1_3ca68 to i32*
  %v3_3ca68 = load i32, i32* %v2_3ca68, align 4
  %v2_3ca6b = add i32 %v0_3ca68, -32
  %v3_3ca6b = inttoptr i32 %v2_3ca6b to i32*
  store i32 %v3_3ca68, i32* %v3_3ca6b, align 4
  %v0_3ca6e = load i32, i32* @ebp, align 4
  %v1_3ca6e = add i32 %v0_3ca6e, 16
  %v2_3ca6e = inttoptr i32 %v1_3ca6e to i32*
  %v3_3ca6e = load i32, i32* %v2_3ca6e, align 4
  %v2_3ca71 = add i32 %v0_3ca6e, -36
  %v3_3ca71 = inttoptr i32 %v2_3ca71 to i32*
  store i32 %v3_3ca6e, i32* %v3_3ca71, align 4
  %v0_3ca74 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3ca7a = load i32, i32* @ebp, align 4
  %v2_3ca7a = add i32 %v1_3ca7a, -12
  %v3_3ca7a = inttoptr i32 %v2_3ca7a to i32*
  store i32 %v0_3ca74, i32* %v3_3ca7a, align 4
  %v0_3ca7f = load i32, i32* @ebp, align 4
  %v1_3ca7f = add i32 %v0_3ca7f, -28
  %v2_3ca7f = inttoptr i32 %v1_3ca7f to i32*
  %v3_3ca7f = load i32, i32* %v2_3ca7f, align 4
  %v1_3ca82 = inttoptr i32 %v3_3ca7f to i32*
  %v2_3ca82 = load i32, i32* %v1_3ca82, align 4
  %v1_3ca84 = add i32 %v0_3ca7f, -32
  %v2_3ca84 = inttoptr i32 %v1_3ca84 to i32*
  %v3_3ca84 = load i32, i32* %v2_3ca84, align 4
  %v2_3ca8e = call i32 @unknown_66c8c(i32 %v2_3ca82, i32 %v3_3ca84)
  store i32 %v2_3ca8e, i32* @eax, align 8
  %v0_3ca93 = load i32, i32* @ebp, align 4
  %v1_3ca93 = add i32 %v0_3ca93, -12
  %v2_3ca93 = inttoptr i32 %v1_3ca93 to i32*
  %v3_3ca93 = load i32, i32* %v2_3ca93, align 4
  %v1_3ca96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3ca96 = icmp eq i32 %v1_3ca96, %v3_3ca93
  br i1 %v3_3ca96, label %bb, label %dec_label_pc_3ca9f

bb:                                               ; preds = %dec_label_pc_3ca65
  %v1_3ca9d = call i32 @function_3caa4()
  br label %dec_label_pc_3ca9f

dec_label_pc_3ca9f:                               ; preds = %bb, %dec_label_pc_3ca65
  %v2_3ca9d = phi i32 [ %v1_3ca9d, %bb ], [ %v2_3ca8e, %dec_label_pc_3ca65 ]
  ret i32 %v2_3ca9d
}

define i32 @function_3caa4() local_unnamed_addr {
dec_label_pc_3caa4:
  %v0_3caa5 = load i32, i32* @eax, align 8
  ret i32 %v0_3caa5
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE3getEv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3caa6:
  %v1_3cac3 = call i32 @unknown_7a698(i32 %arg1)
  store i32 %v1_3cac3, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3cad4

bb:                                               ; preds = %dec_label_pc_3caa6
  %v1_3cad2 = call i32 @function_3cad9()
  br label %dec_label_pc_3cad4

dec_label_pc_3cad4:                               ; preds = %bb, %dec_label_pc_3caa6
  %v2_3cad2 = phi i32 [ %v1_3cad2, %bb ], [ %v1_3cac3, %dec_label_pc_3caa6 ]
  ret i32 %v2_3cad2
}

define i32 @function_3cad9() local_unnamed_addr {
dec_label_pc_3cad9:
  %v0_3cada = load i32, i32* @eax, align 8
  ret i32 %v0_3cada
}

define i32 @_ZNK5boost7variantISsNS_17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS3_13Config_vectorISsEEEESaIS7_EEEENS1_IS2_INS3_10Value_implIS6_EESaISC_EEEEbxdNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E17convert_copy_into14internal_visitISE_EEiRT_i() local_unnamed_addr {
dec_label_pc_3cadc:
  %eax.global-to-local = alloca i32, align 4
  %v5_3cadc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3cadc
}

define i32 @function_3cade(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cade:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_3cae1 = load i32, i32* @ecx, align 8
  %v0_3cae9 = load i32, i32* @ebp, align 4
  %v0_3caea = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3caea = or i32 %v0_3caea, 137
  store i32 %v11_3caea, i32* %eax.global-to-local, align 8
  %v1_3caed = add i32 %v4_3cae1, -1
  store i32 %v1_3caed, i32* @ecx, align 8
  %v1_3caef = add i32 %v0_3cae9, 3
  store i32 %v1_3caef, i32* @ebp, align 4
  %v1_3caf0 = add i32 %v4_3cae1, -1587159996
  %v2_3caf0 = inttoptr i32 %v1_3caf0 to i8*
  %v3_3caf0 = load i8, i8* %v2_3caf0, align 1
  %v5_3caf0 = trunc i32 %v1_3caed to i8
  %v8_3caf0 = add i8 %v3_3caf0, %v5_3caf0
  %v28_3caf0 = icmp ult i8 %v8_3caf0, %v3_3caf0
  store i1 %v28_3caf0, i1* %cf.global-to-local, align 1
  store i8 %v8_3caf0, i8* %v2_3caf0, align 1
  %v0_3caf6 = load i32, i32* %eax.global-to-local, align 8
  %v1_3caf6 = trunc i32 %v0_3caf6 to i8
  %v2_3caf6 = load i1, i1* %cf.global-to-local, align 1
  %v3_3caf6 = zext i1 %v2_3caf6 to i8
  %v4_3caf6 = add i8 %v3_3caf6, %v1_3caf6
  %v19_3caf6 = icmp ule i8 %v4_3caf6, %v1_3caf6
  %v21_3caf6 = icmp eq i1 %v2_3caf6, %v19_3caf6
  store i1 %v21_3caf6, i1* %cf.global-to-local, align 1
  %v22_3caf6 = zext i8 %v4_3caf6 to i32
  %v24_3caf6 = and i32 %v0_3caf6, -256
  %v25_3caf6 = or i32 %v22_3caf6, %v24_3caf6
  store i32 %v25_3caf6, i32* %eax.global-to-local, align 8
  %v1_3caf8 = inttoptr i32 %v25_3caf6 to i8*
  %v2_3caf8 = load i8, i8* %v1_3caf8, align 1
  %v5_3caf8 = add i8 %v2_3caf8, %v4_3caf6
  store i8 %v5_3caf8, i8* %v1_3caf8, align 1
  %v0_3cafa = load i32, i32* %eax.global-to-local, align 8
  %v1_3cafa = load i32, i32* @ebp, align 4
  %v2_3cafa = add i32 %v1_3cafa, -12
  %v3_3cafa = inttoptr i32 %v2_3cafa to i32*
  store i32 %v0_3cafa, i32* %v3_3cafa, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* @of, align 1
  store i1 true, i1* @zf, align 1
  store i1 false, i1* @sf, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3caff = load i32, i32* @ebp, align 4
  %v1_3caff = add i32 %v0_3caff, -28
  %v2_3caff = inttoptr i32 %v1_3caff to i32*
  %v3_3caff = load i32, i32* %v2_3caff, align 4
  store i32 %v3_3caff, i32* %eax.global-to-local, align 8
  %v1_3cb02 = inttoptr i32 %v3_3caff to i32*
  %v2_3cb02 = load i32, i32* %v1_3cb02, align 4
  store i32 %v2_3cb02, i32* %eax.global-to-local, align 8
  %v1_3cb04 = add i32 %v0_3caff, -32
  %v2_3cb04 = inttoptr i32 %v1_3cb04 to i32*
  %v3_3cb04 = load i32, i32* %v2_3cb04, align 4
  %v2_3cb0e = call i32 @unknown_6889c(i32 %v2_3cb02, i32 %v3_3cb04)
  store i32 %v2_3cb0e, i32* %eax.global-to-local, align 8
  %v0_3cb13 = load i32, i32* @ebp, align 4
  %v1_3cb13 = add i32 %v0_3cb13, -12
  %v2_3cb13 = inttoptr i32 %v1_3cb13 to i32*
  %v3_3cb13 = load i32, i32* %v2_3cb13, align 4
  store i32 %v3_3cb13, i32* @edx, align 4
  ret i32 %v2_3cb0e

; uselistorder directives
  uselistorder i8 %v4_3caf6, { 0, 2, 1 }
  uselistorder i8 %v1_3caf6, { 1, 0 }
  uselistorder i8 %v3_3caf0, { 1, 0 }
  uselistorder i1* @sf, { 3, 0, 1, 2 }
}

define i32 @function_3cb1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3cb1c:
  %v0_3cb1c = load i32, i32* @ebp, align 4
  %v1_3cb1c = load i32, i32* @eax, align 8
  %v3_3cb1c = add i32 %v0_3cb1c, -24
  %v4_3cb1c = add i32 %v3_3cb1c, %v1_3cb1c
  %v5_3cb1c = inttoptr i32 %v4_3cb1c to i8*
  %v6_3cb1c = load i8, i8* %v5_3cb1c, align 1
  %v7_3cb1c = load i32, i32* @edx, align 4
  %v8_3cb1c = udiv i32 %v7_3cb1c, 256
  %v9_3cb1c = trunc i32 %v8_3cb1c to i8
  %v10_3cb1c = add i8 %v9_3cb1c, %v6_3cb1c
  store i8 %v10_3cb1c, i8* %v5_3cb1c, align 1
  %v31_3cb1c = load i32, i32* @eax, align 8
  ret i32 %v31_3cb1c
}

define i32 @function_3cb23() local_unnamed_addr {
dec_label_pc_3cb23:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3cb23 = load i32, i32* %ecx.global-to-local, align 8
  %v1_3cb23 = add i32 %v0_3cb23, -1
  store i32 %v1_3cb23, i32* %ecx.global-to-local, align 8
  %v0_3cb25 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3cb25
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EEaSERKS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cb26:
  ret i32 %arg1
}

define i32 @function_3cb36(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cb36:
  %eax.global-to-local = alloca i32, align 4
  %v0_3cb36 = load i32, i32* @ebp, align 4
  %v0_3cb37 = load i32, i32* @eax, align 8
  %v1_3cb39 = add i32 %v0_3cb36, 2
  store i32 %v1_3cb39, i32* @ebp, align 4
  %v1_3cb3a = and i32 %v0_3cb37, -256
  %v2_3cb3a = or i32 %v1_3cb3a, 101
  store i32 %v2_3cb3a, i32* %eax.global-to-local, align 8
  %v0_3cb3c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3cb41 = add i32 %v0_3cb36, -26
  %v3_3cb41 = inttoptr i32 %v2_3cb41 to i32*
  store i32 %v0_3cb3c, i32* %v3_3cb41, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3cb46 = load i32, i32* @ebp, align 4
  %v1_3cb46 = add i32 %v0_3cb46, -80
  %v2_3cb46 = inttoptr i32 %v1_3cb46 to i32*
  %v3_3cb46 = load i32, i32* %v2_3cb46, align 4
  store i32 %v3_3cb46, i32* %eax.global-to-local, align 8
  %v3_3cb52 = load i32, i32* %v2_3cb46, align 4
  store i32 %v3_3cb52, i32* %eax.global-to-local, align 8
  %v1_3cb58 = call i32 @unknown_5aadc(i32 %v3_3cb52)
  store i32 %v1_3cb58, i32* %eax.global-to-local, align 8
  %v1_3cb5d = load i32, i32* @ebp, align 4
  %v2_3cb5d = add i32 %v1_3cb5d, -36
  %v3_3cb5d = inttoptr i32 %v2_3cb5d to i32*
  store i32 %v1_3cb58, i32* %v3_3cb5d, align 4
  %v0_3cb60 = load i32, i32* @ebp, align 4
  %v1_3cb60 = add i32 %v0_3cb60, -76
  %v2_3cb60 = inttoptr i32 %v1_3cb60 to i32*
  %v3_3cb60 = load i32, i32* %v2_3cb60, align 4
  store i32 %v3_3cb60, i32* %eax.global-to-local, align 8
  %v1_3cb66 = call i32 @unknown_7a748(i32 %v3_3cb60)
  store i32 %v1_3cb66, i32* %eax.global-to-local, align 8
  %v1_3cb6b = load i32, i32* @ebp, align 4
  %v2_3cb6b = add i32 %v1_3cb6b, -36
  %v3_3cb6b = inttoptr i32 %v2_3cb6b to i32*
  %v4_3cb6b = load i32, i32* %v3_3cb6b, align 4
  %v10_3cb6b = icmp ult i32 %v1_3cb66, %v4_3cb6b
  %v1_3cb6e = zext i1 %v10_3cb6b to i32
  %v3_3cb6e = and i32 %v1_3cb66, -256
  %v4_3cb6e = or i32 %v1_3cb6e, %v3_3cb6e
  store i32 %v4_3cb6e, i32* %eax.global-to-local, align 8
  %v5_3cb71 = icmp eq i1 %v10_3cb6b, false
  br i1 %v5_3cb71, label %dec_label_pc_3cc49, label %dec_label_pc_3cb79

dec_label_pc_3cb79:                               ; preds = %dec_label_pc_3cb36
  %v1_3cb79 = add i32 %v1_3cb6b, -60
  store i32 %v1_3cb79, i32* %eax.global-to-local, align 8
  %v1_3cb7c = add i32 %v1_3cb6b, -80
  %v2_3cb7c = inttoptr i32 %v1_3cb7c to i32*
  %v3_3cb7c = load i32, i32* %v2_3cb7c, align 4
  %v2_3cb86 = call i32 @unknown_5ac44(i32 %v1_3cb79, i32 %v3_3cb7c)
  %v0_3cb8e = load i32, i32* @ebp, align 4
  %v1_3cb8e = add i32 %v0_3cb8e, -64
  store i32 %v1_3cb8e, i32* %eax.global-to-local, align 8
  %v1_3cb91 = add i32 %v0_3cb8e, -80
  %v2_3cb91 = inttoptr i32 %v1_3cb91 to i32*
  %v3_3cb91 = load i32, i32* %v2_3cb91, align 4
  %v2_3cb9b = call i32 @unknown_5abf4(i32 %v1_3cb8e, i32 %v3_3cb91)
  store i32 %v2_3cb9b, i32* %eax.global-to-local, align 8
  %v0_3cba3 = load i32, i32* @ebp, align 4
  %v1_3cba3 = add i32 %v0_3cba3, -60
  %v2_3cba3 = inttoptr i32 %v1_3cba3 to i32*
  %v3_3cba3 = load i32, i32* %v2_3cba3, align 4
  store i32 %v3_3cba3, i32* %eax.global-to-local, align 8
  %v1_3cbaa = add i32 %v0_3cba3, -64
  %v2_3cbaa = inttoptr i32 %v1_3cbaa to i32*
  %v3_3cbaa = load i32, i32* %v2_3cbaa, align 4
  store i32 %v3_3cbaa, i32* %eax.global-to-local, align 8
  %v1_3cbb1 = add i32 %v0_3cba3, -36
  %v2_3cbb1 = inttoptr i32 %v1_3cbb1 to i32*
  %v3_3cbb1 = load i32, i32* %v2_3cbb1, align 4
  store i32 %v3_3cbb1, i32* %eax.global-to-local, align 8
  %v1_3cbb8 = add i32 %v0_3cba3, -76
  %v2_3cbb8 = inttoptr i32 %v1_3cbb8 to i32*
  %v3_3cbb8 = load i32, i32* %v2_3cbb8, align 4
  store i32 %v3_3cbb8, i32* %eax.global-to-local, align 8
  %v4_3cbbe = call i32 @unknown_7a78e(i32 %v3_3cbb8, i32 %v3_3cbb1, i32 %v3_3cbaa, i32 %v3_3cba3)
  store i32 %v4_3cbbe, i32* %eax.global-to-local, align 8
  %v1_3cbc3 = load i32, i32* @ebp, align 4
  %v2_3cbc3 = add i32 %v1_3cbc3, -32
  %v3_3cbc3 = inttoptr i32 %v2_3cbc3 to i32*
  store i32 %v4_3cbbe, i32* %v3_3cbc3, align 4
  %v0_3cbc6 = load i32, i32* @ebp, align 4
  %v1_3cbc6 = add i32 %v0_3cbc6, -76
  %v2_3cbc6 = inttoptr i32 %v1_3cbc6 to i32*
  %v3_3cbc6 = load i32, i32* %v2_3cbc6, align 4
  store i32 %v3_3cbc6, i32* %eax.global-to-local, align 8
  %v1_3cbcc = call i32 @unknown_5a340(i32 %v3_3cbc6)
  store i32 %v1_3cbcc, i32* %eax.global-to-local, align 8
  %v0_3cbd1 = load i32, i32* @ebp, align 4
  %v1_3cbd1 = add i32 %v0_3cbd1, -76
  %v2_3cbd1 = inttoptr i32 %v1_3cbd1 to i32*
  %v3_3cbd1 = load i32, i32* %v2_3cbd1, align 4
  %v1_3cbd4 = add i32 %v3_3cbd1, 4
  %v2_3cbd4 = inttoptr i32 %v1_3cbd4 to i32*
  %v3_3cbd4 = load i32, i32* %v2_3cbd4, align 4
  %v1_3cbda = inttoptr i32 %v3_3cbd1 to i32*
  %v2_3cbda = load i32, i32* %v1_3cbda, align 4
  %v3_3cbe7 = call i32 @unknown_5a36d(i32 %v2_3cbda, i32 %v3_3cbd4, i32 %v1_3cbcc)
  store i32 %v3_3cbe7, i32* %eax.global-to-local, align 8
  %v0_3cbec = load i32, i32* @ebp, align 4
  %v1_3cbec = add i32 %v0_3cbec, -76
  %v2_3cbec = inttoptr i32 %v1_3cbec to i32*
  %v3_3cbec = load i32, i32* %v2_3cbec, align 4
  store i32 %v3_3cbec, i32* %eax.global-to-local, align 8
  %v1_3cbef = add i32 %v3_3cbec, 8
  %v2_3cbef = inttoptr i32 %v1_3cbef to i32*
  %v3_3cbef = load i32, i32* %v2_3cbef, align 4
  store i32 %v3_3cbef, i32* %eax.global-to-local, align 8
  %v3_3cbf4 = load i32, i32* %v2_3cbec, align 4
  store i32 %v3_3cbf4, i32* %eax.global-to-local, align 8
  %v1_3cbf7 = inttoptr i32 %v3_3cbf4 to i32*
  %v2_3cbf7 = load i32, i32* %v1_3cbf7, align 4
  %v2_3cbfb = sub i32 %v3_3cbef, %v2_3cbf7
  %v2_3cbff = sdiv i32 %v2_3cbfb, 8
  %v3_3cc02 = mul i32 %v2_3cbff, -1431655765
  store i32 %v3_3cc02, i32* %eax.global-to-local, align 8
  %v3_3cc0a = load i32, i32* %v2_3cbec, align 4
  store i32 %v3_3cc0a, i32* %eax.global-to-local, align 8
  %v1_3cc0d = inttoptr i32 %v3_3cc0a to i32*
  %v2_3cc0d = load i32, i32* %v1_3cc0d, align 4
  %v3_3cc0f = load i32, i32* %v2_3cbec, align 4
  store i32 %v3_3cc0f, i32* %eax.global-to-local, align 8
  %v3_3cc1d = call i32 @unknown_613a2(i32 %v3_3cc0f, i32 %v2_3cc0d, i32 %v3_3cc02)
  store i32 %v3_3cc1d, i32* %eax.global-to-local, align 8
  %v0_3cc22 = load i32, i32* @ebp, align 4
  %v1_3cc22 = add i32 %v0_3cc22, -76
  %v2_3cc22 = inttoptr i32 %v1_3cc22 to i32*
  %v3_3cc22 = load i32, i32* %v2_3cc22, align 4
  store i32 %v3_3cc22, i32* %eax.global-to-local, align 8
  %v1_3cc25 = add i32 %v0_3cc22, -32
  %v2_3cc25 = inttoptr i32 %v1_3cc25 to i32*
  %v3_3cc25 = load i32, i32* %v2_3cc25, align 4
  %v2_3cc28 = inttoptr i32 %v3_3cc22 to i32*
  store i32 %v3_3cc25, i32* %v2_3cc28, align 4
  %v0_3cc2a = load i32, i32* @ebp, align 4
  %v1_3cc2a = add i32 %v0_3cc2a, -76
  %v2_3cc2a = inttoptr i32 %v1_3cc2a to i32*
  %v3_3cc2a = load i32, i32* %v2_3cc2a, align 4
  store i32 %v3_3cc2a, i32* %eax.global-to-local, align 8
  %v1_3cc2d = inttoptr i32 %v3_3cc2a to i32*
  %v2_3cc2d = load i32, i32* %v1_3cc2d, align 4
  %v1_3cc2f = add i32 %v0_3cc2a, -36
  %v2_3cc2f = inttoptr i32 %v1_3cc2f to i32*
  %v3_3cc2f = load i32, i32* %v2_3cc2f, align 4
  %v2_3cc38 = mul i32 %v3_3cc2f, 24
  store i32 %v2_3cc38, i32* %eax.global-to-local, align 8
  %v3_3cc3b = add i32 %v2_3cc38, %v2_3cc2d
  %v3_3cc3e = load i32, i32* %v2_3cc2a, align 4
  store i32 %v3_3cc3e, i32* %eax.global-to-local, align 8
  %v2_3cc41 = add i32 %v3_3cc3e, 8
  %v3_3cc41 = inttoptr i32 %v2_3cc41 to i32*
  store i32 %v3_3cc3b, i32* %v3_3cc41, align 4
  %v0_3cc44 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3cc44

dec_label_pc_3cc49:                               ; preds = %dec_label_pc_3cb36
  %v1_3cc49 = add i32 %v1_3cb6b, -76
  %v2_3cc49 = inttoptr i32 %v1_3cc49 to i32*
  %v3_3cc49 = load i32, i32* %v2_3cc49, align 4
  store i32 %v3_3cc49, i32* %eax.global-to-local, align 8
  %v1_3cc4f = call i32 @unknown_5aadc(i32 %v3_3cc49)
  store i32 %v1_3cc4f, i32* %eax.global-to-local, align 8
  %v1_3cc54 = load i32, i32* @ebp, align 4
  %v2_3cc54 = add i32 %v1_3cc54, -36
  %v3_3cc54 = inttoptr i32 %v2_3cc54 to i32*
  %v4_3cc54 = load i32, i32* %v3_3cc54, align 4
  %v10_3cc54 = icmp ult i32 %v1_3cc4f, %v4_3cc54
  %v1_3cc57 = icmp eq i1 %v10_3cc54, false
  %v2_3cc57 = zext i1 %v1_3cc57 to i32
  %v4_3cc57 = and i32 %v1_3cc4f, -256
  %v5_3cc57 = or i32 %v2_3cc57, %v4_3cc57
  store i32 %v5_3cc57, i32* %eax.global-to-local, align 8
  %v5_3cc5a = icmp eq i1 %v1_3cc57, false
  br i1 %v5_3cc5a, label %bb, label %dec_label_pc_3cc62

bb:                                               ; preds = %dec_label_pc_3cc49
  %v1_3cc5c = call i32 @function_3cd01()
  store i32 %v1_3cc5c, i32* %eax.global-to-local, align 8
  %v0_3cc62.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3cc62

dec_label_pc_3cc62:                               ; preds = %bb, %dec_label_pc_3cc49
  %v0_3cc62 = phi i32 [ %v0_3cc62.pre, %bb ], [ %v1_3cc54, %dec_label_pc_3cc49 ]
  %v1_3cc62 = add i32 %v0_3cc62, -76
  %v2_3cc62 = inttoptr i32 %v1_3cc62 to i32*
  %v3_3cc62 = load i32, i32* %v2_3cc62, align 4
  store i32 %v3_3cc62, i32* %eax.global-to-local, align 8
  %v1_3cc68 = call i32 @unknown_5a340(i32 %v3_3cc62)
  %v0_3cc6f = load i32, i32* @ebp, align 4
  %v1_3cc6f = add i32 %v0_3cc6f, -40
  store i32 %v1_3cc6f, i32* %eax.global-to-local, align 8
  %v1_3cc72 = add i32 %v0_3cc6f, -76
  %v2_3cc72 = inttoptr i32 %v1_3cc72 to i32*
  %v3_3cc72 = load i32, i32* %v2_3cc72, align 4
  %v2_3cc7c = call i32 @unknown_5a824(i32 %v1_3cc6f, i32 %v3_3cc72)
  %v0_3cc84 = load i32, i32* @ebp, align 4
  %v1_3cc84 = add i32 %v0_3cc84, -48
  store i32 %v1_3cc84, i32* %eax.global-to-local, align 8
  %v1_3cc87 = add i32 %v0_3cc84, -76
  %v2_3cc87 = inttoptr i32 %v1_3cc87 to i32*
  %v3_3cc87 = load i32, i32* %v2_3cc87, align 4
  %v2_3cc91 = call i32 @unknown_61682(i32 %v1_3cc84, i32 %v3_3cc87)
  store i32 %v2_3cc91, i32* %eax.global-to-local, align 8
  ret i32 %v2_3cc91

; uselistorder directives
  uselistorder i32 %v0_3cba3, { 1, 0, 2, 3 }
  uselistorder i1 %v10_3cb6b, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32 101, { 1, 0 }
}

define i32 @function_3cc96(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cc96:
  %v0_3cc99 = load i32, i32* @ebp, align 4
  %v1_3cc99 = add i32 %v0_3cc99, -52
  ret i32 %v1_3cc99
}

define i32 @function_3cca2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3cca2:
  %v2_3cca6 = call i32 @unknown_5ac44(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  %v0_3ccae = load i32, i32* @ebp, align 4
  %v1_3ccae = add i32 %v0_3ccae, -56
  %v1_3ccb1 = add i32 %v0_3ccae, -80
  %v2_3ccb1 = inttoptr i32 %v1_3ccb1 to i32*
  %v3_3ccb1 = load i32, i32* %v2_3ccb1, align 4
  %v2_3ccbb = call i32 @unknown_5abf4(i32 %v1_3ccae, i32 %v3_3ccb1)
  %v0_3ccc3 = load i32, i32* @ebp, align 4
  %v1_3ccc3 = add i32 %v0_3ccc3, -44
  %v1_3ccc6 = add i32 %v0_3ccc3, -48
  %v2_3ccc6 = inttoptr i32 %v1_3ccc6 to i32*
  %v3_3ccc6 = load i32, i32* %v2_3ccc6, align 4
  %v1_3cccd = add i32 %v0_3ccc3, -52
  %v2_3cccd = inttoptr i32 %v1_3cccd to i32*
  %v3_3cccd = load i32, i32* %v2_3cccd, align 4
  %v1_3ccd4 = add i32 %v0_3ccc3, -56
  %v2_3ccd4 = inttoptr i32 %v1_3ccd4 to i32*
  %v3_3ccd4 = load i32, i32* %v2_3ccd4, align 4
  %v4_3ccde = call i32 @unknown_7a848(i32 %v1_3ccc3, i32 %v3_3ccd4, i32 %v3_3cccd, i32 %v3_3ccc6)
  %v0_3cce6 = load i32, i32* @ebx, align 4
  %v0_3ccea = load i32, i32* @ebp, align 4
  %v1_3ccea = add i32 %v0_3ccea, -40
  %v2_3ccea = inttoptr i32 %v1_3ccea to i32*
  %v3_3ccea = load i32, i32* %v2_3ccea, align 4
  %v1_3ccf1 = add i32 %v0_3ccea, -44
  %v2_3ccf1 = inttoptr i32 %v1_3ccf1 to i32*
  %v3_3ccf1 = load i32, i32* %v2_3ccf1, align 4
  %v3_3ccf7 = call i32 @unknown_7a8d6(i32 %v3_3ccf1, i32 %v3_3ccea, i32 %v0_3cce6)
  ret i32 %v3_3ccf7

; uselistorder directives
  uselistorder i32 %v0_3ccc3, { 1, 0, 2, 3 }
}

define i32 @function_3cd01() local_unnamed_addr {
dec_label_pc_3cd01:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3cd01 = load i32, i32* @ebp, align 4
  %v1_3cd01 = add i32 %v0_3cd01, -76
  %v2_3cd01 = inttoptr i32 %v1_3cd01 to i32*
  %v3_3cd01 = load i32, i32* %v2_3cd01, align 4
  %v1_3cd04 = inttoptr i32 %v3_3cd01 to i32*
  %v2_3cd04 = load i32, i32* %v1_3cd04, align 4
  store i32 %v2_3cd04, i32* %ebx.global-to-local, align 4
  %v1_3cd06 = add i32 %v0_3cd01, -80
  %v2_3cd06 = inttoptr i32 %v1_3cd06 to i32*
  %v3_3cd06 = load i32, i32* %v2_3cd06, align 4
  %v1_3cd09 = inttoptr i32 %v3_3cd06 to i32*
  %v2_3cd09 = load i32, i32* %v1_3cd09, align 4
  %v3_3cd0b = load i32, i32* %v2_3cd01, align 4
  %v1_3cd11 = call i32 @unknown_5aadc(i32 %v3_3cd0b)
  %v2_3cd1e = mul i32 %v1_3cd11, 24
  %v3_3cd21 = add i32 %v2_3cd09, %v2_3cd1e
  %v0_3cd24 = load i32, i32* @ebp, align 4
  %v1_3cd24 = add i32 %v0_3cd24, -80
  %v2_3cd24 = inttoptr i32 %v1_3cd24 to i32*
  %v3_3cd24 = load i32, i32* %v2_3cd24, align 4
  %v1_3cd27 = inttoptr i32 %v3_3cd24 to i32*
  %v2_3cd27 = load i32, i32* %v1_3cd27, align 4
  %v0_3cd29 = load i32, i32* %ebx.global-to-local, align 4
  %v3_3cd34 = call i32 @unknown_7a91e(i32 %v2_3cd27, i32 %v3_3cd21, i32 %v0_3cd29)
  %v0_3cd39 = load i32, i32* @ebp, align 4
  %v1_3cd39 = add i32 %v0_3cd39, -76
  %v2_3cd39 = inttoptr i32 %v1_3cd39 to i32*
  %v3_3cd39 = load i32, i32* %v2_3cd39, align 4
  %v1_3cd3f = call i32 @unknown_5a340(i32 %v3_3cd39)
  store i32 %v1_3cd3f, i32* %ebx.global-to-local, align 4
  ret i32 %v1_3cd3f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5a340, { 2, 1, 0 }
}

define i32 @function_3cd48(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cd48:
  %v0_3cd48 = load i32, i32* @eax, align 8
  %v1_3cd48 = and i32 %v0_3cd48, -65281
  %v2_3cd48 = or i32 %v1_3cd48, ptrtoint ([785 x i8]* @global_var_8b00.2918 to i32)
  ret i32 %v2_3cd48
}

define i32 @function_3cd4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cd4e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3cd4e = load i32, i32* @eax, align 8
  %v1_3cd4e = and i32 %v0_3cd4e, -256
  %v2_3cd4e = or i32 %v1_3cd4e, 139
  store i32 %v2_3cd4e, i32* %eax.global-to-local, align 8
  %v0_3cd50 = load i1, i1* @of, align 1
  br i1 %v0_3cd50, label %dec_label_pc_3cd56, label %dec_label_pc_3cd52

dec_label_pc_3cd52:                               ; preds = %dec_label_pc_3cd4e
  %v0_3cd52 = load i32, i32* @ebp, align 4
  %v1_3cd52 = add i32 %v0_3cd52, -80
  %v2_3cd52 = inttoptr i32 %v1_3cd52 to i32*
  %v3_3cd52 = load i32, i32* %v2_3cd52, align 4
  store i32 %v3_3cd52, i32* %eax.global-to-local, align 8
  ret i32 %v3_3cd52

dec_label_pc_3cd56:                               ; preds = %dec_label_pc_3cd4e
  %v0_3cd56 = load i32, i32* @ecx, align 8
  %v1_3cd56 = add i32 %v0_3cd56, 1166781509
  %v2_3cd56 = inttoptr i32 %v1_3cd56 to i8*
  %v3_3cd56 = load i8, i8* %v2_3cd56, align 1
  %v5_3cd56 = trunc i32 %v0_3cd56 to i8
  %v6_3cd56 = add i8 %v3_3cd56, %v5_3cd56
  store i8 %v6_3cd56, i8* %v2_3cd56, align 1
  %v0_3cd5c = load i32, i32* %eax.global-to-local, align 8
  %v1_3cd5c = and i32 %v0_3cd5c, -65281
  %v2_3cd5c = or i32 %v1_3cd5c, ptrtoint ([31 x i8]* @global_var_8900.2919 to i32)
  %v2_3cd5e = add i32 %v2_3cd5c, 36
  %v16_3cd5e = and i32 %v2_3cd5e, 255
  %v18_3cd5e = and i32 %v2_3cd5c, -256
  %v19_3cd5e = or i32 %v16_3cd5e, %v18_3cd5e
  store i32 %v19_3cd5e, i32* %eax.global-to-local, align 8
  %v1_3cd60 = call i32 @unknown_5aadc(i32 ptrtoint (i32* @2 to i32))
  %v2_3cd6d = mul i32 %v1_3cd60, 24
  store i32 %v2_3cd6d, i32* %eax.global-to-local, align 8
  %v1_3cd70 = load i32, i32* @ebp, align 4
  %v2_3cd70 = add i32 %v1_3cd70, -84
  %v3_3cd70 = inttoptr i32 %v2_3cd70 to i32*
  %v4_3cd70 = load i32, i32* %v3_3cd70, align 4
  %v5_3cd70 = add i32 %v4_3cd70, %v2_3cd6d
  store i32 %v5_3cd70, i32* %eax.global-to-local, align 8
  %v0_3cd73 = load i32, i32* @ebx, align 4
  %v0_3cd77 = load i32, i32* @edi, align 4
  %v0_3cd7b = load i32, i32* @esi, align 4
  %v4_3cd82 = call i32 @unknown_66c2e(i32 %v5_3cd70, i32 %v0_3cd7b, i32 %v0_3cd77, i32 %v0_3cd73)
  store i32 %v4_3cd82, i32* %eax.global-to-local, align 8
  %v0_3cd87 = load i32, i32* @ebp, align 4
  %v1_3cd87 = add i32 %v0_3cd87, -76
  %v2_3cd87 = inttoptr i32 %v1_3cd87 to i32*
  %v3_3cd87 = load i32, i32* %v2_3cd87, align 4
  store i32 %v3_3cd87, i32* %eax.global-to-local, align 8
  %v1_3cd8a = inttoptr i32 %v3_3cd87 to i32*
  %v2_3cd8a = load i32, i32* %v1_3cd8a, align 4
  %v1_3cd8c = add i32 %v0_3cd87, -36
  %v2_3cd8c = inttoptr i32 %v1_3cd8c to i32*
  %v3_3cd8c = load i32, i32* %v2_3cd8c, align 4
  %v2_3cd95 = mul i32 %v3_3cd8c, 24
  store i32 %v2_3cd95, i32* %eax.global-to-local, align 8
  %v3_3cd98 = add i32 %v2_3cd95, %v2_3cd8a
  %v3_3cd9b = load i32, i32* %v2_3cd87, align 4
  store i32 %v3_3cd9b, i32* %eax.global-to-local, align 8
  %v2_3cd9e = add i32 %v3_3cd9b, 4
  %v3_3cd9e = inttoptr i32 %v2_3cd9e to i32*
  store i32 %v3_3cd98, i32* %v3_3cd9e, align 4
  %v0_3cda1 = load i32, i32* @ebp, align 4
  %v1_3cda1 = add i32 %v0_3cda1, -76
  %v2_3cda1 = inttoptr i32 %v1_3cda1 to i32*
  %v3_3cda1 = load i32, i32* %v2_3cda1, align 4
  store i32 %v3_3cda1, i32* @eax, align 8
  %v1_3cda4 = add i32 %v0_3cda1, -28
  %v2_3cda4 = inttoptr i32 %v1_3cda4 to i32*
  %v3_3cda4 = load i32, i32* %v2_3cda4, align 4
  %v1_3cda7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3cda7 = icmp eq i32 %v1_3cda7, %v3_3cda4
  br i1 %v3_3cda7, label %bb, label %dec_label_pc_3cdb0

bb:                                               ; preds = %dec_label_pc_3cd56
  %v1_3cdae = call i32 @function_3cdb5()
  store i32 %v1_3cdae, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3cdb0

dec_label_pc_3cdb0:                               ; preds = %bb, %dec_label_pc_3cd56
  %v4_3cdae = phi i32 [ %v1_3cdae, %bb ], [ %v3_3cda1, %dec_label_pc_3cd56 ]
  ret i32 %v4_3cdae

; uselistorder directives
  uselistorder i32 %v2_3cd5c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i32 (i32)* @unknown_5aadc, { 0, 3, 2, 1 }
  uselistorder i1* @of, { 6, 4, 5, 1, 2, 0, 7, 3 }
}

define i32 @function_3cdb5() local_unnamed_addr {
dec_label_pc_3cdb5:
  %v0_3cdb5 = load i32, i32* @ebp, align 4
  %v1_3cdb5 = add i32 %v0_3cdb5, -12
  %v1_3cdb8 = inttoptr i32 %v1_3cdb5 to i32*
  %v2_3cdb8 = load i32, i32* %v1_3cdb8, align 4
  store i32 %v2_3cdb8, i32* @ebx, align 4
  %v3_3cdb8 = add i32 %v0_3cdb5, -8
  %v1_3cdb9 = inttoptr i32 %v3_3cdb8 to i32*
  %v2_3cdb9 = load i32, i32* %v1_3cdb9, align 4
  store i32 %v2_3cdb9, i32* @esi, align 4
  %v3_3cdb9 = add i32 %v0_3cdb5, -4
  %v1_3cdba = inttoptr i32 %v3_3cdb9 to i32*
  %v2_3cdba = load i32, i32* %v1_3cdba, align 4
  store i32 %v2_3cdba, i32* @edi, align 4
  %v1_3cdbb = inttoptr i32 %v0_3cdb5 to i32*
  %v2_3cdbb = load i32, i32* %v1_3cdbb, align 4
  store i32 %v2_3cdbb, i32* @ebp, align 4
  %v0_3cdbc = load i32, i32* @eax, align 8
  ret i32 %v0_3cdbc

; uselistorder directives
  uselistorder i32 -4, { 3, 7, 4, 0, 1, 2, 9, 8, 6, 5 }
  uselistorder i32 -8, { 6, 0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 4, 5, 15, 27, 16, 28, 29, 30, 26, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1 }
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEaSERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3cdbe:
  %stack_var_-64 = alloca i32, align 4
  %v1_3cdf0 = call i32 @unknown_542ca(i32 %arg2)
  %v1_3cdfe = call i32 @unknown_7ac1c(i32 %arg1)
  %v10_3ce03 = icmp ult i32 %v1_3cdfe, %v1_3cdf0
  %v5_3ce09 = icmp eq i1 %v10_3ce03, false
  br i1 %v5_3ce09, label %bb, label %dec_label_pc_3ce11

bb:                                               ; preds = %dec_label_pc_3cdbe
  %v1_3ce0b = call i32 @function_3cee2()
  br label %dec_label_pc_3ce11

dec_label_pc_3ce11:                               ; preds = %bb, %dec_label_pc_3cdbe
  %v2_3ce11 = ptrtoint i32* %stack_var_-64 to i32
  ret i32 %v2_3ce11
}

define i32 @function_3ce1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ce1c:
  %v2_3ce1e = call i32 @unknown_5d1f2(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  %v0_3ce26 = load i32, i32* @ebp, align 4
  %v1_3ce26 = add i32 %v0_3ce26, -64
  %v1_3ce29 = add i32 %v0_3ce26, -80
  %v2_3ce29 = inttoptr i32 %v1_3ce29 to i32*
  %v3_3ce29 = load i32, i32* %v2_3ce29, align 4
  %v2_3ce33 = call i32 @unknown_5d242(i32 %v1_3ce26, i32 %v3_3ce29)
  %v0_3ce3b = load i32, i32* @ebp, align 4
  %v1_3ce3b = add i32 %v0_3ce3b, -60
  %v2_3ce3b = inttoptr i32 %v1_3ce3b to i32*
  %v3_3ce3b = load i32, i32* %v2_3ce3b, align 4
  %v1_3ce42 = add i32 %v0_3ce3b, -64
  %v2_3ce42 = inttoptr i32 %v1_3ce42 to i32*
  %v3_3ce42 = load i32, i32* %v2_3ce42, align 4
  %v1_3ce49 = add i32 %v0_3ce3b, -36
  %v2_3ce49 = inttoptr i32 %v1_3ce49 to i32*
  %v3_3ce49 = load i32, i32* %v2_3ce49, align 4
  %v1_3ce50 = add i32 %v0_3ce3b, -76
  %v2_3ce50 = inttoptr i32 %v1_3ce50 to i32*
  %v3_3ce50 = load i32, i32* %v2_3ce50, align 4
  %v4_3ce56 = call i32 @unknown_7ac62(i32 %v3_3ce50, i32 %v3_3ce49, i32 %v3_3ce42, i32 %v3_3ce3b)
  %v1_3ce5b = load i32, i32* @ebp, align 4
  %v2_3ce5b = add i32 %v1_3ce5b, -32
  %v3_3ce5b = inttoptr i32 %v2_3ce5b to i32*
  store i32 %v4_3ce56, i32* %v3_3ce5b, align 4
  %v0_3ce5e = load i32, i32* @ebp, align 4
  %v1_3ce5e = add i32 %v0_3ce5e, -76
  %v2_3ce5e = inttoptr i32 %v1_3ce5e to i32*
  %v3_3ce5e = load i32, i32* %v2_3ce5e, align 4
  %v1_3ce64 = call i32 @unknown_5c0e8(i32 %v3_3ce5e)
  %v0_3ce69 = load i32, i32* @ebp, align 4
  %v1_3ce69 = add i32 %v0_3ce69, -76
  %v2_3ce69 = inttoptr i32 %v1_3ce69 to i32*
  %v3_3ce69 = load i32, i32* %v2_3ce69, align 4
  %v1_3ce6c = add i32 %v3_3ce69, 4
  %v2_3ce6c = inttoptr i32 %v1_3ce6c to i32*
  %v3_3ce6c = load i32, i32* %v2_3ce6c, align 4
  %v1_3ce72 = inttoptr i32 %v3_3ce69 to i32*
  %v2_3ce72 = load i32, i32* %v1_3ce72, align 4
  %v3_3ce7f = call i32 @unknown_5c115(i32 %v2_3ce72, i32 %v3_3ce6c, i32 %v1_3ce64)
  %v0_3ce84 = load i32, i32* @ebp, align 4
  %v1_3ce84 = add i32 %v0_3ce84, -76
  %v2_3ce84 = inttoptr i32 %v1_3ce84 to i32*
  %v3_3ce84 = load i32, i32* %v2_3ce84, align 4
  %v1_3ce87 = add i32 %v3_3ce84, 8
  %v2_3ce87 = inttoptr i32 %v1_3ce87 to i32*
  %v3_3ce87 = load i32, i32* %v2_3ce87, align 4
  %v1_3ce8f = inttoptr i32 %v3_3ce84 to i32*
  %v2_3ce8f = load i32, i32* %v1_3ce8f, align 4
  %v2_3ce93 = sub i32 %v3_3ce87, %v2_3ce8f
  %v2_3ce97 = sdiv i32 %v2_3ce93, 4
  %v3_3ce9a = mul i32 %v2_3ce97, -858993459
  %v3_3cea2 = load i32, i32* %v2_3ce84, align 4
  %v1_3cea5 = inttoptr i32 %v3_3cea2 to i32*
  %v2_3cea5 = load i32, i32* %v1_3cea5, align 4
  %v3_3ceb5 = call i32 @unknown_62e58(i32 %v3_3cea2, i32 %v2_3cea5, i32 %v3_3ce9a)
  %v0_3ceba = load i32, i32* @ebp, align 4
  %v1_3ceba = add i32 %v0_3ceba, -76
  %v2_3ceba = inttoptr i32 %v1_3ceba to i32*
  %v3_3ceba = load i32, i32* %v2_3ceba, align 4
  %v1_3cebd = add i32 %v0_3ceba, -32
  %v2_3cebd = inttoptr i32 %v1_3cebd to i32*
  %v3_3cebd = load i32, i32* %v2_3cebd, align 4
  %v2_3cec0 = inttoptr i32 %v3_3ceba to i32*
  store i32 %v3_3cebd, i32* %v2_3cec0, align 4
  %v0_3cec2 = load i32, i32* @ebp, align 4
  %v1_3cec2 = add i32 %v0_3cec2, -76
  %v2_3cec2 = inttoptr i32 %v1_3cec2 to i32*
  %v3_3cec2 = load i32, i32* %v2_3cec2, align 4
  %v1_3cec5 = inttoptr i32 %v3_3cec2 to i32*
  %v2_3cec5 = load i32, i32* %v1_3cec5, align 4
  %v1_3cec7 = add i32 %v0_3cec2, -36
  %v2_3cec7 = inttoptr i32 %v1_3cec7 to i32*
  %v3_3cec7 = load i32, i32* %v2_3cec7, align 4
  %v2_3ced1 = mul i32 %v3_3cec7, 20
  %v3_3ced4 = add i32 %v2_3ced1, %v2_3cec5
  %v3_3ced7 = load i32, i32* %v2_3cec2, align 4
  %v2_3ceda = add i32 %v3_3ced7, 8
  %v3_3ceda = inttoptr i32 %v2_3ceda to i32*
  store i32 %v3_3ced4, i32* %v3_3ceda, align 4
  %v0_3cedd = call i32 @function_3d022()
  ret i32 %v0_3cedd

; uselistorder directives
  uselistorder i32 %v0_3ce3b, { 1, 0, 2, 3 }
  uselistorder i32 -64, { 23, 24, 21, 22, 31, 13, 14, 25, 26, 32, 33, 34, 35, 36, 37, 15, 16, 93, 94, 92, 96, 95, 97, 98, 46, 47, 48, 49, 50, 51, 52, 53, 54, 91, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 88, 89, 90, 0, 1, 2, 3, 4, 86, 5, 6, 7, 8, 9, 10, 11, 68, 69, 70, 71, 72, 40, 38, 39, 41, 17, 18, 19, 20, 42, 43, 44, 45, 76, 77, 78, 27, 28, 29, 30, 79, 80, 81, 82, 84, 85, 83, 73, 74, 75, 12, 99, 100 }
}

define i32 @function_3cee2() local_unnamed_addr {
dec_label_pc_3cee2:
  %v0_3cee2 = load i32, i32* @ebp, align 4
  %v1_3cee2 = add i32 %v0_3cee2, -76
  %v2_3cee2 = inttoptr i32 %v1_3cee2 to i32*
  %v3_3cee2 = load i32, i32* %v2_3cee2, align 4
  %v1_3cee8 = call i32 @unknown_542ca(i32 %v3_3cee2)
  %v1_3ceed = load i32, i32* @ebp, align 4
  %v2_3ceed = add i32 %v1_3ceed, -36
  %v3_3ceed = inttoptr i32 %v2_3ceed to i32*
  %v4_3ceed = load i32, i32* %v3_3ceed, align 4
  %v10_3ceed = icmp ult i32 %v1_3cee8, %v4_3ceed
  %v1_3cef0 = icmp eq i1 %v10_3ceed, false
  %v5_3cef3 = icmp eq i1 %v1_3cef0, false
  br i1 %v5_3cef3, label %bb, label %dec_label_pc_3cefb

bb:                                               ; preds = %dec_label_pc_3cee2
  %v1_3cef5 = call i32 @function_3cf9a()
  %v0_3cefb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3cefb

dec_label_pc_3cefb:                               ; preds = %bb, %dec_label_pc_3cee2
  %v0_3cefb = phi i32 [ %v0_3cefb.pre, %bb ], [ %v1_3ceed, %dec_label_pc_3cee2 ]
  %v1_3cefb = add i32 %v0_3cefb, -76
  %v2_3cefb = inttoptr i32 %v1_3cefb to i32*
  %v3_3cefb = load i32, i32* %v2_3cefb, align 4
  %v1_3cf01 = call i32 @unknown_5c0e8(i32 %v3_3cefb)
  %v0_3cf08 = load i32, i32* @ebp, align 4
  %v1_3cf08 = add i32 %v0_3cf08, -40
  %v1_3cf0b = add i32 %v0_3cf08, -76
  %v2_3cf0b = inttoptr i32 %v1_3cf0b to i32*
  %v3_3cf0b = load i32, i32* %v2_3cf0b, align 4
  %v2_3cf15 = call i32 @unknown_5d0d6(i32 %v1_3cf08, i32 %v3_3cf0b)
  %v0_3cf1d = load i32, i32* @ebp, align 4
  %v1_3cf1d = add i32 %v0_3cf1d, -48
  %v1_3cf20 = add i32 %v0_3cf1d, -76
  %v2_3cf20 = inttoptr i32 %v1_3cf20 to i32*
  %v3_3cf20 = load i32, i32* %v2_3cf20, align 4
  %v2_3cf2a = call i32 @unknown_63cfe(i32 %v1_3cf1d, i32 %v3_3cf20)
  %v0_3cf32 = load i32, i32* @ebp, align 4
  %v1_3cf32 = add i32 %v0_3cf32, -52
  %v1_3cf35 = add i32 %v0_3cf32, -80
  %v2_3cf35 = inttoptr i32 %v1_3cf35 to i32*
  %v3_3cf35 = load i32, i32* %v2_3cf35, align 4
  %v2_3cf3f = call i32 @unknown_5d1f2(i32 %v1_3cf32, i32 %v3_3cf35)
  %v0_3cf47 = load i32, i32* @ebp, align 4
  %v1_3cf47 = add i32 %v0_3cf47, -56
  %v1_3cf4a = add i32 %v0_3cf47, -80
  %v2_3cf4a = inttoptr i32 %v1_3cf4a to i32*
  %v3_3cf4a = load i32, i32* %v2_3cf4a, align 4
  %v2_3cf54 = call i32 @unknown_5d242(i32 %v1_3cf47, i32 %v3_3cf4a)
  %v0_3cf5c = load i32, i32* @ebp, align 4
  %v1_3cf5c = add i32 %v0_3cf5c, -44
  ret i32 %v1_3cf5c

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_5d242, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_5d1f2, { 1, 0 }
}

define i32 @function_3cf66(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cf66:
  %v0_3cf66 = load i32, i32* @ebp, align 4
  %v1_3cf66 = add i32 %v0_3cf66, -52
  %v2_3cf66 = inttoptr i32 %v1_3cf66 to i32*
  %v3_3cf66 = load i32, i32* %v2_3cf66, align 4
  %v1_3cf6d = add i32 %v0_3cf66, -56
  %v2_3cf6d = inttoptr i32 %v1_3cf6d to i32*
  %v3_3cf6d = load i32, i32* %v2_3cf6d, align 4
  %v0_3cf74 = load i32, i32* @eax, align 8
  %v3_3cf77 = call i32 @unknown_7ad1c(i32 %v0_3cf74, i32 %v3_3cf6d, i32 %v3_3cf66)
  %v0_3cf7f = load i32, i32* @ebx, align 4
  %v0_3cf83 = load i32, i32* @ebp, align 4
  %v1_3cf83 = add i32 %v0_3cf83, -40
  %v2_3cf83 = inttoptr i32 %v1_3cf83 to i32*
  %v3_3cf83 = load i32, i32* %v2_3cf83, align 4
  %v1_3cf8a = add i32 %v0_3cf83, -44
  %v2_3cf8a = inttoptr i32 %v1_3cf8a to i32*
  %v3_3cf8a = load i32, i32* %v2_3cf8a, align 4
  %v3_3cf90 = call i32 @unknown_7adaa(i32 %v3_3cf8a, i32 %v3_3cf83, i32 %v0_3cf7f)
  %v0_3cf95 = call i32 @function_3d022()
  ret i32 %v0_3cf95

; uselistorder directives
  uselistorder i32 -52, { 89, 69, 150, 88, 1, 70, 71, 72, 73, 74, 75, 76, 77, 95, 96, 100, 2, 3, 97, 80, 81, 4, 5, 6, 7, 8, 146, 9, 147, 98, 99, 112, 10, 101, 11, 12, 90, 13, 102, 103, 104, 14, 15, 105, 106, 107, 16, 17, 156, 108, 18, 19, 20, 157, 21, 22, 23, 158, 24, 25, 26, 152, 91, 109, 27, 84, 110, 111, 78, 28, 29, 30, 92, 93, 94, 31, 32, 33, 34, 159, 35, 160, 161, 36, 37, 133, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 85, 86, 87, 82, 83, 134, 38, 39, 40, 41, 42, 135, 136, 153, 43, 44, 45, 46, 47, 137, 138, 139, 140, 48, 49, 50, 51, 141, 52, 53, 54, 142, 143, 67, 55, 56, 57, 58, 59, 60, 79, 61, 62, 63, 64, 65, 144, 0, 145, 151, 154, 155, 66, 148, 149, 68, 162, 163, 164, 165, 166 }
}

define i32 @function_3cf9a() local_unnamed_addr {
dec_label_pc_3cf9a:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3cf9a = load i32, i32* @ebp, align 4
  %v1_3cf9a = add i32 %v0_3cf9a, -76
  %v2_3cf9a = inttoptr i32 %v1_3cf9a to i32*
  %v3_3cf9a = load i32, i32* %v2_3cf9a, align 4
  %v1_3cf9d = inttoptr i32 %v3_3cf9a to i32*
  %v2_3cf9d = load i32, i32* %v1_3cf9d, align 4
  store i32 %v2_3cf9d, i32* %ebx.global-to-local, align 4
  %v1_3cf9f = add i32 %v0_3cf9a, -80
  %v2_3cf9f = inttoptr i32 %v1_3cf9f to i32*
  %v3_3cf9f = load i32, i32* %v2_3cf9f, align 4
  %v1_3cfa2 = inttoptr i32 %v3_3cf9f to i32*
  %v2_3cfa2 = load i32, i32* %v1_3cfa2, align 4
  store i32 %v2_3cfa2, i32* %esi.global-to-local, align 4
  %v3_3cfa4 = load i32, i32* %v2_3cf9a, align 4
  %v1_3cfaa = call i32 @unknown_542ca(i32 %v3_3cfa4)
  %v2_3cfb8 = mul i32 %v1_3cfaa, 20
  %v3_3cfbb = add i32 %v2_3cfa2, %v2_3cfb8
  %v0_3cfbe = load i32, i32* @ebp, align 4
  %v1_3cfbe = add i32 %v0_3cfbe, -80
  %v2_3cfbe = inttoptr i32 %v1_3cfbe to i32*
  %v3_3cfbe = load i32, i32* %v2_3cfbe, align 4
  %v1_3cfc1 = inttoptr i32 %v3_3cfbe to i32*
  %v2_3cfc1 = load i32, i32* %v1_3cfc1, align 4
  %v0_3cfc3 = load i32, i32* %ebx.global-to-local, align 4
  %v3_3cfce = call i32 @unknown_7adf2(i32 %v2_3cfc1, i32 %v3_3cfbb, i32 %v0_3cfc3)
  %v0_3cfd3 = load i32, i32* @ebp, align 4
  %v1_3cfd3 = add i32 %v0_3cfd3, -76
  %v2_3cfd3 = inttoptr i32 %v1_3cfd3 to i32*
  %v3_3cfd3 = load i32, i32* %v2_3cfd3, align 4
  %v1_3cfd9 = call i32 @unknown_5c0e8(i32 %v3_3cfd3)
  store i32 %v1_3cfd9, i32* %ebx.global-to-local, align 4
  %v0_3cfe0 = load i32, i32* @ebp, align 4
  %v1_3cfe0 = add i32 %v0_3cfe0, -76
  %v2_3cfe0 = inttoptr i32 %v1_3cfe0 to i32*
  %v3_3cfe0 = load i32, i32* %v2_3cfe0, align 4
  %v1_3cfe3 = add i32 %v3_3cfe0, 4
  %v2_3cfe3 = inttoptr i32 %v1_3cfe3 to i32*
  %v3_3cfe3 = load i32, i32* %v2_3cfe3, align 4
  store i32 %v3_3cfe3, i32* %edi.global-to-local, align 4
  %v1_3cfe6 = add i32 %v0_3cfe0, -80
  %v2_3cfe6 = inttoptr i32 %v1_3cfe6 to i32*
  %v3_3cfe6 = load i32, i32* %v2_3cfe6, align 4
  %v1_3cfe9 = add i32 %v3_3cfe6, 4
  %v2_3cfe9 = inttoptr i32 %v1_3cfe9 to i32*
  %v3_3cfe9 = load i32, i32* %v2_3cfe9, align 4
  store i32 %v3_3cfe9, i32* %esi.global-to-local, align 4
  %v3_3cfec = load i32, i32* %v2_3cfe6, align 4
  %v1_3cfef = inttoptr i32 %v3_3cfec to i32*
  %v2_3cfef = load i32, i32* %v1_3cfef, align 4
  %v2_3cff1 = add i32 %v0_3cfe0, -84
  %v3_3cff1 = inttoptr i32 %v2_3cff1 to i32*
  store i32 %v2_3cfef, i32* %v3_3cff1, align 4
  %v0_3cff4 = load i32, i32* @ebp, align 4
  %v1_3cff4 = add i32 %v0_3cff4, -76
  %v2_3cff4 = inttoptr i32 %v1_3cff4 to i32*
  %v3_3cff4 = load i32, i32* %v2_3cff4, align 4
  %v1_3cffa = call i32 @unknown_542ca(i32 %v3_3cff4)
  %v2_3d008 = mul i32 %v1_3cffa, 20
  %v1_3d00b = load i32, i32* @ebp, align 4
  %v2_3d00b = add i32 %v1_3d00b, -84
  %v3_3d00b = inttoptr i32 %v2_3d00b to i32*
  %v4_3d00b = load i32, i32* %v3_3d00b, align 4
  %v5_3d00b = add i32 %v4_3d00b, %v2_3d008
  %v0_3d00e = load i32, i32* %ebx.global-to-local, align 4
  %v0_3d012 = load i32, i32* %edi.global-to-local, align 4
  %v0_3d016 = load i32, i32* %esi.global-to-local, align 4
  %v4_3d01d = call i32 @unknown_68b29(i32 %v5_3d00b, i32 %v0_3d016, i32 %v0_3d012, i32 %v0_3d00e)
  ret i32 %v4_3d01d

; uselistorder directives
  uselistorder i32 -84, { 0, 1, 11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @unknown_5c0e8, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_542ca, { 3, 2, 1, 0 }
  uselistorder i32 -80, { 5, 6, 7, 8, 9, 26, 33, 21, 22, 32, 23, 24, 25, 34, 27, 10, 35, 17, 18, 19, 20, 28, 11, 12, 13, 29, 14, 15, 16, 0, 30, 1, 2, 3, 4, 31, 36, 39, 37, 38, 40 }
}

define i32 @function_3d022() local_unnamed_addr {
dec_label_pc_3d022:
  %v0_3d022 = load i32, i32* @ebp, align 4
  %v1_3d022 = add i32 %v0_3d022, -76
  %v2_3d022 = inttoptr i32 %v1_3d022 to i32*
  %v3_3d022 = load i32, i32* %v2_3d022, align 4
  %v1_3d025 = inttoptr i32 %v3_3d022 to i32*
  %v2_3d025 = load i32, i32* %v1_3d025, align 4
  %v1_3d027 = add i32 %v0_3d022, -36
  %v2_3d027 = inttoptr i32 %v1_3d027 to i32*
  %v3_3d027 = load i32, i32* %v2_3d027, align 4
  %v2_3d031 = mul i32 %v3_3d027, 20
  %v3_3d034 = add i32 %v2_3d031, %v2_3d025
  %v3_3d037 = load i32, i32* %v2_3d022, align 4
  %v2_3d03a = add i32 %v3_3d037, 4
  %v3_3d03a = inttoptr i32 %v2_3d03a to i32*
  store i32 %v3_3d034, i32* %v3_3d03a, align 4
  %v0_3d03d = load i32, i32* @ebp, align 4
  %v1_3d03d = add i32 %v0_3d03d, -76
  %v2_3d03d = inttoptr i32 %v1_3d03d to i32*
  %v3_3d03d = load i32, i32* %v2_3d03d, align 4
  store i32 %v3_3d03d, i32* @eax, align 8
  %v1_3d040 = add i32 %v0_3d03d, -28
  %v2_3d040 = inttoptr i32 %v1_3d040 to i32*
  %v3_3d040 = load i32, i32* %v2_3d040, align 4
  %v1_3d043 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3d043 = icmp eq i32 %v1_3d043, %v3_3d040
  br i1 %v3_3d043, label %bb, label %dec_label_pc_3d04c

bb:                                               ; preds = %dec_label_pc_3d022
  %v1_3d04a = call i32 @function_3d051()
  br label %dec_label_pc_3d04c

dec_label_pc_3d04c:                               ; preds = %bb, %dec_label_pc_3d022
  %v2_3d04a = phi i32 [ %v1_3d04a, %bb ], [ %v3_3d03d, %dec_label_pc_3d022 ]
  ret i32 %v2_3d04a

; uselistorder directives
  uselistorder i32 -76, { 40, 41, 5, 6, 7, 8, 9, 10, 11, 12, 34, 35, 36, 37, 38, 39, 58, 59, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 42, 20, 46, 47, 43, 44, 45, 13, 14, 15, 16, 17, 48, 49, 50, 52, 53, 51, 18, 19, 55, 54, 61, 60, 63, 62, 64, 56, 1, 57, 3, 2, 4, 65, 67, 66, 68 }
}

define i32 @function_3d051() local_unnamed_addr {
dec_label_pc_3d051:
  %v0_3d051 = load i32, i32* @ebp, align 4
  %v1_3d057 = inttoptr i32 %v0_3d051 to i32*
  %v2_3d057 = load i32, i32* %v1_3d057, align 4
  store i32 %v2_3d057, i32* @ebp, align 4
  %v0_3d058 = load i32, i32* @eax, align 8
  ret i32 %v0_3d058
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d059:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d08d

bb:                                               ; preds = %dec_label_pc_3d059
  %v3_3d08b = call i32 @function_3d092(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_3d08d

dec_label_pc_3d08d:                               ; preds = %bb, %dec_label_pc_3d059
  %v4_3d08b = phi i32 [ %v3_3d08b, %bb ], [ %tmp102, %dec_label_pc_3d059 ]
  ret i32 %v4_3d08b
}

define i32 @function_3d092(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d092:
  %v0_3d093 = load i32, i32* @eax, align 8
  ret i32 %v0_3d093
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d096:
  %v1_3d0b3 = call i32 @unknown_7b130(i32 %arg1)
  store i32 %v1_3d0b3, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d0c4

bb:                                               ; preds = %dec_label_pc_3d096
  %v1_3d0c2 = call i32 @function_3d0c9()
  br label %dec_label_pc_3d0c4

dec_label_pc_3d0c4:                               ; preds = %bb, %dec_label_pc_3d096
  %v2_3d0c2 = phi i32 [ %v1_3d0c2, %bb ], [ %v1_3d0b3, %dec_label_pc_3d096 ]
  ret i32 %v2_3d0c2
}

define i32 @function_3d0c9() local_unnamed_addr {
dec_label_pc_3d0c9:
  %v0_3d0ca = load i32, i32* @eax, align 8
  ret i32 %v0_3d0ca
}

define i32 @_ZSt13__copy_move_aILb0EPK5CTxInPS0_ET1_T0_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d0cb:
  ret i32 %arg3
}

define i32 @function_3d0e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d0e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d0e5 = load i32, i32* @eax, align 8
  %v1_3d0e5 = trunc i32 %v0_3d0e5 to i8
  %v2_3d0e5 = load i1, i1* @cf, align 1
  %v3_3d0e5 = zext i1 %v2_3d0e5 to i8
  %v4_3d0e5 = add i8 %v3_3d0e5, %v1_3d0e5
  %v22_3d0e5 = zext i8 %v4_3d0e5 to i32
  %v24_3d0e5 = and i32 %v0_3d0e5, -256
  %v25_3d0e5 = or i32 %v22_3d0e5, %v24_3d0e5
  store i32 %v25_3d0e5, i32* %eax.global-to-local, align 8
  %v1_3d0e7 = inttoptr i32 %v25_3d0e5 to i8*
  %v2_3d0e7 = load i8, i8* %v1_3d0e7, align 1
  %v5_3d0e7 = add i8 %v2_3d0e7, %v4_3d0e5
  store i8 %v5_3d0e7, i8* %v1_3d0e7, align 1
  %v0_3d0e9 = load i32, i32* %eax.global-to-local, align 8
  %v1_3d0e9 = load i32, i32* @ebp, align 4
  %v2_3d0e9 = add i32 %v1_3d0e9, -12
  %v3_3d0e9 = inttoptr i32 %v2_3d0e9 to i32*
  store i32 %v0_3d0e9, i32* %v3_3d0e9, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3d0ee = load i32, i32* @ebp, align 4
  %v1_3d0ee = add i32 %v0_3d0ee, -13
  %v2_3d0ee = inttoptr i32 %v1_3d0ee to i8*
  store i8 0, i8* %v2_3d0ee, align 1
  %v0_3d0f2 = load i32, i32* @ebp, align 4
  %v1_3d0f2 = add i32 %v0_3d0f2, -36
  %v2_3d0f2 = inttoptr i32 %v1_3d0f2 to i32*
  %v3_3d0f2 = load i32, i32* %v2_3d0f2, align 4
  store i32 %v3_3d0f2, i32* %eax.global-to-local, align 8
  %v1_3d0f9 = add i32 %v0_3d0f2, -32
  %v2_3d0f9 = inttoptr i32 %v1_3d0f9 to i32*
  %v3_3d0f9 = load i32, i32* %v2_3d0f9, align 4
  store i32 %v3_3d0f9, i32* %eax.global-to-local, align 8
  %v1_3d100 = add i32 %v0_3d0f2, -28
  %v2_3d100 = inttoptr i32 %v1_3d100 to i32*
  %v3_3d100 = load i32, i32* %v2_3d100, align 4
  store i32 %v3_3d100, i32* %eax.global-to-local, align 8
  %v3_3d106 = call i32 @unknown_7b22e(i32 %v3_3d100, i32 %v3_3d0f9, i32 %v3_3d0f2)
  store i32 %v3_3d106, i32* @eax, align 8
  %v0_3d10b = load i32, i32* @ebp, align 4
  %v1_3d10b = add i32 %v0_3d10b, -12
  %v2_3d10b = inttoptr i32 %v1_3d10b to i32*
  %v3_3d10b = load i32, i32* %v2_3d10b, align 4
  %v1_3d10e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3d10e = icmp eq i32 %v1_3d10e, %v3_3d10b
  br i1 %v3_3d10e, label %bb, label %dec_label_pc_3d117

bb:                                               ; preds = %dec_label_pc_3d0e2
  %v1_3d115 = call i32 @function_3d11c()
  store i32 %v1_3d115, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3d117

dec_label_pc_3d117:                               ; preds = %bb, %dec_label_pc_3d0e2
  %v2_3d115 = phi i32 [ %v1_3d115, %bb ], [ %v3_3d106, %dec_label_pc_3d0e2 ]
  ret i32 %v2_3d115
}

define i32 @function_3d11c() local_unnamed_addr {
dec_label_pc_3d11c:
  %v0_3d11d = load i32, i32* @eax, align 8
  ret i32 %v0_3d11d
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS4_SaIS4_EEEEEEvT_SA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d11e:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_3d166 = ptrtoint i32* %stack_var_-36 to i32
  %v2_3d16a = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_3d163

dec_label_pc_3d13d:                               ; preds = %dec_label_pc_3d163
  %v1_3d143 = call i32 @unknown_5cef6(i32 %v2_3d16a)
  %v1_3d14b = call i32 @unknown_69a64(i32 %v1_3d143)
  %v1_3d153 = call i32 @unknown_69aca(i32 %v1_3d14b)
  %v1_3d15e = call i32 @unknown_5cebc(i32 %v2_3d16a)
  br label %dec_label_pc_3d163

dec_label_pc_3d163:                               ; preds = %dec_label_pc_3d13d, %dec_label_pc_3d11e
  %v2_3d170 = call i32 @unknown_7b2fd(i32 %v2_3d16a, i32 %v4_3d166)
  %v4_3d175 = trunc i32 %v2_3d170 to i8
  %v5_3d175 = icmp eq i8 %v4_3d175, 0
  %v1_3d177 = icmp eq i1 %v5_3d175, false
  br i1 %v1_3d177, label %dec_label_pc_3d13d, label %dec_label_pc_3d179

dec_label_pc_3d179:                               ; preds = %dec_label_pc_3d163
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d185

bb:                                               ; preds = %dec_label_pc_3d179
  %v1_3d183 = call i32 @function_3d18a()
  br label %dec_label_pc_3d185

dec_label_pc_3d185:                               ; preds = %bb, %dec_label_pc_3d179
  %v2_3d183 = phi i32 [ %v1_3d183, %bb ], [ 0, %dec_label_pc_3d179 ]
  ret i32 %v2_3d183

; uselistorder directives
  uselistorder i32 %v2_3d16a, { 2, 0, 1 }
}

define i32 @function_3d18a() local_unnamed_addr {
dec_label_pc_3d18a:
  %v0_3d18b = load i32, i32* @eax, align 8
  ret i32 %v0_3d18b
}

define i32 @_ZNSt10_Iter_baseIP5CTxInLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d18c:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d1b2

bb:                                               ; preds = %dec_label_pc_3d18c
  %v2_3d1b0 = call i32 @function_3d1b7(i32 %arg1)
  br label %dec_label_pc_3d1b2

dec_label_pc_3d1b2:                               ; preds = %bb, %dec_label_pc_3d18c
  %v3_3d1b0 = phi i32 [ %v2_3d1b0, %bb ], [ %arg1, %dec_label_pc_3d18c ]
  ret i32 %v3_3d1b0
}

define i32 @function_3d1b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d1b7:
  %v0_3d1b8 = load i32, i32* @eax, align 8
  ret i32 %v0_3d1b8
}

define i32 @_ZSt12__niter_baseIP5CTxInENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d1b9:
  %v1_3d1d6 = call i32 @unknown_7a345(i32 %arg1)
  store i32 %v1_3d1d6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d1e7

bb:                                               ; preds = %dec_label_pc_3d1b9
  %v1_3d1e5 = call i32 @function_3d1ec()
  br label %dec_label_pc_3d1e7

dec_label_pc_3d1e7:                               ; preds = %bb, %dec_label_pc_3d1b9
  %v2_3d1e5 = phi i32 [ %v1_3d1e5, %bb ], [ %v1_3d1d6, %dec_label_pc_3d1b9 ]
  ret i32 %v2_3d1e5
}

define i32 @function_3d1ec() local_unnamed_addr {
dec_label_pc_3d1ec:
  %v0_3d1ed = load i32, i32* @eax, align 8
  ret i32 %v0_3d1ed
}

define i32 @_ZSt13__copy_move_aILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d1ee:
  %v3_3d229 = call i32 @unknown_7b421(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_3d229, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d23a

bb:                                               ; preds = %dec_label_pc_3d1ee
  %v1_3d238 = call i32 @function_3d23f()
  br label %dec_label_pc_3d23a

dec_label_pc_3d23a:                               ; preds = %bb, %dec_label_pc_3d1ee
  %v2_3d238 = phi i32 [ %v1_3d238, %bb ], [ %v3_3d229, %dec_label_pc_3d1ee ]
  ret i32 %v2_3d238
}

define i32 @function_3d23f() local_unnamed_addr {
dec_label_pc_3d23f:
  %v0_3d240 = load i32, i32* @eax, align 8
  ret i32 %v0_3d240
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5CTxInS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d241:
  %v15_3d292117 = icmp eq i32 %arg1, %arg2
  %v1_3d295118 = icmp eq i1 %v15_3d292117, false
  %v5_3d298119 = icmp eq i1 %v1_3d295118, false
  %v1_3d29a120 = icmp eq i1 %v5_3d298119, false
  br i1 %v1_3d29a120, label %dec_label_pc_3d26d, label %dec_label_pc_3d29c

dec_label_pc_3d26d:                               ; preds = %dec_label_pc_3d241, %dec_label_pc_3d26d
  %storemerge.in122 = phi i32 [ %v5_3d28b, %dec_label_pc_3d26d ], [ %arg3, %dec_label_pc_3d241 ]
  %stack_var_-32.0.in121 = phi i32 [ %v5_3d287, %dec_label_pc_3d26d ], [ %arg1, %dec_label_pc_3d241 ]
  %v2_3d273 = call i32 @unknown_69b87(i32 %storemerge.in122)
  %v4_3d282 = call i32 @unknown_6a2cb(i32 %v2_3d273, i32 %stack_var_-32.0.in121)
  %v5_3d287 = add i32 %stack_var_-32.0.in121, ptrtoint (i64* @global_var_34.2855 to i32)
  %v5_3d28b = add i32 %storemerge.in122, ptrtoint (i64* @global_var_34.2855 to i32)
  %v15_3d292 = icmp eq i32 %v5_3d287, %arg2
  %v1_3d295 = icmp eq i1 %v15_3d292, false
  %v5_3d298 = icmp eq i1 %v1_3d295, false
  %v1_3d29a = icmp eq i1 %v5_3d298, false
  br i1 %v1_3d29a, label %dec_label_pc_3d26d, label %dec_label_pc_3d29c

dec_label_pc_3d29c:                               ; preds = %dec_label_pc_3d26d, %dec_label_pc_3d241
  %storemerge.in.lcssa = phi i32 [ %arg3, %dec_label_pc_3d241 ], [ %v5_3d28b, %dec_label_pc_3d26d ]
  ret i32 %storemerge.in.lcssa

; uselistorder directives
  uselistorder i32 %v5_3d287, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.in121, { 1, 0 }
  uselistorder i32 %storemerge.in122, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_3d26d, { 1, 0 }
}

define i32 @function_3d2a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d2a0:
  %v0_3d2a2 = load i32, i32* @edx, align 4
  %v1_3d2a2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_3d2a2 = icmp eq i32 %v1_3d2a2, %v0_3d2a2
  br i1 %v3_3d2a2, label %bb, label %dec_label_pc_3d2ab

bb:                                               ; preds = %dec_label_pc_3d2a0
  %v1_3d2a9 = call i32 @function_3d2e2()
  store i32 %v1_3d2a9, i32* @eax, align 8
  br label %dec_label_pc_3d2ab

dec_label_pc_3d2ab:                               ; preds = %bb, %dec_label_pc_3d2a0
  %v0_3d2ab = call i32 @function_3d2dd()
  ret i32 %v0_3d2ab
}

define i32 @function_3d2ae() local_unnamed_addr {
dec_label_pc_3d2ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d2ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d2ae
}

define i32 @function_3d2dd() local_unnamed_addr {
dec_label_pc_3d2dd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3d2e2() local_unnamed_addr {
dec_label_pc_3d2e2:
  %v0_3d2e2 = load i32, i32* @esp, align 4
  %v5_3d2e2 = icmp ugt i32 %v0_3d2e2, -53
  store i1 %v5_3d2e2, i1* @cf, align 1
  %v0_3d2e7 = load i32, i32* @eax, align 8
  ret i32 %v0_3d2e7

; uselistorder directives
  uselistorder i32* @esp, { 21, 24, 103, 39, 40, 41, 42, 43, 44, 23, 48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 95, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 20, 22, 25, 94, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 104, 47, 49, 102, 99, 100, 101, 0, 1, 2 }
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEELb0EE7_S_baseES8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d2e8:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d31c

bb:                                               ; preds = %dec_label_pc_3d2e8
  %v3_3d31a = call i32 @function_3d321(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_3d31c

dec_label_pc_3d31c:                               ; preds = %bb, %dec_label_pc_3d2e8
  %v4_3d31a = phi i32 [ %v3_3d31a, %bb ], [ %tmp102, %dec_label_pc_3d2e8 ]
  ret i32 %v4_3d31a
}

define i32 @function_3d321(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d321:
  %v0_3d322 = load i32, i32* @eax, align 8
  ret i32 %v0_3d322
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d325:
  %v1_3d342 = call i32 @unknown_7b5d4(i32 %arg1)
  store i32 %v1_3d342, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d353

bb:                                               ; preds = %dec_label_pc_3d325
  %v1_3d351 = call i32 @function_3d358()
  br label %dec_label_pc_3d353

dec_label_pc_3d353:                               ; preds = %bb, %dec_label_pc_3d325
  %v2_3d351 = phi i32 [ %v1_3d351, %bb ], [ %v1_3d342, %dec_label_pc_3d325 ]
  ret i32 %v2_3d351
}

define i32 @function_3d358() local_unnamed_addr {
dec_label_pc_3d358:
  %v0_3d359 = load i32, i32* @eax, align 8
  ret i32 %v0_3d359
}

define i32 @_ZSt13__copy_move_aILb0EPK6CTxOutPS0_ET1_T0_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d35a:
  ret i32 %arg3
}

define i32 @function_3d370(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d370:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d370 = load i32, i32* @ebp, align 4
  %v1_3d370 = add i32 %v0_3d370, 1
  store i32 %v1_3d370, i32* @ebp, align 4
  %v0_3d374 = load i32, i32* @eax, align 8
  %v1_3d374 = trunc i32 %v0_3d374 to i8
  %v2_3d374 = load i1, i1* @cf, align 1
  %v3_3d374 = zext i1 %v2_3d374 to i8
  %v4_3d374 = add i8 %v3_3d374, %v1_3d374
  %v22_3d374 = zext i8 %v4_3d374 to i32
  %v24_3d374 = and i32 %v0_3d374, -256
  %v25_3d374 = or i32 %v22_3d374, %v24_3d374
  store i32 %v25_3d374, i32* %eax.global-to-local, align 8
  %v1_3d376 = inttoptr i32 %v25_3d374 to i8*
  %v2_3d376 = load i8, i8* %v1_3d376, align 1
  %v5_3d376 = add i8 %v2_3d376, %v4_3d374
  store i8 %v5_3d376, i8* %v1_3d376, align 1
  %v0_3d378 = load i32, i32* %eax.global-to-local, align 8
  %v1_3d378 = load i32, i32* @ebp, align 4
  %v2_3d378 = add i32 %v1_3d378, -12
  %v3_3d378 = inttoptr i32 %v2_3d378 to i32*
  store i32 %v0_3d378, i32* %v3_3d378, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3d37d = load i32, i32* @ebp, align 4
  %v1_3d37d = add i32 %v0_3d37d, -13
  %v2_3d37d = inttoptr i32 %v1_3d37d to i8*
  store i8 0, i8* %v2_3d37d, align 1
  %v0_3d381 = load i32, i32* @ebp, align 4
  %v1_3d381 = add i32 %v0_3d381, -36
  %v2_3d381 = inttoptr i32 %v1_3d381 to i32*
  %v3_3d381 = load i32, i32* %v2_3d381, align 4
  store i32 %v3_3d381, i32* %eax.global-to-local, align 8
  %v1_3d388 = add i32 %v0_3d381, -32
  %v2_3d388 = inttoptr i32 %v1_3d388 to i32*
  %v3_3d388 = load i32, i32* %v2_3d388, align 4
  store i32 %v3_3d388, i32* %eax.global-to-local, align 8
  %v1_3d38f = add i32 %v0_3d381, -28
  %v2_3d38f = inttoptr i32 %v1_3d38f to i32*
  %v3_3d38f = load i32, i32* %v2_3d38f, align 4
  store i32 %v3_3d38f, i32* %eax.global-to-local, align 8
  %v3_3d395 = call i32 @unknown_7b640(i32 %v3_3d38f, i32 %v3_3d388, i32 %v3_3d381)
  store i32 %v3_3d395, i32* @eax, align 8
  %v0_3d39a = load i32, i32* @ebp, align 4
  %v1_3d39a = add i32 %v0_3d39a, -12
  %v2_3d39a = inttoptr i32 %v1_3d39a to i32*
  %v3_3d39a = load i32, i32* %v2_3d39a, align 4
  %v1_3d39d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3d39d = icmp eq i32 %v1_3d39d, %v3_3d39a
  br i1 %v3_3d39d, label %bb, label %dec_label_pc_3d3a6

bb:                                               ; preds = %dec_label_pc_3d370
  %v1_3d3a4 = call i32 @function_3d3ab()
  store i32 %v1_3d3a4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3d3a6

dec_label_pc_3d3a6:                               ; preds = %bb, %dec_label_pc_3d370
  %v2_3d3a4 = phi i32 [ %v1_3d3a4, %bb ], [ %v3_3d395, %dec_label_pc_3d370 ]
  ret i32 %v2_3d3a4
}

define i32 @function_3d3ab() local_unnamed_addr {
dec_label_pc_3d3ab:
  %v0_3d3ac = load i32, i32* @eax, align 8
  ret i32 %v0_3d3ac
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS4_SaIS4_EEEEEEvT_SA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d3ad:
  ret i32 0
}

define i32 @function_3d3d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d3d0:
  %v0_3d3d2 = call i32 @unknown_59817()
  %v1_3d3da = call i32 @unknown_69d8e(i32 %v0_3d3d2)
  %v1_3d3e2 = call i32 @unknown_69dbb(i32 %v1_3d3da)
  %v0_3d3e7 = load i32, i32* @ebp, align 4
  %v1_3d3e7 = add i32 %v0_3d3e7, -28
  %v1_3d3ed = call i32 @unknown_7b763(i32 %v1_3d3e7)
  %v0_3d3f2 = load i32, i32* @ebp, align 4
  %v1_3d3f2 = add i32 %v0_3d3f2, -32
  %v1_3d3f9 = add i32 %v0_3d3f2, -28
  %v2_3d3ff = call i32 @unknown_7b70f(i32 %v1_3d3f9, i32 %v1_3d3f2)
  %v0_3d408 = load i32, i32* @ebp, align 4
  %v1_3d408 = add i32 %v0_3d408, -12
  %v2_3d408 = inttoptr i32 %v1_3d408 to i32*
  %v3_3d408 = load i32, i32* %v2_3d408, align 4
  %v1_3d40b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3d40b = xor i32 %v1_3d40b, %v3_3d408
  %v3_3d40b = icmp eq i32 %v2_3d40b, 0
  store i32 %v2_3d40b, i32* @eax, align 8
  br i1 %v3_3d40b, label %bb, label %dec_label_pc_3d414

bb:                                               ; preds = %dec_label_pc_3d3d0
  %v1_3d412 = call i32 @function_3d419()
  br label %dec_label_pc_3d414

dec_label_pc_3d414:                               ; preds = %bb, %dec_label_pc_3d3d0
  %v3_3d412 = phi i32 [ %v1_3d412, %bb ], [ %v2_3d40b, %dec_label_pc_3d3d0 ]
  ret i32 %v3_3d412
}

define i32 @function_3d419() local_unnamed_addr {
dec_label_pc_3d419:
  %v0_3d41a = load i32, i32* @eax, align 8
  ret i32 %v0_3d41a
}

define i32 @_ZNSt10_Iter_baseIP6CTxOutLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d41b:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d441

bb:                                               ; preds = %dec_label_pc_3d41b
  %v2_3d43f = call i32 @function_3d446(i32 %arg1)
  br label %dec_label_pc_3d441

dec_label_pc_3d441:                               ; preds = %bb, %dec_label_pc_3d41b
  %v3_3d43f = phi i32 [ %v2_3d43f, %bb ], [ %arg1, %dec_label_pc_3d41b ]
  ret i32 %v3_3d43f
}

define i32 @function_3d446(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d446:
  %v0_3d447 = load i32, i32* @eax, align 8
  ret i32 %v0_3d447
}

define i32 @_ZSt12__niter_baseIP6CTxOutENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d448:
  %v1_3d465 = call i32 @unknown_7a863(i32 %arg1)
  store i32 %v1_3d465, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d476

bb:                                               ; preds = %dec_label_pc_3d448
  %v1_3d474 = call i32 @function_3d47b()
  br label %dec_label_pc_3d476

dec_label_pc_3d476:                               ; preds = %bb, %dec_label_pc_3d448
  %v2_3d474 = phi i32 [ %v1_3d474, %bb ], [ %v1_3d465, %dec_label_pc_3d448 ]
  ret i32 %v2_3d474
}

define i32 @function_3d47b() local_unnamed_addr {
dec_label_pc_3d47b:
  %v0_3d47c = load i32, i32* @eax, align 8
  ret i32 %v0_3d47c
}

define i32 @_ZSt13__copy_move_aILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d47d:
  %v3_3d4b8 = call i32 @unknown_7b86d(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_3d4b8, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d4c9

bb:                                               ; preds = %dec_label_pc_3d47d
  %v1_3d4c7 = call i32 @function_3d4ce()
  br label %dec_label_pc_3d4c9

dec_label_pc_3d4c9:                               ; preds = %bb, %dec_label_pc_3d47d
  %v2_3d4c7 = phi i32 [ %v1_3d4c7, %bb ], [ %v3_3d4b8, %dec_label_pc_3d47d ]
  ret i32 %v2_3d4c7
}

define i32 @function_3d4ce() local_unnamed_addr {
dec_label_pc_3d4ce:
  %v0_3d4cf = load i32, i32* @eax, align 8
  ret i32 %v0_3d4cf
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6CTxOutS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d4d0:
  %v15_3d521109 = icmp eq i32 %arg1, %arg2
  %v1_3d524110 = icmp eq i1 %v15_3d521109, false
  %v5_3d527111 = icmp eq i1 %v1_3d524110, false
  %v1_3d529112 = icmp eq i1 %v5_3d527111, false
  store i32 %arg3, i32* @eax, align 8
  br i1 %v1_3d529112, label %dec_label_pc_3d4fc, label %dec_label_pc_3d52b

dec_label_pc_3d4fc:                               ; preds = %dec_label_pc_3d4d0, %dec_label_pc_3d4fc
  %storemerge114 = phi i32 [ %v4_3d51a, %dec_label_pc_3d4fc ], [ %arg3, %dec_label_pc_3d4d0 ]
  %stack_var_-32.0113 = phi i32 [ %v4_3d516, %dec_label_pc_3d4fc ], [ %arg1, %dec_label_pc_3d4d0 ]
  %v1_3d502 = call i32 @unknown_69eb1(i32 %storemerge114)
  %v2_3d511 = call i32 @unknown_69f73(i32 %v1_3d502, i32 %stack_var_-32.0113)
  %v4_3d516 = add i32 %stack_var_-32.0113, 20
  %v4_3d51a = add i32 %storemerge114, 20
  %v15_3d521 = icmp eq i32 %v4_3d516, %arg2
  %v1_3d524 = icmp eq i1 %v15_3d521, false
  %v5_3d527 = icmp eq i1 %v1_3d524, false
  %v1_3d529 = icmp eq i1 %v5_3d527, false
  store i32 %v4_3d51a, i32* @eax, align 8
  br i1 %v1_3d529, label %dec_label_pc_3d4fc, label %dec_label_pc_3d52b

dec_label_pc_3d52b:                               ; preds = %dec_label_pc_3d4fc, %dec_label_pc_3d4d0
  br i1 true, label %bb, label %dec_label_pc_3d53a

bb:                                               ; preds = %dec_label_pc_3d52b
  %v1_3d538 = call i32 @function_3d571()
  store i32 %v1_3d538, i32* @eax, align 8
  br label %dec_label_pc_3d53a

dec_label_pc_3d53a:                               ; preds = %bb, %dec_label_pc_3d52b
  %v0_3d53a = call i32 @function_3d56c()
  ret i32 %v0_3d53a

; uselistorder directives
  uselistorder i32 %v4_3d51a, { 1, 0 }
  uselistorder i32 %v4_3d516, { 1, 0 }
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_3d4fc, { 1, 0 }
}

define i32 @function_3d53d() local_unnamed_addr {
dec_label_pc_3d53d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d53d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d53d
}

define i32 @function_3d541(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3d541:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3d56c() local_unnamed_addr {
dec_label_pc_3d56c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3d571() local_unnamed_addr {
dec_label_pc_3d571:
  %v0_3d576 = load i32, i32* @eax, align 8
  ret i32 %v0_3d576
}

define i32 @_ZN9__gnu_cxxmiIP5CTxInSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d577:
  %v1_3d59b = call i32 @unknown_64163(i32 %arg1)
  %v1_3d5a0 = inttoptr i32 %v1_3d59b to i32*
  %v2_3d5a0 = load i32, i32* %v1_3d5a0, align 4
  %v1_3d5aa = call i32 @unknown_64163(i32 %arg2)
  %v1_3d5af = inttoptr i32 %v1_3d5aa to i32*
  %v2_3d5af = load i32, i32* %v1_3d5af, align 4
  %v2_3d5b3 = sub i32 %v2_3d5a0, %v2_3d5af
  %v2_3d5b7 = sdiv i32 %v2_3d5b3, 4
  %v3_3d5ba = mul i32 %v2_3d5b7, -991146299
  store i32 %v3_3d5ba, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d5cc

bb:                                               ; preds = %dec_label_pc_3d577
  %v1_3d5ca = call i32 @function_3d5d1()
  br label %dec_label_pc_3d5cc

dec_label_pc_3d5cc:                               ; preds = %bb, %dec_label_pc_3d577
  %v2_3d5ca = phi i32 [ %v1_3d5ca, %bb ], [ %v3_3d5ba, %dec_label_pc_3d577 ]
  ret i32 %v2_3d5ca

; uselistorder directives
  uselistorder i32 (i32)* @unknown_64163, { 1, 0 }
}

define i32 @function_3d5d1() local_unnamed_addr {
dec_label_pc_3d5d1:
  %v0_3d5d6 = load i32, i32* @eax, align 8
  ret i32 %v0_3d5d6
}

define i32 @_ZSt22__uninitialized_move_aIP5CTxInS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3d5d7:
  %v8_3d61b = call i32 @unknown_788b9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_3d61b, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d62c

bb:                                               ; preds = %dec_label_pc_3d5d7
  %v1_3d62a = call i32 @function_3d631()
  br label %dec_label_pc_3d62c

dec_label_pc_3d62c:                               ; preds = %bb, %dec_label_pc_3d5d7
  %v2_3d62a = phi i32 [ %v1_3d62a, %bb ], [ %v8_3d61b, %dec_label_pc_3d5d7 ]
  ret i32 %v2_3d62a

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3d62f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d62f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3d631() local_unnamed_addr {
dec_label_pc_3d631:
  %v0_3d632 = load i32, i32* @eax, align 8
  ret i32 %v0_3d632
}

define i32 @_ZSt13copy_backwardIP5CTxInS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d633:
  %v1_3d65d = call i32 @unknown_7931b(i32 %arg2)
  %v1_3d66a = call i32 @unknown_7931b(i32 %arg1)
  %v3_3d67d = call i32 @unknown_7ba9f(i32 %v1_3d66a, i32 %v1_3d65d, i32 %arg3)
  store i32 %v3_3d67d, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d68e

bb:                                               ; preds = %dec_label_pc_3d633
  %v1_3d68c = call i32 @function_3d693()
  br label %dec_label_pc_3d68e

dec_label_pc_3d68e:                               ; preds = %bb, %dec_label_pc_3d633
  %v2_3d68c = phi i32 [ %v1_3d68c, %bb ], [ %v3_3d67d, %dec_label_pc_3d633 ]
  ret i32 %v2_3d68c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7931b, { 1, 0 }
}

define i32 @function_3d693() local_unnamed_addr {
dec_label_pc_3d693:
  %v0_3d698 = load i32, i32* @eax, align 8
  ret i32 %v0_3d698
}

define i32 @_ZSt4fillIP5CTxInS0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d699:
  %v1_3d6c3 = call i32 @unknown_7a852(i32 %arg2)
  %v1_3d6d0 = call i32 @unknown_7a852(i32 %arg1)
  %v3_3d6e3 = call i32 @unknown_7bb77(i32 %v1_3d6d0, i32 %v1_3d6c3, i32 %arg3)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d6f4

bb:                                               ; preds = %dec_label_pc_3d699
  %v1_3d6f2 = call i32 @function_3d6f9()
  br label %dec_label_pc_3d6f4

dec_label_pc_3d6f4:                               ; preds = %bb, %dec_label_pc_3d699
  %v2_3d6f2 = phi i32 [ %v1_3d6f2, %bb ], [ 0, %dec_label_pc_3d699 ]
  ret i32 %v2_3d6f2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7a852, { 1, 0 }
}

define i32 @function_3d6f9() local_unnamed_addr {
dec_label_pc_3d6f9:
  %v0_3d6fe = load i32, i32* @eax, align 8
  ret i32 %v0_3d6fe
}

define i32 @_ZSt24__uninitialized_fill_n_aIP5CTxInjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3d6ff:
  %v7_3d73c = call i32 @unknown_7bc38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d74d

bb:                                               ; preds = %dec_label_pc_3d6ff
  %v1_3d74b = call i32 @function_3d752()
  br label %dec_label_pc_3d74d

dec_label_pc_3d74d:                               ; preds = %bb, %dec_label_pc_3d6ff
  %v2_3d74b = phi i32 [ %v1_3d74b, %bb ], [ 0, %dec_label_pc_3d6ff ]
  ret i32 %v2_3d74b

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3d752() local_unnamed_addr {
dec_label_pc_3d752:
  %v0_3d753 = load i32, i32* @eax, align 8
  ret i32 %v0_3d753
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE12_M_check_lenEjPKc(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d754:
  ret i32 %arg1
}

define i32 @function_3d75e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d75e:
  %v0_3d75e = load i32, i32* @eax, align 8
  %v1_3d75e = load i32, i32* @ebp, align 4
  %v2_3d75e = add i32 %v1_3d75e, -28
  %v3_3d75e = inttoptr i32 %v2_3d75e to i32*
  store i32 %v0_3d75e, i32* %v3_3d75e, align 4
  %v0_3d761 = load i32, i32* @ebp, align 4
  %v1_3d761 = add i32 %v0_3d761, 12
  %v2_3d761 = inttoptr i32 %v1_3d761 to i32*
  %v3_3d761 = load i32, i32* %v2_3d761, align 4
  %v2_3d764 = add i32 %v0_3d761, -32
  %v3_3d764 = inttoptr i32 %v2_3d764 to i32*
  store i32 %v3_3d761, i32* %v3_3d764, align 4
  %v0_3d767 = load i32, i32* @ebp, align 4
  %v1_3d767 = add i32 %v0_3d767, 16
  %v2_3d767 = inttoptr i32 %v1_3d767 to i32*
  %v3_3d767 = load i32, i32* %v2_3d767, align 4
  %v2_3d76a = add i32 %v0_3d767, -36
  %v3_3d76a = inttoptr i32 %v2_3d76a to i32*
  store i32 %v3_3d767, i32* %v3_3d76a, align 4
  %v0_3d76d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3d773 = load i32, i32* @ebp, align 4
  %v2_3d773 = add i32 %v1_3d773, -12
  %v3_3d773 = inttoptr i32 %v2_3d773 to i32*
  store i32 %v0_3d76d, i32* %v3_3d773, align 4
  %v0_3d778 = load i32, i32* @ebp, align 4
  %v1_3d778 = add i32 %v0_3d778, -28
  %v2_3d778 = inttoptr i32 %v1_3d778 to i32*
  %v3_3d778 = load i32, i32* %v2_3d778, align 4
  %v1_3d77e = call i32 @unknown_7bcdc(i32 %v3_3d778)
  %v0_3d785 = load i32, i32* @ebp, align 4
  %v1_3d785 = add i32 %v0_3d785, -28
  %v2_3d785 = inttoptr i32 %v1_3d785 to i32*
  %v3_3d785 = load i32, i32* %v2_3d785, align 4
  %v1_3d78b = call i32 @unknown_53e36(i32 %v3_3d785)
  %v2_3d792 = sub i32 %v1_3d77e, %v1_3d78b
  %v0_3d794 = load i32, i32* @ebp, align 4
  %v1_3d794 = add i32 %v0_3d794, -32
  %v2_3d794 = inttoptr i32 %v1_3d794 to i32*
  %v3_3d794 = load i32, i32* %v2_3d794, align 4
  %v7_3d797 = icmp ult i32 %v2_3d792, %v3_3d794
  %v5_3d79c = icmp eq i1 %v7_3d797, false
  br i1 %v5_3d79c, label %bb, label %dec_label_pc_3d7a0

bb:                                               ; preds = %dec_label_pc_3d75e
  %v1_3d79e = call i32 @function_3d7ab()
  %v0_3d7a0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3d7a0

dec_label_pc_3d7a0:                               ; preds = %bb, %dec_label_pc_3d75e
  %v0_3d7a0 = phi i32 [ %v0_3d7a0.pre, %bb ], [ %v0_3d794, %dec_label_pc_3d75e ]
  %v1_3d7a0 = add i32 %v0_3d7a0, -36
  %v2_3d7a0 = inttoptr i32 %v1_3d7a0 to i32*
  %v3_3d7a0 = load i32, i32* %v2_3d7a0, align 4
  ret i32 %v3_3d7a0
}

define i32 @function_3d7ab() local_unnamed_addr {
dec_label_pc_3d7ab:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3d7ab = load i32, i32* @ebp, align 4
  %v1_3d7ab = add i32 %v0_3d7ab, -28
  %v2_3d7ab = inttoptr i32 %v1_3d7ab to i32*
  %v3_3d7ab = load i32, i32* %v2_3d7ab, align 4
  %v1_3d7b1 = call i32 @unknown_53e36(i32 %v3_3d7ab)
  store i32 %v1_3d7b1, i32* %ebx.global-to-local, align 4
  %v0_3d7b8 = load i32, i32* @ebp, align 4
  %v1_3d7b8 = add i32 %v0_3d7b8, -28
  %v2_3d7b8 = inttoptr i32 %v1_3d7b8 to i32*
  %v3_3d7b8 = load i32, i32* %v2_3d7b8, align 4
  %v1_3d7be = call i32 @unknown_53e36(i32 %v3_3d7b8)
  %v1_3d7c3 = load i32, i32* @ebp, align 4
  %v2_3d7c3 = add i32 %v1_3d7c3, -20
  %v3_3d7c3 = inttoptr i32 %v2_3d7c3 to i32*
  store i32 %v1_3d7be, i32* %v3_3d7c3, align 4
  %v0_3d7c6 = load i32, i32* @ebp, align 4
  %v1_3d7c6 = add i32 %v0_3d7c6, -32
  %v1_3d7cd = add i32 %v0_3d7c6, -20
  %v2_3d7d3 = call i32 @unknown_655e9(i32 %v1_3d7cd, i32 %v1_3d7c6)
  %v1_3d7d8 = inttoptr i32 %v2_3d7d3 to i32*
  %v2_3d7d8 = load i32, i32* %v1_3d7d8, align 4
  %v1_3d7da = load i32, i32* %ebx.global-to-local, align 4
  %v2_3d7da = add i32 %v1_3d7da, %v2_3d7d8
  %v1_3d7dc = load i32, i32* @ebp, align 4
  %v2_3d7dc = add i32 %v1_3d7dc, -16
  %v3_3d7dc = inttoptr i32 %v2_3d7dc to i32*
  store i32 %v2_3d7da, i32* %v3_3d7dc, align 4
  %v0_3d7df = load i32, i32* @ebp, align 4
  %v1_3d7df = add i32 %v0_3d7df, -28
  %v2_3d7df = inttoptr i32 %v1_3d7df to i32*
  %v3_3d7df = load i32, i32* %v2_3d7df, align 4
  %v1_3d7e5 = call i32 @unknown_53e36(i32 %v3_3d7df)
  %v1_3d7ea = load i32, i32* @ebp, align 4
  %v2_3d7ea = add i32 %v1_3d7ea, -16
  %v3_3d7ea = inttoptr i32 %v2_3d7ea to i32*
  %v4_3d7ea = load i32, i32* %v3_3d7ea, align 4
  %tmp5 = icmp ugt i32 %v1_3d7e5, %v4_3d7ea
  br i1 %tmp5, label %dec_label_pc_3d7ff, label %dec_label_pc_3d7ef

dec_label_pc_3d7ef:                               ; preds = %dec_label_pc_3d7ab
  %v1_3d7ef = add i32 %v1_3d7ea, -28
  %v2_3d7ef = inttoptr i32 %v1_3d7ef to i32*
  %v3_3d7ef = load i32, i32* %v2_3d7ef, align 4
  %v1_3d7f5 = call i32 @unknown_7bcdc(i32 %v3_3d7ef)
  %v1_3d7fa = load i32, i32* @ebp, align 4
  %v2_3d7fa = add i32 %v1_3d7fa, -16
  %v3_3d7fa = inttoptr i32 %v2_3d7fa to i32*
  %v4_3d7fa = load i32, i32* %v3_3d7fa, align 4
  %v10_3d7fa = icmp ult i32 %v1_3d7f5, %v4_3d7fa
  %v1_3d7fd = icmp eq i1 %v10_3d7fa, false
  br i1 %v1_3d7fd, label %dec_label_pc_3d80f, label %dec_label_pc_3d7ff

dec_label_pc_3d7ff:                               ; preds = %dec_label_pc_3d7ab, %dec_label_pc_3d7ef
  %v0_3d7ff = phi i32 [ %v1_3d7ea, %dec_label_pc_3d7ab ], [ %v1_3d7fa, %dec_label_pc_3d7ef ]
  %v1_3d7ff = add i32 %v0_3d7ff, -28
  %v2_3d7ff = inttoptr i32 %v1_3d7ff to i32*
  %v3_3d7ff = load i32, i32* %v2_3d7ff, align 4
  %v1_3d805 = call i32 @unknown_7bcdc(i32 %v3_3d7ff)
  %v0_3d80f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3d80f

dec_label_pc_3d80f:                               ; preds = %dec_label_pc_3d7ef, %dec_label_pc_3d7ff
  %v0_3d80f = phi i32 [ %v0_3d80f.pre, %dec_label_pc_3d7ff ], [ %v1_3d7fa, %dec_label_pc_3d7ef ]
  %storemerge = phi i32 [ %v1_3d805, %dec_label_pc_3d7ff ], [ %v4_3d7fa, %dec_label_pc_3d7ef ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_3d80f = add i32 %v0_3d80f, -12
  %v2_3d80f = inttoptr i32 %v1_3d80f to i32*
  %v3_3d80f = load i32, i32* %v2_3d80f, align 4
  %v1_3d812 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3d812 = icmp eq i32 %v1_3d812, %v3_3d80f
  br i1 %v3_3d812, label %bb, label %dec_label_pc_3d81b

bb:                                               ; preds = %dec_label_pc_3d80f
  %v1_3d819 = call i32 @function_3d820()
  br label %dec_label_pc_3d81b

dec_label_pc_3d81b:                               ; preds = %bb, %dec_label_pc_3d80f
  %v3_3d819 = phi i32 [ %v1_3d819, %bb ], [ %storemerge, %dec_label_pc_3d80f ]
  ret i32 %v3_3d819

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7bcdc, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_53e36, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_3d80f, { 1, 0 }
  uselistorder label %dec_label_pc_3d7ff, { 1, 0 }
}

define i32 @function_3d820() local_unnamed_addr {
dec_label_pc_3d820:
  %v0_3d825 = load i32, i32* @eax, align 8
  ret i32 %v0_3d825
}

define i32 @_Z11UnserializeI11CDataStream9COutPointEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3d826:
  %v8_3d86a = call i32 @unknown_7bdec(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d87b

bb:                                               ; preds = %dec_label_pc_3d826
  %v1_3d879 = call i32 @function_3d880()
  br label %dec_label_pc_3d87b

dec_label_pc_3d87b:                               ; preds = %bb, %dec_label_pc_3d826
  %v2_3d879 = phi i32 [ %v1_3d879, %bb ], [ 0, %dec_label_pc_3d826 ]
  ret i32 %v2_3d879

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3d880() local_unnamed_addr {
dec_label_pc_3d880:
  %v0_3d881 = load i32, i32* @eax, align 8
  ret i32 %v0_3d881
}

define i32 @_Z11UnserializeI11CDataStreamEvRT_R7CScriptii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d882:
  ret i32 %arg3
}

define i32 @function_3d89a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d89a:
  %v0_3d89a = load i32, i32* @ebp, align 4
  %v1_3d89a = add i32 %v0_3d89a, 20
  %v2_3d89a = inttoptr i32 %v1_3d89a to i32*
  %v3_3d89a = load i32, i32* %v2_3d89a, align 4
  %v2_3d89d = add i32 %v0_3d89a, -40
  %v3_3d89d = inttoptr i32 %v2_3d89d to i32*
  store i32 %v3_3d89a, i32* %v3_3d89d, align 4
  %v0_3d8a0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3d8a6 = load i32, i32* @ebp, align 4
  %v2_3d8a6 = add i32 %v1_3d8a6, -12
  %v3_3d8a6 = inttoptr i32 %v2_3d8a6 to i32*
  store i32 %v0_3d8a0, i32* %v3_3d8a6, align 4
  %v0_3d8ab = load i32, i32* @ebp, align 4
  %v1_3d8ab = add i32 %v0_3d8ab, -32
  %v2_3d8ab = inttoptr i32 %v1_3d8ab to i32*
  %v3_3d8ab = load i32, i32* %v2_3d8ab, align 4
  %v1_3d8ae = add i32 %v0_3d8ab, -40
  %v2_3d8ae = inttoptr i32 %v1_3d8ae to i32*
  %v3_3d8ae = load i32, i32* %v2_3d8ae, align 4
  %v1_3d8b5 = add i32 %v0_3d8ab, -36
  %v2_3d8b5 = inttoptr i32 %v1_3d8b5 to i32*
  %v3_3d8b5 = load i32, i32* %v2_3d8b5, align 4
  %v1_3d8c0 = add i32 %v0_3d8ab, -28
  %v2_3d8c0 = inttoptr i32 %v1_3d8c0 to i32*
  %v3_3d8c0 = load i32, i32* %v2_3d8c0, align 4
  %v4_3d8c6 = call i32 @unknown_7bee7(i32 %v3_3d8c0, i32 %v3_3d8ab, i32 %v3_3d8b5, i32 %v3_3d8ae)
  %v0_3d8cb = load i32, i32* @ebp, align 4
  %v1_3d8cb = add i32 %v0_3d8cb, -12
  %v2_3d8cb = inttoptr i32 %v1_3d8cb to i32*
  %v3_3d8cb = load i32, i32* %v2_3d8cb, align 4
  %v1_3d8ce = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3d8ce = xor i32 %v1_3d8ce, %v3_3d8cb
  store i1 false, i1* @cf, align 1
  %v3_3d8ce = icmp eq i32 %v2_3d8ce, 0
  store i32 %v2_3d8ce, i32* @eax, align 8
  br i1 %v3_3d8ce, label %bb, label %dec_label_pc_3d8d7

bb:                                               ; preds = %dec_label_pc_3d89a
  %v1_3d8d5 = call i32 @function_3d8dc()
  br label %dec_label_pc_3d8d7

dec_label_pc_3d8d7:                               ; preds = %bb, %dec_label_pc_3d89a
  %v3_3d8d5 = phi i32 [ %v1_3d8d5, %bb ], [ %v2_3d8ce, %dec_label_pc_3d89a ]
  ret i32 %v3_3d8d5

; uselistorder directives
  uselistorder i32 %v0_3d8ab, { 1, 0, 2, 3 }
}

define i32 @function_3d8dc() local_unnamed_addr {
dec_label_pc_3d8dc:
  %v0_3d8dd = load i32, i32* @eax, align 8
  ret i32 %v0_3d8dd
}

define i32 @_ZN9__gnu_cxxmiIP6CTxOutSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3d8de:
  %v1_3d902 = call i32 @unknown_7b278(i32 %arg1)
  %v1_3d907 = inttoptr i32 %v1_3d902 to i32*
  %v2_3d907 = load i32, i32* %v1_3d907, align 4
  %v1_3d911 = call i32 @unknown_7b278(i32 %arg2)
  %v1_3d916 = inttoptr i32 %v1_3d911 to i32*
  %v2_3d916 = load i32, i32* %v1_3d916, align 4
  %v2_3d91a = sub i32 %v2_3d907, %v2_3d916
  %v2_3d91e = sdiv i32 %v2_3d91a, 4
  %v3_3d921 = mul i32 %v2_3d91e, -858993459
  store i32 %v3_3d921, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d933

bb:                                               ; preds = %dec_label_pc_3d8de
  %v1_3d931 = call i32 @function_3d938()
  br label %dec_label_pc_3d933

dec_label_pc_3d933:                               ; preds = %bb, %dec_label_pc_3d8de
  %v2_3d931 = phi i32 [ %v1_3d931, %bb ], [ %v3_3d921, %dec_label_pc_3d8de ]
  ret i32 %v2_3d931

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7b278, { 1, 0 }
}

define i32 @function_3d938() local_unnamed_addr {
dec_label_pc_3d938:
  %v0_3d93d = load i32, i32* @eax, align 8
  ret i32 %v0_3d93d
}

define i32 @_ZSt22__uninitialized_move_aIP6CTxOutS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3d93e:
  %v8_3d982 = call i32 @unknown_78ef9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_3d982, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d993

bb:                                               ; preds = %dec_label_pc_3d93e
  %v1_3d991 = call i32 @function_3d998()
  br label %dec_label_pc_3d993

dec_label_pc_3d993:                               ; preds = %bb, %dec_label_pc_3d93e
  %v2_3d991 = phi i32 [ %v1_3d991, %bb ], [ %v8_3d982, %dec_label_pc_3d93e ]
  ret i32 %v2_3d991

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3d998() local_unnamed_addr {
dec_label_pc_3d998:
  %v0_3d999 = load i32, i32* @eax, align 8
  ret i32 %v0_3d999
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d99a:
  store i32 %arg1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3d9c0

bb:                                               ; preds = %dec_label_pc_3d99a
  %v2_3d9be = call i32 @function_3d9c5(i32 %arg1)
  br label %dec_label_pc_3d9c0

dec_label_pc_3d9c0:                               ; preds = %bb, %dec_label_pc_3d99a
  %v3_3d9be = phi i32 [ %v2_3d9be, %bb ], [ %arg1, %dec_label_pc_3d99a ]
  ret i32 %v3_3d9be
}

define i32 @function_3d9c5(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d9c5:
  %v0_3d9c6 = load i32, i32* @eax, align 8
  ret i32 %v0_3d9c6
}

define i32 @_ZSt13copy_backwardIP6CTxOutS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d9c7:
  %v1_3d9f1 = call i32 @unknown_798c3(i32 %arg2)
  %v1_3d9fe = call i32 @unknown_798c3(i32 %arg1)
  %v3_3da11 = call i32 @unknown_7c08f(i32 %v1_3d9fe, i32 %v1_3d9f1, i32 %arg3)
  store i32 %v3_3da11, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3da22

bb:                                               ; preds = %dec_label_pc_3d9c7
  %v1_3da20 = call i32 @function_3da27()
  br label %dec_label_pc_3da22

dec_label_pc_3da22:                               ; preds = %bb, %dec_label_pc_3d9c7
  %v2_3da20 = phi i32 [ %v1_3da20, %bb ], [ %v3_3da11, %dec_label_pc_3d9c7 ]
  ret i32 %v2_3da20

; uselistorder directives
  uselistorder i32 (i32)* @unknown_798c3, { 1, 0 }
}

define i32 @function_3da27() local_unnamed_addr {
dec_label_pc_3da27:
  %v0_3da2c = load i32, i32* @eax, align 8
  ret i32 %v0_3da2c
}

define i32 @_ZSt4fillIP6CTxOutS0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3da2d:
  %v1_3da57 = call i32 @unknown_7ae75(i32 %arg2)
  %v1_3da64 = call i32 @unknown_7ae75(i32 %arg1)
  %v3_3da77 = call i32 @unknown_7c167(i32 %v1_3da64, i32 %v1_3da57, i32 %arg3)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3da88

bb:                                               ; preds = %dec_label_pc_3da2d
  %v1_3da86 = call i32 @function_3da8d()
  br label %dec_label_pc_3da88

dec_label_pc_3da88:                               ; preds = %bb, %dec_label_pc_3da2d
  %v2_3da86 = phi i32 [ %v1_3da86, %bb ], [ 0, %dec_label_pc_3da2d ]
  ret i32 %v2_3da86

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7ae75, { 1, 0 }
}

define i32 @function_3da8d() local_unnamed_addr {
dec_label_pc_3da8d:
  %v0_3da92 = load i32, i32* @eax, align 8
  ret i32 %v0_3da92
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3da94:
  %v1_3dabe = call i32 @unknown_7c22a(i32 %arg1)
  %v1_3dacb = call i32 @unknown_54340(i32 %arg1)
  %v2_3dad2 = sub i32 %v1_3dabe, %v1_3dacb
  %v7_3dad7 = icmp ult i32 %v2_3dad2, %arg2
  %v5_3dadc = icmp eq i1 %v7_3dad7, false
  br i1 %v5_3dadc, label %bb, label %dec_label_pc_3dae0

bb:                                               ; preds = %dec_label_pc_3da94
  %v1_3dade = call i32 @function_3daeb()
  br label %dec_label_pc_3dae0

dec_label_pc_3dae0:                               ; preds = %bb, %dec_label_pc_3da94
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3dae4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3dae4:
  %v0_3dae4 = load i32, i32* @eax, align 8
  %v2_3dae4 = add i32 %v0_3dae4, 36
  %v16_3dae4 = and i32 %v2_3dae4, 255
  %v18_3dae4 = and i32 %v0_3dae4, -256
  %v19_3dae4 = or i32 %v16_3dae4, %v18_3dae4
  ret i32 %v19_3dae4

; uselistorder directives
  uselistorder i32 %v0_3dae4, { 1, 0 }
}

define i32 @function_3daeb() local_unnamed_addr {
dec_label_pc_3daeb:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3daeb = load i32, i32* @ebp, align 4
  %v1_3daeb = add i32 %v0_3daeb, -28
  %v2_3daeb = inttoptr i32 %v1_3daeb to i32*
  %v3_3daeb = load i32, i32* %v2_3daeb, align 4
  %v1_3daf1 = call i32 @unknown_54340(i32 %v3_3daeb)
  store i32 %v1_3daf1, i32* %ebx.global-to-local, align 4
  %v0_3daf8 = load i32, i32* @ebp, align 4
  %v1_3daf8 = add i32 %v0_3daf8, -28
  %v2_3daf8 = inttoptr i32 %v1_3daf8 to i32*
  %v3_3daf8 = load i32, i32* %v2_3daf8, align 4
  %v1_3dafe = call i32 @unknown_54340(i32 %v3_3daf8)
  %v1_3db03 = load i32, i32* @ebp, align 4
  %v2_3db03 = add i32 %v1_3db03, -20
  %v3_3db03 = inttoptr i32 %v2_3db03 to i32*
  store i32 %v1_3dafe, i32* %v3_3db03, align 4
  %v0_3db06 = load i32, i32* @ebp, align 4
  %v1_3db06 = add i32 %v0_3db06, -32
  %v1_3db0d = add i32 %v0_3db06, -20
  %v2_3db13 = call i32 @unknown_65929(i32 %v1_3db0d, i32 %v1_3db06)
  %v1_3db18 = inttoptr i32 %v2_3db13 to i32*
  %v2_3db18 = load i32, i32* %v1_3db18, align 4
  %v1_3db1a = load i32, i32* %ebx.global-to-local, align 4
  %v2_3db1a = add i32 %v1_3db1a, %v2_3db18
  %v1_3db1c = load i32, i32* @ebp, align 4
  %v2_3db1c = add i32 %v1_3db1c, -16
  %v3_3db1c = inttoptr i32 %v2_3db1c to i32*
  store i32 %v2_3db1a, i32* %v3_3db1c, align 4
  %v0_3db1f = load i32, i32* @ebp, align 4
  %v1_3db1f = add i32 %v0_3db1f, -28
  %v2_3db1f = inttoptr i32 %v1_3db1f to i32*
  %v3_3db1f = load i32, i32* %v2_3db1f, align 4
  %v1_3db25 = call i32 @unknown_54340(i32 %v3_3db1f)
  %v1_3db2a = load i32, i32* @ebp, align 4
  %v2_3db2a = add i32 %v1_3db2a, -16
  %v3_3db2a = inttoptr i32 %v2_3db2a to i32*
  %v4_3db2a = load i32, i32* %v3_3db2a, align 4
  %tmp5 = icmp ugt i32 %v1_3db25, %v4_3db2a
  br i1 %tmp5, label %dec_label_pc_3db3f, label %dec_label_pc_3db2f

dec_label_pc_3db2f:                               ; preds = %dec_label_pc_3daeb
  %v1_3db2f = add i32 %v1_3db2a, -28
  %v2_3db2f = inttoptr i32 %v1_3db2f to i32*
  %v3_3db2f = load i32, i32* %v2_3db2f, align 4
  %v1_3db35 = call i32 @unknown_7c22a(i32 %v3_3db2f)
  %v1_3db3a = load i32, i32* @ebp, align 4
  %v2_3db3a = add i32 %v1_3db3a, -16
  %v3_3db3a = inttoptr i32 %v2_3db3a to i32*
  %v4_3db3a = load i32, i32* %v3_3db3a, align 4
  %v10_3db3a = icmp ult i32 %v1_3db35, %v4_3db3a
  %v1_3db3d = icmp eq i1 %v10_3db3a, false
  br i1 %v1_3db3d, label %dec_label_pc_3db4f, label %dec_label_pc_3db3f

dec_label_pc_3db3f:                               ; preds = %dec_label_pc_3daeb, %dec_label_pc_3db2f
  %v0_3db3f = phi i32 [ %v1_3db2a, %dec_label_pc_3daeb ], [ %v1_3db3a, %dec_label_pc_3db2f ]
  %v1_3db3f = add i32 %v0_3db3f, -28
  %v2_3db3f = inttoptr i32 %v1_3db3f to i32*
  %v3_3db3f = load i32, i32* %v2_3db3f, align 4
  %v1_3db45 = call i32 @unknown_7c22a(i32 %v3_3db3f)
  %v0_3db4f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3db4f

dec_label_pc_3db4f:                               ; preds = %dec_label_pc_3db2f, %dec_label_pc_3db3f
  %v0_3db4f = phi i32 [ %v0_3db4f.pre, %dec_label_pc_3db3f ], [ %v1_3db3a, %dec_label_pc_3db2f ]
  %storemerge = phi i32 [ %v1_3db45, %dec_label_pc_3db3f ], [ %v4_3db3a, %dec_label_pc_3db2f ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_3db4f = add i32 %v0_3db4f, -12
  %v2_3db4f = inttoptr i32 %v1_3db4f to i32*
  %v3_3db4f = load i32, i32* %v2_3db4f, align 4
  %v1_3db52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3db52 = icmp eq i32 %v1_3db52, %v3_3db4f
  br i1 %v3_3db52, label %bb, label %dec_label_pc_3db5b

bb:                                               ; preds = %dec_label_pc_3db4f
  %v1_3db59 = call i32 @function_3db60()
  br label %dec_label_pc_3db5b

dec_label_pc_3db5b:                               ; preds = %bb, %dec_label_pc_3db4f
  %v2_3db59 = phi i32 [ %v1_3db59, %bb ], [ %storemerge, %dec_label_pc_3db4f ]
  ret i32 %v2_3db59

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7c22a, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_54340, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_3db4f, { 1, 0 }
  uselistorder label %dec_label_pc_3db3f, { 1, 0 }
}

define i32 @function_3db60() local_unnamed_addr {
dec_label_pc_3db60:
  %v0_3db65 = load i32, i32* @eax, align 8
  ret i32 %v0_3db65
}

define i32 @_ZN6CTxOutaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3db66:
  ret i32 %arg2
}

define i32 @function_3db7a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3db7a:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3db7a = load i32, i32* @eax, align 8
  %v1_3db7a = trunc i32 %v0_3db7a to i8
  %v2_3db7a = load i1, i1* @cf, align 1
  %v3_3db7a = zext i1 %v2_3db7a to i8
  %v4_3db7a = add i8 %v3_3db7a, %v1_3db7a
  %v22_3db7a = zext i8 %v4_3db7a to i32
  %v24_3db7a = and i32 %v0_3db7a, -256
  %v25_3db7a = or i32 %v22_3db7a, %v24_3db7a
  store i32 %v25_3db7a, i32* %eax.global-to-local, align 8
  %v1_3db7c = inttoptr i32 %v25_3db7a to i8*
  %v2_3db7c = load i8, i8* %v1_3db7c, align 1
  %v5_3db7c = add i8 %v2_3db7c, %v4_3db7a
  store i8 %v5_3db7c, i8* %v1_3db7c, align 1
  %v0_3db7e = load i32, i32* %eax.global-to-local, align 8
  %v1_3db7e = load i32, i32* @ebp, align 4
  %v2_3db7e = add i32 %v1_3db7e, -12
  %v3_3db7e = inttoptr i32 %v2_3db7e to i32*
  store i32 %v0_3db7e, i32* %v3_3db7e, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3db83 = load i32, i32* @ebp, align 4
  %v1_3db83 = add i32 %v0_3db83, -32
  %v2_3db83 = inttoptr i32 %v1_3db83 to i32*
  %v3_3db83 = load i32, i32* %v2_3db83, align 4
  store i32 %v3_3db83, i32* %eax.global-to-local, align 8
  %v1_3db86 = add i32 %v3_3db83, 4
  %v2_3db86 = inttoptr i32 %v1_3db86 to i32*
  %v3_3db86 = load i32, i32* %v2_3db86, align 4
  store i32 %v3_3db86, i32* %edx.global-to-local, align 4
  %v1_3db89 = inttoptr i32 %v3_3db83 to i32*
  %v2_3db89 = load i32, i32* %v1_3db89, align 4
  store i32 %v2_3db89, i32* %eax.global-to-local, align 8
  %v1_3db8b = add i32 %v0_3db83, -28
  %v2_3db8b = inttoptr i32 %v1_3db8b to i32*
  %v3_3db8b = load i32, i32* %v2_3db8b, align 4
  store i32 %v3_3db8b, i32* @ecx, align 8
  %v2_3db8e = inttoptr i32 %v3_3db8b to i32*
  store i32 %v2_3db89, i32* %v2_3db8e, align 4
  %v0_3db90 = load i32, i32* %edx.global-to-local, align 4
  %v1_3db90 = load i32, i32* @ecx, align 8
  %v2_3db90 = add i32 %v1_3db90, 4
  %v3_3db90 = inttoptr i32 %v2_3db90 to i32*
  store i32 %v0_3db90, i32* %v3_3db90, align 4
  %v0_3db93 = load i32, i32* @ebp, align 4
  %v1_3db93 = add i32 %v0_3db93, -32
  %v2_3db93 = inttoptr i32 %v1_3db93 to i32*
  %v3_3db93 = load i32, i32* %v2_3db93, align 4
  store i32 %v3_3db93, i32* %eax.global-to-local, align 8
  %v1_3db96 = add i32 %v3_3db93, 8
  store i32 %v1_3db96, i32* %edx.global-to-local, align 4
  %v1_3db99 = add i32 %v0_3db93, -28
  %v2_3db99 = inttoptr i32 %v1_3db99 to i32*
  %v3_3db99 = load i32, i32* %v2_3db99, align 4
  %v1_3db9c = add i32 %v3_3db99, 8
  store i32 %v1_3db9c, i32* %eax.global-to-local, align 8
  %v2_3dba6 = call i32 @unknown_5184e(i32 %v1_3db9c, i32 %v1_3db96)
  store i32 %v2_3dba6, i32* %eax.global-to-local, align 8
  %v0_3dbab = load i32, i32* @ebp, align 4
  %v1_3dbab = add i32 %v0_3dbab, -28
  %v2_3dbab = inttoptr i32 %v1_3dbab to i32*
  %v3_3dbab = load i32, i32* %v2_3dbab, align 4
  store i32 %v3_3dbab, i32* @eax, align 8
  %v1_3dbae = add i32 %v0_3dbab, -12
  %v2_3dbae = inttoptr i32 %v1_3dbae to i32*
  %v3_3dbae = load i32, i32* %v2_3dbae, align 4
  store i32 %v3_3dbae, i32* %edx.global-to-local, align 4
  %v1_3dbb1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3dbb1 = xor i32 %v1_3dbb1, %v3_3dbae
  %v3_3dbb1 = icmp eq i32 %v2_3dbb1, 0
  store i32 %v2_3dbb1, i32* %edx.global-to-local, align 4
  br i1 %v3_3dbb1, label %bb, label %dec_label_pc_3dbba

bb:                                               ; preds = %dec_label_pc_3db7a
  %v1_3dbb8 = call i32 @function_3dbbf()
  store i32 %v1_3dbb8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3dbba

dec_label_pc_3dbba:                               ; preds = %bb, %dec_label_pc_3db7a
  %v2_3dbb8 = phi i32 [ %v1_3dbb8, %bb ], [ %v3_3dbab, %dec_label_pc_3db7a ]
  ret i32 %v2_3dbb8
}

define i32 @function_3dbbf() local_unnamed_addr {
dec_label_pc_3dbbf:
  %v0_3dbc0 = load i32, i32* @eax, align 8
  ret i32 %v0_3dbc0
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv() local_unnamed_addr {
dec_label_pc_3dbc2:
  %eax.global-to-local = alloca i32, align 4
  %v5_3dbc2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3dbc2
}

define i32 @function_3dbc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3dbc4:
  %v0_3dbc7 = load i32, i32* @ebx, align 4
  %v1_3dbc7 = add i32 %v0_3dbc7, 1166608453
  %v2_3dbc7 = inttoptr i32 %v1_3dbc7 to i8*
  %v3_3dbc7 = load i8, i8* %v2_3dbc7, align 1
  %v4_3dbc7 = load i32, i32* @ecx, align 8
  %v5_3dbc7 = trunc i32 %v4_3dbc7 to i8
  %v6_3dbc7 = sub i8 %v3_3dbc7, %v5_3dbc7
  store i8 %v6_3dbc7, i8* %v2_3dbc7, align 1
  %v0_3dbcf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3dbd4 = load i32, i32* @ebp, align 4
  %v2_3dbd4 = add i32 %v1_3dbd4, -12
  %v3_3dbd4 = inttoptr i32 %v2_3dbd4 to i32*
  store i32 %v0_3dbcf, i32* %v3_3dbd4, align 4
  %v0_3dbd9 = load i32, i32* @ebp, align 4
  %v1_3dbd9 = add i32 %v0_3dbd9, -28
  %v2_3dbd9 = inttoptr i32 %v1_3dbd9 to i32*
  %v3_3dbd9 = load i32, i32* %v2_3dbd9, align 4
  %v1_3dbdc = inttoptr i32 %v3_3dbd9 to i32*
  %v2_3dbdc = load i32, i32* %v1_3dbdc, align 4
  store i32 %v2_3dbdc, i32* @eax, align 8
  %v1_3dbde = add i32 %v0_3dbd9, -12
  %v2_3dbde = inttoptr i32 %v1_3dbde to i32*
  %v3_3dbde = load i32, i32* %v2_3dbde, align 4
  %v1_3dbe1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3dbe1 = icmp eq i32 %v1_3dbe1, %v3_3dbde
  br i1 %v3_3dbe1, label %bb, label %dec_label_pc_3dbea

bb:                                               ; preds = %dec_label_pc_3dbc4
  %v1_3dbe8 = call i32 @function_3dbef()
  br label %dec_label_pc_3dbea

dec_label_pc_3dbea:                               ; preds = %bb, %dec_label_pc_3dbc4
  %v2_3dbe8 = phi i32 [ %v1_3dbe8, %bb ], [ %v2_3dbdc, %dec_label_pc_3dbc4 ]
  ret i32 %v2_3dbe8

; uselistorder directives
  uselistorder i32 1166608453, { 0, 2, 1 }
}

define i32 @function_3dbef() local_unnamed_addr {
dec_label_pc_3dbef:
  %v0_3dbf0 = load i32, i32* @eax, align 8
  ret i32 %v0_3dbf0
}

define i32 @_ZN5boost17recursive_wrapperISt6vectorIN11json_spirit10Value_implINS2_13Config_vectorISsEEEESaIS6_EEE11get_pointerEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3dbf2:
  %v2_3dc0c = load i32, i32* %arg1, align 4
  store i32 %v2_3dc0c, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3dc1a

bb:                                               ; preds = %dec_label_pc_3dbf2
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_3dc18 = call i32 @function_3dc1f(i32 %tmp100)
  br label %dec_label_pc_3dc1a

dec_label_pc_3dc1a:                               ; preds = %bb, %dec_label_pc_3dbf2
  %v3_3dc18 = phi i32 [ %v2_3dc18, %bb ], [ %v2_3dc0c, %dec_label_pc_3dbf2 ]
  ret i32 %v3_3dc18

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3dc1f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3dc1f:
  %v0_3dc20 = load i32, i32* @eax, align 8
  ret i32 %v0_3dc20
}

define i32 @_ZNKSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE8capacityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3dc22:
  %v1_3dc3c = add i32 %arg1, 8
  %v2_3dc3c = inttoptr i32 %v1_3dc3c to i32*
  %v3_3dc3c = load i32, i32* %v2_3dc3c, align 4
  ret i32 %v3_3dc3c
}

define i32 @function_3dc40(i32 %arg1) local_unnamed_addr {
dec_label_pc_3dc40:
  %v0_3dc40 = load i32, i32* @eax, align 8
  ret i32 %v0_3dc40
}

define i32 @function_3dc65() local_unnamed_addr {
dec_label_pc_3dc65:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3dc65 = load i32, i32* %ecx.global-to-local, align 8
  %v1_3dc65 = add i32 %v0_3dc65, -1
  store i32 %v1_3dc65, i32* %ecx.global-to-local, align 8
  %v0_3dc67 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3dc67
}

define i32 @_ZNSt6vectorIN11json_spirit9Pair_implINS0_13Config_vectorISsEEEESaIS4_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEEEPS4_jT_SE_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3dc68:
  %v2_3dc9f = call i32 @unknown_6286c(i32 %arg1, i32 %arg2)
  %v1_3dcad = call i32 @unknown_5b482(i32 %arg1)
  %v4_3dcca = call i32 @unknown_5bdd6(i32 %arg3, i32 %arg4, i32 %v2_3dc9f, i32 %v1_3dcad)
  store i32 %v2_3dc9f, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3dcde

bb:                                               ; preds = %dec_label_pc_3dc68
  %v1_3dcdc = call i32 @function_3dd1c()
  store i32 %v1_3dcdc, i32* @eax, align 8
  br label %dec_label_pc_3dcde

dec_label_pc_3dcde:                               ; preds = %bb, %dec_label_pc_3dc68
  %v0_3dcde = call i32 @function_3dd17()
  ret i32 %v0_3dcde

; uselistorder directives
  uselistorder i32 %v2_3dc9f, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3dce1() local_unnamed_addr {
dec_label_pc_3dce1:
  %eax.global-to-local = alloca i32, align 4
  %v0_3dce1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3dce1
}

define i32 @function_3dce4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3dce4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3dd17() local_unnamed_addr {
dec_label_pc_3dd17:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3dd1c() local_unnamed_addr {
dec_label_pc_3dd1c:
  %v0_3dd21 = load i32, i32* @eax, align 8
  ret i32 %v0_3dd21
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET0_T_SG_SF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3dd22:
  %stack_var_-20 = alloca i32, align 4
  %v2_3dd4b = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_3dd4b
}

define x86_fp80 @function_3dd6e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3dd6e:
  %v0_3dd6e = load i32, i32* @edi, align 4
  %v1_3dd6e = urem i32 %v0_3dd6e, 4
  store i32 %v1_3dd6e, i32* @edi, align 4
  %v0_3dd71 = load i32, i32* @ebx, align 4
  %v1_3dd71 = add i32 %v0_3dd71, 1166738668
  %v2_3dd71 = inttoptr i32 %v1_3dd71 to i8*
  %v3_3dd71 = load i8, i8* %v2_3dd71, align 1
  %v4_3dd71 = load i32, i32* @eax, align 8
  %v5_3dd71 = trunc i32 %v4_3dd71 to i8
  %v6_3dd71 = add i8 %v5_3dd71, %v3_3dd71
  store i8 %v6_3dd71, i8* %v2_3dd71, align 1
  %v1_3dd7a = load i32, i32* @ecx, align 8
  %v2_3dd7a = add i32 %v1_3dd7a, -1962138540
  %v3_3dd7a = inttoptr i32 %v2_3dd7a to float*
  %v4_3dd7a = load float, float* %v3_3dd7a, align 4
  %v5_3dd7a = fpext float %v4_3dd7a to x86_fp80
  %v6_3dd7a = load x86_fp80, x86_fp80* @st0, align 4
  %v7_3dd7a = fmul x86_fp80 %v5_3dd7a, %v6_3dd7a
  ret x86_fp80 %v7_3dd7a

; uselistorder directives
  uselistorder x86_fp80* @st0, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1 }
  uselistorder i32 1166738668, { 1, 2, 0 }
}

define i32 @function_3dda3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3dda3:
  %zf.global-to-local = alloca i1, align 1
  %v2_3dda3 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3dda3 = load i32, i32* @eax, align 8
  %v4_3dda3 = trunc i32 %v3_3dda3 to i8
  %v5_3dda3 = add i8 %v4_3dda3, %v2_3dda3
  %v15_3dda3 = icmp eq i8 %v5_3dda3, 0
  store i1 %v15_3dda3, i1* %zf.global-to-local, align 1
  %v21_3dda3 = inttoptr i32 %v3_3dda3 to i8*
  store i8 %v5_3dda3, i8* %v21_3dda3, align 1
  %v0_3dda5 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_3dda5, label %bb, label %dec_label_pc_3dda3.dec_label_pc_3dda7_crit_edge

dec_label_pc_3dda3.dec_label_pc_3dda7_crit_edge:  ; preds = %dec_label_pc_3dda3
  %v2_3dda5.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3dda7

bb:                                               ; preds = %dec_label_pc_3dda3
  %v1_3dda5 = call i32 @function_3ddac()
  br label %dec_label_pc_3dda7

dec_label_pc_3dda7:                               ; preds = %dec_label_pc_3dda3.dec_label_pc_3dda7_crit_edge, %bb
  %v2_3dda5 = phi i32 [ %v2_3dda5.pre, %dec_label_pc_3dda3.dec_label_pc_3dda7_crit_edge ], [ %v1_3dda5, %bb ]
  ret i32 %v2_3dda5

; uselistorder directives
  uselistorder label %dec_label_pc_3dda7, { 1, 0 }
}

define i32 @function_3ddac() local_unnamed_addr {
dec_label_pc_3ddac:
  %v0_3ddad = load i32, i32* @eax, align 8
  ret i32 %v0_3ddad
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEES6_EvT_SC_RSaIT0_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ddb0:
  ret i32 %arg1
}

define i32 @function_3ddbd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3ddbd:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_3ddbd = load i32, i32* @ebp, align 4
  %v0_3ddbe = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3ddbe = or i32 %v0_3ddbe, 137
  store i32 %v11_3ddbe, i32* %eax.global-to-local, align 8
  %v0_3ddc1 = load i32, i32* @ecx, align 8
  %v1_3ddc1 = add i32 %v0_3ddc1, -1
  store i32 %v1_3ddc1, i32* @ecx, align 8
  %v1_3ddc3 = add i32 %v0_3ddbd, 3
  store i32 %v1_3ddc3, i32* @ebp, align 4
  %v1_3ddc4 = add i32 %v0_3ddc1, -1587159996
  %v2_3ddc4 = inttoptr i32 %v1_3ddc4 to i8*
  %v3_3ddc4 = load i8, i8* %v2_3ddc4, align 1
  %v5_3ddc4 = trunc i32 %v1_3ddc1 to i8
  %v8_3ddc4 = add i8 %v3_3ddc4, %v5_3ddc4
  %v28_3ddc4 = icmp ult i8 %v8_3ddc4, %v3_3ddc4
  store i1 %v28_3ddc4, i1* %cf.global-to-local, align 1
  store i8 %v8_3ddc4, i8* %v2_3ddc4, align 1
  %v0_3ddca = load i32, i32* %eax.global-to-local, align 8
  %v1_3ddca = trunc i32 %v0_3ddca to i8
  %v2_3ddca = load i1, i1* %cf.global-to-local, align 1
  %v3_3ddca = zext i1 %v2_3ddca to i8
  %v4_3ddca = add i8 %v3_3ddca, %v1_3ddca
  %v19_3ddca = icmp ule i8 %v4_3ddca, %v1_3ddca
  %v21_3ddca = icmp eq i1 %v2_3ddca, %v19_3ddca
  store i1 %v21_3ddca, i1* %cf.global-to-local, align 1
  %v22_3ddca = zext i8 %v4_3ddca to i32
  %v24_3ddca = and i32 %v0_3ddca, -256
  %v25_3ddca = or i32 %v22_3ddca, %v24_3ddca
  store i32 %v25_3ddca, i32* %eax.global-to-local, align 8
  %v1_3ddcc = inttoptr i32 %v25_3ddca to i8*
  %v2_3ddcc = load i8, i8* %v1_3ddcc, align 1
  %v5_3ddcc = add i8 %v2_3ddcc, %v4_3ddca
  store i8 %v5_3ddcc, i8* %v1_3ddcc, align 1
  %v0_3ddce = load i32, i32* %eax.global-to-local, align 8
  %v1_3ddce = load i32, i32* @ebp, align 4
  %v2_3ddce = add i32 %v1_3ddce, -12
  %v3_3ddce = inttoptr i32 %v2_3ddce to i32*
  store i32 %v0_3ddce, i32* %v3_3ddce, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3ddd3 = load i32, i32* @ebp, align 4
  %v1_3ddd3 = add i32 %v0_3ddd3, -32
  %v2_3ddd3 = inttoptr i32 %v1_3ddd3 to i32*
  %v3_3ddd3 = load i32, i32* %v2_3ddd3, align 4
  store i32 %v3_3ddd3, i32* %eax.global-to-local, align 8
  %v1_3ddda = add i32 %v0_3ddd3, -28
  %v2_3ddda = inttoptr i32 %v1_3ddda to i32*
  %v3_3ddda = load i32, i32* %v2_3ddda, align 4
  store i32 %v3_3ddda, i32* %eax.global-to-local, align 8
  %v2_3dde0 = call i32 @unknown_7c65f(i32 %v3_3ddda, i32 %v3_3ddd3)
  store i32 %v2_3dde0, i32* %eax.global-to-local, align 8
  %v0_3dde5 = load i32, i32* @ebp, align 4
  %v1_3dde5 = add i32 %v0_3dde5, -12
  %v2_3dde5 = inttoptr i32 %v1_3dde5 to i32*
  %v3_3dde5 = load i32, i32* %v2_3dde5, align 4
  store i32 %v3_3dde5, i32* %eax.global-to-local, align 8
  %v1_3dde8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3dde8 = xor i32 %v1_3dde8, %v3_3dde5
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3dde8 = icmp eq i32 %v2_3dde8, 0
  store i32 %v2_3dde8, i32* @eax, align 8
  br i1 %v3_3dde8, label %bb, label %dec_label_pc_3ddf1

bb:                                               ; preds = %dec_label_pc_3ddbd
  %v1_3ddef = call i32 @function_3ddf6()
  store i32 %v1_3ddef, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3ddf1

dec_label_pc_3ddf1:                               ; preds = %bb, %dec_label_pc_3ddbd
  %v3_3ddef = phi i32 [ %v1_3ddef, %bb ], [ %v2_3dde8, %dec_label_pc_3ddbd ]
  ret i32 %v3_3ddef

; uselistorder directives
  uselistorder i8 %v4_3ddca, { 0, 2, 1 }
  uselistorder i8 %v1_3ddca, { 1, 0 }
  uselistorder i8 %v3_3ddc4, { 1, 0 }
}

define i32 @function_3ddf6() local_unnamed_addr {
dec_label_pc_3ddf6:
  %v0_3ddf7 = load i32, i32* @eax, align 8
  ret i32 %v0_3ddf7
}

define i32 @_ZSt4copyIPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ddf8:
  %v1_3de22 = call i32 @unknown_67cdd(i32 %arg2)
  %v1_3de2f = call i32 @unknown_67cdd(i32 %arg1)
  %v3_3de42 = call i32 @unknown_7c6e9(i32 %v1_3de2f, i32 %v1_3de22, i32 %arg3)
  store i32 %v3_3de42, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3de53

bb:                                               ; preds = %dec_label_pc_3ddf8
  %v1_3de51 = call i32 @function_3de58()
  br label %dec_label_pc_3de53

dec_label_pc_3de53:                               ; preds = %bb, %dec_label_pc_3ddf8
  %v2_3de51 = phi i32 [ %v1_3de51, %bb ], [ %v3_3de42, %dec_label_pc_3ddf8 ]
  ret i32 %v2_3de51

; uselistorder directives
  uselistorder i32 (i32)* @unknown_67cdd, { 1, 0 }
}

define i32 @function_3de58() local_unnamed_addr {
dec_label_pc_3de58:
  %v0_3de5d = load i32, i32* @eax, align 8
  ret i32 %v0_3de5d
}

define i32 @_ZNKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE8capacityEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3de5e:
  %v1_3de78 = add i32 %arg1, 8
  %v2_3de78 = inttoptr i32 %v1_3de78 to i32*
  %v3_3de78 = load i32, i32* %v2_3de78, align 4
  ret i32 %v3_3de78
}

define i32 @function_3de7b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_3de7b:
  %v0_3de7b = load i32, i32* @eax, align 8
  %v0_3de7d = load i32, i32* @ebp, align 4
  %v1_3de7d = add i32 %v0_3de7d, -28
  %v2_3de7d = inttoptr i32 %v1_3de7d to i32*
  %v3_3de7d = load i32, i32* %v2_3de7d, align 4
  %v1_3de80 = inttoptr i32 %v3_3de7d to i32*
  %v2_3de80 = load i32, i32* %v1_3de80, align 4
  %v2_3de84 = sub i32 %v0_3de7b, %v2_3de80
  %v2_3de88 = sdiv i32 %v2_3de84, 4
  %v3_3de8b = mul i32 %v2_3de88, -858993459
  store i32 %v3_3de8b, i32* @eax, align 8
  %v1_3de91 = add i32 %v0_3de7d, -12
  %v2_3de91 = inttoptr i32 %v1_3de91 to i32*
  %v3_3de91 = load i32, i32* %v2_3de91, align 4
  %v1_3de94 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3de94 = icmp eq i32 %v1_3de94, %v3_3de91
  br i1 %v3_3de94, label %bb, label %dec_label_pc_3de9d

bb:                                               ; preds = %dec_label_pc_3de7b
  %v1_3de9b = call i32 @function_3dea2()
  br label %dec_label_pc_3de9d

dec_label_pc_3de9d:                               ; preds = %bb, %dec_label_pc_3de7b
  %v2_3de9b = phi i32 [ %v1_3de9b, %bb ], [ %v3_3de8b, %dec_label_pc_3de7b ]
  ret i32 %v2_3de9b
}

define i32 @function_3dea2() local_unnamed_addr {
dec_label_pc_3dea2:
  %v0_3dea3 = load i32, i32* @eax, align 8
  ret i32 %v0_3dea3
}

define i32 @_ZNSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEEEPS4_jT_SE_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3dea4:
  %v2_3dedb = call i32 @unknown_64e8c(i32 %arg1, i32 %arg2)
  %v1_3dee9 = call i32 @unknown_5d1ce(i32 %arg1)
  %v4_3df06 = call i32 @unknown_70d11(i32 %arg3, i32 %arg4, i32 %v2_3dedb, i32 %v1_3dee9)
  store i32 %v2_3dedb, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3df1a

bb:                                               ; preds = %dec_label_pc_3dea4
  %v1_3df18 = call i32 @function_3df58()
  store i32 %v1_3df18, i32* @eax, align 8
  br label %dec_label_pc_3df1a

dec_label_pc_3df1a:                               ; preds = %bb, %dec_label_pc_3dea4
  %v0_3df1a = call i32 @function_3df53()
  ret i32 %v0_3df1a

; uselistorder directives
  uselistorder i32 %v2_3dedb, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3df1d() local_unnamed_addr {
dec_label_pc_3df1d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3df1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3df1d
}

define i32 @function_3df53() local_unnamed_addr {
dec_label_pc_3df53:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3df58() local_unnamed_addr {
dec_label_pc_3df58:
  %v0_3df5d = load i32, i32* @eax, align 8
  ret i32 %v0_3df5d
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET0_T_SG_SF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3df5e:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_3df87 = ptrtoint i32* %stack_var_-20 to i32
  %v2_3df94 = call i32 @unknown_7c8c1(i32 %v2_3df87, i32 %arg3)
  %v2_3df9c = ptrtoint i32* %stack_var_-24 to i32
  %v2_3dfa9 = call i32 @unknown_7c8c1(i32 %v2_3df9c, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_7c8c1, { 1, 0 }
}

define i32 @function_3dfba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3dfba:
  %v0_3dfba = load i32, i32* @eax, align 8
  %v11_3dfba = or i32 %v0_3dfba, 139
  ret i32 %v11_3dfba

; uselistorder directives
  uselistorder i32 139, { 0, 10, 3, 4, 5, 2, 6, 7, 8, 9, 1 }
}

define i32 @function_3dfce() local_unnamed_addr {
dec_label_pc_3dfce:
  %v0_3dfce = call i32 @function_ec86dfd6()
  ret i32 %v0_3dfce
}

define i32 @function_3dfe7() local_unnamed_addr {
dec_label_pc_3dfe7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3dfe7 = load i32, i32* %ecx.global-to-local, align 8
  %v1_3dfe7 = add i32 %v0_3dfe7, -1
  store i32 %v1_3dfe7, i32* %ecx.global-to-local, align 8
  %v0_3dfe9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3dfe9
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEES6_EvT_SC_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3dfec:
  %v2_3e01c = call i32 @unknown_7ca2b(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e02d

bb:                                               ; preds = %dec_label_pc_3dfec
  %v1_3e02b = call i32 @function_3e032()
  br label %dec_label_pc_3e02d

dec_label_pc_3e02d:                               ; preds = %bb, %dec_label_pc_3dfec
  %v2_3e02b = phi i32 [ %v1_3e02b, %bb ], [ 0, %dec_label_pc_3dfec ]
  ret i32 %v2_3e02b
}

define i32 @function_3e032() local_unnamed_addr {
dec_label_pc_3e032:
  %v0_3e033 = load i32, i32* @eax, align 8
  ret i32 %v0_3e033
}

define i32 @_ZSt4copyIPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET0_T_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e034:
  %v1_3e05e = call i32 @unknown_69c54(i32 %arg2)
  %v1_3e06b = call i32 @unknown_69c54(i32 %arg1)
  %v3_3e07e = call i32 @unknown_7cab5(i32 %v1_3e06b, i32 %v1_3e05e, i32 %arg3)
  store i32 %v3_3e07e, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e08f

bb:                                               ; preds = %dec_label_pc_3e034
  %v1_3e08d = call i32 @function_3e094()
  br label %dec_label_pc_3e08f

dec_label_pc_3e08f:                               ; preds = %bb, %dec_label_pc_3e034
  %v2_3e08d = phi i32 [ %v1_3e08d, %bb ], [ %v3_3e07e, %dec_label_pc_3e034 ]
  ret i32 %v2_3e08d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_69c54, { 1, 0 }
}

define i32 @function_3e094() local_unnamed_addr {
dec_label_pc_3e094:
  %v0_3e099 = load i32, i32* @eax, align 8
  ret i32 %v0_3e099
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e09a:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_3e0b1 = ptrtoint i32* %stack_var_-32 to i32
  %v1_3e0b7 = call i32 @unknown_64c86(i32 %v2_3e0b1)
  %v1_3e0bc = inttoptr i32 %v1_3e0b7 to i32*
  %v2_3e0bc = load i32, i32* %v1_3e0bc, align 4
  store i32 %v2_3e0bc, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e0ca

bb:                                               ; preds = %dec_label_pc_3e09a
  %v1_3e0c8 = call i32 @function_3e0cf()
  br label %dec_label_pc_3e0ca

dec_label_pc_3e0ca:                               ; preds = %bb, %dec_label_pc_3e09a
  %v2_3e0c8 = phi i32 [ %v1_3e0c8, %bb ], [ %v2_3e0bc, %dec_label_pc_3e09a ]
  ret i32 %v2_3e0c8
}

define i32 @function_3e0cf() local_unnamed_addr {
dec_label_pc_3e0cf:
  %v0_3e0d0 = load i32, i32* @eax, align 8
  ret i32 %v0_3e0d0
}

define i32 @_ZN5CTxInaSERKS_() local_unnamed_addr {
dec_label_pc_3e0d2:
  %eax.global-to-local = alloca i32, align 4
  %v17_3e0d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3e0d5
}

define i32 @function_3e0d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e0d8:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3e0d8 = load i32, i32* @ebp, align 4
  %v1_3e0d8 = add i32 %v0_3e0d8, 8
  %v2_3e0d8 = inttoptr i32 %v1_3e0d8 to i32*
  %v3_3e0d8 = load i32, i32* %v2_3e0d8, align 4
  store i32 %v3_3e0d8, i32* %eax.global-to-local, align 8
  %v2_3e0db = add i32 %v0_3e0d8, -28
  %v3_3e0db = inttoptr i32 %v2_3e0db to i32*
  store i32 %v3_3e0d8, i32* %v3_3e0db, align 4
  %v0_3e0de = load i32, i32* @ebp, align 4
  %v1_3e0de = add i32 %v0_3e0de, 12
  %v2_3e0de = inttoptr i32 %v1_3e0de to i32*
  %v3_3e0de = load i32, i32* %v2_3e0de, align 4
  store i32 %v3_3e0de, i32* %eax.global-to-local, align 8
  %v2_3e0e1 = add i32 %v0_3e0de, -32
  %v3_3e0e1 = inttoptr i32 %v2_3e0e1 to i32*
  store i32 %v3_3e0de, i32* %v3_3e0e1, align 4
  %v0_3e0e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3e0ea = load i32, i32* @ebp, align 4
  %v2_3e0ea = add i32 %v1_3e0ea, -12
  %v3_3e0ea = inttoptr i32 %v2_3e0ea to i32*
  store i32 %v0_3e0e4, i32* %v3_3e0ea, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3e0ef = load i32, i32* @ebp, align 4
  %v1_3e0ef = add i32 %v0_3e0ef, -28
  %v2_3e0ef = inttoptr i32 %v1_3e0ef to i32*
  %v3_3e0ef = load i32, i32* %v2_3e0ef, align 4
  store i32 %v3_3e0ef, i32* %eax.global-to-local, align 8
  %v1_3e0f2 = add i32 %v0_3e0ef, -32
  %v2_3e0f2 = inttoptr i32 %v1_3e0f2 to i32*
  %v3_3e0f2 = load i32, i32* %v2_3e0f2, align 4
  store i32 %v3_3e0f2, i32* %edx.global-to-local, align 4
  %v1_3e0f5 = inttoptr i32 %v3_3e0f2 to i32*
  %v2_3e0f5 = load i32, i32* %v1_3e0f5, align 4
  %v2_3e0f7 = inttoptr i32 %v3_3e0ef to i32*
  store i32 %v2_3e0f5, i32* %v2_3e0f7, align 4
  %v0_3e0f9 = load i32, i32* %edx.global-to-local, align 4
  %v1_3e0f9 = add i32 %v0_3e0f9, 4
  %v2_3e0f9 = inttoptr i32 %v1_3e0f9 to i32*
  %v3_3e0f9 = load i32, i32* %v2_3e0f9, align 4
  %v1_3e0fc = load i32, i32* %eax.global-to-local, align 8
  %v2_3e0fc = add i32 %v1_3e0fc, 4
  %v3_3e0fc = inttoptr i32 %v2_3e0fc to i32*
  store i32 %v3_3e0f9, i32* %v3_3e0fc, align 4
  %v0_3e0ff = load i32, i32* %edx.global-to-local, align 4
  %v1_3e0ff = add i32 %v0_3e0ff, 8
  %v2_3e0ff = inttoptr i32 %v1_3e0ff to i32*
  %v3_3e0ff = load i32, i32* %v2_3e0ff, align 4
  %v1_3e102 = load i32, i32* %eax.global-to-local, align 8
  %v2_3e102 = add i32 %v1_3e102, 8
  %v3_3e102 = inttoptr i32 %v2_3e102 to i32*
  store i32 %v3_3e0ff, i32* %v3_3e102, align 4
  %v4_3e105 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_3e105
}

define i32 @function_3e0f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e0f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e108(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e108:
  %v0_3e108 = load i32, i32* @ecx, align 8
  %v1_3e108 = load i32, i32* @eax, align 8
  %v2_3e108 = add i32 %v1_3e108, 12
  %v3_3e108 = inttoptr i32 %v2_3e108 to i32*
  store i32 %v0_3e108, i32* %v3_3e108, align 4
  %v0_3e10b = load i32, i32* @edx, align 4
  %v1_3e10b = add i32 %v0_3e10b, 16
  %v2_3e10b = inttoptr i32 %v1_3e10b to i32*
  %v3_3e10b = load i32, i32* %v2_3e10b, align 4
  %v1_3e10e = load i32, i32* @eax, align 8
  %v2_3e10e = add i32 %v1_3e10e, 16
  %v3_3e10e = inttoptr i32 %v2_3e10e to i32*
  store i32 %v3_3e10b, i32* %v3_3e10e, align 4
  %v0_3e111 = load i32, i32* @edx, align 4
  %v1_3e111 = add i32 %v0_3e111, 20
  %v2_3e111 = inttoptr i32 %v1_3e111 to i32*
  %v3_3e111 = load i32, i32* %v2_3e111, align 4
  %v1_3e114 = load i32, i32* @eax, align 8
  %v2_3e114 = add i32 %v1_3e114, 20
  %v3_3e114 = inttoptr i32 %v2_3e114 to i32*
  store i32 %v3_3e111, i32* %v3_3e114, align 4
  %v0_3e117 = load i32, i32* @edx, align 4
  %v1_3e117 = add i32 %v0_3e117, 24
  %v2_3e117 = inttoptr i32 %v1_3e117 to i32*
  %v3_3e117 = load i32, i32* %v2_3e117, align 4
  %v1_3e11a = load i32, i32* @eax, align 8
  %v2_3e11a = add i32 %v1_3e11a, 24
  %v3_3e11a = inttoptr i32 %v2_3e11a to i32*
  store i32 %v3_3e117, i32* %v3_3e11a, align 4
  %v0_3e11d = load i32, i32* @edx, align 4
  %v1_3e11d = add i32 %v0_3e11d, 28
  %v2_3e11d = inttoptr i32 %v1_3e11d to i32*
  %v3_3e11d = load i32, i32* %v2_3e11d, align 4
  store i32 %v3_3e11d, i32* @ecx, align 8
  %v1_3e120 = load i32, i32* @eax, align 8
  %v2_3e120 = add i32 %v1_3e120, 28
  %v3_3e120 = inttoptr i32 %v2_3e120 to i32*
  store i32 %v3_3e11d, i32* %v3_3e120, align 4
  %v0_3e123 = load i32, i32* @edx, align 4
  %v1_3e123 = add i32 %v0_3e123, 32
  %v2_3e123 = inttoptr i32 %v1_3e123 to i32*
  %v3_3e123 = load i32, i32* %v2_3e123, align 4
  %v1_3e126 = load i32, i32* @eax, align 8
  %v2_3e126 = add i32 %v1_3e126, 32
  %v3_3e126 = inttoptr i32 %v2_3e126 to i32*
  store i32 %v3_3e123, i32* %v3_3e126, align 4
  %v0_3e129 = load i32, i32* @ebp, align 4
  %v1_3e129 = add i32 %v0_3e129, -32
  %v2_3e129 = inttoptr i32 %v1_3e129 to i32*
  %v3_3e129 = load i32, i32* %v2_3e129, align 4
  %v1_3e12c = add i32 %v3_3e129, 36
  %v1_3e12f = add i32 %v0_3e129, -28
  %v2_3e12f = inttoptr i32 %v1_3e12f to i32*
  %v3_3e12f = load i32, i32* %v2_3e12f, align 4
  %v1_3e132 = add i32 %v3_3e12f, 36
  %v2_3e13c = call i32 @unknown_51dba(i32 %v1_3e132, i32 %v1_3e12c)
  %v0_3e141 = load i32, i32* @ebp, align 4
  %v1_3e141 = add i32 %v0_3e141, -32
  %v2_3e141 = inttoptr i32 %v1_3e141 to i32*
  %v3_3e141 = load i32, i32* %v2_3e141, align 4
  %v1_3e144 = add i32 %v3_3e141, ptrtoint (i32* @global_var_30.2823 to i32)
  %v2_3e144 = inttoptr i32 %v1_3e144 to i32*
  %v3_3e144 = load i32, i32* %v2_3e144, align 4
  %v1_3e147 = add i32 %v0_3e141, -28
  %v2_3e147 = inttoptr i32 %v1_3e147 to i32*
  %v3_3e147 = load i32, i32* %v2_3e147, align 4
  %v2_3e14a = add i32 %v3_3e147, ptrtoint (i32* @global_var_30.2823 to i32)
  %v3_3e14a = inttoptr i32 %v2_3e14a to i32*
  store i32 %v3_3e144, i32* %v3_3e14a, align 4
  %v0_3e14d = load i32, i32* @ebp, align 4
  %v1_3e14d = add i32 %v0_3e14d, -28
  %v2_3e14d = inttoptr i32 %v1_3e14d to i32*
  %v3_3e14d = load i32, i32* %v2_3e14d, align 4
  store i32 %v3_3e14d, i32* @eax, align 8
  %v1_3e150 = add i32 %v0_3e14d, -12
  %v2_3e150 = inttoptr i32 %v1_3e150 to i32*
  %v3_3e150 = load i32, i32* %v2_3e150, align 4
  %v1_3e153 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3e153 = xor i32 %v1_3e153, %v3_3e150
  %v3_3e153 = icmp eq i32 %v2_3e153, 0
  store i32 %v2_3e153, i32* @edx, align 4
  br i1 %v3_3e153, label %bb, label %dec_label_pc_3e15c

bb:                                               ; preds = %dec_label_pc_3e108
  %v1_3e15a = call i32 @function_3e161()
  br label %dec_label_pc_3e15c

dec_label_pc_3e15c:                               ; preds = %bb, %dec_label_pc_3e108
  %v2_3e15a = phi i32 [ %v1_3e15a, %bb ], [ %v3_3e14d, %dec_label_pc_3e108 ]
  ret i32 %v2_3e15a

; uselistorder directives
  uselistorder i32 862319685, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_30.2823 to i32), { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 32, { 28, 29, 1, 40, 41, 2, 30, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 20, 14, 35, 22, 23, 36, 33, 34, 24, 25, 26, 27, 15, 16, 37, 17, 31, 32, 18, 19, 38, 39, 0, 21 }
}

define i32 @function_3e161() local_unnamed_addr {
dec_label_pc_3e161:
  %v0_3e162 = load i32, i32* @eax, align 8
  ret i32 %v0_3e162
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK5CTxInPS3_EET0_T_S8_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e163:
  ret i32 %arg2
}

define i32 @function_3e172(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e172:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e172 = load i32, i32* @eax, align 8
  %v1_3e172 = load i32, i32* @ebp, align 4
  %v2_3e172 = add i32 %v1_3e172, -32
  %v3_3e172 = inttoptr i32 %v2_3e172 to i32*
  store i32 %v0_3e172, i32* %v3_3e172, align 4
  %v0_3e175 = load i32, i32* @ebp, align 4
  %v1_3e175 = add i32 %v0_3e175, 16
  %v2_3e175 = inttoptr i32 %v1_3e175 to i32*
  %v3_3e175 = load i32, i32* %v2_3e175, align 4
  store i32 %v3_3e175, i32* %eax.global-to-local, align 8
  %v2_3e178 = add i32 %v0_3e175, -36
  %v3_3e178 = inttoptr i32 %v2_3e178 to i32*
  store i32 %v3_3e175, i32* %v3_3e178, align 4
  %v0_3e17b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3e181 = load i32, i32* @ebp, align 4
  %v2_3e181 = add i32 %v1_3e181, -12
  %v3_3e181 = inttoptr i32 %v2_3e181 to i32*
  store i32 %v0_3e17b, i32* %v3_3e181, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3e186 = load i32, i32* @ebp, align 4
  %v1_3e186 = add i32 %v0_3e186, -32
  %v2_3e186 = inttoptr i32 %v1_3e186 to i32*
  %v3_3e186 = load i32, i32* %v2_3e186, align 4
  %v1_3e189 = add i32 %v0_3e186, -28
  %v2_3e189 = inttoptr i32 %v1_3e189 to i32*
  %v3_3e189 = load i32, i32* %v2_3e189, align 4
  %v2_3e18e = sub i32 %v3_3e186, %v3_3e189
  %v2_3e192 = sdiv i32 %v2_3e18e, 4
  %v3_3e195 = mul i32 %v2_3e192, -991146299
  store i32 %v3_3e195, i32* %eax.global-to-local, align 8
  %v2_3e19b = add i32 %v0_3e186, -16
  %v3_3e19b = inttoptr i32 %v2_3e19b to i32*
  store i32 %v3_3e195, i32* %v3_3e19b, align 4
  br label %dec_label_pc_3e1be

dec_label_pc_3e1a0:                               ; preds = %dec_label_pc_3e1be
  %v1_3e1a0 = add i32 %v0_3e1be, -28
  %v2_3e1a0 = inttoptr i32 %v1_3e1a0 to i32*
  %v3_3e1a0 = load i32, i32* %v2_3e1a0, align 4
  store i32 %v3_3e1a0, i32* %eax.global-to-local, align 8
  %v1_3e1a7 = add i32 %v0_3e1be, -36
  %v2_3e1a7 = inttoptr i32 %v1_3e1a7 to i32*
  %v3_3e1a7 = load i32, i32* %v2_3e1a7, align 4
  store i32 %v3_3e1a7, i32* %eax.global-to-local, align 8
  %v2_3e1ad = call i32 @unknown_7c235(i32 %v3_3e1a7, i32 %v3_3e1a0)
  store i32 %v2_3e1ad, i32* %eax.global-to-local, align 8
  %v0_3e1b2 = load i32, i32* @ebp, align 4
  %v1_3e1b2 = add i32 %v0_3e1b2, -28
  %v2_3e1b2 = inttoptr i32 %v1_3e1b2 to i32*
  %v3_3e1b2 = load i32, i32* %v2_3e1b2, align 4
  %v4_3e1b2 = add i32 %v3_3e1b2, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v4_3e1b2, i32* %v2_3e1b2, align 4
  %v0_3e1b6 = load i32, i32* @ebp, align 4
  %v1_3e1b6 = add i32 %v0_3e1b6, -36
  %v2_3e1b6 = inttoptr i32 %v1_3e1b6 to i32*
  %v3_3e1b6 = load i32, i32* %v2_3e1b6, align 4
  %v4_3e1b6 = add i32 %v3_3e1b6, ptrtoint (i64* @global_var_34.2855 to i32)
  store i32 %v4_3e1b6, i32* %v2_3e1b6, align 4
  %v0_3e1ba = load i32, i32* @ebp, align 4
  %v1_3e1ba = add i32 %v0_3e1ba, -16
  %v2_3e1ba = inttoptr i32 %v1_3e1ba to i32*
  %v3_3e1ba = load i32, i32* %v2_3e1ba, align 4
  %v4_3e1ba = add i32 %v3_3e1ba, -1
  store i32 %v4_3e1ba, i32* %v2_3e1ba, align 4
  br label %dec_label_pc_3e1be

dec_label_pc_3e1be:                               ; preds = %dec_label_pc_3e1a0, %dec_label_pc_3e172
  %v0_3e1be = load i32, i32* @ebp, align 4
  %v1_3e1be = add i32 %v0_3e1be, -16
  %v2_3e1be = inttoptr i32 %v1_3e1be to i32*
  %v3_3e1be = load i32, i32* %v2_3e1be, align 4
  %v10_3e1be = icmp eq i32 %v3_3e1be, 0
  %v11_3e1be = icmp slt i32 %v3_3e1be, 0
  %v3_3e1c2 = icmp eq i1 %v11_3e1be, false
  %v4_3e1c2 = icmp eq i1 %v10_3e1be, false
  %v5_3e1c2 = icmp eq i1 %v3_3e1c2, %v4_3e1c2
  %v6_3e1c2 = zext i1 %v5_3e1c2 to i32
  %v7_3e1c2 = load i32, i32* %eax.global-to-local, align 8
  %v8_3e1c2 = and i32 %v7_3e1c2, -256
  %v9_3e1c2 = or i32 %v6_3e1c2, %v8_3e1c2
  store i32 %v9_3e1c2, i32* %eax.global-to-local, align 8
  %v5_3e1c5 = icmp eq i1 %v5_3e1c2, false
  %v1_3e1c7 = icmp eq i1 %v5_3e1c5, false
  br i1 %v1_3e1c7, label %dec_label_pc_3e1a0, label %dec_label_pc_3e1c9

dec_label_pc_3e1c9:                               ; preds = %dec_label_pc_3e1be
  %v1_3e1c9 = add i32 %v0_3e1be, -36
  %v2_3e1c9 = inttoptr i32 %v1_3e1c9 to i32*
  %v3_3e1c9 = load i32, i32* %v2_3e1c9, align 4
  store i32 %v3_3e1c9, i32* @eax, align 8
  %v1_3e1cc = add i32 %v0_3e1be, -12
  %v2_3e1cc = inttoptr i32 %v1_3e1cc to i32*
  %v3_3e1cc = load i32, i32* %v2_3e1cc, align 4
  %v1_3e1cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3e1cf = icmp eq i32 %v1_3e1cf, %v3_3e1cc
  br i1 %v3_3e1cf, label %bb, label %dec_label_pc_3e1d8

bb:                                               ; preds = %dec_label_pc_3e1c9
  %v1_3e1d6 = call i32 @function_3e1dd()
  store i32 %v1_3e1d6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3e1d8

dec_label_pc_3e1d8:                               ; preds = %bb, %dec_label_pc_3e1c9
  %v2_3e1d6 = phi i32 [ %v1_3e1d6, %bb ], [ %v3_3e1c9, %dec_label_pc_3e1c9 ]
  ret i32 %v2_3e1d6

; uselistorder directives
  uselistorder i32 %v3_3e1be, { 1, 0 }
  uselistorder i32 %v0_3e1be, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v3_3e195, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 1, 2, 3, 6, 7, 8 }
}

define i32 @function_3e1dd() local_unnamed_addr {
dec_label_pc_3e1dd:
  %v0_3e1de = load i32, i32* @eax, align 8
  ret i32 %v0_3e1de
}

define i32 @_ZN9__gnu_cxxneIP5CTxInSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e1df:
  %v1_3e203 = call i32 @unknown_64dcb(i32 %arg1)
  %v1_3e210 = call i32 @unknown_64dcb(i32 %arg2)
  %v1_3e215 = inttoptr i32 %v1_3e210 to i32*
  %v2_3e215 = load i32, i32* %v1_3e215, align 4
  ret i32 %v2_3e215

; uselistorder directives
  uselistorder i32 (i32)* @unknown_64dcb, { 1, 0 }
}

define i32 @function_3e21a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e21a:
  %zf.global-to-local = alloca i1, align 1
  %v1_3e21a = load i32, i32* @ebp, align 4
  %v1_3e222 = trunc i32 %v1_3e21a to i8
  %v13_3e222 = icmp eq i8 %v1_3e222, 0
  store i1 %v13_3e222, i1* %zf.global-to-local, align 1
  store i32 %v1_3e21a, i32* @eax, align 8
  %v1_3e224 = inttoptr i32 %v1_3e21a to i8*
  %v2_3e224 = load i8, i8* %v1_3e224, align 1
  %v5_3e224 = add i8 %v2_3e224, %v1_3e222
  %v15_3e224 = icmp eq i8 %v5_3e224, 0
  store i1 %v15_3e224, i1* %zf.global-to-local, align 1
  store i8 %v5_3e224, i8* %v1_3e224, align 1
  %v0_3e226 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_3e226, label %bb, label %dec_label_pc_3e21a.dec_label_pc_3e228_crit_edge

dec_label_pc_3e21a.dec_label_pc_3e228_crit_edge:  ; preds = %dec_label_pc_3e21a
  %v2_3e226.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3e228

bb:                                               ; preds = %dec_label_pc_3e21a
  %v1_3e226 = call i32 @function_3e22d()
  br label %dec_label_pc_3e228

dec_label_pc_3e228:                               ; preds = %dec_label_pc_3e21a.dec_label_pc_3e228_crit_edge, %bb
  %v2_3e226 = phi i32 [ %v2_3e226.pre, %dec_label_pc_3e21a.dec_label_pc_3e228_crit_edge ], [ %v1_3e226, %bb ]
  ret i32 %v2_3e226

; uselistorder directives
  uselistorder label %dec_label_pc_3e228, { 1, 0 }
}

define i32 @function_3e22a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e22a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e22d() local_unnamed_addr {
dec_label_pc_3e22d:
  %v0_3e232 = load i32, i32* @eax, align 8
  ret i32 %v0_3e232
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP5CTxInS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e233:
  %v2_3e25e = sub i32 %arg2, %arg1
  %v2_3e262 = sdiv i32 %v2_3e25e, 4
  %v3_3e265 = mul i32 %v2_3e262, -991146299
  %v10_3e28e117 = icmp eq i32 %v3_3e265, 0
  %v11_3e28e118 = icmp slt i32 %v3_3e265, 0
  %v3_3e292119 = icmp eq i1 %v11_3e28e118, false
  %v4_3e292120 = icmp eq i1 %v10_3e28e117, false
  %v5_3e292121 = icmp eq i1 %v3_3e292119, %v4_3e292120
  %v5_3e295122 = icmp eq i1 %v5_3e292121, false
  %v1_3e297123 = icmp eq i1 %v5_3e295122, false
  br i1 %v1_3e297123, label %dec_label_pc_3e270, label %dec_label_pc_3e299

dec_label_pc_3e270:                               ; preds = %dec_label_pc_3e233, %dec_label_pc_3e270
  %storemerge126 = phi i32 [ %v4_3e28a, %dec_label_pc_3e270 ], [ %v3_3e265, %dec_label_pc_3e233 ]
  %stack_var_-40.0.in125 = phi i32 [ %v5_3e286, %dec_label_pc_3e270 ], [ %arg3, %dec_label_pc_3e233 ]
  %stack_var_-32.0.in124 = phi i32 [ %v5_3e282, %dec_label_pc_3e270 ], [ %arg1, %dec_label_pc_3e233 ]
  %v4_3e27d = call i32 @unknown_7c305(i32 %stack_var_-40.0.in125, i32 %stack_var_-32.0.in124)
  %v5_3e282 = add i32 %stack_var_-32.0.in124, ptrtoint (i64* @global_var_34.2855 to i32)
  %v5_3e286 = add i32 %stack_var_-40.0.in125, ptrtoint (i64* @global_var_34.2855 to i32)
  %v4_3e28a = add i32 %storemerge126, -1
  %v13_3e28a = icmp eq i32 %v4_3e28a, 0
  %v14_3e28a = icmp slt i32 %v4_3e28a, 0
  %v3_3e292 = icmp eq i1 %v14_3e28a, false
  %v4_3e292 = icmp eq i1 %v13_3e28a, false
  %v5_3e292 = icmp eq i1 %v3_3e292, %v4_3e292
  %v5_3e295 = icmp eq i1 %v5_3e292, false
  %v1_3e297 = icmp eq i1 %v5_3e295, false
  br i1 %v1_3e297, label %dec_label_pc_3e270, label %dec_label_pc_3e299

dec_label_pc_3e299:                               ; preds = %dec_label_pc_3e270, %dec_label_pc_3e233
  %stack_var_-40.0.in.lcssa = phi i32 [ %arg3, %dec_label_pc_3e233 ], [ %v5_3e286, %dec_label_pc_3e270 ]
  ret i32 %stack_var_-40.0.in.lcssa

; uselistorder directives
  uselistorder i32 %v4_3e28a, { 2, 1, 0 }
  uselistorder i32 %stack_var_-32.0.in124, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.in125, { 1, 0 }
  uselistorder label %dec_label_pc_3e270, { 1, 0 }
}

define i32 @function_3e2a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e2a2:
  %zf.global-to-local = alloca i1, align 1
  %v0_3e2a2 = load i32, i32* @eax, align 8
  %v1_3e2a2 = trunc i32 %v0_3e2a2 to i8
  %v2_3e2a2 = load i1, i1* @cf, align 1
  %v3_3e2a2 = zext i1 %v2_3e2a2 to i8
  %v4_3e2a2 = add i8 %v3_3e2a2, %v1_3e2a2
  %v13_3e2a2 = icmp eq i8 %v4_3e2a2, 0
  store i1 %v13_3e2a2, i1* %zf.global-to-local, align 1
  %v22_3e2a2 = zext i8 %v4_3e2a2 to i32
  %v24_3e2a2 = and i32 %v0_3e2a2, -256
  %v25_3e2a2 = or i32 %v22_3e2a2, %v24_3e2a2
  store i32 %v25_3e2a2, i32* @eax, align 8
  %v1_3e2a4 = inttoptr i32 %v25_3e2a2 to i8*
  %v2_3e2a4 = load i8, i8* %v1_3e2a4, align 1
  %v5_3e2a4 = add i8 %v2_3e2a4, %v4_3e2a2
  %v15_3e2a4 = icmp eq i8 %v5_3e2a4, 0
  store i1 %v15_3e2a4, i1* %zf.global-to-local, align 1
  store i8 %v5_3e2a4, i8* %v1_3e2a4, align 1
  %v0_3e2a6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_3e2a6, label %bb, label %dec_label_pc_3e2a2.dec_label_pc_3e2a8_crit_edge

dec_label_pc_3e2a2.dec_label_pc_3e2a8_crit_edge:  ; preds = %dec_label_pc_3e2a2
  %v2_3e2a6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3e2a8

bb:                                               ; preds = %dec_label_pc_3e2a2
  %v1_3e2a6 = call i32 @function_3e2ad()
  br label %dec_label_pc_3e2a8

dec_label_pc_3e2a8:                               ; preds = %dec_label_pc_3e2a2.dec_label_pc_3e2a8_crit_edge, %bb
  %v2_3e2a6 = phi i32 [ %v2_3e2a6.pre, %dec_label_pc_3e2a2.dec_label_pc_3e2a8_crit_edge ], [ %v1_3e2a6, %bb ]
  ret i32 %v2_3e2a6

; uselistorder directives
  uselistorder label %dec_label_pc_3e2a8, { 1, 0 }
}

define i32 @function_3e2ad() local_unnamed_addr {
dec_label_pc_3e2ad:
  %v0_3e2ae = load i32, i32* @eax, align 8
  ret i32 %v0_3e2ae
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS2_SaIS2_EEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e2af:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_3e2c6 = ptrtoint i32* %stack_var_-32 to i32
  %v1_3e2cc = call i32 @unknown_7bc49(i32 %v2_3e2c6)
  %v1_3e2d1 = inttoptr i32 %v1_3e2cc to i32*
  %v2_3e2d1 = load i32, i32* %v1_3e2d1, align 4
  store i32 %v2_3e2d1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e2df

bb:                                               ; preds = %dec_label_pc_3e2af
  %v1_3e2dd = call i32 @function_3e2e4()
  br label %dec_label_pc_3e2df

dec_label_pc_3e2df:                               ; preds = %bb, %dec_label_pc_3e2af
  %v2_3e2dd = phi i32 [ %v1_3e2dd, %bb ], [ %v2_3e2d1, %dec_label_pc_3e2af ]
  ret i32 %v2_3e2dd
}

define i32 @function_3e2e4() local_unnamed_addr {
dec_label_pc_3e2e4:
  %v0_3e2e5 = load i32, i32* @eax, align 8
  ret i32 %v0_3e2e5
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6CTxOutPS3_EET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e2e6:
  %v2_3e311 = sub i32 %arg2, %arg1
  %v2_3e315 = sdiv i32 %v2_3e311, 4
  %v3_3e318 = mul i32 %v2_3e315, -858993459
  %v10_3e341110 = icmp eq i32 %v3_3e318, 0
  %v11_3e341111 = icmp slt i32 %v3_3e318, 0
  %v3_3e345112 = icmp eq i1 %v11_3e341111, false
  %v4_3e345113 = icmp eq i1 %v10_3e341110, false
  %v5_3e345114 = icmp eq i1 %v3_3e345112, %v4_3e345113
  %v5_3e348115 = icmp eq i1 %v5_3e345114, false
  %v1_3e34a116 = icmp eq i1 %v5_3e348115, false
  store i32 %arg3, i32* @eax, align 8
  br i1 %v1_3e34a116, label %dec_label_pc_3e323, label %dec_label_pc_3e34c

dec_label_pc_3e323:                               ; preds = %dec_label_pc_3e2e6, %dec_label_pc_3e323
  %storemerge119 = phi i32 [ %v4_3e33d, %dec_label_pc_3e323 ], [ %v3_3e318, %dec_label_pc_3e2e6 ]
  %stack_var_-40.0118 = phi i32 [ %v4_3e339, %dec_label_pc_3e323 ], [ %arg3, %dec_label_pc_3e2e6 ]
  %stack_var_-32.0117 = phi i32 [ %v4_3e335, %dec_label_pc_3e323 ], [ %arg1, %dec_label_pc_3e2e6 ]
  %v2_3e330 = call i32 @unknown_7be4c(i32 %stack_var_-40.0118, i32 %stack_var_-32.0117)
  %v4_3e335 = add i32 %stack_var_-32.0117, 20
  %v4_3e339 = add i32 %stack_var_-40.0118, 20
  %v4_3e33d = add i32 %storemerge119, -1
  %v13_3e33d = icmp eq i32 %v4_3e33d, 0
  %v14_3e33d = icmp slt i32 %v4_3e33d, 0
  %v3_3e345 = icmp eq i1 %v14_3e33d, false
  %v4_3e345 = icmp eq i1 %v13_3e33d, false
  %v5_3e345 = icmp eq i1 %v3_3e345, %v4_3e345
  %v5_3e348 = icmp eq i1 %v5_3e345, false
  %v1_3e34a = icmp eq i1 %v5_3e348, false
  store i32 %v4_3e339, i32* @eax, align 8
  br i1 %v1_3e34a, label %dec_label_pc_3e323, label %dec_label_pc_3e34c

dec_label_pc_3e34c:                               ; preds = %dec_label_pc_3e323, %dec_label_pc_3e2e6
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_3e2e6 ], [ %v4_3e339, %dec_label_pc_3e323 ]
  br i1 true, label %bb, label %dec_label_pc_3e35b

bb:                                               ; preds = %dec_label_pc_3e34c
  %v1_3e359 = call i32 @function_3e360()
  br label %dec_label_pc_3e35b

dec_label_pc_3e35b:                               ; preds = %bb, %dec_label_pc_3e34c
  %v2_3e359 = phi i32 [ %v1_3e359, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_3e34c ]
  ret i32 %v2_3e359

; uselistorder directives
  uselistorder i32 %v4_3e33d, { 2, 1, 0 }
  uselistorder i32 %v4_3e339, { 0, 2, 1 }
  uselistorder i32 %stack_var_-32.0117, { 1, 0 }
  uselistorder i32 %stack_var_-40.0118, { 1, 0 }
  uselistorder label %dec_label_pc_3e323, { 1, 0 }
}

define i32 @function_3e360() local_unnamed_addr {
dec_label_pc_3e360:
  %v0_3e361 = load i32, i32* @eax, align 8
  ret i32 %v0_3e361
}

define i32 @_ZN9__gnu_cxxneIP6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e362:
  ret i32 %arg2
}

define i32 @function_3e37a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e37a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e37c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e37c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3e37c = load i32, i32* @ebp, align 4
  %v1_3e37c = add i32 %v0_3e37c, 1
  store i32 %v1_3e37c, i32* @ebp, align 4
  %v1_3e380 = add i32 %v0_3e37c, -27
  %v2_3e380 = inttoptr i32 %v1_3e380 to i32*
  %v3_3e380 = load i32, i32* %v2_3e380, align 4
  %v1_3e386 = call i32 @unknown_7bcfc(i32 %v3_3e380)
  %v1_3e38b = inttoptr i32 %v1_3e386 to i32*
  %v2_3e38b = load i32, i32* %v1_3e38b, align 4
  store i32 %v2_3e38b, i32* %ebx.global-to-local, align 4
  %v0_3e38d = load i32, i32* @ebp, align 4
  %v1_3e38d = add i32 %v0_3e38d, -32
  %v2_3e38d = inttoptr i32 %v1_3e38d to i32*
  %v3_3e38d = load i32, i32* %v2_3e38d, align 4
  %v1_3e393 = call i32 @unknown_7bcfc(i32 %v3_3e38d)
  %v1_3e398 = inttoptr i32 %v1_3e393 to i32*
  %v2_3e398 = load i32, i32* %v1_3e398, align 4
  %v0_3e39a = load i32, i32* %ebx.global-to-local, align 4
  %v12_3e39a = icmp eq i32 %v0_3e39a, %v2_3e398
  %v1_3e39c = icmp eq i1 %v12_3e39a, false
  %v2_3e39c = zext i1 %v1_3e39c to i32
  %v4_3e39c = and i32 %v2_3e398, -256
  %v5_3e39c = or i32 %v2_3e39c, %v4_3e39c
  store i32 %v5_3e39c, i32* @eax, align 8
  %v0_3e39f = load i32, i32* @ebp, align 4
  %v1_3e39f = add i32 %v0_3e39f, -12
  %v2_3e39f = inttoptr i32 %v1_3e39f to i32*
  %v3_3e39f = load i32, i32* %v2_3e39f, align 4
  %v1_3e3a2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3e3a2 = icmp eq i32 %v1_3e3a2, %v3_3e39f
  br i1 %v3_3e3a2, label %bb, label %dec_label_pc_3e3ab

bb:                                               ; preds = %dec_label_pc_3e37c
  %v1_3e3a9 = call i32 @function_3e3b0()
  br label %dec_label_pc_3e3ab

dec_label_pc_3e3ab:                               ; preds = %bb, %dec_label_pc_3e37c
  %v2_3e3a9 = phi i32 [ %v1_3e3a9, %bb ], [ %v5_3e39c, %dec_label_pc_3e37c ]
  ret i32 %v2_3e3a9

; uselistorder directives
  uselistorder i32 %v2_3e398, { 1, 0 }
  uselistorder i32 (i32)* @unknown_7bcfc, { 1, 0 }
  uselistorder i32 -27, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
}

define i32 @function_3e3b0() local_unnamed_addr {
dec_label_pc_3e3b0:
  %v0_3e3b5 = load i32, i32* @eax, align 8
  ret i32 %v0_3e3b5
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3e3b6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_3e3d0 = load i32, i32* %arg1, align 4
  %v1_3e3d2 = add i32 %v2_3e3d0, 20
  store i32 %v1_3e3d2, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e3e9

bb:                                               ; preds = %dec_label_pc_3e3b6
  %v2_3e3e7 = call i32 @function_3e3ee(i32 %tmp100)
  br label %dec_label_pc_3e3e9

dec_label_pc_3e3e9:                               ; preds = %bb, %dec_label_pc_3e3b6
  %v3_3e3e7 = phi i32 [ %v2_3e3e7, %bb ], [ %tmp100, %dec_label_pc_3e3b6 ]
  ret i32 %v3_3e3e7
}

define i32 @function_3e3ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e3ee:
  %v0_3e3ef = load i32, i32* @eax, align 8
  ret i32 %v0_3e3ef
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6CTxOutS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e3f0:
  %v2_3e41b = sub i32 %arg2, %arg1
  %v2_3e41f = sdiv i32 %v2_3e41b, 4
  %v3_3e422 = mul i32 %v2_3e41f, -858993459
  ret i32 %v3_3e422
}

define i32 @function_3e43c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e43c:
  %v2_3e43c = load i32, i32* @ebx, align 4
  %v4_3e43c = load i3, i3* @fpu_stat_TOP, align 1
  %v5_3e43c = add i3 %v4_3e43c, -1
  store i3 %v5_3e43c, i3* @fpu_stat_TOP, align 1
  %v1_3e43e = add i32 %v2_3e43c, -2095782843
  %v2_3e43e = inttoptr i32 %v1_3e43e to i8*
  %v3_3e43e = load i8, i8* %v2_3e43e, align 1
  %v4_3e43e = load i32, i32* @eax, align 8
  %v5_3e43e = trunc i32 %v4_3e43e to i8
  %v6_3e43e = add i8 %v5_3e43e, %v3_3e43e
  store i8 %v6_3e43e, i8* %v2_3e43e, align 1
  %v0_3e444 = load i32, i32* @ebp, align 4
  %v1_3e444 = add i32 %v0_3e444, 1
  store i32 %v1_3e444, i32* @ebp, align 4
  %v0_3e448 = load i32, i32* @edx, align 4
  %v1_3e448 = trunc i32 %v0_3e448 to i16
  %v2_3e448 = call i32 @__asm_insd(i16 %v1_3e448)
  %v3_3e448 = load i32, i32* @edi, align 4
  %v4_3e448 = inttoptr i32 %v3_3e448 to i32*
  store i32 %v2_3e448, i32* %v4_3e448, align 4
  %v0_3e449 = load i32, i32* @ebx, align 4
  %v1_3e449 = add i32 %v0_3e449, 251719805
  %v2_3e449 = inttoptr i32 %v1_3e449 to i32*
  %v3_3e449 = load i32, i32* %v2_3e449, align 4
  %v4_3e449 = load i32, i32* @eax, align 8
  %v5_3e449 = add i32 %v4_3e449, %v3_3e449
  %v6_3e449 = urem i32 %v3_3e449, 16
  %v7_3e449 = urem i32 %v4_3e449, 16
  %v8_3e449 = add nuw nsw i32 %v7_3e449, %v6_3e449
  %v9_3e449 = icmp ugt i32 %v8_3e449, 15
  %v10_3e449 = icmp ult i32 %v5_3e449, %v3_3e449
  %v15_3e449 = icmp eq i32 %v5_3e449, 0
  %v17_3e449 = trunc i32 %v5_3e449 to i8
  %v18_3e449 = call i8 @llvm.ctpop.i8(i8 %v17_3e449)
  %v19_3e449 = urem i8 %v18_3e449, 2
  %v20_3e449 = icmp eq i8 %v19_3e449, 0
  store i32 %v5_3e449, i32* %v2_3e449, align 4
  %v1_3e450 = zext i1 %v10_3e449 to i32
  %v12_3e450 = select i1 %v20_3e449, i32 4, i32 0
  %v14_3e450 = select i1 %v9_3e449, i32 16, i32 0
  %v16_3e450 = select i1 %v15_3e449, i32 64, i32 0
  %tmp = ashr i32 %v5_3e449, 31
  %tmp3 = and i32 %tmp, 128
  %v11_3e450 = or i32 %v16_3e450, %v1_3e450
  %v13_3e450 = or i32 %v11_3e450, %tmp3
  %v15_3e450 = or i32 %v13_3e450, %v14_3e450
  %v17_3e450 = or i32 %v15_3e450, %v12_3e450
  %v21_3e450 = load i32, i32* @eax, align 8
  %v20_3e450 = mul nuw nsw i32 %v17_3e450, 256
  %v23_3e450 = and i32 %v21_3e450, -65281
  %v22_3e450 = or i32 %v23_3e450, %v20_3e450
  %v24_3e450 = or i32 %v22_3e450, 512
  store i32 %v24_3e450, i32* @eax, align 8
  %v0_3e459 = load i32, i32* @ebp, align 4
  %v1_3e459 = add i32 %v0_3e459, -12
  %v2_3e459 = inttoptr i32 %v1_3e459 to i32*
  %v3_3e459 = load i32, i32* %v2_3e459, align 4
  %v1_3e45c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3e45c = icmp eq i32 %v1_3e45c, %v3_3e459
  br i1 %v3_3e45c, label %bb, label %dec_label_pc_3e465

bb:                                               ; preds = %dec_label_pc_3e43c
  %v1_3e463 = call i32 @function_3e46a()
  br label %dec_label_pc_3e465

dec_label_pc_3e465:                               ; preds = %bb, %dec_label_pc_3e43c
  %v2_3e463 = phi i32 [ %v1_3e463, %bb ], [ %v24_3e450, %dec_label_pc_3e43c ]
  ret i32 %v2_3e463

; uselistorder directives
  uselistorder i32 %v24_3e450, { 1, 0 }
  uselistorder i32 %v3_3e449, { 2, 0, 1 }
  uselistorder i32 512, { 1, 0, 2 }
  uselistorder i32 -65281, { 15, 16, 3, 2, 5, 6, 7, 8, 10, 4, 19, 11, 9, 17, 18, 12, 13, 14, 1, 0 }
  uselistorder i32 256, { 6, 7, 8, 9, 0, 1, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19, 20, 21, 22, 23, 73, 74, 75, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 4, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 64, 63, 65, 66, 67, 68, 5, 69, 70, 72, 71 }
  uselistorder i32 31, { 0, 1, 3, 4, 2, 5 }
  uselistorder i8 (i8)* @llvm.ctpop.i8, { 3, 1, 2, 0 }
  uselistorder i32 15, { 3, 2, 0, 1 }
  uselistorder i32 16, { 0, 2, 3, 50, 51, 52, 54, 94, 79, 27, 37, 56, 4, 45, 10, 11, 1, 58, 5, 41, 59, 53, 55, 102, 60, 64, 68, 69, 46, 70, 49, 74, 75, 19, 34, 12, 13, 76, 47, 14, 15, 77, 16, 71, 72, 17, 18, 73, 20, 21, 22, 23, 24, 101, 25, 26, 28, 80, 81, 82, 29, 30, 85, 78, 95, 31, 96, 32, 33, 35, 36, 99, 38, 39, 40, 42, 43, 44, 48, 6, 57, 61, 62, 103, 104, 63, 65, 105, 66, 67, 106, 83, 84, 86, 7, 87, 8, 88, 89, 9, 90, 91, 92, 93, 97, 98, 100 }
}

define i32 @function_3e469(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e469:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e46a() local_unnamed_addr {
dec_label_pc_3e46a:
  %v0_3e46b = load i32, i32* @eax, align 8
  ret i32 %v0_3e46b
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e46c:
  %v1_3e497 = call i32 @unknown_7b625(i32 %arg3)
  %v1_3e4a4 = call i32 @unknown_7b625(i32 %arg2)
  %v1_3e4b1 = call i32 @unknown_7b625(i32 %arg1)
  %v3_3e4c1 = call i32 @unknown_7cf5f(i32 %v1_3e4b1, i32 %v1_3e4a4, i32 %v1_3e497)
  store i32 %v3_3e4c1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e4d2

bb:                                               ; preds = %dec_label_pc_3e46c
  %v1_3e4d0 = call i32 @function_3e4d7()
  br label %dec_label_pc_3e4d2

dec_label_pc_3e4d2:                               ; preds = %bb, %dec_label_pc_3e46c
  %v2_3e4d0 = phi i32 [ %v1_3e4d0, %bb ], [ %v3_3e4c1, %dec_label_pc_3e46c ]
  ret i32 %v2_3e4d0

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7b625, { 2, 1, 0 }
}

define i32 @function_3e4d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e4d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e4d7() local_unnamed_addr {
dec_label_pc_3e4d7:
  %v0_3e4dd = load i32, i32* @eax, align 8
  ret i32 %v0_3e4dd
}

define i32 @_ZSt8__fill_aIP5CTxInS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e4de:
  %v15_3e51c112 = icmp eq i32 %arg1, %arg2
  %v1_3e51f113 = icmp eq i1 %v15_3e51c112, false
  %v5_3e522117 = icmp eq i1 %v1_3e51f113, false
  %v1_3e524118 = icmp eq i1 %v5_3e522117, false
  br i1 %v1_3e524118, label %dec_label_pc_3e503, label %dec_label_pc_3e526

dec_label_pc_3e503:                               ; preds = %dec_label_pc_3e4de, %dec_label_pc_3e503
  %stack_var_-32.0.in119 = phi i32 [ %v5_3e515, %dec_label_pc_3e503 ], [ %arg1, %dec_label_pc_3e4de ]
  %v3_3e510 = call i32 @unknown_7c5b0(i32 %stack_var_-32.0.in119, i32 %arg3)
  %v5_3e515 = add i32 %stack_var_-32.0.in119, ptrtoint (i64* @global_var_34.2855 to i32)
  %v15_3e51c = icmp eq i32 %v5_3e515, %arg2
  %v1_3e51f = icmp eq i1 %v15_3e51c, false
  %v5_3e522 = icmp eq i1 %v1_3e51f, false
  %v1_3e524 = icmp eq i1 %v5_3e522, false
  br i1 %v1_3e524, label %dec_label_pc_3e503, label %dec_label_pc_3e526

dec_label_pc_3e526:                               ; preds = %dec_label_pc_3e503, %dec_label_pc_3e4de
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e532

bb:                                               ; preds = %dec_label_pc_3e526
  %v1_3e530 = call i32 @function_3e537()
  br label %dec_label_pc_3e532

dec_label_pc_3e532:                               ; preds = %bb, %dec_label_pc_3e526
  %v2_3e530 = phi i32 [ %v1_3e530, %bb ], [ 0, %dec_label_pc_3e526 ]
  ret i32 %v2_3e530

; uselistorder directives
  uselistorder i32 %v5_3e515, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.in119, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_3e503, { 1, 0 }
}

define i32 @function_3e537() local_unnamed_addr {
dec_label_pc_3e537:
  %v0_3e538 = load i32, i32* @eax, align 8
  ret i32 %v0_3e538
}

define i32 @_ZSt20uninitialized_fill_nIP5CTxInjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e539:
  ret i32 %arg3
}

define i32 @function_3e556(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3e556:
  %v0_3e556 = load i32, i32* @ecx, align 8
  %v1_3e556 = add i32 %v0_3e556, -1070468027
  %v2_3e556 = inttoptr i32 %v1_3e556 to i8*
  %v3_3e556 = load i8, i8* %v2_3e556, align 1
  %v5_3e556 = trunc i32 %v0_3e556 to i8
  %v6_3e556 = add i8 %v3_3e556, %v5_3e556
  store i8 %v6_3e556, i8* %v2_3e556, align 1
  %v0_3e55c = load i32, i32* @ebp, align 4
  %v1_3e55c = add i32 %v0_3e55c, -36
  %v2_3e55c = inttoptr i32 %v1_3e55c to i32*
  %v3_3e55c = load i32, i32* %v2_3e55c, align 4
  %v1_3e563 = add i32 %v0_3e55c, -32
  %v2_3e563 = inttoptr i32 %v1_3e563 to i32*
  %v3_3e563 = load i32, i32* %v2_3e563, align 4
  %v1_3e56a = add i32 %v0_3e55c, -28
  %v2_3e56a = inttoptr i32 %v1_3e56a to i32*
  %v3_3e56a = load i32, i32* %v2_3e56a, align 4
  %v3_3e570 = call i32 @unknown_7d07f(i32 %v3_3e56a, i32 %v3_3e563, i32 %v3_3e55c)
  %v0_3e575 = load i32, i32* @ebp, align 4
  %v1_3e575 = add i32 %v0_3e575, -12
  %v2_3e575 = inttoptr i32 %v1_3e575 to i32*
  %v3_3e575 = load i32, i32* %v2_3e575, align 4
  %v1_3e578 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3e578 = xor i32 %v1_3e578, %v3_3e575
  %v3_3e578 = icmp eq i32 %v2_3e578, 0
  store i32 %v2_3e578, i32* @eax, align 8
  br i1 %v3_3e578, label %bb, label %dec_label_pc_3e581

bb:                                               ; preds = %dec_label_pc_3e556
  %v1_3e57f = call i32 @function_3e586()
  br label %dec_label_pc_3e581

dec_label_pc_3e581:                               ; preds = %bb, %dec_label_pc_3e556
  %v2_3e57f = phi i32 [ %v1_3e57f, %bb ], [ %v2_3e578, %dec_label_pc_3e556 ]
  ret i32 %v2_3e57f

; uselistorder directives
  uselistorder i32 -1070468027, { 0, 6, 1, 2, 3, 4, 5 }
}

define i32 @function_3e586() local_unnamed_addr {
dec_label_pc_3e586:
  %v0_3e587 = load i32, i32* @eax, align 8
  ret i32 %v0_3e587
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e588:
  %v1_3e5a5 = call i32 @unknown_5b27e(i32 %arg1)
  %v1_3e5ad = call i32 @unknown_6b554(i32 %v1_3e5a5)
  store i32 %v1_3e5ad, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e5be

bb:                                               ; preds = %dec_label_pc_3e588
  %v1_3e5bc = call i32 @function_3e5c3()
  br label %dec_label_pc_3e5be

dec_label_pc_3e5be:                               ; preds = %bb, %dec_label_pc_3e588
  %v2_3e5bc = phi i32 [ %v1_3e5bc, %bb ], [ %v1_3e5ad, %dec_label_pc_3e588 ]
  ret i32 %v2_3e5bc
}

define i32 @function_3e5c3() local_unnamed_addr {
dec_label_pc_3e5c3:
  %v0_3e5c4 = load i32, i32* @eax, align 8
  ret i32 %v0_3e5c4
}

define i32 @_ZN9COutPoint11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3e5c6:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_3e606 = add i32 %arg1, 36
  %v2_3e614 = ptrtoint i32* %stack_var_-32 to i32
  %v3_3e61a = call i32 @unknown_4fdc2(i32 %v2_3e614, i32 %arg1, i32 %v1_3e606)
  %v1_3e625 = call i32 @unknown_54255(i32 %v2_3e614)
  %v0_3e62a = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_3e62a, 16777216
  %v5_3e646 = sdiv i32 %sext, 16777216
  %v6_3e646 = call i32 @unknown_7d1ae(i32 %arg2, i32 %v1_3e625, i32 %arg3, i32 %arg4, i32 %v5_3e646)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e65a

bb:                                               ; preds = %dec_label_pc_3e5c6
  %v2_3e658 = call i32 @function_3e65f(i32 %v6_3e646)
  br label %dec_label_pc_3e65a

dec_label_pc_3e65a:                               ; preds = %bb, %dec_label_pc_3e5c6
  %v3_3e658 = phi i32 [ %v2_3e658, %bb ], [ 0, %dec_label_pc_3e5c6 ]
  ret i32 %v3_3e658

; uselistorder directives
  uselistorder i32 16777216, { 1, 0, 3, 2, 6, 4, 7, 5, 9, 8, 13, 10, 14, 11, 15, 12, 19, 16, 20, 17, 21, 18, 25, 22, 26, 23, 27, 24, 31, 28, 32, 29, 33, 30, 37, 34, 38, 35, 39, 36, 43, 40, 44, 41, 45, 42, 47, 46, 49, 48, 51, 50, 53, 52, 55, 54, 58, 56, 59, 57, 61, 60, 63, 62, 65, 64, 67, 66, 69, 68, 71, 70, 73, 72, 75, 74, 77, 76, 79, 78, 82, 80, 83, 81, 85, 84, 87, 86, 89, 88, 91, 90, 93, 92, 95, 94, 98, 96, 99, 97, 101, 100, 103, 102, 107, 104, 108, 105, 109, 106, 112, 110, 113, 111, 116, 114, 117, 115, 119, 118, 121, 120, 123, 122, 125, 124, 127, 126, 129, 128, 131, 130, 133, 132, 135, 134, 137, 136, 139, 138, 141, 140, 143, 142, 145, 144, 148, 146, 149, 147, 153, 150, 154, 151, 155, 152, 157, 156, 159, 158, 161, 160, 164, 162, 165, 163, 167, 166, 169, 168, 171, 170, 173, 172, 175, 174, 177, 176, 179, 178, 181, 180, 183, 182, 185, 184, 187, 186, 190, 188, 191, 189, 194, 192, 195, 193, 197, 196, 200, 198, 201, 199, 203, 202, 205, 204, 207, 206, 209, 208, 211, 210, 213, 212, 216, 214, 217, 215, 219, 218, 221, 220, 223, 222, 225, 224, 227, 226, 229, 228, 231, 230, 233, 232, 235, 234, 237, 236, 239, 238, 241, 240, 243, 242, 245, 244, 247, 246, 250, 248, 251, 249, 253, 252, 255, 254, 256 }
  uselistorder i32 36, { 17, 24, 25, 0, 1, 33, 2, 3, 26, 27, 28, 22, 4, 18, 5, 31, 6, 19, 20, 12, 32, 7, 8, 29, 30, 21, 9, 10, 11, 23, 34, 35, 36, 13, 14, 15, 16 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3e65f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e65f:
  %v0_3e664 = load i32, i32* @eax, align 8
  ret i32 %v0_3e664
}

define i32 @_Z11UnserializeI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3e665:
  %stack_var_-17 = alloca i32, align 4
  %v2_3e68e = ptrtoint i32* %stack_var_-17 to i32
  %v5_3e6b0 = call i32 @unknown_7d2b5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_3e68e)
  ret i32 0
}

define i32 @function_3e6c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e6c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e6c5() local_unnamed_addr {
dec_label_pc_3e6c5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3e6c5 = load i32, i32* %ecx.global-to-local, align 8
  %v1_3e6c5 = add i32 %v0_3e6c5, -1
  store i32 %v1_3e6c5, i32* %ecx.global-to-local, align 8
  %v0_3e6c7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e6c7
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e6c8:
  ret i32 %arg3
}

define i32 @function_3e6f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e6f6:
  %v0_3e6fa = load i32, i32* @ebp, align 4
  %v1_3e6fa = add i32 %v0_3e6fa, -32
  %v2_3e6fa = inttoptr i32 %v1_3e6fa to i32*
  %v3_3e6fa = load i32, i32* %v2_3e6fa, align 4
  %v1_3e700 = call i32 @unknown_7bb10(i32 %v3_3e6fa)
  %v0_3e707 = load i32, i32* @ebp, align 4
  %v1_3e707 = add i32 %v0_3e707, -28
  %v2_3e707 = inttoptr i32 %v1_3e707 to i32*
  %v3_3e707 = load i32, i32* %v2_3e707, align 4
  %v1_3e70d = call i32 @unknown_7bb10(i32 %v3_3e707)
  ret i32 %v1_3e70d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7bb10, { 1, 0 }
}

define i32 @function_3e712(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e712:
  %v0_3e712 = load i32, i32* @esi, align 4
  %v0_3e716 = load i32, i32* @ebx, align 4
  %v0_3e71a = load i32, i32* @eax, align 8
  %v3_3e71d = call i32 @unknown_7d40c(i32 %v0_3e71a, i32 %v0_3e716, i32 %v0_3e712)
  store i32 %v3_3e71d, i32* @eax, align 8
  %v0_3e722 = load i32, i32* @ebp, align 4
  %v1_3e722 = add i32 %v0_3e722, -12
  %v2_3e722 = inttoptr i32 %v1_3e722 to i32*
  %v3_3e722 = load i32, i32* %v2_3e722, align 4
  %v1_3e725 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3e725 = icmp eq i32 %v1_3e725, %v3_3e722
  br i1 %v3_3e725, label %bb, label %dec_label_pc_3e72e

bb:                                               ; preds = %dec_label_pc_3e712
  %v1_3e72c = call i32 @function_3e733()
  br label %dec_label_pc_3e72e

dec_label_pc_3e72e:                               ; preds = %bb, %dec_label_pc_3e712
  %v2_3e72c = phi i32 [ %v1_3e72c, %bb ], [ %v3_3e71d, %dec_label_pc_3e712 ]
  ret i32 %v2_3e72c

; uselistorder directives
  uselistorder i32* @esi, { 8, 26, 27, 9, 20, 10, 11, 12, 13, 14, 0, 30, 31, 32, 29, 17, 18, 7, 19, 5, 6, 21, 22, 23, 24, 25, 1, 28, 15, 16, 2, 3, 4 }
}

define i32 @function_3e733() local_unnamed_addr {
dec_label_pc_3e733:
  %v0_3e739 = load i32, i32* @eax, align 8
  ret i32 %v0_3e739
}

define i32 @_ZSt8__fill_aIP6CTxOutS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e73a:
  %v15_3e778108 = icmp eq i32 %arg1, %arg2
  %v1_3e77b109 = icmp eq i1 %v15_3e778108, false
  %v5_3e77e113 = icmp eq i1 %v1_3e77b109, false
  %v1_3e780114 = icmp eq i1 %v5_3e77e113, false
  br i1 %v1_3e780114, label %dec_label_pc_3e75f, label %dec_label_pc_3e782

dec_label_pc_3e75f:                               ; preds = %dec_label_pc_3e73a, %dec_label_pc_3e75f
  %stack_var_-32.0115 = phi i32 [ %v4_3e771, %dec_label_pc_3e75f ], [ %arg1, %dec_label_pc_3e73a ]
  %v2_3e76c = call i32 @unknown_7c2a0(i32 %stack_var_-32.0115, i32 %arg3)
  %v4_3e771 = add i32 %stack_var_-32.0115, 20
  %v15_3e778 = icmp eq i32 %v4_3e771, %arg2
  %v1_3e77b = icmp eq i1 %v15_3e778, false
  %v5_3e77e = icmp eq i1 %v1_3e77b, false
  %v1_3e780 = icmp eq i1 %v5_3e77e, false
  br i1 %v1_3e780, label %dec_label_pc_3e75f, label %dec_label_pc_3e782

dec_label_pc_3e782:                               ; preds = %dec_label_pc_3e75f, %dec_label_pc_3e73a
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3e78e

bb:                                               ; preds = %dec_label_pc_3e782
  %v1_3e78c = call i32 @function_3e793()
  br label %dec_label_pc_3e78e

dec_label_pc_3e78e:                               ; preds = %bb, %dec_label_pc_3e782
  %v2_3e78c = phi i32 [ %v1_3e78c, %bb ], [ 0, %dec_label_pc_3e782 ]
  ret i32 %v2_3e78c

; uselistorder directives
  uselistorder i32 %v4_3e771, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_3e75f, { 1, 0 }
}

define i32 @function_3e793() local_unnamed_addr {
dec_label_pc_3e793:
  %v0_3e794 = load i32, i32* @eax, align 8
  ret i32 %v0_3e794
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e796:
  ret i32 %arg1
}

define i32 @function_3e7b4(i16 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e7b4:
  %v0_3e7b7 = load i32, i32* @ecx, align 8
  %v1_3e7b7 = add i32 %v0_3e7b7, 1256727556
  %v2_3e7b7 = inttoptr i32 %v1_3e7b7 to i8*
  %v3_3e7b7 = load i8, i8* %v2_3e7b7, align 1
  %v5_3e7b7 = trunc i32 %v0_3e7b7 to i8
  %v6_3e7b7 = add i8 %v3_3e7b7, %v5_3e7b7
  store i8 %v6_3e7b7, i8* %v2_3e7b7, align 1
  %v6_3e7bd = load i32, i32* @eax, align 8
  ret i32 %v6_3e7bd
}

define i32 @function_3e7d0() local_unnamed_addr {
dec_label_pc_3e7d0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3e7d0 = load i32, i32* %ecx.global-to-local, align 8
  %v1_3e7d0 = add i32 %v0_3e7d0, -1
  store i32 %v1_3e7d0, i32* %ecx.global-to-local, align 8
  %v0_3e7d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e7d2
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e7d3:
  %v2_3e7fd = call i32 @unknown_7d56a(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @function_3e818(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e818:
  %v0_3e818 = load i32, i32* @ecx, align 8
  %v1_3e818 = add i32 %v0_3e818, -1
  store i32 %v1_3e818, i32* @ecx, align 8
  %v0_3e81a = load i32, i32* @eax, align 8
  ret i32 %v0_3e81a
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET1_T0_SG_SF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3e81d:
  ret i32 %arg4
}

define i32 @function_3e83a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e83a:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3e83a = load i32, i32* @eax, align 8
  %v1_3e83a = load i32, i32* @ebp, align 4
  %v2_3e83a = add i32 %v1_3e83a, -40
  %v3_3e83a = inttoptr i32 %v2_3e83a to i32*
  store i32 %v0_3e83a, i32* %v3_3e83a, align 4
  %v0_3e83d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3e843 = load i32, i32* @ebp, align 4
  %v2_3e843 = add i32 %v1_3e843, -12
  %v3_3e843 = inttoptr i32 %v2_3e843 to i32*
  store i32 %v0_3e83d, i32* %v3_3e843, align 4
  %v0_3e848 = load i32, i32* @ebp, align 4
  %v1_3e848 = add i32 %v0_3e848, -40
  %v2_3e848 = inttoptr i32 %v1_3e848 to i32*
  %v3_3e848 = load i32, i32* %v2_3e848, align 4
  %v1_3e84e = call i32 @unknown_7d626(i32 %v3_3e848)
  store i32 %v1_3e84e, i32* %esi.global-to-local, align 4
  %v0_3e855 = load i32, i32* @ebp, align 4
  %v1_3e855 = add i32 %v0_3e855, -36
  %v2_3e855 = inttoptr i32 %v1_3e855 to i32*
  %v3_3e855 = load i32, i32* %v2_3e855, align 4
  %v1_3e85b = call i32 @unknown_7d5f1(i32 %v3_3e855)
  store i32 %v1_3e85b, i32* %ebx.global-to-local, align 4
  %v0_3e862 = load i32, i32* @ebp, align 4
  %v1_3e862 = add i32 %v0_3e862, -32
  %v2_3e862 = inttoptr i32 %v1_3e862 to i32*
  %v3_3e862 = load i32, i32* %v2_3e862, align 4
  %v1_3e868 = call i32 @unknown_7d5f1(i32 %v3_3e862)
  %v0_3e86d = load i32, i32* %esi.global-to-local, align 4
  %v0_3e871 = load i32, i32* %ebx.global-to-local, align 4
  %v3_3e878 = call i32 @unknown_7d65b(i32 %v1_3e868, i32 %v0_3e871, i32 %v0_3e86d)
  %v1_3e87d = load i32, i32* @ebp, align 4
  %v2_3e87d = add i32 %v1_3e87d, -16
  %v3_3e87d = inttoptr i32 %v2_3e87d to i32*
  store i32 %v3_3e878, i32* %v3_3e87d, align 4
  %v0_3e880 = load i32, i32* @ebp, align 4
  %v1_3e880 = add i32 %v0_3e880, -16
  %v1_3e887 = add i32 %v0_3e880, -28
  %v2_3e887 = inttoptr i32 %v1_3e887 to i32*
  %v3_3e887 = load i32, i32* %v2_3e887, align 4
  %v2_3e88d = call i32 @unknown_63511(i32 %v3_3e887, i32 %v1_3e880)
  %v0_3e892 = load i32, i32* @ebp, align 4
  %v1_3e892 = add i32 %v0_3e892, -28
  %v2_3e892 = inttoptr i32 %v1_3e892 to i32*
  %v3_3e892 = load i32, i32* %v2_3e892, align 4
  store i32 %v3_3e892, i32* @eax, align 8
  %v1_3e895 = add i32 %v0_3e892, -12
  %v2_3e895 = inttoptr i32 %v1_3e895 to i32*
  %v3_3e895 = load i32, i32* %v2_3e895, align 4
  %v1_3e898 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3e898 = icmp eq i32 %v1_3e898, %v3_3e895
  br i1 %v3_3e898, label %bb, label %dec_label_pc_3e8a1

bb:                                               ; preds = %dec_label_pc_3e83a
  %v1_3e89f = call i32 @function_3e8a6()
  br label %dec_label_pc_3e8a1

dec_label_pc_3e8a1:                               ; preds = %bb, %dec_label_pc_3e83a
  %v2_3e89f = phi i32 [ %v1_3e89f, %bb ], [ %v3_3e892, %dec_label_pc_3e83a ]
  ret i32 %v2_3e89f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7d5f1, { 1, 0 }
}

define i32 @function_3e8a6() local_unnamed_addr {
dec_label_pc_3e8a6:
  %v0_3e8ac = load i32, i32* @eax, align 8
  ret i32 %v0_3e8ac
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e8af:
  ret i32 %arg2
}

define i32 @function_3e8c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e8c0:
  %v0_3e8c2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3e8c7 = load i32, i32* @ebp, align 4
  %v2_3e8c7 = add i32 %v1_3e8c7, -12
  %v3_3e8c7 = inttoptr i32 %v2_3e8c7 to i32*
  store i32 %v0_3e8c2, i32* %v3_3e8c7, align 4
  %v0_3e8cc = load i32, i32* @ebp, align 4
  %v1_3e8cc = add i32 %v0_3e8cc, -32
  %v2_3e8cc = inttoptr i32 %v1_3e8cc to i32*
  %v3_3e8cc = load i32, i32* %v2_3e8cc, align 4
  %v1_3e8d3 = add i32 %v0_3e8cc, -28
  %v2_3e8d3 = inttoptr i32 %v1_3e8d3 to i32*
  %v3_3e8d3 = load i32, i32* %v2_3e8d3, align 4
  %v2_3e8d9 = call i32 @unknown_7d740(i32 %v3_3e8d3, i32 %v3_3e8cc)
  %v0_3e8de = load i32, i32* @ebp, align 4
  %v1_3e8de = add i32 %v0_3e8de, -12
  %v2_3e8de = inttoptr i32 %v1_3e8de to i32*
  %v3_3e8de = load i32, i32* %v2_3e8de, align 4
  %v1_3e8e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3e8e1 = xor i32 %v1_3e8e1, %v3_3e8de
  %v3_3e8e1 = icmp eq i32 %v2_3e8e1, 0
  store i32 %v2_3e8e1, i32* @eax, align 8
  br i1 %v3_3e8e1, label %bb, label %dec_label_pc_3e8ea

bb:                                               ; preds = %dec_label_pc_3e8c0
  %v1_3e8e8 = call i32 @function_3e8ef()
  br label %dec_label_pc_3e8ea

dec_label_pc_3e8ea:                               ; preds = %bb, %dec_label_pc_3e8c0
  %v3_3e8e8 = phi i32 [ %v1_3e8e8, %bb ], [ %v2_3e8e1, %dec_label_pc_3e8c0 ]
  ret i32 %v3_3e8e8
}

define i32 @function_3e8ef() local_unnamed_addr {
dec_label_pc_3e8ef:
  %v0_3e8f0 = load i32, i32* @eax, align 8
  ret i32 %v0_3e8f0
}

define i32 @_ZSt14__copy_move_a2ILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e8f1:
  ret i32 %arg3
}

define i32 @function_3e90e() local_unnamed_addr {
dec_label_pc_3e90e:
  %eax.global-to-local = alloca i32, align 4
  %v2_3e90e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3e90e = load i32, i32* %eax.global-to-local, align 8
  %v4_3e90e = trunc i32 %v3_3e90e to i8
  %v5_3e90e = add i8 %v4_3e90e, %v2_3e90e
  %v21_3e90e = inttoptr i32 %v3_3e90e to i8*
  store i8 %v5_3e90e, i8* %v21_3e90e, align 1
  %v22_3e90e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_3e90e
}

define i32 @function_3e924() local_unnamed_addr {
dec_label_pc_3e924:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3e925 = load i32, i32* %ecx.global-to-local, align 8
  %v1_3e925 = add i32 %v0_3e925, -1
  store i32 %v1_3e925, i32* %ecx.global-to-local, align 8
  %v2_3e925 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_3e925
}

define i32 @function_3e928(i16 %arg1) local_unnamed_addr {
dec_label_pc_3e928:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e928 = load i32, i32* %eax.global-to-local, align 8
  %v11_3e928 = and i32 %v0_3e928, -24
  store i32 %v11_3e928, i32* %eax.global-to-local, align 8
  ret i32 %v11_3e928

; uselistorder directives
  uselistorder i32 %v11_3e928, { 1, 0 }
}

define i32 @function_3e92f() local_unnamed_addr {
dec_label_pc_3e92f:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e92f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e92f
}

define i32 @function_3e95b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e95b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3e95b = load i32, i32* %ebx.global-to-local, align 4
  %v1_3e95b = add i32 %v0_3e95b, 1583034564
  %v2_3e95b = inttoptr i32 %v1_3e95b to i32*
  %v3_3e95b = load i32, i32* %v2_3e95b, align 4
  %v4_3e95b = add i32 %v3_3e95b, 1
  store i32 %v4_3e95b, i32* %v2_3e95b, align 4
  %v0_3e962 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e962
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e963:
  ret i32 0
}

define i32 @function_3e982(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e982:
  %v0_3e988 = load i32, i32* @eax, align 8
  %v11_3e988 = and i32 %v0_3e988, -252
  %v1_3e98d = call i32 @unknown_7d8b5(i32 %v11_3e988)
  %v0_3e995 = load i32, i32* @ebp, align 4
  %v1_3e995 = add i32 %v0_3e995, -28
  %v2_3e995 = inttoptr i32 %v1_3e995 to i32*
  %v3_3e995 = load i32, i32* %v2_3e995, align 4
  store i32 %v3_3e995, i32* @eax, align 8
  %v1_3e998 = add i32 %v0_3e995, -12
  %v2_3e998 = inttoptr i32 %v1_3e998 to i32*
  %v3_3e998 = load i32, i32* %v2_3e998, align 4
  %v1_3e99b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3e99b = icmp eq i32 %v1_3e99b, %v3_3e998
  br i1 %v3_3e99b, label %bb, label %dec_label_pc_3e9a4

bb:                                               ; preds = %dec_label_pc_3e982
  %v1_3e9a2 = call i32 @function_3e9a9()
  br label %dec_label_pc_3e9a4

dec_label_pc_3e9a4:                               ; preds = %bb, %dec_label_pc_3e982
  %v3_3e9a2 = phi i32 [ %v1_3e9a2, %bb ], [ %v3_3e995, %dec_label_pc_3e982 ]
  ret i32 %v3_3e9a2

; uselistorder directives
  uselistorder i32 -252, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10 }
}

define i32 @function_3e9a9() local_unnamed_addr {
dec_label_pc_3e9a9:
  %v0_3e9aa = load i32, i32* @eax, align 8
  ret i32 %v0_3e9aa
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEENS1_IPS6_SB_EEET1_T0_SG_SF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3e9ad:
  %v1_3e9de = call i32 @unknown_7d971(i32 %arg4)
  %v1_3e9eb = call i32 @unknown_7d93c(i32 %arg3)
  %v1_3e9f8 = call i32 @unknown_7d93c(i32 %arg2)
  ret i32 %v1_3e9f8

; uselistorder directives
  uselistorder i32 (i32)* @unknown_7d93c, { 1, 0 }
}

define i32 @function_3ea0a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ea0a:
  %v0_3ea0b = load i32, i32* @eax, align 8
  %v4_3ea0b = mul i32 %v0_3ea0b, 2
  %v1_3ea0d = load i32, i32* @ebp, align 4
  %v2_3ea0d = add i32 %v1_3ea0d, -16
  %v3_3ea0d = inttoptr i32 %v2_3ea0d to i32*
  store i32 %v4_3ea0b, i32* %v3_3ea0d, align 4
  %v0_3ea10 = load i32, i32* @ebp, align 4
  %v1_3ea10 = add i32 %v0_3ea10, -16
  %v1_3ea17 = add i32 %v0_3ea10, -28
  %v2_3ea17 = inttoptr i32 %v1_3ea17 to i32*
  %v3_3ea17 = load i32, i32* %v2_3ea17, align 4
  %v2_3ea1d = call i32 @unknown_65a85(i32 %v3_3ea17, i32 %v1_3ea10)
  %v0_3ea22 = load i32, i32* @ebp, align 4
  %v1_3ea22 = add i32 %v0_3ea22, -28
  %v2_3ea22 = inttoptr i32 %v1_3ea22 to i32*
  %v3_3ea22 = load i32, i32* %v2_3ea22, align 4
  store i32 %v3_3ea22, i32* @eax, align 8
  %v1_3ea25 = add i32 %v0_3ea22, -12
  %v2_3ea25 = inttoptr i32 %v1_3ea25 to i32*
  %v3_3ea25 = load i32, i32* %v2_3ea25, align 4
  %v1_3ea28 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3ea28 = xor i32 %v1_3ea28, %v3_3ea25
  %v3_3ea28 = icmp eq i32 %v2_3ea28, 0
  store i32 %v2_3ea28, i32* @edx, align 4
  br i1 %v3_3ea28, label %bb, label %dec_label_pc_3ea31

bb:                                               ; preds = %dec_label_pc_3ea0a
  %v1_3ea2f = call i32 @function_3ea36()
  br label %dec_label_pc_3ea31

dec_label_pc_3ea31:                               ; preds = %bb, %dec_label_pc_3ea0a
  %v2_3ea2f = phi i32 [ %v1_3ea2f, %bb ], [ %v3_3ea22, %dec_label_pc_3ea0a ]
  ret i32 %v2_3ea2f
}

define i32 @function_3ea36() local_unnamed_addr {
dec_label_pc_3ea36:
  %v0_3ea3c = load i32, i32* @eax, align 8
  ret i32 %v0_3ea3c
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ea3f:
  %v2_3ea69 = call i32 @unknown_7da8b(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3ea7a

bb:                                               ; preds = %dec_label_pc_3ea3f
  %v1_3ea78 = call i32 @function_3ea7f()
  br label %dec_label_pc_3ea7a

dec_label_pc_3ea7a:                               ; preds = %bb, %dec_label_pc_3ea3f
  %v2_3ea78 = phi i32 [ %v1_3ea78, %bb ], [ 0, %dec_label_pc_3ea3f ]
  ret i32 %v2_3ea78
}

define i32 @function_3ea7f() local_unnamed_addr {
dec_label_pc_3ea7f:
  %v0_3ea80 = load i32, i32* @eax, align 8
  ret i32 %v0_3ea80
}

define i32 @_ZSt14__copy_move_a2ILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ea81:
  %v1_3eaac = call i32 @unknown_6d8e6(i32 %arg3)
  %v1_3eab9 = call i32 @unknown_6d8e6(i32 %arg2)
  %v1_3eac6 = call i32 @unknown_6d8e6(i32 %arg1)
  %v3_3ead6 = call i32 @unknown_7db3b(i32 %v1_3eac6, i32 %v1_3eab9, i32 %v1_3eaac)
  store i32 %v3_3ead6, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3eae7

bb:                                               ; preds = %dec_label_pc_3ea81
  %v1_3eae5 = call i32 @function_3eaec()
  br label %dec_label_pc_3eae7

dec_label_pc_3eae7:                               ; preds = %bb, %dec_label_pc_3ea81
  %v2_3eae5 = phi i32 [ %v1_3eae5, %bb ], [ %v3_3ead6, %dec_label_pc_3ea81 ]
  ret i32 %v2_3eae5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_6d8e6, { 2, 1, 0 }
}

define i32 @function_3eaec() local_unnamed_addr {
dec_label_pc_3eaec:
  %v0_3eaf2 = load i32, i32* @eax, align 8
  ret i32 %v0_3eaf2
}

define i32 @_ZSt22__copy_move_backward_aILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3eaf3:
  ret i32 0
}

define i32 @function_3eb16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3eb16:
  %v0_3eb16 = load i32, i32* @ebp, align 4
  %v1_3eb16 = add i32 %v0_3eb16, -13
  %v2_3eb16 = inttoptr i32 %v1_3eb16 to i8*
  store i8 0, i8* %v2_3eb16, align 1
  %v0_3eb1a = load i32, i32* @ebp, align 4
  %v1_3eb1a = add i32 %v0_3eb1a, -36
  %v2_3eb1a = inttoptr i32 %v1_3eb1a to i32*
  %v3_3eb1a = load i32, i32* %v2_3eb1a, align 4
  %v1_3eb21 = add i32 %v0_3eb1a, -32
  %v2_3eb21 = inttoptr i32 %v1_3eb21 to i32*
  %v3_3eb21 = load i32, i32* %v2_3eb21, align 4
  %v1_3eb28 = add i32 %v0_3eb1a, -28
  %v2_3eb28 = inttoptr i32 %v1_3eb28 to i32*
  %v3_3eb28 = load i32, i32* %v2_3eb28, align 4
  %v3_3eb2e = call i32 @unknown_7dc00(i32 %v3_3eb28, i32 %v3_3eb21, i32 %v3_3eb1a)
  store i32 %v3_3eb2e, i32* @eax, align 8
  %v0_3eb33 = load i32, i32* @ebp, align 4
  %v1_3eb33 = add i32 %v0_3eb33, -12
  %v2_3eb33 = inttoptr i32 %v1_3eb33 to i32*
  %v3_3eb33 = load i32, i32* %v2_3eb33, align 4
  %v1_3eb36 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3eb36 = icmp eq i32 %v1_3eb36, %v3_3eb33
  br i1 %v3_3eb36, label %bb, label %dec_label_pc_3eb3f

bb:                                               ; preds = %dec_label_pc_3eb16
  %v1_3eb3d = call i32 @function_3eb44()
  br label %dec_label_pc_3eb3f

dec_label_pc_3eb3f:                               ; preds = %bb, %dec_label_pc_3eb16
  %v2_3eb3d = phi i32 [ %v1_3eb3d, %bb ], [ %v3_3eb2e, %dec_label_pc_3eb16 ]
  ret i32 %v2_3eb3d
}

define i32 @function_3eb44() local_unnamed_addr {
dec_label_pc_3eb44:
  %v0_3eb45 = load i32, i32* @eax, align 8
  ret i32 %v0_3eb45
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5CTxInjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3eb46:
  %v10_3eb94114 = icmp eq i32 %arg2, 0
  %v1_3eb98115 = icmp eq i1 %v10_3eb94114, false
  %v5_3eb9b119 = icmp eq i1 %v1_3eb98115, false
  %v1_3eb9d120 = icmp eq i1 %v5_3eb9b119, false
  br i1 %v1_3eb9d120, label %dec_label_pc_3eb72, label %dec_label_pc_3eb9f

dec_label_pc_3eb72:                               ; preds = %dec_label_pc_3eb46, %dec_label_pc_3eb72
  %storemerge.in122 = phi i32 [ %v5_3eb90, %dec_label_pc_3eb72 ], [ %arg1, %dec_label_pc_3eb46 ]
  %stack_var_-36.0121 = phi i32 [ %v4_3eb8c, %dec_label_pc_3eb72 ], [ %arg2, %dec_label_pc_3eb46 ]
  %v2_3eb78 = call i32 @unknown_6b48c(i32 %storemerge.in122)
  %v3_3eb87 = call i32 @unknown_6bbd0(i32 %v2_3eb78, i32 %arg3)
  %v4_3eb8c = add i32 %stack_var_-36.0121, -1
  %v5_3eb90 = add i32 %storemerge.in122, ptrtoint (i64* @global_var_34.2855 to i32)
  %v10_3eb94 = icmp eq i32 %v4_3eb8c, 0
  %v1_3eb98 = icmp eq i1 %v10_3eb94, false
  %v5_3eb9b = icmp eq i1 %v1_3eb98, false
  %v1_3eb9d = icmp eq i1 %v5_3eb9b, false
  br i1 %v1_3eb9d, label %dec_label_pc_3eb72, label %dec_label_pc_3eb9f

dec_label_pc_3eb9f:                               ; preds = %dec_label_pc_3eb72, %dec_label_pc_3eb46
  %v0_3eb9f = call i32 @function_3ebd1()
  ret i32 %v0_3eb9f

; uselistorder directives
  uselistorder i32 %v4_3eb8c, { 1, 0 }
  uselistorder i32 %storemerge.in122, { 1, 0 }
  uselistorder i32 ptrtoint (i64* @global_var_34.2855 to i32), { 31, 30, 29, 28, 27, 26, 24, 25, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 13, 15, 16, 17, 18, 0, 19, 23, 22, 21, 20, 1, 2, 3 }
  uselistorder label %dec_label_pc_3eb72, { 1, 0 }
}

define i32 @function_3eba2() local_unnamed_addr {
dec_label_pc_3eba2:
  %eax.global-to-local = alloca i32, align 4
  %v0_3eba2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3eba2
}

define i32 @function_3ebd1() local_unnamed_addr {
dec_label_pc_3ebd1:
  %v0_3ebd1 = load i32, i32* @ebp, align 4
  %v1_3ebd1 = add i32 %v0_3ebd1, -12
  %v2_3ebd1 = inttoptr i32 %v1_3ebd1 to i32*
  %v3_3ebd1 = load i32, i32* %v2_3ebd1, align 4
  %v1_3ebd4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3ebd4 = xor i32 %v1_3ebd4, %v3_3ebd1
  %v3_3ebd4 = icmp eq i32 %v2_3ebd4, 0
  store i32 %v2_3ebd4, i32* @eax, align 8
  br i1 %v3_3ebd4, label %bb, label %dec_label_pc_3ebdd

bb:                                               ; preds = %dec_label_pc_3ebd1
  %v1_3ebdb = call i32 @function_3ebe2()
  br label %dec_label_pc_3ebdd

dec_label_pc_3ebdd:                               ; preds = %bb, %dec_label_pc_3ebd1
  %v2_3ebdb = phi i32 [ %v1_3ebdb, %bb ], [ %v2_3ebd4, %dec_label_pc_3ebd1 ]
  ret i32 %v2_3ebdb
}

define i32 @function_3ebe2() local_unnamed_addr {
dec_label_pc_3ebe2:
  %v0_3ebe7 = load i32, i32* @eax, align 8
  ret i32 %v0_3ebe7
}

define i32 @_Z12SerReadWriteI11CDataStream9CFlatDataEjRT_RT0_ii21CSerActionUnserialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3ebe8:
  %v4_3ec33 = call i32 @unknown_7dd71(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3ec49

bb:                                               ; preds = %dec_label_pc_3ebe8
  %v1_3ec47 = call i32 @function_3ec4e()
  br label %dec_label_pc_3ec49

dec_label_pc_3ec49:                               ; preds = %bb, %dec_label_pc_3ebe8
  %v2_3ec47 = phi i32 [ %v1_3ec47, %bb ], [ 0, %dec_label_pc_3ebe8 ]
  ret i32 %v2_3ec47
}

define i32 @function_3ec4e() local_unnamed_addr {
dec_label_pc_3ec4e:
  %v0_3ec4f = load i32, i32* @eax, align 8
  ret i32 %v0_3ec4f
}

define i32 @_Z16Unserialize_implI11CDataStreamhSaIhEEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ec50:
  ret i32 %arg1
}

define i32 @function_3ec5e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ec5e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3ec5e = load i32, i32* @ebp, align 4
  %v1_3ec61 = add i32 %v0_3ec5e, 2
  store i32 %v1_3ec61, i32* @ebp, align 4
  %v0_3ec62 = load i32, i32* @ebx, align 4
  %v1_3ec62 = add i32 %v0_3ec62, 1166610501
  %v2_3ec62 = inttoptr i32 %v1_3ec62 to i8*
  %v3_3ec62 = load i8, i8* %v2_3ec62, align 1
  %v4_3ec62 = udiv i8 %v3_3ec62, 2
  %v5_3ec62 = shl i8 %v3_3ec62, 7
  %v6_3ec62 = or i8 %v4_3ec62, %v5_3ec62
  store i8 %v6_3ec62, i8* %v2_3ec62, align 1
  %v0_3ec69 = load i32, i32* @ebp, align 4
  %v1_3ec69 = add i32 %v0_3ec69, 20
  %v2_3ec69 = inttoptr i32 %v1_3ec69 to i32*
  %v3_3ec69 = load i32, i32* %v2_3ec69, align 4
  %v2_3ec6c = add i32 %v0_3ec69, -56
  %v3_3ec6c = inttoptr i32 %v2_3ec6c to i32*
  store i32 %v3_3ec69, i32* %v3_3ec6c, align 4
  %v0_3ec6f = load i32, i32* @ebp, align 4
  %v1_3ec6f = add i32 %v0_3ec6f, 24
  %v2_3ec6f = inttoptr i32 %v1_3ec6f to i32*
  %v3_3ec6f = load i32, i32* %v2_3ec6f, align 4
  %v2_3ec72 = add i32 %v0_3ec6f, -60
  %v3_3ec72 = inttoptr i32 %v2_3ec72 to i32*
  store i32 %v3_3ec6f, i32* %v3_3ec72, align 4
  %v0_3ec75 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3ec7b = load i32, i32* @ebp, align 4
  %v2_3ec7b = add i32 %v1_3ec7b, -12
  %v3_3ec7b = inttoptr i32 %v2_3ec7b to i32*
  store i32 %v0_3ec75, i32* %v3_3ec7b, align 4
  %v0_3ec80 = load i32, i32* @ebp, align 4
  %v1_3ec80 = add i32 %v0_3ec80, -48
  %v2_3ec80 = inttoptr i32 %v1_3ec80 to i32*
  %v3_3ec80 = load i32, i32* %v2_3ec80, align 4
  %v1_3ec86 = call i32 @unknown_55002(i32 %v3_3ec80)
  %v0_3ec8b = load i32, i32* @ebp, align 4
  %v1_3ec8b = add i32 %v0_3ec8b, -44
  %v2_3ec8b = inttoptr i32 %v1_3ec8b to i32*
  %v3_3ec8b = load i32, i32* %v2_3ec8b, align 4
  %v1_3ec91 = call i32 @unknown_62eb1(i32 %v3_3ec8b)
  %v1_3ec96 = load i32, i32* @ebp, align 4
  %v2_3ec96 = add i32 %v1_3ec96, -20
  %v3_3ec96 = inttoptr i32 %v2_3ec96 to i32*
  store i32 %v1_3ec91, i32* %v3_3ec96, align 4
  %v0_3ec99 = load i32, i32* @ebp, align 4
  %v1_3ec99 = add i32 %v0_3ec99, -24
  %v2_3ec99 = inttoptr i32 %v1_3ec99 to i32*
  store i32 0, i32* %v2_3ec99, align 4
  br label %dec_label_pc_3ed1c

dec_label_pc_3eca2:                               ; preds = %dec_label_pc_3ed1c
  %v1_3eca2 = add i32 %v0_3ed1c, -28
  %v2_3eca2 = inttoptr i32 %v1_3eca2 to i32*
  store i32 5000000, i32* %v2_3eca2, align 4
  %v0_3eca9 = load i32, i32* @ebp, align 4
  %v1_3eca9 = add i32 %v0_3eca9, -24
  %v2_3eca9 = inttoptr i32 %v1_3eca9 to i32*
  %v3_3eca9 = load i32, i32* %v2_3eca9, align 4
  %v1_3ecac = add i32 %v0_3eca9, -20
  %v2_3ecac = inttoptr i32 %v1_3ecac to i32*
  %v3_3ecac = load i32, i32* %v2_3ecac, align 4
  %v2_3ecb1 = sub i32 %v3_3ecac, %v3_3eca9
  %v2_3ecb5 = add i32 %v0_3eca9, -32
  %v3_3ecb5 = inttoptr i32 %v2_3ecb5 to i32*
  store i32 %v2_3ecb1, i32* %v3_3ecb5, align 4
  %v0_3ecb8 = load i32, i32* @ebp, align 4
  %v1_3ecb8 = add i32 %v0_3ecb8, -28
  %v1_3ecbf = add i32 %v0_3ecb8, -32
  %v2_3ecc5 = call i32 @unknown_6046d(i32 %v1_3ecbf, i32 %v1_3ecb8)
  %v1_3ecca = inttoptr i32 %v2_3ecc5 to i32*
  %v2_3ecca = load i32, i32* %v1_3ecca, align 4
  %v1_3eccc = load i32, i32* @ebp, align 4
  %v2_3eccc = add i32 %v1_3eccc, -16
  %v3_3eccc = inttoptr i32 %v2_3eccc to i32*
  store i32 %v2_3ecca, i32* %v3_3eccc, align 4
  %v0_3eccf = load i32, i32* @ebp, align 4
  %v1_3eccf = add i32 %v0_3eccf, -16
  %v2_3eccf = inttoptr i32 %v1_3eccf to i32*
  %v3_3eccf = load i32, i32* %v2_3eccf, align 4
  %v1_3ecd2 = add i32 %v0_3eccf, -24
  %v2_3ecd2 = inttoptr i32 %v1_3ecd2 to i32*
  %v3_3ecd2 = load i32, i32* %v2_3ecd2, align 4
  %v2_3ecd5 = add i32 %v3_3ecd2, %v3_3eccf
  %v1_3ece3 = add i32 %v0_3eccf, -48
  %v2_3ece3 = inttoptr i32 %v1_3ece3 to i32*
  %v3_3ece3 = load i32, i32* %v2_3ece3, align 4
  %v3_3ece9 = call i32 @unknown_5575e(i32 %v3_3ece3, i32 %v2_3ecd5, i32 0)
  %v0_3ecee = load i32, i32* @ebp, align 4
  %v1_3ecee = add i32 %v0_3ecee, -16
  %v2_3ecee = inttoptr i32 %v1_3ecee to i32*
  %v3_3ecee = load i32, i32* %v2_3ecee, align 4
  store i32 %v3_3ecee, i32* %ebx.global-to-local, align 4
  %v1_3ecf1 = add i32 %v0_3ecee, -24
  %v2_3ecf1 = inttoptr i32 %v1_3ecf1 to i32*
  %v3_3ecf1 = load i32, i32* %v2_3ecf1, align 4
  %v1_3ecf8 = add i32 %v0_3ecee, -48
  %v2_3ecf8 = inttoptr i32 %v1_3ecf8 to i32*
  %v3_3ecf8 = load i32, i32* %v2_3ecf8, align 4
  %v2_3ecfe = call i32 @unknown_54a7e(i32 %v3_3ecf8, i32 %v3_3ecf1)
  %v0_3ed03 = load i32, i32* %ebx.global-to-local, align 4
  %v0_3ed0b = load i32, i32* @ebp, align 4
  %v1_3ed0b = add i32 %v0_3ed0b, -44
  %v2_3ed0b = inttoptr i32 %v1_3ed0b to i32*
  %v3_3ed0b = load i32, i32* %v2_3ed0b, align 4
  %v3_3ed11 = call i32 @unknown_5088a(i32 %v3_3ed0b, i32 %v2_3ecfe, i32 %v0_3ed03)
  %v0_3ed16 = load i32, i32* @ebp, align 4
  %v1_3ed16 = add i32 %v0_3ed16, -16
  %v2_3ed16 = inttoptr i32 %v1_3ed16 to i32*
  %v3_3ed16 = load i32, i32* %v2_3ed16, align 4
  %v1_3ed19 = add i32 %v0_3ed16, -24
  %v2_3ed19 = inttoptr i32 %v1_3ed19 to i32*
  %v3_3ed19 = load i32, i32* %v2_3ed19, align 4
  %v5_3ed19 = add i32 %v3_3ed19, %v3_3ed16
  store i32 %v5_3ed19, i32* %v2_3ed19, align 4
  br label %dec_label_pc_3ed1c

dec_label_pc_3ed1c:                               ; preds = %dec_label_pc_3eca2, %dec_label_pc_3ec5e
  %v0_3ed1c = load i32, i32* @ebp, align 4
  %v1_3ed1c = add i32 %v0_3ed1c, -24
  %v2_3ed1c = inttoptr i32 %v1_3ed1c to i32*
  %v3_3ed1c = load i32, i32* %v2_3ed1c, align 4
  %v2_3ed1f = add i32 %v0_3ed1c, -20
  %v3_3ed1f = inttoptr i32 %v2_3ed1f to i32*
  %v4_3ed1f = load i32, i32* %v3_3ed1f, align 4
  %v10_3ed1f = icmp ult i32 %v3_3ed1c, %v4_3ed1f
  %v5_3ed25 = icmp eq i1 %v10_3ed1f, false
  %v1_3ed27 = icmp eq i1 %v5_3ed25, false
  br i1 %v1_3ed27, label %dec_label_pc_3eca2, label %dec_label_pc_3ed2d

dec_label_pc_3ed2d:                               ; preds = %dec_label_pc_3ed1c
  %v1_3ed2d = add i32 %v0_3ed1c, -12
  %v2_3ed2d = inttoptr i32 %v1_3ed2d to i32*
  %v3_3ed2d = load i32, i32* %v2_3ed2d, align 4
  %v1_3ed30 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3ed30 = xor i32 %v1_3ed30, %v3_3ed2d
  %v3_3ed30 = icmp eq i32 %v2_3ed30, 0
  store i32 %v2_3ed30, i32* @eax, align 8
  br i1 %v3_3ed30, label %bb, label %dec_label_pc_3ed39

bb:                                               ; preds = %dec_label_pc_3ed2d
  %v1_3ed37 = call i32 @function_3ed3e()
  br label %dec_label_pc_3ed39

dec_label_pc_3ed39:                               ; preds = %bb, %dec_label_pc_3ed2d
  %v2_3ed37 = phi i32 [ %v1_3ed37, %bb ], [ %v2_3ed30, %dec_label_pc_3ed2d ]
  ret i32 %v2_3ed37

; uselistorder directives
  uselistorder i32 %v0_3ed1c, { 0, 2, 3, 1 }
  uselistorder i8 %v3_3ec62, { 1, 0 }
  uselistorder i32 -44, { 129, 130, 117, 103, 203, 204, 118, 119, 131, 188, 124, 125, 202, 104, 137, 105, 120, 121, 122, 138, 142, 0, 1, 139, 110, 111, 2, 3, 4, 5, 6, 197, 7, 198, 140, 141, 155, 8, 212, 213, 143, 9, 10, 132, 11, 144, 145, 146, 12, 13, 147, 148, 149, 14, 15, 214, 215, 126, 150, 16, 17, 18, 216, 19, 20, 21, 222, 22, 23, 24, 206, 133, 151, 25, 152, 153, 154, 26, 27, 28, 134, 135, 136, 29, 30, 31, 32, 223, 33, 224, 225, 226, 34, 227, 35, 176, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 114, 115, 116, 112, 113, 178, 36, 37, 38, 39, 40, 41, 42, 43, 44, 179, 180, 45, 46, 47, 48, 49, 50, 51, 181, 182, 183, 184, 52, 53, 54, 185, 55, 186, 56, 57, 209, 58, 59, 60, 61, 62, 211, 127, 189, 190, 63, 64, 65, 66, 191, 67, 68, 69, 192, 193, 96, 70, 71, 72, 73, 74, 75, 106, 76, 99, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 194, 87, 88, 89, 90, 91, 92, 195, 107, 108, 109, 187, 219, 220, 217, 218, 221, 199, 200, 201, 196, 128, 205, 207, 208, 93, 210, 95, 94, 123, 97, 98, 100, 102, 101, 228, 229 }
  uselistorder i32 -48, { 21, 22, 23, 3, 52, 6, 14, 15, 4, 25, 26, 27, 28, 29, 13, 30, 31, 63, 32, 33, 34, 35, 36, 38, 17, 39, 40, 24, 41, 42, 43, 9, 10, 11, 12, 7, 8, 44, 45, 37, 62, 18, 46, 5, 47, 48, 49, 50, 51, 19, 20, 53, 54, 55, 0, 56, 57, 1, 16, 2, 58, 59, 60, 61, 65, 64, 66 }
  uselistorder i32 -60, { 40, 24, 22, 23, 25, 26, 19, 41, 49, 17, 18, 50, 101, 102, 103, 100, 99, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 0, 96, 97, 98, 1, 2, 3, 4, 62, 63, 45, 20, 44, 42, 43, 21, 46, 47, 48, 12, 5, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 27, 28, 29, 30, 31, 32, 33, 35, 36, 34, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 93, 7, 6, 8, 10, 9, 11, 13, 15, 14, 16, 104 }
  uselistorder i32 -56, { 54, 52, 39, 104, 105, 40, 41, 42, 58, 53, 61, 0, 1, 59, 45, 46, 2, 3, 4, 5, 6, 102, 7, 103, 60, 71, 8, 62, 63, 55, 64, 65, 66, 67, 9, 10, 108, 43, 68, 109, 106, 11, 69, 70, 56, 57, 110, 12, 13, 93, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 72, 49, 50, 51, 47, 48, 94, 14, 15, 16, 17, 18, 95, 96, 107, 19, 20, 21, 22, 23, 97, 98, 99, 35, 24, 25, 26, 27, 28, 29, 44, 30, 31, 32, 33, 34, 100, 101, 37, 36, 38, 111, 112, 113, 114 }
  uselistorder i8 7, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i8 2, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 1166610501, { 1, 0, 2, 3 }
}

define i32 @function_3ed3e() local_unnamed_addr {
dec_label_pc_3ed3e:
  %v0_3ed43 = load i32, i32* @eax, align 8
  ret i32 %v0_3ed43
}

define i32 @_ZSt22__copy_move_backward_aILb0EP6CTxOutS1_ET1_T0_S3_S2_() local_unnamed_addr {
dec_label_pc_3ed44:
  %stack_var_-4 = alloca i32, align 4
  %v4_3ed44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_3ed44, i32* @ebp, align 4
  %v5_3ed47 = icmp ult i32* %stack_var_-4, inttoptr (i32 56 to i32*)
  store i1 %v5_3ed47, i1* @cf, align 1
  %v0_3ed5c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3ed5c
}

define i32 @function_3ed66(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ed66:
  %v0_3ed69 = load i32, i32* @ebx, align 4
  %v1_3ed69 = add i32 %v0_3ed69, 1149885509
  %v2_3ed69 = inttoptr i32 %v1_3ed69 to i8*
  %v3_3ed69 = load i8, i8* %v2_3ed69, align 1
  %v4_3ed69 = load i32, i32* @ecx, align 8
  %v5_3ed69 = trunc i32 %v4_3ed69 to i8
  %v6_3ed69 = add i8 %v5_3ed69, %v3_3ed69
  store i8 %v6_3ed69, i8* %v2_3ed69, align 1
  %v0_3ed72 = load i32, i32* @ebp, align 4
  %v1_3ed72 = add i32 %v0_3ed72, -32
  %v2_3ed72 = inttoptr i32 %v1_3ed72 to i32*
  %v3_3ed72 = load i32, i32* %v2_3ed72, align 4
  %v1_3ed79 = add i32 %v0_3ed72, -28
  %v2_3ed79 = inttoptr i32 %v1_3ed79 to i32*
  %v3_3ed79 = load i32, i32* %v2_3ed79, align 4
  %v2_3ed7f = call i32 @unknown_7df29(i32 %v3_3ed79, i32 %v3_3ed72)
  store i32 %v2_3ed7f, i32* @eax, align 8
  %v0_3ed84 = load i32, i32* @ebp, align 4
  %v1_3ed84 = add i32 %v0_3ed84, -12
  %v2_3ed84 = inttoptr i32 %v1_3ed84 to i32*
  %v3_3ed84 = load i32, i32* %v2_3ed84, align 4
  %v1_3ed87 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3ed87 = icmp eq i32 %v1_3ed87, %v3_3ed84
  br i1 %v3_3ed87, label %bb, label %dec_label_pc_3ed90

bb:                                               ; preds = %dec_label_pc_3ed66
  %v1_3ed8e = call i32 @function_3ed95()
  br label %dec_label_pc_3ed90

dec_label_pc_3ed90:                               ; preds = %bb, %dec_label_pc_3ed66
  %v2_3ed8e = phi i32 [ %v1_3ed8e, %bb ], [ %v2_3ed7f, %dec_label_pc_3ed66 ]
  ret i32 %v2_3ed8e
}

define i32 @function_3ed95() local_unnamed_addr {
dec_label_pc_3ed95:
  %v0_3ed96 = load i32, i32* @eax, align 8
  ret i32 %v0_3ed96
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb0EE7_S_baseESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ed97:
  ret i32 0
}

define i32 @function_3edb6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3edb6:
  %ecx.global-to-local = alloca i32, align 4
  %v0_3edb9 = load i32, i32* @ecx, align 8
  %v1_3edb9 = add i32 %v0_3edb9, -1
  store i32 %v1_3edb9, i32* %ecx.global-to-local, align 8
  %v2_3edb9 = icmp eq i32 %v1_3edb9, 0
  %v3_3edb9 = load i1, i1* @zf, align 1
  %v4_3edb9 = or i1 %v2_3edb9, %v3_3edb9
  br i1 %v4_3edb9, label %dec_label_pc_3edbb, label %bb

bb:                                               ; preds = %dec_label_pc_3edb6
  %v6_3edb9 = call i32 @_ZSt22__copy_move_backward_aILb0EP6CTxOutS1_ET1_T0_S3_S2_()
  store i32 %v6_3edb9, i32* @eax, align 8
  %v4_3edbb.pre = load i32, i32* %ecx.global-to-local, align 8
  br label %dec_label_pc_3edbb

dec_label_pc_3edbb:                               ; preds = %dec_label_pc_3edb6, %bb
  %v4_3edbb = phi i32 [ %v1_3edb9, %dec_label_pc_3edb6 ], [ %v4_3edbb.pre, %bb ]
  %v0_3edbb = load i32, i32* @ebx, align 4
  %v1_3edbb = add i32 %v0_3edbb, 1435231301
  %v2_3edbb = inttoptr i32 %v1_3edbb to i8*
  %v3_3edbb = load i8, i8* %v2_3edbb, align 1
  %v5_3edbb = trunc i32 %v4_3edbb to i8
  %v6_3edbb = load i1, i1* @cf, align 1
  %v7_3edbb = zext i1 %v6_3edbb to i8
  %v8_3edbb = add i8 %v3_3edbb, %v5_3edbb
  %v9_3edbb = add i8 %v8_3edbb, %v7_3edbb
  store i8 %v9_3edbb, i8* %v2_3edbb, align 1
  %v0_3edc2 = load i32, i32* @edx, align 4
  %v1_3edc2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3edc2 = icmp eq i32 %v1_3edc2, %v0_3edc2
  br i1 %v3_3edc2, label %bb3, label %dec_label_pc_3edbb.dec_label_pc_3edcb_crit_edge

dec_label_pc_3edbb.dec_label_pc_3edcb_crit_edge:  ; preds = %dec_label_pc_3edbb
  %v2_3edc9.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3edcb

bb3:                                              ; preds = %dec_label_pc_3edbb
  %v1_3edc9 = call i32 @function_3edd0()
  br label %dec_label_pc_3edcb

dec_label_pc_3edcb:                               ; preds = %dec_label_pc_3edbb.dec_label_pc_3edcb_crit_edge, %bb3
  %v2_3edc9 = phi i32 [ %v2_3edc9.pre, %dec_label_pc_3edbb.dec_label_pc_3edcb_crit_edge ], [ %v1_3edc9, %bb3 ]
  ret i32 %v2_3edc9

; uselistorder directives
  uselistorder i32 %v1_3edb9, { 0, 2, 1 }
  uselistorder i32 1435231301, { 1, 0 }
  uselistorder label %dec_label_pc_3edcb, { 1, 0 }
  uselistorder label %dec_label_pc_3edbb, { 1, 0 }
}

define i32 @function_3edd0() local_unnamed_addr {
dec_label_pc_3edd0:
  %v0_3edd1 = load i32, i32* @eax, align 8
  ret i32 %v0_3edd1
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3edd4:
  %v1_3edf1 = call i32 @unknown_7e035(i32 %arg1)
  store i32 %v1_3edf1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3ee02

bb:                                               ; preds = %dec_label_pc_3edd4
  %v1_3ee00 = call i32 @function_3ee07()
  br label %dec_label_pc_3ee02

dec_label_pc_3ee02:                               ; preds = %bb, %dec_label_pc_3edd4
  %v2_3ee00 = phi i32 [ %v1_3ee00, %bb ], [ %v1_3edf1, %dec_label_pc_3edd4 ]
  ret i32 %v2_3ee00
}

define i32 @function_3ee07() local_unnamed_addr {
dec_label_pc_3ee07:
  %v0_3ee08 = load i32, i32* @eax, align 8
  ret i32 %v0_3ee08
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ee09:
  %v1_3ee26 = call i32 @unknown_7e0a1(i32 %arg1)
  store i32 %v1_3ee26, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3ee37

bb:                                               ; preds = %dec_label_pc_3ee09
  %v1_3ee35 = call i32 @function_3ee3c()
  br label %dec_label_pc_3ee37

dec_label_pc_3ee37:                               ; preds = %bb, %dec_label_pc_3ee09
  %v2_3ee35 = phi i32 [ %v1_3ee35, %bb ], [ %v1_3ee26, %dec_label_pc_3ee09 ]
  ret i32 %v2_3ee35
}

define i32 @function_3ee3c() local_unnamed_addr {
dec_label_pc_3ee3c:
  %v0_3ee3d = load i32, i32* @eax, align 8
  ret i32 %v0_3ee3d
}

define i32 @_ZSt13__copy_move_aILb0EPKN11json_spirit9Pair_implINS0_13Config_vectorISsEEEEPS4_ET1_T0_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ee3e:
  %v3_3ee79 = call i32 @unknown_7e10d(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_3ee79, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3ee8a

bb:                                               ; preds = %dec_label_pc_3ee3e
  %v1_3ee88 = call i32 @function_3ee8f()
  br label %dec_label_pc_3ee8a

dec_label_pc_3ee8a:                               ; preds = %bb, %dec_label_pc_3ee3e
  %v2_3ee88 = phi i32 [ %v1_3ee88, %bb ], [ %v3_3ee79, %dec_label_pc_3ee3e ]
  ret i32 %v2_3ee88
}

define i32 @function_3ee8f() local_unnamed_addr {
dec_label_pc_3ee8f:
  %v0_3ee90 = load i32, i32* @eax, align 8
  ret i32 %v0_3ee90
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEEEvT_SE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ee91:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_3eed9 = ptrtoint i32* %stack_var_-36 to i32
  %v2_3eedd = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_3eed6

dec_label_pc_3eeb0:                               ; preds = %dec_label_pc_3eed6
  %v1_3eeb6 = call i32 @unknown_63839(i32 %v2_3eedd)
  %v1_3eebe = call i32 @unknown_6ce09(i32 %v1_3eeb6)
  %v1_3eec6 = call i32 @unknown_6ce36(i32 %v1_3eebe)
  %v1_3eed1 = call i32 @unknown_7e231(i32 %v2_3eedd)
  br label %dec_label_pc_3eed6

dec_label_pc_3eed6:                               ; preds = %dec_label_pc_3eeb0, %dec_label_pc_3ee91
  %v2_3eee3 = call i32 @unknown_7e1dc(i32 %v2_3eedd, i32 %v4_3eed9)
  %v4_3eee8 = trunc i32 %v2_3eee3 to i8
  %v5_3eee8 = icmp eq i8 %v4_3eee8, 0
  %v1_3eeea = icmp eq i1 %v5_3eee8, false
  br i1 %v1_3eeea, label %dec_label_pc_3eeb0, label %dec_label_pc_3eeec

dec_label_pc_3eeec:                               ; preds = %dec_label_pc_3eed6
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3eef8

bb:                                               ; preds = %dec_label_pc_3eeec
  %v1_3eef6 = call i32 @function_3eefd()
  br label %dec_label_pc_3eef8

dec_label_pc_3eef8:                               ; preds = %bb, %dec_label_pc_3eeec
  %v2_3eef6 = phi i32 [ %v1_3eef6, %bb ], [ 0, %dec_label_pc_3eeec ]
  ret i32 %v2_3eef6

; uselistorder directives
  uselistorder i32 %v2_3eedd, { 2, 0, 1 }
}

define i32 @function_3eefd() local_unnamed_addr {
dec_label_pc_3eefd:
  %v0_3eefe = load i32, i32* @eax, align 8
  ret i32 %v0_3eefe
}

define i32 @_ZSt13__copy_move_aILb0EPN11json_spirit9Pair_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_() local_unnamed_addr {
dec_label_pc_3eeff:
  %eax.global-to-local = alloca i32, align 4
  %v17_3ef02 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3ef02
}

define i32 @function_3ef06(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ef06:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3ef06 = load i32, i32* @ebp, align 4
  %v1_3ef06 = add i32 %v0_3ef06, 1
  store i32 %v1_3ef06, i32* %ebp.global-to-local, align 4
  %v0_3ef07 = load i32, i32* @ecx, align 8
  %v1_3ef07 = add i32 %v0_3ef07, 1166795845
  %v2_3ef07 = inttoptr i32 %v1_3ef07 to i8*
  %v3_3ef07 = load i8, i8* %v2_3ef07, align 1
  %v5_3ef07 = trunc i32 %v0_3ef07 to i8
  %v6_3ef07 = or i8 %v3_3ef07, %v5_3ef07
  store i8 %v6_3ef07, i8* %v2_3ef07, align 1
  %v0_3ef0d = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3ef0d = or i32 %v0_3ef0d, 137
  store i32 %v11_3ef0d, i32* %eax.global-to-local, align 8
  %v0_3ef0f = load i32, i32* %ebp.global-to-local, align 4
  %v0_3ef10 = load i32, i32* @ecx, align 8
  %v1_3ef10 = add i32 %v0_3ef10, 255
  %v1_3ef12 = add i32 %v0_3ef0f, 2
  store i32 %v1_3ef12, i32* @ebp, align 4
  %v1_3ef13 = add i32 %v0_3ef10, -1587159996
  %v2_3ef13 = inttoptr i32 %v1_3ef13 to i8*
  %v3_3ef13 = load i8, i8* %v2_3ef13, align 1
  %v5_3ef13 = trunc i32 %v1_3ef10 to i8
  %v8_3ef13 = add i8 %v3_3ef13, %v5_3ef13
  %v28_3ef13 = icmp ult i8 %v8_3ef13, %v3_3ef13
  store i1 %v28_3ef13, i1* %cf.global-to-local, align 1
  store i8 %v8_3ef13, i8* %v2_3ef13, align 1
  %v0_3ef19 = load i32, i32* %eax.global-to-local, align 8
  %v1_3ef19 = trunc i32 %v0_3ef19 to i8
  %v2_3ef19 = load i1, i1* %cf.global-to-local, align 1
  %v3_3ef19 = zext i1 %v2_3ef19 to i8
  %v4_3ef19 = add i8 %v3_3ef19, %v1_3ef19
  %v19_3ef19 = icmp ule i8 %v4_3ef19, %v1_3ef19
  %v21_3ef19 = icmp eq i1 %v2_3ef19, %v19_3ef19
  store i1 %v21_3ef19, i1* %cf.global-to-local, align 1
  %v22_3ef19 = zext i8 %v4_3ef19 to i32
  %v24_3ef19 = and i32 %v0_3ef19, -256
  %v25_3ef19 = or i32 %v22_3ef19, %v24_3ef19
  store i32 %v25_3ef19, i32* %eax.global-to-local, align 8
  %v1_3ef1b = inttoptr i32 %v25_3ef19 to i8*
  %v2_3ef1b = load i8, i8* %v1_3ef1b, align 1
  %v5_3ef1b = add i8 %v2_3ef1b, %v4_3ef19
  store i8 %v5_3ef1b, i8* %v1_3ef1b, align 1
  %v0_3ef1d = load i32, i32* %eax.global-to-local, align 8
  %v1_3ef1d = load i32, i32* @ebp, align 4
  %v2_3ef1d = add i32 %v1_3ef1d, -12
  %v3_3ef1d = inttoptr i32 %v2_3ef1d to i32*
  store i32 %v0_3ef1d, i32* %v3_3ef1d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3ef22 = load i32, i32* @ebp, align 4
  %v1_3ef22 = add i32 %v0_3ef22, -13
  %v2_3ef22 = inttoptr i32 %v1_3ef22 to i8*
  store i8 0, i8* %v2_3ef22, align 1
  %v0_3ef26 = load i32, i32* @ebp, align 4
  %v1_3ef26 = add i32 %v0_3ef26, -36
  %v2_3ef26 = inttoptr i32 %v1_3ef26 to i32*
  %v3_3ef26 = load i32, i32* %v2_3ef26, align 4
  store i32 %v3_3ef26, i32* %eax.global-to-local, align 8
  %v1_3ef2d = add i32 %v0_3ef26, -32
  %v2_3ef2d = inttoptr i32 %v1_3ef2d to i32*
  %v3_3ef2d = load i32, i32* %v2_3ef2d, align 4
  store i32 %v3_3ef2d, i32* %eax.global-to-local, align 8
  %v1_3ef34 = add i32 %v0_3ef26, -28
  %v2_3ef34 = inttoptr i32 %v1_3ef34 to i32*
  %v3_3ef34 = load i32, i32* %v2_3ef34, align 4
  store i32 %v3_3ef34, i32* %eax.global-to-local, align 8
  %v3_3ef3a = call i32 @unknown_7e2d9(i32 %v3_3ef34, i32 %v3_3ef2d, i32 %v3_3ef26)
  store i32 %v3_3ef3a, i32* @eax, align 8
  %v0_3ef3f = load i32, i32* @ebp, align 4
  %v1_3ef3f = add i32 %v0_3ef3f, -12
  %v2_3ef3f = inttoptr i32 %v1_3ef3f to i32*
  %v3_3ef3f = load i32, i32* %v2_3ef3f, align 4
  %v1_3ef42 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_3ef42 = icmp eq i32 %v1_3ef42, %v3_3ef3f
  br i1 %v3_3ef42, label %bb, label %dec_label_pc_3ef4b

bb:                                               ; preds = %dec_label_pc_3ef06
  %v1_3ef49 = call i32 @function_3ef50()
  store i32 %v1_3ef49, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3ef4b

dec_label_pc_3ef4b:                               ; preds = %bb, %dec_label_pc_3ef06
  %v3_3ef49 = phi i32 [ %v1_3ef49, %bb ], [ %v3_3ef3a, %dec_label_pc_3ef06 ]
  ret i32 %v3_3ef49

; uselistorder directives
  uselistorder i8 %v4_3ef19, { 0, 2, 1 }
  uselistorder i8 %v1_3ef19, { 1, 0 }
  uselistorder i8 %v3_3ef13, { 1, 0 }
  uselistorder i32 1166795845, { 1, 2, 3, 0, 5, 6, 4, 7, 8, 9, 10, 12, 13, 11 }
}

define i32 @function_3ef50() local_unnamed_addr {
dec_label_pc_3ef50:
  %v0_3ef51 = load i32, i32* @eax, align 8
  ret i32 %v0_3ef51
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb0EE7_S_baseESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ef52:
  ret i32 %arg2
}

define i32 @function_3ef66(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ef66:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ef66 = load i32, i32* @eax, align 8
  %v1_3ef66 = trunc i32 %v0_3ef66 to i8
  %v2_3ef66 = load i1, i1* @cf, align 1
  %v3_3ef66 = zext i1 %v2_3ef66 to i8
  %v4_3ef66 = add i8 %v3_3ef66, %v1_3ef66
  %v22_3ef66 = zext i8 %v4_3ef66 to i32
  %v24_3ef66 = and i32 %v0_3ef66, -256
  %v25_3ef66 = or i32 %v22_3ef66, %v24_3ef66
  store i32 %v25_3ef66, i32* %eax.global-to-local, align 8
  %v1_3ef68 = inttoptr i32 %v25_3ef66 to i8*
  %v2_3ef68 = load i8, i8* %v1_3ef68, align 1
  %v5_3ef68 = add i8 %v2_3ef68, %v4_3ef66
  store i8 %v5_3ef68, i8* %v1_3ef68, align 1
  %v0_3ef6a = load i32, i32* %eax.global-to-local, align 8
  %v1_3ef6a = load i32, i32* @ebp, align 4
  %v2_3ef6a = add i32 %v1_3ef6a, -12
  %v3_3ef6a = inttoptr i32 %v2_3ef6a to i32*
  store i32 %v0_3ef6a, i32* %v3_3ef6a, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3ef6f = load i32, i32* @ebp, align 4
  %v1_3ef6f = add i32 %v0_3ef6f, -28
  %v2_3ef6f = inttoptr i32 %v1_3ef6f to i32*
  %v3_3ef6f = load i32, i32* %v2_3ef6f, align 4
  store i32 %v3_3ef6f, i32* %eax.global-to-local, align 8
  %v1_3ef72 = add i32 %v0_3ef6f, -32
  %v2_3ef72 = inttoptr i32 %v1_3ef72 to i32*
  %v3_3ef72 = load i32, i32* %v2_3ef72, align 4
  %v2_3ef75 = inttoptr i32 %v3_3ef6f to i32*
  store i32 %v3_3ef72, i32* %v2_3ef75, align 4
  %v0_3ef77 = load i32, i32* @ebp, align 4
  %v1_3ef77 = add i32 %v0_3ef77, -28
  %v2_3ef77 = inttoptr i32 %v1_3ef77 to i32*
  %v3_3ef77 = load i32, i32* %v2_3ef77, align 4
  store i32 %v3_3ef77, i32* @eax, align 8
  %v1_3ef7a = add i32 %v0_3ef77, -12
  %v2_3ef7a = inttoptr i32 %v1_3ef7a to i32*
  %v3_3ef7a = load i32, i32* %v2_3ef7a, align 4
  %v1_3ef7d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3ef7d = icmp eq i32 %v1_3ef7d, %v3_3ef7a
  br i1 %v3_3ef7d, label %bb, label %dec_label_pc_3ef86

bb:                                               ; preds = %dec_label_pc_3ef66
  %v1_3ef84 = call i32 @function_3ef8b()
  store i32 %v1_3ef84, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3ef86

dec_label_pc_3ef86:                               ; preds = %bb, %dec_label_pc_3ef66
  %v2_3ef84 = phi i32 [ %v1_3ef84, %bb ], [ %v3_3ef77, %dec_label_pc_3ef66 ]
  ret i32 %v2_3ef84

; uselistorder directives
  uselistorder i1* @cf, { 29, 30, 32, 31, 12, 40, 43, 47, 23, 24, 25, 52, 4, 20, 21, 59, 14, 28, 26, 67, 2, 69, 71, 138, 139, 34, 35, 73, 75, 77, 78, 36, 158, 79, 81, 44, 45, 156, 85, 86, 49, 159, 160, 54, 55, 87, 16, 82, 57, 150, 162, 152, 149, 91, 95, 3, 101, 61, 104, 105, 106, 97, 98, 108, 109, 110, 99, 112, 37, 114, 115, 117, 154, 119, 120, 6, 8, 121, 10, 123, 17, 125, 89, 93, 129, 130, 113, 5, 56, 1, 103, 7, 9, 122, 11, 63, 126, 147, 131, 133, 65, 145, 146, 135, 143, 127, 0, 13, 15, 18, 19, 22, 27, 33, 38, 39, 41, 42, 46, 48, 50, 51, 53, 58, 60, 62, 64, 66, 68, 70, 72, 140, 74, 76, 161, 80, 83, 84, 157, 88, 163, 90, 151, 153, 92, 94, 96, 100, 102, 107, 111, 116, 118, 155, 124, 128, 132, 134, 136, 137, 141, 142, 144, 148 }
}

define i32 @function_3ef8b() local_unnamed_addr {
dec_label_pc_3ef8b:
  %v0_3ef8c = load i32, i32* @eax, align 8
  ret i32 %v0_3ef8c
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ef8f:
  %v1_3efac = call i32 @unknown_7e3e5(i32 %arg1)
  store i32 %v1_3efac, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3efbd

bb:                                               ; preds = %dec_label_pc_3ef8f
  %v1_3efbb = call i32 @function_3efc2()
  br label %dec_label_pc_3efbd

dec_label_pc_3efbd:                               ; preds = %bb, %dec_label_pc_3ef8f
  %v2_3efbb = phi i32 [ %v1_3efbb, %bb ], [ %v1_3efac, %dec_label_pc_3ef8f ]
  ret i32 %v2_3efbb
}

define i32 @function_3efc2() local_unnamed_addr {
dec_label_pc_3efc2:
  %v0_3efc3 = load i32, i32* @eax, align 8
  ret i32 %v0_3efc3
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3efc4:
  %v1_3efe1 = call i32 @unknown_7e451(i32 %arg1)
  store i32 %v1_3efe1, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3eff2

bb:                                               ; preds = %dec_label_pc_3efc4
  %v1_3eff0 = call i32 @function_3eff7()
  br label %dec_label_pc_3eff2

dec_label_pc_3eff2:                               ; preds = %bb, %dec_label_pc_3efc4
  %v2_3eff0 = phi i32 [ %v1_3eff0, %bb ], [ %v1_3efe1, %dec_label_pc_3efc4 ]
  ret i32 %v2_3eff0
}

define i32 @function_3eff7() local_unnamed_addr {
dec_label_pc_3eff7:
  %v0_3eff8 = load i32, i32* @eax, align 8
  ret i32 %v0_3eff8
}

define i32 @_ZSt13__copy_move_aILb0EPKN11json_spirit10Value_implINS0_13Config_vectorISsEEEEPS4_ET1_T0_S9_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3eff9:
  ret i32 %arg3
}

define i32 @function_3f012(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f012:
  %v0_3f012 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3f017 = load i32, i32* @ebp, align 4
  %v2_3f017 = add i32 %v1_3f017, -12
  %v3_3f017 = inttoptr i32 %v2_3f017 to i32*
  store i32 %v0_3f012, i32* %v3_3f017, align 4
  %v0_3f01c = load i32, i32* @ebp, align 4
  %v1_3f01c = add i32 %v0_3f01c, -13
  %v2_3f01c = inttoptr i32 %v1_3f01c to i8*
  store i8 0, i8* %v2_3f01c, align 1
  %v0_3f020 = load i32, i32* @ebp, align 4
  %v1_3f020 = add i32 %v0_3f020, -36
  %v2_3f020 = inttoptr i32 %v1_3f020 to i32*
  %v3_3f020 = load i32, i32* %v2_3f020, align 4
  %v1_3f027 = add i32 %v0_3f020, -32
  %v2_3f027 = inttoptr i32 %v1_3f027 to i32*
  %v3_3f027 = load i32, i32* %v2_3f027, align 4
  %v1_3f02e = add i32 %v0_3f020, -28
  %v2_3f02e = inttoptr i32 %v1_3f02e to i32*
  %v3_3f02e = load i32, i32* %v2_3f02e, align 4
  %v3_3f034 = call i32 @unknown_7e4bd(i32 %v3_3f02e, i32 %v3_3f027, i32 %v3_3f020)
  store i32 %v3_3f034, i32* @eax, align 8
  %v0_3f039 = load i32, i32* @ebp, align 4
  %v1_3f039 = add i32 %v0_3f039, -12
  %v2_3f039 = inttoptr i32 %v1_3f039 to i32*
  %v3_3f039 = load i32, i32* %v2_3f039, align 4
  %v1_3f03c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3f03c = icmp eq i32 %v1_3f03c, %v3_3f039
  br i1 %v3_3f03c, label %bb, label %dec_label_pc_3f045

bb:                                               ; preds = %dec_label_pc_3f012
  %v1_3f043 = call i32 @function_3f04a()
  br label %dec_label_pc_3f045

dec_label_pc_3f045:                               ; preds = %bb, %dec_label_pc_3f012
  %v2_3f043 = phi i32 [ %v1_3f043, %bb ], [ %v3_3f034, %dec_label_pc_3f012 ]
  ret i32 %v2_3f043

; uselistorder directives
  uselistorder i32 -13, { 22, 27, 28, 29, 23, 21, 1, 31, 32, 55, 53, 54, 56, 37, 38, 39, 33, 34, 35, 36, 49, 41, 42, 43, 44, 46, 45, 47, 48, 30, 40, 24, 25, 26, 2, 3, 4, 0, 5, 6, 7, 8, 57, 9, 10, 11, 12, 13, 14, 15, 50, 51, 16, 52, 17, 18, 19, 20 }
}

define i32 @function_3f04a() local_unnamed_addr {
dec_label_pc_3f04a:
  %v0_3f04b = load i32, i32* @eax, align 8
  ret i32 %v0_3f04b
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS4_13Config_vectorISsEEEESt6vectorIS8_SaIS8_EEEEEEvT_SE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f04c:
  ret i32 %arg2
}

define i32 @function_3f062(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_3f062:
  %v2_3f062 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3f062 = load i32, i32* @eax, align 8
  %v4_3f062 = trunc i32 %v3_3f062 to i8
  %v5_3f062 = add i8 %v4_3f062, %v2_3f062
  %v21_3f062 = inttoptr i32 %v3_3f062 to i8*
  store i8 %v5_3f062, i8* %v21_3f062, align 1
  %v0_3f064 = load i32, i32* @eax, align 8
  %v1_3f064 = load i32, i32* @ebp, align 4
  %v2_3f064 = add i32 %v1_3f064, -12
  %v3_3f064 = inttoptr i32 %v2_3f064 to i32*
  store i32 %v0_3f064, i32* %v3_3f064, align 4
  br label %dec_label_pc_3f091

dec_label_pc_3f06b:                               ; preds = %dec_label_pc_3f091
  %v1_3f06b = add i32 %v0_3f06b, -28
  %v1_3f071 = call i32 @unknown_65e8a(i32 %v1_3f06b)
  %v1_3f079 = call i32 @unknown_6d8d4(i32 %v1_3f071)
  %v1_3f081 = call i32 @unknown_6d901(i32 %v1_3f079)
  %v0_3f086 = load i32, i32* @ebp, align 4
  %v1_3f086 = add i32 %v0_3f086, -28
  %v1_3f08c = call i32 @unknown_7e5e0(i32 %v1_3f086)
  br label %dec_label_pc_3f091

dec_label_pc_3f091:                               ; preds = %dec_label_pc_3f06b, %dec_label_pc_3f062
  %v0_3f091 = load i32, i32* @ebp, align 4
  %v1_3f091 = add i32 %v0_3f091, -32
  %v1_3f098 = add i32 %v0_3f091, -28
  %v2_3f09e = call i32 @unknown_7e58c(i32 %v1_3f098, i32 %v1_3f091)
  %v4_3f0a3 = trunc i32 %v2_3f09e to i8
  %v5_3f0a3 = icmp eq i8 %v4_3f0a3, 0
  %v1_3f0a5 = icmp eq i1 %v5_3f0a3, false
  %v0_3f06b = load i32, i32* @ebp, align 4
  br i1 %v1_3f0a5, label %dec_label_pc_3f06b, label %dec_label_pc_3f0a7

dec_label_pc_3f0a7:                               ; preds = %dec_label_pc_3f091
  %v1_3f0a7 = add i32 %v0_3f06b, -12
  %v2_3f0a7 = inttoptr i32 %v1_3f0a7 to i32*
  %v3_3f0a7 = load i32, i32* %v2_3f0a7, align 4
  %v1_3f0aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3f0aa = xor i32 %v1_3f0aa, %v3_3f0a7
  %v3_3f0aa = icmp eq i32 %v2_3f0aa, 0
  store i32 %v2_3f0aa, i32* @eax, align 8
  br i1 %v3_3f0aa, label %bb, label %dec_label_pc_3f0b3

bb:                                               ; preds = %dec_label_pc_3f0a7
  %v1_3f0b1 = call i32 @function_3f0b8()
  br label %dec_label_pc_3f0b3

dec_label_pc_3f0b3:                               ; preds = %bb, %dec_label_pc_3f0a7
  %v2_3f0b1 = phi i32 [ %v1_3f0b1, %bb ], [ %v2_3f0aa, %dec_label_pc_3f0a7 ]
  ret i32 %v2_3f0b1

; uselistorder directives
  uselistorder i8 0, { 106, 53, 107, 17, 109, 185, 72, 73, 75, 76, 113, 114, 48, 97, 91, 92, 88, 99, 122, 102, 103, 104, 105, 49, 50, 108, 127, 128, 129, 130, 3, 4, 5, 132, 133, 213, 6, 7, 140, 141, 8, 142, 143, 145, 146, 147, 148, 9, 10, 11, 86, 87, 12, 13, 14, 154, 51, 52, 18, 54, 55, 57, 58, 1, 56, 59, 60, 16, 61, 63, 64, 2, 62, 65, 152, 66, 117, 118, 221, 222, 220, 224, 223, 168, 67, 155, 169, 157, 158, 159, 119, 120, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 160, 161, 162, 163, 164, 165, 68, 203, 19, 20, 21, 166, 15, 151, 69, 153, 70, 71, 98, 74, 202, 196, 197, 198, 199, 200, 201, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 100, 101, 110, 111, 112, 115, 116, 121, 22, 25, 23, 24, 0, 123, 124, 28, 26, 27, 125, 126, 171, 131, 134, 135, 136, 137, 225, 138, 139, 228, 229, 226, 227, 144, 149, 150, 156, 167, 170, 172, 190, 191, 192, 193, 194, 195, 204, 29, 39, 40, 37, 32, 33, 30, 31, 34, 35, 36, 38, 41, 42, 43, 212, 44, 205, 214, 215, 45, 46, 216, 217, 218, 219, 206, 207, 208, 209, 210, 211, 47 }
}

define i32 @function_3f0b8() local_unnamed_addr {
dec_label_pc_3f0b8:
  %v0_3f0b9 = load i32, i32* @eax, align 8
  ret i32 %v0_3f0b9
}

define i32 @_ZSt13__copy_move_aILb0EPN11json_spirit10Value_implINS0_13Config_vectorISsEEEES5_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f0ba:
  %v3_3f0f5 = call i32 @unknown_7e688(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_3f0f5, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3f106

bb:                                               ; preds = %dec_label_pc_3f0ba
  %v1_3f104 = call i32 @function_3f10b()
  br label %dec_label_pc_3f106

dec_label_pc_3f106:                               ; preds = %bb, %dec_label_pc_3f0ba
  %v2_3f104 = phi i32 [ %v1_3f104, %bb ], [ %v3_3f0f5, %dec_label_pc_3f0ba ]
  ret i32 %v2_3f104
}

define i32 @function_3f10b() local_unnamed_addr {
dec_label_pc_3f10b:
  %v0_3f10c = load i32, i32* @eax, align 8
  ret i32 %v0_3f10c
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5CTxInS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f10d:
  %v2_3f138 = sub i32 %arg2, %arg1
  %v2_3f13c = sdiv i32 %v2_3f138, 4
  %v3_3f13f = mul i32 %v2_3f13c, -991146299
  ret i32 %v3_3f13f
}

define i32 @function_3f152(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f152:
  %eax.global-to-local = alloca i32, align 4
  %v0_3f152 = load i32, i32* @ebp, align 4
  %v1_3f152 = add i32 %v0_3f152, -32
  %v2_3f152 = inttoptr i32 %v1_3f152 to i32*
  %v3_3f152 = load i32, i32* %v2_3f152, align 4
  store i32 %v3_3f152, i32* %eax.global-to-local, align 8
  %v1_3f159 = add i32 %v0_3f152, -36
  %v2_3f159 = inttoptr i32 %v1_3f159 to i32*
  %v3_3f159 = load i32, i32* %v2_3f159, align 4
  store i32 %v3_3f159, i32* %eax.global-to-local, align 8
  %v2_3f15f = call i32 @unknown_7d1df(i32 %v3_3f159, i32 %v3_3f152)
  store i32 %v2_3f15f, i32* %eax.global-to-local, align 8
  %v0_3f164 = load i32, i32* @ebp, align 4
  %v1_3f164 = add i32 %v0_3f164, -16
  %v2_3f164 = inttoptr i32 %v1_3f164 to i32*
  %v3_3f164 = load i32, i32* %v2_3f164, align 4
  %v4_3f164 = add i32 %v3_3f164, -1
  store i32 %v4_3f164, i32* %v2_3f164, align 4
  %v16_3f168 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v16_3f168
}

define i32 @function_3f16c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f16c:
  %v0_3f173 = load i32, i32* @ebp, align 4
  %v1_3f173 = add i32 %v0_3f173, -36
  %v2_3f173 = inttoptr i32 %v1_3f173 to i32*
  %v3_3f173 = load i32, i32* %v2_3f173, align 4
  store i32 %v3_3f173, i32* @eax, align 8
  %v1_3f176 = add i32 %v0_3f173, -12
  %v2_3f176 = inttoptr i32 %v1_3f176 to i32*
  %v3_3f176 = load i32, i32* %v2_3f176, align 4
  %v1_3f179 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3f179 = icmp eq i32 %v1_3f179, %v3_3f176
  br i1 %v3_3f179, label %bb, label %dec_label_pc_3f182

bb:                                               ; preds = %dec_label_pc_3f16c
  %v1_3f180 = call i32 @function_3f187()
  br label %dec_label_pc_3f182

dec_label_pc_3f182:                               ; preds = %bb, %dec_label_pc_3f16c
  %v3_3f180 = phi i32 [ %v1_3f180, %bb ], [ %v3_3f173, %dec_label_pc_3f16c ]
  ret i32 %v3_3f180
}

define i32 @function_3f187() local_unnamed_addr {
dec_label_pc_3f187:
  %v0_3f188 = load i32, i32* @eax, align 8
  ret i32 %v0_3f188
}

define i32 @_Z11UnserializeI11CDataStream9CFlatDataEvRT_RT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3f189:
  %v0_3f1a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3f1a7
}

define i32 @function_3f1b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f1b0:
  %v0_3f1b2 = load i32, i32* @ebp, align 4
  %v1_3f1b2 = add i32 %v0_3f1b2, -40
  %v2_3f1b2 = inttoptr i32 %v1_3f1b2 to i32*
  %v3_3f1b2 = load i32, i32* %v2_3f1b2, align 4
  %v1_3f1b9 = add i32 %v0_3f1b2, -36
  %v2_3f1b9 = inttoptr i32 %v1_3f1b9 to i32*
  %v3_3f1b9 = load i32, i32* %v2_3f1b9, align 4
  %v1_3f1c0 = add i32 %v0_3f1b2, -28
  %v2_3f1c0 = inttoptr i32 %v1_3f1c0 to i32*
  %v3_3f1c0 = load i32, i32* %v2_3f1c0, align 4
  %v1_3f1c7 = add i32 %v0_3f1b2, -32
  %v2_3f1c7 = inttoptr i32 %v1_3f1c7 to i32*
  %v3_3f1c7 = load i32, i32* %v2_3f1c7, align 4
  %v4_3f1cd = call i32 @unknown_7e7d3(i32 %v3_3f1c7, i32 %v3_3f1c0, i32 %v3_3f1b9, i32 %v3_3f1b2)
  %v0_3f1d2 = load i32, i32* @ebp, align 4
  %v1_3f1d2 = add i32 %v0_3f1d2, -12
  %v2_3f1d2 = inttoptr i32 %v1_3f1d2 to i32*
  %v3_3f1d2 = load i32, i32* %v2_3f1d2, align 4
  %v1_3f1d5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3f1d5 = xor i32 %v1_3f1d5, %v3_3f1d2
  %v3_3f1d5 = icmp eq i32 %v2_3f1d5, 0
  store i32 %v2_3f1d5, i32* @eax, align 8
  br i1 %v3_3f1d5, label %bb, label %dec_label_pc_3f1de

bb:                                               ; preds = %dec_label_pc_3f1b0
  %v1_3f1dc = call i32 @function_3f1e3()
  br label %dec_label_pc_3f1de

dec_label_pc_3f1de:                               ; preds = %bb, %dec_label_pc_3f1b0
  %v2_3f1dc = phi i32 [ %v1_3f1dc, %bb ], [ %v2_3f1d5, %dec_label_pc_3f1b0 ]
  ret i32 %v2_3f1dc

; uselistorder directives
  uselistorder i32 %v0_3f1b2, { 1, 0, 2, 3 }
  uselistorder i32 -40, { 31, 91, 92, 33, 34, 27, 14, 103, 21, 38, 15, 16, 17, 39, 23, 82, 83, 80, 81, 40, 41, 42, 19, 43, 18, 45, 46, 123, 115, 47, 25, 26, 48, 49, 35, 119, 36, 37, 120, 121, 122, 70, 50, 51, 52, 117, 55, 56, 57, 58, 116, 30, 61, 62, 63, 44, 64, 65, 66, 32, 67, 68, 69, 22, 0, 75, 53, 54, 20, 76, 78, 79, 71, 72, 118, 124, 125, 88, 89, 77, 90, 93, 94, 95, 85, 84, 86, 87, 1, 2, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 73, 74, 28, 29, 96, 97, 98, 99, 100, 101, 102, 104, 24, 4, 3, 5, 59, 60, 6, 7, 8, 9, 10, 11, 12, 13 }
}

define i32 @function_3f1e3() local_unnamed_addr {
dec_label_pc_3f1e3:
  %v0_3f1e4 = load i32, i32* @eax, align 8
  ret i32 %v0_3f1e4
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6CTxOutS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f1e5:
  %v2_3f210 = sub i32 %arg2, %arg1
  %v2_3f214 = sdiv i32 %v2_3f210, 4
  %v3_3f217 = mul i32 %v2_3f214, -858993459
  br label %dec_label_pc_3f240

dec_label_pc_3f222:                               ; preds = %dec_label_pc_3f240
  %v4_3f222 = add i32 %stack_var_-36.0, -20
  %v4_3f226 = add i32 %stack_var_-40.0, -20
  %v2_3f237 = call i32 @unknown_7cd4b(i32 %v4_3f226, i32 %v4_3f222)
  %v4_3f23c = add i32 %storemerge, -1
  br label %dec_label_pc_3f240

dec_label_pc_3f240:                               ; preds = %dec_label_pc_3f222, %dec_label_pc_3f1e5
  %stack_var_-36.0 = phi i32 [ %arg2, %dec_label_pc_3f1e5 ], [ %v4_3f222, %dec_label_pc_3f222 ]
  %stack_var_-40.0 = phi i32 [ %arg3, %dec_label_pc_3f1e5 ], [ %v4_3f226, %dec_label_pc_3f222 ]
  %storemerge = phi i32 [ %v3_3f217, %dec_label_pc_3f1e5 ], [ %v4_3f23c, %dec_label_pc_3f222 ]
  %v10_3f240 = icmp eq i32 %storemerge, 0
  %v11_3f240 = icmp slt i32 %storemerge, 0
  %v3_3f244 = icmp eq i1 %v11_3f240, false
  %v4_3f244 = icmp eq i1 %v10_3f240, false
  %v5_3f244 = icmp eq i1 %v3_3f244, %v4_3f244
  %v5_3f247 = icmp eq i1 %v5_3f244, false
  %v1_3f249 = icmp eq i1 %v5_3f247, false
  br i1 %v1_3f249, label %dec_label_pc_3f222, label %dec_label_pc_3f24b

dec_label_pc_3f24b:                               ; preds = %dec_label_pc_3f240
  store i32 %stack_var_-40.0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3f25a

bb:                                               ; preds = %dec_label_pc_3f24b
  %v1_3f258 = call i32 @function_3f25f()
  br label %dec_label_pc_3f25a

dec_label_pc_3f25a:                               ; preds = %bb, %dec_label_pc_3f24b
  %v2_3f258 = phi i32 [ %v1_3f258, %bb ], [ %stack_var_-40.0, %dec_label_pc_3f24b ]
  ret i32 %v2_3f258

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 -20, { 3, 4, 42, 41, 43, 23, 24, 44, 45, 0, 1, 34, 59, 60, 61, 46, 47, 38, 35, 36, 37, 39, 48, 49, 50, 96, 97, 88, 54, 94, 95, 5, 6, 9, 10, 55, 56, 31, 25, 26, 27, 51, 52, 53, 89, 90, 91, 92, 93, 40, 57, 58, 64, 67, 68, 69, 62, 63, 82, 28, 83, 12, 11, 70, 71, 72, 73, 74, 75, 84, 85, 76, 77, 78, 79, 29, 30, 32, 33, 7, 14, 13, 2, 17, 15, 16, 65, 66, 18, 8, 19, 80, 81, 20, 21, 22, 86, 87 }
}

define i32 @function_3f25f() local_unnamed_addr {
dec_label_pc_3f25f:
  %v0_3f260 = load i32, i32* @eax, align 8
  ret i32 %v0_3f260
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESC_() local_unnamed_addr {
dec_label_pc_3f261:
  %eax.global-to-local = alloca i32, align 4
  %v17_3f264 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3f264
}

define i32 @function_3f268(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f268:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_3f268 = load i32, i32* @ebp, align 4
  %v1_3f268 = add i32 %v0_3f268, 1
  store i32 %v1_3f268, i32* @ebp, align 4
  %v0_3f269 = load i32, i32* @ecx, align 8
  %v1_3f269 = add i32 %v0_3f269, -1587157947
  %v2_3f269 = inttoptr i32 %v1_3f269 to i8*
  %v3_3f269 = load i8, i8* %v2_3f269, align 1
  %v5_3f269 = trunc i32 %v0_3f269 to i8
  %v6_3f269 = or i8 %v3_3f269, %v5_3f269
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_3f269, i8* %v2_3f269, align 1
  %v0_3f26f = load i32, i32* @eax, align 8
  %v1_3f26f = trunc i32 %v0_3f26f to i8
  %v2_3f26f = load i1, i1* %cf.global-to-local, align 1
  %v3_3f26f = zext i1 %v2_3f26f to i8
  %v4_3f26f = add i8 %v3_3f26f, %v1_3f26f
  %v19_3f26f = icmp ule i8 %v4_3f26f, %v1_3f26f
  %v21_3f26f = icmp eq i1 %v2_3f26f, %v19_3f26f
  store i1 %v21_3f26f, i1* %cf.global-to-local, align 1
  %v22_3f26f = zext i8 %v4_3f26f to i32
  %v24_3f26f = and i32 %v0_3f26f, -256
  %v25_3f26f = or i32 %v22_3f26f, %v24_3f26f
  store i32 %v25_3f26f, i32* %eax.global-to-local, align 8
  %v1_3f271 = inttoptr i32 %v25_3f26f to i8*
  %v2_3f271 = load i8, i8* %v1_3f271, align 1
  %v5_3f271 = add i8 %v2_3f271, %v4_3f26f
  store i8 %v5_3f271, i8* %v1_3f271, align 1
  %v0_3f273 = load i32, i32* %eax.global-to-local, align 8
  %v1_3f273 = load i32, i32* @ebp, align 4
  %v2_3f273 = add i32 %v1_3f273, -12
  %v3_3f273 = inttoptr i32 %v2_3f273 to i32*
  store i32 %v0_3f273, i32* %v3_3f273, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_3f278 = load i32, i32* @ebp, align 4
  %v1_3f278 = add i32 %v0_3f278, -28
  store i32 %v1_3f278, i32* %eax.global-to-local, align 8
  %v1_3f27e = call i32 @unknown_65245(i32 %v1_3f278)
  store i32 %v1_3f27e, i32* %eax.global-to-local, align 8
  %v1_3f283 = inttoptr i32 %v1_3f27e to i32*
  %v2_3f283 = load i32, i32* %v1_3f283, align 4
  store i32 %v2_3f283, i32* @eax, align 8
  %v0_3f285 = load i32, i32* @ebp, align 4
  %v1_3f285 = add i32 %v0_3f285, -12
  %v2_3f285 = inttoptr i32 %v1_3f285 to i32*
  %v3_3f285 = load i32, i32* %v2_3f285, align 4
  %v1_3f288 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3f288 = icmp eq i32 %v1_3f288, %v3_3f285
  br i1 %v3_3f288, label %bb, label %dec_label_pc_3f291

bb:                                               ; preds = %dec_label_pc_3f268
  %v1_3f28f = call i32 @function_3f296()
  store i32 %v1_3f28f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3f291

dec_label_pc_3f291:                               ; preds = %bb, %dec_label_pc_3f268
  %v2_3f28f = phi i32 [ %v1_3f28f, %bb ], [ %v2_3f283, %dec_label_pc_3f268 ]
  ret i32 %v2_3f28f

; uselistorder directives
  uselistorder i8 %v4_3f26f, { 0, 2, 1 }
  uselistorder i8 %v1_3f26f, { 1, 0 }
  uselistorder i32 -1587157947, { 0, 1, 2, 3, 5, 4 }
}

define i32 @function_3f296() local_unnamed_addr {
dec_label_pc_3f296:
  %v0_3f297 = load i32, i32* @eax, align 8
  ret i32 %v0_3f297
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f298:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_3f2af = ptrtoint i32* %stack_var_-32 to i32
  %v1_3f2b5 = call i32 @unknown_63bac(i32 %v2_3f2af)
  %v1_3f2ba = inttoptr i32 %v1_3f2b5 to i32*
  %v2_3f2ba = load i32, i32* %v1_3f2ba, align 4
  store i32 %v2_3f2ba, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3f2c8

bb:                                               ; preds = %dec_label_pc_3f298
  %v1_3f2c6 = call i32 @function_3f2cd()
  br label %dec_label_pc_3f2c8

dec_label_pc_3f2c8:                               ; preds = %bb, %dec_label_pc_3f298
  %v2_3f2c6 = phi i32 [ %v1_3f2c6, %bb ], [ %v2_3f2ba, %dec_label_pc_3f298 ]
  ret i32 %v2_3f2c6
}

define i32 @function_3f2cd() local_unnamed_addr {
dec_label_pc_3f2cd:
  %v0_3f2ce = load i32, i32* @eax, align 8
  ret i32 %v0_3f2ce
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN11json_spirit9Pair_implINS3_13Config_vectorISsEEEEPS7_EET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f2cf:
  %v2_3f2fa = sub i32 %arg2, %arg1
  %v2_3f2fe = sdiv i32 %v2_3f2fa, 8
  ret i32 %v2_3f2fe
}

define i32 @function_3f304(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f304:
  %edi.global-to-local = alloca i32, align 4
  %v0_3f304 = load i32, i32* @eax, align 8
  %v1_3f304 = trunc i32 %v0_3f304 to i8
  %v2_3f304 = load i32, i32* @edi, align 4
  %v3_3f304 = inttoptr i32 %v2_3f304 to i8*
  store i8 %v1_3f304, i8* %v3_3f304, align 1
  %v4_3f304 = load i32, i32* @edi, align 4
  %v5_3f304 = load i1, i1* @df, align 1
  %v6_3f304 = select i1 %v5_3f304, i32 -1, i32 1
  %v7_3f304 = add i32 %v6_3f304, %v4_3f304
  store i32 %v7_3f304, i32* %edi.global-to-local, align 4
  %v0_3f305 = load i32, i32* @eax, align 8
  %v1_3f305 = trunc i32 %v0_3f305 to i8
  %v3_3f305 = inttoptr i32 %v7_3f304 to i8*
  store i8 %v1_3f305, i8* %v3_3f305, align 1
  %v4_3f305 = load i32, i32* %edi.global-to-local, align 4
  %v5_3f305 = load i1, i1* @df, align 1
  %v6_3f305 = select i1 %v5_3f305, i32 -1, i32 1
  %v7_3f305 = add i32 %v6_3f305, %v4_3f305
  store i32 %v7_3f305, i32* %edi.global-to-local, align 4
  %v0_3f306 = load i32, i32* @eax, align 8
  %v1_3f306 = trunc i32 %v0_3f306 to i8
  %v3_3f306 = inttoptr i32 %v7_3f305 to i8*
  store i8 %v1_3f306, i8* %v3_3f306, align 1
  %v4_3f306 = load i32, i32* %edi.global-to-local, align 4
  %v5_3f306 = load i1, i1* @df, align 1
  %v6_3f306 = select i1 %v5_3f306, i32 -1, i32 1
  %v7_3f306 = add i32 %v6_3f306, %v4_3f306
  store i32 %v7_3f306, i32* %edi.global-to-local, align 4
  %v0_3f307 = load i32, i32* @eax, align 8
  %v1_3f307 = load i32, i32* @ebp, align 4
  %v2_3f307 = add i32 %v1_3f307, -16
  %v3_3f307 = inttoptr i32 %v2_3f307 to i32*
  store i32 %v0_3f307, i32* %v3_3f307, align 4
  %v0_3f30a = load i32, i32* @eax, align 8
  ret i32 %v0_3f30a

; uselistorder directives
  uselistorder i1* @df, { 1, 2, 3, 4, 0 }
}

define i32 @function_3f320(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f320:
  %v0_3f322 = load i32, i32* @ebp, align 4
  %v1_3f322 = add i32 %v0_3f322, -36
  %v2_3f322 = inttoptr i32 %v1_3f322 to i32*
  %v3_3f322 = load i32, i32* %v2_3f322, align 4
  %v4_3f322 = add i32 %v3_3f322, 24
  store i32 %v4_3f322, i32* %v2_3f322, align 4
  %v0_3f326 = load i32, i32* @ebp, align 4
  %v1_3f326 = add i32 %v0_3f326, -16
  %v2_3f326 = inttoptr i32 %v1_3f326 to i32*
  %v3_3f326 = load i32, i32* %v2_3f326, align 4
  %v4_3f326 = add i32 %v3_3f326, -1
  store i32 %v4_3f326, i32* %v2_3f326, align 4
  %v0_3f32a = load i32, i32* @ebp, align 4
  %v1_3f335 = add i32 %v0_3f32a, -36
  %v2_3f335 = inttoptr i32 %v1_3f335 to i32*
  %v3_3f335 = load i32, i32* %v2_3f335, align 4
  store i32 %v3_3f335, i32* @eax, align 8
  %v1_3f338 = add i32 %v0_3f32a, -12
  %v2_3f338 = inttoptr i32 %v1_3f338 to i32*
  %v3_3f338 = load i32, i32* %v2_3f338, align 4
  %v1_3f33b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3f33b = icmp eq i32 %v1_3f33b, %v3_3f338
  br i1 %v3_3f33b, label %bb, label %dec_label_pc_3f344

bb:                                               ; preds = %dec_label_pc_3f320
  %v1_3f342 = call i32 @function_3f349()
  br label %dec_label_pc_3f344

dec_label_pc_3f344:                               ; preds = %bb, %dec_label_pc_3f320
  %v3_3f342 = phi i32 [ %v1_3f342, %bb ], [ %v3_3f335, %dec_label_pc_3f320 ]
  ret i32 %v3_3f342

; uselistorder directives
  uselistorder i32 %v0_3f32a, { 1, 0 }
}

define i32 @function_3f349() local_unnamed_addr {
dec_label_pc_3f349:
  %v0_3f34a = load i32, i32* @eax, align 8
  ret i32 %v0_3f34a
}

define i32 @_ZN9__gnu_cxxneIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f34b:
  ret i32 %arg1
}

define i32 @function_3f357(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f357:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3f359 = load i32, i32* @ebp, align 4
  %v1_3f35c = add i32 %v0_3f359, 2
  store i32 %v1_3f35c, i32* @ebp, align 4
  %v0_3f35f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3f364 = add i32 %v0_3f359, -10
  %v3_3f364 = inttoptr i32 %v2_3f364 to i32*
  store i32 %v0_3f35f, i32* %v3_3f364, align 4
  %v0_3f369 = load i32, i32* @ebp, align 4
  %v1_3f369 = add i32 %v0_3f369, -28
  %v2_3f369 = inttoptr i32 %v1_3f369 to i32*
  %v3_3f369 = load i32, i32* %v2_3f369, align 4
  %v1_3f36f = call i32 @unknown_63c5f(i32 %v3_3f369)
  %v1_3f374 = inttoptr i32 %v1_3f36f to i32*
  %v2_3f374 = load i32, i32* %v1_3f374, align 4
  store i32 %v2_3f374, i32* %ebx.global-to-local, align 4
  %v0_3f376 = load i32, i32* @ebp, align 4
  %v1_3f376 = add i32 %v0_3f376, -32
  %v2_3f376 = inttoptr i32 %v1_3f376 to i32*
  %v3_3f376 = load i32, i32* %v2_3f376, align 4
  %v1_3f37c = call i32 @unknown_63c5f(i32 %v3_3f376)
  %v1_3f381 = inttoptr i32 %v1_3f37c to i32*
  %v2_3f381 = load i32, i32* %v1_3f381, align 4
  %v0_3f383 = load i32, i32* %ebx.global-to-local, align 4
  %v12_3f383 = icmp eq i32 %v0_3f383, %v2_3f381
  %v1_3f385 = icmp eq i1 %v12_3f383, false
  %v2_3f385 = zext i1 %v1_3f385 to i32
  %v4_3f385 = and i32 %v2_3f381, -256
  %v5_3f385 = or i32 %v2_3f385, %v4_3f385
  store i32 %v5_3f385, i32* @eax, align 8
  %v0_3f388 = load i32, i32* @ebp, align 4
  %v1_3f388 = add i32 %v0_3f388, -12
  %v2_3f388 = inttoptr i32 %v1_3f388 to i32*
  %v3_3f388 = load i32, i32* %v2_3f388, align 4
  %v1_3f38b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3f38b = icmp eq i32 %v1_3f38b, %v3_3f388
  br i1 %v3_3f38b, label %bb, label %dec_label_pc_3f394

bb:                                               ; preds = %dec_label_pc_3f357
  %v1_3f392 = call i32 @function_3f399()
  br label %dec_label_pc_3f394

dec_label_pc_3f394:                               ; preds = %bb, %dec_label_pc_3f357
  %v3_3f392 = phi i32 [ %v1_3f392, %bb ], [ %v5_3f385, %dec_label_pc_3f357 ]
  ret i32 %v3_3f392

; uselistorder directives
  uselistorder i32 %v2_3f381, { 1, 0 }
  uselistorder i32 (i32)* @unknown_63c5f, { 1, 0 }
}

define i32 @function_3f399() local_unnamed_addr {
dec_label_pc_3f399:
  %v0_3f39e = load i32, i32* @eax, align 8
  ret i32 %v0_3f39e
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit9Pair_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3f3a0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp99
}

define i32 @function_3f3c2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f3c2:
  %v0_3f3c2 = load i32, i32* @edx, align 4
  %v1_3f3c2 = load i32, i32* @eax, align 8
  %v2_3f3c2 = inttoptr i32 %v1_3f3c2 to i32*
  store i32 %v0_3f3c2, i32* %v2_3f3c2, align 4
  %v0_3f3c4 = load i32, i32* @ebp, align 4
  %v1_3f3c4 = add i32 %v0_3f3c4, -28
  %v2_3f3c4 = inttoptr i32 %v1_3f3c4 to i32*
  %v3_3f3c4 = load i32, i32* %v2_3f3c4, align 4
  store i32 %v3_3f3c4, i32* @eax, align 8
  %v1_3f3c7 = add i32 %v0_3f3c4, -12
  %v2_3f3c7 = inttoptr i32 %v1_3f3c7 to i32*
  %v3_3f3c7 = load i32, i32* %v2_3f3c7, align 4
  %v1_3f3ca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3f3ca = icmp eq i32 %v1_3f3ca, %v3_3f3c7
  br i1 %v3_3f3ca, label %bb, label %dec_label_pc_3f3d3

bb:                                               ; preds = %dec_label_pc_3f3c2
  %v1_3f3d1 = call i32 @function_3f3d8()
  br label %dec_label_pc_3f3d3

dec_label_pc_3f3d3:                               ; preds = %bb, %dec_label_pc_3f3c2
  %v2_3f3d1 = phi i32 [ %v1_3f3d1, %bb ], [ %v3_3f3c4, %dec_label_pc_3f3c2 ]
  ret i32 %v2_3f3d1

; uselistorder directives
  uselistorder i32* @edx, { 31, 33, 34, 153, 37, 38, 39, 40, 41, 42, 21, 148, 149, 24, 167, 2, 51, 52, 53, 10, 8, 60, 14, 15, 16, 6, 17, 62, 65, 66, 29, 154, 68, 69, 70, 71, 26, 76, 78, 35, 43, 44, 46, 47, 196, 180, 79, 19, 80, 81, 82, 83, 189, 190, 191, 192, 88, 84, 90, 186, 92, 188, 199, 200, 96, 97, 98, 182, 61, 103, 5, 104, 105, 106, 109, 110, 113, 114, 111, 112, 12, 116, 118, 119, 120, 126, 94, 7, 128, 129, 134, 54, 4, 55, 100, 122, 183, 143, 130, 0, 133, 1, 145, 146, 49, 150, 137, 138, 155, 156, 139, 140, 141, 142, 181, 165, 169, 206, 147, 171, 179, 121, 124, 157, 158, 159, 160, 27, 28, 163, 164, 168, 9, 172, 173, 174, 175, 176, 11, 13, 18, 50, 178, 20, 22, 23, 25, 99, 30, 32, 36, 45, 48, 56, 57, 58, 59, 184, 63, 64, 67, 72, 73, 74, 75, 77, 85, 86, 87, 193, 194, 89, 91, 93, 197, 198, 201, 95, 202, 101, 102, 107, 108, 115, 117, 123, 125, 127, 131, 132, 135, 136, 144, 203, 151, 152, 195, 161, 162, 166, 170, 177, 185, 3, 187, 204, 205 }
}

define i32 @function_3f3d8() local_unnamed_addr {
dec_label_pc_3f3d8:
  %v0_3f3d9 = load i32, i32* @eax, align 8
  ret i32 %v0_3f3d9
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN11json_spirit9Pair_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f3da:
  %v2_3f405 = sub i32 %arg2, %arg1
  %v2_3f409 = sdiv i32 %v2_3f405, 8
  %v3_3f40c = mul i32 %v2_3f409, -1431655765
  %v10_3f435110 = icmp eq i32 %v3_3f40c, 0
  %v11_3f435111 = icmp slt i32 %v3_3f40c, 0
  %v3_3f439112 = icmp eq i1 %v11_3f435111, false
  %v4_3f439113 = icmp eq i1 %v10_3f435110, false
  %v5_3f439114 = icmp eq i1 %v3_3f439112, %v4_3f439113
  %v5_3f43c115 = icmp eq i1 %v5_3f439114, false
  %v1_3f43e116 = icmp eq i1 %v5_3f43c115, false
  store i32 %arg3, i32* @eax, align 8
  br i1 %v1_3f43e116, label %dec_label_pc_3f417, label %dec_label_pc_3f440

dec_label_pc_3f417:                               ; preds = %dec_label_pc_3f3da, %dec_label_pc_3f417
  %storemerge119 = phi i32 [ %v4_3f431, %dec_label_pc_3f417 ], [ %v3_3f40c, %dec_label_pc_3f3da ]
  %stack_var_-40.0118 = phi i32 [ %v4_3f42d, %dec_label_pc_3f417 ], [ %arg3, %dec_label_pc_3f3da ]
  %stack_var_-32.0117 = phi i32 [ %v4_3f429, %dec_label_pc_3f417 ], [ %arg1, %dec_label_pc_3f3da ]
  %v2_3f424 = call i32 @unknown_5d07a(i32 %stack_var_-40.0118, i32 %stack_var_-32.0117)
  %v4_3f429 = add i32 %stack_var_-32.0117, 24
  %v4_3f42d = add i32 %stack_var_-40.0118, 24
  %v4_3f431 = add i32 %storemerge119, -1
  %v13_3f431 = icmp eq i32 %v4_3f431, 0
  %v14_3f431 = icmp slt i32 %v4_3f431, 0
  %v3_3f439 = icmp eq i1 %v14_3f431, false
  %v4_3f439 = icmp eq i1 %v13_3f431, false
  %v5_3f439 = icmp eq i1 %v3_3f439, %v4_3f439
  %v5_3f43c = icmp eq i1 %v5_3f439, false
  %v1_3f43e = icmp eq i1 %v5_3f43c, false
  store i32 %v4_3f42d, i32* @eax, align 8
  br i1 %v1_3f43e, label %dec_label_pc_3f417, label %dec_label_pc_3f440

dec_label_pc_3f440:                               ; preds = %dec_label_pc_3f417, %dec_label_pc_3f3da
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_3f3da ], [ %v4_3f42d, %dec_label_pc_3f417 ]
  br i1 true, label %bb, label %dec_label_pc_3f44f

bb:                                               ; preds = %dec_label_pc_3f440
  %v1_3f44d = call i32 @function_3f454()
  br label %dec_label_pc_3f44f

dec_label_pc_3f44f:                               ; preds = %bb, %dec_label_pc_3f440
  %v2_3f44d = phi i32 [ %v1_3f44d, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_3f440 ]
  ret i32 %v2_3f44d

; uselistorder directives
  uselistorder i32 %v4_3f431, { 2, 1, 0 }
  uselistorder i32 %v4_3f42d, { 0, 2, 1 }
  uselistorder i32 %stack_var_-32.0117, { 1, 0 }
  uselistorder i32 %stack_var_-40.0118, { 1, 0 }
  uselistorder i32 8, { 1, 2, 150, 151, 152, 50, 51, 153, 154, 124, 125, 110, 3, 111, 52, 53, 54, 162, 163, 67, 204, 86, 55, 166, 38, 168, 169, 56, 173, 130, 156, 157, 249, 250, 251, 252, 177, 57, 58, 179, 180, 39, 40, 181, 182, 148, 185, 186, 70, 0, 4, 5, 115, 59, 60, 6, 7, 8, 9, 10, 140, 41, 42, 61, 62, 63, 193, 194, 64, 118, 195, 196, 189, 11, 12, 13, 183, 184, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 248, 77, 43, 14, 44, 78, 79, 212, 213, 80, 220, 219, 222, 203, 81, 82, 83, 84, 85, 87, 205, 206, 207, 208, 209, 210, 211, 88, 89, 90, 91, 233, 214, 92, 93, 94, 95, 217, 15, 96, 35, 36, 240, 97, 98, 27, 99, 100, 101, 26, 16, 221, 102, 37, 223, 224, 142, 103, 104, 105, 106, 246, 107, 247, 108, 109, 231, 232, 234, 112, 113, 114, 225, 226, 227, 228, 116, 117, 119, 236, 237, 238, 120, 121, 122, 123, 243, 126, 127, 128, 129, 131, 132, 133, 17, 134, 135, 136, 137, 18, 19, 20, 138, 21, 139, 141, 143, 144, 145, 146, 147, 149, 155, 158, 159, 160, 161, 164, 165, 245, 167, 170, 171, 28, 22, 172, 174, 175, 176, 178, 29, 23, 187, 188, 190, 191, 192, 197, 198, 199, 200, 201, 202, 30, 257, 24, 25, 215, 216, 218, 48, 49, 229, 230, 235, 239, 241, 242, 244, 31, 32, 33, 34, 253, 254, 255, 256, 45, 46, 47 }
  uselistorder label %dec_label_pc_3f417, { 1, 0 }
}

define i32 @function_3f454() local_unnamed_addr {
dec_label_pc_3f454:
  %v0_3f455 = load i32, i32* @eax, align 8
  ret i32 %v0_3f455
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESC_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f456:
  ret i32 %arg1
}

define i32 @function_3f48a() local_unnamed_addr {
dec_label_pc_3f48a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3f48a = load i32, i32* %ecx.global-to-local, align 8
  %v1_3f48a = add i32 %v0_3f48a, -1
  store i32 %v1_3f48a, i32* %ecx.global-to-local, align 8
  %v0_3f48c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3f48c
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS2_13Config_vectorISsEEEESt6vectorIS6_SaIS6_EEEELb1EE7_S_baseESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f48d:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_3f4a4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_3f4aa = call i32 @unknown_66237(i32 %v2_3f4a4)
  %v1_3f4af = inttoptr i32 %v1_3f4aa to i32*
  %v2_3f4af = load i32, i32* %v1_3f4af, align 4
  store i32 %v2_3f4af, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3f4bd

bb:                                               ; preds = %dec_label_pc_3f48d
  %v1_3f4bb = call i32 @function_3f4c2()
  br label %dec_label_pc_3f4bd

dec_label_pc_3f4bd:                               ; preds = %bb, %dec_label_pc_3f48d
  %v2_3f4bb = phi i32 [ %v1_3f4bb, %bb ], [ %v2_3f4af, %dec_label_pc_3f48d ]
  ret i32 %v2_3f4bb
}

define i32 @function_3f4c2() local_unnamed_addr {
dec_label_pc_3f4c2:
  %v0_3f4c3 = load i32, i32* @eax, align 8
  ret i32 %v0_3f4c3
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN11json_spirit10Value_implINS3_13Config_vectorISsEEEEPS7_EET0_T_SC_SB_() local_unnamed_addr {
dec_label_pc_3f4c4:
  %eax.global-to-local = alloca i32, align 4
  %v2_3f4c5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_3f4c5
}

define i32 @function_3f4c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f4c8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_3f4c9 = load i32, i32* @ecx, align 8
  %v0_3f4d1 = load i32, i32* @ebp, align 4
  %v0_3f4d2 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_3f4d2 = or i32 %v0_3f4d2, 137
  store i32 %v11_3f4d2, i32* %eax.global-to-local, align 8
  %v1_3f4d5 = add i32 %v4_3f4c9, 255
  %v1_3f4d7 = add i32 %v0_3f4d1, 3
  store i32 %v1_3f4d7, i32* @ebp, align 4
  %v1_3f4d8 = add i32 %v4_3f4c9, -1587159996
  %v2_3f4d8 = inttoptr i32 %v1_3f4d8 to i8*
  %v3_3f4d8 = load i8, i8* %v2_3f4d8, align 1
  %v5_3f4d8 = trunc i32 %v1_3f4d5 to i8
  %v8_3f4d8 = add i8 %v3_3f4d8, %v5_3f4d8
  %v28_3f4d8 = icmp ult i8 %v8_3f4d8, %v3_3f4d8
  store i1 %v28_3f4d8, i1* %cf.global-to-local, align 1
  store i8 %v8_3f4d8, i8* %v2_3f4d8, align 1
  %v0_3f4de = load i32, i32* %eax.global-to-local, align 8
  %v1_3f4de = trunc i32 %v0_3f4de to i8
  %v2_3f4de = load i1, i1* %cf.global-to-local, align 1
  %v3_3f4de = zext i1 %v2_3f4de to i8
  %v4_3f4de = add i8 %v3_3f4de, %v1_3f4de
  %v19_3f4de = icmp ule i8 %v4_3f4de, %v1_3f4de
  %v21_3f4de = icmp eq i1 %v2_3f4de, %v19_3f4de
  store i1 %v21_3f4de, i1* %cf.global-to-local, align 1
  %v22_3f4de = zext i8 %v4_3f4de to i32
  %v24_3f4de = and i32 %v0_3f4de, -256
  %v25_3f4de = or i32 %v22_3f4de, %v24_3f4de
  store i32 %v25_3f4de, i32* %eax.global-to-local, align 8
  %v1_3f4e0 = inttoptr i32 %v25_3f4de to i8*
  %v2_3f4e0 = load i8, i8* %v1_3f4e0, align 1
  %v5_3f4e0 = add i8 %v2_3f4e0, %v4_3f4de
  store i8 %v5_3f4e0, i8* %v1_3f4e0, align 1
  %v0_3f4e2 = load i32, i32* %eax.global-to-local, align 8
  %v1_3f4e2 = load i32, i32* @ebp, align 4
  %v2_3f4e2 = add i32 %v1_3f4e2, -12
  %v3_3f4e2 = inttoptr i32 %v2_3f4e2 to i32*
  store i32 %v0_3f4e2, i32* %v3_3f4e2, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3f4e7 = load i32, i32* @ebp, align 4
  %v1_3f4e7 = add i32 %v0_3f4e7, -32
  %v2_3f4e7 = inttoptr i32 %v1_3f4e7 to i32*
  %v3_3f4e7 = load i32, i32* %v2_3f4e7, align 4
  %v1_3f4ea = add i32 %v0_3f4e7, -28
  %v2_3f4ea = inttoptr i32 %v1_3f4ea to i32*
  %v3_3f4ea = load i32, i32* %v2_3f4ea, align 4
  %v2_3f4ef = sub i32 %v3_3f4e7, %v3_3f4ea
  %v2_3f4f3 = sdiv i32 %v2_3f4ef, 4
  %v3_3f4f6 = mul i32 %v2_3f4f3, -858993459
  store i32 %v3_3f4f6, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_3f4fc = add i32 %v0_3f4e7, -16
  %v3_3f4fc = inttoptr i32 %v2_3f4fc to i32*
  store i32 %v3_3f4f6, i32* %v3_3f4fc, align 4
  br label %dec_label_pc_3f51f

dec_label_pc_3f501:                               ; preds = %dec_label_pc_3f51f
  %v1_3f501 = add i32 %v0_3f51f, -28
  %v2_3f501 = inttoptr i32 %v1_3f501 to i32*
  %v3_3f501 = load i32, i32* %v2_3f501, align 4
  store i32 %v3_3f501, i32* %eax.global-to-local, align 8
  %v1_3f508 = add i32 %v0_3f51f, -36
  %v2_3f508 = inttoptr i32 %v1_3f508 to i32*
  %v3_3f508 = load i32, i32* %v2_3f508, align 4
  store i32 %v3_3f508, i32* %eax.global-to-local, align 8
  %v2_3f50e = call i32 @unknown_63e9c(i32 %v3_3f508, i32 %v3_3f501)
  store i32 %v2_3f50e, i32* %eax.global-to-local, align 8
  %v0_3f513 = load i32, i32* @ebp, align 4
  %v1_3f513 = add i32 %v0_3f513, -28
  %v2_3f513 = inttoptr i32 %v1_3f513 to i32*
  %v3_3f513 = load i32, i32* %v2_3f513, align 4
  %v4_3f513 = add i32 %v3_3f513, 20
  store i32 %v4_3f513, i32* %v2_3f513, align 4
  %v0_3f517 = load i32, i32* @ebp, align 4
  %v1_3f517 = add i32 %v0_3f517, -36
  %v2_3f517 = inttoptr i32 %v1_3f517 to i32*
  %v3_3f517 = load i32, i32* %v2_3f517, align 4
  %v4_3f517 = add i32 %v3_3f517, 20
  store i32 %v4_3f517, i32* %v2_3f517, align 4
  %v0_3f51b = load i32, i32* @ebp, align 4
  %v1_3f51b = add i32 %v0_3f51b, -16
  %v2_3f51b = inttoptr i32 %v1_3f51b to i32*
  %v3_3f51b = load i32, i32* %v2_3f51b, align 4
  %v4_3f51b = add i32 %v3_3f51b, -1
  %v8_3f51b = icmp eq i32 %v3_3f51b, 0
  store i1 %v8_3f51b, i1* %cf.global-to-local, align 1
  store i32 %v4_3f51b, i32* %v2_3f51b, align 4
  br label %dec_label_pc_3f51f

dec_label_pc_3f51f:                               ; preds = %dec_label_pc_3f501, %dec_label_pc_3f4c8
  %v0_3f51f = load i32, i32* @ebp, align 4
  %v1_3f51f = add i32 %v0_3f51f, -16
  %v2_3f51f = inttoptr i32 %v1_3f51f to i32*
  %v3_3f51f = load i32, i32* %v2_3f51f, align 4
  %v10_3f51f = icmp eq i32 %v3_3f51f, 0
  %v11_3f51f = icmp slt i32 %v3_3f51f, 0
  %v3_3f523 = icmp eq i1 %v11_3f51f, false
  %v4_3f523 = icmp eq i1 %v10_3f51f, false
  %v5_3f523 = icmp eq i1 %v3_3f523, %v4_3f523
  %v6_3f523 = zext i1 %v5_3f523 to i32
  %v7_3f523 = load i32, i32* %eax.global-to-local, align 8
  %v8_3f523 = and i32 %v7_3f523, -256
  %v9_3f523 = or i32 %v6_3f523, %v8_3f523
  store i32 %v9_3f523, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_3f526 = icmp eq i1 %v5_3f523, false
  %v1_3f528 = icmp eq i1 %v5_3f526, false
  br i1 %v1_3f528, label %dec_label_pc_3f501, label %dec_label_pc_3f52a

dec_label_pc_3f52a:                               ; preds = %dec_label_pc_3f51f
  %v1_3f52a = add i32 %v0_3f51f, -36
  %v2_3f52a = inttoptr i32 %v1_3f52a to i32*
  %v3_3f52a = load i32, i32* %v2_3f52a, align 4
  store i32 %v3_3f52a, i32* @eax, align 8
  %v1_3f52d = add i32 %v0_3f51f, -12
  %v2_3f52d = inttoptr i32 %v1_3f52d to i32*
  %v3_3f52d = load i32, i32* %v2_3f52d, align 4
  %v1_3f530 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3f530 = icmp eq i32 %v1_3f530, %v3_3f52d
  br i1 %v3_3f530, label %bb, label %dec_label_pc_3f539

bb:                                               ; preds = %dec_label_pc_3f52a
  %v1_3f537 = call i32 @function_3f53e()
  store i32 %v1_3f537, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3f539

dec_label_pc_3f539:                               ; preds = %bb, %dec_label_pc_3f52a
  %v2_3f537 = phi i32 [ %v1_3f537, %bb ], [ %v3_3f52a, %dec_label_pc_3f52a ]
  ret i32 %v2_3f537

; uselistorder directives
  uselistorder i32 %v3_3f51f, { 1, 0 }
  uselistorder i32 %v0_3f51f, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v3_3f4f6, { 1, 0 }
  uselistorder i8 %v4_3f4de, { 0, 2, 1 }
  uselistorder i8 %v1_3f4de, { 1, 0 }
  uselistorder i8 %v3_3f4d8, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 1, 2, 3, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 3, { 3, 4, 5, 6, 21, 24, 7, 8, 0, 9, 10, 11, 12, 26, 13, 1, 14, 15, 16, 17, 20, 27, 18, 19, 2, 23, 22, 25 }
  uselistorder i32 255, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 46, 9, 10, 11, 12, 13, 14, 47, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 137, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
}

define i32 @function_3f53c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f53c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3f53e() local_unnamed_addr {
dec_label_pc_3f53e:
  %v0_3f53f = load i32, i32* @eax, align 8
  ret i32 %v0_3f53f
}

define i32 @_ZN9__gnu_cxxneIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f540:
  %v1_3f564 = call i32 @unknown_662ea(i32 %arg1)
  %v1_3f569 = inttoptr i32 %v1_3f564 to i32*
  %v2_3f569 = load i32, i32* %v1_3f569, align 4
  %v1_3f571 = call i32 @unknown_662ea(i32 %arg2)
  %v1_3f576 = inttoptr i32 %v1_3f571 to i32*
  %v2_3f576 = load i32, i32* %v1_3f576, align 4
  %v12_3f578 = icmp eq i32 %v2_3f569, %v2_3f576
  %v1_3f57a = icmp eq i1 %v12_3f578, false
  %v2_3f57a = zext i1 %v1_3f57a to i32
  %v4_3f57a = and i32 %v2_3f576, -256
  %v5_3f57a = or i32 %v2_3f57a, %v4_3f57a
  store i32 %v5_3f57a, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_3f589

bb:                                               ; preds = %dec_label_pc_3f540
  %v1_3f587 = call i32 @function_3f58e()
  br label %dec_label_pc_3f589

dec_label_pc_3f589:                               ; preds = %bb, %dec_label_pc_3f540
  %v2_3f587 = phi i32 [ %v1_3f587, %bb ], [ %v5_3f57a, %dec_label_pc_3f540 ]
  ret i32 %v2_3f587

; uselistorder directives
  uselistorder i32 %v2_3f576, { 1, 0 }
  uselistorder i32 (i32)* @unknown_662ea, { 1, 0 }
}

declare i32 @__stack_chk_fail.1659(i32) local_unnamed_addr

define i32 @function_3f58e() local_unnamed_addr {
dec_label_pc_3f58e:
  %v0_3f593 = load i32, i32* @eax, align 8
  ret i32 %v0_3f593
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN11json_spirit10Value_implINS1_13Config_vectorISsEEEESt6vectorIS5_SaIS5_EEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f594:
  %v0_3f5a0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3f5a0
}

define i32 @function_3f5a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f5a6:
  %v0_3f5a6 = load i32, i32* @eax, align 8
  %v1_3f5a6 = load i32, i32* @ebp, align 4
  %v2_3f5a6 = add i32 %v1_3f5a6, -12
  %v3_3f5a6 = inttoptr i32 %v2_3f5a6 to i32*
  store i32 %v0_3f5a6, i32* %v3_3f5a6, align 4
  %v0_3f5ab = load i32, i32* @ebp, align 4
  %v1_3f5ab = add i32 %v0_3f5ab, -28
  %v2_3f5ab = inttoptr i32 %v1_3f5ab to i32*
  %v3_3f5ab = load i32, i32* %v2_3f5ab, align 4
  %v1_3f5ae = inttoptr i32 %v3_3f5ab to i32*
  %v2_3f5ae = load i32, i32* %v1_3f5ae, align 4
  %v1_3f5b0 = add i32 %v2_3f5ae, 20
  %v2_3f5b6 = inttoptr i32 %v3_3f5ab to i32*
  store i32 %v1_3f5b0, i32* %v2_3f5b6, align 4
  %v0_3f5b8 = load i32, i32* @ebp, align 4
  %v1_3f5b8 = add i32 %v0_3f5b8, -28
  %v2_3f5b8 = inttoptr i32 %v1_3f5b8 to i32*
  %v3_3f5b8 = load i32, i32* %v2_3f5b8, align 4
  store i32 %v3_3f5b8, i32* @eax, align 8
  %v1_3f5bb = add i32 %v0_3f5b8, -12
  %v2_3f5bb = inttoptr i32 %v1_3f5bb to i32*
  %v3_3f5bb = load i32, i32* %v2_3f5bb, align 4
  %v1_3f5be = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3f5be = icmp eq i32 %v1_3f5be, %v3_3f5bb
  br i1 %v3_3f5be, label %bb, label %dec_label_pc_3f5c7

bb:                                               ; preds = %dec_label_pc_3f5a6
  %v1_3f5c5 = call i32 @function_3f5cc()
  br label %dec_label_pc_3f5c7

dec_label_pc_3f5c7:                               ; preds = %bb, %dec_label_pc_3f5a6
  %v2_3f5c5 = phi i32 [ %v1_3f5c5, %bb ], [ %v3_3f5b8, %dec_label_pc_3f5a6 ]
  ret i32 %v2_3f5c5
}

define i32 @function_3f5cc() local_unnamed_addr {
dec_label_pc_3f5cc:
  %v0_3f5cd = load i32, i32* @eax, align 8
  ret i32 %v0_3f5cd
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN11json_spirit10Value_implINS3_13Config_vectorISsEEEES8_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3f5ce:
  %v0_3f5e6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3f5e6
}

define i32 @function_3f5ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f5ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_3f5ec = load i32, i32* @eax, align 8
  %v1_3f5ec = load i32, i32* @ebp, align 4
  %v2_3f5ec = add i32 %v1_3f5ec, -12
  %v3_3f5ec = inttoptr i32 %v2_3f5ec to i32*
  store i32 %v0_3f5ec, i32* %v3_3f5ec, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3f5f1 = load i32, i32* @ebp, align 4
  %v1_3f5f1 = add i32 %v0_3f5f1, -32
  %v2_3f5f1 = inttoptr i32 %v1_3f5f1 to i32*
  %v3_3f5f1 = load i32, i32* %v2_3f5f1, align 4
  %v1_3f5f4 = add i32 %v0_3f5f1, -28
  %v2_3f5f4 = inttoptr i32 %v1_3f5f4 to i32*
  %v3_3f5f4 = load i32, i32* %v2_3f5f4, align 4
  %v2_3f5f9 = sub i32 %v3_3f5f1, %v3_3f5f4
  store i32 %v2_3f5f9, i32* @ecx, align 8
  %v2_3f5fd = sdiv i32 %v2_3f5f9, 4
  %v3_3f600 = mul i32 %v2_3f5fd, -858993459
  store i32 %v3_3f600, i32* %eax.global-to-local, align 8
  %v2_3f606 = add i32 %v0_3f5f1, -16
  %v3_3f606 = inttoptr i32 %v2_3f606 to i32*
  store i32 %v3_3f600, i32* %v3_3f606, align 4
  br label %dec_label_pc_3f629

dec_label_pc_3f60b:                               ; preds = %dec_label_pc_3f629
  %v1_3f60b = add i32 %v0_3f629, -28
  %v2_3f60b = inttoptr i32 %v1_3f60b to i32*
  %v3_3f60b = load i32, i32* %v2_3f60b, align 4
  store i32 %v3_3f60b, i32* %eax.global-to-local, align 8
  %v1_3f612 = add i32 %v0_3f629, -36
  %v2_3f612 = inttoptr i32 %v1_3f612 to i32*
  %v3_3f612 = load i32, i32* %v2_3f612, align 4
  store i32 %v3_3f612, i32* %eax.global-to-local, align 8
  %v2_3f618 = call i32 @unknown_63fa6(i32 %v3_3f612, i32 %v3_3f60b)
  store i32 %v2_3f618, i32* %eax.global-to-local, align 8
  %v0_3f61d = load i32, i32* @ebp, align 4
  %v1_3f61d = add i32 %v0_3f61d, -28
  %v2_3f61d = inttoptr i32 %v1_3f61d to i32*
  %v3_3f61d = load i32, i32* %v2_3f61d, align 4
  %v4_3f61d = add i32 %v3_3f61d, 20
  store i32 %v4_3f61d, i32* %v2_3f61d, align 4
  %v0_3f621 = load i32, i32* @ebp, align 4
  %v1_3f621 = add i32 %v0_3f621, -36
  %v2_3f621 = inttoptr i32 %v1_3f621 to i32*
  %v3_3f621 = load i32, i32* %v2_3f621, align 4
  %v4_3f621 = add i32 %v3_3f621, 20
  store i32 %v4_3f621, i32* %v2_3f621, align 4
  %v0_3f625 = load i32, i32* @ebp, align 4
  %v1_3f625 = add i32 %v0_3f625, -16
  %v2_3f625 = inttoptr i32 %v1_3f625 to i32*
  %v3_3f625 = load i32, i32* %v2_3f625, align 4
  %v4_3f625 = add i32 %v3_3f625, -1
  store i32 %v4_3f625, i32* %v2_3f625, align 4
  br label %dec_label_pc_3f629

dec_label_pc_3f629:                               ; preds = %dec_label_pc_3f60b, %dec_label_pc_3f5ec
  %v0_3f629 = load i32, i32* @ebp, align 4
  %v1_3f629 = add i32 %v0_3f629, -16
  %v2_3f629 = inttoptr i32 %v1_3f629 to i32*
  %v3_3f629 = load i32, i32* %v2_3f629, align 4
  %v10_3f629 = icmp eq i32 %v3_3f629, 0
  %v11_3f629 = icmp slt i32 %v3_3f629, 0
  %v3_3f62d = icmp eq i1 %v11_3f629, false
  %v4_3f62d = icmp eq i1 %v10_3f629, false
  %v5_3f62d = icmp eq i1 %v3_3f62d, %v4_3f62d
  %v6_3f62d = zext i1 %v5_3f62d to i32
  %v7_3f62d = load i32, i32* %eax.global-to-local, align 8
  %v8_3f62d = and i32 %v7_3f62d, -256
  %v9_3f62d = or i32 %v6_3f62d, %v8_3f62d
  store i32 %v9_3f62d, i32* %eax.global-to-local, align 8
  %v5_3f630 = icmp eq i1 %v5_3f62d, false
  %v1_3f632 = icmp eq i1 %v5_3f630, false
  br i1 %v1_3f632, label %dec_label_pc_3f60b, label %dec_label_pc_3f634

dec_label_pc_3f634:                               ; preds = %dec_label_pc_3f629
  %v1_3f634 = add i32 %v0_3f629, -36
  %v2_3f634 = inttoptr i32 %v1_3f634 to i32*
  %v3_3f634 = load i32, i32* %v2_3f634, align 4
  store i32 %v3_3f634, i32* @eax, align 8
  %v1_3f637 = add i32 %v0_3f629, -12
  %v2_3f637 = inttoptr i32 %v1_3f637 to i32*
  %v3_3f637 = load i32, i32* %v2_3f637, align 4
  %v1_3f63a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3f63a = icmp eq i32 %v1_3f63a, %v3_3f637
  br i1 %v3_3f63a, label %bb, label %dec_label_pc_3f643

bb:                                               ; preds = %dec_label_pc_3f634
  %v1_3f641 = call i32 @function_3f648()
  store i32 %v1_3f641, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3f643

dec_label_pc_3f643:                               ; preds = %bb, %dec_label_pc_3f634
  %v2_3f641 = phi i32 [ %v1_3f641, %bb ], [ %v3_3f634, %dec_label_pc_3f634 ]
  ret i32 %v2_3f641

; uselistorder directives
  uselistorder i32 %v3_3f629, { 1, 0 }
  uselistorder i32 %v0_3f629, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v3_3f600, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 1, 2, 3, 6, 7 }
  uselistorder i32 -36, { 134, 132, 133, 69, 67, 68, 70, 71, 72, 183, 158, 18, 73, 74, 193, 76, 79, 77, 78, 80, 83, 85, 86, 90, 50, 51, 10, 41, 42, 206, 25, 26, 27, 28, 29, 198, 11, 12, 91, 39, 170, 171, 24, 43, 168, 169, 93, 94, 32, 95, 53, 54, 96, 97, 98, 21, 36, 37, 99, 100, 13, 101, 102, 52, 104, 105, 106, 107, 108, 14, 82, 242, 40, 221, 109, 48, 49, 110, 111, 89, 84, 232, 87, 88, 233, 234, 235, 236, 237, 238, 239, 240, 241, 38, 114, 112, 115, 116, 223, 117, 118, 119, 228, 215, 120, 122, 123, 124, 125, 126, 222, 60, 128, 129, 131, 103, 130, 135, 136, 137, 81, 75, 138, 139, 142, 143, 140, 33, 22, 31, 144, 145, 15, 44, 45, 46, 47, 34, 35, 0, 16, 146, 147, 148, 92, 155, 121, 23, 231, 61, 17, 156, 157, 1, 161, 19, 20, 166, 113, 141, 167, 149, 150, 152, 153, 151, 229, 230, 159, 160, 7, 243, 244, 182, 162, 163, 164, 184, 165, 185, 186, 187, 188, 189, 190, 9, 194, 195, 196, 172, 177, 173, 175, 176, 174, 178, 179, 197, 180, 181, 212, 213, 214, 216, 217, 218, 219, 220, 55, 56, 58, 59, 57, 62, 63, 64, 65, 66, 224, 225, 226, 227, 199, 200, 201, 202, 203, 204, 205, 30, 207, 208, 209, 210, 211, 3, 2, 4, 127, 154, 5, 6, 8, 191, 192 }
  uselistorder i32 -16, { 65, 64, 66, 39, 38, 40, 42, 41, 75, 43, 44, 45, 46, 47, 48, 96, 97, 50, 49, 51, 11, 12, 13, 52, 53, 54, 29, 30, 82, 83, 55, 56, 57, 58, 26, 106, 107, 59, 27, 28, 60, 61, 36, 37, 15, 32, 31, 33, 0, 1, 14, 119, 120, 121, 122, 123, 124, 126, 125, 127, 16, 117, 118, 114, 115, 67, 68, 17, 69, 70, 116, 35, 18, 71, 72, 73, 74, 19, 20, 80, 81, 21, 88, 2, 3, 128, 78, 76, 77, 79, 84, 85, 86, 87, 4, 5, 103, 104, 105, 22, 108, 109, 110, 111, 112, 113, 98, 99, 100, 101, 102, 23, 24, 25, 7, 6, 34, 8, 62, 63, 89, 90, 9, 91, 92, 93, 94, 95, 10 }
  uselistorder i32* @ecx, { 138, 45, 12, 46, 47, 48, 49, 34, 35, 51, 53, 54, 55, 238, 239, 57, 58, 59, 60, 225, 204, 205, 1, 229, 230, 231, 65, 66, 36, 20, 30, 32, 75, 77, 78, 79, 80, 40, 33, 23, 24, 25, 41, 85, 86, 87, 88, 89, 43, 90, 91, 94, 95, 96, 97, 98, 99, 201, 50, 100, 101, 102, 103, 104, 105, 106, 62, 63, 107, 253, 109, 61, 114, 246, 250, 247, 248, 249, 251, 252, 115, 18, 19, 116, 117, 118, 68, 119, 69, 70, 26, 110, 28, 29, 71, 73, 237, 121, 243, 234, 122, 13, 81, 123, 82, 127, 83, 132, 133, 134, 124, 135, 137, 125, 126, 139, 56, 140, 141, 144, 145, 143, 21, 38, 22, 27, 148, 149, 150, 151, 152, 153, 67, 154, 156, 157, 158, 159, 160, 161, 244, 162, 15, 16, 17, 245, 173, 180, 76, 14, 195, 129, 111, 112, 113, 147, 168, 0, 130, 131, 163, 164, 72, 174, 175, 176, 177, 178, 179, 169, 170, 181, 182, 183, 184, 185, 186, 187, 74, 206, 189, 192, 193, 209, 196, 84, 211, 212, 213, 197, 214, 240, 219, 227, 228, 198, 188, 199, 194, 233, 208, 190, 191, 235, 210, 165, 166, 167, 171, 172, 3, 207, 241, 242, 215, 220, 221, 222, 223, 226, 224, 232, 216, 217, 218, 64, 31, 37, 39, 42, 44, 52, 236, 92, 93, 200, 202, 203, 108, 120, 254, 255, 128, 136, 142, 146, 155, 4, 5, 6, 7, 8, 9, 10, 11, 2 }
  uselistorder i32 -32, { 157, 65, 41, 66, 194, 67, 17, 68, 69, 70, 71, 72, 74, 76, 259, 77, 78, 246, 79, 80, 81, 82, 83, 84, 297, 86, 87, 7, 88, 91, 92, 93, 97, 98, 48, 43, 44, 31, 32, 234, 269, 270, 99, 2, 8, 9, 10, 11, 12, 13, 101, 40, 29, 105, 212, 213, 26, 27, 45, 208, 209, 106, 107, 108, 109, 277, 278, 50, 35, 51, 111, 18, 37, 38, 52, 112, 113, 114, 115, 49, 260, 62, 63, 64, 57, 119, 120, 121, 122, 123, 124, 28, 227, 73, 125, 126, 127, 272, 240, 128, 330, 42, 290, 129, 46, 47, 130, 131, 132, 135, 96, 89, 90, 323, 94, 95, 324, 325, 0, 326, 327, 328, 329, 136, 137, 100, 138, 1, 102, 139, 140, 141, 133, 142, 143, 296, 305, 306, 288, 289, 144, 146, 147, 148, 149, 150, 295, 53, 155, 152, 153, 116, 156, 117, 154, 118, 158, 159, 160, 85, 75, 164, 14, 165, 169, 170, 171, 166, 172, 19, 36, 173, 174, 175, 176, 177, 178, 179, 319, 320, 321, 322, 181, 39, 15, 16, 182, 183, 184, 311, 103, 191, 145, 23, 314, 315, 316, 317, 318, 54, 55, 56, 193, 197, 199, 200, 161, 162, 163, 207, 134, 167, 168, 180, 20, 21, 110, 104, 188, 312, 313, 185, 22, 192, 195, 196, 222, 189, 198, 331, 332, 230, 231, 232, 233, 201, 203, 235, 236, 237, 238, 204, 205, 241, 242, 267, 245, 243, 24, 244, 206, 25, 247, 248, 249, 250, 251, 252, 255, 210, 211, 214, 261, 262, 215, 263, 264, 216, 217, 298, 299, 218, 219, 220, 268, 221, 291, 292, 202, 223, 224, 225, 226, 276, 229, 279, 280, 285, 286, 30, 186, 187, 265, 58, 59, 60, 61, 239, 300, 266, 301, 302, 303, 304, 271, 273, 274, 33, 34, 275, 281, 282, 283, 284, 287, 293, 151, 190, 294, 228, 3, 4, 253, 254, 256, 257, 258, 5, 6, 307, 308, 309, 310 }
}

define i32 @function_3f648() local_unnamed_addr {
dec_label_pc_3f648:
  %v0_3f649 = load i32, i32* @eax, align 8
  ret i32 %v0_3f649
}

define i32 @_ZN9CFlatData11UnserializeI11CDataStreamEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3f64a:
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v1_3f676 = add i32 %tmp107, 4
  %v2_3f676 = inttoptr i32 %v1_3f676 to i32*
  %v3_3f676 = load i32, i32* %v2_3f676, align 4
  %v2_3f67e = load i32, i32* %arg1, align 4
  %v2_3f680 = sub i32 %v3_3f676, %v2_3f67e
  %v7_3f695 = call i32 @unknown_51284(i32 %arg2, i32 %v2_3f67e, i32 %v2_3f680, i32 %arg4, i32 %arg3, i32 %arg2, i32 %tmp107)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 0 }
  uselistorder i32 4, { 96, 11, 12, 13, 14, 0, 15, 16, 17, 18, 288, 289, 19, 20, 291, 292, 21, 22, 240, 97, 98, 23, 224, 451, 208, 99, 24, 100, 101, 242, 243, 244, 245, 246, 298, 299, 25, 102, 301, 26, 302, 303, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 27, 151, 28, 1, 29, 256, 103, 104, 105, 106, 107, 307, 308, 108, 72, 109, 382, 73, 258, 74, 110, 61, 313, 311, 312, 30, 111, 314, 31, 112, 113, 114, 115, 116, 2, 62, 262, 32, 33, 496, 497, 488, 489, 490, 491, 492, 493, 494, 495, 498, 63, 329, 34, 35, 3, 117, 75, 118, 119, 64, 36, 120, 121, 65, 76, 66, 77, 37, 59, 342, 122, 354, 123, 356, 357, 358, 359, 360, 124, 486, 38, 125, 126, 39, 4, 127, 480, 481, 482, 483, 484, 485, 128, 129, 130, 131, 132, 40, 41, 133, 134, 135, 136, 349, 350, 137, 138, 78, 152, 153, 154, 155, 156, 157, 158, 159, 79, 160, 161, 162, 163, 80, 81, 67, 164, 165, 166, 168, 167, 169, 171, 170, 374, 375, 376, 377, 378, 379, 380, 172, 173, 422, 423, 424, 425, 426, 174, 427, 42, 175, 176, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 177, 178, 179, 180, 456, 381, 43, 181, 182, 183, 419, 184, 185, 186, 187, 188, 189, 238, 190, 191, 192, 69, 70, 193, 194, 196, 195, 421, 197, 198, 428, 429, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 199, 200, 201, 202, 203, 477, 204, 436, 437, 205, 206, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 207, 457, 209, 210, 211, 212, 213, 458, 459, 460, 461, 214, 215, 216, 217, 218, 219, 220, 221, 222, 44, 60, 45, 223, 225, 226, 227, 228, 46, 229, 230, 231, 232, 233, 234, 47, 48, 50, 235, 49, 236, 237, 82, 239, 241, 51, 247, 248, 249, 250, 251, 252, 253, 254, 255, 5, 83, 257, 259, 84, 260, 261, 263, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 52, 53, 287, 290, 293, 294, 295, 296, 71, 85, 297, 300, 304, 305, 306, 309, 310, 315, 316, 317, 318, 319, 420, 320, 499, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 501, 502, 503, 334, 335, 336, 337, 478, 338, 86, 54, 500, 505, 506, 507, 508, 509, 339, 340, 341, 510, 511, 343, 344, 504, 512, 513, 345, 346, 347, 55, 348, 351, 56, 352, 353, 355, 361, 362, 68, 363, 364, 487, 365, 366, 367, 368, 369, 370, 371, 372, 373, 383, 384, 6, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 517, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 89, 7, 8, 87, 88, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 454, 455, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 91, 90, 92, 93, 94, 57, 58, 9, 10, 514, 515, 516, 479, 95 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_3f6a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f6a4:
  %v0_3f6a4 = load i1, i1* @zf, align 1
  br i1 %v0_3f6a4, label %bb, label %dec_label_pc_3f6a4.dec_label_pc_3f6a6_crit_edge

dec_label_pc_3f6a4.dec_label_pc_3f6a6_crit_edge:  ; preds = %dec_label_pc_3f6a4
  %v2_3f6a4.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3f6a6

bb:                                               ; preds = %dec_label_pc_3f6a4
  %v1_3f6a4 = call i32 @function_3f6ab()
  br label %dec_label_pc_3f6a6

dec_label_pc_3f6a6:                               ; preds = %dec_label_pc_3f6a4.dec_label_pc_3f6a6_crit_edge, %bb
  %v2_3f6a4 = phi i32 [ %v2_3f6a4.pre, %dec_label_pc_3f6a4.dec_label_pc_3f6a6_crit_edge ], [ %v1_3f6a4, %bb ]
  ret i32 %v2_3f6a4

; uselistorder directives
  uselistorder i1 false, {}
  uselistorder i1* @zf, { 2, 5, 21, 0, 7, 8, 4, 11, 13, 22, 19, 23, 24, 17, 9, 25, 16, 15, 1, 3, 6, 10, 12, 14, 18, 20, 26 }
  uselistorder label %dec_label_pc_3f6a6, { 1, 0 }
}

define i32 @function_3f6ab() local_unnamed_addr {
dec_label_pc_3f6ab:
  %v0_3f6ac = load i32, i32* @eax, align 8
  ret i32 %v0_3f6ac
}

declare i32 @unknown_3f6f8(i32, i32) local_unnamed_addr

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_3f7f8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3f7e4_type* @global_var_3f7e4.2880 to i32), i32* %arg1, align 4
  %v1_3f81e = call i32 @unknown_4fa08(i32 %tmp99)
  %v1_3f82d = call i32 @function_3f83a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_3f7e4_type* @global_var_3f7e4.2880 to i32), { 1, 0 }
}

define i32 @function_3f83a() local_unnamed_addr {
dec_label_pc_3f83a:
  %v0_3f83a = load i32, i32* @ebp, align 4
  %v1_3f83a = add i32 %v0_3f83a, -12
  %v2_3f83a = inttoptr i32 %v1_3f83a to i32*
  %v3_3f83a = load i32, i32* %v2_3f83a, align 4
  %v1_3f83d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3f83d = xor i32 %v1_3f83d, %v3_3f83a
  %v3_3f83d = icmp eq i32 %v2_3f83d, 0
  store i32 %v2_3f83d, i32* @eax, align 8
  br i1 %v3_3f83d, label %bb, label %dec_label_pc_3f846

bb:                                               ; preds = %dec_label_pc_3f83a
  %v1_3f844 = call i32 @function_3f84b()
  br label %dec_label_pc_3f846

dec_label_pc_3f846:                               ; preds = %bb, %dec_label_pc_3f83a
  %v2_3f844 = phi i32 [ %v1_3f844, %bb ], [ %v2_3f83d, %dec_label_pc_3f83a ]
  ret i32 %v2_3f844
}

define i32 @function_3f84b() local_unnamed_addr {
dec_label_pc_3f84b:
  %v0_3f84c = load i32, i32* @eax, align 8
  ret i32 %v0_3f84c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32 %arg1) {
dec_label_pc_3f84e:
  %v1_3f86b = call i32 @unknown_7f046(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_3f88b() local_unnamed_addr {
dec_label_pc_3f88b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3f88b = load i32, i32* %ecx.global-to-local, align 8
  %v1_3f88b = add i32 %v0_3f88b, -1
  store i32 %v1_3f88b, i32* %ecx.global-to-local, align 8
  %v0_3f88d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3f88d
}

define i32 @function_3f896(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3f896:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_3f9d1(i32) local_unnamed_addr

define i32 @function_3fb7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3fb7e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3fc5a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3fc5a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_3fd90(i32, i32) local_unnamed_addr

define i32 @function_3fe38(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3fe38:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3feba(i32 %arg1) local_unnamed_addr {
dec_label_pc_3feba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3feea(i32 %arg1) local_unnamed_addr {
dec_label_pc_3feea:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3ff1a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3ff1a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_3ff7e(i32, i32, i32) local_unnamed_addr

define i32 @function_3ffce(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ffce:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4011a(i32 %arg1) local_unnamed_addr {
dec_label_pc_4011a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4013e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4013e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40212(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40212:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4030c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4030c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_40348(i32, i32, i32) local_unnamed_addr

define i32 @function_4045c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_4045c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40496(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_40496:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_404ec:
  %v4_404ec = add i32 %arg1, -28
  %v1_404f1 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2787(i32 %v4_404ec)
  ret i32 %v1_404f1

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2787, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv.2787(i32 %arg1) {
dec_label_pc_404f4:
  ret i32 0
}

define i32 @function_40518() local_unnamed_addr {
dec_label_pc_40518:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_40518 = load i32, i32* %ecx.global-to-local, align 8
  %v1_40518 = add i32 %v0_40518, -465204285
  %v2_40518 = inttoptr i32 %v1_40518 to i32*
  %v3_40518 = load i32, i32* %v2_40518, align 4
  %v4_40518 = add i32 %v3_40518, -1
  store i32 %v4_40518, i32* %v2_40518, align 4
  %v0_4051e = load i32, i32* %eax.global-to-local, align 8
  %v0_40522 = load i32, i32* %ebx.global-to-local, align 4
  %v2_40525 = call i32 @unknown_67b02(i32 %v0_40522, i32 %v0_4051e)
  store i32 %v0_40522, i32* %eax.global-to-local, align 8
  %v1_4052c = icmp eq i32 %v0_40522, 0
  br i1 %v1_4052c, label %dec_label_pc_4053a, label %dec_label_pc_40530

dec_label_pc_40530:                               ; preds = %dec_label_pc_40518
  %v1_40530 = add i32 %v0_40522, 28
  br label %dec_label_pc_4053a

dec_label_pc_4053a:                               ; preds = %dec_label_pc_40518, %dec_label_pc_40530
  %storemerge = phi i32 [ %v1_40530, %dec_label_pc_40530 ], [ 0, %dec_label_pc_40518 ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_4053a = load i32, i32* %ebp.global-to-local, align 4
  %v1_4053a = add i32 %v0_4053a, -12
  %v2_4053a = inttoptr i32 %v1_4053a to i32*
  %v3_4053a = load i32, i32* %v2_4053a, align 4
  %v1_4053d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4053d = icmp eq i32 %v1_4053d, %v3_4053a
  br i1 %v3_4053d, label %bb, label %dec_label_pc_40546

bb:                                               ; preds = %dec_label_pc_4053a
  %v1_40544 = call i32 @function_40561()
  store i32 %v1_40544, i32* @eax, align 8
  br label %dec_label_pc_40546

dec_label_pc_40546:                               ; preds = %bb, %dec_label_pc_4053a
  %v0_40546 = call i32 @function_4055c()
  store i32 %v0_40546, i32* %eax.global-to-local, align 8
  ret i32 %v0_40546

; uselistorder directives
  uselistorder i32 %v0_40522, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_4053a, { 1, 0 }
}

define i32 @function_4055c() local_unnamed_addr {
dec_label_pc_4055c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40561() local_unnamed_addr {
dec_label_pc_40561:
  %v0_40567 = load i32, i32* @eax, align 8
  ret i32 %v0_40567
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_40568:
  %v4_40568 = add i32 %arg1, -28
  %v1_4056d = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %v4_40568)
  ret i32 %v1_4056d

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_40570:
  ret i32 0
}

define i32 @function_40596() local_unnamed_addr {
dec_label_pc_40596:
  %eax.global-to-local = alloca i32, align 4
  %v0_40596 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_40596
}

define i32 @function_405a7() local_unnamed_addr {
dec_label_pc_405a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_405a7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_405a7
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_405d4:
  %v4_405d4 = add i32 %arg1, -28
  %v1_405d9 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %v4_405d4)
  ret i32 %v1_405d9

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %arg1) {
dec_label_pc_405dc:
  ret i32 0
}

define i32 @function_40600() local_unnamed_addr {
dec_label_pc_40600:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_40600 = load i32, i32* %ecx.global-to-local, align 8
  %v1_40600 = add i32 %v0_40600, -465204285
  %v2_40600 = inttoptr i32 %v1_40600 to i32*
  %v3_40600 = load i32, i32* %v2_40600, align 4
  %v4_40600 = add i32 %v3_40600, -1
  store i32 %v4_40600, i32* %v2_40600, align 4
  %v0_40606 = load i32, i32* %eax.global-to-local, align 8
  %v0_4060a = load i32, i32* %ebx.global-to-local, align 4
  %v2_4060d = call i32 @unknown_679d2(i32 %v0_4060a, i32 %v0_40606)
  store i32 %v0_4060a, i32* %eax.global-to-local, align 8
  %v1_40614 = icmp eq i32 %v0_4060a, 0
  br i1 %v1_40614, label %dec_label_pc_40622, label %dec_label_pc_40618

dec_label_pc_40618:                               ; preds = %dec_label_pc_40600
  %v1_40618 = add i32 %v0_4060a, 28
  br label %dec_label_pc_40622

dec_label_pc_40622:                               ; preds = %dec_label_pc_40600, %dec_label_pc_40618
  %storemerge = phi i32 [ %v1_40618, %dec_label_pc_40618 ], [ 0, %dec_label_pc_40600 ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_40622 = load i32, i32* %ebp.global-to-local, align 4
  %v1_40622 = add i32 %v0_40622, -12
  %v2_40622 = inttoptr i32 %v1_40622 to i32*
  %v3_40622 = load i32, i32* %v2_40622, align 4
  %v1_40625 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_40625 = icmp eq i32 %v1_40625, %v3_40622
  br i1 %v3_40625, label %bb, label %dec_label_pc_4062e

bb:                                               ; preds = %dec_label_pc_40622
  %v1_4062c = call i32 @function_40649()
  store i32 %v1_4062c, i32* @eax, align 8
  br label %dec_label_pc_4062e

dec_label_pc_4062e:                               ; preds = %bb, %dec_label_pc_40622
  %v0_4062e = call i32 @function_40644()
  store i32 %v0_4062e, i32* %eax.global-to-local, align 8
  ret i32 %v0_4062e

; uselistorder directives
  uselistorder i32 %v0_4060a, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_40622, { 1, 0 }
}

define i32 @function_40644() local_unnamed_addr {
dec_label_pc_40644:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40649() local_unnamed_addr {
dec_label_pc_40649:
  %v0_4064f = load i32, i32* @eax, align 8
  ret i32 %v0_4064f
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_40650:
  %v4_40650 = add i32 %arg1, -28
  %v1_40655 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %v4_40650)
  ret i32 %v1_40655

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_40658:
  ret i32 0
}

define i32 @function_4067e() local_unnamed_addr {
dec_label_pc_4067e:
  %eax.global-to-local = alloca i32, align 4
  %v0_4067e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4067e
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_406bc:
  %v1_406d6 = add i32 %arg1, 12
  %v2_406d6 = inttoptr i32 %v1_406d6 to i32*
  %v3_406d6 = load i32, i32* %v2_406d6, align 4
  %v1_406dc = call i32 @unknown_682c3(i32 %v3_406d6)
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_406ed

bb:                                               ; preds = %dec_label_pc_406bc
  %v1_406eb = call i32 @function_406f2()
  br label %dec_label_pc_406ed

dec_label_pc_406ed:                               ; preds = %bb, %dec_label_pc_406bc
  %v2_406eb = phi i32 [ %v1_406eb, %bb ], [ 0, %dec_label_pc_406bc ]
  ret i32 %v2_406eb

; uselistorder directives
  uselistorder i32 12, { 6, 39, 40, 42, 72, 58, 21, 44, 73, 45, 33, 46, 41, 43, 81, 48, 49, 50, 36, 51, 38, 54, 55, 11, 28, 7, 8, 37, 9, 10, 52, 53, 12, 13, 14, 15, 16, 80, 17, 18, 56, 63, 19, 3, 20, 79, 59, 60, 61, 57, 22, 62, 23, 24, 25, 74, 26, 27, 69, 29, 30, 77, 31, 32, 34, 35, 2, 1, 47, 0, 82, 4, 64, 5, 65, 66, 67, 68, 70, 71, 75, 76, 78 }
}

define i32 @function_406f2() local_unnamed_addr {
dec_label_pc_406f2:
  %v0_406f3 = load i32, i32* @eax, align 8
  ret i32 %v0_406f3
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_406f4:
  store i32 0, i32* @eax, align 8
  br i1 true, label %bb, label %dec_label_pc_40722

bb:                                               ; preds = %dec_label_pc_406f4
  %v3_40720 = call i32 @function_40727(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_40722

dec_label_pc_40722:                               ; preds = %bb, %dec_label_pc_406f4
  %v4_40720 = phi i32 [ %v3_40720, %bb ], [ 0, %dec_label_pc_406f4 ]
  ret i32 %v4_40720

; uselistorder directives
  uselistorder i1 true, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1059, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 1064, 83, 1065, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 1066, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 1057, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 1060, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 833, 835, 836, 837, 838, 839, 1061, 1062, 840, 841, 842, 1063, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 1067, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 1058, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1068 }
}

define i32 @function_40727(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40727:
  %v0_40728 = load i32, i32* @eax, align 8
  ret i32 %v0_40728
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_4072a:
  %v4_4072a = add i32 %arg1, -28
  %v1_4072f = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %v4_4072a)
  ret i32 %v1_4072f

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_40732:
  ret i32 0
}

define i32 @function_40758() local_unnamed_addr {
dec_label_pc_40758:
  %eax.global-to-local = alloca i32, align 4
  %v0_40758 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_40758
}

define i32 @function_4075c(i32 %arg1) local_unnamed_addr {
dec_label_pc_4075c:
  %v0_4075c = load i32, i32* @eax, align 8
  %v0_40760 = load i32, i32* @ebx, align 4
  %v2_40763 = call i32 @unknown_556e6(i32 %v0_40760, i32 %v0_4075c)
  %v0_40768 = load i32, i32* @ebx, align 4
  %v1_4076a = icmp eq i32 %v0_40768, 0
  br i1 %v1_4076a, label %dec_label_pc_40778, label %dec_label_pc_4076e

dec_label_pc_4076e:                               ; preds = %dec_label_pc_4075c
  %v1_4076e = add i32 %v0_40768, 28
  br label %dec_label_pc_40778

dec_label_pc_40778:                               ; preds = %dec_label_pc_4075c, %dec_label_pc_4076e
  %storemerge = phi i32 [ %v1_4076e, %dec_label_pc_4076e ], [ 0, %dec_label_pc_4075c ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_40778 = load i32, i32* @ebp, align 4
  %v1_40778 = add i32 %v0_40778, -12
  %v2_40778 = inttoptr i32 %v1_40778 to i32*
  %v3_40778 = load i32, i32* %v2_40778, align 4
  %v1_4077b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4077b = icmp eq i32 %v1_4077b, %v3_40778
  br i1 %v3_4077b, label %bb, label %dec_label_pc_40784

bb:                                               ; preds = %dec_label_pc_40778
  %v1_40782 = call i32 @function_4079f()
  store i32 %v1_40782, i32* @eax, align 8
  br label %dec_label_pc_40784

dec_label_pc_40784:                               ; preds = %bb, %dec_label_pc_40778
  %v0_40784 = call i32 @function_4079a()
  ret i32 %v0_40784

; uselistorder directives
  uselistorder i32* @ebx, { 74, 75, 93, 94, 95, 96, 210, 4, 98, 101, 89, 235, 236, 225, 102, 5, 103, 104, 85, 78, 80, 81, 187, 79, 110, 109, 183, 112, 113, 114, 115, 118, 90, 121, 122, 123, 124, 125, 126, 91, 131, 132, 137, 197, 234, 138, 262, 263, 264, 142, 143, 144, 145, 146, 133, 134, 245, 246, 151, 152, 106, 139, 153, 254, 155, 111, 97, 163, 162, 159, 88, 168, 169, 170, 105, 171, 172, 259, 260, 261, 6, 70, 8, 71, 182, 154, 186, 156, 107, 0, 179, 1, 180, 2, 192, 181, 201, 108, 205, 206, 207, 188, 211, 189, 255, 190, 224, 191, 244, 193, 194, 195, 196, 203, 184, 185, 252, 72, 73, 204, 175, 173, 174, 176, 177, 178, 76, 77, 218, 219, 212, 213, 214, 215, 92, 256, 257, 258, 237, 238, 226, 227, 228, 229, 230, 232, 233, 239, 240, 241, 242, 243, 220, 221, 222, 223, 247, 248, 249, 253, 82, 83, 84, 86, 87, 9, 10, 11, 12, 99, 100, 116, 117, 119, 120, 13, 127, 128, 129, 130, 135, 136, 198, 199, 200, 202, 14, 15, 16, 140, 141, 265, 147, 148, 149, 150, 266, 267, 157, 158, 160, 161, 164, 165, 166, 167, 17, 18, 19, 20, 21, 22, 208, 209, 216, 217, 231, 3, 250, 251, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 46, 47, 48, 50, 51, 52, 53, 54, 68, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 7, 66, 67, 69 }
  uselistorder label %dec_label_pc_40778, { 1, 0 }
}

define i32 @function_4079a() local_unnamed_addr {
dec_label_pc_4079a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4079f() local_unnamed_addr {
dec_label_pc_4079f:
  %v0_407a5 = load i32, i32* @eax, align 8
  ret i32 %v0_407a5
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_407a6:
  %v4_407a6 = add i32 %arg1, -28
  %v1_407ab = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %v4_407a6)
  ret i32 %v1_407ab

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_407ae:
  ret i32 0
}

define i32 @function_407d4() local_unnamed_addr {
dec_label_pc_407d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_407d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_407d4
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_40812:
  %v4_40812 = add i32 %arg1, -28
  %v1_40817 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %v4_40812)
  ret i32 %v1_40817

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %arg1) {
dec_label_pc_4081a:
  ret i32 0
}

define i32 @function_40838(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40838:
  %v2_40838 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_40838 = load i32, i32* @eax, align 8
  %v4_40838 = trunc i32 %v3_40838 to i8
  %v5_40838 = add i8 %v4_40838, %v2_40838
  %v21_40838 = inttoptr i32 %v3_40838 to i8*
  store i8 %v5_40838, i8* %v21_40838, align 1
  %v22_40838 = load i32, i32* @eax, align 8
  ret i32 %v22_40838
}

define i32 @function_4083e() local_unnamed_addr {
dec_label_pc_4083e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4083e = load i32, i32* %ecx.global-to-local, align 8
  %v1_4083e = add i32 %v0_4083e, -465204285
  %v2_4083e = inttoptr i32 %v1_4083e to i32*
  %v3_4083e = load i32, i32* %v2_4083e, align 4
  %v4_4083e = add i32 %v3_4083e, -1
  store i32 %v4_4083e, i32* %v2_4083e, align 4
  %v0_40844 = load i32, i32* %eax.global-to-local, align 8
  %v0_40848 = load i32, i32* %ebx.global-to-local, align 4
  %v2_4084b = call i32 @unknown_55010(i32 %v0_40848, i32 %v0_40844)
  store i32 %v0_40848, i32* %eax.global-to-local, align 8
  %v1_40852 = icmp eq i32 %v0_40848, 0
  br i1 %v1_40852, label %dec_label_pc_40860, label %dec_label_pc_40856

dec_label_pc_40856:                               ; preds = %dec_label_pc_4083e
  %v1_40856 = add i32 %v0_40848, 28
  br label %dec_label_pc_40860

dec_label_pc_40860:                               ; preds = %dec_label_pc_4083e, %dec_label_pc_40856
  %storemerge = phi i32 [ %v1_40856, %dec_label_pc_40856 ], [ 0, %dec_label_pc_4083e ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_40860 = load i32, i32* %ebp.global-to-local, align 4
  %v1_40860 = add i32 %v0_40860, -12
  %v2_40860 = inttoptr i32 %v1_40860 to i32*
  %v3_40860 = load i32, i32* %v2_40860, align 4
  %v1_40863 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_40863 = icmp eq i32 %v1_40863, %v3_40860
  br i1 %v3_40863, label %bb, label %dec_label_pc_4086c

bb:                                               ; preds = %dec_label_pc_40860
  %v1_4086a = call i32 @function_40887()
  store i32 %v1_4086a, i32* @eax, align 8
  br label %dec_label_pc_4086c

dec_label_pc_4086c:                               ; preds = %bb, %dec_label_pc_40860
  %v0_4086c = call i32 @function_40882()
  store i32 %v0_4086c, i32* %eax.global-to-local, align 8
  ret i32 %v0_4086c

; uselistorder directives
  uselistorder i32 %v0_40848, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_40860, { 1, 0 }
}

define i32 @function_40882() local_unnamed_addr {
dec_label_pc_40882:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40887() local_unnamed_addr {
dec_label_pc_40887:
  %v0_4088d = load i32, i32* @eax, align 8
  ret i32 %v0_4088d
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_4088e:
  %v4_4088e = add i32 %arg1, -28
  %v1_40893 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %v4_4088e)
  ret i32 %v1_40893

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_40896:
  ret i32 0
}

define i32 @function_408bc() local_unnamed_addr {
dec_label_pc_408bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_408bc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_408bc
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_408fa:
  %v4_408fa = add i32 %arg1, -28
  %v1_408ff = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %v4_408fa)
  ret i32 %v1_408ff

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %arg1) {
dec_label_pc_40902:
  ret i32 0
}

define i32 @function_40926() local_unnamed_addr {
dec_label_pc_40926:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_40926 = load i32, i32* %ecx.global-to-local, align 8
  %v1_40926 = add i32 %v0_40926, -465204285
  %v2_40926 = inttoptr i32 %v1_40926 to i32*
  %v3_40926 = load i32, i32* %v2_40926, align 4
  %v4_40926 = add i32 %v3_40926, -1
  store i32 %v4_40926, i32* %v2_40926, align 4
  %v0_4092c = load i32, i32* %eax.global-to-local, align 8
  %v0_40930 = load i32, i32* %ebx.global-to-local, align 4
  %v2_40933 = call i32 @unknown_54af4(i32 %v0_40930, i32 %v0_4092c)
  store i32 %v0_40930, i32* %eax.global-to-local, align 8
  %v1_4093a = icmp eq i32 %v0_40930, 0
  br i1 %v1_4093a, label %dec_label_pc_40943, label %dec_label_pc_4093e

dec_label_pc_4093e:                               ; preds = %dec_label_pc_40926
  %v1_4093e = add i32 %v0_40930, 28
  store i32 %v1_4093e, i32* %eax.global-to-local, align 8
  ret i32 %v1_4093e

dec_label_pc_40943:                               ; preds = %dec_label_pc_40926
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_40930, { 2, 1, 0, 3 }
  uselistorder i32 28, { 1, 2, 14, 3, 4, 27, 28, 25, 31, 32, 21, 33, 34, 35, 37, 24, 38, 39, 26, 42, 43, 6, 7, 44, 36, 8, 9, 40, 41, 10, 11, 51, 52, 53, 13, 12, 15, 16, 57, 58, 17, 18, 19, 20, 22, 23, 29, 59, 60, 30, 45, 46, 47, 0, 48, 49, 50, 54, 55, 56, 5 }
}

define i32 @function_40946(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40946:
  %v2_40946 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_40946 = load i32, i32* @eax, align 8
  %v4_40946 = trunc i32 %v3_40946 to i8
  %v5_40946 = add i8 %v4_40946, %v2_40946
  %v21_40946 = inttoptr i32 %v3_40946 to i8*
  store i8 %v5_40946, i8* %v21_40946, align 1
  %v0_40948 = load i32, i32* @ebp, align 4
  %v1_40948 = add i32 %v0_40948, -12
  %v2_40948 = inttoptr i32 %v1_40948 to i32*
  %v3_40948 = load i32, i32* %v2_40948, align 4
  %v1_4094b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4094b = icmp eq i32 %v1_4094b, %v3_40948
  br i1 %v3_4094b, label %bb, label %dec_label_pc_40954

bb:                                               ; preds = %dec_label_pc_40946
  %v1_40952 = call i32 @function_4096f()
  store i32 %v1_40952, i32* @eax, align 8
  br label %dec_label_pc_40954

dec_label_pc_40954:                               ; preds = %bb, %dec_label_pc_40946
  %v0_40954 = call i32 @function_4096a()
  ret i32 %v0_40954

; uselistorder directives
  uselistorder i32* @ebp, {}
}

define i32 @function_40956(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40956:
  %v0_40956 = load i32, i32* @eax, align 8
  ret i32 %v0_40956
}

define i32 @function_4096a() local_unnamed_addr {
dec_label_pc_4096a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4096f() local_unnamed_addr {
dec_label_pc_4096f:
  %v0_40975 = load i32, i32* @eax, align 8
  ret i32 %v0_40975
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_40976:
  %v4_40976 = add i32 %arg1, -28
  %v1_4097b = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %v4_40976)
  ret i32 %v1_4097b

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 259, 260, 261, 124, 125, 126, 127, 128, 129, 101, 70, 130, 133, 131, 132, 74, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 408, 409, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 495, 159, 160, 161, 162, 60, 61, 62, 63, 64, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 109, 110, 440, 365, 426, 427, 431, 441, 181, 105, 99, 100, 79, 85, 185, 335, 336, 337, 80, 81, 103, 328, 329, 186, 187, 19, 188, 94, 189, 446, 447, 112, 192, 193, 194, 93, 461, 116, 195, 196, 197, 312, 118, 104, 199, 200, 96, 201, 202, 203, 204, 206, 122, 208, 111, 410, 123, 209, 120, 210, 211, 212, 213, 359, 214, 360, 140, 86, 215, 20, 21, 22, 216, 217, 218, 219, 220, 434, 372, 221, 222, 540, 102, 480, 223, 107, 108, 224, 225, 226, 164, 228, 165, 229, 531, 174, 175, 532, 533, 534, 535, 536, 538, 537, 539, 230, 231, 180, 470, 541, 549, 182, 232, 233, 234, 235, 494, 236, 23, 237, 514, 239, 240, 241, 242, 486, 245, 551, 253, 254, 65, 66, 67, 256, 246, 247, 205, 257, 207, 258, 248, 249, 250, 251, 252, 24, 262, 263, 264, 265, 157, 145, 269, 270, 271, 272, 273, 275, 276, 277, 278, 75, 279, 280, 281, 106, 95, 527, 528, 529, 530, 523, 25, 284, 98, 285, 462, 286, 287, 68, 227, 288, 518, 519, 520, 183, 297, 238, 78, 524, 525, 526, 119, 69, 298, 299, 301, 97, 26, 302, 303, 198, 306, 71, 308, 295, 296, 314, 315, 320, 323, 72, 266, 267, 268, 179, 73, 255, 325, 326, 11, 12, 13, 14, 274, 327, 282, 283, 76, 190, 191, 290, 291, 521, 522, 289, 293, 77, 487, 488, 300, 304, 305, 355, 292, 27, 28, 307, 309, 543, 542, 547, 544, 545, 546, 548, 364, 310, 184, 313, 366, 367, 316, 319, 317, 318, 374, 418, 379, 380, 381, 382, 321, 375, 376, 377, 378, 324, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 330, 331, 332, 333, 334, 338, 339, 340, 411, 412, 341, 413, 416, 342, 343, 344, 345, 82, 346, 347, 348, 496, 497, 498, 499, 349, 350, 351, 424, 425, 352, 353, 354, 311, 356, 357, 358, 361, 29, 30, 363, 322, 448, 449, 368, 369, 370, 456, 457, 458, 459, 83, 84, 460, 471, 472, 473, 474, 475, 476, 477, 478, 479, 384, 385, 401, 113, 114, 32, 414, 415, 121, 371, 500, 417, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 419, 420, 421, 432, 433, 87, 88, 89, 90, 91, 92, 442, 443, 444, 445, 31, 422, 423, 450, 451, 452, 453, 454, 455, 463, 464, 465, 466, 467, 469, 468, 481, 482, 483, 484, 115, 117, 243, 244, 33, 34, 35, 294, 36, 15, 485, 16, 489, 490, 491, 492, 493, 17, 18, 37, 38, 39, 40, 362, 41, 373, 42, 0, 43, 44, 552, 45, 46, 47, 48, 49, 50, 51, 383, 52, 396, 397, 398, 402, 53, 54, 55, 403, 404, 405, 406, 407, 56, 428, 429, 430, 436, 437, 438, 435, 439, 57, 58, 550, 515, 516, 517, 59 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %arg1) {
dec_label_pc_4097e:
  ret i32 0
}

define i32 @function_409a4() local_unnamed_addr {
dec_label_pc_409a4:
  %eax.global-to-local = alloca i32, align 4
  %v0_409a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_409a4
}

define i32 @function_409b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_409b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_409b6 = load i32, i32* @eax, align 8
  %v1_409b6 = load i32, i32* @edi, align 4
  store i32 %v1_409b6, i32* %eax.global-to-local, align 8
  %v4_409b7 = add i32 %v1_409b6, %v0_409b6
  %v21_409b7 = inttoptr i32 %v1_409b6 to i32*
  store i32 %v4_409b7, i32* %v21_409b7, align 4
  %v3_409c5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_409c5

; uselistorder directives
  uselistorder i32 %v1_409b6, { 1, 0, 2 }
  uselistorder i32* @edi, { 4, 5, 6, 18, 7, 8, 21, 22, 3, 10, 11, 12, 9, 13, 14, 0, 2, 16, 17, 1, 15, 20, 19 }
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_409e2:
  %v4_409e2 = add i32 %arg1, -24
  %v1_409e7 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v4_409e2)
  ret i32 %v1_409e7

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_409ea:
  ret i32 0
}

define i32 @function_40a0e() local_unnamed_addr {
dec_label_pc_40a0e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_40a0e = load i32, i32* %ecx.global-to-local, align 8
  %v1_40a0e = add i32 %v0_40a0e, -465204285
  %v2_40a0e = inttoptr i32 %v1_40a0e to i32*
  %v3_40a0e = load i32, i32* %v2_40a0e, align 4
  %v4_40a0e = add i32 %v3_40a0e, -1
  store i32 %v4_40a0e, i32* %v2_40a0e, align 4
  %v0_40a14 = load i32, i32* %eax.global-to-local, align 8
  %v0_40a18 = load i32, i32* %ebx.global-to-local, align 4
  %v2_40a1b = call i32 @unknown_55e94(i32 %v0_40a18, i32 %v0_40a14)
  store i32 %v0_40a18, i32* %eax.global-to-local, align 8
  %v1_40a22 = icmp eq i32 %v0_40a18, 0
  br i1 %v1_40a22, label %dec_label_pc_40a30, label %dec_label_pc_40a26

dec_label_pc_40a26:                               ; preds = %dec_label_pc_40a0e
  %v1_40a26 = add i32 %v0_40a18, 24
  br label %dec_label_pc_40a30

dec_label_pc_40a30:                               ; preds = %dec_label_pc_40a0e, %dec_label_pc_40a26
  %storemerge = phi i32 [ %v1_40a26, %dec_label_pc_40a26 ], [ 0, %dec_label_pc_40a0e ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_40a30 = load i32, i32* %ebp.global-to-local, align 4
  %v1_40a30 = add i32 %v0_40a30, -12
  %v2_40a30 = inttoptr i32 %v1_40a30 to i32*
  %v3_40a30 = load i32, i32* %v2_40a30, align 4
  %v1_40a33 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_40a33 = icmp eq i32 %v1_40a33, %v3_40a30
  br i1 %v3_40a33, label %bb, label %dec_label_pc_40a3c

bb:                                               ; preds = %dec_label_pc_40a30
  %v1_40a3a = call i32 @function_40a57()
  store i32 %v1_40a3a, i32* @eax, align 8
  br label %dec_label_pc_40a3c

dec_label_pc_40a3c:                               ; preds = %bb, %dec_label_pc_40a30
  %v0_40a3c = call i32 @function_40a52()
  store i32 %v0_40a3c, i32* %eax.global-to-local, align 8
  ret i32 %v0_40a3c

; uselistorder directives
  uselistorder i32 %v0_40a18, { 2, 1, 0, 3 }
  uselistorder i32 20, { 101, 102, 73, 74, 75, 77, 40, 41, 42, 43, 79, 80, 81, 44, 45, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 116, 49, 18, 19, 20, 21, 72, 68, 90, 54, 0, 92, 118, 93, 46, 64, 94, 82, 83, 127, 1, 128, 97, 98, 69, 2, 100, 103, 78, 106, 107, 50, 108, 57, 125, 126, 47, 48, 3, 109, 96, 70, 95, 4, 5, 6, 104, 105, 29, 22, 51, 52, 124, 86, 87, 115, 23, 53, 120, 117, 55, 121, 122, 123, 58, 59, 24, 60, 25, 61, 30, 62, 63, 65, 66, 67, 71, 99, 76, 26, 84, 85, 32, 33, 88, 27, 89, 91, 28, 34, 110, 111, 112, 35, 113, 114, 36, 119, 37, 38, 39, 129, 31 }
  uselistorder i32* inttoptr (i32 20 to i32*), { 0, 44, 1, 121, 2, 3, 36, 367, 37, 200, 38, 201, 202, 152, 153, 203, 74, 204, 39, 496, 205, 81, 82, 206, 207, 209, 210, 208, 211, 212, 40, 215, 216, 218, 220, 221, 527, 528, 222, 223, 529, 514, 224, 225, 226, 227, 231, 614, 232, 233, 234, 41, 235, 236, 239, 240, 244, 245, 166, 167, 169, 557, 126, 548, 549, 551, 42, 559, 249, 251, 161, 150, 106, 117, 258, 259, 464, 465, 261, 111, 112, 156, 157, 158, 461, 262, 4, 263, 133, 43, 264, 265, 563, 564, 176, 177, 268, 269, 270, 582, 130, 181, 271, 272, 441, 185, 159, 274, 86, 87, 275, 136, 137, 187, 45, 139, 138, 90, 46, 140, 47, 279, 281, 283, 197, 287, 170, 173, 174, 288, 48, 512, 49, 530, 50, 289, 198, 199, 353, 125, 123, 182, 51, 290, 52, 291, 195, 292, 293, 294, 295, 190, 296, 53, 193, 297, 298, 299, 300, 301, 116, 54, 485, 302, 487, 213, 214, 217, 303, 304, 55, 56, 5, 57, 552, 553, 305, 306, 228, 229, 501, 554, 555, 307, 308, 309, 310, 645, 154, 594, 311, 163, 164, 312, 58, 313, 314, 315, 59, 316, 319, 243, 237, 238, 320, 321, 322, 60, 639, 241, 242, 640, 641, 642, 61, 643, 644, 409, 323, 324, 248, 587, 325, 646, 649, 253, 326, 327, 328, 329, 317, 148, 331, 332, 613, 334, 62, 333, 6, 335, 627, 628, 652, 588, 589, 63, 336, 339, 340, 653, 64, 345, 346, 347, 65, 604, 191, 350, 651, 354, 66, 355, 67, 68, 358, 361, 362, 351, 352, 363, 364, 285, 365, 366, 341, 286, 69, 368, 369, 370, 371, 372, 373, 230, 219, 375, 376, 377, 378, 379, 380, 386, 387, 388, 389, 390, 381, 391, 134, 131, 384, 392, 393, 394, 395, 70, 396, 397, 398, 544, 162, 135, 638, 636, 403, 404, 405, 407, 583, 410, 411, 412, 71, 318, 413, 414, 632, 98, 254, 420, 425, 337, 338, 102, 637, 192, 72, 7, 427, 73, 429, 75, 431, 142, 8, 432, 433, 273, 76, 9, 437, 438, 421, 422, 342, 443, 343, 344, 445, 449, 452, 77, 374, 78, 79, 80, 359, 83, 84, 454, 455, 85, 88, 89, 91, 402, 382, 383, 458, 92, 399, 400, 401, 460, 266, 267, 93, 250, 252, 94, 255, 415, 360, 633, 634, 416, 417, 276, 95, 96, 459, 97, 277, 99, 278, 605, 606, 100, 423, 101, 426, 479, 457, 430, 480, 434, 103, 482, 10, 435, 436, 439, 647, 648, 491, 492, 493, 256, 442, 497, 446, 447, 504, 448, 104, 541, 511, 513, 105, 515, 516, 450, 505, 506, 507, 508, 509, 510, 453, 356, 357, 456, 519, 520, 521, 523, 524, 107, 462, 463, 466, 108, 109, 110, 467, 531, 532, 533, 468, 469, 470, 534, 113, 535, 536, 471, 472, 473, 615, 616, 617, 618, 474, 475, 635, 476, 114, 547, 477, 478, 424, 595, 115, 481, 440, 561, 483, 484, 488, 562, 11, 494, 490, 451, 489, 565, 566, 567, 502, 444, 498, 570, 571, 572, 573, 575, 118, 119, 590, 591, 592, 593, 120, 518, 418, 525, 179, 537, 196, 500, 122, 619, 620, 621, 538, 539, 622, 623, 540, 624, 625, 626, 124, 542, 558, 127, 128, 560, 12, 543, 129, 545, 546, 568, 132, 246, 141, 257, 143, 144, 145, 146, 147, 149, 584, 585, 151, 155, 596, 597, 160, 165, 168, 599, 171, 172, 175, 178, 180, 13, 183, 184, 186, 188, 189, 194, 348, 349, 14, 419, 247, 260, 602, 603, 607, 280, 282, 284, 15, 16, 17, 486, 503, 18, 330, 385, 406, 408, 428, 19, 655, 495, 499, 517, 20, 21, 22, 522, 23, 526, 24, 25, 550, 556, 569, 26, 27, 28, 574, 576, 577, 578, 579, 580, 29, 581, 586, 598, 600, 601, 608, 609, 610, 611, 612, 30, 31, 32, 650, 33, 34, 629, 654, 630, 631, 35 }
  uselistorder i32 -12, { 1, 36, 2, 69, 3, 4, 33, 319, 320, 131, 132, 133, 134, 135, 92, 136, 41, 42, 137, 439, 138, 139, 45, 46, 140, 141, 142, 143, 144, 145, 146, 34, 150, 151, 152, 154, 155, 470, 471, 156, 157, 472, 459, 158, 159, 160, 161, 165, 546, 547, 166, 167, 168, 169, 35, 170, 171, 175, 176, 181, 182, 183, 101, 102, 501, 440, 441, 492, 493, 495, 496, 186, 187, 188, 53, 98, 89, 90, 61, 65, 196, 408, 409, 197, 62, 63, 95, 96, 97, 406, 198, 199, 200, 78, 201, 202, 505, 506, 109, 110, 205, 206, 207, 208, 209, 75, 517, 210, 113, 211, 212, 215, 50, 51, 216, 80, 81, 82, 117, 83, 55, 84, 219, 127, 128, 222, 223, 106, 107, 224, 457, 473, 225, 226, 129, 130, 300, 301, 70, 71, 114, 227, 228, 229, 125, 230, 231, 232, 233, 120, 234, 235, 123, 236, 237, 238, 239, 240, 241, 242, 64, 428, 429, 147, 148, 149, 243, 244, 5, 245, 497, 498, 246, 247, 162, 163, 446, 499, 248, 249, 250, 251, 580, 581, 93, 530, 531, 252, 253, 99, 100, 254, 255, 256, 257, 172, 262, 263, 179, 180, 173, 174, 264, 265, 37, 572, 573, 177, 178, 574, 575, 576, 577, 578, 579, 359, 266, 267, 268, 269, 185, 67, 521, 270, 271, 190, 272, 273, 274, 86, 275, 276, 258, 259, 88, 194, 278, 279, 544, 545, 280, 6, 559, 560, 522, 523, 524, 281, 282, 285, 286, 214, 289, 290, 291, 539, 121, 294, 302, 303, 304, 307, 308, 310, 311, 312, 313, 295, 296, 297, 298, 314, 315, 316, 220, 317, 318, 299, 287, 221, 321, 322, 323, 324, 325, 326, 327, 164, 153, 330, 331, 332, 333, 334, 335, 336, 343, 344, 345, 337, 338, 346, 79, 76, 77, 341, 347, 348, 349, 38, 350, 351, 352, 488, 570, 571, 568, 356, 360, 39, 260, 361, 362, 363, 564, 57, 58, 191, 374, 375, 283, 284, 59, 60, 569, 122, 7, 40, 377, 43, 380, 87, 8, 381, 382, 213, 9, 384, 385, 371, 372, 288, 389, 328, 329, 184, 44, 309, 47, 48, 400, 401, 49, 52, 54, 56, 355, 339, 261, 340, 404, 353, 354, 405, 203, 204, 189, 192, 193, 365, 565, 566, 364, 367, 368, 217, 218, 540, 541, 376, 421, 403, 378, 379, 422, 424, 366, 10, 383, 386, 582, 583, 435, 436, 437, 387, 195, 388, 442, 390, 391, 392, 393, 448, 394, 72, 484, 485, 455, 456, 458, 460, 461, 395, 449, 450, 451, 452, 453, 454, 398, 399, 305, 306, 402, 463, 464, 465, 467, 407, 410, 411, 474, 475, 476, 477, 412, 478, 479, 413, 414, 415, 416, 548, 549, 550, 551, 417, 418, 567, 419, 491, 420, 373, 532, 423, 425, 426, 430, 504, 11, 433, 434, 396, 397, 432, 507, 508, 509, 443, 512, 513, 514, 515, 516, 66, 68, 525, 0, 526, 527, 528, 529, 462, 369, 468, 112, 480, 126, 445, 552, 553, 481, 482, 554, 555, 483, 556, 557, 558, 486, 502, 73, 74, 503, 12, 487, 489, 490, 510, 85, 518, 519, 91, 94, 103, 534, 104, 105, 108, 111, 13, 115, 116, 118, 119, 124, 292, 293, 14, 370, 537, 538, 542, 15, 16, 427, 431, 447, 17, 277, 342, 357, 358, 18, 438, 444, 19, 20, 466, 21, 469, 22, 23, 494, 500, 511, 24, 25, 26, 27, 520, 533, 535, 536, 543, 28, 29, 30, 584, 31, 561, 585, 562, 563, 32 }
  uselistorder i32 24, { 11, 13, 14, 35, 36, 38, 39, 0, 1, 2, 3, 19, 46, 48, 28, 49, 40, 41, 51, 53, 54, 33, 55, 37, 58, 22, 4, 15, 16, 59, 17, 18, 52, 34, 8, 56, 57, 20, 21, 62, 23, 24, 25, 26, 27, 29, 30, 5, 6, 31, 7, 32, 9, 42, 43, 44, 45, 47, 50, 60, 61, 10, 63, 12, 64, 65, 66, 67 }
  uselistorder i32 -1, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 281, 282, 283, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 4, 276, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 5, 277, 152, 278, 279, 280, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 0, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 292, 293, 187, 284, 285, 1, 286, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 287, 199, 200, 201, 202, 203, 204, 6, 288, 7, 289, 8, 290, 205, 206, 207, 208, 209, 210, 291, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 2, 3, 274, 275 }
  uselistorder label %dec_label_pc_40a30, { 1, 0 }
}

define i32 @function_40a52() local_unnamed_addr {
dec_label_pc_40a52:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40a54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40a54:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40a57() local_unnamed_addr {
dec_label_pc_40a57:
  %v0_40a5d = load i32, i32* @eax, align 8
  ret i32 %v0_40a5d
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_40a5e:
  %v4_40a5e = add i32 %arg1, -24
  %v1_40a63 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v4_40a5e)
  ret i32 %v1_40a63

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 -24, { 37, 38, 63, 59, 60, 61, 62, 64, 0, 86, 1, 2, 66, 58, 56, 55, 57, 3, 67, 68, 100, 101, 102, 4, 5, 32, 6, 50, 70, 7, 39, 40, 75, 76, 8, 9, 51, 65, 69, 10, 11, 85, 104, 103, 106, 105, 107, 12, 13, 77, 78, 79, 80, 81, 82, 83, 84, 99, 42, 43, 44, 45, 46, 33, 14, 93, 94, 95, 96, 97, 98, 71, 52, 53, 72, 73, 74, 15, 16, 17, 87, 88, 89, 90, 91, 92, 47, 54, 41, 18, 48, 34, 19, 35, 49, 20, 21, 22, 23, 24, 25, 26, 36, 27, 28, 29, 30, 31 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_40a66:
  ret i32 0
}

define i32 @function_40a8c() local_unnamed_addr {
dec_label_pc_40a8c:
  %eax.global-to-local = alloca i32, align 4
  %v0_40a8c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_40a8c

; uselistorder directives
  uselistorder i32 1, {}
}

define i32 @function_40aaa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_40aaa:
  %v0_40aaa = load i32, i32* @eax, align 8
  %v1_40aaa = trunc i32 %v0_40aaa to i8
  %v5_40aaa = mul i32 %v0_40aaa, 2
  %v6_40aaa = inttoptr i32 %v5_40aaa to i8*
  %v7_40aaa = load i8, i8* %v6_40aaa, align 2
  %v8_40aaa = add i8 %v1_40aaa, %v7_40aaa
  %v23_40aaa = zext i8 %v8_40aaa to i32
  %v25_40aaa = and i32 %v0_40aaa, -256
  %v26_40aaa = or i32 %v23_40aaa, %v25_40aaa
  ret i32 %v26_40aaa

; uselistorder directives
  uselistorder i32 %v0_40aaa, { 1, 0, 2 }
  uselistorder i32 -256, { 103, 189, 43, 108, 109, 85, 47, 110, 111, 247, 66, 113, 269, 115, 116, 122, 95, 256, 257, 67, 68, 5, 244, 126, 127, 128, 48, 84, 82, 133, 134, 135, 69, 136, 100, 88, 74, 75, 102, 6, 7, 147, 148, 44, 106, 149, 150, 107, 101, 151, 152, 153, 63, 240, 112, 154, 155, 156, 157, 255, 114, 118, 275, 276, 262, 159, 160, 161, 117, 165, 121, 272, 273, 274, 166, 167, 65, 124, 168, 125, 169, 170, 171, 172, 279, 174, 173, 79, 162, 8, 80, 9, 130, 131, 132, 267, 268, 10, 270, 280, 4, 261, 175, 176, 178, 11, 137, 138, 139, 140, 182, 183, 141, 184, 185, 186, 187, 179, 180, 45, 188, 144, 181, 142, 190, 191, 192, 193, 194, 46, 195, 71, 72, 197, 198, 271, 199, 200, 201, 202, 203, 204, 205, 206, 163, 207, 208, 50, 12, 51, 52, 53, 216, 217, 55, 56, 219, 177, 158, 13, 164, 196, 49, 0, 129, 211, 212, 209, 54, 238, 218, 143, 213, 239, 57, 278, 220, 221, 222, 225, 245, 252, 253, 58, 246, 226, 59, 228, 60, 145, 61, 62, 229, 248, 230, 249, 250, 231, 232, 233, 234, 235, 236, 237, 223, 263, 17, 260, 243, 242, 227, 224, 64, 210, 214, 215, 98, 99, 258, 259, 254, 70, 73, 76, 77, 78, 81, 83, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 18, 14, 104, 105, 119, 120, 123, 146, 19, 241, 15, 20, 21, 22, 251, 264, 1, 265, 2, 266, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 277, 40, 41, 42, 16 }
  uselistorder i32 2, { 8, 50, 70, 51, 9, 52, 0, 71, 53, 54, 72, 55, 56, 10, 57, 73, 58, 92, 44, 11, 59, 74, 12, 13, 14, 75, 15, 60, 76, 61, 77, 16, 17, 78, 62, 18, 79, 93, 63, 19, 20, 1, 49, 21, 22, 23, 2, 24, 86, 80, 3, 25, 64, 81, 96, 82, 83, 94, 4, 65, 68, 69, 26, 27, 66, 28, 84, 67, 87, 29, 48, 88, 89, 90, 91, 30, 85, 97, 31, 45, 32, 95, 33, 34, 35, 46, 47, 5, 36, 37, 38, 39, 40, 41, 42, 43, 6, 7 }
}

define i32 @function_40aea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_40aea:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40b4e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_40b4e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_40b86() local_unnamed_addr {
dec_label_pc_40b86:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_57eb9(i32 %arg1) local_unnamed_addr {
dec_label_pc_57eb9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_580d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_580d3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5830d(i32 %arg1) local_unnamed_addr {
dec_label_pc_5830d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_58527(i32 %arg1) local_unnamed_addr {
dec_label_pc_58527:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_58386(i32) local_unnamed_addr

declare i32 @unknown_40baf(i32, i32) local_unnamed_addr

declare i32 @unknown_40ce1(i32, i32) local_unnamed_addr

declare i32 @unknown_40d9e(i32, i32) local_unnamed_addr

declare i32 @unknown_40e78(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4101a(i32) local_unnamed_addr

declare i32 @unknown_4105a(i32) local_unnamed_addr

declare i32 @unknown_41071(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41230(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41292(i32) local_unnamed_addr

declare i32 @unknown_412d2(i32) local_unnamed_addr

declare i32 @unknown_412e2(i32) local_unnamed_addr

declare i32 @unknown_412fa(i32) local_unnamed_addr

declare i32 @unknown_41538(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41620(i32, i32) local_unnamed_addr

declare i32 @unknown_416e0(i32) local_unnamed_addr

declare i32 @unknown_416fe(i32, i32) local_unnamed_addr

declare i32 @unknown_4176c(i32, i32) local_unnamed_addr

declare i32 @unknown_4176e(i32, i32) local_unnamed_addr

declare i32 @unknown_417a4(i32) local_unnamed_addr

declare i32 @unknown_417c4(i32) local_unnamed_addr

declare i32 @unknown_418ae(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4199e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41ad3(i32) local_unnamed_addr

declare i32 @unknown_41b11(i32) local_unnamed_addr

declare i32 @unknown_41bdc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41c46(i32, i32) local_unnamed_addr

declare i32 @unknown_41da2(i32) local_unnamed_addr

declare i32 @unknown_41f36(i32) local_unnamed_addr

declare i32 @unknown_41f4e(i32) local_unnamed_addr

declare i32 @unknown_41f6a(i32) local_unnamed_addr

declare i32 @unknown_41f92(i32) local_unnamed_addr

declare i32 @unknown_41fa9() local_unnamed_addr

declare i32 @unknown_41fdf(i32) local_unnamed_addr

declare i32 @unknown_4200c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42026(i32) local_unnamed_addr

declare i32 @unknown_42118(i32, i32) local_unnamed_addr

declare i32 @unknown_42206(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4229e(i32) local_unnamed_addr

declare i32 @unknown_422cb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4230f(i32, i32) local_unnamed_addr

declare i32 @unknown_42332(i32) local_unnamed_addr

declare i32 @unknown_4239c(i32) local_unnamed_addr

declare i32 @unknown_423ab(i32) local_unnamed_addr

declare i32 @unknown_42414(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42422(i32) local_unnamed_addr

declare i32 @unknown_42468(i32, i32) local_unnamed_addr

declare i32 @unknown_424e6(i32, i32) local_unnamed_addr

declare i32 @unknown_4252d(i32, i32) local_unnamed_addr

declare i32 @unknown_42550(i32, i32) local_unnamed_addr

declare i32 @unknown_4257c(i32) local_unnamed_addr

declare i32 @unknown_4258e(i32, i32) local_unnamed_addr

declare i32 @unknown_425e5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_425f4(i32, i32) local_unnamed_addr

declare i32 @unknown_42642(i32, i32) local_unnamed_addr

declare i32 @unknown_4295a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_429f2(i32, i32) local_unnamed_addr

declare i32 @unknown_42a40(i32) local_unnamed_addr

declare i32 @unknown_42a76(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42b5e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42c2e(i32, i32) local_unnamed_addr

declare i32 @unknown_42c46(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42c51(i32, i32) local_unnamed_addr

declare i32 @unknown_42d2e(i32, i32) local_unnamed_addr

declare i32 @unknown_42d7e(i32, i32) local_unnamed_addr

declare i32 @unknown_42e07(i32) local_unnamed_addr

declare i32 @unknown_42e62(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42efe(i32, i32) local_unnamed_addr

declare i32 @unknown_43002(i32, i32) local_unnamed_addr

declare i32 @unknown_43052(i32, i32) local_unnamed_addr

declare i32 @unknown_430dc(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43182(i32) local_unnamed_addr

declare i32 @unknown_4322a(i32) local_unnamed_addr

declare i32 @unknown_4328a(i32) local_unnamed_addr

declare i32 @unknown_432ba(i32) local_unnamed_addr

declare i32 @unknown_432ea(i32, i32) local_unnamed_addr

declare i32 @unknown_4332f(i32) local_unnamed_addr

declare i32 @unknown_43336(i32, i32) local_unnamed_addr

declare i32 @unknown_433bd(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4346c(i32) local_unnamed_addr

declare i32 @unknown_43488(i32) local_unnamed_addr

declare i32 @unknown_43510(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4352a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43630(i32, i32) local_unnamed_addr

declare i32 @unknown_436bc(i32) local_unnamed_addr

declare i32 @unknown_436e4(i32, i32) local_unnamed_addr

declare i32 @unknown_436ec(i32) local_unnamed_addr

declare i32 @unknown_4370f(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4371c(i32) local_unnamed_addr

declare i32 @unknown_4374c(i32) local_unnamed_addr

declare i32 @unknown_43814(i32, i32) local_unnamed_addr

declare i32 @unknown_4384c(i32) local_unnamed_addr

declare i32 @unknown_4384f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4387b(i32, i32) local_unnamed_addr

declare i32 @unknown_438b6(i32) local_unnamed_addr

declare i32 @unknown_43988(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_439a5(i32, i32) local_unnamed_addr

declare i32 @unknown_43a4e(i32) local_unnamed_addr

declare i32 @unknown_43a7f(i32, i32) local_unnamed_addr

declare i32 @unknown_43b08(i32) local_unnamed_addr

declare i32 @unknown_43b40(i32) local_unnamed_addr

declare i32 @unknown_43b5a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43c2c(i32) local_unnamed_addr

declare i32 @unknown_43c7c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43c96(i32, i32) local_unnamed_addr

declare i32 @unknown_43c98(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43d9e(i32, i32) local_unnamed_addr

declare i32 @unknown_43de0(i32) local_unnamed_addr

declare i32 @unknown_43edb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43f42(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44014(i32, i32) local_unnamed_addr

declare i32 @unknown_44056(i32, i32) local_unnamed_addr

declare i32 @unknown_4405b(i32, i32) local_unnamed_addr

declare i32 @unknown_440b6(i32, i32) local_unnamed_addr

declare i32 @unknown_4410d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4416a(i32, i32) local_unnamed_addr

declare i32 @unknown_4436f() local_unnamed_addr

declare i32 @unknown_44383(i32) local_unnamed_addr

declare i32 @unknown_4445a(i32, i32) local_unnamed_addr

declare i32 @unknown_444de(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_445b2(i32, i32) local_unnamed_addr

declare i32 @unknown_44664(i32, i32) local_unnamed_addr

declare i32 @unknown_447fa(i32, i32) local_unnamed_addr

declare i32 @unknown_44834(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44932(i32, i32) local_unnamed_addr

declare i32 @unknown_449d8(i32, i32) local_unnamed_addr

declare i32 @unknown_44a8c(i32) local_unnamed_addr

declare i32 @unknown_44bfa(i32) local_unnamed_addr

declare i32 @unknown_44d1b(i32, i32) local_unnamed_addr

declare i32 @unknown_44db8(i32, i32) local_unnamed_addr

declare i32 @unknown_44dff(i32) local_unnamed_addr

declare i32 @unknown_44e39(i32) local_unnamed_addr

declare i32 @unknown_44e3a(i32) local_unnamed_addr

declare i32 @unknown_44e6a(i32) local_unnamed_addr

declare i32 @unknown_44e9a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44f4e(i32) local_unnamed_addr

declare i32 @unknown_450bd(i32, i32) local_unnamed_addr

declare i32 @unknown_4512e(i32, i32) local_unnamed_addr

declare i32 @unknown_4515a(i32) local_unnamed_addr

declare i32 @unknown_45185(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4527c(i32) local_unnamed_addr

declare i32 @unknown_45298(i32) local_unnamed_addr

declare i32 @unknown_4533a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45446(i32, i32) local_unnamed_addr

declare i32 @unknown_454d2(i32) local_unnamed_addr

declare i32 @unknown_4557a(i32) local_unnamed_addr

declare i32 @unknown_455da(i32) local_unnamed_addr

declare i32 @unknown_4560a(i32) local_unnamed_addr

declare i32 @unknown_4563a(i32, i32) local_unnamed_addr

declare i32 @unknown_45683(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_456ea(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4576e(i32, i32) local_unnamed_addr

declare i32 @unknown_457a6(i32) local_unnamed_addr

declare i32 @unknown_457bc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_457d5(i32, i32) local_unnamed_addr

declare i32 @unknown_4589a(i32) local_unnamed_addr

declare i32 @unknown_458ff(i32, i32) local_unnamed_addr

declare i32 @unknown_459d9(i32, i32) local_unnamed_addr

declare i32 @unknown_45a9a(i32) local_unnamed_addr

declare i32 @unknown_45b36(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45b86(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45c22(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45c5a(i32, i32) local_unnamed_addr

declare i32 @unknown_45d0c(i32, i32) local_unnamed_addr

declare i32 @unknown_45d24(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45db6(i32, i32) local_unnamed_addr

declare i32 @unknown_45e5c(i32, i32) local_unnamed_addr

declare i32 @unknown_45e96(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45f0c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45fb4(i32) local_unnamed_addr

declare i32 @unknown_4609a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46190(i32) local_unnamed_addr

declare i32 @unknown_4626e(i32) local_unnamed_addr

declare i32 @unknown_46328(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46532(i32) local_unnamed_addr

declare i32 @unknown_4654b(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4656c(i32) local_unnamed_addr

declare i32 @unknown_46586(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4660b(i32, i32) local_unnamed_addr

declare i32 @unknown_46643(i32) local_unnamed_addr

declare i32 @unknown_46672(i32, i32) local_unnamed_addr

declare i32 @unknown_46742(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4679b(i32, i32) local_unnamed_addr

declare i32 @unknown_46875(i32, i32) local_unnamed_addr

declare i32 @unknown_468cb(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46936(i32) local_unnamed_addr

declare i32 @unknown_46996(i32) local_unnamed_addr

declare i32 @unknown_46a00(i32) local_unnamed_addr

declare i32 @unknown_46a22(i32, i32) local_unnamed_addr

declare i32 @unknown_46aa4(i32) local_unnamed_addr

declare i32 @unknown_46ad4(i32) local_unnamed_addr

declare i32 @unknown_46b04(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46b38(i32, i32) local_unnamed_addr

declare i32 @unknown_46b5c(i32) local_unnamed_addr

declare i32 @unknown_46bb8(i32) local_unnamed_addr

declare i32 @unknown_46c40(i32) local_unnamed_addr

declare i32 @unknown_46daa(i32) local_unnamed_addr

declare i32 @unknown_46dd7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46e3e(i32) local_unnamed_addr

declare i32 @unknown_46e6e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46eb2(i32) local_unnamed_addr

declare i32 @unknown_46f40(i32, i32) local_unnamed_addr

declare i32 @unknown_46f87(i32, i32) local_unnamed_addr

declare i32 @unknown_46fe8(i32, i32) local_unnamed_addr

declare i32 @unknown_4703f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4709c(i32, i32) local_unnamed_addr

declare i32 @unknown_47238(i32) local_unnamed_addr

declare i32 @unknown_472a2(i32) local_unnamed_addr

declare i32 @unknown_4730c(i32) local_unnamed_addr

declare i32 @unknown_473bd(i32, i32) local_unnamed_addr

declare i32 @unknown_473f0(i32, i32) local_unnamed_addr

declare i32 @unknown_47474(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47600(i32, i32) local_unnamed_addr

declare i32 @unknown_47645(i32) local_unnamed_addr

declare i32 @unknown_47689(i32) local_unnamed_addr

declare i32 @unknown_476b6(i32) local_unnamed_addr

declare i32 @unknown_4770b(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_477ec(i32) local_unnamed_addr

declare i32 @unknown_4780e(i32) local_unnamed_addr

declare i32 @unknown_4781c(i32) local_unnamed_addr

declare i32 @unknown_4784c(i32) local_unnamed_addr

declare i32 @unknown_4787c(i32) local_unnamed_addr

declare i32 @unknown_47888(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_478bc(i32) local_unnamed_addr

declare i32 @unknown_479d8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_479f4(i32) local_unnamed_addr

declare i32 @unknown_47a8b(i32) local_unnamed_addr

declare i32 @unknown_47ada(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47b54(i32) local_unnamed_addr

declare i32 @unknown_47ced(i32) local_unnamed_addr

declare i32 @unknown_47de0(i32) local_unnamed_addr

declare i32 @unknown_47dee(i32) local_unnamed_addr

declare i32 @unknown_47e5d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48007(i32) local_unnamed_addr

declare i32 @unknown_48041(i32) local_unnamed_addr

declare i32 @unknown_48062() local_unnamed_addr

declare i32 @unknown_48134(i32) local_unnamed_addr

declare i32 @unknown_482e6() local_unnamed_addr

declare i32 @unknown_4833a(i32) local_unnamed_addr

declare i32 @unknown_48360() local_unnamed_addr

declare i32 @unknown_48370(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4838b(i32) local_unnamed_addr

declare i32 @unknown_483d4(i32) local_unnamed_addr

declare i32 @unknown_484ec(i32) local_unnamed_addr

declare i32 @unknown_484f0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48539(i32) local_unnamed_addr

declare i32 @unknown_48580(i32) local_unnamed_addr

declare i32 @unknown_485f2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48642(i32, i32) local_unnamed_addr

declare i32 @unknown_4868c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_486bc(i32, i32) local_unnamed_addr

declare i32 @unknown_48714(i32) local_unnamed_addr

declare i32 @unknown_487cc(i32) local_unnamed_addr

declare i32 @unknown_4882f(i32) local_unnamed_addr

declare i32 @unknown_48876(i32) local_unnamed_addr

declare i32 @unknown_48879(i32) local_unnamed_addr

declare i32 @unknown_48882(i32) local_unnamed_addr

declare i32 @unknown_488f6(i32, i32) local_unnamed_addr

declare i32 @unknown_489b6(i32) local_unnamed_addr

declare i32 @unknown_48a5e(i32, i32) local_unnamed_addr

declare i32 @unknown_48b00(i32) local_unnamed_addr

declare i32 @unknown_48b6e(i32) local_unnamed_addr

declare i32 @unknown_48bba(i32) local_unnamed_addr

declare i32 @unknown_48bec(i32, i32) local_unnamed_addr

declare i32 @unknown_48c0e(i32) local_unnamed_addr

declare i32 @unknown_48c24(i32, i32) local_unnamed_addr

declare i32 @unknown_48c79(i32, i32) local_unnamed_addr

declare i32 @unknown_48cdc(i32) local_unnamed_addr

declare i32 @unknown_48ce6(i32, i32) local_unnamed_addr

declare i32 @unknown_48d08(i32, i32) local_unnamed_addr

declare i32 @unknown_48dbe(i32) local_unnamed_addr

declare i32 @unknown_48eaa(i32) local_unnamed_addr

declare i32 @unknown_490c6(i32) local_unnamed_addr

declare i32 @unknown_49132(i32) local_unnamed_addr

declare i32 @unknown_4919a(i32, i32) local_unnamed_addr

declare i32 @unknown_49300(i32, i32) local_unnamed_addr

declare i32 @unknown_4934c(i32, i32) local_unnamed_addr

declare i32 @unknown_4936a() local_unnamed_addr

declare i32 @unknown_493d4(i32, i32) local_unnamed_addr

declare i32 @unknown_49468(i32, i32) local_unnamed_addr

declare i32 @unknown_494b7(i32) local_unnamed_addr

declare i32 @unknown_494bc(i32) local_unnamed_addr

declare i32 @unknown_4952e(i32, i32) local_unnamed_addr

declare i32 @unknown_4961c(i32) local_unnamed_addr

declare i32 @unknown_496ac(i32, i32) local_unnamed_addr

declare i32 @unknown_497ba(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_497d7(i32, i32) local_unnamed_addr

declare i32 @unknown_49812(i32) local_unnamed_addr

declare i32 @unknown_49850(i32, i32) local_unnamed_addr

declare i32 @unknown_498b2(i32, i32) local_unnamed_addr

declare i32 @unknown_4997e(i32, i32) local_unnamed_addr

declare i32 @unknown_49980(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_499dd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49a59(i32, i32) local_unnamed_addr

declare i32 @unknown_49a60(i32) local_unnamed_addr

declare i32 @unknown_49a90(i32) local_unnamed_addr

declare i32 @unknown_49b66(i32) local_unnamed_addr

declare i32 @unknown_49ba6(i32) local_unnamed_addr

declare i32 @unknown_49c02(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a0ea(i32, i32) local_unnamed_addr

declare i32 @unknown_4a18c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a23e(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a2e2(i32, i32) local_unnamed_addr

declare i32 @unknown_4a3a6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a45e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a4d0(i32) local_unnamed_addr

declare i32 @unknown_4a50e(i32, i32) local_unnamed_addr

declare i32 @unknown_4a575(i32, i32) local_unnamed_addr

declare i32 @unknown_4a595(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a60e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a67a(i32, i32) local_unnamed_addr

declare i32 @unknown_4a6ec(i32) local_unnamed_addr

declare i32 @unknown_4a74e(i32) local_unnamed_addr

declare i32 @unknown_4a7f5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a85d(i32, i32) local_unnamed_addr

declare i32 @unknown_4a8ca(i32) local_unnamed_addr

declare i32 @unknown_4a994(i32) local_unnamed_addr

declare i32 @unknown_4aa6c(i32, i32) local_unnamed_addr

declare i32 @unknown_4aab2(i32) local_unnamed_addr

declare i32 @unknown_4aad2(i32) local_unnamed_addr

declare i32 @unknown_4ab47(i32) local_unnamed_addr

declare i32 @unknown_4abac(i32) local_unnamed_addr

declare i32 @unknown_4ac08(i32) local_unnamed_addr

declare i32 @unknown_4ac38(i32) local_unnamed_addr

declare i32 @unknown_4ac98(i32) local_unnamed_addr

declare i32 @unknown_4ad17(i32, i32) local_unnamed_addr

declare i32 @unknown_4ae9c() local_unnamed_addr

declare i32 @unknown_4aeba(i32, i32) local_unnamed_addr

declare i32 @unknown_4aebc(i32, i32) local_unnamed_addr

declare i32 @unknown_4af08(i32) local_unnamed_addr

declare i32 @unknown_4af90(i32) local_unnamed_addr

declare i32 @unknown_4aff0(i32) local_unnamed_addr

declare i32 @unknown_4b086(i32, i32) local_unnamed_addr

declare i32 @unknown_4b172(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b208(i32, i32) local_unnamed_addr

declare i32 @unknown_4b2b9(i32) local_unnamed_addr

declare i32 @unknown_4b2db(i32) local_unnamed_addr

declare i32 @unknown_4b383(i32) local_unnamed_addr

declare i32 @unknown_4b397(i32) local_unnamed_addr

declare i32 @unknown_4b418(i32) local_unnamed_addr

declare i32 @unknown_4b422() local_unnamed_addr

declare i32 @unknown_4b484(i32) local_unnamed_addr

declare i32 @unknown_4b4f2(i32, i32) local_unnamed_addr

declare i32 @unknown_4b594(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b6e4(i32, i32) local_unnamed_addr

declare i32 @unknown_4b760(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b840(i32) local_unnamed_addr

declare i32 @unknown_4b8c8(i32) local_unnamed_addr

declare i32 @unknown_4b8dc(i32) local_unnamed_addr

declare i32 @unknown_4b928(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b9be(i32, i32) local_unnamed_addr

declare i32 @unknown_4ba53(i32) local_unnamed_addr

declare i32 @unknown_4ba58(i32) local_unnamed_addr

declare i32 @unknown_4bae0(i32) local_unnamed_addr

declare i32 @unknown_4bb2d() local_unnamed_addr

declare i32 @unknown_4bb3f(i32, i32) local_unnamed_addr

declare i32 @unknown_4bc15(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bc49(i32) local_unnamed_addr

declare i32 @unknown_4bc98(i32, i32) local_unnamed_addr

declare i32 @unknown_4bcc8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4beed(i32) local_unnamed_addr

declare i32 @unknown_4c158(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c527(i32) local_unnamed_addr

declare i32 @unknown_4c557(i32) local_unnamed_addr

declare i32 @unknown_4c636() local_unnamed_addr

declare i32 @unknown_4c63b(i32) local_unnamed_addr

declare i32 @unknown_4c66c(i32, i32) local_unnamed_addr

declare i32 @unknown_4c6e4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c744(i32) local_unnamed_addr

declare i32 @unknown_4c785(i32) local_unnamed_addr

declare i32 @unknown_4c78c(i32) local_unnamed_addr

declare i32 @unknown_4c7e6(i32, i32) local_unnamed_addr

declare i32 @unknown_4c84a(i32, i32) local_unnamed_addr

declare i32 @unknown_4c88e(i32) local_unnamed_addr

declare i32 @unknown_4c8ee(i32) local_unnamed_addr

declare i32 @unknown_4c906(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c91f(i32, i32) local_unnamed_addr

declare i32 @unknown_4ca08(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4caaa(i32) local_unnamed_addr

declare i32 @unknown_4cc0c(i32) local_unnamed_addr

declare i32 @unknown_4cc4c(i32, i32) local_unnamed_addr

declare i32 @unknown_4cd20(i32) local_unnamed_addr

declare i32 @unknown_4cdfa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4cf79(i32) local_unnamed_addr

declare i32 @unknown_4cfa9(i32) local_unnamed_addr

declare i32 @unknown_4d0c6(i32) local_unnamed_addr

declare i32 @unknown_4d154(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d167(i32) local_unnamed_addr

declare i32 @unknown_4d197(i32) local_unnamed_addr

declare i32 @unknown_4d1c8(i32) local_unnamed_addr

declare i32 @unknown_4d1d2(i32, i32) local_unnamed_addr

declare i32 @unknown_4d209(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d222(i32, i32) local_unnamed_addr

declare i32 @unknown_4d2ac(i32) local_unnamed_addr

declare i32 @unknown_4d319(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d39c(i32, i32) local_unnamed_addr

declare i32 @unknown_4d3b4(i32, i32) local_unnamed_addr

declare i32 @unknown_4d47a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d595(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d5e2(i32) local_unnamed_addr

declare i32 @unknown_4d61c(i32) local_unnamed_addr

declare i32 @unknown_4d6ec(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d752(i32) local_unnamed_addr

declare i32 @unknown_4d80f(i32) local_unnamed_addr

declare i32 @unknown_4d8cc(i32, i32) local_unnamed_addr

declare i32 @unknown_4dcf0(i32, i32) local_unnamed_addr

declare i32 @unknown_4dd31(i32) local_unnamed_addr

declare i32 @unknown_4dfb2(i32) local_unnamed_addr

declare i32 @unknown_4dfc3(i32) local_unnamed_addr

declare i32 @unknown_4e014(i32, i32) local_unnamed_addr

declare i32 @unknown_4e018(i32, i32) local_unnamed_addr

declare i32 @unknown_4e080(i32) local_unnamed_addr

declare i32 @unknown_4e0d9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e1bb(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e1da(i32, i32) local_unnamed_addr

declare i32 @unknown_4e2d6(i32) local_unnamed_addr

declare i32 @unknown_4e3b9(i32) local_unnamed_addr

declare i32 @unknown_4e47d(i32, i32) local_unnamed_addr

declare i32 @unknown_4e544(i32, i32) local_unnamed_addr

declare i32 @unknown_4e5e2(i32) local_unnamed_addr

declare i32 @unknown_4e66a(i32) local_unnamed_addr

declare i32 @unknown_4e678(i32) local_unnamed_addr

declare i32 @unknown_4e698(i32, i32) local_unnamed_addr

declare i32 @unknown_4e6ca(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e760(i32, i32) local_unnamed_addr

declare i32 @unknown_4e770(i32, i32) local_unnamed_addr

declare i32 @unknown_4e826(i32) local_unnamed_addr

declare i32 @unknown_4e85b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e8f1(i32) local_unnamed_addr

declare i32 @unknown_4e964(i32, i32) local_unnamed_addr

declare i32 @unknown_4e9ae(i32, i32) local_unnamed_addr

declare i32 @unknown_4eac8(i32, i32) local_unnamed_addr

declare i32 @unknown_4eaf0(i32) local_unnamed_addr

declare i32 @unknown_4eba0(i32, i32) local_unnamed_addr

declare i32 @unknown_4eca8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ed03(i32, i32) local_unnamed_addr

declare i32 @unknown_4ed63(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ee8b(i32, i32) local_unnamed_addr

declare i32 @unknown_4ef75(i32, i32) local_unnamed_addr

declare i32 @unknown_4efcd(i32) local_unnamed_addr

declare i32 @unknown_4f032(i32, i32) local_unnamed_addr

declare i32 @unknown_4f078(i32) local_unnamed_addr

declare i32 @unknown_4f0b0(i32, i32) local_unnamed_addr

declare i32 @unknown_4f165(i32) local_unnamed_addr

declare i32 @unknown_4f168(i32) local_unnamed_addr

declare i32 @unknown_4f184(i32) local_unnamed_addr

declare i32 @unknown_4f1d3(i32, i32) local_unnamed_addr

declare i32 @unknown_4f236(i32) local_unnamed_addr

declare i32 @unknown_4f260(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f33c(i32) local_unnamed_addr

declare i32 @unknown_4f372(i32) local_unnamed_addr

declare i32 @unknown_4f40a(i32) local_unnamed_addr

declare i32 @unknown_4f450(i32) local_unnamed_addr

declare i32 @unknown_4f4fa(i32, i32) local_unnamed_addr

declare i32 @unknown_4f54a(i32) local_unnamed_addr

declare i32 @unknown_4f57f(i32) local_unnamed_addr

declare i32 @unknown_4f59a(i32) local_unnamed_addr

declare i32 @unknown_4f5ac(i32, i32) local_unnamed_addr

declare i32 @unknown_4f5e8(i32, i32) local_unnamed_addr

declare i32 @unknown_4f69c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f6d0(i32) local_unnamed_addr

declare i32 @unknown_4f758(i32) local_unnamed_addr

declare i32 @unknown_4f762(i32, i32) local_unnamed_addr

declare i32 @unknown_4f7b8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f7bf() local_unnamed_addr

declare i32 @unknown_4f7f3(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f84e(i32, i32) local_unnamed_addr

declare i32 @unknown_4f918(i32) local_unnamed_addr

declare i32 @unknown_4f948(i32) local_unnamed_addr

declare i32 @unknown_4fa08(i32) local_unnamed_addr

declare i32 @unknown_4fade(i32) local_unnamed_addr

declare i32 @unknown_4fb3e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fb6a(i32) local_unnamed_addr

declare i32 @unknown_4fb9a(i32) local_unnamed_addr

declare i32 @unknown_4fbd4(i32, i32) local_unnamed_addr

declare i32 @unknown_4fc46(i32) local_unnamed_addr

declare i32 @unknown_4fc7b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fc86(i32) local_unnamed_addr

declare i32 @unknown_4fcfe(i32) local_unnamed_addr

declare i32 @unknown_4fd54(i32) local_unnamed_addr

declare i32 @unknown_4fd88(i32) local_unnamed_addr

declare i32 @unknown_4fd94(i32) local_unnamed_addr

declare i32 @unknown_4fdc2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ff46(i32, i32) local_unnamed_addr

declare i32 @unknown_4fffb(i32) local_unnamed_addr

declare i32 @unknown_50118(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50169(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5027e(i32, i32) local_unnamed_addr

declare i32 @unknown_5033a(i32, i32) local_unnamed_addr

declare i32 @unknown_5039e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5042c(i32) local_unnamed_addr

declare i32 @unknown_504a0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_505df(i32) local_unnamed_addr

declare i32 @unknown_506a0(i32) local_unnamed_addr

declare i32 @unknown_506a4(i32) local_unnamed_addr

declare i32 @unknown_506aa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_506e3(i32) local_unnamed_addr

declare i32 @unknown_5074a(i32) local_unnamed_addr

declare i32 @unknown_50754(i32, i32) local_unnamed_addr

declare i32 @unknown_5075f(i32) local_unnamed_addr

declare i32 @unknown_5086c(i32) local_unnamed_addr

declare i32 @unknown_5088a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_508f6(i32, i32) local_unnamed_addr

declare i32 @unknown_5095a(i32) local_unnamed_addr

declare i32 @unknown_50a3e(i32) local_unnamed_addr

declare i32 @unknown_50a5c() local_unnamed_addr

declare i32 @unknown_50bba(i32, i32) local_unnamed_addr

declare i32 @unknown_50beb(i32) local_unnamed_addr

declare i32 @unknown_50bf2(i32, i32) local_unnamed_addr

declare i32 @unknown_50d2a(i32) local_unnamed_addr

declare i32 @unknown_50d4c(i32) local_unnamed_addr

declare i32 @unknown_50d90(i32) local_unnamed_addr

declare i32 @unknown_50e74(i32) local_unnamed_addr

declare i32 @unknown_50ee8(i32, i32) local_unnamed_addr

declare i32 @unknown_50f20(i32, i32) local_unnamed_addr

declare i32 @unknown_51010(i32) local_unnamed_addr

declare i32 @unknown_51098(i32) local_unnamed_addr

declare i32 @unknown_510f8(i32) local_unnamed_addr

declare i32 @unknown_51160(i32, i32) local_unnamed_addr

declare i32 @unknown_5118e(i32, i32) local_unnamed_addr

declare i32 @unknown_51228(i32) local_unnamed_addr

declare i32 @unknown_5125e(i32) local_unnamed_addr

declare i32 @unknown_51284(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_513b0(i32, i32) local_unnamed_addr

declare i32 @unknown_51400(i32) local_unnamed_addr

declare i32 @unknown_5148c(i32, i32) local_unnamed_addr

declare i32 @unknown_514c8(i32, i32) local_unnamed_addr

declare i32 @unknown_51574(i32) local_unnamed_addr

declare i32 @unknown_515a4(i32) local_unnamed_addr

declare i32 @unknown_516c4(i32, i32) local_unnamed_addr

declare i32 @unknown_517aa(i32, i32) local_unnamed_addr

declare i32 @unknown_517b6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_517f6(i32) local_unnamed_addr

declare i32 @unknown_517fa(i32, i32) local_unnamed_addr

declare i32 @unknown_51826(i32) local_unnamed_addr

declare i32 @unknown_5184e(i32, i32) local_unnamed_addr

declare i32 @unknown_51860(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_518bc() local_unnamed_addr

declare i32 @unknown_5191c(i32, i32) local_unnamed_addr

declare i32 @unknown_519d8(i32) local_unnamed_addr

declare i32 @unknown_51a08(i32, i32) local_unnamed_addr

declare i32 @unknown_51a36(i32) local_unnamed_addr

declare i32 @unknown_51a3c() local_unnamed_addr

declare i32 @unknown_51a6c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51b6e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51c64(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51d72() local_unnamed_addr

declare i32 @unknown_51da2() local_unnamed_addr

declare i32 @unknown_51dba(i32, i32) local_unnamed_addr

declare i32 @unknown_51de1(i32) local_unnamed_addr

declare i32 @unknown_51e12(i32) local_unnamed_addr

declare i32 @unknown_51e52(i32, i32) local_unnamed_addr

declare i32 @unknown_51ecb(i32, i32) local_unnamed_addr

declare i32 @unknown_51eff(i32) local_unnamed_addr

declare i32 @unknown_520bc(i32, i32) local_unnamed_addr

declare i32 @unknown_520c0(i32, i32) local_unnamed_addr

declare i32 @unknown_520ed(i32) local_unnamed_addr

declare i32 @unknown_521c2(i32, i32) local_unnamed_addr

declare i32 @unknown_52228(i32, i32) local_unnamed_addr

declare i32 @unknown_5228c(i32) local_unnamed_addr

declare i32 @unknown_522aa(i32, i32) local_unnamed_addr

declare i32 @unknown_522b7(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_522e2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52321(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5238e(i32) local_unnamed_addr

declare i32 @unknown_524ea(i32) local_unnamed_addr

declare i32 @unknown_524ee(i32, i32) local_unnamed_addr

declare i32 @unknown_524fa(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5254d(i32) local_unnamed_addr

declare i32 @unknown_5256b(i32, i32) local_unnamed_addr

declare i32 @unknown_52642(i32, i32) local_unnamed_addr

declare i32 @unknown_526d4(i32, i32) local_unnamed_addr

declare i32 @unknown_5282e(i32) local_unnamed_addr

declare i32 @unknown_52872(i32) local_unnamed_addr

declare i32 @unknown_52956(i32) local_unnamed_addr

declare i32 @unknown_5296c(i32) local_unnamed_addr

declare i32 @unknown_52999(i32) local_unnamed_addr

declare i32 @unknown_529f7(i32) local_unnamed_addr

declare i32 @unknown_52a2c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52b36(i32) local_unnamed_addr

declare i32 @unknown_52b76(i32, i32) local_unnamed_addr

declare i32 @unknown_52cb0(i32, i32) local_unnamed_addr

declare i32 @unknown_52cee(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52ed2(i32, i32) local_unnamed_addr

declare i32 @unknown_53024(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5308c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_531d0(i32) local_unnamed_addr

declare i32 @unknown_5331a(i32) local_unnamed_addr

declare i32 @unknown_533d7(i32) local_unnamed_addr

declare i32 @unknown_53819(i32) local_unnamed_addr

declare i32 @unknown_53e36(i32) local_unnamed_addr

declare i32 @unknown_53ff0(i32, i32) local_unnamed_addr

declare i32 @unknown_54025(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54144(i32, i32) local_unnamed_addr

declare i32 @unknown_54179(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54255(i32) local_unnamed_addr

declare i32 @unknown_542ac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_542ca(i32) local_unnamed_addr

declare i32 @unknown_542f0(i32, i32) local_unnamed_addr

declare i32 @unknown_54340(i32) local_unnamed_addr

declare i32 @unknown_543ec(i32) local_unnamed_addr

declare i32 @unknown_54421(i32, i32) local_unnamed_addr

declare i32 @unknown_54502(i32) local_unnamed_addr

declare i32 @unknown_5452f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54578(i32) local_unnamed_addr

declare i32 @unknown_545da(i32) local_unnamed_addr

declare i32 @unknown_546b0(i32, i32) local_unnamed_addr

declare i32 @unknown_5471e(i32) local_unnamed_addr

declare i32 @unknown_54722(i32) local_unnamed_addr

declare i32 @unknown_547ac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_548a4(i32) local_unnamed_addr

declare i32 @unknown_548c9(i32) local_unnamed_addr

declare i32 @unknown_54935(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_549c5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54a7e(i32, i32) local_unnamed_addr

declare i32 @unknown_54af4(i32, i32) local_unnamed_addr

declare i32 @unknown_54b00(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54b86(i32) local_unnamed_addr

declare i32 @unknown_54bb0(i32) local_unnamed_addr

declare i32 @unknown_54c32(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54d35(i32, i32) local_unnamed_addr

declare i32 @unknown_54d6a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54e12(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54f34(i32) local_unnamed_addr

declare i32 @unknown_54fff(i32) local_unnamed_addr

declare i32 @unknown_55002(i32) local_unnamed_addr

declare i32 @unknown_55010(i32, i32) local_unnamed_addr

declare i32 @unknown_55065(i32) local_unnamed_addr

declare i32 @unknown_55132(i32) local_unnamed_addr

declare i32 @unknown_55144(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5515f(i32) local_unnamed_addr

declare i32 @unknown_5521e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55230(i32, i32) local_unnamed_addr

declare i32 @unknown_55302(i32, i32) local_unnamed_addr

declare i32 @unknown_55346(i32) local_unnamed_addr

declare i32 @unknown_55374(i32) local_unnamed_addr

declare i32 @unknown_553b8(i32, i32) local_unnamed_addr

declare i32 @unknown_55408(i32, i32) local_unnamed_addr

declare i32 @unknown_55482(i32, i32) local_unnamed_addr

declare i32 @unknown_554ba(i32, i32) local_unnamed_addr

declare i32 @unknown_5551e(i32) local_unnamed_addr

declare i32 @unknown_55544(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55636(i32) local_unnamed_addr

declare i32 @unknown_556e6(i32, i32) local_unnamed_addr

declare i32 @unknown_55701(i32) local_unnamed_addr

declare i32 @unknown_5572e(i32) local_unnamed_addr

declare i32 @unknown_55736(i32, i32) local_unnamed_addr

declare i32 @unknown_5575e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_557ba(i32) local_unnamed_addr

declare i32 @unknown_55816(i32) local_unnamed_addr

declare i32 @unknown_5585e(i32, i32) local_unnamed_addr

declare i32 @unknown_559c4(i32) local_unnamed_addr

declare i32 @unknown_55be0(i32) local_unnamed_addr

declare i32 @unknown_55c10(i32) local_unnamed_addr

declare i32 @unknown_55c2b(i32, i32) local_unnamed_addr

declare i32 @unknown_55c3d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55d0e(i32) local_unnamed_addr

declare i32 @unknown_55e66(i32) local_unnamed_addr

declare i32 @unknown_55e94(i32, i32) local_unnamed_addr

declare i32 @unknown_55eae(i32, i32) local_unnamed_addr

declare i32 @unknown_55efe(i32, i32) local_unnamed_addr

declare i32 @unknown_55f34(i32, i32) local_unnamed_addr

declare i32 @unknown_55ff2(i32) local_unnamed_addr

declare i32 @unknown_56019(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5601f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56102(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56128(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5614e(i32) local_unnamed_addr

declare i32 @unknown_561c4(i32, i32) local_unnamed_addr

declare i32 @unknown_56214(i32, i32) local_unnamed_addr

declare i32 @unknown_5626a(i32) local_unnamed_addr

declare i32 @unknown_563e0(i32, i32) local_unnamed_addr

declare i32 @unknown_56404(i32, i32) local_unnamed_addr

declare i32 @unknown_5641c(i32, i32) local_unnamed_addr

declare i32 @unknown_5648e(i32) local_unnamed_addr

declare i32 @unknown_56492(i32) local_unnamed_addr

declare i32 @unknown_5649e(i32, i32) local_unnamed_addr

declare i32 @unknown_56514(i32) local_unnamed_addr

declare i32 @unknown_56584(i32, i32) local_unnamed_addr

declare i32 @unknown_565aa(i32, i32) local_unnamed_addr

declare i32 @unknown_5671c(i32, i32) local_unnamed_addr

declare i32 @unknown_56796(i32, i32) local_unnamed_addr

declare i32 @unknown_567cc(i32, i32) local_unnamed_addr

declare i32 @unknown_56800(i32, i32) local_unnamed_addr

declare i32 @unknown_56806(i32, i32) local_unnamed_addr

declare i32 @unknown_56831(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56856(i32) local_unnamed_addr

declare i32 @unknown_5688b(i32) local_unnamed_addr

declare i32 @unknown_5689c(i32) local_unnamed_addr

declare i32 @unknown_5689e(i32, i32) local_unnamed_addr

declare i32 @unknown_56920(i32, i32) local_unnamed_addr

declare i32 @unknown_5699e(i32) local_unnamed_addr

declare i32 @unknown_569a4(i32) local_unnamed_addr

declare i32 @unknown_569b4(i32, i32) local_unnamed_addr

declare i32 @unknown_569e8(i32, i32) local_unnamed_addr

declare i32 @unknown_56a3b(i32, i32) local_unnamed_addr

declare i32 @unknown_56a64(i32) local_unnamed_addr

declare i32 @unknown_56a82(i32, i32) local_unnamed_addr

declare i32 @unknown_56aea(i32, i32) local_unnamed_addr

declare i32 @unknown_56b4b(i32) local_unnamed_addr

declare i32 @unknown_56b4e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56b80(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56cea(i32) local_unnamed_addr

declare i32 @unknown_56d18(i32, i32) local_unnamed_addr

declare i32 @unknown_56d66(i32, i32) local_unnamed_addr

declare i32 @unknown_56da4(i32) local_unnamed_addr

declare i32 @unknown_56e30(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56f22(i32) local_unnamed_addr

declare i32 @unknown_56fb2(i32) local_unnamed_addr

declare i32 @unknown_5703e(i32, i32) local_unnamed_addr

declare i32 @unknown_571a4(i32) local_unnamed_addr

declare i32 @unknown_573b0(i32) local_unnamed_addr

declare i32 @unknown_5757f(i32) local_unnamed_addr

declare i32 @unknown_576f5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57b28(i32) local_unnamed_addr

declare i32 @unknown_57c36(i32) local_unnamed_addr

declare i32 @unknown_57c42(i32, i32) local_unnamed_addr

declare i32 @unknown_57c7a(i32, i32) local_unnamed_addr

declare i32 @unknown_57d3c(i32) local_unnamed_addr

declare i32 @unknown_57d44(i32) local_unnamed_addr

declare i32 @unknown_57e07(i32) local_unnamed_addr

declare i32 @unknown_57e34(i32) local_unnamed_addr

declare i32 @unknown_57e52(i32) local_unnamed_addr

declare i32 @unknown_57ead(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57eb8(i32) local_unnamed_addr

declare i32 @unknown_57ebf(i32) local_unnamed_addr

declare i32 @unknown_57ee5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57ee8(i32) local_unnamed_addr

declare i32 @unknown_57f21(i32) local_unnamed_addr

declare i32 @unknown_57f32(i32) local_unnamed_addr

declare i32 @unknown_57f56(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57f84(i32) local_unnamed_addr

declare i32 @unknown_57fd6(i32) local_unnamed_addr

declare i32 @unknown_58066(i32, i32) local_unnamed_addr

declare i32 @unknown_580e0(i32, i32) local_unnamed_addr

declare i32 @unknown_58160(i32) local_unnamed_addr

declare i32 @unknown_581b6(i32) local_unnamed_addr

declare i32 @unknown_581f4(i32) local_unnamed_addr

declare i32 @unknown_5826a(i32) local_unnamed_addr

declare i32 @unknown_58287(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_582f8(i32) local_unnamed_addr

declare i32 @unknown_583fe(i32, i32) local_unnamed_addr

declare i32 @unknown_5842a(i32) local_unnamed_addr

declare i32 @unknown_584ee(i32, i32) local_unnamed_addr

declare i32 @unknown_58502(i32) local_unnamed_addr

declare i32 @unknown_58560(i32) local_unnamed_addr

declare i32 @unknown_5857c(i32) local_unnamed_addr

declare i32 @unknown_5858f(i32, i32) local_unnamed_addr

declare i32 @unknown_585a9(i32, i32) local_unnamed_addr

declare i32 @unknown_585b4(i32) local_unnamed_addr

declare i32 @unknown_585dc(i32, i32) local_unnamed_addr

declare i32 @unknown_586cc(i32) local_unnamed_addr

declare i32 @unknown_58782(i32) local_unnamed_addr

declare i32 @unknown_587b0(i32, i32) local_unnamed_addr

declare i32 @unknown_5883c() local_unnamed_addr

declare i32 @unknown_58904(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5896a(i32, i32) local_unnamed_addr

declare i32 @unknown_58990(i32) local_unnamed_addr

declare i32 @unknown_589e4(i32, i32) local_unnamed_addr

declare i32 @unknown_58a34(i32) local_unnamed_addr

declare i32 @unknown_58a69(i32) local_unnamed_addr

declare i32 @unknown_58b27(i32) local_unnamed_addr

declare i32 @unknown_58b89(i32) local_unnamed_addr

declare i32 @unknown_58bbe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58cc4(i32) local_unnamed_addr

declare i32 @unknown_58d30(i32) local_unnamed_addr

declare i32 @unknown_58dbd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58fb2(i32, i32) local_unnamed_addr

declare i32 @unknown_58fe2(i32, i32) local_unnamed_addr

declare i32 @unknown_59180(i32, i32) local_unnamed_addr

declare i32 @unknown_591ca(i32) local_unnamed_addr

declare i32 @unknown_59216(i32) local_unnamed_addr

declare i32 @unknown_59320(i32) local_unnamed_addr

declare i32 @unknown_5958b(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5966d(i32) local_unnamed_addr

declare i32 @unknown_596a3(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59779(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59815(i32, i32) local_unnamed_addr

declare i32 @unknown_59817() local_unnamed_addr

declare i32 @unknown_5985c(i32) local_unnamed_addr

declare i32 @unknown_598e6(i32) local_unnamed_addr

declare i32 @unknown_59927(i32) local_unnamed_addr

declare i32 @unknown_59954(i32) local_unnamed_addr

declare i32 @unknown_599e0(i32) local_unnamed_addr

declare i32 @unknown_59a96(i32) local_unnamed_addr

declare i32 @unknown_59ac4(i32, i32) local_unnamed_addr

declare i32 @unknown_59b50(i32) local_unnamed_addr

declare i32 @unknown_59ba6(i32) local_unnamed_addr

declare i32 @unknown_59bf6(i32) local_unnamed_addr

declare i32 @unknown_59c2b(i32) local_unnamed_addr

declare i32 @unknown_59c42(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59cce(i32, i32) local_unnamed_addr

declare i32 @unknown_59d16(i32, i32) local_unnamed_addr

declare i32 @unknown_59db0(i32, i32) local_unnamed_addr

declare i32 @unknown_59f0a(i32, i32) local_unnamed_addr

declare i32 @unknown_59f4a(i32, i32) local_unnamed_addr

declare i32 @unknown_5a086(i32, i32) local_unnamed_addr

declare i32 @unknown_5a0d8(i32, i32) local_unnamed_addr

declare i32 @unknown_5a122(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a16e(i32) local_unnamed_addr

declare i32 @unknown_5a340(i32) local_unnamed_addr

declare i32 @unknown_5a36d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a544(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a60f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a6db(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a7e4(i32) local_unnamed_addr

declare i32 @unknown_5a824(i32, i32) local_unnamed_addr

declare i32 @unknown_5a8b8(i32, i32) local_unnamed_addr

declare i32 @unknown_5a900(i32, i32) local_unnamed_addr

declare i32 @unknown_5a984(i32) local_unnamed_addr

declare i32 @unknown_5aa58(i32) local_unnamed_addr

declare i32 @unknown_5aaba(i32) local_unnamed_addr

declare i32 @unknown_5aadc(i32) local_unnamed_addr

declare i32 @unknown_5aaef(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5abb6(i32) local_unnamed_addr

declare i32 @unknown_5abe4(i32) local_unnamed_addr

declare i32 @unknown_5abf4(i32, i32) local_unnamed_addr

declare i32 @unknown_5ac22(i32) local_unnamed_addr

declare i32 @unknown_5ac44(i32, i32) local_unnamed_addr

declare i32 @unknown_5acb6() local_unnamed_addr

declare i32 @unknown_5ad5a(i32, i32) local_unnamed_addr

declare i32 @unknown_5ae49() local_unnamed_addr

declare i32 @unknown_5af0d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5afd8(i32, i32) local_unnamed_addr

declare i32 @unknown_5b0a0(i32, i32) local_unnamed_addr

declare i32 @unknown_5b144(i32, i32) local_unnamed_addr

declare i32 @unknown_5b27e(i32) local_unnamed_addr

declare i32 @unknown_5b318(i32, i32) local_unnamed_addr

declare i32 @unknown_5b482(i32) local_unnamed_addr

declare i32 @unknown_5b484(i32, i32) local_unnamed_addr

declare i32 @unknown_5b77c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b840(i32) local_unnamed_addr

declare i32 @unknown_5b8a2(i32) local_unnamed_addr

declare i32 @unknown_5bb9f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bdd6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bfe1(i32) local_unnamed_addr

declare i32 @unknown_5c0e8(i32) local_unnamed_addr

declare i32 @unknown_5c115(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c186(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c245(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c336(i32) local_unnamed_addr

declare i32 @unknown_5c3f4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c6c2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c736(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c75a(i32) local_unnamed_addr

declare i32 @unknown_5c7e6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c8b1(i32) local_unnamed_addr

declare i32 @unknown_5c9b6(i32, i32) local_unnamed_addr

declare i32 @unknown_5ca22(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ca3a(i32) local_unnamed_addr

declare i32 @unknown_5ca9c(i32) local_unnamed_addr

declare i32 @unknown_5cad1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5cbad(i32) local_unnamed_addr

declare i32 @unknown_5cbc4(i32) local_unnamed_addr

declare i32 @unknown_5cc95(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5cd02(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5cd6f(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5cddc(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ce49(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ceb6(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5cebc(i32) local_unnamed_addr

declare i32 @unknown_5cef6(i32) local_unnamed_addr

declare i32 @unknown_5cf08(i32) local_unnamed_addr

declare i32 @unknown_5cf23(i32) local_unnamed_addr

declare i32 @unknown_5cf7d(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d016(i32) local_unnamed_addr

declare i32 @unknown_5d07a(i32, i32) local_unnamed_addr

declare i32 @unknown_5d0d6(i32, i32) local_unnamed_addr

declare i32 @unknown_5d124(i32) local_unnamed_addr

declare i32 @unknown_5d1ce(i32) local_unnamed_addr

declare i32 @unknown_5d1f2(i32, i32) local_unnamed_addr

declare i32 @unknown_5d232(i32) local_unnamed_addr

declare i32 @unknown_5d242(i32, i32) local_unnamed_addr

declare i32 @unknown_5d2c8(i32) local_unnamed_addr

declare i32 @unknown_5d364(i32) local_unnamed_addr

declare i32 @unknown_5d37c(i32) local_unnamed_addr

declare i32 @unknown_5d50f(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d57c(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d5b5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d5e9(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d656(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d6c3(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d730(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d79d(i32, i32) local_unnamed_addr

declare i32 @unknown_5d7f7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5dc9d(i32) local_unnamed_addr

declare i32 @unknown_5dd8a(i32, i32) local_unnamed_addr

declare i32 @unknown_5ddb5(i32) local_unnamed_addr

declare i32 @unknown_5ddc2(i32, i32) local_unnamed_addr

declare i32 @unknown_5debc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e012(i32, i32) local_unnamed_addr

declare i32 @unknown_5e137(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e15c(i32) local_unnamed_addr

declare i32 @unknown_5e1af(i32) local_unnamed_addr

declare i32 @unknown_5e1c8(i32, i32) local_unnamed_addr

declare i32 @unknown_5e21e(i32, i32) local_unnamed_addr

declare i32 @unknown_5e2be(i32, i32) local_unnamed_addr

declare i32 @unknown_5e3b6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e4d4(i32, i32) local_unnamed_addr

declare i32 @unknown_5e64e(i32) local_unnamed_addr

declare i32 @unknown_5e6f5(i32) local_unnamed_addr

declare i32 @unknown_5e7ac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e7dd(i32) local_unnamed_addr

declare i32 @unknown_5e8de(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e96a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e97c(i32) local_unnamed_addr

declare i32 @unknown_5ea26(i32) local_unnamed_addr

declare i32 @unknown_5ea3e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5eacc(i32) local_unnamed_addr

declare i32 @unknown_5eae8(i32, i32) local_unnamed_addr

declare i32 @unknown_5ebb8(i32, i32) local_unnamed_addr

declare i32 @unknown_5ec60(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ed7e(i32, i32) local_unnamed_addr

declare i32 @unknown_5ef9f(i32) local_unnamed_addr

declare i32 @unknown_5efac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5efd0(i32, i32) local_unnamed_addr

declare i32 @unknown_5f0de(i32, i32) local_unnamed_addr

declare i32 @unknown_5f1de(i32, i32) local_unnamed_addr

declare i32 @unknown_5f1ec(i32, i32) local_unnamed_addr

declare i32 @unknown_5f231(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5f284(i32) local_unnamed_addr

declare i32 @unknown_5f2fa(i32, i32) local_unnamed_addr

declare i32 @unknown_5f390(i32, i32) local_unnamed_addr

declare i32 @unknown_5f42c(i32, i32) local_unnamed_addr

declare i32 @unknown_5f8b6(i32) local_unnamed_addr

declare i32 @unknown_5f9c2(i32) local_unnamed_addr

declare i32 @unknown_5fa08(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5fa3f(i32, i32) local_unnamed_addr

declare i32 @unknown_5fbf3(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5fd30(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_600ed(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6021a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60264(i32) local_unnamed_addr

declare i32 @unknown_60310(i32, i32) local_unnamed_addr

declare i32 @unknown_60316(i32) local_unnamed_addr

declare i32 @unknown_60459(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6046d(i32, i32) local_unnamed_addr

declare i32 @unknown_6061a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_608b8(i32, i32) local_unnamed_addr

declare i32 @unknown_60bca(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60d6d(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60f8a(i32, i32) local_unnamed_addr

declare i32 @unknown_6108a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61188(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6125a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6132c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_613a2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_613fe(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6146e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_614d0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_615a2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6165c(i32, i32) local_unnamed_addr

declare i32 @unknown_61682(i32, i32) local_unnamed_addr

declare i32 @unknown_616a4(i32, i32) local_unnamed_addr

declare i32 @unknown_616e5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61735(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61807(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_618d9(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_619ab(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61a7d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61a8b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61b4f(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61d1a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61dfc(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62418(i32, i32) local_unnamed_addr

declare i32 @unknown_624ae(i32, i32) local_unnamed_addr

declare i32 @unknown_6251c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6256e(i32, i32) local_unnamed_addr

declare i32 @unknown_62605(i32) local_unnamed_addr

declare i32 @unknown_62851(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6286c(i32, i32) local_unnamed_addr

declare i32 @unknown_62aa7(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62b14(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62b81(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62bde(i32) local_unnamed_addr

declare i32 @unknown_62bee(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62c5b(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62cc8(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62d35(i32) local_unnamed_addr

declare i32 @unknown_62e58(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62eb1(i32) local_unnamed_addr

declare i32 @unknown_63323(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63390(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_633fd(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6346a(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_634d7(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63511(i32, i32) local_unnamed_addr

declare i32 @unknown_63544(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_635b1(i32) local_unnamed_addr

declare i32 @unknown_6360b(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63839(i32) local_unnamed_addr

declare i32 @unknown_63bac(i32) local_unnamed_addr

declare i32 @unknown_63bc8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63c5f(i32) local_unnamed_addr

declare i32 @unknown_63cfe(i32, i32) local_unnamed_addr

declare i32 @unknown_63d03(i32, i32) local_unnamed_addr

declare i32 @unknown_63e39(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63e9c(i32, i32) local_unnamed_addr

declare i32 @unknown_63fa6(i32, i32) local_unnamed_addr

declare i32 @unknown_6401c() local_unnamed_addr

declare i32 @unknown_6413e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64163(i32) local_unnamed_addr

declare i32 @unknown_641e3(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64312(i32) local_unnamed_addr

declare i32 @unknown_6437a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6460d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_647e8(i32) local_unnamed_addr

declare i32 @unknown_64a2f(i32) local_unnamed_addr

declare i32 @unknown_64a5c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64b02(i32) local_unnamed_addr

declare i32 @unknown_64b2f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64b3e(i32) local_unnamed_addr

declare i32 @unknown_64bd5(i32) local_unnamed_addr

declare i32 @unknown_64c86(i32) local_unnamed_addr

declare i32 @unknown_64d70(i32) local_unnamed_addr

declare i32 @unknown_64d9e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64dcb(i32) local_unnamed_addr

declare i32 @unknown_64e39() local_unnamed_addr

declare i32 @unknown_64e67(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64e8c(i32, i32) local_unnamed_addr

declare i32 @unknown_64f02(i32) local_unnamed_addr

declare i32 @unknown_64f30(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65018(i32) local_unnamed_addr

declare i32 @unknown_65045(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6512d(i32) local_unnamed_addr

declare i32 @unknown_6515a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65242(i32) local_unnamed_addr

declare i32 @unknown_65245(i32) local_unnamed_addr

declare i32 @unknown_6526f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6532b(i32) local_unnamed_addr

declare i32 @unknown_65358(i32) local_unnamed_addr

declare i32 @unknown_6541b(i32) local_unnamed_addr

declare i32 @unknown_65449(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65504(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_655e9(i32, i32) local_unnamed_addr

declare i32 @unknown_6562a(i32) local_unnamed_addr

declare i32 @unknown_65799(i32, i32) local_unnamed_addr

declare i32 @unknown_65834(i32, i32) local_unnamed_addr

declare i32 @unknown_6587c(i32, i32) local_unnamed_addr

declare i32 @unknown_65929(i32, i32) local_unnamed_addr

declare i32 @unknown_65966(i32) local_unnamed_addr

declare i32 @unknown_65a85(i32, i32) local_unnamed_addr

declare i32 @unknown_65aa4(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65ab5(i32, i32) local_unnamed_addr

declare i32 @unknown_65b11(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65b7e(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65beb(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65c58(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65cc5(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65cc9(i32, i32) local_unnamed_addr

declare i32 @unknown_65d32(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65d8c(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65e8a(i32) local_unnamed_addr

declare i32 @unknown_65e8e(i32, i32) local_unnamed_addr

declare i32 @unknown_65f76(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66237(i32) local_unnamed_addr

declare i32 @unknown_662ea(i32) local_unnamed_addr

declare i32 @unknown_66356(i32, i32) local_unnamed_addr

declare i32 @unknown_66448(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6657c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6665e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66736(i32) local_unnamed_addr

declare i32 @unknown_667c3(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66895(i32) local_unnamed_addr

declare i32 @unknown_66a39(i32) local_unnamed_addr

declare i32 @unknown_66bdd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66c2e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66c8c(i32, i32) local_unnamed_addr

declare i32 @unknown_66d70(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66e42(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66f14() local_unnamed_addr

declare i32 @unknown_66fe6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_670b8() local_unnamed_addr

declare i32 @unknown_6718a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_673b9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_674e9(i32) local_unnamed_addr

declare i32 @unknown_675eb(i32) local_unnamed_addr

declare i32 @unknown_67666(i32, i32) local_unnamed_addr

declare i32 @unknown_67701(i32) local_unnamed_addr

declare i32 @unknown_6776a(i32) local_unnamed_addr

declare i32 @unknown_67816(i32) local_unnamed_addr

declare i32 @unknown_67876(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67928(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6792b(i32) local_unnamed_addr

declare i32 @unknown_67934(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6795f(i32) local_unnamed_addr

declare i32 @unknown_679d2(i32, i32) local_unnamed_addr

declare i32 @unknown_67a14(i32) local_unnamed_addr

declare i32 @unknown_67a56(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67a74(i32) local_unnamed_addr

declare i32 @unknown_67adc(i32, i32) local_unnamed_addr

declare i32 @unknown_67b02(i32, i32) local_unnamed_addr

declare i32 @unknown_67b04(i32) local_unnamed_addr

declare i32 @unknown_67b24(i32, i32) local_unnamed_addr

declare i32 @unknown_67b89(i32) local_unnamed_addr

declare i32 @unknown_67bbc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67c72() local_unnamed_addr

declare i32 @unknown_67cdd(i32) local_unnamed_addr

declare i32 @unknown_67d38(i32) local_unnamed_addr

declare i32 @unknown_67d62(i32) local_unnamed_addr

declare i32 @unknown_67fde(i32) local_unnamed_addr

declare i32 @unknown_68060(i32, i32) local_unnamed_addr

declare i32 @unknown_682c3(i32) local_unnamed_addr

declare i32 @unknown_683c4(i32) local_unnamed_addr

declare i32 @unknown_68419(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68486(i32, i32) local_unnamed_addr

declare i32 @unknown_684da(i32) local_unnamed_addr

declare i32 @unknown_684f3(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68560(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68567(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_685cd(i32, i32) local_unnamed_addr

declare i32 @unknown_685ef(i32) local_unnamed_addr

declare i32 @unknown_6863a(i32, i32) local_unnamed_addr

declare i32 @unknown_686a7(i32, i32) local_unnamed_addr

declare i32 @unknown_68701(i32) local_unnamed_addr

declare i32 @unknown_68704(i32) local_unnamed_addr

declare i32 @unknown_687ed(i32) local_unnamed_addr

declare i32 @unknown_6889c(i32, i32) local_unnamed_addr

declare i32 @unknown_688dd(i32) local_unnamed_addr

declare i32 @unknown_68966(i32) local_unnamed_addr

declare i32 @unknown_68b29(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68c94(i32) local_unnamed_addr

declare i32 @unknown_68d66(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68e38(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68f0a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68fee(i32, i32) local_unnamed_addr

declare i32 @unknown_690ae(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69278(i32, i32) local_unnamed_addr

declare i32 @unknown_69286(i32) local_unnamed_addr

declare i32 @unknown_692e6(i32, i32) local_unnamed_addr

declare i32 @unknown_693f8(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69996(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69a64(i32) local_unnamed_addr

declare i32 @unknown_69aca(i32) local_unnamed_addr

declare i32 @unknown_69b87(i32) local_unnamed_addr

declare i32 @unknown_69c54(i32) local_unnamed_addr

declare i32 @unknown_69d6f(i32) local_unnamed_addr

declare i32 @unknown_69d8e(i32) local_unnamed_addr

declare i32 @unknown_69dbb(i32) local_unnamed_addr

declare i32 @unknown_69e85(i32) local_unnamed_addr

declare i32 @unknown_69eb1(i32) local_unnamed_addr

declare i32 @unknown_69f36(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69f73(i32, i32) local_unnamed_addr

declare i32 @unknown_6a02b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a0af(i32) local_unnamed_addr

declare i32 @unknown_6a0da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a197(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a198(i32) local_unnamed_addr

declare i32 @unknown_6a254(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a2cb(i32, i32) local_unnamed_addr

declare i32 @unknown_6a303(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a3b2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a510(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a5cd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a68a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a739(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a7e8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a8c8(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a930(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a9e2(i32, i32) local_unnamed_addr

declare i32 @unknown_6aa04(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ab12(i32, i32) local_unnamed_addr

declare i32 @unknown_6abb3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ad1a(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b1f1(i32, i32) local_unnamed_addr

declare i32 @unknown_6b259(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b421(i32) local_unnamed_addr

declare i32 @unknown_6b48c(i32) local_unnamed_addr

declare i32 @unknown_6b49f(i32) local_unnamed_addr

declare i32 @unknown_6b51e(i32) local_unnamed_addr

declare i32 @unknown_6b554(i32) local_unnamed_addr

declare i32 @unknown_6b5ce(i32) local_unnamed_addr

declare i32 @unknown_6b67c(i32) local_unnamed_addr

declare i32 @unknown_6b74e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b7af(i32) local_unnamed_addr

declare i32 @unknown_6b820(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b882(i32) local_unnamed_addr

declare i32 @unknown_6b8f2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b955(i32) local_unnamed_addr

declare i32 @unknown_6b9c4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ba28(i32) local_unnamed_addr

declare i32 @unknown_6ba96(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6baf0(i32) local_unnamed_addr

declare i32 @unknown_6bbb9(i32) local_unnamed_addr

declare i32 @unknown_6bbd0(i32, i32) local_unnamed_addr

declare i32 @unknown_6bc2a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bcd9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bd96(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bd98(i32) local_unnamed_addr

declare i32 @unknown_6be53(i32, i32) local_unnamed_addr

declare i32 @unknown_6bead(i32) local_unnamed_addr

declare i32 @unknown_6bf02(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bfb1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bfc2(i32) local_unnamed_addr

declare i32 @unknown_6c060(i32) local_unnamed_addr

declare i32 @unknown_6c0ab(i32) local_unnamed_addr

declare i32 @unknown_6c103(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c19b(i32) local_unnamed_addr

declare i32 @unknown_6c406(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c473(i32, i32) local_unnamed_addr

declare i32 @unknown_6c4cd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c78e(i32) local_unnamed_addr

declare i32 @unknown_6c81c(i32) local_unnamed_addr

declare i32 @unknown_6c966(i32) local_unnamed_addr

declare i32 @unknown_6c9f4(i32) local_unnamed_addr

declare i32 @unknown_6ca5e(i32, i32) local_unnamed_addr

declare i32 @unknown_6cacb(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6cb38(i32) local_unnamed_addr

declare i32 @unknown_6cba5(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6cc12(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ccec(i32, i32) local_unnamed_addr

declare i32 @unknown_6cd46(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ce09(i32) local_unnamed_addr

declare i32 @unknown_6ce36(i32) local_unnamed_addr

declare i32 @unknown_6d3a0(i32, i32) local_unnamed_addr

declare i32 @unknown_6d426(i32) local_unnamed_addr

declare i32 @unknown_6d4c8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6d56a(i32, i32) local_unnamed_addr

declare i32 @unknown_6d5b4(i32) local_unnamed_addr

declare i32 @unknown_6d5ea(i32, i32) local_unnamed_addr

declare i32 @unknown_6d642(i32) local_unnamed_addr

declare i32 @unknown_6d66a(i32, i32) local_unnamed_addr

declare i32 @unknown_6d6ea(i32, i32) local_unnamed_addr

declare i32 @unknown_6d76a(i32) local_unnamed_addr

declare i32 @unknown_6d80c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6d843(i32) local_unnamed_addr

declare i32 @unknown_6d8ae(i32, i32) local_unnamed_addr

declare i32 @unknown_6d8d4(i32) local_unnamed_addr

declare i32 @unknown_6d8e6(i32) local_unnamed_addr

declare i32 @unknown_6d901(i32) local_unnamed_addr

declare i32 @unknown_6d916(i32) local_unnamed_addr

declare i32 @unknown_6d92e(i32, i32) local_unnamed_addr

declare i32 @unknown_6d9e9(i32) local_unnamed_addr

declare i32 @unknown_6da2d(i32) local_unnamed_addr

declare i32 @unknown_6dabc(i32) local_unnamed_addr

declare i32 @unknown_6db5a(i32, i32) local_unnamed_addr

declare i32 @unknown_6db84(i32) local_unnamed_addr

declare i32 @unknown_6dbcc(i32, i32) local_unnamed_addr

declare i32 @unknown_6dc4d(i32) local_unnamed_addr

declare i32 @unknown_6dc5a(i32) local_unnamed_addr

declare i32 @unknown_6dd4b(i32, i32) local_unnamed_addr

declare i32 @unknown_6dda5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6de01(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6de67(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6decd(i32) local_unnamed_addr

declare i32 @unknown_6df22(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6dff4(i32, i32) local_unnamed_addr

declare i32 @unknown_6e4c6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e591(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e612(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e6ea() local_unnamed_addr

declare i32 @unknown_6e750(i32) local_unnamed_addr

declare i32 @unknown_6e7b5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e822(i32) local_unnamed_addr

declare i32 @unknown_6e864(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e921(i32, i32) local_unnamed_addr

declare i32 @unknown_6e9de(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ea8d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ebec(i32, i32) local_unnamed_addr

declare i32 @unknown_6ec6c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ed0e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6edb0() local_unnamed_addr

declare i32 @unknown_6ee36(i32, i32) local_unnamed_addr

declare i32 @unknown_6eeb6(i32, i32) local_unnamed_addr

declare i32 @unknown_6ef6a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f50b(i32, i32) local_unnamed_addr

declare i32 @unknown_6f5dd(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f6af(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f6da(i32) local_unnamed_addr

declare i32 @unknown_6f781(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f853(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f862(i32, i32) local_unnamed_addr

declare i32 @unknown_6f925(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fab8(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fb8a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fc5c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fd2e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fe00(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fed2(i32) local_unnamed_addr

declare i32 @unknown_700d8(i32) local_unnamed_addr

declare i32 @unknown_7016c(i32, i32) local_unnamed_addr

declare i32 @unknown_701ec(i32, i32) local_unnamed_addr

declare i32 @unknown_70344(i32, i32) local_unnamed_addr

declare i32 @unknown_703ca(i32, i32) local_unnamed_addr

declare i32 @unknown_704eb(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7072e(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_707df(i32) local_unnamed_addr

declare i32 @unknown_70814(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_708ec(i32) local_unnamed_addr

declare i32 @unknown_70921(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_70a5c(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_70b00(i32) local_unnamed_addr

declare i32 @unknown_70c10(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_70cc5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_70d11(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_71038(i32) local_unnamed_addr

declare i32 @unknown_710b8(i32, i32) local_unnamed_addr

declare i32 @unknown_7115a(i32, i32) local_unnamed_addr

declare i32 @unknown_711fc(i32, i32) local_unnamed_addr

declare i32 @unknown_7127c() local_unnamed_addr

declare i32 @unknown_712b2(i32) local_unnamed_addr

declare i32 @unknown_71302(i32, i32) local_unnamed_addr

declare i32 @unknown_71336(i32) local_unnamed_addr

declare i32 @unknown_713b8(i32, i32) local_unnamed_addr

declare i32 @unknown_71438(i32, i32) local_unnamed_addr

declare i32 @unknown_714b7(i32) local_unnamed_addr

declare i32 @unknown_715b5(i32, i32) local_unnamed_addr

declare i32 @unknown_71622(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7168f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_716fc(i32, i32) local_unnamed_addr

declare i32 @unknown_71769(i32, i32) local_unnamed_addr

declare i32 @unknown_71843(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7189d(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_71b88(i32) local_unnamed_addr

declare i32 @unknown_71e32(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_71ee1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_71f90(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7203f(i32) local_unnamed_addr

declare i32 @unknown_720e8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_72195(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_722fb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_723ba(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_72479(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_72538(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_725f7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_726b6(i32, i32) local_unnamed_addr

declare i32 @unknown_72814(i32) local_unnamed_addr

declare i32 @unknown_72a20(i32) local_unnamed_addr

declare i32 @unknown_72a82(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_72ac7(i32) local_unnamed_addr

declare i32 @unknown_72bd8(i32, i32) local_unnamed_addr

declare i32 @unknown_72e4e(i32, i32) local_unnamed_addr

declare i32 @unknown_73162(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_73254(i32) local_unnamed_addr

declare i32 @unknown_73282(i32) local_unnamed_addr

declare i32 @unknown_732c0(i32) local_unnamed_addr

declare i32 @unknown_7334e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_73414(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_73599(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_73666(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7381c(i32, i32) local_unnamed_addr

declare i32 @unknown_7389c(i32, i32) local_unnamed_addr

declare i32 @unknown_73951(i32) local_unnamed_addr

declare i32 @unknown_73a85(i32, i32) local_unnamed_addr

declare i32 @unknown_73abd(i32) local_unnamed_addr

declare i32 @unknown_73aec(i32, i32) local_unnamed_addr

declare i32 @unknown_73b76(i32, i32) local_unnamed_addr

declare i32 @unknown_73c48(i32) local_unnamed_addr

declare i32 @unknown_73d1a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_73dec(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_73ebd(i32) local_unnamed_addr

declare i32 @unknown_73ebe(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_73f90(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7416e(i32, i32) local_unnamed_addr

declare i32 @unknown_74206(i32, i32) local_unnamed_addr

declare i32 @unknown_7436c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_744d4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7463c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_747a4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_74894(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7498a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_74b12(i32, i32) local_unnamed_addr

declare i32 @unknown_74b4a(i32) local_unnamed_addr

declare i32 @unknown_74b79(i32, i32) local_unnamed_addr

declare i32 @unknown_74c03(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_74d26(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_74df0(i32) local_unnamed_addr

declare i32 @unknown_74e36(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_74ef0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_74f7e(i32) local_unnamed_addr

declare i32 @unknown_74fc6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7502c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_752f8(i32) local_unnamed_addr

declare i32 @unknown_7533e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_753f8(i32, i32) local_unnamed_addr

declare i32 @unknown_754cd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_75515(i32) local_unnamed_addr

declare i32 @unknown_7557b(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_759e8(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_75b0a(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_75c3a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_75d63(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_75ed1(i32, i32) local_unnamed_addr

declare i32 @unknown_75f09(i32) local_unnamed_addr

declare i32 @unknown_75f38(i32, i32) local_unnamed_addr

declare i32 @unknown_7605c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7610b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_76285(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7633a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_763e9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_76498(i32, i32) local_unnamed_addr

declare i32 @unknown_76530(i32, i32) local_unnamed_addr

declare i32 @unknown_76598(i32) local_unnamed_addr

declare i32 @unknown_76d70(i32) local_unnamed_addr

declare i32 @unknown_76dba(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_76eda(i32, i32) local_unnamed_addr

declare i32 @unknown_76f64(i32) local_unnamed_addr

declare i32 @unknown_76f99(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_77071(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7725d(i32, i32) local_unnamed_addr

declare i32 @unknown_772a7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_773c7(i32, i32) local_unnamed_addr

declare i32 @unknown_77451(i32) local_unnamed_addr

declare i32 @unknown_77486(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7755e(i32) local_unnamed_addr

declare i32 @unknown_7767e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_77982(i32, i32) local_unnamed_addr

declare i32 @unknown_77b61(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_77bc9(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_77cf9(i32, i32) local_unnamed_addr

declare i32 @unknown_77d06(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_783c8(i32) local_unnamed_addr

declare i32 @unknown_783fe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_784a0(i32) local_unnamed_addr

declare i32 @unknown_784d6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7855c(i32) local_unnamed_addr

declare i32 @unknown_78626(i32) local_unnamed_addr

declare i32 @unknown_7865c(i32, i32) local_unnamed_addr

declare i32 @unknown_788b9(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7893e(i32, i32) local_unnamed_addr

declare i32 @unknown_78c23(i32, i32) local_unnamed_addr

declare i32 @unknown_78caa(i32) local_unnamed_addr

declare i32 @unknown_78cdf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_78dc4(i32, i32) local_unnamed_addr

declare i32 @unknown_78e74(i32) local_unnamed_addr

declare i32 @unknown_78ed6(i32) local_unnamed_addr

declare i32 @unknown_78ef9(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_78f0b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_790c6(i32, i32) local_unnamed_addr

declare i32 @unknown_7914d(i32) local_unnamed_addr

declare i32 @unknown_79182(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_79267(i32, i32) local_unnamed_addr

declare i32 @unknown_79317(i32) local_unnamed_addr

declare i32 @unknown_7931b(i32) local_unnamed_addr

declare i32 @unknown_79379(i32) local_unnamed_addr

declare i32 @unknown_79473(i32) local_unnamed_addr

declare i32 @unknown_79569(i32, i32) local_unnamed_addr

declare i32 @unknown_795c9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_79625(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7968b(i32) local_unnamed_addr

declare i32 @unknown_796f1(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_79746(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_798c3(i32) local_unnamed_addr

declare i32 @unknown_79c9f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_79d63(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_79e28(i32, i32) local_unnamed_addr

declare i32 @unknown_79e88(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_79ee4(i32) local_unnamed_addr

declare i32 @unknown_79f77(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_79fde(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7a345(i32) local_unnamed_addr

declare i32 @unknown_7a5e8(i32) local_unnamed_addr

declare i32 @unknown_7a698(i32) local_unnamed_addr

declare i32 @unknown_7a748(i32) local_unnamed_addr

declare i32 @unknown_7a78e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7a848(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7a852(i32) local_unnamed_addr

declare i32 @unknown_7a863(i32) local_unnamed_addr

declare i32 @unknown_7a8d6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7a91e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7ac1c(i32) local_unnamed_addr

declare i32 @unknown_7ac62(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7ad1c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7adaa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7adf2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7ae75(i32) local_unnamed_addr

declare i32 @unknown_7b130(i32) local_unnamed_addr

declare i32 @unknown_7b22e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7b278(i32) local_unnamed_addr

declare i32 @unknown_7b2fd(i32, i32) local_unnamed_addr

declare i32 @unknown_7b421(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7b5d4(i32) local_unnamed_addr

declare i32 @unknown_7b625(i32) local_unnamed_addr

declare i32 @unknown_7b640(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7b70f(i32, i32) local_unnamed_addr

declare i32 @unknown_7b763(i32) local_unnamed_addr

declare i32 @unknown_7b86d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7ba9f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7bb10(i32) local_unnamed_addr

declare i32 @unknown_7bb77(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7bc38(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7bc49(i32) local_unnamed_addr

declare i32 @unknown_7bcdc(i32) local_unnamed_addr

declare i32 @unknown_7bcfc(i32) local_unnamed_addr

declare i32 @unknown_7bdec(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7be4c(i32, i32) local_unnamed_addr

declare i32 @unknown_7bee7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7c08f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7c167(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7c22a(i32) local_unnamed_addr

declare i32 @unknown_7c235(i32, i32) local_unnamed_addr

declare i32 @unknown_7c2a0(i32, i32) local_unnamed_addr

declare i32 @unknown_7c305(i32, i32) local_unnamed_addr

declare i32 @unknown_7c5b0(i32, i32) local_unnamed_addr

declare i32 @unknown_7c65f(i32, i32) local_unnamed_addr

declare i32 @unknown_7c6e9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7c8c1(i32, i32) local_unnamed_addr

declare i32 @unknown_7ca2b(i32, i32) local_unnamed_addr

declare i32 @unknown_7cab5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7cd4b(i32, i32) local_unnamed_addr

declare i32 @unknown_7cf5f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7d07f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7d1ae(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7d1df(i32, i32) local_unnamed_addr

declare i32 @unknown_7d2b5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7d40c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7d56a(i32, i32) local_unnamed_addr

declare i32 @unknown_7d5f1(i32) local_unnamed_addr

declare i32 @unknown_7d626(i32) local_unnamed_addr

declare i32 @unknown_7d65b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7d740(i32, i32) local_unnamed_addr

declare i32 @unknown_7d8b5(i32) local_unnamed_addr

declare i32 @unknown_7d93c(i32) local_unnamed_addr

declare i32 @unknown_7d971(i32) local_unnamed_addr

declare i32 @unknown_7da8b(i32, i32) local_unnamed_addr

declare i32 @unknown_7db3b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7dc00(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7dd71(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7df29(i32, i32) local_unnamed_addr

declare i32 @unknown_7e035(i32) local_unnamed_addr

declare i32 @unknown_7e0a1(i32) local_unnamed_addr

declare i32 @unknown_7e10d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7e1dc(i32, i32) local_unnamed_addr

declare i32 @unknown_7e231(i32) local_unnamed_addr

declare i32 @unknown_7e2d9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7e3e5(i32) local_unnamed_addr

declare i32 @unknown_7e451(i32) local_unnamed_addr

declare i32 @unknown_7e4bd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7e58c(i32, i32) local_unnamed_addr

declare i32 @unknown_7e5e0(i32) local_unnamed_addr

declare i32 @unknown_7e688(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7e7d3(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_7f046(i32) local_unnamed_addr

define i32 @function_2eb0000() local_unnamed_addr {
dec_label_pc_2eb0000:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_14eb0000() local_unnamed_addr {
dec_label_pc_14eb0000:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24548980() local_unnamed_addr {
dec_label_pc_24548980:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_448d7bc0() local_unnamed_addr {
dec_label_pc_448d7bc0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_58eb0000() local_unnamed_addr {
dec_label_pc_58eb0000:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_83011881() local_unnamed_addr {
dec_label_pc_83011881:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_89000164() local_unnamed_addr {
dec_label_pc_89000164:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_890001bb() local_unnamed_addr {
dec_label_pc_890001bb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_89ffffff() local_unnamed_addr {
dec_label_pc_89ffffff:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8d000131() local_unnamed_addr {
dec_label_pc_8d000131:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_bee951be() local_unnamed_addr {
dec_label_pc_bee951be:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_ec86dfd6() local_unnamed_addr {
dec_label_pc_ec86dfd6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 0, 1395, 1601, 1, 2, 3, 1602, 4, 5, 1396, 1603, 6, 7, 1397, 1759, 8, 1237, 1635, 256, 255, 9, 1398, 1604, 10, 11, 1399, 1605, 12, 1636, 13, 1963, 1964, 1494, 1855, 1856, 1413, 1495, 1637, 1638, 1212, 1213, 1639, 1640, 1857, 1858, 1496, 1497, 258, 257, 1859, 14, 1860, 1414, 1861, 1238, 1641, 1642, 1643, 1214, 15, 260, 259, 1862, 16, 1863, 262, 261, 17, 264, 263, 1864, 266, 265, 18, 19, 20, 2080, 1644, 1645, 1215, 1216, 1646, 1647, 1217, 1218, 1865, 1866, 1498, 1867, 1499, 268, 267, 2145, 1500, 1870, 1501, 270, 269, 1872, 272, 271, 274, 273, 276, 275, 1874, 21, 1502, 278, 277, 1503, 1504, 1505, 2102, 1648, 1239, 1649, 1240, 1876, 1506, 1241, 1650, 1879, 1694, 1695, 1696, 1507, 1796, 280, 279, 1508, 1885, 282, 281, 22, 284, 283, 1811, 286, 285, 2031, 23, 1886, 1509, 1606, 1887, 1800, 1888, 288, 287, 1889, 1890, 1891, 1510, 1511, 290, 289, 1833, 1834, 292, 291, 1651, 1893, 1894, 293, 1652, 2011, 1512, 24, 1812, 25, 1653, 1513, 1698, 1803, 1415, 1242, 1654, 1243, 1655, 295, 294, 297, 296, 299, 298, 1902, 1416, 1514, 301, 300, 303, 302, 305, 304, 307, 306, 309, 308, 311, 310, 26, 313, 312, 1824, 315, 314, 317, 316, 1827, 27, 1515, 1417, 28, 318, 319, 320, 2081, 29, 1854, 1418, 1244, 1656, 1245, 1912, 1913, 30, 1246, 1952, 1247, 1777, 1835, 1836, 1837, 1914, 1915, 322, 321, 1916, 31, 32, 33, 34, 35, 36, 37, 38, 39, 1917, 1918, 40, 1248, 1657, 1249, 1658, 1250, 1919, 1920, 1516, 1921, 41, 1922, 324, 323, 1923, 1517, 326, 325, 328, 327, 1749, 330, 329, 1729, 332, 331, 1297, 1296, 1298, 42, 1251, 1659, 1518, 2053, 43, 1519, 1400, 1419, 1660, 1520, 334, 333, 44, 1924, 1925, 1926, 336, 335, 1252, 1661, 1868, 45, 1253, 1869, 1254, 2095, 1255, 1785, 46, 1256, 1662, 47, 48, 1927, 2173, 1521, 1809, 2122, 1522, 338, 337, 1928, 1523, 49, 50, 1817, 340, 339, 342, 341, 344, 343, 1929, 1930, 1931, 51, 1524, 1525, 1526, 52, 53, 1934, 1935, 1663, 1257, 1664, 1258, 2165, 1527, 1259, 1873, 2167, 2166, 2168, 1528, 346, 345, 1260, 2169, 1261, 2170, 1529, 1530, 54, 1531, 2174, 1936, 1299, 1300, 1301, 55, 2177, 1302, 56, 348, 347, 1937, 1532, 1533, 1932, 1534, 57, 1535, 1420, 1806, 1807, 58, 59, 1536, 2143, 1537, 349, 350, 1941, 1940, 1607, 352, 351, 354, 353, 356, 355, 1942, 2154, 358, 357, 2179, 1538, 360, 359, 1665, 1666, 1667, 2155, 362, 361, 60, 1539, 1540, 364, 363, 1304, 1303, 366, 365, 1306, 1305, 367, 61, 62, 1541, 1946, 368, 1307, 1308, 1309, 370, 369, 1668, 372, 371, 1669, 1953, 1954, 1542, 1670, 1671, 1672, 1673, 1955, 1958, 1543, 1544, 374, 373, 1948, 1545, 1949, 1950, 1951, 1546, 1959, 1262, 1960, 1547, 1961, 63, 64, 1962, 1548, 1944, 1907, 65, 66, 375, 1965, 1549, 376, 67, 68, 69, 70, 1967, 1968, 1550, 378, 377, 1969, 380, 379, 1970, 1330, 1331, 1329, 1328, 1327, 1326, 1325, 1324, 1323, 1322, 1321, 1320, 1319, 1318, 1317, 1316, 1315, 1314, 1313, 1312, 1311, 1310, 1973, 1333, 1332, 382, 381, 1974, 384, 383, 386, 385, 388, 387, 1971, 1551, 1975, 1797, 1552, 1972, 1976, 1977, 1978, 1979, 1401, 250, 1980, 2090, 1816, 71, 72, 1802, 1553, 2163, 1554, 1674, 1675, 1676, 1982, 1421, 1983, 1334, 390, 389, 1677, 1422, 392, 391, 1984, 1335, 1336, 1337, 1338, 1339, 1340, 1555, 1341, 1342, 1343, 1344, 1345, 1346, 1986, 1987, 1556, 1988, 394, 393, 396, 395, 1933, 1989, 1557, 1990, 1991, 397, 1348, 1347, 1713, 73, 1558, 74, 1559, 399, 398, 1880, 401, 400, 403, 402, 405, 404, 407, 406, 75, 76, 409, 408, 1999, 1560, 411, 410, 1943, 413, 412, 1719, 1561, 415, 414, 417, 416, 2161, 251, 2162, 252, 1562, 1678, 1679, 1608, 1423, 419, 418, 421, 420, 1680, 2001, 77, 1681, 423, 422, 2005, 1805, 425, 424, 427, 426, 1609, 78, 429, 428, 79, 2006, 1424, 1682, 1683, 2008, 431, 430, 433, 432, 1939, 2009, 435, 434, 437, 436, 439, 438, 441, 440, 443, 442, 445, 444, 1350, 1349, 446, 1352, 1351, 448, 447, 450, 449, 452, 451, 1945, 454, 453, 2013, 1684, 1563, 456, 455, 80, 2018, 458, 457, 460, 459, 462, 461, 2020, 1353, 1354, 1355, 1356, 1357, 1358, 1564, 2024, 1360, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 464, 463, 466, 465, 468, 467, 470, 469, 1425, 472, 471, 1685, 1686, 1687, 1565, 1966, 1566, 474, 473, 476, 475, 478, 477, 81, 1263, 1688, 1264, 1689, 480, 479, 482, 481, 484, 483, 1690, 1691, 1367, 486, 485, 488, 487, 490, 489, 492, 491, 494, 493, 496, 495, 498, 497, 500, 499, 1692, 1693, 1697, 1699, 1265, 1700, 1266, 1981, 1701, 1567, 501, 1267, 1702, 1268, 1703, 1704, 1219, 1705, 503, 502, 1706, 1221, 1220, 505, 504, 507, 506, 509, 508, 511, 510, 513, 512, 1707, 1708, 515, 514, 1877, 82, 517, 516, 519, 518, 521, 520, 522, 1269, 1709, 1222, 1710, 1568, 524, 523, 1993, 83, 1956, 1957, 1569, 1882, 526, 525, 528, 527, 1899, 1900, 2030, 530, 529, 532, 531, 1901, 84, 534, 533, 1711, 1712, 536, 535, 538, 537, 1714, 1570, 1715, 1716, 1717, 1571, 85, 539, 541, 540, 2134, 543, 542, 1997, 2000, 86, 1718, 253, 2029, 544, 1720, 2002, 1572, 546, 545, 548, 547, 550, 549, 2048, 1721, 1722, 1723, 2049, 1573, 2007, 2176, 1574, 2056, 2057, 1724, 1224, 1223, 2059, 87, 2010, 1575, 1270, 1883, 1884, 2012, 88, 2061, 1426, 1368, 552, 551, 554, 553, 556, 555, 558, 557, 560, 559, 562, 561, 2019, 1576, 564, 563, 89, 1577, 566, 565, 568, 567, 570, 569, 572, 571, 1578, 2069, 2068, 574, 573, 576, 575, 578, 577, 580, 579, 1579, 2025, 582, 581, 584, 583, 1580, 585, 1725, 586, 1726, 1727, 587, 1728, 2028, 2075, 2032, 588, 2034, 590, 589, 592, 591, 1730, 1427, 2082, 2083, 1581, 1582, 2035, 2084, 594, 593, 1402, 1428, 2086, 2036, 1271, 1583, 90, 596, 595, 1584, 2037, 1370, 2038, 1369, 2039, 2040, 2041, 1291, 1429, 2042, 91, 598, 597, 2043, 600, 599, 2044, 602, 601, 604, 603, 1731, 1732, 1733, 1734, 1735, 606, 605, 1998, 608, 607, 610, 609, 1736, 1737, 1738, 1739, 1226, 1225, 612, 611, 2123, 1371, 2124, 1372, 1373, 1374, 92, 614, 613, 616, 615, 93, 1272, 1740, 618, 617, 620, 619, 1741, 622, 621, 2055, 1585, 1586, 624, 623, 626, 625, 1742, 2054, 628, 627, 1743, 1744, 1745, 2104, 2105, 2106, 2014, 1746, 1747, 1748, 630, 629, 2062, 2063, 2064, 2065, 94, 632, 631, 2109, 634, 633, 636, 635, 638, 637, 1403, 1430, 1750, 640, 639, 642, 641, 1751, 644, 643, 646, 645, 1752, 1753, 1754, 1404, 1755, 648, 647, 1756, 650, 649, 652, 651, 654, 653, 656, 655, 658, 657, 95, 2116, 1236, 2117, 2118, 1235, 2119, 2120, 660, 659, 662, 661, 664, 663, 1405, 1431, 1757, 2072, 2073, 2074, 1375, 1992, 1376, 1377, 1994, 1432, 1758, 666, 665, 1830, 96, 668, 667, 670, 669, 672, 671, 674, 673, 2087, 2085, 1846, 1847, 1848, 1587, 676, 675, 678, 677, 680, 679, 1760, 1761, 1762, 2067, 682, 681, 1763, 684, 683, 686, 685, 1764, 1765, 1766, 688, 687, 690, 689, 1406, 1433, 2146, 692, 691, 1767, 1768, 1769, 694, 693, 696, 695, 698, 697, 700, 699, 1770, 2147, 1771, 1772, 1773, 2088, 2089, 2148, 702, 701, 1774, 1775, 1776, 2149, 703, 705, 704, 707, 706, 1778, 1779, 1780, 709, 708, 711, 710, 1407, 1434, 1781, 713, 712, 1782, 1783, 1784, 2097, 2098, 2099, 2100, 2101, 1786, 1273, 1787, 1408, 1435, 1788, 2103, 715, 714, 1789, 1790, 1791, 717, 716, 1792, 1793, 1794, 1610, 1795, 2091, 2092, 1409, 2107, 1274, 1798, 718, 1799, 1275, 1292, 1378, 1293, 719, 1801, 1436, 721, 720, 722, 1379, 723, 1380, 724, 725, 1437, 1804, 727, 726, 2114, 729, 728, 730, 732, 731, 1808, 1810, 2125, 2126, 734, 733, 736, 735, 1438, 738, 737, 740, 739, 742, 741, 744, 743, 1439, 746, 745, 1813, 1227, 748, 747, 750, 749, 752, 751, 753, 755, 754, 757, 756, 1410, 1814, 1411, 1815, 759, 758, 761, 760, 763, 762, 1818, 1819, 765, 764, 1820, 767, 766, 769, 768, 770, 772, 771, 97, 774, 773, 776, 775, 1440, 778, 777, 1821, 1822, 780, 779, 781, 98, 783, 782, 785, 784, 1823, 1228, 787, 786, 789, 788, 790, 1825, 1826, 1828, 1829, 1831, 1832, 1588, 1611, 792, 791, 793, 795, 794, 797, 796, 1838, 1441, 1839, 1840, 799, 798, 1841, 1842, 1843, 800, 1844, 801, 1845, 803, 802, 1849, 805, 804, 807, 806, 1851, 1852, 1853, 1850, 99, 1947, 1612, 100, 809, 808, 101, 811, 810, 812, 814, 813, 816, 815, 102, 818, 817, 820, 819, 103, 822, 821, 104, 824, 823, 826, 825, 828, 827, 105, 830, 829, 106, 832, 831, 834, 833, 835, 837, 836, 839, 838, 841, 840, 107, 108, 109, 1381, 842, 110, 844, 843, 846, 845, 111, 848, 847, 850, 849, 852, 851, 854, 853, 856, 855, 1871, 858, 857, 860, 859, 862, 861, 112, 864, 863, 866, 865, 868, 867, 870, 869, 113, 872, 871, 874, 873, 876, 875, 114, 878, 877, 880, 879, 1875, 1995, 1996, 882, 881, 115, 884, 883, 886, 885, 116, 117, 888, 887, 890, 889, 892, 891, 118, 1412, 1878, 119, 894, 893, 896, 895, 120, 898, 897, 1881, 121, 900, 899, 122, 902, 901, 1442, 1443, 1444, 1892, 123, 124, 1895, 1896, 1897, 1898, 2133, 904, 903, 125, 1589, 1590, 1591, 126, 1445, 1592, 906, 905, 1446, 1903, 1904, 1593, 127, 1447, 1905, 1906, 1594, 908, 907, 910, 909, 1908, 912, 911, 1909, 1910, 1448, 1911, 1229, 1613, 128, 129, 913, 914, 916, 915, 1614, 1449, 130, 1595, 917, 131, 132, 919, 918, 921, 920, 1450, 1615, 1616, 133, 923, 922, 925, 924, 927, 926, 929, 928, 134, 135, 931, 930, 136, 933, 932, 935, 934, 937, 936, 938, 137, 1938, 138, 940, 939, 942, 941, 139, 140, 944, 943, 946, 945, 141, 947, 948, 950, 949, 951, 1230, 142, 143, 953, 952, 955, 954, 957, 956, 144, 145, 146, 959, 958, 147, 961, 960, 148, 963, 962, 965, 964, 149, 966, 150, 967, 151, 969, 968, 971, 970, 152, 973, 972, 975, 974, 976, 978, 977, 980, 979, 982, 981, 984, 983, 153, 986, 985, 154, 155, 988, 987, 990, 989, 156, 992, 991, 994, 993, 157, 996, 995, 158, 159, 160, 998, 997, 161, 1000, 999, 1002, 1001, 162, 163, 1985, 1003, 1005, 1004, 164, 1007, 1006, 165, 1009, 1008, 1011, 1010, 166, 1013, 1012, 167, 168, 1015, 1014, 169, 170, 171, 1017, 1016, 172, 173, 1019, 1018, 1020, 1022, 1021, 1024, 1023, 1596, 1026, 1025, 1382, 2004, 2003, 1597, 1028, 1027, 174, 175, 176, 177, 178, 179, 180, 1030, 1029, 1032, 1031, 1034, 1033, 181, 1036, 1035, 182, 183, 184, 2015, 2016, 2017, 1038, 1037, 1040, 1039, 1042, 1041, 1044, 1043, 185, 186, 187, 1598, 1046, 1045, 1599, 1048, 1047, 1600, 188, 1049, 189, 1051, 1050, 190, 2021, 1276, 1277, 2023, 191, 2022, 1232, 1231, 1278, 1279, 1280, 2027, 2026, 192, 1053, 1052, 1055, 1054, 1056, 193, 1057, 194, 2033, 195, 196, 1059, 1058, 1061, 1060, 197, 198, 1063, 1062, 1065, 1064, 199, 1067, 1066, 200, 1069, 1068, 1071, 1070, 1073, 1072, 201, 202, 1075, 1074, 1077, 1076, 203, 1079, 1078, 204, 205, 206, 1081, 1080, 207, 1083, 1082, 1085, 1084, 208, 209, 1087, 1086, 210, 211, 212, 213, 214, 215, 216, 1089, 1088, 217, 218, 219, 1091, 1090, 1093, 1092, 1095, 1094, 220, 1097, 1096, 221, 1099, 1098, 1101, 1100, 1103, 1102, 222, 1105, 1104, 1451, 223, 2045, 2046, 1106, 2047, 1383, 2180, 224, 1107, 225, 226, 1109, 1108, 227, 2050, 2051, 2052, 1452, 1453, 1454, 1455, 1111, 1110, 228, 229, 1456, 1457, 1113, 1112, 2058, 2060, 1115, 1114, 2066, 1117, 1116, 1458, 1459, 1460, 1119, 1118, 1461, 1462, 1121, 1120, 2178, 230, 1122, 1124, 1123, 1126, 1125, 1128, 1127, 231, 232, 233, 1129, 1281, 1130, 2171, 2070, 2071, 1294, 1463, 1617, 234, 1618, 1282, 2076, 1619, 1283, 2077, 2078, 1132, 1131, 235, 2079, 1133, 1492, 1493, 236, 1135, 1134, 1620, 1464, 1465, 1137, 1136, 1139, 1138, 1141, 1140, 1143, 1142, 1145, 1144, 2093, 2094, 2096, 1147, 1146, 1149, 1148, 1151, 1150, 1468, 1466, 1467, 1469, 1470, 1471, 1153, 1152, 1472, 1155, 1154, 1157, 1156, 2108, 1159, 1158, 1161, 1160, 1163, 1162, 1621, 1165, 1164, 1622, 1167, 1166, 1623, 1284, 2110, 1285, 2111, 1169, 1168, 1171, 1170, 237, 2112, 1173, 1172, 2113, 1175, 1174, 1177, 1176, 1179, 1178, 1181, 1180, 2115, 1183, 1182, 1185, 1184, 1187, 1186, 1188, 2121, 2127, 2128, 1190, 1189, 2129, 2130, 1192, 1191, 1194, 1193, 1196, 1195, 2131, 1198, 1197, 1200, 1199, 2132, 2135, 1202, 1201, 2137, 2136, 1204, 1203, 2138, 1233, 1206, 1205, 2140, 2139, 1234, 1208, 1207, 1210, 1209, 1211, 2141, 1624, 1473, 238, 2142, 1625, 1474, 1384, 1475, 1295, 1476, 1288, 1286, 239, 1626, 1287, 1385, 1289, 1386, 1387, 1477, 1478, 1388, 1290, 1389, 1390, 1479, 1627, 2164, 240, 241, 1480, 1481, 1391, 1628, 1629, 1630, 1631, 1632, 1482, 242, 2172, 1483, 1392, 1484, 1485, 243, 2175, 244, 254, 245, 2144, 246, 2150, 1486, 2151, 247, 2152, 1633, 248, 2153, 1487, 2156, 249, 2181, 1393, 2182, 2183, 2184, 2185, 2186, 2187, 1394, 2188, 2189, 2157, 2158, 2159, 2160, 1634, 1488, 1489, 1490, 1491, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197 }
  uselistorder i32* @eax, {}
}

declare i32 @unknown_558e130a(i32) local_unnamed_addr

declare i32 @unknown_3be66324() local_unnamed_addr

declare i32 @unknown_890002c4(i32) local_unnamed_addr

declare i32 @unknown_8b000168(i32) local_unnamed_addr

declare i32 @unknown_e8266138() local_unnamed_addr

declare i32 @unknown_e90000e6(i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

declare i32 @__asm_insd(i16) local_unnamed_addr

declare void @__asm_outsb(i16, i8) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
